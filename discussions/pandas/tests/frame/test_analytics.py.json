[
  {
    "id" : "3a03cd9a-4daa-4aca-b835-17439fc90713",
    "prId" : 17630,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/17630#pullrequestreview-66346770",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "26a51410-155d-4bc9-b955-25ce501b6c92",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "is this related ?",
        "createdAt" : "2017-10-01T20:10:16Z",
        "updatedAt" : "2017-10-10T03:17:49Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "042be53e-7d07-4837-b94f-2fc4d19ce712",
        "parentId" : "26a51410-155d-4bc9-b955-25ce501b6c92",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "no I think was un-xfailing a test and that's all it needed IIRC.",
        "createdAt" : "2017-10-01T20:50:38Z",
        "updatedAt" : "2017-10-10T03:17:49Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "3db01c9635a6439e55dcbde05323e487e4dd5cad",
    "line" : 152,
    "diffHunk" : "@@ -1,1 +1864,1868 @@                        'B': [1., np.nan, 3.]})\n        result = df.clip(1, 2)\n        expected = DataFrame({'A': [1, 2, 2.],\n                              'B': [1., np.nan, 2.]})\n        tm.assert_frame_equal(result, expected, check_like=True)"
  },
  {
    "id" : "31a2e378-073e-45da-8496-f02c5aa10b6d",
    "prId" : 18576,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/18576#pullrequestreview-83191257",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "103c9276-800f-43dd-8023-3b7d15aef79d",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "add a 1-liner explaining this is testing non-mutataion of the input data",
        "createdAt" : "2017-12-13T14:39:26Z",
        "updatedAt" : "2017-12-14T11:30:06Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "caa3fa96c5aec3525c91e6f85c3fcdbe9eb22eb4",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +2217,2221 @@\n    def test_series_nat_conversion(self):\n        # GH 18521\n        # Check rank does not mutate DataFrame\n        df = DataFrame(np.random.randn(10, 3), dtype='float64')"
  },
  {
    "id" : "f5da1c1b-8e2c-4636-baa1-d4685ad52f86",
    "prId" : 21921,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/21921#pullrequestreview-137441301",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0593d437-9b0d-4112-a787-0c0a593ee584",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you comment under the commit number what this is testing\r\n\r\nuse \r\n```\r\nresult = \r\nexpected = \r\ntm.assert_frame_equal(....)\r\n```\r\n\r\ndo the tests in order for axis=0, axis=0, IOW so you don't have the df1, df2 variables",
        "createdAt" : "2018-07-16T11:15:03Z",
        "updatedAt" : "2018-07-18T10:23:01Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "d50d1018-a835-4bf7-9a75-2c6551cd2039",
        "parentId" : "0593d437-9b0d-4112-a787-0c0a593ee584",
        "authorId" : "5d486e53-1409-4c5f-9cac-03c066f838b9",
        "body" : "Amended. Your format is better. Thanks.",
        "createdAt" : "2018-07-16T14:06:41Z",
        "updatedAt" : "2018-07-18T10:23:01Z",
        "lastEditedBy" : "5d486e53-1409-4c5f-9cac-03c066f838b9",
        "tags" : [
        ]
      }
    ],
    "commit" : "0ef2e4d8d3a703f421f563b6a40f9748ab124825",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +1863,1867 @@                              self.frame)\n\n        # GH #19992\n        df = DataFrame({'col_0': [1, 2, 3], 'col_1': [4, 5, 6],\n                        'col_2': [7, 8, 9]})"
  },
  {
    "id" : "85a83028-226a-4ef4-9885-b93850a0b93d",
    "prId" : 22093,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22093#pullrequestreview-141316308",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d6c7485d-4f3a-49e1-b8b1-664b16409460",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "should make this a fixture",
        "createdAt" : "2018-07-28T12:48:29Z",
        "updatedAt" : "2018-07-28T16:31:12Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "d7d2e265c2b2fca06f432ae9cdd3c9288469a1d6",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +75,79 @@\n    @td.skip_if_no_scipy\n    @pytest.mark.parametrize('meth', ['pearson', 'kendall', 'spearman'])\n    def test_corr_nooverlap(self, meth):\n        # nothing in common"
  },
  {
    "id" : "87fda5e5-27d9-4a47-add4-8ebebd3093f8",
    "prId" : 22093,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22093#pullrequestreview-141623576",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cf835963-5129-49ff-9e42-1ffecf8c9ffc",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "do we have these as fixtures?",
        "createdAt" : "2018-07-28T12:48:41Z",
        "updatedAt" : "2018-07-28T16:31:12Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "83f68c43-54a0-49a4-a90a-699d10a2429d",
        "parentId" : "cf835963-5129-49ff-9e42-1ffecf8c9ffc",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Not AFAICT",
        "createdAt" : "2018-07-28T16:30:20Z",
        "updatedAt" : "2018-07-28T16:31:12Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "7ee84414-997b-4b6a-b978-deda036c4062",
        "parentId" : "cf835963-5129-49ff-9e42-1ffecf8c9ffc",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "cython_table_items yields these (well it yields them all, maybe need to make a subset)",
        "createdAt" : "2018-07-29T15:42:38Z",
        "updatedAt" : "2018-07-29T15:42:39Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "d4cbf51b-d21f-4d25-9c1b-2a0c02ce3c5b",
        "parentId" : "cf835963-5129-49ff-9e42-1ffecf8c9ffc",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "> well it yields them all, maybe need to make a subset\r\n\r\nConsider:\r\n\r\n```\r\n@pytest.mark.parametrize('op', SPECIFIC_EXPLICIT_LIST)\r\ndef test_thing(self, op):\r\n\r\ndef test_thing(self, cython_table_items):\r\n     if cython_table_items not in SPECIFIC_EXPLICIT_LIST:\r\n          return\r\n```\r\n\r\nThere are good use cases for fixtures, this isn't near the top of that list.",
        "createdAt" : "2018-07-30T16:53:47Z",
        "updatedAt" : "2018-07-30T16:53:47Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "d7d2e265c2b2fca06f432ae9cdd3c9288469a1d6",
    "line" : 53,
    "diffHunk" : "@@ -1,1 +659,663 @@            axis=1, numeric_only=False))\n\n    @pytest.mark.parametrize('op', ['mean', 'std', 'var',\n                                    'skew', 'kurt', 'sem'])\n    def test_mixed_ops(self, op):"
  },
  {
    "id" : "1a1e8e38-3f1d-4a5e-b822-064a10bb8608",
    "prId" : 22375,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22375#pullrequestreview-188365459",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8864902a-af14-41c5-8d82-e4b7db5a0343",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you add an example with an empty frame.",
        "createdAt" : "2018-12-27T00:18:09Z",
        "updatedAt" : "2018-12-30T22:51:24Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "a4482313-480c-47bb-ae5d-9e0cbcac2328",
        "parentId" : "8864902a-af14-41c5-8d82-e4b7db5a0343",
        "authorId" : "c450dd54-d24d-43a8-b896-c2c9af46ca18",
        "body" : "A test to ensure that the output is an empty `Series` (with the proper index)?",
        "createdAt" : "2018-12-28T20:35:42Z",
        "updatedAt" : "2018-12-30T22:51:24Z",
        "lastEditedBy" : "c450dd54-d24d-43a8-b896-c2c9af46ca18",
        "tags" : [
        ]
      }
    ],
    "commit" : "870d1a3f7a85cd15e3d2b6e8ed0779deda14ce49",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +469,473 @@    def test_corrwith_dup_cols(self):\n        # GH 21925\n        df1 = pd.DataFrame(np.vstack([np.arange(10)] * 3).T)\n        df2 = df1.copy()\n        df2 = pd.concat((df2, df2[0]), axis=1)"
  }
]