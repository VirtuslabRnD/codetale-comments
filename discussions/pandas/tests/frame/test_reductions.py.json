[
  {
    "id" : "2c3532f9-3ed1-4bc8-8913-d95d4a2dc9d3",
    "prId" : 37827,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/37827#pullrequestreview-530590426",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "188cbc13-a150-4d52-87de-c9975173e0d7",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "blank line here",
        "createdAt" : "2020-11-14T17:00:09Z",
        "updatedAt" : "2020-11-14T18:33:04Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "15381ce9e195c57f031e4ecb9e604f60f218bc88",
    "line" : 39,
    "diffHunk" : "@@ -1,1 +1323,1327 @@            getattr(ser, method)()\n\n        with pytest.raises(TypeError, match=\"does not implement reduction\"):\n            getattr(np, method)(ser)\n"
  },
  {
    "id" : "d0efb4a5-d363-4a4a-9a7d-5aaccde25828",
    "prId" : 37827,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/37827#pullrequestreview-530590426",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7c9863b7-8f6b-4cca-8d65-b77b007f3faf",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "blank line",
        "createdAt" : "2020-11-14T17:00:22Z",
        "updatedAt" : "2020-11-14T18:33:04Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "15381ce9e195c57f031e4ecb9e604f60f218bc88",
    "line" : 94,
    "diffHunk" : "@@ -1,1 +1378,1382 @@            getattr(ser, method)()\n\n        with pytest.raises(TypeError, match=\"is not ordered for operation\"):\n            getattr(np, method)(ser)\n"
  },
  {
    "id" : "708a4ed5-be93-4b79-ae1f-7b1b6e20e2d8",
    "prId" : 40795,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/40795#pullrequestreview-631333530",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fe396f85-4649-41a3-a4ed-d31b362faf01",
        "parentId" : null,
        "authorId" : "2393de1d-e145-40f2-85ac-13c36f13a76c",
        "body" : "Add comment for the issue as the first line of the test, e.g. # GH 40346",
        "createdAt" : "2021-04-08T02:46:38Z",
        "updatedAt" : "2021-04-14T00:53:40Z",
        "lastEditedBy" : "2393de1d-e145-40f2-85ac-13c36f13a76c",
        "tags" : [
        ]
      },
      {
        "id" : "93d1cdc6-0470-453a-8315-3fa8db782dc9",
        "parentId" : "fe396f85-4649-41a3-a4ed-d31b362faf01",
        "authorId" : "4c87da7c-3683-4b5f-bec0-d3b09746cab3",
        "body" : "thanks @rhshadrach , I'll put in these changes.",
        "createdAt" : "2021-04-08T12:31:18Z",
        "updatedAt" : "2021-04-14T00:53:40Z",
        "lastEditedBy" : "4c87da7c-3683-4b5f-bec0-d3b09746cab3",
        "tags" : [
        ]
      }
    ],
    "commit" : "1403c586da1504210d91eda50fe7d73cbab9cda7",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +1032,1036 @@    def test_idxmax_idxmin_convert_dtypes(self, op, expected_value):\n        # GH 40346\n        df = DataFrame(\n            {\n                \"ID\": [100, 100, 100, 200, 200, 200],"
  },
  {
    "id" : "364a57aa-91ad-4e24-96ba-076b5e474c45",
    "prId" : 41102,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/41102#pullrequestreview-642749508",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8e318054-b719-4011-a9d0-36acfed34475",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "so this is trying to match numpy? do we need this anymore?",
        "createdAt" : "2021-04-22T19:33:09Z",
        "updatedAt" : "2021-05-05T23:42:31Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "6fbbc6a2-9eaa-4e1f-80b6-806df5385d05",
        "parentId" : "8e318054-b719-4011-a9d0-36acfed34475",
        "authorId" : "5c5b3e8f-505d-4592-b7d0-03291400d46a",
        "body" : "I doubt the original purpose was matching numpy, probably more for adding tests without having to hardcode an expected result. For now I modified this slightly to remove the need for the xfail, but probably could be removed (there's coverage, but it's scattered).",
        "createdAt" : "2021-04-22T22:42:30Z",
        "updatedAt" : "2021-05-05T23:42:31Z",
        "lastEditedBy" : "5c5b3e8f-505d-4592-b7d0-03291400d46a",
        "tags" : [
        ]
      }
    ],
    "commit" : "c1f532637682775293c918b792fed0438eeea416",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +1073,1077 @@        )\n\n    @pytest.mark.parametrize(\"opname\", [\"any\", \"all\"])\n    def test_any_all_bool_frame(self, opname, bool_frame_with_na):\n        # GH#12863: numpy gives back non-boolean data for object type"
  },
  {
    "id" : "5a755124-537d-4343-aafc-6e856e3a3e8c",
    "prId" : 41102,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/41102#pullrequestreview-642749687",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fbd0d1c3-ae9d-4db6-8301-3cb38f1eacbd",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "do we have testing of the skipna=True",
        "createdAt" : "2021-04-22T19:33:37Z",
        "updatedAt" : "2021-05-05T23:42:31Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "cd5e959b-fe9a-40ac-b32a-e54f10f217e2",
        "parentId" : "fbd0d1c3-ae9d-4db6-8301-3cb38f1eacbd",
        "authorId" : "5c5b3e8f-505d-4592-b7d0-03291400d46a",
        "body" : "Some scattered testing elsewhere, added `skipna` parameterization in this test",
        "createdAt" : "2021-04-22T22:42:54Z",
        "updatedAt" : "2021-05-05T23:42:31Z",
        "lastEditedBy" : "5c5b3e8f-505d-4592-b7d0-03291400d46a",
        "tags" : [
        ]
      }
    ],
    "commit" : "c1f532637682775293c918b792fed0438eeea416",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +1113,1117 @@        assert result is True\n\n    @pytest.mark.parametrize(\"axis\", [0, 1])\n    @pytest.mark.parametrize(\"bool_agg_func\", [\"any\", \"all\"])\n    @pytest.mark.parametrize(\"skipna\", [True, False])"
  }
]