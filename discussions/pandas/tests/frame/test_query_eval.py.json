[
  {
    "id" : "ecef0210-ec64-465e-ad54-c4de8be06d7b",
    "prId" : 16201,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/16201#pullrequestreview-36177286",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8d3b5dd8-212a-4686-9cb0-b37819682011",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "you can actually do this with a fixture skip, but no big deal really",
        "createdAt" : "2017-05-04T02:02:34Z",
        "updatedAt" : "2017-05-04T02:02:34Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "7bed86a461abcd005311e2419417c25901566b60",
    "line" : 71,
    "diffHunk" : "@@ -1,1 +318,322 @@    def test_query_with_partially_named_multiindex(self, parser, engine):\n        tm.skip_if_no_ne(engine)\n        skip_if_no_pandas_parser(parser)\n        a = np.random.choice(['red', 'green'], size=10)\n        b = np.arange(10)"
  },
  {
    "id" : "9e736c24-7266-42fa-a6be-50238e0208f8",
    "prId" : 28215,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/28215#pullrequestreview-318058234",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f8dcbfd2-c965-45be-b8a2-0f98ef34a3fc",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you create a new test class (and move all of the quoting testst here)",
        "createdAt" : "2019-11-17T22:57:08Z",
        "updatedAt" : "2020-01-04T16:42:51Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "70dd5738-72d0-4746-a7b2-9bda97bd84c6",
        "parentId" : "f8dcbfd2-c965-45be-b8a2-0f98ef34a3fc",
        "authorId" : "d4b4f9ca-b436-4124-a7fb-909146d22e2c",
        "body" : "All my tests regarding quoting are already in one class: TestDataFrameQueryBacktickQuoting",
        "createdAt" : "2019-11-17T23:31:51Z",
        "updatedAt" : "2020-01-04T16:42:51Z",
        "lastEditedBy" : "d4b4f9ca-b436-4124-a7fb-909146d22e2c",
        "tags" : [
        ]
      },
      {
        "id" : "7faf1520-0d1a-47ca-bcce-3f11686e514b",
        "parentId" : "f8dcbfd2-c965-45be-b8a2-0f98ef34a3fc",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "k great",
        "createdAt" : "2019-11-18T00:29:31Z",
        "updatedAt" : "2020-01-04T16:42:51Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "3fc1bdd57544fc7241ae73dd2832eb958747efc9",
    "line" : 44,
    "diffHunk" : "@@ -1,1 +1119,1123 @@        expect = df[\"A\"] + df[\"C_C\"]\n        tm.assert_series_equal(res, expect)\n\n    def test_special_characters(self, df):\n        res = df.eval(\"`E.E` + `F-F` - A\")"
  },
  {
    "id" : "5af6f94e-8b82-440f-86ff-60c8865796d8",
    "prId" : 28215,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/28215#pullrequestreview-322320613",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fbf03f2a-bb2a-49d5-8c0a-28b9bae6a87b",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you add a doc-string to this fixture, saying these are all valid backtick quoted strings",
        "createdAt" : "2019-11-20T13:18:45Z",
        "updatedAt" : "2020-01-04T16:42:51Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "6295924a-dc6f-4343-a834-c6a21e33da69",
        "parentId" : "fbf03f2a-bb2a-49d5-8c0a-28b9bae6a87b",
        "authorId" : "d4b4f9ca-b436-4124-a7fb-909146d22e2c",
        "body" : "OK",
        "createdAt" : "2019-11-25T14:33:47Z",
        "updatedAt" : "2020-01-04T16:42:51Z",
        "lastEditedBy" : "d4b4f9ca-b436-4124-a7fb-909146d22e2c",
        "tags" : [
        ]
      }
    ],
    "commit" : "3fc1bdd57544fc7241ae73dd2832eb958747efc9",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +1059,1063 @@                \"B B\": [3, 2, 1],\n                \"C C\": [4, 5, 6],\n                \"C  C\": [7, 4, 3],\n                \"C_C\": [8, 9, 10],\n                \"D_D D\": [11, 1, 101],"
  },
  {
    "id" : "c141ced1-a5f7-426b-91d0-d4643f7f1556",
    "prId" : 32460,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/32460#pullrequestreview-408756777",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "620ba4b4-c25b-4063-b71f-e584b82a81ad",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you add the issue number here as a comment.",
        "createdAt" : "2020-05-10T15:42:33Z",
        "updatedAt" : "2020-05-10T17:52:25Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "b41c3971f56fe640b9946045a743e863c7273639",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +1191,1195 @@        \"\"\"\n\n        def func(*_):\n            return 1\n"
  },
  {
    "id" : "f8da7e4c-88b1-45f4-9210-25e247a56119",
    "prId" : 34021,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/34021#pullrequestreview-406979339",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d476cc02-ae81-411e-9d99-ef51efc989a7",
        "parentId" : null,
        "authorId" : "888173f2-4a00-44f2-b380-bc6a5ca76385",
        "body" : "Like this, `time` is always greater than `2018-01-03 00:00:00+00` - I think @mroeschke was suggesting to use, say, `2019-01-04` in `expected`, `2019-01-01` in `df`, and then `2019-01-03` in `query`",
        "createdAt" : "2020-05-06T20:24:03Z",
        "updatedAt" : "2020-05-20T05:02:04Z",
        "lastEditedBy" : "888173f2-4a00-44f2-b380-bc6a5ca76385",
        "tags" : [
        ]
      },
      {
        "id" : "46dde033-ae22-49d4-abf1-9395e52bf4e2",
        "parentId" : "d476cc02-ae81-411e-9d99-ef51efc989a7",
        "authorId" : "88a252f2-f0c7-493d-90d5-0abb1a1c62e5",
        "body" : "@MarcoGorelli  Thank you for the comment / appreciation.\r\n\r\nIf we use 2019-01-03 in query it results in earlier problem , because the shape of \"expected\" and \"df\" remains the same also their tz is changing , but in query the tz remains constant and when we query it to diff timezone their shape becomes inconsistent as the query tz  is always constant. (So it always result in +1 or -1 records and hence fails.)\r\n\r\nHence I think he suggested to use 2018-01-03 , as it will always result in consistent shape while checking tz-aware for all time zones.\r\n\r\n![Screenshot 2020-05-07 at 02 01 14](https://user-images.githubusercontent.com/6196315/81225414-d078c280-9006-11ea-9979-ab6bf91a0353.png)\r\n",
        "createdAt" : "2020-05-06T20:39:39Z",
        "updatedAt" : "2020-05-20T05:02:04Z",
        "lastEditedBy" : "88a252f2-f0c7-493d-90d5-0abb1a1c62e5",
        "tags" : [
        ]
      },
      {
        "id" : "a095d04f-e40f-424a-bc9a-d69e87c22857",
        "parentId" : "d476cc02-ae81-411e-9d99-ef51efc989a7",
        "authorId" : "888173f2-4a00-44f2-b380-bc6a5ca76385",
        "body" : "Ah sorry I'd misunderstood, thanks!",
        "createdAt" : "2020-05-06T20:42:38Z",
        "updatedAt" : "2020-05-20T05:02:04Z",
        "lastEditedBy" : "888173f2-4a00-44f2-b380-bc6a5ca76385",
        "tags" : [
        ]
      },
      {
        "id" : "2be8eb8a-f3b7-46f8-a040-ece63f7e748c",
        "parentId" : "d476cc02-ae81-411e-9d99-ef51efc989a7",
        "authorId" : "888173f2-4a00-44f2-b380-bc6a5ca76385",
        "body" : "In that case, it seems that your index for both `df` and `expected` are identical - if so, can you make a variable to share them?",
        "createdAt" : "2020-05-06T20:43:41Z",
        "updatedAt" : "2020-05-20T05:02:04Z",
        "lastEditedBy" : "888173f2-4a00-44f2-b380-bc6a5ca76385",
        "tags" : [
        ]
      },
      {
        "id" : "f43457f6-4d4b-4c8d-8a60-404c06062132",
        "parentId" : "d476cc02-ae81-411e-9d99-ef51efc989a7",
        "authorId" : "88a252f2-f0c7-493d-90d5-0abb1a1c62e5",
        "body" : "\r\nDone ! Thanks.",
        "createdAt" : "2020-05-06T20:55:03Z",
        "updatedAt" : "2020-05-20T05:02:04Z",
        "lastEditedBy" : "88a252f2-f0c7-493d-90d5-0abb1a1c62e5",
        "tags" : [
        ]
      }
    ],
    "commit" : "986cadd7bec197d804f5f34f0d784d2c84925a99",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +704,708 @@        expected = pd.DataFrame(index=df_index)\n        df = pd.DataFrame(index=df_index)\n        result = df.query('\"2018-01-03 00:00:00+00\" < time')\n        tm.assert_frame_equal(result, expected)\n"
  },
  {
    "id" : "0b191e53-385e-40ff-bc43-71b533c4fb08",
    "prId" : 34021,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/34021#pullrequestreview-407826250",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5c30227a-d842-44e4-a2ff-9d1dac7d006c",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you also test the working case here, e.g. ```result = df.reset_index().query(....)```",
        "createdAt" : "2020-05-07T16:16:20Z",
        "updatedAt" : "2020-05-20T05:02:04Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "7a8ecac9-8d6a-4970-b905-ee6f89831c0f",
        "parentId" : "5c30227a-d842-44e4-a2ff-9d1dac7d006c",
        "authorId" : "88a252f2-f0c7-493d-90d5-0abb1a1c62e5",
        "body" : "@jreback  Done. Please review.",
        "createdAt" : "2020-05-07T19:59:42Z",
        "updatedAt" : "2020-05-20T05:02:04Z",
        "lastEditedBy" : "88a252f2-f0c7-493d-90d5-0abb1a1c62e5",
        "tags" : [
        ]
      },
      {
        "id" : "5d5df639-7d88-4de5-8a5d-090f2b0a42b6",
        "parentId" : "5c30227a-d842-44e4-a2ff-9d1dac7d006c",
        "authorId" : "888173f2-4a00-44f2-b380-bc6a5ca76385",
        "body" : "@vipinkjonwal thanks for your updates\r\n\r\nLike this, what's the difference between `df2.set_index(\"time\")` and `df`?\r\n\r\nI think Jeff meant\r\n```python\r\nresult = df.reset_index().query('\"2018-01-03 00:00:00+00\" < time')\r\nexpected = pd.DataFrame(df_index)\r\ntm.assert_frame_equal(result, expected)\r\n```",
        "createdAt" : "2020-05-07T20:14:23Z",
        "updatedAt" : "2020-05-20T05:02:04Z",
        "lastEditedBy" : "888173f2-4a00-44f2-b380-bc6a5ca76385",
        "tags" : [
        ]
      },
      {
        "id" : "86280a54-9b02-4a17-a062-fe3a936bdbb4",
        "parentId" : "5c30227a-d842-44e4-a2ff-9d1dac7d006c",
        "authorId" : "88a252f2-f0c7-493d-90d5-0abb1a1c62e5",
        "body" : "@MarcoGorelli , I thought this was already working when the related issue was raised , I've updated the test with suggested changes.",
        "createdAt" : "2020-05-07T20:50:23Z",
        "updatedAt" : "2020-05-20T05:02:04Z",
        "lastEditedBy" : "88a252f2-f0c7-493d-90d5-0abb1a1c62e5",
        "tags" : [
        ]
      }
    ],
    "commit" : "986cadd7bec197d804f5f34f0d784d2c84925a99",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +706,710 @@        result = df.query('\"2018-01-03 00:00:00+00\" < time')\n        tm.assert_frame_equal(result, expected)\n\n        expected = pd.DataFrame(df_index)\n        result = df.reset_index().query('\"2018-01-03 00:00:00+00\" < time')"
  }
]