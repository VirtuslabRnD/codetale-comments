[
  {
    "id" : "6dd28ee7-80ff-4aa1-a3f9-c03d08845b9f",
    "prId" : 18363,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/18363#pullrequestreview-77649698",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "68801de4-5ad1-4ff1-8e68-782c7600244a",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you add the 2nd example you had in the issue as well, e.g. ``df[['a', 'b']].stack(0)`` (though different starting frame as well i think.",
        "createdAt" : "2017-11-19T15:40:16Z",
        "updatedAt" : "2017-11-19T16:15:40Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "1099f53f-bd19-4e26-9ad2-e786a05bb498",
        "parentId" : "68801de4-5ad1-4ff1-8e68-782c7600244a",
        "authorId" : "69a015bc-2b58-45dd-83cb-2c2f6d80b128",
        "body" : "(done)\r\nping",
        "createdAt" : "2017-11-19T17:48:44Z",
        "updatedAt" : "2017-11-19T17:48:44Z",
        "lastEditedBy" : "69a015bc-2b58-45dd-83cb-2c2f6d80b128",
        "tags" : [
        ]
      }
    ],
    "commit" : "6d267a27b98a7e3d8645ef562960a3ddbe04ad40",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +147,151 @@        df = DataFrame(1, index=levels[0],\n                       columns=MultiIndex.from_product(levels[1:]))\n        result = df.stack(1)\n        expected = DataFrame(1, index=MultiIndex.from_product([levels[0],\n                                                               levels[2]]),"
  },
  {
    "id" : "d9131183-e344-4f17-8aef-d57e5d13f5d6",
    "prId" : 18460,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/18460#pullrequestreview-84131522",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "89d3b475-a0d2-418c-9a1f-01e9361f3f9c",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can we have an exact expected frame and assert_frame_equal (maybe more code, but it really locks it down to the exact result).",
        "createdAt" : "2017-11-24T19:45:21Z",
        "updatedAt" : "2018-01-15T14:17:33Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "59173001-890a-4ba3-a87b-05414bf8538f",
        "parentId" : "89d3b475-a0d2-418c-9a1f-01e9361f3f9c",
        "authorId" : "69a015bc-2b58-45dd-83cb-2c2f6d80b128",
        "body" : "The frame _is_ an exact copy, but ``assert_frame_equal`` fails (two lines below) because of #18455 . So until that is fixed, I guess I can only add a check on the dtypes.",
        "createdAt" : "2017-11-24T19:55:44Z",
        "updatedAt" : "2018-01-15T14:17:33Z",
        "lastEditedBy" : "69a015bc-2b58-45dd-83cb-2c2f6d80b128",
        "tags" : [
        ]
      },
      {
        "id" : "3df29ea0-7881-4ce1-b7e0-ff194942a96b",
        "parentId" : "89d3b475-a0d2-418c-9a1f-01e9361f3f9c",
        "authorId" : "69a015bc-2b58-45dd-83cb-2c2f6d80b128",
        "body" : "> So until that is fixed, I guess I can only add a check on the dtypes.\r\n\r\n(shall I?)",
        "createdAt" : "2017-11-24T20:04:07Z",
        "updatedAt" : "2018-01-15T14:17:33Z",
        "lastEditedBy" : "69a015bc-2b58-45dd-83cb-2c2f6d80b128",
        "tags" : [
        ]
      },
      {
        "id" : "8b6cb905-39c8-4ef8-8d45-74ec8576ad84",
        "parentId" : "89d3b475-a0d2-418c-9a1f-01e9361f3f9c",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "I think worthwhile to fix #18455 first actually.",
        "createdAt" : "2017-11-24T20:07:23Z",
        "updatedAt" : "2018-01-15T14:17:33Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "6e4b2569-f9d1-43e7-8271-9942c9166d08",
        "parentId" : "89d3b475-a0d2-418c-9a1f-01e9361f3f9c",
        "authorId" : "69a015bc-2b58-45dd-83cb-2c2f6d80b128",
        "body" : "@jreback : seems like #18455 won't be fixed before #18600, #18626, #18769... and the present PR (probably together with #18562) is hanging only for a workaround in a test. Still want to wait?",
        "createdAt" : "2017-12-18T13:29:36Z",
        "updatedAt" : "2018-01-15T14:17:33Z",
        "lastEditedBy" : "69a015bc-2b58-45dd-83cb-2c2f6d80b128",
        "tags" : [
        ]
      }
    ],
    "commit" : "a629b82cbec104c0fe12fd7439f2627cae1a6ea2",
    "line" : 46,
    "diffHunk" : "@@ -1,1 +603,607 @@            cols = pd.MultiIndex.from_product([[0, 1], col_level])\n            expected = pd.DataFrame(exp_data.reshape(3, 6),\n                                    index=idx_level, columns=cols)\n            # Broken (GH 18455):\n            # tm.assert_frame_equal(result, expected)"
  },
  {
    "id" : "8b23b6ff-f9c5-44dd-869b-10658dfc94f3",
    "prId" : 18460,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/18460#pullrequestreview-88830664",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5a3e4386-5c19-4724-9d48-1c82c5a40697",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "I believe you had 2 cases for #18562 does this cover both?",
        "createdAt" : "2018-01-15T13:56:26Z",
        "updatedAt" : "2018-01-15T14:17:33Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "236e1ecf-141a-4439-919c-a26b3fef73e8",
        "parentId" : "5a3e4386-5c19-4724-9d48-1c82c5a40697",
        "authorId" : "69a015bc-2b58-45dd-83cb-2c2f6d80b128",
        "body" : "yes, they are the two \"cols\" values",
        "createdAt" : "2018-01-15T14:09:30Z",
        "updatedAt" : "2018-01-15T14:17:33Z",
        "lastEditedBy" : "69a015bc-2b58-45dd-83cb-2c2f6d80b128",
        "tags" : [
        ]
      }
    ],
    "commit" : "a629b82cbec104c0fe12fd7439f2627cae1a6ea2",
    "line" : 57,
    "diffHunk" : "@@ -1,1 +614,618 @@    @pytest.mark.parametrize(\"cols\", [['A', 'C'], slice(None)])\n    def test_unstack_unused_level(self, cols):\n        # GH 18562 : unused labels on the unstacked level\n        df = pd.DataFrame([[2010, 'a', 'I'],\n                           [2011, 'b', 'II']],"
  }
]