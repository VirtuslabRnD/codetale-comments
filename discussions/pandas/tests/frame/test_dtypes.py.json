[
  {
    "id" : "84319cd4-9f6a-46bc-9f3c-3b50ed1ca504",
    "prId" : 21873,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/21873#pullrequestreview-136588323",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "effcad1b-7f52-4582-ace2-7d980746d056",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "may consider in the future to move this fixture to conftest (needs a good name though)",
        "createdAt" : "2018-07-12T10:18:42Z",
        "updatedAt" : "2018-07-12T21:24:22Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "d9a331559146688eb34c8cfda38823173d3689cf",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +22,26 @@\n\n@pytest.fixture(params=[str, compat.text_type])\ndef text_dtype(request):\n    return request.param"
  },
  {
    "id" : "8d462408-1cee-4de4-b450-2be718c8a9f3",
    "prId" : 25636,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/25636#pullrequestreview-212678800",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8543f3f5-06c3-4ca6-bee9-848f57516985",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "i don't want the repeated code.",
        "createdAt" : "2019-03-10T21:48:06Z",
        "updatedAt" : "2019-06-28T14:14:16Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "2ade3b1b-4b03-4884-95dd-1bbec94c5f41",
        "parentId" : "8543f3f5-06c3-4ca6-bee9-848f57516985",
        "authorId" : "5f34c5f9-b309-4032-bd6e-1f14b864aae4",
        "body" : "Fine by me, but that means this *should* be done in a separate PR. I'll move the `_check_cast` function to the top of the module.",
        "createdAt" : "2019-03-11T06:54:02Z",
        "updatedAt" : "2019-06-28T14:14:16Z",
        "lastEditedBy" : "5f34c5f9-b309-4032-bd6e-1f14b864aae4",
        "tags" : [
        ]
      }
    ],
    "commit" : "8a6de2efedeb65c200788dc9a8331b6427ec9205",
    "line" : 100,
    "diffHunk" : "@@ -1,1 +462,466 @@        _check_cast(casted, 'float16')\n\n    def test_astype_mixed_type(self, mixed_type_frame):\n        # mixed casting\n        mn = mixed_type_frame._get_numeric_data().copy()"
  },
  {
    "id" : "1e782ca5-0db3-40a7-a08c-75ff3f9ecba2",
    "prId" : 29454,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/29454#pullrequestreview-313102703",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "518d89b0-750c-425a-b177-8e2203bb4410",
        "parentId" : null,
        "authorId" : "51189123-86a2-400a-9762-6816882b6f12",
        "body" : "Similar to my comments in https://github.com/pandas-dev/pandas/pull/29455, let's parameterize as follows:\r\n\r\n~~~python\r\n@pytest.mark.parametrize(\"kwargs\", [dict(), dict(other=None)])\r\ndef test_df_where_with_category(self, kwargs):\r\n    df = DataFrame(np.arange(2 * 3).reshape(2, 3), columns=list(\"ABC\"))\r\n    mask = np.array([[True, False, True], [False, True, True]])\r\n\r\n    # Change type to category\r\n    df.A = df.A.astype(\"category\")\r\n    df.B = df.B.astype(\"category\")\r\n    df.C = df.C.astype(\"category\")\r\n\r\n    expected = ...   # Construct expected result\r\n    result = df.A.where(mask[:, 0], **kwargs)\r\n\r\n    tm.assert_series_equal(result, expected)\r\n~~~",
        "createdAt" : "2019-11-07T04:23:35Z",
        "updatedAt" : "2019-11-08T17:13:50Z",
        "lastEditedBy" : "51189123-86a2-400a-9762-6816882b6f12",
        "tags" : [
        ]
      }
    ],
    "commit" : "602ac0667ae8521124fb278ff282876af72ad1d6",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +831,835 @@\n        tm.assert_series_equal(result, expected)\n\n    @pytest.mark.parametrize(\n        \"dtype\", [{100: \"float64\", 200: \"uint64\"}, \"category\", \"float64\"]"
  },
  {
    "id" : "d93bc09d-ef12-416f-bd4c-d36abc76c845",
    "prId" : 29521,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/29521#pullrequestreview-314616015",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ccb748fc-a471-4401-913c-90925223c66c",
        "parentId" : null,
        "authorId" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "body" : "Can you add the issue number?",
        "createdAt" : "2019-11-10T07:06:23Z",
        "updatedAt" : "2019-11-10T13:34:54Z",
        "lastEditedBy" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "tags" : [
        ]
      },
      {
        "id" : "dc0912cd-fda9-4e4b-b895-ad66e2a83021",
        "parentId" : "ccb748fc-a471-4401-913c-90925223c66c",
        "authorId" : "39ac2f3d-6413-4b50-a840-fd3c5ff19ed8",
        "body" : "Done",
        "createdAt" : "2019-11-10T13:35:10Z",
        "updatedAt" : "2019-11-10T13:35:10Z",
        "lastEditedBy" : "39ac2f3d-6413-4b50-a840-fd3c5ff19ed8",
        "tags" : [
        ]
      }
    ],
    "commit" : "bcb5fd29473802baf796b8e0802e993f5c4d0653",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +765,769 @@    def test_singlerow_slice_categoricaldtype_gives_series(self):\n        # GH29521\n        df = pd.DataFrame({\"x\": pd.Categorical(\"a b c d e\".split())})\n        result = df.iloc[0]\n        raw_cat = pd.Categorical([\"a\"], categories=[\"a\", \"b\", \"c\", \"d\", \"e\"])"
  }
]