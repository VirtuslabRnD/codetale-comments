[
  {
    "id" : "d46b6c52-0213-48fa-b107-4ddbc06a6979",
    "prId" : 13496,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2e333f8e-053a-4ae3-ad83-7485e2622a92",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "add this issue number  (the PR number) as a comment (so future readers can reference)\n",
        "createdAt" : "2016-07-09T19:58:06Z",
        "updatedAt" : "2016-07-11T12:09:54Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "a333162cd10080fee441bacc7c3012fc7ab61719",
    "line" : null,
    "diffHunk" : "@@ -1,1 +25,29 @@        # GH13496\n\n        frame = DataFrame(np.arange(16).reshape(4, 4), index=[1, 2, 3, 4],\n                          columns=['A', 'B', 'C', 'D'])\n"
  },
  {
    "id" : "009c1903-060f-440a-befb-a02a5713f0ea",
    "prId" : 13496,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ac182dbd-607d-4c99-aae4-a12ef026a224",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "I would make multi-index part of a 2nd test (e.g. separate long tests into multiple ones)\n",
        "createdAt" : "2016-07-09T19:59:09Z",
        "updatedAt" : "2016-07-11T12:09:54Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "a333162cd10080fee441bacc7c3012fc7ab61719",
    "line" : null,
    "diffHunk" : "@@ -1,1 +50,54 @@        # GH13496\n\n        # sort rows by specified level of multi-index\n        mi = MultiIndex.from_tuples([[2, 1, 3], [1, 1, 1]], names=list('ABC'))\n        df = DataFrame([[1, 2], [3, 4]], mi)"
  },
  {
    "id" : "e5a04594-1782-4ca1-bb79-273fa12e3516",
    "prId" : 22640,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22640#pullrequestreview-154021305",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cc7d44dc-8606-4b8f-8364-1446fa1e5f95",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Put this in a separate test called `test_sort_index_na_position_with_categories_raises`",
        "createdAt" : "2018-09-11T01:21:40Z",
        "updatedAt" : "2018-10-17T23:08:55Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      }
    ],
    "commit" : "8d4aedcef86aa232487fb3c6a1e685f2b3a2873e",
    "line" : 114,
    "diffHunk" : "@@ -1,1 +673,677 @@                                ordered=True)})\n\n        with pytest.raises(ValueError):\n            df.sort_values(by='c',\n                           ascending=False,"
  },
  {
    "id" : "170f1ca3-f078-4fab-81fa-efd00719d502",
    "prId" : 22640,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22640#pullrequestreview-163599322",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6832627e-9fea-481c-bb7e-dd14572d72a0",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Can you parametrize this test? Believe you can use `values`, `na_position` and `index` as parametrized arguments",
        "createdAt" : "2018-10-09T17:04:03Z",
        "updatedAt" : "2018-10-17T23:08:55Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "151f71e4-82dc-4670-a572-903fdc5b2f4e",
        "parentId" : "6832627e-9fea-481c-bb7e-dd14572d72a0",
        "authorId" : "5b382735-f2e9-48b7-986b-35115a020a26",
        "body" : "@WillAyd parametrized a bit. I am pretty new at this. Thanks for all the suggestions!",
        "createdAt" : "2018-10-10T23:02:02Z",
        "updatedAt" : "2018-10-17T23:08:55Z",
        "lastEditedBy" : "5b382735-f2e9-48b7-986b-35115a020a26",
        "tags" : [
        ]
      },
      {
        "id" : "8d2b1819-62e4-4e18-a656-d17634a11277",
        "parentId" : "6832627e-9fea-481c-bb7e-dd14572d72a0",
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "No worries - appreciate the help and we hope you learn as you go through this process.\r\n\r\nFWIW this unfortunately not the parametrization we are looking for. There should be a decorator for the function which performs that actual task. What you want is the `pytest.mark.parametrize` decorator; you'll see this on one other function in the module though if you poke around other modules you'll see more complex applications which can help you out as well",
        "createdAt" : "2018-10-10T23:22:02Z",
        "updatedAt" : "2018-10-17T23:08:55Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      }
    ],
    "commit" : "8d4aedcef86aa232487fb3c6a1e685f2b3a2873e",
    "line" : 41,
    "diffHunk" : "@@ -1,1 +600,604 @@        tm.assert_index_equal(result, expected)\n\n    def test_sort_index_na_position_with_categories(self):\n        # GH 22556\n        # Positioning missing value properly when column is Categorical."
  }
]