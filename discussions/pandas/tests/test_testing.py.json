[
  {
    "id" : "56a75909-e79a-407b-9fd4-eedbc9e02e74",
    "prId" : 9983,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "560d1b18-677e-4f50-9067-ead245fc1e8c",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "move test to test_indexing.py (next to one from above)\n",
        "createdAt" : "2015-04-28T00:29:38Z",
        "updatedAt" : "2015-04-30T03:29:30Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "56ff0142-e4a9-4474-8f8f-c90bb7aa8886",
        "parentId" : "560d1b18-677e-4f50-9067-ead245fc1e8c",
        "authorId" : "002fe2e0-eafa-49d2-9208-6fd30f14d6b0",
        "body" : "Are you sure?  This is testing `assert_frame_equal`, not anything (explicitly) to do with indexing (only needed because `.iloc` is used inside of `assert_frame_equal`)\n",
        "createdAt" : "2015-04-28T00:54:12Z",
        "updatedAt" : "2015-04-30T03:29:30Z",
        "lastEditedBy" : "002fe2e0-eafa-49d2-9208-6fd30f14d6b0",
        "tags" : [
        ]
      },
      {
        "id" : "911c1965-4588-4f67-beea-910acab1fe8b",
        "parentId" : "560d1b18-677e-4f50-9067-ead245fc1e8c",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "`icol` is used internally, `iloc` is a more general form. \n\nok, I see what you are trying to test here. But its circular, and not convincing that you are actually checking anything. I appreciate that you are trying to make sure that `check_dtype` is 'working'. But that goes back to asserting that `assert_frame_equal` is working.\n",
        "createdAt" : "2015-04-28T01:18:29Z",
        "updatedAt" : "2015-04-30T03:29:30Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "ea6e3e06-6b54-4484-a2c2-050612c639f6",
        "parentId" : "560d1b18-677e-4f50-9067-ead245fc1e8c",
        "authorId" : "002fe2e0-eafa-49d2-9208-6fd30f14d6b0",
        "body" : "I actually put this test in because it was asked for by @hayd .\nIt's testing whether empty dataframes with different dtypes raise an exception in `assert_frame_equal`.  I also would argue its testing _something_ because this test would fail under master.\nIf you insist, it can be taken out , though not sure I understand the reasoning.  Why is it circular?\n",
        "createdAt" : "2015-04-28T01:32:47Z",
        "updatedAt" : "2015-04-30T03:29:30Z",
        "lastEditedBy" : "002fe2e0-eafa-49d2-9208-6fd30f14d6b0",
        "tags" : [
        ]
      },
      {
        "id" : "6c2e8a4b-330b-4964-a646-5becfe0268db",
        "parentId" : "560d1b18-677e-4f50-9067-ead245fc1e8c",
        "authorId" : "aeb7e171-52e2-4faa-8a7c-32d6a9d2c2be",
        "body" : "I think this is the right place (TestAssertFrameEqual) for a regression test of assert_frame_equals, which is what this is... ?\n",
        "createdAt" : "2015-04-28T02:03:22Z",
        "updatedAt" : "2015-04-30T03:29:30Z",
        "lastEditedBy" : "aeb7e171-52e2-4faa-8a7c-32d6a9d2c2be",
        "tags" : [
        ]
      }
    ],
    "commit" : "4d51affcaaffbf741c5ac929034577cdec4034b6",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +216,220 @@        self._assert_not_equal(df1, df2, check_index_type=True)\n\n    def test_empty_dtypes(self):\n        df1=pd.DataFrame(columns=[\"col1\",\"col2\"])\n        df1[\"col1\"] = df1[\"col1\"].astype('int64')"
  },
  {
    "id" : "932728ed-c352-42d5-a60e-0befa85eaa67",
    "prId" : 9983,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "62c18732-a190-49ce-b37c-0e806d9e6625",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "ok then. I would actually use `assert_frame_equal` then, otherwise you maybe subtely testing something else.\n",
        "createdAt" : "2015-04-28T10:31:31Z",
        "updatedAt" : "2015-04-30T03:29:30Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "0966a86c-1b3a-4567-bd7d-21db8a44b285",
        "parentId" : "62c18732-a190-49ce-b37c-0e806d9e6625",
        "authorId" : "002fe2e0-eafa-49d2-9208-6fd30f14d6b0",
        "body" : "That's in class `TestAssertFrameEqual` --- all the tests are clearly for testing `assert_frame_equal` . \n",
        "createdAt" : "2015-04-28T15:13:47Z",
        "updatedAt" : "2015-04-30T03:29:30Z",
        "lastEditedBy" : "002fe2e0-eafa-49d2-9208-6fd30f14d6b0",
        "tags" : [
        ]
      }
    ],
    "commit" : "4d51affcaaffbf741c5ac929034577cdec4034b6",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +221,225 @@        df2=pd.DataFrame(columns=[\"col1\",\"col2\"])\n        self._assert_equal(df1, df2, check_dtype=False)\n        self._assert_not_equal(df1, df2, check_dtype=True)\n        \n"
  }
]