[
  {
    "id" : "d2478671-30e9-41ed-879f-c404b7332758",
    "prId" : 17755,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/17755#pullrequestreview-74179758",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1a5433ef-a672-4604-99f3-7dc62517299f",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "cc @jorisvandenbossche @MaximilianR @shoyer these are similar to Interval discussions, though conceptually much simpler.",
        "createdAt" : "2017-10-29T20:03:55Z",
        "updatedAt" : "2017-11-04T00:39:18Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "8ef54fba-749c-4377-affe-84c0f97e966d",
        "parentId" : "1a5433ef-a672-4604-99f3-7dc62517299f",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Yes, and similar to that discussion, I don't like the current (and tested on the lines below) behaviour.\r\n\r\nI don't think that:\r\n\r\n```\r\nIn [97]: p0 = pd.Period('2017-09-01')\r\n    ...: p1 = pd.Period('2017-09-02')\r\n\r\nIn [98]: idx = pd.PeriodIndex([p0, p1])\r\n\r\nIn [99]: idx.contains(\"2017-09-01 09:00\")\r\nOut[99]: True\r\n```\r\n\r\nshould be the behaviour of contains. But let's leave that discussion out of this PR, as I don't think the PR is making any changes to the behaviour of `__contains__` / `contains` ? (or does it?)",
        "createdAt" : "2017-10-30T14:01:33Z",
        "updatedAt" : "2017-11-04T00:39:18Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "55223013-14b4-49ae-94e2-d2f233480ac1",
        "parentId" : "1a5433ef-a672-4604-99f3-7dc62517299f",
        "authorId" : "84f3b0a4-88e4-4a54-8a82-f6dd7c170a75",
        "body" : "@jorisvandenbossche @jreback Yes. No changes in `__contains__` / `contains`.",
        "createdAt" : "2017-11-03T18:46:45Z",
        "updatedAt" : "2017-11-04T00:39:18Z",
        "lastEditedBy" : "84f3b0a4-88e4-4a54-8a82-f6dd7c170a75",
        "tags" : [
        ]
      }
    ],
    "commit" : "ec608001111df27b2d30cd7e5ca99bbc7310e593",
    "line" : 118,
    "diffHunk" : "@@ -1,1 +416,420 @@        ps0 = [p0, p1, p2]\n        idx0 = pd.PeriodIndex(ps0)\n\n        for p in ps0:\n            assert idx0.contains(p)"
  },
  {
    "id" : "3d26328f-c8e2-4043-aa0f-53a08813db5e",
    "prId" : 38105,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/38105#pullrequestreview-539708718",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9448ffd3-4404-489d-9304-581bff78b322",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "@jreback notice in these cases we are currently raising in master bc the scalar comparisons raise ",
        "createdAt" : "2020-11-27T04:39:34Z",
        "updatedAt" : "2020-11-30T19:28:43Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "0cfb4a42-99f9-4db0-8f90-38212e64d8cc",
        "parentId" : "9448ffd3-4404-489d-9304-581bff78b322",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "is this new? \n\nget_indexer is not super public but i believe it will never raise",
        "createdAt" : "2020-11-27T04:44:53Z",
        "updatedAt" : "2020-11-30T19:28:43Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "14826c34-741f-4220-8dca-2ae6f9709e31",
        "parentId" : "9448ffd3-4404-489d-9304-581bff78b322",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "I think you're right that get_indexer with method=None should never raise (maybe with tzawareness corner cases), but with method=\"ffill\" the following raises on master:\r\n\r\n```\r\ndti = pd.date_range(\"2016-01-01\", periods=3)\r\nrng = pd.Index(range(5))\r\n\r\n>>> dti.get_indexer(rng, method=\"ffill\")\r\nTypeError: '<' not supported between instances of 'int' and 'Timestamp'\r\n```",
        "createdAt" : "2020-11-27T04:59:38Z",
        "updatedAt" : "2020-11-30T19:28:43Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "df84891fcdd37f7675652f7e9c77b7d42464b36b",
    "line" : 62,
    "diffHunk" : "@@ -1,1 +490,494 @@            # For object dtype we are liable to get a different exception message\n            with pytest.raises(TypeError):\n                pi.get_indexer(other2, method=method)\n\n    def test_get_indexer_non_unique(self):"
  }
]