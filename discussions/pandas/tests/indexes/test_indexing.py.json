[
  {
    "id" : "4299433d-7417-4dee-829b-cc0ef7c802d6",
    "prId" : 33223,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/33223#pullrequestreview-386241242",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "148ef0d7-4279-49b1-b971-cb7e1a760fdf",
        "parentId" : null,
        "authorId" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "body" : "why are we not using tests/indexes/methods/test_* like the frame and Series tests.",
        "createdAt" : "2020-04-02T09:11:11Z",
        "updatedAt" : "2020-04-02T09:11:11Z",
        "lastEditedBy" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "tags" : [
        ]
      }
    ],
    "commit" : "169fcfa7e1d6772b076a6c2277381595f5a74b69",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +9,13 @@    get_indexer\n    slice_locs\n    asof_locs\n\nThe corresponding tests.indexes.[index_type].test_indexing files"
  },
  {
    "id" : "1afbdb1b-a44a-4b70-a5f6-843854e54bc1",
    "prId" : 33223,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/33223#pullrequestreview-386472766",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e3cde804-78ae-4a33-ad3f-cb8e6fd4cff8",
        "parentId" : null,
        "authorId" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "body" : "why do we not have the tests here parametrised for the different Index types?",
        "createdAt" : "2020-04-02T09:12:23Z",
        "updatedAt" : "2020-04-02T09:12:23Z",
        "lastEditedBy" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "tags" : [
        ]
      },
      {
        "id" : "c05d9a77-80f2-494a-abd9-9bda916127a5",
        "parentId" : "e3cde804-78ae-4a33-ad3f-cb8e6fd4cff8",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "there are *lots* of tests that are not correctly paramateerized yet",
        "createdAt" : "2020-04-02T14:19:02Z",
        "updatedAt" : "2020-04-02T14:19:02Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "169fcfa7e1d6772b076a6c2277381595f5a74b69",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +12,16 @@\nThe corresponding tests.indexes.[index_type].test_indexing files\ncontain tests for the corresponding methods specific to those Index subclasses.\n\"\"\"\nimport numpy as np"
  },
  {
    "id" : "6bdaa294-d64b-42e1-be6f-dcfa4bbdef38",
    "prId" : 34193,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/34193#pullrequestreview-416460530",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ea811f01-7a19-4824-834d-2705bb736288",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "could use indices fixture?",
        "createdAt" : "2020-05-21T18:50:51Z",
        "updatedAt" : "2020-05-23T11:56:16Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "96e87ef9-b196-40c2-9d16-4fe8155bb541",
        "parentId" : "ea811f01-7a19-4824-834d-2705bb736288",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "I don't think so, as the deprecation is only for those 3 index types",
        "createdAt" : "2020-05-21T20:17:49Z",
        "updatedAt" : "2020-05-23T11:56:16Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "becde65151e720128f303c4e23b6a4d393c96430",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +88,92 @@@pytest.mark.parametrize(\n    \"idx\", [Index([1, 2, 3]), Index([0.1, 0.2, 0.3]), Index([\"a\", \"b\", \"c\"])]\n)\ndef test_getitem_deprecated_float(idx):\n    # https://github.com/pandas-dev/pandas/issues/34191"
  },
  {
    "id" : "7fd0f660-0939-44a0-84ae-68bd1e8eb37f",
    "prId" : 35498,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/35498#pullrequestreview-543028644",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ed8b7b3a-d67d-4284-8fee-adf65450b2af",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "does np.nan vs `float(\"NaN\")` make a difference?",
        "createdAt" : "2020-10-09T15:13:47Z",
        "updatedAt" : "2021-05-10T01:46:39Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "6488940a-a6df-45be-9c5d-a8423df5bd4b",
        "parentId" : "ed8b7b3a-d67d-4284-8fee-adf65450b2af",
        "authorId" : "eaaaa037-1e8b-4ee3-a6ee-3e459b12fc2f",
        "body" : "I don't believe so. I changed all the np.nan to float(\"NaN\") and tests are all passing. Would you like me to include a separate test case for float(\"NaN\")?",
        "createdAt" : "2020-10-13T14:28:42Z",
        "updatedAt" : "2021-05-10T01:46:39Z",
        "lastEditedBy" : "eaaaa037-1e8b-4ee3-a6ee-3e459b12fc2f",
        "tags" : [
        ]
      },
      {
        "id" : "aed94782-0c55-40e5-9cec-f244a1073a46",
        "parentId" : "ed8b7b3a-d67d-4284-8fee-adf65450b2af",
        "authorId" : "8a5d728c-e241-4a19-b667-385656e4fd50",
        "body" : "please add that testcase",
        "createdAt" : "2020-12-02T16:42:14Z",
        "updatedAt" : "2021-05-10T01:46:39Z",
        "lastEditedBy" : "8a5d728c-e241-4a19-b667-385656e4fd50",
        "tags" : [
        ]
      }
    ],
    "commit" : "b2d3dbb584a6b656a77adb6280ce65f57ddce785",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +302,306 @@    \"idx,target,expected\",\n    [\n        ([np.nan, \"var1\", np.nan], [np.nan], np.array([0, 2], dtype=np.intp)),\n        (\n            [np.nan, \"var1\", np.nan],"
  },
  {
    "id" : "e6486864-83a0-49ea-b3f2-4c23d16daf12",
    "prId" : 35498,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/35498#pullrequestreview-559216483",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b2637a82-7004-4e5c-826f-46b263d1d238",
        "parentId" : null,
        "authorId" : "8a5d728c-e241-4a19-b667-385656e4fd50",
        "body" : "total nit but i'd combine these two lines into \r\n``` python\r\nresult = Index(axis).get_indexer_for(target)\r\n```",
        "createdAt" : "2020-12-28T16:15:49Z",
        "updatedAt" : "2021-05-10T01:46:39Z",
        "lastEditedBy" : "8a5d728c-e241-4a19-b667-385656e4fd50",
        "tags" : [
        ]
      },
      {
        "id" : "c008b8d7-bb1d-4cdd-bf8b-dbc2879d0e05",
        "parentId" : "b2637a82-7004-4e5c-826f-46b263d1d238",
        "authorId" : "eaaaa037-1e8b-4ee3-a6ee-3e459b12fc2f",
        "body" : "agreed we can combine - I'll change",
        "createdAt" : "2020-12-28T16:36:33Z",
        "updatedAt" : "2021-05-10T01:46:39Z",
        "lastEditedBy" : "eaaaa037-1e8b-4ee3-a6ee-3e459b12fc2f",
        "tags" : [
        ]
      }
    ],
    "commit" : "b2d3dbb584a6b656a77adb6280ce65f57ddce785",
    "line" : 46,
    "diffHunk" : "@@ -1,1 +323,327 @@def test_get_indexer_non_unique_multiple_nans(idx, target, expected):\n    # GH 35392\n    axis = Index(idx)\n    actual = axis.get_indexer_for(target)\n    tm.assert_numpy_array_equal(actual, expected)"
  },
  {
    "id" : "39bccaf5-317f-4d87-bc47-f6e78c23be8c",
    "prId" : 35498,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/35498#pullrequestreview-543028644",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4012fe94-4aa4-4f6b-b36d-2ba91fb7915b",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "does np.nan vs `float(\"NaN\")` make a difference?",
        "createdAt" : "2020-10-09T15:13:47Z",
        "updatedAt" : "2021-05-10T01:46:39Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "24bfdf53-b659-4384-8c16-79e94acd020b",
        "parentId" : "4012fe94-4aa4-4f6b-b36d-2ba91fb7915b",
        "authorId" : "eaaaa037-1e8b-4ee3-a6ee-3e459b12fc2f",
        "body" : "I don't believe so. I changed all the np.nan to float(\"NaN\") and tests are all passing. Would you like me to include a separate test case for float(\"NaN\")?",
        "createdAt" : "2020-10-13T14:28:42Z",
        "updatedAt" : "2021-05-10T01:46:39Z",
        "lastEditedBy" : "eaaaa037-1e8b-4ee3-a6ee-3e459b12fc2f",
        "tags" : [
        ]
      },
      {
        "id" : "1236a06e-4888-4344-9a8d-707fad4e00c1",
        "parentId" : "4012fe94-4aa4-4f6b-b36d-2ba91fb7915b",
        "authorId" : "8a5d728c-e241-4a19-b667-385656e4fd50",
        "body" : "please add that testcase",
        "createdAt" : "2020-12-02T16:42:14Z",
        "updatedAt" : "2021-05-10T01:46:39Z",
        "lastEditedBy" : "8a5d728c-e241-4a19-b667-385656e4fd50",
        "tags" : [
        ]
      }
    ],
    "commit" : "b2d3dbb584a6b656a77adb6280ce65f57ddce785",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +302,306 @@    \"idx,target,expected\",\n    [\n        ([np.nan, \"var1\", np.nan], [np.nan], np.array([0, 2], dtype=np.intp)),\n        (\n            [np.nan, \"var1\", np.nan],"
  },
  {
    "id" : "3cd1c798-5128-4412-bd32-3834a9d4f4e1",
    "prId" : 35498,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/35498#pullrequestreview-559216483",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d04e47f6-5291-4ea4-88a5-5f74962bc442",
        "parentId" : null,
        "authorId" : "8a5d728c-e241-4a19-b667-385656e4fd50",
        "body" : "total nit but i'd combine these two lines into \r\n``` python\r\nresult = Index(axis).get_indexer_for(target)\r\n```",
        "createdAt" : "2020-12-28T16:15:49Z",
        "updatedAt" : "2021-05-10T01:46:39Z",
        "lastEditedBy" : "8a5d728c-e241-4a19-b667-385656e4fd50",
        "tags" : [
        ]
      },
      {
        "id" : "0688cab9-fa33-4f10-a820-90ce9167734c",
        "parentId" : "d04e47f6-5291-4ea4-88a5-5f74962bc442",
        "authorId" : "eaaaa037-1e8b-4ee3-a6ee-3e459b12fc2f",
        "body" : "agreed we can combine - I'll change",
        "createdAt" : "2020-12-28T16:36:33Z",
        "updatedAt" : "2021-05-10T01:46:39Z",
        "lastEditedBy" : "eaaaa037-1e8b-4ee3-a6ee-3e459b12fc2f",
        "tags" : [
        ]
      }
    ],
    "commit" : "b2d3dbb584a6b656a77adb6280ce65f57ddce785",
    "line" : 46,
    "diffHunk" : "@@ -1,1 +323,327 @@def test_get_indexer_non_unique_multiple_nans(idx, target, expected):\n    # GH 35392\n    axis = Index(idx)\n    actual = axis.get_indexer_for(target)\n    tm.assert_numpy_array_equal(actual, expected)"
  }
]