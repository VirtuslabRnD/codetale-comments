[
  {
    "id" : "ef8c939b-a17c-4fa8-b570-e88d5276905f",
    "prId" : 19095,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19095#pullrequestreview-86999652",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cfecf6a5-dff3-4ebe-9412-d07d80beb7b1",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "some duplication here\r\n  ",
        "createdAt" : "2018-01-05T19:24:50Z",
        "updatedAt" : "2018-01-06T17:48:33Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "b9e9fff3e1aabc9d02b81bc856a695b59b66411f",
    "line" : 47,
    "diffHunk" : "@@ -1,1 +120,124 @@                tdi + anchored\n        with pytest.raises(TypeError):\n            with tm.assert_produces_warning(PerformanceWarning):\n                anchored + tdi\n        with pytest.raises(TypeError):"
  },
  {
    "id" : "1696f67c-b3eb-41a0-b1a8-e4b265105461",
    "prId" : 19095,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19095#pullrequestreview-87022445",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ae6319be-c756-4c95-a274-e5c80b4f5dc3",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "ideally could parameterize some of these for index, ndarray & Series as well (you can leave them here is ok). I believe you have some duplication in test_base",
        "createdAt" : "2018-01-05T19:26:30Z",
        "updatedAt" : "2018-01-06T17:48:33Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "876b8881-3bac-42a3-b93a-4d6ad631250b",
        "parentId" : "ae6319be-c756-4c95-a274-e5c80b4f5dc3",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Yah, part of it is tricky because parametrizing with `box` and `names` at the same time is cumbersome.  My thought at the moment is to get the bugs fixed and tested first and take on refactoring later (when there's not a constant flow of rebasing to be done).",
        "createdAt" : "2018-01-05T21:01:21Z",
        "updatedAt" : "2018-01-06T17:48:33Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "b9e9fff3e1aabc9d02b81bc856a695b59b66411f",
    "line" : 49,
    "diffHunk" : "@@ -1,1 +58,62 @@            with tm.assert_produces_warning(PerformanceWarning):\n                anchored + tdi\n\n    @pytest.mark.parametrize('box', [np.array, pd.Index])\n    def test_tdi_sub_offset_array(self, box):"
  },
  {
    "id" : "d6346a32-3364-4de0-a399-6b3f47bc94d0",
    "prId" : 19095,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19095#pullrequestreview-87080670",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2262255b-96d4-4a80-8863-a05abbc20e9d",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "I would put a comment on before these sub-section of tests, hard to follow your flow others, IOW enumerate the cases. only looking for a comment at lines 89, 100, 107",
        "createdAt" : "2018-01-06T17:42:45Z",
        "updatedAt" : "2018-01-06T17:48:33Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "1f885145-f4c0-4920-aeae-d02d35e1e3e2",
        "parentId" : "2262255b-96d4-4a80-8863-a05abbc20e9d",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Will do.",
        "createdAt" : "2018-01-06T17:48:11Z",
        "updatedAt" : "2018-01-06T17:48:33Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "b9e9fff3e1aabc9d02b81bc856a695b59b66411f",
    "line" : 87,
    "diffHunk" : "@@ -1,1 +96,100 @@                              name=names[2])\n\n        with tm.assert_produces_warning(PerformanceWarning):\n            res = tdi + other\n        tm.assert_series_equal(res, expected_add)"
  },
  {
    "id" : "e924fd18-6c92-4ae6-8456-3c7c9f6bff9c",
    "prId" : 22163,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22163#pullrequestreview-144781760",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e2636ceb-4a87-45d4-a49b-7cf2ac42b9e8",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "why is this raising? this is a big change if you don't allow nan to act as NaT in ops",
        "createdAt" : "2018-08-08T10:13:54Z",
        "updatedAt" : "2018-08-10T14:11:41Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "778a94fa-8603-40be-be66-7ff5f62b6560",
        "parentId" : "e2636ceb-4a87-45d4-a49b-7cf2ac42b9e8",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "This is the current behavior for Series and Index.",
        "createdAt" : "2018-08-08T17:45:22Z",
        "updatedAt" : "2018-08-10T14:11:41Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "f0c08a30-613e-401f-aace-eda3f8fc8b67",
        "parentId" : "e2636ceb-4a87-45d4-a49b-7cf2ac42b9e8",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "this needs a subsection in the whatsnew then, marked as an api change. ",
        "createdAt" : "2018-08-09T10:35:42Z",
        "updatedAt" : "2018-08-10T14:11:41Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "9b62135b945ea015ef5531af8dc9502f6c018511",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +541,545 @@        tm.assert_frame_equal(actual, dfn)\n\n        with pytest.raises(TypeError):\n            df1 + np.nan\n        with pytest.raises(TypeError):"
  },
  {
    "id" : "1d027319-30ed-40d1-a68a-166b408e079f",
    "prId" : 23539,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23539#pullrequestreview-173865907",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b8ae045b-516a-4cdf-9507-441c4f42f734",
        "parentId" : null,
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Can we get this stacklevel correct? Or are we calling this from two places with different stacklevels?",
        "createdAt" : "2018-11-08T22:21:42Z",
        "updatedAt" : "2018-11-11T18:58:17Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "8291adcf-edde-435d-bbd7-5eda8b5d6f45",
        "parentId" : "b8ae045b-516a-4cdf-9507-441c4f42f734",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Possibly not for both `to_timedelta` and `DatetimeIndex`, but so let's choose and eg take the correct stacklevel for the case of an array to `to_timedelta`",
        "createdAt" : "2018-11-08T22:52:34Z",
        "updatedAt" : "2018-11-11T18:58:17Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "a87b569d-6fd6-4d6c-b7e7-276cb594d5ba",
        "parentId" : "b8ae045b-516a-4cdf-9507-441c4f42f734",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "I lost patience pretty quickly while trying.  It wouldn't surprise me that much if it turned out to be really simple ex-post.",
        "createdAt" : "2018-11-08T23:03:24Z",
        "updatedAt" : "2018-11-11T18:58:17Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "38b0cc08-b401-4403-9a4a-1335fc60cfe4",
        "parentId" : "b8ae045b-516a-4cdf-9507-441c4f42f734",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Can you do this as a follow-up as well?",
        "createdAt" : "2018-11-12T11:53:46Z",
        "updatedAt" : "2018-11-12T11:53:46Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "898444f17553dbb7ed012fbdfd49f1b2864f9466",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +454,458 @@        s1 = pd.to_timedelta(Series(['00:00:01']))\n        s2 = pd.to_timedelta(Series(['00:00:02']))\n        with tm.assert_produces_warning(FutureWarning, check_stacklevel=False):\n            # Passing datetime64-dtype data to TimedeltaIndex is deprecated\n            sn = pd.to_timedelta(Series([pd.NaT]))"
  },
  {
    "id" : "1af74740-d299-4adb-86e0-01c7f24766d3",
    "prId" : 23539,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23539#pullrequestreview-173703337",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2714438b-167d-469b-a31a-5c75ce1eac34",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "this is not correct \r\nit is all nan which is not definitive ",
        "createdAt" : "2018-11-10T04:16:12Z",
        "updatedAt" : "2018-11-11T18:58:17Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "f17f1657-c859-4901-9294-872fb764d682",
        "parentId" : "2714438b-167d-469b-a31a-5c75ce1eac34",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "`Series([pd.NaT])` has `datetime64[ns]` dtype.  After we've done inference, we need to stick with it.  I can make this test clearer by putting the dtype in the Series constructor explicitly",
        "createdAt" : "2018-11-10T16:16:06Z",
        "updatedAt" : "2018-11-11T18:58:17Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "568d73c5-a191-446b-b281-ecc3db3e9c64",
        "parentId" : "2714438b-167d-469b-a31a-5c75ce1eac34",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "what i mean is that this is all nan and inference is ambiguous at this point. so I wouldn't expect the warning (unless the dtype IS explicity passed). Can address in a followup, but pls open an issue, this is IMHO a bug.",
        "createdAt" : "2018-11-11T15:54:28Z",
        "updatedAt" : "2018-11-11T18:58:17Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "898444f17553dbb7ed012fbdfd49f1b2864f9466",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +456,460 @@        with tm.assert_produces_warning(FutureWarning, check_stacklevel=False):\n            # Passing datetime64-dtype data to TimedeltaIndex is deprecated\n            sn = pd.to_timedelta(Series([pd.NaT]))\n\n        df1 = pd.DataFrame(['00:00:01']).apply(pd.to_timedelta)"
  },
  {
    "id" : "15ec0f8f-2651-4f9b-83ff-2c97a71970ff",
    "prId" : 23539,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23539#pullrequestreview-173667250",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "461513c6-0326-42b1-8003-4b6a6cdd160a",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "same\r\n\r\ndo u actually have a case that tests the warnings?",
        "createdAt" : "2018-11-10T04:16:39Z",
        "updatedAt" : "2018-11-11T18:58:17Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "1ceda52e-ba1c-41ac-a93f-2bccb5d953a9",
        "parentId" : "461513c6-0326-42b1-8003-4b6a6cdd160a",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Will implement.",
        "createdAt" : "2018-11-10T16:17:17Z",
        "updatedAt" : "2018-11-11T18:58:17Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "74e35d9f-83ef-421a-aa0d-1aa80fa4bf05",
        "parentId" : "461513c6-0326-42b1-8003-4b6a6cdd160a",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "actually we have it in test_constructors.test_dt64_data_invalid",
        "createdAt" : "2018-11-10T16:41:51Z",
        "updatedAt" : "2018-11-11T18:58:17Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "898444f17553dbb7ed012fbdfd49f1b2864f9466",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +463,467 @@            # Passing datetime64-dtype data to TimedeltaIndex is deprecated\n            dfn = pd.DataFrame([pd.NaT]).apply(pd.to_timedelta)\n\n        scalar1 = pd.to_timedelta('00:00:01')\n        scalar2 = pd.to_timedelta('00:00:02')"
  }
]