[
  {
    "id" : "28adb676-7846-436b-920d-97227b634de2",
    "prId" : 29260,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/29260#pullrequestreview-320187586",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4de9197d-fd94-4f04-8c70-02fbbdbd9e90",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Can you use tm.assert_index_equal here instead of breaking up into individual arrays?",
        "createdAt" : "2019-10-31T22:42:34Z",
        "updatedAt" : "2020-01-01T18:15:31Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "77a154db-46ce-483e-9fcf-e87d6663ad79",
        "parentId" : "4de9197d-fd94-4f04-8c70-02fbbdbd9e90",
        "authorId" : "cc33e76e-b8cf-4d0d-b9c4-8fcd43880ca7",
        "body" : "I can only do this for midx1 as Index.equals is not sensitive for the order of names, but tm.assert_index_equal is.\r\n\r\nAnyway, I expanded both the test and the docs.",
        "createdAt" : "2019-10-31T23:45:00Z",
        "updatedAt" : "2020-01-01T18:15:31Z",
        "lastEditedBy" : "cc33e76e-b8cf-4d0d-b9c4-8fcd43880ca7",
        "tags" : [
        ]
      },
      {
        "id" : "b5d0669d-9b82-4575-9dd1-ccfce571ee36",
        "parentId" : "4de9197d-fd94-4f04-8c70-02fbbdbd9e90",
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Hmm not sure I totally follow; can you not set the proper expectation inclusive of the order?",
        "createdAt" : "2019-11-07T20:54:36Z",
        "updatedAt" : "2020-01-01T18:15:31Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "c162e2b2-30bc-4131-9270-88aaaaa48055",
        "parentId" : "4de9197d-fd94-4f04-8c70-02fbbdbd9e90",
        "authorId" : "cc33e76e-b8cf-4d0d-b9c4-8fcd43880ca7",
        "body" : "mdx does not equal join_idx, so midx2 just remains the same, basically, which is fine for Index.equals, but there is nothing to compare it with in this example using tm.assert_index_equal. That would require a more complicated example. I didn't add any, as the order of the indices is not agreed upon, I just corrected a bug one way.",
        "createdAt" : "2019-11-20T17:53:46Z",
        "updatedAt" : "2020-01-01T18:15:31Z",
        "lastEditedBy" : "cc33e76e-b8cf-4d0d-b9c4-8fcd43880ca7",
        "tags" : [
        ]
      },
      {
        "id" : "c5c8a7da-c52d-4800-9f49-fca6384de319",
        "parentId" : "4de9197d-fd94-4f04-8c70-02fbbdbd9e90",
        "authorId" : "cc33e76e-b8cf-4d0d-b9c4-8fcd43880ca7",
        "body" : "anyway, since this I expanded the test a little",
        "createdAt" : "2019-11-20T18:39:15Z",
        "updatedAt" : "2020-01-01T18:15:31Z",
        "lastEditedBy" : "cc33e76e-b8cf-4d0d-b9c4-8fcd43880ca7",
        "tags" : [
        ]
      }
    ],
    "commit" : "733b1c60e3db5b18ab7507ffd295fbb8c56f605e",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +103,107 @@    tm.assert_index_equal(midx1, join_idx)\n    assert lidx is None\n    tm.assert_numpy_array_equal(ridx, exp_ridx)"
  }
]