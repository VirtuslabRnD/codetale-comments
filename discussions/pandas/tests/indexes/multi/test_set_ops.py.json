[
  {
    "id" : "f62a2d60-23e4-47f1-81f2-e97609e1958c",
    "prId" : 21928,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/21928#pullrequestreview-140096928",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5f69831c-2d07-459c-a129-22b469b19d47",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "if you want to come back and parameterize things like this would be great (but future PR)",
        "createdAt" : "2018-07-24T22:01:19Z",
        "updatedAt" : "2018-07-24T22:01:19Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "e993d4da6d8afcb5150ee6024ebefaebe75e62f8",
    "line" : 131,
    "diffHunk" : "@@ -1,1 +87,91 @@\n    # GH 10149\n    cases = [klass(second.values)\n             for klass in [np.array, Series, list]]\n    for case in cases:"
  },
  {
    "id" : "11344a5f-5b6f-4da9-990a-3b398b124a8d",
    "prId" : 24521,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/24521#pullrequestreview-188542860",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "13117010-13a4-4afc-8805-75bc67b8c32e",
        "parentId" : null,
        "authorId" : "7ac4c9e7-abb0-4bee-8b35-0f2b9e19bd9e",
        "body" : "I usually only use ``assert_index_equal`` in the case where ``sort=True`` because in many cases the results when ``sort=False`` are not deterministic (e.g., might be relying on ``set``s from Python which are not guaranteed to have the same order as far as I know). Instead I use ``tm.equalContents`` when ``sort=False`` which does not seem to check for the order.",
        "createdAt" : "2018-12-31T20:23:14Z",
        "updatedAt" : "2019-01-19T18:22:04Z",
        "lastEditedBy" : "7ac4c9e7-abb0-4bee-8b35-0f2b9e19bd9e",
        "tags" : [
        ]
      },
      {
        "id" : "31a3407c-ee2c-481b-a4f9-24b8b334ec5c",
        "parentId" : "13117010-13a4-4afc-8805-75bc67b8c32e",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "yeah ideally we would be able to remove tm.equalContents, just in favor or assert_almost_equal; the writer of the test can have a deterministic ordering (rather than leave it up to a set impl).",
        "createdAt" : "2018-12-31T23:43:50Z",
        "updatedAt" : "2019-01-19T18:22:04Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "7b15248d3b8169b3fbde53e91fb02ef091e5ee00",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +27,31 @@\n    if sort:\n        tm.assert_index_equal(intersect, second.sort_values())\n    assert tm.equalContents(intersect, second)\n"
  },
  {
    "id" : "f660431c-7f7c-4e8c-b6a2-c8c971b56fc2",
    "prId" : 25063,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/25063#pullrequestreview-199061799",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b981f83d-1849-4097-adee-cc51b7015eb3",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "add the issue number to these",
        "createdAt" : "2019-02-01T13:01:42Z",
        "updatedAt" : "2019-02-01T20:06:14Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "1c5a0376dd93c38ffe71225cec9cea15fd9624f0",
    "line" : 116,
    "diffHunk" : "@@ -1,1 +192,196 @@def test_difference_sort_special():\n    # GH-24959\n    idx = pd.MultiIndex.from_product([[1, 0], ['a', 'b']])\n    # sort=None, the default\n    result = idx.difference([])"
  },
  {
    "id" : "5d28e2dd-b69e-4dbf-ba40-5b6ad99639b4",
    "prId" : 25063,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/25063#pullrequestreview-199061799",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d373b703-8013-4c58-9ceb-00c773e23e51",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "add the issue number",
        "createdAt" : "2019-02-01T13:01:52Z",
        "updatedAt" : "2019-02-01T20:06:14Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "1c5a0376dd93c38ffe71225cec9cea15fd9624f0",
    "line" : 199,
    "diffHunk" : "@@ -1,1 +302,306 @@def test_intersect_equal_sort():\n    # GH-24959\n    idx = pd.MultiIndex.from_product([[1, 0], ['a', 'b']])\n    tm.assert_index_equal(idx.intersection(idx, sort=False), idx)\n    tm.assert_index_equal(idx.intersection(idx, sort=None), idx)"
  },
  {
    "id" : "d67c5ac9-0cb9-46ed-a789-7dd3262fac34",
    "prId" : 25063,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/25063#pullrequestreview-409530931",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fa89ec84-55c9-4840-acba-3d77c4d92f48",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "@TomAugspurger thoughts on what it would take to reach a conclusion about this?  worth adding to the agenda for next week?  I think without a specific effort this is liable to stay failing indefinitely",
        "createdAt" : "2020-05-09T01:12:11Z",
        "updatedAt" : "2020-05-09T01:12:11Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "d3330632-1a7f-4c81-8746-5b2fa3b18658",
        "parentId" : "fa89ec84-55c9-4840-acba-3d77c4d92f48",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Perhaps I misunderstand, but should the expected result be the current result with `.sort_values()` called on it?",
        "createdAt" : "2020-05-11T21:06:27Z",
        "updatedAt" : "2020-05-11T21:06:27Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "1c5a0376dd93c38ffe71225cec9cea15fd9624f0",
    "line" : 124,
    "diffHunk" : "@@ -1,1 +200,204 @@@pytest.mark.xfail(reason=\"Not implemented.\")\ndef test_difference_sort_special_true():\n    # TODO decide on True behaviour\n    idx = pd.MultiIndex.from_product([[1, 0], ['a', 'b']])\n    result = idx.difference([], sort=True)"
  }
]