[
  {
    "id" : "b1a2c92a-f036-4afd-beb4-f055b7925c75",
    "prId" : 16586,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/16586#pullrequestreview-48495658",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d246729d-44f5-4abb-bc92-324641c193c3",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you also add the tests from the original issue (it was on PI) as a specific test.",
        "createdAt" : "2017-07-04T14:18:54Z",
        "updatedAt" : "2017-07-07T10:29:25Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "65dd3ee4-8828-459c-9814-7b3b26088bb5",
        "parentId" : "d246729d-44f5-4abb-bc92-324641c193c3",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "I mean this test here: https://github.com/pandas-dev/pandas/issues/16541#issue-232356015",
        "createdAt" : "2017-07-06T22:48:39Z",
        "updatedAt" : "2017-07-07T10:29:25Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "6404e4f6-3f09-49f8-b452-e425a7c960ec",
        "parentId" : "d246729d-44f5-4abb-bc92-324641c193c3",
        "authorId" : "b640884a-d4a1-49d9-80e8-e108ea20e1fe",
        "body" : "do mean mean add the code that generated the issue as a test (joining two randomly generated 5x5 DataFrames)?  I don't really understand what you're asking me to do.",
        "createdAt" : "2017-07-07T00:12:45Z",
        "updatedAt" : "2017-07-07T10:29:25Z",
        "lastEditedBy" : "b640884a-d4a1-49d9-80e8-e108ea20e1fe",
        "tags" : [
        ]
      }
    ],
    "commit" : "2aea2b54ae09a9e8fcbdee904c3ed261617e762c",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +935,939 @@        assert index[:0].empty\n\n    @pytest.mark.parametrize('how', ['outer', 'inner', 'left', 'right'])\n    def test_join_self_unique(self, how):\n        index = self.create_index()"
  },
  {
    "id" : "67984417-376a-4af3-935a-54e7fc7db0b7",
    "prId" : 17272,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/17272#pullrequestreview-545668584",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2195faf6-ead9-4300-a6fe-ceba6fa9b642",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "@jschendel why is CategoricalIndex excluded here?",
        "createdAt" : "2020-12-06T03:59:04Z",
        "updatedAt" : "2020-12-06T03:59:04Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "41e59d7f9947518f85dc2c38ac9da7ac6eaec64b",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +140,144 @@                continue\n\n            if index.is_unique or isinstance(index, CategoricalIndex):\n                indexer = index.get_indexer(index[0:2])\n                assert isinstance(indexer, np.ndarray)"
  },
  {
    "id" : "4045eb72-923c-445b-968e-1f29c82e3216",
    "prId" : 17815,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/17815#pullrequestreview-67902634",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "84629b8d-4034-4b80-97df-ade3f15565b1",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "There is at least one in the `create_index` indices that has a name? (or at least one that has no name)",
        "createdAt" : "2017-10-09T07:27:02Z",
        "updatedAt" : "2017-10-09T07:38:20Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "68ad08db-408a-4232-8986-39c1e44c9350",
        "parentId" : "84629b8d-4034-4b80-97df-ade3f15565b1",
        "authorId" : "51189123-86a2-400a-9762-6816882b6f12",
        "body" : "Yes, there is.",
        "createdAt" : "2017-10-09T07:32:49Z",
        "updatedAt" : "2017-10-09T07:38:20Z",
        "lastEditedBy" : "51189123-86a2-400a-9762-6816882b6f12",
        "tags" : [
        ]
      }
    ],
    "commit" : "1c0aaec3cc03bdb2f58a993d008ba4d4ed36c8ee",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +55,59 @@        # see gh-15230\n        idx = self.create_index()\n        name = idx.name or 0\n\n        df = idx.to_frame()"
  },
  {
    "id" : "675aa7fc-e261-48a7-9a35-055e9bd2e44f",
    "prId" : 18707,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/18707#pullrequestreview-82354099",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "45b54abb-16d3-4494-bf10-6fa07db62b62",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "you can do this in 1 test",
        "createdAt" : "2017-12-10T15:47:47Z",
        "updatedAt" : "2017-12-10T17:57:32Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "ec05208ba2f24cb5c9da5134bbc1e1081f5fb5a3",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +61,65 @@        assert s.index is idx\n        assert s.name == idx.name\n\n        # name kwarg\n        idx = self.create_index()"
  },
  {
    "id" : "14dd49c8-c3f3-461b-b8e9-083c89d36fc6",
    "prId" : 20611,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/20611#pullrequestreview-109412132",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e1911356-a8a3-414c-9bb4-9acd14dfe095",
        "parentId" : null,
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Made this change since `IntervalArray` currently isn't mutable. Worth talking about that.",
        "createdAt" : "2018-04-04T16:56:54Z",
        "updatedAt" : "2018-07-13T01:00:53Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "385ce59f79ff1921a44f3bbaa17044032e3ed4d3",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +887,891 @@\n                idx = index.copy()\n                values = np.asarray(idx.values)\n\n                if len(index) == 0:"
  },
  {
    "id" : "6475513f-c855-4976-ba51-8262fd4271b5",
    "prId" : 21902,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/21902#pullrequestreview-137240619",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "75e4206c-c59b-44cb-919c-795a9f3e7341",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "is this a duplicate these (pun intended) or are not testing indices duplicated currently?",
        "createdAt" : "2018-07-14T14:16:49Z",
        "updatedAt" : "2018-08-09T08:05:54Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "b6d67a1b-65ec-463e-a92e-b9ad00e547ec",
        "parentId" : "75e4206c-c59b-44cb-919c-795a9f3e7341",
        "authorId" : "5f34c5f9-b309-4032-bd6e-1f14b864aae4",
        "body" : "@jreback `.duplicated` is hardly ever tested directly, only indirectly for stuff like `.drop_duplicates`. Regardless of the changes to `.duplicated` in #21645, I think duplicated should be tested separately.",
        "createdAt" : "2018-07-14T14:31:50Z",
        "updatedAt" : "2018-08-09T08:05:54Z",
        "lastEditedBy" : "5f34c5f9-b309-4032-bd6e-1f14b864aae4",
        "tags" : [
        ]
      },
      {
        "id" : "85be5ac9-3b2b-4352-bf20-60690588550e",
        "parentId" : "75e4206c-c59b-44cb-919c-795a9f3e7341",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "so these are not relevant?\r\n```\r\npandas/tests/indexes/common.py:    def test_duplicates(self, indices):\r\npandas/tests/indexes/test_category.py:    def test_duplicates(self):\r\npandas/tests/indexes/test_range.py:    def test_duplicates(self):\r\n```",
        "createdAt" : "2018-07-14T14:57:26Z",
        "updatedAt" : "2018-08-09T08:05:54Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "8ea9afe7-548c-4723-b802-6887f837d087",
        "parentId" : "75e4206c-c59b-44cb-919c-795a9f3e7341",
        "authorId" : "5f34c5f9-b309-4032-bd6e-1f14b864aae4",
        "body" : "@jreback No, `test_duplicates` (at least for `pandas/tests/indexes/common.py`, which is what this PR is about) tests `.is_unique` and `.has_duplicates`, but not the `.duplicated`-method itself.",
        "createdAt" : "2018-07-14T15:02:58Z",
        "updatedAt" : "2018-08-09T08:05:54Z",
        "lastEditedBy" : "5f34c5f9-b309-4032-bd6e-1f14b864aae4",
        "tags" : [
        ]
      },
      {
        "id" : "1075b4c2-4fa8-43e4-aec4-e328f7422a73",
        "parentId" : "75e4206c-c59b-44cb-919c-795a9f3e7341",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you point to the coverage that shows this is NOT tested?",
        "createdAt" : "2018-07-14T15:07:05Z",
        "updatedAt" : "2018-08-09T08:05:54Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "33481f31-4da0-409b-92cf-5445eedd8b05",
        "parentId" : "75e4206c-c59b-44cb-919c-795a9f3e7341",
        "authorId" : "5f34c5f9-b309-4032-bd6e-1f14b864aae4",
        "body" : "@jreback I never said that it is not tested, just that it is only tested *implicitly*. Any call to `.drop_duplicates` will invoke `duplicated`, so obviously the coverage works out.",
        "createdAt" : "2018-07-14T15:09:55Z",
        "updatedAt" : "2018-08-09T08:05:54Z",
        "lastEditedBy" : "5f34c5f9-b309-4032-bd6e-1f14b864aae4",
        "tags" : [
        ]
      }
    ],
    "commit" : "f9c9aab75b63bf3367f5c9818c3f4a833efbe393",
    "line" : 49,
    "diffHunk" : "@@ -1,1 +352,356 @@        assert idx.has_duplicates\n\n    @pytest.mark.parametrize('keep', ['first', 'last', False])\n    def test_duplicated(self, indices, keep):\n        if type(indices) is not self._holder:"
  },
  {
    "id" : "0a854895-df83-45d5-92e6-4d298aa12af3",
    "prId" : 21902,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/21902#pullrequestreview-143478094",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "956fd15b-41f0-4b70-90a1-4b31b4373978",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you use isinstance here",
        "createdAt" : "2018-07-16T10:58:56Z",
        "updatedAt" : "2018-08-09T08:05:54Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "06ce647f-edfc-41b4-862a-d321ff967d3b",
        "parentId" : "956fd15b-41f0-4b70-90a1-4b31b4373978",
        "authorId" : "5f34c5f9-b309-4032-bd6e-1f14b864aae4",
        "body" : "@jreback `isinstance` of what? I copied the checks from other tests, because I didn't know all the different cases that flow into `common.py`.",
        "createdAt" : "2018-07-16T11:01:49Z",
        "updatedAt" : "2018-08-09T08:05:54Z",
        "lastEditedBy" : "5f34c5f9-b309-4032-bd6e-1f14b864aae4",
        "tags" : [
        ]
      },
      {
        "id" : "745c8a76-4f5a-4dc3-9980-629e2d0ab93f",
        "parentId" : "956fd15b-41f0-4b70-90a1-4b31b4373978",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "isinstance of self._holder, is this what we do elsewhere?",
        "createdAt" : "2018-07-16T11:04:06Z",
        "updatedAt" : "2018-08-09T08:05:54Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "3a347272-cd65-4579-959f-e7a50f03e1ce",
        "parentId" : "956fd15b-41f0-4b70-90a1-4b31b4373978",
        "authorId" : "5f34c5f9-b309-4032-bd6e-1f14b864aae4",
        "body" : "not in `indexes/common.py`, as far as I can see. There's several `isinstance` of course, but never for `self._holder`, which can apparently be `None` as well.",
        "createdAt" : "2018-07-16T15:11:54Z",
        "updatedAt" : "2018-08-09T08:05:54Z",
        "lastEditedBy" : "5f34c5f9-b309-4032-bd6e-1f14b864aae4",
        "tags" : [
        ]
      },
      {
        "id" : "06a7874a-fcee-4473-bf4e-d8f45f3ead9e",
        "parentId" : "956fd15b-41f0-4b70-90a1-4b31b4373978",
        "authorId" : "5f34c5f9-b309-4032-bd6e-1f14b864aae4",
        "body" : "@jreback If I change\r\n```\r\nif type(indices) is not self._holder:\r\n```\r\nto\r\n```\r\nif not isinstance(indices, self._holder):\r\n```\r\nI get 9 failures (instead of skips), all of which are from\r\n\r\n`tests/indexes/test_numeric.TestInt64Index`, when run against `DatetimeIndex`, `PeriodIndex` or `TimedeltaIndex`, mainly because of `TypeError: Unsafe NumPy casting, you must explicitly cast` it seems.",
        "createdAt" : "2018-07-16T15:35:07Z",
        "updatedAt" : "2018-08-09T08:05:54Z",
        "lastEditedBy" : "5f34c5f9-b309-4032-bd6e-1f14b864aae4",
        "tags" : [
        ]
      },
      {
        "id" : "ee77dfa7-e869-4c69-85f9-ef1b1e5186a0",
        "parentId" : "956fd15b-41f0-4b70-90a1-4b31b4373978",
        "authorId" : "5f34c5f9-b309-4032-bd6e-1f14b864aae4",
        "body" : "@jreback Seem to have found something: in my normal workbook, I get\r\n```\r\npd.__version__\r\n# '0.24.0.dev0+321.g0fe6ded52.dirty'\r\nisinstance(pd.PeriodIndex, pd.Int64Index)\r\n# False\r\n```\r\nbut for some reason, within `tests/indexes/common.py`, this is the opposite:\r\n```\r\n    [...output of test run...]\r\n    \r\n    @pytest.mark.parametrize('keep', ['first', 'last', False])\r\n    def test_duplicated(self, indices, keep):\r\n        if not isinstance(indices, self._holder):\r\n            pytest.skip('Can only check if we know the index type')\r\n        if not len(indices) or isinstance(indices, (MultiIndex)):\r\n            # MultiIndex tested separately in:\r\n            # tests/indexes/multi/test_unique_and_duplicates\r\n            pytest.skip('Skip check for empty Index and MultiIndex')\r\n        if isinstance(indices, (PeriodIndex, DatetimeIndex)):\r\n            # this branch should be impossible for Int64Index\r\n            # after the instance-check above!\r\n>           raise ValueError(f'{type(indices).__name__}, {self._holder.__name__}, '\r\n                             f'{isinstance(indices, self._holder)}, {type(indices) is self._holder}')\r\nE           ValueError: PeriodIndex, Int64Index, True, False\r\n```\r\nSame happens for `DatetimeIndex`. It *does* work for the original `is not` variant, so I'm leaving that as it is for now.",
        "createdAt" : "2018-07-16T16:00:16Z",
        "updatedAt" : "2018-08-09T08:05:54Z",
        "lastEditedBy" : "5f34c5f9-b309-4032-bd6e-1f14b864aae4",
        "tags" : [
        ]
      },
      {
        "id" : "f22944d9-74a0-413f-bb9a-6d0fbb65900e",
        "parentId" : "956fd15b-41f0-4b70-90a1-4b31b4373978",
        "authorId" : "5f34c5f9-b309-4032-bd6e-1f14b864aae4",
        "body" : "Opened a follow-up: #22211",
        "createdAt" : "2018-08-06T06:38:49Z",
        "updatedAt" : "2018-08-09T08:05:54Z",
        "lastEditedBy" : "5f34c5f9-b309-4032-bd6e-1f14b864aae4",
        "tags" : [
        ]
      },
      {
        "id" : "7df7e2bc-fe2e-4cb7-8b15-f468340fa44b",
        "parentId" : "956fd15b-41f0-4b70-90a1-4b31b4373978",
        "authorId" : "5f34c5f9-b309-4032-bd6e-1f14b864aae4",
        "body" : "Nevermind, I had gotten confused between instances and classes.\r\n\r\nSo `DatetimeIndex`, `PeriodIndex` and `TimedeltaIndex` are subclasses of `Int64Index` - but are unsafe to cast to Int64...? I guess this is intentional?\r\n\r\nIn any case, under these circumstances, I'm even more convinced that it's best to just stay with the `if type(indices) is not self._holder:` condition.",
        "createdAt" : "2018-08-06T07:30:15Z",
        "updatedAt" : "2018-08-09T08:05:54Z",
        "lastEditedBy" : "5f34c5f9-b309-4032-bd6e-1f14b864aae4",
        "tags" : [
        ]
      }
    ],
    "commit" : "f9c9aab75b63bf3367f5c9818c3f4a833efbe393",
    "line" : 51,
    "diffHunk" : "@@ -1,1 +354,358 @@    @pytest.mark.parametrize('keep', ['first', 'last', False])\n    def test_duplicated(self, indices, keep):\n        if type(indices) is not self._holder:\n            pytest.skip('Can only check if we know the index type')\n        if not len(indices) or isinstance(indices, MultiIndex):"
  },
  {
    "id" : "318d6726-7512-4dc5-9afb-9da4ee655566",
    "prId" : 21902,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/21902#pullrequestreview-139059331",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "34d934b5-a54e-441b-b8ce-b53738944cfc",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "I hate to check as a numpy array, much prefer to check the type and use assert_index_equal or assert_series_equal. is this how the other tests are?",
        "createdAt" : "2018-07-20T13:04:52Z",
        "updatedAt" : "2018-08-09T08:05:54Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "dcf54a77-f667-4219-976a-ff0d55fdd4fa",
        "parentId" : "34d934b5-a54e-441b-b8ce-b53738944cfc",
        "authorId" : "5f34c5f9-b309-4032-bd6e-1f14b864aae4",
        "body" : "Um, `index.duplicated()` (without `return_inverse`) yields a numpy array - this is the documented signature (I guess because selecting on an `Index` really only needs an `ndarray`).\r\n\r\nAll the manual `duplicated`-tests actually create their own data, and _know_ what the correct outcome should be. Here, we're feeding tons of different things through that test, so we need to determine - as I'm doing with `duplicated_selection` what is actually duplicate; `self._holder(idx.values[duplicated_selection])` is then a duplicate Index of the correct type, but we know where its duplicates are (from inspecting `duplicated_selection`), and therefore can validate.",
        "createdAt" : "2018-07-20T13:36:57Z",
        "updatedAt" : "2018-08-09T08:05:54Z",
        "lastEditedBy" : "5f34c5f9-b309-4032-bd6e-1f14b864aae4",
        "tags" : [
        ]
      }
    ],
    "commit" : "f9c9aab75b63bf3367f5c9818c3f4a833efbe393",
    "line" : 70,
    "diffHunk" : "@@ -1,1 +373,377 @@        n, k = len(idx), 10\n        duplicated_selection = np.random.choice(n, k * n)\n        expected = pd.Series(duplicated_selection).duplicated(keep=keep).values\n        idx = self._holder(idx.values[duplicated_selection])\n"
  },
  {
    "id" : "e04609c5-0bad-43aa-857a-48754de79025",
    "prId" : 23796,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23796#pullrequestreview-176519062",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e3585b43-44cb-4c46-b660-ee32c3a6cff7",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "should the version number be removed or updated?",
        "createdAt" : "2018-11-19T21:54:41Z",
        "updatedAt" : "2018-11-25T13:01:37Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "0473c56b-91da-4e34-8573-0c9812b9af80",
        "parentId" : "e3585b43-44cb-4c46-b660-ee32c3a6cff7",
        "authorId" : "5f34c5f9-b309-4032-bd6e-1f14b864aae4",
        "body" : "Ufuncs are here to stay now, no? That's why I removed it.\r\n\r\nUnless you mean that the set of ufuncs is related to the version number?",
        "createdAt" : "2018-11-19T22:06:19Z",
        "updatedAt" : "2018-11-25T13:01:37Z",
        "lastEditedBy" : "5f34c5f9-b309-4032-bd6e-1f14b864aae4",
        "tags" : [
        ]
      }
    ],
    "commit" : "ce5bd94125310571c6ca9cfa3ab4aed31b49dcde",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +664,668 @@\n    def test_numpy_ufuncs(self):\n        # test ufuncs of numpy, see:\n        # http://docs.scipy.org/doc/numpy/reference/ufuncs.html\n"
  },
  {
    "id" : "9be1a6b8-9a62-468a-a4a9-b6710f701e64",
    "prId" : 28865,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/28865#pullrequestreview-299460029",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "249e1149-4b84-40b4-84bd-892f5336eab6",
        "parentId" : null,
        "authorId" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "body" : "maybe this should be a pytest.skip instead of a return?",
        "createdAt" : "2019-10-09T14:35:00Z",
        "updatedAt" : "2019-10-09T15:35:26Z",
        "lastEditedBy" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "tags" : [
        ]
      }
    ],
    "commit" : "286a81c1fcb811a242c92cf77da44b1828c4382a",
    "line" : 58,
    "diffHunk" : "@@ -1,1 +258,262 @@        # passed at initialization is honored.\n        if isinstance(indices, MultiIndex):\n            return\n\n        first = indices.__class__(indices, copy=True, name=\"mario\")"
  },
  {
    "id" : "f3ecc818-6b49-4e4d-b765-9aa2b5040ffa",
    "prId" : 28865,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/28865#pullrequestreview-299460029",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a6684b33-9737-4ed6-b26e-4cfe9f554bf5",
        "parentId" : null,
        "authorId" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "body" : "pytest.skip?",
        "createdAt" : "2019-10-09T14:39:18Z",
        "updatedAt" : "2019-10-09T15:35:26Z",
        "lastEditedBy" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "tags" : [
        ]
      }
    ],
    "commit" : "286a81c1fcb811a242c92cf77da44b1828c4382a",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +205,209 @@        # See GH 16819\n        if isinstance(indices, IntervalIndex):\n            return\n\n        if indices.is_unique or isinstance(indices, CategoricalIndex):"
  },
  {
    "id" : "f3839a64-7e10-486b-ae3a-17b0c5dde396",
    "prId" : 28865,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/28865#pullrequestreview-299460029",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ef519f7e-19e2-4b27-aaf7-5f91b5955a75",
        "parentId" : null,
        "authorId" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "body" : "pytest.skip?",
        "createdAt" : "2019-10-09T14:41:02Z",
        "updatedAt" : "2019-10-09T15:35:26Z",
        "lastEditedBy" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "tags" : [
        ]
      }
    ],
    "commit" : "286a81c1fcb811a242c92cf77da44b1828c4382a",
    "line" : 122,
    "diffHunk" : "@@ -1,1 +290,294 @@            # RangeIndex cannot be initialized from data\n            # MultiIndex and CategoricalIndex are tested separately\n            return\n\n        index_type = indices.__class__"
  },
  {
    "id" : "77c08853-1594-4cf9-8c5d-875037d52662",
    "prId" : 28865,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/28865#pullrequestreview-299460029",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2fd488b9-a6f3-4c9c-973b-531648f27a76",
        "parentId" : null,
        "authorId" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "body" : "pytest.skip?",
        "createdAt" : "2019-10-09T14:42:20Z",
        "updatedAt" : "2019-10-09T15:35:26Z",
        "lastEditedBy" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "tags" : [
        ]
      }
    ],
    "commit" : "286a81c1fcb811a242c92cf77da44b1828c4382a",
    "line" : 140,
    "diffHunk" : "@@ -1,1 +307,311 @@        elif isinstance(indices, IntervalIndex):\n            # checked in test_interval.py\n            pass\n        else:\n            result = index_type(indices.values, copy=False, **init_kwargs)"
  },
  {
    "id" : "7ce91bf5-ec2f-4145-8429-ecb259e4afca",
    "prId" : 28865,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/28865#pullrequestreview-299460029",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "11dc23b7-898d-4243-907a-7c2462a434b1",
        "parentId" : null,
        "authorId" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "body" : "skip?",
        "createdAt" : "2019-10-09T14:45:55Z",
        "updatedAt" : "2019-10-09T15:35:26Z",
        "lastEditedBy" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "tags" : [
        ]
      }
    ],
    "commit" : "286a81c1fcb811a242c92cf77da44b1828c4382a",
    "line" : 251,
    "diffHunk" : "@@ -1,1 +341,345 @@        # separately tested\n        if isinstance(indices, CategoricalIndex):\n            return\n\n        result = indices.argsort()"
  },
  {
    "id" : "ee096211-4f63-456d-9847-ff2d171baea9",
    "prId" : 28865,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/28865#pullrequestreview-299460029",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "96a9b2f3-9aaf-47d7-a4cb-b5c7fece743e",
        "parentId" : null,
        "authorId" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "body" : "skip?",
        "createdAt" : "2019-10-09T14:47:44Z",
        "updatedAt" : "2019-10-09T15:35:26Z",
        "lastEditedBy" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "tags" : [
        ]
      }
    ],
    "commit" : "286a81c1fcb811a242c92cf77da44b1828c4382a",
    "line" : 291,
    "diffHunk" : "@@ -1,1 +376,380 @@        if len(indices) < 5:\n            # not enough elements; ignore\n            return\n\n        result = indices.take(indexer)"
  },
  {
    "id" : "9ae4ea47-f353-482a-a68a-137aa938471e",
    "prId" : 28865,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/28865#pullrequestreview-299460029",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7de59672-bcd0-4fa2-961e-d33398a13bcd",
        "parentId" : null,
        "authorId" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "body" : "why's this changing? IMO skipping the indices explicitly is more clear.",
        "createdAt" : "2019-10-09T14:50:16Z",
        "updatedAt" : "2019-10-09T15:35:26Z",
        "lastEditedBy" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "tags" : [
        ]
      }
    ],
    "commit" : "286a81c1fcb811a242c92cf77da44b1828c4382a",
    "line" : 289,
    "diffHunk" : "@@ -1,1 +374,378 @@    def test_take(self, indices):\n        indexer = [4, 3, 0, 2]\n        if len(indices) < 5:\n            # not enough elements; ignore\n            return"
  },
  {
    "id" : "2796577a-dcbb-4810-8365-42984cd6cbca",
    "prId" : 28865,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/28865#pullrequestreview-299460029",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2e90ffed-a325-4b97-8ee5-95b803c4b489",
        "parentId" : null,
        "authorId" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "body" : "this test looks to be in the wrong place. It may be worth fixing while you're in the neighborhood.",
        "createdAt" : "2019-10-09T14:52:38Z",
        "updatedAt" : "2019-10-09T15:35:26Z",
        "lastEditedBy" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "tags" : [
        ]
      }
    ],
    "commit" : "286a81c1fcb811a242c92cf77da44b1828c4382a",
    "line" : 304,
    "diffHunk" : "@@ -1,1 +382,386 @@        assert result.equals(expected)\n\n        if not isinstance(indices, (DatetimeIndex, PeriodIndex, TimedeltaIndex)):\n            # GH 10791\n            with pytest.raises(AttributeError):"
  },
  {
    "id" : "0d1c5349-88f9-40bc-a062-ae769d6f8823",
    "prId" : 28865,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/28865#pullrequestreview-299460029",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "290fb305-0a17-43c7-884c-78ac7b05e5ec",
        "parentId" : null,
        "authorId" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "body" : "skip?",
        "createdAt" : "2019-10-09T14:53:12Z",
        "updatedAt" : "2019-10-09T15:35:26Z",
        "lastEditedBy" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "tags" : [
        ]
      }
    ],
    "commit" : "286a81c1fcb811a242c92cf77da44b1828c4382a",
    "line" : 329,
    "diffHunk" : "@@ -1,1 +450,454 @@    def test_intersection_base(self, indices):\n        if isinstance(indices, CategoricalIndex):\n            return\n\n        first = indices[:5]"
  },
  {
    "id" : "a71f963a-49b7-4d5e-bd59-3fcc3886dc80",
    "prId" : 28865,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/28865#pullrequestreview-299460029",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b7ce5a0a-7ad1-4efa-9463-6ae86f7ffc45",
        "parentId" : null,
        "authorId" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "body" : "not sure about this change. allowing CategoricalIndex to fall though to end.",
        "createdAt" : "2019-10-09T14:55:28Z",
        "updatedAt" : "2019-10-09T15:35:27Z",
        "lastEditedBy" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "tags" : [
        ]
      }
    ],
    "commit" : "286a81c1fcb811a242c92cf77da44b1828c4382a",
    "line" : 414,
    "diffHunk" : "@@ -1,1 +478,482 @@        cases = [klass(second.values) for klass in [np.array, Series, list]]\n        for case in cases:\n            if not isinstance(indices, CategoricalIndex):\n                result = first.union(case)\n                assert tm.equalContents(result, everything)"
  },
  {
    "id" : "d2c5e9d8-24bf-4308-8e16-2e72cc4162cf",
    "prId" : 28865,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/28865#pullrequestreview-299460029",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dc720cb5-a51b-4334-a5da-b22ac43c09ba",
        "parentId" : null,
        "authorId" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "body" : "skip?",
        "createdAt" : "2019-10-09T14:56:22Z",
        "updatedAt" : "2019-10-09T15:35:27Z",
        "lastEditedBy" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "tags" : [
        ]
      }
    ],
    "commit" : "286a81c1fcb811a242c92cf77da44b1828c4382a",
    "line" : 451,
    "diffHunk" : "@@ -1,1 +490,494 @@    def test_difference_base(self, sort, indices):\n        if isinstance(indices, CategoricalIndex):\n            return\n\n        first = indices[2:]"
  },
  {
    "id" : "1fa700b4-9bb3-45cc-bf43-44d7ee3f0b0d",
    "prId" : 28865,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/28865#pullrequestreview-299460029",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d2018438-5e52-427f-91e2-9c45b366899d",
        "parentId" : null,
        "authorId" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "body" : "skip?",
        "createdAt" : "2019-10-09T14:57:25Z",
        "updatedAt" : "2019-10-09T15:35:27Z",
        "lastEditedBy" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "tags" : [
        ]
      }
    ],
    "commit" : "286a81c1fcb811a242c92cf77da44b1828c4382a",
    "line" : 501,
    "diffHunk" : "@@ -1,1 +517,521 @@    def test_symmetric_difference(self, indices):\n        if isinstance(indices, CategoricalIndex):\n            return\n\n        first = indices[1:]"
  },
  {
    "id" : "3d4d8619-9e1d-49fc-a119-ec07efbcd604",
    "prId" : 28865,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/28865#pullrequestreview-299460029",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "593809bf-b137-45d1-8916-df3e71feef4e",
        "parentId" : null,
        "authorId" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "body" : "skip?",
        "createdAt" : "2019-10-09T14:58:17Z",
        "updatedAt" : "2019-10-09T15:35:27Z",
        "lastEditedBy" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "tags" : [
        ]
      }
    ],
    "commit" : "286a81c1fcb811a242c92cf77da44b1828c4382a",
    "line" : 527,
    "diffHunk" : "@@ -1,1 +540,544 @@\n        if not len(indices):\n            return\n\n        # test 0th element"
  },
  {
    "id" : "be813b9e-2b08-4af2-84b5-37a41ce38e05",
    "prId" : 28865,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/28865#pullrequestreview-299460029",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b4525fdc-14a7-4223-ad34-d9b730c81496",
        "parentId" : null,
        "authorId" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "body" : "skip?",
        "createdAt" : "2019-10-09T14:58:37Z",
        "updatedAt" : "2019-10-09T15:35:27Z",
        "lastEditedBy" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "tags" : [
        ]
      }
    ],
    "commit" : "286a81c1fcb811a242c92cf77da44b1828c4382a",
    "line" : 537,
    "diffHunk" : "@@ -1,1 +547,551 @@    def test_delete_base(self, indices):\n        if not len(indices):\n            return\n\n        if isinstance(indices, RangeIndex):"
  },
  {
    "id" : "29514822-4b9e-4b1a-ad6b-46d64e9c2ab3",
    "prId" : 28865,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/28865#pullrequestreview-299460029",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "81c95096-4f05-4349-8b74-889b0a293f61",
        "parentId" : null,
        "authorId" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "body" : "skip?",
        "createdAt" : "2019-10-09T14:58:50Z",
        "updatedAt" : "2019-10-09T15:35:27Z",
        "lastEditedBy" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "tags" : [
        ]
      }
    ],
    "commit" : "286a81c1fcb811a242c92cf77da44b1828c4382a",
    "line" : 544,
    "diffHunk" : "@@ -1,1 +551,555 @@        if isinstance(indices, RangeIndex):\n            # tested in class\n            return\n\n        expected = indices[1:]"
  },
  {
    "id" : "79bb948a-e7ae-4474-a121-5e3d32120642",
    "prId" : 28865,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/28865#pullrequestreview-299460029",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a50c732c-7c9a-4bcf-b4d9-49af28b3291e",
        "parentId" : null,
        "authorId" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "body" : "skip?",
        "createdAt" : "2019-10-09T14:59:29Z",
        "updatedAt" : "2019-10-09T15:35:27Z",
        "lastEditedBy" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "tags" : [
        ]
      }
    ],
    "commit" : "286a81c1fcb811a242c92cf77da44b1828c4382a",
    "line" : 575,
    "diffHunk" : "@@ -1,1 +570,574 @@        if isinstance(indices, IntervalIndex):\n            # IntervalIndex tested separately\n            return\n\n        assert indices.equals(indices)"
  },
  {
    "id" : "80ac6911-3e89-4826-bb1a-ccbd4184ea72",
    "prId" : 28865,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/28865#pullrequestreview-299460029",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ce3550fd-0621-412e-a62e-f8c5a794b71a",
        "parentId" : null,
        "authorId" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "body" : "skip?",
        "createdAt" : "2019-10-09T14:59:59Z",
        "updatedAt" : "2019-10-09T15:35:27Z",
        "lastEditedBy" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "tags" : [
        ]
      }
    ],
    "commit" : "286a81c1fcb811a242c92cf77da44b1828c4382a",
    "line" : 618,
    "diffHunk" : "@@ -1,1 +656,660 @@        # GH 11343, added tests for hasnans / isnans\n        if isinstance(indices, MultiIndex):\n            return\n\n        # cases in indices doesn't include NaN"
  },
  {
    "id" : "2561bd0a-d667-4b18-88dc-7b3cdf17d17f",
    "prId" : 28865,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/28865#pullrequestreview-299460029",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a474514c-e8bb-4581-87fc-e14fc92e8485",
        "parentId" : null,
        "authorId" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "body" : "why did this need to be changed?",
        "createdAt" : "2019-10-09T15:00:45Z",
        "updatedAt" : "2019-10-09T15:35:27Z",
        "lastEditedBy" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "tags" : [
        ]
      }
    ],
    "commit" : "286a81c1fcb811a242c92cf77da44b1828c4382a",
    "line" : 621,
    "diffHunk" : "@@ -1,1 +659,663 @@\n        # cases in indices doesn't include NaN\n        idx = indices.copy(deep=True)\n        expected = np.array([False] * len(idx), dtype=bool)\n        tm.assert_numpy_array_equal(idx._isnan, expected)"
  },
  {
    "id" : "a51187e2-ab19-4fd5-8426-d2692b38bebd",
    "prId" : 28865,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/28865#pullrequestreview-299460029",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9b49b90d-6590-4806-b877-479fe3487272",
        "parentId" : null,
        "authorId" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "body" : "skip?",
        "createdAt" : "2019-10-09T15:01:04Z",
        "updatedAt" : "2019-10-09T15:35:27Z",
        "lastEditedBy" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "tags" : [
        ]
      }
    ],
    "commit" : "286a81c1fcb811a242c92cf77da44b1828c4382a",
    "line" : 630,
    "diffHunk" : "@@ -1,1 +668,672 @@\n        if len(indices) == 0:\n            return\n        elif isinstance(indices, DatetimeIndexOpsMixin):\n            values[1] = iNaT"
  },
  {
    "id" : "aadfe95b-f4a8-4420-8ef2-b27ec6db5779",
    "prId" : 28865,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/28865#pullrequestreview-299460029",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7a032333-d2be-4e6e-99ec-188c4900780f",
        "parentId" : null,
        "authorId" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "body" : "skip?",
        "createdAt" : "2019-10-09T15:01:11Z",
        "updatedAt" : "2019-10-09T15:35:27Z",
        "lastEditedBy" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "tags" : [
        ]
      }
    ],
    "commit" : "286a81c1fcb811a242c92cf77da44b1828c4382a",
    "line" : 634,
    "diffHunk" : "@@ -1,1 +672,676 @@            values[1] = iNaT\n        elif isinstance(indices, (Int64Index, UInt64Index)):\n            return\n        else:\n            values[1] = np.nan"
  },
  {
    "id" : "cbe72a50-9760-4822-a307-8713e09f88c3",
    "prId" : 28865,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/28865#pullrequestreview-299460029",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "eab0fd62-169d-4d79-97aa-3370765faae0",
        "parentId" : null,
        "authorId" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "body" : "skip?",
        "createdAt" : "2019-10-09T15:02:11Z",
        "updatedAt" : "2019-10-09T15:35:27Z",
        "lastEditedBy" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "tags" : [
        ]
      }
    ],
    "commit" : "286a81c1fcb811a242c92cf77da44b1828c4382a",
    "line" : 715,
    "diffHunk" : "@@ -1,1 +711,715 @@                values[1] = iNaT\n            elif isinstance(indices, (Int64Index, UInt64Index)):\n                return\n            else:\n                values[1] = np.nan"
  },
  {
    "id" : "ec4514d6-eb9b-4823-8efe-3ec7936db5ac",
    "prId" : 28865,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/28865#pullrequestreview-299460029",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6846bdab-410b-43a8-9c38-7506c43a4429",
        "parentId" : null,
        "authorId" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "body" : "skip?",
        "createdAt" : "2019-10-09T15:02:29Z",
        "updatedAt" : "2019-10-09T15:35:27Z",
        "lastEditedBy" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "tags" : [
        ]
      }
    ],
    "commit" : "286a81c1fcb811a242c92cf77da44b1828c4382a",
    "line" : 693,
    "diffHunk" : "@@ -1,1 +689,693 @@        # GH 11343\n        if len(indices) == 0:\n            pass\n        elif isinstance(indices, MultiIndex):\n            idx = indices.copy(deep=True)"
  },
  {
    "id" : "9c3dda79-eebb-41da-b89d-bd44b08cb0bb",
    "prId" : 28961,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/28961#pullrequestreview-308106912",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "63aebb1a-538f-4adc-be8b-620cc99a3ada",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Does this need to be `Optional`?",
        "createdAt" : "2019-10-28T19:26:00Z",
        "updatedAt" : "2019-10-28T19:26:04Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "ff41962e-5dd8-4a08-a124-40a1b7cbf31f",
        "parentId" : "63aebb1a-538f-4adc-be8b-620cc99a3ada",
        "authorId" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "body" : "IMO we should keep the `Optional` otherwise when we use 3.6 type annotations we'll get\r\n`pandas\\tests\\indexes\\common.py:34: error: Incompatible types in assignment (expression has type \"None\", variable has type \"Type[Index]\")`\r\n\r\nThe Optional should only be excluded where we have added `something = None  # type: ...` for the purpose of type checking.\r\n\r\nIn this case `_holder` was set to `None` before the type annotation was added.\r\n\r\nso when we move to 3.6, we will change to\r\n`_holder: Optional[Type[Index]] = None`\r\nwhereas if the initialisation was purely added for the type annotations we would change to just \r\n`_holder: Type[Index]` \r\n",
        "createdAt" : "2019-10-28T19:37:18Z",
        "updatedAt" : "2019-10-28T19:37:18Z",
        "lastEditedBy" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "tags" : [
        ]
      },
      {
        "id" : "2ff95704-82dc-4152-a63f-30de40028903",
        "parentId" : "63aebb1a-538f-4adc-be8b-620cc99a3ada",
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Isn't the latter what we actually want here though? OK to change to 36 annotation now on this PR since 35 CI should be dropped within the next few days",
        "createdAt" : "2019-10-28T19:39:28Z",
        "updatedAt" : "2019-10-28T19:39:28Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "fe23bd87-7bbd-4ad4-91cb-15b46184b5d0",
        "parentId" : "63aebb1a-538f-4adc-be8b-620cc99a3ada",
        "authorId" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "body" : "> Isn't the latter what we actually want here though?\r\n\r\nIMO out of scope here\r\n\r\nbut to answer your question, in general, with  3.6, we could reduce the number of `assert <some_variable> is not None` that are sometimes needed when class attributes are initialised to `None`, but we would need to evaluate on a case by case basis.\r\n\r\n> OK to change to 36 annotation now on this PR since 35 CI should be dropped within the next few days\r\n\r\ni'm not sure a good reason to block since this is not guaranteed.",
        "createdAt" : "2019-10-28T19:52:23Z",
        "updatedAt" : "2019-10-28T19:52:24Z",
        "lastEditedBy" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "tags" : [
        ]
      }
    ],
    "commit" : "96cd4c40b018abfd6e26fdae1b7a825231010548",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +32,36 @@    \"\"\" base class for index sub-class tests \"\"\"\n\n    _holder = None  # type: Optional[Type[Index]]\n    _compat_props = [\"shape\", \"ndim\", \"size\", \"nbytes\"]\n"
  },
  {
    "id" : "9494aac9-da22-42a9-9c7b-0f693e231cec",
    "prId" : 30902,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/30902#pullrequestreview-341515014",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "64febfde-db6a-4dae-af3c-bb087b40a138",
        "parentId" : null,
        "authorId" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "body" : "do we/should we have a non-hashable fixture?",
        "createdAt" : "2020-01-11T10:06:47Z",
        "updatedAt" : "2020-01-19T21:48:55Z",
        "lastEditedBy" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "tags" : [
        ]
      }
    ],
    "commit" : "892c9c2a512fa9ae76fc9f3a7a2b2b553421990b",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +891,895 @@\n        with pytest.raises(TypeError):\n            {} in idx._engine"
  },
  {
    "id" : "fa574300-06aa-4712-b0bb-87294d912ef8",
    "prId" : 30902,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/30902#pullrequestreview-341515014",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "de22320a-99ec-497b-90d5-f3732a18c930",
        "parentId" : null,
        "authorId" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "body" : "missing match argument",
        "createdAt" : "2020-01-11T10:07:15Z",
        "updatedAt" : "2020-01-19T21:48:55Z",
        "lastEditedBy" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "tags" : [
        ]
      }
    ],
    "commit" : "892c9c2a512fa9ae76fc9f3a7a2b2b553421990b",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +890,894 @@            [] in idx\n\n        with pytest.raises(TypeError):\n            {} in idx._engine"
  },
  {
    "id" : "99a4835f-5198-44bc-805e-37ab95dc9674",
    "prId" : 31232,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/31232#pullrequestreview-347012796",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5b2478e9-2845-4936-8c55-ed46087852b1",
        "parentId" : null,
        "authorId" : "7545b4d7-157f-47c4-b7f8-18bf358d429c",
        "body" : "Decided to write a common test for `index.map(str)` that shared across all index types since it didn't look like we were generically testing something similar.  Can remove this an write and `IntervalIndex` specific test if that'd be preferred.",
        "createdAt" : "2020-01-23T01:27:36Z",
        "updatedAt" : "2020-01-23T01:27:40Z",
        "lastEditedBy" : "7545b4d7-157f-47c4-b7f8-18bf358d429c",
        "tags" : [
        ]
      }
    ],
    "commit" : "a77a759f98d4c84ce05aacba81052b544895fec4",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +809,813 @@        tm.assert_index_equal(result, expected)\n\n    def test_map_str(self):\n        # GH 31202\n        index = self.create_index()"
  },
  {
    "id" : "bb6c90c3-38cc-439c-bef4-fc2b18b173b5",
    "prId" : 32046,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/32046#pullrequestreview-362780022",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "feeae15f-d67d-44d2-be97-cba7fea31c18",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Is this change related?",
        "createdAt" : "2020-02-20T22:13:24Z",
        "updatedAt" : "2020-02-23T15:30:15Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "1646461c-789a-4c4a-942b-0a52ab38e951",
        "parentId" : "feeae15f-d67d-44d2-be97-cba7fea31c18",
        "authorId" : "c3f452b9-9ab3-4216-a45d-212d094cd8a7",
        "body" : "Yes, it is. To make the indices fixture more useful I enhanced its length from 2 to 10 entries, which impacts the expected value here. In the same way, I could provide a proper \"expected\" for `CategoricalIndex` instead of just silently skipping it.",
        "createdAt" : "2020-02-21T17:05:11Z",
        "updatedAt" : "2020-02-23T15:30:15Z",
        "lastEditedBy" : "c3f452b9-9ab3-4216-a45d-212d094cd8a7",
        "tags" : [
        ]
      }
    ],
    "commit" : "10bab1c16c61cd6dae0cc2e95275473d24d7764d",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +517,521 @@        first = indices[2:]\n        second = indices[:4]\n        if isinstance(indices, CategoricalIndex) or indices.is_boolean():\n            answer = []\n        else:"
  },
  {
    "id" : "9fbb9455-ed53-4765-a429-3b1df83373f5",
    "prId" : 32046,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/32046#pullrequestreview-363041846",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9b231029-4b9b-4c7e-afd9-b62d2e82790f",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "not for this PR, but we have a fixture in tests.indexes.interval.test_setops for this",
        "createdAt" : "2020-02-21T17:03:12Z",
        "updatedAt" : "2020-02-23T15:30:15Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "4ba8d48e-2acd-41fd-9286-e33771a8401d",
        "parentId" : "9b231029-4b9b-4c7e-afd9-b62d2e82790f",
        "authorId" : "c3f452b9-9ab3-4216-a45d-212d094cd8a7",
        "body" : "Created a follow-up issue: #32183",
        "createdAt" : "2020-02-22T17:55:13Z",
        "updatedAt" : "2020-02-23T15:30:15Z",
        "lastEditedBy" : "c3f452b9-9ab3-4216-a45d-212d094cd8a7",
        "tags" : [
        ]
      }
    ],
    "commit" : "10bab1c16c61cd6dae0cc2e95275473d24d7764d",
    "line" : 2,
    "diffHunk" : "@@ -1,1 +513,517 @@                first.union([1, 2, 3])\n\n    @pytest.mark.parametrize(\"sort\", [None, False])\n    def test_difference_base(self, sort, indices):\n        first = indices[2:]"
  },
  {
    "id" : "287294d8-a54d-4612-af90-bfcfef33ebeb",
    "prId" : 33144,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/33144#pullrequestreview-385870403",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "80c7d910-ff05-44c1-a9f4-cd65796702e9",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "are we testing the missing-argument case somewhere else?\r\n\r\ni think the \"either depending...\" comment is obsolete",
        "createdAt" : "2020-04-01T19:07:05Z",
        "updatedAt" : "2020-04-12T15:01:27Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "a958b81da32480e71c698d3c2512f4124abd4e7b",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +542,546 @@        msg = f\"index {length} is out of bounds for axis 0 with size {length}\"\n        with pytest.raises(IndexError, match=msg):\n            indices.delete(length)\n\n    def test_equals(self, indices):"
  }
]