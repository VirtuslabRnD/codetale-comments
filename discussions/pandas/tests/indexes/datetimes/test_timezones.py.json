[
  {
    "id" : "90549bb7-b323-465a-b943-bc73d4341ff6",
    "prId" : 19545,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19545#pullrequestreview-94545983",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e5984acc-55e0-4287-85be-f3611baef14d",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "make these into fixtures",
        "createdAt" : "2018-02-06T11:35:45Z",
        "updatedAt" : "2018-02-06T16:31:08Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "e0cc42fa-8cea-4927-8c4c-69e570f3999b",
        "parentId" : "e5984acc-55e0-4287-85be-f3611baef14d",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "They're not being passed into parametrize anywhere.",
        "createdAt" : "2018-02-06T16:22:42Z",
        "updatedAt" : "2018-02-06T16:31:08Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "10401863-d9b2-4443-b5bc-c76691c7a802",
        "parentId" : "e5984acc-55e0-4287-85be-f3611baef14d",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "hmm, these should be then.",
        "createdAt" : "2018-02-06T23:34:55Z",
        "updatedAt" : "2018-02-06T23:34:55Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "aa57279ece8eb36d0f580d17f9cc9526af10d66d",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +40,44 @@\n\nfixed_off = FixedOffset(-420, '-07:00')\nfixed_off_no_name = FixedOffset(-330, None)\n"
  },
  {
    "id" : "45a6dcdc-59dc-46c1-8e7e-33e26feab5e1",
    "prId" : 19545,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19545#pullrequestreview-94408164",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f0d29956-36c6-4153-887f-dd29f9f5ffdb",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "parameterize (can be next pass)",
        "createdAt" : "2018-02-06T11:36:08Z",
        "updatedAt" : "2018-02-06T16:31:08Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "8e8822c8-ca32-4f93-8c6c-67cc09064e67",
        "parentId" : "f0d29956-36c6-4153-887f-dd29f9f5ffdb",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Yah I parametrized the most egregious of these, but there is bunch of cleanup like this for the next pass.",
        "createdAt" : "2018-02-06T16:23:16Z",
        "updatedAt" : "2018-02-06T16:31:08Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "aa57279ece8eb36d0f580d17f9cc9526af10d66d",
    "line" : 185,
    "diffHunk" : "@@ -1,1 +183,187 @@            tm.assert_index_equal(idx.hour, Index(expected))\n\n    def test_dti_tz_convert_dst(self):\n        for freq, n in [('H', 1), ('T', 60), ('S', 3600)]:\n            # Start DST"
  },
  {
    "id" : "46289a2f-dcf7-49e7-93fa-32abcc53fa4c",
    "prId" : 19545,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19545#pullrequestreview-94312037",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "61e0524d-eee7-456e-a19a-424c9607fd33",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "prob should dedupe these tz parameters into some nicely named fixtures (and push up what you can to conftest)",
        "createdAt" : "2018-02-06T11:37:12Z",
        "updatedAt" : "2018-02-06T16:31:08Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "dda3229f-2385-4d86-a5da-682795b7f454",
        "parentId" : "61e0524d-eee7-456e-a19a-424c9607fd33",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "next PR",
        "createdAt" : "2018-02-06T11:37:22Z",
        "updatedAt" : "2018-02-06T16:31:08Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "aa57279ece8eb36d0f580d17f9cc9526af10d66d",
    "line" : 419,
    "diffHunk" : "@@ -1,1 +417,421 @@        with pytest.raises(pytz.NonExistentTimeError):\n            dti.tz_localize(tzstr)\n\n    @pytest.mark.parametrize('tz', ['US/Eastern', 'dateutil/US/Eastern',\n                                    pytz.timezone('US/Eastern'),"
  },
  {
    "id" : "88a1b26a-5a59-437b-b734-d2a2cde7f3e4",
    "prId" : 19545,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19545#pullrequestreview-94408927",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2b92967e-112c-49b3-b245-0ca51a31ecb8",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "yeah move to construction",
        "createdAt" : "2018-02-06T11:37:39Z",
        "updatedAt" : "2018-02-06T16:31:08Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "8d5502f3-603c-403b-9019-8bbab1111809",
        "parentId" : "2b92967e-112c-49b3-b245-0ca51a31ecb8",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "See the \"FIXME\" note about 4 lines down.  I'm not confident this test is testing what it is intending. This is where the existing indentation typo is: https://github.com/pandas-dev/pandas/pull/19545/files#diff-f67205b3c64b63fa7471c4221e413a19L424",
        "createdAt" : "2018-02-06T16:25:07Z",
        "updatedAt" : "2018-02-06T16:31:08Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "aa57279ece8eb36d0f580d17f9cc9526af10d66d",
    "line" : 550,
    "diffHunk" : "@@ -1,1 +548,552 @@        tm.assert_index_equal(localized, localized_is_dst)\n\n    # TODO: belongs outside tz_localize tests?\n    @pytest.mark.parametrize('tz', ['Europe/London', 'dateutil/Europe/London'])\n    def test_dti_construction_ambiguous_endpoint(self, tz):"
  },
  {
    "id" : "23fe5a74-e1e1-464c-ad80-bebfdb2584f8",
    "prId" : 19545,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19545#pullrequestreview-94312037",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "eada5f12-e8a3-44d5-83a2-d0633f1da804",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "hmm maybe should be in construction",
        "createdAt" : "2018-02-06T11:38:07Z",
        "updatedAt" : "2018-02-06T16:31:08Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "aa57279ece8eb36d0f580d17f9cc9526af10d66d",
    "line" : 638,
    "diffHunk" : "@@ -1,1 +636,640 @@    # ------------------------------------------------------------\n    # DatetimeIndex.__new__\n\n    @pytest.mark.parametrize('prefix', ['', 'dateutil/'])\n    def test_dti_constructor_static_tzinfo(self, prefix):"
  },
  {
    "id" : "43646877-9b6d-4258-aafd-9d316fc4df53",
    "prId" : 22644,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22644#pullrequestreview-166320149",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a23c9f60-a01d-4670-acfc-787ba3e08cc6",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "do you have tests that exericse the assertion when you pass a ``nonexistent`` keyword that is invalid?",
        "createdAt" : "2018-10-18T16:02:21Z",
        "updatedAt" : "2018-10-24T22:22:30Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "d9bd04ad-1488-4980-a891-6867419a64ff",
        "parentId" : "a23c9f60-a01d-4670-acfc-787ba3e08cc6",
        "authorId" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "body" : "Just added a test for an invalid `nonexistent` keyword.",
        "createdAt" : "2018-10-18T22:26:09Z",
        "updatedAt" : "2018-10-24T22:22:30Z",
        "lastEditedBy" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "tags" : [
        ]
      }
    ],
    "commit" : "8cf16e2f197e8405f27ebdfa4c2718620261df04",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +582,586 @@    @pytest.mark.parametrize('method, exp', [\n        ['shift', '2015-03-29 03:00:00'],\n        ['NaT', pd.NaT],\n        ['raise', None],\n        ['foo', 'invalid']"
  },
  {
    "id" : "e0ac7e43-0e4e-4379-82a2-5b3a9b2e203d",
    "prId" : 30676,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/30676#pullrequestreview-343508250",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5ff4f75f-8215-442a-a3cb-83e8ee66ecdf",
        "parentId" : null,
        "authorId" : "e496530e-9aa4-46e2-8b9b-b0ec14a6093d",
        "body" : "This shortcut, along with the fix to #24329 makes this exception no longer necessary, as a correct value gets returned without an error.\r\nUPDATE: #31155 made the check succeed with `dateutil.__version__ >= 2.7.0` . With this shortcut, the exception is not necessary with any version of `dateutil`. What happened before was that during making a `date_range` we would call `pd.Timestamp` twice and this would alter the object in case of a `dateutil` timezone near a winter/summer DST switch, which would make the test fail. #31155 made sure that the object didn't get altered with an updated version of `dateutil` and this shortcut eliminates the danger of the `Timestamp` being altered altogether, because the shortcut simply returns that same object.",
        "createdAt" : "2020-01-15T20:43:32Z",
        "updatedAt" : "2020-01-24T09:24:11Z",
        "lastEditedBy" : "e496530e-9aa4-46e2-8b9b-b0ec14a6093d",
        "tags" : [
        ]
      }
    ],
    "commit" : "ba19e26ab76258e11afecaee6573cf533ea9e834",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +582,586 @@            [\"dateutil/US/Pacific\", \"shift_forward\", \"2019-03-10 03:00\"],\n            [\"US/Pacific\", \"shift_backward\", \"2019-03-10 01:00\"],\n            [\"dateutil/US/Pacific\", \"shift_backward\", \"2019-03-10 01:00\"],\n            [\"US/Pacific\", timedelta(hours=1), \"2019-03-10 03:00\"],\n        ],"
  },
  {
    "id" : "c21c2e94-809b-4cf1-91a7-f5635d32b00e",
    "prId" : 30995,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/30995#pullrequestreview-342574943",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3edcbf08-8ba0-4bd1-8cda-9506b050baa1",
        "parentId" : null,
        "authorId" : "e496530e-9aa4-46e2-8b9b-b0ec14a6093d",
        "body" : "Now no matter whether we use `dateutil` or `pytz` timezones, we get the same date range, so separate testing conditions are no longer necessary.",
        "createdAt" : "2020-01-14T14:32:57Z",
        "updatedAt" : "2020-01-15T07:39:14Z",
        "lastEditedBy" : "e496530e-9aa4-46e2-8b9b-b0ec14a6093d",
        "tags" : [
        ]
      }
    ],
    "commit" : "85767afcc9de4cfef0c1bd46f801f4eb11c8b82e",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +574,578 @@        )\n        assert times[0] == Timestamp(\"2013-10-26 23:00\", tz=tz, freq=\"H\")\n        assert times[-1] == Timestamp(\"2013-10-27 01:00:00+0000\", tz=tz, freq=\"H\")\n\n    @pytest.mark.parametrize("
  }
]