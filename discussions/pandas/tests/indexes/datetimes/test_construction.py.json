[
  {
    "id" : "901cc1c4-4cdc-425c-be33-1327a0c92757",
    "prId" : 21216,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/21216#pullrequestreview-126890658",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2d47f74b-8915-4787-81f9-b3cf0e426bfb",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you explain how this test is different than the one above? ",
        "createdAt" : "2018-06-05T10:48:55Z",
        "updatedAt" : "2018-06-14T06:34:16Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "7e49696a-4e1c-4d4a-90b4-96539eaaabc1",
        "parentId" : "2d47f74b-8915-4787-81f9-b3cf0e426bfb",
        "authorId" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "body" : "I am preserving the construction of `tz_localize(None)` that was here before but split it out in its own test as discussed here https://github.com/pandas-dev/pandas/pull/21216#discussion_r191286077",
        "createdAt" : "2018-06-07T17:52:51Z",
        "updatedAt" : "2018-06-14T06:34:16Z",
        "lastEditedBy" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "tags" : [
        ]
      }
    ],
    "commit" : "dc7e5c03d9abba90e3e9b4d3bc3f6f7f77a1aaa4",
    "line" : 50,
    "diffHunk" : "@@ -1,1 +43,47 @@        {'tz': 'dtype.tz'},\n        {'dtype': 'dtype'},\n        {'dtype': 'dtype', 'tz': 'dtype.tz'}])\n    def test_construction_with_alt_tz_localize(self, kwargs, tz_aware_fixture):\n        tz = tz_aware_fixture"
  },
  {
    "id" : "00667ff3-adbb-4a5e-94b0-794f1bd3a220",
    "prId" : 24157,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/24157#pullrequestreview-182990907",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e517dea9-3c6f-473b-9103-c6e70796c319",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you parametrize",
        "createdAt" : "2018-12-09T14:37:56Z",
        "updatedAt" : "2018-12-13T19:50:44Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "266c02e0-43fa-452c-8fc5-d945764a9f81",
        "parentId" : "e517dea9-3c6f-473b-9103-c6e70796c319",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "will take a look",
        "createdAt" : "2018-12-09T16:01:07Z",
        "updatedAt" : "2018-12-13T19:50:44Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "8ccb4e2c-9aa6-48a8-acf7-a52186b39314",
        "parentId" : "e517dea9-3c6f-473b-9103-c6e70796c319",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Not without adding casting code that makes the verbosity a wash.\r\n\r\nOnce Categorical(DatetimeArray) works (currently raises bc DatetimeArray doesn't have _constructor) then this test can be parametrized over DatetimeIndex/DatetimeArray",
        "createdAt" : "2018-12-09T19:22:01Z",
        "updatedAt" : "2018-12-13T19:50:44Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "b927925a14def3d3d8710493517d34ebe950c040",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +46,50 @@        carr = pd.Categorical(dti)\n        cser = pd.Series(ci)\n\n        for obj in [ci, carr, cser]:\n            result = pd.DatetimeIndex(obj)"
  }
]