[
  {
    "id" : "d5aebc9b-581c-4c02-b39c-2e233599056a",
    "prId" : 19529,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19529#pullrequestreview-93848730",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9774d3f0-e28a-4380-8094-bc769a8b939e",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "import from pandas.errors",
        "createdAt" : "2018-02-04T15:33:55Z",
        "updatedAt" : "2018-02-04T17:18:11Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "0af64f67c3ce33b7ede77c04b2a586df247d6aef",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +1596,1600 @@            )\n        )\n\n    def test_to_datetime_barely_out_of_bounds(self):\n        # GH#19529"
  },
  {
    "id" : "5ab38a5b-d9c0-450b-8f50-df2c0e56ead2",
    "prId" : 19979,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19979#pullrequestreview-123645055",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "37a05d63-4789-45fc-b53a-d2a4d92e4571",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Should this also work with `%Z`? \r\nIt seems that with `datetime.datetime.strptime` it does not work with either ",
        "createdAt" : "2018-05-24T14:44:56Z",
        "updatedAt" : "2018-05-28T22:55:54Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "3b43df49-d456-4af1-a246-be8a5ac5e12b",
        "parentId" : "37a05d63-4789-45fc-b53a-d2a4d92e4571",
        "authorId" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "body" : "The regex I pulled from https://github.com/python/cpython/blob/master/Lib/_strptime.py has an option for 'Z' with` %z`:\r\n\r\nhttps://github.com/python/cpython/blob/483000e164ec68717d335767b223ae31b4b720cf/Lib/_strptime.py#L204\r\n\r\nBut `%Z` only makes timezones found in the system local time available, i.e. no 'Z' option.\r\n\r\nhttps://github.com/python/cpython/blob/483000e164ec68717d335767b223ae31b4b720cf/Lib/_strptime.py#L210-L212",
        "createdAt" : "2018-05-24T22:01:30Z",
        "updatedAt" : "2018-05-28T22:55:54Z",
        "lastEditedBy" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "tags" : [
        ]
      },
      {
        "id" : "e14ed1a0-c55f-403c-9f6b-e0dae1c94462",
        "parentId" : "37a05d63-4789-45fc-b53a-d2a4d92e4571",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "OK (that's probably a newer addition to python), then it makes sense to follow upstream python to be consistent",
        "createdAt" : "2018-05-28T07:27:16Z",
        "updatedAt" : "2018-05-28T22:55:54Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "757458db2a520743004b0f1db999b72297e11a92",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +209,213 @@                       tzinfo=pytz.FixedOffset(-60))]],\n        ['%Y-%m-%d %H:%M:%S %z',\n         ['2010-01-01 12:00:00 Z', '2010-01-01 12:00:00 Z'],\n         [pd.Timestamp('2010-01-01 12:00:00',\n                       tzinfo=pytz.FixedOffset(0)),  # pytz coerces to UTC"
  },
  {
    "id" : "6d9acbc4-8418-44b9-a9db-4d3937c7ed55",
    "prId" : 22699,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22699#pullrequestreview-156322279",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5519fdc0-36a7-42d0-99f2-e4f41aba2d11",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you add a doc-string",
        "createdAt" : "2018-09-18T11:46:07Z",
        "updatedAt" : "2018-09-18T15:03:10Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "4990fc2d984b536e5c7c97ad55d4f550ae661867",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +1599,1603 @@\n@pytest.fixture(params=['timestamp', 'pydatetime', 'datetime64', 'str_1960'])\ndef epochs(epoch_1960, request):\n    \"\"\"Timestamp at 1960-01-01 in various forms.\n"
  },
  {
    "id" : "5920ee34-d953-437e-a7a2-8c1f4193beef",
    "prId" : 25541,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/25541#pullrequestreview-212612770",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e1c01f1e-2160-4037-a455-edd2211310f1",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you put a comment here on why why you are allowing *some* here.",
        "createdAt" : "2019-03-10T17:24:55Z",
        "updatedAt" : "2019-03-17T07:14:26Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "eedf0e68f70ae154ebda15bbaabef324f02f89d9",
    "line" : 49,
    "diffHunk" : "@@ -1,1 +290,294 @@    ])\n    def test_error_iso_week_year(self, msg, s, _format):\n        # See GH#16607\n        # This test checks for errors thrown when giving the wrong format\n        # However, as discussed on PR#25541, overriding the locale"
  },
  {
    "id" : "5e3ff9f3-b75e-4b52-9787-7093d8f7fcd4",
    "prId" : 26097,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/26097#pullrequestreview-228223796",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ca9f405c-246f-48af-a0fc-8da999a08c87",
        "parentId" : null,
        "authorId" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "body" : "Thanks for the explanation. Could you also parameterize over the `error` keyword since that was relevant, also including a value that would hit the error handling (i.e. `arr = [ts_string_1] * 5 + [ts_string_2] * 5 + ['foo']`)",
        "createdAt" : "2019-04-17T15:42:10Z",
        "updatedAt" : "2019-07-03T11:44:36Z",
        "lastEditedBy" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "tags" : [
        ]
      },
      {
        "id" : "7e07bbbf-43ed-41d4-804e-23a06cfd9b91",
        "parentId" : "ca9f405c-246f-48af-a0fc-8da999a08c87",
        "authorId" : "be492700-7f0c-4e3f-b2b1-1392960f38a9",
        "body" : "I have added a separate test using `hypothesis` to ensure that `pd.to_datetime()` produces equivalent results regardless of whether `cache` is `True` or `False`.",
        "createdAt" : "2019-04-18T11:02:41Z",
        "updatedAt" : "2019-07-03T11:44:36Z",
        "lastEditedBy" : "be492700-7f0c-4e3f-b2b1-1392960f38a9",
        "tags" : [
        ]
      }
    ],
    "commit" : "2d8921bb61cdfdd71f93a3a185ebb476cbc95179",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +505,509 @@            pd.to_datetime(arr, cache=cache)\n\n    @pytest.mark.parametrize('cache', [True, False])\n    def test_to_datetime_different_offsets(self, cache):\n        # inspired by asv timeseries.ToDatetimeNONISO8601 benchmark"
  }
]