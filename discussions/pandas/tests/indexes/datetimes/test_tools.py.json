[
  {
    "id" : "d5aebc9b-581c-4c02-b39c-2e233599056a",
    "prId" : 19529,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19529#pullrequestreview-93848730",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9774d3f0-e28a-4380-8094-bc769a8b939e",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "import from pandas.errors",
        "createdAt" : "2018-02-04T15:33:55Z",
        "updatedAt" : "2018-02-04T17:18:11Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "0af64f67c3ce33b7ede77c04b2a586df247d6aef",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +1596,1600 @@            )\n        )\n\n    def test_to_datetime_barely_out_of_bounds(self):\n        # GH#19529"
  },
  {
    "id" : "5ab38a5b-d9c0-450b-8f50-df2c0e56ead2",
    "prId" : 19979,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19979#pullrequestreview-123645055",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "37a05d63-4789-45fc-b53a-d2a4d92e4571",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Should this also work with `%Z`? \r\nIt seems that with `datetime.datetime.strptime` it does not work with either ",
        "createdAt" : "2018-05-24T14:44:56Z",
        "updatedAt" : "2018-05-28T22:55:54Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "3b43df49-d456-4af1-a246-be8a5ac5e12b",
        "parentId" : "37a05d63-4789-45fc-b53a-d2a4d92e4571",
        "authorId" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "body" : "The regex I pulled from https://github.com/python/cpython/blob/master/Lib/_strptime.py has an option for 'Z' with` %z`:\r\n\r\nhttps://github.com/python/cpython/blob/483000e164ec68717d335767b223ae31b4b720cf/Lib/_strptime.py#L204\r\n\r\nBut `%Z` only makes timezones found in the system local time available, i.e. no 'Z' option.\r\n\r\nhttps://github.com/python/cpython/blob/483000e164ec68717d335767b223ae31b4b720cf/Lib/_strptime.py#L210-L212",
        "createdAt" : "2018-05-24T22:01:30Z",
        "updatedAt" : "2018-05-28T22:55:54Z",
        "lastEditedBy" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "tags" : [
        ]
      },
      {
        "id" : "e14ed1a0-c55f-403c-9f6b-e0dae1c94462",
        "parentId" : "37a05d63-4789-45fc-b53a-d2a4d92e4571",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "OK (that's probably a newer addition to python), then it makes sense to follow upstream python to be consistent",
        "createdAt" : "2018-05-28T07:27:16Z",
        "updatedAt" : "2018-05-28T22:55:54Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "757458db2a520743004b0f1db999b72297e11a92",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +209,213 @@                       tzinfo=pytz.FixedOffset(-60))]],\n        ['%Y-%m-%d %H:%M:%S %z',\n         ['2010-01-01 12:00:00 Z', '2010-01-01 12:00:00 Z'],\n         [pd.Timestamp('2010-01-01 12:00:00',\n                       tzinfo=pytz.FixedOffset(0)),  # pytz coerces to UTC"
  },
  {
    "id" : "6d9acbc4-8418-44b9-a9db-4d3937c7ed55",
    "prId" : 22699,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22699#pullrequestreview-156322279",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5519fdc0-36a7-42d0-99f2-e4f41aba2d11",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you add a doc-string",
        "createdAt" : "2018-09-18T11:46:07Z",
        "updatedAt" : "2018-09-18T15:03:10Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "4990fc2d984b536e5c7c97ad55d4f550ae661867",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +1599,1603 @@\n@pytest.fixture(params=['timestamp', 'pydatetime', 'datetime64', 'str_1960'])\ndef epochs(epoch_1960, request):\n    \"\"\"Timestamp at 1960-01-01 in various forms.\n"
  },
  {
    "id" : "5920ee34-d953-437e-a7a2-8c1f4193beef",
    "prId" : 25541,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/25541#pullrequestreview-212612770",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e1c01f1e-2160-4037-a455-edd2211310f1",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you put a comment here on why why you are allowing *some* here.",
        "createdAt" : "2019-03-10T17:24:55Z",
        "updatedAt" : "2019-03-17T07:14:26Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "eedf0e68f70ae154ebda15bbaabef324f02f89d9",
    "line" : 49,
    "diffHunk" : "@@ -1,1 +290,294 @@    ])\n    def test_error_iso_week_year(self, msg, s, _format):\n        # See GH#16607\n        # This test checks for errors thrown when giving the wrong format\n        # However, as discussed on PR#25541, overriding the locale"
  },
  {
    "id" : "5e3ff9f3-b75e-4b52-9787-7093d8f7fcd4",
    "prId" : 26097,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/26097#pullrequestreview-228223796",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ca9f405c-246f-48af-a0fc-8da999a08c87",
        "parentId" : null,
        "authorId" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "body" : "Thanks for the explanation. Could you also parameterize over the `error` keyword since that was relevant, also including a value that would hit the error handling (i.e. `arr = [ts_string_1] * 5 + [ts_string_2] * 5 + ['foo']`)",
        "createdAt" : "2019-04-17T15:42:10Z",
        "updatedAt" : "2019-07-03T11:44:36Z",
        "lastEditedBy" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "tags" : [
        ]
      },
      {
        "id" : "7e07bbbf-43ed-41d4-804e-23a06cfd9b91",
        "parentId" : "ca9f405c-246f-48af-a0fc-8da999a08c87",
        "authorId" : "be492700-7f0c-4e3f-b2b1-1392960f38a9",
        "body" : "I have added a separate test using `hypothesis` to ensure that `pd.to_datetime()` produces equivalent results regardless of whether `cache` is `True` or `False`.",
        "createdAt" : "2019-04-18T11:02:41Z",
        "updatedAt" : "2019-07-03T11:44:36Z",
        "lastEditedBy" : "be492700-7f0c-4e3f-b2b1-1392960f38a9",
        "tags" : [
        ]
      }
    ],
    "commit" : "2d8921bb61cdfdd71f93a3a185ebb476cbc95179",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +505,509 @@            pd.to_datetime(arr, cache=cache)\n\n    @pytest.mark.parametrize('cache', [True, False])\n    def test_to_datetime_different_offsets(self, cache):\n        # inspired by asv timeseries.ToDatetimeNONISO8601 benchmark"
  },
  {
    "id" : "b5630749-f150-4813-9abb-6321e5ac2bfc",
    "prId" : 26585,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/26585#pullrequestreview-244655881",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b3e18761-2f22-4694-b35e-bc573401cc72",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you try with a too short as well?",
        "createdAt" : "2019-06-01T14:18:58Z",
        "updatedAt" : "2019-06-01T20:03:53Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "05baa77e-ce1f-4566-85fb-269c0c1cb620",
        "parentId" : "b3e18761-2f22-4694-b35e-bc573401cc72",
        "authorId" : "8b521d0c-e7dc-4b54-9709-c7a2aec8bf4d",
        "body" : "Hi @jreback,\r\nThanks for feedback. \r\nI reworded whatsnew message and added a couple of short dates. \r\n\r\nAlso I found result can be unpredictable for some short dates (either in integer or string format) with length > 4.  \r\n```python\r\npd.to_datetime(12912, format=\"%Y%m%d\", errors='ignore')\r\nOut[4]: 12912\r\npd.to_datetime(21213, format=\"%Y%m%d\", errors='ignore')\r\nOut[5]: datetime.datetime(2, 12, 13, 0, 0)\r\n```\r\nNevertheless it's not connected to this TypeError.\r\nI'll add these examples to corresponding issue.",
        "createdAt" : "2019-06-01T20:22:30Z",
        "updatedAt" : "2019-06-01T20:22:30Z",
        "lastEditedBy" : "8b521d0c-e7dc-4b54-9709-c7a2aec8bf4d",
        "tags" : [
        ]
      },
      {
        "id" : "6c732210-0f36-4178-a21b-82effd075726",
        "parentId" : "b3e18761-2f22-4694-b35e-bc573401cc72",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "that is weird, these should for sure fail, but maybe going down an odd path. ok can address in another issue.",
        "createdAt" : "2019-06-02T23:50:13Z",
        "updatedAt" : "2019-06-02T23:50:13Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "ed5f22c3-1119-443b-9e4d-875188ed0a37",
        "parentId" : "b3e18761-2f22-4694-b35e-bc573401cc72",
        "authorId" : "8b521d0c-e7dc-4b54-9709-c7a2aec8bf4d",
        "body" : "@jreback I added it to #14487. It's all about how format '%Y%m%d is treated.",
        "createdAt" : "2019-06-03T01:38:44Z",
        "updatedAt" : "2019-06-03T01:40:08Z",
        "lastEditedBy" : "8b521d0c-e7dc-4b54-9709-c7a2aec8bf4d",
        "tags" : [
        ]
      }
    ],
    "commit" : "11eddeb51775de49a2bc291d1bc9548cdf17b423",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +147,151 @@        # short invalid date, length == 4\n        [2121, 2121]])\n    def test_int_to_datetime_format_YYYYMMDD_typeerror(self, int_date,\n                                                       expected):\n        # GH 26583"
  },
  {
    "id" : "81472b30-df1a-4b2d-9ede-790aac087298",
    "prId" : 27733,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/27733#pullrequestreview-270514909",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fa056857-588c-4493-9aac-1ccdd550d08a",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you add the issue number as a comment",
        "createdAt" : "2019-08-04T21:22:47Z",
        "updatedAt" : "2019-08-04T23:34:02Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "b0d8fbcf56214904105033f8e75634faaa950704",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +1627,1631 @@    def test_to_datetime_dta_tz(self, klass):\n        # GH#27733\n        dti = date_range(\"2015-04-05\", periods=3).rename(\"foo\")\n        expected = dti.tz_localize(\"UTC\")\n"
  },
  {
    "id" : "18b484b2-d8cb-4847-963d-688763c87544",
    "prId" : 27733,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/27733#pullrequestreview-270519884",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cf7c2dc0-62eb-49b6-953f-c723f51e5ff5",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you paramterize on dti and dta",
        "createdAt" : "2019-08-04T21:23:00Z",
        "updatedAt" : "2019-08-04T23:34:02Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "7d02469a-54b2-4d62-9584-94479cf0e286",
        "parentId" : "cf7c2dc0-62eb-49b6-953f-c723f51e5ff5",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "done",
        "createdAt" : "2019-08-04T23:33:30Z",
        "updatedAt" : "2019-08-04T23:34:02Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "b0d8fbcf56214904105033f8e75634faaa950704",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +1629,1633 @@        dti = date_range(\"2015-04-05\", periods=3).rename(\"foo\")\n        expected = dti.tz_localize(\"UTC\")\n\n        obj = klass(dti)\n        expected = klass(expected)"
  },
  {
    "id" : "faf6e3f2-7b28-45f9-beb2-13f69327ef8f",
    "prId" : 30083,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/30083#pullrequestreview-328621188",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0d77fddd-ad67-496f-8278-1ec14aa5d82f",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you parameterize over [None, np.nan, pd.NaT, 'NaT'] here  in place of the None",
        "createdAt" : "2019-12-08T17:21:21Z",
        "updatedAt" : "2019-12-10T19:39:45Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "a47da79d58751134626f6423299d944455ce9185",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +102,106 @@        tm.assert_series_equal(result, expected)\n\n    @pytest.mark.parametrize(\n        \"input_s\",\n        ["
  }
]