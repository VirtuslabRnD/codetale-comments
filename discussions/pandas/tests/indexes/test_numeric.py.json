[
  {
    "id" : "ceeda6e5-168f-4d9f-a5c3-e8718aa1153a",
    "prId" : 19333,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19333#pullrequestreview-90437449",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "12589519-2ae4-4aff-8a9f-2995c3ec1dcd",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you also test that the commute raises here ",
        "createdAt" : "2018-01-22T11:19:03Z",
        "updatedAt" : "2018-02-21T15:43:37Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "9e3dec40cc79bc49a61c2227939c6eb63e0a9f94",
    "line" : 43,
    "diffHunk" : "@@ -1,1 +57,61 @@\n        result = scalar_td / index\n        tm.assert_index_equal(result, expected)\n\n        with pytest.raises(TypeError):"
  },
  {
    "id" : "5294f68c-02b2-4b29-bbfb-f406a80db7b2",
    "prId" : 27034,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/27034#pullrequestreview-253964536",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0e983c20-0166-4ff4-8645-0fc4c3c38257",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you add the issue number",
        "createdAt" : "2019-06-25T12:22:46Z",
        "updatedAt" : "2019-06-27T13:31:12Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "ca0d957f39c69c056b28f924fcb2a3257ba98c07",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +1122,1126 @@\n@pytest.mark.parametrize(\"dtype\", ['int64', 'uint64'])\ndef test_int_float_union_dtype(dtype):\n    # https://github.com/pandas-dev/pandas/issues/26778\n    # [u]int | float -> float"
  },
  {
    "id" : "5be21506-191b-47a9-82b7-a57da4a9a51d",
    "prId" : 29420,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/29420#pullrequestreview-314460595",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ae6e9753-b086-4658-88df-cd7b6f45328f",
        "parentId" : null,
        "authorId" : "7545b4d7-157f-47c4-b7f8-18bf358d429c",
        "body" : "Can you explicitly construct the expected index and use `tm.assert_index_equal` to verify they're the same:\r\n```python\r\nresult = s.loc[[7606741985629028552, 17876870360202815256]].index\r\nexpected = UInt64Index([7606741985629028552, 17876870360202815256])\r\ntm.assert_index_equal(result, expected)\r\n```\r\nI'd rather not do a simple `isinstance` check here because it doesn't guard against potential precision loss with the values in the index, e.g. if someone makes a change where there's an intermediate coercion to `Float64Index`:\r\n```python\r\nIn [2]: idx = pd.UInt64Index([2**53, 2**53 + 1])\r\n\r\nIn [3]: idx\r\nOut[3]: UInt64Index([9007199254740992, 9007199254740993], dtype='uint64')\r\n\r\nIn [4]: pd.UInt64Index(pd.Float64Index(idx))\r\nOut[4]: UInt64Index([9007199254740992, 9007199254740992], dtype='uint64')\r\n```\r\n",
        "createdAt" : "2019-11-08T21:37:08Z",
        "updatedAt" : "2019-11-23T15:22:42Z",
        "lastEditedBy" : "7545b4d7-157f-47c4-b7f8-18bf358d429c",
        "tags" : [
        ]
      }
    ],
    "commit" : "aac01ea03dabfff28b9a67e07c99c88cfa146fb5",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +1232,1236 @@        [7606741985629028552, 17876870360202815256, 17876870360202815256],\n        dtype=\"uint64\",\n    )\n    tm.assert_index_equal(result.index, expected)\n"
  }
]