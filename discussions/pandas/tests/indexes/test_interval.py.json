[
  {
    "id" : "bdfb57c1-9072-4077-bc32-bbe3837586e8",
    "prId" : 18340,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/18340#pullrequestreview-77585259",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3764eab6-8577-48e3-a7fa-939333795038",
        "parentId" : null,
        "authorId" : "7545b4d7-157f-47c4-b7f8-18bf358d429c",
        "body" : "I used this fixture to avoid having `@pytest.mark.parametrize('closed', ['left', 'right', 'both', 'neither'])` decorators everywhere.  This should be picked up by any test that has `closed` as  an argument, without needing an explicit decorator.",
        "createdAt" : "2017-11-17T23:02:13Z",
        "updatedAt" : "2017-11-17T23:02:13Z",
        "lastEditedBy" : "7545b4d7-157f-47c4-b7f8-18bf358d429c",
        "tags" : [
        ]
      }
    ],
    "commit" : "c3b6f53d6bfe048a3e8a53157d6e31346c054b5d",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +17,21 @@@pytest.fixture(scope='class', params=['left', 'right', 'both', 'neither'])\ndef closed(request):\n    return request.param\n\n"
  },
  {
    "id" : "6dd7d068-a04d-4be4-bba7-9921d91852d4",
    "prId" : 18424,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/18424#pullrequestreview-78375136",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c772e303-2938-49c0-bd06-bb1908fb240b",
        "parentId" : null,
        "authorId" : "7545b4d7-157f-47c4-b7f8-18bf358d429c",
        "body" : "For some reason `pytest.raises` didn't appear to actually be checking the message, so I switched to `tm.assert_raises_regex`.",
        "createdAt" : "2017-11-22T09:13:27Z",
        "updatedAt" : "2017-11-22T23:36:33Z",
        "lastEditedBy" : "7545b4d7-157f-47c4-b7f8-18bf358d429c",
        "tags" : [
        ]
      }
    ],
    "commit" : "42c15fa4ac15fa7741fe94d28adee3356a2c8f58",
    "line" : 122,
    "diffHunk" : "@@ -1,1 +158,162 @@        msg = ('IntervalIndex\\(...\\) must be called with a collection of '\n               'some kind, 5 was passed')\n        with tm.assert_raises_regex(TypeError, msg):\n            IntervalIndex(5)\n"
  }
]