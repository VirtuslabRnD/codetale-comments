[
  {
    "id" : "ad8168e7-bb61-42fb-91eb-161d9fcdd114",
    "prId" : 16213,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/16213#pullrequestreview-37814612",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1808619c-8145-41d7-87ad-b4c01442f35f",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Can you add the issue number as comment?",
        "createdAt" : "2017-05-12T09:07:35Z",
        "updatedAt" : "2017-05-12T10:26:52Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "fb72036b-e568-4901-aaf4-178f48e9b3ca",
        "parentId" : "1808619c-8145-41d7-87ad-b4c01442f35f",
        "authorId" : "69a015bc-2b58-45dd-83cb-2c2f6d80b128",
        "body" : "(done)",
        "createdAt" : "2017-05-12T11:36:49Z",
        "updatedAt" : "2017-05-12T11:36:49Z",
        "lastEditedBy" : "69a015bc-2b58-45dd-83cb-2c2f6d80b128",
        "tags" : [
        ]
      }
    ],
    "commit" : "89da68a1a3e9a7e82ebb465d95739f9e9823f6a2",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +943,947 @@            tm.assert_index_equal(result, expected)\n\n    def test_append(self):\n        # GH16212\n        RI = RangeIndex"
  },
  {
    "id" : "b0e7f30c-040f-4ede-a1d9-c640c896bc0c",
    "prId" : 25788,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/25788#pullrequestreview-218092110",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2ee8f984-e011-4cce-bb80-c7da2572e776",
        "parentId" : null,
        "authorId" : "7ac4c9e7-abb0-4bee-8b35-0f2b9e19bd9e",
        "body" : "I wanted to use the ``ids=`` argument for the fixture here as you suggested but I'm finding it difficult to come up with useful and succinct ID strings for each of the 22 test cases. Many of the cases are essentially testing the same behaviour so I found I was repeating the same ID string. Do you think I should still try to include the ``ids=`` or just exclude them?",
        "createdAt" : "2019-03-24T17:12:06Z",
        "updatedAt" : "2019-03-26T16:01:57Z",
        "lastEditedBy" : "7ac4c9e7-abb0-4bee-8b35-0f2b9e19bd9e",
        "tags" : [
        ]
      },
      {
        "id" : "c392c48c-17d8-42e5-bad3-0f68c492b5e2",
        "parentId" : "2ee8f984-e011-4cce-bb80-c7da2572e776",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "that’s fine i can leave it off\r\nor add just particularly interesting ones\r\nand return None for the others which will auto generate it\r\n\r\nit’s just to make the cases understandable ",
        "createdAt" : "2019-03-24T17:17:00Z",
        "updatedAt" : "2019-03-26T16:01:57Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "c32ca8b2afd6c37c6eb7c34d2e588aa76693fd17",
    "line" : 99,
    "diffHunk" : "@@ -1,1 +619,623 @@        (RI(0, 10, 1), I64([]), RI(0, 10, 1), RI(0, 10, 1)),\n        (RI(0), I64([1, 5, 6]), I64([1, 5, 6]), I64([1, 5, 6]))\n    ])\n    def unions(self, request):\n        \"\"\"Inputs and expected outputs for RangeIndex.union tests\"\"\""
  },
  {
    "id" : "64418f15-4c02-48db-91b0-a04248bc7be1",
    "prId" : 28680,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/28680#pullrequestreview-296019403",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "19071706-720f-4a44-ae6e-ecda25c6c6e1",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Is there a reason to have to specify `np.intp` here?",
        "createdAt" : "2019-10-02T04:04:45Z",
        "updatedAt" : "2019-10-02T06:50:03Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "9b6f4c80-c9e0-45f6-bd4a-2a778e002782",
        "parentId" : "19071706-720f-4a44-ae6e-ecda25c6c6e1",
        "authorId" : "7545b4d7-157f-47c4-b7f8-18bf358d429c",
        "body" : "`intp` is the native numpy indexing type (see first bullet point [here](https://docs.scipy.org/doc/numpy-1.17.0/reference/arrays.indexing.html#detailed-notes) and [this table](https://docs.scipy.org/doc/numpy-1.10.1/user/basics.types.html#array-types-and-conversions-between-types)), so we typically match that in our indexing code, and since it's platform dependent we can't specify one of the more standard type like `int64` (I've broken the 32bit builds a few times by doing this!)",
        "createdAt" : "2019-10-02T05:28:46Z",
        "updatedAt" : "2019-10-02T06:50:03Z",
        "lastEditedBy" : "7545b4d7-157f-47c4-b7f8-18bf358d429c",
        "tags" : [
        ]
      }
    ],
    "commit" : "ae482a765ad2e4ae4297ee93cf5cace30b998150",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +430,434 @@        index = RangeIndex(7, stop, -3)\n        result = index.get_indexer(range(9))\n        expected = np.array([-1, 2, -1, -1, 1, -1, -1, 0, -1], dtype=np.intp)\n        tm.assert_numpy_array_equal(result, expected)\n"
  }
]