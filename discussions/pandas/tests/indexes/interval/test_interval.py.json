[
  {
    "id" : "71a3305e-b1aa-431c-91d5-ac2fecd98b2d",
    "prId" : 19022,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19022#pullrequestreview-86308840",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3aad1062-dd4a-4c2b-988b-dd44e96a6875",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "I believe your test for ``.length`` should change? IIRC you were catching he exception",
        "createdAt" : "2018-01-02T11:02:37Z",
        "updatedAt" : "2018-01-05T14:15:30Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "b58bafc8-5537-46f5-9f88-52d93450d9ec",
        "parentId" : "3aad1062-dd4a-4c2b-988b-dd44e96a6875",
        "authorId" : "7545b4d7-157f-47c4-b7f8-18bf358d429c",
        "body" : "`.length` had two tests: `test_length` and `test_length_errors`.  I've removed `test_length_errors` in full, since we should be prohibiting dtypes that would cause exceptions. I've left `test_length` unchanged since it was only testing valid dtypes.",
        "createdAt" : "2018-01-03T07:52:23Z",
        "updatedAt" : "2018-01-05T14:15:30Z",
        "lastEditedBy" : "7545b4d7-157f-47c4-b7f8-18bf358d429c",
        "tags" : [
        ]
      }
    ],
    "commit" : "cc22a038bc012167abcca0713fd408ab1afeaa29",
    "line" : 3,
    "diffHunk" : "@@ -1,1 +4,8 @@import numpy as np\nfrom pandas import (\n    Interval, IntervalIndex, Index, isna, notna, interval_range, Timestamp,\n    Timedelta, date_range, timedelta_range, Categorical)\nfrom pandas.compat import lzip"
  },
  {
    "id" : "cfe79298-6ccb-42fc-a898-8bf106e7eacd",
    "prId" : 20946,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/20946#pullrequestreview-117813669",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "37a37e69-41d9-49e3-87f4-c45cf017531a",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "if this is consistent with those tests, you can remove from there I think (not sure exactly how we are tracking 'new' things vs current)",
        "createdAt" : "2018-05-04T10:00:20Z",
        "updatedAt" : "2018-05-04T22:16:18Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "902e6eba-60a5-4930-a66c-61a6d7dfb430",
        "parentId" : "37a37e69-41d9-49e3-87f4-c45cf017531a",
        "authorId" : "7545b4d7-157f-47c4-b7f8-18bf358d429c",
        "body" : "This isn't consistent with the new tests, as the new behavior should only allow for exact matches when querying with `Interval` objects.  Mostly added this a a note to whoever implements the new behavior (probably me).\r\n\r\nI've taken a stab at implementing the new behavior in the past, but it looks like it will require a pretty large change, as changing one method to implement the new behavior often causes another (also with new proposed behavior) to break, so it seems like it'd at least approach an all or nothing type of change.  Hopefully will carve out some time to do it fully somewhat soon.",
        "createdAt" : "2018-05-04T22:20:44Z",
        "updatedAt" : "2018-05-04T22:21:25Z",
        "lastEditedBy" : "7545b4d7-157f-47c4-b7f8-18bf358d429c",
        "tags" : [
        ]
      },
      {
        "id" : "3768635d-c016-4fc1-8ea9-7e978226cdd9",
        "parentId" : "37a37e69-41d9-49e3-87f4-c45cf017531a",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "k that is fine. yeah converting to use the new tests is a major effort :>",
        "createdAt" : "2018-05-05T12:52:45Z",
        "updatedAt" : "2018-05-05T12:52:45Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "3c82ef3791cebe6576433b65f2e3067ef29fde12",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +553,557 @@        tm.assert_numpy_array_equal(actual, expected)\n\n    # Make consistent with test_interval_new.py (see #16316, #16386)\n    @pytest.mark.parametrize('item', [\n        [3], np.arange(1, 5), [Interval(1, 4)], interval_range(1, 4)])"
  }
]