[
  {
    "id" : "16bf00f4-9756-4533-a69a-c85bd42098d8",
    "prId" : 19975,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19975#pullrequestreview-102034910",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e00b809e-bb89-4cf2-b993-165fd4d553f3",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you test period index & interval index explicity. DId you say timedeltaindex is fixed as well? if not can you add a test for that.",
        "createdAt" : "2018-03-07T14:08:47Z",
        "updatedAt" : "2018-03-07T14:08:55Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "d11a1950-82cf-4fb7-94ef-5638f3f81cc6",
        "parentId" : "e00b809e-bb89-4cf2-b993-165fd4d553f3",
        "authorId" : "566dc560-80aa-4568-8fca-9708238ffbe9",
        "body" : "IntervalIndex and TimedeltaIndex are now tested in TestIndex along with all the other index subclasses (see addition at lines 352-353). Would it be better to leave that way so all the Index subclasses are in one place and treated the same way rather than separating 352-353 into its own test? E.g. it was because I didn't see TimedeltaIndex in the dict in TestIndex that I added it (and, in turn, found out that TimedeltaIndex was broken).\r\n\r\nPeriodIndex worked before (and was tested, see line 334) but the Period object itself couldn't be serialized (#13463). That's being explicitly tested here at line 321 (serialization of Period and Interval).",
        "createdAt" : "2018-03-07T17:58:17Z",
        "updatedAt" : "2018-03-07T17:58:17Z",
        "lastEditedBy" : "566dc560-80aa-4568-8fca-9708238ffbe9",
        "tags" : [
        ]
      },
      {
        "id" : "08838f4e-22ae-4b14-9ab9-f3ad43e80ea9",
        "parentId" : "e00b809e-bb89-4cf2-b993-165fd4d553f3",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "oh ok that's fine then.",
        "createdAt" : "2018-03-07T18:03:04Z",
        "updatedAt" : "2018-03-07T18:03:04Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "1b9baba133e758b46986bb85abc35edd377a4b8d",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +320,324 @@\n    def test_periods(self):\n        # 13463\n        for i in [Period('2010-09', 'M'), Period('2014-Q1', 'Q')]:\n            i_rec = self.encode_decode(i)"
  },
  {
    "id" : "ce9b2b83-f907-44db-b27e-9b00735e97cc",
    "prId" : 21139,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/21139#pullrequestreview-121702088",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7ea8c237-e216-4bc7-af1f-04b36611c576",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Do we have a name used more often than not for the file handle? I notice in this change we have two different ones. The last file I touched they were all `as f:` - if that's used more often than not then let's update these to stay consistent",
        "createdAt" : "2018-05-20T01:26:05Z",
        "updatedAt" : "2018-05-20T01:26:05Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "c811b0c7-727c-492e-9f6e-4c40b0271e21",
        "parentId" : "7ea8c237-e216-4bc7-af1f-04b36611c576",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "f or fh is prob ok",
        "createdAt" : "2018-05-20T02:24:53Z",
        "updatedAt" : "2018-05-20T02:24:53Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "71d245d9-d7cd-4e2d-b565-abf7afa2de57",
        "parentId" : "7ea8c237-e216-4bc7-af1f-04b36611c576",
        "authorId" : "51189123-86a2-400a-9762-6816882b6f12",
        "body" : "@WillAyd : I think this is one of those gray areas where consistency and semantics are somewhat at odds.  It's true that using `as f` would render it consistent, but names like `outfile` (as below) have their merit as providing more information about the file's usage.",
        "createdAt" : "2018-05-21T07:14:37Z",
        "updatedAt" : "2018-05-21T07:14:38Z",
        "lastEditedBy" : "51189123-86a2-400a-9762-6816882b6f12",
        "tags" : [
        ]
      }
    ],
    "commit" : "35a3dc4146ebf6326920af08a0863b128a02ae2b",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +129,133 @@\n            s = df.to_msgpack()\n            with open(p, 'wb') as fh:\n                fh.write(s)\n            result = read_msgpack(p)"
  },
  {
    "id" : "a2318fee-dd5e-4a32-8cf9-0c1eff0b88ac",
    "prId" : 24515,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/24515#pullrequestreview-188531210",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1512ead0-1b95-46c2-8e11-a9b17204d902",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can u remove this file from setup.cfg (as u have i sorted it)",
        "createdAt" : "2018-12-31T18:32:21Z",
        "updatedAt" : "2018-12-31T19:04:35Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "94d87ea0-ee1e-484e-bda4-d3a612c92d65",
        "parentId" : "1512ead0-1b95-46c2-8e11-a9b17204d902",
        "authorId" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "body" : "done",
        "createdAt" : "2018-12-31T19:53:47Z",
        "updatedAt" : "2018-12-31T19:53:47Z",
        "lastEditedBy" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "tags" : [
        ]
      }
    ],
    "commit" : "eba1280cb15d4dcadfb367a85f1fe6af3069a3db",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +3,7 @@import glob\nimport os\nfrom warnings import catch_warnings\n\nimport numpy as np"
  },
  {
    "id" : "c296e90e-52e0-4ddc-9075-b02661a1a742",
    "prId" : 27103,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/27103#pullrequestreview-255987356",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "74631f7c-7b95-4f49-aa16-c05056691660",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "how does this interact with the tm.assert_produces_warning above?",
        "createdAt" : "2019-06-28T21:49:33Z",
        "updatedAt" : "2019-06-28T23:12:39Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "1900376e8d64e2477e6bf38fe34e7c231a05c4a8",
    "line" : 129,
    "diffHunk" : "@@ -1,1 +730,734 @@        with tm.assert_produces_warning(None):\n            with catch_warnings():\n                filterwarnings('ignore', category=FutureWarning)\n                empty_unpacked = self.encode_decode(empty, compress=compress)\n"
  }
]