[
  {
    "id" : "da5b0a42-929a-4cc7-9818-b630d9277d60",
    "prId" : 16522,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/16522#pullrequestreview-40934964",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0e115913-e576-4042-8ef6-fc996da2011f",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "did this test change?",
        "createdAt" : "2017-05-30T11:38:37Z",
        "updatedAt" : "2017-06-01T16:05:35Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "7fcaaeb0-b0db-48a4-ac4a-6c978b322764",
        "parentId" : "0e115913-e576-4042-8ef6-fc996da2011f",
        "authorId" : "51189123-86a2-400a-9762-6816882b6f12",
        "body" : "Yes, because `has_index_names` got dropped (test fails in original form).  That's because when we passed in `has_index_names`, the value of the parameter would only change to `True` if they were detected.",
        "createdAt" : "2017-05-30T12:41:46Z",
        "updatedAt" : "2017-06-01T16:05:35Z",
        "lastEditedBy" : "51189123-86a2-400a-9762-6816882b6f12",
        "tags" : [
        ]
      }
    ],
    "commit" : "f882497afba5baa1d3470e850888f3616555edd0",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +889,893 @@        # We detect headers to determine if index names exist, so\n        # that \"index\" name in the \"names\" version of the data will\n        # now be interpreted as rows that include null data.\n        data = np.array([[None, None, None, None, None],\n                         ['R0C0', 'R0C1', 'R0C2', 'R0C3', 'R0C4'],"
  },
  {
    "id" : "60d8035d-2b8c-44c9-9d88-b2b3a8904c37",
    "prId" : 18600,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/18600#pullrequestreview-95661331",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "315d7644-d803-40a2-b52d-36db9e41b7e7",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "why is this changing?",
        "createdAt" : "2018-02-05T11:21:42Z",
        "updatedAt" : "2018-04-01T15:27:20Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "09e1aebd-c4b1-41b1-9861-502fbd216c9c",
        "parentId" : "315d7644-d803-40a2-b52d-36db9e41b7e7",
        "authorId" : "69a015bc-2b58-45dd-83cb-2c2f6d80b128",
        "body" : "The test was wrong and worked by accident. The result is, and should be, of ``object`` dtype; but the \"expected\" one was too, because the passed dtype wasn't being considered (see above).",
        "createdAt" : "2018-02-05T14:42:28Z",
        "updatedAt" : "2018-04-01T15:27:20Z",
        "lastEditedBy" : "69a015bc-2b58-45dd-83cb-2c2f6d80b128",
        "tags" : [
        ]
      },
      {
        "id" : "0951565d-3c62-44f3-b568-71a0de67d62a",
        "parentId" : "315d7644-d803-40a2-b52d-36db9e41b7e7",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "ok again add this as an example in a new issue",
        "createdAt" : "2018-02-10T17:31:42Z",
        "updatedAt" : "2018-04-01T15:27:20Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "069af26c-44a4-433b-98c3-321353db938e",
        "parentId" : "315d7644-d803-40a2-b52d-36db9e41b7e7",
        "authorId" : "69a015bc-2b58-45dd-83cb-2c2f6d80b128",
        "body" : "Again #19646",
        "createdAt" : "2018-02-11T16:30:37Z",
        "updatedAt" : "2018-04-01T15:27:20Z",
        "lastEditedBy" : "69a015bc-2b58-45dd-83cb-2c2f6d80b128",
        "tags" : [
        ]
      }
    ],
    "commit" : "22701fcf9e2f9daae4020d50af1ff9042803691b",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +462,466 @@        expected_header_none = DataFrame(pd.Series([0], dtype='int64'))\n        tm.assert_frame_equal(actual_header_none, expected_header_none)\n        expected_header_zero = DataFrame(columns=[0])\n        tm.assert_frame_equal(actual_header_zero, expected_header_zero)\n"
  },
  {
    "id" : "39f09bc5-4d9e-4715-9036-e3459dd2034b",
    "prId" : 19829,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19829#pullrequestreview-98371846",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6848daa2-8121-4139-a8d8-a038ad63c724",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "This test was pretty wonky to begin with. With the parametrization I've split out the tests and given preference to `xlsxwriter` if both that and `openpyxl` are installed with `.xlsx` files, which is what the original function was doing in a roundabout way",
        "createdAt" : "2018-02-21T21:43:57Z",
        "updatedAt" : "2018-02-26T02:31:25Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      }
    ],
    "commit" : "872e7d6b969c2fd8d8b482f388802f1dd2d17943",
    "line" : 2385,
    "diffHunk" : "@@ -1,1 +2117,2121 @@            not td.safe_import('xlwt'), reason='No xlwt'))\n    ])\n    def test_ExcelWriter_dispatch(self, klass, ext):\n        with ensure_clean(ext) as path:\n            writer = ExcelWriter(path)"
  },
  {
    "id" : "d16916f4-2966-4487-a2dc-50a254c7de46",
    "prId" : 19829,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19829#pullrequestreview-99166807",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3b5e244c-51dd-4587-9b91-83004b5f3af5",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Rather than creating subclasses and adding arbitrary class metadata it seemed easy enough and clearer to parametrize the writing tests for each engine and the extension it should be serving",
        "createdAt" : "2018-02-21T21:45:29Z",
        "updatedAt" : "2018-02-26T02:31:25Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "95ee1ff8-2975-46a7-b70d-e35e93f0c6d3",
        "parentId" : "3b5e244c-51dd-4587-9b91-83004b5f3af5",
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Another thing that came to mind - want me to add parametrization for `.xlsm` with `openpyxl` and `xlsxwriter`? Neither were being tested before, but I think it makes sense to add those extensions for more coverage. \r\n\r\nHappy to add here or in separate change if we don't want to expand the scope further",
        "createdAt" : "2018-02-26T01:21:56Z",
        "updatedAt" : "2018-02-26T02:31:25Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      }
    ],
    "commit" : "872e7d6b969c2fd8d8b482f388802f1dd2d17943",
    "line" : 884,
    "diffHunk" : "@@ -1,1 +1049,1053 @@        not td.safe_import('xlsxwriter'), reason='No xlsxwriter'))\n])\nclass TestExcelWriter(_WriterBase):\n    # Base class for test cases to run with different Excel writers.\n"
  },
  {
    "id" : "58da9051-450c-4db9-a3d6-5fd39038d6dd",
    "prId" : 19829,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19829#pullrequestreview-98373807",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1af38dcd-f403-4d47-86dc-621d77131fd5",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "The original `ExcelWriterBase` class had an explicit setup / teardown method to set / reset options before each test case. Because I parametrized that test the setup / teardown paradigm did not have visibility into the actual fixtures being passes, so setting up an autoused fixture here to wrap each test case was the best option to inspect the parameters and set / reset the appropriate excel options before and after test execution.\r\n\r\nI made this it's own subclass because the three classes that test specific features of `openpyxl`, `xlsxwriter` and `xlwt` still benefit from having this fixture, although it does require them to provide some extra metadata (namely the `merge_cells` fixture) that they don't use.\r\n\r\nIf this is too wonky, I think an alternate approach would be to re-wire the tests to specifically pass the engine fixture as a keyword argument to their read functions (didn't explore that option in detail so could be wrong)",
        "createdAt" : "2018-02-21T21:50:04Z",
        "updatedAt" : "2018-02-26T02:31:25Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      }
    ],
    "commit" : "872e7d6b969c2fd8d8b482f388802f1dd2d17943",
    "line" : 839,
    "diffHunk" : "@@ -1,1 +1009,1013 @@\n\nclass _WriterBase(SharedItems):\n\n    @pytest.fixture(autouse=True)"
  },
  {
    "id" : "1f6ea857-f9db-4481-a9ea-e86490679353",
    "prId" : 19829,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19829#pullrequestreview-98386515",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "96f32398-ab28-494c-8d58-4b356a60d5f8",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "More verbose doing this, but with the parametrization of Test Classes performed further down in the module I think it's better to explicitly pass `ext` as an argument rather than creating subclasses that bind their own `ext` variable",
        "createdAt" : "2018-02-21T22:31:50Z",
        "updatedAt" : "2018-02-26T02:31:25Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      }
    ],
    "commit" : "872e7d6b969c2fd8d8b482f388802f1dd2d17943",
    "line" : 57,
    "diffHunk" : "@@ -1,1 +68,72 @@        return dfref\n\n    def get_excelfile(self, basename, ext):\n        \"\"\"\n        Return test data ExcelFile instance. Test data path is defined by"
  },
  {
    "id" : "f8e30777-6db6-4332-877b-f3d6751f918f",
    "prId" : 19829,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19829#pullrequestreview-98787708",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "12e6a418-739d-48c7-8375-67efcc67344a",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "could put this in the decorator?",
        "createdAt" : "2018-02-22T02:58:07Z",
        "updatedAt" : "2018-02-26T02:31:25Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "1b24e560-9593-4cf8-8cfb-633561b0b9e2",
        "parentId" : "12e6a418-739d-48c7-8375-67efcc67344a",
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "This conditional doesn't skip anything - it just sets a different expectation on the precision of the result. I suppose we could split this into two separate tests and skip one or the other depending on what's installed but I think that is more trouble than its worth, especially considering the current skip_if_no decorator only has a `min_version` but not a `max_version`",
        "createdAt" : "2018-02-22T16:30:38Z",
        "updatedAt" : "2018-02-26T02:31:25Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "0dfef31c-f412-4704-a82d-b73f23e9d748",
        "parentId" : "12e6a418-739d-48c7-8375-67efcc67344a",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "ok, no prolem.",
        "createdAt" : "2018-02-23T01:26:49Z",
        "updatedAt" : "2018-02-26T02:31:25Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "872e7d6b969c2fd8d8b482f388802f1dd2d17943",
    "line" : 660,
    "diffHunk" : "@@ -1,1 +668,672 @@\n        # Test reading times with and without milliseconds. GH5945.\n        if LooseVersion(xlrd.__VERSION__) >= LooseVersion(\"0.9.3\"):\n            # Xlrd >= 0.9.3 can handle Excel milliseconds.\n            expected = DataFrame.from_dict({\"Time\": [time(1, 2, 3),"
  },
  {
    "id" : "15abfb91-19d9-40bf-a643-3e1c1743dac1",
    "prId" : 19829,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19829#pullrequestreview-99128390",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e0f50032-dbed-426c-8651-e0e55e03d7e2",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "This failed without `xlwt` because the extension was hard-coded to `.xls` all the time, rather than using the `ext` that the fixture provides for all other test cases. I updated that to use the fixture, but in the process discovered that this doesn't work correctly with `openpyxl` so explicitly added a `pytest.xfail` and plan to open an issue to address separately",
        "createdAt" : "2018-02-25T00:50:58Z",
        "updatedAt" : "2018-02-26T02:31:25Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      }
    ],
    "commit" : "872e7d6b969c2fd8d8b482f388802f1dd2d17943",
    "line" : 1559,
    "diffHunk" : "@@ -1,1 +1372,1376 @@        tm.assert_frame_equal(expected, recons)\n\n    def test_to_excel_timedelta(self, merge_cells, engine, ext):\n        # GH 19242, GH9155 - test writing timedelta to xls\n        if engine == 'openpyxl':"
  },
  {
    "id" : "9da65f3c-e82b-4db4-8c34-1d0ddc14aafd",
    "prId" : 19829,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19829#pullrequestreview-99128404",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4fe05e92-2051-4d8b-b5b1-d82ed47f0c90",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Figured I might as well parametrize this and the following two functions as part of this",
        "createdAt" : "2018-02-25T00:51:46Z",
        "updatedAt" : "2018-02-26T02:31:25Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      }
    ],
    "commit" : "872e7d6b969c2fd8d8b482f388802f1dd2d17943",
    "line" : 1151,
    "diffHunk" : "@@ -1,1 +1143,1147 @@        self.frame.to_excel(self.path, 'test1', index=False)\n\n    @pytest.mark.parametrize(\"np_type\", [\n        np.int8, np.int16, np.int32, np.int64])\n    def test_int_types(self, merge_cells, engine, ext, np_type):"
  },
  {
    "id" : "d62a8257-fc41-47ee-aff3-dbe96fc80952",
    "prId" : 19829,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19829#pullrequestreview-99128463",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a6f492b2-e91a-4489-8557-27329eb87e5a",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "This and the next test modified the name of the file generated by `ensure_clean`. In these tests, the content manager within the setup fixture is therefore a no-op. Could move these into a separate class or do something tricky to prevent that, but I figure it was easiest just to keep as is",
        "createdAt" : "2018-02-25T00:56:16Z",
        "updatedAt" : "2018-02-26T02:31:25Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      }
    ],
    "commit" : "872e7d6b969c2fd8d8b482f388802f1dd2d17943",
    "line" : 1793,
    "diffHunk" : "@@ -1,1 +1515,1519 @@                       columns=[u'X\\u0193', u'Y', u'Z'])\n\n        with ensure_clean('__tmp_to_excel_float_format__.' + ext) as filename:\n            df.to_excel(filename, sheet_name='TestSheet', encoding='utf8')\n            result = read_excel(filename, 'TestSheet', encoding='utf8')"
  },
  {
    "id" : "75b00c7d-1b49-4e7a-8c24-c908c3686899",
    "prId" : 19829,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19829#pullrequestreview-99172569",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b4da03a3-9d0f-4072-8740-5cd4fe75ce0d",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "This keeps failing on Travis with Py2, but AppVeyor was fine and I can't reproduce locally (macOS) so I assume it to be linux-only (?). Since this is a \"new\" test I figure just skip for now and I'll open an issue to see if someone on a Linux platform can help troubleshoot. If you have a better idea on how to manage let me know",
        "createdAt" : "2018-02-26T02:34:03Z",
        "updatedAt" : "2018-02-26T02:34:04Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      }
    ],
    "commit" : "872e7d6b969c2fd8d8b482f388802f1dd2d17943",
    "line" : 1582,
    "diffHunk" : "@@ -1,1 +1376,1380 @@        if engine == 'openpyxl':\n            pytest.xfail('Timedelta roundtrip broken with openpyxl')\n        if engine == 'xlsxwriter' and (sys.version_info[0] == 2 and\n                                       sys.platform.startswith('linux')):\n            pytest.xfail('Not working on linux with Py2 and xlsxwriter')"
  },
  {
    "id" : "369799c4-5d0f-4574-bbf5-ccbb333ad846",
    "prId" : 22679,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22679#pullrequestreview-155028911",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "22f3b8eb-5a1a-40e0-9e25-beda29da8478",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Could we alternately just bump the minimum version of xlrd? 1.0.0 is over 2 years old at this point. Only 1.1.0 has been released since then but even that is over a year old now",
        "createdAt" : "2018-09-13T06:33:59Z",
        "updatedAt" : "2018-09-13T06:33:59Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "9bfd5cff-3cb9-4649-8707-b5ea596eeabd",
        "parentId" : "22f3b8eb-5a1a-40e0-9e25-beda29da8478",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Thought about it, though this seemed easier for now. I don't have a strong preference.",
        "createdAt" : "2018-09-13T10:56:59Z",
        "updatedAt" : "2018-09-13T10:56:59Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "57f4a5ac1d2ce28037a60889b6cb95c9aff0b031",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +106,110 @@    # This is based on ExcelWriterBase\n\n    @td.skip_if_no('xlrd', '1.0.1')  # GH-22682\n    def test_usecols_int(self, ext):\n"
  },
  {
    "id" : "bbab4185-e9d0-47e4-9a28-fc9d19abae72",
    "prId" : 23544,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23544#pullrequestreview-173104034",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c232ddc4-7ef5-41b2-b577-33f15dda8188",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "why is this now needed?",
        "createdAt" : "2018-11-08T13:17:54Z",
        "updatedAt" : "2018-11-11T10:39:23Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "e55f542a-49b9-4655-a965-d63d0ced158b",
        "parentId" : "c232ddc4-7ef5-41b2-b577-33f15dda8188",
        "authorId" : "51189123-86a2-400a-9762-6816882b6f12",
        "body" : "`index_col=None` was not being respected before, so I need to add `index_col=0` now for this test.",
        "createdAt" : "2018-11-08T18:19:51Z",
        "updatedAt" : "2018-11-11T10:39:23Z",
        "lastEditedBy" : "51189123-86a2-400a-9762-6816882b6f12",
        "tags" : [
        ]
      }
    ],
    "commit" : "a36aa76e4cef63ca969b322591e0671a0f852664",
    "line" : 651,
    "diffHunk" : "@@ -1,1 +1041,1045 @@            df2.to_excel(pth)\n\n            res = read_excel(pth, index_col=0)\n            tm.assert_frame_equal(df2, res)\n"
  },
  {
    "id" : "d31cc352-5c9f-4e73-950f-1d4055fe1bb0",
    "prId" : 23544,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23544#pullrequestreview-173104063",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "935baa0a-4ff9-431b-ad2b-d13335abf847",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "why is this changed?",
        "createdAt" : "2018-11-08T13:18:11Z",
        "updatedAt" : "2018-11-11T10:39:23Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "cd1c667f-24b6-463b-8e87-2cc75f9d86e5",
        "parentId" : "935baa0a-4ff9-431b-ad2b-d13335abf847",
        "authorId" : "51189123-86a2-400a-9762-6816882b6f12",
        "body" : "`index_col=None` was not being respected before, so I need to add `index_col=0` now for this test.",
        "createdAt" : "2018-11-08T18:19:55Z",
        "updatedAt" : "2018-11-11T10:39:23Z",
        "lastEditedBy" : "51189123-86a2-400a-9762-6816882b6f12",
        "tags" : [
        ]
      }
    ],
    "commit" : "a36aa76e4cef63ca969b322591e0671a0f852664",
    "line" : 769,
    "diffHunk" : "@@ -1,1 +1287,1291 @@\n        reader = ExcelFile(self.path)\n        recons = read_excel(reader, \"test1\", index_col=0).astype(np_type)\n\n        tm.assert_frame_equal(frame, recons, check_dtype=False)"
  },
  {
    "id" : "01d95908-5ee9-4cbd-8e95-9708f18c15f6",
    "prId" : 23727,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23727#pullrequestreview-178034791",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d5b1b8c0-68cc-4a6e-b1da-42bd49c28df9",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "hmm, is this *still* present in 1.0.0 which is now our min version?",
        "createdAt" : "2018-11-23T14:34:06Z",
        "updatedAt" : "2018-11-23T14:34:07Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "5932fc62-6776-4dce-98f1-05d0532fa524",
        "parentId" : "d5b1b8c0-68cc-4a6e-b1da-42bd49c28df9",
        "authorId" : "b0c8ea7f-389d-4305-8e0a-a1a394b9fcc2",
        "body" : "it happens in `1.1.0` (the latest), which is the version I have installed, so I think these warning ignores are needed for now",
        "createdAt" : "2018-11-24T00:12:06Z",
        "updatedAt" : "2018-11-24T00:12:06Z",
        "lastEditedBy" : "b0c8ea7f-389d-4305-8e0a-a1a394b9fcc2",
        "tags" : [
        ]
      }
    ],
    "commit" : "e1a6f89db248f422ddb3cd67e97efa5246868d39",
    "line" : 54,
    "diffHunk" : "@@ -1,1 +40,44 @@def ignore_xlrd_time_clock_warning():\n    \"\"\"\n    Context manager to ignore warnings raised by the xlrd library,\n    regarding the deprecation of `time.clock` in Python 3.7.\n    \"\"\""
  },
  {
    "id" : "9fac2a33-cac7-4099-abf0-fc4a7c3fce66",
    "prId" : 24423,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/24423#pullrequestreview-188247181",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0a04c4ed-aa0a-4689-a507-9637f1c34ae4",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "So I originally wanted to put this parametrization in `conftest` but I think it got unnecessarily verbose in doing so. Since I don't see much use outside of the existing test class I figured here was the best spot for this",
        "createdAt" : "2018-12-25T19:21:03Z",
        "updatedAt" : "2018-12-25T19:23:43Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "f38ef042-fb11-4929-a570-497f809e8ec6",
        "parentId" : "0a04c4ed-aa0a-4689-a507-9637f1c34ae4",
        "authorId" : "51189123-86a2-400a-9762-6816882b6f12",
        "body" : "I agree with this decision.  In the future, in the interest of greater `pytest` idiom, it would be great (though not sure if possible) yet to break up this massive test file into a directory of `excel` tests, in which case we could put this fixture in the `conftest` file for `excel`.\r\n\r\nBut that's a ways off...I think...🙂 ",
        "createdAt" : "2018-12-28T08:57:27Z",
        "updatedAt" : "2018-12-28T08:57:39Z",
        "lastEditedBy" : "51189123-86a2-400a-9762-6816882b6f12",
        "tags" : [
        ]
      }
    ],
    "commit" : "607dbe5aae975cc3f5f4b53a67759e0ba5d7d6b2",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +120,124 @@    # This is based on ExcelWriterBase\n\n    @pytest.fixture(autouse=True, params=['xlrd', None])\n    def set_engine(self, request):\n        func_name = \"get_exceldf\""
  },
  {
    "id" : "39c013c5-c5a7-4c1a-945e-7e2cf11ee8cc",
    "prId" : 24423,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/24423#pullrequestreview-188375641",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b7ace3cf-a3e2-4e15-a934-b8ca18f69ae8",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Long term we probably want to refactor `get_exceldf` altogether but for the time being the partial should get us the parametrization we want with a relatively minor diff",
        "createdAt" : "2018-12-25T19:21:57Z",
        "updatedAt" : "2018-12-25T19:23:43Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "5dae7b66-4a70-48e0-9056-b29bbcb0dec6",
        "parentId" : "b7ace3cf-a3e2-4e15-a934-b8ca18f69ae8",
        "authorId" : "51189123-86a2-400a-9762-6816882b6f12",
        "body" : "Well, there isn't much to refactor for that method (it's only two lines), but a greater reorganization would indeed be nice since we're introducing more `pytest`-like code into this file (perhaps take inspiration from the work I did with the `read_csv` tests).",
        "createdAt" : "2018-12-28T08:59:31Z",
        "updatedAt" : "2018-12-28T08:59:31Z",
        "lastEditedBy" : "51189123-86a2-400a-9762-6816882b6f12",
        "tags" : [
        ]
      },
      {
        "id" : "8b3fe4ae-9c29-4dbe-8efe-9dd18a5cd4a6",
        "parentId" : "b7ace3cf-a3e2-4e15-a934-b8ca18f69ae8",
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Yea by refactor I meant more-so replace with a fixture or something besides an instance method on a base class",
        "createdAt" : "2018-12-28T21:58:23Z",
        "updatedAt" : "2018-12-28T21:58:23Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      }
    ],
    "commit" : "607dbe5aae975cc3f5f4b53a67759e0ba5d7d6b2",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +124,128 @@        func_name = \"get_exceldf\"\n        old_func = getattr(self, func_name)\n        new_func = partial(old_func, engine=request.param)\n        setattr(self, func_name, new_func)\n        yield"
  },
  {
    "id" : "e1376b9a-54cb-490a-9d88-09a31562c129",
    "prId" : 24423,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/24423#pullrequestreview-188301502",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1284b0fd-1845-404f-9c88-bf4641b9374e",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "The diff may be slightly misleading but I essentially refactored to put all of the tests in the base class save this one, which deals particular with an XLRD workbook",
        "createdAt" : "2018-12-25T19:23:10Z",
        "updatedAt" : "2018-12-25T19:23:43Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "4cb048f0-603f-40f8-9543-81115d0777a1",
        "parentId" : "1284b0fd-1845-404f-9c88-bf4641b9374e",
        "authorId" : "51189123-86a2-400a-9762-6816882b6f12",
        "body" : "That's fair.  In the interest of a small diff, it can stay here, though I think we should put this in a separate file in the future for \"xlrd-only\" tests.",
        "createdAt" : "2018-12-28T09:00:21Z",
        "updatedAt" : "2018-12-28T09:00:32Z",
        "lastEditedBy" : "51189123-86a2-400a-9762-6816882b6f12",
        "tags" : [
        ]
      },
      {
        "id" : "8739b98e-9a8c-4ac5-a986-3572a4bacc1b",
        "parentId" : "1284b0fd-1845-404f-9c88-bf4641b9374e",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "yeah i agree. let's do this part in a followup, I think a split of the excel tests to a sub-dir is also in order.",
        "createdAt" : "2018-12-28T14:32:00Z",
        "updatedAt" : "2018-12-28T14:32:03Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "607dbe5aae975cc3f5f4b53a67759e0ba5d7d6b2",
    "line" : 73,
    "diffHunk" : "@@ -1,1 +1151,1155 @@\n    @td.skip_if_no(\"xlwt\")\n    def test_read_xlrd_book(self, ext):\n        import xlrd\n        df = self.frame"
  },
  {
    "id" : "b28c634a-6680-4146-a6d7-a500f9d97bad",
    "prId" : 26080,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/26080#pullrequestreview-239219353",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cd45e7d1-4a14-4c69-a0bf-d05fb39f71f4",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you add the issue number as a comment here",
        "createdAt" : "2019-05-16T00:28:23Z",
        "updatedAt" : "2019-06-01T12:43:40Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "1fb2dd61-250e-4504-9be5-fa376914d1fc",
        "parentId" : "cd45e7d1-4a14-4c69-a0bf-d05fb39f71f4",
        "authorId" : "f1d74e17-9191-4940-88a0-7e9398c8a918",
        "body" : "done",
        "createdAt" : "2019-05-19T02:57:17Z",
        "updatedAt" : "2019-06-01T12:43:40Z",
        "lastEditedBy" : "f1d74e17-9191-4940-88a0-7e9398c8a918",
        "tags" : [
        ]
      }
    ],
    "commit" : "66f4602f7ffaaf35a5430882937ba9030c6606fe",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +1189,1193 @@\n        # GH 26080\n        breaking_row_count = 2**20 + 1\n        breaking_col_count = 2**14 + 1\n        # purposely using two arrays to prevent memory issues while testing"
  },
  {
    "id" : "f23e2fa3-ead6-4407-8f58-e357a3d9a425",
    "prId" : 26473,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/26473#pullrequestreview-239666144",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ff0c9070-dc01-4453-8aab-e11ef455392a",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "It might not be entirely apparent from the diff but to clarify here I've moved `get_csv_refdf`, `get_excelfile` and `get_exceldf` out of the SharedItems class because they were only used by the ReaderBaseClass. \r\n\r\nWhat's left in SharedItems should be replaced by fixtures where needed in the next PR",
        "createdAt" : "2019-05-20T18:49:10Z",
        "updatedAt" : "2019-05-20T18:49:10Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      }
    ],
    "commit" : "5c30f323e6495ba6c806018766676c5d74a71335",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +62,66 @@\n@td.skip_if_no('xlrd', '1.0.0')\nclass ReadingTestsBase(SharedItems):\n    # This is based on ExcelWriterBase\n"
  },
  {
    "id" : "5787385f-ff0d-43e0-a387-15ea03ecceb1",
    "prId" : 26543,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/26543#pullrequestreview-243022198",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "be3c0564-50a3-4376-bba9-c248eb849db1",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "This was actually failing with the fixturized approach because the URL requires an absolute path, or else it raises a URLError and gets skipped. \r\n\r\nQuite a few ways to do this but I figured just reusing the datapath fixture was easiest, especially since this is pending deprecation",
        "createdAt" : "2019-05-29T03:21:39Z",
        "updatedAt" : "2019-05-29T16:39:08Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      }
    ],
    "commit" : "3a5e5bbfd2c0bb26ef99b82874fadef4b802fd5a",
    "line" : 646,
    "diffHunk" : "@@ -1,1 +571,575 @@\n        # FILE\n        localtable = os.path.join(datapath(\"io\", \"data\"), 'test1' + ext)\n        local_table = pd.read_excel(localtable)\n"
  },
  {
    "id" : "6892af5a-c816-421b-b001-85b0cfbb837a",
    "prId" : 26543,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/26543#pullrequestreview-243022198",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "09fc5df1-c8ee-494f-8b87-94236ca97bed",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Given the fixture changes to the data directory, this invocation without an argument resolves to there automatically without need to resolve to an absolute path",
        "createdAt" : "2019-05-29T03:22:25Z",
        "updatedAt" : "2019-05-29T16:39:08Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      }
    ],
    "commit" : "3a5e5bbfd2c0bb26ef99b82874fadef4b802fd5a",
    "line" : 683,
    "diffHunk" : "@@ -1,1 +606,610 @@        expected = pd.read_excel(str_path, 'Sheet1', index_col=0)\n\n        path_obj = LocalPath().join('test1' + ext)\n        actual = pd.read_excel(path_obj, 'Sheet1', index_col=0)\n"
  },
  {
    "id" : "ee2d9737-f8b2-4443-9d6a-e3ad396d1621",
    "prId" : 26553,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/26553#pullrequestreview-243042409",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a7e40bc1-bf26-4ebe-b66d-93100d2680bc",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Only one test in each of these classes was actually using the `engine` parameter so figured cleaner to just specify there",
        "createdAt" : "2019-05-29T05:17:03Z",
        "updatedAt" : "2019-05-29T05:21:24Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "e15fb836-0069-4d16-886b-00b06d4bfe84",
        "parentId" : "a7e40bc1-bf26-4ebe-b66d-93100d2680bc",
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "`merge_cells` was also never used but rather required due to the mix of pytest / subclassing paradigms; I've done away with it entirely here",
        "createdAt" : "2019-05-29T05:21:21Z",
        "updatedAt" : "2019-05-29T05:21:24Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      }
    ],
    "commit" : "39e4d4e37dca818ce73ed06924a1a79c323bd797",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +2066,2070 @@\n@td.skip_if_no('openpyxl')\n@pytest.mark.parametrize(\"ext\", ['.xlsx'])\nclass TestOpenpyxlTests:\n"
  },
  {
    "id" : "7916e1af-0f1b-4072-a87c-a59b028d9fd2",
    "prId" : 26579,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/26579#pullrequestreview-243970147",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "12774c5a-327c-473c-bb96-879496f7ea1b",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "This was previously a global variable. I didn't convert to a fixture like the rest simply because this is the only test that uses it",
        "createdAt" : "2019-05-30T18:59:59Z",
        "updatedAt" : "2019-06-04T01:08:06Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      }
    ],
    "commit" : "199909ae2c4142612c9aae7e1b4f888b884eaba7",
    "line" : 167,
    "diffHunk" : "@@ -1,1 +1213,1217 @@\n    def test_mixed(self, merge_cells, engine, ext, frame):\n        mixed_frame = frame.copy()\n        mixed_frame['foo'] = 'bar'\n"
  },
  {
    "id" : "aa9295c9-034d-49c8-9401-969512410324",
    "prId" : 26579,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/26579#pullrequestreview-243970147",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "86a3d485-aaba-43cf-9fa4-e66d38a4f1f3",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "So as not to confuse the fixture with a local variable I changed `frame` to `df` here (and in test_*_types tests)",
        "createdAt" : "2019-05-30T19:02:49Z",
        "updatedAt" : "2019-06-04T01:08:06Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      }
    ],
    "commit" : "199909ae2c4142612c9aae7e1b4f888b884eaba7",
    "line" : 349,
    "diffHunk" : "@@ -1,1 +1347,1351 @@\n        # test index_label\n        df = (DataFrame(np.random.randn(10, 2)) >= 0)\n        df.to_excel(self.path, 'test1',\n                    index_label=['test'],"
  },
  {
    "id" : "3da9ac43-5380-4bcb-990b-bca614028163",
    "prId" : 26579,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/26579#pullrequestreview-245226694",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7a1cbd39-29b3-4fea-9e5f-c2c91ce79296",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "An unintended consequence of the `*_` in the signature I think is that it makes all of the fixtures available within these functions which seems undesirable. Worth making that explicit in a follow up",
        "createdAt" : "2019-06-03T23:25:31Z",
        "updatedAt" : "2019-06-04T01:08:06Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "e4e9bb4b-b44a-4bfb-a01d-b0f7efae14a4",
        "parentId" : "7a1cbd39-29b3-4fea-9e5f-c2c91ce79296",
        "authorId" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "body" : "why's the *_ needed?",
        "createdAt" : "2019-06-04T00:22:56Z",
        "updatedAt" : "2019-06-04T01:08:06Z",
        "lastEditedBy" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "tags" : [
        ]
      },
      {
        "id" : "62535fcd-9c03-4d67-aa87-71fa682a2d69",
        "parentId" : "7a1cbd39-29b3-4fea-9e5f-c2c91ce79296",
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "I think it was just shorthand to not have to type out the class fixtures. Looks to have been introduced in #23544 so cc @gfyoung if there's something I may be overlooking, but I think can type these out explicitly in a follow up PR to avoid injection of undesired fixtures",
        "createdAt" : "2019-06-04T01:01:41Z",
        "updatedAt" : "2019-06-04T01:08:06Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "b1ef0839-2e1f-41f0-b0aa-92f2c2cac901",
        "parentId" : "7a1cbd39-29b3-4fea-9e5f-c2c91ce79296",
        "authorId" : "51189123-86a2-400a-9762-6816882b6f12",
        "body" : "I think this was an inheritance issue, so all of these fixtures were getting passed in.  That's why I added it.  We can revisit though of course.",
        "createdAt" : "2019-06-04T04:26:58Z",
        "updatedAt" : "2019-06-04T04:26:58Z",
        "lastEditedBy" : "51189123-86a2-400a-9762-6816882b6f12",
        "tags" : [
        ]
      }
    ],
    "commit" : "199909ae2c4142612c9aae7e1b4f888b884eaba7",
    "line" : 76,
    "diffHunk" : "@@ -1,1 +1150,1154 @@            pd.read_excel(xl, \"0\")\n\n    def test_excel_writer_context_manager(self, frame, frame2, *_):\n        with ExcelWriter(self.path) as writer:\n            frame.to_excel(writer, \"Data1\")"
  },
  {
    "id" : "1ef11a31-f42b-49a4-a156-ad53e014a56e",
    "prId" : 26579,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/26579#pullrequestreview-245226809",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c7d45a18-15fe-4df2-9ec4-3e4bc65c5a6d",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Note that any assignments to `self.frame` had to be replaced with a `copy` call to avoid SettingWithCopy warnings",
        "createdAt" : "2019-06-03T23:26:14Z",
        "updatedAt" : "2019-06-04T01:08:06Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "f17b00d8-1740-4e87-b3d9-c48b68b08873",
        "parentId" : "c7d45a18-15fe-4df2-9ec4-3e4bc65c5a6d",
        "authorId" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "body" : "there's float_string_frame and a float_frame_with_na in pandas\\tests\\frame\\conftest.py which could be promoted to pandas\\conftest.py and avoid some of this. (just a suggestion. take a look. see what you think)\r\n",
        "createdAt" : "2019-06-04T00:27:36Z",
        "updatedAt" : "2019-06-04T01:08:06Z",
        "lastEditedBy" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "tags" : [
        ]
      },
      {
        "id" : "87b8d2d8-ab53-4726-b158-acba65a374de",
        "parentId" : "c7d45a18-15fe-4df2-9ec4-3e4bc65c5a6d",
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Given how convoluted the first review process was might make sense to keep fixture consolidation and movement outside of this module to a follow up (or pre-cursor)",
        "createdAt" : "2019-06-04T01:03:06Z",
        "updatedAt" : "2019-06-04T01:08:06Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "e40476f6-63a3-4407-9b78-d944084502eb",
        "parentId" : "c7d45a18-15fe-4df2-9ec4-3e4bc65c5a6d",
        "authorId" : "51189123-86a2-400a-9762-6816882b6f12",
        "body" : "I would do a follow-up.  It'll be easier to consolidate when the dust settles.",
        "createdAt" : "2019-06-04T04:27:41Z",
        "updatedAt" : "2019-06-04T04:27:42Z",
        "lastEditedBy" : "51189123-86a2-400a-9762-6816882b6f12",
        "tags" : [
        ]
      }
    ],
    "commit" : "199909ae2c4142612c9aae7e1b4f888b884eaba7",
    "line" : 95,
    "diffHunk" : "@@ -1,1 +1163,1167 @@\n    def test_roundtrip(self, merge_cells, engine, ext, frame):\n        frame = frame.copy()\n        frame['A'][:5] = nan\n"
  },
  {
    "id" : "1550445a-3d00-44b4-a4ac-63a2d30044e6",
    "prId" : 26579,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/26579#pullrequestreview-245171230",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "408c8ad1-90b5-4a67-aae9-c9881f2abef4",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Rather than duplicating logic leveraged the fixture here",
        "createdAt" : "2019-06-03T23:26:46Z",
        "updatedAt" : "2019-06-04T01:08:06Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      }
    ],
    "commit" : "199909ae2c4142612c9aae7e1b4f888b884eaba7",
    "line" : 179,
    "diffHunk" : "@@ -1,1 +1222,1226 @@\n    def test_ts_frame(self, tsframe, *_):\n        df = tsframe\n\n        df.to_excel(self.path, \"test1\")"
  },
  {
    "id" : "03a414e1-b069-4029-966e-e9d9ad9dd0dc",
    "prId" : 26579,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/26579#pullrequestreview-245194174",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8581baf3-c56a-426b-9ae2-3355c5fd69ff",
        "parentId" : null,
        "authorId" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "body" : "there's a couple of tests where frame and frame2 are both injected into the same test. i see that in one case it's to write to multiple sheets. can you check that all tests with frame and frame2 together need them both otherwise the tests should be split.",
        "createdAt" : "2019-06-04T00:33:18Z",
        "updatedAt" : "2019-06-04T01:08:06Z",
        "lastEditedBy" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "tags" : [
        ]
      },
      {
        "id" : "5bacea19-7a99-48c7-ae37-f4bbf6a2d194",
        "parentId" : "8581baf3-c56a-426b-9ae2-3355c5fd69ff",
        "authorId" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "body" : "oh. and you should do a copy of float frame before changing the column labels because of that.",
        "createdAt" : "2019-06-04T00:35:14Z",
        "updatedAt" : "2019-06-04T01:08:06Z",
        "lastEditedBy" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "tags" : [
        ]
      },
      {
        "id" : "f298069d-aea3-47bb-ace9-6bfb4515ffcf",
        "parentId" : "8581baf3-c56a-426b-9ae2-3355c5fd69ff",
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "tbh I think we can get rid of this fixture altogether. It's only used in two tests and one of them ignores the header changes anyway so no real point in having this",
        "createdAt" : "2019-06-04T01:06:24Z",
        "updatedAt" : "2019-06-04T01:08:06Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "c8d9773e-d55a-4a27-b181-1284616c0264",
        "parentId" : "8581baf3-c56a-426b-9ae2-3355c5fd69ff",
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "For now to minimize diff going to add copy as you suggested, but removing should make for an easy follow up PR",
        "createdAt" : "2019-06-04T01:07:43Z",
        "updatedAt" : "2019-06-04T01:08:06Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "580980a1-d5f8-48e0-a0af-15c2af9cbda7",
        "parentId" : "8581baf3-c56a-426b-9ae2-3355c5fd69ff",
        "authorId" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "body" : "yeah, probably best not to change the test behavior here, but if it's not adding anything then can remove in a follow-on.",
        "createdAt" : "2019-06-04T01:14:55Z",
        "updatedAt" : "2019-06-04T01:14:55Z",
        "lastEditedBy" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "tags" : [
        ]
      }
    ],
    "commit" : "199909ae2c4142612c9aae7e1b4f888b884eaba7",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +36,40 @@def frame2(float_frame):\n    float_frame = float_frame.copy()\n    float_frame.columns = ['D', 'C', 'B', 'A']\n    return float_frame[:10]\n"
  },
  {
    "id" : "039f7f17-84b2-4383-9173-31a112b43dc7",
    "prId" : 26579,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/26579#pullrequestreview-245987920",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f92f9e5d-0d22-4f06-a2ed-181ccf302304",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "great, next time around can you add some doc-strings, and/or make more meaningful names",
        "createdAt" : "2019-06-05T12:58:55Z",
        "updatedAt" : "2019-06-05T12:58:55Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "199909ae2c4142612c9aae7e1b4f888b884eaba7",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +29,33 @@\n@pytest.fixture\ndef frame(float_frame):\n    return float_frame[:10]\n"
  },
  {
    "id" : "9523578e-1c17-47f1-aa6c-041c51b4a822",
    "prId" : 26662,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/26662#pullrequestreview-246681622",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3189a4e1-0adb-4e39-9fbb-a7f905b42498",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Might be a cleaner way to mark these but in any case this is more or less what I see being easiest long term as we look at add openpyxl into the reading mix. Any reader can be parametrized here with this fixture and automatically cover all of the reading tests.\r\n\r\nI'll have to move or split some tests out of the base class here that truly do test xldd-specific behavior but leaving that for another follow up",
        "createdAt" : "2019-06-05T14:21:55Z",
        "updatedAt" : "2019-06-08T11:38:03Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "2056f69b-ba3b-4325-bf7b-6991d3520829",
        "parentId" : "3189a4e1-0adb-4e39-9fbb-a7f905b42498",
        "authorId" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "body" : "could you not use pytest.importorskip in the body of cd_and_set_engine instead?",
        "createdAt" : "2019-06-06T13:32:12Z",
        "updatedAt" : "2019-06-08T11:38:03Z",
        "lastEditedBy" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "tags" : [
        ]
      },
      {
        "id" : "149ff22c-abfe-4c13-8a90-28fde61b98c0",
        "parentId" : "3189a4e1-0adb-4e39-9fbb-a7f905b42498",
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "That's an option but once we start adding more engines with different file extensions (ex: openpyxl won't handle xlrd, odfpy won't be excel files) that would generate a ton of skips. One option to reduce that would be to change the scope here to a higher level, but I think it makes sense to defer that or whatever the ultimate change is for now",
        "createdAt" : "2019-06-06T16:01:49Z",
        "updatedAt" : "2019-06-08T11:38:03Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "0b492a9d-581d-4003-b88f-61810dc9fa17",
        "parentId" : "3189a4e1-0adb-4e39-9fbb-a7f905b42498",
        "authorId" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "body" : "ok, for now then as will also depend on how engine=None will be tested if that's changed.",
        "createdAt" : "2019-06-06T16:29:20Z",
        "updatedAt" : "2019-06-08T11:38:03Z",
        "lastEditedBy" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "tags" : [
        ]
      }
    ],
    "commit" : "fd697ea60e24c609020dd28056d95a7b4a8781a7",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +62,66 @@    @pytest.fixture(autouse=True, params=[\n        # Add any engines to test here\n        pytest.param('xlrd', marks=pytest.mark.skipif(\n            not td.safe_import(\"xlrd\"), reason=\"no xlrd\")),\n        pytest.param(None, marks=pytest.mark.skipif("
  },
  {
    "id" : "3ca83c2b-b9ac-4c36-ad32-71b52237d01a",
    "prId" : 26662,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/26662#pullrequestreview-246112315",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d2a80990-13e3-446e-9fbd-98519360dab5",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Comment might have been lost on a prior PR but the min xlrd version for pandas is 1.0.0 anyway, so this was duplicative",
        "createdAt" : "2019-06-05T16:13:51Z",
        "updatedAt" : "2019-06-08T11:38:03Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      }
    ],
    "commit" : "fd697ea60e24c609020dd28056d95a7b4a8781a7",
    "line" : 99,
    "diffHunk" : "@@ -1,1 +842,846 @@\n\n@td.skip_if_no('xlrd')\n@pytest.mark.parametrize(\"ext\", ['.xls', '.xlsx', '.xlsm'])\nclass TestRoundTrip:"
  },
  {
    "id" : "4d72f06b-f830-4e08-a575-92e5f2c07604",
    "prId" : 26662,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/26662#pullrequestreview-246667198",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3eeb5cd1-7929-4d7f-b612-8badef687a0e",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "The `*_` signature was making practically all fixtures available to the function, so replaced with something explicit (easier now that we've decoupled the class based designed from the fixturized design)",
        "createdAt" : "2019-06-05T16:14:43Z",
        "updatedAt" : "2019-06-08T11:38:03Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "27b78804-4c22-4933-8324-6666458a1a25",
        "parentId" : "3eeb5cd1-7929-4d7f-b612-8badef687a0e",
        "authorId" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "body" : "engine and ext do not need to be in the function signature if their values are not required by the test. the parameterisation is handled by the set_engine_and_path autouse fixture.\r\n\r\ni think it's only `test_bytes_io` that needs engine and `test_excel_date_datetime_format`, `test_to_excel_output_encoding` and `test_to_excel_unicode_filename` that needs to know the value of ext.\r\n\r\nand then `test_path_path_lib` and  `test_path_local_path` need both engine and ext.\r\n\r\nso i would just remove them completely from the function signature here and in the other tests where they are not needed.\r\n",
        "createdAt" : "2019-06-06T14:51:35Z",
        "updatedAt" : "2019-06-08T11:38:03Z",
        "lastEditedBy" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "tags" : [
        ]
      },
      {
        "id" : "0dd6f12c-337d-4649-a2ef-c61923cbcfd7",
        "parentId" : "3eeb5cd1-7929-4d7f-b612-8badef687a0e",
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "> engine and ext do not need to be in the function signature if their values are not required by the test. the parameterisation is handled by the set_engine_and_path autouse fixture.\r\n\r\nGood to know. Should definitely be able to simplify some of these methods on next push then!",
        "createdAt" : "2019-06-06T16:08:13Z",
        "updatedAt" : "2019-06-08T11:38:03Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      }
    ],
    "commit" : "fd697ea60e24c609020dd28056d95a7b4a8781a7",
    "line" : 146,
    "diffHunk" : "@@ -1,1 +1132,1136 @@            col_df.to_excel(self.path)\n\n    def test_excel_sheet_by_name_raise(self, engine, ext):\n        import xlrd\n"
  },
  {
    "id" : "c5ce5d19-e291-40b1-90a0-2511ee6ca096",
    "prId" : 26662,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/26662#pullrequestreview-246667198",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e0615239-5ae7-4d30-bac1-fa6f490f064a",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "This was previously a decorator for the writing tests but used in less than half of those tests, so it was adding unnecessary parametrization. By decoupling this from the class we can simply inject where necessary",
        "createdAt" : "2019-06-05T16:15:31Z",
        "updatedAt" : "2019-06-08T11:38:03Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "f386ba61-7d13-4c21-b382-bfd4acc79952",
        "parentId" : "e0615239-5ae7-4d30-bac1-fa6f490f064a",
        "authorId" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "body" : "docstring?",
        "createdAt" : "2019-06-06T12:38:54Z",
        "updatedAt" : "2019-06-08T11:38:03Z",
        "lastEditedBy" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "tags" : [
        ]
      },
      {
        "id" : "83118724-67bc-47db-99e5-072e509c4fc4",
        "parentId" : "e0615239-5ae7-4d30-bac1-fa6f490f064a",
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "No problem - will do on next push",
        "createdAt" : "2019-06-06T16:08:23Z",
        "updatedAt" : "2019-06-08T11:38:03Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      }
    ],
    "commit" : "fd697ea60e24c609020dd28056d95a7b4a8781a7",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +39,43 @@\n@pytest.fixture(params=[True, False])\ndef merge_cells(request):\n    return request.param\n"
  },
  {
    "id" : "55d7e631-3944-48af-8f6e-eda5664a7eca",
    "prId" : 26662,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/26662#pullrequestreview-246540790",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "26f9e200-ad4e-478d-bcf4-85e60a77f726",
        "parentId" : null,
        "authorId" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "body" : "make this a one-line docstring instead.",
        "createdAt" : "2019-06-06T13:12:25Z",
        "updatedAt" : "2019-06-08T11:38:03Z",
        "lastEditedBy" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "tags" : [
        ]
      }
    ],
    "commit" : "fd697ea60e24c609020dd28056d95a7b4a8781a7",
    "line" : 37,
    "diffHunk" : "@@ -1,1 +61,65 @@\n    @pytest.fixture(autouse=True, params=[\n        # Add any engines to test here\n        pytest.param('xlrd', marks=pytest.mark.skipif(\n            not td.safe_import(\"xlrd\"), reason=\"no xlrd\")),"
  },
  {
    "id" : "410daa67-49e4-484c-a21d-b5f185056cd0",
    "prId" : 26662,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/26662#pullrequestreview-246680370",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "da9f2339-2e55-4a98-be01-efea867000a7",
        "parentId" : null,
        "authorId" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "body" : "removing the base class has resulted in the lose of 3 tests, with engine=None. is that intentional?\r\n\r\nthe engine is set explicitly in this test, so on master the engine parameter was being ignored anyway.",
        "createdAt" : "2019-06-06T13:44:39Z",
        "updatedAt" : "2019-06-08T11:38:03Z",
        "lastEditedBy" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "tags" : [
        ]
      },
      {
        "id" : "ce276d75-41d9-4692-98c6-7b43c5be9b79",
        "parentId" : "da9f2339-2e55-4a98-be01-efea867000a7",
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Yes that is intentional. The purpose of this class is to just test the xlrd function, so bundling None in here somewhat blurs the intention.\r\n\r\nGenerally we could probably get rid of the `None` engine tests and just have a separate test that ensures how that gets bound to a particular engine, but deferring that as well for now",
        "createdAt" : "2019-06-06T16:03:37Z",
        "updatedAt" : "2019-06-08T11:38:03Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "b0f3d1fd-2dca-4645-a626-f2e759c717aa",
        "parentId" : "da9f2339-2e55-4a98-be01-efea867000a7",
        "authorId" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "body" : "makes sense.",
        "createdAt" : "2019-06-06T16:26:49Z",
        "updatedAt" : "2019-06-08T11:38:03Z",
        "lastEditedBy" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "tags" : [
        ]
      }
    ],
    "commit" : "fd697ea60e24c609020dd28056d95a7b4a8781a7",
    "line" : 111,
    "diffHunk" : "@@ -1,1 +1045,1049 @@@td.skip_if_no('xlrd')\n@pytest.mark.parametrize(\"ext\", ['.xls', '.xlsx', '.xlsm'])\nclass TestXlrdReader:\n    \"\"\"\n    This is the base class for the xlrd tests, and 3 different file formats"
  },
  {
    "id" : "1d2afefb-581b-430e-8fb2-66530688bb3e",
    "prId" : 26740,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/26740#pullrequestreview-247380119",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7d1983e2-c7bd-4e7b-aa16-2a0ea9bb74e8",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "The majority of this PR is a result of renaming this fixture so as not to conflict with the valid extensions for writing",
        "createdAt" : "2019-06-08T19:56:55Z",
        "updatedAt" : "2019-06-08T19:57:04Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      }
    ],
    "commit" : "cb5d640c4c76dc6927507d8ebcc93956390f1b2d",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +68,72 @@\n@pytest.fixture(params=['.xls', '.xlsx', '.xlsm'])\ndef read_ext(request):\n    \"\"\"\n    Valid extensions for reading Excel files."
  },
  {
    "id" : "170583bd-b1c2-4134-b7ad-258037cd106e",
    "prId" : 26740,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/26740#pullrequestreview-247380174",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d64a136a-bca6-4173-945b-fd761f47e080",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "This parametrization is still dangling and probably should use read_ext but for now I'm putting any tests that concern themselves with writing on the back burner, since reading is where most community engagement has been outstanding",
        "createdAt" : "2019-06-08T19:58:41Z",
        "updatedAt" : "2019-06-08T19:58:44Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      }
    ],
    "commit" : "cb5d640c4c76dc6927507d8ebcc93956390f1b2d",
    "line" : 867,
    "diffHunk" : "@@ -1,1 +880,884 @@\n@td.skip_if_no('xlrd')\n@pytest.mark.parametrize(\"ext\", ['.xls', '.xlsx', '.xlsm'])\nclass TestRoundTrip:\n"
  }
]