[
  {
    "id" : "c2c733fd-913f-4e8b-88a5-17ab22f08332",
    "prId" : 22704,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22704#pullrequestreview-155724473",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ff9755f9-31d6-4b6f-a9ae-e722b553dd7a",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Might be missing the point but if you are patching this what is actually getting tested for gcs?",
        "createdAt" : "2018-09-15T18:48:45Z",
        "updatedAt" : "2018-10-11T16:53:28Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "27905444-0f9d-43d2-8996-8464bfd3ca06",
        "parentId" : "ff9755f9-31d6-4b6f-a9ae-e722b553dd7a",
        "authorId" : "b166bda0-b3db-486d-a68e-b39350a7613e",
        "body" : "Yeah, it's kind of the same problem that we discussed in #20729. This does at least test the logic that I touched here; I think ultimately what the mocks assume is that `gcsfs.GCSFileSystem` can `read`/`write` strings and everything else is using the real `pandas` methods.",
        "createdAt" : "2018-09-15T20:38:44Z",
        "updatedAt" : "2018-10-11T16:53:28Z",
        "lastEditedBy" : "b166bda0-b3db-486d-a68e-b39350a7613e",
        "tags" : [
        ]
      }
    ],
    "commit" : "b2f97cc528fb549d177cb7b82e7beae01d4478ea",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +31,35 @@    df1 = DataFrame({'int': [1, 3], 'float': [2.0, np.nan], 'str': ['t', 's'],\n                     'dt': date_range('2018-06-18', periods=2)})\n    with mock.patch('gcsfs.GCSFileSystem') as MockFileSystem:\n        s = StringIO()\n        instance = MockFileSystem.return_value"
  },
  {
    "id" : "d481571f-7220-443d-a257-e2471b436ca0",
    "prId" : 22704,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22704#pullrequestreview-163915235",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "11ec61a7-25b5-44be-b895-8c8559f6cc60",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Any particular reason you are explicitly stating `index=True` here instead of using the default?",
        "createdAt" : "2018-09-19T19:52:56Z",
        "updatedAt" : "2018-10-11T16:53:28Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "1eb5ddd1-18ba-43a8-9079-e99ac6b9f961",
        "parentId" : "11ec61a7-25b5-44be-b895-8c8559f6cc60",
        "authorId" : "b166bda0-b3db-486d-a68e-b39350a7613e",
        "body" : "`df.to_csv(f)` and `pd.read_csv(f)` handle the index differently so I wanted to be extra clear that the index is also being checked in the round tripping",
        "createdAt" : "2018-10-11T16:54:13Z",
        "updatedAt" : "2018-10-11T16:54:13Z",
        "lastEditedBy" : "b166bda0-b3db-486d-a68e-b39350a7613e",
        "tags" : [
        ]
      }
    ],
    "commit" : "b2f97cc528fb549d177cb7b82e7beae01d4478ea",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +36,40 @@        instance.open.return_value = s\n\n        df1.to_csv('gs://test/test.csv', index=True)\n        df2 = read_csv(StringIO(s.getvalue()), parse_dates=['dt'], index_col=0)\n"
  },
  {
    "id" : "ae58b3c5-674e-4d17-b68a-f547611e64e6",
    "prId" : 22704,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22704#pullrequestreview-163915331",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1de52122-8665-4e01-8f63-86d50b0bcd3b",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Related to above comment",
        "createdAt" : "2018-09-19T19:53:50Z",
        "updatedAt" : "2018-10-11T16:53:28Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "7e962381-168f-4c3e-bac3-354d50643dc6",
        "parentId" : "1de52122-8665-4e01-8f63-86d50b0bcd3b",
        "authorId" : "b166bda0-b3db-486d-a68e-b39350a7613e",
        "body" : "See above",
        "createdAt" : "2018-10-11T16:54:26Z",
        "updatedAt" : "2018-10-11T16:54:26Z",
        "lastEditedBy" : "b166bda0-b3db-486d-a68e-b39350a7613e",
        "tags" : [
        ]
      }
    ],
    "commit" : "b2f97cc528fb549d177cb7b82e7beae01d4478ea",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +37,41 @@\n        df1.to_csv('gs://test/test.csv', index=True)\n        df2 = read_csv(StringIO(s.getvalue()), parse_dates=['dt'], index_col=0)\n\n    assert_frame_equal(df1, df2)"
  },
  {
    "id" : "c7af52b5-755a-4702-848c-374a7e32d09b",
    "prId" : 28326,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/28326#pullrequestreview-287081370",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5c29e747-d568-4d85-854c-b4f7ec0ea9f3",
        "parentId" : null,
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Looks reasonable.\r\n\r\nYou'll need to skip if fastparquet isn't installed.",
        "createdAt" : "2019-09-11T20:28:34Z",
        "updatedAt" : "2019-09-19T14:44:50Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "13e269d9-1c87-41c6-a280-55fe46b229b7",
        "parentId" : "5c29e747-d568-4d85-854c-b4f7ec0ea9f3",
        "authorId" : "b166bda0-b3db-486d-a68e-b39350a7613e",
        "body" : "done",
        "createdAt" : "2019-09-11T21:21:44Z",
        "updatedAt" : "2019-09-19T14:44:50Z",
        "lastEditedBy" : "b166bda0-b3db-486d-a68e-b39350a7613e",
        "tags" : [
        ]
      }
    ],
    "commit" : "c0aac64e9e3bbcc22e1a62d5d5e20994555edfc1",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +64,68 @@@td.skip_if_no(\"fastparquet\")\n@td.skip_if_no(\"gcsfs\")\ndef test_to_parquet_gcs_new_file(monkeypatch, tmpdir):\n    \"\"\"Regression test for writing to a not-yet-existent GCS Parquet file.\"\"\"\n    df1 = DataFrame("
  },
  {
    "id" : "5c1901eb-a2ca-4c29-9bb7-dd2448b10b15",
    "prId" : 35681,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/35681#pullrequestreview-476351573",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7dba5306-a67b-4bb7-83ac-85989de2dad7",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "looks fine, does this make it easier / cleaner?",
        "createdAt" : "2020-08-27T02:40:20Z",
        "updatedAt" : "2020-08-31T23:18:44Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "a3330533-3634-41ec-8d0a-66d580377843",
        "parentId" : "7dba5306-a67b-4bb7-83ac-85989de2dad7",
        "authorId" : "42aa2e10-a5f0-418e-8919-5ec1443b7f2b",
        "body" : "@alimcmaster1 commented one some duplication across the GCS tests. I'm not 100% sure how the monkeypatch part works, the CI seems to be happy about it. Double/triple checking that I didn't invalidated these tests would be good.",
        "createdAt" : "2020-08-27T02:58:03Z",
        "updatedAt" : "2020-08-31T23:18:44Z",
        "lastEditedBy" : "42aa2e10-a5f0-418e-8919-5ec1443b7f2b",
        "tags" : [
        ]
      }
    ],
    "commit" : "475e8e8595370085d64a8c5e10a1f020f19f7ec7",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +16,20 @@\n    registry.target.clear()  # noqa  # remove state\n\n    gcs_buffer = BytesIO()\n    gcs_buffer.close = lambda: True"
  }
]