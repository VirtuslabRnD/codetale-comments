[
  {
    "id" : "faa50a81-a154-4c13-94b1-4bbd851c9b47",
    "prId" : 26755,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/26755#pullrequestreview-247416090",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "12d4e848-5c46-42f8-bf99-6d460933d60c",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "same comment as above",
        "createdAt" : "2019-06-09T21:43:52Z",
        "updatedAt" : "2019-06-09T21:45:23Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "d2a5d3a0c27ce707cd6c280615f3de3a2f31ce5c",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +21,25 @@\n\n@td.skip_if_no('xlrd')\n@pytest.mark.parametrize(\"ext\", ['.xls', '.xlsx', '.xlsm'])\nclass TestRoundTrip:"
  },
  {
    "id" : "01cf8c40-b54c-441e-9b48-d449c821db44",
    "prId" : 27006,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/27006#pullrequestreview-255421589",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "017d0686-8a20-49e6-9df6-7f51bd68513c",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Does this fail on master? Tried locally and ran so want to make sure we are testing the right thing",
        "createdAt" : "2019-06-27T18:27:55Z",
        "updatedAt" : "2019-06-28T00:43:53Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "53f9c8d3-c781-416b-82d2-d8aac2e49e42",
        "parentId" : "017d0686-8a20-49e6-9df6-7f51bd68513c",
        "authorId" : "67d89db1-3b69-414b-9ce4-2191d03341da",
        "body" : "I think maybe I am misunderstanding how I am supposed to be testing? If I take the code above from lines 1167-1170 and drop it in a jupyter notebook running in a conda env with pandas 0.24.2 installed, I get the expected `TypeError`.\r\n\r\nDo I also need to put that test code into the master branch on my fork and have it fail there? I only put it on the 'period-excel-fix' branch of my fork where I fixed the bug, which passes pytest when I run.",
        "createdAt" : "2019-06-27T18:45:45Z",
        "updatedAt" : "2019-06-28T00:43:53Z",
        "lastEditedBy" : "67d89db1-3b69-414b-9ce4-2191d03341da",
        "tags" : [
        ]
      },
      {
        "id" : "14b210b8-d410-4c24-8da9-d78ec72de576",
        "parentId" : "017d0686-8a20-49e6-9df6-7f51bd68513c",
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Sorry this does fail on master so all good. But yea typically want to run against master",
        "createdAt" : "2019-06-27T18:56:34Z",
        "updatedAt" : "2019-06-28T00:43:53Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "8cacf208-014a-4fb7-b58c-ad8d5a24cff0",
        "parentId" : "017d0686-8a20-49e6-9df6-7f51bd68513c",
        "authorId" : "67d89db1-3b69-414b-9ce4-2191d03341da",
        "body" : "ok great",
        "createdAt" : "2019-06-27T19:02:28Z",
        "updatedAt" : "2019-06-28T00:43:53Z",
        "lastEditedBy" : "67d89db1-3b69-414b-9ce4-2191d03341da",
        "tags" : [
        ]
      }
    ],
    "commit" : "92936418c2b38aad88d4f9f55c387a4efc45f51d",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +1168,1172 @@                                     (pd.Period('2018'), pd.Period('2018Q2'))])\n        expected = DataFrame(np.ones((2, 2)), columns=mi)\n        expected.to_excel(self.path)\n        result = pd.read_excel(self.path, header=[0, 1],\n                               index_col=0, convert_float=False)"
  },
  {
    "id" : "b4da5cbb-c68b-40a9-b69f-82aa23d46bab",
    "prId" : 27006,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/27006#pullrequestreview-255537371",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3cab94fe-1767-452f-b198-ab095586cdff",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Can just simplify this as `expected.columns = expected.columns.astype(object)` - Period won't be lossless to / from Excel so makes sense",
        "createdAt" : "2019-06-27T19:06:56Z",
        "updatedAt" : "2019-06-28T00:43:53Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "36544948-9a1f-415f-a794-a2f603a66e0c",
        "parentId" : "3cab94fe-1767-452f-b198-ab095586cdff",
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Simplify this as stated",
        "createdAt" : "2019-06-27T23:21:29Z",
        "updatedAt" : "2019-06-28T00:43:53Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "c77147c2-5c85-4b66-b722-d079e526cd9f",
        "parentId" : "3cab94fe-1767-452f-b198-ab095586cdff",
        "authorId" : "67d89db1-3b69-414b-9ce4-2191d03341da",
        "body" : "This simplication doesn't seem to work. Comparison fails - the Index read back in isn't preserved as a Period.\r\n```\r\nE  MultiIndex level [0] classes are not equivalent\r\nE  [left]:  PeriodIndex(['2018', '2018'], dtype='period[A-DEC]', freq='A-DEC')\r\nE  [right]: Index(['2018', '2018'], dtype='object')\r\n```",
        "createdAt" : "2019-06-28T00:17:17Z",
        "updatedAt" : "2019-06-28T00:43:53Z",
        "lastEditedBy" : "67d89db1-3b69-414b-9ce4-2191d03341da",
        "tags" : [
        ]
      }
    ],
    "commit" : "92936418c2b38aad88d4f9f55c387a4efc45f51d",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +1172,1176 @@                               index_col=0, convert_float=False)\n        # need to convert PeriodIndexes to standard Indexes for assert equal\n        expected.columns.set_levels([[str(i) for i in mi.levels[0]],\n                                     [str(i) for i in mi.levels[1]]],\n                                    level=[0, 1],"
  },
  {
    "id" : "f17e60cf-83ed-4aeb-9809-c7799c98dd69",
    "prId" : 27006,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/27006#pullrequestreview-255536546",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3bf51882-a50f-4c0e-a508-7c8e2def162e",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Once you add the `merge_cells` fixture do `merge_cells=merge_cells` as part of the call here",
        "createdAt" : "2019-06-27T23:21:18Z",
        "updatedAt" : "2019-06-28T00:43:53Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "ebffbe5c-c52c-4376-ab6d-dcf3fd7c3b3d",
        "parentId" : "3bf51882-a50f-4c0e-a508-7c8e2def162e",
        "authorId" : "67d89db1-3b69-414b-9ce4-2191d03341da",
        "body" : "So if I do this, won't this always fail the assert comparison? When this is False, it creates a single cell that contains both levels in the excel file (for instance '2018.2018Q2'). When I read this back in, it's read in as a single column Index and fails comparing against the original MultiIndex.",
        "createdAt" : "2019-06-28T00:13:05Z",
        "updatedAt" : "2019-06-28T00:43:53Z",
        "lastEditedBy" : "67d89db1-3b69-414b-9ce4-2191d03341da",
        "tags" : [
        ]
      }
    ],
    "commit" : "92936418c2b38aad88d4f9f55c387a4efc45f51d",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +1168,1172 @@                                     (pd.Period('2018'), pd.Period('2018Q2'))])\n        expected = DataFrame(np.ones((2, 2)), columns=mi)\n        expected.to_excel(self.path)\n        result = pd.read_excel(self.path, header=[0, 1],\n                               index_col=0, convert_float=False)"
  },
  {
    "id" : "e457d740-57b6-4a03-aa0c-704fb38a6b1f",
    "prId" : 27114,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/27114#pullrequestreview-256039888",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6796df5c-8b35-4042-992c-9a8ac81d35ad",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "The writer tests still assume xlrd to be there. Will fix up in a follow up to address proper parametrization here (have focused more on readers given recent PRs)\r\n\r\n@simonjayhawkins ",
        "createdAt" : "2019-06-29T14:54:19Z",
        "updatedAt" : "2019-06-29T15:03:00Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      }
    ],
    "commit" : "cb52c3a513828850316e3625cd85a108dd0d44d5",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +251,255 @@\n\n@td.skip_if_no('xlrd')\n@pytest.mark.parametrize(\"engine,ext\", [\n    pytest.param('openpyxl', '.xlsx', marks=pytest.mark.skipif("
  },
  {
    "id" : "129422f7-6278-46c7-847c-ce94e972ee43",
    "prId" : 27139,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/27139#pullrequestreview-256074148",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "72d1ac1d-064a-4ada-a950-d9f13796daa2",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Doesn't need to be done here but we can probably get rid of this class altogether since it only contains the fixture. I also think it is better to use partials instead of setting global settings (we do this on the reading side) so something to look at in the future if you are interested in closing #27096",
        "createdAt" : "2019-06-30T13:11:23Z",
        "updatedAt" : "2019-06-30T13:11:31Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      }
    ],
    "commit" : "0a3251961527a3380243af0e3978e28757934e63",
    "line" : 1,
    "diffHunk" : "@@ -1,1 +222,226 @@\n\nclass _WriterBase:\n\n    @pytest.fixture(autouse=True)"
  }
]