[
  {
    "id" : "bb0e535b-00ab-41a5-8aef-ca65fbc3adab",
    "prId" : 16301,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/16301#pullrequestreview-38260857",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "045df76b-4bff-4eb1-bf37-e1386760a96f",
        "parentId" : null,
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "@jreback I had to modify this test to hit the block [here](https://github.com/pandas-dev/pandas/pull/16301/files#diff-1b15d1477da3a0548d2dd72a5d023d00R321). I'm pretty sure you were just using `store` as an example of a buffer that isn't an HDFStore or filepath. But with these changes it'll be coerced to a path.",
        "createdAt" : "2017-05-15T20:58:15Z",
        "updatedAt" : "2017-05-18T11:22:56Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "ff3c3d5b-922e-4a1e-9f39-4791e3fedf7b",
        "parentId" : "045df76b-4bff-4eb1-bf37-e1386760a96f",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "sure",
        "createdAt" : "2017-05-15T23:37:00Z",
        "updatedAt" : "2017-05-18T11:22:56Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "ac37895a35fff8dd73af83900c8c50d045b65e60",
    "line" : 62,
    "diffHunk" : "@@ -1,1 +5010,5014 @@\n    def test_read_hdf_generic_buffer_errors(self):\n        pytest.raises(NotImplementedError, read_hdf, BytesIO(b''), 'df')\n\n    def test_invalid_complib(self):"
  },
  {
    "id" : "a3fea51a-11f4-4512-b44f-3230f69272f0",
    "prId" : 16317,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/16317#pullrequestreview-41099477",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "286086ab-5681-487c-83f5-40aeb93d8270",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you add the issue number as a comment",
        "createdAt" : "2017-05-10T11:11:42Z",
        "updatedAt" : "2017-05-31T02:29:36Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "223bcbfd-709c-4da1-a8eb-43b61e753734",
        "parentId" : "286086ab-5681-487c-83f5-40aeb93d8270",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you add the issue number",
        "createdAt" : "2017-05-30T23:13:53Z",
        "updatedAt" : "2017-05-31T02:29:36Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "6d6764f247bf83de047dde96057f2627ea4f6868",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +4188,4192 @@\n    def test_start_stop_multiple(self):\n\n        # GH 16209\n        with ensure_clean_store(self.path) as store:"
  },
  {
    "id" : "431e2aa1-2575-4e96-88b0-7cc4dda37a3d",
    "prId" : 16355,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/16355#pullrequestreview-42564623",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "816e5045-1719-4be0-8d5d-49cb17e5ddee",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "this doesn't make sense. you are specifying a complib, yet no compression? again this is confusing.",
        "createdAt" : "2017-06-06T10:37:28Z",
        "updatedAt" : "2017-06-13T11:33:21Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "48870539-37fc-48ef-9a62-e09010009aa9",
        "parentId" : "816e5045-1719-4be0-8d5d-49cb17e5ddee",
        "authorId" : "25e457cb-5edf-429c-8ff7-c50718133fd5",
        "body" : "I added the 3 cases where at least one of the parameters complib and complevel is missing. Setting complib and leaving complevel unset is one of those. I think these are good tests to see if the defaults behave as we discussed. \r\n\r\nI did not add tests to see what would happen if i set the parameters to illegal values, fx what happens if complevel is negative? \r\n\r\nI also added the testcase where i override the file-wide defaults.",
        "createdAt" : "2017-06-07T09:16:59Z",
        "updatedAt" : "2017-06-13T11:33:21Z",
        "lastEditedBy" : "25e457cb-5edf-429c-8ff7-c50718133fd5",
        "tags" : [
        ]
      },
      {
        "id" : "b3d12eba-424a-48b7-b8a0-f2b4b4baf22a",
        "parentId" : "816e5045-1719-4be0-8d5d-49cb17e5ddee",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "add some tests for illegal values, though PyTables should actually validate these",
        "createdAt" : "2017-06-07T10:38:33Z",
        "updatedAt" : "2017-06-13T11:33:21Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "af7ecbfa37525d646e04a2d7557feddd97c5a0b3",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +754,758 @@\n        # Set complib and check to see if compression is disabled\n        with ensure_clean_path(self.path) as tmpfile:\n            df.to_hdf(tmpfile, 'df', complib='zlib')\n            result = pd.read_hdf(tmpfile, 'df')"
  },
  {
    "id" : "e8c47c15-39c3-46ed-8769-6cd6d1d2accc",
    "prId" : 16790,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/16790#pullrequestreview-47155821",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f310321b-e28d-483c-824b-da983201c47e",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can u add a comment about the version of pandas that this file was generated ",
        "createdAt" : "2017-06-29T11:31:10Z",
        "updatedAt" : "2017-06-30T20:05:43Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "50744001-3437-45ba-8df6-7dfc4b7a7235",
        "parentId" : "f310321b-e28d-483c-824b-da983201c47e",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "even better if u can name this file similar to how we name the files in legacy_pickle dirs",
        "createdAt" : "2017-06-29T11:31:51Z",
        "updatedAt" : "2017-06-30T20:05:43Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "4934fcfb-795e-4534-a277-a68fa55a8e23",
        "parentId" : "f310321b-e28d-483c-824b-da983201c47e",
        "authorId" : "94a37171-1f59-436c-954d-3d50cf255259",
        "body" : "done",
        "createdAt" : "2017-06-29T15:08:55Z",
        "updatedAt" : "2017-06-30T20:05:43Z",
        "lastEditedBy" : "94a37171-1f59-436c-954d-3d50cf255259",
        "tags" : [
        ]
      }
    ],
    "commit" : "6efc2432c062962c0b7c7b9026dd34f42a2ada5f",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +5268,5272 @@        # GH 16781\n\n        # tests reading a PeriodIndex DataFrame written in Python2 in Python3\n\n        # the file was generated in Python 2.7 like so:"
  },
  {
    "id" : "70b0dcc9-f25c-4d12-ad44-70c4f51c440b",
    "prId" : 18652,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/18652#pullrequestreview-82113610",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ab94674b-efd0-4686-9f35-8d43a35c7c94",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you add another column with an array like ``pd.Series([None]* 3, dtype=object)``. this might fail your test because the original array was an all-null object type (and no float). but let's see.",
        "createdAt" : "2017-12-07T11:32:47Z",
        "updatedAt" : "2017-12-10T15:54:40Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "fa4aa88c-bef3-494d-80c6-61840f21655a",
        "parentId" : "ab94674b-efd0-4686-9f35-8d43a35c7c94",
        "authorId" : "8963a7c2-5781-495d-a7e0-e051883f4fe7",
        "body" : "done, seems to work fine.",
        "createdAt" : "2017-12-08T10:12:30Z",
        "updatedAt" : "2017-12-10T15:54:40Z",
        "lastEditedBy" : "8963a7c2-5781-495d-a7e0-e051883f4fe7",
        "tags" : [
        ]
      }
    ],
    "commit" : "b2ac7c4d534975eeac49be0ddbfa7e8a3eb89602",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +4935,4939 @@        df = pd.DataFrame({\n            'a': ['a', 'b', 'c', np.nan],\n            'b': [np.nan, np.nan, np.nan, np.nan],\n            'c': [1, 2, 3, 4],\n            'd': pd.Series([None] * 4, dtype=object)"
  },
  {
    "id" : "8b9e6851-3a1d-42b2-9481-71acfc3a7a1b",
    "prId" : 23592,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23592#pullrequestreview-173525751",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "88b34521-4de9-4397-bb7e-48679aa9f19a",
        "parentId" : null,
        "authorId" : "b0c8ea7f-389d-4305-8e0a-a1a394b9fcc2",
        "body" : "I don't understand why a `pytest.skip`. Shouldn't this be a `pytest.raises(TypeError, match=\"[unicode] is not implemented as a table column\")`?",
        "createdAt" : "2018-11-09T10:39:59Z",
        "updatedAt" : "2018-11-10T18:23:37Z",
        "lastEditedBy" : "b0c8ea7f-389d-4305-8e0a-a1a394b9fcc2",
        "tags" : [
        ]
      },
      {
        "id" : "2c2b121e-7999-42b3-992b-2573051fa7b3",
        "parentId" : "88b34521-4de9-4397-bb7e-48679aa9f19a",
        "authorId" : "51189123-86a2-400a-9762-6816882b6f12",
        "body" : "The original code and what you just suggested are both NOP's.  This is essentially a skip.",
        "createdAt" : "2018-11-09T18:04:11Z",
        "updatedAt" : "2018-11-10T18:23:37Z",
        "lastEditedBy" : "51189123-86a2-400a-9762-6816882b6f12",
        "tags" : [
        ]
      }
    ],
    "commit" : "2b7fb246cd51e4df917c579ebb41b25fc723f83e",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +1085,1089 @@\n        if compat.PY2:\n            pytest.skip(\"[unicode] is not implemented as a table column\")\n\n        values = [[b'E\\xc9, 17', b'', b'a', b'b', b'c'],"
  },
  {
    "id" : "6b8eb578-a3ab-4e58-8f09-5f70091ab77e",
    "prId" : 24510,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/24510#pullrequestreview-188534884",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f2563c88-b84b-42fd-a68f-d087dccd2f7c",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "add the issue number here as a comments",
        "createdAt" : "2018-12-31T17:58:56Z",
        "updatedAt" : "2018-12-31T23:30:08Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "01561472-59bd-4b0c-893d-e9afc28f469b",
        "parentId" : "f2563c88-b84b-42fd-a68f-d087dccd2f7c",
        "authorId" : "0e77b50c-b97e-4fcb-82f6-24674acb7de9",
        "body" : "Added",
        "createdAt" : "2018-12-31T20:47:54Z",
        "updatedAt" : "2018-12-31T23:30:08Z",
        "lastEditedBy" : "0e77b50c-b97e-4fcb-82f6-24674acb7de9",
        "tags" : [
        ]
      }
    ],
    "commit" : "173265ccf9bf2c80a3ff2b2e864c742eb04a8a88",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +4543,4547 @@    def test_legacy_table_fixed_format_read_py2(self, datapath):\n        # GH 24510\n        # legacy table with fixed format written en Python 2\n        with ensure_clean_store(\n                datapath('io', 'data', 'legacy_hdf',"
  }
]