[
  {
    "id" : "f1a740f8-666b-4b8f-a5e6-677123c54167",
    "prId" : 24837,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/24837#pullrequestreview-194406423",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dc54d72c-b152-44ac-ab11-ee84ee045f92",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "maybe use psutil to track memory?",
        "createdAt" : "2019-01-19T16:20:52Z",
        "updatedAt" : "2019-01-20T00:05:24Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "432bf214-039b-4752-a5cc-bf9b483ae62a",
        "parentId" : "dc54d72c-b152-44ac-ab11-ee84ee045f92",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "u can do asvs for memory now\r\n\r\ngrep for mem_",
        "createdAt" : "2019-01-19T16:26:39Z",
        "updatedAt" : "2019-01-20T00:05:24Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "2ff23e40-0a65-46c9-b894-913e8453a81a",
        "parentId" : "dc54d72c-b152-44ac-ab11-ee84ee045f92",
        "authorId" : "51189123-86a2-400a-9762-6816882b6f12",
        "body" : "Cool.  Let me add that test quickly then.",
        "createdAt" : "2019-01-19T23:35:06Z",
        "updatedAt" : "2019-01-20T00:05:24Z",
        "lastEditedBy" : "51189123-86a2-400a-9762-6816882b6f12",
        "tags" : [
        ]
      },
      {
        "id" : "d8b24471-e478-4e47-8db9-742aa95504c6",
        "parentId" : "dc54d72c-b152-44ac-ab11-ee84ee045f92",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "having an asv is nice, but shouldn't be a substitute for a test, should it?",
        "createdAt" : "2019-01-20T18:22:19Z",
        "updatedAt" : "2019-01-20T18:22:19Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "a011ca5e-3f06-47c5-9b0d-19cf0661b6a6",
        "parentId" : "dc54d72c-b152-44ac-ab11-ee84ee045f92",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "looks like a test to me",
        "createdAt" : "2019-01-20T18:27:41Z",
        "updatedAt" : "2019-01-20T18:27:41Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "58f36917-173d-4e5c-a964-b28539ae50c3",
        "parentId" : "dc54d72c-b152-44ac-ab11-ee84ee045f92",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "its a test that doesn't assert anything, and where the failure mode is crashing.  how much RAM does a machine need before the test will incorrectly pass?",
        "createdAt" : "2019-01-20T18:31:04Z",
        "updatedAt" : "2019-01-20T18:31:04Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "f98bba5f-513c-466e-a336-bd719e606a29",
        "parentId" : "dc54d72c-b152-44ac-ab11-ee84ee045f92",
        "authorId" : "51189123-86a2-400a-9762-6816882b6f12",
        "body" : "@jbrockmendel : I have 16 GB of RAM on my machine, and this test failed before the patch.\r\n\r\nAs described in the issue, the problem is that the memory allocation grows exponentially.",
        "createdAt" : "2019-01-20T18:39:23Z",
        "updatedAt" : "2019-01-20T18:39:58Z",
        "lastEditedBy" : "51189123-86a2-400a-9762-6816882b6f12",
        "tags" : [
        ]
      },
      {
        "id" : "b3e26039-2edb-4498-9895-2b5c1c7f3c80",
        "parentId" : "dc54d72c-b152-44ac-ab11-ee84ee045f92",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "on a 128gb machine I'm getting failures in 2/3 cases pre-patch.  is that expected, or should it be 3/3?\r\n\r\nIt's not that I doubt the correctness of the patch, just that I'm really uncomfortable with the failure mode of the test.",
        "createdAt" : "2019-01-20T18:47:34Z",
        "updatedAt" : "2019-01-20T18:47:34Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "21404755-0143-4d9e-9309-b01727226f16",
        "parentId" : "dc54d72c-b152-44ac-ab11-ee84ee045f92",
        "authorId" : "51189123-86a2-400a-9762-6816882b6f12",
        "body" : "@jbrockmendel : 2/3 failures pre-patch is what you should get.\r\n\r\n> just that I'm really uncomfortable with the failure mode of the test.\r\n\r\nI understand your concern, though such a failure mode is not uncommon for our CSV tests, especially if it's impacting low-level C engine code.\r\n\r\nIf you feel like you want to add something to do this, by all means.",
        "createdAt" : "2019-01-20T19:51:27Z",
        "updatedAt" : "2019-01-20T19:51:41Z",
        "lastEditedBy" : "51189123-86a2-400a-9762-6816882b6f12",
        "tags" : [
        ]
      }
    ],
    "commit" : "0c366a8453827c9e46482dd2b4dddd738981d70b",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +1921,1925 @@    #\n    # Let's just make sure that we don't crash\n    # as we iteratively process all chunks.\n    parser = all_parsers\n"
  },
  {
    "id" : "a20ab887-c13c-4094-b1de-6e46e462dc98",
    "prId" : 26634,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/26634#pullrequestreview-245965041",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "56ce9c99-1341-4c06-a9dd-1de2fb8096f9",
        "parentId" : null,
        "authorId" : "51189123-86a2-400a-9762-6816882b6f12",
        "body" : "This test is fine to add.  `tm.assert_frame_equal` does the trick.",
        "createdAt" : "2019-06-04T23:31:08Z",
        "updatedAt" : "2019-06-11T07:36:12Z",
        "lastEditedBy" : "51189123-86a2-400a-9762-6816882b6f12",
        "tags" : [
        ]
      },
      {
        "id" : "af8bee4d-9013-4fd2-8ff6-1b28262b4bff",
        "parentId" : "56ce9c99-1341-4c06-a9dd-1de2fb8096f9",
        "authorId" : "a921e8ee-d6d2-43b6-8bc3-eb6392d3015b",
        "body" : "> @LuckyDenis could you also check what `test_utf8_bom` is doing in the test module? It looks to cover the same intention as test added so want to make sure we understand the difference and clarify accordingly\r\n\r\n@WillAyd, I looked at the difference between the tests. In the `test_utf8_bom`, the dataset only checks that it clears the first header from the bom and does not reveal the bug I fixed. My test checks just processing headers and that you grow them correctly.\r\n",
        "createdAt" : "2019-06-05T08:36:39Z",
        "updatedAt" : "2019-06-11T07:36:12Z",
        "lastEditedBy" : "a921e8ee-d6d2-43b6-8bc3-eb6392d3015b",
        "tags" : [
        ]
      },
      {
        "id" : "b9fc3a75-b8be-46fa-b27e-92be67eca91c",
        "parentId" : "56ce9c99-1341-4c06-a9dd-1de2fb8096f9",
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Awesome thanks for verifying that!",
        "createdAt" : "2019-06-05T12:12:08Z",
        "updatedAt" : "2019-06-11T07:36:12Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      }
    ],
    "commit" : "fb010d535a74466ad5532ae13c692f72ebf36152",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +1937,1941 @@    result = parser.read_csv(StringIO(data), delimiter='\\t')\n    expected = DataFrame(columns=[\"Head1\", \"Head2\", \"Head3\"])\n    tm.assert_frame_equal(result, expected)"
  }
]