[
  {
    "id" : "c2c18c34-30b8-49c2-9e01-3fdc4ea16e17",
    "prId" : 23832,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23832#pullrequestreview-177374083",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8f8470e2-43d2-4dea-91e9-fc3e8f5acd40",
        "parentId" : null,
        "authorId" : "51189123-86a2-400a-9762-6816882b6f12",
        "body" : "So this is an inconsistency in how we process columns that are aggregated to create one date column and are not dropped because `keep_date_col=True`.\r\n\r\nThe C engine does not continue to parse them and infer dtype, whereas the Python does parse and infer dtypes on these columns as if they were regular (standalone) data columns, even though they were used to really construct a single data column.\r\n\r\nWhich engine do you guys think is more correct?",
        "createdAt" : "2018-11-21T07:38:48Z",
        "updatedAt" : "2018-11-21T17:59:25Z",
        "lastEditedBy" : "51189123-86a2-400a-9762-6816882b6f12",
        "tags" : [
        ]
      },
      {
        "id" : "c5c0d4d7-4a26-4529-8877-72d866e4eabe",
        "parentId" : "8f8470e2-43d2-4dea-91e9-fc3e8f5acd40",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you open an issue here for followup",
        "createdAt" : "2018-11-21T12:32:16Z",
        "updatedAt" : "2018-11-21T17:59:25Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "93b8c6eb-86ab-4ab5-98ab-bab6e8cf77a7",
        "parentId" : "8f8470e2-43d2-4dea-91e9-fc3e8f5acd40",
        "authorId" : "51189123-86a2-400a-9762-6816882b6f12",
        "body" : "Opened #23845",
        "createdAt" : "2018-11-21T18:18:13Z",
        "updatedAt" : "2018-11-21T18:18:13Z",
        "lastEditedBy" : "51189123-86a2-400a-9762-6816882b6f12",
        "tags" : [
        ]
      }
    ],
    "commit" : "218037929f3dcb72d3573591b961506a5c4a0ed3",
    "line" : 100,
    "diffHunk" : "@@ -1,1 +98,102 @@        expected = expected.drop([\"X1\", \"X2\", \"X3\"], axis=1)\n    elif parser.engine == \"python\":\n        expected[\"X1\"] = expected[\"X1\"].astype(np.int64)\n\n    # Python can sometimes be flaky about how"
  }
]