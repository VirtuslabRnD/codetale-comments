[
  {
    "id" : "5afd6b6c-6f8f-47ed-a70f-fd9ecd844631",
    "prId" : 23712,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/23712#pullrequestreview-175482116",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d2228dd9-59a5-433e-acd6-9ed6794df415",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "wouldn't these usually go in a base.py or something?  I guess if you need them for the fixtures you could import them from there?",
        "createdAt" : "2018-11-15T16:43:27Z",
        "updatedAt" : "2018-11-15T16:43:28Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "a00b744a-4720-4c20-afff-90be489cc672",
        "parentId" : "d2228dd9-59a5-433e-acd6-9ed6794df415",
        "authorId" : "51189123-86a2-400a-9762-6816882b6f12",
        "body" : "`base.py` semantically has generally been used for importing into other test classes.  I'm not sure I see the need to separate out all of configuration so to speak.\r\n\r\nThe fixtures in `conftest.py` will expose them appropriately once all test classes have been converted as `c_parser_only` has.",
        "createdAt" : "2018-11-15T17:59:56Z",
        "updatedAt" : "2018-11-15T18:00:16Z",
        "lastEditedBy" : "51189123-86a2-400a-9762-6816882b6f12",
        "tags" : [
        ]
      }
    ],
    "commit" : "d916288ded11b71312dd7253839ab1d3e61e6ff0",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +5,9 @@\n\nclass BaseParser(object):\n    engine = None\n    low_memory = True"
  },
  {
    "id" : "8b0f8aed-91cc-4bb9-a516-dd0e02b820a0",
    "prId" : 28973,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/28973#pullrequestreview-301409912",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8ae82bcf-c0d3-4405-836d-5de056bdc1f8",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Can you post the error this was causing? The addition seems easer to read so curious why we would need to unpack like this",
        "createdAt" : "2019-10-14T15:15:39Z",
        "updatedAt" : "2019-10-14T16:36:57Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "93d55c01-cbfa-496d-9f69-0282d4866550",
        "parentId" : "8ae82bcf-c0d3-4405-836d-5de056bdc1f8",
        "authorId" : "fe78c866-cad1-4466-ab0e-989fa2e24463",
        "body" : "As per the original issue, the error this gave was \r\n`pandas\\tests\\io\\parser\\conftest.py:62: error: Unsupported operand types for + (\"List[CParser]\" and \"List[PythonParser]\")`\r\nI was confused if I should just type it as `List[BaseParser]` or the unpacking method. Unpacking is generally the prefered way according to [PEP](https://www.python.org/dev/peps/pep-0448/), but less readable as you rightly pointed out. Thinking back, I think the former is a better solution. Your thoughts?",
        "createdAt" : "2019-10-14T15:57:13Z",
        "updatedAt" : "2019-10-14T16:36:57Z",
        "lastEditedBy" : "fe78c866-cad1-4466-ab0e-989fa2e24463",
        "tags" : [
        ]
      },
      {
        "id" : "cec7b0f5-1076-4ce0-97fa-05f1c0481036",
        "parentId" : "8ae82bcf-c0d3-4405-836d-5de056bdc1f8",
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Ah makes sense thanks for clarifying and linking PEP. I think this is OK but cc @simonjayhawkins who may have run into this before",
        "createdAt" : "2019-10-14T16:03:29Z",
        "updatedAt" : "2019-10-14T16:36:57Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "edb80c1c-ba70-4b52-88f6-4577dcaafd79",
        "parentId" : "8ae82bcf-c0d3-4405-836d-5de056bdc1f8",
        "authorId" : "fe78c866-cad1-4466-ab0e-989fa2e24463",
        "body" : "Sure, @simonjayhawkins thoughts on this?\r\n\r\n> As per the original issue, the error this gave was\r\n> `pandas\\tests\\io\\parser\\conftest.py:62: error: Unsupported operand types for + (\"List[CParser]\" and \"List[PythonParser]\")`\r\n> I was confused if I should just type it as `List[BaseParser]` or the unpacking method. Unpacking is generally the preferred way according to [PEP](https://www.python.org/dev/peps/pep-0448/), but less readable as you rightly pointed out. Thinking back, I think the former is a better solution. Your thoughts?",
        "createdAt" : "2019-10-14T16:20:05Z",
        "updatedAt" : "2019-10-14T16:36:57Z",
        "lastEditedBy" : "fe78c866-cad1-4466-ab0e-989fa2e24463",
        "tags" : [
        ]
      }
    ],
    "commit" : "bbb1fc6ae9c1f1d2ae3d038a2377f0fb998644e8",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +61,65 @@_py_parsers_only = [_pythonParser]\n_c_parsers_only = [_cParserHighMemory, _cParserLowMemory]\n_all_parsers = [*_c_parsers_only, *_py_parsers_only]\n\n_py_parser_ids = [\"python\"]"
  }
]