[
  {
    "id" : "2aeaccca-aaf5-4650-ae8c-e633ffa325e3",
    "prId" : 17095,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/17095#pullrequestreview-53158426",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "90facbd1-feca-4492-8d1a-2eee684beb7b",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "maybe we should just raise for cases like these. this is clearly a user error in specification of the names.",
        "createdAt" : "2017-07-27T11:30:03Z",
        "updatedAt" : "2017-07-27T15:29:21Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "097f4897-6131-460d-827b-45b72b520eca",
        "parentId" : "90facbd1-feca-4492-8d1a-2eee684beb7b",
        "authorId" : "51189123-86a2-400a-9762-6816882b6f12",
        "body" : "The thought has crossed my mind.  I don't see why not.  However, it should probably go through a deprecation cycle (this behavior is dedup-ing `names` is pretty baked into the code).",
        "createdAt" : "2017-07-27T14:59:42Z",
        "updatedAt" : "2017-07-27T15:29:21Z",
        "lastEditedBy" : "51189123-86a2-400a-9762-6816882b6f12",
        "tags" : [
        ]
      },
      {
        "id" : "b8957d00-e18d-4a83-8fcf-9b4713ee082f",
        "parentId" : "90facbd1-feca-4492-8d1a-2eee684beb7b",
        "authorId" : "51189123-86a2-400a-9762-6816882b6f12",
        "body" : "I can do that as a follow-up if that works.",
        "createdAt" : "2017-07-27T14:59:54Z",
        "updatedAt" : "2017-07-27T15:29:21Z",
        "lastEditedBy" : "51189123-86a2-400a-9762-6816882b6f12",
        "tags" : [
        ]
      },
      {
        "id" : "3c771431-622f-4e3b-8784-f8d83e396e01",
        "parentId" : "90facbd1-feca-4492-8d1a-2eee684beb7b",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "I think is an ambiguous / unsupported case. I would just raise rather than try to get fancy.",
        "createdAt" : "2017-07-29T16:47:26Z",
        "updatedAt" : "2017-07-29T16:47:27Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "4340eba8-3f77-481e-b28a-6954b5ee7e24",
        "parentId" : "90facbd1-feca-4492-8d1a-2eee684beb7b",
        "authorId" : "51189123-86a2-400a-9762-6816882b6f12",
        "body" : "I didn't really change to much to make this change.  I still would want to deprecate this behavior (in general) instead of raising immediately on a special case because `_maybe_dedup_names`  after all is about dedup-ing names.",
        "createdAt" : "2017-07-29T18:40:20Z",
        "updatedAt" : "2017-07-29T23:52:23Z",
        "lastEditedBy" : "51189123-86a2-400a-9762-6816882b6f12",
        "tags" : [
        ]
      },
      {
        "id" : "4897780e-34f4-459d-af3f-502b4f371dc2",
        "parentId" : "90facbd1-feca-4492-8d1a-2eee684beb7b",
        "authorId" : "51189123-86a2-400a-9762-6816882b6f12",
        "body" : "On further investigation, `_maybe_dedup_names` is used beyond just deduping the `names` parameter.  Thus, I would feel better looking into this further for a separate PR if necessary.",
        "createdAt" : "2017-07-31T08:48:52Z",
        "updatedAt" : "2017-07-31T08:48:52Z",
        "lastEditedBy" : "51189123-86a2-400a-9762-6816882b6f12",
        "tags" : [
        ]
      }
    ],
    "commit" : "0aa97a71d78f128aea80cfc21aabb58aa8a9873e",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +56,60 @@        assert list(df.columns) == [\"a\", \"a.1\", \"a.1.1\", \"a.1.1.1\",\n                                    \"a.1.1.1.1\", \"a.1.1.1.1.1\"]\n\n        data = \"a,b,c,d,e,f,g\\n1,2,3,4,5,6,7\"\n        names = [\"a\", \"a\", \"a.3\", \"a.1\", \"a.2\", \"a\", \"a\"]"
  },
  {
    "id" : "366c0ca0-b2fe-45d0-998a-9b6c8a7d6915",
    "prId" : 17095,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/17095#pullrequestreview-53370855",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "faba2585-80a4-435b-bd1e-a386334a8a8a",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "There is also another behaviour that *might* be sensible: a expected result of `\"a.1\", \"a.1.1.1\", \"a.1.1\"]` (so taking into account all names and not only the ones that already were processed). This ends up with only one column being different than specified, while in the test two columns did change. \r\nNot sure this is necessarily better, just pointing out the possibility. But less changed names sounds like a nice argument. \r\n\r\nI would also add a test with a different order to be specific about this, for example for `names=['a', 'a.1', 'a']`",
        "createdAt" : "2017-07-31T19:23:45Z",
        "updatedAt" : "2017-07-31T19:23:45Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "a79645db-b27d-418d-90fd-44604148c63d",
        "parentId" : "faba2585-80a4-435b-bd1e-a386334a8a8a",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Anyhow, I agree with @jreback that we should actually just raise an error here (possibly after a deprecation cycle), and then this is not really important.\r\n\r\nSo if we decide to do that, I would not bother discussing / changing this.",
        "createdAt" : "2017-07-31T19:24:14Z",
        "updatedAt" : "2017-07-31T19:24:14Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "1508b143-ad61-40d2-8530-d79d2917db95",
        "parentId" : "faba2585-80a4-435b-bd1e-a386334a8a8a",
        "authorId" : "51189123-86a2-400a-9762-6816882b6f12",
        "body" : "I would aim for a deprecation cycle.  `_maybe_dedup_names` has been well-ingrained for sometime.  In addition, the function is actually used to dedup column names when the data portion of the CSV is empty.  Thus, I would like to give some more thought on how best to deprecate deduping `names` without issuing a warning (or raising) in the empty case.",
        "createdAt" : "2017-07-31T19:26:13Z",
        "updatedAt" : "2017-07-31T19:27:05Z",
        "lastEditedBy" : "51189123-86a2-400a-9762-6816882b6f12",
        "tags" : [
        ]
      },
      {
        "id" : "a47fecf8-e541-43a1-9965-548c4c073bdc",
        "parentId" : "faba2585-80a4-435b-bd1e-a386334a8a8a",
        "authorId" : "51189123-86a2-400a-9762-6816882b6f12",
        "body" : "> I would also add a test with a different order to be specific about this.\r\n\r\nI already have a test for that lower in the file.",
        "createdAt" : "2017-07-31T19:26:29Z",
        "updatedAt" : "2017-07-31T19:26:29Z",
        "lastEditedBy" : "51189123-86a2-400a-9762-6816882b6f12",
        "tags" : [
        ]
      },
      {
        "id" : "f8b05181-595f-492d-8fcf-7c7b956e58d3",
        "parentId" : "faba2585-80a4-435b-bd1e-a386334a8a8a",
        "authorId" : "51189123-86a2-400a-9762-6816882b6f12",
        "body" : "@jreback : Your thoughts?  I think we're agreement that this behavior should be disallowed, but given some of the complications I've mentioned <a href=\"https://github.com/pandas-dev/pandas/pull/17095#discussion_r130438546\">here</a>, I would prefer to refrain from disallowing or deprecating until a subsequent PR.",
        "createdAt" : "2017-07-31T23:40:12Z",
        "updatedAt" : "2017-07-31T23:40:13Z",
        "lastEditedBy" : "51189123-86a2-400a-9762-6816882b6f12",
        "tags" : [
        ]
      },
      {
        "id" : "3a1246b9-0175-4632-ba52-877b4363af3a",
        "parentId" : "faba2585-80a4-435b-bd1e-a386334a8a8a",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "i think the issue is that if we have an ``ambiguous`` dedupe like above then I would just raise. This doesn't work now, right?",
        "createdAt" : "2017-07-31T23:41:49Z",
        "updatedAt" : "2017-07-31T23:41:49Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "1781c4aa-b8cc-4726-9b62-f6cc931417e5",
        "parentId" : "faba2585-80a4-435b-bd1e-a386334a8a8a",
        "authorId" : "51189123-86a2-400a-9762-6816882b6f12",
        "body" : "It doesn't work correctly on `master`, yes.  However, I'm following along with what I did in #17060, so in fact, what you're seeing is consistent with my decision in that PR.",
        "createdAt" : "2017-07-31T23:45:16Z",
        "updatedAt" : "2017-07-31T23:45:17Z",
        "lastEditedBy" : "51189123-86a2-400a-9762-6816882b6f12",
        "tags" : [
        ]
      }
    ],
    "commit" : "0aa97a71d78f128aea80cfc21aabb58aa8a9873e",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +48,52 @@        df = self.read_csv(StringIO(data), sep=\",\", names=names,\n                           mangle_dupe_cols=True)\n        assert list(df.columns) == [\"a.1\", \"a.1.1\", \"a.1.1.1\"]\n\n        data = \"a,b,c,d,e,f\\n1,2,3,4,5,6\""
  }
]