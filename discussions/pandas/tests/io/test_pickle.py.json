[
  {
    "id" : "e2d2f795-7455-434b-8f69-f603f45e3294",
    "prId" : 27082,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/27082#pullrequestreview-255417087",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "348103a1-c9e0-4e13-a79e-be4c9a2df64c",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Could maybe simplify these methods since they don't have combat checks any more but I think better left as a separate exercise (happy to open issue)",
        "createdAt" : "2019-06-27T18:50:07Z",
        "updatedAt" : "2019-06-27T20:16:18Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "c53c0e06-1e15-4350-9f0e-1fffb33fdcf6",
        "parentId" : "348103a1-c9e0-4e13-a79e-be4c9a2df64c",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "sgtm.",
        "createdAt" : "2019-06-27T18:53:24Z",
        "updatedAt" : "2019-06-27T20:16:18Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "2fe3a5f26293d1d68efc584678cbaf6b7ae1cfc5",
    "line" : 66,
    "diffHunk" : "@@ -1,1 +110,114 @@\ndef compare_series_cat(result, expected, typ, version):\n    tm.assert_series_equal(result, expected)\n\n"
  },
  {
    "id" : "44394188-cf97-4382-9893-8e566bbd81a7",
    "prId" : 34266,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/34266#pullrequestreview-424378500",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0ddd283b-19c7-4fb8-93b8-417e9d8af23d",
        "parentId" : null,
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "I think we'll still want the old tests.",
        "createdAt" : "2020-05-19T20:17:40Z",
        "updatedAt" : "2020-06-19T18:15:47Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "930393de-954f-42b1-8725-0e0bc317b25a",
        "parentId" : "0ddd283b-19c7-4fb8-93b8-417e9d8af23d",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "@TomAugspurger is this one still relevant, or can it be \"resolved\" ?",
        "createdAt" : "2020-06-04T13:19:58Z",
        "updatedAt" : "2020-06-19T18:15:47Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "60b80a622035b3eaba3bdb790444b7d699822a28",
    "line" : 40,
    "diffHunk" : "@@ -1,1 +456,460 @@\n\n@td.skip_if_no(\"fsspec\")\ndef test_pickle_fsspec_roundtrip():\n    with tm.ensure_clean():"
  },
  {
    "id" : "5682d45a-859c-4d21-8f6e-4d507c2f49f4",
    "prId" : 37056,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/37056#pullrequestreview-506798956",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "146e0e79-c0b4-4b96-a300-53d00970cf39",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "you can omit the `pytest.param` for all of these, except the xfailed one (if you are ok with the id that is generated) i believe",
        "createdAt" : "2020-10-12T13:48:00Z",
        "updatedAt" : "2020-10-12T22:51:10Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "dabbef0d-7f14-45aa-b951-b141c9ad45ee",
        "parentId" : "146e0e79-c0b4-4b96-a300-53d00970cf39",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "but this is pretty clear too, so up to you if it works",
        "createdAt" : "2020-10-12T13:48:26Z",
        "updatedAt" : "2020-10-12T22:51:10Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "4300d951-db40-47fa-87e7-a651bd7bdabb",
        "parentId" : "146e0e79-c0b4-4b96-a300-53d00970cf39",
        "authorId" : "ac10fed2-15b2-4cb1-ac1c-adb90b6b8910",
        "body" : "IMHO auto-generated test `id`s look more confusing:\r\n```\r\npandas/tests/io/test_pickle.py::test_round_trip_current[python_pickler] PASSED                                                                                                               [ 20%]\r\npandas/tests/io/test_pickle.py::test_round_trip_current[to_pickle] PASSED                                                                                                                    [ 40%]\r\npandas/tests/io/test_pickle.py::test_round_trip_current[pickle_writer2] PASSED                                                                                                               [ 60%]\r\npandas/tests/io/test_pickle.py::test_round_trip_current[pickle_writer3] PASSED                                                                                                               [ 80%]\r\npandas/tests/io/test_pickle.py::test_round_trip_current[pandas_proto_5] PASSED  \r\n```\r\n-- so I would prefer to leave it with custom `id`s",
        "createdAt" : "2020-10-12T17:28:24Z",
        "updatedAt" : "2020-10-12T22:51:10Z",
        "lastEditedBy" : "ac10fed2-15b2-4cb1-ac1c-adb90b6b8910",
        "tags" : [
        ]
      }
    ],
    "commit" : "497fa70673e34597755eb99653aef454eb0e4817",
    "line" : 43,
    "diffHunk" : "@@ -1,1 +171,175 @@    \"pickle_writer\",\n    [\n        pytest.param(python_pickler, id=\"python\"),\n        pytest.param(pd.to_pickle, id=\"pandas_proto_default\"),\n        pytest.param("
  },
  {
    "id" : "db93c8bf-9d9b-4cdd-9655-ce22e2099345",
    "prId" : 39376,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/39376#pullrequestreview-575994375",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3eae9c66-61b8-4d05-8960-3bdfceaad2d0",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "is it necessary to specify compression in the read back ? (if not pls test with and w/o)",
        "createdAt" : "2021-01-26T03:52:58Z",
        "updatedAt" : "2021-01-26T14:12:57Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "d3420794-b102-4ccc-ad10-0ebd1226fc46",
        "parentId" : "3eae9c66-61b8-4d05-8960-3bdfceaad2d0",
        "authorId" : "42aa2e10-a5f0-418e-8919-5ec1443b7f2b",
        "body" : "it is needed since the the filename has no proper extension",
        "createdAt" : "2021-01-26T03:55:59Z",
        "updatedAt" : "2021-01-26T14:12:57Z",
        "lastEditedBy" : "42aa2e10-a5f0-418e-8919-5ec1443b7f2b",
        "tags" : [
        ]
      },
      {
        "id" : "88a38eab-119e-48bc-bfce-4f2ca961ab55",
        "parentId" : "3eae9c66-61b8-4d05-8960-3bdfceaad2d0",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "ahh ic ok then",
        "createdAt" : "2021-01-26T03:57:22Z",
        "updatedAt" : "2021-01-26T14:12:57Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "4411ea893199f622cc0efd6ecabb07452da4cb43",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +604,608 @@    result = tm.round_trip_pathlib(\n        partial(df.to_pickle, protocol=protocol, compression=compression),\n        partial(pd.read_pickle, compression=compression),\n    )\n    tm.assert_frame_equal(df, result)"
  },
  {
    "id" : "151073ec-33e1-4379-ac91-310da72cd635",
    "prId" : 42394,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/42394#pullrequestreview-700172900",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "586087a3-d90d-4e07-a7f7-4e79ad0fb15e",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can i add another case with columns and index (respectively) as well (but no rows)",
        "createdAt" : "2021-07-06T01:23:50Z",
        "updatedAt" : "2021-07-06T01:23:58Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "06c63950-b45f-4878-82c9-cf278df20df6",
        "parentId" : "586087a3-d90d-4e07-a7f7-4e79ad0fb15e",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "this test is highly focused, let's hold off on adding to this test and do a dedicated pass using the generate_legacy_storage_files pattern",
        "createdAt" : "2021-07-06T16:36:37Z",
        "updatedAt" : "2021-07-06T16:36:38Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "753ef76d-1c4a-4c19-bdd5-d9655174b8af",
        "parentId" : "586087a3-d90d-4e07-a7f7-4e79ad0fb15e",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "ahh ok, yeah i think that would be a great idea.",
        "createdAt" : "2021-07-06T16:43:37Z",
        "updatedAt" : "2021-07-06T16:43:38Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "d772b8d2bcab90f670b628cf4ceb310cc332dfea",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +642,646 @@        df = pickle.load(fd)\n\n    expected = pd.DataFrame()\n    tm.assert_frame_equal(df, expected)"
  },
  {
    "id" : "618cfe11-fd5b-4bfe-9620-2aa6082fe86f",
    "prId" : 42394,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/42394#pullrequestreview-700166702",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5e7b166f-0d17-4261-a319-94ed2bffcc13",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you also do thsi with `pd.read_pickle` (I think it works w/o your change prob)",
        "createdAt" : "2021-07-06T16:36:53Z",
        "updatedAt" : "2021-07-06T16:36:53Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "d772b8d2bcab90f670b628cf4ceb310cc332dfea",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +639,643 @@    # GH#42345 DataFrame created in 1.2.x, unpickle in 1.3.x\n    path = os.path.join(legacy_dirname, \"1.2.4\", \"empty_frame_v1_2_4-GH#42345.pkl\")\n    with open(path, \"rb\") as fd:\n        df = pickle.load(fd)\n"
  }
]