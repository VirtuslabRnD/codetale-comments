[
  {
    "id" : "cba51749-ff9a-40b7-ba0c-97bd1ce4c652",
    "prId" : 24414,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/24414#pullrequestreview-188300507",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1e8de06e-65a4-419b-bbab-b50766ec8b85",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you add to the list to parameterize (future PR is ok)",
        "createdAt" : "2018-12-25T23:38:38Z",
        "updatedAt" : "2018-12-28T08:45:52Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "e08ee02c-5ba5-4a4a-b9e9-65412f5f4175",
        "parentId" : "1e8de06e-65a4-419b-bbab-b50766ec8b85",
        "authorId" : "51189123-86a2-400a-9762-6816882b6f12",
        "body" : "I suspect this can be a fixture, as I see that list (or something similar to it) in several places.",
        "createdAt" : "2018-12-28T09:03:50Z",
        "updatedAt" : "2018-12-28T09:04:03Z",
        "lastEditedBy" : "51189123-86a2-400a-9762-6816882b6f12",
        "tags" : [
        ]
      },
      {
        "id" : "6ca63ab5-b3fe-4bc4-85df-aab2205524e0",
        "parentId" : "1e8de06e-65a4-419b-bbab-b50766ec8b85",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "yeah we have this as a fixture already, just need to incorporate",
        "createdAt" : "2018-12-28T14:26:44Z",
        "updatedAt" : "2018-12-28T14:26:44Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "55b39541db68d8b26dfef608ae65fe4e580fe359",
    "line" : 399,
    "diffHunk" : "@@ -1,1 +365,369 @@\n    # check all cython functions work\n    funcs = ['add', 'mean', 'prod', 'min', 'max', 'var']\n    for f in funcs:\n        g._cython_agg_general(f)"
  },
  {
    "id" : "b32ee630-2f5b-4c27-8fca-96d31f37d7c1",
    "prId" : 24414,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/24414#pullrequestreview-188300427",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a90f8963-801f-4fda-a2c0-a2fb58826364",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "on these extra long files, ok to put in some section separators and move functions around\r\n\r\nsomthing like\r\n```\r\n# ----\r\n# ohlc\r\n# ----\r\n```\r\nthese make sense when we remove the class based testing, not super necessary but nice to have.",
        "createdAt" : "2018-12-25T23:41:36Z",
        "updatedAt" : "2018-12-28T08:45:52Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "4781f918-c8d0-4988-b5ff-f42c1efbc6e9",
        "parentId" : "a90f8963-801f-4fda-a2c0-a2fb58826364",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you address this",
        "createdAt" : "2018-12-28T00:38:25Z",
        "updatedAt" : "2018-12-28T08:45:52Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "ed281149-5485-4beb-979a-17ff614fb0bc",
        "parentId" : "a90f8963-801f-4fda-a2c0-a2fb58826364",
        "authorId" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "body" : "There's still lots to do for this module... only a handful of tests were split or parametrised in this PR. i would prefer to move functions and add section separators as a parallel activity with the splitting and parametrizing of the remaining tests. are you OK with that?",
        "createdAt" : "2018-12-28T08:48:31Z",
        "updatedAt" : "2018-12-28T08:48:31Z",
        "lastEditedBy" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "tags" : [
        ]
      },
      {
        "id" : "2ffc2230-7ebe-4987-ab83-d420a25b75f2",
        "parentId" : "a90f8963-801f-4fda-a2c0-a2fb58826364",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "sure, let's do after this one",
        "createdAt" : "2018-12-28T14:26:15Z",
        "updatedAt" : "2018-12-28T14:26:15Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "55b39541db68d8b26dfef608ae65fe4e580fe359",
    "line" : 830,
    "diffHunk" : "@@ -1,1 +657,661 @@\n\ndef test_downsample_non_unique():\n    rng = date_range('1/1/2000', '2/29/2000')\n    rng2 = rng.repeat(5).values"
  },
  {
    "id" : "235dccff-dea1-4d45-baf9-4647b38bf643",
    "prId" : 25469,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/25469#pullrequestreview-208921204",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0f5f7ddf-98f6-4043-b8c1-8e60b4f56962",
        "parentId" : null,
        "authorId" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "body" : "This test might as well compare a `result` and `expected` dataframe. Otherwise LGTM",
        "createdAt" : "2019-02-28T06:21:15Z",
        "updatedAt" : "2019-02-28T06:22:03Z",
        "lastEditedBy" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "tags" : [
        ]
      },
      {
        "id" : "f1d7b905-819b-4f47-ba76-cde45c0c130e",
        "parentId" : "0f5f7ddf-98f6-4043-b8c1-8e60b4f56962",
        "authorId" : "51189123-86a2-400a-9762-6816882b6f12",
        "body" : "The expected `DataFrame` has 697 (!) rows.",
        "createdAt" : "2019-02-28T07:26:41Z",
        "updatedAt" : "2019-02-28T07:26:50Z",
        "lastEditedBy" : "51189123-86a2-400a-9762-6816882b6f12",
        "tags" : [
        ]
      }
    ],
    "commit" : "15b6447b5130f5248586021a7c28aa481c7ffe50",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +1142,1146 @@                                           names=[\"lev0\", \"lev1\"])\n    result = df.resample(\"1h\").nunique()\n    tm.assert_index_equal(df.columns, result.columns)\n\n"
  },
  {
    "id" : "b9404e39-064f-42ea-9ebc-c816fd490bba",
    "prId" : 27071,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/27071#pullrequestreview-544934765",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "df593264-769b-4931-9946-bb4d713ef5a9",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "@jreback @jorisvandenbossche why returning Int64 here?  I would expect float64 or Float64.\r\n\r\ne.g. if we do `ts[-1] += 1` before the resample, the mean comes back as float64.",
        "createdAt" : "2020-12-04T04:02:28Z",
        "updatedAt" : "2020-12-04T04:02:28Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "d7c7ef1c-4ecf-43a5-9961-a3ecd51dc631",
        "parentId" : "df593264-769b-4931-9946-bb4d713ef5a9",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Yes, this should be Float64, because it is only accidentally that the results are all integer-like. \r\nThis is one of the cases that I listed in https://github.com/pandas-dev/pandas/issues/37494\r\n",
        "createdAt" : "2020-12-04T12:56:36Z",
        "updatedAt" : "2020-12-04T12:56:36Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "3a6a0c08dc5a65427f29fbf4c989b2b895b004aa",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +116,120 @@    expected = Series([1, 4, 7],\n                      index=pd.date_range('1/1/2000', periods=3, freq='3T'),\n                      dtype='Int64')\n    assert_series_equal(result, expected)\n"
  }
]