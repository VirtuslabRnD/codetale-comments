[
  {
    "id" : "c46b2e64-d68d-4627-ad72-5b0912359e26",
    "prId" : 30562,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/30562#pullrequestreview-345454913",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "662d6849-395b-4248-b63f-b51864e83c9d",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "you can just use None here, no?",
        "createdAt" : "2020-01-20T16:17:33Z",
        "updatedAt" : "2020-06-21T09:44:18Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "95232596-6ff3-404f-a8c9-177d252b2925",
        "parentId" : "662d6849-395b-4248-b63f-b51864e83c9d",
        "authorId" : "6e82078b-0a97-4940-a41d-3b2a01e49b5d",
        "body" : "Sure. I was just following your suggestion:\r\n\r\n> you can just set the default for check_less_precise = lib.no_default (grep for it)\r\n\r\nWhich seemed a better fit when deprecating a parameter. Should I change it to `None` or keep with the `no_default`? :smile: ",
        "createdAt" : "2020-01-20T17:30:02Z",
        "updatedAt" : "2020-06-21T09:44:18Z",
        "lastEditedBy" : "6e82078b-0a97-4940-a41d-3b2a01e49b5d",
        "tags" : [
        ]
      }
    ],
    "commit" : "d83880ccb7ebcb8796ee6a765e383362a6d1454a",
    "line" : 394,
    "diffHunk" : "@@ -1,1 +1420,1424 @@    check_column_type=\"equiv\",\n    check_frame_type=True,\n    check_less_precise=no_default,\n    check_names=True,\n    by_blocks=False,"
  },
  {
    "id" : "bd932574-0b22-4b39-9675-9ea35d6cd189",
    "prId" : 30562,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/30562#pullrequestreview-361494399",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c98283b5-44d7-4023-916d-c43b3b9a62b3",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "@datapythonista is this how we do comments in doctests?",
        "createdAt" : "2020-02-07T00:10:23Z",
        "updatedAt" : "2020-06-21T09:44:18Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "2ae82878-290e-41e4-a7f3-d16c38a0465c",
        "parentId" : "c98283b5-44d7-4023-916d-c43b3b9a62b3",
        "authorId" : "b0c8ea7f-389d-4305-8e0a-a1a394b9fcc2",
        "body" : "No, we should remove `>>> # ` and just leave the sentence. ",
        "createdAt" : "2020-02-07T00:54:57Z",
        "updatedAt" : "2020-06-21T09:44:18Z",
        "lastEditedBy" : "b0c8ea7f-389d-4305-8e0a-a1a394b9fcc2",
        "tags" : [
        ]
      },
      {
        "id" : "63ff987d-0ec9-4910-b321-cc453df59f85",
        "parentId" : "c98283b5-44d7-4023-916d-c43b3b9a62b3",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "pls update",
        "createdAt" : "2020-02-19T22:44:14Z",
        "updatedAt" : "2020-06-21T09:44:18Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "d83880ccb7ebcb8796ee6a765e383362a6d1454a",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +322,326 @@    Examples\n    --------\n    >>> # Using check_less_precise as a bool:\n    >>> _get_tol_from_less_precise(False)\n    0.5e-5"
  },
  {
    "id" : "5112e54d-cf77-463b-ac5d-5e5497c6765a",
    "prId" : 30562,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/30562#pullrequestreview-361494255",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6ce5da59-0bcf-400c-9c5f-1e2a19a341bc",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "use `is_bool` (the difference is is_bool will recognize np.bool_)",
        "createdAt" : "2020-02-07T00:10:49Z",
        "updatedAt" : "2020-06-21T09:44:18Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "031ffd8d-5a2a-4cec-8cd4-629609ffd07e",
        "parentId" : "6ce5da59-0bcf-400c-9c5f-1e2a19a341bc",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "pls do this",
        "createdAt" : "2020-02-19T22:43:56Z",
        "updatedAt" : "2020-06-21T09:44:18Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "d83880ccb7ebcb8796ee6a765e383362a6d1454a",
    "line" : 49,
    "diffHunk" : "@@ -1,1 +335,339 @@\n    \"\"\"\n    if isinstance(check_less_precise, bool):\n        if check_less_precise:\n            # 3-digit tolerance"
  },
  {
    "id" : "cb621635-e76e-40ba-b4f6-3cd173b46d04",
    "prId" : 30562,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/30562#pullrequestreview-381637123",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "152f9991-6761-4fe5-9b84-6fe927b44099",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "same comment about the versionadded tags",
        "createdAt" : "2020-03-26T00:59:12Z",
        "updatedAt" : "2020-06-21T09:44:18Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "d83880ccb7ebcb8796ee6a765e383362a6d1454a",
    "line" : 83,
    "diffHunk" : "@@ -1,1 +387,391 @@        Relative tolerance.\n\n        .. versionadded:: 1.1.0\n    atol : float, default 1e-8\n        Absolute tolerance."
  },
  {
    "id" : "3d6dd0fe-a189-4729-88bc-e78d22cc7f9b",
    "prId" : 30562,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/30562#pullrequestreview-434956745",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "55bf0e05-0022-4223-927e-7a303abbdf08",
        "parentId" : null,
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "This is user-facing documentation, so these descriptions could be improved.\r\n\r\nCould you copy the description from `numpy.isclose`, or link to it with a See Also?",
        "createdAt" : "2020-06-22T14:05:56Z",
        "updatedAt" : "2020-06-22T14:07:09Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "d83880ccb7ebcb8796ee6a765e383362a6d1454a",
    "line" : 81,
    "diffHunk" : "@@ -1,1 +385,389 @@           tolerance, respectively. Similar to :func:`math.isclose`.\n    rtol : float, default 1e-5\n        Relative tolerance.\n\n        .. versionadded:: 1.1.0"
  },
  {
    "id" : "bd4803a9-b40d-4a84-b971-135ed0728ad9",
    "prId" : 30915,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/30915#pullrequestreview-341545684",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7f2d6939-9738-476e-b3c6-20cfa3c45ef3",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "why donâ€™t list encoding , mode here explicitly ",
        "createdAt" : "2020-01-11T11:04:37Z",
        "updatedAt" : "2020-01-11T11:04:37Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "746a61e1-6172-4dc6-8a82-30bb4b28a35a",
        "parentId" : "7f2d6939-9738-476e-b3c6-20cfa3c45ef3",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "and in the signature ",
        "createdAt" : "2020-01-11T11:04:53Z",
        "updatedAt" : "2020-01-11T11:04:54Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "87128c3e-279e-4f57-bcf5-13df7b8e46eb",
        "parentId" : "7f2d6939-9738-476e-b3c6-20cfa3c45ef3",
        "authorId" : "51189123-86a2-400a-9762-6816882b6f12",
        "body" : "https://docs.python.org/3/library/tempfile.html#tempfile.TemporaryFile\r\nhttps://docs.python.org/3/library/tempfile.html#tempfile.mkstemp\r\n\r\n`encoding` and `mode` are not accepted in `mkstemp`.\r\n\r\nThe only shared parameters are `prefix`, `suffix` (corresponds to `filename` in our signature), and `dir`.  Not sure that the remaining two need exposure.",
        "createdAt" : "2020-01-11T11:10:50Z",
        "updatedAt" : "2020-01-11T11:11:42Z",
        "lastEditedBy" : "51189123-86a2-400a-9762-6816882b6f12",
        "tags" : [
        ]
      },
      {
        "id" : "8a8d3024-2e3c-44ab-8112-57611f7652c5",
        "parentId" : "7f2d6939-9738-476e-b3c6-20cfa3c45ef3",
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Looking back on comment in OP is the main thing needed for now just encoding? If so I think better to just list explicitly and not pass to mkstemp",
        "createdAt" : "2020-01-11T23:15:40Z",
        "updatedAt" : "2020-01-11T23:15:40Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "2aa2ea11-677b-4980-a37a-bc6739b1fb11",
        "parentId" : "7f2d6939-9738-476e-b3c6-20cfa3c45ef3",
        "authorId" : "51189123-86a2-400a-9762-6816882b6f12",
        "body" : "> If so I think better to just list explicitly and not pass to mkstemp\r\n\r\nThe whole point is to use the `**kwargs` in `ensure_clean` as a pass through to `mkstemp` or `TemporaryFile`, depending on whether `return_filelike` is true or false.\r\n\r\nExplicitly listing arguments that apply to one but not the other is going to be confusing.  What is being done is a lot more extensible in the long-run.",
        "createdAt" : "2020-01-11T23:24:42Z",
        "updatedAt" : "2020-01-11T23:25:12Z",
        "lastEditedBy" : "51189123-86a2-400a-9762-6816882b6f12",
        "tags" : [
        ]
      }
    ],
    "commit" : "2c9f4ae223913cfcdf5774b3398b8ea1a85a7aa6",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +485,489 @@    return_filelike : bool (default False)\n        if True, returns a file-like which is *always* cleaned. Necessary for\n        savefig and other functions which want to append extensions.\n    **kwargs\n        Additional keywords passed in for creating a temporary file."
  },
  {
    "id" : "49e66821-f6a6-4405-a5ac-1fbc12359bcf",
    "prId" : 31734,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/31734#pullrequestreview-355632111",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "574e2e5b-ad46-4edb-9d04-a7df3cd74eb9",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can we simply enforce ordering when check_categorical is True? alteratively, could add 'exact' as a possiblity in check_categorical (just see what is easier here, not averse to adding another arg)",
        "createdAt" : "2020-02-09T17:28:12Z",
        "updatedAt" : "2020-02-17T00:22:48Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "fad6f2c3-a59d-4900-bfdc-7c18e7129638",
        "parentId" : "574e2e5b-ad46-4edb-9d04-a7df3cd74eb9",
        "authorId" : "ac0af0a3-006f-4da7-a294-6b5567cb5c6a",
        "body" : "I think adding the extra arg is easiest. `pytest.mark.parametrize` doesn't work with optional arguments so there's no way to use optional arguments to cut down on args needed. Adding a string possibility to a boolean argument isn't very intuitive (and changing `check_categorical` to a string argument would result in a lot of changes in other files)",
        "createdAt" : "2020-02-09T20:42:27Z",
        "updatedAt" : "2020-02-17T00:22:48Z",
        "lastEditedBy" : "ac0af0a3-006f-4da7-a294-6b5567cb5c6a",
        "tags" : [
        ]
      }
    ],
    "commit" : "8a2e12d1eee0b7a5309b40f2a67ba783e85523a5",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +1106,1110 @@    check_categorical : bool, default True\n        Whether to compare internal Categorical exactly.\n    check_category_order : bool, default True\n        Whether to compare category order of internal Categoricals\n"
  },
  {
    "id" : "63912255-97e2-4a04-b77d-2f9337d5ebb9",
    "prId" : 31734,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/31734#pullrequestreview-359408333",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "140ce5d3-a387-463c-81c3-b37563aa575b",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you add a versionadded tag here (1.0.2)",
        "createdAt" : "2020-02-16T14:47:22Z",
        "updatedAt" : "2020-02-17T00:22:48Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "8a2e12d1eee0b7a5309b40f2a67ba783e85523a5",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +1106,1110 @@    check_categorical : bool, default True\n        Whether to compare internal Categorical exactly.\n    check_category_order : bool, default True\n        Whether to compare category order of internal Categoricals\n"
  },
  {
    "id" : "b2e716bc-317c-44ec-8306-f878e44278a2",
    "prId" : 32570,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/32570#pullrequestreview-372808200",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4e3a6ecf-31a9-4cca-9dc8-9055be7e59c3",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "How can `asi8` ever return a MaskedArray?",
        "createdAt" : "2020-03-10T07:44:53Z",
        "updatedAt" : "2020-03-10T07:46:55Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "4a642939-ac4b-48c4-ae0b-f251eaea2b1b",
        "parentId" : "4e3a6ecf-31a9-4cca-9dc8-9055be7e59c3",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "we have one test where we pass a MaskedArray to the constructor (I think DTI)",
        "createdAt" : "2020-03-10T15:31:46Z",
        "updatedAt" : "2020-03-10T15:31:47Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "76a1ba0f-22ad-4d61-a088-9d1a22aa3d76",
        "parentId" : "4e3a6ecf-31a9-4cca-9dc8-9055be7e59c3",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "> we have one test where we pass a MaskedArray to the constructor (I think DTI)\r\n\r\nBut shouldn't that be converted to a normal array upon construction? \r\n\r\n",
        "createdAt" : "2020-03-11T12:48:05Z",
        "updatedAt" : "2020-03-11T12:48:05Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "af409f99-6fbc-44ce-98e4-0a546090a111",
        "parentId" : "4e3a6ecf-31a9-4cca-9dc8-9055be7e59c3",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "id have no problem with enforcing this, but AFAIK we dont at the moment",
        "createdAt" : "2020-03-11T14:26:45Z",
        "updatedAt" : "2020-03-11T14:26:45Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "ebfe80b001df348f83b134667a76f2fba65d5831",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +1040,1044 @@        # Avoid slow object-dtype comparisons\n        # np.asarray for case where we have a np.MaskedArray\n        assert_numpy_array_equal(np.asarray(left.asi8), np.asarray(right.asi8))\n        return\n"
  },
  {
    "id" : "c8a33269-a827-4b51-b1d2-c3f83818c9e3",
    "prId" : 32570,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/32570#pullrequestreview-372065583",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b64cc8d2-2c46-4b76-b586-c88655cd1b76",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "assert_extension_array_equal doesn't work for categorical?",
        "createdAt" : "2020-03-10T07:46:32Z",
        "updatedAt" : "2020-03-10T07:46:55Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "4ba01d3e-c373-4620-a59c-2777d3011867",
        "parentId" : "b64cc8d2-2c46-4b76-b586-c88655cd1b76",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "We have kwargs `check_categorical` and `check_category_ordered` and a categorical-specific check at the end of `assert_series_equal`.  xref #32571 trying to cut down on these\r\n",
        "createdAt" : "2020-03-10T15:31:18Z",
        "updatedAt" : "2020-03-10T15:31:18Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "ebfe80b001df348f83b134667a76f2fba65d5831",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +1187,1191 @@        )\n    elif is_extension_array_dtype(left.dtype) or is_extension_array_dtype(right.dtype):\n        assert_extension_array_equal(left._values, right._values)\n    elif needs_i8_conversion(left.dtype) or needs_i8_conversion(right.dtype):\n        # DatetimeArray or TimedeltaArray"
  },
  {
    "id" : "9ec3278c-8fbc-4f9f-af39-1cd41f74e9bf",
    "prId" : 32570,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/32570#pullrequestreview-374485191",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3993bd70-bcd6-4140-9915-525d604c8644",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Before this was \"and\", and now it is \"or\". That seems to cause issues in geopandas in case you specify `check_dtype=False` (in which case you can eg have an EA dtype and object dtype with equal values)",
        "createdAt" : "2020-03-13T17:28:10Z",
        "updatedAt" : "2020-03-13T17:28:11Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "ebfe80b001df348f83b134667a76f2fba65d5831",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +1186,1190 @@            obj=str(obj),\n        )\n    elif is_extension_array_dtype(left.dtype) or is_extension_array_dtype(right.dtype):\n        assert_extension_array_equal(left._values, right._values)\n    elif needs_i8_conversion(left.dtype) or needs_i8_conversion(right.dtype):"
  },
  {
    "id" : "028ba680-315c-4d06-9cf8-953e10b616dd",
    "prId" : 33575,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/33575#pullrequestreview-399425627",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f195fa41-7464-4659-a923-bf1727799e2c",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Do you have to use asarray here or could you just pass back the DatetimeArray? Would make for nicer output if the date time values were shown",
        "createdAt" : "2020-04-22T04:05:14Z",
        "updatedAt" : "2020-04-22T04:05:29Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "5ec1517b-56c9-4790-a629-94f62bab62fa",
        "parentId" : "f195fa41-7464-4659-a923-bf1727799e2c",
        "authorId" : "0dced5cc-c3d4-4915-94b7-1d9166505fcd",
        "body" : "That is a good point which I hadn't thought of.  However, it isn't quite as simple as that because we only know that the data is an extension array at this point - the index may not be.  Also, my understanding of extension array is very poor, but I thought it could be used for things other than datetimes?\r\n\r\nThe main reason though, is that the data is currently dislayed as numeric timestamps, so it seems reasonable to fix the index display at the same time as the data.  And that sounds like a seperate PR to me.  I am looking at doing it (when I get time), but as mentioned above, I need to figure out extension arrays first.",
        "createdAt" : "2020-04-23T19:48:34Z",
        "updatedAt" : "2020-04-23T19:48:35Z",
        "lastEditedBy" : "0dced5cc-c3d4-4915-94b7-1d9166505fcd",
        "tags" : [
        ]
      },
      {
        "id" : "aa1feae4-ecd2-4cf6-8920-1712f0beb210",
        "parentId" : "f195fa41-7464-4659-a923-bf1727799e2c",
        "authorId" : "0dced5cc-c3d4-4915-94b7-1d9166505fcd",
        "body" : "And thanks for looking at the PR.  Still not sure if I'm supposed to click 'Resolve conversation' now.",
        "createdAt" : "2020-04-23T19:50:54Z",
        "updatedAt" : "2020-04-23T19:50:54Z",
        "lastEditedBy" : "0dced5cc-c3d4-4915-94b7-1d9166505fcd",
        "tags" : [
        ]
      }
    ],
    "commit" : "135ea8778d7197ea399825afecf45f7775ccd995",
    "line" : 67,
    "diffHunk" : "@@ -1,1 +1200,1204 @@    elif is_extension_array_dtype(left.dtype) and is_extension_array_dtype(right.dtype):\n        assert_extension_array_equal(\n            left._values, right._values, index_values=np.asarray(left.index)\n        )\n    elif needs_i8_conversion(left.dtype) or needs_i8_conversion(right.dtype):"
  },
  {
    "id" : "73e40c53-099c-4eaa-820f-75ad454d6ee4",
    "prId" : 34050,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/34050#pullrequestreview-408168836",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6b014a5d-d9b4-4600-bd01-7cffeca19764",
        "parentId" : null,
        "authorId" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "body" : "move to below versionadded:: 1.0.2 for check_category_order and add versionadded:: 1.1.0",
        "createdAt" : "2020-05-08T11:15:50Z",
        "updatedAt" : "2020-05-09T14:10:59Z",
        "lastEditedBy" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "tags" : [
        ]
      }
    ],
    "commit" : "4faca17ee87b8fc9e66ad700744aed6fe4418604",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +1144,1148 @@\n        .. versionadded:: 1.0.2\n    check_freq : bool, default True\n        Whether to check the `freq` attribute on a DatetimeIndex or TimedeltaIndex.\n"
  },
  {
    "id" : "cc603c09-e2cc-4155-8172-b28ed1a2b044",
    "prId" : 34050,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/34050#pullrequestreview-408168836",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ae77b83c-03df-44d2-8499-2b841ab1a1b3",
        "parentId" : null,
        "authorId" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "body" : "add versionadded:: 1.1.0",
        "createdAt" : "2020-05-08T11:16:07Z",
        "updatedAt" : "2020-05-09T14:10:59Z",
        "lastEditedBy" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "tags" : [
        ]
      }
    ],
    "commit" : "4faca17ee87b8fc9e66ad700744aed6fe4418604",
    "line" : 41,
    "diffHunk" : "@@ -1,1 +1335,1339 @@        (same as in columns) - same labels must be with the same data.\n    check_freq : bool, default True\n        Whether to check the `freq` attribute on a DatetimeIndex or TimedeltaIndex.\n\n        .. versionadded:: 1.1.0"
  },
  {
    "id" : "89de7828-bfaf-4199-9a6c-a3852d0ce100",
    "prId" : 34307,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/34307#pullrequestreview-491977434",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0ab752f3-9e05-453b-b6d5-e91545c075bf",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "i think we also have a fixture in conftest and we have an aggregate of all ea types (can be added later but reallly good for testing now)",
        "createdAt" : "2020-06-20T15:14:27Z",
        "updatedAt" : "2020-09-30T08:18:10Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "c170e96b-4a84-4951-84fd-2a7a5d9c27da",
        "parentId" : "0ab752f3-9e05-453b-b6d5-e91545c075bf",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "There is indeed a `any_nullable_int_dtype` fixture in conftest.py. I could add an equivalent floating one, but right now it wouldn't be used yet. So can also add once we need it somewhere.",
        "createdAt" : "2020-09-18T15:50:08Z",
        "updatedAt" : "2020-09-30T08:18:10Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "3633b4d4-6282-41b1-adbe-a0c685bde056",
        "parentId" : "0ab752f3-9e05-453b-b6d5-e91545c075bf",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "kk but yes we should add one in this pr",
        "createdAt" : "2020-09-19T01:35:07Z",
        "updatedAt" : "2020-09-30T08:18:10Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "90565e9b-c45b-4a29-bb5a-7ff6aa0abb93",
        "parentId" : "0ab752f3-9e05-453b-b6d5-e91545c075bf",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "OK, added the fixture",
        "createdAt" : "2020-09-19T07:05:49Z",
        "updatedAt" : "2020-09-30T08:18:10Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "edf9618d49de3f04d8f18e099c60310ae40296f7",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +85,89 @@\nFLOAT_DTYPES: List[Dtype] = [float, \"float32\", \"float64\"]\nFLOAT_EA_DTYPES: List[Dtype] = [\"Float32\", \"Float64\"]\nCOMPLEX_DTYPES: List[Dtype] = [complex, \"complex64\", \"complex128\"]\nSTRING_DTYPES: List[Dtype] = [str, \"str\", \"U\"]"
  }
]