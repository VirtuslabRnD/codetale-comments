[
  {
    "id" : "fb8740b0-d146-4656-bb84-bb6370348bee",
    "prId" : 20611,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/20611#pullrequestreview-135673448",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "98b5909c-dcdf-4851-9cf1-51c7162a346f",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "what is this for?",
        "createdAt" : "2018-07-08T21:00:19Z",
        "updatedAt" : "2018-07-13T01:00:54Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "a46196ef-48a1-4c07-9ab4-ba921e3482aa",
        "parentId" : "98b5909c-dcdf-4851-9cf1-51c7162a346f",
        "authorId" : "7545b4d7-157f-47c4-b7f8-18bf358d429c",
        "body" : "This is being used to overwrite exception messages so they display the correct class name.  Looks like it's currently just used for `IntervalIndex` when it calls an underlying `IntervalArray` method that could raise some with an `IntervalArray` specific message, e.g. `'category, object, and string subtypes are not supported for IntervalArray'`.\r\n\r\nI suppose we could try to either make these messages slightly more generic (\"IntervalArray\" --> \"IntervalArray-like\" or \"Interval classes\" maybe) or try implementing an additional common interface.",
        "createdAt" : "2018-07-09T23:45:00Z",
        "updatedAt" : "2018-07-13T01:00:54Z",
        "lastEditedBy" : "7545b4d7-157f-47c4-b7f8-18bf358d429c",
        "tags" : [
        ]
      },
      {
        "id" : "f3ee49af-572b-4140-aec0-2df8dfba2e60",
        "parentId" : "98b5909c-dcdf-4851-9cf1-51c7162a346f",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "What about something like defining a custom exception type in arrays/interval.py and then\r\n\r\n```\r\ndef _raise_exception(self):\r\n    # We have access to the correct `type(self).__name__`\r\n    pass\r\n\r\ndef method(self):\r\n    try:\r\n        do_thing()\r\n    except _IntervalException:\r\n        self._raise_exception()\r\n```\r\n\r\ndoes that make sense?",
        "createdAt" : "2018-07-10T03:04:06Z",
        "updatedAt" : "2018-07-13T01:00:54Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "a430a3a2-3e54-4c40-a294-35057cadcc9e",
        "parentId" : "98b5909c-dcdf-4851-9cf1-51c7162a346f",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Or we could just use IntervalArray in the exception message. Doesn't really matter to me.",
        "createdAt" : "2018-07-10T03:04:30Z",
        "updatedAt" : "2018-07-13T01:00:54Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "c1482e35-1853-4725-b179-ac75929c70ad",
        "parentId" : "98b5909c-dcdf-4851-9cf1-51c7162a346f",
        "authorId" : "7545b4d7-157f-47c4-b7f8-18bf358d429c",
        "body" : "Yeah, I don't really have a preference either.  I might end up trying a few things to see what's cleanest.",
        "createdAt" : "2018-07-10T04:50:56Z",
        "updatedAt" : "2018-07-13T01:00:54Z",
        "lastEditedBy" : "7545b4d7-157f-47c4-b7f8-18bf358d429c",
        "tags" : [
        ]
      }
    ],
    "commit" : "385ce59f79ff1921a44f3bbaa17044032e3ed4d3",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +3,7 @@\n@contextlib.contextmanager\ndef rewrite_exception(old_name, new_name):\n    \"\"\"Rewrite the message of an exception.\"\"\"\n    try:"
  }
]