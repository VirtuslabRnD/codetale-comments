[
  {
    "id" : "66693c75-868c-4614-87b8-b531b22c2550",
    "prId" : 19684,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19684#pullrequestreview-96382455",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5d582060-6e1a-4696-a43a-bbe37671fe06",
        "parentId" : null,
        "authorId" : "51189123-86a2-400a-9762-6816882b6f12",
        "body" : "What happened to `validate_scalar_dict_value` in the docstring?",
        "createdAt" : "2018-02-14T04:28:01Z",
        "updatedAt" : "2018-02-21T12:52:48Z",
        "lastEditedBy" : "51189123-86a2-400a-9762-6816882b6f12",
        "tags" : [
        ]
      }
    ],
    "commit" : "dc1f9606204e126723867024fbf35f953dcf31c7",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +332,336 @@    ----------\n    value, method : object\n        The 'value' and 'method' keyword arguments for 'fillna'.\n    validate_scalar_dict_value : bool, default True\n        Whether to validate that 'value' is a scalar or dict. Specifically,"
  },
  {
    "id" : "e27f6036-1383-4bb5-b1ee-d44f4fa29f80",
    "prId" : 19684,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19684#pullrequestreview-97846040",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bd3944cf-e918-48cf-ba5a-ad8ab771660d",
        "parentId" : null,
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "This check doesn't seem especially useful / correct given the error message.\r\n\r\nThere are many things that are not scalars or dicts, but also not `lists` or `tuples`, so we would fail to hit this TypeError.\r\n\r\nBut I was trying to keep this as a straight refactor for NDFrame.fillna, with the only behavior change being `Categorical.fillna`.",
        "createdAt" : "2018-02-16T13:32:26Z",
        "updatedAt" : "2018-02-21T12:52:48Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "8feb81ec-ce0e-4c70-a1db-dc5b881d7b08",
        "parentId" : "bd3944cf-e918-48cf-ba5a-ad8ab771660d",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "I dont' think this is odd to want to validate that a scalar can be only a certain type. maybe would change this \r\n\r\n``validate_scalar=lambda x: is_scalar(x) or is_dict_like(x)``",
        "createdAt" : "2018-02-16T18:15:25Z",
        "updatedAt" : "2018-02-21T12:52:48Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "8d46f05e-9860-4f3a-9674-b1b7ddc653e4",
        "parentId" : "bd3944cf-e918-48cf-ba5a-ad8ab771660d",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "this parameter name is terrible, ideally would like to change this",
        "createdAt" : "2018-02-20T13:40:48Z",
        "updatedAt" : "2018-02-21T12:52:48Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "bce0c6f3-4c4b-495e-a442-390f4fb57da8",
        "parentId" : "bd3944cf-e918-48cf-ba5a-ad8ab771660d",
        "authorId" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "body" : "Two things:\r\n\r\n1. Please don't call a change by a contributor \"terrible\". It's not helpful.\r\n2. The error message says \"'value' parameter must be a scalar or dict\". That seems to match the parameter name pretty well.",
        "createdAt" : "2018-02-20T13:59:42Z",
        "updatedAt" : "2018-02-21T12:52:48Z",
        "lastEditedBy" : "21b82015-4bfc-4f74-bfca-586973dad2cd",
        "tags" : [
        ]
      },
      {
        "id" : "874dacd9-601e-433c-81ba-7cc6fa352791",
        "parentId" : "bd3944cf-e918-48cf-ba5a-ad8ab771660d",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "the parameter name is terrible, obviously NOT the contributor, which I didn't say or imply at all. It needs to be changed.",
        "createdAt" : "2018-02-20T14:17:43Z",
        "updatedAt" : "2018-02-21T12:52:48Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "9489de43-bb6f-46c6-b9b0-0b578d204c90",
        "parentId" : "bd3944cf-e918-48cf-ba5a-ad8ab771660d",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "The parameter name is certainly descriptive in what it does, *and* it is for an internal method, so it's not much of a problem it is that long. Why bother for the rest?",
        "createdAt" : "2018-02-20T14:36:54Z",
        "updatedAt" : "2018-02-21T12:52:48Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "dc1f9606204e126723867024fbf35f953dcf31c7",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +349,353 @@\n    elif value is not None and method is None:\n        if validate_scalar_dict_value and isinstance(value, (list, tuple)):\n            raise TypeError('\"value\" parameter must be a scalar or dict, but '\n                            'you passed a \"{0}\"'.format(type(value).__name__))"
  },
  {
    "id" : "028ee628-2e0e-4f56-9782-7120a0da7bbe",
    "prId" : 19684,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19684#pullrequestreview-97265439",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "93a84d66-e9b8-48bb-afc6-94037f951f33",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "extra line here (make consistent across this function)",
        "createdAt" : "2018-02-16T18:00:57Z",
        "updatedAt" : "2018-02-21T12:52:48Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "dc1f9606204e126723867024fbf35f953dcf31c7",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +347,351 @@    elif value is None and method is not None:\n        method = clean_fill_method(method)\n\n    elif value is not None and method is None:\n        if validate_scalar_dict_value and isinstance(value, (list, tuple)):"
  },
  {
    "id" : "b0758bcc-4f58-4820-adb7-745443c05b7c",
    "prId" : 39451,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/39451#pullrequestreview-580992169",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "055ce40d-d06f-4642-a921-ca71b6c6e0ff",
        "parentId" : null,
        "authorId" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "body" : "if `validate_bool_kwarg` allowed ints through before, wouldn't `int_allowed` need to default to True for backwards compatibility?",
        "createdAt" : "2021-01-29T13:23:53Z",
        "updatedAt" : "2021-02-26T12:01:37Z",
        "lastEditedBy" : "554ba0f6-6e6a-40c3-98e0-1a6cc4a8e1c6",
        "tags" : [
        ]
      },
      {
        "id" : "5dcaed2d-b3e5-485e-81a7-96ee8cf9cf68",
        "parentId" : "055ce40d-d06f-4642-a921-ca71b6c6e0ff",
        "authorId" : "6401b20f-26b1-4a7c-8433-dc789c15b9e1",
        "body" : "I checked ``is_bool``, and by default it considers ``int`` as a non-boolean.\r\n\r\n```\r\nIn [1]: from pandas.core.dtypes.common import is_bool\r\n\r\nIn [2]: is_bool(1)\r\nOut[2]: False\r\n```",
        "createdAt" : "2021-02-02T05:17:47Z",
        "updatedAt" : "2021-02-26T12:01:37Z",
        "lastEditedBy" : "6401b20f-26b1-4a7c-8433-dc789c15b9e1",
        "tags" : [
        ]
      }
    ],
    "commit" : "6b430f818d79fbaa7c00b37b290ce8eb1a498eba",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +210,214 @@\n\ndef validate_bool_kwarg(value, arg_name, none_allowed=True, int_allowed=False):\n    \"\"\"\n    Ensure that argument passed in arg_name can be interpreted as boolean."
  },
  {
    "id" : "fc476f06-13a6-41e8-8d00-85ca4ea5239e",
    "prId" : 39451,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/39451#pullrequestreview-598717364",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b37abaea-d3f3-4101-a166-4461fd63ade9",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "remove the int_allowed (its not)",
        "createdAt" : "2021-02-11T13:38:46Z",
        "updatedAt" : "2021-02-26T12:01:37Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "20de85e0-1b48-4fc3-ad97-32d232482720",
        "parentId" : "b37abaea-d3f3-4101-a166-4461fd63ade9",
        "authorId" : "6401b20f-26b1-4a7c-8433-dc789c15b9e1",
        "body" : "This is required for ``validate_ascending`` as int is actually considered as a valid boolean there.\r\nPreviously I had this check in ``validate_ascending`` itself, but I was requested to use ``validate_boolean``, so I extended it in such a way.\r\n\r\nIt may be necessary to maybe restrict ``ascending`` to use of booleans only (no integers), but this is a breaking change and should probably be discussed first.",
        "createdAt" : "2021-02-25T15:51:13Z",
        "updatedAt" : "2021-02-26T12:01:37Z",
        "lastEditedBy" : "6401b20f-26b1-4a7c-8433-dc789c15b9e1",
        "tags" : [
        ]
      }
    ],
    "commit" : "6b430f818d79fbaa7c00b37b290ce8eb1a498eba",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +210,214 @@\n\ndef validate_bool_kwarg(value, arg_name, none_allowed=True, int_allowed=False):\n    \"\"\"\n    Ensure that argument passed in arg_name can be interpreted as boolean."
  }
]