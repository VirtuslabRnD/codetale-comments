[
  {
    "id" : "99cb1f3f-f590-49cb-b1be-ac46addb866c",
    "prId" : 4868,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "05d60828-a798-4e7d-bcd9-c17d4492ff6c",
        "parentId" : null,
        "authorId" : "6f890fbc-4bdf-4397-95eb-a8225d4af04f",
        "body" : "is this actually still a TODO?\n",
        "createdAt" : "2013-09-27T03:43:31Z",
        "updatedAt" : "2013-09-27T03:43:31Z",
        "lastEditedBy" : "6f890fbc-4bdf-4397-95eb-a8225d4af04f",
        "tags" : [
        ]
      },
      {
        "id" : "cc4064c7-0774-407c-a8cb-bf23ca3eadeb",
        "parentId" : "05d60828-a798-4e7d-bcd9-c17d4492ff6c",
        "authorId" : "6f890fbc-4bdf-4397-95eb-a8225d4af04f",
        "body" : "@cancan101 all I mean is that presumably you'd be making this decision now - right? Otherwise I'll merge.\n",
        "createdAt" : "2013-09-27T03:47:33Z",
        "updatedAt" : "2013-09-27T03:47:33Z",
        "lastEditedBy" : "6f890fbc-4bdf-4397-95eb-a8225d4af04f",
        "tags" : [
        ]
      },
      {
        "id" : "72e0a81f-fec8-44ab-9050-7fa04b70aa5c",
        "parentId" : "05d60828-a798-4e7d-bcd9-c17d4492ff6c",
        "authorId" : "a29d5616-bdfa-4811-b650-6808742d3435",
        "body" : "Yes. I have to take a look to figure out why some/all of the repr code was duplicated here.\n",
        "createdAt" : "2013-09-27T03:47:37Z",
        "updatedAt" : "2013-09-27T03:47:37Z",
        "lastEditedBy" : "a29d5616-bdfa-4811-b650-6808742d3435",
        "tags" : [
        ]
      },
      {
        "id" : "a8ff2429-27de-4a22-8eb1-4fc8a62828ec",
        "parentId" : "05d60828-a798-4e7d-bcd9-c17d4492ff6c",
        "authorId" : "a29d5616-bdfa-4811-b650-6808742d3435",
        "body" : "I saw what looked like code duplication but did not have the time to look into it.\n",
        "createdAt" : "2013-09-27T03:48:51Z",
        "updatedAt" : "2013-09-27T03:48:58Z",
        "lastEditedBy" : "a29d5616-bdfa-4811-b650-6808742d3435",
        "tags" : [
        ]
      }
    ],
    "commit" : "3b2f75e2a3d08540cdf008956e4f2d7f994e63f9",
    "line" : 41,
    "diffHunk" : "@@ -1,1 +260,264 @@        return 'B'\n\n    def __repr__(self): #TODO: Figure out if this should be merged into DateOffset\n        if hasattr(self, 'name') and len(self.name):\n            return self.name"
  },
  {
    "id" : "d98d968a-8de2-4297-bfc4-4e294ee96bd8",
    "prId" : 5004,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1d94a722-9d0f-4b23-96cd-c22af776eafd",
        "parentId" : null,
        "authorId" : "5c239b83-5a68-467b-a3f8-113a0fc494dc",
        "body" : "instead of `awesomeFunction` use `awesome_function`, ie separate words by underscores, same for below\n",
        "createdAt" : "2013-10-04T21:02:19Z",
        "updatedAt" : "2013-10-22T11:54:13Z",
        "lastEditedBy" : "5c239b83-5a68-467b-a3f8-113a0fc494dc",
        "tags" : [
        ]
      },
      {
        "id" : "239acca3-9adb-41c1-a8ad-a2e72a4f322f",
        "parentId" : "1d94a722-9d0f-4b23-96cd-c22af776eafd",
        "authorId" : "a29d5616-bdfa-4811-b650-6808742d3435",
        "body" : "@cpcloud \n\nWhich method are your referring to? If it is `getOffsetOfMonth`, i was jsut being consistent with existing code: https://github.com/cancan101/pandas/blob/6789ef89977e4b357a86a1d07d781c7cff703711/pandas/tseries/offsets.py#L738\n",
        "createdAt" : "2013-10-05T00:08:55Z",
        "updatedAt" : "2013-10-22T11:54:13Z",
        "lastEditedBy" : "a29d5616-bdfa-4811-b650-6808742d3435",
        "tags" : [
        ]
      },
      {
        "id" : "f4911486-43b5-40c6-9b57-6ef6f18f83f0",
        "parentId" : "1d94a722-9d0f-4b23-96cd-c22af776eafd",
        "authorId" : "5c239b83-5a68-467b-a3f8-113a0fc494dc",
        "body" : "okay no problemo then\n",
        "createdAt" : "2013-10-05T00:17:54Z",
        "updatedAt" : "2013-10-22T11:54:13Z",
        "lastEditedBy" : "5c239b83-5a68-467b-a3f8-113a0fc494dc",
        "tags" : [
        ]
      }
    ],
    "commit" : "de0563616bb48443a5f6286e1b7726ff780ec694",
    "line" : 111,
    "diffHunk" : "@@ -1,1 +858,862 @@        return self.getOffsetOfMonth(other + relativedelta(months=months, day=1))\n\n    def getOffsetOfMonth(self, dt):\n        m =  MonthEnd()\n        d = datetime(dt.year, dt.month, 1)"
  },
  {
    "id" : "44c3f8e5-86e8-4a47-85f6-4f2262671402",
    "prId" : 5004,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e4699700-4af3-4d99-97d2-69eac0df5d1c",
        "parentId" : null,
        "authorId" : "5c239b83-5a68-467b-a3f8-113a0fc494dc",
        "body" : "is `**kwds` necessary? fine if they are, just asking\n\nalso you might want to initialize superclasses like so:\n\n``` python\nsuper(_FY5253, self).__init__(n=n, **kwds)\n```\n\nlastly can you give this class a more meaningful name?\n",
        "createdAt" : "2013-10-04T21:06:13Z",
        "updatedAt" : "2013-10-22T11:54:13Z",
        "lastEditedBy" : "5c239b83-5a68-467b-a3f8-113a0fc494dc",
        "tags" : [
        ]
      },
      {
        "id" : "2a4db074-2927-45c7-868c-f722809b93c8",
        "parentId" : "e4699700-4af3-4d99-97d2-69eac0df5d1c",
        "authorId" : "a29d5616-bdfa-4811-b650-6808742d3435",
        "body" : "I usually code where it is acceptable to keep calling the constructors all the way to the base cases.\n\nUnfortunately that does not work with `DateOffset`.\n\nAdding `super(_FY5253, self).__init__(n=n, **kwds)` leads to:\n\n```\n  File \"/home/alex/git/pandas/pandas/tseries/offsets.py\", line 878, in __init__\n    super(_FY5253, self).__init__(n=n, **kwds)\n  File \"/home/alex/git/pandas/pandas/tseries/offsets.py\", line 79, in __init__\n    self._offset = relativedelta(**kwds)\nTypeError: __init__() got an unexpected keyword argument 'startingMonth'\n```\n\nbecause the `__init__` for `DateOffset` looks like:\n\n```\n    def __init__(self, n=1, **kwds):\n        self.n = int(n)\n        self.kwds = kwds\n        if len(kwds) > 0:\n            self._offset = relativedelta(**kwds)\n        else:\n            self._offset = timedelta(1)\n```\n\n`**kwds` is consistent with other Offsets. \n",
        "createdAt" : "2013-10-05T00:16:41Z",
        "updatedAt" : "2013-10-22T11:54:13Z",
        "lastEditedBy" : "a29d5616-bdfa-4811-b650-6808742d3435",
        "tags" : [
        ]
      },
      {
        "id" : "63f8681f-e18c-47f1-a640-edee1e1d2d59",
        "parentId" : "e4699700-4af3-4d99-97d2-69eac0df5d1c",
        "authorId" : "5c239b83-5a68-467b-a3f8-113a0fc494dc",
        "body" : "okay np\n",
        "createdAt" : "2013-10-05T00:18:54Z",
        "updatedAt" : "2013-10-22T11:54:13Z",
        "lastEditedBy" : "5c239b83-5a68-467b-a3f8-113a0fc494dc",
        "tags" : [
        ]
      }
    ],
    "commit" : "de0563616bb48443a5f6286e1b7726ff780ec694",
    "line" : null,
    "diffHunk" : "@@ -1,1 +1004,1008 @@    def __init__(self, n=1, **kwds):\n        self.n = n\n        self.startingMonth = kwds['startingMonth']\n        self.weekday = kwds[\"weekday\"]\n        "
  },
  {
    "id" : "52e21f25-7330-4d63-b4e7-2f2204012336",
    "prId" : 5004,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ef1402a7-bc67-4758-9007-9708bae4c13d",
        "parentId" : null,
        "authorId" : "5c239b83-5a68-467b-a3f8-113a0fc494dc",
        "body" : "i smell a function for the code below here :) .... there's only a few differences between what's under the `if` statement and what's under the `else`...see if you can abstract it a bit to make it more readable\n",
        "createdAt" : "2013-10-04T21:08:10Z",
        "updatedAt" : "2013-10-22T11:54:13Z",
        "lastEditedBy" : "5c239b83-5a68-467b-a3f8-113a0fc494dc",
        "tags" : [
        ]
      }
    ],
    "commit" : "de0563616bb48443a5f6286e1b7726ff780ec694",
    "line" : 216,
    "diffHunk" : "@@ -1,1 +1032,1036 @@        return year_end == dt\n    \n    def apply(self, other):\n        n = self.n\n        if n > 0:"
  },
  {
    "id" : "6bc5fb10-a1d3-43bc-838f-3bd4fdb6abae",
    "prId" : 5004,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "62113dba-d0d9-42a2-a982-15ca1574f01a",
        "parentId" : null,
        "authorId" : "5c239b83-5a68-467b-a3f8-113a0fc494dc",
        "body" : "again maybe abstract some of this into \"private\" methods (ones that start with an underscore)\n",
        "createdAt" : "2013-10-04T21:12:08Z",
        "updatedAt" : "2013-10-22T11:54:13Z",
        "lastEditedBy" : "5c239b83-5a68-467b-a3f8-113a0fc494dc",
        "tags" : [
        ]
      }
    ],
    "commit" : "de0563616bb48443a5f6286e1b7726ff780ec694",
    "line" : null,
    "diffHunk" : "@@ -1,1 +1190,1194 @@\n    def apply(self, other):\n        n = self.n\n        \n        if n > 0:"
  },
  {
    "id" : "f458620b-1597-4744-98a0-40a34d2f8648",
    "prId" : 5189,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "78514b4a-03d0-41c0-acb6-108c8572bb5a",
        "parentId" : null,
        "authorId" : "a29d5616-bdfa-4811-b650-6808742d3435",
        "body" : "what is the name argument? Is the suffix in the rule_code?\n",
        "createdAt" : "2013-10-13T19:21:16Z",
        "updatedAt" : "2013-10-14T04:24:20Z",
        "lastEditedBy" : "a29d5616-bdfa-4811-b650-6808742d3435",
        "tags" : [
        ]
      },
      {
        "id" : "de750f1c-3b72-47c6-9d62-07297c5af2e1",
        "parentId" : "78514b4a-03d0-41c0-acb6-108c8572bb5a",
        "authorId" : "6f890fbc-4bdf-4397-95eb-a8225d4af04f",
        "body" : "yeah, I'm going to change that for clarity.\n",
        "createdAt" : "2013-10-13T21:33:00Z",
        "updatedAt" : "2013-10-14T04:24:20Z",
        "lastEditedBy" : "6f890fbc-4bdf-4397-95eb-a8225d4af04f",
        "tags" : [
        ]
      }
    ],
    "commit" : "9c1bae402d4c302a033da7159096d9df288506b0",
    "line" : 64,
    "diffHunk" : "@@ -1,1 +243,247 @@    # way to get around weirdness with rule_code\n    @property\n    def _prefix(self):\n        raise NotImplementedError('Prefix not defined')\n"
  },
  {
    "id" : "620ec559-1685-4091-a33e-9709294f202f",
    "prId" : 5189,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "67e4fd29-1cb6-4e64-92b9-76c70dfb861a",
        "parentId" : null,
        "authorId" : "a29d5616-bdfa-4811-b650-6808742d3435",
        "body" : "What is the reason for setting the `_named` field here? This leads to some printing weirdness: https://github.com/pydata/pandas/pull/5148#issuecomment-39512808\n",
        "createdAt" : "2014-04-14T19:31:49Z",
        "updatedAt" : "2014-04-14T19:31:49Z",
        "lastEditedBy" : "a29d5616-bdfa-4811-b650-6808742d3435",
        "tags" : [
        ]
      },
      {
        "id" : "0caae188-4bd1-46a6-8d15-0a25a046ee74",
        "parentId" : "67e4fd29-1cb6-4e64-92b9-76c70dfb861a",
        "authorId" : "6f890fbc-4bdf-4397-95eb-a8225d4af04f",
        "body" : "to preserve the special case existing behavior for shorter offset names (i.e. there are offsets that are synonyms and we wanted to preserve their repr output in the console).\n",
        "createdAt" : "2014-04-14T21:49:12Z",
        "updatedAt" : "2014-04-14T21:49:12Z",
        "lastEditedBy" : "6f890fbc-4bdf-4397-95eb-a8225d4af04f",
        "tags" : [
        ]
      },
      {
        "id" : "c082985d-8e0c-4244-afcd-5b7a62e53868",
        "parentId" : "67e4fd29-1cb6-4e64-92b9-76c70dfb861a",
        "authorId" : "a29d5616-bdfa-4811-b650-6808742d3435",
        "body" : "The issue is depending how the same  offset is created , it will print\ndifferently.\nOn Apr 14, 2014 5:49 PM, \"Jeff Tratner\" notifications@github.com wrote:\n\n> In pandas/tseries/offsets.py:\n> \n> > +if not _np_version_under1p7:\n> > -    # Only 1.7+ supports nanosecond resolution\n> > -    prefix_mapping['N'] = Nano\n> >   +\n> >   +\n> >   +def _make_offset(key):\n> > -    \"\"\"Gets offset based on key. KeyError if prefix is bad, ValueError if\n> > -    suffix is bad. All handled by `get_offset` in tseries/frequencies. Not\n> > -    public.\"\"\"\n> > -    if key is None:\n> > -        return None\n> > -    split = key.replace('@', '-').split('-')\n> > -    klass = prefix_mapping[split[0]]\n> > -    # handles case where there's no suffix (and will TypeError if too many '-')\n> > -    obj = klass._from_name(*split[1:])\n> > -    obj._named = key\n> \n> to preserve the special case existing behavior for shorter offset names\n> (i.e. there are offsets that are synonyms and we wanted to preserve their\n> repr output in the console).\n> \n> —\n> Reply to this email directly or view it on GitHubhttps://github.com/pydata/pandas/pull/5189/files#r11610049\n> .\n",
        "createdAt" : "2014-04-14T22:32:26Z",
        "updatedAt" : "2014-04-14T22:32:26Z",
        "lastEditedBy" : "a29d5616-bdfa-4811-b650-6808742d3435",
        "tags" : [
        ]
      },
      {
        "id" : "4fe772ce-8bc8-4cce-a6be-a85aeea6f9bf",
        "parentId" : "67e4fd29-1cb6-4e64-92b9-76c70dfb861a",
        "authorId" : "6f890fbc-4bdf-4397-95eb-a8225d4af04f",
        "body" : "okay. 6 months later, I agree with you that we should just have canonicalized offset names.\n",
        "createdAt" : "2014-04-15T02:14:59Z",
        "updatedAt" : "2014-04-15T02:14:59Z",
        "lastEditedBy" : "6f890fbc-4bdf-4397-95eb-a8225d4af04f",
        "tags" : [
        ]
      },
      {
        "id" : "68b59d96-25b1-4130-9317-d1184ae59596",
        "parentId" : "67e4fd29-1cb6-4e64-92b9-76c70dfb861a",
        "authorId" : "6f890fbc-4bdf-4397-95eb-a8225d4af04f",
        "body" : "looking back, that was probably a mistake on my part, I'm okay with changing it\n",
        "createdAt" : "2014-04-15T02:16:40Z",
        "updatedAt" : "2014-04-15T02:16:40Z",
        "lastEditedBy" : "6f890fbc-4bdf-4397-95eb-a8225d4af04f",
        "tags" : [
        ]
      }
    ],
    "commit" : "9c1bae402d4c302a033da7159096d9df288506b0",
    "line" : 703,
    "diffHunk" : "@@ -1,1 +1469,1473 @@    # handles case where there's no suffix (and will TypeError if too many '-')\n    obj = klass._from_name(*split[1:])\n    obj._named = key\n    return obj"
  },
  {
    "id" : "daf9daf9-2001-4b99-8c0e-01429ff04c67",
    "prId" : 5292,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "eda69bcd-e9a6-4a99-bac2-62f7fa454a8f",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "it seems that you would use relativedelta for everything (except nanoseconds)? is that right? how does this solve the problem?\n",
        "createdAt" : "2014-05-02T18:52:48Z",
        "updatedAt" : "2014-08-19T20:54:15Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "442c718e-3350-4a4d-bb2c-3e090257d000",
        "parentId" : "eda69bcd-e9a6-4a99-bac2-62f7fa454a8f",
        "authorId" : "736552dc-d916-4dba-807f-243fd3b79abd",
        "body" : "`relativedelta` is used for all singluar offsets and plural offsets greater than daily frequency. With this change these calculations are done in UTC. \n\nAlso with this change, `timedelta` is now used for all plural offsets (hours, minutes, seconds) under daily frequency.\n",
        "createdAt" : "2014-05-02T19:04:37Z",
        "updatedAt" : "2014-08-19T20:54:15Z",
        "lastEditedBy" : "736552dc-d916-4dba-807f-243fd3b79abd",
        "tags" : [
        ]
      },
      {
        "id" : "ddc957a7-5a27-4057-94bd-6e7561004f8d",
        "parentId" : "eda69bcd-e9a6-4a99-bac2-62f7fa454a8f",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "so why are `minutes,hours,seconds,microseconds` here?\n",
        "createdAt" : "2014-05-02T19:06:05Z",
        "updatedAt" : "2014-08-19T20:54:15Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "86c9950e-7393-46b2-9199-78d29325ef77",
        "parentId" : "eda69bcd-e9a6-4a99-bac2-62f7fa454a8f",
        "authorId" : "736552dc-d916-4dba-807f-243fd3b79abd",
        "body" : "mintue, hour, second, ... -- singular not plural. Because you can do:\n\n```\nIn [7]: pd.Timestamp(\"2013-11-02 00:45\") + pd.DateOffset(minute=30)\nOut[7]: Timestamp('2013-11-02 00:30:00', tz=None)\n```\n",
        "createdAt" : "2014-05-02T19:47:36Z",
        "updatedAt" : "2014-08-19T20:54:15Z",
        "lastEditedBy" : "736552dc-d916-4dba-807f-243fd3b79abd",
        "tags" : [
        ]
      },
      {
        "id" : "f09a0035-240a-47ab-b739-cb6a5382223c",
        "parentId" : "eda69bcd-e9a6-4a99-bac2-62f7fa454a8f",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "why wouldn't you do ALL calculations then using relativedelta? why is timedelta not good?\nshouldn't you ALWAYS do them in UTC (e.g. convert to/from utc if their is a timezone, then back)\n",
        "createdAt" : "2014-05-02T19:50:43Z",
        "updatedAt" : "2014-08-19T20:54:15Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "93ea90dc-2dbd-41f1-b1e9-a7bfd0cead3f",
        "parentId" : "eda69bcd-e9a6-4a99-bac2-62f7fa454a8f",
        "authorId" : "736552dc-d916-4dba-807f-243fd3b79abd",
        "body" : "if you do all calculations with `relativedelta` in UTC, then sub-daily transitions across DST fail, e.g.\n\n```\n>> t = Timestamp(\"2013-11-02 22:00\", tz='US/Pacific')\nTimestamp('2013-11-02 22:00:00-0700', tz='US/Pacific')\n# fall back adds an extra hour. so 10pm + 8hrs should be 5am\n>> Timestamp(\"2013-11-02 22:00\", tz='US/Pacific') + relativedelta(hours=8)\nTimestamp('2013-11-03 06:00:00-0800', tz='US/Pacific')\n```\n\nusing `timedelta` fixes this problem:\n\n```\n >> Timestamp(\"2013-11-02 22:00\", tz='US/Pacific') + timedelta(hours=8)\n Timestamp('2013-11-03 05:00:00-0800', tz='US/Pacific')\n```\n",
        "createdAt" : "2014-05-02T20:03:56Z",
        "updatedAt" : "2014-08-19T20:54:15Z",
        "lastEditedBy" : "736552dc-d916-4dba-807f-243fd3b79abd",
        "tags" : [
        ]
      },
      {
        "id" : "5e107184-ea26-4d53-b9b9-b860126a0def",
        "parentId" : "eda69bcd-e9a6-4a99-bac2-62f7fa454a8f",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "I am still confused why you have this `_kwds_use_relativedelta` its seems that ALL keywords fall into this bucket, so what is it doing?\n",
        "createdAt" : "2014-06-10T15:35:22Z",
        "updatedAt" : "2014-08-19T20:54:15Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "f5c72bb5-1a0e-4e60-af1f-be028591856f",
        "parentId" : "eda69bcd-e9a6-4a99-bac2-62f7fa454a8f",
        "authorId" : "736552dc-d916-4dba-807f-243fd3b79abd",
        "body" : "`hours`, `minutes`, `seconds`, ... (all plural and sub-daily freq.) are not included\n",
        "createdAt" : "2014-06-10T15:45:41Z",
        "updatedAt" : "2014-08-19T20:54:15Z",
        "lastEditedBy" : "736552dc-d916-4dba-807f-243fd3b79abd",
        "tags" : [
        ]
      },
      {
        "id" : "bfa1248f-9c3b-4d8b-bffc-80301092f0f1",
        "parentId" : "eda69bcd-e9a6-4a99-bac2-62f7fa454a8f",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you explain why if I passed `seconds` rather than `second` what the issue is exactly? (as they both get resolved to `5s` for example)\n",
        "createdAt" : "2014-06-10T15:47:35Z",
        "updatedAt" : "2014-08-19T20:54:15Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "7217c11e-9c5b-4c8c-8cb3-ba423df2db72",
        "parentId" : "eda69bcd-e9a6-4a99-bac2-62f7fa454a8f",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "why don't you just tranlsate the plurals then, isn't it simpler?\n",
        "createdAt" : "2014-06-10T15:48:01Z",
        "updatedAt" : "2014-08-19T20:54:15Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "99bf6a40-c831-45c2-a6f1-d0d75a68a36c",
        "parentId" : "eda69bcd-e9a6-4a99-bac2-62f7fa454a8f",
        "authorId" : "736552dc-d916-4dba-807f-243fd3b79abd",
        "body" : "plurals and singular are not the same -- plurals behave how you would expect, but singulars are used for fixing the time part:\n\n```\nIn [2]: t = pd.Timestamp('2014-06-10 8am')\n\nIn [3]: t + pd.DateOffset(hour=9)\nOut[3]: Timestamp('2014-06-10 09:00:00', tz=None)\n\nIn [4]: t + pd.DateOffset(hours=9)\nOut[4]: Timestamp('2014-06-10 17:00:00', tz=None)\n```\n",
        "createdAt" : "2014-06-10T15:53:37Z",
        "updatedAt" : "2014-08-19T20:54:15Z",
        "lastEditedBy" : "736552dc-d916-4dba-807f-243fd3b79abd",
        "tags" : [
        ]
      },
      {
        "id" : "5b2ad5ef-6ba0-49e0-b59c-51e311407e81",
        "parentId" : "eda69bcd-e9a6-4a99-bac2-62f7fa454a8f",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "this seems like a bug to me, eg. `t + pd.offsets.Hour(9)` == `t + pd.DateOffset(hours=9) == t + timedelta(hours=9)` (and the first is prob how most users do this). Are their tests for the former anywhere? can you point them out.\n\nIs this documented anywhere?\n",
        "createdAt" : "2014-06-10T15:57:06Z",
        "updatedAt" : "2014-08-19T20:54:15Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "7f853913-015d-456b-bdf5-25b7c8887f35",
        "parentId" : "eda69bcd-e9a6-4a99-bac2-62f7fa454a8f",
        "authorId" : "736552dc-d916-4dba-807f-243fd3b79abd",
        "body" : "I couldn't find any tests or documentation for the singular form anywhere in pandas. However, I think this behavior is inherited from `dateutil.relativedelta`, which [mentions it in passing in the documentation](https://labix.org/python-dateutil#head-ba5ffd4df8111d1b83fc194b97ebecf837add454): \n\n```\nyear, month, day, hour, minute, second, microsecond\n    Absolute information.\nyears, months, weeks, days, hours, minutes, seconds, microseconds\n    Relative information, may be negative.\n```\n",
        "createdAt" : "2014-06-10T16:09:50Z",
        "updatedAt" : "2014-08-19T20:54:15Z",
        "lastEditedBy" : "736552dc-d916-4dba-807f-243fd3b79abd",
        "tags" : [
        ]
      },
      {
        "id" : "eb6ee646-482b-4f21-936b-125e14032e0e",
        "parentId" : "eda69bcd-e9a6-4a99-bac2-62f7fa454a8f",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can u put that link on the linked issue #7418\n",
        "createdAt" : "2014-06-10T16:12:59Z",
        "updatedAt" : "2014-08-19T20:54:15Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "2a423345654a00371513859a1584835f8ea98216",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +153,157 @@    _cacheable = False\n    _normalize_cache = True\n    _kwds_use_relativedelta = (\n        'years', 'months', 'weeks', 'days',\n        'year', 'month', 'week', 'day', 'weekday',"
  },
  {
    "id" : "1fa56a82-397c-4fce-a5e8-074e9893c3e0",
    "prId" : 7195,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/7195#pullrequestreview-84593859",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "685d9a0a-a3cd-424e-b094-5c22ab24908b",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "@sinhrks This checks `self.n >= 0` while pretty much all other offsets check `self.n > 0`.  Is this difference intentional?  If so I'd like to add a brief comment explaining why.\r\n\r\nUp-to-date location for this check:\r\nhttps://github.com/pandas-dev/pandas/blob/master/pandas/tseries/offsets.py#L2129\r\n\r\nExamples for other offset classes:\r\nhttps://github.com/pandas-dev/pandas/blob/master/pandas/tseries/offsets.py#L950\r\nhttps://github.com/pandas-dev/pandas/blob/master/pandas/tseries/offsets.py#L1409\r\nhttps://github.com/pandas-dev/pandas/blob/master/pandas/tseries/offsets.py#L1572\r\nhttps://github.com/pandas-dev/pandas/blob/master/pandas/tseries/offsets.py#L1053\r\n",
        "createdAt" : "2017-12-19T21:17:26Z",
        "updatedAt" : "2017-12-19T21:17:26Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "50902a230a47da576597bdcb32c64482755db46d",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +1847,1851 @@        \n        # NOTE: easter returns a datetime.date so we have to convert to type of other\n        if self.n >= 0:\n            if other >= currentEaster:\n                new = easter(other.year + self.n)"
  },
  {
    "id" : "97e23bd7-c970-481f-b1ee-2330c1e78860",
    "prId" : 7697,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d87692c2-e812-4fca-8111-7e374b47e7da",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "shouldn't this be `result= tslib._localize_pydatetime(result, tz)` as well here?\n",
        "createdAt" : "2014-07-22T18:03:48Z",
        "updatedAt" : "2014-07-24T20:09:46Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "f18e2431-d873-4063-8aad-6ca4b6e904ab",
        "parentId" : "d87692c2-e812-4fca-8111-7e374b47e7da",
        "authorId" : "2bab095f-50fb-401e-ab9e-c09e00e2b00c",
        "body" : "Because this is a flow for `Timestamp`, no need to care for `datetime` here.\n",
        "createdAt" : "2014-07-24T11:44:25Z",
        "updatedAt" : "2014-07-24T20:09:46Z",
        "lastEditedBy" : "2bab095f-50fb-401e-ab9e-c09e00e2b00c",
        "tags" : [
        ]
      },
      {
        "id" : "f5bd11b3-04c1-440b-aa38-7656a7fc6ba0",
        "parentId" : "d87692c2-e812-4fca-8111-7e374b47e7da",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "hmm, maybe add a note (or you can simply use the other routine). I found it confusing?\n",
        "createdAt" : "2014-07-24T11:52:30Z",
        "updatedAt" : "2014-07-24T20:09:46Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "4d30f1a6-f6eb-4fe4-b148-375d5028f232",
        "parentId" : "d87692c2-e812-4fca-8111-7e374b47e7da",
        "authorId" : "2bab095f-50fb-401e-ab9e-c09e00e2b00c",
        "body" : "OK. Modified to use `tslib._localize_pydatetime(result, tz)` to avoid any confusion.\n",
        "createdAt" : "2014-07-24T13:30:53Z",
        "updatedAt" : "2014-07-24T20:09:46Z",
        "lastEditedBy" : "2bab095f-50fb-401e-ab9e-c09e00e2b00c",
        "tags" : [
        ]
      }
    ],
    "commit" : "458ccf03842ae82a4f7d4d021a294acb06582fbd",
    "line" : 57,
    "diffHunk" : "@@ -1,1 +74,78 @@                    result = Timestamp(value + nano)\n\n            if tz is not None and result.tzinfo is None:\n                result = tslib._localize_pydatetime(result, tz)\n"
  },
  {
    "id" : "bdcaef18-ff37-4961-bc40-9db5a43e231a",
    "prId" : 8293,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "25d2f9a5-64a7-4320-a7ee-4f683771c51a",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "this can prob be cached_readonly \n",
        "createdAt" : "2014-09-20T00:38:21Z",
        "updatedAt" : "2014-10-04T12:28:14Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "cfbc29f4-3bea-49a1-a668-fac94cdf75ea",
        "parentId" : "25d2f9a5-64a7-4320-a7ee-4f683771c51a",
        "authorId" : "48aa17b3-3af5-4b25-aa27-1e245ffb6d43",
        "body" : "What do you mean by this? \n",
        "createdAt" : "2014-09-20T00:58:24Z",
        "updatedAt" : "2014-10-04T12:28:14Z",
        "lastEditedBy" : "48aa17b3-3af5-4b25-aa27-1e245ffb6d43",
        "tags" : [
        ]
      },
      {
        "id" : "3bf92968-abc5-496d-8a85-5e6b99777d17",
        "parentId" : "25d2f9a5-64a7-4320-a7ee-4f683771c51a",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "it's a decorator that will cache the property (search for it see in action)\n",
        "createdAt" : "2014-09-20T01:00:07Z",
        "updatedAt" : "2014-10-04T12:28:14Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "30d29792-0c56-4213-b1ba-64abd50ae78c",
        "parentId" : "25d2f9a5-64a7-4320-a7ee-4f683771c51a",
        "authorId" : "48aa17b3-3af5-4b25-aa27-1e245ffb6d43",
        "body" : "```\n@cache_readonly\ndef _should_cache(self):\n         return self.isAnchored() and self._cacheable\n```\n\nIs this what you are looking for or do you want to change something about the class variable `_cacheable`? \n",
        "createdAt" : "2014-09-25T13:11:49Z",
        "updatedAt" : "2014-10-04T12:28:14Z",
        "lastEditedBy" : "48aa17b3-3af5-4b25-aa27-1e245ffb6d43",
        "tags" : [
        ]
      },
      {
        "id" : "096a0d4e-8635-4bcf-8bb2-c6f311dffd05",
        "parentId" : "25d2f9a5-64a7-4320-a7ee-4f683771c51a",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "no I was referring to the kwargs that are passed in, but maybe moot depending what else you changed\n",
        "createdAt" : "2014-09-26T16:00:52Z",
        "updatedAt" : "2014-10-04T12:28:14Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "68f626872676604f34190580df23d9653a389e03",
    "line" : 2,
    "diffHunk" : "@@ -1,1 +224,228 @@    def _should_cache(self):\n        return self.isAnchored() and self._cacheable\n\n    def _params(self):\n        all_paras = dict(list(vars(self).items()) + list(self.kwds.items()))"
  },
  {
    "id" : "2880efbe-df2f-44ac-a79d-e1b552a72610",
    "prId" : 8293,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fa733664-cefb-4a54-9855-d4c4b77df35e",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "Need some pickle tests (and maybe some for compat with 0.14.1)\nuse self.round_trip_pickle (in the test case); is calendar always defined here?\n",
        "createdAt" : "2014-10-03T22:57:40Z",
        "updatedAt" : "2014-10-04T12:28:14Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "83d06b8a-29f1-4d84-98fa-3b3a05496820",
        "parentId" : "fa733664-cefb-4a54-9855-d4c4b77df35e",
        "authorId" : "48aa17b3-3af5-4b25-aa27-1e245ffb6d43",
        "body" : "`calendar` is set in **init**\n",
        "createdAt" : "2014-10-04T00:04:10Z",
        "updatedAt" : "2014-10-04T12:28:14Z",
        "lastEditedBy" : "48aa17b3-3af5-4b25-aa27-1e245ffb6d43",
        "tags" : [
        ]
      },
      {
        "id" : "9bedea07-0303-4cfa-850b-d2c3ab635f37",
        "parentId" : "fa733664-cefb-4a54-9855-d4c4b77df35e",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "sorry thought this was something else\n",
        "createdAt" : "2014-10-04T00:05:36Z",
        "updatedAt" : "2014-10-04T12:28:14Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "68f626872676604f34190580df23d9653a389e03",
    "line" : 105,
    "diffHunk" : "@@ -1,1 +614,618 @@        \"\"\"Return a pickleable state\"\"\"\n        state = self.__dict__.copy()\n        del state['calendar']\n        return state\n"
  },
  {
    "id" : "9ebe6fcc-69da-4dd9-b91b-f59ea9e69425",
    "prId" : 8293,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "17995ea5-3eb3-4f9f-b0c1-b9756d12f978",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "why use kwds here\nbetter to just pass the arguments no?\n",
        "createdAt" : "2014-10-04T11:43:53Z",
        "updatedAt" : "2014-10-04T12:28:14Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "294266dd-3a0d-4f88-9b7a-20b35002d034",
        "parentId" : "17995ea5-3eb3-4f9f-b0c1-b9756d12f978",
        "authorId" : "48aa17b3-3af5-4b25-aa27-1e245ffb6d43",
        "body" : "You cannot pass an empty list of holidays to `np.busdaycalendar` - raises an error. So to avoid repeating the `try` statement `kwargs` are built up\n",
        "createdAt" : "2014-10-04T11:51:01Z",
        "updatedAt" : "2014-10-04T12:28:14Z",
        "lastEditedBy" : "48aa17b3-3af5-4b25-aa27-1e245ffb6d43",
        "tags" : [
        ]
      },
      {
        "id" : "eedef4f6-4396-49b9-a5a3-2b21c16392dc",
        "parentId" : "17995ea5-3eb3-4f9f-b0c1-b9756d12f978",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "ok\n",
        "createdAt" : "2014-10-04T11:51:50Z",
        "updatedAt" : "2014-10-04T12:28:14Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "68f626872676604f34190580df23d9653a389e03",
    "line" : 91,
    "diffHunk" : "@@ -1,1 +598,602 @@\n        try:\n            busdaycalendar = np.busdaycalendar(**kwargs)\n        except:\n            # Check we have the required numpy version"
  },
  {
    "id" : "9b719da8-cce8-4dc3-9566-d4d252ce08cf",
    "prId" : 10744,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "73732996-165e-40f1-ab2f-2d41649b5eab",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "add versionadded\n",
        "createdAt" : "2015-08-13T10:36:15Z",
        "updatedAt" : "2015-08-13T12:16:17Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "ac975417636ae37eaa14dc3d5c23db80ceaf0a97",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +237,241 @@        \"\"\"\n        Vectorized apply of DateOffset to DatetimeIndex,\n        raises NotImplentedError for offsets without a\n        vectorized implementation\n"
  },
  {
    "id" : "0184ba09-2ecd-4f88-96d0-5a46a5876d16",
    "prId" : 17318,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/17318#pullrequestreview-63000852",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c7b71871-88f1-410f-a4df-7ec0176b9eb9",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "this whole thing should just be moved to a separate function, much more clear this way",
        "createdAt" : "2017-08-24T12:51:01Z",
        "updatedAt" : "2017-09-23T16:21:47Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "a4df62b3-50b5-4d4c-9f05-9ca173c6a7eb",
        "parentId" : "c7b71871-88f1-410f-a4df-7ec0176b9eb9",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Not sure what you're referring to as \"this whole thing\".",
        "createdAt" : "2017-08-24T16:17:29Z",
        "updatedAt" : "2017-09-23T16:21:47Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "3ce59bea-2ad8-4a77-9c0f-c14ade0b7cc4",
        "parentId" : "c7b71871-88f1-410f-a4df-7ec0176b9eb9",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "this formatting function (e.g. repr should just call it, passing parameters in).",
        "createdAt" : "2017-09-15T10:14:08Z",
        "updatedAt" : "2017-09-23T16:21:47Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "e52a791fab1a98ccb9397880a0a4c496cf800990",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +330,334 @@        else:\n            plural = ''\n\n        n_str = \"\"\n        if self.n != 1:"
  },
  {
    "id" : "294d938d-f78b-427d-9468-ba5fd35fb0d1",
    "prId" : 17318,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/17318#pullrequestreview-63077695",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6e49ff00-b819-4067-893b-de02a7b05f01",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "try not to add new things which just clutter up",
        "createdAt" : "2017-09-15T10:15:03Z",
        "updatedAt" : "2017-09-23T16:21:47Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "e754c191-7cae-432e-a653-106a004ea373",
        "parentId" : "6e49ff00-b819-4067-893b-de02a7b05f01",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "`_offset_str` is currently a method of `BusinessDay`, which has its own implementation of `freqstr`.  Adding this dummy method lets us get rid of the duplicate freqstr method.  Same idea with `__repr__/_repr_attrs`.  Strictly less clutter.",
        "createdAt" : "2017-09-15T15:23:50Z",
        "updatedAt" : "2017-09-23T16:21:47Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "e52a791fab1a98ccb9397880a0a4c496cf800990",
    "line" : 81,
    "diffHunk" : "@@ -1,1 +523,527 @@        return fstr\n\n    def _offset_str(self):\n        return ''\n"
  },
  {
    "id" : "ce043ce8-b6dd-4db9-b9ed-9a5385f23799",
    "prId" : 17318,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/17318#pullrequestreview-64709547",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d7b83f61-4745-4c01-9b0a-fa500a033ae2",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "is this still needed?",
        "createdAt" : "2017-09-22T21:43:20Z",
        "updatedAt" : "2017-09-23T16:21:47Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "d74aa63e-c80f-45b6-a883-8d670c4b4113",
        "parentId" : "d7b83f61-4745-4c01-9b0a-fa500a033ae2",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Yes.  Not all subclasses define the `_offset` attribute.  That is something I intend to standardize, but this PR is explicitly intended to be limited in scope.",
        "createdAt" : "2017-09-22T22:00:09Z",
        "updatedAt" : "2017-09-23T16:21:47Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "e52a791fab1a98ccb9397880a0a4c496cf800990",
    "line" : 73,
    "diffHunk" : "@@ -1,1 +515,519 @@\n        try:\n            if self._offset:\n                fstr += self._offset_str()\n        except AttributeError:"
  },
  {
    "id" : "bf98b22e-6876-41ea-8ba5-1a4b5a4346f5",
    "prId" : 17458,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/17458#pullrequestreview-65323424",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ec4b235c-bcf1-4b29-9299-fb61e354eeb0",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "is this consistent with other freq signatures?",
        "createdAt" : "2017-09-25T23:27:05Z",
        "updatedAt" : "2017-10-06T03:52:49Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "47474c72-fcb2-4cc7-b185-57ffe3355d05",
        "parentId" : "ec4b235c-bcf1-4b29-9299-fb61e354eeb0",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "All the other signatures are `(self, n=1, normalize=False, ...`.  In the status quo this is an outlier.",
        "createdAt" : "2017-09-26T00:35:40Z",
        "updatedAt" : "2017-10-06T03:52:49Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "19bb1971-0323-4aec-90e6-eaef884c7f7f",
        "parentId" : "ec4b235c-bcf1-4b29-9299-fb61e354eeb0",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "yes that's fine. see my comment below though.",
        "createdAt" : "2017-09-26T13:19:24Z",
        "updatedAt" : "2017-10-06T03:52:49Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "2f6efe66-aec8-4e7b-8963-f0448e5aa80f",
        "parentId" : "ec4b235c-bcf1-4b29-9299-fb61e354eeb0",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "this is fine, in an ideal world we would change it but can't now",
        "createdAt" : "2017-09-26T18:53:28Z",
        "updatedAt" : "2017-10-06T03:52:49Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "086b48528d5745e783d45dd779a931b531436f35",
    "line" : 100,
    "diffHunk" : "@@ -1,1 +1126,1130 @@    _min_day_of_month = 2\n\n    def __init__(self, n=1, normalize=False, day_of_month=None):\n        if day_of_month is None:\n            self.day_of_month = self._default_day_of_month"
  },
  {
    "id" : "2ab90e2b-41ca-4edb-9ddf-daadf7e82660",
    "prId" : 17458,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/17458#pullrequestreview-65494598",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1f5a359c-9350-47a5-9bfa-2cecfca55239",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "is there a test for this as weekday=None? isn't that an error?",
        "createdAt" : "2017-09-25T23:28:03Z",
        "updatedAt" : "2017-10-06T03:52:49Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "24ae1f6b-09f5-4e05-b56e-3da650d218af",
        "parentId" : "1f5a359c-9350-47a5-9bfa-2cecfca55239",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "It is an error, though a different one in Py2 vs Py3.  In the status quo not passing a weekday explicitly will raise a KeyError.  Default to Monday I guess?",
        "createdAt" : "2017-09-26T00:39:20Z",
        "updatedAt" : "2017-10-06T03:52:49Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "960ca56d-7b61-48cf-a4fa-f4d36634bc57",
        "parentId" : "1f5a359c-9350-47a5-9bfa-2cecfca55239",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "no if weekday is None, just raise a value error, in reality this should actually be the first (and a required parameter), but I guess that would be hard to change. Don't set defaults, raise",
        "createdAt" : "2017-09-26T13:19:08Z",
        "updatedAt" : "2017-10-06T03:52:49Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "34beb199-96ce-49b6-bdfa-882ee8a052fe",
        "parentId" : "1f5a359c-9350-47a5-9bfa-2cecfca55239",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Are you suggesting it should be `__init__(self, weekday, n=1, normalize=False)`?  I see some appeal to that, but there is a lot of symmetry with other signatures all starting with `(self, n=1, normalize=False, ...)`.",
        "createdAt" : "2017-09-26T15:41:29Z",
        "updatedAt" : "2017-10-06T03:52:49Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "a424d315-40c2-4a85-81e9-5128307bde0f",
        "parentId" : "1f5a359c-9350-47a5-9bfa-2cecfca55239",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "see my comment above. this is ok for now. actually weekday is optional, so this is fine.",
        "createdAt" : "2017-09-26T18:54:30Z",
        "updatedAt" : "2017-10-06T03:52:49Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "99add3d3-5caf-471c-a4a1-2a770dd4f68d",
        "parentId" : "1f5a359c-9350-47a5-9bfa-2cecfca55239",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Two things.  First, here and in other places you say \"this is fine\" but I don't know whether you're referring to the PR or the thing the PR is fixing.  Based on the go-ahead you've given below to look over timeseries.rst I'm assuming you mean the PR version is fine, just heads up for ways I'm liable to get confused next time around.\r\n\r\n> actually weekday is optional,\r\n\r\nUnder the status quo, failing to pass `weekday` raises a `KeyError`.  In the PR, not passing anything will raise a ValueError in py2 and TypeError in py3.  (The same errors would result in the status quo if a user passed `None` explicitly)",
        "createdAt" : "2017-09-27T04:06:11Z",
        "updatedAt" : "2017-10-06T03:52:49Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "d36e1a35-1496-4a00-b9bb-9147039f1930",
        "parentId" : "1f5a359c-9350-47a5-9bfa-2cecfca55239",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "I never mean this entire PR is fine. If that was the case I wouldn't have any other comments. Individual comments are revering to the specific line/section where I make it.",
        "createdAt" : "2017-09-27T10:23:34Z",
        "updatedAt" : "2017-10-06T03:52:49Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "086b48528d5745e783d45dd779a931b531436f35",
    "line" : 259,
    "diffHunk" : "@@ -1,1 +1760,1764 @@    \"\"\"\n\n    def __init__(self, n=1, normalize=False, weekday=None):\n        self.n = n\n        self.normalize = normalize"
  },
  {
    "id" : "b1b047e0-2105-4509-a83d-319e62c0a8fd",
    "prId" : 17458,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/17458#pullrequestreview-65065102",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a40b2bc9-74c8-491b-a7d9-a6ce89e4edb6",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you make an issue that this should be deprecated to ``starting_month`` (and prob others like this)",
        "createdAt" : "2017-09-25T23:28:32Z",
        "updatedAt" : "2017-10-06T03:52:49Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "086b48528d5745e783d45dd779a931b531436f35",
    "line" : 281,
    "diffHunk" : "@@ -1,1 +1836,1840 @@    #       point\n\n    def __init__(self, n=1, normalize=False, startingMonth=None):\n        self.n = n\n        self.normalize = normalize"
  },
  {
    "id" : "f7b0e97e-80a4-43e7-804b-db099b908719",
    "prId" : 17830,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/17830#pullrequestreview-72653723",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7159786a-947b-428d-b929-d3ac0d2b44bb",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can you add a note in other api changes, that CacheableOffset & Weekday are no longer public (prob not ever used  publicly but who knowns).",
        "createdAt" : "2017-10-27T23:47:51Z",
        "updatedAt" : "2017-10-28T06:04:52Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "ced2c8d24b3d5f2fbbb0d20843b1007e6ca49e40",
    "line" : 41,
    "diffHunk" : "@@ -1,1 +119,123 @@# DateOffset\n\n\nclass DateOffset(object):\n    \"\"\""
  },
  {
    "id" : "5976e17b-0868-4864-a47c-cb756efa4d6a",
    "prId" : 18218,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/18218#pullrequestreview-75861924",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e926590e-60b2-4a7a-a9ad-1a960a3215c9",
        "parentId" : null,
        "authorId" : "51189123-86a2-400a-9762-6816882b6f12",
        "body" : "@jreback : Thoughts?",
        "createdAt" : "2017-11-10T17:16:00Z",
        "updatedAt" : "2017-11-12T00:22:02Z",
        "lastEditedBy" : "51189123-86a2-400a-9762-6816882b6f12",
        "tags" : [
        ]
      },
      {
        "id" : "db5c991e-8093-4a24-95b1-7c95cb7e9184",
        "parentId" : "e926590e-60b2-4a7a-a9ad-1a960a3215c9",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "yeah to be honested I am not sure ``isAnchored`` is really necessary, but that's orthogonal",
        "createdAt" : "2017-11-10T19:41:41Z",
        "updatedAt" : "2017-11-12T00:22:02Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "21216a8fd21527e3c62032e62aeb956a040a2653",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +255,259 @@    def isAnchored(self):\n        # TODO: Does this make sense for the general case?  It would help\n        # if there were a canonical docstring for what isAnchored means.\n        return (self.n == 1)\n"
  },
  {
    "id" : "3b31ac39-71ed-407a-8a1b-ddb8420c8053",
    "prId" : 18218,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/18218#pullrequestreview-75861924",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "60f834ed-d03e-4e7c-8337-6da1aa35207b",
        "parentId" : null,
        "authorId" : "51189123-86a2-400a-9762-6816882b6f12",
        "body" : "I presume you're going to figure this out beforehand?",
        "createdAt" : "2017-11-10T17:16:14Z",
        "updatedAt" : "2017-11-12T00:22:02Z",
        "lastEditedBy" : "51189123-86a2-400a-9762-6816882b6f12",
        "tags" : [
        ]
      },
      {
        "id" : "f7655cc0-e273-4ea1-b950-6b58d6bcf666",
        "parentId" : "60f834ed-d03e-4e7c-8337-6da1aa35207b",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "You mean what the end of the error message should be?  That's orthogonal to this PR, but merits a reminder.",
        "createdAt" : "2017-11-10T17:17:49Z",
        "updatedAt" : "2017-11-12T00:22:02Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "7c64f824-0be7-42b8-b141-d4df7c11ea20",
        "parentId" : "60f834ed-d03e-4e7c-8337-6da1aa35207b",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "yeah not sure, @sinhrks wrote this originally.",
        "createdAt" : "2017-11-10T19:42:04Z",
        "updatedAt" : "2017-11-12T00:22:02Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "21216a8fd21527e3c62032e62aeb956a040a2653",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +725,729 @@            return result\n        else:\n            # TODO: Figure out the end of this sente\n            raise ApplyTypeError(\n                'Only know how to combine business hour with ')"
  },
  {
    "id" : "09c609fa-3ed1-4135-98a5-6b1da490f3e9",
    "prId" : 18226,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/18226#pullrequestreview-78759898",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c8a7fa62-ead2-43ee-8dfa-39ee901a97c1",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "same (and for other ones  you are adding)",
        "createdAt" : "2017-11-23T16:08:43Z",
        "updatedAt" : "2017-11-25T16:47:52Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "b4b9e153ab7e6310415a20f433152acbe5fbdb63",
    "line" : 61,
    "diffHunk" : "@@ -1,1 +2167,2171 @@    def __init__(self, n=1, normalize=False):\n        self.n = self._validate_n(n)\n        self.normalize = normalize\n        self.kwds = {}\n"
  },
  {
    "id" : "93dea0fa-4bdf-4098-92ec-e9cafaaf95e8",
    "prId" : 18350,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/18350#pullrequestreview-78577669",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6c307f54-2f60-4011-81ae-74c7f1f351af",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "can we hit these in tests",
        "createdAt" : "2017-11-19T15:07:34Z",
        "updatedAt" : "2017-11-19T15:07:38Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "312d968e-bfe9-453a-bfe0-219d3f4f1fe5",
        "parentId" : "6c307f54-2f60-4011-81ae-74c7f1f351af",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "It wasn't obvious to me how to hit it, so I left the note to try again next time around.  (which will be soon.  We're far from done with offsets PRs)",
        "createdAt" : "2017-11-19T18:08:23Z",
        "updatedAt" : "2017-11-19T18:08:23Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "4a2ee4e6-1e24-47f9-bbd0-da98dd8c372b",
        "parentId" : "6c307f54-2f60-4011-81ae-74c7f1f351af",
        "authorId" : "51189123-86a2-400a-9762-6816882b6f12",
        "body" : "@jbrockmendel : If you don't mind explaining, how do you know that this particular branch isn't hit?  What about the other branches?",
        "createdAt" : "2017-11-22T08:07:18Z",
        "updatedAt" : "2017-11-22T08:07:18Z",
        "lastEditedBy" : "51189123-86a2-400a-9762-6816882b6f12",
        "tags" : [
        ]
      },
      {
        "id" : "15796688-661b-49d4-a991-d513bc7200ae",
        "parentId" : "6c307f54-2f60-4011-81ae-74c7f1f351af",
        "authorId" : "51189123-86a2-400a-9762-6816882b6f12",
        "body" : "BTW, the changes themselves look **OK** but would like to get some more color on the questions I just posed to you before merging.",
        "createdAt" : "2017-11-22T08:09:30Z",
        "updatedAt" : "2017-11-22T08:09:30Z",
        "lastEditedBy" : "51189123-86a2-400a-9762-6816882b6f12",
        "tags" : [
        ]
      },
      {
        "id" : "5e70ff66-6799-4853-9f28-20e5b9bcbf44",
        "parentId" : "6c307f54-2f60-4011-81ae-74c7f1f351af",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Put in a bunch of `assert false` statements as a quick coverage check.  All the others were hit.",
        "createdAt" : "2017-11-22T15:06:10Z",
        "updatedAt" : "2017-11-22T15:26:34Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "887e511c-6f57-4aa9-8d3e-46ada78527c9",
        "parentId" : "6c307f54-2f60-4011-81ae-74c7f1f351af",
        "authorId" : "51189123-86a2-400a-9762-6816882b6f12",
        "body" : "Ah, I see.  From which test files did those `assert false` failures then originate?",
        "createdAt" : "2017-11-22T17:12:28Z",
        "updatedAt" : "2017-11-22T17:12:28Z",
        "lastEditedBy" : "51189123-86a2-400a-9762-6816882b6f12",
        "tags" : [
        ]
      },
      {
        "id" : "402503af-52dc-4853-a16a-27d744e49588",
        "parentId" : "6c307f54-2f60-4011-81ae-74c7f1f351af",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Almost certainly `tests.tseries.offsets.test_offsets`",
        "createdAt" : "2017-11-22T17:50:24Z",
        "updatedAt" : "2017-11-22T17:50:24Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "f733bfac-a912-4159-b6be-0263a9765581",
        "parentId" : "6c307f54-2f60-4011-81ae-74c7f1f351af",
        "authorId" : "51189123-86a2-400a-9762-6816882b6f12",
        "body" : "Okay, sounds good.  Have a look at those tests once I merge to see how we can increase coverage in this section of logic.",
        "createdAt" : "2017-11-22T21:01:19Z",
        "updatedAt" : "2017-11-22T21:01:29Z",
        "lastEditedBy" : "51189123-86a2-400a-9762-6816882b6f12",
        "tags" : [
        ]
      }
    ],
    "commit" : "47fa1b90ff10f36ba443ab08094d2bf246e97343",
    "line" : 80,
    "diffHunk" : "@@ -1,1 +2005,2009 @@        elif other == next_year:\n            n += 1\n            # TODO: Not hit in tests\n        elif n > 0:\n            if other < prev_year:"
  },
  {
    "id" : "103d9111-aaba-448e-aa78-f03c8fadf488",
    "prId" : 18489,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/18489#pullrequestreview-79014259",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b7b48610-b831-4e97-b8e3-c912065eaadb",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "prob should de-privatize these in offsets (``_int_to_month``)",
        "createdAt" : "2017-11-25T23:22:56Z",
        "updatedAt" : "2017-11-27T00:47:03Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "0e34b4da-2df0-44e3-ac00-369f1880341d",
        "parentId" : "b7b48610-b831-4e97-b8e3-c912065eaadb",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Sure",
        "createdAt" : "2017-11-26T00:44:26Z",
        "updatedAt" : "2017-11-27T00:47:03Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "c503c535e406edf54b6137b1c2362ded1f0a3e47",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +930,934 @@            return self.rule_code\n        else:\n            month = liboffsets._int_to_month[self.n]\n            return \"{code}-{month}\".format(code=self.rule_code,\n                                           month=month)"
  },
  {
    "id" : "fb9b7299-eb10-49f7-a65a-61ddc1f995bb",
    "prId" : 18762,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/18762#pullrequestreview-83956272",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bc08422e-1ffd-405c-8601-22856e239982",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Any idea if this is intentional?",
        "createdAt" : "2017-12-16T00:18:20Z",
        "updatedAt" : "2017-12-29T22:25:33Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "a5d9dee11784beda944f226b0363ca015ce5e79f",
    "line" : 256,
    "diffHunk" : "@@ -1,1 +2103,2107 @@        elif n < 0 and other > current_easter:\n            n += 1\n        # TODO: Why does this handle the 0 case the opposite of others?\n\n        # NOTE: easter returns a datetime.date so we have to convert to type of"
  },
  {
    "id" : "5a734f83-ec54-4011-9e76-8a236ab062b5",
    "prId" : 18875,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/18875#pullrequestreview-85135941",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d664cdb9-9705-403a-b0ec-71a213da7851",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "side issue. ``_localize_pydatetime`` is in the wrong place (its in tslib) should be in conversion.pyx. And It shouldn't just return on ``None`` as well, and needs a better doc-string. can you add to list.",
        "createdAt" : "2017-12-21T17:55:39Z",
        "updatedAt" : "2017-12-21T22:00:16Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "e71374f9be4404ca72fbcb63595a0f5405b29f23",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +135,139 @@    naive = other.replace(tzinfo=None)\n    shifted = naive + timedelta(days=days)\n    return tslib._localize_pydatetime(shifted, tz)\n\n"
  },
  {
    "id" : "08e3c367-773d-42e3-8d34-5da907c327ec",
    "prId" : 18952,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/18952#pullrequestreview-106748974",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "54b3e2e2-d3d8-467b-8b2d-dc0b288ecd03",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "hmm, might be better to actually add an offset here (e.g. a Day) which handles freq moves.",
        "createdAt" : "2018-03-25T23:07:37Z",
        "updatedAt" : "2018-07-30T20:07:58Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "9575b8fb-e738-436d-9e00-3c4fa565c7b2",
        "parentId" : "54b3e2e2-d3d8-467b-8b2d-dc0b288ecd03",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Day() and Timedelta(days=1) should be equivalent here, no?  I'd rather use Timedelta, since Day is a less well-known beast.\r\n\r\nAre there scenarios where a DST transition is traversed?",
        "createdAt" : "2018-03-25T23:49:32Z",
        "updatedAt" : "2018-07-30T20:07:58Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "5facfbe3-609b-46a4-8e16-9799bb345249",
        "parentId" : "54b3e2e2-d3d8-467b-8b2d-dc0b288ecd03",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "I am thinking this will correctly handle the B freqs. its IS possible DST is traversed, but we prob don't have tests for this (though maybe)",
        "createdAt" : "2018-03-25T23:52:34Z",
        "updatedAt" : "2018-07-30T20:07:58Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "a6716ca3a8eed559e9dceb14a6eb927a5fa4f4fd",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +1322,1326 @@\n        base = (base_period + roll).to_timestamp(how='end')\n        return base + off + Timedelta(1, 'ns') - Timedelta(1, 'D')\n\n    def onOffset(self, dt):"
  },
  {
    "id" : "166f7b13-e32b-46ff-ab36-b50f293b20f7",
    "prId" : 19036,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19036#pullrequestreview-86404627",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "12c223f5-f15a-4b61-8feb-53c0545815ae",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "you allow this below",
        "createdAt" : "2018-01-03T11:33:46Z",
        "updatedAt" : "2018-01-04T01:02:08Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "40f068eb-23e7-4611-96ee-27b1b5a07b69",
        "parentId" : "12c223f5-f15a-4b61-8feb-53c0545815ae",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "This is enforced in init.",
        "createdAt" : "2018-01-03T15:41:06Z",
        "updatedAt" : "2018-01-04T01:02:08Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "8b0c604e71c7c4fc2846e18f5d805f4bdbe9d689",
    "line" : 78,
    "diffHunk" : "@@ -1,1 +2029,2033 @@    @apply_wraps\n    def apply(self, other):\n        # Note: self.n == 0 is not allowed.\n        n = self.n\n"
  },
  {
    "id" : "bf6573d3-0fd0-43c7-a157-a0a83596540d",
    "prId" : 19398,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19398#pullrequestreview-93594253",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3c8442e1-fb7e-48c5-b4c1-250582d7b0bd",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "correct, can you separate this into 2 subsections and make clear the different behavior (via an example)\r\n\r\n```\r\nIn [1]: t = pd.Timestamp('20170101 09:10:11')\r\n\r\n# operate with the value\r\nIn [3]: t + DateOffset(years=2018)\r\nOut[3]: datetime.datetime(4035, 1, 1, 9, 10, 11)\r\n\r\nIn [5]: t + DateOffset(seconds=1)\r\nOut[5]: Timestamp('2017-01-01 09:10:12')\r\n\r\n# set the value\r\nIn [6]: t + DateOffset(second=1)\r\nOut[6]: Timestamp('2017-01-01 09:10:01')\r\n\r\nIn [8]: t + DateOffset(month=1)\r\nOut[8]: Timestamp('2017-01-01 09:10:11')\r\n```\r\n",
        "createdAt" : "2018-02-01T12:59:02Z",
        "updatedAt" : "2018-07-19T22:31:24Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "6d50d6cf-c99a-4e97-ab75-72706b77ef8c",
        "parentId" : "3c8442e1-fb7e-48c5-b4c1-250582d7b0bd",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "there is an issue to revisit this (IOW we should have 2 different offsets for this different behaviors)",
        "createdAt" : "2018-02-01T13:00:09Z",
        "updatedAt" : "2018-07-19T22:31:24Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "2e6a335a-1b46-441f-9b5d-da26d5ff42e3",
        "parentId" : "3c8442e1-fb7e-48c5-b4c1-250582d7b0bd",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Sure.  The docstring is already pretty big and likely to get much bigger.  Is there somewhere else part of it should go?\r\n\r\n>there is an issue to revisit this (IOW we should have 2 different offsets for this different behaviors)\r\n\r\nYah, IIRC there was a suggestion to have `__new__` dispatch some special cases to `Tick`, `MonthOffset`, etc.  I'm planning to take a swing at that after the immutabilization since `__new__` and cython are tricky.",
        "createdAt" : "2018-02-01T16:25:43Z",
        "updatedAt" : "2018-07-19T22:31:24Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "57ad736a-fd8e-4f0d-8722-7271a33e474b",
        "parentId" : "3c8442e1-fb7e-48c5-b4c1-250582d7b0bd",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "don't make it long, make it wide instead (its a bit non-standard ok)\r\n\r\n```\r\nn : int, default 1\r\nnormalize : bool, default False\r\n\r\nParameters that ADD to the offset\r\n----------------------------------\r\nyears, months, ....\r\n\r\nParameters that REPLACE the offset value\r\n-----------\r\nyear, month\r\n\r\n```",
        "createdAt" : "2018-02-02T11:34:57Z",
        "updatedAt" : "2018-07-19T22:31:24Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "8e947fe428c42b0c6204b7ee511a4c3fc5df6375",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +160,164 @@    Since 0 is a bit weird, we suggest avoiding its use.\n\n    Parameters\n    ----------\n    n : int, default 1"
  },
  {
    "id" : "8d7687af-d649-492e-8e1c-a48efc74a21d",
    "prId" : 19403,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/19403#pullrequestreview-92008597",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f25ed36b-5265-491f-8427-2c19286d3f63",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "why not just ``state.update(odict)``?",
        "createdAt" : "2018-01-26T12:08:20Z",
        "updatedAt" : "2018-02-01T18:18:37Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "c53460db-c14c-4a32-b157-47d834ade2fc",
        "parentId" : "f25ed36b-5265-491f-8427-2c19286d3f63",
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "Because we don't want to pull in all of the unused relativedelta attributes.",
        "createdAt" : "2018-01-27T00:59:57Z",
        "updatedAt" : "2018-02-01T18:18:37Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "53c251fb45c2739df25657a200b0a2601c3e1f8c",
    "line" : 111,
    "diffHunk" : "@@ -1,1 +438,442 @@            odict = offset.__dict__\n            kwds = {key: odict[key] for key in odict if odict[key]}\n            state.update(kwds)\n\n        self.__dict__ = state"
  },
  {
    "id" : "5eb70deb-b04f-43a2-afa5-4a948eb9f26a",
    "prId" : 21093,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/21093#pullrequestreview-120894177",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "34ef0953-dea9-4127-ab04-618950b595af",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "I think better to do this with ``@subsitution`` and template this. We dont' use this pattern anywhere and might be confusing.",
        "createdAt" : "2018-05-16T23:57:04Z",
        "updatedAt" : "2018-05-29T20:56:22Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "6e97ddd9-163e-4cef-8243-d5b039a0436e",
        "parentId" : "34ef0953-dea9-4127-ab04-618950b595af",
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Makes sense - I'll take a look and repush",
        "createdAt" : "2018-05-17T04:40:44Z",
        "updatedAt" : "2018-05-29T20:56:22Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      }
    ],
    "commit" : "75dbaad4cf7b33b8b6ba709e3bd527e4d970cb5d",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +1097,1101 @@\n\nclass CustomBusinessMonthBegin(_CustomBusinessMonth):\n    # TODO(py27): Replace condition with Subsitution after dropping Py27\n    if _CustomBusinessMonth.__doc__:"
  },
  {
    "id" : "e4cb8114-6945-49b8-a23f-e84324299b7e",
    "prId" : 22288,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22288#pullrequestreview-146332297",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c5702ee7-8105-4b0d-a705-9dc385256245",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "what about adding a CD and a D which crosses dst?",
        "createdAt" : "2018-08-14T10:31:44Z",
        "updatedAt" : "2018-09-05T16:52:00Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "5eae065b-f768-43a2-baee-bb6b9d1467c7",
        "parentId" : "c5702ee7-8105-4b0d-a705-9dc385256245",
        "authorId" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "body" : "A test with CD that crosses dst exists here:\r\nhttps://github.com/pandas-dev/pandas/blob/44349bfd8732419fbabd832e2e73ac4ca77e6c23/pandas/tests/tseries/offsets/test_offsets.py#L3189\r\n\r\nA test with D that crosses dst exists here:\r\nhttps://github.com/pandas-dev/pandas/blob/44349bfd8732419fbabd832e2e73ac4ca77e6c23/pandas/tests/tseries/offsets/test_offsets.py#L3056",
        "createdAt" : "2018-08-15T05:17:13Z",
        "updatedAt" : "2018-09-05T16:52:00Z",
        "lastEditedBy" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "tags" : [
        ]
      }
    ],
    "commit" : "9ed681c9bba45ac2f939e85951127de569ae28c7",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +2143,2147 @@        Apply scalar arithmetic with CalendarDay offset. Incoming datetime\n        objects can be tz-aware or naive.\n        \"\"\"\n        if type(other) == type(self):\n            # Add other CalendarDays"
  },
  {
    "id" : "f54fc48c-93ad-48ac-b1f9-239764725e33",
    "prId" : 22535,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22535#pullrequestreview-170524068",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "186afa6a-af9a-456e-afd5-02f7e9c6d699",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "this comment is out of date, but can change later",
        "createdAt" : "2018-11-01T00:47:40Z",
        "updatedAt" : "2018-11-01T00:47:40Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "4a7b589b80da97628ee2e779303c7a42274e93d0",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +544,548 @@            shifted = (i.to_perioddelta('B') - time).asi8 != 0\n\n            # Integer-array addition is deprecated, so we use\n            # _time_shift directly\n            roll = np.where(shifted, self.n - 1, self.n)"
  },
  {
    "id" : "b126db3c-1fd7-4fab-9233-c33806520114",
    "prId" : 22695,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/22695#pullrequestreview-155186308",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "aa1989ad-385b-4e87-8189-f5dbd1898d20",
        "parentId" : null,
        "authorId" : "7ac4c9e7-abb0-4bee-8b35-0f2b9e19bd9e",
        "body" : "In #18952 the behaviour of ``to_timestamp(how='end')`` was changed to have a time value of 23:59:59.999999999. But this resulted in ``base_period.to_timestamp(how='end')`` not being equal to ``normed`` in this code so ``roll`` was filled with ``self.n - 1`` instead of ``self.n``. This adjustment fixes this problem.",
        "createdAt" : "2018-09-13T17:20:42Z",
        "updatedAt" : "2018-09-14T11:13:39Z",
        "lastEditedBy" : "7ac4c9e7-abb0-4bee-8b35-0f2b9e19bd9e",
        "tags" : [
        ]
      }
    ],
    "commit" : "6cbdaabeee01b5237d13e4c1be2815165ee8a2ab",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +1314,1318 @@        if self.n > 0:\n            # when adding, dates on end roll to next\n            normed = dtindex - off + Timedelta(1, 'D') - Timedelta(1, 'ns')\n            roll = np.where(base_period.to_timestamp(how='end') == normed,\n                            self.n, self.n - 1)"
  }
]