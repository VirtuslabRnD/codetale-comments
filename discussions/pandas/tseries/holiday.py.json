[
  {
    "id" : "478d0f1e-e268-460f-b415-8befaf7e6431",
    "prId" : 7913,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "95530afb-cee4-4f04-9d93-d1c0ac22d6a8",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "is their a test that validates this now?\n",
        "createdAt" : "2014-08-11T12:52:10Z",
        "updatedAt" : "2014-08-11T12:52:10Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "333305aa-5752-4c0a-9faa-982cc98de6c3",
        "parentId" : "95530afb-cee4-4f04-9d93-d1c0ac22d6a8",
        "authorId" : "e4cf42f5-ae7f-4a31-b7fb-d8c96a5a33ff",
        "body" : "The GoodFriday/Easter tests he added validate that it works.\n",
        "createdAt" : "2014-08-11T12:55:50Z",
        "updatedAt" : "2014-08-11T12:55:50Z",
        "lastEditedBy" : "e4cf42f5-ae7f-4a31-b7fb-d8c96a5a33ff",
        "tags" : [
        ]
      }
    ],
    "commit" : "43c78d8846abce3d76dbd17d3e1765cdecd07166",
    "line" : 97,
    "diffHunk" : "@@ -1,1 +214,218 @@\n        for offset in offsets:\n            dates = list(map(lambda d: d + offset, dates))\n\n        return dates"
  },
  {
    "id" : "ba6f7087-f992-4d36-a734-88ef7ad796ef",
    "prId" : 11484,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "57ab0f69-dad0-4a74-a79f-1569fe5c3753",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "do we need a `closed='left|right|both` parameter to make this non-ambiguous? (default prob both)?\n",
        "createdAt" : "2015-10-30T18:20:25Z",
        "updatedAt" : "2015-11-13T20:13:23Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "8071b216-76d8-4120-814f-d2437c7fbb43",
        "parentId" : "57ab0f69-dad0-4a74-a79f-1569fe5c3753",
        "authorId" : "e4cf42f5-ae7f-4a31-b7fb-d8c96a5a33ff",
        "body" : "I would maybe prefer it to remain ambiguous and let the user be explicit.\n",
        "createdAt" : "2015-10-30T18:34:45Z",
        "updatedAt" : "2015-11-13T20:13:23Z",
        "lastEditedBy" : "e4cf42f5-ae7f-4a31-b7fb-d8c96a5a33ff",
        "tags" : [
        ]
      }
    ],
    "commit" : "6303d76e6ccf986b393e3379c21dd82301cf61a5",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +159,163 @@        self.offset = offset\n        self.start_date = Timestamp(start_date) if start_date is not None else start_date\n        self.end_date = Timestamp(end_date) if end_date is not None else end_date\n        self.observance = observance\n        assert (days_of_week is None or type(days_of_week) == tuple)"
  },
  {
    "id" : "a75fa066-56db-4cae-9f3d-44a20a64a066",
    "prId" : 31416,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/31416#pullrequestreview-351882642",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "283ee69c-3cac-4b21-bb69-bf399dd8ad1c",
        "parentId" : null,
        "authorId" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "body" : "Doesn't holidays typically return a DatetimeIndex ? Should maintain the same type even when empty",
        "createdAt" : "2020-01-31T14:43:17Z",
        "updatedAt" : "2020-02-07T04:22:16Z",
        "lastEditedBy" : "5e8c5ef2-940b-436e-9c5f-98ae5460128c",
        "tags" : [
        ]
      },
      {
        "id" : "047e6304-8d25-42ad-95f4-92e1a4536fc9",
        "parentId" : "283ee69c-3cac-4b21-bb69-bf399dd8ad1c",
        "authorId" : "94a17c08-0252-471b-a2a2-a32eb6cb15a9",
        "body" : "Internally, the holidays are constructed with `return_name=True` which returns a `Series` with the holiday names as values:\r\n```python\r\nIn [7]: USFederalHolidayCalendar().holidays('01-Jan-2020', '01-Apr-2020', return_name=True)\r\nOut[7]: \r\n2020-01-01                 New Years Day\r\n2020-01-20    Martin Luther King Jr. Day\r\n2020-02-17                Presidents Day\r\ndtype: object\r\n```\r\n\r\nOnly if `return_name=False` are the values striped at the end of the method - behaviour which remains unchanged from master:\r\nhttps://github.com/pandas-dev/pandas/blob/ba08390348403a0bddbfed835549982188e7038c/pandas/tseries/holiday.py#L426-L429",
        "createdAt" : "2020-02-01T12:36:55Z",
        "updatedAt" : "2020-02-07T04:22:16Z",
        "lastEditedBy" : "94a17c08-0252-471b-a2a2-a32eb6cb15a9",
        "tags" : [
        ]
      }
    ],
    "commit" : "b02918ab172531901fc29da4d197070dbd147d1a",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +414,418 @@                holidays = concat(holidays)\n            else:\n                holidays = Series(index=DatetimeIndex([]), dtype=object)\n\n            self._cache = (start, end, holidays.sort_index())"
  },
  {
    "id" : "e0beb5e8-cf09-424c-80f5-7532ce63d943",
    "prId" : 32935,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/32935#pullrequestreview-379905150",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "36f6dfb5-2922-469e-9a3a-d1a309129a04",
        "parentId" : null,
        "authorId" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "body" : "does a code check complain about this without this change?  this makes it harder to copy/paste an example",
        "createdAt" : "2020-03-23T23:33:12Z",
        "updatedAt" : "2020-03-25T19:04:44Z",
        "lastEditedBy" : "adf621f1-4745-479a-a1fc-dc14046a3f4b",
        "tags" : [
        ]
      },
      {
        "id" : "dd60fb7a-bcbf-406e-81bd-afc4d63f3cfd",
        "parentId" : "36f6dfb5-2922-469e-9a3a-d1a309129a04",
        "authorId" : "37491837-935c-4b9d-810f-4bb1c44ff375",
        "body" : "Yes, flake8 complains that this line's length is larger than 88 characters.",
        "createdAt" : "2020-03-23T23:34:27Z",
        "updatedAt" : "2020-03-25T19:04:44Z",
        "lastEditedBy" : "37491837-935c-4b9d-810f-4bb1c44ff375",
        "tags" : [
        ]
      }
    ],
    "commit" : "c32fbf6f47a07ecf0932da297dc8a1dd788d8c56",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +159,163 @@        >>> from dateutil.relativedelta import MO\n\n        >>> USMemorialDay = Holiday(\n        ...     \"Memorial Day\", month=5, day=31, offset=pd.DateOffset(weekday=MO(-1))\n        ... )"
  }
]