[
  {
    "id" : "b5dee3dd-427c-4981-bce9-936b32751a7e",
    "prId" : 4379,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "76d4d076-e7b7-4f92-bf5b-3b0b3af35d24",
        "parentId" : null,
        "authorId" : "5c239b83-5a68-467b-a3f8-113a0fc494dc",
        "body" : "this is the key change\n",
        "createdAt" : "2013-07-27T18:08:36Z",
        "updatedAt" : "2013-07-30T05:22:39Z",
        "lastEditedBy" : "5c239b83-5a68-467b-a3f8-113a0fc494dc",
        "tags" : [
        ]
      }
    ],
    "commit" : "e546e5335a13afdb45b954f1072115f9f0aea8b6",
    "line" : 63,
    "diffHunk" : "@@ -1,1 +1028,1032 @@\n    def _apply_meta(self, rawarr):\n        if not isinstance(rawarr, PeriodIndex):\n            rawarr = rawarr.view(PeriodIndex)\n        rawarr.freq = self.freq"
  },
  {
    "id" : "f36ad1da-1f4b-46c0-9c4b-0018f193be7f",
    "prId" : 7485,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "36bb1ab5-0ccf-4489-8fdb-13ea1b6772ae",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "is this tested somewhere?\n",
        "createdAt" : "2014-06-19T11:20:45Z",
        "updatedAt" : "2014-06-19T14:54:46Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "66020073f7c1d9fdfc9e0617326fe84c67a8732c",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +163,167 @@            return Period(ordinal=ordinal, freq=self.freq)\n        else:  # pragma: no cover\n            return NotImplemented\n\n    def __sub__(self, other):"
  },
  {
    "id" : "ef68661b-bcdc-4158-bcb8-f1b6713185fd",
    "prId" : 7891,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2cc57a77-887b-4424-bd11-7c57632778e2",
        "parentId" : null,
        "authorId" : "413be534-cedb-4df7-abda-cde26db33acd",
        "body" : "I'd like to take the opportunity and strongly advise against `except:` constructs I've seen a lot in the sources: among other things it catches `KeyboardInterrupt` and `SystemExit`, and _usually_ it's not nice to have them pass silently.  It's better to use `except Exception:` instead.\n",
        "createdAt" : "2014-08-06T09:43:18Z",
        "updatedAt" : "2014-08-06T18:45:59Z",
        "lastEditedBy" : "413be534-cedb-4df7-abda-cde26db33acd",
        "tags" : [
        ]
      },
      {
        "id" : "1f13903d-278b-4de6-a01b-c8938d5081a9",
        "parentId" : "2cc57a77-887b-4424-bd11-7c57632778e2",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "hmm. not sure why this shows up. was alreeady there. You have a point for the most part I don't think it matters.\n",
        "createdAt" : "2014-08-06T12:16:37Z",
        "updatedAt" : "2014-08-06T18:45:59Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "5021ddb1-d35e-473c-bfd7-e5f91e74e4c2",
        "parentId" : "2cc57a77-887b-4424-bd11-7c57632778e2",
        "authorId" : "413be534-cedb-4df7-abda-cde26db33acd",
        "body" : "In absence of punctuation I have a hard time making sense of your last sentence.  But nevertheless, it does matter (would matter to me, at least) when you're interrupting some long operation (say, unpickling an object on a remote filesystem over a slow connection) and instead of stopping completely it goes on simply choosing another code path.\n",
        "createdAt" : "2014-08-06T14:03:25Z",
        "updatedAt" : "2014-08-06T18:45:59Z",
        "lastEditedBy" : "413be534-cedb-4df7-abda-cde26db33acd",
        "tags" : [
        ]
      },
      {
        "id" : "0a823008-a383-4339-932a-c902d3ef5122",
        "parentId" : "2cc57a77-887b-4424-bd11-7c57632778e2",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "sorry wasn't clear. I am not sure why that section showed up in the diff as I didn't add it.\n\nregardless, I agree with your general point about being explicit about only catching `Exception` rather than all (though on a single operation I think it hardly matters from a practical point of view). Pls create an issue to record this (I think prob good as a first pr). I think it was just 'done' that way, so continued on....\n",
        "createdAt" : "2014-08-06T14:07:13Z",
        "updatedAt" : "2014-08-06T18:45:59Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "8d3cb3f36e2f7b415531e3b910f490c01657ecca",
    "line" : 143,
    "diffHunk" : "@@ -1,1 +831,835 @@            try:\n                other = PeriodIndex(other)\n            except:\n                return False\n"
  },
  {
    "id" : "d663e8fa-87ab-402f-a0ef-ac66d353ca88",
    "prId" : 7966,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a11ea321-6630-4aa2-ba60-46604eda33a4",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "hmm, does it make sense to push _add_delta (and DatetimeIndex._add_delta) to base  into order to combine them (its currently marked as non-implemented in `DatetimeIndexOpsMixin`)?\n",
        "createdAt" : "2014-08-08T17:02:01Z",
        "updatedAt" : "2014-08-09T06:55:32Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "e8937f82-dfc1-4f98-8b1e-bb8d71d20dfa",
        "parentId" : "a11ea321-6630-4aa2-ba60-46604eda33a4",
        "authorId" : "2bab095f-50fb-401e-ab9e-c09e00e2b00c",
        "body" : "I feel this gets more complicated, because each `_add_delta` handles its internal representation (UTC time in `DatetimeIndex` and ordinal in `PeriodIndex`).\nhttps://github.com/pydata/pandas/blob/master/pandas/tseries/index.py#L615\n",
        "createdAt" : "2014-08-08T21:10:59Z",
        "updatedAt" : "2014-08-09T06:55:32Z",
        "lastEditedBy" : "2bab095f-50fb-401e-ab9e-c09e00e2b00c",
        "tags" : [
        ]
      },
      {
        "id" : "61d28cf7-8217-466e-b786-2f0f4a480e14",
        "parentId" : "a11ea321-6630-4aa2-ba60-46604eda33a4",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "ok, not a big deal (always like to have centralized stuff like this), but sometimes makes too complicated. if in the future you think can integrate then ok.\n",
        "createdAt" : "2014-08-08T21:12:09Z",
        "updatedAt" : "2014-08-09T06:55:32Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "8f6ac5bcf301be2efaf32736b2a6258b4253e708",
    "line" : 81,
    "diffHunk" : "@@ -1,1 +898,902 @@\n    def _add_delta(self, other):\n        if isinstance(other, (timedelta, np.timedelta64, offsets.Tick)):\n            offset = frequencies.to_offset(self.freq)\n            if isinstance(offset, offsets.Tick):"
  }
]