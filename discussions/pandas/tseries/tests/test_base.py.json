[
  {
    "id" : "d3bbb2ba-39dd-4bcd-8b22-531c166d0ad0",
    "prId" : 8680,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1de46a49-8dee-4c28-964a-aa51944dba6f",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "maybe add a test here (and below), with the nat and assertsFalse for monotonic_incr/decr\n",
        "createdAt" : "2014-11-02T14:52:40Z",
        "updatedAt" : "2014-11-02T20:12:45Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "928608a4-a455-4dc8-b348-d3aebbd3742f",
        "parentId" : "1de46a49-8dee-4c28-964a-aa51944dba6f",
        "authorId" : "40104112-cdcf-4812-8f95-b502b40e346d",
        "body" : "see `test_is_monotonic_na`\n",
        "createdAt" : "2014-11-02T16:23:24Z",
        "updatedAt" : "2014-11-02T20:12:45Z",
        "lastEditedBy" : "40104112-cdcf-4812-8f95-b502b40e346d",
        "tags" : [
        ]
      },
      {
        "id" : "9f58be19-24c5-40ef-ad78-80db0fdb71da",
        "parentId" : "1de46a49-8dee-4c28-964a-aa51944dba6f",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "cool\n",
        "createdAt" : "2014-11-02T18:24:01Z",
        "updatedAt" : "2014-11-02T20:12:45Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "db6f8fd94aca599f0c89d645d9c815fd33ee2196",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +86,90 @@        for tz in self.tz:\n            # monotonic\n            idx1 = pd.DatetimeIndex(['2011-01-01', '2011-01-02',\n                                     '2011-01-03'], tz=tz)\n            self.assertTrue(idx1.is_monotonic)"
  },
  {
    "id" : "7a0e9553-84d6-4239-9c1d-10fd1eed491b",
    "prId" : 10367,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "55000d50-e880-404c-aad4-6fb485adb8a7",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "hmm I _think_ that these tests are in `test_index.py` (there is of course some duplication, pardon the pun, with where tests live for these sub-classes).\n",
        "createdAt" : "2015-06-22T23:41:47Z",
        "updatedAt" : "2015-06-22T23:41:47Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "0f6e151c-8125-487a-9db7-c5881436ad55",
        "parentId" : "55000d50-e880-404c-aad4-6fb485adb8a7",
        "authorId" : "2bab095f-50fb-401e-ab9e-c09e00e2b00c",
        "body" : "I intended these tests are for  `freq` rather than `name`, because `name` are tested in `test_index`. Maybe `assert_index_equal` should check all metadata to simplify the test (I've once tried and found some tests / logics must be fixed).\n",
        "createdAt" : "2015-06-23T13:50:09Z",
        "updatedAt" : "2015-06-23T13:50:09Z",
        "lastEditedBy" : "2bab095f-50fb-401e-ab9e-c09e00e2b00c",
        "tags" : [
        ]
      },
      {
        "id" : "2dba0ff8-eb90-4d02-ac3b-5a08c0ac4e64",
        "parentId" : "55000d50-e880-404c-aad4-6fb485adb8a7",
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "oh, that's fine then.\n",
        "createdAt" : "2015-06-23T13:59:28Z",
        "updatedAt" : "2015-06-23T13:59:28Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      }
    ],
    "commit" : "60a6e9f34018c8093553485d3611efb6af28a248",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +828,832 @@        result = idx_dup.drop_duplicates()\n        self.assert_index_equal(idx, result)\n        self.assertIsNone(result.freq)\n\n"
  },
  {
    "id" : "6cb12d88-c5a4-45b0-9128-5ff337a48a1c",
    "prId" : 14164,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f5a93dec-3d77-4fce-92be-a4c48b42bc1d",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "I _think_ we already have dti-scalar (both w and w/o tz) covered?\n",
        "createdAt" : "2016-09-06T21:15:28Z",
        "updatedAt" : "2016-09-07T10:26:23Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "4fc1c648-d15a-4950-8631-cd7b5e8296c0",
        "parentId" : "f5a93dec-3d77-4fce-92be-a4c48b42bc1d",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "yes, that is handled in the test_sub_isub test above\n",
        "createdAt" : "2016-09-07T08:16:55Z",
        "updatedAt" : "2016-09-07T10:26:23Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "21c6cec62ae2ad1b3aa8356962365fdf0383c5d2",
    "line" : 89,
    "diffHunk" : "@@ -1,1 +484,488 @@            tm.assert_index_equal(rng, expected)\n\n    def test_sub_dti_dti(self):\n        # previously performed setop (deprecated in 0.16.0), now changed to\n        # return subtraction -> TimeDeltaIndex (GH ...)"
  }
]