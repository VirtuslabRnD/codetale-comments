[
  {
    "id" : "379aeaa7-08c9-4f37-a5c8-f806fec27b72",
    "prId" : 4954,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b9624575-7af2-411b-a9f8-5a3cbf96dda9",
        "parentId" : null,
        "authorId" : "5c239b83-5a68-467b-a3f8-113a0fc494dc",
        "body" : "Can you also test with `Series`? thx\n",
        "createdAt" : "2013-09-24T11:54:53Z",
        "updatedAt" : "2013-09-25T13:46:28Z",
        "lastEditedBy" : "5c239b83-5a68-467b-a3f8-113a0fc494dc",
        "tags" : [
        ]
      }
    ],
    "commit" : "166f9070cc0faf4514b43860e14cc3a4f050234c",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +116,120 @@\n    def test_inf_handling(self):\n        data = np.arange(6)\n        data_ser = Series(data)\n"
  },
  {
    "id" : "b7f94081-365c-45d3-8016-c261db234de8",
    "prId" : 8153,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4a7dabc5-8688-4db0-a324-8da2be5314fe",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "`assert_series_equal` does not check for the orderedness of the Categorical at the moment, so the test will not check that part of the issue:\n\n```\nIn [125]: c1 = pd.Series(pd.Categorical(list('abcdaba'), ordered=True))\n\nIn [127]: c2 = pd.Series(pd.Categorical(list('abcdaba'), ordered=False))\n\nIn [129]: pd.util.testing.assert_series_equal(c1, c2)\n```\n\nBut maybe that is for a seperate issue if this should test that or not.\n",
        "createdAt" : "2014-09-01T13:25:32Z",
        "updatedAt" : "2014-09-25T17:45:48Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      }
    ],
    "commit" : "3f282da6aac82fabf0749933fe8259a8bd6f33a6",
    "line" : 76,
    "diffHunk" : "@@ -1,1 +238,242 @@                                            [\"(-0.008, 2.667]\", \"(2.667, 5.333]\", \"(5.333, 8]\"],\n                                            ordered=True))\n        tm.assert_series_equal(res, exp)\n\n    def test_qcut_return_categorical(self):"
  }
]