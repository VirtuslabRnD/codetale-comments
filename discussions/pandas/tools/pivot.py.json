[
  {
    "id" : "383c8089-b788-4688-b568-981c6abc0b37",
    "prId" : 5505,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a4c110b9-e2a5-4d84-8ac2-8e6ad5da5391",
        "parentId" : null,
        "authorId" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "body" : "take these last 2 out - by definition they shouldn't be there\n",
        "createdAt" : "2014-03-09T23:35:27Z",
        "updatedAt" : "2014-03-14T22:22:51Z",
        "lastEditedBy" : "7086d5c0-382b-4c41-b70d-144a07643f71",
        "tags" : [
        ]
      },
      {
        "id" : "00f948d1-906f-415b-bea6-37b2787c4fcd",
        "parentId" : "a4c110b9-e2a5-4d84-8ac2-8e6ad5da5391",
        "authorId" : "648f950c-44a2-471a-94a8-95e7971cdf30",
        "body" : "I disagree, people will want to know by looking at the docstring what the new argument should be.  It can be removed when the arguments are no longer supported.\n",
        "createdAt" : "2014-03-09T23:40:13Z",
        "updatedAt" : "2014-03-14T22:22:51Z",
        "lastEditedBy" : "648f950c-44a2-471a-94a8-95e7971cdf30",
        "tags" : [
        ]
      }
    ],
    "commit" : "6e7054a32c03bfd0de016c4f1b5e1d6f13c5ccf1",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +38,42 @@    dropna : boolean, default True\n        Do not include columns whose entries are all NaN\n    rows : kwarg only alias of index [deprecated]\n    cols : kwarg only alias of columns [deprecated]\n"
  },
  {
    "id" : "d7760209-c4d7-4106-be87-0a5c67d8ec25",
    "prId" : 14650,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/14650#pullrequestreview-8655314",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "840ec39a-3ceb-4180-a603-cbbb0abed47e",
        "parentId" : null,
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Can you add a similar reference in `pivot` to `pivot_table` ?\n",
        "createdAt" : "2016-11-14T09:50:15Z",
        "updatedAt" : "2016-11-16T07:07:29Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "d3a717c4-5183-4886-a267-be6c0d9aa8da",
        "parentId" : "840ec39a-3ceb-4180-a603-cbbb0abed47e",
        "authorId" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "body" : "The `pivot` docstring already references `pivot_table` ([here](https://github.com/pandas-dev/pandas/blob/master/pandas/core/frame.py#L3908))\n",
        "createdAt" : "2016-11-14T18:03:57Z",
        "updatedAt" : "2016-11-16T07:07:29Z",
        "lastEditedBy" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "tags" : [
        ]
      },
      {
        "id" : "7d221b1d-9024-41e4-809d-0044a8d19cd5",
        "parentId" : "840ec39a-3ceb-4180-a603-cbbb0abed47e",
        "authorId" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "body" : "Ah, yes, that's good. But not yet the `pd.pivot` one, and that is apparently located here: https://github.com/pandas-dev/pandas/blob/master/pandas/core/reshape.py#L339\n",
        "createdAt" : "2016-11-15T08:18:48Z",
        "updatedAt" : "2016-11-16T07:07:29Z",
        "lastEditedBy" : "cc7022b2-2831-4c63-a4da-d18b0d342508",
        "tags" : [
        ]
      },
      {
        "id" : "40190bb9-c8a6-41ee-9a9a-3f4101bd5f79",
        "parentId" : "840ec39a-3ceb-4180-a603-cbbb0abed47e",
        "authorId" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "body" : "Ah, thank you for bringing that to my attention. I'll push that change later tonight. \n",
        "createdAt" : "2016-11-15T17:36:29Z",
        "updatedAt" : "2016-11-16T07:07:29Z",
        "lastEditedBy" : "eb0b5a98-1084-4e61-8414-5fb19728b91f",
        "tags" : [
        ]
      }
    ],
    "commit" : "e98b27d220a618d9c9f8536f081d4dc48181203f",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +80,84 @@    --------\n    DataFrame.pivot : pivot without aggregation that can handle\n        non-numeric data\n    \"\"\"\n    index = _convert_by(index)"
  },
  {
    "id" : "d89f6165-e87d-4074-9bb3-36de5342b8a7",
    "prId" : 14965,
    "prUrl" : "https://github.com/pandas-dev/pandas/pull/14965#pullrequestreview-14230325",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "380b9955-85e4-4129-9fc7-8947f9f2842f",
        "parentId" : null,
        "authorId" : "214b00be-e9f2-4883-878c-26eab43cc650",
        "body" : "`if set(values) - set(data):`",
        "createdAt" : "2016-12-22T20:30:07Z",
        "updatedAt" : "2016-12-23T18:49:34Z",
        "lastEditedBy" : "214b00be-e9f2-4883-878c-26eab43cc650",
        "tags" : [
        ]
      },
      {
        "id" : "e2ec106f-8031-4034-a5d3-e462e2276c9a",
        "parentId" : "380b9955-85e4-4129-9fc7-8947f9f2842f",
        "authorId" : "d9d08f2d-b33c-4c2c-9969-32795418a9da",
        "body" : "@MaximilianR That won't let the user know the specific values that were missing.  Not sure if we want to raise a KeyError with a text of all the values, as it seems with other functions, pandas raises a KeyError for the first missing key.",
        "createdAt" : "2016-12-22T20:38:49Z",
        "updatedAt" : "2016-12-23T18:49:34Z",
        "lastEditedBy" : "d9d08f2d-b33c-4c2c-9969-32795418a9da",
        "tags" : [
        ]
      },
      {
        "id" : "2dfc863d-17bb-40f0-aa90-7130ad88b64e",
        "parentId" : "380b9955-85e4-4129-9fc7-8947f9f2842f",
        "authorId" : "214b00be-e9f2-4883-878c-26eab43cc650",
        "body" : "Good point. Something like this would list them all:\r\n\r\n```python\r\nmissing_values = set(values) - set(data)\r\nif missing_values:\r\n    raise KeyError('{} missing in [better message]'.format(', '.join(missing_values)\r\n``` \r\n\r\nBut if you have strong view on looping then OK",
        "createdAt" : "2016-12-22T20:57:42Z",
        "updatedAt" : "2016-12-23T18:49:34Z",
        "lastEditedBy" : "214b00be-e9f2-4883-878c-26eab43cc650",
        "tags" : [
        ]
      },
      {
        "id" : "39310c30-23d8-4809-bc44-af0b09b1ba50",
        "parentId" : "380b9955-85e4-4129-9fc7-8947f9f2842f",
        "authorId" : "d9d08f2d-b33c-4c2c-9969-32795418a9da",
        "body" : "IMHO, it's better to be consistent with behavior on the other arguments. For example, with `groupby`, if you do this:\r\n```python\r\ndf=pd.DataFrame({'a' : [i % 3 for i in range(10)], 'b': [i % 2 for i in range(10)], 'c': np.random.randn(10)})\r\ndf.groupby(['y','z']).sum()\r\n```\r\nThe `KeyError` is raised on the value of `'y'`, not on `'z'`.  So I think the error raised on the `values` argument should be consistent.  Otherwise it begs the question why we don't show _all_ of the `KeyError` issues on other arguments for many other functions.",
        "createdAt" : "2016-12-22T21:06:44Z",
        "updatedAt" : "2016-12-23T18:49:34Z",
        "lastEditedBy" : "d9d08f2d-b33c-4c2c-9969-32795418a9da",
        "tags" : [
        ]
      }
    ],
    "commit" : "ff4df5af143f2c8b4449ec9168789b639cf10bc4",
    "line" : null,
    "diffHunk" : "@@ -1,1 +111,115 @@        for i in values:\n            if i not in data:\n                raise KeyError(i)\n\n        to_filter = []"
  }
]