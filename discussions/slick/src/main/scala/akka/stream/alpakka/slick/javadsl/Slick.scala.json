[
  {
    "id" : "fa8796c3-fcfa-4a6a-97e4-d90fee3f64af",
    "prId" : 2318,
    "prUrl" : "https://github.com/akka/alpakka/pull/2318#pullrequestreview-419078476",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cca44cf6-33fc-472b-8614-a29b157a3bd7",
        "parentId" : null,
        "authorId" : "2ac8f153-7733-47f9-92c3-18433e64ace8",
        "body" : "I need help with this. I do not very know a Slick and I'm not sure about transactionality every `SimpleJdbcAction`.\r\nIt works in tests and our application, but I'm not sure that it's absolutely correct.",
        "createdAt" : "2020-05-18T19:23:04Z",
        "updatedAt" : "2020-06-19T14:51:13Z",
        "lastEditedBy" : "2ac8f153-7733-47f9-92c3-18433e64ace8",
        "tags" : [
        ]
      },
      {
        "id" : "9ad96501-d1a6-4050-9fb5-c78d4574471d",
        "parentId" : "cca44cf6-33fc-472b-8614-a29b157a3bd7",
        "authorId" : "9e8455eb-4ca4-4a67-9395-216e8996679a",
        "body" : "I don't get your question about transactionality. \r\n\r\nThis DBIO will have a single statement and will run in its own transaction and not participating to any other transaction. If the user had access to it they could `flatMap` with another DBIO. In that case, they will need to add `.transactionally` to wrap both DBIO on the same tx. \r\n\r\nAnyway, that's not applicable here. \r\n\r\nHowever, what could be an addition is a `BiFunction[T, Connection, List[PreparedStatement]]`. \r\n\r\nThe user could then return a few prepared statements, all bound to the same connection. \r\n\r\nIn such a case, we would convert each of them to a DBIO and indeed execute them in the same transaction using `.transactionally`.\r\n\r\nCan be added on another PR though.",
        "createdAt" : "2020-05-27T10:07:28Z",
        "updatedAt" : "2020-06-19T14:51:13Z",
        "lastEditedBy" : "9e8455eb-4ca4-4a67-9395-216e8996679a",
        "tags" : [
        ]
      },
      {
        "id" : "640f4cbc-7cd9-4d49-be90-b4c2b19c5fd9",
        "parentId" : "cca44cf6-33fc-472b-8614-a29b157a3bd7",
        "authorId" : "2ac8f153-7733-47f9-92c3-18433e64ace8",
        "body" : "> This DBIO will have a single statement and will run in its own transaction and not participating to any other transaction.\r\n\r\nExactly this is what I wanted to clarify. Thank you! 👍 ",
        "createdAt" : "2020-05-27T10:55:13Z",
        "updatedAt" : "2020-06-19T14:51:13Z",
        "lastEditedBy" : "2ac8f153-7733-47f9-92c3-18433e64ace8",
        "tags" : [
        ]
      }
    ],
    "commit" : "509d717b43cc4ad2b97066c2b241f47393b5999e",
    "line" : 265,
    "diffHunk" : "@@ -1,1 +369,373 @@\n  private def toDBIO[T](javaDml: Function2[T, Connection, PreparedStatement]): T => DBIO[Int] = { t =>\n    SimpleJdbcAction { ctx =>\n      javaDml(t, ctx.connection).executeUpdate()\n    }"
  },
  {
    "id" : "8b69787d-eb31-4625-9717-4b05577c1cc5",
    "prId" : 466,
    "prUrl" : "https://github.com/akka/alpakka/pull/466#pullrequestreview-62456953",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bf9f3678-9a94-41e2-986a-f35baba0ccc5",
        "parentId" : null,
        "authorId" : "d194e429-6fa7-44d5-88d1-915fd9971a01",
        "body" : "nitpick, also align the part after session with the next parameter explanations?",
        "createdAt" : "2017-09-14T20:16:49Z",
        "updatedAt" : "2017-09-18T13:49:51Z",
        "lastEditedBy" : "d194e429-6fa7-44d5-88d1-915fd9971a01",
        "tags" : [
        ]
      }
    ],
    "commit" : "95ee91ebaaa79e0c812e43728b4b7d344c267280",
    "line" : 56,
    "diffHunk" : "@@ -1,1 +71,75 @@   *           those statements against the specified Slick database.\n   *\n   * @param session The database session to use.\n   * @param parallelism How many parallel asynchronous streams should be\n   *                    used to send statements to the database. Use a"
  }
]