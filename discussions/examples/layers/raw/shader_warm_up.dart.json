[
  {
    "id" : "11d354e2-808d-4bab-bbbb-e7fc09f127ae",
    "prId" : 28687,
    "prUrl" : "https://github.com/flutter/flutter/pull/28687#pullrequestreview-211348805",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "02077f8b-9a39-4cf6-a793-9e37ef18e13c",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "beginFrame should be void and sync. Making it async means this will not work correctly (it'll return before `render` is called). I'm surprised this example still works (if it does?).",
        "createdAt" : "2019-03-06T09:27:35Z",
        "updatedAt" : "2019-03-06T09:27:36Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      },
      {
        "id" : "fdb36df2-d84f-41b9-b90b-bea4e1297894",
        "parentId" : "02077f8b-9a39-4cf6-a793-9e37ef18e13c",
        "authorId" : "0dfb4b67-cdbe-4905-93ea-e8b19d917e2a",
        "body" : "It still works with `flutter run raw/shader_warm_up.dart` inside `examples/layers`.\r\n\r\nSure we call `render` after `Future<void>` is returned. But I thought that's needed because `render` has to wait for `warmUpOnCanvas` to prepare the picture. Why do we have to ensure that `beginFrame` return after `render` is called?\r\n\r\nIf we need to do that, how are we going to wait for the `warmUpOnCanvas`? Someone told me that Dart is single-threaded and there's no way to wait for a future inside a sync function?",
        "createdAt" : "2019-03-06T17:16:41Z",
        "updatedAt" : "2019-03-06T17:16:47Z",
        "lastEditedBy" : "0dfb4b67-cdbe-4905-93ea-e8b19d917e2a",
        "tags" : [
        ]
      }
    ],
    "commit" : "340899d9e0a040ef7fa1dacac965013436a430e7",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +10,14 @@import 'package:flutter/painting.dart' show DefaultShaderWarmUp;\n\nFuture<void> beginFrame(Duration timeStamp) async {\n  // PAINT\n  final ui.PictureRecorder recorder = ui.PictureRecorder();"
  }
]