[
  {
    "id" : "bc65ddd3-88fe-4c8c-8798-aabf34801de5",
    "prId" : 5539,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "db6db7bd-10f3-4e55-8b85-c4eb33b32f59",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "We don't usually call a function for a case like this, just inline the AnimatedCrossFade\n",
        "createdAt" : "2016-09-01T22:15:49Z",
        "updatedAt" : "2016-09-01T22:15:49Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "df4bf49747212053cc935e485b07f02fc3ade4ad",
    "line" : 65,
    "diffHunk" : "@@ -1,1 +63,67 @@          child: new Container(\n            margin: const EdgeInsets.only(left: 24.0),\n            child: _crossFade(\n              new Text(value, style: text54),\n              new Text(hint, style: text54),"
  },
  {
    "id" : "fdf40f09-8a20-41c7-b1f9-7222b8d17400",
    "prId" : 6019,
    "prUrl" : "https://github.com/flutter/flutter/pull/6019#pullrequestreview-1403339",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "38c13f8b-1962-45fa-9cb7-fc43a47971ea",
        "parentId" : null,
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "I don't think this is correct.  Creating a new InputValue each time will lose information about the selection and editing state.  Is there a need to use a Form here?  Why not just store the InputValue as state and return the InputValue you get in the onChanged callback?\n",
        "createdAt" : "2016-09-23T19:12:29Z",
        "updatedAt" : "2016-09-23T19:12:29Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      },
      {
        "id" : "c5fb194d-448a-463f-9d3d-6be730f46e40",
        "parentId" : "38c13f8b-1962-45fa-9cb7-fc43a47971ea",
        "authorId" : "354333fe-86e0-40ca-aa4b-29a9d64d7f86",
        "body" : "I think this is an indication that the API is confusing. But the way it works is that when there's a formField, the `value` param is only used for the initial value. Subsequent values are taken from the Form.\n\nWhat you suggest should work, however. I just think using Form looks simpler/cleaner.\n",
        "createdAt" : "2016-09-23T19:14:32Z",
        "updatedAt" : "2016-09-23T19:14:32Z",
        "lastEditedBy" : "354333fe-86e0-40ca-aa4b-29a9d64d7f86",
        "tags" : [
        ]
      },
      {
        "id" : "308d48b2-2fca-439a-94a0-01ef04cf3cdb",
        "parentId" : "38c13f8b-1962-45fa-9cb7-fc43a47971ea",
        "authorId" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "body" : "Yeah, there's a bug assigned to me to make this less confusing.\n",
        "createdAt" : "2016-09-23T20:52:25Z",
        "updatedAt" : "2016-09-23T20:52:25Z",
        "lastEditedBy" : "0a6b99c1-e18d-4971-abe3-b52228030462",
        "tags" : [
        ]
      }
    ],
    "commit" : "748147b34778e0a9282d2a6bbaedc55fa5004659",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +196,200 @@                hintText: item.hint,\n                labelText: item.name,\n                value: new InputValue(text: item.value),\n                formField: new FormField<String>(\n                  setter: (String val) { item.value = val; }"
  }
]