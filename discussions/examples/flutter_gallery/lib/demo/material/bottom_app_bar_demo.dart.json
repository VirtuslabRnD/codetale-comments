[
  {
    "id" : "921f0d21-bd4a-4c54-bb7a-745149a4f5d0",
    "prId" : 16196,
    "prUrl" : "https://github.com/flutter/flutter/pull/16196#pullrequestreview-109124587",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fcfc980a-323d-4be1-b471-dba618f6872a",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "This could be `const <Widget> [` etc",
        "createdAt" : "2018-04-03T19:16:20Z",
        "updatedAt" : "2018-04-04T00:36:20Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "f1068b78-9091-4b67-93d0-e7876bc92808",
        "parentId" : "fcfc980a-323d-4be1-b471-dba618f6872a",
        "authorId" : "ca9efae2-2bf8-426e-9b8e-d11f86f60cb9",
        "body" : "The widgets inside are newed because of their empty onPressed callbacks.",
        "createdAt" : "2018-04-03T21:31:34Z",
        "updatedAt" : "2018-04-04T00:36:20Z",
        "lastEditedBy" : "ca9efae2-2bf8-426e-9b8e-d11f86f60cb9",
        "tags" : [
        ]
      }
    ],
    "commit" : "ad2a6728198a7e3855f112caf88f3c5a06499914",
    "line" : 292,
    "diffHunk" : "@@ -1,1 +290,294 @@      );\n    }\n    rowContents.addAll(<Widget> [\n      new IconButton(\n        icon: const Icon(Icons.search),"
  },
  {
    "id" : "69322ff0-0670-4727-96f8-17cdf1a91f14",
    "prId" : 16238,
    "prUrl" : "https://github.com/flutter/flutter/pull/16238#pullrequestreview-109796160",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4c8bcf95-5f8d-4550-9aa4-fff5e8934f8f",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "nit: `explicitChildNodes: false` is default behavior and should probably just be removed.",
        "createdAt" : "2018-04-05T14:47:56Z",
        "updatedAt" : "2018-04-05T14:53:49Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "de31bcfd-e389-4c12-8dbc-3d8324b568d9",
        "parentId" : "4c8bcf95-5f8d-4550-9aa4-fff5e8934f8f",
        "authorId" : "ca9efae2-2bf8-426e-9b8e-d11f86f60cb9",
        "body" : "I've gone ahead and done that.\r\n\r\nI merged this before seeing this comment from mobile.  I'm too used to our internal UI where any comments blocks submitting a change. \r\n\r\nI'll send a PR with this update and remember to check for final comments before merging next time.",
        "createdAt" : "2018-04-05T17:04:29Z",
        "updatedAt" : "2018-04-05T17:04:29Z",
        "lastEditedBy" : "ca9efae2-2bf8-426e-9b8e-d11f86f60cb9",
        "tags" : [
        ]
      }
    ],
    "commit" : "f548093c7a9f337f72b8b026d0a8b071221dc86b",
    "line" : 148,
    "diffHunk" : "@@ -1,1 +182,186 @@          label: 'Set Bottom App Bar color to ${colorToName[color]}',\n          container: true,\n          explicitChildNodes: false,\n          child: new Row(children: <Widget> [\n            new Radio<Color>("
  },
  {
    "id" : "a8a3527d-d660-4b5b-8202-8a85bd75834d",
    "prId" : 16238,
    "prUrl" : "https://github.com/flutter/flutter/pull/16238#pullrequestreview-109802695",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ba0c494f-bbd6-4097-94f6-f7bd4e20252e",
        "parentId" : null,
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "This is kinda odd. Why should a screen reader user have a different experience of the UI then somebody who doesn't use a screen reader?",
        "createdAt" : "2018-04-05T14:53:13Z",
        "updatedAt" : "2018-04-05T14:53:49Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      },
      {
        "id" : "0b67265f-dafd-458b-a297-f150ef4c7571",
        "parentId" : "ba0c494f-bbd6-4097-94f6-f7bd4e20252e",
        "authorId" : "ca9efae2-2bf8-426e-9b8e-d11f86f60cb9",
        "body" : "Since this is a demo, these are dummy buttons, not disabled buttons.  \r\n\r\nI decided to tell the screen reader that they are disabled because when I tried it out with a screen reader, I ended up confused.  I partially blindfolded myself and tried tapping those buttons.  When the reader told me I could double-tap to activate them, I did and I was confused when I couldn't find anything changed.\r\n\r\nSince the primary purpose of this demo is to showcase normal Flutter code, I am OK with removing those semantics objects.\r\n\r\nI'll let you make the final call, since we should apply any solution we come up with to all no-op buttons in the gallery.",
        "createdAt" : "2018-04-05T17:04:28Z",
        "updatedAt" : "2018-04-05T17:04:28Z",
        "lastEditedBy" : "ca9efae2-2bf8-426e-9b8e-d11f86f60cb9",
        "tags" : [
        ]
      },
      {
        "id" : "9df177ef-ed90-4801-b7e0-7b81b32ccbe1",
        "parentId" : "ba0c494f-bbd6-4097-94f6-f7bd4e20252e",
        "authorId" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "body" : "Ideally, I would like to see the following:\r\n\r\n* Button state is presented the same to screen-reader and non-screen-reader users.\r\n* If you click an enabled button some kind of dummy action should happen to acknowledge the button click.\r\n\r\nI've also seen non-screen-reader users get confused when they hit a seemingly enabled button and nothing happens.",
        "createdAt" : "2018-04-05T17:22:50Z",
        "updatedAt" : "2018-04-05T17:22:50Z",
        "lastEditedBy" : "d61ab95a-0bf0-4571-9098-19991dd821ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "f548093c7a9f337f72b8b026d0a8b071221dc86b",
    "line" : 204,
    "diffHunk" : "@@ -1,1 +315,319 @@      // When the button has a null onPressed callback, it will be disabled by default.\n      //\n      // However, for the purposes of this demo, we don't want the button to appear disabled.\n      // To achieve this we use a no-op callback instead of a null callback. This allows\n      // the buttons to appear active, but perform no actions."
  },
  {
    "id" : "0c9930d5-9ab7-4765-bfd8-d0b146fcd3c8",
    "prId" : 16389,
    "prUrl" : "https://github.com/flutter/flutter/pull/16389#pullrequestreview-111417447",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "064149ae-0357-4794-bcdd-84fdacb2386b",
        "parentId" : null,
        "authorId" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "body" : "syntax of TODOs is `// TODO(username): description, github_issue_url`",
        "createdAt" : "2018-04-11T21:56:22Z",
        "updatedAt" : "2018-04-11T21:56:22Z",
        "lastEditedBy" : "9b5a6de7-1648-432f-a400-7a47bea935d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "f40bb6a89e442ad0f35451be981b0e08622a4e87",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +275,279 @@      color: color,\n      hasNotch: enableNotch,\n      // TODO: Use an AnimatedCrossFade to build contents for centered FAB performantly.\n      // Using AnimatedCrossFade here previously was causing https://github.com/flutter/flutter/issues/16377.\n      child: buildBabContents(context, _BabMode.END_FAB),  "
  },
  {
    "id" : "a6323e7f-69db-45d4-86d0-911b6bdf2aa9",
    "prId" : 17177,
    "prUrl" : "https://github.com/flutter/flutter/pull/17177#pullrequestreview-116990606",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "56cbcd9a-01a6-49e9-a2db-f7d12f6926c2",
        "parentId" : null,
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "This is a nice use of generics to aggregate this info.",
        "createdAt" : "2018-05-02T17:21:15Z",
        "updatedAt" : "2018-05-02T17:39:12Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "d394e2fba0b3fcca56e62c611d24bac187f45b48",
    "line" : 262,
    "diffHunk" : "@@ -1,1 +181,185 @@}\n\nclass _ChoiceValue<T> {\n  const _ChoiceValue({ this.value, this.title, this.label });\n"
  },
  {
    "id" : "33cbd11e-f930-4fa7-a355-98174ef5f5c2",
    "prId" : 17177,
    "prUrl" : "https://github.com/flutter/flutter/pull/17177#pullrequestreview-116990606",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5482dc39-58a2-424f-83b0-17d142f3fa0c",
        "parentId" : null,
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "This Row could be on one line.",
        "createdAt" : "2018-05-02T17:26:03Z",
        "updatedAt" : "2018-05-02T17:39:12Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "d394e2fba0b3fcca56e62c611d24bac187f45b48",
    "line" : 553,
    "diffHunk" : "@@ -1,1 +341,345 @@      color: color,\n      hasNotch: showNotch,\n      child: new Row(\n        children: rowContents,\n      ),"
  },
  {
    "id" : "debcdae8-1554-4aa5-a165-f94379813194",
    "prId" : 17177,
    "prUrl" : "https://github.com/flutter/flutter/pull/17177#pullrequestreview-116990606",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8346bfcf-4dd9-4a10-ba03-5e74eb4abc01",
        "parentId" : null,
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "This could be on one line.",
        "createdAt" : "2018-05-02T17:27:33Z",
        "updatedAt" : "2018-05-02T17:39:12Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "d394e2fba0b3fcca56e62c611d24bac187f45b48",
    "line" : 530,
    "diffHunk" : "@@ -1,1 +314,318 @@\n    if (kCenterLocations.contains(fabLocation)) {\n      rowContents.add(\n        const Expanded(child: const SizedBox()),\n      );"
  },
  {
    "id" : "ad431e77-72f2-4a75-9251-62245dd82836",
    "prId" : 17177,
    "prUrl" : "https://github.com/flutter/flutter/pull/17177#pullrequestreview-116990606",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "18fb183a-20a6-4f24-bdb2-5858d282436a",
        "parentId" : null,
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "This pattern (generic radio item and generic choice value) seems useful enough that I'm wondering how it could be part of the framework (or at least the docs) near Radio.",
        "createdAt" : "2018-05-02T17:30:18Z",
        "updatedAt" : "2018-05-02T17:39:12Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "d394e2fba0b3fcca56e62c611d24bac187f45b48",
    "line" : 338,
    "diffHunk" : "@@ -1,1 +192,196 @@}\n\nclass _RadioItem<T> extends StatelessWidget {\n  const _RadioItem(this.value, this.groupValue, this.onChanged);\n"
  },
  {
    "id" : "2a8c7d14-b2cd-4103-8279-49cf13184195",
    "prId" : 17177,
    "prUrl" : "https://github.com/flutter/flutter/pull/17177#pullrequestreview-116990606",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cf8b6689-f4a1-47dc-9ecc-dfc9cd3c2c9c",
        "parentId" : null,
        "authorId" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "body" : "Kebabs anyone?  Since this is demo code, maybe use something more descriptive than \"Bab\", since it might not be obvious that \"bab\" is the bottom app bar.",
        "createdAt" : "2018-05-02T17:37:31Z",
        "updatedAt" : "2018-05-02T17:39:12Z",
        "lastEditedBy" : "fd82dff4-bfc7-4076-8507-e7e4521446f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "d394e2fba0b3fcca56e62c611d24bac187f45b48",
    "line" : 128,
    "diffHunk" : "@@ -1,1 +95,99 @@  // App bar color\n\n  static const List<Color> kBabColors = const <Color>[\n    null,\n    const Color(0xFFFFC100),"
  },
  {
    "id" : "94c23a0e-fe6c-43f2-bf26-75fbc1d0b720",
    "prId" : 18372,
    "prUrl" : "https://github.com/flutter/flutter/pull/18372#pullrequestreview-130907532",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e837a012-3bde-4cb7-ac33-8352c693ab74",
        "parentId" : null,
        "authorId" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "body" : "Even if it's impossible for guest.height to be 0 here, might be best to assert as much before dividing by guest.height.",
        "createdAt" : "2018-06-20T22:04:07Z",
        "updatedAt" : "2018-06-21T17:38:11Z",
        "lastEditedBy" : "9ae618fc-fa71-4bc9-be97-de7c674590eb",
        "tags" : [
        ]
      },
      {
        "id" : "68d07eb0-173b-4161-be70-175a38fdcc42",
        "parentId" : "e837a012-3bde-4cb7-ac33-8352c693ab74",
        "authorId" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "body" : "Added an assertion that guest.width is greater than 0.",
        "createdAt" : "2018-06-21T17:01:00Z",
        "updatedAt" : "2018-06-21T17:38:11Z",
        "lastEditedBy" : "d52883f5-8a4d-4c6e-bdb8-a6bb4b749a07",
        "tags" : [
        ]
      }
    ],
    "commit" : "446becc7d89540fa68c12977613b221508802d47",
    "line" : 132,
    "diffHunk" : "@@ -1,1 +467,471 @@    //  We compute notchToCenter by similar triangles:\n    final double notchToCenter =\n      intersection.height * (guest.height / 2.0)\n      / (guest.width / 2.0);\n"
  }
]