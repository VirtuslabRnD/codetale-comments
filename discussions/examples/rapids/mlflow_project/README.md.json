[
  {
    "id" : "22616553-8f91-4e21-867c-4b3e9176784c",
    "prId" : 3028,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/3028#pullrequestreview-448327634",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c8dfbd89-3611-4789-87a8-5fbe7dd82f28",
        "parentId" : null,
        "authorId" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "body" : "Maybe add a sentence describing what our example workflows do, e.g:\r\n\r\n```suggestion\r\nThe example workflows below train RAPIDs regression models to predict airline flight delays, using MLflow to log models and deploy them as local REST API endpoints for real-time inference.\r\n```\r\n\r\n^assuming that such a description is accurate :)",
        "createdAt" : "2020-07-14T17:44:29Z",
        "updatedAt" : "2020-08-21T00:53:45Z",
        "lastEditedBy" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "tags" : [
        ]
      }
    ],
    "commit" : "0f29c26a17a91c21d0912d82d5a8b5dd9510d4cc",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +4,8 @@**[RAPIDS cuML](https://github.com/rapidsai/cuml)** matches the scikit-learn API, so it can build on MLflow's existing support for scikit-learn-like models to support\npersistence and deployment.\"\n\nThe example workflows below train RAPIDs regression models to predict airline flight delays, using\nMLflow to log models and deploy them as local REST API endpoints for real-time inference. You can run them:"
  },
  {
    "id" : "10824775-3d5f-49c4-a51c-c90dcb2285d9",
    "prId" : 3028,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/3028#pullrequestreview-465643818",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "70a51238-5d30-45db-a735-f459b0cd6fe2",
        "parentId" : null,
        "authorId" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "body" : "We should include a test for the CLI-based workflow - it should be doable by adding an item to the list of `(directory, args_to_mlflow_run)` tuples in the existing [examples tests](https://github.com/mlflow/mlflow/blob/91dca77a7e850ec25a88dd79736cbab2bfd740a3/tests/examples/test_examples.py#L59). For example, you should be able to add an item like `(os.path.join(\"rapids\", \"mlflow_project\"), [\"-e\", \"simple\"])` and the test will invoke `mlflow run rapids/mlflow_projects -e simple` and verify that it succeeds.\r\n\r\nIt might be easiest to test this if we update the project so that `fpath` is actually an optional parameter and when unspecified, the training scripts (`train.py`, `train_simple.py`) download the data via logic like:\r\n\r\n```\r\nimport requests\r\nimport tempfile\r\n\r\n# Data will ultimately be written to the file whose path is stored in fname\r\n_, fname = tempfile.mkstemp()\r\nurl = \"https://rapidsai-cloud-ml-sample-data.s3-us-west-2.amazonaws.com/airline_small.parquet\"\r\nairline_data_response = requests.get(url)\r\nwith open(fname , 'wb') as handle:\r\n    handle.write(airline_data_response.content)\r\n```\r\n\r\nWe can defer this to a follow-up PR, but would be good to have - otherwise, this example may break in the future.",
        "createdAt" : "2020-08-12T06:53:31Z",
        "updatedAt" : "2020-08-21T00:53:45Z",
        "lastEditedBy" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "tags" : [
        ]
      },
      {
        "id" : "d58225b5-070b-4a4b-9c2d-4c9643dd836b",
        "parentId" : "70a51238-5d30-45db-a735-f459b0cd6fe2",
        "authorId" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "body" : "Ah, just discussed offline with @harupy - looks like our underlying CI provider (Github actions) doesn't support GPUs, so we unfortunately can't actually test this example - feel free to disregard the above comment.",
        "createdAt" : "2020-08-12T07:08:17Z",
        "updatedAt" : "2020-08-21T00:53:45Z",
        "lastEditedBy" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "tags" : [
        ]
      }
    ],
    "commit" : "0f29c26a17a91c21d0912d82d5a8b5dd9510d4cc",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +25,29 @@        # Download the file\n        wget -N https://rapidsai-cloud-ml-sample-data.s3-us-west-2.amazonaws.com/airline_small.parquet\n        ```\n1. Set MLflow tracking uri\n    1. ```shell script"
  },
  {
    "id" : "58bba23b-cdc7-41b8-a140-9d6d1b01963d",
    "prId" : 3028,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/3028#pullrequestreview-465637532",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cef7c797-0b3a-4b91-97b0-d4c3018bd0f3",
        "parentId" : null,
        "authorId" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "body" : "We no longer need to pass conda-env here right?\r\n```suggestion\r\n```\r\n\r\nAlso, I like the idea of having an easy-to-run \"simple\" entry point - could we add default values for the max_depth, max_features, n_estimators params in the MLproject file, as shown in [the docs](https://mlflow.org/docs/latest/projects.html#mlproject-file), and mention that the user can simply run `mlflow run . -e simple`?",
        "createdAt" : "2020-08-12T06:57:00Z",
        "updatedAt" : "2020-08-21T00:53:45Z",
        "lastEditedBy" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "tags" : [
        ]
      }
    ],
    "commit" : "0f29c26a17a91c21d0912d82d5a8b5dd9510d4cc",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +36,40 @@                --experiment-name RAPIDS-CLI \\\n                -P max_depth=10 -P max_features=0.75 -P n_estimators=500 \\\n                -P conda-env=$PWD/envs/conda.yaml \\\n                -P fpath=airline_small.parquet\n       ```"
  }
]