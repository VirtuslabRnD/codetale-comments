[
  {
    "id" : "73e56836-7ac1-4f7f-a838-13169b226362",
    "prId" : 35776,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/35776#pullrequestreview-6533185",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7dc93685-8042-49a5-8a20-d99848de9f97",
        "parentId" : null,
        "authorId" : "75116688-a62a-47be-90a5-3d780ac59886",
        "body" : "Also is it StatefulSet or Stateful Set?  The object is called StatefulSet, but in English how are we defining it?  Again please mention that this feature was previously named PetSet.\n",
        "createdAt" : "2016-10-28T22:46:34Z",
        "updatedAt" : "2016-11-05T07:17:37Z",
        "lastEditedBy" : "75116688-a62a-47be-90a5-3d780ac59886",
        "tags" : [
        ]
      },
      {
        "id" : "92bbcae9-933a-4359-a496-17af8af26208",
        "parentId" : "7dc93685-8042-49a5-8a20-d99848de9f97",
        "authorId" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "body" : "I vote for `Stateful Set`. I saw similar use in the docs of `Replica Set`, `Scheduled Job`, etc\n",
        "createdAt" : "2016-10-31T21:53:33Z",
        "updatedAt" : "2016-11-05T07:17:37Z",
        "lastEditedBy" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "tags" : [
        ]
      }
    ],
    "commit" : "d42eabd9d23effeaa69cff7fbf407066582de7b4",
    "line" : 63,
    "diffHunk" : "@@ -1,1 +166,170 @@If an error is returned the service create failed.\n\n## Step 2: Use a StatefulSet to create Cassandra Ring\n\nStatefulSets (previously PetSets) are a new feature that was added as an <i>Alpha</i> component in"
  },
  {
    "id" : "cc6c71bd-49b1-4d94-8745-1d17edb637c8",
    "prId" : 35776,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/35776#pullrequestreview-6350492",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c8be9043-c0fc-429d-bfda-f4276edf55f9",
        "parentId" : null,
        "authorId" : "75116688-a62a-47be-90a5-3d780ac59886",
        "body" : "These are not pods.  What are we calling them?  We have replicas in a deployment.  But each replica contains a pod, also you can have multiple pods in a single Pet.\n",
        "createdAt" : "2016-10-28T22:49:38Z",
        "updatedAt" : "2016-11-05T07:17:37Z",
        "lastEditedBy" : "75116688-a62a-47be-90a5-3d780ac59886",
        "tags" : [
        ]
      },
      {
        "id" : "0b9af1af-2964-4739-892b-e7cffab339cc",
        "parentId" : "c8be9043-c0fc-429d-bfda-f4276edf55f9",
        "authorId" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "body" : "I'm not sure if I understand this. Aren't those \"pets\" also pods? StatefulSet's status.replicas is calculated from the number of pods the controller sees, and the type of pets in the code is `api.Pod`\n",
        "createdAt" : "2016-10-29T00:36:59Z",
        "updatedAt" : "2016-11-05T07:17:37Z",
        "lastEditedBy" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "tags" : [
        ]
      },
      {
        "id" : "fb94f2ca-6446-4d06-8060-1ae61c10a39b",
        "parentId" : "c8be9043-c0fc-429d-bfda-f4276edf55f9",
        "authorId" : "97b6462a-9990-44a8-8a7a-1617f5e9e409",
        "body" : "I'm not clear on this either. I understood \"pet\" to be stateful pod, but it does seem they are not equivalent: From the user guide:\n\n> **Relationship between Pets and Pods**: PetSet requires there be {0..N-1} Pets. Each Pet has a deterministic name - PetSetName-Ordinal, and a unique identity. Each Pet has at most one pod, and each PetSet has at most one Pet with a given identity.\n\nYet the example shown seems to only contain one pod template, so I'm not sure what a multi-pod pet would look like. The code in the apps API group's types.go also shows only a single pod template for a StatefulSet, which suggests that my original understanding was correct. Chris, do you have an example that explains this better?\n",
        "createdAt" : "2016-10-29T08:58:36Z",
        "updatedAt" : "2016-11-05T07:17:37Z",
        "lastEditedBy" : "97b6462a-9990-44a8-8a7a-1617f5e9e409",
        "tags" : [
        ]
      },
      {
        "id" : "a63cb620-6cd8-47c3-8910-e83e985baf7d",
        "parentId" : "c8be9043-c0fc-429d-bfda-f4276edf55f9",
        "authorId" : "75116688-a62a-47be-90a5-3d780ac59886",
        "body" : "My mistake, I am incorrect ;)\n",
        "createdAt" : "2016-10-29T16:47:33Z",
        "updatedAt" : "2016-11-05T07:17:37Z",
        "lastEditedBy" : "75116688-a62a-47be-90a5-3d780ac59886",
        "tags" : [
        ]
      }
    ],
    "commit" : "d42eabd9d23effeaa69cff7fbf407066582de7b4",
    "line" : 192,
    "diffHunk" : "@@ -1,1 +381,385 @@```\n\nThe StatefulSet will now contain four pods.\n\n```console"
  },
  {
    "id" : "d3409509-d221-4cbb-af5a-10ed6bc4905a",
    "prId" : 35776,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/35776#pullrequestreview-6350496",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "306deacb-72ae-454a-96a9-02197e2d6b3e",
        "parentId" : null,
        "authorId" : "75116688-a62a-47be-90a5-3d780ac59886",
        "body" : "Again not a pod.\n",
        "createdAt" : "2016-10-28T22:50:15Z",
        "updatedAt" : "2016-11-05T07:17:37Z",
        "lastEditedBy" : "75116688-a62a-47be-90a5-3d780ac59886",
        "tags" : [
        ]
      },
      {
        "id" : "5eababf3-1708-4ea0-93c5-bca6a65c5335",
        "parentId" : "306deacb-72ae-454a-96a9-02197e2d6b3e",
        "authorId" : "75116688-a62a-47be-90a5-3d780ac59886",
        "body" : "Ignore this mistake, carry on ;)\n",
        "createdAt" : "2016-10-29T16:47:59Z",
        "updatedAt" : "2016-11-05T07:17:37Z",
        "lastEditedBy" : "75116688-a62a-47be-90a5-3d780ac59886",
        "tags" : [
        ]
      }
    ],
    "commit" : "d42eabd9d23effeaa69cff7fbf407066582de7b4",
    "line" : null,
    "diffHunk" : "@@ -1,1 +401,405 @@There are some limitations with the Alpha release of PetSet in 1.3. From the [documentation](http://kubernetes.io/docs/user-guide/petset/):\n\n\"Deleting the StatefulSet will not delete any pods. You will either have to manually scale it down to 0 pods first, or delete the pods yourself.\nDeleting and/or scaling a StatefulSet down will not delete the volumes associated with the StatefulSet. This is done to ensure safety first, your data is more valuable than an auto purge of all related StatefulSet resources. Deleting the Persistent Volume Claims will result in a deletion of the associated volumes.\"\n"
  }
]