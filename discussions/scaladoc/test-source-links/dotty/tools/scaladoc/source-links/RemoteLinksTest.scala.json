[
  {
    "id" : "f813f129-d5a5-4d46-a5b8-2176575a4ee1",
    "prId" : 12819,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/12819#pullrequestreview-682889169",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "12857b94-1eda-4a5d-9767-516893528c93",
        "parentId" : null,
        "authorId" : "c636b6d6-b0fe-41bd-bfa7-5a5625a4e7a5",
        "body" : "If I understand it correctly we look for the member in the range of lines. Was there something failing for the exact line match?",
        "createdAt" : "2021-06-14T12:42:01Z",
        "updatedAt" : "2021-06-14T12:42:27Z",
        "lastEditedBy" : "c636b6d6-b0fe-41bd-bfa7-5a5625a4e7a5",
        "tags" : [
        ]
      },
      {
        "id" : "ab12f074-21c2-43b6-b3e0-603aad9423d3",
        "parentId" : "12857b94-1eda-4a5d-9767-516893528c93",
        "authorId" : "6135cab1-288c-42ce-a328-e0469e2b06c8",
        "body" : "yes, in was the case of name that spans in multiple lines like `asMatchable`:  https://github.com/lampepfl/dotty/blob/3.0.0/library/src/scala/compiletime/package.scala#L169-L170",
        "createdAt" : "2021-06-14T13:08:52Z",
        "updatedAt" : "2021-06-14T13:08:52Z",
        "lastEditedBy" : "6135cab1-288c-42ce-a328-e0469e2b06c8",
        "tags" : [
        ]
      }
    ],
    "commit" : "5938e7dd9b23b661b49c706eda3caa78c241783f",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +48,52 @@            val toLine = expectedLine + 3\n            val memberToMatch = member.replace(\"`\", \"\")\n            val lineCorrectlyDefined = (expectedLine.toInt until toLine.toInt).exists{ line =>\n              val loc = doc.select(s\"#LC$line\").text\n"
  }
]