[
  {
    "id" : "ce8b1799-347b-4cb6-b468-470409ff3f86",
    "prId" : 7324,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/7324#pullrequestreview-298006729",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6f155c53-caac-45bc-868d-74874dbfd77e",
        "parentId" : null,
        "authorId" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "body" : "> @liufengyun the incremental compilation example actually works (or fails as expected).\r\n\r\nThat might be related to a problem in my local testing. Instead of commenting it out initially, I guess changing its body to `???` will break incremental compilation.",
        "createdAt" : "2019-10-07T07:46:34Z",
        "updatedAt" : "2019-10-28T09:07:11Z",
        "lastEditedBy" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "tags" : [
        ]
      },
      {
        "id" : "3d6b86cc-eb26-4ba2-bdf9-2e4c2ff324d8",
        "parentId" : "6f155c53-caac-45bc-868d-74874dbfd77e",
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "Still works as expected. The only way I have found to trick the incremental compiler is by reflective method calls in the implementation of the macro. #7362 can fix that.",
        "createdAt" : "2019-10-07T07:57:43Z",
        "updatedAt" : "2019-10-28T09:07:11Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      },
      {
        "id" : "ec9c2c2e-8cc0-40ae-86ff-7893cd3f169b",
        "parentId" : "6f155c53-caac-45bc-868d-74874dbfd77e",
        "authorId" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "body" : "I'm surprised it still works.\r\n\r\nAfter a discussion with @nicolasstucki , we figured out why.\r\n\r\nOne my local machine, I was testing with `dotc`, where the generated class files are not deleted; while in normal incremental compilation, the generated files are not available for reflection.\r\n\r\nIt's good to know that this PR does not introduce new problems regarding to incremental compilation --- old problems still persist (see #7042).",
        "createdAt" : "2019-10-07T09:36:08Z",
        "updatedAt" : "2019-10-28T09:07:11Z",
        "lastEditedBy" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "tags" : [
        ]
      }
    ],
    "commit" : "4f59892f25ca264a367f3fefbeea48dc1bb1546f",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +3,7 @@\n  def f: Int = 3\n  def g: A = foo // comment out `g` first, then enable `g`\n}"
  }
]