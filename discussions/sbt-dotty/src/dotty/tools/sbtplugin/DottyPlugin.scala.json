[
  {
    "id" : "a65f0f75-06b9-4841-9f6a-884c60f3bf3f",
    "prId" : 11758,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/11758#pullrequestreview-613190330",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "aba5c66c-160d-4a6a-9606-23157466e5f6",
        "parentId" : null,
        "authorId" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "body" : "Can you add a comment explaining why that's needed?",
        "createdAt" : "2021-03-16T12:38:26Z",
        "updatedAt" : "2021-03-16T14:53:24Z",
        "lastEditedBy" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "tags" : [
        ]
      }
    ],
    "commit" : "3341f32e4d984054784c3a13e45d23121e88da06",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +466,470 @@    scalacOptions ++= {\n      // From sbt 1.5 scaladoc is natively supported, and so the scalacOptions are already set.\n      val isSbt15 = VersionNumber(sbtVersion.value)\n        .matchesSemVer(SemanticSelector(\">=1.5.0-M1\"))\n      if (isDotty.value && !isSbt15) {"
  },
  {
    "id" : "ccd4bf08-eb25-4b1e-9836-abce4bb158c6",
    "prId" : 11289,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/11289#pullrequestreview-581365848",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c0b6d551-785c-4c83-830b-4286395b9a2f",
        "parentId" : null,
        "authorId" : "3a56b927-736f-4aab-8690-358cd24ca570",
        "body" : "Does the new name really make sense here? Perhaps we should call this key `useNewScaladoc`?",
        "createdAt" : "2021-02-02T13:34:52Z",
        "updatedAt" : "2021-02-04T12:22:58Z",
        "lastEditedBy" : "3a56b927-736f-4aab-8690-358cd24ca570",
        "tags" : [
        ]
      },
      {
        "id" : "5ab7f101-8601-4aba-afab-24fa4dcaba3b",
        "parentId" : "c0b6d551-785c-4c83-830b-4286395b9a2f",
        "authorId" : "6135cab1-288c-42ce-a328-e0469e2b06c8",
        "body" : "Next step would be removing scala3-doc and this setting as well.",
        "createdAt" : "2021-02-02T13:56:46Z",
        "updatedAt" : "2021-02-04T12:22:58Z",
        "lastEditedBy" : "6135cab1-288c-42ce-a328-e0469e2b06c8",
        "tags" : [
        ]
      }
    ],
    "commit" : "ccb76da991bfbb882e1e91e5c6051d91ed4b86f3",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +24,28 @@    val isDottyJS = settingKey[Boolean](\"Is this project compiled with Dotty and Scala.js?\")\n\n    val useScaladoc = settingKey[Boolean](\"Use scaladoc as the documentation tool\")\n    val useScala3doc = useScaladoc\n    val tastyFiles = taskKey[Seq[File]](\"List all testy files\")"
  },
  {
    "id" : "4e38fc49-6377-4072-a588-3048b02b7e54",
    "prId" : 10762,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/10762#pullrequestreview-550939980",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4bbbe9b5-f8d3-4d00-a9ff-0132e2afa12d",
        "parentId" : null,
        "authorId" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "body" : "More future-proof:\r\n```suggestion\r\n        v.startsWith(\"3\") && !v.startsWith(\"3.0.0-M1\") && !v.startsWith(\"3.0.0-M2\")\r\n```",
        "createdAt" : "2020-12-13T16:48:23Z",
        "updatedAt" : "2020-12-13T16:48:48Z",
        "lastEditedBy" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "tags" : [
        ]
      },
      {
        "id" : "a99410ab-271f-4f21-9ffb-52726253b235",
        "parentId" : "4bbbe9b5-f8d3-4d00-a9ff-0132e2afa12d",
        "authorId" : "3a56b927-736f-4aab-8690-358cd24ca570",
        "body" : "This setting is going to disappear with 3.0.0, there's no need for this.",
        "createdAt" : "2020-12-13T17:10:08Z",
        "updatedAt" : "2020-12-13T17:10:08Z",
        "lastEditedBy" : "3a56b927-736f-4aab-8690-358cd24ca570",
        "tags" : [
        ]
      }
    ],
    "commit" : "0fd03ff6216f5201a656cef086c9489b447e4849",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +365,369 @@      useScala3doc := {\n        val v = scalaVersion.value\n        v.startsWith(\"3.0.0\") && !v.startsWith(\"3.0.0-M1\") && !v.startsWith(\"3.0.0-M2\")\n      },\n      // We need to add doctool classes to the classpath so they can be called"
  },
  {
    "id" : "cec34ac3-6bf8-415e-9a85-ee43eaec4a49",
    "prId" : 10607,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/10607#pullrequestreview-546420567",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d2f2adb4-f097-4153-9de2-4c938b3f3c55",
        "parentId" : null,
        "authorId" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "body" : "A documentation comment would be nice (maybe move/copy some part of the comment where TopClassLoader is used. It's also worth explaining why we pass `null` to the super-call.",
        "createdAt" : "2020-12-07T18:29:39Z",
        "updatedAt" : "2020-12-11T18:08:42Z",
        "lastEditedBy" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "tags" : [
        ]
      }
    ],
    "commit" : "ef81ccf7446d54a4f0cf795bcfe274f33cfd85fd",
    "line" : 96,
    "diffHunk" : "@@ -1,1 +604,608 @@ * classes and only the JDK classes are loade from it.\n */\nprivate class TopClassLoader(sbtLoader: ClassLoader) extends ClassLoader(null) {\n  // We can't use the loadClass overload with two arguments because it's\n  // protected, but we can do the same by hand (the classloader instance"
  },
  {
    "id" : "9dbbffa5-7812-470e-b6e3-812ba8101dd1",
    "prId" : 10607,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/10607#pullrequestreview-546420567",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e8a1ed75-99ff-4bf0-8117-68efe520986a",
        "parentId" : null,
        "authorId" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "body" : "I think the comment that was written above this code in CompilerClassLoader is worth preserving (https://github.com/lampepfl/dotty/blob/7b26811cfa827af5ee6d71693020d23827a02e33/sbt-bridge/src/xsbt/CompilerClassLoader.java#L47-L49), might also be worth mentioning that the other overload of loadClass delegates to this one?",
        "createdAt" : "2020-12-07T18:31:42Z",
        "updatedAt" : "2020-12-11T18:08:42Z",
        "lastEditedBy" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "tags" : [
        ]
      }
    ],
    "commit" : "ef81ccf7446d54a4f0cf795bcfe274f33cfd85fd",
    "line" : 103,
    "diffHunk" : "@@ -1,1 +611,615 @@  override protected def loadClass(name: String, resolve: Boolean): Class[_] = {\n    if (name.startsWith(\"xsbti.\") || name.startsWith(\"org.jline.\")) {\n      val c = sbtLoader.loadClass(name)\n      if (resolve) resolveClass(c)\n      c"
  },
  {
    "id" : "ca9d121d-6171-4671-b014-b50b3450168c",
    "prId" : 10607,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/10607#pullrequestreview-548326464",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "05728499-3c1b-48e0-9c06-b7396724419e",
        "parentId" : null,
        "authorId" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "body" : "Does the updated sbt-dotty plugin still work with previous versions of dotty?",
        "createdAt" : "2020-12-08T16:15:31Z",
        "updatedAt" : "2020-12-11T18:08:42Z",
        "lastEditedBy" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "tags" : [
        ]
      },
      {
        "id" : "dffeb6b8-166c-4615-b298-fbfc8ff57f8d",
        "parentId" : "05728499-3c1b-48e0-9c06-b7396724419e",
        "authorId" : "ae8a350c-513d-4e26-b751-b1b65838ca0b",
        "body" : "Yes it does!\r\n",
        "createdAt" : "2020-12-09T15:51:04Z",
        "updatedAt" : "2020-12-11T18:08:42Z",
        "lastEditedBy" : "ae8a350c-513d-4e26-b751-b1b65838ca0b",
        "tags" : [
        ]
      }
    ],
    "commit" : "ef81ccf7446d54a4f0cf795bcfe274f33cfd85fd",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +536,540 @@\n  // Adapted from private mkScalaInstance in sbt\n  def makeScalaInstance(\n    state: State, dottyVersion: String, scalaLibrary: File, dottyLibrary: File, compiler: File, all: Seq[File], appConfiguration: AppConfiguration\n  ): ScalaInstance = {"
  },
  {
    "id" : "cc42c90a-5c72-4c89-bece-0e961468bd1e",
    "prId" : 10092,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/10092#pullrequestreview-519843166",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "baba0343-dda4-45a0-a566-bd266fe25011",
        "parentId" : null,
        "authorId" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "body" : "What is this for? Some documentation would be useful",
        "createdAt" : "2020-10-28T17:22:06Z",
        "updatedAt" : "2020-10-29T09:33:58Z",
        "lastEditedBy" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "tags" : [
        ]
      },
      {
        "id" : "3efc57b6-f2e5-44cf-b2fb-5f555252e5bb",
        "parentId" : "baba0343-dda4-45a0-a566-bd266fe25011",
        "authorId" : "6135cab1-288c-42ce-a328-e0469e2b06c8",
        "body" : "I've added a comment here and created a issue for proper documentation: https://github.com/lampepfl/scala3doc/issues/222",
        "createdAt" : "2020-10-28T23:15:08Z",
        "updatedAt" : "2020-10-29T09:33:58Z",
        "lastEditedBy" : "6135cab1-288c-42ce-a328-e0469e2b06c8",
        "tags" : [
        ]
      },
      {
        "id" : "d55a8428-5c4e-4fbe-8b26-4f064e9d8c0d",
        "parentId" : "baba0343-dda4-45a0-a566-bd266fe25011",
        "authorId" : "3a56b927-736f-4aab-8690-358cd24ca570",
        "body" : "So the reason we need this is that we have a separate CLI interface with its own arguments, and we may need to forward options to it (that's what `scala3docOptions` keeps track of). When we receive options from SBT, we strip off the ones starting with `--+DOC+`, and pass these along with some default values we extracted from compiler args to the doctool arg parser.",
        "createdAt" : "2020-10-29T16:18:35Z",
        "updatedAt" : "2020-10-29T16:18:35Z",
        "lastEditedBy" : "3a56b927-736f-4aab-8690-358cd24ca570",
        "tags" : [
        ]
      }
    ],
    "commit" : "a1d48142b8838f5d53ad8fe8588a530c89cb1baa",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +366,370 @@      Compile / doc / scalacOptions := {\n        // We are passing scala3doc argument list as single argument to scala instance starting with magic prefix \"--+DOC+\"\n        val s3dOpts = scala3docOptions.value.map(\"--+DOC+\" + _)\n        val s3cOpts = (Compile / doc / scalacOptions).value\n        if (isDotty.value && useScala3doc.value) {"
  },
  {
    "id" : "e22a371d-f072-4de9-ba4a-a7a8ad15ecff",
    "prId" : 9637,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/9637#pullrequestreview-474610038",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "34fc4d00-ff0d-418f-ac70-60ba0815c6cd",
        "parentId" : null,
        "authorId" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "body" : "Since the build of dotty itself uses sbt-dotty, you should be able to remove the similar patching done in project/Build.scala",
        "createdAt" : "2020-08-25T15:37:34Z",
        "updatedAt" : "2020-08-27T08:51:52Z",
        "lastEditedBy" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "tags" : [
        ]
      },
      {
        "id" : "de2907ce-df69-48d5-bf70-31b95a8252fd",
        "parentId" : "34fc4d00-ff0d-418f-ac70-60ba0815c6cd",
        "authorId" : "5a9cd756-9120-4d5e-ac88-e9c636084f0e",
        "body" : "Oh, I did not know that. That's interesting.",
        "createdAt" : "2020-08-25T15:41:18Z",
        "updatedAt" : "2020-08-27T08:51:52Z",
        "lastEditedBy" : "5a9cd756-9120-4d5e-ac88-e9c636084f0e",
        "tags" : [
        ]
      }
    ],
    "commit" : "0a7d9dc62d2bd962187ad45d4723d33f82c5d7f0",
    "line" : 72,
    "diffHunk" : "@@ -1,1 +351,355 @@      },\n\n      // Patch up some more options if this is Dotty with Scala.js\n      scalacOptions := {\n        val prev = scalacOptions.value"
  },
  {
    "id" : "bd8a6af2-c3c2-4890-8b28-8f1653eb10b9",
    "prId" : 9637,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/9637#pullrequestreview-475272156",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a64ac2d2-cd3d-44fc-ba82-944bc7dde5f7",
        "parentId" : null,
        "authorId" : "5a9cd756-9120-4d5e-ac88-e9c636084f0e",
        "body" : "The way this works basically assumes that the settings of `ScalaJSPlugin` will be applied *before* those of `DottyPlugin`. It seems to be the case in the tests I did, perhaps because `ScalaJSPlugin` is explicitly enabled, while `DottyPlugin` is triggered. However, I could not find an authoritative source on the topic.\r\n\r\nI have an alternative implementation in mind, that would not have that assumption: it would be to have *another* `DottyJSPlugin`, that would be auto-triggered by the presence of `DottyPlugin` *and* `ScalaJSPlugin`. That plugin would be guaranteed to have its settings be applied after both of them, by the documented rules. However, that would require `sbt-dotty` to depend on `sbt-scalajs` to be able to refer to `ScalaJSPlugin`.",
        "createdAt" : "2020-08-25T15:39:13Z",
        "updatedAt" : "2020-08-27T08:51:52Z",
        "lastEditedBy" : "5a9cd756-9120-4d5e-ac88-e9c636084f0e",
        "tags" : [
        ]
      },
      {
        "id" : "f331b2cf-3dd8-4f73-9ca3-284a9c57cedf",
        "parentId" : "a64ac2d2-cd3d-44fc-ba82-944bc7dde5f7",
        "authorId" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "body" : "Hopefully in the not-too-distant future sbt-dotty will be obsoleted by sbt supporting dotty natively, so we need to plan for that too",
        "createdAt" : "2020-08-25T19:09:17Z",
        "updatedAt" : "2020-08-27T08:51:52Z",
        "lastEditedBy" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "tags" : [
        ]
      },
      {
        "id" : "14fcd14e-00e7-4123-9ca8-abb91e36d0fb",
        "parentId" : "a64ac2d2-cd3d-44fc-ba82-944bc7dde5f7",
        "authorId" : "5a9cd756-9120-4d5e-ac88-e9c636084f0e",
        "body" : "When that happens, the Scala.js-Dotty combination will have to be handled by sbt-scalajs. Currently though, since apparently `DottyPlugin` gets applied after `ScalaJSPlugin`, there's nothing sbt-scalajs can do, AFAICT.",
        "createdAt" : "2020-08-25T21:14:29Z",
        "updatedAt" : "2020-08-27T08:51:52Z",
        "lastEditedBy" : "5a9cd756-9120-4d5e-ac88-e9c636084f0e",
        "tags" : [
        ]
      },
      {
        "id" : "ed3b1f2f-3e8e-4420-91d0-ecb766e40016",
        "parentId" : "a64ac2d2-cd3d-44fc-ba82-944bc7dde5f7",
        "authorId" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "body" : "> When that happens, the Scala.js-Dotty combination will have to be handled by sbt-scalajs.\r\n\r\nOK, can you add a comment mentioning this around here?",
        "createdAt" : "2020-08-25T21:29:01Z",
        "updatedAt" : "2020-08-27T08:51:52Z",
        "lastEditedBy" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "tags" : [
        ]
      },
      {
        "id" : "9d468ceb-2590-4f31-91e5-4333f381bfa2",
        "parentId" : "a64ac2d2-cd3d-44fc-ba82-944bc7dde5f7",
        "authorId" : "5a9cd756-9120-4d5e-ac88-e9c636084f0e",
        "body" : "Done.",
        "createdAt" : "2020-08-26T08:36:13Z",
        "updatedAt" : "2020-08-27T08:51:52Z",
        "lastEditedBy" : "5a9cd756-9120-4d5e-ac88-e9c636084f0e",
        "tags" : [
        ]
      }
    ],
    "commit" : "0a7d9dc62d2bd962187ad45d4723d33f82c5d7f0",
    "line" : 46,
    "diffHunk" : "@@ -1,1 +188,192 @@       * wouldn't be able to fix up things like the dependency on dotty-library.\n       */\n      isDottyJS := {\n        isDotty.value && (crossVersion.value match {\n          case binary: librarymanagement.Binary => binary.prefix.contains(\"sjs1_\")"
  },
  {
    "id" : "30195599-b88f-4deb-9a9e-5b74a9bfeee8",
    "prId" : 9637,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/9637#pullrequestreview-475513193",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a5a8ee4b-0e17-46af-8df9-50e33a5f19ed",
        "parentId" : null,
        "authorId" : "f186a0ec-8fc4-4e94-87e9-c629d1b38b60",
        "body" : "I assume this applies transitively to `scalajs-test-interface`?",
        "createdAt" : "2020-08-26T13:52:18Z",
        "updatedAt" : "2020-08-27T08:51:52Z",
        "lastEditedBy" : "f186a0ec-8fc4-4e94-87e9-c629d1b38b60",
        "tags" : [
        ]
      },
      {
        "id" : "5294d917-cbd5-4a6f-961a-b1be3ba03928",
        "parentId" : "a5a8ee4b-0e17-46af-8df9-50e33a5f19ed",
        "authorId" : "5a9cd756-9120-4d5e-ac88-e9c636084f0e",
        "body" : "Yes, because the dependency on scalajs-test-interface will be lookup up in its POM file. And in the POM file, this has already been hard-wired to scalajs-test-interface_2.13.",
        "createdAt" : "2020-08-26T13:54:43Z",
        "updatedAt" : "2020-08-27T08:51:52Z",
        "lastEditedBy" : "5a9cd756-9120-4d5e-ac88-e9c636084f0e",
        "tags" : [
        ]
      }
    ],
    "commit" : "0a7d9dc62d2bd962187ad45d4723d33f82c5d7f0",
    "line" : 98,
    "diffHunk" : "@@ -1,1 +377,381 @@              )\n            }\n            // Apply withDottyCompat to the dependency on scalajs-test-bridge\n            .map { moduleID =>\n              if (moduleID.organization == \"org.scala-js\" && moduleID.name == \"scalajs-test-bridge\")"
  },
  {
    "id" : "05aed81f-56fa-4d4b-8f58-01f8f4746bad",
    "prId" : 6577,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/6577#pullrequestreview-243323732",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b3d8e51e-3037-4bec-b645-add2a80af82e",
        "parentId" : null,
        "authorId" : "5f907c64-1898-4d74-945b-1f630a7406b9",
        "body" : "You can preserve existing definitions of `classpathOptions in console` by using the `.?` combinator:\r\n\r\n```suggestion\r\n          (classpathOptions in console).?.value.getOrElse((classpathOptions in console in ThisBuild).value)\r\n```\r\n\r\nThose would be project-level settings that come before `DottyPlugin`, which might be niche/inexistent.\r\n\r\nBtw the underlying sbt issue here is https://github.com/sbt/sbt/issues/2899, which I've been investigating.",
        "createdAt" : "2019-05-29T11:07:34Z",
        "updatedAt" : "2019-05-29T14:39:21Z",
        "lastEditedBy" : "5f907c64-1898-4d74-945b-1f630a7406b9",
        "tags" : [
        ]
      },
      {
        "id" : "67b1fd0d-95d1-438c-b287-5b89a95b0cf6",
        "parentId" : "b3d8e51e-3037-4bec-b645-add2a80af82e",
        "authorId" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "body" : "Wow, I had never heard of `?` before! However it doesn't seem to be enough, `(classpathOptions in console).?.value` is never `None` when I run it, instead it seems to always be equal to `Some((classpathOptions in console).value)` which ends up using the `classpathOptions` definition below.",
        "createdAt" : "2019-05-29T11:25:52Z",
        "updatedAt" : "2019-05-29T14:39:21Z",
        "lastEditedBy" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "tags" : [
        ]
      },
      {
        "id" : "786195b1-c18d-4b29-802c-d2167dd7b731",
        "parentId" : "b3d8e51e-3037-4bec-b645-add2a80af82e",
        "authorId" : "5f907c64-1898-4d74-945b-1f630a7406b9",
        "body" : "Ah, yeah.  It's not undefined as it just falls back to the problematically-redefined project-level `classpathOptions` setting.\r\n\r\nWorth a try.",
        "createdAt" : "2019-05-29T11:52:27Z",
        "updatedAt" : "2019-05-29T14:39:21Z",
        "lastEditedBy" : "5f907c64-1898-4d74-945b-1f630a7406b9",
        "tags" : [
        ]
      },
      {
        "id" : "729c00f8-289f-4e71-8fd3-c4fc95e55677",
        "parentId" : "b3d8e51e-3037-4bec-b645-add2a80af82e",
        "authorId" : "487cb970-e025-4904-93c1-b4d8083a66b0",
        "body" : "What's wrong with `(classpathOptions in console).value`? That will pick up project-level if it's there, and it will delegate to `ThisBuild` when it isn't automatically.\r\n",
        "createdAt" : "2019-05-29T14:44:12Z",
        "updatedAt" : "2019-05-29T14:44:12Z",
        "lastEditedBy" : "487cb970-e025-4904-93c1-b4d8083a66b0",
        "tags" : [
        ]
      },
      {
        "id" : "d0bbd564-3742-4a71-9142-e7600f649781",
        "parentId" : "b3d8e51e-3037-4bec-b645-add2a80af82e",
        "authorId" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "body" : "The problem is that it picks up the `classpathOptions` set just below.",
        "createdAt" : "2019-05-29T15:02:39Z",
        "updatedAt" : "2019-05-29T15:02:39Z",
        "lastEditedBy" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "tags" : [
        ]
      }
    ],
    "commit" : "eb7ef9bbd66f0a8458024245cd57770b8d9f9bad",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +248,252 @@          classpathOptions.value // The Dotty REPL doesn't require anything special on its classpath\n        else\n          (classpathOptions in console in ThisBuild).value\n      },\n      classpathOptions := {"
  },
  {
    "id" : "29a825e6-d5a4-48f8-9b4d-56396d0906cf",
    "prId" : 5835,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/5835#pullrequestreview-202075149",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "eb656839-b6a8-4a46-a636-4ef5bd7f6b22",
        "parentId" : null,
        "authorId" : "5a9cd756-9120-4d5e-ac88-e9c636084f0e",
        "body" : "The above suggests that `compilerJar` is fetched from the same \"bag\" as `allJars`. Therefore I don't understand how `allJars` is exempted from the compiler jar, and hence how the NOTE of point 3. in the big comment above is applied. Could you elaborate?",
        "createdAt" : "2019-02-11T11:02:40Z",
        "updatedAt" : "2019-02-13T16:50:59Z",
        "lastEditedBy" : "5a9cd756-9120-4d5e-ac88-e9c636084f0e",
        "tags" : [
        ]
      },
      {
        "id" : "2debceda-ec3b-40d1-a50c-454943ca7a0c",
        "parentId" : "eb656839-b6a8-4a46-a636-4ef5bd7f6b22",
        "authorId" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "body" : "`allJars` does contain `compilerJar`, all the jars defined here are used by zinc to form the JVM classpath. The NOTE in 3 talks about scala-library, but I just realized it's not entirely true: I thought that sbt would move the scala-library you depend on from the compiler classpath to the compiler bootclasspath, but actually it removes the scala-library you depend on from the compiler classpath and add to the compiler bootclasspath the scala-library corresponding to your current scalaVersion. This only works because scala guarantees forward and backward bin compat. I'll update the comment to clarify.",
        "createdAt" : "2019-02-11T12:17:37Z",
        "updatedAt" : "2019-02-13T16:50:59Z",
        "lastEditedBy" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "tags" : [
        ]
      }
    ],
    "commit" : "6e92463932ac40130285da2ec96957f9a59d13bb",
    "line" : 217,
    "diffHunk" : "@@ -1,1 +285,289 @@            scalaOrganization.value, s\"dotty-compiler_${scalaBinaryVersion.value}\", scalaVersion.value)\n          val allJars =\n            getJars(updateReport, AllPassFilter, AllPassFilter, AllPassFilter)\n\n          makeScalaInstance("
  },
  {
    "id" : "3255a362-936f-476d-8cc8-8b4bb32d02a5",
    "prId" : 4952,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/4952#pullrequestreview-151963497",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "abb9b446-b013-4f5c-860c-3950d341b1e1",
        "parentId" : null,
        "authorId" : "223e67d6-1873-432a-9af9-f40b82a7eedd",
        "body" : "Why is this a `taskDyn`? Is it to only evaluate `fetchArtifactsOf ` if `isDotty` is true?",
        "createdAt" : "2018-09-03T16:15:31Z",
        "updatedAt" : "2018-09-04T13:34:02Z",
        "lastEditedBy" : "223e67d6-1873-432a-9af9-f40b82a7eedd",
        "tags" : [
        ]
      },
      {
        "id" : "9224959b-774c-42ca-8c8f-4163e18e7026",
        "parentId" : "abb9b446-b013-4f5c-860c-3950d341b1e1",
        "authorId" : "e625ae4c-fba4-4c8f-9728-a669f65f1bcb",
        "body" : "Yes",
        "createdAt" : "2018-09-04T08:38:53Z",
        "updatedAt" : "2018-09-04T13:34:02Z",
        "lastEditedBy" : "e625ae4c-fba4-4c8f-9728-a669f65f1bcb",
        "tags" : [
        ]
      }
    ],
    "commit" : "288d9b47fb86b89dfe3fc3c0fb9feae759c482f3",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +181,185 @@      },\n\n      scalaInstance := Def.taskDyn {\n        val si = scalaInstance.value\n        if (isDotty.value) {"
  }
]