[
  {
    "id" : "f466fe25-f0d7-4355-b6e1-454381aa3eb1",
    "prId" : 10579,
    "prUrl" : "https://github.com/apache/kafka/pull/10579#pullrequestreview-671843426",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6d64f254-2437-43c7-8331-89d62358db0c",
        "parentId" : null,
        "authorId" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "body" : "No need to cast to KafkaException.",
        "createdAt" : "2021-05-26T22:12:05Z",
        "updatedAt" : "2021-05-28T01:23:55Z",
        "lastEditedBy" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "tags" : [
        ]
      },
      {
        "id" : "f434b177-8897-4a92-882a-da705ddf6d17",
        "parentId" : "6d64f254-2437-43c7-8331-89d62358db0c",
        "authorId" : "403b8bdd-d152-4255-86a7-0bdb3d2b40a5",
        "body" : "It is needed as the method is declared with throws KafkaException. I am also fine with removing it as it is a RTE.",
        "createdAt" : "2021-05-30T15:53:47Z",
        "updatedAt" : "2021-05-30T15:53:47Z",
        "lastEditedBy" : "403b8bdd-d152-4255-86a7-0bdb3d2b40a5",
        "tags" : [
        ]
      }
    ],
    "commit" : "99edb5d679feaaa72df291c00e73de4511208daa",
    "line" : 79,
    "diffHunk" : "@@ -1,1 +77,81 @@            Exception ex = callback.exception();\n            if (ex instanceof KafkaException) {\n                throw (KafkaException) ex;\n            } else {\n                throw new KafkaException(ex);"
  },
  {
    "id" : "f056a592-afcc-4d83-be23-092a3374475f",
    "prId" : 10579,
    "prUrl" : "https://github.com/apache/kafka/pull/10579#pullrequestreview-673833347",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d75b5ecf-1323-4797-8784-b838800858d7",
        "parentId" : null,
        "authorId" : "b4f52e78-c19e-46b4-b486-6da86e32e687",
        "body" : "It appears this class does not have unit tests currently. Is there a plan to add unit tests?",
        "createdAt" : "2021-06-02T06:44:35Z",
        "updatedAt" : "2021-06-02T08:15:15Z",
        "lastEditedBy" : "b4f52e78-c19e-46b4-b486-6da86e32e687",
        "tags" : [
        ]
      }
    ],
    "commit" : "99edb5d679feaaa72df291c00e73de4511208daa",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +36,40 @@ * Caller of this class should take care of not sending messages once the closing of this instance is initiated.\n */\npublic class ProducerManager implements Closeable {\n    private static final Logger log = LoggerFactory.getLogger(ProducerManager.class);\n"
  },
  {
    "id" : "9609e742-9cef-466f-94e0-a8ca1f698494",
    "prId" : 10579,
    "prUrl" : "https://github.com/apache/kafka/pull/10579#pullrequestreview-673833347",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6f96c228-deb5-4879-8cb8-8af82866bcfc",
        "parentId" : null,
        "authorId" : "b4f52e78-c19e-46b4-b486-6da86e32e687",
        "body" : "For readability, it'll be useful to place the positive case under `if` and negative case under `else`, such as:\r\n\r\n```\r\nif (callback.exception() == null) {\r\n ...\r\n} else {\r\n ...\r\n}\r\n```",
        "createdAt" : "2021-06-02T07:32:18Z",
        "updatedAt" : "2021-06-02T08:15:16Z",
        "lastEditedBy" : "b4f52e78-c19e-46b4-b486-6da86e32e687",
        "tags" : [
        ]
      }
    ],
    "commit" : "99edb5d679feaaa72df291c00e73de4511208daa",
    "line" : 80,
    "diffHunk" : "@@ -1,1 +78,82 @@            if (ex instanceof KafkaException) {\n                throw (KafkaException) ex;\n            } else {\n                throw new KafkaException(ex);\n            }"
  },
  {
    "id" : "a8d21dd5-4d4e-427e-8f73-2470b15cee76",
    "prId" : 10579,
    "prUrl" : "https://github.com/apache/kafka/pull/10579#pullrequestreview-691373571",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5454bce4-4ed1-408d-9465-1ee7cfced9a5",
        "parentId" : null,
        "authorId" : "1e1e52a7-6513-46fd-99c3-3d01eee59d17",
        "body" : "out of curiosity: why we don't do the check within the `new KafkaException(...)` call",
        "createdAt" : "2021-06-23T04:32:53Z",
        "updatedAt" : "2021-06-23T05:16:21Z",
        "lastEditedBy" : "1e1e52a7-6513-46fd-99c3-3d01eee59d17",
        "tags" : [
        ]
      },
      {
        "id" : "ecc321d0-0d8c-47ef-8266-5cbc1ecc26eb",
        "parentId" : "5454bce4-4ed1-408d-9465-1ee7cfced9a5",
        "authorId" : "403b8bdd-d152-4255-86a7-0bdb3d2b40a5",
        "body" : "If you are asking about the earlier catch block, that will not cover the exceptions like receiving from broker etc.  The earlier catch block is applicable only until the record is added to the accumulator. ",
        "createdAt" : "2021-06-24T06:17:55Z",
        "updatedAt" : "2021-06-24T06:17:55Z",
        "lastEditedBy" : "403b8bdd-d152-4255-86a7-0bdb3d2b40a5",
        "tags" : [
        ]
      }
    ],
    "commit" : "99edb5d679feaaa72df291c00e73de4511208daa",
    "line" : 78,
    "diffHunk" : "@@ -1,1 +76,80 @@        } else {\n            Exception ex = callback.exception();\n            if (ex instanceof KafkaException) {\n                throw (KafkaException) ex;\n            } else {"
  }
]