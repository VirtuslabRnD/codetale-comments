[
  {
    "id" : "f4dcf3e9-cfe1-4016-9587-3a77ce8d0a34",
    "prId" : 10579,
    "prUrl" : "https://github.com/apache/kafka/pull/10579#pullrequestreview-671843461",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c522aec7-b91b-4bdf-88c4-4d91162b2abf",
        "parentId" : null,
        "authorId" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "body" : "Hmm, shouldn't we start with assignedMetaPartitions?",
        "createdAt" : "2021-05-27T21:56:15Z",
        "updatedAt" : "2021-05-28T01:23:55Z",
        "lastEditedBy" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "tags" : [
        ]
      },
      {
        "id" : "02ec788e-0f45-428f-88fc-020f6e7ef649",
        "parentId" : "c522aec7-b91b-4bdf-88c4-4d91162b2abf",
        "authorId" : "403b8bdd-d152-4255-86a7-0bdb3d2b40a5",
        "body" : "Are you saying it should be initialized with `updatedAssignedMetaPartitions = new HashSet<>(assignedMetaPartitions);`. This is not needed as we are recomputing that set based on updatedReassignedPartitions.\r\n",
        "createdAt" : "2021-05-30T15:54:11Z",
        "updatedAt" : "2021-05-30T15:54:11Z",
        "lastEditedBy" : "403b8bdd-d152-4255-86a7-0bdb3d2b40a5",
        "tags" : [
        ]
      }
    ],
    "commit" : "99edb5d679feaaa72df291c00e73de4511208daa",
    "line" : 209,
    "diffHunk" : "@@ -1,1 +207,211 @@            updatedReassignedPartitions.addAll(addedPartitions);\n            updatedReassignedPartitions.removeAll(removedPartitions);\n            Set<Integer> updatedAssignedMetaPartitions = new HashSet<>();\n            for (TopicIdPartition tp : updatedReassignedPartitions) {\n                updatedAssignedMetaPartitions.add(topicPartitioner.metadataPartition(tp));"
  },
  {
    "id" : "edf5f78a-0acc-4e2b-9cf1-2c67f0782d80",
    "prId" : 10579,
    "prUrl" : "https://github.com/apache/kafka/pull/10579#pullrequestreview-671843467",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1a7190f4-e1e1-4c51-b506-cbd9b6d60414",
        "parentId" : null,
        "authorId" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "body" : "Hmm, assignedMetaPartitions may not change if assignedTopicPartitions changes. Should we still update assignedTopicPartitions in that case?",
        "createdAt" : "2021-05-27T21:57:24Z",
        "updatedAt" : "2021-05-28T01:23:55Z",
        "lastEditedBy" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "tags" : [
        ]
      },
      {
        "id" : "df94c46a-e5e2-4256-8fc9-f2a0678d828b",
        "parentId" : "1a7190f4-e1e1-4c51-b506-cbd9b6d60414",
        "authorId" : "403b8bdd-d152-4255-86a7-0bdb3d2b40a5",
        "body" : "Nice catch, updated.",
        "createdAt" : "2021-05-30T15:54:14Z",
        "updatedAt" : "2021-06-01T06:51:12Z",
        "lastEditedBy" : "403b8bdd-d152-4255-86a7-0bdb3d2b40a5",
        "tags" : [
        ]
      }
    ],
    "commit" : "99edb5d679feaaa72df291c00e73de4511208daa",
    "line" : 216,
    "diffHunk" : "@@ -1,1 +214,218 @@            log.debug(\"Assigned topic partitions: {}\", assignedTopicPartitions);\n\n            if (!updatedAssignedMetaPartitions.equals(assignedMetaPartitions)) {\n                assignedMetaPartitions = Collections.unmodifiableSet(updatedAssignedMetaPartitions);\n                log.debug(\"Assigned metadata topic partitions: {}\", assignedMetaPartitions);"
  },
  {
    "id" : "fe8929c8-a4df-4abd-8f70-b2ed5811b554",
    "prId" : 10579,
    "prUrl" : "https://github.com/apache/kafka/pull/10579#pullrequestreview-671843490",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "691c931c-540c-4b17-9fe8-2dcb1178c077",
        "parentId" : null,
        "authorId" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "body" : "Should we only process events corresponding to assignPartitions?",
        "createdAt" : "2021-05-27T23:10:00Z",
        "updatedAt" : "2021-05-28T01:23:55Z",
        "lastEditedBy" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "tags" : [
        ]
      },
      {
        "id" : "77caf7d4-4e85-4ba5-bbaa-3899a45b99e7",
        "parentId" : "691c931c-540c-4b17-9fe8-2dcb1178c077",
        "authorId" : "403b8bdd-d152-4255-86a7-0bdb3d2b40a5",
        "body" : "Right, I will add that check. ",
        "createdAt" : "2021-05-30T15:54:33Z",
        "updatedAt" : "2021-05-30T15:54:33Z",
        "lastEditedBy" : "403b8bdd-d152-4255-86a7-0bdb3d2b40a5",
        "tags" : [
        ]
      }
    ],
    "commit" : "99edb5d679feaaa72df291c00e73de4511208daa",
    "line" : 111,
    "diffHunk" : "@@ -1,1 +109,113 @@                        = consumer.poll(Duration.ofMillis(POLL_INTERVAL_MS));\n                for (ConsumerRecord<byte[], byte[]> record : consumerRecords) {\n                    handleRemoteLogMetadata(serde.deserialize(record.value()));\n                    partitionToConsumedOffsets.put(record.partition(), record.offset());\n                }"
  },
  {
    "id" : "7f5521a6-c8fa-4694-a6a7-dfe1849166ec",
    "prId" : 10579,
    "prUrl" : "https://github.com/apache/kafka/pull/10579#pullrequestreview-690182961",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e84c02c8-a947-4df6-8974-dc8257552200",
        "parentId" : null,
        "authorId" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "body" : "If a partition is moved to a different broker, we will need to bootstrap the remote state for the partition by consuming from the beginning of the remote metadata partition. How is that handled?",
        "createdAt" : "2021-05-27T23:11:42Z",
        "updatedAt" : "2021-05-28T01:23:55Z",
        "lastEditedBy" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "tags" : [
        ]
      },
      {
        "id" : "da7816f9-f371-4c46-9aaa-cdac0e409aa8",
        "parentId" : "e84c02c8-a947-4df6-8974-dc8257552200",
        "authorId" : "403b8bdd-d152-4255-86a7-0bdb3d2b40a5",
        "body" : "This is not addressed in this PR. I planned to have a followup PR for these changes. I may use a different consumer for the newly subscribed partitions to build the state. ",
        "createdAt" : "2021-05-30T15:54:36Z",
        "updatedAt" : "2021-05-30T15:54:36Z",
        "lastEditedBy" : "403b8bdd-d152-4255-86a7-0bdb3d2b40a5",
        "tags" : [
        ]
      },
      {
        "id" : "8b29df39-98d2-418b-946e-43fe6c36c338",
        "parentId" : "e84c02c8-a947-4df6-8974-dc8257552200",
        "authorId" : "b4f52e78-c19e-46b4-b486-6da86e32e687",
        "body" : "It appears that once this logic is implemented, there is probably no need to wait for `maybeWaitForPartitionsAssignment`. The reason is that whenever a partition is assigned, we will bootstrap the remote state by consuming from the beginning.",
        "createdAt" : "2021-06-02T07:48:14Z",
        "updatedAt" : "2021-06-02T08:15:16Z",
        "lastEditedBy" : "b4f52e78-c19e-46b4-b486-6da86e32e687",
        "tags" : [
        ]
      },
      {
        "id" : "ad46d8ff-26ca-4e8a-9030-cb9939b30a35",
        "parentId" : "e84c02c8-a947-4df6-8974-dc8257552200",
        "authorId" : "1e1e52a7-6513-46fd-99c3-3d01eee59d17",
        "body" : "What is the cost of consuming from the beginning if the remote metadata partition grows huge?",
        "createdAt" : "2021-06-23T04:19:48Z",
        "updatedAt" : "2021-06-23T05:16:21Z",
        "lastEditedBy" : "1e1e52a7-6513-46fd-99c3-3d01eee59d17",
        "tags" : [
        ]
      }
    ],
    "commit" : "99edb5d679feaaa72df291c00e73de4511208daa",
    "line" : 217,
    "diffHunk" : "@@ -1,1 +215,219 @@\n            if (!updatedAssignedMetaPartitions.equals(assignedMetaPartitions)) {\n                assignedMetaPartitions = Collections.unmodifiableSet(updatedAssignedMetaPartitions);\n                log.debug(\"Assigned metadata topic partitions: {}\", assignedMetaPartitions);\n                assignPartitions = true;"
  },
  {
    "id" : "8c51e80c-b0f2-41d7-bcdf-73c647e36ed8",
    "prId" : 10579,
    "prUrl" : "https://github.com/apache/kafka/pull/10579#pullrequestreview-681070645",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0777ba2a-8ce7-4ef2-bf44-bc971d6cdd8d",
        "parentId" : null,
        "authorId" : "b4f52e78-c19e-46b4-b486-6da86e32e687",
        "body" : "Is it useful to assert that `record.key()` is empty before the key is ignored below?",
        "createdAt" : "2021-06-02T07:40:20Z",
        "updatedAt" : "2021-06-02T08:15:16Z",
        "lastEditedBy" : "b4f52e78-c19e-46b4-b486-6da86e32e687",
        "tags" : [
        ]
      },
      {
        "id" : "fd7f32f4-478c-49ec-a5ca-0a9f28e35fee",
        "parentId" : "0777ba2a-8ce7-4ef2-bf44-bc971d6cdd8d",
        "authorId" : "403b8bdd-d152-4255-86a7-0bdb3d2b40a5",
        "body" : "I do not think that check is really needed here. ",
        "createdAt" : "2021-06-10T17:30:51Z",
        "updatedAt" : "2021-06-10T17:30:51Z",
        "lastEditedBy" : "403b8bdd-d152-4255-86a7-0bdb3d2b40a5",
        "tags" : [
        ]
      }
    ],
    "commit" : "99edb5d679feaaa72df291c00e73de4511208daa",
    "line" : 110,
    "diffHunk" : "@@ -1,1 +108,112 @@                ConsumerRecords<byte[], byte[]> consumerRecords\n                        = consumer.poll(Duration.ofMillis(POLL_INTERVAL_MS));\n                for (ConsumerRecord<byte[], byte[]> record : consumerRecords) {\n                    handleRemoteLogMetadata(serde.deserialize(record.value()));\n                    partitionToConsumedOffsets.put(record.partition(), record.offset());"
  },
  {
    "id" : "c63e4216-e4a7-4db3-a39c-09667b314cb4",
    "prId" : 10579,
    "prUrl" : "https://github.com/apache/kafka/pull/10579#pullrequestreview-681070745",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5057ffef-3336-4c5e-afce-8028c5a892b4",
        "parentId" : null,
        "authorId" : "b4f52e78-c19e-46b4-b486-6da86e32e687",
        "body" : "Do you really need this explicit lock? It seems you could just use `wait()` and `notify()` APIs on the `ConsumerTask` object instead, combined with `synchronized` keyword.",
        "createdAt" : "2021-06-02T07:51:00Z",
        "updatedAt" : "2021-06-02T08:15:16Z",
        "lastEditedBy" : "b4f52e78-c19e-46b4-b486-6da86e32e687",
        "tags" : [
        ]
      },
      {
        "id" : "e371b3f1-87d7-4f88-97e9-243954a471a0",
        "parentId" : "5057ffef-3336-4c5e-afce-8028c5a892b4",
        "authorId" : "403b8bdd-d152-4255-86a7-0bdb3d2b40a5",
        "body" : "I wanted to have a separate lock instance specifically for the assignments and the respective processing. It gives better clarity and separations even if we add any other logic by taking lock on this instance. ",
        "createdAt" : "2021-06-10T17:30:57Z",
        "updatedAt" : "2021-06-10T17:30:57Z",
        "lastEditedBy" : "403b8bdd-d152-4255-86a7-0bdb3d2b40a5",
        "tags" : [
        ]
      }
    ],
    "commit" : "99edb5d679feaaa72df291c00e73de4511208daa",
    "line" : 77,
    "diffHunk" : "@@ -1,1 +75,79 @@    private volatile boolean assignPartitions = false;\n\n    private final Object assignPartitionsLock = new Object();\n\n    // Remote log metadata topic partitions that consumer is assigned to."
  },
  {
    "id" : "fede3119-5ac6-4336-9de0-519bc34c60de",
    "prId" : 10579,
    "prUrl" : "https://github.com/apache/kafka/pull/10579#pullrequestreview-690182961",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7833a5d7-62d1-4aef-b005-9c516f459188",
        "parentId" : null,
        "authorId" : "1e1e52a7-6513-46fd-99c3-3d01eee59d17",
        "body" : "can you explain what this variable means?",
        "createdAt" : "2021-06-23T04:06:13Z",
        "updatedAt" : "2021-06-23T05:16:21Z",
        "lastEditedBy" : "1e1e52a7-6513-46fd-99c3-3d01eee59d17",
        "tags" : [
        ]
      }
    ],
    "commit" : "99edb5d679feaaa72df291c00e73de4511208daa",
    "line" : 75,
    "diffHunk" : "@@ -1,1 +73,77 @@    // It indicates whether the consumer needs to assign the partitions or not. This is set when it is\n    // determined that the consumer needs to be assigned with the updated partitions.\n    private volatile boolean assignPartitions = false;\n\n    private final Object assignPartitionsLock = new Object();"
  },
  {
    "id" : "f57b9ccc-4022-420a-854f-4e2f7bf6d487",
    "prId" : 10579,
    "prUrl" : "https://github.com/apache/kafka/pull/10579#pullrequestreview-691373226",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e8c04b05-bab4-4297-b529-89707caf4890",
        "parentId" : null,
        "authorId" : "1e1e52a7-6513-46fd-99c3-3d01eee59d17",
        "body" : "also here. Why are the variable names different? One is `updatedPartitions` and the other is `partitions`",
        "createdAt" : "2021-06-23T04:12:18Z",
        "updatedAt" : "2021-06-23T05:16:21Z",
        "lastEditedBy" : "1e1e52a7-6513-46fd-99c3-3d01eee59d17",
        "tags" : [
        ]
      },
      {
        "id" : "95468dd4-98ba-42c8-a980-f48bc1f15d3d",
        "parentId" : "e8c04b05-bab4-4297-b529-89707caf4890",
        "authorId" : "403b8bdd-d152-4255-86a7-0bdb3d2b40a5",
        "body" : "When the code was refactored, it went with the caller method arg names. thanks for catching these. ",
        "createdAt" : "2021-06-24T06:17:20Z",
        "updatedAt" : "2021-06-24T06:17:20Z",
        "lastEditedBy" : "403b8bdd-d152-4255-86a7-0bdb3d2b40a5",
        "tags" : [
        ]
      }
    ],
    "commit" : "99edb5d679feaaa72df291c00e73de4511208daa",
    "line" : 190,
    "diffHunk" : "@@ -1,1 +188,192 @@    }\n\n    public void removeAssignmentsForPartitions(Set<TopicIdPartition> partitions) {\n        updateAssignmentsForPartitions(Collections.emptySet(), partitions);\n    }"
  },
  {
    "id" : "96d6b3fe-09eb-4d41-9fca-69534acf0168",
    "prId" : 10579,
    "prUrl" : "https://github.com/apache/kafka/pull/10579#pullrequestreview-695283387",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3e422198-0d4c-4e59-852c-4f3edc5555ab",
        "parentId" : null,
        "authorId" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "body" : "We need to unblock the wait if we are closing the consumer.",
        "createdAt" : "2021-06-29T17:45:05Z",
        "updatedAt" : "2021-06-30T18:10:06Z",
        "lastEditedBy" : "442b5138-0781-4001-8ac5-0593f2136d1c",
        "tags" : [
        ]
      }
    ],
    "commit" : "99edb5d679feaaa72df291c00e73de4511208daa",
    "line" : 149,
    "diffHunk" : "@@ -1,1 +147,151 @@                    // for closing as that might have been set and notified with assignPartitionsLock by `close`\n                    // method.\n                    assignPartitionsLock.wait();\n\n                    if (closing) {"
  }
]