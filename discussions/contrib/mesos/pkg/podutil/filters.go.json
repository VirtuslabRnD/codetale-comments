[
  {
    "id" : "f8d7fae4-0c04-4137-9ec5-e48a0b129f51",
    "prId" : 13943,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d419916b-dd9c-4311-a53c-dea8b14a93aa",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "add comment please\n",
        "createdAt" : "2015-11-13T17:42:04Z",
        "updatedAt" : "2015-11-13T23:30:49Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "3d3577b9f381486ecae4a554a7f4a6685de71a63",
    "line" : null,
    "diffHunk" : "@@ -1,1 +50,54 @@// Stream returns a chan of pods that yields each pod from the given list.\n// No pods are yielded if err is non-nil.\nfunc Stream(list *api.PodList, err error) <-chan *api.Pod {\n\tout := make(chan *api.Pod)\n\tgo func() {"
  },
  {
    "id" : "580a886c-448a-406f-83ce-8dd5b96f83ac",
    "prId" : 13943,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "672ee036-bd71-486b-9a6a-9656612d34b5",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "add comment please\n",
        "createdAt" : "2015-11-13T17:42:07Z",
        "updatedAt" : "2015-11-13T23:30:49Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "3d3577b9f381486ecae4a554a7f4a6685de71a63",
    "line" : null,
    "diffHunk" : "@@ -1,1 +41,45 @@\n// Annotator returns a filter that copies annotations from map m into a pod\nfunc Annotator(m map[string]string) FilterFunc {\n\treturn FilterFunc(func(pod *api.Pod) (bool, error) {\n\t\tAnnotate(&pod.ObjectMeta, m)"
  },
  {
    "id" : "ea1fd9cc-41e6-43e4-9e41-e05a87bb4f57",
    "prId" : 13943,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "96d94cd8-7d86-4578-b4e3-fdb348b1de2b",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "add comment please\n",
        "createdAt" : "2015-11-13T17:42:12Z",
        "updatedAt" : "2015-11-13T23:30:49Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "3d3577b9f381486ecae4a554a7f4a6685de71a63",
    "line" : null,
    "diffHunk" : "@@ -1,1 +29,33 @@\n// Annotate safely copies annotation metadata from kv to meta.Annotations.\nfunc Annotate(meta *api.ObjectMeta, kv map[string]string) {\n\t//TODO(jdef) this func probably belong in an \"apiutil\" package, but we don't\n\t//have much to put there right now so it can just live here."
  },
  {
    "id" : "8da2970a-447b-40ae-b59a-c9b6b4b67d16",
    "prId" : 13943,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "98e46db2-4a1c-4951-9d79-db4a5c32991b",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "add comment please\n",
        "createdAt" : "2015-11-13T17:42:31Z",
        "updatedAt" : "2015-11-13T23:30:49Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "3d3577b9f381486ecae4a554a7f4a6685de71a63",
    "line" : null,
    "diffHunk" : "@@ -1,1 +82,86 @@\n// List reads every pod from the pods chan and returns them all in an api.PodList\nfunc List(pods <-chan *api.Pod) *api.PodList {\n\tlist := &api.PodList{}\n\tfor p := range pods {"
  }
]