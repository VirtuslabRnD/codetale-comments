[
  {
    "id" : "b5c3e74b-afcc-4807-9927-54e5dd280ae0",
    "prId" : 16316,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1aa1e056-0acf-4d05-b630-f82242425f57",
        "parentId" : null,
        "authorId" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "body" : "Not sure that I like this new interface. Crosses boundaries that I was trying to keep separate. It ends up having two funcs that launch/kill tasks. The prior interface offered a cleaner API boundary between mesos stuff and the API that our components need.\n",
        "createdAt" : "2015-11-03T17:18:01Z",
        "updatedAt" : "2015-11-12T00:34:03Z",
        "lastEditedBy" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "tags" : [
        ]
      },
      {
        "id" : "e849f78c-8dd3-44d9-bf61-f18a55da8716",
        "parentId" : "1aa1e056-0acf-4d05-b630-f82242425f57",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "There was no prior interface in the sense of this new `Framework` interface. In the old code `New` just returned the `KubernetesScheduler` struct directly. Moreover, the `k8smScheduler` code was accessing private members of the struct.\n\n Hence, the new structure is much more restrictive and explicit. \n\nAlso note that the `binding.Scheduler` interface is what the framework must implement because it's expected by the `SchedulerProcess`. Moreover, the Framework interface is only used by the `Scheduler` implementation. So the bleeding of the `binding.Scheduler` interface is very very limited.\n",
        "createdAt" : "2015-11-04T11:52:41Z",
        "updatedAt" : "2015-11-12T00:34:03Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "bdef8907-eff6-418d-b59c-a4a389fbabce",
        "parentId" : "1aa1e056-0acf-4d05-b630-f82242425f57",
        "authorId" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "body" : "ok i'll buy that. have also suggested using a separate `Framework` interface that's a subset of this one, for the scheduler -- it doesn't need access to everything here.\n",
        "createdAt" : "2015-11-04T15:47:46Z",
        "updatedAt" : "2015-11-12T00:34:03Z",
        "lastEditedBy" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "tags" : [
        ]
      }
    ],
    "commit" : "e71f43de930c15c78c71c454836424ddf2829d42",
    "line" : 56,
    "diffHunk" : "@@ -1,1 +54,58 @@)\n\ntype Framework interface {\n\tbindings.Scheduler\n"
  },
  {
    "id" : "250ed96d-4fc0-4d26-9185-18ce1e33399e",
    "prId" : 15775,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bf2233bb-b5c4-43f5-a28b-b589bf6c9001",
        "parentId" : null,
        "authorId" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "body" : "it might be nice to have a debug handler that lists all of the executors that the scheduler believes to exist. thoughts?\n",
        "createdAt" : "2015-11-16T16:13:31Z",
        "updatedAt" : "2015-11-23T16:27:27Z",
        "lastEditedBy" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "tags" : [
        ]
      },
      {
        "id" : "b8c4eb32-c628-441a-b6ec-8119f17c9191",
        "parentId" : "bf2233bb-b5c4-43f5-a28b-b589bf6c9001",
        "authorId" : "39a87e74-3afd-4203-9f90-c761ddc10ff7",
        "body" : "good idea, I suggest to do this in a follow-up PR (added in the TODO list above)\n",
        "createdAt" : "2015-11-18T15:04:39Z",
        "updatedAt" : "2015-11-23T16:27:27Z",
        "lastEditedBy" : "39a87e74-3afd-4203-9f90-c761ddc10ff7",
        "tags" : [
        ]
      },
      {
        "id" : "85ae4fca-0fdc-49ab-b97e-750e24e3ee26",
        "parentId" : "bf2233bb-b5c4-43f5-a28b-b589bf6c9001",
        "authorId" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "body" : "yes, follow-up PR is fine\n",
        "createdAt" : "2015-11-18T18:06:53Z",
        "updatedAt" : "2015-11-23T16:27:27Z",
        "lastEditedBy" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "tags" : [
        ]
      }
    ],
    "commit" : "9eae47c6e62d23b5329100aa5bdbe81457ce3e82",
    "line" : 178,
    "diffHunk" : "@@ -1,1 +293,297 @@\t\t\t))\n\t\t}\n\n\t\tio.WriteString(w, \"OK\")\n\t}))"
  },
  {
    "id" : "3e19ae7b-c914-4fa5-8061-51e01fcf5de7",
    "prId" : 15775,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1f73d8a0-a5b1-458f-926b-80622de4ab3e",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "This is getting big. Can we move the debug handler code into debug.go?\n",
        "createdAt" : "2015-11-17T08:36:22Z",
        "updatedAt" : "2015-11-23T16:27:27Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "bd083a0a-449d-40d9-a9d1-67b3cb67b16d",
        "parentId" : "1f73d8a0-a5b1-458f-926b-80622de4ab3e",
        "authorId" : "39a87e74-3afd-4203-9f90-c761ddc10ff7",
        "body" : "sure. I suggest to do this in a separate PR?\n",
        "createdAt" : "2015-11-18T15:02:24Z",
        "updatedAt" : "2015-11-23T16:27:27Z",
        "lastEditedBy" : "39a87e74-3afd-4203-9f90-c761ddc10ff7",
        "tags" : [
        ]
      }
    ],
    "commit" : "9eae47c6e62d23b5329100aa5bdbe81457ce3e82",
    "line" : 96,
    "diffHunk" : "@@ -1,1 +201,205 @@\n// executorRefs returns a slice of known references to running executors known to this framework\nfunc (k *framework) executorRefs() []executorRef {\n\tslaves := k.slaveHostNames.SlaveIDs()\n\trefs := make([]executorRef, 0, len(slaves))"
  }
]