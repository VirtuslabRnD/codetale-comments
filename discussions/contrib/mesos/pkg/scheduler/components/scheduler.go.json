[
  {
    "id" : "85ab7bc3-5f9b-481c-a6f4-198a338bfdcc",
    "prId" : 16316,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0ad0e721-34d8-4498-b7a9-5960ac6ea0ec",
        "parentId" : null,
        "authorId" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "body" : "it doesn't look like we need access to the complete framework interface here. How about specifying an interface in this .go module that limits the requirements of callers? e.g.\n\n``` go\ntype Framework interface {\n  Offers() offers.Registry\n  LaunchTask(*podtask.T) error\n  KillTask(string) error\n}\n```\n",
        "createdAt" : "2015-11-04T15:44:33Z",
        "updatedAt" : "2015-11-12T00:34:03Z",
        "lastEditedBy" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "tags" : [
        ]
      },
      {
        "id" : "6274239c-70f7-4129-a46a-480977f296e9",
        "parentId" : "0ad0e721-34d8-4498-b7a9-5960ac6ea0ec",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "The sched struct implements an interface already for that reason, i.e. to be able to mock it. I would avoid another layer of interfaces until we need that structural complexity.\n",
        "createdAt" : "2015-11-04T15:52:58Z",
        "updatedAt" : "2015-11-12T00:34:03Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "fe38982d-ebfd-48a6-b9f4-4b91572504ca",
        "parentId" : "0ad0e721-34d8-4498-b7a9-5960ac6ea0ec",
        "authorId" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "body" : "I would argue that it's not really another layer. It's just a different\ninterface. And a much smaller one in scope than Framework. It would make me\nfeel better about the giant interface that framework.Framework exposes\n\nOn Wed, Nov 4, 2015 at 10:53 AM, Dr. Stefan Schimanski <\nnotifications@github.com> wrote:\n\n> In contrib/mesos/pkg/scheduler/components/scheduler.go\n> https://github.com/kubernetes/kubernetes/pull/16316#discussion_r43897272\n> :\n> \n> > -   \"k8s.io/kubernetes/contrib/mesos/pkg/scheduler/components/framework\"\n> > -   \"k8s.io/kubernetes/contrib/mesos/pkg/scheduler/components/podreconciler\"\n> > -   \"k8s.io/kubernetes/contrib/mesos/pkg/scheduler/components/schedulerloop\"\n> > -   \"k8s.io/kubernetes/contrib/mesos/pkg/scheduler/config\"\n> > -   \"k8s.io/kubernetes/contrib/mesos/pkg/scheduler/podtask\"\n> > -   \"k8s.io/kubernetes/contrib/mesos/pkg/scheduler/queuer\"\n> > -   \"k8s.io/kubernetes/pkg/api\"\n> > -   \"k8s.io/kubernetes/pkg/client/cache\"\n> > -   \"k8s.io/kubernetes/pkg/client/record\"\n> > -   client \"k8s.io/kubernetes/pkg/client/unversioned\"\n> >   +)\n> >   +\n> >   +// sched implements the Scheduler interface.\n> >   +type sched struct {\n> > -   podReconciler podreconciler.PodReconciler\n> > -   framework     framework.Framework\n> \n> The sched struct implements an interface already for that reason, i.e. to\n> be able to mock it. I would avoid another layer of interfaces until we need\n> that structural complexity.\n> \n> â€”\n> Reply to this email directly or view it on GitHub\n> https://github.com/kubernetes/kubernetes/pull/16316/files#r43897272.\n",
        "createdAt" : "2015-11-04T15:57:05Z",
        "updatedAt" : "2015-11-12T00:34:03Z",
        "lastEditedBy" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "tags" : [
        ]
      },
      {
        "id" : "448084ec-c60f-4c1b-87df-bac3769ac5e4",
        "parentId" : "0ad0e721-34d8-4498-b7a9-5960ac6ea0ec",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "I would prefer this one \"big\" interface to impose pain on everybody trying a shortcut by adding something to it.\n",
        "createdAt" : "2015-11-04T20:26:20Z",
        "updatedAt" : "2015-11-12T00:34:03Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "e71f43de930c15c78c71c454836424ddf2829d42",
    "line" : 49,
    "diffHunk" : "@@ -1,1 +47,51 @@type sched struct {\n\tpodReconciler podreconciler.PodReconciler\n\tframework     framework.Framework\n\tcontroller    controller.Controller\n"
  }
]