[
  {
    "id" : "069ad67d-e8ba-432a-8207-00d89ec675ca",
    "prId" : 16851,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "65bfeb22-9907-485e-b8d8-a95a0a3222ef",
        "parentId" : null,
        "authorId" : "39a87e74-3afd-4203-9f90-c761ddc10ff7",
        "body" : "I think it's unfortunate that we work around implementation details of the fakeWatcher inside MockPodsListWatch. By looking at the code it is not clear why we need to unlock prematurely.\n",
        "createdAt" : "2015-11-05T12:41:34Z",
        "updatedAt" : "2015-11-05T12:41:34Z",
        "lastEditedBy" : "39a87e74-3afd-4203-9f90-c761ddc10ff7",
        "tags" : [
        ]
      },
      {
        "id" : "f4f8a4f8-42e0-499d-80b9-9ab7bfefaf46",
        "parentId" : "65bfeb22-9907-485e-b8d8-a95a0a3222ef",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "I think it's a good common pattern: don't lock anything when you call code which might lock other stuff. Never lock longer than needed. It's not bad that the channel behind the fakeWatch is invisible, it's bad that we keep a lock while calling unknown code.\n",
        "createdAt" : "2015-11-05T12:46:11Z",
        "updatedAt" : "2015-11-05T12:46:11Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "67f8c509-beae-46e7-9b9f-5ab981e846c1",
        "parentId" : "65bfeb22-9907-485e-b8d8-a95a0a3222ef",
        "authorId" : "39a87e74-3afd-4203-9f90-c761ddc10ff7",
        "body" : "fair enough, good point\n",
        "createdAt" : "2015-11-05T12:47:20Z",
        "updatedAt" : "2015-11-05T12:47:20Z",
        "lastEditedBy" : "39a87e74-3afd-4203-9f90-c761ddc10ff7",
        "tags" : [
        ]
      }
    ],
    "commit" : "9b00b7ef354725ffa57b3087c8add1990183f205",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +206,210 @@\t\tdefer lw.lock.Unlock()\n\t\tlw.list.Items = append(lw.list.Items, *pod)\n\t}()\n\n\tif notify {"
  },
  {
    "id" : "fe123031-f1ce-4ffd-a6d9-ef350c3bed36",
    "prId" : 14271,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b86fabc3-8e48-49e4-938a-1054f36169dd",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "Does this have to be public?\n",
        "createdAt" : "2015-09-21T17:45:34Z",
        "updatedAt" : "2015-09-30T14:14:39Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "09ce3ead-ce87-4367-a899-a1c7b2a18659",
        "parentId" : "b86fabc3-8e48-49e4-938a-1054f36169dd",
        "authorId" : "39a87e74-3afd-4203-9f90-c761ddc10ff7",
        "body" : "In this package, no (good catch). If we refactor in a separate `test` package, then I'd vote for public visibility.\n",
        "createdAt" : "2015-09-21T17:46:47Z",
        "updatedAt" : "2015-09-30T14:14:39Z",
        "lastEditedBy" : "39a87e74-3afd-4203-9f90-c761ddc10ff7",
        "tags" : [
        ]
      },
      {
        "id" : "6e7df2ae-f867-4ce5-a473-ab0d0b601700",
        "parentId" : "b86fabc3-8e48-49e4-938a-1054f36169dd",
        "authorId" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "body" : "refactoring things into a separate `schedulertest` package sounds good (let's avoid adding another `test` package to avoid confusion)\n",
        "createdAt" : "2015-09-21T19:11:20Z",
        "updatedAt" : "2015-09-30T14:14:39Z",
        "lastEditedBy" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "tags" : [
        ]
      }
    ],
    "commit" : "56fc0f5900d20a93436b18ba2e46cd823234ce06",
    "line" : 207,
    "diffHunk" : "@@ -1,1 +417,421 @@}\n\ntype LaunchedTask struct {\n\tofferId  mesos.OfferID\n\ttaskInfo *mesos.TaskInfo"
  }
]