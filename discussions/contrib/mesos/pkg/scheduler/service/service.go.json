[
  {
    "id" : "5e288dfd-f36d-4422-941c-c9f094584ffa",
    "prId" : 22756,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "61db270c-47e9-4165-bcf6-c60194900bd3",
        "parentId" : null,
        "authorId" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "body" : "maybe a comment here along the lines of: if kubelet-kubeconfig and proxy-kubeconfig point to different files with the same basename this will fail immediately. that's expected given that we serve files at endpoints like `/$(basename $file)`. or even better, perhaps a panic handler here that generates a user-friendly message to check for this condition upon a panic? we don't have such in other places but i'm a little concerned that users could end up in this situation if they, for example, have all of their config files named the same but split into different directories: `/myconfig/{scheduler,kubelet,proxy}/kubeconfig`\n\nthoughts?\n",
        "createdAt" : "2016-03-09T22:43:30Z",
        "updatedAt" : "2016-03-11T01:35:20Z",
        "lastEditedBy" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "tags" : [
        ]
      },
      {
        "id" : "1b1b76a8-071d-4552-a12b-c91de65391f5",
        "parentId" : "61db270c-47e9-4165-bcf6-c60194900bd3",
        "authorId" : "9ca65a79-fccf-40d2-8bf4-84a611116ce4",
        "body" : "Good point! Perhaps instead of using the basename, we can use the absolute path of the file with `s/\\///g`, or a hash calculated based on the absolute path of the file. However, it could look ugly when you do a `ps aux | grep km` on the mesos node running `km [executor|proxy]`. It might be an overkill here. I still favor a friendly message that says \"different kubeconfig files should have different basenames\". If this is OK, I'll make this change and do another push.\n",
        "createdAt" : "2016-03-10T01:43:07Z",
        "updatedAt" : "2016-03-11T01:35:20Z",
        "lastEditedBy" : "9ca65a79-fccf-40d2-8bf4-84a611116ce4",
        "tags" : [
        ]
      },
      {
        "id" : "1cc3287f-25c9-45b2-87a1-0f395d231f30",
        "parentId" : "61db270c-47e9-4165-bcf6-c60194900bd3",
        "authorId" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "body" : "+1 for the friendly message and fail-fast\n\nOn Wed, Mar 9, 2016 at 8:43 PM, Hai Huang notifications@github.com wrote:\n\n> In contrib/mesos/pkg/scheduler/service/service.go\n> https://github.com/kubernetes/kubernetes/pull/22756#discussion_r55622977\n> :\n> \n> > @@ -459,9 +467,12 @@ func (s _SchedulerServer) prepareExecutorInfo(hks hyperkube.Interface) (_mesos.E\n> > \n> > ```\n> > if s.kubeletKubeconfig != \"\" {\n> >     //TODO(jdef) should probably support non-local files, e.g. hdfs:///some/config/file\n> > ```\n> > -       uri, basename := s.serveFrameworkArtifact(s.kubeletKubeconfig)\n> > -       ci.Uris = append(ci.Uris, &mesos.CommandInfo_URI{Value: proto.String(uri)})\n> > -       ci.Arguments = append(ci.Arguments, fmt.Sprintf(\"--kubeconfig=%s\", basename))\n> > -       if s.kubeletKubeconfig != s.proxyKubeconfig {\n> > -           // allows kubelet-kubeconfig and proxy-kubeconfig to point to the same file\n> \n> Good point! Perhaps instead of using the basename, we can use the absolute\n> path of the file with s/\\///g, or a hash calculated based on the absolute\n> path of the file. However, it could look ugly when you do a ps aux | grep\n> km on the mesos node running km [executor|proxy]. It might be an overkill\n> here. I still favor a friendly message that says \"different kubeconfig\n> files should have different basenames\". If this is OK, I'll make this\n> change and do another push.\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/kubernetes/kubernetes/pull/22756/files#r55622977.\n",
        "createdAt" : "2016-03-10T02:52:21Z",
        "updatedAt" : "2016-03-11T01:35:20Z",
        "lastEditedBy" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "tags" : [
        ]
      }
    ],
    "commit" : "b08e2b7201435d3734078cdb1c6d2fb9286130f2",
    "line" : null,
    "diffHunk" : "@@ -1,1 +475,479 @@\t\t\t\treturn nil, fmt.Errorf(\"if kubelet-kubeconfig and proxy-kubeconfig are different, they must have different basenames\")\n\t\t\t}\n\t\t\t// allows kubelet-kubeconfig and proxy-kubeconfig to point to the same file\n\t\t\turi, _ := s.serveFrameworkArtifact(s.kubeletKubeconfig)\n\t\t\tci.Uris = append(ci.Uris, &mesos.CommandInfo_URI{Value: proto.String(uri)})"
  },
  {
    "id" : "0d39df49-9ff9-4297-b98d-ef6616536c50",
    "prId" : 21787,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7f6628c2-8820-40f6-82b2-9bd45b82726d",
        "parentId" : null,
        "authorId" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "body" : "nit: why is this `V(1)` and the rest `V(2)`?\n",
        "createdAt" : "2016-02-23T20:37:37Z",
        "updatedAt" : "2016-02-23T21:20:32Z",
        "lastEditedBy" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "tags" : [
        ]
      },
      {
        "id" : "22e4132b-c811-42bf-9771-acc34d0cefc8",
        "parentId" : "7f6628c2-8820-40f6-82b2-9bd45b82726d",
        "authorId" : "9ca65a79-fccf-40d2-8bf4-84a611116ce4",
        "body" : "I was using V(2) for printing out error messages during problem scenarios, and V(1) for printing out more verbose messages during normal scenarios. I can make the change to either one if it is more conforming to the current coding style.\n",
        "createdAt" : "2016-02-23T20:42:28Z",
        "updatedAt" : "2016-02-23T21:20:32Z",
        "lastEditedBy" : "9ca65a79-fccf-40d2-8bf4-84a611116ce4",
        "tags" : [
        ]
      },
      {
        "id" : "421e70a1-841a-4c63-92c8-39c5206b3717",
        "parentId" : "7f6628c2-8820-40f6-82b2-9bd45b82726d",
        "authorId" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "body" : "I pointed this out because it doesn't seem very useful to have the initial\nexecutorID logged at V(1) when you're not going to see any debug warnings\nbecause they're all at V(2). Suggestion: make them all V(1) or V(2).\n\nOn Tue, Feb 23, 2016 at 3:43 PM, Hai Huang notifications@github.com wrote:\n\n> In contrib/mesos/pkg/scheduler/service/service.go\n> https://github.com/kubernetes/kubernetes/pull/21787#discussion_r53846499\n> :\n> \n> > @@ -495,6 +495,7 @@ func (s _SchedulerServer) prepareExecutorInfo(hks hyperkube.Interface) (_mesos.E\n> >     // running executors in a cluster.\n> >     execInfo.ExecutorId = executorinfo.NewID(execInfo)\n> >     execInfo.Data = data\n> > -   log.V(1).Infof(\"started with executor id %v\", execInfo.ExecutorId.GetValue())\n> \n> I was using V(2) for printing out error messages during problem scenarios,\n> and V(1) for printing out more verbose messages during normal scenarios. I\n> can make the change to either one if it is more conforming to the current\n> coding style.\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/kubernetes/kubernetes/pull/21787/files#r53846499.\n",
        "createdAt" : "2016-02-23T20:59:08Z",
        "updatedAt" : "2016-02-23T21:20:32Z",
        "lastEditedBy" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "tags" : [
        ]
      },
      {
        "id" : "d42f8851-daf6-47b7-87fd-68e8bbb93bf7",
        "parentId" : "7f6628c2-8820-40f6-82b2-9bd45b82726d",
        "authorId" : "9ca65a79-fccf-40d2-8bf4-84a611116ce4",
        "body" : "Changed them all to V(1) and squashed\n",
        "createdAt" : "2016-02-23T21:21:26Z",
        "updatedAt" : "2016-02-23T21:21:26Z",
        "lastEditedBy" : "9ca65a79-fccf-40d2-8bf4-84a611116ce4",
        "tags" : [
        ]
      }
    ],
    "commit" : "625e0d094427fd5c36607bad031ea6bf3ef31524",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +496,500 @@\texecInfo.ExecutorId = executorinfo.NewID(execInfo)\n\texecInfo.Data = data\n\tlog.V(1).Infof(\"started with executor id %v\", execInfo.ExecutorId.GetValue())\n\n\treturn execInfo, nil"
  },
  {
    "id" : "bdf7223d-587c-4f08-a3df-de7727ac9e98",
    "prId" : 20783,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "17c08150-be80-4881-a9c0-394a3bf0b678",
        "parentId" : null,
        "authorId" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "body" : "Thinking that this is the magic that really made conformance pass -- maybe the \"send events\" machinery has a dep on this config being non-zero now?. Perhaps convert the scheduler back to using clientset instead of `client/unversioned` and re-rest? After all, the kubelet sends events using clientset.\n",
        "createdAt" : "2016-02-07T14:22:13Z",
        "updatedAt" : "2016-02-08T05:23:42Z",
        "lastEditedBy" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "tags" : [
        ]
      },
      {
        "id" : "91a0eccb-5d07-4f59-8a3f-7091df2c9745",
        "parentId" : "17c08150-be80-4881-a9c0-394a3bf0b678",
        "authorId" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "body" : "note: converted back to clientset, but also needed to wrap with an unversioned_core shim so that events would get picked up. seems like a shady impl detail, hope that gets cleaned up soon\n",
        "createdAt" : "2016-02-07T22:18:29Z",
        "updatedAt" : "2016-02-08T05:23:42Z",
        "lastEditedBy" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "tags" : [
        ]
      }
    ],
    "commit" : "22d3cb9ea995de6f9d6d2707c2a0e4a87fdde672",
    "line" : 105,
    "diffHunk" : "@@ -1,1 +535,539 @@\n\t// Override kubeconfig qps/burst settings from flags\n\tkubeconfig.QPS = s.kubeAPIQPS\n\tkubeconfig.Burst = s.kubeAPIBurst\n\treturn kubeconfig, nil"
  },
  {
    "id" : "e7a1e29c-84fd-404d-acfe-2f9061e621cd",
    "prId" : 20783,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "856da092-df63-4863-bfa7-a4472ba40885",
        "parentId" : null,
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "@jdef, sorry for breaking your code. I think it's this line. All the other changes in this PR may be unnecessary. I had encountered the same error when I refactored kubelet and other controllers because of this.\n",
        "createdAt" : "2016-02-08T00:38:09Z",
        "updatedAt" : "2016-02-08T05:23:42Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      },
      {
        "id" : "06f4c2e7-1782-4e44-a888-ad854ff91a01",
        "parentId" : "856da092-df63-4863-bfa7-a4472ba40885",
        "authorId" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "body" : "it happens. in the future, please consider /cc'ing me for a quick look over changes in mesos code.\n",
        "createdAt" : "2016-02-08T05:34:43Z",
        "updatedAt" : "2016-02-08T05:34:43Z",
        "lastEditedBy" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "tags" : [
        ]
      },
      {
        "id" : "7f798aaf-94d3-40da-bbc4-9681310d4f74",
        "parentId" : "856da092-df63-4863-bfa7-a4472ba40885",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "Sure.\n",
        "createdAt" : "2016-02-08T17:43:02Z",
        "updatedAt" : "2016-02-08T17:43:02Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "22d3cb9ea995de6f9d6d2707c2a0e4a87fdde672",
    "line" : 161,
    "diffHunk" : "@@ -1,1 +793,797 @@\trecorder := broadcaster.NewRecorder(api.EventSource{Component: api.DefaultSchedulerName})\n\tbroadcaster.StartLogging(log.Infof)\n\tbroadcaster.StartRecordingToSink(&unversioned_core.EventSinkImpl{eventsClient.Events(\"\")})\n\n\t// create scheduler core with all components arranged around it"
  },
  {
    "id" : "4d30d01c-290a-4841-846a-ae01b6c42d2d",
    "prId" : 20452,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "32206748-85aa-417f-aa96-0edbc99995ca",
        "parentId" : null,
        "authorId" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "body" : "this change broke event sending from our scheduler: #20783 \n",
        "createdAt" : "2016-02-07T22:22:19Z",
        "updatedAt" : "2016-02-07T22:22:19Z",
        "lastEditedBy" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "tags" : [
        ]
      }
    ],
    "commit" : "cddd7b56a4ae301c6cbd8b5089b7400392b7b17a",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +176,180 @@\n\texecutable  string // path to the binary running this service\n\tclient      *clientset.Clientset\n\tdriver      bindings.SchedulerDriver\n\tdriverMutex sync.RWMutex"
  },
  {
    "id" : "f1999fd2-dcde-433f-bf96-eb7eafbf1e02",
    "prId" : 18635,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a81c88ff-b5d3-44c7-8d7a-e53b225fb759",
        "parentId" : null,
        "authorId" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "body" : "looks like `etcdConfigFile` should be completely removed as a state var (and flag) from `SchedulerServer`\n",
        "createdAt" : "2015-12-14T04:37:45Z",
        "updatedAt" : "2015-12-16T21:57:04Z",
        "lastEditedBy" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "tags" : [
        ]
      },
      {
        "id" : "425a421a-b85d-45d9-8f6d-c84d04914084",
        "parentId" : "a81c88ff-b5d3-44c7-8d7a-e53b225fb759",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "were you going to update `newEtcd` in `kube-apiserver/app/server.go`? also, what are we going to do about `etcdConfigFile`? that's currently the only way to connect to a secured etcd\n",
        "createdAt" : "2015-12-14T14:57:16Z",
        "updatedAt" : "2015-12-16T21:57:04Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "b4452700-169f-4714-b3cf-85bb9a833b17",
        "parentId" : "a81c88ff-b5d3-44c7-8d7a-e53b225fb759",
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "re: etcdConfigFile - it's completely removed in the nwo.  \n/cc @xiang90 \n",
        "createdAt" : "2015-12-14T16:27:26Z",
        "updatedAt" : "2015-12-16T21:57:04Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      },
      {
        "id" : "e89026be-4102-410c-8080-1db3014df7e2",
        "parentId" : "a81c88ff-b5d3-44c7-8d7a-e53b225fb759",
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "@jdef Done. \n\n> were you going to update newEtcd in kube-apiserver/app/server.go ?\n\nalready done. \n",
        "createdAt" : "2015-12-15T15:47:34Z",
        "updatedAt" : "2015-12-16T21:57:04Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      },
      {
        "id" : "653970bf-0d8a-4bdf-8416-84c5e970b381",
        "parentId" : "a81c88ff-b5d3-44c7-8d7a-e53b225fb759",
        "authorId" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "body" : "so what's the recommended way to connect securely to etcd right now? we should surface that somewhere if we haven't already, I see a good amount of confusion on slack. \n",
        "createdAt" : "2016-04-21T02:01:51Z",
        "updatedAt" : "2016-04-21T02:01:51Z",
        "lastEditedBy" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "tags" : [
        ]
      }
    ],
    "commit" : "c505a5d49d35011abcb9c4fa853eb33b7b1efb6e",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +639,643 @@\n// hacked from https://github.com/GoogleCloudPlatform/kubernetes/blob/release-0.14/cmd/kube-apiserver/app/server.go\nfunc newEtcd(etcdServerList []string) (etcd.Client, error) {\n\tcfg := etcd.Config{\n\t\tEndpoints: etcdServerList,"
  },
  {
    "id" : "c114ba1e-3e90-44da-8a0e-7a201a059bcc",
    "prId" : 18348,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4b771f60-78b3-48f6-a3bf-223bd7c83d70",
        "parentId" : null,
        "authorId" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "body" : "should we also check that `defaultPodRoles` is a subset of `frameworkRoles`?\n",
        "createdAt" : "2015-12-08T15:07:30Z",
        "updatedAt" : "2015-12-14T14:37:51Z",
        "lastEditedBy" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "tags" : [
        ]
      },
      {
        "id" : "6df37bd4-f9d5-4351-8be0-e16403decc1b",
        "parentId" : "4b771f60-78b3-48f6-a3bf-223bd7c83d70",
        "authorId" : "39a87e74-3afd-4203-9f90-c761ddc10ff7",
        "body" : "Good idea! A validation function checking this invariant and optionally\nfailing the bootstrap w/ an error?\n\nOn Tue, Dec 8, 2015 at 4:08 PM, James DeFelice notifications@github.com\nwrote:\n\n> In contrib/mesos/pkg/scheduler/service/service.go\n> https://github.com/kubernetes/kubernetes/pull/18348#discussion_r46963682\n> :\n> \n> > @@ -536,7 +540,7 @@ func (s *SchedulerServer) getDriver() (driver bindings.SchedulerDriver) {\n> >  }\n> > \n> >  func (s *SchedulerServer) Run(hks hyperkube.Interface, _ []string) error {\n> > -   if n := len(s.mesosRoles); n == 0 || n > 2 || (n == 2 && s.mesosRoles[0] != \"_\" && s.mesosRoles[1] != \"_\") {\n> > -   if n := len(s.frameworkRoles); n == 0 || n > 2 || (n == 2 && s.frameworkRoles[0] != \"_\" && s.frameworkRoles[1] != \"_\") {\n> \n> should we also check that defaultPodRoles is a subset of frameworkRoles?\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/kubernetes/kubernetes/pull/18348/files#r46963682.\n",
        "createdAt" : "2015-12-08T15:31:24Z",
        "updatedAt" : "2015-12-14T14:37:51Z",
        "lastEditedBy" : "39a87e74-3afd-4203-9f90-c761ddc10ff7",
        "tags" : [
        ]
      },
      {
        "id" : "d410b516-cb8a-4914-b6ce-0540ebe49056",
        "parentId" : "4b771f60-78b3-48f6-a3bf-223bd7c83d70",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "In fact I am not that sure that this check makes sense. It is completely valid (and part of user stories of the roles) to have pods with a truel super set in their roles label. In the same sense having defaultPodRoles being a superset of frameworkRoles gives no contradiction.\n",
        "createdAt" : "2015-12-08T15:42:09Z",
        "updatedAt" : "2015-12-14T14:37:51Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "9f266079-0ca2-4d22-8702-bf4db61ee0e7",
        "parentId" : "4b771f60-78b3-48f6-a3bf-223bd7c83d70",
        "authorId" : "39a87e74-3afd-4203-9f90-c761ddc10ff7",
        "body" : "@sttts is right, in fact it may be a superset!\n",
        "createdAt" : "2015-12-08T15:54:03Z",
        "updatedAt" : "2015-12-14T14:37:51Z",
        "lastEditedBy" : "39a87e74-3afd-4203-9f90-c761ddc10ff7",
        "tags" : [
        ]
      },
      {
        "id" : "c70db09e-7bae-4d50-976b-7ab7d1e47a01",
        "parentId" : "4b771f60-78b3-48f6-a3bf-223bd7c83d70",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "Use-case:\nBy default we set frameworkRoles to `*,slave_public` and defaultPodRoles also to `*,slave_public`. The user can customize the frameworkRoles, e.g. decide to allow only `*` roles, i.e. set frameworkRoles to `*` only. Then defaultPodRoles does not change.\n",
        "createdAt" : "2015-12-08T15:55:52Z",
        "updatedAt" : "2015-12-14T14:37:51Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "6d31bbaf-f33c-432c-93b2-d5b88f2a585f",
        "parentId" : "4b771f60-78b3-48f6-a3bf-223bd7c83d70",
        "authorId" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "body" : "This sounds questionable to me. Like the user forgot to change\ndefaultPodRoles to reflect their intent.\n\nOn Tue, Dec 8, 2015 at 10:56 AM, Dr. Stefan Schimanski <\nnotifications@github.com> wrote:\n\n> In contrib/mesos/pkg/scheduler/service/service.go\n> https://github.com/kubernetes/kubernetes/pull/18348#discussion_r46970982\n> :\n> \n> > @@ -536,7 +540,7 @@ func (s *SchedulerServer) getDriver() (driver bindings.SchedulerDriver) {\n> >  }\n> > \n> >  func (s *SchedulerServer) Run(hks hyperkube.Interface, _ []string) error {\n> > -   if n := len(s.mesosRoles); n == 0 || n > 2 || (n == 2 && s.mesosRoles[0] != \"_\" && s.mesosRoles[1] != \"_\") {\n> > -   if n := len(s.frameworkRoles); n == 0 || n > 2 || (n == 2 && s.frameworkRoles[0] != \"_\" && s.frameworkRoles[1] != \"_\") {\n> \n> Use-case:\n> By default we set frameworkRoles to *,slave_public and defaultPodRoles\n> also to *,slave_public. The user can customize the frameworkRoles, e.g.\n> decide to allow only \\* roles, i.e. set frameworkRoles to \\* only. Then\n> defaultPodRoles does not change.\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/kubernetes/kubernetes/pull/18348/files#r46970982.\n",
        "createdAt" : "2015-12-08T16:22:37Z",
        "updatedAt" : "2015-12-14T14:37:51Z",
        "lastEditedBy" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "tags" : [
        ]
      },
      {
        "id" : "2c199365-cb4f-4577-9b3d-b1f5818a9d3f",
        "parentId" : "4b771f60-78b3-48f6-a3bf-223bd7c83d70",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "It does not harm if defaultPodRoles is too big.\n",
        "createdAt" : "2015-12-08T16:26:03Z",
        "updatedAt" : "2015-12-14T14:37:51Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "7ba16c89-174f-4d8c-96d1-3be313028c13",
        "parentId" : "4b771f60-78b3-48f6-a3bf-223bd7c83d70",
        "authorId" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "body" : "I completely understand the lack of specific harm to the system. My concern\nis related to usability: we offer two flags that affect role usage and it's\nnot clear to me that we've set up an operator for success. What's the value\nof allowing defaultPodRoles > frameworkRoles? How is this not confusing to\nan operator that doesn't understand our implementation at the code-level?\n\nOn Tue, Dec 8, 2015 at 11:26 AM, Dr. Stefan Schimanski <\nnotifications@github.com> wrote:\n\n> In contrib/mesos/pkg/scheduler/service/service.go\n> https://github.com/kubernetes/kubernetes/pull/18348#discussion_r46975645\n> :\n> \n> > @@ -536,7 +540,7 @@ func (s *SchedulerServer) getDriver() (driver bindings.SchedulerDriver) {\n> >  }\n> > \n> >  func (s *SchedulerServer) Run(hks hyperkube.Interface, _ []string) error {\n> > -   if n := len(s.mesosRoles); n == 0 || n > 2 || (n == 2 && s.mesosRoles[0] != \"_\" && s.mesosRoles[1] != \"_\") {\n> > -   if n := len(s.frameworkRoles); n == 0 || n > 2 || (n == 2 && s.frameworkRoles[0] != \"_\" && s.frameworkRoles[1] != \"_\") {\n> \n> It does not harm if defaultPodRoles is too big.\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/kubernetes/kubernetes/pull/18348/files#r46975645.\n",
        "createdAt" : "2015-12-08T16:32:51Z",
        "updatedAt" : "2015-12-14T14:37:51Z",
        "lastEditedBy" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "tags" : [
        ]
      },
      {
        "id" : "00dbc821-2e36-4520-8197-aa28c1ab351f",
        "parentId" : "4b771f60-78b3-48f6-a3bf-223bd7c83d70",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "It's not code level, it's the api documented in the scheduler description.\n",
        "createdAt" : "2015-12-08T16:37:21Z",
        "updatedAt" : "2015-12-14T14:37:51Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "cef95c97-bc1d-4fec-a39a-9b01b0a919c6",
        "parentId" : "4b771f60-78b3-48f6-a3bf-223bd7c83d70",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "What we actually want is one option: `*,role1,role2;role3`. Everything in front of `;` is default, everything behind is only used if defined explicitly in the roles label.\n",
        "createdAt" : "2015-12-08T16:39:08Z",
        "updatedAt" : "2015-12-14T14:37:51Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "23ed67d4-6f08-4d0b-88c8-ac3ac2c66eb1",
        "parentId" : "4b771f60-78b3-48f6-a3bf-223bd7c83d70",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "But understanding that as a user is not easier.\n",
        "createdAt" : "2015-12-08T16:42:08Z",
        "updatedAt" : "2015-12-14T14:37:51Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "374f8a4c-11b1-4cd8-b455-0bdc4e112833",
        "parentId" : "4b771f60-78b3-48f6-a3bf-223bd7c83d70",
        "authorId" : "39a87e74-3afd-4203-9f90-c761ddc10ff7",
        "body" : "OK, after rethought I suggest to implement a subset validation only during bootstrap and agree with @jdef.\n\nA superset is legal but very confusing when setting up the k8sm scheduler.\n",
        "createdAt" : "2015-12-08T16:49:51Z",
        "updatedAt" : "2015-12-14T14:37:51Z",
        "lastEditedBy" : "39a87e74-3afd-4203-9f90-c761ddc10ff7",
        "tags" : [
        ]
      },
      {
        "id" : "71cbd5bb-9e8b-4e44-a25c-7e7038e6411d",
        "parentId" : "4b771f60-78b3-48f6-a3bf-223bd7c83d70",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "The subset test is fine with me. There are arguments for both ways, but there are more important user facing things.\n",
        "createdAt" : "2015-12-08T16:58:44Z",
        "updatedAt" : "2015-12-14T14:37:51Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "288aa443-a97e-46b2-8390-84f92c3f1a1a",
        "parentId" : "4b771f60-78b3-48f6-a3bf-223bd7c83d70",
        "authorId" : "39a87e74-3afd-4203-9f90-c761ddc10ff7",
        "body" : "added frameworkRoles > defaultPodRoles check, PTAL\n",
        "createdAt" : "2015-12-09T12:14:28Z",
        "updatedAt" : "2015-12-14T14:37:51Z",
        "lastEditedBy" : "39a87e74-3afd-4203-9f90-c761ddc10ff7",
        "tags" : [
        ]
      }
    ],
    "commit" : "67e98fcfa832a0ca8eefe4254e20396a40dc0113",
    "line" : 53,
    "diffHunk" : "@@ -1,1 +541,545 @@\nfunc (s *SchedulerServer) Run(hks hyperkube.Interface, _ []string) error {\n\tif n := len(s.frameworkRoles); n == 0 || n > 2 || (n == 2 && s.frameworkRoles[0] != \"*\" && s.frameworkRoles[1] != \"*\") {\n\t\tlog.Fatalf(`only one custom role allowed in addition to \"*\"`)\n\t}"
  },
  {
    "id" : "3e0d0ecd-a09b-4bc1-9db8-ed339a4786aa",
    "prId" : 18348,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8ba5a65c-e932-4f0d-a740-37f1b45ef1cf",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "another one, let's use the same identifier.\n",
        "createdAt" : "2015-12-08T16:56:38Z",
        "updatedAt" : "2015-12-14T14:37:51Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "ca561745-5c12-4479-a5ad-6cfb9d5ce71a",
        "parentId" : "8ba5a65c-e932-4f0d-a740-37f1b45ef1cf",
        "authorId" : "39a87e74-3afd-4203-9f90-c761ddc10ff7",
        "body" : "I used `defaultPodRoles` and `frameworkRoles`, these here are defaults.\n",
        "createdAt" : "2015-12-09T11:09:03Z",
        "updatedAt" : "2015-12-14T14:37:51Z",
        "lastEditedBy" : "39a87e74-3afd-4203-9f90-c761ddc10ff7",
        "tags" : [
        ]
      },
      {
        "id" : "7f0a06c1-d8cb-41f6-934b-18133e7dedff",
        "parentId" : "8ba5a65c-e932-4f0d-a740-37f1b45ef1cf",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "right\n",
        "createdAt" : "2015-12-09T12:17:03Z",
        "updatedAt" : "2015-12-14T14:37:51Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "67e98fcfa832a0ca8eefe4254e20396a40dc0113",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +86,90 @@\tdefaultMesosUser             = \"root\" // should have privs to execute docker and iptables commands\n\tdefaultFrameworkRoles        = \"*\"\n\tdefaultPodRoles              = \"*\"\n\tdefaultReconcileInterval     = 300 // 5m default task reconciliation interval\n\tdefaultReconcileCooldown     = 15 * time.Second"
  },
  {
    "id" : "26670d42-785d-4cc1-a3b3-9084df59c539",
    "prId" : 18348,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "db8b0396-7425-405d-8d4f-8330fec33392",
        "parentId" : null,
        "authorId" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "body" : ":+1: \n",
        "createdAt" : "2015-12-09T15:57:16Z",
        "updatedAt" : "2015-12-14T14:37:51Z",
        "lastEditedBy" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "tags" : [
        ]
      }
    ],
    "commit" : "67e98fcfa832a0ca8eefe4254e20396a40dc0113",
    "line" : 59,
    "diffHunk" : "@@ -1,1 +547,551 @@\tfwSet := sets.NewString(s.frameworkRoles...)\n\tpodSet := sets.NewString(s.defaultPodRoles...)\n\tif !fwSet.IsSuperset(podSet) {\n\t\tlog.Fatalf(\"all default pod roles %q must be included in framework roles %q\", s.defaultPodRoles, s.frameworkRoles)\n\t}"
  },
  {
    "id" : "dd67e499-faf9-4616-a802-49ea7af36d07",
    "prId" : 18348,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5936b441-5989-4d01-8bc7-53892c257e17",
        "parentId" : null,
        "authorId" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "body" : "i'm really not a fan of all the `log.Fatalf` calls in this func. the return args allow an error. the system will exit upon `Run()` returning. no need to fatals here. can be addressed in a follow-up PR since this isn't the first violator here.\n",
        "createdAt" : "2015-12-09T15:59:31Z",
        "updatedAt" : "2015-12-14T14:37:51Z",
        "lastEditedBy" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "tags" : [
        ]
      },
      {
        "id" : "cee59188-f08f-44b8-ba1d-0fcc1f153b12",
        "parentId" : "5936b441-5989-4d01-8bc7-53892c257e17",
        "authorId" : "39a87e74-3afd-4203-9f90-c761ddc10ff7",
        "body" : ":+1:\n",
        "createdAt" : "2015-12-09T16:01:30Z",
        "updatedAt" : "2015-12-14T14:37:51Z",
        "lastEditedBy" : "39a87e74-3afd-4203-9f90-c761ddc10ff7",
        "tags" : [
        ]
      }
    ],
    "commit" : "67e98fcfa832a0ca8eefe4254e20396a40dc0113",
    "line" : 60,
    "diffHunk" : "@@ -1,1 +548,552 @@\tpodSet := sets.NewString(s.defaultPodRoles...)\n\tif !fwSet.IsSuperset(podSet) {\n\t\tlog.Fatalf(\"all default pod roles %q must be included in framework roles %q\", s.defaultPodRoles, s.frameworkRoles)\n\t}\n"
  },
  {
    "id" : "39238ae3-72c2-4fba-908b-6010da4b8ab1",
    "prId" : 16111,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3d9de2e9-9616-4a99-8d9a-7c32c6be73f9",
        "parentId" : null,
        "authorId" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "body" : ":+1: \n",
        "createdAt" : "2015-10-24T01:50:04Z",
        "updatedAt" : "2015-11-03T10:28:10Z",
        "lastEditedBy" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "tags" : [
        ]
      }
    ],
    "commit" : "8fb77ce13ef98b7cfe253fc90db4f4dc7d025743",
    "line" : 37,
    "diffHunk" : "@@ -1,1 +296,300 @@// returns (downloadURI, basename(path))\nfunc (s *SchedulerServer) serveFrameworkArtifact(path string) (string, string) {\n\tbasename := filepath.Base(path)\n\treturn s.serveFrameworkArtifactWithFilename(path, basename), basename\n}"
  },
  {
    "id" : "06b55888-706e-4c55-9e22-b7051706870e",
    "prId" : 16111,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7a03b04c-20f0-4fbb-b2b8-16d555e7aea4",
        "parentId" : null,
        "authorId" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "body" : "dislike `Fatalf` here\n",
        "createdAt" : "2015-11-04T14:20:36Z",
        "updatedAt" : "2015-11-04T14:20:36Z",
        "lastEditedBy" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "tags" : [
        ]
      },
      {
        "id" : "9b8607e9-d512-4831-80bf-46e149972e72",
        "parentId" : "7a03b04c-20f0-4fbb-b2b8-16d555e7aea4",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "Fixed in scheduler-refactoring branch.\n",
        "createdAt" : "2015-11-04T14:39:47Z",
        "updatedAt" : "2015-11-04T14:39:47Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "8fb77ce13ef98b7cfe253fc90db4f4dc7d025743",
    "line" : 47,
    "diffHunk" : "@@ -1,1 +364,368 @@\tif s.SandboxOverlay != \"\" {\n\t\tif _, err := os.Stat(s.SandboxOverlay); os.IsNotExist(err) {\n\t\t\tlog.Fatalf(\"Sandbox overlay archive not found: %s\", s.SandboxOverlay)\n\t\t}\n\t\turi, _ := s.serveFrameworkArtifact(s.SandboxOverlay)"
  },
  {
    "id" : "0872d459-a4a9-47a9-865c-acd55b8f0996",
    "prId" : 15775,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fe099f42-c68e-4a1a-a35d-674550928e84",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "Add comment that we set the framework role to the first non-star role.\n",
        "createdAt" : "2015-11-17T08:32:38Z",
        "updatedAt" : "2015-11-23T16:27:27Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "97c3fc27-f234-4d4b-bc08-ea41b96505d0",
        "parentId" : "fe099f42-c68e-4a1a-a35d-674550928e84",
        "authorId" : "39a87e74-3afd-4203-9f90-c761ddc10ff7",
        "body" : "done\n",
        "createdAt" : "2015-11-18T15:04:12Z",
        "updatedAt" : "2015-11-23T16:27:27Z",
        "lastEditedBy" : "39a87e74-3afd-4203-9f90-c761ddc10ff7",
        "tags" : [
        ]
      }
    ],
    "commit" : "9eae47c6e62d23b5329100aa5bdbe81457ce3e82",
    "line" : null,
    "diffHunk" : "@@ -1,1 +892,896 @@\t// set the framework's role to the first configured non-star role.\n\t// once Mesos supports multiple roles simply set the configured mesos roles slice.\n\tfor _, role := range s.mesosRoles {\n\t\tif role != \"*\" {\n\t\t\t// mesos currently supports only one role per framework info"
  },
  {
    "id" : "107aa235-bbbe-4c74-ac66-1f85d35e26b5",
    "prId" : 15775,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0b11ecf5-07d1-4ed9-b8eb-fb15437ec424",
        "parentId" : null,
        "authorId" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "body" : "do we ever need to worry about desired == \"\" (and erroring out if so)? i forget how that value is determined\n",
        "createdAt" : "2015-11-20T17:53:43Z",
        "updatedAt" : "2015-11-23T16:27:27Z",
        "lastEditedBy" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "tags" : [
        ]
      },
      {
        "id" : "1e12dbb2-e840-4ebb-8bae-d151361753fc",
        "parentId" : "0b11ecf5-07d1-4ed9-b8eb-fb15437ec424",
        "authorId" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "body" : "in other words .. the first `if` test was essentially removed here. why is it safe to do that?\n",
        "createdAt" : "2015-11-20T17:54:25Z",
        "updatedAt" : "2015-11-23T16:27:27Z",
        "lastEditedBy" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "tags" : [
        ]
      },
      {
        "id" : "bc55682e-852a-48a3-a8f7-61bd2c5100d2",
        "parentId" : "0b11ecf5-07d1-4ed9-b8eb-fb15437ec424",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "When can this happen? We always set an ExecutorId != \"\".\n",
        "createdAt" : "2015-11-21T07:46:50Z",
        "updatedAt" : "2015-11-23T16:27:27Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "cb60e6d1-a29b-42b3-b0dd-540dbfeb9c1c",
        "parentId" : "0b11ecf5-07d1-4ed9-b8eb-fb15437ec424",
        "authorId" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "body" : "I probably can't since `desired` is being fetched from etcd, and we probably don't ever write \"\" into etcd. I think the old code checked it for sanity.\n",
        "createdAt" : "2015-11-23T15:51:44Z",
        "updatedAt" : "2015-11-23T16:27:27Z",
        "lastEditedBy" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "tags" : [
        ]
      }
    ],
    "commit" : "9eae47c6e62d23b5329100aa5bdbe81457ce3e82",
    "line" : 214,
    "diffHunk" : "@@ -1,1 +625,629 @@func validateLeadershipTransition(desired, current string) {\n\tlog.Infof(\"validating leadership transition\")\n\tif desired != current && current != \"\" {\n\t\tlog.Fatalf(\"desired executor id != current executor id\", desired, current)\n\t}"
  },
  {
    "id" : "96004e19-423b-4141-9724-4df8bce1b826",
    "prId" : 15775,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "31104aba-e024-4be6-b12e-9a8f07765833",
        "parentId" : null,
        "authorId" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "body" : "if these constructors had simply panic'd there'd be less boilerplate here\n",
        "createdAt" : "2015-11-20T17:55:35Z",
        "updatedAt" : "2015-11-23T16:27:27Z",
        "lastEditedBy" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "tags" : [
        ]
      },
      {
        "id" : "072a4864-359a-4ebc-ac94-f1849b198cbd",
        "parentId" : "31104aba-e024-4be6-b12e-9a8f07765833",
        "authorId" : "39a87e74-3afd-4203-9f90-c761ddc10ff7",
        "body" : "panic'ing in constructors is definitely less idiomatic than returning an err :-/\n",
        "createdAt" : "2015-11-20T18:38:34Z",
        "updatedAt" : "2015-11-23T16:27:27Z",
        "lastEditedBy" : "39a87e74-3afd-4203-9f90-c761ddc10ff7",
        "tags" : [
        ]
      }
    ],
    "commit" : "9eae47c6e62d23b5329100aa5bdbe81457ce3e82",
    "line" : 286,
    "diffHunk" : "@@ -1,1 +710,714 @@\t}\n\n\texecInfoCache, err := executorinfo.NewCache(defaultExecutorInfoCacheSize)\n\tif err != nil {\n\t\tlog.Fatalf(\"cannot create executorinfo cache: %v\", err)"
  },
  {
    "id" : "ce2acc63-d2f7-4b58-ab13-eba401e0fbad",
    "prId" : 15775,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7666a1c8-d199-4e55-80ba-907f4186e0e6",
        "parentId" : null,
        "authorId" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "body" : "xref https://github.com/mesosphere/kubernetes-mesos/issues/787: `sid` used to contain a UUID so that each scheduler registered a unique name. this PR breaks multi-scheduler HA because identical executor ID's `eid` are reused as the scheduler UUID across multiple schedulers.\n",
        "createdAt" : "2016-02-23T15:36:28Z",
        "updatedAt" : "2016-02-23T15:36:53Z",
        "lastEditedBy" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "tags" : [
        ]
      }
    ],
    "commit" : "9eae47c6e62d23b5329100aa5bdbe81457ce3e82",
    "line" : 198,
    "diffHunk" : "@@ -1,1 +570,574 @@\t\tpath := fmt.Sprintf(meta.DefaultElectionFormat, s.frameworkName)\n\t\tlog.Infof(\"registering for election at %v with id %v\", path, eid.GetValue())\n\t\tgo election.Notify(election.NewEtcdMasterElector(etcdClient), path, eid.GetValue(), srv, nil)\n\t} else {\n\t\tlog.Infoln(\"self-electing in non-HA mode\")"
  },
  {
    "id" : "736b5648-3b67-4777-9114-d6d1ce10ce4c",
    "prId" : 15775,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "684a9c8d-c97c-4417-8f93-e256de1218cd",
        "parentId" : null,
        "authorId" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "body" : "possibly related to https://github.com/mesosphere/kubernetes-mesos/issues/778?\n",
        "createdAt" : "2016-02-23T15:45:12Z",
        "updatedAt" : "2016-02-23T15:45:12Z",
        "lastEditedBy" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "tags" : [
        ]
      }
    ],
    "commit" : "9eae47c6e62d23b5329100aa5bdbe81457ce3e82",
    "line" : 273,
    "diffHunk" : "@@ -1,1 +696,700 @@\t\t\tnode := obj.(*api.Node)\n\t\t\tif eiRegistry != nil {\n\t\t\t\tlog.V(2).Infof(\"deleting node %q from registry\", node.Name)\n\t\t\t\teiRegistry.Invalidate(node.Name)\n\t\t\t}"
  },
  {
    "id" : "7ef8beae-684b-4be0-a3db-7ad591b2f732",
    "prId" : 13943,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "912d7c38-1ebd-4fd6-ba19-7a535325deff",
        "parentId" : null,
        "authorId" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "body" : "should probably invoke an empty/noop func in v1 to really force the compiler to pick up on this (endpoints controller used to do something similar with the old v1beta1, v1beta2)\n",
        "createdAt" : "2015-09-18T04:45:25Z",
        "updatedAt" : "2015-11-13T23:30:49Z",
        "lastEditedBy" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "tags" : [
        ]
      }
    ],
    "commit" : "3d3577b9f381486ecae4a554a7f4a6685de71a63",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +77,81 @@\n\t// lock to this API version, compilation will fail when this becomes unsupported\n\t_ \"k8s.io/kubernetes/pkg/api/v1\"\n)\n"
  },
  {
    "id" : "a13414df-368d-45e4-9523-2993f9165e49",
    "prId" : 13857,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8e4141b3-38fb-40a1-b828-0003071e0c60",
        "parentId" : null,
        "authorId" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "body" : "might be nice to make this tunable, either via flag or scheduler config file (for large clusters, this value is probably too small)\n",
        "createdAt" : "2015-09-13T19:58:27Z",
        "updatedAt" : "2015-09-26T08:37:06Z",
        "lastEditedBy" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "tags" : [
        ]
      },
      {
        "id" : "558e5de4-06ed-4e92-bdf5-e3007b59e5fe",
        "parentId" : "8e4141b3-38fb-40a1-b828-0003071e0c60",
        "authorId" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "body" : "I think I misread this before as `5 * time.Second` instead of the `5 * time.Minute` that's actually here. This is fine as-is.\n",
        "createdAt" : "2015-09-14T09:38:56Z",
        "updatedAt" : "2015-09-26T08:37:06Z",
        "lastEditedBy" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "tags" : [
        ]
      }
    ],
    "commit" : "112f80fa4a30999d2e8457a817b48debe23a9cc9",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +79,83 @@\tdefaultReconcileInterval = 300    // 5m default task reconciliation interval\n\tdefaultReconcileCooldown = 15 * time.Second\n\tdefaultNodeRelistPeriod  = 5 * time.Minute\n\tdefaultFrameworkName     = \"Kubernetes\"\n\tdefaultExecutorCPUs      = mresource.CPUShares(0.25)  // initial CPU allocated for executor"
  },
  {
    "id" : "d0034348-74d7-4730-894f-94ca654464f3",
    "prId" : 13617,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "95269890-ec76-4f8a-a947-fb2b8e29a825",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "Why the `mesos-*` prefix? All other flags don't have that.\n",
        "createdAt" : "2015-09-06T05:58:42Z",
        "updatedAt" : "2015-09-06T11:45:04Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "8e3023b5-b1eb-4636-a4c9-0fecfe1d41e2",
        "parentId" : "95269890-ec76-4f8a-a947-fb2b8e29a825",
        "authorId" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "body" : "trying to use `mesos-` prefix for newly added flags that are not part of\nk8s proper\n\nOn Sun, Sep 6, 2015 at 1:59 AM, Dr. Stefan Schimanski <\nnotifications@github.com> wrote:\n\n> In contrib/mesos/pkg/scheduler/service/service.go\n> https://github.com/kubernetes/kubernetes/pull/13617#discussion_r38817904\n> :\n> \n> > @@ -221,6 +224,8 @@ func (s *SchedulerServer) addCoreFlags(fs *pflag.FlagSet) {\n> >     fs.StringVar(&s.MesosAuthProvider, \"mesos-authentication-provider\", s.MesosAuthProvider, fmt.Sprintf(\"Authentication provider to use, default is SASL that supports mechanisms: %+v\", mech.ListSupported()))\n> >     fs.StringVar(&s.DockerCfgPath, \"dockercfg-path\", s.DockerCfgPath, \"Path to a dockercfg file that will be used by the docker instance of the minions.\")\n> >     fs.StringVar(&s.MesosCgroupPrefix, \"mesos-cgroup-prefix\", s.MesosCgroupPrefix, \"The cgroup prefix concatenated with MESOS_DIRECTORY must give the executor cgroup set by Mesos\")\n> > -   fs.Var(&s.MesosExecutorCPUs, \"mesos-executor-cpus\", \"Initial CPU shares to allocate for each Mesos executor container.\")\n> \n> Why the mesos-\\* prefix? All other flags don't have that.\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/kubernetes/kubernetes/pull/13617/files#r38817904.\n",
        "createdAt" : "2015-09-06T11:40:22Z",
        "updatedAt" : "2015-09-06T11:45:04Z",
        "lastEditedBy" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "tags" : [
        ]
      },
      {
        "id" : "a00dc7f2-e0f4-48c6-930d-e98d830d4db3",
        "parentId" : "95269890-ec76-4f8a-a947-fb2b8e29a825",
        "authorId" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "body" : "at some point we should update all of the non-k8s flags to start with `mesos-`. I wish I'd remembered to do this every time I've added new flags recently.\n",
        "createdAt" : "2015-09-06T12:03:42Z",
        "updatedAt" : "2015-09-06T12:03:42Z",
        "lastEditedBy" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "tags" : [
        ]
      },
      {
        "id" : "42656cd6-398a-446a-afa4-52261059b22f",
        "parentId" : "95269890-ec76-4f8a-a947-fb2b8e29a825",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "Can you make a ticket for renaming them? Maybe we have one already. Not nice if the naming is inconsistent.\n",
        "createdAt" : "2015-09-06T17:12:48Z",
        "updatedAt" : "2015-09-06T17:12:48Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "f9f523df-ccc2-438f-94fd-2bf028c3a6a5",
        "parentId" : "95269890-ec76-4f8a-a947-fb2b8e29a825",
        "authorId" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "body" : "see https://github.com/mesosphere/kubernetes-mesos/issues/378\n",
        "createdAt" : "2015-09-06T23:46:58Z",
        "updatedAt" : "2015-09-06T23:46:58Z",
        "lastEditedBy" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "tags" : [
        ]
      }
    ],
    "commit" : "cf908df89c302bae90e8b4a686fff31539a4c9dd",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +225,229 @@\tfs.StringVar(&s.DockerCfgPath, \"dockercfg-path\", s.DockerCfgPath, \"Path to a dockercfg file that will be used by the docker instance of the minions.\")\n\tfs.StringVar(&s.MesosCgroupPrefix, \"mesos-cgroup-prefix\", s.MesosCgroupPrefix, \"The cgroup prefix concatenated with MESOS_DIRECTORY must give the executor cgroup set by Mesos\")\n\tfs.Var(&s.MesosExecutorCPUs, \"mesos-executor-cpus\", \"Initial CPU shares to allocate for each Mesos executor container.\")\n\tfs.Var(&s.MesosExecutorMem, \"mesos-executor-mem\", \"Initial memory (MB) to allocate for each Mesos executor container.\")\n\tfs.BoolVar(&s.Checkpoint, \"checkpoint\", s.Checkpoint, \"Enable/disable checkpointing for the kubernetes-mesos framework.\")"
  },
  {
    "id" : "182d650a-9949-46c1-b05b-3923de5f8e82",
    "prId" : 11928,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bfe22fc4-2714-4cf5-9faf-479dc43f5d22",
        "parentId" : null,
        "authorId" : "986f56b1-61d6-4237-bc65-fb7bfea715fe",
        "body" : "Is the `.String()` call necessary here?\n",
        "createdAt" : "2015-07-30T21:42:11Z",
        "updatedAt" : "2015-07-31T10:29:21Z",
        "lastEditedBy" : "986f56b1-61d6-4237-bc65-fb7bfea715fe",
        "tags" : [
        ]
      },
      {
        "id" : "a4599c4e-8223-4b89-bc1c-08f815caab90",
        "parentId" : "bfe22fc4-2714-4cf5-9faf-479dc43f5d22",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "No, it's implicit by the %v semantics.\n",
        "createdAt" : "2015-07-31T09:23:12Z",
        "updatedAt" : "2015-07-31T10:29:21Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "c4d6f75e35be7d84630df141e3efafab6f06ba69",
    "line" : 193,
    "diffHunk" : "@@ -1,1 +327,331 @@\t\tci.Arguments = append(ci.Arguments, fmt.Sprintf(\"--proxy-logv=%d\", s.ProxyLogV))\n\n\t\tci.Arguments = append(ci.Arguments, fmt.Sprintf(\"--max-log-size=%v\", s.MinionLogMaxSize.String()))\n\t\tci.Arguments = append(ci.Arguments, fmt.Sprintf(\"--max-log-backups=%d\", s.MinionLogMaxBackups))\n\t\tci.Arguments = append(ci.Arguments, fmt.Sprintf(\"--max-log-age=%d\", s.MinionLogMaxAgeInDays))"
  },
  {
    "id" : "e7df95ca-0d19-4386-9e0f-8104825cbd22",
    "prId" : 11230,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e9c1b4b1-dc0c-4fb0-9780-fb26dc58c285",
        "parentId" : null,
        "authorId" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "body" : "attempt to continue instead? (just skip this pod spec and move to the next)\n",
        "createdAt" : "2015-07-30T14:15:49Z",
        "updatedAt" : "2015-07-30T19:18:22Z",
        "lastEditedBy" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "tags" : [
        ]
      },
      {
        "id" : "cd8c819f-8e9f-4e1c-82f8-8f41c9b5a7d2",
        "parentId" : "e9c1b4b1-dc0c-4fb0-9780-fb26dc58c285",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "not sure. Above we already exit when the path is invalid, then it should be fatal here too.\n",
        "createdAt" : "2015-07-30T14:18:36Z",
        "updatedAt" : "2015-07-30T19:18:22Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "298cad15-7da4-46b6-8977-0fe0dc35d5c6",
        "parentId" : "e9c1b4b1-dc0c-4fb0-9780-fb26dc58c285",
        "authorId" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "body" : "well, it's one thing if we can't access the entire collection of zip files; in that case we can't launch any static pods.\n\nif someone fat-fingers a single pod desc, should that stop us from attempting to parse the rest? i'm not convinced. plus, someone may (for some reason) want to include a README in this dir. bombing out here precludes that (through, arguably, there's probably someplace for such a doc)\n",
        "createdAt" : "2015-07-30T14:22:56Z",
        "updatedAt" : "2015-07-30T19:18:22Z",
        "lastEditedBy" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "tags" : [
        ]
      },
      {
        "id" : "17f76baf-09e9-43c7-a83f-34d694308930",
        "parentId" : "e9c1b4b1-dc0c-4fb0-9780-fb26dc58c285",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "In fact we need some more dynamic mechanism here: a watched directory. That's what the kubelet does. In this sense I totally agree, the error behavior should be different.\n",
        "createdAt" : "2015-07-30T14:29:28Z",
        "updatedAt" : "2015-07-30T19:18:22Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "9b79e7bf-24af-4787-871f-d0cfdc5f1adf",
        "parentId" : "e9c1b4b1-dc0c-4fb0-9780-fb26dc58c285",
        "authorId" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "body" : "not super concerned that we don't have a directory watch implemented yet.\nwe can add it to the TODO list.\n\nOn Thu, Jul 30, 2015 at 10:30 AM, Dr. Stefan Schimanski <\nnotifications@github.com> wrote:\n\n> In contrib/mesos/pkg/scheduler/service/service.go\n> https://github.com/GoogleCloudPlatform/kubernetes/pull/11230#discussion_r35875979\n> :\n> \n> > -       // Adjust the resource accounting for the executor.\n> > -       // Currently each podTask accounts the default amount of resources.\n> > -       // TODO(joerg84) adapt to actual resources specified by pods.\n> > -       log.Infof(\"Detected %d staticPods in Configuration.\", numberStaticPods)\n> > -       // try to read pod files and sum resources\n> > -       for _, podPath := range paths {\n> > -           podJson, err := ioutil.ReadFile(podPath)\n> > -           if err != nil {\n> > -               return nil, nil, fmt.Errorf(\"error reading static pod spec: %v\", err)\n> \n> In fact we need some more dynamic mechanism here: a watched directory.\n> That's what the kubelet does. In this sense I totally agree, the error\n> behavior should be different.\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/GoogleCloudPlatform/kubernetes/pull/11230/files#r35875979\n> .\n",
        "createdAt" : "2015-07-30T14:36:03Z",
        "updatedAt" : "2015-07-30T19:18:22Z",
        "lastEditedBy" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "tags" : [
        ]
      }
    ],
    "commit" : "f3f617d9db9c51de8d8ae65cb9c435114162e2bd",
    "line" : null,
    "diffHunk" : "@@ -1,1 +385,389 @@\t\t\tpodJson, err := ioutil.ReadFile(podPath)\n\t\t\tif err != nil {\n\t\t\t\treturn nil, nil, fmt.Errorf(\"error reading static pod spec: %v\", err)\n\t\t\t}\n"
  },
  {
    "id" : "fcebb0c6-e3c7-4494-a8fe-f2ec6aaae29b",
    "prId" : 11230,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2783b55c-dd5b-47b7-affa-dca16c2b5ce6",
        "parentId" : null,
        "authorId" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "body" : "ditto\n",
        "createdAt" : "2015-07-30T14:15:59Z",
        "updatedAt" : "2015-07-30T19:18:22Z",
        "lastEditedBy" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "tags" : [
        ]
      }
    ],
    "commit" : "f3f617d9db9c51de8d8ae65cb9c435114162e2bd",
    "line" : 113,
    "diffHunk" : "@@ -1,1 +391,395 @@\t\t\terr = json.Unmarshal(podJson, &pod)\n\t\t\tif err != nil {\n\t\t\t\treturn nil, nil, fmt.Errorf(\"error parsing static pod spec at %v: %v\", podPath, err)\n\t\t\t}\n"
  },
  {
    "id" : "3b700d93-afe0-4bd5-9815-f5ea190e9e38",
    "prId" : 11230,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bf803ce6-1b61-4b6c-9f73-4470eb4d527b",
        "parentId" : null,
        "authorId" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "body" : "ditto\n",
        "createdAt" : "2015-07-30T14:16:12Z",
        "updatedAt" : "2015-07-30T19:18:22Z",
        "lastEditedBy" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "tags" : [
        ]
      },
      {
        "id" : "1a0bcd07-7a1e-41b1-921e-2cedd6a24514",
        "parentId" : "bf803ce6-1b61-4b6c-9f73-4470eb4d527b",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "Here we get a problem: the pods are passed to the executor, consume memory and cpu. The executor only reserves 64MB for them. If they need more, docker does not stop them, but the executors cgroup will => boom\n",
        "createdAt" : "2015-07-30T14:32:36Z",
        "updatedAt" : "2015-07-30T19:18:22Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "f3f617d9db9c51de8d8ae65cb9c435114162e2bd",
    "line" : null,
    "diffHunk" : "@@ -1,1 +398,402 @@\t\t\tunlimitedMem := mresource.LimitPodMem(&pod, s.DefaultContainerMemLimit)\n\t\t\tif unlimitedCPU {\n\t\t\t\treturn nil, nil, fmt.Errorf(\"found static pod without limit on cpu resources: %v\", podPath)\n\t\t\t}\n\t\t\tif unlimitedMem {"
  },
  {
    "id" : "17baadd8-ef38-49a5-bdc5-4158d329a5f3",
    "prId" : 11230,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bee1e611-15f2-4a3e-918b-a771ee96495d",
        "parentId" : null,
        "authorId" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "body" : "ditto\n",
        "createdAt" : "2015-07-30T14:16:40Z",
        "updatedAt" : "2015-07-30T19:18:22Z",
        "lastEditedBy" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "tags" : [
        ]
      }
    ],
    "commit" : "f3f617d9db9c51de8d8ae65cb9c435114162e2bd",
    "line" : 126,
    "diffHunk" : "@@ -1,1 +401,405 @@\t\t\t}\n\t\t\tif unlimitedMem {\n\t\t\t\treturn nil, nil, fmt.Errorf(\"found static pod without limit on memory resources: %v\", podPath)\n\t\t\t}\n"
  }
]