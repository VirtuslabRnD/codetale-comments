[
  {
    "id" : "1170d492-0113-48ee-8c0a-47d0679200eb",
    "prId" : 15775,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cb846051-115a-479d-9a9c-960e91f9771f",
        "parentId" : null,
        "authorId" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "body" : "do we need to be able to delete entries from this registry to avoid endlessly consuming memory for long running clusters? perhaps upon `Framework.ExecutorLost`?\n",
        "createdAt" : "2015-11-16T15:40:11Z",
        "updatedAt" : "2015-11-23T16:27:27Z",
        "lastEditedBy" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "tags" : [
        ]
      },
      {
        "id" : "c71ad73a-70c3-4d05-ae7c-f5f8b39c0b2e",
        "parentId" : "cb846051-115a-479d-9a9c-960e91f9771f",
        "authorId" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "body" : ".. and perhaps upon disconnection from the master as well, since we won't receive any updates about executors while in that state?\n",
        "createdAt" : "2015-11-16T15:41:30Z",
        "updatedAt" : "2015-11-23T16:27:27Z",
        "lastEditedBy" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "tags" : [
        ]
      },
      {
        "id" : "512c2e82-bc32-46e8-8ec7-2d4c5909dc43",
        "parentId" : "cb846051-115a-479d-9a9c-960e91f9771f",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "We had the idea to remove entries after some time. They are restored from the node annotation anyway.\n",
        "createdAt" : "2015-11-16T15:49:43Z",
        "updatedAt" : "2015-11-23T16:27:27Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "89edebd1-5715-4b0c-8e71-89b111b3409f",
        "parentId" : "cb846051-115a-479d-9a9c-960e91f9771f",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "The procurer is \"far away\" from the Framework now. So getting the ExecutorLost message there might be messy. Not sure it's really worth it, especially when we invalidate entries some time.\n",
        "createdAt" : "2015-11-16T15:51:35Z",
        "updatedAt" : "2015-11-23T16:27:27Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "438306ec-7099-483a-a429-fb02ef27cf48",
        "parentId" : "cb846051-115a-479d-9a9c-960e91f9771f",
        "authorId" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "body" : "if this interface offered a Delete() func, what's stopping you from invoking it in the form of an \"executor-lost-listener\" that's called upon `ExecutorLost()`?\n",
        "createdAt" : "2015-11-16T16:15:22Z",
        "updatedAt" : "2015-11-23T16:27:27Z",
        "lastEditedBy" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "tags" : [
        ]
      },
      {
        "id" : "addbe777-bcf8-4ebe-a898-4d38fbca7788",
        "parentId" : "cb846051-115a-479d-9a9c-960e91f9771f",
        "authorId" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "body" : "... and who is cleaning up stale node annotations upon executor death?\n",
        "createdAt" : "2015-11-16T16:24:19Z",
        "updatedAt" : "2015-11-23T16:27:27Z",
        "lastEditedBy" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "tags" : [
        ]
      },
      {
        "id" : "2bb61da1-3012-4517-b8de-31698a66551d",
        "parentId" : "cb846051-115a-479d-9a9c-960e91f9771f",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "The scheduler structure. We have to make the registry available to the Framework. Possible, but not done yet.\n",
        "createdAt" : "2015-11-16T16:25:58Z",
        "updatedAt" : "2015-11-23T16:27:27Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "34c80ed6-a5b6-45a2-ac57-6f6aaab22890",
        "parentId" : "cb846051-115a-479d-9a9c-960e91f9771f",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "The stale node annotations do not harm. We don't care. We only use them when the master tells us the ExecutorId in an offer. \n",
        "createdAt" : "2015-11-16T16:27:36Z",
        "updatedAt" : "2015-11-23T16:27:27Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "21c77073-5f53-498f-a64d-c2c8e1014523",
        "parentId" : "cb846051-115a-479d-9a9c-960e91f9771f",
        "authorId" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "body" : "OK, I'll withhold further comment until I see the cache TTL stuff implemented for the registry. Assuming that's going to be done as part of this PR.\n",
        "createdAt" : "2015-11-16T21:15:26Z",
        "updatedAt" : "2015-11-23T16:27:27Z",
        "lastEditedBy" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "tags" : [
        ]
      },
      {
        "id" : "b1da18dd-3cc6-47ad-8cac-55717671be22",
        "parentId" : "cb846051-115a-479d-9a9c-960e91f9771f",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "Added a todo.\n",
        "createdAt" : "2015-11-17T08:17:40Z",
        "updatedAt" : "2015-11-23T16:27:27Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "9eae47c6e62d23b5329100aa5bdbe81457ce3e82",
    "line" : null,
    "diffHunk" : "@@ -1,1 +37,41 @@// Invalidate invalidates the given hostname from this registry.\n// Note that a subsequent Get may recover the executor info.\ntype Registry interface {\n\tNew(hostname string, resources []*mesosproto.Resource) *mesosproto.ExecutorInfo\n\tGet(hostname string) (*mesosproto.ExecutorInfo, error)"
  },
  {
    "id" : "27237114-41b7-4a79-b09a-715c568e5b37",
    "prId" : 15775,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dc36f386-dc06-4eb9-987d-82bf47e3ce45",
        "parentId" : null,
        "authorId" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "body" : "nit: i'm not sure how idiomatic it really is for constructors to return errors. though we probably do it in other places too I'm not sure that it's appropriate behavior. i'm under the impression that constructors are generally expected to panic if you pass in args that don't comply with the documented requirements.\n\nthoughts?\n",
        "createdAt" : "2015-11-20T16:16:58Z",
        "updatedAt" : "2015-11-23T16:27:27Z",
        "lastEditedBy" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "tags" : [
        ]
      },
      {
        "id" : "05011883-5603-4c7f-ab5c-e711294106f9",
        "parentId" : "dc36f386-dc06-4eb9-987d-82bf47e3ce45",
        "authorId" : "39a87e74-3afd-4203-9f90-c761ddc10ff7",
        "body" : "I was unsure myself but indeed found this idiom in a couple of places, i.e.\nin bradfitz camlistore and I believe also in groupcache.\nOn Nov 20, 2015 5:17 PM, \"James DeFelice\" notifications@github.com wrote:\n\n> In contrib/mesos/pkg/scheduler/executorinfo/registry.go\n> https://github.com/kubernetes/kubernetes/pull/15775#discussion_r45486108\n> :\n> \n> > +// registry implements a map-based in-memory ExecutorInfo registry\n> > +type registry struct {\n> > -   cache *Cache\n> > -   mu    sync.RWMutex // protects fields above\n> >   +\n> > -   lookupNode node.LookupFunc\n> > -   prototype  *mesosproto.ExecutorInfo\n> >   +}\n> >   +\n> >   +// NewRegistry returns a new executorinfo registry.\n> >   +// The given prototype is being used for properties other than resources.\n> >   +func NewRegistry(\n> > -   lookupNode node.LookupFunc,\n> > -   prototype *mesosproto.ExecutorInfo,\n> > -   cache *Cache,\n> >   +) (Registry, error) {\n> \n> nit: i'm not sure how idiomatic it really is for constructors to return\n> errors. though we probably do it in other places too I'm not sure that it's\n> appropriate behavior. i'm under the impression that constructors are\n> generally expected to panic if you pass in args that don't comply with the\n> documented requirements.\n> \n> thoughts?\n> \n> â€”\n> Reply to this email directly or view it on GitHub\n> https://github.com/kubernetes/kubernetes/pull/15775/files#r45486108.\n",
        "createdAt" : "2015-11-20T18:14:14Z",
        "updatedAt" : "2015-11-23T16:27:27Z",
        "lastEditedBy" : "39a87e74-3afd-4203-9f90-c761ddc10ff7",
        "tags" : [
        ]
      },
      {
        "id" : "a6a61ea4-ac06-4184-8aee-7fb45b49faf2",
        "parentId" : "dc36f386-dc06-4eb9-987d-82bf47e3ce45",
        "authorId" : "39a87e74-3afd-4203-9f90-c761ddc10ff7",
        "body" : "Constructors returning error:\n- https://godoc.org/google.golang.org/api/compute/v1#New\n\nAnd one from the master itself ;-)\n- https://github.com/camlistore/camlistore/blob/master/pkg/gc/gc.go#L123\n",
        "createdAt" : "2015-11-20T18:49:21Z",
        "updatedAt" : "2015-11-23T16:27:27Z",
        "lastEditedBy" : "39a87e74-3afd-4203-9f90-c761ddc10ff7",
        "tags" : [
        ]
      },
      {
        "id" : "a77f8c6f-f964-4bc9-b805-81d3477dc76f",
        "parentId" : "dc36f386-dc06-4eb9-987d-82bf47e3ce45",
        "authorId" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "body" : "ok, thx for sharing. don't sweat it\n\nOn Fri, Nov 20, 2015 at 1:50 PM, Sergiusz Urbaniak <notifications@github.com\n\n> wrote:\n> \n> In contrib/mesos/pkg/scheduler/executorinfo/registry.go\n> https://github.com/kubernetes/kubernetes/pull/15775#discussion_r45503121\n> :\n> \n> > +// registry implements a map-based in-memory ExecutorInfo registry\n> > +type registry struct {\n> > -   cache *Cache\n> > -   mu    sync.RWMutex // protects fields above\n> >   +\n> > -   lookupNode node.LookupFunc\n> > -   prototype  *mesosproto.ExecutorInfo\n> >   +}\n> >   +\n> >   +// NewRegistry returns a new executorinfo registry.\n> >   +// The given prototype is being used for properties other than resources.\n> >   +func NewRegistry(\n> > -   lookupNode node.LookupFunc,\n> > -   prototype *mesosproto.ExecutorInfo,\n> > -   cache *Cache,\n> >   +) (Registry, error) {\n> \n> Constructors returning error:\n> - https://godoc.org/google.golang.org/api/compute/v1#New\n> \n> And one from the master itself ;-)\n> \n>    -\n>    https://github.com/camlistore/camlistore/blob/master/pkg/gc/gc.go#L123\n> \n> â€”\n> Reply to this email directly or view it on GitHub\n> https://github.com/kubernetes/kubernetes/pull/15775/files#r45503121.\n",
        "createdAt" : "2015-11-20T19:25:38Z",
        "updatedAt" : "2015-11-23T16:27:27Z",
        "lastEditedBy" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "tags" : [
        ]
      }
    ],
    "commit" : "9eae47c6e62d23b5329100aa5bdbe81457ce3e82",
    "line" : 60,
    "diffHunk" : "@@ -1,1 +58,62 @@\tprototype *mesosproto.ExecutorInfo,\n\tcache *Cache,\n) (Registry, error) {\n\tif prototype == nil {\n\t\treturn nil, fmt.Errorf(\"no prototype given\")"
  }
]