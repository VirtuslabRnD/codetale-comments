[
  {
    "id" : "63702796-1252-494f-86ab-4e060ced36f8",
    "prId" : 14271,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2f097f70-ff2d-495f-afa9-af481942dd66",
        "parentId" : null,
        "authorId" : "ef33f76a-ca59-4720-94a5-47e86994ee8d",
        "body" : "I'm really not a fan of this naming convention using `-Interface`. \nAre we doing this throughout k8sm? Is the rest of k8s doing this?\n",
        "createdAt" : "2015-09-22T15:39:30Z",
        "updatedAt" : "2015-09-30T14:14:39Z",
        "lastEditedBy" : "ef33f76a-ca59-4720-94a5-47e86994ee8d",
        "tags" : [
        ]
      },
      {
        "id" : "63229811-a679-49b2-8cc1-40b582ac7bab",
        "parentId" : "2f097f70-ff2d-495f-afa9-af481942dd66",
        "authorId" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "body" : "I did this :(  I needed to stop the plugin from reaching directly for the\nfields of KubernetesScheduler. I wasn't feeling very creative or inspired.\nschedulerInterface was named. Ideally the plugin stuff (the k8s side of the\nscheduler) would live in a plugin/ package. I use the name \"plugin\" because\nthe upstream scheduler is in a \"plugin/scheduler/...\" set of packages so it\nwas easy for me to distinguish between the \"mesos\" side of the brain and\nthe \"plugin\" side of the brain.\n\nOn Tue, Sep 22, 2015 at 11:40 AM, Karl Isenberg notifications@github.com\nwrote:\n\n> In contrib/mesos/pkg/scheduler/plugin.go\n> https://github.com/kubernetes/kubernetes/pull/14271#discussion_r40102215\n> :\n> \n> > @@ -52,6 +52,11 @@ const (\n> >     pluginRecoveryDelay = 100 \\* time.Millisecond // delay after scheduler plugin crashes, before we resume scheduling\n> >  )\n> > \n> > +const (\n> > -   FailedScheduling = \"FailedScheduling\"\n> > -   Scheduled        = \"Scheduled\"\n> >   +)\n> >   +\n> >   // scheduler abstraction to allow for easier unit testing\n> >   type schedulerInterface interface {\n> \n> I'm really not a fan of this naming convention using -Interface.\n> Are we doing this throughout k8sm? Is the rest of k8s doing this?\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/kubernetes/kubernetes/pull/14271/files#r40102215.\n",
        "createdAt" : "2015-09-22T20:02:02Z",
        "updatedAt" : "2015-09-30T14:14:39Z",
        "lastEditedBy" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "tags" : [
        ]
      }
    ],
    "commit" : "56fc0f5900d20a93436b18ba2e46cd823234ce06",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +59,63 @@\n// scheduler abstraction to allow for easier unit testing\ntype schedulerInterface interface {\n\tsync.Locker // synchronize scheduler plugin operations\n"
  },
  {
    "id" : "20447b84-956e-43fd-b435-9c41f2d9b366",
    "prId" : 13421,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8cfd5db6-c479-4cb5-95c3-8d1cb36f0625",
        "parentId" : null,
        "authorId" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "body" : "we really need error checking here. should probably do that before we forget\n",
        "createdAt" : "2015-09-01T01:29:17Z",
        "updatedAt" : "2015-09-04T00:52:58Z",
        "lastEditedBy" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "tags" : [
        ]
      },
      {
        "id" : "3c87b118-f206-40b3-8b17-71e08a52cc6f",
        "parentId" : "8cfd5db6-c479-4cb5-95c3-8d1cb36f0625",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "How about a ticket if it's important?\n",
        "createdAt" : "2015-09-03T07:20:45Z",
        "updatedAt" : "2015-09-04T00:52:58Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "85d8415b-3a7f-479c-ba21-426b89ab2a1f",
        "parentId" : "8cfd5db6-c479-4cb5-95c3-8d1cb36f0625",
        "authorId" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "body" : "Thanks for surfacing this - I forgot about it!\n\nOn Thu, Sep 3, 2015 at 3:21 AM, Dr. Stefan Schimanski <\nnotifications@github.com> wrote:\n\n> In contrib/mesos/pkg/scheduler/plugin.go\n> https://github.com/kubernetes/kubernetes/pull/13421#discussion_r38618878\n> :\n> \n> > ```\n> >     task.Offer = offer\n> > ```\n> > -       task.FillFromDetails(details)\n> > -       k.api.algorithm().Procurement()(task, details) // TODO(jdef) why is nothing checking the error returned here?\n> \n> How about a ticket if it's important?\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/kubernetes/kubernetes/pull/13421/files#r38618878.\n",
        "createdAt" : "2015-09-03T14:20:55Z",
        "updatedAt" : "2015-09-04T00:52:58Z",
        "lastEditedBy" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "tags" : [
        ]
      },
      {
        "id" : "bf1fd65f-11c2-4f03-88ec-17c72fec7308",
        "parentId" : "8cfd5db6-c479-4cb5-95c3-8d1cb36f0625",
        "authorId" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "body" : "xref https://github.com/mesosphere/kubernetes-mesos/issues/475\n",
        "createdAt" : "2015-09-04T00:57:16Z",
        "updatedAt" : "2015-09-04T00:57:16Z",
        "lastEditedBy" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "tags" : [
        ]
      }
    ],
    "commit" : "a1cea8dd8795d5173d4a0d0dd07bc9a41b0aafd5",
    "line" : 68,
    "diffHunk" : "@@ -1,1 +338,342 @@\n\t\ttask.Offer = offer\n\t\tk.api.algorithm().Procurement()(task, details) // TODO(jdef) why is nothing checking the error returned here?\n\n\t\tif err := k.api.tasks().Update(task); err != nil {"
  },
  {
    "id" : "8d6bbe54-2e49-46c9-bd1e-9c3c105ca065",
    "prId" : 12678,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0cf4d540-83cb-4a93-baf7-c52e41ebc6b6",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "Why do we drop the err here in the log?\n",
        "createdAt" : "2015-08-13T20:59:08Z",
        "updatedAt" : "2015-08-17T10:18:04Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "d787ced6-e4eb-473d-95e9-b531d57e3a26",
        "parentId" : "0cf4d540-83cb-4a93-baf7-c52e41ebc6b6",
        "authorId" : "ef33f76a-ca59-4720-94a5-47e86994ee8d",
        "body" : "I think the error bubbles up to a log a few lines later.\n",
        "createdAt" : "2015-08-13T22:40:56Z",
        "updatedAt" : "2015-08-17T10:18:04Z",
        "lastEditedBy" : "ef33f76a-ca59-4720-94a5-47e86994ee8d",
        "tags" : [
        ]
      }
    ],
    "commit" : "61c9dd876e25a872f730313b9d355b663d2cbe51",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +758,762 @@\tdest, err := s.config.Algorithm.Schedule(pod, s.config.MinionLister) // call kubeScheduler.Schedule\n\tif err != nil {\n\t\tlog.V(1).Infof(\"Failed to schedule: %+v\", pod)\n\t\ts.config.Recorder.Eventf(pod, \"FailedScheduling\", \"Error scheduling: %v\", err)\n\t\ts.config.Error(pod, err)"
  },
  {
    "id" : "9e365650-f333-4669-9d05-b4c6fab52e48",
    "prId" : 12539,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4c6cd9fb-088e-4299-a944-dd76a2df007f",
        "parentId" : null,
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "Can we make this change across all the components? There are systems that are interpreting these events. If we are breaking them, I'd prefer doing it in one shot.\n@bgrant0607: Does that sound reasonable?\n",
        "createdAt" : "2015-08-11T18:27:04Z",
        "updatedAt" : "2015-08-13T03:33:23Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      },
      {
        "id" : "874d815d-fb74-4c2e-906a-a090baf922a5",
        "parentId" : "4c6cd9fb-088e-4299-a944-dd76a2df007f",
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "Do you have examples of systems interpreting the events? We've said that they shouldn't be treated as an API.\n",
        "createdAt" : "2015-08-11T20:44:31Z",
        "updatedAt" : "2015-08-13T03:33:23Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "1bbb00cc-ea68-4bb5-80f3-361e417f75a3",
        "parentId" : "4c6cd9fb-088e-4299-a944-dd76a2df007f",
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "Stackdriver has support for visualizing some events. The `reason` field in the event is what is expected to be stable. \n",
        "createdAt" : "2015-08-11T20:53:05Z",
        "updatedAt" : "2015-08-13T03:33:23Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      },
      {
        "id" : "a1b34e89-6a7e-4ffd-9a7c-ac517b4b4590",
        "parentId" : "4c6cd9fb-088e-4299-a944-dd76a2df007f",
        "authorId" : "3c7fea1e-9d61-4b20-8af9-584361c1b59a",
        "body" : "@vishh Do you mean all the components in kubernetes? If so, #12516 and this will cover all the components. Or some components outside kubernetes? \n",
        "createdAt" : "2015-08-12T01:37:05Z",
        "updatedAt" : "2015-08-13T03:33:23Z",
        "lastEditedBy" : "3c7fea1e-9d61-4b20-8af9-584361c1b59a",
        "tags" : [
        ]
      },
      {
        "id" : "5048b7c8-aa4e-4ebf-8989-8487d8820f76",
        "parentId" : "4c6cd9fb-088e-4299-a944-dd76a2df007f",
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "Could stackdriver be made case-insensitive?\n",
        "createdAt" : "2015-08-12T03:17:54Z",
        "updatedAt" : "2015-08-13T03:33:23Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "27d38288-a022-45a1-b71e-f93fbd70bdda",
        "parentId" : "4c6cd9fb-088e-4299-a944-dd76a2df007f",
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "@jiangyaoguo: #12516 is what I was looking for. Thanks for the pointer. \n@bgrant0607: That is possible.\n",
        "createdAt" : "2015-08-12T17:30:06Z",
        "updatedAt" : "2015-08-13T03:33:23Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      },
      {
        "id" : "ef8d5437-4057-4b21-80d4-4f8589c599f8",
        "parentId" : "4c6cd9fb-088e-4299-a944-dd76a2df007f",
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "@vishh Great. Please send me a list of event reasons StackDriver is dependent upon.\n",
        "createdAt" : "2015-08-12T17:56:24Z",
        "updatedAt" : "2015-08-13T03:33:23Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "3cb6c474-6521-49c5-9502-aaf08efcd06b",
        "parentId" : "4c6cd9fb-088e-4299-a944-dd76a2df007f",
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "`NodeNotReady, freeDiskSpaceFailed, OutOfDisk, KubeletSetupFailed, systemOOMEvent`\n",
        "createdAt" : "2015-08-13T17:35:22Z",
        "updatedAt" : "2015-08-13T17:35:22Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      }
    ],
    "commit" : "5d3522dc7aba6e2b2f17faa8b1c7fcf3ef668d71",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +759,763 @@\tif err != nil {\n\t\tlog.V(1).Infof(\"Failed to schedule: %v\", pod)\n\t\ts.config.Recorder.Eventf(pod, \"FailedScheduling\", \"Error scheduling: %v\", err)\n\t\ts.config.Error(pod, err)\n\t\treturn"
  },
  {
    "id" : "e5f4da21-9e74-4448-8003-90a08104e463",
    "prId" : 8882,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7c773116-d714-4cdc-8e39-043ee8ff79d6",
        "parentId" : null,
        "authorId" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "body" : "IIUC FillFromDetails() uses default CPU and mem, not the actual values from the task. Why is that correct? (Probably I am not understanding what the code here is doing.)\n",
        "createdAt" : "2015-06-07T10:15:40Z",
        "updatedAt" : "2015-06-11T13:48:08Z",
        "lastEditedBy" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "tags" : [
        ]
      },
      {
        "id" : "1e0c22d6-77b9-4c53-a409-3633d2547fcc",
        "parentId" : "7c773116-d714-4cdc-8e39-043ee8ff79d6",
        "authorId" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "body" : "we have an issue open for this. now that kubelet supports specifying parent-cgroup we plan to leverage that to properly account for cpu and memory allocations. the current implementation is simply a placeholder.\n",
        "createdAt" : "2015-06-10T21:06:58Z",
        "updatedAt" : "2015-06-11T13:48:08Z",
        "lastEditedBy" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "tags" : [
        ]
      },
      {
        "id" : "97170432-df28-4d7b-9ec9-f829e5570513",
        "parentId" : "7c773116-d714-4cdc-8e39-043ee8ff79d6",
        "authorId" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "body" : "OK, can you please add a comment here mentioning that? (Even better, referencing the open issue # specifically?)\n",
        "createdAt" : "2015-06-11T05:58:40Z",
        "updatedAt" : "2015-06-11T13:48:08Z",
        "lastEditedBy" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "tags" : [
        ]
      }
    ],
    "commit" : "6436c4a3bcd6756ebfd47679478fac700698ebb1",
    "line" : null,
    "diffHunk" : "@@ -1,1 +331,335 @@\t\t//For now we are completely ignoring the resources specified in the pod.\n\t\t//see: https://github.com/mesosphere/kubernetes-mesos/issues/68\n\t\ttask.FillFromDetails(details)\n\t\tif err := k.api.tasks().Update(task); err != nil {\n\t\t\toffer.Release()"
  }
]