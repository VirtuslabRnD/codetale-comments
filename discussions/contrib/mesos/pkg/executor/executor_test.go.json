[
  {
    "id" : "6e9946c7-759e-4a04-9813-f74b58fb0e84",
    "prId" : 16266,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8d2cb5e0-c0b7-4fe8-af15-82b44d3667db",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "I feel like a pointer would be more natural, but I can't think of a concrete reason to ask you to switch...\n",
        "createdAt" : "2015-10-27T04:09:58Z",
        "updatedAt" : "2015-10-27T04:09:58Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "6c1d9594-f4c5-4958-9ce5-86aa982d54b1",
        "parentId" : "8d2cb5e0-c0b7-4fe8-af15-82b44d3667db",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Yeah, I struggle with this as well.  With Delete, we said backwards\ncompatibility meant that \"nil\" was \"default\" and anything else was \"user\nintent\".  I think with list, the implicit list is \"all options defaulting\",\nalthough for field and label selectors nil doesn't quite mean \"everything\"\n(although I guess it should).\n\nOn Tue, Oct 27, 2015 at 12:10 AM, Daniel Smith notifications@github.com\nwrote:\n\n> In contrib/mesos/pkg/executor/executor_test.go\n> https://github.com/kubernetes/kubernetes/pull/16266#discussion_r43082785\n> :\n> \n> > @@ -543,7 +543,7 @@ func NewMockPodsListWatch(initialPodList api.PodList) *MockPodsListWatch {\n> >         list:        initialPodList,\n> >     }\n> >     lw.ListWatch = cache.ListWatch{\n> > -       WatchFunc: func(resourceVersion string) (watch.Interface, error) {\n> > -       WatchFunc: func(options api.ListOptions) (watch.Interface, error) {\n> \n> I feel like a pointer would be more natural, but I can't think of a\n> concrete reason to ask you to switch...\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/kubernetes/kubernetes/pull/16266/files#r43082785.\n",
        "createdAt" : "2015-10-27T04:14:21Z",
        "updatedAt" : "2015-10-27T04:14:21Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "433c55e2-6a2a-4c61-9702-38eded8722ff",
        "parentId" : "8d2cb5e0-c0b7-4fe8-af15-82b44d3667db",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "For better or worse (I think worse), in other contexts we made nil selector\nmean nothing and nil-but-empty selector mean everything.\n\nOn Mon, Oct 26, 2015 at 9:14 PM, Clayton Coleman notifications@github.com\nwrote:\n\n> In contrib/mesos/pkg/executor/executor_test.go\n> https://github.com/kubernetes/kubernetes/pull/16266#discussion_r43083036\n> :\n> \n> > @@ -543,7 +543,7 @@ func NewMockPodsListWatch(initialPodList api.PodList) *MockPodsListWatch {\n> >         list:        initialPodList,\n> >     }\n> >     lw.ListWatch = cache.ListWatch{\n> > -       WatchFunc: func(resourceVersion string) (watch.Interface, error) {\n> > -       WatchFunc: func(options api.ListOptions) (watch.Interface, error) {\n> \n> Yeah, I struggle with this as well. With Delete, we said backwards\n> compatibility meant that \"nil\" was \"default\" and anything else was \"user\n> intent\". I think with list, the implicit list is \"all options defaulting\",\n> although for field and label selectors nil doesn't quite mean \"everything\"\n> (although I guess it should).\n> … <#150a7812cd53e24f_>\n> On Tue, Oct 27, 2015 at 12:10 AM, Daniel Smith notifications@github.com\n> wrote: In contrib/mesos/pkg/executor/executor_test.go <#16266 (comment)\n> https://github.com/kubernetes/kubernetes/pull/16266#discussion_r43082785>\n> : > @@ -543,7 +543,7 @@ func NewMockPodsListWatch(initialPodList\n> api.PodList) *MockPodsListWatch { > list: initialPodList, > } >\n> lw.ListWatch = cache.ListWatch{ > - WatchFunc: func(resourceVersion string)\n> (watch.Interface, error) { > + WatchFunc: func(options api.ListOptions)\n> (watch.Interface, error) { I feel like a pointer would be more natural, but\n> I can't think of a concrete reason to ask you to switch... — Reply to this\n> email directly or view it on GitHub <\n> https://github.com/kubernetes/kubernetes/pull/16266/files#r43082785>.\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/kubernetes/kubernetes/pull/16266/files#r43083036.\n",
        "createdAt" : "2015-10-27T04:31:10Z",
        "updatedAt" : "2015-10-27T04:31:10Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "d47e21f19feeb5322de51fb25ee8ce51d0e0ea1c",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +544,548 @@\t}\n\tlw.ListWatch = cache.ListWatch{\n\t\tWatchFunc: func(options api.ListOptions) (watch.Interface, error) {\n\t\t\treturn lw.fakeWatcher, nil\n\t\t},"
  },
  {
    "id" : "5551dbd7-3fc9-4a19-93b9-03fe05a8a9f0",
    "prId" : 9807,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ff247b5f-7c7d-4ffb-b51f-014889283b4b",
        "parentId" : null,
        "authorId" : "ad0a3561-db60-47a9-b82f-ac613199f968",
        "body" : "@jdef FYI I had to fix this error in Pod specification. By removing the name defaulting in pkg/kubelet/config/common.go, this test started failing.\n",
        "createdAt" : "2015-06-24T18:41:33Z",
        "updatedAt" : "2015-06-24T18:41:33Z",
        "lastEditedBy" : "ad0a3561-db60-47a9-b82f-ac613199f968",
        "tags" : [
        ]
      }
    ],
    "commit" : "d13421e084eda5d898f312b41de473984e12d84d",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +440,444 @@\t\"kind\": \"Pod\",\n\t\"metadata\": {\n\t\t\"name\": \"%v\",\n\t\t\"labels\": { \"name\": \"foo\", \"cluster\": \"bar\" }\n\t},"
  },
  {
    "id" : "0db560a1-e04f-4e4a-99dc-337567bd30cd",
    "prId" : 9807,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "999d1c98-1527-406c-b39c-d3f124b85880",
        "parentId" : null,
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "Could we just change this to v1 while we're touching it?\n",
        "createdAt" : "2015-06-25T00:35:58Z",
        "updatedAt" : "2015-06-25T00:35:58Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      }
    ],
    "commit" : "d13421e084eda5d898f312b41de473984e12d84d",
    "line" : 3,
    "diffHunk" : "@@ -1,1 +437,441 @@\t\tassert.NoError(t, err)\n\t\tspod := `{\n\t\"apiVersion\": \"v1beta3\",\n\t\"kind\": \"Pod\",\n\t\"metadata\": {"
  },
  {
    "id" : "f640503f-0191-4560-bc4e-54deafee76f2",
    "prId" : 9796,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f6c3f835-c25a-47c4-a64b-d99a9f0ef0fe",
        "parentId" : null,
        "authorId" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "body" : "Other executor tests would fail because the status here is for container \"foo\" but NewTestPod didn't actually name the container anything, so once the tests ran against the latest upstream master they would fail because of the new PodStatusFunc implementation.\n\nI just rebased mesosphere/kubernetes@master to the latest upstream. Could you re-run this test and make sure it doesn't fail similarly?\n",
        "createdAt" : "2015-06-15T14:00:20Z",
        "updatedAt" : "2015-06-16T07:08:34Z",
        "lastEditedBy" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "tags" : [
        ]
      },
      {
        "id" : "7af9ca3b-9f48-4000-9e19-097a067312e5",
        "parentId" : "f6c3f835-c25a-47c4-a64b-d99a9f0ef0fe",
        "authorId" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "body" : "see #9741 \n",
        "createdAt" : "2015-06-15T14:01:54Z",
        "updatedAt" : "2015-06-16T07:08:34Z",
        "lastEditedBy" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "tags" : [
        ]
      },
      {
        "id" : "0fb7d63b-83ec-4531-989b-9fef90477943",
        "parentId" : "f6c3f835-c25a-47c4-a64b-d99a9f0ef0fe",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "Using pod.Name instead of \"foo\" should fix the name problem. I guess with #9741 one has to add the HostIP logic here as well.\n",
        "createdAt" : "2015-06-15T14:24:41Z",
        "updatedAt" : "2015-06-16T07:08:34Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "7abe12d6f4a993f47c72f65a05583d1f7b690bcd",
    "line" : null,
    "diffHunk" : "@@ -1,1 +576,580 @@\t\t\t\tContainerStatuses: []api.ContainerStatus{\n\t\t\t\t\t{\n\t\t\t\t\t\tName: \"foo\",\n\t\t\t\t\t\tState: api.ContainerState{\n\t\t\t\t\t\t\tRunning: &api.ContainerStateRunning{},"
  }
]