[
  {
    "id" : "b1ab4951-5a65-44d9-82f2-6ecf552d6568",
    "prId" : 22500,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5a707548-b3b0-4ac3-bdca-acc3105542cb",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "Does this mean that we ignored the first argument before? \n",
        "createdAt" : "2016-03-04T15:59:42Z",
        "updatedAt" : "2016-03-04T15:59:42Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "0af8d6a9-eb0f-4c1f-92d5-af3584d90a54",
        "parentId" : "5a707548-b3b0-4ac3-bdca-acc3105542cb",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "Oh, the opposite in fact.\n",
        "createdAt" : "2016-03-04T16:00:11Z",
        "updatedAt" : "2016-03-04T16:00:11Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "728e62ef-5c5b-48f7-bd3d-d5b4c4e146eb",
        "parentId" : "5a707548-b3b0-4ac3-bdca-acc3105542cb",
        "authorId" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "body" : "related to a recent fix that went in, sorry should have xref'd it. our\nscheduler used to build poorly formed commandInfo.Arguments. I fixed it,\nwhich introduced an extra arg at the beginning. which means that we should\nignore the additional arg here (read: this wants to ignore the \"km\"\n\"minion\" args from the command line)\n\nOn Fri, Mar 4, 2016 at 11:01 AM, Dr. Stefan Schimanski <\nnotifications@github.com> wrote:\n\n> In contrib/mesos/pkg/minion/server.go\n> https://github.com/kubernetes/kubernetes/pull/22500#discussion_r55047580\n> :\n> \n> > @@ -164,7 +164,7 @@ func (ms *MinionServer) launchProxyServer() {\n> >  // executor doesn't support failover right now, the right thing to do is to fail completely since all\n> >  // pods will be lost upon restart and we want mesos to recover the resources from them.\n> >  func (ms *MinionServer) launchExecutorServer(containerID string) <-chan struct{} {\n> > -   allArgs := os.Args[1:]\n> > -   allArgs := os.Args[2:]\n> \n> Oh, the opposite in fact.\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/kubernetes/kubernetes/pull/22500/files#r55047580.\n",
        "createdAt" : "2016-03-04T16:13:52Z",
        "updatedAt" : "2016-03-04T16:13:52Z",
        "lastEditedBy" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "tags" : [
        ]
      },
      {
        "id" : "fdfeef05-3690-4945-935e-e520e11b9f87",
        "parentId" : "5a707548-b3b0-4ac3-bdca-acc3105542cb",
        "authorId" : "4be57fbb-0697-4123-9503-46e35adbceee",
        "body" : "@jdef, looks like there is still a case where arg parsing would break: if --executor-path flag set on km scheduler:\nhttps://github.com/kubernetes/kubernetes/blob/679e27c157637290075e65a45dfc0fde0a5c32d9/contrib/mesos/pkg/scheduler/service/service.go#L385\n",
        "createdAt" : "2016-03-04T18:58:35Z",
        "updatedAt" : "2016-03-04T18:58:35Z",
        "lastEditedBy" : "4be57fbb-0697-4123-9503-46e35adbceee",
        "tags" : [
        ]
      },
      {
        "id" : "636c2483-1f4f-4e35-b540-1eab1f869f83",
        "parentId" : "5a707548-b3b0-4ac3-bdca-acc3105542cb",
        "authorId" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "body" : "thanks for reviewing this change. the minion is only executable via \"km\nminion\" right now, there is no separate binary. so even if you were\nwrapping with a custom script and specifying an executor-path, you'd still\nneed to invoke \"km minion ..args\" which means that the first two command\nline args may be safely stripped. if we ever support running the \"km\nminion\" service outside of the km binary then .. yes this assumption\nbreaks. however, we have no immediate plans to support that.\n\ndoes that make sense, or am I still overlooking something?\n\nOn Fri, Mar 4, 2016 at 1:59 PM, ravilr notifications@github.com wrote:\n\n> In contrib/mesos/pkg/minion/server.go\n> https://github.com/kubernetes/kubernetes/pull/22500#discussion_r55072764\n> :\n> \n> > @@ -164,7 +164,7 @@ func (ms *MinionServer) launchProxyServer() {\n> >  // executor doesn't support failover right now, the right thing to do is to fail completely since all\n> >  // pods will be lost upon restart and we want mesos to recover the resources from them.\n> >  func (ms *MinionServer) launchExecutorServer(containerID string) <-chan struct{} {\n> > -   allArgs := os.Args[1:]\n> > -   allArgs := os.Args[2:]\n> \n> @jdef https://github.com/jdef, looks like there is still a case where\n> arg parsing would break: if --executor-path flag set on km scheduler:\n> \n> https://github.com/kubernetes/kubernetes/blob/679e27c157637290075e65a45dfc0fde0a5c32d9/contrib/mesos/pkg/scheduler/service/service.go#L385\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/kubernetes/kubernetes/pull/22500/files#r55072764.\n",
        "createdAt" : "2016-03-04T19:28:22Z",
        "updatedAt" : "2016-03-04T19:28:22Z",
        "lastEditedBy" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "tags" : [
        ]
      },
      {
        "id" : "933fe404-aab6-4a4f-a11f-f6af844e1315",
        "parentId" : "5a707548-b3b0-4ac3-bdca-acc3105542cb",
        "authorId" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "body" : "i want to clarify my previous comment: you're not required to run \"km\nminion\" in a custom executor script, you're welcome to spin up the\nkubelet-executor and kube-proxy in some custom script and totally ignore\nthe minion glue. but the minion code is where the first 2 args are stripped\nfrom the command line, and the only way to run the minion code is via \"km\nminion\"\n\nOn Fri, Mar 4, 2016 at 2:28 PM, James DeFelice james@mesosphere.io wrote:\n\n> thanks for reviewing this change. the minion is only executable via \"km\n> minion\" right now, there is no separate binary. so even if you were\n> wrapping with a custom script and specifying an executor-path, you'd still\n> need to invoke \"km minion ..args\" which means that the first two command\n> line args may be safely stripped. if we ever support running the \"km\n> minion\" service outside of the km binary then .. yes this assumption\n> breaks. however, we have no immediate plans to support that.\n> \n> does that make sense, or am I still overlooking something?\n> \n> On Fri, Mar 4, 2016 at 1:59 PM, ravilr notifications@github.com wrote:\n> \n> > In contrib/mesos/pkg/minion/server.go\n> > https://github.com/kubernetes/kubernetes/pull/22500#discussion_r55072764\n> > :\n> > \n> > > @@ -164,7 +164,7 @@ func (ms *MinionServer) launchProxyServer() {\n> > >  // executor doesn't support failover right now, the right thing to do is to fail completely since all\n> > >  // pods will be lost upon restart and we want mesos to recover the resources from them.\n> > >  func (ms *MinionServer) launchExecutorServer(containerID string) <-chan struct{} {\n> > > -  allArgs := os.Args[1:]\n> > > -  allArgs := os.Args[2:]\n> > \n> > @jdef https://github.com/jdef, looks like there is still a case where\n> > arg parsing would break: if --executor-path flag set on km scheduler:\n> > \n> > https://github.com/kubernetes/kubernetes/blob/679e27c157637290075e65a45dfc0fde0a5c32d9/contrib/mesos/pkg/scheduler/service/service.go#L385\n> > \n> > —\n> > Reply to this email directly or view it on GitHub\n> > https://github.com/kubernetes/kubernetes/pull/22500/files#r55072764.\n",
        "createdAt" : "2016-03-04T19:34:28Z",
        "updatedAt" : "2016-03-04T19:34:28Z",
        "lastEditedBy" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "tags" : [
        ]
      },
      {
        "id" : "f436894a-4a23-4f3a-998d-f7944dd86309",
        "parentId" : "5a707548-b3b0-4ac3-bdca-acc3105542cb",
        "authorId" : "4be57fbb-0697-4123-9503-46e35adbceee",
        "body" : "SGTM. \n",
        "createdAt" : "2016-03-04T19:47:48Z",
        "updatedAt" : "2016-03-04T19:47:48Z",
        "lastEditedBy" : "4be57fbb-0697-4123-9503-46e35adbceee",
        "tags" : [
        ]
      }
    ],
    "commit" : "954e25465d80f36d4e5ead6bf2d99a0c9ff3934f",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +165,169 @@// pods will be lost upon restart and we want mesos to recover the resources from them.\nfunc (ms *MinionServer) launchExecutorServer(containerID string) <-chan struct{} {\n\tallArgs := os.Args[2:]\n\n\t// filter out minion flags, leaving those for the executor"
  },
  {
    "id" : "147ae9e6-b73c-4d49-9928-b0883b76afc0",
    "prId" : 16111,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ff739479-ec3b-44bd-bc27-df0d03c7b88b",
        "parentId" : null,
        "authorId" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "body" : "the logic in this else block will execute every time we encounter an env var that's not PATH. this is probably not what we want\n",
        "createdAt" : "2015-10-24T01:49:23Z",
        "updatedAt" : "2015-11-03T10:28:10Z",
        "lastEditedBy" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "tags" : [
        ]
      },
      {
        "id" : "755f02c2-ff57-4bd3-8ba4-9e1dcbdc72ed",
        "parentId" : "ff739479-ec3b-44bd-bc27-df0d03c7b88b",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "The else-block only executes for variables which start with `PATH=`.\n",
        "createdAt" : "2015-10-24T06:09:30Z",
        "updatedAt" : "2015-11-03T10:28:10Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "f864b134-34de-478a-b4b7-57c3bf4fe785",
        "parentId" : "ff739479-ec3b-44bd-bc27-df0d03c7b88b",
        "authorId" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "body" : "you're right. i should avoid doing code reviews when I'm so tired.\n\nOn Sat, Oct 24, 2015 at 2:10 AM, Dr. Stefan Schimanski <\nnotifications@github.com> wrote:\n\n> In contrib/mesos/pkg/minion/server.go\n> https://github.com/kubernetes/kubernetes/pull/16111#discussion_r42931004\n> :\n> \n> > ```\n> > var kmEnv []string\n> > ```\n> > -   if ms.pathOverride != \"\" {\n> > -       env := os.Environ()\n> > -       kmEnv = make([]string, 0, len(env))\n> > -       for _, e := range env {\n> > -           if !strings.HasPrefix(e, \"PATH=\") {\n> > -               kmEnv = append(kmEnv, e)\n> > -   env := os.Environ()\n> > -   kmEnv = make([]string, 0, len(env))\n> > -   for _, e := range env {\n> > -       if !strings.HasPrefix(e, \"PATH=\") {\n> > -           kmEnv = append(kmEnv, e)\n> > -       } else {\n> > -           if ms.pathOverride != \"\" {\n> \n> The else-block only executes for variables which starts with PATH=.\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/kubernetes/kubernetes/pull/16111/files#r42931004.\n",
        "createdAt" : "2015-10-24T13:40:14Z",
        "updatedAt" : "2015-11-03T10:28:10Z",
        "lastEditedBy" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "tags" : [
        ]
      }
    ],
    "commit" : "8fb77ce13ef98b7cfe253fc90db4f4dc7d025743",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +215,219 @@\t\t\tkmEnv = append(kmEnv, e)\n\t\t} else {\n\t\t\tif ms.pathOverride != \"\" {\n\t\t\t\te = \"PATH=\" + ms.pathOverride\n\t\t\t}"
  },
  {
    "id" : "983110da-b90e-4719-b5f5-eda7621a306a",
    "prId" : 16111,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "92ae3fde-44e7-4162-a6e6-a6c1313c3abd",
        "parentId" : null,
        "authorId" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "body" : "dislike `Fatalf` here. would rather see a `panic` or return of some `error`\n",
        "createdAt" : "2015-11-04T14:22:10Z",
        "updatedAt" : "2015-11-04T14:22:10Z",
        "lastEditedBy" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "tags" : [
        ]
      },
      {
        "id" : "800494bc-951a-44bf-8ff8-cf64265a2172",
        "parentId" : "92ae3fde-44e7-4162-a6e6-a6c1313c3abd",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "Fixed in scheduler-refactoring branch.\n",
        "createdAt" : "2015-11-04T14:39:37Z",
        "updatedAt" : "2015-11-04T14:39:37Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "8fb77ce13ef98b7cfe253fc90db4f4dc7d025743",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +220,224 @@\t\t\tpwd, err := os.Getwd()\n\t\t\tif err != nil {\n\t\t\t\tlog.Fatalf(\"Cannot get current directory: %v\", err)\n\t\t\t}\n\t\t\tkmEnv = append(kmEnv, fmt.Sprintf(\"%s:%s\", e, path.Join(pwd, \"bin\")))"
  },
  {
    "id" : "c7a81051-d239-471d-9291-9e98ad6b08f1",
    "prId" : 13421,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "14ed46c8-f0d4-47b7-9fc0-3f55e136d493",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : ":+1:  I always have a similar patch in my local checkout\n",
        "createdAt" : "2015-09-02T10:50:24Z",
        "updatedAt" : "2015-09-04T00:52:58Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "a1cea8dd8795d5173d4a0d0dd07bc9a41b0aafd5",
    "line" : 78,
    "diffHunk" : "@@ -1,1 +318,322 @@\n\t// hack to forward log verbosity flag to the executor\n\tfs.Int32Var(&ms.logVerbosity, \"v\", ms.logVerbosity, \"log level for V logs\")\n}\n"
  },
  {
    "id" : "8b437f3a-6a1c-4385-adb3-18429bbe61f8",
    "prId" : 13362,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bdcf7106-8807-44c5-b25e-9c386df22dc8",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "Shouldn't this go into the if-clause as well?\n",
        "createdAt" : "2015-09-01T12:15:27Z",
        "updatedAt" : "2015-09-02T06:13:50Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "dba315fd-d38d-4854-8a1b-e0bddf0fe394",
        "parentId" : "bdcf7106-8807-44c5-b25e-9c386df22dc8",
        "authorId" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "body" : "no\n",
        "createdAt" : "2015-09-02T00:24:05Z",
        "updatedAt" : "2015-09-02T06:13:50Z",
        "lastEditedBy" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "tags" : [
        ]
      },
      {
        "id" : "30364990-09b0-4493-958c-c29de60ebc52",
        "parentId" : "bdcf7106-8807-44c5-b25e-9c386df22dc8",
        "authorId" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "body" : "my intent was specifically to provide `--resource-container` all the time, and only specify `--cgroup-root` when there actually was one to specify.\n",
        "createdAt" : "2015-09-02T06:01:53Z",
        "updatedAt" : "2015-09-02T06:13:50Z",
        "lastEditedBy" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "tags" : [
        ]
      }
    ],
    "commit" : "7fbd290167a898be93bc42e2ee868e6e266d1201",
    "line" : 60,
    "diffHunk" : "@@ -1,1 +154,158 @@\texecutorArgs, _ := filterArgsByFlagSet(allArgs, executorFlags)\n\n\texecutorArgs = append(executorArgs, \"--resource-container=\"+path.Join(\"/\", ms.cgroupRoot, \"kubelet\"))\n\tif ms.cgroupRoot != \"\" {\n\t\texecutorArgs = append(executorArgs, \"--cgroup-root=\"+ms.cgroupRoot)"
  },
  {
    "id" : "c76eef5f-bff8-4e2d-b054-6b5721624efa",
    "prId" : 13295,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "409757cd-a74f-4768-98e9-7ca66ed7ddf4",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "I am a bit puzzled why we need this error and task completion aggregation logic in the taskEvents interface. Here, right now we don't need it. Do we really need it for some later apiserver task completion notification? In the current state it feels very over-engineered.\n",
        "createdAt" : "2015-09-01T11:03:34Z",
        "updatedAt" : "2015-09-03T22:47:23Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "e6aaf22f-21f3-49bf-b746-a66022773828",
        "parentId" : "409757cd-a74f-4768-98e9-7ca66ed7ddf4",
        "authorId" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "body" : "came in handy for unit testing (which we didn't have at all before). this todo was just a random idea that occurred to me, something that I thought might be useful for operators at some point; there's no urgency for it.\n\ni'm pretty hesitant to eliminate the events stuff since I think it helps testability and establishes a foundation for (possibly) reporting component failure events/metrics. if it's too complex, I'm open to other ideas. the prior state of process management didn't quite compare to what s6 was offering us before. this comes much closer.\n",
        "createdAt" : "2015-09-01T20:35:46Z",
        "updatedAt" : "2015-09-03T22:47:23Z",
        "lastEditedBy" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "tags" : [
        ]
      },
      {
        "id" : "582a0fc5-f0b4-4afa-ab9e-069d94c55a0f",
        "parentId" : "409757cd-a74f-4768-98e9-7ca66ed7ddf4",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "If you abstract error and taskCompletion into some sum type (interface or struct), a lot of that logic will be trivial. No waiting groups, no code duplication. Now it's 50% of the code and it is hard to read.\n",
        "createdAt" : "2015-09-01T20:42:10Z",
        "updatedAt" : "2015-09-03T22:47:23Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "124929e373b638721d80c6f29e81c4e16adb07c7",
    "line" : null,
    "diffHunk" : "@@ -1,1 +262,266 @@\tte := tasks.MergeOutput(ms.tasks, shouldQuit)\n\n\t// TODO(jdef) do something fun here, such as reporting task completion to the apiserver\n\n\t<-te.Close().Done() // we don't listen for any specific events yet; wait for all tasks to finish"
  },
  {
    "id" : "c4f31c84-f2ec-4a81-a4de-92540d1ac832",
    "prId" : 13050,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "61c3a6ba-5184-4a05-8f7a-ff594b762674",
        "parentId" : null,
        "authorId" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "body" : "couple of thoughts:\n- avoid two calls to `os.Environ()`; DRY\n- is this worth parameterizing? for example `./km minion --ensure-path=/usr/sbin:/sbin`\n  - this would append each entry if it wasn't present in the existing PATH list\n  - flag would need to propagate from scheduler invocation\n",
        "createdAt" : "2015-08-22T04:41:55Z",
        "updatedAt" : "2015-08-27T22:57:22Z",
        "lastEditedBy" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "tags" : [
        ]
      },
      {
        "id" : "85c3e3e3-acd9-433f-aaee-c349b20b7de3",
        "parentId" : "61c3a6ba-5184-4a05-8f7a-ff594b762674",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "yes, I like the idea to use a flag. It's pretty system dependent and shouldn't be hardcoded.\n",
        "createdAt" : "2015-08-22T09:37:38Z",
        "updatedAt" : "2015-08-27T22:57:22Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "87ea8634-cb60-4578-ad60-ed086607bd56",
        "parentId" : "61c3a6ba-5184-4a05-8f7a-ff594b762674",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "I don't like the proposed magic combining the actual and given paths. The path is pretty host-dependent. If there is a need to change it, the user must know what he is doing. I implemented it as \"path-override\" for that reason, plain and explicit.\n",
        "createdAt" : "2015-08-24T13:34:17Z",
        "updatedAt" : "2015-08-27T22:57:22Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "93de28c3-ae2f-41a2-a4ca-5d592ef51ff9",
        "parentId" : "61c3a6ba-5184-4a05-8f7a-ff594b762674",
        "authorId" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "body" : ":+1: \n",
        "createdAt" : "2015-08-24T15:55:06Z",
        "updatedAt" : "2015-08-27T22:57:22Z",
        "lastEditedBy" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "tags" : [
        ]
      }
    ],
    "commit" : "cac58f6db7a71ca51eb9502642c4a62ef2260abb",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +211,215 @@\t}()\n\n\t// use given environment, but add /usr/sbin to the path for the iptables binary used in kube-proxy\n\tif ms.pathOverride != \"\" {\n\t\tenv := os.Environ()"
  },
  {
    "id" : "81c1106f-a5c5-4675-b64a-b9124bfb751b",
    "prId" : 13050,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ada8a735-fcf9-482b-861e-bfa00b171f2f",
        "parentId" : null,
        "authorId" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "body" : "nit: remove this blank line\n",
        "createdAt" : "2015-08-24T15:54:58Z",
        "updatedAt" : "2015-08-27T22:57:22Z",
        "lastEditedBy" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "tags" : [
        ]
      },
      {
        "id" : "9cd76210-d367-45a3-b8e8-9e4abce05515",
        "parentId" : "ada8a735-fcf9-482b-861e-bfa00b171f2f",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "It was intentional to separate it from the log configs.\n",
        "createdAt" : "2015-08-24T16:02:21Z",
        "updatedAt" : "2015-08-27T22:57:22Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "cac58f6db7a71ca51eb9502642c4a62ef2260abb",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +52,56 @@\n\tpathOverride string // the PATH environment for the sub-processes\n\n\tlogMaxSize      resource.Quantity\n\tlogMaxBackups   int"
  },
  {
    "id" : "47104be6-ab02-4dd0-966f-a4d493ef618e",
    "prId" : 11928,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "03f2bf07-1977-4352-a2a4-b1a9ba39f433",
        "parentId" : null,
        "authorId" : "986f56b1-61d6-4237-bc65-fb7bfea715fe",
        "body" : "Why not embed?\n",
        "createdAt" : "2015-07-30T21:33:42Z",
        "updatedAt" : "2015-07-31T10:29:21Z",
        "lastEditedBy" : "986f56b1-61d6-4237-bc65-fb7bfea715fe",
        "tags" : [
        ]
      },
      {
        "id" : "38da4db0-823e-4f60-bc94-6fba432bf903",
        "parentId" : "03f2bf07-1977-4352-a2a4-b1a9ba39f433",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "I prefer that to be explicit because it's not really clean right now to do this instantiation of `KubeletExecutorServer` at all. With a multiflags approach for the km tool, this will go away.\n",
        "createdAt" : "2015-07-31T09:09:49Z",
        "updatedAt" : "2015-07-31T10:29:21Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "c4d6f75e35be7d84630df141e3efafab6f06ba69",
    "line" : null,
    "diffHunk" : "@@ -1,1 +41,45 @@\t// embed the executor server to be able to use its flags\n\t// TODO(sttts): get rid of this mixing of the minion and the executor server with a multiflags implementation for km\n\tKubeletExecutorServer *exservice.KubeletExecutorServer\n\n\tprivateMountNS bool"
  },
  {
    "id" : "88ab6c57-c293-44c7-afc5-28657fafcce7",
    "prId" : 11928,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1be6aae8-d5c5-4c74-836e-8541acc8217d",
        "parentId" : null,
        "authorId" : "986f56b1-61d6-4237-bc65-fb7bfea715fe",
        "body" : "Comments please.\n",
        "createdAt" : "2015-07-30T21:34:20Z",
        "updatedAt" : "2015-07-31T10:29:21Z",
        "lastEditedBy" : "986f56b1-61d6-4237-bc65-fb7bfea715fe",
        "tags" : [
        ]
      }
    ],
    "commit" : "c4d6f75e35be7d84630df141e3efafab6f06ba69",
    "line" : null,
    "diffHunk" : "@@ -1,1 +60,64 @@\n// NewMinionServer creates the MinionServer struct with default values to be used by hyperkube\nfunc NewMinionServer() *MinionServer {\n\ts := &MinionServer{\n\t\tKubeletExecutorServer: exservice.NewKubeletExecutorServer(),"
  },
  {
    "id" : "96f7f361-b465-423e-a329-a421b869743d",
    "prId" : 11928,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c463cd45-d075-477d-9c9f-29a1931ea552",
        "parentId" : null,
        "authorId" : "986f56b1-61d6-4237-bc65-fb7bfea715fe",
        "body" : "`close(ms.exit)`?\n",
        "createdAt" : "2015-07-30T21:36:50Z",
        "updatedAt" : "2015-07-31T10:29:21Z",
        "lastEditedBy" : "986f56b1-61d6-4237-bc65-fb7bfea715fe",
        "tags" : [
        ]
      },
      {
        "id" : "a8a1d431-7945-41f0-a18d-29e65e3d0a65",
        "parentId" : "c463cd45-d075-477d-9c9f-29a1931ea552",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "added a comment. Closing ms.exit leads to panics for the go routines writing to it. We had that before and changed it.\n",
        "createdAt" : "2015-07-31T09:15:54Z",
        "updatedAt" : "2015-07-31T10:29:21Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "c4d6f75e35be7d84630df141e3efafab6f06ba69",
    "line" : 138,
    "diffHunk" : "@@ -1,1 +136,140 @@\n\tlog.Info(\"Executor exited cleanly, stopping the minion\")\n\tms.exit <- nil\n}\n"
  },
  {
    "id" : "0922928b-897a-41e3-89a2-c6a392ce3ccb",
    "prId" : 11928,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d4622143-841f-43ff-8591-d258645a0cdf",
        "parentId" : null,
        "authorId" : "986f56b1-61d6-4237-bc65-fb7bfea715fe",
        "body" : "`defer close(ms.done)`\n",
        "createdAt" : "2015-07-30T21:40:11Z",
        "updatedAt" : "2015-07-31T10:29:21Z",
        "lastEditedBy" : "986f56b1-61d6-4237-bc65-fb7bfea715fe",
        "tags" : [
        ]
      },
      {
        "id" : "743c576d-5f61-43c2-b003-d6593a6e7fe8",
        "parentId" : "d4622143-841f-43ff-8591-d258645a0cdf",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "done\n",
        "createdAt" : "2015-07-31T09:16:49Z",
        "updatedAt" : "2015-07-31T10:29:21Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "c4d6f75e35be7d84630df141e3efafab6f06ba69",
    "line" : 227,
    "diffHunk" : "@@ -1,1 +225,229 @@// runs the main kubelet loop, closing the kubeletFinished chan when the loop exits.\n// never returns.\nfunc (ms *MinionServer) Run(hks hyperkube.Interface, _ []string) error {\n\tif ms.privateMountNS {\n\t\t// only the Linux version will do anything"
  }
]