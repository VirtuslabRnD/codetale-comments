[
  {
    "id" : "95d2fe3e-f9fc-422c-86c2-6b2d18aeb424",
    "prId" : 2224,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0f180a85-5158-4e60-9648-92d2a5d71c14",
        "parentId" : null,
        "authorId" : "9d07de69-76c2-43bd-9590-55d9aded200d",
        "body" : "Why do you ignore the error return value?\n",
        "createdAt" : "2014-11-16T06:19:07Z",
        "updatedAt" : "2014-12-29T17:18:18Z",
        "lastEditedBy" : "9d07de69-76c2-43bd-9590-55d9aded200d",
        "tags" : [
        ]
      },
      {
        "id" : "9e375497-ccc9-4f5f-8129-3579bf25ae16",
        "parentId" : "0f180a85-5158-4e60-9648-92d2a5d71c14",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "done\n",
        "createdAt" : "2014-11-17T04:16:40Z",
        "updatedAt" : "2014-12-29T17:18:18Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "32a59477a5a39647bd6519446a393fb02c9bf95e",
    "line" : 56,
    "diffHunk" : "@@ -1,1 +54,58 @@\t\tTtl:      30,\n\t}\n\tb, err := json.Marshal(svc)\n\tif err != nil {\n\t\treturn err"
  },
  {
    "id" : "d931d686-ea21-43ca-8624-9c6d12bf9f62",
    "prId" : 2224,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a8e9b589-f828-444e-ae88-d2dcda835d78",
        "parentId" : null,
        "authorId" : "9d07de69-76c2-43bd-9590-55d9aded200d",
        "body" : "Rather than returning nil when there is an error, why not return a separate error value that explains what went wrong?\n",
        "createdAt" : "2014-11-16T06:22:00Z",
        "updatedAt" : "2014-12-29T17:18:18Z",
        "lastEditedBy" : "9d07de69-76c2-43bd-9590-55d9aded200d",
        "tags" : [
        ]
      },
      {
        "id" : "f9d1fa94-242e-4221-9875-988183f41c7d",
        "parentId" : "a8e9b589-f828-444e-ae88-d2dcda835d78",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "Because I don't know what could go wrong - this function does not return error info.\n",
        "createdAt" : "2014-11-17T04:18:13Z",
        "updatedAt" : "2014-12-29T17:18:18Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "32a59477a5a39647bd6519446a393fb02c9bf95e",
    "line" : 67,
    "diffHunk" : "@@ -1,1 +65,69 @@}\n\nfunc newEtcdClient() (client *etcd.Client) {\n\t// TODO: take a flag for etcd server(s).\n\tclient = etcd.NewClient([]string{\"http://127.0.0.1:4001\"})"
  },
  {
    "id" : "1a83277d-0c8a-482a-99db-129a0626576d",
    "prId" : 2224,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0220d927-0e3c-45c4-8524-1f9bbff6a9d6",
        "parentId" : null,
        "authorId" : "9d07de69-76c2-43bd-9590-55d9aded200d",
        "body" : "It is not idiomatic Go to have ALL CAPS constants. Consider:\n\n```\nconst (\n    Set operation = iota\n    Add\n    Remove\n)\n```\n",
        "createdAt" : "2014-11-16T06:23:30Z",
        "updatedAt" : "2014-12-29T17:18:18Z",
        "lastEditedBy" : "9d07de69-76c2-43bd-9590-55d9aded200d",
        "tags" : [
        ]
      },
      {
        "id" : "9044f736-df00-4a24-8d91-9825b28421f8",
        "parentId" : "0220d927-0e3c-45c4-8524-1f9bbff6a9d6",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "OK (though I cribbed this from other k8s code :)\n",
        "createdAt" : "2014-11-17T04:19:47Z",
        "updatedAt" : "2014-12-29T17:18:18Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "32a59477a5a39647bd6519446a393fb02c9bf95e",
    "line" : null,
    "diffHunk" : "@@ -1,1 +172,176 @@\tAddService\n\tRemoveService\n)\n\n// serviceUpdate describes an operation of services, sent on the channel."
  },
  {
    "id" : "c5b1fdae-4c43-4ebe-b5c3-572a3f33563f",
    "prId" : 2224,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "892dc7a4-e9c1-423e-a769-91d2ac19f1e7",
        "parentId" : null,
        "authorId" : "9d07de69-76c2-43bd-9590-55d9aded200d",
        "body" : "return?\n",
        "createdAt" : "2014-11-16T06:25:16Z",
        "updatedAt" : "2014-12-29T17:18:18Z",
        "lastEditedBy" : "9d07de69-76c2-43bd-9590-55d9aded200d",
        "tags" : [
        ]
      },
      {
        "id" : "b43d475f-96b9-45c7-94dd-2ba7f7e2fc37",
        "parentId" : "892dc7a4-e9c1-423e-a769-91d2ac19f1e7",
        "authorId" : "a836fbea-a82d-4888-b541-a4fa442a7d2c",
        "body" : "return doesn't make sense here.  That would break the loop.  One bad event shouldn't kill the program.\n",
        "createdAt" : "2014-11-16T15:34:41Z",
        "updatedAt" : "2014-12-29T17:18:18Z",
        "lastEditedBy" : "a836fbea-a82d-4888-b541-a4fa442a7d2c",
        "tags" : [
        ]
      },
      {
        "id" : "186501c3-0f43-478f-a37b-2ac4870973b9",
        "parentId" : "892dc7a4-e9c1-423e-a769-91d2ac19f1e7",
        "authorId" : "9d07de69-76c2-43bd-9590-55d9aded200d",
        "body" : "Ack. My question mark was there since I was unsure about what was going on :-)\n",
        "createdAt" : "2014-11-16T17:57:16Z",
        "updatedAt" : "2014-12-29T17:18:18Z",
        "lastEditedBy" : "9d07de69-76c2-43bd-9590-55d9aded200d",
        "tags" : [
        ]
      },
      {
        "id" : "80063d07-c2e6-428c-b93b-09fa9221e71c",
        "parentId" : "892dc7a4-e9c1-423e-a769-91d2ac19f1e7",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "If return makes no sense, then Fatalf makes less sense (it kills the program).\n",
        "createdAt" : "2014-11-17T18:25:05Z",
        "updatedAt" : "2014-12-29T17:18:18Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "8c8d2594-7a84-4492-9bd0-7bc7077919c2",
        "parentId" : "892dc7a4-e9c1-423e-a769-91d2ac19f1e7",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "I consider this an edge case I would want to know about.\nOn Nov 17, 2014 10:25 AM, \"Daniel Smith\" notifications@github.com wrote:\n\n> In contrib/dns/kube2sky/kube2sky.go:\n> \n> > +\n> > -   ch := watcher.ResultChan()\n> > -   for {\n> > -       select {\n> > -       case event, ok := <-ch:\n> > -           if !ok {\n> > -               log.Printf(\"watchLoop channel closed\")\n> > -               return\n> > -           }\n> >   +\n> > -           if event.Type == kwatch.Error {\n> > -               if status, ok := event.Object.(*kapi.Status); ok {\n> > -                   log.Printf(\"Error during watch: %#v\", status)\n> > -                   return\n> > -               }\n> > -               log.Fatalf(\"Received unexpected error: %#v\", event.Object)\n> \n> If return makes no sense, then Fatalf makes less sense (it kills the\n> program).\n> \n> ## \n> \n> Reply to this email directly or view it on GitHub\n> https://github.com/GoogleCloudPlatform/kubernetes/pull/2224/files#r20453476\n> .\n",
        "createdAt" : "2014-11-17T18:26:38Z",
        "updatedAt" : "2014-12-29T17:18:18Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "32a59477a5a39647bd6519446a393fb02c9bf95e",
    "line" : 230,
    "diffHunk" : "@@ -1,1 +228,232 @@\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tlog.Fatalf(\"Received unexpected error: %#v\", event.Object)\n\t\t\t}\n"
  },
  {
    "id" : "a0aa5578-0ce8-47e4-9e1f-c143d7e6b515",
    "prId" : 2224,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f27e7524-d8fd-4b88-81a1-fa5f89369b99",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "// TODO: use pkg/client/clientcmd\n\nhttps://github.com/GoogleCloudPlatform/kubernetes/blob/master/pkg/client/clientcmd/doc.go\n",
        "createdAt" : "2014-12-24T00:39:21Z",
        "updatedAt" : "2014-12-29T17:18:18Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "92c40fa6-1253-4da0-9d21-7569d0397569",
        "parentId" : "f27e7524-d8fd-4b88-81a1-fa5f89369b99",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Actually, nvm. I'm not sure if that would improve this code for your use case.\n",
        "createdAt" : "2014-12-24T00:40:27Z",
        "updatedAt" : "2014-12-29T17:18:18Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "eaad4cc0-57fb-4c60-a62d-6bffc0ee3799",
        "parentId" : "f27e7524-d8fd-4b88-81a1-fa5f89369b99",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "TODO added\n",
        "createdAt" : "2014-12-24T00:41:13Z",
        "updatedAt" : "2014-12-29T17:18:18Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "32a59477a5a39647bd6519446a393fb02c9bf95e",
    "line" : null,
    "diffHunk" : "@@ -1,1 +77,81 @@\n// TODO: evaluate using pkg/client/clientcmd\nfunc newKubeClient() (*kclient.Client, error) {\n\tconfig := &kclient.Config{}\n"
  }
]