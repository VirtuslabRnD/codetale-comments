[
  {
    "id" : "08c473fa-38f7-49d0-afd5-b3218ebec509",
    "prId" : 25269,
    "prUrl" : "https://github.com/ansible/ansible/pull/25269#pullrequestreview-41863286",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "042a214f-83e7-43c9-965a-947cd7f0fa08",
        "parentId" : null,
        "authorId" : "7ee8bdbb-ea26-4fe9-8adc-0173e0b50738",
        "body" : "Why?",
        "createdAt" : "2017-06-02T16:26:17Z",
        "updatedAt" : "2017-06-08T18:16:35Z",
        "lastEditedBy" : "7ee8bdbb-ea26-4fe9-8adc-0173e0b50738",
        "tags" : [
        ]
      },
      {
        "id" : "f2ce49f2-3391-449a-9329-95b280485e4f",
        "parentId" : "042a214f-83e7-43c9-965a-947cd7f0fa08",
        "authorId" : "fe79ed7f-657f-4f3b-bb1f-8664ed1ce736",
        "body" : "When you query the API with a search filter, \"total\" still gives you the total number of objects (hosts for example) that you would get without the search filter.\r\n\r\n\"subtotal\" gives you the number of objects that are returned with the search filter applied. If there was no search filter, it's equal to \"total\". Without this change, you get this warning: \"Did not make any progress during loop.\"\r\n\r\nhttps://access.redhat.com/documentation/en-us/red_hat_satellite/6.2/html-single/api_guide/\r\ntotal — The total number of objects without any search parameters.\r\nsubtotal — The number of objects returned with the given search parameters (if there is no search, then subtotal is equal to total).\r\n",
        "createdAt" : "2017-06-02T19:24:22Z",
        "updatedAt" : "2017-06-08T18:16:35Z",
        "lastEditedBy" : "fe79ed7f-657f-4f3b-bb1f-8664ed1ce736",
        "tags" : [
        ]
      }
    ],
    "commit" : "3e5ee0f65c448e6c67fec142d2dec44e8c4f9ee9",
    "line" : 63,
    "diffHunk" : "@@ -1,1 +177,181 @@            # List of all hosts is returned paginaged\n            results = results + json['results']\n            if len(results) >= json['subtotal']:\n                break\n            page += 1"
  },
  {
    "id" : "2fe37025-0d90-45ab-9942-d5385788d9b7",
    "prId" : 62438,
    "prUrl" : "https://github.com/ansible/ansible/pull/62438#pullrequestreview-298837401",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a3b7f084-b2b6-45f2-b864-6b46534f9978",
        "parentId" : null,
        "authorId" : "632ea1fb-d5d7-48d5-8511-c09c6de190c8",
        "body" : "Interesting approach. I was thinking about catching a 404 on the `schedule_report`.",
        "createdAt" : "2019-10-08T15:08:35Z",
        "updatedAt" : "2019-11-25T14:50:15Z",
        "lastEditedBy" : "632ea1fb-d5d7-48d5-8511-c09c6de190c8",
        "tags" : [
        ]
      }
    ],
    "commit" : "867728c454e73d4b7ecb5dd1a42bce6d2744a69e",
    "line" : 95,
    "diffHunk" : "@@ -1,1 +267,271 @@        return results\n\n    def _use_inventory_report(self):\n        if not self.foreman_use_reports_api:\n            return False"
  },
  {
    "id" : "224d92b2-78d7-4817-8547-e3cca0124a5e",
    "prId" : 62438,
    "prUrl" : "https://github.com/ansible/ansible/pull/62438#pullrequestreview-298837401",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4c73ec62-3305-4db9-b229-5dc05d520fc2",
        "parentId" : null,
        "authorId" : "632ea1fb-d5d7-48d5-8511-c09c6de190c8",
        "body" : "It'd also be good to verify the response code is 201 (which I assume it actually returns). If the plugin is not installed, it will still return a 404.",
        "createdAt" : "2019-10-08T15:09:15Z",
        "updatedAt" : "2019-11-25T14:50:15Z",
        "lastEditedBy" : "632ea1fb-d5d7-48d5-8511-c09c6de190c8",
        "tags" : [
        ]
      }
    ],
    "commit" : "867728c454e73d4b7ecb5dd1a42bce6d2744a69e",
    "line" : 125,
    "diffHunk" : "@@ -1,1 +297,301 @@        session = self._get_session()\n        params = {'input_values': self._fetch_params()}\n        ret = session.post(url, json=params)\n        if not ret:\n            raise Exception(\"Error scheduling inventory report on foreman. Please check foreman logs!\")"
  },
  {
    "id" : "338b470a-d43c-4c79-9f10-5b5558babef8",
    "prId" : 62438,
    "prUrl" : "https://github.com/ansible/ansible/pull/62438#pullrequestreview-315661626",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fb9157de-ba4b-471a-91d1-b652af8c3550",
        "parentId" : null,
        "authorId" : "632ea1fb-d5d7-48d5-8511-c09c6de190c8",
        "body" : "```suggestion\r\n            groupby = {k: self.to_safe(to_text(v)) for k, v in params.items()}\r\n```",
        "createdAt" : "2019-10-08T15:17:39Z",
        "updatedAt" : "2019-11-25T14:50:16Z",
        "lastEditedBy" : "632ea1fb-d5d7-48d5-8511-c09c6de190c8",
        "tags" : [
        ]
      },
      {
        "id" : "9eaf8f38-0ebd-46c7-bab1-3a62bcbd59e6",
        "parentId" : "fb9157de-ba4b-471a-91d1-b652af8c3550",
        "authorId" : "99438352-2fc7-4b3c-944a-4654bec0386d",
        "body" : "I tried doing this and even though this works for me with python 3.6 , the CI isn't happy with this on python 2.6 and throws an error. ",
        "createdAt" : "2019-11-06T05:55:46Z",
        "updatedAt" : "2019-11-25T14:50:16Z",
        "lastEditedBy" : "99438352-2fc7-4b3c-944a-4654bec0386d",
        "tags" : [
        ]
      },
      {
        "id" : "2729f73f-2f51-44d6-b050-a71274da0b65",
        "parentId" : "fb9157de-ba4b-471a-91d1-b652af8c3550",
        "authorId" : "632ea1fb-d5d7-48d5-8511-c09c6de190c8",
        "body" : "Oh yes, 2.6 didn't have dict comprehensions. Do we still need to care about that? setup.py indicates only 2.7 should be supported.",
        "createdAt" : "2019-11-11T17:46:39Z",
        "updatedAt" : "2019-11-25T14:50:16Z",
        "lastEditedBy" : "632ea1fb-d5d7-48d5-8511-c09c6de190c8",
        "tags" : [
        ]
      },
      {
        "id" : "985f83bb-4b40-46f0-8f51-d40a7a7c025c",
        "parentId" : "fb9157de-ba4b-471a-91d1-b652af8c3550",
        "authorId" : "99438352-2fc7-4b3c-944a-4654bec0386d",
        "body" : "The CI has tests around versions which fail in 2.6..",
        "createdAt" : "2019-11-12T16:19:46Z",
        "updatedAt" : "2019-11-25T14:50:16Z",
        "lastEditedBy" : "99438352-2fc7-4b3c-944a-4654bec0386d",
        "tags" : [
        ]
      }
    ],
    "commit" : "867728c454e73d4b7ecb5dd1a42bce6d2744a69e",
    "line" : 208,
    "diffHunk" : "@@ -1,1 +446,450 @@            # Ansible groups by parameters in host groups and Foreman host\n            # attributes.\n            groupby = dict()\n            for k, v in params.items():\n                groupby[k] = self.to_safe(to_text(v))"
  },
  {
    "id" : "d4ab2a83-4d3c-4617-abc9-acc7baacf4d2",
    "prId" : 62438,
    "prUrl" : "https://github.com/ansible/ansible/pull/62438#pullrequestreview-315472114",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "de42d930-158d-4c04-81d7-fc06dcd49fba",
        "parentId" : null,
        "authorId" : "632ea1fb-d5d7-48d5-8511-c09c6de190c8",
        "body" : "TIL you can index a tuple with a boolean:\r\n```\r\nIn [1]: (\"no\", \"yes\")[True]                                                                                                                                                           \r\nOut[1]: 'yes'\r\n```\r\n\r\nI do wonder if we can get the report to accept real booleans since they're JSON encoded.",
        "createdAt" : "2019-11-12T11:39:26Z",
        "updatedAt" : "2019-11-25T14:50:16Z",
        "lastEditedBy" : "632ea1fb-d5d7-48d5-8511-c09c6de190c8",
        "tags" : [
        ]
      }
    ],
    "commit" : "867728c454e73d4b7ecb5dd1a42bce6d2744a69e",
    "line" : 105,
    "diffHunk" : "@@ -1,1 +277,281 @@    def _fetch_params(self):\n        options, params = (\"no\", \"yes\"), dict()\n        params[\"Organization\"] = options[self.want_organization]\n        params[\"Location\"] = options[self.want_location]\n        params[\"IPv4\"] = options[self.want_IPv4]"
  }
]