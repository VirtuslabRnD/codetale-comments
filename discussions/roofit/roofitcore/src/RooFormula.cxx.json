[
  {
    "id" : "36622255-ea3f-455f-938c-6a49eb577e7d",
    "prId" : 5413,
    "prUrl" : "https://github.com/root-project/root/pull/5413#pullrequestreview-397424566",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "957855c8-97c5-4fd7-b1c4-708fb89fff0d",
        "parentId" : null,
        "authorId" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "body" : "Axel's guideline was to _also_ mark these kind of functions `static`, I think to help older compilers",
        "createdAt" : "2020-04-21T15:11:19Z",
        "updatedAt" : "2020-04-22T12:50:51Z",
        "lastEditedBy" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "tags" : [
        ]
      }
    ],
    "commit" : "f9dd31d875ea8370eb3a5641f4d138fcd0312d34",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +75,79 @@/// Find all input arguments which are categories, and save this information in\n/// with the names of the variables that are being used to evaluate it.\nstd::vector<bool> findCategoryServers(const RooAbsCollection& collection) {\n  std::vector<bool> output;\n  output.reserve(collection.size());"
  },
  {
    "id" : "3311db74-28cd-40de-b820-1ad349305884",
    "prId" : 5413,
    "prUrl" : "https://github.com/root-project/root/pull/5413#pullrequestreview-397424566",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "512262ae-7b3e-414c-9b21-0b4a067aa588",
        "parentId" : null,
        "authorId" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "body" : "```suggestion\r\n  std::vector<bool> output;\r\n  output.reserve(collection.size());\r\n```",
        "createdAt" : "2020-04-21T15:12:00Z",
        "updatedAt" : "2020-04-22T12:50:51Z",
        "lastEditedBy" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "tags" : [
        ]
      }
    ],
    "commit" : "f9dd31d875ea8370eb3a5641f4d138fcd0312d34",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +76,80 @@/// with the names of the variables that are being used to evaluate it.\nstd::vector<bool> findCategoryServers(const RooAbsCollection& collection) {\n  std::vector<bool> output;\n  output.reserve(collection.size());\n"
  },
  {
    "id" : "2bc61a7b-950d-4e5a-b5fa-d7154e18da2f",
    "prId" : 5413,
    "prUrl" : "https://github.com/root-project/root/pull/5413#pullrequestreview-398033504",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fc9587ea-266b-41af-859f-f60bc1ba89d5",
        "parentId" : null,
        "authorId" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "body" : "this is a potentially breaking change. I realize chances of someone catching this exception might be vanishingly small, but still, why the change?",
        "createdAt" : "2020-04-21T15:14:15Z",
        "updatedAt" : "2020-04-22T12:50:51Z",
        "lastEditedBy" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "tags" : [
        ]
      },
      {
        "id" : "2c3930f6-d804-45d4-a2cc-fff8482298d1",
        "parentId" : "fc9587ea-266b-41af-859f-f60bc1ba89d5",
        "authorId" : "ec1903c5-44e7-4fb1-bee9-25de61836fba",
        "body" : "There was no prior throw, so I made it a bit more logical, since the invalid formula is invalid state, not an argument.",
        "createdAt" : "2020-04-22T09:59:40Z",
        "updatedAt" : "2020-04-22T12:50:51Z",
        "lastEditedBy" : "ec1903c5-44e7-4fb1-bee9-25de61836fba",
        "tags" : [
        ]
      }
    ],
    "commit" : "f9dd31d875ea8370eb3a5641f4d138fcd0312d34",
    "line" : 128,
    "diffHunk" : "@@ -1,1 +344,348 @@    what += GetTitle();\n    what += \" didn't compile.\";\n    throw std::runtime_error(what);\n  }\n"
  },
  {
    "id" : "6f95bab3-18c4-4898-86c2-43830fb5a9c1",
    "prId" : 5413,
    "prUrl" : "https://github.com/root-project/root/pull/5413#pullrequestreview-397424566",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7f427f48-c64c-44b9-83d9-6cb79b00002e",
        "parentId" : null,
        "authorId" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "body" : "a comment above the `if` that explains what you are looking for might help readers a lot. \r\n\r\nMy understanding of the code: I think you are checking that `theFormula` either has 1 variable or all variables have form `x[...]`. I must be missing something",
        "createdAt" : "2020-04-21T15:33:53Z",
        "updatedAt" : "2020-04-22T12:50:51Z",
        "lastEditedBy" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "tags" : [
        ]
      }
    ],
    "commit" : "f9dd31d875ea8370eb3a5641f4d138fcd0312d34",
    "line" : 159,
    "diffHunk" : "@@ -1,1 +449,453 @@  }\n\n  if (theFormula && theFormula->GetNdim() != 1) {\n    // TFormula thinks that we have a multi-dimensional formula, e.g. with variables x,y,z,t.\n    // We have to check now that this is not the case, as RooFit only uses the syntax x[0], x[1], x[2], ..."
  }
]