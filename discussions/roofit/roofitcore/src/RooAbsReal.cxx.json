[
  {
    "id" : "1a0564a8-bb94-497f-be51-c92011f42fd7",
    "prId" : 6178,
    "prUrl" : "https://github.com/root-project/root/pull/6178#pullrequestreview-466642473",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7f2f876d-664e-4170-bdf5-db004518973a",
        "parentId" : null,
        "authorId" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "body" : "```suggestion\r\n        << \" If it is part of ROOT, consider requesting this on https://sft.its.cern.ch/jira/projects/ROOT.\" << std::endl;\r\n```",
        "createdAt" : "2020-08-13T10:30:50Z",
        "updatedAt" : "2020-08-13T10:31:50Z",
        "lastEditedBy" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "tags" : [
        ]
      },
      {
        "id" : "10825f0c-7f76-4315-a3a3-8a08a8c34bde",
        "parentId" : "7f2f876d-664e-4170-bdf5-db004518973a",
        "authorId" : "ec1903c5-44e7-4fb1-bee9-25de61836fba",
        "body" : "I feared that the github issues migration would make this obsolete too fast. Opinions?",
        "createdAt" : "2020-08-13T10:33:04Z",
        "updatedAt" : "2020-08-13T10:33:04Z",
        "lastEditedBy" : "ec1903c5-44e7-4fb1-bee9-25de61836fba",
        "tags" : [
        ]
      },
      {
        "id" : "bcd01496-9a62-4a64-9a9d-7b4de0eed213",
        "parentId" : "7f2f876d-664e-4170-bdf5-db004518973a",
        "authorId" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "body" : "imo you are right :D",
        "createdAt" : "2020-08-13T10:36:53Z",
        "updatedAt" : "2020-08-13T10:36:54Z",
        "lastEditedBy" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "tags" : [
        ]
      }
    ],
    "commit" : "4d0f855a588957d4ac7273b5588d4563aa9ae196",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +4878,4882 @@  if (RooMsgService::instance().isActive(this, RooFit::Optimization, RooFit::INFO)) {\n    coutI(Optimization) << \"The class \" << IsA()->GetName() << \" could benefit from implementing the faster batch evaluation interface.\"\n        << \" If it is part of ROOT, consider requesting this on https://root.cern.\" << std::endl;\n  }\n"
  },
  {
    "id" : "cc5c497c-603b-4394-818d-e304a79d771e",
    "prId" : 6841,
    "prUrl" : "https://github.com/root-project/root/pull/6841#pullrequestreview-536371920",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "118cab38-a456-4177-ad52-8fa7d18da771",
        "parentId" : null,
        "authorId" : "ec1903c5-44e7-4fb1-bee9-25de61836fba",
        "body" : "Trying to make as many helpers `const` as possible, one would write:\r\n```c++\r\nconst std::size_t dataSize = std::max_element(leafValues.begin(), leafValues.end(),\r\n    [](const RooSpan<const double>& span){ return span.size(); } )->size();\r\n```\r\nThis requires probably `#include <algorithm>`, and maybe it's `RooSpan<double>`. I leave it to you to decide if that's readable enough to use it here.",
        "createdAt" : "2020-11-23T11:16:36Z",
        "updatedAt" : "2020-11-23T12:56:31Z",
        "lastEditedBy" : "ec1903c5-44e7-4fb1-bee9-25de61836fba",
        "tags" : [
        ]
      }
    ],
    "commit" : "8eaa3fc6dc8e1f6fc9d46f7c10e834a7a23d3dbf",
    "line" : 135,
    "diffHunk" : "@@ -1,1 +4950,4954 @@  for (auto& i:leafValues) {\n    dataSize=std::max(dataSize, i.size());\n  }\n  auto outputData = evalData.makeBatch(this, dataSize);\n"
  }
]