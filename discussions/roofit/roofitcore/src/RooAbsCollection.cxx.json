[
  {
    "id" : "8c1ff35c-cccd-4738-9a61-7fbbbd077d49",
    "prId" : 5718,
    "prUrl" : "https://github.com/root-project/root/pull/5718#pullrequestreview-420022373",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b33d7acb-9e36-44ad-a79b-261aa359db5d",
        "parentId" : null,
        "authorId" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "body" : "the switch from `if(clone2)` to `assert(clone2)` is a change in behavior, is it intentional?",
        "createdAt" : "2020-05-28T08:25:21Z",
        "updatedAt" : "2020-05-28T11:17:09Z",
        "lastEditedBy" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "tags" : [
        ]
      },
      {
        "id" : "0fe39f1a-7661-4cac-b8be-18002f78411d",
        "parentId" : "b33d7acb-9e36-44ad-a79b-261aa359db5d",
        "authorId" : "ec1903c5-44e7-4fb1-bee9-25de61836fba",
        "body" : "Yes, the variable should always clone, and therefore, was always added. The `if` was therefore unnecessary at best, likely even confusing. To assert the assumption that a `Clone` in ROOT will not return `nullptr` (not aware that ROOT would do this anywhere), I left an `assert` in place. Makes sense?",
        "createdAt" : "2020-05-28T10:55:51Z",
        "updatedAt" : "2020-05-28T11:20:26Z",
        "lastEditedBy" : "ec1903c5-44e7-4fb1-bee9-25de61836fba",
        "tags" : [
        ]
      },
      {
        "id" : "5db0d147-e118-4add-865c-72d1b6836d96",
        "parentId" : "b33d7acb-9e36-44ad-a79b-261aa359db5d",
        "authorId" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "body" : "yes, thanks",
        "createdAt" : "2020-05-28T11:38:15Z",
        "updatedAt" : "2020-05-28T11:38:15Z",
        "lastEditedBy" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "tags" : [
        ]
      }
    ],
    "commit" : "bdc3c166959d89e4c4f2c6316b795ff62ff9e7fc",
    "line" : 98,
    "diffHunk" : "@@ -1,1 +419,423 @@  // add a pointer to a clone of this variable to our list (we now own it!)\n  auto clone2 = static_cast<RooAbsArg*>(var.Clone());\n  assert(clone2);\n\n  insert(clone2);"
  },
  {
    "id" : "10849bda-4ef1-4974-b79a-09b985f92d55",
    "prId" : 5718,
    "prUrl" : "https://github.com/root-project/root/pull/5718#pullrequestreview-419996035",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a2475ce1-79e8-4599-8f7b-108345d1fd8c",
        "parentId" : null,
        "authorId" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "body" : "so the output of `tryFastFind` can be that `_nameToItemMap` is updated to have the element with `namePtr`, but the function returns nullptr anyway..? i.e. I would expect a `return arg` here",
        "createdAt" : "2020-05-28T08:37:10Z",
        "updatedAt" : "2020-05-28T11:17:09Z",
        "lastEditedBy" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "tags" : [
        ]
      },
      {
        "id" : "9a4d924c-9219-4bc8-abde-efbe522f651c",
        "parentId" : "a2475ce1-79e8-4599-8f7b-108345d1fd8c",
        "authorId" : "ec1903c5-44e7-4fb1-bee9-25de61836fba",
        "body" : "Good catch, thanks!\r\nIt will still work, but it's now doing a linear search twice.",
        "createdAt" : "2020-05-28T10:57:25Z",
        "updatedAt" : "2020-05-28T11:17:09Z",
        "lastEditedBy" : "ec1903c5-44e7-4fb1-bee9-25de61836fba",
        "tags" : [
        ]
      }
    ],
    "commit" : "bdc3c166959d89e4c4f2c6316b795ff62ff9e7fc",
    "line" : 332,
    "diffHunk" : "@@ -1,1 +1351,1355 @@        (*_nameToItemMap)[arg->namePtr()] = arg;\n        return arg;\n      }\n    }\n  }"
  }
]