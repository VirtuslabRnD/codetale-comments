[
  {
    "id" : "3e8905ed-1c89-43bd-9882-e5319fc59111",
    "prId" : 7439,
    "prUrl" : "https://github.com/root-project/root/pull/7439#pullrequestreview-609788708",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "de3a7c40-09b2-4251-b40c-082a2fca6702",
        "parentId" : null,
        "authorId" : "080bddae-e637-45c8-b6c1-53aef7161d62",
        "body" : "What is the reason for keeping the `RooArgSet` version? Will the function with `RooAbsCollection` not accept a `RooArgSet` too because `RooAbsCollection` is the base class?\r\n\r\nI guess you did this out of caution to not change the existing interface?",
        "createdAt" : "2021-03-10T20:49:12Z",
        "updatedAt" : "2021-03-11T13:03:15Z",
        "lastEditedBy" : "080bddae-e637-45c8-b6c1-53aef7161d62",
        "tags" : [
        ]
      },
      {
        "id" : "7de54773-4de4-4fed-abfb-98e31312651b",
        "parentId" : "de3a7c40-09b2-4251-b40c-082a2fca6702",
        "authorId" : "ec1903c5-44e7-4fb1-bee9-25de61836fba",
        "body" : "I don't know. :-) That commit was a while ago, and nobody reviewed it since ...\r\n\r\nI *think* it's because you can do an implicit conversion of\r\n```c++\r\ngetIndex((RooRealVar)x);\r\n```\r\nto a RooArgSet, and this is unfortunately in use out there in the world. Now, since you cannot create a temporary `RooAbsCollection`, those instances will break, unless this overload is provided.\r\nI'll check if that was the case, and then update the docs. Should I also hide it from doxygen to keep the function listings smaller?\r\n@guitargeek ",
        "createdAt" : "2021-03-11T12:37:11Z",
        "updatedAt" : "2021-03-11T13:03:15Z",
        "lastEditedBy" : "ec1903c5-44e7-4fb1-bee9-25de61836fba",
        "tags" : [
        ]
      },
      {
        "id" : "7c6b1b77-5237-4dc2-99b4-b8b60e233b76",
        "parentId" : "de3a7c40-09b2-4251-b40c-082a2fca6702",
        "authorId" : "ec1903c5-44e7-4fb1-bee9-25de61836fba",
        "body" : "And here you go:\r\n```\r\n../../../root-src/roofit/histfactory/src/ParamHistFunc.cxx:715:55: error: no viable conversion from 'const RooRealVar' to 'const RooAbsCollection'\r\n    assert(static_cast<Int_t>(i) == _dataSet.getIndex(param)); // We assume that each parameter i belongs to bin i\r\n```",
        "createdAt" : "2021-03-11T12:44:57Z",
        "updatedAt" : "2021-03-11T13:03:15Z",
        "lastEditedBy" : "ec1903c5-44e7-4fb1-bee9-25de61836fba",
        "tags" : [
        ]
      },
      {
        "id" : "0ee26d8c-0e21-461e-9ac5-3244caccec26",
        "parentId" : "de3a7c40-09b2-4251-b40c-082a2fca6702",
        "authorId" : "080bddae-e637-45c8-b6c1-53aef7161d62",
        "body" : "I see! Thanks for adding the explanation also in the source code. Otherwise I would have been worried that someone accidentally removes this function because it seems superfluous at first sight.",
        "createdAt" : "2021-03-11T13:59:44Z",
        "updatedAt" : "2021-03-11T14:00:03Z",
        "lastEditedBy" : "080bddae-e637-45c8-b6c1-53aef7161d62",
        "tags" : [
        ]
      }
    ],
    "commit" : "5d4c155927a418078f2460cf1da4495a1bbdf13b",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +143,147 @@  /// ```\n  /// in this case.\n  Int_t getIndex(const RooArgSet& coord, Bool_t fast = false) const {\n    return getIndex(static_cast<const RooAbsCollection&>(coord), fast);\n  }"
  },
  {
    "id" : "2ca9b41f-d6e2-4978-a25f-1a6fb7a96f55",
    "prId" : 7859,
    "prUrl" : "https://github.com/root-project/root/pull/7859#pullrequestreview-642180516",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "582629a7-0455-46cb-8bba-b2c2cdeaa30e",
        "parentId" : null,
        "authorId" : "ec1903c5-44e7-4fb1-bee9-25de61836fba",
        "body" : "Maybe one-line doxygen what this is.",
        "createdAt" : "2021-04-22T12:25:35Z",
        "updatedAt" : "2021-04-22T15:41:21Z",
        "lastEditedBy" : "ec1903c5-44e7-4fb1-bee9-25de61836fba",
        "tags" : [
        ]
      },
      {
        "id" : "1fb293a5-c456-452f-a3a9-3a796bb9e4c9",
        "parentId" : "582629a7-0455-46cb-8bba-b2c2cdeaa30e",
        "authorId" : "080bddae-e637-45c8-b6c1-53aef7161d62",
        "body" : "Okay!",
        "createdAt" : "2021-04-22T13:11:17Z",
        "updatedAt" : "2021-04-22T15:41:21Z",
        "lastEditedBy" : "080bddae-e637-45c8-b6c1-53aef7161d62",
        "tags" : [
        ]
      }
    ],
    "commit" : "e9ea12029e0d41c6d9dda65aeb925e58998ab792",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +203,207 @@  /// Structure to cache information on the histogram variable that is\n  /// frequently used for histogram weights retrieval.\n  struct VarInfo {\n    size_t nRealVars = 0;\n    size_t realVarIdx1 = 0;"
  }
]