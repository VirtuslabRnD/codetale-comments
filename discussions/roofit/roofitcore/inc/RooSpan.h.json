[
  {
    "id" : "af0214f3-c4eb-403c-a018-4aaf638a653f",
    "prId" : 6111,
    "prUrl" : "https://github.com/root-project/root/pull/6111#pullrequestreview-460607406",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b04decdc-2800-4d4c-950a-ea63d3f48e88",
        "parentId" : null,
        "authorId" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "body" : "R__ASSERT?\r\n\r\nAlso how evil is it to change constexprness of a method depending on the build optimization level? (potentially a lot?)",
        "createdAt" : "2020-08-03T18:03:45Z",
        "updatedAt" : "2020-08-04T09:03:22Z",
        "lastEditedBy" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "tags" : [
        ]
      },
      {
        "id" : "73aa3aae-2a6a-4f2d-92a5-7e2da54c8216",
        "parentId" : "b04decdc-2800-4d4c-950a-ea63d3f48e88",
        "authorId" : "ec1903c5-44e7-4fb1-bee9-25de61836fba",
        "body" : "Axel says that `constexpr` is completely irrelevant here, so I can just remove it for good. This thing can get inlined everywhere, so it doesn't really matter how it's annotated.\r\n\r\nBut tell me this:\r\nWhy `R__ASSERT`? It's never used in RooFit, so I don't know why it would be better than the good old assert.",
        "createdAt" : "2020-08-04T08:20:07Z",
        "updatedAt" : "2020-08-04T09:03:22Z",
        "lastEditedBy" : "ec1903c5-44e7-4fb1-bee9-25de61836fba",
        "tags" : [
        ]
      },
      {
        "id" : "513336bb-7851-499a-99de-06fceaa79e1f",
        "parentId" : "b04decdc-2800-4d4c-950a-ea63d3f48e88",
        "authorId" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "body" : "I _think_ R__ASSERT's behavior can be customized by frameworks via error handlers, but here I was just suggesting it for consistency of the printouts. Which of course does not apply if roofit does not use R__ASSERT.",
        "createdAt" : "2020-08-04T08:33:30Z",
        "updatedAt" : "2020-08-04T09:03:22Z",
        "lastEditedBy" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "tags" : [
        ]
      }
    ],
    "commit" : "7915ad630d28765ac7e2186688577cef755a65ba",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +119,123 @@\n  typename std::span<T>::reference operator[](typename std::span<T>::index_type i) const noexcept {\n    assert(i < _span.size());\n    return _span[i];\n  }"
  }
]