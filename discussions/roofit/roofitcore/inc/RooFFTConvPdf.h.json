[
  {
    "id" : "34844912-e80a-4a05-9e99-a463c9bfb69b",
    "prId" : 5822,
    "prUrl" : "https://github.com/root-project/root/pull/5822#pullrequestreview-426099628",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dfe0c7ab-3792-425e-b1c3-a1161ad1c01f",
        "parentId" : null,
        "authorId" : "ec1903c5-44e7-4fb1-bee9-25de61836fba",
        "body" : "That was probably not intended, but I guess it's OK to leave it in for now.",
        "createdAt" : "2020-06-08T10:14:10Z",
        "updatedAt" : "2020-06-08T10:15:40Z",
        "lastEditedBy" : "ec1903c5-44e7-4fb1-bee9-25de61836fba",
        "tags" : [
        ]
      },
      {
        "id" : "deb2c355-acdd-4111-bb0a-7b9f69e95599",
        "parentId" : "dfe0c7ab-3792-425e-b1c3-a1161ad1c01f",
        "authorId" : "e4571402-a12a-4377-8cca-960e88b81e3d",
        "body" : "It was partially intended - I just want to suppress output from my script that `std::map` used without including. My small script does not recognize if class placed in comments",
        "createdAt" : "2020-06-08T10:26:27Z",
        "updatedAt" : "2020-06-08T10:26:27Z",
        "lastEditedBy" : "e4571402-a12a-4377-8cca-960e88b81e3d",
        "tags" : [
        ]
      }
    ],
    "commit" : "19bc3c886e020afef2d7ace99366f9cdd26e9d78",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +108,112 @@  virtual TString histNameSuffix() const ;\n\n  // mutable std:: map<const RooHistPdf*,CacheAuxInfo*> _cacheAuxInfo ; //! Auxilary Cache information (do not persist)\n  Double_t _bufFrac ; // Sampling buffer size as fraction of domain size \n  BufStrat _bufStrat ; // Strategy to fill the buffer"
  },
  {
    "id" : "4c945353-214f-45e9-99aa-46fb2f21aa26",
    "prId" : 8729,
    "prUrl" : "https://github.com/root-project/root/pull/8729#pullrequestreview-717437103",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "97e1a60b-54fa-41ef-ac9c-f78effb3aa80",
        "parentId" : null,
        "authorId" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "body" : "this is a breaking change if users were inheriting from RooFFTConvPdf and calling `scanPdf` in the derived class. is that a valid use of this class/method?",
        "createdAt" : "2021-07-28T14:14:13Z",
        "updatedAt" : "2021-07-28T14:34:44Z",
        "lastEditedBy" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "tags" : [
        ]
      },
      {
        "id" : "a81c045b-3a36-41b6-b9c4-ae72db196c96",
        "parentId" : "97e1a60b-54fa-41ef-ac9c-f78effb3aa80",
        "authorId" : "080bddae-e637-45c8-b6c1-53aef7161d62",
        "body" : "There is no reason for a user to do this. Unfortunately RooFit uses `protected` too much for things that should actually be `private`.",
        "createdAt" : "2021-07-28T20:29:50Z",
        "updatedAt" : "2021-07-28T20:29:50Z",
        "lastEditedBy" : "080bddae-e637-45c8-b6c1-53aef7161d62",
        "tags" : [
        ]
      }
    ],
    "commit" : "f689132c404372d261950e971a9845365fe6a006",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +74,78 @@  Bool_t redirectServersHook(const RooAbsCollection& newServerList, Bool_t mustReplaceAll, Bool_t nameChange, Bool_t isRecursive) ;\n\n  std::vector<double>  scanPdf(RooRealVar& obs, RooAbsPdf& pdf, const RooDataHist& hist, const RooArgSet& slicePos, Int_t& N, Int_t& N2, Int_t& zeroBin, Double_t shift) const ;\n\n  class FFTCacheElem : public PdfCacheElem {"
  }
]