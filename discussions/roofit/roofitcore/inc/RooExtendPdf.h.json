[
  {
    "id" : "6f6eea32-874e-4ab1-ae6c-894335ed6eee",
    "prId" : 5501,
    "prUrl" : "https://github.com/root-project/root/pull/5501#pullrequestreview-403559305",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b221e53e-e24d-4822-8296-353225b0e71d",
        "parentId" : null,
        "authorId" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "body" : "here and below: this is not backward-compatible, you can't pass a `RooAbsPdf` rvalue to the constructor anymore. Is that ok?",
        "createdAt" : "2020-04-30T13:53:59Z",
        "updatedAt" : "2020-04-30T13:54:52Z",
        "lastEditedBy" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "tags" : [
        ]
      },
      {
        "id" : "a15420a5-3edb-4fee-ac88-54945e9176d9",
        "parentId" : "b221e53e-e24d-4822-8296-353225b0e71d",
        "authorId" : "ec1903c5-44e7-4fb1-bee9-25de61836fba",
        "body" : "That's actually *desired*. Before, you could pass it, but it didn't work.\r\nThat's unfortunately the case for a lot of PDFs:\r\n- They either crash\r\n- Or they `dynamic_cast` the incoming types, print errors, and crash later\r\n- Or they `dynamic_cast` and throw or `assert(0)`.\r\n\r\nThat's why whenever I get the chance, I make the interfaces type safe.",
        "createdAt" : "2020-04-30T14:01:52Z",
        "updatedAt" : "2020-04-30T14:01:52Z",
        "lastEditedBy" : "ec1903c5-44e7-4fb1-bee9-25de61836fba",
        "tags" : [
        ]
      },
      {
        "id" : "fba3c39d-094b-4dd7-83cb-1f7956c0e5b7",
        "parentId" : "b221e53e-e24d-4822-8296-353225b0e71d",
        "authorId" : "ec1903c5-44e7-4fb1-bee9-25de61836fba",
        "body" : "About the rvalue ...\r\nThat didn't exist when RooFit was designed. If you pass one, it will save the pointer, let the ravlue go out of scope, and crash as soon as you try using the `RooExtendPdf` instance.",
        "createdAt" : "2020-04-30T14:03:56Z",
        "updatedAt" : "2020-04-30T14:03:56Z",
        "lastEditedBy" : "ec1903c5-44e7-4fb1-bee9-25de61836fba",
        "tags" : [
        ]
      },
      {
        "id" : "42adece9-0051-43d7-92a5-f3467d12704a",
        "parentId" : "b221e53e-e24d-4822-8296-353225b0e71d",
        "authorId" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "body" : "of course rvalues existed when RooFit was designed..?\r\n\r\n```cpp\r\nRooExtendPdf mypdf(..., RooAbsPdf(...))\r\n```\r\n\r\n> That's actually _desired_\r\n\r\nWell then :smile: ",
        "createdAt" : "2020-04-30T14:05:19Z",
        "updatedAt" : "2020-04-30T14:06:08Z",
        "lastEditedBy" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "tags" : [
        ]
      },
      {
        "id" : "5ffea18c-ccf0-407a-b4f4-d3a25bca0630",
        "parentId" : "b221e53e-e24d-4822-8296-353225b0e71d",
        "authorId" : "ec1903c5-44e7-4fb1-bee9-25de61836fba",
        "body" : "You have a point, though, that one could use rvalue refs, and take ownership.",
        "createdAt" : "2020-04-30T14:07:48Z",
        "updatedAt" : "2020-04-30T14:07:48Z",
        "lastEditedBy" : "ec1903c5-44e7-4fb1-bee9-25de61836fba",
        "tags" : [
        ]
      },
      {
        "id" : "f25fc287-87cf-418e-8e07-be63a573fb95",
        "parentId" : "b221e53e-e24d-4822-8296-353225b0e71d",
        "authorId" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "body" : "All I'm saying is: that used to compile (even at the time RooFit was designed), and now it doesn't. If it used to compile but was broken, ~that~ then it's a _good thing_ that it does not compile anymore, so feel free to resolve the thread.",
        "createdAt" : "2020-04-30T14:11:33Z",
        "updatedAt" : "2020-04-30T14:16:56Z",
        "lastEditedBy" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "tags" : [
        ]
      }
    ],
    "commit" : "6a8cb05cbd348877eb854344141b4c86aee33855",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +25,29 @@  RooExtendPdf() ;\n  RooExtendPdf(const char *name, const char *title, RooAbsPdf& pdf,\n\t       RooAbsReal& norm, const char* rangeName=0) ;\n  RooExtendPdf(const RooExtendPdf& other, const char* name=0) ;\n  virtual TObject* clone(const char* newname) const { return new RooExtendPdf(*this,newname) ; }"
  }
]