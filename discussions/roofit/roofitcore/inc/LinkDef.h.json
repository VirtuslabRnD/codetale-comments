[
  {
    "id" : "0eff6c4a-6d46-4559-8a96-ddb6173d3c7d",
    "prId" : 5502,
    "prUrl" : "https://github.com/root-project/root/pull/5502#pullrequestreview-405137613",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "790731d5-d713-44f9-84b1-494d5a536911",
        "parentId" : null,
        "authorId" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "body" : "just curious..what on earth does this do?",
        "createdAt" : "2020-05-04T13:05:44Z",
        "updatedAt" : "2020-05-04T17:40:15Z",
        "lastEditedBy" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "tags" : [
        ]
      },
      {
        "id" : "6697846c-edb4-4f35-916b-025e55bad6b1",
        "parentId" : "790731d5-d713-44f9-84b1-494d5a536911",
        "authorId" : "ec1903c5-44e7-4fb1-bee9-25de61836fba",
        "body" : "It's schema evolution. These are read rules telling ROOT how to read an old class version on file that stores category states in the 284-bytes-too-large `RooCatType`. You basically say:\r\nGet me the RooCatType from file, and I do with it what's necessary.\r\n@eguiraud ",
        "createdAt" : "2020-05-04T16:14:08Z",
        "updatedAt" : "2020-05-04T17:40:15Z",
        "lastEditedBy" : "ec1903c5-44e7-4fb1-bee9-25de61836fba",
        "tags" : [
        ]
      }
    ],
    "commit" : "baef1f1af08b3f89af1b76740313e5a65e6fd6e4",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +44,48 @@                                                  } }\";\n#pragma read sourceClass=\"RooAbsCategory\" targetClass=\"RooAbsCategory\" version=\"[1-2]\" include=\"RooFitLegacy/RooCatTypeLegacy.h\" \\\n  source=\"RooCatType _value\" target=\"_currentIndex\" code=\"{ _currentIndex = onfile._value.getVal(); }\"\n#pragma link C++ class RooAbsCategoryLValue+ ;\n#pragma link C++ class RooAbsCollection+ ;"
  }
]