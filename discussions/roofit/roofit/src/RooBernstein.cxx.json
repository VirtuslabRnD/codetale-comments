[
  {
    "id" : "aa090087-d337-4e3d-8f73-a32466e9f12c",
    "prId" : 5506,
    "prUrl" : "https://github.com/root-project/root/pull/5506#pullrequestreview-404861036",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dbd5b297-8a92-41a5-a4d5-8c7e4e164569",
        "parentId" : null,
        "authorId" : "ec1903c5-44e7-4fb1-bee9-25de61836fba",
        "body" : "What does this function do? It seems to forever fix what the Bernstein is normalised to. However, in `getAnalyticalIntegral()`, one *cannot* select the range for analytic integration.\r\nSince it returns `0` there, the Bernstein will just switch to numeric integration and ignore everything you do in this PR.\r\nIs this intended?",
        "createdAt" : "2020-04-30T09:23:26Z",
        "updatedAt" : "2020-05-04T17:04:43Z",
        "lastEditedBy" : "ec1903c5-44e7-4fb1-bee9-25de61836fba",
        "tags" : [
        ]
      },
      {
        "id" : "cf834082-e68c-4b64-a08e-eafc412b48b1",
        "parentId" : "dbd5b297-8a92-41a5-a4d5-8c7e4e164569",
        "authorId" : "a90cb30d-7d80-4898-810f-8f9e933d2078",
        "body" : "Hi Stephan,\r\nI introduced so that the pdf uses the variable's full range even when considering the subrange this is a similar fix to RooChebychev. ([selectNormalizationRange](https://root.cern.ch/doc/master/classRooChebychev.html#a3278bec6891cc4d0afe54e16bde0955e)) . I have update the analytical integral to behave correctly for integration over ranges in a commit that follows.\r\n\r\nCheers,\r\nRahul\r\n",
        "createdAt" : "2020-05-01T12:21:08Z",
        "updatedAt" : "2020-05-04T17:04:43Z",
        "lastEditedBy" : "a90cb30d-7d80-4898-810f-8f9e933d2078",
        "tags" : [
        ]
      },
      {
        "id" : "3acd105f-d9dc-4e71-895c-eb72fb7d88b7",
        "parentId" : "dbd5b297-8a92-41a5-a4d5-8c7e4e164569",
        "authorId" : "ec1903c5-44e7-4fb1-bee9-25de61836fba",
        "body" : "Ok, so let's document that.",
        "createdAt" : "2020-05-04T10:15:26Z",
        "updatedAt" : "2020-05-04T17:04:43Z",
        "lastEditedBy" : "ec1903c5-44e7-4fb1-bee9-25de61836fba",
        "tags" : [
        ]
      }
    ],
    "commit" : "7b95b55d417492b3233d140cdc3792232eb5a896",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +87,91 @@/// Force use of a given normalisation range.\n/// Needed for functions or PDFs (e.g. RooAddPdf) whose shape depends on the choice of normalisation.\nvoid RooBernstein::selectNormalizationRange(const char* rangeName, Bool_t force)\n{\n  if (rangeName && (force || !_refRangeName.empty())) {"
  },
  {
    "id" : "17649e12-c45a-4faa-b337-1f8e8c35ba5b",
    "prId" : 5506,
    "prUrl" : "https://github.com/root-project/root/pull/5506#pullrequestreview-404860696",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "26dd09f8-5ec3-4e44-b4b3-3806d18e6d7f",
        "parentId" : null,
        "authorId" : "ec1903c5-44e7-4fb1-bee9-25de61836fba",
        "body" : "```suggestion\r\n/// Force use of a given normalisation range.\r\n/// Needed for functions or PDFs (e.g. RooAddPdf) whose shape depends on the choice of normalisation.\r\nvoid RooBernstein::selectNormalizationRange(const char* rangeName, Bool_t force)\r\n```",
        "createdAt" : "2020-05-04T10:14:52Z",
        "updatedAt" : "2020-05-04T17:04:43Z",
        "lastEditedBy" : "ec1903c5-44e7-4fb1-bee9-25de61836fba",
        "tags" : [
        ]
      }
    ],
    "commit" : "7b95b55d417492b3233d140cdc3792232eb5a896",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +87,91 @@/// Force use of a given normalisation range.\n/// Needed for functions or PDFs (e.g. RooAddPdf) whose shape depends on the choice of normalisation.\nvoid RooBernstein::selectNormalizationRange(const char* rangeName, Bool_t force)\n{\n  if (rangeName && (force || !_refRangeName.empty())) {"
  }
]