[
  {
    "id" : "55bec737-3970-49b4-86f0-9f548d596b64",
    "prId" : 4770,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f760b572-0731-4cd9-a66d-a8faa323d11f",
        "parentId" : null,
        "authorId" : "fdd13140-ed47-477e-a98b-d3704caa65da",
        "body" : "you probably want to add some tests asserting that `HTMLElement` methods can be called on `xFoo`\n",
        "createdAt" : "2015-06-30T16:32:11Z",
        "updatedAt" : "2015-06-30T23:57:05Z",
        "lastEditedBy" : "fdd13140-ed47-477e-a98b-d3704caa65da",
        "tags" : [
        ]
      },
      {
        "id" : "06d9ff42-2533-41df-9811-b8ebe381218d",
        "parentId" : "f760b572-0731-4cd9-a66d-a8faa323d11f",
        "authorId" : "2d7ea16a-37c5-4ed5-9b1e-ca52999ac645",
        "body" : "Hello vvakame, thanks for asking, although I am not one of the mergers.\n\nA few comments:\n- I provided AbstractPolymerElement in tests as a convenience for developer who wish to integrate easily, maybe you could provide an AbstractDomModule, and an additional test case to register an instance of a simple implementation, showing the object-oriented way of using Polymer ?\n- I started to write the definitions of the core (now Iron) & paper components' library. It would be nice to write at least the one I wrote for 0.5 (except the obsoletes one, only a few)\n- I can help if you want :)\n\nThanks for your work!\n",
        "createdAt" : "2015-06-30T18:08:44Z",
        "updatedAt" : "2015-06-30T23:57:05Z",
        "lastEditedBy" : "2d7ea16a-37c5-4ed5-9b1e-ca52999ac645",
        "tags" : [
        ]
      },
      {
        "id" : "9e610c4a-9c2a-4287-b47b-45e8458c6fc0",
        "parentId" : "f760b572-0731-4cd9-a66d-a8faa323d11f",
        "authorId" : "333132a6-18ba-4e78-8b81-1aeead78ff6b",
        "body" : "Thanks lgrignon. I am author of new definitions.\n\n> I provided AbstractPolymerElement in tests as a convenience for developer who wish to integrate easily, maybe you could provide an AbstractDomModule, and an additional test case to register an instance of a simple implementation, showing the object-oriented way of using Polymer ?\n\nSorry, I think that polymer.d.ts should not supply utilities but only type definitions. In the tests, the implementations are conforming to Polymer developer guides.\n\n> I started to write the definitions of the core (now Iron) & paper components' library. It would be nice to write at least the one I wrote for 0.5 (except the obsoletes one, only a few)\n\nThe Repositories of iron-elements and paper-elements (and more elements) are separated:   [PolymerElements/iron-elements](https://github.com/PolymerElements/iron-elements) and [PolymerElements/paper-elements](https://github.com/PolymerElements/paper-elements).\n If repositories are different, I think we should create different definitions.\n\n> I can help if you want :)\n\nThank you!\n",
        "createdAt" : "2015-07-01T00:17:43Z",
        "updatedAt" : "2015-07-01T00:17:43Z",
        "lastEditedBy" : "333132a6-18ba-4e78-8b81-1aeead78ff6b",
        "tags" : [
        ]
      }
    ],
    "commit" : "4a3cfb0f70c4f42c503fde8f61fb00a4516b86d5",
    "line" : null,
    "diffHunk" : "@@ -1,1 +18,22 @@xFoo.textContent = \"\";\ndocument.body.appendChild(xFoo);\n\nwindow.CustomElements.hasNative;\nwindow.CustomElements.flags;"
  }
]