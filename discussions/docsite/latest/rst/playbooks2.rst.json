[
  {
    "id" : "fa55400e-f725-41aa-8e4d-8fa8a54a004c",
    "prId" : 3525,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "931fab4e-9d1f-4abc-b9a0-7be5bbe51b02",
        "parentId" : null,
        "authorId" : "eb88bef7-1cbe-461f-ae79-df94ee899b76",
        "body" : "This is confusing or wrong, is it considered changed when it is true or false?\n",
        "createdAt" : "2013-07-15T17:57:13Z",
        "updatedAt" : "2013-07-15T17:57:13Z",
        "lastEditedBy" : "eb88bef7-1cbe-461f-ae79-df94ee899b76",
        "tags" : [
        ]
      }
    ],
    "commit" : "60d2ad36428d259a4864f6e6c902b0a69cd7082a",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +79,83 @@write a task with the `changed_when` clause, which actually is a\nPython expression. When this expression evaluates to true the task\nis considered changed, when it evaluates to false the tasks is\nconsidered changed. See below about the `when` clause for details\non the expressions you can use. You may also find the `register`"
  },
  {
    "id" : "090b6d04-b028-4a70-83f0-831e0e41a3e4",
    "prId" : 3525,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "15447550-954a-453d-a7c7-afb672378e4d",
        "parentId" : null,
        "authorId" : "eb88bef7-1cbe-461f-ae79-df94ee899b76",
        "body" : "Grammar is clumsy, recommended change:\n\nUse the \"changed_when\" option to override the default module \"change\" reporting.  The \"changed_when\" option takes a Python expression.  ...\n",
        "createdAt" : "2013-07-15T18:02:46Z",
        "updatedAt" : "2013-07-15T18:02:46Z",
        "lastEditedBy" : "eb88bef7-1cbe-461f-ae79-df94ee899b76",
        "tags" : [
        ]
      }
    ],
    "commit" : "60d2ad36428d259a4864f6e6c902b0a69cd7082a",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +75,79 @@.. versionadded:: 1.3\n\nWhen a task make some changes or sometimes is simply executed, it\nis reported as changed.  You may want to override this.  To do so,\nwrite a task with the `changed_when` clause, which actually is a"
  }
]