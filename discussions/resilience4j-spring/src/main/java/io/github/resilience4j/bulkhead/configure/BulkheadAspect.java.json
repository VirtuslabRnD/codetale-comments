[
  {
    "id" : "c9a883ea-09d1-4909-9263-19cd150b3876",
    "prId" : 425,
    "prUrl" : "https://github.com/resilience4j/resilience4j/pull/425#pullrequestreview-226068473",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d0170dc1-63ad-4768-b2c4-262398267e5b",
        "parentId" : null,
        "authorId" : "dbb24844-d7bc-47b7-a5ba-c189ef4c9f95",
        "body" : "is that even possible to happen , to have the aspect invoked despite no annotation ?",
        "createdAt" : "2019-04-12T12:34:45Z",
        "updatedAt" : "2019-04-12T12:34:46Z",
        "lastEditedBy" : "dbb24844-d7bc-47b7-a5ba-c189ef4c9f95",
        "tags" : [
        ]
      },
      {
        "id" : "91ebe9d7-30a1-41c0-927e-26f819c8ea23",
        "parentId" : "d0170dc1-63ad-4768-b2c4-262398267e5b",
        "authorId" : "2fe61b32-2803-4ae2-b54d-0aefbbf60523",
        "body" : "No don't think so. ",
        "createdAt" : "2019-04-12T13:05:36Z",
        "updatedAt" : "2019-04-12T13:05:36Z",
        "lastEditedBy" : "2fe61b32-2803-4ae2-b54d-0aefbbf60523",
        "tags" : [
        ]
      },
      {
        "id" : "77f2eb1b-6619-4a13-9e08-aa6e78395207",
        "parentId" : "d0170dc1-63ad-4768-b2c4-262398267e5b",
        "authorId" : "2fe61b32-2803-4ae2-b54d-0aefbbf60523",
        "body" : "But the parameter is null... always... don't understand why.",
        "createdAt" : "2019-04-12T13:06:46Z",
        "updatedAt" : "2019-04-12T13:06:46Z",
        "lastEditedBy" : "2fe61b32-2803-4ae2-b54d-0aefbbf60523",
        "tags" : [
        ]
      },
      {
        "id" : "407675b0-8fd4-4d6b-8a8e-feb5d1783d03",
        "parentId" : "d0170dc1-63ad-4768-b2c4-262398267e5b",
        "authorId" : "2fe61b32-2803-4ae2-b54d-0aefbbf60523",
        "body" : "That's why we have to invoke `getBackendMonitoredAnnotation`",
        "createdAt" : "2019-04-12T13:06:59Z",
        "updatedAt" : "2019-04-12T13:06:59Z",
        "lastEditedBy" : "2fe61b32-2803-4ae2-b54d-0aefbbf60523",
        "tags" : [
        ]
      }
    ],
    "commit" : "123520807e0342e204fae67394370e60335d9eec",
    "line" : 50,
    "diffHunk" : "@@ -1,1 +66,70 @@\t\t\tbackendMonitored = getBackendMonitoredAnnotation(proceedingJoinPoint);\n\t\t}\n\t\tif(backendMonitored == null) { //because annotations wasn't found\n\t\t\treturn proceedingJoinPoint.proceed();\n\t\t}"
  },
  {
    "id" : "57143cfc-c407-4bd5-9732-21ee4bd662f1",
    "prId" : 399,
    "prUrl" : "https://github.com/resilience4j/resilience4j/pull/399#pullrequestreview-222663154",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "42d65e70-e34b-4768-a2c5-25d2033ccf37",
        "parentId" : null,
        "authorId" : "2fe61b32-2803-4ae2-b54d-0aefbbf60523",
        "body" : "Should we rename it to `handleAsyncJoinPoint`?",
        "createdAt" : "2019-04-04T07:59:37Z",
        "updatedAt" : "2019-04-04T09:59:00Z",
        "lastEditedBy" : "2fe61b32-2803-4ae2-b54d-0aefbbf60523",
        "tags" : [
        ]
      },
      {
        "id" : "1be7b984-6787-4250-8a28-66bed6531c10",
        "parentId" : "42d65e70-e34b-4768-a2c5-25d2033ccf37",
        "authorId" : "dbb24844-d7bc-47b7-a5ba-c189ef4c9f95",
        "body" : "i guess handleAsync would give a feeling it can handle other types of Async like Futures..ect, the method name here is more specific to what it support which CompletableFuture only .",
        "createdAt" : "2019-04-04T09:35:12Z",
        "updatedAt" : "2019-04-04T09:59:00Z",
        "lastEditedBy" : "dbb24844-d7bc-47b7-a5ba-c189ef4c9f95",
        "tags" : [
        ]
      },
      {
        "id" : "62bff931-b9de-4e7d-8ee4-bd84e789b244",
        "parentId" : "42d65e70-e34b-4768-a2c5-25d2033ccf37",
        "authorId" : "2fe61b32-2803-4ae2-b54d-0aefbbf60523",
        "body" : "ok, can use the same method name in CircuitBreakerAspect as well?",
        "createdAt" : "2019-04-04T09:37:54Z",
        "updatedAt" : "2019-04-04T09:59:00Z",
        "lastEditedBy" : "2fe61b32-2803-4ae2-b54d-0aefbbf60523",
        "tags" : [
        ]
      },
      {
        "id" : "523c27f0-3bda-4422-b639-a74a47bc20a4",
        "parentId" : "42d65e70-e34b-4768-a2c5-25d2033ccf37",
        "authorId" : "dbb24844-d7bc-47b7-a5ba-c189ef4c9f95",
        "body" : "On it now",
        "createdAt" : "2019-04-04T09:54:32Z",
        "updatedAt" : "2019-04-04T09:59:00Z",
        "lastEditedBy" : "dbb24844-d7bc-47b7-a5ba-c189ef4c9f95",
        "tags" : [
        ]
      }
    ],
    "commit" : "2ba57a8d08ba6eb89b4ec6bca92e1a4fcd0a5296",
    "line" : 92,
    "diffHunk" : "@@ -1,1 +118,122 @@\t * @throws Throwable\n\t */\n\tprivate Object handleJoinPointCompletableFuture(ProceedingJoinPoint proceedingJoinPoint, io.github.resilience4j.bulkhead.Bulkhead bulkhead, String methodName) throws Throwable {\n\n\t\treturn bulkhead.executeCompletionStage(() -> {"
  },
  {
    "id" : "f937dd15-090e-4fb4-b51c-d4564738fe9c",
    "prId" : 399,
    "prUrl" : "https://github.com/resilience4j/resilience4j/pull/399#pullrequestreview-222654069",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "387e7cec-74e0-4ae6-8e97-c558018ec891",
        "parentId" : null,
        "authorId" : "2fe61b32-2803-4ae2-b54d-0aefbbf60523",
        "body" : "Should we rename it to handleSyncJoinPoint?",
        "createdAt" : "2019-04-04T07:59:57Z",
        "updatedAt" : "2019-04-04T09:59:00Z",
        "lastEditedBy" : "2fe61b32-2803-4ae2-b54d-0aefbbf60523",
        "tags" : [
        ]
      },
      {
        "id" : "b230f045-2b48-4c26-81ba-683776071458",
        "parentId" : "387e7cec-74e0-4ae6-8e97-c558018ec891",
        "authorId" : "dbb24844-d7bc-47b7-a5ba-c189ef4c9f95",
        "body" : "I would keep it like that for now .",
        "createdAt" : "2019-04-04T09:36:08Z",
        "updatedAt" : "2019-04-04T09:59:00Z",
        "lastEditedBy" : "dbb24844-d7bc-47b7-a5ba-c189ef4c9f95",
        "tags" : [
        ]
      }
    ],
    "commit" : "2ba57a8d08ba6eb89b4ec6bca92e1a4fcd0a5296",
    "line" : 76,
    "diffHunk" : "@@ -1,1 +102,106 @@\t}\n\n\tprivate Object handleJoinPoint(ProceedingJoinPoint proceedingJoinPoint, io.github.resilience4j.bulkhead.Bulkhead bulkhead, String methodName) throws Throwable {\n\t\tif (logger.isDebugEnabled()) {\n\t\t\tlogger.debug(\"bulkhead method invocation for method {}\", methodName);"
  },
  {
    "id" : "79a06c5a-5b29-4dc8-b138-38c71d7aa084",
    "prId" : 399,
    "prUrl" : "https://github.com/resilience4j/resilience4j/pull/399#pullrequestreview-222653925",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "053d65dc-327c-4f43-8633-447defb92b6b",
        "parentId" : null,
        "authorId" : "2fe61b32-2803-4ae2-b54d-0aefbbf60523",
        "body" : "Should we rename it to handleSyncJoinPoint? ",
        "createdAt" : "2019-04-04T08:03:03Z",
        "updatedAt" : "2019-04-04T09:59:00Z",
        "lastEditedBy" : "2fe61b32-2803-4ae2-b54d-0aefbbf60523",
        "tags" : [
        ]
      },
      {
        "id" : "38780f2d-93de-4e96-be21-6ff16388f435",
        "parentId" : "053d65dc-327c-4f43-8633-447defb92b6b",
        "authorId" : "dbb24844-d7bc-47b7-a5ba-c189ef4c9f95",
        "body" : "I would keep it like that for now .",
        "createdAt" : "2019-04-04T09:35:54Z",
        "updatedAt" : "2019-04-04T09:59:00Z",
        "lastEditedBy" : "dbb24844-d7bc-47b7-a5ba-c189ef4c9f95",
        "tags" : [
        ]
      }
    ],
    "commit" : "2ba57a8d08ba6eb89b4ec6bca92e1a4fcd0a5296",
    "line" : 58,
    "diffHunk" : "@@ -1,1 +78,82 @@\t\t\treturn handleJoinPointCompletableFuture(proceedingJoinPoint, bulkhead, methodName);\n\t\t}\n\t\treturn handleJoinPoint(proceedingJoinPoint, bulkhead, methodName);\n\t}\n"
  }
]