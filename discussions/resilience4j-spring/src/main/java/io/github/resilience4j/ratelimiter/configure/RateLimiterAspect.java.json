[
  {
    "id" : "09bd9f96-4f9a-45b1-8ab6-8109620b4d16",
    "prId" : 399,
    "prUrl" : "https://github.com/resilience4j/resilience4j/pull/399#pullrequestreview-222653436",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4b2e6166-4c6f-4ebf-80b4-4f84d5c00eda",
        "parentId" : null,
        "authorId" : "2fe61b32-2803-4ae2-b54d-0aefbbf60523",
        "body" : "Should we rename it to `handleAsyncJoinPoint`?",
        "createdAt" : "2019-04-04T07:59:22Z",
        "updatedAt" : "2019-04-04T09:59:00Z",
        "lastEditedBy" : "2fe61b32-2803-4ae2-b54d-0aefbbf60523",
        "tags" : [
        ]
      },
      {
        "id" : "bb371268-1834-4acd-8e5e-65a386acab6b",
        "parentId" : "4b2e6166-4c6f-4ebf-80b4-4f84d5c00eda",
        "authorId" : "dbb24844-d7bc-47b7-a5ba-c189ef4c9f95",
        "body" : "i guess handleAsync would give a feeling it can handle other types of Async like Futures..ect, the method name here is more specific to what it support which CompletableFuture only .",
        "createdAt" : "2019-04-04T09:34:55Z",
        "updatedAt" : "2019-04-04T09:59:00Z",
        "lastEditedBy" : "dbb24844-d7bc-47b7-a5ba-c189ef4c9f95",
        "tags" : [
        ]
      }
    ],
    "commit" : "2ba57a8d08ba6eb89b4ec6bca92e1a4fcd0a5296",
    "line" : 187,
    "diffHunk" : "@@ -1,1 +126,130 @@\t * @throws Throwable\n\t */\n\tprivate Object handleJoinPointCompletableFuture(ProceedingJoinPoint proceedingJoinPoint, io.github.resilience4j.ratelimiter.RateLimiter rateLimiter, String methodName) {\n\n\t\treturn io.github.resilience4j.ratelimiter.RateLimiter.decorateCompletionStage(rateLimiter, () -> {"
  }
]