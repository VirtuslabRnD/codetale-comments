[
  {
    "id" : "e2b71729-c327-41f5-a125-b17771271c24",
    "prId" : 12152,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/12152#pullrequestreview-6606132",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b1808ae0-cd94-46dd-bf9f-1b8ded72f1ea",
        "parentId" : null,
        "authorId" : "fe4c4a27-551a-41df-81f3-3fb60f11b93b",
        "body" : "Instead of writing multiple overloads, you should be better off using optional parameters.. \n",
        "createdAt" : "2016-10-30T06:16:27Z",
        "updatedAt" : "2016-10-30T06:16:27Z",
        "lastEditedBy" : "fe4c4a27-551a-41df-81f3-3fb60f11b93b",
        "tags" : [
        ]
      },
      {
        "id" : "aface226-c264-4656-9d42-23c1979c4880",
        "parentId" : "b1808ae0-cd94-46dd-bf9f-1b8ded72f1ea",
        "authorId" : "918ac22a-67ab-4fa0-b7cd-260941114bb7",
        "body" : "@anubmat I don't know TS that well, but as far as I know you can't put required parameters after optional ones? The reason I thought multiple overloads are needed is that the API has required arguments as both the first and last parameters.\n",
        "createdAt" : "2016-10-30T06:19:50Z",
        "updatedAt" : "2016-10-30T06:19:50Z",
        "lastEditedBy" : "918ac22a-67ab-4fa0-b7cd-260941114bb7",
        "tags" : [
        ]
      },
      {
        "id" : "90de7708-c129-475c-accc-b0f5e0c5df1b",
        "parentId" : "b1808ae0-cd94-46dd-bf9f-1b8ded72f1ea",
        "authorId" : "1ca557cb-9bb4-423a-b1d5-159e2bc35c32",
        "body" : "This overloading is LGTM.\n",
        "createdAt" : "2016-11-01T12:45:21Z",
        "updatedAt" : "2016-11-01T12:45:21Z",
        "lastEditedBy" : "1ca557cb-9bb4-423a-b1d5-159e2bc35c32",
        "tags" : [
        ]
      }
    ],
    "commit" : "811104439a53edef90814eaab56112bf39de7187",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +17,21 @@    function renderFile<T>(path: string, data: Data, cb: RenderFileCallback<T>): T;\n    function renderFile<T>(path: string, data: Data, opts: Options, cb: RenderFileCallback<T>): T;\n\n    function clearCache(): any;\n"
  }
]