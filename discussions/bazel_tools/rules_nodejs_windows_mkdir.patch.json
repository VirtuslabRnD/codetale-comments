[
  {
    "id" : "85a7ed80-ea38-418e-87ad-c47cc9893741",
    "prId" : 9635,
    "prUrl" : "https://github.com/digital-asset/daml/pull/9635",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9f5333e6-2aed-4858-a824-0926f4d50c4d",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "@aherrmann-da do you have a better idea for handling this? `ctx.file` doesn’t work since you either mess up executable bits or break binary files. Just `cp` doesn’t work because it might not be in PATH and this is a repository rule so we cannot get it from the posix toolchain. Just `cmd /c copy` does not work because it does not like forward slashes.\r\nSo in the end I ended up with this but it seems terrible.",
        "createdAt" : "2021-05-25T12:52:28Z",
        "updatedAt" : "2021-05-25T12:52:28Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "19334d90-1ed4-4436-b3c9-97247082d65b",
        "parentId" : "9f5333e6-2aed-4858-a824-0926f4d50c4d",
        "authorId" : "0aa8e877-303a-4005-8f07-7003661da2a6",
        "body" : "Unfortunately, I don't really have a better idea. As you describe all these other methods have their respective limitations.\r\n\r\nPerhaps [`string.replace`](https://docs.bazel.build/versions/master/skylark/lib/string.html#replace) is also a bit less noisy than the split/join, but, I have no strong preference there.",
        "createdAt" : "2021-05-25T14:00:38Z",
        "updatedAt" : "2021-05-25T14:00:38Z",
        "lastEditedBy" : "0aa8e877-303a-4005-8f07-7003661da2a6",
        "tags" : [
        ]
      }
    ],
    "commit" : "ff3cdc37ed87517c42c05409527a17c72176c6b1",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +18,22 @@     # copy the file; don't use the repository_ctx.template trick with empty substitution as this\n     # does not copy over binary files properly\n+    cp_args = [\"cp\", \"-f\", repository_ctx.path(f), to] if not is_windows_os(repository_ctx) else [\"cmd\", \"/c\", \"copy /y {} {}\".format(\"\\\\\".join(str(repository_ctx.path(f)).split(\"/\")), \"\\\\\".join(to_segments))]\n     result = repository_ctx.execute(\n-        [\"cp\", \"-f\", repository_ctx.path(f), to],"
  }
]