[
  {
    "id" : "79beada0-1833-4d02-8bf6-9ac09fc8aef7",
    "prId" : 8148,
    "prUrl" : "https://github.com/digital-asset/daml/pull/8148",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2bbfe2be-afa6-4c9b-969f-0487671d8f63",
        "parentId" : null,
        "authorId" : "1d70ec7b-8793-4cc6-95c8-fac6f7816dcc",
        "body" : "What does that do?",
        "createdAt" : "2020-12-03T10:37:50Z",
        "updatedAt" : "2020-12-03T10:39:32Z",
        "lastEditedBy" : "1d70ec7b-8793-4cc6-95c8-fac6f7816dcc",
        "tags" : [
        ]
      },
      {
        "id" : "fd2ed62f-2814-440e-8e74-62a09b7df776",
        "parentId" : "2bbfe2be-afa6-4c9b-969f-0487671d8f63",
        "authorId" : "181bcece-33df-41af-887d-5d5f51beb543",
        "body" : "It makes these JARs visible outside the current _BUILD.bazel_ file calling `proto_jars`, which means that we can actually establish the dependencies. For example, the kvutils proto JAR needs to be able to see the DAML-LF transaction proto JAR in order to depend upon it.",
        "createdAt" : "2020-12-03T10:43:06Z",
        "updatedAt" : "2020-12-03T10:43:06Z",
        "lastEditedBy" : "181bcece-33df-41af-887d-5d5f51beb543",
        "tags" : [
        ]
      },
      {
        "id" : "20c6a3d5-4360-4d8b-b244-bd30d30c09af",
        "parentId" : "2bbfe2be-afa6-4c9b-969f-0487671d8f63",
        "authorId" : "0aa8e877-303a-4005-8f07-7003661da2a6",
        "body" : "@SamirTalwar-DA Did it fail without this? IIRC the release script collects these targets via `bazel build` instead of dependencies declared in BUILD files. So, the visibility shouldn't matter.",
        "createdAt" : "2020-12-03T10:43:47Z",
        "updatedAt" : "2020-12-03T10:43:57Z",
        "lastEditedBy" : "0aa8e877-303a-4005-8f07-7003661da2a6",
        "tags" : [
        ]
      },
      {
        "id" : "64f6cda0-5156-41e6-bbba-42e6e8a2abec",
        "parentId" : "2bbfe2be-afa6-4c9b-969f-0487671d8f63",
        "authorId" : "0aa8e877-303a-4005-8f07-7003661da2a6",
        "body" : "Oh, it's added to `runtime_deps`. Nvm, makes sense.",
        "createdAt" : "2020-12-03T10:45:05Z",
        "updatedAt" : "2020-12-03T10:45:08Z",
        "lastEditedBy" : "0aa8e877-303a-4005-8f07-7003661da2a6",
        "tags" : [
        ]
      },
      {
        "id" : "8dddfacd-5b18-4617-9de9-2f20d956bd4c",
        "parentId" : "2bbfe2be-afa6-4c9b-969f-0487671d8f63",
        "authorId" : "181bcece-33df-41af-887d-5d5f51beb543",
        "body" : "@aherrmann-da: Yes; see the above comment. Bazel itself has to resolve the `runtime_deps`, so they need to see each other.",
        "createdAt" : "2020-12-03T10:45:08Z",
        "updatedAt" : "2020-12-03T10:45:08Z",
        "lastEditedBy" : "181bcece-33df-41af-887d-5d5f51beb543",
        "tags" : [
        ]
      }
    ],
    "commit" : "a5f9e712468cc73896ef651cbe411d87048b67dc",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +225,229 @@        resource_strip_prefix = \"%s/%s/\" % (native.package_name(), strip_import_prefix),\n        tags = _maven_tags(maven_group, maven_artifact_prefix, maven_artifact_proto_suffix),\n        visibility = visibility,\n    )\n"
  },
  {
    "id" : "5d8ca4c5-57a4-4cf9-a6bb-3951ca3bebe5",
    "prId" : 8091,
    "prUrl" : "https://github.com/digital-asset/daml/pull/8091",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2466d5b9-b608-4d4d-aa7f-3b235855b44d",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "Can we always generate this or does this fail if this is not set? The logic is complex enough so if we can make less things conditional, it seems a bit simpler.",
        "createdAt" : "2020-11-27T14:53:21Z",
        "updatedAt" : "2020-11-27T16:30:37Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "bc123f54-1f6c-44d8-b049-4d213bb1a8a9",
        "parentId" : "2466d5b9-b608-4d4d-aa7f-3b235855b44d",
        "authorId" : "181bcece-33df-41af-887d-5d5f51beb543",
        "body" : "No, because the target doesn't have Maven coordinates.",
        "createdAt" : "2020-11-27T15:12:17Z",
        "updatedAt" : "2020-11-27T16:30:37Z",
        "lastEditedBy" : "181bcece-33df-41af-887d-5d5f51beb543",
        "tags" : [
        ]
      }
    ],
    "commit" : "fbe78ed291bfdd0c7bbdc9a95c0be0ae081be83d",
    "line" : 171,
    "diffHunk" : "@@ -1,1 +316,320 @@    ) if is_windows == False else None\n\n    if maven_group and maven_artifact_prefix:\n        pom_file(\n            name = \"%s_scala_pom\" % name,"
  },
  {
    "id" : "83d1dbe4-07d2-47c2-8758-ade8b722437d",
    "prId" : 8084,
    "prUrl" : "https://github.com/digital-asset/daml/pull/8084",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f45db926-6701-48f7-8500-cd7c7db6f3d3",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "It looks like this changed from using only direct deps to using transitive deps. Why do we need this change?",
        "createdAt" : "2020-11-26T19:02:11Z",
        "updatedAt" : "2020-11-26T21:55:40Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "e572c9bc-3faf-4830-8071-fe80dac8da6d",
        "parentId" : "f45db926-6701-48f7-8500-cd7c7db6f3d3",
        "authorId" : "181bcece-33df-41af-887d-5d5f51beb543",
        "body" : "Otherwise, when compiling, for example, _transaction.proto_, it pulls in _value.proto_ but not its dependencies (e.g. _empty.proto_), so it refuses to compile. This wasn't a problem before because we only used `proto_gen` without transitive Protobuf dependencies (AFAIK), so I believe it was an oversight.\r\n\r\nI might be wrong.",
        "createdAt" : "2020-11-26T20:27:21Z",
        "updatedAt" : "2020-11-26T21:55:40Z",
        "lastEditedBy" : "181bcece-33df-41af-887d-5d5f51beb543",
        "tags" : [
        ]
      },
      {
        "id" : "efcc24a0-bed5-4148-a491-0aa29a5a145b",
        "parentId" : "f45db926-6701-48f7-8500-cd7c7db6f3d3",
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "Sounds sensible, thanks for the explanation.",
        "createdAt" : "2020-11-27T07:57:47Z",
        "updatedAt" : "2020-11-27T07:57:47Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "e080c356-378e-4ff5-9d16-5dea41c30b71",
        "parentId" : "f45db926-6701-48f7-8500-cd7c7db6f3d3",
        "authorId" : "0aa8e877-303a-4005-8f07-7003661da2a6",
        "body" : "Looking at the use-cases of `proto_gen` I think the `deps` attribute in its current form could be removed altogether. Instead, we can use `.transitive_descriptor_sets` on `srcs`. These `deps` are already listed on the corresponding `proto_library` targets, so there is no need to repeat them on `proto_gen`. \r\n\r\n [`go_proto_library`](https://github.com/bazelbuild/rules_go/blob/983d48f9d2695a0a9d898bd85dde90d410629b1b/proto/core.rst#go-proto-library) follows this pattern. It uses `protos` in place of `srcs` and `deps` is used to provide Go dependencies to the generated code.",
        "createdAt" : "2020-11-30T10:34:20Z",
        "updatedAt" : "2020-11-30T10:56:08Z",
        "lastEditedBy" : "0aa8e877-303a-4005-8f07-7003661da2a6",
        "tags" : [
        ]
      },
      {
        "id" : "7c9e14b0-6479-41fc-8ead-03ee1bfb7971",
        "parentId" : "f45db926-6701-48f7-8500-cd7c7db6f3d3",
        "authorId" : "181bcece-33df-41af-887d-5d5f51beb543",
        "body" : "This seems to work:\r\n\r\n```diff\r\ndiff --git a/bazel_tools/proto.bzl b/bazel_tools/proto.bzl\r\nindex 94d696935..4791fdfe9 100644\r\n--- a/bazel_tools/proto.bzl\r\n+++ b/bazel_tools/proto.bzl\r\n@@ -44,9 +44,7 @@ def get_plugin_runfiles(tool, plugin_runfiles):\r\n     return files\r\n \r\n def _proto_gen_impl(ctx):\r\n-    src_descs = [src[ProtoInfo].direct_descriptor_set for src in ctx.attr.srcs]\r\n-    dep_descs = [depset for dep in ctx.attr.deps for depset in dep[ProtoInfo].transitive_descriptor_sets.to_list()]\r\n-    descriptors = src_descs + dep_descs\r\n+    descriptors = [depset for src in ctx.attr.srcs for depset in src[ProtoInfo].transitive_descriptor_sets.to_list()]\r\n \r\n     sources_out = ctx.actions.declare_directory(ctx.attr.name + \"-sources\")\r\n```\r\n\r\nIs that what you meant, or is there further simplification we can do here?",
        "createdAt" : "2020-12-01T09:06:52Z",
        "updatedAt" : "2020-12-01T09:06:52Z",
        "lastEditedBy" : "181bcece-33df-41af-887d-5d5f51beb543",
        "tags" : [
        ]
      },
      {
        "id" : "caf7ce1b-1178-4d23-a2cb-95fd3b944f85",
        "parentId" : "f45db926-6701-48f7-8500-cd7c7db6f3d3",
        "authorId" : "0aa8e877-303a-4005-8f07-7003661da2a6",
        "body" : "Yes, that's what I meant. The `deps` attribute can then also be removed from the rule definition. I.e.\r\n``` diff\r\ndiff --git a/bazel_tools/proto.bzl b/bazel_tools/proto.bzl\r\nindex 94d696935b9..74cfdb142e5 100644\r\n--- a/bazel_tools/proto.bzl\r\n+++ b/bazel_tools/proto.bzl\r\n@@ -133,8 +133,7 @@ def _proto_gen_impl(ctx):\r\n proto_gen = rule(\r\n     implementation = _proto_gen_impl,\r\n     attrs = {\r\n-        \"srcs\": attr.label_list(allow_files = True),\r\n-        \"deps\": attr.label_list(providers = [ProtoInfo]),\r\n+        \"srcs\": attr.label_list(providers = [ProtoInfo]),\r\n         \"plugin_name\": attr.string(),\r\n         \"plugin_exec\": attr.label(\r\n             cfg = \"host\",\r\n```\r\n(I noticed that the definition of `srcs` is slightly off. It claims to accept files but the implementation expects a `ProtoInfo` provider)\r\n\r\n",
        "createdAt" : "2020-12-01T09:23:37Z",
        "updatedAt" : "2020-12-01T09:23:37Z",
        "lastEditedBy" : "0aa8e877-303a-4005-8f07-7003661da2a6",
        "tags" : [
        ]
      },
      {
        "id" : "d0d55d87-08ee-4487-a82a-daa0318240d4",
        "parentId" : "f45db926-6701-48f7-8500-cd7c7db6f3d3",
        "authorId" : "181bcece-33df-41af-887d-5d5f51beb543",
        "body" : "Sounds good. Here we go: https://github.com/digital-asset/daml/pull/8120",
        "createdAt" : "2020-12-01T09:44:26Z",
        "updatedAt" : "2020-12-01T09:44:26Z",
        "lastEditedBy" : "181bcece-33df-41af-887d-5d5f51beb543",
        "tags" : [
        ]
      }
    ],
    "commit" : "18099e52b11a38939236e8085b54232ec6a3de22",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +44,48 @@def _proto_gen_impl(ctx):\n    src_descs = [src[ProtoInfo].direct_descriptor_set for src in ctx.attr.srcs]\n    dep_descs = [depset for dep in ctx.attr.deps for depset in dep[ProtoInfo].transitive_descriptor_sets.to_list()]\n    descriptors = src_descs + dep_descs\n"
  },
  {
    "id" : "358e876e-9dc2-49ce-afdc-f99c298a8fdd",
    "prId" : 8084,
    "prUrl" : "https://github.com/digital-asset/daml/pull/8084",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1c444181-8679-4d15-a3f9-a4a1e210064b",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "It feels a bit weird, that this is the one thing where you specify those separately rather than via the tag.",
        "createdAt" : "2020-11-26T19:03:43Z",
        "updatedAt" : "2020-11-26T21:55:40Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "fc4c58f2-cc35-4bbf-9337-1ff813772a8d",
        "parentId" : "1c444181-8679-4d15-a3f9-a4a1e210064b",
        "authorId" : "181bcece-33df-41af-887d-5d5f51beb543",
        "body" : "I know, but it's just more flexible this way. Concatenation seems safer than splitting.",
        "createdAt" : "2020-11-26T20:20:24Z",
        "updatedAt" : "2020-11-26T21:55:40Z",
        "lastEditedBy" : "181bcece-33df-41af-887d-5d5f51beb543",
        "tags" : [
        ]
      },
      {
        "id" : "4c66e15b-7afb-4205-95e7-f336fcb0a296",
        "parentId" : "1c444181-8679-4d15-a3f9-a4a1e210064b",
        "authorId" : "0aa8e877-303a-4005-8f07-7003661da2a6",
        "body" : "Currently, `proto_jars` hides the `tags` attribute. It's usually better to expose it, as there are a couple meaningful tags that developers may want to set. However, once `tags` is exposed this will need to guard against maven coords that are provided via `tags` instead of the `maven_*` attributes.",
        "createdAt" : "2020-11-30T10:55:14Z",
        "updatedAt" : "2020-11-30T10:56:08Z",
        "lastEditedBy" : "0aa8e877-303a-4005-8f07-7003661da2a6",
        "tags" : [
        ]
      },
      {
        "id" : "13d5fedb-7e62-4597-81eb-c7933c888a12",
        "parentId" : "1c444181-8679-4d15-a3f9-a4a1e210064b",
        "authorId" : "181bcece-33df-41af-887d-5d5f51beb543",
        "body" : "I'll let whoever needs it add that. :stuck_out_tongue: \r\n\r\n(Let's be honest, it's going to be me, but at least it'll be _future_ me.)",
        "createdAt" : "2020-12-01T08:31:55Z",
        "updatedAt" : "2020-12-01T08:31:55Z",
        "lastEditedBy" : "181bcece-33df-41af-887d-5d5f51beb543",
        "tags" : [
        ]
      }
    ],
    "commit" : "18099e52b11a38939236e8085b54232ec6a3de22",
    "line" : 44,
    "diffHunk" : "@@ -1,1 +183,187 @@        file_root = None,\n        javadoc_root_packages = [],\n        maven_group = None,\n        maven_artifact_prefix = None,\n        maven_java_artifact_suffix = \"java-proto\"):"
  },
  {
    "id" : "3344369e-73e9-4be0-a78e-2a65f2b5be90",
    "prId" : 8084,
    "prUrl" : "https://github.com/digital-asset/daml/pull/8084",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7b51164e-8376-4860-b332-113d265ed125",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "Did you intend to switch `//ledger-api/grpc-definitions` over to this? I can’t find any place where you use this atm.",
        "createdAt" : "2020-11-26T19:14:43Z",
        "updatedAt" : "2020-11-26T21:55:40Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "705a423d-cd7c-4a4f-84f9-a1e2c4728247",
        "parentId" : "7b51164e-8376-4860-b332-113d265ed125",
        "authorId" : "181bcece-33df-41af-887d-5d5f51beb543",
        "body" : "I do, but I actually did this so I could use Scala bindings for the KVUtils proto.",
        "createdAt" : "2020-11-26T20:20:53Z",
        "updatedAt" : "2020-11-26T21:55:40Z",
        "lastEditedBy" : "181bcece-33df-41af-887d-5d5f51beb543",
        "tags" : [
        ]
      },
      {
        "id" : "02be6422-8cc2-4247-8c2a-8f96a9d689bf",
        "parentId" : "7b51164e-8376-4860-b332-113d265ed125",
        "authorId" : "181bcece-33df-41af-887d-5d5f51beb543",
        "body" : "(In another, future piece of work.)",
        "createdAt" : "2020-11-26T20:21:04Z",
        "updatedAt" : "2020-11-26T21:55:40Z",
        "lastEditedBy" : "181bcece-33df-41af-887d-5d5f51beb543",
        "tags" : [
        ]
      },
      {
        "id" : "8c5aee5e-e40f-4b89-ba37-98be40333e64",
        "parentId" : "7b51164e-8376-4860-b332-113d265ed125",
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "I would have switched grpc-definitions over in this PR so this isn’t just unused code but I’ll leave it up to you if you want to include it here or do it in a separate PR.",
        "createdAt" : "2020-11-27T07:58:56Z",
        "updatedAt" : "2020-11-27T07:59:07Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "06cc2cb7-79bb-4467-bb7d-68840e900819",
        "parentId" : "7b51164e-8376-4860-b332-113d265ed125",
        "authorId" : "181bcece-33df-41af-887d-5d5f51beb543",
        "body" : "It's pretty much done but I wanted to keep this a little smaller. (That's a big one in its own right. Expect it this morning.)",
        "createdAt" : "2020-11-27T08:33:20Z",
        "updatedAt" : "2020-11-27T08:33:21Z",
        "lastEditedBy" : "181bcece-33df-41af-887d-5d5f51beb543",
        "tags" : [
        ]
      }
    ],
    "commit" : "18099e52b11a38939236e8085b54232ec6a3de22",
    "line" : 118,
    "diffHunk" : "@@ -1,1 +257,261 @@            \"@maven//:com_thesamet_scalapb_scalapb_runtime_2_12\",\n        ] + [\"%s_scala\" % label for label in proto_deps] + scala_deps,\n    )"
  },
  {
    "id" : "f6b9ccad-f847-483a-9707-5ace60f69e82",
    "prId" : 8084,
    "prUrl" : "https://github.com/digital-asset/daml/pull/8084",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0706b952-4a3c-4e41-8e50-d733041926f3",
        "parentId" : null,
        "authorId" : "0aa8e877-303a-4005-8f07-7003661da2a6",
        "body" : "Why default to public visibility everywhere? This widens the visibility of some targets seemingly unnecessarily. ",
        "createdAt" : "2020-11-30T10:52:37Z",
        "updatedAt" : "2020-11-30T10:56:08Z",
        "lastEditedBy" : "0aa8e877-303a-4005-8f07-7003661da2a6",
        "tags" : [
        ]
      },
      {
        "id" : "5f051d61-6724-44ca-90e1-6a5c8f16c82b",
        "parentId" : "0706b952-4a3c-4e41-8e50-d733041926f3",
        "authorId" : "181bcece-33df-41af-887d-5d5f51beb543",
        "body" : "For convenience. These things are often published by `//release` and I was lazy. I tried copying the existing visibility but it meant having 2 or 3 `visibility` parameters, which got unwieldy.\r\n\r\nDo you have a better approach in mind?",
        "createdAt" : "2020-12-01T08:20:28Z",
        "updatedAt" : "2020-12-01T08:20:28Z",
        "lastEditedBy" : "181bcece-33df-41af-887d-5d5f51beb543",
        "tags" : [
        ]
      },
      {
        "id" : "fa8aa720-a0ee-4e0a-999e-2de2ce20f9aa",
        "parentId" : "0706b952-4a3c-4e41-8e50-d733041926f3",
        "authorId" : "0aa8e877-303a-4005-8f07-7003661da2a6",
        "body" : "I'd set a single `visibility` parameter to `proto_jars` and forward it to the rules that are actually dependencies of other targets. The rest I'd just leave at the default visibility, which is private unless specified otherwise on the package level.\r\n\r\nGrepping through the code base it looks like the following rules could remain private: `pkg_tar`, `javadoc_library`, `proto_get`, `scala_source_jar`, `scaladoc_jar`. They are either only used within `proto_jars`, or by the release script which calls `bazel build` directly and therefore isn't affected by target visibility.\r\n",
        "createdAt" : "2020-12-01T09:16:42Z",
        "updatedAt" : "2020-12-01T09:16:42Z",
        "lastEditedBy" : "0aa8e877-303a-4005-8f07-7003661da2a6",
        "tags" : [
        ]
      },
      {
        "id" : "158a3c21-743c-4dcc-90ef-37278146d5ac",
        "parentId" : "0706b952-4a3c-4e41-8e50-d733041926f3",
        "authorId" : "181bcece-33df-41af-887d-5d5f51beb543",
        "body" : "https://github.com/digital-asset/daml/pull/8121 should take care of this.",
        "createdAt" : "2020-12-01T11:10:54Z",
        "updatedAt" : "2020-12-01T11:10:55Z",
        "lastEditedBy" : "181bcece-33df-41af-887d-5d5f51beb543",
        "tags" : [
        ]
      }
    ],
    "commit" : "18099e52b11a38939236e8085b54232ec6a3de22",
    "line" : 54,
    "diffHunk" : "@@ -1,1 +193,197 @@        strip_prefix = strip_import_prefix,\n        package_dir = file_root,\n        visibility = [\"//visibility:public\"],\n    )\n"
  }
]