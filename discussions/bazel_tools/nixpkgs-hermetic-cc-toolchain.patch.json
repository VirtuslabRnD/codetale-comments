[
  {
    "id" : "36e0a73e-25ff-46d4-a00f-a9acf42cc1a2",
    "prId" : 6761,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6761",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "92f68d58-188f-44a4-baa0-d76c8d0a50be",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "Would be great to get this merged upstream.",
        "createdAt" : "2020-07-23T06:52:16Z",
        "updatedAt" : "2020-07-23T07:02:06Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "1992b340-f307-454d-bb22-7372c88bc63f",
        "parentId" : "92f68d58-188f-44a4-baa0-d76c8d0a50be",
        "authorId" : "0aa8e877-303a-4005-8f07-7003661da2a6",
        "body" : "Yes, upstream PRs are here https://github.com/tweag/rules_nixpkgs/pull/132, https://github.com/tweag/rules_nixpkgs/pull/128. I've factored out the `nixopts` location expansion into its own PR to ease review.",
        "createdAt" : "2020-07-23T07:45:56Z",
        "updatedAt" : "2020-07-23T07:45:57Z",
        "lastEditedBy" : "0aa8e877-303a-4005-8f07-7003661da2a6",
        "tags" : [
        ]
      }
    ],
    "commit" : "e5dfc1ccf7712a117fc20f148674854c71250990",
    "line" : 1,
    "diffHunk" : "@@ -1,1 +198,202 @@+depending on the cc toolchain leading to cache misses.\n+\n Example:\n \n ```bzl"
  },
  {
    "id" : "1da82b9d-b1a3-476d-9c1a-446a24a76b05",
    "prId" : 5976,
    "prUrl" : "https://github.com/digital-asset/daml/pull/5976",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "194dd14a-0163-4f7c-a44d-ea7308789eff",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "huh, does buildifier not catch this?",
        "createdAt" : "2020-05-18T06:51:23Z",
        "updatedAt" : "2020-05-18T15:01:30Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "d1f50b12-f6ea-4e47-b50f-39f38d10d7dd",
        "parentId" : "194dd14a-0163-4f7c-a44d-ea7308789eff",
        "authorId" : "0aa8e877-303a-4005-8f07-7003661da2a6",
        "body" : "`rules_nixpkgs` CI doesn't include a buildifier step right now.",
        "createdAt" : "2020-05-18T08:31:28Z",
        "updatedAt" : "2020-05-18T15:01:30Z",
        "lastEditedBy" : "0aa8e877-303a-4005-8f07-7003661da2a6",
        "tags" : [
        ]
      }
    ],
    "commit" : "bcdb916c0d94aead04759fa80443d95e751d3c95",
    "line" : 276,
    "diffHunk" : "@@ -1,1 +274,278 @@ \n constraint_value(\n-    name =  \"support_nix\",\n+    name = \"support_nix\",\n     constraint_setting = \":nix\","
  },
  {
    "id" : "7a5c9e4e-e776-4ea3-a0ee-abf8cd0e6d82",
    "prId" : 5976,
    "prUrl" : "https://github.com/digital-asset/daml/pull/5976",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0c727125-b1ec-4445-8db6-88a0c7de166e",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "This looks like it is inconsistent with how Bazel handles this kind of stuff where you have to escape the `$` if you want it to not have special meaning. Probably not a big deal.",
        "createdAt" : "2020-05-18T06:53:29Z",
        "updatedAt" : "2020-05-18T15:01:30Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "db3cf20c-f164-43ee-9b28-a8e732e58a83",
        "parentId" : "0c727125-b1ec-4445-8db6-88a0c7de166e",
        "authorId" : "0aa8e877-303a-4005-8f07-7003661da2a6",
        "body" : "I don't follow. We do want `$(location )` to have special meaning, just that here we define that special meaning with `_expand_location`. Note `$(location )` expension is not automatic, a rule has to invoke [`ctx.expand_location`](https://docs.bazel.build/versions/master/skylark/lib/ctx.html#expand_location) explicitly. However, here we are within a repository rule, so `ctx.expand_location` is not available to us.",
        "createdAt" : "2020-05-18T08:33:36Z",
        "updatedAt" : "2020-05-18T15:01:30Z",
        "lastEditedBy" : "0aa8e877-303a-4005-8f07-7003661da2a6",
        "tags" : [
        ]
      },
      {
        "id" : "ecf6ab26-f628-40f8-b1ef-1739771fb79a",
        "parentId" : "0c727125-b1ec-4445-8db6-88a0c7de166e",
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "What I mean is that only `$(location …)` has special meaning. In other contexts in Bazel where `$(location …)` has special meaning, everything starting with `$` has special meaning and you have to escape something like `$abc` whereas here you do not need the escaping.",
        "createdAt" : "2020-05-18T08:53:27Z",
        "updatedAt" : "2020-05-18T15:01:30Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "7a51fa69-0680-4266-aab8-0f703d087d8e",
        "parentId" : "0c727125-b1ec-4445-8db6-88a0c7de166e",
        "authorId" : "0aa8e877-303a-4005-8f07-7003661da2a6",
        "body" : "Oh, I see, yes that would be more consistent. location expansion is not enabled by default, so it's not a big deal here. But, yes, this should be improved upstream.",
        "createdAt" : "2020-05-18T13:46:39Z",
        "updatedAt" : "2020-05-18T15:01:30Z",
        "lastEditedBy" : "0aa8e877-303a-4005-8f07-7003661da2a6",
        "tags" : [
        ]
      }
    ],
    "commit" : "bcdb916c0d94aead04759fa80443d95e751d3c95",
    "line" : 318,
    "diffHunk" : "@@ -1,1 +316,320 @@+      The string with all instances of `$(location )` replaced by paths.\n+    \"\"\"\n+    num = string.count(\"$(location \")\n+    result = \"\"\n+    offset = 0"
  }
]