[
  {
    "id" : "fc620e53-f11a-4a47-b2d1-30dfb678c317",
    "prId" : 2574,
    "prUrl" : "https://github.com/digital-asset/daml/pull/2574",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d8e71911-3b17-49a9-8bf4-a6464f5ee620",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "@aherrmann-da I need `c2hs` to be a target for this to work but I couldn’t figure out how I could then get the path from the target so as a hacky workaround I added `c2hs_exe` which points to the file and `c2hs` which points to the target to the toolchain. What’s the non-hacky way to accomplish this?",
        "createdAt" : "2019-08-16T12:51:27Z",
        "updatedAt" : "2019-08-16T13:36:56Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "4dee0be9-0af3-4f20-8e2b-663a87eb90e0",
        "parentId" : "d8e71911-3b17-49a9-8bf4-a6464f5ee620",
        "authorId" : "0aa8e877-303a-4005-8f07-7003661da2a6",
        "body" : "Yes, the information that it's a single executable file is unfortunately lost once you only have the `Target`. The separate `c2hs_exe` seems like a good solution. I've essentially done the same [with the cc_wrapper](https://github.com/tweag/rules_haskell/pull/1039/files#diff-bd788ee16d6ba21ea60c42efea01aba3R163-R166).",
        "createdAt" : "2019-08-16T13:14:46Z",
        "updatedAt" : "2019-08-16T13:36:56Z",
        "lastEditedBy" : "0aa8e877-303a-4005-8f07-7003661da2a6",
        "tags" : [
        ]
      }
    ],
    "commit" : "3b35f8917566a0027f423a5decfd5f49f5a51818",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +23,27 @@         args.add_all([\"-C\" + x for x in version_macro_flags])\n \n+    (inputs, input_manifests) = ctx.resolve_tools(tools = [c2hs])\n+\n     hs.actions.run_shell("
  }
]