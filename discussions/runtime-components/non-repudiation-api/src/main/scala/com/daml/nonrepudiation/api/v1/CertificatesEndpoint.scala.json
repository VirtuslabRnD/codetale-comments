[
  {
    "id" : "12107292-f757-412e-b086-ce266c7493bd",
    "prId" : 8982,
    "prUrl" : "https://github.com/digital-asset/daml/pull/8982",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2ced8bd7-13c0-4d3c-9da2-a897b0f1bc67",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "what happens if I add the same certificate twice?",
        "createdAt" : "2021-03-02T15:33:14Z",
        "updatedAt" : "2021-03-04T10:06:58Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "b9229444-9499-4b47-8001-4b40a62bf99b",
        "parentId" : "2ced8bd7-13c0-4d3c-9da2-a897b0f1bc67",
        "authorId" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "body" : "Good question. My intention was to be idempotent but right know it's likely to fail on the backend, I'll add a test for this and fix it.",
        "createdAt" : "2021-03-02T18:29:54Z",
        "updatedAt" : "2021-03-04T10:06:58Z",
        "lastEditedBy" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "tags" : [
        ]
      },
      {
        "id" : "8076abe1-08be-427a-8b73-036b5ee0f076",
        "parentId" : "2ced8bd7-13c0-4d3c-9da2-a897b0f1bc67",
        "authorId" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "body" : "This requires a few changes to the PostgreSQL part, I'll merge this as is and open a separate PR to guarantee that the back-end guarantees idempotency.",
        "createdAt" : "2021-03-04T10:13:33Z",
        "updatedAt" : "2021-03-04T10:13:34Z",
        "lastEditedBy" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "tags" : [
        ]
      },
      {
        "id" : "9c46e33b-3df4-481c-9481-56d690dc57e5",
        "parentId" : "2ced8bd7-13c0-4d3c-9da2-a897b0f1bc67",
        "authorId" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "body" : "Tracked in https://github.com/digital-asset/daml/issues/9021",
        "createdAt" : "2021-03-04T10:16:14Z",
        "updatedAt" : "2021-03-04T10:16:14Z",
        "lastEditedBy" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "tags" : [
        ]
      }
    ],
    "commit" : "e7ef80b57672191ea6bc907dc5032d0d6b39271c",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +24,28 @@  import CertificatesEndpoint._\n\n  private def putCertificate(certificate: X509Certificate): Route =\n    handleExceptions(logAndReport(logger)(UnableToAddTheCertificate)) {\n      val fingerprint = certificates.put(certificate)"
  },
  {
    "id" : "66d30eec-099f-44dd-b215-1a3d0e48ed26",
    "prId" : 8982,
    "prUrl" : "https://github.com/digital-asset/daml/pull/8982",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "367a75ad-c818-41ce-aae4-fba17a3dab99",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "Related question to the one above, if weâ€™re not idempotent, we probably want post. Couldnâ€™t find a test to check whether we are.",
        "createdAt" : "2021-03-02T15:33:53Z",
        "updatedAt" : "2021-03-04T10:06:58Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "ee8c9ab3-81d4-4c5b-ae5d-37b5c310c387",
        "parentId" : "367a75ad-c818-41ce-aae4-fba17a3dab99",
        "authorId" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "body" : "Follow-up in https://github.com/digital-asset/daml/pull/8982#discussion_r585666749",
        "createdAt" : "2021-03-04T10:12:34Z",
        "updatedAt" : "2021-03-04T10:12:34Z",
        "lastEditedBy" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "tags" : [
        ]
      }
    ],
    "commit" : "e7ef80b57672191ea6bc907dc5032d0d6b39271c",
    "line" : 41,
    "diffHunk" : "@@ -1,1 +39,43 @@  private val route: Route =\n    concat(\n      put {\n        decodeRequest {\n          entity(as[CertificatesEndpoint.Certificate]) {"
  },
  {
    "id" : "506153c1-875f-4428-bde8-70bd80a5a143",
    "prId" : 8982,
    "prUrl" : "https://github.com/digital-asset/daml/pull/8982",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4efedda2-c133-43a9-84bc-440843bc61cb",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "what does url-safe mean here? I thought this is in the post body not a query param.",
        "createdAt" : "2021-03-02T15:35:32Z",
        "updatedAt" : "2021-03-04T10:06:58Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "85df9bfb-85b2-4d49-aae5-8939aa14a5bd",
        "parentId" : "4efedda2-c133-43a9-84bc-440843bc61cb",
        "authorId" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "body" : "https://tools.ietf.org/html/rfc4648#page-7",
        "createdAt" : "2021-03-02T18:27:22Z",
        "updatedAt" : "2021-03-04T10:06:58Z",
        "lastEditedBy" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "tags" : [
        ]
      },
      {
        "id" : "247b9dd4-b0e2-49bd-a085-c41888afacfb",
        "parentId" : "4efedda2-c133-43a9-84bc-440843bc61cb",
        "authorId" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "body" : "I assumed this was common knowledge but I can add a link to the RFC if you think that makes sense.",
        "createdAt" : "2021-03-02T18:27:56Z",
        "updatedAt" : "2021-03-04T10:06:58Z",
        "lastEditedBy" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "tags" : [
        ]
      },
      {
        "id" : "f0eff78b-a8f6-4767-8a7f-92fc8b07394c",
        "parentId" : "4efedda2-c133-43a9-84bc-440843bc61cb",
        "authorId" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "body" : "(the assumption was towards the user, not towards you ðŸ˜‰)",
        "createdAt" : "2021-03-02T18:28:13Z",
        "updatedAt" : "2021-03-04T10:06:58Z",
        "lastEditedBy" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "tags" : [
        ]
      },
      {
        "id" : "ba3b4ed8-070b-4e6a-b6ca-8399ffb5e53b",
        "parentId" : "4efedda2-c133-43a9-84bc-440843bc61cb",
        "authorId" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "body" : "> I thought this is in the post body not a query param.\r\n\r\n~It would be `/v1/certificate/<fingerprint>`.~",
        "createdAt" : "2021-03-02T19:05:35Z",
        "updatedAt" : "2021-03-04T10:06:58Z",
        "lastEditedBy" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "tags" : [
        ]
      },
      {
        "id" : "acf7bc7b-b730-4fab-b51b-e38786ba6e74",
        "parentId" : "4efedda2-c133-43a9-84bc-440843bc61cb",
        "authorId" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "body" : "Whoops, sorry, I misread it. Yes, it's in the body. I just preferred to use a single encoding, does that make sense?",
        "createdAt" : "2021-03-02T19:12:11Z",
        "updatedAt" : "2021-03-04T10:06:58Z",
        "lastEditedBy" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "tags" : [
        ]
      },
      {
        "id" : "ecfd7c6d-370e-424d-8b2f-42f4603c500f",
        "parentId" : "4efedda2-c133-43a9-84bc-440843bc61cb",
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "Sorry for being unclear. I wasnâ€™t asking what url-safe means, I was asking why we care about it if itâ€™s not in the url and therefore also why we base64 encode it.\r\n\r\nIâ€™m not opposed to using base64 encoding here as well but I think you can make a reasonable argument that the ux is slightly nicer for sending the unencoded contents in something like a multi-part form request, e.g., you can pass it via `-F \"parametername=@filename\"` to curl whereas you have to call `base64` yourself.\r\n\r\nHow about the following approach for now:\r\n1. Remove the comment on url-safe since it is misleading given that it is not in a url (the rest of the comment can stay)\r\n2. Stick with base64 for now. Weâ€™re early access so we could break it if we want to and even if we donâ€™t and we decide the multi-part is sufficiently nicer, keeping both around is relatively cheap.",
        "createdAt" : "2021-03-03T00:52:24Z",
        "updatedAt" : "2021-03-04T10:06:58Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "a02bb0e9-c128-441c-8c69-419a28530271",
        "parentId" : "4efedda2-c133-43a9-84bc-440843bc61cb",
        "authorId" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "body" : "Ok.",
        "createdAt" : "2021-03-03T08:32:06Z",
        "updatedAt" : "2021-03-04T10:06:58Z",
        "lastEditedBy" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "tags" : [
        ]
      },
      {
        "id" : "8aa3c7d0-1fc6-4fc0-8acb-1d95fc214c09",
        "parentId" : "4efedda2-c133-43a9-84bc-440843bc61cb",
        "authorId" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "body" : "After some thinking, I'm not 100% sure about this. It would mean we would have places where we use base64 encoding and other where we use base64 URL-safe encoding (`GET /v1/certificate/<fingerprint>`). Are you sure it makes sense to use two different encodings? In particular, if we decide to use base64 encoding in all cases where a URL is not involved, it would mean we would return a base64 encoded fingerprint when uploading a certificate but then we would require a base64 URL-safe encoding to retrieve it.",
        "createdAt" : "2021-03-03T09:56:18Z",
        "updatedAt" : "2021-03-04T10:06:58Z",
        "lastEditedBy" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "tags" : [
        ]
      },
      {
        "id" : "edf9e59d-8c04-4282-9d44-238c09dc1f81",
        "parentId" : "4efedda2-c133-43a9-84bc-440843bc61cb",
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "I think Iâ€™m confused, I thought this was only about the format used when uploading the certificate. I fully agree that the fingerprint returned in the response to that should be the same format as the one in the URL.",
        "createdAt" : "2021-03-03T10:03:04Z",
        "updatedAt" : "2021-03-04T10:06:58Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "09504e30-6a08-4481-9ce6-46b197cac276",
        "parentId" : "4efedda2-c133-43a9-84bc-440843bc61cb",
        "authorId" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "body" : "Sure, I was wondering if it makes sense to use two different encodings, even though it's not strictly needed to be URL-safe for certificates. Since we're forced to use URL-safe encoding for fingerprints, does it make sense to use a different encoding for certificates? I'm mostly trying to understand what an API user would think would make more sense.",
        "createdAt" : "2021-03-03T10:07:14Z",
        "updatedAt" : "2021-03-04T10:06:58Z",
        "lastEditedBy" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "tags" : [
        ]
      },
      {
        "id" : "f19f4bec-3776-4dbe-87dc-7198b225afc6",
        "parentId" : "4efedda2-c133-43a9-84bc-440843bc61cb",
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "I guess I view the certificate as binary data which I already have (the certificate lies around somewhere locally) while I view the fingerprint as an opaque string that is returned and produced by the API. So I think itâ€™s not entirely unreasonable to have different encodings for them. That said, I think two different base64 encodings are confusing as you mentioned and doesnâ€™t solve anything So I think we have the following two options:\r\n\r\n1. Use url-safe base64 encoding everywhere, i.e., do what you have. Probably just needs a comment somewhere on why we do this for cases where something is not in a url.\r\n2. Use url-safe base64 encoding for things that are strings and/or used in urls, e.g., fingerprints. Upload binary data like certificates without base64 encoding them first, e.g., as multipart form requests.\r\n\r\nI would suggest to go with 1 for now and keep the option open to later add/switch to 2 but I donâ€™t feel strongly about this so if you disagree, happy to go with your approach instead.",
        "createdAt" : "2021-03-03T10:18:36Z",
        "updatedAt" : "2021-03-04T10:06:58Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "fac5a37b-d09a-4c5e-85d5-6871f8c19db2",
        "parentId" : "4efedda2-c133-43a9-84bc-440843bc61cb",
        "authorId" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "body" : "Ok, I'll go with number 1 for now then and keep URL-safe base64 encoding everywhere. At this point changing this behavior at a later point is really not difficult. Thanks for the feedback!",
        "createdAt" : "2021-03-03T10:24:39Z",
        "updatedAt" : "2021-03-04T10:06:58Z",
        "lastEditedBy" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "tags" : [
        ]
      },
      {
        "id" : "6fa33a4a-c2e7-40d1-b424-e2c309306deb",
        "parentId" : "4efedda2-c133-43a9-84bc-440843bc61cb",
        "authorId" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "body" : "Addressed by https://github.com/digital-asset/daml/pull/8982/commits/e7ef80b57672191ea6bc907dc5032d0d6b39271c",
        "createdAt" : "2021-03-04T10:11:45Z",
        "updatedAt" : "2021-03-04T10:11:45Z",
        "lastEditedBy" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "tags" : [
        ]
      }
    ],
    "commit" : "e7ef80b57672191ea6bc907dc5032d0d6b39271c",
    "line" : 65,
    "diffHunk" : "@@ -1,1 +63,67 @@\n  private[api] val InvalidCertificateString: String =\n    \"Invalid upload, the 'certificate' field must contain a URL-safe base64-encoded X.509 certificate\"\n\n  private[api] val InvalidCertificateFormat: String ="
  }
]