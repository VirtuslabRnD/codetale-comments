[
  {
    "id" : "c9951989-a039-4fd9-98c0-df79149d0c18",
    "prId" : 8608,
    "prUrl" : "https://github.com/digital-asset/daml/pull/8608",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f525f41f-4cba-4a39-85df-d6dfb98764a0",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "It’s been ages since I’ve written Java singletons. At the time, it seemed more common to initiailze the instance lazily. Is there a good reason to chose this approach over the lazy one? When does it matter?",
        "createdAt" : "2021-01-25T14:54:49Z",
        "updatedAt" : "2021-01-26T13:25:24Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "22cdb9b2-1c08-4d37-80d6-666eb96d9167",
        "parentId" : "f525f41f-4cba-4a39-85df-d6dfb98764a0",
        "authorId" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "body" : "I think it matters if you have singletons that contain big (possibly stateful) data. For a very small, stateless object like this one I don't think that lazy initialization is particularly important.",
        "createdAt" : "2021-01-25T15:52:38Z",
        "updatedAt" : "2021-01-26T13:25:24Z",
        "lastEditedBy" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "tags" : [
        ]
      },
      {
        "id" : "9f6ab00b-eff6-4168-be8b-f68be7b78631",
        "parentId" : "f525f41f-4cba-4a39-85df-d6dfb98764a0",
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "Makes sense :+1:",
        "createdAt" : "2021-01-25T16:25:23Z",
        "updatedAt" : "2021-01-26T13:25:24Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      }
    ],
    "commit" : "99819c1f8437de5877cbbfb63eccc98fdf9b6588",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +15,19 @@    private ByteMarshaller() {}\n\n    public static final ByteMarshaller INSTANCE = new ByteMarshaller();\n\n    @Override"
  }
]