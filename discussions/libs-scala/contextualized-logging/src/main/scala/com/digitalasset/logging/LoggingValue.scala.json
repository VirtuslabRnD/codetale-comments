[
  {
    "id" : "caad2bdb-b57f-422d-80ab-7319f9b39d5c",
    "prId" : 10134,
    "prUrl" : "https://github.com/digital-asset/daml/pull/10134",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6ac2fe5a-2506-40f3-a13c-e0170454eb6f",
        "parentId" : null,
        "authorId" : "4c501a40-3340-4f35-b66e-fcfb75e20f37",
        "body" : "You _could_ avoid the inner boxing layer on the elements by adding an existential here. It's always the same for every element, anyway. Then you'd add some GADT stuff to `LoggingValueSerializer`...totally up to you whether you want to try to get that working, it's a not-insignificant design change.",
        "createdAt" : "2021-06-28T16:12:32Z",
        "updatedAt" : "2021-06-28T16:13:55Z",
        "lastEditedBy" : "4c501a40-3340-4f35-b66e-fcfb75e20f37",
        "tags" : [
        ]
      },
      {
        "id" : "7b70719b-dc52-435a-86e7-c3342c45f460",
        "parentId" : "6ac2fe5a-2506-40f3-a13c-e0170454eb6f",
        "authorId" : "181bcece-33df-41af-887d-5d5f51beb543",
        "body" : "I _think_ I understand what you mean here. I was trying to avoid type parameters at all for `LoggingValue` (hence `ToLoggingValue`'s existence), mostly because I think it will pollute the API. Can you see a way to do this without making the API more confusing?",
        "createdAt" : "2021-06-28T16:16:25Z",
        "updatedAt" : "2021-06-28T16:16:25Z",
        "lastEditedBy" : "181bcece-33df-41af-887d-5d5f51beb543",
        "tags" : [
        ]
      },
      {
        "id" : "851c9b79-7680-4a63-9501-a483f06eb51e",
        "parentId" : "6ac2fe5a-2506-40f3-a13c-e0170454eb6f",
        "authorId" : "4c501a40-3340-4f35-b66e-fcfb75e20f37",
        "body" : "Type parameters occur only within the data constructors; I do not consider `OfIterable` to be a part of the API, so to speak.",
        "createdAt" : "2021-06-28T16:17:51Z",
        "updatedAt" : "2021-06-28T16:17:51Z",
        "lastEditedBy" : "4c501a40-3340-4f35-b66e-fcfb75e20f37",
        "tags" : [
        ]
      },
      {
        "id" : "7b4096f4-12e1-460f-97cf-67c7bbdc810b",
        "parentId" : "6ac2fe5a-2506-40f3-a13c-e0170454eb6f",
        "authorId" : "181bcece-33df-41af-887d-5d5f51beb543",
        "body" : "Oh, I see, that might work. I'll look into it but in a separate change; as you said, it's not insignificant and I'm not so knowledgeable about existentials.\r\n\r\nIf you feel like doing it at some point today, feel free. Otherwise I'll give it a crack once this is in.",
        "createdAt" : "2021-06-28T16:53:39Z",
        "updatedAt" : "2021-06-28T16:53:40Z",
        "lastEditedBy" : "181bcece-33df-41af-887d-5d5f51beb543",
        "tags" : [
        ]
      }
    ],
    "commit" : "2243e75fc92d049e58435a571fbdb283bd1cd402",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +19,23 @@  final case class OfLong(value: Long) extends LoggingValue\n\n  final case class OfIterable(sequence: Iterable[LoggingValue]) extends LoggingValue\n\n  trait ToLoggingValue[-T] {"
  }
]