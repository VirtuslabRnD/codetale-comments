[
  {
    "id" : "cf4cbbf0-f043-4fd0-888b-083f8a4fda4d",
    "prId" : 8481,
    "prUrl" : "https://github.com/digital-asset/daml/pull/8481",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "38e8d8e3-cbe5-4120-b06d-ca71775fdfa4",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "I realize you might have copied that from my hacked up prototype and I know that I did it this way because I couldn’t figure out another way but let me ask anyway: Can we stream this instead of materializing the input and output fully? It seems like it should work but I couldn’t quite figure out how to plug it together.",
        "createdAt" : "2021-01-12T16:40:30Z",
        "updatedAt" : "2021-01-13T14:14:29Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "55e1b659-2035-4730-aedc-2c66cf6cd70b",
        "parentId" : "38e8d8e3-cbe5-4120-b06d-ca71775fdfa4",
        "authorId" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "body" : "I asked myself the same question, but without copying I had weird errors when running the conformance test suite on the proxied sandbox.",
        "createdAt" : "2021-01-12T17:02:58Z",
        "updatedAt" : "2021-01-13T14:14:29Z",
        "lastEditedBy" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "tags" : [
        ]
      },
      {
        "id" : "273c3d56-3a99-480a-bebf-4c7dfab35ada",
        "parentId" : "38e8d8e3-cbe5-4120-b06d-ca71775fdfa4",
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "yeah that sounds similar to what I was seeing. it looked like something might have been too lazy and was leaking resources but I couldn’t quite pin it down or fix it. Totally fine to ignore it for now.\r\n\r\nOn a related note since you mentioned it: should we have a test that runs the ledger api test tool against the proxied sandbox? Doesn’t have to be in this PR.",
        "createdAt" : "2021-01-12T17:04:54Z",
        "updatedAt" : "2021-01-13T14:14:29Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "46b2923d-86e9-41a1-8cf6-57865e739446",
        "parentId" : "38e8d8e3-cbe5-4120-b06d-ca71775fdfa4",
        "authorId" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "body" : "I considered it. Does it make sense to add it here? Or does it make more sense (although it's more complicated) to have this as an integration test on the non-repudiation middleware?",
        "createdAt" : "2021-01-13T13:43:05Z",
        "updatedAt" : "2021-01-13T14:14:29Z",
        "lastEditedBy" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "tags" : [
        ]
      },
      {
        "id" : "2219cdd5-9c03-40e8-b333-ad8d9e7307fd",
        "parentId" : "38e8d8e3-cbe5-4120-b06d-ca71775fdfa4",
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "Just adding it to the non-repudiation middleware seems sufficient. I guess if we really want to we could also add it to both but I don’t see too much benefit.",
        "createdAt" : "2021-01-13T13:45:31Z",
        "updatedAt" : "2021-01-13T14:14:29Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "2e53411b-08e6-4d80-be7c-5e515db97881",
        "parentId" : "38e8d8e3-cbe5-4120-b06d-ca71775fdfa4",
        "authorId" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "body" : "If the reverse proxy grows in scope it will probably make sense to add more tests. for sure.",
        "createdAt" : "2021-01-13T14:20:11Z",
        "updatedAt" : "2021-01-13T14:20:11Z",
        "lastEditedBy" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "tags" : [
        ]
      }
    ],
    "commit" : "a4a7b9021935fa081adcc2f535ca7185dfb0cc12",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +20,24 @@\n  private object ByteArrayMarshaller extends MethodDescriptor.Marshaller[Array[Byte]] {\n    override def parse(input: InputStream): Array[Byte] = ByteStreams.toByteArray(input)\n    override def stream(bytes: Array[Byte]): InputStream = new ByteArrayInputStream(bytes)\n  }"
  }
]