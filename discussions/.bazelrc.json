[
  {
    "id" : "faee8416-9c62-49fb-9558-21ef3c7c71f0",
    "prId" : 48522,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/48522#pullrequestreview-635663529",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b6709003-ed68-4be7-a27e-18598f3eaea4",
        "parentId" : null,
        "authorId" : "86ac81e0-c752-48e1-ab1f-2754e8fe88ef",
        "body" : "@yongtang I think this is already being done here:\r\nhttps://github.com/tensorflow/tensorflow/blob/master/.bazelrc#L255-L259",
        "createdAt" : "2021-04-14T14:00:16Z",
        "updatedAt" : "2021-04-27T14:56:57Z",
        "lastEditedBy" : "86ac81e0-c752-48e1-ab1f-2754e8fe88ef",
        "tags" : [
        ]
      },
      {
        "id" : "108af210-7e63-4806-96e3-cd7725d22121",
        "parentId" : "b6709003-ed68-4be7-a27e-18598f3eaea4",
        "authorId" : "86ac81e0-c752-48e1-ab1f-2754e8fe88ef",
        "body" : "okay I think those are specific to `build:noaws` and `build:nohdfs`. Resolving this.",
        "createdAt" : "2021-04-14T14:03:53Z",
        "updatedAt" : "2021-04-27T14:56:57Z",
        "lastEditedBy" : "86ac81e0-c752-48e1-ab1f-2754e8fe88ef",
        "tags" : [
        ]
      },
      {
        "id" : "5710f02e-8449-4560-b470-c94fcc946ca6",
        "parentId" : "b6709003-ed68-4be7-a27e-18598f3eaea4",
        "authorId" : "04d6768a-662f-42f5-9152-0bb9c7d64855",
        "body" : "@kvignesh1420 the other place is only invoked when `noaws` is passed to bazel build, which is not the default behavior. The change in this PR is to invoke even when `noaws` is not passed to bazel build.",
        "createdAt" : "2021-04-14T14:04:02Z",
        "updatedAt" : "2021-04-27T14:56:57Z",
        "lastEditedBy" : "04d6768a-662f-42f5-9152-0bb9c7d64855",
        "tags" : [
        ]
      },
      {
        "id" : "d6da3c86-dad5-4757-81df-addfa6beb68c",
        "parentId" : "b6709003-ed68-4be7-a27e-18598f3eaea4",
        "authorId" : "86ac81e0-c752-48e1-ab1f-2754e8fe88ef",
        "body" : "yes",
        "createdAt" : "2021-04-14T14:06:56Z",
        "updatedAt" : "2021-04-27T14:56:57Z",
        "lastEditedBy" : "86ac81e0-c752-48e1-ab1f-2754e8fe88ef",
        "tags" : [
        ]
      }
    ],
    "commit" : "cb1acd24ae90327bd3df75d848913d6f5806e797",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +146,150 @@build --define=no_aws_support=true\nbuild --define=no_hdfs_support=true\n\n# Default options should come above this line.\n"
  },
  {
    "id" : "ecd5cf3a-799a-4674-bd7a-bc7418cabe7f",
    "prId" : 39420,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/39420#pullrequestreview-410503859",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fc597afa-8a69-417a-964f-00db0f24a38a",
        "parentId" : null,
        "authorId" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "body" : "Please add a comment explaining what this config does (oneDNN using Eigen threadpool instead of OpenMP by default).",
        "createdAt" : "2020-05-13T00:05:37Z",
        "updatedAt" : "2020-05-13T21:58:52Z",
        "lastEditedBy" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "tags" : [
        ]
      }
    ],
    "commit" : "8a25406f8a6260dee347512f1cb2d44634cc4977",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +145,149 @@\n# config to build OneDNN backend with a user specified threadpool.\nbuild:mkl_threadpool --define=build_with_mkl=true --define=enable_mkl=true\nbuild:mkl_threadpool --define=tensorflow_mkldnn_contraction_kernel=0\nbuild:mkl_threadpool --define=build_with_mkldnn_threadpool=true"
  },
  {
    "id" : "a7c56b67-e0a5-407e-bde2-ce34d3e3bc3b",
    "prId" : 37106,
    "prUrl" : "https://github.com/tensorflow/tensorflow/pull/37106#pullrequestreview-366079067",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b5ce320a-0fb9-4378-a6f6-76cc0693607a",
        "parentId" : null,
        "authorId" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "body" : "Should we make `mkl_open_source_only` use v1.2 too?",
        "createdAt" : "2020-02-27T21:33:48Z",
        "updatedAt" : "2020-02-27T21:33:49Z",
        "lastEditedBy" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "tags" : [
        ]
      },
      {
        "id" : "6c941dfd-caee-4f2d-accc-59e2be711c29",
        "parentId" : "b5ce320a-0fb9-4378-a6f6-76cc0693607a",
        "authorId" : "f1b3c014-4b6e-43e3-b9bc-45605cfc1356",
        "body" : "That's a good point, Penporn. If we add v1.2 to that config option, then it would enable v1.2 always (as a default in mkl config and in open_source_only version). Currently, v0.21.3 is a default version if one uses `mkl_open_source_only` option. If we add v1.2 to that option, then there would not be a way to build with v0.21.3 (if one needs to). Also, if we add v1.2 to that option, then we should also clean up all of v0.21.3 support (which is not there in this PR). So better to leave this option as it is, and we will clean it up later when we are removing complete support for v0.21.3. Does that sound reasonable?",
        "createdAt" : "2020-02-27T23:26:15Z",
        "updatedAt" : "2020-02-27T23:26:15Z",
        "lastEditedBy" : "f1b3c014-4b6e-43e3-b9bc-45605cfc1356",
        "tags" : [
        ]
      },
      {
        "id" : "8b1e84bc-97ea-4110-96fe-1ced376f4504",
        "parentId" : "b5ce320a-0fb9-4378-a6f6-76cc0693607a",
        "authorId" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "body" : "That's a good point. Let's keep it this way then. Thank you for the explanation! :)",
        "createdAt" : "2020-02-27T23:31:40Z",
        "updatedAt" : "2020-02-27T23:31:40Z",
        "lastEditedBy" : "72acf7f0-6473-4b57-a71f-2a44410818c5",
        "tags" : [
        ]
      },
      {
        "id" : "0d73267c-f262-47bd-976d-50a9148472f5",
        "parentId" : "b5ce320a-0fb9-4378-a6f6-76cc0693607a",
        "authorId" : "f1b3c014-4b6e-43e3-b9bc-45605cfc1356",
        "body" : "OK, thanks!",
        "createdAt" : "2020-02-27T23:48:49Z",
        "updatedAt" : "2020-02-27T23:48:49Z",
        "lastEditedBy" : "f1b3c014-4b6e-43e3-b9bc-45605cfc1356",
        "tags" : [
        ]
      }
    ],
    "commit" : "e76e68928fe1c2a9a4c4e0b47c7478dbdf60b8bf",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +140,144 @@build:mkl -c opt\n\n# This config option is used to enable MKL-DNN open source library only,\n# without depending on MKL binary version.\nbuild:mkl_open_source_only --define=build_with_mkl_dnn_only=true"
  }
]