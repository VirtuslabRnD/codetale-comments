[
  {
    "id" : "7e21dc73-1ae1-43b8-bda3-143f6adb79ba",
    "prId" : 2651,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "30fc7960-8127-49c6-994e-a05910137981",
        "parentId" : null,
        "authorId" : "dc1b97a5-fd2a-42fb-95ec-ee25163bcb8b",
        "body" : "`class IAuthDriver`. Seems wrong \n",
        "createdAt" : "2014-08-09T08:09:01Z",
        "updatedAt" : "2014-08-15T13:51:20Z",
        "lastEditedBy" : "dc1b97a5-fd2a-42fb-95ec-ee25163bcb8b",
        "tags" : [
        ]
      },
      {
        "id" : "23cfa841-86db-4edc-8bae-bddcc198fe2d",
        "parentId" : "30fc7960-8127-49c6-994e-a05910137981",
        "authorId" : "dc1b97a5-fd2a-42fb-95ec-ee25163bcb8b",
        "body" : "I see you are using it as a basis to `extend` other classes. This is potentially a useful pattern to overcome this limitation : https://github.com/Microsoft/TypeScript/issues/371 \n\n@vvakame @Bartvds should we allow this or should we always force the duplication of code (copy the implementation in each class) like we have done traditionally? \n",
        "createdAt" : "2014-08-09T08:11:43Z",
        "updatedAt" : "2014-08-15T13:51:20Z",
        "lastEditedBy" : "dc1b97a5-fd2a-42fb-95ec-ee25163bcb8b",
        "tags" : [
        ]
      },
      {
        "id" : "58488297-d0c6-44d5-b5ff-ac730e27c2a8",
        "parentId" : "30fc7960-8127-49c6-994e-a05910137981",
        "authorId" : "1ca557cb-9bb4-423a-b1d5-159e2bc35c32",
        "body" : "I think this is good to merge if this is good for user( @xperiments ).\nsuggestion: write this url to .d.ts.\n",
        "createdAt" : "2014-08-09T14:39:09Z",
        "updatedAt" : "2014-08-15T13:51:20Z",
        "lastEditedBy" : "1ca557cb-9bb4-423a-b1d5-159e2bc35c32",
        "tags" : [
        ]
      }
    ],
    "commit" : "ee6f317c09bebe1e398b155793338967f6efd34c",
    "line" : 297,
    "diffHunk" : "@@ -1,1 +292,296 @@\n        class IAuthDriver {\n            doAuthorize(authUrl: string, stateParam: string, client: Client, callback?: QueryParamsCallback): void;\n        }\n"
  }
]