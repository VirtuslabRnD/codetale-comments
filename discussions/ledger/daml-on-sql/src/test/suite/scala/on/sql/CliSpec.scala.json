[
  {
    "id" : "e08cd9f5-3a1f-4b33-8559-922eb42bbf2c",
    "prId" : 7941,
    "prUrl" : "https://github.com/digital-asset/daml/pull/7941",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "85840fe4-86aa-4186-b9ab-45beb0147a12",
        "parentId" : null,
        "authorId" : "eb431011-3221-41ae-bf30-e72dde278004",
        "body" : "The parameter `--implicit-party-allocation` is not available for the DAML on SQL CLI. This parse probably returns `None` because it cannot find a definition of that parameter.",
        "createdAt" : "2020-11-11T08:22:33Z",
        "updatedAt" : "2020-11-16T10:21:10Z",
        "lastEditedBy" : "eb431011-3221-41ae-bf30-e72dde278004",
        "tags" : [
        ]
      },
      {
        "id" : "11dcd858-333a-49b1-95e0-1dfb5ae7b17b",
        "parentId" : "85840fe4-86aa-4186-b9ab-45beb0147a12",
        "authorId" : "1d70ec7b-8793-4cc6-95c8-fac6f7816dcc",
        "body" : "Oh true, it is not parsed by CommonCli but by Sandbox next. Removed checks.",
        "createdAt" : "2020-11-11T08:34:12Z",
        "updatedAt" : "2020-11-16T10:21:10Z",
        "lastEditedBy" : "1d70ec7b-8793-4cc6-95c8-fac6f7816dcc",
        "tags" : [
        ]
      }
    ],
    "commit" : "95c4c433a5f4aada404726e1ea0950d65e1694f7",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +50,54 @@    \"reject implicit party allocation\" in {\n      val config =\n        cli.parse(Array(\"--ledgerid\", \"test-ledger\", \"--implicit-party-allocation\", \"true\"))\n      config shouldEqual None\n    }"
  },
  {
    "id" : "7cc1e311-1a44-41f3-b743-880e7719d62c",
    "prId" : 7940,
    "prUrl" : "https://github.com/digital-asset/daml/pull/7940",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3b2ecfc0-ba0f-49ab-8a99-17b83ea06f82",
        "parentId" : null,
        "authorId" : "181bcece-33df-41af-887d-5d5f51beb543",
        "body" : "Please refresh this in a `beforeEach` before each test, instead of hoping that the test will correctly clean it up.",
        "createdAt" : "2020-11-11T07:58:48Z",
        "updatedAt" : "2020-11-11T09:14:49Z",
        "lastEditedBy" : "181bcece-33df-41af-887d-5d5f51beb543",
        "tags" : [
        ]
      },
      {
        "id" : "95161e96-9d82-4559-b87b-a7a020b3cbaf",
        "parentId" : "3b2ecfc0-ba0f-49ab-8a99-17b83ea06f82",
        "authorId" : "1d70ec7b-8793-4cc6-95c8-fac6f7816dcc",
        "body" : "Done.",
        "createdAt" : "2020-11-11T08:23:00Z",
        "updatedAt" : "2020-11-11T09:14:49Z",
        "lastEditedBy" : "1d70ec7b-8793-4cc6-95c8-fac6f7816dcc",
        "tags" : [
        ]
      },
      {
        "id" : "4d6def0d-48bc-4a52-b5aa-daf2f1d2c02a",
        "parentId" : "3b2ecfc0-ba0f-49ab-8a99-17b83ea06f82",
        "authorId" : "181bcece-33df-41af-887d-5d5f51beb543",
        "body" : "Looks good. I'm not a big fan of mutable values in singleton objects; perhaps this can be moved to the class?",
        "createdAt" : "2020-11-11T09:17:49Z",
        "updatedAt" : "2020-11-11T09:17:49Z",
        "lastEditedBy" : "181bcece-33df-41af-887d-5d5f51beb543",
        "tags" : [
        ]
      }
    ],
    "commit" : "4f9a4b5e49a8f056971f25ec2e5feedca431eca5",
    "line" : 66,
    "diffHunk" : "@@ -1,1 +91,95 @@\nobject CliSpec {\n  private val fakeEnv = mutable.Map[String, String]()\n}"
  },
  {
    "id" : "030fe7cb-772a-499f-9618-f783c50fbeff",
    "prId" : 7940,
    "prUrl" : "https://github.com/digital-asset/daml/pull/7940",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "14b6f2a0-4339-4dd8-83b1-27148d7ca688",
        "parentId" : null,
        "authorId" : "181bcece-33df-41af-887d-5d5f51beb543",
        "body" : "Can you add a test to ensure that it fails when the environment variable is not set? I think right now it's a no-op, which is not what I'd expect.",
        "createdAt" : "2020-11-11T07:59:16Z",
        "updatedAt" : "2020-11-11T09:14:49Z",
        "lastEditedBy" : "181bcece-33df-41af-887d-5d5f51beb543",
        "tags" : [
        ]
      },
      {
        "id" : "ad03aea5-2c6e-4895-be02-c2e0518c336f",
        "parentId" : "14b6f2a0-4339-4dd8-83b1-27148d7ca688",
        "authorId" : "1d70ec7b-8793-4cc6-95c8-fac6f7816dcc",
        "body" : "Actually, I meant it like this, i.e. if it's not set it will fall back on using the one on command line (if provided, else it will fail). Do you think it's tricky?",
        "createdAt" : "2020-11-11T08:21:29Z",
        "updatedAt" : "2020-11-11T09:14:49Z",
        "lastEditedBy" : "1d70ec7b-8793-4cc6-95c8-fac6f7816dcc",
        "tags" : [
        ]
      },
      {
        "id" : "7da12e0e-1115-492d-859b-e2451353ae3f",
        "parentId" : "14b6f2a0-4339-4dd8-83b1-27148d7ca688",
        "authorId" : "181bcece-33df-41af-887d-5d5f51beb543",
        "body" : "I think it could be confusing and possibly dangerous. If I make a typo in the environment variable name, falling back is definitely _not_ what I'd expect.",
        "createdAt" : "2020-11-11T08:32:42Z",
        "updatedAt" : "2020-11-11T09:14:49Z",
        "lastEditedBy" : "181bcece-33df-41af-887d-5d5f51beb543",
        "tags" : [
        ]
      },
      {
        "id" : "9dac8159-9b28-45d1-9923-1681ed944a54",
        "parentId" : "14b6f2a0-4339-4dd8-83b1-27148d7ca688",
        "authorId" : "1d70ec7b-8793-4cc6-95c8-fac6f7816dcc",
        "body" : "Yes, I agree, especially considering this is a security feature. I'll add the check.",
        "createdAt" : "2020-11-11T08:48:01Z",
        "updatedAt" : "2020-11-11T09:14:49Z",
        "lastEditedBy" : "1d70ec7b-8793-4cc6-95c8-fac6f7816dcc",
        "tags" : [
        ]
      },
      {
        "id" : "0a2a181f-5316-4ad4-b79c-b458c189c5b2",
        "parentId" : "14b6f2a0-4339-4dd8-83b1-27148d7ca688",
        "authorId" : "1d70ec7b-8793-4cc6-95c8-fac6f7816dcc",
        "body" : "Done.",
        "createdAt" : "2020-11-11T09:17:59Z",
        "updatedAt" : "2020-11-11T09:17:59Z",
        "lastEditedBy" : "1d70ec7b-8793-4cc6-95c8-fac6f7816dcc",
        "tags" : [
        ]
      }
    ],
    "commit" : "4f9a4b5e49a8f056971f25ec2e5feedca431eca5",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +61,65 @@    }\n\n    \"accept a PostgreSQL JDBC URL from sql-backend-jdbcurl-env\" in {\n      val jdbcUrl = \"jdbc:postgresql://\"\n      fakeEnv += \"JDBC_URL\" -> jdbcUrl"
  }
]