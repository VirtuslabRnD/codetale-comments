[
  {
    "id" : "bf14c6e5-ba6c-4d39-8346-22f406401421",
    "prId" : 6387,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6387",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8b2fa1f6-50f6-4a95-8d15-8a0226efe338",
        "parentId" : null,
        "authorId" : "181bcece-33df-41af-887d-5d5f51beb543",
        "body" : "This seems unnecessary.",
        "createdAt" : "2020-06-18T07:39:02Z",
        "updatedAt" : "2020-06-18T07:51:56Z",
        "lastEditedBy" : "181bcece-33df-41af-887d-5d5f51beb543",
        "tags" : [
        ]
      },
      {
        "id" : "a62ab5b6-8a9a-4c49-81a5-dd08a801661c",
        "parentId" : "8b2fa1f6-50f6-4a95-8d15-8a0226efe338",
        "authorId" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "body" : "I believe it's used by `createDummyContract` at the end of the class (since the suite no longer has its own `ExecutionContext`).",
        "createdAt" : "2020-06-18T08:37:46Z",
        "updatedAt" : "2020-06-18T08:37:46Z",
        "lastEditedBy" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "tags" : [
        ]
      },
      {
        "id" : "2dcc330b-39ae-485a-a25f-c6cf6ec1d3d7",
        "parentId" : "8b2fa1f6-50f6-4a95-8d15-8a0226efe338",
        "authorId" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "body" : "If that wasn't the case, our tooling would detect it. :slightly_smiling_face: ",
        "createdAt" : "2020-06-18T08:38:25Z",
        "updatedAt" : "2020-06-18T08:38:25Z",
        "lastEditedBy" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "tags" : [
        ]
      }
    ],
    "commit" : "7b8c4e7a153f924899621aefabbd8c0f95a9c98c",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +25,29 @@import scalaz.syntax.tag._\n\nimport scala.concurrent.ExecutionContext\n\nclass ActiveContractsService(session: LedgerSession) extends LedgerTestSuite(session) {"
  },
  {
    "id" : "35fd37ba-ea6f-4fde-9f7d-6e03aac2237e",
    "prId" : 3126,
    "prUrl" : "https://github.com/digital-asset/daml/pull/3126",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "de7ebe6e-b334-444c-a947-74a9af512034",
        "parentId" : null,
        "authorId" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "body" : "How would have this test failed before this PR?",
        "createdAt" : "2019-10-08T15:10:17Z",
        "updatedAt" : "2019-10-16T16:16:12Z",
        "lastEditedBy" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "tags" : [
        ]
      },
      {
        "id" : "6aa96904-847b-4a77-9e3c-b81683a316bd",
        "parentId" : "de7ebe6e-b334-444c-a947-74a9af512034",
        "authorId" : "eb431011-3221-41ae-bf30-e72dde278004",
        "body" : "Good question. It would not have failed in the sandbox, but only when running the test with the reference-server v2 (using inmemory kvutils participant), where contract ids actual aren't the same as event ids.\r\nI've ran this test without the change and it failed as expected.",
        "createdAt" : "2019-10-09T07:26:50Z",
        "updatedAt" : "2019-10-16T16:16:12Z",
        "lastEditedBy" : "eb431011-3221-41ae-bf30-e72dde278004",
        "tags" : [
        ]
      }
    ],
    "commit" : "33007a9857aac9e59d5820e6be039783e24a2610",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +302,306 @@\n  private val eventId =\n    LedgerTest(\"ACSeventId\", \"The ActiveContractService should properly fill the eventId field\") {\n      context =>\n        for {"
  },
  {
    "id" : "329c60ec-65f9-481c-9e73-82b8e9b13fb9",
    "prId" : 2580,
    "prUrl" : "https://github.com/digital-asset/daml/pull/2580",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9302208d-0d06-4bbb-9a63-dd5f29d2ef07",
        "parentId" : null,
        "authorId" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "body" : "Maybe not worth doing, but you can add some extra strictness to this test checking that the reported invalid ledger identifier matches the one provided.",
        "createdAt" : "2019-08-22T08:19:31Z",
        "updatedAt" : "2019-08-22T08:58:24Z",
        "lastEditedBy" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "tags" : [
        ]
      }
    ],
    "commit" : "b181c94af530655fbe510732ed5f6ab6a447fc08",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +32,36 @@          failure <- ledger.activeContracts(invalidRequest).failed\n        } yield {\n          assertGrpcError(failure, Status.Code.NOT_FOUND, \"not found. Actual Ledger ID\")\n        }\n    }"
  }
]