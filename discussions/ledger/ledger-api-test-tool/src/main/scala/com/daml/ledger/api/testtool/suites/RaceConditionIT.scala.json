[
  {
    "id" : "c57ada76-3984-4feb-97d1-a8e546108271",
    "prId" : 9428,
    "prUrl" : "https://github.com/digital-asset/daml/pull/9428",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5f394bf1-a400-4cdc-aa6f-44a8ac88a25c",
        "parentId" : null,
        "authorId" : "5f6b922a-83eb-4419-97b1-13c757c1e583",
        "body" : "Nice 👍 ",
        "createdAt" : "2021-04-16T08:27:58Z",
        "updatedAt" : "2021-04-16T08:30:16Z",
        "lastEditedBy" : "5f6b922a-83eb-4419-97b1-13c757c1e583",
        "tags" : [
        ]
      }
    ],
    "commit" : "b52f9de2538e3142a9524aab74726ea4a7f68ccd",
    "line" : 75,
    "diffHunk" : "@@ -1,1 +160,164 @@    } yield {\n      import TransactionUtil._\n      val archivalTransaction = assertSingleton(\"archivals\", transactions.filter(isArchival))\n      transactions\n        .filter(isNonConsumingExercise)"
  },
  {
    "id" : "9fd38550-9ff6-4370-b2a6-6c8e289bbc3b",
    "prId" : 9428,
    "prUrl" : "https://github.com/digital-asset/daml/pull/9428",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "914668b9-97d5-456e-aaa8-39ea6f4369df",
        "parentId" : null,
        "authorId" : "5f6b922a-83eb-4419-97b1-13c757c1e583",
        "body" : "Looks better now, thanks!",
        "createdAt" : "2021-04-16T08:28:15Z",
        "updatedAt" : "2021-04-16T08:30:16Z",
        "lastEditedBy" : "5f6b922a-83eb-4419-97b1-13c757c1e583",
        "tags" : [
        ]
      }
    ],
    "commit" : "b52f9de2538e3142a9524aab74726ea4a7f68ccd",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +28,32 @@    val attempts = (1 to 5).toVector\n    Future\n      .traverse(attempts) { _ =>\n        ledger.create(alice, ContractWithKey(alice)).transform(Success(_))\n      }"
  },
  {
    "id" : "2ceea205-9c6c-476e-92b2-c0eb330811a0",
    "prId" : 9138,
    "prUrl" : "https://github.com/digital-asset/daml/pull/9138",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9ef51f1b-7b43-46c1-bba5-82251d6ef3c9",
        "parentId" : null,
        "authorId" : "53efca31-cf56-4f70-be8f-a3714c600eb6",
        "body" : "Same as above, 5x5 would yield more meaningful results",
        "createdAt" : "2021-03-19T08:23:52Z",
        "updatedAt" : "2021-03-25T15:56:06Z",
        "lastEditedBy" : "53efca31-cf56-4f70-be8f-a3714c600eb6",
        "tags" : [
        ]
      }
    ],
    "commit" : "e7d020cd12f4e103323991118a81c94c4b5ad878",
    "line" : 130,
    "diffHunk" : "@@ -1,1 +128,132 @@    \"Cannot create a transient contract and a non-transient contract with the same key\",\n  ) { implicit ec => ledger => alice =>\n    val Attempts = 100\n    for {\n      wrapper <- ledger.create(alice, CreateWrapper(alice))"
  },
  {
    "id" : "34671234-b53b-4704-9280-375de9b37554",
    "prId" : 9138,
    "prUrl" : "https://github.com/digital-asset/daml/pull/9138",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3a9f1869-13dc-4d2a-8ac4-27f51977b3b3",
        "parentId" : null,
        "authorId" : "aa9eebab-85b9-401c-893f-9a479fe01cf1",
        "body" : "Can't we make a more strict assertion here? Don't we know how many transactions should there be and their order?",
        "createdAt" : "2021-03-25T08:51:29Z",
        "updatedAt" : "2021-03-25T15:56:06Z",
        "lastEditedBy" : "aa9eebab-85b9-401c-893f-9a479fe01cf1",
        "tags" : [
        ]
      },
      {
        "id" : "d0780c05-200d-4b08-8fdd-16ec5df0a603",
        "parentId" : "3a9f1869-13dc-4d2a-8ac4-27f51977b3b3",
        "authorId" : "5f6b922a-83eb-4419-97b1-13c757c1e583",
        "body" : "Actually after some discussions we came with a conclusion that we only care about the order here and not how many transactions (because of contention that might happen here). That is why this simple check is sufficient for our needs.",
        "createdAt" : "2021-03-25T09:12:46Z",
        "updatedAt" : "2021-03-25T15:56:06Z",
        "lastEditedBy" : "5f6b922a-83eb-4419-97b1-13c757c1e583",
        "tags" : [
        ]
      }
    ],
    "commit" : "e7d020cd12f4e103323991118a81c94c4b5ad878",
    "line" : 106,
    "diffHunk" : "@@ -1,1 +104,108 @@      )\n\n      val (_, valid) =\n        transactions.filterNot(isCreateDummyContract).tail.foldLeft((transactions.head, true)) {\n          case ((previousTx, isValidSoFar), currentTx) =>"
  }
]