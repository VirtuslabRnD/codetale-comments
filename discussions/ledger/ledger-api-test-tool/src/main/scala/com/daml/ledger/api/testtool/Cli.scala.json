[
  {
    "id" : "fa93e5b5-e153-494c-a265-a0dd8795c5b4",
    "prId" : 7756,
    "prUrl" : "https://github.com/digital-asset/daml/pull/7756",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2580bf27-ee8b-4e09-872f-dc08333119d2",
        "parentId" : null,
        "authorId" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "body" : "If the documentation does not mention this, it's a good chance to add it, possibly adding a few example and explaining when and how this is useful.\r\n\r\nI don't see a problem in adding the new behavior, but I would recommend you also not break current users. This would mean interpreting an absence of unit as `ms`.",
        "createdAt" : "2020-10-21T08:36:32Z",
        "updatedAt" : "2020-10-21T10:33:42Z",
        "lastEditedBy" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "tags" : [
        ]
      },
      {
        "id" : "4eb85011-b41d-4666-a27f-79ef6cab781f",
        "parentId" : "2580bf27-ee8b-4e09-872f-dc08333119d2",
        "authorId" : "181bcece-33df-41af-887d-5d5f51beb543",
        "body" : "Good plan. I'll see if I can keep the old behavior as well, but keep it hidden so new users don't find it.",
        "createdAt" : "2020-10-21T08:54:38Z",
        "updatedAt" : "2020-10-21T10:33:42Z",
        "lastEditedBy" : "181bcece-33df-41af-887d-5d5f51beb543",
        "tags" : [
        ]
      },
      {
        "id" : "7a1f433c-1181-4b45-9af8-f2c44c44cde3",
        "parentId" : "2580bf27-ee8b-4e09-872f-dc08333119d2",
        "authorId" : "181bcece-33df-41af-887d-5d5f51beb543",
        "body" : "Done. Let me know if you're happy with the implementation.",
        "createdAt" : "2020-10-21T10:03:39Z",
        "updatedAt" : "2020-10-21T10:33:42Z",
        "lastEditedBy" : "181bcece-33df-41af-887d-5d5f51beb543",
        "tags" : [
        ]
      },
      {
        "id" : "0fad0c91-5be3-40d7-9527-76aea5f255b2",
        "parentId" : "2580bf27-ee8b-4e09-872f-dc08333119d2",
        "authorId" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "body" : "LGTM, thanks.",
        "createdAt" : "2020-10-21T11:01:07Z",
        "updatedAt" : "2020-10-21T11:01:07Z",
        "lastEditedBy" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "tags" : [
        ]
      }
    ],
    "commit" : "97386d4f048437a7bca48f9f19aa77e1748e7b95",
    "line" : 39,
    "diffHunk" : "@@ -1,1 +206,210 @@      .optional()\n      .action((x, c) => c.copy(ledgerClockGranularity = x))\n      .text(\"Specify the largest interval that you will see between clock ticks on the ledger under test. The default is \\\"1s\\\" (1 second).\")\n\n    opt[Unit](\"skip-dar-upload\")"
  },
  {
    "id" : "3045d180-f39d-48e6-a174-eccff34dce5a",
    "prId" : 6651,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6651",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9f8d18f8-2189-471c-9f2b-d3a1d68ce581",
        "parentId" : null,
        "authorId" : "181bcece-33df-41af-887d-5d5f51beb543",
        "body" : "I still think it's worth logging a warning if you use a deprecated option.\r\n\r\n```suggestion\r\n      .text(\"DEPRECATED: All tests are always run by default.\")\r\n      .action(_ => logger.warn(\"The `--all-tests` option is deprecated. All tests are always run by default.\"))\r\n```\r\n\r\nAnd so on for the other deprecated options.",
        "createdAt" : "2020-07-09T09:51:11Z",
        "updatedAt" : "2020-07-09T13:44:00Z",
        "lastEditedBy" : "181bcece-33df-41af-887d-5d5f51beb543",
        "tags" : [
        ]
      },
      {
        "id" : "9f7ae563-ee9f-4c2a-85a0-751ddfbeebb1",
        "parentId" : "9f8d18f8-2189-471c-9f2b-d3a1d68ce581",
        "authorId" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "body" : "Addressed by https://github.com/digital-asset/daml/pull/6651/commits/69178c4e63fc29dec22b9cf744ce846a4c036a5c",
        "createdAt" : "2020-07-09T10:15:39Z",
        "updatedAt" : "2020-07-09T13:44:00Z",
        "lastEditedBy" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "tags" : [
        ]
      }
    ],
    "commit" : "92276dec4a74821dcec140cb26ac3bd9e14c5c04",
    "line" : 66,
    "diffHunk" : "@@ -1,1 +158,162 @@\n    opt[Unit](\"all-tests\")\n      .text(\"DEPRECATED: All tests are always run by default.\")\n      .action(reportUsageOfDeprecatedOption(\"--all-tests\"))\n      .hidden()"
  },
  {
    "id" : "11bdb494-5c15-40ee-953b-f5e3b214c29e",
    "prId" : 6458,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6458",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5e860383-b702-4608-93c4-71852c9d7def",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "Happy to leave this up to you but an alternative UX would be `list --all`. Not sure what I prefer.",
        "createdAt" : "2020-06-23T07:07:43Z",
        "updatedAt" : "2020-06-23T11:39:22Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "55a84594-759e-4229-98aa-1f92903b78a9",
        "parentId" : "5e860383-b702-4608-93c4-71852c9d7def",
        "authorId" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "body" : "I agree the `--list`/`--list-all` thing is a bit awkward, but I believe fixing this should be done as part of a broader redesign of the CLI; for example the situation with perf tests vs. normal tests could also use a more explicit structure. I don't want to extend the scope of this PR though.",
        "createdAt" : "2020-06-23T10:17:24Z",
        "updatedAt" : "2020-06-23T11:39:22Z",
        "lastEditedBy" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "tags" : [
        ]
      }
    ],
    "commit" : "369498b2337dab0f8d310a86dce521d86703c678",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +174,178 @@        \"\"\"Lists all available test suites that can be used in the include and exclude options. Test names always start with their suite name, so using the suite name as a prefix matches all tests in a given suite.\"\"\")\n\n    opt[Unit](\"list-all\")\n      .action((_, c) => c.copy(listTests = true))\n      .text(\"\"\"Lists all available tests that can be used in the include and exclude options.\"\"\")"
  },
  {
    "id" : "43ecd1ec-7c0e-4d3a-bbf8-fb841553a0b3",
    "prId" : 6458,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6458",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f491ba19-098a-48bd-b338-f4146aedfe96",
        "parentId" : null,
        "authorId" : "181bcece-33df-41af-887d-5d5f51beb543",
        "body" : "What happens if you use both `--list` and `--list-all`?",
        "createdAt" : "2020-06-23T10:33:40Z",
        "updatedAt" : "2020-06-23T11:39:22Z",
        "lastEditedBy" : "181bcece-33df-41af-887d-5d5f51beb543",
        "tags" : [
        ]
      },
      {
        "id" : "c39e1079-2fb4-4bd2-b353-72735f1e67b8",
        "parentId" : "f491ba19-098a-48bd-b338-f4146aedfe96",
        "authorId" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "body" : "At the moment `--list` wins over everything. So if you say `--include=... --perf-tests=... --list` you still get the list of test suites. That's very much related to @cocreature's comment: we have a bunch of \"flat\" flags (i.e. no hierarchy) as far as the external interface is concerned, but internally we treat them as special things where some affect others. I think the tool has become rich enough that it's now worth having explicit subcommands, each which its own set of allowed flags.",
        "createdAt" : "2020-06-23T10:49:38Z",
        "updatedAt" : "2020-06-23T11:39:22Z",
        "lastEditedBy" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "tags" : [
        ]
      }
    ],
    "commit" : "369498b2337dab0f8d310a86dce521d86703c678",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +174,178 @@        \"\"\"Lists all available test suites that can be used in the include and exclude options. Test names always start with their suite name, so using the suite name as a prefix matches all tests in a given suite.\"\"\")\n\n    opt[Unit](\"list-all\")\n      .action((_, c) => c.copy(listTests = true))\n      .text(\"\"\"Lists all available tests that can be used in the include and exclude options.\"\"\")"
  },
  {
    "id" : "123be2fb-a6bd-4fa4-ac82-05c4043fc464",
    "prId" : 5377,
    "prUrl" : "https://github.com/digital-asset/daml/pull/5377",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "842f7cd6-b60a-45a6-ab9e-924a608ebf42",
        "parentId" : null,
        "authorId" : "181bcece-33df-41af-887d-5d5f51beb543",
        "body" : "Good call. We should do this everywhere.",
        "createdAt" : "2020-04-06T12:32:55Z",
        "updatedAt" : "2020-04-06T12:50:22Z",
        "lastEditedBy" : "181bcece-33df-41af-887d-5d5f51beb543",
        "tags" : [
        ]
      }
    ],
    "commit" : "70cc33cce879b665e8969f8d4f92cb39b9b489d5",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +52,56 @@  )\n\n  private[this] implicit val pathRead: Read[Path] = Read.reads(Paths.get(_))\n\n  private val argParser = new scopt.OptionParser[Config](\"ledger-api-test-tool\") {"
  },
  {
    "id" : "e0bae185-17f7-45ec-b58f-e425c0e5dc01",
    "prId" : 4450,
    "prUrl" : "https://github.com/digital-asset/daml/pull/4450",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ca49a660-a4da-454d-bec0-337eeb018597",
        "parentId" : null,
        "authorId" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "body" : "`do-not-wait-for-parties` or `no-waiting-for-parties` may be a better name for this parameter.",
        "createdAt" : "2020-02-10T09:55:42Z",
        "updatedAt" : "2020-02-10T12:43:36Z",
        "lastEditedBy" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "tags" : [
        ]
      },
      {
        "id" : "4db0ed2f-abee-4306-a1e0-413a010df490",
        "parentId" : "ca49a660-a4da-454d-bec0-337eeb018597",
        "authorId" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "body" : "It's not particularly important, this is just temporary before we reach a shared understanding of whether we want tests to wait for parties in the first place. If anything, I'd recommend hiding this option for now with `.hidden()`.",
        "createdAt" : "2020-02-10T11:44:14Z",
        "updatedAt" : "2020-02-10T12:43:36Z",
        "lastEditedBy" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "tags" : [
        ]
      },
      {
        "id" : "0fe7733d-08ed-443e-8676-9e471980f384",
        "parentId" : "ca49a660-a4da-454d-bec0-337eeb018597",
        "authorId" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "body" : "+1 for making the new option hidden. Otherwise, I'm sure you have seen a lot of 'temporary' solutions lying around for years ; )",
        "createdAt" : "2020-02-10T11:59:11Z",
        "updatedAt" : "2020-02-10T12:43:36Z",
        "lastEditedBy" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "tags" : [
        ]
      },
      {
        "id" : "0de02a6d-220f-4abf-9176-901fa263dffd",
        "parentId" : "ca49a660-a4da-454d-bec0-337eeb018597",
        "authorId" : null,
        "body" : "+1 for hidden. Adding it.",
        "createdAt" : "2020-02-10T12:21:31Z",
        "updatedAt" : "2020-02-10T12:43:36Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      }
    ],
    "commit" : "9b50aea234086b5d2936b09b0d3a1451d42d8d09",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +148,152 @@      .text(\"\"\"Run all default and optional tests. Respects the --exclude flag.\"\"\")\n\n    opt[Unit](\"no-wait-for-parties\")\n      .action((_, c) => c.copy(waitForParties = false))\n      .text(\"\"\"Do not wait for parties to be allocated on all participants.\"\"\")"
  }
]