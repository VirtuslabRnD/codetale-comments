[
  {
    "id" : "800d3651-f147-44ba-84d6-a2b683295115",
    "prId" : 7328,
    "prUrl" : "https://github.com/digital-asset/daml/pull/7328",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "359998b6-fce3-4009-bf76-880bc5bca98b",
        "parentId" : null,
        "authorId" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "body" : "What is the purpose of this? This is mainly making the performance characteristics unclear.",
        "createdAt" : "2020-09-07T10:09:19Z",
        "updatedAt" : "2020-09-07T12:51:18Z",
        "lastEditedBy" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "tags" : [
        ]
      },
      {
        "id" : "6f503b94-1049-4f99-b5b8-3974229ae902",
        "parentId" : "359998b6-fce3-4009-bf76-880bc5bca98b",
        "authorId" : "181bcece-33df-41af-887d-5d5f51beb543",
        "body" : "This is generally tiny, on the order of 1â€“2 elements in the list. At this size, the performance characteristics are \"meh, who cares\"?",
        "createdAt" : "2020-09-07T12:28:08Z",
        "updatedAt" : "2020-09-07T12:51:18Z",
        "lastEditedBy" : "181bcece-33df-41af-887d-5d5f51beb543",
        "tags" : [
        ]
      }
    ],
    "commit" : "cf7583b91c2f670c439f510026de0dfba0bb94f0",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +15,19 @@\nprivate[testtool] final class LedgerTestContext private[infrastructure] (\n    participants: immutable.Seq[ParticipantTestContext],\n)(implicit ec: ExecutionContext) {\n"
  },
  {
    "id" : "381f9cca-e995-4602-b81f-0cf588b63a47",
    "prId" : 2713,
    "prUrl" : "https://github.com/digital-asset/daml/pull/2713",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "41569c40-8c45-4783-a8e8-dd57601b9fc1",
        "parentId" : null,
        "authorId" : "eb431011-3221-41ae-bf30-e72dde278004",
        "body" : "Why not use `Update[T]` here and remove the explicit cast below?\r\n```suggestion\r\n      exercise: Party => Primitive.Update[T]\r\n```",
        "createdAt" : "2019-08-30T14:52:24Z",
        "updatedAt" : "2019-09-02T10:59:08Z",
        "lastEditedBy" : "eb431011-3221-41ae-bf30-e72dde278004",
        "tags" : [
        ]
      },
      {
        "id" : "8db76ed6-885e-4b0c-aa2b-79fa8d4c5bb0",
        "parentId" : "41569c40-8c45-4783-a8e8-dd57601b9fc1",
        "authorId" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "body" : "It is not necessarily the case that the contract on which an update operates is the same as the one created by exercising the choice. ",
        "createdAt" : "2019-09-02T09:18:01Z",
        "updatedAt" : "2019-09-02T10:59:08Z",
        "lastEditedBy" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "tags" : [
        ]
      },
      {
        "id" : "00de52dc-2048-4e67-9484-522d2e3a416d",
        "parentId" : "41569c40-8c45-4783-a8e8-dd57601b9fc1",
        "authorId" : "eb431011-3221-41ae-bf30-e72dde278004",
        "body" : "Could you elaborate please? I don't understand what you mean.",
        "createdAt" : "2019-09-02T09:39:50Z",
        "updatedAt" : "2019-09-02T10:59:08Z",
        "lastEditedBy" : "eb431011-3221-41ae-bf30-e72dde278004",
        "tags" : [
        ]
      },
      {
        "id" : "b17ed3cf-9081-4696-aec1-58beca35bf77",
        "parentId" : "41569c40-8c45-4783-a8e8-dd57601b9fc1",
        "authorId" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "body" : "As explained offline (reported here for clarity): the type variable is used to cast [here](https://github.com/digital-asset/daml/pull/2713#discussion_r319549199). When exercising a choice on a contract based on template `T` there is no (easy?) way to get the type of the contracts that are created as part of the transaction kicked of by the exercise.",
        "createdAt" : "2019-09-02T09:55:02Z",
        "updatedAt" : "2019-09-02T10:59:08Z",
        "lastEditedBy" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "tags" : [
        ]
      },
      {
        "id" : "775fd639-a00c-4ac2-818c-ee36448895e2",
        "parentId" : "41569c40-8c45-4783-a8e8-dd57601b9fc1",
        "authorId" : "eb431011-3221-41ae-bf30-e72dde278004",
        "body" : "Alright, so the `T` type parameter expresses an expectation of the method's caller that it expects the first contract to be of type `T`. I'd prefer a mechanism as described in my comment on the type cast a few lines below.",
        "createdAt" : "2019-09-02T09:56:30Z",
        "updatedAt" : "2019-09-02T10:59:08Z",
        "lastEditedBy" : "eb431011-3221-41ae-bf30-e72dde278004",
        "tags" : [
        ]
      }
    ],
    "commit" : "3153aa5aee7120933b68f4773dedc170bfa2b123",
    "line" : 208,
    "diffHunk" : "@@ -1,1 +317,321 @@  def exerciseAndGetContract[T](\n      party: Party,\n      exercise: Party => Primitive.Update[_]\n  ): Future[Primitive.ContractId[T]] =\n    submitAndWaitRequest(party, exercise(party).command)"
  },
  {
    "id" : "31992897-4796-4de6-a84a-3a3028b6a793",
    "prId" : 2713,
    "prUrl" : "https://github.com/digital-asset/daml/pull/2713",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dd2ae819-59b8-4c99-8c12-15539c2d054f",
        "parentId" : null,
        "authorId" : "eb431011-3221-41ae-bf30-e72dde278004",
        "body" : "```suggestion\r\n```",
        "createdAt" : "2019-08-30T14:53:48Z",
        "updatedAt" : "2019-09-02T10:59:08Z",
        "lastEditedBy" : "eb431011-3221-41ae-bf30-e72dde278004",
        "tags" : [
        ]
      },
      {
        "id" : "cf4f1530-64b5-4fda-b055-cbc3f5d12f72",
        "parentId" : "dd2ae819-59b8-4c99-8c12-15539c2d054f",
        "authorId" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "body" : "Without this we would get all contracts created in the transaction instead of a single one and we would not be able to dictate what kind of contract it is. But I do agree that the casting is quite a wart. Not sure of how I could feed the type information correctly without that.",
        "createdAt" : "2019-09-02T09:21:15Z",
        "updatedAt" : "2019-09-02T10:59:08Z",
        "lastEditedBy" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "tags" : [
        ]
      },
      {
        "id" : "d8ee5dd9-b4db-44b2-8121-6a3559bbca21",
        "parentId" : "dd2ae819-59b8-4c99-8c12-15539c2d054f",
        "authorId" : "eb431011-3221-41ae-bf30-e72dde278004",
        "body" : "Can we even make the assumption that the first contract is of type `T`? How about we pass the template companion object (`TemplateCompanion[T]`) or template identifier as parameter to the method, which which we can actually check the created events for matching template ids.",
        "createdAt" : "2019-09-02T09:44:27Z",
        "updatedAt" : "2019-09-02T10:59:08Z",
        "lastEditedBy" : "eb431011-3221-41ae-bf30-e72dde278004",
        "tags" : [
        ]
      },
      {
        "id" : "ab0598bb-acb2-4a9f-a5a2-2acc48feff38",
        "parentId" : "dd2ae819-59b8-4c99-8c12-15539c2d054f",
        "authorId" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "body" : "See [this other comment](https://github.com/digital-asset/daml/pull/2713#discussion_r319888452) for more details.",
        "createdAt" : "2019-09-02T09:55:21Z",
        "updatedAt" : "2019-09-02T10:59:08Z",
        "lastEditedBy" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "tags" : [
        ]
      }
    ],
    "commit" : "3153aa5aee7120933b68f4773dedc170bfa2b123",
    "line" : 213,
    "diffHunk" : "@@ -1,1 +322,326 @@      .flatMap(submitAndWaitForTransaction)\n      .map(extractContracts)\n      .map(_.head.asInstanceOf[Primitive.ContractId[T]])\n\n  def exerciseAndGetContracts[T]("
  },
  {
    "id" : "85950a28-6771-492b-8c99-122521fe2b3e",
    "prId" : 2713,
    "prUrl" : "https://github.com/digital-asset/daml/pull/2713",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0aa7694d-4a8b-46bd-9d5d-ab113e6c451d",
        "parentId" : null,
        "authorId" : "eb431011-3221-41ae-bf30-e72dde278004",
        "body" : "```suggestion\r\n  ): Future[Seq[Primitive.ContractId[T]]] =\r\n```",
        "createdAt" : "2019-08-30T14:53:57Z",
        "updatedAt" : "2019-09-02T10:59:08Z",
        "lastEditedBy" : "eb431011-3221-41ae-bf30-e72dde278004",
        "tags" : [
        ]
      },
      {
        "id" : "2a27469c-26ab-4d46-ac42-a2861a775b81",
        "parentId" : "0aa7694d-4a8b-46bd-9d5d-ab113e6c451d",
        "authorId" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "body" : "Here the meaning of the type variable is different, the idea is that all updates operate on contracts of type `T` but we don't know what is the type of the contracts that is going to be created as part of the transaction.",
        "createdAt" : "2019-09-02T09:24:37Z",
        "updatedAt" : "2019-09-02T10:59:08Z",
        "lastEditedBy" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "tags" : [
        ]
      },
      {
        "id" : "b126d509-6ff6-4fb7-8221-fede5c591612",
        "parentId" : "0aa7694d-4a8b-46bd-9d5d-ab113e6c451d",
        "authorId" : "eb431011-3221-41ae-bf30-e72dde278004",
        "body" : "Alright, so an exercise in DAML can any number contracts of any kind of template, and this is what this method returns? If so, then ignore my suggestions please.",
        "createdAt" : "2019-09-02T09:41:18Z",
        "updatedAt" : "2019-09-02T10:59:08Z",
        "lastEditedBy" : "eb431011-3221-41ae-bf30-e72dde278004",
        "tags" : [
        ]
      },
      {
        "id" : "795807e1-57b4-4ffe-a66d-1c4a1a24835a",
        "parentId" : "0aa7694d-4a8b-46bd-9d5d-ab113e6c451d",
        "authorId" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "body" : "Exactly.",
        "createdAt" : "2019-09-02T09:55:34Z",
        "updatedAt" : "2019-09-02T10:59:08Z",
        "lastEditedBy" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "tags" : [
        ]
      }
    ],
    "commit" : "3153aa5aee7120933b68f4773dedc170bfa2b123",
    "line" : 218,
    "diffHunk" : "@@ -1,1 +327,331 @@      party: Party,\n      exercise: Party => Primitive.Update[T]\n  ): Future[Seq[Primitive.ContractId[_]]] =\n    submitAndWaitRequest(party, exercise(party).command)\n      .flatMap(submitAndWaitForTransaction)"
  }
]