[
  {
    "id" : "65a280c9-fd6d-4cbb-a81d-5259b7a8fb35",
    "prId" : 7260,
    "prUrl" : "https://github.com/digital-asset/daml/pull/7260",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0987b284-6413-4f9d-8419-3aa476d5851d",
        "parentId" : null,
        "authorId" : "181bcece-33df-41af-887d-5d5f51beb543",
        "body" : "You could potentially make use of `Seq.fill` here to make this a bit more declarative, though I'm not sure whether it's bettor not. Something like:\r\n\r\n```suggestion\r\n            exercises = Seq.fill(archives / 2)(Seq(\r\n              (alpha, owner1, shared.exerciseSharedContract_Consume1),\r\n              (beta, owner2, shared.exerciseSharedContract_Consume2),\r\n            )).flatten\r\n            results <- Future.traverse(exercises) {\r\n              case (participant, owner, consume) =>\r\n                participant.exercise(owner, consume).transform(Success(_))\r\n            }\r\n```\r\n\r\n_I_ prefer it, but you don't have to agree.",
        "createdAt" : "2020-08-28T12:22:02Z",
        "updatedAt" : "2020-08-31T07:39:01Z",
        "lastEditedBy" : "181bcece-33df-41af-887d-5d5f51beb543",
        "tags" : [
        ]
      }
    ],
    "commit" : "c4ab8a51a135ef171e5588a83451aeb14c64124c",
    "line" : 37,
    "diffHunk" : "@@ -1,1 +85,89 @@                    .exercise(owner2, shared.exerciseSharedContract_Consume2)\n                    .transform(Success(_))\n            })\n          } yield {\n            assertLength(s\"Contract $c successful archives\", 1, results.filter(_.isSuccess))"
  }
]