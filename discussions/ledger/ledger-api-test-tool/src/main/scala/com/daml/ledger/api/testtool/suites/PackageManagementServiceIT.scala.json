[
  {
    "id" : "3650ee77-440a-4aea-a8a5-0782315c2126",
    "prId" : 8894,
    "prUrl" : "https://github.com/digital-asset/daml/pull/8894",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "37bf1a86-15c7-47df-9e6c-e4ddc00431fe",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "why do we need to throw a `getClassLoader` in between now?",
        "createdAt" : "2021-02-18T20:33:17Z",
        "updatedAt" : "2021-02-22T09:16:59Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "06080d1d-2c24-4af7-9228-cf2df4245cd7",
        "parentId" : "37bf1a86-15c7-47df-9e6c-e4ddc00431fe",
        "authorId" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "body" : "-  `getClass.getResourceAsStream` looks the resource relative to the path of the class.\r\n- `getClass.getClassLoader.getResourceAsStream` looks the resource from the root. \r\n\r\nLike that I handle in a same way `rlocation` and and `getResourceAsStream`. Not that I drop the initial `/` in `com.daml.ledger.test_common.TestDars.fileNames` w.r.t. previous comit.",
        "createdAt" : "2021-02-19T08:21:55Z",
        "updatedAt" : "2021-02-22T09:16:59Z",
        "lastEditedBy" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "tags" : [
        ]
      }
    ],
    "commit" : "42ce4089237964300af41ae4b6e96245340d72c9",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +21,25 @@  private def loadTestPackage()(implicit ec: ExecutionContext): Future[ByteString] = {\n    val testPackage = Future {\n      val in = getClass.getClassLoader.getResourceAsStream(testPackageResourcePath)\n      assert(in != null, s\"Unable to load test package resource at '$testPackageResourcePath'\")\n      in"
  }
]