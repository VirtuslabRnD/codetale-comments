[
  {
    "id" : "b8ef9b38-5a76-47b8-8b3b-0f47766519e4",
    "prId" : 3446,
    "prUrl" : "https://github.com/digital-asset/daml/pull/3446",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "842de571-8adb-419a-9e35-5e7059934550",
        "parentId" : null,
        "authorId" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "body" : "This creates a new instance of the retry strategy object at every call of `eventually`, which is anyhow fine, we're talking about a few objects, so not a problem, I'm mostly thinking out loud in the review. :slightly_smiling_face: :+1: ",
        "createdAt" : "2019-11-13T16:04:06Z",
        "updatedAt" : "2019-11-13T16:05:47Z",
        "lastEditedBy" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "tags" : [
        ]
      },
      {
        "id" : "daea3c6d-f5dc-4b2e-b128-99e683073bbc",
        "parentId" : "842de571-8adb-419a-9e35-5e7059934550",
        "authorId" : "a19260b0-5e05-4d6e-8307-335e8dc80e5b",
        "body" : "Yeah, didn't seem to be a big deal. I can revert this if you like; not actually using it. I just needed to slow down the timeout to debug the propagation check because it was swamping the logs with errors.\r\n\r\n(I got the `subsetOf` call the wrong way around, of course.)",
        "createdAt" : "2019-11-13T16:24:06Z",
        "updatedAt" : "2019-11-13T16:24:06Z",
        "lastEditedBy" : "a19260b0-5e05-4d6e-8307-335e8dc80e5b",
        "tags" : [
        ]
      }
    ],
    "commit" : "ad42041a13e959b0ede9d81e8f8dc32bae860183",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +8,12 @@\nobject Eventually {\n  def eventually[A](\n      runAssertion: => Future[A],\n      attempts: Int = 10,"
  }
]