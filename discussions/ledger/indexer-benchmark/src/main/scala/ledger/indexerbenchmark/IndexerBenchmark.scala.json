[
  {
    "id" : "f6e59e2b-2422-4474-9cee-3f0e2c81d766",
    "prId" : 9509,
    "prUrl" : "https://github.com/digital-asset/daml/pull/9509",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d65c00d6-6bb3-4e0b-97b1-024ff16128b7",
        "parentId" : null,
        "authorId" : "940afe62-a033-4e56-b2d3-8de3ca6d6d5c",
        "body" : "Why would we need ephemeral postgres support here?",
        "createdAt" : "2021-04-28T07:22:13Z",
        "updatedAt" : "2021-05-06T13:33:31Z",
        "lastEditedBy" : "940afe62-a033-4e56-b2d3-8de3ca6d6d5c",
        "tags" : [
        ]
      },
      {
        "id" : "280c92f1-c8ef-4184-9980-a3d393ffc02a",
        "parentId" : "d65c00d6-6bb3-4e0b-97b1-024ff16128b7",
        "authorId" : "c83a17a2-0c0d-4811-9fe5-e560bb3ad87a",
        "body" : "Added a comment to `runWithEphemeralPostgres`:\r\n```\r\nUsing an uncontrolled local database does not give good performance results, but is useful for development and functional tests.\r\n```",
        "createdAt" : "2021-04-30T09:48:34Z",
        "updatedAt" : "2021-05-06T13:33:31Z",
        "lastEditedBy" : "c83a17a2-0c0d-4811-9fe5-e560bb3ad87a",
        "tags" : [
        ]
      },
      {
        "id" : "70acb5ce-35e0-4a9a-ad40-2ebac63cf723",
        "parentId" : "d65c00d6-6bb3-4e0b-97b1-024ff16128b7",
        "authorId" : "940afe62-a033-4e56-b2d3-8de3ca6d6d5c",
        "body" : "if it is just for testing, I am wondering whether we can move this into a test package.... but that is not seem to be easy, neither something we do in other case so fine by me :ok: ",
        "createdAt" : "2021-04-30T10:59:24Z",
        "updatedAt" : "2021-05-06T13:33:31Z",
        "lastEditedBy" : "940afe62-a033-4e56-b2d3-8de3ca6d6d5c",
        "tags" : [
        ]
      }
    ],
    "commit" : "38bbeb2abe1ea95c4859da656d8f1bb52c955ee8",
    "line" : 217,
    "diffHunk" : "@@ -1,1 +215,219 @@  ): Unit = {\n    val result = if (config.indexerConfig.jdbcUrl.isEmpty) {\n      new IndexerBenchmark().runWithEphemeralPostgres(updates, config)\n    } else {\n      new IndexerBenchmark().run(updates, config)"
  },
  {
    "id" : "910c60af-f6f6-47ae-91ff-6699a7d451af",
    "prId" : 9509,
    "prUrl" : "https://github.com/digital-asset/daml/pull/9509",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1b04975f-9b44-4838-b219-49c23abf176b",
        "parentId" : null,
        "authorId" : "940afe62-a033-4e56-b2d3-8de3ca6d6d5c",
        "body" : "We seem to be able to run this against any indexer implementation (which I like a lot), would be able somehow to render the indexer config with reflection, so we do not couple this output to a particular version of a particular implementation? (reflection maybe?)",
        "createdAt" : "2021-04-28T07:30:06Z",
        "updatedAt" : "2021-05-06T13:33:31Z",
        "lastEditedBy" : "940afe62-a033-4e56-b2d3-8de3ca6d6d5c",
        "tags" : [
        ]
      },
      {
        "id" : "33c6b41a-2951-4374-a8cd-50d5aa954802",
        "parentId" : "1b04975f-9b44-4838-b219-49c23abf176b",
        "authorId" : "c83a17a2-0c0d-4811-9fe5-e560bb3ad87a",
        "body" : "I have added a simple output of the entire indexerConfig using the default case class rendering.",
        "createdAt" : "2021-04-30T09:50:29Z",
        "updatedAt" : "2021-05-06T13:33:31Z",
        "lastEditedBy" : "c83a17a2-0c0d-4811-9fe5-e560bb3ad87a",
        "tags" : [
        ]
      },
      {
        "id" : "ddd76188-bed0-467b-bfed-b886cfee20e5",
        "parentId" : "1b04975f-9b44-4838-b219-49c23abf176b",
        "authorId" : "940afe62-a033-4e56-b2d3-8de3ca6d6d5c",
        "body" : "I think that is not particularly useful because it wont have the names of the properties, just the property, so we would need to count positions in order to understand (not to mention if config changed between counting positions :) )\r\nBut I am also ok with leaving it as it is right now, and we improve on this as we need it for other indexers :ok: ",
        "createdAt" : "2021-04-30T11:17:23Z",
        "updatedAt" : "2021-05-06T13:33:31Z",
        "lastEditedBy" : "940afe62-a033-4e56-b2d3-8de3ca6d6d5c",
        "tags" : [
        ]
      },
      {
        "id" : "cd722325-e0e2-4eae-8586-860531fb7acc",
        "parentId" : "1b04975f-9b44-4838-b219-49c23abf176b",
        "authorId" : "940afe62-a033-4e56-b2d3-8de3ca6d6d5c",
        "body" : "actually I take this back entirely: we anyway have to roll our config, and since we need to change that anyway as things change, to adapt this is not that big of an overhead",
        "createdAt" : "2021-04-30T11:33:01Z",
        "updatedAt" : "2021-05-06T13:33:31Z",
        "lastEditedBy" : "940afe62-a033-4e56-b2d3-8de3ca6d6d5c",
        "tags" : [
        ]
      }
    ],
    "commit" : "38bbeb2abe1ea95c4859da656d8f1bb52c955ee8",
    "line" : 122,
    "diffHunk" : "@@ -1,1 +120,124 @@             |  jdbcUrl:  ${config.indexerConfig.jdbcUrl}\n             |\n             |Indexer parameters:\n             |  enableAppendOnlySchema:    ${config.indexerConfig.enableAppendOnlySchema}\n             |  inputMappingParallelism:   ${config.indexerConfig.inputMappingParallelism}"
  },
  {
    "id" : "3fa5c18e-cf24-4b8e-9e36-87b9bc2616a4",
    "prId" : 9509,
    "prUrl" : "https://github.com/digital-asset/daml/pull/9509",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3dbfc728-275a-434d-a3c7-2209a6896bd9",
        "parentId" : null,
        "authorId" : "940afe62-a033-4e56-b2d3-8de3ca6d6d5c",
        "body" : "This number can be deceiving. As I understood the duration includes the whole export ingestion. With CHESS+ exports we have an initial phase (~100 updates), and the trade registration updates themselves. So this average TP will include for example all the heavy package uploads too.\r\nWith the CHESS+ trade registration flows is fairly easy to figure out the length of the prefix: we just have to have the number of total update in the export, and substract from it twice the amount of expected trade-registrations:\r\n- for that to figure we need reporting of the total number of updates contained in the export in this tool\r\n- configuration of this prefix for this tool\r\n- a way to ingest first the prefix, and only start the counter/metrics/timer afterwards\r\n(you can capture this behavior on the PoC branch)\r\n\r\nI understand, that this would be some work to impement. Alternatively it would be useful to add per second/per 10 second metrics reporting to the logs, where the prefix ingestion can be omitted visually.",
        "createdAt" : "2021-04-28T07:41:21Z",
        "updatedAt" : "2021-05-06T13:33:31Z",
        "lastEditedBy" : "940afe62-a033-4e56-b2d3-8de3ca6d6d5c",
        "tags" : [
        ]
      },
      {
        "id" : "fcec7c88-1662-4945-9b63-e0d7902979af",
        "parentId" : "3dbfc728-275a-434d-a3c7-2209a6896bd9",
        "authorId" : "c83a17a2-0c0d-4811-9fe5-e560bb3ad87a",
        "body" : "Very good point. I have added a disclaimer to the console output that these numbers are not representative and users should inspect the metrics instead.\r\n\r\nIt's easy to dump metrics every 10 sec to the console using the `--metrics-reporter=console --metrics-reporting-interval=PT0M10S` CLI flags, or to a CSV file using `--metrics-reporter=csv:///PATH`. The output is very verbose (it includes _all_ metrics and not just the ones of interest) and not as nice as in your PoC benchmark, but the end goal is to have metrics appear in Grafana anyway.",
        "createdAt" : "2021-04-30T09:55:43Z",
        "updatedAt" : "2021-05-06T13:33:31Z",
        "lastEditedBy" : "c83a17a2-0c0d-4811-9fe5-e560bb3ad87a",
        "tags" : [
        ]
      },
      {
        "id" : "970f55ee-3c72-44f5-a19c-2a943cb05bc2",
        "parentId" : "3dbfc728-275a-434d-a3c7-2209a6896bd9",
        "authorId" : "940afe62-a033-4e56-b2d3-8de3ca6d6d5c",
        "body" : "sounds great, let's see how that works in practice :ok: \r\n",
        "createdAt" : "2021-04-30T11:18:51Z",
        "updatedAt" : "2021-05-06T13:33:31Z",
        "lastEditedBy" : "940afe62-a033-4e56-b2d3-8de3ca6d6d5c",
        "tags" : [
        ]
      }
    ],
    "commit" : "38bbeb2abe1ea95c4859da656d8f1bb52c955ee8",
    "line" : 134,
    "diffHunk" : "@@ -1,1 +132,136 @@             |  duration:    $duration\n             |  updates:     $updates\n             |  updates/sec: ${updates / duration}\n             |\n             |Other metrics:"
  },
  {
    "id" : "98989124-3991-40c3-a1b7-92a24e653afb",
    "prId" : 9509,
    "prUrl" : "https://github.com/digital-asset/daml/pull/9509",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "df592ca9-130a-4788-aee8-40611618537d",
        "parentId" : null,
        "authorId" : "940afe62-a033-4e56-b2d3-8de3ca6d6d5c",
        "body" : "here as well: probably contains ingesting/decoding the CHESS+ packages as well",
        "createdAt" : "2021-04-28T07:42:44Z",
        "updatedAt" : "2021-05-06T13:33:31Z",
        "lastEditedBy" : "940afe62-a033-4e56-b2d3-8de3ca6d6d5c",
        "tags" : [
        ]
      }
    ],
    "commit" : "38bbeb2abe1ea95c4859da656d8f1bb52c955ee8",
    "line" : 147,
    "diffHunk" : "@@ -1,1 +145,149 @@            metrics.daml.parallelIndexer.ingestion.duration.getSnapshot\n          )}\n             |  ingestion.duration.rate:    ${metrics.daml.parallelIndexer.ingestion.duration.getMeanRate}\n             |\n             |Notes:"
  }
]