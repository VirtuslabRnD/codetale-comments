[
  {
    "id" : "e1177fd4-001b-4cb5-a837-f272aa47586b",
    "prId" : 9764,
    "prUrl" : "https://github.com/digital-asset/daml/pull/9764",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2fcf2559-7874-4889-87ff-9c84af75c86b",
        "parentId" : null,
        "authorId" : "c83a17a2-0c0d-4811-9fe5-e560bb3ad87a",
        "body" : "This is exactly the reason why the description was left out initially.\r\n\r\nSome context: what the ledger API authorization does is only compare the content of the request (e.g., the command object) with the content of the access token, both of which are provided by the user. Ledger API authorization does not depend on any on-ledger data.\r\n\r\nThe main concern should be about leaking cryptographic secrets related to the access token (such as the correct signature or the keys used for checking the signature). If the validation/decoding of the access token fails, we only store a generic [Claims.Unauthenticated](https://github.com/digital-asset/daml/blob/main/ledger/ledger-api-auth/src/main/scala/com/digitalasset/ledger/api/auth/Claims.scala#L52) object without any details. The code responsible for sending out the gRPC error message does not have access to the original access token.\r\n\r\nAdding details for why permission was denied should therefore be possible.",
        "createdAt" : "2021-05-27T09:04:23Z",
        "updatedAt" : "2021-05-27T09:04:23Z",
        "lastEditedBy" : "c83a17a2-0c0d-4811-9fe5-e560bb3ad87a",
        "tags" : [
        ]
      },
      {
        "id" : "647fe8c4-57d8-434a-a383-f87a47cd24ff",
        "parentId" : "2fcf2559-7874-4889-87ff-9c84af75c86b",
        "authorId" : "11e7ec00-9b2f-47d2-abd0-12246c0f9845",
        "body" : "Yeah, so @soren-da suggested to rather just leave it as is. We don't have any test ensuring that we do not leak security-relevant information through that rejection. So if we want to respond with meaningful errors, then we also need to add the whole test harness to ensure this remains secure even after refactorings. As this is out-of-scope for now, I guess that it will have to be picked up at a later point in time.",
        "createdAt" : "2021-05-27T09:14:03Z",
        "updatedAt" : "2021-05-27T09:14:03Z",
        "lastEditedBy" : "11e7ec00-9b2f-47d2-abd0-12246c0f9845",
        "tags" : [
        ]
      }
    ],
    "commit" : "0d226d060351369d81ecb62de945f4f9b2e0b576",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +43,47 @@    grpcError(Status.UNIMPLEMENTED.withDescription(description))\n\n  // permission denied is intentionally without description to ensure we don't leak security relevant information by accident\n  def permissionDenied(): StatusRuntimeException =\n    grpcError(Status.PERMISSION_DENIED)"
  },
  {
    "id" : "a964e6ed-b8b8-4955-bbb5-7e275f8e73ca",
    "prId" : 3524,
    "prUrl" : "https://github.com/digital-asset/daml/pull/3524",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "42516d8d-5ce8-40ca-9f03-147420138e42",
        "parentId" : null,
        "authorId" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "body" : "This `trait` has a misleading name, i.e., this is only 1 factory (which creates different types of errors) hence it should be named `ErrorFactory` instead.",
        "createdAt" : "2019-11-20T10:20:58Z",
        "updatedAt" : "2019-11-20T12:51:07Z",
        "lastEditedBy" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "tags" : [
        ]
      }
    ],
    "commit" : "02760b2d9223fbfc9c776e4b3edac71864bcd5f9",
    "line" : 1,
    "diffHunk" : "@@ -1,1 +38,42 @@    grpcError(Status.UNIMPLEMENTED.withDescription(description))\n\n  def permissionDenied(description: String): StatusRuntimeException =\n    grpcError(Status.PERMISSION_DENIED.withDescription(description))\n"
  }
]