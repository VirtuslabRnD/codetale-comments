[
  {
    "id" : "f4d40c7d-c57e-4767-ae79-470068ee08c2",
    "prId" : 3051,
    "prUrl" : "https://github.com/digital-asset/daml/pull/3051",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f127c0ee-59d8-430d-aa3c-02d72b532d6f",
        "parentId" : null,
        "authorId" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "body" : "I'd prefer to keep class hierarchies closed, unless we have a valid use case for inheritance.\r\n```suggestion\r\nfinal class AuthorizationInterceptor(authService: AuthService, ec: ExecutionContext)\r\n```",
        "createdAt" : "2019-10-04T11:31:53Z",
        "updatedAt" : "2019-10-07T13:17:51Z",
        "lastEditedBy" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "tags" : [
        ]
      }
    ],
    "commit" : "7b086d71418f8dd31bcf1d51c0ae1f9e2877d27c",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +26,30 @@  * Use [[ApiServiceAuthorization]] to read the claims from the context.\n  * */\nclass AuthorizationInterceptor(protected val authService: AuthService, ec: ExecutionContext)\n    extends ServerInterceptor {\n"
  },
  {
    "id" : "3a75f601-94e8-4e51-b174-4d409e0dfcad",
    "prId" : 3051,
    "prUrl" : "https://github.com/digital-asset/daml/pull/3051",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3220678f-b048-4253-b72f-b2b97b6a4c18",
        "parentId" : null,
        "authorId" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "body" : "```suggestion\r\n  private[this] val logger: Logger = LoggerFactory.getLogger(AuthorizationInterceptor.getClass)\r\n```",
        "createdAt" : "2019-10-04T11:32:40Z",
        "updatedAt" : "2019-10-07T13:17:51Z",
        "lastEditedBy" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "tags" : [
        ]
      }
    ],
    "commit" : "7b086d71418f8dd31bcf1d51c0ae1f9e2877d27c",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +29,33 @@    extends ServerInterceptor {\n\n  protected val logger: Logger = LoggerFactory.getLogger(AuthorizationInterceptor.getClass)\n\n  override def interceptCall[ReqT, RespT]("
  }
]