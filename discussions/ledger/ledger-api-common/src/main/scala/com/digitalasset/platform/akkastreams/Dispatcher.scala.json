[
  {
    "id" : "90e69687-4f29-4e68-af14-95660b1f75f9",
    "prId" : 611,
    "prUrl" : "https://github.com/digital-asset/daml/pull/611",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a881eaed-c92e-4721-a21b-b1fa5c0cb258",
        "parentId" : null,
        "authorId" : "e316b0c3-3da9-495c-b0fe-7fb96d032e37",
        "body" : "@dajmaki FYI, we're gonna have this soon",
        "createdAt" : "2019-04-18T15:40:34Z",
        "updatedAt" : "2019-04-24T10:54:57Z",
        "lastEditedBy" : "e316b0c3-3da9-495c-b0fe-7fb96d032e37",
        "tags" : [
        ]
      }
    ],
    "commit" : "80a155bf0253163f8e06e1fb42f82f22e3ae95fe",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +38,42 @@    * @param range (startInclusive, endExclusive) => Source[(Index, T), NotUsed]\n    */\n  final case class RangeQuery[Index: Ordering, T](\n      range: (Index, Index) => Source[(Index, T), NotUsed])\n      extends SteppingMode[Index, T]"
  },
  {
    "id" : "9a888d3e-9180-4af4-bdbe-4813628c7f05",
    "prId" : 611,
    "prUrl" : "https://github.com/digital-asset/daml/pull/611",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ea637f3a-b211-4bd2-a8fe-9bf787b47a54",
        "parentId" : null,
        "authorId" : "8e6a9b81-aba7-4206-84ba-06825f79e954",
        "body" : "as far as i can tell we never use this. is it even worth defining before we need it?",
        "createdAt" : "2019-04-24T08:56:13Z",
        "updatedAt" : "2019-04-24T10:54:57Z",
        "lastEditedBy" : "8e6a9b81-aba7-4206-84ba-06825f79e954",
        "tags" : [
        ]
      },
      {
        "id" : "68757127-05a8-4bb3-a7dc-aa117d38cd9a",
        "parentId" : "ea637f3a-b211-4bd2-a8fe-9bf787b47a54",
        "authorId" : "e316b0c3-3da9-495c-b0fe-7fb96d032e37",
        "body" : "well, we have been using it for a long time and it can still be handy in future situations. It's a well tested feature so I would keep it.",
        "createdAt" : "2019-04-24T09:10:31Z",
        "updatedAt" : "2019-04-24T10:54:57Z",
        "lastEditedBy" : "e316b0c3-3da9-495c-b0fe-7fb96d032e37",
        "tags" : [
        ]
      }
    ],
    "commit" : "80a155bf0253163f8e06e1fb42f82f22e3ae95fe",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +28,32 @@    * @param readElement   reads the element on the given index\n    */\n  final case class OneAfterAnother[Index: Ordering, T](\n      readSuccessor: (Index, T) => Index,\n      readElement: Index => Future[T])"
  }
]