[
  {
    "id" : "e3307273-8ad3-4027-9adb-7ee320826d9f",
    "prId" : 3051,
    "prUrl" : "https://github.com/digital-asset/daml/pull/3051",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "68003e95-b628-4f3a-a543-6bf552b26bb1",
        "parentId" : null,
        "authorId" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "body" : "```\r\nscala> None.forall { _ => false }\r\nres1: Boolean = true\r\n```\r\nThis would mean that a command submission without a party would go through authorization and be caught by validation instead. It doesn't seem unreasonable so that the concerns are clearly divided, but I thought it would make sense to raise this point for discussion.",
        "createdAt" : "2019-10-04T11:28:17Z",
        "updatedAt" : "2019-10-07T13:17:51Z",
        "lastEditedBy" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "tags" : [
        ]
      },
      {
        "id" : "d8689b39-3bb6-49bc-b42e-d8d3507ba927",
        "parentId" : "68003e95-b628-4f3a-a543-6bf552b26bb1",
        "authorId" : "c83a17a2-0c0d-4811-9fe5-e560bb3ad87a",
        "body" : "Good point. I think producing a validation error and not an authorization error for empty party lists is the right thing, so I have left the implementation as is and added a comment.\r\n\r\nLet me know if you feel the implementation should change.",
        "createdAt" : "2019-10-07T10:57:30Z",
        "updatedAt" : "2019-10-07T13:17:51Z",
        "lastEditedBy" : "c83a17a2-0c0d-4811-9fe5-e560bb3ad87a",
        "tags" : [
        ]
      },
      {
        "id" : "b83b4255-33ce-4192-a0d2-78bf4d13fbb3",
        "parentId" : "68003e95-b628-4f3a-a543-6bf552b26bb1",
        "authorId" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "body" : "Cool, thanks for the clarification. Marking as resolved.",
        "createdAt" : "2019-10-07T13:26:32Z",
        "updatedAt" : "2019-10-07T13:26:32Z",
        "lastEditedBy" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "tags" : [
        ]
      }
    ],
    "commit" : "7b086d71418f8dd31bcf1d51c0ae1f9e2877d27c",
    "line" : 92,
    "diffHunk" : "@@ -1,1 +90,94 @@    * Note: An missing party does NOT result in an authorization error.\n    */\n  def requireClaimsForParty(party: Option[String]): Either[StatusRuntimeException, Unit] = {\n    requireClaims(\n      claims => if (party.forall(p => claims.canActAs(p))) Authorized else NotAuthorized())"
  },
  {
    "id" : "61f9b6ac-cdd4-40a6-a757-7c1730cddc22",
    "prId" : 3051,
    "prUrl" : "https://github.com/digital-asset/daml/pull/3051",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e73e0adc-99fa-4259-bf20-33912a927675",
        "parentId" : null,
        "authorId" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "body" : "```\r\nscala> Set.empty.forall { _ => false }\r\nres1: Boolean = true\r\n```\r\nThis would mean that a transactions request without a party would go through authorization and be caught by validation instead. It doesn't seem unreasonable so that the concerns are clearly divided, but I thought it would make sense to raise this point for discussion.",
        "createdAt" : "2019-10-04T11:29:29Z",
        "updatedAt" : "2019-10-07T13:17:51Z",
        "lastEditedBy" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "tags" : [
        ]
      }
    ],
    "commit" : "7b086d71418f8dd31bcf1d51c0ae1f9e2877d27c",
    "line" : 84,
    "diffHunk" : "@@ -1,1 +82,86 @@    * Note: An empty set does NOT result in an authorization error.\n    */\n  def requireClaimsForAllParties(parties: Set[String]): Either[StatusRuntimeException, Unit] = {\n    requireClaims(\n      claims => if (parties.forall(p => claims.canActAs(p))) Authorized else NotAuthorized())"
  },
  {
    "id" : "d1222790-4c85-4856-b0a9-757823ba6ed1",
    "prId" : 3051,
    "prUrl" : "https://github.com/digital-asset/daml/pull/3051",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4decc74f-da2e-4bd6-b405-0bbde643fca7",
        "parentId" : null,
        "authorId" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "body" : "I don't see usages of this method in this PR, am I missing something?",
        "createdAt" : "2019-10-04T11:41:11Z",
        "updatedAt" : "2019-10-07T13:17:51Z",
        "lastEditedBy" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "tags" : [
        ]
      },
      {
        "id" : "5212faf2-be16-4ad5-9278-347913ec5655",
        "parentId" : "4decc74f-da2e-4bd6-b405-0bbde643fca7",
        "authorId" : "c83a17a2-0c0d-4811-9fe5-e560bb3ad87a",
        "body" : "No usages, but a useful method when dealing with gRPC contexts. We might need it later for implementing canceling requests after claims expiration, so I did not want to delete it.",
        "createdAt" : "2019-10-07T10:52:27Z",
        "updatedAt" : "2019-10-07T13:17:51Z",
        "lastEditedBy" : "c83a17a2-0c0d-4811-9fe5-e560bb3ad87a",
        "tags" : [
        ]
      }
    ],
    "commit" : "7b086d71418f8dd31bcf1d51c0ae1f9e2877d27c",
    "line" : 67,
    "diffHunk" : "@@ -1,1 +65,69 @@    * ```\n    */\n  def withContext[T](context: Context)(block: => T): T = {\n    val previous = context.attach()\n    try block"
  },
  {
    "id" : "741d55a1-1d27-4688-8d1f-b6d6f2edc6a5",
    "prId" : 3051,
    "prUrl" : "https://github.com/digital-asset/daml/pull/3051",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4e6cc867-828f-4230-acfc-97e151fd1249",
        "parentId" : null,
        "authorId" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "body" : "Looks like this can be made into a private helper.",
        "createdAt" : "2019-10-04T11:46:17Z",
        "updatedAt" : "2019-10-07T13:17:51Z",
        "lastEditedBy" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "tags" : [
        ]
      }
    ],
    "commit" : "7b086d71418f8dd31bcf1d51c0ae1f9e2877d27c",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +30,34 @@    *           or Unit if the request is authorized.\n    */\n  def requireClaims(check: Claims => Authorization): Either[StatusRuntimeException, Unit] = {\n    val claims = AuthorizationInterceptor.contextKeyClaim.get()\n    if (claims == null) {"
  }
]