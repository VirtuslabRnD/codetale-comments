[
  {
    "id" : "fbdeda8b-b33f-42dc-86d5-09d022351c7b",
    "prId" : 7224,
    "prUrl" : "https://github.com/digital-asset/daml/pull/7224",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "68783197-0aa6-4c3a-a3cd-c9068020c2a4",
        "parentId" : null,
        "authorId" : "1d70ec7b-8793-4cc6-95c8-fac6f7816dcc",
        "body" : "Are these `warn` for a specific reason or could they be turned into `info`?",
        "createdAt" : "2020-08-25T13:36:04Z",
        "updatedAt" : "2020-08-25T14:38:23Z",
        "lastEditedBy" : "1d70ec7b-8793-4cc6-95c8-fac6f7816dcc",
        "tags" : [
        ]
      },
      {
        "id" : "2508c207-5cdb-44cf-ba25-a4dbcf607291",
        "parentId" : "68783197-0aa6-4c3a-a3cd-c9068020c2a4",
        "authorId" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "body" : "I would prefer avoiding, as much as possible, user confusion due to badly configured logging. It can also be used to ensure that the output stands out. Since the only thing this run mode does is print those four lines and exit, I don't see a specific issue in leaving these at `warn` level.",
        "createdAt" : "2020-08-25T14:42:55Z",
        "updatedAt" : "2020-08-25T14:42:56Z",
        "lastEditedBy" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "tags" : [
        ]
      },
      {
        "id" : "3a047038-b6b2-472f-96c9-38f06a9a3512",
        "parentId" : "68783197-0aa6-4c3a-a3cd-c9068020c2a4",
        "authorId" : "1d70ec7b-8793-4cc6-95c8-fac6f7816dcc",
        "body" : "No real issue indeed, it only creates a moment of confusion for users that see the log for the first time and read WARN. It's rather more of a matter of consistency, i.e. \"info\" should be the threshold used for information (also, log configuration can be so broken, it doesn't even print warnings).",
        "createdAt" : "2020-08-25T14:55:15Z",
        "updatedAt" : "2020-08-25T14:55:15Z",
        "lastEditedBy" : "1d70ec7b-8793-4cc6-95c8-fac6f7816dcc",
        "tags" : [
        ]
      }
    ],
    "commit" : "29b289de696f9165d3b4733f6fb8fc502435ddd0",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +63,67 @@          case Success(metadata) =>\n            logger.warn(s\"ledger_id: ${metadata.ledgerId}\")\n            logger.warn(s\"participant_id: ${metadata.participantId}\")\n            logger.warn(s\"ledger_end: ${metadata.ledgerEnd}\")\n            logger.warn(s\"version: ${metadata.participantIntegrationApiVersion}\")"
  },
  {
    "id" : "4e44b597-9478-4e15-94a7-cd6ec3f84bbc",
    "prId" : 6428,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6428",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "85cc5f1d-c228-40ad-8795-304211a14abd",
        "parentId" : null,
        "authorId" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "body" : "I'd suggest `Engine()` to return the default configuration -- this way you won't have to change `kvutils` or other code.",
        "createdAt" : "2020-06-19T14:13:18Z",
        "updatedAt" : "2020-06-26T06:54:36Z",
        "lastEditedBy" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "tags" : [
        ]
      },
      {
        "id" : "aa6cec8b-08a2-4812-99c3-8e1411ea13a1",
        "parentId" : "85cc5f1d-c228-40ad-8795-304211a14abd",
        "authorId" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "body" : "All the purpose of #5164 is that each implementation of Ledger have to specify *explicitly* which version it allows, so when we introduce a new version in the engine this does not impact the ledger implementations. \r\nFor this reason we definitively do not want a default constructor.  \r\n\r\n",
        "createdAt" : "2020-06-19T15:01:50Z",
        "updatedAt" : "2020-06-26T06:54:36Z",
        "lastEditedBy" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "tags" : [
        ]
      }
    ],
    "commit" : "d2832ff8457fca90adb26dc3d71314a458f268fd",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +45,49 @@\n      // FIXME: https://github.com/digital-asset/daml/issues/5164\n      // This should be made configurable\n      val engineConfig = Engine.DevConfig\n"
  },
  {
    "id" : "32d24c68-579e-45a6-99da-2eaf56a17c28",
    "prId" : 3930,
    "prUrl" : "https://github.com/digital-asset/daml/pull/3930",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a137b192-97b9-4b44-89b2-ed0c7453465e",
        "parentId" : null,
        "authorId" : "eb431011-3221-41ae-bf30-e72dde278004",
        "body" : "Safest bet is to use `URLEncoder`.",
        "createdAt" : "2020-01-07T10:49:23Z",
        "updatedAt" : "2020-01-13T09:32:40Z",
        "lastEditedBy" : "eb431011-3221-41ae-bf30-e72dde278004",
        "tags" : [
        ]
      },
      {
        "id" : "43f67010-d8b9-424e-affb-fd3a666d4a58",
        "parentId" : "a137b192-97b9-4b44-89b2-ed0c7453465e",
        "authorId" : "a19260b0-5e05-4d6e-8307-335e8dc80e5b",
        "body" : "This seems to encode spaces to `+`, which is still invalid.",
        "createdAt" : "2020-01-13T08:41:13Z",
        "updatedAt" : "2020-01-13T09:32:40Z",
        "lastEditedBy" : "a19260b0-5e05-4d6e-8307-335e8dc80e5b",
        "tags" : [
        ]
      }
    ],
    "commit" : "e6dcd869a792cd3f93481b15fa023552da27cb7f",
    "line" : 41,
    "diffHunk" : "@@ -1,1 +39,43 @@\n    implicit val system: ActorSystem = ActorSystem(\n      \"[^A-Za-z0-9_\\\\-]\".r.replaceAllIn(name.toLowerCase, \"-\"))\n    implicit val materializer: Materializer = Materializer(system)\n    implicit val executionContext: ExecutionContext = system.dispatcher"
  },
  {
    "id" : "509577b9-a420-43af-8862-167fa5b8f94b",
    "prId" : 3930,
    "prUrl" : "https://github.com/digital-asset/daml/pull/3930",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8fb745cd-e809-48d2-84c7-99aca5ae17bd",
        "parentId" : null,
        "authorId" : "eb431011-3221-41ae-bf30-e72dde278004",
        "body" : "The archives are already uploaded to the ledger, so we don't need to provide them here again.",
        "createdAt" : "2020-01-07T10:54:29Z",
        "updatedAt" : "2020-01-13T09:32:40Z",
        "lastEditedBy" : "eb431011-3221-41ae-bf30-e72dde278004",
        "tags" : [
        ]
      },
      {
        "id" : "097686eb-d6de-4b56-b257-4b46fafc1cad",
        "parentId" : "8fb745cd-e809-48d2-84c7-99aca5ae17bd",
        "authorId" : "a19260b0-5e05-4d6e-8307-335e8dc80e5b",
        "body" : "Good point!",
        "createdAt" : "2020-01-13T09:16:29Z",
        "updatedAt" : "2020-01-13T09:32:40Z",
        "lastEditedBy" : "a19260b0-5e05-4d6e-8307-335e8dc80e5b",
        "tags" : [
        ]
      },
      {
        "id" : "b5494dc8-7cff-4020-87b0-2fc852a5d405",
        "parentId" : "8fb745cd-e809-48d2-84c7-99aca5ae17bd",
        "authorId" : "a19260b0-5e05-4d6e-8307-335e8dc80e5b",
        "body" : "Turns out this is what enables the API server to preload the packages, which is a useful optimization, so leaving it. (Discussed with @gerolf-da.)",
        "createdAt" : "2020-01-13T09:32:56Z",
        "updatedAt" : "2020-01-13T09:32:56Z",
        "lastEditedBy" : "a19260b0-5e05-4d6e-8307-335e8dc80e5b",
        "tags" : [
        ]
      }
    ],
    "commit" : "e6dcd869a792cd3f93481b15fa023552da27cb7f",
    "line" : 109,
    "diffHunk" : "@@ -1,1 +107,111 @@      ApiServerConfig(\n        config.participantId,\n        config.archiveFiles.map(_.toFile).toList,\n        config.port,\n        config.address,"
  }
]