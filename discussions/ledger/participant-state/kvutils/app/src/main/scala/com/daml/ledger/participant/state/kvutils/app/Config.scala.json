[
  {
    "id" : "4bb1e8aa-6197-4fc4-8881-4d1882fb397b",
    "prId" : 9931,
    "prUrl" : "https://github.com/digital-asset/daml/pull/9931",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fbbf8175-6fa7-4baf-ba8d-ccd7e286ee41",
        "parentId" : null,
        "authorId" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "body" : "This case class has reached 20 fields this way. Can we group these arguments, please?\r\nFor example, the following could be clearly separate groups:\r\n* feature flags\r\n* caches\r\n* metrics\r\n* engine",
        "createdAt" : "2021-06-16T10:34:03Z",
        "updatedAt" : "2021-06-16T10:34:03Z",
        "lastEditedBy" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "tags" : [
        ]
      }
    ],
    "commit" : "b4b1e3a7811293dcd09b18786ed1f347982224ff",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +65,69 @@      maxInboundMessageSize = DefaultMaxInboundMessageSize,\n      eventsPageSize = IndexConfiguration.DefaultEventsPageSize,\n      eventsProcessingParallelism = IndexConfiguration.DefaultEventsProcessingParallelism,\n      stateValueCache = caching.WeightedCache.Configuration.none,\n      lfValueTranslationEventCache = caching.SizedCache.Configuration.none,"
  },
  {
    "id" : "bc3fd419-6f36-40a4-9cf8-6b300037f811",
    "prId" : 9839,
    "prUrl" : "https://github.com/digital-asset/daml/pull/9839",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b8408061-36b8-4181-b53b-637f6c5dabe9",
        "parentId" : null,
        "authorId" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "body" : "If this is defined somewhere else, it would probably be wise to factor it out in a common shared packages (`//libs-scala` probably being a good place it).",
        "createdAt" : "2021-05-29T08:32:33Z",
        "updatedAt" : "2021-05-29T08:32:49Z",
        "lastEditedBy" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "tags" : [
        ]
      }
    ],
    "commit" : "d0295beb69ef83160aecd54e903c1e235b17438e",
    "line" : 95,
    "diffHunk" : "@@ -1,1 +353,357 @@          .text(\n            \"The maximum number of commands waiting to be submitted for each party. Overflowing this threshold will cause back-pressure, signaled by a RESOURCE_EXHAUSTED error code. Default is 512.\"\n          )\n\n        opt[Duration](\"tracker-retention-period\")"
  },
  {
    "id" : "18e8f259-d060-4c79-99ea-6f63e968dc8f",
    "prId" : 9690,
    "prUrl" : "https://github.com/digital-asset/daml/pull/9690",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "62583275-a5a7-4e63-bd54-95dace0ba493",
        "parentId" : null,
        "authorId" : "c83a17a2-0c0d-4811-9fe5-e560bb3ad87a",
        "body" : "Could you also add a corresponding CLI parameter to [the indexer benchmark config](https://github.com/digital-asset/daml/blob/main/ledger/indexer-benchmark/src/main/scala/ledger/indexerbenchmark/Config.scala#L54)?",
        "createdAt" : "2021-05-14T20:03:27Z",
        "updatedAt" : "2021-05-14T20:09:00Z",
        "lastEditedBy" : "c83a17a2-0c0d-4811-9fe5-e560bb3ad87a",
        "tags" : [
        ]
      }
    ],
    "commit" : "272dec71986c3104e1e89d2cf4167f859ade4b01",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +204,208 @@              .map(_.toInt)\n              .getOrElse(ParticipantIndexerConfig.DefaultInputMappingParallelism)\n            val indexerMaxInputBufferSize = kv\n              .get(\"indexer-max-input-buffer-size\")\n              .map(_.toInt)"
  },
  {
    "id" : "3d518d5e-be01-4434-b88a-e524336fa5fa",
    "prId" : 8816,
    "prUrl" : "https://github.com/digital-asset/daml/pull/8816",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1bde66b7-460e-482d-8aae-9bc42657793f",
        "parentId" : null,
        "authorId" : "181bcece-33df-41af-887d-5d5f51beb543",
        "body" : "We really need to make these share a connection pool.",
        "createdAt" : "2021-02-11T11:43:18Z",
        "updatedAt" : "2021-02-12T09:00:48Z",
        "lastEditedBy" : "181bcece-33df-41af-887d-5d5f51beb543",
        "tags" : [
        ]
      },
      {
        "id" : "2ea95015-06aa-416f-a12f-b1920607d65a",
        "parentId" : "1bde66b7-460e-482d-8aae-9bc42657793f",
        "authorId" : "eb431011-3221-41ae-bf30-e72dde278004",
        "body" : "I would say it's actually healthy to have them separate. The indexer should be able to push as many ledger state updates to the index db, regardless of how busy the rest of the participant is (either handling command submissions or serving the rest of the ledger api).",
        "createdAt" : "2021-02-11T20:04:53Z",
        "updatedAt" : "2021-02-12T09:00:48Z",
        "lastEditedBy" : "eb431011-3221-41ae-bf30-e72dde278004",
        "tags" : [
        ]
      },
      {
        "id" : "b1780d55-7b2e-484d-a715-ada69b6c3a42",
        "parentId" : "1bde66b7-460e-482d-8aae-9bc42657793f",
        "authorId" : "181bcece-33df-41af-887d-5d5f51beb543",
        "body" : "Then a prioritized connection pool. :upside_down_face: \r\n\r\nI think you're right though; way too much effort and no guarantee of any actual improvement. This is much simpler.",
        "createdAt" : "2021-02-12T08:45:57Z",
        "updatedAt" : "2021-02-12T09:00:48Z",
        "lastEditedBy" : "181bcece-33df-41af-887d-5d5f51beb543",
        "tags" : [
        ]
      }
    ],
    "commit" : "42e08d31622e0cee4ad03933160e554fd08cb308",
    "line" : 37,
    "diffHunk" : "@@ -1,1 +118,122 @@              \"server-jdbc-url, \" +\n              \"api-server-connection-pool-size\" +\n              \"indexer-server-connection-pool-size\" +\n              \"max-commands-in-flight, \" +\n              \"management-service-timeout, \" +"
  },
  {
    "id" : "ea7ff84e-bb37-4d28-9048-44fe781b17dc",
    "prId" : 8718,
    "prUrl" : "https://github.com/digital-asset/daml/pull/8718",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c5339fc3-178e-4167-9626-f8c1f1a71f49",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "why do we want this to be inconsistent with sandbox? That just seems annoying. And it really is unsafe.",
        "createdAt" : "2021-02-03T10:00:09Z",
        "updatedAt" : "2021-02-03T10:00:09Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "690c5499-e9b7-4a4d-a06e-a547f9e2e88e",
        "parentId" : "c5339fc3-178e-4167-9626-f8c1f1a71f49",
        "authorId" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "body" : "cc @mziolekda ",
        "createdAt" : "2021-02-03T10:12:28Z",
        "updatedAt" : "2021-02-03T10:12:28Z",
        "lastEditedBy" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "tags" : [
        ]
      }
    ],
    "commit" : "5c8f4dc21ede33787f9123e87bfa91daf1f112b7",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +316,320 @@      })\n\n      opt[Unit](\"early-access\")\n        .optional()\n        .action((_, c) => c.copy(engineMode = EngineMode.EarlyAccess))"
  },
  {
    "id" : "17bb86ab-d9d5-495b-ae2e-6047a9b4d122",
    "prId" : 7660,
    "prUrl" : "https://github.com/digital-asset/daml/pull/7660",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4b6e6ae9-d403-4515-9093-d393a69549c6",
        "parentId" : null,
        "authorId" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "body" : "`getEnvironmentVariable`",
        "createdAt" : "2020-10-14T08:22:44Z",
        "updatedAt" : "2020-10-14T08:25:27Z",
        "lastEditedBy" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "tags" : [
        ]
      }
    ],
    "commit" : "8f558a5537a7733d84118cdf9dedbb7389f44618",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +76,80 @@      defaultExtra: Extra,\n      args: Seq[String],\n      getEnvVar: String => Option[String] = sys.env.get(_),\n  ): Option[Config[Extra]] =\n    parser(name, extraOptions, getEnvVar).parse(args, createDefault(defaultExtra)).flatMap {"
  },
  {
    "id" : "9fa187c4-0a68-4673-889e-016933a557f5",
    "prId" : 6721,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6721",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dff3d905-3907-41f1-8c63-3ed33895009d",
        "parentId" : null,
        "authorId" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "body" : "Does this change the behavior when using `daml sandbox`? If so, this is probably worth mentioning in a change log entry.",
        "createdAt" : "2020-07-15T09:58:36Z",
        "updatedAt" : "2020-07-16T15:42:46Z",
        "lastEditedBy" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "tags" : [
        ]
      },
      {
        "id" : "f823d1f8-5688-4044-a8c9-faf42e85bcd3",
        "parentId" : "dff3d905-3907-41f1-8c63-3ed33895009d",
        "authorId" : "eb431011-3221-41ae-bf30-e72dde278004",
        "body" : "No, options are optional by default, but since other parameters had `optional()` explicit, I added it here as well.",
        "createdAt" : "2020-07-15T10:20:12Z",
        "updatedAt" : "2020-07-16T15:42:46Z",
        "lastEditedBy" : "eb431011-3221-41ae-bf30-e72dde278004",
        "tags" : [
        ]
      }
    ],
    "commit" : "9317365d3249dfafc8dea2cd1562eb4cf29b0de3",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +125,129 @@        })\n      opt[String](\"ledger-id\")\n        .optional()\n        .text(\"The ID of the ledger. This must be the same each time the ledger is started. Defaults to a random UUID.\")\n        .action((ledgerId, config) => config.copy(ledgerId = ledgerId))"
  },
  {
    "id" : "b68985f5-2f8e-473a-9c4b-1c348e12b66f",
    "prId" : 6052,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6052",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d9efba48-bc93-4558-ac79-44d0b779d96b",
        "parentId" : null,
        "authorId" : "eb431011-3221-41ae-bf30-e72dde278004",
        "body" : "I understand that it's not that easy to get the actual size occupied by individual entries, but I'm not a big fan of having different units for cache configuration.",
        "createdAt" : "2020-05-20T14:44:20Z",
        "updatedAt" : "2020-05-26T07:28:28Z",
        "lastEditedBy" : "eb431011-3221-41ae-bf30-e72dde278004",
        "tags" : [
        ]
      },
      {
        "id" : "bd6ffc40-703f-41b1-bed5-f80a462d5390",
        "parentId" : "d9efba48-bc93-4558-ac79-44d0b779d96b",
        "authorId" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "body" : "Can we leave it out as an improvement? I'd like to get a sense of the overhead of doing it. Considering it's an opt-in feature and the size should be around the thousand of entries tops, I think it's not necessarily that bad.",
        "createdAt" : "2020-05-20T15:04:11Z",
        "updatedAt" : "2020-05-26T07:28:28Z",
        "lastEditedBy" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "tags" : [
        ]
      },
      {
        "id" : "99be2ed5-4401-4d27-a0f0-5376a6a20f26",
        "parentId" : "d9efba48-bc93-4558-ac79-44d0b779d96b",
        "authorId" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "body" : "I agree with @gerolf-da that having a consistent cache weighting approach helps, however, as the first iteration it's fine to use element counts (note that doing it properly requires extending the current caffeine cache wrapper).",
        "createdAt" : "2020-05-25T13:53:09Z",
        "updatedAt" : "2020-05-26T07:28:28Z",
        "lastEditedBy" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "tags" : [
        ]
      }
    ],
    "commit" : "9945ea44fabe5fe18e6608839b2ce57f04cbb4ee",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +162,166 @@        .optional()\n        .text(\n          s\"The maximum size of the cache used to deserialize DAML-LF values, in number of allowed entries. By default, nothing is cached.\")\n        .action((maximumLfValueTranslationCacheEntries, config) =>\n          config.copy(lfValueTranslationCache = config.lfValueTranslationCache.copy("
  },
  {
    "id" : "09e3b71e-ffb4-45d0-aff0-a205577239c6",
    "prId" : 4155,
    "prUrl" : "https://github.com/digital-asset/daml/pull/4155",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0f37c45e-6bc0-42e7-b16e-db78718c1c41",
        "parentId" : null,
        "authorId" : "eb431011-3221-41ae-bf30-e72dde278004",
        "body" : "This now requires a SQL backend as the kvutil ledger. Could the Runner then still be used with another implementation? Maybe `Runner` is not supposed to be used that way, then it's fine.",
        "createdAt" : "2020-01-22T12:44:07Z",
        "updatedAt" : "2020-01-22T15:12:07Z",
        "lastEditedBy" : "eb431011-3221-41ae-bf30-e72dde278004",
        "tags" : [
        ]
      },
      {
        "id" : "be1d15f5-dd1b-42e6-bfd5-b2ec0951b243",
        "parentId" : "0f37c45e-6bc0-42e7-b16e-db78718c1c41",
        "authorId" : "a19260b0-5e05-4d6e-8307-335e8dc80e5b",
        "body" : "It defaults to H2 in memory, just as it did before; this is how _ledger-on-memory_ works.",
        "createdAt" : "2020-01-22T12:50:03Z",
        "updatedAt" : "2020-01-22T15:12:07Z",
        "lastEditedBy" : "a19260b0-5e05-4d6e-8307-335e8dc80e5b",
        "tags" : [
        ]
      },
      {
        "id" : "e1f32ba3-509f-4ebf-a2e7-3c198a45a167",
        "parentId" : "0f37c45e-6bc0-42e7-b16e-db78718c1c41",
        "authorId" : "eb431011-3221-41ae-bf30-e72dde278004",
        "body" : "Right. I think it's not clear to me what the target of the `kvutils/app` folder is. On the surface it seems very general and not tied to a specific `ledger-on-...` implementation.",
        "createdAt" : "2020-01-22T13:48:49Z",
        "updatedAt" : "2020-01-22T15:12:07Z",
        "lastEditedBy" : "eb431011-3221-41ae-bf30-e72dde278004",
        "tags" : [
        ]
      },
      {
        "id" : "d6fc59ca-9192-44f6-8f29-bd3b35801ca0",
        "parentId" : "0f37c45e-6bc0-42e7-b16e-db78718c1c41",
        "authorId" : "a19260b0-5e05-4d6e-8307-335e8dc80e5b",
        "body" : "It is, absolutely. But it is tied to _kvutils_, the Ledger API Server, and the Indexer; for the API Server/Indexer, it'll use H2 by default.",
        "createdAt" : "2020-01-22T14:09:49Z",
        "updatedAt" : "2020-01-22T15:12:07Z",
        "lastEditedBy" : "a19260b0-5e05-4d6e-8307-335e8dc80e5b",
        "tags" : [
        ]
      }
    ],
    "commit" : "6d414ebd72f813c239463a48e245fc2e9fd9c0c8",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +15,19 @@    port: Int,\n    portFile: Option[Path],\n    serverJdbcUrl: String,\n    ledgerId: Option[String],\n    archiveFiles: Seq[Path],"
  },
  {
    "id" : "bbea0450-aad5-4fbd-8dce-822a79ef9916",
    "prId" : 10377,
    "prUrl" : "https://github.com/digital-asset/daml/pull/10377#pullrequestreview-716133267",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6ffcdd42-dddc-43e2-a5cf-6538df784b44",
        "parentId" : null,
        "authorId" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "body" : "This increases coupling between Daml-LF and kvutils-app config — we may have to add this back later.",
        "createdAt" : "2021-07-27T16:30:01Z",
        "updatedAt" : "2021-07-27T16:38:36Z",
        "lastEditedBy" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "tags" : [
        ]
      }
    ],
    "commit" : "d6082c58dcc9cea9da87dbbc0bc2059b5e18fdd1",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +488,492 @@        opt[Unit](\"early-access\")\n          .optional()\n          .action((_, c) => c.copy(allowedLanguageVersions = LanguageVersion.EarlyAccessVersions))\n          .text(\n            \"Enable preview version of the next Daml-LF language. Should not be used in production.\""
  },
  {
    "id" : "9826c777-62f8-4662-865e-a9a085fd133a",
    "prId" : 10465,
    "prUrl" : "https://github.com/digital-asset/daml/pull/10465#pullrequestreview-721118054",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3b2efb14-7f15-4df8-82b5-d856b49e9b23",
        "parentId" : null,
        "authorId" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "body" : "```suggestion\r\n            \"Use the append-only index database with parallel ingestion.\"\r\n```",
        "createdAt" : "2021-08-03T09:48:44Z",
        "updatedAt" : "2021-08-03T09:57:25Z",
        "lastEditedBy" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "tags" : [
        ]
      },
      {
        "id" : "35ea1939-ba72-4ba0-a1bf-665f90af120d",
        "parentId" : "3b2efb14-7f15-4df8-82b5-d856b49e9b23",
        "authorId" : "53efca31-cf56-4f70-be8f-a3714c600eb6",
        "body" : "Sorry, the PR went in on automerge before I was able to react",
        "createdAt" : "2021-08-03T12:10:12Z",
        "updatedAt" : "2021-08-03T12:10:12Z",
        "lastEditedBy" : "53efca31-cf56-4f70-be8f-a3714c600eb6",
        "tags" : [
        ]
      }
    ],
    "commit" : "d525f84ae4bece3d62347c4c0f0149f3b74223c0",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +518,522 @@          .hidden()\n          .text(\n            s\"Use the append-only index database with parallel ingestion.\"\n          )\n          .action((_, config) => config.copy(enableAppendOnlySchema = true))"
  },
  {
    "id" : "778f523d-3909-41a3-a1ef-ad9381d21e8d",
    "prId" : 10465,
    "prUrl" : "https://github.com/digital-asset/daml/pull/10465#pullrequestreview-721116391",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "544fd9c0-b212-4e9a-b2de-9ff9325a0725",
        "parentId" : null,
        "authorId" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "body" : "If these must be used in conjunction, why not have a single command-line option e.g. `indexer-enable-parallel-ingestion`?",
        "createdAt" : "2021-08-03T09:52:00Z",
        "updatedAt" : "2021-08-03T09:57:25Z",
        "lastEditedBy" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "tags" : [
        ]
      },
      {
        "id" : "df9bf1d0-6aa9-4818-8aaa-e8bac4e4ff17",
        "parentId" : "544fd9c0-b212-4e9a-b2de-9ff9325a0725",
        "authorId" : "53efca31-cf56-4f70-be8f-a3714c600eb6",
        "body" : "They don't have to be used in conjunction, append-only is fine to be set alone. It is a prerequisite for mutable-state-cache",
        "createdAt" : "2021-08-03T12:08:17Z",
        "updatedAt" : "2021-08-03T12:08:17Z",
        "lastEditedBy" : "53efca31-cf56-4f70-be8f-a3714c600eb6",
        "tags" : [
        ]
      }
    ],
    "commit" : "d525f84ae4bece3d62347c4c0f0149f3b74223c0",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +526,530 @@          .hidden()\n          .text(\n            \"Contract state cache for command execution. Must be enabled in conjunction with index-append-only-schema.\"\n          )\n          .action((_, config) => config.copy(enableMutableContractStateCache = true))"
  },
  {
    "id" : "3c349574-3537-4f73-b3f6-1a77f35b71b2",
    "prId" : 10465,
    "prUrl" : "https://github.com/digital-asset/daml/pull/10465#pullrequestreview-721115771",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "98bc4d63-21d6-41f6-a464-9bcfdf5132e6",
        "parentId" : null,
        "authorId" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "body" : "Do you still need to keep this TODO around?",
        "createdAt" : "2021-08-03T09:53:54Z",
        "updatedAt" : "2021-08-03T09:57:25Z",
        "lastEditedBy" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "tags" : [
        ]
      },
      {
        "id" : "e3f46b62-9486-451b-84ec-03af1a6c940e",
        "parentId" : "98bc4d63-21d6-41f6-a464-9bcfdf5132e6",
        "authorId" : "53efca31-cf56-4f70-be8f-a3714c600eb6",
        "body" : "mutating schema is still around. We will be able to get rid of i when everyone starts using append-only",
        "createdAt" : "2021-08-03T12:07:31Z",
        "updatedAt" : "2021-08-03T12:07:32Z",
        "lastEditedBy" : "53efca31-cf56-4f70-be8f-a3714c600eb6",
        "tags" : [
        ]
      }
    ],
    "commit" : "d525f84ae4bece3d62347c4c0f0149f3b74223c0",
    "line" : 3,
    "diffHunk" : "@@ -1,1 +513,517 @@          )\n\n        // TODO append-only: remove after removing support for the current (mutating) schema\n        opt[Unit](\"index-append-only-schema\")\n          .optional()"
  }
]