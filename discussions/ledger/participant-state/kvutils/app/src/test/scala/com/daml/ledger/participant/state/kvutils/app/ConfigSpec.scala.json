[
  {
    "id" : "92ca21f0-442d-4cbf-8588-409a16889d6b",
    "prId" : 8589,
    "prUrl" : "https://github.com/digital-asset/daml/pull/8589",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fd1e9902-e6c9-4c30-89c6-a4f3b5816728",
        "parentId" : null,
        "authorId" : "53efca31-cf56-4f70-be8f-a3714c600eb6",
        "body" : "Let's check with the emerging ledgers team if OPTIONAL should be the default",
        "createdAt" : "2021-01-25T09:58:55Z",
        "updatedAt" : "2021-01-27T18:43:04Z",
        "lastEditedBy" : "53efca31-cf56-4f70-be8f-a3714c600eb6",
        "tags" : [
        ]
      },
      {
        "id" : "d863d436-6ac8-47a4-a7e9-ede5abc154cd",
        "parentId" : "fd1e9902-e6c9-4c30-89c6-a4f3b5816728",
        "authorId" : "5f6b922a-83eb-4419-97b1-13c757c1e583",
        "body" : "Following my comment on the difference between `OPTIONAL` and `NONE` I would rather set either `NONE` or `REQUIRE` as a default value.",
        "createdAt" : "2021-01-25T14:06:01Z",
        "updatedAt" : "2021-01-27T18:43:04Z",
        "lastEditedBy" : "5f6b922a-83eb-4419-97b1-13c757c1e583",
        "tags" : [
        ]
      },
      {
        "id" : "02a4ea2c-e090-4065-ada0-72d34bd5a549",
        "parentId" : "fd1e9902-e6c9-4c30-89c6-a4f3b5816728",
        "authorId" : "53efca31-cf56-4f70-be8f-a3714c600eb6",
        "body" : "Emerging ledgers have confirmed that they were fine with `REQUIRED`",
        "createdAt" : "2021-01-27T13:20:45Z",
        "updatedAt" : "2021-01-27T18:43:04Z",
        "lastEditedBy" : "53efca31-cf56-4f70-be8f-a3714c600eb6",
        "tags" : [
        ]
      }
    ],
    "commit" : "f1f76a43293d190c3921b1c84b7741634995dafc",
    "line" : 50,
    "diffHunk" : "@@ -1,1 +137,141 @@  }\n\n  it should \"set REQUIRE client-auth when the parameter is not explicitly provided\" in {\n    val aValidTlsOptions = List(s\"$certRevocationChecking\", \"false\")\n    val config ="
  },
  {
    "id" : "e21f7d10-a718-4d10-accf-1452e3eaf8f3",
    "prId" : 7660,
    "prUrl" : "https://github.com/digital-asset/daml/pull/7660",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "91e0b2cd-a175-491a-8a53-303a2660a2ba",
        "parentId" : null,
        "authorId" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "body" : "These magic strings must be referenced from `Config`.",
        "createdAt" : "2020-10-14T08:08:56Z",
        "updatedAt" : "2020-10-14T08:25:27Z",
        "lastEditedBy" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "tags" : [
        ]
      }
    ],
    "commit" : "8f558a5537a7733d84118cdf9dedbb7389f44618",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +14,18 @@  private val participantId: ParticipantId = ParticipantId.assertFromString(\"dummy-participant\")\n  private val fixedParticipantSubOptions = s\"participant-id=$participantId,port=123\"\n  private val jdbcUrlSubOption = \"server-jdbc-url\"\n  private val jdbcUrlEnvSubOption = \"server-jdbc-url-env\"\n  private def configParser("
  },
  {
    "id" : "65d52313-0de9-4019-9e0b-4823da04b54d",
    "prId" : 7660,
    "prUrl" : "https://github.com/digital-asset/daml/pull/7660",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "35f33f54-0f9f-4ef6-ae96-1815cc557042",
        "parentId" : null,
        "authorId" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "body" : "I'd suggest naming this as `mandatoryParticipantOptions` or `mandatoryParticipantConfig` or similar to hint that these must be provided.",
        "createdAt" : "2020-10-14T08:19:49Z",
        "updatedAt" : "2020-10-14T08:25:27Z",
        "lastEditedBy" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "tags" : [
        ]
      }
    ],
    "commit" : "8f558a5537a7733d84118cdf9dedbb7389f44618",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +13,17 @@  private val participantOption = \"--participant\"\n  private val participantId: ParticipantId = ParticipantId.assertFromString(\"dummy-participant\")\n  private val fixedParticipantSubOptions = s\"participant-id=$participantId,port=123\"\n  private val jdbcUrlSubOption = \"server-jdbc-url\"\n  private val jdbcUrlEnvSubOption = \"server-jdbc-url-env\""
  },
  {
    "id" : "bf0f79d1-5a02-4f87-a936-8ff4c613710c",
    "prId" : 7660,
    "prUrl" : "https://github.com/digital-asset/daml/pull/7660",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8731868a-8b24-4b65-833e-22c840b0d4b5",
        "parentId" : null,
        "authorId" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "body" : "Constants should be `UpperCamelCased` -- please don't change this.",
        "createdAt" : "2020-10-14T08:21:14Z",
        "updatedAt" : "2020-10-14T08:25:27Z",
        "lastEditedBy" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "tags" : [
        ]
      }
    ],
    "commit" : "8f558a5537a7733d84118cdf9dedbb7389f44618",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +10,14 @@final class ConfigSpec extends FlatSpec with Matchers with OptionValues {\n\n  private val dumpIndexMetadataCommand = \"dump-index-metadata\"\n  private val participantOption = \"--participant\"\n  private val participantId: ParticipantId = ParticipantId.assertFromString(\"dummy-participant\")"
  },
  {
    "id" : "732e7502-bd0f-4876-bf98-40ee2262d963",
    "prId" : 7660,
    "prUrl" : "https://github.com/digital-asset/daml/pull/7660",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a51ed550-adc2-4fac-abab-dc9f4b86f2f4",
        "parentId" : null,
        "authorId" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "body" : "To improve test readability, I'd suggest putting the relevant config key first (i.e., from this test case's perspective).",
        "createdAt" : "2020-10-14T08:25:15Z",
        "updatedAt" : "2020-10-14T08:25:27Z",
        "lastEditedBy" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "tags" : [
        ]
      }
    ],
    "commit" : "8f558a5537a7733d84118cdf9dedbb7389f44618",
    "line" : 49,
    "diffHunk" : "@@ -1,1 +42,46 @@    val jdbcFromCli = \"command-line-jdbc\"\n    val config = configParser(\n      Seq(participantOption, s\"$fixedParticipantSubOptions,$jdbcUrlSubOption=$jdbcFromCli\"))\n      .getOrElse(fail())\n    config.participants.head.serverJdbcUrl should be(jdbcFromCli)"
  },
  {
    "id" : "6dad3ee9-a630-4591-a1ac-95026e5cf2bc",
    "prId" : 7213,
    "prUrl" : "https://github.com/digital-asset/daml/pull/7213",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "99c8aebe-0a42-4378-a34c-13dbd7146237",
        "parentId" : null,
        "authorId" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "body" : "Shouldn't this be `ConfigParser`?",
        "createdAt" : "2020-08-31T17:04:58Z",
        "updatedAt" : "2020-08-31T17:04:58Z",
        "lastEditedBy" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "tags" : [
        ]
      }
    ],
    "commit" : "b157bb878277d49a3f0921b6958f5867d9395897",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +13,17 @@    Config.parse(\"Test\", (_: OptionParser[Config[Unit]]) => (), (), _)\n\n  behavior of \"Runner\"\n\n  it should \"fail if a participant is not provided in run mode\" in {"
  }
]