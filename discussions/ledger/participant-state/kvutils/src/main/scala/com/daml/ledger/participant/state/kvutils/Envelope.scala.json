[
  {
    "id" : "523e99d3-2016-42bc-a0c8-9dcdd66ffe24",
    "prId" : 7380,
    "prUrl" : "https://github.com/digital-asset/daml/pull/7380",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8b66218c-b069-4cef-a7b9-18e9c1a0a051",
        "parentId" : null,
        "authorId" : "181bcece-33df-41af-887d-5d5f51beb543",
        "body" : "We should probably close even if this fails.\r\n\r\n```suggestion\r\n    val decompressed = try {\r\n      ByteString.readFrom(gzipIn)\r\n    } finally {\r\n      gzipIn.close()\r\n    }\r\n```\r\n\r\nAnd the same above.",
        "createdAt" : "2020-09-11T12:37:03Z",
        "updatedAt" : "2020-09-11T12:37:10Z",
        "lastEditedBy" : "181bcece-33df-41af-887d-5d5f51beb543",
        "tags" : [
        ]
      },
      {
        "id" : "76ffe0f0-b2ee-4aba-9f6c-71f1c7e34073",
        "parentId" : "8b66218c-b069-4cef-a7b9-18e9c1a0a051",
        "authorId" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "body" : "Good point -- addressed in #7384.",
        "createdAt" : "2020-09-11T13:14:57Z",
        "updatedAt" : "2020-09-11T13:14:57Z",
        "lastEditedBy" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "tags" : [
        ]
      }
    ],
    "commit" : "da7d5a3c5971d6a0b7829a9aeeaafac4f1e629e5",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +144,148 @@    val gzipIn = new GZIPInputStream(payload.newInput)\n    val decompressed = ByteString.readFrom(gzipIn)\n    gzipIn.close()\n    decompressed\n  }"
  },
  {
    "id" : "a2745520-339d-476c-8c1c-fbc1d53cda7b",
    "prId" : 6992,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6992",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3d25c338-1728-4e83-8c37-af39dec83b92",
        "parentId" : null,
        "authorId" : "1d70ec7b-8793-4cc6-95c8-fac6f7816dcc",
        "body" : "This default might be unused for now but I think it's meaningful.",
        "createdAt" : "2020-08-05T09:11:55Z",
        "updatedAt" : "2020-08-06T15:33:42Z",
        "lastEditedBy" : "1d70ec7b-8793-4cc6-95c8-fac6f7816dcc",
        "tags" : [
        ]
      },
      {
        "id" : "4f0b7c35-c174-44db-abe6-31c764aaff6a",
        "parentId" : "3d25c338-1728-4e83-8c37-af39dec83b92",
        "authorId" : "4c501a40-3340-4f35-b66e-fcfb75e20f37",
        "body" : "Is it meaningful enough to be silenced with a regex matching the error and a comment?",
        "createdAt" : "2020-08-05T14:27:22Z",
        "updatedAt" : "2020-08-06T15:33:42Z",
        "lastEditedBy" : "4c501a40-3340-4f35-b66e-fcfb75e20f37",
        "tags" : [
        ]
      },
      {
        "id" : "98c99246-cb4e-4c0b-a513-019e88d874ba",
        "parentId" : "3d25c338-1728-4e83-8c37-af39dec83b92",
        "authorId" : "4c501a40-3340-4f35-b66e-fcfb75e20f37",
        "body" : "114c1a2f3bbc4734e1dc103e89528a790894cfcc",
        "createdAt" : "2020-08-05T14:47:32Z",
        "updatedAt" : "2020-08-06T15:33:42Z",
        "lastEditedBy" : "4c501a40-3340-4f35-b66e-fcfb75e20f37",
        "tags" : [
        ]
      },
      {
        "id" : "f42510a0-5d53-42c3-8670-84034f989499",
        "parentId" : "3d25c338-1728-4e83-8c37-af39dec83b92",
        "authorId" : "1d70ec7b-8793-4cc6-95c8-fac6f7816dcc",
        "body" : "Maybe not worth a silencing annotation, unless a specific use for it is planned soon; in that case I'd also remove the comment. @miklos-da what do you think?",
        "createdAt" : "2020-08-05T14:54:04Z",
        "updatedAt" : "2020-08-06T15:33:42Z",
        "lastEditedBy" : "1d70ec7b-8793-4cc6-95c8-fac6f7816dcc",
        "tags" : [
        ]
      },
      {
        "id" : "839f7653-6a04-4c83-9010-0b65af9da599",
        "parentId" : "3d25c338-1728-4e83-8c37-af39dec83b92",
        "authorId" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "body" : "I agree with @fabiotudone-da. I.e., let's remove the comment and set it to a default that we define as a constant explicitly everywhere we call this function. We'll definitely use it with different values once we get to storage optimization (i.e., compressing only large enough values).",
        "createdAt" : "2020-08-06T15:19:33Z",
        "updatedAt" : "2020-08-06T15:33:42Z",
        "lastEditedBy" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "tags" : [
        ]
      },
      {
        "id" : "586c2bcc-5e5d-4f96-b435-188b98ee8601",
        "parentId" : "3d25c338-1728-4e83-8c37-af39dec83b92",
        "authorId" : "4c501a40-3340-4f35-b66e-fcfb75e20f37",
        "body" : "4666d04ce7a5dc19ce3b8a8b1a8e625aa07570e0 ",
        "createdAt" : "2020-08-06T15:33:48Z",
        "updatedAt" : "2020-08-06T15:33:48Z",
        "lastEditedBy" : "4c501a40-3340-4f35-b66e-fcfb75e20f37",
        "tags" : [
        ]
      }
    ],
    "commit" : "4666d04ce7a5dc19ce3b8a8b1a8e625aa07570e0",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +32,36 @@      kind: Proto.Envelope.MessageKind,\n      bytes: ByteString,\n      compression: Boolean): ByteString =\n    Proto.Envelope.newBuilder\n      .setVersion(Version.version)"
  },
  {
    "id" : "d7188347-0dc7-4c06-84df-79781e6d599c",
    "prId" : 3923,
    "prUrl" : "https://github.com/digital-asset/daml/pull/3923",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "45ef5fd6-4056-4b4a-b14d-ac747ae6bac0",
        "parentId" : null,
        "authorId" : "a19260b0-5e05-4d6e-8307-335e8dc80e5b",
        "body" : "Perhaps you could pull the `Try(â€¦).toEither.left.map(_.getMessage)` pattern into a helper.",
        "createdAt" : "2019-12-23T09:07:33Z",
        "updatedAt" : "2020-01-10T10:31:04Z",
        "lastEditedBy" : "a19260b0-5e05-4d6e-8307-335e8dc80e5b",
        "tags" : [
        ]
      },
      {
        "id" : "812470c8-1136-4f8e-9cd5-3293e162b610",
        "parentId" : "45ef5fd6-4056-4b4a-b14d-ac747ae6bac0",
        "authorId" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "body" : "Changed accordingly.",
        "createdAt" : "2020-01-07T13:53:04Z",
        "updatedAt" : "2020-01-10T10:31:04Z",
        "lastEditedBy" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "tags" : [
        ]
      }
    ],
    "commit" : "c820159bc8cad55858939f177705f0a8bab0fd13",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +62,66 @@  private def openWithParser(parseEnvelope: () => Proto.Envelope): Either[String, Message] =\n    for {\n      envelope <- Try(parseEnvelope()).toEither.left.map(_.getMessage)\n      _ <- Either.cond(\n        envelope.getVersion == Version.version,"
  }
]