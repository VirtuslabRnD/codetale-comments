[
  {
    "id" : "425b65e9-6bd2-4fc7-b110-95087fbb01ee",
    "prId" : 7989,
    "prUrl" : "https://github.com/digital-asset/daml/pull/7989",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "209d8be0-8e73-4aed-8d0d-bdaf81ab0be2",
        "parentId" : null,
        "authorId" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "body" : "I'd be wary of putting any time related comments in the code ; )",
        "createdAt" : "2020-11-17T17:33:59Z",
        "updatedAt" : "2020-11-18T09:29:29Z",
        "lastEditedBy" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "tags" : [
        ]
      },
      {
        "id" : "81c31055-a19a-4373-90cd-72b35f748751",
        "parentId" : "209d8be0-8e73-4aed-8d0d-bdaf81ab0be2",
        "authorId" : "1d70ec7b-8793-4cc6-95c8-fac6f7816dcc",
        "body" : "I agree in general but the addition of this yet unused field can only be justified as a preparation for upcoming changes.",
        "createdAt" : "2020-11-18T09:19:23Z",
        "updatedAt" : "2020-11-18T09:29:29Z",
        "lastEditedBy" : "1d70ec7b-8793-4cc6-95c8-fac6f7816dcc",
        "tags" : [
        ]
      }
    ],
    "commit" : "6bb560fda3993e300f5da71cea86e8b3606ff755",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +266,270 @@      recordTime = recordTime,\n      divulgedContracts = List.empty,\n      // Currently derived from Fetch and LookupByKey nodes, soon pre-computed\n      blindingInfo = None,\n    )"
  },
  {
    "id" : "190e2668-acfd-4345-a42f-e633816f7584",
    "prId" : 6568,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6568",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9c906b63-3305-49ab-a85d-76875e8e7d99",
        "parentId" : null,
        "authorId" : "d7a5ac30-0554-4d45-9856-c4d4d457e069",
        "body" : "Up for discussion whether we want to override the record time in the log entry with the record time for the update. My preference would be to have the record time from the log entry take precedence over the record time for the update. This way, we could selectively set the record time to the pre-execution time in some rejection log entries. (It's not really feasible in Concord, but we could do this in DAML-on-SQL if we wanted to; not sure that it would buy us anything in the end.)",
        "createdAt" : "2020-07-02T07:26:12Z",
        "updatedAt" : "2020-07-03T08:21:00Z",
        "lastEditedBy" : "d7a5ac30-0554-4d45-9856-c4d4d457e069",
        "tags" : [
        ]
      },
      {
        "id" : "b7be935b-b234-4697-a174-9a691cfe846b",
        "parentId" : "9c906b63-3305-49ab-a85d-76875e8e7d99",
        "authorId" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "body" : "As discussed, changed it to always take the record time from the log entry whenever available.",
        "createdAt" : "2020-07-02T08:48:31Z",
        "updatedAt" : "2020-07-03T08:21:00Z",
        "lastEditedBy" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "tags" : [
        ]
      }
    ],
    "commit" : "e115010b9d46239fedf65c99bcc15a46b7e8acd4",
    "line" : 58,
    "diffHunk" : "@@ -1,1 +194,198 @@      recordTimeForUpdate: Option[Timestamp],\n      recordTimeFromLogEntry: Option[Timestamp]): Timestamp =\n    (recordTimeForUpdate, recordTimeFromLogEntry) match {\n      case (_, Some(recordTime)) => recordTime\n      case (Some(recordTime), _) => recordTime"
  },
  {
    "id" : "9cb8b1d9-e7cd-4769-8398-85d83b8c67e9",
    "prId" : 6568,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6568",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6d9f20ea-cd77-4639-84d7-c50d2690a27a",
        "parentId" : null,
        "authorId" : "d7a5ac30-0554-4d45-9856-c4d4d457e069",
        "body" : "Right. AFAIK the ledger API server will get confused when it receives different updates for the same command ID. This will likely change in the future, but for now this seems to be the right behaviour.",
        "createdAt" : "2020-07-02T07:32:08Z",
        "updatedAt" : "2020-07-03T08:21:00Z",
        "lastEditedBy" : "d7a5ac30-0554-4d45-9856-c4d4d457e069",
        "tags" : [
        ]
      },
      {
        "id" : "0d387545-c638-4656-b3e6-43b8c0942bff",
        "parentId" : "6d9f20ea-cd77-4639-84d7-c50d2690a27a",
        "authorId" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "body" : "OK, thanks for the confirmation.",
        "createdAt" : "2020-07-02T08:42:55Z",
        "updatedAt" : "2020-07-03T08:21:00Z",
        "lastEditedBy" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "tags" : [
        ]
      }
    ],
    "commit" : "e115010b9d46239fedf65c99bcc15a46b7e8acd4",
    "line" : 99,
    "diffHunk" : "@@ -1,1 +284,288 @@      case _ if deduplicated =>\n        // We don't emit updates for deduplicated submissions.\n        None\n\n      case DamlLogEntry.PayloadCase.TRANSACTION_REJECTION_ENTRY if invalidRecordTime =>"
  },
  {
    "id" : "3a5e5ceb-fa80-490b-bf1d-7bff68945732",
    "prId" : 6568,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6568",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d6a4f62c-e087-4ec1-8dcf-812abb80471b",
        "parentId" : null,
        "authorId" : "d7a5ac30-0554-4d45-9856-c4d4d457e069",
        "body" : "I wonder whether we should log at INFO or DEBUG here that we've dropped the out-of-time-bounds rejection. I don't expect that this case should happen, so I suggest to at least record in the log that this has happened.",
        "createdAt" : "2020-07-02T07:37:13Z",
        "updatedAt" : "2020-07-03T08:21:00Z",
        "lastEditedBy" : "d7a5ac30-0554-4d45-9856-c4d4d457e069",
        "tags" : [
        ]
      },
      {
        "id" : "38c7a408-d540-4788-a00a-519a6cfab06f",
        "parentId" : "d6a4f62c-e087-4ec1-8dcf-812abb80471b",
        "authorId" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "body" : "Good point -- added at `INFO` level.",
        "createdAt" : "2020-07-02T08:41:51Z",
        "updatedAt" : "2020-07-03T08:21:00Z",
        "lastEditedBy" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "tags" : [
        ]
      },
      {
        "id" : "db1500f1-343e-46b8-83da-dc3e70d9ffae",
        "parentId" : "d6a4f62c-e087-4ec1-8dcf-812abb80471b",
        "authorId" : "1d70ec7b-8793-4cc6-95c8-fac6f7816dcc",
        "body" : "Shouldn't we rather fail if we don't expect this case to be valid (i.e., seeing it would mean a bug)?",
        "createdAt" : "2020-07-02T10:11:20Z",
        "updatedAt" : "2020-07-03T08:21:00Z",
        "lastEditedBy" : "1d70ec7b-8793-4cc6-95c8-fac6f7816dcc",
        "tags" : [
        ]
      },
      {
        "id" : "9c8a4121-7665-47ee-91fd-44779e1b04fd",
        "parentId" : "d6a4f62c-e087-4ec1-8dcf-812abb80471b",
        "authorId" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "body" : "It'll have the same effect, i.e., the ledger API server won't stop and you'll have something in the log. However, explicitly logging something will probably yield easier to consume information than an exception caught somewhere.",
        "createdAt" : "2020-07-02T13:32:16Z",
        "updatedAt" : "2020-07-03T08:21:00Z",
        "lastEditedBy" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "tags" : [
        ]
      },
      {
        "id" : "bd6af796-2868-4492-a93a-168e8e096ad8",
        "parentId" : "d6a4f62c-e087-4ec1-8dcf-812abb80471b",
        "authorId" : "1d70ec7b-8793-4cc6-95c8-fac6f7816dcc",
        "body" : "I meant I'd rather crash if we see unexpected behavior, so that we can't possibly overlook it.",
        "createdAt" : "2020-07-02T13:47:00Z",
        "updatedAt" : "2020-07-03T08:21:00Z",
        "lastEditedBy" : "1d70ec7b-8793-4cc6-95c8-fac6f7816dcc",
        "tags" : [
        ]
      },
      {
        "id" : "4ada4749-2ea0-48d6-9eee-01850400c568",
        "parentId" : "d6a4f62c-e087-4ec1-8dcf-812abb80471b",
        "authorId" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "body" : "In order to avoid overlooking such an issue you just need to set up the right monitoring. I.e., in my view the difference between 'crashing' and logging that we've dropped the out-of-time-bounds rejection is that in case of the previous the ledger API server will be restarted automagically whereas in the latter case it doesn't need to be restarted (you'll have the same information in the logs).",
        "createdAt" : "2020-07-02T16:23:17Z",
        "updatedAt" : "2020-07-03T08:21:00Z",
        "lastEditedBy" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "tags" : [
        ]
      },
      {
        "id" : "eeade336-38f5-48c0-83ee-4a3a0615ba2d",
        "parentId" : "d6a4f62c-e087-4ec1-8dcf-812abb80471b",
        "authorId" : "1d70ec7b-8793-4cc6-95c8-fac6f7816dcc",
        "body" : "Yes, if we only catch a bug in production (or any stage with auto-restart) then we need the right monitoring to raise some big red flag, that's why I wonder if a crash (or an exception log) is more amenable to that than an `INFO` log. Maybe raising to `ERROR` at least?",
        "createdAt" : "2020-07-02T16:28:49Z",
        "updatedAt" : "2020-07-03T08:21:00Z",
        "lastEditedBy" : "1d70ec7b-8793-4cc6-95c8-fac6f7816dcc",
        "tags" : [
        ]
      },
      {
        "id" : "45f68782-acb9-4768-96a9-5613b8df7bf1",
        "parentId" : "d6a4f62c-e087-4ec1-8dcf-812abb80471b",
        "authorId" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "body" : "Raised to `ERROR`.",
        "createdAt" : "2020-07-03T12:26:07Z",
        "updatedAt" : "2020-07-03T12:26:07Z",
        "lastEditedBy" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "tags" : [
        ]
      }
    ],
    "commit" : "e115010b9d46239fedf65c99bcc15a46b7e8acd4",
    "line" : 145,
    "diffHunk" : "@@ -1,1 +330,334 @@        logger.error(\n          s\"Dropped out-of-time-bounds log entry of type=${wrappedLogEntry.getPayloadCase}\")\n        None\n\n      case DamlLogEntry.PayloadCase.TRANSACTION_ENTRY |"
  },
  {
    "id" : "3ac5b09b-538d-4c2e-aba2-79d788d64bf9",
    "prId" : 3966,
    "prUrl" : "https://github.com/digital-asset/daml/pull/3966",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fbe765c9-71cd-417b-9dbb-05197fbfd827",
        "parentId" : null,
        "authorId" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "body" : "Can you add a unit test case for this, please?",
        "createdAt" : "2020-01-07T17:10:17Z",
        "updatedAt" : "2020-01-08T13:43:42Z",
        "lastEditedBy" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "tags" : [
        ]
      },
      {
        "id" : "c46dd46a-60b6-43a9-9562-f018f95c4016",
        "parentId" : "fbe765c9-71cd-417b-9dbb-05197fbfd827",
        "authorId" : null,
        "body" : "Added.",
        "createdAt" : "2020-01-08T09:57:16Z",
        "updatedAt" : "2020-01-08T13:43:42Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      }
    ],
    "commit" : "9df0c47c64a4fc5c7b0d6d4122fd6aaafaee5498",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +222,226 @@    )\n    Update.TransactionAccepted(\n      optSubmitterInfo =\n        if (txEntry.hasSubmitterInfo) Some(parseSubmitterInfo(txEntry.getSubmitterInfo)) else None,\n      transactionMeta = TransactionMeta("
  },
  {
    "id" : "930a1b15-1deb-462c-8580-b131abd1160d",
    "prId" : 3811,
    "prUrl" : "https://github.com/digital-asset/daml/pull/3811",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1129ece6-4123-4d25-ab29-87decd0e1902",
        "parentId" : null,
        "authorId" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "body" : "You mean returning a `RejectionReason` and not bailing out with an exception?",
        "createdAt" : "2019-12-11T09:59:44Z",
        "updatedAt" : "2019-12-11T10:10:38Z",
        "lastEditedBy" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "tags" : [
        ]
      },
      {
        "id" : "bc131b2b-ada0-4106-90ce-6d44f49db9d1",
        "parentId" : "1129ece6-4123-4d25-ab29-87decd0e1902",
        "authorId" : "53efca31-cf56-4f70-be8f-a3714c600eb6",
        "body" : "Yes, I find a crash a tall price to pay for missing error reason",
        "createdAt" : "2019-12-11T10:56:13Z",
        "updatedAt" : "2019-12-11T10:56:13Z",
        "lastEditedBy" : "53efca31-cf56-4f70-be8f-a3714c600eb6",
        "tags" : [
        ]
      },
      {
        "id" : "2ecb7fb5-f9e5-4a00-8afa-9652cc542fa6",
        "parentId" : "1129ece6-4123-4d25-ab29-87decd0e1902",
        "authorId" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "body" : "Makes sense. Do you want to add that new enum value to `RejectionReason` then?",
        "createdAt" : "2019-12-11T11:15:59Z",
        "updatedAt" : "2019-12-11T11:28:15Z",
        "lastEditedBy" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "tags" : [
        ]
      }
    ],
    "commit" : "561993529dbc4e148f7a091eb4cfd2d40ef559d8",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +241,245 @@          )\n        case DamlTransactionRejectionEntry.ReasonCase.REASON_NOT_SET =>\n          //TODO: Replace with \"Unknown reason\" error code or something similar\n          throw Err.InternalError(\"transactionRejectionEntryToUpdate: REASON_NOT_SET!\")\n      }"
  },
  {
    "id" : "773b3bce-73ba-46d6-a519-8216e79ed1a0",
    "prId" : 3744,
    "prUrl" : "https://github.com/digital-asset/daml/pull/3744",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9c4a9f27-2b46-4daf-89fa-0e2a9c96d1bf",
        "parentId" : null,
        "authorId" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "body" : "Probably an artifact of spinning off another branch, but asking just to make sure: why are the Brian's initials here?",
        "createdAt" : "2019-12-05T10:44:20Z",
        "updatedAt" : "2019-12-05T15:56:33Z",
        "lastEditedBy" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "tags" : [
        ]
      },
      {
        "id" : "8bb060fd-0e6a-4398-865d-b043ce8c9694",
        "parentId" : "9c4a9f27-2b46-4daf-89fa-0e2a9c96d1bf",
        "authorId" : "eb431011-3221-41ae-bf30-e72dde278004",
        "body" : "Because the change is taken from Brian's original PR.",
        "createdAt" : "2019-12-05T12:02:52Z",
        "updatedAt" : "2019-12-05T15:56:33Z",
        "lastEditedBy" : "eb431011-3221-41ae-bf30-e72dde278004",
        "tags" : [
        ]
      }
    ],
    "commit" : "d8204b7c377ce994002fb11ce1227c245747b3d0",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +38,42 @@    * @return [[Update]]s constructed from log entry.\n    */\n  // TODO(BH): add participantId to ensure participant id matches in DamlLogEntry\n  @throws(classOf[Err])\n  def logEntryToUpdate(entryId: DamlLogEntryId, entry: DamlLogEntry): List[Update] = {"
  },
  {
    "id" : "8a54cb25-f6a5-4156-adfc-5e72aeaf4862",
    "prId" : 637,
    "prUrl" : "https://github.com/digital-asset/daml/pull/637",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "497ba860-6614-4e1d-b2d9-b7e0601e608b",
        "parentId" : null,
        "authorId" : "ba0b5f2d-78e4-41a5-94a1-d55d6f19f728",
        "body" : "explain purpose of this singleton object",
        "createdAt" : "2019-04-26T13:39:10Z",
        "updatedAt" : "2019-04-29T09:35:03Z",
        "lastEditedBy" : "ba0b5f2d-78e4-41a5-94a1-d55d6f19f728",
        "tags" : [
        ]
      }
    ],
    "commit" : "d5b2167d99861a69fd3366ab5fb08acc35514642",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +20,24 @@  * key-value based ledger.\n  */\nobject KeyValueConsumption {\n\n  def packDamlLogEntry(entry: DamlStateKey): ByteString = entry.toByteString"
  }
]