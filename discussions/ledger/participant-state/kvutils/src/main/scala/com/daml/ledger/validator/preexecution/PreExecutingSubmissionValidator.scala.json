[
  {
    "id" : "b5e895d8-46e8-4794-956a-276955089f87",
    "prId" : 8478,
    "prUrl" : "https://github.com/digital-asset/daml/pull/8478",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "777eedef-a44d-47b7-b224-a48e67e3ef92",
        "parentId" : null,
        "authorId" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "body" : "This _may_ be an improvement. We tried to remove usages of `.mapValues` in the past because we found out it was recomputing it at every usage of the resulting collection. I believe the new Collections API should have fixed it.",
        "createdAt" : "2021-01-12T19:10:54Z",
        "updatedAt" : "2021-01-13T07:07:22Z",
        "lastEditedBy" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "tags" : [
        ]
      },
      {
        "id" : "9786c965-221c-4aa0-8c37-af03c8a3c362",
        "parentId" : "777eedef-a44d-47b7-b224-a48e67e3ef92",
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "yeah the new API makes more sense to me.",
        "createdAt" : "2021-01-12T19:33:04Z",
        "updatedAt" : "2021-01-13T07:07:22Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "922a59f9-1959-4b34-b671-abc5213b57c3",
        "parentId" : "777eedef-a44d-47b7-b224-a48e67e3ef92",
        "authorId" : "181bcece-33df-41af-887d-5d5f51beb543",
        "body" : "I think it does, because it's lazy and then forced by `.toMap`, which will compute everything.\r\n\r\nWorth checking though.",
        "createdAt" : "2021-01-12T19:48:08Z",
        "updatedAt" : "2021-01-13T07:07:22Z",
        "lastEditedBy" : "181bcece-33df-41af-887d-5d5f51beb543",
        "tags" : [
        ]
      },
      {
        "id" : "e116ee66-7dcc-48be-9993-e0222f0a761c",
        "parentId" : "777eedef-a44d-47b7-b224-a48e67e3ef92",
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "https://github.com/scala/scala/blob/v2.13.4/src/library/scala/collection/IterableOnce.scala#L1255 calls `Map.from` which forces the thing. iirc the deprecation warning mentions that they will add a strict version of `mapValues` in the future. Haven’t checked if it’s in Scala 3.",
        "createdAt" : "2021-01-13T07:12:36Z",
        "updatedAt" : "2021-01-13T07:12:36Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      }
    ],
    "commit" : "a33ebf455c78bb350594433fc466cde27b8056fd",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +54,58 @@        decodedSubmission <- decodeSubmission(submissionEnvelope)\n        fetchedInputs <- fetchSubmissionInputs(decodedSubmission, ledgerStateReader)\n        inputState = fetchedInputs.view.mapValues(hasDamlStateValue.damlStateValue).toMap\n        preExecutionResult = committer.preExecuteSubmission(\n          LedgerReader.DefaultConfiguration,"
  },
  {
    "id" : "a5f35a14-89c2-41ff-8877-0c8a5a0d8fe5",
    "prId" : 8180,
    "prUrl" : "https://github.com/digital-asset/daml/pull/8180",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2d3f8432-66ad-48b0-857f-1661c08d8e89",
        "parentId" : null,
        "authorId" : "181bcece-33df-41af-887d-5d5f51beb543",
        "body" : "This logic needs testing too.",
        "createdAt" : "2020-12-07T16:12:48Z",
        "updatedAt" : "2020-12-08T10:16:48Z",
        "lastEditedBy" : "181bcece-33df-41af-887d-5d5f51beb543",
        "tags" : [
        ]
      },
      {
        "id" : "e43e7712-163c-44ee-92c7-208397e408b6",
        "parentId" : "2d3f8432-66ad-48b0-857f-1661c08d8e89",
        "authorId" : "eb431011-3221-41ae-bf30-e72dde278004",
        "body" : "I think this should be guarded by a check for `nestedInputKeys.nonEmpty`. there's no point sending a request for and empty set of nested input keys.",
        "createdAt" : "2020-12-07T17:54:58Z",
        "updatedAt" : "2020-12-08T10:16:48Z",
        "lastEditedBy" : "eb431011-3221-41ae-bf30-e72dde278004",
        "tags" : [
        ]
      },
      {
        "id" : "b3928fe3-ac05-423f-9613-937862627f26",
        "parentId" : "2d3f8432-66ad-48b0-857f-1661c08d8e89",
        "authorId" : "181bcece-33df-41af-887d-5d5f51beb543",
        "body" : "@gerolf-da: Looks like this is already handled by the `CachingDamlLedgerStateReaderWithFingerprints` class.",
        "createdAt" : "2020-12-08T09:53:52Z",
        "updatedAt" : "2020-12-08T10:16:48Z",
        "lastEditedBy" : "181bcece-33df-41af-887d-5d5f51beb543",
        "tags" : [
        ]
      }
    ],
    "commit" : "74fc0248e2c87d51245988fde8e12dc3146e776b",
    "line" : 104,
    "diffHunk" : "@@ -1,1 +116,120 @@            DamlStateKey.newBuilder.setContractId(contractId).build\n        }\n        nestedInputValues <- ledgerStateReader.read(nestedInputKeys)\n      } yield {\n        assert(inputKeys.size == inputValues.size)"
  },
  {
    "id" : "00baaf69-18a7-4651-b072-99fd37a971ff",
    "prId" : 6711,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6711",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "33501fc5-2e84-472c-b0a0-7501d7c63f80",
        "parentId" : null,
        "authorId" : "ba0b5f2d-78e4-41a5-94a1-d55d6f19f728",
        "body" : "add assertion that exactly the requested number of keys have been read.",
        "createdAt" : "2020-07-14T09:50:41Z",
        "updatedAt" : "2020-07-15T08:11:38Z",
        "lastEditedBy" : "ba0b5f2d-78e4-41a5-94a1-d55d6f19f728",
        "tags" : [
        ]
      },
      {
        "id" : "fef92d70-df23-443c-b744-47791d3e073d",
        "parentId" : "33501fc5-2e84-472c-b0a0-7501d7c63f80",
        "authorId" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "body" : "Added. Though, that would be not honoring the contract of the interface.",
        "createdAt" : "2020-07-14T10:22:44Z",
        "updatedAt" : "2020-07-15T08:11:38Z",
        "lastEditedBy" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "tags" : [
        ]
      },
      {
        "id" : "7ef295ca-3c93-4579-bf63-9851426c0377",
        "parentId" : "33501fc5-2e84-472c-b0a0-7501d7c63f80",
        "authorId" : "ba0b5f2d-78e4-41a5-94a1-d55d6f19f728",
        "body" : "agreed. making the contract explicit in code is helpful though to catch buggy implementations early.",
        "createdAt" : "2020-07-14T11:19:03Z",
        "updatedAt" : "2020-07-15T08:11:38Z",
        "lastEditedBy" : "ba0b5f2d-78e4-41a5-94a1-d55d6f19f728",
        "tags" : [
        ]
      }
    ],
    "commit" : "e6145fdda1728eb9dd00d6dc94b3e0058872bbb2",
    "line" : 106,
    "diffHunk" : "@@ -1,1 +104,108 @@        .map { values =>\n          assert(inputKeys.size == values.size)\n          inputKeys.zip(values).toMap\n        }\n    )"
  }
]