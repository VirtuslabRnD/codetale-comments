[
  {
    "id" : "ae2488b5-94e8-4025-8f67-c842e104edf7",
    "prId" : 9433,
    "prUrl" : "https://github.com/digital-asset/daml/pull/9433",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d849d6da-ffba-4b18-b0fb-f623f6ddd655",
        "parentId" : null,
        "authorId" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "body" : ":+1: ",
        "createdAt" : "2021-04-20T13:46:02Z",
        "updatedAt" : "2021-04-20T13:53:31Z",
        "lastEditedBy" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "tags" : [
        ]
      }
    ],
    "commit" : "c5376837b4985dd4cd95d7c23ccd9e3923125cae",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +16,20 @@import com.daml.lf.data.Time\nimport com.daml.lf.transaction.{\n  BlindingInfo,\n  GlobalKey,\n  NodeId,"
  },
  {
    "id" : "519a016f-9a9e-4355-a483-ca19ce9af71c",
    "prId" : 8103,
    "prUrl" : "https://github.com/digital-asset/daml/pull/8103",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "653b762c-c7c5-4ff4-977f-7bbded3d1ce7",
        "parentId" : null,
        "authorId" : "eb431011-3221-41ae-bf30-e72dde278004",
        "body" : "`Set` is invariant, so we cannot use the type ascription on it directly. But since we anyway convert to a `List`, we can do it there.",
        "createdAt" : "2020-11-30T10:52:41Z",
        "updatedAt" : "2020-11-30T10:52:41Z",
        "lastEditedBy" : "eb431011-3221-41ae-bf30-e72dde278004",
        "tags" : [
        ]
      }
    ],
    "commit" : "3862cbe3caf47353a3affa1c060bd0c2d6ebd2ff",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +259,263 @@\n  private def encodeParties(parties: Set[Party]): List[String] =\n    (parties.toList: List[String]).sorted\n\n  private def encodeDisclosureEntry(disclosureEntry: (NodeId, Set[Party])): DisclosureEntry ="
  },
  {
    "id" : "1245c57d-4605-4fb6-8758-b322f2e9246c",
    "prId" : 8043,
    "prUrl" : "https://github.com/digital-asset/daml/pull/8043",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4d94c5b7-4962-4318-9386-73f81cf255c5",
        "parentId" : null,
        "authorId" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "body" : "Can you add tests for this, please?",
        "createdAt" : "2020-11-24T10:41:53Z",
        "updatedAt" : "2020-11-24T13:01:25Z",
        "lastEditedBy" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "tags" : [
        ]
      },
      {
        "id" : "1cbfffdc-b3ad-4f15-92c1-6f1f1f165478",
        "parentId" : "4d94c5b7-4962-4318-9386-73f81cf255c5",
        "authorId" : "c83a17a2-0c0d-4811-9fe5-e560bb3ad87a",
        "body" : ":+1:\r\n",
        "createdAt" : "2020-11-24T10:56:17Z",
        "updatedAt" : "2020-11-24T13:01:25Z",
        "lastEditedBy" : "c83a17a2-0c0d-4811-9fe5-e560bb3ad87a",
        "tags" : [
        ]
      }
    ],
    "commit" : "3909e551a9e156823f886814c98dcce125428657",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +71,75 @@\n  def commandDedupKey(subInfo: DamlSubmitterInfo): DamlStateKey = {\n    val sortedUniqueSubmitters =\n      if (subInfo.getSubmittersCount == 1)\n        subInfo.getSubmittersList"
  },
  {
    "id" : "e588a120-e5fc-4dbb-ac84-dd4afc52b843",
    "prId" : 8012,
    "prUrl" : "https://github.com/digital-asset/daml/pull/8012",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dd65ecf7-42c3-4d1e-b430-4ff28093f306",
        "parentId" : null,
        "authorId" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "body" : "To improve readability, move this string list to parties list conversion logic into a helper function, please.",
        "createdAt" : "2020-11-20T09:56:55Z",
        "updatedAt" : "2020-11-20T10:04:22Z",
        "lastEditedBy" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "tags" : [
        ]
      },
      {
        "id" : "d942f92c-1f81-400e-b0a7-f79295bbd2b2",
        "parentId" : "dd65ecf7-42c3-4d1e-b430-4ff28093f306",
        "authorId" : "1d70ec7b-8793-4cc6-95c8-fac6f7816dcc",
        "body" : "Done together with some more refactoring, let me know if you still see opportunities in #8024.",
        "createdAt" : "2020-11-20T12:09:18Z",
        "updatedAt" : "2020-11-20T12:09:18Z",
        "lastEditedBy" : "1d70ec7b-8793-4cc6-95c8-fac6f7816dcc",
        "tags" : [
        ]
      }
    ],
    "commit" : "177e9725a97e3500f27cf570931789e8854c4ee5",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +240,244 @@    BlindingInfo(\n      disclosure = blindingInfo.getDisclosuresList.asScala.map { disclosureEntry =>\n        decodeTransactionNodeId(disclosureEntry.getNodeId) -> disclosureEntry.getDisclosedToLocalPartiesList.asScala.toSet\n          .map(Party.assertFromString)\n      }.toMap,"
  },
  {
    "id" : "eb915091-9248-4859-8f19-39306fec7c28",
    "prId" : 8009,
    "prUrl" : "https://github.com/digital-asset/daml/pull/8009",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7d0bba77-f748-4c60-969b-2abdb8c0524f",
        "parentId" : null,
        "authorId" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "body" : "Can you remove these comments, please? I don't see why these help the reader. If you would like to stress out that the transaction blinding info is encoded in a deterministic way then please add that note to `encodeBlindingInfo`.",
        "createdAt" : "2020-11-20T09:38:15Z",
        "updatedAt" : "2020-11-20T09:47:39Z",
        "lastEditedBy" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "tags" : [
        ]
      },
      {
        "id" : "569b7ec5-bd72-4ac0-8e52-4d87ec5cc57d",
        "parentId" : "7d0bba77-f748-4c60-969b-2abdb8c0524f",
        "authorId" : "1d70ec7b-8793-4cc6-95c8-fac6f7816dcc",
        "body" : "Done, see #8024.",
        "createdAt" : "2020-11-20T12:07:45Z",
        "updatedAt" : "2020-11-20T12:07:45Z",
        "lastEditedBy" : "1d70ec7b-8793-4cc6-95c8-fac6f7816dcc",
        "tags" : [
        ]
      }
    ],
    "commit" : "fe49fc1b3bb29fdfe30a2395825dfa2f6b2d3a7d",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +230,234 @@\n  private def encodeParties(parties: Iterable[Party]): List[String] =\n    parties.asInstanceOf[Set[String]].toList.sorted // Deterministic\n\n  private def encodeDisclosureEntry(disclosureEntry: (NodeId, Set[Party])): DisclosureEntry ="
  },
  {
    "id" : "927d52a9-ce12-4bab-a03a-e255bdd9f6f5",
    "prId" : 4722,
    "prUrl" : "https://github.com/digital-asset/daml/pull/4722",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e0e20cc5-8aff-4dfe-aad7-b8a5561aa5ad",
        "parentId" : null,
        "authorId" : null,
        "body" : "Can we pick a default here if it is missing? e.g. make this backwards compatible.\r\n\r\nIt really doesn't matter so much with this change at this point in time, but I want us to get into habit to correctly do these changes. We'll soon be at a point when we'll enable data continuity testing, which will of course help to force the issue.",
        "createdAt" : "2020-03-06T16:34:15Z",
        "updatedAt" : "2020-03-09T16:23:44Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      }
    ],
    "commit" : "ecd5f47ac6267722864002b678eeaa67142ff5cd",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +140,144 @@      commandId = LedgerString.assertFromString(subInfo.getCommandId),\n      maxRecordTime = parseTimestamp(subInfo.getMaximumRecordTime),\n      deduplicateUntil = parseTimestamp(subInfo.getDeduplicateUntil).toInstant,\n    )\n"
  },
  {
    "id" : "4df39562-82a9-473f-83f1-5fa66ef59bf4",
    "prId" : 4722,
    "prUrl" : "https://github.com/digital-asset/daml/pull/4722",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "363892ad-41a9-44fc-916c-7da961bce60e",
        "parentId" : null,
        "authorId" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "body" : "Minor: it would make sense to make the naming fully consistent here (`maxRecordTime` vs. `SubmitterInfo`'s `maximumRecordTime`).",
        "createdAt" : "2020-03-06T17:07:53Z",
        "updatedAt" : "2020-03-09T16:23:44Z",
        "lastEditedBy" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "tags" : [
        ]
      }
    ],
    "commit" : "ecd5f47ac6267722864002b678eeaa67142ff5cd",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +139,143 @@      applicationId = LedgerString.assertFromString(subInfo.getApplicationId),\n      commandId = LedgerString.assertFromString(subInfo.getCommandId),\n      maxRecordTime = parseTimestamp(subInfo.getMaximumRecordTime),\n      deduplicateUntil = parseTimestamp(subInfo.getDeduplicateUntil).toInstant,\n    )"
  },
  {
    "id" : "0dea8ad9-8174-4bbf-ab71-bbb737a725ab",
    "prId" : 637,
    "prUrl" : "https://github.com/digital-asset/daml/pull/637",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2802d808-d2d0-4b47-b67a-cf304350b9cc",
        "parentId" : null,
        "authorId" : "ba0b5f2d-78e4-41a5-94a1-d55d6f19f728",
        "body" : "comment",
        "createdAt" : "2019-04-26T13:21:59Z",
        "updatedAt" : "2019-04-29T09:35:03Z",
        "lastEditedBy" : "ba0b5f2d-78e4-41a5-94a1-d55d6f19f728",
        "tags" : [
        ]
      }
    ],
    "commit" : "d5b2167d99861a69fd3366ab5fb08acc35514642",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +33,37 @@  * data structures.\n  */\nprivate[kvutils] object Conversions {\n\n  def toAbsCoid(txId: DamlLogEntryId, coid: ContractId): AbsoluteContractId = {"
  }
]