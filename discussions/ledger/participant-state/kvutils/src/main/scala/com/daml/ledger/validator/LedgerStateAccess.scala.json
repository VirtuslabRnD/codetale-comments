[
  {
    "id" : "8966c3a7-7bcc-42c2-9bb8-8da94c0e4536",
    "prId" : 7071,
    "prUrl" : "https://github.com/digital-asset/daml/pull/7071",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7da32a72-1209-4f93-b804-a3752133ef80",
        "parentId" : null,
        "authorId" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "body" : "Can you add a wrapper class extending this `LedgerStateOperations` that is compatible with the old API so that updating to the latest DAML SDK can be done with a small change, please? This would be important for Java integrations such as Fabric, Besu, etc. Obviously, we will want to deprecate that helper class later.",
        "createdAt" : "2020-08-17T10:03:26Z",
        "updatedAt" : "2020-08-17T13:06:21Z",
        "lastEditedBy" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "tags" : [
        ]
      },
      {
        "id" : "626b5ed3-0878-4fa6-8a4c-842f14b2569d",
        "parentId" : "7da32a72-1209-4f93-b804-a3752133ef80",
        "authorId" : "181bcece-33df-41af-887d-5d5f51beb543",
        "body" : "This should be good to go as `LedgerStateAccess.v1_4` and `LedgerStateOperations.v1_4`. Can you take a look please?",
        "createdAt" : "2020-08-17T13:07:49Z",
        "updatedAt" : "2020-08-17T13:07:50Z",
        "lastEditedBy" : "181bcece-33df-41af-887d-5d5f51beb543",
        "tags" : [
        ]
      },
      {
        "id" : "cf77acee-1e38-4c88-b4be-d0da3ca608fa",
        "parentId" : "7da32a72-1209-4f93-b804-a3752133ef80",
        "authorId" : "181bcece-33df-41af-887d-5d5f51beb543",
        "body" : "Gonna assume you're happy. ðŸ™‚ ",
        "createdAt" : "2020-08-18T11:50:00Z",
        "updatedAt" : "2020-08-18T11:50:00Z",
        "lastEditedBy" : "181bcece-33df-41af-887d-5d5f51beb543",
        "tags" : [
        ]
      }
    ],
    "commit" : "e9ee9cfaa064ba5ff5e30a2cb4389c7caaf47c71",
    "line" : 73,
    "diffHunk" : "@@ -1,1 +75,79 @@    * @return value corresponding to requested key or None in case it does not exist\n    */\n  def readState(key: Key)(implicit executionContext: ExecutionContext): Future[Option[Value]]\n\n  /**"
  },
  {
    "id" : "28ed0736-ed37-4749-8f4e-8ecb19926a24",
    "prId" : 7063,
    "prUrl" : "https://github.com/digital-asset/daml/pull/7063",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "646aa740-2e0c-4c7b-b7c5-1c08c519dad7",
        "parentId" : null,
        "authorId" : "1d70ec7b-8793-4cc6-95c8-fac6f7816dcc",
        "body" : "I'm not sure why you're removing the possibility to configure the execution context for the ledger state externally and even less why the execution context has to be a direct one. Can you elaborate?",
        "createdAt" : "2020-08-10T07:23:02Z",
        "updatedAt" : "2020-08-10T07:49:53Z",
        "lastEditedBy" : "1d70ec7b-8793-4cc6-95c8-fac6f7816dcc",
        "tags" : [
        ]
      },
      {
        "id" : "f2f20ba8-0e84-4d48-a530-366f31bc0d61",
        "parentId" : "646aa740-2e0c-4c7b-b7c5-1c08c519dad7",
        "authorId" : "181bcece-33df-41af-887d-5d5f51beb543",
        "body" : "This is not for actually reading the state; that gets the execution context from the underlying implementation. (Remind me to rant about why futures are broken in Scala one day.)\r\n\r\nThis is just specifying the context for the `.map(_.head)` operation. The direct execution context basically says \"use whatever context you used for the previous operation\" (similar to [`parasitic` from Scala 2.13](http://www.scala-lang.org/api/2.13.3/scala/concurrent/ExecutionContext$$parasitic$.html), but less nuanced; however, the docs there still apply).\r\n\r\nThis means that we don't need to provide an execution context to the `BatchingLedgerStateOperations` class, because it'll re-use whatever the underlying implementation uses.",
        "createdAt" : "2020-08-10T07:45:16Z",
        "updatedAt" : "2020-08-10T07:49:53Z",
        "lastEditedBy" : "181bcece-33df-41af-887d-5d5f51beb543",
        "tags" : [
        ]
      },
      {
        "id" : "c931e161-8c2e-4a77-bc80-040765279ef5",
        "parentId" : "646aa740-2e0c-4c7b-b7c5-1c08c519dad7",
        "authorId" : "1d70ec7b-8793-4cc6-95c8-fac6f7816dcc",
        "body" : "Right, I see now it is applied to `map`.",
        "createdAt" : "2020-08-10T08:16:21Z",
        "updatedAt" : "2020-08-10T08:16:21Z",
        "lastEditedBy" : "1d70ec7b-8793-4cc6-95c8-fac6f7816dcc",
        "tags" : [
        ]
      },
      {
        "id" : "927aa062-857b-4665-b1ca-bf9fa4902d25",
        "parentId" : "646aa740-2e0c-4c7b-b7c5-1c08c519dad7",
        "authorId" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "body" : "Note that there is some non-determinism in the `DirectExecutionContext` (see this discussion on [StackOverflow](https://stackoverflow.com/questions/61792512/non-determinism-of-synchronous-execution-contexts-a-k-a-parasitic)).",
        "createdAt" : "2020-08-17T07:40:58Z",
        "updatedAt" : "2020-08-17T07:40:58Z",
        "lastEditedBy" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "tags" : [
        ]
      },
      {
        "id" : "c3afa025-fb61-4a0e-899a-76d55ba1c82c",
        "parentId" : "646aa740-2e0c-4c7b-b7c5-1c08c519dad7",
        "authorId" : "181bcece-33df-41af-887d-5d5f51beb543",
        "body" : "Absolutely, but I think in this case it's all good.",
        "createdAt" : "2020-08-17T07:52:00Z",
        "updatedAt" : "2020-08-17T07:52:01Z",
        "lastEditedBy" : "181bcece-33df-41af-887d-5d5f51beb543",
        "tags" : [
        ]
      }
    ],
    "commit" : "18d594e5fd16fa8e21875d091137dd6808a8611b",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +70,74 @@abstract class BatchingLedgerStateOperations[LogResult] extends LedgerStateOperations[LogResult] {\n  override final def readState(key: Key): Future[Option[Value]] =\n    readState(Seq(key)).map(_.head)(DirectExecutionContext)\n\n  override final def writeState(key: Key, value: Value): Future[Unit] ="
  },
  {
    "id" : "8c68e5cc-856d-4b18-9800-e8bff42b6f15",
    "prId" : 4532,
    "prUrl" : "https://github.com/digital-asset/daml/pull/4532",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "87a5fb21-04eb-4d2f-afef-6fd0c02097d8",
        "parentId" : null,
        "authorId" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "body" : "Thanks for these improvements!",
        "createdAt" : "2020-02-14T16:40:20Z",
        "updatedAt" : "2020-02-15T15:45:04Z",
        "lastEditedBy" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "tags" : [
        ]
      }
    ],
    "commit" : "68d515d40507c5874ecc55d80ce5abcafc53a013",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +56,60 @@abstract class BatchingLedgerStateOperations(implicit executionContext: ExecutionContext)\n    extends LedgerStateOperations {\n  override final def readState(key: Key): Future[Option[Value]] =\n    readState(Seq(key)).map(_.head)\n"
  }
]