[
  {
    "id" : "96f2a9fd-4fd7-4994-85fb-61cc27d98dd8",
    "prId" : 6538,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6538",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0126ffb6-88e2-4787-9890-e77a7d327934",
        "parentId" : null,
        "authorId" : "1d70ec7b-8793-4cc6-95c8-fac6f7816dcc",
        "body" : "Why is that needed and what's the connection with this PR's topic? There are similar occurrences in other committers too.",
        "createdAt" : "2020-07-01T08:42:52Z",
        "updatedAt" : "2020-07-01T13:47:51Z",
        "lastEditedBy" : "1d70ec7b-8793-4cc6-95c8-fac6f7816dcc",
        "tags" : [
        ]
      },
      {
        "id" : "91e59a7c-d1ef-49e5-9793-09d83b1c56d3",
        "parentId" : "0126ffb6-88e2-4787-9890-e77a7d327934",
        "authorId" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "body" : "In #6526  I accidentally removed generating the empty dedup value. In case of a `oneof` protobuf type we need to have a value set (even if it's empty) -- hence these changes.",
        "createdAt" : "2020-07-01T12:43:41Z",
        "updatedAt" : "2020-07-01T13:47:51Z",
        "lastEditedBy" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "tags" : [
        ]
      },
      {
        "id" : "249f6e90-fce8-4fce-9eaa-a64a8c6fcb64",
        "parentId" : "0126ffb6-88e2-4787-9890-e77a7d327934",
        "authorId" : "1d70ec7b-8793-4cc6-95c8-fac6f7816dcc",
        "body" : "OK, ideally we should have that in a separate PR but I understand it's not worth the hassle, unless there's an SDK release with this issue though.",
        "createdAt" : "2020-07-01T13:31:14Z",
        "updatedAt" : "2020-07-01T13:47:51Z",
        "lastEditedBy" : "1d70ec7b-8793-4cc6-95c8-fac6f7816dcc",
        "tags" : [
        ]
      },
      {
        "id" : "f352692c-51f8-4296-b655-13764f2af4c9",
        "parentId" : "0126ffb6-88e2-4787-9890-e77a7d327934",
        "authorId" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "body" : "Yes. protobuf allows setting at most one value in a `oneof` so unless our code tries to read a value the serialization/deserialization should work. However, we could remove these empty dedup messages altogether in a separate PR.",
        "createdAt" : "2020-07-01T13:38:32Z",
        "updatedAt" : "2020-07-01T13:47:51Z",
        "lastEditedBy" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "tags" : [
        ]
      }
    ],
    "commit" : "7fcd13b1e8abafa8318221497401dd1746cfe5e2",
    "line" : 74,
    "diffHunk" : "@@ -1,1 +160,164 @@      configDedupKey(ctx.getParticipantId, result.submission.getSubmissionId),\n      DamlStateValue.newBuilder\n        .setSubmissionDedup(DamlSubmissionDedupValue.newBuilder)\n        .build\n    )"
  },
  {
    "id" : "a961f090-ac6b-4ce5-8e31-349e126b9085",
    "prId" : 3847,
    "prUrl" : "https://github.com/digital-asset/daml/pull/3847",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c672a06c-a376-4eaa-ad95-31560ac9c889",
        "parentId" : null,
        "authorId" : null,
        "body" : "make this a constant.",
        "createdAt" : "2019-12-17T12:18:53Z",
        "updatedAt" : "2019-12-17T18:52:24Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      },
      {
        "id" : "32b6fd37-02ec-439f-aa61-34c2e551a8cb",
        "parentId" : "c672a06c-a376-4eaa-ad95-31560ac9c889",
        "authorId" : "53efca31-cf56-4f70-be8f-a3714c600eb6",
        "body" : "Not sure I follow, this is a constant, and its application is wrapped in a function",
        "createdAt" : "2019-12-17T16:17:29Z",
        "updatedAt" : "2019-12-17T18:52:24Z",
        "lastEditedBy" : "53efca31-cf56-4f70-be8f-a3714c600eb6",
        "tags" : [
        ]
      },
      {
        "id" : "b9ed55e3-0def-4a40-a62e-a04256a424a7",
        "parentId" : "c672a06c-a376-4eaa-ad95-31560ac9c889",
        "authorId" : null,
        "body" : "Meant that only compute this value once (e.g. `val dedupValue = DamlStateValue.newBuilder`). This doesn't make sense anymore as we have the record time there. ",
        "createdAt" : "2019-12-17T18:01:14Z",
        "updatedAt" : "2019-12-17T18:52:24Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      }
    ],
    "commit" : "c9a07f89574f1c170c540c240010fa88a826ce2f",
    "line" : 80,
    "diffHunk" : "@@ -1,1 +154,158 @@    ctx.set(\n      configDedupKey(ctx.getParticipantId, result.submission.getSubmissionId),\n      DamlStateValue.newBuilder\n        .setSubmissionDedup(\n          DamlSubmissionDedupValue.newBuilder"
  },
  {
    "id" : "6f5b01e0-1c6c-4552-8163-9dda0fd58c18",
    "prId" : 3780,
    "prUrl" : "https://github.com/digital-asset/daml/pull/3780",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "719a0f0e-e95c-4241-ab9c-0dd99c282f2b",
        "parentId" : null,
        "authorId" : null,
        "body" : "consider already in this PR pulling the checkTtl and authorizeSubmission to be built into Committer (we'll of course need to specify how to build the timeout/participant not authorized results).",
        "createdAt" : "2019-12-09T10:31:44Z",
        "updatedAt" : "2019-12-10T08:35:01Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      },
      {
        "id" : "719517b9-b494-4738-bee9-a7c82c62d55f",
        "parentId" : "719a0f0e-e95c-4241-ab9c-0dd99c282f2b",
        "authorId" : "53efca31-cf56-4f70-be8f-a3714c600eb6",
        "body" : "Haven't done that one. The commonalities are still too hard to spot through the thicket of diverging abstractions.",
        "createdAt" : "2019-12-10T07:24:08Z",
        "updatedAt" : "2019-12-10T08:35:01Z",
        "lastEditedBy" : "53efca31-cf56-4f70-be8f-a3714c600eb6",
        "tags" : [
        ]
      }
    ],
    "commit" : "485c0c8b47042f401b12c0c13992bc13ed2ea4dd",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +28,32 @@    logger.trace(s\"Configuration rejected, $msg, correlationId=${submission.getSubmissionId}\")\n\n  private val checkTtl: Step = (ctx, result) => {\n    // Check the maximum record time against the record time of the commit.\n    // This mechanism allows the submitter to detect lost submissions and retry"
  }
]