[
  {
    "id" : "bb0e42e0-f012-4eb6-b599-2e3c481d6d4d",
    "prId" : 3847,
    "prUrl" : "https://github.com/digital-asset/daml/pull/3847",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "69c30b6e-4078-4040-b4e0-45c5efd00f6b",
        "parentId" : null,
        "authorId" : null,
        "body" : "make into constant",
        "createdAt" : "2019-12-17T12:19:30Z",
        "updatedAt" : "2019-12-17T18:52:24Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      },
      {
        "id" : "93ccf0ad-e7ea-41f7-a574-abc6d0581d6e",
        "parentId" : "69c30b6e-4078-4040-b4e0-45c5efd00f6b",
        "authorId" : "53efca31-cf56-4f70-be8f-a3714c600eb6",
        "body" : "Same as above",
        "createdAt" : "2019-12-17T16:18:11Z",
        "updatedAt" : "2019-12-17T18:52:24Z",
        "lastEditedBy" : "53efca31-cf56-4f70-be8f-a3714c600eb6",
        "tags" : [
        ]
      }
    ],
    "commit" : "c9a07f89574f1c170c540c240010fa88a826ce2f",
    "line" : 73,
    "diffHunk" : "@@ -1,1 +115,119 @@    ctx.set(\n      partyAllocationDedupKey(ctx.getParticipantId, partyAllocationEntry.getSubmissionId),\n      DamlStateValue.newBuilder\n        .setSubmissionDedup(\n          DamlSubmissionDedupValue.newBuilder"
  },
  {
    "id" : "880e5f5d-4e83-4139-bf67-5c2868b9f5ee",
    "prId" : 3701,
    "prUrl" : "https://github.com/digital-asset/daml/pull/3701",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ffebb278-1dbf-4aaf-b46d-3aece943895d",
        "parentId" : null,
        "authorId" : null,
        "body" : "here the implementation goes wrong: if `partyKey` isn't listed as an input we cannot distinguish between it actually being unallocated and submitter cheating. I will fix this here and in PackageCommitter.",
        "createdAt" : "2019-12-04T10:56:21Z",
        "updatedAt" : "2019-12-04T12:47:49Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      }
    ],
    "commit" : "8eb17918b3460de8d54a0e9129d083b7f46e95bd",
    "line" : 64,
    "diffHunk" : "@@ -1,1 +62,66 @@    val party = partyAllocationEntry.getParty\n    val partyKey = DamlStateKey.newBuilder.setParty(party).build\n    if (ctx.get(partyKey).isEmpty)\n      StepContinue(partyAllocationEntry)\n    else {"
  },
  {
    "id" : "64a08274-9c98-431c-b7ac-a1b20385c393",
    "prId" : 3701,
    "prUrl" : "https://github.com/digital-asset/daml/pull/3701",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7427df22-8688-412b-aacd-524900e01f80",
        "parentId" : null,
        "authorId" : null,
        "body" : "just heads up: I want the metrics registry to be passed from outside once we refactor the whole API. We'd allocate one \"top-level\" committer that gets the engine, metrics registry etc. things passed to it.",
        "createdAt" : "2019-12-04T10:57:55Z",
        "updatedAt" : "2019-12-04T12:47:49Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      }
    ],
    "commit" : "8eb17918b3460de8d54a0e9129d083b7f46e95bd",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +13,17 @@    extends Committer[DamlPartyAllocationEntry, DamlPartyAllocationEntry.Builder] {\n\n  private object Metrics {\n    // kvutils.PartyAllocationCommitter.*\n    val accepts: Counter = metricsRegistry.counter(metricsName(\"accepts\"))"
  }
]