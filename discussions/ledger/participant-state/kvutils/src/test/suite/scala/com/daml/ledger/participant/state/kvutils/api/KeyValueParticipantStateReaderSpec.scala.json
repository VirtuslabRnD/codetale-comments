[
  {
    "id" : "00a8833e-5d0b-415f-8cae-5d0ce5dc281f",
    "prId" : 7859,
    "prUrl" : "https://github.com/digital-asset/daml/pull/7859",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "de667de9-0287-4341-bfa6-72bc0a718501",
        "parentId" : null,
        "authorId" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "body" : "Please add a test case documenting what happens when `failOnUnexpectedEvent = false` and we're not receiving a log entry.",
        "createdAt" : "2020-11-05T15:01:22Z",
        "updatedAt" : "2020-11-06T09:46:45Z",
        "lastEditedBy" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "tags" : [
        ]
      },
      {
        "id" : "3885e635-e4a5-4c51-abdd-7976e273e88b",
        "parentId" : "de667de9-0287-4341-bfa6-72bc0a718501",
        "authorId" : "1d70ec7b-8793-4cc6-95c8-fac6f7816dcc",
        "body" : "Done.",
        "createdAt" : "2020-11-06T08:11:29Z",
        "updatedAt" : "2020-11-06T09:46:45Z",
        "lastEditedBy" : "1d70ec7b-8793-4cc6-95c8-fac6f7816dcc",
        "tags" : [
        ]
      }
    ],
    "commit" : "18e9c039f4a496b276330793bae1fec4b209e395",
    "line" : 41,
    "diffHunk" : "@@ -1,1 +271,275 @@  ): KeyValueParticipantStateReader =\n    new KeyValueParticipantStateReader(\n      reader,\n      new Metrics(new MetricRegistry),\n      logEntryToUpdate,"
  },
  {
    "id" : "1aca98a7-e91e-47e5-ae77-9b1f71df6f38",
    "prId" : 5790,
    "prUrl" : "https://github.com/digital-asset/daml/pull/5790",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4fe73145-0777-4515-91ab-d959691f8918",
        "parentId" : null,
        "authorId" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "body" : "Move this into the companion object where the helper methods are, please.",
        "createdAt" : "2020-05-05T08:30:08Z",
        "updatedAt" : "2020-05-06T10:18:00Z",
        "lastEditedBy" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "tags" : [
        ]
      }
    ],
    "commit" : "7234f1f69f87d95d1420a0faa8a6f2a70e0433f0",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +27,31 @@  import KVOffset.{fromLong => toOffset}\n\n  private def newMetrics = new Metrics(new MetricRegistry)\n\n  \"participant state reader\" should {"
  },
  {
    "id" : "12493bf9-123a-4652-8bc1-a89ac06881d2",
    "prId" : 5790,
    "prUrl" : "https://github.com/digital-asset/daml/pull/5790",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cee8834d-471d-4005-9565-62ec9bd2f15a",
        "parentId" : null,
        "authorId" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "body" : "```suggestion\r\n  private def createMetrics() = new Metrics(new MetricRegistry)\r\n```\r\nor\r\n```scala\r\n  private def newMetrics() = new Metrics(new MetricRegistry)\r\n```",
        "createdAt" : "2020-05-05T08:32:03Z",
        "updatedAt" : "2020-05-06T10:18:00Z",
        "lastEditedBy" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "tags" : [
        ]
      }
    ],
    "commit" : "7234f1f69f87d95d1420a0faa8a6f2a70e0433f0",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +27,31 @@  import KVOffset.{fromLong => toOffset}\n\n  private def newMetrics = new Metrics(new MetricRegistry)\n\n  \"participant state reader\" should {"
  },
  {
    "id" : "2519547d-27f4-4d47-8a6d-12cfb5a4d1fe",
    "prId" : 3923,
    "prUrl" : "https://github.com/digital-asset/daml/pull/3923",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bc0c2bf5-a6d4-4598-9769-176670cbaaab",
        "parentId" : null,
        "authorId" : "a19260b0-5e05-4d6e-8307-335e8dc80e5b",
        "body" : "Why not just use `Source(items)`?",
        "createdAt" : "2019-12-23T10:20:17Z",
        "updatedAt" : "2020-01-10T10:31:04Z",
        "lastEditedBy" : "a19260b0-5e05-4d6e-8307-335e8dc80e5b",
        "tags" : [
        ]
      },
      {
        "id" : "f11267c8-4b54-47cf-84f2-be102c512afc",
        "parentId" : "bc0c2bf5-a6d4-4598-9769-176670cbaaab",
        "authorId" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "body" : "Because that expects an immutable `Seq` whereas `items` is a mutable `Seq`. The above solution avoids copying the elements.",
        "createdAt" : "2020-01-06T13:01:33Z",
        "updatedAt" : "2020-01-10T10:31:04Z",
        "lastEditedBy" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "tags" : [
        ]
      }
    ],
    "commit" : "c820159bc8cad55858939f177705f0a8bab0fd13",
    "line" : 131,
    "diffHunk" : "@@ -1,1 +129,133 @@  private def readerStreamingFrom(offset: Option[Offset], items: LedgerRecord*): LedgerReader = {\n    val reader = mock[LedgerReader]\n    val stream = Source.fromIterator(() => items.toIterator)\n    if (offset.isDefined) {\n      when(reader.events(offset)).thenReturn(stream)"
  }
]