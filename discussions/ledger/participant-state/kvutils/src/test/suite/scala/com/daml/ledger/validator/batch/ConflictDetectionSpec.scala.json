[
  {
    "id" : "cee750ee-a6d7-4ddd-a1c2-c45749f24dca",
    "prId" : 6004,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6004",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a66ac29b-dc5e-4686-b0a8-c4cb4e925b9f",
        "parentId" : null,
        "authorId" : "1d70ec7b-8793-4cc6-95c8-fac6f7816dcc",
        "body" : "Isn't this test included in the next one?",
        "createdAt" : "2020-05-22T16:50:57Z",
        "updatedAt" : "2020-05-25T16:06:53Z",
        "lastEditedBy" : "1d70ec7b-8793-4cc6-95c8-fac6f7816dcc",
        "tags" : [
        ]
      },
      {
        "id" : "449e12d0-ae31-43c8-a525-f79a159145a5",
        "parentId" : "a66ac29b-dc5e-4686-b0a8-c4cb4e925b9f",
        "authorId" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "body" : "No, because this case does not have an input state defined whereas the next one has.",
        "createdAt" : "2020-05-25T10:35:13Z",
        "updatedAt" : "2020-05-25T16:06:53Z",
        "lastEditedBy" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "tags" : [
        ]
      }
    ],
    "commit" : "f5039a2c00da681659f3cc8423f9ddfc9d993996",
    "line" : 57,
    "diffHunk" : "@@ -1,1 +55,59 @@    }\n\n    \"report conflict for new output key also part of input invalidated key set\" in {\n      val aliceKey = DamlStateKey.newBuilder.setParty(\"Alice\").build\n      val outputState = Map(aliceKey -> DamlStateValue.getDefaultInstance)"
  },
  {
    "id" : "8253b821-5a66-4a56-b6a9-a53b0b073001",
    "prId" : 6004,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6004",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1a35781f-9776-4428-917b-ca88c12cc280",
        "parentId" : null,
        "authorId" : "1d70ec7b-8793-4cc6-95c8-fac6f7816dcc",
        "body" : "Should actually be empty, shouldn't it?",
        "createdAt" : "2020-05-22T16:54:11Z",
        "updatedAt" : "2020-05-25T16:06:53Z",
        "lastEditedBy" : "1d70ec7b-8793-4cc6-95c8-fac6f7816dcc",
        "tags" : [
        ]
      },
      {
        "id" : "bb8b5d93-509f-4e00-8d17-dfb920568c75",
        "parentId" : "1a35781f-9776-4428-917b-ca88c12cc280",
        "authorId" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "body" : "Yes, but this way the test is easier to read.",
        "createdAt" : "2020-05-25T10:34:00Z",
        "updatedAt" : "2020-05-25T16:06:53Z",
        "lastEditedBy" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "tags" : [
        ]
      }
    ],
    "commit" : "f5039a2c00da681659f3cc8423f9ddfc9d993996",
    "line" : 174,
    "diffHunk" : "@@ -1,1 +172,176 @@\n      result should be(logEntry -> outputState)\n      actualInvalidatedKeys should not contain aliceKey\n      conflictDetectionMetrics.removedTransientKey.getCount should be(1)\n      conflictDetectionMetrics.conflicted.getCount should be(0)"
  },
  {
    "id" : "b56720a2-a9e2-4854-b060-81225411dab3",
    "prId" : 6004,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6004",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cf189c4f-f17d-45cd-a377-a559ae6ac428",
        "parentId" : null,
        "authorId" : "1d70ec7b-8793-4cc6-95c8-fac6f7816dcc",
        "body" : "These should be 0",
        "createdAt" : "2020-05-22T16:54:38Z",
        "updatedAt" : "2020-05-25T16:06:53Z",
        "lastEditedBy" : "1d70ec7b-8793-4cc6-95c8-fac6f7816dcc",
        "tags" : [
        ]
      },
      {
        "id" : "9d6683eb-72cb-4643-aa3a-8fc5e60dff0d",
        "parentId" : "cf189c4f-f17d-45cd-a377-a559ae6ac428",
        "authorId" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "body" : "I'll remove these types of expectations as they are no longer required. I.e., earlier we couldn't assume that the metrics are re-created from fresh and hence counters would start from 0.",
        "createdAt" : "2020-05-25T10:36:23Z",
        "updatedAt" : "2020-05-25T16:06:53Z",
        "lastEditedBy" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "tags" : [
        ]
      }
    ],
    "commit" : "f5039a2c00da681659f3cc8423f9ddfc9d993996",
    "line" : 162,
    "diffHunk" : "@@ -1,1 +160,164 @@      val conflictDetectionMetrics = damlMetrics.daml.kvutils.conflictdetection\n      val conflictDetection = new ConflictDetection(damlMetrics)\n\n      val Some((actualInvalidatedKeys, result)) = LoggingContext.newLoggingContext {\n        implicit logCtx =>"
  }
]