[
  {
    "id" : "ca952d6b-6e32-433c-adb2-fc9da59256c0",
    "prId" : 9436,
    "prUrl" : "https://github.com/digital-asset/daml/pull/9436",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7b362cce-3ba7-4303-a5d5-db27665f7b3d",
        "parentId" : null,
        "authorId" : "181bcece-33df-41af-887d-5d5f51beb543",
        "body" : "I am all for this change but I'd like some verification that it's OK to change this interface (and if so, how often, and do we need backwards compatibility?). @gerolf-da, could you chime in?",
        "createdAt" : "2021-04-21T14:00:56Z",
        "updatedAt" : "2021-04-23T09:29:18Z",
        "lastEditedBy" : "181bcece-33df-41af-887d-5d5f51beb543",
        "tags" : [
        ]
      },
      {
        "id" : "b1f67c5c-11a1-444d-9ece-534aa5027eab",
        "parentId" : "7b362cce-3ba7-4303-a5d5-db27665f7b3d",
        "authorId" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "body" : "The general approach we have been using so far is as follows:\r\n* Add a new method with the changed signature. Call this method from SDK code.\r\n* Mark the original signature as deprecated and remove it in the next release (i.e., in this case in 1.14).\r\n\r\nIf you look at the history of this file the above steps were executed for e.g. adding `estimatedInterpretationCost`.",
        "createdAt" : "2021-04-21T14:41:59Z",
        "updatedAt" : "2021-04-23T09:29:18Z",
        "lastEditedBy" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "tags" : [
        ]
      },
      {
        "id" : "f285f232-2b05-4ed4-bf39-dd163a296664",
        "parentId" : "7b362cce-3ba7-4303-a5d5-db27665f7b3d",
        "authorId" : "f2bb5ae8-6c47-4c83-85c6-1e82ecd89dfd",
        "body" : "Done. I had a problem distinguishing the methods. Any better idea how to solve this @miklos-da @SamirTalwar-DA?",
        "createdAt" : "2021-04-22T08:24:19Z",
        "updatedAt" : "2021-04-23T09:29:18Z",
        "lastEditedBy" : "f2bb5ae8-6c47-4c83-85c6-1e82ecd89dfd",
        "tags" : [
        ]
      },
      {
        "id" : "02eafc92-2341-442d-96b8-b6487af8049c",
        "parentId" : "7b362cce-3ba7-4303-a5d5-db27665f7b3d",
        "authorId" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "body" : "Let's discuss this offline.",
        "createdAt" : "2021-04-22T16:00:49Z",
        "updatedAt" : "2021-04-23T09:29:18Z",
        "lastEditedBy" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "tags" : [
        ]
      },
      {
        "id" : "441cf18a-9ce6-4f03-94d6-0c931c2fa03c",
        "parentId" : "7b362cce-3ba7-4303-a5d5-db27665f7b3d",
        "authorId" : "eb431011-3221-41ae-bf30-e72dde278004",
        "body" : "@SamirTalwar-DA: FYI, @miklos-da is following up offline with the relevant stakeholders. Most integrations use a kvutils interface, and we can talk directly to the users of this particular interface and get their opinion on it.",
        "createdAt" : "2021-04-22T16:27:52Z",
        "updatedAt" : "2021-04-23T09:29:18Z",
        "lastEditedBy" : "eb431011-3221-41ae-bf30-e72dde278004",
        "tags" : [
        ]
      },
      {
        "id" : "6d541e45-66a2-400a-a16d-a20d3b5a0cb2",
        "parentId" : "7b362cce-3ba7-4303-a5d5-db27665f7b3d",
        "authorId" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "body" : "@gerolf-da @hubert-da @SamirTalwar-DA We concluded we do not need to deprecate any `WriteService` methods but add an implicit `TelemetryContext` parameter where needed.",
        "createdAt" : "2021-04-23T09:19:31Z",
        "updatedAt" : "2021-04-23T09:29:18Z",
        "lastEditedBy" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "tags" : [
        ]
      }
    ],
    "commit" : "142d4d48ada343f55f81c75b8f8f6c5363593c65",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +103,107 @@      transaction: SubmittedTransaction,\n      estimatedInterpretationCost: Long,\n  )(implicit telemetryContext: TelemetryContext): CompletionStage[SubmissionResult]\n}"
  },
  {
    "id" : "b79c8758-344d-46ac-a543-71222a21a8bc",
    "prId" : 6515,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6515",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0a1e4e84-dfa3-4b67-9676-beb48a26d10d",
        "parentId" : null,
        "authorId" : "181bcece-33df-41af-887d-5d5f51beb543",
        "body" : "Can you hit reformat to re-indent the above comments?",
        "createdAt" : "2020-06-29T07:40:59Z",
        "updatedAt" : "2020-06-30T08:52:03Z",
        "lastEditedBy" : "181bcece-33df-41af-887d-5d5f51beb543",
        "tags" : [
        ]
      }
    ],
    "commit" : "5b5d17d48af638f059d785c2d530c2f7d89eec0e",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +93,97 @@    *                                    daml-lf/spec/contract-id.rst.\n    * @param estimatedInterpretationCost Estimated cost of interpretation that may be used for\n    *                                    handling submitted transactions differently.\n    * @return an async result of a SubmissionResult\n    */"
  },
  {
    "id" : "09f804f2-8734-4a57-979d-e30c1c132361",
    "prId" : 6515,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6515",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b792b70d-1464-469f-876a-308749fd7d5a",
        "parentId" : null,
        "authorId" : "1d70ec7b-8793-4cc6-95c8-fac6f7816dcc",
        "body" : "Why is it mandatory here and optional in `CommitMetadata`?",
        "createdAt" : "2020-06-29T14:51:58Z",
        "updatedAt" : "2020-06-30T08:52:03Z",
        "lastEditedBy" : "1d70ec7b-8793-4cc6-95c8-fac6f7816dcc",
        "tags" : [
        ]
      },
      {
        "id" : "843b3ac2-5ed0-48dd-96df-db03afae9daa",
        "parentId" : "b792b70d-1464-469f-876a-308749fd7d5a",
        "authorId" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "body" : "Because for a transaction you have interpretation cost whereas for non-transaction submissions you don't (and `CommitMetadata` is passed for each type).",
        "createdAt" : "2020-06-29T15:08:46Z",
        "updatedAt" : "2020-06-30T08:52:03Z",
        "lastEditedBy" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "tags" : [
        ]
      },
      {
        "id" : "2fb05bff-f9f1-402b-9624-c295f556badf",
        "parentId" : "b792b70d-1464-469f-876a-308749fd7d5a",
        "authorId" : "1d70ec7b-8793-4cc6-95c8-fac6f7816dcc",
        "body" : "The relationship between submission type and metadata is not made explicit by an `Option` though; I'd consider specializing `CommitMetadata`.",
        "createdAt" : "2020-06-29T15:54:05Z",
        "updatedAt" : "2020-06-30T08:52:03Z",
        "lastEditedBy" : "1d70ec7b-8793-4cc6-95c8-fac6f7816dcc",
        "tags" : [
        ]
      },
      {
        "id" : "9ba7aaec-66a8-421b-aa67-92e1a6e8d28c",
        "parentId" : "b792b70d-1464-469f-876a-308749fd7d5a",
        "authorId" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "body" : "Agreed, that specialization will probably happen when we add more fields to `CommitMetadata`. Another angle is, however, that for Java consumers exposing different case classes may not be preferred and hence we may want to choose a different design.",
        "createdAt" : "2020-06-30T08:46:26Z",
        "updatedAt" : "2020-06-30T08:52:03Z",
        "lastEditedBy" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "tags" : [
        ]
      }
    ],
    "commit" : "5b5d17d48af638f059d785c2d530c2f7d89eec0e",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +101,105 @@      transactionMeta: TransactionMeta,\n      transaction: SubmittedTransaction,\n      estimatedInterpretationCost: Long,\n  ): CompletionStage[SubmissionResult] =\n    submitTransaction(submitterInfo, transactionMeta, transaction)"
  },
  {
    "id" : "425a501b-6a5d-4e51-87e5-a1a9120067fe",
    "prId" : 432,
    "prUrl" : "https://github.com/digital-asset/daml/pull/432",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fc31709a-8ad4-4fe6-9846-cd3247cb605f",
        "parentId" : null,
        "authorId" : null,
        "body" : "nitpick: `getTime : Update Time` :)",
        "createdAt" : "2019-04-12T14:12:22Z",
        "updatedAt" : "2019-04-12T15:11:57Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      }
    ],
    "commit" : "015b4a7f0c0e810915767c5f413631c8cde70d08",
    "line" : 48,
    "diffHunk" : "@@ -1,1 +48,52 @@    * submitted together with a `ledgerEffectiveTime` provided as part of the\n    * `transactionMeta` information. The ledger-effective time is used by the\n    * DAML Engine to resolve calls to the `getTime :: Update Time`\n    * function. Letting the submitter freely choose the ledger-effective time\n    * is though a problem for the other stakeholders in the contracts affected"
  }
]