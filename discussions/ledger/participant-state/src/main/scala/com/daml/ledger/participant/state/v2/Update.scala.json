[
  {
    "id" : "013df670-f7b9-4e38-8cf0-3d1ad52b26a3",
    "prId" : 2031,
    "prUrl" : "https://github.com/digital-asset/daml/pull/2031",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9c9bc429-73e9-4527-96dd-b9407c9bc302",
        "parentId" : null,
        "authorId" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "body" : "Docstring goes singular here as well.",
        "createdAt" : "2019-07-08T08:40:32Z",
        "updatedAt" : "2019-07-08T09:59:14Z",
        "lastEditedBy" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "tags" : [
        ]
      },
      {
        "id" : "f020ea9d-d8c5-4c69-bcea-b28a5bb63eac",
        "parentId" : "9c9bc429-73e9-4527-96dd-b9407c9bc302",
        "authorId" : "53efca31-cf56-4f70-be8f-a3714c600eb6",
        "body" : "Done",
        "createdAt" : "2019-07-08T10:01:30Z",
        "updatedAt" : "2019-07-08T10:01:30Z",
        "lastEditedBy" : "53efca31-cf56-4f70-be8f-a3714c600eb6",
        "tags" : [
        ]
      }
    ],
    "commit" : "907e868fd50d46831470c159b0eda4e8e24c2377",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +91,95 @@    */\n  final case class PublicPackageUploaded(\n      archive: DamlLf.Archive,\n      sourceDescription: String,\n      participantId: String,"
  },
  {
    "id" : "1d07d209-e03a-4f36-b36a-14dcf462fd13",
    "prId" : 10398,
    "prUrl" : "https://github.com/digital-asset/daml/pull/10398#pullrequestreview-714803710",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "604ba182-0628-49b4-8581-7e323d08f2f6",
        "parentId" : null,
        "authorId" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "body" : "What's the advantage of having an `RpcStatus` field as well as `code` and `message` fields? Do we expect `message` to be different from `status.message` and `code` different from `status.code`?",
        "createdAt" : "2021-07-26T09:17:04Z",
        "updatedAt" : "2021-07-26T10:41:40Z",
        "lastEditedBy" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "tags" : [
        ]
      },
      {
        "id" : "d638ef94-a22c-4cb0-8a04-eb0076c205e9",
        "parentId" : "604ba182-0628-49b4-8581-7e323d08f2f6",
        "authorId" : "181bcece-33df-41af-887d-5d5f51beb543",
        "body" : "Not necessarily, but a `status` can have a lot more.",
        "createdAt" : "2021-07-26T10:49:20Z",
        "updatedAt" : "2021-07-26T10:49:20Z",
        "lastEditedBy" : "181bcece-33df-41af-887d-5d5f51beb543",
        "tags" : [
        ]
      },
      {
        "id" : "ab6dd700-89ff-4368-bbc9-0c2fd341b6e9",
        "parentId" : "604ba182-0628-49b4-8581-7e323d08f2f6",
        "authorId" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "body" : "To put it in another way: I'm wondering if a single `RpcStatus` field would be enough for our needs?",
        "createdAt" : "2021-07-26T12:20:49Z",
        "updatedAt" : "2021-07-26T12:20:50Z",
        "lastEditedBy" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "tags" : [
        ]
      },
      {
        "id" : "ad1422bd-6717-41cd-80d5-261db80f45da",
        "parentId" : "604ba182-0628-49b4-8581-7e323d08f2f6",
        "authorId" : "181bcece-33df-41af-887d-5d5f51beb543",
        "body" : "Field, yes, but this is a trait, which needs to expose all these elements.\r\n\r\nTBH I would like to remove the `status` here and in `FinalReason` but that's a big change I'd like to do separately.",
        "createdAt" : "2021-07-26T12:50:25Z",
        "updatedAt" : "2021-07-26T12:50:25Z",
        "lastEditedBy" : "181bcece-33df-41af-887d-5d5f51beb543",
        "tags" : [
        ]
      }
    ],
    "commit" : "c1f3711f285befaaee9cf5db7df6f0bdc78f6ca1",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +232,236 @@\n      /** A protobuf gRPC status representing the error. */\n      def status: RpcStatus\n\n      /** Whether the rejection is a definite answer for the deduplication guarantees"
  },
  {
    "id" : "796a12fc-dd1b-4bab-b470-e1c4eca870ea",
    "prId" : 10439,
    "prUrl" : "https://github.com/digital-asset/daml/pull/10439#pullrequestreview-717752597",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c0b357a2-0bf2-4a48-b565-e283d78c4d76",
        "parentId" : null,
        "authorId" : "5f6b922a-83eb-4419-97b1-13c757c1e583",
        "body" : "I understand that we would like to keep some of `T => LoggingEntry` methods private to specific classes/packages because of required domain context that is known only in such class/package. However, we could at least consider moving methods for `Ref` types to a common object. Currently we have multiple definitions for several of `Ref` types, e.g. for `Ref.SubmissionId`.\r\nWhat do you think?",
        "createdAt" : "2021-07-28T19:03:43Z",
        "updatedAt" : "2021-07-28T19:05:52Z",
        "lastEditedBy" : "5f6b922a-83eb-4419-97b1-13c757c1e583",
        "tags" : [
        ]
      },
      {
        "id" : "f410566e-0ef3-4b0c-96d1-a3958bbbc71f",
        "parentId" : "c0b357a2-0bf2-4a48-b565-e283d78c4d76",
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "I’d be fine with moving them to `Ref` but doesn’t have to be in this PR.",
        "createdAt" : "2021-07-29T06:43:56Z",
        "updatedAt" : "2021-07-29T06:44:01Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "0158d439-f2dc-4586-ade4-51b5157a01f8",
        "parentId" : "c0b357a2-0bf2-4a48-b565-e283d78c4d76",
        "authorId" : "181bcece-33df-41af-887d-5d5f51beb543",
        "body" : "I'd be somewhat OK with this.\r\n\r\nTBH I'm not sure these methods add too much but clearly others find value in them, so I guess there's something to it. I was tempted to inline them all.\r\n\r\nThat said, I'd prefer to find a way to derive these automatically from the type. Right now `SubmissionId` and some others are just type aliases to `LedgerString` though, so that wouldn't work.",
        "createdAt" : "2021-07-29T07:21:25Z",
        "updatedAt" : "2021-07-29T07:21:25Z",
        "lastEditedBy" : "181bcece-33df-41af-887d-5d5f51beb543",
        "tags" : [
        ]
      }
    ],
    "commit" : "455213f1670e41573a6e10503203218d5b428ddd",
    "line" : 367,
    "diffHunk" : "@@ -1,1 +385,389 @@\n    def participantId(id: Ref.ParticipantId): LoggingEntry =\n      \"participantId\" -> id\n\n    def commandId(id: Ref.CommandId): LoggingEntry ="
  }
]