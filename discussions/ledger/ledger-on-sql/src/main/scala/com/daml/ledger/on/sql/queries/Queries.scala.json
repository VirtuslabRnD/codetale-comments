[
  {
    "id" : "c6704e77-5828-40da-aaa4-284ad6343d93",
    "prId" : 7515,
    "prUrl" : "https://github.com/digital-asset/daml/pull/7515",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5d65d505-5a31-4d5c-a6c8-16df239faee1",
        "parentId" : null,
        "authorId" : "1d70ec7b-8793-4cc6-95c8-fac6f7816dcc",
        "body" : "Can't it be defined as a function a `def` and inferred correctly at the usage site (and same below)?",
        "createdAt" : "2020-09-29T13:03:55Z",
        "updatedAt" : "2020-09-29T14:19:19Z",
        "lastEditedBy" : "1d70ec7b-8793-4cc6-95c8-fac6f7816dcc",
        "tags" : [
        ]
      },
      {
        "id" : "29e98067-4787-4e8b-86f2-89c5aff23bcb",
        "parentId" : "5d65d505-5a31-4d5c-a6c8-16df239faee1",
        "authorId" : "181bcece-33df-41af-887d-5d5f51beb543",
        "body" : "I don't think so; the lambda is coerced to an implementation of `ToStatement`, not `Function1`.",
        "createdAt" : "2020-09-29T14:22:36Z",
        "updatedAt" : "2020-09-29T14:22:36Z",
        "lastEditedBy" : "181bcece-33df-41af-887d-5d5f51beb543",
        "tags" : [
        ]
      }
    ],
    "commit" : "2a03714d44102a50f8583de03c250ad3d4108d69",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +41,45 @@  }\n\n  implicit val byteStringToStatement: ToStatement[ByteString] =\n    (s: PreparedStatement, index: Int, v: ByteString) =>\n      s.setBinaryStream(index, v.newInput(), v.size())"
  },
  {
    "id" : "5937abf4-420a-43f1-9c43-579ce20d05e0",
    "prId" : 4607,
    "prUrl" : "https://github.com/digital-asset/daml/pull/4607",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "24b6c070-5398-4705-a9e8-2be843dc1445",
        "parentId" : null,
        "authorId" : "eb431011-3221-41ae-bf30-e72dde278004",
        "body" : "What does this mean?",
        "createdAt" : "2020-02-19T14:20:05Z",
        "updatedAt" : "2020-02-19T20:48:13Z",
        "lastEditedBy" : "eb431011-3221-41ae-bf30-e72dde278004",
        "tags" : [
        ]
      },
      {
        "id" : "64f78c3f-7149-4a52-9208-5f59709ded68",
        "parentId" : "24b6c070-5398-4705-a9e8-2be843dc1445",
        "authorId" : "181bcece-33df-41af-887d-5d5f51beb543",
        "body" : "Pushed a comment:\r\n\r\n> By explicitly writing a value to a \"table_key\" column, we ensure we only ever have one row in the meta table. An attempt to write a second row will result in a key conflict.\r\n",
        "createdAt" : "2020-02-19T15:55:33Z",
        "updatedAt" : "2020-02-19T20:48:13Z",
        "lastEditedBy" : "181bcece-33df-41af-887d-5d5f51beb543",
        "tags" : [
        ]
      }
    ],
    "commit" : "2631a6f3d08f69f84454f5b30c7ebcb7581b0e28",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +43,47 @@  // By explicitly writing a value to a \"table_key\" column, we ensure we only ever have one row in\n  // the meta table. An attempt to write a second row will result in a key conflict.\n  private[queries] val MetaTableKey = 0\n\n  def executeBatchSql("
  }
]