[
  {
    "id" : "d0f5474a-f857-4d4d-8f83-a2529b52afc2",
    "prId" : 5869,
    "prUrl" : "https://github.com/digital-asset/daml/pull/5869",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cab31352-27fb-4663-89ac-2611c618ef97",
        "parentId" : null,
        "authorId" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "body" : "Minor: since you have a couple of parameters with the same type it could probably make sense to use named parameters.",
        "createdAt" : "2020-05-07T08:46:47Z",
        "updatedAt" : "2020-05-07T09:21:50Z",
        "lastEditedBy" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "tags" : [
        ]
      },
      {
        "id" : "2e69fab3-6d69-48ce-a94d-1fba619ec814",
        "parentId" : "cab31352-27fb-4663-89ac-2611c618ef97",
        "authorId" : "181bcece-33df-41af-887d-5d5f51beb543",
        "body" : "Good idea. Done.",
        "createdAt" : "2020-05-07T09:22:45Z",
        "updatedAt" : "2020-05-07T09:22:45Z",
        "lastEditedBy" : "181bcece-33df-41af-887d-5d5f51beb543",
        "tags" : [
        ]
      }
    ],
    "commit" : "1df655f9772e14639f3ad019652454e1549ffd00",
    "line" : 120,
    "diffHunk" : "@@ -1,1 +220,224 @@    def migrate(): Database = {\n      flyway.migrate()\n      new Database(\n        queries = system.queries,\n        readerConnectionPool = readerConnectionPool,"
  },
  {
    "id" : "fb2eaa45-304f-438c-8c1d-c811b8ea0294",
    "prId" : 4607,
    "prUrl" : "https://github.com/digital-asset/daml/pull/4607",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "501fad45-1fc3-4bf3-a454-c682e0355672",
        "parentId" : null,
        "authorId" : "eb431011-3221-41ae-bf30-e72dde278004",
        "body" : "Sharing migrations across sql dialects means we now share the maximum migration number as well, right?",
        "createdAt" : "2020-02-19T14:10:51Z",
        "updatedAt" : "2020-02-19T20:48:13Z",
        "lastEditedBy" : "eb431011-3221-41ae-bf30-e72dde278004",
        "tags" : [
        ]
      },
      {
        "id" : "bc9fd6df-914a-42fe-a112-d8e3d85a0e66",
        "parentId" : "501fad45-1fc3-4bf3-a454-c682e0355672",
        "authorId" : "181bcece-33df-41af-887d-5d5f51beb543",
        "body" : "Yup, absolutely. I think this is probably a good thing.",
        "createdAt" : "2020-02-19T15:02:14Z",
        "updatedAt" : "2020-02-19T20:48:13Z",
        "lastEditedBy" : "181bcece-33df-41af-887d-5d5f51beb543",
        "tags" : [
        ]
      }
    ],
    "commit" : "2631a6f3d08f69f84454f5b30c7ebcb7581b0e28",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +213,217 @@        .dataSource(adminConnectionPool)\n        .locations(\n          \"classpath:/com/daml/ledger/on/sql/migrations/common\",\n          s\"classpath:/com/daml/ledger/on/sql/migrations/${system.name}\",\n        )"
  },
  {
    "id" : "ee90b59a-fb36-4b48-b9b4-2ec33557b3a9",
    "prId" : 4607,
    "prUrl" : "https://github.com/digital-asset/daml/pull/4607",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b7b0d9a4-d732-4789-9f71-ecb05bd728d3",
        "parentId" : null,
        "authorId" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "body" : "Makes a lot of sense, thank you!",
        "createdAt" : "2020-02-19T16:05:55Z",
        "updatedAt" : "2020-02-19T20:48:13Z",
        "lastEditedBy" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "tags" : [
        ]
      }
    ],
    "commit" : "2631a6f3d08f69f84454f5b30c7ebcb7581b0e28",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +19,23 @@import scala.util.{Failure, Success}\n\nfinal class Database(\n    val queries: Queries,\n    readerConnectionPool: DataSource,"
  },
  {
    "id" : "fa9323bd-49c5-41af-97fd-03b3a265e303",
    "prId" : 4155,
    "prUrl" : "https://github.com/digital-asset/daml/pull/4155",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "edd39ab3-b6d9-4ac4-8566-90744bad66c9",
        "parentId" : null,
        "authorId" : "eb431011-3221-41ae-bf30-e72dde278004",
        "body" : "üëç ",
        "createdAt" : "2020-01-22T12:31:26Z",
        "updatedAt" : "2020-01-22T15:12:07Z",
        "lastEditedBy" : "eb431011-3221-41ae-bf30-e72dde278004",
        "tags" : [
        ]
      }
    ],
    "commit" : "6d414ebd72f813c239463a48e245fc2e9fd9c0c8",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +29,33 @@  // To be able to process commits in parallel, we will need to fail reads and retry if there are\n  // entries missing.\n  private val MaximumWriterConnectionPoolSize: Int = 1\n\n  def apply(jdbcUrl: String)(implicit logCtx: LoggingContext): Database = {"
  },
  {
    "id" : "ab4e7752-50a6-4401-bfce-08ebecb670e3",
    "prId" : 4155,
    "prUrl" : "https://github.com/digital-asset/daml/pull/4155",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c478fbd6-1b51-4a3a-9efa-64e0774252ec",
        "parentId" : null,
        "authorId" : "eb431011-3221-41ae-bf30-e72dde278004",
        "body" : "I don't quite understand why `SqliteDatabase` shares the same connection pool with just 1 connection between reading and writing. We could still use a separate connection for reading the data for the `ReadService`, or is there a problem with that?",
        "createdAt" : "2020-01-22T12:35:32Z",
        "updatedAt" : "2020-01-22T15:12:07Z",
        "lastEditedBy" : "eb431011-3221-41ae-bf30-e72dde278004",
        "tags" : [
        ]
      },
      {
        "id" : "aac57c0c-9519-43a4-bc66-378d633e8b53",
        "parentId" : "c478fbd6-1b51-4a3a-9efa-64e0774252ec",
        "authorId" : "a19260b0-5e05-4d6e-8307-335e8dc80e5b",
        "body" : "Nope, the file gets \"locked\" when we're in the middle of a transaction and trying to access it concurrently results in an exception.",
        "createdAt" : "2020-01-22T12:49:30Z",
        "updatedAt" : "2020-01-22T15:12:07Z",
        "lastEditedBy" : "a19260b0-5e05-4d6e-8307-335e8dc80e5b",
        "tags" : [
        ]
      },
      {
        "id" : "7c767aa4-f59c-4b4e-8ade-b8ee7c4a3ce0",
        "parentId" : "c478fbd6-1b51-4a3a-9efa-64e0774252ec",
        "authorId" : "eb431011-3221-41ae-bf30-e72dde278004",
        "body" : "Oh wow, that's ... unexpected. I thought it would \"queue\" up the write after the reads are done. Oh well.",
        "createdAt" : "2020-01-22T13:01:44Z",
        "updatedAt" : "2020-01-22T15:12:07Z",
        "lastEditedBy" : "eb431011-3221-41ae-bf30-e72dde278004",
        "tags" : [
        ]
      },
      {
        "id" : "a30f9557-06f5-436b-ba22-318d3cd2ca4d",
        "parentId" : "c478fbd6-1b51-4a3a-9efa-64e0774252ec",
        "authorId" : "a19260b0-5e05-4d6e-8307-335e8dc80e5b",
        "body" : "I think the JDBC driver is supposed to handle file system locks by retrying, but it doesn't right now.",
        "createdAt" : "2020-01-22T13:40:46Z",
        "updatedAt" : "2020-01-22T15:12:07Z",
        "lastEditedBy" : "a19260b0-5e05-4d6e-8307-335e8dc80e5b",
        "tags" : [
        ]
      }
    ],
    "commit" : "6d414ebd72f813c239463a48e245fc2e9fd9c0c8",
    "line" : 66,
    "diffHunk" : "@@ -1,1 +57,61 @@\n  final class SingleConnectionDatabase(jdbcUrl: String) extends Database {\n    private val connectionPool: DataSource with Closeable =\n      newHikariDataSource(jdbcUrl, maximumPoolSize = Some(MaximumWriterConnectionPoolSize))\n"
  },
  {
    "id" : "18eff4bc-29e5-454e-ac4e-258284518fd1",
    "prId" : 4155,
    "prUrl" : "https://github.com/digital-asset/daml/pull/4155",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d616965a-7a65-4559-ad19-18086413ef6a",
        "parentId" : null,
        "authorId" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "body" : "Would it make sense to use `Resource`/`ResourceOwner`?",
        "createdAt" : "2020-01-22T12:40:10Z",
        "updatedAt" : "2020-01-22T15:12:07Z",
        "lastEditedBy" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "tags" : [
        ]
      },
      {
        "id" : "a2b589f2-5bb7-4d43-ae70-c26534f4a9da",
        "parentId" : "d616965a-7a65-4559-ad19-18086413ef6a",
        "authorId" : "a19260b0-5e05-4d6e-8307-335e8dc80e5b",
        "body" : "Yes, but I'll need to make changes throughout kvutils to make it effective, so I want to do this as a separate task.",
        "createdAt" : "2020-01-22T13:42:09Z",
        "updatedAt" : "2020-01-22T15:12:07Z",
        "lastEditedBy" : "a19260b0-5e05-4d6e-8307-335e8dc80e5b",
        "tags" : [
        ]
      },
      {
        "id" : "c2eb25f8-a1e6-41da-a224-e928d92ee494",
        "parentId" : "d616965a-7a65-4559-ad19-18086413ef6a",
        "authorId" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "body" : "Cool, consider hitting the three dots icon to create an issue for that if you want. :slightly_smiling_face: ",
        "createdAt" : "2020-01-22T14:19:53Z",
        "updatedAt" : "2020-01-22T15:12:07Z",
        "lastEditedBy" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "tags" : [
        ]
      },
      {
        "id" : "b7c8325d-4d95-4245-9855-61ac7973b254",
        "parentId" : "d616965a-7a65-4559-ad19-18086413ef6a",
        "authorId" : "a19260b0-5e05-4d6e-8307-335e8dc80e5b",
        "body" : "Changes made in #4177.",
        "createdAt" : "2020-01-23T11:24:00Z",
        "updatedAt" : "2020-01-23T11:24:00Z",
        "lastEditedBy" : "a19260b0-5e05-4d6e-8307-335e8dc80e5b",
        "tags" : [
        ]
      }
    ],
    "commit" : "6d414ebd72f813c239463a48e245fc2e9fd9c0c8",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +12,16 @@import javax.sql.DataSource\n\nsealed trait Database extends Closeable {\n  val queries: Queries\n"
  }
]