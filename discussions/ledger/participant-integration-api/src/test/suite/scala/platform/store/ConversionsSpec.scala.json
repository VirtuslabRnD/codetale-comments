[
  {
    "id" : "4b7cc740-2fa8-4edb-87e2-79a0dbb14233",
    "prId" : 10376,
    "prUrl" : "https://github.com/digital-asset/daml/pull/10376#pullrequestreview-713682390",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fef0b915-dd95-4acb-af2f-5382df4a1a2c",
        "parentId" : null,
        "authorId" : "181bcece-33df-41af-887d-5d5f51beb543",
        "body" : "@fabiotudone-da: Tests are here.",
        "createdAt" : "2021-07-23T10:18:34Z",
        "updatedAt" : "2021-07-23T10:18:34Z",
        "lastEditedBy" : "181bcece-33df-41af-887d-5d5f51beb543",
        "tags" : [
        ]
      },
      {
        "id" : "311db47a-75cb-42b0-bdc1-ea5fde16cf01",
        "parentId" : "fef0b915-dd95-4acb-af2f-5382df4a1a2c",
        "authorId" : "1d70ec7b-8793-4cc6-95c8-fac6f7816dcc",
        "body" : "How about the `toStateV1RejectionReason` conversions?",
        "createdAt" : "2021-07-23T12:37:07Z",
        "updatedAt" : "2021-07-23T12:37:07Z",
        "lastEditedBy" : "1d70ec7b-8793-4cc6-95c8-fac6f7816dcc",
        "tags" : [
        ]
      }
    ],
    "commit" : "c64ee6b25046990cf402bfee64683b250b710bda",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +10,14 @@import org.scalatest.wordspec.AsyncWordSpec\n\nclass ConversionsSpec extends AsyncWordSpec with Matchers {\n  \"converting rejection reasons\" should {\n    \"convert an 'Inconsistent' rejection reason\" in {"
  },
  {
    "id" : "f58e72de-2051-427e-9aaa-3c6640e4e04f",
    "prId" : 10398,
    "prUrl" : "https://github.com/digital-asset/daml/pull/10398#pullrequestreview-714773154",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4e2576f5-38ce-4416-b2b5-de70ad186b55",
        "parentId" : null,
        "authorId" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "body" : "Why is this error not a `RESOURCE_EXHAUSTED`?",
        "createdAt" : "2021-07-26T10:29:21Z",
        "updatedAt" : "2021-07-26T10:41:40Z",
        "lastEditedBy" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "tags" : [
        ]
      },
      {
        "id" : "67ff7498-c067-4cf8-80ce-9c80e333bdc9",
        "parentId" : "4e2576f5-38ce-4416-b2b5-de70ad186b55",
        "authorId" : "181bcece-33df-41af-887d-5d5f51beb543",
        "body" : "I didn't want to change behavior. I agree that this is probably wrong.",
        "createdAt" : "2021-07-26T10:50:04Z",
        "updatedAt" : "2021-07-26T10:50:05Z",
        "lastEditedBy" : "181bcece-33df-41af-887d-5d5f51beb543",
        "tags" : [
        ]
      },
      {
        "id" : "327e4060-c815-4eda-95de-0049ff5973b3",
        "parentId" : "4e2576f5-38ce-4416-b2b5-de70ad186b55",
        "authorId" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "body" : "Makes sense. Let's double-check the mapping between rejection reasons and gRPC error codes later.",
        "createdAt" : "2021-07-26T12:16:42Z",
        "updatedAt" : "2021-07-26T12:16:42Z",
        "lastEditedBy" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "tags" : [
        ]
      }
    ],
    "commit" : "c1f3711f285befaaee9cf5db7df6f0bdc78f6ca1",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +29,33 @@      val reason = domain.RejectionReason.OutOfQuota(\"Insert coins to continue.\")\n      val converted = reason.toParticipantStateRejectionReason\n      converted.code should be(Status.Code.ABORTED.value())\n      converted.message should be(\"Resources exhausted: Insert coins to continue.\")\n    }"
  },
  {
    "id" : "17eef02c-4566-4f91-837d-6c9cab349757",
    "prId" : 10398,
    "prUrl" : "https://github.com/digital-asset/daml/pull/10398#pullrequestreview-714773154",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "702f9df3-02bf-458e-af4a-c680a080ba00",
        "parentId" : null,
        "authorId" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "body" : "Why is this error not a `RESOURCE_EXHAUSTED`?",
        "createdAt" : "2021-07-26T10:29:21Z",
        "updatedAt" : "2021-07-26T10:41:40Z",
        "lastEditedBy" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "tags" : [
        ]
      },
      {
        "id" : "e0e4a4bb-5dfe-4c57-bb31-7e4c4db9aff9",
        "parentId" : "702f9df3-02bf-458e-af4a-c680a080ba00",
        "authorId" : "181bcece-33df-41af-887d-5d5f51beb543",
        "body" : "I didn't want to change behavior. I agree that this is probably wrong.",
        "createdAt" : "2021-07-26T10:50:04Z",
        "updatedAt" : "2021-07-26T10:50:05Z",
        "lastEditedBy" : "181bcece-33df-41af-887d-5d5f51beb543",
        "tags" : [
        ]
      },
      {
        "id" : "29225d82-ea9f-452c-99d8-8c8095d5e345",
        "parentId" : "702f9df3-02bf-458e-af4a-c680a080ba00",
        "authorId" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "body" : "Makes sense. Let's double-check the mapping between rejection reasons and gRPC error codes later.",
        "createdAt" : "2021-07-26T12:16:42Z",
        "updatedAt" : "2021-07-26T12:16:42Z",
        "lastEditedBy" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "tags" : [
        ]
      }
    ],
    "commit" : "c1f3711f285befaaee9cf5db7df6f0bdc78f6ca1",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +29,33 @@      val reason = domain.RejectionReason.OutOfQuota(\"Insert coins to continue.\")\n      val converted = reason.toParticipantStateRejectionReason\n      converted.code should be(Status.Code.ABORTED.value())\n      converted.message should be(\"Resources exhausted: Insert coins to continue.\")\n    }"
  }
]