[
  {
    "id" : "67676bcb-fd01-4ad8-b342-6309d0c6c3db",
    "prId" : 9943,
    "prUrl" : "https://github.com/digital-asset/daml/pull/9943",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3b334359-f6dd-4614-844d-b4b87bd3954f",
        "parentId" : null,
        "authorId" : "c36a5b02-f260-4cef-9fc6-22c312c693f7",
        "body" : "i believe this is the correct syntax but we should make sure in explain plan that this index actually gets hit when we query on these columns",
        "createdAt" : "2021-06-09T18:53:43Z",
        "updatedAt" : "2021-06-09T19:08:13Z",
        "lastEditedBy" : "c36a5b02-f260-4cef-9fc6-22c312c693f7",
        "tags" : [
        ]
      },
      {
        "id" : "37e432ed-2c7a-4e8a-9e32-ebfb2809a5d2",
        "parentId" : "3b334359-f6dd-4614-844d-b4b87bd3954f",
        "authorId" : "c36a5b02-f260-4cef-9fc6-22c312c693f7",
        "body" : "@danielporterda has confirmed this index is *NOT* being hit, presumably because it is indexing on JSON_ARRAY individual values but we are doing a JSON_EXISTS query which returns boolean\r\n\r\nfollow-on ticket https://github.com/digital-asset/daml/issues/9975 raised to investigate indexing of json array fields further if it is ascertained this is a performance bottleneck after full move to new appendonly schema",
        "createdAt" : "2021-06-11T15:48:47Z",
        "updatedAt" : "2021-06-11T15:49:06Z",
        "lastEditedBy" : "c36a5b02-f260-4cef-9fc6-22c312c693f7",
        "tags" : [
        ]
      }
    ],
    "commit" : "25bd06e8a50f932173fef5400fd9c5723ee24147",
    "line" : 75,
    "diffHunk" : "@@ -1,1 +268,272 @@create index participant_events_event_offset on participant_events (event_offset);\n\ncreate index participant_events_flat_event_witnesses_idx on participant_events (JSON_ARRAY(flat_event_witnesses));\ncreate index participant_events_tree_event_witnesses_idx on participant_events (JSON_ARRAY(tree_event_witnesses));\n"
  },
  {
    "id" : "28463d73-db7f-437d-b4ca-464f47882ac5",
    "prId" : 9943,
    "prUrl" : "https://github.com/digital-asset/daml/pull/9943",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "75f3eb39-04f6-49a5-8abc-8ea24d428c17",
        "parentId" : null,
        "authorId" : "c36a5b02-f260-4cef-9fc6-22c312c693f7",
        "body" : "i believe this is the correct syntax but we should make sure in explain plan that this index actually gets hit when we query on these columns",
        "createdAt" : "2021-06-09T18:53:48Z",
        "updatedAt" : "2021-06-09T19:08:13Z",
        "lastEditedBy" : "c36a5b02-f260-4cef-9fc6-22c312c693f7",
        "tags" : [
        ]
      },
      {
        "id" : "adeb10bd-e5dd-4a88-930d-290502c04186",
        "parentId" : "75f3eb39-04f6-49a5-8abc-8ea24d428c17",
        "authorId" : "c36a5b02-f260-4cef-9fc6-22c312c693f7",
        "body" : "@danielporterda has confirmed this index is *NOT* being hit, presumably because it is indexing on JSON_ARRAY individual values but we are doing a JSON_EXISTS query which returns boolean\r\n\r\nfollow-on ticket https://github.com/digital-asset/daml/issues/9975 raised to investigate indexing of json array fields further if it is ascertained this is a performance bottleneck after full move to new appendonly schema",
        "createdAt" : "2021-06-11T15:49:09Z",
        "updatedAt" : "2021-06-11T15:49:09Z",
        "lastEditedBy" : "c36a5b02-f260-4cef-9fc6-22c312c693f7",
        "tags" : [
        ]
      }
    ],
    "commit" : "25bd06e8a50f932173fef5400fd9c5723ee24147",
    "line" : 76,
    "diffHunk" : "@@ -1,1 +269,273 @@\ncreate index participant_events_flat_event_witnesses_idx on participant_events (JSON_ARRAY(flat_event_witnesses));\ncreate index participant_events_tree_event_witnesses_idx on participant_events (JSON_ARRAY(tree_event_witnesses));\n\n"
  },
  {
    "id" : "b1a704c2-ea37-4d03-b55b-d273ee795dfb",
    "prId" : 9277,
    "prUrl" : "https://github.com/digital-asset/daml/pull/9277",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f4f7f50a-ae05-4a40-85e5-78375f77e82f",
        "parentId" : null,
        "authorId" : "d7d10058-0c3f-4068-af8a-3d7024c74f76",
        "body" : "fwiw, in the canton fork, we need to turn `participant_contracts_idx` to be non-unique, so it's good that the index is named\r\n\r\nLooking at stackoverflow I only found drop / create which should be okay (and is still simpler than what we do for postgres/h2 where we hadn't named the indices and so had to rebuild the entire `participant_contracts` table).",
        "createdAt" : "2021-04-26T11:34:52Z",
        "updatedAt" : "2021-04-26T14:25:52Z",
        "lastEditedBy" : "d7d10058-0c3f-4068-af8a-3d7024c74f76",
        "tags" : [
        ]
      },
      {
        "id" : "cb0b2582-b2b6-4f6d-8b64-0959c89de902",
        "parentId" : "f4f7f50a-ae05-4a40-85e5-78375f77e82f",
        "authorId" : "c36a5b02-f260-4cef-9fc6-22c312c693f7",
        "body" : "yeah explicitly named to make the indices easier to manage -- with oracle the naming of anonymous indices is a bit inscrutable",
        "createdAt" : "2021-04-26T13:50:40Z",
        "updatedAt" : "2021-04-26T14:25:52Z",
        "lastEditedBy" : "c36a5b02-f260-4cef-9fc6-22c312c693f7",
        "tags" : [
        ]
      }
    ],
    "commit" : "48cd860ae4ae30bf7118d2b0b0f951233e7b328a",
    "line" : 313,
    "diffHunk" : "@@ -1,1 +311,315 @@\n-- support looking up a contract by key\ncreate unique index participant_contracts_idx on participant_contracts (create_key_hash);\n\n"
  }
]