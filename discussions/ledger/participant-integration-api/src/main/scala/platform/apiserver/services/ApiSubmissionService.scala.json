[
  {
    "id" : "b5f201ee-1036-46cc-b227-e3e6b131af14",
    "prId" : 9416,
    "prUrl" : "https://github.com/digital-asset/daml/pull/9416",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4685ee30-bd1c-4bb9-990e-d29654c68410",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "rollback nodes don’t have informees so this seems perfectly fine.",
        "createdAt" : "2021-04-14T16:25:12Z",
        "updatedAt" : "2021-04-14T17:06:00Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "d3fced43-5a85-4e18-bda3-239c4c0757ac",
        "parentId" : "4685ee30-bd1c-4bb9-990e-d29654c68410",
        "authorId" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "body" : "My concern is more about the rolled back nodes. Do we need to take into account the actions that have been rolled back ? It is not clear to me and I prefer to think properly about that in a different PR.",
        "createdAt" : "2021-04-14T16:46:00Z",
        "updatedAt" : "2021-04-14T17:06:00Z",
        "lastEditedBy" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "tags" : [
        ]
      },
      {
        "id" : "1f1c23e3-5446-4599-8077-74a1d3b99e47",
        "parentId" : "4685ee30-bd1c-4bb9-990e-d29654c68410",
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "Perfectly fine to do it in a separate PR, I’ll leave comments on the individual instances here anyway so the thoughts I put into it don’t get lost:\r\n\r\nImplicit party allocation here: We clearly also need to allocate parties in rolled back nodes.",
        "createdAt" : "2021-04-14T16:51:45Z",
        "updatedAt" : "2021-04-14T17:06:00Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      }
    ],
    "commit" : "fc50efb3b7ec6b716cdacb58e8dcee125fe5291a",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +203,207 @@        transaction.nodes.valuesIterator\n          .flatMap {\n            // TODO https://github.com/digital-asset/daml/issues/8020\n            //  Check impact of rollback\n            case (n: Node.GenActionNode[_, _]) => n.informeesOfNode"
  },
  {
    "id" : "bafbac75-4c3d-4d8f-a80c-a2be5b7f2072",
    "prId" : 9218,
    "prUrl" : "https://github.com/digital-asset/daml/pull/9218",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a079d94b-bc8a-4319-aeb9-a8b79fc0f46e",
        "parentId" : null,
        "authorId" : "f2bb5ae8-6c47-4c83-85c6-1e82ecd89dfd",
        "body" : "Don't we actually want to return the NOT_FOUND code?",
        "createdAt" : "2021-03-23T13:20:51Z",
        "updatedAt" : "2021-03-26T12:59:29Z",
        "lastEditedBy" : "f2bb5ae8-6c47-4c83-85c6-1e82ecd89dfd",
        "tags" : [
        ]
      },
      {
        "id" : "13f28d48-b7d5-4d04-8b31-ed5eae789804",
        "parentId" : "a079d94b-bc8a-4319-aeb9-a8b79fc0f46e",
        "authorId" : "181bcece-33df-41af-887d-5d5f51beb543",
        "body" : "Not sure; I find it suspect to return `NOT_FOUND` for something that's a command, not a query.",
        "createdAt" : "2021-03-23T13:28:32Z",
        "updatedAt" : "2021-03-26T12:59:29Z",
        "lastEditedBy" : "181bcece-33df-41af-887d-5d5f51beb543",
        "tags" : [
        ]
      }
    ],
    "commit" : "a91cab7c921812b524c48f02fd0c123d8d5bb1d1",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +273,277 @@        error match {\n          case ContractNotFound(_) | ReplayMismatch(_) =>\n            Status.ABORTED.withDescription(cause.explain)\n          case _ => Status.INVALID_ARGUMENT.withDescription(cause.explain)\n        }"
  },
  {
    "id" : "83d7d882-41a5-4427-abbc-7654f24fca5d",
    "prId" : 9218,
    "prUrl" : "https://github.com/digital-asset/daml/pull/9218",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cfb7c997-197d-43af-b5ca-48c2ead237bc",
        "parentId" : null,
        "authorId" : "1d70ec7b-8793-4cc6-95c8-fac6f7816dcc",
        "body" : "Why was `ReplayMismatch` absent? Is it tested?",
        "createdAt" : "2021-03-23T15:16:18Z",
        "updatedAt" : "2021-03-26T12:59:29Z",
        "lastEditedBy" : "1d70ec7b-8793-4cc6-95c8-fac6f7816dcc",
        "tags" : [
        ]
      },
      {
        "id" : "af925c63-afee-40b0-81b2-35941c181572",
        "parentId" : "cfb7c997-197d-43af-b5ca-48c2ead237bc",
        "authorId" : "f2bb5ae8-6c47-4c83-85c6-1e82ecd89dfd",
        "body" : "Samir suggested putting it here. Will add a test",
        "createdAt" : "2021-03-23T15:20:58Z",
        "updatedAt" : "2021-03-26T12:59:29Z",
        "lastEditedBy" : "f2bb5ae8-6c47-4c83-85c6-1e82ecd89dfd",
        "tags" : [
        ]
      }
    ],
    "commit" : "a91cab7c921812b524c48f02fd0c123d8d5bb1d1",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +272,276 @@      case cause @ ErrorCause.DamlLf(error) =>\n        error match {\n          case ContractNotFound(_) | ReplayMismatch(_) =>\n            Status.ABORTED.withDescription(cause.explain)\n          case _ => Status.INVALID_ARGUMENT.withDescription(cause.explain)"
  },
  {
    "id" : "10bc36b0-499c-47e5-8ff3-b84e604b6e39",
    "prId" : 8676,
    "prUrl" : "https://github.com/digital-asset/daml/pull/8676",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f5c9419f-4c0c-4bea-9b21-2bff80020880",
        "parentId" : null,
        "authorId" : "d7d10058-0c3f-4068-af8a-3d7024c74f76",
        "body" : "@kamil-da , don't you feel logging every submission at info level might turn out to be a bit verbose?",
        "createdAt" : "2021-02-18T09:39:18Z",
        "updatedAt" : "2021-02-18T09:39:18Z",
        "lastEditedBy" : "d7d10058-0c3f-4068-af8a-3d7024c74f76",
        "tags" : [
        ]
      },
      {
        "id" : "a0677b7d-9b3f-4971-a7dc-0fced9509bf9",
        "parentId" : "f5c9419f-4c0c-4bea-9b21-2bff80020880",
        "authorId" : "5f6b922a-83eb-4419-97b1-13c757c1e583",
        "body" : "@oliverse-da Thank you for the comment.\r\nActually I think it may be more reasonable to lower the level to debug.\r\nThis change was explicitly requested by @mziolekda , so his input might be valuable here as well.",
        "createdAt" : "2021-02-18T17:15:06Z",
        "updatedAt" : "2021-02-18T17:15:06Z",
        "lastEditedBy" : "5f6b922a-83eb-4419-97b1-13c757c1e583",
        "tags" : [
        ]
      }
    ],
    "commit" : "869ef17902cef513d358b811ccfcd330aabc77f6",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +111,115 @@  override def submit(request: SubmitRequest): Future[Unit] =\n    withEnrichedLoggingContext(logging.commands(request.commands)) { implicit loggingContext =>\n      logger.info(\"Submitting transaction\")\n      logger.trace(s\"Commands: ${request.commands.commands.commands}\")\n      ledgerConfigProvider.latestConfiguration"
  },
  {
    "id" : "8c9cdedf-f5fb-495d-8639-92b7e0ae3fa4",
    "prId" : 6924,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6924",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a87b71d7-6242-49f4-b441-7cb93218ac1c",
        "parentId" : null,
        "authorId" : "181bcece-33df-41af-887d-5d5f51beb543",
        "body" : "This is much nicer. Thanks!",
        "createdAt" : "2020-07-31T09:33:07Z",
        "updatedAt" : "2020-07-31T11:58:54Z",
        "lastEditedBy" : "181bcece-33df-41af-887d-5d5f51beb543",
        "tags" : [
        ]
      },
      {
        "id" : "bc39cf1e-6c33-4e36-ba74-cd4ad26c7439",
        "parentId" : "a87b71d7-6242-49f4-b441-7cb93218ac1c",
        "authorId" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "body" : "I'll use this approach to make the other calls to `withEnrichedLoggingContext` a bit more compact.",
        "createdAt" : "2020-07-31T12:09:08Z",
        "updatedAt" : "2020-07-31T12:09:09Z",
        "lastEditedBy" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "tags" : [
        ]
      }
    ],
    "commit" : "865574590cb0a7ba8a61b4b5c4f66bdee74d6153",
    "line" : 48,
    "diffHunk" : "@@ -1,1 +115,119 @@\n  override def submit(request: SubmitRequest): Future[Unit] =\n    withEnrichedLoggingContext(logging.commands(request.commands)) { implicit loggingContext =>\n      logger.trace(s\"Commands: ${request.commands.commands.commands}\")\n      ledgerConfigProvider.latestConfiguration"
  },
  {
    "id" : "3876f4a2-72a2-439c-9181-2c4fa18ef046",
    "prId" : 6924,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6924",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1c1eff33-6851-4bd9-93ed-6b5e4e476042",
        "parentId" : null,
        "authorId" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "body" : "Lovely. :joy: ",
        "createdAt" : "2020-07-31T09:53:34Z",
        "updatedAt" : "2020-07-31T11:58:54Z",
        "lastEditedBy" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "tags" : [
        ]
      }
    ],
    "commit" : "865574590cb0a7ba8a61b4b5c4f66bdee74d6153",
    "line" : 49,
    "diffHunk" : "@@ -1,1 +116,120 @@  override def submit(request: SubmitRequest): Future[Unit] =\n    withEnrichedLoggingContext(logging.commands(request.commands)) { implicit loggingContext =>\n      logger.trace(s\"Commands: ${request.commands.commands.commands}\")\n      ledgerConfigProvider.latestConfiguration\n        .map(deduplicateAndRecordOnLedger(seedService.nextSeed(), request.commands, _))"
  }
]