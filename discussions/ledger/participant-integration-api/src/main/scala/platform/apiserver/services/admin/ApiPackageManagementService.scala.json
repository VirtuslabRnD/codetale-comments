[
  {
    "id" : "092c21fc-4d81-4111-a847-e568a59d8b33",
    "prId" : 10242,
    "prUrl" : "https://github.com/digital-asset/daml/pull/10242",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "59284803-d7c9-4fee-84cc-6c33b0495c42",
        "parentId" : null,
        "authorId" : "181bcece-33df-41af-887d-5d5f51beb543",
        "body" : "We already import `SubmissionId` directly.\r\n\r\n```suggestion\r\n    submissionIdGenerator: String => SubmissionId,\r\n```",
        "createdAt" : "2021-07-13T12:01:55Z",
        "updatedAt" : "2021-07-13T12:04:39Z",
        "lastEditedBy" : "181bcece-33df-41af-887d-5d5f51beb543",
        "tags" : [
        ]
      }
    ],
    "commit" : "92564767d0eb280b8646ba03fb36c3b1e3e02675",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +44,48 @@    engine: Engine,\n    darReader: GenDarReader[Archive],\n    submissionIdGenerator: String => v1.SubmissionId,\n)(implicit\n    materializer: Materializer,"
  },
  {
    "id" : "a978e5e8-0627-45ed-a16d-b392f297e9f9",
    "prId" : 8676,
    "prUrl" : "https://github.com/digital-asset/daml/pull/8676",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "af656ee5-4d77-49a2-abdb-43e761726e24",
        "parentId" : null,
        "authorId" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "body" : "Should you add something to the logging context here?",
        "createdAt" : "2021-02-01T20:34:20Z",
        "updatedAt" : "2021-02-15T09:34:35Z",
        "lastEditedBy" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "tags" : [
        ]
      },
      {
        "id" : "8a676ff2-4478-4842-854a-6b8b69ec52cd",
        "parentId" : "af656ee5-4d77-49a2-abdb-43e761726e24",
        "authorId" : "5f6b922a-83eb-4419-97b1-13c757c1e583",
        "body" : "There's no identifier available in the request. Should we generate one in such case?",
        "createdAt" : "2021-02-02T09:14:23Z",
        "updatedAt" : "2021-02-15T09:34:35Z",
        "lastEditedBy" : "5f6b922a-83eb-4419-97b1-13c757c1e583",
        "tags" : [
        ]
      }
    ],
    "commit" : "869ef17902cef513d358b811ccfcd330aabc77f6",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +67,71 @@      request: ListKnownPackagesRequest\n  ): Future[ListKnownPackagesResponse] = {\n    logger.info(\"Listing known packages\")\n    packagesIndex\n      .listLfPackages()"
  },
  {
    "id" : "2b9b7052-120e-4629-a9fa-51cdf4245023",
    "prId" : 7430,
    "prUrl" : "https://github.com/digital-asset/daml/pull/7430",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "396cfa8c-f198-4026-b9aa-3759e2b07baf",
        "parentId" : null,
        "authorId" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "body" : "Do any of those streams need to be explicitly closed?",
        "createdAt" : "2020-09-17T15:52:43Z",
        "updatedAt" : "2020-09-18T14:38:37Z",
        "lastEditedBy" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "tags" : [
        ]
      },
      {
        "id" : "7b1f203b-68af-4cc4-9cea-6e0235046f83",
        "parentId" : "396cfa8c-f198-4026-b9aa-3759e2b07baf",
        "authorId" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "body" : "Good question. It seems that `DarReader#readArchive` close the stream given in argument.\r\n\r\n```scala\r\n\r\n  /** Reads an archive from a ZipInputStream. The stream will be closed by this function! */\r\n  def readArchive(\r\n      name: String,\r\n      darStream: ZipInputStream,\r\n      entrySizeThreshold: Int = EntrySizeThreshold,\r\n  ): Try[Dar[A]] = ...\r\n```",
        "createdAt" : "2020-09-17T16:04:37Z",
        "updatedAt" : "2020-09-18T14:38:37Z",
        "lastEditedBy" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "tags" : [
        ]
      }
    ],
    "commit" : "1e489af38d29d2a55fd0ec4762f661ccb54731bd",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +97,101 @@        SubmissionId.assertFromString(request.submissionId)\n\n    val stream = new ZipInputStream(new ByteArrayInputStream(request.darFile.toByteArray))\n\n    val response = for {"
  }
]