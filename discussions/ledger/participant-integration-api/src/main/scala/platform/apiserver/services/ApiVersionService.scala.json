[
  {
    "id" : "9b75e3d5-2dee-4cab-a3b3-e3cc90f30f87",
    "prId" : 7792,
    "prUrl" : "https://github.com/digital-asset/daml/pull/7792",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9b92b67b-eb8e-4d29-b6cb-2bad17085524",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "Afaict, this file won’t be there outside of our repo. I see two options:\r\n\r\n1. Either pack it in the resources and call `rlocation` like we do for other resources. This is packed into the JAR so it will be distribued.\r\n2. Or generate a source file based on this file and compile that.\r\n\r\nI’d probably do 1 but in the end it doesn’t matter all that much.",
        "createdAt" : "2020-10-26T08:42:25Z",
        "updatedAt" : "2020-10-27T16:16:39Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "143dc105-56a5-4a21-9444-a1c223a93ecf",
        "parentId" : "9b92b67b-eb8e-4d29-b6cb-2bad17085524",
        "authorId" : "5f6b922a-83eb-4419-97b1-13c757c1e583",
        "body" : "So by using `rlocation` I can avoid manually placing the version file in the resources using `filegroup`?",
        "createdAt" : "2020-10-26T09:52:15Z",
        "updatedAt" : "2020-10-27T16:16:39Z",
        "lastEditedBy" : "5f6b922a-83eb-4419-97b1-13c757c1e583",
        "tags" : [
        ]
      },
      {
        "id" : "ca079e40-230c-488b-9581-b18a0eea42e5",
        "parentId" : "9b92b67b-eb8e-4d29-b6cb-2bad17085524",
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "I’ll take that back. You need `rlocation` to get thigns in `data`. For `resources`, this should work fine.",
        "createdAt" : "2020-10-26T11:44:45Z",
        "updatedAt" : "2020-10-27T16:16:39Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      }
    ],
    "commit" : "4a2f222921255b0e5a9b204e4f7f49b90539a953",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +28,32 @@  private val logger = ContextualizedLogger.get(this.getClass)\n\n  private val versionFile: String = \"ledger-api/VERSION\"\n  private lazy val apiVersion: Try[String] = readVersion(versionFile)\n"
  }
]