[
  {
    "id" : "b8320c64-3545-4732-920d-34c13edb4835",
    "prId" : 10500,
    "prUrl" : "https://github.com/digital-asset/daml/pull/10500#pullrequestreview-724351009",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6aec0d08-2438-4d5e-9a7e-15182704f2dd",
        "parentId" : null,
        "authorId" : "2a803e3e-0f8e-44e8-a99a-06dffc638187",
        "body" : "any reason for the `updateAndGet` instead of `set` as used previosly?",
        "createdAt" : "2021-08-06T09:04:11Z",
        "updatedAt" : "2021-08-06T09:04:11Z",
        "lastEditedBy" : "2a803e3e-0f8e-44e8-a99a-06dffc638187",
        "tags" : [
        ]
      },
      {
        "id" : "d0f932c7-4944-48fa-89d5-13f11c748267",
        "parentId" : "6aec0d08-2438-4d5e-9a7e-15182704f2dd",
        "authorId" : "181bcece-33df-41af-887d-5d5f51beb543",
        "body" : "Yes; if we get a rejection but we previously had a configuration, we need to keep the previous configuration instead of setting it back to `None`.\r\n\r\n(This code was just moved.)",
        "createdAt" : "2021-08-06T09:12:44Z",
        "updatedAt" : "2021-08-06T09:12:44Z",
        "lastEditedBy" : "181bcece-33df-41af-887d-5d5f51beb543",
        "tags" : [
        ]
      },
      {
        "id" : "14a1acaa-9f0d-479c-b402-cc85a30b22b5",
        "parentId" : "6aec0d08-2438-4d5e-9a7e-15182704f2dd",
        "authorId" : "1d70ec7b-8793-4cc6-95c8-fac6f7816dcc",
        "body" : "I think it's because `set` doesn't allow you to access the previous value. I'd propose to use a proper case class for the state though.",
        "createdAt" : "2021-08-06T09:20:55Z",
        "updatedAt" : "2021-08-06T09:37:12Z",
        "lastEditedBy" : "1d70ec7b-8793-4cc6-95c8-fac6f7816dcc",
        "tags" : [
        ]
      },
      {
        "id" : "78a19ac1-b697-42c7-a21a-38b6e6eac127",
        "parentId" : "6aec0d08-2438-4d5e-9a7e-15182704f2dd",
        "authorId" : "181bcece-33df-41af-887d-5d5f51beb543",
        "body" : "I'll do it in a new changeset.",
        "createdAt" : "2021-08-06T10:08:10Z",
        "updatedAt" : "2021-08-06T10:08:10Z",
        "lastEditedBy" : "181bcece-33df-41af-887d-5d5f51beb543",
        "tags" : [
        ]
      },
      {
        "id" : "4a6c6bb5-6eed-4922-894b-e96814e68370",
        "parentId" : "6aec0d08-2438-4d5e-9a7e-15182704f2dd",
        "authorId" : "181bcece-33df-41af-887d-5d5f51beb543",
        "body" : "#10508 introduces a `State` enumeration.",
        "createdAt" : "2021-08-06T13:21:56Z",
        "updatedAt" : "2021-08-06T13:21:56Z",
        "lastEditedBy" : "181bcece-33df-41af-887d-5d5f51beb543",
        "tags" : [
        ]
      }
    ],
    "commit" : "92675b626d3a35c38ab02f1fe4e55f6f1428eb50",
    "line" : 163,
    "diffHunk" : "@@ -1,1 +121,125 @@            case (offset, domain.ConfigurationEntry.Rejected(_, _, _)) =>\n              logger.info(s\"New ledger configuration rejection found at $offset\")\n              latestConfigurationState.updateAndGet(previous => Some(offset) -> previous._2)\n              ()\n          }"
  },
  {
    "id" : "f10fb869-f7a7-4ffc-9dc4-27c4cec530db",
    "prId" : 10500,
    "prUrl" : "https://github.com/digital-asset/daml/pull/10500#pullrequestreview-724158796",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a90cab24-c606-41c3-bf02-f80d0d92e2cb",
        "parentId" : null,
        "authorId" : "1d70ec7b-8793-4cc6-95c8-fac6f7816dcc",
        "body" : "👍🏼 ",
        "createdAt" : "2021-08-06T09:14:09Z",
        "updatedAt" : "2021-08-06T09:37:12Z",
        "lastEditedBy" : "1d70ec7b-8793-4cc6-95c8-fac6f7816dcc",
        "tags" : [
        ]
      }
    ],
    "commit" : "92675b626d3a35c38ab02f1fe4e55f6f1428eb50",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +32,36 @@  *\n  * The [[Subscription.ready]] method returns a [[Future]] that will not resolve until a\n  * configuration is found or the load timeout expires.\n  */\nprivate[apiserver] final class LedgerConfigurationSubscriptionFromIndex("
  },
  {
    "id" : "d15d8013-0273-41de-98a0-2f3f9594e4e4",
    "prId" : 10500,
    "prUrl" : "https://github.com/digital-asset/daml/pull/10500#pullrequestreview-724210319",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ac90006a-d5e0-411f-bad2-b120dd6111e5",
        "parentId" : null,
        "authorId" : "1d70ec7b-8793-4cc6-95c8-fac6f7816dcc",
        "body" : "What happens if this fails?",
        "createdAt" : "2021-08-06T09:36:57Z",
        "updatedAt" : "2021-08-06T09:37:12Z",
        "lastEditedBy" : "1d70ec7b-8793-4cc6-95c8-fac6f7816dcc",
        "tags" : [
        ]
      },
      {
        "id" : "59797fb1-c0e5-48be-bd88-5a5f569328db",
        "parentId" : "ac90006a-d5e0-411f-bad2-b120dd6111e5",
        "authorId" : "181bcece-33df-41af-887d-5d5f51beb543",
        "body" : "The resource fails and the participant will crash.\r\n\r\nThis might sound scary, but this is already the case if the index fails to look up the ledger ID, so it doesn't add any new failure modes. Basically, participant without index is bad news.",
        "createdAt" : "2021-08-06T09:39:46Z",
        "updatedAt" : "2021-08-06T09:39:46Z",
        "lastEditedBy" : "181bcece-33df-41af-887d-5d5f51beb543",
        "tags" : [
        ]
      },
      {
        "id" : "057f52df-b726-4def-81a0-73da221b93de",
        "parentId" : "ac90006a-d5e0-411f-bad2-b120dd6111e5",
        "authorId" : "1d70ec7b-8793-4cc6-95c8-fac6f7816dcc",
        "body" : "Worth logging something to clarify or will the cause of failure be clear enough?",
        "createdAt" : "2021-08-06T09:57:02Z",
        "updatedAt" : "2021-08-06T09:57:02Z",
        "lastEditedBy" : "1d70ec7b-8793-4cc6-95c8-fac6f7816dcc",
        "tags" : [
        ]
      },
      {
        "id" : "7a5fd94f-99ed-4d05-b623-a13f93598453",
        "parentId" : "ac90006a-d5e0-411f-bad2-b120dd6111e5",
        "authorId" : "c83a17a2-0c0d-4811-9fe5-e560bb3ad87a",
        "body" : "It's a good point. We generally don't retry database queries or otherwise handle failures on a low level.\r\n\r\nFor the indexer, we have `RecoveringIndexer` that restarts the whole indexer if anything fails (even a small thing like a transient database connection issue). This is not optimal, but at least the indexer component automatically and recovers from transient errors.\r\n\r\nFor the ledger API server, (AFAIK) we don't have such a thing. It would be the responsibility of the participant operator to monitor the health of the participant and restart if necessary.",
        "createdAt" : "2021-08-06T10:03:40Z",
        "updatedAt" : "2021-08-06T10:03:41Z",
        "lastEditedBy" : "c83a17a2-0c0d-4811-9fe5-e560bb3ad87a",
        "tags" : [
        ]
      },
      {
        "id" : "3ab8e2fd-5a3e-4395-b9e5-39d77a8def40",
        "parentId" : "ac90006a-d5e0-411f-bad2-b120dd6111e5",
        "authorId" : "181bcece-33df-41af-887d-5d5f51beb543",
        "body" : "If only we could stop packaging the API server and indexer together, that would be trivial. :upside_down_face: ",
        "createdAt" : "2021-08-06T10:16:38Z",
        "updatedAt" : "2021-08-06T10:16:38Z",
        "lastEditedBy" : "181bcece-33df-41af-887d-5d5f51beb543",
        "tags" : [
        ]
      }
    ],
    "commit" : "92675b626d3a35c38ab02f1fe4e55f6f1428eb50",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +54,58 @@        Resource(\n          indexService\n            .lookupConfiguration()\n            .map { startingConfiguration =>\n              new Subscription(startingConfiguration, configurationLoadTimeout)"
  },
  {
    "id" : "dbcbf4b7-06e6-4d95-a973-6edb99b731e2",
    "prId" : 10508,
    "prUrl" : "https://github.com/digital-asset/daml/pull/10508#pullrequestreview-724407802",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a109afc1-97d0-4e6d-92e6-bfeadb578ed0",
        "parentId" : null,
        "authorId" : "1d70ec7b-8793-4cc6-95c8-fac6f7816dcc",
        "body" : "```suggestion\r\n    override def latestConfiguration: Option[Configuration] =\r\n```\r\n\r\nOr was it intentional?",
        "createdAt" : "2021-08-06T13:41:27Z",
        "updatedAt" : "2021-08-06T13:43:13Z",
        "lastEditedBy" : "1d70ec7b-8793-4cc6-95c8-fac6f7816dcc",
        "tags" : [
        ]
      },
      {
        "id" : "cf0b3e62-62d0-4864-8781-6862540d9063",
        "parentId" : "a109afc1-97d0-4e6d-92e6-bfeadb578ed0",
        "authorId" : "181bcece-33df-41af-887d-5d5f51beb543",
        "body" : "Yup, very intentional. I don't like omitting parentheses for referentially-opaque functions.",
        "createdAt" : "2021-08-06T14:18:44Z",
        "updatedAt" : "2021-08-06T14:18:44Z",
        "lastEditedBy" : "181bcece-33df-41af-887d-5d5f51beb543",
        "tags" : [
        ]
      }
    ],
    "commit" : "60d2edb89765a46c7c6e0f66474d6c0b084c081f",
    "line" : 68,
    "diffHunk" : "@@ -1,1 +137,141 @@    override def ready: Future[Unit] = readyPromise.future\n\n    override def latestConfiguration(): Option[Configuration] =\n      currentState.get.latestConfiguration\n"
  }
]