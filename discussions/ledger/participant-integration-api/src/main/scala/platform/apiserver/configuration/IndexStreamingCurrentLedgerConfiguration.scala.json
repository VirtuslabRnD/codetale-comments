[
  {
    "id" : "f78b3ff4-72e4-47c5-b763-1506517947e2",
    "prId" : 10461,
    "prUrl" : "https://github.com/digital-asset/daml/pull/10461#pullrequestreview-721073981",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3a34dd16-35ba-40b9-9ec3-da538ef7c66a",
        "parentId" : null,
        "authorId" : "2a803e3e-0f8e-44e8-a99a-06dffc638187",
        "body" : "shouldn't we log something if somehow the promise was already completed?",
        "createdAt" : "2021-08-02T17:48:09Z",
        "updatedAt" : "2021-08-02T18:14:30Z",
        "lastEditedBy" : "2a803e3e-0f8e-44e8-a99a-06dffc638187",
        "tags" : [
        ]
      },
      {
        "id" : "55a54d81-42f0-4145-a635-b5e93bcd3903",
        "parentId" : "3a34dd16-35ba-40b9-9ec3-da538ef7c66a",
        "authorId" : "181bcece-33df-41af-887d-5d5f51beb543",
        "body" : "Not sure what we'd log, but I'm open to suggestions.",
        "createdAt" : "2021-08-03T06:15:03Z",
        "updatedAt" : "2021-08-03T06:15:03Z",
        "lastEditedBy" : "181bcece-33df-41af-887d-5d5f51beb543",
        "tags" : [
        ]
      },
      {
        "id" : "612c428c-447d-4541-a7ab-b54ed3d3aba7",
        "parentId" : "3a34dd16-35ba-40b9-9ec3-da538ef7c66a",
        "authorId" : "1d70ec7b-8793-4cc6-95c8-fac6f7816dcc",
        "body" : "When can this happen?",
        "createdAt" : "2021-08-03T10:26:18Z",
        "updatedAt" : "2021-08-03T10:48:41Z",
        "lastEditedBy" : "1d70ec7b-8793-4cc6-95c8-fac6f7816dcc",
        "tags" : [
        ]
      },
      {
        "id" : "a0a709c8-5544-4a0a-ad50-7352d2c0087f",
        "parentId" : "3a34dd16-35ba-40b9-9ec3-da538ef7c66a",
        "authorId" : "181bcece-33df-41af-887d-5d5f51beb543",
        "body" : "If `lookupConfiguration` fails, or if the stream ends in a failure. Probably because the connection to the index DB breaks, or something.",
        "createdAt" : "2021-08-03T11:15:57Z",
        "updatedAt" : "2021-08-03T11:15:58Z",
        "lastEditedBy" : "181bcece-33df-41af-887d-5d5f51beb543",
        "tags" : [
        ]
      }
    ],
    "commit" : "60abf8dce253790b89f22747350d4f3fc1fdfc87",
    "line" : 80,
    "diffHunk" : "@@ -1,1 +75,79 @@      .failed\n      .foreach { exception =>\n        readyPromise.tryFailure(exception)\n        logger.error(\"Could not load the ledger configuration.\", exception)\n      }(servicesExecutionContext)"
  },
  {
    "id" : "0aff6ed4-bc00-4c2a-953f-cb9f96514529",
    "prId" : 10461,
    "prUrl" : "https://github.com/digital-asset/daml/pull/10461#pullrequestreview-720849995",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2eb045f7-bad4-4c36-b951-5a9cd3ddeeae",
        "parentId" : null,
        "authorId" : "2a803e3e-0f8e-44e8-a99a-06dffc638187",
        "body" : "This is probably out of scope but it seems that the current code is a bit too complex for all that it's done.\r\n\r\nFor the timeout, can't we use a simpler `Future.firstCompletedOf` where we have the initial config set using an akka `pattern.after` to complete the future after the delay? And create a source using `Source.future` from the previous result, concating the streaming update, then using a `via` with the killswitch. This would eliminate the need for the timeout and the state kept in the killSwitch and the readyPromise.",
        "createdAt" : "2021-08-02T18:05:48Z",
        "updatedAt" : "2021-08-02T18:14:30Z",
        "lastEditedBy" : "2a803e3e-0f8e-44e8-a99a-06dffc638187",
        "tags" : [
        ]
      },
      {
        "id" : "f922e680-5883-45ee-a2ba-c63e5b94b051",
        "parentId" : "2eb045f7-bad4-4c36-b951-5a9cd3ddeeae",
        "authorId" : "181bcece-33df-41af-887d-5d5f51beb543",
        "body" : "I think I see what you mean. Definitely worth a shot at cleaning up.",
        "createdAt" : "2021-08-03T06:24:16Z",
        "updatedAt" : "2021-08-03T06:24:16Z",
        "lastEditedBy" : "181bcece-33df-41af-887d-5d5f51beb543",
        "tags" : [
        ]
      },
      {
        "id" : "149f71ff-621a-4078-9013-2b6623d57421",
        "parentId" : "2eb045f7-bad4-4c36-b951-5a9cd3ddeeae",
        "authorId" : "181bcece-33df-41af-887d-5d5f51beb543",
        "body" : "I gave this a shot but everything I do makes it messier. Please feel free to take a look yourself once this is merged. :grinning: ",
        "createdAt" : "2021-08-03T07:00:11Z",
        "updatedAt" : "2021-08-03T07:00:12Z",
        "lastEditedBy" : "181bcece-33df-41af-887d-5d5f51beb543",
        "tags" : [
        ]
      },
      {
        "id" : "5913555f-2a19-4bd8-bb41-154e535658fa",
        "parentId" : "2eb045f7-bad4-4c36-b951-5a9cd3ddeeae",
        "authorId" : "2a803e3e-0f8e-44e8-a99a-06dffc638187",
        "body" : "Sounds good ðŸ˜‚ ",
        "createdAt" : "2021-08-03T07:06:15Z",
        "updatedAt" : "2021-08-03T07:06:15Z",
        "lastEditedBy" : "2a803e3e-0f8e-44e8-a99a-06dffc638187",
        "tags" : [
        ]
      }
    ],
    "commit" : "60abf8dce253790b89f22747350d4f3fc1fdfc87",
    "line" : 45,
    "diffHunk" : "@@ -1,1 +50,54 @@  // - Submit the initial config if none is found after a delay\n  // - Mark the provider as ready if no configuration was found after a timeout\n  private val scheduledTimeout = giveUpAfterTimeout()\n  startLoading()\n"
  },
  {
    "id" : "40008d40-244e-4f06-8946-d8e10ddf26a1",
    "prId" : 10461,
    "prUrl" : "https://github.com/digital-asset/daml/pull/10461#pullrequestreview-721028964",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dd4af632-b732-4797-9d3b-991b7f55e467",
        "parentId" : null,
        "authorId" : "1d70ec7b-8793-4cc6-95c8-fac6f7816dcc",
        "body" : "(I \"love\" the choice of `()` as the `Unit` value in Scala)",
        "createdAt" : "2021-08-03T10:19:26Z",
        "updatedAt" : "2021-08-03T10:48:40Z",
        "lastEditedBy" : "1d70ec7b-8793-4cc6-95c8-fac6f7816dcc",
        "tags" : [
        ]
      }
    ],
    "commit" : "60abf8dce253790b89f22747350d4f3fc1fdfc87",
    "line" : 108,
    "diffHunk" : "@@ -1,1 +125,129 @@      new Runnable {\n        override def run(): Unit = {\n          if (readyPromise.trySuccess(())) {\n            logger.warn(\n              s\"No ledger configuration found after ${ledgerConfiguration.configurationLoadTimeout}. The ledger API server will now start but all services that depend on the ledger configuration will return UNAVAILABLE until at least one ledger configuration is found.\""
  }
]