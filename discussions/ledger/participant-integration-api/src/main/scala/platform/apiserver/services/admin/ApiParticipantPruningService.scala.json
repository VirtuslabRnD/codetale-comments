[
  {
    "id" : "fcb663d7-c6f9-47fb-81b6-aee32b49e3c0",
    "prId" : 7988,
    "prUrl" : "https://github.com/digital-asset/daml/pull/7988",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f405b669-f3d2-4fc3-9a8a-829dbaf88c0b",
        "parentId" : null,
        "authorId" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "body" : "Please coordinate with @SamirTalwar-DA on [this PR](https://github.com/digital-asset/daml/pull/7945).",
        "createdAt" : "2020-11-17T15:27:48Z",
        "updatedAt" : "2020-11-23T10:35:52Z",
        "lastEditedBy" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "tags" : [
        ]
      },
      {
        "id" : "bd8de73b-3807-4388-b9bb-84ae28c18225",
        "parentId" : "f405b669-f3d2-4fc3-9a8a-829dbaf88c0b",
        "authorId" : "d7d10058-0c3f-4068-af8a-3d7024c74f76",
        "body" : "Yeah, I have been monitoring that PR.",
        "createdAt" : "2020-11-17T16:03:40Z",
        "updatedAt" : "2020-11-23T10:35:52Z",
        "lastEditedBy" : "d7d10058-0c3f-4068-af8a-3d7024c74f76",
        "tags" : [
        ]
      },
      {
        "id" : "c0d8b87e-fc24-4d4a-bd36-c46165eaacb8",
        "parentId" : "f405b669-f3d2-4fc3-9a8a-829dbaf88c0b",
        "authorId" : "181bcece-33df-41af-887d-5d5f51beb543",
        "body" : "As this one is likely to make it in first, I suggest you just comment on the other PR once it's merged so I don't forget to update this. (Or push an update there, if you like.)",
        "createdAt" : "2020-11-17T16:51:25Z",
        "updatedAt" : "2020-11-23T10:35:52Z",
        "lastEditedBy" : "181bcece-33df-41af-887d-5d5f51beb543",
        "tags" : [
        ]
      }
    ],
    "commit" : "ed2a13fb9597e7d807a8c7f6d319bf4cab1558b9",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +40,44 @@\n  override def bindService(): ServerServiceDefinition =\n    ParticipantPruningServiceGrpc.bindService(this, DirectExecutionContext)\n\n  override def prune(request: PruneRequest): Future[PruneResponse] = {"
  },
  {
    "id" : "4e1e6d82-7699-473a-bdbb-0ee09706353c",
    "prId" : 7988,
    "prUrl" : "https://github.com/digital-asset/daml/pull/7988",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "13d4c669-d37a-435d-951e-5f52e70d25e2",
        "parentId" : null,
        "authorId" : "c83a17a2-0c0d-4811-9fe5-e560bb3ad87a",
        "body" : "If the write service pruning succeeds but the index pruning fails, then the participant is probably left in a corrupt state.",
        "createdAt" : "2020-11-19T15:25:42Z",
        "updatedAt" : "2020-11-23T10:35:52Z",
        "lastEditedBy" : "c83a17a2-0c0d-4811-9fe5-e560bb3ad87a",
        "tags" : [
        ]
      },
      {
        "id" : "26f7ab2d-94a3-49cd-a500-b1bde21f4771",
        "parentId" : "13d4c669-d37a-435d-951e-5f52e70d25e2",
        "authorId" : "d7d10058-0c3f-4068-af8a-3d7024c74f76",
        "body" : "I will add a comment to this effect here and in the documentation of the `WriteParticipantPruningService` as you recommend below. In the case you mention the two stores will be inconsistent, but in a idempotent-retry fashion can be made to be eventually consistent. Idempotent retry-ability is why `WriteService` implementations need to return \"okay\" if they are asked to prune offsets that they have already pruned.",
        "createdAt" : "2020-11-19T18:20:10Z",
        "updatedAt" : "2020-11-23T10:35:52Z",
        "lastEditedBy" : "d7d10058-0c3f-4068-af8a-3d7024c74f76",
        "tags" : [
        ]
      }
    ],
    "commit" : "ed2a13fb9597e7d807a8c7f6d319bf4cab1558b9",
    "line" : 64,
    "diffHunk" : "@@ -1,1 +62,66 @@              _ <- pruneWriteService(pruneUpTo, submissionId)\n\n              pruneResponse <- pruneLedgerApiServerIndex(pruneUpTo)\n\n            } yield pruneResponse).andThen(logger.logErrorsOnCall[PruneResponse])"
  },
  {
    "id" : "4ca4fcf3-8b5d-40bc-af78-425737621383",
    "prId" : 7988,
    "prUrl" : "https://github.com/digital-asset/daml/pull/7988",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "11de7d6f-ff3d-432f-a355-0b6dc99d3e5e",
        "parentId" : null,
        "authorId" : "c83a17a2-0c0d-4811-9fe5-e560bb3ad87a",
        "body" : "Same here, print a log line if the pruning fails.",
        "createdAt" : "2020-11-19T15:28:25Z",
        "updatedAt" : "2020-11-23T10:35:52Z",
        "lastEditedBy" : "c83a17a2-0c0d-4811-9fe5-e560bb3ad87a",
        "tags" : [
        ]
      },
      {
        "id" : "3694592f-7f84-4649-9baa-c67b1427e993",
        "parentId" : "11de7d6f-ff3d-432f-a355-0b6dc99d3e5e",
        "authorId" : "d7d10058-0c3f-4068-af8a-3d7024c74f76",
        "body" : "See above.",
        "createdAt" : "2020-11-19T18:30:38Z",
        "updatedAt" : "2020-11-23T10:35:52Z",
        "lastEditedBy" : "d7d10058-0c3f-4068-af8a-3d7024c74f76",
        "tags" : [
        ]
      }
    ],
    "commit" : "ed2a13fb9597e7d807a8c7f6d319bf4cab1558b9",
    "line" : 99,
    "diffHunk" : "@@ -1,1 +97,101 @@    readBackend\n      .prune(pruneUpTo)\n      .map { _ =>\n        logger.info(s\"Pruned ledger api server index up to ${pruneUpTo.toApiString} inclusively.\")\n        PruneResponse()"
  },
  {
    "id" : "f5d86643-70de-4384-a2ce-71fb4a9172f8",
    "prId" : 7988,
    "prUrl" : "https://github.com/digital-asset/daml/pull/7988",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "756a608e-b87d-41cc-8a8e-360bad69e259",
        "parentId" : null,
        "authorId" : "eb431011-3221-41ae-bf30-e72dde278004",
        "body" : "Please add a log line after the request validation to indicate that a pruning operation is being started.",
        "createdAt" : "2020-11-20T10:05:07Z",
        "updatedAt" : "2020-11-23T10:35:52Z",
        "lastEditedBy" : "eb431011-3221-41ae-bf30-e72dde278004",
        "tags" : [
        ]
      },
      {
        "id" : "eb086921-a234-4109-9e68-1e13ff766a37",
        "parentId" : "756a608e-b87d-41cc-8a8e-360bad69e259",
        "authorId" : "d7d10058-0c3f-4068-af8a-3d7024c74f76",
        "body" : "Ok, I will add it inside the helper functions `pruneWriteService` and `pruneLedgerApiServerIndex` where I have already been logging completion of these steps, but not the beginning.",
        "createdAt" : "2020-11-20T13:39:50Z",
        "updatedAt" : "2020-11-23T10:35:52Z",
        "lastEditedBy" : "d7d10058-0c3f-4068-af8a-3d7024c74f76",
        "tags" : [
        ]
      }
    ],
    "commit" : "ed2a13fb9597e7d807a8c7f6d319bf4cab1558b9",
    "line" : 59,
    "diffHunk" : "@@ -1,1 +57,61 @@\n              pruneUpTo <- validateRequest(request: PruneRequest)\n\n              // If write service pruning succeeds but ledger api server index pruning fails, the user can bring the\n              // systems back in sync by reissuing the prune request at the currently specified or later offset."
  }
]