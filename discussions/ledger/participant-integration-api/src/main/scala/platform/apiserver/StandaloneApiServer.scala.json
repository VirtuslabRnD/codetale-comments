[
  {
    "id" : "188dac79-62d0-4136-86b7-3567aa394e17",
    "prId" : 9701,
    "prUrl" : "https://github.com/digital-asset/daml/pull/9701",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f78446d4-229b-4ecc-ac9f-9ab38bd0f411",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "Does the change to return a future matter or is the only crucial change to throw an exception? No objection to keep it just trying to understand the bug.",
        "createdAt" : "2021-05-17T10:44:45Z",
        "updatedAt" : "2021-05-17T10:45:12Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "fc9b0474-d471-4804-a7d2-69628a09593e",
        "parentId" : "f78446d4-229b-4ecc-ac9f-9ab38bd0f411",
        "authorId" : "0aa8e877-303a-4005-8f07-7003661da2a6",
        "body" : "The only crucial part is throwing the exception. The future is just there to make this fit into the resource owner for-block on the calling side. It seemed cleaner to me to integrate it into that block rather than to have a line in the yield part throw an exception.",
        "createdAt" : "2021-05-17T11:08:55Z",
        "updatedAt" : "2021-05-17T11:08:56Z",
        "lastEditedBy" : "0aa8e877-303a-4005-8f07-7003661da2a6",
        "tags" : [
        ]
      },
      {
        "id" : "4d02b54b-db3b-4868-834d-4e54484d7d2e",
        "parentId" : "f78446d4-229b-4ecc-ac9f-9ab38bd0f411",
        "authorId" : "181bcece-33df-41af-887d-5d5f51beb543",
        "body" : "You could use a `Try` and then use `ResourceOwner.forTry` on the other side.",
        "createdAt" : "2021-05-17T12:55:01Z",
        "updatedAt" : "2021-05-17T12:55:04Z",
        "lastEditedBy" : "181bcece-33df-41af-887d-5d5f51beb543",
        "tags" : [
        ]
      }
    ],
    "commit" : "c9d4b6408eb3c47f5317d06ada186de2fe0635dd",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +168,172 @@  }\n\n  private def writePortFile(port: Port): Future[Unit] = {\n    config.portFile match {\n      case Some(path) =>"
  },
  {
    "id" : "3bb64deb-38c7-414e-ace0-1efa37deb569",
    "prId" : 9701,
    "prUrl" : "https://github.com/digital-asset/daml/pull/9701",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "74544b8a-ee17-42ad-a298-86b07607c875",
        "parentId" : null,
        "authorId" : "181bcece-33df-41af-887d-5d5f51beb543",
        "body" : "This could be:\r\n\r\n```scala\r\n      _ <- ResourceOwner.forFuture(() => writePortFile(apiServer.port))\r\n```\r\n",
        "createdAt" : "2021-05-17T12:54:40Z",
        "updatedAt" : "2021-05-17T12:55:04Z",
        "lastEditedBy" : "181bcece-33df-41af-887d-5d5f51beb543",
        "tags" : [
        ]
      },
      {
        "id" : "032f70e0-863a-454f-916f-d11e2f22112e",
        "parentId" : "74544b8a-ee17-42ad-a298-86b07607c875",
        "authorId" : "0aa8e877-303a-4005-8f07-7003661da2a6",
        "body" : "@SamirTalwar-DA Thank you, that's a good suggestion. I've implemented the `forTry` approach [here](https://github.com/digital-asset/daml/pull/9720).",
        "createdAt" : "2021-05-18T08:24:14Z",
        "updatedAt" : "2021-05-18T08:24:14Z",
        "lastEditedBy" : "0aa8e877-303a-4005-8f07-7003661da2a6",
        "tags" : [
        ]
      }
    ],
    "commit" : "c9d4b6408eb3c47f5317d06ada186de2fe0635dd",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +124,128 @@        metrics,\n      )\n      _ <- new FutureResourceOwner[ResourceContext, Unit](() => writePortFile(apiServer.port))\n    } yield {\n      logger.info("
  }
]