[
  {
    "id" : "9e79de8c-0358-4588-9187-e702d5e6d9e7",
    "prId" : 9943,
    "prUrl" : "https://github.com/digital-asset/daml/pull/9943",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "07f72cca-27e2-49ce-a3ac-b9bce4d0da40",
        "parentId" : null,
        "authorId" : "c36a5b02-f260-4cef-9fc6-22c312c693f7",
        "body" : "maybe add a comment here explaining why we call default and then deal with the exceptions separately here in custom implicit conversion?",
        "createdAt" : "2021-06-09T18:55:59Z",
        "updatedAt" : "2021-06-09T19:08:14Z",
        "lastEditedBy" : "c36a5b02-f260-4cef-9fc6-22c312c693f7",
        "tags" : [
        ]
      }
    ],
    "commit" : "25bd06e8a50f932173fef5400fd9c5723ee24147",
    "line" : 155,
    "diffHunk" : "@@ -1,1 +162,166 @@\n    implicit val arrayColumnToStringArray: Column[Array[String]] = nonNull { (value, meta) =>\n      DefaultImplicitArrayColumn.default(value, meta) match {\n        case Right(value) => Right(value)\n        case Left(_) =>"
  },
  {
    "id" : "fd7e2856-3d05-451b-a165-1a7b2e9637b9",
    "prId" : 9277,
    "prUrl" : "https://github.com/digital-asset/daml/pull/9277",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6412835a-0c41-4aa6-8086-9933a82c9442",
        "parentId" : null,
        "authorId" : "eb431011-3221-41ae-bf30-e72dde278004",
        "body" : "Should this rather be moved to `OracleConversions`?",
        "createdAt" : "2021-04-23T11:02:39Z",
        "updatedAt" : "2021-04-26T14:25:52Z",
        "lastEditedBy" : "eb431011-3221-41ae-bf30-e72dde278004",
        "tags" : [
        ]
      },
      {
        "id" : "7cf98c98-33c3-462d-a254-de1ed79c988a",
        "parentId" : "6412835a-0c41-4aa6-8086-9933a82c9442",
        "authorId" : "c36a5b02-f260-4cef-9fc6-22c312c693f7",
        "body" : "it's actually in scope even for non oracle and works for both oracle and non-oracle in `EventsTable.scala` -- the stuff i put in OracleArrayConversions are things that only should come in scope for Oracle where importing the generic conversions would be problematic, so I'm inclined to leave it where it is - it's basically an extension to the default anorm boolean handling to cator for oracle as well as dbs that properly support jdbc boolean, and we bring it into scope for both oracle and non oracle postgres/h2",
        "createdAt" : "2021-04-23T20:15:00Z",
        "updatedAt" : "2021-04-26T14:25:52Z",
        "lastEditedBy" : "c36a5b02-f260-4cef-9fc6-22c312c693f7",
        "tags" : [
        ]
      }
    ],
    "commit" : "48cd860ae4ae30bf7118d2b0b0f951233e7b328a",
    "line" : 178,
    "diffHunk" : "@@ -1,1 +208,212 @@\n  // booleans are stored as BigDecimal 0/1 in oracle, need to do implicit conversion when reading from db\n  implicit val bigDecimalColumnToBoolean: Column[Boolean] = nonNull { (value, meta) =>\n    val MetaDataItem(qualified, _, _) = meta\n    value match {"
  },
  {
    "id" : "571300a0-d7fb-4fe7-8493-ca5e55d182f9",
    "prId" : 8019,
    "prUrl" : "https://github.com/digital-asset/daml/pull/8019",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0bede179-8284-4f83-9b3a-836f82d5bdba",
        "parentId" : null,
        "authorId" : "aa9eebab-85b9-401c-893f-9a479fe01cf1",
        "body" : "Is this one used by the current changes or it will be used in an upcoming one?",
        "createdAt" : "2020-11-23T08:06:27Z",
        "updatedAt" : "2020-11-23T19:15:07Z",
        "lastEditedBy" : "aa9eebab-85b9-401c-893f-9a479fe01cf1",
        "tags" : [
        ]
      },
      {
        "id" : "f7d594c9-f778-4611-96cb-f53f230a6d72",
        "parentId" : "0bede179-8284-4f83-9b3a-836f82d5bdba",
        "authorId" : "aa9eebab-85b9-401c-893f-9a479fe01cf1",
        "body" : "Ah found it in `ContractWitnessesTable`, ignore this comment please.",
        "createdAt" : "2020-11-23T08:09:02Z",
        "updatedAt" : "2020-11-23T19:15:07Z",
        "lastEditedBy" : "aa9eebab-85b9-401c-893f-9a479fe01cf1",
        "tags" : [
        ]
      },
      {
        "id" : "ec66ea24-2ce5-4e9b-ac22-70cc6103c106",
        "parentId" : "0bede179-8284-4f83-9b3a-836f82d5bdba",
        "authorId" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "body" : "This was moved from its previous home in `RawEntry`, which has been removed.",
        "createdAt" : "2020-11-23T08:31:03Z",
        "updatedAt" : "2020-11-23T19:15:07Z",
        "lastEditedBy" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "tags" : [
        ]
      }
    ],
    "commit" : "f23fbbff77e4c9db4138e2ceb66ccabf40580ed2",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +186,190 @@  // Array[String]\n\n  implicit object StringArrayParameterMetadata extends ParameterMetaData[Array[String]] {\n    override def sqlType: String = \"ARRAY\"\n    override def jdbcType: Int = java.sql.Types.ARRAY"
  }
]