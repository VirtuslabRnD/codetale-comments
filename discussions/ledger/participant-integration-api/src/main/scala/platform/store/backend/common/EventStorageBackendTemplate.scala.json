[
  {
    "id" : "71b2ff1a-35ca-4627-b724-bdbd8ff78393",
    "prId" : 10224,
    "prUrl" : "https://github.com/digital-asset/daml/pull/10224",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b9f318d7-90fe-41ff-97cf-16884466fa37",
        "parentId" : null,
        "authorId" : "c83a17a2-0c0d-4811-9fe5-e560bb3ad87a",
        "body" : "Why the currying here?",
        "createdAt" : "2021-07-12T08:43:27Z",
        "updatedAt" : "2021-07-12T09:45:20Z",
        "lastEditedBy" : "c83a17a2-0c0d-4811-9fe5-e560bb3ad87a",
        "tags" : [
        ]
      },
      {
        "id" : "90942a54-81c3-4134-92c1-30869c2c3bdc",
        "parentId" : "b9f318d7-90fe-41ff-97cf-16884466fa37",
        "authorId" : "940afe62-a033-4e56-b2d3-8de3ca6d6d5c",
        "body" : "Just to conceptually separate something which is data and injected functionality",
        "createdAt" : "2021-07-12T13:02:31Z",
        "updatedAt" : "2021-07-12T13:02:32Z",
        "lastEditedBy" : "940afe62-a033-4e56-b2d3-8de3ca6d6d5c",
        "tags" : [
        ]
      }
    ],
    "commit" : "3bb3cd75cf643750f9d0b821a79f7db16efe37f5",
    "line" : 251,
    "diffHunk" : "@@ -1,1 +249,253 @@      selectColumns: String,\n      witnessesColumn: String,\n  )(\n      limit: Option[Int],\n      fetchSizeHint: Option[Int],"
  },
  {
    "id" : "c277f0b7-9c9d-4bf7-bbc1-a31c36961f69",
    "prId" : 10224,
    "prUrl" : "https://github.com/digital-asset/daml/pull/10224",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c517f922-b577-493a-bb8c-5dcbcfa0dfe7",
        "parentId" : null,
        "authorId" : "c83a17a2-0c0d-4811-9fe5-e560bb3ad87a",
        "body" : "I like this style of customizing the queries :+1:\r\n\r\nAs the code base around constructing queries gets more and more complex, it would be great if you could document some of the interfaces. E.g., describe here the return type of the methods, in particular that the first element of the tuple is a plain string that contains a SQL fragment where named parameters can be included in curly braces.",
        "createdAt" : "2021-07-12T09:14:49Z",
        "updatedAt" : "2021-07-12T09:45:20Z",
        "lastEditedBy" : "c83a17a2-0c0d-4811-9fe5-e560bb3ad87a",
        "tags" : [
        ]
      },
      {
        "id" : "940c91d0-e2bc-46a8-aeef-165115e24a86",
        "parentId" : "c517f922-b577-493a-bb8c-5dcbcfa0dfe7",
        "authorId" : "940afe62-a033-4e56-b2d3-8de3ca6d6d5c",
        "body" : "Added documentation",
        "createdAt" : "2021-07-12T14:44:57Z",
        "updatedAt" : "2021-07-12T14:44:57Z",
        "lastEditedBy" : "940afe62-a033-4e56-b2d3-8de3ca6d6d5c",
        "tags" : [
        ]
      }
    ],
    "commit" : "3bb3cd75cf643750f9d0b821a79f7db16efe37f5",
    "line" : 442,
    "diffHunk" : "@@ -1,1 +440,444 @@/** This encapsulates the moving part as composing various Events queries.\n  */\ntrait EventStrategy {\n\n  /** This populates the following part of the query:"
  },
  {
    "id" : "1945a9ce-95a3-40a4-98e9-69ebbcc0086b",
    "prId" : 10224,
    "prUrl" : "https://github.com/digital-asset/daml/pull/10224",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3a8363fe-6fb7-4d8b-a401-a9c0db9188b3",
        "parentId" : null,
        "authorId" : "c83a17a2-0c0d-4811-9fe5-e560bb3ad87a",
        "body" : "I assume each method is responsible for finding globally unique names for the named parameters? Would anorm complain if you accidentally defined the value of a named parameter twice?",
        "createdAt" : "2021-07-12T09:43:26Z",
        "updatedAt" : "2021-07-12T09:45:20Z",
        "lastEditedBy" : "c83a17a2-0c0d-4811-9fe5-e560bb3ad87a",
        "tags" : [
        ]
      },
      {
        "id" : "3e97f475-6476-45c3-be03-3bf3ead08ca5",
        "parentId" : "3a8363fe-6fb7-4d8b-a401-a9c0db9188b3",
        "authorId" : "940afe62-a033-4e56-b2d3-8de3ca6d6d5c",
        "body" : "Oh yes anorm will complain then! I added comments to clarify this behavior",
        "createdAt" : "2021-07-12T14:44:42Z",
        "updatedAt" : "2021-07-12T14:44:42Z",
        "lastEditedBy" : "940afe62-a033-4e56-b2d3-8de3ca6d6d5c",
        "tags" : [
        ]
      },
      {
        "id" : "d9063e62-21aa-4cda-8da1-3e9f3f1a151d",
        "parentId" : "3a8363fe-6fb7-4d8b-a401-a9c0db9188b3",
        "authorId" : "940afe62-a033-4e56-b2d3-8de3ca6d6d5c",
        "body" : "Correction: anorm won't complain. I made a comment about that, will improve this in the next PR",
        "createdAt" : "2021-07-12T15:06:35Z",
        "updatedAt" : "2021-07-12T15:06:35Z",
        "lastEditedBy" : "940afe62-a033-4e56-b2d3-8de3ca6d6d5c",
        "tags" : [
        ]
      }
    ],
    "commit" : "3bb3cd75cf643750f9d0b821a79f7db16efe37f5",
    "line" : 459,
    "diffHunk" : "@@ -1,1 +457,461 @@      witnessesColumnName: String,\n      parties: Set[Ref.Party],\n  ): (String, List[NamedParameter])\n\n  /** This populates the following part of the query:"
  }
]