[
  {
    "id" : "13fcfa79-85db-4982-b46c-3787c3aebe96",
    "prId" : 8511,
    "prUrl" : "https://github.com/digital-asset/daml/pull/8511",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0cc975c1-04bd-44d6-b907-b2bd41aa5965",
        "parentId" : null,
        "authorId" : "aa9eebab-85b9-401c-893f-9a479fe01cf1",
        "body" : "I guess you needed this nested `Executable` for `insertWitnesses` for being able to abstract over the different types of Anorm statements (`BatchSql` and `SimpleSql` - one used for H2 and one for Postgresql). Is there a penalty for using `BatchSql` instead of `SimpleSql` for PostgreSQL inserts with unnesting?",
        "createdAt" : "2021-01-15T06:29:55Z",
        "updatedAt" : "2021-01-15T08:05:41Z",
        "lastEditedBy" : "aa9eebab-85b9-401c-893f-9a479fe01cf1",
        "tags" : [
        ]
      },
      {
        "id" : "bed0c990-d215-4076-b6b1-9c588d9141df",
        "parentId" : "0cc975c1-04bd-44d6-b907-b2bd41aa5965",
        "authorId" : "d0b8e05d-effe-439e-92c7-7b7f0f1b2f15",
        "body" : "Yes, that's true. BatchSql and SimpleSql have different class hierarchy, so I needed some wrapper here.",
        "createdAt" : "2021-01-15T08:20:59Z",
        "updatedAt" : "2021-01-15T08:20:59Z",
        "lastEditedBy" : "d0b8e05d-effe-439e-92c7-7b7f0f1b2f15",
        "tags" : [
        ]
      }
    ],
    "commit" : "d9df0457c00c0d04f5385efeb6c4c577dbd5d24e",
    "line" : 57,
    "diffHunk" : "@@ -1,1 +32,36 @@  }\n\n  final case class Executables(deleteWitnesses: Option[BatchSql], insertWitnesses: Executable)\n\n  def apply(dbType: DbType): ContractWitnessesTable ="
  },
  {
    "id" : "75bf33ab-6090-4c3e-bbc4-9b87559b13f2",
    "prId" : 8019,
    "prUrl" : "https://github.com/digital-asset/daml/pull/8019",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "99fd40c1-08cb-4016-9b93-5428bff53b54",
        "parentId" : null,
        "authorId" : "181bcece-33df-41af-887d-5d5f51beb543",
        "body" : "We use this pattern a lot. It's a decent pattern, but can we potentially extract it out somewhere?\r\n\r\nMaybe:\r\n\r\n```scala\r\nobject ContractWitnessesTable extends SomeTableType[ContractWitnessesTable](\r\n    h2 = ContractWitnessesTable.H2Database,\r\n    postgresql = ContractWitnessesTable.Postgresql,\r\n) {\r\n  ...\r\n}\r\n```",
        "createdAt" : "2020-11-23T14:57:01Z",
        "updatedAt" : "2020-11-23T19:15:07Z",
        "lastEditedBy" : "181bcece-33df-41af-887d-5d5f51beb543",
        "tags" : [
        ]
      },
      {
        "id" : "6f45f9ac-81b1-447b-a593-b60869eb0e24",
        "parentId" : "99fd40c1-08cb-4016-9b93-5428bff53b54",
        "authorId" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "body" : "I would prefer to kick this down the road. We don't really need it and the index database will likely be completely changed in the coming months.",
        "createdAt" : "2020-12-02T15:09:14Z",
        "updatedAt" : "2020-12-02T15:09:14Z",
        "lastEditedBy" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "tags" : [
        ]
      }
    ],
    "commit" : "f23fbbff77e4c9db4138e2ceb66ccabf40580ed2",
    "line" : 54,
    "diffHunk" : "@@ -1,1 +52,56 @@      case DbType.Postgres => Postgresql\n      case DbType.H2Database => H2Database\n    }\n\n  private object Postgresql extends ContractWitnessesTable {"
  }
]