[
  {
    "id" : "3bbe8bcb-f779-43ad-a902-35c00448291f",
    "prId" : 9421,
    "prUrl" : "https://github.com/digital-asset/daml/pull/9421",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4f0cc94b-288b-449e-80a0-ae24e9102e07",
        "parentId" : null,
        "authorId" : "53efca31-cf56-4f70-be8f-a3714c600eb6",
        "body" : "I am guessing this query didn't work before this correction",
        "createdAt" : "2021-04-15T15:49:38Z",
        "updatedAt" : "2021-04-18T19:22:53Z",
        "lastEditedBy" : "53efca31-cf56-4f70-be8f-a3714c600eb6",
        "tags" : [
        ]
      },
      {
        "id" : "fd230ce0-f940-453f-9f5a-435e941d7fd5",
        "parentId" : "4f0cc94b-288b-449e-80a0-ae24e9102e07",
        "authorId" : "aa9eebab-85b9-401c-893f-9a479fe01cf1",
        "body" : "I would be surprised if it did :) But it was never asserted since all tests were probably running with translation cache disabled.",
        "createdAt" : "2021-04-15T19:32:16Z",
        "updatedAt" : "2021-04-18T19:22:53Z",
        "lastEditedBy" : "aa9eebab-85b9-401c-893f-9a479fe01cf1",
        "tags" : [
        ]
      },
      {
        "id" : "6772179a-84df-4a38-a8c3-5181bbabc28b",
        "parentId" : "4f0cc94b-288b-449e-80a0-ae24e9102e07",
        "authorId" : "ba0b5f2d-78e4-41a5-94a1-d55d6f19f728",
        "body" : "It depends on the ledger. Sandbox and public KV ledgers are lazy wrt creating divulgence events (i.e., they don't add the create argument), as they can rely on the create events always to be visible. So for them the query didn't work.\r\n\r\nFor a PKV ledger and Canton it did work, as they are using divulgence with create arguments.\r\n\r\nOn a code level this shows in differences wrt how the fields here are used: https://github.com/digital-asset/daml/blob/main/ledger/participant-state/src/main/scala/com/daml/ledger/participant/state/v1/Update.scala#L192\r\n\r\n- Sandbox classic: empty list of divulged contracts and None for blinding info (Indexer computes the blinding info)\r\n- KV: empty list of divulged contracts, but pre-computed blinding-info due to dropped fetch nodes\r\n- PKV, Canton, Corda: divulged contracts and pre-computed blinding-info",
        "createdAt" : "2021-04-16T09:13:15Z",
        "updatedAt" : "2021-04-18T19:22:53Z",
        "lastEditedBy" : "ba0b5f2d-78e4-41a5-94a1-d55d6f19f728",
        "tags" : [
        ]
      },
      {
        "id" : "fdd00cb3-4c9e-4eab-9ddc-92e8712785e5",
        "parentId" : "4f0cc94b-288b-449e-80a0-ae24e9102e07",
        "authorId" : "aa9eebab-85b9-401c-893f-9a479fe01cf1",
        "body" : "@meiersi-da Thanks for the background info. I believe @mziolekda was pointing to the SQL not being valid at all, not  functional correctness.",
        "createdAt" : "2021-04-19T09:06:57Z",
        "updatedAt" : "2021-04-19T09:06:57Z",
        "lastEditedBy" : "aa9eebab-85b9-401c-893f-9a479fe01cf1",
        "tags" : [
        ]
      }
    ],
    "commit" : "78e44f704b16b415b3d5c2c5b0c25388f47fea39",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +305,309 @@          LIMIT 1 -- limit here to guide planner wrt expected number of results\n       ),\n       -- no visibility check, as it is used to backfill missing template_id and create_arguments for divulged contracts\n       create_event_unrestricted AS (\n         SELECT contract_id, template_id"
  },
  {
    "id" : "02c520dc-7997-4512-84e2-9a62bda9164f",
    "prId" : 9349,
    "prUrl" : "https://github.com/digital-asset/daml/pull/9349",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0c02cd12-dfd8-48eb-8972-6126e9b7aac8",
        "parentId" : null,
        "authorId" : "eb431011-3221-41ae-bf30-e72dde278004",
        "body" : "```suggestion\r\n  \r\n  private val fullDetailsContractRowParser: RowParser[\r\n```",
        "createdAt" : "2021-04-08T12:25:39Z",
        "updatedAt" : "2021-04-12T07:58:35Z",
        "lastEditedBy" : "eb431011-3221-41ae-bf30-e72dde278004",
        "tags" : [
        ]
      },
      {
        "id" : "067108aa-3ad9-41ed-9765-e470ea855a73",
        "parentId" : "0c02cd12-dfd8-48eb-8972-6126e9b7aac8",
        "authorId" : "aa9eebab-85b9-401c-893f-9a479fe01cf1",
        "body" : "Done",
        "createdAt" : "2021-04-09T08:28:16Z",
        "updatedAt" : "2021-04-12T07:58:35Z",
        "lastEditedBy" : "aa9eebab-85b9-401c-893f-9a479fe01cf1",
        "tags" : [
        ]
      }
    ],
    "commit" : "02141b3195ad8816e692dc2145b10914a59ff4d3",
    "line" : 343,
    "diffHunk" : "@@ -1,1 +369,373 @@    str(\"template_id\")\n\n  private val fullDetailsContractRowParser: RowParser[\n    (Option[String], Set[Party], Option[InputStream], Option[Int], Int, Option[Instant])\n  ] ="
  },
  {
    "id" : "44328fa2-3e87-4d51-b60f-6929c545fc83",
    "prId" : 9349,
    "prUrl" : "https://github.com/digital-asset/daml/pull/9349",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0f64726e-67b8-4318-8b89-12f0095df6f1",
        "parentId" : null,
        "authorId" : "eb431011-3221-41ae-bf30-e72dde278004",
        "body" : "Please add a blank line for faster mental parsing.\r\n```suggestion\r\n  \r\n  private val contractRowParser: RowParser[(String, InputStream, Option[Int])] =\r\n```",
        "createdAt" : "2021-04-08T12:26:09Z",
        "updatedAt" : "2021-04-12T07:58:35Z",
        "lastEditedBy" : "eb431011-3221-41ae-bf30-e72dde278004",
        "tags" : [
        ]
      },
      {
        "id" : "1928fe0c-b0a4-4590-9a27-788f19bfb775",
        "parentId" : "0f64726e-67b8-4318-8b89-12f0095df6f1",
        "authorId" : "aa9eebab-85b9-401c-893f-9a479fe01cf1",
        "body" : "Done",
        "createdAt" : "2021-04-09T08:28:26Z",
        "updatedAt" : "2021-04-12T07:58:35Z",
        "lastEditedBy" : "aa9eebab-85b9-401c-893f-9a479fe01cf1",
        "tags" : [
        ]
      }
    ],
    "commit" : "02141b3195ad8816e692dc2145b10914a59ff4d3",
    "line" : 354,
    "diffHunk" : "@@ -1,1 +380,384 @@    )(anorm.Column.columnToInstant).? map SqlParser.flatten\n\n  private val contractRowParser: RowParser[(String, InputStream, Option[Int])] =\n    str(\"template_id\") ~ binaryStream(\"create_argument\") ~ int(\n      \"create_argument_compression\""
  },
  {
    "id" : "4190b2a0-b49f-42d8-8ddf-f8c7dcbe286f",
    "prId" : 9349,
    "prUrl" : "https://github.com/digital-asset/daml/pull/9349",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ee8bf92f-daf3-4321-83a0-6fd177ad69d4",
        "parentId" : null,
        "authorId" : "53efca31-cf56-4f70-be8f-a3714c600eb6",
        "body" : "set of metrics used by this method is different between `dao` and `appendonly`",
        "createdAt" : "2021-04-08T12:47:35Z",
        "updatedAt" : "2021-04-12T07:58:35Z",
        "lastEditedBy" : "53efca31-cf56-4f70-be8f-a3714c600eb6",
        "tags" : [
        ]
      },
      {
        "id" : "341e0d5d-1383-4f8f-bafd-740e891dc99c",
        "parentId" : "ee8bf92f-daf3-4321-83a0-6fd177ad69d4",
        "authorId" : "aa9eebab-85b9-401c-893f-9a479fe01cf1",
        "body" : "Updated. After our offline discussion, for compatibility reasons, I've reused the lookupActiveContract and lookupContractKey metrics for the new methods as well. To be revisited though",
        "createdAt" : "2021-04-09T08:29:25Z",
        "updatedAt" : "2021-04-12T07:58:35Z",
        "lastEditedBy" : "aa9eebab-85b9-401c-893f-9a479fe01cf1",
        "tags" : [
        ]
      }
    ],
    "commit" : "02141b3195ad8816e692dc2145b10914a59ff4d3",
    "line" : 164,
    "diffHunk" : "@@ -1,1 +148,152 @@\n  /** Lookup of a contract in the case the contract value is not already known */\n  override def lookupActiveContractAndLoadArgument(\n      readers: Set[Party],\n      contractId: ContractId,"
  }
]