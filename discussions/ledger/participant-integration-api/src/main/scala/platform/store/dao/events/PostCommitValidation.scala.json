[
  {
    "id" : "62bc3852-9a51-4647-8321-bd0d1ad09372",
    "prId" : 9501,
    "prUrl" : "https://github.com/digital-asset/daml/pull/9501",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8a2193a2-66e2-4886-826a-697834cc6126",
        "parentId" : null,
        "authorId" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "body" : "Same as above, I'd recommend to just inline this.",
        "createdAt" : "2021-04-27T07:53:36Z",
        "updatedAt" : "2021-04-27T15:15:37Z",
        "lastEditedBy" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "tags" : [
        ]
      }
    ],
    "commit" : "75fdd3e2aee617b8c5e6b0edaa71dd30612260a4",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +123,127 @@        divulged: Set[ContractId],\n    ): Set[ContractId] = {\n      transaction.inputContracts.diff(divulged)\n    }\n"
  },
  {
    "id" : "bbb4f4d0-27bb-4f59-929d-3cbbb72078e3",
    "prId" : 9416,
    "prUrl" : "https://github.com/digital-asset/daml/pull/9416",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b8f242ec-72c9-42c7-ab11-d1d5cdab7843",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "and here",
        "createdAt" : "2021-04-14T16:26:12Z",
        "updatedAt" : "2021-04-14T17:06:00Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "c4142f12-abcd-4e7f-ba33-feeae4e0c116",
        "parentId" : "b8f242ec-72c9-42c7-ab11-d1d5cdab7843",
        "authorId" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "body" : "also here.",
        "createdAt" : "2021-04-14T16:46:58Z",
        "updatedAt" : "2021-04-14T17:06:00Z",
        "lastEditedBy" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "tags" : [
        ]
      },
      {
        "id" : "de24bc9c-416d-404b-a3af-b7400cf4b22e",
        "parentId" : "b8f242ec-72c9-42c7-ab11-d1d5cdab7843",
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "Duplicate of the one above for non-appendonly so same answer.",
        "createdAt" : "2021-04-14T16:52:49Z",
        "updatedAt" : "2021-04-14T17:06:00Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      }
    ],
    "commit" : "fc50efb3b7ec6b716cdacb58e8dcee125fe5291a",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +119,123 @@            node.informeesOfNode.foldLeft(accum)(f)\n          case (accum, (_, _: LFNode.NodeRollback[_])) =>\n            // TODO https://github.com/digital-asset/daml/issues/8020\n            //  Check impact of rollback\n            accum"
  },
  {
    "id" : "7519e33f-4c54-407a-b53e-4bc36d3f952b",
    "prId" : 7941,
    "prUrl" : "https://github.com/digital-asset/daml/pull/7941",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "83782ff5-2cac-4aac-b56e-523fc146c3b4",
        "parentId" : null,
        "authorId" : "181bcece-33df-41af-887d-5d5f51beb543",
        "body" : "I don't like this `Await` here. Can we propagate the future outwards?",
        "createdAt" : "2020-11-16T09:43:11Z",
        "updatedAt" : "2020-11-16T10:21:10Z",
        "lastEditedBy" : "181bcece-33df-41af-887d-5d5f51beb543",
        "tags" : [
        ]
      },
      {
        "id" : "99828979-bd0f-47c5-a116-159207111346",
        "parentId" : "83782ff5-2cac-4aac-b56e-523fc146c3b4",
        "authorId" : "1d70ec7b-8793-4cc6-95c8-fac6f7816dcc",
        "body" : "We probably can but I think it might not be easy and probably it's not worth it:\r\n\r\n1. this change is on the previous DAML on SQL that is now only being maintained so I think it should be quick, small and have the smallest impact possible\r\n2. `PostCommitValidation.validate` was designed as sync but we can only reuse a query behind an async interface (and it doesn't make a lot of sense to create a new one)\r\n3. `Await.result` will block the calling thread, in line with the sync/blocking nature of `PostCommitValidation.validate` so I think it's not so bad after all",
        "createdAt" : "2020-11-16T10:02:02Z",
        "updatedAt" : "2020-11-16T10:21:10Z",
        "lastEditedBy" : "1d70ec7b-8793-4cc6-95c8-fac6f7816dcc",
        "tags" : [
        ]
      },
      {
        "id" : "8774eb29-6b9f-4344-9b1f-fa2ce3b50098",
        "parentId" : "83782ff5-2cac-4aac-b56e-523fc146c3b4",
        "authorId" : "181bcece-33df-41af-887d-5d5f51beb543",
        "body" : "The caller is itself inside a `Future`, so it's blocking the execution context. This can be quite dangerous.\r\n\r\n`PostCommitValidation#validate` is only called in one place (except for tests), and could easily be transformed to return a `Future[Option[RejectionReason]]`.",
        "createdAt" : "2020-11-16T10:40:58Z",
        "updatedAt" : "2020-11-16T10:40:58Z",
        "lastEditedBy" : "181bcece-33df-41af-887d-5d5f51beb543",
        "tags" : [
        ]
      },
      {
        "id" : "c1e2a576-ad2a-4119-9362-b9fa01db44f1",
        "parentId" : "83782ff5-2cac-4aac-b56e-523fc146c3b4",
        "authorId" : "1d70ec7b-8793-4cc6-95c8-fac6f7816dcc",
        "body" : "This is pre-existing though and has not caused problems AFAIK but I'll refactor it, only I'd do that in a separate PR (but right after merging this, so we don't forget). Would that be OK?",
        "createdAt" : "2020-11-16T10:55:15Z",
        "updatedAt" : "2020-11-16T10:55:15Z",
        "lastEditedBy" : "1d70ec7b-8793-4cc6-95c8-fac6f7816dcc",
        "tags" : [
        ]
      },
      {
        "id" : "e34bd4ae-be34-4acd-b9e8-54f548c1b9b1",
        "parentId" : "83782ff5-2cac-4aac-b56e-523fc146c3b4",
        "authorId" : "181bcece-33df-41af-887d-5d5f51beb543",
        "body" : "Sold!",
        "createdAt" : "2020-11-16T10:57:02Z",
        "updatedAt" : "2020-11-16T10:57:02Z",
        "lastEditedBy" : "181bcece-33df-41af-887d-5d5f51beb543",
        "tags" : [
        ]
      },
      {
        "id" : "1968bf75-986f-456b-9368-28bd43ca4fc6",
        "parentId" : "83782ff5-2cac-4aac-b56e-523fc146c3b4",
        "authorId" : "181bcece-33df-41af-887d-5d5f51beb543",
        "body" : "BTW, consider that it hasn't caused problems because up until now, there have been no `Await` calls here. In other words, it has been very fast.",
        "createdAt" : "2020-11-16T10:58:24Z",
        "updatedAt" : "2020-11-16T10:58:24Z",
        "lastEditedBy" : "181bcece-33df-41af-887d-5d5f51beb543",
        "tags" : [
        ]
      },
      {
        "id" : "5346d28b-6143-4ecd-8681-e6d588e14412",
        "parentId" : "83782ff5-2cac-4aac-b56e-523fc146c3b4",
        "authorId" : "1d70ec7b-8793-4cc6-95c8-fac6f7816dcc",
        "body" : "It seems to have been compute-bound so far, yes. OK, that being the case then I actually think it's better to tackle this as part of this PR.",
        "createdAt" : "2020-11-16T11:21:29Z",
        "updatedAt" : "2020-11-16T11:21:29Z",
        "lastEditedBy" : "1d70ec7b-8793-4cc6-95c8-fac6f7816dcc",
        "tags" : [
        ]
      },
      {
        "id" : "82d0bf6d-5c2d-43d6-b7be-77502a48c8a5",
        "parentId" : "83782ff5-2cac-4aac-b56e-523fc146c3b4",
        "authorId" : "1d70ec7b-8793-4cc6-95c8-fac6f7816dcc",
        "body" : "Nah, this too has far-reaching effects, up to the Runner. It'd better be done here but that would inflate this PR too much.",
        "createdAt" : "2020-11-16T11:47:24Z",
        "updatedAt" : "2020-11-16T11:47:25Z",
        "lastEditedBy" : "1d70ec7b-8793-4cc6-95c8-fac6f7816dcc",
        "tags" : [
        ]
      },
      {
        "id" : "5b1ff9d2-d652-4aea-8e4f-1efc8ab2464b",
        "parentId" : "83782ff5-2cac-4aac-b56e-523fc146c3b4",
        "authorId" : "1d70ec7b-8793-4cc6-95c8-fac6f7816dcc",
        "body" : "Created #7972.",
        "createdAt" : "2020-11-16T14:50:36Z",
        "updatedAt" : "2020-11-16T14:50:36Z",
        "lastEditedBy" : "1d70ec7b-8793-4cc6-95c8-fac6f7816dcc",
        "tags" : [
        ]
      }
    ],
    "commit" : "95c4c433a5f4aada404726e1ea0950d65e1694f7",
    "line" : 61,
    "diffHunk" : "@@ -1,1 +136,140 @@\n    private def getPartiesSync(parties: Seq[Party]): List[PartyDetails] =\n      Await.result(getParties.getOrElse(identityGetParties _)(parties), AwaitDuration)\n\n    private def identityGetParties(parties: Seq[Party]): Future[List[PartyDetails]] ="
  }
]