[
  {
    "id" : "b906aaa7-56b4-481d-aa1d-b6faa7a656c4",
    "prId" : 10030,
    "prUrl" : "https://github.com/digital-asset/daml/pull/10030",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "10879211-307b-45f7-8785-fd85bf53b53f",
        "parentId" : null,
        "authorId" : "53efca31-cf56-4f70-be8f-a3714c600eb6",
        "body" : "What is the ultimate plan for methods like this one that is 100% identical between PG and H2. Wouldn't it be better to move it into the common implementation and let it be overridden only when necessary?",
        "createdAt" : "2021-06-17T09:48:30Z",
        "updatedAt" : "2021-06-17T09:48:30Z",
        "lastEditedBy" : "53efca31-cf56-4f70-be8f-a3714c600eb6",
        "tags" : [
        ]
      },
      {
        "id" : "4446b7cf-9dba-4f36-be32-1dbfa96cc4b0",
        "parentId" : "10879211-307b-45f7-8785-fd85bf53b53f",
        "authorId" : "c83a17a2-0c0d-4811-9fe5-e560bb3ad87a",
        "body" : "Note that it's not 100% identical, because `arrayIntersectionWhereClause` is different for PG and H2.",
        "createdAt" : "2021-06-17T10:00:21Z",
        "updatedAt" : "2021-06-17T10:00:31Z",
        "lastEditedBy" : "c83a17a2-0c0d-4811-9fe5-e560bb3ad87a",
        "tags" : [
        ]
      },
      {
        "id" : "a5b473d3-4734-4ac7-a1c1-683514ed794a",
        "parentId" : "10879211-307b-45f7-8785-fd85bf53b53f",
        "authorId" : "53efca31-cf56-4f70-be8f-a3714c600eb6",
        "body" : "right, but that could be solve by making the method abstract in the common implementation",
        "createdAt" : "2021-06-17T10:09:23Z",
        "updatedAt" : "2021-06-17T10:09:23Z",
        "lastEditedBy" : "53efca31-cf56-4f70-be8f-a3714c600eb6",
        "tags" : [
        ]
      },
      {
        "id" : "2b10f995-1e93-4263-bddf-1f26bb67f5bd",
        "parentId" : "10879211-307b-45f7-8785-fd85bf53b53f",
        "authorId" : "940afe62-a033-4e56-b2d3-8de3ca6d6d5c",
        "body" : "yeah there is room for improvement here definitely, let's see how this looks after the first pass of oracle integration, and let's improve from there. template methds in a common-trait works, although is not my favorite, after we have all the code we can figure something nice I am sorue\r\nalso here is another dimension of improvment: squashing lots of event query methods to one, that would ultimately shrink the interface itself as well (as everywhere what implements it)",
        "createdAt" : "2021-06-17T11:13:00Z",
        "updatedAt" : "2021-06-17T11:13:01Z",
        "lastEditedBy" : "940afe62-a033-4e56-b2d3-8de3ca6d6d5c",
        "tags" : [
        ]
      }
    ],
    "commit" : "6a934ea876409f02b6a261c10a4ac52d2557d419",
    "line" : 366,
    "diffHunk" : "@@ -1,1 +364,368 @@  }\n\n  def flatTransactionSingleParty(\n      transactionId: TransactionId,\n      requestingParty: Ref.Party,"
  }
]