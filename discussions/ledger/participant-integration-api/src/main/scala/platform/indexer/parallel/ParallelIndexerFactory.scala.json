[
  {
    "id" : "07d4a73e-4190-4354-b276-09ba906572e4",
    "prId" : 10166,
    "prUrl" : "https://github.com/digital-asset/daml/pull/10166",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d5b42da1-8d57-403b-a333-d41842af6fc7",
        "parentId" : null,
        "authorId" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "body" : "Minor: doesn't `logger.debug` already return `Unit`? If this is caused by a warning feel free to ignore this comment.\r\n```suggestion\r\n                    logger.debug(\"Indexer keep-alive: database connectivity OK\")\r\n```",
        "createdAt" : "2021-07-01T16:06:13Z",
        "updatedAt" : "2021-07-01T16:07:12Z",
        "lastEditedBy" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "tags" : [
        ]
      }
    ],
    "commit" : "4c79b6a33465cd955f2fcddf4978d4543f3f70a7",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +111,115 @@                  if (dbDispatcher.currentHealth() == HealthStatus.healthy) {\n                    logger.debug(\"Indexer keep-alive: database connectivity OK\")\n                    ()\n                  } else {\n                    logger"
  },
  {
    "id" : "25e8f7c8-31a0-4f54-ab0a-a8c73d8d5d38",
    "prId" : 10102,
    "prUrl" : "https://github.com/digital-asset/daml/pull/10102",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "72c9c366-bbb9-41dc-95ed-8738a2f74690",
        "parentId" : null,
        "authorId" : "c4645a69-f802-4b1d-b965-7b5142892664",
        "body" : "small nit, can you rearrange that import so we don't have this change here?",
        "createdAt" : "2021-06-24T12:08:44Z",
        "updatedAt" : "2021-06-24T12:13:45Z",
        "lastEditedBy" : "c4645a69-f802-4b1d-b965-7b5142892664",
        "tags" : [
        ]
      },
      {
        "id" : "334216c4-0837-434b-abcb-58575b688006",
        "parentId" : "72c9c366-bbb9-41dc-95ed-8738a2f74690",
        "authorId" : "181bcece-33df-41af-887d-5d5f51beb543",
        "body" : "I'd rather not argue with IntelliJ.",
        "createdAt" : "2021-06-24T13:01:54Z",
        "updatedAt" : "2021-06-24T13:01:54Z",
        "lastEditedBy" : "181bcece-33df-41af-887d-5d5f51beb543",
        "tags" : [
        ]
      }
    ],
    "commit" : "010eea1dd4cfe456ff9da332e3f7b6ef46e98238",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +21,25 @@import com.daml.platform.store.appendonlydao.events.{CompressionStrategy, LfValueTranslation}\nimport com.daml.platform.store.backend.{DbDto, StorageBackend}\nimport com.daml.platform.store.{DbType, backend}\nimport com.daml.resources\n"
  },
  {
    "id" : "beaceee0-a7f8-4b50-b845-c5a15559edaa",
    "prId" : 9517,
    "prUrl" : "https://github.com/digital-asset/daml/pull/9517",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0109f27a-45f6-44a3-86cd-16cc7d792f18",
        "parentId" : null,
        "authorId" : "c83a17a2-0c0d-4811-9fe5-e560bb3ad87a",
        "body" : "I don't understand this TODO. Do you see an issue with the logging context from `ParallelIndexerFactory.apply` being passed to `dbDispatcher.executeSql`?",
        "createdAt" : "2021-04-29T08:26:09Z",
        "updatedAt" : "2021-04-29T11:31:38Z",
        "lastEditedBy" : "c83a17a2-0c0d-4811-9fe5-e560bb3ad87a",
        "tags" : [
        ]
      },
      {
        "id" : "16369ede-da30-4801-ab6f-4d1ead87c580",
        "parentId" : "0109f27a-45f6-44a3-86cd-16cc7d792f18",
        "authorId" : "940afe62-a033-4e56-b2d3-8de3ca6d6d5c",
        "body" : "well, not, I am happy to remove this entirely if there is none. I was just concerned because executeSql needs this implicit param, so in theory we could do something like setting logging params in the context regarding whatnot before we hit the ingestion",
        "createdAt" : "2021-04-29T09:48:00Z",
        "updatedAt" : "2021-04-29T11:31:38Z",
        "lastEditedBy" : "940afe62-a033-4e56-b2d3-8de3ca6d6d5c",
        "tags" : [
        ]
      }
    ],
    "commit" : "fa3f4c406e78e26c0d4c3815038cfeee9358c7a8",
    "line" : 164,
    "diffHunk" : "@@ -1,1 +103,107 @@          .executeSql(metrics.daml.parallelIndexer.initialization)(\n            storageBackend.initialize\n          ) // TODO here is an implicit LoggingContext injected from the factory apply implicit param, is that good this way? shouldn't we create here something for the purpose?\n          .map(initialized =>\n            ingest(initialized.lastEventSeqId.getOrElse(0L))("
  },
  {
    "id" : "e6e46e91-5e3f-410b-bbf0-a60763f37bf6",
    "prId" : 9517,
    "prUrl" : "https://github.com/digital-asset/daml/pull/9517",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "36509bd8-c146-4dbe-b48f-68ab97aedf6d",
        "parentId" : null,
        "authorId" : "c83a17a2-0c0d-4811-9fe5-e560bb3ad87a",
        "body" : "What would you like to prep? Add some info to the logging context, like the batch size?",
        "createdAt" : "2021-04-29T08:53:26Z",
        "updatedAt" : "2021-04-29T11:31:38Z",
        "lastEditedBy" : "c83a17a2-0c0d-4811-9fe5-e560bb3ad87a",
        "tags" : [
        ]
      },
      {
        "id" : "cfea0df7-28a6-4b14-82e8-125a59166652",
        "parentId" : "36509bd8-c146-4dbe-b48f-68ab97aedf6d",
        "authorId" : "940afe62-a033-4e56-b2d3-8de3ca6d6d5c",
        "body" : "I have no clue :) essentially this is the same what I was explaining above.",
        "createdAt" : "2021-04-29T09:51:51Z",
        "updatedAt" : "2021-04-29T11:31:38Z",
        "lastEditedBy" : "940afe62-a033-4e56-b2d3-8de3ca6d6d5c",
        "tags" : [
        ]
      },
      {
        "id" : "ff9f9671-420d-4529-8728-260bec58252b",
        "parentId" : "36509bd8-c146-4dbe-b48f-68ab97aedf6d",
        "authorId" : "c83a17a2-0c0d-4811-9fe5-e560bb3ad87a",
        "body" : "I would only add values to the logging context if we think they might be useful for troubleshooting issues later. `batch.lastSeqEventId` is the closest to a unique ID of the current batch, which might be helpful for correlating log lines. You could consider adding the following line, but I don't think it's very important:\r\n\r\n```\r\nwithEnrichedLoggingContext(\"lastSeqEventId\" -> batch.lastSeqEventId) { implicit loggingContext =>\r\n```",
        "createdAt" : "2021-04-29T10:15:33Z",
        "updatedAt" : "2021-04-29T11:31:38Z",
        "lastEditedBy" : "c83a17a2-0c0d-4811-9fe5-e560bb3ad87a",
        "tags" : [
        ]
      },
      {
        "id" : "d07b3ae1-2845-4126-b77d-3ed4dcffac0b",
        "parentId" : "36509bd8-c146-4dbe-b48f-68ab97aedf6d",
        "authorId" : "940afe62-a033-4e56-b2d3-8de3ca6d6d5c",
        "body" : "What I had in mind, whether we already had something enriched already, which we were relying on...\r\nThe lastqlEventId can be actually the same for many batches, this is only for events. Maybe use the hex-offset?\r\nI suggest turning this around: let's have needs from logging and then implement it here.\r\nOn log correlation: that is usually quite hard, due to batching. For example to track how a submission is travelling trough a system: for that we would need to do is to be able to correlate batches to all submissions which they relate to :thinking:  ",
        "createdAt" : "2021-04-29T11:43:16Z",
        "updatedAt" : "2021-04-29T11:43:16Z",
        "lastEditedBy" : "940afe62-a033-4e56-b2d3-8de3ca6d6d5c",
        "tags" : [
        ]
      }
    ],
    "commit" : "fa3f4c406e78e26c0d4c3815038cfeee9358c7a8",
    "line" : 276,
    "diffHunk" : "@@ -1,1 +215,219 @@      metrics: Metrics,\n  )(implicit\n      loggingContext: LoggingContext // TODO is that right so? shouldn't we prep something here?\n  ): Batch[DB_BATCH] => Future[Batch[DB_BATCH]] =\n    batch =>"
  }
]