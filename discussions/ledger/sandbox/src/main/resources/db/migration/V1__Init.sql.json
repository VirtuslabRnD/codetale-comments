[
  {
    "id" : "353a39e1-cda8-475f-8c33-5ee1782449eb",
    "prId" : 759,
    "prUrl" : "https://github.com/digital-asset/daml/pull/759",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3db67b17-cda2-472c-aaa2-d295cbf436e9",
        "parentId" : null,
        "authorId" : "e316b0c3-3da9-495c-b0fe-7fb96d032e37",
        "body" : "why the underscores?",
        "createdAt" : "2019-04-29T13:51:34Z",
        "updatedAt" : "2019-04-29T13:54:50Z",
        "lastEditedBy" : "e316b0c3-3da9-495c-b0fe-7fb96d032e37",
        "tags" : [
        ]
      },
      {
        "id" : "cb928df3-b027-4605-8cc4-a0d307f7db91",
        "parentId" : "3db67b17-cda2-472c-aaa2-d295cbf436e9",
        "authorId" : "8e6a9b81-aba7-4206-84ba-06825f79e954",
        "body" : "again, italics",
        "createdAt" : "2019-04-29T13:53:33Z",
        "updatedAt" : "2019-04-29T13:54:50Z",
        "lastEditedBy" : "8e6a9b81-aba7-4206-84ba-06825f79e954",
        "tags" : [
        ]
      }
    ],
    "commit" : "e317dc7466a89dfe7ccb23f8818e28d99b073e50",
    "line" : 85,
    "diffHunk" : "@@ -1,1 +87,91 @@  -- this is denormalized much like `transaction_id` -- see comment above.\n  create_offset  bigint references ledger_entries (ledger_offset)   not null,\n  -- this on the other hand _cannot_ be easily found out by looking into\n  -- `ledger_entries` -- you'd have to traverse from `create_offset` which\n  -- would be prohibitively expensive."
  },
  {
    "id" : "7272c4c1-008c-4a05-b891-6ad102a6f889",
    "prId" : 444,
    "prUrl" : "https://github.com/digital-asset/daml/pull/444",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "52470db1-78dd-467a-8d51-d0af4f21b1d5",
        "parentId" : null,
        "authorId" : "8e6a9b81-aba7-4206-84ba-06825f79e954",
        "body" : "you need the package id too, and it's better to store the name in one column.\r\n\r\n```suggestion\r\nCREATE TABLE contract_keys (\r\n  package_id varchar not null,\r\n  name varchar not null, // using the QualifiedName#toString format\r\n```",
        "createdAt" : "2019-04-15T14:58:52Z",
        "updatedAt" : "2019-04-16T07:25:47Z",
        "lastEditedBy" : "8e6a9b81-aba7-4206-84ba-06825f79e954",
        "tags" : [
        ]
      },
      {
        "id" : "de266564-d530-44f7-b6b3-77b0d8f0c18b",
        "parentId" : "52470db1-78dd-467a-8d51-d0af4f21b1d5",
        "authorId" : "e316b0c3-3da9-495c-b0fe-7fb96d032e37",
        "body" : "is `//` a valid comment format with Postgres? Mostly I have been using `--`",
        "createdAt" : "2019-04-16T05:55:20Z",
        "updatedAt" : "2019-04-16T07:25:47Z",
        "lastEditedBy" : "e316b0c3-3da9-495c-b0fe-7fb96d032e37",
        "tags" : [
        ]
      },
      {
        "id" : "30e1a47f-f7c0-43ad-9b2e-56d329139a0d",
        "parentId" : "52470db1-78dd-467a-8d51-d0af4f21b1d5",
        "authorId" : "c83a17a2-0c0d-4811-9fe5-e560bb3ad87a",
        "body" : "The above was only a suggestion. I have added the comment with a `--` comment format.",
        "createdAt" : "2019-04-16T08:08:06Z",
        "updatedAt" : "2019-04-16T08:08:07Z",
        "lastEditedBy" : "c83a17a2-0c0d-4811-9fe5-e560bb3ad87a",
        "tags" : [
        ]
      },
      {
        "id" : "009c01d8-d01e-46b1-8d64-03ee02d73cd5",
        "parentId" : "52470db1-78dd-467a-8d51-d0af4f21b1d5",
        "authorId" : "e316b0c3-3da9-495c-b0fe-7fb96d032e37",
        "body" : "üëç ",
        "createdAt" : "2019-04-16T08:10:16Z",
        "updatedAt" : "2019-04-16T08:10:16Z",
        "lastEditedBy" : "e316b0c3-3da9-495c-b0fe-7fb96d032e37",
        "tags" : [
        ]
      }
    ],
    "commit" : "2caa7f293aac7972574e45eb2989deaffe86da96",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +88,92 @@-- contract values are binary blobs of unbounded size, the table therefore only stores a hash of the value\n-- and relies for the hash to be collision free\nCREATE TABLE contract_keys (\n  package_id   varchar                           not null,\n  name         varchar                           not null, -- using the QualifiedName#toString format"
  }
]