[
  {
    "id" : "7816cffa-aab6-46ab-8d9d-c39476032239",
    "prId" : 5541,
    "prUrl" : "https://github.com/digital-asset/daml/pull/5541",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f65b748b-394a-40e1-965d-8b10b21cc678",
        "parentId" : null,
        "authorId" : "181bcece-33df-41af-887d-5d5f51beb543",
        "body" : "If this can actually happen, can we use a better error type?",
        "createdAt" : "2020-04-15T12:36:16Z",
        "updatedAt" : "2020-04-17T19:02:12Z",
        "lastEditedBy" : "181bcece-33df-41af-887d-5d5f51beb543",
        "tags" : [
        ]
      },
      {
        "id" : "0c539c69-db5c-4e08-9fc9-ff210cbcfe1a",
        "parentId" : "f65b748b-394a-40e1-965d-8b10b21cc678",
        "authorId" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "body" : "Not worth spending time on this, I had to change it due to the signature change, but `InMemoryLedger` will soon be gone. :crossed_fingers:",
        "createdAt" : "2020-04-15T12:51:36Z",
        "updatedAt" : "2020-04-17T19:02:12Z",
        "lastEditedBy" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "tags" : [
        ]
      }
    ],
    "commit" : "2034352017063fbc2c958c5a086273e66ed0ad47",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +275,279 @@            .getOrElse(\n              id,\n              sys.error(s\"Contract $id not found while looking for maximum ledger time\"))\n            .let\n          acc.map(acc => if (let.isAfter(acc)) let else acc)"
  },
  {
    "id" : "b6eae970-4bdd-439f-afcf-44efc22d878c",
    "prId" : 5541,
    "prUrl" : "https://github.com/digital-asset/daml/pull/5541",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "17e1efe7-c042-45c4-9aa7-c3a54a146292",
        "parentId" : null,
        "authorId" : "eb431011-3221-41ae-bf30-e72dde278004",
        "body" : "You could do the following:\r\n```\r\nimport Ordering.Implicits._\r\nlet.max(acc)\r\n```",
        "createdAt" : "2020-04-16T07:23:16Z",
        "updatedAt" : "2020-04-17T19:02:12Z",
        "lastEditedBy" : "eb431011-3221-41ae-bf30-e72dde278004",
        "tags" : [
        ]
      },
      {
        "id" : "d29ed1ba-6882-472d-87a6-59e3e3e8f882",
        "parentId" : "17e1efe7-c042-45c4-9aa7-c3a54a146292",
        "authorId" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "body" : "`InMemoryLedger` is going away soon, I'm satisfied with this, but thanks for raising it.",
        "createdAt" : "2020-04-16T09:00:31Z",
        "updatedAt" : "2020-04-17T19:02:12Z",
        "lastEditedBy" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "tags" : [
        ]
      },
      {
        "id" : "9ddc68dd-294f-482d-a36a-6a9dfeab3e8b",
        "parentId" : "17e1efe7-c042-45c4-9aa7-c3a54a146292",
        "authorId" : "eb431011-3221-41ae-bf30-e72dde278004",
        "body" : "Yeah, you're right 👍 ",
        "createdAt" : "2020-04-16T09:36:30Z",
        "updatedAt" : "2020-04-17T19:02:12Z",
        "lastEditedBy" : "eb431011-3221-41ae-bf30-e72dde278004",
        "tags" : [
        ]
      }
    ],
    "commit" : "2034352017063fbc2c958c5a086273e66ed0ad47",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +277,281 @@              sys.error(s\"Contract $id not found while looking for maximum ledger time\"))\n            .let\n          acc.map(acc => if (let.isAfter(acc)) let else acc)\n        })\n      }))"
  },
  {
    "id" : "3013c979-e8de-4d3c-91ae-5b0145d9b174",
    "prId" : 5100,
    "prUrl" : "https://github.com/digital-asset/daml/pull/5100",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7bcbad80-a611-4cb3-aa5b-f2f7263dd4e4",
        "parentId" : null,
        "authorId" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "body" : "Wouldn't it be enough to synchronize on `acs` only?",
        "createdAt" : "2020-03-25T11:25:22Z",
        "updatedAt" : "2020-03-25T11:28:29Z",
        "lastEditedBy" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "tags" : [
        ]
      },
      {
        "id" : "ad8013c2-7b82-41df-b3e0-1ab2daafe8bc",
        "parentId" : "7bcbad80-a611-4cb3-aa5b-f2f7263dd4e4",
        "authorId" : "eb431011-3221-41ae-bf30-e72dde278004",
        "body" : "This class goes away soon and this just follows the same pattern used in the other methods.",
        "createdAt" : "2020-03-25T11:45:44Z",
        "updatedAt" : "2020-03-25T11:45:44Z",
        "lastEditedBy" : "eb431011-3221-41ae-bf30-e72dde278004",
        "tags" : [
        ]
      }
    ],
    "commit" : "d421ae1a437d89063df1c3e40078f52885762eaf",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +172,176 @@\n  override def lookupMaximumLedgerTime(contractIds: Set[AbsoluteContractId]): Future[Instant] =\n    Future.successful(this.synchronized {\n      contractIds.foldLeft[Instant](Instant.EPOCH)((acc, id) => {\n        val let = acs.activeContracts"
  },
  {
    "id" : "1367d5f5-14a9-4648-b4e2-30f365d56367",
    "prId" : 5100,
    "prUrl" : "https://github.com/digital-asset/daml/pull/5100",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5c98a7b2-1807-46ea-a0f5-32682422cef8",
        "parentId" : null,
        "authorId" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "body" : "What is 5b?",
        "createdAt" : "2020-03-25T11:25:44Z",
        "updatedAt" : "2020-03-25T11:28:29Z",
        "lastEditedBy" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "tags" : [
        ]
      }
    ],
    "commit" : "d421ae1a437d89063df1c3e40078f52885762eaf",
    "line" : 62,
    "diffHunk" : "@@ -1,1 +213,217 @@          val (transactionForIndex, disclosureForIndex, globalDivulgence) =\n            Ledger.convertToCommittedTransaction(transactionId, transaction)\n          // 5b. modify the ActiveContracts, while checking that we do not have double\n          // spends or timing issues\n          val acsRes = acs.addTransaction("
  },
  {
    "id" : "634deaec-46b4-45bc-98aa-fc18556704f4",
    "prId" : 3744,
    "prUrl" : "https://github.com/digital-asset/daml/pull/3744",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f0a1b4b1-8eb4-4eef-afbb-d4f77cc2cfc4",
        "parentId" : null,
        "authorId" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "body" : "Do you think it would be possible to reduce the scope of the lock, maybe to something private?",
        "createdAt" : "2019-12-05T11:05:18Z",
        "updatedAt" : "2019-12-05T15:56:33Z",
        "lastEditedBy" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "tags" : [
        ]
      },
      {
        "id" : "f50ff135-1937-4097-9c19-6ab79eb03439",
        "parentId" : "f0a1b4b1-8eb4-4eef-afbb-d4f77cc2cfc4",
        "authorId" : "eb431011-3221-41ae-bf30-e72dde278004",
        "body" : "Maybe. I wouldn't make this change in this PR either way though.",
        "createdAt" : "2019-12-05T12:12:09Z",
        "updatedAt" : "2019-12-05T15:56:33Z",
        "lastEditedBy" : "eb431011-3221-41ae-bf30-e72dde278004",
        "tags" : [
        ]
      }
    ],
    "commit" : "d8204b7c377ce994002fb11ce1227c245747b3d0",
    "line" : 51,
    "diffHunk" : "@@ -1,1 +264,268 @@      party: Party,\n      displayName: Option[String]): Future[SubmissionResult] =\n    Future.successful(this.synchronized[SubmissionResult] {\n      val ids = acs.parties.keySet\n      if (ids.contains(party)) {"
  },
  {
    "id" : "89d7bb62-3544-4065-8384-115dff95431e",
    "prId" : 3553,
    "prUrl" : "https://github.com/digital-asset/daml/pull/3553",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b6ceeb72-c9ff-46d7-9e69-5111a2ada192",
        "parentId" : null,
        "authorId" : "eb431011-3221-41ae-bf30-e72dde278004",
        "body" : "This needs to be `synchronized`, because of access to `var ledgerConfiguration`. See `publishTransaction` or `publishHeartbeat`.",
        "createdAt" : "2019-11-26T20:52:58Z",
        "updatedAt" : "2019-11-27T14:09:02Z",
        "lastEditedBy" : "eb431011-3221-41ae-bf30-e72dde278004",
        "tags" : [
        ]
      },
      {
        "id" : "e8d76971-5532-45e2-80d2-0b51b25a1c4a",
        "parentId" : "b6ceeb72-c9ff-46d7-9e69-5111a2ada192",
        "authorId" : null,
        "body" : "oops, fixing..",
        "createdAt" : "2019-11-27T09:30:41Z",
        "updatedAt" : "2019-11-27T14:09:02Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      }
    ],
    "commit" : "04d3118b43225ee033b4c9bba93102cdc650df6a",
    "line" : 140,
    "diffHunk" : "@@ -1,1 +315,319 @@      submissionId: String,\n      config: Configuration): Future[SubmissionResult] =\n    Future.successful {\n      this.synchronized {\n        ledgerConfiguration match {"
  },
  {
    "id" : "4e122590-f86a-45ec-b7af-1eaa5ee22519",
    "prId" : 1818,
    "prUrl" : "https://github.com/digital-asset/daml/pull/1818",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e33cb409-ea44-4c39-ac43-4a7c4c7509e5",
        "parentId" : null,
        "authorId" : "c83a17a2-0c0d-4811-9fe5-e560bb3ad87a",
        "body" : "@gaboraranyossy-da @gerolf-da Opinions? In practice, the ownership of the package store is \"moved\" from the sandbox initialization part (scenario loading) to the `InMemoryLedger` instance.",
        "createdAt" : "2019-06-28T08:42:00Z",
        "updatedAt" : "2019-07-02T12:24:58Z",
        "lastEditedBy" : "c83a17a2-0c0d-4811-9fe5-e560bb3ad87a",
        "tags" : [
        ]
      },
      {
        "id" : "6b2f5525-60b2-4848-9397-c15631b670a3",
        "parentId" : "e33cb409-ea44-4c39-ac43-4a7c4c7509e5",
        "authorId" : "e316b0c3-3da9-495c-b0fe-7fb96d032e37",
        "body" : "It's not really a clone, just a copied reference. I don't see why we would need it.",
        "createdAt" : "2019-06-28T09:10:14Z",
        "updatedAt" : "2019-07-02T12:24:58Z",
        "lastEditedBy" : "e316b0c3-3da9-495c-b0fe-7fb96d032e37",
        "tags" : [
        ]
      },
      {
        "id" : "a5cddd50-98c9-4613-b990-b7e158c6bbfe",
        "parentId" : "e33cb409-ea44-4c39-ac43-4a7c4c7509e5",
        "authorId" : "c83a17a2-0c0d-4811-9fe5-e560bb3ad87a",
        "body" : "Yes, this is just a copied reference. I was wondering whether we need a clone instead, given that the reference points to mutable data.",
        "createdAt" : "2019-07-02T12:24:02Z",
        "updatedAt" : "2019-07-02T12:24:58Z",
        "lastEditedBy" : "c83a17a2-0c0d-4811-9fe5-e560bb3ad87a",
        "tags" : [
        ]
      },
      {
        "id" : "b780eb36-b28d-4add-b70b-898cf4863696",
        "parentId" : "e33cb409-ea44-4c39-ac43-4a7c4c7509e5",
        "authorId" : "e316b0c3-3da9-495c-b0fe-7fb96d032e37",
        "body" : "we are just reading here, aren't we? In that case I'd define a pure read-concerned interface for this purpose and have it passed as a dependency instead of the whole package store. ",
        "createdAt" : "2019-07-02T12:31:04Z",
        "updatedAt" : "2019-07-02T12:31:04Z",
        "lastEditedBy" : "e316b0c3-3da9-495c-b0fe-7fb96d032e37",
        "tags" : [
        ]
      },
      {
        "id" : "9173482a-c355-48ac-97cc-ef9d4840e894",
        "parentId" : "e33cb409-ea44-4c39-ac43-4a7c4c7509e5",
        "authorId" : "c83a17a2-0c0d-4811-9fe5-e560bb3ad87a",
        "body" : "New packages can be added at run time through the new admin API, see https://github.com/digital-asset/daml/pull/1818/files#diff-f0fa0fae9e9e5750f0db679f20742a95R263",
        "createdAt" : "2019-07-02T12:33:41Z",
        "updatedAt" : "2019-07-02T12:33:41Z",
        "lastEditedBy" : "c83a17a2-0c0d-4811-9fe5-e560bb3ad87a",
        "tags" : [
        ]
      },
      {
        "id" : "20974463-f41f-407d-a839-3f2f8cb369f9",
        "parentId" : "e33cb409-ea44-4c39-ac43-4a7c4c7509e5",
        "authorId" : "e316b0c3-3da9-495c-b0fe-7fb96d032e37",
        "body" : "oh, right. Are we mutating the packages somewhere else too?",
        "createdAt" : "2019-07-02T13:05:51Z",
        "updatedAt" : "2019-07-02T13:05:52Z",
        "lastEditedBy" : "e316b0c3-3da9-495c-b0fe-7fb96d032e37",
        "tags" : [
        ]
      },
      {
        "id" : "75cebbcb-5365-4b21-8e93-d911562a5dab",
        "parentId" : "e33cb409-ea44-4c39-ac43-4a7c4c7509e5",
        "authorId" : "c83a17a2-0c0d-4811-9fe5-e560bb3ad87a",
        "body" : "No, the package store is initialized as part of the scenario loading, and after that passed to the ledger. It should not be modified from the outside.",
        "createdAt" : "2019-07-02T13:10:43Z",
        "updatedAt" : "2019-07-02T13:10:43Z",
        "lastEditedBy" : "c83a17a2-0c0d-4811-9fe5-e560bb3ad87a",
        "tags" : [
        ]
      }
    ],
    "commit" : "bae23a0a96200d0ece436a646cceb68a50511f37",
    "line" : 52,
    "diffHunk" : "@@ -1,1 +71,75 @@\n  // TODO(RC): Do we need a clone here? The package store contains mutable state.\n  private val packages = packages0\n\n  override def ledgerEntries(offset: Option[Long]): Source[(Long, LedgerEntry), NotUsed] ="
  }
]