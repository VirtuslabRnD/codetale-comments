[
  {
    "id" : "3010207d-dd0b-4797-9da0-8ac6a282c97c",
    "prId" : 959,
    "prUrl" : "https://github.com/digital-asset/daml/pull/959",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1a576a78-abb9-435f-8af6-664469f3793a",
        "parentId" : null,
        "authorId" : "c83a17a2-0c0d-4811-9fe5-e560bb3ad87a",
        "body" : "@gaboraranyossy-da Persistence queue now stores PersistenceEntry instead of LedgerEntry, see comment.",
        "createdAt" : "2019-05-07T06:35:15Z",
        "updatedAt" : "2019-05-15T16:27:45Z",
        "lastEditedBy" : "c83a17a2-0c0d-4811-9fe5-e560bb3ad87a",
        "tags" : [
        ]
      }
    ],
    "commit" : "e4dc5b75fb95575adb8e21bb2ae04bcccdc97acf",
    "line" : 48,
    "diffHunk" : "@@ -1,1 +53,57 @@  * The SqlLedger persistence queue Transaction elements are therefore enriched with blinding info.\n  */\nsealed abstract class PersistenceEntry extends Product with Serializable\n\nobject PersistenceEntry {"
  },
  {
    "id" : "2cc1d474-e1e4-496d-957f-92eef09129ce",
    "prId" : 444,
    "prUrl" : "https://github.com/digital-asset/daml/pull/444",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a06f4246-4c3f-4073-8163-9d1ffa38d643",
        "parentId" : null,
        "authorId" : "c83a17a2-0c0d-4811-9fe5-e560bb3ad87a",
        "body" : "Is it ok that the contract key is read in its own SQL transaction? Doesn't it have to be read together with other `lookupKey` or `lookupContract` queries from some consistent snapshot?",
        "createdAt" : "2019-04-12T13:18:13Z",
        "updatedAt" : "2019-04-16T07:25:47Z",
        "lastEditedBy" : "c83a17a2-0c0d-4811-9fe5-e560bb3ad87a",
        "tags" : [
        ]
      },
      {
        "id" : "d650fceb-ae5a-4389-a447-ffc8373ecc9a",
        "parentId" : "a06f4246-4c3f-4073-8163-9d1ffa38d643",
        "authorId" : "8e6a9b81-aba7-4206-84ba-06825f79e954",
        "body" : "yes, it is, see comment in https://github.com/digital-asset/daml/blob/e83c21ae11e939abc0c12a08887381b888df376a/ledger/backend-api/src/main/scala/com/digitalasset/ledger/backend/api/v1/SubmissionHandle.scala#L56",
        "createdAt" : "2019-04-15T15:01:29Z",
        "updatedAt" : "2019-04-16T07:25:47Z",
        "lastEditedBy" : "8e6a9b81-aba7-4206-84ba-06825f79e954",
        "tags" : [
        ]
      }
    ],
    "commit" : "2caa7f293aac7972574e45eb2989deaffe86da96",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +84,88 @@    * @return the optional AbsoluteContractId\n    */\n  def lookupKey(key: Node.GlobalKey): Future[Option[AbsoluteContractId]]\n\n  /**"
  }
]