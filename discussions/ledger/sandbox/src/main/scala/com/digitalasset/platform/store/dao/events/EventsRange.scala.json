[
  {
    "id" : "8160f808-28ce-4c12-8762-b056b4fd06b7",
    "prId" : 6372,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6372",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "473f36f3-3641-4604-b508-c5a9b7dfe416",
        "parentId" : null,
        "authorId" : "eb431011-3221-41ae-bf30-e72dde278004",
        "body" : "I'm wondering whether the queries for lower bound and upper bound could be combined into a single query to avoid a roundtrip?\r\nThis doesn't have a big influence when `startExclusive` and `endInclusive` are far apart, but once the client reaches the ledger head it can be quite an overhead.",
        "createdAt" : "2020-07-07T08:04:00Z",
        "updatedAt" : "2020-07-07T20:49:51Z",
        "lastEditedBy" : "eb431011-3221-41ae-bf30-e72dde278004",
        "tags" : [
        ]
      },
      {
        "id" : "5bec316a-226c-4895-8824-29479b27fd08",
        "parentId" : "473f36f3-3641-4604-b508-c5a9b7dfe416",
        "authorId" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "body" : "https://github.com/digital-asset/daml/pull/6372#discussion_r446213480",
        "createdAt" : "2020-07-07T09:17:54Z",
        "updatedAt" : "2020-07-07T20:49:51Z",
        "lastEditedBy" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "tags" : [
        ]
      },
      {
        "id" : "390e04de-6925-4ded-aeb8-4e69062a0770",
        "parentId" : "473f36f3-3641-4604-b508-c5a9b7dfe416",
        "authorId" : "eb431011-3221-41ae-bf30-e72dde278004",
        "body" : "I see. Thank you.",
        "createdAt" : "2020-07-07T09:40:34Z",
        "updatedAt" : "2020-07-07T20:49:51Z",
        "lastEditedBy" : "eb431011-3221-41ae-bf30-e72dde278004",
        "tags" : [
        ]
      }
    ],
    "commit" : "a4ac22ba1dbfc5a1f114a75812abec7b87d0eb34",
    "line" : 39,
    "diffHunk" : "@@ -1,1 +37,41 @@    EmptyEventSeqIdRange.copy(endInclusive = readUpperBound(endInclusive)(connection))\n\n  private def readLowerBound(startExclusive: Offset)(connection: java.sql.Connection): Long =\n    if (startExclusive == Offset.beforeBegin) {\n      EmptyEventSeqIdRange.startExclusive"
  }
]