[
  {
    "id" : "382d18c5-e73e-4f04-88aa-aeaf72a1887f",
    "prId" : 6690,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6690",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5f5d8f20-4caf-44ab-a1da-e9a530087169",
        "parentId" : null,
        "authorId" : "181bcece-33df-41af-887d-5d5f51beb543",
        "body" : "Ah, there it is. I was wondering how to do this all in one place.",
        "createdAt" : "2020-07-10T13:07:58Z",
        "updatedAt" : "2020-07-13T08:46:42Z",
        "lastEditedBy" : "181bcece-33df-41af-887d-5d5f51beb543",
        "tags" : [
        ]
      }
    ],
    "commit" : "9d4af266bf7e56ca7c32b63484d5d1b7bf433566",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +37,41 @@      metrics.graphite.GraphiteReporter\n        .forRegistry(registry)\n        .prefixedWith(prefix.orNull)\n        .build(new metrics.graphite.Graphite(address))\n  }"
  },
  {
    "id" : "65bc9ec5-4870-46c8-a53f-2c54fa94537a",
    "prId" : 6690,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6690",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4fe2af08-6b9b-4dfa-9082-57d96a4802b3",
        "parentId" : null,
        "authorId" : "181bcece-33df-41af-887d-5d5f51beb543",
        "body" : "Can you add a `case _` that throws a reasonable exception, like in the `readLegacy` function below?",
        "createdAt" : "2020-07-10T13:11:40Z",
        "updatedAt" : "2020-07-13T08:46:42Z",
        "lastEditedBy" : "181bcece-33df-41af-887d-5d5f51beb543",
        "tags" : [
        ]
      }
    ],
    "commit" : "9d4af266bf7e56ca7c32b63484d5d1b7bf433566",
    "line" : 68,
    "diffHunk" : "@@ -1,1 +67,71 @@          throw new InvalidConfigException(\n            \"\"\"Must be one of \"console\", \"csv:///PATH\", or \"graphite://HOST[:PORT][/METRIC_PREFIX]\".\"\"\")\n      }\n    }\n  }"
  },
  {
    "id" : "1b5e7b9e-0924-4b37-8702-ad4db8809ace",
    "prId" : 6690,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6690",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3d0d44a7-07b3-4243-bd17-6728998fe086",
        "parentId" : null,
        "authorId" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "body" : "```suggestion\r\n  final class Graphite(address: InetSocketAddress, prefix: Option[String] = None)\r\n```",
        "createdAt" : "2020-07-10T14:15:12Z",
        "updatedAt" : "2020-07-13T08:46:42Z",
        "lastEditedBy" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "tags" : [
        ]
      }
    ],
    "commit" : "9d4af266bf7e56ca7c32b63484d5d1b7bf433566",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +32,36 @@  }\n\n  final case class Graphite(address: InetSocketAddress, prefix: Option[String] = None)\n      extends MetricsReporter {\n    override def register(registry: MetricRegistry): ScheduledReporter ="
  },
  {
    "id" : "76668904-b82d-42b2-bb6e-3b1d029e5bea",
    "prId" : 6690,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6690",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6387c15b-fdca-4afc-bd9a-6002f7597a88",
        "parentId" : null,
        "authorId" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "body" : "```suggestion\r\n          new Graphite(address, metricPrefix)\r\n```",
        "createdAt" : "2020-07-10T14:16:40Z",
        "updatedAt" : "2020-07-13T08:46:42Z",
        "lastEditedBy" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "tags" : [
        ]
      }
    ],
    "commit" : "9d4af266bf7e56ca7c32b63484d5d1b7bf433566",
    "line" : 64,
    "diffHunk" : "@@ -1,1 +63,67 @@          val address = new InetSocketAddress(uri.getHost, port)\n          val metricPrefix = Some(uri.getPath.stripPrefix(\"/\")).filter(_.nonEmpty)\n          Graphite(address, metricPrefix)\n        case _ =>\n          throw new InvalidConfigException("
  }
]