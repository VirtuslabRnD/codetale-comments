[
  {
    "id" : "c25b975e-f2a3-42ef-8ca6-422eefad3712",
    "prId" : 3359,
    "prUrl" : "https://github.com/digital-asset/daml/pull/3359",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6bbd94ba-2af9-4ba3-ac2c-a5c869f82f4e",
        "parentId" : null,
        "authorId" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "body" : "Great, thanks, very good catch!\r\n\r\nNo pun intended. :smile: ",
        "createdAt" : "2019-11-07T12:43:10Z",
        "updatedAt" : "2019-11-07T14:26:30Z",
        "lastEditedBy" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "tags" : [
        ]
      }
    ],
    "commit" : "57b56f34c1c450872c0e56b48c140c1fe8a5ccab",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +60,64 @@      }\n\n      // decouple metrics updating from sql execution above\n      try {\n        val execNanos = System.nanoTime() - startExec"
  },
  {
    "id" : "0381b9fe-e406-47c7-b233-9b93faebb1cb",
    "prId" : 3359,
    "prUrl" : "https://github.com/digital-asset/daml/pull/3359",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4a90fe59-aba6-4bfe-a9db-eec6585ee67f",
        "parentId" : null,
        "authorId" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "body" : "I may be wrong here, but if `promise` is immutable then you'll have to return it from this expression and then call `.future` on that in the end.",
        "createdAt" : "2019-11-07T12:44:44Z",
        "updatedAt" : "2019-11-07T14:26:30Z",
        "lastEditedBy" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "tags" : [
        ]
      },
      {
        "id" : "a78e7f3a-0091-4271-a959-71011cfe776a",
        "parentId" : "4a90fe59-aba6-4bfe-a9db-eec6585ee67f",
        "authorId" : "a19260b0-5e05-4d6e-8307-335e8dc80e5b",
        "body" : "I believe promises are necessarily mutable; you return the `promise.future` immediately and then can complete it later.",
        "createdAt" : "2019-11-07T12:47:10Z",
        "updatedAt" : "2019-11-07T14:26:30Z",
        "lastEditedBy" : "a19260b0-5e05-4d6e-8307-335e8dc80e5b",
        "tags" : [
        ]
      },
      {
        "id" : "dd4041fe-28c3-497b-aa32-ee1123f724ef",
        "parentId" : "4a90fe59-aba6-4bfe-a9db-eec6585ee67f",
        "authorId" : "a19260b0-5e05-4d6e-8307-335e8dc80e5b",
        "body" : "According to [the Scala documentation](https://docs.scala-lang.org/overviews/core/futures.html#promises), it's mutable by design.",
        "createdAt" : "2019-11-07T12:48:23Z",
        "updatedAt" : "2019-11-07T14:26:30Z",
        "lastEditedBy" : "a19260b0-5e05-4d6e-8307-335e8dc80e5b",
        "tags" : [
        ]
      },
      {
        "id" : "3008a6fc-55fe-44c7-a57b-4e3ad08087c3",
        "parentId" : "4a90fe59-aba6-4bfe-a9db-eec6585ee67f",
        "authorId" : "d7d10058-0c3f-4068-af8a-3d7024c74f76",
        "body" : "Indeed",
        "createdAt" : "2019-11-07T14:25:56Z",
        "updatedAt" : "2019-11-07T14:26:30Z",
        "lastEditedBy" : "d7d10058-0c3f-4068-af8a-3d7024c74f76",
        "tags" : [
        ]
      }
    ],
    "commit" : "57b56f34c1c450872c0e56b48c140c1fe8a5ccab",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +48,52 @@      try {\n        // Actual execution\n        promise.success(block)\n      } catch {\n        case NonFatal(e) =>"
  }
]