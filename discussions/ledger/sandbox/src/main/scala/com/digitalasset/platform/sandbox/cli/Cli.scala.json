[
  {
    "id" : "d890667c-8e3c-4bd2-99a4-a9e35c39466a",
    "prId" : 6206,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6206",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "71d8238a-724c-4095-863b-ce9a766a1410",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "I’ve removed the `configured with TimeService through gRPC` part since I don’t think that’s helpful in any way. Happy to add it back if you disagree.",
        "createdAt" : "2020-06-03T09:18:32Z",
        "updatedAt" : "2020-06-03T09:18:33Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      }
    ],
    "commit" : "c02e0249057a81d7c2101b2bb25d7fe69a67a33a",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +78,82 @@          setTimeProviderType(c, TimeProviderType.Static)\n        }\n        .text(\"Use static time. When not specified, wall-clock-time is used.\")\n\n      opt[Unit]('w', \"wall-clock-time\")"
  },
  {
    "id" : "5dfcbefe-71e0-458c-b2b5-db3634bc55f9",
    "prId" : 6093,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6093",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b44dedc7-1af8-4b91-9927-bdd3a87c2b44",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "This is a breaking change. Can we support both and only emit a warning for the old syntax?",
        "createdAt" : "2020-05-25T16:25:32Z",
        "updatedAt" : "2020-05-27T08:19:55Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "70ae824d-e243-4663-baa7-1fa95668b9ef",
        "parentId" : "b44dedc7-1af8-4b91-9927-bdd3a87c2b44",
        "authorId" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "body" : "Yes, fixed that. What's our process for deprecating command-line parameters?",
        "createdAt" : "2020-05-26T17:03:14Z",
        "updatedAt" : "2020-05-27T08:19:55Z",
        "lastEditedBy" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "tags" : [
        ]
      }
    ],
    "commit" : "aacd77ca8257366b04976b8ce94ed987f489d655",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +138,142 @@              Some(c.copy(clientAuth = clientAuth)))))\n\n      opt[Int](\"max-inbound-message-size\")\n        .action((x, c) => c.copy(maxInboundMessageSize = x))\n        .text("
  },
  {
    "id" : "2be4de71-bcdb-4591-98ed-3405acb53b65",
    "prId" : 6093,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6093",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6064407f-2a9e-46d4-993a-56221187ed6e",
        "parentId" : null,
        "authorId" : "eb431011-3221-41ae-bf30-e72dde278004",
        "body" : "Please only add a deprecation message to the help text and introduce a new option. This is to avoid breaking existing scripts.",
        "createdAt" : "2020-05-25T16:33:25Z",
        "updatedAt" : "2020-05-27T08:19:55Z",
        "lastEditedBy" : "eb431011-3221-41ae-bf30-e72dde278004",
        "tags" : [
        ]
      },
      {
        "id" : "9f734ea4-272e-40b5-b781-86bb1724de67",
        "parentId" : "6064407f-2a9e-46d4-993a-56221187ed6e",
        "authorId" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "body" : "Done.",
        "createdAt" : "2020-05-26T17:03:24Z",
        "updatedAt" : "2020-05-27T08:19:55Z",
        "lastEditedBy" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "tags" : [
        ]
      }
    ],
    "commit" : "aacd77ca8257366b04976b8ce94ed987f489d655",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +138,142 @@              Some(c.copy(clientAuth = clientAuth)))))\n\n      opt[Int](\"max-inbound-message-size\")\n        .action((x, c) => c.copy(maxInboundMessageSize = x))\n        .text("
  },
  {
    "id" : "bb9e48b2-3f34-4106-b80e-76a8d661f78d",
    "prId" : 4965,
    "prUrl" : "https://github.com/digital-asset/daml/pull/4965",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "77faaea5-e998-4bf0-9ac5-407ae795364c",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "I don’t care that much about the CLI format here but this was the most reasonable option that I came up with.",
        "createdAt" : "2020-03-12T12:41:33Z",
        "updatedAt" : "2020-03-12T13:12:08Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      }
    ],
    "commit" : "59b7325303e5e2cf6701f6caa0c71402f7460bff",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +37,41 @@  }\n\n  private implicit val clientAuthRead: Read[ClientAuth] = Read.reads {\n    case \"none\" => ClientAuth.NONE\n    case \"optional\" => ClientAuth.OPTIONAL"
  },
  {
    "id" : "634516a6-de1a-4b3e-8d97-a6cf39a95924",
    "prId" : 4930,
    "prUrl" : "https://github.com/digital-asset/daml/pull/4930",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6fa907d5-1dfe-41ae-9d36-0c89aff00451",
        "parentId" : null,
        "authorId" : "181bcece-33df-41af-887d-5d5f51beb543",
        "body" : "Hmmm… we _are_ changing the CLI switches, so I do think a changelog entry is in order now. People might be using them.",
        "createdAt" : "2020-03-11T11:10:37Z",
        "updatedAt" : "2020-03-11T12:32:00Z",
        "lastEditedBy" : "181bcece-33df-41af-887d-5d5f51beb543",
        "tags" : [
        ]
      }
    ],
    "commit" : "b11efa7bbae73685e0ab13521cd59b4d6f96b5db",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +184,188 @@                .valueOr(err => sys.error(s\"Failed to create RSA256 verifier: $err\"))))))\n\n      opt[String](\"auth-jwt-es256-crt\")\n        .optional()\n        .validate(v =>"
  },
  {
    "id" : "677748a6-85ff-49bb-89b9-c1a231f3d6e6",
    "prId" : 3526,
    "prUrl" : "https://github.com/digital-asset/daml/pull/3526",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2260839a-3c63-4534-b967-fac4239d8619",
        "parentId" : null,
        "authorId" : "eb431011-3221-41ae-bf30-e72dde278004",
        "body" : "There is a bit of inconsistency here:\r\n* the CLI option uses `crt` for certificate\r\n* The validation error uses `Public key file`\r\n* And the long text says X509 certificate file\r\n\r\nShould this file contain the certificate or the public key?\r\nI don't know what would be more common to \"encounter\" in the wild.",
        "createdAt" : "2019-11-19T16:16:38Z",
        "updatedAt" : "2019-11-25T14:55:04Z",
        "lastEditedBy" : "eb431011-3221-41ae-bf30-e72dde278004",
        "tags" : [
        ]
      },
      {
        "id" : "95dcdf13-0263-47ac-9ff2-99cca4e73d42",
        "parentId" : "2260839a-3c63-4534-b967-fac4239d8619",
        "authorId" : "c83a17a2-0c0d-4811-9fe5-e560bb3ad87a",
        "body" : "I have renamed the method name and some strings to be more consistent.\r\n\r\nAs to which one is more common. I have no actual experience with this, but here is what the internet has told me:\r\n\r\nThere are several common formats that include RSA key information:\r\n- [PKCS#1](https://en.wikipedia.org/wiki/PKCS_1): contains public key information\r\n- [X.509](https://en.wikipedia.org/wiki/X.509): contains public key information and also additional info like issuer or a signature of the public key\r\n- [PKCS#8](https://en.wikipedia.org/wiki/PKCS_8): contains private key information\r\n\r\nThere are two ways to serialize the above:\r\n- [DER](https://en.wikipedia.org/wiki/X.690#DER_encoding), a binary format\r\n- [PEM](https://en.wikipedia.org/wiki/Privacy-Enhanced_Mail), a text format. Basically a base64 encoded version of a DER file, with a header of the form:\r\n  - `----BEGIN CERTIFICATE----` for X.509 data (`Certificate` structure)\r\n  - `----BEGIN PUBLIC KEY----` for X.509 data (`SubjectPublicKeyInfo` structure, which is [a subset of the above](https://en.wikipedia.org/wiki/X.509#Structure_of_a_certificate))\r\n  - `----BEGIN RSA PUBLIC KEY----` for PKCS#1 data\r\n  - `----BEGIN PRIVATE KEY----` for PKCS#8 data\r\n  - [... a dozen other things](https://stackoverflow.com/a/5356351/2289701)\r\n\r\nFile extensions [tell you very little about the content of the file](https://support.ssl.com/Knowledgebase/Article/View/19/0/der-vs-crt-vs-cer-vs-pem-certificates-and-how-to-convert-them).\r\n\r\nCurrently, the `--auth-jwt-rs256-crt` sandbox option supports X.509 (the `Certificate` kind, not the `SubjectPublicKeyInfo` kind) in both PEM and DER encoding.",
        "createdAt" : "2019-11-20T08:55:23Z",
        "updatedAt" : "2019-11-25T14:55:04Z",
        "lastEditedBy" : "c83a17a2-0c0d-4811-9fe5-e560bb3ad87a",
        "tags" : [
        ]
      },
      {
        "id" : "fe7ee742-c5e3-4489-b009-1f905d8a1552",
        "parentId" : "2260839a-3c63-4534-b967-fac4239d8619",
        "authorId" : "eb431011-3221-41ae-bf30-e72dde278004",
        "body" : "Thanks 👍 ",
        "createdAt" : "2019-11-21T10:58:30Z",
        "updatedAt" : "2019-11-25T14:55:04Z",
        "lastEditedBy" : "eb431011-3221-41ae-bf30-e72dde278004",
        "tags" : [
        ]
      }
    ],
    "commit" : "05954a0b4045904a799d2c604ce9a266692d6a07",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +163,167 @@      .action( (secret, config) => config.copy(authService = Some(AuthServiceJWT(HMAC256Verifier(secret).valueOr(err => sys.error(s\"Failed to create HMAC256 verifier: $err\"))))))\n\n    opt[String](\"auth-jwt-rs256-crt\")\n      .optional()\n      .validate(v => Either.cond(v.length > 0, (), \"Certificate file path must be a non-empty string\"))"
  },
  {
    "id" : "98523a29-8413-4b02-8592-61c229e1679e",
    "prId" : 1835,
    "prUrl" : "https://github.com/digital-asset/daml/pull/1835",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "088d0b11-5b23-4044-9804-9d92a25b1792",
        "parentId" : null,
        "authorId" : "e316b0c3-3da9-495c-b0fe-7fb96d032e37",
        "body" : "what happens when it's none of these?",
        "createdAt" : "2019-06-26T09:23:24Z",
        "updatedAt" : "2019-06-27T15:27:04Z",
        "lastEditedBy" : "e316b0c3-3da9-495c-b0fe-7fb96d032e37",
        "tags" : [
        ]
      },
      {
        "id" : "0acd1aed-c292-4d2a-bedd-8da89cb1ce92",
        "parentId" : "088d0b11-5b23-4044-9804-9d92a25b1792",
        "authorId" : "e316b0c3-3da9-495c-b0fe-7fb96d032e37",
        "body" : "minor comment on formatting: I very much agree with this style, but this could be configured as the style scalafmt formats to, which we used to have before open-sourcing. I find it silly to disable formatting just so we can achieve what we had before **with** formatting. cc @francesco-da ",
        "createdAt" : "2019-06-26T09:28:57Z",
        "updatedAt" : "2019-06-27T15:27:04Z",
        "lastEditedBy" : "e316b0c3-3da9-495c-b0fe-7fb96d032e37",
        "tags" : [
        ]
      },
      {
        "id" : "05192a07-2fad-4b59-8bf3-a2273be8b547",
        "parentId" : "088d0b11-5b23-4044-9804-9d92a25b1792",
        "authorId" : "522e06ae-6149-4367-9085-2f43d294bb59",
        "body" : "Added an explicit handling of this case. Previously it would be handled implicitly by scopt with a less-than-helpful error message.",
        "createdAt" : "2019-06-27T08:22:39Z",
        "updatedAt" : "2019-06-27T15:27:04Z",
        "lastEditedBy" : "522e06ae-6149-4367-9085-2f43d294bb59",
        "tags" : [
        ]
      },
      {
        "id" : "35000e4b-aa1b-4ab4-9a32-133621d3436b",
        "parentId" : "088d0b11-5b23-4044-9804-9d92a25b1792",
        "authorId" : "e316b0c3-3da9-495c-b0fe-7fb96d032e37",
        "body" : "@gerolf-da please mind my comment on formatting above",
        "createdAt" : "2019-06-28T08:34:47Z",
        "updatedAt" : "2019-06-28T08:34:47Z",
        "lastEditedBy" : "e316b0c3-3da9-495c-b0fe-7fb96d032e37",
        "tags" : [
        ]
      }
    ],
    "commit" : "aa80afa638e4cc73092c063ef31ae1da6d7bcb92",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +38,42 @@        case \"DEBUG\" | \"debug\" => Level.DEBUG\n        case \"WARN\"  | \"warn\"  => Level.WARN\n        case \"ERROR\" | \"error\" => Level.ERROR\n        case _                 => throw new IllegalArgumentException(s\"Unrecognized logging level $logLevel\")\n      }"
  },
  {
    "id" : "70733560-3341-406a-8cfb-b5ec433a5c20",
    "prId" : 1835,
    "prUrl" : "https://github.com/digital-asset/daml/pull/1835",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2968d9cb-2740-4555-a01e-6de4c69a3fa2",
        "parentId" : null,
        "authorId" : "eb431011-3221-41ae-bf30-e72dde278004",
        "body" : "an alternative and less involved way of doing this would be:\r\n\r\n```\r\nval knownLevels = Set(\"ERROR\", \"WARN\", \"INFO\", \"DEBUG\", \"TRACE\")\r\n// ...\r\nopt[String](\"log-level\")\r\n      .optional()\r\n      .validate(l => if (knownLevels.contains(l.toUpperCase) success else failure(s\"Unrecogized logging level $l\"))\r\n      .action((level, c) => c.copy(logLevel = Level.toLevel(level.toUpperCase)))\r\n```",
        "createdAt" : "2019-06-28T05:59:07Z",
        "updatedAt" : "2019-06-28T06:01:40Z",
        "lastEditedBy" : "eb431011-3221-41ae-bf30-e72dde278004",
        "tags" : [
        ]
      },
      {
        "id" : "9ba7ff9b-1e00-49da-87fb-9dd3b962d03a",
        "parentId" : "2968d9cb-2740-4555-a01e-6de4c69a3fa2",
        "authorId" : "522e06ae-6149-4367-9085-2f43d294bb59",
        "body" : "@gerolf-da Is this a request to change it? I do not have strong preference here. Happy to make it both ways.",
        "createdAt" : "2019-06-28T08:10:29Z",
        "updatedAt" : "2019-06-28T08:10:29Z",
        "lastEditedBy" : "522e06ae-6149-4367-9085-2f43d294bb59",
        "tags" : [
        ]
      },
      {
        "id" : "6fa43bd4-9a5b-47cf-b5be-f396731474ee",
        "parentId" : "2968d9cb-2740-4555-a01e-6de4c69a3fa2",
        "authorId" : "eb431011-3221-41ae-bf30-e72dde278004",
        "body" : "Sorry for being unclear. Yes, please change it. After that I'm 👍 ",
        "createdAt" : "2019-06-28T08:12:36Z",
        "updatedAt" : "2019-06-28T08:12:36Z",
        "lastEditedBy" : "eb431011-3221-41ae-bf30-e72dde278004",
        "tags" : [
        ]
      }
    ],
    "commit" : "aa80afa638e4cc73092c063ef31ae1da6d7bcb92",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +29,33 @@  }\n\n  private implicit val levelRead: Read[Level] = new Read[Level] {\n    override def arity: Int = 1\n    override val reads: String => Level = (logLevel: String) => {"
  },
  {
    "id" : "71c73ee4-628e-4d76-8c36-82305310f82f",
    "prId" : 1105,
    "prUrl" : "https://github.com/digital-asset/daml/pull/1105",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6c87dca2-407d-439d-8ecf-0678241406fd",
        "parentId" : null,
        "authorId" : "e316b0c3-3da9-495c-b0fe-7fb96d032e37",
        "body" : "Please change the SandboxFixture part where this one is still used. Also, please add a test case in `CliSpec`!",
        "createdAt" : "2019-05-13T14:47:40Z",
        "updatedAt" : "2019-05-14T09:16:28Z",
        "lastEditedBy" : "e316b0c3-3da9-495c-b0fe-7fb96d032e37",
        "tags" : [
        ]
      },
      {
        "id" : "4ed2b598-0aee-4b3b-a45a-8f71ce04a26a",
        "parentId" : "6c87dca2-407d-439d-8ecf-0678241406fd",
        "authorId" : "8e6a9b81-aba7-4206-84ba-06825f79e954",
        "body" : "the `SandboxFixture` uses the config directly. I've amended `CliSpec`.",
        "createdAt" : "2019-05-14T07:23:34Z",
        "updatedAt" : "2019-05-14T09:16:28Z",
        "lastEditedBy" : "8e6a9b81-aba7-4206-84ba-06825f79e954",
        "tags" : [
        ]
      }
    ],
    "commit" : "6d81164920cc6c9affc0286dc658e1a78e9b981e",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +104,108 @@    opt[String](\"jdbcurl\")\n      .optional()\n      .text(\"This flag is deprecated -- please use --sql-backend-jdbcurl.\")\n      .action((url, config) => config.copy(jdbcUrl = Some(url)))\n"
  },
  {
    "id" : "2470ba0f-259c-4611-b823-3601de0c4f7a",
    "prId" : 668,
    "prUrl" : "https://github.com/digital-asset/daml/pull/668",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0f31289b-8449-4c8b-87ee-021a2aad7150",
        "parentId" : null,
        "authorId" : "4c501a40-3340-4f35-b66e-fcfb75e20f37",
        "body" : "NB: `--allow-dev` is being removed, see #681 for details.",
        "createdAt" : "2019-04-26T16:12:26Z",
        "updatedAt" : "2019-04-26T16:12:27Z",
        "lastEditedBy" : "4c501a40-3340-4f35-b66e-fcfb75e20f37",
        "tags" : [
        ]
      }
    ],
    "commit" : "2947cafe20480cf6ac32705c79e05ba04cad0568",
    "line" : 58,
    "diffHunk" : "@@ -1,1 +108,112 @@\n    opt[Unit](\"allow-dev\")\n      .hidden()\n      .action { (_, c) =>\n        c.copy(damlPackageContainer = c.damlPackageContainer.allowDev)"
  }
]