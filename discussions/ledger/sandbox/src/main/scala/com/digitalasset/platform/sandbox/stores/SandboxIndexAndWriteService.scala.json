[
  {
    "id" : "87d6284b-4bac-4262-bef5-d732c7a6f8a3",
    "prId" : 2425,
    "prUrl" : "https://github.com/digital-asset/daml/pull/2425",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8513ca24-c9fd-4b7a-aa39-992f2c5766dc",
        "parentId" : null,
        "authorId" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "body" : "How is this case handled if the guard doesn't hold?",
        "createdAt" : "2019-08-23T15:30:45Z",
        "updatedAt" : "2019-08-28T11:21:54Z",
        "lastEditedBy" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "tags" : [
        ]
      },
      {
        "id" : "18b104d5-30c3-406f-9853-59f31c18dc16",
        "parentId" : "8513ca24-c9fd-4b7a-aa39-992f2c5766dc",
        "authorId" : "d7d10058-0c3f-4068-af8a-3d7024c74f76",
        "body" : "With guard you mean the if-condition, right?\r\n\r\nCommandRejected events are dropped from the ledger if commandId is not specified (i.e. a non-submitter event) or if the applicationId does not match.",
        "createdAt" : "2019-08-23T16:01:10Z",
        "updatedAt" : "2019-08-28T11:21:54Z",
        "lastEditedBy" : "d7d10058-0c3f-4068-af8a-3d7024c74f76",
        "tags" : [
        ]
      },
      {
        "id" : "b5dde4ca-f819-4b50-b42b-aa1b7a98667c",
        "parentId" : "8513ca24-c9fd-4b7a-aa39-992f2c5766dc",
        "authorId" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "body" : "Ah, sure, thanks, it was quite hard to figure out the meaning of this line by itself, I had a better look at the context and it makes sense, thanks.",
        "createdAt" : "2019-08-25T08:18:14Z",
        "updatedAt" : "2019-08-28T11:21:54Z",
        "lastEditedBy" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "tags" : [
        ]
      }
    ],
    "commit" : "1fee0715b6e5ad68a7c644fcc1d5e65f71f5a8ed",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +355,359 @@                c.recordedAt)\n            case (offset, r: LedgerEntry.Rejection)\n                if r.commandId.nonEmpty && r.applicationId.contains(applicationId.unwrap) =>\n              CommandRejected(\n                domain.LedgerOffset.Absolute(Ref.LedgerString.assertFromString(offset.toString)),"
  },
  {
    "id" : "58a44647-73bf-4264-8500-086ffd821ba1",
    "prId" : 1766,
    "prUrl" : "https://github.com/digital-asset/daml/pull/1766",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "24006e03-fd1b-44d7-87b9-b2deb660d3a3",
        "parentId" : null,
        "authorId" : "c83a17a2-0c0d-4811-9fe5-e560bb3ad87a",
        "body" : "Why the check for existing command ID?",
        "createdAt" : "2019-06-19T13:20:47Z",
        "updatedAt" : "2019-06-19T13:50:38Z",
        "lastEditedBy" : "c83a17a2-0c0d-4811-9fe5-e560bb3ad87a",
        "tags" : [
        ]
      },
      {
        "id" : "0be55567-4903-478e-bf06-a139ecc92cee",
        "parentId" : "24006e03-fd1b-44d7-87b9-b2deb660d3a3",
        "authorId" : "eb431011-3221-41ae-bf30-e72dde278004",
        "body" : "Because previously it wasn't optional, and to be able to emit `CommandAccepted` we need the commandId.",
        "createdAt" : "2019-06-19T13:25:45Z",
        "updatedAt" : "2019-06-19T13:50:38Z",
        "lastEditedBy" : "eb431011-3221-41ae-bf30-e72dde278004",
        "tags" : [
        ]
      },
      {
        "id" : "5b3b6921-921d-4902-baeb-c4b8057bf865",
        "parentId" : "24006e03-fd1b-44d7-87b9-b2deb660d3a3",
        "authorId" : "c83a17a2-0c0d-4811-9fe5-e560bb3ad87a",
        "body" : "Ah, and I assume the index service should not emit completions for non-local transactions (i.e., those with missing command IDs)?",
        "createdAt" : "2019-06-19T13:46:42Z",
        "updatedAt" : "2019-06-19T13:50:38Z",
        "lastEditedBy" : "c83a17a2-0c0d-4811-9fe5-e560bb3ad87a",
        "tags" : [
        ]
      },
      {
        "id" : "7a4135a3-8a37-40fa-bcbf-3719b80032b1",
        "parentId" : "24006e03-fd1b-44d7-87b9-b2deb660d3a3",
        "authorId" : "eb431011-3221-41ae-bf30-e72dde278004",
        "body" : "This change makes more sense in a future commit where this code is moved to a generic `LedgerBackedIndexService` which in turn will be used by the ApiIndexServer and the sandbox.\r\nIn the sandbox this doesn't make a difference, but for the ApiIndexServer, we should only emit `CommandAccepted` for transactions that have \"submitter\" information (appId, submitter, commandId), meaning the transaction originated from this api server and there is a client listening for these completions.\r\n\r\nThanks for asking the question. I added a comment in the code as well.",
        "createdAt" : "2019-06-19T13:51:47Z",
        "updatedAt" : "2019-06-19T13:51:47Z",
        "lastEditedBy" : "eb431011-3221-41ae-bf30-e72dde278004",
        "tags" : [
        ]
      },
      {
        "id" : "f3693751-aff9-43f2-b23d-40b0f3d312c2",
        "parentId" : "24006e03-fd1b-44d7-87b9-b2deb660d3a3",
        "authorId" : "c83a17a2-0c0d-4811-9fe5-e560bb3ad87a",
        "body" : ":+1:\r\n",
        "createdAt" : "2019-06-19T13:52:59Z",
        "updatedAt" : "2019-06-19T13:52:59Z",
        "lastEditedBy" : "c83a17a2-0c0d-4811-9fe5-e560bb3ad87a",
        "tags" : [
        ]
      }
    ],
    "commit" : "3f345f4de8b1b2494f913e1b39d69b0017d6057d",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +336,340 @@              if t.applicationId.contains(applicationId.unwrap) &&\n                t.submittingParty.exists(parties.contains) &&\n                t.commandId.nonEmpty =>\n            CommandAccepted(\n              domain.LedgerOffset.Absolute(Ref.LedgerString.assertFromString(offset.toString)),"
  }
]