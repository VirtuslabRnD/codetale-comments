[
  {
    "id" : "7c985b0a-e310-4266-95e6-fcdc1fddecd7",
    "prId" : 2022,
    "prUrl" : "https://github.com/digital-asset/daml/pull/2022",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5b7d1356-d21d-4cbc-b228-666c0a39d105",
        "parentId" : null,
        "authorId" : "eb431011-3221-41ae-bf30-e72dde278004",
        "body" : "I don't think this needs to be logged at warn. INFO at most, but I'd also be happy with DEBUG.",
        "createdAt" : "2019-07-05T14:05:03Z",
        "updatedAt" : "2019-07-05T14:09:44Z",
        "lastEditedBy" : "eb431011-3221-41ae-bf30-e72dde278004",
        "tags" : [
        ]
      },
      {
        "id" : "3883cff9-4f99-428c-9b84-96e3ce5cb14c",
        "parentId" : "5b7d1356-d21d-4cbc-b228-666c0a39d105",
        "authorId" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "body" : "As discussed offline, since we agreed to switch from `List`s to individual packages, this piece of code will likely be removed in the following days, so I'll leave it as is.",
        "createdAt" : "2019-07-05T18:27:24Z",
        "updatedAt" : "2019-07-05T18:27:25Z",
        "lastEditedBy" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "tags" : [
        ]
      }
    ],
    "commit" : "8aca858d87707729f879490f8b4a558ecb8ec2af",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +176,180 @@      case PublicPackagesUploaded(archives, _, participantId, _) if archives.isEmpty =>\n        Future.successful {\n          PostgresIndexer.logger.warn(\n            s\"Received empty list of packages from $participantId, ignoring it\")\n        }"
  },
  {
    "id" : "236358e4-5f16-4350-9be4-f9ed91111241",
    "prId" : 1978,
    "prUrl" : "https://github.com/digital-asset/daml/pull/1978",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c67c8406-5de9-4c53-94bd-c1068fc415f2",
        "parentId" : null,
        "authorId" : "e316b0c3-3da9-495c-b0fe-7fb96d032e37",
        "body" : "I wonder if using `require` would be more idiomatic than explicitly crafting Exceptions.",
        "createdAt" : "2019-07-03T07:32:12Z",
        "updatedAt" : "2019-07-03T12:30:17Z",
        "lastEditedBy" : "e316b0c3-3da9-495c-b0fe-7fb96d032e37",
        "tags" : [
        ]
      },
      {
        "id" : "32f2c6c6-62ca-4175-97cf-cb9dff316116",
        "parentId" : "c67c8406-5de9-4c53-94bd-c1068fc415f2",
        "authorId" : "eb431011-3221-41ae-bf30-e72dde278004",
        "body" : "Considering that I want to do some logging in either case, I'd rather not repeat the condition for the `require`. I think \"crafting\" the right exception by hand is quite appropriate here.",
        "createdAt" : "2019-07-03T11:15:54Z",
        "updatedAt" : "2019-07-03T12:30:17Z",
        "lastEditedBy" : "eb431011-3221-41ae-bf30-e72dde278004",
        "tags" : [
        ]
      }
    ],
    "commit" : "489014fcd84217503412500523ac71e792b0c3aa",
    "line" : 109,
    "diffHunk" : "@@ -1,1 +107,111 @@            s\"Ledger id mismatch. Ledger id given ('$ledgerId') is not equal to the existing one ('$foundLedgerId')!\"\n          logger.error(errorMsg)\n          Future.failed(new IllegalArgumentException(errorMsg))\n\n        case None =>"
  }
]