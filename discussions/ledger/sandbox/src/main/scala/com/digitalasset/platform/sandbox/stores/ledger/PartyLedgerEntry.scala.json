[
  {
    "id" : "41d4f620-d43e-4003-9878-9f2f073628e7",
    "prId" : 3744,
    "prUrl" : "https://github.com/digital-asset/daml/pull/3744",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f15be46c-a051-4f28-85ba-d3710580fe9a",
        "parentId" : null,
        "authorId" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "body" : "```suggestion\r\n  def submissionIdOpt: Option[SubmissionId]\r\n```",
        "createdAt" : "2019-12-05T11:02:40Z",
        "updatedAt" : "2019-12-05T15:56:33Z",
        "lastEditedBy" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "tags" : [
        ]
      },
      {
        "id" : "0ba0a4d8-9ddb-4c9d-9dd8-714bce0378a2",
        "parentId" : "f15be46c-a051-4f28-85ba-d3710580fe9a",
        "authorId" : "eb431011-3221-41ae-bf30-e72dde278004",
        "body" : "Not necessary to define as `def` here because it is not used in the base class' constructor.",
        "createdAt" : "2019-12-05T12:09:59Z",
        "updatedAt" : "2019-12-05T15:56:33Z",
        "lastEditedBy" : "eb431011-3221-41ae-bf30-e72dde278004",
        "tags" : [
        ]
      }
    ],
    "commit" : "d8204b7c377ce994002fb11ce1227c245747b3d0",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +10,14 @@\nsealed abstract class PartyLedgerEntry() extends Product with Serializable {\n  val submissionIdOpt: Option[SubmissionId]\n  val recordTime: Instant\n}"
  },
  {
    "id" : "07b85301-cc3e-4960-9efb-9620820152ee",
    "prId" : 3744,
    "prUrl" : "https://github.com/digital-asset/daml/pull/3744",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8f4bd7f9-479f-4d02-aabf-75df736b368d",
        "parentId" : null,
        "authorId" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "body" : "```suggestion\r\n  def recordTime: Instant\r\n```\r\nUnless there's a good reason to do otherwise, of course. :slightly_smiling_face: ",
        "createdAt" : "2019-12-05T11:03:15Z",
        "updatedAt" : "2019-12-05T15:56:33Z",
        "lastEditedBy" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "tags" : [
        ]
      },
      {
        "id" : "e79c0348-b560-44e2-8a03-6a3e71b04ede",
        "parentId" : "8f4bd7f9-479f-4d02-aabf-75df736b368d",
        "authorId" : "eb431011-3221-41ae-bf30-e72dde278004",
        "body" : "Not necessary to define as def here because it is not used in the base class' constructor.",
        "createdAt" : "2019-12-05T12:10:14Z",
        "updatedAt" : "2019-12-05T15:56:33Z",
        "lastEditedBy" : "eb431011-3221-41ae-bf30-e72dde278004",
        "tags" : [
        ]
      }
    ],
    "commit" : "d8204b7c377ce994002fb11ce1227c245747b3d0",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +11,15 @@sealed abstract class PartyLedgerEntry() extends Product with Serializable {\n  val submissionIdOpt: Option[SubmissionId]\n  val recordTime: Instant\n}\n"
  },
  {
    "id" : "0c8fcdee-ae78-41dd-89fa-7c2840a214ef",
    "prId" : 3744,
    "prUrl" : "https://github.com/digital-asset/daml/pull/3744",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2936034b-da14-4a01-b670-f515091fae5a",
        "parentId" : null,
        "authorId" : "c36a5b02-f260-4cef-9fc6-22c312c693f7",
        "body" : "@gerolf-da why is SubmissionId optional on the allocation accepted?  i believe there should always be a submissionId sent as part of the allocation request",
        "createdAt" : "2019-12-05T15:10:22Z",
        "updatedAt" : "2019-12-05T15:56:33Z",
        "lastEditedBy" : "c36a5b02-f260-4cef-9fc6-22c312c693f7",
        "tags" : [
        ]
      },
      {
        "id" : "d38693be-88c9-4f57-8072-c8fc9ed13074",
        "parentId" : "2936034b-da14-4a01-b670-f515091fae5a",
        "authorId" : "eb431011-3221-41ae-bf30-e72dde278004",
        "body" : "The `submissionId` is optional for the same reason that `commandId` is optional: only the submitting participant should see it.",
        "createdAt" : "2019-12-05T15:35:52Z",
        "updatedAt" : "2019-12-05T15:56:33Z",
        "lastEditedBy" : "eb431011-3221-41ae-bf30-e72dde278004",
        "tags" : [
        ]
      },
      {
        "id" : "30a2c765-28ed-4802-a8c1-fa1208b90993",
        "parentId" : "2936034b-da14-4a01-b670-f515091fae5a",
        "authorId" : "c36a5b02-f260-4cef-9fc6-22c312c693f7",
        "body" : "shouldn't it be consistent between the Accepted and Rejected?",
        "createdAt" : "2019-12-05T15:54:58Z",
        "updatedAt" : "2019-12-05T15:56:33Z",
        "lastEditedBy" : "c36a5b02-f260-4cef-9fc6-22c312c693f7",
        "tags" : [
        ]
      },
      {
        "id" : "8d684699-0faa-4373-88d7-a052bb13f8f2",
        "parentId" : "2936034b-da14-4a01-b670-f515091fae5a",
        "authorId" : "eb431011-3221-41ae-bf30-e72dde278004",
        "body" : "No, you should only ever see a rejection on the participant that submitted the party allocation.",
        "createdAt" : "2019-12-05T16:48:08Z",
        "updatedAt" : "2019-12-05T16:48:08Z",
        "lastEditedBy" : "eb431011-3221-41ae-bf30-e72dde278004",
        "tags" : [
        ]
      }
    ],
    "commit" : "d8204b7c377ce994002fb11ce1227c245747b3d0",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +17,21 @@\n  final case class AllocationAccepted(\n      submissionIdOpt: Option[SubmissionId],\n      participantId: ParticipantId,\n      recordTime: Instant,"
  }
]