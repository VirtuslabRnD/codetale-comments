[
  {
    "id" : "95e68b7e-6b98-45ac-9e5a-4abdcbc15b24",
    "prId" : 3359,
    "prUrl" : "https://github.com/digital-asset/daml/pull/3359",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fa7c4f3a-18f8-4eef-9289-d4513f34de64",
        "parentId" : null,
        "authorId" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "body" : "I'm starting to think that this class does a little too much.",
        "createdAt" : "2019-11-06T14:24:06Z",
        "updatedAt" : "2019-11-07T14:26:30Z",
        "lastEditedBy" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "tags" : [
        ]
      },
      {
        "id" : "88756392-1936-48b7-8dbc-709e5790cb6b",
        "parentId" : "fa7c4f3a-18f8-4eef-9289-d4513f34de64",
        "authorId" : "eb431011-3221-41ae-bf30-e72dde278004",
        "body" : "Is the purpose of this to not have to compile packages twice?",
        "createdAt" : "2019-11-06T18:09:47Z",
        "updatedAt" : "2019-11-07T14:26:30Z",
        "lastEditedBy" : "eb431011-3221-41ae-bf30-e72dde278004",
        "tags" : [
        ]
      },
      {
        "id" : "8673740c-d07f-4764-aa52-89c0c72538d8",
        "parentId" : "fa7c4f3a-18f8-4eef-9289-d4513f34de64",
        "authorId" : "d7d10058-0c3f-4068-af8a-3d7024c74f76",
        "body" : "@gerolf-da , yes indeed",
        "createdAt" : "2019-11-07T07:53:49Z",
        "updatedAt" : "2019-11-07T14:26:30Z",
        "lastEditedBy" : "d7d10058-0c3f-4068-af8a-3d7024c74f76",
        "tags" : [
        ]
      }
    ],
    "commit" : "57b56f34c1c450872c0e56b48c140c1fe8a5ccab",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +41,45 @@      authService: AuthService,\n      loggerFactory: NamedLoggerFactory,\n      engine: Engine = engineSharedAmongIndexServers, // allows sharing DAML engine with DAML-on-X participant\n      timeServiceBackendO: Option[TimeServiceBackend] = None): StandaloneIndexServer =\n    new StandaloneIndexServer("
  },
  {
    "id" : "2551f60e-8167-4ddd-8113-6f08cced8723",
    "prId" : 2091,
    "prUrl" : "https://github.com/digital-asset/daml/pull/2091",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "018e3a24-66c1-408b-bfd2-c569edf5d144",
        "parentId" : null,
        "authorId" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "body" : "It looks like the previous logic was to set `Instant.now` as the `knownSince` time. It probably makes sense to keep it as is.",
        "createdAt" : "2019-07-12T09:44:35Z",
        "updatedAt" : "2019-07-12T11:08:32Z",
        "lastEditedBy" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "tags" : [
        ]
      },
      {
        "id" : "269898e8-7431-4e00-8cab-55ab25e9c2c5",
        "parentId" : "018e3a24-66c1-408b-bfd2-c569edf5d144",
        "authorId" : "c83a17a2-0c0d-4811-9fe5-e560bb3ad87a",
        "body" : "Interesting. The sandbox application always used `EPOCH` (see https://github.com/digital-asset/daml/pull/2091/files#diff-9ee24205d1c2b37348e86cc67c097e36L173), while the standalone index server used `Instant.now` before.\r\n\r\nWhy do we need to load any packages at all here? The read service contains ledger entries for package uploads, the package store should be updated from these entries.\r\n\r\nIf the initial packages are somehow packages that the ledger needs, but does not expose through the read service, then these should be uploaded at `EPOCH`, to make sure they predate any other ledger entries.",
        "createdAt" : "2019-07-12T10:17:39Z",
        "updatedAt" : "2019-07-12T11:08:32Z",
        "lastEditedBy" : "c83a17a2-0c0d-4811-9fe5-e560bb3ad87a",
        "tags" : [
        ]
      },
      {
        "id" : "91bb8176-566d-4a77-8daf-90ccd8ed3ef9",
        "parentId" : "018e3a24-66c1-408b-bfd2-c569edf5d144",
        "authorId" : "e316b0c3-3da9-495c-b0fe-7fb96d032e37",
        "body" : "it might be just a temporary solution. Let me change it to `Instant.now` so we can merge this.",
        "createdAt" : "2019-07-12T11:07:50Z",
        "updatedAt" : "2019-07-12T11:08:32Z",
        "lastEditedBy" : "e316b0c3-3da9-495c-b0fe-7fb96d032e37",
        "tags" : [
        ]
      }
    ],
    "commit" : "5d5ca6719a14cdc9991e9790da4ba5e4ce90c25c",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +121,125 @@\n  private def loadDamlPackages(): InMemoryPackageStore = {\n    // TODO is it sensible to have all the initial packages to be known since the epoch?\n    config.archiveFiles\n      .foldLeft[Either[(String, File), InMemoryPackageStore]](Right(InMemoryPackageStore.empty)) {"
  }
]