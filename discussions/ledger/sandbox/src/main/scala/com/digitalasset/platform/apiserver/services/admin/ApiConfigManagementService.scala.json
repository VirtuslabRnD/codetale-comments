[
  {
    "id" : "df5bf31e-a19f-4036-aad8-da776b91846b",
    "prId" : 6646,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6646",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "007efb0e-2ea3-4591-939b-7d756d5447f7",
        "parentId" : null,
        "authorId" : "7fffcfe2-e6e3-4e9c-a758-1855e207e60a",
        "body" : "What happens if there are two concurrent calls to `setTimeModel`? Or is this a \"preemptive\" check and the problem should get caught by the `WriteService`? Is it even a problem?",
        "createdAt" : "2020-07-08T12:15:36Z",
        "updatedAt" : "2020-07-08T13:16:41Z",
        "lastEditedBy" : "7fffcfe2-e6e3-4e9c-a758-1855e207e60a",
        "tags" : [
        ]
      },
      {
        "id" : "a2745775-f0c7-45d4-a0d7-505bfeb92b1f",
        "parentId" : "007efb0e-2ea3-4591-939b-7d756d5447f7",
        "authorId" : "eb431011-3221-41ae-bf30-e72dde278004",
        "body" : "The `WriteService` implementation definitely has the last word on this.",
        "createdAt" : "2020-07-08T12:18:58Z",
        "updatedAt" : "2020-07-08T13:16:41Z",
        "lastEditedBy" : "eb431011-3221-41ae-bf30-e72dde278004",
        "tags" : [
        ]
      }
    ],
    "commit" : "7d93fa5fb876e41f24d6d98a451a08e0f381e545",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +87,91 @@\n      // Verify that we're modifying the current configuration.\n      expectedGeneration = currentConfig\n        .map(_.generation)\n        .getOrElse(LedgerConfiguration.NoGeneration)"
  },
  {
    "id" : "8c3409b9-dcea-44e2-900e-01c7417c2b32",
    "prId" : 6646,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6646",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e5e7db1e-22d6-4e03-84ee-0defef6413af",
        "parentId" : null,
        "authorId" : "7fffcfe2-e6e3-4e9c-a758-1855e207e60a",
        "body" : "Is it sensible to return a config, even if no config is actually set? I see that you need to return a generation, but the model could in principle be left empty. Would this break other tests?",
        "createdAt" : "2020-07-08T12:35:32Z",
        "updatedAt" : "2020-07-08T13:16:41Z",
        "lastEditedBy" : "7fffcfe2-e6e3-4e9c-a758-1855e207e60a",
        "tags" : [
        ]
      },
      {
        "id" : "abd5b255-ebe6-48ef-8517-35e80dc4c1c3",
        "parentId" : "e5e7db1e-22d6-4e03-84ee-0defef6413af",
        "authorId" : "181bcece-33df-41af-887d-5d5f51beb543",
        "body" : "I agree, but this would be a bigger change and I suggest we leave it until after we release. Perhaps @rautenrieth-da can weigh in.",
        "createdAt" : "2020-07-08T12:39:28Z",
        "updatedAt" : "2020-07-08T13:16:41Z",
        "lastEditedBy" : "181bcece-33df-41af-887d-5d5f51beb543",
        "tags" : [
        ]
      },
      {
        "id" : "d041dc68-41d7-4985-ba19-9ee7044d6edd",
        "parentId" : "e5e7db1e-22d6-4e03-84ee-0defef6413af",
        "authorId" : "7fffcfe2-e6e3-4e9c-a758-1855e207e60a",
        "body" : ":+1: ",
        "createdAt" : "2020-07-08T12:43:45Z",
        "updatedAt" : "2020-07-08T13:16:41Z",
        "lastEditedBy" : "7fffcfe2-e6e3-4e9c-a758-1855e207e60a",
        "tags" : [
        ]
      },
      {
        "id" : "4c44883b-59fd-486c-b9f8-594679a9b8a7",
        "parentId" : "e5e7db1e-22d6-4e03-84ee-0defef6413af",
        "authorId" : "c83a17a2-0c0d-4811-9fe5-e560bb3ad87a",
        "body" : "https://github.com/digital-asset/daml/issues/6668",
        "createdAt" : "2020-07-09T12:04:23Z",
        "updatedAt" : "2020-07-09T12:04:38Z",
        "lastEditedBy" : "c83a17a2-0c0d-4811-9fe5-e560bb3ad87a",
        "tags" : [
        ]
      }
    ],
    "commit" : "7d93fa5fb876e41f24d6d98a451a08e0f381e545",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +46,50 @@\n  private val defaultConfigResponse = configToResponse(\n    ledgerConfiguration.initialConfiguration.copy(generation = LedgerConfiguration.NoGeneration))\n\n  override def close(): Unit = ()"
  },
  {
    "id" : "bc50fd3c-783e-4c0e-bb84-7e003c95799e",
    "prId" : 5591,
    "prUrl" : "https://github.com/digital-asset/daml/pull/5591",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "aac1c7fe-59e4-46e0-b386-64cfa29a4c43",
        "parentId" : null,
        "authorId" : "d7d10058-0c3f-4068-af8a-3d7024c74f76",
        "body" : "Can we lower the logging level to info? In distributed ledgers, the participant administrator is not necessarily authorized to define the time model (owned by the domain administrators). In such cases submission would fail expectedly. In such cases a warning would indicate an incorrectly operating node which is not necessarily the case.\r\n\r\nFor Canton it would be great if: if the ledger returned `NotSupported` we only emitted a message at info level and warn on other `SubmissionResult`s.",
        "createdAt" : "2020-04-21T07:15:15Z",
        "updatedAt" : "2020-04-21T13:49:25Z",
        "lastEditedBy" : "d7d10058-0c3f-4068-af8a-3d7024c74f76",
        "tags" : [
        ]
      },
      {
        "id" : "cd983289-c61a-48ec-88f5-23228995634c",
        "parentId" : "aac1c7fe-59e4-46e0-b386-64cfa29a4c43",
        "authorId" : "c83a17a2-0c0d-4811-9fe5-e560bb3ad87a",
        "body" : "Done. `NotSupported` will emit a message at info level.",
        "createdAt" : "2020-04-21T12:25:53Z",
        "updatedAt" : "2020-04-21T13:49:25Z",
        "lastEditedBy" : "c83a17a2-0c0d-4811-9fe5-e560bb3ad87a",
        "tags" : [
        ]
      },
      {
        "id" : "cdbf27a4-f749-4aea-aa66-7e66cf0451a6",
        "parentId" : "aac1c7fe-59e4-46e0-b386-64cfa29a4c43",
        "authorId" : "d7d10058-0c3f-4068-af8a-3d7024c74f76",
        "body" : "Thanks Robert. Much obliged.",
        "createdAt" : "2020-04-21T12:59:50Z",
        "updatedAt" : "2020-04-21T13:49:25Z",
        "lastEditedBy" : "d7d10058-0c3f-4068-af8a-3d7024c74f76",
        "tags" : [
        ]
      }
    ],
    "commit" : "c88cb69f1442ab96bd253fb3a6720778c58fb8f0",
    "line" : 80,
    "diffHunk" : "@@ -1,1 +97,101 @@                ()\n              case result =>\n                logger.warn(\n                  s\"Initial configuration submission $submissionId failed. Reason: ${result.description}\")\n                ()"
  }
]