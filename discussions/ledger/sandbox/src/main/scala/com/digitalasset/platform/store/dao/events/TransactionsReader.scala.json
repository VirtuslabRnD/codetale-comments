[
  {
    "id" : "e3e21911-909e-4280-a405-59f6accc97b7",
    "prId" : 6372,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6372",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c4b21eda-6d85-4235-8823-23c2bcba333b",
        "parentId" : null,
        "authorId" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "body" : "Does this maintain the existing order? I believe we should return transaction in the right order.",
        "createdAt" : "2020-06-26T14:21:34Z",
        "updatedAt" : "2020-07-07T20:49:50Z",
        "lastEditedBy" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "tags" : [
        ]
      },
      {
        "id" : "87c3e8b2-07ca-44cf-b70d-139fe4d968a7",
        "parentId" : "c4b21eda-6d85-4235-8823-23c2bcba333b",
        "authorId" : "9da357e5-66f5-424f-b28c-d68ddac2a372",
        "body" : "it keeps the order... it is exactly the same thing. The only difference is we don't need to wrap the result collection into akka `Source`.",
        "createdAt" : "2020-06-26T18:55:36Z",
        "updatedAt" : "2020-07-07T20:49:50Z",
        "lastEditedBy" : "9da357e5-66f5-424f-b28c-d68ddac2a372",
        "tags" : [
        ]
      }
    ],
    "commit" : "a4ac22ba1dbfc5a1f114a75812abec7b87d0eb34",
    "line" : 74,
    "diffHunk" : "@@ -1,1 +92,96 @@\n    groupContiguous(events)(by = _.transactionId)\n      .mapConcat { events =>\n        val response = EventsTable.Entry.toGetTransactionsResponse(events)\n        response.map(r => offsetFor(r) -> r)"
  },
  {
    "id" : "9b08ba69-cb92-424d-b5a4-69d15ba6e351",
    "prId" : 6043,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6043",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "25f1a913-4bbe-416c-8658-44c2ce152cfe",
        "parentId" : null,
        "authorId" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "body" : "Can you elaborate `es`, please?",
        "createdAt" : "2020-05-20T10:30:30Z",
        "updatedAt" : "2020-05-20T12:50:19Z",
        "lastEditedBy" : "8690c022-0eb5-4c0b-9f54-a9e6ad005a86",
        "tags" : [
        ]
      },
      {
        "id" : "b18c7344-cd96-41f0-85cf-1273a4b51bd3",
        "parentId" : "25f1a913-4bbe-416c-8658-44c2ce152cfe",
        "authorId" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "body" : "Addressed by https://github.com/digital-asset/daml/pull/6043/commits/b49c2ae5f520d554734406e597d11350877e28b6",
        "createdAt" : "2020-05-20T10:59:22Z",
        "updatedAt" : "2020-05-20T12:50:19Z",
        "lastEditedBy" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "tags" : [
        ]
      },
      {
        "id" : "dce9e7c5-efee-4c92-bd4e-58ed615d3b56",
        "parentId" : "25f1a913-4bbe-416c-8658-44c2ce152cfe",
        "authorId" : "181bcece-33df-41af-887d-5d5f51beb543",
        "body" : "No it wasn't. ðŸ˜› ",
        "createdAt" : "2020-05-20T12:18:14Z",
        "updatedAt" : "2020-05-20T12:50:19Z",
        "lastEditedBy" : "181bcece-33df-41af-887d-5d5f51beb543",
        "tags" : [
        ]
      }
    ],
    "commit" : "2936235bdbd9010386da40a1297477eb856f678a",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +131,135 @@          }\n        rawEvents.flatMap(\n          es =>\n            Timed.future(\n              future = Future.traverse(es)(deserializeEntry(verbose)),"
  },
  {
    "id" : "d3af58bb-20fc-4a11-ab83-fcb9d42f11c7",
    "prId" : 5917,
    "prUrl" : "https://github.com/digital-asset/daml/pull/5917",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "928d2199-e3d2-4fe3-816d-abc6cfa56144",
        "parentId" : null,
        "authorId" : "181bcece-33df-41af-887d-5d5f51beb543",
        "body" : "I think these could potentially be moved to the `Metrics` class.",
        "createdAt" : "2020-05-11T08:21:23Z",
        "updatedAt" : "2020-05-11T08:21:46Z",
        "lastEditedBy" : "181bcece-33df-41af-887d-5d5f51beb543",
        "tags" : [
        ]
      },
      {
        "id" : "a8d9def5-cd38-46c3-a5ed-f5fd57eda0ad",
        "parentId" : "928d2199-e3d2-4fe3-816d-abc6cfa56144",
        "authorId" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "body" : "Good point. Ideally I would also want to pass in the timer as a parameter to `DbDispatcher#runSQL`. Do you think I can tackle it in one go as a separate contribution?",
        "createdAt" : "2020-05-11T08:26:51Z",
        "updatedAt" : "2020-05-11T08:26:52Z",
        "lastEditedBy" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "tags" : [
        ]
      },
      {
        "id" : "208194db-576f-4fc0-9c0b-030061f63ebe",
        "parentId" : "928d2199-e3d2-4fe3-816d-abc6cfa56144",
        "authorId" : "181bcece-33df-41af-887d-5d5f51beb543",
        "body" : "Fine with me.",
        "createdAt" : "2020-05-11T08:32:40Z",
        "updatedAt" : "2020-05-11T08:32:40Z",
        "lastEditedBy" : "181bcece-33df-41af-887d-5d5f51beb543",
        "tags" : [
        ]
      },
      {
        "id" : "c339d4ba-0416-4991-899c-8d02273dacb7",
        "parentId" : "928d2199-e3d2-4fe3-816d-abc6cfa56144",
        "authorId" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "body" : "Addressed in https://github.com/digital-asset/daml/pull/5927",
        "createdAt" : "2020-05-11T10:48:07Z",
        "updatedAt" : "2020-05-11T10:48:07Z",
        "lastEditedBy" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "tags" : [
        ]
      }
    ],
    "commit" : "b924b0df2cdd7cf19f2aa64e3afdcc719f4fc149",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +51,55 @@    metrics.daml.index.db.deserialization(lookupTransactionTreeById)\n  private val getActiveContractsDeserializationTimer =\n    metrics.daml.index.db.deserialization(getActiveContracts)\n\n  private def offsetFor(response: GetTransactionsResponse): Offset ="
  },
  {
    "id" : "80b4000b-073b-4259-9e36-3646020adb65",
    "prId" : 5378,
    "prUrl" : "https://github.com/digital-asset/daml/pull/5378",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c5c5fe4c-64f5-44de-b09d-310e32d58b6e",
        "parentId" : null,
        "authorId" : "eb431011-3221-41ae-bf30-e72dde278004",
        "body" : "Is the type ascription needed here or did you mean to put `activeAt = activeAt`?",
        "createdAt" : "2020-04-02T17:27:38Z",
        "updatedAt" : "2020-04-02T18:25:15Z",
        "lastEditedBy" : "eb431011-3221-41ae-bf30-e72dde278004",
        "tags" : [
        ]
      },
      {
        "id" : "32e43ce4-bfce-435e-92f1-3f68f3ef6a4c",
        "parentId" : "c5c5fe4c-64f5-44de-b09d-310e32d58b6e",
        "authorId" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "body" : "I meant what you said. I noticed this in the upcoming integration PR, it's fixed there, thanks!",
        "createdAt" : "2020-04-02T17:39:18Z",
        "updatedAt" : "2020-04-02T18:25:15Z",
        "lastEditedBy" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "tags" : [
        ]
      }
    ],
    "commit" : "23511414d8d85dc31e984cd18a9b331a8752ca2d",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +141,145 @@          EventsTable\n            .preparePagedGetActiveContracts(\n              activeAt: Offset,\n              filter = filter,\n              pageSize = pageSize,"
  }
]