[
  {
    "id" : "8f5d63f5-c869-4e48-98db-49153a6d1e64",
    "prId" : 3523,
    "prUrl" : "https://github.com/digital-asset/daml/pull/3523",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "de3d67fe-5b57-4c2f-9fbe-c91d9b0b6869",
        "parentId" : null,
        "authorId" : "53efca31-cf56-4f70-be8f-a3714c600eb6",
        "body" : "An alternative to a volatile variable would be to stamp the metrics with every time a new update is processed. \r\n\r\nI guess it doesn't make much difference because in that case we would be hitting similar synchronization mechanism (potentially a lot more expensive) inside of the metrics subsystem?",
        "createdAt" : "2019-11-20T09:15:11Z",
        "updatedAt" : "2019-11-20T13:11:31Z",
        "lastEditedBy" : "53efca31-cf56-4f70-be8f-a3714c600eb6",
        "tags" : [
        ]
      },
      {
        "id" : "fec96e2c-9746-4405-81be-567463e90e4f",
        "parentId" : "de3d67fe-5b57-4c2f-9fbe-c91d9b0b6869",
        "authorId" : "eb431011-3221-41ae-bf30-e72dde278004",
        "body" : "So the offset is reported as a `Gauge`, which can represent any value really (ultimately `toString` will be called on it). Any other sort of metric is number based, which means we would have to convert the offset (array[long]) to a single number. Therefore I think using the gauge is more appropriate.\r\nDisclaimer: the value of the gauge is not actively pushed. it is up to the configured metrics reporter to poll the gauge at some interval.",
        "createdAt" : "2019-11-20T09:28:05Z",
        "updatedAt" : "2019-11-20T13:11:31Z",
        "lastEditedBy" : "eb431011-3221-41ae-bf30-e72dde278004",
        "tags" : [
        ]
      },
      {
        "id" : "6491ea0e-f218-4aa2-93a0-92c4a868b8b9",
        "parentId" : "de3d67fe-5b57-4c2f-9fbe-c91d9b0b6869",
        "authorId" : "53efca31-cf56-4f70-be8f-a3714c600eb6",
        "body" : "What you put into the disclaimer was what I was mostly interested in. \r\n\r\nI was wondering about the performance implications of this approach to gathering metrics, i.e. volatile var + poll. But then concluded myself that there is no free lunch and what you have done is probably as good as it gets. \"Active pushing\" or a \"volatile var\" both exert some form of protection of the state shared between the threads. Just wanted to confirm that this is also what you think.",
        "createdAt" : "2019-11-20T09:35:05Z",
        "updatedAt" : "2019-11-20T13:11:31Z",
        "lastEditedBy" : "53efca31-cf56-4f70-be8f-a3714c600eb6",
        "tags" : [
        ]
      },
      {
        "id" : "b6eedfd3-fc00-498b-b487-981505a84361",
        "parentId" : "de3d67fe-5b57-4c2f-9fbe-c91d9b0b6869",
        "authorId" : "eb431011-3221-41ae-bf30-e72dde278004",
        "body" : "oh, the polling happens in any case, because usually the reporter takes a snapshot of all metrics after a configured interval and sends the data to graphite, datadog, influxdb, ...",
        "createdAt" : "2019-11-20T10:18:16Z",
        "updatedAt" : "2019-11-20T13:11:31Z",
        "lastEditedBy" : "eb431011-3221-41ae-bf30-e72dde278004",
        "tags" : [
        ]
      }
    ],
    "commit" : "c0256fb7ef1584aba393cfde8b761ea827189612",
    "line" : 51,
    "diffHunk" : "@@ -1,1 +179,183 @@\n  @volatile\n  private var lastReceivedOffset: LedgerString = _\n\n  object Metrics {"
  }
]