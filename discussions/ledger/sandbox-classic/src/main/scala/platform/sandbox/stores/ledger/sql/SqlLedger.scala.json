[
  {
    "id" : "77261a67-badd-461c-b481-48fd30ec4e66",
    "prId" : 8823,
    "prUrl" : "https://github.com/digital-asset/daml/pull/8823",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "201d4443-f32c-4e5a-931a-340f49ab5b14",
        "parentId" : null,
        "authorId" : "181bcece-33df-41af-887d-5d5f51beb543",
        "body" : "Why has this moved down?\r\n\r\nHow are all those DAO lookups above gonna work if the migrations haven't run yet?",
        "createdAt" : "2021-02-12T09:45:07Z",
        "updatedAt" : "2021-02-19T15:14:16Z",
        "lastEditedBy" : "181bcece-33df-41af-887d-5d5f51beb543",
        "tags" : [
        ]
      },
      {
        "id" : "27875cbb-2f2a-451a-9784-8bc217b5911a",
        "parentId" : "201d4443-f32c-4e5a-931a-340f49ab5b14",
        "authorId" : "181bcece-33df-41af-887d-5d5f51beb543",
        "body" : "You need to move this back up to get the tests to pass.",
        "createdAt" : "2021-02-19T09:00:03Z",
        "updatedAt" : "2021-02-19T15:14:16Z",
        "lastEditedBy" : "181bcece-33df-41af-887d-5d5f51beb543",
        "tags" : [
        ]
      }
    ],
    "commit" : "66a612cf6d7c5242d26d3c997a1b2abba24e4e1e",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +91,95 @@        _ <- Resource.fromFuture(new FlywayMigrations(jdbcUrl).migrate())\n        dao <- ledgerDaoOwner(servicesExecutionContext).acquire()\n        _ <- startMode match {\n          case SqlStartMode.ResetAndStart =>\n            Resource.fromFuture(dao.reset())"
  },
  {
    "id" : "04eae6cd-3c54-4172-9906-4c56d6bf436f",
    "prId" : 7989,
    "prUrl" : "https://github.com/digital-asset/daml/pull/7989",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d911e2b7-cbfd-4479-8219-a7e2d152e628",
        "parentId" : null,
        "authorId" : "eb431011-3221-41ae-bf30-e72dde278004",
        "body" : "That's not the case for this implementation. This is effectively the committer in the Sandbox Classic style integration. The `SubmittedTransaction` contains `Fetch` and `LookupByKey` nodes as it comes directly from the DAML Engine.\r\nWe could remove these nodes as a pre-commit step after computing and supplying the blinding info, but it would still be contained within this class.",
        "createdAt" : "2020-11-18T16:45:08Z",
        "updatedAt" : "2020-11-18T16:45:08Z",
        "lastEditedBy" : "eb431011-3221-41ae-bf30-e72dde278004",
        "tags" : [
        ]
      },
      {
        "id" : "66db85d4-0dc2-4c15-8afe-a920f2f010a5",
        "parentId" : "d911e2b7-cbfd-4479-8219-a7e2d152e628",
        "authorId" : "1d70ec7b-8793-4cc6-95c8-fac6f7816dcc",
        "body" : "Right. I think it's just simpler to avoid implementing this storage reduction altogether in this unified-ledger-and-indexer case, as we don't really need it here. Ty, I'll fix the comment in the next PRs.",
        "createdAt" : "2020-11-18T17:21:31Z",
        "updatedAt" : "2020-11-18T17:21:31Z",
        "lastEditedBy" : "1d70ec7b-8793-4cc6-95c8-fac6f7816dcc",
        "tags" : [
        ]
      }
    ],
    "commit" : "6bb560fda3993e300f5da71cea86e8b3606ff755",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +369,373 @@          _ => {\n            val divulgedContracts = Nil\n            val blindingInfo = None // Currently derived from Fetch and LookupByKey nodes, soon pre-computed\n\n            val preparedInsert = ledgerDao.prepareTransactionInsert("
  },
  {
    "id" : "ebdaf02e-d7b0-4055-a0c0-49567b3b54a5",
    "prId" : 7941,
    "prUrl" : "https://github.com/digital-asset/daml/pull/7941",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b1f61369-e0f7-4660-a243-a2ebe86d3756",
        "parentId" : null,
        "authorId" : "181bcece-33df-41af-887d-5d5f51beb543",
        "body" : "Likewise, does this need a default?\r\n\r\nIf it's just for tests, I'd rather the tests were updated to be explicit.",
        "createdAt" : "2020-11-16T09:44:23Z",
        "updatedAt" : "2020-11-16T10:21:10Z",
        "lastEditedBy" : "181bcece-33df-41af-887d-5d5f51beb543",
        "tags" : [
        ]
      },
      {
        "id" : "ba38bca0-5d2e-40b0-a3ad-ef0215e14014",
        "parentId" : "b1f61369-e0f7-4660-a243-a2ebe86d3756",
        "authorId" : "1d70ec7b-8793-4cc6-95c8-fac6f7816dcc",
        "body" : "It's not just for tests but I have made the value explicit in the test functions.",
        "createdAt" : "2020-11-16T10:21:35Z",
        "updatedAt" : "2020-11-16T10:21:35Z",
        "lastEditedBy" : "1d70ec7b-8793-4cc6-95c8-fac6f7816dcc",
        "tags" : [
        ]
      }
    ],
    "commit" : "95c4c433a5f4aada404726e1ea0950d65e1694f7",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +77,81 @@      metrics: Metrics,\n      lfValueTranslationCache: LfValueTranslation.Cache,\n      validatePartyAllocation: Boolean = false,\n  )(implicit mat: Materializer, loggingContext: LoggingContext)\n      extends ResourceOwner[Ledger] {"
  },
  {
    "id" : "c8baa910-46bf-4c21-9aeb-aa94ecbe2e58",
    "prId" : 7200,
    "prUrl" : "https://github.com/digital-asset/daml/pull/7200",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "00f79486-5fe9-4392-bff1-5234d70fa250",
        "parentId" : null,
        "authorId" : "181bcece-33df-41af-887d-5d5f51beb543",
        "body" : "Nice.",
        "createdAt" : "2020-08-21T11:08:45Z",
        "updatedAt" : "2020-08-21T13:01:52Z",
        "lastEditedBy" : "181bcece-33df-41af-887d-5d5f51beb543",
        "tags" : [
        ]
      },
      {
        "id" : "92f9e102-c081-4b5a-a606-1dfa3acf30bd",
        "parentId" : "00f79486-5fe9-4392-bff1-5234d70fa250",
        "authorId" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "body" : "Thanks!",
        "createdAt" : "2020-08-21T11:19:10Z",
        "updatedAt" : "2020-08-21T13:01:52Z",
        "lastEditedBy" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "tags" : [
        ]
      }
    ],
    "commit" : "b117799f780981a359552cce2b3414250cc75823",
    "line" : 50,
    "diffHunk" : "@@ -1,1 +90,94 @@        }\n        retrievedLedgerId <- Resource.fromFuture(dao.lookupLedgerId())\n        ledgerId <- Resource.fromFuture(retrievedLedgerId.fold(initialize(dao))(resume))\n        ledgerEnd <- Resource.fromFuture(dao.lookupLedgerEnd())\n        ledgerConfig <- Resource.fromFuture(dao.lookupLedgerConfiguration())"
  }
]