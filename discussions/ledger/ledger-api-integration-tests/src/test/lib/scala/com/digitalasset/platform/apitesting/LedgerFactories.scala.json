[
  {
    "id" : "4872eff8-3ac8-4c79-8a4b-d3661b61480b",
    "prId" : 1171,
    "prUrl" : "https://github.com/digital-asset/daml/pull/1171",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3310da3d-43cc-4bc9-9bcf-11c3c17bc051",
        "parentId" : null,
        "authorId" : "e316b0c3-3da9-495c-b0fe-7fb96d032e37",
        "body" : "üëç ",
        "createdAt" : "2019-05-16T08:12:24Z",
        "updatedAt" : "2019-05-28T09:31:39Z",
        "lastEditedBy" : "e316b0c3-3da9-495c-b0fe-7fb96d032e37",
        "tags" : [
        ]
      }
    ],
    "commit" : "0375ea95bfb713575e4b4fa54cb2011cbc90f244",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +59,63 @@  def createRemoteApiProxyResource(config: PlatformApplications.Config)(\n      implicit esf: ExecutionSequencerFactory): Resource[LedgerContext.SingleChannelContext] = {\n    require(config.remoteApiEndpoint.isDefined, \"config.remoteApiEndpoint has to be set\")\n    val endpoint = config.remoteApiEndpoint.get\n    val packageIds = config.darFiles.map(getPackageIdOrThrow)"
  },
  {
    "id" : "47337b93-6db8-4e40-a73e-c8fd78334c8a",
    "prId" : 1171,
    "prUrl" : "https://github.com/digital-asset/daml/pull/1171",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "424e8fa2-e425-4809-ac24-611530653b70",
        "parentId" : null,
        "authorId" : "e316b0c3-3da9-495c-b0fe-7fb96d032e37",
        "body" : "you could assert on the `host` and `port` too",
        "createdAt" : "2019-05-20T15:27:09Z",
        "updatedAt" : "2019-05-28T09:31:39Z",
        "lastEditedBy" : "e316b0c3-3da9-495c-b0fe-7fb96d032e37",
        "tags" : [
        ]
      },
      {
        "id" : "73b9adc1-7f5d-45bd-a206-46f891b4363e",
        "parentId" : "424e8fa2-e425-4809-ac24-611530653b70",
        "authorId" : "522e06ae-6149-4367-9085-2f43d294bb59",
        "body" : "Why? They are not `Option[*]`, hence should have meaningful values. In worst case we'd have 0 as port and empty string as host, which will just make it fail at runtime.",
        "createdAt" : "2019-05-22T08:48:27Z",
        "updatedAt" : "2019-05-28T09:31:39Z",
        "lastEditedBy" : "522e06ae-6149-4367-9085-2f43d294bb59",
        "tags" : [
        ]
      },
      {
        "id" : "7e943655-042c-4d64-9896-2bcba0ed424f",
        "parentId" : "424e8fa2-e425-4809-ac24-611530653b70",
        "authorId" : "e316b0c3-3da9-495c-b0fe-7fb96d032e37",
        "body" : "`host` can be empty and `port` can be negative. It's nit-picking, I just thought I mention it.",
        "createdAt" : "2019-05-27T14:38:38Z",
        "updatedAt" : "2019-05-28T09:31:39Z",
        "lastEditedBy" : "e316b0c3-3da9-495c-b0fe-7fb96d032e37",
        "tags" : [
        ]
      }
    ],
    "commit" : "0375ea95bfb713575e4b4fa54cb2011cbc90f244",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +59,63 @@  def createRemoteApiProxyResource(config: PlatformApplications.Config)(\n      implicit esf: ExecutionSequencerFactory): Resource[LedgerContext.SingleChannelContext] = {\n    require(config.remoteApiEndpoint.isDefined, \"config.remoteApiEndpoint has to be set\")\n    val endpoint = config.remoteApiEndpoint.get\n    val packageIds = config.darFiles.map(getPackageIdOrThrow)"
  }
]