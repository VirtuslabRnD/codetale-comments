[
  {
    "id" : "63b5f1b0-8b7c-493f-a77c-a29a46c66c49",
    "prId" : 45231,
    "prUrl" : "https://github.com/ansible/ansible/pull/45231#pullrequestreview-152575021",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a9041c63-0130-4914-919c-f7eac67e8ab2",
        "parentId" : null,
        "authorId" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "body" : "~~why a list of one `None` element? and empty list would be false/skipped~~  nvmd, read the code in the other path, this is just matching that",
        "createdAt" : "2018-09-05T16:10:50Z",
        "updatedAt" : "2018-09-05T16:12:00Z",
        "lastEditedBy" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "tags" : [
        ]
      }
    ],
    "commit" : "f63c356b64f4becce4e93489306de13f2e7d8aff",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +518,522 @@                # This task will be skipped later due to this, so we just setup\n                # a dummy array for the later code so it doesn't fail\n                items = [None]\n        else:\n            has_loop = False"
  },
  {
    "id" : "0ea2d1d0-ced7-42e1-9c10-a1207492f9be",
    "prId" : 46483,
    "prUrl" : "https://github.com/ansible/ansible/pull/46483#pullrequestreview-174449988",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "96532a91-82e7-48a0-93cf-6d1d35dd46d1",
        "parentId" : null,
        "authorId" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "body" : "as in previous comment, don't change `role_names` the new variable provides what you want, don't change the existing variable as people are using the current behavior.",
        "createdAt" : "2018-11-13T15:35:58Z",
        "updatedAt" : "2018-11-15T10:10:35Z",
        "lastEditedBy" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "tags" : [
        ]
      },
      {
        "id" : "5c8113bf-3975-49df-bac1-25d543cb1e05",
        "parentId" : "96532a91-82e7-48a0-93cf-6d1d35dd46d1",
        "authorId" : "fe1f9457-aab9-4612-bd2e-a48e5de4ab03",
        "body" : "The functionality of role_names remains the same before- and after-change; I merely moved the primary point of assignment to `ansible_play_role_names` and made `role_names` a copy from that.\r\n\r\nThis behavior is a copy from lines 491-493: https://github.com/ansible/ansible/blob/884ff74353a327165b9f4afcdae5081d006173ec/lib/ansible/vars/manager.py#L491-L493",
        "createdAt" : "2018-11-13T16:00:03Z",
        "updatedAt" : "2018-11-15T10:10:35Z",
        "lastEditedBy" : "fe1f9457-aab9-4612-bd2e-a48e5de4ab03",
        "tags" : [
        ]
      },
      {
        "id" : "76211301-9150-4d24-a01f-339f6c997dcb",
        "parentId" : "96532a91-82e7-48a0-93cf-6d1d35dd46d1",
        "authorId" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "body" : "ah, misread, thought you were making it same as ansible_role_names",
        "createdAt" : "2018-11-13T16:08:47Z",
        "updatedAt" : "2018-11-15T10:10:35Z",
        "lastEditedBy" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "tags" : [
        ]
      }
    ],
    "commit" : "06f71d5541eb1f30d896ad5135e893ecbdb84e97",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +467,471 @@\n            # DEPRECATED: role_names should be deprecated in favor of ansible_role_names or ansible_play_role_names\n            variables['role_names'] = variables['ansible_play_role_names']\n\n            variables['ansible_play_name'] = play.get_name()"
  },
  {
    "id" : "60dfc1e8-92e3-4b45-9e55-c20743a01358",
    "prId" : 58400,
    "prUrl" : "https://github.com/ansible/ansible/pull/58400#pullrequestreview-264879301",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e509e491-b82b-4f1f-b630-12385a39ac6a",
        "parentId" : null,
        "authorId" : "311820dd-fcb9-46df-a201-9c0e7d6fac58",
        "body" : "There was also some discussion about whether we could somehow hang the cache off the play object instead of adding the new optional args everywhere. Left as an exercise for the reader, but the new plumbing for this is the \"ickiest\" part of this change IMO.",
        "createdAt" : "2019-07-19T00:02:50Z",
        "updatedAt" : "2019-07-22T17:46:32Z",
        "lastEditedBy" : "311820dd-fcb9-46df-a201-9c0e7d6fac58",
        "tags" : [
        ]
      },
      {
        "id" : "7eb1ca8c-f67a-4060-ad66-fe89b2629518",
        "parentId" : "e509e491-b82b-4f1f-b630-12385a39ac6a",
        "authorId" : "4b69a0b5-ac6f-45e9-9507-dd1385182f29",
        "body" : "Yeah, I don't really disagree.  I'm not necessarily a huge fan of these extra args either, but it didn't feel right hanging it off the play either.",
        "createdAt" : "2019-07-22T15:04:59Z",
        "updatedAt" : "2019-07-22T17:46:32Z",
        "lastEditedBy" : "4b69a0b5-ac6f-45e9-9507-dd1385182f29",
        "tags" : [
        ]
      }
    ],
    "commit" : "8864ba16142f8639a88b58868fcc97c9520f93cc",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +142,146 @@        self._inventory = inventory\n\n    def get_vars(self, play=None, host=None, task=None, include_hostvars=True, include_delegate_to=True, use_cache=True,\n                 _hosts=None, _hosts_all=None):\n        '''"
  },
  {
    "id" : "06e9f310-aeab-4f36-bba8-2d7373d9240d",
    "prId" : 66102,
    "prUrl" : "https://github.com/ansible/ansible/pull/66102#pullrequestreview-339496220",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bc950110-d905-45eb-afa7-723b89d7c426",
        "parentId" : null,
        "authorId" : "4b69a0b5-ac6f-45e9-9507-dd1385182f29",
        "body" : "This is actually one reason you want to use `MutableMapping` over subclassing `dict`.  `.get()` does not use `.__getitem__()` in `dict`. Both methods duplicate code for performance:\r\n\r\n```pycon\r\n>>> class VarsWithSources(dict):\r\n...     def __getitem__(self, key):\r\n...         val = super(VarsWithSources, self).__getitem__(key)\r\n...         print(('__getitem__', val))\r\n...         return val\r\n...\r\n>>> v = VarsWithSources()\r\n>>> v['foo'] = 'bar'\r\n>>> v['foo']\r\n('__getitem__', 'bar')\r\n'bar'\r\n>>> v.get('foo')\r\n'bar'\r\n```\r\n\r\nNotice that `.get()` doesn't cause the print to happen.  As such, your implementation as is will only work with some accesses of keys, and not others.",
        "createdAt" : "2020-01-07T20:45:11Z",
        "updatedAt" : "2020-01-07T23:55:41Z",
        "lastEditedBy" : "4b69a0b5-ac6f-45e9-9507-dd1385182f29",
        "tags" : [
        ]
      }
    ],
    "commit" : "2a907e9f02be19c3ae12d362114c36bcb595f0c5",
    "line" : 199,
    "diffHunk" : "@@ -1,1 +707,711 @@        return self.sources.get(key, None)\n\n    def __getitem__(self, key):\n        val = self.data[key]\n        # See notes in the VarsWithSources docstring for caveats and limitations of the source tracking"
  },
  {
    "id" : "9aad9702-9e79-4502-a530-3275f0e5e32d",
    "prId" : 66102,
    "prUrl" : "https://github.com/ansible/ansible/pull/66102#pullrequestreview-339575593",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "46d6cb3e-9b44-443b-981d-326bf724ef44",
        "parentId" : null,
        "authorId" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "body" : "```suggestion\r\n        val = self.data[key]\r\n        \r\n        # See notes in VarsWithSources' docstring for caveats and limitations of the source tracking\r\n```",
        "createdAt" : "2020-01-07T23:41:11Z",
        "updatedAt" : "2020-01-07T23:55:41Z",
        "lastEditedBy" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "tags" : [
        ]
      }
    ],
    "commit" : "2a907e9f02be19c3ae12d362114c36bcb595f0c5",
    "line" : 200,
    "diffHunk" : "@@ -1,1 +708,712 @@\n    def __getitem__(self, key):\n        val = self.data[key]\n        # See notes in the VarsWithSources docstring for caveats and limitations of the source tracking\n        display.debug(\"variable '%s' from source: %s\" % (key, self.sources.get(key, \"unknown\")))"
  }
]