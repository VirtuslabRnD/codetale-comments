[
  {
    "id" : "8ee97543-1a91-4f22-9635-700dc08cf288",
    "prId" : 28729,
    "prUrl" : "https://github.com/ansible/ansible/pull/28729#pullrequestreview-63106079",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2cfa05cb-83df-4f1c-a17a-4814faa758df",
        "parentId" : null,
        "authorId" : "ec9da6b6-6dc2-43a3-a1bc-12054cab8521",
        "body" : "@bcoca Typo: \"availabel.\"",
        "createdAt" : "2017-09-15T17:13:09Z",
        "updatedAt" : "2017-09-15T17:13:09Z",
        "lastEditedBy" : "ec9da6b6-6dc2-43a3-a1bc-12054cab8521",
        "tags" : [
        ]
      }
    ],
    "commit" : "2bee5eb0624da2b82e2268efaa9aa02307aa4c58",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +269,273 @@                    # only if no plugin processed files should we show errors.\n                    if C.INVENTORY_UNPARSED_IS_FAILED:\n                        msg = \"Could not parse inventory source %s with availabel plugins:\\n\" % source\n                        for fail in failures:\n                            msg += 'Plugin %s failed: %s\\n' % (fail['plugin'], to_native(fail['exc']))"
  },
  {
    "id" : "00c4ad4a-93b1-436d-8f65-d714bed5d12c",
    "prId" : 57489,
    "prUrl" : "https://github.com/ansible/ansible/pull/57489#pullrequestreview-246652181",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2ac66f2d-fad0-4e7b-82af-06754123c8da",
        "parentId" : null,
        "authorId" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "body" : "unsure if this will survive a `meta: refresh_inventory` as the inventory hosts will get new uuids, using names might be a more robust choice",
        "createdAt" : "2019-06-06T15:36:03Z",
        "updatedAt" : "2019-06-06T15:36:27Z",
        "lastEditedBy" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "tags" : [
        ]
      },
      {
        "id" : "a3ed5f56-267b-46c8-960f-da5c664250e8",
        "parentId" : "2ac66f2d-fad0-4e7b-82af-06754123c8da",
        "authorId" : "4b69a0b5-ac6f-45e9-9507-dd1385182f29",
        "body" : "This shouldn't be a change in behavior.  In the end, it does the same thing as it did previously.  The `__eq__` check in `Host` compares the `_uuid`.  This just short circuits some things to make the comparison faster here.",
        "createdAt" : "2019-06-06T15:37:21Z",
        "updatedAt" : "2019-06-06T15:37:21Z",
        "lastEditedBy" : "4b69a0b5-ac6f-45e9-9507-dd1385182f29",
        "tags" : [
        ]
      }
    ],
    "commit" : "223b2686636e2bb51ad4aad7ad4b9d720648b5b6",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +362,366 @@                    # exclude hosts not in a subset, if defined\n                    subset_uuids = [s._uuid for s in self._evaluate_patterns(self._subset)]\n                    hosts = [h for h in hosts if h._uuid in subset_uuids]\n\n                if not ignore_restrictions and self._restriction:"
  },
  {
    "id" : "5a023c4a-90d5-45d3-b4e5-a24af41931a0",
    "prId" : 58400,
    "prUrl" : "https://github.com/ansible/ansible/pull/58400#pullrequestreview-264874289",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b44b5dfd-38a0-4d2d-84a4-56f5ab5c5b31",
        "parentId" : null,
        "authorId" : "311820dd-fcb9-46df-a201-9c0e7d6fac58",
        "body" : "I'm assuming there's some empirically-derived performance benefit to the list replacement instead of reassignment, but it's not obvious to me what it is... Probably deserves a comment over this section if that's the case so any future changes propagate the pattern.",
        "createdAt" : "2019-07-18T20:53:20Z",
        "updatedAt" : "2019-07-22T17:46:32Z",
        "lastEditedBy" : "311820dd-fcb9-46df-a201-9c0e7d6fac58",
        "tags" : [
        ]
      },
      {
        "id" : "94b06cb5-23a0-45f4-90d5-43ca30cefade",
        "parentId" : "b44b5dfd-38a0-4d2d-84a4-56f5ab5c5b31",
        "authorId" : "4b69a0b5-ac6f-45e9-9507-dd1385182f29",
        "body" : "It's one of those things that I have brought along with me over the years. It's every so slightly faster, and produces at minimum 1 less malloc.  Honestly, my original commit for this said: `negligible perf improvement`",
        "createdAt" : "2019-07-22T14:58:01Z",
        "updatedAt" : "2019-07-22T17:46:32Z",
        "lastEditedBy" : "4b69a0b5-ac6f-45e9-9507-dd1385182f29",
        "tags" : [
        ]
      }
    ],
    "commit" : "8864ba16142f8639a88b58868fcc97c9520f93cc",
    "line" : 68,
    "diffHunk" : "@@ -1,1 +372,376 @@\n                patterns = split_host_pattern(pattern)\n                hosts[:] = self._evaluate_patterns(patterns)\n\n                # mainly useful for hostvars[host] access"
  },
  {
    "id" : "17a19a8d-5765-476f-b442-f78f1ef6e353",
    "prId" : 59758,
    "prUrl" : "https://github.com/ansible/ansible/pull/59758#pullrequestreview-268486297",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1ffc4151-28fa-431f-96c6-cd412671a77d",
        "parentId" : null,
        "authorId" : "94ae5814-8889-4328-9b58-745772997928",
        "body" : "As in https://github.com/ansible/ansible/pull/59776, can we get an `IndexError` here? Not a blocker but since you are 'here', if you want to fix.",
        "createdAt" : "2019-07-30T15:39:19Z",
        "updatedAt" : "2019-08-06T12:15:19Z",
        "lastEditedBy" : "94ae5814-8889-4328-9b58-745772997928",
        "tags" : [
        ]
      }
    ],
    "commit" : "c62836916915142c9e21b60b92f3bec9a8fe8048",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +615,619 @@                    continue\n\n                if x[0] == \"@\":\n                    b_limit_file = to_bytes(x[1:])\n                    if not os.path.exists(b_limit_file):"
  },
  {
    "id" : "ae79dda2-dfa8-4943-a035-653a3fb9183c",
    "prId" : 62442,
    "prUrl" : "https://github.com/ansible/ansible/pull/62442#pullrequestreview-289495777",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e2c17d25-05df-4891-a24d-79d7d9a4cf2f",
        "parentId" : null,
        "authorId" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "body" : "to avoid dual stripping, change to \r\n\r\n```\r\nres = []\r\nfor p in patterns:\r\n     p = p.strip()\r\n     if p:\r\n        res.append(p)\r\n\r\nreturn res\r\n```",
        "createdAt" : "2019-09-17T19:30:06Z",
        "updatedAt" : "2019-09-18T21:01:33Z",
        "lastEditedBy" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "tags" : [
        ]
      }
    ],
    "commit" : "37bbf1abc2dd75082121f04c075709949ccb54d0",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +131,135 @@            )\n\n    return [p.strip() for p in patterns if p.strip()]\n\n"
  },
  {
    "id" : "9ce97531-6ddb-4e13-b164-77946125b8ce",
    "prId" : 62679,
    "prUrl" : "https://github.com/ansible/ansible/pull/62679#pullrequestreview-294372910",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "987905d5-6b15-4273-ae9f-f41722c9d9d0",
        "parentId" : null,
        "authorId" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "body" : "Not something you can use now, but since I know the rdundancy of calling `strip()` twice probably drove you nuts.  In python-3.8+, you can use the walrus operator:\r\n```\r\nreturn [stripped_pat for pat in patterns if (stripped_pat := pat.strip())]\r\n```\r\nThat particular example might be a bit obfuscated, though.  I'm not sure if it's just the unfamiliarity of the walrus operator that makes it less readable or that it leads to too much going on in too little space.  Time will tell.",
        "createdAt" : "2019-09-20T23:21:01Z",
        "updatedAt" : "2019-09-20T23:21:01Z",
        "lastEditedBy" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "tags" : [
        ]
      },
      {
        "id" : "5e30b7ef-ce27-442f-8990-f5ceb2012d59",
        "parentId" : "987905d5-6b15-4273-ae9f-f41722c9d9d0",
        "authorId" : "2f8132dc-12f8-44dc-8b97-1cf4c1616b68",
        "body" : "Yes, I did too many permutations and measurements to avoid the \"double stripping\" but didn't see any significant performance difference.\r\n\r\nI have seen the walrus operator a bit but don't fully get it yet. I have seen a few examples (like this one) that seem hard to fully understand. So I either have more reading to do, or the syntax is too dense/magic.\r\n\r\nAs you said, time will tell. ðŸ˜„ Thank you for the suggestion, though.",
        "createdAt" : "2019-09-27T14:43:57Z",
        "updatedAt" : "2019-09-27T14:43:58Z",
        "lastEditedBy" : "2f8132dc-12f8-44dc-8b97-1cf4c1616b68",
        "tags" : [
        ]
      }
    ],
    "commit" : "556ee11b4363a09fbe8de4c5e6a2b656220bad1d",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +131,135 @@            )\n\n    return [p.strip() for p in patterns if p.strip()]\n\n"
  }
]