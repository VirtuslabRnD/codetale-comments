[
  {
    "id" : "89d4b12a-8012-4030-9fe6-0b396d4eab53",
    "prId" : 43352,
    "prUrl" : "https://github.com/ansible/ansible/pull/43352#pullrequestreview-149802345",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "99ac5212-03dc-4681-9d9e-a20d18706f68",
        "parentId" : null,
        "authorId" : "4abe4d0b-0492-400c-bd28-ab69d445fa0a",
        "body" : "I think it would make sense to move the actual validation logic to the client, and just call it from here. Other than that lgtm",
        "createdAt" : "2018-08-27T17:20:11Z",
        "updatedAt" : "2018-11-15T09:37:45Z",
        "lastEditedBy" : "4abe4d0b-0492-400c-bd28-ab69d445fa0a",
        "tags" : [
        ]
      }
    ],
    "commit" : "bd203fa2a1ee568b57b37cadad257e82ac3ddaef",
    "line" : 86,
    "diffHunk" : "@@ -1,1 +141,145 @@        })\n\n    def validate(self, resource):\n        try:\n            warnings, errors = self.client.validate(resource, self.params['validate'].get('version'), self.params['validate'].get('strict'))"
  },
  {
    "id" : "e9da4235-f378-4910-aa5d-36ef8475036d",
    "prId" : 45373,
    "prUrl" : "https://github.com/ansible/ansible/pull/45373#pullrequestreview-154000192",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f8a6d9a1-854a-4880-b9ef-bf6d371163a8",
        "parentId" : null,
        "authorId" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "body" : "Why isn't this being imported at the top of the file?",
        "createdAt" : "2018-09-10T16:37:42Z",
        "updatedAt" : "2018-09-10T16:37:42Z",
        "lastEditedBy" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "tags" : [
        ]
      },
      {
        "id" : "dacd7c3b-2d25-496f-9db6-c65ec2a2ec6b",
        "parentId" : "f8a6d9a1-854a-4880-b9ef-bf6d371163a8",
        "authorId" : "183d9a20-6a5e-4432-9fe9-9fd6fe9514fb",
        "body" : "It's only needed for this one thing so makes sense to only import on demand? But if that doesn't make sense then it can be moved.",
        "createdAt" : "2018-09-10T23:15:09Z",
        "updatedAt" : "2018-09-10T23:15:09Z",
        "lastEditedBy" : "183d9a20-6a5e-4432-9fe9-9fd6fe9514fb",
        "tags" : [
        ]
      }
    ],
    "commit" : "5117fe65b2300ab60e8ed181098ba7bedaa6d164",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +211,215 @@                k8s_obj = dict_merge(existing.to_dict(), definition)\n            else:\n                from distutils.version import LooseVersion\n                if LooseVersion(self.openshift_version) < LooseVersion(\"0.6.2\"):\n                    if self.params['merge_type']:"
  },
  {
    "id" : "a9819094-a628-480d-b3f6-0799550e6541",
    "prId" : 45373,
    "prUrl" : "https://github.com/ansible/ansible/pull/45373#pullrequestreview-153863619",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "562576b4-fac8-4b7a-8ed9-3dd4ef007db7",
        "parentId" : null,
        "authorId" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "body" : "Note: It's nicer code organization to do parameter validation and normalization upfront rather than at usage.  So it would be better to move this version checking and default setting to somewhere soon after the KubernetesAnsibleModule is created.",
        "createdAt" : "2018-09-10T16:45:17Z",
        "updatedAt" : "2018-09-10T16:45:17Z",
        "lastEditedBy" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "tags" : [
        ]
      }
    ],
    "commit" : "5117fe65b2300ab60e8ed181098ba7bedaa6d164",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +219,223 @@                                                             namespace)\n                else:\n                    for merge_type in self.params['merge_type'] or ['strategic-merge', 'merge']:\n                        k8s_obj, error = self.patch_resource(resource, definition, existing, name,\n                                                             namespace, merge_type=merge_type)"
  },
  {
    "id" : "d03e18c5-22ea-46e3-a1d5-26e559d4b746",
    "prId" : 47493,
    "prUrl" : "https://github.com/ansible/ansible/pull/47493#pullrequestreview-174091332",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "eb5e5673-6eab-4667-bac9-b70975e05ce4",
        "parentId" : null,
        "authorId" : "4abe4d0b-0492-400c-bd28-ab69d445fa0a",
        "body" : "We could update the bool evaluation on the result object in the client to fix this pretty easily",
        "createdAt" : "2018-10-25T11:48:26Z",
        "updatedAt" : "2018-10-25T11:57:35Z",
        "lastEditedBy" : "4abe4d0b-0492-400c-bd28-ab69d445fa0a",
        "tags" : [
        ]
      },
      {
        "id" : "2db1f9b5-b571-436f-bed6-1a3d2cab3fa2",
        "parentId" : "eb5e5673-6eab-4667-bac9-b70975e05ce4",
        "authorId" : "183d9a20-6a5e-4432-9fe9-9fd6fe9514fb",
        "body" : "That would be pretty useful",
        "createdAt" : "2018-10-25T12:09:33Z",
        "updatedAt" : "2018-10-25T12:09:34Z",
        "lastEditedBy" : "183d9a20-6a5e-4432-9fe9-9fd6fe9514fb",
        "tags" : [
        ]
      },
      {
        "id" : "378fa960-b840-4ec3-bb9e-64d3a7df4ffc",
        "parentId" : "eb5e5673-6eab-4667-bac9-b70975e05ce4",
        "authorId" : "183d9a20-6a5e-4432-9fe9-9fd6fe9514fb",
        "body" : "However, relying on that fix would mean not supporting older versions - there's no reason why `wait` can't work with 0.6.0 for example. So while I'd welcome the fix, I won't be changing this.",
        "createdAt" : "2018-11-12T11:47:46Z",
        "updatedAt" : "2018-11-12T11:47:46Z",
        "lastEditedBy" : "183d9a20-6a5e-4432-9fe9-9fd6fe9514fb",
        "tags" : [
        ]
      },
      {
        "id" : "2ff198b1-ad27-4263-87ce-e2c26b03d5d8",
        "parentId" : "eb5e5673-6eab-4667-bac9-b70975e05ce4",
        "authorId" : "4abe4d0b-0492-400c-bd28-ab69d445fa0a",
        "body" : "Good point",
        "createdAt" : "2018-11-12T21:01:17Z",
        "updatedAt" : "2018-11-12T21:01:17Z",
        "lastEditedBy" : "4abe4d0b-0492-400c-bd28-ab69d445fa0a",
        "tags" : [
        ]
      }
    ],
    "commit" : "f20c75b9e1e3ce8196afc2b7d6b5f78003ebd9b0",
    "line" : 138,
    "diffHunk" : "@@ -1,1 +321,325 @@\n        def _deployment_ready(deployment):\n            # FIXME: frustratingly bool(deployment.status) is True even if status is empty\n            # Furthermore deployment.status.availableReplicas == deployment.status.replicas == None if status is empty\n            return (deployment.status and deployment.status.replicas is not None and"
  },
  {
    "id" : "3fc3b555-29bb-4e36-98a4-c5bbebc8bed5",
    "prId" : 47493,
    "prUrl" : "https://github.com/ansible/ansible/pull/47493#pullrequestreview-169073455",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0892686d-9b1c-494f-a9f5-c687e9201418",
        "parentId" : null,
        "authorId" : "4abe4d0b-0492-400c-bd28-ab69d445fa0a",
        "body" : "Is there any kind of generic predicate we could insert here? We could also allow the user to specify a predicate, as the `kubectl wait` command now does. We could also implement a wait function that attempts parity with `kubectl` in the client and just make use of it here, if you think that would make sense.",
        "createdAt" : "2018-10-25T11:50:34Z",
        "updatedAt" : "2018-10-25T11:57:35Z",
        "lastEditedBy" : "4abe4d0b-0492-400c-bd28-ab69d445fa0a",
        "tags" : [
        ]
      },
      {
        "id" : "80f7f784-e0b8-4d1b-bcd7-d28abbd35731",
        "parentId" : "0892686d-9b1c-494f-a9f5-c687e9201418",
        "authorId" : "183d9a20-6a5e-4432-9fe9-9fd6fe9514fb",
        "body" : "Not that I could think of, everything behaves so differently. I'm not sure I want to overcomplicate this too much by allowing users to specify predicates, as then we'd likely need to go down the route of go specification handling.\r\n\r\nThe problem would still remain that the predicate only really works on the given resource kind (it would be nice to wait for endpoints to be up for a service to be ready)",
        "createdAt" : "2018-10-25T12:12:09Z",
        "updatedAt" : "2018-10-25T12:12:09Z",
        "lastEditedBy" : "183d9a20-6a5e-4432-9fe9-9fd6fe9514fb",
        "tags" : [
        ]
      },
      {
        "id" : "f18383b4-265c-4914-90e9-2e0c2349a390",
        "parentId" : "0892686d-9b1c-494f-a9f5-c687e9201418",
        "authorId" : "4abe4d0b-0492-400c-bd28-ab69d445fa0a",
        "body" : "Yeah, the way kubectl did it was to allow the user to specify a condition in the status field of an object. I think (even if we don't add this now) we'll end up needing to allow some flexibility in the wait condition. We could also ignore kubectl wait and just allow the user to provide a JSON path and value, and we could just wait for the path to equal the value in the requested object. Regardless we should still have good defaults for the most common resources, so if we end up needing that flexibility we could probably just add another `wait_condition` object down the line.",
        "createdAt" : "2018-10-25T12:21:52Z",
        "updatedAt" : "2018-10-25T12:21:52Z",
        "lastEditedBy" : "4abe4d0b-0492-400c-bd28-ab69d445fa0a",
        "tags" : [
        ]
      },
      {
        "id" : "8e88b855-7ef6-4f6a-a909-80c45c132536",
        "parentId" : "0892686d-9b1c-494f-a9f5-c687e9201418",
        "authorId" : "183d9a20-6a5e-4432-9fe9-9fd6fe9514fb",
        "body" : "I've given this thought, and I think this implementation is good enough for the general case where you want to use k8s to run through a list of resources (so you can set `wait: yes` and it will work the same for all resource kinds)\r\n\r\nIn the specific case that you want to do something non-standard, you can just do\r\n\r\n```\r\n- name: wait for a service's endpoints to be available\r\n  k8s_facts:\r\n    kind: Endpoint\r\n    namespace: wait\r\n    name: wait-svc\r\n  register: wait-svc-ep\r\n  failed_when: not wait-svc-ep.resources\r\n  retries: 20\r\n  delay: 6\r\n```",
        "createdAt" : "2018-10-27T23:27:52Z",
        "updatedAt" : "2018-10-27T23:28:13Z",
        "lastEditedBy" : "183d9a20-6a5e-4432-9fe9-9fd6fe9514fb",
        "tags" : [
        ]
      }
    ],
    "commit" : "f20c75b9e1e3ce8196afc2b7d6b5f78003ebd9b0",
    "line" : 163,
    "diffHunk" : "@@ -1,1 +346,350 @@        kind = definition['kind']\n        if state == 'present':\n            predicate = waiter.get(kind, lambda x: True)\n        else:\n            predicate = _resource_absent"
  },
  {
    "id" : "37257de7-2357-4e07-8c72-e8b4cfaf62c6",
    "prId" : 49053,
    "prUrl" : "https://github.com/ansible/ansible/pull/49053#pullrequestreview-254178750",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "61a4b599-71d7-41ee-aead-aeb207e3d0e7",
        "parentId" : null,
        "authorId" : "4abe4d0b-0492-400c-bd28-ab69d445fa0a",
        "body" : "One thing to note, merge_type might not work with apply, we might hard code the apply merge strategy to merge (since strategic merge patch would need to know the merge key to intelligently generate the patch)",
        "createdAt" : "2018-11-25T16:55:43Z",
        "updatedAt" : "2019-06-29T01:12:44Z",
        "lastEditedBy" : "4abe4d0b-0492-400c-bd28-ab69d445fa0a",
        "tags" : [
        ]
      },
      {
        "id" : "8157cf71-a528-4b8c-9e45-ed3e5b2e0aed",
        "parentId" : "61a4b599-71d7-41ee-aead-aeb207e3d0e7",
        "authorId" : "183d9a20-6a5e-4432-9fe9-9fd6fe9514fb",
        "body" : "Yes, this is true, I was thinking that merge_type and apply should be mutually exclusive, I just clearly forgot to actually do that!",
        "createdAt" : "2018-11-25T22:03:47Z",
        "updatedAt" : "2019-06-29T01:12:44Z",
        "lastEditedBy" : "183d9a20-6a5e-4432-9fe9-9fd6fe9514fb",
        "tags" : [
        ]
      },
      {
        "id" : "1064201d-840c-4a11-a8a0-197057c048ff",
        "parentId" : "61a4b599-71d7-41ee-aead-aeb207e3d0e7",
        "authorId" : "183d9a20-6a5e-4432-9fe9-9fd6fe9514fb",
        "body" : "I should also make sure that the crd test suite works as well with apply as it does with merge_yaml",
        "createdAt" : "2018-11-25T22:04:33Z",
        "updatedAt" : "2019-06-29T01:12:44Z",
        "lastEditedBy" : "183d9a20-6a5e-4432-9fe9-9fd6fe9514fb",
        "tags" : [
        ]
      },
      {
        "id" : "d983ab37-9545-4df5-a32e-b251e75b7133",
        "parentId" : "61a4b599-71d7-41ee-aead-aeb207e3d0e7",
        "authorId" : "4abe4d0b-0492-400c-bd28-ab69d445fa0a",
        "body" : "Did we still want to do this?",
        "createdAt" : "2019-06-25T18:29:44Z",
        "updatedAt" : "2019-06-29T01:12:44Z",
        "lastEditedBy" : "4abe4d0b-0492-400c-bd28-ab69d445fa0a",
        "tags" : [
        ]
      }
    ],
    "commit" : "12a1f181ce200fc217d3186fe0fb68cf99e5ca8b",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +113,117 @@                self.fail_json(msg=missing_required_lib(\"openshift >= 0.7.2\", reason=\"for append_hash\"),\n                               exception=K8S_CONFIG_HASH_IMP_ERR)\n        if self.params['merge_type']:\n            if LooseVersion(self.openshift_version) < LooseVersion(\"0.6.2\"):\n                self.fail_json(msg=missing_required_lib(\"openshift >= 0.6.2\", reason=\"for merge_type\"))"
  },
  {
    "id" : "aacd0e6f-a052-4e73-b613-6fadbcd8cc4c",
    "prId" : 49053,
    "prUrl" : "https://github.com/ansible/ansible/pull/49053#pullrequestreview-254178750",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "708a1ebe-21da-4b14-92a8-cbb13ca78249",
        "parentId" : null,
        "authorId" : "4abe4d0b-0492-400c-bd28-ab69d445fa0a",
        "body" : "We probably shouldn't make this call when `apply` is set and state is `present`, as we'll be duplicating that `get` which could generate a lot of unnecessary API activity (especially for something like an operator which will be calling this a lot)",
        "createdAt" : "2019-06-25T18:10:44Z",
        "updatedAt" : "2019-06-29T01:12:44Z",
        "lastEditedBy" : "4abe4d0b-0492-400c-bd28-ab69d445fa0a",
        "tags" : [
        ]
      },
      {
        "id" : "0112ddbd-a9ac-4237-a286-d6a6089effd7",
        "parentId" : "708a1ebe-21da-4b14-92a8-cbb13ca78249",
        "authorId" : "4abe4d0b-0492-400c-bd28-ab69d445fa0a",
        "body" : "Hmm, maybe scratch this one, as we will still need `existing` for computing the diffs. ",
        "createdAt" : "2019-06-25T18:18:23Z",
        "updatedAt" : "2019-06-29T01:12:44Z",
        "lastEditedBy" : "4abe4d0b-0492-400c-bd28-ab69d445fa0a",
        "tags" : [
        ]
      }
    ],
    "commit" : "12a1f181ce200fc217d3186fe0fb68cf99e5ca8b",
    "line" : 70,
    "diffHunk" : "@@ -1,1 +242,246 @@            if namespace:\n                params['namespace'] = namespace\n            existing = resource.get(**params)\n        except NotFoundError:\n            # Remove traceback so that it doesn't show up in later failures"
  }
]