[
  {
    "id" : "f7681ed7-25f2-47a1-b1bd-b5bb65254566",
    "prId" : 51404,
    "prUrl" : "https://github.com/ansible/ansible/pull/51404#pullrequestreview-203429338",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a72a9343-a1bb-42ca-a164-8f2b938eb42d",
        "parentId" : null,
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "Isn't some code needed here as well?",
        "createdAt" : "2019-02-08T19:06:47Z",
        "updatedAt" : "2019-02-19T17:14:04Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      },
      {
        "id" : "9883cb31-4dc5-4b10-a8ca-97b74dda577a",
        "parentId" : "a72a9343-a1bb-42ca-a164-8f2b938eb42d",
        "authorId" : "2f8132dc-12f8-44dc-8b97-1cf4c1616b68",
        "body" : "I don't believe so. Since we aren't leveraging this option for Windows modules, we don't want to pass it along.",
        "createdAt" : "2019-02-13T20:24:35Z",
        "updatedAt" : "2019-02-19T17:14:04Z",
        "lastEditedBy" : "2f8132dc-12f8-44dc-8b97-1cf4c1616b68",
        "tags" : [
        ]
      }
    ],
    "commit" : "c99e04db468013bc68619e8fc907734ea6079cfe",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +64,68 @@            { \"shell_executable\", null },\n            { \"socket\", null },\n            { \"string_conversion_action\", null },\n            { \"syslog_facility\", null },\n            { \"tmpdir\", \"tmpdir\" },"
  },
  {
    "id" : "cbe975fd-af59-4599-bc7a-42153c719405",
    "prId" : 54699,
    "prUrl" : "https://github.com/ansible/ansible/pull/54699#pullrequestreview-221400747",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6ffac3c3-d3d0-4638-a356-8eaa46b23b50",
        "parentId" : null,
        "authorId" : "311820dd-fcb9-46df-a201-9c0e7d6fac58",
        "body" : "Is this always what's thrown for a permissions failure (I would've expected `UnauthorizedAccessException`)? Wondering if we should just always silently fail on any kind of event log write failure (or warn if it's anything other than `InvalidOperationException`) just to cover the bases...",
        "createdAt" : "2019-04-02T00:05:43Z",
        "updatedAt" : "2019-04-02T03:48:25Z",
        "lastEditedBy" : "311820dd-fcb9-46df-a201-9c0e7d6fac58",
        "tags" : [
        ]
      },
      {
        "id" : "f26f7b67-1bf7-4a11-8822-21bd9ad44a04",
        "parentId" : "6ffac3c3-d3d0-4638-a356-8eaa46b23b50",
        "authorId" : "7c547162-2334-4e33-a627-e146840da9ec",
        "body" : "I tried to use `System.Security.SecurityException` and `UnauthorizedAccessException` but they aren't caught in this case. The [docs for WriteEntry](https://docs.microsoft.com/en-us/dotnet/api/system.diagnostics.eventlog.writeentry?view=netframework-4.7.2#System_Diagnostics_EventLog_WriteEntry_System_String_System_Diagnostics_EventLogEntryType_System_Int32_) also state `InvalidOperationException` is raised when the event log reg key could not be opened.\r\n\r\nI'm happy to add a warning to other exceptions but I'm not comfortable with the idea of ignoring all exceptions.",
        "createdAt" : "2019-04-02T00:11:57Z",
        "updatedAt" : "2019-04-02T03:48:25Z",
        "lastEditedBy" : "7c547162-2334-4e33-a627-e146840da9ec",
        "tags" : [
        ]
      }
    ],
    "commit" : "7fb8250dfc53d51eaec7a55639ffb83f59e7daf7",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +320,324 @@                    eventLog.WriteEntry(message, logEntryType, 0);\n                }\n                catch (System.InvalidOperationException) { }  // Ignore permission errors on the Application event log\n                catch (System.Exception e)\n                {"
  }
]