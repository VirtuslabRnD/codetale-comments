[
  {
    "id" : "f7681ed7-25f2-47a1-b1bd-b5bb65254566",
    "prId" : 51404,
    "prUrl" : "https://github.com/ansible/ansible/pull/51404#pullrequestreview-203429338",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a72a9343-a1bb-42ca-a164-8f2b938eb42d",
        "parentId" : null,
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "Isn't some code needed here as well?",
        "createdAt" : "2019-02-08T19:06:47Z",
        "updatedAt" : "2019-02-19T17:14:04Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      },
      {
        "id" : "9883cb31-4dc5-4b10-a8ca-97b74dda577a",
        "parentId" : "a72a9343-a1bb-42ca-a164-8f2b938eb42d",
        "authorId" : "2f8132dc-12f8-44dc-8b97-1cf4c1616b68",
        "body" : "I don't believe so. Since we aren't leveraging this option for Windows modules, we don't want to pass it along.",
        "createdAt" : "2019-02-13T20:24:35Z",
        "updatedAt" : "2019-02-19T17:14:04Z",
        "lastEditedBy" : "2f8132dc-12f8-44dc-8b97-1cf4c1616b68",
        "tags" : [
        ]
      }
    ],
    "commit" : "c99e04db468013bc68619e8fc907734ea6079cfe",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +64,68 @@            { \"shell_executable\", null },\n            { \"socket\", null },\n            { \"string_conversion_action\", null },\n            { \"syslog_facility\", null },\n            { \"tmpdir\", \"tmpdir\" },"
  },
  {
    "id" : "cbe975fd-af59-4599-bc7a-42153c719405",
    "prId" : 54699,
    "prUrl" : "https://github.com/ansible/ansible/pull/54699#pullrequestreview-221400747",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6ffac3c3-d3d0-4638-a356-8eaa46b23b50",
        "parentId" : null,
        "authorId" : "311820dd-fcb9-46df-a201-9c0e7d6fac58",
        "body" : "Is this always what's thrown for a permissions failure (I would've expected `UnauthorizedAccessException`)? Wondering if we should just always silently fail on any kind of event log write failure (or warn if it's anything other than `InvalidOperationException`) just to cover the bases...",
        "createdAt" : "2019-04-02T00:05:43Z",
        "updatedAt" : "2019-04-02T03:48:25Z",
        "lastEditedBy" : "311820dd-fcb9-46df-a201-9c0e7d6fac58",
        "tags" : [
        ]
      },
      {
        "id" : "f26f7b67-1bf7-4a11-8822-21bd9ad44a04",
        "parentId" : "6ffac3c3-d3d0-4638-a356-8eaa46b23b50",
        "authorId" : "7c547162-2334-4e33-a627-e146840da9ec",
        "body" : "I tried to use `System.Security.SecurityException` and `UnauthorizedAccessException` but they aren't caught in this case. The [docs for WriteEntry](https://docs.microsoft.com/en-us/dotnet/api/system.diagnostics.eventlog.writeentry?view=netframework-4.7.2#System_Diagnostics_EventLog_WriteEntry_System_String_System_Diagnostics_EventLogEntryType_System_Int32_) also state `InvalidOperationException` is raised when the event log reg key could not be opened.\r\n\r\nI'm happy to add a warning to other exceptions but I'm not comfortable with the idea of ignoring all exceptions.",
        "createdAt" : "2019-04-02T00:11:57Z",
        "updatedAt" : "2019-04-02T03:48:25Z",
        "lastEditedBy" : "7c547162-2334-4e33-a627-e146840da9ec",
        "tags" : [
        ]
      }
    ],
    "commit" : "7fb8250dfc53d51eaec7a55639ffb83f59e7daf7",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +320,324 @@                    eventLog.WriteEntry(message, logEntryType, 0);\n                }\n                catch (System.InvalidOperationException) { }  // Ignore permission errors on the Application event log\n                catch (System.Exception e)\n                {"
  },
  {
    "id" : "189abb44-e5de-4348-951b-e891588a8457",
    "prId" : 69926,
    "prUrl" : "https://github.com/ansible/ansible/pull/69926#pullrequestreview-427483493",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8e4227a3-c3aa-4b22-bfd5-ab53dd2fe05b",
        "parentId" : null,
        "authorId" : "7c547162-2334-4e33-a627-e146840da9ec",
        "body" : "Instead of having a copy of `public void Deprecate(string message, DateTime date)` you can either\r\n\r\n* Have the first function call the second one with it defining `null` for the `collectionName` param\r\n\r\n```csharp\r\npublic void Deprecate(string message, DateTime date)\r\n{\r\n    Deprecate(message, date, null)\r\n}\r\n\r\npublic void Deprecate(string message, DateTime date, string collectionName)\r\n{\r\n    ...\r\n}\r\n```\r\n\r\n* Or set `collectionName` as an option parameter with a default value like\r\n\r\n```csharp\r\npublic void Deprecate(string message, DateTime date, string collectionName = null)\r\n{\r\n    ...\r\n}\r\n```\r\n\r\nThe latter is simpler as you don't need to define the function twice but it does have the problem where `$null` passed in from PowerShell it becomes an empty string but it really depends on what is consuming this data if `None == \"\"`.",
        "createdAt" : "2020-06-09T19:11:17Z",
        "updatedAt" : "2020-06-09T20:11:55Z",
        "lastEditedBy" : "7c547162-2334-4e33-a627-e146840da9ec",
        "tags" : [
        ]
      },
      {
        "id" : "0be86900-93e9-417e-86f3-b8120113b7bd",
        "parentId" : "8e4227a3-c3aa-4b22-bfd5-ab53dd2fe05b",
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "Actually I was using `public void Deprecate(string message, DateTime date, string collectionName = null)` first, but there's a bug in Windows 2012 which causes this to fail compiling (if the other `Deprecate` overload for versions is using a default parameter for collectionName too).",
        "createdAt" : "2020-06-09T19:24:31Z",
        "updatedAt" : "2020-06-09T20:11:55Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      },
      {
        "id" : "7c07bbe9-8e39-4ec1-9f99-d163aca71ea1",
        "parentId" : "8e4227a3-c3aa-4b22-bfd5-ab53dd2fe05b",
        "authorId" : "7c547162-2334-4e33-a627-e146840da9ec",
        "body" : "That's definitely weird, let's just go for option 1 then.",
        "createdAt" : "2020-06-09T19:37:25Z",
        "updatedAt" : "2020-06-09T20:11:55Z",
        "lastEditedBy" : "7c547162-2334-4e33-a627-e146840da9ec",
        "tags" : [
        ]
      },
      {
        "id" : "75cb76fb-a0b7-41ed-af6e-39c89a03b5c9",
        "parentId" : "8e4227a3-c3aa-4b22-bfd5-ab53dd2fe05b",
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "Implemented.",
        "createdAt" : "2020-06-09T19:41:17Z",
        "updatedAt" : "2020-06-09T20:11:55Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      }
    ],
    "commit" : "ba8b8f0bd4c675f515bcfe15eccae002e294db05",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +292,296 @@        }\n\n        public void Deprecate(string message, DateTime date, string collectionName)\n        {\n            string isoDate = date.ToString(\"yyyy-MM-dd\");"
  },
  {
    "id" : "7d039ebb-0aaa-4695-ad44-ca15304ba581",
    "prId" : 69926,
    "prUrl" : "https://github.com/ansible/ansible/pull/69926#pullrequestreview-427483888",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5a1bbf38-2bf0-4409-ad9d-290543088404",
        "parentId" : null,
        "authorId" : "7c547162-2334-4e33-a627-e146840da9ec",
        "body" : "Would you be able to add `collection_name` to the [deprecated_aliases doc](https://github.com/ansible/ansible/blob/devel/docs/docsite/rst/dev_guide/developing_modules_general_windows.rst#windows-new-module-development).",
        "createdAt" : "2020-06-09T19:17:14Z",
        "updatedAt" : "2020-06-09T20:11:55Z",
        "lastEditedBy" : "7c547162-2334-4e33-a627-e146840da9ec",
        "tags" : [
        ]
      },
      {
        "id" : "4797ccc8-f543-4d67-8d31-e3bce219e899",
        "parentId" : "5a1bbf38-2bf0-4409-ad9d-290543088404",
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "I added it, and also `removed_from_collection`.",
        "createdAt" : "2020-06-09T19:41:52Z",
        "updatedAt" : "2020-06-09T20:11:55Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      }
    ],
    "commit" : "ba8b8f0bd4c675f515bcfe15eccae002e294db05",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +815,819 @@                    }\n                    string collectionName = null;\n                    if (depInfo.ContainsKey(\"collection_name\"))\n                    {\n                        collectionName = (string)depInfo[\"collection_name\"];"
  },
  {
    "id" : "05311c24-4c58-408c-8a4a-b04e1f53ee45",
    "prId" : 69935,
    "prUrl" : "https://github.com/ansible/ansible/pull/69935#pullrequestreview-427717379",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "eb047565-dc60-44b0-82ab-7d1ac6c40620",
        "parentId" : null,
        "authorId" : "7c547162-2334-4e33-a627-e146840da9ec",
        "body" : "You can do the same for this and have it use the same method as the existing `Deprecate(string message, string version)`\r\n\r\n```suggestion\r\n        public void Deprecate(string message, string version, string collectionName = null)\r\n```",
        "createdAt" : "2020-06-09T19:28:13Z",
        "updatedAt" : "2020-06-15T14:46:36Z",
        "lastEditedBy" : "7c547162-2334-4e33-a627-e146840da9ec",
        "tags" : [
        ]
      },
      {
        "id" : "c9f3edfc-1945-4fde-b57f-7cfcc10649ef",
        "parentId" : "eb047565-dc60-44b0-82ab-7d1ac6c40620",
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "Same here.",
        "createdAt" : "2020-06-10T05:18:37Z",
        "updatedAt" : "2020-06-15T14:46:36Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      }
    ],
    "commit" : "fdf69a6ad95495b8e3e18e0a09753735d2308d45",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +250,254 @@        }\n\n        public void Deprecate(string message, string version, string collectionName)\n        {\n            // `collectionName` is a Ansible 2.10 parameter. We accept and ignore it,"
  }
]