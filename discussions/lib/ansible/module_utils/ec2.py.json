[
  {
    "id" : "5b3dbbe6-5eba-4125-985b-c186d766b15c",
    "prId" : 5917,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "386a3f45-127e-4aca-962f-57f64ade2136",
        "parentId" : null,
        "authorId" : "183d9a20-6a5e-4432-9fe9-9fd6fe9514fb",
        "body" : "I think aws_keys_argument_spec would be a better method name.  \n",
        "createdAt" : "2014-02-16T12:39:39Z",
        "updatedAt" : "2014-02-16T12:39:39Z",
        "lastEditedBy" : "183d9a20-6a5e-4432-9fe9-9fd6fe9514fb",
        "tags" : [
        ]
      },
      {
        "id" : "bc5c3136-8e39-4310-9589-f5ab471ed774",
        "parentId" : "386a3f45-127e-4aca-962f-57f64ade2136",
        "authorId" : "4ab5cc18-0ca0-4f35-8549-bb9b4b1a08b1",
        "body" : "To be honest, aws_argument_spec is also better than ec2_argument spec, and \"aws.py\" is a better name than \"ec2.py\" at this point as well. My main intent with this pull request was to fix the RDS error with the least amount of disruption. Happy to change it all if @mpdehaan wishes it so.\n",
        "createdAt" : "2014-02-16T17:24:11Z",
        "updatedAt" : "2014-02-16T17:24:11Z",
        "lastEditedBy" : "4ab5cc18-0ca0-4f35-8549-bb9b4b1a08b1",
        "tags" : [
        ]
      }
    ],
    "commit" : "baf508a3790b15ef850db522907ede043982b92d",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +9,13 @@\n\ndef ec2_argument_keys_spec():\n    return dict(\n        aws_secret_key=dict(aliases=['ec2_secret_key', 'secret_key'], no_log=True),"
  },
  {
    "id" : "4845b32a-e399-4e70-8731-3def26cbd4ec",
    "prId" : 5917,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4a7ed301-a0d3-4369-ab99-1d911303a213",
        "parentId" : null,
        "authorId" : "183d9a20-6a5e-4432-9fe9-9fd6fe9514fb",
        "body" : "should be `aws_secret_key = ...`.\n\nIn my recent refactoring I just went with `secret_key` and `access_key`, but `aws_secret_key` and `aws_access_key` are better variable names than `ec2_secret_key` and `ec2_access_key` \n",
        "createdAt" : "2014-02-16T12:41:11Z",
        "updatedAt" : "2014-02-16T12:41:11Z",
        "lastEditedBy" : "183d9a20-6a5e-4432-9fe9-9fd6fe9514fb",
        "tags" : [
        ]
      },
      {
        "id" : "d89ec149-a60e-4741-8a7f-bc8e503bad52",
        "parentId" : "4a7ed301-a0d3-4369-ab99-1d911303a213",
        "authorId" : "4ab5cc18-0ca0-4f35-8549-bb9b4b1a08b1",
        "body" : "Again, the main point of this request is to fix the aws_ vs. ec2_ module argument problem introduced in the rds module.\n\nWith respect to \"secret_key\" and \"access_key\", I considered those but rejected them as too generic, particularly given that the common boto environment variable names are AWS_SECRET_KEY and AWS_ACCESS_KEY_ID. Although that last one doesn't entirely match either. :-P\n",
        "createdAt" : "2014-02-16T17:24:20Z",
        "updatedAt" : "2014-02-16T17:24:20Z",
        "lastEditedBy" : "4ab5cc18-0ca0-4f35-8549-bb9b4b1a08b1",
        "tags" : [
        ]
      }
    ],
    "commit" : "baf508a3790b15ef850db522907ede043982b92d",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +32,36 @@\n    ec2_url = module.params.get('ec2_url')\n    ec2_secret_key = module.params.get('aws_secret_key')\n    ec2_access_key = module.params.get('aws_access_key')\n    region = module.params.get('region')"
  },
  {
    "id" : "c508b024-4852-4954-910b-a8fd42855680",
    "prId" : 13166,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0e1178e6-658a-4e66-90a7-3dac2aeb61af",
        "parentId" : null,
        "authorId" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "body" : "What happens when module asks for boto3 but HAS_BOTO3 is False? \n\nI believe we should either default to boto2 and give a warning or otherwise a fatal error.\n",
        "createdAt" : "2016-01-25T22:19:54Z",
        "updatedAt" : "2016-01-25T22:44:12Z",
        "lastEditedBy" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "tags" : [
        ]
      },
      {
        "id" : "2346ebb9-9845-44a9-8f19-6ef9c8539b28",
        "parentId" : "0e1178e6-658a-4e66-90a7-3dac2aeb61af",
        "authorId" : "faa94ec4-8bae-4697-9a84-127a35d6e00d",
        "body" : "If a module asks for boto3 and it's not installed then it should be an error, not fall back back to boto. I'll add the error handling\n",
        "createdAt" : "2016-01-25T22:34:38Z",
        "updatedAt" : "2016-01-25T22:44:12Z",
        "lastEditedBy" : "faa94ec4-8bae-4697-9a84-127a35d6e00d",
        "tags" : [
        ]
      }
    ],
    "commit" : "041e1979c40725b55bbf9735e26fcaaea5cdec9f",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +147,151 @@            elif boto3 and HAS_BOTO3:\n                # here we don't need to make an additional call, will default to 'us-east-1' if the below evaluates to None.\n                region = botocore.session.get_session().get_config_variable('region')\n            elif boto3 and not HAS_BOTO3:\n                module.fail_json(\"Boto3 is required for this module. Please install boto3 and try again\")"
  }
]