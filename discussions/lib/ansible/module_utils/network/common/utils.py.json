[
  {
    "id" : "75615ee7-13c2-4516-a356-7b567c1f675a",
    "prId" : 29605,
    "prUrl" : "https://github.com/ansible/ansible/pull/29605#pullrequestreview-84790577",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0f69cd64-399f-474a-8baa-854f0109088c",
        "parentId" : null,
        "authorId" : "06ab4cf8-4a18-478e-93ee-69929f4bffc6",
        "body" : "The zeroes don't *have* to be omitted, so I think this `split` will cause the method to fail later if an address like `dead:beef:0:1:1:1:1:1` is given which has no omitted zeroes. ",
        "createdAt" : "2017-12-05T21:44:57Z",
        "updatedAt" : "2017-12-20T15:03:10Z",
        "lastEditedBy" : "06ab4cf8-4a18-478e-93ee-69929f4bffc6",
        "tags" : [
        ]
      },
      {
        "id" : "f5e55d84-78e7-4029-b163-c2fa195a65fb",
        "parentId" : "0f69cd64-399f-474a-8baa-854f0109088c",
        "authorId" : "6b7e4265-ae86-4269-9bd7-f8ffa9085df6",
        "body" : "Added a test for this!",
        "createdAt" : "2017-12-20T15:04:38Z",
        "updatedAt" : "2017-12-20T15:04:38Z",
        "lastEditedBy" : "6b7e4265-ae86-4269-9bd7-f8ffa9085df6",
        "tags" : [
        ]
      }
    ],
    "commit" : "5ab8f6157bbddce58e20191f07f2976cd2cc8e70",
    "line" : 105,
    "diffHunk" : "@@ -1,1 +512,516 @@\n    # Split by :: to identify omitted zeros\n    ipv6_prefix = addr.split('::')[0]\n\n    # Get the first three groups, or as many as are found + ::"
  },
  {
    "id" : "42096549-d64e-4ce1-ba13-bb4bb272de9b",
    "prId" : 49474,
    "prUrl" : "https://github.com/ansible/ansible/pull/49474#pullrequestreview-181404578",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ff983821-f9fa-4032-a7ce-dce34da1b449",
        "parentId" : null,
        "authorId" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "body" : "Shouldn't this be Mapping? \r\n``` python\r\nfrom ansible.module_utils.common._collections_compat import Mapping\r\n[...]\r\nif isinstance(other[key], Mapping):\r\n```\r\n\r\nHow deeply nested are your dicts?  If they're too deeply nested they'll run into the recursion limit.  We can cross that bridge if you start to get bug reports about it though....",
        "createdAt" : "2018-12-04T15:36:09Z",
        "updatedAt" : "2018-12-05T03:07:01Z",
        "lastEditedBy" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "tags" : [
        ]
      },
      {
        "id" : "43924772-7631-4728-8691-97a9c2a54956",
        "parentId" : "ff983821-f9fa-4032-a7ce-dce34da1b449",
        "authorId" : "7a1e5757-684b-4684-bcab-c114385bca28",
        "body" : "Will change it to mapping.\r\n\r\n>  How deeply nested are your dicts?\r\n\r\nIt depends on how nested the data model is for a particular network device and the data model varies vastly from vendor to vendor so can't say exactly how deeply nested dicts can be.\r\n`dict_diff` function for network use case is mainly written to get diff between the candidate configuration (user input or module arg spec) and the running config retrieved from the device when action `override` and `dict_merge` to merge candidate and running config when action is `merge`. ",
        "createdAt" : "2018-12-04T16:23:17Z",
        "updatedAt" : "2018-12-05T03:07:01Z",
        "lastEditedBy" : "7a1e5757-684b-4684-bcab-c114385bca28",
        "tags" : [
        ]
      },
      {
        "id" : "70613109-136a-49c2-95ca-7da4929a7cbb",
        "parentId" : "ff983821-f9fa-4032-a7ce-dce34da1b449",
        "authorId" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "body" : "Okay.  the default recursionlimit in python is 100 levels.  (But it might be set lower if someone has optimized their python build for low memory situations).  We'll just have to wait and see if we get any bug reports and fix this then.",
        "createdAt" : "2018-12-04T18:14:24Z",
        "updatedAt" : "2018-12-05T03:07:01Z",
        "lastEditedBy" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "tags" : [
        ]
      }
    ],
    "commit" : "e48d77bfcf39d9bba9b28f7744d67ec99af68665",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +278,282 @@                if item is not None:\n                    if isinstance(other[key], Mapping):\n                        combined[key] = dict_merge(value, other[key])\n                    else:\n                        combined[key] = other[key]"
  },
  {
    "id" : "66bce362-4e74-43d5-a5e2-62236375c74e",
    "prId" : 58273,
    "prUrl" : "https://github.com/ansible/ansible/pull/58273#pullrequestreview-253796133",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "490baf99-f881-4825-8f9e-59e3dc186316",
        "parentId" : null,
        "authorId" : "3374b5c2-684a-46fc-8052-1e21707ac879",
        "body" : "All None value will be filtered by If, so is there any specific requirement of using the list comparison, as otherwise this if can be modified as:\r\n```suggestion\r\n        elif not val:\r\n```",
        "createdAt" : "2019-06-25T05:52:04Z",
        "updatedAt" : "2019-06-28T11:00:30Z",
        "lastEditedBy" : "3374b5c2-684a-46fc-8052-1e21707ac879",
        "tags" : [
        ]
      },
      {
        "id" : "6c38e710-892a-4a12-8d7b-da2837307210",
        "parentId" : "490baf99-f881-4825-8f9e-59e3dc186316",
        "authorId" : "7a1e5757-684b-4684-bcab-c114385bca28",
        "body" : "@justjais `elif not val` will have an unintended effect for certain values for eg:  `0`\r\nWith the empty values in the list, we have more control on values that need to be removed from the final config.",
        "createdAt" : "2019-06-25T06:38:24Z",
        "updatedAt" : "2019-06-28T11:00:30Z",
        "lastEditedBy" : "7a1e5757-684b-4684-bcab-c114385bca28",
        "tags" : [
        ]
      }
    ],
    "commit" : "3f2034338e014ea0165bbc9b96397dfe7fd7572c",
    "line" : 146,
    "diffHunk" : "@@ -1,1 +554,558 @@            if child_val:\n                dct = {key: child_val}\n        elif val not in [None, [], {}, (), '']:\n            dct = {key: val}\n        if dct:"
  }
]