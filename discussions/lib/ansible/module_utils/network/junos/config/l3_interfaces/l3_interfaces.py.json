[
  {
    "id" : "7afc2710-ddbd-4737-b7fa-9528aa64b26d",
    "prId" : 59026,
    "prUrl" : "https://github.com/ansible/ansible/pull/59026#pullrequestreview-261191059",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "da013376-529b-410e-92ef-89b1be076f13",
        "parentId" : null,
        "authorId" : "7a1e5757-684b-4684-bcab-c114385bca28",
        "body" : "```\r\njunos_l3_interfaces:\r\n   state: deleted\r\n```\r\nWill this logic handle the ^ scenario that deletes all the l3 interface config is a key option (name in this case) within config is not mentioned?",
        "createdAt" : "2019-07-12T10:21:01Z",
        "updatedAt" : "2019-07-31T12:29:24Z",
        "lastEditedBy" : "7a1e5757-684b-4684-bcab-c114385bca28",
        "tags" : [
        ]
      },
      {
        "id" : "459f3a14-44b9-4899-bf01-a62aae7dcd64",
        "parentId" : "da013376-529b-410e-92ef-89b1be076f13",
        "authorId" : "e8a62838-8018-4270-be0e-732e77b3384b",
        "body" : "Yes, as in that case if you check I'm passing the same existing intf lists. What this would do is only skip it in case the interface is not a l3 one.",
        "createdAt" : "2019-07-12T10:28:56Z",
        "updatedAt" : "2019-07-31T12:29:24Z",
        "lastEditedBy" : "e8a62838-8018-4270-be0e-732e77b3384b",
        "tags" : [
        ]
      },
      {
        "id" : "4f3c0342-d58e-45a2-9ca6-266ea2264b2c",
        "parentId" : "da013376-529b-410e-92ef-89b1be076f13",
        "authorId" : "e8a62838-8018-4270-be0e-732e77b3384b",
        "body" : "oh, hold on, my bad, was thinking about another thing",
        "createdAt" : "2019-07-12T10:51:58Z",
        "updatedAt" : "2019-07-31T12:29:24Z",
        "lastEditedBy" : "e8a62838-8018-4270-be0e-732e77b3384b",
        "tags" : [
        ]
      }
    ],
    "commit" : "f6d920663cf28f3ee192f8dab410df70c24e3783",
    "line" : 214,
    "diffHunk" : "@@ -1,1 +212,216 @@        for config in want:\n            if config['name'] not in existing_l3_intfs:\n                continue\n            else:\n                root_node, unit_node = self._get_common_xml_node("
  }
]