[
  {
    "id" : "59f402d6-c72e-4199-b9b2-e40056827857",
    "prId" : 41155,
    "prUrl" : "https://github.com/ansible/ansible/pull/41155#pullrequestreview-141343641",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fe43c5af-457e-405c-992b-b37219eefc00",
        "parentId" : null,
        "authorId" : "7a1e5757-684b-4684-bcab-c114385bca28",
        "body" : "Provider spec is required to support connection=local type and is present in other network platform for legacy reason, in future local connection type for network module will be deprecated. \r\nAs this platform is newly added supporting local connection type is not required imo and this spec can be removed.",
        "createdAt" : "2018-07-27T21:12:44Z",
        "updatedAt" : "2018-07-29T09:37:19Z",
        "lastEditedBy" : "7a1e5757-684b-4684-bcab-c114385bca28",
        "tags" : [
        ]
      },
      {
        "id" : "4c0f3223-1ed2-461d-950f-6944bcfe12e1",
        "parentId" : "fe43c5af-457e-405c-992b-b37219eefc00",
        "authorId" : "1cfc6655-f3bb-42fd-99c1-ed13190782c6",
        "body" : "I am planning on implementing support for RouterOS API as well. I could implement it either with a provider dict, or by creating a special connection type. Which do you think would be better?\r\n\r\nRouterOS has a weird non-standard API, so it seems that itâ€™s not possible to use any of the existing connection types, except for local, of course.",
        "createdAt" : "2018-07-28T08:32:39Z",
        "updatedAt" : "2018-07-29T09:37:19Z",
        "lastEditedBy" : "1cfc6655-f3bb-42fd-99c1-ed13190782c6",
        "tags" : [
        ]
      },
      {
        "id" : "9517d23d-8539-486e-8603-afd082dca46b",
        "parentId" : "fe43c5af-457e-405c-992b-b37219eefc00",
        "authorId" : "7a1e5757-684b-4684-bcab-c114385bca28",
        "body" : "Which transport type is used by RouterOS API? \r\nYou can check [httapi](https://github.com/ansible/ansible/blob/devel/lib/ansible/plugins/connection/httpapi.py) connection type and implementation plugins for [nxap/eapi](https://github.com/ansible/ansible/tree/devel/lib/ansible/plugins/httpapi). ",
        "createdAt" : "2018-07-28T10:02:27Z",
        "updatedAt" : "2018-07-29T09:37:19Z",
        "lastEditedBy" : "7a1e5757-684b-4684-bcab-c114385bca28",
        "tags" : [
        ]
      },
      {
        "id" : "be3925eb-35f3-4e1f-ac16-6bdf7bc05930",
        "parentId" : "fe43c5af-457e-405c-992b-b37219eefc00",
        "authorId" : "1cfc6655-f3bb-42fd-99c1-ed13190782c6",
        "body" : "It uses socket connection with custom login process, not HTTP(S) unfortunately.\r\nThere's a library called [librouteros](https://github.com/luqasz/librouteros) that implements RouterOS API in Python, here is how it creates a connection: https://github.com/luqasz/librouteros/blob/83fa287fa9a12d209687685f3c77eb80d1dd32f3/librouteros/__init__.py#L63-L70",
        "createdAt" : "2018-07-28T14:23:34Z",
        "updatedAt" : "2018-07-29T09:37:19Z",
        "lastEditedBy" : "1cfc6655-f3bb-42fd-99c1-ed13190782c6",
        "tags" : [
        ]
      },
      {
        "id" : "28ba2ed6-61cd-41a8-a938-809cf5d01032",
        "parentId" : "fe43c5af-457e-405c-992b-b37219eefc00",
        "authorId" : "7a1e5757-684b-4684-bcab-c114385bca28",
        "body" : "In that case, it seems connection=local is the way forward for now. You can ignore my comment on providers.",
        "createdAt" : "2018-07-29T11:30:26Z",
        "updatedAt" : "2018-07-29T11:30:26Z",
        "lastEditedBy" : "7a1e5757-684b-4684-bcab-c114385bca28",
        "tags" : [
        ]
      }
    ],
    "commit" : "22185b4802b0072fb70a1c27aac46edc63328771",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +34,38 @@_DEVICE_CONFIGS = {}\n\nrouteros_provider_spec = {\n    'host': dict(),\n    'port': dict(type='int'),"
  },
  {
    "id" : "d3f2cb8a-4dc5-4e02-b136-667b94c998dc",
    "prId" : 41155,
    "prUrl" : "https://github.com/ansible/ansible/pull/41155#pullrequestreview-141271165",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "06e5637f-9942-436f-8e10-0d9ba28d2ca1",
        "parentId" : null,
        "authorId" : "7a1e5757-684b-4684-bcab-c114385bca28",
        "body" : "`get_provider_argspec` again added to support local connection type with platform agnostic modules. This function can be removed.",
        "createdAt" : "2018-07-27T21:13:57Z",
        "updatedAt" : "2018-07-29T09:37:19Z",
        "lastEditedBy" : "7a1e5757-684b-4684-bcab-c114385bca28",
        "tags" : [
        ]
      }
    ],
    "commit" : "22185b4802b0072fb70a1c27aac46edc63328771",
    "line" : 47,
    "diffHunk" : "@@ -1,1 +45,49 @@\n\ndef get_provider_argspec():\n    return routeros_provider_spec\n"
  }
]