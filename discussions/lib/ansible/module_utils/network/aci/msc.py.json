[
  {
    "id" : "d3834138-6c7d-48c6-a6ff-5818d8f472f4",
    "prId" : 46116,
    "prUrl" : "https://github.com/ansible/ansible/pull/46116#pullrequestreview-169400967",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b87e076d-5831-41e8-b6b2-4c83f95cd1d0",
        "parentId" : null,
        "authorId" : "a592774c-8568-4229-8c0e-31fbe6d00e14",
        "body" : "This was a copy paste and still references Meraki",
        "createdAt" : "2018-10-29T16:05:16Z",
        "updatedAt" : "2018-10-29T16:40:10Z",
        "lastEditedBy" : "a592774c-8568-4229-8c0e-31fbe6d00e14",
        "tags" : [
        ]
      },
      {
        "id" : "1fe5f033-16cc-41d0-932d-32cde05e1cb3",
        "parentId" : "b87e076d-5831-41e8-b6b2-4c83f95cd1d0",
        "authorId" : "7268595c-1eb4-4b5f-9277-90f183130a4b",
        "body" : "Good catch :-)",
        "createdAt" : "2018-10-29T16:37:57Z",
        "updatedAt" : "2018-10-29T16:40:10Z",
        "lastEditedBy" : "7268595c-1eb4-4b5f-9277-90f183130a4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "e78e91ed09793f62a7670980cf6ea5c0536d4ee7",
    "line" : 149,
    "diffHunk" : "@@ -1,1 +147,151 @@        self.headers['Authorization'] = 'Bearer {token}'.format(**payload)\n\n    def request(self, path, method=None, data=None):\n        ''' Generic HTTP method for MSC requests. '''\n        self.path = path"
  },
  {
    "id" : "92abcca5-c267-4391-94ca-db593fb359a4",
    "prId" : 46116,
    "prUrl" : "https://github.com/ansible/ansible/pull/46116#pullrequestreview-169403059",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "af196a77-83b8-401c-b9f9-db2f60d63508",
        "parentId" : null,
        "authorId" : "a592774c-8568-4229-8c0e-31fbe6d00e14",
        "body" : "I think it's likely the proxy code won't work as I haven't been able to test it well under Meraki",
        "createdAt" : "2018-10-29T16:08:27Z",
        "updatedAt" : "2018-10-29T16:40:10Z",
        "lastEditedBy" : "a592774c-8568-4229-8c0e-31fbe6d00e14",
        "tags" : [
        ]
      },
      {
        "id" : "a35347ef-ac97-48eb-a4a5-7e0496c5fb4f",
        "parentId" : "af196a77-83b8-401c-b9f9-db2f60d63508",
        "authorId" : "7268595c-1eb4-4b5f-9277-90f183130a4b",
        "body" : "It works, at least it did for ACI because fetch_url does this for us.",
        "createdAt" : "2018-10-29T16:39:28Z",
        "updatedAt" : "2018-10-29T16:40:10Z",
        "lastEditedBy" : "7268595c-1eb4-4b5f-9277-90f183130a4b",
        "tags" : [
        ]
      },
      {
        "id" : "110563bf-8711-40ee-bf97-e2ede71a9844",
        "parentId" : "af196a77-83b8-401c-b9f9-db2f60d63508",
        "authorId" : "7268595c-1eb4-4b5f-9277-90f183130a4b",
        "body" : "If your system has `http_proxy` or `https_proxy` environment variables declared, fetch_url picks them up automatically. The `use_proxy` parameter would disable this behavior (which is enabled by default).",
        "createdAt" : "2018-10-29T16:42:13Z",
        "updatedAt" : "2018-10-29T16:42:13Z",
        "lastEditedBy" : "7268595c-1eb4-4b5f-9277-90f183130a4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "e78e91ed09793f62a7670980cf6ea5c0536d4ee7",
    "line" : 163,
    "diffHunk" : "@@ -1,1 +161,165 @@                               method=self.method,\n                               timeout=self.params['timeout'],\n                               use_proxy=self.params['use_proxy'],\n                               )\n        self.response = info['msg']"
  },
  {
    "id" : "a2b252cb-a5eb-4ed5-80bf-6866ce9985aa",
    "prId" : 46116,
    "prUrl" : "https://github.com/ansible/ansible/pull/46116#pullrequestreview-169431810",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1bd8dfec-db60-4cc7-9c65-ebf660839f30",
        "parentId" : null,
        "authorId" : "a592774c-8568-4229-8c0e-31fbe6d00e14",
        "body" : "I see you have query_objs and get_obj. What is the difference between query and get?",
        "createdAt" : "2018-10-29T16:43:27Z",
        "updatedAt" : "2018-10-29T16:43:38Z",
        "lastEditedBy" : "a592774c-8568-4229-8c0e-31fbe6d00e14",
        "tags" : [
        ]
      },
      {
        "id" : "0ffeac30-1e49-4bde-8a41-54b8881e6d84",
        "parentId" : "1bd8dfec-db60-4cc7-9c65-ebf660839f30",
        "authorId" : "7268595c-1eb4-4b5f-9277-90f183130a4b",
        "body" : "The function `get_obj()` uses `query_obj()`, so they are quite similar.\r\n\r\nThe difference is purely whether you are querying a single object, or multiple objects. If you expect only a single object, `get_obj()` is for you, if you expect multiple objects `query_objs()` is for you.\r\n\r\nBoth accept filter arguments, but some things should always return a single obj (like if name or id is unique). The only reason we have this function call is purely to ensure that when we expect a single object, and we do get more than one, we escalate to the user.",
        "createdAt" : "2018-10-29T17:41:33Z",
        "updatedAt" : "2018-10-29T17:41:34Z",
        "lastEditedBy" : "7268595c-1eb4-4b5f-9277-90f183130a4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "e78e91ed09793f62a7670980cf6ea5c0536d4ee7",
    "line" : 195,
    "diffHunk" : "@@ -1,1 +193,197 @@        return {}\n\n    def query_objs(self, path, **kwargs):\n        found = []\n        objs = self.request(path, method='GET')"
  }
]