[
  {
    "id" : "d45ea0e7-82fe-4fb2-a5aa-176b05b8c465",
    "prId" : 33217,
    "prUrl" : "https://github.com/ansible/ansible/pull/33217#pullrequestreview-81333391",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "35bfad41-3f7d-4e22-81da-7530850741a7",
        "parentId" : null,
        "authorId" : "d7d8721c-7ad0-4834-9a3d-b53ca8656789",
        "body" : "I know it was here before, though why do we have commented out code?",
        "createdAt" : "2017-12-05T20:52:51Z",
        "updatedAt" : "2017-12-05T20:52:57Z",
        "lastEditedBy" : "d7d8721c-7ad0-4834-9a3d-b53ca8656789",
        "tags" : [
        ]
      },
      {
        "id" : "c7ee24cd-be39-4a71-8b17-dec1c1a9f01e",
        "parentId" : "35bfad41-3f7d-4e22-81da-7530850741a7",
        "authorId" : "7e2e21d2-12fd-4c45-9909-eb9d49e98bdc",
        "body" : "I need to update this method to provide more granular facts data like the previous methods. I started working on this, but I haven't had time to test the API for all scenarios and see what kind of data is returned. These will either be uncommented or removed once I get around to fleshing out this method.",
        "createdAt" : "2017-12-05T20:59:11Z",
        "updatedAt" : "2017-12-05T20:59:11Z",
        "lastEditedBy" : "7e2e21d2-12fd-4c45-9909-eb9d49e98bdc",
        "tags" : [
        ]
      }
    ],
    "commit" : "d45e2d9625c012d5c45a66a3c07230a382aa78d5",
    "line" : 97,
    "diffHunk" : "@@ -1,1 +485,489 @@        obj_class = obj['aci_class']\n        obj_rn = obj['aci_rn']\n        # obj_filter = obj['filter_target']\n        # mo = obj['module_object']\n"
  },
  {
    "id" : "1cf96fb7-f65f-40ff-bca5-0f8f9a4a1d18",
    "prId" : 53475,
    "prUrl" : "https://github.com/ansible/ansible/pull/53475#pullrequestreview-213149427",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3c8c51ab-f361-4e70-be8f-d13b46b9a9ee",
        "parentId" : null,
        "authorId" : "7268595c-1eb4-4b5f-9277-90f183130a4b",
        "body" : "Why sorted?",
        "createdAt" : "2019-03-11T20:58:37Z",
        "updatedAt" : "2019-03-11T20:58:38Z",
        "lastEditedBy" : "7268595c-1eb4-4b5f-9277-90f183130a4b",
        "tags" : [
        ]
      },
      {
        "id" : "3b399463-f2f3-4438-b256-b6952347bfe8",
        "parentId" : "3c8c51ab-f361-4e70-be8f-d13b46b9a9ee",
        "authorId" : "3055cbc5-86a1-4f87-994c-78b03c199b4f",
        "body" : "When under test, self.child_classes appears to randomize the response when .join() is called (the unit test randomly fails). Sorted() eliminates the randomization and allows the test to pass consistently. My next PR will allow aci.py to be testable and I will be able to demonstrate this with the unit tests I have ready to upload.",
        "createdAt" : "2019-03-12T00:39:05Z",
        "updatedAt" : "2019-03-12T00:39:05Z",
        "lastEditedBy" : "3055cbc5-86a1-4f87-994c-78b03c199b4f",
        "tags" : [
        ]
      }
    ],
    "commit" : "b9721be05e56e6f759c7615b9d99ce5cc63226fb",
    "line" : 203,
    "diffHunk" : "@@ -1,1 +631,635 @@        if self.child_classes:\n            # Append child_classes to filter_string if filter string is empty\n            self.update_qs({'rsp-subtree': 'full', 'rsp-subtree-class': ','.join(sorted(self.child_classes))})\n\n    def _construct_url_1(self, obj):"
  }
]