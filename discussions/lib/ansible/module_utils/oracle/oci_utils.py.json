[
  {
    "id" : "d0eadcce-951c-4427-bcf9-a76cd6d72ab6",
    "prId" : 53156,
    "prUrl" : "https://github.com/ansible/ansible/pull/53156#pullrequestreview-213305949",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "41b89519-3a7e-425f-b5d5-8570297423ec",
        "parentId" : null,
        "authorId" : "d7d8721c-7ad0-4834-9a3d-b53ca8656789",
        "body" : "Do you need this? \r\nCould you just see if api_key is set or not?",
        "createdAt" : "2019-03-08T09:22:45Z",
        "updatedAt" : "2019-03-25T18:15:01Z",
        "lastEditedBy" : "d7d8721c-7ad0-4834-9a3d-b53ca8656789",
        "tags" : [
        ]
      },
      {
        "id" : "c8aed52d-a1f2-4054-b626-caa8bfa524d6",
        "parentId" : "41b89519-3a7e-425f-b5d5-8570297423ec",
        "authorId" : "b5e17f54-7efb-4473-8992-a69d2324927c",
        "body" : "There may be a case when `api_key` is set but still an user wants to authenticate using instance principal by setting `auth_type` to `instance_principal`.",
        "createdAt" : "2019-03-12T10:32:53Z",
        "updatedAt" : "2019-03-25T18:15:01Z",
        "lastEditedBy" : "b5e17f54-7efb-4473-8992-a69d2324927c",
        "tags" : [
        ]
      }
    ],
    "commit" : "1c28e1701e2788fcf299a2babe604c19b1e69b9f",
    "line" : 96,
    "diffHunk" : "@@ -1,1 +94,98 @@        api_user_key_file=dict(type=\"str\"),\n        api_user_key_pass_phrase=dict(type=\"str\", no_log=True),\n        auth_type=dict(\n            type=\"str\",\n            required=False,"
  },
  {
    "id" : "bdf81a92-39b2-4c16-beab-08e9faee93f8",
    "prId" : 53156,
    "prUrl" : "https://github.com/ansible/ansible/pull/53156#pullrequestreview-212387869",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "18cf17bd-e45b-4eb8-851e-508d227d2f0b",
        "parentId" : null,
        "authorId" : "d7d8721c-7ad0-4834-9a3d-b53ca8656789",
        "body" : "Please remove `required=False` that's the default",
        "createdAt" : "2019-03-08T09:23:03Z",
        "updatedAt" : "2019-03-25T18:15:01Z",
        "lastEditedBy" : "d7d8721c-7ad0-4834-9a3d-b53ca8656789",
        "tags" : [
        ]
      },
      {
        "id" : "e63434cb-3c9b-48e1-a443-02e90da1b54f",
        "parentId" : "18cf17bd-e45b-4eb8-851e-508d227d2f0b",
        "authorId" : "8c6c3e17-0c5a-408b-859d-b13e9d9839ba",
        "body" : "sure",
        "createdAt" : "2019-03-08T17:22:56Z",
        "updatedAt" : "2019-03-25T18:15:01Z",
        "lastEditedBy" : "8c6c3e17-0c5a-408b-859d-b13e9d9839ba",
        "tags" : [
        ]
      }
    ],
    "commit" : "1c28e1701e2788fcf299a2babe604c19b1e69b9f",
    "line" : 89,
    "diffHunk" : "@@ -1,1 +87,91 @@    # can check for absence of OCI Python SDK and fail with an appropriate message. Introducing an OCI dependency in\n    # this method would break that error handling logic.\n    common_args = dict(\n        config_file_location=dict(type=\"str\"),\n        config_profile_name=dict(type=\"str\", default=\"DEFAULT\"),"
  },
  {
    "id" : "35a8dde7-5ea0-4cd9-b4dc-e6d0a4a80024",
    "prId" : 53156,
    "prUrl" : "https://github.com/ansible/ansible/pull/53156#pullrequestreview-223987308",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ce19b354-b0ac-4221-a7d2-ed6e0d5b5689",
        "parentId" : null,
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "What do you need this function for? Ansible already handles aliases, there's no need to do this manually.",
        "createdAt" : "2019-03-26T06:10:13Z",
        "updatedAt" : "2019-03-26T06:10:14Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      },
      {
        "id" : "3d090835-306e-4b32-be97-7cfa290f5331",
        "parentId" : "ce19b354-b0ac-4221-a7d2-ed6e0d5b5689",
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "(GitHub is showing this with the wrong code snippet in the discussion overview. This comment is about the `_get_user_provided_value` function.)",
        "createdAt" : "2019-04-02T04:07:04Z",
        "updatedAt" : "2019-04-02T04:07:04Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      },
      {
        "id" : "782a499e-6b9d-4856-84e3-7075a4fe188f",
        "parentId" : "ce19b354-b0ac-4221-a7d2-ed6e0d5b5689",
        "authorId" : "8c6c3e17-0c5a-408b-859d-b13e9d9839ba",
        "body" : "@felixfontein  The purpose for _get_user_provided_value function is to allow us to compare the attributes returned from the cloud with the attributes provided by the user. If the values are different, we send an update request to the cloud. If we remove this function we have to change the naming convention that we use in all modules.\r\n\r\nCurrently we use this naming convention \r\nname=dict(type=“str”, required=False, aliases=[“display_name”]), \r\nWithout this function, we need to flip the naming convention to to match the SDK attributes as the main values:\r\ndisplay_name=dict(type=“str”, required=False, aliases=[“name”])\r\n\r\nWe prefer to keep the current convention because it makes the modules' attributes more user friendly and more consistent. As you see, we are already using Ansible aliasing and this function is not used to handle aliasing or to re-implement an exciting functionality. ",
        "createdAt" : "2019-04-08T17:25:45Z",
        "updatedAt" : "2019-04-08T17:25:45Z",
        "lastEditedBy" : "8c6c3e17-0c5a-408b-859d-b13e9d9839ba",
        "tags" : [
        ]
      },
      {
        "id" : "aa88bd17-9883-4b11-a859-ecc11adb05b2",
        "parentId" : "ce19b354-b0ac-4221-a7d2-ed6e0d5b5689",
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "Sounds ok.",
        "createdAt" : "2019-04-08T17:34:22Z",
        "updatedAt" : "2019-04-08T17:34:22Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      }
    ],
    "commit" : "1c28e1701e2788fcf299a2babe604c19b1e69b9f",
    "line" : 1610,
    "diffHunk" : "@@ -1,1 +1608,1612 @@def _get_user_provided_value(module, attribute_name):\n    \"\"\"\n    Returns the user provided value for \"attribute_name\". We consider aliases in the module.\n    \"\"\"\n    user_provided_value = module.params.get(attribute_name, None)"
  }
]