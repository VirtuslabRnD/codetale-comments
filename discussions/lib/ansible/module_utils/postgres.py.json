[
  {
    "id" : "b843f005-f5f3-4884-9ffd-deff7d0db0d1",
    "prId" : 55514,
    "prUrl" : "https://github.com/ansible/ansible/pull/55514#pullrequestreview-228277275",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ee5e0f4e-0c5d-407a-9fa1-c21559d073d5",
        "parentId" : null,
        "authorId" : "ff63c3eb-7034-4bd1-a5dc-9d0674949d07",
        "body" : "Would it make sense to move build the `kw`s inside this function? I think we should be able to move the following section into here since we already have the module so it should be all we need to build the connection details.\r\n```python\r\n    params_map = {\r\n        \"login_host\": \"host\",\r\n        \"login_user\": \"user\",\r\n        \"login_password\": \"password\",\r\n        \"port\": \"port\",\r\n        \"db\": \"database\",\r\n        \"ssl_mode\": \"sslmode\",\r\n        \"ca_cert\": \"sslrootcert\"\r\n    }\r\n    kw = dict((params_map[k], v) for (k, v) in iteritems(module.params)\r\n              if k in params_map and v != \"\" and v is not None)\r\n    # If a login_unix_socket is specified, incorporate it here.\r\n    is_localhost = \"host\" not in kw or kw[\"host\"] == \"\" or kw[\"host\"] == \"localhost\"\r\n    if is_localhost and module.params[\"login_unix_socket\"] != \"\":\r\n        kw[\"host\"] = module.params[\"login_unix_socket\"]\r\n    if psycopg2.__version__ < '2.4.3' and sslrootcert is not None:\r\n        module.fail_json(msg='psycopg2 must be at least 2.4.3 in order to user the ca_cert parameter')\r\n```\r\nIt would reduce the duplicate code and might make it easier to manage in the future, since every module is now using the `postgres_common_argument_spec` they should have the correct params too.",
        "createdAt" : "2019-04-18T11:23:30Z",
        "updatedAt" : "2019-04-18T11:23:46Z",
        "lastEditedBy" : "ff63c3eb-7034-4bd1-a5dc-9d0674949d07",
        "tags" : [
        ]
      },
      {
        "id" : "c615f07d-c2c2-418e-9d0c-a360065b9c01",
        "parentId" : "ee5e0f4e-0c5d-407a-9fa1-c21559d073d5",
        "authorId" : "d2d80496-0795-4618-ba72-36ae6c5b52ef",
        "body" : "@andytom , very good note, thank you! I should think and try",
        "createdAt" : "2019-04-18T11:46:14Z",
        "updatedAt" : "2019-04-18T11:46:14Z",
        "lastEditedBy" : "d2d80496-0795-4618-ba72-36ae6c5b52ef",
        "tags" : [
        ]
      },
      {
        "id" : "8fd57dc0-33ee-49e9-b6c5-58fbdc3e6316",
        "parentId" : "ee5e0f4e-0c5d-407a-9fa1-c21559d073d5",
        "authorId" : "d2d80496-0795-4618-ba72-36ae6c5b52ef",
        "body" : "@andytom , I think it's necessary to keep kw because we return kw that contains connection params as well.",
        "createdAt" : "2019-04-18T11:59:34Z",
        "updatedAt" : "2019-04-18T11:59:34Z",
        "lastEditedBy" : "d2d80496-0795-4618-ba72-36ae6c5b52ef",
        "tags" : [
        ]
      },
      {
        "id" : "fa155cba-b1aa-44fe-bc6c-565948b9709f",
        "parentId" : "ee5e0f4e-0c5d-407a-9fa1-c21559d073d5",
        "authorId" : "d2d80496-0795-4618-ba72-36ae6c5b52ef",
        "body" : "I suggest to merge this PR and after that we can think about optimizations.",
        "createdAt" : "2019-04-18T12:00:28Z",
        "updatedAt" : "2019-04-18T12:00:28Z",
        "lastEditedBy" : "d2d80496-0795-4618-ba72-36ae6c5b52ef",
        "tags" : [
        ]
      },
      {
        "id" : "362120ba-fc44-4566-83a4-ea082a23f01c",
        "parentId" : "ee5e0f4e-0c5d-407a-9fa1-c21559d073d5",
        "authorId" : "d2d80496-0795-4618-ba72-36ae6c5b52ef",
        "body" : "@andytom , I made a short note in [#PostgreSQL](https://github.com/ansible/community/wiki/PostgreSQL).\r\nThe first aim of this PR is to move connection_to_db and get_pg_version to module_utils (as gundalow and I wanted). However your suggestion is very interesting, so after merge this one we should think how to implement it safely",
        "createdAt" : "2019-04-18T12:17:21Z",
        "updatedAt" : "2019-04-18T12:17:21Z",
        "lastEditedBy" : "d2d80496-0795-4618-ba72-36ae6c5b52ef",
        "tags" : [
        ]
      },
      {
        "id" : "68cce5c7-4910-4a15-b307-0d2082b338f0",
        "parentId" : "ee5e0f4e-0c5d-407a-9fa1-c21559d073d5",
        "authorId" : "d7d8721c-7ad0-4834-9a3d-b53ca8656789",
        "body" : "@andytom Good suggestion thanks. Let's get this merged and backported then we can look at further improvements.",
        "createdAt" : "2019-04-18T13:15:03Z",
        "updatedAt" : "2019-04-18T13:15:44Z",
        "lastEditedBy" : "d7d8721c-7ad0-4834-9a3d-b53ca8656789",
        "tags" : [
        ]
      }
    ],
    "commit" : "664fe35709319b0c56bdf8b83f3ba686699ac4dd",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +64,68 @@\n\ndef connect_to_db(module, kw, autocommit=False):\n    try:\n        db_connection = psycopg2.connect(**kw)"
  },
  {
    "id" : "1837d80c-ff4e-4923-909a-bfff55f998f5",
    "prId" : 55549,
    "prUrl" : "https://github.com/ansible/ansible/pull/55549#pullrequestreview-230592541",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b883cd7d-f1b6-45b2-8a1b-c126e44bc40c",
        "parentId" : null,
        "authorId" : "ff63c3eb-7034-4bd1-a5dc-9d0674949d07",
        "body" : "Do we need a default case for this, e.g what happens if there is no `db`, `database` or `login_db` set, should we fail? Something like\r\n\r\n```suggestion\r\n        else:\r\n            module.fail_json(msg=\"No database parameter set, need one of 'db', 'database' or 'login_db'\")\r\n\r\n```",
        "createdAt" : "2019-04-24T17:26:29Z",
        "updatedAt" : "2019-04-25T05:50:50Z",
        "lastEditedBy" : "ff63c3eb-7034-4bd1-a5dc-9d0674949d07",
        "tags" : [
        ]
      },
      {
        "id" : "0a897567-3ea0-4bda-b609-431d63caa5c1",
        "parentId" : "b883cd7d-f1b6-45b2-8a1b-c126e44bc40c",
        "authorId" : "d2d80496-0795-4618-ba72-36ae6c5b52ef",
        "body" : "@andytom , nps, thank you much for reviewing!\r\nVery interesting point about the default value.\r\nHowever db/database/etc param is not necessary to be not None/'' for many of the modules, like postgresql_user, _idx, etc.\r\nAs we know in this case psycopg will use default db like a name of a user who's trying to connect.\r\nYour suggestion gave me an idea to change it to module.warn, see my last commit.\r\nI added warn_db_default arg for modules that work with global objects (user, settings, info).\r\nI think it will be very useful if a dba forget to pass db name and we warn him about that he's working with a default database that is usually quite strange ;)\r\nWhat do you think about it ?",
        "createdAt" : "2019-04-25T06:03:13Z",
        "updatedAt" : "2019-04-25T06:03:13Z",
        "lastEditedBy" : "d2d80496-0795-4618-ba72-36ae6c5b52ef",
        "tags" : [
        ]
      },
      {
        "id" : "3f2c6445-ea1f-4ded-8d08-73440db971a8",
        "parentId" : "b883cd7d-f1b6-45b2-8a1b-c126e44bc40c",
        "authorId" : "ff63c3eb-7034-4bd1-a5dc-9d0674949d07",
        "body" : "That makes perfect sense to me.",
        "createdAt" : "2019-04-25T10:11:00Z",
        "updatedAt" : "2019-04-25T10:11:00Z",
        "lastEditedBy" : "ff63c3eb-7034-4bd1-a5dc-9d0674949d07",
        "tags" : [
        ]
      },
      {
        "id" : "82cbe5e3-d9ee-4cbf-a488-561584af9603",
        "parentId" : "b883cd7d-f1b6-45b2-8a1b-c126e44bc40c",
        "authorId" : "d2d80496-0795-4618-ba72-36ae6c5b52ef",
        "body" : "@andytom , thank you for reviewing! Not having another channel to communicate with you, I sent a message to you in LinkedIn (if you like you can answer by mail to aaklychkov at mail dot ru, it I can't check LinkedIn before 20.00 UTC) ",
        "createdAt" : "2019-04-25T11:29:55Z",
        "updatedAt" : "2019-04-25T11:35:20Z",
        "lastEditedBy" : "d2d80496-0795-4618-ba72-36ae6c5b52ef",
        "tags" : [
        ]
      }
    ],
    "commit" : "48c3385712bb2f3ea3b4c78d121b217eaac9e1ba",
    "line" : 64,
    "diffHunk" : "@@ -1,1 +94,98 @@            module.warn('Database name has not been passed, '\n                        'used default database to connect to.')\n\n    kw = dict((params_map[k], v) for (k, v) in iteritems(module.params)\n              if k in params_map and v != '' and v is not None)"
  },
  {
    "id" : "f6d1730c-bbb1-4334-9735-a1f4b34d06d9",
    "prId" : 55799,
    "prUrl" : "https://github.com/ansible/ansible/pull/55799#pullrequestreview-231650427",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d1b65cb3-3d0b-44ce-9e36-7ce6b4ba980f",
        "parentId" : null,
        "authorId" : "ff63c3eb-7034-4bd1-a5dc-9d0674949d07",
        "body" : "Would it be better to reuse the existing `ensure_libs` function here?\r\n\r\n```suggestion\r\n    try:\r\n        ensure_libs(sslrootcert=module.params.get('ca_cert'))\r\n    except LibraryError as e:\r\n        module.fail_json(msg=str(e))\r\n```",
        "createdAt" : "2019-04-26T10:31:57Z",
        "updatedAt" : "2019-04-26T12:32:49Z",
        "lastEditedBy" : "ff63c3eb-7034-4bd1-a5dc-9d0674949d07",
        "tags" : [
        ]
      },
      {
        "id" : "6067ab46-584a-4501-8d17-94a06f884a9a",
        "parentId" : "d1b65cb3-3d0b-44ce-9e36-7ce6b4ba980f",
        "authorId" : "d2d80496-0795-4618-ba72-36ae6c5b52ef",
        "body" : "@andytom , it causes problems with unit tests, see links in the description",
        "createdAt" : "2019-04-26T11:53:47Z",
        "updatedAt" : "2019-04-26T12:32:49Z",
        "lastEditedBy" : "d2d80496-0795-4618-ba72-36ae6c5b52ef",
        "tags" : [
        ]
      },
      {
        "id" : "22ae5339-8a26-4a68-b95a-40b962452b85",
        "parentId" : "d1b65cb3-3d0b-44ce-9e36-7ce6b4ba980f",
        "authorId" : "ff63c3eb-7034-4bd1-a5dc-9d0674949d07",
        "body" : "I have had a look at the description and the [failed tests in shippable](https://app.shippable.com/github/ansible/ansible/runs/120738/5/console), my understanding for checking that is that this is because the `ensure_libs` function was changed but the tests were not updated. What I am suggesting above is not to change the `ensure_libs` function but to simply use it. This will mean that we won't have two functions `ensure_libs` and `ensure_required_libs` that contain the same logic.",
        "createdAt" : "2019-04-26T12:31:04Z",
        "updatedAt" : "2019-04-26T12:32:49Z",
        "lastEditedBy" : "ff63c3eb-7034-4bd1-a5dc-9d0674949d07",
        "tags" : [
        ]
      },
      {
        "id" : "149fdb00-f3da-4af5-9eb2-392ebe85f396",
        "parentId" : "d1b65cb3-3d0b-44ce-9e36-7ce6b4ba980f",
        "authorId" : "d2d80496-0795-4618-ba72-36ae6c5b52ef",
        "body" : "> ensure_libs function was changed but the tests were not updated\r\n\r\nExactly, my suggestion from ansible-devel:\r\n```\r\nI examined unit tests... They cover only ensure_libs (small strange function) and they must be completely rewritten.\r\nI made a note about it in our group. However I can't implement they fast because didn't work with unittest and other at all.\r\nIf I start to learn unittest, etc. now, I'm afraid it takes significant time (weeks maybe, I'm working on my day job at the same time).\r\nOf course I do want to figure it out because this is a very important skill for a developer but now this changes (moving params to connect_to_db) is a blocker for me for making other PRs\r\nSo I suggest this PR https://github.com/ansible/ansible/pull/55799.\r\nNothing criminal, in short, I left ensure_libs() for a while and added new one instead.\r\nBetter I'll understand pytest lib completely and add unit test by separate special PR later (I made the note in the working group, so I won't forget).\r\nNow I suggest to merge this PR (I copied files from the previous that was merged, only changed postgres.py and postgresql_db a bit)\r\n```\r\nIn short it needs a lot of time but this PR is a blocker. Sure we'll remove one of them later.",
        "createdAt" : "2019-04-26T13:05:23Z",
        "updatedAt" : "2019-04-26T13:05:23Z",
        "lastEditedBy" : "d2d80496-0795-4618-ba72-36ae6c5b52ef",
        "tags" : [
        ]
      },
      {
        "id" : "2cc09445-99dc-4ee0-83de-89b1d02d0b19",
        "parentId" : "d1b65cb3-3d0b-44ce-9e36-7ce6b4ba980f",
        "authorId" : "ff63c3eb-7034-4bd1-a5dc-9d0674949d07",
        "body" : "So the suggestion I added above (copied below) works around this, if we add the following change we don't need to add the `ensure_required_libs` function or make any changes to  `ensure_libs`.\r\n\r\n```suggestion\r\n    try:\r\n        ensure_libs(sslrootcert=module.params.get('ca_cert'))\r\n    except LibraryError as e:\r\n        module.fail_json(msg=str(e))\r\n```",
        "createdAt" : "2019-04-26T13:18:53Z",
        "updatedAt" : "2019-04-26T13:18:54Z",
        "lastEditedBy" : "ff63c3eb-7034-4bd1-a5dc-9d0674949d07",
        "tags" : [
        ]
      },
      {
        "id" : "5455a4c8-5613-415e-8f9a-04c00d514c8b",
        "parentId" : "d1b65cb3-3d0b-44ce-9e36-7ce6b4ba980f",
        "authorId" : "d2d80496-0795-4618-ba72-36ae6c5b52ef",
        "body" : "Have you run anything like this after this changes?\r\n```\r\nansible-test units test/units/module_utils/test_postgresql.py --python 2.7 --docker fedora28 -vvvv > ~/test.log\r\n```",
        "createdAt" : "2019-04-26T13:27:30Z",
        "updatedAt" : "2019-04-26T13:27:30Z",
        "lastEditedBy" : "d2d80496-0795-4618-ba72-36ae6c5b52ef",
        "tags" : [
        ]
      },
      {
        "id" : "54afd482-a772-430b-9241-291e5b390d2c",
        "parentId" : "d1b65cb3-3d0b-44ce-9e36-7ce6b4ba980f",
        "authorId" : "d2d80496-0795-4618-ba72-36ae6c5b52ef",
        "body" : "I'll try it on Monday (hope), thank you!",
        "createdAt" : "2019-04-26T13:30:10Z",
        "updatedAt" : "2019-04-26T13:30:10Z",
        "lastEditedBy" : "d2d80496-0795-4618-ba72-36ae6c5b52ef",
        "tags" : [
        ]
      },
      {
        "id" : "5ba01ffd-4c25-42a4-ba18-8867b3ad2e7e",
        "parentId" : "d1b65cb3-3d0b-44ce-9e36-7ce6b4ba980f",
        "authorId" : "d2d80496-0795-4618-ba72-36ae6c5b52ef",
        "body" : "if psycopg2 is not installed, it returns:\r\n```\r\n The full traceback is:\r\nWARNING: The below traceback may *not* be related to the actual failure.\r\n  File \"/tmp/ansible_postgresql_query_payload_5bN2rh/ansible_postgresql_query_payload.zip/ansible/module_utils/postgres.py\", line 71, in connect_to_db\r\n    ensure_libs(sslrootcert=module.params.get('ca_cert'))\r\n  File \"/tmp/ansible_postgresql_query_payload_5bN2rh/ansible_postgresql_query_payload.zip/ansible/module_utils/postgres.py\", line 49, in ensure_libs\r\n    raise LibraryError('psycopg2 is not installed. we need psycopg2.')\r\n\r\nfatal: [spblnx176]: FAILED! => {\r\n    \"ansible_facts\": {\r\n        \"discovered_interpreter_python\": \"/usr/bin/python\"\r\n    }, \r\n    \"changed\": false, \r\n    \"invocation\": {\r\n        \"module_args\": {\r\n            \"ca_cert\": null, \r\n            \"db\": null, \r\n            \"login_host\": \"\", \r\n            \"login_password\": \"\", \r\n            \"login_unix_socket\": \"\", \r\n            \"login_user\": \"postgres\", \r\n            \"named_args\": null, \r\n            \"path_to_script\": null, \r\n            \"port\": 5432, \r\n            \"positional_args\": null, \r\n            \"query\": \"SELECT now()\", \r\n            \"session_role\": null, \r\n            \"ssl_mode\": \"prefer\"\r\n        }\r\n    }, \r\n    \"msg\": \"psycopg2 is not installed. we need psycopg2.\"\r\n}\r\n```\r\nWe need to use missing_required_libs and get something like^\r\n```\r\n   \"msg\": \"Failed to import the required Python library (psycopg2) on mydbhost.lan's Python /usr/bin/python. Please read module documentation and install in the appropriate location\"\r\n```\r\nWe also need to make good unit tests for functions from postgres.py from scratch using pytest.\r\nSo I suggest to leave it as it is.",
        "createdAt" : "2019-04-29T06:20:53Z",
        "updatedAt" : "2019-04-29T06:20:53Z",
        "lastEditedBy" : "d2d80496-0795-4618-ba72-36ae6c5b52ef",
        "tags" : [
        ]
      },
      {
        "id" : "39cb19b7-0ee5-4bb9-8aa9-82e7af754938",
        "parentId" : "d1b65cb3-3d0b-44ce-9e36-7ce6b4ba980f",
        "authorId" : "ff63c3eb-7034-4bd1-a5dc-9d0674949d07",
        "body" : "Fair enough.",
        "createdAt" : "2019-04-29T12:38:02Z",
        "updatedAt" : "2019-04-29T12:38:02Z",
        "lastEditedBy" : "ff63c3eb-7034-4bd1-a5dc-9d0674949d07",
        "tags" : [
        ]
      }
    ],
    "commit" : "c1932a13c2511b2b894d9840301521eb4945782d",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +77,81 @@def connect_to_db(module, autocommit=False, fail_on_conn=True, warn_db_default=True):\n\n    ensure_required_libs(module)\n\n    # To use defaults values, keyword arguments must be absent, so"
  },
  {
    "id" : "517da064-fd45-4b57-b3b8-4be8a98e7de8",
    "prId" : 55799,
    "prUrl" : "https://github.com/ansible/ansible/pull/55799#pullrequestreview-231130741",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3d65836a-970e-45cf-8492-c8f6de16f95b",
        "parentId" : null,
        "authorId" : "d4c7fda6-9311-4eb9-91ca-d3f1cbccd288",
        "body" : "Should not `cursor.close()` be always called ? `close` is not called when an exception occurs.",
        "createdAt" : "2019-04-26T10:33:20Z",
        "updatedAt" : "2019-04-26T12:32:49Z",
        "lastEditedBy" : "d4c7fda6-9311-4eb9-91ca-d3f1cbccd288",
        "tags" : [
        ]
      },
      {
        "id" : "c1cab08c-2dbf-4b0d-a3ef-3ba5a74469ff",
        "parentId" : "3d65836a-970e-45cf-8492-c8f6de16f95b",
        "authorId" : "d2d80496-0795-4618-ba72-36ae6c5b52ef",
        "body" : "cursor.close() is used in this particular case because it is a temporary cursor only for switch a session role.",
        "createdAt" : "2019-04-26T12:34:39Z",
        "updatedAt" : "2019-04-26T12:34:39Z",
        "lastEditedBy" : "d2d80496-0795-4618-ba72-36ae6c5b52ef",
        "tags" : [
        ]
      }
    ],
    "commit" : "c1932a13c2511b2b894d9840301521eb4945782d",
    "line" : 80,
    "diffHunk" : "@@ -1,1 +126,130 @@            except Exception as e:\n                module.fail_json(msg=\"Could not switch role: %s\" % to_native(e))\n        cursor.close()\n\n    except TypeError as e:"
  },
  {
    "id" : "0c0cf7cc-ff21-4431-9bd2-a9df93dc9a17",
    "prId" : 55799,
    "prUrl" : "https://github.com/ansible/ansible/pull/55799#pullrequestreview-231134049",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "083a7c0f-b12a-4039-a38f-bedc7b8b711a",
        "parentId" : null,
        "authorId" : "d4c7fda6-9311-4eb9-91ca-d3f1cbccd288",
        "body" : "It looks like params are not only moved, some are added.",
        "createdAt" : "2019-04-26T10:40:55Z",
        "updatedAt" : "2019-04-26T12:32:49Z",
        "lastEditedBy" : "d4c7fda6-9311-4eb9-91ca-d3f1cbccd288",
        "tags" : [
        ]
      },
      {
        "id" : "06765e9f-8927-46c6-8fe0-d21e4c29a984",
        "parentId" : "083a7c0f-b12a-4039-a38f-bedc7b8b711a",
        "authorId" : "d2d80496-0795-4618-ba72-36ae6c5b52ef",
        "body" : "yes, changed description",
        "createdAt" : "2019-04-26T12:42:42Z",
        "updatedAt" : "2019-04-26T12:42:42Z",
        "lastEditedBy" : "d2d80496-0795-4618-ba72-36ae6c5b52ef",
        "tags" : [
        ]
      }
    ],
    "commit" : "c1932a13c2511b2b894d9840301521eb4945782d",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +75,79 @@\n\ndef connect_to_db(module, autocommit=False, fail_on_conn=True, warn_db_default=True):\n\n    ensure_required_libs(module)"
  },
  {
    "id" : "1f9c2e40-6755-4d4a-a111-5e122ad81242",
    "prId" : 55799,
    "prUrl" : "https://github.com/ansible/ansible/pull/55799#pullrequestreview-231118135",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "56497859-af51-4f55-a24d-884d551c3153",
        "parentId" : null,
        "authorId" : "d4c7fda6-9311-4eb9-91ca-d3f1cbccd288",
        "body" : "Any reason to not keep `PSYCOPG2_IMP_ERR = traceback.format_exc()` ? This was [recently added](https://github.com/ansible/ansible/pull/51787/files#diff-fd1114643a7c9394b36aac9044e2c581) ?",
        "createdAt" : "2019-04-26T11:03:34Z",
        "updatedAt" : "2019-04-26T12:32:49Z",
        "lastEditedBy" : "d4c7fda6-9311-4eb9-91ca-d3f1cbccd288",
        "tags" : [
        ]
      },
      {
        "id" : "f09afd75-8dae-404e-81f5-96164334a6de",
        "parentId" : "56497859-af51-4f55-a24d-884d551c3153",
        "authorId" : "d2d80496-0795-4618-ba72-36ae6c5b52ef",
        "body" : "@pilou- , I remember that seems @dagwieers said traceback is no needed anymore in this way because of it's added automatically.",
        "createdAt" : "2019-04-26T12:02:01Z",
        "updatedAt" : "2019-04-26T12:32:49Z",
        "lastEditedBy" : "d2d80496-0795-4618-ba72-36ae6c5b52ef",
        "tags" : [
        ]
      }
    ],
    "commit" : "c1932a13c2511b2b894d9840301521eb4945782d",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +31,35 @@    import psycopg2\n    from psycopg2.extras import DictCursor\n    HAS_PSYCOPG2 = True\nexcept ImportError:\n    HAS_PSYCOPG2 = False"
  }
]