[
  {
    "id" : "7858bdf3-b582-43e7-86c6-02e577210dd0",
    "prId" : 44692,
    "prUrl" : "https://github.com/ansible/ansible/pull/44692#pullrequestreview-203391022",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e347f877-e26d-4216-bb17-7287304d717e",
        "parentId" : null,
        "authorId" : "d7d8721c-7ad0-4834-9a3d-b53ca8656789",
        "body" : "Is their anyway we could end up looking at the wrong image?",
        "createdAt" : "2019-02-13T18:42:25Z",
        "updatedAt" : "2019-02-13T18:48:28Z",
        "lastEditedBy" : "d7d8721c-7ad0-4834-9a3d-b53ca8656789",
        "tags" : [
        ]
      },
      {
        "id" : "43edf5b8-d1af-4438-9a4a-8e9bafcac7be",
        "parentId" : "e347f877-e26d-4216-bb17-7287304d717e",
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "I double-checked this; it turns out one cannot overwrite the default registry in docker (moby/moby#7203), so this cannot happen.\r\n\r\n(Except if someone replaces docker daemon by some \"compatible\" thing which does it differently. But then, there are probably no guarantees about anything...)",
        "createdAt" : "2019-02-13T19:03:11Z",
        "updatedAt" : "2019-02-13T19:03:11Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      }
    ],
    "commit" : "6e72f0f7743ef219c56daf0400e4733e424b869b",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +570,574 @@                self.log(\"Check for docker.io image: %s\" % repo_name)\n                images = self._image_lookup(repo_name, tag)\n                if len(images) == 0 and repo_name.startswith('library/'):\n                    # Sometimes library/xxx images are not found\n                    lookup = repo_name[len('library/'):]"
  },
  {
    "id" : "f9bec423-0c3c-45db-ac7f-70064892cff5",
    "prId" : 53710,
    "prUrl" : "https://github.com/ansible/ansible/pull/53710#pullrequestreview-213819265",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "516bbcff-7401-41a2-845d-0b0b52ef3fca",
        "parentId" : null,
        "authorId" : "581ff564-8257-49c6-857f-c202afca501a",
        "body" : "What do you think about renaming `warnings_key` to `warning_keys` to make it more clear that it expects something iterable?",
        "createdAt" : "2019-03-13T08:42:52Z",
        "updatedAt" : "2019-03-13T08:42:52Z",
        "lastEditedBy" : "581ff564-8257-49c6-857f-c202afca501a",
        "tags" : [
        ]
      },
      {
        "id" : "9c16fca3-cafc-4523-bf99-fe8f164d2797",
        "parentId" : "516bbcff-7401-41a2-845d-0b0b52ef3fca",
        "authorId" : "3c2a0f57-db61-42cd-9f60-337be7f6e7c6",
        "body" : "`warning_keys` indicates to me that these are multiple keys, which can all be used to retrieve warnings. That's why I chose `warning_key`, because it is one key to the warnings (and the key can potentially be a path, that's why it is a list).",
        "createdAt" : "2019-03-13T08:44:40Z",
        "updatedAt" : "2019-03-13T08:44:40Z",
        "lastEditedBy" : "3c2a0f57-db61-42cd-9f60-337be7f6e7c6",
        "tags" : [
        ]
      },
      {
        "id" : "7f957ffa-0d98-465b-8530-b157ff7e5bab",
        "parentId" : "516bbcff-7401-41a2-845d-0b0b52ef3fca",
        "authorId" : "581ff564-8257-49c6-857f-c202afca501a",
        "body" : "Makes sense.",
        "createdAt" : "2019-03-13T08:49:53Z",
        "updatedAt" : "2019-03-13T08:49:53Z",
        "lastEditedBy" : "581ff564-8257-49c6-857f-c202afca501a",
        "tags" : [
        ]
      }
    ],
    "commit" : "67d4f590bc959116d58e1e8ee5744732a861113d",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +663,667 @@        return new_tag, old_tag == new_tag\n\n    def report_warnings(self, result, warnings_key=None):\n        '''\n        Checks result of client operation for warnings, and if present, outputs them."
  },
  {
    "id" : "1c5c5ca3-586e-4706-a1e8-64c5be328659",
    "prId" : 53906,
    "prUrl" : "https://github.com/ansible/ansible/pull/53906#pullrequestreview-215363205",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "eed3448b-c4f1-4927-9dd4-4477ed050323",
        "parentId" : null,
        "authorId" : "1428242b-3bf6-4d26-9606-a4186f69e21b",
        "body" : "I would drop it. Let the docker library handle this if `tcp://` is provided. The `kwargs_from_env` from `docker.utils` handles that, also `parse_host` method.",
        "createdAt" : "2019-03-17T15:26:48Z",
        "updatedAt" : "2019-03-17T15:54:21Z",
        "lastEditedBy" : "1428242b-3bf6-4d26-9606-a4186f69e21b",
        "tags" : [
        ]
      },
      {
        "id" : "9b4d1245-9b73-4281-ac25-fefe7926dc1d",
        "parentId" : "eed3448b-c4f1-4927-9dd4-4477ed050323",
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "I would keep it for this PR, and remove it in another PR, so that this refactoring doesn't change any behavior. Just in case this has some impact somewhere, it can be undone quickly without reverting everything from this PR :)\r\n\r\n(Also, we're not using `kwargs_from_env`.)",
        "createdAt" : "2019-03-17T15:51:03Z",
        "updatedAt" : "2019-03-17T15:54:21Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      },
      {
        "id" : "d40d46e9-3644-49be-804c-edb56337ef7a",
        "parentId" : "eed3448b-c4f1-4927-9dd4-4477ed050323",
        "authorId" : "1428242b-3bf6-4d26-9606-a4186f69e21b",
        "body" : "No problem, if then all integration tests are still good we may leave it to docker library to change it or not",
        "createdAt" : "2019-03-17T16:02:35Z",
        "updatedAt" : "2019-03-17T16:02:35Z",
        "lastEditedBy" : "1428242b-3bf6-4d26-9606-a4186f69e21b",
        "tags" : [
        ]
      },
      {
        "id" : "759c735e-a5da-498a-a7f0-0260ff7028b9",
        "parentId" : "eed3448b-c4f1-4927-9dd4-4477ed050323",
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "All failing integration tests are unrelated (installing packages for Fedora fails a lot), at least so far. So it probably is fine :) Could you test whether you can still connect to your swarm with TLS both with the inventory plugin and some of the docker_* modules? If yes, I'd like to get this merged soon (especially since every CI run takes foreeeever and has so many unrelated problems :) ).",
        "createdAt" : "2019-03-17T16:18:38Z",
        "updatedAt" : "2019-03-17T16:18:38Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      }
    ],
    "commit" : "bf4ed136906b36d93d6b1d64234a3eeb19dbb22c",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +182,186 @@def get_connect_params(auth, fail_function):\n    if auth['tls'] or auth['tls_verify']:\n        auth['docker_host'] = auth['docker_host'].replace('tcp://', 'https://')\n\n    if auth['tls_verify'] and auth['cert_path'] and auth['key_path']:"
  }
]