[
  {
    "id" : "f9cf995e-8d73-476f-ad0e-9782a9122b47",
    "prId" : 41656,
    "prUrl" : "https://github.com/ansible/ansible/pull/41656#pullrequestreview-131255371",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "77b61e9a-be13-4709-aa65-f85a4fc1ec9d",
        "parentId" : null,
        "authorId" : "2f8132dc-12f8-44dc-8b97-1cf4c1616b68",
        "body" : "Should this be `response` since that is what is returned? I don't see `result` used within this function.",
        "createdAt" : "2018-06-21T20:25:59Z",
        "updatedAt" : "2018-07-16T19:06:04Z",
        "lastEditedBy" : "2f8132dc-12f8-44dc-8b97-1cf4c1616b68",
        "tags" : [
        ]
      },
      {
        "id" : "9991fc4b-48f5-4dad-b079-cf01b5a06638",
        "parentId" : "77b61e9a-be13-4709-aa65-f85a4fc1ec9d",
        "authorId" : "fb1d7f1e-90f0-4ed2-9fd3-5d02addcee6e",
        "body" : "In get_firmware_inventory(), result{} is used :) but not in all the other ones that you have pointed out.",
        "createdAt" : "2018-06-22T15:17:50Z",
        "updatedAt" : "2018-07-16T19:06:04Z",
        "lastEditedBy" : "fb1d7f1e-90f0-4ed2-9fd3-5d02addcee6e",
        "tags" : [
        ]
      },
      {
        "id" : "135c2972-5498-4dec-85f5-27fb66eef86c",
        "parentId" : "77b61e9a-be13-4709-aa65-f85a4fc1ec9d",
        "authorId" : "fb1d7f1e-90f0-4ed2-9fd3-5d02addcee6e",
        "body" : "devices[] is not used, that's probably what you meant. All of these definitions where there for code that was later removed --> poor cleanup on my part. Thanks. ",
        "createdAt" : "2018-06-22T16:08:45Z",
        "updatedAt" : "2018-07-16T19:06:04Z",
        "lastEditedBy" : "fb1d7f1e-90f0-4ed2-9fd3-5d02addcee6e",
        "tags" : [
        ]
      }
    ],
    "commit" : "aca91e97424f2f2c45ede98974879b9a2ea3ca8a",
    "line" : 476,
    "diffHunk" : "@@ -1,1 +474,478 @@\n    def get_firmware_inventory(self):\n        result = {}\n        firmware = {}\n        response = self.get_request(self.root_uri + self.firmware_uri)"
  },
  {
    "id" : "9ea267da-ac9d-4557-be50-a86cb05ccb8e",
    "prId" : 41656,
    "prUrl" : "https://github.com/ansible/ansible/pull/41656#pullrequestreview-136306940",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "51b90d0b-e56e-4a53-98a1-4fa983ed8688",
        "parentId" : null,
        "authorId" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "body" : "Exact error should be stored here, since debugging any potential issues in the future will be next to impossible without having the error. Something like `\"Unknown error: %s\" % str(e)` should be enough.",
        "createdAt" : "2018-07-11T15:54:57Z",
        "updatedAt" : "2018-07-16T19:06:04Z",
        "lastEditedBy" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "tags" : [
        ]
      }
    ],
    "commit" : "aca91e97424f2f2c45ede98974879b9a2ea3ca8a",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +36,40 @@        # Almost all errors should be caught above, but just in case\n        except:\n            return {'ret': False, 'msg': \"Unknown error\"}\n        return {'ret': True, 'data': data}\n"
  },
  {
    "id" : "d3188717-7abd-4959-9239-478684e3c271",
    "prId" : 41656,
    "prUrl" : "https://github.com/ansible/ansible/pull/41656#pullrequestreview-136306940",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6d94141e-7517-4539-8903-2259299ba76a",
        "parentId" : null,
        "authorId" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "body" : "This method definition shares most of its functionality with `get_request` method, which indicates that the common functionality (common parameters, error handling, etc.) should be extracted into private method.",
        "createdAt" : "2018-07-11T15:57:35Z",
        "updatedAt" : "2018-07-16T19:06:04Z",
        "lastEditedBy" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "tags" : [
        ]
      }
    ],
    "commit" : "aca91e97424f2f2c45ede98974879b9a2ea3ca8a",
    "line" : 41,
    "diffHunk" : "@@ -1,1 +39,43 @@        return {'ret': True, 'data': data}\n\n    def post_request(self, uri, pyld, hdrs):\n        try:\n            resp = open_url(uri, data=json.dumps(pyld),"
  },
  {
    "id" : "80b2feb1-5992-4e3f-863c-de66ae433f5a",
    "prId" : 41656,
    "prUrl" : "https://github.com/ansible/ansible/pull/41656#pullrequestreview-136306940",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bf3aa7fd-ba12-4c21-b1c0-42a592b1eba4",
        "parentId" : null,
        "authorId" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "body" : "Same duplication of functionality as with `post_request` function.",
        "createdAt" : "2018-07-11T15:58:28Z",
        "updatedAt" : "2018-07-16T19:06:04Z",
        "lastEditedBy" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "tags" : [
        ]
      }
    ],
    "commit" : "aca91e97424f2f2c45ede98974879b9a2ea3ca8a",
    "line" : 58,
    "diffHunk" : "@@ -1,1 +56,60 @@        return {'ret': True, 'resp': resp}\n\n    def patch_request(self, uri, pyld, hdrs):\n        try:\n            resp = open_url(uri, data=json.dumps(pyld),"
  },
  {
    "id" : "5977eef9-813f-4956-a777-7fb56724541f",
    "prId" : 41656,
    "prUrl" : "https://github.com/ansible/ansible/pull/41656#pullrequestreview-136306940",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cf1e4a26-f19d-4d02-85e0-228d1aca15ac",
        "parentId" : null,
        "authorId" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "body" : "Same duplication of functionality as with `post_request` function.",
        "createdAt" : "2018-07-11T15:58:37Z",
        "updatedAt" : "2018-07-16T19:06:04Z",
        "lastEditedBy" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "tags" : [
        ]
      }
    ],
    "commit" : "aca91e97424f2f2c45ede98974879b9a2ea3ca8a",
    "line" : 75,
    "diffHunk" : "@@ -1,1 +73,77 @@        return {'ret': True, 'resp': resp}\n\n    def delete_request(self, uri, pyld, hdrs):\n        try:\n            resp = open_url(uri, data=json.dumps(pyld),"
  },
  {
    "id" : "ae0dc1a6-fe81-4eaa-9313-54809b69e04f",
    "prId" : 41656,
    "prUrl" : "https://github.com/ansible/ansible/pull/41656#pullrequestreview-136306940",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7059e48c-e75a-4449-b492-7b2ab328e20e",
        "parentId" : null,
        "authorId" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "body" : "Returning only parsed data here severely limits the usefulness of this function, since any requests will be considered OK as long as the response can be parsed as JSON. This means that server returning status 404 or 403 will still be considered success, but the rest of the code has no means of checking that since status is removed from the return value of this function.\r\n\r\nIt would be probably better and more consistent to return complete response here and write another wrapper function that can then check the return status, parse JSON if neeed, etc.",
        "createdAt" : "2018-07-11T16:12:42Z",
        "updatedAt" : "2018-07-16T19:06:04Z",
        "lastEditedBy" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "tags" : [
        ]
      }
    ],
    "commit" : "aca91e97424f2f2c45ede98974879b9a2ea3ca8a",
    "line" : 39,
    "diffHunk" : "@@ -1,1 +37,41 @@        except:\n            return {'ret': False, 'msg': \"Unknown error\"}\n        return {'ret': True, 'data': data}\n\n    def post_request(self, uri, pyld, hdrs):"
  },
  {
    "id" : "59745a61-e021-43ff-84bd-36160a4bd366",
    "prId" : 41656,
    "prUrl" : "https://github.com/ansible/ansible/pull/41656#pullrequestreview-136306940",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "75210d0a-12a8-4887-8aa2-69cce9f12811",
        "parentId" : null,
        "authorId" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "body" : "This will only filter out requests where exception occurred. If the user for example, passed in invalid credentials and server returns valid JSON back, response will be treated as a success.",
        "createdAt" : "2018-07-11T16:15:23Z",
        "updatedAt" : "2018-07-16T19:06:04Z",
        "lastEditedBy" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "tags" : [
        ]
      }
    ],
    "commit" : "aca91e97424f2f2c45ede98974879b9a2ea3ca8a",
    "line" : 97,
    "diffHunk" : "@@ -1,1 +95,99 @@    def _find_accountservice_resource(self, uri):\n        response = self.get_request(self.root_uri + uri)\n        if response['ret'] is False:\n            return response\n        data = response['data']"
  },
  {
    "id" : "edda562b-774c-4d67-b1d5-0a0700988d6e",
    "prId" : 41656,
    "prUrl" : "https://github.com/ansible/ansible/pull/41656#pullrequestreview-136306940",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7760e66a-0587-46eb-a83a-97ec463c7cbb",
        "parentId" : null,
        "authorId" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "body" : "Continuing previous comment and use case here. If the server returned 401 or 403 with error in JSON format, this `if` clause will catch that and return completely bogus response.",
        "createdAt" : "2018-07-11T16:17:25Z",
        "updatedAt" : "2018-07-16T19:06:04Z",
        "lastEditedBy" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "tags" : [
        ]
      }
    ],
    "commit" : "aca91e97424f2f2c45ede98974879b9a2ea3ca8a",
    "line" : 100,
    "diffHunk" : "@@ -1,1 +98,102 @@            return response\n        data = response['data']\n        if 'AccountService' not in data:\n            return {'ret': False, 'msg': \"AccountService resource not found\"}\n        else:"
  },
  {
    "id" : "d1e048b4-8445-4311-a545-0f32cd93f537",
    "prId" : 41656,
    "prUrl" : "https://github.com/ansible/ansible/pull/41656#pullrequestreview-136306940",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d27e2cf0-1ea0-41be-be0a-cc1c7f2ebc68",
        "parentId" : null,
        "authorId" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "body" : "Resource path should not be manipulated by hand, since we should only use paths that Redfish API returns (with one exception that has been actually removed from the latest version of the Redfish standard).",
        "createdAt" : "2018-07-11T16:25:57Z",
        "updatedAt" : "2018-07-16T19:06:04Z",
        "lastEditedBy" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "tags" : [
        ]
      }
    ],
    "commit" : "aca91e97424f2f2c45ede98974879b9a2ea3ca8a",
    "line" : 110,
    "diffHunk" : "@@ -1,1 +108,112 @@            accounts = data['Accounts']['@odata.id']\n            if accounts[-1:] == '/':\n                accounts = accounts[:-1]\n            self.accounts_uri = accounts\n        return {'ret': True}"
  },
  {
    "id" : "e8cc94fc-c374-4337-8291-47d758b99e38",
    "prId" : 41656,
    "prUrl" : "https://github.com/ansible/ansible/pull/41656#pullrequestreview-136306940",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a09bb93c-980c-403c-97c2-672390f0f103",
        "parentId" : null,
        "authorId" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "body" : "Name of this method is misleading, since it actually finds and stores OData id of the last system that Redfish API returns. But maybe the function implementation is wrong?",
        "createdAt" : "2018-07-11T16:27:54Z",
        "updatedAt" : "2018-07-16T19:06:04Z",
        "lastEditedBy" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "tags" : [
        ]
      }
    ],
    "commit" : "aca91e97424f2f2c45ede98974879b9a2ea3ca8a",
    "line" : 114,
    "diffHunk" : "@@ -1,1 +112,116 @@        return {'ret': True}\n\n    def _find_systems_resource(self, uri):\n        response = self.get_request(self.root_uri + uri)\n        if response['ret'] is False:"
  },
  {
    "id" : "c3ac4c8b-9957-4977-b479-26980bb13efa",
    "prId" : 41656,
    "prUrl" : "https://github.com/ansible/ansible/pull/41656#pullrequestreview-136306940",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "933ada65-2b41-4f8d-b4fc-b367cf9e16be",
        "parentId" : null,
        "authorId" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "body" : "As before, this will not catch non-200 statues of response.",
        "createdAt" : "2018-07-11T16:29:53Z",
        "updatedAt" : "2018-07-16T19:06:04Z",
        "lastEditedBy" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "tags" : [
        ]
      }
    ],
    "commit" : "aca91e97424f2f2c45ede98974879b9a2ea3ca8a",
    "line" : 116,
    "diffHunk" : "@@ -1,1 +114,118 @@    def _find_systems_resource(self, uri):\n        response = self.get_request(self.root_uri + uri)\n        if response['ret'] is False:\n            return response\n        data = response['data']"
  },
  {
    "id" : "cead0375-9648-434d-8585-4923d70f45bb",
    "prId" : 41656,
    "prUrl" : "https://github.com/ansible/ansible/pull/41656#pullrequestreview-136306940",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0a1a7b8d-4f08-4dbe-845d-c5271d9d71a4",
        "parentId" : null,
        "authorId" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "body" : "Last four lines could be simplified into `self.systems_uri = response[\"data\"][\"Members\"][-1][\"@odata.id\"]`, but I would say that the function should probably store the `systems` path as the name of the function suggests.",
        "createdAt" : "2018-07-11T16:32:43Z",
        "updatedAt" : "2018-07-16T19:06:04Z",
        "lastEditedBy" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "tags" : [
        ]
      }
    ],
    "commit" : "aca91e97424f2f2c45ede98974879b9a2ea3ca8a",
    "line" : 129,
    "diffHunk" : "@@ -1,1 +127,131 @@            for member in data[u'Members']:\n                systems_service = member[u'@odata.id']\n            self.systems_uri = systems_service\n            return {'ret': True}\n"
  },
  {
    "id" : "b16947b4-1de3-4846-a51c-910d86b5ced1",
    "prId" : 41656,
    "prUrl" : "https://github.com/ansible/ansible/pull/41656#pullrequestreview-136306940",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b80f217f-ca24-419a-82fa-e871acb88d94",
        "parentId" : null,
        "authorId" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "body" : "This will fail if there are no systems present (`data[\"Members\"]` is empty list).",
        "createdAt" : "2018-07-11T16:33:50Z",
        "updatedAt" : "2018-07-16T19:06:04Z",
        "lastEditedBy" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "tags" : [
        ]
      }
    ],
    "commit" : "aca91e97424f2f2c45ede98974879b9a2ea3ca8a",
    "line" : 128,
    "diffHunk" : "@@ -1,1 +126,130 @@            data = response['data']\n            for member in data[u'Members']:\n                systems_service = member[u'@odata.id']\n            self.systems_uri = systems_service\n            return {'ret': True}"
  },
  {
    "id" : "03a60e6f-6947-4910-ab0d-42de716637fb",
    "prId" : 41656,
    "prUrl" : "https://github.com/ansible/ansible/pull/41656#pullrequestreview-136306940",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a2382f1f-46e8-4da3-bea2-5ff3669fd57f",
        "parentId" : null,
        "authorId" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "body" : "Not catching non-200 responses.",
        "createdAt" : "2018-07-11T16:34:20Z",
        "updatedAt" : "2018-07-16T19:06:04Z",
        "lastEditedBy" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "tags" : [
        ]
      }
    ],
    "commit" : "aca91e97424f2f2c45ede98974879b9a2ea3ca8a",
    "line" : 134,
    "diffHunk" : "@@ -1,1 +132,136 @@    def _find_updateservice_resource(self, uri):\n        response = self.get_request(self.root_uri + uri)\n        if response['ret'] is False:\n            return response\n        data = response['data']"
  },
  {
    "id" : "45689ce4-213f-4a7d-95e1-72e63456e722",
    "prId" : 41656,
    "prUrl" : "https://github.com/ansible/ansible/pull/41656#pullrequestreview-136306940",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e7de13a7-47bd-4983-880e-3048bd59d649",
        "parentId" : null,
        "authorId" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "body" : "Again, name of the method is misleading, since chassis path is stored for each of the chassis that Redfish returned, or method body is broken.",
        "createdAt" : "2018-07-11T16:37:30Z",
        "updatedAt" : "2018-07-16T19:06:04Z",
        "lastEditedBy" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "tags" : [
        ]
      }
    ],
    "commit" : "aca91e97424f2f2c45ede98974879b9a2ea3ca8a",
    "line" : 150,
    "diffHunk" : "@@ -1,1 +148,152 @@            return {'ret': True}\n\n    def _find_chassis_resource(self, uri):\n        chassis_service = []\n        response = self.get_request(self.root_uri + uri)"
  },
  {
    "id" : "42b6d20e-3f81-46d8-8e3e-fc3fc47f831f",
    "prId" : 41656,
    "prUrl" : "https://github.com/ansible/ansible/pull/41656#pullrequestreview-136306940",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ef7aa7d6-7d69-4b69-bfb0-b3cc7ed417a8",
        "parentId" : null,
        "authorId" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "body" : "Not catching non-200 responses.",
        "createdAt" : "2018-07-11T16:37:39Z",
        "updatedAt" : "2018-07-16T19:06:04Z",
        "lastEditedBy" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "tags" : [
        ]
      }
    ],
    "commit" : "aca91e97424f2f2c45ede98974879b9a2ea3ca8a",
    "line" : 153,
    "diffHunk" : "@@ -1,1 +151,155 @@        chassis_service = []\n        response = self.get_request(self.root_uri + uri)\n        if response['ret'] is False:\n            return response\n        data = response['data']"
  },
  {
    "id" : "8fcb800a-9a60-4072-b9cf-d77e12cfb8d1",
    "prId" : 41656,
    "prUrl" : "https://github.com/ansible/ansible/pull/41656#pullrequestreview-136306940",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "aa7fd2ad-3738-475f-a510-c8496bfe7c00",
        "parentId" : null,
        "authorId" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "body" : "It would be more pythonic to write this as `self.chassis_uri_list = [ch[\"@odata.id\"] for ch in response[\"data\"]]`.",
        "createdAt" : "2018-07-11T16:42:52Z",
        "updatedAt" : "2018-07-16T19:06:04Z",
        "lastEditedBy" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "tags" : [
        ]
      }
    ],
    "commit" : "aca91e97424f2f2c45ede98974879b9a2ea3ca8a",
    "line" : 166,
    "diffHunk" : "@@ -1,1 +164,168 @@            for member in data[u'Members']:\n                chassis_service.append(member[u'@odata.id'])\n            self.chassis_uri_list = chassis_service\n            return {'ret': True}\n"
  },
  {
    "id" : "3f67f194-ae09-4c90-88fe-8093d09fbe63",
    "prId" : 41656,
    "prUrl" : "https://github.com/ansible/ansible/pull/41656#pullrequestreview-136306940",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "11c08678-8faf-4c18-ab85-33e359919513",
        "parentId" : null,
        "authorId" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "body" : "If the function name is correct, this is what should be stored.",
        "createdAt" : "2018-07-11T16:43:25Z",
        "updatedAt" : "2018-07-16T19:06:04Z",
        "lastEditedBy" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "tags" : [
        ]
      }
    ],
    "commit" : "aca91e97424f2f2c45ede98974879b9a2ea3ca8a",
    "line" : 159,
    "diffHunk" : "@@ -1,1 +157,161 @@            return {'ret': False, 'msg': \"Chassis resource not found\"}\n        else:\n            chassis = data[\"Chassis\"][\"@odata.id\"]\n            response = self.get_request(self.root_uri + chassis)\n            if response['ret'] is False:"
  },
  {
    "id" : "e5156993-9eb1-40ce-a2a7-044636b47524",
    "prId" : 41656,
    "prUrl" : "https://github.com/ansible/ansible/pull/41656#pullrequestreview-136306940",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "98625500-4e33-4fb9-ad61-b377b3b91c51",
        "parentId" : null,
        "authorId" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "body" : "This method's name is misleading, since last manager returned is stored, or method body is broken.",
        "createdAt" : "2018-07-11T16:44:42Z",
        "updatedAt" : "2018-07-16T19:06:04Z",
        "lastEditedBy" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "tags" : [
        ]
      }
    ],
    "commit" : "aca91e97424f2f2c45ede98974879b9a2ea3ca8a",
    "line" : 169,
    "diffHunk" : "@@ -1,1 +167,171 @@            return {'ret': True}\n\n    def _find_managers_resource(self, uri):\n        response = self.get_request(self.root_uri + uri)\n        if response['ret'] is False:"
  },
  {
    "id" : "e5a9a544-d3bc-4618-bb28-75900941f551",
    "prId" : 41656,
    "prUrl" : "https://github.com/ansible/ansible/pull/41656#pullrequestreview-136306940",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "81a25b50-0c9d-49f2-9861-e3c010278ff7",
        "parentId" : null,
        "authorId" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "body" : "Per function name, this should be stored in `manager_uri` instance member.",
        "createdAt" : "2018-07-11T16:45:21Z",
        "updatedAt" : "2018-07-16T19:06:04Z",
        "lastEditedBy" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "tags" : [
        ]
      }
    ],
    "commit" : "aca91e97424f2f2c45ede98974879b9a2ea3ca8a",
    "line" : 177,
    "diffHunk" : "@@ -1,1 +175,179 @@            return {'ret': False, 'msg': \"Manager resource not found\"}\n        else:\n            manager = data[\"Managers\"][\"@odata.id\"]\n            response = self.get_request(self.root_uri + manager)\n            if response['ret'] is False:"
  },
  {
    "id" : "56cac640-8b82-4900-bc24-c0fd4b635bf3",
    "prId" : 41656,
    "prUrl" : "https://github.com/ansible/ansible/pull/41656#pullrequestreview-136306940",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "19eedc8a-000d-4b8a-a13d-b6c7d6b08387",
        "parentId" : null,
        "authorId" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "body" : "Last four lines could be simplified to `self.manager_uri = response[\"data\"][-1][\"@odata.id\"]`.",
        "createdAt" : "2018-07-11T16:48:11Z",
        "updatedAt" : "2018-07-16T19:06:04Z",
        "lastEditedBy" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "tags" : [
        ]
      }
    ],
    "commit" : "aca91e97424f2f2c45ede98974879b9a2ea3ca8a",
    "line" : 184,
    "diffHunk" : "@@ -1,1 +182,186 @@            for member in data[u'Members']:\n                manager_service = member[u'@odata.id']\n            self.manager_uri = manager_service\n            return {'ret': True}\n"
  },
  {
    "id" : "d8e7f1a8-7c2a-4a0c-9031-be7283c1e57d",
    "prId" : 41656,
    "prUrl" : "https://github.com/ansible/ansible/pull/41656#pullrequestreview-136306940",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "37b738ec-a510-40a5-8a99-059869d9af8f",
        "parentId" : null,
        "authorId" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "body" : "This will fail if Redfish returns empty list of managers.",
        "createdAt" : "2018-07-11T16:50:04Z",
        "updatedAt" : "2018-07-16T19:06:04Z",
        "lastEditedBy" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "tags" : [
        ]
      }
    ],
    "commit" : "aca91e97424f2f2c45ede98974879b9a2ea3ca8a",
    "line" : 183,
    "diffHunk" : "@@ -1,1 +181,185 @@            data = response['data']\n            for member in data[u'Members']:\n                manager_service = member[u'@odata.id']\n            self.manager_uri = manager_service\n            return {'ret': True}"
  },
  {
    "id" : "ee16fe4e-6134-441a-b9ba-27d9875fd8e3",
    "prId" : 41656,
    "prUrl" : "https://github.com/ansible/ansible/pull/41656#pullrequestreview-136306940",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e07a365c-d683-4610-b8fd-e2f4afbf06b2",
        "parentId" : null,
        "authorId" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "body" : "This will fail if `self._find_managers_resource` has not been called yet. Method should probably check for the `self.manager_uri` presence and populate it instead of failing with attribute error.",
        "createdAt" : "2018-07-11T16:53:32Z",
        "updatedAt" : "2018-07-16T19:06:04Z",
        "lastEditedBy" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "tags" : [
        ]
      }
    ],
    "commit" : "aca91e97424f2f2c45ede98974879b9a2ea3ca8a",
    "line" : 192,
    "diffHunk" : "@@ -1,1 +190,194 @@\n        # Find LogService\n        response = self.get_request(self.root_uri + self.manager_uri)\n        if response['ret'] is False:\n            return response"
  },
  {
    "id" : "a586a8a8-3b3d-415d-bc63-7f516ddb1a5b",
    "prId" : 41656,
    "prUrl" : "https://github.com/ansible/ansible/pull/41656#pullrequestreview-136306940",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d00367f6-cff2-4a18-a143-9febf05db7fc",
        "parentId" : null,
        "authorId" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "body" : "Not catching non-200 responses.",
        "createdAt" : "2018-07-11T16:53:53Z",
        "updatedAt" : "2018-07-16T19:06:04Z",
        "lastEditedBy" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "tags" : [
        ]
      }
    ],
    "commit" : "aca91e97424f2f2c45ede98974879b9a2ea3ca8a",
    "line" : 193,
    "diffHunk" : "@@ -1,1 +191,195 @@        # Find LogService\n        response = self.get_request(self.root_uri + self.manager_uri)\n        if response['ret'] is False:\n            return response\n        data = response['data']"
  },
  {
    "id" : "18fd972e-d0a3-4e1d-8e34-bf539d38e18b",
    "prId" : 41656,
    "prUrl" : "https://github.com/ansible/ansible/pull/41656#pullrequestreview-136306940",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4c21723c-6dbc-44b9-ae42-49d060dd77ed",
        "parentId" : null,
        "authorId" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "body" : "Not catching non-200 responses.",
        "createdAt" : "2018-07-11T16:54:08Z",
        "updatedAt" : "2018-07-16T19:06:04Z",
        "lastEditedBy" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "tags" : [
        ]
      }
    ],
    "commit" : "aca91e97424f2f2c45ede98974879b9a2ea3ca8a",
    "line" : 202,
    "diffHunk" : "@@ -1,1 +200,204 @@        logs_uri = data[\"LogServices\"][\"@odata.id\"]\n        response = self.get_request(self.root_uri + logs_uri)\n        if response['ret'] is False:\n            return response\n        data = response['data']"
  },
  {
    "id" : "a365aa1b-2f37-48b7-90f7-cf105b48caa5",
    "prId" : 41656,
    "prUrl" : "https://github.com/ansible/ansible/pull/41656#pullrequestreview-136306940",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d4d22ba7-350c-49f1-bf23-5c2049cb7bee",
        "parentId" : null,
        "authorId" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "body" : "Not catching non-200 responses.",
        "createdAt" : "2018-07-11T16:54:55Z",
        "updatedAt" : "2018-07-16T19:06:04Z",
        "lastEditedBy" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "tags" : [
        ]
      }
    ],
    "commit" : "aca91e97424f2f2c45ede98974879b9a2ea3ca8a",
    "line" : 207,
    "diffHunk" : "@@ -1,1 +205,209 @@        for log_svcs_entry in data[u'Members']:\n            response = self.get_request(self.root_uri + log_svcs_entry[u'@odata.id'])\n            if response['ret'] is False:\n                return response\n            _data = response['data']"
  },
  {
    "id" : "8bda6335-e7c8-49f6-84b2-ab22b1dc9f4e",
    "prId" : 41656,
    "prUrl" : "https://github.com/ansible/ansible/pull/41656#pullrequestreview-136306940",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "43fb5022-749c-4634-a467-7d09e690e4cc",
        "parentId" : null,
        "authorId" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "body" : "Not catching non-200 responses.",
        "createdAt" : "2018-07-11T16:55:27Z",
        "updatedAt" : "2018-07-16T19:06:04Z",
        "lastEditedBy" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "tags" : [
        ]
      }
    ],
    "commit" : "aca91e97424f2f2c45ede98974879b9a2ea3ca8a",
    "line" : 239,
    "diffHunk" : "@@ -1,1 +237,241 @@        # Find LogService\n        response = self.get_request(self.root_uri + self.manager_uri)\n        if response['ret'] is False:\n            return response\n        data = response['data']"
  },
  {
    "id" : "6ccd2cd3-1279-4e2f-872d-38869764b6ee",
    "prId" : 41656,
    "prUrl" : "https://github.com/ansible/ansible/pull/41656#pullrequestreview-136306940",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a855e8ab-a585-4a79-a7d2-a2dfaacadca1",
        "parentId" : null,
        "authorId" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "body" : "Not catching non-20x responses.",
        "createdAt" : "2018-07-11T17:00:25Z",
        "updatedAt" : "2018-07-16T19:06:04Z",
        "lastEditedBy" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "tags" : [
        ]
      }
    ],
    "commit" : "aca91e97424f2f2c45ede98974879b9a2ea3ca8a",
    "line" : 261,
    "diffHunk" : "@@ -1,1 +259,263 @@                if \"#LogService.ClearLog\" in _data[u\"Actions\"]:\n                    self.post_request(self.root_uri + _data[u\"Actions\"][\"#LogService.ClearLog\"][\"target\"], {}, HEADERS)\n                    if response['ret'] is False:\n                        return response\n        return {'ret': True}"
  },
  {
    "id" : "e46984e6-d7a2-4419-9258-ba3da21db278",
    "prId" : 41656,
    "prUrl" : "https://github.com/ansible/ansible/pull/41656#pullrequestreview-136306940",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a50b8b8b-6e79-4595-ba98-e0b1160f0726",
        "parentId" : null,
        "authorId" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "body" : "Not catching non-200 responses.",
        "createdAt" : "2018-07-11T17:00:49Z",
        "updatedAt" : "2018-07-16T19:06:04Z",
        "lastEditedBy" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "tags" : [
        ]
      }
    ],
    "commit" : "aca91e97424f2f2c45ede98974879b9a2ea3ca8a",
    "line" : 254,
    "diffHunk" : "@@ -1,1 +252,256 @@        for log_svcs_entry in data[u'Members']:\n            response = self.get_request(self.root_uri + log_svcs_entry[\"@odata.id\"])\n            if response['ret'] is False:\n                return response\n            _data = response['data']"
  },
  {
    "id" : "79c0b6e5-13e3-4c3f-8eea-8541ec9226f1",
    "prId" : 41656,
    "prUrl" : "https://github.com/ansible/ansible/pull/41656#pullrequestreview-136306940",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0085e27d-5e53-4b81-b6c6-11eeebf0ed84",
        "parentId" : null,
        "authorId" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "body" : "This will fail if `systems_uri` attribute is not set.",
        "createdAt" : "2018-07-11T17:01:48Z",
        "updatedAt" : "2018-07-16T19:06:04Z",
        "lastEditedBy" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "tags" : [
        ]
      }
    ],
    "commit" : "aca91e97424f2f2c45ede98974879b9a2ea3ca8a",
    "line" : 271,
    "diffHunk" : "@@ -1,1 +269,273 @@\n        # Find Storage service\n        response = self.get_request(self.root_uri + self.systems_uri)\n        if response['ret'] is False:\n            return response"
  },
  {
    "id" : "c7684f21-c0f1-4fc5-8965-895143577bba",
    "prId" : 41656,
    "prUrl" : "https://github.com/ansible/ansible/pull/41656#pullrequestreview-136306940",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5a1f5253-a071-49f5-bd6d-cc7316d9c02a",
        "parentId" : null,
        "authorId" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "body" : "This method will retrieve only inventory of the last system that Redfish API returned in `_find_sytems_resource`.",
        "createdAt" : "2018-07-11T17:02:51Z",
        "updatedAt" : "2018-07-16T19:06:04Z",
        "lastEditedBy" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "tags" : [
        ]
      }
    ],
    "commit" : "aca91e97424f2f2c45ede98974879b9a2ea3ca8a",
    "line" : 265,
    "diffHunk" : "@@ -1,1 +263,267 @@        return {'ret': True}\n\n    def get_storage_controller_inventory(self):\n        result = {}\n        controllers_details = []"
  },
  {
    "id" : "b51be566-a8f1-4c5e-b742-04e2a99f591f",
    "prId" : 41656,
    "prUrl" : "https://github.com/ansible/ansible/pull/41656#pullrequestreview-136306940",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "02af40dd-85f1-4bfa-9085-d65086284570",
        "parentId" : null,
        "authorId" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "body" : "Not catching non-200 responses.",
        "createdAt" : "2018-07-11T17:03:29Z",
        "updatedAt" : "2018-07-16T19:06:04Z",
        "lastEditedBy" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "tags" : [
        ]
      }
    ],
    "commit" : "aca91e97424f2f2c45ede98974879b9a2ea3ca8a",
    "line" : 272,
    "diffHunk" : "@@ -1,1 +270,274 @@        # Find Storage service\n        response = self.get_request(self.root_uri + self.systems_uri)\n        if response['ret'] is False:\n            return response\n        data = response['data']"
  },
  {
    "id" : "370aa37d-abee-445b-a0a0-e342bb65b446",
    "prId" : 41656,
    "prUrl" : "https://github.com/ansible/ansible/pull/41656#pullrequestreview-136306940",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6f111c6e-05e5-4844-bfac-f29a596db8df",
        "parentId" : null,
        "authorId" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "body" : "Not catching non-200 responses.",
        "createdAt" : "2018-07-11T17:04:55Z",
        "updatedAt" : "2018-07-16T19:06:04Z",
        "lastEditedBy" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "tags" : [
        ]
      }
    ],
    "commit" : "aca91e97424f2f2c45ede98974879b9a2ea3ca8a",
    "line" : 293,
    "diffHunk" : "@@ -1,1 +291,295 @@            uri = self.root_uri + c\n            response = self.get_request(uri)\n            if response['ret'] is False:\n                return response\n            data = response['data']"
  },
  {
    "id" : "2134900e-47ea-429d-9c49-4208d3441c15",
    "prId" : 41656,
    "prUrl" : "https://github.com/ansible/ansible/pull/41656#pullrequestreview-136306940",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "146e6f77-680b-4d1d-b9d4-457e6663e0b1",
        "parentId" : null,
        "authorId" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "body" : "Previous two lines are useless, since they can be easily merged into next loop by doing\r\n\r\n    for c in data[\"Members\"]:\r\n        uri = self.root_uri + c[\"@odata.id\"]",
        "createdAt" : "2018-07-11T17:07:21Z",
        "updatedAt" : "2018-07-16T19:06:04Z",
        "lastEditedBy" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "tags" : [
        ]
      }
    ],
    "commit" : "aca91e97424f2f2c45ede98974879b9a2ea3ca8a",
    "line" : 288,
    "diffHunk" : "@@ -1,1 +286,290 @@\n        for controller in data[u'Members']:\n            controller_list.append(controller[u'@odata.id'])\n\n        for c in controller_list:"
  },
  {
    "id" : "8ce93c28-5be1-42b1-a8dd-bbacaa0f9281",
    "prId" : 41656,
    "prUrl" : "https://github.com/ansible/ansible/pull/41656#pullrequestreview-136306940",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2a74edb6-3812-4dfe-800f-5980c77291c4",
        "parentId" : null,
        "authorId" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "body" : "Not catching non-200 responses.",
        "createdAt" : "2018-07-11T17:08:38Z",
        "updatedAt" : "2018-07-16T19:06:04Z",
        "lastEditedBy" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "tags" : [
        ]
      }
    ],
    "commit" : "aca91e97424f2f2c45ede98974879b9a2ea3ca8a",
    "line" : 272,
    "diffHunk" : "@@ -1,1 +307,311 @@        # Find Storage service\n        response = self.get_request(self.root_uri + self.systems_uri)\n        if response['ret'] is False:\n            return response\n        data = response['data']"
  },
  {
    "id" : "5c9cbb3a-6583-4c15-95d7-6a6f2e6d12ca",
    "prId" : 41656,
    "prUrl" : "https://github.com/ansible/ansible/pull/41656#pullrequestreview-136306940",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "aa09d0fc-6816-4481-8bea-d48786818b14",
        "parentId" : null,
        "authorId" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "body" : "This will fail if `_find_system_resource` has not been called yet.",
        "createdAt" : "2018-07-11T17:08:57Z",
        "updatedAt" : "2018-07-16T19:06:04Z",
        "lastEditedBy" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "tags" : [
        ]
      }
    ],
    "commit" : "aca91e97424f2f2c45ede98974879b9a2ea3ca8a",
    "line" : 308,
    "diffHunk" : "@@ -1,1 +306,310 @@\n        # Find Storage service\n        response = self.get_request(self.root_uri + self.systems_uri)\n        if response['ret'] is False:\n            return response"
  },
  {
    "id" : "8f0317fe-889b-4f4a-a00f-e8195aa24e2b",
    "prId" : 41656,
    "prUrl" : "https://github.com/ansible/ansible/pull/41656#pullrequestreview-136306940",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "199711cf-1382-484e-90ae-d9eeb60a5e08",
        "parentId" : null,
        "authorId" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "body" : "Not catching non-200 responses.",
        "createdAt" : "2018-07-11T17:14:37Z",
        "updatedAt" : "2018-07-16T19:06:04Z",
        "lastEditedBy" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "tags" : [
        ]
      }
    ],
    "commit" : "aca91e97424f2f2c45ede98974879b9a2ea3ca8a",
    "line" : 282,
    "diffHunk" : "@@ -1,1 +317,321 @@        storage_uri = data[\"SimpleStorage\"][\"@odata.id\"]\n        response = self.get_request(self.root_uri + storage_uri)\n        if response['ret'] is False:\n            return response\n        result['ret'] = True"
  },
  {
    "id" : "210492d0-3ebe-4f7d-840d-750a24148a08",
    "prId" : 41656,
    "prUrl" : "https://github.com/ansible/ansible/pull/41656#pullrequestreview-136306940",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "164fe717-389a-499f-91c2-485c71bfb73f",
        "parentId" : null,
        "authorId" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "body" : "Useless loop, since it can be merged with the next one.",
        "createdAt" : "2018-07-11T17:15:00Z",
        "updatedAt" : "2018-07-16T19:06:04Z",
        "lastEditedBy" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "tags" : [
        ]
      }
    ],
    "commit" : "aca91e97424f2f2c45ede98974879b9a2ea3ca8a",
    "line" : 288,
    "diffHunk" : "@@ -1,1 +323,327 @@\n        for controller in data[u'Members']:\n            controller_list.append(controller[u'@odata.id'])\n\n        for c in controller_list:"
  },
  {
    "id" : "7332463c-1e64-41c8-832f-3ab8a7406380",
    "prId" : 41656,
    "prUrl" : "https://github.com/ansible/ansible/pull/41656#pullrequestreview-136306940",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8490e622-993e-43c3-85a5-8c800ec32ee1",
        "parentId" : null,
        "authorId" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "body" : "Not catching non-200 responses.",
        "createdAt" : "2018-07-11T17:15:10Z",
        "updatedAt" : "2018-07-16T19:06:04Z",
        "lastEditedBy" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "tags" : [
        ]
      }
    ],
    "commit" : "aca91e97424f2f2c45ede98974879b9a2ea3ca8a",
    "line" : 293,
    "diffHunk" : "@@ -1,1 +328,332 @@            uri = self.root_uri + c\n            response = self.get_request(uri)\n            if response['ret'] is False:\n                return response\n            data = response['data']"
  },
  {
    "id" : "276e775b-1bbe-49e7-875c-de5c6ab5a411",
    "prId" : 41656,
    "prUrl" : "https://github.com/ansible/ansible/pull/41656#pullrequestreview-136306940",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7dbc4716-ac13-469d-945a-635c8b3897c9",
        "parentId" : null,
        "authorId" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "body" : "Not catching non-20x responses.",
        "createdAt" : "2018-07-11T17:15:25Z",
        "updatedAt" : "2018-07-16T19:06:04Z",
        "lastEditedBy" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "tags" : [
        ]
      }
    ],
    "commit" : "aca91e97424f2f2c45ede98974879b9a2ea3ca8a",
    "line" : 359,
    "diffHunk" : "@@ -1,1 +357,361 @@        payload = {'ResetType': 'GracefulRestart'}\n        response = self.post_request(self.root_uri + action_uri, payload, HEADERS)\n        if response['ret'] is False:\n            return response\n        return {'ret': True}"
  },
  {
    "id" : "59e28bfc-4d74-4081-a5b7-d7c68c599ffb",
    "prId" : 41656,
    "prUrl" : "https://github.com/ansible/ansible/pull/41656#pullrequestreview-136306940",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9a70db6d-efd0-4932-8178-0f9334ae84f4",
        "parentId" : null,
        "authorId" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "body" : "Will fail if `self.manager_uri` is not set yet.",
        "createdAt" : "2018-07-11T17:15:56Z",
        "updatedAt" : "2018-07-16T19:06:04Z",
        "lastEditedBy" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "tags" : [
        ]
      }
    ],
    "commit" : "aca91e97424f2f2c45ede98974879b9a2ea3ca8a",
    "line" : 350,
    "diffHunk" : "@@ -1,1 +348,352 @@\n        # Search for 'key' entry and extract URI from it\n        response = self.get_request(self.root_uri + self.manager_uri)\n        if response['ret'] is False:\n            return response"
  },
  {
    "id" : "fe1d7d89-a237-4146-8d08-2004567ec05b",
    "prId" : 41656,
    "prUrl" : "https://github.com/ansible/ansible/pull/41656#pullrequestreview-136306940",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3bc650a0-2d9c-4b5b-8f24-9922ed6723b4",
        "parentId" : null,
        "authorId" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "body" : "Not catching non-200 responses.",
        "createdAt" : "2018-07-11T17:16:09Z",
        "updatedAt" : "2018-07-16T19:06:04Z",
        "lastEditedBy" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "tags" : [
        ]
      }
    ],
    "commit" : "aca91e97424f2f2c45ede98974879b9a2ea3ca8a",
    "line" : 351,
    "diffHunk" : "@@ -1,1 +349,353 @@        # Search for 'key' entry and extract URI from it\n        response = self.get_request(self.root_uri + self.manager_uri)\n        if response['ret'] is False:\n            return response\n        result['ret'] = True"
  },
  {
    "id" : "b0fe6be1-77da-4ad9-9c5d-5b9cb5f24126",
    "prId" : 41656,
    "prUrl" : "https://github.com/ansible/ansible/pull/41656#pullrequestreview-136306940",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fb2014a5-f99d-4786-b718-779e95bb694a",
        "parentId" : null,
        "authorId" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "body" : "Target is not guaranteed to be present according to Redfish standards 1.4.0 and below. 1.5.0 does make `target` field required, but there should be at least a comment here for other devs that will debug the issues with older Redfish systems.\r\n\r\nReference: http://redfish.dmtf.org/schemas/DSP0266_1.4.0.html#actions-post-a-id-actions-post-a-",
        "createdAt" : "2018-07-11T17:18:52Z",
        "updatedAt" : "2018-07-16T19:06:04Z",
        "lastEditedBy" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "tags" : [
        ]
      }
    ],
    "commit" : "aca91e97424f2f2c45ede98974879b9a2ea3ca8a",
    "line" : 355,
    "diffHunk" : "@@ -1,1 +353,357 @@        result['ret'] = True\n        data = response['data']\n        action_uri = data[key][\"#Manager.Reset\"][\"target\"]\n\n        payload = {'ResetType': 'GracefulRestart'}"
  },
  {
    "id" : "6af76878-780a-40cd-9d39-320ae6f634ef",
    "prId" : 41656,
    "prUrl" : "https://github.com/ansible/ansible/pull/41656#pullrequestreview-136306940",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "50fdd1f3-5146-4461-836a-95ae846d3ca6",
        "parentId" : null,
        "authorId" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "body" : "Not catching non-200 responses.",
        "createdAt" : "2018-07-11T17:21:46Z",
        "updatedAt" : "2018-07-16T19:06:04Z",
        "lastEditedBy" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "tags" : [
        ]
      }
    ],
    "commit" : "aca91e97424f2f2c45ede98974879b9a2ea3ca8a",
    "line" : 369,
    "diffHunk" : "@@ -1,1 +367,371 @@        # Search for 'key' entry and extract URI from it\n        response = self.get_request(self.root_uri + self.systems_uri)\n        if response['ret'] is False:\n            return response\n        result['ret'] = True"
  },
  {
    "id" : "72c33830-71c0-475d-88b3-e41a3fba7e58",
    "prId" : 41656,
    "prUrl" : "https://github.com/ansible/ansible/pull/41656#pullrequestreview-136306940",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "aaec006b-4677-436c-afbb-e0d855dd71f0",
        "parentId" : null,
        "authorId" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "body" : "Will fail if `self.systems_uri` is not set yet.",
        "createdAt" : "2018-07-11T17:22:31Z",
        "updatedAt" : "2018-07-16T19:06:04Z",
        "lastEditedBy" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "tags" : [
        ]
      }
    ],
    "commit" : "aca91e97424f2f2c45ede98974879b9a2ea3ca8a",
    "line" : 368,
    "diffHunk" : "@@ -1,1 +366,370 @@\n        # Search for 'key' entry and extract URI from it\n        response = self.get_request(self.root_uri + self.systems_uri)\n        if response['ret'] is False:\n            return response"
  },
  {
    "id" : "e2e3b5f2-04ea-4b8f-8fa3-8d5e5b831ad3",
    "prId" : 41656,
    "prUrl" : "https://github.com/ansible/ansible/pull/41656#pullrequestreview-136306940",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "13221db7-7ea9-4568-a54d-40c6d183a624",
        "parentId" : null,
        "authorId" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "body" : "Target is not guaranteed to be present according to Redfish standards 1.4.0 and below. 1.5.0 does make `target` field required, but there should be at least a comment here for other devs that will debug the issues with older Redfish systems.\r\n\r\nReference: http://redfish.dmtf.org/schemas/DSP0266_1.4.0.html#actions-post-a-id-actions-post-a-",
        "createdAt" : "2018-07-11T17:23:09Z",
        "updatedAt" : "2018-07-16T19:06:04Z",
        "lastEditedBy" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "tags" : [
        ]
      }
    ],
    "commit" : "aca91e97424f2f2c45ede98974879b9a2ea3ca8a",
    "line" : 373,
    "diffHunk" : "@@ -1,1 +371,375 @@        result['ret'] = True\n        data = response['data']\n        action_uri = data[key][\"#ComputerSystem.Reset\"][\"target\"]\n\n        # Define payload accordingly"
  },
  {
    "id" : "79c74545-17ac-4a02-aca2-d73729637b43",
    "prId" : 41656,
    "prUrl" : "https://github.com/ansible/ansible/pull/41656#pullrequestreview-136306940",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "89a7d76b-e42c-4574-a94e-09f90610c3c8",
        "parentId" : null,
        "authorId" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "body" : "This will only initiate restart, which means that BMC will be in inconsistent state after this function is called, because there is no waiting for the operation to finish implemented here. And if we would like to keep ansible playbooks as declarative as possible, we should probably avoid such situations. Otherwise we are simply rewriting our bash scripts into yaml.",
        "createdAt" : "2018-07-11T17:26:45Z",
        "updatedAt" : "2018-07-16T19:06:04Z",
        "lastEditedBy" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "tags" : [
        ]
      }
    ],
    "commit" : "aca91e97424f2f2c45ede98974879b9a2ea3ca8a",
    "line" : 358,
    "diffHunk" : "@@ -1,1 +356,360 @@\n        payload = {'ResetType': 'GracefulRestart'}\n        response = self.post_request(self.root_uri + action_uri, payload, HEADERS)\n        if response['ret'] is False:\n            return response"
  },
  {
    "id" : "ea14bf35-91e8-4d5b-b85a-6c7eb9f45746",
    "prId" : 41656,
    "prUrl" : "https://github.com/ansible/ansible/pull/41656#pullrequestreview-136306940",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "43820a8f-7e88-4085-8fc5-96419399d1ad",
        "parentId" : null,
        "authorId" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "body" : "Again, reboot is async operation that is only stared by POSTing data to proper endpoint. Function should probably wait for the operation to terminate.",
        "createdAt" : "2018-07-11T17:28:29Z",
        "updatedAt" : "2018-07-16T19:06:04Z",
        "lastEditedBy" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "tags" : [
        ]
      }
    ],
    "commit" : "aca91e97424f2f2c45ede98974879b9a2ea3ca8a",
    "line" : 387,
    "diffHunk" : "@@ -1,1 +385,389 @@            return {'ret': False, 'msg': 'Invalid Command'}\n\n        response = self.post_request(self.root_uri + action_uri, payload, HEADERS)\n        if response['ret'] is False:\n            return response"
  },
  {
    "id" : "a5f699de-6c62-49ed-96a2-e0230ecbb3c4",
    "prId" : 41656,
    "prUrl" : "https://github.com/ansible/ansible/pull/41656#pullrequestreview-136306940",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8f25dabd-c0a4-4b97-9e56-15228d5206f9",
        "parentId" : null,
        "authorId" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "body" : "Not catching non-20x responses.",
        "createdAt" : "2018-07-11T17:28:53Z",
        "updatedAt" : "2018-07-16T19:06:04Z",
        "lastEditedBy" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "tags" : [
        ]
      }
    ],
    "commit" : "aca91e97424f2f2c45ede98974879b9a2ea3ca8a",
    "line" : 388,
    "diffHunk" : "@@ -1,1 +386,390 @@\n        response = self.post_request(self.root_uri + action_uri, payload, HEADERS)\n        if response['ret'] is False:\n            return response\n        result['ret'] = True"
  },
  {
    "id" : "57f557c7-d1ae-4aae-b033-f5dbe389d7a4",
    "prId" : 41656,
    "prUrl" : "https://github.com/ansible/ansible/pull/41656#pullrequestreview-136306940",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fb47f90d-3e08-4a6d-b101-d7b3a29b4f34",
        "parentId" : null,
        "authorId" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "body" : "This will fail if `self.accounts_uri` is not initialized.",
        "createdAt" : "2018-07-11T17:30:15Z",
        "updatedAt" : "2018-07-16T19:06:04Z",
        "lastEditedBy" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "tags" : [
        ]
      }
    ],
    "commit" : "aca91e97424f2f2c45ede98974879b9a2ea3ca8a",
    "line" : 398,
    "diffHunk" : "@@ -1,1 +396,400 @@        allusers = []\n        allusers_details = []\n        response = self.get_request(self.root_uri + self.accounts_uri)\n        if response['ret'] is False:\n            return response"
  },
  {
    "id" : "15b8c6ee-08d8-4618-9a68-4e94b3f0d1ea",
    "prId" : 41656,
    "prUrl" : "https://github.com/ansible/ansible/pull/41656#pullrequestreview-136306940",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a3d26420-55ff-4739-af64-9b6ed7a3b0fa",
        "parentId" : null,
        "authorId" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "body" : "Useless loop that can be merged with the next one.",
        "createdAt" : "2018-07-11T17:31:22Z",
        "updatedAt" : "2018-07-16T19:06:04Z",
        "lastEditedBy" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "tags" : [
        ]
      }
    ],
    "commit" : "aca91e97424f2f2c45ede98974879b9a2ea3ca8a",
    "line" : 405,
    "diffHunk" : "@@ -1,1 +403,407 @@\n        for users in data[u'Members']:\n            allusers.append(users[u'@odata.id'])   # allusers[] are URIs\n\n        # for each user, get details"
  },
  {
    "id" : "0b269237-8d02-4f26-a6d7-93e811028560",
    "prId" : 41656,
    "prUrl" : "https://github.com/ansible/ansible/pull/41656#pullrequestreview-136306940",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ae976e65-b359-4b23-b1e1-ee8ebcd97b15",
        "parentId" : null,
        "authorId" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "body" : "Not catching non-200 responses.",
        "createdAt" : "2018-07-11T17:31:42Z",
        "updatedAt" : "2018-07-16T19:06:04Z",
        "lastEditedBy" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "tags" : [
        ]
      }
    ],
    "commit" : "aca91e97424f2f2c45ede98974879b9a2ea3ca8a",
    "line" : 410,
    "diffHunk" : "@@ -1,1 +408,412 @@        for uri in allusers:\n            response = self.get_request(self.root_uri + uri)\n            if response['ret'] is False:\n                return response\n            data = response['data']"
  },
  {
    "id" : "ede2ce4c-a78e-427e-93c9-798ee217d269",
    "prId" : 41656,
    "prUrl" : "https://github.com/ansible/ansible/pull/41656#pullrequestreview-136306940",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ed3a32c8-4449-4460-894c-a434d38aecb3",
        "parentId" : null,
        "authorId" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "body" : "Creating paths by concatenating them together is a no-go with Redfish. Paths should always come from the Redfish responses itself (`redfish/v1` being exception here).",
        "createdAt" : "2018-07-11T17:36:34Z",
        "updatedAt" : "2018-07-16T19:06:04Z",
        "lastEditedBy" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "tags" : [
        ]
      }
    ],
    "commit" : "aca91e97424f2f2c45ede98974879b9a2ea3ca8a",
    "line" : 424,
    "diffHunk" : "@@ -1,1 +422,426 @@\n    def add_user(self, user):\n        uri = self.root_uri + self.accounts_uri + \"/\" + user['userid']\n        username = {'UserName': user['username']}\n        pswd = {'Password': user['userpswd']}"
  },
  {
    "id" : "ac1d0146-2325-4545-904f-a7755b87adb5",
    "prId" : 41656,
    "prUrl" : "https://github.com/ansible/ansible/pull/41656#pullrequestreview-136306940",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d4970049-00fa-4ed2-a652-c81682fee9d7",
        "parentId" : null,
        "authorId" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "body" : "Lines [434,441] are just plain wrong, since Redfish standard mandates that new user (or any other resource) is created by POSTing payload to the proper collection's path (`ManagerAccountCollection` in this case specifically). The returned response body and `Location` header will contain OData id of the user that is automatically generated (reference: http://redfish.dmtf.org/schemas/DSP0266_1.5.0.html#create-post-a-id-create-post-a-).",
        "createdAt" : "2018-07-11T17:41:50Z",
        "updatedAt" : "2018-07-16T19:06:04Z",
        "lastEditedBy" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "tags" : [
        ]
      }
    ],
    "commit" : "aca91e97424f2f2c45ede98974879b9a2ea3ca8a",
    "line" : 432,
    "diffHunk" : "@@ -1,1 +430,434 @@            response = self.patch_request(uri, payload, HEADERS)\n            if response['ret'] is False:\n                return response\n        return {'ret': True}\n"
  },
  {
    "id" : "83c232ef-9a76-4b04-969e-5cd8a17d3787",
    "prId" : 41656,
    "prUrl" : "https://github.com/ansible/ansible/pull/41656#pullrequestreview-136306940",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7b5d80b9-0481-4b54-8a2c-ba65a5a10f3a",
        "parentId" : null,
        "authorId" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "body" : "Creating paths by concatenating them together is a no-go with Redfish. Paths should always come from the Redfish responses itself (`redfish/v1` being exception here).",
        "createdAt" : "2018-07-11T17:42:56Z",
        "updatedAt" : "2018-07-16T19:06:04Z",
        "lastEditedBy" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "tags" : [
        ]
      }
    ],
    "commit" : "aca91e97424f2f2c45ede98974879b9a2ea3ca8a",
    "line" : 436,
    "diffHunk" : "@@ -1,1 +434,438 @@\n    def enable_user(self, user):\n        uri = self.root_uri + self.accounts_uri + \"/\" + user['userid']\n        payload = {'Enabled': True}\n        response = self.patch_request(uri, payload, HEADERS)"
  },
  {
    "id" : "42015014-10b3-4558-9f20-ae0e1e917890",
    "prId" : 41656,
    "prUrl" : "https://github.com/ansible/ansible/pull/41656#pullrequestreview-136306940",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d400f4bf-7ba0-4914-93ef-01618a9972f6",
        "parentId" : null,
        "authorId" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "body" : "Creating paths by concatenating them together is a no-go with Redfish. Paths should always come from the Redfish responses itself (`redfish/v1` being exception here).",
        "createdAt" : "2018-07-11T17:43:02Z",
        "updatedAt" : "2018-07-16T19:06:04Z",
        "lastEditedBy" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "tags" : [
        ]
      }
    ],
    "commit" : "aca91e97424f2f2c45ede98974879b9a2ea3ca8a",
    "line" : 444,
    "diffHunk" : "@@ -1,1 +442,446 @@\n    def delete_user(self, user):\n        uri = self.root_uri + self.accounts_uri + \"/\" + user['userid']\n        payload = {'UserName': \"\"}\n        response = self.patch_request(uri, payload, HEADERS)"
  },
  {
    "id" : "939e13ca-9b84-4803-8ea4-929e348de3c3",
    "prId" : 41656,
    "prUrl" : "https://github.com/ansible/ansible/pull/41656#pullrequestreview-136306940",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8c1f0b44-fba6-45ab-965f-e96ad56d6dba",
        "parentId" : null,
        "authorId" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "body" : "Creating paths by concatenating them together is a no-go with Redfish. Paths should always come from the Redfish responses itself (`redfish/v1` being exception here).",
        "createdAt" : "2018-07-11T17:43:08Z",
        "updatedAt" : "2018-07-16T19:06:04Z",
        "lastEditedBy" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "tags" : [
        ]
      }
    ],
    "commit" : "aca91e97424f2f2c45ede98974879b9a2ea3ca8a",
    "line" : 452,
    "diffHunk" : "@@ -1,1 +450,454 @@\n    def disable_user(self, user):\n        uri = self.root_uri + self.accounts_uri + \"/\" + user['userid']\n        payload = {'Enabled': False}\n        response = self.patch_request(uri, payload, HEADERS)"
  },
  {
    "id" : "ca9f65c2-45ca-4ec8-a093-d5f9a5f4bff6",
    "prId" : 41656,
    "prUrl" : "https://github.com/ansible/ansible/pull/41656#pullrequestreview-136306940",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "505df36f-746e-41e0-97b4-e09e2d30965c",
        "parentId" : null,
        "authorId" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "body" : "Creating paths by concatenating them together is a no-go with Redfish. Paths should always come from the Redfish responses itself (`redfish/v1` being exception here).",
        "createdAt" : "2018-07-11T17:43:18Z",
        "updatedAt" : "2018-07-16T19:06:04Z",
        "lastEditedBy" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "tags" : [
        ]
      }
    ],
    "commit" : "aca91e97424f2f2c45ede98974879b9a2ea3ca8a",
    "line" : 460,
    "diffHunk" : "@@ -1,1 +458,462 @@\n    def update_user_role(self, user):\n        uri = self.root_uri + self.accounts_uri + \"/\" + user['userid']\n        payload = {'RoleId': user['userrole']}\n        response = self.patch_request(uri, payload, HEADERS)"
  },
  {
    "id" : "99b211dd-1a77-4ca3-8bac-c284632aeede",
    "prId" : 41656,
    "prUrl" : "https://github.com/ansible/ansible/pull/41656#pullrequestreview-136306940",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "29486331-7492-4ba3-9ff4-d4b3ffde4fc6",
        "parentId" : null,
        "authorId" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "body" : "Creating paths by concatenating them together is a no-go with Redfish. Paths should always come from the Redfish responses itself (`redfish/v1` being exception here).",
        "createdAt" : "2018-07-11T17:43:30Z",
        "updatedAt" : "2018-07-16T19:06:04Z",
        "lastEditedBy" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "tags" : [
        ]
      }
    ],
    "commit" : "aca91e97424f2f2c45ede98974879b9a2ea3ca8a",
    "line" : 468,
    "diffHunk" : "@@ -1,1 +466,470 @@\n    def update_user_password(self, user):\n        uri = self.root_uri + self.accounts_uri + \"/\" + user['userid']\n        payload = {'Password': user['userpswd']}\n        response = self.patch_request(uri, payload, HEADERS)"
  },
  {
    "id" : "19562dfd-1b57-4a46-af2c-e7f1ee757ff9",
    "prId" : 41656,
    "prUrl" : "https://github.com/ansible/ansible/pull/41656#pullrequestreview-136306940",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4b6f039c-51d6-4564-9476-2a5d1f03ac68",
        "parentId" : null,
        "authorId" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "body" : "User should be deleted by sending a DELETE request (reference: http://redfish.dmtf.org/schemas/DSP0266_1.5.0.html#delete-delete-a-id-delete-delete-a-).",
        "createdAt" : "2018-07-11T17:45:07Z",
        "updatedAt" : "2018-07-16T19:06:04Z",
        "lastEditedBy" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "tags" : [
        ]
      }
    ],
    "commit" : "aca91e97424f2f2c45ede98974879b9a2ea3ca8a",
    "line" : 446,
    "diffHunk" : "@@ -1,1 +444,448 @@        uri = self.root_uri + self.accounts_uri + \"/\" + user['userid']\n        payload = {'UserName': \"\"}\n        response = self.patch_request(uri, payload, HEADERS)\n        if response['ret'] is False:\n            return response"
  },
  {
    "id" : "b60d1034-4b4d-42b6-aa79-8a78b216d4e3",
    "prId" : 41656,
    "prUrl" : "https://github.com/ansible/ansible/pull/41656#pullrequestreview-136306940",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "98466b60-9117-4068-9ca1-b07fca68c790",
        "parentId" : null,
        "authorId" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "body" : "Again, path concatenation is bad. And in this case it is not needed at all, since we have a path stored in `device[\"@odata.id\"]`.",
        "createdAt" : "2018-07-11T18:07:35Z",
        "updatedAt" : "2018-07-16T19:06:04Z",
        "lastEditedBy" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "tags" : [
        ]
      }
    ],
    "commit" : "aca91e97424f2f2c45ede98974879b9a2ea3ca8a",
    "line" : 488,
    "diffHunk" : "@@ -1,1 +486,490 @@            d = d.replace(self.firmware_uri, \"\")    # leave just device name\n            if \"Installed\" in d:\n                uri = self.root_uri + self.firmware_uri + d\n                # Get details for each device that is relevant\n                response = self.get_request(uri)"
  },
  {
    "id" : "3188c899-233a-4d32-97e0-73059930fc6f",
    "prId" : 41656,
    "prUrl" : "https://github.com/ansible/ansible/pull/41656#pullrequestreview-136306940",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "47877322-35c6-49a8-bb09-1bdbac43ed9a",
        "parentId" : null,
        "authorId" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "body" : "Why is this `if` here? Filtering based on the id of the firmware makes little sense (it may be Dell/iDRAC specific). I checked the Lenovo system recording that I made some time ago and the filtering would remove all entries.",
        "createdAt" : "2018-07-11T18:13:46Z",
        "updatedAt" : "2018-07-16T19:06:04Z",
        "lastEditedBy" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "tags" : [
        ]
      }
    ],
    "commit" : "aca91e97424f2f2c45ede98974879b9a2ea3ca8a",
    "line" : 487,
    "diffHunk" : "@@ -1,1 +485,489 @@            d = device[u'@odata.id']\n            d = d.replace(self.firmware_uri, \"\")    # leave just device name\n            if \"Installed\" in d:\n                uri = self.root_uri + self.firmware_uri + d\n                # Get details for each device that is relevant"
  },
  {
    "id" : "703cea58-ce13-4a5d-844c-072d3d1b5936",
    "prId" : 41656,
    "prUrl" : "https://github.com/ansible/ansible/pull/41656#pullrequestreview-136306940",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "972d7d0f-1129-4803-9a0a-c5e5447feedb",
        "parentId" : null,
        "authorId" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "body" : "`Name` field does not need to be unique (and on the Lenovo recording I have all the disk firmwares have the same name \"Disk firmware\"), so this has the potential to overwrite data from previous iterations, returning only the last non-unique entry.",
        "createdAt" : "2018-07-11T18:18:02Z",
        "updatedAt" : "2018-07-16T19:06:04Z",
        "lastEditedBy" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "tags" : [
        ]
      }
    ],
    "commit" : "aca91e97424f2f2c45ede98974879b9a2ea3ca8a",
    "line" : 495,
    "diffHunk" : "@@ -1,1 +493,497 @@                result['ret'] = True\n                data = response['data']\n                firmware[data[u'Name']] = data[u'Version']\n        result[\"entries\"] = firmware\n        return result"
  },
  {
    "id" : "57a6e500-ec17-45e3-8cd8-006909f6c675",
    "prId" : 41656,
    "prUrl" : "https://github.com/ansible/ansible/pull/41656#pullrequestreview-136306940",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "eda51f07-9161-4d21-ad23-9acd1fed4324",
        "parentId" : null,
        "authorId" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "body" : "Again, path concatenation is not something that would be used much when dealing with Redfish. And in this particular case, we may get invalid path from the concatenation, since `self.manager_uri` can have a trailing `/` (and on most systems I encountered, this is actually true).",
        "createdAt" : "2018-07-11T18:21:24Z",
        "updatedAt" : "2018-07-16T19:06:04Z",
        "lastEditedBy" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "tags" : [
        ]
      }
    ],
    "commit" : "aca91e97424f2f2c45ede98974879b9a2ea3ca8a",
    "line" : 504,
    "diffHunk" : "@@ -1,1 +502,506 @@        attributes_id = \"Attributes\"\n\n        response = self.get_request(self.root_uri + self.manager_uri + \"/\" + attributes_id)\n        if response['ret'] is False:\n            return response"
  },
  {
    "id" : "5873db1f-b2b0-4275-b66d-cb7d2a6af4c5",
    "prId" : 41656,
    "prUrl" : "https://github.com/ansible/ansible/pull/41656#pullrequestreview-136306940",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a6859f22-a899-4bfa-bf74-3c3a7a851c0c",
        "parentId" : null,
        "authorId" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "body" : "Manager schema does not list `Attributes` property anywhere, so this is either something Dell specific or just plain wrong, since none of the two Dell system recordings that I have contain this key.",
        "createdAt" : "2018-07-11T18:27:18Z",
        "updatedAt" : "2018-07-16T19:06:04Z",
        "lastEditedBy" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "tags" : [
        ]
      }
    ],
    "commit" : "aca91e97424f2f2c45ede98974879b9a2ea3ca8a",
    "line" : 502,
    "diffHunk" : "@@ -1,1 +500,504 @@        result = {}\n        manager_attributes = {}\n        attributes_id = \"Attributes\"\n\n        response = self.get_request(self.root_uri + self.manager_uri + \"/\" + attributes_id)"
  },
  {
    "id" : "5f8bca42-1930-4527-b5b2-82d732034bfc",
    "prId" : 41656,
    "prUrl" : "https://github.com/ansible/ansible/pull/41656#pullrequestreview-136306940",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6fed7603-802b-4b4e-8a00-cb82307e3878",
        "parentId" : null,
        "authorId" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "body" : "Last six lines can be simplified to `return dict(ret=True, entries=response[\"data\"][\"Attributes\"])`.",
        "createdAt" : "2018-07-11T18:35:09Z",
        "updatedAt" : "2018-07-16T19:06:04Z",
        "lastEditedBy" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "tags" : [
        ]
      }
    ],
    "commit" : "aca91e97424f2f2c45ede98974879b9a2ea3ca8a",
    "line" : 512,
    "diffHunk" : "@@ -1,1 +510,514 @@            manager_attributes[attribute[0]] = attribute[1]\n        result[\"entries\"] = manager_attributes\n        return result\n\n    def get_bios_attributes(self):"
  },
  {
    "id" : "b8603567-8bd3-4044-a201-1a78102d2293",
    "prId" : 41656,
    "prUrl" : "https://github.com/ansible/ansible/pull/41656#pullrequestreview-136306940",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d8154c11-9508-4173-9afa-55dbe6ffbeef",
        "parentId" : null,
        "authorId" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "body" : "Last six lines can be simplified to `return dict(ret=True, entries=response[\"data\"][\"Attributes\"])`.",
        "createdAt" : "2018-07-11T18:37:19Z",
        "updatedAt" : "2018-07-16T19:06:04Z",
        "lastEditedBy" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "tags" : [
        ]
      }
    ],
    "commit" : "aca91e97424f2f2c45ede98974879b9a2ea3ca8a",
    "line" : 535,
    "diffHunk" : "@@ -1,1 +533,537 @@            bios_attributes[attribute[0]] = attribute[1]\n        result[\"entries\"] = bios_attributes\n        return result\n\n    def get_bios_boot_order(self):"
  },
  {
    "id" : "6620ce9d-27fa-4164-beb2-084c50a8e4e1",
    "prId" : 41656,
    "prUrl" : "https://github.com/ansible/ansible/pull/41656#pullrequestreview-136306940",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9369b9b4-dfdb-4259-9fc8-a1cc452216f3",
        "parentId" : null,
        "authorId" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "body" : "Bios attributes are vendor-specific, so doing thins this way makes little sense. What exactly is contained in `Attributes` is described in relevant registry entry, which is again vendor-specific and should be consulted at runtime.",
        "createdAt" : "2018-07-11T18:53:29Z",
        "updatedAt" : "2018-07-16T19:06:04Z",
        "lastEditedBy" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "tags" : [
        ]
      }
    ],
    "commit" : "aca91e97424f2f2c45ede98974879b9a2ea3ca8a",
    "line" : 557,
    "diffHunk" : "@@ -1,1 +555,559 @@            return response\n        data = response['data']\n        boot_mode = data[u'Attributes'][\"BootMode\"]\n        if boot_mode == \"Uefi\":\n            boot_seq = \"UefiBootSeq\""
  },
  {
    "id" : "a4f66674-aca2-4488-aaa3-09639c9abfdb",
    "prId" : 41656,
    "prUrl" : "https://github.com/ansible/ansible/pull/41656#pullrequestreview-136306940",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8c0fb78d-6884-420d-a064-06f4d936dfb9",
        "parentId" : null,
        "authorId" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "body" : "Concatenating this way will produce bad path in `self.systems_uri` has a trailing slash. And `BootSources` is something that I cannot find in any of the recordings or in Redfish standard, so I must assume that this is something Dell specific again.",
        "createdAt" : "2018-07-11T19:00:38Z",
        "updatedAt" : "2018-07-16T19:06:04Z",
        "lastEditedBy" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "tags" : [
        ]
      }
    ],
    "commit" : "aca91e97424f2f2c45ede98974879b9a2ea3ca8a",
    "line" : 563,
    "diffHunk" : "@@ -1,1 +561,565 @@            boot_seq = \"BootSeq\"\n\n        response = self.get_request(self.root_uri + self.systems_uri + \"/\" + bootsources)\n        if response['ret'] is False:\n            return response"
  },
  {
    "id" : "0939c65e-6935-4085-ad2e-b36e929c711c",
    "prId" : 41656,
    "prUrl" : "https://github.com/ansible/ansible/pull/41656#pullrequestreview-136306940",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "32f7cd72-2d60-4dc9-a778-2a87b3b5f542",
        "parentId" : null,
        "authorId" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "body" : "Again, bios attributes are vendor-specific. This will only work on certain systems.",
        "createdAt" : "2018-07-11T19:04:22Z",
        "updatedAt" : "2018-07-16T19:06:04Z",
        "lastEditedBy" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "tags" : [
        ]
      }
    ],
    "commit" : "aca91e97424f2f2c45ede98974879b9a2ea3ca8a",
    "line" : 621,
    "diffHunk" : "@@ -1,1 +619,623 @@        data = response['data']\n\n        boot_mode = data[u'Attributes'][\"BootMode\"]\n        if boot_mode == \"Uefi\":\n            payload = {\"Boot\": {\"BootSourceOverrideTarget\": \"UefiTarget\", \"UefiTargetBootSourceOverride\": bootdevice}}"
  },
  {
    "id" : "786ddf7c-e36e-46f1-9048-dde39166af1a",
    "prId" : 41656,
    "prUrl" : "https://github.com/ansible/ansible/pull/41656#pullrequestreview-136411743",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "26cb2782-aa99-4148-ae1e-1fca7b296fe4",
        "parentId" : null,
        "authorId" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "body" : "Manager attributes seem to be Dell specific, this needs to be checked against the Redfish standard.",
        "createdAt" : "2018-07-11T20:37:30Z",
        "updatedAt" : "2018-07-16T19:06:04Z",
        "lastEditedBy" : "d3dac403-d9ed-45a1-86de-77ac9cf45662",
        "tags" : [
        ]
      }
    ],
    "commit" : "aca91e97424f2f2c45ede98974879b9a2ea3ca8a",
    "line" : 633,
    "diffHunk" : "@@ -1,1 +631,635 @@\n    def set_manager_attributes(self, attr):\n        attributes = \"Attributes\"\n\n        # Example: manager_attr = {\\\"name\\\":\\\"value\\\"}"
  },
  {
    "id" : "e0e49990-ff19-4607-a1bd-ad82ae36804d",
    "prId" : 49333,
    "prUrl" : "https://github.com/ansible/ansible/pull/49333#pullrequestreview-181947806",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ca9bba0d-e57c-4cce-8e5c-c2dd8677a2e7",
        "parentId" : null,
        "authorId" : "870e1fd6-07e7-404a-911c-ed99e933627b",
        "body" : "Unfortunately, this '.../Attributes' URI is not part of the standard. That URI is an OEM extension. ",
        "createdAt" : "2018-12-05T20:02:44Z",
        "updatedAt" : "2018-12-05T20:13:01Z",
        "lastEditedBy" : "870e1fd6-07e7-404a-911c-ed99e933627b",
        "tags" : [
        ]
      }
    ],
    "commit" : "3a2f1ca133e1dd25b42becd8dce0e88a0ea0f36f",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +666,670 @@    def set_manager_attributes(self, attr):\n        result = {}\n        # Here I'm making the assumption that the key 'Attributes' is part of the URI.\n        # It may not, but in the hardware I tested with, getting to the final URI where\n        # the Manager Attributes are, appear to be part of a specific OEM extension."
  },
  {
    "id" : "5f4c5181-f8cb-4219-bbe6-8a65a9bb95f7",
    "prId" : 50854,
    "prUrl" : "https://github.com/ansible/ansible/pull/50854#pullrequestreview-207581728",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f54b54aa-b5a8-4175-b6cc-d4c0082fcd54",
        "parentId" : null,
        "authorId" : "870e1fd6-07e7-404a-911c-ed99e933627b",
        "body" : "I think you should be able to use the aggregate() method here if you modify aggregate() to add an optional resource_type param.",
        "createdAt" : "2019-02-20T19:23:45Z",
        "updatedAt" : "2019-03-08T13:58:02Z",
        "lastEditedBy" : "870e1fd6-07e7-404a-911c-ed99e933627b",
        "tags" : [
        ]
      },
      {
        "id" : "eff80f68-bc8f-4f75-b60f-9ffe9ee2093a",
        "parentId" : "f54b54aa-b5a8-4175-b6cc-d4c0082fcd54",
        "authorId" : "91f8d75c-796c-4e5e-9609-00b58baf71b7",
        "body" : "Yeah I could do that, but isn't it break other \"multi\" like methods ? :)",
        "createdAt" : "2019-02-22T10:20:26Z",
        "updatedAt" : "2019-03-08T13:58:02Z",
        "lastEditedBy" : "91f8d75c-796c-4e5e-9609-00b58baf71b7",
        "tags" : [
        ]
      },
      {
        "id" : "d8201891-6dc4-46df-877f-c0aacc32382e",
        "parentId" : "f54b54aa-b5a8-4175-b6cc-d4c0082fcd54",
        "authorId" : "870e1fd6-07e7-404a-911c-ed99e933627b",
        "body" : "One approach would be to add a `**kwargs` param to aggregate() as well as to each of the \"single\" methods that are called by aggregate(). But that seems like overkill for this one get_multi_nic_inventory() special case.\r\n\r\nI'm thinking now it would be better to address this get_multi_nic_inventory() special case via a new issue and PR. (It can be changed so that it no longer requires the extra `resource_type` param.)\r\n\r\nSo I'm OK with leaving get_multi_nic_inventory() as-is in this PR.",
        "createdAt" : "2019-02-25T19:17:55Z",
        "updatedAt" : "2019-03-08T13:58:02Z",
        "lastEditedBy" : "870e1fd6-07e7-404a-911c-ed99e933627b",
        "tags" : [
        ]
      }
    ],
    "commit" : "d4296ffea2c8e1c6713fc8c09499c09053fa2083",
    "line" : 223,
    "diffHunk" : "@@ -1,1 +930,934 @@        return result\n\n    def get_multi_nic_inventory(self, resource_type):\n        ret = True\n        entries = []"
  },
  {
    "id" : "c17b3b98-cf59-4f11-93cb-a6c1683ec46f",
    "prId" : 50872,
    "prUrl" : "https://github.com/ansible/ansible/pull/50872#pullrequestreview-194442757",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c66a9d19-4b14-4321-ad88-2d22dbfd8700",
        "parentId" : null,
        "authorId" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "body" : "This construction seems a bit awkward as it's using a loop that will only happen once when no loop is needed.  Probably better to rewrite so it's clear what is really being looked for:\r\n``` python\r\n            if data.get(u'Members'):\r\n                systems_service = data[u'Members'][0][u'@odata.id']\r\n                self.systems_uri = systems_service\r\n                return {'ret': True}\r\n```\r\n\r\nSince this is fixing a bug and has already been merged to devel, I'm merging it but please consider updating the code so it's easier to work on it in the future.",
        "createdAt" : "2019-01-14T20:43:19Z",
        "updatedAt" : "2019-01-14T20:43:19Z",
        "lastEditedBy" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "tags" : [
        ]
      },
      {
        "id" : "08e8b6c8-5297-4fce-b217-7650eae7df06",
        "parentId" : "c66a9d19-4b14-4321-ad88-2d22dbfd8700",
        "authorId" : "91f8d75c-796c-4e5e-9609-00b58baf71b7",
        "body" : "@abadger got it. thanks :)",
        "createdAt" : "2019-01-21T04:35:47Z",
        "updatedAt" : "2019-01-21T04:35:47Z",
        "lastEditedBy" : "91f8d75c-796c-4e5e-9609-00b58baf71b7",
        "tags" : [
        ]
      }
    ],
    "commit" : "6230fad82b0ce08fe90458001292301b2fbb01d5",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +133,137 @@                    systems_service = member[u'@odata.id']\n                    self.systems_uri = systems_service\n                    return {'ret': True}\n            else:\n                return {'ret': False,"
  }
]