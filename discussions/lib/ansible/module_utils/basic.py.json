[
  {
    "id" : "f5dd0deb-8d46-4a48-9ea9-0d9f08ea8d0a",
    "prId" : 12614,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "776f3361-f2a4-49c5-a912-2dcfe006f1dc",
        "parentId" : null,
        "authorId" : "f01f60d2-e084-44c7-baad-7798a8518fb2",
        "body" : "Could `module` contain non-ASCII characters?\n",
        "createdAt" : "2015-10-04T07:09:29Z",
        "updatedAt" : "2015-10-12T20:30:37Z",
        "lastEditedBy" : "f01f60d2-e084-44c7-baad-7798a8518fb2",
        "tags" : [
        ]
      }
    ],
    "commit" : "15d7f5384640c379f73265ab1bdb72c2b267e4d9",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +1292,1296 @@                    journal_args.append((arg.upper(), str(log_args[arg])))\n                try:\n                    journal.send(u\"%s %s\" % (module, journal_msg), **dict(journal_args))\n                except IOError:\n                    # fall back to syslog since logging to journal failed"
  },
  {
    "id" : "3deafa9c-62ca-47d6-902b-db099cf01b77",
    "prId" : 15226,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b4493f99-199f-411b-a19e-8a84e64e4745",
        "parentId" : null,
        "authorId" : "fc84e3a8-7a8a-45ea-ba68-7e6e0b604075",
        "body" : "I wasn't entirely sure where to put this. If someone has a better idea, I'd love to hear it.\n",
        "createdAt" : "2016-04-06T18:20:46Z",
        "updatedAt" : "2016-04-12T12:56:08Z",
        "lastEditedBy" : "fc84e3a8-7a8a-45ea-ba68-7e6e0b604075",
        "tags" : [
        ]
      },
      {
        "id" : "e729d112-0398-4980-b751-acbf1e809f58",
        "parentId" : "b4493f99-199f-411b-a19e-8a84e64e4745",
        "authorId" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "body" : "I'm not sure.  Putting it in basic.py isn't bad for now.  basic is such a mess that in the future we'll probably refactor it into different modules anyway at some indeterminate future date.\n",
        "createdAt" : "2016-04-07T16:24:58Z",
        "updatedAt" : "2016-04-12T12:56:08Z",
        "lastEditedBy" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "tags" : [
        ]
      }
    ],
    "commit" : "7290b6282d5b03ccabf67235226b21b78ea29e70",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +517,521 @@\n\nclass AnsibleFallbackNotFound(Exception):\n    pass\n"
  },
  {
    "id" : "a3675798-18d6-4e06-8228-88538f24de3d",
    "prId" : 15419,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f60a5ae2-df4d-4277-9946-08872f63c535",
        "parentId" : null,
        "authorId" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "body" : "We lost the comment about non-utf8 locales here.\n",
        "createdAt" : "2016-04-14T19:22:29Z",
        "updatedAt" : "2016-04-18T18:06:53Z",
        "lastEditedBy" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "tags" : [
        ]
      },
      {
        "id" : "0ae20299-09e9-4f6d-8ad7-83b5e7b66db7",
        "parentId" : "f60a5ae2-df4d-4277-9946-08872f63c535",
        "authorId" : "311820dd-fcb9-46df-a201-9c0e7d6fac58",
        "body" : "Still there, just moved it down around the actual try/except\n",
        "createdAt" : "2016-04-14T20:36:19Z",
        "updatedAt" : "2016-04-18T18:06:53Z",
        "lastEditedBy" : "311820dd-fcb9-46df-a201-9c0e7d6fac58",
        "tags" : [
        ]
      },
      {
        "id" : "bbe94ef3-1ed7-48cf-94c2-5703727f38d0",
        "parentId" : "f60a5ae2-df4d-4277-9946-08872f63c535",
        "authorId" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "body" : "Ah -- but the comment isn't about the try except.  It's about reading via the bytes interfaces here so that we get raw bytes in and then transform them to unicode ourselves later.  (ie: the comment is to explain why we use open([..] 'rb'), and stdin.buffer on PY3.\n",
        "createdAt" : "2016-04-14T23:43:52Z",
        "updatedAt" : "2016-04-18T18:06:53Z",
        "lastEditedBy" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "tags" : [
        ]
      },
      {
        "id" : "0a14f632-6143-4355-bf7b-6662b585affb",
        "parentId" : "f60a5ae2-df4d-4277-9946-08872f63c535",
        "authorId" : "311820dd-fcb9-46df-a201-9c0e7d6fac58",
        "body" : "got it, moved that back up\n",
        "createdAt" : "2016-04-15T00:25:39Z",
        "updatedAt" : "2016-04-18T18:06:53Z",
        "lastEditedBy" : "311820dd-fcb9-46df-a201-9c0e7d6fac58",
        "tags" : [
        ]
      }
    ],
    "commit" : "5b336832af861c96d986d99aa93ddddfb760d91f",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +1448,1452 @@        # default case, read from stdin\n        else:\n            if sys.version_info < (3,):\n                buffer = sys.stdin.read()\n            else:"
  },
  {
    "id" : "35920442-d37f-43ee-94b7-9f191178d5f2",
    "prId" : 15913,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4e22685e-abd6-4eb5-bbc5-ded7ce501435",
        "parentId" : null,
        "authorId" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "body" : "the error should go to stderr, since sys.exit does this by default (and still returns rc=1) just use that.\n",
        "createdAt" : "2016-05-18T13:07:47Z",
        "updatedAt" : "2016-05-18T13:31:54Z",
        "lastEditedBy" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "tags" : [
        ]
      },
      {
        "id" : "6f9f715d-635c-4c4e-9fdc-1341c22d1b0d",
        "parentId" : "4e22685e-abd6-4eb5-bbc5-ded7ce501435",
        "authorId" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "body" : "We talked about this in slack and realized that nothing else is returning json on stderr.  We'll look at it separately and if we decide it's appropriate we'll implement that in 2.2.\n",
        "createdAt" : "2016-05-18T13:58:16Z",
        "updatedAt" : "2016-05-18T13:58:16Z",
        "lastEditedBy" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "tags" : [
        ]
      }
    ],
    "commit" : "d7ee630a779992a6d3c5b8700e5246a7b7b14aaf",
    "line" : 61,
    "diffHunk" : "@@ -1,1 +549,553 @@    except ValueError:\n        # This helper used too early for fail_json to work.\n        print('\\n{\"msg\": \"Error: Module unable to decode valid JSON on stdin.  Unable to figure out what parameters were passed\", \"failed\": true}')\n        sys.exit(1)\n"
  }
]