[
  {
    "id" : "f5dd0deb-8d46-4a48-9ea9-0d9f08ea8d0a",
    "prId" : 12614,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "776f3361-f2a4-49c5-a912-2dcfe006f1dc",
        "parentId" : null,
        "authorId" : "f01f60d2-e084-44c7-baad-7798a8518fb2",
        "body" : "Could `module` contain non-ASCII characters?\n",
        "createdAt" : "2015-10-04T07:09:29Z",
        "updatedAt" : "2015-10-12T20:30:37Z",
        "lastEditedBy" : "f01f60d2-e084-44c7-baad-7798a8518fb2",
        "tags" : [
        ]
      }
    ],
    "commit" : "15d7f5384640c379f73265ab1bdb72c2b267e4d9",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +1292,1296 @@                    journal_args.append((arg.upper(), str(log_args[arg])))\n                try:\n                    journal.send(u\"%s %s\" % (module, journal_msg), **dict(journal_args))\n                except IOError:\n                    # fall back to syslog since logging to journal failed"
  },
  {
    "id" : "3deafa9c-62ca-47d6-902b-db099cf01b77",
    "prId" : 15226,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b4493f99-199f-411b-a19e-8a84e64e4745",
        "parentId" : null,
        "authorId" : "fc84e3a8-7a8a-45ea-ba68-7e6e0b604075",
        "body" : "I wasn't entirely sure where to put this. If someone has a better idea, I'd love to hear it.\n",
        "createdAt" : "2016-04-06T18:20:46Z",
        "updatedAt" : "2016-04-12T12:56:08Z",
        "lastEditedBy" : "fc84e3a8-7a8a-45ea-ba68-7e6e0b604075",
        "tags" : [
        ]
      },
      {
        "id" : "e729d112-0398-4980-b751-acbf1e809f58",
        "parentId" : "b4493f99-199f-411b-a19e-8a84e64e4745",
        "authorId" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "body" : "I'm not sure.  Putting it in basic.py isn't bad for now.  basic is such a mess that in the future we'll probably refactor it into different modules anyway at some indeterminate future date.\n",
        "createdAt" : "2016-04-07T16:24:58Z",
        "updatedAt" : "2016-04-12T12:56:08Z",
        "lastEditedBy" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "tags" : [
        ]
      }
    ],
    "commit" : "7290b6282d5b03ccabf67235226b21b78ea29e70",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +517,521 @@\n\nclass AnsibleFallbackNotFound(Exception):\n    pass\n"
  },
  {
    "id" : "a3675798-18d6-4e06-8228-88538f24de3d",
    "prId" : 15419,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f60a5ae2-df4d-4277-9946-08872f63c535",
        "parentId" : null,
        "authorId" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "body" : "We lost the comment about non-utf8 locales here.\n",
        "createdAt" : "2016-04-14T19:22:29Z",
        "updatedAt" : "2016-04-18T18:06:53Z",
        "lastEditedBy" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "tags" : [
        ]
      },
      {
        "id" : "0ae20299-09e9-4f6d-8ad7-83b5e7b66db7",
        "parentId" : "f60a5ae2-df4d-4277-9946-08872f63c535",
        "authorId" : "311820dd-fcb9-46df-a201-9c0e7d6fac58",
        "body" : "Still there, just moved it down around the actual try/except\n",
        "createdAt" : "2016-04-14T20:36:19Z",
        "updatedAt" : "2016-04-18T18:06:53Z",
        "lastEditedBy" : "311820dd-fcb9-46df-a201-9c0e7d6fac58",
        "tags" : [
        ]
      },
      {
        "id" : "bbe94ef3-1ed7-48cf-94c2-5703727f38d0",
        "parentId" : "f60a5ae2-df4d-4277-9946-08872f63c535",
        "authorId" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "body" : "Ah -- but the comment isn't about the try except.  It's about reading via the bytes interfaces here so that we get raw bytes in and then transform them to unicode ourselves later.  (ie: the comment is to explain why we use open([..] 'rb'), and stdin.buffer on PY3.\n",
        "createdAt" : "2016-04-14T23:43:52Z",
        "updatedAt" : "2016-04-18T18:06:53Z",
        "lastEditedBy" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "tags" : [
        ]
      },
      {
        "id" : "0a14f632-6143-4355-bf7b-6662b585affb",
        "parentId" : "f60a5ae2-df4d-4277-9946-08872f63c535",
        "authorId" : "311820dd-fcb9-46df-a201-9c0e7d6fac58",
        "body" : "got it, moved that back up\n",
        "createdAt" : "2016-04-15T00:25:39Z",
        "updatedAt" : "2016-04-18T18:06:53Z",
        "lastEditedBy" : "311820dd-fcb9-46df-a201-9c0e7d6fac58",
        "tags" : [
        ]
      }
    ],
    "commit" : "5b336832af861c96d986d99aa93ddddfb760d91f",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +1448,1452 @@        # default case, read from stdin\n        else:\n            if sys.version_info < (3,):\n                buffer = sys.stdin.read()\n            else:"
  },
  {
    "id" : "35920442-d37f-43ee-94b7-9f191178d5f2",
    "prId" : 15913,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4e22685e-abd6-4eb5-bbc5-ded7ce501435",
        "parentId" : null,
        "authorId" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "body" : "the error should go to stderr, since sys.exit does this by default (and still returns rc=1) just use that.\n",
        "createdAt" : "2016-05-18T13:07:47Z",
        "updatedAt" : "2016-05-18T13:31:54Z",
        "lastEditedBy" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "tags" : [
        ]
      },
      {
        "id" : "6f9f715d-635c-4c4e-9fdc-1341c22d1b0d",
        "parentId" : "4e22685e-abd6-4eb5-bbc5-ded7ce501435",
        "authorId" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "body" : "We talked about this in slack and realized that nothing else is returning json on stderr.  We'll look at it separately and if we decide it's appropriate we'll implement that in 2.2.\n",
        "createdAt" : "2016-05-18T13:58:16Z",
        "updatedAt" : "2016-05-18T13:58:16Z",
        "lastEditedBy" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "tags" : [
        ]
      }
    ],
    "commit" : "d7ee630a779992a6d3c5b8700e5246a7b7b14aaf",
    "line" : 61,
    "diffHunk" : "@@ -1,1 +549,553 @@    except ValueError:\n        # This helper used too early for fail_json to work.\n        print('\\n{\"msg\": \"Error: Module unable to decode valid JSON on stdin.  Unable to figure out what parameters were passed\", \"failed\": true}')\n        sys.exit(1)\n"
  },
  {
    "id" : "079bb1c0-3d3a-4a51-8316-00caf5d26a6b",
    "prId" : 16124,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d164d35e-6b63-4d0a-bf74-57ae77f1c5bc",
        "parentId" : null,
        "authorId" : "fa0144fc-7424-474a-9ab5-059de28814b7",
        "body" : "This seems like it could be a util function. \n\nCould module_utils.splitter.split_args() be used here?\n",
        "createdAt" : "2016-06-03T18:28:21Z",
        "updatedAt" : "2016-06-04T23:14:22Z",
        "lastEditedBy" : "fa0144fc-7424-474a-9ab5-059de28814b7",
        "tags" : [
        ]
      },
      {
        "id" : "cc73bcb1-645e-436f-a930-9dab216ce2ff",
        "parentId" : "d164d35e-6b63-4d0a-bf74-57ae77f1c5bc",
        "authorId" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "body" : "splitter is much more complex than this code.  Since shlex has always worked here I'd rather not.  We should attempt to move as much as possible away from splitter rather than to it.\n",
        "createdAt" : "2016-06-04T15:01:35Z",
        "updatedAt" : "2016-06-04T23:14:22Z",
        "lastEditedBy" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "tags" : [
        ]
      },
      {
        "id" : "9eadea2e-486a-482b-a7a3-a687236c3635",
        "parentId" : "d164d35e-6b63-4d0a-bf74-57ae77f1c5bc",
        "authorId" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "body" : "Thinking about whether this should be a utility function... the problem I see is that if we attempt to hide the complexity here we come out with an unclean API.  If we don't hide the complexity inside of hte function, then the function really doesn't do anything.\n\nWhat I mean by unclean API is that the function would say \"Takes either text or utf-8 encoded byte strings on input.  On output gives text type on python3 and bytes type on python2\".  The unrelated matrix elements make it unintuitive how the function behaves.  It would be better if the return type was linked to the input type or the input type had to be appropriate for the version of python (or if both values were constant).\n",
        "createdAt" : "2016-06-04T15:08:44Z",
        "updatedAt" : "2016-06-04T23:14:22Z",
        "lastEditedBy" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "tags" : [
        ]
      }
    ],
    "commit" : "ec44c30760f09e13076b1909ed93e4a3a873e6a5",
    "line" : 89,
    "diffHunk" : "@@ -1,1 +2040,2044 @@                to_clean_args = args.decode('utf-8', errors='replace')\n        if isinstance(args, (text_type, binary_type)):\n            to_clean_args = shlex.split(to_clean_args)\n\n        clean_args = []"
  },
  {
    "id" : "fd7fd016-2d8c-40b4-a3fe-2d05718c8f8e",
    "prId" : 16124,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3737cafc-70f6-4149-aaa5-ebbbe9330c91",
        "parentId" : null,
        "authorId" : "fa0144fc-7424-474a-9ab5-059de28814b7",
        "body" : "[comment on code that was pre-existing to this pr and doesn't need to be revised now]\n\nMy preference would be to rename these to something like stdout_data/stderr_data. Having vars named 'stdout' and\n'stderr' floating around code dealing with subprocess/popen/select seem error prone, especially since the 'stdout' var here is not a pipe or file object.\n",
        "createdAt" : "2016-06-03T18:36:27Z",
        "updatedAt" : "2016-06-04T23:14:22Z",
        "lastEditedBy" : "fa0144fc-7424-474a-9ab5-059de28814b7",
        "tags" : [
        ]
      },
      {
        "id" : "b962ef77-ca04-44ee-b96a-dbc68f9ad82b",
        "parentId" : "3737cafc-70f6-4149-aaa5-ebbbe9330c91",
        "authorId" : "fa0144fc-7424-474a-9ab5-059de28814b7",
        "body" : "This changes the return type of this method doesnt it? Do modules need to be changed?\n",
        "createdAt" : "2016-06-03T19:05:25Z",
        "updatedAt" : "2016-06-04T23:14:22Z",
        "lastEditedBy" : "fa0144fc-7424-474a-9ab5-059de28814b7",
        "tags" : [
        ]
      },
      {
        "id" : "62e58c04-e6dc-4344-a743-a9b0635c6487",
        "parentId" : "3737cafc-70f6-4149-aaa5-ebbbe9330c91",
        "authorId" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "body" : "It shouldn't change the return type.  Remember, this is python2 code being ported to run on python3 in addition.\n",
        "createdAt" : "2016-06-04T14:58:22Z",
        "updatedAt" : "2016-06-04T23:14:22Z",
        "lastEditedBy" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "tags" : [
        ]
      }
    ],
    "commit" : "ec44c30760f09e13076b1909ed93e4a3a873e6a5",
    "line" : 100,
    "diffHunk" : "@@ -1,1 +2100,2104 @@\n            stdout = b('')\n            stderr = b('')\n            rpipes = [cmd.stdout, cmd.stderr]\n"
  }
]