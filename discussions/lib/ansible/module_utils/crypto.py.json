[
  {
    "id" : "019e8d03-9e41-469e-a8ec-a3d3e73638a6",
    "prId" : 50570,
    "prUrl" : "https://github.com/ansible/ansible/pull/50570#pullrequestreview-189637475",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "38e6e6f3-8bb0-4a45-bade-da4f5ad4ca55",
        "parentId" : null,
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "How about adding support for months and years? These are also common units for specifying expiration dates.\r\n\r\n(Python `datetime.timedelta` cannot handle months and years, but it's not too hard to work around that, see for exampe [here](https://stackoverflow.com/a/4131114).)",
        "createdAt" : "2019-01-05T16:11:13Z",
        "updatedAt" : "2019-01-22T20:03:56Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      },
      {
        "id" : "80abb7d1-b4b0-4847-861c-3f5c8e888d71",
        "parentId" : "38e6e6f3-8bb0-4a45-bade-da4f5ad4ca55",
        "authorId" : "57db1e2a-9c1c-4c08-b54f-9731aff18e36",
        "body" : "Months and years are NOT convertible to seconds, since their length varies by a day or more.",
        "createdAt" : "2019-01-05T21:16:21Z",
        "updatedAt" : "2019-01-22T20:03:56Z",
        "lastEditedBy" : "57db1e2a-9c1c-4c08-b54f-9731aff18e36",
        "tags" : [
        ]
      },
      {
        "id" : "523775b1-9674-4656-af84-19eed1239098",
        "parentId" : "38e6e6f3-8bb0-4a45-bade-da4f5ad4ca55",
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "Yep, but we're eventually working with dates here, not with date intervals.",
        "createdAt" : "2019-01-05T22:11:20Z",
        "updatedAt" : "2019-01-22T20:03:56Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      },
      {
        "id" : "2234cf31-8ed9-4f6e-9b5a-7dc76461e43d",
        "parentId" : "38e6e6f3-8bb0-4a45-bade-da4f5ad4ca55",
        "authorId" : "57db1e2a-9c1c-4c08-b54f-9731aff18e36",
        "body" : "If there's a relative time, then that's an interval (e.g. \"1 week from today\") instead of a date (\"2019-01-12\"). What date is one month after January 30th?",
        "createdAt" : "2019-01-05T22:39:48Z",
        "updatedAt" : "2019-01-22T20:03:56Z",
        "lastEditedBy" : "57db1e2a-9c1c-4c08-b54f-9731aff18e36",
        "tags" : [
        ]
      },
      {
        "id" : "e10215fa-1786-4bb3-bb43-f2872e63c5d6",
        "parentId" : "38e6e6f3-8bb0-4a45-bade-da4f5ad4ca55",
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "What I mean is that we're working with intervals, but from a well-defined absolute point (namely now). About the variable number of days in a month: that's why people are \"rounding down\" to the last day of the month. While that's not totally correct / well-defined, it usually does what people expect when they want to have a date 6 months in the future, or 10 years in the future.",
        "createdAt" : "2019-01-05T22:45:59Z",
        "updatedAt" : "2019-01-22T20:03:56Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      },
      {
        "id" : "6823f0d8-1a9e-46e5-a4f3-264294d154f4",
        "parentId" : "38e6e6f3-8bb0-4a45-bade-da4f5ad4ca55",
        "authorId" : "57db1e2a-9c1c-4c08-b54f-9731aff18e36",
        "body" : ">  it usually does what people expect when they want to have a date 6 months in the future, or 10 years in the future\r\n\r\nWhat date would you expect the function to give you for 10 years after 2012-02-29?\r\n\r\nWhat date would you expect 6 months after August 31st in a leap year and a non-leap year?",
        "createdAt" : "2019-01-05T23:10:34Z",
        "updatedAt" : "2019-01-22T20:03:56Z",
        "lastEditedBy" : "57db1e2a-9c1c-4c08-b54f-9731aff18e36",
        "tags" : [
        ]
      },
      {
        "id" : "f93b28a2-23ff-4bf0-b462-6149b9a3dc45",
        "parentId" : "38e6e6f3-8bb0-4a45-bade-da4f5ad4ca55",
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "2022-02-28, and xxxx-02-28 for non-leap years and xxxx-02-29 for leap years. End of the month gets mapped to end of month. More interesting will be what I expect August 30th to be in 6 months :-)",
        "createdAt" : "2019-01-06T15:50:36Z",
        "updatedAt" : "2019-01-22T20:03:56Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      },
      {
        "id" : "2dacf2cc-580a-43f7-87a0-2c9a5615a6ea",
        "parentId" : "38e6e6f3-8bb0-4a45-bade-da4f5ad4ca55",
        "authorId" : "57db1e2a-9c1c-4c08-b54f-9731aff18e36",
        "body" : "I'd rather have a bijective funtion (https://en.wikipedia.org/wiki/Bijection) than a surjective one (https://en.wikipedia.org/wiki/Surjective_function) because that way it leaves it up to the user to decide which edge case handling they prefer (at which point is the \"end of month\" mapping overrules the \"only the month changes, not the day\" rule).\r\n\r\nI suspect this is the same reason why openssh also doesn't allow setting anything beyond weeks and why openssl only uses days as relative input.",
        "createdAt" : "2019-01-06T16:33:13Z",
        "updatedAt" : "2019-01-22T20:03:56Z",
        "lastEditedBy" : "57db1e2a-9c1c-4c08-b54f-9731aff18e36",
        "tags" : [
        ]
      },
      {
        "id" : "b4a3c7d2-088e-4726-aeef-b1aa59be926c",
        "parentId" : "38e6e6f3-8bb0-4a45-bade-da4f5ad4ca55",
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "It's not even surjective; when your current date is Feburary 28, you can't reach Feburary 29 in the year after it (assuming it's a leap year).\r\n\r\nIt might be better to solve this once and for all as a lookup plugin which allows date arithmetic (currently you can use the `pipe` lookup to call `date`; see [here](https://groups.google.com/forum/#!msg/ansible-project/AX4BNH3eIfw/jrfISBDjDAAJ)) (date seems to keep days: `date --iso-8601 --date=\"2019-01-31 + 1 month\"` yields `2019-03-03`).",
        "createdAt" : "2019-01-06T17:18:42Z",
        "updatedAt" : "2019-01-22T20:03:56Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      }
    ],
    "commit" : "90b47175b4421a9d189049c536a303f360cb9265",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +135,139 @@\n    parsed_result = re.match(\n        r\"^(?P<prefix>[+-])((?P<weeks>\\d+)[wW])?((?P<days>\\d+)[dD])?((?P<hours>\\d+)[hH])?((?P<minutes>\\d+)[mM])?((?P<seconds>\\d+)[sS]?)?$\",\n        relative_time_string)\n"
  },
  {
    "id" : "251d120e-4526-409d-b01e-d38bd4567634",
    "prId" : 53489,
    "prUrl" : "https://github.com/ansible/ansible/pull/53489#pullrequestreview-212227280",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "30c008f3-cd1f-4e57-a81e-85e3b6d7581d",
        "parentId" : null,
        "authorId" : "ed555eca-1475-4898-afd5-d7e38b58a2c4",
        "body" : "Should we really raise an error if the key is not password protected? Wouldn't a warning be enough here?",
        "createdAt" : "2019-03-08T10:36:10Z",
        "updatedAt" : "2019-03-08T11:19:48Z",
        "lastEditedBy" : "ed555eca-1475-4898-afd5-d7e38b58a2c4",
        "tags" : [
        ]
      },
      {
        "id" : "1ac3cdfc-c088-49a6-808e-a74df70572bd",
        "parentId" : "30c008f3-cd1f-4e57-a81e-85e3b6d7581d",
        "authorId" : "3c2a0f57-db61-42cd-9f60-337be7f6e7c6",
        "body" : "The openssl_privatekey needs this exception to know that it needs to regenerate the private key. For the other modules, it's a good question (see my comment below)...",
        "createdAt" : "2019-03-08T10:37:15Z",
        "updatedAt" : "2019-03-08T11:19:48Z",
        "lastEditedBy" : "3c2a0f57-db61-42cd-9f60-337be7f6e7c6",
        "tags" : [
        ]
      }
    ],
    "commit" : "c6baa08b6bcb10840e76d706b11d0f2d4afb718f",
    "line" : 65,
    "diffHunk" : "@@ -1,1 +116,120 @@                    # Since we can load the key without an exception, the\n                    # key isn't password-protected\n                    raise OpenSSLBadPassphraseError('Passphrase provided, but private key is not password-protected!')\n            except crypto.Error:\n                if passphrase is None and len(e.args) > 0 and len(e.args[0]) > 0 and e.args[0][0][2] == 'bad decrypt':"
  },
  {
    "id" : "77c41579-66e7-48a2-b49e-93b2eb9f637c",
    "prId" : 53924,
    "prUrl" : "https://github.com/ansible/ansible/pull/53924#pullrequestreview-215371199",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d4ed9e93-320a-49e0-8896-52005361c413",
        "parentId" : null,
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "You should move that into a different `try/except` block, otherwise not having PyOpenSSL installed will prevent `cryptography` from being importet.",
        "createdAt" : "2019-03-17T19:37:51Z",
        "updatedAt" : "2019-03-21T22:52:08Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      }
    ],
    "commit" : "9a6d077a924db1c18c7a7f140429206932a5d62d",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +25,29 @@\ntry:\n    from cryptography import x509\n    from cryptography.hazmat.backends import default_backend as cryptography_backend\n    from cryptography.hazmat.primitives.serialization import load_pem_private_key"
  }
]