[
  {
    "id" : "9628d65c-ed0b-47c0-b465-c1bff138849f",
    "prId" : 15509,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2701560a-559f-46f9-bc77-246903853753",
        "parentId" : null,
        "authorId" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "body" : "this should be a common function in basic.py (i think there is this one or the reverse there already)\n",
        "createdAt" : "2016-04-22T20:11:35Z",
        "updatedAt" : "2016-04-23T16:47:47Z",
        "lastEditedBy" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "tags" : [
        ]
      },
      {
        "id" : "74c777eb-546d-45bc-bffd-3a7ae01b2c8f",
        "parentId" : "2701560a-559f-46f9-bc77-246903853753",
        "authorId" : "3c2d2125-0d1f-41a8-b9f4-2c8913ca435d",
        "body" : "Maybe it should be, but i don't see anything right off in basic.py that turns a character string into an int. I see something called pretty_bytes() in basic.py which does the opposite of what I need. It turns a number into a string with this format: '%.2f %s' % (float(size)/ limit, suffix) \n",
        "createdAt" : "2016-04-23T16:57:28Z",
        "updatedAt" : "2016-04-23T16:57:28Z",
        "lastEditedBy" : "3c2d2125-0d1f-41a8-b9f4-2c8913ca435d",
        "tags" : [
        ]
      }
    ],
    "commit" : "dc9b7844322f0a7a2e1bedc152d97f667cf40402",
    "line" : 84,
    "diffHunk" : "@@ -1,1 +82,86 @@\n\ndef human_to_bytes(number):\n    if number is None:\n        return 0"
  },
  {
    "id" : "14858fdd-a024-4719-b672-6545b14013e6",
    "prId" : 15509,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e0eb5b89-7eec-4956-8fb5-4b13f22b83f0",
        "parentId" : null,
        "authorId" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "body" : "this is already done by argspec when param is defined as boolean, all redundant\n",
        "createdAt" : "2016-04-22T20:14:46Z",
        "updatedAt" : "2016-04-23T16:47:47Z",
        "lastEditedBy" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "tags" : [
        ]
      },
      {
        "id" : "1b68c58e-367a-4a5d-8b3c-0a96a231feb5",
        "parentId" : "e0eb5b89-7eec-4956-8fb5-4b13f22b83f0",
        "authorId" : "3c2d2125-0d1f-41a8-b9f4-2c8913ca435d",
        "body" : "pretty sure this is specific to docker_common, especially where we drop in specific values for cert_path, cacert_path and key_path.\n",
        "createdAt" : "2016-04-23T16:58:48Z",
        "updatedAt" : "2016-04-24T02:06:54Z",
        "lastEditedBy" : "3c2d2125-0d1f-41a8-b9f4-2c8913ca435d",
        "tags" : [
        ]
      }
    ],
    "commit" : "dc9b7844322f0a7a2e1bedc152d97f667cf40402",
    "line" : 181,
    "diffHunk" : "@@ -1,1 +179,183 @@\n    @staticmethod\n    def _get_value(param_name, param_value, env_variable, default_value):\n        if param_value is not None:\n            # take module parameter value"
  }
]