[
  {
    "id" : "6da75bff-a22f-4804-83c5-ed7b64aa3556",
    "prId" : 10760,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d2ba6102-0543-4f8f-8cd4-9bf7d226af29",
        "parentId" : null,
        "authorId" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "body" : "throw seems unused\n",
        "createdAt" : "2015-04-22T00:40:44Z",
        "updatedAt" : "2015-04-22T00:40:44Z",
        "lastEditedBy" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "tags" : [
        ]
      }
    ],
    "commit" : "9b317858c1c5a2f74cd55df4a5dfecf427a01594",
    "line" : 73,
    "diffHunk" : "@@ -1,1 +71,75 @@\n\ndef find_datacenter_by_name(content, datacenter_name, throw=True):\n\n    datacenters = get_all_objs(content, [vim.Datacenter])"
  },
  {
    "id" : "a7753857-a38d-4a4f-ba1b-608588ea91a4",
    "prId" : 15053,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4280ff30-80e5-4d8f-9ac7-fc279f862b2e",
        "parentId" : null,
        "authorId" : "01295fe2-3448-49f5-afc0-5dda9c632bb0",
        "body" : "+1\n",
        "createdAt" : "2016-03-26T12:48:31Z",
        "updatedAt" : "2016-04-01T19:48:30Z",
        "lastEditedBy" : "01295fe2-3448-49f5-afc0-5dda9c632bb0",
        "tags" : [
        ]
      }
    ],
    "commit" : "dd95cc85708ef148a1d12f57e9eac1bc759ce369",
    "line" : 97,
    "diffHunk" : "@@ -1,1 +217,221 @@\n    obj = {}\n    container = content.viewManager.CreateContainerView(folder, vimtype, recurse)\n    for managed_object_ref in container.view:\n        obj.update({managed_object_ref: managed_object_ref.name})"
  },
  {
    "id" : "362c01a3-1cb6-467f-bc83-7b687393d0c3",
    "prId" : 20971,
    "prUrl" : "https://github.com/ansible/ansible/pull/20971#pullrequestreview-20280414",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d6492699-7d57-4f15-a41b-8be69b7a1007",
        "parentId" : null,
        "authorId" : "66c3a560-9083-45c0-b798-6d01f2056a72",
        "body" : "Is gather_vm_facts used by any other module ?",
        "createdAt" : "2017-02-03T18:38:36Z",
        "updatedAt" : "2017-02-06T16:16:19Z",
        "lastEditedBy" : "66c3a560-9083-45c0-b798-6d01f2056a72",
        "tags" : [
        ]
      },
      {
        "id" : "8938c4d5-1797-436e-b3f4-4e1ffc551a3a",
        "parentId" : "d6492699-7d57-4f15-a41b-8be69b7a1007",
        "authorId" : "7268595c-1eb4-4b5f-9277-90f183130a4b",
        "body" : "Yes it is. (Answering the review)",
        "createdAt" : "2017-02-06T14:49:50Z",
        "updatedAt" : "2017-02-06T16:16:19Z",
        "lastEditedBy" : "7268595c-1eb4-4b5f-9277-90f183130a4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "d2c826eedb80c8ab2574080c702e876b1d906b9a",
    "line" : 54,
    "diffHunk" : "@@ -1,1 +186,190 @@\n\ndef gather_vm_facts(content, vm):\n    \"\"\" Gather facts from vim.VirtualMachine object. \"\"\"\n    facts = {"
  },
  {
    "id" : "69002c1e-ae59-45e0-b951-92e9a822d3a6",
    "prId" : 27472,
    "prUrl" : "https://github.com/ansible/ansible/pull/27472#pullrequestreview-60113369",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4f85a2a3-d16f-4c38-ac2e-f3b846e9d721",
        "parentId" : null,
        "authorId" : "7268595c-1eb4-4b5f-9277-90f183130a4b",
        "body" : "This is not doing exactly the same thing (maybe on purpose ?).\r\n\r\nOriginally it would remove 'Datacenters' if it was the first item in paths. Now it seems you're removing everything after the first encountered 'Datacenters'. Can you confirm this change of implementation is exactly what you want ?",
        "createdAt" : "2017-08-17T11:34:00Z",
        "updatedAt" : "2017-09-01T17:11:16Z",
        "lastEditedBy" : "7268595c-1eb4-4b5f-9277-90f183130a4b",
        "tags" : [
        ]
      },
      {
        "id" : "dcbbb2a2-c9e3-416b-b326-a3507623c2f7",
        "parentId" : "4f85a2a3-d16f-4c38-ac2e-f3b846e9d721",
        "authorId" : "7c444fb5-3f6f-4a08-83d5-454cb61d61f5",
        "body" : "Doesn't look like that should be the intention... I guess it should be `continue`?",
        "createdAt" : "2017-08-18T09:27:03Z",
        "updatedAt" : "2017-09-01T17:11:17Z",
        "lastEditedBy" : "7c444fb5-3f6f-4a08-83d5-454cb61d61f5",
        "tags" : [
        ]
      },
      {
        "id" : "56ca0da8-0c80-4273-8ba5-00411554c706",
        "parentId" : "4f85a2a3-d16f-4c38-ac2e-f3b846e9d721",
        "authorId" : "96aeecbb-c275-402c-b904-a795c82efb48",
        "body" : "@dagwieers @pdellaert \r\n\r\nThis while loop is trying to build path for a object. We need to break when we encounter 'Datacenters' which is parent of every object. In Python2*, it works perfectly, but in Python3, it fails. \r\nSo I added `break` when we encounter Datacenters, since we don't have Datacenters in paths list then, there is no point in keeping `if paths[0] == 'Datacenters':` statement.\r\nWithout fix [this script](https://github.com/Akasurde/pyvmomi_examples/blob/master/compile_path_example.py) fails\r\nWith fix: \r\n```\r\n# python compile_path_example.py\r\n/\r\n/vm\r\n/datastore\r\n/network\r\n/\r\n# python3 compile_path_example.py\r\n/\r\n/vm\r\n/datastore\r\n/network\r\n/\r\n# govc find /\r\n/\r\n/DC0\r\n/DC0/vm\r\n/DC0/vm/DC0_H0_VM0\r\n/DC0/vm/DC0_H0_VM1\r\n/DC0/vm/DC0_C0_RP0_VM0\r\n/DC0/vm/DC0_C0_RP0_VM1\r\n/DC0/host\r\n/DC0/host/DC0_H0\r\n/DC0/host/DC0_H0/DC0_H0\r\n/DC0/host/DC0_H0/Resources\r\n/DC0/host/DC0_C0\r\n/DC0/host/DC0_C0/DC0_C0_H0\r\n/DC0/host/DC0_C0/DC0_C0_H1\r\n/DC0/host/DC0_C0/DC0_C0_H2\r\n/DC0/host/DC0_C0/Resources\r\n/DC0/datastore\r\n/DC0/datastore/LocalDS_0\r\n/DC0/network\r\n/DC0/network/VM Network\r\n/DC0/network/DVS0\r\n/DC0/network/DC0_DVPG0\r\n```",
        "createdAt" : "2017-08-18T16:37:46Z",
        "updatedAt" : "2017-09-01T17:11:17Z",
        "lastEditedBy" : "96aeecbb-c275-402c-b904-a795c82efb48",
        "tags" : [
        ]
      },
      {
        "id" : "e8201d34-6b9f-48f8-802d-9603d59dcb96",
        "parentId" : "4f85a2a3-d16f-4c38-ac2e-f3b846e9d721",
        "authorId" : "7c444fb5-3f6f-4a08-83d5-454cb61d61f5",
        "body" : "Your code breaks the loop, so it doesn't continue. This assumes that `Datacenters` is always the root folder in all cases, and nothing else above it exists. If that's a certainty, your code is good. Otherwise the question becomes how we should handle something above the `Datacenters` folder",
        "createdAt" : "2017-08-18T16:49:30Z",
        "updatedAt" : "2017-09-01T17:11:17Z",
        "lastEditedBy" : "7c444fb5-3f6f-4a08-83d5-454cb61d61f5",
        "tags" : [
        ]
      },
      {
        "id" : "d86100df-b232-4edf-9ddb-081a95eb8b78",
        "parentId" : "4f85a2a3-d16f-4c38-ac2e-f3b846e9d721",
        "authorId" : "96aeecbb-c275-402c-b904-a795c82efb48",
        "body" : "Yes. 'Datacenters' is parent of all object so I don't think so there will be anything above it. If you see code is doing `paths.reverse()` so `Datacenters` will be the last candidate we are looking for. Can anyone confirm this assumption?",
        "createdAt" : "2017-08-19T03:10:41Z",
        "updatedAt" : "2017-09-01T17:11:17Z",
        "lastEditedBy" : "96aeecbb-c275-402c-b904-a795c82efb48",
        "tags" : [
        ]
      },
      {
        "id" : "ea3f4619-8035-47ae-b38d-15cf5f077ca0",
        "parentId" : "4f85a2a3-d16f-4c38-ac2e-f3b846e9d721",
        "authorId" : "7c444fb5-3f6f-4a08-83d5-454cb61d61f5",
        "body" : "As far as i know, you correct in those assumptions. Just worried what will happen if there is actually a subfolder with name 'Datacenters' (for instance: Datacenters/DC01/vm/IT-loads/Datacenters/London/)\r\n\r\nStill approving, as it is a corner case",
        "createdAt" : "2017-09-01T11:50:30Z",
        "updatedAt" : "2017-09-01T17:11:17Z",
        "lastEditedBy" : "7c444fb5-3f6f-4a08-83d5-454cb61d61f5",
        "tags" : [
        ]
      }
    ],
    "commit" : "45edccf3332d92a8568809f3580ab544b189d25f",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +235,239 @@    while hasattr(thisobj, 'parent'):\n        thisobj = thisobj.parent\n        if thisobj.name == 'Datacenters':\n            break\n        if isinstance(thisobj, vim.Folder):"
  },
  {
    "id" : "0bd9963f-7faf-421c-8fe2-79d45a61c289",
    "prId" : 30505,
    "prUrl" : "https://github.com/ansible/ansible/pull/30505#pullrequestreview-63587968",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "55f18825-aded-4b9c-898c-27da324d580b",
        "parentId" : null,
        "authorId" : "a0aa4461-7078-4be2-8c7d-36b60b5efe1f",
        "body" : "Why do we need to force to change powerstate?  Seems over protective.",
        "createdAt" : "2017-09-18T16:23:32Z",
        "updatedAt" : "2017-09-30T04:36:36Z",
        "lastEditedBy" : "a0aa4461-7078-4be2-8c7d-36b60b5efe1f",
        "tags" : [
        ]
      },
      {
        "id" : "248c042e-f80c-4465-96ee-180febac9640",
        "parentId" : "55f18825-aded-4b9c-898c-27da324d580b",
        "authorId" : "7268595c-1eb4-4b5f-9277-90f183130a4b",
        "body" : "It's optional, and required by the **vmware_guest** module.",
        "createdAt" : "2017-09-19T08:45:15Z",
        "updatedAt" : "2017-09-30T04:36:36Z",
        "lastEditedBy" : "7268595c-1eb4-4b5f-9277-90f183130a4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "daa5e50aa4e11d1e40bf31828781df3aae1fd20f",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +666,670 @@\n    # Need Force\n    if not force and current_state not in ['poweredon', 'poweredoff']:\n        result['failed'] = True\n        result['msg'] = \"Virtual Machine is in %s power state. Force is required!\" % current_state"
  },
  {
    "id" : "a2906d8f-b84c-499c-963e-2e56305b7cb8",
    "prId" : 30505,
    "prUrl" : "https://github.com/ansible/ansible/pull/30505#pullrequestreview-69606738",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b3236d36-53f1-40b3-b8ad-298a94880542",
        "parentId" : null,
        "authorId" : "3dc6e01a-0c2d-4838-be16-17286a28d73f",
        "body" : "The expected_state variable only strips the underscore (_) character from the state variable, but the providable power states for vmware_guest_powerstate use hyphens (-), so the expected state will never match the current_state or any of the other conditionals.  \r\n\r\nUsing underscores for the state names (ex. powered_off) strikes me as being more consistent with the existing conventions than adding hyphens.",
        "createdAt" : "2017-10-16T15:48:35Z",
        "updatedAt" : "2017-10-16T15:52:37Z",
        "lastEditedBy" : "3dc6e01a-0c2d-4838-be16-17286a28d73f",
        "tags" : [
        ]
      }
    ],
    "commit" : "daa5e50aa4e11d1e40bf31828781df3aae1fd20f",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +658,662 @@    \"\"\"\n    facts = gather_vm_facts(content, vm)\n    expected_state = state.replace('_', '').lower()\n    current_state = facts['hw_power_status'].lower()\n    result = dict("
  },
  {
    "id" : "51166e1f-1cb9-4c7e-9912-d40d03162219",
    "prId" : 30505,
    "prUrl" : "https://github.com/ansible/ansible/pull/30505#pullrequestreview-72799817",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e6e26545-9761-4fc8-9c48-167efdfb7de1",
        "parentId" : null,
        "authorId" : "5c95ce24-8a36-4f10-b46c-b30203fba415",
        "body" : "Seems to me that poweredoff state is consistent with shutdown-guest state, and the result should be success and changed=false",
        "createdAt" : "2017-10-30T11:11:34Z",
        "updatedAt" : "2017-10-30T11:11:34Z",
        "lastEditedBy" : "5c95ce24-8a36-4f10-b46c-b30203fba415",
        "tags" : [
        ]
      }
    ],
    "commit" : "daa5e50aa4e11d1e40bf31828781df3aae1fd20f",
    "line" : 72,
    "diffHunk" : "@@ -1,1 +710,714 @@                else:\n                    result['failed'] = True\n                    result['msg'] = \"Virtual machine %s must be in poweredon state for guest shutdown/reboot\" % vm.name\n\n        except Exception as e:"
  },
  {
    "id" : "9d97539e-1a72-4ab8-843c-582f82574956",
    "prId" : 31632,
    "prUrl" : "https://github.com/ansible/ansible/pull/31632#pullrequestreview-69213930",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "862b84e8-4757-42a7-80a5-6cc080e05320",
        "parentId" : null,
        "authorId" : "96aeecbb-c275-402c-b904-a795c82efb48",
        "body" : "Can we use `compile_folder_path_for_object` function here ?",
        "createdAt" : "2017-10-12T16:34:07Z",
        "updatedAt" : "2017-11-19T14:25:07Z",
        "lastEditedBy" : "96aeecbb-c275-402c-b904-a795c82efb48",
        "tags" : [
        ]
      },
      {
        "id" : "8dbe1e3f-ca37-4ea0-b64b-48f4d2ec1f40",
        "parentId" : "862b84e8-4757-42a7-80a5-6cc080e05320",
        "authorId" : "4622098e-8fa1-4cce-a69e-aace201b9c82",
        "body" : "Apparently not.  It would appear that compile_folder_path_for_object gives a different result:\r\n            \"hw_folder\": \"/DC0/vm\", \r\n            \"hw_folderx\": \"/vm\", \r\n(folderx is the compile_fpfo return)  Perhaps that function should be changed, but I don't know all the places it's actually used, and that might cause pain elsewhere.\r\nI specifically want the full path including datacenter, so it can be directly used by other calls.",
        "createdAt" : "2017-10-13T12:42:45Z",
        "updatedAt" : "2017-11-19T14:25:07Z",
        "lastEditedBy" : "4622098e-8fa1-4cce-a69e-aace201b9c82",
        "tags" : [
        ]
      }
    ],
    "commit" : "279101a4ef6ccbb758b2c0c2ece290dc0fc7e304",
    "line" : 48,
    "diffHunk" : "@@ -1,1 +323,327 @@        pass\n\n    folder = vm.parent\n    if folder:\n        foldername = folder.name"
  },
  {
    "id" : "623ba8da-10f7-4058-8fa6-57f49deb4170",
    "prId" : 33525,
    "prUrl" : "https://github.com/ansible/ansible/pull/33525#pullrequestreview-87680891",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "39b45bfb-0987-41dc-9aa7-e983bb7591a5",
        "parentId" : null,
        "authorId" : "96aeecbb-c275-402c-b904-a795c82efb48",
        "body" : "Yes. I would like to keep user_folder unaltered.",
        "createdAt" : "2018-01-08T15:42:33Z",
        "updatedAt" : "2018-01-16T10:44:49Z",
        "lastEditedBy" : "96aeecbb-c275-402c-b904-a795c82efb48",
        "tags" : [
        ]
      },
      {
        "id" : "863c6015-57c9-4c9c-a635-9103181e3aa3",
        "parentId" : "39b45bfb-0987-41dc-9aa7-e983bb7591a5",
        "authorId" : "2cc098a3-7926-4651-8261-412e9ac59899",
        "body" : "Then:\r\n```\r\nuser_folder = self.params['folder']\r\nslashed_user_folder = user_folder\r\nif not slashed_user_folder.startswith('/'):\r\n    slashed_user_folder = '/' + slashed_user_folder\r\nif not slashed_user_folder.endswith('/'):\r\n    slashed_user_folder += '/'\r\n\r\n…\r\n\r\nfor vm in vms:\r\n    …\r\n    if slashed_user_folder in actual_vm_folder_path:\r\n        vm_obj = vm\r\n        break\r\n```\r\n\r\nMy point/remark/question wasn't about altering `user_folder` but about the `user_desired_path` computation and usage.\r\n\r\nThe important part is that I suggest to replace:\r\n```\r\nif user_desired_path in actual_vm_folder_path:\r\n```\r\nby:\r\n```\r\nif slashed_user_folder in actual_vm_folder_path:\r\n```\r\n\r\nAgain if you are sure about the user_desired_path computation, that's OK for me.",
        "createdAt" : "2018-01-08T18:20:05Z",
        "updatedAt" : "2018-01-16T10:44:49Z",
        "lastEditedBy" : "2cc098a3-7926-4651-8261-412e9ac59899",
        "tags" : [
        ]
      },
      {
        "id" : "a1477fe6-57f9-4784-bef6-9649c1b0471d",
        "parentId" : "39b45bfb-0987-41dc-9aa7-e983bb7591a5",
        "authorId" : "96aeecbb-c275-402c-b904-a795c82efb48",
        "body" : "I am sure about user_desired_path computation. So I think, I will keep it as it is.\r\n\r\nFor example, `user_folder` is '/DC0/vm' and `actual_vm_folder_path` for two VMs with same name is '/DC0/vm/finance' and '/DC0/vm/marketing' and user wants VM with '/DC0/vm/finance' path. So there are chances that user might end up in getting wrong VM if we just use `user_folder`. I think computation of user_desired_path might decrease this chance. \r\n\r\nLet me know if it make sense for you.",
        "createdAt" : "2018-01-09T04:51:24Z",
        "updatedAt" : "2018-01-16T10:44:49Z",
        "lastEditedBy" : "96aeecbb-c275-402c-b904-a795c82efb48",
        "tags" : [
        ]
      },
      {
        "id" : "2a9fe86e-cd22-498c-aa44-9dd65b235ace",
        "parentId" : "39b45bfb-0987-41dc-9aa7-e983bb7591a5",
        "authorId" : "96aeecbb-c275-402c-b904-a795c82efb48",
        "body" : "@jctanner What do you think on this situation ?",
        "createdAt" : "2018-01-09T04:51:58Z",
        "updatedAt" : "2018-01-16T10:44:49Z",
        "lastEditedBy" : "96aeecbb-c275-402c-b904-a795c82efb48",
        "tags" : [
        ]
      },
      {
        "id" : "fdc3e36e-0d51-460b-9b98-4889c9bb96c7",
        "parentId" : "39b45bfb-0987-41dc-9aa7-e983bb7591a5",
        "authorId" : "2cc098a3-7926-4651-8261-412e9ac59899",
        "body" : "> For example, user_folder is '/DC0/vm' and actual_vm_folder_path for two VMs with same name is '/DC0/vm/finance' and '/DC0/vm/marketing' and user wants VM with '/DC0/vm/finance' path. So there are chances that user might end up in getting wrong VM if we just use user_folder. I think computation of user_desired_path might decrease this chance.\r\n\r\nHow can you only get the VM in '/DC0/vm/finance' if `user_folder` is '/DC0/vm' ?\r\n\r\nIf `user_folder` is `/DC0/vm` we fall into the `user_folder.startswith(\"%s%s/vm\" % (dcpath, user_defined_dc))` condition and [user_desired_path = user_folder](https://github.com/ansible/ansible/pull/33525/files#diff-d5ca044435f1fc628995b038d2e238f7R949).\r\nSo you get both VM from '/DC0/vm/finance' and '/DC0/vm/marketing'.\r\n\r\n################\r\n\r\nIf you mean to write `/DC0/vm/finance`:\r\nIf `user_folder` is `/DC0/vm/finance`, we still fall into the `user_folder.startswith(\"%s%s/vm\" % (dcpath, user_defined_dc))` condition and [user_desired_path = user_folder](https://github.com/ansible/ansible/pull/33525/files#diff-d5ca044435f1fc628995b038d2e238f7R949). So using `user_desired_path` or `user_folder` is exactly the same…\r\n\r\nI don't get your example.",
        "createdAt" : "2018-01-09T22:34:04Z",
        "updatedAt" : "2018-01-16T10:44:49Z",
        "lastEditedBy" : "2cc098a3-7926-4651-8261-412e9ac59899",
        "tags" : [
        ]
      }
    ],
    "commit" : "691175bca0a8fe6194f314f59723ec6fb3c78af0",
    "line" : 143,
    "diffHunk" : "@@ -1,1 +952,956 @@                    if not actual_vm_folder_path.startswith(\"%s%s\" % (dcpath, user_defined_dc)):\n                        continue\n                    if user_desired_path in actual_vm_folder_path:\n                        vm_obj = vm\n                        break"
  },
  {
    "id" : "47a0a41b-54ba-4be1-90f4-d3b2ee369ab6",
    "prId" : 33525,
    "prUrl" : "https://github.com/ansible/ansible/pull/33525#pullrequestreview-89671409",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a4a41192-e48c-44e6-af0e-2837e8aabd9a",
        "parentId" : null,
        "authorId" : "2cc098a3-7926-4651-8261-412e9ac59899",
        "body" : "@Akasurde \r\n```\r\n+                if user_folder in [None, '', '/']:\r\n+                    # User provided blank value or\r\n+                    # User provided only root value, we fail\r\n+                    self.module.fail_json(msg=\"vmware_guest found multiple virtual machines with same \"\r\n+                                              \"name [%s], please specify folder path other than blank \"\r\n+                                              \"or '/'\" % self.params['name'])\r\n+                elif user_folder == '/vm' or user_folder.startswith('/vm/'):\r\n+                    # User provided VMware default vm folder with / or\r\n+                    # User provided nested folder under VMware default vm folder i.e. folder = /vm/india/finance\r\n+                    user_desired_path = \"%s%s%s\" % (dcpath, user_defined_dc, user_folder)\r\n+                elif user_folder == 'vm' or user_folder == '%s' % user_defined_dc:\r\n+                    # User provided VMware default vm folder\r\n+                    # User defined folder is datacenter i.e. folder = 'DC0'\r\n+                    user_desired_path = \"%s%s/vm\" % (dcpath, user_defined_dc)\r\n+                else:\r\n+                    # User defined datacenter is not nested i.e. dcpath = '/' , or\r\n+                    # User defined datacenter is nested i.e. dcpath = '/F0/DC0' or\r\n+                    # User provided folder starts with / and datacenter i.e. folder = /ha-datacenter/ or\r\n+                    # User defined folder starts with datacenter without '/' i.e.\r\n+                    # folder = DC0/vm/india/finance or\r\n+                    # folder = DC0/vm\r\n+                    user_desired_path = user_folder\r\n+\r\n+                for vm in vms:\r\n+                    # Check if user has provided same path as virtual machine\r\n+                    actual_vm_folder_path = self.get_vm_path(content=self.content, vm_name=vm)\r\n+                    if not actual_vm_folder_path.startswith(\"%s%s\" % (dcpath, user_defined_dc)):\r\n+                        continue\r\n+                    if user_desired_path in actual_vm_folder_path:\r\n+                        vm_obj = vm\r\n+                        break\r\n```\r\n\r\n\r\n * `if user_folder in [None, '', '/']` → fail\r\nOK, I am good with that.\r\n\r\n* `elif user_folder == '/vm' …` → `user_desired_path = \"%s%s%s\" % (dcpath, user_defined_dc, user_folder)`\r\n\r\nIf user_folder == '/vm', user_desired_path will be = to \"/dcpath/user_defined_dc/vm\". So if  `actual_vm_folder_path.startswith(\"%s%s\" % (dcpath, user_defined_dc))`, user_desired_path will always be in actual_vm_folder_path.\r\n\r\nThe case `user_folder == '/vm'` is useless since we get the same result with user_desired_path = user_folder.\r\n\r\n* `or user_folder.startswith('/vm/'):` → `user_desired_path = \"%s%s%s\" % (dcpath, user_defined_dc, user_folder)`\r\n\r\nIt bring a bit of precision (compared to user_desired_path = user_folder), so Ok for me\r\n\r\n* `elif user_folder == 'vm' …` → `user_desired_path = \"%s%s/vm\" % (dcpath, user_defined_dc)`\r\n\r\nSame as before, the case `user_folder == 'vm'` is useless since we get the same result with user_desired_path = user_folder.\r\n\r\n* `or user_folder == '%s' % user_defined_dc:` → `user_desired_path = \"%s%s/vm\" % (dcpath, user_defined_dc)`\r\n\r\nSide note: `user_folder == '%s' % user_defined_dc` should be written `user_folder == user_defined_dc`.\r\n\r\nSame as before, the case `user_folder == user_defined_dc` is useless since we get the same result with user_desired_path = user_folder.",
        "createdAt" : "2018-01-17T22:02:33Z",
        "updatedAt" : "2018-01-17T22:02:42Z",
        "lastEditedBy" : "2cc098a3-7926-4651-8261-412e9ac59899",
        "tags" : [
        ]
      },
      {
        "id" : "b1d3c4b8-f189-4f14-8437-f015b78c598e",
        "parentId" : "a4a41192-e48c-44e6-af0e-2837e8aabd9a",
        "authorId" : "96aeecbb-c275-402c-b904-a795c82efb48",
        "body" : "@tchernomax I updated patch as per your suggestion. Could you please take a look at new patch ? ",
        "createdAt" : "2018-01-18T04:41:38Z",
        "updatedAt" : "2018-01-18T04:41:38Z",
        "lastEditedBy" : "96aeecbb-c275-402c-b904-a795c82efb48",
        "tags" : [
        ]
      }
    ],
    "commit" : "691175bca0a8fe6194f314f59723ec6fb3c78af0",
    "line" : 143,
    "diffHunk" : "@@ -1,1 +952,956 @@                    if not actual_vm_folder_path.startswith(\"%s%s\" % (dcpath, user_defined_dc)):\n                        continue\n                    if user_desired_path in actual_vm_folder_path:\n                        vm_obj = vm\n                        break"
  },
  {
    "id" : "c26e8766-515a-476f-a554-36b61586a71b",
    "prId" : 35088,
    "prUrl" : "https://github.com/ansible/ansible/pull/35088#pullrequestreview-92067842",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "caa6b047-1caa-4e54-82b6-5f9c5d639cef",
        "parentId" : null,
        "authorId" : "7c444fb5-3f6f-4a08-83d5-454cb61d61f5",
        "body" : "Trying to understand... If the length of `temp_vm_object.propSet` is not exactly 1, you loop over `temp_vm_object.propSet`? Why not just use `temp_vm_object.propSet[0]`?",
        "createdAt" : "2018-01-21T14:35:51Z",
        "updatedAt" : "2018-01-29T04:01:37Z",
        "lastEditedBy" : "7c444fb5-3f6f-4a08-83d5-454cb61d61f5",
        "tags" : [
        ]
      },
      {
        "id" : "22cfa648-ccaf-451b-900f-e54832c8015e",
        "parentId" : "caa6b047-1caa-4e54-82b6-5f9c5d639cef",
        "authorId" : "96aeecbb-c275-402c-b904-a795c82efb48",
        "body" : "Yes. Let us say propSet does not content any property then this will be helpful. I encountered Index error with some VM in testing environment so preferred to keep this way.",
        "createdAt" : "2018-01-21T14:51:45Z",
        "updatedAt" : "2018-01-29T04:01:37Z",
        "lastEditedBy" : "96aeecbb-c275-402c-b904-a795c82efb48",
        "tags" : [
        ]
      },
      {
        "id" : "d050c74d-6446-41d4-9651-9d03e77fb389",
        "parentId" : "caa6b047-1caa-4e54-82b6-5f9c5d639cef",
        "authorId" : "7c444fb5-3f6f-4a08-83d5-454cb61d61f5",
        "body" : "ok",
        "createdAt" : "2018-01-21T16:07:40Z",
        "updatedAt" : "2018-01-29T04:01:37Z",
        "lastEditedBy" : "7c444fb5-3f6f-4a08-83d5-454cb61d61f5",
        "tags" : [
        ]
      },
      {
        "id" : "03605988-e052-42e6-9707-ffed829aa535",
        "parentId" : "caa6b047-1caa-4e54-82b6-5f9c5d639cef",
        "authorId" : "2cc098a3-7926-4651-8261-412e9ac59899",
        "body" : "@pdellaert in python you can't access [set](https://docs.python.org/3.6/library/stdtypes.html#set-types-set-frozenset) elements by index:\r\n```\r\n>>> a=set((1, 3, 2))\r\n>>> a\r\n{1, 2, 3}\r\n>>> a[0]\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\nTypeError: 'set' object does not support indexing\r\n```",
        "createdAt" : "2018-01-28T22:15:38Z",
        "updatedAt" : "2018-01-29T04:01:37Z",
        "lastEditedBy" : "2cc098a3-7926-4651-8261-412e9ac59899",
        "tags" : [
        ]
      }
    ],
    "commit" : "c32ab52c55e153fbfe1890f1ccb205d913a18115",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +1020,1024 @@                if len(temp_vm_object.propSet) != 1:\n                    continue\n                for temp_vm_object_property in temp_vm_object.propSet:\n                    if temp_vm_object_property.val == template_name:\n                        templates.append(temp_vm_object.obj)"
  },
  {
    "id" : "ba89ec59-589e-4b37-979d-0d5598731094",
    "prId" : 38958,
    "prUrl" : "https://github.com/ansible/ansible/pull/38958#pullrequestreview-113679199",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4904dc65-711c-42da-bd57-cdc3a30aa22e",
        "parentId" : null,
        "authorId" : "96aeecbb-c275-402c-b904-a795c82efb48",
        "body" : "How about -\r\n```\r\n        port_group_key = port_key = None\r\n        if (hasattr(entry, 'backing') and hasattr(entry.backing, 'port') and\r\n                hasattr(entry.backing.port, 'portKey') and hasattr(entry.backing.port, 'portgroupKey')):\r\n            port_group_key = entry.backing.port.portgroupKey\r\n            port_key = entry.backing.port.portKey\r\n```",
        "createdAt" : "2018-04-19T05:58:05Z",
        "updatedAt" : "2018-04-20T09:50:31Z",
        "lastEditedBy" : "96aeecbb-c275-402c-b904-a795c82efb48",
        "tags" : [
        ]
      },
      {
        "id" : "b76c0a05-be44-4a46-b4b2-d15fd220b76c",
        "parentId" : "4904dc65-711c-42da-bd57-cdc3a30aa22e",
        "authorId" : "69c3e9db-c77b-411a-a084-76e4baf9700f",
        "body" : "Logically the same. But I have two issues about that:\r\n1) I would rather not mutate the variables\r\n2) The code right above mine uses the same if-then-else pattern, so I tried keeping it consistent\r\n\r\nLet me know if you'd rather me change it, though.",
        "createdAt" : "2018-04-19T12:25:10Z",
        "updatedAt" : "2018-04-20T09:50:31Z",
        "lastEditedBy" : "69c3e9db-c77b-411a-a084-76e4baf9700f",
        "tags" : [
        ]
      },
      {
        "id" : "72420955-145a-4743-86ae-8e42f1db74d3",
        "parentId" : "4904dc65-711c-42da-bd57-cdc3a30aa22e",
        "authorId" : "7c444fb5-3f6f-4a08-83d5-454cb61d61f5",
        "body" : "I like @Akasurde's feedback, but will not push for it, it's a detail between code consistency and less code. @Akasurde has the final call :)",
        "createdAt" : "2018-04-19T13:07:00Z",
        "updatedAt" : "2018-04-20T09:50:31Z",
        "lastEditedBy" : "7c444fb5-3f6f-4a08-83d5-454cb61d61f5",
        "tags" : [
        ]
      },
      {
        "id" : "cb57582f-87b1-497d-9779-d54a620325bc",
        "parentId" : "4904dc65-711c-42da-bd57-cdc3a30aa22e",
        "authorId" : "96aeecbb-c275-402c-b904-a795c82efb48",
        "body" : "I am OK with else section as well. We can always improve above code as well.",
        "createdAt" : "2018-04-19T16:20:06Z",
        "updatedAt" : "2018-04-20T09:50:31Z",
        "lastEditedBy" : "96aeecbb-c275-402c-b904-a795c82efb48",
        "tags" : [
        ]
      }
    ],
    "commit" : "8e712ec4deb22d192a295a496d80bbcc1f3511d9",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +381,385 @@            mac_addr = mac_addr_dash = None\n\n        if (hasattr(entry, 'backing') and hasattr(entry.backing, 'port') and\n                hasattr(entry.backing.port, 'portKey') and hasattr(entry.backing.port, 'portgroupKey')):\n            port_group_key = entry.backing.port.portgroupKey"
  },
  {
    "id" : "6518ec81-3487-42d2-b1d3-79134de0709e",
    "prId" : 39596,
    "prUrl" : "https://github.com/ansible/ansible/pull/39596#pullrequestreview-120226669",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6b9b9531-7604-4e0b-b524-91696a0b3c95",
        "parentId" : null,
        "authorId" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "body" : "This is a bad API: you indicate failure/success by both raising exceptions and adding metadata via return value.\r\nIt's common in C or Go to use return status codes, but in Python it's just fine to raise exceptions for failures and then return ready-to-use values for successful outcome. It's pointless to always return static `True` additionally to useful payload.\r\n\r\nI suggest you to simplify this by wiping out this boolean part and returning just useful result, not a tuple.",
        "createdAt" : "2018-05-14T13:35:02Z",
        "updatedAt" : "2018-06-16T04:33:12Z",
        "lastEditedBy" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "tags" : [
        ]
      },
      {
        "id" : "a17d7009-3dd9-4e92-813d-df24580fbb93",
        "parentId" : "6b9b9531-7604-4e0b-b524-91696a0b3c95",
        "authorId" : "96aeecbb-c275-402c-b904-a795c82efb48",
        "body" : "I totally agree with your comments, but like I said earlier - this is a legacy function and used by lot of modules. I will need to go and change every module which uses it and test it again. Changing might have detrimental effects rather than doing something good. Let me know if your views on this.",
        "createdAt" : "2018-05-15T02:08:48Z",
        "updatedAt" : "2018-06-16T04:33:12Z",
        "lastEditedBy" : "96aeecbb-c275-402c-b904-a795c82efb48",
        "tags" : [
        ]
      },
      {
        "id" : "cefd1aab-0c1f-4511-bfa5-b539ffc960d4",
        "parentId" : "6b9b9531-7604-4e0b-b524-91696a0b3c95",
        "authorId" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "body" : "Okay, if it's used by lots of modules it should go to the other PR.",
        "createdAt" : "2018-05-15T13:16:48Z",
        "updatedAt" : "2018-06-16T04:33:12Z",
        "lastEditedBy" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "tags" : [
        ]
      }
    ],
    "commit" : "836aaeb194bde9a4fda38399e620c91fb7806236",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +50,54 @@            raise TaskError(\"Timeout\")\n        if task.info.state == vim.TaskInfo.State.success:\n            return True, task.info.result\n        if task.info.state == vim.TaskInfo.State.error:\n            error_msg = task.info.error"
  },
  {
    "id" : "2d99c25f-458f-4938-b7dc-b8a1ee97cee9",
    "prId" : 47446,
    "prUrl" : "https://github.com/ansible/ansible/pull/47446#pullrequestreview-185910095",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9f6b6995-4ab0-4a7f-8c2b-73e7b469765f",
        "parentId" : null,
        "authorId" : "96aeecbb-c275-402c-b904-a795c82efb48",
        "body" : "```\r\nresult = dict()\r\n```",
        "createdAt" : "2018-11-12T10:22:57Z",
        "updatedAt" : "2019-02-18T16:52:49Z",
        "lastEditedBy" : "96aeecbb-c275-402c-b904-a795c82efb48",
        "tags" : [
        ]
      },
      {
        "id" : "f84b4122-b07b-48b3-a8f3-f8b69a6ad1de",
        "parentId" : "9f6b6995-4ab0-4a7f-8c2b-73e7b469765f",
        "authorId" : "96aeecbb-c275-402c-b904-a795c82efb48",
        "body" : "@jeking3 Could you please address this ? ",
        "createdAt" : "2018-12-18T05:18:17Z",
        "updatedAt" : "2019-02-18T16:52:49Z",
        "lastEditedBy" : "96aeecbb-c275-402c-b904-a795c82efb48",
        "tags" : [
        ]
      }
    ],
    "commit" : "7c06fb2b99c7c636933b474ac8efab9b80331df4",
    "line" : 75,
    "diffHunk" : "@@ -1,1 +1291,1295 @@        Return:\n          dict\n        \"\"\"\n        result = dict()\n        if '.' not in remainder:"
  },
  {
    "id" : "3d9e1ff9-4881-48ac-b8c8-a201de089804",
    "prId" : 50589,
    "prUrl" : "https://github.com/ansible/ansible/pull/50589#pullrequestreview-189701058",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fc0c79cd-1d2e-42e5-b6e7-d71e1f3fe68c",
        "parentId" : null,
        "authorId" : "a8ab520a-9143-4406-bf7b-98113a352d1a",
        "body" : "Suggest moving into module_utils/vmware.py and providing a unit test.",
        "createdAt" : "2019-01-07T05:37:08Z",
        "updatedAt" : "2019-02-25T03:35:59Z",
        "lastEditedBy" : "a8ab520a-9143-4406-bf7b-98113a352d1a",
        "tags" : [
        ]
      },
      {
        "id" : "21a720a0-da75-420b-bdbb-5d2176e377ff",
        "parentId" : "fc0c79cd-1d2e-42e5-b6e7-d71e1f3fe68c",
        "authorId" : "a8ab520a-9143-4406-bf7b-98113a352d1a",
        "body" : "Moved.",
        "createdAt" : "2019-01-07T07:42:51Z",
        "updatedAt" : "2019-02-25T03:35:59Z",
        "lastEditedBy" : "a8ab520a-9143-4406-bf7b-98113a352d1a",
        "tags" : [
        ]
      }
    ],
    "commit" : "292dd969b3a8bca1d48bb1a684d2f1fc490b9b55",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +1103,1107 @@        return host_obj_list\n\n    def host_version_at_least(self, version=None, vm_obj=None, host_name=None):\n        \"\"\"\n        Check that the ESXi Host is at least a specific version number"
  },
  {
    "id" : "8518e5b4-f31c-4c2d-a603-7d29d217039e",
    "prId" : 50589,
    "prUrl" : "https://github.com/ansible/ansible/pull/50589#pullrequestreview-194608517",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b67a11a1-5417-4cef-bf13-a31b684edcca",
        "parentId" : null,
        "authorId" : "9515e19b-5afc-4789-9b82-c98d3d9d9134",
        "body" : "```suggestion\r\n            self.module.fail_json(msg='One of vm_obj or host_name must be set when calling host_version_at_least.')\r\n```",
        "createdAt" : "2019-01-21T13:51:19Z",
        "updatedAt" : "2019-02-25T03:35:59Z",
        "lastEditedBy" : "9515e19b-5afc-4789-9b82-c98d3d9d9134",
        "tags" : [
        ]
      }
    ],
    "commit" : "292dd969b3a8bca1d48bb1a684d2f1fc490b9b55",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +1117,1121 @@            host_system = self.find_hostsystem_by_name(host_name=host_name)\n        else:\n            self.module.fail_json(msg='VM object or ESXi host name must be set one.')\n        if host_system and version:\n            host_version = host_system.summary.config.product.version"
  },
  {
    "id" : "ba861896-15a4-4c4c-a72d-ae3eebf5aa5a",
    "prId" : 55237,
    "prUrl" : "https://github.com/ansible/ansible/pull/55237#pullrequestreview-239152007",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "aaf74e4d-d124-42b6-a9fe-fef43bf209ae",
        "parentId" : null,
        "authorId" : "96aeecbb-c275-402c-b904-a795c82efb48",
        "body" : "Can we use [`get_vm_path`](https://github.com/ansible/ansible/blob/7191d4588563107a19def557dc4b439e01c80fda/lib/ansible/module_utils/vmware.py#L973) ? ",
        "createdAt" : "2019-04-14T16:33:23Z",
        "updatedAt" : "2019-05-21T14:52:15Z",
        "lastEditedBy" : "96aeecbb-c275-402c-b904-a795c82efb48",
        "tags" : [
        ]
      },
      {
        "id" : "df0d2bcb-28d0-42ff-a3e6-53e4d329ab80",
        "parentId" : "aaf74e4d-d124-42b6-a9fe-fef43bf209ae",
        "authorId" : "0fd34a17-8cd9-4bb2-803c-da934539c7f5",
        "body" : "Yes probably indeed.",
        "createdAt" : "2019-04-15T13:42:35Z",
        "updatedAt" : "2019-05-21T14:52:15Z",
        "lastEditedBy" : "0fd34a17-8cd9-4bb2-803c-da934539c7f5",
        "tags" : [
        ]
      },
      {
        "id" : "117c4802-2eb2-46bb-b64d-2e8730940857",
        "parentId" : "aaf74e4d-d124-42b6-a9fe-fef43bf209ae",
        "authorId" : "0fd34a17-8cd9-4bb2-803c-da934539c7f5",
        "body" : "Well, no. It's two different things.",
        "createdAt" : "2019-05-17T22:02:55Z",
        "updatedAt" : "2019-05-21T14:52:15Z",
        "lastEditedBy" : "0fd34a17-8cd9-4bb2-803c-da934539c7f5",
        "tags" : [
        ]
      }
    ],
    "commit" : "25c6b47c44652d73b40366b6d4fb5ee87497dead",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +1384,1388 @@        return result\n\n    def get_folder_path(self, cur):\n        full_path = '/' + cur.name\n        while hasattr(cur, 'parent') and cur.parent:"
  },
  {
    "id" : "e7d8d954-4293-4c19-8974-36b710a75838",
    "prId" : 56263,
    "prUrl" : "https://github.com/ansible/ansible/pull/56263#pullrequestreview-245331697",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c8a082be-b366-4921-87d3-50b6800ad493",
        "parentId" : null,
        "authorId" : "c9a04bdd-c38b-40d6-b9b2-c6523afdcced",
        "body" : "I am not sure about option for return_si. But I believe that Service Instance is the object to perform any action on ManagedObjects. If it is required to provide this option then I think it should be True by default. \r\n",
        "createdAt" : "2019-06-04T08:45:47Z",
        "updatedAt" : "2019-06-04T12:58:04Z",
        "lastEditedBy" : "c9a04bdd-c38b-40d6-b9b2-c6523afdcced",
        "tags" : [
        ]
      },
      {
        "id" : "4a0e829c-4ce4-4e9c-bada-f1a2f2ae7d64",
        "parentId" : "c8a082be-b366-4921-87d3-50b6800ad493",
        "authorId" : "96aeecbb-c275-402c-b904-a795c82efb48",
        "body" : "This API exposed in module_utils and which is used by Ansible and customers who are using it in their custom modules. In order maintain backward compatibility we are setting `return_si` as `False`. So it won't affect them in any way unless they set it to True from API call.\r\n",
        "createdAt" : "2019-06-04T09:30:44Z",
        "updatedAt" : "2019-06-04T12:58:04Z",
        "lastEditedBy" : "96aeecbb-c275-402c-b904-a795c82efb48",
        "tags" : [
        ]
      }
    ],
    "commit" : "5515a57afdcb3a709f867b94351a0d75089f4db8",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +491,495 @@\n\ndef connect_to_api(module, disconnect_atexit=True, return_si=False):\n    hostname = module.params['hostname']\n    username = module.params['username']"
  },
  {
    "id" : "46d866ee-b3d1-4ce1-9859-6ad1ae02c67e",
    "prId" : 56263,
    "prUrl" : "https://github.com/ansible/ansible/pull/56263#pullrequestreview-245331940",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5f9c408d-adbc-48e5-b77f-14e82b2e64e9",
        "parentId" : null,
        "authorId" : "c9a04bdd-c38b-40d6-b9b2-c6523afdcced",
        "body" : "I believe Service instance is right object to return after Connection to API Endpoint. Content can always be retrieved at module level.  ",
        "createdAt" : "2019-06-04T08:51:39Z",
        "updatedAt" : "2019-06-04T12:58:04Z",
        "lastEditedBy" : "c9a04bdd-c38b-40d6-b9b2-c6523afdcced",
        "tags" : [
        ]
      },
      {
        "id" : "14c84fa8-b3c4-4cb7-85a2-1bc5c6032b98",
        "parentId" : "5f9c408d-adbc-48e5-b77f-14e82b2e64e9",
        "authorId" : "96aeecbb-c275-402c-b904-a795c82efb48",
        "body" : "Like I said backward compatibility is maintained here.",
        "createdAt" : "2019-06-04T09:31:14Z",
        "updatedAt" : "2019-06-04T12:58:04Z",
        "lastEditedBy" : "96aeecbb-c275-402c-b904-a795c82efb48",
        "tags" : [
        ]
      }
    ],
    "commit" : "5515a57afdcb3a709f867b94351a0d75089f4db8",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +558,562 @@    if return_si:\n        return service_instance, service_instance.RetrieveContent()\n    return service_instance.RetrieveContent()\n\n"
  },
  {
    "id" : "ae90da3f-5822-4bd7-81a2-d5287b3c40fc",
    "prId" : 66156,
    "prUrl" : "https://github.com/ansible/ansible/pull/66156#pullrequestreview-337637460",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7a6b6020-c8c3-48b9-ad36-e16ee7d42f94",
        "parentId" : null,
        "authorId" : "96aeecbb-c275-402c-b904-a795c82efb48",
        "body" : "Can you move this method to `PyVmomi`?",
        "createdAt" : "2020-01-02T12:25:44Z",
        "updatedAt" : "2020-01-17T03:43:48Z",
        "lastEditedBy" : "96aeecbb-c275-402c-b904-a795c82efb48",
        "tags" : [
        ]
      }
    ],
    "commit" : "bf26fedf0135a7b12b251b50f04ec7bb76b7e8f6",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +171,175 @@\n\ndef find_folder_by_name(content, folder_name):\n    return find_object_by_name(content, folder_name, [vim.Folder])\n"
  }
]