[
  {
    "id" : "15594cee-c1dd-4967-b1bc-a9277ebecbf9",
    "prId" : 34132,
    "prUrl" : "https://github.com/ansible/ansible/pull/34132#pullrequestreview-91756340",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6bc79402-f1d1-4ed5-bdb2-aa96f846e80c",
        "parentId" : null,
        "authorId" : "feee35ce-ece6-4d76-97f1-8d0105412f07",
        "body" : "@Akasurde @alikins here is a ```return virtual_facts``` missing.\r\nOtherwise the facts are reset later to 'NA' later!",
        "createdAt" : "2018-01-26T06:55:54Z",
        "updatedAt" : "2018-01-26T07:02:08Z",
        "lastEditedBy" : "feee35ce-ece6-4d76-97f1-8d0105412f07",
        "tags" : [
        ]
      }
    ],
    "commit" : "ae801aaf5bfd1da34577a7c081f5f2eb7e644b9d",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +230,234 @@            if vendor_name in ['VMware Virtual Platform', 'VMware7,1']:\n                virtual_facts['virtualization_type'] = 'VMware'\n                virtual_facts['virtualization_role'] = 'guest'\n\n        # If none of the above matches, return 'NA' for virtualization_type"
  },
  {
    "id" : "b44b3397-ea56-4a0f-8bf0-99b481344f76",
    "prId" : 34925,
    "prUrl" : "https://github.com/ansible/ansible/pull/34925#pullrequestreview-118919410",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bd84d168-300b-4cd8-82ed-1aa9ae2e101a",
        "parentId" : null,
        "authorId" : "fa0144fc-7424-474a-9ab5-059de28814b7",
        "body" : "Patch looks good as is. So :shipit: for me.\r\n\r\nBut was thinking it might be a good time to move this to a helper method, since then it could return early and lose a few indention levels if you wanted to.\r\n\r\n``` python\r\n\r\ndef _collect_dmi(self):\r\n    dmi_virt_facts = {}\r\n\r\n    dmi_bin = self.module.get_bin_path('dmidecode')\r\n    \r\n    if not dmi_bin:\r\n        return dmi_virt_facts\r\n    \r\n    (rc, out, err) = self.module.run_command('%s -s system-product-name' % dmi_bin)\r\n    \r\n    if rc != 0:\r\n        return dmi_virt_facts\r\n\r\n    # I might split this into two methods, one for finding and running dmi, and another for parsing it.\r\n    # and passing in the dmidecode output to the parsing method\r\n    # that would make the parsing code easy to test\r\n    vendor_name = ''.join([line.strip() for line in out.splitlines() if not line.startswith('#')])\r\n    \r\n    if vendor_name in ['VMware Virtual Platform', 'VMware7,1']:\r\n        dmi_virt_facts['virtualization_type'] = 'VMware'\r\n        dmi_virt_facts['virtualization_role'] = 'guest'\r\n\r\n    return dmi_virt_facts\r\n\r\n```\r\n\r\nwith\r\n``` python\r\n\r\ndmi_virt_facts = self._collect_dmi()\r\nvirtual_facts.update(dmi_virt_facts)\r\n\r\n```\r\n\r\nor if split into two\r\n\r\n``` python\r\n\r\ndmi_bin_output = self._run_dmidecode()\r\ndmi_virt_facts = self._collect_dmi(dmi_bin_output)\r\nvirtual_facts.update(dmi_virt_facts)",
        "createdAt" : "2018-01-16T16:36:30Z",
        "updatedAt" : "2018-01-22T01:06:37Z",
        "lastEditedBy" : "fa0144fc-7424-474a-9ab5-059de28814b7",
        "tags" : [
        ]
      },
      {
        "id" : "ff9d1698-df5a-4719-b163-1e56b669a610",
        "parentId" : "bd84d168-300b-4cd8-82ed-1aa9ae2e101a",
        "authorId" : "96aeecbb-c275-402c-b904-a795c82efb48",
        "body" : "I have one more suggestion, it would be good to replace\r\n\r\n```\r\nif vendor_name in ['VMware Virtual Platform', 'VMware7,1']:\r\n```\r\n\r\nwith \r\n\r\n```\r\nif vendor_name.startwith('VMware'):\r\n```\r\n\r\nI am not sure about `VMware 7,1` uniqueness on other ESXi version. (I missed this in last commit)",
        "createdAt" : "2018-01-16T16:53:50Z",
        "updatedAt" : "2018-01-22T01:06:37Z",
        "lastEditedBy" : "96aeecbb-c275-402c-b904-a795c82efb48",
        "tags" : [
        ]
      },
      {
        "id" : "6444e89f-37fe-49ba-a6bb-a8fbb85cf40b",
        "parentId" : "bd84d168-300b-4cd8-82ed-1aa9ae2e101a",
        "authorId" : "ad25e713-c244-4a27-8df9-08334e22a5f9",
        "body" : "@alikins IMHO that would only make sense if all the collections would follow the same logic in separate functions \r\n@Akasurde I agree and have updated the patch",
        "createdAt" : "2018-01-20T22:21:29Z",
        "updatedAt" : "2018-01-22T01:06:37Z",
        "lastEditedBy" : "ad25e713-c244-4a27-8df9-08334e22a5f9",
        "tags" : [
        ]
      },
      {
        "id" : "3a906a5e-a0b7-4b37-8e34-6cdadaae9e97",
        "parentId" : "bd84d168-300b-4cd8-82ed-1aa9ae2e101a",
        "authorId" : "8bf05bc8-b303-4660-87dd-7386c9e00648",
        "body" : "This introduced a regression, it's called start**s**with in Python.\r\nAlso this doesn't (and didn't) return early like all the other branches, so the VMware result would always be overwritten by NAs (see https://github.com/ansible/ansible/pull/34132#pullrequestreview-91756340).",
        "createdAt" : "2018-05-09T21:57:52Z",
        "updatedAt" : "2018-05-09T21:57:53Z",
        "lastEditedBy" : "8bf05bc8-b303-4660-87dd-7386c9e00648",
        "tags" : [
        ]
      }
    ],
    "commit" : "325088ad5f658d6162c2bd66b3017a1744680325",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +224,228 @@        # dmidecode is the safest option to parse virtualization related values\n        dmi_bin = self.module.get_bin_path('dmidecode')\n        # We still want to continue even if dmidecode is not available\n        if dmi_bin is not None:\n            (rc, out, err) = self.module.run_command('%s -s system-product-name' % dmi_bin)"
  },
  {
    "id" : "49826158-ea33-4eed-ad13-075aa33cd711",
    "prId" : 72876,
    "prUrl" : "https://github.com/ansible/ansible/pull/72876#pullrequestreview-610662227",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ce7a7f5b-f160-42cf-976e-8695d4551b4e",
        "parentId" : null,
        "authorId" : "deb3706a-5fcf-4fe1-8b76-9e045c5717f3",
        "body" : "we can also consider checking if ovirt-guest-agent runs (as we check vdsmd on the host) to cover VMs that started on RHV 4.3 and keep running on 4.3 cluster in RHV 4.4",
        "createdAt" : "2021-03-03T19:49:20Z",
        "updatedAt" : "2021-03-15T08:59:40Z",
        "lastEditedBy" : "deb3706a-5fcf-4fe1-8b76-9e045c5717f3",
        "tags" : [
        ]
      },
      {
        "id" : "740ce567-f323-43fc-85a4-24788540c3bd",
        "parentId" : "ce7a7f5b-f160-42cf-976e-8695d4551b4e",
        "authorId" : "39e19612-a50d-4ce3-a01a-8aa991815160",
        "body" : "I would avoid agent checks...if we can figuer out everything based on static immutable smbios data then let's do it that way. it's really not that complicated, the differences between versions are finite (sometimes it's also just a bug on ovirt side - like https://bugzilla.redhat.com/show_bug.cgi?id=1931786)",
        "createdAt" : "2021-03-04T07:00:08Z",
        "updatedAt" : "2021-03-15T08:59:40Z",
        "lastEditedBy" : "39e19612-a50d-4ce3-a01a-8aa991815160",
        "tags" : [
        ]
      },
      {
        "id" : "575543f8-62af-49f3-81b6-1a6eda8794b2",
        "parentId" : "ce7a7f5b-f160-42cf-976e-8695d4551b4e",
        "authorId" : "39e19612-a50d-4ce3-a01a-8aa991815160",
        "body" : "though, right, the only case where smbios data is not good enough is 4.3 rhel host where it looks exactly the same as on plain virt (martin's table for rhv 4.4 cluster level 4.3)\r\nI guess I would rather leave it be and identify as KVM and consider it a \"bug\" fixed in later CL",
        "createdAt" : "2021-03-04T07:09:48Z",
        "updatedAt" : "2021-03-15T08:59:40Z",
        "lastEditedBy" : "39e19612-a50d-4ce3-a01a-8aa991815160",
        "tags" : [
        ]
      },
      {
        "id" : "908211bc-5ed2-481e-9e52-f4ef70892e1c",
        "parentId" : "ce7a7f5b-f160-42cf-976e-8695d4551b4e",
        "authorId" : "deb3706a-5fcf-4fe1-8b76-9e045c5717f3",
        "body" : "I don't mind much but if it's not too complicated then I would check for ovirt-guest-agent in a lazy way, meaning that we first check for product family (assuming we'll set it to all VMs that are started by RHVM 4.4) and if it's not set, check if ovirt-guest-agent is installed to cover everything. if it's complicated to do then yeah, I'd skip the last part",
        "createdAt" : "2021-03-04T08:28:43Z",
        "updatedAt" : "2021-03-15T08:59:40Z",
        "lastEditedBy" : "deb3706a-5fcf-4fe1-8b76-9e045c5717f3",
        "tags" : [
        ]
      },
      {
        "id" : "37f84bb0-cb42-400a-921f-23fb6199a0b2",
        "parentId" : "ce7a7f5b-f160-42cf-976e-8695d4551b4e",
        "authorId" : "d25b3376-e4ee-4cd6-a3a6-5f8ef834e818",
        "body" : "Can't do a change in RHV Manager 4.4, which would set proper product family to RHV regardess of cluster version? Meaning that even 4.2 VMs would have product family set correctly. As RHV Manager 4.2/4.3 are already out of support, I'd not care that 4.2 VM spawned by 4.2 RHVM has different product family than spawned by 4.4 RHVM",
        "createdAt" : "2021-03-08T10:08:27Z",
        "updatedAt" : "2021-03-15T08:59:40Z",
        "lastEditedBy" : "d25b3376-e4ee-4cd6-a3a6-5f8ef834e818",
        "tags" : [
        ]
      },
      {
        "id" : "84f377ec-cc11-4043-9def-ddc90f8d315e",
        "parentId" : "ce7a7f5b-f160-42cf-976e-8695d4551b4e",
        "authorId" : "39e19612-a50d-4ce3-a01a-8aa991815160",
        "body" : "it's not out of support, it's out of development, but it's still perfectly usable. I'd really want to avoid change of guest ABI in existing versions. That virtio socket check is trivial, just a file existence...",
        "createdAt" : "2021-03-08T10:35:57Z",
        "updatedAt" : "2021-03-15T08:59:40Z",
        "lastEditedBy" : "39e19612-a50d-4ce3-a01a-8aa991815160",
        "tags" : [
        ]
      },
      {
        "id" : "d80ba65d-484a-4506-92a8-66194085c375",
        "parentId" : "ce7a7f5b-f160-42cf-976e-8695d4551b4e",
        "authorId" : "a2fd4b20-4924-46d7-9cc9-637fc7599c3c",
        "body" : "What file would we need to check?",
        "createdAt" : "2021-03-08T12:25:13Z",
        "updatedAt" : "2021-03-15T08:59:40Z",
        "lastEditedBy" : "a2fd4b20-4924-46d7-9cc9-637fc7599c3c",
        "tags" : [
        ]
      },
      {
        "id" : "2cf3debe-2107-4db4-9474-a18fe8a12654",
        "parentId" : "ce7a7f5b-f160-42cf-976e-8695d4551b4e",
        "authorId" : "39e19612-a50d-4ce3-a01a-8aa991815160",
        "body" : "/dev/virtio-ports/ovirt-guest-agent.0 would be for OGA but we dropped it in el8/ubuntu18 in RHV 4.3 already I think.\r\n/org.qemu.guest_agent.0 we add always...but @nyoxi are we the only ones using it with this name?\r\nthere's also /com.redhat.spice.0 but only when SPICE is defined, that is still a default.",
        "createdAt" : "2021-03-08T13:48:19Z",
        "updatedAt" : "2021-03-15T08:59:40Z",
        "lastEditedBy" : "39e19612-a50d-4ce3-a01a-8aa991815160",
        "tags" : [
        ]
      },
      {
        "id" : "992b71ff-ac5f-4abf-9798-54c6797fa092",
        "parentId" : "ce7a7f5b-f160-42cf-976e-8695d4551b4e",
        "authorId" : "deb3706a-5fcf-4fe1-8b76-9e045c5717f3",
        "body" : "Martin, to your question, there are really two approaches here:\r\n1. the conservative approach that says VMs on 4.3 cluster-level with RHVM 4.4 should be exactly as if they were initiated by RHVM 4.3. this means those VMs should still be set with product-family = RHEL.\r\n2. the progressive approach that considers exceptions to this rule when they make sense. for example, we removed the OGA channel also for RHEL 8 guests also on 4.3 cluster-level with RHVM 4.4. in theory it broke the ABI but no one really cares..\r\n\r\nI tend to think we can go with the progressive approach here (because otherwise it would have raised complains by customers that upgraded 4.3 clusters to 4.4 cluster-level) - and then checking product-family covers all VMs that are started by RHVM 4.4 (regardless of their cluster level) and the check for OGA channel (which was dropped in 4.4.2 btw - https://bugzilla.redhat.com/show_bug.cgi?id=1845591) covers most of the VMs that were started by RHVM < 4.4.\r\n\r\nbut we didn't reach an agreement on the ability to take the progressive approach here. the only winning argument I can see for this is showing that changing the product family has no real impact (like dropping OGA channel on RHEL 8 guest in 4.3 cluster level) but unfortunately I can't prove that.\r\nso I guess we can fall back to the conservative approach which leaves us with the identification problem for VMs on 4.3 cluster-level and keep exploring options like Michal suggested in his last comment.",
        "createdAt" : "2021-03-08T20:46:30Z",
        "updatedAt" : "2021-03-15T08:59:41Z",
        "lastEditedBy" : "deb3706a-5fcf-4fe1-8b76-9e045c5717f3",
        "tags" : [
        ]
      },
      {
        "id" : "1d42d94f-0ec4-4ad5-b4b2-abb64adb1839",
        "parentId" : "ce7a7f5b-f160-42cf-976e-8695d4551b4e",
        "authorId" : "e828dadf-4946-4e7c-ac9e-3f40f42b5093",
        "body" : "> /dev/virtio-ports/ovirt-guest-agent.0 would be for OGA but we dropped it in el8/ubuntu18 in RHV 4.3 already I think.\r\n\r\nFrom what I have found it seems that the channel name was:\r\n\r\n* before CL 4.2 -- named `com.redhat.rhevm.vdsm`\r\n* in cluster level 4.2 -- renamed to `ovirt-guest-agent.0`\r\n* oVirt 4.4.2 -- removed completely from EL8 and CoreOS VMs (for all cluster levels)\r\n\r\n> /org.qemu.guest_agent.0 we add always...but @nyoxi are we the only ones using it with this name?\r\nthere's also /com.redhat.spice.0 but only when SPICE is defined, that is still a default.\r\n\r\nThe names for spice and qemu-ga channels are de-facto standards. It is not specific to oVirt.",
        "createdAt" : "2021-03-11T16:32:07Z",
        "updatedAt" : "2021-03-15T08:59:41Z",
        "lastEditedBy" : "e828dadf-4946-4e7c-ac9e-3f40f42b5093",
        "tags" : [
        ]
      },
      {
        "id" : "24867566-a0b7-455b-b5e6-90360fd8ce64",
        "parentId" : "ce7a7f5b-f160-42cf-976e-8695d4551b4e",
        "authorId" : "39e19612-a50d-4ce3-a01a-8aa991815160",
        "body" : "yeah, so with that i would conclude that we have no good way on 4.2/4.3 and leave it broken on RHEL (and it does work on 4.2/4.3 RHVH at least)\r\nAnd finally merge this, it's worse that we keep it broken entirely on a current version for 3 months now:)",
        "createdAt" : "2021-03-12T10:47:07Z",
        "updatedAt" : "2021-03-15T08:59:41Z",
        "lastEditedBy" : "39e19612-a50d-4ce3-a01a-8aa991815160",
        "tags" : [
        ]
      }
    ],
    "commit" : "ecffc5a73f74ad92baeeea087ab3b8bcefd93290",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +160,164 @@                if not found_virt:\n                    virtual_facts['virtualization_type'] = 'RHV'\n                    found_virt = True\n            elif product_family == 'RHEV Hypervisor':\n                guest_tech.add('RHEV')"
  }
]