[
  {
    "id" : "68a6080e-84f4-4536-bd01-0e67c29728d9",
    "prId" : 72070,
    "prUrl" : "https://github.com/ansible/ansible/pull/72070#pullrequestreview-501493723",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9c4152e6-a8d5-400a-ba3a-fbd9da1dd3e2",
        "parentId" : null,
        "authorId" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "body" : "i was going to make this a loop in which try/except would prevent issues with the underlying functions erroring out\r\n```\r\ntry:\r\n    hardware_facts.update(getattr(self, func)()) \r\n...\r\n```",
        "createdAt" : "2020-10-02T21:57:52Z",
        "updatedAt" : "2020-10-02T21:57:53Z",
        "lastEditedBy" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "tags" : [
        ]
      },
      {
        "id" : "570edc97-0ef6-4f88-95fc-773523b8f517",
        "parentId" : "9c4152e6-a8d5-400a-ba3a-fbd9da1dd3e2",
        "authorId" : "442212cb-3c29-4a71-98b5-cbd0b20c8c17",
        "body" : "Yeah, I think we should do something like this for all the hardware facts collectors. I'll write that in a separate PR.",
        "createdAt" : "2020-10-02T23:27:02Z",
        "updatedAt" : "2020-10-02T23:27:02Z",
        "lastEditedBy" : "442212cb-3c29-4a71-98b5-cbd0b20c8c17",
        "tags" : [
        ]
      }
    ],
    "commit" : "1a596848dcd1375625935fb69dd210f3c3aad532",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +50,54 @@        self.sysctl = get_sysctl(self.module, ['hw'])\n\n        hardware_facts.update(self.get_processor_facts())\n        hardware_facts.update(self.get_memory_facts())\n        hardware_facts.update(self.get_device_facts())"
  },
  {
    "id" : "bb275bf1-3c0b-418f-bad5-43b1ff539683",
    "prId" : 72070,
    "prUrl" : "https://github.com/ansible/ansible/pull/72070#pullrequestreview-501491998",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "48cf6de6-c541-4cf2-8418-7e67d7901e85",
        "parentId" : null,
        "authorId" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "body" : "why not modify the generic sysctl function to allow for args?",
        "createdAt" : "2020-10-02T21:58:31Z",
        "updatedAt" : "2020-10-02T21:58:31Z",
        "lastEditedBy" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "tags" : [
        ]
      },
      {
        "id" : "6b780094-d17c-47af-b5b7-a20b848e7c49",
        "parentId" : "48cf6de6-c541-4cf2-8418-7e67d7901e85",
        "authorId" : "442212cb-3c29-4a71-98b5-cbd0b20c8c17",
        "body" : "Because in this case it would fail to parse. Using `-n` like we need here just gives an int back, not a `k=v` pair, so we'd fail to split on `=`.\r\n\r\nSo we can make `get_sysctl()` take an optional `raw=True` that returns the raw result...but then it has a different return type depending on args which feels like bad design.",
        "createdAt" : "2020-10-02T23:18:50Z",
        "updatedAt" : "2020-10-02T23:18:50Z",
        "lastEditedBy" : "442212cb-3c29-4a71-98b5-cbd0b20c8c17",
        "tags" : [
        ]
      }
    ],
    "commit" : "1a596848dcd1375625935fb69dd210f3c3aad532",
    "line" : 52,
    "diffHunk" : "@@ -1,1 +114,118 @@    def get_uptime_facts(self):\n        # On openbsd, we need to call it with -n to get this value as an int.\n        sysctl_cmd = self.module.get_bin_path('sysctl')\n        cmd = [sysctl_cmd, '-n', 'kern.boottime']\n"
  },
  {
    "id" : "87824bf6-ab23-4287-b275-c157107dfd9e",
    "prId" : 72070,
    "prUrl" : "https://github.com/ansible/ansible/pull/72070#pullrequestreview-501495165",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1c9308b3-7829-4d00-9d7f-18fa8c597013",
        "parentId" : null,
        "authorId" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "body" : "not dealing with os/ioerrors possible on execution",
        "createdAt" : "2020-10-02T21:58:58Z",
        "updatedAt" : "2020-10-02T21:58:58Z",
        "lastEditedBy" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "tags" : [
        ]
      },
      {
        "id" : "319122c0-e51e-43b4-882c-0bb70225edda",
        "parentId" : "1c9308b3-7829-4d00-9d7f-18fa8c597013",
        "authorId" : "442212cb-3c29-4a71-98b5-cbd0b20c8c17",
        "body" : "(As discussed in chat - `run_command()` already catches those, and isn't wrapped in try/except at most other callsites.)",
        "createdAt" : "2020-10-02T23:33:53Z",
        "updatedAt" : "2020-10-02T23:33:59Z",
        "lastEditedBy" : "442212cb-3c29-4a71-98b5-cbd0b20c8c17",
        "tags" : [
        ]
      }
    ],
    "commit" : "1a596848dcd1375625935fb69dd210f3c3aad532",
    "line" : 55,
    "diffHunk" : "@@ -1,1 +117,121 @@        cmd = [sysctl_cmd, '-n', 'kern.boottime']\n\n        rc, out, err = self.module.run_command(cmd)\n\n        if rc != 0:"
  }
]