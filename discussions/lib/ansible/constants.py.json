[
  {
    "id" : "b55b615f-8e25-4ee4-a73a-73f662bcef84",
    "prId" : 10411,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a6b4e557-7fe9-4106-8b89-6c4142f556f0",
        "parentId" : null,
        "authorId" : "c9b2af00-2c8d-4a67-9cb5-7cbedac7e233",
        "body" : "Shouldn't it be removed ? ( DEFAULT_SUDO_PASS )\n",
        "createdAt" : "2015-03-08T00:42:11Z",
        "updatedAt" : "2015-03-10T22:40:24Z",
        "lastEditedBy" : "c9b2af00-2c8d-4a67-9cb5-7cbedac7e233",
        "tags" : [
        ]
      },
      {
        "id" : "6e37abd8-f833-4d8b-8ad1-dd05541a71b2",
        "parentId" : "a6b4e557-7fe9-4106-8b89-6c4142f556f0",
        "authorId" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "body" : "actually both should\n",
        "createdAt" : "2015-03-08T03:37:22Z",
        "updatedAt" : "2015-03-10T22:40:24Z",
        "lastEditedBy" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "tags" : [
        ]
      }
    ],
    "commit" : "5f6db0e16477749c1bccf472150132ca06c50b3b",
    "line" : 61,
    "diffHunk" : "@@ -1,1 +199,203 @@# non-configurable things\nDEFAULT_BECOME_PASS       = None\nDEFAULT_SUDO_PASS         = None\nDEFAULT_REMOTE_PASS       = None\nDEFAULT_SUBSET            = None"
  },
  {
    "id" : "42261649-2098-4ba9-bfac-2d58379be766",
    "prId" : 21510,
    "prUrl" : "https://github.com/ansible/ansible/pull/21510#pullrequestreview-137173317",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "626ff87e-3985-406f-968d-f1b5e6db2e15",
        "parentId" : null,
        "authorId" : "5c95ce24-8a36-4f10-b46c-b30203fba415",
        "body" : "Every BECOME_METHOD except runas has a BECOME_ERROR_STRINGS and BECOME_MISSING_STRINGS.  Is it expected to exist for 'runas', too?",
        "createdAt" : "2018-07-13T19:43:51Z",
        "updatedAt" : "2018-07-13T19:43:52Z",
        "lastEditedBy" : "5c95ce24-8a36-4f10-b46c-b30203fba415",
        "tags" : [
        ]
      },
      {
        "id" : "1c14dc8c-4dda-43d5-9610-f13b66d9dfbb",
        "parentId" : "626ff87e-3985-406f-968d-f1b5e6db2e15",
        "authorId" : "7c547162-2334-4e33-a627-e146840da9ec",
        "body" : "Yes, runas is different from most of the other become methods. If you are having an issue with it, please raise a GH issue with the details.",
        "createdAt" : "2018-07-13T20:07:53Z",
        "updatedAt" : "2018-07-13T20:07:53Z",
        "lastEditedBy" : "7c547162-2334-4e33-a627-e146840da9ec",
        "tags" : [
        ]
      }
    ],
    "commit" : "4bec31562d589e9ecdd948439168e3317ccd0e70",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +266,270 @@BECOME_ERROR_STRINGS      = {'sudo': 'Sorry, try again.', 'su': 'Authentication failure', 'pbrun': '', 'pfexec': '', 'doas': 'Permission denied', 'dzdo': '', 'ksu': 'Password incorrect'} #FIXME: deal with i18n\nBECOME_MISSING_STRINGS    = {'sudo': 'sorry, a password is required to run sudo', 'su': '', 'pbrun': '', 'pfexec': '', 'doas': 'Authorization required', 'dzdo': '', 'ksu': 'No password given'} #FIXME: deal with i18n\nBECOME_METHODS            = ['sudo','su','pbrun','pfexec','doas','dzdo','ksu','runas']\nBECOME_ALLOW_SAME_USER    = get_config(p, 'privilege_escalation', 'become_allow_same_user', 'ANSIBLE_BECOME_ALLOW_SAME_USER', False, value_type='boolean')\nDEFAULT_BECOME_METHOD     = get_config(p, 'privilege_escalation', 'become_method', 'ANSIBLE_BECOME_METHOD','sudo' if DEFAULT_SUDO else 'su' if DEFAULT_SU else 'sudo' ).lower()"
  },
  {
    "id" : "879489a7-0607-4d4b-aab5-133616680bb4",
    "prId" : 32303,
    "prUrl" : "https://github.com/ansible/ansible/pull/32303#pullrequestreview-75458475",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7ce8fad3-0e8d-41ff-95a1-e8fae8a6392f",
        "parentId" : null,
        "authorId" : "fe92d178-e923-4a45-ae7f-b51490c45c31",
        "body" : "why dict(k=v) instead of {k:v}? Is it faster? more readable? policy? better for python3? something else?\r\n_ah. I see that this is just a move from play_context.py - I'm still curious about the difference in syntax. Do you know why?_",
        "createdAt" : "2017-11-09T09:13:42Z",
        "updatedAt" : "2017-11-09T09:43:30Z",
        "lastEditedBy" : "fe92d178-e923-4a45-ae7f-b51490c45c31",
        "tags" : [
        ]
      },
      {
        "id" : "867fa90c-68e7-41f8-b23a-73e0c46ffa61",
        "parentId" : "7ce8fad3-0e8d-41ff-95a1-e8fae8a6392f",
        "authorId" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "body" : "i just copied, didn't reformat , {} is actually slightly faster than dict() ... but not an optimization i'm going to do here as my hope is to remove this whole mapping in the end.",
        "createdAt" : "2017-11-09T14:40:26Z",
        "updatedAt" : "2017-11-09T14:41:25Z",
        "lastEditedBy" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "tags" : [
        ]
      }
    ],
    "commit" : "450624f8b2e484f58f44deb0e67f4f4b4603b8ab",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +101,105 @@\n# FIXME: remove once play_context mangling is removed\nMAGIC_VARIABLE_MAPPING = dict(\n\n    # base"
  },
  {
    "id" : "10e4e9b9-753e-4942-ba66-25a7e0cfc200",
    "prId" : 53544,
    "prUrl" : "https://github.com/ansible/ansible/pull/53544#pullrequestreview-212508926",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "69f91b7e-aff7-463b-ac3a-27c006617ca2",
        "parentId" : null,
        "authorId" : "6b7e4265-ae86-4269-9bd7-f8ffa9085df6",
        "body" : "Looks good. This fixes identifying valid python-3 unicode variables as invalid characters for me. cc @kdelee since I think you were testing this.",
        "createdAt" : "2019-03-08T19:38:58Z",
        "updatedAt" : "2019-03-11T16:35:29Z",
        "lastEditedBy" : "6b7e4265-ae86-4269-9bd7-f8ffa9085df6",
        "tags" : [
        ]
      },
      {
        "id" : "044b8eff-4ed9-492c-9172-d4a824ee7b19",
        "parentId" : "69f91b7e-aff7-463b-ac3a-27c006617ca2",
        "authorId" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "body" : "it was @felixfontein that brought it up iirc, in irc",
        "createdAt" : "2019-03-08T19:55:41Z",
        "updatedAt" : "2019-03-11T16:35:29Z",
        "lastEditedBy" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "tags" : [
        ]
      },
      {
        "id" : "e390929d-e8e8-4b4d-8052-7d009a821b31",
        "parentId" : "69f91b7e-aff7-463b-ac3a-27c006617ca2",
        "authorId" : "6b7e4265-ae86-4269-9bd7-f8ffa9085df6",
        "body" : "Oh. @kdelee brought it up in slack too",
        "createdAt" : "2019-03-08T20:41:29Z",
        "updatedAt" : "2019-03-11T16:35:29Z",
        "lastEditedBy" : "6b7e4265-ae86-4269-9bd7-f8ffa9085df6",
        "tags" : [
        ]
      },
      {
        "id" : "2f98f0fa-666c-485b-b036-ae8c9508f8a7",
        "parentId" : "69f91b7e-aff7-463b-ac3a-27c006617ca2",
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "I think it wasn't me who brought it up, I didn't mention it (I think) and I saw it in some other issue/PR.",
        "createdAt" : "2019-03-08T20:57:40Z",
        "updatedAt" : "2019-03-11T16:35:29Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      },
      {
        "id" : "d277cd54-a976-4599-8470-003ca9fbbc87",
        "parentId" : "69f91b7e-aff7-463b-ac3a-27c006617ca2",
        "authorId" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "body" : "resmo then? i created test from irc conversation this morning, that is what i've been using as lithmus",
        "createdAt" : "2019-03-08T22:35:31Z",
        "updatedAt" : "2019-03-11T16:35:29Z",
        "lastEditedBy" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "tags" : [
        ]
      }
    ],
    "commit" : "eb2c37958087ef24a8c71a83fb906610b2465865",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +120,124 @@\n# This matches a string that cannot be used as a valid python variable name i.e 'not-valid', 'not!valid@either' '1_nor_This'\nINVALID_VARIABLE_NAMES = re.compile(r'^[\\d\\W]|[^\\w]')\n\n"
  },
  {
    "id" : "66b6d03a-4ed4-4f70-b49e-44ca8bc5b16a",
    "prId" : 74108,
    "prUrl" : "https://github.com/ansible/ansible/pull/74108#pullrequestreview-633793087",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bddf261e-1589-4876-a964-062660c1774e",
        "parentId" : null,
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "Since this function is no longer used, and is private, why not simply make its `version` argument mandatory instead of having more code that runs when `constants` is importet? (Or remove this completely, though it might be useful again in the future.)",
        "createdAt" : "2021-04-12T16:55:31Z",
        "updatedAt" : "2021-04-13T14:15:33Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      },
      {
        "id" : "ea3819db-08ad-4916-80ee-c1d40f922f9e",
        "parentId" : "bddf261e-1589-4876-a964-062660c1774e",
        "authorId" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "body" : "it is used (at least in this file) and .. sadly as much as we flag them private .. many still ref them, so i prefer backwards compat and eventually deprecate this deprecate function when we don't use it anymore",
        "createdAt" : "2021-04-12T17:25:20Z",
        "updatedAt" : "2021-04-13T14:15:33Z",
        "lastEditedBy" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "tags" : [
        ]
      }
    ],
    "commit" : "040c709612a6046e8d7c18b8d6517ed4c814b0b9",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +34,38 @@\n\ndef _deprecated(msg, version=default_deprecated):\n    ''' display is not guaranteed here, nor it being the full class, but try anyways, fallback to sys.stderr.write '''\n    try:"
  }
]