[
  {
    "id" : "195a5f4b-215e-4cc1-9ee6-38a201c10f90",
    "prId" : 57106,
    "prUrl" : "https://github.com/ansible/ansible/pull/57106#pullrequestreview-255520035",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fe973467-bbd1-4647-982f-3459fee5638d",
        "parentId" : null,
        "authorId" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "body" : "Are you only doing this to support Python 2.6? Those keys are already unique.",
        "createdAt" : "2019-06-18T14:32:00Z",
        "updatedAt" : "2019-07-09T04:43:59Z",
        "lastEditedBy" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "tags" : [
        ]
      },
      {
        "id" : "a2e5f1d2-facb-41f7-b227-cc1c1051b2ac",
        "parentId" : "fe973467-bbd1-4647-982f-3459fee5638d",
        "authorId" : "7c547162-2334-4e33-a627-e146840da9ec",
        "body" : "It is done because I am using the `difference` method to find keys are that don't exist in the valid galaxy.yml keys.",
        "createdAt" : "2019-06-27T23:00:03Z",
        "updatedAt" : "2019-07-09T04:44:00Z",
        "lastEditedBy" : "7c547162-2334-4e33-a627-e146840da9ec",
        "tags" : [
        ]
      }
    ],
    "commit" : "d5577e43d8dacb3adba02056fd793f6cdfb9e0f4",
    "line" : 540,
    "diffHunk" : "@@ -1,1 +538,542 @@                           % (to_native(b_galaxy_yml_path), to_native(err)))\n\n    set_keys = set(galaxy_yml.keys())\n    missing_keys = mandatory_keys.difference(set_keys)\n    if missing_keys:"
  },
  {
    "id" : "f97e8470-b37c-4611-8128-9f400b824c5a",
    "prId" : 57106,
    "prUrl" : "https://github.com/ansible/ansible/pull/57106#pullrequestreview-255520814",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9f9e5ccf-e5b6-4cf8-826d-0cd7b275fb2c",
        "parentId" : null,
        "authorId" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "body" : "I think this approach might read simpler:\r\n```suggestion\r\n    new_galaxy_yml = dict.from_keys(optional_strings)\r\n    new_galaxy_yml.update(dict.from_keys(optional_lists), [])\r\n    new_galaxy_yml.update(dict.from_keys(optional_dicts), {})\r\n    new_galaxy_yml.update(galaxy_yml)\r\n```",
        "createdAt" : "2019-06-18T14:39:07Z",
        "updatedAt" : "2019-07-09T04:43:59Z",
        "lastEditedBy" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "tags" : [
        ]
      },
      {
        "id" : "5c026234-343e-4af0-8efb-8ffef6f6763c",
        "parentId" : "9f9e5ccf-e5b6-4cf8-826d-0cd7b275fb2c",
        "authorId" : "7c547162-2334-4e33-a627-e146840da9ec",
        "body" : "That's a bit too much for me. I still need to loop through the entries anyway for the list keys to convert a single string to `[string]`. Prefer keep the format the same there.",
        "createdAt" : "2019-06-27T23:02:50Z",
        "updatedAt" : "2019-07-09T04:44:00Z",
        "lastEditedBy" : "7c547162-2334-4e33-a627-e146840da9ec",
        "tags" : [
        ]
      }
    ],
    "commit" : "d5577e43d8dacb3adba02056fd793f6cdfb9e0f4",
    "line" : 552,
    "diffHunk" : "@@ -1,1 +550,554 @@\n    # Add the defaults if they have not been set\n    for optional_string in optional_strings:\n        if optional_string not in galaxy_yml:\n            galaxy_yml[optional_string] = None"
  },
  {
    "id" : "a3b125eb-4e3a-4320-b148-fd926b1e7262",
    "prId" : 57106,
    "prUrl" : "https://github.com/ansible/ansible/pull/57106#pullrequestreview-251161623",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "07aa7ec4-3d69-4c49-8375-d6bd1065c630",
        "parentId" : null,
        "authorId" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "body" : "maybe just\r\n```suggestion\r\n        part_boundary,\r\n        b\"--\",\r\n```",
        "createdAt" : "2019-06-18T15:01:59Z",
        "updatedAt" : "2019-07-09T04:43:59Z",
        "lastEditedBy" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "tags" : [
        ]
      }
    ],
    "commit" : "d5577e43d8dacb3adba02056fd793f6cdfb9e0f4",
    "line" : 735,
    "diffHunk" : "@@ -1,1 +733,737 @@        b\"\",\n        data,\n        b\"%s--\" % part_boundary,\n    ]\n"
  },
  {
    "id" : "1cd1fce6-bd3c-461a-b31d-a255827aeb46",
    "prId" : 57106,
    "prUrl" : "https://github.com/ansible/ansible/pull/57106#pullrequestreview-255545548",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0e8d3158-bc16-408a-b9c2-ece6e7146863",
        "parentId" : null,
        "authorId" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "body" : "May I ask you to implement an exponential backoff algorithm here? \r\nhttps://en.wikipedia.org/wiki/Exponential_backoff",
        "createdAt" : "2019-06-18T15:05:27Z",
        "updatedAt" : "2019-07-09T04:43:59Z",
        "lastEditedBy" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "tags" : [
        ]
      },
      {
        "id" : "8226481f-2c3c-44a6-80dd-9248b4647dbd",
        "parentId" : "0e8d3158-bc16-408a-b9c2-ece6e7146863",
        "authorId" : "7c547162-2334-4e33-a627-e146840da9ec",
        "body" : "Added in the latest commit with a rate of `1.5`. Will wait for a maximum of ~60 seconds before ultimately timing out as well.",
        "createdAt" : "2019-06-28T01:04:19Z",
        "updatedAt" : "2019-07-09T04:44:00Z",
        "lastEditedBy" : "7c547162-2334-4e33-a627-e146840da9ec",
        "tags" : [
        ]
      }
    ],
    "commit" : "d5577e43d8dacb3adba02056fd793f6cdfb9e0f4",
    "line" : 751,
    "diffHunk" : "@@ -1,1 +749,753 @@\n    wait = 2\n    while True:\n        resp = json.load(open_url(to_native(task_url, errors='surrogate_or_strict'), headers=headers, method='GET',\n                                  validate_certs=validate_certs))"
  },
  {
    "id" : "1849c7b6-eb09-46cc-a710-1e510726195b",
    "prId" : 57106,
    "prUrl" : "https://github.com/ansible/ansible/pull/57106#pullrequestreview-253398866",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "15f98c51-bfc0-4e81-8820-451508331cec",
        "parentId" : null,
        "authorId" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "body" : "I'd do\r\n```suggestion\r\n                if not ignore_errors:\r\n                    raise\r\n```",
        "createdAt" : "2019-06-24T13:08:11Z",
        "updatedAt" : "2019-07-09T04:43:59Z",
        "lastEditedBy" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "tags" : [
        ]
      }
    ],
    "commit" : "d5577e43d8dacb3adba02056fd793f6cdfb9e0f4",
    "line" : 455,
    "diffHunk" : "@@ -1,1 +453,457 @@                collection.install(output_path, b_temp_path)\n            except AnsibleError as err:\n                if ignore_errors:\n                    display.warning(\"Failed to install collection %s but skipping due to --ignore-errors being set. \"\n                                    \"Error: %s\" % (str(collection), to_text(err)))"
  },
  {
    "id" : "13ad6ff1-15bd-468e-8218-1fa6c54f446a",
    "prId" : 57106,
    "prUrl" : "https://github.com/ansible/ansible/pull/57106#pullrequestreview-255067357",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "65ee85c0-32c5-4bba-838d-fb360dbf3ae7",
        "parentId" : null,
        "authorId" : "659587dc-b401-4c91-aa40-a8a932100545",
        "body" : "It's unclear if i would just use --validate_certs to Validate the certs, or --validate_certs=True to validate certs.  If I just use the flags, then this an ignore_errors should remove 'Whether to...'",
        "createdAt" : "2019-06-26T20:43:52Z",
        "updatedAt" : "2019-07-09T04:43:59Z",
        "lastEditedBy" : "659587dc-b401-4c91-aa40-a8a932100545",
        "tags" : [
        ]
      },
      {
        "id" : "80bcb6c2-3654-4ab4-a977-6280ffc70545",
        "parentId" : "65ee85c0-32c5-4bba-838d-fb360dbf3ae7",
        "authorId" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "body" : "It's actually missing `--ignore-certs` CLI arg that implies `validate_certs=True` according to the code I saw...",
        "createdAt" : "2019-06-27T08:04:41Z",
        "updatedAt" : "2019-07-09T04:43:59Z",
        "lastEditedBy" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "tags" : [
        ]
      },
      {
        "id" : "ae9bfa1d-3af2-4d36-969d-25415e45587d",
        "parentId" : "65ee85c0-32c5-4bba-838d-fb360dbf3ae7",
        "authorId" : "7c547162-2334-4e33-a627-e146840da9ec",
        "body" : "Yep the internal API uses validate_certs but the actual cmdline call is `ignore-certs`.",
        "createdAt" : "2019-06-27T08:10:23Z",
        "updatedAt" : "2019-07-09T04:43:59Z",
        "lastEditedBy" : "7c547162-2334-4e33-a627-e146840da9ec",
        "tags" : [
        ]
      }
    ],
    "commit" : "d5577e43d8dacb3adba02056fd793f6cdfb9e0f4",
    "line" : 440,
    "diffHunk" : "@@ -1,1 +438,442 @@    :param servers: A list of Galaxy servers to query when searching for a collection.\n    :param validate_certs: Whether to validate the Galaxy server certificates.\n    :param ignore_errors: Whether to ignore any errors when installing the collection.\n    :param no_deps: Ignore any collection dependencies and only install the base requirements.\n    :param force: Re-install a collection if it has already been installed."
  },
  {
    "id" : "c9ced1c9-2ae1-4f43-a8f9-171f79316ef4",
    "prId" : 59121,
    "prUrl" : "https://github.com/ansible/ansible/pull/59121#pullrequestreview-263206345",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8b255799-88af-43a4-92e1-241d0b7f3414",
        "parentId" : null,
        "authorId" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "body" : "not for this PR, but we might want a 'configurable ignore facility' ala gitignore in the future",
        "createdAt" : "2019-07-17T17:29:58Z",
        "updatedAt" : "2019-07-17T17:29:58Z",
        "lastEditedBy" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "tags" : [
        ]
      }
    ],
    "commit" : "a59b05a17e345d6773dd3a38f02ceded197f4854",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +578,582 @@                                (to_bytes('{0}-{1}-*.tar.gz'.format(namespace, name)), True)])\n    b_ignore_dirs = frozenset([(b'CVS', False), (b'.bzr', False), (b'.hg', False), (b'.git', False), (b'.svn', False),\n                               (b'__pycache__', False), (b'.tox', False)])\n\n    entry_template = {"
  },
  {
    "id" : "0c66bc41-b80e-413f-ab0b-d06f6b2a76fa",
    "prId" : 59895,
    "prUrl" : "https://github.com/ansible/ansible/pull/59895#pullrequestreview-269564612",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4b4af3f9-4efc-45a2-b1b7-e894975f7f17",
        "parentId" : null,
        "authorId" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "body" : "maybe\r\n```suggestion\r\n        return to_text(str(self))\r\n```\r\n\r\ncc @abadger?",
        "createdAt" : "2019-08-01T11:47:19Z",
        "updatedAt" : "2019-08-01T11:47:19Z",
        "lastEditedBy" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "tags" : [
        ]
      }
    ],
    "commit" : "01b1bc5a477fb4e0f8361e246491c75cfe877eb0",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +85,89 @@\n    def __unicode__(self):\n        return u\"%s.%s\" % (self.namespace, self.name)\n\n    @property"
  },
  {
    "id" : "a6b95468-fbf8-40bf-afe5-a26c68495307",
    "prId" : 60982,
    "prUrl" : "https://github.com/ansible/ansible/pull/60982#pullrequestreview-281018765",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e79f2a70-3b0d-41a8-a20a-603c4f89e7e2",
        "parentId" : null,
        "authorId" : "a333664b-bd2f-4848-8827-f90665eeb5ff",
        "body" : "why does this have a default value? don't we only want to use what the server says and never guess?",
        "createdAt" : "2019-08-27T15:07:49Z",
        "updatedAt" : "2019-08-28T20:34:58Z",
        "lastEditedBy" : "a333664b-bd2f-4848-8827-f90665eeb5ff",
        "tags" : [
        ]
      },
      {
        "id" : "3d4879fe-f593-44b1-806e-b66d6261e554",
        "parentId" : "e79f2a70-3b0d-41a8-a20a-603c4f89e7e2",
        "authorId" : "fa0144fc-7424-474a-9ab5-059de28814b7",
        "body" : "Can't use what the server says because the live deployed galaxy.ansible.com doesn't include 'v2'.\r\nSupposedly because '/api/v2' is not \"public\" \"stable\" API. I disagree with that reasoning, but nonetheless.\r\n\r\n``` json\r\n{\r\n    \"description\": \"GALAXY REST API\",\r\n    \"current_version\": \"v1\",\r\n    \"available_versions\": {\r\n        \"v1\": \"/api/v1/\"\r\n    },\r\n    \"server_version\": \"3.2.4\",\r\n    \"version_name\": \"Doin' it Right\",\r\n    \"team_members\": [\r\n        \"chouseknecht\",\r\n        \"cutwater\",\r\n        \"alikins\",\r\n        \"newswangerd\",\r\n        \"awcrosby\",\r\n        \"tima\",\r\n        \"gregdek\"\r\n    ]\r\n}\r\n```",
        "createdAt" : "2019-08-28T15:17:12Z",
        "updatedAt" : "2019-08-28T20:34:58Z",
        "lastEditedBy" : "fa0144fc-7424-474a-9ab5-059de28814b7",
        "tags" : [
        ]
      },
      {
        "id" : "172ce4c3-31cd-469f-9949-cf6040985408",
        "parentId" : "e79f2a70-3b0d-41a8-a20a-603c4f89e7e2",
        "authorId" : "a333664b-bd2f-4848-8827-f90665eeb5ff",
        "body" : "But you _are_ using the server response here, you're just providing a default if its missing. `galaxy.ansible.com` is missing V2, but it still provides a `available_versions` that (currently) only includes V1, so this V1/V2 dict will never actually be used.",
        "createdAt" : "2019-08-28T18:24:53Z",
        "updatedAt" : "2019-08-28T20:34:58Z",
        "lastEditedBy" : "a333664b-bd2f-4848-8827-f90665eeb5ff",
        "tags" : [
        ]
      }
    ],
    "commit" : "058a6df0a249ae95ea132ffd68e262a46b2fc165",
    "line" : 96,
    "diffHunk" : "@@ -1,1 +413,417 @@    available_versions = data.get('available_versions',\n                                  {'v1': '/api/v1',\n                                   'v2': '/api/v2'})\n\n    return available_versions"
  },
  {
    "id" : "70a8900f-ecc5-418c-a108-81710a0edb52",
    "prId" : 60982,
    "prUrl" : "https://github.com/ansible/ansible/pull/60982#pullrequestreview-280912411",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2f66b458-6621-4bd7-8dd7-df3a503360fd",
        "parentId" : null,
        "authorId" : "a333664b-bd2f-4848-8827-f90665eeb5ff",
        "body" : "should the other version of `n_url` be in an `else` block?",
        "createdAt" : "2019-08-27T15:08:43Z",
        "updatedAt" : "2019-08-28T20:34:58Z",
        "lastEditedBy" : "a333664b-bd2f-4848-8827-f90665eeb5ff",
        "tags" : [
        ]
      },
      {
        "id" : "6f4b44c1-4ed5-40a8-8b25-58a50e1f933b",
        "parentId" : "2f66b458-6621-4bd7-8dd7-df3a503360fd",
        "authorId" : "fa0144fc-7424-474a-9ab5-059de28814b7",
        "body" : "It could be, but I prefer the 'set the default, but override for the special case' style. ",
        "createdAt" : "2019-08-28T15:23:28Z",
        "updatedAt" : "2019-08-28T20:34:58Z",
        "lastEditedBy" : "fa0144fc-7424-474a-9ab5-059de28814b7",
        "tags" : [
        ]
      }
    ],
    "commit" : "058a6df0a249ae95ea132ffd68e262a46b2fc165",
    "line" : 111,
    "diffHunk" : "@@ -1,1 +475,479 @@\n    if 'v3' in available_api_versions:\n        n_url = _urljoin(api.api_server, 'api', 'v3', 'artifacts', 'collections')\n        api.token_type = 'Bearer'\n"
  },
  {
    "id" : "90bebab2-d9a5-4f84-ab63-ca52cc349ffc",
    "prId" : 60982,
    "prUrl" : "https://github.com/ansible/ansible/pull/60982#pullrequestreview-281019045",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6d1f8d9c-d2ef-44de-a014-21c4bf689c5f",
        "parentId" : null,
        "authorId" : "a333664b-bd2f-4848-8827-f90665eeb5ff",
        "body" : "I think this deserves a docstring noting for future maintainers that this can't be used outside of collection endpoints, because it won't handle V1 error responses. Someone might get the idea to use this elsewhere and easily overlook that constraint.",
        "createdAt" : "2019-08-27T15:12:01Z",
        "updatedAt" : "2019-08-28T20:34:58Z",
        "lastEditedBy" : "a333664b-bd2f-4848-8827-f90665eeb5ff",
        "tags" : [
        ]
      },
      {
        "id" : "d050bc7e-e9a8-46ed-80b1-d5b9d3444c1a",
        "parentId" : "6d1f8d9c-d2ef-44de-a014-21c4bf689c5f",
        "authorId" : "7c547162-2334-4e33-a627-e146840da9ec",
        "body" : "Probably better if it was changed to something like `handle_galaxy_error` or something.",
        "createdAt" : "2019-08-27T20:39:51Z",
        "updatedAt" : "2019-08-28T20:34:58Z",
        "lastEditedBy" : "7c547162-2334-4e33-a627-e146840da9ec",
        "tags" : [
        ]
      },
      {
        "id" : "b29cfa61-860c-44bd-949d-9caca306c8ed",
        "parentId" : "6d1f8d9c-d2ef-44de-a014-21c4bf689c5f",
        "authorId" : "fa0144fc-7424-474a-9ab5-059de28814b7",
        "body" : "@ironfroggy More docs are better of course, but this is dunder and in collections.py because it only handles v2/v3 style responses.",
        "createdAt" : "2019-08-28T15:31:34Z",
        "updatedAt" : "2019-08-28T20:34:58Z",
        "lastEditedBy" : "fa0144fc-7424-474a-9ab5-059de28814b7",
        "tags" : [
        ]
      },
      {
        "id" : "ab6d09b5-f1f3-4c8d-bcc7-08587ab4365f",
        "parentId" : "6d1f8d9c-d2ef-44de-a014-21c4bf689c5f",
        "authorId" : "a333664b-bd2f-4848-8827-f90665eeb5ff",
        "body" : "fair enough, tho i'm with @jborean93 on the naming",
        "createdAt" : "2019-08-28T18:25:27Z",
        "updatedAt" : "2019-08-28T20:34:58Z",
        "lastEditedBy" : "a333664b-bd2f-4848-8827-f90665eeb5ff",
        "tags" : [
        ]
      }
    ],
    "commit" : "058a6df0a249ae95ea132ffd68e262a46b2fc165",
    "line" : 149,
    "diffHunk" : "@@ -1,1 +1078,1082 @@\n\ndef _handle_http_error(http_error, api, available_api_versions, context_error_message):\n    try:\n        err_info = json.load(http_error)"
  },
  {
    "id" : "40f794c1-3c37-4990-b3f9-37f8a594b253",
    "prId" : 60982,
    "prUrl" : "https://github.com/ansible/ansible/pull/60982#pullrequestreview-280863971",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0ee3d98d-9063-40da-8382-bd7677e86bc5",
        "parentId" : null,
        "authorId" : "7c547162-2334-4e33-a627-e146840da9ec",
        "body" : "This is can be a pretty expensive operation, especially when we have multiple collections that we are trying to install. We should be setting the available versions once on the `api` object so that once we only need to do this check once for every server.",
        "createdAt" : "2019-08-27T20:28:16Z",
        "updatedAt" : "2019-08-28T20:34:58Z",
        "lastEditedBy" : "7c547162-2334-4e33-a627-e146840da9ec",
        "tags" : [
        ]
      },
      {
        "id" : "85c0abb2-9b66-473c-abc5-3f6dc929d2f4",
        "parentId" : "0ee3d98d-9063-40da-8382-bd7677e86bc5",
        "authorId" : "fa0144fc-7424-474a-9ab5-059de28814b7",
        "body" : "@jborean93 The tradeoff here is the cases where the API version needs to be known before the call is made. \r\n\r\nIf those calls can be moved into GalaxyAPI and wrapped with gconnect() and abstracted slightly, should be able to ensure the `GET /api` is only called once per GalaxyAPI instance.\r\n\r\nThe branch as is at the moment was focused on minimizing changes to `ansible.galaxy.api` and isolating the changes to collection.py. But sounds like I should change that focus?\r\n",
        "createdAt" : "2019-08-28T14:17:47Z",
        "updatedAt" : "2019-08-28T20:34:58Z",
        "lastEditedBy" : "fa0144fc-7424-474a-9ab5-059de28814b7",
        "tags" : [
        ]
      }
    ],
    "commit" : "058a6df0a249ae95ea132ffd68e262a46b2fc165",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +312,316 @@            collection_url_paths = [api.api_server, 'api', 'v2', 'collections', namespace, name, 'versions']\n\n            available_api_versions = get_available_api_versions(api)\n            if 'v3' in available_api_versions:\n                # /api/v3/ exists, use it"
  },
  {
    "id" : "c513a6f2-a3c9-4df7-82ae-3d652ebb86e9",
    "prId" : 60982,
    "prUrl" : "https://github.com/ansible/ansible/pull/60982#pullrequestreview-280452767",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d81e8e19-ed38-41f4-8779-ddefe73f1a5e",
        "parentId" : null,
        "authorId" : "7c547162-2334-4e33-a627-e146840da9ec",
        "body" : "It sounds like this should be set on the api object and used as part of the original url paths",
        "createdAt" : "2019-08-27T20:36:58Z",
        "updatedAt" : "2019-08-28T20:34:58Z",
        "lastEditedBy" : "7c547162-2334-4e33-a627-e146840da9ec",
        "tags" : [
        ]
      }
    ],
    "commit" : "058a6df0a249ae95ea132ffd68e262a46b2fc165",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +315,319 @@            if 'v3' in available_api_versions:\n                # /api/v3/ exists, use it\n                collection_url_paths[2] = 'v3'\n                # update this v3 GalaxyAPI to use Bearer token from now on\n                api.token_type = 'Bearer'"
  },
  {
    "id" : "c7c4055f-7621-4797-8a4f-4e5fe9826d01",
    "prId" : 60982,
    "prUrl" : "https://github.com/ansible/ansible/pull/60982#pullrequestreview-280452767",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7121757d-66fd-44d9-8d8b-92b16f61d99d",
        "parentId" : null,
        "authorId" : "7c547162-2334-4e33-a627-e146840da9ec",
        "body" : "Does it make sense for `Bearer` to be set in `_auth_header()` based on the version used instead of you manually setting it each time for v3 endpoints.",
        "createdAt" : "2019-08-27T20:38:07Z",
        "updatedAt" : "2019-08-28T20:34:58Z",
        "lastEditedBy" : "7c547162-2334-4e33-a627-e146840da9ec",
        "tags" : [
        ]
      }
    ],
    "commit" : "058a6df0a249ae95ea132ffd68e262a46b2fc165",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +317,321 @@                collection_url_paths[2] = 'v3'\n                # update this v3 GalaxyAPI to use Bearer token from now on\n                api.token_type = 'Bearer'\n\n            headers = api._auth_header(required=False)"
  },
  {
    "id" : "07c15940-955d-41a0-82ac-faa2e314adbc",
    "prId" : 60982,
    "prUrl" : "https://github.com/ansible/ansible/pull/60982#pullrequestreview-280452767",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cb0fecb8-9771-4e02-920c-46da6a612bf5",
        "parentId" : null,
        "authorId" : "7c547162-2334-4e33-a627-e146840da9ec",
        "body" : "As I mentioned above, this seems like it should be part of the `GalaxyAPI` class and not here. You could make it so it only collections the versions when someone tries to access the `available_api_version` property lazily to avoid running it multiple times on the same server.",
        "createdAt" : "2019-08-27T20:42:44Z",
        "updatedAt" : "2019-08-28T20:34:58Z",
        "lastEditedBy" : "7c547162-2334-4e33-a627-e146840da9ec",
        "tags" : [
        ]
      }
    ],
    "commit" : "058a6df0a249ae95ea132ffd68e262a46b2fc165",
    "line" : 62,
    "diffHunk" : "@@ -1,1 +379,383 @@\n\ndef get_available_api_versions(galaxy_api):\n    headers = {}\n    headers.update(galaxy_api._auth_header(required=False))"
  },
  {
    "id" : "023a34d1-af72-41c0-86e6-34a6dc8462ae",
    "prId" : 60982,
    "prUrl" : "https://github.com/ansible/ansible/pull/60982#pullrequestreview-280900850",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "77cf26d6-6efd-4747-bac4-9f560c3a6c07",
        "parentId" : null,
        "authorId" : "7c547162-2334-4e33-a627-e146840da9ec",
        "body" : "You need to fix up your API endpoints to actually return `v2`, right now all of these endpoints (dev, qa, prod) only return `v1` https://galaxy.ansible.com/api/.",
        "createdAt" : "2019-08-27T20:58:17Z",
        "updatedAt" : "2019-08-28T20:34:58Z",
        "lastEditedBy" : "7c547162-2334-4e33-a627-e146840da9ec",
        "tags" : [
        ]
      },
      {
        "id" : "33b52323-6cf9-4e25-8a44-7c0effda911c",
        "parentId" : "77cf26d6-6efd-4747-bac4-9f560c3a6c07",
        "authorId" : "fa0144fc-7424-474a-9ab5-059de28814b7",
        "body" : "The 'current_version' from `GET /api` (as used in GalaxyAPI.version and GalaxyAPI.baseurl) isn't really meaningful anymore. \r\n\r\nExisting clients will break if it is not 'v1'. ansible-galaxy talking to galaxy.ansible.com ends up needing both the 'v1' urls (roles, etc) and the 'v2' urls (collections, artifacts). ie, 'v2' api is not a superset of 'v1', so both are used. And for talking to automation hub, it needs just 'v3'.\r\n\r\nThe plan is to eventually drop 'current_version' from `GET /api` results, but we can't change it for production galaxy.ansible.com without breaking deployed ansible-galaxy versions.",
        "createdAt" : "2019-08-28T15:07:11Z",
        "updatedAt" : "2019-08-28T20:34:58Z",
        "lastEditedBy" : "fa0144fc-7424-474a-9ab5-059de28814b7",
        "tags" : [
        ]
      }
    ],
    "commit" : "058a6df0a249ae95ea132ffd68e262a46b2fc165",
    "line" : 66,
    "diffHunk" : "@@ -1,1 +383,387 @@    headers.update(galaxy_api._auth_header(required=False))\n\n    url = _urljoin(galaxy_api.api_server, \"api\")\n    try:\n        return_data = open_url(url, headers=headers, validate_certs=galaxy_api.validate_certs)"
  },
  {
    "id" : "f3561b56-6db0-4a9a-a201-f09c850853da",
    "prId" : 60982,
    "prUrl" : "https://github.com/ansible/ansible/pull/60982#pullrequestreview-280452767",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bf25cd0c-14f1-4169-b24d-13188fca24f7",
        "parentId" : null,
        "authorId" : "7c547162-2334-4e33-a627-e146840da9ec",
        "body" : "you could just do `headers = galaxy_api._auth_header(required=False)`, not much need for .update here",
        "createdAt" : "2019-08-27T20:58:54Z",
        "updatedAt" : "2019-08-28T20:34:58Z",
        "lastEditedBy" : "7c547162-2334-4e33-a627-e146840da9ec",
        "tags" : [
        ]
      }
    ],
    "commit" : "058a6df0a249ae95ea132ffd68e262a46b2fc165",
    "line" : 64,
    "diffHunk" : "@@ -1,1 +381,385 @@def get_available_api_versions(galaxy_api):\n    headers = {}\n    headers.update(galaxy_api._auth_header(required=False))\n\n    url = _urljoin(galaxy_api.api_server, \"api\")"
  },
  {
    "id" : "73cf383c-04d4-4f1b-8c33-dd0076c48679",
    "prId" : 60982,
    "prUrl" : "https://github.com/ansible/ansible/pull/60982#pullrequestreview-280452767",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "02ba80f2-d2e1-4dcf-ab5e-4416587da73f",
        "parentId" : null,
        "authorId" : "7c547162-2334-4e33-a627-e146840da9ec",
        "body" : "Ditto here, available_versions should be a property on the api instance which is lazily collected as needed.",
        "createdAt" : "2019-08-27T21:00:48Z",
        "updatedAt" : "2019-08-28T20:34:58Z",
        "lastEditedBy" : "7c547162-2334-4e33-a627-e146840da9ec",
        "tags" : [
        ]
      }
    ],
    "commit" : "058a6df0a249ae95ea132ffd68e262a46b2fc165",
    "line" : 108,
    "diffHunk" : "@@ -1,1 +472,476 @@\n    n_url = _urljoin(api.api_server, 'api', 'v2', 'collections')\n    available_api_versions = get_available_api_versions(api)\n\n    if 'v3' in available_api_versions:"
  },
  {
    "id" : "cb7702b6-dcfb-4335-ac2c-c84be52c55ed",
    "prId" : 60982,
    "prUrl" : "https://github.com/ansible/ansible/pull/60982#pullrequestreview-280916146",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9e22cecd-ae74-43b7-8178-c512b21f386c",
        "parentId" : null,
        "authorId" : "7c547162-2334-4e33-a627-e146840da9ec",
        "body" : "Is there a reason for changing the way the headers are set. I don't really care too much but it just adds more noise to the PR for no reason that I can see.",
        "createdAt" : "2019-08-27T21:01:52Z",
        "updatedAt" : "2019-08-28T20:34:58Z",
        "lastEditedBy" : "7c547162-2334-4e33-a627-e146840da9ec",
        "tags" : [
        ]
      },
      {
        "id" : "e5fc74ac-cdc6-4601-9acc-34ceb9530591",
        "parentId" : "9e22cecd-ae74-43b7-8178-c512b21f386c",
        "authorId" : "fa0144fc-7424-474a-9ab5-059de28814b7",
        "body" : "Hmm, probably no reason to change it. I must of changed it in previous version at some point. But I'll change it back and verify.",
        "createdAt" : "2019-08-28T15:28:50Z",
        "updatedAt" : "2019-08-28T20:34:58Z",
        "lastEditedBy" : "fa0144fc-7424-474a-9ab5-059de28814b7",
        "tags" : [
        ]
      }
    ],
    "commit" : "058a6df0a249ae95ea132ffd68e262a46b2fc165",
    "line" : 119,
    "diffHunk" : "@@ -1,1 +482,486 @@\n    data, content_type = _get_mime_data(b_collection_path)\n    headers.update({\n        'Content-type': content_type,\n        'Content-length': len(data),"
  },
  {
    "id" : "265793a7-1c23-42b5-b15f-82ea19337dde",
    "prId" : 60982,
    "prUrl" : "https://github.com/ansible/ansible/pull/60982#pullrequestreview-280925802",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8bfa4a9b-b450-4521-a39c-5c51bd7138c6",
        "parentId" : null,
        "authorId" : "7c547162-2334-4e33-a627-e146840da9ec",
        "body" : "this should be sourced from the request/response URL as that's where the error is from.",
        "createdAt" : "2019-08-27T21:07:36Z",
        "updatedAt" : "2019-08-28T20:34:58Z",
        "lastEditedBy" : "7c547162-2334-4e33-a627-e146840da9ec",
        "tags" : [
        ]
      },
      {
        "id" : "1082f2dd-b735-4aad-9fa9-13d782b7792e",
        "parentId" : "8bfa4a9b-b450-4521-a39c-5c51bd7138c6",
        "authorId" : "fa0144fc-7424-474a-9ab5-059de28814b7",
        "body" : "something like\r\n\r\n``` python\r\n# or more likely, with regex and/or urlparse(url)[2] and/or inspect the response content\r\nif '/api/v3' in http_error.geturl():\r\n   ....\r\n```\r\n\r\n(In theory, the urls may not have 'v3' in them, but we make that assumption elsewhere already so should be ok).",
        "createdAt" : "2019-08-28T15:42:59Z",
        "updatedAt" : "2019-08-28T20:34:58Z",
        "lastEditedBy" : "fa0144fc-7424-474a-9ab5-059de28814b7",
        "tags" : [
        ]
      }
    ],
    "commit" : "058a6df0a249ae95ea132ffd68e262a46b2fc165",
    "line" : 155,
    "diffHunk" : "@@ -1,1 +1084,1088 @@        err_info = {}\n\n    if 'v3' in available_api_versions:\n        message_lines = []\n        errors = err_info.get('errors', None)"
  },
  {
    "id" : "4eeeae58-a866-4634-9f2b-1e58a4bd4288",
    "prId" : 60982,
    "prUrl" : "https://github.com/ansible/ansible/pull/60982#pullrequestreview-280928630",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3ef42dd9-017b-4b78-b142-2854f272277a",
        "parentId" : null,
        "authorId" : "7c547162-2334-4e33-a627-e146840da9ec",
        "body" : "if `errors` is not in the response then `errors` is `None` which will fail here.",
        "createdAt" : "2019-08-27T21:08:12Z",
        "updatedAt" : "2019-08-28T20:34:58Z",
        "lastEditedBy" : "7c547162-2334-4e33-a627-e146840da9ec",
        "tags" : [
        ]
      },
      {
        "id" : "bd188ee7-df32-40ee-93ae-02e9b440c60a",
        "parentId" : "3ef42dd9-017b-4b78-b142-2854f272277a",
        "authorId" : "fa0144fc-7424-474a-9ab5-059de28814b7",
        "body" : "Not sure I understand, if the response doesn't have an 'errors' field, errors will be None at line 1090 and will be set to the list with the fallback/default error.",
        "createdAt" : "2019-08-28T15:47:15Z",
        "updatedAt" : "2019-08-28T20:34:58Z",
        "lastEditedBy" : "fa0144fc-7424-474a-9ab5-059de28814b7",
        "tags" : [
        ]
      }
    ],
    "commit" : "058a6df0a249ae95ea132ffd68e262a46b2fc165",
    "line" : 163,
    "diffHunk" : "@@ -1,1 +1092,1096 @@                       'code': 'Unknown'}]\n\n        for error in errors:\n            error_msg = error.get('detail') or error.get('title') or 'Unknown error returned by Galaxy server.'\n            error_code = error.get('code') or 'Unknown'"
  },
  {
    "id" : "bb49a95e-1b13-4dea-82af-ee9778d40efa",
    "prId" : 60982,
    "prUrl" : "https://github.com/ansible/ansible/pull/60982#pullrequestreview-280452767",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bfb3f92a-f718-4748-94d4-8ec7809ac6cf",
        "parentId" : null,
        "authorId" : "7c547162-2334-4e33-a627-e146840da9ec",
        "body" : "if `return_data` is the response from `open_url`, you should be able to do `json.load(return_data)` and not worry about reading from the io reader and converting to text",
        "createdAt" : "2019-08-27T21:13:02Z",
        "updatedAt" : "2019-08-28T20:34:58Z",
        "lastEditedBy" : "7c547162-2334-4e33-a627-e146840da9ec",
        "tags" : [
        ]
      }
    ],
    "commit" : "058a6df0a249ae95ea132ffd68e262a46b2fc165",
    "line" : 90,
    "diffHunk" : "@@ -1,1 +407,411 @@\n    try:\n        data = json.loads(to_text(return_data.read(), errors='surrogate_or_strict'))\n    except Exception as e:\n        raise AnsibleError(\"Could not process data from the API server (%s): %s \" % (url, to_native(e)))"
  },
  {
    "id" : "20c5917d-cbf2-41ab-a942-bcd359ec9868",
    "prId" : 65618,
    "prUrl" : "https://github.com/ansible/ansible/pull/65618#pullrequestreview-352391142",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "56ce5252-2ba1-45ed-a8d0-cf499dfe1260",
        "parentId" : null,
        "authorId" : "2f8132dc-12f8-44dc-8b97-1cf4c1616b68",
        "body" : "The collection name needs to be verified, otherwise there will be a stack trace on line 565.\r\n```\r\n> ansible-galaxy collection verify bad -vvv\r\nansible-galaxy 2.10.0.dev0\r\n  config file = /Users/sdoran/.ansible.cfg\r\n  configured module search path = ['/usr/local/share/ansible/library']\r\n  ansible python module location = /Users/sdoran/Source/ansible/lib/ansible\r\n  executable location = /Users/sdoran/Source/ansible/bin/ansible-galaxy\r\n  python version = 3.7.4 (default, Oct 15 2019, 10:30:33) [Clang 11.0.0 (clang-1100.0.33.8)]\r\nUsing /Users/sdoran/.ansible.cfg as config file\r\nERROR! Unexpected Exception, this is probably a bug: not enough values to unpack (expected 2, got 1)\r\nthe full traceback was:\r\n\r\nTraceback (most recent call last):\r\n  File \"/Users/sdoran/Source/ansible/bin/ansible-galaxy\", line 123, in <module>\r\n    exit_code = cli.run()\r\n  File \"/Users/sdoran/Source/ansible/lib/ansible/cli/galaxy.py\", line 398, in run\r\n    context.CLIARGS['func']()\r\n  File \"/Users/sdoran/Source/ansible/lib/ansible/cli/galaxy.py\", line 841, in execute_verify\r\n    verify_collections(requirements, resolved_paths, self.api_servers, (not ignore_certs), ignore_errors)\r\n  File \"/Users/sdoran/Source/ansible/lib/ansible/galaxy/collection.py\", line 565, in verify_collections\r\n    remote_collection = CollectionRequirement.from_name(collection[0], apis, collection[1], False, parent=None)\r\n  File \"/Users/sdoran/Source/ansible/lib/ansible/galaxy/collection.py\", line 371, in from_name\r\n    namespace, name = collection.split('.', 1)\r\nValueError: not enough values to unpack (expected 2, got 1)\r\n```\r\n\r\nSomething like this should do the trick.\r\n```suggestion\r\n                    verify_collection_name(collection[0])\r\n                    b_collection = to_bytes(collection[0], errors='surrogate_or_strict')\r\n```",
        "createdAt" : "2020-02-03T17:26:33Z",
        "updatedAt" : "2020-02-13T03:26:46Z",
        "lastEditedBy" : "2f8132dc-12f8-44dc-8b97-1cf4c1616b68",
        "tags" : [
        ]
      }
    ],
    "commit" : "5486cd9be09dbdfbcf8277232cdc288e17455589",
    "line" : 98,
    "diffHunk" : "@@ -1,1 +553,557 @@\n                    local_collection = None\n                    b_collection = to_bytes(collection[0], errors='surrogate_or_strict')\n\n                    if os.path.isfile(b_collection) or urlparse(collection[0]).scheme.lower() in ['http', 'https'] or len(collection[0].split('.')) != 2:"
  }
]