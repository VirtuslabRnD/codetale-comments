[
  {
    "id" : "195a5f4b-215e-4cc1-9ee6-38a201c10f90",
    "prId" : 57106,
    "prUrl" : "https://github.com/ansible/ansible/pull/57106#pullrequestreview-255520035",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fe973467-bbd1-4647-982f-3459fee5638d",
        "parentId" : null,
        "authorId" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "body" : "Are you only doing this to support Python 2.6? Those keys are already unique.",
        "createdAt" : "2019-06-18T14:32:00Z",
        "updatedAt" : "2019-07-09T04:43:59Z",
        "lastEditedBy" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "tags" : [
        ]
      },
      {
        "id" : "a2e5f1d2-facb-41f7-b227-cc1c1051b2ac",
        "parentId" : "fe973467-bbd1-4647-982f-3459fee5638d",
        "authorId" : "7c547162-2334-4e33-a627-e146840da9ec",
        "body" : "It is done because I am using the `difference` method to find keys are that don't exist in the valid galaxy.yml keys.",
        "createdAt" : "2019-06-27T23:00:03Z",
        "updatedAt" : "2019-07-09T04:44:00Z",
        "lastEditedBy" : "7c547162-2334-4e33-a627-e146840da9ec",
        "tags" : [
        ]
      }
    ],
    "commit" : "d5577e43d8dacb3adba02056fd793f6cdfb9e0f4",
    "line" : 540,
    "diffHunk" : "@@ -1,1 +538,542 @@                           % (to_native(b_galaxy_yml_path), to_native(err)))\n\n    set_keys = set(galaxy_yml.keys())\n    missing_keys = mandatory_keys.difference(set_keys)\n    if missing_keys:"
  },
  {
    "id" : "f97e8470-b37c-4611-8128-9f400b824c5a",
    "prId" : 57106,
    "prUrl" : "https://github.com/ansible/ansible/pull/57106#pullrequestreview-255520814",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9f9e5ccf-e5b6-4cf8-826d-0cd7b275fb2c",
        "parentId" : null,
        "authorId" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "body" : "I think this approach might read simpler:\r\n```suggestion\r\n    new_galaxy_yml = dict.from_keys(optional_strings)\r\n    new_galaxy_yml.update(dict.from_keys(optional_lists), [])\r\n    new_galaxy_yml.update(dict.from_keys(optional_dicts), {})\r\n    new_galaxy_yml.update(galaxy_yml)\r\n```",
        "createdAt" : "2019-06-18T14:39:07Z",
        "updatedAt" : "2019-07-09T04:43:59Z",
        "lastEditedBy" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "tags" : [
        ]
      },
      {
        "id" : "5c026234-343e-4af0-8efb-8ffef6f6763c",
        "parentId" : "9f9e5ccf-e5b6-4cf8-826d-0cd7b275fb2c",
        "authorId" : "7c547162-2334-4e33-a627-e146840da9ec",
        "body" : "That's a bit too much for me. I still need to loop through the entries anyway for the list keys to convert a single string to `[string]`. Prefer keep the format the same there.",
        "createdAt" : "2019-06-27T23:02:50Z",
        "updatedAt" : "2019-07-09T04:44:00Z",
        "lastEditedBy" : "7c547162-2334-4e33-a627-e146840da9ec",
        "tags" : [
        ]
      }
    ],
    "commit" : "d5577e43d8dacb3adba02056fd793f6cdfb9e0f4",
    "line" : 552,
    "diffHunk" : "@@ -1,1 +550,554 @@\n    # Add the defaults if they have not been set\n    for optional_string in optional_strings:\n        if optional_string not in galaxy_yml:\n            galaxy_yml[optional_string] = None"
  },
  {
    "id" : "a3b125eb-4e3a-4320-b148-fd926b1e7262",
    "prId" : 57106,
    "prUrl" : "https://github.com/ansible/ansible/pull/57106#pullrequestreview-251161623",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "07aa7ec4-3d69-4c49-8375-d6bd1065c630",
        "parentId" : null,
        "authorId" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "body" : "maybe just\r\n```suggestion\r\n        part_boundary,\r\n        b\"--\",\r\n```",
        "createdAt" : "2019-06-18T15:01:59Z",
        "updatedAt" : "2019-07-09T04:43:59Z",
        "lastEditedBy" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "tags" : [
        ]
      }
    ],
    "commit" : "d5577e43d8dacb3adba02056fd793f6cdfb9e0f4",
    "line" : 735,
    "diffHunk" : "@@ -1,1 +733,737 @@        b\"\",\n        data,\n        b\"%s--\" % part_boundary,\n    ]\n"
  },
  {
    "id" : "1cd1fce6-bd3c-461a-b31d-a255827aeb46",
    "prId" : 57106,
    "prUrl" : "https://github.com/ansible/ansible/pull/57106#pullrequestreview-255545548",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0e8d3158-bc16-408a-b9c2-ece6e7146863",
        "parentId" : null,
        "authorId" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "body" : "May I ask you to implement an exponential backoff algorithm here? \r\nhttps://en.wikipedia.org/wiki/Exponential_backoff",
        "createdAt" : "2019-06-18T15:05:27Z",
        "updatedAt" : "2019-07-09T04:43:59Z",
        "lastEditedBy" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "tags" : [
        ]
      },
      {
        "id" : "8226481f-2c3c-44a6-80dd-9248b4647dbd",
        "parentId" : "0e8d3158-bc16-408a-b9c2-ece6e7146863",
        "authorId" : "7c547162-2334-4e33-a627-e146840da9ec",
        "body" : "Added in the latest commit with a rate of `1.5`. Will wait for a maximum of ~60 seconds before ultimately timing out as well.",
        "createdAt" : "2019-06-28T01:04:19Z",
        "updatedAt" : "2019-07-09T04:44:00Z",
        "lastEditedBy" : "7c547162-2334-4e33-a627-e146840da9ec",
        "tags" : [
        ]
      }
    ],
    "commit" : "d5577e43d8dacb3adba02056fd793f6cdfb9e0f4",
    "line" : 751,
    "diffHunk" : "@@ -1,1 +749,753 @@\n    wait = 2\n    while True:\n        resp = json.load(open_url(to_native(task_url, errors='surrogate_or_strict'), headers=headers, method='GET',\n                                  validate_certs=validate_certs))"
  },
  {
    "id" : "1849c7b6-eb09-46cc-a710-1e510726195b",
    "prId" : 57106,
    "prUrl" : "https://github.com/ansible/ansible/pull/57106#pullrequestreview-253398866",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "15f98c51-bfc0-4e81-8820-451508331cec",
        "parentId" : null,
        "authorId" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "body" : "I'd do\r\n```suggestion\r\n                if not ignore_errors:\r\n                    raise\r\n```",
        "createdAt" : "2019-06-24T13:08:11Z",
        "updatedAt" : "2019-07-09T04:43:59Z",
        "lastEditedBy" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "tags" : [
        ]
      }
    ],
    "commit" : "d5577e43d8dacb3adba02056fd793f6cdfb9e0f4",
    "line" : 455,
    "diffHunk" : "@@ -1,1 +453,457 @@                collection.install(output_path, b_temp_path)\n            except AnsibleError as err:\n                if ignore_errors:\n                    display.warning(\"Failed to install collection %s but skipping due to --ignore-errors being set. \"\n                                    \"Error: %s\" % (str(collection), to_text(err)))"
  },
  {
    "id" : "13ad6ff1-15bd-468e-8218-1fa6c54f446a",
    "prId" : 57106,
    "prUrl" : "https://github.com/ansible/ansible/pull/57106#pullrequestreview-255067357",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "65ee85c0-32c5-4bba-838d-fb360dbf3ae7",
        "parentId" : null,
        "authorId" : "659587dc-b401-4c91-aa40-a8a932100545",
        "body" : "It's unclear if i would just use --validate_certs to Validate the certs, or --validate_certs=True to validate certs.  If I just use the flags, then this an ignore_errors should remove 'Whether to...'",
        "createdAt" : "2019-06-26T20:43:52Z",
        "updatedAt" : "2019-07-09T04:43:59Z",
        "lastEditedBy" : "659587dc-b401-4c91-aa40-a8a932100545",
        "tags" : [
        ]
      },
      {
        "id" : "80bcb6c2-3654-4ab4-a977-6280ffc70545",
        "parentId" : "65ee85c0-32c5-4bba-838d-fb360dbf3ae7",
        "authorId" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "body" : "It's actually missing `--ignore-certs` CLI arg that implies `validate_certs=True` according to the code I saw...",
        "createdAt" : "2019-06-27T08:04:41Z",
        "updatedAt" : "2019-07-09T04:43:59Z",
        "lastEditedBy" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "tags" : [
        ]
      },
      {
        "id" : "ae9bfa1d-3af2-4d36-969d-25415e45587d",
        "parentId" : "65ee85c0-32c5-4bba-838d-fb360dbf3ae7",
        "authorId" : "7c547162-2334-4e33-a627-e146840da9ec",
        "body" : "Yep the internal API uses validate_certs but the actual cmdline call is `ignore-certs`.",
        "createdAt" : "2019-06-27T08:10:23Z",
        "updatedAt" : "2019-07-09T04:43:59Z",
        "lastEditedBy" : "7c547162-2334-4e33-a627-e146840da9ec",
        "tags" : [
        ]
      }
    ],
    "commit" : "d5577e43d8dacb3adba02056fd793f6cdfb9e0f4",
    "line" : 440,
    "diffHunk" : "@@ -1,1 +438,442 @@    :param servers: A list of Galaxy servers to query when searching for a collection.\n    :param validate_certs: Whether to validate the Galaxy server certificates.\n    :param ignore_errors: Whether to ignore any errors when installing the collection.\n    :param no_deps: Ignore any collection dependencies and only install the base requirements.\n    :param force: Re-install a collection if it has already been installed."
  },
  {
    "id" : "c9ced1c9-2ae1-4f43-a8f9-171f79316ef4",
    "prId" : 59121,
    "prUrl" : "https://github.com/ansible/ansible/pull/59121#pullrequestreview-263206345",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8b255799-88af-43a4-92e1-241d0b7f3414",
        "parentId" : null,
        "authorId" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "body" : "not for this PR, but we might want a 'configurable ignore facility' ala gitignore in the future",
        "createdAt" : "2019-07-17T17:29:58Z",
        "updatedAt" : "2019-07-17T17:29:58Z",
        "lastEditedBy" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "tags" : [
        ]
      }
    ],
    "commit" : "a59b05a17e345d6773dd3a38f02ceded197f4854",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +578,582 @@                                (to_bytes('{0}-{1}-*.tar.gz'.format(namespace, name)), True)])\n    b_ignore_dirs = frozenset([(b'CVS', False), (b'.bzr', False), (b'.hg', False), (b'.git', False), (b'.svn', False),\n                               (b'__pycache__', False), (b'.tox', False)])\n\n    entry_template = {"
  },
  {
    "id" : "0c66bc41-b80e-413f-ab0b-d06f6b2a76fa",
    "prId" : 59895,
    "prUrl" : "https://github.com/ansible/ansible/pull/59895#pullrequestreview-269564612",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4b4af3f9-4efc-45a2-b1b7-e894975f7f17",
        "parentId" : null,
        "authorId" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "body" : "maybe\r\n```suggestion\r\n        return to_text(str(self))\r\n```\r\n\r\ncc @abadger?",
        "createdAt" : "2019-08-01T11:47:19Z",
        "updatedAt" : "2019-08-01T11:47:19Z",
        "lastEditedBy" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "tags" : [
        ]
      }
    ],
    "commit" : "01b1bc5a477fb4e0f8361e246491c75cfe877eb0",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +85,89 @@\n    def __unicode__(self):\n        return u\"%s.%s\" % (self.namespace, self.name)\n\n    @property"
  }
]