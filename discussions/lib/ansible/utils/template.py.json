[
  {
    "id" : "da1d13ed-fe24-48aa-848f-13fb1ad0ffa5",
    "prId" : 10465,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7a87f832-41be-4dbe-9ccb-281b9843f28e",
        "parentId" : null,
        "authorId" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "body" : "This doesn't seem to handle filters.  Then again, filters are a hard problem because they could change the type of the variable intentionally.\n",
        "createdAt" : "2015-03-23T22:01:25Z",
        "updatedAt" : "2015-04-11T16:05:53Z",
        "lastEditedBy" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "tags" : [
        ]
      },
      {
        "id" : "fe2bda74-b0ac-457a-bd63-a492c6b07714",
        "parentId" : "7a87f832-41be-4dbe-9ccb-281b9843f28e",
        "authorId" : "f7322555-9540-460f-9803-b2ed2138f531",
        "body" : "Yea, I intentionally am only handling the use case of wanting to reference vars in a more complex structure and retaining type.  filters or other jinja operations would make it very hard to infer type correctly and seems more error prone without hooking deeper into Jinja's parsing logic.\n",
        "createdAt" : "2015-03-26T17:48:19Z",
        "updatedAt" : "2015-04-11T16:05:53Z",
        "lastEditedBy" : "f7322555-9540-460f-9803-b2ed2138f531",
        "tags" : [
        ]
      }
    ],
    "commit" : "0abcebf1e4763a7e3a1f81b1c8ea5a195de55064",
    "line" : null,
    "diffHunk" : "@@ -1,1 +346,350 @@                    if isinstance(resolved_val, (bool, Number)):\n                        return resolved_val\n\n        def my_finalize(thing):\n            return thing if thing is not None else ''"
  }
]