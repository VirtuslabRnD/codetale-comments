[
  {
    "id" : "b7ad3a51-fad1-48f4-9a6d-0eb778a52e92",
    "prId" : 17813,
    "prUrl" : "https://github.com/ansible/ansible/pull/17813#pullrequestreview-2202630",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fd3587df-aab2-435f-a9c3-ac86025311e4",
        "parentId" : null,
        "authorId" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "body" : "i would move this into the 'else' below when it does not match 'smart', also probably should be .lower()\n",
        "createdAt" : "2016-09-29T18:34:08Z",
        "updatedAt" : "2016-09-29T19:19:06Z",
        "lastEditedBy" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "tags" : [
        ]
      },
      {
        "id" : "1621b7b7-8c1b-4f6a-8d89-af1fc1e6579b",
        "parentId" : "fd3587df-aab2-435f-a9c3-ac86025311e4",
        "authorId" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "body" : "also need to return AnsibleOptionsError if the value of the config is incorrect\n",
        "createdAt" : "2016-09-29T18:35:21Z",
        "updatedAt" : "2016-09-29T19:19:06Z",
        "lastEditedBy" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "tags" : [
        ]
      }
    ],
    "commit" : "5fcbd38bd959241f1828dc5b70db9712ec44d753",
    "line" : 50,
    "diffHunk" : "@@ -1,1 +647,651 @@\n        # since this can be a non-bool now, we need to handle it correctly\n        scp_if_ssh = C.DEFAULT_SCP_IF_SSH\n        if not isinstance(scp_if_ssh, bool):\n            scp_if_ssh = scp_if_ssh.lower()"
  },
  {
    "id" : "279b9ebd-ef50-4d96-b37d-e72dfe69251c",
    "prId" : 17813,
    "prUrl" : "https://github.com/ansible/ansible/pull/17813#pullrequestreview-2233731",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0acd718e-df3e-4c52-a3d7-da66db078381",
        "parentId" : null,
        "authorId" : "fa0144fc-7424-474a-9ab5-059de28814b7",
        "body" : "I'd move this block into it's own method since fetch_file will likely need it as well.\n",
        "createdAt" : "2016-09-29T21:23:56Z",
        "updatedAt" : "2016-09-29T21:44:30Z",
        "lastEditedBy" : "fa0144fc-7424-474a-9ab5-059de28814b7",
        "tags" : [
        ]
      }
    ],
    "commit" : "5fcbd38bd959241f1828dc5b70db9712ec44d753",
    "line" : 51,
    "diffHunk" : "@@ -1,1 +648,652 @@        # since this can be a non-bool now, we need to handle it correctly\n        scp_if_ssh = C.DEFAULT_SCP_IF_SSH\n        if not isinstance(scp_if_ssh, bool):\n            scp_if_ssh = scp_if_ssh.lower()\n            if scp_if_ssh in BOOLEANS:"
  },
  {
    "id" : "9e794fe5-e225-465e-bcfa-8f89299ae1df",
    "prId" : 17813,
    "prUrl" : "https://github.com/ansible/ansible/pull/17813#pullrequestreview-2233731",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d1f8e73f-2894-45e3-9635-1eb941e81a6b",
        "parentId" : null,
        "authorId" : "fa0144fc-7424-474a-9ab5-059de28814b7",
        "body" : "may be cleaner to build the list of methods, iterate on that list to build a list of (cmd,in_data,checkrc) for each method, then iterate over that list when invoking it. something like:\n\n``` python\nmethod_names =['sftp']\nif scp_if_ssh == 'smart':\n     method_names.append('scp')\nelif scp_if_ssh:\n     method_names = ['scp']\n\nmethods = []\nfor method_name in method_names:\n    if method_name == 'sftp':\n          methods.append(self._build_sftp_put_command(host, in_path, out_path))\n   if method_name == 'scp':\n         methods.append(self._build_scp_put_command(host, in_path, out_path))\n\nfor cmd, in_data, checkrc, method in methods:\n    (returncode, stdout, stderr) = self._run(cmd, in_data, checkrc)\n    if returncode == 0:\n         return\n   if scp_if_ssh == 'smart':\n         <the display warning/debug code here>\n\n# nothing succeeded and returned\nraise AnsibleError...\n```\n",
        "createdAt" : "2016-09-29T21:43:21Z",
        "updatedAt" : "2016-09-29T21:44:30Z",
        "lastEditedBy" : "fa0144fc-7424-474a-9ab5-059de28814b7",
        "tags" : [
        ]
      }
    ],
    "commit" : "5fcbd38bd959241f1828dc5b70db9712ec44d753",
    "line" : 74,
    "diffHunk" : "@@ -1,1 +671,675 @@                cmd = self._build_command('scp', in_path, u'{0}:{1}'.format(host, pipes.quote(out_path)))\n                in_data = None\n\n            in_data = to_bytes(in_data, nonstring='passthru')\n            (returncode, stdout, stderr) = self._run(cmd, in_data, checkrc=False)"
  },
  {
    "id" : "023c0099-e98d-4df6-a98e-662045112a16",
    "prId" : 18614,
    "prUrl" : "https://github.com/ansible/ansible/pull/18614#pullrequestreview-13475467",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "191d6655-7f85-4529-820a-3fb6052e83f0",
        "parentId" : null,
        "authorId" : "c22b39e3-76ad-47da-ad88-2bc087f3cdc1",
        "body" : "is this right? src= in fetch module is still the path for the file to be copied. eg:\r\n\r\nfetch: src=/etc/resolv.conf dest=/tmp\r\n\r\nwould become\r\n\r\nscp {{remote_hostname}}:/etc/resolv.conf /tmp\r\n\r\nSo the correct translation would be:\r\n\r\ncmd = self._build_command('scp', u'{0}:{1}'.format(host, shlex_quote(in_path)), out_path)\r\n\r\n// Anderson",
        "createdAt" : "2016-11-29T10:13:27Z",
        "updatedAt" : "2016-11-29T10:13:27Z",
        "lastEditedBy" : "c22b39e3-76ad-47da-ad88-2bc087f3cdc1",
        "tags" : [
        ]
      },
      {
        "id" : "d202121e-1b2e-4f1d-9f93-12ada3a673bf",
        "parentId" : "191d6655-7f85-4529-820a-3fb6052e83f0",
        "authorId" : "fe56cc8c-7148-4639-9b94-60459f7b5106",
        "body" : "I guess u are right. let me test",
        "createdAt" : "2016-11-29T17:04:10Z",
        "updatedAt" : "2016-11-29T17:04:10Z",
        "lastEditedBy" : "fe56cc8c-7148-4639-9b94-60459f7b5106",
        "tags" : [
        ]
      },
      {
        "id" : "20717caf-277a-49aa-a3f0-8412d3a51109",
        "parentId" : "191d6655-7f85-4529-820a-3fb6052e83f0",
        "authorId" : "c22b39e3-76ad-47da-ad88-2bc087f3cdc1",
        "body" : "@albertomurillo could you test it?",
        "createdAt" : "2016-12-18T23:42:11Z",
        "updatedAt" : "2016-12-18T23:42:12Z",
        "lastEditedBy" : "c22b39e3-76ad-47da-ad88-2bc087f3cdc1",
        "tags" : [
        ]
      }
    ],
    "commit" : "cfd8b6640874d2b22f99412c1d83c32150e70dfb",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +630,634 @@            elif method == 'scp':\n                if sftp_action == 'get':\n                    cmd = self._build_command('scp', u'{0}:{1}'.format(host, shlex_quote(out_path)), in_path)\n                else:\n                    cmd = self._build_command('scp', in_path, u'{0}:{1}'.format(host, shlex_quote(out_path)))"
  },
  {
    "id" : "8b9167cd-fd5c-4cbd-a5c9-b4ce8147744c",
    "prId" : 29099,
    "prUrl" : "https://github.com/ansible/ansible/pull/29099#pullrequestreview-61316410",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "71e3a150-1b17-49b7-82cf-118f08fe7e15",
        "parentId" : null,
        "authorId" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "body" : "wouldn't calling `self.reset` be simpler?",
        "createdAt" : "2017-09-07T17:27:33Z",
        "updatedAt" : "2017-09-07T17:27:39Z",
        "lastEditedBy" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "tags" : [
        ]
      },
      {
        "id" : "e5edbd2c-ebbf-40b8-bd81-81fc44f6a67e",
        "parentId" : "71e3a150-1b17-49b7-82cf-118f08fe7e15",
        "authorId" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "body" : "also .. no need to spawn another ssh client attached to socket for each attempt",
        "createdAt" : "2017-09-07T17:29:13Z",
        "updatedAt" : "2017-09-07T17:29:13Z",
        "lastEditedBy" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "tags" : [
        ]
      },
      {
        "id" : "17f15401-22c2-4443-ae82-1f7bd88d37b8",
        "parentId" : "71e3a150-1b17-49b7-82cf-118f08fe7e15",
        "authorId" : "4b69a0b5-ac6f-45e9-9507-dd1385182f29",
        "body" : "`self.reset` won't create a new fd/pipe for sshpass.  `self.sshpass_pipe` is only created in `_build_command`, and there is a possibility that the fd changes between creation of the pipe.\r\n\r\nI'm not sure what your comment about `also .. no need to spawn another ssh client attached to socket for each attempt` means.  Effectively all this does is open a new pipe that would have been closed, and updates the command to reference the new fd.\r\n\r\nOtherwise without this, the fd/pipe is closed, and without updating the command to reference the new fd, we may be referencing the wrong fd",
        "createdAt" : "2017-09-07T17:49:20Z",
        "updatedAt" : "2017-09-07T17:49:20Z",
        "lastEditedBy" : "4b69a0b5-ac6f-45e9-9507-dd1385182f29",
        "tags" : [
        ]
      },
      {
        "id" : "3a47d0c5-81d1-4eee-9c7c-d5841d6fb56d",
        "parentId" : "71e3a150-1b17-49b7-82cf-118f08fe7e15",
        "authorId" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "body" : "nmvd, was confusing the sshpass pipe with ssh one ... but we probably need to regen in reset also.",
        "createdAt" : "2017-09-07T18:31:30Z",
        "updatedAt" : "2017-09-07T18:31:31Z",
        "lastEditedBy" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "tags" : [
        ]
      },
      {
        "id" : "6fc2d4d3-78f6-4ce8-a934-2ba4834648d2",
        "parentId" : "71e3a150-1b17-49b7-82cf-118f08fe7e15",
        "authorId" : "4b69a0b5-ac6f-45e9-9507-dd1385182f29",
        "body" : "`reset` should not be impacted.  The next time that `_build_command` is used to create a command for a new task it should be ok.  retries is impacted, since we just re-use the already created command from `_build_command`, we don't re-build the command for each retry.",
        "createdAt" : "2017-09-07T18:45:26Z",
        "updatedAt" : "2017-09-07T18:45:26Z",
        "lastEditedBy" : "4b69a0b5-ac6f-45e9-9507-dd1385182f29",
        "tags" : [
        ]
      }
    ],
    "commit" : "cfa864f48dac9d0573fbe5df9f3edbcac1f3120c",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +200,204 @@        cmd_summary = \"%s...\" % args[0]\n        for attempt in range(remaining_tries):\n            cmd = args[0]\n            if attempt != 0 and self._play_context.password and isinstance(cmd, list):\n                # If this is a retry, the fd/pipe for sshpass is closed, and we need a new one"
  },
  {
    "id" : "2bfe80da-35a7-4bda-a535-9bbbfc12b62d",
    "prId" : 32829,
    "prUrl" : "https://github.com/ansible/ansible/pull/32829#pullrequestreview-142082068",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8ce78e3b-56c3-476c-b3e4-969eeaded728",
        "parentId" : null,
        "authorId" : "311820dd-fcb9-46df-a201-9c0e7d6fac58",
        "body" : "This should probably change in one of two ways to allow PKCS11 support to be enabled on a per-host basis:\r\na) add `vars: { name=ansible_ssh_pkcs11_provider }` to make the value settable in inventory at the host/group level \r\nb) add a second config value with vars/ini/env/yaml values like `pkcs11_enabled`\r\n\r\nWhile the actual provider configuration makes sense as a global config/env option (since the provider itself is unlikely to vary by host), there should probably be a separate config+env+var option to turn it on for a given host. Otherwise it's an all-or-none proposition for using it, where in complex environments, you may need both in the same Ansible run. Two options is a bit more hassle, but would allow the global configuration of the provider while hosts could still opt in/out individually (or by group). \r\n\r\nThis could also allow you to add a warning that the token PIN is required with PKCS11 (rather than silently failing to auth as it would now by bypassing the PKCS11 path entirely).",
        "createdAt" : "2018-07-27T23:38:02Z",
        "updatedAt" : "2021-03-14T02:51:31Z",
        "lastEditedBy" : "311820dd-fcb9-46df-a201-9c0e7d6fac58",
        "tags" : [
        ]
      },
      {
        "id" : "a6fd745f-638e-42ba-a531-176ea50c05cf",
        "parentId" : "8ce78e3b-56c3-476c-b3e4-969eeaded728",
        "authorId" : "3093fb3e-86a0-4b72-86de-78b905c3ee2b",
        "body" : "I went with option a (at least I think I did, as a first time contributor some of the Ansible internals are a little fuzzy).  If you specify the pkcs11 provider then pkcs11 is enabled, if you don't specify the provider then its disabled. I could detect if pkcs11 provider was used but no password was provided, I could print an error that a password/pin is required.  I am trying to avoid adding too many variables, it seems that if you specify a pkcs11_provider then its safe to assume your using pkcs11.  Let me know what you think.",
        "createdAt" : "2018-07-31T18:16:14Z",
        "updatedAt" : "2021-03-14T02:51:31Z",
        "lastEditedBy" : "3093fb3e-86a0-4b72-86de-78b905c3ee2b",
        "tags" : [
        ]
      }
    ],
    "commit" : "db00bd3cf982ddeac8aa601f8b3e51b1a99b740c",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +325,329 @@          - name: timeout\n        type: integer\n      pkcs11_provider:\n        version_added: '2.12'\n        default: \"\""
  },
  {
    "id" : "96207e07-0301-4b11-9af7-af071a62d91c",
    "prId" : 39245,
    "prUrl" : "https://github.com/ansible/ansible/pull/39245#pullrequestreview-115968607",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a2c89afb-6656-4a42-ae7d-c74547662298",
        "parentId" : null,
        "authorId" : "4b69a0b5-ac6f-45e9-9507-dd1385182f29",
        "body" : "This looks like a good change, however, for consistency with the rest of the code, I think we should use `self._play_context.ssh_executable` until we decide to switch the connection plugin in full over to using `get_option`.",
        "createdAt" : "2018-04-27T14:49:18Z",
        "updatedAt" : "2018-04-27T14:49:19Z",
        "lastEditedBy" : "4b69a0b5-ac6f-45e9-9507-dd1385182f29",
        "tags" : [
        ]
      },
      {
        "id" : "af7cd31b-bb4d-40ab-956c-7c69d702dd1f",
        "parentId" : "a2c89afb-6656-4a42-ae7d-c74547662298",
        "authorId" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "body" : "in the process of doing so, play_context should not really be the main source of truth anymore ",
        "createdAt" : "2018-04-27T14:54:06Z",
        "updatedAt" : "2018-04-27T14:54:06Z",
        "lastEditedBy" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "tags" : [
        ]
      }
    ],
    "commit" : "2cc69e08be8af0ad3d075dfa67fd40f270709678",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +678,682 @@\n        state = states.index('ready_to_send')\n        if to_bytes(self.get_option('ssh_executable')) in cmd and sudoable:\n            if self._play_context.prompt:\n                # We're requesting escalation with a password, so we have to"
  },
  {
    "id" : "5472d074-4294-4035-8c6e-8947b529d5f4",
    "prId" : 41716,
    "prUrl" : "https://github.com/ansible/ansible/pull/41716#pullrequestreview-130814085",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2640a1e0-4fe6-4d06-8341-f662ab3da54d",
        "parentId" : null,
        "authorId" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "body" : "You can raise from here.",
        "createdAt" : "2018-06-20T16:09:26Z",
        "updatedAt" : "2018-07-03T17:28:57Z",
        "lastEditedBy" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "tags" : [
        ]
      },
      {
        "id" : "bf1b2588-56e0-417e-97bd-5a5f67e666ed",
        "parentId" : "2640a1e0-4fe6-4d06-8341-f662ab3da54d",
        "authorId" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "body" : "I don't see how.  Could you explain?",
        "createdAt" : "2018-06-20T16:42:13Z",
        "updatedAt" : "2018-07-03T17:28:57Z",
        "lastEditedBy" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "tags" : [
        ]
      },
      {
        "id" : "b16d1380-3b55-4683-8d96-ffe37f9a419a",
        "parentId" : "2640a1e0-4fe6-4d06-8341-f662ab3da54d",
        "authorId" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "body" : "Oh.. I swapped the logic in my mind. Yeah, no way w/o `else:`.\r\n(I still think that semantically `all()` reads more obvious)",
        "createdAt" : "2018-06-21T13:27:35Z",
        "updatedAt" : "2018-07-03T17:28:57Z",
        "lastEditedBy" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "tags" : [
        ]
      }
    ],
    "commit" : "2c5a37362e6223ea15a92af04048356a7240d510",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +354,358 @@                    for signature in NOT_SSH_ERRORS:\n                        if signature in return_tuple[1]:\n                            SSH_ERROR = False\n                            break\n"
  },
  {
    "id" : "f4a1a653-bac6-4072-97cf-b84d8cdbc18b",
    "prId" : 47732,
    "prUrl" : "https://github.com/ansible/ansible/pull/47732#pullrequestreview-204946820",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7b463194-50c9-4b10-b4d1-0d0356981f4e",
        "parentId" : null,
        "authorId" : "7c547162-2334-4e33-a627-e146840da9ec",
        "body" : "Change above comment to explicitly mention that `chcp.com` is to change the encoding and `65001 == utf-8`.",
        "createdAt" : "2019-02-18T20:41:58Z",
        "updatedAt" : "2019-03-07T19:45:07Z",
        "lastEditedBy" : "7c547162-2334-4e33-a627-e146840da9ec",
        "tags" : [
        ]
      }
    ],
    "commit" : "1979c6116137d69b96467f943c2a23183b112d00",
    "line" : 114,
    "diffHunk" : "@@ -1,1 +1153,1157 @@            # Make sure our first command is to set the console encoding to\n            # utf-8, this must be done via chcp to get utf-8 (65001)\n            cmd_parts = [\"chcp.com\", \"65001\", self._shell._SHELL_REDIRECT_ALLNULL, self._shell._SHELL_AND]\n            cmd_parts.extend(self._shell._encode_script(cmd, as_list=True, strict_mode=False, preserve_rc=False))\n            cmd = ' '.join(cmd_parts)"
  },
  {
    "id" : "085f0ace-ed6f-446f-a289-868f24954ee4",
    "prId" : 50776,
    "prUrl" : "https://github.com/ansible/ansible/pull/50776#pullrequestreview-191891330",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e273a6be-f48e-4d1d-9988-fed1b0dd9f4c",
        "parentId" : null,
        "authorId" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "body" : "minor bikeshed: might be more effective to do a range check? >= 1 and <= 6? since 5 has already been taken care of",
        "createdAt" : "2019-01-11T18:08:28Z",
        "updatedAt" : "2019-01-16T22:28:52Z",
        "lastEditedBy" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "tags" : [
        ]
      },
      {
        "id" : "d27edb77-9e22-4968-955f-89345e2dffaa",
        "parentId" : "e273a6be-f48e-4d1d-9988-fed1b0dd9f4c",
        "authorId" : "2f8132dc-12f8-44dc-8b97-1cf4c1616b68",
        "body" : "The equivalent statement using comparsions seems a bit harder to read and understand:\r\n\r\n```python\r\nelif 1 <= return_tuple[0] < 5 or return_tuple[0] == 6:\r\n    ...\r\n```\r\n\r\nMicroperformance testing with `timeit` shows the comparison as slightly faster, but think the easier to read/maintain syntax makes it worth the very minor performance difference.",
        "createdAt" : "2019-01-11T21:38:13Z",
        "updatedAt" : "2019-01-16T22:28:52Z",
        "lastEditedBy" : "2f8132dc-12f8-44dc-8b97-1cf4c1616b68",
        "tags" : [
        ]
      },
      {
        "id" : "427aceeb-8ca3-4881-af99-455a39bcd88d",
        "parentId" : "e273a6be-f48e-4d1d-9988-fed1b0dd9f4c",
        "authorId" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "body" : "`elif 1 <= return_tuple[0] <= 6:` the 5 was already handled, but yeah, as i said, not a blocker this is tiny possible perf gain.",
        "createdAt" : "2019-01-11T22:05:36Z",
        "updatedAt" : "2019-01-16T22:28:52Z",
        "lastEditedBy" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "tags" : [
        ]
      },
      {
        "id" : "b4d099fa-1352-428b-9066-3d9a53d4cdec",
        "parentId" : "e273a6be-f48e-4d1d-9988-fed1b0dd9f4c",
        "authorId" : "2f8132dc-12f8-44dc-8b97-1cf4c1616b68",
        "body" : "Ok, I see. The `if` removes the need to exclude it from the comparison.",
        "createdAt" : "2019-01-11T22:30:10Z",
        "updatedAt" : "2019-01-16T22:28:52Z",
        "lastEditedBy" : "2f8132dc-12f8-44dc-8b97-1cf4c1616b68",
        "tags" : [
        ]
      }
    ],
    "commit" : "abba0c68dc4427e29c4e7e776e51e532eda8e02b",
    "line" : 46,
    "diffHunk" : "@@ -1,1 +330,334 @@        # sshpass returns codes are 1-6. We handle 5 previously, so this catches other scenarios.\n        # No exception is raised, so the connection is retried.\n        elif return_tuple[0] in [1, 2, 3, 4, 6]:\n            msg = 'sshpass error:'\n            if no_log:"
  },
  {
    "id" : "8508501f-75ad-46b9-85af-673268578493",
    "prId" : 53534,
    "prUrl" : "https://github.com/ansible/ansible/pull/53534#pullrequestreview-212477941",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b48c04a1-bec5-47e3-932b-de2ee8876a3c",
        "parentId" : null,
        "authorId" : "0fd34a17-8cd9-4bb2-803c-da934539c7f5",
        "body" : "The exception will be ignored if it does not match the condition. Is this expected?",
        "createdAt" : "2019-03-08T20:48:58Z",
        "updatedAt" : "2019-03-08T20:51:27Z",
        "lastEditedBy" : "0fd34a17-8cd9-4bb2-803c-da934539c7f5",
        "tags" : [
        ]
      },
      {
        "id" : "f168e729-3c31-4b23-ab31-e82045872e1a",
        "parentId" : "b48c04a1-bec5-47e3-932b-de2ee8876a3c",
        "authorId" : "4b69a0b5-ac6f-45e9-9507-dd1385182f29",
        "body" : "This is expected.  This exception should only be raised when the ssh process is still alive.  If the ssh process is dead, the exception should not be raised, and instead, we will end up using the error from the ssh process.\r\n\r\nError before this PR:\r\n```\r\nvivo | UNREACHABLE! => {\r\n    \"changed\": false,\r\n    \"msg\": \"SSH Error: data could not be sent to remote host \\\"vivo\\\". Make sure this host can be reached over ssh\",\r\n    \"unreachable\": true\r\n}\r\n```\r\n\r\nError with this PR (which is the correct error):\r\n```\r\nvivo | FAILED! => {\r\n    \"changed\": false,\r\n    \"module_stderr\": \"/bin/sh: 1: /usr/bin/missing: not found\\n\",\r\n    \"module_stdout\": \"\",\r\n    \"msg\": \"The module failed to execute correctly, you probably need to set the interpreter.\\nSee stdout/stderr for the exact error\",\r\n    \"rc\": 127\r\n}\r\n```",
        "createdAt" : "2019-03-08T21:01:59Z",
        "updatedAt" : "2019-03-08T21:01:59Z",
        "lastEditedBy" : "4b69a0b5-ac6f-45e9-9507-dd1385182f29",
        "tags" : [
        ]
      }
    ],
    "commit" : "7aeec0077a99b196993056b129c09bc85cf5efaf",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +685,689 @@                    'SSH Error: data could not be sent to remote host \"%s\". Make sure this host can be reached '\n                    'over ssh' % self.host\n                )\n\n        display.debug('Sent initial data (%d bytes)' % len(in_data))"
  },
  {
    "id" : "4495f2d7-bc55-4a92-999f-6594f5e351cb",
    "prId" : 56460,
    "prUrl" : "https://github.com/ansible/ansible/pull/56460#pullrequestreview-240726864",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "158b5916-43c3-4af7-8056-5f3598935d4a",
        "parentId" : null,
        "authorId" : "b80275b8-2ff9-4c46-93e3-f47973c8fa5e",
        "body" : "Why remove the `SSH Error:` prefix here, but not below? You should probably just leave it here instead of removing it",
        "createdAt" : "2019-05-22T15:44:02Z",
        "updatedAt" : "2019-05-22T15:54:42Z",
        "lastEditedBy" : "b80275b8-2ff9-4c46-93e3-f47973c8fa5e",
        "tags" : [
        ]
      },
      {
        "id" : "5302ff51-528b-4a0e-b38d-d6c199902b15",
        "parentId" : "158b5916-43c3-4af7-8056-5f3598935d4a",
        "authorId" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "body" : "we already add an [ERROR] and 'connection name' ... seemed redundant, but i missed the other one",
        "createdAt" : "2019-05-22T15:53:38Z",
        "updatedAt" : "2019-05-22T15:54:42Z",
        "lastEditedBy" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "tags" : [
        ]
      }
    ],
    "commit" : "a65ae55c3494b05a33880121ef2431c6ebc1d94c",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +694,698 @@            if getattr(ssh_process, 'returncode', None) is None:\n                raise AnsibleConnectionFailure(\n                    'Data could not be sent to remote host \"%s\". Make sure this host can be reached '\n                    'over ssh: %s' % (self.host, to_native(e)), orig_exc=e\n                )"
  },
  {
    "id" : "b9c6262c-7a6f-4cbe-8f2a-bfd0785f944e",
    "prId" : 57850,
    "prUrl" : "https://github.com/ansible/ansible/pull/57850#pullrequestreview-251199817",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "44e2e7b4-75f1-4edf-b9b7-c1eff43c4959",
        "parentId" : null,
        "authorId" : "4b69a0b5-ac6f-45e9-9507-dd1385182f29",
        "body" : "This is somewhat unrelated, but I realized it was wrong when fixing the `display.debug` that comes next.",
        "createdAt" : "2019-06-18T15:58:46Z",
        "updatedAt" : "2019-06-18T15:58:46Z",
        "lastEditedBy" : "4b69a0b5-ac6f-45e9-9507-dd1385182f29",
        "tags" : [
        ]
      }
    ],
    "commit" : "08737ec0d36ecd771f39384ddcd9074e7daae13d",
    "line" : 123,
    "diffHunk" : "@@ -1,1 +838,842 @@                state = states.index('awaiting_prompt')\n                display.debug(u'Initial state: %s: %s' % (states[state], to_text(prompt)))\n            elif self._play_context.become and self.become.success:\n                # We're requesting escalation without a password, so we have to\n                # detect success/failure before sending any initial data."
  },
  {
    "id" : "034035ab-6171-4c05-a70a-12d9aa00c195",
    "prId" : 57850,
    "prUrl" : "https://github.com/ansible/ansible/pull/57850#pullrequestreview-251203072",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f84675c5-4a0a-444a-b62c-b16a269eb76f",
        "parentId" : null,
        "authorId" : "4b69a0b5-ac6f-45e9-9507-dd1385182f29",
        "body" : "This `msg` (and the 2 above in this block) leads to a display. All others lead to an exception.",
        "createdAt" : "2019-06-18T16:04:04Z",
        "updatedAt" : "2019-06-18T16:04:23Z",
        "lastEditedBy" : "4b69a0b5-ac6f-45e9-9507-dd1385182f29",
        "tags" : [
        ]
      }
    ],
    "commit" : "08737ec0d36ecd771f39384ddcd9074e7daae13d",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +361,365 @@            msg = u'{0} <error censored due to no log>'.format(msg)\n        else:\n            msg = u'{0} {1}'.format(msg, to_text(return_tuple[2]).rstrip())\n        display.vvv(msg, host=host)\n"
  },
  {
    "id" : "b5723672-579d-4100-81a4-6ee156916222",
    "prId" : 58121,
    "prUrl" : "https://github.com/ansible/ansible/pull/58121#pullrequestreview-252442010",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4f7e180f-3575-47f7-8332-a6c85ee2ab70",
        "parentId" : null,
        "authorId" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "body" : "It's possible for this to traceback on Python2 if sshpass was used and we go through the code path here: https://github.com/ansible/ansible/pull/58121/files#diff-2cdbb4c74e2af35eda8ddf643f904b1aR336\r\n\r\nUse a text string in that code path to avoid the chance of failure.",
        "createdAt" : "2019-06-20T17:48:18Z",
        "updatedAt" : "2019-06-20T17:48:18Z",
        "lastEditedBy" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "tags" : [
        ]
      },
      {
        "id" : "0bbafdfb-d0de-46f4-921c-2fa11ba438b9",
        "parentId" : "4f7e180f-3575-47f7-8332-a6c85ee2ab70",
        "authorId" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "body" : "Actually scratch that... I'm wrong about that because msg is reset just above this.  However, it looks like the stuff in the code path I mentioned above doesn't have any effect (because we're overwriting it in this conditonal block).",
        "createdAt" : "2019-06-20T17:49:51Z",
        "updatedAt" : "2019-06-20T17:49:52Z",
        "lastEditedBy" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "tags" : [
        ]
      },
      {
        "id" : "22acd6ef-b46d-4ee5-93d5-b18f0fa23bc6",
        "parentId" : "4f7e180f-3575-47f7-8332-a6c85ee2ab70",
        "authorId" : "4b69a0b5-ac6f-45e9-9507-dd1385182f29",
        "body" : "Hrm, you are right. It looks like we are missing a `raise` after line 340.  I'll look into that in a separate PR at a later date.  I'll log an issue for it so it's not lost.  https://github.com/ansible/ansible/issues/58133",
        "createdAt" : "2019-06-20T17:52:37Z",
        "updatedAt" : "2019-06-20T17:56:17Z",
        "lastEditedBy" : "4b69a0b5-ac6f-45e9-9507-dd1385182f29",
        "tags" : [
        ]
      }
    ],
    "commit" : "394b5268dd5baf5d8988fa4b0642eb74f9e0ffbd",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +359,363 @@        msg = u\"Failed to connect to the host via ssh:\"\n        if no_log:\n            msg = u'{0} <error censored due to no log>'.format(msg)\n        else:\n            msg = u'{0} {1}'.format(msg, to_text(return_tuple[2]).rstrip())"
  },
  {
    "id" : "e2685270-503e-427a-bb42-cef9770c4716",
    "prId" : 68874,
    "prUrl" : "https://github.com/ansible/ansible/pull/68874#pullrequestreview-394765397",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3df14cac-56f6-4172-bcc8-c8bfb8e8ec31",
        "parentId" : null,
        "authorId" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "body" : "version_added for the top entry, not just the var",
        "createdAt" : "2020-04-16T14:07:54Z",
        "updatedAt" : "2020-05-18T20:27:09Z",
        "lastEditedBy" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "tags" : [
        ]
      },
      {
        "id" : "57bfc21f-1bc4-4f8f-ac61-96c707950319",
        "parentId" : "3df14cac-56f6-4172-bcc8-c8bfb8e8ec31",
        "authorId" : "442212cb-3c29-4a71-98b5-cbd0b20c8c17",
        "body" : "Oops, fixed.",
        "createdAt" : "2020-04-16T15:45:20Z",
        "updatedAt" : "2020-05-18T20:27:09Z",
        "lastEditedBy" : "442212cb-3c29-4a71-98b5-cbd0b20c8c17",
        "tags" : [
        ]
      }
    ],
    "commit" : "fd3c3f386d4e49aedb016550d3328ec8861d68e5",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +49,53 @@              - name: ansible_ssh_pass\n              - name: ansible_ssh_password\n      sshpass_prompt:\n          description: Password prompt that sshpass should search for. Supported by sshpass 1.06 and up.\n          default: ''"
  },
  {
    "id" : "b2c45f41-e4bf-4c40-9464-bbbecacfe1c8",
    "prId" : 68874,
    "prUrl" : "https://github.com/ansible/ansible/pull/68874#pullrequestreview-394790659",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c32603af-390f-4f13-a251-8a0129813694",
        "parentId" : null,
        "authorId" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "body" : "is not None, since it default to null, though you might want to treat '' specifically or make that the default.",
        "createdAt" : "2020-04-16T14:34:32Z",
        "updatedAt" : "2020-05-18T20:27:09Z",
        "lastEditedBy" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "tags" : [
        ]
      },
      {
        "id" : "413f3c16-8c80-4e3a-b03c-f6468683f170",
        "parentId" : "c32603af-390f-4f13-a251-8a0129813694",
        "authorId" : "442212cb-3c29-4a71-98b5-cbd0b20c8c17",
        "body" : "Made `''` the default.",
        "createdAt" : "2020-04-16T16:14:03Z",
        "updatedAt" : "2020-05-18T20:27:09Z",
        "lastEditedBy" : "442212cb-3c29-4a71-98b5-cbd0b20c8c17",
        "tags" : [
        ]
      }
    ],
    "commit" : "fd3c3f386d4e49aedb016550d3328ec8861d68e5",
    "line" : 45,
    "diffHunk" : "@@ -1,1 +581,585 @@\n            password_prompt = self.get_option('sshpass_prompt')\n            if password_prompt:\n                b_command += [b'-P', to_bytes(password_prompt, errors='surrogate_or_strict')]\n"
  },
  {
    "id" : "57ca6235-43e0-45af-a720-c7e53e9b4c2b",
    "prId" : 68874,
    "prUrl" : "https://github.com/ansible/ansible/pull/68874#pullrequestreview-413901238",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0bdf9e45-a95e-4a29-9837-66cc6f834352",
        "parentId" : null,
        "authorId" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "body" : "the pattern would be `ansilbe_ssh_sshpass_prompt` .. but not a blocker",
        "createdAt" : "2020-05-18T20:03:01Z",
        "updatedAt" : "2020-05-18T20:27:09Z",
        "lastEditedBy" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "tags" : [
        ]
      }
    ],
    "commit" : "fd3c3f386d4e49aedb016550d3328ec8861d68e5",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +58,62 @@              - name: ANSIBLE_SSHPASS_PROMPT\n          vars:\n              - name: ansible_sshpass_prompt\n          version_added: '2.10'\n      ssh_args:"
  },
  {
    "id" : "ca1bfa65-feeb-4947-8d81-8090ffb5354f",
    "prId" : 69920,
    "prUrl" : "https://github.com/ansible/ansible/pull/69920#pullrequestreview-425638665",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b7cb8f06-4f75-4d79-9fcc-742e969ac9d8",
        "parentId" : null,
        "authorId" : "a16806ae-f6f7-4b0b-b353-5d14ed84b6df",
        "body" : "@bcoca Is this going to be enabled in 2.10? It is not in 2.9\r\n\r\nThank you!",
        "createdAt" : "2020-06-05T21:29:47Z",
        "updatedAt" : "2020-06-11T14:44:48Z",
        "lastEditedBy" : "a16806ae-f6f7-4b0b-b353-5d14ed84b6df",
        "tags" : [
        ]
      },
      {
        "id" : "107b5a35-fdfd-488e-b8c8-979fd6e6035e",
        "parentId" : "b7cb8f06-4f75-4d79-9fcc-742e969ac9d8",
        "authorId" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "body" : "we'll see, its grey area on the bugfix, will talk with release managers",
        "createdAt" : "2020-06-05T21:35:34Z",
        "updatedAt" : "2020-06-11T14:44:48Z",
        "lastEditedBy" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "tags" : [
        ]
      }
    ],
    "commit" : "4d5def6acf28b6222cf3bc1a77c2f4f60267c67c",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +203,207 @@            - name: ANSIBLE_SSH_PIPELINING\n          ini:\n            - section: defaults\n              key: pipelining\n            - section: ssh_connection"
  }
]