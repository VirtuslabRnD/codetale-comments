[
  {
    "id" : "b55c694b-5493-4d21-9e72-03b2f723168e",
    "prId" : 66604,
    "prUrl" : "https://github.com/ansible/ansible/pull/66604#pullrequestreview-352731025",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ae8974d5-5252-4e7f-8a78-a623eb63ddf5",
        "parentId" : null,
        "authorId" : "7c547162-2334-4e33-a627-e146840da9ec",
        "body" : "I don't necessarily see this behaviour, for example\r\n\r\n```\r\nimport ntpath\r\n\r\nntpath.join(\"\\\\\\\\server\\\\share\", \"\\\\abc\\\\def\\\\\", \"\\\\ghi\\\\jkl\\\\\", \"mno\\\\pqr\", \"stu\") == \"\\\\\\\\server\\\\share\\\\ghi\\\\jkl\\\\mno\\\\pqr\\\\stu\"\r\n```\r\n\r\nAm I misunderstanding what the stripping is for?",
        "createdAt" : "2020-02-04T05:00:36Z",
        "updatedAt" : "2020-02-04T05:55:56Z",
        "lastEditedBy" : "7c547162-2334-4e33-a627-e146840da9ec",
        "tags" : [
        ]
      },
      {
        "id" : "ef4c6bb3-6e5f-4bc8-a28b-71445565e2f2",
        "parentId" : "ae8974d5-5252-4e7f-8a78-a623eb63ddf5",
        "authorId" : "2cec85ad-35ba-4c82-b943-3a562a9baa07",
        "body" : "@jborean93 \r\n\r\n> ```ntpath.join(\"\\\\\\\\server\\\\share\", \"\\\\abc\\\\def\\\\\", \"\\\\ghi\\\\jkl\\\\\", \"mno\\\\pqr\", \"stu\") == \"\\\\\\\\server\\\\share\\\\ghi\\\\jkl\\\\mno\\\\pqr\\\\stu\"```\r\n\r\nYour resulting path is missing `\\\\abc\\\\def` because it was superseded by `\\\\ghi\\\\jkl\\\\`. If `stu` were `\\\\stu`, then the result would be:\r\n\r\n```\\\\\\\\server\\\\share\\\\stu```\r\n\r\nIt's \"correct\" in the sense that if your working directory is `C:\\Users\\jborean` and you ask to open the file `\\Windows\\WindowsUpdate.log`, the behavior you see is that it is opened (it combined the absolute-but-not-fully-qualified path with the current drive).\r\n\r\nIt's just not typically what we'd use `join_path` for and the previous version of it split on separators and rejoined them so it had no concept of this and would have included all components. It was actually the test I added that caught this as I hadn't realized it myself when I was playing with `ntpath` directly.\r\n\r\nI went with reproducing the previous function's output so as not to break things that were (probably inadvertently) relying on it, but let me know if you think ",
        "createdAt" : "2020-02-04T05:20:41Z",
        "updatedAt" : "2020-02-04T05:55:56Z",
        "lastEditedBy" : "2cec85ad-35ba-4c82-b943-3a562a9baa07",
        "tags" : [
        ]
      },
      {
        "id" : "e689c0b7-dad2-4a7c-a400-5dc14c753215",
        "parentId" : "ae8974d5-5252-4e7f-8a78-a623eb63ddf5",
        "authorId" : "7c547162-2334-4e33-a627-e146840da9ec",
        "body" : "Ahh ok that makes sense, was on auto pilot when I was testing it out. Thanks for clarifying.",
        "createdAt" : "2020-02-04T05:26:19Z",
        "updatedAt" : "2020-02-04T05:55:56Z",
        "lastEditedBy" : "7c547162-2334-4e33-a627-e146840da9ec",
        "tags" : [
        ]
      }
    ],
    "commit" : "40761c73b61ebc7799ccc6bac31444471ba27d33",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +98,102 @@        parts = [ntpath.normpath(self._unquote(arg)) for arg in args]\n\n        # Becuase ntpath.join treats any component that begins with a backslash as an absolute path,\n        # we have to strip slashes from at least the beginning, otherwise join will ignore all previous\n        # path components except for the drive."
  }
]