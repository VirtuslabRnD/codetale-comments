[
  {
    "id" : "b823e0e3-6cc9-4f90-bac0-5a888ea2ccce",
    "prId" : 16089,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a250fd80-088f-4fba-a65e-4b755a2ae016",
        "parentId" : null,
        "authorId" : "fa0144fc-7424-474a-9ab5-059de28814b7",
        "body" : "Aside from self._dump_results here, this could almost be a static method or module scope method.\n\nI sort of want to suggest always just passing the entire host_data.result to TestCase. Would seem more useful for the intended use case  (viewing results of our test cases).  But, I could also see this being useful with real 'live' data \nand the results being sensitive  (something like someone using ansible via jenkins as part of a test setup, and getting the task results as jenkins would be handy). Maybe include an AbridgedTestCase(TestCase) that can do the _dump_results style cleanup itself?\n\nSomething that has a TestCase() [or perhaps as a classmethod alternative constructor] could also handle figuring out the duration, name, and add_*_info info.\n\nThen this method is more or less\n\n```\ndef _build_test_case(self, task_data, host_data):\n    return AnsibleTestCase(task_data, host_data)\n```\n\nSimilarly for TestSuite.\ntest_suite = AnsibleTestSuite(playbook_name, task_data)\n\n(And maybe TaskData would get playbook_name passed to it's init?)\n",
        "createdAt" : "2016-06-01T20:40:47Z",
        "updatedAt" : "2016-06-01T20:40:47Z",
        "lastEditedBy" : "fa0144fc-7424-474a-9ab5-059de28814b7",
        "tags" : [
        ]
      }
    ],
    "commit" : "ceb4571fdbd2a90415a692e77dbe09e916710661",
    "line" : 128,
    "diffHunk" : "@@ -1,1 +126,130 @@        res = host_data.result._result\n        rc = res.get('rc', 0)\n        dump = self._dump_results(res, indent=0)\n\n        if host_data.status == 'ok':"
  },
  {
    "id" : "03656bff-2c48-4dba-893e-b32213f36862",
    "prId" : 16089,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "54893fcc-e0e2-4dc0-b65c-001564add670",
        "parentId" : null,
        "authorId" : "fa0144fc-7424-474a-9ab5-059de28814b7",
        "body" : "task_uuid seems unused\n",
        "createdAt" : "2016-06-01T20:42:04Z",
        "updatedAt" : "2016-06-01T20:42:04Z",
        "lastEditedBy" : "fa0144fc-7424-474a-9ab5-059de28814b7",
        "tags" : [
        ]
      }
    ],
    "commit" : "ceb4571fdbd2a90415a692e77dbe09e916710661",
    "line" : 159,
    "diffHunk" : "@@ -1,1 +157,161 @@        test_cases = []\n\n        for task_uuid, task_data in self._task_data.items():\n            for host_uuid, host_data in task_data.host_data.items():\n                test_cases.append(self._build_test_case(task_data, host_data))"
  },
  {
    "id" : "46edd46b-cec6-4aab-ba27-ac77b8fb5811",
    "prId" : 16089,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "23fb4324-bf43-4b61-a46b-f427ff14967e",
        "parentId" : null,
        "authorId" : "fa0144fc-7424-474a-9ab5-059de28814b7",
        "body" : "ditto host_uuid\n\n(Or is need task_date.items() necessary with OrderedDict?) \n",
        "createdAt" : "2016-06-01T20:43:21Z",
        "updatedAt" : "2016-06-01T20:43:21Z",
        "lastEditedBy" : "fa0144fc-7424-474a-9ab5-059de28814b7",
        "tags" : [
        ]
      }
    ],
    "commit" : "ceb4571fdbd2a90415a692e77dbe09e916710661",
    "line" : 160,
    "diffHunk" : "@@ -1,1 +158,162 @@\n        for task_uuid, task_data in self._task_data.items():\n            for host_uuid, host_data in task_data.host_data.items():\n                test_cases.append(self._build_test_case(task_data, host_data))\n"
  }
]