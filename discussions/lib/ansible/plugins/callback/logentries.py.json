[
  {
    "id" : "6b6ba28b-bdbe-42f0-86c3-12c9ed1eff02",
    "prId" : 12510,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6188cef4-07df-4b5b-a499-7ded14d6ac63",
        "parentId" : null,
        "authorId" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "body" : "~~ use the shared open_url function, it takes care of many issues with python's ssl ~~\n",
        "createdAt" : "2015-10-24T03:42:00Z",
        "updatedAt" : "2015-11-14T20:02:06Z",
        "lastEditedBy" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "tags" : [
        ]
      },
      {
        "id" : "649b89ab-7293-4d4b-b1c5-17c464722d44",
        "parentId" : "6188cef4-07df-4b5b-a499-7ded14d6ac63",
        "authorId" : "b8c051d7-1e84-4758-9fe2-714048c5f78e",
        "body" : "I had a look at the open_url function, it appears to be for http/https based connections only, the connection that this callback opens up is a plain tcp connection.\n",
        "createdAt" : "2015-10-27T17:36:49Z",
        "updatedAt" : "2015-11-14T20:02:06Z",
        "lastEditedBy" : "b8c051d7-1e84-4758-9fe2-714048c5f78e",
        "tags" : [
        ]
      },
      {
        "id" : "5f8ef77a-b776-4f6d-8865-8ed071135562",
        "parentId" : "6188cef4-07df-4b5b-a499-7ded14d6ac63",
        "authorId" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "body" : "ignore it then,  I stopped reading at import ssl, did not realize it is an encrypted tcp socket connection and assumed http/s\n",
        "createdAt" : "2015-10-27T17:39:48Z",
        "updatedAt" : "2015-11-14T20:02:06Z",
        "lastEditedBy" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "tags" : [
        ]
      }
    ],
    "commit" : "19ba54c9fd7f51475101213f0440397e3d673e7f",
    "line" : 164,
    "diffHunk" : "@@ -1,1 +162,166 @@\n\ntry:\n    import ssl\nexcept ImportError:  # for systems without TLS support."
  },
  {
    "id" : "967586af-4b89-4753-a705-d44981e44dd2",
    "prId" : 12510,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "af08f587-cde6-4116-82a7-a4ba8b03b647",
        "parentId" : null,
        "authorId" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "body" : "import errors should not be fatal, look at hipchat plugin and how it handles this, the plugin will not work but will not stop play while it issues warnings about it.\n",
        "createdAt" : "2015-11-14T17:48:59Z",
        "updatedAt" : "2015-11-14T20:02:06Z",
        "lastEditedBy" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "tags" : [
        ]
      },
      {
        "id" : "aab55a6f-2a5d-4bae-8faa-c8c1fbdba88e",
        "parentId" : "af08f587-cde6-4116-82a7-a4ba8b03b647",
        "authorId" : "b8c051d7-1e84-4758-9fe2-714048c5f78e",
        "body" : "Sounds reasonable, thats changed in the following commits\n",
        "createdAt" : "2015-11-14T20:00:57Z",
        "updatedAt" : "2015-11-14T20:02:06Z",
        "lastEditedBy" : "b8c051d7-1e84-4758-9fe2-714048c5f78e",
        "tags" : [
        ]
      }
    ],
    "commit" : "19ba54c9fd7f51475101213f0440397e3d673e7f",
    "line" : 66,
    "diffHunk" : "@@ -1,1 +64,68 @@import uuid\ntry:\n    import certifi\n    HAS_CERTIFI = True\nexcept ImportError:"
  },
  {
    "id" : "295ebe0c-4c97-48b9-bc36-517d2c6126fd",
    "prId" : 12510,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "29726aa6-ef55-447d-a5e5-c5bede3e431e",
        "parentId" : null,
        "authorId" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "body" : "add \n CALLBACK_NEEDS_WHITELIST = True\n\nthis is recent addition, it keeps plugins shipped with ansible from being executed automatically unless whitelisted through config.\n",
        "createdAt" : "2015-11-14T17:51:56Z",
        "updatedAt" : "2015-11-14T20:02:06Z",
        "lastEditedBy" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "tags" : [
        ]
      }
    ],
    "commit" : "19ba54c9fd7f51475101213f0440397e3d673e7f",
    "line" : null,
    "diffHunk" : "@@ -1,1 +194,198 @@    CALLBACK_NAME = 'logentries'\n    CALLBACK_NEEDS_WHITELIST = True\n\n    def __init__(self):\n        super(CallbackModule, self).__init__()"
  },
  {
    "id" : "ef618a9f-ce60-48ca-ad39-1165e12b0efe",
    "prId" : 15009,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c9ffeb0e-988c-4533-9e37-52fb13e66ece",
        "parentId" : null,
        "authorId" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "body" : "<nod>  What I was wondering before is that I believe in python2 this is the equivalent of RawConfigParser and i python3 it's the equivalent of SafeConfigParser.  Just wondered if there's anything else that needed to be adjusted for that change.\n",
        "createdAt" : "2016-03-17T00:31:26Z",
        "updatedAt" : "2016-03-24T13:39:35Z",
        "lastEditedBy" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "tags" : [
        ]
      },
      {
        "id" : "a2489579-4d2f-4449-b084-d5ed628da50b",
        "parentId" : "c9ffeb0e-988c-4533-9e37-52fb13e66ece",
        "authorId" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "body" : "I just used the same one we are using for constants.py\n",
        "createdAt" : "2016-03-17T00:46:31Z",
        "updatedAt" : "2016-03-24T13:39:35Z",
        "lastEditedBy" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "tags" : [
        ]
      }
    ],
    "commit" : "5b11494437e0bcb888f81552ce6fa5885a880c50",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +214,218 @@\n        config_path = os.path.abspath(os.path.dirname(__file__))\n        config = configparser.ConfigParser()\n        try:\n            config.readfp(open(os.path.join(config_path, 'logentries.ini')))"
  }
]