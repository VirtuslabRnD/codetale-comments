[
  {
    "id" : "e414a0f4-d91d-4419-b3a6-2d2a3dfb4c92",
    "prId" : 18477,
    "prUrl" : "https://github.com/ansible/ansible/pull/18477#pullrequestreview-8351288",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1fcadb7e-aa3c-4869-a4e7-c378aa02253e",
        "parentId" : null,
        "authorId" : "0721986f-a9d3-430f-b9a0-0c32ca3caa40",
        "body" : "This can be simplified. Both Random and SystemRandom accept a seed value, in both cases the default value is None. So there is no need for a condition. The default value can be passed unconditionally\n",
        "createdAt" : "2016-11-13T23:49:05Z",
        "updatedAt" : "2016-11-13T23:49:05Z",
        "lastEditedBy" : "0721986f-a9d3-430f-b9a0-0c32ca3caa40",
        "tags" : [
        ]
      },
      {
        "id" : "7a90df66-ce3f-44bb-a34f-e1ecac5af366",
        "parentId" : "1fcadb7e-aa3c-4869-a4e7-c378aa02253e",
        "authorId" : "677c7352-d08d-4073-a5c9-aa8864fb58f8",
        "body" : "SystemRandom accepts the seed parameter, but it does not honor it.\n\n```\n>>> for i in range(3): print(SystemRandom('foo').randint(0, 100))\n... \n10\n93\n46\n>>> for i in range(3): print(Random('foo').randint(0, 100))\n... \n89\n89\n89\n>>>\n```\n\nTheir implementations differ and I don't want to change the default behavior (by switching to weaker random generator).\n",
        "createdAt" : "2016-11-14T07:06:17Z",
        "updatedAt" : "2016-11-14T07:06:18Z",
        "lastEditedBy" : "677c7352-d08d-4073-a5c9-aa8864fb58f8",
        "tags" : [
        ]
      },
      {
        "id" : "63a42cf1-20f9-4d57-82f6-414ca422d53c",
        "parentId" : "1fcadb7e-aa3c-4869-a4e7-c378aa02253e",
        "authorId" : "0721986f-a9d3-430f-b9a0-0c32ca3caa40",
        "body" : "Meh, it even is documented that SystemRandom ignores the seed. Sorry for the noise.\n",
        "createdAt" : "2016-11-14T08:09:06Z",
        "updatedAt" : "2016-11-14T08:09:06Z",
        "lastEditedBy" : "0721986f-a9d3-430f-b9a0-0c32ca3caa40",
        "tags" : [
        ]
      }
    ],
    "commit" : "421e0878132d5a00a3d01ffbd7f7900a74cd27f4",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +204,208 @@        r = SystemRandom()\n    else:\n        r = Random(seed)\n    if isinstance(end, (int, long)):\n        if not start:"
  },
  {
    "id" : "4244f679-3e0c-4a6a-8f73-673c47c4cdbd",
    "prId" : 38805,
    "prUrl" : "https://github.com/ansible/ansible/pull/38805#pullrequestreview-112397910",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fe312141-821e-406c-a62f-6647b4f983d4",
        "parentId" : null,
        "authorId" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "body" : "In the docs, i would make note that this expands 'LOCAL' vars and not remote ones, so users realize that using remote paths with this can lead to errors.",
        "createdAt" : "2018-04-16T12:48:33Z",
        "updatedAt" : "2018-04-18T06:46:58Z",
        "lastEditedBy" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "tags" : [
        ]
      }
    ],
    "commit" : "bbf5d9a126498afa3cb8adfc1db3cb687e05f50c",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +531,535 @@            'dirname': partial(unicode_wrap, os.path.dirname),\n            'expanduser': partial(unicode_wrap, os.path.expanduser),\n            'expandvars': partial(unicode_wrap, os.path.expandvars),\n            'realpath': partial(unicode_wrap, os.path.realpath),\n            'relpath': partial(unicode_wrap, os.path.relpath),"
  },
  {
    "id" : "bc70807f-520a-43e4-9fc8-167b22a01bdd",
    "prId" : 53554,
    "prUrl" : "https://github.com/ansible/ansible/pull/53554#pullrequestreview-213073932",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "66244a20-09bb-450c-9953-e8f13e21341a",
        "parentId" : null,
        "authorId" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "body" : "Not for this PR but seeing this, I realize that someone will need to audit our code and rename all imports of these base abcs for compatibility with Python-3.8+ https://docs.python.org/3/library/collections.html#module-collections\r\n\r\n``` python\r\nfrom ansible.module_utils.common._compat_collections import Mapping, MutableMapping\r\n```\r\n\r\n@webknjaz you wrote _compat_collections (and are watching to see if it makes it into six) so perhaps you're the logical choice to make this change to our codebase?  (Note that if there's too many to do manually, you can probably use the rope refactoring library to make the changes).",
        "createdAt" : "2019-03-11T20:08:03Z",
        "updatedAt" : "2019-03-11T20:08:04Z",
        "lastEditedBy" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "tags" : [
        ]
      },
      {
        "id" : "494d2e14-6a25-42c8-921a-cc8db9044cfd",
        "parentId" : "66244a20-09bb-450c-9953-e8f13e21341a",
        "authorId" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "body" : "Okay, I'll take a look.",
        "createdAt" : "2019-03-11T20:42:25Z",
        "updatedAt" : "2019-03-11T20:42:25Z",
        "lastEditedBy" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "tags" : [
        ]
      }
    ],
    "commit" : "290f27eac93ee42b3e946fe3d153e0b3f0771df7",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +35,39 @@import yaml\n\nfrom collections import Mapping, MutableMapping\nimport datetime\nfrom functools import partial"
  },
  {
    "id" : "421c0eaa-2c62-4924-a7d8-f66f0958c48f",
    "prId" : 57894,
    "prUrl" : "https://github.com/ansible/ansible/pull/57894#pullrequestreview-309536943",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "34c51037-6355-4974-89e6-fd3b146c5453",
        "parentId" : null,
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "Why not leave `levels=1` away? From your PR description, this breaks backwards compatibility for no reason (or if there's a reason, it's hidden somewhere).",
        "createdAt" : "2019-10-13T22:33:15Z",
        "updatedAt" : "2020-02-11T20:49:25Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      },
      {
        "id" : "9b294892-35de-42ba-8878-9b9fc1ad2cfe",
        "parentId" : "34c51037-6355-4974-89e6-fd3b146c5453",
        "authorId" : "2cc098a3-7926-4651-8261-412e9ac59899",
        "body" : "> non backward compatible: `[dict1, [dict2]] | combine` doesn't work anymore, because I thought it shouldn't. If you disagree, `flatten(terms, levels=1)` â†’ `flatten(terms)` and it's fixed.\r\n\r\nThere is no technical reason.\r\nWithout this PR, `[dict1, [dict2]] | combine` is working but it's an undocumented behavior. As an ansible user, when I provide bad input to a filter I expect it to raise an error instead of guessing what I want to achieve.\r\nProviding `[dict1, [dict2]]` to `combine` is a bad input as nothing in the documentation state it will flatten the list.\r\n\r\nThough it's up for debate and if you disagree I will gradely remove the `levels=1`. I don't want that to block the entire PR.\r\n\r\n@felixfontein What do you think ?",
        "createdAt" : "2019-10-28T11:36:04Z",
        "updatedAt" : "2020-02-11T20:49:25Z",
        "lastEditedBy" : "2cc098a3-7926-4651-8261-412e9ac59899",
        "tags" : [
        ]
      },
      {
        "id" : "50085821-512a-4a4b-bd6f-f0e56c5e28a9",
        "parentId" : "34c51037-6355-4974-89e6-fd3b146c5453",
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "If this is a bug that's fixed, there should be a changelog fragment (with `bugfixes:`) that mentions that this was a bug that is now fixed. I am fine if this is fixed / the undocumented behavior removed, but it should be clearly documented.\r\n\r\n(If someone else complains, maybe move it into a separate PR, resp. a follow-up PR. If nobody else complains, just leave it there - assuming there is a bugfix changelog fragment for thix.)",
        "createdAt" : "2019-10-30T17:23:59Z",
        "updatedAt" : "2020-02-11T20:49:25Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      },
      {
        "id" : "3aa32ead-09e1-4d11-aa7e-5d18222bb8b0",
        "parentId" : "34c51037-6355-4974-89e6-fd3b146c5453",
        "authorId" : "2cc098a3-7926-4651-8261-412e9ac59899",
        "body" : "Ok, thanks !\r\nI [created a changelog fragment](https://github.com/ansible/ansible/pull/57894/commits/3c323c1b0c1d803794620a57105d4b3482ba74b4):\r\n```\r\n+bugfixes:\r\n+- combine filter - ``[dict1, [dict2]] | combine`` now raise an error; previously ``combine`` had an undocumented behaviour where it was flattening the list before combining it (https://github.com/ansible/ansible/pull/57894#discussion_r339517518).\r\n+minor_changes:\r\n+- combine filter - now accept a ``list_merge`` argument which modifies its behaviour when the hashes to merge contain arrays/lists.\r\n```",
        "createdAt" : "2019-10-30T21:34:35Z",
        "updatedAt" : "2020-02-11T20:49:25Z",
        "lastEditedBy" : "2cc098a3-7926-4651-8261-412e9ac59899",
        "tags" : [
        ]
      }
    ],
    "commit" : "c24119a7a0af8a92c33d3629634afbe72fe4b611",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +313,317 @@\n    # allow the user to do `[dict1, dict2, ...] | combine`\n    dictionaries = flatten(terms, levels=1)\n\n    # recursively check that every elements are defined (for jinja2)"
  },
  {
    "id" : "7663930c-a71f-425f-94ff-6e2521c7459c",
    "prId" : 57894,
    "prUrl" : "https://github.com/ansible/ansible/pull/57894#pullrequestreview-307778297",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e593c9cd-42f5-48cc-9e01-1957e2ed62c1",
        "parentId" : null,
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "If you write complete sentences, please use correct casing.\r\n```suggestion\r\n    # Merge all the dicts so that the dict at the end of the array have precedence\r\n```",
        "createdAt" : "2019-10-13T22:33:47Z",
        "updatedAt" : "2020-02-11T20:49:25Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      },
      {
        "id" : "c589662a-26bc-455f-833f-b6bf83b5fca8",
        "parentId" : "e593c9cd-42f5-48cc-9e01-1957e2ed62c1",
        "authorId" : "2cc098a3-7926-4651-8261-412e9ac59899",
        "body" : "done",
        "createdAt" : "2019-10-28T11:14:40Z",
        "updatedAt" : "2020-02-11T20:49:25Z",
        "lastEditedBy" : "2cc098a3-7926-4651-8261-412e9ac59899",
        "tags" : [
        ]
      }
    ],
    "commit" : "c24119a7a0af8a92c33d3629634afbe72fe4b611",
    "line" : 49,
    "diffHunk" : "@@ -1,1 +324,328 @@        return dictionaries[0]\n\n    # merge all the dicts so that the dict at the end of the array have precedence\n    # over the dict at the beginning.\n    # we merge the dicts from the highest to the lowest priority because there is"
  },
  {
    "id" : "8a3d27af-25de-404d-8be0-1381291f220e",
    "prId" : 57894,
    "prUrl" : "https://github.com/ansible/ansible/pull/57894#pullrequestreview-307778358",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "96cfcbe6-d238-4375-906e-d2c1bfee3fbe",
        "parentId" : null,
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "```suggestion\r\n    # We merge the dicts from the highest to the lowest priority because there is\r\n```",
        "createdAt" : "2019-10-13T22:34:01Z",
        "updatedAt" : "2020-02-11T20:49:25Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      },
      {
        "id" : "1e8c1bf9-8f90-4e01-a5b5-be8cf54fb424",
        "parentId" : "96cfcbe6-d238-4375-906e-d2c1bfee3fbe",
        "authorId" : "2cc098a3-7926-4651-8261-412e9ac59899",
        "body" : "done",
        "createdAt" : "2019-10-28T11:14:50Z",
        "updatedAt" : "2020-02-11T20:49:25Z",
        "lastEditedBy" : "2cc098a3-7926-4651-8261-412e9ac59899",
        "tags" : [
        ]
      }
    ],
    "commit" : "c24119a7a0af8a92c33d3629634afbe72fe4b611",
    "line" : 51,
    "diffHunk" : "@@ -1,1 +326,330 @@    # merge all the dicts so that the dict at the end of the array have precedence\n    # over the dict at the beginning.\n    # we merge the dicts from the highest to the lowest priority because there is\n    # a huge probability that the lowest priority dict will be the biggest in size\n    # (as the low prio dict will hold the \"default\" values and the others will be \"patches\")"
  },
  {
    "id" : "35fc8008-5d19-4495-8b4d-e30ae3b7563d",
    "prId" : 57894,
    "prUrl" : "https://github.com/ansible/ansible/pull/57894#pullrequestreview-307780090",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "90051ef0-bfff-434d-b156-43ef67ee56ce",
        "parentId" : null,
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "Do you have any proof that the probability is huge, or are you just claiming that? If you don't have a proof, how about writing \"[...] because we're assuming that [...]\"?",
        "createdAt" : "2019-10-13T22:34:55Z",
        "updatedAt" : "2020-02-11T20:49:25Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      },
      {
        "id" : "c861691d-09e4-402f-a2ca-dfc045390144",
        "parentId" : "90051ef0-bfff-434d-b156-43ef67ee56ce",
        "authorId" : "2cc098a3-7926-4651-8261-412e9ac59899",
        "body" : "> Do you have any proof that the probability is huge, or are you just claiming that?\r\n\r\nIt's just a claim assuming the lowest priority dict will be biggest, assuming it will contain default value, assuming there will be more default values than overwrites.\r\nSo indeed â†’ your wording is better.",
        "createdAt" : "2019-10-28T11:18:44Z",
        "updatedAt" : "2020-02-11T20:49:25Z",
        "lastEditedBy" : "2cc098a3-7926-4651-8261-412e9ac59899",
        "tags" : [
        ]
      }
    ],
    "commit" : "c24119a7a0af8a92c33d3629634afbe72fe4b611",
    "line" : 52,
    "diffHunk" : "@@ -1,1 +327,331 @@    # over the dict at the beginning.\n    # we merge the dicts from the highest to the lowest priority because there is\n    # a huge probability that the lowest priority dict will be the biggest in size\n    # (as the low prio dict will hold the \"default\" values and the others will be \"patches\")\n    # and merge_hash create a copy of it's first argument."
  },
  {
    "id" : "c83e5951-9fd1-4ca3-b787-3f921c9ae66a",
    "prId" : 57894,
    "prUrl" : "https://github.com/ansible/ansible/pull/57894#pullrequestreview-307780223",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "eae3ccf5-e417-4631-9c70-d5df0f206a88",
        "parentId" : null,
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "```suggestion\r\n    # So high/right -> low/left is probably more efficient than low/left -> high/right.\r\n```",
        "createdAt" : "2019-10-13T22:35:20Z",
        "updatedAt" : "2020-02-11T20:49:25Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      },
      {
        "id" : "ae5a1c02-b9c5-465f-a6ef-fc6c97d82009",
        "parentId" : "eae3ccf5-e417-4631-9c70-d5df0f206a88",
        "authorId" : "2cc098a3-7926-4651-8261-412e9ac59899",
        "body" : "done",
        "createdAt" : "2019-10-28T11:19:03Z",
        "updatedAt" : "2020-02-11T20:49:25Z",
        "lastEditedBy" : "2cc098a3-7926-4651-8261-412e9ac59899",
        "tags" : [
        ]
      }
    ],
    "commit" : "c24119a7a0af8a92c33d3629634afbe72fe4b611",
    "line" : 55,
    "diffHunk" : "@@ -1,1 +330,334 @@    # (as the low prio dict will hold the \"default\" values and the others will be \"patches\")\n    # and merge_hash create a copy of it's first argument.\n    # so high/right -> low/left is more efficient than low/left -> high/right\n    high_to_low_prio_dict_iterator = reversed(dictionaries)\n    result = next(high_to_low_prio_dict_iterator)"
  },
  {
    "id" : "dd614f8e-2d36-455e-8683-4377921ca274",
    "prId" : 67823,
    "prUrl" : "https://github.com/ansible/ansible/pull/67823#pullrequestreview-369786266",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "be70f37c-612e-4351-b51b-bbe37187f584",
        "parentId" : null,
        "authorId" : "2f8132dc-12f8-44dc-8b97-1cf4c1616b68",
        "body" : "The default value for `nonstring` is `'simplerepr'` so maybe it's not necessary to specify here. Doesn't hurt to have it, though.",
        "createdAt" : "2020-03-05T17:53:04Z",
        "updatedAt" : "2020-06-08T19:43:02Z",
        "lastEditedBy" : "2f8132dc-12f8-44dc-8b97-1cf4c1616b68",
        "tags" : [
        ]
      }
    ],
    "commit" : "2dd48eb7c7c0e1dfec2c7fc9b7d5566083f77edf",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +136,140 @@    ''' Perform re.findall and return the list of matches '''\n\n    value = to_text(value, errors='surrogate_or_strict', nonstring='simplerepr')\n\n    flags = 0"
  },
  {
    "id" : "26400676-d36f-4ffa-8207-f2da420d9ef1",
    "prId" : 67823,
    "prUrl" : "https://github.com/ansible/ansible/pull/67823#pullrequestreview-371911169",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "588e49f8-9f1e-4f02-a30d-476a53e63866",
        "parentId" : null,
        "authorId" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "body" : "The changes to this file are being done in the wrong place. Value needs to be converted to a text string when it enters ansible, not at the filter plugin level. ",
        "createdAt" : "2020-03-09T23:01:54Z",
        "updatedAt" : "2020-06-08T19:43:02Z",
        "lastEditedBy" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "tags" : [
        ]
      },
      {
        "id" : "616048e5-0a23-404b-8b1f-ee1adc5685f8",
        "parentId" : "588e49f8-9f1e-4f02-a30d-476a53e63866",
        "authorId" : "4b69a0b5-ac6f-45e9-9507-dd1385182f29",
        "body" : "Sorry, I should have probably added a comment about why this is being done. It actually isn't necessary for this PR, but is useful.  In upstream jinja2, every value that is passed to a filter is stringified before use.  This ensures that the methods on `StrictUndefined` fire causing an `UndefinedError`, as opposed to something like `TypeError: expected string or bytes-like object`. ",
        "createdAt" : "2020-03-10T12:36:25Z",
        "updatedAt" : "2020-06-08T19:43:02Z",
        "lastEditedBy" : "4b69a0b5-ac6f-45e9-9507-dd1385182f29",
        "tags" : [
        ]
      }
    ],
    "commit" : "2dd48eb7c7c0e1dfec2c7fc9b7d5566083f77edf",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +190,194 @@\ndef regex_escape(string, re_type='python'):\n    string = to_text(string, errors='surrogate_or_strict', nonstring='simplerepr')\n    '''Escape all regular expressions special characters from STRING.'''\n    if re_type == 'python':"
  }
]