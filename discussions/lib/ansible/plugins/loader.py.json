[
  {
    "id" : "f480854a-3f55-4ce6-bf73-374953be982d",
    "prId" : 34649,
    "prUrl" : "https://github.com/ansible/ansible/pull/34649#pullrequestreview-110695566",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1b8e1691-94c3-4607-a400-dcd759498a19",
        "parentId" : null,
        "authorId" : "380aef6a-3fbb-41ad-819b-bada96e05807",
        "body" : "Since this is limited to the `ansible.modules` package, is it able to catch any issues that would not be detected by a sanity test?",
        "createdAt" : "2018-04-10T00:15:55Z",
        "updatedAt" : "2018-04-10T00:15:55Z",
        "lastEditedBy" : "380aef6a-3fbb-41ad-819b-bada96e05807",
        "tags" : [
        ]
      },
      {
        "id" : "07e4656f-f1bd-4ee1-adcb-110ecf419558",
        "parentId" : "1b8e1691-94c3-4607-a400-dcd759498a19",
        "authorId" : "4b69a0b5-ac6f-45e9-9507-dd1385182f29",
        "body" : "The purpose of this PR is not to resolve a CI related problem or to resolve issues with module submissions.  It is however designed to solve issues our users face when they may have a file that is picked up as a module, that shadows the name of a keyword.  There are 2 example issues linked to this PR that showcase the issue.",
        "createdAt" : "2018-04-10T01:17:43Z",
        "updatedAt" : "2018-04-10T01:17:43Z",
        "lastEditedBy" : "4b69a0b5-ac6f-45e9-9507-dd1385182f29",
        "tags" : [
        ]
      },
      {
        "id" : "67f393fd-0dd3-4854-9e79-9dca4adb4c87",
        "parentId" : "1b8e1691-94c3-4607-a400-dcd759498a19",
        "authorId" : "380aef6a-3fbb-41ad-819b-bada96e05807",
        "body" : "The part I was missing here is that user's modules are also in the `ansible.modules` package. I was under the incorrect impression that they were in a separate package.",
        "createdAt" : "2018-04-10T05:20:28Z",
        "updatedAt" : "2018-04-10T05:20:28Z",
        "lastEditedBy" : "380aef6a-3fbb-41ad-819b-bada96e05807",
        "tags" : [
        ]
      }
    ],
    "commit" : "09b9de338a9a5aa018bd094f394d6539960916e1",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +332,336 @@\n        plugin = self._find_plugin(name, mod_type=mod_type, ignore_deprecated=ignore_deprecated, check_aliases=check_aliases)\n        if plugin and self.package == 'ansible.modules' and is_reserved_name(name):\n            raise AnsibleError(\n                'Module \"%s\" shadows the name of a reserved keyword. Please rename or remove this module. Found at %s' % (name, plugin)"
  },
  {
    "id" : "3e26510a-01ce-4689-befe-7ae0f403cf72",
    "prId" : 46664,
    "prUrl" : "https://github.com/ansible/ansible/pull/46664#pullrequestreview-168920890",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fed94a8c-d20e-45b7-9f8d-dfeeadb758aa",
        "parentId" : null,
        "authorId" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "body" : "Sine you're catching TypeError, it looks like only the above line could be causing it.  So it should be the only thing in the try: except.",
        "createdAt" : "2018-10-26T17:18:55Z",
        "updatedAt" : "2018-10-27T05:54:14Z",
        "lastEditedBy" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "tags" : [
        ]
      }
    ],
    "commit" : "f27c1844162b3a422109b1296eb815a360734cdd",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +606,610 @@            # two isn't visible to the users\n            try:\n                filters['ansible.modules'] = frozenset(filter_data['module_blacklist'])\n            except TypeError:\n                display.warning(u'Unable to parse the plugin filter file {0} as'"
  },
  {
    "id" : "23972477-331b-47e0-abc0-78569ed4d4b5",
    "prId" : 46664,
    "prUrl" : "https://github.com/ansible/ansible/pull/46664#pullrequestreview-168921197",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "839be27a-74a9-41c9-911c-5c3581eb2512",
        "parentId" : null,
        "authorId" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "body" : "Can we be more explicit that module_blacklist was not a list?",
        "createdAt" : "2018-10-26T17:19:43Z",
        "updatedAt" : "2018-10-27T05:54:14Z",
        "lastEditedBy" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "tags" : [
        ]
      }
    ],
    "commit" : "f27c1844162b3a422109b1296eb815a360734cdd",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +610,614 @@                display.warning(u'Unable to parse the plugin filter file {0} as'\n                                u' module_blacklist is not a list.'\n                                u' Skipping.'.format(filter_cfg))\n                return filters\n            filters['ansible.plugins.action'] = filters['ansible.modules']"
  },
  {
    "id" : "3188eeca-1af2-4ec0-b951-092b4d912225",
    "prId" : 48333,
    "prUrl" : "https://github.com/ansible/ansible/pull/48333#pullrequestreview-178437208",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a4d7dedb-3b27-48be-9799-2580964c9448",
        "parentId" : null,
        "authorId" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "body" : "We have functions to take care of this.\r\n\r\n-1",
        "createdAt" : "2018-11-21T02:38:31Z",
        "updatedAt" : "2019-01-16T03:37:46Z",
        "lastEditedBy" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "tags" : [
        ]
      },
      {
        "id" : "24699fd5-7580-43ab-b8a1-43bdcf946b5e",
        "parentId" : "a4d7dedb-3b27-48be-9799-2580964c9448",
        "authorId" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "body" : "not currently, you describe a new api you want to build in previous comment, this is just quick change to improve performance until new API is in place",
        "createdAt" : "2018-11-21T16:50:40Z",
        "updatedAt" : "2019-01-16T03:37:46Z",
        "lastEditedBy" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "tags" : [
        ]
      },
      {
        "id" : "0dc5199f-1be9-4dc0-b187-f1435a71e8a7",
        "parentId" : "a4d7dedb-3b27-48be-9799-2580964c9448",
        "authorId" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "body" : "No... Actually I describe an API that you told me you were going to implement after the config framework was implemented.  Since you didn't implement in then, it's time for you to implement it now.",
        "createdAt" : "2018-11-22T06:47:44Z",
        "updatedAt" : "2019-01-16T03:37:46Z",
        "lastEditedBy" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "tags" : [
        ]
      },
      {
        "id" : "52223227-b166-4e0b-ab74-1345925e14c8",
        "parentId" : "a4d7dedb-3b27-48be-9799-2580964c9448",
        "authorId" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "body" : "I'm unsure what API you are talking about, the config framework was basically the API to be implemented. \r\n\r\nI had no plans on doc reading API. This PR was mostly inspiration that plugins that support config are always importable and hence we can access w/o AST parsing as modules are not guaranteed the same.",
        "createdAt" : "2018-11-26T18:31:55Z",
        "updatedAt" : "2019-01-16T03:37:46Z",
        "lastEditedBy" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "tags" : [
        ]
      }
    ],
    "commit" : "f823e87a36ad47de4ad053ac9612d198532063d6",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +212,216 @@                dstring = AnsibleLoader(getattr(module, 'DOCUMENTATION', ''), file_name=path).get_single_data()\n                if dstring:\n                    add_fragments(dstring, path, fragment_loader=fragment_loader)\n\n                if dstring and 'options' in dstring and isinstance(dstring['options'], dict):"
  },
  {
    "id" : "9ced0152-94ad-48fb-b05a-8fa87128f1ee",
    "prId" : 51177,
    "prUrl" : "https://github.com/ansible/ansible/pull/51177#pullrequestreview-196742857",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f45ce536-febb-4b1d-8b50-addb2d05732f",
        "parentId" : null,
        "authorId" : "311820dd-fcb9-46df-a201-9c0e7d6fac58",
        "body" : "While this probably won't bomb, it should be `to_native(path)` so you don't end up with a repr'd bytes obj in Py3.",
        "createdAt" : "2019-01-25T22:55:26Z",
        "updatedAt" : "2019-04-18T15:10:22Z",
        "lastEditedBy" : "311820dd-fcb9-46df-a201-9c0e7d6fac58",
        "tags" : [
        ]
      }
    ],
    "commit" : "41c50df0a1412daeb17a48794df55b5d80260b9e",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +443,447 @@        #       additional directories to be added later, it is buggy.\n        for path in (p for p in self._get_paths() if p not in self._searched_paths and os.path.isdir(p)):\n            display.debug('trying %s' % path)\n            try:\n                full_paths = (os.path.join(path, f) for f in os.listdir(path))"
  },
  {
    "id" : "080789a0-f101-4975-a760-b7501a4ee551",
    "prId" : 52194,
    "prUrl" : "https://github.com/ansible/ansible/pull/52194#pullrequestreview-212336400",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e5cad4a6-0f98-4ed9-9837-9563b021a4d0",
        "parentId" : null,
        "authorId" : "fa0144fc-7424-474a-9ab5-059de28814b7",
        "body" : "Instead of doing this at module load time, it may be more predictable to just call it early in the app entry points (possibly main or somewhere in cli/ ?). The ordering of when/how the ansible.* modules gets loaded can easily change and change collection loading behavior. Those sort of bugs can be very hard to debug.\r\n\r\nFolks importing ansible code in other apps would need to add the call to _configure_collection_loader() to their startup if they want the collection loader. ",
        "createdAt" : "2019-03-07T23:19:41Z",
        "updatedAt" : "2019-03-28T14:30:33Z",
        "lastEditedBy" : "fa0144fc-7424-474a-9ab5-059de28814b7",
        "tags" : [
        ]
      },
      {
        "id" : "2f47acb5-5f4e-47ab-a74b-730d28d3d705",
        "parentId" : "e5cad4a6-0f98-4ed9-9837-9563b021a4d0",
        "authorId" : "fa0144fc-7424-474a-9ab5-059de28814b7",
        "body" : "I think the places it would need to be called explicitly are:\r\n - cli app startup (bin/ansible? ansible.cli.*?)\r\n - ansiballZ startup\r\n - worker process startup? (not require, but possibly useful)\r\n\r\nFor worker process, I dont think they _have_ to resetup the collection loader,\r\nbut if they did create a new AnsibleCollectionLoader (and replace the one in sys.metapath\r\nfor the process if needed), that would help isolate workers from potentially altering\r\nthe controllers collection loader.\r\n\r\nFor ansiballz, with an explicit _configure_collection_loader() and AnsibleCollectionLoader creation,\r\nit could use a different config and potentially offer a place to add/tweak python module loading on the remote\r\nside. However, the interaction between PluginLoader, module_common, and ansiballZ imports is already\r\nvery complicated, unless using CollectionLoader could simplify that it's probably not worth changing.\r\n ",
        "createdAt" : "2019-03-08T15:33:48Z",
        "updatedAt" : "2019-03-28T14:30:33Z",
        "lastEditedBy" : "fa0144fc-7424-474a-9ab5-059de28814b7",
        "tags" : [
        ]
      }
    ],
    "commit" : "31cc0f2894e4da105f153cfd0e190ca4e602775d",
    "line" : 217,
    "diffHunk" : "@@ -1,1 +820,824 @@_PLUGIN_FILTERS = _load_plugin_filter()\n\n_configure_collection_loader()\n\n# doc fragments first"
  },
  {
    "id" : "b0edac56-a9cd-4fa2-96ce-55901dd08a8e",
    "prId" : 52194,
    "prUrl" : "https://github.com/ansible/ansible/pull/52194#pullrequestreview-219768930",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4ac1164a-7077-49dd-8ed6-6e5e439fa9e6",
        "parentId" : null,
        "authorId" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "body" : "Catching exceptions wholesale is bad. Can we narrow it down to something more specific?",
        "createdAt" : "2019-03-20T19:07:07Z",
        "updatedAt" : "2019-03-28T14:30:33Z",
        "lastEditedBy" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "tags" : [
        ]
      },
      {
        "id" : "22c97920-7ed9-4131-9c6d-4830976078a0",
        "parentId" : "4ac1164a-7077-49dd-8ed6-6e5e439fa9e6",
        "authorId" : "311820dd-fcb9-46df-a201-9c0e7d6fac58",
        "body" : "Potentially a nasty game of whack-a-mole if I don't; I've seen about 5 different exceptions just from the import side across various Python versions (we're subject to whatever exception any Python loader we might encounter feels like throwing, /me glares at `ZipLoader`)... We could improve the logging to serialize tracebacks, but if we let an unexpected exception fly, it could potentially break existing stuff on the legacy path due to one of those \"who cares\" failures in the collections path. (believe me, I get it; I don't like overly-broad exception handlers)",
        "createdAt" : "2019-03-27T23:08:16Z",
        "updatedAt" : "2019-03-28T14:30:33Z",
        "lastEditedBy" : "311820dd-fcb9-46df-a201-9c0e7d6fac58",
        "tags" : [
        ]
      }
    ],
    "commit" : "31cc0f2894e4da105f153cfd0e190ca4e602775d",
    "line" : 117,
    "diffHunk" : "@@ -1,1 +403,407 @@                    if p:\n                        return p\n                except Exception as ex:\n                    errors.append(to_native(ex))\n"
  },
  {
    "id" : "c3fd8759-edcb-4958-941c-4b1ee3912b9d",
    "prId" : 52194,
    "prUrl" : "https://github.com/ansible/ansible/pull/52194#pullrequestreview-219613650",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bcebe1f6-031b-428c-a4b2-3d95a5f0978b",
        "parentId" : null,
        "authorId" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "body" : "pyi?",
        "createdAt" : "2019-03-27T00:44:55Z",
        "updatedAt" : "2019-03-28T14:30:33Z",
        "lastEditedBy" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "tags" : [
        ]
      },
      {
        "id" : "d6bd71a6-5b2c-4a5a-995a-3df9c0b058bb",
        "parentId" : "bcebe1f6-031b-428c-a4b2-3d95a5f0978b",
        "authorId" : "311820dd-fcb9-46df-a201-9c0e7d6fac58",
        "body" : "probably a bunch of things we *should* add to this list, but doesn't really need to be part of collections (we're already doing this elsewhere, would be nice to get rid of all of it together)- primary concern here is to exclude things that interpreters can shove in at runtime",
        "createdAt" : "2019-03-27T08:02:24Z",
        "updatedAt" : "2019-03-28T14:30:33Z",
        "lastEditedBy" : "311820dd-fcb9-46df-a201-9c0e7d6fac58",
        "tags" : [
        ]
      },
      {
        "id" : "6ecd2cee-76c0-40d5-bd6f-d990c7882003",
        "parentId" : "bcebe1f6-031b-428c-a4b2-3d95a5f0978b",
        "authorId" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "body" : "`*.so`?",
        "createdAt" : "2019-03-27T17:24:14Z",
        "updatedAt" : "2019-03-28T14:30:33Z",
        "lastEditedBy" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "tags" : [
        ]
      }
    ],
    "commit" : "31cc0f2894e4da105f153cfd0e190ca4e602775d",
    "line" : 79,
    "diffHunk" : "@@ -1,1 +356,360 @@\n        # look for any matching extension in the package location (sans filter)\n        ext_blacklist = ['.pyc', '.pyo']\n        found_files = [f for f in glob.iglob(os.path.join(pkg_path, resource) + '.*') if os.path.isfile(f) and os.path.splitext(f)[1] not in ext_blacklist]\n"
  },
  {
    "id" : "90e5de3b-35b3-41cb-b4db-88b00dfa7e5c",
    "prId" : 53413,
    "prUrl" : "https://github.com/ansible/ansible/pull/53413#pullrequestreview-211905417",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5312f723-3464-44f7-aed8-e7a31d041edb",
        "parentId" : null,
        "authorId" : "b80275b8-2ff9-4c46-93e3-f47973c8fa5e",
        "body" : "It seems like the above 5 lines or so could just be replaced with a call to `self._clear_caches()`",
        "createdAt" : "2019-03-07T16:57:50Z",
        "updatedAt" : "2019-03-08T02:57:56Z",
        "lastEditedBy" : "b80275b8-2ff9-4c46-93e3-f47973c8fa5e",
        "tags" : [
        ]
      },
      {
        "id" : "a9ad0ba2-1e9b-4f82-b799-a666023f351b",
        "parentId" : "5312f723-3464-44f7-aed8-e7a31d041edb",
        "authorId" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "body" : "i dont want to clear the global caches in init",
        "createdAt" : "2019-03-07T17:03:55Z",
        "updatedAt" : "2019-03-08T02:57:56Z",
        "lastEditedBy" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "tags" : [
        ]
      }
    ],
    "commit" : "90bb47771ba3a17e386b96774d20e984d2759fc4",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +122,126 @@        self._plugin_path_cache = PLUGIN_PATH_CACHE[class_name]\n\n        self._searched_paths = set()\n\n    def _clear_caches(self):"
  },
  {
    "id" : "e8a32078-11d8-4916-ac5c-255342b81baa",
    "prId" : 54883,
    "prUrl" : "https://github.com/ansible/ansible/pull/54883#pullrequestreview-230723807",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a591512c-d065-427a-a9b7-a2446fd03076",
        "parentId" : null,
        "authorId" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "body" : "I think all of this stuff should go into a separate compat module abstracting hacks away.",
        "createdAt" : "2019-04-25T15:30:17Z",
        "updatedAt" : "2019-04-25T15:30:18Z",
        "lastEditedBy" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "tags" : [
        ]
      }
    ],
    "commit" : "de7cf3af20714085eff87b741caa50de65b5a540",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +28,32 @@from ansible.utils.plugin_docs import add_fragments\n\ntry:\n    import importlib.util\n    imp = None"
  },
  {
    "id" : "38a1607e-88d6-4c22-8620-9b81734abc9a",
    "prId" : 55633,
    "prUrl" : "https://github.com/ansible/ansible/pull/55633#pullrequestreview-229826336",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "67be715b-ac7a-462e-a28e-56eccccbeced",
        "parentId" : null,
        "authorId" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "body" : "All ```display.*``` calls need to be given text strings.",
        "createdAt" : "2019-04-23T21:53:29Z",
        "updatedAt" : "2019-04-23T21:53:30Z",
        "lastEditedBy" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "tags" : [
        ]
      },
      {
        "id" : "1191a7a6-322b-4034-9b45-c013e4537e7b",
        "parentId" : "67be715b-ac7a-462e-a28e-56eccccbeced",
        "authorId" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "body" : "A non-ascii byte string on python2 will trigger a traceback here whereas text strings will not:\r\n``` python\r\n>>> from ansible.utils.display import Display\r\n>>> Display().warning(b'caf\\xc3\\xa9')\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/srv/ansible/abadger/lib/ansible/utils/display.py\", line 244, in warning\r\n    self.display(new_msg, color=C.COLOR_WARN, stderr=True)\r\n  File \"/srv/ansible/abadger/lib/ansible/utils/display.py\", line 131, in display\r\n    msg = stringc(msg, color)\r\n  File \"/srv/ansible/abadger/lib/ansible/utils/color.py\", line 93, in stringc\r\n    return u\"\\n\".join([u\"\\033[%sm%s\\033[0m\" % (color_code, t) for t in text.split(u'\\n')])\r\nUnicodeDecodeError: 'ascii' codec can't decode byte 0xc3 in position 15: ordinal not in range(128)\r\n>>> Display().warning(b'caf\\xc3\\xa9'.decode('utf-8'))\r\n [WARNING]: café\r\n```",
        "createdAt" : "2019-04-23T22:09:59Z",
        "updatedAt" : "2019-04-23T22:10:00Z",
        "lastEditedBy" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "tags" : [
        ]
      },
      {
        "id" : "a3227b2b-f0ce-42e5-a951-76afd89ed2ec",
        "parentId" : "67be715b-ac7a-462e-a28e-56eccccbeced",
        "authorId" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "body" : "going to leave as is in current PR as this issue already existed, but creating new PR to fix this in general",
        "createdAt" : "2019-04-23T22:25:04Z",
        "updatedAt" : "2019-04-23T22:25:04Z",
        "lastEditedBy" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "tags" : [
        ]
      }
    ],
    "commit" : "ea131169b9e4342ee8695c2d580a88bbb75f4ac7",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +52,56 @@                    obj.add_directory(to_text(plugin_path))\n    else:\n        display.warning(\"Ignoring invalid path provided to plugin path: '%s' is not a directory\" % to_native(path))\n\n"
  },
  {
    "id" : "2d6a091a-c3c1-4b4e-ab9c-c9673341b7cf",
    "prId" : 65776,
    "prUrl" : "https://github.com/ansible/ansible/pull/65776#pullrequestreview-331946557",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e8d5d1e7-7caf-4997-94c3-1e6b6aa63fb7",
        "parentId" : null,
        "authorId" : "6b7e4265-ae86-4269-9bd7-f8ffa9085df6",
        "body" : "~Should that be `ret.sort(key=lambda p: p.endswith('windows'))` to match the logic before?~ I guess that was probably an oversight before.",
        "createdAt" : "2019-12-12T23:17:55Z",
        "updatedAt" : "2019-12-13T20:05:37Z",
        "lastEditedBy" : "6b7e4265-ae86-4269-9bd7-f8ffa9085df6",
        "tags" : [
        ]
      },
      {
        "id" : "67628d8f-3dfa-4423-88cf-b5303db26795",
        "parentId" : "e8d5d1e7-7caf-4997-94c3-1e6b6aa63fb7",
        "authorId" : "2f8132dc-12f8-44dc-8b97-1cf4c1616b68",
        "body" : "I think either would work. I just put the `/` in there. Some example data:\r\n```\r\n ('/Users/sdoran/Source/ansible/lib/ansible/modules/windows', 'setup.ps1'),\r\n ('/Users/sdoran/Source/ansible/lib/ansible/modules/windows', 'win_hosts.ps1'),\r\n```",
        "createdAt" : "2019-12-13T15:38:17Z",
        "updatedAt" : "2019-12-13T20:05:37Z",
        "lastEditedBy" : "2f8132dc-12f8-44dc-8b97-1cf4c1616b68",
        "tags" : [
        ]
      }
    ],
    "commit" : "690babd7515c39fc9bfa392a97395b2c6983c39c",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +276,280 @@        # also in the original order they were found in 'ret'.\n        # The .sort() method is guaranteed to be stable, so original order is preserved.\n        ret.sort(key=lambda p: p.endswith('/windows'))\n\n        # cache and return the result"
  },
  {
    "id" : "d8c79ab9-8760-4d26-8044-444937f79fa9",
    "prId" : 67684,
    "prUrl" : "https://github.com/ansible/ansible/pull/67684#pullrequestreview-392511494",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d985d87d-e385-4534-a8bb-67124e1d15f1",
        "parentId" : null,
        "authorId" : "38b7d9c4-df1f-44d2-a0a2-539900170fbe",
        "body" : "From the PR\r\n\r\n>  Bikeshed location of requires_ansible key\r\n\r\nI think this code implies that it's a top-level key in the `meta/routing.yml` file right?",
        "createdAt" : "2020-04-13T23:45:05Z",
        "updatedAt" : "2020-05-21T23:10:29Z",
        "lastEditedBy" : "38b7d9c4-df1f-44d2-a0a2-539900170fbe",
        "tags" : [
        ]
      }
    ],
    "commit" : "a7d0db69142134c2e36a0a62b81a32d9442792ef",
    "line" : 487,
    "diffHunk" : "@@ -1,1 +1036,1040 @@\n    try:\n        if not _does_collection_support_ansible_version(collection_meta.get('requires_ansible', ''), ansible_version):\n            mismatch_behavior = C.config.get_config_value('COLLECTIONS_ON_ANSIBLE_VERSION_MISMATCH')\n            message = 'Collection {0} does not support Ansible version {1}'.format(collection_name, ansible_version)"
  },
  {
    "id" : "7a283a0b-2e01-4ba9-8d86-552450f331f7",
    "prId" : 67684,
    "prUrl" : "https://github.com/ansible/ansible/pull/67684#pullrequestreview-415035129",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b5499ae9-a619-4860-8f1a-ed91d9a0c341",
        "parentId" : null,
        "authorId" : "7a1e5757-684b-4684-bcab-c114385bca28",
        "body" : "If both `removal_date` and `warning_text` keys are mentioned can the warning_text message be appended to the removal_date message? Currently, the removal_date is ignored if warning_text key is present.\r\nIt is useful in case of entry like:\r\n```\r\n      deprecation:\r\n        removal_date: 2022-06-01\r\n        warning_text: See the plugin documentation for more details.\r\n``` \r\nResulting deprecation notice:\r\n`arista.eos.acls has been deprecated and will be removed in a release after 2022-06-01. See the plugin documentation for more details.`",
        "createdAt" : "2020-05-20T06:48:53Z",
        "updatedAt" : "2020-05-21T23:10:29Z",
        "lastEditedBy" : "7a1e5757-684b-4684-bcab-c114385bca28",
        "tags" : [
        ]
      }
    ],
    "commit" : "a7d0db69142134c2e36a0a62b81a32d9442792ef",
    "line" : 75,
    "diffHunk" : "@@ -1,1 +137,141 @@        removal_date = deprecation.get('removal_date', None)\n        if not warning_text:\n            if removal_date:\n                warning_text = '{0} has been deprecated and will be removed in a release after {1}'.format(name, removal_date)\n            else:"
  }
]