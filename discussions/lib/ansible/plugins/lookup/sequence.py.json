[
  {
    "id" : "39cb5dfd-d4c5-496c-99c8-b7d3f88429d3",
    "prId" : 53275,
    "prUrl" : "https://github.com/ansible/ansible/pull/53275#pullrequestreview-210206190",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3629a3a3-d519-46ee-8c0d-a267947ed3e4",
        "parentId" : null,
        "authorId" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "body" : "This is a bit incorrect, like for all lookups, generated items might be a specific type (in this case, `ints`) but by default JInja2 converts everything into strings so you either enabled 'native types' or use casting on consumption.\r\n\r\nThis should be a general warning in the main lookup plugin page",
        "createdAt" : "2019-03-04T15:11:42Z",
        "updatedAt" : "2019-03-04T15:45:14Z",
        "lastEditedBy" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "tags" : [
        ]
      },
      {
        "id" : "74b03e96-3773-442a-a61e-3acb88829554",
        "parentId" : "3629a3a3-d519-46ee-8c0d-a267947ed3e4",
        "authorId" : "94ae5814-8889-4328-9b58-745772997928",
        "body" : "https://github.com/ansible/ansible/blob/222adde00e0ac2e73addd23be77c5afbd7ae6291/lib/ansible/plugins/lookup/sequence.py#L228",
        "createdAt" : "2019-03-04T15:15:57Z",
        "updatedAt" : "2019-03-04T15:45:14Z",
        "lastEditedBy" : "94ae5814-8889-4328-9b58-745772997928",
        "tags" : [
        ]
      },
      {
        "id" : "b99d7ceb-ff21-44d1-abf2-ff25c4545655",
        "parentId" : "3629a3a3-d519-46ee-8c0d-a267947ed3e4",
        "authorId" : "94ae5814-8889-4328-9b58-745772997928",
        "body" : "No, this is sequence lookup specific. All items are formatted (even if you don't specify the format) and returned as strings. Jinja2 comes into play later and fails if you try to do unsupported operation on strings, native types won't help with this.",
        "createdAt" : "2019-03-04T15:23:38Z",
        "updatedAt" : "2019-03-04T15:45:14Z",
        "lastEditedBy" : "94ae5814-8889-4328-9b58-745772997928",
        "tags" : [
        ]
      },
      {
        "id" : "77f5199f-5a65-4b6c-9b96-cb3e610987c2",
        "parentId" : "3629a3a3-d519-46ee-8c0d-a267947ed3e4",
        "authorId" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "body" : "ah, true, i forgot the `format` option forces always to stringify",
        "createdAt" : "2019-03-04T15:35:12Z",
        "updatedAt" : "2019-03-04T15:45:14Z",
        "lastEditedBy" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "tags" : [
        ]
      },
      {
        "id" : "3d7d8987-df77-4bc2-bea2-b907def58eb8",
        "parentId" : "3629a3a3-d519-46ee-8c0d-a267947ed3e4",
        "authorId" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "body" : "I would also point out that the `range` filter is a better alternative",
        "createdAt" : "2019-03-04T15:36:28Z",
        "updatedAt" : "2019-03-04T15:45:14Z",
        "lastEditedBy" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "tags" : [
        ]
      }
    ],
    "commit" : "89da7c0b7ea67593acdf2260fb1e5d736172b523",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +16,20 @@      - 'Numerical values can be specified in decimal, hexadecimal (0x3f8) or octal (0600).'\n      - Starting at version 1.9.2, negative strides are allowed.\n      - Generated items are strings. Use Jinja2 filters to convert items to preferred type, e.g. ``{{ 1 + item|int }}``.\n      - See also Jinja2 ``range`` filter as an alternative.\n    options:"
  }
]