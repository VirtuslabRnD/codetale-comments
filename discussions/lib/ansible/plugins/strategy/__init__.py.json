[
  {
    "id" : "29f00f66-f28c-4d63-b7e4-f80f1d2eba03",
    "prId" : 18946,
    "prUrl" : "https://github.com/ansible/ansible/pull/18946#pullrequestreview-15141341",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8ca73124-602a-48d9-b1c8-604ab74ea752",
        "parentId" : null,
        "authorId" : "fa0144fc-7424-474a-9ab5-059de28814b7",
        "body" : "May be worthwhile to make lines 513-528 a method on the class, so strategy sub classes could override it easier. May also make it easier to write tests for.",
        "createdAt" : "2017-01-04T15:51:13Z",
        "updatedAt" : "2017-01-04T16:02:52Z",
        "lastEditedBy" : "fa0144fc-7424-474a-9ab5-059de28814b7",
        "tags" : [
        ]
      },
      {
        "id" : "37c9e9f1-df68-42a1-b05a-caff3df79e07",
        "parentId" : "8ca73124-602a-48d9-b1c8-604ab74ea752",
        "authorId" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "body" : "we can refactor that easily if we ever get the the point of needing it, i really dont see a use case so I consider that a premature optimization at this point",
        "createdAt" : "2017-01-04T16:11:54Z",
        "updatedAt" : "2017-01-04T16:11:55Z",
        "lastEditedBy" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "tags" : [
        ]
      }
    ],
    "commit" : "f084a950b31ac834526a6edf59223f28094cd01f",
    "line" : 65,
    "diffHunk" : "@@ -1,1 +511,515 @@                                    self._variable_manager.set_host_facts(target_host, result_item['ansible_facts'].copy())\n\n                    if 'ansible_stats' in result_item and 'data' in result_item['ansible_stats'] and result_item['ansible_stats']['data']:\n\n                        if 'per_host' not in result_item['ansible_stats'] or result_item['ansible_stats']['per_host']:"
  },
  {
    "id" : "0bb803a9-f58f-43e9-99d7-44a93ab04266",
    "prId" : 18946,
    "prUrl" : "https://github.com/ansible/ansible/pull/18946#pullrequestreview-15138520",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "aff1c227-54f8-40a0-b4d4-9e543cc38793",
        "parentId" : null,
        "authorId" : "fa0144fc-7424-474a-9ab5-059de28814b7",
        "body" : "Could this block (520-528) be a method on the AggregateStats class? something like AggregateStats.aggregate_custom_stats(data=result_item['ansible_stats'], host_list=host_list)",
        "createdAt" : "2017-01-04T15:59:12Z",
        "updatedAt" : "2017-01-04T16:02:52Z",
        "lastEditedBy" : "fa0144fc-7424-474a-9ab5-059de28814b7",
        "tags" : [
        ]
      }
    ],
    "commit" : "f084a950b31ac834526a6edf59223f28094cd01f",
    "line" : 74,
    "diffHunk" : "@@ -1,1 +520,524 @@                        data = result_item['ansible_stats']['data']\n                        aggregate = 'aggregate' in result_item['ansible_stats'] and result_item['ansible_stats']['aggregate']\n                        for myhost in host_list:\n                            for k in data.keys():\n                                if aggregate:"
  },
  {
    "id" : "78925d90-4649-4a06-9f85-32c730d25dae",
    "prId" : 26153,
    "prUrl" : "https://github.com/ansible/ansible/pull/26153#pullrequestreview-55800915",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "90f8890c-40bc-4254-84f8-001bbe9f8a84",
        "parentId" : null,
        "authorId" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "body" : "I don't mess around in strategy often so I don't know if this is normal but,, why is the default here True but False everywhere else?",
        "createdAt" : "2017-08-11T13:45:32Z",
        "updatedAt" : "2017-08-11T13:45:32Z",
        "lastEditedBy" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "tags" : [
        ]
      },
      {
        "id" : "253acc3a-b2a5-4bd2-b38c-387b2f20b230",
        "parentId" : "90f8890c-40bc-4254-84f8-001bbe9f8a84",
        "authorId" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "body" : "because `set_fact` is only module in which this was not true, all other 'ansible_facts' should be cacheable by default.",
        "createdAt" : "2017-08-11T13:52:04Z",
        "updatedAt" : "2017-08-11T13:52:04Z",
        "lastEditedBy" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "tags" : [
        ]
      }
    ],
    "commit" : "1403ff1f2af77f13917cc04ebdc346fb09b0f0c5",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +512,516 @@                                    self._variable_manager.set_host_variable(target_host, var_name, var_value)\n                        else:\n                            cacheable = result_item.pop('ansible_facts_cacheable', True)\n                            for target_host in host_list:\n                                if cacheable:"
  },
  {
    "id" : "2ee80a08-1ca1-4934-a667-ec34da48ddd8",
    "prId" : 26406,
    "prUrl" : "https://github.com/ansible/ansible/pull/26406#pullrequestreview-47918034",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "02172f3a-e24f-473b-b9f4-444f3b4c8c6d",
        "parentId" : null,
        "authorId" : "99dfb093-81dd-44d0-97be-6dcf3059e796",
        "body" : "or even shorter?\r\n~~~diff\r\n-                    self._variable_manager.clear_facts(host)\r\n+                    self._variable_manager.clear_facts(host.name)\r\n~~~",
        "createdAt" : "2017-07-04T19:08:05Z",
        "updatedAt" : "2017-07-04T19:09:14Z",
        "lastEditedBy" : "99dfb093-81dd-44d0-97be-6dcf3059e796",
        "tags" : [
        ]
      },
      {
        "id" : "038b36dd-a4bc-4553-b8c3-de4d9b0a9f1a",
        "parentId" : "02172f3a-e24f-473b-b9f4-444f3b4c8c6d",
        "authorId" : "56ea96e2-e98d-42e5-8269-7e7a4631e0cf",
        "body" : "Fine by me :) I just modelled this after 3101e24 as I assumed it was already following best practice.",
        "createdAt" : "2017-07-04T19:17:28Z",
        "updatedAt" : "2017-07-04T19:17:28Z",
        "lastEditedBy" : "56ea96e2-e98d-42e5-8269-7e7a4631e0cf",
        "tags" : [
        ]
      }
    ],
    "commit" : "2fbd455d3b430734a1fef54aecc6b2b95ec699cd",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +868,872 @@                for host in self._inventory.get_hosts(iterator._play.hosts):\n                    hostname = host.get_name()\n                    self._variable_manager.clear_facts(hostname)\n                msg = \"facts cleared\"\n            else:"
  },
  {
    "id" : "f1fbb3c1-728a-428d-a3f2-127f99da5642",
    "prId" : 34006,
    "prUrl" : "https://github.com/ansible/ansible/pull/34006#pullrequestreview-87604714",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "686f7f02-840b-480c-a12d-7054cbc85356",
        "parentId" : null,
        "authorId" : "fa0144fc-7424-474a-9ab5-059de28814b7",
        "body" : "I wouldn't mind seeing the debugging implementation bits extract to a separate python file (lib/ansible/utils/strategy_debugger.py ?).  That is assuming adding python files to strategy/ that dont have a StrategyModule in them is a problem.",
        "createdAt" : "2018-01-09T17:56:37Z",
        "updatedAt" : "2018-01-09T17:56:37Z",
        "lastEditedBy" : "fa0144fc-7424-474a-9ab5-059de28814b7",
        "tags" : [
        ]
      }
    ],
    "commit" : "bc1aaee6230a94bc2faca517d5f6baaed3ae1549",
    "line" : 143,
    "diffHunk" : "@@ -1,1 +1039,1043 @@\n\nclass Debugger(cmd.Cmd):\n    prompt_continuous = '> '  # multiple lines\n"
  },
  {
    "id" : "b066ba7a-d091-48ae-8bd1-e56506769d6d",
    "prId" : 34006,
    "prUrl" : "https://github.com/ansible/ansible/pull/34006#pullrequestreview-87604841",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7a6d37e7-e8dc-4bd4-bf4d-d1405283c080",
        "parentId" : null,
        "authorId" : "fa0144fc-7424-474a-9ab5-059de28814b7",
        "body" : "üëç for enum",
        "createdAt" : "2018-01-09T17:57:01Z",
        "updatedAt" : "2018-01-09T17:57:01Z",
        "lastEditedBy" : "fa0144fc-7424-474a-9ab5-059de28814b7",
        "tags" : [
        ]
      }
    ],
    "commit" : "bc1aaee6230a94bc2faca517d5f6baaed3ae1549",
    "line" : 137,
    "diffHunk" : "@@ -1,1 +1033,1037 @@    REDO = 1\n    CONTINUE = 2\n    EXIT = 3\n\n    def __init__(self, result=EXIT):"
  },
  {
    "id" : "26214384-8e1a-4c85-99ef-f278f385a13c",
    "prId" : 43857,
    "prUrl" : "https://github.com/ansible/ansible/pull/43857#pullrequestreview-148544361",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5b29942d-bd7d-4aaf-a865-ef0d0f698b5a",
        "parentId" : null,
        "authorId" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "body" : "does a task result ever get registered for when not ignoring unreachable?",
        "createdAt" : "2018-08-21T22:43:59Z",
        "updatedAt" : "2018-08-23T15:00:50Z",
        "lastEditedBy" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "tags" : [
        ]
      },
      {
        "id" : "1ba47cda-4485-422c-8377-ad9cd9ad5a3d",
        "parentId" : "5b29942d-bd7d-4aaf-a865-ef0d0f698b5a",
        "authorId" : "06ab4cf8-4a18-478e-93ee-69929f4bffc6",
        "body" : "It would be treated the same way as it was, so I think the answer is no. ",
        "createdAt" : "2018-08-22T15:30:03Z",
        "updatedAt" : "2018-08-23T15:00:50Z",
        "lastEditedBy" : "06ab4cf8-4a18-478e-93ee-69929f4bffc6",
        "tags" : [
        ]
      },
      {
        "id" : "4c4ee716-d080-4d2b-b1c3-024befc23e4d",
        "parentId" : "5b29942d-bd7d-4aaf-a865-ef0d0f698b5a",
        "authorId" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "body" : "tempted to 'fix' that in the future, but not something this PR should handle",
        "createdAt" : "2018-08-22T15:33:31Z",
        "updatedAt" : "2018-08-23T15:00:50Z",
        "lastEditedBy" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "tags" : [
        ]
      },
      {
        "id" : "7aad0065-e0ac-4d48-b8a4-70b8a33ec4f9",
        "parentId" : "5b29942d-bd7d-4aaf-a865-ef0d0f698b5a",
        "authorId" : "06ab4cf8-4a18-478e-93ee-69929f4bffc6",
        "body" : "I'm not sure how that would be used, since unreachable host errors out without `ignore_unreachable`, the playbook wouldn't continue to use he registered result. Or do you mean a different \"register\" than I'm thinking?",
        "createdAt" : "2018-08-22T15:37:09Z",
        "updatedAt" : "2018-08-23T15:00:50Z",
        "lastEditedBy" : "06ab4cf8-4a18-478e-93ee-69929f4bffc6",
        "tags" : [
        ]
      },
      {
        "id" : "3bf4d054-8ea8-497c-8758-b73e2b9c85bf",
        "parentId" : "5b29942d-bd7d-4aaf-a865-ef0d0f698b5a",
        "authorId" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "body" : "I meant to change it to allow it to register, though it would only be visible via `hostvars[<unreachablehost>][<regvar>]`",
        "createdAt" : "2018-08-22T15:40:17Z",
        "updatedAt" : "2018-08-23T15:00:50Z",
        "lastEditedBy" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "tags" : [
        ]
      }
    ],
    "commit" : "d8687e7b125802c51aad5439712c9bc01f0d4411",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +511,515 @@                if not ignore_unreachable:\n                    self._tqm._unreachable_hosts[original_host.name] = True\n                    iterator._play._removed_hosts.append(original_host.name)\n                else:\n                    self._tqm._stats.increment('skipped', original_host.name)"
  },
  {
    "id" : "d501252b-ecf8-439d-9416-5ff347c2cfae",
    "prId" : 58400,
    "prUrl" : "https://github.com/ansible/ansible/pull/58400#pullrequestreview-264948500",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f35bf6c5-5e49-474c-b0d7-7a4b9130be3d",
        "parentId" : null,
        "authorId" : "311820dd-fcb9-46df-a201-9c0e7d6fac58",
        "body" : "This one's probably also suspect, though in this case I think we want to *remove* hosts but not add new ones. It really depends on how we expect plays to behave when hosts appear/disappear mid-play, which doesn't seem to be perfectly defined.",
        "createdAt" : "2019-07-18T22:54:11Z",
        "updatedAt" : "2019-07-22T17:46:32Z",
        "lastEditedBy" : "311820dd-fcb9-46df-a201-9c0e7d6fac58",
        "tags" : [
        ]
      },
      {
        "id" : "bf414769-13cc-40ba-978a-494a9e4374aa",
        "parentId" : "f35bf6c5-5e49-474c-b0d7-7a4b9130be3d",
        "authorId" : "4b69a0b5-ac6f-45e9-9507-dd1385182f29",
        "body" : "I think this one is correct.  `inventory.refresh_inventory()` fully clears the inventory and re-populates it.  A call to `get_hosts` would have then re-populated based on the new state of the inventory which would have both added new hosts from inventory sources and removed hosts.",
        "createdAt" : "2019-07-22T17:23:30Z",
        "updatedAt" : "2019-07-22T17:46:32Z",
        "lastEditedBy" : "4b69a0b5-ac6f-45e9-9507-dd1385182f29",
        "tags" : [
        ]
      },
      {
        "id" : "dd6f6807-c6ff-4709-81d2-2f7d8667d91a",
        "parentId" : "f35bf6c5-5e49-474c-b0d7-7a4b9130be3d",
        "authorId" : "311820dd-fcb9-46df-a201-9c0e7d6fac58",
        "body" : "It might be correct in that it matches what was happening before, but there seemed to be some disagreement about what exactly should be in the `ansible_play_hosts` vars when the inventory changes mid-play. Preserving the pre-Perfy behavior is probably best for now, but it's probably a decision we should make explicitly (and if we were designing it all from scratch, I'd argue that the vars should reflect what's actually happening in the current play, which they sometimes don't today). I tripped over several \"unintuitive\" dynamic inventory behaviors while testing this stuff (most of which existed previously)- we don't need to correct them here, but I also don't want to forget about them, so if we're not going to fix them, I'll open separate issues for them.",
        "createdAt" : "2019-07-22T17:35:32Z",
        "updatedAt" : "2019-07-22T17:46:32Z",
        "lastEditedBy" : "311820dd-fcb9-46df-a201-9c0e7d6fac58",
        "tags" : [
        ]
      },
      {
        "id" : "dccb92c9-8668-4369-844b-7bf26c76e148",
        "parentId" : "f35bf6c5-5e49-474c-b0d7-7a4b9130be3d",
        "authorId" : "4b69a0b5-ac6f-45e9-9507-dd1385182f29",
        "body" : "Due to the potential of unintended consequences of this PR already, I'd like to limit behavior changes here if possible.",
        "createdAt" : "2019-07-22T17:38:28Z",
        "updatedAt" : "2019-07-22T17:46:32Z",
        "lastEditedBy" : "4b69a0b5-ac6f-45e9-9507-dd1385182f29",
        "tags" : [
        ]
      }
    ],
    "commit" : "8864ba16142f8639a88b58868fcc97c9520f93cc",
    "line" : 201,
    "diffHunk" : "@@ -1,1 +1019,1023 @@                self._cond_not_supported_warn(meta_action)\n            self._inventory.refresh_inventory()\n            self._set_hosts_cache(iterator._play)\n            msg = \"inventory successfully refreshed\"\n        elif meta_action == 'clear_facts':"
  },
  {
    "id" : "9d205416-1fe1-45bb-8359-0968da4a26a1",
    "prId" : 58464,
    "prUrl" : "https://github.com/ansible/ansible/pull/58464#pullrequestreview-255408553",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8ea62be5-77b0-4250-92ca-f2cef2e93b85",
        "parentId" : null,
        "authorId" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "body" : "we might need both unless file_name is always absolute",
        "createdAt" : "2019-06-27T17:37:41Z",
        "updatedAt" : "2019-06-27T17:37:42Z",
        "lastEditedBy" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "tags" : [
        ]
      },
      {
        "id" : "2d19ada2-d591-4305-8b58-c9c972d2e389",
        "parentId" : "8ea62be5-77b0-4250-92ca-f2cef2e93b85",
        "authorId" : "4b69a0b5-ac6f-45e9-9507-dd1385182f29",
        "body" : "`file_name` is absolute. It was used in the past, I just made an incorrect assumption when I made this change to override the reason.",
        "createdAt" : "2019-06-27T18:37:03Z",
        "updatedAt" : "2019-06-27T18:37:03Z",
        "lastEditedBy" : "4b69a0b5-ac6f-45e9-9507-dd1385182f29",
        "tags" : [
        ]
      }
    ],
    "commit" : "0d989bf190f3a88213f9a6a6e9e4563faccd6d8a",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +815,819 @@        except AnsibleError as e:\n            if isinstance(e, AnsibleFileNotFound):\n                reason = \"Could not find or access '%s' on the Ansible Controller.\" % to_text(e.file_name)\n            else:\n                reason = to_text(e)"
  },
  {
    "id" : "3e8d9ecc-0836-408e-be09-6c92a5cd4109",
    "prId" : 64906,
    "prUrl" : "https://github.com/ansible/ansible/pull/64906#pullrequestreview-365812137",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "512f6f10-de86-489c-b45c-a399169b685a",
        "parentId" : null,
        "authorId" : "311820dd-fcb9-46df-a201-9c0e7d6fac58",
        "body" : "Minor nit, but the dual side-effect thing here feels kinda fragile in the face of future changes to this code (since it's both setting facts on delegated hosts and removing items from the original result). Maybe just return two dicts and handle the actual setting in the caller?",
        "createdAt" : "2020-01-16T21:18:11Z",
        "updatedAt" : "2020-04-06T18:53:28Z",
        "lastEditedBy" : "311820dd-fcb9-46df-a201-9c0e7d6fac58",
        "tags" : [
        ]
      },
      {
        "id" : "e3be9fff-e212-4e71-be68-4e40939b9d3a",
        "parentId" : "512f6f10-de86-489c-b45c-a399169b685a",
        "authorId" : "4b69a0b5-ac6f-45e9-9507-dd1385182f29",
        "body" : "I get what you mean, but after looking at it, I'd rather not go down this route.  The calling code, would have to be basically rewritten to support this.  I could make it potentially more clear if I just had it return `result`. But since the operation is mutable, it's unnecessary.",
        "createdAt" : "2020-02-27T16:35:51Z",
        "updatedAt" : "2020-04-06T18:53:28Z",
        "lastEditedBy" : "4b69a0b5-ac6f-45e9-9507-dd1385182f29",
        "tags" : [
        ]
      }
    ],
    "commit" : "e449e8040cabb26ed610d872f2132d6a346e43fd",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +392,396 @@        return [host_name or task.delegate_to]\n\n    def _set_always_delegated_facts(self, result, task):\n        \"\"\"Sets host facts for ``delegate_to`` hosts for facts that should\n        always be delegated"
  },
  {
    "id" : "750541f0-822f-4bfd-a4a4-7ed6db5a45da",
    "prId" : 64906,
    "prUrl" : "https://github.com/ansible/ansible/pull/64906#pullrequestreview-365810197",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b8a7a928-5470-4cfb-8812-cc5cfadadb57",
        "parentId" : null,
        "authorId" : "311820dd-fcb9-46df-a201-9c0e7d6fac58",
        "body" : "This one screams (to me at least) for a nested generator- I was having a hard time following the aliased function stuff.\r\n\r\n```suggestion:\r\n        delegated_keys = set((k for k in facts if any((k.startswith(prefix) for prefix in ALWAYS_DELEGATE_FACTS))))\r\n```\r\n",
        "createdAt" : "2020-01-16T21:22:49Z",
        "updatedAt" : "2020-04-06T18:53:28Z",
        "lastEditedBy" : "311820dd-fcb9-46df-a201-9c0e7d6fac58",
        "tags" : [
        ]
      },
      {
        "id" : "890487bc-fcfe-4781-bbb2-de8f2cf15b01",
        "parentId" : "b8a7a928-5470-4cfb-8812-cc5cfadadb57",
        "authorId" : "4b69a0b5-ac6f-45e9-9507-dd1385182f29",
        "body" : "I actually did that the first go around. And then I decided to test it for performance, and surprisingly the nested generator expression turned out to be slower.",
        "createdAt" : "2020-01-16T22:03:02Z",
        "updatedAt" : "2020-04-06T18:53:28Z",
        "lastEditedBy" : "4b69a0b5-ac6f-45e9-9507-dd1385182f29",
        "tags" : [
        ]
      },
      {
        "id" : "703a3270-f04f-4df5-9baa-6b9d8cf4d792",
        "parentId" : "b8a7a928-5470-4cfb-8812-cc5cfadadb57",
        "authorId" : "4b69a0b5-ac6f-45e9-9507-dd1385182f29",
        "body" : "The aliased function stuff would be just as useful in a nested generator if possible.  I don't know where the post is that explains this, but this has started becoming more common in the cpython code base. It eliminates extra attribute lookups, which improves performance.",
        "createdAt" : "2020-02-27T16:33:35Z",
        "updatedAt" : "2020-04-06T18:53:28Z",
        "lastEditedBy" : "4b69a0b5-ac6f-45e9-9507-dd1385182f29",
        "tags" : [
        ]
      }
    ],
    "commit" : "e449e8040cabb26ed610d872f2132d6a346e43fd",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +404,408 @@\n        facts = result['ansible_facts']\n        always_keys = set()\n        _add = always_keys.add\n        for fact_key in facts:"
  }
]