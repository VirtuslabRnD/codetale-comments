[
  {
    "id" : "17c7797a-2387-4c87-b5a8-e90e92cc2371",
    "prId" : 50336,
    "prUrl" : "https://github.com/ansible/ansible/pull/50336#pullrequestreview-192934579",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4d1c047d-6b63-46de-a8f1-bb6ebfe85d93",
        "parentId" : null,
        "authorId" : "fc84e3a8-7a8a-45ea-ba68-7e6e0b604075",
        "body" : "I'm not sure what the point is to assigning a class with only static methods to an instance variable.\r\n\r\n(For that matter, it is not clear to me why this is a class at all, but that seems less confusing)",
        "createdAt" : "2019-01-14T17:42:05Z",
        "updatedAt" : "2019-02-01T01:35:48Z",
        "lastEditedBy" : "fc84e3a8-7a8a-45ea-ba68-7e6e0b604075",
        "tags" : [
        ]
      },
      {
        "id" : "9701f237-549f-4b3f-924c-b25851b80a79",
        "parentId" : "4d1c047d-6b63-46de-a8f1-bb6ebfe85d93",
        "authorId" : "c7a02b80-6af5-460d-82f4-5efd2774324a",
        "body" : "We do this for consistency and organization. Our modules load FMGRCommon the same way. It's easier for module authors to have them wrapped up in a variable. I've left this one in. Let me know if you have any other feedback on this.",
        "createdAt" : "2019-01-16T00:57:03Z",
        "updatedAt" : "2019-02-01T01:35:48Z",
        "lastEditedBy" : "c7a02b80-6af5-460d-82f4-5efd2774324a",
        "tags" : [
        ]
      }
    ],
    "commit" : "31bab1ff304aaea6587d54181530ee74baa00908",
    "line" : 52,
    "diffHunk" : "@@ -1,1 +50,54 @@        self._url = \"/jsonrpc\"\n        self._host = None\n        self._tools = FMGRCommon\n        self._debug = False\n        self._connected_fmgr = None"
  },
  {
    "id" : "a5930918-2f3a-43c2-b411-44e5cad15fc7",
    "prId" : 62534,
    "prUrl" : "https://github.com/ansible/ansible/pull/62534#pullrequestreview-335525605",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "627dc419-a549-4140-8ee4-e94db6cddadb",
        "parentId" : null,
        "authorId" : "5473f0fb-a7e6-4ca6-8b77-6c6367431436",
        "body" : "hi Luke, \r\n    I see from the code, you query the lock info and try to unlock the adoms upon logging out.\r\n    however, I don't see any places where lock_adom() is called to lock a domain. \r\n    if we don't explicitly lock the domain in our plugin, is it required to unlock it every time when the plugin is logging out?\r\n\r\n+ @frankshen01 \r\n\r\nthanks,\r\nLink",
        "createdAt" : "2019-12-11T01:32:19Z",
        "updatedAt" : "2020-02-11T18:26:12Z",
        "lastEditedBy" : "5473f0fb-a7e6-4ca6-8b77-6c6367431436",
        "tags" : [
        ]
      },
      {
        "id" : "7b02c112-a1ec-41f8-884c-8466154201aa",
        "parentId" : "627dc419-a549-4140-8ee4-e94db6cddadb",
        "authorId" : "c7a02b80-6af5-460d-82f4-5efd2774324a",
        "body" : "It's a measure to make sure that it gets unlocked, always. If the session that does the locking, doesn't unlock it, it's hard to reverse that. So no matter what, Ansible has to unlock when its done. This is another layer to make sure that happens.\r\n",
        "createdAt" : "2019-12-20T21:12:01Z",
        "updatedAt" : "2020-02-11T18:26:12Z",
        "lastEditedBy" : "c7a02b80-6af5-460d-82f4-5efd2774324a",
        "tags" : [
        ]
      }
    ],
    "commit" : "0da1f42a1b91c18fdc927c31bd0e1b34c22df6eb",
    "line" : 192,
    "diffHunk" : "@@ -1,1 +322,326 @@            self.unlock_adom(adom)\n\n    def lock_adom(self, adom=None, *args, **kwargs):\n        \"\"\"\n        Locks an ADOM for changes"
  }
]