[
  {
    "id" : "b827838b-1adb-4b74-b6d8-d2fe4fd00294",
    "prId" : 14490,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "59391467-9b4e-42e8-a230-7100aba988ca",
        "parentId" : null,
        "authorId" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "body" : "Since we aren't sending the errormsg to an exception, we want to use to_unicode rather than to_bytes.  to_bytes won't cause any problems with the code here in python2 but it will fail in python3 (because the string literals will be of the text type and so it won't match with errormsg as bytes then.)\n",
        "createdAt" : "2016-02-17T08:24:20Z",
        "updatedAt" : "2016-02-18T09:41:57Z",
        "lastEditedBy" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "tags" : [
        ]
      }
    ],
    "commit" : "2b5fffa751c0a6ec364e66cc648f456d28b3a8a7",
    "line" : null,
    "diffHunk" : "@@ -1,1 +336,340 @@                x = \"2\" # cannot read file\n            elif errormsg.endswith('MODULE FAILURE'):\n                x = \"4\" # python not found or module uncaught exception\n        finally:\n            return x"
  },
  {
    "id" : "6341b94b-d02c-4f66-a444-4eb4fbde98d4",
    "prId" : 20192,
    "prUrl" : "https://github.com/ansible/ansible/pull/20192#pullrequestreview-16496196",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "78a4167b-7296-47a5-8dd1-6e71459d8846",
        "parentId" : null,
        "authorId" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "body" : "I heard you didn't like the ``` list(data.keys())``` idiom.  Since you're really filtering a list here, you can do it with a list comprehension instead:\r\n``` python\r\nfor key in  [k for k in data.keys() if key.startswith('_ansible_') or key in C.INTERNAL_RESULT_KEYS ]:\r\n    display.warning([...])\r\n    del data[key]\r\n```\r\nWith such a long conditional, I like to break the filtering over one or more statements like these examples:\r\n\r\n``` python\r\nbadkeys = [k for k in data.keys() if key.startswith('_ansible_') or key in C.INTERNAL_RESULT_KEYS ]\r\nfor key in badkeys:\r\n    [...]\r\n\r\n# Generator expression so we don't create an extra list (sometimes slower but always uses less memory)\r\nbadkeys = (k for k in data.keys() if key.startswith('_ansible_'))\r\n# list comprehension so that we don't delete keys from the dict while a generator is still looping through them\r\nbadkeys = [k for k in badkeys if key in C.INTERNAL_RESULT_KEYS]\r\nfor key in badkeys:\r\n    [...]\r\n```\r\n\r\nChoose whichever idiom is the most readable to you.",
        "createdAt" : "2017-01-12T21:40:24Z",
        "updatedAt" : "2017-01-12T21:40:24Z",
        "lastEditedBy" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "tags" : [
        ]
      },
      {
        "id" : "ac635627-26ce-4268-bcf0-4d8c5747d20f",
        "parentId" : "78a4167b-7296-47a5-8dd1-6e71459d8846",
        "authorId" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "body" : "at this point `list(dict.keys())` seems the least evil",
        "createdAt" : "2017-01-13T01:48:23Z",
        "updatedAt" : "2017-01-13T01:48:44Z",
        "lastEditedBy" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "tags" : [
        ]
      }
    ],
    "commit" : "1a03061b431a943eb366ba3fc25c8595bd2a4663",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +683,687 @@    def _remove_internal_keys(self, data):\n        for key in list(data.keys()):\n            if key.startswith('_ansible_') or key in C.INTERNAL_RESULT_KEYS:\n                display.warning(\"Removed unexpected internal key in module return: %s = %s\" % (key, data[key]))\n                del data[key]"
  },
  {
    "id" : "1f830fc0-0293-46ae-8746-1afc136fcf7d",
    "prId" : 22790,
    "prUrl" : "https://github.com/ansible/ansible/pull/22790#pullrequestreview-28202115",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5595e3b3-576c-4ba6-bcca-40edb1013f0d",
        "parentId" : null,
        "authorId" : "fa0144fc-7424-474a-9ab5-059de28814b7",
        "body" : "Seems reasonable for a 2.3 targeted fix.\r\n\r\nLong term (after 2.3) may be useful to add a constant for the keys that are whitelisted ( ie something like `and key not in C.INTERNAL_RESULT_KEYS_WHITELIST` )\r\n\r\n",
        "createdAt" : "2017-03-21T14:27:58Z",
        "updatedAt" : "2017-03-22T01:48:17Z",
        "lastEditedBy" : "fa0144fc-7424-474a-9ab5-059de28814b7",
        "tags" : [
        ]
      },
      {
        "id" : "bb4bf3d0-4286-4f68-8f99-952f823d8186",
        "parentId" : "5595e3b3-576c-4ba6-bcca-40edb1013f0d",
        "authorId" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "body" : "well, parsed should be only key needed at this point, anything else should be consumed inside the previous code or generated afterwards",
        "createdAt" : "2017-03-21T18:41:58Z",
        "updatedAt" : "2017-03-22T01:48:17Z",
        "lastEditedBy" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "tags" : [
        ]
      }
    ],
    "commit" : "2da278a6736d788f128bc2ff1ffe31a36ae4ae81",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +767,771 @@    def _remove_internal_keys(self, data):\n        for key in list(data.keys()):\n            if key.startswith('_ansible_') and key != '_ansible_parsed' or key in C.INTERNAL_RESULT_KEYS:\n                display.warning(\"Removed unexpected internal key in module return: %s = %s\" % (key, data[key]))\n                del data[key]"
  },
  {
    "id" : "e4249b2c-8dbe-44c3-946e-9e4ac0acfbc3",
    "prId" : 22845,
    "prUrl" : "https://github.com/ansible/ansible/pull/22845#pullrequestreview-28251345",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "253e98c3-a1f5-49ad-a9c2-2019cca52f78",
        "parentId" : null,
        "authorId" : "91c63cfe-0504-4f72-afa0-80b301c25eca",
        "body" : "I know, right? But if `data['stdout']=False`, then `data.get('stdout', u'')` returns `False`. That's why I added a comment- it isn't intuitive.\r\n\r\nThe next line is `txt.splitlines()`, which doesn't work on `False`.\r\n\r\nI think this would also fail for `None`. It took some REPL work to make sure I understood what was happening.",
        "createdAt" : "2017-03-21T22:02:03Z",
        "updatedAt" : "2017-03-21T22:02:03Z",
        "lastEditedBy" : "91c63cfe-0504-4f72-afa0-80b301c25eca",
        "tags" : [
        ]
      },
      {
        "id" : "49a9c990-6eaa-423c-b0c0-aef4f3bee2a7",
        "parentId" : "253e98c3-a1f5-49ad-a9c2-2019cca52f78",
        "authorId" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "body" : "just realized same ... really hate how stupid this corner case is",
        "createdAt" : "2017-03-21T22:05:29Z",
        "updatedAt" : "2017-03-21T22:05:29Z",
        "lastEditedBy" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "tags" : [
        ]
      }
    ],
    "commit" : "e62d8166cc9e380ad0d5744e7f2cec585bd63a67",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +756,760 @@        if 'stdout' in data and 'stdout_lines' not in data:\n            # if the value is 'False', a default won't catch it.\n            txt = data.get('stdout', None) or u''\n            data['stdout_lines'] = txt.splitlines()\n        if 'stderr' in data and 'stderr_lines' not in data:"
  },
  {
    "id" : "f936653c-e723-483d-acf5-f1681e59b790",
    "prId" : 23664,
    "prUrl" : "https://github.com/ansible/ansible/pull/23664#pullrequestreview-36048033",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "58f63149-b61c-42c1-931c-8c6e64238cd1",
        "parentId" : null,
        "authorId" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "body" : "unrelated fix, but NICE!",
        "createdAt" : "2017-05-03T15:09:04Z",
        "updatedAt" : "2017-05-03T15:35:06Z",
        "lastEditedBy" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "tags" : [
        ]
      }
    ],
    "commit" : "d2a831fceaae53c9ed600a756de72abcfe59cd99",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +538,542 @@                x = \"4\"  # python not found or module uncaught exception\n            elif 'json' in errormsg or 'simplejson' in errormsg:\n                x = \"5\" # json or simplejson modules needed\n        finally:\n            return x"
  },
  {
    "id" : "c60b17f8-f3d9-45ed-89ba-b9276d5c0e5b",
    "prId" : 29839,
    "prUrl" : "https://github.com/ansible/ansible/pull/29839#pullrequestreview-62013476",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cdf2843e-28b5-435e-8676-ccbe6b8aa73a",
        "parentId" : null,
        "authorId" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "body" : "Does this one needs to set the default value for raw_environment_out?  (it stood out when I was just scanning the changes but looking at the code, I think it may be purely used for side effects so perhaps it is okay to leave it as None.",
        "createdAt" : "2017-09-12T03:35:36Z",
        "updatedAt" : "2017-09-12T03:41:24Z",
        "lastEditedBy" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "tags" : [
        ]
      },
      {
        "id" : "ab1c15a3-a18d-4729-8b3a-a146520eef2d",
        "parentId" : "cdf2843e-28b5-435e-8676-ccbe6b8aa73a",
        "authorId" : "380aef6a-3fbb-41ad-819b-bada96e05807",
        "body" : "Since the only access to this is protected by the `if isinstance(raw_environment_out, dict):` conditional, it's fine to leave it as `None`.",
        "createdAt" : "2017-09-12T03:40:27Z",
        "updatedAt" : "2017-09-12T03:41:24Z",
        "lastEditedBy" : "380aef6a-3fbb-41ad-819b-bada96e05807",
        "tags" : [
        ]
      }
    ],
    "commit" : "9a7c86b88d416d1d7ac2f275977a814d17113f51",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +170,174 @@        '''\n        Builds the environment string to be used when executing the remote task.\n        '''\n\n        final_environment = dict()"
  },
  {
    "id" : "7bf92509-d4ee-499a-b764-b6d52c1a3bfb",
    "prId" : 36755,
    "prUrl" : "https://github.com/ansible/ansible/pull/36755#pullrequestreview-127464307",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a68142fb-cba4-48e2-9d99-9891987c2b91",
        "parentId" : null,
        "authorId" : "805b28a3-a7f5-4181-8062-fa7efe46a3ae",
        "body" : "I think that this isn't doing what you expect, the code does\r\n\r\n`expand_path = ('~%s' % self._play_context.remote_user) or self._connection.default_user or ''`\r\n\r\ninstead of\r\n\r\n`expand_path = '~%s' % (self._play_context.remote_user or self._connection.default_user or '')`",
        "createdAt" : "2018-06-10T09:10:55Z",
        "updatedAt" : "2018-06-10T09:11:42Z",
        "lastEditedBy" : "805b28a3-a7f5-4181-8062-fa7efe46a3ae",
        "tags" : [
        ]
      },
      {
        "id" : "4f51f311-3fcb-42ac-8dad-3c67d46ac0fd",
        "parentId" : "a68142fb-cba4-48e2-9d99-9891987c2b91",
        "authorId" : "94ae5814-8889-4328-9b58-745772997928",
        "body" : "Thanks. It's already fixed in `devel` ;-)",
        "createdAt" : "2018-06-11T07:56:53Z",
        "updatedAt" : "2018-06-11T07:56:53Z",
        "lastEditedBy" : "94ae5814-8889-4328-9b58-745772997928",
        "tags" : [
        ]
      }
    ],
    "commit" : "eb8f155f876a581c6cbcd6149b4098272a3cbf3a",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +572,576 @@        else:\n            # use remote user instead, if none set default to current user\n            expand_path = '~%s' % self._play_context.remote_user or self._connection.default_user or ''\n\n        # use shell to construct appropriate command and execute"
  },
  {
    "id" : "b07b20d4-da1b-4a2a-aac6-1d7edb76ccdf",
    "prId" : 45461,
    "prUrl" : "https://github.com/ansible/ansible/pull/45461#pullrequestreview-157065067",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b54f3f41-945d-46bc-b73b-470302ab1d06",
        "parentId" : null,
        "authorId" : "311820dd-fcb9-46df-a201-9c0e7d6fac58",
        "body" : "Corner case, but isn't this an immediately breaking change for anyone that uses `ANSIBLE_ASYNC_DIR` and uses `async` on Windows hosts today (since with this change, Windows hosts will now use the env value which is probably not a Windows path)? /me shakes fist at env config for stuff like this\r\n\r\nHate to say it, but we may need to consult an ignore flag on the shell plugin for this so it won't pick up the env value at all for powershell... ",
        "createdAt" : "2018-09-19T23:31:34Z",
        "updatedAt" : "2018-09-19T23:44:17Z",
        "lastEditedBy" : "311820dd-fcb9-46df-a201-9c0e7d6fac58",
        "tags" : [
        ]
      },
      {
        "id" : "0e32608d-1172-4369-829e-7bd4b04eb3ad",
        "parentId" : "b54f3f41-945d-46bc-b73b-470302ab1d06",
        "authorId" : "7c547162-2334-4e33-a627-e146840da9ec",
        "body" : "This is only if someone has set the following on the task\r\n\r\n```\r\nenvironment:\r\n  ANSIBLE_ASYNC_DIR: /path\r\n```\r\n\r\nThis wouldn't make any sense today so I don't think it would break anybodies playbooks. Because there's no environment config value set on the powershell plugin then people who have set `ANSIBLE_ASYNC_DIR` already won't affect PowerShell.\r\n\r\nThis is all moot really as only the deprecated format works today on the POSIX side.",
        "createdAt" : "2018-09-19T23:52:28Z",
        "updatedAt" : "2018-09-19T23:52:28Z",
        "lastEditedBy" : "7c547162-2334-4e33-a627-e146840da9ec",
        "tags" : [
        ]
      }
    ],
    "commit" : "574ea6978a949b731c9865ea3664cf4a7572808b",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +740,744 @@        remove_async_dir = None\n        if wrap_async or self._task.async_val:\n            env_async_dir = [e for e in self._task.environment if\n                             \"ANSIBLE_ASYNC_DIR\" in e]\n            if len(env_async_dir) > 0:"
  },
  {
    "id" : "d22d24cb-717a-45f5-b4b4-aca7b0730334",
    "prId" : 45744,
    "prUrl" : "https://github.com/ansible/ansible/pull/45744#pullrequestreview-156764689",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "eba84ee9-3c77-4328-8299-14a20ee81383",
        "parentId" : null,
        "authorId" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "body" : "Nitpick: I know, that the codec check is flexible to recognize this, but it is more common to see `# -*- coding: utf-8 -*-` in the wild. So let's not confuse some future readers, who might be unaware of this.",
        "createdAt" : "2018-09-19T11:00:54Z",
        "updatedAt" : "2018-09-19T11:00:54Z",
        "lastEditedBy" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "tags" : [
        ]
      }
    ],
    "commit" : "32370c81997ba93ac3e55c0514587c6a7abee806",
    "line" : 1,
    "diffHunk" : "@@ -1,1 +-1,3 @@# coding: utf-8\n# Copyright: (c) 2012-2014, Michael DeHaan <michael.dehaan@gmail.com>\n# Copyright: (c) 2018, Ansible Project"
  },
  {
    "id" : "258ba5e0-0359-4bfb-b9a9-e7c8ea95f2ea",
    "prId" : 49446,
    "prUrl" : "https://github.com/ansible/ansible/pull/49446#pullrequestreview-181082011",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "51f0beae-0f15-40f4-b83d-95e2cf9edb3b",
        "parentId" : null,
        "authorId" : "96aeecbb-c275-402c-b904-a795c82efb48",
        "body" : "```suggestion\r\n                if match in (data['module_stderr'], data['module_stdout']):\r\n```",
        "createdAt" : "2018-12-04T03:41:20Z",
        "updatedAt" : "2018-12-04T03:41:20Z",
        "lastEditedBy" : "96aeecbb-c275-402c-b904-a795c82efb48",
        "tags" : [
        ]
      },
      {
        "id" : "bff55d0e-58a4-490f-b7a7-19331094853b",
        "parentId" : "51f0beae-0f15-40f4-b83d-95e2cf9edb3b",
        "authorId" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "body" : "wont that match only if the string is exactly what stdout or stderr contain? we need to do partial match on the contents of stderr or stdout",
        "createdAt" : "2018-12-04T03:43:42Z",
        "updatedAt" : "2018-12-04T03:43:42Z",
        "lastEditedBy" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "tags" : [
        ]
      },
      {
        "id" : "6b2abe9c-086a-4580-8faf-4183b48e89d7",
        "parentId" : "51f0beae-0f15-40f4-b83d-95e2cf9edb3b",
        "authorId" : "96aeecbb-c275-402c-b904-a795c82efb48",
        "body" : "Yes, you are right. I didn't notice that we want to match partial string as well.",
        "createdAt" : "2018-12-04T03:47:22Z",
        "updatedAt" : "2018-12-04T03:47:22Z",
        "lastEditedBy" : "96aeecbb-c275-402c-b904-a795c82efb48",
        "tags" : [
        ]
      }
    ],
    "commit" : "a066c70ea7263d0facdc91b58f0a0a1ca7e20aaa",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +925,929 @@            if self._used_interpreter is not None:\n                match = '%s: No such file or directory' % self._used_interpreter.lstrip('!#')\n                if match in data['module_stderr'] or match in data['module_stdout']:\n                    data['msg'] = \"The module failed to execute correctly, you probably need to set the interpreter.\"\n"
  },
  {
    "id" : "85f43e35-34d1-4d1b-888d-c21ed5bed14b",
    "prId" : 49733,
    "prUrl" : "https://github.com/ansible/ansible/pull/49733#pullrequestreview-183322149",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "88ee972b-8d38-4add-bc2e-88d14d30fc8c",
        "parentId" : null,
        "authorId" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "body" : "It's better to put this comment above setting the default value as the default value is part of the section of code  which tries \"to figure out if we are missing interpreter\".",
        "createdAt" : "2018-12-10T18:06:02Z",
        "updatedAt" : "2018-12-10T18:06:02Z",
        "lastEditedBy" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "tags" : [
        ]
      }
    ],
    "commit" : "ff0db1e785ac15136c09a149fe30caa152c908a4",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +894,898 @@            data['msg'] = \"MODULE FAILURE\"\n\n            # try to figure out if we are missing interpreter\n            if self._used_interpreter is not None:\n                match = '%s: No such file or directory' % self._used_interpreter.lstrip('!#')"
  },
  {
    "id" : "194d41b5-c5f2-4849-9fbc-9de118db9bce",
    "prId" : 53973,
    "prUrl" : "https://github.com/ansible/ansible/pull/53973#pullrequestreview-216200395",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "27ce1f3f-4096-48e4-8559-354f01eeb0d9",
        "parentId" : null,
        "authorId" : "94ae5814-8889-4328-9b58-745772997928",
        "body" : "The comment is now outdated.",
        "createdAt" : "2019-03-19T14:40:53Z",
        "updatedAt" : "2019-03-19T14:40:53Z",
        "lastEditedBy" : "94ae5814-8889-4328-9b58-745772997928",
        "tags" : [
        ]
      }
    ],
    "commit" : "828952072d101ec90b407d04240436447a3d9eae",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +911,915 @@            self._cleanup_remote_tmp = False\n\n        # NOTE: yum returns results .. but that made it 'compatible' with squashing, so we allow mappings, for now\n        if 'results' in data and (not isinstance(data['results'], Sequence) or isinstance(data['results'], string_types)):\n            data['ansible_module_results'] = data['results']"
  },
  {
    "id" : "5e1b98f3-94a0-48a6-83ac-35c756162972",
    "prId" : 58875,
    "prUrl" : "https://github.com/ansible/ansible/pull/58875#pullrequestreview-261283913",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0edf9af4-7155-4964-be10-28d137603ecf",
        "parentId" : null,
        "authorId" : "2f8132dc-12f8-44dc-8b97-1cf4c1616b68",
        "body" : "This conditional is complex enough that I think it would be helpful to have the logic broken out and in its own method.\r\n```suggestion\r\n        if self._should_i_become(sudoable, buser, ruser):\r\n```\r\n\r\n```python\r\ndef _should_i_become(self, sudoable, buser, ruser):\r\n    # Should we become?\r\n    if not sudoable:\r\n        return False\r\n\r\n    # Does the connection support become?\r\n    if not self._connection.become or self._connection.transport == 'network_cli':\r\n        return False\r\n\r\n    # Corner case of trying to become the same user\r\n    if ruser or buser and (buser != ruser):\r\n        # Only allow becoming same user if config says so\r\n        if not C.BECOME_ALLOW_SAME_USER:\r\n            return False\r\n\r\n    return True\r\n```\r\n",
        "createdAt" : "2019-07-09T21:28:03Z",
        "updatedAt" : "2019-07-09T21:35:06Z",
        "lastEditedBy" : "2f8132dc-12f8-44dc-8b97-1cf4c1616b68",
        "tags" : [
        ]
      },
      {
        "id" : "033d4d4a-810c-4a88-8ac0-ab97d41a21fc",
        "parentId" : "0edf9af4-7155-4964-be10-28d137603ecf",
        "authorId" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "body" : "at 3 conditions that are not reused, i still think it doesn't merit it's own function.",
        "createdAt" : "2019-07-11T17:54:13Z",
        "updatedAt" : "2019-07-11T17:54:14Z",
        "lastEditedBy" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "tags" : [
        ]
      },
      {
        "id" : "b873fdcd-3ae2-44cd-b02f-c828ed2d1a85",
        "parentId" : "0edf9af4-7155-4964-be10-28d137603ecf",
        "authorId" : "2f8132dc-12f8-44dc-8b97-1cf4c1616b68",
        "body" : "It could still be broken out without being a separate function. Having a separate function reads easier, but I am mostly suggesting the logic be broken out more for easier reading and maintenance.",
        "createdAt" : "2019-07-11T20:21:57Z",
        "updatedAt" : "2019-07-11T20:21:57Z",
        "lastEditedBy" : "2f8132dc-12f8-44dc-8b97-1cf4c1616b68",
        "tags" : [
        ]
      },
      {
        "id" : "f0d781fb-5950-44bf-971a-6b7685b6577e",
        "parentId" : "0edf9af4-7155-4964-be10-28d137603ecf",
        "authorId" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "body" : "i would prefer not to refactor at the same time as i change the condition ... tends to lead to more changes in behaviour than desired.",
        "createdAt" : "2019-07-12T14:16:27Z",
        "updatedAt" : "2019-07-12T14:16:28Z",
        "lastEditedBy" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "tags" : [
        ]
      }
    ],
    "commit" : "c423e8f042181fe62eb99f854d849f48d50ec568",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +1042,1046 @@        ruser = self._get_remote_user()\n        buser = self.get_become_option('become_user')\n        if (sudoable and self._connection.become and  # if sudoable and have become\n                self._connection.transport != 'network_cli' and  # if not using network_cli\n                (C.BECOME_ALLOW_SAME_USER or (buser != ruser and (ruser or buser)))):  # if we allow same user PE or users are different and either is set"
  },
  {
    "id" : "8100b326-601d-472e-9939-c4faa6c4a17a",
    "prId" : 62373,
    "prUrl" : "https://github.com/ansible/ansible/pull/62373#pullrequestreview-317047340",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4aedb488-fa5b-4c12-a8a0-e5feb84baaba",
        "parentId" : null,
        "authorId" : "4b69a0b5-ac6f-45e9-9507-dd1385182f29",
        "body" : "I was going to recommend something else here, as it wasn't clear to me when originally reading it, but I'm not sure there is a better way.\r\n\r\nIn the future, we should probably have some sort of noop become plugin that is the default, to make things like this easier.",
        "createdAt" : "2019-11-14T15:37:31Z",
        "updatedAt" : "2019-11-15T00:35:41Z",
        "lastEditedBy" : "4b69a0b5-ac6f-45e9-9507-dd1385182f29",
        "tags" : [
        ]
      }
    ],
    "commit" : "a5a73ca867e4f3fa1c2a1184057af99634f4c17e",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +268,272 @@            not C.DEFAULT_KEEP_REMOTE_FILES,           # user wants remote files\n            not wrap_async or self._connection.always_pipeline_modules,  # async does not normally support pipelining unless it does (eg winrm)\n            (self._connection.become.name if self._connection.become else '') != 'su',  # su does not work with pipelining,\n            # FIXME: we might need to make become_method exclusion a configurable list\n        ]:"
  },
  {
    "id" : "89b11e15-cd04-43f6-98d9-c1c3ec2b6686",
    "prId" : 68315,
    "prUrl" : "https://github.com/ansible/ansible/pull/68315#pullrequestreview-392707754",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5624f91a-cf52-4903-8d7a-a4fd40836e62",
        "parentId" : null,
        "authorId" : "94ae5814-8889-4328-9b58-745772997928",
        "body" : "https://github.com/ansible/ansible/blob/eaf648e60093505d47b2918e58453fe9181ea517/lib/ansible/plugins/action/__init__.py#L1063-L1070\r\nThe above code makes me wonder if this should too only be done `if self._connection.allow_executable`?",
        "createdAt" : "2020-04-14T07:58:34Z",
        "updatedAt" : "2020-04-14T07:58:34Z",
        "lastEditedBy" : "94ae5814-8889-4328-9b58-745772997928",
        "tags" : [
        ]
      },
      {
        "id" : "c5d94039-1ad0-4e8a-8307-3a96dbf79761",
        "parentId" : "5624f91a-cf52-4903-8d7a-a4fd40836e62",
        "authorId" : "94ae5814-8889-4328-9b58-745772997928",
        "body" : "After looking further through the code, the same seems to be already handled in `_build_success_command()` by `noexe` arg.",
        "createdAt" : "2020-04-14T08:24:59Z",
        "updatedAt" : "2020-04-14T08:24:59Z",
        "lastEditedBy" : "94ae5814-8889-4328-9b58-745772997928",
        "tags" : [
        ]
      }
    ],
    "commit" : "02af403e168014a61f7bfd684e8c46c08548135d",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +1047,1051 @@\n        # https://github.com/ansible/ansible/issues/68054\n        if executable:\n            self._connection._shell.executable = executable\n"
  },
  {
    "id" : "48aa9866-2d1c-4ec8-a522-7e36df3cdb1e",
    "prId" : 68315,
    "prUrl" : "https://github.com/ansible/ansible/pull/68315#pullrequestreview-397299409",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fc323e4f-51b5-4b64-954c-20a1cdbd2973",
        "parentId" : null,
        "authorId" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "body" : "never assign directly, use set_option(), in this case `direct={'executable'=executable} `\r\n\r\nright now this is 'safe' due to using multi procs, we should add note about not being thread safe",
        "createdAt" : "2020-04-21T12:54:14Z",
        "updatedAt" : "2020-04-21T12:54:14Z",
        "lastEditedBy" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "tags" : [
        ]
      }
    ],
    "commit" : "02af403e168014a61f7bfd684e8c46c08548135d",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +1048,1052 @@        # https://github.com/ansible/ansible/issues/68054\n        if executable:\n            self._connection._shell.executable = executable\n\n        ruser = self._get_remote_user()"
  },
  {
    "id" : "018275fd-b998-40da-b8c4-f1c1a1b57c75",
    "prId" : 68627,
    "prUrl" : "https://github.com/ansible/ansible/pull/68627#pullrequestreview-414432892",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8036d2c5-7763-4928-8311-063926f07a7d",
        "parentId" : null,
        "authorId" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "body" : "not really, we could append/chain the verification to the end of the same command string, but that is also 'fun' in certain contexts that will misreport, so we are better off just letting the final execution fail for permission issues",
        "createdAt" : "2020-05-19T13:20:25Z",
        "updatedAt" : "2020-07-01T17:47:02Z",
        "lastEditedBy" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "tags" : [
        ]
      }
    ],
    "commit" : "4dddeb22af9b89d0388957942c717a99140bfe3c",
    "line" : 72,
    "diffHunk" : "@@ -1,1 +583,587 @@                    # mean that Ansible will work. We could check if the become\n                    # user is in the group, but this would create an extra\n                    # round trip.\n                    #\n                    # Also note that due to the above, this can prevent the"
  }
]