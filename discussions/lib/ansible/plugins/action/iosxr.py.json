[
  {
    "id" : "487ca838-8cc9-4b85-9ad5-94d383b4a811",
    "prId" : 21231,
    "prUrl" : "https://github.com/ansible/ansible/pull/21231#pullrequestreview-21387448",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "60550821-5246-47e6-a081-029d2762eb00",
        "parentId" : null,
        "authorId" : "d7d8721c-7ad0-4834-9a3d-b53ca8656789",
        "body" : "I wonder if `\"$HOME/.ansible/pc\"` should move to constants.py, rather than get hardcoded in multiple action plugins.",
        "createdAt" : "2017-02-11T15:08:47Z",
        "updatedAt" : "2017-02-14T15:37:39Z",
        "lastEditedBy" : "d7d8721c-7ad0-4834-9a3d-b53ca8656789",
        "tags" : [
        ]
      }
    ],
    "commit" : "7e05d1da6aac7039820672f3ebc527026658fc2a",
    "line" : 60,
    "diffHunk" : "@@ -1,1 +58,62 @@        ssh = connection_loader.get('ssh', class_only=True)\n        cp = ssh._create_control_path(play_context.remote_addr, play_context.port, play_context.remote_user)\n        path = unfrackpath(\"$HOME/.ansible/pc\")\n        return cp % dict(directory=path)\n"
  },
  {
    "id" : "51ca58a5-d118-4238-95e6-da4ae72f7f8c",
    "prId" : 21231,
    "prUrl" : "https://github.com/ansible/ansible/pull/21231#pullrequestreview-21387448",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "56b1649e-bf61-4e69-84f7-635dfb08ba49",
        "parentId" : null,
        "authorId" : "d7d8721c-7ad0-4834-9a3d-b53ca8656789",
        "body" : "A lot of this looks like it will be common across platforms. If `iosxr_argument_spec` is passed in then it looks (though not tested) that this could be made generic.\r\n\r\nCan we subclass action plugins?",
        "createdAt" : "2017-02-11T15:10:28Z",
        "updatedAt" : "2017-02-14T15:37:39Z",
        "lastEditedBy" : "d7d8721c-7ad0-4834-9a3d-b53ca8656789",
        "tags" : [
        ]
      }
    ],
    "commit" : "7e05d1da6aac7039820672f3ebc527026658fc2a",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +32,36 @@from ansible.module_utils.basic import AnsibleFallbackNotFound\n\nclass ActionModule(_ActionModule):\n\n    def run(self, tmp=None, task_vars=None):"
  },
  {
    "id" : "a1e7f5fe-56b2-47db-8ff4-4ecbb95da46a",
    "prId" : 33332,
    "prUrl" : "https://github.com/ansible/ansible/pull/33332#pullrequestreview-81434478",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fe48a9a3-dd8a-4b7f-98b0-572ad862151b",
        "parentId" : null,
        "authorId" : "7a1e5757-684b-4684-bcab-c114385bca28",
        "body" : "iosxr_config and iosxr_command should support both netconf and cli?",
        "createdAt" : "2017-12-06T06:56:55Z",
        "updatedAt" : "2017-12-06T13:39:21Z",
        "lastEditedBy" : "7a1e5757-684b-4684-bcab-c114385bca28",
        "tags" : [
        ]
      },
      {
        "id" : "1ddbc768-a46e-45c5-a25a-183338fd5ef6",
        "parentId" : "fe48a9a3-dd8a-4b7f-98b0-572ad862151b",
        "authorId" : "1ceb194f-0857-46b7-866c-2125bdec60c5",
        "body" : "iosxr does not support cli commands over netconf. Keeping support of xml rpc schema as input at a later priority over individual config modules.",
        "createdAt" : "2017-12-06T07:31:13Z",
        "updatedAt" : "2017-12-06T13:39:21Z",
        "lastEditedBy" : "1ceb194f-0857-46b7-866c-2125bdec60c5",
        "tags" : [
        ]
      }
    ],
    "commit" : "b0f2ac79a297f48c5a941252feead8239e25b1b4",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +49,53 @@            provider = load_provider(iosxr_provider_spec, self._task.args)\n            pc = copy.deepcopy(self._play_context)\n            if self._task.action in ['iosxr_netconf', 'iosxr_config', 'iosxr_command'] or \\\n                    (provider['transport'] == 'cli' and (self._task.action == 'iosxr_banner' or\n                                                         self._task.action == 'iosxr_facts' or self._task.action == 'iosxr_logging' or"
  }
]