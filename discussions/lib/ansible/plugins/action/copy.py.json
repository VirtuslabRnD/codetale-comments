[
  {
    "id" : "1ec29eee-ef9a-49df-a71e-6a7c5d4a594c",
    "prId" : 20405,
    "prUrl" : "https://github.com/ansible/ansible/pull/20405#pullrequestreview-23618252",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7c90f39e-0031-4350-8e5d-811e73365464",
        "parentId" : null,
        "authorId" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "body" : "so for this file i'm proposing this instead https://gist.github.com/bcoca/d536584c5b74bde069dc709375150364",
        "createdAt" : "2017-02-23T22:44:21Z",
        "updatedAt" : "2017-02-24T19:51:20Z",
        "lastEditedBy" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "tags" : [
        ]
      },
      {
        "id" : "28d0bbba-ef8a-4b36-bc02-b812c75ac031",
        "parentId" : "7c90f39e-0031-4350-8e5d-811e73365464",
        "authorId" : "7268595c-1eb4-4b5f-9277-90f183130a4b",
        "body" : "I think it is a bit harder to read (as the split-code was better documented, whereas `checksum=force` is quite cryptic). But if this allows it to get merged, I am all for it.\r\nhttps://github.com/ansible/ansible/pull/20405/commits/e79b43e3c46e4f78760300dd74e96cae83e71c4b",
        "createdAt" : "2017-02-23T23:42:26Z",
        "updatedAt" : "2017-02-24T19:51:20Z",
        "lastEditedBy" : "7268595c-1eb4-4b5f-9277-90f183130a4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "b977f3045416c4e913c15992fe3a93740c8cce91",
    "line" : 1,
    "diffHunk" : "@@ -1,1 +23,27 @@import os\nimport stat\nimport tempfile\n\nfrom ansible.constants import mk_boolean as boolean"
  },
  {
    "id" : "0b95b217-6f25-456c-8f87-309896c13080",
    "prId" : 24393,
    "prUrl" : "https://github.com/ansible/ansible/pull/24393#pullrequestreview-50988575",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f61ac930-ee6b-4612-ba32-865237017b5b",
        "parentId" : null,
        "authorId" : "fa0144fc-7424-474a-9ab5-059de28814b7",
        "body" : "Would there be any utility to sorted() on files/sub_folders?  AFAICT, os.walk will use the os.listdir() results directly for filenames. os.listdir() is doc'ed as 'arbitrary order' (iirc, more or less up to fs). \r\n\r\nWondering if sorting those results would make for more reproducible behavior when trying to replicate errors. It shouldn't matter at all if there are no bugs, but it could make tracking down odd failures easier.",
        "createdAt" : "2017-07-19T17:47:03Z",
        "updatedAt" : "2017-07-19T17:47:22Z",
        "lastEditedBy" : "fa0144fc-7424-474a-9ab5-059de28814b7",
        "tags" : [
        ]
      },
      {
        "id" : "80b616b1-b72a-4e65-9807-49fddf8831be",
        "parentId" : "f61ac930-ee6b-4612-ba32-865237017b5b",
        "authorId" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "body" : "I hate to sort anywhere that it's not needed due to speed and memory.  We can use .sort() for inplace sotring to eliminate the memory doubling but not speed.\r\n\r\nNote that os.listidr() is going to lightly wrap what's returned by the filesystem so it should be repeatable on the same data.  It could be a different order if we're debugging something that someone else tells us about... but then again, we seldom get enough information to replicate the complete directory that the user is using.\r\n\r\nWhen I was debugging this while working on it, I had to print things out anyway, sort order wouldn't have mattered to how I debugged things.",
        "createdAt" : "2017-07-19T17:54:27Z",
        "updatedAt" : "2017-07-19T17:54:27Z",
        "lastEditedBy" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "tags" : [
        ]
      }
    ],
    "commit" : "5fd5204d37d3e13313612f0c1ba9b87dd9d50aea",
    "line" : 77,
    "diffHunk" : "@@ -1,1 +91,95 @@        \"\"\"\n        for base_path, sub_folders, files in os.walk(topdir):\n            for filename in files:\n                filepath = os.path.join(base_path, filename)\n                dest_filepath = os.path.join(rel_base, filepath[rel_offset:])"
  }
]