[
  {
    "id" : "67e3362c-6ec7-4c6c-b7a0-2b7e40561b1f",
    "prId" : 13533,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1df32178-37f1-4c5b-a966-ea9ae4d34352",
        "parentId" : null,
        "authorId" : "5f785f5a-0ab2-40f9-bb6c-ce6fc6115ff7",
        "body" : "why not use isinstance function as that is preferred over type?\n",
        "createdAt" : "2015-12-13T05:16:03Z",
        "updatedAt" : "2015-12-13T05:16:03Z",
        "lastEditedBy" : "5f785f5a-0ab2-40f9-bb6c-ce6fc6115ff7",
        "tags" : [
        ]
      },
      {
        "id" : "e78981a7-2a35-4c25-b58f-645aeefe5660",
        "parentId" : "1df32178-37f1-4c5b-a966-ea9ae4d34352",
        "authorId" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "body" : "not sure, i did not change that line\n",
        "createdAt" : "2015-12-13T05:37:59Z",
        "updatedAt" : "2015-12-13T05:37:59Z",
        "lastEditedBy" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "tags" : [
        ]
      }
    ],
    "commit" : "d73562902b289e7fd7e2e5a37e82b00c83a16369",
    "line" : 44,
    "diffHunk" : "@@ -1,1 +53,57 @@                results = \"VARIABLE IS NOT DEFINED!\"\n\n            if type(self._task.args['var']) in (list, dict):\n                # If var is a list or dict, use the type as key to display\n                result[to_unicode(type(self._task.args['var']))] = results"
  },
  {
    "id" : "64edde4f-b4c8-400f-849e-6aacd2f9b5c2",
    "prId" : 32206,
    "prUrl" : "https://github.com/ansible/ansible/pull/32206#pullrequestreview-72990852",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0bd9e9ee-dd8c-41f8-af23-734454832c93",
        "parentId" : null,
        "authorId" : "fa0144fc-7424-474a-9ab5-059de28814b7",
        "body" : "Since we can now display the exception message, this AnsibleUndefinedVariable would be better with an explanation message. something like:\r\n\r\n ``` python\r\nraise AnsibleUndefinedVariable('The result of templating  was expected to be text type, but instead was a \"%s\" type. The  template input: %s\" % (self._task.args['var'], type(results)))\r\n```",
        "createdAt" : "2017-10-30T19:54:51Z",
        "updatedAt" : "2017-10-30T21:18:33Z",
        "lastEditedBy" : "fa0144fc-7424-474a-9ab5-059de28814b7",
        "tags" : [
        ]
      },
      {
        "id" : "42af556c-6a39-44bd-be08-5fa924f25069",
        "parentId" : "0bd9e9ee-dd8c-41f8-af23-734454832c93",
        "authorId" : "fa0144fc-7424-474a-9ab5-059de28814b7",
        "body" : "and maybe a blurb indicating that error comes from withing the debug action itself,\r\n\r\n'While \"debug\" task was trying to display the value of \"%s\" the result of templating  was expected to be text type, but instead was a \"%s\" type.' % (type(results), self._task.args['var'],)",
        "createdAt" : "2017-10-30T19:59:41Z",
        "updatedAt" : "2017-10-30T21:18:33Z",
        "lastEditedBy" : "fa0144fc-7424-474a-9ab5-059de28814b7",
        "tags" : [
        ]
      },
      {
        "id" : "80f64074-b2a9-4b13-a9c2-60e858fb0dbf",
        "parentId" : "0bd9e9ee-dd8c-41f8-af23-734454832c93",
        "authorId" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "body" : "At a higher level... why is this being triggered?  (Does it get triggered?)  jinja2 returns strings always.  If templar is returning non-strings, it's because we take a string from jinja2 and turn it into something else in our code.  In either of those cases, debug should still be able to output a sensible value so we shouldn't be raising an exception for it.",
        "createdAt" : "2017-10-30T20:52:19Z",
        "updatedAt" : "2017-10-30T21:18:33Z",
        "lastEditedBy" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "tags" : [
        ]
      },
      {
        "id" : "8d68cfcc-6e0e-4e77-9b60-a25a131a4865",
        "parentId" : "0bd9e9ee-dd8c-41f8-af23-734454832c93",
        "authorId" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "body" : "not something i changed in this case, leaving as is for this PR",
        "createdAt" : "2017-10-30T21:19:00Z",
        "updatedAt" : "2017-10-30T21:19:00Z",
        "lastEditedBy" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "tags" : [
        ]
      }
    ],
    "commit" : "91a5c764490116414e68bd8abe5aaa51d13a5b00",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +57,61 @@                        # if results is not str/unicode type, raise an exception\n                        if not isinstance(results, string_types):\n                            raise AnsibleUndefinedVariable\n                        # If var name is same as result, try to template it\n                        results = self._templar.template(\"{{\" + results + \"}}\", convert_bare=True, fail_on_undefined=True)"
  }
]