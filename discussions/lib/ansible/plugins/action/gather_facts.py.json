[
  {
    "id" : "4ed495f1-94a4-4bbe-b2fa-422428640093",
    "prId" : 31783,
    "prUrl" : "https://github.com/ansible/ansible/pull/31783#pullrequestreview-115642465",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "df9bea5d-9c52-4549-ad09-1800c907d095",
        "parentId" : null,
        "authorId" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "body" : "This looks like it's only configurable via the config.  We should have it replace the gather_subset functionality as well.  ",
        "createdAt" : "2018-04-26T15:40:23Z",
        "updatedAt" : "2018-05-10T00:36:45Z",
        "lastEditedBy" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "tags" : [
        ]
      },
      {
        "id" : "fd1dc799-f587-474f-91b5-59baf597d37b",
        "parentId" : "df9bea5d-9c52-4549-ad09-1800c907d095",
        "authorId" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "body" : "Hmm... could\r\n```\r\n  vars:\r\n    - name: ansible_facts_modules\r\n```\r\nServe that purpose?  (And in inventory as well)?  Need to update documentation for that.  Also need to document how config works for 2.6.",
        "createdAt" : "2018-04-26T15:50:11Z",
        "updatedAt" : "2018-05-10T00:36:45Z",
        "lastEditedBy" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "tags" : [
        ]
      },
      {
        "id" : "e825cb65-6ae0-4c79-a941-629908b6185b",
        "parentId" : "df9bea5d-9c52-4549-ad09-1800c907d095",
        "authorId" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "body" : "yes, its by config, but that includes vars",
        "createdAt" : "2018-04-26T16:00:31Z",
        "updatedAt" : "2018-05-10T00:36:45Z",
        "lastEditedBy" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "tags" : [
        ]
      }
    ],
    "commit" : "40c969ecb16ed8c491b4ffd61ad5c4688f033ad5",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +22,26 @@        result['ansible_facts'] = {}\n\n        for fact_module in C.config.get_config_value('FACTS_MODULES', variables=task_vars):\n\n            mod_args = task_vars.get('ansible_facts_modules', {}).get(fact_module, {})"
  },
  {
    "id" : "c3d457e7-2490-41f7-b30e-e7f25b4fc22d",
    "prId" : 49399,
    "prUrl" : "https://github.com/ansible/ansible/pull/49399#pullrequestreview-183954009",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c1a02bf9-bb9d-4e86-a341-0be6cddfe673",
        "parentId" : null,
        "authorId" : "311820dd-fcb9-46df-a201-9c0e7d6fac58",
        "body" : "Are we OK silently masking collisions between facts modules (last writer wins)? I think I'm OK with that (again, pretty minor corner case), but maybe a warning would be better (then again, somebody's going to want merge_hash to work at some point, and ick).",
        "createdAt" : "2018-12-10T18:27:56Z",
        "updatedAt" : "2019-03-07T19:21:48Z",
        "lastEditedBy" : "311820dd-fcb9-46df-a201-9c0e7d6fac58",
        "tags" : [
        ]
      },
      {
        "id" : "4f49b50a-7d3b-48a4-8c9f-29c74ca3fcca",
        "parentId" : "c1a02bf9-bb9d-4e86-a341-0be6cddfe673",
        "authorId" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "body" : "it works the same as currently when you execute them yourself, last one updating wins",
        "createdAt" : "2018-12-10T20:27:13Z",
        "updatedAt" : "2019-03-07T19:21:48Z",
        "lastEditedBy" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "tags" : [
        ]
      },
      {
        "id" : "7537bce1-6160-49c8-bd2b-31d50e673787",
        "parentId" : "c1a02bf9-bb9d-4e86-a341-0be6cddfe673",
        "authorId" : "311820dd-fcb9-46df-a201-9c0e7d6fac58",
        "body" : "The one difference being that exec order is not guaranteed since the source driver is a dict. Even if it were an OrderedDict and we tried to preserve the key order (good luck), we're updating the results when the tasks finish, not in the order they were run in. \r\n\r\nI don't think this is a showstopper, but might be worth a note in the docs or something that ordering isn't guaranteed, and that any colliding keys are overwritten in an undefined order.",
        "createdAt" : "2018-12-11T23:27:01Z",
        "updatedAt" : "2019-03-07T19:21:48Z",
        "lastEditedBy" : "311820dd-fcb9-46df-a201-9c0e7d6fac58",
        "tags" : [
        ]
      },
      {
        "id" : "875e722d-4c8f-496c-82a6-2de4cd2574b3",
        "parentId" : "c1a02bf9-bb9d-4e86-a341-0be6cddfe673",
        "authorId" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "body" : "agreed, on note, though i don't really expect multiple modules to return the same keys with diff values. ",
        "createdAt" : "2018-12-11T23:30:52Z",
        "updatedAt" : "2019-03-07T19:21:48Z",
        "lastEditedBy" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "tags" : [
        ]
      }
    ],
    "commit" : "784c7ff74f385b6f8b8079a62355f3b58ab129bd",
    "line" : 88,
    "diffHunk" : "@@ -1,1 +86,90 @@                            skipped[module] = res.get('msg')\n                        else:\n                            result = combine_vars(result, {'ansible_facts': res.get('ansible_facts', {})})\n                        del jobs[module]\n                        break"
  },
  {
    "id" : "cedddf12-6dec-47b7-948a-f8dbca252487",
    "prId" : 49399,
    "prUrl" : "https://github.com/ansible/ansible/pull/49399#pullrequestreview-195559142",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "795535e8-322a-48d2-b02c-cc20e5140c50",
        "parentId" : null,
        "authorId" : "284bb4ad-6403-4762-bb03-b2a921d26492",
        "body" : "@bcoca Is there a reason why only `all` is allowed for subset?\r\n\r\nI added this to make it work for other subset values as well in networking.\r\n```\r\n         # deal with 'setup specific arguments'\r\n         if fact_module != 'setup':\r\n-            subset = mod_args.pop('gather_subset', None)\r\n+            connection = task_vars.get('ansible_connection')\r\n \r\n-            if subset not in ('all', ['all']):\r\n-                self._display.warning('Ignoring subset(%s) for %s' % (subset, fact_module))\r\n+            if connection not in ('network_cli', 'httpapi', 'netconf'):\r\n+                subset = mod_args.pop('gather_subset', None)\r\n+                if subset not in ('all', ['all']):\r\n+                    self._display.warning('Ignoring subset(%s) for %s' % (subset, fact_module))\r\n```\r\n",
        "createdAt" : "2018-12-28T06:18:34Z",
        "updatedAt" : "2019-03-07T19:21:48Z",
        "lastEditedBy" : "284bb4ad-6403-4762-bb03-b2a921d26492",
        "tags" : [
        ]
      },
      {
        "id" : "dc1191d4-051f-49dc-ab4f-1af1d40e68a4",
        "parentId" : "795535e8-322a-48d2-b02c-cc20e5140c50",
        "authorId" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "body" : "subset is a parameter of `setup` and not supported by many other modules, we can make an exception list based on module, no need to do it on connection basis, specially if you end up with same logic",
        "createdAt" : "2019-01-02T14:52:56Z",
        "updatedAt" : "2019-03-07T19:21:48Z",
        "lastEditedBy" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "tags" : [
        ]
      },
      {
        "id" : "8a0aa0f0-57e6-4ff8-99fc-261ec3298839",
        "parentId" : "795535e8-322a-48d2-b02c-cc20e5140c50",
        "authorId" : "284bb4ad-6403-4762-bb03-b2a921d26492",
        "body" : "@bcoca this is for all the facts module we have for networking.",
        "createdAt" : "2019-01-07T17:24:40Z",
        "updatedAt" : "2019-03-07T19:21:48Z",
        "lastEditedBy" : "284bb4ad-6403-4762-bb03-b2a921d26492",
        "tags" : [
        ]
      },
      {
        "id" : "3e8ea08d-c393-4a86-b6da-ec64c461979b",
        "parentId" : "795535e8-322a-48d2-b02c-cc20e5140c50",
        "authorId" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "body" : "@trishnaguha so you do have a gather_subset parameter for those modules? your code seems to indicate the contrary",
        "createdAt" : "2019-01-07T21:25:32Z",
        "updatedAt" : "2019-03-07T19:21:48Z",
        "lastEditedBy" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "tags" : [
        ]
      },
      {
        "id" : "6c690264-ff3c-4ac1-8d8c-eb998b53667e",
        "parentId" : "795535e8-322a-48d2-b02c-cc20e5140c50",
        "authorId" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "body" : "@trishnaguha i think a better fix for networking would be to: \r\n - change the default setting to 'smart'\r\n - on 'smart' it should examine connection and use either 'mapped' module or fallback to setup.py",
        "createdAt" : "2019-01-11T20:10:00Z",
        "updatedAt" : "2019-03-07T19:21:48Z",
        "lastEditedBy" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "tags" : [
        ]
      },
      {
        "id" : "188e0fb0-1f74-4a06-9d50-3894ad90d809",
        "parentId" : "795535e8-322a-48d2-b02c-cc20e5140c50",
        "authorId" : "284bb4ad-6403-4762-bb03-b2a921d26492",
        "body" : "@bcoca with these lines of code, I was trying to make `gather_subset` work with network platforms.\r\nFor example playbook being\r\n```\r\n- hosts: eos\r\n  connection: network_cli\r\n  gather_facts: yes\r\n  gather_subset: config\r\n\r\n  vars_files:\r\n    - group_vars/eos.yaml\r\n\r\n  tasks:\r\n  - debug:\r\n      var: ansible_facts\r\n```\r\noutput would be\r\n```\r\nok: [veos01] => {\r\n    \"ansible_facts\": {\r\n        \"_facts_gathered\": true, \r\n        \"net_config\": \"! Command: show running-config\\n! device: an-veos-01 (vEOS, EOS-4.15.9M)\\n!\\n! boot system flash:EOS.swi\\n!\\ntransceiver qsfp default-mode 4x10G\\n!\\nhostname an-veos-01\\nip name-server vrf default 10.8.36.1\\nip name-server vrf default 10.8.38.1\\nip domain-name ansible.eng.rdu2.redhat.com\\n!\\nspanning-tree mode mstp\\n!\\nno aaa root\\n!\\nvlan 2-9,12\\n!\\nvlan 10\\n   name vlan_10\\n!\\nvlan 11\\n   name vlan_11\\n!\\nvrf definition test\\n!\\ninterface Ethernet1\\n   no switchport\\n!\\ninterface Ethernet2\\n   no switchport\\n!\\ninterface Ethernet3\\n!\\ninterface Ethernet4\\n!\\ninterface Ethernet5\\n!\\ninterface Ethernet6\\n!\\ninterface Ethernet7\\n!\\ninterface Management1\\n   ip address 10.8.38.31/24\\n!\\nip route 10.0.0.0/8 10.8.38.1\\n!\\nip routing\\nno ip routing vrf test\\n!\\nrouter bgp 10\\n!\\nmanagement api http-commands\\n   protocol http\\n   protocol unix-socket\\n   no shutdown\\n!\\n!\\nend\", \r\n        \"net_fqdn\": \"an-veos-01.ansible.eng.rdu2.redhat.com\", \r\n        \"net_gather_subset\": [\r\n            \"default\", \r\n            \"config\"\r\n        ], \r\n        \"net_hostname\": \"an-veos-01\", \r\n        \"net_image\": \"flash:EOS.swi\", \r\n        \"net_model\": \"vEOS\", \r\n        \"net_serialnum\": \"\", \r\n        \"net_version\": \"4.15.9M\"\r\n    }\r\n}\r\n```\r\nIt would just gather the `config` subset rather than `all` for the EOS platform in this playbook.",
        "createdAt" : "2019-01-15T13:54:03Z",
        "updatedAt" : "2019-03-07T19:21:48Z",
        "lastEditedBy" : "284bb4ad-6403-4762-bb03-b2a921d26492",
        "tags" : [
        ]
      },
      {
        "id" : "0f30a73d-cb47-4e87-954d-c3420a9b0d63",
        "parentId" : "795535e8-322a-48d2-b02c-cc20e5140c50",
        "authorId" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "body" : "ah, for some reason i was under the opposite impression, that those modules did NOT support gather_subset",
        "createdAt" : "2019-01-16T03:40:28Z",
        "updatedAt" : "2019-03-07T19:21:48Z",
        "lastEditedBy" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "tags" : [
        ]
      },
      {
        "id" : "5ee2c6c6-3dde-4c31-a2a0-8fb06d5b5126",
        "parentId" : "795535e8-322a-48d2-b02c-cc20e5140c50",
        "authorId" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "body" : "@trishnaguha so our networking facts modules do support gather_subset, but doing this by connection means that 3rd party ones MUST also support it to be used in this fashion",
        "createdAt" : "2019-01-16T03:48:08Z",
        "updatedAt" : "2019-03-07T19:21:48Z",
        "lastEditedBy" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "tags" : [
        ]
      },
      {
        "id" : "8f1193d4-5cef-4e5a-a2dd-f81d41c6b2b9",
        "parentId" : "795535e8-322a-48d2-b02c-cc20e5140c50",
        "authorId" : "284bb4ad-6403-4762-bb03-b2a921d26492",
        "body" : "@bcoca All the network facts modules have `gather_subset` arg being default to some value, usually `!config`.",
        "createdAt" : "2019-01-23T13:59:42Z",
        "updatedAt" : "2019-03-07T19:21:48Z",
        "lastEditedBy" : "284bb4ad-6403-4762-bb03-b2a921d26492",
        "tags" : [
        ]
      },
      {
        "id" : "dbe2c024-fc17-47aa-8d3c-e7c246c0a1bc",
        "parentId" : "795535e8-322a-48d2-b02c-cc20e5140c50",
        "authorId" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "body" : "i know, i checked, it is just an observation for the case where a user wants to use a custom module",
        "createdAt" : "2019-01-23T14:50:04Z",
        "updatedAt" : "2019-03-07T19:21:48Z",
        "lastEditedBy" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "tags" : [
        ]
      }
    ],
    "commit" : "784c7ff74f385b6f8b8079a62355f3b58ab129bd",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +20,24 @@\n        # deal with 'setup specific arguments'\n        if fact_module != 'setup':\n\n            # network facts modules must support gather_subset"
  },
  {
    "id" : "3c672847-acd2-4ad7-8706-791bfc11f7dd",
    "prId" : 49399,
    "prUrl" : "https://github.com/ansible/ansible/pull/49399#pullrequestreview-209204387",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2b0545d4-4d6d-4119-8b2c-5890c23969b1",
        "parentId" : null,
        "authorId" : "4b69a0b5-ac6f-45e9-9507-dd1385182f29",
        "body" : "I believe this `else` isn't indented far enough.  I think it needs to be indented 1 further, as it is, there is no wait between `async_status` polling, causing very high load on the controller.",
        "createdAt" : "2019-02-28T17:05:09Z",
        "updatedAt" : "2019-03-07T19:21:48Z",
        "lastEditedBy" : "4b69a0b5-ac6f-45e9-9507-dd1385182f29",
        "tags" : [
        ]
      },
      {
        "id" : "22d4e167-a032-42b3-ad6c-40e67fedbfb3",
        "parentId" : "2b0545d4-4d6d-4119-8b2c-5890c23969b1",
        "authorId" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "body" : "was meant to keep a delay between the batches of job polling, im not sure we want to throttle the polling of multiple plugins the same way, going to add one but at a smaller sleep",
        "createdAt" : "2019-02-28T17:22:14Z",
        "updatedAt" : "2019-03-07T19:21:48Z",
        "lastEditedBy" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "tags" : [
        ]
      }
    ],
    "commit" : "784c7ff74f385b6f8b8079a62355f3b58ab129bd",
    "line" : 94,
    "diffHunk" : "@@ -1,1 +92,96 @@                        time.sleep(0.1)\n                else:\n                    time.sleep(0.5)\n\n        if skipped:"
  }
]