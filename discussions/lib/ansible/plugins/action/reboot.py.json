[
  {
    "id" : "77a50598-0ace-4ea6-813c-8823f63d5d08",
    "prId" : 35205,
    "prUrl" : "https://github.com/ansible/ansible/pull/35205#pullrequestreview-149017577",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f1b3b521-d015-4f7a-bba6-01c2f414a49b",
        "parentId" : null,
        "authorId" : "311820dd-fcb9-46df-a201-9c0e7d6fac58",
        "body" : "Probably should also check and fail for `self._connection.transport == 'local'` - no need to go nutty trying to figure out if they're rebooting the controller via a more circuitous route, but at least cover the easy one.",
        "createdAt" : "2018-08-23T18:19:02Z",
        "updatedAt" : "2018-08-23T23:52:18Z",
        "lastEditedBy" : "311820dd-fcb9-46df-a201-9c0e7d6fac58",
        "tags" : [
        ]
      }
    ],
    "commit" : "ed70d8a6f4ae48439e2e4e580384f1d0d4b9facd",
    "line" : 244,
    "diffHunk" : "@@ -1,1 +242,246 @@        self._supports_check_mode = True\n        self._supports_async = True\n\n        # If running with local connection, fail so we don't reboot ourself\n        if self._connection.transport == 'local':"
  },
  {
    "id" : "25376147-98dc-4ed2-99c4-c21ac18e8a57",
    "prId" : 45607,
    "prUrl" : "https://github.com/ansible/ansible/pull/45607#pullrequestreview-155682029",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a84115c9-315e-42cc-ae3a-619314a5253b",
        "parentId" : null,
        "authorId" : "2f8132dc-12f8-44dc-8b97-1cf4c1616b68",
        "body" : "One issue with this is that `win_reboot` uses this same method. So if the windows `DEFAULT_BOOT_TIME_COMMAND` results in an rc != 0, it will then try this `cat` command, which will gloriously fail.\r\n\r\nThe previous conditional which runs `uptime -s` won't ever match on Windows because that string will never match the output of `(Get-WmiObject -ClassName Win32_OperatingSystem).LastBootUpTime`.\r\n\r\nThis is the point where it would be helpful to have platform/dist as a class attribute, either as an additional check here, or to look up the correct boot time command based on platform/dist. I'm also open to other ideas.",
        "createdAt" : "2018-09-14T15:18:43Z",
        "updatedAt" : "2018-09-14T15:19:00Z",
        "lastEditedBy" : "2f8132dc-12f8-44dc-8b97-1cf4c1616b68",
        "tags" : [
        ]
      },
      {
        "id" : "fde4cbc6-19f1-4d16-a87a-94a617d73292",
        "parentId" : "a84115c9-315e-42cc-ae3a-619314a5253b",
        "authorId" : "7268595c-1eb4-4b5f-9277-90f183130a4b",
        "body" : "I don't mind if a fallback method fails though. As long as we cover all bases so in the end the function always works. For win_reboot it could be a lot easier if we have a list of commands, for both Windows and Unix.",
        "createdAt" : "2018-09-14T19:22:00Z",
        "updatedAt" : "2018-09-14T19:22:00Z",
        "lastEditedBy" : "7268595c-1eb4-4b5f-9277-90f183130a4b",
        "tags" : [
        ]
      },
      {
        "id" : "06305762-8e18-4d87-9f8a-3d1ff6736bc9",
        "parentId" : "a84115c9-315e-42cc-ae3a-619314a5253b",
        "authorId" : "2f8132dc-12f8-44dc-8b97-1cf4c1616b68",
        "body" : "In my WIP PR, I did change the \"get the last boot time\" command to be a variable, so that will remove the hard coding here.\r\n\r\nWill fix in futureâ„¢.\r\n\r\nStill, I can see it being confusing to someone running `win_reboot` (assuming the first command failed to get the last boot time) if they get this error:\r\n\r\n```\r\nwin_reboot: failed to get host boot time info, rc: 1, stdout: 20180913204044.576906+000\r\n, stderr: cat : Cannot find path 'C:\\proc\\sys\\kernel\\random\\boot_id' because it does not exist.\r\nAt line:1 char:1\r\n+ cat /proc/sys/kernel/random/boot_id\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n+ CategoryInfo          : ObjectNotFound: (C:\\proc\\sys\\kernel\\random\\boot_id:String) [Get-Content], ItemNotFoundEx\r\nception\r\n+ FullyQualifiedErrorId : PathNotFound,Microsoft.PowerShell.Commands.GetContentCommand\r\n```\r\n\r\nEvidently Windows has a `cat` command now!?",
        "createdAt" : "2018-09-14T20:13:53Z",
        "updatedAt" : "2018-09-14T20:13:53Z",
        "lastEditedBy" : "2f8132dc-12f8-44dc-8b97-1cf4c1616b68",
        "tags" : [
        ]
      },
      {
        "id" : "e53d4681-1d16-423a-9ca8-286cd2e02a15",
        "parentId" : "a84115c9-315e-42cc-ae3a-619314a5253b",
        "authorId" : "7268595c-1eb4-4b5f-9277-90f183130a4b",
        "body" : "Well, the distinction between Windows and Unix is now easy because it's a different entry-point. So we don't need to do a `cat` on Windows. That was my main point. But I also don't mind having the fallback mechanism on Unix, that first does `who -b`, then `uptime -s`, and then `cat /.../boot_id`. Which to me is quite sensible as well. It's a trade-off for simplicity and in most cases it only requires a single command `who -b`. If you implement support for getting the platform, you will *always* have to run at least 2 commands.\r\n\r\nSo basically what I am saying is that in general the fallback mechanism is more efficient than targeting based on platform.",
        "createdAt" : "2018-09-14T22:32:23Z",
        "updatedAt" : "2018-09-14T22:32:23Z",
        "lastEditedBy" : "7268595c-1eb4-4b5f-9277-90f183130a4b",
        "tags" : [
        ]
      },
      {
        "id" : "3238e5d8-f47a-4b80-8ad5-b2768d2378b0",
        "parentId" : "a84115c9-315e-42cc-ae3a-619314a5253b",
        "authorId" : "7268595c-1eb4-4b5f-9277-90f183130a4b",
        "body" : "And yes, PowerShell has aliases for common Unix commands, which is freaking a lot of people out (because they are not drop-in replacements). https://daniel.haxx.se/blog/2016/08/19/removing-the-powershell-curl-alias/",
        "createdAt" : "2018-09-14T22:34:39Z",
        "updatedAt" : "2018-09-14T23:37:55Z",
        "lastEditedBy" : "7268595c-1eb4-4b5f-9277-90f183130a4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "bdbfe419d3da2adde9eeba652b919ba0378eb064",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +110,114 @@        # This is a last resort for bare Linux systems (e.g. OpenELEC) where 'who -b' or 'uptime -s' are not supported.\n        # Other options like parsing /proc/uptime or default uptime output are less reliable than this\n        if command_result['rc'] != 0:\n            stdout += command_result['stdout']\n            stderr += command_result['stderr']"
  },
  {
    "id" : "90656ca3-f085-42a2-9ce1-f30221001bee",
    "prId" : 45607,
    "prUrl" : "https://github.com/ansible/ansible/pull/45607#pullrequestreview-156051541",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "be802a00-c411-492c-9e2c-b0dbfeb22627",
        "parentId" : null,
        "authorId" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "body" : "this might not be py2/py3 compatible, we might want to force bytes",
        "createdAt" : "2018-09-17T18:04:57Z",
        "updatedAt" : "2018-09-17T18:04:57Z",
        "lastEditedBy" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "tags" : [
        ]
      },
      {
        "id" : "7c07cf1f-556d-42b2-8663-9139f3d8baa7",
        "parentId" : "be802a00-c411-492c-9e2c-b0dbfeb22627",
        "authorId" : "2f8132dc-12f8-44dc-8b97-1cf4c1616b68",
        "body" : "Yes, you are correct. One day I'll master that distinction. ðŸ˜„ ",
        "createdAt" : "2018-09-17T18:09:53Z",
        "updatedAt" : "2018-09-17T18:09:53Z",
        "lastEditedBy" : "2f8132dc-12f8-44dc-8b97-1cf4c1616b68",
        "tags" : [
        ]
      }
    ],
    "commit" : "bdbfe419d3da2adde9eeba652b919ba0378eb064",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +96,100 @@    def get_system_boot_time(self):\n        stdout = ''\n        stderr = ''\n        command_result = self._low_level_execute_command(self.DEFAULT_BOOT_TIME_COMMAND, sudoable=self.DEFAULT_SUDOABLE)\n"
  },
  {
    "id" : "7a7a6c23-e2fe-45f8-8e98-1ed8ac138f34",
    "prId" : 46147,
    "prUrl" : "https://github.com/ansible/ansible/pull/46147#pullrequestreview-159172341",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4014b656-15bd-4a92-8d17-914ecf46393e",
        "parentId" : null,
        "authorId" : "c9b2af00-2c8d-4a67-9cb5-7cbedac7e233",
        "body" : "I would have used platform.system rather than uname, but I see that's also what is used in the rest of the code.\r\n",
        "createdAt" : "2018-09-26T13:09:21Z",
        "updatedAt" : "2018-09-28T18:06:42Z",
        "lastEditedBy" : "c9b2af00-2c8d-4a67-9cb5-7cbedac7e233",
        "tags" : [
        ]
      },
      {
        "id" : "6ef1cb78-4a4e-431c-9ff1-37e207b1acf0",
        "parentId" : "4014b656-15bd-4a92-8d17-914ecf46393e",
        "authorId" : "2f8132dc-12f8-44dc-8b97-1cf4c1616b68",
        "body" : "I agree. But in order to do that it would end up being `self._low_level_execute_command((python -c 'import platform; print(platform.system())')` since the action plugin is running on the control node, not the managed node. And that would also need to take into account `ansible_python_interpreter` on the remote node, further complicating matters.\r\n\r\nFor 2.8, I want to add proper platform support since how it is today isn't scaling well. The commands and parameters between various *nix distributions varies a lot more than I had hoped.\r\n\r\nI have a (very rough) WIP PR #45656 where I welcome your feedback.",
        "createdAt" : "2018-09-26T18:20:12Z",
        "updatedAt" : "2018-09-28T18:06:42Z",
        "lastEditedBy" : "2f8132dc-12f8-44dc-8b97-1cf4c1616b68",
        "tags" : [
        ]
      },
      {
        "id" : "80b57d28-b625-4ded-8669-6109c1faf946",
        "parentId" : "4014b656-15bd-4a92-8d17-914ecf46393e",
        "authorId" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "body" : "Platform is also not present in Python 3.8 i think",
        "createdAt" : "2018-09-26T19:35:53Z",
        "updatedAt" : "2018-09-28T18:06:42Z",
        "lastEditedBy" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "tags" : [
        ]
      },
      {
        "id" : "7d7dbb80-e314-41d6-b9b5-8575ded5f927",
        "parentId" : "4014b656-15bd-4a92-8d17-914ecf46393e",
        "authorId" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "body" : "sivel pointed out that platform.system() is not one of the things deprecated in the platform stdlib library.  platform.dist() is the main thing that's going away.",
        "createdAt" : "2018-09-26T19:57:26Z",
        "updatedAt" : "2018-09-28T18:06:42Z",
        "lastEditedBy" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "tags" : [
        ]
      }
    ],
    "commit" : "2a6ba176ef8f615d7a659065b3cf35a4aa13fceb",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +105,109 @@\n        # Determine the system distribution in order to use the correct shutdown command arguments\n        uname_result = self._low_level_execute_command('uname')\n        distribution = uname_result['stdout'].strip().lower()\n"
  },
  {
    "id" : "ea08f3e4-3bb4-4e61-b2d0-44688f7934c0",
    "prId" : 46360,
    "prUrl" : "https://github.com/ansible/ansible/pull/46360#pullrequestreview-161866816",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2cd7a918-0e20-4091-b475-cc6cba190cfa",
        "parentId" : null,
        "authorId" : "2f8132dc-12f8-44dc-8b97-1cf4c1616b68",
        "body" : "Same thing here: need `post_reboot_delay_sec` here since `win_reboot` accepts that.",
        "createdAt" : "2018-10-04T14:57:34Z",
        "updatedAt" : "2018-10-04T14:58:01Z",
        "lastEditedBy" : "2f8132dc-12f8-44dc-8b97-1cf4c1616b68",
        "tags" : [
        ]
      },
      {
        "id" : "f678dc48-8bbe-40cf-9ea5-90aaf1f042ba",
        "parentId" : "2cd7a918-0e20-4091-b475-cc6cba190cfa",
        "authorId" : "7268595c-1eb4-4b5f-9277-90f183130a4b",
        "body" : "This is being set a few lines higher with one of the values, so I think this one is correct.",
        "createdAt" : "2018-10-04T18:12:49Z",
        "updatedAt" : "2018-10-04T18:12:49Z",
        "lastEditedBy" : "7268595c-1eb4-4b5f-9277-90f183130a4b",
        "tags" : [
        ]
      },
      {
        "id" : "5842ce7c-8ffa-45be-b78a-224fede07c9f",
        "parentId" : "2cd7a918-0e20-4091-b475-cc6cba190cfa",
        "authorId" : "2f8132dc-12f8-44dc-8b97-1cf4c1616b68",
        "body" : "Sorry, I've been staring at this too long. :)",
        "createdAt" : "2018-10-04T19:44:08Z",
        "updatedAt" : "2018-10-04T19:44:08Z",
        "lastEditedBy" : "2f8132dc-12f8-44dc-8b97-1cf4c1616b68",
        "tags" : [
        ]
      },
      {
        "id" : "3befb386-cc9b-41dd-a01b-3ecdeaeaf2c7",
        "parentId" : "2cd7a918-0e20-4091-b475-cc6cba190cfa",
        "authorId" : "7268595c-1eb4-4b5f-9277-90f183130a4b",
        "body" : "No worries, I made my share of oversights in this case too :-)",
        "createdAt" : "2018-10-05T01:42:48Z",
        "updatedAt" : "2018-10-05T01:42:48Z",
        "lastEditedBy" : "7268595c-1eb4-4b5f-9277-90f183130a4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "da3383fedbf7cde87af7f2773c5527ecc5d3ce48",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +311,315 @@\n        if post_reboot_delay != 0:\n            display.vvv(\"%s: waiting an additional %d seconds\" % (self._task.action, post_reboot_delay))\n            time.sleep(post_reboot_delay)\n"
  },
  {
    "id" : "d62d5ea7-529f-4c1d-862c-1ccf929015d6",
    "prId" : 49272,
    "prUrl" : "https://github.com/ansible/ansible/pull/49272#pullrequestreview-180997788",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f5d115e8-da5d-40b7-986b-ac2cc49bfe59",
        "parentId" : null,
        "authorId" : "7c547162-2334-4e33-a627-e146840da9ec",
        "body" : "This is failing on Windows with `\"msg\": \"family\"` as `family` isn't defined on `get_distribution` for Windows.",
        "createdAt" : "2018-12-03T21:10:50Z",
        "updatedAt" : "2018-12-06T23:46:31Z",
        "lastEditedBy" : "7c547162-2334-4e33-a627-e146840da9ec",
        "tags" : [
        ]
      },
      {
        "id" : "b86fc63d-87e1-49fc-ad1f-7ab718a2dc4f",
        "parentId" : "f5d115e8-da5d-40b7-986b-ac2cc49bfe59",
        "authorId" : "2f8132dc-12f8-44dc-8b97-1cf4c1616b68",
        "body" : "My Virtualbox environment got messed up and I wasn't able to reach the Windows VM anymore. I think I finally got it fixed today. Thanks for tracking this down.",
        "createdAt" : "2018-12-03T21:52:45Z",
        "updatedAt" : "2018-12-06T23:46:31Z",
        "lastEditedBy" : "2f8132dc-12f8-44dc-8b97-1cf4c1616b68",
        "tags" : [
        ]
      }
    ],
    "commit" : "174464d1d4772620a4de3c1362b709377941e7c8",
    "line" : 165,
    "diffHunk" : "@@ -1,1 +152,156 @@\n    def get_system_boot_time(self, distribution):\n        boot_time_command = self._get_value_from_facts('BOOT_TIME_COMMANDS', distribution, 'DEFAULT_BOOT_TIME_COMMAND')\n        display.debug(\"{action}: getting boot time with command: '{command}'\".format(action=self._task.action, command=boot_time_command))\n        command_result = self._low_level_execute_command(boot_time_command, sudoable=self.DEFAULT_SUDOABLE)"
  },
  {
    "id" : "84054465-fa20-4d0c-9923-4010ed2083ac",
    "prId" : 49272,
    "prUrl" : "https://github.com/ansible/ansible/pull/49272#pullrequestreview-182453808",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "82b0143b-3564-4959-86a0-f374144550ea",
        "parentId" : null,
        "authorId" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "body" : "You return `None` in this case. Fix it:\r\n```suggestion\r\n            return 0\r\n```",
        "createdAt" : "2018-12-06T14:26:53Z",
        "updatedAt" : "2018-12-06T23:46:31Z",
        "lastEditedBy" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "tags" : [
        ]
      },
      {
        "id" : "ae28d31e-a3db-4199-981c-619f73b9dcc4",
        "parentId" : "82b0143b-3564-4959-86a0-f374144550ea",
        "authorId" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "body" : "(or drop \"else\" below)",
        "createdAt" : "2018-12-06T14:27:13Z",
        "updatedAt" : "2018-12-06T23:46:31Z",
        "lastEditedBy" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "tags" : [
        ]
      },
      {
        "id" : "b27e2a8f-271f-44cc-a4bc-3553ea320872",
        "parentId" : "82b0143b-3564-4959-86a0-f374144550ea",
        "authorId" : "2f8132dc-12f8-44dc-8b97-1cf4c1616b68",
        "body" : "I added a test case for this.",
        "createdAt" : "2018-12-06T21:22:40Z",
        "updatedAt" : "2018-12-06T23:46:31Z",
        "lastEditedBy" : "2f8132dc-12f8-44dc-8b97-1cf4c1616b68",
        "tags" : [
        ]
      }
    ],
    "commit" : "174464d1d4772620a4de3c1362b709377941e7c8",
    "line" : 62,
    "diffHunk" : "@@ -1,1 +81,85 @@        value = int(self._task.args.get(key, self._task.args.get(key + '_sec', default)))\n        if value < 0:\n            value = 0\n        return value\n"
  },
  {
    "id" : "2ff07b2d-7ec5-4121-ac03-e1e9f95270de",
    "prId" : 62680,
    "prUrl" : "https://github.com/ansible/ansible/pull/62680#pullrequestreview-340304666",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "acf0c66a-6c8c-4b75-b54b-40e229f6d653",
        "parentId" : null,
        "authorId" : "d2d80496-0795-4618-ba72-36ae6c5b52ef",
        "body" : "```suggestion\r\n            boot_time_command = self._task.args.get('boot_time_command')\r\n            try:\r\n                check_type_str(boot_time_command, allow_conversion=False)\r\n            except TypeError as e:\r\n                raise AnsibleError(\"Invalid value given for 'boot_time_command': %s.\" % to_native(e))\r\n```\r\ni think we could put this to the ```if``` block to avoid extra checks of the default boot_time_command value",
        "createdAt" : "2019-10-09T06:52:04Z",
        "updatedAt" : "2020-01-15T21:01:17Z",
        "lastEditedBy" : "d2d80496-0795-4618-ba72-36ae6c5b52ef",
        "tags" : [
        ]
      },
      {
        "id" : "efe599ae-f5a2-46c3-8040-61b40b143653",
        "parentId" : "acf0c66a-6c8c-4b75-b54b-40e229f6d653",
        "authorId" : "2f8132dc-12f8-44dc-8b97-1cf4c1616b68",
        "body" : "Good suggestion. Thank you for the review.",
        "createdAt" : "2020-01-08T21:44:25Z",
        "updatedAt" : "2020-01-15T21:01:17Z",
        "lastEditedBy" : "2f8132dc-12f8-44dc-8b97-1cf4c1616b68",
        "tags" : [
        ]
      },
      {
        "id" : "c32a5793-c83d-4472-b394-6f8d9a1f8166",
        "parentId" : "acf0c66a-6c8c-4b75-b54b-40e229f6d653",
        "authorId" : "d2d80496-0795-4618-ba72-36ae6c5b52ef",
        "body" : "i absolutely forgot what we discussed here but YW :)",
        "createdAt" : "2020-01-09T06:06:31Z",
        "updatedAt" : "2020-01-15T21:01:17Z",
        "lastEditedBy" : "d2d80496-0795-4618-ba72-36ae6c5b52ef",
        "tags" : [
        ]
      }
    ],
    "commit" : "6e4517e221eba3a0b860339fd46992f5c660f7fe",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +190,194 @@        boot_time_command = self._get_value_from_facts('BOOT_TIME_COMMANDS', distribution, 'DEFAULT_BOOT_TIME_COMMAND')\n        if self._task.args.get('boot_time_command'):\n            boot_time_command = self._task.args.get('boot_time_command')\n\n            try:"
  },
  {
    "id" : "1305d7c6-c362-4b5a-a4d4-dd1dc254917b",
    "prId" : 70818,
    "prUrl" : "https://github.com/ansible/ansible/pull/70818#pullrequestreview-453669617",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "53407637-7199-4084-9de5-7faa8158f551",
        "parentId" : null,
        "authorId" : "2f8132dc-12f8-44dc-8b97-1cf4c1616b68",
        "body" : "I think I looked into using gathered facts but didn't find a clear way to do that. ",
        "createdAt" : "2020-07-22T19:12:17Z",
        "updatedAt" : "2020-07-23T01:12:39Z",
        "lastEditedBy" : "2f8132dc-12f8-44dc-8b97-1cf4c1616b68",
        "tags" : [
        ]
      },
      {
        "id" : "451520d5-a788-4d3b-815d-2da5c4f9e169",
        "parentId" : "53407637-7199-4084-9de5-7faa8158f551",
        "authorId" : "311820dd-fcb9-46df-a201-9c0e7d6fac58",
        "body" : "Several of the other plugins do this (see `package` and `service` for crib notes ;) )",
        "createdAt" : "2020-07-22T20:42:35Z",
        "updatedAt" : "2020-07-23T01:12:39Z",
        "lastEditedBy" : "311820dd-fcb9-46df-a201-9c0e7d6fac58",
        "tags" : [
        ]
      }
    ],
    "commit" : "140cfeabc84c26cbeef1d49f44e57dca770765da",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +121,125 @@\n    def get_distribution(self, task_vars):\n        # FIXME: only execute the module if we don't already have the facts we need\n        distribution = {}\n        display.debug('{action}: running setup module to get distribution'.format(action=self._task.action))"
  }
]