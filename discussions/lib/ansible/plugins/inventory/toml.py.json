[
  {
    "id" : "32706682-232f-4993-ab72-5ff761ce282a",
    "prId" : 41593,
    "prUrl" : "https://github.com/ansible/ansible/pull/41593#pullrequestreview-160118381",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9fe8b966-9402-4629-bfd8-916660bf103c",
        "parentId" : null,
        "authorId" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "body" : "AFAIR you can leave it as `{(k, convert_yaml_objects_to_native(v)) for k, v in obj.items()}|`\r\n\r\ncc @abadger ",
        "createdAt" : "2018-09-30T10:44:04Z",
        "updatedAt" : "2018-11-05T22:56:09Z",
        "lastEditedBy" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "tags" : [
        ]
      },
      {
        "id" : "b06d3020-13db-4b1f-80ad-3ea92fc1ac70",
        "parentId" : "9fe8b966-9402-4629-bfd8-916660bf103c",
        "authorId" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "body" : "Not yet.  We have to wait for the test infrastructure to be updated to test modules on python 2.6 without having to run the controller on python 2.6.  there's a potential roadmap item about that in the project board",
        "createdAt" : "2018-09-30T15:24:33Z",
        "updatedAt" : "2018-11-05T22:56:09Z",
        "lastEditedBy" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "tags" : [
        ]
      }
    ],
    "commit" : "a92391547ee0b20bb1b08768f0abcd2ab229a7a2",
    "line" : 155,
    "diffHunk" : "@@ -1,1 +153,157 @@    \"\"\"\n    if isinstance(obj, dict):\n        return dict((k, convert_yaml_objects_to_native(v)) for k, v in obj.items())\n    elif isinstance(obj, list):\n        return [convert_yaml_objects_to_native(v) for v in obj]"
  },
  {
    "id" : "75eda602-8610-4ce4-9847-c71e963a07c5",
    "prId" : 41593,
    "prUrl" : "https://github.com/ansible/ansible/pull/41593#pullrequestreview-164420088",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "002b1ce1-09f7-47a3-bfb2-8379d86254de",
        "parentId" : null,
        "authorId" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "body" : "`str` -> `six.text_type` I guess?\r\n\r\ncc @abadger ^",
        "createdAt" : "2018-10-12T21:32:56Z",
        "updatedAt" : "2018-11-05T22:56:09Z",
        "lastEditedBy" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "tags" : [
        ]
      },
      {
        "id" : "a2d090ca-c6fe-4558-b9b5-790ef629016d",
        "parentId" : "002b1ce1-09f7-47a3-bfb2-8379d86254de",
        "authorId" : "4b69a0b5-ac6f-45e9-9507-dd1385182f29",
        "body" : "Not here.  This is updating `self.dump_funcs` which is a `toml` internal thing.  I need to get the \"dump_func\" that `toml` has listed for `str`.\r\n\r\nBasically to make `AnsibleUnicode` behave the same as `toml` specifies for `str`.",
        "createdAt" : "2018-10-12T21:34:31Z",
        "updatedAt" : "2018-11-05T22:56:09Z",
        "lastEditedBy" : "4b69a0b5-ac6f-45e9-9507-dd1385182f29",
        "tags" : [
        ]
      },
      {
        "id" : "10816542-39f4-4348-ba66-961b39631a44",
        "parentId" : "002b1ce1-09f7-47a3-bfb2-8379d86254de",
        "authorId" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "body" : "But that's bytes under py2. Wouldn't it cause problems?",
        "createdAt" : "2018-10-12T21:40:11Z",
        "updatedAt" : "2018-11-05T22:56:09Z",
        "lastEditedBy" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "tags" : [
        ]
      },
      {
        "id" : "6a37326f-8648-46c3-b8fc-36180bada35f",
        "parentId" : "002b1ce1-09f7-47a3-bfb2-8379d86254de",
        "authorId" : "4b69a0b5-ac6f-45e9-9507-dd1385182f29",
        "body" : "`toml` has no dumper at all for `bytes`.  And I haven't run into a situation that has necessitated it.\r\n\r\nAdditionally `toml` uses the same dumper for `str` and `unicode`: \r\n\r\nhttps://github.com/uiri/toml/blob/f849546caac716cee7f2f32e1b1fe7e2822e342a/toml/encoder.py#L115-L125\r\n\r\nI mean, I suppose I could try to do something tricky here, but I don't see need.",
        "createdAt" : "2018-10-12T21:49:10Z",
        "updatedAt" : "2018-11-05T22:56:09Z",
        "lastEditedBy" : "4b69a0b5-ac6f-45e9-9507-dd1385182f29",
        "tags" : [
        ]
      }
    ],
    "commit" : "a92391547ee0b20bb1b08768f0abcd2ab229a7a2",
    "line" : 130,
    "diffHunk" : "@@ -1,1 +128,132 @@            self.dump_funcs.update({\n                AnsibleSequence: self.dump_funcs.get(list),\n                AnsibleUnicode: self.dump_funcs.get(str),\n            })\n            display.warning(WARNING_MSG)"
  },
  {
    "id" : "ee73ddb8-11e1-4e6c-8234-7bfbd6721111",
    "prId" : 41593,
    "prUrl" : "https://github.com/ansible/ansible/pull/41593#pullrequestreview-164423508",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "326ea80e-cde2-4f5b-aaa4-c74089f36f13",
        "parentId" : null,
        "authorId" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "body" : "After some thinking: it does not make sense to have this `HAS_TOML` with fallback to `AnsibleTomlEncoder = None` because you're not going to use it anyway. Just check for `ImportError` where you import this plugin and that's it.",
        "createdAt" : "2018-10-12T22:04:43Z",
        "updatedAt" : "2018-11-05T22:56:09Z",
        "lastEditedBy" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "tags" : [
        ]
      }
    ],
    "commit" : "a92391547ee0b20bb1b08768f0abcd2ab229a7a2",
    "line" : 123,
    "diffHunk" : "@@ -1,1 +121,125 @@\n\nif HAS_TOML and hasattr(toml, 'TomlEncoder'):\n    class AnsibleTomlEncoder(toml.TomlEncoder):\n        def __init__(self, *args, **kwargs):"
  },
  {
    "id" : "1927f123-b0af-48bb-a15e-b103431e4819",
    "prId" : 41593,
    "prUrl" : "https://github.com/ansible/ansible/pull/41593#pullrequestreview-164424747",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "75105a2a-1f83-4423-9592-295d71ea929d",
        "parentId" : null,
        "authorId" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "body" : "```python\r\nfrom functools import partial\r\n```",
        "createdAt" : "2018-10-12T22:10:39Z",
        "updatedAt" : "2018-11-05T22:56:09Z",
        "lastEditedBy" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "tags" : [
        ]
      }
    ],
    "commit" : "a92391547ee0b20bb1b08768f0abcd2ab229a7a2",
    "line" : 94,
    "diffHunk" : "@@ -1,1 +92,96 @@\nimport os\n\nfrom functools import partial\n"
  },
  {
    "id" : "b1d842bb-e547-4845-a461-e93127eb0562",
    "prId" : 41593,
    "prUrl" : "https://github.com/ansible/ansible/pull/41593#pullrequestreview-164424850",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "335ac5b2-822c-49e1-b232-ec3c770acdc9",
        "parentId" : null,
        "authorId" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "body" : "```python\r\ntoml_dumps = partial(toml.dumps, encoder=AnsibleTomlEncoder())\r\n```",
        "createdAt" : "2018-10-12T22:11:12Z",
        "updatedAt" : "2018-11-05T22:56:09Z",
        "lastEditedBy" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "tags" : [
        ]
      }
    ],
    "commit" : "a92391547ee0b20bb1b08768f0abcd2ab229a7a2",
    "line" : 131,
    "diffHunk" : "@@ -1,1 +129,133 @@                AnsibleSequence: self.dump_funcs.get(list),\n                AnsibleUnicode: self.dump_funcs.get(str),\n            })\n            display.warning(WARNING_MSG)\n    toml_dumps = partial(toml.dumps, encoder=AnsibleTomlEncoder())"
  },
  {
    "id" : "9a687036-4dcc-456e-a5a6-218b02f9c494",
    "prId" : 41593,
    "prUrl" : "https://github.com/ansible/ansible/pull/41593#pullrequestreview-164429008",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4be84ab2-5676-4535-988c-e188114ca419",
        "parentId" : null,
        "authorId" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "body" : "It doesn't make sense to turn a unicode string into a unicode string. It's just `str(str(''))`, which is probably not what you want.\r\n\r\nMaybe you wanted to turn bytes into text here? In such case check'd be against `binary_type` and the translation should use `to_text()` shim.",
        "createdAt" : "2018-10-12T22:19:36Z",
        "updatedAt" : "2018-11-05T22:56:09Z",
        "lastEditedBy" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "tags" : [
        ]
      },
      {
        "id" : "decb46cc-0d24-4210-b5a8-db53a351acd8",
        "parentId" : "4be84ab2-5676-4535-988c-e188114ca419",
        "authorId" : "4b69a0b5-ac6f-45e9-9507-dd1385182f29",
        "body" : "I suppose I could have been more verbose here in what is happening.  But `AnsibleUnicode` inherits from `text_type`.  I am just stripping off the custom YAML object types.\r\n\r\nThat is all this is doing, is making sure that we don't have any of those custom types.",
        "createdAt" : "2018-10-12T22:22:52Z",
        "updatedAt" : "2018-11-05T22:56:09Z",
        "lastEditedBy" : "4b69a0b5-ac6f-45e9-9507-dd1385182f29",
        "tags" : [
        ]
      },
      {
        "id" : "c203c07d-4eee-4df8-998a-d78af8f0f9a3",
        "parentId" : "4be84ab2-5676-4535-988c-e188114ca419",
        "authorId" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "body" : "Oh, that should be in a comment for sure.",
        "createdAt" : "2018-10-12T22:33:30Z",
        "updatedAt" : "2018-11-05T22:56:09Z",
        "lastEditedBy" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "tags" : [
        ]
      }
    ],
    "commit" : "a92391547ee0b20bb1b08768f0abcd2ab229a7a2",
    "line" : 158,
    "diffHunk" : "@@ -1,1 +156,160 @@    elif isinstance(obj, list):\n        return [convert_yaml_objects_to_native(v) for v in obj]\n    elif isinstance(obj, text_type):\n        return text_type(obj)\n    else:"
  },
  {
    "id" : "9af4cce5-0166-4312-9182-fcad99fc8fb0",
    "prId" : 41593,
    "prUrl" : "https://github.com/ansible/ansible/pull/41593#pullrequestreview-164428131",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1b08e3b7-f7ec-42f0-97cb-c22fd99530eb",
        "parentId" : null,
        "authorId" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "body" : "It's better to actually say that there's no file in place or it's inaccessible.",
        "createdAt" : "2018-10-12T22:26:51Z",
        "updatedAt" : "2018-11-05T22:56:09Z",
        "lastEditedBy" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "tags" : [
        ]
      },
      {
        "id" : "391bdec8-5ed5-46be-86d3-66386f696ee2",
        "parentId" : "1b08e3b7-f7ec-42f0-97cb-c22fd99530eb",
        "authorId" : "4b69a0b5-ac6f-45e9-9507-dd1385182f29",
        "body" : "I have copied this code directly from `parsing/dataloader.py`, so this is consistent with other uses.  And no, I don't plan on changing `parsing/dataloader.py`.",
        "createdAt" : "2018-10-12T22:28:35Z",
        "updatedAt" : "2018-11-05T22:56:09Z",
        "lastEditedBy" : "4b69a0b5-ac6f-45e9-9507-dd1385182f29",
        "tags" : [
        ]
      }
    ],
    "commit" : "a92391547ee0b20bb1b08768f0abcd2ab229a7a2",
    "line" : 217,
    "diffHunk" : "@@ -1,1 +215,219 @@        b_file_name = to_bytes(self.loader.path_dwim(file_name))\n        if not self.loader.path_exists(b_file_name):\n            raise AnsibleFileNotFound(\"Unable to retrieve file contents\", file_name=file_name)\n\n        try:"
  },
  {
    "id" : "1b0f1d11-1dee-4ecf-a70f-090ce2da9999",
    "prId" : 41593,
    "prUrl" : "https://github.com/ansible/ansible/pull/41593#pullrequestreview-164428478",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e3cbc616-1bc5-46ee-9699-af9b055b23e8",
        "parentId" : null,
        "authorId" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "body" : "`.items()`?",
        "createdAt" : "2018-10-12T22:30:35Z",
        "updatedAt" : "2018-11-05T22:56:09Z",
        "lastEditedBy" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "tags" : [
        ]
      }
    ],
    "commit" : "a92391547ee0b20bb1b08768f0abcd2ab229a7a2",
    "line" : 260,
    "diffHunk" : "@@ -1,1 +258,262 @@            raise AnsibleParserError('Plugin configuration TOML file, not TOML inventory')\n\n        for group_name in data:\n            self._parse_group(group_name, data[group_name])\n"
  }
]