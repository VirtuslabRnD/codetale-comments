[
  {
    "id" : "7f158689-8e5b-40d9-b9f8-520c19e1afed",
    "prId" : 45728,
    "prUrl" : "https://github.com/ansible/ansible/pull/45728#pullrequestreview-162662355",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8b2a5710-1419-4261-a1b6-109d62caa1b3",
        "parentId" : null,
        "authorId" : "d4c7fda6-9311-4eb9-91ca-d3f1cbccd288",
        "body" : "`cf` could be quoted (if you are willing to perform this change, first `%s` could be replaced by `%r`)",
        "createdAt" : "2018-10-08T22:35:39Z",
        "updatedAt" : "2018-10-08T22:43:45Z",
        "lastEditedBy" : "d4c7fda6-9311-4eb9-91ca-d3f1cbccd288",
        "tags" : [
        ]
      }
    ],
    "commit" : "14d5f48d037b156f01d2c421679dfbe1f628b90e",
    "line" : 45,
    "diffHunk" : "@@ -1,1 +316,320 @@\n        if not (k in ALLOWED_DEVICE_QUERY_PARAMETERS or k.startswith(\"cf_\")):\n            msg = \"Warning: %s not in %s or starting with cf (Custom field)\" % (k, ALLOWED_DEVICE_QUERY_PARAMETERS)\n            self.display.warning(msg=msg)\n            return"
  },
  {
    "id" : "6cdc27e5-7b59-4479-868e-38d84dae04bb",
    "prId" : 45728,
    "prUrl" : "https://github.com/ansible/ansible/pull/45728#pullrequestreview-162806134",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9b0b2cf6-3018-4e0d-ad7a-71921564a38f",
        "parentId" : null,
        "authorId" : "d4c7fda6-9311-4eb9-91ca-d3f1cbccd288",
        "body" : "Just in case, this syntax could be used:\r\n```\r\nself.virtual_machines_url = (self.api_endpoint +\r\n                             \"/api/virtualization/virtual-machines/?\" +\r\n                             urlencode(query_parameters))\r\n```",
        "createdAt" : "2018-10-08T22:41:05Z",
        "updatedAt" : "2018-10-08T22:43:45Z",
        "lastEditedBy" : "d4c7fda6-9311-4eb9-91ca-d3f1cbccd288",
        "tags" : [
        ]
      },
      {
        "id" : "6d5761ad-b92c-4dd1-8ff8-87a5c586f91a",
        "parentId" : "9b0b2cf6-3018-4e0d-ad7a-71921564a38f",
        "authorId" : "a77cdfaf-d12c-4b09-9104-f04f09596a8c",
        "body" : "What benefit would it bring?",
        "createdAt" : "2018-10-09T05:28:56Z",
        "updatedAt" : "2018-10-09T05:28:56Z",
        "lastEditedBy" : "a77cdfaf-d12c-4b09-9104-f04f09596a8c",
        "tags" : [
        ]
      },
      {
        "id" : "a64fa589-fc6b-44ab-adab-261f00d1a0b5",
        "parentId" : "9b0b2cf6-3018-4e0d-ad7a-71921564a38f",
        "authorId" : "d4c7fda6-9311-4eb9-91ca-d3f1cbccd288",
        "body" : "No change required here, I meant: parentheses could be used in order to split expression across lines (instead of calling `join`).",
        "createdAt" : "2018-10-09T10:00:58Z",
        "updatedAt" : "2018-10-09T10:00:58Z",
        "lastEditedBy" : "d4c7fda6-9311-4eb9-91ca-d3f1cbccd288",
        "tags" : [
        ]
      }
    ],
    "commit" : "14d5f48d037b156f01d2c421679dfbe1f628b90e",
    "line" : 54,
    "diffHunk" : "@@ -1,1 +326,330 @@                                       map(self.validate_query_parameters, self.query_filters)))\n        self.device_url = self.api_endpoint + \"/api/dcim/devices/\" + \"?\" + urlencode(query_parameters)\n        self.virtual_machines_url = \"\".join([self.api_endpoint,\n                                             \"/api/virtualization/virtual-machines/\",\n                                             \"?\","
  },
  {
    "id" : "c66d5034-6969-4a86-a13e-a97458940a26",
    "prId" : 45733,
    "prUrl" : "https://github.com/ansible/ansible/pull/45733#pullrequestreview-164713366",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3637c6a6-a116-405f-a6d6-3242f8cd9396",
        "parentId" : null,
        "authorId" : "43ecf86e-337f-4c20-b098-a5cbb43ee000",
        "body" : "You can maybe limit the except to a `KeyError`?",
        "createdAt" : "2018-10-12T09:14:21Z",
        "updatedAt" : "2018-10-12T12:02:08Z",
        "lastEditedBy" : "43ecf86e-337f-4c20-b098-a5cbb43ee000",
        "tags" : [
        ]
      },
      {
        "id" : "72704354-d824-4219-b371-501bea027645",
        "parentId" : "3637c6a6-a116-405f-a6d6-3242f8cd9396",
        "authorId" : "a77cdfaf-d12c-4b09-9104-f04f09596a8c",
        "body" : "You can have ValueError (In case host[“platform\"] is None), You can have KeyError in case platform exists but there is no id. Because I don't have the different treatments I don't see the point to specify more the exception.",
        "createdAt" : "2018-10-15T08:12:06Z",
        "updatedAt" : "2018-10-15T08:12:06Z",
        "lastEditedBy" : "a77cdfaf-d12c-4b09-9104-f04f09596a8c",
        "tags" : [
        ]
      },
      {
        "id" : "4fb05f7e-7aeb-4d2d-b41d-1fa3f0a6d614",
        "parentId" : "3637c6a6-a116-405f-a6d6-3242f8cd9396",
        "authorId" : "43ecf86e-337f-4c20-b098-a5cbb43ee000",
        "body" : "Ok, I understand, that's fine :)",
        "createdAt" : "2018-10-15T13:49:44Z",
        "updatedAt" : "2018-10-15T13:49:45Z",
        "lastEditedBy" : "43ecf86e-337f-4c20-b098-a5cbb43ee000",
        "tags" : [
        ]
      }
    ],
    "commit" : "480618aa467033abd54f01b382d31ab4f0c975c6",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +213,217 @@        try:\n            return self.platforms_lookup[host[\"platform\"][\"id\"]]\n        except Exception:\n            return\n"
  },
  {
    "id" : "c73136a2-aa5e-487b-b5e9-dedf5876b7a4",
    "prId" : 45741,
    "prUrl" : "https://github.com/ansible/ansible/pull/45741#pullrequestreview-156043590",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1f902514-7c61-453d-bdd8-a245c57dff48",
        "parentId" : null,
        "authorId" : "6b7e4265-ae86-4269-9bd7-f8ffa9085df6",
        "body" : "Why did you add all these manually rather than just extending constructed?",
        "createdAt" : "2018-09-17T16:39:12Z",
        "updatedAt" : "2018-09-17T16:39:12Z",
        "lastEditedBy" : "6b7e4265-ae86-4269-9bd7-f8ffa9085df6",
        "tags" : [
        ]
      },
      {
        "id" : "271e88a9-e266-4170-8055-fae71a89a76c",
        "parentId" : "1f902514-7c61-453d-bdd8-a245c57dff48",
        "authorId" : "a77cdfaf-d12c-4b09-9104-f04f09596a8c",
        "body" : "@s-hertel I used what I knew. Do you have a tutorial exposing how to use constructed? I would like to see some examples in action.",
        "createdAt" : "2018-09-17T16:45:48Z",
        "updatedAt" : "2018-09-17T16:45:48Z",
        "lastEditedBy" : "a77cdfaf-d12c-4b09-9104-f04f09596a8c",
        "tags" : [
        ]
      },
      {
        "id" : "9b38aa85-e196-44e8-9121-41cfabfe637e",
        "parentId" : "1f902514-7c61-453d-bdd8-a245c57dff48",
        "authorId" : "6b7e4265-ae86-4269-9bd7-f8ffa9085df6",
        "body" : "Fair enough! I'm not sure of a tutorial, but a lot of plugins are using it - the Google inventory plugin, virtualbox, aws_ec2, openshift, openstack... among others. You can actually use constructed with this plugin as is (though you need to make sure either the constructed or auto inventory plugin is enabled and create a second config file). For example...\r\n\r\nI'm not sure what a host from this plugin looks like, but say a host has a `tags` host variable that is a dictionary of key value pairs, this could be the constructed config:\r\n```\r\nplugin: constructed\r\nkeyed_groups:\r\n  - key: tags  # the top level host var - you can also do more complicated things like 'security_groups|json_query(\"[].group_id\")' where security_groups is a host var that is a list of dictionaries containing a group_id key\r\n    prefix: tag  # the prefix for each of these groups - by default there is no prefix\r\n```\r\nThat config will create tag_Key_Value groups. Or if you only wanted to create groups for each Name tag in the format Name_Value:\r\n```\r\nplugin: constructed\r\nkeyed_groups:\r\n  - key: tags.Name\r\n    separator: \"\"  # defaults to _, so set to an empty string to have no initial _ separator if there is no prefix\r\n```\r\nNow to see the groups: `ansible-inventory -i netboxconfig.yml -i constructedconfig.yml --graph`\r\n\r\nAdding constructed to this plugin will let people keep those constructed options in the netbox config file.\r\n```\r\nplugin: netbox\r\n# netbox options\r\n# also constructed options, like `keyed_groups` or `compose`\r\n```\r\n\r\nThen if you decided to implement it wouldn't be a large diff. First, you’d want to add constructed documentation fragment:\r\n``` \r\nDOCUMENTATION = '''\r\n    ...\r\n    extends_documentation_fragment:\r\n      - constructed \r\n```\r\n\r\nThen you’d need to extend the base class so you can use the Constructable methods:\r\n```\r\nfrom ansible.plugins.inventory import BaseInventoryPlugin, Constructable\r\n...\r\nclass InventoryModule(BaseInventoryPlugin, Constructable):\r\n```\r\n\r\nAnd then after adding each host to inventory you’d use use the constructed options to : \r\n```\r\nstrict = self.get_options(‘strict’)\r\n\r\n# Composed variables\r\nself._set_composite_vars(self.get_option('compose'), host, hostname, strict=strict) \r\n\r\n# Complex groups based on jinja2 conditionals, hosts that meet the conditional are added to group\r\nself._add_host_to_composed_groups(self.get_option('groups'), host, hostname, strict=strict)\r\n\r\n# Create groups based on variable values and add the corresponding hosts to it\r\nself._add_host_to_keyed_groups(self.get_option('keyed_groups'), host, hostname, strict=strict)\r\n```\r\n\r\nAnd then you won’t forever be adding a steady stream of new groups since people can group by any host vars that they want.\r\n",
        "createdAt" : "2018-09-17T17:50:04Z",
        "updatedAt" : "2018-09-17T19:48:38Z",
        "lastEditedBy" : "6b7e4265-ae86-4269-9bd7-f8ffa9085df6",
        "tags" : [
        ]
      }
    ],
    "commit" : "d7c57941bfafcac25d0c12cc8a9f61db6369bf91",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +43,47 @@                - tenants\n                - racks\n                - tags\n                - device_roles\n                - device_types"
  },
  {
    "id" : "42aad785-69b0-4ee7-b149-f99a1f59efbc",
    "prId" : 45913,
    "prUrl" : "https://github.com/ansible/ansible/pull/45913#pullrequestreview-162386838",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "82d37c15-aa66-4f13-9633-767e35559d59",
        "parentId" : null,
        "authorId" : "d7d8721c-7ad0-4834-9a3d-b53ca8656789",
        "body" : "Do we need `version_added` here? ",
        "createdAt" : "2018-10-06T14:41:07Z",
        "updatedAt" : "2018-10-08T09:19:28Z",
        "lastEditedBy" : "d7d8721c-7ad0-4834-9a3d-b53ca8656789",
        "tags" : [
        ]
      },
      {
        "id" : "b9cb5ac8-0344-4440-a346-c9bec29cafc3",
        "parentId" : "82d37c15-aa66-4f13-9633-767e35559d59",
        "authorId" : "a77cdfaf-d12c-4b09-9104-f04f09596a8c",
        "body" : "Netbox is not present in 2.7 so I guess that all of it will be present for 2.8",
        "createdAt" : "2018-10-08T09:19:06Z",
        "updatedAt" : "2018-10-08T09:19:28Z",
        "lastEditedBy" : "a77cdfaf-d12c-4b09-9104-f04f09596a8c",
        "tags" : [
        ]
      }
    ],
    "commit" : "9679e537711a23bf37eb5d16cb0d32c56142b535",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +61,65 @@        compose:\n            description: List of custom ansible host vars to create from the device object fetched from NetBox\n            default: {}\n            type: dict\n'''"
  }
]