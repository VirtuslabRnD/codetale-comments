[
  {
    "id" : "4f402772-9883-41fd-ad59-3403bd0e928b",
    "prId" : 25956,
    "prUrl" : "https://github.com/ansible/ansible/pull/25956#pullrequestreview-47457458",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "85d296bd-f085-4126-a78e-0e9e79deb0b7",
        "parentId" : null,
        "authorId" : "fa0144fc-7424-474a-9ab5-059de28814b7",
        "body" : "With the AnsibleFileNotFound changes, not sure we need to specify a message here.",
        "createdAt" : "2017-06-30T15:18:36Z",
        "updatedAt" : "2017-07-03T15:33:09Z",
        "lastEditedBy" : "fa0144fc-7424-474a-9ab5-059de28814b7",
        "tags" : [
        ]
      },
      {
        "id" : "5f4bc7c7-38a9-4d5e-ac8b-1e98552acff6",
        "parentId" : "85d296bd-f085-4126-a78e-0e9e79deb0b7",
        "authorId" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "body" : "I left it so we could if we want to, since this one is about file contents i think it is more pertinent than the default",
        "createdAt" : "2017-06-30T18:00:01Z",
        "updatedAt" : "2017-07-03T15:33:09Z",
        "lastEditedBy" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "tags" : [
        ]
      }
    ],
    "commit" : "26276f1e6910392b178060058604b8c44447cf0f",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +190,194 @@        b_file_name = to_bytes(file_name)\n        if not self.path_exists(b_file_name) or not self.is_file(b_file_name):\n            raise AnsibleFileNotFound(\"Unable to retrieve file contents\", file_name=file_name)\n\n        show_content = True"
  },
  {
    "id" : "510057d9-6a70-48d3-9d37-cdc48816bd5e",
    "prId" : 25956,
    "prUrl" : "https://github.com/ansible/ansible/pull/25956#pullrequestreview-47474853",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8069da25-2dc2-468f-b2e1-accd1ba82d4e",
        "parentId" : null,
        "authorId" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "body" : "* Should add a comment here saying what strings you intend to match.\r\n* Could be done with a substring which would be quicker but it's less clear to read so I'm not considering a substring a blocker here. substring would look like this:\r\n``` python\r\nidx = path.rfind(u'tasks')\r\nif (\r\n    (idx == 0 or path[idx-1] == u'/') and idx + 5 == len(path) or (idx + 6 == len(path) and path[idx+5] == u'/') and\r\n    [...]\r\n```",
        "createdAt" : "2017-06-30T19:15:03Z",
        "updatedAt" : "2017-07-03T15:33:09Z",
        "lastEditedBy" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "tags" : [
        ]
      },
      {
        "id" : "c44d6561-67e0-4ef2-a9c9-3beb85b6d168",
        "parentId" : "8069da25-2dc2-468f-b2e1-accd1ba82d4e",
        "authorId" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "body" : "Since the new code uses RE_TASKS in other places, probably put the comment about what the intended matches should be at the top where RE_TASKS is defined.",
        "createdAt" : "2017-06-30T19:17:07Z",
        "updatedAt" : "2017-07-03T15:33:09Z",
        "lastEditedBy" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "tags" : [
        ]
      }
    ],
    "commit" : "26276f1e6910392b178060058604b8c44447cf0f",
    "line" : 75,
    "diffHunk" : "@@ -1,1 +259,263 @@\n                if (\n                    RE_TASKS.search(path) and\n                    os.path.exists(os.path.join(b_path, b_main)) or\n                    os.path.exists(os.path.join(b_upath, b_tasked)) or"
  }
]