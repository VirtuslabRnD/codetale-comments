[
  {
    "id" : "1b0d094d-18fa-4175-8a5b-92b7e34e7ffa",
    "prId" : 14168,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "85ddb1b3-5f26-4974-8858-868b92e10d41",
        "parentId" : null,
        "authorId" : "311820dd-fcb9-46df-a201-9c0e7d6fac58",
        "body" : "Could this cause a problem in a nested loop (ie, deleting the outer loop var)? I'm assuming each task has its own deepcopy of variables, but not sure from context.\n",
        "createdAt" : "2016-01-28T18:00:41Z",
        "updatedAt" : "2016-01-28T18:00:41Z",
        "lastEditedBy" : "311820dd-fcb9-46df-a201-9c0e7d6fac58",
        "tags" : [
        ]
      },
      {
        "id" : "4756a80a-d505-41d4-ac6a-ec53c047ad5b",
        "parentId" : "85ddb1b3-5f26-4974-8858-868b92e10d41",
        "authorId" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "body" : "yep, it's a copy.  That allows us push things into variables['item'] later on to do the real templating of the name field as well.\n",
        "createdAt" : "2016-01-28T18:36:54Z",
        "updatedAt" : "2016-01-28T18:36:54Z",
        "lastEditedBy" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "tags" : [
        ]
      }
    ],
    "commit" : "0e410bbc8a6156d696edbebc5f07a23f454dd49c",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +279,283 @@                    variables['item'] = '\\0@'\n                    template_with_item = templar.template(name, variables, cache=False)\n                    del variables['item']\n\n                # Check if the user is doing some operation that doesn't take"
  },
  {
    "id" : "4933f6b6-3b1e-43a0-8dae-d895271d3fb3",
    "prId" : 14168,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "53c71abe-7040-4262-b776-127ca4974413",
        "parentId" : null,
        "authorId" : "311820dd-fcb9-46df-a201-9c0e7d6fac58",
        "body" : "Would this ever return false under normal circumstances? Seems like we'd lose items if it did...\n",
        "createdAt" : "2016-01-28T18:20:33Z",
        "updatedAt" : "2016-01-28T18:20:33Z",
        "lastEditedBy" : "311820dd-fcb9-46df-a201-9c0e7d6fac58",
        "tags" : [
        ]
      },
      {
        "id" : "a7a4c159-6219-4229-bd92-3e0c6b6e642a",
        "parentId" : "53c71abe-7040-4262-b776-127ca4974413",
        "authorId" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "body" : "It can return false but I should be restoring the value of name here: https://github.com/ansible/ansible/pull/14168/files#diff-76ffc0551f8cf3d6255500316568e60bR296  and returning hte items we were passed in unchanged here: https://github.com/ansible/ansible/pull/14168/files#diff-76ffc0551f8cf3d6255500316568e60bL294\n",
        "createdAt" : "2016-01-28T18:33:56Z",
        "updatedAt" : "2016-01-28T18:33:56Z",
        "lastEditedBy" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "tags" : [
        ]
      },
      {
        "id" : "63463086-94f6-456e-974a-68a7168c9344",
        "parentId" : "53c71abe-7040-4262-b776-127ca4974413",
        "authorId" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "body" : "The _task.evaluate_conditional() call is so that users can filter some of the items in their playbook.  We're not sure if it's really a valuable feature but theoretically one cold do something like:\n\n```\n- yum: name=\"{{item}}\"\n  with_items: [\"yum\", \"dnf\"]\n  when: \"'yum' in item and distribution_family == 'RedHat'\"\n```\n\nto take advantage of this.\n",
        "createdAt" : "2016-01-28T18:55:55Z",
        "updatedAt" : "2016-01-28T18:55:55Z",
        "lastEditedBy" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "tags" : [
        ]
      }
    ],
    "commit" : "0e410bbc8a6156d696edbebc5f07a23f454dd49c",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +287,291 @@                    for item in items:\n                        variables['item'] = item\n                        if self._task.evaluate_conditional(templar, variables):\n                            new_item = templar.template(name, cache=False)\n                            final_items.append(new_item)"
  },
  {
    "id" : "2c2ea440-cd9f-4a7c-9084-c3f1992e431e",
    "prId" : 16630,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "79f56b97-6daf-4dcd-8652-807daebe5e78",
        "parentId" : null,
        "authorId" : "1fc69234-13a3-4892-823f-9d0d86b68b7c",
        "body" : "template is misspelled.\n",
        "createdAt" : "2016-07-14T11:12:54Z",
        "updatedAt" : "2016-07-14T11:12:54Z",
        "lastEditedBy" : "1fc69234-13a3-4892-823f-9d0d86b68b7c",
        "tags" : [
        ]
      }
    ],
    "commit" : "80139bd99533313880ff46faf9079f16d9472c2d",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +194,198 @@\n                # give lookup task 'context' for subdir (mostly needed for first_found)\n                for subdir in ['tempalte', 'var', 'file']: #TODO: move this to constants?\n                    if subdir in self._task.name:\n                        break"
  }
]