[
  {
    "id" : "1b0d094d-18fa-4175-8a5b-92b7e34e7ffa",
    "prId" : 14168,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "85ddb1b3-5f26-4974-8858-868b92e10d41",
        "parentId" : null,
        "authorId" : "311820dd-fcb9-46df-a201-9c0e7d6fac58",
        "body" : "Could this cause a problem in a nested loop (ie, deleting the outer loop var)? I'm assuming each task has its own deepcopy of variables, but not sure from context.\n",
        "createdAt" : "2016-01-28T18:00:41Z",
        "updatedAt" : "2016-01-28T18:00:41Z",
        "lastEditedBy" : "311820dd-fcb9-46df-a201-9c0e7d6fac58",
        "tags" : [
        ]
      },
      {
        "id" : "4756a80a-d505-41d4-ac6a-ec53c047ad5b",
        "parentId" : "85ddb1b3-5f26-4974-8858-868b92e10d41",
        "authorId" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "body" : "yep, it's a copy.  That allows us push things into variables['item'] later on to do the real templating of the name field as well.\n",
        "createdAt" : "2016-01-28T18:36:54Z",
        "updatedAt" : "2016-01-28T18:36:54Z",
        "lastEditedBy" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "tags" : [
        ]
      }
    ],
    "commit" : "0e410bbc8a6156d696edbebc5f07a23f454dd49c",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +279,283 @@                    variables['item'] = '\\0@'\n                    template_with_item = templar.template(name, variables, cache=False)\n                    del variables['item']\n\n                # Check if the user is doing some operation that doesn't take"
  },
  {
    "id" : "4933f6b6-3b1e-43a0-8dae-d895271d3fb3",
    "prId" : 14168,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "53c71abe-7040-4262-b776-127ca4974413",
        "parentId" : null,
        "authorId" : "311820dd-fcb9-46df-a201-9c0e7d6fac58",
        "body" : "Would this ever return false under normal circumstances? Seems like we'd lose items if it did...\n",
        "createdAt" : "2016-01-28T18:20:33Z",
        "updatedAt" : "2016-01-28T18:20:33Z",
        "lastEditedBy" : "311820dd-fcb9-46df-a201-9c0e7d6fac58",
        "tags" : [
        ]
      },
      {
        "id" : "a7a4c159-6219-4229-bd92-3e0c6b6e642a",
        "parentId" : "53c71abe-7040-4262-b776-127ca4974413",
        "authorId" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "body" : "It can return false but I should be restoring the value of name here: https://github.com/ansible/ansible/pull/14168/files#diff-76ffc0551f8cf3d6255500316568e60bR296  and returning hte items we were passed in unchanged here: https://github.com/ansible/ansible/pull/14168/files#diff-76ffc0551f8cf3d6255500316568e60bL294\n",
        "createdAt" : "2016-01-28T18:33:56Z",
        "updatedAt" : "2016-01-28T18:33:56Z",
        "lastEditedBy" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "tags" : [
        ]
      },
      {
        "id" : "63463086-94f6-456e-974a-68a7168c9344",
        "parentId" : "53c71abe-7040-4262-b776-127ca4974413",
        "authorId" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "body" : "The _task.evaluate_conditional() call is so that users can filter some of the items in their playbook.  We're not sure if it's really a valuable feature but theoretically one cold do something like:\n\n```\n- yum: name=\"{{item}}\"\n  with_items: [\"yum\", \"dnf\"]\n  when: \"'yum' in item and distribution_family == 'RedHat'\"\n```\n\nto take advantage of this.\n",
        "createdAt" : "2016-01-28T18:55:55Z",
        "updatedAt" : "2016-01-28T18:55:55Z",
        "lastEditedBy" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "tags" : [
        ]
      }
    ],
    "commit" : "0e410bbc8a6156d696edbebc5f07a23f454dd49c",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +287,291 @@                    for item in items:\n                        variables['item'] = item\n                        if self._task.evaluate_conditional(templar, variables):\n                            new_item = templar.template(name, cache=False)\n                            final_items.append(new_item)"
  },
  {
    "id" : "2c2ea440-cd9f-4a7c-9084-c3f1992e431e",
    "prId" : 16630,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "79f56b97-6daf-4dcd-8652-807daebe5e78",
        "parentId" : null,
        "authorId" : "1fc69234-13a3-4892-823f-9d0d86b68b7c",
        "body" : "template is misspelled.\n",
        "createdAt" : "2016-07-14T11:12:54Z",
        "updatedAt" : "2016-07-14T11:12:54Z",
        "lastEditedBy" : "1fc69234-13a3-4892-823f-9d0d86b68b7c",
        "tags" : [
        ]
      }
    ],
    "commit" : "80139bd99533313880ff46faf9079f16d9472c2d",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +194,198 @@\n                # give lookup task 'context' for subdir (mostly needed for first_found)\n                for subdir in ['tempalte', 'var', 'file']: #TODO: move this to constants?\n                    if subdir in self._task.name:\n                        break"
  },
  {
    "id" : "50418188-2cef-4ffd-a84c-937876d29e30",
    "prId" : 21194,
    "prUrl" : "https://github.com/ansible/ansible/pull/21194#pullrequestreview-21092408",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ae225f8f-045d-4e63-9f95-206fae04590e",
        "parentId" : null,
        "authorId" : "311820dd-fcb9-46df-a201-9c0e7d6fac58",
        "body" : "Eek, having this list hardcoded in the task_executor feels wrong... I'm trying to think of a sane way to do it that wouldn't require actually loading all the action plugins to have them register an intent like this (and that also wouldn't open up the potential for \"catchall\" action plugins that could hijack things).",
        "createdAt" : "2017-02-09T17:28:00Z",
        "updatedAt" : "2017-02-09T17:28:42Z",
        "lastEditedBy" : "311820dd-fcb9-46df-a201-9c0e7d6fac58",
        "tags" : [
        ]
      },
      {
        "id" : "c9ee14a7-27db-4e7a-ba41-520d0009b4d2",
        "parentId" : "ae225f8f-045d-4e63-9f95-206fae04590e",
        "authorId" : "0449156c-4180-4350-84f3-ec3063d999ac",
        "body" : "Given where we are in the dev cycle, this gets us through 2.3 and then we need to commit to finding a better long term solution.  The drawback to not doing this is that every single network module will need a local action in 2.3",
        "createdAt" : "2017-02-09T19:08:20Z",
        "updatedAt" : "2017-02-09T19:08:20Z",
        "lastEditedBy" : "0449156c-4180-4350-84f3-ec3063d999ac",
        "tags" : [
        ]
      }
    ],
    "commit" : "abfbb70e78f9368977e946218ac44d07420f112d",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +759,763 @@        '''\n\n        network_group_modules = frozenset(['eos', 'nxos', 'ios', 'iosxr', 'junos', 'vyos'])\n        module_prefix = self._task.action.split('_')[0]\n"
  },
  {
    "id" : "c9c61ffd-40cf-446c-9413-1e7a17b87c15",
    "prId" : 21194,
    "prUrl" : "https://github.com/ansible/ansible/pull/21194#pullrequestreview-21092669",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "52b7dd0e-4c36-47cb-af94-3384f5d294e2",
        "parentId" : null,
        "authorId" : "311820dd-fcb9-46df-a201-9c0e7d6fac58",
        "body" : "Why the all() instead of just an and?",
        "createdAt" : "2017-02-09T17:28:34Z",
        "updatedAt" : "2017-02-09T17:28:42Z",
        "lastEditedBy" : "311820dd-fcb9-46df-a201-9c0e7d6fac58",
        "tags" : [
        ]
      },
      {
        "id" : "1790361c-88b7-4e12-98f2-d22bf435e248",
        "parentId" : "52b7dd0e-4c36-47cb-af94-3384f5d294e2",
        "authorId" : "0449156c-4180-4350-84f3-ec3063d999ac",
        "body" : "module_prefix is generated by splitting on `_` so we need to be careful to not hit a false positive here",
        "createdAt" : "2017-02-09T19:09:28Z",
        "updatedAt" : "2017-02-09T19:09:28Z",
        "lastEditedBy" : "0449156c-4180-4350-84f3-ec3063d999ac",
        "tags" : [
        ]
      }
    ],
    "commit" : "abfbb70e78f9368977e946218ac44d07420f112d",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +765,769 @@        if self._task.action in self._shared_loader_obj.action_loader:\n            handler_name = self._task.action\n        elif all((module_prefix in network_group_modules, module_prefix in self._shared_loader_obj.action_loader)):\n            handler_name = module_prefix\n        else:"
  },
  {
    "id" : "f72e6a34-050d-43bf-a6a0-27bec9cb42ec",
    "prId" : 34148,
    "prUrl" : "https://github.com/ansible/ansible/pull/34148#pullrequestreview-86736508",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "66e4bf66-235d-487e-bf86-600bc891c320",
        "parentId" : null,
        "authorId" : "fa0144fc-7424-474a-9ab5-059de28814b7",
        "body" : "Was the previous result.copy() necessarily?  I don't know what the intention of the original result.copy() was so I'm not sure if it can be removed.",
        "createdAt" : "2018-01-04T18:23:51Z",
        "updatedAt" : "2018-01-04T18:23:51Z",
        "lastEditedBy" : "fa0144fc-7424-474a-9ab5-059de28814b7",
        "tags" : [
        ]
      },
      {
        "id" : "1170bde3-4830-4234-8600-606634d72ce5",
        "parentId" : "66e4bf66-235d-487e-bf86-600bc891c320",
        "authorId" : "4b69a0b5-ac6f-45e9-9507-dd1385182f29",
        "body" : "It was removed at the request of bcoca in chat as not being needed.  We actually have other lines that look just like this, that didn't have `.copy` in the same method.",
        "createdAt" : "2018-01-04T19:35:52Z",
        "updatedAt" : "2018-01-04T19:35:52Z",
        "lastEditedBy" : "4b69a0b5-ac6f-45e9-9507-dd1385182f29",
        "tags" : [
        ]
      }
    ],
    "commit" : "982f2daa5872b8c87673b1cef3d19d30a2a283a6",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +536,540 @@            # or any facts which may have been generated by the module execution\n            if self._task.register:\n                vars_copy[self._task.register] = wrap_var(result)\n\n            if self._task.async_val > 0:"
  },
  {
    "id" : "60b9ab62-eedc-40de-b8dc-3685286a7ff0",
    "prId" : 42134,
    "prUrl" : "https://github.com/ansible/ansible/pull/42134#pullrequestreview-182794967",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "933354d7-ad0e-41d9-a6d5-83055e3003a7",
        "parentId" : null,
        "authorId" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "body" : "bikeshed: 'all' would be enough?",
        "createdAt" : "2018-12-07T17:27:00Z",
        "updatedAt" : "2018-12-07T17:27:00Z",
        "lastEditedBy" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "tags" : [
        ]
      },
      {
        "id" : "0e79b660-0dae-4441-a680-de9ef8bcc278",
        "parentId" : "933354d7-ad0e-41d9-a6d5-83055e3003a7",
        "authorId" : "4b69a0b5-ac6f-45e9-9507-dd1385182f29",
        "body" : "I'm not sure.  I lean more towards `allitems`, but also thought of `ansible_loop.loop` but that felt oddly redundant.",
        "createdAt" : "2018-12-07T17:28:10Z",
        "updatedAt" : "2018-12-07T17:28:10Z",
        "lastEditedBy" : "4b69a0b5-ac6f-45e9-9507-dd1385182f29",
        "tags" : [
        ]
      }
    ],
    "commit" : "a812bf868cb49ec4482ed27b18031f9577d42e39",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +326,330 @@            if extended:\n                task_vars['ansible_loop'] = {\n                    'allitems': items,\n                    'index': item_index + 1,\n                    'index0': item_index,"
  },
  {
    "id" : "62a1b7c0-e51e-4a14-b3c9-2fc50fdf4919",
    "prId" : 43798,
    "prUrl" : "https://github.com/ansible/ansible/pull/43798#pullrequestreview-146197586",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "52f08432-4a7a-4215-8052-653fe3e11378",
        "parentId" : null,
        "authorId" : "d7d8721c-7ad0-4834-9a3d-b53ca8656789",
        "body" : "Do we need to change this to `/latest/` after we release?",
        "createdAt" : "2018-08-09T02:11:39Z",
        "updatedAt" : "2018-08-14T18:19:19Z",
        "lastEditedBy" : "d7d8721c-7ad0-4834-9a3d-b53ca8656789",
        "tags" : [
        ]
      },
      {
        "id" : "065e942d-aa00-4c84-8f16-0a10d9cb2f73",
        "parentId" : "52f08432-4a7a-4215-8052-653fe3e11378",
        "authorId" : "311820dd-fcb9-46df-a201-9c0e7d6fac58",
        "body" : "Actually I guess maybe we could make this work with $current_release... Hmm...",
        "createdAt" : "2018-08-14T18:37:10Z",
        "updatedAt" : "2018-08-14T18:37:10Z",
        "lastEditedBy" : "311820dd-fcb9-46df-a201-9c0e7d6fac58",
        "tags" : [
        ]
      }
    ],
    "commit" : "e9f0482df8a2af0e8ae1333819297896c2dbf6a7",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +521,525 @@                if C.INJECT_FACTS_AS_VARS:\n                    display.warning(\"Using a variable for a task's 'args' is unsafe in some situations \"\n                                    \"(see https://docs.ansible.com/ansible/devel/reference_appendices/faq.html#argsplat-unsafe)\")\n                variable_params.update(self._task.args)\n                self._task.args = variable_params"
  },
  {
    "id" : "6f101561-b835-43fc-9114-0761b6f8416c",
    "prId" : 49977,
    "prUrl" : "https://github.com/ansible/ansible/pull/49977#pullrequestreview-186082946",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b9d42974-7282-489e-b6fa-14e9ba8d35c7",
        "parentId" : null,
        "authorId" : "fc84e3a8-7a8a-45ea-ba68-7e6e0b604075",
        "body" : "This should have a fallback if level is not a method",
        "createdAt" : "2018-12-18T14:05:47Z",
        "updatedAt" : "2018-12-19T03:39:06Z",
        "lastEditedBy" : "fc84e3a8-7a8a-45ea-ba68-7e6e0b604075",
        "tags" : [
        ]
      }
    ],
    "commit" : "da1046707d136cc2084d4e9c96e92b5142400a15",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +1032,1036 @@                    display.display(message, log_only=True)\n                elif level in ('debug', 'v', 'vv', 'vvv', 'vvvv', 'vvvvv', 'vvvvvv'):\n                    getattr(display, level)(message, host=self._play_context.remote_addr)\n                else:\n                    if hasattr(display, level):"
  }
]