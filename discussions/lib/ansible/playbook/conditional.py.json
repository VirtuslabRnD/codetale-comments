[
  {
    "id" : "d899b26b-e38d-4b69-99b3-37adc6568a18",
    "prId" : 37881,
    "prUrl" : "https://github.com/ansible/ansible/pull/37881#pullrequestreview-106994715",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "630f9f51-6b78-43e8-9c30-3b753ddbc975",
        "parentId" : null,
        "authorId" : "fa0144fc-7424-474a-9ab5-059de28814b7",
        "body" : "could reverse the update ordering and update templar._get_filters() (or a copy...) with e.filters so that\r\nthe e.filters 'wins'",
        "createdAt" : "2018-03-26T17:12:34Z",
        "updatedAt" : "2018-03-26T17:12:34Z",
        "lastEditedBy" : "fa0144fc-7424-474a-9ab5-059de28814b7",
        "tags" : [
        ]
      },
      {
        "id" : "216d2045-af06-4b13-b30b-bdbeb5ca6bd5",
        "parentId" : "630f9f51-6b78-43e8-9c30-3b753ddbc975",
        "authorId" : "fa0144fc-7424-474a-9ab5-059de28814b7",
        "body" : "something like\r\n\r\n``` python\r\ncustom_filters = templar._get_filters()\r\ncustom_filters.update(e.filters)\r\ne.filters = custom_filters\r\n```",
        "createdAt" : "2018-03-26T17:14:04Z",
        "updatedAt" : "2018-03-26T17:14:04Z",
        "lastEditedBy" : "fa0144fc-7424-474a-9ab5-059de28814b7",
        "tags" : [
        ]
      },
      {
        "id" : "dcb053e5-f79f-4112-b96d-2603b37ca9ef",
        "parentId" : "630f9f51-6b78-43e8-9c30-3b753ddbc975",
        "authorId" : "4b69a0b5-ac6f-45e9-9507-dd1385182f29",
        "body" : "We may want to override a builtin filter with an ansible provided by filter, such as `groupby`.  We just don't want this to happen with custom tests.\r\n\r\nEventually custom tests will no longer be registered as filters (2.9), but have been kept thus far for backwards compat.",
        "createdAt" : "2018-03-26T17:14:33Z",
        "updatedAt" : "2018-03-26T17:14:33Z",
        "lastEditedBy" : "4b69a0b5-ac6f-45e9-9507-dd1385182f29",
        "tags" : [
        ]
      }
    ],
    "commit" : "2b0c8a35eccd6f400e5bd0b8726f0be3c4affdf8",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +177,181 @@            try:\n                e = templar.environment.overlay()\n                e.filters.update(templar._get_filters(e.filters))\n                e.tests.update(templar._get_tests())\n"
  },
  {
    "id" : "b025e96b-d972-4bc8-a0a7-e96c22732c4a",
    "prId" : 51030,
    "prUrl" : "https://github.com/ansible/ansible/pull/51030#pullrequestreview-195273560",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6628875b-14b5-4462-b5d2-17e0d74967ea",
        "parentId" : null,
        "authorId" : "5c95ce24-8a36-4f10-b46c-b30203fba415",
        "body" : "Would be clearer to say we are automatically converting to bool.  \"evaluating as a bare variable\" didn't make sense to me and makes it sound like `when: enable_my_feature` is improper usage.  (My roles require the caller to pass bool's as such, not as strings.)",
        "createdAt" : "2019-01-22T22:52:04Z",
        "updatedAt" : "2019-01-24T00:57:29Z",
        "lastEditedBy" : "5c95ce24-8a36-4f10-b46c-b30203fba415",
        "tags" : [
        ]
      },
      {
        "id" : "eb97fc7d-e908-49e7-89c8-0919d8c06b67",
        "parentId" : "6628875b-14b5-4462-b5d2-17e0d74967ea",
        "authorId" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "body" : "but we are not automatically converting to a bool in this case, we are using the variable in 'python bool context' .. which might make it behave as if converting,  vs 'jinja2 if expression' which has slightly diff rules.",
        "createdAt" : "2019-01-22T22:56:39Z",
        "updatedAt" : "2019-01-24T00:57:29Z",
        "lastEditedBy" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "tags" : [
        ]
      }
    ],
    "commit" : "f12c617983102c94b95bc2e5cd68a679d3b7ad1b",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +117,121 @@        if C.CONDITINAL_BARE_VARS:\n            if conditional in all_vars and VALID_VAR_REGEX.match(conditional):\n                display.deprecated('evaluating %s as a bare variable, this behaviour will go away and you might need to add |bool'\n                                   ' to the expression in the future. Also see CONDITIONAL_BARE_VARS configuration toggle.' % conditional, \"2.12\")\n                conditional = all_vars[conditional]"
  },
  {
    "id" : "bfc1d0b8-afe7-4dc8-aae9-ec2bc6629f87",
    "prId" : 75202,
    "prUrl" : "https://github.com/ansible/ansible/pull/75202#pullrequestreview-702282013",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4e4b2136-4f55-4096-bf6c-101278306174",
        "parentId" : null,
        "authorId" : "380aef6a-3fbb-41ad-819b-bada96e05807",
        "body" : "Can you add a test to cover this case?",
        "createdAt" : "2021-07-07T18:48:01Z",
        "updatedAt" : "2021-07-07T18:48:01Z",
        "lastEditedBy" : "380aef6a-3fbb-41ad-819b-bada96e05807",
        "tags" : [
        ]
      },
      {
        "id" : "c9a256aa-ff79-4f91-9739-2377b0ee2993",
        "parentId" : "4e4b2136-4f55-4096-bf6c-101278306174",
        "authorId" : "94ae5814-8889-4328-9b58-745772997928",
        "body" : "Unit test added.",
        "createdAt" : "2021-07-08T08:32:29Z",
        "updatedAt" : "2021-07-08T08:32:29Z",
        "lastEditedBy" : "94ae5814-8889-4328-9b58-745772997928",
        "tags" : [
        ]
      },
      {
        "id" : "eb0a79dc-81c4-4c70-80e2-52c817f6768a",
        "parentId" : "4e4b2136-4f55-4096-bf6c-101278306174",
        "authorId" : "94ae5814-8889-4328-9b58-745772997928",
        "body" : "I am not sure why it fails. It works on my machine! (tm) :-)\r\n\r\nThese two passes (3.8, 3.9, 3.10):\r\n`ansible-test units --docker --python 3.10 test/units/template/test_native_concat.py`\r\n`ansible-test units --docker --python 3.10 test/units/template/`\r\n\r\nThis, as run in CI, fails (3.8, 3.9, 3.10):\r\n`ansible-test units --docker --python 3.10 --changed`\r\n\r\nAny suggestions?",
        "createdAt" : "2021-07-08T16:05:39Z",
        "updatedAt" : "2021-07-08T16:05:40Z",
        "lastEditedBy" : "94ae5814-8889-4328-9b58-745772997928",
        "tags" : [
        ]
      },
      {
        "id" : "6086f208-7156-40fe-bb5a-fc2242f82523",
        "parentId" : "4e4b2136-4f55-4096-bf6c-101278306174",
        "authorId" : "4b69a0b5-ac6f-45e9-9507-dd1385182f29",
        "body" : "I'm guessing that `ansible.template` has been previously imported with `DEFAULT_JINJA2_NATIVE` not enabled.\r\n\r\nI've had to jump through hoops before with forcing re-evaluation of imports in units.  I don't know if others think this is acceptable:\r\n\r\n```python\r\ndef test_cond_eval(monkeypatch):\r\n    monkeypatch.delitem(sys.modules, 'ansible.template')\r\n    monkeypatch.setattr(C, 'DEFAULT_JINJA2_NATIVE', True)\r\n    mod = importlib.import_module('ansible.template')\r\n    Templar = mod.Templar\r\n    AnsibleNativeEnvironment = mod.AnsibleNativeEnvironment\r\n\r\n    # Test code here\r\n```",
        "createdAt" : "2021-07-08T16:17:34Z",
        "updatedAt" : "2021-07-08T16:17:43Z",
        "lastEditedBy" : "4b69a0b5-ac6f-45e9-9507-dd1385182f29",
        "tags" : [
        ]
      },
      {
        "id" : "dd4c1ad9-6d88-4e8c-a4f4-b5a8bcf8fef5",
        "parentId" : "4e4b2136-4f55-4096-bf6c-101278306174",
        "authorId" : "380aef6a-3fbb-41ad-819b-bada96e05807",
        "body" : "Since the unit tests depend on setting `DEFAULT_JINJA2_NATIVE` before certain imports, the test will need to use a fixture to remove existing imports (if any) from `sys.modules`, set `DEFAULT_JINJA2_NATIVE` and then perform the imports.\r\n\r\nThis is needed since other tests may have already performed those imports. To see the failure from CI, try running all the unit tests -- or at least include one that uses the same imports and runs before the failing test.",
        "createdAt" : "2021-07-08T16:18:36Z",
        "updatedAt" : "2021-07-08T16:18:36Z",
        "lastEditedBy" : "380aef6a-3fbb-41ad-819b-bada96e05807",
        "tags" : [
        ]
      },
      {
        "id" : "299387aa-7609-459c-8c6b-5f6a3b3a8e07",
        "parentId" : "4e4b2136-4f55-4096-bf6c-101278306174",
        "authorId" : "4b69a0b5-ac6f-45e9-9507-dd1385182f29",
        "body" : "BTW, I did test that, and it seems to pass all units.",
        "createdAt" : "2021-07-08T16:19:35Z",
        "updatedAt" : "2021-07-08T16:19:35Z",
        "lastEditedBy" : "4b69a0b5-ac6f-45e9-9507-dd1385182f29",
        "tags" : [
        ]
      },
      {
        "id" : "4285a004-bf5d-4d11-a411-aada5dd96b96",
        "parentId" : "4e4b2136-4f55-4096-bf6c-101278306174",
        "authorId" : "94ae5814-8889-4328-9b58-745772997928",
        "body" : "> I'm guessing that ansible.template has been previously imported with DEFAULT_JINJA2_NATIVE not enabled.\r\n\r\nThat was my guess as well but the fact that `ansible-test units --docker --python 3.10 test/units/template/` worked confused me, but it seems like `test_native_concat.py` just runs first from that directory.\r\n\r\nThanks, I'll play with this.",
        "createdAt" : "2021-07-08T16:37:27Z",
        "updatedAt" : "2021-07-08T16:37:27Z",
        "lastEditedBy" : "94ae5814-8889-4328-9b58-745772997928",
        "tags" : [
        ]
      }
    ],
    "commit" : "540ee2a9ec0e4b81c96d352bd56ae79fbf771ffc",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +190,194 @@            #      as opposed to Python 3.9 and lower where the same would result in IndentationError and\n            #      string \" True \" would be returned by Templar.\n            val = to_text(templar.template(presented, disable_lookups=disable_lookups)).strip()\n            if val == \"True\":\n                return True"
  }
]