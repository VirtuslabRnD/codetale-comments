[
  {
    "id" : "5507e319-bbb6-44e1-abae-97a14d786f63",
    "prId" : 52343,
    "prUrl" : "https://github.com/ansible/ansible/pull/52343#pullrequestreview-216165178",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "46547676-63fd-4c1f-b129-71a7b3d996ee",
        "parentId" : null,
        "authorId" : "99c05de4-ff96-4467-ad1a-db1784a17b5e",
        "body" : "nit pick `and` -> `an`",
        "createdAt" : "2019-03-19T13:49:47Z",
        "updatedAt" : "2019-03-19T13:50:33Z",
        "lastEditedBy" : "99c05de4-ff96-4467-ad1a-db1784a17b5e",
        "tags" : [
        ]
      }
    ],
    "commit" : "75133c4c5245648ba1d30e07174b4f23a7f262cf",
    "line" : 53,
    "diffHunk" : "@@ -1,1 +88,92 @@        \"\"\"\n        Fetch admin vserver for the given cluster\n        Create and Autosupport log event with the given module name\n        :param event_name: Name of the event log\n        :return: None"
  },
  {
    "id" : "d6792cc8-1488-43d4-9dcf-cbe842a64882",
    "prId" : 60471,
    "prUrl" : "https://github.com/ansible/ansible/pull/60471#pullrequestreview-278677178",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "de5c9a45-fdd4-4db4-8025-375c3a713ebb",
        "parentId" : null,
        "authorId" : "6915b346-f639-4f54-a51b-73b1655c7ac8",
        "body" : "I would prefer to have smaller try blocks.  EG\r\n```\r\ntry:\r\n     import xml.parsers.expat\r\nexcept xml.parsers.expat.ExpatError as errcode:\r\n     self.result_dict['status'] = \"XML parser: \" + str(errcode)\r\n     return self.result_dict\r\n```\r\n\r\nSame thing with:\r\n```\r\n   try:\r\n         xml_parser.Parse(xml_str)\r\n```\r\n\r\nbut since you're checking specific exceptions, I don't think it matters too much.",
        "createdAt" : "2019-08-21T16:16:41Z",
        "updatedAt" : "2019-08-23T06:53:24Z",
        "lastEditedBy" : "6915b346-f639-4f54-a51b-73b1655c7ac8",
        "tags" : [
        ]
      },
      {
        "id" : "469753ea-45c3-42ea-b3d5-eafce839824c",
        "parentId" : "de5c9a45-fdd4-4db4-8025-375c3a713ebb",
        "authorId" : "209cfe40-84a1-46d2-9bfd-f2f8142989ba",
        "body" : "What about something like this?\r\n```python\r\n    def parse_xml_to_dict(self, xmldata):\r\n        '''Parse raw XML from system-cli and create an Ansible parseable dictonary'''\r\n        xml_import_ok = True\r\n        xml_parse_ok = True\r\n\r\n        try:\r\n            import xml.parsers.expat\r\n        except ImportError:\r\n            self.result_dict['status'] = \"XML parsing failed. Cannot import xml.parsers.expat!\"\r\n            self.result_dict['stdout'] = str(xmldata)\r\n            xml_import_ok = False\r\n\r\n        if xml_import_ok:\r\n            xml_str = xmldata.decode('utf-8').replace('\\n', '---')\r\n            xml_parser = xml.parsers.expat.ParserCreate()\r\n            xml_parser.StartElementHandler = self._start_element\r\n            xml_parser.CharacterDataHandler = self._char_data\r\n            xml_parser.EndElementHandler = self._end_element\r\n\r\n            try:\r\n                xml_parser.Parse(xml_str)\r\n            except xml.parsers.expat.ExpatError as errcode:\r\n                self.result_dict['status'] = \"XML parsing failed: \" + str(errcode)\r\n                self.result_dict['stdout'] = str(xmldata)\r\n                xml_parse_ok = False\r\n\r\n            if xml_parse_ok:\r\n                self.result_dict['status'] = self.result_dict['xml_dict']['results']['attrs']['status']\r\n                stdout_string = self._format_escaped_data(self.result_dict['xml_dict']['cli-output']['data'])\r\n                self.result_dict['stdout'] = stdout_string\r\n                for line in stdout_string.split('\\n'):\r\n                    stripped_line = line.strip()\r\n                    if len(stripped_line) > 1:\r\n                        self.result_dict['stdout_lines'].append(stripped_line)\r\n                self.result_dict['xml_dict']['cli-output']['data'] = stdout_string\r\n                self.result_dict['result_value'] = int(str(self.result_dict['xml_dict']['cli-result-value']['data']).replace(\"'\", \"\"))\r\n\r\n        return self.result_dict\r\n```",
        "createdAt" : "2019-08-22T06:37:05Z",
        "updatedAt" : "2019-08-23T06:53:24Z",
        "lastEditedBy" : "209cfe40-84a1-46d2-9bfd-f2f8142989ba",
        "tags" : [
        ]
      },
      {
        "id" : "4e68567d-fd9e-4019-8694-44b5dd03c25b",
        "parentId" : "de5c9a45-fdd4-4db4-8025-375c3a713ebb",
        "authorId" : "6915b346-f639-4f54-a51b-73b1655c7ac8",
        "body" : "good for me",
        "createdAt" : "2019-08-22T20:46:04Z",
        "updatedAt" : "2019-08-23T06:53:24Z",
        "lastEditedBy" : "6915b346-f639-4f54-a51b-73b1655c7ac8",
        "tags" : [
        ]
      }
    ],
    "commit" : "d6a4ce096e28e8cc45c395cae1c2f71be0f65bb3",
    "line" : 97,
    "diffHunk" : "@@ -1,1 +155,159 @@        xml_parse_ok = True\n\n        try:\n            import xml.parsers.expat\n        except ImportError:"
  }
]