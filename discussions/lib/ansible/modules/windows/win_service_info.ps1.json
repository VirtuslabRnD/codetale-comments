[
  {
    "id" : "bac8c39a-dccc-4706-86c5-57dd646e2c70",
    "prId" : 67367,
    "prUrl" : "https://github.com/ansible/ansible/pull/67367#pullrequestreview-357919864",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1ef7306c-21a5-4780-b3bc-3c082c44dd2d",
        "parentId" : null,
        "authorId" : "311820dd-fcb9-46df-a201-9c0e7d6fac58",
        "body" : "Hrm, all this switch fun seems ripe for a PascalToSnakeCase conversion function (and maybe vice versa for win_service)- I only see a couple of exceptional names...",
        "createdAt" : "2020-02-13T02:07:36Z",
        "updatedAt" : "2020-02-13T04:16:34Z",
        "lastEditedBy" : "311820dd-fcb9-46df-a201-9c0e7d6fac58",
        "tags" : [
        ]
      },
      {
        "id" : "e4b84271-3c9e-4536-a340-6e45da3c06b5",
        "parentId" : "1ef7306c-21a5-4780-b3bc-3c082c44dd2d",
        "authorId" : "7c547162-2334-4e33-a627-e146840da9ec",
        "body" : "Yea we do have a module util that does the camel case which I should probably use instead. There still needs to be some manual mapping for enums values that don't match up with the `win_service` options which is what I was trying to reflect.",
        "createdAt" : "2020-02-13T02:24:24Z",
        "updatedAt" : "2020-02-13T04:16:34Z",
        "lastEditedBy" : "7c547162-2334-4e33-a627-e146840da9ec",
        "tags" : [
        ]
      },
      {
        "id" : "cd06c4e5-d527-4818-ae1d-30936d4b73fd",
        "parentId" : "1ef7306c-21a5-4780-b3bc-3c082c44dd2d",
        "authorId" : "7c547162-2334-4e33-a627-e146840da9ec",
        "body" : "Looks like they are just camelCase and not PascalCase. I'll look into adding that functionality in the future.",
        "createdAt" : "2020-02-13T02:31:09Z",
        "updatedAt" : "2020-02-13T04:16:34Z",
        "lastEditedBy" : "7c547162-2334-4e33-a627-e146840da9ec",
        "tags" : [
        ]
      }
    ],
    "commit" : "5c24504bb944700094ac3298e4c0c63c4f74eb4c",
    "line" : 39,
    "diffHunk" : "@@ -1,1 +37,41 @@    $controlsAccepted = @($service.ControlsAccepted.ToString() -split ',' | ForEach-Object -Process {\n        switch ($_.Trim()) {\n            Stop { 'stop' }\n            PauseContinue { 'pause_continue' }\n            Shutdown { 'shutdown' }"
  }
]