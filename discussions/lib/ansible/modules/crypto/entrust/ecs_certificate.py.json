[
  {
    "id" : "252dd64f-472d-4db6-a189-dcbc65405d88",
    "prId" : 60883,
    "prUrl" : "https://github.com/ansible/ansible/pull/60883#pullrequestreview-278092086",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b722bec0-e077-46d0-b73e-f14dd9322f6a",
        "parentId" : null,
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "Maybe mention in the description that these choices mean plus one year, plus two years, ... (if they actually do :) )",
        "createdAt" : "2019-08-21T22:02:17Z",
        "updatedAt" : "2019-08-28T20:12:44Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      }
    ],
    "commit" : "00ce9231668477f7dad0ca49619de11c67762065",
    "line" : 333,
    "diffHunk" : "@@ -1,1 +331,335 @@            - Only one of I(cert_expiry) or I(cert_lifetime) may be specified.\n        type: str\n        choices: [ P1Y, P2Y, P3Y ]\nseealso:\n    - module: openssl_privatekey"
  },
  {
    "id" : "16b774e0-f282-44e3-a9e2-8af795deb6db",
    "prId" : 60883,
    "prUrl" : "https://github.com/ansible/ansible/pull/60883#pullrequestreview-278457361",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "15506078-bf15-47df-8ab2-351240807ee2",
        "parentId" : null,
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "You defined `custom_fields` as a list of dictionaries (both in argspec and docs).",
        "createdAt" : "2019-08-21T22:04:12Z",
        "updatedAt" : "2019-08-28T20:12:44Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      },
      {
        "id" : "f3a831ab-ee6f-44f7-9999-9899464a8eed",
        "parentId" : "15506078-bf15-47df-8ab2-351240807ee2",
        "authorId" : "cea850a3-e209-4f7b-bc8b-b377bbf3a19d",
        "body" : "Yeah my integration tests exploded on that one. It was actually hard finding good examples of this sort of structure, a ton of existing use cases do really complicated things with suboptions/options being lists of dicts or dicts of dicts.\r\n\r\nChanging to type:dict with suboptions.",
        "createdAt" : "2019-08-22T14:24:24Z",
        "updatedAt" : "2019-08-28T20:12:44Z",
        "lastEditedBy" : "cea850a3-e209-4f7b-bc8b-b377bbf3a19d",
        "tags" : [
        ]
      }
    ],
    "commit" : "00ce9231668477f7dad0ca49619de11c67762065",
    "line" : 441,
    "diffHunk" : "@@ -1,1 +439,443 @@      - itsupport@testcertificates.com\n      - jsmith@ansible.com\n    custom_fields:\n      text1: Admin\n      text2: Invoice 25"
  },
  {
    "id" : "cb999714-0245-4449-9c95-2b5dec6e2a92",
    "prId" : 60883,
    "prUrl" : "https://github.com/ansible/ansible/pull/60883#pullrequestreview-280319795",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c9d38f9c-f246-4e5b-8297-a8fae382762e",
        "parentId" : null,
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "Maybe you want to validate `module.params['cert_expiry']` before handing it to the API; then user errors will be caught a lot earlier.",
        "createdAt" : "2019-08-26T19:23:50Z",
        "updatedAt" : "2019-08-28T20:12:44Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      },
      {
        "id" : "918b5919-f8bd-4b51-9c7d-e696c60272bb",
        "parentId" : "c9d38f9c-f246-4e5b-8297-a8fae382762e",
        "authorId" : "cea850a3-e209-4f7b-bc8b-b377bbf3a19d",
        "body" : "Python support for parsing the full range of acceptable ways to specify date-time wasn't added until 3.7 https://bugs.python.org/issue15873 - my thought was that I didn't want to limit the value to stricter than what our API supports, since some customers may be migrating from homegrown API implementations.",
        "createdAt" : "2019-08-26T21:43:50Z",
        "updatedAt" : "2019-08-28T20:12:44Z",
        "lastEditedBy" : "cea850a3-e209-4f7b-bc8b-b377bbf3a19d",
        "tags" : [
        ]
      },
      {
        "id" : "3026f477-18ba-4325-8ad2-27496ecebfc9",
        "parentId" : "c9d38f9c-f246-4e5b-8297-a8fae382762e",
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "I thought more about a regex which prevents the worst mistakes. But then, I don't know RFC 3339 well enough to be of help here :)",
        "createdAt" : "2019-08-27T04:39:32Z",
        "updatedAt" : "2019-08-28T20:12:44Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      },
      {
        "id" : "bd7c73fc-41e7-46d1-8646-3df70c4de225",
        "parentId" : "c9d38f9c-f246-4e5b-8297-a8fae382762e",
        "authorId" : "cea850a3-e209-4f7b-bc8b-b377bbf3a19d",
        "body" : "Good idea, I'll add an RFC pattern match. It would be a pain to actually convert the value, but a regexp will give a basic sanity check.",
        "createdAt" : "2019-08-27T16:26:41Z",
        "updatedAt" : "2019-08-28T20:12:44Z",
        "lastEditedBy" : "cea850a3-e209-4f7b-bc8b-b377bbf3a19d",
        "tags" : [
        ]
      }
    ],
    "commit" : "00ce9231668477f7dad0ca49619de11c67762065",
    "line" : 668,
    "diffHunk" : "@@ -1,1 +666,670 @@            body['certLifetime'] = module.params['cert_lifetime']\n        elif module.params['cert_expiry']:\n            body['certExpiryDate'] = module.params['cert_expiry']\n        # If neither cerTLifetime or certExpiryDate was specified and the request type is new, default to 365 days\n        elif self.request_type != 'reissue':"
  }
]