[
  {
    "id" : "40f48fd0-8c5e-4988-9e0a-801e7f849f60",
    "prId" : 48991,
    "prUrl" : "https://github.com/ansible/ansible/pull/48991#pullrequestreview-181184419",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b785318c-657e-4331-8b06-8677336977be",
        "parentId" : null,
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "Why not have a large `try: except` block around all the operations which catches `ValueError`? That would improve readability alot.",
        "createdAt" : "2018-12-01T10:29:33Z",
        "updatedAt" : "2019-01-23T11:59:47Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      },
      {
        "id" : "0a622de5-aa5f-4276-b5b7-ad3cea4db0d8",
        "parentId" : "b785318c-657e-4331-8b06-8677336977be",
        "authorId" : "e38fe63b-fe72-4eaf-9d3c-adc89908a773",
        "body" : "It is a good practice to have `try: except` block covering only the critical part of the code. This minimizes risk of catching unwanted exceptions at the cost of slightly lower readibility.",
        "createdAt" : "2018-12-04T10:28:00Z",
        "updatedAt" : "2019-01-23T11:59:47Z",
        "lastEditedBy" : "e38fe63b-fe72-4eaf-9d3c-adc89908a773",
        "tags" : [
        ]
      }
    ],
    "commit" : "fb9038d1ab326ddde422a0b3635577696cc13933",
    "line" : 441,
    "diffHunk" : "@@ -1,1 +439,443 @@            crypt.run_luks_create(module.params['device'],\n                                  module.params['keyfile'])\n        except ValueError as e:\n            module.fail_json(msg=\"luks_device error: %s\" % e)\n        result['changed'] = True"
  },
  {
    "id" : "eed0769d-3ae5-41b8-b869-6d7403cafa71",
    "prId" : 48991,
    "prUrl" : "https://github.com/ansible/ansible/pull/48991#pullrequestreview-190040174",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5ab7175a-8731-4ee6-91d9-8bcdfb0f318b",
        "parentId" : null,
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "Why do you have no `try/except` block around these calls?",
        "createdAt" : "2018-12-05T19:08:45Z",
        "updatedAt" : "2019-01-23T11:59:47Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      },
      {
        "id" : "349b703b-30be-4dd8-92ef-638b58ae0efd",
        "parentId" : "5ab7175a-8731-4ee6-91d9-8bcdfb0f318b",
        "authorId" : "e38fe63b-fe72-4eaf-9d3c-adc89908a773",
        "body" : "`conditions.luks_close` does not raise any exception to be caught.",
        "createdAt" : "2019-01-07T13:34:20Z",
        "updatedAt" : "2019-01-23T11:59:47Z",
        "lastEditedBy" : "e38fe63b-fe72-4eaf-9d3c-adc89908a773",
        "tags" : [
        ]
      },
      {
        "id" : "2a6b8a98-5724-4ec8-945e-76309d97dedc",
        "parentId" : "5ab7175a-8731-4ee6-91d9-8bcdfb0f318b",
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "The line below calls `get_container_name_by_device`, which can raise `ValueError` according to its documentation.",
        "createdAt" : "2019-01-07T23:36:11Z",
        "updatedAt" : "2019-01-23T11:59:47Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      }
    ],
    "commit" : "fb9038d1ab326ddde422a0b3635577696cc13933",
    "line" : 469,
    "diffHunk" : "@@ -1,1 +467,471 @@    # luks close\n    if conditions.luks_close():\n        if module.params['device'] is not None:\n            try:\n                name = crypt.get_container_name_by_device("
  },
  {
    "id" : "6b4318a9-90a1-44b0-872a-1158cd2a1a36",
    "prId" : 48991,
    "prUrl" : "https://github.com/ansible/ansible/pull/48991#pullrequestreview-192826944",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e7801d82-15e6-4887-bced-9b0ca46ff4b6",
        "parentId" : null,
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "Closing does not need `keyfile`. (Tested it with the module, works fine without `keyfile` option.)",
        "createdAt" : "2019-01-12T09:31:06Z",
        "updatedAt" : "2019-01-23T11:59:47Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      },
      {
        "id" : "99c61697-88ba-4137-8230-bac18e675c04",
        "parentId" : "e7801d82-15e6-4887-bced-9b0ca46ff4b6",
        "authorId" : "e38fe63b-fe72-4eaf-9d3c-adc89908a773",
        "body" : "That is technically true. However `closed` can now also create a LUKS container if it does not exist. And container creation requires `device` and `keyfile`. In case the user is absolutely sure that container is already present only `device` or even just `name` will do. Next sentence in the doc explains that.",
        "createdAt" : "2019-01-15T10:19:15Z",
        "updatedAt" : "2019-01-23T11:59:47Z",
        "lastEditedBy" : "e38fe63b-fe72-4eaf-9d3c-adc89908a773",
        "tags" : [
        ]
      },
      {
        "id" : "7e8b6a54-bb19-453d-8e5e-3b1545390112",
        "parentId" : "e7801d82-15e6-4887-bced-9b0ca46ff4b6",
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "Ah, I misread that. Totally makes sense :)",
        "createdAt" : "2019-01-15T19:36:39Z",
        "updatedAt" : "2019-01-23T11:59:47Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      }
    ],
    "commit" : "fb9038d1ab326ddde422a0b3635577696cc13933",
    "line" : 48,
    "diffHunk" : "@@ -1,1 +46,50 @@            - \"I(closed) will lock the LUKS container. However if the container\n              does not exist it will be created.\n              Requires I(device) and I(keyfile) options to be provided. If\n              container does already exist I(device) or I(name) will suffice.\"\n        default: present"
  },
  {
    "id" : "87a7b170-843d-49e8-965e-16a2b15bf690",
    "prId" : 48991,
    "prUrl" : "https://github.com/ansible/ansible/pull/48991#pullrequestreview-202135443",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fd07fb85-10ec-4c36-8f85-f87bebff9bc4",
        "parentId" : null,
        "authorId" : "b63543f6-4b23-4447-b37a-ec3b605b0663",
        "body" : "I don't know if I like this approach. I can't think of a time when this would ever be desired behaviour, and not a mistake - even so, I feel like we should require a force flag to remove the *only* key on a container, rendering it useless.",
        "createdAt" : "2019-02-11T13:57:09Z",
        "updatedAt" : "2019-02-11T14:04:33Z",
        "lastEditedBy" : "b63543f6-4b23-4447-b37a-ec3b605b0663",
        "tags" : [
        ]
      },
      {
        "id" : "5fe84378-7ab7-4771-bf4c-022987f4cd9e",
        "parentId" : "fd07fb85-10ec-4c36-8f85-f87bebff9bc4",
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "Good question :) If you have a backup of the real key, you can still access the volume afterwards (though only by working around LUKS); even though this is a very exotic use-case, I wouldn't disallow this. Thus having a flag (with default value \"prevent this\") would definitely be helpful. Maybe something called \"allow_to_remove_last_key\" with default value `false`?",
        "createdAt" : "2019-02-11T14:11:43Z",
        "updatedAt" : "2019-02-11T14:11:43Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      },
      {
        "id" : "687a05e3-a750-4abf-87db-0794557a99fa",
        "parentId" : "fd07fb85-10ec-4c36-8f85-f87bebff9bc4",
        "authorId" : "d7d8721c-7ad0-4834-9a3d-b53ca8656789",
        "body" : "something like `allow_to_remove_last_key` (default false) sounds good.",
        "createdAt" : "2019-02-11T14:22:29Z",
        "updatedAt" : "2019-02-11T14:22:30Z",
        "lastEditedBy" : "d7d8721c-7ad0-4834-9a3d-b53ca8656789",
        "tags" : [
        ]
      },
      {
        "id" : "5ac486f5-0096-4df8-b2d3-a8515f12b57b",
        "parentId" : "fd07fb85-10ec-4c36-8f85-f87bebff9bc4",
        "authorId" : "b63543f6-4b23-4447-b37a-ec3b605b0663",
        "body" : "Yep - I'm not against the _notion_ that it be possible, it just shouldn't be possible _accidentally_. Most LUKS containers I've worked with only have one key on them, ever.",
        "createdAt" : "2019-02-11T14:25:11Z",
        "updatedAt" : "2019-02-11T14:25:11Z",
        "lastEditedBy" : "b63543f6-4b23-4447-b37a-ec3b605b0663",
        "tags" : [
        ]
      },
      {
        "id" : "713cf0a5-9b72-4ab4-bee8-9f13295471aa",
        "parentId" : "fd07fb85-10ec-4c36-8f85-f87bebff9bc4",
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "I can add that in a subsequent PR, so we don't have to delay merging because of this :)",
        "createdAt" : "2019-02-11T14:25:36Z",
        "updatedAt" : "2019-02-11T14:25:36Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      },
      {
        "id" : "a11d058a-e250-4338-a378-89c57f07b521",
        "parentId" : "fd07fb85-10ec-4c36-8f85-f87bebff9bc4",
        "authorId" : "b63543f6-4b23-4447-b37a-ec3b605b0663",
        "body" : "Sounds fine to me. I don't think I can say shipit yet, but if this gets wrapped up in another PR the rest looks fine to me.",
        "createdAt" : "2019-02-11T14:33:08Z",
        "updatedAt" : "2019-02-11T14:33:08Z",
        "lastEditedBy" : "b63543f6-4b23-4447-b37a-ec3b605b0663",
        "tags" : [
        ]
      }
    ],
    "commit" : "fb9038d1ab326ddde422a0b3635577696cc13933",
    "line" : 83,
    "diffHunk" : "@@ -1,1 +81,85 @@            - \"BEWARE that it is possible to remove even the last key from the\n              container. Data in there will be irreversibly lost\n              without a warning.\"\n            - \"BEWARE that working with keyfiles in plaintext is dangerous.\n              Make sure that they are protected.\""
  },
  {
    "id" : "9c48c19f-3399-422d-a872-03fe495a127a",
    "prId" : 54477,
    "prUrl" : "https://github.com/ansible/ansible/pull/54477#pullrequestreview-224245934",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5e212067-821a-420d-853b-b5e1ddfc1946",
        "parentId" : null,
        "authorId" : "d2d80496-0795-4618-ba72-36ae6c5b52ef",
        "body" : "What happens if the device already exists?\r\nSeems we get success but when we'll run it not in check mode it will fail.\r\nMaybe we'd better add some checks, hadn't we?\r\nFor example, by the following, etc\r\n```\r\n    def is_luks(self, device):\r\n        ''' check if the LUKS device does exist\r\n        '''\r\n        result = self._run_command([self._cryptsetup_bin, 'isLuks', device])\r\n        return result[RETURN_CODE] == 0\r\n```\r\nIf the device doesn't exist we can set result['changed'] = True, else (if exists) = False",
        "createdAt" : "2019-04-09T07:18:02Z",
        "updatedAt" : "2019-04-09T07:58:29Z",
        "lastEditedBy" : "d2d80496-0795-4618-ba72-36ae6c5b52ef",
        "tags" : [
        ]
      },
      {
        "id" : "10d50af4-3ac2-4e75-9454-8e45f36fcc71",
        "parentId" : "5e212067-821a-420d-853b-b5e1ddfc1946",
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "That the device exists (if it is specified / required for the operation) is a requirement for the module. I guess it should be checked before anything else is done (and the module should fail if it doesn't).",
        "createdAt" : "2019-04-09T07:38:03Z",
        "updatedAt" : "2019-04-09T07:58:29Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      },
      {
        "id" : "43e9d201-3ed4-4ba4-a3e4-df0aa88c6c87",
        "parentId" : "5e212067-821a-420d-853b-b5e1ddfc1946",
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "Hmm, \"LUKS device does exist\" is a strange way to say \"device is a LUKS device\". When I say \"device exists\", I mean that `device` is actually a device. That function docstring should really be reformulated.",
        "createdAt" : "2019-04-09T07:40:07Z",
        "updatedAt" : "2019-04-09T07:58:29Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      },
      {
        "id" : "dbcb1286-b397-437a-8878-9e9fb725ea64",
        "parentId" : "5e212067-821a-420d-853b-b5e1ddfc1946",
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "I've fixed the docstring and added a check whether `device` actually points to a device.",
        "createdAt" : "2019-04-09T08:00:14Z",
        "updatedAt" : "2019-04-09T08:00:14Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      }
    ],
    "commit" : "581ec1f677645f627a886b6ec6183f3172ba0e24",
    "line" : 66,
    "diffHunk" : "@@ -1,1 +485,489 @@            except ValueError as e:\n                module.fail_json(msg=\"luks_device error: %s\" % e)\n        result['changed'] = True\n        if module.check_mode:\n            module.exit_json(**result)"
  },
  {
    "id" : "b85ca51a-439e-4f03-8e0d-988478ad19b3",
    "prId" : 54477,
    "prUrl" : "https://github.com/ansible/ansible/pull/54477#pullrequestreview-224228306",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a836db96-dd39-4c8a-a93d-e989f39bd10f",
        "parentId" : null,
        "authorId" : "d2d80496-0795-4618-ba72-36ae6c5b52ef",
        "body" : "The same as in my comment above (about the checks)",
        "createdAt" : "2019-04-09T07:19:50Z",
        "updatedAt" : "2019-04-09T07:58:29Z",
        "lastEditedBy" : "d2d80496-0795-4618-ba72-36ae6c5b52ef",
        "tags" : [
        ]
      }
    ],
    "commit" : "581ec1f677645f627a886b6ec6183f3172ba0e24",
    "line" : 82,
    "diffHunk" : "@@ -1,1 +502,506 @@            except ValueError as e:\n                module.fail_json(msg=\"luks_device error: %s\" % e)\n        if not module.check_mode:\n            try:\n                crypt.run_luks_open(module.params['device'],"
  },
  {
    "id" : "9674d960-9610-4355-8d8d-36763f681031",
    "prId" : 54477,
    "prUrl" : "https://github.com/ansible/ansible/pull/54477#pullrequestreview-224246300",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "79cf9a46-632b-47ae-a071-8ba34d172705",
        "parentId" : null,
        "authorId" : "d2d80496-0795-4618-ba72-36ae6c5b52ef",
        "body" : "```suggestion\r\n        if not exists:\r\n            result['changed'] = True\r\n        else:\r\n            result['changed'] = False\r\n```",
        "createdAt" : "2019-04-09T07:21:56Z",
        "updatedAt" : "2019-04-09T07:58:29Z",
        "lastEditedBy" : "d2d80496-0795-4618-ba72-36ae6c5b52ef",
        "tags" : [
        ]
      },
      {
        "id" : "3b27a7fe-0e00-4791-9398-f3b06cc78ad6",
        "parentId" : "79cf9a46-632b-47ae-a071-8ba34d172705",
        "authorId" : "d2d80496-0795-4618-ba72-36ae6c5b52ef",
        "body" : "IMO it might look like this",
        "createdAt" : "2019-04-09T07:22:31Z",
        "updatedAt" : "2019-04-09T07:58:29Z",
        "lastEditedBy" : "d2d80496-0795-4618-ba72-36ae6c5b52ef",
        "tags" : [
        ]
      },
      {
        "id" : "dd545b22-33a3-4e64-aadc-71b3af2d794b",
        "parentId" : "79cf9a46-632b-47ae-a071-8ba34d172705",
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "This code is only executed if `module.params['device']` is not a LUKS container, so `result['changed']` has to be set to `True`.",
        "createdAt" : "2019-04-09T08:00:56Z",
        "updatedAt" : "2019-04-09T08:00:56Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      }
    ],
    "commit" : "581ec1f677645f627a886b6ec6183f3172ba0e24",
    "line" : 66,
    "diffHunk" : "@@ -1,1 +485,489 @@            except ValueError as e:\n                module.fail_json(msg=\"luks_device error: %s\" % e)\n        result['changed'] = True\n        if module.check_mode:\n            module.exit_json(**result)"
  },
  {
    "id" : "01a196a6-7f50-491a-8059-c3005bb89986",
    "prId" : 61522,
    "prUrl" : "https://github.com/ansible/ansible/pull/61522#pullrequestreview-281434868",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1f231440-060f-4056-8ac0-d4b4e9f6c801",
        "parentId" : null,
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "How about putting the command into a list, and extending that list if `keysize is not None`, and calling `self._run_command()` later?",
        "createdAt" : "2019-08-29T12:53:40Z",
        "updatedAt" : "2019-08-31T16:25:37Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      }
    ],
    "commit" : "23ac57f2538da26cb734789273d2dfa71afed4b7",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +258,262 @@        # create a new luks container; use batch mode to auto confirm\n        options = []\n        if keysize is not None:\n            options.append('--key-size=' + str(keysize))\n        args = [self._cryptsetup_bin, 'luksFormat']"
  },
  {
    "id" : "e842d469-3f64-470e-b91c-80b8cc0d0a36",
    "prId" : 61603,
    "prUrl" : "https://github.com/ansible/ansible/pull/61603#pullrequestreview-282314230",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1e438ee5-9f33-4c2d-ad38-32dc201a1f50",
        "parentId" : null,
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "```suggestion\r\n              label on later usages.\"\r\n            - \"Will only be used on container creation, or when I(device) is not specified.\"\r\n```",
        "createdAt" : "2019-08-31T16:02:56Z",
        "updatedAt" : "2019-09-01T22:03:30Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      },
      {
        "id" : "32eee249-cb95-44ae-8e4c-a64b083499b5",
        "parentId" : "1e438ee5-9f33-4c2d-ad38-32dc201a1f50",
        "authorId" : "cf71f31b-0e1d-42c2-8e48-46992ffe66a3",
        "body" : "Done, thanks!",
        "createdAt" : "2019-08-31T17:35:48Z",
        "updatedAt" : "2019-09-01T22:03:30Z",
        "lastEditedBy" : "cf71f31b-0e1d-42c2-8e48-46992ffe66a3",
        "tags" : [
        ]
      }
    ],
    "commit" : "f4d6e2f7dafef4b2915c80854735bd7affc35427",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +105,109 @@            - \"This option allow the user to create a LUKS2 format container\n              with label support, respectively to identify the container by\n              label on later usages.\"\n            - \"Will only be used on container creation, or when I(device) is\n              not specified.\""
  }
]