[
  {
    "id" : "c7f5fef5-030c-4e66-92a6-a9ff3f43073e",
    "prId" : 27281,
    "prUrl" : "https://github.com/ansible/ansible/pull/27281#pullrequestreview-52387430",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ec411a99-eb68-4ec0-aaa5-68b80bfbae99",
        "parentId" : null,
        "authorId" : "f65394e6-7239-422a-9af5-c3575a283846",
        "body" : "Although to mention that it will `verify()` the privatekey it has been generated with.",
        "createdAt" : "2017-07-26T14:57:26Z",
        "updatedAt" : "2017-07-28T14:41:21Z",
        "lastEditedBy" : "f65394e6-7239-422a-9af5-c3575a283846",
        "tags" : [
        ]
      }
    ],
    "commit" : "05870c2bf9b30e15165f355937daf68e25b3fb96",
    "line" : 49,
    "diffHunk" : "@@ -1,1 +127,131 @@\nnotes:\n    - \"If the certificate signing request already exists it will be checked whether subjectAltName,\n       keyUsage and extendedKeyUsage only contain the requested values and if the request was signed\n       by the given private key\""
  },
  {
    "id" : "d3f93f54-c30a-483f-94dc-1427084d7421",
    "prId" : 27281,
    "prUrl" : "https://github.com/ansible/ansible/pull/27281#pullrequestreview-52826022",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1d267947-81df-4bc8-bccc-67d0dcf8ae2e",
        "parentId" : null,
        "authorId" : "f65394e6-7239-422a-9af5-c3575a283846",
        "body" : "Not sure I understand the `self.privatekey`` here.\r\n\r\nI'd say it belongs circa l. 367 within the `def _check_signature()` method as this is the only place where it is need.",
        "createdAt" : "2017-07-26T15:04:18Z",
        "updatedAt" : "2017-07-28T14:41:21Z",
        "lastEditedBy" : "f65394e6-7239-422a-9af5-c3575a283846",
        "tags" : [
        ]
      },
      {
        "id" : "12771eeb-5a15-4569-9cb2-9426664918b5",
        "parentId" : "1d267947-81df-4bc8-bccc-67d0dcf8ae2e",
        "authorId" : "94172bd7-17ef-4849-afe8-65bc55e1399e",
        "body" : "No it is also needed when signing the certificate request (see L289) and i think it is ugly to open the private key twice. Opening it in __init__ is of course a very bad idea so this is actually the only place where i can be sure that the key gets opened before an existing CSR gets checked or a new one is signed.",
        "createdAt" : "2017-07-26T15:39:00Z",
        "updatedAt" : "2017-07-28T14:41:21Z",
        "lastEditedBy" : "94172bd7-17ef-4849-afe8-65bc55e1399e",
        "tags" : [
        ]
      },
      {
        "id" : "0abba964-d77a-4251-9d56-b3c73acb2ba2",
        "parentId" : "1d267947-81df-4bc8-bccc-67d0dcf8ae2e",
        "authorId" : "f65394e6-7239-422a-9af5-c3575a283846",
        "body" : "Fair engough. Then, if I haven't overlooked anything, there is no need to pass `privatekey` to `_check_signature()` as you can call `csr.verify(self.privatekey)` directly.",
        "createdAt" : "2017-07-27T07:25:23Z",
        "updatedAt" : "2017-07-28T14:41:21Z",
        "lastEditedBy" : "f65394e6-7239-422a-9af5-c3575a283846",
        "tags" : [
        ]
      },
      {
        "id" : "cd86527c-e565-458a-ba15-b83f16182bc0",
        "parentId" : "1d267947-81df-4bc8-bccc-67d0dcf8ae2e",
        "authorId" : "94172bd7-17ef-4849-afe8-65bc55e1399e",
        "body" : "No i can't because `_check_signature` as all the other _check functions is no member function of the class",
        "createdAt" : "2017-07-27T21:28:18Z",
        "updatedAt" : "2017-07-28T14:41:21Z",
        "lastEditedBy" : "94172bd7-17ef-4849-afe8-65bc55e1399e",
        "tags" : [
        ]
      },
      {
        "id" : "d5634de0-1c2d-4a53-becd-07c4441ac3d6",
        "parentId" : "1d267947-81df-4bc8-bccc-67d0dcf8ae2e",
        "authorId" : "94172bd7-17ef-4849-afe8-65bc55e1399e",
        "body" : "...which is wrong of course, because the _check functions are closures. Stupid me... Sorry for the noise!",
        "createdAt" : "2017-07-28T01:26:16Z",
        "updatedAt" : "2017-07-28T14:41:21Z",
        "lastEditedBy" : "94172bd7-17ef-4849-afe8-65bc55e1399e",
        "tags" : [
        ]
      }
    ],
    "commit" : "05870c2bf9b30e15165f355937daf68e25b3fb96",
    "line" : 221,
    "diffHunk" : "@@ -1,1 +313,317 @@        state_and_perms = super(CertificateSigningRequest, self).check(module, perms_required)\n\n        self.privatekey = crypto_utils.load_privatekey(self.privatekey_path, self.privatekey_passphrase)\n\n        def _check_subject(csr):"
  },
  {
    "id" : "60b92618-49b9-40da-a3bf-40fce52c3ae2",
    "prId" : 27281,
    "prUrl" : "https://github.com/ansible/ansible/pull/27281#pullrequestreview-52796435",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b2471e19-0506-4b78-9ca5-a5a20e51d95c",
        "parentId" : null,
        "authorId" : "f65394e6-7239-422a-9af5-c3575a283846",
        "body" : "This check doesn't work as-is and raises issues when running the following playbook two times in a row:\r\n\r\n```\r\n---\r\n- hosts: localhost\r\n  tasks:\r\n    - openssl_privatekey:\r\n        path: /tmp/private.key\r\n\r\n    - openssl_csr:\r\n        path: /tmp/csr.csr\r\n        privatekey_path: /tmp/private.key                                                                                                                                                      \r\n        commonName: www.ansible.com\r\n```\r\nThis is due to the fact thatthe current code relies on `expected` being an array when it could be actually None, hence raising:\r\n\r\n```\r\nTypeError: 'NoneType' object is not iterable\r\n```\r\n\r\nHere is an alternative implentation that did what was expected, feel free to modify adapt/modify/get ideas from it:\r\n\r\n```\r\nusages_ext = [str(ext) for ext in extensions if ext.get_short_name() == extName]\r\n\r\nif (not usages_ext and expected) or (usages_ext and not expected):\r\n    return False\r\nelif not usages_ext and not expected:\r\n    return True\r\nelse:\r\n    current = [usage.strip() for usage in usages_ext[0].split(',')]\r\n    expected = [long[usage] for usage in expected]\r\n    return current == expected\r\n```",
        "createdAt" : "2017-07-27T07:23:44Z",
        "updatedAt" : "2017-07-28T14:41:21Z",
        "lastEditedBy" : "f65394e6-7239-422a-9af5-c3575a283846",
        "tags" : [
        ]
      },
      {
        "id" : "5e0bf087-4772-4dc4-9c4e-3dc5e2061753",
        "parentId" : "b2471e19-0506-4b78-9ca5-a5a20e51d95c",
        "authorId" : "94172bd7-17ef-4849-afe8-65bc55e1399e",
        "body" : "I more or less used your proposed check function. It is indeed much nicer than my version.\r\nI only had to slightly change the list comprehension for `expected`. The reason for this is that the user supplied value in `expected` might already be the long version of the usage name. Openssl accepts both the long and the short version when creating the CSR but will always returns the long version. For this reason i need to look up the long name for usages where we got the short name from the user.",
        "createdAt" : "2017-07-27T21:48:55Z",
        "updatedAt" : "2017-07-28T14:41:21Z",
        "lastEditedBy" : "94172bd7-17ef-4849-afe8-65bc55e1399e",
        "tags" : [
        ]
      }
    ],
    "commit" : "05870c2bf9b30e15165f355937daf68e25b3fb96",
    "line" : 246,
    "diffHunk" : "@@ -1,1 +338,342 @@            return True\n\n        def _check_keyUsage_(extensions, extName, expected, long):\n            usages_ext = [str(ext) for ext in extensions if ext.get_short_name() == extName]\n            if (not usages_ext and expected) or (usages_ext and not expected):"
  },
  {
    "id" : "3c348afb-cd92-4587-8f35-622cf4dabe3a",
    "prId" : 27281,
    "prUrl" : "https://github.com/ansible/ansible/pull/27281#pullrequestreview-52867984",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "29f54de2-6003-48a0-8f09-1cf5f2e8f44e",
        "parentId" : null,
        "authorId" : "f65394e6-7239-422a-9af5-c3575a283846",
        "body" : "Can you updated the RETURN documentation to:\r\n\r\n  * s/csr/filename\r\n  * add `keyUsage` and `extendedUsage`",
        "createdAt" : "2017-07-28T08:09:19Z",
        "updatedAt" : "2017-07-28T14:41:21Z",
        "lastEditedBy" : "f65394e6-7239-422a-9af5-c3575a283846",
        "tags" : [
        ]
      }
    ],
    "commit" : "05870c2bf9b30e15165f355937daf68e25b3fb96",
    "line" : 286,
    "diffHunk" : "@@ -1,1 +376,380 @@\n        result = {\n            'privatekey': self.privatekey_path,\n            'filename': self.path,\n            'subject': self.subject,"
  }
]