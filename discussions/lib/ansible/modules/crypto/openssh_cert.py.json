[
  {
    "id" : "6dde9732-1086-4bfa-9dd0-0912d76303f4",
    "prId" : 49605,
    "prUrl" : "https://github.com/ansible/ansible/pull/49605#pullrequestreview-183438257",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "48d6b853-083e-4ad4-b094-d2a5c8d76ae5",
        "parentId" : null,
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "You should add `type: path` here.",
        "createdAt" : "2018-12-09T20:08:45Z",
        "updatedAt" : "2019-01-02T12:32:57Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      },
      {
        "id" : "012ecab0-05dc-4929-adba-3e0990c8de0f",
        "parentId" : "48d6b853-083e-4ad4-b094-d2a5c8d76ae5",
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "You could of course also add it to the other path options :-)",
        "createdAt" : "2018-12-10T22:50:48Z",
        "updatedAt" : "2019-01-02T12:32:57Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      }
    ],
    "commit" : "239310ce7a163ac9d16e12d3bad82f755f55c285",
    "line" : 49,
    "diffHunk" : "@@ -1,1 +47,51 @@        type: path\n        description:\n            - Path of the file containing the certificate.\n    signing_key:\n        required: true"
  },
  {
    "id" : "003b918f-9411-4aa5-9b54-f5cbfca67fdb",
    "prId" : 49605,
    "prUrl" : "https://github.com/ansible/ansible/pull/49605#pullrequestreview-182992615",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0758dc03-4d4b-4d87-8bfc-97739855bf04",
        "parentId" : null,
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "`type: list` is missing.",
        "createdAt" : "2018-12-09T20:09:03Z",
        "updatedAt" : "2019-01-02T12:32:57Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      }
    ],
    "commit" : "239310ce7a163ac9d16e12d3bad82f755f55c285",
    "line" : 90,
    "diffHunk" : "@@ -1,1 +88,92 @@              By default, generated certificates are valid for all users or hosts.\"\n    options:\n        required: false\n        type: list\n        description:"
  },
  {
    "id" : "bdf9566a-297e-445c-9560-906c6cd4f3ec",
    "prId" : 49605,
    "prUrl" : "https://github.com/ansible/ansible/pull/49605#pullrequestreview-182992615",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a8de6bda-e63e-4804-a1d2-d2460e763684",
        "parentId" : null,
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "You should also add an example with `options:`.",
        "createdAt" : "2018-12-09T20:11:26Z",
        "updatedAt" : "2019-01-02T12:32:57Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      }
    ],
    "commit" : "239310ce7a163ac9d16e12d3bad82f755f55c285",
    "line" : 139,
    "diffHunk" : "@@ -1,1 +137,141 @@    valid_from: +0s\n    valid_to: +32w\n    valid_at: +2w\n\n# Generate an OpenSSH host certificate that is valid forever and only for example.com and examplehost"
  },
  {
    "id" : "6c88fc06-319a-40e6-b2f2-b75046881298",
    "prId" : 49605,
    "prUrl" : "https://github.com/ansible/ansible/pull/49605#pullrequestreview-185229025",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3b09c3a6-2d32-4980-8db4-799b109a0458",
        "parentId" : null,
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "What will happen if `ssh-keygen` outputs something different (like not a valid file)? This will probably break.",
        "createdAt" : "2018-12-12T05:38:30Z",
        "updatedAt" : "2019-01-02T12:32:57Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      },
      {
        "id" : "829b1536-04b9-4f88-8ec4-118355c224ef",
        "parentId" : "3b09c3a6-2d32-4980-8db4-799b109a0458",
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "(In fact, `run_command()` might already die when `ssh-keygen` returns a non-zero return code. I think there's a flag for `run_command()` to force it to not to do that.)",
        "createdAt" : "2018-12-12T05:39:14Z",
        "updatedAt" : "2019-01-02T12:32:57Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      },
      {
        "id" : "358f13a0-6644-4f09-a8dd-04a98c282a6d",
        "parentId" : "3b09c3a6-2d32-4980-8db4-799b109a0458",
        "authorId" : "fb5c6643-d0aa-474a-b175-58cbf7f2467e",
        "body" : ":kw check_rc: Whether to call fail_json in case of non zero RC.\r\n            Default False",
        "createdAt" : "2018-12-12T09:28:53Z",
        "updatedAt" : "2019-01-02T12:32:57Z",
        "lastEditedBy" : "fb5c6643-d0aa-474a-b175-58cbf7f2467e",
        "tags" : [
        ]
      },
      {
        "id" : "ed06779d-9f0a-42e7-9e12-12889d19a308",
        "parentId" : "3b09c3a6-2d32-4980-8db4-799b109a0458",
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "I would add `check_rc=False` anyway, to make clearer your intention that you accept non-zero return codes.",
        "createdAt" : "2018-12-14T18:30:06Z",
        "updatedAt" : "2019-01-02T12:32:57Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      }
    ],
    "commit" : "239310ce7a163ac9d16e12d3bad82f755f55c285",
    "line" : 391,
    "diffHunk" : "@@ -1,1 +389,393 @@                return False\n            self.cert_info = proc[1].split()\n            principals = re.findall(\"(?<=Principals:)(.*)(?=Critical)\", proc[1], re.S)[0].split()\n            principals = list(map(str.strip, principals))\n            if principals == [\"(none)\"]:"
  },
  {
    "id" : "57d80774-df21-4f38-81f5-620760ce8400",
    "prId" : 49605,
    "prUrl" : "https://github.com/ansible/ansible/pull/49605#pullrequestreview-184670244",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "090469b2-75ab-4bc9-8fbb-6f995e309b31",
        "parentId" : null,
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "Why do you use `findall`, when this can match only once anyway?",
        "createdAt" : "2018-12-12T05:40:56Z",
        "updatedAt" : "2019-01-02T12:32:57Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      },
      {
        "id" : "a3e0d262-2afe-40d6-9814-2f8aa32fdc62",
        "parentId" : "090469b2-75ab-4bc9-8fbb-6f995e309b31",
        "authorId" : "fb5c6643-d0aa-474a-b175-58cbf7f2467e",
        "body" : "Because findall is way easier to work with and returns a nice list containing everything i need. ",
        "createdAt" : "2018-12-13T13:55:09Z",
        "updatedAt" : "2019-01-02T12:32:57Z",
        "lastEditedBy" : "fb5c6643-d0aa-474a-b175-58cbf7f2467e",
        "tags" : [
        ]
      }
    ],
    "commit" : "239310ce7a163ac9d16e12d3bad82f755f55c285",
    "line" : 335,
    "diffHunk" : "@@ -1,1 +333,337 @@\n        if self.is_relative(timestring):\n            dispatched_time = re.findall(\"^([+\\\\-])((\\\\d+)[w])?((\\\\d+)[d])?((\\\\d+)[h])?((\\\\d+)[m])?((\\\\d+)[s])?$\", timestring, re.I)\n            if not dispatched_time:\n                module.fail_json(msg=\"'%s' is not a valid time format.\" % timestring)"
  },
  {
    "id" : "0f09f92a-90e9-4260-81a7-ec39ce5dcea8",
    "prId" : 49605,
    "prUrl" : "https://github.com/ansible/ansible/pull/49605#pullrequestreview-185353631",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d1848810-768c-40ad-b96c-4f2c44ccac3e",
        "parentId" : null,
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "This task fails with `{\"changed\": false, \"msg\": \"missing required arguments: valid_from, valid_to\"}`",
        "createdAt" : "2018-12-15T12:47:18Z",
        "updatedAt" : "2019-01-02T12:32:57Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      }
    ],
    "commit" : "239310ce7a163ac9d16e12d3bad82f755f55c285",
    "line" : 172,
    "diffHunk" : "@@ -1,1 +170,174 @@    options:\n        - \"clear\"\n        - \"force-command=/tmp/bla/foo\"\n\n'''"
  },
  {
    "id" : "3dd11ee6-10bb-428e-a5e1-50d1cd175db2",
    "prId" : 49605,
    "prUrl" : "https://github.com/ansible/ansible/pull/49605#pullrequestreview-185353631",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b413b019-b9b6-4252-afc6-7426927effe9",
        "parentId" : null,
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "`state=absent` requires a *lot* of additional arguments which are not needed: `{\"changed\": false, \"msg\": \"missing required arguments: type, signing_key, public_key, valid_from, valid_to\"}`\r\n\r\nThese arguments should only be required when `state` is `'present'`. Look at the `required_if` parameter of `AnsibleModule()`.",
        "createdAt" : "2018-12-15T12:57:31Z",
        "updatedAt" : "2019-01-02T12:32:57Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      }
    ],
    "commit" : "239310ce7a163ac9d16e12d3bad82f755f55c285",
    "line" : 524,
    "diffHunk" : "@@ -1,1 +522,526 @@    module = AnsibleModule(\n        argument_spec=dict(\n            state=dict(default='present', choices=['present', 'absent'], type='str'),\n            force=dict(default=False, type=bool),\n            type=dict(choices=['host', 'user'], type='str'),"
  },
  {
    "id" : "c6cd98ab-3961-472c-82fc-9e0b42b3ef83",
    "prId" : 52421,
    "prUrl" : "https://github.com/ansible/ansible/pull/52421#pullrequestreview-204594743",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e3a45c3c-7b2c-4ded-a9af-07b24bc056ac",
        "parentId" : null,
        "authorId" : "7268595c-1eb4-4b5f-9277-90f183130a4b",
        "body" : "We tend to sort these keys as well. It helps to scan parameters if the same order is used.\r\nThe order is: `description`, `type`, `required`, `choices`, `default`, `added_in_version`",
        "createdAt" : "2019-02-18T01:25:06Z",
        "updatedAt" : "2019-02-18T05:35:23Z",
        "lastEditedBy" : "7268595c-1eb4-4b5f-9277-90f183130a4b",
        "tags" : [
        ]
      }
    ],
    "commit" : "17fdd62f78d81ef30e132f8cabae5d528d515a79",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +35,39 @@        description:\n            - Whether the module should generate a host or a user certificate.\n        type: str\n        required: true\n        choices: ['host', 'user']"
  }
]