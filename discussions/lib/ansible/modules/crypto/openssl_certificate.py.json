[
  {
    "id" : "4d5b0458-a5d7-45cd-ab09-af446e673560",
    "prId" : 28263,
    "prUrl" : "https://github.com/ansible/ansible/pull/28263#pullrequestreview-56849818",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d7c93897-7a6a-421e-af0b-3a84ca8f6728",
        "parentId" : null,
        "authorId" : "57db1e2a-9c1c-4c08-b54f-9731aff18e36",
        "body" : "This check and the ones below are harder/less correct than expected in the general case since you are just comparing strings at this point. Might work most of the time though and will work for me...\r\n\r\nMaybe add a \"TODO\" comment in case a few months/years down the road someone rewrites this module to use cryptography or whatever high level crypto library is popular by then. pyOpenSSL unfortunately is quite at the end of its life by now, but alternatives are not yet available for stable distributions.",
        "createdAt" : "2017-08-16T09:20:49Z",
        "updatedAt" : "2017-08-22T15:10:48Z",
        "lastEditedBy" : "57db1e2a-9c1c-4c08-b54f-9731aff18e36",
        "tags" : [
        ]
      },
      {
        "id" : "f93c02cc-61a0-49e6-8ce8-05d0ba58ebdc",
        "parentId" : "d7c93897-7a6a-421e-af0b-3a84ca8f6728",
        "authorId" : "f65394e6-7239-422a-9af5-c3575a283846",
        "body" : "Since I expect in both size ASN1.TIME format date, I expect the string comparison to be working all the time. Do you have specific case when it might not be the case?\r\n\r\nI admit it is volunteer here to use pyOpenSSL as much as possible in order to avoid to deal with cryptography so we keep things simple where possible. I'll put the TODO, because futur us and developper will love us for that.",
        "createdAt" : "2017-08-16T10:24:40Z",
        "updatedAt" : "2017-08-22T15:10:48Z",
        "lastEditedBy" : "f65394e6-7239-422a-9af5-c3575a283846",
        "tags" : [
        ]
      },
      {
        "id" : "67fe9f83-ba5f-489d-8f49-f969c24c0110",
        "parentId" : "d7c93897-7a6a-421e-af0b-3a84ca8f6728",
        "authorId" : "57db1e2a-9c1c-4c08-b54f-9731aff18e36",
        "body" : "```\r\n>>> asntime1 = \"2017010100000+1000\"\r\n>>> asntime2 = \"2017010100000Z\"\r\n>>> asntime1 >= asntime2\r\nFalse\r\n```\r\nAlso minutes and seconds are optional in ASN.1, as well as an additional 3 digit millisecond precision... The real proper way would be to parse the ASN.1 format to a datetime, but that would require another library (cryptography can do it, or pyasn1) which is a quite high requirement for just making sure that some edge cases or weird certificates work. I think it could be ok to just keep it like this for now and if it really causes issues, either include a few edge cases that are found in the wild or maybe by then some of the slow moving stable distros have dropped out and the module can be rewritten anyways. :-)\r\n\r\nPS: pyOpenSSL depends on cryptography and if pyOpenSSL is installed, cryptography will also be installed already.",
        "createdAt" : "2017-08-16T10:58:14Z",
        "updatedAt" : "2017-08-22T15:10:48Z",
        "lastEditedBy" : "57db1e2a-9c1c-4c08-b54f-9731aff18e36",
        "tags" : [
        ]
      },
      {
        "id" : "ac1d67e4-9836-4a29-b961-778e969b6c80",
        "parentId" : "d7c93897-7a6a-421e-af0b-3a84ca8f6728",
        "authorId" : "f65394e6-7239-422a-9af5-c3575a283846",
        "body" : "Done. Look at the `notes:` section. Let me know if that's ok with you for a first iteration.",
        "createdAt" : "2017-08-17T07:58:30Z",
        "updatedAt" : "2017-08-22T15:10:48Z",
        "lastEditedBy" : "f65394e6-7239-422a-9af5-c3575a283846",
        "tags" : [
        ]
      }
    ],
    "commit" : "88cce03c4a99edc2d1cf08aafdb33a6f3b677b49",
    "line" : 557,
    "diffHunk" : "@@ -1,1 +555,559 @@        def _validate_valid_at():\n            if self.valid_at:\n                if not (self.valid_at >= self.cert.get_notBefore() and self.valid_at <= self.cert.get_notAfter()):\n                    self.message.append(\n                        'Certificate is not valid for the specified date (%s) - notBefore: %s - notAfter: %s' % (self.valid_at,"
  },
  {
    "id" : "3fc6c5b9-51d1-48ca-9966-5803b75344c7",
    "prId" : 28263,
    "prUrl" : "https://github.com/ansible/ansible/pull/28263#pullrequestreview-56849794",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e534df2c-e1ab-4a61-a47c-bfdf06873c09",
        "parentId" : null,
        "authorId" : "57db1e2a-9c1c-4c08-b54f-9731aff18e36",
        "body" : "I didn't see this function being called in the assertonly provider, but I might be mistaken.",
        "createdAt" : "2017-08-16T09:23:45Z",
        "updatedAt" : "2017-08-22T15:10:48Z",
        "lastEditedBy" : "57db1e2a-9c1c-4c08-b54f-9731aff18e36",
        "tags" : [
        ]
      },
      {
        "id" : "dbac4451-1754-4a70-a2d6-731d849df675",
        "parentId" : "e534df2c-e1ab-4a61-a47c-bfdf06873c09",
        "authorId" : "f65394e6-7239-422a-9af5-c3575a283846",
        "body" : "True, will update.",
        "createdAt" : "2017-08-16T10:22:02Z",
        "updatedAt" : "2017-08-22T15:10:48Z",
        "lastEditedBy" : "f65394e6-7239-422a-9af5-c3575a283846",
        "tags" : [
        ]
      },
      {
        "id" : "bb84bf59-4c88-4f95-a0f1-da309395f871",
        "parentId" : "e534df2c-e1ab-4a61-a47c-bfdf06873c09",
        "authorId" : "f65394e6-7239-422a-9af5-c3575a283846",
        "body" : "Done",
        "createdAt" : "2017-08-17T07:58:21Z",
        "updatedAt" : "2017-08-22T15:10:48Z",
        "lastEditedBy" : "f65394e6-7239-422a-9af5-c3575a283846",
        "tags" : [
        ]
      }
    ],
    "commit" : "88cce03c4a99edc2d1cf08aafdb33a6f3b677b49",
    "line" : 326,
    "diffHunk" : "@@ -1,1 +324,328 @@        self.module = module\n\n    def check(self, module, perms_required=True):\n        \"\"\"Ensure the resource is in its desired state.\"\"\"\n"
  },
  {
    "id" : "38776fe0-da34-4306-9c7d-9de04d35c2cc",
    "prId" : 28263,
    "prUrl" : "https://github.com/ansible/ansible/pull/28263#pullrequestreview-56849778",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e7ede1f7-6cfd-42da-a6ad-a3b3a23e0401",
        "parentId" : null,
        "authorId" : "57db1e2a-9c1c-4c08-b54f-9731aff18e36",
        "body" : "This one will fail, since selfsigned_notBefore and selfsigned_notAfter have changed their meaning from the initial draft and don't have default values any more.",
        "createdAt" : "2017-08-16T09:32:10Z",
        "updatedAt" : "2017-08-22T15:10:48Z",
        "lastEditedBy" : "57db1e2a-9c1c-4c08-b54f-9731aff18e36",
        "tags" : [
        ]
      },
      {
        "id" : "e9bafaff-4e82-48c1-b8c8-4a24e8ecb83e",
        "parentId" : "e7ede1f7-6cfd-42da-a6ad-a3b3a23e0401",
        "authorId" : "f65394e6-7239-422a-9af5-c3575a283846",
        "body" : "It still works, because if `selfsigned_notBefore` and/or `selfsigned_notAfter` are not specified, `gmtime_adj_notBefore`/`gmtime_adj_notAfter` are used with default values 10 years validity  from now",
        "createdAt" : "2017-08-16T10:21:17Z",
        "updatedAt" : "2017-08-22T15:10:48Z",
        "lastEditedBy" : "f65394e6-7239-422a-9af5-c3575a283846",
        "tags" : [
        ]
      },
      {
        "id" : "3e6c54ba-06c2-4b71-bdc8-dd52a32db524",
        "parentId" : "e7ede1f7-6cfd-42da-a6ad-a3b3a23e0401",
        "authorId" : "57db1e2a-9c1c-4c08-b54f-9731aff18e36",
        "body" : "Then the documentation is missing. :-P",
        "createdAt" : "2017-08-16T10:44:52Z",
        "updatedAt" : "2017-08-22T15:10:48Z",
        "lastEditedBy" : "57db1e2a-9c1c-4c08-b54f-9731aff18e36",
        "tags" : [
        ]
      },
      {
        "id" : "462da01c-bbe4-46a3-b85b-9e7ff6d7e50b",
        "parentId" : "e7ede1f7-6cfd-42da-a6ad-a3b3a23e0401",
        "authorId" : "f65394e6-7239-422a-9af5-c3575a283846",
        "body" : "Done, in the parameter section for both `selfsigned_notBefore` and `selfsigned_notAfter`.",
        "createdAt" : "2017-08-17T07:58:16Z",
        "updatedAt" : "2017-08-22T15:10:48Z",
        "lastEditedBy" : "f65394e6-7239-422a-9af5-c3575a283846",
        "tags" : [
        ]
      }
    ],
    "commit" : "88cce03c4a99edc2d1cf08aafdb33a6f3b677b49",
    "line" : 177,
    "diffHunk" : "@@ -1,1 +175,179 @@\nEXAMPLES = '''\n- name: Generate a Self Signed OpenSSL certificate\n  openssl_certificate:\n    path: /etc/ssl/crt/ansible.com.crt"
  },
  {
    "id" : "6ea65230-3a90-4343-a76e-4031a83dc8e5",
    "prId" : 28263,
    "prUrl" : "https://github.com/ansible/ansible/pull/28263#pullrequestreview-56586560",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3b48ae80-9343-4fb5-8eaa-ddbe504be37e",
        "parentId" : null,
        "authorId" : "57db1e2a-9c1c-4c08-b54f-9731aff18e36",
        "body" : "https://www.python.org/dev/peps/pep-0394/ would be `#!/usr/bin/env python`, but I haven't looked up conventions in the Ansible code base.",
        "createdAt" : "2017-08-16T09:42:04Z",
        "updatedAt" : "2017-08-22T15:10:48Z",
        "lastEditedBy" : "57db1e2a-9c1c-4c08-b54f-9731aff18e36",
        "tags" : [
        ]
      },
      {
        "id" : "d2c2c758-97c9-4140-80a4-da69f29b3c80",
        "parentId" : "3b48ae80-9343-4fb5-8eaa-ddbe504be37e",
        "authorId" : "f65394e6-7239-422a-9af5-c3575a283846",
        "body" : "This seems to be the convention in the Ansible code base [1][2][3]\r\n\r\n[1] http://docs.ansible.com/ansible/latest/dev_guide/developing_modules_general.html\r\n[2] https://github.com/ansible/ansible/blob/devel/lib/ansible/modules/files/archive.py\r\n[3] https://github.com/ansible/ansible/blob/devel/lib/ansible/modules/files/assemble.py\r\n\r\n",
        "createdAt" : "2017-08-16T10:19:17Z",
        "updatedAt" : "2017-08-22T15:10:48Z",
        "lastEditedBy" : "f65394e6-7239-422a-9af5-c3575a283846",
        "tags" : [
        ]
      }
    ],
    "commit" : "88cce03c4a99edc2d1cf08aafdb33a6f3b677b49",
    "line" : 1,
    "diffHunk" : "@@ -1,1 +-1,3 @@#!/usr/bin/python\n# -*- coding: utf-8 -*-\n"
  },
  {
    "id" : "2528be31-d209-4a4e-b883-8dd335873733",
    "prId" : 28263,
    "prUrl" : "https://github.com/ansible/ansible/pull/28263#pullrequestreview-56899765",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6456b486-f187-4a31-a713-704954c349b7",
        "parentId" : null,
        "authorId" : "57db1e2a-9c1c-4c08-b54f-9731aff18e36",
        "body" : "This will not run the assertonly checks in check_mode, even though they are not destructive or changing any state other than atime.",
        "createdAt" : "2017-08-17T09:47:25Z",
        "updatedAt" : "2017-08-22T15:10:48Z",
        "lastEditedBy" : "57db1e2a-9c1c-4c08-b54f-9731aff18e36",
        "tags" : [
        ]
      },
      {
        "id" : "e308e0d5-4d5c-406c-9a47-fa029792738b",
        "parentId" : "6456b486-f187-4a31-a713-704954c349b7",
        "authorId" : "f65394e6-7239-422a-9af5-c3575a283846",
        "body" : "This is correct, because the only purpose of the check_mode test is to know if a resource will end up changed or not, and assert always return `changed = False`. So idiomatically, it wouldn't make sense to run the test in `assertonly()` for the check mode IMO",
        "createdAt" : "2017-08-17T10:35:18Z",
        "updatedAt" : "2017-08-22T15:10:48Z",
        "lastEditedBy" : "f65394e6-7239-422a-9af5-c3575a283846",
        "tags" : [
        ]
      },
      {
        "id" : "b969122e-16c6-4705-b745-9f138f2f9768",
        "parentId" : "6456b486-f187-4a31-a713-704954c349b7",
        "authorId" : "57db1e2a-9c1c-4c08-b54f-9731aff18e36",
        "body" : "It might be also interesting to see if it would fail though.",
        "createdAt" : "2017-08-17T10:39:54Z",
        "updatedAt" : "2017-08-22T15:10:48Z",
        "lastEditedBy" : "57db1e2a-9c1c-4c08-b54f-9731aff18e36",
        "tags" : [
        ]
      },
      {
        "id" : "185af2ec-ca06-404f-ba7a-89283103c004",
        "parentId" : "6456b486-f187-4a31-a713-704954c349b7",
        "authorId" : "f65394e6-7239-422a-9af5-c3575a283846",
        "body" : "Done",
        "createdAt" : "2017-08-17T11:47:39Z",
        "updatedAt" : "2017-08-22T15:10:48Z",
        "lastEditedBy" : "f65394e6-7239-422a-9af5-c3575a283846",
        "tags" : [
        ]
      }
    ],
    "commit" : "88cce03c4a99edc2d1cf08aafdb33a6f3b677b49",
    "line" : 751,
    "diffHunk" : "@@ -1,1 +749,753 @@    if module.params['state'] == 'present':\n\n        if module.check_mode:\n            result = certificate.dump()\n            result['changed'] = module.params['force'] or not certificate.check(module)"
  },
  {
    "id" : "fe4eb04a-1d25-4ff1-999e-cd89ea188c51",
    "prId" : 28263,
    "prUrl" : "https://github.com/ansible/ansible/pull/28263#pullrequestreview-56923132",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d3fba02c-6816-42fa-aaac-025617c444e3",
        "parentId" : null,
        "authorId" : "99dfb093-81dd-44d0-97be-6dcf3059e796",
        "body" : "if you change it to snake, it would be possible to add an alias like `notAfter=dict(type='str', aliases=['not_after']),` and in the docs you can change it the other way around (to not to touch everything):\r\n\r\n~~~yaml\r\n    not_after:\r\n        required: false\r\n        aliases: [ notAfter ]\r\n        description:\r\n            - The certificate must expire at this point in time. The timestamp is formatted as an ASN.1 TIME.\r\n~~~",
        "createdAt" : "2017-08-17T13:32:11Z",
        "updatedAt" : "2017-08-22T15:10:48Z",
        "lastEditedBy" : "99dfb093-81dd-44d0-97be-6dcf3059e796",
        "tags" : [
        ]
      }
    ],
    "commit" : "88cce03c4a99edc2d1cf08aafdb33a6f3b677b49",
    "line" : 712,
    "diffHunk" : "@@ -1,1 +710,714 @@            subjectAltName_strict=dict(default=False, type='bool'),\n            notBefore=dict(type='str'),\n            notAfter=dict(type='str'),\n            valid_at=dict(type='str'),\n            invalid_at=dict(type='str'),"
  },
  {
    "id" : "d6ae11ed-da2b-4de3-8e97-4f3cbce5c10a",
    "prId" : 28263,
    "prUrl" : "https://github.com/ansible/ansible/pull/28263#pullrequestreview-57692786",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9b0ae388-ac03-48ec-90e2-f09a38e79010",
        "parentId" : null,
        "authorId" : "d4c7fda6-9311-4eb9-91ca-d3f1cbccd288",
        "body" : "Use `U()` for `acme`.",
        "createdAt" : "2017-08-22T07:50:14Z",
        "updatedAt" : "2017-08-22T15:10:48Z",
        "lastEditedBy" : "d4c7fda6-9311-4eb9-91ca-d3f1cbccd288",
        "tags" : [
        ]
      }
    ],
    "commit" : "88cce03c4a99edc2d1cf08aafdb33a6f3b677b49",
    "line" : 89,
    "diffHunk" : "@@ -1,1 +87,91 @@              If this value is not specified, certificate will stop being valid 10 years from now.\n\n    acme_accountkey:\n        description:\n            - Path to the accountkey for the C(acme) provider"
  },
  {
    "id" : "60360cf2-7e37-4386-9a11-ddd98d809e7b",
    "prId" : 28263,
    "prUrl" : "https://github.com/ansible/ansible/pull/28263#pullrequestreview-57692786",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "54fbf53c-5322-4eab-8bec-30bda6d59828",
        "parentId" : null,
        "authorId" : "d4c7fda6-9311-4eb9-91ca-d3f1cbccd288",
        "body" : "Here and below in other descriptions: use Use `C(valid_in)`, `C(keyUsage)`, `C(extendedKeyUsage)`, `C(subjectAltName)`.",
        "createdAt" : "2017-08-22T07:54:37Z",
        "updatedAt" : "2017-08-22T15:10:48Z",
        "lastEditedBy" : "d4c7fda6-9311-4eb9-91ca-d3f1cbccd288",
        "tags" : [
        ]
      }
    ],
    "commit" : "88cce03c4a99edc2d1cf08aafdb33a6f3b677b49",
    "line" : 136,
    "diffHunk" : "@@ -1,1 +134,138 @@            - The certificate must expire at this point in time. The timestamp is formatted as an ASN.1 TIME.\n\n    valid_in:\n        description:\n            - The certificate must still be valid in I(valid_in) seconds from now."
  },
  {
    "id" : "32edee72-897f-4f9f-8670-482fda61fcea",
    "prId" : 28521,
    "prUrl" : "https://github.com/ansible/ansible/pull/28521#pullrequestreview-58826797",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "06e53dcd-6766-474b-a1e9-163d6096501c",
        "parentId" : null,
        "authorId" : "99dfb093-81dd-44d0-97be-6dcf3059e796",
        "body" : "IMHO this was wrong before, wasn't it?",
        "createdAt" : "2017-08-22T18:39:09Z",
        "updatedAt" : "2017-08-23T07:17:22Z",
        "lastEditedBy" : "99dfb093-81dd-44d0-97be-6dcf3059e796",
        "tags" : [
        ]
      },
      {
        "id" : "ebddfdcb-f568-49c0-8603-bacdcaa1347f",
        "parentId" : "06e53dcd-6766-474b-a1e9-163d6096501c",
        "authorId" : "57db1e2a-9c1c-4c08-b54f-9731aff18e36",
        "body" : "Seems like a leftover from my version, so yes, it likely was wrong.",
        "createdAt" : "2017-08-27T16:43:51Z",
        "updatedAt" : "2017-08-27T16:43:51Z",
        "lastEditedBy" : "57db1e2a-9c1c-4c08-b54f-9731aff18e36",
        "tags" : [
        ]
      }
    ],
    "commit" : "8dde1dc8dd00a7685b4f33a1e062805d4b322def",
    "line" : 113,
    "diffHunk" : "@@ -1,1 +273,277 @@      - clientAuth\n      - 1.3.6.1.5.5.7.3.8\n    extended_key_usage_strict: true\n\n- name: Ensure that the existing certificate has a certain domain in its subjectAltName"
  },
  {
    "id" : "5ae55fda-90f5-41b3-9217-628169d16b73",
    "prId" : 30338,
    "prUrl" : "https://github.com/ansible/ansible/pull/30338#pullrequestreview-84792601",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "46c2d580-a853-4494-9a75-907ad9dab2c0",
        "parentId" : null,
        "authorId" : "f65394e6-7239-422a-9af5-c3575a283846",
        "body" : "I understand the need for the _strict param, but why not using the same pattern as for `self.keyUsage_strict = module.params['keyUsage_strict']` here? Is it expected to be done in a subsequent review ?",
        "createdAt" : "2017-12-07T11:13:59Z",
        "updatedAt" : "2017-12-07T13:31:04Z",
        "lastEditedBy" : "f65394e6-7239-422a-9af5-c3575a283846",
        "tags" : [
        ]
      },
      {
        "id" : "768bd141-fa8e-4d33-8c4d-5a77ae6045dc",
        "parentId" : "46c2d580-a853-4494-9a75-907ad9dab2c0",
        "authorId" : "57db1e2a-9c1c-4c08-b54f-9731aff18e36",
        "body" : "I want to do that in the next upcoming PR, I didn't want to write everything at once and then have 3 different things in one PR.",
        "createdAt" : "2017-12-07T11:42:04Z",
        "updatedAt" : "2017-12-07T13:31:04Z",
        "lastEditedBy" : "57db1e2a-9c1c-4c08-b54f-9731aff18e36",
        "tags" : [
        ]
      },
      {
        "id" : "a9583a1a-d371-4566-89f8-4f4cdd7d9d1c",
        "parentId" : "46c2d580-a853-4494-9a75-907ad9dab2c0",
        "authorId" : "f65394e6-7239-422a-9af5-c3575a283846",
        "body" : "Ack.",
        "createdAt" : "2017-12-07T12:45:41Z",
        "updatedAt" : "2017-12-07T13:31:04Z",
        "lastEditedBy" : "f65394e6-7239-422a-9af5-c3575a283846",
        "tags" : [
        ]
      },
      {
        "id" : "784b630c-9480-4fe3-a397-7bcc6d11c877",
        "parentId" : "46c2d580-a853-4494-9a75-907ad9dab2c0",
        "authorId" : "57db1e2a-9c1c-4c08-b54f-9731aff18e36",
        "body" : "see #34090",
        "createdAt" : "2017-12-20T15:10:29Z",
        "updatedAt" : "2017-12-20T15:10:29Z",
        "lastEditedBy" : "57db1e2a-9c1c-4c08-b54f-9731aff18e36",
        "tags" : [
        ]
      }
    ],
    "commit" : "ccf63f5d8ca649e1e28fa7e4043187ddc0fe2987",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +460,464 @@        else:\n            self.subject = []\n        self.subject_strict = False\n        if module.params['issuer']:\n            self.issuer = crypto_utils.parse_name_field(module.params['issuer'])"
  },
  {
    "id" : "cc60ee56-3d0f-43a9-98e7-8d7caf79e03c",
    "prId" : 30338,
    "prUrl" : "https://github.com/ansible/ansible/pull/30338#pullrequestreview-81818527",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d86c6ed9-d82e-40c1-82aa-bcc106298c65",
        "parentId" : null,
        "authorId" : "f65394e6-7239-422a-9af5-c3575a283846",
        "body" : "ditto",
        "createdAt" : "2017-12-07T11:14:17Z",
        "updatedAt" : "2017-12-07T13:31:04Z",
        "lastEditedBy" : "f65394e6-7239-422a-9af5-c3575a283846",
        "tags" : [
        ]
      }
    ],
    "commit" : "ccf63f5d8ca649e1e28fa7e4043187ddc0fe2987",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +465,469 @@        else:\n            self.issuer = []\n        self.issuer_strict = False\n        self.has_expired = module.params['has_expired']\n        self.version = module.params['version']"
  },
  {
    "id" : "16dfe540-eaa7-4ecc-9b3a-33ed9ab25009",
    "prId" : 50570,
    "prUrl" : "https://github.com/ansible/ansible/pull/50570#pullrequestreview-192140891",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bd0c183b-8a83-481f-a3dd-01fa7c12ca8e",
        "parentId" : null,
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "This is a few days less than 10 years.",
        "createdAt" : "2019-01-05T16:12:53Z",
        "updatedAt" : "2019-01-22T20:03:56Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      },
      {
        "id" : "fd6311fd-83eb-48d3-b101-04f46b86a667",
        "parentId" : "bd0c183b-8a83-481f-a3dd-01fa7c12ca8e",
        "authorId" : "57db1e2a-9c1c-4c08-b54f-9731aff18e36",
        "body" : "This is exactly how the module worked up until now, 10 years are not a precisely definable time span.",
        "createdAt" : "2019-01-05T21:16:19Z",
        "updatedAt" : "2019-01-22T20:03:56Z",
        "lastEditedBy" : "57db1e2a-9c1c-4c08-b54f-9731aff18e36",
        "tags" : [
        ]
      },
      {
        "id" : "e8a0b30d-5e1d-4fbe-a04d-0a4f860caf56",
        "parentId" : "bd0c183b-8a83-481f-a3dd-01fa7c12ca8e",
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "Then the documentation of the module has been wrong so far. 10 years from now is well-defined.",
        "createdAt" : "2019-01-05T22:13:25Z",
        "updatedAt" : "2019-01-22T20:03:56Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      },
      {
        "id" : "c69f1ed6-f8b1-456b-ad83-fde3d66d01cf",
        "parentId" : "bd0c183b-8a83-481f-a3dd-01fa7c12ca8e",
        "authorId" : "57db1e2a-9c1c-4c08-b54f-9731aff18e36",
        "body" : "Alright, what time and date is it exactly 10 years after 2012-02-29 and how many days are in ten years exactly?",
        "createdAt" : "2019-01-05T22:39:47Z",
        "updatedAt" : "2019-01-22T20:03:56Z",
        "lastEditedBy" : "57db1e2a-9c1c-4c08-b54f-9731aff18e36",
        "tags" : [
        ]
      },
      {
        "id" : "aa3e9d3f-bc12-44e2-8f04-49f755ee9f7c",
        "parentId" : "bd0c183b-8a83-481f-a3dd-01fa7c12ca8e",
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "Why do you want to convert this into a number of days? Yes, I have to admit it's not totally well-defined (for years because of leap years, and for months because of variable number of days per month), but with standard rounding down it does what people expect.",
        "createdAt" : "2019-01-05T22:47:34Z",
        "updatedAt" : "2019-01-22T20:03:56Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      },
      {
        "id" : "87d50576-4dda-4c69-8d96-7aab50821e0e",
        "parentId" : "bd0c183b-8a83-481f-a3dd-01fa7c12ca8e",
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "(I really shouldn't have used well-defined in the first place :) )",
        "createdAt" : "2019-01-05T22:48:09Z",
        "updatedAt" : "2019-01-22T20:03:56Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      },
      {
        "id" : "1a679af8-2a7a-4423-b4c0-d62ef3bf7eb8",
        "parentId" : "bd0c183b-8a83-481f-a3dd-01fa7c12ca8e",
        "authorId" : "57db1e2a-9c1c-4c08-b54f-9731aff18e36",
        "body" : "These edge cases need to be considered though and documented as well - or you just let people choose for themselves if they want to define \"10 years\" as the average of \"3652d12h\", as \"10 * 365 days\" or as \"exactly today's date in 10 years from now\" (not possible for dates like the 29th of February). I prefer the latter, the documentation alone what exactly \"1 month from today\" means in this case would be as tedious to read as if it would be to write (using an example: One month after January 28th, 29th, 30th and 31st would be what day exactly in \"normal\" and leap years?).",
        "createdAt" : "2019-01-05T23:07:56Z",
        "updatedAt" : "2019-01-22T20:03:56Z",
        "lastEditedBy" : "57db1e2a-9c1c-4c08-b54f-9731aff18e36",
        "tags" : [
        ]
      },
      {
        "id" : "3e928ba1-8b32-47ea-83ac-c6ed0c3c25d3",
        "parentId" : "bd0c183b-8a83-481f-a3dd-01fa7c12ca8e",
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "How about just documenting that using months and years uses potential rounding, and leaving the details away?\r\n\r\nMaybe we should also just don't add this feature now.",
        "createdAt" : "2019-01-06T15:55:57Z",
        "updatedAt" : "2019-01-22T20:03:56Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      },
      {
        "id" : "a313c547-d7ff-4bc9-b168-1bac8be13092",
        "parentId" : "bd0c183b-8a83-481f-a3dd-01fa7c12ca8e",
        "authorId" : "57db1e2a-9c1c-4c08-b54f-9731aff18e36",
        "body" : "> Maybe we should also just don't add this feature now.\r\n\r\nDo you mean (a) relative timestamps or (b) being able to define years in relative timestamps with \"this feature\"?\r\n\r\nCurrently `cert.gmtime_adj_notAfter(315360000)` is used by the way, which is 3650 days in seconds.",
        "createdAt" : "2019-01-14T12:49:14Z",
        "updatedAt" : "2019-01-22T20:03:56Z",
        "lastEditedBy" : "57db1e2a-9c1c-4c08-b54f-9731aff18e36",
        "tags" : [
        ]
      },
      {
        "id" : "5ad259e4-ccb4-4ddf-b9ed-97518ae01af3",
        "parentId" : "bd0c183b-8a83-481f-a3dd-01fa7c12ca8e",
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "Ah, sorry, I meant years/months support, not the general relative timestamp feature :)",
        "createdAt" : "2019-01-14T13:01:55Z",
        "updatedAt" : "2019-01-22T20:03:56Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      },
      {
        "id" : "b435f9ec-a208-411b-a0fa-7e33deb335d5",
        "parentId" : "bd0c183b-8a83-481f-a3dd-01fa7c12ca8e",
        "authorId" : "57db1e2a-9c1c-4c08-b54f-9731aff18e36",
        "body" : "Ah, ok. Yes, I agree with that one. :-)",
        "createdAt" : "2019-01-14T13:04:34Z",
        "updatedAt" : "2019-01-22T20:03:56Z",
        "lastEditedBy" : "57db1e2a-9c1c-4c08-b54f-9731aff18e36",
        "tags" : [
        ]
      }
    ],
    "commit" : "90b47175b4421a9d189049c536a303f360cb9265",
    "line" : 44,
    "diffHunk" : "@@ -1,1 +143,147 @@\n    ownca_not_after:\n        default: +3650d\n        description:\n            - \"The point in time at which the certificate stops being valid. Time can be specified either as relative time or as absolute timestamp."
  },
  {
    "id" : "285ffadc-f402-4f28-8d00-13784c705d98",
    "prId" : 53168,
    "prUrl" : "https://github.com/ansible/ansible/pull/53168#pullrequestreview-209714472",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "12b1f5f6-45c0-4b39-bbac-491a3505992b",
        "parentId" : null,
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "Maybe add a comment here that this is similar to the PyOpenSSL code for `cert.has_expired()`, but that older versions have a buggy implementation and we thus do it manually here.",
        "createdAt" : "2019-03-01T12:18:46Z",
        "updatedAt" : "2019-03-01T19:07:50Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      },
      {
        "id" : "93fecdfb-43a5-4ea1-acb7-000b335e524d",
        "parentId" : "12b1f5f6-45c0-4b39-bbac-491a3505992b",
        "authorId" : "ed555eca-1475-4898-afd5-d7e38b58a2c4",
        "body" : "Added comments, hopefully makes sense :)",
        "createdAt" : "2019-03-01T18:09:26Z",
        "updatedAt" : "2019-03-01T19:07:50Z",
        "lastEditedBy" : "ed555eca-1475-4898-afd5-d7e38b58a2c4",
        "tags" : [
        ]
      }
    ],
    "commit" : "765bb342d706ea7584331775cb58fb468b70834c",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +836,840 @@            # to avoid issues with those we added the code from a more recent release here.\n\n            time_string = to_native(self.cert.get_notAfter())\n            not_after = datetime.datetime.strptime(time_string, \"%Y%m%d%H%M%SZ\")\n            cert_expired = not_after < datetime.datetime.utcnow()"
  },
  {
    "id" : "98a1337f-b47e-477e-8374-f216e3937fda",
    "prId" : 53924,
    "prUrl" : "https://github.com/ansible/ansible/pull/53924#pullrequestreview-217165221",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4986ac1f-6e81-4847-a258-0daecd74edbb",
        "parentId" : null,
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "Let's move these helper functions to module_utils and make openssl_csr and openssl_certificate use the same functions. But let's not do it before merging this PR, otherwise we lose too much time :)",
        "createdAt" : "2019-03-20T20:27:18Z",
        "updatedAt" : "2019-03-21T22:52:08Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      },
      {
        "id" : "0c41ee29-23de-4f22-861b-7033214724d5",
        "parentId" : "4986ac1f-6e81-4847-a258-0daecd74edbb",
        "authorId" : "ed555eca-1475-4898-afd5-d7e38b58a2c4",
        "body" : "Yep, sounds like a plan",
        "createdAt" : "2019-03-21T10:34:55Z",
        "updatedAt" : "2019-03-21T22:52:08Z",
        "lastEditedBy" : "ed555eca-1475-4898-afd5-d7e38b58a2c4",
        "tags" : [
        ]
      }
    ],
    "commit" : "9a6d077a924db1c18c7a7f140429206932a5d62d",
    "line" : 474,
    "diffHunk" : "@@ -1,1 +1087,1091 @@\n    def _get_name_oid(self, id):\n        if id in ('CN', 'commonName'):\n            return cryptography.x509.oid.NameOID.COMMON_NAME\n        if id in ('C', 'countryName'):"
  },
  {
    "id" : "43aba6da-c600-4310-8f3b-72ea7c62eff6",
    "prId" : 53924,
    "prUrl" : "https://github.com/ansible/ansible/pull/53924#pullrequestreview-217194487",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "65750c69-cfcc-4a77-b477-9589352066a9",
        "parentId" : null,
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "This loop doesn't work, as any exception will leave the loop. Try\r\n```\r\n            for date_fmt in ['%Y%m%d%H%M%SZ', '%Y%m%d%H%MZ', '%Y%m%d%H%M%S%z', '%Y%m%d%H%M%z']:\r\n                try:\r\n                    result = datetime.datetime.strptime(input_string, date_fmt)\r\n                    break\r\n                except ValueError:\r\n                    pass\r\n```\r\n\r\ninstead.",
        "createdAt" : "2019-03-21T11:50:07Z",
        "updatedAt" : "2019-03-21T22:52:08Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      }
    ],
    "commit" : "9a6d077a924db1c18c7a7f140429206932a5d62d",
    "line" : 111,
    "diffHunk" : "@@ -1,1 +595,599 @@            for date_fmt in ['%Y%m%d%H%M%SZ', '%Y%m%d%H%MZ', '%Y%m%d%H%M%S%z', '%Y%m%d%H%M%z']:\n                try:\n                    result = datetime.datetime.strptime(input_string, date_fmt)\n                    break\n                except ValueError:"
  },
  {
    "id" : "7d153f3b-1145-4424-b737-958bbd4d6088",
    "prId" : 59272,
    "prUrl" : "https://github.com/ansible/ansible/pull/59272#pullrequestreview-264027028",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "858fa21d-a764-4fc7-ad73-c3a000749042",
        "parentId" : null,
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "Please add to this and the others:\r\n```.yaml\r\n- This is only used by the C(entrust) provider.\r\n```",
        "createdAt" : "2019-07-19T06:06:10Z",
        "updatedAt" : "2019-08-12T13:14:36Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      }
    ],
    "commit" : "fa38cba6abaddcb30cc7354f06b70e8bda4d5ef3",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +377,381 @@    entrust_cert_type:\n        description:\n            - The type of certificate product to request.\n            - This is only used by the C(entrust) provider.\n        type: str"
  },
  {
    "id" : "f65f22f3-5de6-42db-9a3e-bb46df2b7d55",
    "prId" : 59272,
    "prUrl" : "https://github.com/ansible/ansible/pull/59272#pullrequestreview-264446972",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3b8cc024-efd2-4d79-9842-e3b2f01b618b",
        "parentId" : null,
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "Does the Entrust API allows arbitrary values here? If not, you should mention that there are additional conditions (like must not be too far in the future).",
        "createdAt" : "2019-07-19T07:38:14Z",
        "updatedAt" : "2019-08-12T13:14:36Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      },
      {
        "id" : "c29a6797-8873-4d49-8b8e-a2b8d3f6a72c",
        "parentId" : "3b8cc024-efd2-4d79-9842-e3b2f01b618b",
        "authorId" : "cea850a3-e209-4f7b-bc8b-b377bbf3a19d",
        "body" : "Yes, but you're right in that there are limits, though they're largely the 'universal' limits to cert length. I'll document boundaries.",
        "createdAt" : "2019-07-19T16:23:43Z",
        "updatedAt" : "2019-08-12T13:14:36Z",
        "lastEditedBy" : "cea850a3-e209-4f7b-bc8b-b377bbf3a19d",
        "tags" : [
        ]
      },
      {
        "id" : "bddc7b68-3b59-4a89-a5c5-911a6e531549",
        "parentId" : "3b8cc024-efd2-4d79-9842-e3b2f01b618b",
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "I think it's already enough to mention that CA limits apply. Does entrust allow you to freely choose the notAfter timestamp (as long as it satisfies the general limits), or is the provided value taken as a guideline and adjusted in some way? This would also be of interest to a user.",
        "createdAt" : "2019-07-19T19:32:33Z",
        "updatedAt" : "2019-08-12T13:14:36Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      },
      {
        "id" : "0d7078cc-0a67-4285-80f6-179216f71214",
        "parentId" : "3b8cc024-efd2-4d79-9842-e3b2f01b618b",
        "authorId" : "cea850a3-e209-4f7b-bc8b-b377bbf3a19d",
        "body" : "It's actually on our roadmap to fix - we currently don't support timestamp, so that's a good catch that it needs to be clearly documented, since providers like selfsigned/ownca do.",
        "createdAt" : "2019-07-19T21:55:40Z",
        "updatedAt" : "2019-08-12T13:14:36Z",
        "lastEditedBy" : "cea850a3-e209-4f7b-bc8b-b377bbf3a19d",
        "tags" : [
        ]
      }
    ],
    "commit" : "fa38cba6abaddcb30cc7354f06b70e8bda4d5ef3",
    "line" : 110,
    "diffHunk" : "@@ -1,1 +451,455 @@            - Valid format is C([+-]timespec | ASN.1 TIME) where timespec can be an integer\n              + C([w | d | h | m | s]) (e.g. C(+32w1d2h).\n            - If this value is not specified, the certificate will stop being valid 365 days from now.\n            - This is only used by the C(entrust) provider.\n        type: str"
  },
  {
    "id" : "1029b78c-f566-489e-9a55-8b322cc678bb",
    "prId" : 59272,
    "prUrl" : "https://github.com/ansible/ansible/pull/59272#pullrequestreview-269301953",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e716cfcd-f741-4b0e-8ef1-e5f50585f9b1",
        "parentId" : null,
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "Please add something like `The C(entrust) provider was added for Ansible 2.9.`.",
        "createdAt" : "2019-07-31T19:41:36Z",
        "updatedAt" : "2019-08-12T13:14:36Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      },
      {
        "id" : "7b4f92f7-0488-4e7a-aa22-8d22f73dc18f",
        "parentId" : "e716cfcd-f741-4b0e-8ef1-e5f50585f9b1",
        "authorId" : "cea850a3-e209-4f7b-bc8b-b377bbf3a19d",
        "body" : "Went with \r\n\"The C(entrust) provider was added for Ansible 2.9 and requires credentials for the Entrust Certificate Services API\" \r\n\r\nbut I'll trim it down if you think that's redundant given the required parameters documented elsewhere. Figured it saves people *not* looking to use entrust_ the effort of trying to guess if \"entrust\" provider would work for their needs.",
        "createdAt" : "2019-07-31T21:49:10Z",
        "updatedAt" : "2019-08-12T13:14:36Z",
        "lastEditedBy" : "cea850a3-e209-4f7b-bc8b-b377bbf3a19d",
        "tags" : [
        ]
      }
    ],
    "commit" : "fa38cba6abaddcb30cc7354f06b70e8bda4d5ef3",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +58,62 @@        description:\n            - Name of the provider to use to generate/retrieve the OpenSSL certificate.\n            - The C(assertonly) provider will not generate files and fail if the certificate file is missing.\n            - \"The C(entrust) provider was added for Ansible 2.9 and requires credentials for the\n               L(https://www.entrustdatacard.com/products/categories/ssl-certificates,Entrust Certificate Services) (ECS) API.\""
  },
  {
    "id" : "7f443da5-6259-4c06-a1eb-e48ed779ae00",
    "prId" : 59272,
    "prUrl" : "https://github.com/ansible/ansible/pull/59272#pullrequestreview-269239188",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ad0283d1-ccc3-4260-8cee-4ea9647a7d5d",
        "parentId" : null,
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "Is this required when using the `entrust` provider? If yes, you should say so in the docs (and validate that in the code).",
        "createdAt" : "2019-07-31T19:46:44Z",
        "updatedAt" : "2019-08-12T13:14:36Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      },
      {
        "id" : "e8ccec34-8ac3-4f15-b6e5-7b0fe5c63c3d",
        "parentId" : "ad0283d1-ccc3-4260-8cee-4ea9647a7d5d",
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "(Same for the other `entrust_*` options.)",
        "createdAt" : "2019-07-31T19:47:01Z",
        "updatedAt" : "2019-08-12T13:14:36Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      },
      {
        "id" : "cede3dfe-6c73-41da-a9ea-562b0a476e6c",
        "parentId" : "ad0283d1-ccc3-4260-8cee-4ea9647a7d5d",
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "I now saw there's a big `required_if`. So yes, it's required :) The docs should say that as well, though.",
        "createdAt" : "2019-07-31T19:58:11Z",
        "updatedAt" : "2019-08-12T13:14:36Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      }
    ],
    "commit" : "fa38cba6abaddcb30cc7354f06b70e8bda4d5ef3",
    "line" : 70,
    "diffHunk" : "@@ -1,1 +411,415 @@        description:\n            - The username for authentication to the Entrust Certificate Services (ECS) API.\n            - This is only used by the C(entrust) provider.\n            - This is required if the provider is C(entrust).\n        type: str"
  },
  {
    "id" : "0898d559-1359-4eb0-aefe-3f1bf58696d1",
    "prId" : 59272,
    "prUrl" : "https://github.com/ansible/ansible/pull/59272#pullrequestreview-269878983",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7ad2e8eb-bba7-437d-925b-e15cecfe7341",
        "parentId" : null,
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "```suggestion\r\n        }\r\n        if self.backup_file:\r\n            result['backup_file'] = self.backup_file\r\n```",
        "createdAt" : "2019-08-01T21:09:05Z",
        "updatedAt" : "2019-08-12T13:14:36Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      }
    ],
    "commit" : "fa38cba6abaddcb30cc7354f06b70e8bda4d5ef3",
    "line" : 331,
    "diffHunk" : "@@ -1,1 +1962,1966 @@            'privatekey': self.privatekey_path,\n            'csr': self.csr_path,\n        }\n\n        if self.backup_file:"
  },
  {
    "id" : "9b7240f8-d4f3-4299-851d-d8a1d785d51a",
    "prId" : 59272,
    "prUrl" : "https://github.com/ansible/ansible/pull/59272#pullrequestreview-276256631",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1a24f1db-a461-4fa4-bbb5-02f9825eaddc",
        "parentId" : null,
        "authorId" : "57db1e2a-9c1c-4c08-b54f-9731aff18e36",
        "body" : "Did you mean 365 days here?",
        "createdAt" : "2019-08-17T22:36:45Z",
        "updatedAt" : "2019-08-17T22:36:45Z",
        "lastEditedBy" : "57db1e2a-9c1c-4c08-b54f-9731aff18e36",
        "tags" : [
        ]
      },
      {
        "id" : "aa8e60eb-2366-4c93-9c02-6bebd711d2dc",
        "parentId" : "1a24f1db-a461-4fa4-bbb5-02f9825eaddc",
        "authorId" : "cea850a3-e209-4f7b-bc8b-b377bbf3a19d",
        "body" : "Yes, holdover from before I changed 30->365 as the code default.",
        "createdAt" : "2019-08-18T00:34:01Z",
        "updatedAt" : "2019-08-18T00:34:01Z",
        "lastEditedBy" : "cea850a3-e209-4f7b-bc8b-b377bbf3a19d",
        "tags" : [
        ]
      }
    ],
    "commit" : "fa38cba6abaddcb30cc7354f06b70e8bda4d5ef3",
    "line" : 243,
    "diffHunk" : "@@ -1,1 +1874,1878 @@            body['certType'] = module.params['entrust_cert_type']\n\n            # Handle expiration (30 days if not specified)\n            expiry = self.notAfter\n            if not expiry:"
  },
  {
    "id" : "14d3ca89-c759-44a1-aef1-9b0ef376eab7",
    "prId" : 59272,
    "prUrl" : "https://github.com/ansible/ansible/pull/59272#pullrequestreview-276256618",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "91ffee0e-aaf4-4bdf-bfb2-c96cf7d1d95b",
        "parentId" : null,
        "authorId" : "57db1e2a-9c1c-4c08-b54f-9731aff18e36",
        "body" : "This should be RFC 3339, ISO standard 3339 doesn't look timestamp related. ;-)",
        "createdAt" : "2019-08-17T22:37:50Z",
        "updatedAt" : "2019-08-17T22:37:50Z",
        "lastEditedBy" : "57db1e2a-9c1c-4c08-b54f-9731aff18e36",
        "tags" : [
        ]
      },
      {
        "id" : "d73ee866-f3c6-490b-b6fc-239dfdadd6b9",
        "parentId" : "91ffee0e-aaf4-4bdf-bfb2-c96cf7d1d95b",
        "authorId" : "cea850a3-e209-4f7b-bc8b-b377bbf3a19d",
        "body" : "Oops, you're right! Good catch.",
        "createdAt" : "2019-08-18T00:33:01Z",
        "updatedAt" : "2019-08-18T00:33:01Z",
        "lastEditedBy" : "cea850a3-e209-4f7b-bc8b-b377bbf3a19d",
        "tags" : [
        ]
      }
    ],
    "commit" : "fa38cba6abaddcb30cc7354f06b70e8bda4d5ef3",
    "line" : 249,
    "diffHunk" : "@@ -1,1 +1880,1884 @@                expiry = gmt_now + datetime.timedelta(days=365)\n\n            expiry_iso3339 = expiry.strftime(\"%Y-%m-%dT%H:%M:%S.00Z\")\n            body['certExpiryDate'] = expiry_iso3339\n            body['org'] = self.csr_org"
  },
  {
    "id" : "3dfb2d83-c7d9-418f-8a7b-3f6c124e53f6",
    "prId" : 60623,
    "prUrl" : "https://github.com/ansible/ansible/pull/60623#pullrequestreview-275612839",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "60752533-9e2b-45db-82cd-3eb718ecb951",
        "parentId" : null,
        "authorId" : "57db1e2a-9c1c-4c08-b54f-9731aff18e36",
        "body" : "...and then you have a user that wants to ensure `mode: u=rx`. ;-)\r\n\r\nThis is tough even with the `stat` module.",
        "createdAt" : "2019-08-15T12:40:21Z",
        "updatedAt" : "2019-08-17T19:36:00Z",
        "lastEditedBy" : "57db1e2a-9c1c-4c08-b54f-9731aff18e36",
        "tags" : [
        ]
      },
      {
        "id" : "e169b00e-68f6-4546-8403-e04708765294",
        "parentId" : "60752533-9e2b-45db-82cd-3eb718ecb951",
        "authorId" : "3c2a0f57-db61-42cd-9f60-337be7f6e7c6",
        "body" : "Is it possible to use `assertonly` to check this? I'm not sure whether that actually works.\r\n\r\nAlso, you could use the `file` module with `check_mode: yes` to see whether there would be a change, and `assert` on that :)",
        "createdAt" : "2019-08-15T12:54:44Z",
        "updatedAt" : "2019-08-17T19:36:00Z",
        "lastEditedBy" : "3c2a0f57-db61-42cd-9f60-337be7f6e7c6",
        "tags" : [
        ]
      },
      {
        "id" : "6f98396f-f270-4b4f-bb37-a157b4a83299",
        "parentId" : "60752533-9e2b-45db-82cd-3eb718ecb951",
        "authorId" : "57db1e2a-9c1c-4c08-b54f-9731aff18e36",
        "body" : "Hm, the `file` module in `check_mode` seems like the way to go then. Thanks for the tip! Maybe we should add it here too (e.g. `To check the additional parameters of this module also supported by the file module, you can use the file module in check_mode and see if the file is in the expected state.`)",
        "createdAt" : "2019-08-15T14:00:05Z",
        "updatedAt" : "2019-08-17T19:36:00Z",
        "lastEditedBy" : "57db1e2a-9c1c-4c08-b54f-9731aff18e36",
        "tags" : [
        ]
      },
      {
        "id" : "a1f265a0-e769-4990-8288-d45c8c4fc665",
        "parentId" : "60752533-9e2b-45db-82cd-3eb718ecb951",
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "`assertonly` does not care about file permissions. I've tested it with `devel`, `stable-2.8`, `stable-2.7` and `stable-2.6`. If `mode` does not match the mode of the file in `path`, it doesn't complain or change anything.",
        "createdAt" : "2019-08-15T19:04:07Z",
        "updatedAt" : "2019-08-17T19:36:00Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      }
    ],
    "commit" : "ecf7af302370705179f1bc92bf34784d7e58a18e",
    "line" : 197,
    "diffHunk" : "@@ -1,1 +576,580 @@# The following example shows one assertonly usage using all existing options for\n# assertonly, and shows how to emulate the behavior with the openssl_certificate_info,\n# openssl_csr_info, openssl_privatekey_info and assert modules:\n\n- openssl_certificate:"
  },
  {
    "id" : "c9d07445-5c0e-41e2-afd0-d4c4133e6ef4",
    "prId" : 65633,
    "prUrl" : "https://github.com/ansible/ansible/pull/65633#pullrequestreview-328890439",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6d2127ca-7577-46ec-aaea-84fd53fdfa8f",
        "parentId" : null,
        "authorId" : "7243ee41-f7f6-470f-8b39-aec91451b808",
        "body" : "I don't think the extra ',' here would hurt, are there any relevant style guidelines?",
        "createdAt" : "2019-12-09T08:36:43Z",
        "updatedAt" : "2019-12-09T08:41:33Z",
        "lastEditedBy" : "7243ee41-f7f6-470f-8b39-aec91451b808",
        "tags" : [
        ]
      },
      {
        "id" : "61de651f-0e95-4908-8b37-1f23956be382",
        "parentId" : "6d2127ca-7577-46ec-aaea-84fd53fdfa8f",
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "I don't think there's anything on that.\r\n\r\nI prefer trailing commas in general, since they reduce diff size when adding new entries later-on. If there's no trailing comma, this line needs to be modified as well.",
        "createdAt" : "2019-12-09T12:39:52Z",
        "updatedAt" : "2019-12-09T12:39:53Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      }
    ],
    "commit" : "8bfe5583ccf3e6e2edeba02273b80e7028425af6",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +2490,2494 @@            ['provider', 'entrust', ['entrust_requester_email', 'entrust_requester_name', 'entrust_requester_phone',\n                                     'entrust_api_user', 'entrust_api_key', 'entrust_api_client_cert_path',\n                                     'entrust_api_client_cert_key_path']],\n        ]\n    )"
  }
]