[
  {
    "id" : "a2a39856-1a7d-4896-ab8e-1aeb5012fecd",
    "prId" : 64431,
    "prUrl" : "https://github.com/ansible/ansible/pull/64431#pullrequestreview-324058206",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bd785e7d-f453-4f58-8643-07613f05bbb0",
        "parentId" : null,
        "authorId" : "87bf94e6-6a9f-420a-b644-aac039f6409f",
        "body" : "`client.start_execution` is idempotent but `start_execution` always returns `changed=True` if `action=start`. We probably want to `client.list_executions` to see if the execution is already running before proceeding.",
        "createdAt" : "2019-11-19T20:48:09Z",
        "updatedAt" : "2019-12-03T17:43:03Z",
        "lastEditedBy" : "87bf94e6-6a9f-420a-b644-aac039f6409f",
        "tags" : [
        ]
      },
      {
        "id" : "201af26b-a37f-4e81-9938-dae5ceb09064",
        "parentId" : "bd785e7d-f453-4f58-8643-07613f05bbb0",
        "authorId" : "8f8ddfeb-347a-4231-bc82-79d362fd33a9",
        "body" : "> The `list_executions` is eventually consistent. The results are best effort and may not reflect very recent updates and changes.\r\n\r\nSo we could potentially get false positives (changed=True) if the execution was already running but did not get listed by the `list_executions` call.",
        "createdAt" : "2019-11-20T03:24:23Z",
        "updatedAt" : "2019-12-03T17:43:03Z",
        "lastEditedBy" : "8f8ddfeb-347a-4231-bc82-79d362fd33a9",
        "tags" : [
        ]
      },
      {
        "id" : "bded68d3-ee79-4bf3-af3f-efb42401dcbd",
        "parentId" : "bd785e7d-f453-4f58-8643-07613f05bbb0",
        "authorId" : "8f8ddfeb-347a-4231-bc82-79d362fd33a9",
        "body" : "> StartExecution is idempotent. If StartExecution is called with the same name and input as a running execution, the call will succeed and return the same response as the original request. If the execution is closed or if the input is different, it will return a 400 ExecutionAlreadyExists error. Names can be reused after 90 days.\r\n\r\nI return `changed=False` if ExecutionAlreadyExists is returned. That would mean that a new execution was not started. \r\n\r\nBut I am not sure if we want to return `changed=False` in the case of a running execution. I guess that really depends on how the value of `changed` is going to be used further down the playbook. Also, if the AWS service isn't making the distinction clear maybe we don't need to either. What do you think?",
        "createdAt" : "2019-11-20T03:40:03Z",
        "updatedAt" : "2019-12-03T17:43:03Z",
        "lastEditedBy" : "8f8ddfeb-347a-4231-bc82-79d362fd33a9",
        "tags" : [
        ]
      },
      {
        "id" : "9ee5da61-4ab0-462e-88bf-5210afb89ba8",
        "parentId" : "bd785e7d-f453-4f58-8643-07613f05bbb0",
        "authorId" : "87bf94e6-6a9f-420a-b644-aac039f6409f",
        "body" : "I haven't actually used stepfunctions myself so I'm just going off the docs. AIUI, `ExecutionAlreadyExists` would only be returned on a running execution if the `execution_input` is different, not in a case where the input is the same.  As an ansible user who is new to step functions, I feel like if I gave the same input and ran the playbook twice I would expect the 2nd time to be `changed=false` if the first execution is still running.  But that doesn't mean that's how AWS users familiar with step functions will expect it.",
        "createdAt" : "2019-11-20T16:39:35Z",
        "updatedAt" : "2019-12-03T17:43:03Z",
        "lastEditedBy" : "87bf94e6-6a9f-420a-b644-aac039f6409f",
        "tags" : [
        ]
      },
      {
        "id" : "b23f888e-41be-4021-a233-c87f9191efc6",
        "parentId" : "bd785e7d-f453-4f58-8643-07613f05bbb0",
        "authorId" : "8f8ddfeb-347a-4231-bc82-79d362fd33a9",
        "body" : "We could just document that the value of `changed` for the tasks will be aligned to how boto3 call returns. If we get `ExecutionAlreadyExists`, we return `False`. Otherwise we return `True`. Again, what the right value for `changed` is depends on how the user of the module wishes to use it. We should just document it precisely and then gather feedback from the users as they start using the module. Almost wish there was a thing like beta modules to gather early feedback.",
        "createdAt" : "2019-11-20T20:43:34Z",
        "updatedAt" : "2019-12-03T17:43:03Z",
        "lastEditedBy" : "8f8ddfeb-347a-4231-bc82-79d362fd33a9",
        "tags" : [
        ]
      },
      {
        "id" : "d872597a-67c8-4437-9f5f-20c89889db1b",
        "parentId" : "bd785e7d-f453-4f58-8643-07613f05bbb0",
        "authorId" : "8f8ddfeb-347a-4231-bc82-79d362fd33a9",
        "body" : "Between ansible and AWS, we should be more aligned with AWS on this one, IMO. If they don't make a distinction between `ExecutionAlreadyExists` and `ExecutionCurrentlyRunning`, then we shouldn't either. This and the fact that `list_executions` is only eventually consistent makes me think the current behavior is what we want.",
        "createdAt" : "2019-11-20T20:53:10Z",
        "updatedAt" : "2019-12-03T17:43:03Z",
        "lastEditedBy" : "8f8ddfeb-347a-4231-bc82-79d362fd33a9",
        "tags" : [
        ]
      },
      {
        "id" : "8cf80b8b-2397-476e-8c07-d4d0db09609c",
        "parentId" : "bd785e7d-f453-4f58-8643-07613f05bbb0",
        "authorId" : "87bf94e6-6a9f-420a-b644-aac039f6409f",
        "body" : "That makes sense, and I definitely agree we should very clearly document the behaviour.\r\n@tremble, any thoughts on this approach to idempotency here before we proceed?",
        "createdAt" : "2019-11-21T16:46:57Z",
        "updatedAt" : "2019-12-03T17:43:03Z",
        "lastEditedBy" : "87bf94e6-6a9f-420a-b644-aac039f6409f",
        "tags" : [
        ]
      },
      {
        "id" : "e0500938-44b2-4d76-8afa-e2b3fb52e76d",
        "parentId" : "bd785e7d-f453-4f58-8643-07613f05bbb0",
        "authorId" : "7243ee41-f7f6-470f-8b39-aec91451b808",
        "body" : "I have a *slight* preference for @jillr's approach, and trying to ensure that check_mode behaves as you might expect.  But it's not a strong enough preference to hold anything up.  The behaviour should certainly be documented though.",
        "createdAt" : "2019-11-21T20:14:01Z",
        "updatedAt" : "2019-12-03T17:43:03Z",
        "lastEditedBy" : "7243ee41-f7f6-470f-8b39-aec91451b808",
        "tags" : [
        ]
      },
      {
        "id" : "2b9c8778-fa18-4544-b7fd-129e4cc6e826",
        "parentId" : "bd785e7d-f453-4f58-8643-07613f05bbb0",
        "authorId" : "8f8ddfeb-347a-4231-bc82-79d362fd33a9",
        "body" : "So...? What should we do here? Document the behavior clearly? If that is what we plan to do I can push another patch.\r\nGiven that with the eventually consistent `list_executions` you could get inconsistent results, do we still want to go with Ansible's definition for idempotency here?",
        "createdAt" : "2019-11-22T20:41:08Z",
        "updatedAt" : "2019-12-03T17:43:03Z",
        "lastEditedBy" : "8f8ddfeb-347a-4231-bc82-79d362fd33a9",
        "tags" : [
        ]
      },
      {
        "id" : "5f98fa04-78ae-4d63-b285-c4cbd1cf17a6",
        "parentId" : "bd785e7d-f453-4f58-8643-07613f05bbb0",
        "authorId" : "6b7e4265-ae86-4269-9bd7-f8ffa9085df6",
        "body" : "I like @jillr's approach. We should err on the side of trying to keep our AWS modules similar. There are a lot of AWS services that use eventual consistency so we have to work around it as best we can. Using waiters after making API calls can help a little bit, though I'm not sure that it's applicable here (I see that there are no boto3 built-in waiters yet for this service, but you could possibly add your own criteria for waiting to https://github.com/ansible/ansible/blob/devel/lib/ansible/module_utils/aws/waiters.py). In some circumstances we've added brief pause tasks to integration tests to help. Do add a note in the documentation about the eventual consistency problem.",
        "createdAt" : "2019-11-25T18:51:05Z",
        "updatedAt" : "2019-12-03T17:43:03Z",
        "lastEditedBy" : "6b7e4265-ae86-4269-9bd7-f8ffa9085df6",
        "tags" : [
        ]
      },
      {
        "id" : "7c6f4706-0b6a-44d3-b925-89765c3f44dd",
        "parentId" : "bd785e7d-f453-4f58-8643-07613f05bbb0",
        "authorId" : "8f8ddfeb-347a-4231-bc82-79d362fd33a9",
        "body" : "I have pushed more changes. For start execution, we now list all executions and check if there is an execution with the same name. If there is one, the module exits with `changed=False`. For stop execution, we describe the execution and exit with `changed=False` unless the execution status is '_RUNNING_'. I have also added tests around these changes and comments wherever I felt necessary.",
        "createdAt" : "2019-11-28T05:13:32Z",
        "updatedAt" : "2019-12-03T17:43:03Z",
        "lastEditedBy" : "8f8ddfeb-347a-4231-bc82-79d362fd33a9",
        "tags" : [
        ]
      }
    ],
    "commit" : "8c65e67c20f4721692b5e3c883e18de09afe65b1",
    "line" : 191,
    "diffHunk" : "@@ -1,1 +189,193 @@    action = module.params.get('action')\n    if action == \"start\":\n        start_execution(module, sfn_client)\n    else:\n        stop_execution(module, sfn_client)"
  },
  {
    "id" : "940ad7a8-66b7-480b-85d1-56ddee7d8986",
    "prId" : 64431,
    "prUrl" : "https://github.com/ansible/ansible/pull/64431#pullrequestreview-324057060",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "419cccdd-3d00-4a30-8e6d-ae922635a0a5",
        "parentId" : null,
        "authorId" : "6b7e4265-ae86-4269-9bd7-f8ffa9085df6",
        "body" : "Please fail safely for the module if a BotoCoreError exception happens here too and in stop_execution.",
        "createdAt" : "2019-11-25T18:53:46Z",
        "updatedAt" : "2019-12-03T17:43:03Z",
        "lastEditedBy" : "6b7e4265-ae86-4269-9bd7-f8ffa9085df6",
        "tags" : [
        ]
      },
      {
        "id" : "fdd83e74-ea1f-4ec7-8ffd-47c9c6f2d4ee",
        "parentId" : "419cccdd-3d00-4a30-8e6d-ae922635a0a5",
        "authorId" : "8f8ddfeb-347a-4231-bc82-79d362fd33a9",
        "body" : "fixed, thanks for the review",
        "createdAt" : "2019-11-28T05:07:36Z",
        "updatedAt" : "2019-12-03T17:43:03Z",
        "lastEditedBy" : "8f8ddfeb-347a-4231-bc82-79d362fd33a9",
        "tags" : [
        ]
      }
    ],
    "commit" : "8c65e67c20f4721692b5e3c883e18de09afe65b1",
    "line" : 135,
    "diffHunk" : "@@ -1,1 +133,137 @@            module.exit_json(changed=False)\n        module.fail_json_aws(e, msg=\"Failed to start execution.\")\n\n    module.exit_json(changed=True, **camel_dict_to_snake_dict(res_execution))\n"
  }
]