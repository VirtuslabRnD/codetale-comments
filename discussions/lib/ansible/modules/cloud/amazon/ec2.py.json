[
  {
    "id" : "d0d9058e-c426-42e7-89cd-395758711fd2",
    "prId" : 23053,
    "prUrl" : "https://github.com/ansible/ansible/pull/23053#pullrequestreview-29875466",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "53c9c4af-c562-4955-81f7-b9de17e6e034",
        "parentId" : null,
        "authorId" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "body" : "Do we also need to guard the code here: https://github.com/ansible/ansible/pull/23053/files#diff-dea76a894873bd8fbd3173b3a8610a11L1280 or does  ec2.create_tags() handle an empty list fine?",
        "createdAt" : "2017-03-29T23:35:05Z",
        "updatedAt" : "2017-03-30T00:10:50Z",
        "lastEditedBy" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "tags" : [
        ]
      },
      {
        "id" : "1311e3fd-1233-439c-9bec-1261c9a8c177",
        "parentId" : "53c9c4af-c562-4955-81f7-b9de17e6e034",
        "authorId" : "183d9a20-6a5e-4432-9fe9-9fd6fe9514fb",
        "body" : "Looks like we do need to guard against an empty `instids` list:\r\n\r\n```\r\n----> 1 ec2.create_tags([],{})\r\n\r\n/usr/lib/python2.7/site-packages/boto/ec2/connection.pyc in create_tags(self, resource_ids, tags, dry_run)\r\n   4217         if dry_run:\r\n   4218             params['DryRun'] = 'true'\r\n-> 4219         return self.get_status('CreateTags', params, verb='POST')\r\n   4220 \r\n   4221     def delete_tags(self, resource_ids, tags, dry_run=False):\r\n\r\n/usr/lib/python2.7/site-packages/boto/connection.pyc in get_status(self, action, params, path, parent, verb)\r\n   1225             boto.log.error('%s %s' % (response.status, response.reason))\r\n   1226             boto.log.error('%s' % body)\r\n-> 1227             raise self.ResponseError(response.status, response.reason, body)\r\n\r\nEC2ResponseError: EC2ResponseError: 400 Bad Request\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<Response><Errors><Error><Code>MissingParameter</Code><Message>The request must contain the parameter resourceIdSet</Message></Error></Errors><RequestID>62f52f6f-c907-412a-a4d0-68ce1f54acc2</RequestID></Response>\r\n```",
        "createdAt" : "2017-03-30T00:16:59Z",
        "updatedAt" : "2017-03-30T00:16:59Z",
        "lastEditedBy" : "183d9a20-6a5e-4432-9fe9-9fd6fe9514fb",
        "tags" : [
        ]
      },
      {
        "id" : "cab90af9-e3e0-400c-bccd-c35892f288cd",
        "parentId" : "53c9c4af-c562-4955-81f7-b9de17e6e034",
        "authorId" : "6b7e4265-ae86-4269-9bd7-f8ffa9085df6",
        "body" : "@willthames, doesn't my commit address it?",
        "createdAt" : "2017-03-30T00:17:59Z",
        "updatedAt" : "2017-03-30T00:17:59Z",
        "lastEditedBy" : "6b7e4265-ae86-4269-9bd7-f8ffa9085df6",
        "tags" : [
        ]
      }
    ],
    "commit" : "2eb3d1e291c4bf880d9b1a1afbcf04b727b46042",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +1229,1233 @@                    instids = await_spot_requests(module, ec2, res, count)\n                else:\n                    instids = []\n        except boto.exception.BotoServerError as e:\n            module.fail_json(msg=\"Instance creation failed => %s: %s\" % (e.error_code, e.error_message))"
  }
]