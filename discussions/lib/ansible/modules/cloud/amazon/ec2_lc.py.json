[
  {
    "id" : "f96b9a4b-76cf-4125-bc88-2c51b5a6871e",
    "prId" : 21049,
    "prUrl" : "https://github.com/ansible/ansible/pull/21049#pullrequestreview-24928836",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "97f01b1f-daa8-4d04-bb81-eccd8dfa5e7d",
        "parentId" : null,
        "authorId" : "183d9a20-6a5e-4432-9fe9-9fd6fe9514fb",
        "body" : "This is a bit magic as in \"where did this method come from\" but of course, we're still importing `*`. Would be good to get that tidied up.",
        "createdAt" : "2017-02-14T10:18:00Z",
        "updatedAt" : "2017-03-24T05:51:56Z",
        "lastEditedBy" : "183d9a20-6a5e-4432-9fe9-9fd6fe9514fb",
        "tags" : [
        ]
      },
      {
        "id" : "2551f2a5-7c40-4ac7-a3d1-7f5e4937e80e",
        "parentId" : "97f01b1f-daa8-4d04-bb81-eccd8dfa5e7d",
        "authorId" : "8e448afa-36a6-4325-b7c1-0522cb01977c",
        "body" : "@willthames all done :)",
        "createdAt" : "2017-03-03T09:01:14Z",
        "updatedAt" : "2017-03-24T05:51:56Z",
        "lastEditedBy" : "8e448afa-36a6-4325-b7c1-0522cb01977c",
        "tags" : [
        ]
      }
    ],
    "commit" : "22b165c54cf31add0a63628aba29275bb1d05feb",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +187,191 @@    key_name = module.params.get('key_name')\n    try:\n        security_groups = get_ec2_security_group_ids_from_names(module.params.get('security_groups'), ec2_connect(module), vpc_id=None, boto3=False)\n    except ValueError as e:\n        module.fail_json(msg=str(e))"
  },
  {
    "id" : "4b0951d6-23d4-4ae3-aeeb-59a4edc99a20",
    "prId" : 21049,
    "prUrl" : "https://github.com/ansible/ansible/pull/21049#pullrequestreview-29342954",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "804ee8b0-1dd8-4f7d-a000-0ada0ee7429d",
        "parentId" : null,
        "authorId" : "183d9a20-6a5e-4432-9fe9-9fd6fe9514fb",
        "body" : "I prefer a second (and perhaps even third) `from ansible.module_utils.ec2 import` line to a line continuation (brackets also work, but are subjectively less elegant). Not a blocker though",
        "createdAt" : "2017-03-28T01:52:13Z",
        "updatedAt" : "2017-03-28T01:52:13Z",
        "lastEditedBy" : "183d9a20-6a5e-4432-9fe9-9fd6fe9514fb",
        "tags" : [
        ]
      }
    ],
    "commit" : "22b165c54cf31add0a63628aba29275bb1d05feb",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +149,153 @@from ansible.module_utils.basic import *\nfrom ansible.module_utils.ec2 import ec2_argument_spec, ec2_connect, connect_to_aws, \\\n    get_ec2_security_group_ids_from_names, get_aws_connection_info, AnsibleAWSError\n\ntry:"
  },
  {
    "id" : "d11318e0-21d1-4a4c-a9e6-3529ccab9003",
    "prId" : 23778,
    "prUrl" : "https://github.com/ansible/ansible/pull/23778#pullrequestreview-33662241",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "df45a9a6-10ee-48a1-86b8-ee22307e325e",
        "parentId" : null,
        "authorId" : "96aeecbb-c275-402c-b904-a795c82efb48",
        "body" : "LGTM",
        "createdAt" : "2017-04-20T02:28:37Z",
        "updatedAt" : "2017-04-20T02:28:51Z",
        "lastEditedBy" : "96aeecbb-c275-402c-b904-a795c82efb48",
        "tags" : [
        ]
      }
    ],
    "commit" : "cf7cf2ba177143619cee0a0cc06b8e011e42177e",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +130,134 @@\nEXAMPLES = '''\n- name: note that encrypted volumes are only supported in >= Ansible 2.4\n  ec2_lc:\n    name: special"
  },
  {
    "id" : "fa681e94-8a3c-4b82-9fa7-703134bdce17",
    "prId" : 26348,
    "prUrl" : "https://github.com/ansible/ansible/pull/26348#pullrequestreview-53403715",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c4d017d7-3139-46b6-9244-f715cd1329db",
        "parentId" : null,
        "authorId" : "06ab4cf8-4a18-478e-93ee-69929f4bffc6",
        "body" : "It looks like just setting `instance_monitoring` to `true` now won't really do anything, since basic monitoring is on by default and the value of `advanced_instance_monitoring` would default to `False`. This seems confusing. ",
        "createdAt" : "2017-07-26T20:00:48Z",
        "updatedAt" : "2017-08-01T05:16:32Z",
        "lastEditedBy" : "06ab4cf8-4a18-478e-93ee-69929f4bffc6",
        "tags" : [
        ]
      },
      {
        "id" : "5375fb94-fe3d-406c-b94d-8bf10baeb4cb",
        "parentId" : "c4d017d7-3139-46b6-9244-f715cd1329db",
        "authorId" : "4b241267-f137-4c1d-ad18-6495d90001e3",
        "body" : "as per my notes above",
        "createdAt" : "2017-07-27T12:10:29Z",
        "updatedAt" : "2017-08-01T05:16:32Z",
        "lastEditedBy" : "4b241267-f137-4c1d-ad18-6495d90001e3",
        "tags" : [
        ]
      },
      {
        "id" : "e1654988-6202-435a-b207-a7df5ecf994a",
        "parentId" : "c4d017d7-3139-46b6-9244-f715cd1329db",
        "authorId" : "4b241267-f137-4c1d-ad18-6495d90001e3",
        "body" : "hmm.. unless the boto3 docs have changed since I last checked, there isn't actually advanced instance monitoring. The options are default and detailed. Anyway, `instance_monitoring` and `advanced_instance_monitoring` (read detailed) are now synonymous. Let me know if this needs further changes.",
        "createdAt" : "2017-07-31T05:11:00Z",
        "updatedAt" : "2017-08-07T23:41:59Z",
        "lastEditedBy" : "4b241267-f137-4c1d-ad18-6495d90001e3",
        "tags" : [
        ]
      },
      {
        "id" : "1b46b918-7532-4742-95f5-732199f74062",
        "parentId" : "c4d017d7-3139-46b6-9244-f715cd1329db",
        "authorId" : "4b241267-f137-4c1d-ad18-6495d90001e3",
        "body" : "have removed `advanced_instance_monitoring` as the alias is not necessary - the parameter is just represented differently between boto and boto3",
        "createdAt" : "2017-08-01T05:17:36Z",
        "updatedAt" : "2017-08-01T05:18:12Z",
        "lastEditedBy" : "4b241267-f137-4c1d-ad18-6495d90001e3",
        "tags" : [
        ]
      }
    ],
    "commit" : "92233d2e998cec9650760e23fc32829315e71115",
    "line" : 351,
    "diffHunk" : "@@ -1,1 +293,297 @@        launch_config['ClassicLinkVPCId'] = classic_link_vpc_id\n\n    if instance_monitoring:\n        launch_config['InstanceMonitoring'] = {'Enabled': instance_monitoring}\n"
  },
  {
    "id" : "4f85198e-bd2b-405b-9b7b-fc572406812d",
    "prId" : 32592,
    "prUrl" : "https://github.com/ansible/ansible/pull/32592#pullrequestreview-74459067",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5fb82785-872a-43bd-8fbc-32e6e996f87e",
        "parentId" : null,
        "authorId" : "8f8ddfeb-347a-4231-bc82-79d362fd33a9",
        "body" : "I created a couple of launch configs to verify this. But I never get `volume_type` or `delete_on_termination` info back in the returned values. Is it returned conditionally, i.e., not always returned even when `state=present`?\r\n\r\nIn fact, the `result.block_device_mappings` that is returned seems incomplete. Looking at the code, it seems like we populate a lot of more info in that dictionary. Should I create a separate issue for that?",
        "createdAt" : "2017-11-06T15:30:52Z",
        "updatedAt" : "2017-11-06T15:31:17Z",
        "lastEditedBy" : "8f8ddfeb-347a-4231-bc82-79d362fd33a9",
        "tags" : [
        ]
      },
      {
        "id" : "3e7fb922-6736-4d1e-b833-5b2ae4a08558",
        "parentId" : "5fb82785-872a-43bd-8fbc-32e6e996f87e",
        "authorId" : "6b7e4265-ae86-4269-9bd7-f8ffa9085df6",
        "body" : "You're right, looks like things are not being consistently returned... I created a basic launch config and then ran the [return_skeleton_generator](https://github.com/ansible/ansible/blob/devel/hacking/return_skeleton_generator.py) on it. I'll do that a couple more times with different options and try to find what's conditionally returned.",
        "createdAt" : "2017-11-06T15:37:10Z",
        "updatedAt" : "2017-11-06T15:37:10Z",
        "lastEditedBy" : "6b7e4265-ae86-4269-9bd7-f8ffa9085df6",
        "tags" : [
        ]
      },
      {
        "id" : "1379ac31-3e2c-45d5-9076-8d86e37a06a4",
        "parentId" : "5fb82785-872a-43bd-8fbc-32e6e996f87e",
        "authorId" : "6b7e4265-ae86-4269-9bd7-f8ffa9085df6",
        "body" : "@prasadkatti Actually. I wrote this on Friday and then forgot- I generated this running Ansible 2.3 (since the module is stableinterface it should be the same). So the reason yours is different is either because something is conditionally returned or because backwards compatibility has been broken. This is what *should* be returned.",
        "createdAt" : "2017-11-06T15:45:31Z",
        "updatedAt" : "2017-11-06T15:46:05Z",
        "lastEditedBy" : "6b7e4265-ae86-4269-9bd7-f8ffa9085df6",
        "tags" : [
        ]
      }
    ],
    "commit" : "e9fd15122806055ce5b642a0d9c81e00d48bea5c",
    "line" : 181,
    "diffHunk" : "@@ -1,1 +352,356 @@      type: string\n      sample: ''\n    volume_type:\n      description: The volume type (one of standard, io1, gp2).\n      returned: when I(state=present)"
  }
]