[
  {
    "id" : "4b84e1f8-7c5a-4e09-be76-240500a4932c",
    "prId" : 24206,
    "prUrl" : "https://github.com/ansible/ansible/pull/24206#pullrequestreview-41724212",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b830916f-bdab-485b-91c6-60d81298c0b8",
        "parentId" : null,
        "authorId" : "183d9a20-6a5e-4432-9fe9-9fd6fe9514fb",
        "body" : "if state is present but cert, key or chain is not passed in, then these variables won't be set at all. That is bad.\r\n\r\nJust get rid of the `if` statements. ",
        "createdAt" : "2017-06-02T08:59:35Z",
        "updatedAt" : "2017-06-02T09:01:48Z",
        "lastEditedBy" : "183d9a20-6a5e-4432-9fe9-9fd6fe9514fb",
        "tags" : [
        ]
      }
    ],
    "commit" : "94aef80b3e94295ae13fd9313925f59706b8c2fb",
    "line" : 122,
    "diffHunk" : "@@ -1,1 +262,266 @@    if state == 'present':\n        if module.params.get('cert') is not None:\n            cert = module.params.get('cert')\n        if module.params.get('key') is not None:\n            key = module.params.get('key')"
  },
  {
    "id" : "14ba8490-effe-420b-8133-a3e1f3c7dc4e",
    "prId" : 24206,
    "prUrl" : "https://github.com/ansible/ansible/pull/24206#pullrequestreview-41724212",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1487f7cc-a086-4f5e-a832-efc1002c1c38",
        "parentId" : null,
        "authorId" : "183d9a20-6a5e-4432-9fe9-9fd6fe9514fb",
        "body" : "No need for `default=None` or `required=False` in the argument_spec.",
        "createdAt" : "2017-06-02T09:00:03Z",
        "updatedAt" : "2017-06-02T09:01:48Z",
        "lastEditedBy" : "183d9a20-6a5e-4432-9fe9-9fd6fe9514fb",
        "tags" : [
        ]
      }
    ],
    "commit" : "94aef80b3e94295ae13fd9313925f59706b8c2fb",
    "line" : 107,
    "diffHunk" : "@@ -1,1 +225,229 @@            default=None, required=True, choices=['present', 'absent']),\n        name=dict(default=None, required=False),\n        cert=dict(default=None, required=False),\n        key=dict(default=None, required=False, no_log=True),\n        cert_chain=dict(default=None, required=False),"
  },
  {
    "id" : "f6db817d-d4af-4cee-83f5-1d2bbf73eaf6",
    "prId" : 24206,
    "prUrl" : "https://github.com/ansible/ansible/pull/24206#pullrequestreview-41724212",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "aad97393-0e90-46d3-8fa9-cefe54b6eadb",
        "parentId" : null,
        "authorId" : "183d9a20-6a5e-4432-9fe9-9fd6fe9514fb",
        "body" : "might as well get rid of any `required: false` and `default: null`s",
        "createdAt" : "2017-06-02T09:01:14Z",
        "updatedAt" : "2017-06-02T09:01:48Z",
        "lastEditedBy" : "183d9a20-6a5e-4432-9fe9-9fd6fe9514fb",
        "tags" : [
        ]
      }
    ],
    "commit" : "94aef80b3e94295ae13fd9313925f59706b8c2fb",
    "line" : 41,
    "diffHunk" : "@@ -1,1 +60,64 @@      - The certificate body in PEM encoded format.\n      - Note that prior to 2.4, this parameter expected a path to a file. Since 2.4 this is now accomplished using a lookup plugin. See examples for detail\n    required: false\n  key:\n    description:"
  },
  {
    "id" : "f5f9253b-696f-414d-95f2-5829e3248b39",
    "prId" : 24206,
    "prUrl" : "https://github.com/ansible/ansible/pull/24206#pullrequestreview-46166293",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "72fd4e23-e443-4dcf-bd3f-b7dd3c14c47b",
        "parentId" : null,
        "authorId" : "6b7e4265-ae86-4269-9bd7-f8ffa9085df6",
        "body" : "This looks good. In addition to removing the ifs can you add a required_if to [AnsibleModule](https://github.com/ansible/ansible/pull/24206/files#diff-ee240e40955a7a90ec4e28effc4a4570L250)? ...something like required_if=[('state', 'present', ['cert', 'cert_chain', 'key'])] so the user gets a helpful error",
        "createdAt" : "2017-06-02T15:04:43Z",
        "updatedAt" : "2017-06-02T15:05:42Z",
        "lastEditedBy" : "6b7e4265-ae86-4269-9bd7-f8ffa9085df6",
        "tags" : [
        ]
      },
      {
        "id" : "5174aae9-6a23-47a8-88b7-09f5bbaafcb4",
        "parentId" : "72fd4e23-e443-4dcf-bd3f-b7dd3c14c47b",
        "authorId" : "03186e55-a634-440c-a7c6-775405ddce48",
        "body" : "I agree to a degree, however by doing so you force people to specify those params when they simply want to rename.",
        "createdAt" : "2017-06-26T02:49:29Z",
        "updatedAt" : "2017-06-26T02:49:29Z",
        "lastEditedBy" : "03186e55-a634-440c-a7c6-775405ddce48",
        "tags" : [
        ]
      }
    ],
    "commit" : "94aef80b3e94295ae13fd9313925f59706b8c2fb",
    "line" : 122,
    "diffHunk" : "@@ -1,1 +262,266 @@    if state == 'present':\n        if module.params.get('cert') is not None:\n            cert = module.params.get('cert')\n        if module.params.get('key') is not None:\n            key = module.params.get('key')"
  },
  {
    "id" : "0e3d8658-0e9c-4cfc-b8f1-0872b77bf310",
    "prId" : 24206,
    "prUrl" : "https://github.com/ansible/ansible/pull/24206#pullrequestreview-46279771",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e51f0e52-837e-4923-91bc-d4e9964586ae",
        "parentId" : null,
        "authorId" : "03186e55-a634-440c-a7c6-775405ddce48",
        "body" : "I know this has already been merged, however did this make the module less friendly for those using it on remote hosts?  i.e.  lookup will not work and therefore slurp would have to be used, and an extra task added in order to achieve the same thing.",
        "createdAt" : "2017-06-26T02:53:09Z",
        "updatedAt" : "2017-06-26T02:53:09Z",
        "lastEditedBy" : "03186e55-a634-440c-a7c6-775405ddce48",
        "tags" : [
        ]
      },
      {
        "id" : "92e0709b-b4a5-45b7-9b31-0eebf9883c0a",
        "parentId" : "e51f0e52-837e-4923-91bc-d4e9964586ae",
        "authorId" : "03186e55-a634-440c-a7c6-775405ddce48",
        "body" : "See https://github.com/ansible/ansible/pull/20787 for another alternative, which was since removed.",
        "createdAt" : "2017-06-26T03:01:31Z",
        "updatedAt" : "2017-06-26T03:01:31Z",
        "lastEditedBy" : "03186e55-a634-440c-a7c6-775405ddce48",
        "tags" : [
        ]
      },
      {
        "id" : "614e52a8-c348-4e76-8909-140b2a719a66",
        "parentId" : "e51f0e52-837e-4923-91bc-d4e9964586ae",
        "authorId" : "6b7e4265-ae86-4269-9bd7-f8ffa9085df6",
        "body" : "@ProjectRice Good point. If you get a chance would you please review https://github.com/ansible/ansible/pull/26097 so paths can be specified?",
        "createdAt" : "2017-06-26T14:34:18Z",
        "updatedAt" : "2017-06-26T14:34:19Z",
        "lastEditedBy" : "6b7e4265-ae86-4269-9bd7-f8ffa9085df6",
        "tags" : [
        ]
      }
    ],
    "commit" : "94aef80b3e94295ae13fd9313925f59706b8c2fb",
    "line" : 85,
    "diffHunk" : "@@ -1,1 +85,89 @@    name: very_ssl\n    state: present\n    cert: \"{{ lookup('file', 'path/to/cert') }}\"\n    key: \"{{ lookup('file', 'path/to/key') }}\"\n    cert_chain: \"{{ lookup('file', 'path/to/certchain') }}\""
  },
  {
    "id" : "0e4f4a3d-a3b8-4dff-8587-63e90ed90af9",
    "prId" : 26097,
    "prUrl" : "https://github.com/ansible/ansible/pull/26097#pullrequestreview-50352635",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "17fcb163-1d8a-463e-ae83-299e6f3a821f",
        "parentId" : null,
        "authorId" : "06ab4cf8-4a18-478e-93ee-69929f4bffc6",
        "body" : "There is one downside to this approach: if a user passes a nonexistent file path, this module will error out with some variation of `400: invalid certificate`. In that case, we need to make sure the error message surfaces the information about what certs were invalid. \r\n\r\nA way to check this might be if the \"cert\" is less than 200 characters, we can be certain it's supposed to be a file path since the server certs have to be at least 1024 bit. Over that, it's a maybe, but we should print out the cert that's supposedly \"invalid\" so people can tell what's wrong. ",
        "createdAt" : "2017-06-28T21:59:00Z",
        "updatedAt" : "2017-07-12T13:08:18Z",
        "lastEditedBy" : "06ab4cf8-4a18-478e-93ee-69929f4bffc6",
        "tags" : [
        ]
      },
      {
        "id" : "1cf39064-ed5c-44ee-987e-6670cf22e4ec",
        "parentId" : "17fcb163-1d8a-463e-ae83-299e6f3a821f",
        "authorId" : "03186e55-a634-440c-a7c6-775405ddce48",
        "body" : "Can we cater for this checking if cert etc is not None somewhere else?",
        "createdAt" : "2017-06-29T04:16:24Z",
        "updatedAt" : "2017-07-12T13:08:18Z",
        "lastEditedBy" : "03186e55-a634-440c-a7c6-775405ddce48",
        "tags" : [
        ]
      },
      {
        "id" : "cb92e355-991c-4514-b62d-a287eeca80e5",
        "parentId" : "17fcb163-1d8a-463e-ae83-299e6f3a821f",
        "authorId" : "06ab4cf8-4a18-478e-93ee-69929f4bffc6",
        "body" : "No, because someone could fat-finger a path such as `secretsss/cert.pem` when really the directory is called `secrets`. Then the `isfile` would fail and the module would try to upload the *string of the broken path* `secretsss/cert.pem` as the actual cert body (which would fail) ",
        "createdAt" : "2017-06-29T11:38:56Z",
        "updatedAt" : "2017-07-12T13:08:18Z",
        "lastEditedBy" : "06ab4cf8-4a18-478e-93ee-69929f4bffc6",
        "tags" : [
        ]
      },
      {
        "id" : "98dbe6b3-72f8-4ce5-a3dc-d28f357c6baf",
        "parentId" : "17fcb163-1d8a-463e-ae83-299e6f3a821f",
        "authorId" : "03186e55-a634-440c-a7c6-775405ddce48",
        "body" : "And unfortunately it looks like iam doens't require you to have the PEM headers.  At least via the gui anyway, so assuming its the same for CLI",
        "createdAt" : "2017-06-29T20:30:19Z",
        "updatedAt" : "2017-07-12T13:08:18Z",
        "lastEditedBy" : "03186e55-a634-440c-a7c6-775405ddce48",
        "tags" : [
        ]
      },
      {
        "id" : "8304fc62-f816-488b-9b31-80ee56bc5e19",
        "parentId" : "17fcb163-1d8a-463e-ae83-299e6f3a821f",
        "authorId" : "03186e55-a634-440c-a7c6-775405ddce48",
        "body" : "I stand corrected, uploading certs/keys in the AWS GUI without the PEM headers does not work.\r\n\r\nPerhaps we could use their regex pattern as per the [API reference](https://docs.aws.amazon.com/IAM/latest/APIReference/API_UploadServerCertificate.html)\r\nor  simply check for the headers?  eg -----BEGIN",
        "createdAt" : "2017-06-29T21:31:58Z",
        "updatedAt" : "2017-07-12T13:08:18Z",
        "lastEditedBy" : "03186e55-a634-440c-a7c6-775405ddce48",
        "tags" : [
        ]
      },
      {
        "id" : "15f30966-56c3-4875-8956-bf092d4dfb6b",
        "parentId" : "17fcb163-1d8a-463e-ae83-299e6f3a821f",
        "authorId" : "03186e55-a634-440c-a7c6-775405ddce48",
        "body" : "I've also double checked what happens in the scenario you mentioned, and below is the result I receive.  So I actually this this method is fine, and there is no need to change it\r\n\r\nApart from ensuring the params are not None before checking if they are an existing file.\r\n\r\n```\r\nBotoServerError: 400 Bad Request\\n<ErrorResponse xmlns=\\\"https://iam.amazonaws.com/doc/2010-05-08/\\\">\r\n<Error>\r\n    <Type>Sender</Type>\r\n    <Code>MalformedCertificate</Code>\r\n    <Message>Unable to parse certificate. Please ensure the certificate is in PEM format.</Message>\r\n  </Error>\r\n```",
        "createdAt" : "2017-06-29T21:50:27Z",
        "updatedAt" : "2017-07-12T13:08:18Z",
        "lastEditedBy" : "03186e55-a634-440c-a7c6-775405ddce48",
        "tags" : [
        ]
      },
      {
        "id" : "6ecd1743-728a-487d-bc5e-c53ef0588c22",
        "parentId" : "17fcb163-1d8a-463e-ae83-299e6f3a821f",
        "authorId" : "f9957d6e-a2fb-4ed9-a092-5f5115b02d78",
        "body" : "We can check if the string is a cert easily.  Certs are always in ASCII format (AWS doesn't accept binary certificates) and PEM certs will always start with `-----BEGIN`.  That would imply we can check for this as an identifier of a Cert (vs a file path)",
        "createdAt" : "2017-07-04T09:57:52Z",
        "updatedAt" : "2017-07-12T13:08:18Z",
        "lastEditedBy" : "f9957d6e-a2fb-4ed9-a092-5f5115b02d78",
        "tags" : [
        ]
      },
      {
        "id" : "cf14216d-5c71-4989-865c-0ceebfd82dc2",
        "parentId" : "17fcb163-1d8a-463e-ae83-299e6f3a821f",
        "authorId" : "f9957d6e-a2fb-4ed9-a092-5f5115b02d78",
        "body" : "@ProjectRice Sorry just saw your comment mentioning the same :)",
        "createdAt" : "2017-07-04T10:16:35Z",
        "updatedAt" : "2017-07-12T13:08:18Z",
        "lastEditedBy" : "f9957d6e-a2fb-4ed9-a092-5f5115b02d78",
        "tags" : [
        ]
      },
      {
        "id" : "dac448d6-1222-49a7-b09a-254bdecf5850",
        "parentId" : "17fcb163-1d8a-463e-ae83-299e6f3a821f",
        "authorId" : "06ab4cf8-4a18-478e-93ee-69929f4bffc6",
        "body" : "I'd rather not try to implement cert validation, in case AWS changes what they accept. ",
        "createdAt" : "2017-07-17T15:20:56Z",
        "updatedAt" : "2017-07-17T15:22:10Z",
        "lastEditedBy" : "06ab4cf8-4a18-478e-93ee-69929f4bffc6",
        "tags" : [
        ]
      }
    ],
    "commit" : "c92c6d1a64f748cd98c54a880b3c3f9c3571bf55",
    "line" : 92,
    "diffHunk" : "@@ -1,1 +286,290 @@    dup_ok = module.params.get('dup_ok')\n    if state == 'present' and not new_name and not new_path:\n        cert, key, cert_chain = load_data(cert=module.params.get('cert'),\n                                          key=module.params.get('key'),\n                                          cert_chain=module.params.get('cert_chain'))"
  }
]