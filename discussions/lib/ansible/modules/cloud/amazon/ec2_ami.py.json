[
  {
    "id" : "f14d21e2-2523-4888-a945-c3c984f954e6",
    "prId" : 28506,
    "prUrl" : "https://github.com/ansible/ansible/pull/28506#pullrequestreview-62808826",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1207fd33-55bf-414a-aac0-ba3ba67dabcd",
        "parentId" : null,
        "authorId" : "183d9a20-6a5e-4432-9fe9-9fd6fe9514fb",
        "body" : "Do we need both sriov_net_support and ena_support?",
        "createdAt" : "2017-09-12T00:07:44Z",
        "updatedAt" : "2017-10-28T11:09:37Z",
        "lastEditedBy" : "183d9a20-6a5e-4432-9fe9-9fd6fe9514fb",
        "tags" : [
        ]
      },
      {
        "id" : "3eb5261b-ba34-4a99-bd1a-bb166e1e45af",
        "parentId" : "1207fd33-55bf-414a-aac0-ba3ba67dabcd",
        "authorId" : "4b241267-f137-4c1d-ad18-6495d90001e3",
        "body" : "Not sure exactly - they're both specified as options in the boto3 docs. \r\nhttp://boto3.readthedocs.io/en/latest/reference/services/ec2.html\r\n\r\nEnaSupport (boolean) --\r\n\r\nSpecifies whether enhanced networking with ENA is enabled.\r\n\r\nSriovNetSupport (string) --\r\n\r\nSpecifies whether enhanced networking with the Intel 82599 Virtual Function interface is enabled.\r\n\r\nJust guessing but one is probably for paravirtual and the other may be for hardware virtualization.",
        "createdAt" : "2017-09-13T11:41:59Z",
        "updatedAt" : "2017-10-28T11:09:37Z",
        "lastEditedBy" : "4b241267-f137-4c1d-ad18-6495d90001e3",
        "tags" : [
        ]
      },
      {
        "id" : "2e1ce600-25c6-4898-bb54-0eb0c205ffdf",
        "parentId" : "1207fd33-55bf-414a-aac0-ba3ba67dabcd",
        "authorId" : "4b241267-f137-4c1d-ad18-6495d90001e3",
        "body" : "Just looked up SRIOV - Single Root IO Virtualization - used for PCIe virtualization - in which case they are both required. SRIOV is probably relevant for GPU-class instances, whereas ena is more relevant to high-throughput xlarge type instances.",
        "createdAt" : "2017-09-13T11:56:20Z",
        "updatedAt" : "2017-10-28T11:09:37Z",
        "lastEditedBy" : "4b241267-f137-4c1d-ad18-6495d90001e3",
        "tags" : [
        ]
      },
      {
        "id" : "25682619-7058-4c77-b392-b81ecf391f2a",
        "parentId" : "1207fd33-55bf-414a-aac0-ba3ba67dabcd",
        "authorId" : "4b241267-f137-4c1d-ad18-6495d90001e3",
        "body" : "More info:\r\nhttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/enhanced-networking.html\r\n\r\nBoth for networking but for different instance types.\r\nSRIOV runs at 10 GPS and ENA at 25 GPS.\r\n\r\nCould possibly use one parameter for both and detect which is relevant to the AMI being created and send the required option to boto3..",
        "createdAt" : "2017-09-14T07:12:25Z",
        "updatedAt" : "2017-10-28T11:09:37Z",
        "lastEditedBy" : "4b241267-f137-4c1d-ad18-6495d90001e3",
        "tags" : [
        ]
      },
      {
        "id" : "eeba18b5-3cca-4440-9f1f-f763bf8f4d2a",
        "parentId" : "1207fd33-55bf-414a-aac0-ba3ba67dabcd",
        "authorId" : "dcfa090c-1019-47a0-addb-d32fd52136c2",
        "body" : "an AMI can have both `ena-support` and `sriov-net-support` enabled. If your kernel is configured correctly, depending on what instance you start an instance of the AMI on, one or the other is used.\r\n\r\nThese are both really important switches for hi-performance AWS use. Looking forward to the merge!\r\n\r\nBoth are supported by HVM only.",
        "createdAt" : "2017-09-14T16:25:26Z",
        "updatedAt" : "2017-10-28T11:09:37Z",
        "lastEditedBy" : "dcfa090c-1019-47a0-addb-d32fd52136c2",
        "tags" : [
        ]
      }
    ],
    "commit" : "d0348ac436c5bb0e00d21e807ea4cf9350daad22",
    "line" : 130,
    "diffHunk" : "@@ -1,1 +115,119 @@  sriov_net_support:\n    description:\n      - Set to simple to enable enhanced networking with the Intel 82599 Virtual Function interface for the AMI and any instances that you launch from the AMI.\n    version_added: \"2.5\"\nauthor:"
  },
  {
    "id" : "9ef3b09a-15e0-47cc-9c12-2b8ff9f59032",
    "prId" : 28506,
    "prUrl" : "https://github.com/ansible/ansible/pull/28506#pullrequestreview-69439673",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9934244b-4492-40b4-acde-059be1bdb959",
        "parentId" : null,
        "authorId" : "183d9a20-6a5e-4432-9fe9-9fd6fe9514fb",
        "body" : "The current test failures are related to using update_image to set launch permissions.\r\n\r\nThe module exits with 'AMI not updated' when the launch permission doesn't change. Perhaps make set_launch_permissions a separate method to be used by both create_image and update_image.",
        "createdAt" : "2017-09-27T05:51:41Z",
        "updatedAt" : "2017-10-28T11:09:37Z",
        "lastEditedBy" : "183d9a20-6a5e-4432-9fe9-9fd6fe9514fb",
        "tags" : [
        ]
      },
      {
        "id" : "aa297a53-3f2a-4063-bcf8-d5e3f34db345",
        "parentId" : "9934244b-4492-40b4-acde-059be1bdb959",
        "authorId" : "4b241267-f137-4c1d-ad18-6495d90001e3",
        "body" : "@willthames I got the tests working and found that it was requiring default images that weren't present. Have added these images for each region. \r\n\r\nThere was also an error due to `.block_device_mapping['/dev/xvda']` being called on the result instead of `.block_device_mappings[0].ebs`. I've changed this in the tests to pass but not sure if this is correct or if backwards compatibility has now been broken.\r\n\r\n\r\nThanks for the doco on setting up btw, I decided to turn your notes into a <a href=\"https://github.com/wilvk/vagrant-ansible-tests\">Vagrant/Ansible provisioned box</a> to save going through the steps each time if that's ok.\r\n\r\n",
        "createdAt" : "2017-10-15T10:10:25Z",
        "updatedAt" : "2017-10-28T11:09:37Z",
        "lastEditedBy" : "4b241267-f137-4c1d-ad18-6495d90001e3",
        "tags" : [
        ]
      },
      {
        "id" : "8b8cb1eb-ad39-40f5-aeb1-90f3409a5db0",
        "parentId" : "9934244b-4492-40b4-acde-059be1bdb959",
        "authorId" : "183d9a20-6a5e-4432-9fe9-9fd6fe9514fb",
        "body" : "This seems as though backward compatibility has been broken - you might need to create a block_device_mapping dict based on the result of block_device_mappings.",
        "createdAt" : "2017-10-16T01:39:59Z",
        "updatedAt" : "2017-10-28T11:09:37Z",
        "lastEditedBy" : "183d9a20-6a5e-4432-9fe9-9fd6fe9514fb",
        "tags" : [
        ]
      }
    ],
    "commit" : "d0348ac436c5bb0e00d21e807ea4cf9350daad22",
    "line" : 301,
    "diffHunk" : "@@ -1,1 +416,420 @@        # ensure that launch_permissions are up to date\n        if images and images[0]:\n            update_image(module, connection, images[0].get('ImageId'), resource)\n\n        block_device_mapping = None"
  },
  {
    "id" : "a6f0920a-32cd-4cb3-875d-9800c02f72a8",
    "prId" : 28506,
    "prUrl" : "https://github.com/ansible/ansible/pull/28506#pullrequestreview-72720928",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7820d68b-fe78-429b-9c66-29c08d36c94c",
        "parentId" : null,
        "authorId" : "183d9a20-6a5e-4432-9fe9-9fd6fe9514fb",
        "body" : "No! If the image doesn't exist, just exit with changed=False.",
        "createdAt" : "2017-10-30T00:16:37Z",
        "updatedAt" : "2017-10-30T00:16:44Z",
        "lastEditedBy" : "183d9a20-6a5e-4432-9fe9-9fd6fe9514fb",
        "tags" : [
        ]
      },
      {
        "id" : "8c9f8029-7360-4ce9-9abb-b1f30aea42ba",
        "parentId" : "7820d68b-fe78-429b-9c66-29c08d36c94c",
        "authorId" : "183d9a20-6a5e-4432-9fe9-9fd6fe9514fb",
        "body" : "I know this is the existing behaviour, but running the tests highlighted for me how wrong the existing behaviour is!",
        "createdAt" : "2017-10-30T00:17:47Z",
        "updatedAt" : "2017-10-30T00:17:47Z",
        "lastEditedBy" : "183d9a20-6a5e-4432-9fe9-9fd6fe9514fb",
        "tags" : [
        ]
      },
      {
        "id" : "dd7b7ad4-2a16-4a3b-862f-d0161cb8e8ed",
        "parentId" : "7820d68b-fe78-429b-9c66-29c08d36c94c",
        "authorId" : "183d9a20-6a5e-4432-9fe9-9fd6fe9514fb",
        "body" : "Edit: I'm going to remove this objection, because it's existing behaviour, and suggest it as a fix in a separate PR - this one has been around the houses enough times!",
        "createdAt" : "2017-10-30T00:19:42Z",
        "updatedAt" : "2017-10-30T00:19:42Z",
        "lastEditedBy" : "183d9a20-6a5e-4432-9fe9-9fd6fe9514fb",
        "tags" : [
        ]
      },
      {
        "id" : "3a7cf9ce-d73b-4f67-baa0-abbe8cac219f",
        "parentId" : "7820d68b-fe78-429b-9c66-29c08d36c94c",
        "authorId" : "4b241267-f137-4c1d-ad18-6495d90001e3",
        "body" : "lol. no worries.",
        "createdAt" : "2017-10-30T01:36:19Z",
        "updatedAt" : "2017-10-30T01:36:19Z",
        "lastEditedBy" : "4b241267-f137-4c1d-ad18-6495d90001e3",
        "tags" : [
        ]
      }
    ],
    "commit" : "d0348ac436c5bb0e00d21e807ea4cf9350daad22",
    "line" : 445,
    "diffHunk" : "@@ -1,1 +506,510 @@\n    if image is None:\n        module.fail_json(msg=\"Image %s does not exist.\" % image_id, changed=False)\n\n    # Get all associated snapshot ids before deregistering image otherwise this information becomes unavailable."
  }
]