[
  {
    "id" : "4c16c614-e35d-40af-9ac5-5a0c982723d5",
    "prId" : 23758,
    "prUrl" : "https://github.com/ansible/ansible/pull/23758#pullrequestreview-70809602",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d5c277b2-d716-4b1a-94d5-7ac5f9b7ab5d",
        "parentId" : null,
        "authorId" : "183d9a20-6a5e-4432-9fe9-9fd6fe9514fb",
        "body" : "I don't think this works does it? Doesn't it need  a `register` (or the `this` proposal)\r\n\r\nEither:\r\n```\r\nfailed_when: not this.cloudformation\r\n```\r\nor \r\n```\r\nregister: cloudformation_facts\r\nfailed_when: not cloudformation_facts.cloudformation\r\n```",
        "createdAt" : "2017-10-17T02:39:50Z",
        "updatedAt" : "2017-10-23T16:25:15Z",
        "lastEditedBy" : "183d9a20-6a5e-4432-9fe9-9fd6fe9514fb",
        "tags" : [
        ]
      },
      {
        "id" : "302816ae-9b90-4bd4-bef1-bf6e990ea343",
        "parentId" : "d5c277b2-d716-4b1a-94d5-7ac5f9b7ab5d",
        "authorId" : "6b7e4265-ae86-4269-9bd7-f8ffa9085df6",
        "body" : "It does work for me (I assume because cloudformation gets added to ansible_facts in this module):\r\n```\r\n---\r\n- hosts: localhost\r\n  gather_facts: no\r\n  connection: local\r\n  tasks:\r\n    - name: get facts about nonexistent stack\r\n      cloudformation_facts:\r\n        stack_name: notthere\r\n        all_facts: yes\r\n        profile: shertel\r\n        region: us-east-1\r\n      failed_when: cloudformation['notthere'] is undefined\r\n```\r\nOutputs:\r\n```\r\nTASK [get facts about nonexistent stack] ******************************************************************************\r\ntask path: /Users/shertel/Workspace/ansible/my_playbooks/cloudformation/facts_nonex.yml:6\r\nUsing module file /Users/shertel/Workspace/ansible/lib/ansible/modules/cloud/amazon/cloudformation_facts.py\r\n<127.0.0.1> ESTABLISH LOCAL CONNECTION FOR USER: shertel\r\n<127.0.0.1> EXEC /bin/sh -c 'echo ~ && sleep 0'\r\n<127.0.0.1> EXEC /bin/sh -c '( umask 77 && mkdir -p \"` echo /Users/shertel/.ansible/tmp/ansible-tmp-1508252420.78-238761375170325 `\" && echo ansible-tmp-1508252420.78-238761375170325=\"` echo /Users/shertel/.ansible/tmp/ansible-tmp-1508252420.78-238761375170325 `\" ) && sleep 0'\r\n<127.0.0.1> PUT /var/folders/by/k8_fbl593dlctgqmwq5wzl2c0000gn/T/tmp32Fn1J TO /Users/shertel/.ansible/tmp/ansible-tmp-1508252420.78-238761375170325/cloudformation_facts.py\r\n<127.0.0.1> EXEC /bin/sh -c 'chmod u+x /Users/shertel/.ansible/tmp/ansible-tmp-1508252420.78-238761375170325/ /Users/shertel/.ansible/tmp/ansible-tmp-1508252420.78-238761375170325/cloudformation_facts.py && sleep 0'\r\n<127.0.0.1> EXEC /bin/sh -c '/Users/shertel/Workspace/ansible/venv/python2.7/bin/python /Users/shertel/.ansible/tmp/ansible-tmp-1508252420.78-238761375170325/cloudformation_facts.py; rm -rf \"/Users/shertel/.ansible/tmp/ansible-tmp-1508252420.78-238761375170325/\" > /dev/null 2>&1 && sleep 0'\r\nfatal: [localhost]: FAILED! => {\r\n    \"ansible_facts\": {\r\n        \"cloudformation\": {}\r\n    },\r\n    \"changed\": false,\r\n    \"failed\": true,\r\n    \"failed_when_result\": true,\r\n    \"invocation\": {\r\n        \"module_args\": {\r\n            \"all_facts\": true,\r\n            \"aws_access_key\": null,\r\n            \"aws_secret_key\": null,\r\n            \"ec2_url\": null,\r\n            \"profile\": \"shertel\",\r\n            \"region\": \"us-east-1\",\r\n            \"security_token\": null,\r\n            \"stack_events\": false,\r\n            \"stack_name\": \"notthere\",\r\n            \"stack_policy\": false,\r\n            \"stack_resources\": false,\r\n            \"stack_template\": false,\r\n            \"validate_certs\": true\r\n        }\r\n    }\r\n}\r\n\tto retry, use: --limit @/Users/shertel/Workspace/ansible/my_playbooks/cloudformation/facts_nonex.retry\r\n\r\nPLAY RECAP ************************************************************************************************************\r\nlocalhost                  : ok=0    changed=0    unreachable=0    failed=1\r\n```\r\n",
        "createdAt" : "2017-10-17T15:00:38Z",
        "updatedAt" : "2017-10-23T16:25:15Z",
        "lastEditedBy" : "6b7e4265-ae86-4269-9bd7-f8ffa9085df6",
        "tags" : [
        ]
      },
      {
        "id" : "67858bd3-15e0-4d95-b67a-ea1856a5d43f",
        "parentId" : "d5c277b2-d716-4b1a-94d5-7ac5f9b7ab5d",
        "authorId" : "183d9a20-6a5e-4432-9fe9-9fd6fe9514fb",
        "body" : "Oh! That's actually quite scary. Could people unexpectedly clobber their own variables through ansible_facts? \r\n\r\nI'm actually much more worried about ansible_facts than I was before - I really don't think it's clear that if you use a module, variables will be set whether you like it or not. I prefer explicit use of `register`.",
        "createdAt" : "2017-10-17T23:19:03Z",
        "updatedAt" : "2017-10-23T16:25:15Z",
        "lastEditedBy" : "183d9a20-6a5e-4432-9fe9-9fd6fe9514fb",
        "tags" : [
        ]
      },
      {
        "id" : "7155bcf1-8932-4ec5-875d-4d50784d51d3",
        "parentId" : "d5c277b2-d716-4b1a-94d5-7ac5f9b7ab5d",
        "authorId" : "14d377d1-6ca9-44cc-bd0a-18589eb22dfc",
        "body" : "@willthames - you might be interested in https://github.com/ansible/ansible/pull/18445/ which is mentioned in  https://github.com/ansible/ansible/blob/devel/docs/docsite/rst/roadmap/ROADMAP_2_4.rst#facts",
        "createdAt" : "2017-10-20T11:05:14Z",
        "updatedAt" : "2017-10-23T16:25:15Z",
        "lastEditedBy" : "14d377d1-6ca9-44cc-bd0a-18589eb22dfc",
        "tags" : [
        ]
      }
    ],
    "commit" : "442921aea56f26685fca50e13ebae8f01369cc41",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +86,90 @@    stack_name: nonexistent-stack\n    all_facts: yes\n  failed_when: cloudformation['nonexistent-stack'] is undefined\n\n# Example dictionary outputs for stack_outputs, stack_parameters and stack_resources:"
  }
]