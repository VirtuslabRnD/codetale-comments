[
  {
    "id" : "a7b1bd4f-c2c8-4eb1-8b7e-81774e5c5b0f",
    "prId" : 19229,
    "prUrl" : "https://github.com/ansible/ansible/pull/19229#pullrequestreview-121651666",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7f9a522b-11ad-4505-baa0-d07a4fed252b",
        "parentId" : null,
        "authorId" : "53116423-381d-4635-8fdf-d276b727a14c",
        "body" : "Seems like filter can return partial matches: `foo` would match for an existing `foo-bar` service, and would fail with thinking it needs to be updated (which also seems to be deprecated. Maybe it's worth verifying with this condition and adding a workaround:\r\n```python\r\nif len(raw_data) == 0 or not 'Name' in raw_data[0]['Spec'] or raw_data[0]['Spec']['Name'] != name:\r\n```\r\n",
        "createdAt" : "2018-03-11T23:59:22Z",
        "updatedAt" : "2018-08-23T17:42:49Z",
        "lastEditedBy" : "53116423-381d-4635-8fdf-d276b727a14c",
        "tags" : [
        ]
      },
      {
        "id" : "d172121f-6cfd-470e-96f5-f48fef2cd32d",
        "parentId" : "7f9a522b-11ad-4505-baa0-d07a4fed252b",
        "authorId" : "dad3cdf0-a620-46ea-a441-08db830348fe",
        "body" : "Do a pull request.",
        "createdAt" : "2018-03-12T00:03:30Z",
        "updatedAt" : "2018-08-23T17:42:49Z",
        "lastEditedBy" : "dad3cdf0-a620-46ea-a441-08db830348fe",
        "tags" : [
        ]
      },
      {
        "id" : "b2654674-43a2-4d66-92b4-55db8fe031fc",
        "parentId" : "7f9a522b-11ad-4505-baa0-d07a4fed252b",
        "authorId" : "53116423-381d-4635-8fdf-d276b727a14c",
        "body" : "There were so many migrations, I'm confused where is the original PR coming from. Is it https://github.com/dariko/ansible-modules-core/blob/swarm_service/cloud/docker/docker_swarm_service.py ?",
        "createdAt" : "2018-03-12T00:13:03Z",
        "updatedAt" : "2018-08-23T17:42:49Z",
        "lastEditedBy" : "53116423-381d-4635-8fdf-d276b727a14c",
        "tags" : [
        ]
      },
      {
        "id" : "e521fd18-b808-4da4-9fe9-9b91ca7d9a74",
        "parentId" : "7f9a522b-11ad-4505-baa0-d07a4fed252b",
        "authorId" : "dad3cdf0-a620-46ea-a441-08db830348fe",
        "body" : "Yes",
        "createdAt" : "2018-03-12T00:15:29Z",
        "updatedAt" : "2018-08-23T17:42:49Z",
        "lastEditedBy" : "dad3cdf0-a620-46ea-a441-08db830348fe",
        "tags" : [
        ]
      },
      {
        "id" : "1a619212-0a61-4258-9fbd-c838d4746299",
        "parentId" : "7f9a522b-11ad-4505-baa0-d07a4fed252b",
        "authorId" : "dad3cdf0-a620-46ea-a441-08db830348fe",
        "body" : "Yes, it is.",
        "createdAt" : "2018-03-12T00:15:49Z",
        "updatedAt" : "2018-08-23T17:42:49Z",
        "lastEditedBy" : "dad3cdf0-a620-46ea-a441-08db830348fe",
        "tags" : [
        ]
      },
      {
        "id" : "e53e805d-e634-4ab9-b666-2c515caced2d",
        "parentId" : "7f9a522b-11ad-4505-baa0-d07a4fed252b",
        "authorId" : "5a905ba5-a8a2-4c3e-b086-1df331bb7651",
        "body" : "@kireevco sorry for the late reply. Gitub sure doesn't make it is to find the source branch of a PR :) I'm confident it's this one: https://github.com/dariko/ansible/tree/docker_swarm_service",
        "createdAt" : "2018-05-08T20:10:32Z",
        "updatedAt" : "2018-08-23T17:42:49Z",
        "lastEditedBy" : "5a905ba5-a8a2-4c3e-b086-1df331bb7651",
        "tags" : [
        ]
      },
      {
        "id" : "0e908833-479a-474f-83c4-17732bcdbdca",
        "parentId" : "7f9a522b-11ad-4505-baa0-d07a4fed252b",
        "authorId" : "5a905ba5-a8a2-4c3e-b086-1df331bb7651",
        "body" : "@kireevco  I was confident, and I was wrong. The source of this PR is https://github.com/dariko/ansible/tree/ansible-modules-core/pull/5547.\r\nSorry, but this PR have a messy and long history.",
        "createdAt" : "2018-05-20T18:47:50Z",
        "updatedAt" : "2018-08-23T17:42:49Z",
        "lastEditedBy" : "5a905ba5-a8a2-4c3e-b086-1df331bb7651",
        "tags" : [
        ]
      }
    ],
    "commit" : "2cd8e370cca36cbb29b2efe6129f33aee4257969",
    "line" : 869,
    "diffHunk" : "@@ -1,1 +867,871 @@    def get_service(self, name):\n        raw_data = self.client.services(filters={'name': name})\n        if len(raw_data) == 0:\n            return None\n"
  },
  {
    "id" : "43004bb4-b269-46ca-bac2-9816126f568b",
    "prId" : 45674,
    "prUrl" : "https://github.com/ansible/ansible/pull/45674#pullrequestreview-166748833",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b4923bf3-175b-407e-9753-3a853ad265c2",
        "parentId" : null,
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "How about just leaving it away (and removing `default=None` in args_spec)? The default value is `None` anyway if the argument is not required.",
        "createdAt" : "2018-10-20T12:10:09Z",
        "updatedAt" : "2018-10-28T05:44:03Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      },
      {
        "id" : "37c4aac0-6c70-4666-8e10-9e0586dea7d3",
        "parentId" : "b4923bf3-175b-407e-9753-3a853ad265c2",
        "authorId" : "5a905ba5-a8a2-4c3e-b086-1df331bb7651",
        "body" : "@felixfontein  Thank you, I didn't know that; I'm gonna change them",
        "createdAt" : "2018-10-20T12:55:40Z",
        "updatedAt" : "2018-10-28T05:44:03Z",
        "lastEditedBy" : "5a905ba5-a8a2-4c3e-b086-1df331bb7651",
        "tags" : [
        ]
      }
    ],
    "commit" : "c934cc0f0827262fd8e4c88266920167f99173f7",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +178,182 @@    - Every item must be a dictionary exposing the keys config_id, config_name, filename, uid (defaults to 0), gid (defaults to 0), mode (defaults to 0o444)\n    - Maps docker service --config option.\n    default: null\n  networks:\n    required: false"
  },
  {
    "id" : "25fbe261-d298-49fa-8423-8d9bb10a146e",
    "prId" : 50609,
    "prUrl" : "https://github.com/ansible/ansible/pull/50609#pullrequestreview-190029977",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "850da285-29fe-4a39-97b0-e688f21e3600",
        "parentId" : null,
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "You also need to document the minimal API version in the module's requirements. Look at the other `docker_*` modules on how it is done there.",
        "createdAt" : "2019-01-07T22:55:03Z",
        "updatedAt" : "2019-01-19T15:45:23Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      }
    ],
    "commit" : "74806773f94988a24d024380060073f35a5875cf",
    "line" : 109,
    "diffHunk" : "@@ -1,1 +1194,1198 @@        supports_check_mode=True,\n        min_docker_version='2.0.0',\n        min_docker_api_version='1.24',\n        option_minimal_versions=option_minimal_versions,\n    )"
  },
  {
    "id" : "2a9cbb6c-774b-4239-a88f-981e2173fe32",
    "prId" : 50609,
    "prUrl" : "https://github.com/ansible/ansible/pull/50609#pullrequestreview-190390165",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c2894917-860e-4f14-a05d-6be6d3a677d7",
        "parentId" : null,
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "I think `secrets` was only added in docker-py 2.3.0 (see docker/docker-py@d1038c422b2a069494476dd743cc06e11e8939e7).",
        "createdAt" : "2019-01-07T23:10:43Z",
        "updatedAt" : "2019-01-19T15:45:23Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      },
      {
        "id" : "8a607040-8bee-45f9-8490-ed5f43ab8cf0",
        "parentId" : "c2894917-860e-4f14-a05d-6be6d3a677d7",
        "authorId" : "581ff564-8257-49c6-857f-c202afca501a",
        "body" : "Hmm, yes by that commit it certainly looks like that but checking the changelog and documentation tells another story:\r\n\r\nhttps://github.com/docker/docker-py/blob/master/docs/change-log.md#210\r\n\r\nAnd compare the services documentation 2.0.0 vs 2.1.0:\r\nhttps://docker-py.readthedocs.io/en/2.0.0/services.html\r\nhttps://docker-py.readthedocs.io/en/2.1.0/services.html\r\n\r\nAnd by looking at the tag 2.1.0 one can see that `secrets` indeed is present: https://github.com/docker/docker-py/blob/2.1.0/docker/types/services.py#L85",
        "createdAt" : "2019-01-08T08:59:20Z",
        "updatedAt" : "2019-01-19T15:45:23Z",
        "lastEditedBy" : "581ff564-8257-49c6-857f-c202afca501a",
        "tags" : [
        ]
      },
      {
        "id" : "3ae0c796-d4fa-4b05-be31-04a43bae281b",
        "parentId" : "c2894917-860e-4f14-a05d-6be6d3a677d7",
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "You're right. I also checked the source at tag `2.1.0`, and it contains that parameter. I guess they did some refactoring between 2.2.x and 2.3.0 which resulted in that commit...",
        "createdAt" : "2019-01-08T18:52:47Z",
        "updatedAt" : "2019-01-19T15:45:23Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      }
    ],
    "commit" : "74806773f94988a24d024380060073f35a5875cf",
    "line" : 88,
    "diffHunk" : "@@ -1,1 +1173,1177 @@        hostname=dict(docker_py_version='2.2.0', docker_api_version='1.25'),\n        tty=dict(docker_py_version='2.4.0', docker_api_version='1.25'),\n        secrets=dict(docker_py_version='2.1.0', docker_api_version='1.25'),\n        configs=dict(docker_py_version='2.6.0', docker_api_version='1.30'),\n        update_order=dict(docker_py_version='2.7.0', docker_api_version='1.29'),"
  },
  {
    "id" : "4f884130-7fe4-4972-9dfd-cc422e0914b7",
    "prId" : 50861,
    "prUrl" : "https://github.com/ansible/ansible/pull/50861#pullrequestreview-192123387",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "97fb0f47-e139-4852-b0cd-c489816ce6dd",
        "parentId" : null,
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "You should add `type: dict` to this and `container_labels`.",
        "createdAt" : "2019-01-14T12:13:42Z",
        "updatedAt" : "2019-01-14T13:25:17Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      }
    ],
    "commit" : "f7071a6dbd06861dbcd6b78330dc13a84ab14f29",
    "line" : 54,
    "diffHunk" : "@@ -1,1 +97,101 @@    description:\n    - Dictionary of key value pairs.\n    - Maps docker service --label option.\n  container_labels:\n    required: false"
  },
  {
    "id" : "3a25d2d8-0346-46f3-bf1a-23643fef4795",
    "prId" : 50861,
    "prUrl" : "https://github.com/ansible/ansible/pull/50861#pullrequestreview-192136913",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "297f49ad-f7e5-427a-af15-545643620630",
        "parentId" : null,
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "Interestingly, this restriction is not enforced. It probably makes sense to start including this in #50609.",
        "createdAt" : "2019-01-14T12:50:15Z",
        "updatedAt" : "2019-01-14T13:25:17Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      },
      {
        "id" : "cc09703a-248c-40f4-a09f-8a65ea962ca1",
        "parentId" : "297f49ad-f7e5-427a-af15-545643620630",
        "authorId" : "581ff564-8257-49c6-857f-c202afca501a",
        "body" : "Good catch! I'll update #50609.",
        "createdAt" : "2019-01-14T12:53:22Z",
        "updatedAt" : "2019-01-14T13:25:17Z",
        "lastEditedBy" : "581ff564-8257-49c6-857f-c202afca501a",
        "tags" : [
        ]
      }
    ],
    "commit" : "f7071a6dbd06861dbcd6b78330dc13a84ab14f29",
    "line" : 47,
    "diffHunk" : "@@ -1,1 +91,95 @@    - Force update even if no changes require it.\n    - Maps to docker service update --force option.\n    - Requires API version >= 1.25\n  labels:\n    required: false"
  },
  {
    "id" : "ff299390-7182-42fb-8762-a79487b2d6ef",
    "prId" : 50882,
    "prUrl" : "https://github.com/ansible/ansible/pull/50882#pullrequestreview-194368096",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "96fa3ed7-eb08-4012-9ec1-fdb86f3b48f2",
        "parentId" : null,
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "Sorting will die if any one of the entries of the two lists does not contain all of `published_port`, `target_port` or `protocol`. Is it guaranteed that docker will always return all three elements in each item?",
        "createdAt" : "2019-01-19T12:46:35Z",
        "updatedAt" : "2019-01-21T08:40:02Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      },
      {
        "id" : "ef6b2ae3-2c5a-495d-84bc-72c8a9926b3f",
        "parentId" : "96fa3ed7-eb08-4012-9ec1-fdb86f3b48f2",
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "To make sure that we always have all three values defined, we can modify the `argument_spec` definition:\r\n```\r\n        publish=dict(default=[], type='list', elements='dict', options=dict(\r\n            published_port=dict(type='int', required=True),\r\n            target_port=dict(type='int', required=True),\r\n            protocol=dict(type='str', required=True),\r\n            mode=dict(type='str', required=False),\r\n        )),\r\n```\r\nThis will also prevent people adding other fields (Ansible will complain) and make sure the entries have the correct type.\r\n\r\nThe documentation can also be improved, by adding `suboptions:` to it. See for example docker_container.py for examples on how this works.",
        "createdAt" : "2019-01-19T12:53:22Z",
        "updatedAt" : "2019-01-21T08:40:02Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      },
      {
        "id" : "5141a442-3b31-428c-90c0-10abade4ff60",
        "parentId" : "96fa3ed7-eb08-4012-9ec1-fdb86f3b48f2",
        "authorId" : "581ff564-8257-49c6-857f-c202afca501a",
        "body" : "Yes as far as I can read from the [docker-py](https://github.com/docker/docker-py/blob/master/docker/types/services.py#L500) code and the [docker api documentation](https://docs.docker.com/engine/api/v1.25/#operation/ServiceCreate) `types.EndpointSpec(ports=ports)` are used. \r\n\r\nAh cool, I'll add that. \r\n\r\n~~`protocol` will not be required by the user as it defaults to `tcp`.~~\r\n\r\nLooks like I was wrong about `protocol` defaulting to tcp. Do you think we should make it act like `mode` or default it to `tcp`?. Maybe `has_publish_changed` could be made general to handle all kinds of suboptions.",
        "createdAt" : "2019-01-19T15:37:02Z",
        "updatedAt" : "2019-01-21T08:40:02Z",
        "lastEditedBy" : "581ff564-8257-49c6-857f-c202afca501a",
        "tags" : [
        ]
      },
      {
        "id" : "963032d9-fe5b-44a7-bd99-963441ab9163",
        "parentId" : "96fa3ed7-eb08-4012-9ec1-fdb86f3b48f2",
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "I guess forcing the user to be more explicit should be OK, too. Defaults can always be problematic, remember the default user `root` ;-)",
        "createdAt" : "2019-01-19T16:20:07Z",
        "updatedAt" : "2019-01-21T08:40:02Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      },
      {
        "id" : "0d8763e2-2b87-42be-bcf4-dbbd903c39fc",
        "parentId" : "96fa3ed7-eb08-4012-9ec1-fdb86f3b48f2",
        "authorId" : "581ff564-8257-49c6-857f-c202afca501a",
        "body" : "Yes that makes sense too. I'll leave `protocol` as required then.",
        "createdAt" : "2019-01-19T19:48:17Z",
        "updatedAt" : "2019-01-21T08:40:02Z",
        "lastEditedBy" : "581ff564-8257-49c6-857f-c202afca501a",
        "tags" : [
        ]
      }
    ],
    "commit" : "ff45c32c4e0a3a6da690ab27f5ed23910397f184",
    "line" : 90,
    "diffHunk" : "@@ -1,1 +784,788 @@        publish_sorter = operator.itemgetter('published_port', 'target_port', 'protocol')\n        publish = sorted(self.publish, key=publish_sorter)\n        old_publish = sorted(old_publish, key=publish_sorter)\n        for publish_item, old_publish_item in zip(publish, old_publish):\n            ignored_keys = set()"
  },
  {
    "id" : "a39178ce-9f99-46be-a980-3398b400da26",
    "prId" : 50882,
    "prUrl" : "https://github.com/ansible/ansible/pull/50882#pullrequestreview-194361281",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ff372066-9f96-4d67-8816-6aea4fff6f0e",
        "parentId" : null,
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "Why not move `ignored_keys` one level up, i.e. before the `for` loop?",
        "createdAt" : "2019-01-19T12:47:18Z",
        "updatedAt" : "2019-01-21T08:40:02Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      },
      {
        "id" : "b513b40a-6458-464c-ba21-4492376ad4cb",
        "parentId" : "ff372066-9f96-4d67-8816-6aea4fff6f0e",
        "authorId" : "581ff564-8257-49c6-857f-c202afca501a",
        "body" : "Would not that make all items to have the `mode` key ignored? Lets say if the first item has not specified a `mode` but the second one has, then the second one would have its `mode` key ignored.",
        "createdAt" : "2019-01-19T15:26:47Z",
        "updatedAt" : "2019-01-21T08:40:02Z",
        "lastEditedBy" : "581ff564-8257-49c6-857f-c202afca501a",
        "tags" : [
        ]
      },
      {
        "id" : "3fb4e54b-e487-4a0b-8757-cc7c12c427ba",
        "parentId" : "ff372066-9f96-4d67-8816-6aea4fff6f0e",
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "Ah, yes, you're right. I got confused :)",
        "createdAt" : "2019-01-19T16:20:33Z",
        "updatedAt" : "2019-01-21T08:40:02Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      }
    ],
    "commit" : "ff45c32c4e0a3a6da690ab27f5ed23910397f184",
    "line" : 92,
    "diffHunk" : "@@ -1,1 +786,790 @@        old_publish = sorted(old_publish, key=publish_sorter)\n        for publish_item, old_publish_item in zip(publish, old_publish):\n            ignored_keys = set()\n            if not publish_item.get('mode'):\n                ignored_keys.add('mode')"
  },
  {
    "id" : "d02e4c8f-a2d3-4183-9efe-ace5b4690fe7",
    "prId" : 50882,
    "prUrl" : "https://github.com/ansible/ansible/pull/50882#pullrequestreview-194361233",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9848eedf-f6ef-4bd5-a3d4-4486f1fabf4f",
        "parentId" : null,
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "You should add `type: list` here.",
        "createdAt" : "2019-01-19T16:15:33Z",
        "updatedAt" : "2019-01-21T08:40:02Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      }
    ],
    "commit" : "ff45c32c4e0a3a6da690ab27f5ed23910397f184",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +198,202 @@  publish:\n    type: list\n    required: false\n    default: []\n    description:"
  },
  {
    "id" : "7ca5ad6b-e5e2-4b69-b087-8a2bbb1dc45a",
    "prId" : 50882,
    "prUrl" : "https://github.com/ansible/ansible/pull/50882#pullrequestreview-194381915",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "67b8777a-994b-4c46-a13b-1ddd35e4b6b6",
        "parentId" : null,
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "You need to update the documentation as well. It still says `required` there.",
        "createdAt" : "2019-01-20T07:53:37Z",
        "updatedAt" : "2019-01-21T08:40:02Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      }
    ],
    "commit" : "ff45c32c4e0a3a6da690ab27f5ed23910397f184",
    "line" : 117,
    "diffHunk" : "@@ -1,1 +1212,1216 @@            published_port=dict(type='int', required=True),\n            target_port=dict(type='int', required=True),\n            protocol=dict(default='tcp', type='str', required=False, choices=('tcp', 'udp')),\n            mode=dict(type='str', required=False, choices=('ingress', 'host')),\n        )),"
  },
  {
    "id" : "1bcff542-9ed8-44fd-9ae8-94e178f71382",
    "prId" : 50882,
    "prUrl" : "https://github.com/ansible/ansible/pull/50882#pullrequestreview-194494709",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "344d797b-fe28-4e56-9135-30548960e33d",
        "parentId" : null,
        "authorId" : "5a905ba5-a8a2-4c3e-b086-1df331bb7651",
        "body" : "I spent more time than I care to admit to understand what was going on here...\r\nWhat would you think of removing the keys from the newly created dictionaries instead of creating new ones?\r\n```suggestion\r\n            for key in ignored_keys:\r\n                old_publish_item.pop(key, None)\r\n                publish_item.pop(key, None)\r\n            return publish_items != old_publish_items\r\n```",
        "createdAt" : "2019-01-20T22:07:21Z",
        "updatedAt" : "2019-01-21T08:40:02Z",
        "lastEditedBy" : "5a905ba5-a8a2-4c3e-b086-1df331bb7651",
        "tags" : [
        ]
      },
      {
        "id" : "eafe9a23-a577-4075-866a-65df84e41706",
        "parentId" : "344d797b-fe28-4e56-9135-30548960e33d",
        "authorId" : "581ff564-8257-49c6-857f-c202afca501a",
        "body" : "New dictionaries are created to avoid mutating the ones set on the service objects. I think it would be confusing to have the `compare`-method change this state. \r\n\r\nMaybe we can add some comments to make it a bit more clear what’s going on?",
        "createdAt" : "2019-01-21T06:10:57Z",
        "updatedAt" : "2019-01-21T08:40:02Z",
        "lastEditedBy" : "581ff564-8257-49c6-857f-c202afca501a",
        "tags" : [
        ]
      },
      {
        "id" : "9a396f56-d39b-4c0c-920c-bd8e2a79673a",
        "parentId" : "344d797b-fe28-4e56-9135-30548960e33d",
        "authorId" : "581ff564-8257-49c6-857f-c202afca501a",
        "body" : "~~Sorry you’re right, after we added the sorting we already have copies of the state objects. Let’s do the popping instead, much clearer.~~",
        "createdAt" : "2019-01-21T06:24:57Z",
        "updatedAt" : "2019-01-21T08:40:10Z",
        "lastEditedBy" : "581ff564-8257-49c6-857f-c202afca501a",
        "tags" : [
        ]
      },
      {
        "id" : "d875765b-490b-4b3a-9b18-7c2a259e0f42",
        "parentId" : "344d797b-fe28-4e56-9135-30548960e33d",
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "No, we don't, we only have copies of the publish lists. The elements of these lists say the same (though they appear in different order in the lists).",
        "createdAt" : "2019-01-21T06:28:53Z",
        "updatedAt" : "2019-01-21T08:40:02Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      },
      {
        "id" : "9f3d834c-5881-40d5-9a73-61d2a39b7b06",
        "parentId" : "344d797b-fe28-4e56-9135-30548960e33d",
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "How about adding a comment `# Create copies of publish_item dicts where keys specified in ignored_keys are left out` before line 791?",
        "createdAt" : "2019-01-21T06:32:51Z",
        "updatedAt" : "2019-01-21T08:40:02Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      },
      {
        "id" : "09b4e2da-37a4-4157-b997-89a3d79d47b8",
        "parentId" : "344d797b-fe28-4e56-9135-30548960e33d",
        "authorId" : "581ff564-8257-49c6-857f-c202afca501a",
        "body" : "Yes just realized that too. Maybe some comments will do or if the variable names could be improved?",
        "createdAt" : "2019-01-21T06:33:59Z",
        "updatedAt" : "2019-01-21T08:40:02Z",
        "lastEditedBy" : "581ff564-8257-49c6-857f-c202afca501a",
        "tags" : [
        ]
      },
      {
        "id" : "c81a0853-fb78-47c7-9683-8b325e6b3997",
        "parentId" : "344d797b-fe28-4e56-9135-30548960e33d",
        "authorId" : "5a905ba5-a8a2-4c3e-b086-1df331bb7651",
        "body" : "@hannseman You're right, I thought they were being copied through the sorting and zipping, but indeed the referenced dicts are always the same before the compehension.\r\nThe comment is good, though!",
        "createdAt" : "2019-01-21T09:00:07Z",
        "updatedAt" : "2019-01-21T09:00:07Z",
        "lastEditedBy" : "5a905ba5-a8a2-4c3e-b086-1df331bb7651",
        "tags" : [
        ]
      }
    ],
    "commit" : "ff45c32c4e0a3a6da690ab27f5ed23910397f184",
    "line" : 96,
    "diffHunk" : "@@ -1,1 +790,794 @@                ignored_keys.add('mode')\n            # Create copies of publish_item dicts where keys specified in ignored_keys are left out\n            filtered_old_publish_item = dict(\n                (k, v) for k, v in old_publish_item.items() if k not in ignored_keys\n            )"
  },
  {
    "id" : "ac85de3b-9d29-4d7d-9239-876f2ae0d588",
    "prId" : 50984,
    "prUrl" : "https://github.com/ansible/ansible/pull/50984#pullrequestreview-194361046",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f5332ed7-0721-4e86-9bdc-7e6983559631",
        "parentId" : null,
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "You might want to add an `elif` and check that the command is indeed a list of strings (and if not, fail).",
        "createdAt" : "2019-01-19T12:57:39Z",
        "updatedAt" : "2019-01-21T20:08:51Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      },
      {
        "id" : "2ce1376c-c270-4c83-9c97-2a6740d736be",
        "parentId" : "f5332ed7-0721-4e86-9bdc-7e6983559631",
        "authorId" : "581ff564-8257-49c6-857f-c202afca501a",
        "body" : "👍 ",
        "createdAt" : "2019-01-19T16:10:08Z",
        "updatedAt" : "2019-01-21T20:08:51Z",
        "lastEditedBy" : "581ff564-8257-49c6-857f-c202afca501a",
        "tags" : [
        ]
      }
    ],
    "commit" : "8dc08f79066c85d574631443911151ede16973c3",
    "line" : 51,
    "diffHunk" : "@@ -1,1 +659,663 @@        s.command = ap['command']\n        if isinstance(s.command, string_types):\n            s.command = shlex.split(s.command)\n        elif isinstance(s.command, list):\n            invalid_items = ["
  },
  {
    "id" : "ccea2e9b-748a-423b-8ab9-5a6494278b48",
    "prId" : 50984,
    "prUrl" : "https://github.com/ansible/ansible/pull/50984#pullrequestreview-194361080",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1db27893-0e07-481d-9b8c-2e25230ff449",
        "parentId" : null,
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "You might also want to check the elements of the list here. If they aren't strings, you should fail (or convert them to string and output a warning) and tell the user to quote the values properly.",
        "createdAt" : "2019-01-19T16:11:08Z",
        "updatedAt" : "2019-01-21T20:08:51Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      }
    ],
    "commit" : "8dc08f79066c85d574631443911151ede16973c3",
    "line" : 70,
    "diffHunk" : "@@ -1,1 +678,682 @@                    % errors\n                )\n            s.command = ap['command']\n        elif s.command is not None:\n            raise ValueError("
  },
  {
    "id" : "ea4be824-0e34-4fa4-a3e9-ad5fee71b259",
    "prId" : 50984,
    "prUrl" : "https://github.com/ansible/ansible/pull/50984#pullrequestreview-194361854",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "86dde8ee-5b3e-4cff-85e3-a381659cc2f8",
        "parentId" : null,
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "I think it would help if you could move all these \"cleanup\" parts of this PR which aren't part of the feature into a separate PR. That allows to backport that PR to stable-2.7; if these changes are part of a New Feature PR, they cannot be backported that easily (feature backports are prohibited in general) and that could make it harder to backport later bugfixes which touch something in the refactored parts.",
        "createdAt" : "2019-01-19T16:14:19Z",
        "updatedAt" : "2019-01-21T20:08:51Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      },
      {
        "id" : "79b8ee9f-1129-4e51-b826-d90b28ca80d9",
        "parentId" : "86dde8ee-5b3e-4cff-85e3-a381659cc2f8",
        "authorId" : "581ff564-8257-49c6-857f-c202afca501a",
        "body" : "Ah I see. I'll revert those commits and restrain myself next time :)",
        "createdAt" : "2019-01-19T16:23:14Z",
        "updatedAt" : "2019-01-21T20:08:51Z",
        "lastEditedBy" : "581ff564-8257-49c6-857f-c202afca501a",
        "tags" : [
        ]
      },
      {
        "id" : "4dfad010-b920-40ae-babe-ffdd4a481206",
        "parentId" : "86dde8ee-5b3e-4cff-85e3-a381659cc2f8",
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "Fixing such stuff is in general a good idea, but it's better to do it in a PR which can be backported ;-)",
        "createdAt" : "2019-01-19T16:34:08Z",
        "updatedAt" : "2019-01-21T20:08:51Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      }
    ],
    "commit" : "8dc08f79066c85d574631443911151ede16973c3",
    "line" : 95,
    "diffHunk" : "@@ -1,1 +909,913 @@\n        dns_config = types.DNSConfig(\n            nameservers=self.dns,\n            search=self.dns_search,\n            options=self.dns_options"
  },
  {
    "id" : "b069698d-e126-4659-ad0e-efc7f99d8bf6",
    "prId" : 51082,
    "prUrl" : "https://github.com/ansible/ansible/pull/51082#pullrequestreview-194355873",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "343e03e6-011a-480a-b9f8-575f13123ef7",
        "parentId" : null,
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "You should add an example for this in the `EXAMPLES` section.",
        "createdAt" : "2019-01-19T13:06:02Z",
        "updatedAt" : "2019-01-19T16:17:43Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      }
    ],
    "commit" : "c44ff90d4edd5016b97c01ef079095234315f7dc",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +52,56 @@    type: list\n    description:\n    - List of the placement preferences as key value pairs.\n    - Maps docker service C(--placement-pref) option.\n    version_added: 2.8"
  },
  {
    "id" : "c19d9391-3b12-4bde-8a2d-f6387aa4ca8a",
    "prId" : 51082,
    "prUrl" : "https://github.com/ansible/ansible/pull/51082#pullrequestreview-194361532",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2646e7cc-d770-42cf-b858-e8b4ecbe736a",
        "parentId" : null,
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "Why do you use a list of dicts, and not a dict directly? To allow to specify ordering of the items?",
        "createdAt" : "2019-01-19T13:07:13Z",
        "updatedAt" : "2019-01-19T16:17:43Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      },
      {
        "id" : "ce5055b6-1fb6-4018-9a25-b1584633e0b2",
        "parentId" : "2646e7cc-d770-42cf-b858-e8b4ecbe736a",
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "From the code below, it looks like this doesn't do what you think it does. It creates a list of dictionaries which contain precisely one key, whose value is another dictionary whose only key is `SpreadDescriptor`.",
        "createdAt" : "2019-01-19T13:09:29Z",
        "updatedAt" : "2019-01-19T16:17:43Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      },
      {
        "id" : "e7f611d0-e20b-4d88-84d3-ad9fd8271ad5",
        "parentId" : "2646e7cc-d770-42cf-b858-e8b4ecbe736a",
        "authorId" : "581ff564-8257-49c6-857f-c202afca501a",
        "body" : "They are lists because the order of the matters. See the compose documentation for placement preferences here: https://docs.docker.com/compose/compose-file/#placement\r\n\r\nIf you look at how preferences are used in docker-py this aligns with that: https://github.com/docker/docker-py/blob/master/tests/integration/api_service_test.py#L418\r\n\r\nI saw some issue here on the ansible repo about making `dict` order in the argument spec behave like `collections.OrderedDict` but it appears to have become stale. https://github.com/ansible/ansible/pull/36644",
        "createdAt" : "2019-01-19T16:19:58Z",
        "updatedAt" : "2019-01-19T16:21:40Z",
        "lastEditedBy" : "581ff564-8257-49c6-857f-c202afca501a",
        "tags" : [
        ]
      },
      {
        "id" : "8226e731-82e6-478a-8bf4-b3509e3f018d",
        "parentId" : "2646e7cc-d770-42cf-b858-e8b4ecbe736a",
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "Ah, so docker will return a list with dicts, all of them having precisely one entry. Ok, in that case, everything makes sense :)",
        "createdAt" : "2019-01-19T16:24:31Z",
        "updatedAt" : "2019-01-19T16:24:57Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      }
    ],
    "commit" : "c44ff90d4edd5016b97c01ef079095234315f7dc",
    "line" : 76,
    "diffHunk" : "@@ -1,1 +836,840 @@        placement = types.Placement(\n            constraints=self.constraints,\n            preferences=[\n                {key.title(): {\"SpreadDescriptor\": value}}\n                for preference in self.placement_preferences"
  },
  {
    "id" : "9150a22c-264c-4991-813b-5d3fb27a64ec",
    "prId" : 51082,
    "prUrl" : "https://github.com/ansible/ansible/pull/51082#pullrequestreview-194361880",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2c482f19-64c3-4cd5-a57d-2a411277835c",
        "parentId" : null,
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "I think it's nicer to separate the examples by a newline. Would you mind adding newlines before the others, too? (Or do that in the new PR I mentioned in #50984?)",
        "createdAt" : "2019-01-19T16:22:44Z",
        "updatedAt" : "2019-01-19T16:22:45Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      },
      {
        "id" : "dcff58e9-5173-48d8-915c-b65e36d82a24",
        "parentId" : "2c482f19-64c3-4cd5-a57d-2a411277835c",
        "authorId" : "581ff564-8257-49c6-857f-c202afca501a",
        "body" : "I agree. I'll make a new PR fixing this and some other stuff like using one type of string quoting and no catch all `except`-statements.",
        "createdAt" : "2019-01-19T16:34:50Z",
        "updatedAt" : "2019-01-19T16:34:50Z",
        "lastEditedBy" : "581ff564-8257-49c6-857f-c202afca501a",
        "tags" : [
        ]
      }
    ],
    "commit" : "c44ff90d4edd5016b97c01ef079095234315f7dc",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +474,478 @@        name: myservice\n        state: absent\n-   name: set placement preferences\n    docker_swarm_service:\n        name: myservice"
  },
  {
    "id" : "e31f951e-c407-4f1d-93b8-ff63f586639a",
    "prId" : 51232,
    "prUrl" : "https://github.com/ansible/ansible/pull/51232#pullrequestreview-196819657",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dc2b3d33-7963-4c60-9133-fcfed1fbb724",
        "parentId" : null,
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "I would remove the following newline.",
        "createdAt" : "2019-01-27T09:45:44Z",
        "updatedAt" : "2019-01-27T13:28:50Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      }
    ],
    "commit" : "953b1b9904a766ef3e7a805dd35f1b66a4b9cd1b",
    "line" : 46,
    "diffHunk" : "@@ -1,1 +1072,1076 @@            ds.restart_policy_window = restart_policy_data.get('Window')\n\n        raw_data_endpoint_spec = raw_data['Spec'].get('EndpointSpec')\n        if raw_data_endpoint_spec:\n            ds.endpoint_mode = raw_data_endpoint_spec.get('Mode')"
  },
  {
    "id" : "5fd4ed2a-1f7d-4d1b-9d4b-e30e3f33a9de",
    "prId" : 52425,
    "prUrl" : "https://github.com/ansible/ansible/pull/52425#pullrequestreview-204574550",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4ad364e7-03ba-4b9d-b48b-98e094dca975",
        "parentId" : null,
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "Good spot!",
        "createdAt" : "2019-02-17T18:50:09Z",
        "updatedAt" : "2019-02-18T13:34:53Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      }
    ],
    "commit" : "fcea00ac21d76eac381f983185ae61457bc1f8a4",
    "line" : 57,
    "diffHunk" : "@@ -1,1 +1154,1158 @@        if secrets is not None:\n            container_spec_args['secrets'] = secrets\n        if mounts is not None:\n            container_spec_args['mounts'] = mounts\n        if dns_config is not None:"
  },
  {
    "id" : "123a2525-ef41-4ce3-ae37-b49fb1718d50",
    "prId" : 52428,
    "prUrl" : "https://github.com/ansible/ansible/pull/52428#pullrequestreview-204579560",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "846d4605-439b-4ce0-b7da-291b1e219c43",
        "parentId" : null,
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "Hopefully (once #50335 is merged) this won't be necessary anymore, since Ansible will convert the list elements to strings automatically. But for now, this is still necessary.",
        "createdAt" : "2019-02-17T20:14:09Z",
        "updatedAt" : "2019-02-18T12:09:57Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      },
      {
        "id" : "8d17d922-718f-4b54-9ecb-422a1c920ca3",
        "parentId" : "846d4605-439b-4ce0-b7da-291b1e219c43",
        "authorId" : "581ff564-8257-49c6-857f-c202afca501a",
        "body" : "Yeah that one caught me a bit of guard as I was sure that it was the default behavior.",
        "createdAt" : "2019-02-17T20:50:55Z",
        "updatedAt" : "2019-02-18T12:09:57Z",
        "lastEditedBy" : "581ff564-8257-49c6-857f-c202afca501a",
        "tags" : [
        ]
      }
    ],
    "commit" : "d09efc4c5c6069219960634e01091ebf49e80d8c",
    "line" : 37,
    "diffHunk" : "@@ -1,1 +862,866 @@            # In case integers are passed as groups, we need to convert them to\n            # strings as docker internally treats them as strings.\n            s.groups = [str(g) for g in ap['groups']]\n\n        if ap['replicas'] == -1:"
  },
  {
    "id" : "3670e50b-8161-4d84-81e5-e9aa32df51d0",
    "prId" : 52519,
    "prUrl" : "https://github.com/ansible/ansible/pull/52519#pullrequestreview-205029957",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e2b01c40-086a-4029-a8ca-a09a795bb96e",
        "parentId" : null,
        "authorId" : "f81d267a-8805-48f6-af55-2116596d9d4a",
        "body" : "CI is failing here,  you need `version_added: \"2.8\"`",
        "createdAt" : "2019-02-19T04:59:18Z",
        "updatedAt" : "2019-02-21T15:38:38Z",
        "lastEditedBy" : "f81d267a-8805-48f6-af55-2116596d9d4a",
        "tags" : [
        ]
      },
      {
        "id" : "ca71f869-27cb-45af-803a-14ddc93f92c8",
        "parentId" : "e2b01c40-086a-4029-a8ca-a09a795bb96e",
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "You beat me by 30 seconds ;-)",
        "createdAt" : "2019-02-19T05:00:34Z",
        "updatedAt" : "2019-02-21T15:38:38Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      }
    ],
    "commit" : "7859501937d2458d8bbd87e263e922eaa6c744f4",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +345,349 @@          C(5h34m56s), C(1m30s) etc. The supported units are C(us), C(ms), C(s), C(m) and C(h).\"\n        - Corresponds to the C(--stop-grace-period) option of C(docker service create).\n    type: str\n    version_added: \"2.8\"\n  stop_signal:"
  },
  {
    "id" : "90456451-e93c-41cb-acdd-f1d82349b2bb",
    "prId" : 52519,
    "prUrl" : "https://github.com/ansible/ansible/pull/52519#pullrequestreview-205029901",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0e1b4f23-632b-491f-9aad-fd7678954fdc",
        "parentId" : null,
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "There needs to be a `version_added` here (after this line). Besides that, looks good!",
        "createdAt" : "2019-02-19T05:00:02Z",
        "updatedAt" : "2019-02-21T15:38:38Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      }
    ],
    "commit" : "7859501937d2458d8bbd87e263e922eaa6c744f4",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +345,349 @@          C(5h34m56s), C(1m30s) etc. The supported units are C(us), C(ms), C(s), C(m) and C(h).\"\n        - Corresponds to the C(--stop-grace-period) option of C(docker service create).\n    type: str\n    version_added: \"2.8\"\n  stop_signal:"
  },
  {
    "id" : "ca0f9358-5ae0-4700-abc2-dc5e9d52a75a",
    "prId" : 53213,
    "prUrl" : "https://github.com/ansible/ansible/pull/53213#pullrequestreview-209895163",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3f622f7a-eaa9-4df3-8053-339a83741412",
        "parentId" : null,
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "When the user specifies `restart_config`, but not `restart_config.condition`, but specifies `restart_policy`, you will get `None` here because `restart_config['condition'] is None`. It's better to add a helper function `get_value()` so that `get_value(restart_config, 'condition', params['restart_policy'])` checks `restart_config.get('condition')` for being `None`, and if it is, returns `params['restart_policy']` instead. (Otherwise, you'd have to repeat the `None` check everytime you do a similar access.)",
        "createdAt" : "2019-03-03T05:34:59Z",
        "updatedAt" : "2019-03-04T19:06:14Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      }
    ],
    "commit" : "7be02a9019f9906a0f8975ad33fadf261243a605",
    "line" : 372,
    "diffHunk" : "@@ -1,1 +1030,1034 @@            restart_config,\n            default=params['restart_policy']\n        )\n        delay = get_value(\n            'delay',"
  },
  {
    "id" : "3f6ffd19-431b-4589-b917-baf423c5bbaa",
    "prId" : 53213,
    "prUrl" : "https://github.com/ansible/ansible/pull/53213#pullrequestreview-209931381",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "aebff989-b0d4-4bc1-ad58-e1acecb5e589",
        "parentId" : null,
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "I think below (after the `AnsibleDockerClient` initialization) it would be good to have checks for the old options: in case they are used, issue a warning that users should switch to the new option; you can see in https://github.com/ansible/ansible/blob/devel/lib/ansible/modules/cloud/docker/docker_swarm.py#L401-L403 how such a warning can be emitted. That will make the deprecation more visible and make sure users don't forget to change this before their playbooks suddenly stop working with Ansible 2.12 :)",
        "createdAt" : "2019-03-03T05:48:00Z",
        "updatedAt" : "2019-03-04T19:06:14Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      },
      {
        "id" : "4fd769b9-2f85-4430-9e47-3fddbbe08b8f",
        "parentId" : "aebff989-b0d4-4bc1-ad58-e1acecb5e589",
        "authorId" : "581ff564-8257-49c6-857f-c202afca501a",
        "body" : "Hmm maybe I'm missing something but isn't that what passing `removed_in_version` in the argument spec is already doing? ",
        "createdAt" : "2019-03-03T20:00:21Z",
        "updatedAt" : "2019-03-04T19:06:14Z",
        "lastEditedBy" : "581ff564-8257-49c6-857f-c202afca501a",
        "tags" : [
        ]
      },
      {
        "id" : "951bbeb2-f4b5-4258-89c2-a647040d44d2",
        "parentId" : "aebff989-b0d4-4bc1-ad58-e1acecb5e589",
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "Yes, you are right. I totally forgot about that one... (The only downside is that it doesn't tell which option to use instead :) )",
        "createdAt" : "2019-03-03T21:19:15Z",
        "updatedAt" : "2019-03-04T19:06:14Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      }
    ],
    "commit" : "7be02a9019f9906a0f8975ad33fadf261243a605",
    "line" : 771,
    "diffHunk" : "@@ -1,1 +2231,2235 @@            ) is not None,\n            usage_msg='set placement.preferences'\n        ),\n    )\n"
  },
  {
    "id" : "b111a91c-d90d-4a57-9f79-c346e50b0d63",
    "prId" : 53213,
    "prUrl" : "https://github.com/ansible/ansible/pull/53213#pullrequestreview-210319782",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "02862028-e74c-4e04-b545-781467812503",
        "parentId" : null,
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "Alternatively, you could also chang ethe `get_xxx_from_ansible_params` to also get `s`, and change them to directly update `s`. Then you wouldn't need this loop after each call. But both ways are fine for me.",
        "createdAt" : "2019-03-04T18:23:18Z",
        "updatedAt" : "2019-03-04T19:06:14Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      },
      {
        "id" : "9db67a4e-8090-4de3-9755-9386aeda5529",
        "parentId" : "02862028-e74c-4e04-b545-781467812503",
        "authorId" : "581ff564-8257-49c6-857f-c202afca501a",
        "body" : "Then let's keep it as it's today. In my opinion it's nicer to keep most functions as \"pure\" as possible and mutate state in one place.",
        "createdAt" : "2019-03-04T19:08:13Z",
        "updatedAt" : "2019-03-04T19:08:14Z",
        "lastEditedBy" : "581ff564-8257-49c6-857f-c202afca501a",
        "tags" : [
        ]
      },
      {
        "id" : "b136e27f-cd2e-4206-8a3c-0eea1ccce718",
        "parentId" : "02862028-e74c-4e04-b545-781467812503",
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "Fine for me. I in general also prefer pure functions, but I prefer non-pure functions over `getattr`/`setattr` magic ;)",
        "createdAt" : "2019-03-04T19:18:39Z",
        "updatedAt" : "2019-03-04T19:18:39Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      }
    ],
    "commit" : "7be02a9019f9906a0f8975ad33fadf261243a605",
    "line" : 577,
    "diffHunk" : "@@ -1,1 +1243,1247 @@        s.env = get_docker_environment(ap['env'], ap['env_files'])\n\n        update_config = cls.get_update_config_from_ansible_params(ap)\n        for key, value in update_config.items():\n            setattr(s, key, value)"
  }
]