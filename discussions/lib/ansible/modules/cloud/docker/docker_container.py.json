[
  {
    "id" : "70600aa7-ab25-4afb-82d7-009df325f2f1",
    "prId" : 24234,
    "prUrl" : "https://github.com/ansible/ansible/pull/24234#pullrequestreview-41832018",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "da85fe6f-b2eb-4f0d-81fd-53bbed01d2cb",
        "parentId" : null,
        "authorId" : "9782e32a-7deb-420b-a5c0-6ba532c3bdac",
        "body" : "Would use a dict comprehension here:\r\n```\r\nreturn {key: str(value) for key, value in config_systctls.items()}\r\n```",
        "createdAt" : "2017-05-24T21:19:12Z",
        "updatedAt" : "2017-05-25T01:32:26Z",
        "lastEditedBy" : "9782e32a-7deb-420b-a5c0-6ba532c3bdac",
        "tags" : [
        ]
      },
      {
        "id" : "103a2294-22f4-4b29-b7dc-d103e0671347",
        "parentId" : "da85fe6f-b2eb-4f0d-81fd-53bbed01d2cb",
        "authorId" : "9782e32a-7deb-420b-a5c0-6ba532c3bdac",
        "body" : "My bad, I forgot that [dict comprehensions were added in Python 2.7](https://www.python.org/dev/peps/pep-0274/).  Feel free to ignore my suggestion.",
        "createdAt" : "2017-05-25T17:27:17Z",
        "updatedAt" : "2017-05-25T17:27:23Z",
        "lastEditedBy" : "9782e32a-7deb-420b-a5c0-6ba532c3bdac",
        "tags" : [
        ]
      },
      {
        "id" : "c4fa41fe-aaa8-45f1-93cc-583dd1705cd0",
        "parentId" : "da85fe6f-b2eb-4f0d-81fd-53bbed01d2cb",
        "authorId" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "body" : "<nod>  I use this instead of a dict comprehension:\r\n``` python\r\nreturn dict((key, str(value)) for key, value in config_systctls.items())\r\n```\r\n\r\nIt's not more readable than the expanded for loop, though, so merging as is.",
        "createdAt" : "2017-06-02T17:10:22Z",
        "updatedAt" : "2017-06-02T17:10:22Z",
        "lastEditedBy" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "tags" : [
        ]
      }
    ],
    "commit" : "7080738081381fc57b3ffe758eb2226baabdbe4e",
    "line" : 82,
    "diffHunk" : "@@ -1,1 +1672,1676 @@        if config_sysctls is None:\n            return None\n        result = dict()\n        for key, value in config_sysctls.items():\n            result[key] = str(value)"
  },
  {
    "id" : "185c370d-f87f-4239-9b4b-899bf93a7085",
    "prId" : 34547,
    "prUrl" : "https://github.com/ansible/ansible/pull/34547#pullrequestreview-133604161",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8b7053e4-8970-4c94-b878-8c5c53acf42b",
        "parentId" : null,
        "authorId" : "38f1a2ff-4f1a-4c3d-b78a-3bae3b91d930",
        "body" : "Please provide input sanity checking against the docker API version so that if an user attempts to use `init` and doesn't have a new enough version of the API, they don't get a stack trace but instead a proper ansible `fail_json` message.",
        "createdAt" : "2018-05-22T21:12:40Z",
        "updatedAt" : "2018-05-24T15:29:47Z",
        "lastEditedBy" : "38f1a2ff-4f1a-4c3d-b78a-3bae3b91d930",
        "tags" : [
        ]
      },
      {
        "id" : "4159f9c4-ff20-4955-bedf-2462b24f3b5d",
        "parentId" : "8b7053e4-8970-4c94-b878-8c5c53acf42b",
        "authorId" : "5f07c62b-8609-4b3c-8d9f-20d259681dc5",
        "body" : "@maxamillion \r\nThank you for your review.\r\nI have added the validation of docker API's version.",
        "createdAt" : "2018-05-24T15:48:30Z",
        "updatedAt" : "2018-05-24T15:48:30Z",
        "lastEditedBy" : "5f07c62b-8609-4b3c-8d9f-20d259681dc5",
        "tags" : [
        ]
      },
      {
        "id" : "360aebd8-f1cf-4f79-9058-45d4a614d1dc",
        "parentId" : "8b7053e4-8970-4c94-b878-8c5c53acf42b",
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "@maxamillion @suzuki-shunsuke The validation check wasn't enough, as `init` is still passed on, which leads to an error (see #42162).",
        "createdAt" : "2018-07-01T07:13:15Z",
        "updatedAt" : "2018-07-01T07:13:16Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      },
      {
        "id" : "0b28f901-df90-429f-a6a5-089898cc9e39",
        "parentId" : "8b7053e4-8970-4c94-b878-8c5c53acf42b",
        "authorId" : "5f07c62b-8609-4b3c-8d9f-20d259681dc5",
        "body" : "@felixfontein \r\nOh, I'm sorry.\r\nI understand what is wrong by seeing https://github.com/ansible/ansible/issues/42162#issuecomment-401587809 .",
        "createdAt" : "2018-07-02T12:26:34Z",
        "updatedAt" : "2018-07-02T12:26:34Z",
        "lastEditedBy" : "5f07c62b-8609-4b3c-8d9f-20d259681dc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "d120b04184a03733e86c182fcaaf52f879c2bb29",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +135,139 @@    description:\n      - Run an init inside the container that forwards signals and reaps processes.\n        This option requires Docker API 1.25+.\n    type: bool\n    default: 'no'"
  },
  {
    "id" : "4d1bc461-911e-4eec-a6e3-c0f61de5ca4f",
    "prId" : 43238,
    "prUrl" : "https://github.com/ansible/ansible/pull/43238#pullrequestreview-150219581",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b7a3a306-2192-41cd-a3d0-01622094b6e3",
        "parentId" : null,
        "authorId" : "d7d8721c-7ad0-4834-9a3d-b53ca8656789",
        "body" : "If:\r\n1) This applies to all docker modules\r\n2) All docker modules use the docs_fragment\r\n\r\nTHEN:\r\nMaybe add to `lib/ansible/utils/module_docs_fragments/docker.py` rather than repeating in each module?",
        "createdAt" : "2018-08-28T11:01:01Z",
        "updatedAt" : "2018-08-28T11:01:13Z",
        "lastEditedBy" : "d7d8721c-7ad0-4834-9a3d-b53ca8656789",
        "tags" : [
        ]
      },
      {
        "id" : "87c73f4e-d525-4684-8f4b-291e0340c29e",
        "parentId" : "b7a3a306-2192-41cd-a3d0-01622094b6e3",
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "@gundalow It does not apply to all docker modules; only to the ones which support `docker-py < 2.0`.",
        "createdAt" : "2018-08-28T11:02:54Z",
        "updatedAt" : "2018-08-28T11:02:54Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      },
      {
        "id" : "7e8090cb-7adc-4e30-9064-8f2a2a2904d1",
        "parentId" : "b7a3a306-2192-41cd-a3d0-01622094b6e3",
        "authorId" : "d7d8721c-7ad0-4834-9a3d-b53ca8656789",
        "body" : "Thanks for clarifying",
        "createdAt" : "2018-08-28T16:53:39Z",
        "updatedAt" : "2018-08-28T16:53:40Z",
        "lastEditedBy" : "d7d8721c-7ad0-4834-9a3d-b53ca8656789",
        "tags" : [
        ]
      }
    ],
    "commit" : "904795e56430320891cf7a8b52955fdb3eff50b6",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +433,437 @@       For Python 2.6, C(docker-py) must be used. Otherwise, it is recommended to\n       install the C(docker) Python module. Note that both modules should I(not)\n       be installed at the same time. Also note that when both modules are installed\n       and one of them is uninstalled, the other might no longer function and a\n       reinstall of it is required.\""
  },
  {
    "id" : "2e789e4c-5c81-4528-ab35-42cffe291ecc",
    "prId" : 45905,
    "prUrl" : "https://github.com/ansible/ansible/pull/45905#pullrequestreview-157931276",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8783f11e-f992-4cc9-981d-5df8e30fbb17",
        "parentId" : null,
        "authorId" : "eb0d4d45-fc86-46d7-80ad-df935262d3f7",
        "body" : "I think `bv.get(key, None)` is enough?",
        "createdAt" : "2018-09-23T03:16:32Z",
        "updatedAt" : "2018-09-23T16:42:20Z",
        "lastEditedBy" : "eb0d4d45-fc86-46d7-80ad-df935262d3f7",
        "tags" : [
        ]
      },
      {
        "id" : "d860f478-9016-4966-aa3f-230c884533ca",
        "parentId" : "8783f11e-f992-4cc9-981d-5df8e30fbb17",
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "No, since `av[key] = None` should force `bv[key] = None` and not allow `bv[key]` to be not defined. It should be that `_compare_dict_allow_more_present(a, b) and _compare_dict_allow_more_present(b, a)` is equivalent to `a == b`.\r\n\r\n(Otherwise, we would have to add a method which checks for dict equality, allowing `None` to be equivalent to not defined.)",
        "createdAt" : "2018-09-23T06:24:45Z",
        "updatedAt" : "2018-09-23T16:42:20Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      },
      {
        "id" : "c8971ac4-7aff-487d-83fe-e25a2063617c",
        "parentId" : "8783f11e-f992-4cc9-981d-5df8e30fbb17",
        "authorId" : "eb0d4d45-fc86-46d7-80ad-df935262d3f7",
        "body" : "Take `env` as an example, I thinks `KEY: null` means delete the env, not set the variable to `null`\r\n\r\nAnyway, this is a trivial problem if we have `strict` mode.",
        "createdAt" : "2018-09-23T07:19:16Z",
        "updatedAt" : "2018-09-23T16:42:20Z",
        "lastEditedBy" : "eb0d4d45-fc86-46d7-80ad-df935262d3f7",
        "tags" : [
        ]
      },
      {
        "id" : "928e2463-157f-43bd-b640-12e27c438f61",
        "parentId" : "8783f11e-f992-4cc9-981d-5df8e30fbb17",
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "Hmm, there is no definition what `KEY: null` should mean for `env`. There are only interpretions :) For me, `KEY: null` is not a valid value. Also, `docker` might die (return an error) if you pass `None` as the value of an environment variable (or it might ignore it). Allowing `null` / `None` would be a new feature anyway.",
        "createdAt" : "2018-09-23T07:32:33Z",
        "updatedAt" : "2018-09-23T16:42:20Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      }
    ],
    "commit" : "2c8c98769771db85c8a99fb624692ed302328217",
    "line" : 114,
    "diffHunk" : "@@ -1,1 +1283,1287 @@            if key not in bv:\n                return False\n            if bv[key] != value:\n                return False\n        return True"
  },
  {
    "id" : "1a3ae6da-e057-4e9e-9872-eb260ddb9a6f",
    "prId" : 45905,
    "prUrl" : "https://github.com/ansible/ansible/pull/45905#pullrequestreview-157936075",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9fd30c50-a973-4fa6-a706-e8ac97e008bf",
        "parentId" : null,
        "authorId" : "eb0d4d45-fc86-46d7-80ad-df935262d3f7",
        "body" : "I think this is overkilled if `devices` and `ulimits` are both lists of `str`",
        "createdAt" : "2018-09-23T03:23:58Z",
        "updatedAt" : "2018-09-23T16:42:20Z",
        "lastEditedBy" : "eb0d4d45-fc86-46d7-80ad-df935262d3f7",
        "tags" : [
        ]
      },
      {
        "id" : "40a7eaec-de64-45f1-a89d-5ee8e829999c",
        "parentId" : "9fd30c50-a973-4fa6-a706-e8ac97e008bf",
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "Not really, see above.",
        "createdAt" : "2018-09-23T06:27:29Z",
        "updatedAt" : "2018-09-23T16:42:20Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      },
      {
        "id" : "1bd93d1b-ebf3-4037-8ad8-64514178bd06",
        "parentId" : "9fd30c50-a973-4fa6-a706-e8ac97e008bf",
        "authorId" : "eb0d4d45-fc86-46d7-80ad-df935262d3f7",
        "body" : "Ah, maybe `list(dict)` will be a more suitable type name for this.\r\n\r\nAnd we can add a shortcut for `len(a) == len(b)`, which I think will make the logic a bit clear, like this:\r\n```python\r\nif len(a) != len(b) and method == 'strict':\r\n   return False\r\nfor av in a:\r\n    for bv in b:\r\n       # the compare logic, no need to another iteration for bv in b and av in a",
        "createdAt" : "2018-09-23T07:27:26Z",
        "updatedAt" : "2018-09-23T16:42:20Z",
        "lastEditedBy" : "eb0d4d45-fc86-46d7-80ad-df935262d3f7",
        "tags" : [
        ]
      },
      {
        "id" : "b6af5d83-a240-46ea-8d38-01f92ca5844e",
        "parentId" : "9fd30c50-a973-4fa6-a706-e8ac97e008bf",
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "Well, but it is not a list of dicts, but a set of dicts, since the order of the dicts does not matter (and actually *must* be ignored).\r\n\r\nThe shortcut won't work because the same entry could show up multiple times in the same list. (This probably will result in an error when creating a new container, but for checking an existing one this would be ok.) I'll add a comment explaining this.",
        "createdAt" : "2018-09-23T07:35:54Z",
        "updatedAt" : "2018-09-23T16:42:20Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      },
      {
        "id" : "2f2eaefd-cd2b-4676-9aee-8089bd3d1219",
        "parentId" : "9fd30c50-a973-4fa6-a706-e8ac97e008bf",
        "authorId" : "eb0d4d45-fc86-46d7-80ad-df935262d3f7",
        "body" : "IMO, if `a` has duplicates, leave the error handling to users, they should not do this. As the current implementation is more robust against this, seems no reason to simplify it.",
        "createdAt" : "2018-09-23T08:21:00Z",
        "updatedAt" : "2018-09-23T16:42:20Z",
        "lastEditedBy" : "eb0d4d45-fc86-46d7-80ad-df935262d3f7",
        "tags" : [
        ]
      },
      {
        "id" : "5e5fce5e-42ea-4278-9525-309c797e3160",
        "parentId" : "9fd30c50-a973-4fa6-a706-e8ac97e008bf",
        "authorId" : "eb0d4d45-fc86-46d7-80ad-df935262d3f7",
        "body" : "Oh I don't thinks this is a set, if it is, we should use `set_a = set(a), set_b = set(b)` for comparison. If we can't do this, then this should be `list(dict)` and compared by list match.",
        "createdAt" : "2018-09-23T08:24:04Z",
        "updatedAt" : "2018-09-23T16:42:20Z",
        "lastEditedBy" : "eb0d4d45-fc86-46d7-80ad-df935262d3f7",
        "tags" : [
        ]
      },
      {
        "id" : "97c239de-154a-4569-9630-53132f20dd0e",
        "parentId" : "9fd30c50-a973-4fa6-a706-e8ac97e008bf",
        "authorId" : "eb0d4d45-fc86-46d7-80ad-df935262d3f7",
        "body" : "And actually we can't do this, as `dict` is not hashable for `set`",
        "createdAt" : "2018-09-23T08:25:05Z",
        "updatedAt" : "2018-09-23T16:42:20Z",
        "lastEditedBy" : "eb0d4d45-fc86-46d7-80ad-df935262d3f7",
        "tags" : [
        ]
      },
      {
        "id" : "24c2c912-c1c8-4ff5-92df-fdad8eb0abd6",
        "parentId" : "9fd30c50-a973-4fa6-a706-e8ac97e008bf",
        "authorId" : "eb0d4d45-fc86-46d7-80ad-df935262d3f7",
        "body" : "And this is not about the order, as we're comparing it in O(n^2), ordering does not matter here.",
        "createdAt" : "2018-09-23T08:27:29Z",
        "updatedAt" : "2018-09-23T16:42:20Z",
        "lastEditedBy" : "eb0d4d45-fc86-46d7-80ad-df935262d3f7",
        "tags" : [
        ]
      },
      {
        "id" : "5c90f813-df96-45b5-9189-9dc02e80f867",
        "parentId" : "9fd30c50-a973-4fa6-a706-e8ac97e008bf",
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "Yep; the original version had `set_a = set(a)` etc., which I changed once I added tests for these options and noticed that it breaks ;)\r\n\r\nWe could also try to get rid of O(n^2), but that's more complicated and probably even slower, since there will almost never be cases where n is large enough to make a difference.",
        "createdAt" : "2018-09-23T09:11:07Z",
        "updatedAt" : "2018-09-23T16:42:20Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      },
      {
        "id" : "41710516-1281-418b-a0c9-8981198e900b",
        "parentId" : "9fd30c50-a973-4fa6-a706-e8ac97e008bf",
        "authorId" : "eb0d4d45-fc86-46d7-80ad-df935262d3f7",
        "body" : "So maybe `list(dict)` is a better match for the current implementation, and then we can use `len(a) == len(b)` shortcut safely.",
        "createdAt" : "2018-09-23T10:43:14Z",
        "updatedAt" : "2018-09-23T16:42:20Z",
        "lastEditedBy" : "eb0d4d45-fc86-46d7-80ad-df935262d3f7",
        "tags" : [
        ]
      },
      {
        "id" : "983d8a49-482f-404a-939f-e6c625e979bd",
        "parentId" : "9fd30c50-a973-4fa6-a706-e8ac97e008bf",
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "But it is not a list, it is a set (conceptually), since the order doesn't matter.",
        "createdAt" : "2018-09-23T10:47:42Z",
        "updatedAt" : "2018-09-23T16:42:20Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      },
      {
        "id" : "965efdd1-f00c-4dd5-bd02-f369687a00bc",
        "parentId" : "9fd30c50-a973-4fa6-a706-e8ac97e008bf",
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "(In case that's what's confusing: I mean the mathematical concept of a set (https://en.wikipedia.org/wiki/Set_(mathematics)), not Python `set`s.)",
        "createdAt" : "2018-09-23T11:22:05Z",
        "updatedAt" : "2018-09-23T16:42:20Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      }
    ],
    "commit" : "2c8c98769771db85c8a99fb624692ed302328217",
    "line" : 157,
    "diffHunk" : "@@ -1,1 +1326,1330 @@            else:\n                return set_b >= set_a\n        elif compare['type'] == 'set(dict)':\n            for av in a:\n                found = False"
  },
  {
    "id" : "e811ed58-9343-4097-a181-bede20c521de",
    "prId" : 46322,
    "prUrl" : "https://github.com/ansible/ansible/pull/46322#pullrequestreview-161450034",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4b023c18-1eba-497b-822b-816489cae589",
        "parentId" : null,
        "authorId" : "eb0d4d45-fc86-46d7-80ad-df935262d3f7",
        "body" : "I think the comment needs updating to match the new behavior?",
        "createdAt" : "2018-10-04T00:53:06Z",
        "updatedAt" : "2018-10-04T05:18:21Z",
        "lastEditedBy" : "eb0d4d45-fc86-46d7-80ad-df935262d3f7",
        "tags" : [
        ]
      },
      {
        "id" : "587853ec-7744-407d-ab29-e320a5168d93",
        "parentId" : "4b023c18-1eba-497b-822b-816489cae589",
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "Indeed! I've updated it.",
        "createdAt" : "2018-10-04T05:19:03Z",
        "updatedAt" : "2018-10-04T05:19:03Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      }
    ],
    "commit" : "a8d95e746785257431885b85daea4a90a44760d3",
    "line" : 3,
    "diffHunk" : "@@ -1,1 +1912,1916 @@        container = self._get_container(self.parameters.name)\n\n        # If the image parameter was passed then we need to deal with the image\n        # version comparison. Otherwise we handle this depending on whether\n        # the container already runs or not; in the former case, in case the"
  },
  {
    "id" : "928866d9-0d0c-4eee-bb54-9264bebbded8",
    "prId" : 46772,
    "prUrl" : "https://github.com/ansible/ansible/pull/46772#pullrequestreview-163549135",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "161e239a-07c1-4581-ba39-81a0e2e6a269",
        "parentId" : null,
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "You need to add `version_added: \"2.8\"`",
        "createdAt" : "2018-10-10T20:35:09Z",
        "updatedAt" : "2018-10-24T07:36:26Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      }
    ],
    "commit" : "6d748f78fcaceb090f3b3262c5fe11cda4ff87b0",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +150,154 @@  healthcheck:\n    version_added: \"2.8\"\n    type: dict\n    description:\n      - 'Configure a check that is run to determine whether or not containers for this service are \"healthy\"."
  },
  {
    "id" : "8ffdbce4-d4e1-4302-9aa4-5fe2b0248cce",
    "prId" : 46772,
    "prUrl" : "https://github.com/ansible/ansible/pull/46772#pullrequestreview-163549135",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f81010db-18a4-42b0-8938-5181ab27f06d",
        "parentId" : null,
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "You should handle the case that `time_str` is not actually a string.",
        "createdAt" : "2018-10-10T20:44:56Z",
        "updatedAt" : "2018-10-24T07:36:26Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      }
    ],
    "commit" : "6d748f78fcaceb090f3b3262c5fe11cda4ff87b0",
    "line" : 145,
    "diffHunk" : "@@ -1,1 +1430,1434 @@\n        regex = re.compile(r'^(((?P<hours>\\d+)h)?((?P<minutes>\\d+)m(?!s))?((?P<seconds>\\d+)s)?((?P<milliseconds>\\d+)ms)?((?P<microseconds>\\d+)us)?)$')\n        parts = regex.match(time_str)\n\n        if not parts:"
  },
  {
    "id" : "7f06c2b3-3e77-422e-89d1-0e866fb302c3",
    "prId" : 46772,
    "prUrl" : "https://github.com/ansible/ansible/pull/46772#pullrequestreview-166777346",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "09f75e5c-10fc-4123-864c-93e8938d335a",
        "parentId" : null,
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "Thanks for splitting this :) I forgot to run `flake8` manually...",
        "createdAt" : "2018-10-21T09:34:29Z",
        "updatedAt" : "2018-10-24T07:36:26Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      }
    ],
    "commit" : "6d748f78fcaceb090f3b3262c5fe11cda4ff87b0",
    "line" : 221,
    "diffHunk" : "@@ -1,1 +2515,2519 @@        comparisons['disable_healthcheck'] = dict(type='value',\n                                                  comparison='ignore' if comparisons['healthcheck']['comparison'] == 'ignore' else 'strict',\n                                                  name='disable_healthcheck')\n        # Check legacy values\n        if self.module.params['ignore_image'] and comparisons['image']['comparison'] != 'ignore':"
  },
  {
    "id" : "ab8a9376-5b27-426b-af45-3d0170cdb5ac",
    "prId" : 46772,
    "prUrl" : "https://github.com/ansible/ansible/pull/46772#pullrequestreview-167241056",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "186781ac-2203-4c95-b250-1fc6f4e4c6c6",
        "parentId" : null,
        "authorId" : "183d9a20-6a5e-4432-9fe9-9fd6fe9514fb",
        "body" : "Is RETURN not impacted by this change at all?",
        "createdAt" : "2018-10-23T05:50:59Z",
        "updatedAt" : "2018-10-24T07:36:26Z",
        "lastEditedBy" : "183d9a20-6a5e-4432-9fe9-9fd6fe9514fb",
        "tags" : [
        ]
      },
      {
        "id" : "34f92a34-771b-44aa-8234-c11ce0959469",
        "parentId" : "186781ac-2203-4c95-b250-1fc6f4e4c6c6",
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "No, it simply returns the equivalent of `docker inspect` as returned by the API, so it already returned healthcheck information (even though the module didn't allow to modify/set it, in case the container was created by something else with a healthcheck, that information was already available here).",
        "createdAt" : "2018-10-23T06:52:35Z",
        "updatedAt" : "2018-10-24T07:36:26Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      }
    ],
    "commit" : "6d748f78fcaceb090f3b3262c5fe11cda4ff87b0",
    "line" : 51,
    "diffHunk" : "@@ -1,1 +700,704 @@'''\n\nRETURN = '''\ndocker_container:\n    description:"
  },
  {
    "id" : "991b2b5a-9e88-4135-87c3-f0cadd9680e5",
    "prId" : 46772,
    "prUrl" : "https://github.com/ansible/ansible/pull/46772#pullrequestreview-167563915",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5ed39f55-d37b-4112-bec4-cd9f6b4e8bba",
        "parentId" : null,
        "authorId" : "eb0d4d45-fc86-46d7-80ad-df935262d3f7",
        "body" : "Why not use a `list` as `key, value` are all same? `for option in options` seems make later logic clearer.",
        "createdAt" : "2018-10-23T07:56:31Z",
        "updatedAt" : "2018-10-24T07:36:26Z",
        "lastEditedBy" : "eb0d4d45-fc86-46d7-80ad-df935262d3f7",
        "tags" : [
        ]
      },
      {
        "id" : "416ce9a6-a2aa-4874-8696-5d221ee5df2e",
        "parentId" : "5ed39f55-d37b-4112-bec4-cd9f6b4e8bba",
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "I guess the only reason would be if we'd rename something in the future. But yeah, a list is probably better.",
        "createdAt" : "2018-10-23T18:11:30Z",
        "updatedAt" : "2018-10-24T07:36:26Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      }
    ],
    "commit" : "6d748f78fcaceb090f3b3262c5fe11cda4ff87b0",
    "line" : 110,
    "diffHunk" : "@@ -1,1 +1395,1399 @@        duration_options = ['interval', 'timeout', 'start_period']\n\n        for (key, value) in options.items():\n            if value in self.healthcheck:\n                if value in duration_options:"
  },
  {
    "id" : "e71ef3b1-607f-48ed-9f6b-71e50ac2533b",
    "prId" : 46772,
    "prUrl" : "https://github.com/ansible/ansible/pull/46772#pullrequestreview-167564203",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1b9dd186-919d-4d59-a5b3-9e5cd1863506",
        "parentId" : null,
        "authorId" : "eb0d4d45-fc86-46d7-80ad-df935262d3f7",
        "body" : "Should we pass it into the `result` if `time` is zero?",
        "createdAt" : "2018-10-23T08:09:12Z",
        "updatedAt" : "2018-10-24T07:36:26Z",
        "lastEditedBy" : "eb0d4d45-fc86-46d7-80ad-df935262d3f7",
        "tags" : [
        ]
      },
      {
        "id" : "6da02aa6-05f4-408a-bdda-8d1248e41bdd",
        "parentId" : "1b9dd186-919d-4d59-a5b3-9e5cd1863506",
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "Hmm, I think so. If the user specified zero, it probably has a good reason (or should fail if docker doesn't like it).",
        "createdAt" : "2018-10-23T09:00:22Z",
        "updatedAt" : "2018-10-24T07:36:26Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      },
      {
        "id" : "0c7c9fee-f1af-4983-9160-c1efee1f3cb3",
        "parentId" : "1b9dd186-919d-4d59-a5b3-9e5cd1863506",
        "authorId" : "c06f0bb5-53f6-4370-838f-ec9e4f5ef390",
        "body" : "When specify healthcheck parameter to zero, eg. `--health-interval=0s ` in following example\r\n```\r\ndocker run --name=nginx-proxy -d --health-cmd='curl --fail http://nginx.host.com || exit 1' --health-interval=0s   nginx:1.13\r\n```\r\nThen check `docker inspect <container id>`, It does not displays that parameter.\r\n```\r\n...\r\n            \"Healthcheck\": {\r\n                \"Test\": [\r\n                    \"CMD-SHELL\",\r\n                    \"curl --fail http://nginx.host.com || exit 1\"\r\n                ]\r\n            },\r\n```\r\n Does it mean docker daemon ignore such parameter?\r\n\r\n",
        "createdAt" : "2018-10-23T10:27:22Z",
        "updatedAt" : "2018-10-24T07:36:26Z",
        "lastEditedBy" : "c06f0bb5-53f6-4370-838f-ec9e4f5ef390",
        "tags" : [
        ]
      },
      {
        "id" : "18f63687-c50a-4a53-a05a-d2052bfd4275",
        "parentId" : "1b9dd186-919d-4d59-a5b3-9e5cd1863506",
        "authorId" : "eb0d4d45-fc86-46d7-80ad-df935262d3f7",
        "body" : "Ah, this is `golang`'s `omitempty`: https://github.com/moby/moby/blob/8e610b2b55bfd1bfa9436ab110d311f5e8a74dcb/api/types/container/config.go#L28",
        "createdAt" : "2018-10-23T11:25:35Z",
        "updatedAt" : "2018-10-24T07:36:26Z",
        "lastEditedBy" : "eb0d4d45-fc86-46d7-80ad-df935262d3f7",
        "tags" : [
        ]
      },
      {
        "id" : "4cca58b9-b3cf-40e6-a5e7-10dafd456328",
        "parentId" : "1b9dd186-919d-4d59-a5b3-9e5cd1863506",
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "In that case, we'd also better drop it, otherwise we'll get idempotency problems...",
        "createdAt" : "2018-10-23T18:12:09Z",
        "updatedAt" : "2018-10-24T07:36:26Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      }
    ],
    "commit" : "6d748f78fcaceb090f3b3262c5fe11cda4ff87b0",
    "line" : 113,
    "diffHunk" : "@@ -1,1 +1398,1402 @@            if value in self.healthcheck:\n                if value in duration_options:\n                    time = self._convert_duration_to_nanosecond(self.healthcheck.get(value))\n                    if time:\n                        result[key] = time"
  },
  {
    "id" : "c55cf587-600d-4a5b-ad43-bdd3055f1145",
    "prId" : 46772,
    "prUrl" : "https://github.com/ansible/ansible/pull/46772#pullrequestreview-167302822",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "23da96e8-0a06-4992-a730-29834b78dd4b",
        "parentId" : null,
        "authorId" : "eb0d4d45-fc86-46d7-80ad-df935262d3f7",
        "body" : "We can reduce the level of indents:\r\n\r\n```python\r\nelif option == 'test':\r\nelif option == 'retries':\r\nelse:\r\n    result[option] = self.healthcheck.get(option)\r\n```\r\n\r\nAnd I don't thinks someone will be bored enough to specify a `test: \"\"` to get into the `elif self.healthcheck.get(value):\r\n` check",
        "createdAt" : "2018-10-23T08:13:14Z",
        "updatedAt" : "2018-10-24T07:36:26Z",
        "lastEditedBy" : "eb0d4d45-fc86-46d7-80ad-df935262d3f7",
        "tags" : [
        ]
      },
      {
        "id" : "c9f4f218-7ca9-4ccd-82d9-125cc0c3e32a",
        "parentId" : "23da96e8-0a06-4992-a730-29834b78dd4b",
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "Hmm, that could improve it a bit. It will be still a bit complex, though :)\r\n\r\n(Also, never underestimate users which will specify something which doesn't make sense ;) )",
        "createdAt" : "2018-10-23T09:08:08Z",
        "updatedAt" : "2018-10-24T07:36:26Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      }
    ],
    "commit" : "6d748f78fcaceb090f3b3262c5fe11cda4ff87b0",
    "line" : 118,
    "diffHunk" : "@@ -1,1 +1403,1407 @@                elif self.healthcheck.get(value):\n                    result[key] = self.healthcheck.get(value)\n                    if key == 'test':\n                        if isinstance(result[key], (tuple, list)):\n                            result[key] = [str(e) for e in result[key]]"
  },
  {
    "id" : "94fa565f-cda7-4f05-8d5d-ead9826d5ee2",
    "prId" : 46772,
    "prUrl" : "https://github.com/ansible/ansible/pull/46772#pullrequestreview-167300481",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2365c10a-423b-4984-97af-4bc16651e199",
        "parentId" : null,
        "authorId" : "eb0d4d45-fc86-46d7-80ad-df935262d3f7",
        "body" : "Should we detect such a stupid mistake from users xD?",
        "createdAt" : "2018-10-23T08:14:45Z",
        "updatedAt" : "2018-10-24T07:36:26Z",
        "lastEditedBy" : "eb0d4d45-fc86-46d7-80ad-df935262d3f7",
        "tags" : [
        ]
      },
      {
        "id" : "f5f5dffe-dd48-4cd7-a0a3-e41f86ee2365",
        "parentId" : "2365c10a-423b-4984-97af-4bc16651e199",
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "Yes. It could happen that someone templates something and gets the wrong value. If docker_container barfs with an exception, we get an Issue, if it returns a nice error, the user will hopefully solve the problem without filing an Issue ;)",
        "createdAt" : "2018-10-23T09:03:30Z",
        "updatedAt" : "2018-10-24T07:36:26Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      }
    ],
    "commit" : "6d748f78fcaceb090f3b3262c5fe11cda4ff87b0",
    "line" : 126,
    "diffHunk" : "@@ -1,1 +1411,1415 @@                        try:\n                            result[key] = int(result[key])\n                        except Exception as e:\n                            self.fail('Cannot parse number of retries for healthcheck. '\n                                      'Expected an integer, got \"{0}\".'.format(result[key]))"
  },
  {
    "id" : "fafaf08a-b665-43ae-9352-b99a5eae4d2e",
    "prId" : 46772,
    "prUrl" : "https://github.com/ansible/ansible/pull/46772#pullrequestreview-167325069",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1236174a-0aa8-4b07-ab31-0a64a73bc91d",
        "parentId" : null,
        "authorId" : "eb0d4d45-fc86-46d7-80ad-df935262d3f7",
        "body" : "I think the `comparisons` can handle such kind of usage @felixfontein ? And per the documentation, `NONE` seems only used in `Dockerfile` for overriding the parent configuration.",
        "createdAt" : "2018-10-23T08:16:29Z",
        "updatedAt" : "2018-10-24T07:36:26Z",
        "lastEditedBy" : "eb0d4d45-fc86-46d7-80ad-df935262d3f7",
        "tags" : [
        ]
      },
      {
        "id" : "b4341570-0a99-455e-8b88-64950af8e5c8",
        "parentId" : "1236174a-0aa8-4b07-ab31-0a64a73bc91d",
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "It's a bit more complicated. `test: ['NONE']` is equivalent to not having a healthcheck, which is something `comparsions` doesn't understand. We decided to use the `test: ['NONE']` syntax to disable healthchecks because the alternatives are kind of strange. Accepting `healthcheck: None` doesn't work (since that means \"I don't care if the container has a healthcheck\"), and `healthcheck: { }` (which we had before) is also kind of strange (and still needs the extra complexity with `disable_healthcheck` since the default comparison for dicts, `allow_more_present`, won't detect disabling in this case).\r\n\r\nHaving the explicit `test: ['NONE']` seems like the best way (and the most compatbile one with `comparisons`).",
        "createdAt" : "2018-10-23T09:07:05Z",
        "updatedAt" : "2018-10-24T07:36:26Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      },
      {
        "id" : "7cbb7595-5751-4ba8-9e46-8f24016e97f2",
        "parentId" : "1236174a-0aa8-4b07-ab31-0a64a73bc91d",
        "authorId" : "eb0d4d45-fc86-46d7-80ad-df935262d3f7",
        "body" : "I think `healthcheck: None` and `comparisons: heathcheck: strict` is enough for this?\r\n\r\nWell, I prefer using existing functions.",
        "createdAt" : "2018-10-23T09:45:05Z",
        "updatedAt" : "2018-10-24T07:36:26Z",
        "lastEditedBy" : "eb0d4d45-fc86-46d7-80ad-df935262d3f7",
        "tags" : [
        ]
      },
      {
        "id" : "b219f625-cd02-4634-8a7d-95e4b876fbf6",
        "parentId" : "1236174a-0aa8-4b07-ab31-0a64a73bc91d",
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "No, because `None` is the same as not specified, and thus `None` always means that no comparison is done. We really need something which is explicitly not `None`.",
        "createdAt" : "2018-10-23T09:51:50Z",
        "updatedAt" : "2018-10-24T07:36:26Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      }
    ],
    "commit" : "6d748f78fcaceb090f3b3262c5fe11cda4ff87b0",
    "line" : 130,
    "diffHunk" : "@@ -1,1 +1415,1419 @@                                      'Expected an integer, got \"{0}\".'.format(result[key]))\n\n        if result['test'] == ['NONE']:\n            # If the user explicitly disables the healthcheck, return None\n            # as the healthcheck object, and set disable_healthcheck to True"
  },
  {
    "id" : "0a5ccb2a-cac8-4ca4-b5e0-1e03f77e8694",
    "prId" : 46772,
    "prUrl" : "https://github.com/ansible/ansible/pull/46772#pullrequestreview-167567128",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f3d1c99e-d665-45fb-9219-599532fb0b3d",
        "parentId" : null,
        "authorId" : "eb0d4d45-fc86-46d7-80ad-df935262d3f7",
        "body" : "I think the `disable_healthcheck` is redundant, we can leave the logic to `comparisons` and users to handle it. Introducing this logic might also conflict with `docker`'s original logic, as `docker run --health-cmd ANYTHING` will always generate a \"CMD-SHELL\" entry in `HealthCheck.Test`(tested on CentOS with docker 1.13).",
        "createdAt" : "2018-10-23T08:35:00Z",
        "updatedAt" : "2018-10-24T07:36:26Z",
        "lastEditedBy" : "eb0d4d45-fc86-46d7-80ad-df935262d3f7",
        "tags" : [
        ]
      },
      {
        "id" : "7a691b04-4dbd-4ce8-94b9-ac2ac25d7658",
        "parentId" : "f3d1c99e-d665-45fb-9219-599532fb0b3d",
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "It doesn't really work that way, since docker indicates \"no healthcheck\" by returning `None` (I think), which isn't compatible to what `comparisons` does.\r\n\r\nI don't understand why this logic (you mean `disable_healthcheck`?) conflicts with `docker`'s original logic?\r\n\r\nIn any way, I think we have to convert the string syntax for `test` to `CMD-SHELL`, otherwise idempotency won't work. That's a good point! (We should also have a test for it.)",
        "createdAt" : "2018-10-23T09:10:49Z",
        "updatedAt" : "2018-10-24T07:36:26Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      },
      {
        "id" : "b861e89c-4c39-4d5f-a439-3f36a4b3991f",
        "parentId" : "f3d1c99e-d665-45fb-9219-599532fb0b3d",
        "authorId" : "eb0d4d45-fc86-46d7-80ad-df935262d3f7",
        "body" : "Yes, so I think we just need to `strict` compare these two options.",
        "createdAt" : "2018-10-23T09:47:46Z",
        "updatedAt" : "2018-10-24T07:36:26Z",
        "lastEditedBy" : "eb0d4d45-fc86-46d7-80ad-df935262d3f7",
        "tags" : [
        ]
      },
      {
        "id" : "c346afd1-4407-4115-954f-f6137c75bb3b",
        "parentId" : "f3d1c99e-d665-45fb-9219-599532fb0b3d",
        "authorId" : "c06f0bb5-53f6-4370-838f-ec9e4f5ef390",
        "body" : "> In any way, I think we have to convert the string syntax for test to CMD-SHELL\r\n\r\nRight. There could be easy fix, like:\r\n```\r\nif isinstance(result[key], (tuple, list)):\r\n    result[key] = [str(e) for e in result[key]]\r\nelse:\r\n    result[key] = [\"CMD-SHELL\", str(result[key])]\r\n```\r\n\r\nI will update code for this along with test for it.",
        "createdAt" : "2018-10-23T13:02:40Z",
        "updatedAt" : "2018-10-24T07:36:26Z",
        "lastEditedBy" : "c06f0bb5-53f6-4370-838f-ec9e4f5ef390",
        "tags" : [
        ]
      },
      {
        "id" : "19351150-2045-439f-b219-e0ac0ad305c6",
        "parentId" : "f3d1c99e-d665-45fb-9219-599532fb0b3d",
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "Yes, that looks good. In particular, add an idempotency test for this one.",
        "createdAt" : "2018-10-23T18:18:33Z",
        "updatedAt" : "2018-10-24T07:36:26Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      }
    ],
    "commit" : "6d748f78fcaceb090f3b3262c5fe11cda4ff87b0",
    "line" : 185,
    "diffHunk" : "@@ -1,1 +1703,1707 @@            publish_all_ports=host_config.get('PublishAllPorts'),\n            expected_healthcheck=config.get('Healthcheck'),\n            disable_healthcheck=(not config.get('Healthcheck') or config.get('Healthcheck').get('Test') == ['NONE']),\n        )\n        if self.parameters.restart_policy:"
  },
  {
    "id" : "8bcee3a3-36a0-48d1-8586-e2c4c253bdaa",
    "prId" : 47814,
    "prUrl" : "https://github.com/ansible/ansible/pull/47814#pullrequestreview-170152514",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2d57cf23-83f0-4b2f-818d-02f81bb32250",
        "parentId" : null,
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "This part will become much simpler with #47711 :) Whatever is merged first, the other will have to adjust accordingly ;)",
        "createdAt" : "2018-10-30T20:09:11Z",
        "updatedAt" : "2018-11-01T18:31:50Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      },
      {
        "id" : "9500a416-ccd6-44b2-ad0f-6bc5cec573d3",
        "parentId" : "2d57cf23-83f0-4b2f-818d-02f81bb32250",
        "authorId" : "c06f0bb5-53f6-4370-838f-ec9e4f5ef390",
        "body" : "Yup. Minimum required version checks would become simpler when #47711 get merged.",
        "createdAt" : "2018-10-31T09:18:47Z",
        "updatedAt" : "2018-11-01T18:31:50Z",
        "lastEditedBy" : "c06f0bb5-53f6-4370-838f-ec9e4f5ef390",
        "tags" : [
        ]
      }
    ],
    "commit" : "7ef9548703c1f89ff82584889fd654a7d539d0bd",
    "line" : 171,
    "diffHunk" : "@@ -1,1 +2624,2628 @@            self.fail(\"docker or docker-py version is %s. Minimum version required is 2.0 to set healthcheck option.\" % (docker_version,))\n\n        found_device_limit_param = False\n        for x in [\"device_read_bps\", \"device_write_bps\", \"device_read_iops\", \"device_write_iops\"]:\n            if self.module.params.get(x):"
  },
  {
    "id" : "91badb15-0e20-4589-8f02-3796790c3ad6",
    "prId" : 49843,
    "prUrl" : "https://github.com/ansible/ansible/pull/49843#pullrequestreview-184895110",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dad832f2-9545-42c2-9118-4988ff9614b3",
        "parentId" : null,
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "For most values (like this one) not quoting them is fine, but it's probably a good idea to set a good example here :)\r\n\r\nMaybe add a second example with `\"yes\"` or so (and add a comment that quotations are needed as it is otherwise parsed as a bool).",
        "createdAt" : "2018-12-13T22:19:02Z",
        "updatedAt" : "2018-12-13T23:01:31Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      }
    ],
    "commit" : "e13803f28428aa8ab8c0cc133aacd226e50afb64",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +647,651 @@     - \"127.0.0.1:8081:9001/udp\"\n    env:\n        SECRET_KEY: \"ssssh\"\n        # Values which might be parsed as numbers, booleans or other types by the YAML parser need to be quoted\n        BOOLEAN_KEY: \"yes\""
  },
  {
    "id" : "7de88a02-8cff-4cef-aab5-60b1738e93d4",
    "prId" : 59986,
    "prUrl" : "https://github.com/ansible/ansible/pull/59986#pullrequestreview-272171736",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7fbc572d-3f46-49af-97c6-07833578fe62",
        "parentId" : null,
        "authorId" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "body" : "Note, not a blocker for this backport but a few things to keep in mind:\r\n* ````re.compile()```'ing these regexes outside of the loop would be a nice optimization\r\n* there may be something that's useful in ```ansible.module_utils.compat.ipaddress``` that would let us not maintain our own regexes for some of the things done here.",
        "createdAt" : "2019-08-07T19:10:33Z",
        "updatedAt" : "2019-08-07T19:10:33Z",
        "lastEditedBy" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "tags" : [
        ]
      }
    ],
    "commit" : "b2615919c8900f0a9188813de5ddfe4853ad9694",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +1455,1459 @@                # We only allow IPv4 and IPv6 addresses for the bind address\n                ipaddr = parts[0]\n                if not re.match(r'^[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$', parts[0]) and not re.match(r'^\\[[0-9a-fA-F:]+\\]$', ipaddr):\n                    self.fail(('Bind addresses for published ports must be IPv4 or IPv6 addresses, not hostnames. '\n                               'Use the dig lookup to resolve hostnames. (Found hostname: {0})').format(ipaddr))"
  },
  {
    "id" : "a57c3f88-de7b-47e9-b60c-d488c6d892ea",
    "prId" : 62179,
    "prUrl" : "https://github.com/ansible/ansible/pull/62179#pullrequestreview-297123092",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "06cd7d5b-1363-4523-9dfe-19ee0f638655",
        "parentId" : null,
        "authorId" : "d2d80496-0795-4618-ba72-36ae6c5b52ef",
        "body" : "There are some points which could be improved too while you are here :), e.g. \r\n1. some descriptions end with dots, some not\r\n2. in ```comparisons```'s parameter there are big bunches of texts, could be split\r\n3. some sentences of descriptions are in quotes (without need)\r\n4. too long sentences happen\r\n5. seealso section could be added (at list with general links to the docker documentation, and other related docker modules)\r\n\r\n",
        "createdAt" : "2019-10-03T06:04:06Z",
        "updatedAt" : "2019-10-03T06:04:21Z",
        "lastEditedBy" : "d2d80496-0795-4618-ba72-36ae6c5b52ef",
        "tags" : [
        ]
      },
      {
        "id" : "159b88f5-efd4-449d-b4d4-cb6980a4889d",
        "parentId" : "06cd7d5b-1363-4523-9dfe-19ee0f638655",
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "These are things that can also be backported to stable-2.8, so I'd rather do that in another PR.",
        "createdAt" : "2019-10-03T20:14:02Z",
        "updatedAt" : "2019-10-03T20:14:02Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      }
    ],
    "commit" : "508f768d7443119680919f6955cdbb14ff7beff3",
    "line" : 150,
    "diffHunk" : "@@ -1,1 +713,717 @@      - Mount a tmpfs directory\n    type: list\n    elements: str\n    version_added: 2.4\n  tty:"
  },
  {
    "id" : "1fb111bb-a105-4dba-b7ab-df9b0c2c5074",
    "prId" : 63165,
    "prUrl" : "https://github.com/ansible/ansible/pull/63165#pullrequestreview-298406378",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dd2f5799-6872-4d56-bb4a-15fb1885aebe",
        "parentId" : null,
        "authorId" : "d2d80496-0795-4618-ba72-36ae6c5b52ef",
        "body" : "```suggestion\r\n      - \"*Warning:* This option is ignored if I(image=ignore) or I(*=ignore) is specified in the\r\n```",
        "createdAt" : "2019-10-07T06:36:59Z",
        "updatedAt" : "2019-10-08T15:38:50Z",
        "lastEditedBy" : "d2d80496-0795-4618-ba72-36ae6c5b52ef",
        "tags" : [
        ]
      },
      {
        "id" : "7c1c1905-5560-4c47-b757-e5c29694a92c",
        "parentId" : "dd2f5799-6872-4d56-bb4a-15fb1885aebe",
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "It's not a module option, but a suboption (in a dictionary). So you can't write `image=ignore`, but have to use some YAML dictionary notation (which needs `:`).",
        "createdAt" : "2019-10-07T20:14:17Z",
        "updatedAt" : "2019-10-08T15:38:50Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      },
      {
        "id" : "19f95af5-e1fa-48af-94ae-c3d0935cbe16",
        "parentId" : "dd2f5799-6872-4d56-bb4a-15fb1885aebe",
        "authorId" : "d2d80496-0795-4618-ba72-36ae6c5b52ef",
        "body" : "i guessed that you didn't make a mistake here and in the other places :) Decided to aks just in case",
        "createdAt" : "2019-10-07T20:57:29Z",
        "updatedAt" : "2019-10-08T15:38:50Z",
        "lastEditedBy" : "d2d80496-0795-4618-ba72-36ae6c5b52ef",
        "tags" : [
        ]
      }
    ],
    "commit" : "928b1a4a8b90b172a4a2c7b043cc04e177c526cc",
    "line" : 199,
    "diffHunk" : "@@ -1,1 +308,312 @@        version in the registry does not match the container, the container will be recreated. You can\n        stop this behavior by setting I(ignore_image) to C(True).\n      - \"*Warning:* This option is ignored if C(image: ignore) or C(*: ignore) is specified in the\n        I(comparisons) option.\"\n    type: bool"
  },
  {
    "id" : "137844d2-f3e4-401e-af3f-4858cfa7c57c",
    "prId" : 63165,
    "prUrl" : "https://github.com/ansible/ansible/pull/63165#pullrequestreview-298383346",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "540aad92-ea30-4fb6-9094-6cdb8b8e8179",
        "parentId" : null,
        "authorId" : "d2d80496-0795-4618-ba72-36ae6c5b52ef",
        "body" : "it is a good idea to put elements of list alphabetically",
        "createdAt" : "2019-10-07T06:39:33Z",
        "updatedAt" : "2019-10-08T15:38:50Z",
        "lastEditedBy" : "d2d80496-0795-4618-ba72-36ae6c5b52ef",
        "tags" : [
        ]
      },
      {
        "id" : "8b95fec4-59d9-4661-aac2-90d0bfe51743",
        "parentId" : "540aad92-ea30-4fb6-9094-6cdb8b8e8179",
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "Done.",
        "createdAt" : "2019-10-07T20:15:46Z",
        "updatedAt" : "2019-10-08T15:38:50Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      }
    ],
    "commit" : "928b1a4a8b90b172a4a2c7b043cc04e177c526cc",
    "line" : 312,
    "diffHunk" : "@@ -1,1 +430,434 @@        type: str\n        choices:\n          - bind\n          - npipe\n          - tmpfs"
  },
  {
    "id" : "9fc8e592-573e-4b07-a4e6-2637979269e5",
    "prId" : 63165,
    "prUrl" : "https://github.com/ansible/ansible/pull/63165#pullrequestreview-298407801",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "81c2da20-881e-453b-83ea-62895e347f4e",
        "parentId" : null,
        "authorId" : "d2d80496-0795-4618-ba72-36ae6c5b52ef",
        "body" : "the same as above",
        "createdAt" : "2019-10-07T06:40:13Z",
        "updatedAt" : "2019-10-08T15:38:50Z",
        "lastEditedBy" : "d2d80496-0795-4618-ba72-36ae6c5b52ef",
        "tags" : [
        ]
      },
      {
        "id" : "489ad703-6aac-4bb0-97c2-f3d7687a48f2",
        "parentId" : "81c2da20-881e-453b-83ea-62895e347f4e",
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "Here I would keep this order, since here the `r` variant is always next to the non-`r` variant; and the non-`r` variants are ordered alphabetically.",
        "createdAt" : "2019-10-07T20:17:07Z",
        "updatedAt" : "2019-10-08T15:38:50Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      },
      {
        "id" : "b3869da3-123d-44c4-ac80-62a380fc1850",
        "parentId" : "81c2da20-881e-453b-83ea-62895e347f4e",
        "authorId" : "d2d80496-0795-4618-ba72-36ae6c5b52ef",
        "body" : "ok, np, it's just a recommendation AFAIK",
        "createdAt" : "2019-10-07T21:00:07Z",
        "updatedAt" : "2019-10-08T15:38:50Z",
        "lastEditedBy" : "d2d80496-0795-4618-ba72-36ae6c5b52ef",
        "tags" : [
        ]
      }
    ],
    "commit" : "928b1a4a8b90b172a4a2c7b043cc04e177c526cc",
    "line" : 348,
    "diffHunk" : "@@ -1,1 +454,458 @@        choices:\n          - private\n          - rprivate\n          - shared\n          - rshared"
  },
  {
    "id" : "26579d84-a954-4cb9-a733-30b96e2019b5",
    "prId" : 63165,
    "prUrl" : "https://github.com/ansible/ansible/pull/63165#pullrequestreview-297922658",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "793d7303-5237-42f2-a85e-df6b0842bc86",
        "parentId" : null,
        "authorId" : "d2d80496-0795-4618-ba72-36ae6c5b52ef",
        "body" : "```suggestion\r\n      - Set the user namespace mode for the container. Currently, the only valid values are C(host) and the empty string.\r\n```",
        "createdAt" : "2019-10-07T06:41:38Z",
        "updatedAt" : "2019-10-08T15:38:50Z",
        "lastEditedBy" : "d2d80496-0795-4618-ba72-36ae6c5b52ef",
        "tags" : [
        ]
      }
    ],
    "commit" : "928b1a4a8b90b172a4a2c7b043cc04e177c526cc",
    "line" : 385,
    "diffHunk" : "@@ -1,1 +501,505 @@  userns_mode:\n    description:\n      - Set the user namespace mode for the container. Currently, the only valid value are C(host) and the empty string.\n    type: str\n    version_added: \"2.5\""
  },
  {
    "id" : "67f42b0c-dbe1-430e-8b6b-3861042caee4",
    "prId" : 63165,
    "prUrl" : "https://github.com/ansible/ansible/pull/63165#pullrequestreview-298405167",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "15f302fe-68ef-42c2-966c-f8950a9020a1",
        "parentId" : null,
        "authorId" : "d2d80496-0795-4618-ba72-36ae6c5b52ef",
        "body" : "such huge bunches of texts here.. difficult to read.\r\nprobably split them to several lines and put something between logical groups?",
        "createdAt" : "2019-10-07T06:47:55Z",
        "updatedAt" : "2019-10-08T15:38:50Z",
        "lastEditedBy" : "d2d80496-0795-4618-ba72-36ae6c5b52ef",
        "tags" : [
        ]
      },
      {
        "id" : "9e636291-1df9-42a1-8bde-4c17069cf786",
        "parentId" : "15f302fe-68ef-42c2-966c-f8950a9020a1",
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "I've tried to restructure the `state` documentation. PTAL.",
        "createdAt" : "2019-10-07T20:31:44Z",
        "updatedAt" : "2019-10-08T15:38:50Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      },
      {
        "id" : "f515488d-70bb-492e-88c6-f7c0b7d5d7df",
        "parentId" : "15f302fe-68ef-42c2-966c-f8950a9020a1",
        "authorId" : "d2d80496-0795-4618-ba72-36ae6c5b52ef",
        "body" : "it's a bit late and my mind it is unclear now but LGTM - much more compact and readable, thanks :)",
        "createdAt" : "2019-10-07T20:55:12Z",
        "updatedAt" : "2019-10-08T15:38:50Z",
        "lastEditedBy" : "d2d80496-0795-4618-ba72-36ae6c5b52ef",
        "tags" : [
        ]
      }
    ],
    "commit" : "928b1a4a8b90b172a4a2c7b043cc04e177c526cc",
    "line" : 530,
    "diffHunk" : "@@ -1,1 +686,690 @@         rather than stopping it. Use I(keep_volumes) to retain volumes associated with the removed container.'\n      - 'C(present) - Asserts the existence of a container matching the name and any provided configuration parameters. If no\n        container matches the name, a container will be created. If a container matches the name but the provided configuration\n        does not match, the container will be updated, if it can be. If it cannot be updated, it will be removed and re-created\n        with the requested config.'"
  },
  {
    "id" : "48948e29-153f-4346-8a4a-87a01ab899bf",
    "prId" : 65854,
    "prUrl" : "https://github.com/ansible/ansible/pull/65854#pullrequestreview-336771216",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9f0c3d5c-1436-460e-9d60-205f6c375be2",
        "parentId" : null,
        "authorId" : "d2d80496-0795-4618-ba72-36ae6c5b52ef",
        "body" : "```\r\n    def wait_for_state(self, container_id, complete_states=None, wait_states=None, accept_removal=False):\r\n        delay = 1.0\r\n```\r\ni wonder if we can implement this as a new module's parameter\r\n(maybe leave this as you implemented in order to backport, then add the option to 2.10)",
        "createdAt" : "2019-12-27T08:42:04Z",
        "updatedAt" : "2019-12-27T08:45:51Z",
        "lastEditedBy" : "d2d80496-0795-4618-ba72-36ae6c5b52ef",
        "tags" : [
        ]
      },
      {
        "id" : "3b4dd357-5be2-4ee5-b51e-c997727947fb",
        "parentId" : "9f0c3d5c-1436-460e-9d60-205f6c375be2",
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "That's what I intend to do :)",
        "createdAt" : "2019-12-27T13:28:10Z",
        "updatedAt" : "2019-12-27T13:28:11Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      },
      {
        "id" : "642f9e12-5b28-4afd-962b-3c691627dece",
        "parentId" : "9f0c3d5c-1436-460e-9d60-205f6c375be2",
        "authorId" : "d2d80496-0795-4618-ba72-36ae6c5b52ef",
        "body" : "Perfect reader’s feedback on a column “You said exactly what i wanted to say but didn’t know how” , Thomas L. Freedman, Thank you for being late\r\n\r\nIt’s cool, feeling my progress:)",
        "createdAt" : "2019-12-27T13:33:43Z",
        "updatedAt" : "2019-12-27T13:33:44Z",
        "lastEditedBy" : "d2d80496-0795-4618-ba72-36ae6c5b52ef",
        "tags" : [
        ]
      }
    ],
    "commit" : "d31a3ff24c24f29269e35d9653ddd41be96b256d",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +2612,2616 @@\n    def wait_for_state(self, container_id, complete_states=None, wait_states=None, accept_removal=False):\n        delay = 1.0\n        while True:\n            # Inspect container"
  },
  {
    "id" : "f45c26c0-9eef-438f-b64e-42fa5b98d82a",
    "prId" : 66144,
    "prUrl" : "https://github.com/ansible/ansible/pull/66144#pullrequestreview-337722766",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6714578d-441e-420d-820c-640534b47147",
        "parentId" : null,
        "authorId" : "d2d80496-0795-4618-ba72-36ae6c5b52ef",
        "body" : "```suggestion\r\n        if max_wait is not None:\r\n            delay = max_wait:\r\n        else:\r\n            delay = 1.0\r\n```\r\nor something? just the default delay is 1.0 and you can set it to < or > of this value.\r\nThe added code from line 2644 looks a bit complex to me",
        "createdAt" : "2020-01-02T09:44:01Z",
        "updatedAt" : "2020-01-02T16:54:14Z",
        "lastEditedBy" : "d2d80496-0795-4618-ba72-36ae6c5b52ef",
        "tags" : [
        ]
      },
      {
        "id" : "6259d366-e677-4047-8df6-a1367bd9812e",
        "parentId" : "6714578d-441e-420d-820c-640534b47147",
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "That would not be correct, since maximal wait is not equal to the total wait. The module should wait at most `max_wait`, but not in one go, but do smaller waits (if appropriate) until the maximal wait time is reached.",
        "createdAt" : "2020-01-02T12:32:55Z",
        "updatedAt" : "2020-01-02T16:54:14Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      },
      {
        "id" : "e2717f7f-009a-4eda-88da-bf0a8e63d16a",
        "parentId" : "6714578d-441e-420d-820c-640534b47147",
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "The code in lines 2644 to 2649 makes sure that the total wait time never exceeds `max_wait`.",
        "createdAt" : "2020-01-02T12:34:03Z",
        "updatedAt" : "2020-01-02T16:54:14Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      },
      {
        "id" : "5c310bb7-8a94-4347-ae6d-45c7da335fe6",
        "parentId" : "6714578d-441e-420d-820c-640534b47147",
        "authorId" : "d2d80496-0795-4618-ba72-36ae6c5b52ef",
        "body" : "ok, thanks for the explanation:) just wanted to be sure you did exactly what you intended to do",
        "createdAt" : "2020-01-02T15:54:32Z",
        "updatedAt" : "2020-01-02T16:54:14Z",
        "lastEditedBy" : "d2d80496-0795-4618-ba72-36ae6c5b52ef",
        "tags" : [
        ]
      }
    ],
    "commit" : "fe6853198d0229c876c5d42ce8d9cd42bdee41c1",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +2624,2628 @@\n    def wait_for_state(self, container_id, complete_states=None, wait_states=None, accept_removal=False, max_wait=None):\n        delay = 1.0\n        total_wait = 0\n        while True:"
  },
  {
    "id" : "cdb9d467-bd90-40dc-afe1-ba00a9737302",
    "prId" : 66192,
    "prUrl" : "https://github.com/ansible/ansible/pull/66192#pullrequestreview-338527093",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7c12cff0-b026-4e11-8da2-99a53ac9ba47",
        "parentId" : null,
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "```suggestion\r\n            config_mapping['restart_retries'] = restart_policy_config_value.get('MaximumRetryCount')\r\n```\r\nand remove the line above. (Or even rename `restart_policy_config_value` to `restart_policy`.)",
        "createdAt" : "2020-01-06T05:49:44Z",
        "updatedAt" : "2020-01-06T08:58:45Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      },
      {
        "id" : "74f2dd4f-3e62-46a2-adac-f0994c2cbf1c",
        "parentId" : "7c12cff0-b026-4e11-8da2-99a53ac9ba47",
        "authorId" : "a5aa8669-7618-43ec-8ee2-8cb51f632961",
        "body" : "Done. I renamed the variable to restart_policy. Yesterday I thought it's required to distinguish between restart_policy and the new one but the existing restart_policy exists just in the scope of the config mapping dict. Tests were successful. ",
        "createdAt" : "2020-01-06T08:56:17Z",
        "updatedAt" : "2020-01-06T08:58:45Z",
        "lastEditedBy" : "a5aa8669-7618-43ec-8ee2-8cb51f632961",
        "tags" : [
        ]
      }
    ],
    "commit" : "09f846e0802e80b5896d77794d8243204a9aa8b9",
    "line" : 83,
    "diffHunk" : "@@ -1,1 +2281,2285 @@        # Options which don't make sense without their accompanying option\n        if self.parameters.restart_policy:\n            config_mapping['restart_retries'] = restart_policy.get('MaximumRetryCount')\n\n        differences = DifferenceTracker()"
  },
  {
    "id" : "aed81f71-8e5d-496b-8bc2-fc9c8325c41c",
    "prId" : 66382,
    "prUrl" : "https://github.com/ansible/ansible/pull/66382#pullrequestreview-352755499",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "356b6c4d-f080-48ef-9f2d-804d3eaa6fdc",
        "parentId" : null,
        "authorId" : "f9290320-043a-4a41-bc50-d85d467ca18b",
        "body" : "I think these may be in reversed order, ie should be `8000-8100:9003`?",
        "createdAt" : "2020-02-03T22:30:02Z",
        "updatedAt" : "2020-02-03T22:32:38Z",
        "lastEditedBy" : "f9290320-043a-4a41-bc50-d85d467ca18b",
        "tags" : [
        ]
      },
      {
        "id" : "eb508fb3-6110-44ff-b6e6-536d86927bf1",
        "parentId" : "356b6c4d-f080-48ef-9f2d-804d3eaa6fdc",
        "authorId" : "f9290320-043a-4a41-bc50-d85d467ca18b",
        "body" : "Also think the comment can mention that it starts with lowest available one, not a random one, in that range. \r\n\r\nMaybe something like `# Publish container port 9003 to next available host port in range 8000-8100, going from lowest to highest range value` or `# Publish container port 9003 to lowest available host port in range 8000-8100` (the latter sounds better).",
        "createdAt" : "2020-02-03T23:45:55Z",
        "updatedAt" : "2020-02-03T23:54:35Z",
        "lastEditedBy" : "f9290320-043a-4a41-bc50-d85d467ca18b",
        "tags" : [
        ]
      },
      {
        "id" : "df200539-0e12-4bbf-94d8-c25b1409e699",
        "parentId" : "356b6c4d-f080-48ef-9f2d-804d3eaa6fdc",
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "Indeed! Looks like I got confused when switching back from the single-port variant to the two-ports(-ranges) variant...\r\n\r\nAnd good point about \"random\", it is not random indeed. I wouldn't specify the exact behavior though, just that it uses a free port in that range.",
        "createdAt" : "2020-02-04T06:31:16Z",
        "updatedAt" : "2020-02-04T06:31:16Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      },
      {
        "id" : "630cbb20-d0d4-49ef-89a7-1684554f7189",
        "parentId" : "356b6c4d-f080-48ef-9f2d-804d3eaa6fdc",
        "authorId" : "f9290320-043a-4a41-bc50-d85d467ca18b",
        "body" : "Sounds good, but it had the \"random\" word in the sentence and thought it might give a slightly incorrect impression. ",
        "createdAt" : "2020-02-04T06:55:59Z",
        "updatedAt" : "2020-02-04T06:55:59Z",
        "lastEditedBy" : "f9290320-043a-4a41-bc50-d85d467ca18b",
        "tags" : [
        ]
      }
    ],
    "commit" : "2ac31ac355a7c07c856eb31dd9a057601053d65f",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +897,901 @@     - \"9002\"\n     # Publish container port 9003 as a random host port in range 8000-8100\n     - \"9003:8000-8100\"\n     # Publish container ports 9010-9020 to host ports 7000-7010\n     - \"9010-9020:7000-7010\""
  },
  {
    "id" : "8f221941-fe7a-4f76-a3e7-b10b6c769d44",
    "prId" : 66382,
    "prUrl" : "https://github.com/ansible/ansible/pull/66382#pullrequestreview-352610757",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b20f6e13-57c2-4594-9fac-3c3bdb1562e2",
        "parentId" : null,
        "authorId" : "f9290320-043a-4a41-bc50-d85d467ca18b",
        "body" : "And should this be `#Publish host ports 9010-9020 to container ports 7000-7010` ? Or written as `#Publish container ports 7000-7010 to host ports 9010-9020`?",
        "createdAt" : "2020-02-03T22:31:46Z",
        "updatedAt" : "2020-02-03T22:37:13Z",
        "lastEditedBy" : "f9290320-043a-4a41-bc50-d85d467ca18b",
        "tags" : [
        ]
      }
    ],
    "commit" : "2ac31ac355a7c07c856eb31dd9a057601053d65f",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +899,903 @@     - \"9003:8000-8100\"\n     # Publish container ports 9010-9020 to host ports 7000-7010\n     - \"9010-9020:7000-7010\"\n    env:\n        SECRET_KEY: \"ssssh\""
  },
  {
    "id" : "ae8d94a7-1461-4978-8965-48300e6af090",
    "prId" : 70646,
    "prUrl" : "https://github.com/ansible/ansible/pull/70646#pullrequestreview-448649389",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "175922cc-0efe-46b6-83ab-2d09648b1f4f",
        "parentId" : null,
        "authorId" : "4b69a0b5-ac6f-45e9-9507-dd1385182f29",
        "body" : "Is there a reason `to_text` is being used here. The rule is that text strings should only be used on the module side when dealing with an API that requires text strings.\r\n\r\nIn a module native should be used everywhere, except in special cases. This is in opposition to controller code, where text should be used everywhere, except in special cases.\r\n\r\nhttps://gist.github.com/sivel/9eb368f98974e15033c3ac2f989ac4e0",
        "createdAt" : "2020-07-14T18:53:04Z",
        "updatedAt" : "2020-07-14T18:53:04Z",
        "lastEditedBy" : "4b69a0b5-ac6f-45e9-9507-dd1385182f29",
        "tags" : [
        ]
      },
      {
        "id" : "69619223-62db-4a7c-a5e0-c3c74b7dc570",
        "parentId" : "175922cc-0efe-46b6-83ab-2d09648b1f4f",
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "Docker (and previously docker-py) allow both `str` and `unicode` with Python 2, but everything they return from the docker daemon is `unicode`. The module fails miserably because it compares (in a sort operation) data returned by the daemon (`unicode`) with user input (`str`), and that fails. Thus we either change the module to convert everything the daemon gives to `str` (using `to_native`), or we convert all user input to `unicode` (using `to_text`). I think converting everything to `unicode` is better in this case.",
        "createdAt" : "2020-07-15T05:58:12Z",
        "updatedAt" : "2020-07-15T05:58:12Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      }
    ],
    "commit" : "cf58a2cc60605976bb44d3aaa6a0f4909d6d2400",
    "line" : 41,
    "diffHunk" : "@@ -1,1 +1331,1335 @@        if self.entrypoint:\n            # convert from list to str.\n            self.entrypoint = ' '.join([to_text(x, errors='surrogate_or_strict') for x in self.entrypoint])\n\n        if self.command:"
  }
]