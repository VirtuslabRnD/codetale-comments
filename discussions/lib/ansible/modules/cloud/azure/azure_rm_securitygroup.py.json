[
  {
    "id" : "fdbddb7f-97be-43b4-9d8e-7b4994493644",
    "prId" : 35538,
    "prUrl" : "https://github.com/ansible/ansible/pull/35538#pullrequestreview-95519144",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cf043e82-9677-454b-b4cc-cbbdc503d99b",
        "parentId" : null,
        "authorId" : "4ca8f397-6d40-4333-a80a-10b2991ebaee",
        "body" : "Since we may use the model out of a module class (e.g. instance_to_dict() functions usually be defined out of the class, but it may use SDK model), how to handle such scenario? ",
        "createdAt" : "2018-01-31T13:43:00Z",
        "updatedAt" : "2018-02-09T16:53:17Z",
        "lastEditedBy" : "4ca8f397-6d40-4333-a80a-10b2991ebaee",
        "tags" : [
        ]
      },
      {
        "id" : "f3873c4a-2ab1-4671-ae87-b1e959284fe7",
        "parentId" : "cf043e82-9677-454b-b4cc-cbbdc503d99b",
        "authorId" : "4ca8f397-6d40-4333-a80a-10b2991ebaee",
        "body" : "But it looks good overall",
        "createdAt" : "2018-01-31T13:48:58Z",
        "updatedAt" : "2018-02-09T16:53:17Z",
        "lastEditedBy" : "4ca8f397-6d40-4333-a80a-10b2991ebaee",
        "tags" : [
        ]
      },
      {
        "id" : "0fd9eed8-49f3-4eee-9145-4c50c48e98b1",
        "parentId" : "cf043e82-9677-454b-b4cc-cbbdc503d99b",
        "authorId" : "311820dd-fcb9-46df-a201-9c0e7d6fac58",
        "body" : "@yuwzho can you point to an example? I think I partially understand what you're getting at, but want to make sure...",
        "createdAt" : "2018-01-31T23:21:40Z",
        "updatedAt" : "2018-02-09T16:53:17Z",
        "lastEditedBy" : "311820dd-fcb9-46df-a201-9c0e7d6fac58",
        "tags" : [
        ]
      },
      {
        "id" : "134d2693-9800-4346-9d96-0ffb5d5962e5",
        "parentId" : "cf043e82-9677-454b-b4cc-cbbdc503d99b",
        "authorId" : "5b939d12-c27d-4f3d-84d8-9b69955ce2cf",
        "body" : "If it helps, note that every models have a `as_dict` method:\r\nhttps://github.com/Azure/msrest-for-python/wiki/msrest-0.4.12---Serialization-change",
        "createdAt" : "2018-02-09T18:35:52Z",
        "updatedAt" : "2018-02-09T18:35:52Z",
        "lastEditedBy" : "5b939d12-c27d-4f3d-84d8-9b69955ce2cf",
        "tags" : [
        ]
      }
    ],
    "commit" : "19e6b6d1ea02ecc14133678ef930b3ef619e3699",
    "line" : 60,
    "diffHunk" : "@@ -1,1 +553,557 @@        # this value is still overridden by the response Retry-After header (which is set on the initial operation response to 10s)\n        self.client.config.long_running_operation_timeout = 3\n        self.nsg_models = self.client.network_security_groups.models\n\n        for key in list(self.module_arg_spec.keys()) + ['tags']:"
  },
  {
    "id" : "8f6054f7-c725-46b0-aa21-95ee2816570c",
    "prId" : 38108,
    "prUrl" : "https://github.com/ansible/ansible/pull/38108#pullrequestreview-119699779",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2852e955-9dcd-42bd-aa5e-4eb8dbb56985",
        "parentId" : null,
        "authorId" : "4ca8f397-6d40-4333-a80a-10b2991ebaee",
        "body" : "will make the `protocol` also positional args?",
        "createdAt" : "2018-04-10T16:31:38Z",
        "updatedAt" : "2018-04-10T16:31:38Z",
        "lastEditedBy" : "4ca8f397-6d40-4333-a80a-10b2991ebaee",
        "tags" : [
        ]
      },
      {
        "id" : "95d36818-7224-4f07-bd67-eb112a1f5ef1",
        "parentId" : "2852e955-9dcd-42bd-aa5e-4eb8dbb56985",
        "authorId" : "bbe28466-7840-4312-b41a-c7e2c496a660",
        "body" : "is there any other parameter need same fix so that user will be able to update security group eventually",
        "createdAt" : "2018-04-25T12:52:45Z",
        "updatedAt" : "2018-04-25T12:52:45Z",
        "lastEditedBy" : "bbe28466-7840-4312-b41a-c7e2c496a660",
        "tags" : [
        ]
      },
      {
        "id" : "6c347bd2-788e-4f1d-a9bb-e72eb4b50934",
        "parentId" : "2852e955-9dcd-42bd-aa5e-4eb8dbb56985",
        "authorId" : "90a38456-daf7-43bd-83e0-18a41ce5f0d8",
        "body" : "other params will be always there afaik",
        "createdAt" : "2018-05-14T05:50:48Z",
        "updatedAt" : "2018-05-14T05:50:48Z",
        "lastEditedBy" : "90a38456-daf7-43bd-83e0-18a41ce5f0d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "52579b7084407e207a3d6e2573d37b422b8d28a5",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +402,406 @@            changed = True\n            r['description'] = rule.get('description', None)\n        if rule['protocol'] != r['protocol']:\n            changed = True\n            r['protocol'] = rule['protocol']"
  },
  {
    "id" : "19e05792-465a-4a98-b0c9-3a182e99a357",
    "prId" : 40070,
    "prUrl" : "https://github.com/ansible/ansible/pull/40070#pullrequestreview-120528143",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a64540b3-a2d2-4cd0-8cf6-68056ee215af",
        "parentId" : null,
        "authorId" : "90a38456-daf7-43bd-83e0-18a41ce5f0d8",
        "body" : "the code is ok here, but I did different solution for this comparison recently, first convert to dictionary and then compare:\r\n        oldd = {}\r\n        for item in old:\r\n            name = item['name']\r\n            oldd[name] = item\r\n        newd = {}\r\n        for item in new:\r\n            name = item['name']\r\n            newd[name] = item\r\n        return  newd == oldd\r\n\r\nI just wonder what you think? No need to update\r\n\r\n",
        "createdAt" : "2018-05-16T07:47:17Z",
        "updatedAt" : "2018-05-16T07:47:17Z",
        "lastEditedBy" : "90a38456-daf7-43bd-83e0-18a41ce5f0d8",
        "tags" : [
        ]
      },
      {
        "id" : "72ea0eaf-bb86-4429-9e68-22b68ecb5261",
        "parentId" : "a64540b3-a2d2-4cd0-8cf6-68056ee215af",
        "authorId" : "90a38456-daf7-43bd-83e0-18a41ce5f0d8",
        "body" : "oh, not formatted correctly, anyway i think it's pretty simple",
        "createdAt" : "2018-05-16T07:47:44Z",
        "updatedAt" : "2018-05-16T07:47:44Z",
        "lastEditedBy" : "90a38456-daf7-43bd-83e0-18a41ce5f0d8",
        "tags" : [
        ]
      },
      {
        "id" : "dbfb5c3c-6b30-40d4-840a-ac3a53bf3100",
        "parentId" : "a64540b3-a2d2-4cd0-8cf6-68056ee215af",
        "authorId" : "4ca8f397-6d40-4333-a80a-10b2991ebaee",
        "body" : "There are something different, here also construct the new parameter, since there is a `purge_list` flag. \r\n\r\nMy experience to compare two list of dict in general scenario is \r\n\r\n```python\r\ndef compare_list_of_dict(A, B):\r\n    def hash_dict(item):\r\n        return str(dict(\r\n            name=to_native(item.name),  # str\r\n            id=item.id,  # int\r\n            is_flag=item.is_flag  # boolean\r\n            ...\r\n        ))\r\n   return set(hash_dict(A)) == set(hash_dict(B))\r\n```\r\n\r\nIt is very similar to yours. Maybe we can write it to `azure_rm_common` and accept 3 params (A, B, hash_dict).",
        "createdAt" : "2018-05-16T07:56:20Z",
        "updatedAt" : "2018-05-16T07:59:03Z",
        "lastEditedBy" : "4ca8f397-6d40-4333-a80a-10b2991ebaee",
        "tags" : [
        ]
      }
    ],
    "commit" : "66dd8970df291adb1ca8a9485a75f42347713b05",
    "line" : 107,
    "diffHunk" : "@@ -1,1 +372,376 @@    for old_rule in old_list:\n        matched = next((x for x in new_list if x['name'] == old_rule['name']), [])\n        if matched:  # if the new one is in the old list, check whether it is updated\n            changed = changed or compare_rules(old_rule, matched)\n        elif not purge_list:  # keep this rule"
  }
]