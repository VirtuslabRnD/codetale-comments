[
  {
    "id" : "4cd5c21c-624f-4a05-942f-68893ada8abe",
    "prId" : 45712,
    "prUrl" : "https://github.com/ansible/ansible/pull/45712#pullrequestreview-156353037",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1756e41f-1c44-4312-866b-ba895c14349f",
        "parentId" : null,
        "authorId" : "f65394e6-7239-422a-9af5-c3575a283846",
        "body" : "nit question: Why this change? Is it taking more time to get a server deleted? Also, should this be a parameter, (maybe reuse `api_timeout`) ? Is the behavior observed for `server_state` update also observed here or is it to play safe?",
        "createdAt" : "2018-09-18T08:58:43Z",
        "updatedAt" : "2018-09-18T21:21:45Z",
        "lastEditedBy" : "f65394e6-7239-422a-9af5-c3575a283846",
        "tags" : [
        ]
      },
      {
        "id" : "fb0a36c2-f638-46bb-886c-f69f50cb1f11",
        "parentId" : "1756e41f-1c44-4312-866b-ba895c14349f",
        "authorId" : "99dfb093-81dd-44d0-97be-6dcf3059e796",
        "body" : "I will make it configurable but first, I would like to get this in as a bug fix for 2.7. the timeout was 30 times 2 seconds, I just wanted to make it \"engough\" long for 2.7 (it seems the time to wait has dramatically increased)",
        "createdAt" : "2018-09-18T12:41:37Z",
        "updatedAt" : "2018-09-18T21:21:45Z",
        "lastEditedBy" : "99dfb093-81dd-44d0-97be-6dcf3059e796",
        "tags" : [
        ]
      },
      {
        "id" : "d6b46929-1bfe-4060-9428-abf427eeee81",
        "parentId" : "1756e41f-1c44-4312-866b-ba895c14349f",
        "authorId" : "f65394e6-7239-422a-9af5-c3575a283846",
        "body" : "Ack, shipit'able for me. Do you want to change the `info.get('status')` first?",
        "createdAt" : "2018-09-18T13:01:17Z",
        "updatedAt" : "2018-09-18T21:21:45Z",
        "lastEditedBy" : "f65394e6-7239-422a-9af5-c3575a283846",
        "tags" : [
        ]
      }
    ],
    "commit" : "f35279dfa334b0817e690639f7b5fd19f65b7ee7",
    "line" : 46,
    "diffHunk" : "@@ -1,1 +717,721 @@                    data=data\n                )\n                for s in range(0, 60):\n                    if server is not None:\n                        break"
  },
  {
    "id" : "77e97237-387d-4d55-83a8-5d2a44bb40d8",
    "prId" : 45712,
    "prUrl" : "https://github.com/ansible/ansible/pull/45712#pullrequestreview-156262547",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c086706a-f160-4e2b-9fe4-047dbc620534",
        "parentId" : null,
        "authorId" : "f65394e6-7239-422a-9af5-c3575a283846",
        "body" : "ditto",
        "createdAt" : "2018-09-18T09:06:49Z",
        "updatedAt" : "2018-09-18T21:21:45Z",
        "lastEditedBy" : "f65394e6-7239-422a-9af5-c3575a283846",
        "tags" : [
        ]
      }
    ],
    "commit" : "f35279dfa334b0817e690639f7b5fd19f65b7ee7",
    "line" : 55,
    "diffHunk" : "@@ -1,1 +761,765 @@        time.sleep(1)\n        server = self.get_server(refresh=True)\n        for s in range(0, 60):\n            # Check for Truely if wanted state is None\n            if state is None and server.get(key):"
  },
  {
    "id" : "0ba841a6-8fba-49cb-b297-f0250367c171",
    "prId" : 52781,
    "prUrl" : "https://github.com/ansible/ansible/pull/52781#pullrequestreview-207101716",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "37f0301f-694a-432b-9f0e-5e0c9eda7658",
        "parentId" : null,
        "authorId" : "99dfb093-81dd-44d0-97be-6dcf3059e796",
        "body" : "stopping a play for one hour very long, i am evaluation other options how to handle this use case. do you know, if we can find out that a restoring is currently going on? I mean we should probably this case anyway and not trying to start an existing VM currently restoring manually triggered or a user may hit ctrl-c and restart the playbook.\r\n\r\nAnother option is that we add another flag `wait_for_snapshot` with default=yes to give users a choice not to wait for it.\r\n\r\nany thoughts?",
        "createdAt" : "2019-02-22T07:35:58Z",
        "updatedAt" : "2019-02-22T12:55:50Z",
        "lastEditedBy" : "99dfb093-81dd-44d0-97be-6dcf3059e796",
        "tags" : [
        ]
      },
      {
        "id" : "3c6780e6-6a1b-4b03-999a-0f07a8cdb8c8",
        "parentId" : "37f0301f-694a-432b-9f0e-5e0c9eda7658",
        "authorId" : "48b92a05-fed9-46b0-8b70-b1c0e5a6bf8b",
        "body" : "An hour is the worst-case scenario. Most snapshots restore in less time than that, but Vultr doesn't guarantee anything less than an hour.\r\n\r\nIf a user does not want to wait for the snapshot restore to complete, Ansible already has a built-in solution: use [async](https://docs.ansible.com/ansible/latest/user_guide/playbooks_async.html).\r\n\r\nOne thing the module does lack in general is detecting if a server's `server_state` is `locked`. A snapshot restore locks a server, but perhaps other changes can lock servers too. Technically, no actions can be performed on a locked server, and running the module against a locked server produces a module error.\r\n\r\nMaybe a future change could be waiting for the `server_state` to reach `ok` before executing any actions. That would handle interrupted/restarted playbooks in all cases, not just restores.",
        "createdAt" : "2019-02-22T12:16:49Z",
        "updatedAt" : "2019-02-22T12:55:50Z",
        "lastEditedBy" : "48b92a05-fed9-46b0-8b70-b1c0e5a6bf8b",
        "tags" : [
        ]
      },
      {
        "id" : "b06359c3-cc8b-45d6-89d7-a7fe265d9112",
        "parentId" : "37f0301f-694a-432b-9f0e-5e0c9eda7658",
        "authorId" : "48b92a05-fed9-46b0-8b70-b1c0e5a6bf8b",
        "body" : "OK, I updated the PR to wait for a locked (restoring) server when trying to `update_server`. I tested interrupting and restarting a playbook and it correctly waits for the snapshot restore to finish before continuing with the update call. Let me know what you think.",
        "createdAt" : "2019-02-22T12:37:08Z",
        "updatedAt" : "2019-02-22T12:56:13Z",
        "lastEditedBy" : "48b92a05-fed9-46b0-8b70-b1c0e5a6bf8b",
        "tags" : [
        ]
      },
      {
        "id" : "aa19c75f-576e-4286-b8b3-4f691406e345",
        "parentId" : "37f0301f-694a-432b-9f0e-5e0c9eda7658",
        "authorId" : "99dfb093-81dd-44d0-97be-6dcf3059e796",
        "body" : "thanks for the valuable input. ",
        "createdAt" : "2019-02-23T08:31:21Z",
        "updatedAt" : "2019-02-23T08:31:21Z",
        "lastEditedBy" : "99dfb093-81dd-44d0-97be-6dcf3059e796",
        "tags" : [
        ]
      }
    ],
    "commit" : "784a4e3d3b75b48991221d54d44d620a6f50308d",
    "line" : 66,
    "diffHunk" : "@@ -1,1 +541,545 @@            )\n            server = self._wait_for_state(key='status', state='active')\n            server = self._wait_for_state(state='running', timeout=3600 if snapshot_restore else 60)\n        return server\n"
  }
]