[
  {
    "id" : "16bd14d3-0169-4ade-b147-9512173e9c68",
    "prId" : 47062,
    "prUrl" : "https://github.com/ansible/ansible/pull/47062#pullrequestreview-174159586",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "736af07d-adfa-4a55-89bb-41eb969346f8",
        "parentId" : null,
        "authorId" : "f937ecfe-3ff6-49a2-8b12-3923c563f54b",
        "body" : "This needs to be set to required. Otherwise, if you don't specify `esxi_hostname`, the first host will be used which doesn't make sense at all.\r\n\r\nThis should be:\r\n```\r\nargument_spec.update(\r\n        esxi_hostname=dict(type='str', required=True),\r\n    )\r\n```",
        "createdAt" : "2018-10-23T14:12:51Z",
        "updatedAt" : "2018-11-13T01:15:49Z",
        "lastEditedBy" : "f937ecfe-3ff6-49a2-8b12-3923c563f54b",
        "tags" : [
        ]
      },
      {
        "id" : "e27d491b-ee09-4d82-8a48-240d647684fc",
        "parentId" : "736af07d-adfa-4a55-89bb-41eb969346f8",
        "authorId" : "a436d8eb-e8f6-4b59-a5f2-1b9642f95ab4",
        "body" : "Right, but you don't need to use it at all if you are connecting directly to an ESXi host so I don't think it should be required.  Is it required by any other modules?\r\n\r\nThe present behavior without this patch when connecting to a vCenter is to return the first host.  Perhaps the behavior should be to return all hosts if connecting to a vCenter without specifying `esxi_hostname`?  If I do this, I might as well implement `cluster_name` then too :-)",
        "createdAt" : "2018-10-23T14:25:31Z",
        "updatedAt" : "2018-11-13T01:15:49Z",
        "lastEditedBy" : "a436d8eb-e8f6-4b59-a5f2-1b9642f95ab4",
        "tags" : [
        ]
      },
      {
        "id" : "a7c76c0b-633b-4e41-87ef-9b2fac7442f4",
        "parentId" : "736af07d-adfa-4a55-89bb-41eb969346f8",
        "authorId" : "f937ecfe-3ff6-49a2-8b12-3923c563f54b",
        "body" : "I had a typo. It should be `esxi_hostname`. \r\n\r\n> Perhaps the behavior should be to return all hosts if connecting to a vCenter without specifying `esxi_hostname`? If I do this, I might as well implement `cluster_name` then too :-)\r\n\r\nLike you already said. Looks like this doesn't work with ansible_facts.",
        "createdAt" : "2018-10-23T15:29:23Z",
        "updatedAt" : "2018-11-13T01:15:49Z",
        "lastEditedBy" : "f937ecfe-3ff6-49a2-8b12-3923c563f54b",
        "tags" : [
        ]
      },
      {
        "id" : "58d7f040-6924-4052-a47c-ac303ff125ef",
        "parentId" : "736af07d-adfa-4a55-89bb-41eb969346f8",
        "authorId" : "f937ecfe-3ff6-49a2-8b12-3923c563f54b",
        "body" : "> Right, but you don't need to use it at all if you are connecting directly to an ESXi host so I don't think it should be required. Is it required by any other modules?\r\n\r\nIf you don't specify `esxi_hostname` and connect via vCenter, the first host is returned and the variables are messed up because for every host in the playbook run, the variables of the first host are used. Any conditional check doesn't work as expected anymore. This is especially dangerous if you execute the playbook without check mode. ",
        "createdAt" : "2018-10-24T15:44:50Z",
        "updatedAt" : "2018-11-13T01:15:49Z",
        "lastEditedBy" : "f937ecfe-3ff6-49a2-8b12-3923c563f54b",
        "tags" : [
        ]
      },
      {
        "id" : "80521771-b3a4-4400-a271-412c7bda66cd",
        "parentId" : "736af07d-adfa-4a55-89bb-41eb969346f8",
        "authorId" : "a436d8eb-e8f6-4b59-a5f2-1b9642f95ab4",
        "body" : "I just reworked this to detect if we are going to a vCenter or directly to an ESXi host.  I don't think we can require `esxi_hostname` or `cluster_name` without breaking direct connections.",
        "createdAt" : "2018-11-13T01:21:23Z",
        "updatedAt" : "2018-11-13T01:21:24Z",
        "lastEditedBy" : "a436d8eb-e8f6-4b59-a5f2-1b9642f95ab4",
        "tags" : [
        ]
      }
    ],
    "commit" : "d8c7b3e06d0bf394f9bf622d241cb40b18b54e63",
    "line" : 86,
    "diffHunk" : "@@ -1,1 +242,246 @@    argument_spec = vmware_argument_spec()\n    argument_spec.update(\n        esxi_hostname=dict(type='str', required=False),\n    )\n    module = AnsibleModule(argument_spec=argument_spec,"
  }
]