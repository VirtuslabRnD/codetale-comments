[
  {
    "id" : "37eca533-e794-4b77-8590-918a560a6fcc",
    "prId" : 52075,
    "prUrl" : "https://github.com/ansible/ansible/pull/52075#pullrequestreview-208313275",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d8baa9bd-853d-4652-b961-a4563c41a83f",
        "parentId" : null,
        "authorId" : "d74d3499-a27a-4f0f-864d-9e1e64b673eb",
        "body" : "We could add a check to send at least an warning if a `mac` is specified with `state=new` in place of `manual_mac`:\r\n```\r\nif network['state'].lower() == 'new' and 'mac' in network\r\n     […]msg=\"MAC address '%s' define in `mac` attribute will not be used. If you want to define a manual MAC address, please use `manual_mac`.\" % (network['mac'])[…]\r\n```",
        "createdAt" : "2019-02-26T10:41:34Z",
        "updatedAt" : "2019-07-04T10:21:48Z",
        "lastEditedBy" : "d74d3499-a27a-4f0f-864d-9e1e64b673eb",
        "tags" : [
        ]
      },
      {
        "id" : "85960d67-30ca-4461-85cb-afe280f24290",
        "parentId" : "d8baa9bd-853d-4652-b961-a4563c41a83f",
        "authorId" : "a8ab520a-9143-4406-bf7b-98113a352d1a",
        "body" : "We can not determine user wants to add new vNIC or reconfigure the existing one with \"state: new, mac: xxx\", so yeah, this check can be added. Thanks.",
        "createdAt" : "2019-02-27T02:50:52Z",
        "updatedAt" : "2019-07-04T10:21:48Z",
        "lastEditedBy" : "a8ab520a-9143-4406-bf7b-98113a352d1a",
        "tags" : [
        ]
      }
    ],
    "commit" : "e3564aec1200957a0bd632af45fd8870a8ea606d",
    "line" : 302,
    "diffHunk" : "@@ -1,1 +300,304 @@                # add new network adapter but no name specified\n                if network['state'].lower() == 'new' and 'name' not in network and 'vlan' not in network:\n                    self.module.fail_json(msg=\"Please specify at least network name or VLAN name for adding new network adapter.\")\n                if network['state'].lower() == 'new' and 'mac' in network:\n                    self.module.fail_json(msg=\"networks.mac is used for vNIC reconfigure, but networks.state is set to 'new'.\")"
  },
  {
    "id" : "d38c0d1a-61bb-4f1b-a9be-d1c07f8cc746",
    "prId" : 52075,
    "prUrl" : "https://github.com/ansible/ansible/pull/52075#pullrequestreview-208316296",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "84645212-5edd-405f-b2c3-a958c81175bb",
        "parentId" : null,
        "authorId" : "d74d3499-a27a-4f0f-864d-9e1e64b673eb",
        "body" : "I'm asking myself if this is the right way to proceed. I think that the module itself should guess if it need to create a 'new' network interface or reconfigure the existing one.\r\n\r\nIs there any reason / technical issue that force the user to make explicit the state?\r\nI'm thinking at the case where a `label` and the `mac` are set but identify to two different NICs… but that could be checked in the `sanitize_network_params` method and rise an error.\r\nAnything else that I miss?",
        "createdAt" : "2019-02-26T10:51:03Z",
        "updatedAt" : "2019-07-04T10:21:48Z",
        "lastEditedBy" : "d74d3499-a27a-4f0f-864d-9e1e64b673eb",
        "tags" : [
        ]
      },
      {
        "id" : "4ece67bd-b1cc-483e-9745-fda7742fdd31",
        "parentId" : "84645212-5edd-405f-b2c3-a958c81175bb",
        "authorId" : "a8ab520a-9143-4406-bf7b-98113a352d1a",
        "body" : "I think without this \"state\", new and reconfigure can be determined by checking if the specified \"label\" exists or not,  but for remove, without extra parameter we can not know that. And host will assign the label according to the existing labels used by existing vNIC, not use the one specified. If we want to add a new vNIC, need to get the all used label, and specify an unused one, at last this maybe not the same as the actual assigned one.",
        "createdAt" : "2019-02-27T03:06:31Z",
        "updatedAt" : "2019-07-04T10:21:48Z",
        "lastEditedBy" : "a8ab520a-9143-4406-bf7b-98113a352d1a",
        "tags" : [
        ]
      }
    ],
    "commit" : "e3564aec1200957a0bd632af45fd8870a8ea606d",
    "line" : 103,
    "diffHunk" : "@@ -1,1 +101,105 @@     - ' - C(state) (string): State of the network adapter.'\n     - '   If set to C(present), then will do reconfiguration for the specified network adapter.'\n     - '   If set to C(new), then will add the specified network adapter.'\n     - '   If set to C(absent), then will remove this network adapter.'\n     - ' - C(manual_mac) (string): Manual specified MAC address of the network adapter when creating, or reconfiguring."
  },
  {
    "id" : "59decb63-ab23-48d3-ba31-2274592e162b",
    "prId" : 52075,
    "prUrl" : "https://github.com/ansible/ansible/pull/52075#pullrequestreview-216510700",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "41d2b91e-711d-44c1-8154-07766c288ba7",
        "parentId" : null,
        "authorId" : "dfcba7e0-141c-4101-9159-74bd07c08960",
        "body" : "mandatory msg is missing",
        "createdAt" : "2019-03-05T21:59:27Z",
        "updatedAt" : "2019-07-04T10:21:48Z",
        "lastEditedBy" : "dfcba7e0-141c-4101-9159-74bd07c08960",
        "tags" : [
        ]
      },
      {
        "id" : "351f06d8-17e7-4687-b2de-9f1e06c60a50",
        "parentId" : "41d2b91e-711d-44c1-8154-07766c288ba7",
        "authorId" : "a8ab520a-9143-4406-bf7b-98113a352d1a",
        "body" : "'msg' is mandatory?",
        "createdAt" : "2019-03-12T03:59:52Z",
        "updatedAt" : "2019-07-04T10:21:48Z",
        "lastEditedBy" : "a8ab520a-9143-4406-bf7b-98113a352d1a",
        "tags" : [
        ]
      },
      {
        "id" : "810eff51-12e5-49d0-9fdb-c0f1a7c063ee",
        "parentId" : "41d2b91e-711d-44c1-8154-07766c288ba7",
        "authorId" : "dfcba7e0-141c-4101-9159-74bd07c08960",
        "body" : "Yes, 'msg' key and value should always present on *_exit() calls",
        "createdAt" : "2019-03-16T21:37:35Z",
        "updatedAt" : "2019-07-04T10:21:48Z",
        "lastEditedBy" : "dfcba7e0-141c-4101-9159-74bd07c08960",
        "tags" : [
        ]
      },
      {
        "id" : "56c73d56-fee8-43df-a1f1-f6b5f69311b7",
        "parentId" : "41d2b91e-711d-44c1-8154-07766c288ba7",
        "authorId" : "a8ab520a-9143-4406-bf7b-98113a352d1a",
        "body" : "I'm not sure about this, I checked \"AnsibleModule\" in this file https://github.com/ansible/ansible/blob/devel/lib/ansible/module_utils/basic.py, \"exit_json()\" does not require \"msg\" key in result, but \"fail_json()\" requires \"msg\" key. Thanks.",
        "createdAt" : "2019-03-19T02:55:11Z",
        "updatedAt" : "2019-07-04T10:21:48Z",
        "lastEditedBy" : "a8ab520a-9143-4406-bf7b-98113a352d1a",
        "tags" : [
        ]
      },
      {
        "id" : "edc3e800-34c1-4058-a7a0-64e8ad5fab78",
        "parentId" : "41d2b91e-711d-44c1-8154-07766c288ba7",
        "authorId" : "dfcba7e0-141c-4101-9159-74bd07c08960",
        "body" : "My fault, I agree with that.",
        "createdAt" : "2019-03-19T21:02:36Z",
        "updatedAt" : "2019-07-04T10:21:48Z",
        "lastEditedBy" : "dfcba7e0-141c-4101-9159-74bd07c08960",
        "tags" : [
        ]
      },
      {
        "id" : "9bc35892-6b80-4155-9c03-aba7a181ce75",
        "parentId" : "41d2b91e-711d-44c1-8154-07766c288ba7",
        "authorId" : "a8ab520a-9143-4406-bf7b-98113a352d1a",
        "body" : "Thanks for the comment, I'm also not quite sure about this before check that, Thanks.",
        "createdAt" : "2019-03-20T03:07:13Z",
        "updatedAt" : "2019-07-04T10:21:48Z",
        "lastEditedBy" : "a8ab520a-9143-4406-bf7b-98113a352d1a",
        "tags" : [
        ]
      }
    ],
    "commit" : "e3564aec1200957a0bd632af45fd8870a8ea606d",
    "line" : 428,
    "diffHunk" : "@@ -1,1 +426,430 @@            else:\n                network_facts = self.get_network_facts(vm_obj)\n                results = {'changed': self.change_detected, 'failed': False, 'network_data': network_facts}\n\n        return results"
  },
  {
    "id" : "30521d26-7da1-4488-9151-4233c5f4c7dc",
    "prId" : 52075,
    "prUrl" : "https://github.com/ansible/ansible/pull/52075#pullrequestreview-255756466",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "13d89191-0d26-4a58-8451-ab20e8937c40",
        "parentId" : null,
        "authorId" : "96aeecbb-c275-402c-b904-a795c82efb48",
        "body" : "Just an idea, Could we move this functionality to new module rather than putting in same module ? Same like `vmware_guest_disk_info` and `vmware_guest_disks`\r\n\r\nNothing blocker as such.",
        "createdAt" : "2019-06-28T09:38:33Z",
        "updatedAt" : "2019-07-04T10:21:48Z",
        "lastEditedBy" : "96aeecbb-c275-402c-b904-a795c82efb48",
        "tags" : [
        ]
      },
      {
        "id" : "217c0039-300c-4a9a-9481-f0dd8172dab1",
        "parentId" : "13d89191-0d26-4a58-8451-ab20e8937c40",
        "authorId" : "a8ab520a-9143-4406-bf7b-98113a352d1a",
        "body" : "Yeah, I saw that there are two modules for same subject, e.g., disk operations and disk facts, snapshot operations and snapshot facts, etc. I'm not sure which one is better, I assumed put together can save some duplicate work? Thanks.",
        "createdAt" : "2019-06-28T13:05:33Z",
        "updatedAt" : "2019-07-04T10:21:48Z",
        "lastEditedBy" : "a8ab520a-9143-4406-bf7b-98113a352d1a",
        "tags" : [
        ]
      }
    ],
    "commit" : "e3564aec1200957a0bd632af45fd8870a8ea606d",
    "line" : 75,
    "diffHunk" : "@@ -1,1 +73,77 @@     - The datacenter name to which virtual machine belongs to.\n     type: str\n   gather_network_facts:\n     description:\n     - If set to C(True), return settings of all network adapters, other parameters are ignored."
  },
  {
    "id" : "5bd66269-fab1-4bd6-9d0c-0217d78a883a",
    "prId" : 63610,
    "prUrl" : "https://github.com/ansible/ansible/pull/63610#pullrequestreview-303078355",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f289f461-b2bc-44dd-8219-6b9214f63b7b",
        "parentId" : null,
        "authorId" : "96aeecbb-c275-402c-b904-a795c82efb48",
        "body" : "At line 191, Can you please add `\"directpath_io\": \"N/A\"` ?",
        "createdAt" : "2019-10-17T08:21:08Z",
        "updatedAt" : "2019-10-29T06:44:09Z",
        "lastEditedBy" : "96aeecbb-c275-402c-b904-a795c82efb48",
        "tags" : [
        ]
      }
    ],
    "commit" : "7aee3c8c38e577f7f9d0a012d1b3856dce8dced6",
    "line" : 46,
    "diffHunk" : "@@ -1,1 +216,220 @@            \"label\": \"Network Adapter 2\",\n            \"name\": \"VM Network\",\n            \"device_type\": \"VMXNET3\",\n            \"directpath_io\": true,\n            \"mac_addr\": \"00:50:56:8d:93:8c\","
  },
  {
    "id" : "4c8c540a-9998-42a5-8781-ea00695259eb",
    "prId" : 63610,
    "prUrl" : "https://github.com/ansible/ansible/pull/63610#pullrequestreview-303532582",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c0f806d5-f378-4100-8383-56c48bd12262",
        "parentId" : null,
        "authorId" : "0fd34a17-8cd9-4bb2-803c-da934539c7f5",
        "body" : "please prefix your MAC address with something else. See: https://github.com/ansible/ansible/issues/63302",
        "createdAt" : "2019-10-17T21:25:15Z",
        "updatedAt" : "2019-10-29T06:44:09Z",
        "lastEditedBy" : "0fd34a17-8cd9-4bb2-803c-da934539c7f5",
        "tags" : [
        ]
      }
    ],
    "commit" : "7aee3c8c38e577f7f9d0a012d1b3856dce8dced6",
    "line" : 48,
    "diffHunk" : "@@ -1,1 +218,222 @@            \"device_type\": \"VMXNET3\",\n            \"directpath_io\": true,\n            \"mac_addr\": \"00:50:56:8d:93:8c\",\n            \"unit_number\": 8,\n            \"start_connected\": true,"
  },
  {
    "id" : "da7d8edb-15ac-414e-875e-ab1878b26064",
    "prId" : 63610,
    "prUrl" : "https://github.com/ansible/ansible/pull/63610#pullrequestreview-303645865",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "18c11c67-8d5a-4c37-ad86-50dddf506527",
        "parentId" : null,
        "authorId" : "a8ab520a-9143-4406-bf7b-98113a352d1a",
        "body" : "This new parameter can be added in examples. Thanks.",
        "createdAt" : "2019-10-18T03:12:42Z",
        "updatedAt" : "2019-10-29T06:44:09Z",
        "lastEditedBy" : "a8ab520a-9143-4406-bf7b-98113a352d1a",
        "tags" : [
        ]
      }
    ],
    "commit" : "7aee3c8c38e577f7f9d0a012d1b3856dce8dced6",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +120,124 @@     - ' - C(connected) (bool): Indicates that virtual network adapter connects to the associated virtual machine.'\n     - ' - C(start_connected) (bool): Indicates that virtual network adapter starts with associated virtual machine powers on.'\n     - ' - C(directpath_io) (bool): If set, Universal Pass-Through (UPT or DirectPath I/O) will be enabled on the network adapter.\n           UPT is only compatible for Vmxnet3 adapter.'\nextends_documentation_fragment: vmware.documentation"
  },
  {
    "id" : "444f0186-dd80-4fb7-8ec9-677a35ef97b6",
    "prId" : 63610,
    "prUrl" : "https://github.com/ansible/ansible/pull/63610#pullrequestreview-316041496",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ed12ffc0-a550-4163-8757-8150d750d1a2",
        "parentId" : null,
        "authorId" : "a8ab520a-9143-4406-bf7b-98113a352d1a",
        "body" : "This parameter \"network['directpath_io']\" can also be validated first in sanitize_network_params() function. Thanks.",
        "createdAt" : "2019-10-18T03:15:01Z",
        "updatedAt" : "2019-10-29T06:44:09Z",
        "lastEditedBy" : "a8ab520a-9143-4406-bf7b-98113a352d1a",
        "tags" : [
        ]
      },
      {
        "id" : "82ecf805-cad2-43a5-94da-95bf5aeb0bc9",
        "parentId" : "ed12ffc0-a550-4163-8757-8150d750d1a2",
        "authorId" : "a8ab520a-9143-4406-bf7b-98113a352d1a",
        "body" : "This is for reconfigure NIC, can this parameter be set for new created vmxnet3 adpater? Thanks.",
        "createdAt" : "2019-10-18T03:18:20Z",
        "updatedAt" : "2019-10-29T06:44:09Z",
        "lastEditedBy" : "a8ab520a-9143-4406-bf7b-98113a352d1a",
        "tags" : [
        ]
      },
      {
        "id" : "b2ba4145-18f1-4a45-afea-3de73cf721d3",
        "parentId" : "ed12ffc0-a550-4163-8757-8150d750d1a2",
        "authorId" : "7dad8032-30bd-44f5-be48-6dba1ec65a01",
        "body" : "The only sanitization `network['directpath_io']` requires is to check if it is used with `vmxnet3` device type or not, I don't see a way to sanitize this in `sanitize_network_param()` function as `device_type` is not a mandatory parameter to identify the network adapter.\r\nTo check if the device type is `vmxnet3`, I will need the `nic` object which is not available in the function.\r\n\r\nAre there any other validations that I am missing?",
        "createdAt" : "2019-10-18T09:55:00Z",
        "updatedAt" : "2019-10-29T06:44:09Z",
        "lastEditedBy" : "7dad8032-30bd-44f5-be48-6dba1ec65a01",
        "tags" : [
        ]
      },
      {
        "id" : "02edb39e-fcbd-489b-80fe-45f4920dc3ff",
        "parentId" : "ed12ffc0-a550-4163-8757-8150d750d1a2",
        "authorId" : "a8ab520a-9143-4406-bf7b-98113a352d1a",
        "body" : "Sorry for this late response.\r\nYou do not need to check device type in the sanitize function, just check the parameter 'directpath_io' is specified or not, if specified then check if it's bool, if not bool, I think the validation should return false, or come to this line:\r\n`nic_device.uptCompatibilityEnabled = network['directpath_io']`, there might be error to set it to a not supported value. Thanks.",
        "createdAt" : "2019-11-13T07:26:59Z",
        "updatedAt" : "2019-11-13T07:26:59Z",
        "lastEditedBy" : "a8ab520a-9143-4406-bf7b-98113a352d1a",
        "tags" : [
        ]
      }
    ],
    "commit" : "7aee3c8c38e577f7f9d0a012d1b3856dce8dced6",
    "line" : 100,
    "diffHunk" : "@@ -1,1 +474,478 @@                                if isinstance(nic_device, vim.vm.device.VirtualVmxnet3):\n                                    if nic_device.uptCompatibilityEnabled != network['directpath_io']:\n                                        nic_device.uptCompatibilityEnabled = network['directpath_io']\n                                        self.change_detected = True\n                                else:"
  }
]