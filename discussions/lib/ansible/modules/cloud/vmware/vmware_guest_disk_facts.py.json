[
  {
    "id" : "59106f9e-f42f-4381-9ace-978384cf00bd",
    "prId" : 36026,
    "prUrl" : "https://github.com/ansible/ansible/pull/36026#pullrequestreview-116132717",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ec89e523-15ea-41bf-a735-fd11a80e56ad",
        "parentId" : null,
        "authorId" : "ce70d312-7901-4329-b180-983b6a25e826",
        "body" : "`datastore.name` requires access to the datastore itself, and thus might throw a permission error. This value should be wrapped in a try/except.",
        "createdAt" : "2018-04-26T14:19:28Z",
        "updatedAt" : "2018-04-26T14:26:33Z",
        "lastEditedBy" : "ce70d312-7901-4329-b180-983b6a25e826",
        "tags" : [
        ]
      },
      {
        "id" : "11e893de-ba88-4791-945e-8a0487152900",
        "parentId" : "ec89e523-15ea-41bf-a735-fd11a80e56ad",
        "authorId" : "96aeecbb-c275-402c-b904-a795c82efb48",
        "body" : "OK. I will added try/except for this.",
        "createdAt" : "2018-04-28T11:11:33Z",
        "updatedAt" : "2018-04-28T11:11:33Z",
        "lastEditedBy" : "96aeecbb-c275-402c-b904-a795c82efb48",
        "tags" : [
        ]
      }
    ],
    "commit" : "f2eb236fc910506dc386a72b3ad70fc2d2d53a7b",
    "line" : 149,
    "diffHunk" : "@@ -1,1 +147,151 @@                    summary=disk.deviceInfo.summary,\n                    backing_filename=disk.backing.fileName,\n                    backing_datastore=disk.backing.datastore.name,\n                    backing_disk_mode=disk.backing.diskMode,\n                    backing_writethrough=disk.backing.writeThrough,"
  },
  {
    "id" : "6fee7155-b454-4e0b-ae2f-08df19725ad6",
    "prId" : 36026,
    "prUrl" : "https://github.com/ansible/ansible/pull/36026#pullrequestreview-118063647",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e3bdc998-00c9-43b1-8965-17f4424d2a1a",
        "parentId" : null,
        "authorId" : "ce70d312-7901-4329-b180-983b6a25e826",
        "body" : "This should be a list, not a dictionary. The dictionary key is just an incrementing index value, which is what a list is for. Having it as a dictionary just makes it harder to use (having to deal with an index generator, and dictionaries don't guarantee order).",
        "createdAt" : "2018-04-26T14:25:31Z",
        "updatedAt" : "2018-04-26T14:26:33Z",
        "lastEditedBy" : "ce70d312-7901-4329-b180-983b6a25e826",
        "tags" : [
        ]
      },
      {
        "id" : "5ce08a72-ccd2-4ff9-ba64-18d0f75e5c3d",
        "parentId" : "e3bdc998-00c9-43b1-8965-17f4424d2a1a",
        "authorId" : "96aeecbb-c275-402c-b904-a795c82efb48",
        "body" : "Sorry, but I forgot the reason why I implemented dict instead of list for returning facts. If you feel that list is more appropriate than dict, then we can always refactor this code again. PR welcomed.",
        "createdAt" : "2018-04-28T11:15:06Z",
        "updatedAt" : "2018-04-28T11:15:06Z",
        "lastEditedBy" : "96aeecbb-c275-402c-b904-a795c82efb48",
        "tags" : [
        ]
      },
      {
        "id" : "71ae7da9-e3c4-4640-9031-9c75acdd5870",
        "parentId" : "e3bdc998-00c9-43b1-8965-17f4424d2a1a",
        "authorId" : "7c444fb5-3f6f-4a08-83d5-454cb61d61f5",
        "body" : "@phemmer , We've discussed this in the weekly Ansible VMware meeting. \r\nIn my opinion, having a dict is useful, IF the key is useful:\r\n* The reason to have facts is to use them in a task later on\r\n* With a list, to find the proper disk, it is harder to find the item you want to match on ( `{{ (disks |  selectattr('label', 'search', 'Hard disk 1') | list | first) }}` for instance)\r\n* With a dict, if the key is useful, it doesn't require that. If you want to match on another criteria, the loop is still a possibility.\r\n\r\nProposal is to have the label as the dict key as it is what is visible in vCenter and is orderable, does that make sense to you? Any other criteria you might find easier? (disk.key is another possibility, but less 'visible' in vCenter)",
        "createdAt" : "2018-05-07T16:41:35Z",
        "updatedAt" : "2018-05-07T16:41:36Z",
        "lastEditedBy" : "7c444fb5-3f6f-4a08-83d5-454cb61d61f5",
        "tags" : [
        ]
      }
    ],
    "commit" : "f2eb236fc910506dc386a72b3ad70fc2d2d53a7b",
    "line" : 137,
    "diffHunk" : "@@ -1,1 +135,139 @@\n        \"\"\"\n        disks_facts = dict()\n        if vm_obj is None:\n            return disks_facts"
  },
  {
    "id" : "c2a2f386-f656-44f9-a0c5-b081bca89f9a",
    "prId" : 44399,
    "prUrl" : "https://github.com/ansible/ansible/pull/44399#pullrequestreview-147715242",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f1f1d9b0-a806-44a5-bfa5-abe06901676c",
        "parentId" : null,
        "authorId" : "7c444fb5-3f6f-4a08-83d5-454cb61d61f5",
        "body" : "`this is VMware's BIOS UUID by default.`",
        "createdAt" : "2018-08-20T17:01:00Z",
        "updatedAt" : "2019-01-30T09:49:58Z",
        "lastEditedBy" : "7c444fb5-3f6f-4a08-83d5-454cb61d61f5",
        "tags" : [
        ]
      }
    ],
    "commit" : "2ef063c2c5f37f00c6ab8759906d5058b5ac2bcc",
    "line" : 2,
    "diffHunk" : "@@ -1,1 +38,42 @@   uuid:\n     description:\n     - UUID of the instance to gather facts if known, this is VMware's unique identifier.\n     - This is required parameter, if parameter C(name) is not supplied.\n   use_instance_uuid:"
  }
]