[
  {
    "id" : "fb7d3ac4-41fe-4b88-88b5-dcad161e8820",
    "prId" : 55916,
    "prUrl" : "https://github.com/ansible/ansible/pull/55916#pullrequestreview-233067009",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b0fa32d8-f8eb-445b-8943-e0b848192f6b",
        "parentId" : null,
        "authorId" : "0fd34a17-8cd9-4bb2-803c-da934539c7f5",
        "body" : "We actually use `vim` below. If you want to simplify the code, I would prefer that you completely remove the try/except block instead and let Python raises the exception.",
        "createdAt" : "2019-05-01T15:27:50Z",
        "updatedAt" : "2019-05-02T04:45:31Z",
        "lastEditedBy" : "0fd34a17-8cd9-4bb2-803c-da934539c7f5",
        "tags" : [
        ]
      },
      {
        "id" : "75b516c7-6eac-4a24-95ec-3dd02a722e5f",
        "parentId" : "b0fa32d8-f8eb-445b-8943-e0b848192f6b",
        "authorId" : "96aeecbb-c275-402c-b904-a795c82efb48",
        "body" : "Pyvmomi class handles `HAS_PYVMOMI` exceptions so this is not required here.",
        "createdAt" : "2019-05-02T04:38:35Z",
        "updatedAt" : "2019-05-02T04:45:31Z",
        "lastEditedBy" : "96aeecbb-c275-402c-b904-a795c82efb48",
        "tags" : [
        ]
      },
      {
        "id" : "760c768f-22dc-49ac-b8ab-c467be58c2bb",
        "parentId" : "b0fa32d8-f8eb-445b-8943-e0b848192f6b",
        "authorId" : "0fd34a17-8cd9-4bb2-803c-da934539c7f5",
        "body" : "Oh. indeed.",
        "createdAt" : "2019-05-02T15:10:46Z",
        "updatedAt" : "2019-05-02T15:10:46Z",
        "lastEditedBy" : "0fd34a17-8cd9-4bb2-803c-da934539c7f5",
        "tags" : [
        ]
      }
    ],
    "commit" : "6e3c213dd434feaa05ce52520273a7fcbd593449",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +118,122 @@    from pyVmomi import vim\nexcept ImportError:\n    pass\n\nfrom ansible.module_utils.basic import AnsibleModule"
  },
  {
    "id" : "1cd53117-9d5b-4d59-a478-d5cb57d34fbc",
    "prId" : 55916,
    "prUrl" : "https://github.com/ansible/ansible/pull/55916#pullrequestreview-232840848",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a0dff2b9-f22a-4718-8164-668d8f87ecd7",
        "parentId" : null,
        "authorId" : "0fd34a17-8cd9-4bb2-803c-da934539c7f5",
        "body" : "You can raise the error here:\r\n\r\n```python\r\n    if not datacenter_obj:\r\n        module.fail_json(msg=\"Unable to find the datacenter %(datacenter)s\" % module.params)\r\n```\r\n\r\nThis way, you simplify the logic of the \"cluster\" block.",
        "createdAt" : "2019-05-01T15:31:20Z",
        "updatedAt" : "2019-05-02T04:45:31Z",
        "lastEditedBy" : "0fd34a17-8cd9-4bb2-803c-da934539c7f5",
        "tags" : [
        ]
      },
      {
        "id" : "aad83020-1d2d-40df-bce8-dfd2db338779",
        "parentId" : "a0dff2b9-f22a-4718-8164-668d8f87ecd7",
        "authorId" : "96aeecbb-c275-402c-b904-a795c82efb48",
        "body" : "OK.",
        "createdAt" : "2019-05-02T04:42:44Z",
        "updatedAt" : "2019-05-02T04:45:31Z",
        "lastEditedBy" : "96aeecbb-c275-402c-b904-a795c82efb48",
        "tags" : [
        ]
      }
    ],
    "commit" : "6e3c213dd434feaa05ce52520273a7fcbd593449",
    "line" : 62,
    "diffHunk" : "@@ -1,1 +203,207 @@            datacenter_obj = None\n            if datacenter:\n                datacenter_obj = pyv.find_datacenter_by_name(datacenter)\n                if not datacenter_obj:\n                    module.fail_json(msg=\"Unable to find the datacenter %(datacenter)s\" % module.params)"
  }
]