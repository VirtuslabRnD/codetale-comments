[
  {
    "id" : "6d1059c3-bb7e-4a23-8cf8-a28ede3455d2",
    "prId" : 50650,
    "prUrl" : "https://github.com/ansible/ansible/pull/50650#pullrequestreview-191073341",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bc471a90-aafc-4eae-bb7d-2dcec1553ed4",
        "parentId" : null,
        "authorId" : "96aeecbb-c275-402c-b904-a795c82efb48",
        "body" : "Add an example of Delete operation",
        "createdAt" : "2019-01-10T07:26:50Z",
        "updatedAt" : "2019-01-13T17:00:56Z",
        "lastEditedBy" : "96aeecbb-c275-402c-b904-a795c82efb48",
        "tags" : [
        ]
      }
    ],
    "commit" : "ca6ebcebfd549b3194ae196b457dd010c14a455c",
    "line" : 96,
    "diffHunk" : "@@ -1,1 +94,98 @@      - DC0_C0_H0\n      - DC0_C0_H1\n      - DC0_C0_H2\n    state: absent\n"
  },
  {
    "id" : "3849b015-ac11-4ce8-8566-7fbe18e7e374",
    "prId" : 50650,
    "prUrl" : "https://github.com/ansible/ansible/pull/50650#pullrequestreview-191657440",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6c9bd17e-d3c4-4cba-a3fb-6666db107cc6",
        "parentId" : null,
        "authorId" : "7c444fb5-3f6f-4a08-83d5-454cb61d61f5",
        "body" : "Raising exceptions in Ansible modules is not allowed, your module should fail. Otherwise you break the Ansible runtime and following tasks automatically will stop (even for hosts for which they could continue)\r\n```suggestion\r\n                self.module.fail_json(msg=\"Datacenter '%s' not found\" % self.__datacenter_name)\r\n```",
        "createdAt" : "2019-01-11T10:37:07Z",
        "updatedAt" : "2019-01-13T17:00:56Z",
        "lastEditedBy" : "7c444fb5-3f6f-4a08-83d5-454cb61d61f5",
        "tags" : [
        ]
      },
      {
        "id" : "cb94f337-c842-4b85-88f5-b763a1cd21e5",
        "parentId" : "6c9bd17e-d3c4-4cba-a3fb-6666db107cc6",
        "authorId" : "534dc887-7272-4f2d-84f9-53e1bc918db9",
        "body" : "Ok. I've put in a try/catch block in the main() - is this not enough to catch an error? I've done this in all my modules. I'll change it to `self.module.fail_json` if you think it's necessary..",
        "createdAt" : "2019-01-11T13:02:31Z",
        "updatedAt" : "2019-01-13T17:00:56Z",
        "lastEditedBy" : "534dc887-7272-4f2d-84f9-53e1bc918db9",
        "tags" : [
        ]
      },
      {
        "id" : "deed3f3d-4229-469b-8744-8779272593c3",
        "parentId" : "6c9bd17e-d3c4-4cba-a3fb-6666db107cc6",
        "authorId" : "7c444fb5-3f6f-4a08-83d5-454cb61d61f5",
        "body" : "ah, i missed that, sorry... Sure, that's fine then :)",
        "createdAt" : "2019-01-11T13:24:06Z",
        "updatedAt" : "2019-01-13T17:00:56Z",
        "lastEditedBy" : "7c444fb5-3f6f-4a08-83d5-454cb61d61f5",
        "tags" : [
        ]
      }
    ],
    "commit" : "ca6ebcebfd549b3194ae196b457dd010c14a455c",
    "line" : 183,
    "diffHunk" : "@@ -1,1 +181,185 @@\n            if self.__datacenter_obj is None and module.check_mode is False:\n                raise Exception(\"Datacenter '%s' not found\" % self.__datacenter_name)\n\n        self.__cluster_obj = find_cluster_by_name(content=self.content,"
  },
  {
    "id" : "2474adeb-b425-4bee-8643-8e8049477ffc",
    "prId" : 50650,
    "prUrl" : "https://github.com/ansible/ansible/pull/50650#pullrequestreview-191600377",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7a4df871-874e-4530-a0c4-d4d076854644",
        "parentId" : null,
        "authorId" : "7c444fb5-3f6f-4a08-83d5-454cb61d61f5",
        "body" : "Same as above, please fail the module, instead of raising an exception\r\n```suggestion\r\n            self.module.fail_json(msg=\"VM %s does not exist in cluster %s\" % (vm,\r\n```",
        "createdAt" : "2019-01-11T10:39:45Z",
        "updatedAt" : "2019-01-13T17:00:56Z",
        "lastEditedBy" : "7c444fb5-3f6f-4a08-83d5-454cb61d61f5",
        "tags" : [
        ]
      }
    ],
    "commit" : "ca6ebcebfd549b3194ae196b457dd010c14a455c",
    "line" : 284,
    "diffHunk" : "@@ -1,1 +282,286 @@\n                    if vm_obj is None:\n                        raise Exception(\"VM %s does not exist in cluster %s\" % (vm,\n                                                                                self.__cluster_name))\n"
  },
  {
    "id" : "fdcee772-2998-46f3-9522-d91047db0c93",
    "prId" : 50650,
    "prUrl" : "https://github.com/ansible/ansible/pull/50650#pullrequestreview-191600377",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5ac98c52-80ad-454e-8e36-7e1b3edd1408",
        "parentId" : null,
        "authorId" : "7c444fb5-3f6f-4a08-83d5-454cb61d61f5",
        "body" : "Same as above, please fail the module, instead of raising an exception\r\n```suggestion\r\n            self.module.fail_json(msg=\"ESXi host %s does not exist in cluster %s\" % (host, self.__cluster_name))\r\n```",
        "createdAt" : "2019-01-11T10:40:08Z",
        "updatedAt" : "2019-01-13T17:00:56Z",
        "lastEditedBy" : "7c444fb5-3f6f-4a08-83d5-454cb61d61f5",
        "tags" : [
        ]
      }
    ],
    "commit" : "ca6ebcebfd549b3194ae196b457dd010c14a455c",
    "line" : 312,
    "diffHunk" : "@@ -1,1 +310,314 @@\n                    if host_obj is None and self.module.check_mode is False:\n                        raise Exception(\"ESXi host %s does not exist in cluster %s\" % (host, self.__cluster_name))\n\n                    self.__host_obj_list.append(host_obj)"
  },
  {
    "id" : "0e4466ca-1f16-4c6a-aa8d-a29e2a847280",
    "prId" : 50650,
    "prUrl" : "https://github.com/ansible/ansible/pull/50650#pullrequestreview-191600377",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4c6ae087-8ce3-4e7a-8de4-4c286dc623e8",
        "parentId" : null,
        "authorId" : "7c444fb5-3f6f-4a08-83d5-454cb61d61f5",
        "body" : "Same as above, please fail the module, instead of raising an exception\r\n```suggestion\r\n### This requires to store the module as self.__module in the init\r\n            self.__module.fail_json(msg='Failed, no hosts or vms defined')\r\n```",
        "createdAt" : "2019-01-11T10:41:07Z",
        "updatedAt" : "2019-01-13T17:00:56Z",
        "lastEditedBy" : "7c444fb5-3f6f-4a08-83d5-454cb61d61f5",
        "tags" : [
        ]
      }
    ],
    "commit" : "ca6ebcebfd549b3194ae196b457dd010c14a455c",
    "line" : 490,
    "diffHunk" : "@@ -1,1 +488,492 @@            self.__create_vm_group()\n        else:\n            raise Exception('Failed, no hosts or vms defined')\n\n    def delete_drs_group(self):"
  },
  {
    "id" : "53d9952f-863f-4b4d-a51b-175de3774bfc",
    "prId" : 50650,
    "prUrl" : "https://github.com/ansible/ansible/pull/50650#pullrequestreview-191600377",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "57c433af-9d95-45c1-b193-dd935b4eeaee",
        "parentId" : null,
        "authorId" : "7c444fb5-3f6f-4a08-83d5-454cb61d61f5",
        "body" : "You seem to call this method multiple times in your code to get the actual group. Every time it will execute API calls into vCenter... It would be a lot easier to just cache the group you found once inside the object/class (`self.__group` for instance) and use that every time?",
        "createdAt" : "2019-01-11T10:48:33Z",
        "updatedAt" : "2019-01-13T17:00:56Z",
        "lastEditedBy" : "7c444fb5-3f6f-4a08-83d5-454cb61d61f5",
        "tags" : [
        ]
      }
    ],
    "commit" : "ca6ebcebfd549b3194ae196b457dd010c14a455c",
    "line" : 316,
    "diffHunk" : "@@ -1,1 +314,318 @@                    self.__host_obj_list.append(host_obj)\n\n    def __get_group_by_name(self, group_name=None, cluster_obj=None):\n        \"\"\"\n        Function to get group by name"
  },
  {
    "id" : "41dc96d7-f34e-427b-b2b1-958fac6d15aa",
    "prId" : 50650,
    "prUrl" : "https://github.com/ansible/ansible/pull/50650#pullrequestreview-191600377",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7afa9b43-d415-4dd2-a8db-54ade273889d",
        "parentId" : null,
        "authorId" : "7c444fb5-3f6f-4a08-83d5-454cb61d61f5",
        "body" : "this should be in a try/catch block to capture several type of exceptions that might be thrown... have a look at some of the other modules on how to do this, there's several exceptions you can catch, if you do a generic catch (which is ok), make sure to add a clear `self.module.fail_json(msg=...)` statement",
        "createdAt" : "2019-01-11T10:58:20Z",
        "updatedAt" : "2019-01-13T17:00:56Z",
        "lastEditedBy" : "7c444fb5-3f6f-4a08-83d5-454cb61d61f5",
        "tags" : [
        ]
      }
    ],
    "commit" : "ca6ebcebfd549b3194ae196b457dd010c14a455c",
    "line" : 416,
    "diffHunk" : "@@ -1,1 +414,418 @@\n            if not self.module.check_mode:\n                task = self.__cluster_obj.ReconfigureEx(config_spec, modify=True)\n                wait_for_task(task)\n"
  },
  {
    "id" : "7e833701-7c22-4fd4-bdce-7ccc3cb2de20",
    "prId" : 50650,
    "prUrl" : "https://github.com/ansible/ansible/pull/50650#pullrequestreview-191600377",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "023a6112-6de3-422d-adb6-17b259622d8d",
        "parentId" : null,
        "authorId" : "7c444fb5-3f6f-4a08-83d5-454cb61d61f5",
        "body" : "Same remark as with the `__create_host_group` on try/catch",
        "createdAt" : "2019-01-11T11:01:27Z",
        "updatedAt" : "2019-01-13T17:00:56Z",
        "lastEditedBy" : "7c444fb5-3f6f-4a08-83d5-454cb61d61f5",
        "tags" : [
        ]
      }
    ],
    "commit" : "ca6ebcebfd549b3194ae196b457dd010c14a455c",
    "line" : 443,
    "diffHunk" : "@@ -1,1 +441,445 @@            # Check if dry run\n            if not self.module.check_mode:\n                task = self.__cluster_obj.ReconfigureEx(config_spec, modify=True)\n                wait_for_task(task)\n"
  }
]