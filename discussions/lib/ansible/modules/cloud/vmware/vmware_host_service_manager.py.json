[
  {
    "id" : "9e97c0fa-de11-4ec7-89a0-effee589e37f",
    "prId" : 34862,
    "prUrl" : "https://github.com/ansible/ansible/pull/34862#pullrequestreview-88862676",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bc01d61f-1860-43e2-add5-267db924f81a",
        "parentId" : null,
        "authorId" : "7c444fb5-3f6f-4a08-83d5-454cb61d61f5",
        "body" : "Should there be a state to enable/disable the service on host boot?",
        "createdAt" : "2018-01-15T10:59:20Z",
        "updatedAt" : "2018-01-15T15:46:11Z",
        "lastEditedBy" : "7c444fb5-3f6f-4a08-83d5-454cb61d61f5",
        "tags" : [
        ]
      },
      {
        "id" : "20a3431a-bcca-4bd6-af40-4b3b948dcf3d",
        "parentId" : "bc01d61f-1860-43e2-add5-267db924f81a",
        "authorId" : "96aeecbb-c275-402c-b904-a795c82efb48",
        "body" : "Sounds good idea.",
        "createdAt" : "2018-01-15T13:30:18Z",
        "updatedAt" : "2018-01-15T15:46:11Z",
        "lastEditedBy" : "96aeecbb-c275-402c-b904-a795c82efb48",
        "tags" : [
        ]
      },
      {
        "id" : "7ee2eae4-5ac0-492d-a20b-26127f829198",
        "parentId" : "bc01d61f-1860-43e2-add5-267db924f81a",
        "authorId" : "2cc098a3-7926-4651-8261-412e9ac59899",
        "body" : "It's now handle by the \"service_policy\" option.",
        "createdAt" : "2018-01-15T15:49:47Z",
        "updatedAt" : "2018-01-15T15:50:02Z",
        "lastEditedBy" : "2cc098a3-7926-4651-8261-412e9ac59899",
        "tags" : [
        ]
      }
    ],
    "commit" : "0ef47b09eea0edf312e5e962cb207b50b9abd7e0",
    "line" : 43,
    "diffHunk" : "@@ -1,1 +41,45 @@    - Service settings are applied to this ESXi host system.\n    - If C(cluster_name) is not given, this parameter is required.\n  state:\n    description:\n    - Desired state of service."
  },
  {
    "id" : "6727d455-a006-47f4-b095-f90b43b51376",
    "prId" : 34862,
    "prUrl" : "https://github.com/ansible/ansible/pull/34862#pullrequestreview-88819829",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "955e3a99-138e-468b-bd06-27b0803ad46b",
        "parentId" : null,
        "authorId" : "7c444fb5-3f6f-4a08-83d5-454cb61d61f5",
        "body" : "Can be replaced with:\r\n```python\r\ndef check_service_state(self, host, service_name):\r\n    host_service_system = host.configManager.serviceSystem\r\n    if host_service_system:\r\n        services = host_service_system.serviceInfo.service\r\n        for service in services:\r\n            if service.key == service_name:\r\n                return service.running\r\n\r\n    msg = \"Failed to find '%s' service on host system '%s'\" % (service_name, host.name)\r\n    cluster_name = self.params.get('cluster_name', None)\r\n    if cluster_name:\r\n        msg += \" located on cluster '%s'\" % cluster_name\r\n    msg += \", please check if you have specified a valid ESXi service name.\"\r\n    self.module.fail_json(msg=msg)\r\n```\r\nThis way it stops looping through services as soon as it finds the correct one, and if it finds none, it fails",
        "createdAt" : "2018-01-15T12:10:27Z",
        "updatedAt" : "2018-01-15T15:46:11Z",
        "lastEditedBy" : "7c444fb5-3f6f-4a08-83d5-454cb61d61f5",
        "tags" : [
        ]
      },
      {
        "id" : "ea6d4560-2001-46de-a864-b9ca4be8b25c",
        "parentId" : "955e3a99-138e-468b-bd06-27b0803ad46b",
        "authorId" : "96aeecbb-c275-402c-b904-a795c82efb48",
        "body" : "OK.",
        "createdAt" : "2018-01-15T13:31:05Z",
        "updatedAt" : "2018-01-15T15:46:11Z",
        "lastEditedBy" : "96aeecbb-c275-402c-b904-a795c82efb48",
        "tags" : [
        ]
      }
    ],
    "commit" : "0ef47b09eea0edf312e5e962cb207b50b9abd7e0",
    "line" : 184,
    "diffHunk" : "@@ -1,1 +182,186 @@        self.module.exit_json(changed=changed, results=self.results)\n\n    def check_service_state(self, host, service_name):\n        host_service_system = host.configManager.serviceSystem\n        if host_service_system:"
  }
]