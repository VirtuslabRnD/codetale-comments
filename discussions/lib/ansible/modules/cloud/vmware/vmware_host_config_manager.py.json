[
  {
    "id" : "4ed1840a-f670-48b2-aa1a-9998453df999",
    "prId" : 41343,
    "prUrl" : "https://github.com/ansible/ansible/pull/41343#pullrequestreview-127681994",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6eedc15b-117a-49c9-941d-077007b09f2c",
        "parentId" : null,
        "authorId" : "9728c7f5-bdb3-4cd4-917f-3d1397739d1a",
        "body" : "This function is a good idea as it catches a potential error condition which the original PR did not consider, passing a value that is too large for an integer field.  I did not see any configuration options in vmware which allowed values outside of the range of an int, but this will prevent that issue from occurring if they ever do.\r\n\r\nI have some small issue with this new function: Allowing the type to be passed in as a string is a little unexpected on an is_integer function.  This allows the function to be used for purposes that its name does not imply.  There is also lots of potential for typos as this module is changed in the future.   I don't have a good suggestion to \"resolve\" this except to make two functions is_long and is_int.",
        "createdAt" : "2018-06-11T14:20:44Z",
        "updatedAt" : "2018-06-11T14:49:04Z",
        "lastEditedBy" : "9728c7f5-bdb3-4cd4-917f-3d1397739d1a",
        "tags" : [
        ]
      },
      {
        "id" : "6ecc8bbd-d4de-4a82-a900-8ac30d49fef3",
        "parentId" : "6eedc15b-117a-49c9-941d-077007b09f2c",
        "authorId" : "96aeecbb-c275-402c-b904-a795c82efb48",
        "body" : "I am thinking from Python 3 perspective, as `Int` and `Long` are merged into `Int` So function name `is_integer`. I wanted to avoid creating two functions `is_long` and `is_int`, but I am OK if it removes the confusion. üëç ",
        "createdAt" : "2018-06-11T15:22:48Z",
        "updatedAt" : "2018-06-11T15:22:48Z",
        "lastEditedBy" : "96aeecbb-c275-402c-b904-a795c82efb48",
        "tags" : [
        ]
      },
      {
        "id" : "7c6f4d31-8119-48c7-b91f-6607ef64d90a",
        "parentId" : "6eedc15b-117a-49c9-941d-077007b09f2c",
        "authorId" : "9728c7f5-bdb3-4cd4-917f-3d1397739d1a",
        "body" : "Since the function is for distinguishing between vmware types not python types and vmware will have int and long types for the foreseeable future, we should probably limit it to those two types or change it to something like is_vmware_type() or matches_vmware_type() if we want to keep the function the way it is.",
        "createdAt" : "2018-06-11T18:16:08Z",
        "updatedAt" : "2018-06-11T18:16:09Z",
        "lastEditedBy" : "9728c7f5-bdb3-4cd4-917f-3d1397739d1a",
        "tags" : [
        ]
      }
    ],
    "commit" : "b69ace756b77bc606be41a71c645b105b7abe937",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +101,105 @@\n    @staticmethod\n    def is_integer(value, type_of='int'):\n        try:\n            VmomiSupport.vmodlTypes[type_of](value)"
  },
  {
    "id" : "c640cc98-d2fa-4431-9265-06997ee00f1e",
    "prId" : 41343,
    "prUrl" : "https://github.com/ansible/ansible/pull/41343#pullrequestreview-127632718",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ed55ab5a-4f60-4fe9-a9e6-be0ec091d03c",
        "parentId" : null,
        "authorId" : "9728c7f5-bdb3-4cd4-917f-3d1397739d1a",
        "body" : "Since we are handling unknown names here we should probably add \"This is probably a bug.\" to the  \"except vim.fault.InvalidName as e:\" error below.",
        "createdAt" : "2018-06-11T14:28:06Z",
        "updatedAt" : "2018-06-11T14:49:04Z",
        "lastEditedBy" : "9728c7f5-bdb3-4cd4-917f-3d1397739d1a",
        "tags" : [
        ]
      },
      {
        "id" : "4855f945-f906-4615-973a-cc5ba8217708",
        "parentId" : "ed55ab5a-4f60-4fe9-a9e6-be0ec091d03c",
        "authorId" : "96aeecbb-c275-402c-b904-a795c82efb48",
        "body" : "OK.",
        "createdAt" : "2018-06-11T15:59:10Z",
        "updatedAt" : "2018-06-11T15:59:10Z",
        "lastEditedBy" : "96aeecbb-c275-402c-b904-a795c82efb48",
        "tags" : [
        ]
      }
    ],
    "commit" : "b69ace756b77bc606be41a71c645b105b7abe937",
    "line" : 98,
    "diffHunk" : "@@ -1,1 +163,167 @@                        changed = True\n                else:  # Don't silently drop unknown options. This prevents typos from falling through the cracks.\n                    self.module.fail_json(msg=\"Unknown option %s\" % option_key)\n            if changed:\n                try:"
  },
  {
    "id" : "b8efe135-2be4-42e3-aaf7-2441afd1f5ea",
    "prId" : 41343,
    "prUrl" : "https://github.com/ansible/ansible/pull/41343#pullrequestreview-127680583",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6ad02c35-72c5-41bc-828f-a5db38835bf9",
        "parentId" : null,
        "authorId" : "9728c7f5-bdb3-4cd4-917f-3d1397739d1a",
        "body" : "I was converting option_type to a string due to its contents being quite useful (min value, max value, default value, choices for choiceOptions, etc.)\r\n\r\nIf the formatting of the output was not acceptable we should still consider adding these other fields to the error message for the \"vmodl.fault.InvalidArgument\" exception handler below.  Let me know what you think.  I am willing to add this if you agree.",
        "createdAt" : "2018-06-11T14:34:49Z",
        "updatedAt" : "2018-06-11T14:49:04Z",
        "lastEditedBy" : "9728c7f5-bdb3-4cd4-917f-3d1397739d1a",
        "tags" : [
        ]
      },
      {
        "id" : "81fe2980-0c73-41ac-8051-2bafe4794b2a",
        "parentId" : "6ad02c35-72c5-41bc-828f-a5db38835bf9",
        "authorId" : "96aeecbb-c275-402c-b904-a795c82efb48",
        "body" : "I would rather add all other fields to the error message.",
        "createdAt" : "2018-06-11T15:58:48Z",
        "updatedAt" : "2018-06-11T15:58:49Z",
        "lastEditedBy" : "96aeecbb-c275-402c-b904-a795c82efb48",
        "tags" : [
        ]
      },
      {
        "id" : "c742e424-c864-49bf-8126-2562c48a9da5",
        "parentId" : "6ad02c35-72c5-41bc-828f-a5db38835bf9",
        "authorId" : "9728c7f5-bdb3-4cd4-917f-3d1397739d1a",
        "body" : "Hmm, seems it posted a comment which I deleted from the review so this is in here twice.  Just to make sure I under stand you want to extract the values from the type objects and include them in the vmodl.fault.InvalidArgument exception handler below?",
        "createdAt" : "2018-06-11T18:12:12Z",
        "updatedAt" : "2018-06-11T18:12:13Z",
        "lastEditedBy" : "9728c7f5-bdb3-4cd4-917f-3d1397739d1a",
        "tags" : [
        ]
      }
    ],
    "commit" : "b69ace756b77bc606be41a71c645b105b7abe937",
    "line" : 90,
    "diffHunk" : "@@ -1,1 +155,159 @@                        else:\n                            self.module.fail_json(msg=\"Provided value is of type %s.\"\n                                                      \" Option %s expects: %s\" % (type(option_value), option_key, type(option_type)))\n                    else:\n                        self.module.fail_json(msg=\"Cannot change read only option %s to %s.\" % (option_key, option_value))"
  }
]