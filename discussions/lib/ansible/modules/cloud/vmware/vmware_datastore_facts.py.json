[
  {
    "id" : "06eca1a6-02b4-4c89-8c4e-c74570387c3c",
    "prId" : 54872,
    "prUrl" : "https://github.com/ansible/ansible/pull/54872#pullrequestreview-226651207",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "72d3ab57-9595-4c0c-b2cb-51b5d2ba07aa",
        "parentId" : null,
        "authorId" : "96aeecbb-c275-402c-b904-a795c82efb48",
        "body" : "This changes the existing behaviour of module exit. Please add porting guide [here](https://docs.ansible.com/ansible/devel/porting_guides/porting_guide_2.8.html#noteworthy-module-changes) and add a change log entry [here](https://github.com/ansible/ansible/tree/devel/changelogs/fragments).",
        "createdAt" : "2019-04-09T04:55:57Z",
        "updatedAt" : "2019-04-12T23:07:53Z",
        "lastEditedBy" : "96aeecbb-c275-402c-b904-a795c82efb48",
        "tags" : [
        ]
      },
      {
        "id" : "ad03281f-1014-4ddb-9280-19fe18653dff",
        "parentId" : "72d3ab57-9595-4c0c-b2cb-51b5d2ba07aa",
        "authorId" : "96aeecbb-c275-402c-b904-a795c82efb48",
        "body" : "Also, add test case for this change.",
        "createdAt" : "2019-04-09T04:57:22Z",
        "updatedAt" : "2019-04-12T23:07:53Z",
        "lastEditedBy" : "96aeecbb-c275-402c-b904-a795c82efb48",
        "tags" : [
        ]
      },
      {
        "id" : "299294da-6e98-47f9-a17b-f971d6a5a7a7",
        "parentId" : "72d3ab57-9595-4c0c-b2cb-51b5d2ba07aa",
        "authorId" : "0fd34a17-8cd9-4bb2-803c-da934539c7f5",
        "body" : "Thanks @Akasurde for the review, I added a changelog fragment and there is already a test-case in https://github.com/ansible/ansible/pull/54882 for this use-case.",
        "createdAt" : "2019-04-15T13:41:23Z",
        "updatedAt" : "2019-04-15T13:41:37Z",
        "lastEditedBy" : "0fd34a17-8cd9-4bb2-803c-da934539c7f5",
        "tags" : [
        ]
      }
    ],
    "commit" : "520b63f7a251db1a81daf15df7dc659df01369d5",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +276,280 @@    result['datastores'] = datastores\n\n    module.exit_json(**result)\n\n"
  },
  {
    "id" : "78596767-a8b6-470f-a92c-199cb55c4320",
    "prId" : 60196,
    "prUrl" : "https://github.com/ansible/ansible/pull/60196#pullrequestreview-274233092",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a3017b68-b65d-4150-b11e-61e45c19eb89",
        "parentId" : null,
        "authorId" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "body" : "This may not matter if objects only has a small number of entries in it but this is inefficient.  This creates a copy of the dict which includes overhead for the dict's record keeping (hash tables and so forth) when you really only need to have an iterable of the keys and values.  So it's better to keep a copy of objects.items() instead of a copy of the dict itself.  You can do that like this:\r\n``` python\r\nfor k, v in tuple(objects.items()):\r\n    parent_dc = get_parent_datacenter(k)\r\n    if parent_dc.name != self.dc_name:\r\n        del objects[k]\r\n```\r\n\r\n[*] Note, ```del objects[k]``` should achieve the same thing as ```objects.pop(k, None)``` in this instance.  I like del when simply trying to remove a known key from a dictionary and pop when you want the value back.  (pop is also useful when you don't know if the key is present in the dictionary to begin with as specifying the default value a the second arg means it won't traceback if the key isn't present).\r\n\r\nI don't consider this a blocker as I don't know if objects could ever be big enough to be a problem.  I'll go ahead and merge this on Monday if I don't hear back from you.  (And you can always fix it in devel but not backport it if you like the efficiency but don't think that it's important enough to backport).",
        "createdAt" : "2019-08-09T20:50:24Z",
        "updatedAt" : "2019-08-09T20:50:24Z",
        "lastEditedBy" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "tags" : [
        ]
      },
      {
        "id" : "5ce795eb-0112-4ee1-b6e4-f580a5918afb",
        "parentId" : "a3017b68-b65d-4150-b11e-61e45c19eb89",
        "authorId" : "96aeecbb-c275-402c-b904-a795c82efb48",
        "body" : "I agree with you, @goneri what do you think ? ",
        "createdAt" : "2019-08-12T06:16:36Z",
        "updatedAt" : "2019-08-12T06:16:36Z",
        "lastEditedBy" : "96aeecbb-c275-402c-b904-a795c82efb48",
        "tags" : [
        ]
      },
      {
        "id" : "78ffeaa3-bcbe-4245-a6e6-37d69262b37c",
        "parentId" : "a3017b68-b65d-4150-b11e-61e45c19eb89",
        "authorId" : "0fd34a17-8cd9-4bb2-803c-da934539c7f5",
        "body" : "There is a similar pattern in `vmware_guest` ( https://github.com/ansible/ansible/blob/622a493ae03bd5e5cf517d336fc426e9d12208c7/lib/ansible/modules/cloud/vmware/vmware_guest.py#L788 ).\r\n\r\nFrom my perspective, the `copy()` call just reproduces what was silently done before by Python2. So I don't think it introduces a performance hit.\r\n\r\nThis being said, if Python3 behaves differently, it's to improve the performance. So we should indeed probably pay attention. I opened an issue to track that: https://github.com/ansible/ansible/issues/60399",
        "createdAt" : "2019-08-12T08:31:05Z",
        "updatedAt" : "2019-08-12T08:31:06Z",
        "lastEditedBy" : "0fd34a17-8cd9-4bb2-803c-da934539c7f5",
        "tags" : [
        ]
      },
      {
        "id" : "2998217c-f352-4cd4-8340-b81196ba7f54",
        "parentId" : "a3017b68-b65d-4150-b11e-61e45c19eb89",
        "authorId" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "body" : "Actually, my formulation is closer to what happens in Python2 as well.  ```objects.items()``` on Python2 creates a list whereas mine creates a tuple.  (and the code in this PR creates a new dict).",
        "createdAt" : "2019-08-13T01:32:30Z",
        "updatedAt" : "2019-08-13T01:32:30Z",
        "lastEditedBy" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "tags" : [
        ]
      },
      {
        "id" : "2ac8fb78-b1f2-452b-9e18-af10faaeaec0",
        "parentId" : "a3017b68-b65d-4150-b11e-61e45c19eb89",
        "authorId" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "body" : "It looks like you guys are okay with changing this down the road rather than immediately, tough, so I'll go ahead and merge this for 2.8.4.  Thanks for looking at it.",
        "createdAt" : "2019-08-13T01:33:16Z",
        "updatedAt" : "2019-08-13T01:33:17Z",
        "lastEditedBy" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "tags" : [
        ]
      },
      {
        "id" : "c3f882aa-14aa-4596-a2c0-d4438e40e4f6",
        "parentId" : "a3017b68-b65d-4150-b11e-61e45c19eb89",
        "authorId" : "96aeecbb-c275-402c-b904-a795c82efb48",
        "body" : "@abadger Thanks.",
        "createdAt" : "2019-08-13T04:56:57Z",
        "updatedAt" : "2019-08-13T04:56:57Z",
        "lastEditedBy" : "96aeecbb-c275-402c-b904-a795c82efb48",
        "tags" : [
        ]
      },
      {
        "id" : "bc8a3972-bbf8-42d2-856c-0c11717beae9",
        "parentId" : "a3017b68-b65d-4150-b11e-61e45c19eb89",
        "authorId" : "0fd34a17-8cd9-4bb2-803c-da934539c7f5",
        "body" : "Thanks @abadger, I'm testing the patch that you suggested https://github.com/ansible/ansible/pull/60476.",
        "createdAt" : "2019-08-13T12:01:10Z",
        "updatedAt" : "2019-08-13T12:01:10Z",
        "lastEditedBy" : "0fd34a17-8cd9-4bb2-803c-da934539c7f5",
        "tags" : [
        ]
      }
    ],
    "commit" : "ada36d2ac350c1a4310541d9511f7aa687866d62",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +215,219 @@            if hasattr(objects, 'items'):\n                # resource pools come back as a dictionary\n                tmpobjs = objects.copy()\n                for k, v in objects.items():\n                    parent_dc = get_parent_datacenter(k)"
  }
]