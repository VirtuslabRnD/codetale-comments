[
  {
    "id" : "032c019f-d7d7-43b7-8397-c959b6ccbdf6",
    "prId" : 50338,
    "prUrl" : "https://github.com/ansible/ansible/pull/50338#pullrequestreview-196876325",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "04362c32-35c0-4bca-b885-d2aaf1619da8",
        "parentId" : null,
        "authorId" : "7c444fb5-3f6f-4a08-83d5-454cb61d61f5",
        "body" : "I suggest failing the module if `self.dv_switch is None`, as an early failure case.",
        "createdAt" : "2019-01-28T05:05:38Z",
        "updatedAt" : "2019-02-03T10:34:38Z",
        "lastEditedBy" : "7c444fb5-3f6f-4a08-83d5-454cb61d61f5",
        "tags" : [
        ]
      }
    ],
    "commit" : "0fba5b22e09df8c45562f6bd18a33a419cde4ae8",
    "line" : 212,
    "diffHunk" : "@@ -1,1 +210,214 @@        self.normal_traffic_allowed = module.params['normal_traffic_allowed']\n        self.sampling_rate = module.params['sampling_rate']\n        self.dv_switch = find_dvs_by_name(self.content, self.switch)\n        if self.dv_switch is None:\n            self.module.fail_json(msg=\"There is no dvSwitch with the name: {0:s}.\".format(self.switch))"
  },
  {
    "id" : "dfe1235a-942c-4a5a-a028-0f5b94f794f6",
    "prId" : 50338,
    "prUrl" : "https://github.com/ansible/ansible/pull/50338#pullrequestreview-196876325",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "80cf6fd0-d8c1-4d34-88c0-f804dfacde2f",
        "parentId" : null,
        "authorId" : "7c444fb5-3f6f-4a08-83d5-454cb61d61f5",
        "body" : "It would be good to verify first that both are present, and if not, fail the module... Same for the next two statements as well.",
        "createdAt" : "2019-01-28T05:41:34Z",
        "updatedAt" : "2019-02-03T10:34:38Z",
        "lastEditedBy" : "7c444fb5-3f6f-4a08-83d5-454cb61d61f5",
        "tags" : [
        ]
      }
    ],
    "commit" : "0fba5b22e09df8c45562f6bd18a33a419cde4ae8",
    "line" : 223,
    "diffHunk" : "@@ -1,1 +221,225 @@                self.module.fail_json(msg=\"Please provide both VM name and NIC Label\")\n            self.source_vm_transmitted_name = module.params['source_vm_transmitted']['name']\n            self.source_vm_transmitted_nic_label = module.params['source_vm_transmitted']['nic_label']\n        if module.params['source_vm_received'] is not None:\n            if (module.params['source_vm_received']['name'] is None or"
  },
  {
    "id" : "cb5928a1-eec4-451e-921a-d398a2925963",
    "prId" : 50338,
    "prUrl" : "https://github.com/ansible/ansible/pull/50338#pullrequestreview-196876325",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d5e55c69-9f29-49b1-8280-760c75220c83",
        "parentId" : null,
        "authorId" : "7c444fb5-3f6f-4a08-83d5-454cb61d61f5",
        "body" : "Suggest to fail the module if port is None, as that would be an erroneous state. \r\n\r\nSame for the other situations",
        "createdAt" : "2019-01-28T05:48:43Z",
        "updatedAt" : "2019-02-03T10:34:38Z",
        "lastEditedBy" : "7c444fb5-3f6f-4a08-83d5-454cb61d61f5",
        "tags" : [
        ]
      }
    ],
    "commit" : "0fba5b22e09df8c45562f6bd18a33a419cde4ae8",
    "line" : 278,
    "diffHunk" : "@@ -1,1 +276,280 @@        if hasattr(self, 'source_vm_transmitted_name') and hasattr(self, 'source_vm_transmitted_nic_label'):\n            port = self.get_vm_port(self.source_vm_transmitted_name, self.source_vm_transmitted_nic_label)\n            if port is not None:\n                self.source_port_transmitted = port\n            else:"
  },
  {
    "id" : "c547c626-34a4-42a3-8d7a-bb70dc32a44d",
    "prId" : 50338,
    "prUrl" : "https://github.com/ansible/ansible/pull/50338#pullrequestreview-196876325",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7aed1e66-e444-4fff-8196-8cc03f42a03d",
        "parentId" : null,
        "authorId" : "7c444fb5-3f6f-4a08-83d5-454cb61d61f5",
        "body" : "Suggest verifying the port exists, and fail if it doesn't (same for the other sections below)",
        "createdAt" : "2019-01-28T06:01:14Z",
        "updatedAt" : "2019-02-03T10:34:38Z",
        "lastEditedBy" : "7c444fb5-3f6f-4a08-83d5-454cb61d61f5",
        "tags" : [
        ]
      }
    ],
    "commit" : "0fba5b22e09df8c45562f6bd18a33a419cde4ae8",
    "line" : 476,
    "diffHunk" : "@@ -1,1 +474,478 @@            if self.session_type == 'encapsulatedRemoteMirrorSource':\n                if self.source_port_received is not None:\n                    port = vim.dvs.VmwareDistributedVirtualSwitch.VspanPorts(portKey=str(self.source_port_received))\n                    if not self.dv_switch.FetchDVPorts(vim.dvs.PortCriteria(portKey=port.portKey)):\n                        self.module.fail_json(msg=\"Couldn't find port: {0:s}\".format(self.source_port_received))"
  }
]