[
  {
    "id" : "c9f8419e-87ba-458e-a8bd-5ac771c7381d",
    "prId" : 24093,
    "prUrl" : "https://github.com/ansible/ansible/pull/24093#pullrequestreview-35515688",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "adc88d60-195b-4813-a7b4-a0cfffcf26a7",
        "parentId" : null,
        "authorId" : "284bb4ad-6403-4762-bb03-b2a921d26492",
        "body" : "@Qalthos fixed now. Tested with pylint. ",
        "createdAt" : "2017-04-30T12:13:55Z",
        "updatedAt" : "2017-04-30T12:13:55Z",
        "lastEditedBy" : "284bb4ad-6403-4762-bb03-b2a921d26492",
        "tags" : [
        ]
      }
    ],
    "commit" : "a7d1360796998c1b10e31d4f69af6ab557ce5228",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +492,496 @@            load_config(module, commands)\n            if transport == 'cli':\n                body = run_commands(module, commands)\n                validate_config(body, vip, module)\n            changed = True"
  },
  {
    "id" : "e7cc6765-ef1f-44ec-af87-3a1fc7822fe5",
    "prId" : 38410,
    "prUrl" : "https://github.com/ansible/ansible/pull/38410#pullrequestreview-110508879",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "55a4cbd7-01a7-47b0-9008-c32e2472410a",
        "parentId" : null,
        "authorId" : "284bb4ad-6403-4762-bb03-b2a921d26492",
        "body" : "Can you please add example for md5 authentication with '7' or '0' auth_string in the Example section?\r\notherwise auth encryption can be confused as new parameter.",
        "createdAt" : "2018-04-09T05:46:06Z",
        "updatedAt" : "2018-04-09T15:44:52Z",
        "lastEditedBy" : "284bb4ad-6403-4762-bb03-b2a921d26492",
        "tags" : [
        ]
      },
      {
        "id" : "8edceffb-d4a7-4342-bb00-87e75fbb1bb6",
        "parentId" : "55a4cbd7-01a7-47b0-9008-c32e2472410a",
        "authorId" : "fa79aa34-d606-4908-acc5-6efdccee3b48",
        "body" : "Added examples, thanks for pointing this out.",
        "createdAt" : "2018-04-09T15:46:24Z",
        "updatedAt" : "2018-04-09T15:46:24Z",
        "lastEditedBy" : "fa79aa34-d606-4908-acc5-6efdccee3b48",
        "tags" : [
        ]
      }
    ],
    "commit" : "7a21ba39bb60b0209dc5569ca96772604f3ed121",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +72,76 @@        key string or just key string (for backward compatibility). For text type,\n        this should be just be a key string. if this is 'default', authentication\n        is removed.\n  auth_type:\n    description:"
  },
  {
    "id" : "cc64b301-7b60-4a6c-8f51-1e15adbbc240",
    "prId" : 52858,
    "prUrl" : "https://github.com/ansible/ansible/pull/52858#pullrequestreview-208018651",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3bf545f5-06e5-4687-9a59-a441a83d3258",
        "parentId" : null,
        "authorId" : "284bb4ad-6403-4762-bb03-b2a921d26492",
        "body" : "Does nxapi fail as well? \r\nDoes the command error out with structured json output? Or is it just for a specific key?\r\n\r\nIf the command fails for json request:\r\nWe actually have the logic already implemented in module_utils https://github.com/ansible/ansible/blob/devel/lib/ansible/module_utils/network/nxos/nxos.py#L164.\r\nWhen `check_rc` is set to `retry_json`, run_commands will send the command the request with non structured format if json fails. \r\nYou will just need to append the error string to if it is any different than `Invalid Command` or `Ambiguous Command` https://github.com/ansible/ansible/blob/devel/lib/ansible/module_utils/network/nxos/nxos.py#L170",
        "createdAt" : "2019-02-26T07:17:22Z",
        "updatedAt" : "2019-02-26T10:09:39Z",
        "lastEditedBy" : "284bb4ad-6403-4762-bb03-b2a921d26492",
        "tags" : [
        ]
      },
      {
        "id" : "97ab6c25-7722-4618-af95-0921b7d10ad3",
        "parentId" : "3bf545f5-06e5-4687-9a59-a441a83d3258",
        "authorId" : "1c9ec37a-2f71-44e7-8b02-5bff03b1111d",
        "body" : "Yes, this fails for nxapi as well.\r\nThe show command is successful with structured, it is only the `sh_preempt` key that is faulty.\r\n\r\n```\r\n[{u'TABLE_grp_detail': {u'ROW_grp_detail': {u'sh_active_router_addr': u'0.0.0.0',\r\n u'sh_group_num': u'100', u'sh_authentication_data': u'1234', u'sh_cur_hold_attr': u'sec',\r\n u'sh_ip_redund_name_attr': u'Default', u'sh_prio': u'25', u'sh_standby_router_addr': u'0.0.0.0',\r\n u'sh_vmac_attr': u'Default MAC', u'sh_cur_hello_attr': u'sec', u'sh_vip': u'192.0.2.2',\r\n u'sh_cur_hello': u'3', u'sh_vip_attr': u'config', u'sh_keystring_attr': u'unencrypted',\r\n u'sh_num_track_obj': u'0', u'sh_active_router_prio': u'0', u'sh_num_of_total_state_changes': u'0',\r\n u'sh_cfg_prio': u'25', u'sh_if_index': u'Ethernet1/1', u'sh_can_forward': u'unknown enum:<411125249>',\r\n u'sh_group_type': u'v4', u'sh_fwd_upper_threshold': u'25', u'sh_group_state': u'Initial',\r\n u'sh_cur_hold': u'10', u'sh_standby_router_prio': u'0', u'sh_fwd_lower_threshold': u'0', u'sh_group_version': u'v2',\r\n u'sh_preempt': u'unknown enum:<808728065>',   <-------------<< *****\r\n u'sh_vmac': u'0000.0c9f.f064', u'sh_ip_redund_name': u'hsrp-Eth1/1-100', 'sh_num_of_state_changes':\r\n u'0', u'sh_authentication_type': u'md5', u'sh_state_reason': u'(Interface Down)'}}}]\r\n``` ",
        "createdAt" : "2019-02-26T15:21:20Z",
        "updatedAt" : "2019-02-26T15:21:21Z",
        "lastEditedBy" : "1c9ec37a-2f71-44e7-8b02-5bff03b1111d",
        "tags" : [
        ]
      }
    ],
    "commit" : "084018d31a63dd53fa998806cace3ad1d830470d",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +249,253 @@    '''\n    if 'unknown enum:' in hsrp_table['sh_preempt']:\n        cmd = {'output': 'text', 'command': command.split('|')[0]}\n        out = run_commands(module, cmd)[0]\n        hsrp_table['sh_preempt'] = 'enabled' if ('may preempt' in out) else 'disabled'"
  }
]