[
  {
    "id" : "b344c97a-7278-4565-b861-cc18adae613d",
    "prId" : 29745,
    "prUrl" : "https://github.com/ansible/ansible/pull/29745#pullrequestreview-62475012",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "68aa6adf-7003-4d82-b2a5-eb999771207e",
        "parentId" : null,
        "authorId" : "284bb4ad-6403-4762-bb03-b2a921d26492",
        "body" : "@rahushen is `ConfiguredQuerierTimeout` compatible with nxos7K as well as 9K?",
        "createdAt" : "2017-09-13T12:20:05Z",
        "updatedAt" : "2017-09-13T12:38:16Z",
        "lastEditedBy" : "284bb4ad-6403-4762-bb03-b2a921d26492",
        "tags" : [
        ]
      },
      {
        "id" : "c2ac4c04-847d-4c89-8eb9-19fee1b17721",
        "parentId" : "68aa6adf-7003-4d82-b2a5-eb999771207e",
        "authorId" : "8b097f02-b5f6-4772-bc37-19d07a2e4a52",
        "body" : "@trishnaguha ... Yes, it is supported on N7K as well.",
        "createdAt" : "2017-09-13T15:17:07Z",
        "updatedAt" : "2017-09-13T15:17:07Z",
        "lastEditedBy" : "8b097f02-b5f6-4772-bc37-19d07a2e4a52",
        "tags" : [
        ]
      }
    ],
    "commit" : "53604d7cc6db1070541a9d68a9fb2ba82aa20d29",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +323,327 @@        'StartupQueryCount': 'startup_query_count',\n        'RobustnessVariable': 'robustness',\n        'ConfiguredQuerierTimeout': 'querier_timeout',\n        'ConfiguredMaxResponseTime': 'query_mrt',\n        'ConfiguredQueryInterval': 'query_interval',"
  },
  {
    "id" : "7f6022a0-e75e-4717-980a-cf5dfcbf1470",
    "prId" : 53136,
    "prUrl" : "https://github.com/ansible/ansible/pull/53136#pullrequestreview-222020112",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0a3232c0-c80f-4583-98f5-458722dab1bc",
        "parentId" : null,
        "authorId" : "7a1e5757-684b-4684-bcab-c114385bca28",
        "body" : "```\r\n    oif_ps:\r\n        description:\r\n            - Configure prefixes and sources for static outgoing interface (OIF). This\r\n              is a list of dict where each dict has source and prefix defined or just\r\n              prefix if source is not needed. The specified values will be configured\r\n              on the device and if any previous prefix/sources exist, they will be removed.\r\n              Keyword 'default' is also accpted which removes all existing prefix/sources.\r\n\r\n```\r\nBased on the option description, changing type=`list` to type=`raw` might not be the best of the fix. Since in addtion to `dict` as list elements it can accept a special str value `default` the option can be defined as `oif_ps=dict(required=False, type='list')`. This won't check the type of each element, later in the code if the value of `oif_ps` is assumed as `dict`, it might result in error, to avoid that if element value is not `['default']` it can be converted to list dict at line 598\r\n```\r\n if oif_ps:\r\n        if oif_ps == ['default']:\r\n            delta['oif_ps'] = []\r\n        else:\r\n            delta['oif_ps'] = <convert oif_ps to list of dict>\r\n```\r\n",
        "createdAt" : "2019-04-03T06:14:58Z",
        "updatedAt" : "2019-04-03T06:15:21Z",
        "lastEditedBy" : "7a1e5757-684b-4684-bcab-c114385bca28",
        "tags" : [
        ]
      }
    ],
    "commit" : "c8443220165b9e0f1324bb9ace1e9c079cd4bbcc",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +498,502 @@        oif_prefix=dict(required=False, type='str', removed_in_version='2.10'),\n        oif_source=dict(required=False, type='str', removed_in_version='2.10'),\n        oif_ps=dict(required=False, type='raw'),\n        restart=dict(type='bool', default=False),\n        state=dict(choices=['present', 'absent', 'default'],"
  }
]