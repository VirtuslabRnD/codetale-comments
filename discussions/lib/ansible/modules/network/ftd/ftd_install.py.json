[
  {
    "id" : "167c418b-214f-4e55-9f6f-9d906e259413",
    "prId" : 53467,
    "prUrl" : "https://github.com/ansible/ansible/pull/53467#pullrequestreview-216260712",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cb36da60-154c-44fd-be79-ef3f3bf90929",
        "parentId" : null,
        "authorId" : "a592774c-8568-4229-8c0e-31fbe6d00e14",
        "body" : "Should some of these parameters be located in the module utility and shared with other FTD modules?",
        "createdAt" : "2019-03-17T01:08:19Z",
        "updatedAt" : "2019-03-26T13:47:10Z",
        "lastEditedBy" : "a592774c-8568-4229-8c0e-31fbe6d00e14",
        "tags" : [
        ]
      },
      {
        "id" : "32188e69-ed34-4c24-ae52-108ea27b3030",
        "parentId" : "cb36da60-154c-44fd-be79-ef3f3bf90929",
        "authorId" : "ad799401-6135-48d7-aec9-41db567f849d",
        "body" : "Good point, but currently we don't have other FTD modules with similar parameters. The rest of FTD modules (e.g., `ftd_configuration`, `ftd_file_download`, `ftd_file_upload`) use the Ansible HTTP API connection with the FTD plugin, so username and password are specified as a part of inventory file.\r\n`ftd_install`, on the contrary, has them as module params, because it should do image installation even on devices without API (e.g., when the device is broken or the previous image didn't have API exposed). Does it make sense?",
        "createdAt" : "2019-03-19T10:09:55Z",
        "updatedAt" : "2019-03-26T13:47:10Z",
        "lastEditedBy" : "ad799401-6135-48d7-aec9-41db567f849d",
        "tags" : [
        ]
      },
      {
        "id" : "c9679e2d-a68a-43e5-927a-7f4fc86f1816",
        "parentId" : "cb36da60-154c-44fd-be79-ef3f3bf90929",
        "authorId" : "a592774c-8568-4229-8c0e-31fbe6d00e14",
        "body" : "That does make sense. Thanks.",
        "createdAt" : "2019-03-19T16:07:21Z",
        "updatedAt" : "2019-03-26T13:47:10Z",
        "lastEditedBy" : "a592774c-8568-4229-8c0e-31fbe6d00e14",
        "tags" : [
        ]
      }
    ],
    "commit" : "fe7d4c77cb1af59241a42911bf998d02e07acd85",
    "line" : 48,
    "diffHunk" : "@@ -1,1 +46,50 @@author: \"Cisco Systems, Inc. (@annikulin)\"\noptions:\n  device_hostname:\n    description:\n      - Hostname of the device as appears in the prompt (e.g., 'firepower-5516')."
  },
  {
    "id" : "47e8c90f-94f1-4190-9b46-d664c00ab6a1",
    "prId" : 53467,
    "prUrl" : "https://github.com/ansible/ansible/pull/53467#pullrequestreview-218932733",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "447ba1f9-e174-4222-9648-38fea1b3039d",
        "parentId" : null,
        "authorId" : "3374b5c2-684a-46fc-8052-1e21707ac879",
        "body" : "`local` connection shall be deprecated in Ansible future release version, so it's better if we can remove it from new module PRs.",
        "createdAt" : "2019-03-19T12:08:52Z",
        "updatedAt" : "2019-03-26T13:47:10Z",
        "lastEditedBy" : "3374b5c2-684a-46fc-8052-1e21707ac879",
        "tags" : [
        ]
      },
      {
        "id" : "79113766-731b-4dbe-8c29-c838369355d9",
        "parentId" : "447ba1f9-e174-4222-9648-38fea1b3039d",
        "authorId" : "a592774c-8568-4229-8c0e-31fbe6d00e14",
        "body" : "@justjais Is `httpapi` the recommended method for requests instead of local in the future?",
        "createdAt" : "2019-03-19T16:08:28Z",
        "updatedAt" : "2019-03-26T13:47:10Z",
        "lastEditedBy" : "a592774c-8568-4229-8c0e-31fbe6d00e14",
        "tags" : [
        ]
      },
      {
        "id" : "d498020a-12dd-40b3-bcec-4f5923636470",
        "parentId" : "447ba1f9-e174-4222-9648-38fea1b3039d",
        "authorId" : "ad799401-6135-48d7-aec9-41db567f849d",
        "body" : "@justjais, is `delegate_to: localhost` supposed to be its replacement when `local` connection is deprecated (for example, when API is not accessible and `httpapi` connection cannot be used because of this)?",
        "createdAt" : "2019-03-19T17:12:06Z",
        "updatedAt" : "2019-03-26T13:47:10Z",
        "lastEditedBy" : "ad799401-6135-48d7-aec9-41db567f849d",
        "tags" : [
        ]
      },
      {
        "id" : "03e4c854-f606-4a92-96cd-1e628fce8233",
        "parentId" : "447ba1f9-e174-4222-9648-38fea1b3039d",
        "authorId" : "3374b5c2-684a-46fc-8052-1e21707ac879",
        "body" : "@kbreit yes, `httpapi` connection is preferred over `local`, n that's why in network platform other connection plugins like: `network_cli/netconf` along with `httpapi` were introduced.\r\n\r\n@annikulin `delegate_to: localhost` and `connection: local` with respect to network means the same, also if I understand your example with respect to `API` not accessible correctly then u meant was if the server is inaccessible and if that's the case then even `local` connection won't work coz all these connection plugins runs the module locally only.",
        "createdAt" : "2019-03-20T07:39:39Z",
        "updatedAt" : "2019-03-26T13:47:10Z",
        "lastEditedBy" : "3374b5c2-684a-46fc-8052-1e21707ac879",
        "tags" : [
        ]
      },
      {
        "id" : "9394313a-6302-44cf-bbfd-e0202a201d5b",
        "parentId" : "447ba1f9-e174-4222-9648-38fea1b3039d",
        "authorId" : "ad799401-6135-48d7-aec9-41db567f849d",
        "body" : "@justjais, yes, and in case the `API` is not accessible, the playbook execution will fail even before executing the first task (when establishing the connection). In this case, we would still like to connect to the device and execute commands via console server. \r\n\r\nWhat type of connection is recommended in this case? Should it be still `httpapi` with `delegate_to: localhost` option?",
        "createdAt" : "2019-03-20T10:56:22Z",
        "updatedAt" : "2019-03-26T13:47:10Z",
        "lastEditedBy" : "ad799401-6135-48d7-aec9-41db567f849d",
        "tags" : [
        ]
      },
      {
        "id" : "9b8989c0-6215-44a5-8579-d135a810f21e",
        "parentId" : "447ba1f9-e174-4222-9648-38fea1b3039d",
        "authorId" : "7a1e5757-684b-4684-bcab-c114385bca28",
        "body" : "To add to @justjais's comment, we plan to deprecate `connection=local` for network platforms that are supported by Ansible Network team (ios, eos, junos, iosxr, nxos, vyos) in favor of first-class network connection plugins (network_cli/httpapi/netconf) support added in Ansible 2.6 version. \r\n\r\nFor new network platform support added by the community, it is recommended to use first class network connection plugin wherever applicable.\r\n\r\nIf the connection to console happens over ssh you can use `connection=network_cli` in that case. This connection creates the pseudo terminal over ssh to talk to remote host Refer [network_cli](https://github.com/ansible/community/blob/master/group-network/network_dev_network_cli.rst)\r\n\r\nFor all the network connection plugins the module runs locally on control node itself, hence `delegate_to: localhost` with httpapi connection won't have any effect (unless jumphost is used)",
        "createdAt" : "2019-03-25T13:52:24Z",
        "updatedAt" : "2019-03-26T13:47:10Z",
        "lastEditedBy" : "7a1e5757-684b-4684-bcab-c114385bca28",
        "tags" : [
        ]
      },
      {
        "id" : "89d506c8-3c69-497f-a6a5-b59ea3744731",
        "parentId" : "447ba1f9-e174-4222-9648-38fea1b3039d",
        "authorId" : "ad799401-6135-48d7-aec9-41db567f849d",
        "body" : "@ganeshrn, @justjais, thanks for your comments. Consolidating network modules and making them support network connection plugins only sounds reasonable.\r\n\r\nAs of now, we've used the [`unicon`](https://pypi.org/project/unicon/) library developed by Cisco to connect to the device over SSH and execute commands. Having taken a brief look at `network_cli` connection, the ideas look similar but the approach is a bit different: `unicon` has a concept of dialogs defining a sequence of commands you want to execute, a sequence of outputs you expect to receive and behavior of what to do when the command fails or times out. I'm pretty sure we can implement similar functionality with the help of `network_cli`, but it requires thorough investigation and planning together with you guys as owners of this plugin.\r\n\r\nConsidering that this module is already useful for FTD customers, would it make sense to publish this module as is (with dependency on `unicon` library and support for `local` connection type) as a short term solution and plan how to replace it with `network_cli` connection as a long-term plan and do it as a part of the next release?",
        "createdAt" : "2019-03-25T16:44:02Z",
        "updatedAt" : "2019-03-26T13:47:10Z",
        "lastEditedBy" : "ad799401-6135-48d7-aec9-41db567f849d",
        "tags" : [
        ]
      },
      {
        "id" : "e4b6ce9b-0270-498c-b405-84577bccced5",
        "parentId" : "447ba1f9-e174-4222-9648-38fea1b3039d",
        "authorId" : "7a1e5757-684b-4684-bcab-c114385bca28",
        "body" : ">  would it make sense to publish this module as is (with dependency on unicon library and support for local connection type) as a short term solution and plan how to replace it with network_cli connection as a long-term plan and do it as a part of the next release?\r\n\r\nYes, that should work IMO. FYI Ansible follows 4 version deprecation cycle that is if the code (options) available in a stable release is deprecated it can be removed after four releases, typical Ansible release cycle is around 4 to 6 months.",
        "createdAt" : "2019-03-26T06:25:00Z",
        "updatedAt" : "2019-03-26T13:47:10Z",
        "lastEditedBy" : "7a1e5757-684b-4684-bcab-c114385bca28",
        "tags" : [
        ]
      },
      {
        "id" : "4b59c65e-c359-4ebe-bf37-3224901fd88a",
        "parentId" : "447ba1f9-e174-4222-9648-38fea1b3039d",
        "authorId" : "ad799401-6135-48d7-aec9-41db567f849d",
        "body" : "Got it, thanks @ganeshrn.\r\n\r\n@justjais, would it work for you? So that we leave the `local` connection in this PR and come up with a plan how to get rid of it down the road.",
        "createdAt" : "2019-03-26T14:00:28Z",
        "updatedAt" : "2019-03-26T14:00:28Z",
        "lastEditedBy" : "ad799401-6135-48d7-aec9-41db567f849d",
        "tags" : [
        ]
      },
      {
        "id" : "5a59ce56-a983-4e4a-b331-d46b32f003aa",
        "parentId" : "447ba1f9-e174-4222-9648-38fea1b3039d",
        "authorId" : "3374b5c2-684a-46fc-8052-1e21707ac879",
        "body" : "@annikulin yes, I agree with @ganeshrn comments. I'll approve and merge the PR. Thanks",
        "createdAt" : "2019-03-26T14:04:36Z",
        "updatedAt" : "2019-03-26T14:06:21Z",
        "lastEditedBy" : "3374b5c2-684a-46fc-8052-1e21707ac879",
        "tags" : [
        ]
      },
      {
        "id" : "f2ea1b19-c57e-454e-9ff1-43f1d7e6f0d0",
        "parentId" : "447ba1f9-e174-4222-9648-38fea1b3039d",
        "authorId" : "ad799401-6135-48d7-aec9-41db567f849d",
        "body" : "Thank you, @justjais.",
        "createdAt" : "2019-03-26T14:34:23Z",
        "updatedAt" : "2019-03-26T14:34:23Z",
        "lastEditedBy" : "ad799401-6135-48d7-aec9-41db567f849d",
        "tags" : [
        ]
      }
    ],
    "commit" : "fe7d4c77cb1af59241a42911bf998d02e07acd85",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +34,38 @@  - Provisioning module for FTD devices that installs ROMMON image (if needed) and\n    FTD pkg image on the firewall.\n  - Can be used with `httpapi` and `local` connection types. The `httpapi` is preferred,\n    the `local` connection should be used only when the device cannot be accessed via\n    REST API."
  },
  {
    "id" : "0545c58f-95db-49bc-940e-b3fe7231d79f",
    "prId" : 53467,
    "prUrl" : "https://github.com/ansible/ansible/pull/53467#pullrequestreview-216111656",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ac769797-89a4-4bdc-a4b5-386339043c53",
        "parentId" : null,
        "authorId" : "3374b5c2-684a-46fc-8052-1e21707ac879",
        "body" : "Similar to `local` connection comment.",
        "createdAt" : "2019-03-19T15:10:50Z",
        "updatedAt" : "2019-03-26T13:47:10Z",
        "lastEditedBy" : "3374b5c2-684a-46fc-8052-1e21707ac879",
        "tags" : [
        ]
      }
    ],
    "commit" : "fe7d4c77cb1af59241a42911bf998d02e07acd85",
    "line" : 261,
    "diffHunk" : "@@ -1,1 +259,263 @@\n\ndef check_required_params_for_local_connection(module, params):\n    missing_params = [k for k, v in iteritems(params) if k in REQUIRED_PARAMS_FOR_LOCAL_CONNECTION and v is None]\n    if missing_params:"
  }
]