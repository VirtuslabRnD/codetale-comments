[
  {
    "id" : "f06910a0-4d98-4959-832e-7eef30c7db6e",
    "prId" : 43933,
    "prUrl" : "https://github.com/ansible/ansible/pull/43933#pullrequestreview-147350337",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f20ecb3c-8d0c-47cd-bc98-6d1fe48cd2bf",
        "parentId" : null,
        "authorId" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "body" : "I don't think this is appropriate here.  check_mode for this module should check what the setting is currently and return changed=True or changed=False depending on whether it matches what was specified in the option value.\r\n\r\n",
        "createdAt" : "2018-08-14T14:17:50Z",
        "updatedAt" : "2018-08-26T04:38:00Z",
        "lastEditedBy" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "tags" : [
        ]
      },
      {
        "id" : "3f10be1a-1e2f-41b9-a611-5cbae3a9dba1",
        "parentId" : "f20ecb3c-8d0c-47cd-bc98-6d1fe48cd2bf",
        "authorId" : "38b7d9c4-df1f-44d2-a0a2-539900170fbe",
        "body" : "@wwitzel3 started this pattern. Check mode for tower modules doesn't do anything action-specific. We should track this in another issue.",
        "createdAt" : "2018-08-14T14:38:29Z",
        "updatedAt" : "2018-08-26T04:38:00Z",
        "lastEditedBy" : "38b7d9c4-df1f-44d2-a0a2-539900170fbe",
        "tags" : [
        ]
      },
      {
        "id" : "8ff8c1f9-3d52-4fe8-beb8-92033c994282",
        "parentId" : "f20ecb3c-8d0c-47cd-bc98-6d1fe48cd2bf",
        "authorId" : "d7d8721c-7ad0-4834-9a3d-b53ca8656789",
        "body" : "@AlanCoding Has an issue be raised to track `changed`?",
        "createdAt" : "2018-08-16T21:55:11Z",
        "updatedAt" : "2018-08-26T04:38:00Z",
        "lastEditedBy" : "d7d8721c-7ad0-4834-9a3d-b53ca8656789",
        "tags" : [
        ]
      },
      {
        "id" : "bc4ec2f7-18a1-4659-9d13-9998eb700acf",
        "parentId" : "f20ecb3c-8d0c-47cd-bc98-6d1fe48cd2bf",
        "authorId" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "body" : "-1 to ignoring this.  There is a simple way to fix this for review process, though... Disable check mode in the argument spec.  Then you can fix the module so that check mode does the right thing later.",
        "createdAt" : "2018-08-17T01:56:58Z",
        "updatedAt" : "2018-08-26T04:38:00Z",
        "lastEditedBy" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "tags" : [
        ]
      },
      {
        "id" : "976bca70-5f71-4326-8d97-b89d29e186b6",
        "parentId" : "f20ecb3c-8d0c-47cd-bc98-6d1fe48cd2bf",
        "authorId" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "body" : "Note that if all tower modules use this same idiom... Many of those should probably remove claims of check mode support from their arg spec until they implement it as well... But that would definitely be a different PR ;-)",
        "createdAt" : "2018-08-17T01:58:38Z",
        "updatedAt" : "2018-08-26T04:38:00Z",
        "lastEditedBy" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "tags" : [
        ]
      },
      {
        "id" : "a599786b-89e8-4809-96d1-2fd41cd6c1d3",
        "parentId" : "f20ecb3c-8d0c-47cd-bc98-6d1fe48cd2bf",
        "authorId" : "38b7d9c4-df1f-44d2-a0a2-539900170fbe",
        "body" : "here's the definition of changed:\r\n\r\nhttps://github.com/ansible/tower-cli/blob/master/tower_cli/resources/setting.py#L136\r\n\r\nI might have to come back to look at this later for the deeper questions here",
        "createdAt" : "2018-08-17T19:16:51Z",
        "updatedAt" : "2018-08-26T04:38:00Z",
        "lastEditedBy" : "38b7d9c4-df1f-44d2-a0a2-539900170fbe",
        "tags" : [
        ]
      }
    ],
    "commit" : "671a03ae4718d95509489ee45d42dad981faa0aa",
    "line" : 86,
    "diffHunk" : "@@ -1,1 +84,88 @@    tower_auth = tower_auth_config(module)\n    with settings.runtime_values(**tower_auth):\n        tower_check_mode(module)\n        try:\n            setting = tower_cli.get_resource('setting')"
  },
  {
    "id" : "999e7eed-b5de-45a3-b317-52645094ff73",
    "prId" : 43933,
    "prUrl" : "https://github.com/ansible/ansible/pull/43933#pullrequestreview-149963989",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1d0b601a-10a3-485a-aa70-5d7521a773e9",
        "parentId" : null,
        "authorId" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "body" : "Okay, if you need types other than string, then you'll need more logic here.. (test setting something with value=1 to see that right now everything is a string).  I think there's several options, all with drawbacks:\r\n\r\n* The default type in the argument_spec is \"str\" which will convert the argument into a string.  Use type=\"raw\" to prevent that and receive whatever type was passed in via json instead.  This has a big caveat, though, especially for a simple module parameter like this: if users specify the arguments in key=value form instead of as yaml then the arguments will still be strings.  This is because yaml is typed but key=value is untyped.  So if you go this route you'll need a big documentation warning that key=value will do the wrong thing for setting non strings.\r\n* Have the user specify the value as a more complex string.  If they specify it as a json literal, for instance, you can then json.loads() the value to make it a proper type.  The drawback is this is a pain for the user.\r\n\r\nThere's one more option but it's out of our hands whether it will work... If tower knows what type it's seeing are supposed to be and does conversion itself, then we can leave this alone in our code, taking strings here, and let tower convert strings to the types that it wants. But that's something that can only be taken care of in tower code, not in ours. You'll probably want to add a test case which sets a non-string setting from a string passed into this module to make sure that this keeps working with future versions of tower as well. ",
        "createdAt" : "2018-08-26T14:05:13Z",
        "updatedAt" : "2018-08-28T04:21:00Z",
        "lastEditedBy" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "tags" : [
        ]
      },
      {
        "id" : "ead3dfe3-8acb-4eb1-921d-bd1bbe9ea663",
        "parentId" : "1d0b601a-10a3-485a-aa70-5d7521a773e9",
        "authorId" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "body" : "@jainnikhil30 and I took a look at the tower_cli code which is backing this tonight and decided that tower_cli is trying to coerce the types from a schema that it retrieves from the tower server.  So it looks like the module code does not have to worry about this conversion.",
        "createdAt" : "2018-08-28T04:41:56Z",
        "updatedAt" : "2018-08-28T04:41:57Z",
        "lastEditedBy" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "tags" : [
        ]
      }
    ],
    "commit" : "671a03ae4718d95509489ee45d42dad981faa0aa",
    "line" : 72,
    "diffHunk" : "@@ -1,1 +70,74 @@        name=dict(Required=True),\n        value=dict(Required=True),\n    )\n\n    module = TowerModule("
  },
  {
    "id" : "95284192-95c4-4775-9f7a-04507909db2b",
    "prId" : 43933,
    "prUrl" : "https://github.com/ansible/ansible/pull/43933#pullrequestreview-149711572",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b2c7b51c-ef51-4b13-ae47-b04d02930c08",
        "parentId" : null,
        "authorId" : "06ab4cf8-4a18-478e-93ee-69929f4bffc6",
        "body" : "It looks like the main return values are `id` and `value` from the Tower API, would be nice to have that in the docs here. ",
        "createdAt" : "2018-08-27T13:30:54Z",
        "updatedAt" : "2018-08-27T13:31:31Z",
        "lastEditedBy" : "06ab4cf8-4a18-478e-93ee-69929f4bffc6",
        "tags" : [
        ]
      }
    ],
    "commit" : "671a03ae4718d95509489ee45d42dad981faa0aa",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +33,37 @@'''\n\nRETURN = ''' # '''\n\nEXAMPLES = '''"
  }
]