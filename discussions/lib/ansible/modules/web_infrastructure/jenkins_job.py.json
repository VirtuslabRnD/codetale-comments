[
  {
    "id" : "a3231a71-de86-4a40-bd21-698a6a846c41",
    "prId" : 54958,
    "prUrl" : "https://github.com/ansible/ansible/pull/54958#pullrequestreview-274261332",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bda42ee5-21ca-4c7a-9f93-e185e7e9b005",
        "parentId" : null,
        "authorId" : "f71a0dfe-a1e5-4aec-8de6-2450777c02e9",
        "body" : "I'm not convinced by the fix: IMHO it assumes that there are no non-ASCII characters in the XML string. Without having gone into the depth of the XML library, there should be a way to get a str (instead of bytes) using the encoding from the XML header (or the XML default, see e.g. http://www.opentag.com/xfaq_enc.htm#enc_default).",
        "createdAt" : "2019-06-04T11:34:40Z",
        "updatedAt" : "2019-09-16T20:17:01Z",
        "lastEditedBy" : "f71a0dfe-a1e5-4aec-8de6-2450777c02e9",
        "tags" : [
        ]
      },
      {
        "id" : "e9ad096f-b39d-4407-84ed-42a33df06416",
        "parentId" : "bda42ee5-21ca-4c7a-9f93-e185e7e9b005",
        "authorId" : "bccb1175-bbd2-402a-b095-472c37156409",
        "body" : "@ericzolf please take a look at documentation of ElementTree.tostring: https://docs.python.org/2/library/xml.etree.elementtree.html#xml.etree.ElementTree.tostring - default encoding is 'us-ascii', so decode('ascii') should always work (ET.tostring encodes non-us characters as XML character entities).\r\n\r\nBTW sorry for long delay, almost forgot about this PR :)",
        "createdAt" : "2019-08-13T12:56:11Z",
        "updatedAt" : "2019-09-16T20:17:01Z",
        "lastEditedBy" : "bccb1175-bbd2-402a-b095-472c37156409",
        "tags" : [
        ]
      }
    ],
    "commit" : "4783bcb883f8cbfa0c09a0533da3024223ebb86c",
    "line" : 43,
    "diffHunk" : "@@ -1,1 +329,333 @@\ndef job_config_to_string(xml_str):\n    return ET.tostring(ET.fromstring(xml_str)).decode('ascii')\n\n"
  }
]