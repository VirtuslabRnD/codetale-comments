[
  {
    "id" : "2438e738-36a4-4f69-ba62-04c386444b5b",
    "prId" : 56721,
    "prUrl" : "https://github.com/ansible/ansible/pull/56721#pullrequestreview-251002562",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c65ab803-e447-4708-8bd0-e69e5b13c693",
        "parentId" : null,
        "authorId" : "d2d80496-0795-4618-ba72-36ae6c5b52ef",
        "body" : "```suggestion\r\n    required: true\r\n    type: list\r\n```",
        "createdAt" : "2019-06-18T07:58:21Z",
        "updatedAt" : "2019-06-21T04:13:05Z",
        "lastEditedBy" : "d2d80496-0795-4618-ba72-36ae6c5b52ef",
        "tags" : [
        ]
      },
      {
        "id" : "9caa1818-f8e6-4756-b106-5c746a068549",
        "parentId" : "c65ab803-e447-4708-8bd0-e69e5b13c693",
        "authorId" : "ebb63526-11a8-4b90-b451-ad57997d3e0d",
        "body" : "Added additional line 'type: list'",
        "createdAt" : "2019-06-18T10:36:03Z",
        "updatedAt" : "2019-06-21T04:13:05Z",
        "lastEditedBy" : "ebb63526-11a8-4b90-b451-ad57997d3e0d",
        "tags" : [
        ]
      }
    ],
    "commit" : "04a566b62b5cebae5ec2c4fb33d7432d99f649b5",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +27,31 @@      - List of databases is provided with I(state=dump) only.\n      - if name=all Works like --all-databases option for mysqldump (Added in 2.0).\n    required: true\n    type: list\n    aliases: [ db ]"
  },
  {
    "id" : "57cbac4b-a812-468e-bb3f-4ff52b0a5cf9",
    "prId" : 56721,
    "prUrl" : "https://github.com/ansible/ansible/pull/56721#pullrequestreview-252091145",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a47d1157-1f3a-4572-83c3-bafb217c7105",
        "parentId" : null,
        "authorId" : "3c2a0f57-db61-42cd-9f60-337be7f6e7c6",
        "body" : "Are you somewhere making sure that `db` is not an empty list?",
        "createdAt" : "2019-06-19T13:43:34Z",
        "updatedAt" : "2019-06-21T04:13:05Z",
        "lastEditedBy" : "3c2a0f57-db61-42cd-9f60-337be7f6e7c6",
        "tags" : [
        ]
      },
      {
        "id" : "e26f0fe7-84f2-4bf0-891e-a575112098a6",
        "parentId" : "a47d1157-1f3a-4572-83c3-bafb217c7105",
        "authorId" : "ebb63526-11a8-4b90-b451-ad57997d3e0d",
        "body" : "+1 @felixfontein \r\n\r\nFixed this",
        "createdAt" : "2019-06-20T05:06:27Z",
        "updatedAt" : "2019-06-21T04:13:05Z",
        "lastEditedBy" : "ebb63526-11a8-4b90-b451-ad57997d3e0d",
        "tags" : [
        ]
      }
    ],
    "commit" : "04a566b62b5cebae5ec2c4fb33d7432d99f649b5",
    "line" : 133,
    "diffHunk" : "@@ -1,1 +319,323 @@    quick = module.params[\"quick\"]\n\n    if len(db) > 1 and state != 'dump':\n        module.fail_json(msg=\"Multiple databases is only supported with state=dump\")\n    db_name = ' '.join(db)"
  },
  {
    "id" : "f3c68cbe-90e0-4d2b-91e2-95ca91ae2a28",
    "prId" : 58602,
    "prUrl" : "https://github.com/ansible/ansible/pull/58602#pullrequestreview-258382662",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "68973bd3-121e-4327-af1b-ab043203589d",
        "parentId" : null,
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "What happens if the database does not exist?",
        "createdAt" : "2019-07-02T18:59:05Z",
        "updatedAt" : "2019-07-17T12:39:30Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      },
      {
        "id" : "5918b13e-12d9-475a-86f1-3f3c3db861ed",
        "parentId" : "68973bd3-121e-4327-af1b-ab043203589d",
        "authorId" : "ebb63526-11a8-4b90-b451-ad57997d3e0d",
        "body" : "Here there are 2 cases,\r\n\r\n1. If non-existing `db` is **passed** via ansible playbook then it silently passes since `existence_list` variable would be `[]` returning `False`\r\n\r\n```\r\n$ ansible-playbook delete_nonexisting_db.yml \r\n [WARNING]: No inventory was parsed, only implicit localhost is available\r\n\r\n [WARNING]: provided hosts list is empty, only localhost is available. Note that the implicit localhost does not match 'all'\r\n\r\n\r\nPLAY [Sample] *****************************************************************************************************************************************************************************************************\r\n\r\nTASK [Delete databases db1 and db3] *******************************************************************************************************************************************************************************\r\nok: [localhost]\r\n\r\nTASK [assert successful completion of deleting existing database] *************************************************************************************************************************************************\r\nok: [localhost] => {\r\n    \"changed\": false, \r\n    \"msg\": \"All assertions passed\"\r\n}\r\n\r\nTASK [run command to list databases like specified database name] *************************************************************************************************************************************************\r\nchanged: [localhost]\r\n\r\nTASK [assert that specific databases which were deleted does not exist] *******************************************************************************************************************************************\r\nok: [localhost] => {\r\n    \"changed\": false, \r\n    \"msg\": \"All assertions passed\"\r\n}\r\n\r\nPLAY RECAP ********************************************************************************************************************************************************************************************************\r\nlocalhost                  : ok=4    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0\r\n```\r\n\r\n2. If non-existing `db` is **not passed** via ansible playbook then it will throw an error\r\n`FAILED! => {\"changed\": false, \"msg\": \"error deleting database: (1008, u\\\"Can't drop database 'abcde'; database doesn't exist\\\")\"}`\r\n\r\nHow do we want it to behave?",
        "createdAt" : "2019-07-03T21:40:21Z",
        "updatedAt" : "2019-07-17T12:39:30Z",
        "lastEditedBy" : "ebb63526-11a8-4b90-b451-ad57997d3e0d",
        "tags" : [
        ]
      },
      {
        "id" : "22287f24-105c-45a8-be4b-839d064b238a",
        "parentId" : "68973bd3-121e-4327-af1b-ab043203589d",
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "What do you mean by \"not passed\"? If the DB is not specified as a module option, why does the code tries to delete it?",
        "createdAt" : "2019-07-05T05:51:37Z",
        "updatedAt" : "2019-07-17T12:39:30Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      },
      {
        "id" : "0e1a8e4b-59d3-456e-ad41-54f1e6e10fae",
        "parentId" : "68973bd3-121e-4327-af1b-ab043203589d",
        "authorId" : "ebb63526-11a8-4b90-b451-ad57997d3e0d",
        "body" : "I was thinking on the lines where this function could be re-used by some other scripts (and not ansible or its modules). In that situation, the function will throw an error saying database does not exist to delete. I am unnecessarily thinking too much here and making it complex.\r\n\r\nShort answer to the question \"`What happens if the database does not exist?`\" is that nothing is changed on the system and ansible playbook executes successfully",
        "createdAt" : "2019-07-05T12:38:24Z",
        "updatedAt" : "2019-07-17T12:39:30Z",
        "lastEditedBy" : "ebb63526-11a8-4b90-b451-ad57997d3e0d",
        "tags" : [
        ]
      }
    ],
    "commit" : "91f5d2f334174d37a86760dafd409c06ce0b2d14",
    "line" : 71,
    "diffHunk" : "@@ -1,1 +178,182 @@        return False\n    for each_db in db:\n        query = \"DROP DATABASE %s\" % mysql_quote_identifier(each_db, 'database')\n        cursor.execute(query)\n    return True"
  },
  {
    "id" : "c0d24a1b-cde9-4114-95e0-aed9463453bb",
    "prId" : 58602,
    "prUrl" : "https://github.com/ansible/ansible/pull/58602#pullrequestreview-258618383",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4a178692-8991-4d3a-964b-e8ad067a4a39",
        "parentId" : null,
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "Is this correctly handled? I think right now, you're trying to determine whether a database called \"all\" exists or not.",
        "createdAt" : "2019-07-05T05:49:30Z",
        "updatedAt" : "2019-07-17T12:39:30Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      },
      {
        "id" : "924e4d02-7c43-45b1-a029-f122cf8e8c2d",
        "parentId" : "4a178692-8991-4d3a-964b-e8ad067a4a39",
        "authorId" : "ebb63526-11a8-4b90-b451-ad57997d3e0d",
        "body" : "Yes, this has been handled https://github.com/pratikgadiya12/ansible/blob/issue_58370/lib/ansible/modules/database/mysql/mysql_db.py#L355",
        "createdAt" : "2019-07-07T09:54:45Z",
        "updatedAt" : "2019-07-17T12:39:30Z",
        "lastEditedBy" : "ebb63526-11a8-4b90-b451-ad57997d3e0d",
        "tags" : [
        ]
      }
    ],
    "commit" : "91f5d2f334174d37a86760dafd409c06ce0b2d14",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +26,30 @@      - I(name=all) May only be provided if I(state) is C(dump) or C(import).\n      - List of databases is provided with I(state=dump), I(state=present) and I(state=absent).\n      - if name=all Works like --all-databases option for mysqldump (Added in 2.0).\n    required: true\n    type: list"
  },
  {
    "id" : "968a33b9-5343-4484-b008-da4cae953de8",
    "prId" : 58602,
    "prUrl" : "https://github.com/ansible/ansible/pull/58602#pullrequestreview-258618523",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "807e907d-3036-4a95-916b-1a929fa17281",
        "parentId" : null,
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "It might make sense here to check for `db == ['all']`, at least for `dump` and `import`; if that's true, set `db == []` and `db_all = True` (or something like that).",
        "createdAt" : "2019-07-05T05:53:36Z",
        "updatedAt" : "2019-07-17T12:39:30Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      },
      {
        "id" : "ddcbaabb-6bf0-4959-af1d-379057868da6",
        "parentId" : "807e907d-3036-4a95-916b-1a929fa17281",
        "authorId" : "ebb63526-11a8-4b90-b451-ad57997d3e0d",
        "body" : "This has been handled in https://github.com/pratikgadiya12/ansible/blob/issue_58370/lib/ansible/modules/database/mysql/mysql_db.py#L355",
        "createdAt" : "2019-07-07T09:59:01Z",
        "updatedAt" : "2019-07-17T12:39:30Z",
        "lastEditedBy" : "ebb63526-11a8-4b90-b451-ad57997d3e0d",
        "tags" : [
        ]
      }
    ],
    "commit" : "91f5d2f334174d37a86760dafd409c06ce0b2d14",
    "line" : 111,
    "diffHunk" : "@@ -1,1 +336,340 @@    if not db:\n        module.exit_json(changed=False, db=db, db_list=[])\n    db = [each_db.strip() for each_db in db]\n\n    encoding = module.params[\"encoding\"]"
  },
  {
    "id" : "2ebcd739-12b5-4a95-be39-9bb5f43f8802",
    "prId" : 58602,
    "prUrl" : "https://github.com/ansible/ansible/pull/58602#pullrequestreview-258229963",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "95a64cbc-6c60-42e6-9127-f7ca9ed9fc58",
        "parentId" : null,
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "This check would have to be adjusted for `db_all` if you make the above change.",
        "createdAt" : "2019-07-05T05:54:08Z",
        "updatedAt" : "2019-07-17T12:39:30Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      }
    ],
    "commit" : "91f5d2f334174d37a86760dafd409c06ce0b2d14",
    "line" : 121,
    "diffHunk" : "@@ -1,1 +361,365 @@    quick = module.params[\"quick\"]\n\n    if len(db) > 1 and state == 'import':\n        module.fail_json(msg=\"Multiple databases are not supported with state=import\")\n    db_name = ' '.join(db)"
  },
  {
    "id" : "900e5627-1fd8-42c7-9543-6d49a81010cb",
    "prId" : 58602,
    "prUrl" : "https://github.com/ansible/ansible/pull/58602#pullrequestreview-259511472",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c2a5561c-2838-4ade-b929-ba486ad2629c",
        "parentId" : null,
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "```suggestion\r\n            module.exit_json(changed=bool(non_existence_list), db=db_name, db_list=db)\r\n```",
        "createdAt" : "2019-07-05T05:59:16Z",
        "updatedAt" : "2019-07-17T12:39:30Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      },
      {
        "id" : "7b297ca3-9a6b-4db0-bc4f-2cdeb5e69605",
        "parentId" : "c2a5561c-2838-4ade-b929-ba486ad2629c",
        "authorId" : "ebb63526-11a8-4b90-b451-ad57997d3e0d",
        "body" : "Let's consider a situation where all the databases to be imported already exists. In this case, the changed state for check mode would be `False` since `changed=bool(non_existence_list)`. This contradicts to the previous `mysql_db` code for import where it always returns `True` irrespective of whether a database exists or not.\r\n\r\nPrevious code for `state=import`:\r\n- db exists [code](https://github.com/ansible/ansible/blob/devel/lib/ansible/modules/database/mysql/mysql_db.py#L372)\r\n- db not exist [code](https://github.com/ansible/ansible/blob/devel/lib/ansible/modules/database/mysql/mysql_db.py#L400)",
        "createdAt" : "2019-07-05T10:52:03Z",
        "updatedAt" : "2019-07-17T12:39:30Z",
        "lastEditedBy" : "ebb63526-11a8-4b90-b451-ad57997d3e0d",
        "tags" : [
        ]
      },
      {
        "id" : "b03a974a-c472-4f4a-95f3-5683cdbf7c86",
        "parentId" : "c2a5561c-2838-4ade-b929-ba486ad2629c",
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "You're right, it always returned `True` before. There's a difference to before, though: before, `db_create` *always* returned `True`. Now, it only returns `True` if creating all DBs succeeded. So the `if changed:` can be removed in line 426, and the `if` block can always be executed. As long as `db_create` didn't result in an exception (in which case the module dies), all DBs should be there anyway.",
        "createdAt" : "2019-07-06T21:29:43Z",
        "updatedAt" : "2019-07-17T12:39:30Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      },
      {
        "id" : "03bba2f1-62f7-490c-aee2-75b4220c020f",
        "parentId" : "c2a5561c-2838-4ade-b929-ba486ad2629c",
        "authorId" : "ebb63526-11a8-4b90-b451-ad57997d3e0d",
        "body" : "Agree that `if changed:` could be removed and `if` block can always be executed however, I still think that `changed` should be equals to `True` instead of `changed=bool(non_existence_list)` since import functionality also overrides imported database if that already exists.\r\nThis will again lead to system change, right?",
        "createdAt" : "2019-07-08T12:16:23Z",
        "updatedAt" : "2019-07-17T12:39:30Z",
        "lastEditedBy" : "ebb63526-11a8-4b90-b451-ad57997d3e0d",
        "tags" : [
        ]
      },
      {
        "id" : "8105d893-bd8b-4c80-977e-d558509202a8",
        "parentId" : "c2a5561c-2838-4ade-b929-ba486ad2629c",
        "authorId" : "ebb63526-11a8-4b90-b451-ad57997d3e0d",
        "body" : "Discussed the same with @felixfontein and we agree that `changed` state would be always `True`",
        "createdAt" : "2019-07-09T13:45:59Z",
        "updatedAt" : "2019-07-17T12:39:30Z",
        "lastEditedBy" : "ebb63526-11a8-4b90-b451-ad57997d3e0d",
        "tags" : [
        ]
      }
    ],
    "commit" : "91f5d2f334174d37a86760dafd409c06ce0b2d14",
    "line" : 257,
    "diffHunk" : "@@ -1,1 +431,435 @@    elif state == \"import\":\n        if module.check_mode:\n            module.exit_json(changed=True, db=db_name, db_list=db)\n        if non_existence_list and not all_databases:\n            try:"
  },
  {
    "id" : "07cbd93f-f44a-405c-a099-e2884f95da23",
    "prId" : 58602,
    "prUrl" : "https://github.com/ansible/ansible/pull/58602#pullrequestreview-259903224",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ef90cf3c-9932-4f8f-869c-ba6af90fcfac",
        "parentId" : null,
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "You want `changed` to be `True` here if *at least* one DB was created, not if *all* DBs in `non_existence_list` were created (and there has been at least one).",
        "createdAt" : "2019-07-10T05:38:29Z",
        "updatedAt" : "2019-07-17T12:39:30Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      },
      {
        "id" : "b36cb0f8-f59c-4308-817b-4ebf20e41ace",
        "parentId" : "ef90cf3c-9932-4f8f-869c-ba6af90fcfac",
        "authorId" : "ebb63526-11a8-4b90-b451-ad57997d3e0d",
        "body" : "fixed",
        "createdAt" : "2019-07-10T07:05:05Z",
        "updatedAt" : "2019-07-17T12:39:30Z",
        "lastEditedBy" : "ebb63526-11a8-4b90-b451-ad57997d3e0d",
        "tags" : [
        ]
      }
    ],
    "commit" : "91f5d2f334174d37a86760dafd409c06ce0b2d14",
    "line" : 238,
    "diffHunk" : "@@ -1,1 +412,416 @@        if non_existence_list:\n            try:\n                changed = db_create(cursor, non_existence_list, encoding, collation)\n            except Exception as e:\n                module.fail_json(msg=\"error creating database: %s\" % to_native(e),"
  },
  {
    "id" : "338b6f0d-f9eb-460b-a3ca-1083e9900926",
    "prId" : 58602,
    "prUrl" : "https://github.com/ansible/ansible/pull/58602#pullrequestreview-261635788",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c9cffc2b-3d8f-4510-90fe-10865023e6b7",
        "parentId" : null,
        "authorId" : "d2d80496-0795-4618-ba72-36ae6c5b52ef",
        "body" : "good",
        "createdAt" : "2019-07-15T05:33:09Z",
        "updatedAt" : "2019-07-17T12:39:30Z",
        "lastEditedBy" : "d2d80496-0795-4618-ba72-36ae6c5b52ef",
        "tags" : [
        ]
      }
    ],
    "commit" : "91f5d2f334174d37a86760dafd409c06ce0b2d14",
    "line" : 111,
    "diffHunk" : "@@ -1,1 +336,340 @@    if not db:\n        module.exit_json(changed=False, db=db, db_list=[])\n    db = [each_db.strip() for each_db in db]\n\n    encoding = module.params[\"encoding\"]"
  },
  {
    "id" : "659f70c5-9aa6-48b5-a7b3-f32f41495e79",
    "prId" : 58602,
    "prUrl" : "https://github.com/ansible/ansible/pull/58602#pullrequestreview-262281231",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dcfb682d-bedd-4e47-8d23-29fd04bc7e5e",
        "parentId" : null,
        "authorId" : "d2d80496-0795-4618-ba72-36ae6c5b52ef",
        "body" : "it's repeated at the and of each condition. Maybe we could use it one time after\r\n```suggestion\r\n        module.exit_json(changed=changed, db=db_name, db_list=db)\r\n```",
        "createdAt" : "2019-07-15T05:36:50Z",
        "updatedAt" : "2019-07-17T12:39:30Z",
        "lastEditedBy" : "d2d80496-0795-4618-ba72-36ae6c5b52ef",
        "tags" : [
        ]
      },
      {
        "id" : "9dfc8a9f-0e63-4751-b3ee-bcc832e35c4b",
        "parentId" : "dcfb682d-bedd-4e47-8d23-29fd04bc7e5e",
        "authorId" : "ebb63526-11a8-4b90-b451-ad57997d3e0d",
        "body" : "Actually `exit_json` is not same for all 4 state's. Its same for state=absent/present or state=dump/import.",
        "createdAt" : "2019-07-16T09:09:21Z",
        "updatedAt" : "2019-07-17T12:39:30Z",
        "lastEditedBy" : "ebb63526-11a8-4b90-b451-ad57997d3e0d",
        "tags" : [
        ]
      }
    ],
    "commit" : "91f5d2f334174d37a86760dafd409c06ce0b2d14",
    "line" : 231,
    "diffHunk" : "@@ -1,1 +405,409 @@        except Exception as e:\n            module.fail_json(msg=\"error deleting database: %s\" % to_native(e))\n        module.exit_json(changed=changed, db=db_name, db_list=db)\n    elif state == \"present\":\n        if module.check_mode:"
  },
  {
    "id" : "3a4c8f07-0b09-4179-9ee2-57500ff478cd",
    "prId" : 58602,
    "prUrl" : "https://github.com/ansible/ansible/pull/58602#pullrequestreview-262282472",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a17eb848-1546-4be4-9bad-c9543ec9bb9f",
        "parentId" : null,
        "authorId" : "d2d80496-0795-4618-ba72-36ae6c5b52ef",
        "body" : "looks like db and db_list are the same, doesn't it? If it does, I think one of them should be removed (probably db_list)",
        "createdAt" : "2019-07-15T05:44:26Z",
        "updatedAt" : "2019-07-17T12:39:30Z",
        "lastEditedBy" : "d2d80496-0795-4618-ba72-36ae6c5b52ef",
        "tags" : [
        ]
      },
      {
        "id" : "e217e831-f694-4678-b467-d2067e31f0ef",
        "parentId" : "a17eb848-1546-4be4-9bad-c9543ec9bb9f",
        "authorId" : "ebb63526-11a8-4b90-b451-ad57997d3e0d",
        "body" : "Their values are same, however, the `type` is different.\r\n\r\nI kept `db` and `db_list` since I didn't want to break existing playbooks of users which explicitly checks the content of `result.db` as [here](https://app.shippable.com/github/ansible/ansible/runs/132137/55/console) eventually breaking their playbook.\r\n```\r\n01:19 fatal: [testhost]: FAILED! => {\r\n01:19     \"assertion\": \"result.db =='data'\",\r\n01:19     \"changed\": false,\r\n01:19     \"evaluated_to\": false,\r\n01:19     \"msg\": \"Assertion failed\"\r\n01:19 }\r\n```\r\n\r\nI need your opinion on this to know if I should be keeping both the variables or should I just be returning list of databases\r\n```\r\n-        module.exit_json(changed=changed, db=db_name, db_list=db)\r\n+        module.exit_json(changed=changed, db=db)\r\n```",
        "createdAt" : "2019-07-15T10:54:36Z",
        "updatedAt" : "2019-07-17T12:39:30Z",
        "lastEditedBy" : "ebb63526-11a8-4b90-b451-ad57997d3e0d",
        "tags" : [
        ]
      },
      {
        "id" : "a4089967-d291-4af4-8f67-740cae2ae453",
        "parentId" : "a17eb848-1546-4be4-9bad-c9543ec9bb9f",
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "I think keeping both is probably best. Changing types of an existing return value, or removing one, will definitely break some people's playbooks.\r\n\r\nYou could deprecate the old return value and announce that in the porting guide; then the old return value can be dropped in 2.13. This is not optimal because there is no mechanism which tells people that the result they are using is deprecated, but at least people who read the porting guide and/or changelog will have four versions to adapt their playbooks.",
        "createdAt" : "2019-07-15T18:33:11Z",
        "updatedAt" : "2019-07-17T12:39:30Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      },
      {
        "id" : "5d78f45e-9d90-4697-8363-63c1d7263ade",
        "parentId" : "a17eb848-1546-4be4-9bad-c9543ec9bb9f",
        "authorId" : "d2d80496-0795-4618-ba72-36ae6c5b52ef",
        "body" : "@felixfontein , I thought that it was added by this PR, if it was there before, sure, it must be kept !\r\n@pratikgadiya12 , dont remove it, please! :) ",
        "createdAt" : "2019-07-15T19:24:32Z",
        "updatedAt" : "2019-07-17T12:39:30Z",
        "lastEditedBy" : "d2d80496-0795-4618-ba72-36ae6c5b52ef",
        "tags" : [
        ]
      },
      {
        "id" : "c32c1472-0edc-4887-9073-fe146e9025a7",
        "parentId" : "a17eb848-1546-4be4-9bad-c9543ec9bb9f",
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "@Andersson007 I interpreted @pratikgadiya12's statement this way. Now I also checked, it was there before, indeed. What's completely missing (and has been in the past) is documentation for the return values! @pratikgadiya12 can you add this? I guess `db` has been there all the time, and `db_list` will be `version_added: 2.9`.",
        "createdAt" : "2019-07-15T19:37:11Z",
        "updatedAt" : "2019-07-17T12:39:30Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      },
      {
        "id" : "5a77d22b-bb20-4914-9171-f2a9a25d1bbf",
        "parentId" : "a17eb848-1546-4be4-9bad-c9543ec9bb9f",
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "Ah, I just saw you already mentioned the return value docs :)",
        "createdAt" : "2019-07-15T20:09:37Z",
        "updatedAt" : "2019-07-17T12:39:30Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      },
      {
        "id" : "a72f1113-8df3-45a3-b44b-c34183d8bce8",
        "parentId" : "a17eb848-1546-4be4-9bad-c9543ec9bb9f",
        "authorId" : "ebb63526-11a8-4b90-b451-ad57997d3e0d",
        "body" : "Will keep both the return values and add the return value docs",
        "createdAt" : "2019-07-16T09:11:32Z",
        "updatedAt" : "2019-07-17T12:39:30Z",
        "lastEditedBy" : "ebb63526-11a8-4b90-b451-ad57997d3e0d",
        "tags" : [
        ]
      }
    ],
    "commit" : "91f5d2f334174d37a86760dafd409c06ce0b2d14",
    "line" : 226,
    "diffHunk" : "@@ -1,1 +400,404 @@    if state == \"absent\":\n        if module.check_mode:\n            module.exit_json(changed=bool(existence_list), db=db_name, db_list=db)\n        try:\n            changed = db_delete(cursor, existence_list)"
  },
  {
    "id" : "797dbe36-c4b4-4bd6-82b7-7ade96e62bae",
    "prId" : 58602,
    "prUrl" : "https://github.com/ansible/ansible/pull/58602#pullrequestreview-263603234",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f108a9dd-5ced-44dc-be65-06563745de8c",
        "parentId" : null,
        "authorId" : "c4144d31-065b-4748-92a1-c64f07e9be00",
        "body" : "Good point for handling the `_` char, but have you tested the `-` char ?\r\nI know some devs use it 🙄 in the db name, as long as they quote the db name.",
        "createdAt" : "2019-07-18T07:30:20Z",
        "updatedAt" : "2019-07-18T07:30:23Z",
        "lastEditedBy" : "c4144d31-065b-4748-92a1-c64f07e9be00",
        "tags" : [
        ]
      },
      {
        "id" : "aa5fde01-098c-4b32-8c69-34a580d46aba",
        "parentId" : "f108a9dd-5ced-44dc-be65-06563745de8c",
        "authorId" : "ebb63526-11a8-4b90-b451-ad57997d3e0d",
        "body" : "@bmalynovytch: Yes, it does work for `-` char as well.\r\n\r\n**Ansible-playbook**:\r\n```\r\n$ cat only_create.yml \r\n---\r\n- name: Sample\r\n  gather_facts: no\r\n  hosts: localhost\r\n  tasks:\r\n  - name: Create multiple databases\r\n    mysql_db:\r\n      name:\r\n        - \"abcd-pratik\"\r\n      state: present\r\n      login_host: 172.17.0.2\r\n      login_user: monty\r\n      login_password: pw\r\n    register: result\r\n  - debug:\r\n      msg: \"{{ result }}\"\r\n```\r\n\r\n**Ansible Run**:\r\n```\r\n$ ansible-playbook only_create.yml \r\n [WARNING]: No inventory was parsed, only implicit localhost is available\r\n\r\n [WARNING]: provided hosts list is empty, only localhost is available. Note that the implicit localhost does not match 'all'\r\n\r\n\r\nPLAY [Sample] *****************************************************************************************************************************************************************************************************\r\n\r\nTASK [Create multiple databases] **********************************************************************************************************************************************************************************\r\nchanged: [localhost]\r\n\r\nTASK [debug] ******************************************************************************************************************************************************************************************************\r\nok: [localhost] => {\r\n    \"msg\": {\r\n        \"changed\": true, \r\n        \"db\": \"abcd-pratik\", \r\n        \"db_list\": [\r\n            \"abcd-pratik\"\r\n        ], \r\n        \"failed\": false\r\n    }\r\n}\r\n\r\nPLAY RECAP ********************************************************************************************************************************************************************************************************\r\nlocalhost                  : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   \r\n```\r\n\r\nSimilarly tested it for `delete` operation as well.\r\n\r\n\r\n",
        "createdAt" : "2019-07-18T09:20:16Z",
        "updatedAt" : "2019-07-18T09:25:16Z",
        "lastEditedBy" : "ebb63526-11a8-4b90-b451-ad57997d3e0d",
        "tags" : [
        ]
      },
      {
        "id" : "1f42ca35-42ba-42a6-9360-ead1d7c0ae09",
        "parentId" : "f108a9dd-5ced-44dc-be65-06563745de8c",
        "authorId" : "c4144d31-065b-4748-92a1-c64f07e9be00",
        "body" : "Marvelous ! 👏 ",
        "createdAt" : "2019-07-18T11:56:57Z",
        "updatedAt" : "2019-07-18T11:56:57Z",
        "lastEditedBy" : "c4144d31-065b-4748-92a1-c64f07e9be00",
        "tags" : [
        ]
      }
    ],
    "commit" : "91f5d2f334174d37a86760dafd409c06ce0b2d14",
    "line" : 61,
    "diffHunk" : "@@ -1,1 +170,174 @@    res = 0\n    for each_db in db:\n        res += cursor.execute(\"SHOW DATABASES LIKE %s\", (each_db.replace(\"_\", r\"\\_\"),))\n    return res == len(db)\n"
  }
]