[
  {
    "id" : "f792ddd1-1585-43ec-8901-3371139c308e",
    "prId" : 45355,
    "prUrl" : "https://github.com/ansible/ansible/pull/45355#pullrequestreview-224462484",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a2204881-7893-4f79-aca7-dbba0f7094be",
        "parentId" : null,
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "Why not select both columns in one query (without the `LIMIT`) and fill `colA` and `colB` in module code? This will save one query.",
        "createdAt" : "2019-04-09T13:51:51Z",
        "updatedAt" : "2019-04-09T13:57:08Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      },
      {
        "id" : "1dc8a158-f402-49e9-a633-26de25e4c8a8",
        "parentId" : "a2204881-7893-4f79-aca7-dbba0f7094be",
        "authorId" : "c4144d31-065b-4748-92a1-c64f07e9be00",
        "body" : "It's a trick to get an ordered list of valid columns to use in the next queries.\r\nIt's a way of getting the right list without using tons of `if` conditions which may be error prone.",
        "createdAt" : "2019-04-09T14:33:17Z",
        "updatedAt" : "2019-04-09T14:33:17Z",
        "lastEditedBy" : "c4144d31-065b-4748-92a1-c64f07e9be00",
        "tags" : [
        ]
      },
      {
        "id" : "843b33d8-ae46-4aef-9014-0975dba580bb",
        "parentId" : "a2204881-7893-4f79-aca7-dbba0f7094be",
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "This should also work:\r\n```.py\r\n            cursor.execute(\"\"\"\r\n                SELECT COLUMN_NAME FROM information_schema.COLUMNS\r\n                WHERE TABLE_SCHEMA = 'mysql' AND TABLE_NAME = 'user' AND COLUMN_NAME IN ('Password', 'authentication_string')\r\n            \"\"\")\r\n            cols = sorted([row[0] for row in cursor.fetchall()])\r\n            colA, colB = cols[0], cols[-1]\r\n```\r\n(no idea if `fetchall()` exists and works like this, but I guess there will be some method which fetches more than one row?)",
        "createdAt" : "2019-04-09T14:41:15Z",
        "updatedAt" : "2019-04-09T14:41:15Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      },
      {
        "id" : "9c261e0b-f42d-4194-bac3-fa292cd53ecf",
        "parentId" : "a2204881-7893-4f79-aca7-dbba0f7094be",
        "authorId" : "c4144d31-065b-4748-92a1-c64f07e9be00",
        "body" : "Yes, probably",
        "createdAt" : "2019-04-09T14:55:00Z",
        "updatedAt" : "2019-04-09T14:55:01Z",
        "lastEditedBy" : "c4144d31-065b-4748-92a1-c64f07e9be00",
        "tags" : [
        ]
      },
      {
        "id" : "3574e482-1875-4a09-9ba6-6711ee5fa2fc",
        "parentId" : "a2204881-7893-4f79-aca7-dbba0f7094be",
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "You can still change that later (once this is merged) if you want.",
        "createdAt" : "2019-04-09T14:58:28Z",
        "updatedAt" : "2019-04-09T14:58:28Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      }
    ],
    "commit" : "d5740903b3e003698d02383dc62766a6c308bd9c",
    "line" : 89,
    "diffHunk" : "@@ -1,1 +340,344 @@                ORDER BY COLUMN_NAME ASC  LIMIT 1\n            \"\"\")\n            colB = cursor.fetchone()\n\n            # Select hash from either Password or authentication_string, depending which one exists and/or is filled"
  },
  {
    "id" : "7e1117e0-f8bd-4d14-b0a2-304d194ea058",
    "prId" : 66801,
    "prUrl" : "https://github.com/ansible/ansible/pull/66801#pullrequestreview-351493452",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3ba3c93c-71c4-45af-99dc-9157700345d7",
        "parentId" : null,
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "Does the order matter? If yes, it's probably better to use\r\n```suggestion\r\n    return '/'.join(sorted(priv_list))\r\n```",
        "createdAt" : "2020-01-31T12:27:46Z",
        "updatedAt" : "2020-01-31T12:27:46Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      },
      {
        "id" : "984e886c-18ad-48b6-889a-652a04daf4e6",
        "parentId" : "3ba3c93c-71c4-45af-99dc-9157700345d7",
        "authorId" : "d2d80496-0795-4618-ba72-36ae6c5b52ef",
        "body" : "I think the order doesnâ€™t matter",
        "createdAt" : "2020-01-31T13:09:46Z",
        "updatedAt" : "2020-01-31T13:09:47Z",
        "lastEditedBy" : "d2d80496-0795-4618-ba72-36ae6c5b52ef",
        "tags" : [
        ]
      }
    ],
    "commit" : "17e26259d843ecb025e2dc21c2ab23ca41357951",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +672,676 @@    priv_list = ['%s:%s' % (key, val) for key, val in iteritems(priv)]\n\n    return '/'.join(priv_list)\n\n# ==========================================="
  }
]