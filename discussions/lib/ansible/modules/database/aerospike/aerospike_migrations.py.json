[
  {
    "id" : "ccdb6efb-4625-4bcf-a97b-d11fd2f13491",
    "prId" : 49138,
    "prUrl" : "https://github.com/ansible/ansible/pull/49138#pullrequestreview-185350134",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7be99b37-5125-4a24-878e-d5abd4e8dce5",
        "parentId" : null,
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "The contents in here are what you should document in `RETURN` above.",
        "createdAt" : "2018-12-14T21:36:24Z",
        "updatedAt" : "2019-01-01T20:46:33Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      },
      {
        "id" : "77f66fe1-e430-4156-b2ea-8d187d4e14a8",
        "parentId" : "7be99b37-5125-4a24-878e-d5abd4e8dce5",
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "(except `changed`, that doesn't need documentation)",
        "createdAt" : "2018-12-14T21:36:43Z",
        "updatedAt" : "2019-01-01T20:46:33Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      },
      {
        "id" : "c848bdd6-b36f-40b9-8154-ec6124c1f9a6",
        "parentId" : "7be99b37-5125-4a24-878e-d5abd4e8dce5",
        "authorId" : "60e6c274-f982-42c5-94d1-d4785344eff8",
        "body" : "if it returns a reason why it failed, should it go here? i assume fail_json should be sufficient enough..",
        "createdAt" : "2018-12-14T23:24:17Z",
        "updatedAt" : "2019-01-01T20:46:33Z",
        "lastEditedBy" : "60e6c274-f982-42c5-94d1-d4785344eff8",
        "tags" : [
        ]
      },
      {
        "id" : "b25d8509-72fd-4f8f-b1e7-94e234830fae",
        "parentId" : "7be99b37-5125-4a24-878e-d5abd4e8dce5",
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "Only put stuff here which you return in *every* run. `original_message` should not be there (you don't use that at all). `message` seems to be something you (almost) always return, so you can keep it here; but then you also have to document it in `RETURN` above.\r\n\r\nThings used only for `fail_json()` shouldn't be here.",
        "createdAt" : "2018-12-15T10:19:52Z",
        "updatedAt" : "2019-01-01T20:46:33Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      }
    ],
    "commit" : "78badbe18dd71619afe72e8c08d7ac5933796c32",
    "line" : 205,
    "diffHunk" : "@@ -1,1 +203,207 @@\n    result = dict(\n        changed=False,\n    )\n"
  },
  {
    "id" : "2ded920d-42b5-41db-9a3b-7b2117d16ae5",
    "prId" : 49138,
    "prUrl" : "https://github.com/ansible/ansible/pull/49138#pullrequestreview-186772472",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "81953b6e-53f1-4ae6-89c6-d5fa639af96e",
        "parentId" : null,
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "Why don't you put the contents of `run_module()` into `main()`? Is there an advantage of having this additional indirection?",
        "createdAt" : "2018-12-15T10:57:24Z",
        "updatedAt" : "2019-01-01T20:46:33Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      },
      {
        "id" : "d6f5b305-5371-4c42-a384-ff899476eeba",
        "parentId" : "81953b6e-53f1-4ae6-89c6-d5fa639af96e",
        "authorId" : "60e6c274-f982-42c5-94d1-d4785344eff8",
        "body" : "Just was following the template, wasn't sure if there was a dependency on that method being there. Think I should move it?",
        "createdAt" : "2018-12-19T08:08:21Z",
        "updatedAt" : "2019-01-01T20:46:33Z",
        "lastEditedBy" : "60e6c274-f982-42c5-94d1-d4785344eff8",
        "tags" : [
        ]
      },
      {
        "id" : "54708ed1-abcf-49c2-9209-8e9d381aae02",
        "parentId" : "81953b6e-53f1-4ae6-89c6-d5fa639af96e",
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "Ah, I didn't knew there was a template :) Well, in that case, keep it. It doesn't really hurt.",
        "createdAt" : "2018-12-19T22:12:11Z",
        "updatedAt" : "2019-01-01T20:46:33Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      }
    ],
    "commit" : "78badbe18dd71619afe72e8c08d7ac5933796c32",
    "line" : 521,
    "diffHunk" : "@@ -1,1 +519,523 @@def main():\n    \"\"\"main method for ansible module\"\"\"\n    run_module()\n\n"
  },
  {
    "id" : "9f9e33c2-fe42-41e4-b952-9a1684837341",
    "prId" : 49138,
    "prUrl" : "https://github.com/ansible/ansible/pull/49138#pullrequestreview-187971507",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6c69ca70-bb72-4f4c-a394-0f9917a27e93",
        "parentId" : null,
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "```suggestion\r\n            msg=\"A required Python library was not found. This module\" +\r\n```\r\nThat's more precise :) Also, you can assume that the `time` and `re` modules are installed; if not, a lot of other modules will also break and the user has a really broken Python installation, which should happen so seldomly that an extra error message for that should be unnecessary.",
        "createdAt" : "2018-12-26T22:48:57Z",
        "updatedAt" : "2019-01-01T20:46:33Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      }
    ],
    "commit" : "78badbe18dd71619afe72e8c08d7ac5933796c32",
    "line" : 214,
    "diffHunk" : "@@ -1,1 +212,216 @@    if not LIB_FOUND:\n        module.fail_json(\n            msg=\"A required module was not found. This playbook\" +\n            \" requires the 'aerospike' 'time' and 're' modules. \" +\n            \"Please run 'pip install aerospike'. The other modules\" +"
  },
  {
    "id" : "eb843fb8-df95-4186-916e-56c7c0581ed3",
    "prId" : 49138,
    "prUrl" : "https://github.com/ansible/ansible/pull/49138#pullrequestreview-188122903",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b8be4416-c3e1-4f20-bab7-7ebbb6c61a56",
        "parentId" : null,
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "Sorry about `maxsplit`, I'm mostly using Python 3 nowadays and forgot it wasn't a keyword in Python 2. Anyway, `metric.split(\"=\", 1)` will work fine in both Python 2 and 3, so it's good!",
        "createdAt" : "2018-12-27T08:00:37Z",
        "updatedAt" : "2019-01-01T20:46:33Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      },
      {
        "id" : "0441f00c-6db3-4432-91fc-cbf3806731ec",
        "parentId" : "b8be4416-c3e1-4f20-bab7-7ebbb6c61a56",
        "authorId" : "60e6c274-f982-42c5-94d1-d4785344eff8",
        "body" : "great :)",
        "createdAt" : "2018-12-27T16:05:03Z",
        "updatedAt" : "2019-01-01T20:46:33Z",
        "lastEditedBy" : "60e6c274-f982-42c5-94d1-d4785344eff8",
        "tags" : [
        ]
      }
    ],
    "commit" : "78badbe18dd71619afe72e8c08d7ac5933796c32",
    "line" : 291,
    "diffHunk" : "@@ -1,1 +289,293 @@        if '=' in data:\n            retval = dict(\n                metric.split(\"=\", 1) for metric in data_arr\n            )\n        else:"
  }
]