[
  {
    "id" : "260a2ef6-ccb1-405a-b254-22fd2acf0927",
    "prId" : 52077,
    "prUrl" : "https://github.com/ansible/ansible/pull/52077#pullrequestreview-220539224",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7aab72e5-93ea-4d68-8074-5a8ad3148dd9",
        "parentId" : null,
        "authorId" : "726be1ae-9996-4695-b411-91b13f824deb",
        "body" : "You can use [`ensure_libs`](https://github.com/ansible/ansible/blob/devel/lib/ansible/module_utils/postgres.py#L42).",
        "createdAt" : "2019-03-07T12:53:31Z",
        "updatedAt" : "2019-03-29T15:37:59Z",
        "lastEditedBy" : "726be1ae-9996-4695-b411-91b13f824deb",
        "tags" : [
        ]
      },
      {
        "id" : "a40a48eb-7a97-4136-a2b1-fc6c43f638e4",
        "parentId" : "7aab72e5-93ea-4d68-8074-5a8ad3148dd9",
        "authorId" : "d2d80496-0795-4618-ba72-36ae6c5b52ef",
        "body" : "@dagwieers , could you give us your opinion ?",
        "createdAt" : "2019-03-07T12:59:49Z",
        "updatedAt" : "2019-03-29T15:37:59Z",
        "lastEditedBy" : "d2d80496-0795-4618-ba72-36ae6c5b52ef",
        "tags" : [
        ]
      },
      {
        "id" : "e867d1ba-9a91-4e3d-8ab4-a096cb1f9c4b",
        "parentId" : "7aab72e5-93ea-4d68-8074-5a8ad3148dd9",
        "authorId" : "d2d80496-0795-4618-ba72-36ae6c5b52ef",
        "body" : "I need opinions of experienced contributors, @gundalow  , maybe you know, is this common way to check libs now?",
        "createdAt" : "2019-03-11T07:41:03Z",
        "updatedAt" : "2019-03-29T15:37:59Z",
        "lastEditedBy" : "d2d80496-0795-4618-ba72-36ae6c5b52ef",
        "tags" : [
        ]
      },
      {
        "id" : "90f403e4-36d5-4e8a-a827-2cd0bd22e6e2",
        "parentId" : "7aab72e5-93ea-4d68-8074-5a8ad3148dd9",
        "authorId" : "d7d8721c-7ad0-4834-9a3d-b53ca8656789",
        "body" : "A follow up PR that updates all postgres modules to use https://github.com/ansible/ansible/blob/devel/lib/ansible/module_utils/postgres.py#L42 would be good. No need to block on this.\r\n\r\nAlso that function should be updated to use `module.fail_json(msg=missing_required_lib(\"psycopg2\"))`",
        "createdAt" : "2019-03-29T13:34:41Z",
        "updatedAt" : "2019-03-29T15:37:59Z",
        "lastEditedBy" : "d7d8721c-7ad0-4834-9a3d-b53ca8656789",
        "tags" : [
        ]
      }
    ],
    "commit" : "c670c424887ebeaa9be7d87e242ab53cb92b1b71",
    "line" : 560,
    "diffHunk" : "@@ -1,1 +558,562 @@              if k in params_map and v != \"\" and v is not None)\n\n    if not HAS_PSYCOPG2:\n        module.fail_json(msg=missing_required_lib(\"psycopg2\"))\n"
  },
  {
    "id" : "f4458eda-304a-4c5c-ace9-331bb3a63934",
    "prId" : 52077,
    "prUrl" : "https://github.com/ansible/ansible/pull/52077#pullrequestreview-213779039",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6aad1268-edea-457b-bd67-cabda74ccd7a",
        "parentId" : null,
        "authorId" : "726be1ae-9996-4695-b411-91b13f824deb",
        "body" : "And remove this afterwards.",
        "createdAt" : "2019-03-07T12:54:01Z",
        "updatedAt" : "2019-03-29T15:37:59Z",
        "lastEditedBy" : "726be1ae-9996-4695-b411-91b13f824deb",
        "tags" : [
        ]
      },
      {
        "id" : "7ff9b023-f5e8-482b-bbdc-797e502b24f7",
        "parentId" : "6aad1268-edea-457b-bd67-cabda74ccd7a",
        "authorId" : "d2d80496-0795-4618-ba72-36ae6c5b52ef",
        "body" : "I can't do it without the approval by older brothers. Thank you for the comment",
        "createdAt" : "2019-03-13T06:38:12Z",
        "updatedAt" : "2019-03-29T15:37:59Z",
        "lastEditedBy" : "d2d80496-0795-4618-ba72-36ae6c5b52ef",
        "tags" : [
        ]
      }
    ],
    "commit" : "c670c424887ebeaa9be7d87e242ab53cb92b1b71",
    "line" : 568,
    "diffHunk" : "@@ -1,1 +566,570 @@        kw[\"host\"] = module.params[\"login_unix_socket\"]\n\n    if psycopg2.__version__ < '2.4.3' and sslrootcert is not None:\n        module.fail_json(msg='psycopg2 must be at least 2.4.3 in order to user the ca_cert parameter')\n"
  },
  {
    "id" : "14b70400-8f30-4774-bf64-65b13a712f5a",
    "prId" : 52077,
    "prUrl" : "https://github.com/ansible/ansible/pull/52077#pullrequestreview-218453523",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a6941fcc-c00d-4ab5-b013-69e92a42d9a6",
        "parentId" : null,
        "authorId" : "97b95349-6b3e-48ae-911d-d8af2377af05",
        "body" : "In addition to @Glandos comment, I think you can use it like so (or see [here](https://github.com/Glandos/ansible/blob/f4204aa69c7e3429b83b3d5d7d5f7ee07f29407e/lib/ansible/modules/database/postgresql/postgresql_db.py#L451)):\r\n```python\r\nimport ansible.module_utils.postgres as pgutils\r\n...\r\n    try:\r\n        pgutils.ensure_libs(sslrootcert=module.params.get('ssl_rootcert'))\r\n        db_connection = psycopg2.connect(**kw)\r\n...\r\n    except pgutils.LibraryError as e:\r\n         module.fail_json(msg=\"unable to connect to database: {0}\".format(to_native(e)), exception=traceback.format_exc())\r\n    except TypeError as e:\r\n        if 'sslrootcert' in e.args[0]:\r\n            module.fail_json(msg='Postgresql server must be at least version 8.4 to support sslrootcert',\r\n                exception=traceback.format_exc())\r\n...\r\n```\r\n\r\nYou could also add `exception=traceback.format_exc()`to your exceptions like [here](https://github.com/Glandos/ansible/blob/f4204aa69c7e3429b83b3d5d7d5f7ee07f29407e/lib/ansible/modules/database/postgresql/postgresql_db.py#L462)",
        "createdAt" : "2019-03-21T15:34:19Z",
        "updatedAt" : "2019-03-29T15:37:59Z",
        "lastEditedBy" : "97b95349-6b3e-48ae-911d-d8af2377af05",
        "tags" : [
        ]
      },
      {
        "id" : "668036fd-c424-4c5a-9a09-3adfc757d4f0",
        "parentId" : "a6941fcc-c00d-4ab5-b013-69e92a42d9a6",
        "authorId" : "97b95349-6b3e-48ae-911d-d8af2377af05",
        "body" : "and then remove the parts Glandos point you.",
        "createdAt" : "2019-03-21T15:35:20Z",
        "updatedAt" : "2019-03-29T15:37:59Z",
        "lastEditedBy" : "97b95349-6b3e-48ae-911d-d8af2377af05",
        "tags" : [
        ]
      },
      {
        "id" : "0d78f485-92d9-4e53-bb8c-b8b9fed5d2ee",
        "parentId" : "a6941fcc-c00d-4ab5-b013-69e92a42d9a6",
        "authorId" : "d2d80496-0795-4618-ba72-36ae6c5b52ef",
        "body" : "@tcraxs , thank you for this note!\r\nI tried to change it.\r\nHowever, look at lines 134, 422, 451 [here](https://github.com/Glandos/ansible/blob/f4204aa69c7e3429b83b3d5d7d5f7ee07f29407e/lib/ansible/modules/database/postgresql/postgresql_db.py#L451) (your first link)\r\n\r\n1. postgresql_db.py imports psycopg2 in line 134\r\n2. anyway, it checks that psycopg2 was successfully imported in line 422\r\n3. ensure_libs checks again that psycopg2 was imported and its version in addition.\r\n\r\nAnyway, we must import psycopg2 in the module file and if psycopg2.version < '2.4.3' and sslrootcert is not None: is a quite simple condition to import and invoke a special function ensure_libs to avoid it.\r\n\r\nTo be short, I suggest to leave the current version of this module related with psycopg2 and its version as it is because it's more efficient and simplier.",
        "createdAt" : "2019-03-23T09:22:41Z",
        "updatedAt" : "2019-03-29T15:37:59Z",
        "lastEditedBy" : "d2d80496-0795-4618-ba72-36ae6c5b52ef",
        "tags" : [
        ]
      },
      {
        "id" : "d1fb2ec2-b683-4852-98cf-02ee02745909",
        "parentId" : "a6941fcc-c00d-4ab5-b013-69e92a42d9a6",
        "authorId" : "97b95349-6b3e-48ae-911d-d8af2377af05",
        "body" : "I'm totally fine with your explanation and it was just a starting point by my side. And you are right, that the usage in your module in this case is simpler, so no change needed.",
        "createdAt" : "2019-03-25T16:47:13Z",
        "updatedAt" : "2019-03-29T15:37:59Z",
        "lastEditedBy" : "97b95349-6b3e-48ae-911d-d8af2377af05",
        "tags" : [
        ]
      }
    ],
    "commit" : "c670c424887ebeaa9be7d87e242ab53cb92b1b71",
    "line" : 572,
    "diffHunk" : "@@ -1,1 +570,574 @@\n    try:\n        db_connection = psycopg2.connect(**kw)\n        cursor = db_connection.cursor(cursor_factory=psycopg2.extras.DictCursor)\n    except TypeError as e:"
  },
  {
    "id" : "dfa20576-691f-4d95-b774-f660a7878e4d",
    "prId" : 57391,
    "prUrl" : "https://github.com/ansible/ansible/pull/57391#pullrequestreview-245883854",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a0290773-3c49-4bce-922b-d3bc11031ce9",
        "parentId" : null,
        "authorId" : "ff63c3eb-7034-4bd1-a5dc-9d0674949d07",
        "body" : "Not a massive change but I'd suggest doing the split like this\r\n\r\n```suggestion\r\n            schema, tblname = self.name.split('.', 2)\r\n```",
        "createdAt" : "2019-06-05T08:41:28Z",
        "updatedAt" : "2019-06-05T08:44:50Z",
        "lastEditedBy" : "ff63c3eb-7034-4bd1-a5dc-9d0674949d07",
        "tags" : [
        ]
      },
      {
        "id" : "12d46c2e-4c7b-4594-afcc-36772657f1c5",
        "parentId" : "a0290773-3c49-4bce-922b-d3bc11031ce9",
        "authorId" : "d2d80496-0795-4618-ba72-36ae6c5b52ef",
        "body" : "It can contain the db (will be with 2 dots) like\r\n```\r\n>>> table = 'db.schema.tblname'\r\n>>> s, t = table.split('.', 2)\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\nValueError: too many values to unpack (expected 2)\r\n```",
        "createdAt" : "2019-06-05T08:52:43Z",
        "updatedAt" : "2019-06-05T08:55:12Z",
        "lastEditedBy" : "d2d80496-0795-4618-ba72-36ae6c5b52ef",
        "tags" : [
        ]
      },
      {
        "id" : "e8fa2c3d-a346-450c-8369-4e11ea0dda6e",
        "parentId" : "a0290773-3c49-4bce-922b-d3bc11031ce9",
        "authorId" : "ff63c3eb-7034-4bd1-a5dc-9d0674949d07",
        "body" : "Ah, fair enough.",
        "createdAt" : "2019-06-05T08:59:42Z",
        "updatedAt" : "2019-06-05T08:59:42Z",
        "lastEditedBy" : "ff63c3eb-7034-4bd1-a5dc-9d0674949d07",
        "tags" : [
        ]
      }
    ],
    "commit" : "fd9b839b2bcd66a4ffde4e487016d034a5e696ae",
    "line" : 41,
    "diffHunk" : "@@ -1,1 +267,271 @@        \"\"\"Check table exists and refresh info\"\"\"\n        if \".\" in self.name:\n            schema = self.name.split('.')[-2]\n            tblname = self.name.split('.')[-1]\n        else:"
  }
]