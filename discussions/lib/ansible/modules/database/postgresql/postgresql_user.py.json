[
  {
    "id" : "9c481e42-c96b-40c5-9c67-05f26849d112",
    "prId" : 23488,
    "prUrl" : "https://github.com/ansible/ansible/pull/23488#pullrequestreview-32078511",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "57af87bc-44ce-4b79-8c0b-ac1847260354",
        "parentId" : null,
        "authorId" : "d4c7fda6-9311-4eb9-91ca-d3f1cbccd288",
        "body" : "`encrypted` name is used for a variable and a module parameter but the variable and the module parameter don't have the same type, that's error-prone.\r\n\r\nAnother possible fix would be to use a boolean for [encrypted](https://github.com/acasademont/ansible/blob/751e8edcc0a883a218617dc3b85395ab98c8bafe/lib/ansible/modules/database/postgresql/postgresql_user.py#L679) variable (this would require to update the way the `WITH` clause is built in `add_user` and `alter_user` methods).",
        "createdAt" : "2017-04-11T11:04:45Z",
        "updatedAt" : "2017-04-11T11:24:02Z",
        "lastEditedBy" : "d4c7fda6-9311-4eb9-91ca-d3f1cbccd288",
        "tags" : [
        ]
      },
      {
        "id" : "c89cd0c8-a6e1-4a49-b951-664b905f4cc3",
        "parentId" : "57af87bc-44ce-4b79-8c0b-ac1847260354",
        "authorId" : "299d3f8c-1e9f-4860-9f0a-c01769e43d21",
        "body" : "@pilou- totally agree, I don't really like it, but I didn't wanna further complicate the PR, happy to change it though",
        "createdAt" : "2017-04-11T11:26:15Z",
        "updatedAt" : "2017-04-11T11:26:15Z",
        "lastEditedBy" : "299d3f8c-1e9f-4860-9f0a-c01769e43d21",
        "tags" : [
        ]
      }
    ],
    "commit" : "751e8edcc0a883a218617dc3b85395ab98c8bafe",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +294,298 @@        if password is not None:\n            if encrypted == 'ENCRYPTED':\n                if password.startswith('md5'):\n                    if password != current_role_attrs['rolpassword']:\n                        pwchanging = True"
  },
  {
    "id" : "b8cdcc6c-be7e-454c-9494-c93350685a7a",
    "prId" : 23862,
    "prUrl" : "https://github.com/ansible/ansible/pull/23862#pullrequestreview-34035937",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d1e3730a-146f-4da1-b0a0-84b3bcf19257",
        "parentId" : null,
        "authorId" : "c9b2af00-2c8d-4a67-9cb5-7cbedac7e233",
        "body" : "So , would it work for all psycopg2 version ?",
        "createdAt" : "2017-04-21T14:06:30Z",
        "updatedAt" : "2017-06-06T21:15:42Z",
        "lastEditedBy" : "c9b2af00-2c8d-4a67-9cb5-7cbedac7e233",
        "tags" : [
        ]
      },
      {
        "id" : "77920068-6b82-4116-8085-4fe216560c18",
        "parentId" : "d1e3730a-146f-4da1-b0a0-84b3bcf19257",
        "authorId" : "d4c7fda6-9311-4eb9-91ca-d3f1cbccd288",
        "body" : "`psycopg2.extras.DictRow` was already here in [1.99.12](https://github.com/psycopg/psycopg2/blob/1_99_12/lib/extras.py#L61) (which was released in march 2005).",
        "createdAt" : "2017-04-21T14:22:27Z",
        "updatedAt" : "2017-06-06T21:15:42Z",
        "lastEditedBy" : "d4c7fda6-9311-4eb9-91ca-d3f1cbccd288",
        "tags" : [
        ]
      }
    ],
    "commit" : "7c93c139dd3b243f334054b0c6d819fe66843a3b",
    "line" : 114,
    "diffHunk" : "@@ -1,1 +404,408 @@\n        # Detect any differences between current_ and new_role_attrs.\n        changed = current_role_attrs != new_role_attrs\n\n    return changed"
  },
  {
    "id" : "62044cba-f461-4bc7-978c-ccdffa881621",
    "prId" : 36931,
    "prUrl" : "https://github.com/ansible/ansible/pull/36931#pullrequestreview-100691849",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3b63574e-8f34-47c1-861f-2e87ecb62f46",
        "parentId" : null,
        "authorId" : "96aeecbb-c275-402c-b904-a795c82efb48",
        "body" : "Add a note about changed behaviour [here](https://github.com/ansible/ansible/blob/devel/CHANGELOG.md#minor-changes)",
        "createdAt" : "2018-03-02T01:55:06Z",
        "updatedAt" : "2018-05-19T16:15:58Z",
        "lastEditedBy" : "96aeecbb-c275-402c-b904-a795c82efb48",
        "tags" : [
        ]
      },
      {
        "id" : "30b489d2-44a2-4090-a328-968c59121665",
        "parentId" : "3b63574e-8f34-47c1-861f-2e87ecb62f46",
        "authorId" : "bb5f3442-a604-42a4-a77a-2008548cc43d",
        "body" : "Will do.",
        "createdAt" : "2018-03-02T07:25:40Z",
        "updatedAt" : "2018-05-19T16:15:58Z",
        "lastEditedBy" : "bb5f3442-a604-42a4-a77a-2008548cc43d",
        "tags" : [
        ]
      }
    ],
    "commit" : "f89bdfb60421e85fc4d31d0c1e6de8a1df463b2e",
    "line" : 101,
    "diffHunk" : "@@ -1,1 +98,102 @@        password is hashed when C(encrypted) is set.\n      - \"Note: Postgresql 10 and newer doesn't support unhashed passwords.\"\n      - Previous to Ansible 2.6, this was C(no) by default.\n    default: 'yes'\n    type: bool"
  },
  {
    "id" : "bf2b22c2-3c39-43fa-9192-2fc7036288ae",
    "prId" : 36931,
    "prUrl" : "https://github.com/ansible/ansible/pull/36931#pullrequestreview-100693385",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "97e47b74-ae4c-4de1-8709-7a9d0af030db",
        "parentId" : null,
        "authorId" : "96aeecbb-c275-402c-b904-a795c82efb48",
        "body" : "I don't see any check which set encrypted for PostgreSQL 10 and above. ",
        "createdAt" : "2018-03-02T01:57:23Z",
        "updatedAt" : "2018-05-19T16:15:58Z",
        "lastEditedBy" : "96aeecbb-c275-402c-b904-a795c82efb48",
        "tags" : [
        ]
      },
      {
        "id" : "1331bce3-c9ab-4a4c-940f-16b1fa9ae9c7",
        "parentId" : "97e47b74-ae4c-4de1-8709-7a9d0af030db",
        "authorId" : "bb5f3442-a604-42a4-a77a-2008548cc43d",
        "body" : "Sorry for not being obvious in the PR explanation/git commit message, but I didn't do that, I made it the default and here is the reasoning from the PR explanation:\r\n>Starting with Postgres 10 UNENCRYPTED passwords are removed and because of that this module fails with the default encrypted=no. Also encrypted passwords are supported since version 7.2\r\n(https://www.postgresql.org/docs/7.2/static/sql-createuser.html) which went EOL in 2007 and since 7.3 they are the default. Because of this it makes a lot more sense to make encrypted=yes the default. This won't break backward compatibility, the module would just update the user's password in the DB in the hashed format and everything else will work like before.\r\n\r\nI was thinking to make it check for the version, but because of what I wrote above and because this change won't affect the users in any way except the module would report once as changed to update the password in the DB in a hashed form, nothing more, everything else would work the same. The other reason why I think encrypted should be the default is because it would make the whole `encrypted` parameter complicated without a reason (`no` before 10, `yes` after). Also because storing passwords in plain text format is not a recommended way of doing it anyway. All Postgres versions from 7.3 store user passwords as hashed and the module should follow that practice as well.\r\n\r\nOnly users that could have issues are users of versions <7.2, but do we really need to support extremely old Postgres versions which are EOL for more than 12 years now.",
        "createdAt" : "2018-03-02T07:36:17Z",
        "updatedAt" : "2018-05-19T16:15:58Z",
        "lastEditedBy" : "bb5f3442-a604-42a4-a77a-2008548cc43d",
        "tags" : [
        ]
      }
    ],
    "commit" : "f89bdfb60421e85fc4d31d0c1e6de8a1df463b2e",
    "line" : 226,
    "diffHunk" : "@@ -1,1 +738,742 @@            fail_on_user=dict(type='bool', default='yes'),\n            role_attr_flags=dict(default=''),\n            encrypted=dict(type='bool', default='yes'),\n            no_password_changes=dict(type='bool', default='no'),\n            expires=dict(default=None),"
  }
]