[
  {
    "id" : "8e3cbfe2-2c23-4a44-b942-fc6f31b93157",
    "prId" : 51875,
    "prUrl" : "https://github.com/ansible/ansible/pull/51875#pullrequestreview-204562834",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "69149a61-d97b-40ad-bd04-6353377a460a",
        "parentId" : null,
        "authorId" : "7268595c-1eb4-4b5f-9277-90f183130a4b",
        "body" : "We prefer to set values by absolute values (i.e. standard units).\r\nBecause that is easier to work with. Not sure if we want to do this here ?",
        "createdAt" : "2019-02-12T07:28:14Z",
        "updatedAt" : "2019-03-18T10:38:23Z",
        "lastEditedBy" : "7268595c-1eb4-4b5f-9277-90f183130a4b",
        "tags" : [
        ]
      },
      {
        "id" : "1ba2a227-c0d9-4e92-ae34-e32f4e0560b9",
        "parentId" : "69149a61-d97b-40ad-bd04-6353377a460a",
        "authorId" : "bb5f3442-a604-42a4-a77a-2008548cc43d",
        "body" : "In Postgres almost all integer parameters support units and they are almost always used. I don't ever remember seeing that anyone writes this in bytes, mostly it's a lot harder to read.",
        "createdAt" : "2019-02-19T11:20:28Z",
        "updatedAt" : "2019-03-18T10:38:23Z",
        "lastEditedBy" : "bb5f3442-a604-42a4-a77a-2008548cc43d",
        "tags" : [
        ]
      }
    ],
    "commit" : "85687ae3e19073816e85f42d886303b47294b698",
    "line" : 140,
    "diffHunk" : "@@ -1,1 +138,142 @@  postgresql_set:\n    name: work_mem\n    value: 32mb\n    register: set\n"
  },
  {
    "id" : "9cdf5388-7e07-4df4-b78a-86ac494f3bb7",
    "prId" : 51875,
    "prUrl" : "https://github.com/ansible/ansible/pull/51875#pullrequestreview-213337918",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "be9db431-caa4-4b6b-aefa-26bb7e8a5ec4",
        "parentId" : null,
        "authorId" : "7268595c-1eb4-4b5f-9277-90f183130a4b",
        "body" : "Values we return are in bytes.",
        "createdAt" : "2019-02-12T07:28:30Z",
        "updatedAt" : "2019-03-18T10:38:23Z",
        "lastEditedBy" : "7268595c-1eb4-4b5f-9277-90f183130a4b",
        "tags" : [
        ]
      },
      {
        "id" : "022581f0-bb3c-44db-a76e-f79d07d4c894",
        "parentId" : "be9db431-caa4-4b6b-aefa-26bb7e8a5ec4",
        "authorId" : "d2d80496-0795-4618-ba72-36ae6c5b52ef",
        "body" : "Added 'value' return value for this",
        "createdAt" : "2019-03-12T11:44:45Z",
        "updatedAt" : "2019-03-18T10:38:23Z",
        "lastEditedBy" : "d2d80496-0795-4618-ba72-36ae6c5b52ef",
        "tags" : [
        ]
      }
    ],
    "commit" : "85687ae3e19073816e85f42d886303b47294b698",
    "line" : 176,
    "diffHunk" : "@@ -1,1 +174,178 @@  returned: always\n  type: str\n  sample: '4MB'\nvalue_pretty:\n  description: Information about current state of the parameter."
  },
  {
    "id" : "731681cf-c8e5-4e3f-baa9-795ce9be7074",
    "prId" : 51875,
    "prUrl" : "https://github.com/ansible/ansible/pull/51875#pullrequestreview-204562834",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "277ac7d1-83c9-41b9-ad5d-fb264582409a",
        "parentId" : null,
        "authorId" : "7268595c-1eb4-4b5f-9277-90f183130a4b",
        "body" : "Values we return are in bytes.",
        "createdAt" : "2019-02-12T07:28:39Z",
        "updatedAt" : "2019-03-18T10:38:23Z",
        "lastEditedBy" : "7268595c-1eb4-4b5f-9277-90f183130a4b",
        "tags" : [
        ]
      },
      {
        "id" : "72384edf-a217-434e-b934-efc5d1ba2da8",
        "parentId" : "277ac7d1-83c9-41b9-ad5d-fb264582409a",
        "authorId" : "d2d80496-0795-4618-ba72-36ae6c5b52ef",
        "body" : "@dagwieers I'm afraid the implementation of this suggestion makes the code very complex because a parameter can have a value like in following output from PostgreSQL system view pg_settings:\r\n```\r\n                name                 |                setting                 | unit \r\n-------------------------------------+----------------------------------------+------\r\n allow_system_table_mods             | off                                    | \r\n application_name                    | psql                                   | \r\n archive_command                     | (disabled)                             | \r\n archive_mode                        | off                                    | \r\n archive_timeout                     | 0                                      | s\r\n array_nulls                         | on                                     | \r\n authentication_timeout              | 60                                     | s\r\n autovacuum                          | on                                     | \r\n autovacuum_analyze_scale_factor     | 0.1                                    | \r\n autovacuum_analyze_threshold        | 50                                     | \r\n autovacuum_freeze_max_age           | 200000000                              | \r\n autovacuum_max_workers              | 3                                      | \r\n autovacuum_multixact_freeze_max_age | 400000000                              | \r\n autovacuum_naptime                  | 60                                     | s\r\n autovacuum_vacuum_cost_delay        | 20                                     | ms\r\n autovacuum_vacuum_cost_limit        | -1                                     | \r\n autovacuum_vacuum_scale_factor      | 0.2                                    | \r\n autovacuum_vacuum_threshold         | 50                                     | \r\n autovacuum_work_mem                 | -1                                     | kB\r\n backend_flush_after                 | 0                                      | 8kB\r\n backslash_quote                     | safe_encoding                          | \r\n bgwriter_delay                      | 200                                    | ms\r\n bgwriter_flush_after                | 64                                     | 8kB\r\n bgwriter_lru_maxpages               | 100                                    | \r\n bgwriter_lru_multiplier             | 2                                      | \r\n block_size                          | 8192                                   | \r\n bonjour                             | off                                    | \r\n bonjour_name                        |                                        | \r\n bytea_output                        | hex                                    | \r\n check_function_bodies               | on                                     | \r\n checkpoint_completion_target        | 0.5                                    | \r\n checkpoint_flush_after              | 32                                     | 8kB\r\n checkpoint_timeout                  | 300                                    | s\r\n checkpoint_warning                  | 30                                     | s\r\n client_encoding                     | UTF8                                   | \r\n client_min_messages                 | notice                                 | \r\n cluster_name                        |                                        | \r\n commit_delay                        | 0                                      | \r\n commit_siblings                     | 5                                      | \r\n config_file                         | /var/lib/pgsql/10/data/postgresql.conf | \r\n```\r\nAnd this is a small part... there are other cases like 'logical', 'hot standby', etc",
        "createdAt" : "2019-02-12T09:43:54Z",
        "updatedAt" : "2019-03-18T10:38:23Z",
        "lastEditedBy" : "d2d80496-0795-4618-ba72-36ae6c5b52ef",
        "tags" : [
        ]
      },
      {
        "id" : "ba62a7d6-b42d-4ba7-bcce-885de148d9a9",
        "parentId" : "277ac7d1-83c9-41b9-ad5d-fb264582409a",
        "authorId" : "d2d80496-0795-4618-ba72-36ae6c5b52ef",
        "body" : "We (dba) usually run \"SHOW param_name\" to know about the current setting value. I use this in the module output to present it.",
        "createdAt" : "2019-02-12T10:14:54Z",
        "updatedAt" : "2019-03-18T10:38:23Z",
        "lastEditedBy" : "d2d80496-0795-4618-ba72-36ae6c5b52ef",
        "tags" : [
        ]
      },
      {
        "id" : "88479d8c-5681-443f-80d3-9ac11d79701f",
        "parentId" : "277ac7d1-83c9-41b9-ad5d-fb264582409a",
        "authorId" : "7268595c-1eb4-4b5f-9277-90f183130a4b",
        "body" : "I understand, but one of the reasons for returning information, is to be able to use it in future tasks. If you return 64MB, it is impossible to manipulate that data (say you want only half).\r\n\r\nThat's why it is better to return absolute values (in bytes) so you can decide whether values ought to be MB or MiB, and have full control over what you sent back.",
        "createdAt" : "2019-02-15T11:19:47Z",
        "updatedAt" : "2019-03-18T10:38:23Z",
        "lastEditedBy" : "7268595c-1eb4-4b5f-9277-90f183130a4b",
        "tags" : [
        ]
      },
      {
        "id" : "69c6d431-38ac-47ae-a6bf-1dc511e3129f",
        "parentId" : "277ac7d1-83c9-41b9-ad5d-fb264582409a",
        "authorId" : "d2d80496-0795-4618-ba72-36ae6c5b52ef",
        "body" : "I know that it's better that you suggest. Ok, I should think of how to implement this.",
        "createdAt" : "2019-02-15T11:30:20Z",
        "updatedAt" : "2019-03-18T10:38:23Z",
        "lastEditedBy" : "d2d80496-0795-4618-ba72-36ae6c5b52ef",
        "tags" : [
        ]
      },
      {
        "id" : "33ab6ee3-c5a3-4aea-b82e-c333b9df3848",
        "parentId" : "277ac7d1-83c9-41b9-ad5d-fb264582409a",
        "authorId" : "7268595c-1eb4-4b5f-9277-90f183130a4b",
        "body" : "My main problem is that whatever we ship now, is set in stone. We cannot improve this in the future easily (except if we return 2 variables, one for backward compatibility). So interfaces are very important once people depend on it.",
        "createdAt" : "2019-02-15T11:44:59Z",
        "updatedAt" : "2019-03-18T10:38:23Z",
        "lastEditedBy" : "7268595c-1eb4-4b5f-9277-90f183130a4b",
        "tags" : [
        ]
      },
      {
        "id" : "3f8e4d21-5dcf-4aec-9c00-54bdd7f6e60e",
        "parentId" : "277ac7d1-83c9-41b9-ad5d-fb264582409a",
        "authorId" : "d2d80496-0795-4618-ba72-36ae6c5b52ef",
        "body" : " Is it OK if I add the next returned value?\r\n```\r\n170 setting:\r\n171   description:\r\n172   - Dictionary that contains the current parameter value (at the time of playbook finish).\r\n173   - Pay attention that for real change some parameters restart of PostgreSQL server is required.\r\n174   returned: always\r\n175   type: dict\r\n176   sample: { \"value\": '67108864', \"unit\": \"b\" }\r\n```",
        "createdAt" : "2019-02-15T13:43:49Z",
        "updatedAt" : "2019-03-18T10:38:23Z",
        "lastEditedBy" : "d2d80496-0795-4618-ba72-36ae6c5b52ef",
        "tags" : [
        ]
      },
      {
        "id" : "b5c6d720-61d7-4b61-8f73-6ec788ddf60c",
        "parentId" : "277ac7d1-83c9-41b9-ad5d-fb264582409a",
        "authorId" : "d2d80496-0795-4618-ba72-36ae6c5b52ef",
        "body" : "Solved. I add this:\r\n```\r\nsetting:\r\n  description:\r\n  - Dictionary that contains the current parameter value (at the time of playbook finish).\r\n  - Pay attention that for real change some parameters restart of PostgreSQL server is required.\r\n  returned: always\r\n  type: dict\r\n  sample: { \"value\": 67108864, \"unit\": \"b\" }\r\n```\r\nOK?\r\n(every time when I change my modules I find something new useful that can be added or code that can be removed ;)",
        "createdAt" : "2019-02-16T19:04:51Z",
        "updatedAt" : "2019-03-18T10:38:23Z",
        "lastEditedBy" : "d2d80496-0795-4618-ba72-36ae6c5b52ef",
        "tags" : [
        ]
      },
      {
        "id" : "66a5ca6c-60ef-4f50-9f54-13e89271efaa",
        "parentId" : "277ac7d1-83c9-41b9-ad5d-fb264582409a",
        "authorId" : "bb5f3442-a604-42a4-a77a-2008548cc43d",
        "body" : "Maybe it's better to return `value` and `value_pretty`? Or `value_bytes` and `value`. We should try to make it as easy as possible on the user. For example in Postgres you usually use byte values with a suffix, so it should be easy to use it like that in the module. For example if I want to compare values I shouldn't bother with units etc, just compare my value to the registered value. ",
        "createdAt" : "2019-02-17T14:11:24Z",
        "updatedAt" : "2019-03-18T10:38:23Z",
        "lastEditedBy" : "bb5f3442-a604-42a4-a77a-2008548cc43d",
        "tags" : [
        ]
      }
    ],
    "commit" : "85687ae3e19073816e85f42d886303b47294b698",
    "line" : 181,
    "diffHunk" : "@@ -1,1 +179,183 @@  returned: always\n  type: str\n  sample: '64MB'\nvalue:\n  description:"
  },
  {
    "id" : "22e8f16f-e3f2-4534-8641-72e027d13d08",
    "prId" : 51875,
    "prUrl" : "https://github.com/ansible/ansible/pull/51875#pullrequestreview-213232848",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "30d4d049-7dc5-4845-b086-9814b85a2aaf",
        "parentId" : null,
        "authorId" : "bb5f3442-a604-42a4-a77a-2008548cc43d",
        "body" : "I would also detect if the value is a bool and set it accordingly to `on`/`off`. ",
        "createdAt" : "2019-02-17T14:25:10Z",
        "updatedAt" : "2019-03-18T10:38:23Z",
        "lastEditedBy" : "bb5f3442-a604-42a4-a77a-2008548cc43d",
        "tags" : [
        ]
      },
      {
        "id" : "beae22a1-2c04-45bf-ae55-b540bb09ebda",
        "parentId" : "30d4d049-7dc5-4845-b086-9814b85a2aaf",
        "authorId" : "d2d80496-0795-4618-ba72-36ae6c5b52ef",
        "body" : "I'd like to avoid type mixing",
        "createdAt" : "2019-03-12T07:48:49Z",
        "updatedAt" : "2019-03-18T10:38:23Z",
        "lastEditedBy" : "d2d80496-0795-4618-ba72-36ae6c5b52ef",
        "tags" : [
        ]
      }
    ],
    "commit" : "85687ae3e19073816e85f42d886303b47294b698",
    "line" : 439,
    "diffHunk" : "@@ -1,1 +437,441 @@    context = res[4]\n\n    if value == 'True':\n        value = 'on'\n    elif value == 'False':"
  },
  {
    "id" : "5c89958c-c992-4fed-9e62-41e166c59ec8",
    "prId" : 51875,
    "prUrl" : "https://github.com/ansible/ansible/pull/51875#pullrequestreview-214884924",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "03cae152-ad25-49f3-b679-1b2414fc57d8",
        "parentId" : null,
        "authorId" : "c0551894-e142-40ab-9bc1-ab91fc2fc4ad",
        "body" : "missing default value?",
        "createdAt" : "2019-03-14T14:32:26Z",
        "updatedAt" : "2019-03-18T10:38:23Z",
        "lastEditedBy" : "c0551894-e142-40ab-9bc1-ab91fc2fc4ad",
        "tags" : [
        ]
      },
      {
        "id" : "ad22a9ea-b94f-4ec1-9eed-63f1927c2a1e",
        "parentId" : "03cae152-ad25-49f3-b679-1b2414fc57d8",
        "authorId" : "d2d80496-0795-4618-ba72-36ae6c5b52ef",
        "body" : "there's no default value. We need to absolutely understand what we are going to set",
        "createdAt" : "2019-03-15T06:47:32Z",
        "updatedAt" : "2019-03-18T10:38:23Z",
        "lastEditedBy" : "d2d80496-0795-4618-ba72-36ae6c5b52ef",
        "tags" : [
        ]
      }
    ],
    "commit" : "85687ae3e19073816e85f42d886303b47294b698",
    "line" : 343,
    "diffHunk" : "@@ -1,1 +341,345 @@        ssl_rootcert=dict(type='str'),\n        value=dict(type='str'),\n        reset=dict(type='bool'),\n        session_role=dict(type='str'),\n    )"
  },
  {
    "id" : "7cb3648d-a1e1-4f8b-9cd4-43a15adaaabb",
    "prId" : 51875,
    "prUrl" : "https://github.com/ansible/ansible/pull/51875#pullrequestreview-214987674",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c4c4b6d6-61fc-4214-8c34-4d5523c8db87",
        "parentId" : null,
        "authorId" : "c0551894-e142-40ab-9bc1-ab91fc2fc4ad",
        "body" : "in some cases will store incorrect `value` for memory-related settings (e.g. autovacuum_work_mem, temp_file_limit)\r\nFor example:\r\n`ok: [test] => (item={'name': 'autovacuum_work_mem', 'value': '-1', 'state': 'present', 'context': 'sighup'}) => {\"changed\": false, \"context\": \"sighup\", \"database\": \"postgres\", \"item\": {\"context\": \"sighup\", \"name\": \"autovacuum_work_mem\", \"state\": \"present\", \"value\": \"-1\"}, \"name\": \"autovacuum_work_mem\", \"port\": 5433, \"prev_val_pretty\": \"-1\", \"restart_required\": false, \"sslmode\": \"prefer\", \"user\": \"postgres\", \"value\": {\"unit\": \"b\", \"value\": -1024}, \"value_pretty\": \"-1\"}`",
        "createdAt" : "2019-03-15T11:36:47Z",
        "updatedAt" : "2019-03-18T10:38:23Z",
        "lastEditedBy" : "c0551894-e142-40ab-9bc1-ab91fc2fc4ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "85687ae3e19073816e85f42d886303b47294b698",
    "line" : 515,
    "diffHunk" : "@@ -1,1 +513,517 @@        kw['value_pretty'] = f_value\n        kw['value'] = dict(\n            value=f_raw_val,\n            unit=unit,\n        )"
  }
]