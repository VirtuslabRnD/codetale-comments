[
  {
    "id" : "c2e8a4e6-5434-4dd9-8d1d-43d5ded2d3a0",
    "prId" : 54241,
    "prUrl" : "https://github.com/ansible/ansible/pull/54241#pullrequestreview-218031396",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7e50c624-a0c9-4ec4-aa94-3e13e935a5b7",
        "parentId" : null,
        "authorId" : "5c95ce24-8a36-4f10-b46c-b30203fba415",
        "body" : "opt for `user` over `username` unless there's a good reason to differ",
        "createdAt" : "2019-03-22T21:54:16Z",
        "updatedAt" : "2019-03-22T21:55:31Z",
        "lastEditedBy" : "5c95ce24-8a36-4f10-b46c-b30203fba415",
        "tags" : [
        ]
      },
      {
        "id" : "c420c028-32e5-459c-8587-e3795c35a30a",
        "parentId" : "7e50c624-a0c9-4ec4-aa94-3e13e935a5b7",
        "authorId" : "1446e174-489e-49e8-b2d2-8d843405c94a",
        "body" : "There are two reasons why we opted for `username` instead of `user` for these modules:\r\n\r\n1. Bitbucket (like Github) uses `username` in the API & GUI to denote an account\r\n2. An account (username) might be either a _team_ or a _user_, so `user` has a different meaning\r\n\r\nWe thought that following this pattern would cause least confusion; what we want to achieve is that one specifies the two parts identifying the repository: `{username}/{repository}`, where `username` might be a team name.\r\n\r\nWe can change it to `user`, but have a preference for `username`; let us know if you don't think that our arguments are strong enough and we should change it anyways.",
        "createdAt" : "2019-03-22T22:12:06Z",
        "updatedAt" : "2019-03-22T22:12:06Z",
        "lastEditedBy" : "1446e174-489e-49e8-b2d2-8d843405c94a",
        "tags" : [
        ]
      },
      {
        "id" : "0df177f0-64b9-48e2-ac61-c4aa348b1cae",
        "parentId" : "7e50c624-a0c9-4ec4-aa94-3e13e935a5b7",
        "authorId" : "b17955b5-a229-42f4-ad20-a424b11c60a8",
        "body" : "In my opinion, there are two reasons to leave as is:\r\n1. Other Bitbucket modules (including https://github.com/ansible/ansible/blob/devel/lib/ansible/modules/source_control/bitbucket/bitbucket_pipeline_variable.py already accepted) use the same variable name\r\n2. Bitbucket API uses `username` as named part of API url for [key pair endpoint](https://developer.atlassian.com/bitbucket/api/2/reference/resource/repositories/%7Busername%7D/%7Brepo_slug%7D/pipelines_config/ssh/key_pair)\r\n\r\nMoreover, I think `username` is better than `user` because it more accurate description of what we want to get. Bitbucket `username` is obviously the nickname, whereas the `user` has a fuzzy meaning: it could be an email, nickname or maybe some user ID.",
        "createdAt" : "2019-03-22T22:22:40Z",
        "updatedAt" : "2019-03-22T22:25:36Z",
        "lastEditedBy" : "b17955b5-a229-42f4-ad20-a424b11c60a8",
        "tags" : [
        ]
      },
      {
        "id" : "e476eb76-cee3-492f-9a9e-af5c8bddbbcc",
        "parentId" : "7e50c624-a0c9-4ec4-aa94-3e13e935a5b7",
        "authorId" : "b17955b5-a229-42f4-ad20-a424b11c60a8",
        "body" : "@zyv We think the same way ;)",
        "createdAt" : "2019-03-22T22:24:19Z",
        "updatedAt" : "2019-03-22T22:24:19Z",
        "lastEditedBy" : "b17955b5-a229-42f4-ad20-a424b11c60a8",
        "tags" : [
        ]
      },
      {
        "id" : "2a3bcb71-3c94-4b8a-ad43-2bab81073edf",
        "parentId" : "7e50c624-a0c9-4ec4-aa94-3e13e935a5b7",
        "authorId" : "5c95ce24-8a36-4f10-b46c-b30203fba415",
        "body" : "The reason I brought it up: https://github.com/ansible/ansible/issues/51757\r\n\r\nThough in this case it may not be a connection variable.",
        "createdAt" : "2019-03-22T22:54:31Z",
        "updatedAt" : "2019-03-22T22:54:31Z",
        "lastEditedBy" : "5c95ce24-8a36-4f10-b46c-b30203fba415",
        "tags" : [
        ]
      },
      {
        "id" : "f6b63a78-5fac-48ab-8e28-b2e262eb4625",
        "parentId" : "7e50c624-a0c9-4ec4-aa94-3e13e935a5b7",
        "authorId" : "1446e174-489e-49e8-b2d2-8d843405c94a",
        "body" : "Right, in this case the connection vars are actually `client_id` and `client_secret`, for those we picked standard names, like in `typetalk` or `azure` modules. Using those connection variables, you can modify repositories belonging to any `username` you have access to, be it a team or a user.",
        "createdAt" : "2019-03-23T08:36:04Z",
        "updatedAt" : "2019-03-23T08:36:04Z",
        "lastEditedBy" : "1446e174-489e-49e8-b2d2-8d843405c94a",
        "tags" : [
        ]
      }
    ],
    "commit" : "d0590e3dc755bb1ab88c5ff917bea3841420235d",
    "line" : 41,
    "diffHunk" : "@@ -1,1 +39,43 @@    type: str\n    required: true\n  username:\n    description:\n      - The repository owner."
  }
]