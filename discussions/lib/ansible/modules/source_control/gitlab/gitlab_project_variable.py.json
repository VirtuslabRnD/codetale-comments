[
  {
    "id" : "80626487-d537-4ab4-afbd-263ee9bb48a5",
    "prId" : 67461,
    "prUrl" : "https://github.com/ansible/ansible/pull/67461#pullrequestreview-363100023",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "412dff74-7bd6-439c-bf2a-69369f78b5e5",
        "parentId" : null,
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "Does this work with every version of `python-gitlab` that supports variables?",
        "createdAt" : "2020-02-22T12:47:29Z",
        "updatedAt" : "2020-02-26T19:21:30Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      },
      {
        "id" : "28464ed9-2d04-4bdc-91e1-6ff6f0a40df0",
        "parentId" : "412dff74-7bd6-439c-bf2a-69369f78b5e5",
        "authorId" : "d8b4b372-8723-45ea-a9cd-419bed2e3531",
        "body" : "hm I don't know. I have to research.",
        "createdAt" : "2020-02-22T18:23:06Z",
        "updatedAt" : "2020-02-26T19:21:30Z",
        "lastEditedBy" : "d8b4b372-8723-45ea-a9cd-419bed2e3531",
        "tags" : [
        ]
      },
      {
        "id" : "d154ecd4-563d-4ac1-8a21-c2ce857c0804",
        "parentId" : "412dff74-7bd6-439c-bf2a-69369f78b5e5",
        "authorId" : "d8b4b372-8723-45ea-a9cd-419bed2e3531",
        "body" : "python-gitlab version doesn't matter.  \r\n`project.variables.create()` is just a wrapper of a path post command. \r\n\r\nhttps://github.com/python-gitlab/python-gitlab/blob/master/gitlab/__init__.py#L676\r\n\r\nso even when they introduce new attributes, they must not be implemented in the python-gitlab sdk.  \r\nthe used gitlab host (gitlab version) must support `masked` and `protected` those attributes. ",
        "createdAt" : "2020-02-23T07:33:40Z",
        "updatedAt" : "2020-02-26T19:21:30Z",
        "lastEditedBy" : "d8b4b372-8723-45ea-a9cd-419bed2e3531",
        "tags" : [
        ]
      },
      {
        "id" : "54f21f5d-1f81-42d0-891d-6f06b37dd290",
        "parentId" : "412dff74-7bd6-439c-bf2a-69369f78b5e5",
        "authorId" : "d8b4b372-8723-45ea-a9cd-419bed2e3531",
        "body" : "```\r\nMasked variables\r\n\r\nIntroduced in GitLab 11.10\r\n```\r\n\r\n```\r\nProtected environment variables\r\n\r\nIntroduced in GitLab 9.3.\r\n```\r\n\r\n@felixfontein do you think we need to cover this? But I don't know if old gitlab version throws an error when they see attributes they don't know or if they just ignore them.",
        "createdAt" : "2020-02-23T07:35:53Z",
        "updatedAt" : "2020-02-26T19:21:30Z",
        "lastEditedBy" : "d8b4b372-8723-45ea-a9cd-419bed2e3531",
        "tags" : [
        ]
      },
      {
        "id" : "073f43b4-b77a-4246-8181-32d51b6a830f",
        "parentId" : "412dff74-7bd6-439c-bf2a-69369f78b5e5",
        "authorId" : "d8b4b372-8723-45ea-a9cd-419bed2e3531",
        "body" : "```\r\n>>> project.variables.create({\"key\": 'testc', \"value\": \"value\", \"somethingelse\": True})\r\n<ProjectVariable key:testc>\r\n>>> \r\n```\r\n\r\nI guess GitLab simply ignores attribute which it doesn't know. But I add some version hints to the documentation.",
        "createdAt" : "2020-02-23T07:43:09Z",
        "updatedAt" : "2020-02-26T19:21:30Z",
        "lastEditedBy" : "d8b4b372-8723-45ea-a9cd-419bed2e3531",
        "tags" : [
        ]
      },
      {
        "id" : "62f69593-7501-471c-b56d-e225a3f05f31",
        "parentId" : "412dff74-7bd6-439c-bf2a-69369f78b5e5",
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "You could simply only pass variables that are `True`, then you're on the safe side :) I.e. something like\r\n```.py\r\n        params = {\"key\": key, \"value\": value}\r\n        if masked:\r\n            params[\"masked\"] = True\r\n        if protected:\r\n            params[\"protected\"] = True\r\n        return self.project.variables.create(params)\r\n```",
        "createdAt" : "2020-02-23T14:49:35Z",
        "updatedAt" : "2020-02-26T19:21:30Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      }
    ],
    "commit" : "3872b116cb28a5cb0e0bc3183710ac24a7ab02d4",
    "line" : 55,
    "diffHunk" : "@@ -1,1 +165,169 @@            return\n        return self.project.variables.create({\"key\": key, \"value\": value,\n                                              \"masked\": masked, \"protected\": protected})\n\n    def update_variable(self, key, var, value, masked, protected):"
  },
  {
    "id" : "22b75efa-9203-489e-ab0a-d43552755d10",
    "prId" : 67461,
    "prUrl" : "https://github.com/ansible/ansible/pull/67461#pullrequestreview-363027230",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "86fdab31-cf56-4f08-a67e-e6eb3a9f8f58",
        "parentId" : null,
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "How about using `save()` when `maked` and `protected` does not change, and only use `delete_variable` + `create_variable` when these change?",
        "createdAt" : "2020-02-22T12:48:51Z",
        "updatedAt" : "2020-02-26T19:21:30Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      }
    ],
    "commit" : "3872b116cb28a5cb0e0bc3183710ac24a7ab02d4",
    "line" : 74,
    "diffHunk" : "@@ -1,1 +180,184 @@\n        self.delete_variable(key)\n        self.create_variable(key, value, masked, protected)\n        return True\n"
  }
]