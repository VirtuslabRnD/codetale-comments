[
  {
    "id" : "8509f99f-606f-438e-959a-258f3fc47d05",
    "prId" : 32136,
    "prUrl" : "https://github.com/ansible/ansible/pull/32136#pullrequestreview-74375373",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d1722c78-84ab-4aaf-970b-a61a5ca35d24",
        "parentId" : null,
        "authorId" : "de5e1b91-f661-4a4e-9b31-f71565f2ab84",
        "body" : "I'm trying to think of a different class name, especially less confusable with `ManageIQAlert`.  But I don't have any good suggestion.\r\n\r\n(this does fit the class naming in existing manageiq modules, matching the module name, but that's not such a good scheme IMHO, no reason to stick to it...)",
        "createdAt" : "2017-11-05T19:57:02Z",
        "updatedAt" : "2018-01-08T11:02:36Z",
        "lastEditedBy" : "de5e1b91-f661-4a4e-9b31-f71565f2ab84",
        "tags" : [
        ]
      },
      {
        "id" : "aefdc170-067c-40ff-a0d4-2e5e83d229e1",
        "parentId" : "d1722c78-84ab-4aaf-970b-a61a5ca35d24",
        "authorId" : "d38b41ab-b9f4-402e-9f47-9d6a40e472e1",
        "body" : "I can't think of a better name. We could add an extra word like \"Handler\" or something generic like that, but that's a big ugly.",
        "createdAt" : "2017-11-06T10:37:42Z",
        "updatedAt" : "2018-01-08T11:02:36Z",
        "lastEditedBy" : "d38b41ab-b9f4-402e-9f47-9d6a40e472e1",
        "tags" : [
        ]
      }
    ],
    "commit" : "bb6bde0561c4ee679fcd461da25fe8e3f329ecb8",
    "line" : 158,
    "diffHunk" : "@@ -1,1 +156,160 @@\n\nclass ManageIQAlerts(object):\n    \"\"\" Object to execute alert management operations in manageiq.\n    \"\"\""
  },
  {
    "id" : "5b1e7a1e-cf67-41de-9654-a1b3d4093c8e",
    "prId" : 32136,
    "prUrl" : "https://github.com/ansible/ansible/pull/32136#pullrequestreview-74383168",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6f720419-0c5c-4349-b451-b30d5f1e2ad6",
        "parentId" : null,
        "authorId" : "de5e1b91-f661-4a4e-9b31-f71565f2ab84",
        "body" : "what happens with older MIQ?  can you return to user a friendly message explaining it's not supported in this version?",
        "createdAt" : "2017-11-05T20:11:17Z",
        "updatedAt" : "2018-01-08T11:02:36Z",
        "lastEditedBy" : "de5e1b91-f661-4a4e-9b31-f71565f2ab84",
        "tags" : [
        ]
      },
      {
        "id" : "cef41c6b-c642-4fa7-9d6c-bdbe7bb68844",
        "parentId" : "6f720419-0c5c-4349-b451-b30d5f1e2ad6",
        "authorId" : "d38b41ab-b9f4-402e-9f47-9d6a40e472e1",
        "body" : "See https://github.com/ansible/ansible/pull/32136#issuecomment-341520122 for an example of what happens with older MIQ.\r\n\r\nThe best thing we can do is catch that exception and change the error message to explain hash expression is not supported.",
        "createdAt" : "2017-11-06T10:39:30Z",
        "updatedAt" : "2018-01-08T11:02:36Z",
        "lastEditedBy" : "d38b41ab-b9f4-402e-9f47-9d6a40e472e1",
        "tags" : [
        ]
      },
      {
        "id" : "0738cf36-4773-4803-b49f-b89aa3fbd59c",
        "parentId" : "6f720419-0c5c-4349-b451-b30d5f1e2ad6",
        "authorId" : "d38b41ab-b9f4-402e-9f47-9d6a40e472e1",
        "body" : "I've added a user-friendly error message for when the user tries to create/update a hash expression on a MIQ installation that does not support that.",
        "createdAt" : "2017-11-06T11:03:57Z",
        "updatedAt" : "2018-01-08T11:02:36Z",
        "lastEditedBy" : "d38b41ab-b9f4-402e-9f47-9d6a40e472e1",
        "tags" : [
        ]
      }
    ],
    "commit" : "bb6bde0561c4ee679fcd461da25fe8e3f329ecb8",
    "line" : 192,
    "diffHunk" : "@@ -1,1 +190,194 @@        \"\"\"\n        if params['expression_type'] == 'hash':\n            # hash expression supports depends on https://github.com/ManageIQ/manageiq-api/pull/76\n            self.validate_hash_expression(params['expression'])\n            expression_type = 'hash_expression'"
  },
  {
    "id" : "85757a0e-1ef9-44af-a7ff-cbe166e85fda",
    "prId" : 32136,
    "prUrl" : "https://github.com/ansible/ansible/pull/32136#pullrequestreview-74383890",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6fc1f301-01bf-4a8c-9e3f-2bb915b99bf9",
        "parentId" : null,
        "authorId" : "de5e1b91-f661-4a4e-9b31-f71565f2ab84",
        "body" : "So this class can be initialized with both format we send and format we receive?\r\nNeat! :heart:  Worth mentioning in docstring IMHO.",
        "createdAt" : "2017-11-06T09:13:43Z",
        "updatedAt" : "2018-01-08T11:02:36Z",
        "lastEditedBy" : "de5e1b91-f661-4a4e-9b31-f71565f2ab84",
        "tags" : [
        ]
      },
      {
        "id" : "68e81f17-0137-4586-8b4b-b3146e9560d4",
        "parentId" : "6fc1f301-01bf-4a8c-9e3f-2bb915b99bf9",
        "authorId" : "d38b41ab-b9f4-402e-9f47-9d6a40e472e1",
        "body" : "Done",
        "createdAt" : "2017-11-06T11:07:14Z",
        "updatedAt" : "2018-01-08T11:02:36Z",
        "lastEditedBy" : "d38b41ab-b9f4-402e-9f47-9d6a40e472e1",
        "tags" : [
        ]
      }
    ],
    "commit" : "bb6bde0561c4ee679fcd461da25fe8e3f329ecb8",
    "line" : 149,
    "diffHunk" : "@@ -1,1 +147,151 @@                # miq_expression is a field that needs a special case, because\n                # it's returned surrounded by a dict named exp even though we don't\n                # send it with that dict.\n                self.miq_expression = self.miq_expression['exp']\n"
  }
]