[
  {
    "id" : "1c000151-260d-4d66-bf6b-832e8082515e",
    "prId" : 55102,
    "prUrl" : "https://github.com/ansible/ansible/pull/55102#pullrequestreview-225644409",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7540f1d5-cb60-43fa-97e2-0e5a8d915d61",
        "parentId" : null,
        "authorId" : "2f8132dc-12f8-44dc-8b97-1cf4c1616b68",
        "body" : "I think the options that are yes/no or on/off should be `bool` not `int`. It would allow the field to take more parameters and is a better UI that having to think in 1's and 0's. You could even specify `On` or `Off` (or `1` and `0` still, if preferred) for the parameter in the playbook.",
        "createdAt" : "2019-04-11T16:25:35Z",
        "updatedAt" : "2019-04-23T16:58:41Z",
        "lastEditedBy" : "2f8132dc-12f8-44dc-8b97-1cf4c1616b68",
        "tags" : [
        ]
      }
    ],
    "commit" : "fc921425106e903cc955f8ec98cfb358d839065c",
    "line" : 261,
    "diffHunk" : "@@ -1,1 +259,263 @@        parity=dict(type='int', required=False, default=None, choices=[0, 1, 2, 3, 4, 5]),\n        mode=dict(type='int', required=False, default=None, choices=[0, 1, 2, 3, 4]),\n        cmd=dict(type='int', required=False, default=None, choices=[0, 1]),\n        seq=dict(type='int', required=False, default=None, choices=[1, 2, 3]),\n        tout=dict(type='int', required=False, default=None, choices=[0, 1, 2, 3, 4, 5]),"
  },
  {
    "id" : "2cb115c8-cebd-4004-afb0-85ec32ac3836",
    "prId" : 55102,
    "prUrl" : "https://github.com/ansible/ansible/pull/55102#pullrequestreview-225644409",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a263bf3f-2f83-4fb3-b2db-7fdd69c1c162",
        "parentId" : null,
        "authorId" : "2f8132dc-12f8-44dc-8b97-1cf4c1616b68",
        "body" : "Minor change to the check mode logic here since it's not properly reporting a change if a change would be made when run in check mode, even though we have that information available.\r\n\r\nThis looks like a bigger change than it is because I nested it one level.\r\n```suggestion\r\n    result['data'] = read_data\r\n\r\n    if module.check_mode:\r\n        if payload is not None:\r\n            result['changed'] = True\r\n    else:\r\n        if payload is not None:\r\n            fullurl = (\"%s%s/api/v2/config/serialports\" % (protocol, to_native(module.params['cpm_url'])))\r\n            method = 'POST'\r\n\r\n            try:\r\n                response = open_url(fullurl, data=payload, method=method, validate_certs=module.params['validate_certs'], use_proxy=module.params['use_proxy'],\r\n                                    headers={'Content-Type': 'application/json', 'Authorization': \"Basic %s\" % auth})\r\n\r\n            except HTTPError as e:\r\n                fail_json = dict(msg='POST: Received HTTP error for {0} : {1}'.format(fullurl, to_native(e)), changed=False)\r\n                module.fail_json(**fail_json)\r\n            except URLError as e:\r\n                fail_json = dict(msg='POST: Failed lookup url for {0} : {1}'.format(fullurl, to_native(e)), changed=False)\r\n                module.fail_json(**fail_json)\r\n            except SSLValidationError as e:\r\n                fail_json = dict(msg='POST: Error validating the server''s certificate for {0} : {1}'.format(fullurl, to_native(e)), changed=False)\r\n                module.fail_json(**fail_json)\r\n            except ConnectionError as e:\r\n                fail_json = dict(msg='POST: Error connecting to {0} : {1}'.format(fullurl, to_native(e)), changed=False)\r\n                module.fail_json(**fail_json)\r\n\r\n            result['changed'] = True\r\n            result['data'] = json.loads(response.read())\r\n```",
        "createdAt" : "2019-04-11T19:19:57Z",
        "updatedAt" : "2019-04-23T16:58:41Z",
        "lastEditedBy" : "2f8132dc-12f8-44dc-8b97-1cf4c1616b68",
        "tags" : [
        ]
      }
    ],
    "commit" : "fc921425106e903cc955f8ec98cfb358d839065c",
    "line" : 308,
    "diffHunk" : "@@ -1,1 +306,310 @@    result['data'] = json.loads(response.read())\n    payload = assemble_json(module, result['data'])\n\n    if module.check_mode:\n        if payload is not None:"
  },
  {
    "id" : "81ab61e1-76cb-430c-8e0d-dc9963e10e59",
    "prId" : 55102,
    "prUrl" : "https://github.com/ansible/ansible/pull/55102#pullrequestreview-229237252",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "10d013ca-5041-4b54-8599-e350bc4a0135",
        "parentId" : null,
        "authorId" : "2f8132dc-12f8-44dc-8b97-1cf4c1616b68",
        "body" : "Add a note about using `module_defaults`:\r\n```suggestion\r\n    required: false\r\nnotes:\r\n  - Use C(groups/cpm) in C(module_defaults) to set common options used between CPM modules.\r\n```",
        "createdAt" : "2019-04-22T20:43:21Z",
        "updatedAt" : "2019-04-23T16:58:41Z",
        "lastEditedBy" : "2f8132dc-12f8-44dc-8b97-1cf4c1616b68",
        "tags" : [
        ]
      }
    ],
    "commit" : "fc921425106e903cc955f8ec98cfb358d839065c",
    "line" : 129,
    "diffHunk" : "@@ -1,1 +127,131 @@      - This is the logout character to assign to the port\n      - If preceded by a ^ character, the sequence will be a control character. Used if seq is set to 0 or 1\n    required: false\nnotes:\n  - Use C(groups/cpm) in C(module_defaults) to set common options used between CPM modules."
  }
]