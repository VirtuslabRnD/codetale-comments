[
  {
    "id" : "602cf90c-da7a-4376-a654-5c83a24330fc",
    "prId" : 46675,
    "prUrl" : "https://github.com/ansible/ansible/pull/46675#pullrequestreview-180529599",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9942d5ff-49f1-4488-a545-560e54bd40ed",
        "parentId" : null,
        "authorId" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "body" : "With all I saw I think that you need to extend your schema:\r\n1) have a string `msg` key, because I saw you putting strings instead of dict there sometimes\r\n2) some structure for extra info: either one dict with all data or a set of separate scalar keys (which is probably easier to manage)\r\n\r\nThink of it as a public API: whoever will run your module will register the result and this whole structure will be available to them to use/inspect.\r\nTry to think of the most useful way to reuse this data you return.",
        "createdAt" : "2018-11-30T12:46:15Z",
        "updatedAt" : "2018-12-06T16:17:56Z",
        "lastEditedBy" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "tags" : [
        ]
      },
      {
        "id" : "750dc8e5-44d6-4d50-afb6-c05316af83ba",
        "parentId" : "9942d5ff-49f1-4488-a545-560e54bd40ed",
        "authorId" : "ea778353-4f7d-4ffa-9c12-4b2a8ea2b900",
        "body" : "updated the return type to `string`",
        "createdAt" : "2018-11-30T19:17:12Z",
        "updatedAt" : "2018-12-06T16:17:56Z",
        "lastEditedBy" : "ea778353-4f7d-4ffa-9c12-4b2a8ea2b900",
        "tags" : [
        ]
      },
      {
        "id" : "073abae5-7118-48d2-b39e-785f3257b6bc",
        "parentId" : "9942d5ff-49f1-4488-a545-560e54bd40ed",
        "authorId" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "body" : "msg should be smth added by you, while there should also be a dict with server response separately.",
        "createdAt" : "2018-11-30T19:31:36Z",
        "updatedAt" : "2018-12-06T16:17:57Z",
        "lastEditedBy" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "tags" : [
        ]
      },
      {
        "id" : "e98098e6-fef3-4a67-ab9c-97d2d6f37ef3",
        "parentId" : "9942d5ff-49f1-4488-a545-560e54bd40ed",
        "authorId" : "ea778353-4f7d-4ffa-9c12-4b2a8ea2b900",
        "body" : "updated accordingly. successful job response is captured in `update_status ` json string",
        "createdAt" : "2018-11-30T20:25:56Z",
        "updatedAt" : "2018-12-06T16:17:57Z",
        "lastEditedBy" : "ea778353-4f7d-4ffa-9c12-4b2a8ea2b900",
        "tags" : [
        ]
      },
      {
        "id" : "21136a21-2181-4830-a5a9-94b770e80ee3",
        "parentId" : "9942d5ff-49f1-4488-a545-560e54bd40ed",
        "authorId" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "body" : "Then, this return schema should be updated. It's currently completely different from what you describe. I guess it should be:\r\n```yaml\r\n---\r\nmsg:\r\n  type: string\r\n  ...\r\n  returned: always\r\n  sample: <actual string message>\r\n  ...\r\nupdate_status:\r\n  type: dict\r\n  ...\r\n  returned: success\r\n  sample:\r\n    CompletionTime: ...\r\n    Id: ...\r\n    ...\r\n```",
        "createdAt" : "2018-12-01T16:41:53Z",
        "updatedAt" : "2018-12-06T16:17:57Z",
        "lastEditedBy" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "tags" : [
        ]
      },
      {
        "id" : "542953a6-cd43-4f44-a757-27321f901582",
        "parentId" : "9942d5ff-49f1-4488-a545-560e54bd40ed",
        "authorId" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "body" : "(return value is a _nested_ structure, so you don't have to try putting everything in one key: different data should go to different keys)",
        "createdAt" : "2018-12-01T16:48:22Z",
        "updatedAt" : "2018-12-06T16:17:57Z",
        "lastEditedBy" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "tags" : [
        ]
      }
    ],
    "commit" : "d84338ab62f4b499451095e0140bfea009303567",
    "line" : 101,
    "diffHunk" : "@@ -1,1 +99,103 @@RETURN = \"\"\"\n---\nmsg:\n  type: string\n  description: Over all firmware update status."
  },
  {
    "id" : "6e5d33e9-eb54-42d0-b0fc-746a67e70e86",
    "prId" : 46675,
    "prUrl" : "https://github.com/ansible/ansible/pull/46675#pullrequestreview-180415777",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "12ac34b5-e7da-4d7d-acc2-998d3b22e443",
        "parentId" : null,
        "authorId" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "body" : "This is probably not needed, because `exit_json()` automatically adds success state key to the result and `fail_json()` adds the failure flag there.\r\nAnother thing to think about is `changed` flag: when this module changes anything on the target it should be `True`.",
        "createdAt" : "2018-11-30T12:48:19Z",
        "updatedAt" : "2018-12-06T16:17:56Z",
        "lastEditedBy" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "tags" : [
        ]
      },
      {
        "id" : "05b378f0-32a8-497d-9a5b-95be54f7b473",
        "parentId" : "12ac34b5-e7da-4d7d-acc2-998d3b22e443",
        "authorId" : "ea778353-4f7d-4ffa-9c12-4b2a8ea2b900",
        "body" : "this is part of the native return value of the firmware update job details which we are not modifying with in the module. Hope this will clarify the point",
        "createdAt" : "2018-11-30T19:05:08Z",
        "updatedAt" : "2018-12-06T16:17:56Z",
        "lastEditedBy" : "ea778353-4f7d-4ffa-9c12-4b2a8ea2b900",
        "tags" : [
        ]
      },
      {
        "id" : "fa180934-3ec4-44d5-9e2a-cc1479e436fb",
        "parentId" : "12ac34b5-e7da-4d7d-acc2-998d3b22e443",
        "authorId" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "body" : "k",
        "createdAt" : "2018-11-30T19:30:50Z",
        "updatedAt" : "2018-12-06T16:17:57Z",
        "lastEditedBy" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "tags" : [
        ]
      }
    ],
    "commit" : "d84338ab62f4b499451095e0140bfea009303567",
    "line" : 117,
    "diffHunk" : "@@ -1,1 +115,119 @@        'Name': 'Repository Update',\n        'JobStartTime': 'NA',\n        'Status': 'Success',\n    }\n\"\"\""
  },
  {
    "id" : "728fde74-ede3-4847-91b8-d29e1a00bcc2",
    "prId" : 46675,
    "prUrl" : "https://github.com/ansible/ansible/pull/46675#pullrequestreview-180868994",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2f4dbe6f-291a-4517-99b6-1beae6715593",
        "parentId" : null,
        "authorId" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "body" : "It's a good practice to also implement \"check mode\", which is basically putting `if not module.check_mode:` in front of any \"side effects\" or \"target mutations\" but I think this might be a separate improvement in a separate PR.",
        "createdAt" : "2018-12-01T16:53:58Z",
        "updatedAt" : "2018-12-06T16:17:57Z",
        "lastEditedBy" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "tags" : [
        ]
      },
      {
        "id" : "5da2fb3e-87d5-4fb4-8bb5-c4bc2d801821",
        "parentId" : "2f4dbe6f-291a-4517-99b6-1beae6715593",
        "authorId" : "ea778353-4f7d-4ffa-9c12-4b2a8ea2b900",
        "body" : "Yes you are right. `check_mode` support for this module would be a separate PR",
        "createdAt" : "2018-12-03T16:51:42Z",
        "updatedAt" : "2018-12-06T16:17:57Z",
        "lastEditedBy" : "ea778353-4f7d-4ffa-9c12-4b2a8ea2b900",
        "tags" : [
        ]
      }
    ],
    "commit" : "d84338ab62f4b499451095e0140bfea009303567",
    "line" : 194,
    "diffHunk" : "@@ -1,1 +192,196 @@        },\n\n        supports_check_mode=False)\n\n    try:"
  },
  {
    "id" : "2efe5846-dbca-4ef5-9a52-a0b1b55dde76",
    "prId" : 46675,
    "prUrl" : "https://github.com/ansible/ansible/pull/46675#pullrequestreview-182312568",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c65ef5c2-c914-47f4-b339-341f73eff5d5",
        "parentId" : null,
        "authorId" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "body" : "You should probably put this check into a separate function and run it before `with` block https://github.com/ansible/ansible/pull/46675/files#diff-62a00abb6ff3cd2c35f54b8b82436130R205 so that it'll halt execution even before trying to construct that connection object.",
        "createdAt" : "2018-12-06T14:17:24Z",
        "updatedAt" : "2018-12-06T16:17:57Z",
        "lastEditedBy" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "tags" : [
        ]
      },
      {
        "id" : "0f4ff7f2-bb5e-4e8a-ad9f-7821f4c187f1",
        "parentId" : "c65ef5c2-c914-47f4-b339-341f73eff5d5",
        "authorId" : "ea778353-4f7d-4ffa-9c12-4b2a8ea2b900",
        "body" : "right.. this input validation can be before target connection",
        "createdAt" : "2018-12-06T16:01:45Z",
        "updatedAt" : "2018-12-06T16:17:57Z",
        "lastEditedBy" : "ea778353-4f7d-4ffa-9c12-4b2a8ea2b900",
        "tags" : [
        ]
      }
    ],
    "commit" : "d84338ab62f4b499451095e0140bfea009303567",
    "line" : 146,
    "diffHunk" : "@@ -1,1 +144,148 @@    msg['update_status'] = {}\n\n    try:\n        upd_share = FileOnShare(remote=module.params['share_name'] + \"/\" + module.params['catalog_file_name'],\n                                mount_point=module.params['share_mnt'],"
  }
]