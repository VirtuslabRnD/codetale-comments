[
  {
    "id" : "1d1686f8-1e96-4fac-a647-042cadd9b82e",
    "prId" : 43469,
    "prUrl" : "https://github.com/ansible/ansible/pull/43469#pullrequestreview-146255061",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a7819288-d058-4a65-b942-34ca8e7b2620",
        "parentId" : null,
        "authorId" : "2f8132dc-12f8-44dc-8b97-1cf4c1616b68",
        "body" : "This should be a bit more descriptive of what this module specifically does. Most modules build some sort of command or URI, so this doesn't really describe what this module actually does without inferring it from reading the documentation.",
        "createdAt" : "2018-08-14T21:21:45Z",
        "updatedAt" : "2018-08-30T01:28:55Z",
        "lastEditedBy" : "2f8132dc-12f8-44dc-8b97-1cf4c1616b68",
        "tags" : [
        ]
      }
    ],
    "commit" : "f3e04d79af82317a8e2016f814bbd7db5fc9b96b",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +18,22 @@short_description: Manages Out-Of-Band controllers using Redfish APIs\ndescription:\n  - Builds Redfish URIs locally and sends them to remote OOB controllers to\n    perform an action.\n  - Manages OOB controller ex. reboot, log management."
  },
  {
    "id" : "68ecc4c4-026d-44c0-8ef4-bf78c393efb8",
    "prId" : 43469,
    "prUrl" : "https://github.com/ansible/ansible/pull/43469#pullrequestreview-150809790",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "da7436b5-c30c-4d8f-bc23-0b2f72317588",
        "parentId" : null,
        "authorId" : "2f8132dc-12f8-44dc-8b97-1cf4c1616b68",
        "body" : "Would this failure message (and others) provide a helpful description of the error?",
        "createdAt" : "2018-08-24T20:16:13Z",
        "updatedAt" : "2018-08-30T01:28:55Z",
        "lastEditedBy" : "2f8132dc-12f8-44dc-8b97-1cf4c1616b68",
        "tags" : [
        ]
      },
      {
        "id" : "7e14033b-b010-4d86-afbb-d76cd29b309d",
        "parentId" : "da7436b5-c30c-4d8f-bc23-0b2f72317588",
        "authorId" : "fb1d7f1e-90f0-4ed2-9fd3-5d02addcee6e",
        "body" : "Yes if a manager resource is not found, ```msg=\"Manager resource not found\"\"```",
        "createdAt" : "2018-08-30T01:24:49Z",
        "updatedAt" : "2018-08-30T01:28:55Z",
        "lastEditedBy" : "fb1d7f1e-90f0-4ed2-9fd3-5d02addcee6e",
        "tags" : [
        ]
      }
    ],
    "commit" : "f3e04d79af82317a8e2016f814bbd7db5fc9b96b",
    "line" : 244,
    "diffHunk" : "@@ -1,1 +242,246 @@        result = rf_utils._find_managers_resource(rf_uri)\n        if result['ret'] is False:\n            module.fail_json(msg=to_native(result['msg']))\n\n        for command in command_list:"
  },
  {
    "id" : "7acd5772-9920-489c-90de-223a09cad7be",
    "prId" : 47462,
    "prUrl" : "https://github.com/ansible/ansible/pull/47462#pullrequestreview-167500349",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3a0100b5-9dd9-4766-b915-d7353138b220",
        "parentId" : null,
        "authorId" : "870e1fd6-07e7-404a-911c-ed99e933627b",
        "body" : "Should this be using the `changed` and `msg` values from `result`? e.g.:\r\n```\r\nmodule.exit_json(changed=result['changed'], msg=to_native(result['msg']))\r\n```",
        "createdAt" : "2018-10-23T15:50:47Z",
        "updatedAt" : "2018-10-23T15:53:57Z",
        "lastEditedBy" : "870e1fd6-07e7-404a-911c-ed99e933627b",
        "tags" : [
        ]
      }
    ],
    "commit" : "7c2ae6f4aad6449ccd6c7fb9b1b3b20a970dfe9a",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +250,254 @@    if result['ret'] is True:\n        del result['ret']\n        module.exit_json(changed=True, msg='Action was successful')\n    else:\n        module.fail_json(msg=to_native(result['msg']))"
  },
  {
    "id" : "e1674a1d-deb4-42a6-bdaa-7f01b5e11017",
    "prId" : 53752,
    "prUrl" : "https://github.com/ansible/ansible/pull/53752#pullrequestreview-215863019",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a025cecc-825f-49b6-ba37-1f01828380af",
        "parentId" : null,
        "authorId" : "870e1fd6-07e7-404a-911c-ed99e933627b",
        "body" : "Would be good to add an example of at least one of these in the EXAMPLES doc string above.",
        "createdAt" : "2019-03-18T21:30:29Z",
        "updatedAt" : "2019-03-19T16:38:29Z",
        "lastEditedBy" : "870e1fd6-07e7-404a-911c-ed99e933627b",
        "tags" : [
        ]
      }
    ],
    "commit" : "90fc32151844069578f8b2e0bc0ebb0b440b9309",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +156,160 @@    \"Systems\": [\"PowerOn\", \"PowerForceOff\", \"PowerGracefulRestart\",\n                \"PowerGracefulShutdown\", \"PowerReboot\", \"SetOneTimeBoot\"],\n    \"Chassis\": [\"IndicatorLedOn\", \"IndicatorLedOff\", \"IndicatorLedBlink\"],\n    \"Accounts\": [\"AddUser\", \"EnableUser\", \"DeleteUser\", \"DisableUser\",\n                 \"UpdateUserRole\", \"UpdateUserPassword\"],"
  },
  {
    "id" : "7226eb65-a9e2-4fc7-88f2-1a4694ae8e5e",
    "prId" : 53752,
    "prUrl" : "https://github.com/ansible/ansible/pull/53752#pullrequestreview-215863019",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a94b3cbd-9e71-4d62-b515-467ae1755575",
        "parentId" : null,
        "authorId" : "870e1fd6-07e7-404a-911c-ed99e933627b",
        "body" : "Even though the only Chassis commands currently are the LED ones, I think it would be good to set up the above code block to handle multiple commands (similar to how the Systems and Accounts blocks are structured). i.e. Have a `for command in command_list:` block so that if and when new Chassis commands are added, the new code would just be an additional `elif` block within the existing `for` loop. Hope that makes sense.",
        "createdAt" : "2019-03-18T21:35:54Z",
        "updatedAt" : "2019-03-19T16:38:29Z",
        "lastEditedBy" : "870e1fd6-07e7-404a-911c-ed99e933627b",
        "tags" : [
        ]
      }
    ],
    "commit" : "90fc32151844069578f8b2e0bc0ebb0b440b9309",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +255,259 @@                if command in led_commands:\n                    result = rf_utils.manage_indicator_led(command)\n\n    elif category == \"Manager\":\n        MANAGER_COMMANDS = {"
  }
]