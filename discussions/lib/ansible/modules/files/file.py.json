[
  {
    "id" : "b8919a39-0974-4652-b650-d01184c16c98",
    "prId" : 22771,
    "prUrl" : "https://github.com/ansible/ansible/pull/22771#pullrequestreview-29236630",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ae81bfd1-8ed6-4481-8566-bc43b3624d64",
        "parentId" : null,
        "authorId" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "body" : "remove this line, not needed",
        "createdAt" : "2017-03-27T14:42:28Z",
        "updatedAt" : "2017-03-27T18:55:59Z",
        "lastEditedBy" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "tags" : [
        ]
      },
      {
        "id" : "b454cdf9-7d6e-41fe-a121-d95ba2657e52",
        "parentId" : "ae81bfd1-8ed6-4481-8566-bc43b3624d64",
        "authorId" : "036a0b5f-7b90-4dd6-8ae9-879788824902",
        "body" : "done.",
        "createdAt" : "2017-03-27T16:41:59Z",
        "updatedAt" : "2017-03-27T18:55:59Z",
        "lastEditedBy" : "036a0b5f-7b90-4dd6-8ae9-879788824902",
        "tags" : [
        ]
      }
    ],
    "commit" : "8cc238f564dede74ec426873ee3a3d6727ff811f",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +407,411 @@                module.fail_json(dest=path, src=src, msg='Cannot link, %s exists at destination' % prev_state)\n        elif prev_state == 'directory':\n            changed = True\n            if os.path.exists(b_path):\n                if state == 'hard' and os.stat(b_path).st_ino == os.stat(b_src).st_ino:"
  },
  {
    "id" : "8e951af6-7201-47e0-bc8f-24464d7a8059",
    "prId" : 39345,
    "prUrl" : "https://github.com/ansible/ansible/pull/39345#pullrequestreview-119308565",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "58faa85a-aece-40f2-9aca-329fcb270104",
        "parentId" : null,
        "authorId" : "d7d8721c-7ad0-4834-9a3d-b53ca8656789",
        "body" : "Should this be `_original_basename` to match `_diff_peek`?",
        "createdAt" : "2018-05-10T10:19:59Z",
        "updatedAt" : "2018-05-10T10:48:13Z",
        "lastEditedBy" : "d7d8721c-7ad0-4834-9a3d-b53ca8656789",
        "tags" : [
        ]
      },
      {
        "id" : "3f3eec79-cf5f-4afc-81e4-51f488061c58",
        "parentId" : "58faa85a-aece-40f2-9aca-329fcb270104",
        "authorId" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "body" : "original_basename is used for more than one module in several action_plugins.  I'll have to look at each place to see if they should all be made private or if certain ones call file while others are calling (for instance) copy.",
        "createdAt" : "2018-05-11T03:21:30Z",
        "updatedAt" : "2018-05-11T03:21:30Z",
        "lastEditedBy" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "tags" : [
        ]
      }
    ],
    "commit" : "10f0bcce9c3e73f49fb49c667eb357b54235fa85",
    "line" : 686,
    "diffHunk" : "@@ -1,1 +591,595 @@            state=dict(choices=['file', 'directory', 'link', 'hard', 'touch', 'absent'], default=None),\n            path=dict(aliases=['dest', 'name'], required=True, type='path'),\n            original_basename=dict(required=False),  # Internal use only, for recursive ops\n            recurse=dict(default=False, type='bool'),\n            force=dict(required=False, default=False, type='bool'),  # Note: Should not be in file_common_args in future"
  },
  {
    "id" : "c847826f-bf58-4866-ad0e-98583395a72d",
    "prId" : 40326,
    "prUrl" : "https://github.com/ansible/ansible/pull/40326#pullrequestreview-121234716",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bde0edb8-6166-483d-9de7-ff5fa146ae4a",
        "parentId" : null,
        "authorId" : "311820dd-fcb9-46df-a201-9c0e7d6fac58",
        "body" : "why not an `else` or `elif prev_state == 'directory'` around all this to avoid the repetition of the return? That's a maintenance trip hazard...",
        "createdAt" : "2018-05-17T21:31:19Z",
        "updatedAt" : "2018-05-17T21:33:57Z",
        "lastEditedBy" : "311820dd-fcb9-46df-a201-9c0e7d6fac58",
        "tags" : [
        ]
      },
      {
        "id" : "6f01377f-bf76-4407-9049-a3d54f771cb0",
        "parentId" : "bde0edb8-6166-483d-9de7-ff5fa146ae4a",
        "authorId" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "body" : "I can't remember if it was Jack Dietrich's talk here at pycon or Armin Ronacher's slide deck about API design but returning early should make this less of a trip hazard.  When you return early, you know at the end of the conditional block that you don't have to read any further in the function for more information and don't have to jump back and forth to look for what a variable's value might be.\r\n\r\nOnce I added the return value to the condtition for that reason, it seemed to make sense to remove the ```elif prev_state == 'directory':``` which I had before.  Removing it makes the code read as having one main expected path (the idempotent path in this case), and several branches from it.  It also means that you don't end the code with a single return value (where, if you're having to trace back through the code from the return, you then have to figure out where the condition jumped from.)  I could see putting the code (sans final return) back into an ```elif``` block but after thinking about it for a few days,  I think it makes the code less clear to do it that way.",
        "createdAt" : "2018-05-17T22:11:10Z",
        "updatedAt" : "2018-05-17T22:11:11Z",
        "lastEditedBy" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "tags" : [
        ]
      }
    ],
    "commit" : "9edce63a93caaeebb62f60f1661cf5475ac87c73",
    "line" : 108,
    "diffHunk" : "@@ -1,1 +453,457 @@                                          'path': path})\n\n    #\n    # previous state == directory\n    #"
  }
]