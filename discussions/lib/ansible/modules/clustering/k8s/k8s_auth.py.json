[
  {
    "id" : "e19093f1-040c-44ab-bcc8-af2a17c8fe5c",
    "prId" : 50807,
    "prUrl" : "https://github.com/ansible/ansible/pull/50807#pullrequestreview-195970704",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "05d4d6b0-edb0-46e5-92b4-9d145ad0b5d5",
        "parentId" : null,
        "authorId" : "4abe4d0b-0492-400c-bd28-ab69d445fa0a",
        "body" : "It may make more sense to call it like `k8s_oauth_token` or something, I would assume I could use this for generic authorization otherwise. Alternatively we could just make it succeed with a no-op in the case that the cluster doesn't support oauth.",
        "createdAt" : "2019-01-17T20:25:22Z",
        "updatedAt" : "2019-01-25T16:56:28Z",
        "lastEditedBy" : "4abe4d0b-0492-400c-bd28-ab69d445fa0a",
        "tags" : [
        ]
      },
      {
        "id" : "e598a7fa-2696-45bb-a0ed-5b95fb0e14bc",
        "parentId" : "05d4d6b0-edb0-46e5-92b4-9d145ad0b5d5",
        "authorId" : "394179c0-dbea-4aea-b0ae-70b635ae70cb",
        "body" : "My thinking in naming it `k8s_auth` was that it should support all the auth mechanisms that will be used for k8s clusters now or in the future. With openshift that's only oauth, but if something somewhere started using zauth or ëauth, that support should be added to this module ideally with some autodetection (which should be trivial).\r\n\r\nAs to succeeding even when there's no oauth – that'd only be an option if the module first checked for oauth and if that was gone, tried to perform an operation with http basic auth to verify that that in fact works aka that the auth credentials are correct. (Same logic with using client cert instead of user+pwd, should someone add that eventually.) And depending on whether it got oauth or not, the return structure would either contain a token and an empty `password` field or an empty `api_key` field and valid user+pwd. So the fact/anchor creation code from the example would look like this:\r\n\r\n```\r\n- set_fact:\r\n    k8s_auth_params: &k8s_auth_params\r\n        host: \"{{ k8s_auth_results.k8s_auth.host }}\"\r\n        ssl_ca_cert: \"{{ k8s_auth_results.k8s_auth.ssl_ca_cert }}\"\r\n        verify_ssl: \"{{ k8s_auth_results.k8s_auth.verify_ssl }}\"\r\n        api_key: \"{{ k8s_auth_results.k8s_auth.api_key }}\"\r\n        username: \"{{ k8s_auth_results.k8s_auth.username }}\"\r\n        password: \"{{ k8s_auth_results.k8s_auth.password }}\"\r\n```\r\n\r\nand the `k8s_auth_params` anchor could be used universally as it'd then work both with openshift and k8s clusters. Though again – that would depend on  `api_key` being non–null with openshift and `password` being non–null with http basic auth. I'm not exactly sure that doing the latter (returning a password and storing it) is a valid thing to do in ansible and whether the whole thing isn't too contrived.\r\n\r\n@willthames, could you maybe comment as well?\r\n\r\n",
        "createdAt" : "2019-01-18T14:40:07Z",
        "updatedAt" : "2019-01-25T16:56:28Z",
        "lastEditedBy" : "394179c0-dbea-4aea-b0ae-70b635ae70cb",
        "tags" : [
        ]
      },
      {
        "id" : "9df368f5-4ffe-4595-85f0-06fde112fc01",
        "parentId" : "05d4d6b0-edb0-46e5-92b4-9d145ad0b5d5",
        "authorId" : "4abe4d0b-0492-400c-bd28-ab69d445fa0a",
        "body" : "makes sense to me, I think in the long term it would be cool to be able to dump in all your parameters and get back a valid param block that you can add to module_defaults.",
        "createdAt" : "2019-01-23T18:17:58Z",
        "updatedAt" : "2019-01-25T16:56:28Z",
        "lastEditedBy" : "4abe4d0b-0492-400c-bd28-ab69d445fa0a",
        "tags" : [
        ]
      },
      {
        "id" : "d2cfaa85-6dec-4067-8231-778d495eb4c2",
        "parentId" : "05d4d6b0-edb0-46e5-92b4-9d145ad0b5d5",
        "authorId" : "394179c0-dbea-4aea-b0ae-70b635ae70cb",
        "body" : "Ok, I've added a comment about this with a link to this particular part of the discussion, so that future changes stay in line with this general design.\r\n\r\nAs to implementing http basic auth – I've only gotten the go ahead to implement openshift for now (and the description for the module reflects that). If I get a green light from my team to take care of doing the group module defaults thing, I'll make sure to also add http basic auth fallback to this module and have this be as universal and easy to use as possible.",
        "createdAt" : "2019-01-24T09:43:16Z",
        "updatedAt" : "2019-01-25T16:56:28Z",
        "lastEditedBy" : "394179c0-dbea-4aea-b0ae-70b635ae70cb",
        "tags" : [
        ]
      },
      {
        "id" : "3419dc79-d7fd-4960-b5f5-0aaecc71411a",
        "parentId" : "05d4d6b0-edb0-46e5-92b4-9d145ad0b5d5",
        "authorId" : "183d9a20-6a5e-4432-9fe9-9fd6fe9514fb",
        "body" : "By group module_defaults do you mean https://github.com/ansible/ansible/pull/51093 ?",
        "createdAt" : "2019-01-24T10:00:30Z",
        "updatedAt" : "2019-01-25T16:56:28Z",
        "lastEditedBy" : "183d9a20-6a5e-4432-9fe9-9fd6fe9514fb",
        "tags" : [
        ]
      },
      {
        "id" : "c2c8b2a8-a0eb-404c-8b89-cfef10bbcf58",
        "parentId" : "05d4d6b0-edb0-46e5-92b4-9d145ad0b5d5",
        "authorId" : "394179c0-dbea-4aea-b0ae-70b635ae70cb",
        "body" : "Ah, great, having this exist will make my job much easier.",
        "createdAt" : "2019-01-24T11:04:39Z",
        "updatedAt" : "2019-01-25T16:56:28Z",
        "lastEditedBy" : "394179c0-dbea-4aea-b0ae-70b635ae70cb",
        "tags" : [
        ]
      }
    ],
    "commit" : "d84612b448bef63bfe7da1153968345299790db7",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +16,20 @@DOCUMENTATION = '''\n\nmodule: k8s_auth\n\nshort_description: Authenticate to Kubernetes clusters which require an explicit login step"
  },
  {
    "id" : "51978da1-d03a-436a-81ef-a11289b84e08",
    "prId" : 50807,
    "prUrl" : "https://github.com/ansible/ansible/pull/50807#pullrequestreview-193821151",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4d3211a0-357f-47fc-b052-cf69b64a164a",
        "parentId" : null,
        "authorId" : "4abe4d0b-0492-400c-bd28-ab69d445fa0a",
        "body" : "I need to verify it has to be a path and that you can't specify the cert directly.",
        "createdAt" : "2019-01-17T20:27:02Z",
        "updatedAt" : "2019-01-25T16:56:28Z",
        "lastEditedBy" : "4abe4d0b-0492-400c-bd28-ab69d445fa0a",
        "tags" : [
        ]
      }
    ],
    "commit" : "d84612b448bef63bfe7da1153968345299790db7",
    "line" : 58,
    "diffHunk" : "@@ -1,1 +56,60 @@  ssl_ca_cert:\n    description:\n    - \"Path to a CA certificate file used to verify connection to the API server. The full certificate chain\n      must be provided to avoid certificate validation errors.\"\n  verify_ssl:"
  },
  {
    "id" : "cdb952a2-f65f-4c3c-82ac-79b4a85cec15",
    "prId" : 50807,
    "prUrl" : "https://github.com/ansible/ansible/pull/50807#pullrequestreview-195020463",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b22deef8-33b4-4b5c-87cf-fc243433730f",
        "parentId" : null,
        "authorId" : "183d9a20-6a5e-4432-9fe9-9fd6fe9514fb",
        "body" : "Needs a `default: true` to match the argument spec.",
        "createdAt" : "2019-01-21T23:41:03Z",
        "updatedAt" : "2019-01-25T16:56:28Z",
        "lastEditedBy" : "183d9a20-6a5e-4432-9fe9-9fd6fe9514fb",
        "tags" : [
        ]
      },
      {
        "id" : "1210b506-0ce2-41a8-ab93-46928efbfa2c",
        "parentId" : "b22deef8-33b4-4b5c-87cf-fc243433730f",
        "authorId" : "394179c0-dbea-4aea-b0ae-70b635ae70cb",
        "body" : "I've changed it, but it looks really weird to me…",
        "createdAt" : "2019-01-22T13:32:23Z",
        "updatedAt" : "2019-01-25T16:56:28Z",
        "lastEditedBy" : "394179c0-dbea-4aea-b0ae-70b635ae70cb",
        "tags" : [
        ]
      },
      {
        "id" : "434ce510-ad54-48ba-8206-530fa32ec7ad",
        "parentId" : "b22deef8-33b4-4b5c-87cf-fc243433730f",
        "authorId" : "394179c0-dbea-4aea-b0ae-70b635ae70cb",
        "body" : "Ok, please disregard that comment, fixed now.",
        "createdAt" : "2019-01-22T14:05:29Z",
        "updatedAt" : "2019-01-25T16:56:28Z",
        "lastEditedBy" : "394179c0-dbea-4aea-b0ae-70b635ae70cb",
        "tags" : [
        ]
      }
    ],
    "commit" : "d84612b448bef63bfe7da1153968345299790db7",
    "line" : 139,
    "diffHunk" : "@@ -1,1 +137,141 @@      description: \"Whether or not to verify the API server's SSL certificates.\"\n      returned: success\n      type: bool\n    username:\n      description: Username for authenticating with the API server."
  },
  {
    "id" : "ec3e1629-1601-4b2f-ab9f-a96ad28e0f85",
    "prId" : 50807,
    "prUrl" : "https://github.com/ansible/ansible/pull/50807#pullrequestreview-195093930",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cc933a40-26d0-4d2e-bbce-3685fae0b47e",
        "parentId" : null,
        "authorId" : "183d9a20-6a5e-4432-9fe9-9fd6fe9514fb",
        "body" : "use ansible.module_utils.url rather than requests",
        "createdAt" : "2019-01-21T23:43:32Z",
        "updatedAt" : "2019-01-25T16:56:28Z",
        "lastEditedBy" : "183d9a20-6a5e-4432-9fe9-9fd6fe9514fb",
        "tags" : [
        ]
      },
      {
        "id" : "f259dfbd-d073-4e97-a554-0e900e64d61f",
        "parentId" : "cc933a40-26d0-4d2e-bbce-3685fae0b47e",
        "authorId" : "394179c0-dbea-4aea-b0ae-70b635ae70cb",
        "body" : "Are there any docs for it?",
        "createdAt" : "2019-01-22T13:38:36Z",
        "updatedAt" : "2019-01-25T16:56:28Z",
        "lastEditedBy" : "394179c0-dbea-4aea-b0ae-70b635ae70cb",
        "tags" : [
        ]
      },
      {
        "id" : "1989344f-1637-485d-8756-1ed5f09cad1d",
        "parentId" : "cc933a40-26d0-4d2e-bbce-3685fae0b47e",
        "authorId" : "394179c0-dbea-4aea-b0ae-70b635ae70cb",
        "body" : "Nope, and it doesn't support `ca_path`.",
        "createdAt" : "2019-01-22T16:11:28Z",
        "updatedAt" : "2019-01-25T16:56:28Z",
        "lastEditedBy" : "394179c0-dbea-4aea-b0ae-70b635ae70cb",
        "tags" : [
        ]
      }
    ],
    "commit" : "d84612b448bef63bfe7da1153968345299790db7",
    "line" : 154,
    "diffHunk" : "@@ -1,1 +152,156 @@# 3rd party imports\ntry:\n    import requests\n    HAS_REQUESTS = True\nexcept ImportError:"
  },
  {
    "id" : "6fae8c13-9414-4a6b-b4d5-3274e2419553",
    "prId" : 50807,
    "prUrl" : "https://github.com/ansible/ansible/pull/50807#pullrequestreview-195456949",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7145130c-a13b-4d86-9cc1-a56d26e22467",
        "parentId" : null,
        "authorId" : "dc5d177e-39f6-4639-af9d-4b2cdbbe1450",
        "body" : "This brings unnecessary complexity to user, why not make it simpler, and set such fact inside the module?",
        "createdAt" : "2019-01-22T20:18:45Z",
        "updatedAt" : "2019-01-25T16:56:28Z",
        "lastEditedBy" : "dc5d177e-39f6-4639-af9d-4b2cdbbe1450",
        "tags" : [
        ]
      },
      {
        "id" : "237b8610-a87e-48bd-bd2f-06ec9b8f8975",
        "parentId" : "7145130c-a13b-4d86-9cc1-a56d26e22467",
        "authorId" : "183d9a20-6a5e-4432-9fe9-9fd6fe9514fb",
        "body" : "Are you suggesting using `ansible_facts` for that (which seems like a bit of a hack?). I'm not aware of another way of transferring state from one module to other modules.\r\n\r\nEven if using `ansible_facts` (and I don't think we should) we still need to document for people with `INJECT_FACTS_AS_VARS` set to False",
        "createdAt" : "2019-01-23T00:57:11Z",
        "updatedAt" : "2019-01-25T16:56:28Z",
        "lastEditedBy" : "183d9a20-6a5e-4432-9fe9-9fd6fe9514fb",
        "tags" : [
        ]
      },
      {
        "id" : "a30ff265-865b-4f22-ba2f-c1cd6bec4f56",
        "parentId" : "7145130c-a13b-4d86-9cc1-a56d26e22467",
        "authorId" : "394179c0-dbea-4aea-b0ae-70b635ae70cb",
        "body" : "I'm pretty sure Ondra's suggesting returning to my initial code with the module accepting an `k8s_auth` dict as a parameter (as well as returning one) and having all of the k8s modules accept that.\r\n\r\nSummary of the discussion around this is – the proper way to do this kind of thing going forward will be with with [module defaults for groups](https://github.com/ansible/ansible/blob/devel/docs/docsite/rst/user_guide/playbooks_module_defaults.rst#module-defaults-groups), which became available since 2.7. So the yaml anchor usage in the EXAMPLE is basically just a stop–gap for how this will end up being used properly in the future.\r\n\r\nSo while it made sense to implement a dedicated auth dict parameter for groups of modules pre–2.7, it really would not be the proper implementation nowadays.",
        "createdAt" : "2019-01-23T09:56:56Z",
        "updatedAt" : "2019-01-25T16:56:28Z",
        "lastEditedBy" : "394179c0-dbea-4aea-b0ae-70b635ae70cb",
        "tags" : [
        ]
      },
      {
        "id" : "acdf10d0-bf65-4f8c-a1a6-5383ff66607f",
        "parentId" : "7145130c-a13b-4d86-9cc1-a56d26e22467",
        "authorId" : "dc5d177e-39f6-4639-af9d-4b2cdbbe1450",
        "body" : "Yes, I meant using `ansible_facts`, but now I realized you can't create anchor from that I guess.\r\nYeah the module defaults solve this quite nice, actually, so forget my comment.",
        "createdAt" : "2019-01-23T10:54:52Z",
        "updatedAt" : "2019-01-25T16:56:28Z",
        "lastEditedBy" : "dc5d177e-39f6-4639-af9d-4b2cdbbe1450",
        "tags" : [
        ]
      }
    ],
    "commit" : "d84612b448bef63bfe7da1153968345299790db7",
    "line" : 92,
    "diffHunk" : "@@ -1,1 +90,94 @@  - name: Preserve auth info as both a fact and a yaml anchor for easy access later\n    # Both the fact and the anchor are called 'k8s_auth_params'\n    set_fact:\n      k8s_auth_params: &k8s_auth_params\n        host: \"{{ k8s_auth_results.k8s_auth.host }}\""
  },
  {
    "id" : "63b6c6ca-54ac-4d19-9d82-d982312b4a0c",
    "prId" : 50807,
    "prUrl" : "https://github.com/ansible/ansible/pull/50807#pullrequestreview-195669394",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "aa5b601e-9397-45d2-9613-bde1f2aa6f75",
        "parentId" : null,
        "authorId" : "dc5d177e-39f6-4639-af9d-4b2cdbbe1450",
        "body" : "Actually, I think it would be better if such functionality is implemented inside openshift SDK, because more client codes could benefit from it, rather then other re-implement it their own way.",
        "createdAt" : "2019-01-22T20:19:57Z",
        "updatedAt" : "2019-01-25T16:56:28Z",
        "lastEditedBy" : "dc5d177e-39f6-4639-af9d-4b2cdbbe1450",
        "tags" : [
        ]
      },
      {
        "id" : "71f5f853-5ab5-4eb3-a63b-ab687d5fbd86",
        "parentId" : "aa5b601e-9397-45d2-9613-bde1f2aa6f75",
        "authorId" : "394179c0-dbea-4aea-b0ae-70b635ae70cb",
        "body" : "Well, the call by the openshift client maintainer (Fabian) was to do this directly in the module, at least initially. If we ever get a need to move that code into the lib, that can be a separate conversation.",
        "createdAt" : "2019-01-23T09:47:00Z",
        "updatedAt" : "2019-01-25T16:56:28Z",
        "lastEditedBy" : "394179c0-dbea-4aea-b0ae-70b635ae70cb",
        "tags" : [
        ]
      },
      {
        "id" : "2918c75a-6ca0-432c-8373-9cb01eeb2d65",
        "parentId" : "aa5b601e-9397-45d2-9613-bde1f2aa6f75",
        "authorId" : "4abe4d0b-0492-400c-bd28-ab69d445fa0a",
        "body" : "Yeah, I think it's best to do it here for now, but I could see incorporating this back into the client later.",
        "createdAt" : "2019-01-23T18:16:14Z",
        "updatedAt" : "2019-01-25T16:56:28Z",
        "lastEditedBy" : "4abe4d0b-0492-400c-bd28-ab69d445fa0a",
        "tags" : [
        ]
      }
    ],
    "commit" : "d84612b448bef63bfe7da1153968345299790db7",
    "line" : 261,
    "diffHunk" : "@@ -1,1 +259,263 @@\n    def openshift_login(self):\n        os_oauth = OAuth2Session(client_id='openshift-challenging-client')\n        authorization_url, state = os_oauth.authorization_url(self.openshift_auth_endpoint,\n                                                              state=\"1\", code_challenge_method='S256')"
  }
]