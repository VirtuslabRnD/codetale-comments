[
  {
    "id" : "f4bdf0e8-c999-456e-b2ef-9e92b809315c",
    "prId" : 33195,
    "prUrl" : "https://github.com/ansible/ansible/pull/33195#pullrequestreview-79907161",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e50fa1e7-4791-4e0c-934a-17f9eec13311",
        "parentId" : null,
        "authorId" : "7c3d1362-6754-4b76-8c34-1156ef3d8a54",
        "body" : "It would be easier if RPM and DEB were to give the same structured reply, or having an agnostic module would not be very useful (in cases like \"if upstream version is greater than x.y\"). Comparing versions is a complex operation and there is no filter around `dpkg --compare-versions`.\r\n\r\nAlso having the full version (epoch+upstream+release, following the standard distro notation) along with the upstream version would be useful I think.\r\n",
        "createdAt" : "2017-11-24T04:46:17Z",
        "updatedAt" : "2017-12-14T14:22:04Z",
        "lastEditedBy" : "7c3d1362-6754-4b76-8c34-1156ef3d8a54",
        "tags" : [
        ]
      },
      {
        "id" : "0a9f1f20-7b9e-4ab6-8f0b-2926621bf968",
        "parentId" : "e50fa1e7-4791-4e0c-934a-17f9eec13311",
        "authorId" : "7c3d1362-6754-4b76-8c34-1156ef3d8a54",
        "body" : "So this was my comment from #32871 and as this part of the code did not change it seemed still appropriate. With package namespacing, which can be nice if we want to later support language-specific package manager (pip…), as long as the proposed structure makes it easy to use `ansible_pkg_mgr` to find the \"main\" package manager information, then this is still useful (version comparison and so on).",
        "createdAt" : "2017-11-24T04:55:21Z",
        "updatedAt" : "2017-12-14T14:22:04Z",
        "lastEditedBy" : "7c3d1362-6754-4b76-8c34-1156ef3d8a54",
        "tags" : [
        ]
      },
      {
        "id" : "e9f6e034-c941-4720-b05a-1ab2c8b3b2e9",
        "parentId" : "e50fa1e7-4791-4e0c-934a-17f9eec13311",
        "authorId" : "38f1a2ff-4f1a-4c3d-b78a-3bae3b91d930",
        "body" : "My main concern here with trying to comply with a standard reply structure is when this is eventually extended to all sorts of package managers such as pip, rubygems, maven, ant, npm, cpan, pecl, pear, homebrew, etc etc. What happens when one of those providers doesn't offer the fields we set in the standard response? And what do we do with the extra data outside the bounds of the standard?",
        "createdAt" : "2017-11-28T20:50:57Z",
        "updatedAt" : "2017-12-14T14:22:04Z",
        "lastEditedBy" : "38f1a2ff-4f1a-4c3d-b78a-3bae3b91d930",
        "tags" : [
        ]
      },
      {
        "id" : "ef68c795-e8fe-451e-98c9-4b8e3141bf48",
        "parentId" : "e50fa1e7-4791-4e0c-934a-17f9eec13311",
        "authorId" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "body" : "I would settle on the 'lowest common denominator' as the standard (document in return fields) and make notes about additional fields available depending on package  manager/distro",
        "createdAt" : "2017-11-28T21:17:02Z",
        "updatedAt" : "2017-12-14T14:22:04Z",
        "lastEditedBy" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "tags" : [
        ]
      },
      {
        "id" : "3196c8af-9786-48f2-8544-4ec948c9a8f4",
        "parentId" : "e50fa1e7-4791-4e0c-934a-17f9eec13311",
        "authorId" : "38f1a2ff-4f1a-4c3d-b78a-3bae3b91d930",
        "body" : "Lowest common denominator seems to be `name-version` if we include the language package managers but that's effectively useless when comparing distro packages so I'm not sure how useful it would be in the end.\r\n\r\nWe could have two classifications: `name-version-release` for all distro level packages and then `name-version` for all others.Thoughts?",
        "createdAt" : "2017-11-28T22:04:11Z",
        "updatedAt" : "2017-12-14T14:22:04Z",
        "lastEditedBy" : "38f1a2ff-4f1a-4c3d-b78a-3bae3b91d930",
        "tags" : [
        ]
      },
      {
        "id" : "872842be-8f13-4d42-9879-d1e2f9b1a3c4",
        "parentId" : "e50fa1e7-4791-4e0c-934a-17f9eec13311",
        "authorId" : "7c3d1362-6754-4b76-8c34-1156ef3d8a54",
        "body" : "It seems fine.\r\n\r\nIn this case I think the next step would be to provide a filter able to split this information according to the package manager name and `name-version-release`. This filter would only make sense if used with distro-level results because they have the same concepts of upstream version/distro release number/…. It could be reused outside the scope of this PR, which would be nice.\r\n\r\nThis could be done in a separate PR though.",
        "createdAt" : "2017-11-29T04:08:12Z",
        "updatedAt" : "2017-12-14T14:22:04Z",
        "lastEditedBy" : "7c3d1362-6754-4b76-8c34-1156ef3d8a54",
        "tags" : [
        ]
      },
      {
        "id" : "78f7dc95-5c59-4792-b3a1-593ccb8491ca",
        "parentId" : "e50fa1e7-4791-4e0c-934a-17f9eec13311",
        "authorId" : "38f1a2ff-4f1a-4c3d-b78a-3bae3b91d930",
        "body" : "@duck-rh I don't follow what you mean by a filter, why would we be filtering these here? Seems out of scope for a fact gathering module.",
        "createdAt" : "2017-11-29T14:37:54Z",
        "updatedAt" : "2017-12-14T14:22:04Z",
        "lastEditedBy" : "38f1a2ff-4f1a-4c3d-b78a-3bae3b91d930",
        "tags" : [
        ]
      },
      {
        "id" : "ab025f5b-f7c6-439a-a1fd-d0e8a4b3ef53",
        "parentId" : "e50fa1e7-4791-4e0c-934a-17f9eec13311",
        "authorId" : "38f1a2ff-4f1a-4c3d-b78a-3bae3b91d930",
        "body" : "@bcoca thoughts on the `name-version-release` format for distro packages and `name-version` for \"all others\"?",
        "createdAt" : "2017-11-29T14:38:28Z",
        "updatedAt" : "2017-12-14T14:22:04Z",
        "lastEditedBy" : "38f1a2ff-4f1a-4c3d-b78a-3bae3b91d930",
        "tags" : [
        ]
      },
      {
        "id" : "e75e3201-9fbf-4b0a-9995-d6196544201e",
        "parentId" : "e50fa1e7-4791-4e0c-934a-17f9eec13311",
        "authorId" : "fa0144fc-7424-474a-9ab5-059de28814b7",
        "body" : "Instead of include the 'source' in the package info dict, could the return data have the 'source' as the first level?\r\n\r\nThat way deb/rpm/gem/mypkgformat data schema dont have to match each other exactly, as long as the items inside those keys are the same. (The more consistent and similar they are the better of course, but...)\r\n\r\nie, instead of:\r\n\r\n``` json\r\n{\r\n          \"yum\": [\r\n            {\r\n                \"arch\": \"noarch\",\r\n                \"epoch\": null,\r\n                \"name\": \"yum\",\r\n                \"release\": \"513.fc27\",\r\n                \"source\": \"rpm\",\r\n                \"version\": \"3.4.3\"\r\n            }\r\n          ],\r\n          \"yum-utils\": [\r\n            {\r\n                \"arch\": \"noarch\",\r\n                \"epoch\": null,\r\n                \"name\": \"yum-utils\",\r\n                \"release\": \"513.fc27\",\r\n                \"source\": \"rpm\",\r\n                \"version\": \"1.1.31\"\r\n            }\r\n          ],\r\n        }\r\n```\r\n\r\nsomething like:\r\n\r\n``` json\r\n{\r\n    \"rpm\": {\r\n              \"yum\": [\r\n                {\r\n                    \"arch\": \"noarch\",\r\n                    \"epoch\": null,\r\n                    \"name\": \"yum\",\r\n                    \"release\": \"513.fc27\",\r\n                    \"version\": \"3.4.3\"\r\n                }\r\n              ],\r\n              \"yum-utils\": [\r\n                {\r\n                    \"arch\": \"noarch\",\r\n                    \"epoch\": null,\r\n                    \"name\": \"yum-utils\",\r\n                    \"release\": \"513.fc27\",\r\n                    \"version\": \"1.1.31\"\r\n                }\r\n              ],\r\n            },\r\n    \"deb\": {\r\n             \"somedeb\": [\r\n                 {\r\n                     \"name\": \"somedeb\",\r\n                     \"version\": \"1.1.1-1\",\r\n                     \"arch\": \"amd64\"\r\n                 }\r\n              ],\r\n             \"otherdeb\": [\r\n                 {\r\n                     \"name\": \"otherdeb\",\r\n                     \"version\": \"2.2.2-2\",\r\n                     \"arch\": \"amd64\"\r\n                 }\r\n             ]\r\n    }\r\n}\r\n```\r\n",
        "createdAt" : "2017-11-29T15:48:22Z",
        "updatedAt" : "2017-12-14T14:22:04Z",
        "lastEditedBy" : "fa0144fc-7424-474a-9ab5-059de28814b7",
        "tags" : [
        ]
      },
      {
        "id" : "69bd3678-90a1-406a-b869-f7b9e9d8f5b6",
        "parentId" : "e50fa1e7-4791-4e0c-934a-17f9eec13311",
        "authorId" : "38f1a2ff-4f1a-4c3d-b78a-3bae3b91d930",
        "body" : "We are effectively getting this structure as it stands now, we'll return the `ansible_facts.packages.rpm` or `ansible_facts.packages.deb` and the user will be presented with this namespaced structure as you describe within `ansible_facts.packages` ... if it is preferred to strip out the `source` from the `rpm` entries, that's fine but I think the end result will be the same since you can only gather information from a single package manager per task execution and they are aggregated under the `ansible_facts.packages` dict.",
        "createdAt" : "2017-11-29T16:04:27Z",
        "updatedAt" : "2017-12-14T14:22:04Z",
        "lastEditedBy" : "38f1a2ff-4f1a-4c3d-b78a-3bae3b91d930",
        "tags" : [
        ]
      },
      {
        "id" : "5b813ae3-1652-4878-973a-7439db7e0637",
        "parentId" : "e50fa1e7-4791-4e0c-934a-17f9eec13311",
        "authorId" : "fa0144fc-7424-474a-9ab5-059de28814b7",
        "body" : "@maxamillion Excellent. I missed that there was already a per 'manager' sub dict in the return, so it already does what I was suggesting so that comment can be ignored ;->",
        "createdAt" : "2017-11-29T16:22:25Z",
        "updatedAt" : "2017-12-14T14:22:04Z",
        "lastEditedBy" : "fa0144fc-7424-474a-9ab5-059de28814b7",
        "tags" : [
        ]
      }
    ],
    "commit" : "0d45335d0ac012cb0a34e06528269658539538af",
    "line" : 184,
    "diffHunk" : "@@ -1,1 +182,186 @@    for package in apt_installed_packages:\n        ac_pkg = apt_cache[package].installed\n        package_details = dict(name=package, version=ac_pkg.version, arch=ac_pkg.architecture, source='apt')\n        if package_details['name'] not in installed_packages:\n            installed_packages[package_details['name']] = [package_details]"
  },
  {
    "id" : "9568982a-a70b-44b1-a99b-390e59fd8192",
    "prId" : 49079,
    "prUrl" : "https://github.com/ansible/ansible/pull/49079#pullrequestreview-178843455",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "303926ad-b350-41b4-91eb-4c5576ba36b1",
        "parentId" : null,
        "authorId" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "body" : "Same style please:\r\n```suggestion\r\n    default: [\"auto\"]\r\n```",
        "createdAt" : "2018-11-24T13:37:06Z",
        "updatedAt" : "2019-03-05T22:28:11Z",
        "lastEditedBy" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "tags" : [
        ]
      },
      {
        "id" : "cb705e64-5a30-4d39-81ed-29b40f34ec2a",
        "parentId" : "303926ad-b350-41b4-91eb-4c5576ba36b1",
        "authorId" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "body" : "@bcoca ^",
        "createdAt" : "2018-11-27T15:25:58Z",
        "updatedAt" : "2019-03-05T22:28:11Z",
        "lastEditedBy" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "tags" : [
        ]
      }
    ],
    "commit" : "9b75a4673c8d4d61f7c5936d232850023b51fd8b",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +23,27 @@      - Since 2.8 this is a list and can support multiple package managers per system.\n      - The 'portage' and 'pkg' options were added in version 2.8.\n    default: ['auto']\n    choices: ['auto', 'rpm', 'apt', 'portage', 'pkg']\n    required: False"
  },
  {
    "id" : "c1c1dac2-43e3-484e-a0ab-df7cf2fa8079",
    "prId" : 49079,
    "prUrl" : "https://github.com/ansible/ansible/pull/49079#pullrequestreview-178332398",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cfda9d2e-117f-4b7c-a83c-b0ef48d0e38c",
        "parentId" : null,
        "authorId" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "body" : "Can we use `eix` when it's present?",
        "createdAt" : "2018-11-24T13:38:36Z",
        "updatedAt" : "2019-03-05T22:28:11Z",
        "lastEditedBy" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "tags" : [
        ]
      },
      {
        "id" : "b62532de-5370-4fd6-9e7f-4e8b49d76b38",
        "parentId" : "cfda9d2e-117f-4b7c-a83c-b0ef48d0e38c",
        "authorId" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "body" : "yes and no, eix-installed gives similar info but not the same, i can make a conditional branch but the results will differ.",
        "createdAt" : "2018-11-26T15:04:11Z",
        "updatedAt" : "2019-03-05T22:28:11Z",
        "lastEditedBy" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "tags" : [
        ]
      }
    ],
    "commit" : "9b75a4673c8d4d61f7c5936d232850023b51fd8b",
    "line" : 167,
    "diffHunk" : "@@ -1,1 +240,244 @@class PORTAGE(CLIMgr):\n\n    CLI = 'qlist'\n    atoms = ['category', 'name', 'version', 'ebuild_revision', 'slots', 'prefixes', 'sufixes']\n"
  },
  {
    "id" : "c65e6f53-b55f-446d-bf57-151d1f116ad8",
    "prId" : 49079,
    "prUrl" : "https://github.com/ansible/ansible/pull/49079#pullrequestreview-178841998",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ebfdc7e8-ae7a-48c6-94cf-0e7e7748876d",
        "parentId" : null,
        "authorId" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "body" : "MINOR: i think we decided to prefer literals over calling dict().",
        "createdAt" : "2018-11-26T17:38:17Z",
        "updatedAt" : "2019-03-05T22:28:11Z",
        "lastEditedBy" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "tags" : [
        ]
      },
      {
        "id" : "7ae3de77-662a-4e5f-b8f9-93fe38adcc5c",
        "parentId" : "ebfdc7e8-ae7a-48c6-94cf-0e7e7748876d",
        "authorId" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "body" : "mostly copy/paste from original, i'm fine either way",
        "createdAt" : "2018-11-26T17:40:54Z",
        "updatedAt" : "2019-03-05T22:28:11Z",
        "lastEditedBy" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "tags" : [
        ]
      },
      {
        "id" : "acf0897c-0d74-435c-ba05-741199aae4c0",
        "parentId" : "ebfdc7e8-ae7a-48c6-94cf-0e7e7748876d",
        "authorId" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "body" : "let's stick to literals, please",
        "createdAt" : "2018-11-27T15:23:35Z",
        "updatedAt" : "2019-03-05T22:28:11Z",
        "lastEditedBy" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "tags" : [
        ]
      }
    ],
    "commit" : "9b75a4673c8d4d61f7c5936d232850023b51fd8b",
    "line" : 118,
    "diffHunk" : "@@ -1,1 +191,195 @@    def get_package_details(self, package):\n        ac_pkg = self.pkg_cache[package].installed\n        return dict(name=package, version=ac_pkg.version, arch=ac_pkg.architecture, category=ac_pkg.section, origin=ac_pkg.origins[0].origin)\n\n"
  },
  {
    "id" : "aa7a800a-9514-4feb-bfda-f47b9e73995b",
    "prId" : 49079,
    "prUrl" : "https://github.com/ansible/ansible/pull/49079#pullrequestreview-178422656",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6fd5cbd2-268c-4b0c-b1ba-8aee644c33d8",
        "parentId" : null,
        "authorId" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "body" : "This will lead to duplicates.  It will be better to do:\r\n``` python\r\nif 'auto' in managers:\r\n    managers = list(PKG_MANAGERS.keys())\r\n```",
        "createdAt" : "2018-11-26T17:46:09Z",
        "updatedAt" : "2019-03-05T22:28:11Z",
        "lastEditedBy" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "tags" : [
        ]
      },
      {
        "id" : "c9af99f0-2bcb-41c1-b9ee-269d1baed2be",
        "parentId" : "6fd5cbd2-268c-4b0c-b1ba-8aee644c33d8",
        "authorId" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "body" : "Ah... I see that you want to preserve order.  You should take the comment from below and add it here.",
        "createdAt" : "2018-11-26T17:48:22Z",
        "updatedAt" : "2019-03-05T22:28:11Z",
        "lastEditedBy" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "tags" : [
        ]
      },
      {
        "id" : "5c8d2232-b966-4478-b25b-a3c5a0498404",
        "parentId" : "6fd5cbd2-268c-4b0c-b1ba-8aee644c33d8",
        "authorId" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "body" : "i want to let user set order, i do dedupe later on",
        "createdAt" : "2018-11-26T17:58:14Z",
        "updatedAt" : "2019-03-05T22:28:11Z",
        "lastEditedBy" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "tags" : [
        ]
      }
    ],
    "commit" : "9b75a4673c8d4d61f7c5936d232850023b51fd8b",
    "line" : 202,
    "diffHunk" : "@@ -1,1 +272,276 @@        # keep order from user, we do dedupe below\n        managers.extend(PKG_MANAGER_NAMES)\n        managers.remove('auto')\n\n    unsupported = set(managers).difference(PKG_MANAGER_NAMES)"
  },
  {
    "id" : "dadcc5c3-f8f4-4e1d-94cf-623c3ea8565b",
    "prId" : 49079,
    "prUrl" : "https://github.com/ansible/ansible/pull/49079#pullrequestreview-178438273",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6b6547bd-8afc-44d6-9b5a-1fd17a2f66a4",
        "parentId" : null,
        "authorId" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "body" : "If we just use found for the purpose of this error, then it should be a boolean.  We might want to do something more complex with errors, though, in which case we'd want it to be something more than either a boolean or a simple count.",
        "createdAt" : "2018-11-26T18:05:41Z",
        "updatedAt" : "2019-03-05T22:28:11Z",
        "lastEditedBy" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "tags" : [
        ]
      },
      {
        "id" : "875efc87-b43d-4852-8a04-ebbd6f369795",
        "parentId" : "6b6547bd-8afc-44d6-9b5a-1fd17a2f66a4",
        "authorId" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "body" : "i now distinguish between test failure and other errors, so this should show as warnings or errors depending on which path they hit",
        "createdAt" : "2018-11-26T18:34:34Z",
        "updatedAt" : "2019-03-05T22:28:11Z",
        "lastEditedBy" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "tags" : [
        ]
      }
    ],
    "commit" : "9b75a4673c8d4d61f7c5936d232850023b51fd8b",
    "line" : 263,
    "diffHunk" : "@@ -1,1 +305,309 @@                module.warn('Failed to retrieve packages with %s: %s' % (pkgmgr, to_text(e)))\n\n    if found == 0:\n        module.fail_json(msg='Could not detect a supported package manager from the following list: %s' % managers)\n"
  },
  {
    "id" : "0f4c2ddc-3319-4386-98d0-9945d7d08146",
    "prId" : 49079,
    "prUrl" : "https://github.com/ansible/ansible/pull/49079#pullrequestreview-182354994",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c92f05d5-d9e9-4572-8887-1d3ca261e6ca",
        "parentId" : null,
        "authorId" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "body" : "Why not initialize the module inside of PkgMgr? You wouldn't have to deal with globals then.",
        "createdAt" : "2018-11-27T16:35:43Z",
        "updatedAt" : "2019-03-05T22:28:11Z",
        "lastEditedBy" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "tags" : [
        ]
      },
      {
        "id" : "dd64b5fe-c3c7-4505-951d-6631e32f3bb8",
        "parentId" : "c92f05d5-d9e9-4572-8887-1d3ca261e6ca",
        "authorId" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "body" : "PkgMgr doesn't have anything to do with module.  A global is the best fit for an AnsibleModule's scope.",
        "createdAt" : "2018-11-27T16:57:02Z",
        "updatedAt" : "2019-03-05T22:28:11Z",
        "lastEditedBy" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "tags" : [
        ]
      },
      {
        "id" : "6601fb85-137a-47a2-b9a1-0e25c4d1599c",
        "parentId" : "c92f05d5-d9e9-4572-8887-1d3ca261e6ca",
        "authorId" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "body" : "Well, you it has methods referring to it. How about passing an instance via initializer?",
        "createdAt" : "2018-11-27T20:05:29Z",
        "updatedAt" : "2019-03-05T22:28:11Z",
        "lastEditedBy" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "tags" : [
        ]
      },
      {
        "id" : "c99cca11-d48f-473c-b9ea-8970bbf8e4d9",
        "parentId" : "c92f05d5-d9e9-4572-8887-1d3ca261e6ca",
        "authorId" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "body" : "As I said, PkgMgr has nothing to do with AnsibleModule.  They're two separate entities.  If you think of it conceptually, it also makes sense.  This whole file is \"an ansible module\".  So any object within the file really should be able to access the AnsibleModule object.  Using a global is a better model of the real world here.",
        "createdAt" : "2018-12-06T17:22:37Z",
        "updatedAt" : "2019-03-05T22:28:11Z",
        "lastEditedBy" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "tags" : [
        ]
      }
    ],
    "commit" : "9b75a4673c8d4d61f7c5936d232850023b51fd8b",
    "line" : 187,
    "diffHunk" : "@@ -1,1 +260,264 @@\n    # start work\n    global module\n    module = AnsibleModule(argument_spec=dict(manager={'type': 'list', 'default': ['auto']},\n                                              strategy={'choices': ['first', 'all'], 'default': 'first'}),"
  },
  {
    "id" : "09167179-b196-4946-9dae-79fa8c42cc8d",
    "prId" : 49079,
    "prUrl" : "https://github.com/ansible/ansible/pull/49079#pullrequestreview-178891275",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a29f6913-a76b-4496-9daf-f20b30065f71",
        "parentId" : null,
        "authorId" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "body" : "Let's stick to CamelCase naming style, it's a class after all:\r\n```suggestion\r\nclass Portage(CLIMgr):\r\n```",
        "createdAt" : "2018-11-27T16:45:21Z",
        "updatedAt" : "2019-03-05T22:28:11Z",
        "lastEditedBy" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "tags" : [
        ]
      }
    ],
    "commit" : "9b75a4673c8d4d61f7c5936d232850023b51fd8b",
    "line" : 165,
    "diffHunk" : "@@ -1,1 +238,242 @@\n\nclass PORTAGE(CLIMgr):\n\n    CLI = 'qlist'"
  },
  {
    "id" : "24df7e1e-f622-409f-97b2-bad3062a7306",
    "prId" : 49079,
    "prUrl" : "https://github.com/ansible/ansible/pull/49079#pullrequestreview-182353564",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "70f0cb53-4afc-4403-880e-44547c55b776",
        "parentId" : null,
        "authorId" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "body" : "How about:\r\n```suggestion\r\n            pkg['version'], _, pkg['revision'] = pkg['version'].partition('_')\r\n            if not pkg['revision']:\r\n                pkg['revision'] = \"0\"\r\n```",
        "createdAt" : "2018-11-27T16:47:27Z",
        "updatedAt" : "2019-03-05T22:28:11Z",
        "lastEditedBy" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "tags" : [
        ]
      },
      {
        "id" : "fb603b8d-27b0-48e5-a37c-c8c519d8858c",
        "parentId" : "70f0cb53-4afc-4403-880e-44547c55b776",
        "authorId" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "body" : "Note, use dummy instead of _ for throwaway variables.",
        "createdAt" : "2018-11-27T17:22:16Z",
        "updatedAt" : "2019-03-05T22:28:11Z",
        "lastEditedBy" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "tags" : [
        ]
      },
      {
        "id" : "b3de0d73-3541-4ac7-ac4a-27a60e39d007",
        "parentId" : "70f0cb53-4afc-4403-880e-44547c55b776",
        "authorId" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "body" : "Why?",
        "createdAt" : "2018-11-27T20:05:50Z",
        "updatedAt" : "2019-03-05T22:28:11Z",
        "lastEditedBy" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "tags" : [
        ]
      },
      {
        "id" : "dc6cd01c-ffe4-4b48-adf3-ad46fb23f4b6",
        "parentId" : "70f0cb53-4afc-4403-880e-44547c55b776",
        "authorId" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "body" : "_ is the accepted alias for gettext functions.  So if we ever decide to i18n and l10n the code, we'll want to use _ for that meaning.  Local variables that override that will then cause unexpected bugs.",
        "createdAt" : "2018-12-06T17:19:18Z",
        "updatedAt" : "2019-03-05T22:28:11Z",
        "lastEditedBy" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "tags" : [
        ]
      }
    ],
    "commit" : "9b75a4673c8d4d61f7c5936d232850023b51fd8b",
    "line" : 155,
    "diffHunk" : "@@ -1,1 +228,232 @@\n            if '_' in pkg['version']:\n                pkg['version'], pkg['revision'] = pkg['version'].split('_', 1)\n            else:\n                pkg['revision'] = '0'"
  },
  {
    "id" : "098f08a8-85bc-4f1b-b8dc-8d5e10868c8e",
    "prId" : 49079,
    "prUrl" : "https://github.com/ansible/ansible/pull/49079#pullrequestreview-178895724",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f8931d27-e372-456e-bac0-2b962d9fd2b1",
        "parentId" : null,
        "authorId" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "body" : "Can we have a dict literal, please?",
        "createdAt" : "2018-11-27T16:53:41Z",
        "updatedAt" : "2019-03-05T22:28:11Z",
        "lastEditedBy" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "tags" : [
        ]
      }
    ],
    "commit" : "9b75a4673c8d4d61f7c5936d232850023b51fd8b",
    "line" : 190,
    "diffHunk" : "@@ -1,1 +261,265 @@    # start work\n    global module\n    module = AnsibleModule(argument_spec=dict(manager={'type': 'list', 'default': ['auto']},\n                                              strategy={'choices': ['first', 'all'], 'default': 'first'}),\n                           supports_check_mode=True)"
  },
  {
    "id" : "d3217be8-0642-44d2-b417-81227981badb",
    "prId" : 49079,
    "prUrl" : "https://github.com/ansible/ansible/pull/49079#pullrequestreview-178899751",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "43e81bab-e1a8-4c3e-86fd-598b90f0ef23",
        "parentId" : null,
        "authorId" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "body" : "snake_case plz\r\n```suggestion\r\n            if pkg_mgr in module.params['manager']:\r\n```",
        "createdAt" : "2018-11-27T17:01:20Z",
        "updatedAt" : "2019-03-05T22:28:11Z",
        "lastEditedBy" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "tags" : [
        ]
      }
    ],
    "commit" : "9b75a4673c8d4d61f7c5936d232850023b51fd8b",
    "line" : 260,
    "diffHunk" : "@@ -1,1 +302,306 @@\n        except Exception as e:\n            if pkgmgr in module.params['manager']:\n                module.warn('Failed to retrieve packages with %s: %s' % (pkgmgr, to_text(e)))\n"
  },
  {
    "id" : "9e3cba1f-f22e-48c6-b9ba-025fa408108f",
    "prId" : 49079,
    "prUrl" : "https://github.com/ansible/ansible/pull/49079#pullrequestreview-183920474",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "877eb190-d78d-423e-a4c1-301537b4b0b7",
        "parentId" : null,
        "authorId" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "body" : "Let's use `RuntimeError`\r\n```suggestion\r\n            raise RuntimeError(\"Unable to list packages rc=%s : %s\" % (rc, err))\r\n```",
        "createdAt" : "2018-12-11T21:49:54Z",
        "updatedAt" : "2019-03-05T22:28:11Z",
        "lastEditedBy" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "tags" : [
        ]
      }
    ],
    "commit" : "9b75a4673c8d4d61f7c5936d232850023b51fd8b",
    "line" : 129,
    "diffHunk" : "@@ -1,1 +202,206 @@        rc, out, err = module.run_command([self._cli, 'query', \"%%%s\" % '\\t%'.join(['n', 'v', 'R', 't', 'a', 'q', 'o', 'p', 'V'])])\n        if rc != 0 or err:\n            raise Exception(\"Unable to list packages rc=%s : %s\" % (rc, err))\n        return out.splitlines()\n"
  },
  {
    "id" : "f6d9c4c8-98dc-44a2-a498-cd8c7717a309",
    "prId" : 56813,
    "prUrl" : "https://github.com/ansible/ansible/pull/56813#pullrequestreview-348817320",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "404246e9-b346-44bf-8c64-34c2840e787e",
        "parentId" : null,
        "authorId" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "body" : "I think the ValueError should continue rather than break.  The logic below is what I think is correct (and I also took the opportunity to get rid of the conditional:\r\n\r\n``` python\r\nfor exe in ('apt', 'apt-get', 'aptitude'):\r\n    try:\r\n        get_bin_path(exe)\r\n        module.warn('Found \"%s\" but %s' % (exe, missing_required_lib('apt')))\r\n        break\r\n    except ValueError:\r\n        continue\r\n```\r\nI'm not sure if removing the conditional altogether reads clearer than the original.  I might do it this way as a compromise:\r\n\r\n``` python\r\nfor exe in ('apt', 'apt-get', 'aptitude'):\r\n    try:\r\n        get_bin_path(exe)\r\n    except ValueError:\r\n        continue\r\n    else:\r\n        module.warn('Found \"%s\" but %s' % (exe, missing_required_lib('apt')))\r\n        break\r\n```",
        "createdAt" : "2020-01-24T18:05:23Z",
        "updatedAt" : "2020-01-27T20:08:39Z",
        "lastEditedBy" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "tags" : [
        ]
      },
      {
        "id" : "d6a3fc64-d3c0-4a58-80ba-2df7d99ff3c3",
        "parentId" : "404246e9-b346-44bf-8c64-34c2840e787e",
        "authorId" : "2f8132dc-12f8-44dc-8b97-1cf4c1616b68",
        "body" : "Going with the second suggestion because I think it reads better.",
        "createdAt" : "2020-01-27T16:52:07Z",
        "updatedAt" : "2020-01-27T20:08:39Z",
        "lastEditedBy" : "2f8132dc-12f8-44dc-8b97-1cf4c1616b68",
        "tags" : [
        ]
      }
    ],
    "commit" : "e0e18b2af29ff08e868387082df828fdf0684f31",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +264,268 @@                try:\n                    get_bin_path(exe)\n                except ValueError:\n                    continue\n                else:"
  },
  {
    "id" : "464b29ed-a7ba-46e2-a8e3-66f6c43e8ed0",
    "prId" : 60574,
    "prUrl" : "https://github.com/ansible/ansible/pull/60574#pullrequestreview-283886362",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "33ed507d-7c7a-4dab-8807-b8ba1e0f1926",
        "parentId" : null,
        "authorId" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "body" : "This second part shouldn't be needed.  The change to line 183 is sufficient.  The cache is initialized on line 186.  That's the expensive operation that needs to be bypassed which changing the check from checking for truthiness to checking for a sentinel (None) will accomplish.",
        "createdAt" : "2019-09-03T19:49:20Z",
        "updatedAt" : "2019-09-03T19:49:20Z",
        "lastEditedBy" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "tags" : [
        ]
      },
      {
        "id" : "931d748a-ed58-40a1-8dbc-ff7c2d513b3e",
        "parentId" : "33ed507d-7c7a-4dab-8807-b8ba1e0f1926",
        "authorId" : "2f8132dc-12f8-44dc-8b97-1cf4c1616b68",
        "body" : "This was a further optimization that did result in a minor but perceptible performance gain.",
        "createdAt" : "2019-09-04T13:29:37Z",
        "updatedAt" : "2019-09-04T13:29:37Z",
        "lastEditedBy" : "2f8132dc-12f8-44dc-8b97-1cf4c1616b68",
        "tags" : [
        ]
      },
      {
        "id" : "02027f83-dd3e-493b-9b69-adc5d8e17a3b",
        "parentId" : "33ed507d-7c7a-4dab-8807-b8ba1e0f1926",
        "authorId" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "body" : "What kind of numbers are we talking about?  function calls are expensive in python but I wouldn't think they're too expensive.  If the additional gain is more than a few seconds (depending on how many packages are installed) I'd be worried that there's something else wrong which would lead to performance problems when using self.pkg_cache in other code.",
        "createdAt" : "2019-09-04T19:18:14Z",
        "updatedAt" : "2019-09-04T19:18:15Z",
        "lastEditedBy" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "tags" : [
        ]
      },
      {
        "id" : "96b63faf-a8b9-48ce-87c3-9c11bf527b87",
        "parentId" : "33ed507d-7c7a-4dab-8807-b8ba1e0f1926",
        "authorId" : "2f8132dc-12f8-44dc-8b97-1cf4c1616b68",
        "body" : "I would have to retest, but I believe it was only a second or two.",
        "createdAt" : "2019-09-04T20:08:09Z",
        "updatedAt" : "2019-09-04T20:08:09Z",
        "lastEditedBy" : "2f8132dc-12f8-44dc-8b97-1cf4c1616b68",
        "tags" : [
        ]
      },
      {
        "id" : "38d3c3e4-71e2-40c5-ac97-e4860a3b9209",
        "parentId" : "33ed507d-7c7a-4dab-8807-b8ba1e0f1926",
        "authorId" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "body" : "Cool, maybe in devel, change the comment then.  ```Avoid the function call to the pkg_cache property inside the loop. Saves a couple seconds```  I'll merge this now.",
        "createdAt" : "2019-09-04T20:38:27Z",
        "updatedAt" : "2019-09-04T20:38:27Z",
        "lastEditedBy" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "tags" : [
        ]
      },
      {
        "id" : "cef1fd0c-55fe-4676-a769-77cd68f23eb6",
        "parentId" : "33ed507d-7c7a-4dab-8807-b8ba1e0f1926",
        "authorId" : "2f8132dc-12f8-44dc-8b97-1cf4c1616b68",
        "body" : "Running the code directly on the managed node shows a negligible difference.\r\n\r\nWith the change that saves the cache to a variable:\r\n```\r\ntime python3 AnsiballZ_package_facts.py\r\n...\r\nreal\t0m1.641s\r\nuser\t0m1.480s\r\nsys\t0m0.156s\r\n```\r\n\r\nWithout:\r\n```\r\ntime python3 ansible-tmp-1567628929.18575-14623375103494-without/AnsiballZ_package_facts.py\r\n...\r\nreal\t0m1.839s\r\nuser\t0m1.574s\r\nsys\t0m0.260s\r\n```\r\n\r\nThe time difference, probably for many other factors, was more perceptible from the control node:\r\n```\r\ntime ansible -i inventory/hosts.yml lab-ub1804 -m package_facts -v # with\r\n...\r\n        4.67 real         1.85 user         0.27 sys\r\n```\r\n\r\n```\r\ntime ansible -i inventory/hosts.yml lab-ub1804 -m package_facts -v # without\r\n...\r\n        5.41 real         1.93 user         0.28 sys\r\n```",
        "createdAt" : "2019-09-04T20:47:39Z",
        "updatedAt" : "2019-09-04T20:57:51Z",
        "lastEditedBy" : "2f8132dc-12f8-44dc-8b97-1cf4c1616b68",
        "tags" : [
        ]
      }
    ],
    "commit" : "9ff41b174dd578368a135660e00728a648955833",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +190,194 @@        # Store the cache to avoid running pkg_cache() for each item in the comprehension, which is very slow\n        cache = self.pkg_cache\n        return [pk for pk in cache.keys() if cache[pk].is_installed]\n\n    def get_package_details(self, package):"
  },
  {
    "id" : "4dc90b2f-883d-4575-bd3c-7eb31728db49",
    "prId" : 62725,
    "prUrl" : "https://github.com/ansible/ansible/pull/62725#pullrequestreview-291558446",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b748e5a8-2482-4df8-ad32-af4f35374b2a",
        "parentId" : null,
        "authorId" : "d4c7fda6-9311-4eb9-91ca-d3f1cbccd288",
        "body" : "Would not an example be displayed on the module's documentation if `sample` were used instead of `sample_rpm` ? I guess `sample_deb` could be kept as is (and won't be displayed at all).\r\n\r\nAnother way: keep `sample_rpm` and `sample_deb` untouched and add a `sample` entries containing only the documented keys (`name`, `source`, `version`).",
        "createdAt" : "2019-09-23T00:06:24Z",
        "updatedAt" : "2019-09-23T04:12:11Z",
        "lastEditedBy" : "d4c7fda6-9311-4eb9-91ca-d3f1cbccd288",
        "tags" : [
        ]
      },
      {
        "id" : "e608477c-cf9d-47e7-99f1-bfbc5c06f1ab",
        "parentId" : "b748e5a8-2482-4df8-ad32-af4f35374b2a",
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "Good point! I added a stripped down version of `sample_rpm`, which contains only the documented keys. (Disadvantage: both kernels have the same version, they only differ in keys not shown.)",
        "createdAt" : "2019-09-23T04:12:59Z",
        "updatedAt" : "2019-09-23T04:12:59Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      }
    ],
    "commit" : "6ea962c93cefc2d9ad8bb48a4d523f7d60393c4a",
    "line" : 66,
    "diffHunk" : "@@ -1,1 +117,121 @@          }\n        }\n      sample_rpm:\n        {\n          \"packages\": {"
  },
  {
    "id" : "8c7253a4-aa3f-4d65-a5e4-714e6984a1d8",
    "prId" : 62725,
    "prUrl" : "https://github.com/ansible/ansible/pull/62725#pullrequestreview-292658787",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "41f8736d-602f-4f0c-8741-1ef4c088b5c4",
        "parentId" : null,
        "authorId" : "c0e0f28b-4885-4cdc-ae3b-b44d1d8d872b",
        "body" : "same version as above?",
        "createdAt" : "2019-09-24T12:30:07Z",
        "updatedAt" : "2019-09-24T12:30:08Z",
        "lastEditedBy" : "c0e0f28b-4885-4cdc-ae3b-b44d1d8d872b",
        "tags" : [
        ]
      },
      {
        "id" : "6d0d1c0d-3172-4551-ae6e-79194958f159",
        "parentId" : "41f8736d-602f-4f0c-8741-1ef4c088b5c4",
        "authorId" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "body" : "Yep, see https://github.com/ansible/ansible/pull/62725#discussion_r326944891 This is a consequence of only mentioning common keys; the difference between the two packages is in `release`; see the `sample_rpm` section (which is only shown in `ansible-doc`, but not in the HTML docs).",
        "createdAt" : "2019-09-24T19:34:31Z",
        "updatedAt" : "2019-09-24T19:34:31Z",
        "lastEditedBy" : "d10c46ef-3d4c-4766-bd09-d27ec4674a84",
        "tags" : [
        ]
      }
    ],
    "commit" : "6ea962c93cefc2d9ad8bb48a4d523f7d60393c4a",
    "line" : 50,
    "diffHunk" : "@@ -1,1 +101,105 @@                \"name\": \"kernel\",\n                \"source\": \"rpm\",\n                \"version\": \"3.10.0\",\n                ...\n              },"
  }
]