[
  {
    "id" : "17f63af0-e91e-41ed-bdd9-b1c299ae5a73",
    "prId" : 20349,
    "prUrl" : "https://github.com/ansible/ansible/pull/20349#pullrequestreview-19131797",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "77fccb62-fe1f-4460-9b4b-72a4c5819852",
        "parentId" : null,
        "authorId" : "f239a73a-a28d-436b-80b0-e91c91281bb6",
        "body" : "Imo `params` is not the right place for this. Since you once use the content here, why not call it `diff`?",
        "createdAt" : "2017-01-22T15:05:12Z",
        "updatedAt" : "2017-01-30T08:58:03Z",
        "lastEditedBy" : "f239a73a-a28d-436b-80b0-e91c91281bb6",
        "tags" : [
        ]
      },
      {
        "id" : "9f4fdf7f-607b-4138-a1e8-1fc8a30255a9",
        "parentId" : "77fccb62-fe1f-4460-9b4b-72a4c5819852",
        "authorId" : "f01f60d2-e084-44c7-baad-7798a8518fb2",
        "body" : "This function returns `params`, which is then passed to `module.exit_json()`.  I need to set `params['diff']` to make the diff possible when `check_mode` is `False`.",
        "createdAt" : "2017-01-23T10:19:38Z",
        "updatedAt" : "2017-01-30T08:58:03Z",
        "lastEditedBy" : "f01f60d2-e084-44c7-baad-7798a8518fb2",
        "tags" : [
        ]
      },
      {
        "id" : "f1e8e124-83e3-40a7-83dc-05a8c5665dfd",
        "parentId" : "77fccb62-fe1f-4460-9b4b-72a4c5819852",
        "authorId" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "body" : "i agree params is not the correct thing to use for return data .. but it would a separate fix for the module",
        "createdAt" : "2017-01-30T17:05:00Z",
        "updatedAt" : "2017-01-30T17:05:00Z",
        "lastEditedBy" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "tags" : [
        ]
      }
    ],
    "commit" : "28b37e39c86ab58b2e162870b85cef2b67de6e6b",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +120,124 @@    found,replace_or_add,found_line,key=search_for_host_key(module,host,key,hash_host,path,sshkeygen)\n\n    params['diff'] = compute_diff(path, found_line, replace_or_add, state, key)\n\n    #We will change state if found==True & state!=\"present\""
  },
  {
    "id" : "a9fe561c-76f3-4ae1-8601-f0b718386d40",
    "prId" : 20349,
    "prUrl" : "https://github.com/ansible/ansible/pull/20349#pullrequestreview-19147197",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e0dd28a2-f0c4-4627-8d6e-53631ddb38fe",
        "parentId" : null,
        "authorId" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "body" : "many changes that don't have to do with diff",
        "createdAt" : "2017-01-30T14:27:08Z",
        "updatedAt" : "2017-01-30T14:28:03Z",
        "lastEditedBy" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "tags" : [
        ]
      },
      {
        "id" : "ffea048d-490d-4d8f-8e6c-91793a65ab29",
        "parentId" : "e0dd28a2-f0c4-4627-8d6e-53631ddb38fe",
        "authorId" : "f01f60d2-e084-44c7-baad-7798a8518fb2",
        "body" : "The reason those changes are there:\r\n- I was asked to write an integration test\r\n- the integration test uncovered some minor buglets in the code\r\n- I had to fix those buglets to make the new integration test pass\r\n\r\nIncidentally, the extra buglets were these two:\r\n- the known_hosts module didn't work under Python 3 (not a blocker, since modules aren't expected to work under Python 3, but I didn't like the yellow blob in Shippable and the fix wasn't large)\r\n- the known_hosts module failed with an error if you specified `hash_host=true` and had a relatively recent OpenSSH version (6.4 or newer) -- looks like this was already filed as bug #20500.\r\n\r\nWould you like me to extract the integration test and the bugfixes into a separate PR?  I would prefer not to (it's quite a bit of extra work for me), but I can be easily convinced with a little bit of blackmail (e.g. \"we won't merge this unless you do that\").",
        "createdAt" : "2017-01-30T16:32:09Z",
        "updatedAt" : "2017-01-30T16:32:10Z",
        "lastEditedBy" : "f01f60d2-e084-44c7-baad-7798a8518fb2",
        "tags" : [
        ]
      },
      {
        "id" : "cee59aae-045b-4d86-a43b-f05f6f07079d",
        "parentId" : "e0dd28a2-f0c4-4627-8d6e-53631ddb38fe",
        "authorId" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "body" : "no need for separate, just needed that explanation",
        "createdAt" : "2017-01-30T17:01:56Z",
        "updatedAt" : "2017-01-30T17:01:56Z",
        "lastEditedBy" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "tags" : [
        ]
      },
      {
        "id" : "00ca2108-0eb4-42d6-8ad1-d3a47f6716a1",
        "parentId" : "e0dd28a2-f0c4-4627-8d6e-53631ddb38fe",
        "authorId" : "f01f60d2-e084-44c7-baad-7798a8518fb2",
        "body" : "I keep writing extensive commit messages and then forgetting reviewers have to take extra steps to see them in GitHub's review UI.\r\n\r\n(And when I'm reviewing PRs for projects I maintain, I tend to ignore commit messages and just look at the final diff.)",
        "createdAt" : "2017-01-30T17:11:38Z",
        "updatedAt" : "2017-01-30T17:11:38Z",
        "lastEditedBy" : "f01f60d2-e084-44c7-baad-7798a8518fb2",
        "tags" : [
        ]
      },
      {
        "id" : "d126d798-8e51-40a5-a12b-7182f8943f38",
        "parentId" : "e0dd28a2-f0c4-4627-8d6e-53631ddb38fe",
        "authorId" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "body" : "I normally rebase and put all messages in main commit (which shows in summary by default), but when you are doing several iterations its OK as is. When merging, we normally squash them if you hadn't already.\r\n",
        "createdAt" : "2017-01-30T18:12:59Z",
        "updatedAt" : "2017-01-30T18:13:15Z",
        "lastEditedBy" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "tags" : [
        ]
      }
    ],
    "commit" : "28b37e39c86ab58b2e162870b85cef2b67de6e6b",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +149,153 @@                                     (path,str(e)))\n        try:\n            outf = tempfile.NamedTemporaryFile(mode='w+', dir=os.path.dirname(path))\n            if inf is not None:\n                for line_number, line in enumerate(inf):"
  },
  {
    "id" : "33667996-8c93-4b39-9d09-af872b37bb3f",
    "prId" : 20349,
    "prUrl" : "https://github.com/ansible/ansible/pull/20349#pullrequestreview-19147308",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3a641c59-8bc1-4e1f-b6b4-8b21bfbee777",
        "parentId" : null,
        "authorId" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "body" : "why is 1 allowed? afaik this indicates an error in ssh-keygen",
        "createdAt" : "2017-01-30T14:27:25Z",
        "updatedAt" : "2017-01-30T14:28:03Z",
        "lastEditedBy" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "tags" : [
        ]
      },
      {
        "id" : "cb9987ab-7293-448c-a271-daee565c02cc",
        "parentId" : "3a641c59-8bc1-4e1f-b6b4-8b21bfbee777",
        "authorId" : "f01f60d2-e084-44c7-baad-7798a8518fb2",
        "body" : "Yes, this is a bug in ssh-keygen.  The commit message of 5eef669313594c809dfe66f27786618409ed91a0 has all the gory details.\r\n\r\n",
        "createdAt" : "2017-01-30T16:34:00Z",
        "updatedAt" : "2017-01-30T16:34:00Z",
        "lastEditedBy" : "f01f60d2-e084-44c7-baad-7798a8518fb2",
        "tags" : [
        ]
      },
      {
        "id" : "7b14b515-e7e6-4ebc-b2d0-f14809e4afcf",
        "parentId" : "3a641c59-8bc1-4e1f-b6b4-8b21bfbee777",
        "authorId" : "f01f60d2-e084-44c7-baad-7798a8518fb2",
        "body" : "BTW https://github.com/ansible/ansible/commit/dd9d5cc670eccf3c92c8bf974dd294787fe94169 was a workaround for a very similar issue.  And then https://github.com/ansible/ansible/commit/405c6820b0afd74fd335d2d302028e7e816f5bb9 added a 2nd invocation of ssh-keygen, but was apparently never tested with newer OpenSSH versions.",
        "createdAt" : "2017-01-30T16:37:01Z",
        "updatedAt" : "2017-01-30T16:37:01Z",
        "lastEditedBy" : "f01f60d2-e084-44c7-baad-7798a8518fb2",
        "tags" : [
        ]
      },
      {
        "id" : "1804c7f4-e588-4319-924a-dce4c6740beb",
        "parentId" : "3a641c59-8bc1-4e1f-b6b4-8b21bfbee777",
        "authorId" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "body" : "**sigh** i really hate compensating for these types of bugs .... but I don't see we have much of a choice. tempted to add a warning \"your ssh is broken\".",
        "createdAt" : "2017-01-30T17:03:09Z",
        "updatedAt" : "2017-01-30T17:03:10Z",
        "lastEditedBy" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "tags" : [
        ]
      },
      {
        "id" : "1b16c643-b52d-4c0c-98c9-8c8d1553db1f",
        "parentId" : "3a641c59-8bc1-4e1f-b6b4-8b21bfbee777",
        "authorId" : "f01f60d2-e084-44c7-baad-7798a8518fb2",
        "body" : "I feed kind of bad that I didn't report the bug upstream, but \"OpenSSH\" makes me think \"maintained by OpenBSD guys\", which leads to \"probably in some CVS repository from 1998 with a mailing list instead of a bug tracker\", and I don't have the energy.\r\n\r\n(Also I'm probably wrong and they use Git, or at least Subversion now.  Still.)",
        "createdAt" : "2017-01-30T17:09:53Z",
        "updatedAt" : "2017-01-30T17:09:53Z",
        "lastEditedBy" : "f01f60d2-e084-44c7-baad-7798a8518fb2",
        "tags" : [
        ]
      },
      {
        "id" : "21ced0d3-db90-4c75-a1c4-c3ff6bc188f4",
        "parentId" : "3a641c59-8bc1-4e1f-b6b4-8b21bfbee777",
        "authorId" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "body" : "\r\nFYI, https://www.openssh.com/report.html, they use bugzilla.",
        "createdAt" : "2017-01-30T18:13:21Z",
        "updatedAt" : "2017-01-30T18:13:21Z",
        "lastEditedBy" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "tags" : [
        ]
      }
    ],
    "commit" : "28b37e39c86ab58b2e162870b85cef2b67de6e6b",
    "line" : 40,
    "diffHunk" : "@@ -1,1 +244,248 @@    sshkeygen_command.insert(1,'-H')\n    rc,stdout,stderr=module.run_command(sshkeygen_command,check_rc=False)\n    if rc not in (0, 1) or stderr != '': #something went wrong\n        module.fail_json(msg=\"ssh-keygen failed to hash host (rc=%d,stdout='%s',stderr='%s')\" % (rc,stdout,stderr))\n    hashed_lines=stdout.split('\\n')"
  }
]