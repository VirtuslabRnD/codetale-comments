[
  {
    "id" : "8f53beb5-3578-48ec-b979-c34d38b43e28",
    "prId" : 12797,
    "prUrl" : "https://github.com/ansible/ansible/pull/12797#pullrequestreview-42926739",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "78f79757-3320-40d0-b38b-06bf103b58aa",
        "parentId" : null,
        "authorId" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "body" : "Note, anytime we use shlex.split, we have to do a song and dance of converting to byte strings on python2 and text strings on python3. (The reason is that py3 only handles text string input and python2.6 has a bug when it gets text strings as input).  For perfect resilience we should give subprocess.call() a byte string as well (probably doesn't matter as commands probably don't exist in paths with non-ascii parts).\r\n\r\nsomething like:\r\n``` python\r\n        try:\r\n            editor_command = to_native(os.environ.get('EDITOR', 'vi'))\r\n            b_editor = shlex.split(editor_command)\r\n            if PY3:\r\n                b_editor = [to_bytes(elem, errors='surrogate_or_strict') for elem in b_editor] \r\n            b_editor.append(to_bytes(self.config_file, errors='surrogate_or_strict'))\r\n            subprocess.call(b_editor)",
        "createdAt" : "2017-06-08T15:23:01Z",
        "updatedAt" : "2017-06-13T15:35:34Z",
        "lastEditedBy" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "tags" : [
        ]
      },
      {
        "id" : "5710d45f-a895-464e-8fb1-64ba0301b349",
        "parentId" : "78f79757-3320-40d0-b38b-06bf103b58aa",
        "authorId" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "body" : "yeah, this part is WIP, see 'raise not implemented' preceding it",
        "createdAt" : "2017-06-08T15:29:01Z",
        "updatedAt" : "2017-06-13T15:35:34Z",
        "lastEditedBy" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "tags" : [
        ]
      }
    ],
    "commit" : "4bba5474bd2334fff5a1d473b3c9efb1085a063b",
    "line" : 149,
    "diffHunk" : "@@ -1,1 +147,151 @@            editor = shlex.split(os.environ.get('EDITOR','vi'))\n            editor.append(self.config_file)\n            subprocess.call(editor)\n        except Exception as e:\n            raise AnsibleError(\"Failed to open editor: %s\" % to_native(e))"
  },
  {
    "id" : "54bcdff3-4c8f-486b-9465-5e46faabc38b",
    "prId" : 12797,
    "prUrl" : "https://github.com/ansible/ansible/pull/12797#pullrequestreview-42947744",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "71e380ca-9e53-4869-98fd-0c114ec30d20",
        "parentId" : null,
        "authorId" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "body" : "Similar to earlier pager question, I'm not sure this is resistant to tracebacks when there's non-ascii characters.  Stress test with nonascii chars and a locale setting that can't handle non-ascii to see what happens.",
        "createdAt" : "2017-06-08T15:43:19Z",
        "updatedAt" : "2017-06-13T15:35:34Z",
        "lastEditedBy" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "tags" : [
        ]
      },
      {
        "id" : "6d15f4cb-e730-4081-8d72-85eae51aee3e",
        "parentId" : "71e380ca-9e53-4869-98fd-0c114ec30d20",
        "authorId" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "body" : "... On both python2 and python3",
        "createdAt" : "2017-06-08T15:43:35Z",
        "updatedAt" : "2017-06-13T15:35:34Z",
        "lastEditedBy" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "tags" : [
        ]
      },
      {
        "id" : "cc0e6069-557c-418b-9e12-5b53bfd46a2b",
        "parentId" : "71e380ca-9e53-4869-98fd-0c114ec30d20",
        "authorId" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "body" : "Found that the above use of pager can yield tracebacks so need to fix it here too.",
        "createdAt" : "2017-06-08T16:44:38Z",
        "updatedAt" : "2017-06-13T15:35:34Z",
        "lastEditedBy" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "tags" : [
        ]
      }
    ],
    "commit" : "4bba5474bd2334fff5a1d473b3c9efb1085a063b",
    "line" : 156,
    "diffHunk" : "@@ -1,1 +154,158 @@        '''\n        list all current configs reading lib/constants.py and shows env and config file setting names\n        '''\n        self.pager(to_text(yaml.dump(self.config.initial_defs, Dumper=AnsibleDumper), errors='surrogate_or_strict'))\n"
  }
]