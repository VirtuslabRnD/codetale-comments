[
  {
    "id" : "3ecf9166-ded7-4000-9bb7-be288390a2ba",
    "prId" : 32738,
    "prUrl" : "https://github.com/ansible/ansible/pull/32738#pullrequestreview-75451793",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d10cee56-7090-4b98-bfb7-30fac8d2928f",
        "parentId" : null,
        "authorId" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "body" : "I would move the previous:\r\n```from jinja2 import Environment```\r\ninto an 'else/pass' here to make the choice obvious vs the 'masking' of the previous import",
        "createdAt" : "2017-11-09T14:21:32Z",
        "updatedAt" : "2018-05-30T15:06:26Z",
        "lastEditedBy" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "tags" : [
        ]
      }
    ],
    "commit" : "6b1b4bfa30841948fc849c0e095300ab31ca8d2b",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +70,74 @@\nUSE_JINJA2_NATIVE = False\nif C.DEFAULT_JINJA2_NATIVE:\n    try:\n        from jinja2.nativetypes import NativeEnvironment as Environment"
  },
  {
    "id" : "e0a99209-e06b-4584-866c-7963735c00c0",
    "prId" : 52194,
    "prUrl" : "https://github.com/ansible/ansible/pull/52194#pullrequestreview-219204305",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e0023ecd-983d-473b-8089-ba9672210513",
        "parentId" : null,
        "authorId" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "body" : "Braces aren't actually needed if you don't supply args\r\n\r\n```suggestion\r\n        raise NotImplementedError\r\n```",
        "createdAt" : "2019-03-20T19:15:03Z",
        "updatedAt" : "2019-03-28T14:30:33Z",
        "lastEditedBy" : "4ffac6b8-d7eb-449a-8c43-463d9fd5587a",
        "tags" : [
        ]
      },
      {
        "id" : "40f44404-1894-40be-9714-27b92a9ecc13",
        "parentId" : "e0023ecd-983d-473b-8089-ba9672210513",
        "authorId" : "311820dd-fcb9-46df-a201-9c0e7d6fac58",
        "body" : "Yeah, but just because it works doesn't necessarily make it a great practice (see https://www.python.org/dev/peps/pep-0317/ for color); I'd personally rather be explicit about creating a value rather than having an under-the-covers instantiation from the type. I'm also aware of at least one instance where we got nailed by that when someone converted an implicit raise like that to an assignment and borked a bunch of stuff because we were passing around the type instead of an instance (yay for testing, but still). ",
        "createdAt" : "2019-03-26T23:11:58Z",
        "updatedAt" : "2019-03-28T14:30:33Z",
        "lastEditedBy" : "311820dd-fcb9-46df-a201-9c0e7d6fac58",
        "tags" : [
        ]
      }
    ],
    "commit" : "31cc0f2894e4da105f153cfd0e190ca4e602775d",
    "line" : 112,
    "diffHunk" : "@@ -1,1 +327,331 @@\n    def __delitem__(self, key):\n        raise NotImplementedError()\n\n    def __iter__(self):"
  },
  {
    "id" : "d23856e1-8c07-432d-bc80-ff6999d9279c",
    "prId" : 54106,
    "prUrl" : "https://github.com/ansible/ansible/pull/54106#pullrequestreview-217914444",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "28b73b75-038f-41c3-bb9f-7bab177210eb",
        "parentId" : null,
        "authorId" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "body" : "You may want to consider making a wrapper function that checks the jinja2 version before overriding.  The reason being that jinja2 could enhance their dict function in the future at which point we would be providing less features rather than more.",
        "createdAt" : "2019-03-22T18:32:29Z",
        "updatedAt" : "2019-03-22T18:32:30Z",
        "lastEditedBy" : "838eb58c-0fa8-4742-994f-a407c7183e57",
        "tags" : [
        ]
      }
    ],
    "commit" : "0a64adb5638da59e5badc2b994a1bb32f5927ac8",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +728,732 @@\n            # jinja2 global is inconsistent across versions, this normalizes them\n            t.globals['dict'] = dict\n\n            if disable_lookups:"
  },
  {
    "id" : "502c00a8-87f8-4db6-8105-6017cb186b9a",
    "prId" : 57489,
    "prUrl" : "https://github.com/ansible/ansible/pull/57489#pullrequestreview-246657851",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8215a2fd-a78b-40ba-a86c-0ebf4fff1f5f",
        "parentId" : null,
        "authorId" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "body" : "won't we get false positives unless we always consume the generator?  `'{{ this is valid }} but then  {{ this is not'`",
        "createdAt" : "2019-06-06T15:38:35Z",
        "updatedAt" : "2019-06-06T15:38:54Z",
        "lastEditedBy" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "tags" : [
        ]
      },
      {
        "id" : "03c61428-6d4d-426b-9369-b2495e332b55",
        "parentId" : "8215a2fd-a78b-40ba-a86c-0ebf4fff1f5f",
        "authorId" : "4b69a0b5-ac6f-45e9-9507-dd1385182f29",
        "body" : "This is based on the recommendation @jimi-c made.  It's a best effort guess at it being a template.  As long as the first token has a matching closing token as the next token, then we make the assumption it is a template.  It may fail to template later though.",
        "createdAt" : "2019-06-06T15:42:37Z",
        "updatedAt" : "2019-06-06T15:42:37Z",
        "lastEditedBy" : "4b69a0b5-ac6f-45e9-9507-dd1385182f29",
        "tags" : [
        ]
      },
      {
        "id" : "867a5fd5-dcff-4d58-bd46-0abbf85ecc46",
        "parentId" : "8215a2fd-a78b-40ba-a86c-0ebf4fff1f5f",
        "authorId" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "body" : "we'll get syntax error on templating later anyways ",
        "createdAt" : "2019-06-06T15:46:14Z",
        "updatedAt" : "2019-06-06T15:46:15Z",
        "lastEditedBy" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "tags" : [
        ]
      }
    ],
    "commit" : "223b2686636e2bb51ad4aad7ad4b9d720648b5b6",
    "line" : 41,
    "diffHunk" : "@@ -1,1 +190,194 @@                elif comment:\n                    continue\n                return False\n    except TemplateSyntaxError:\n        return False"
  },
  {
    "id" : "36e39afb-a98d-47c0-a7f5-fe9377d05128",
    "prId" : 57489,
    "prUrl" : "https://github.com/ansible/ansible/pull/57489#pullrequestreview-246654179",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f7d7216b-bbfd-4a9c-b10a-0528b42f6e20",
        "parentId" : null,
        "authorId" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "body" : "since you removed all usage, im fine with omitting this line (or at least wrap in deprecation msg)",
        "createdAt" : "2019-06-06T15:40:25Z",
        "updatedAt" : "2019-06-06T15:40:25Z",
        "lastEditedBy" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "tags" : [
        ]
      }
    ],
    "commit" : "223b2686636e2bb51ad4aad7ad4b9d720648b5b6",
    "line" : 99,
    "diffHunk" : "@@ -1,1 +645,649 @@        return False\n\n    templatable = _contains_vars = is_template\n\n    def _convert_bare_variable(self, variable):"
  },
  {
    "id" : "d6431c68-b7d4-4c62-8bd0-a7a0f994ded5",
    "prId" : 68014,
    "prUrl" : "https://github.com/ansible/ansible/pull/68014#pullrequestreview-368990194",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "239269c6-6169-464d-8c1a-3cb53becf96f",
        "parentId" : null,
        "authorId" : "4b69a0b5-ac6f-45e9-9507-dd1385182f29",
        "body" : "Need to add a comment about why I'm not just using `functools.wraps` or `functools.update_wrapper`. This is a copy from py3.7, that doesn't traceback.",
        "createdAt" : "2020-03-04T17:47:33Z",
        "updatedAt" : "2020-06-08T15:05:20Z",
        "lastEditedBy" : "4b69a0b5-ac6f-45e9-9507-dd1385182f29",
        "tags" : [
        ]
      }
    ],
    "commit" : "579e42c2e1333a76c94f2bd4e469f8078fd29529",
    "line" : 49,
    "diffHunk" : "@@ -1,1 +259,263 @@    # This code is duplicated from ``functools.update_wrapper`` from Py3.7.\n    # ``functools.update_wrapper`` was failing when the func was ``functools.partial``\n    for attr in ('__module__', '__name__', '__qualname__', '__doc__', '__annotations__'):\n        try:\n            value = getattr(func, attr)"
  },
  {
    "id" : "0105ebf8-d15e-404e-94c0-9d5f89cc36ce",
    "prId" : 68014,
    "prUrl" : "https://github.com/ansible/ansible/pull/68014#pullrequestreview-425364034",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2192dfda-1f2d-4180-a1be-f03379f49b2b",
        "parentId" : null,
        "authorId" : "94ae5814-8889-4328-9b58-745772997928",
        "body" : "I was thinking of doing this for native jinja too, either here in `_finalize` or in `ansible_native_concat`, to solve https://github.com/ansible/ansible/issues/59019.",
        "createdAt" : "2020-03-06T19:40:04Z",
        "updatedAt" : "2020-06-08T15:05:20Z",
        "lastEditedBy" : "94ae5814-8889-4328-9b58-745772997928",
        "tags" : [
        ]
      },
      {
        "id" : "c783b435-309a-48fc-a164-9808b90406ab",
        "parentId" : "2192dfda-1f2d-4180-a1be-f03379f49b2b",
        "authorId" : "4b69a0b5-ac6f-45e9-9507-dd1385182f29",
        "body" : "I could probably move this above the jinja2 native check in that case then.  I just figured I wouldn't touch native, but I can see a benefit.",
        "createdAt" : "2020-03-06T19:44:57Z",
        "updatedAt" : "2020-06-08T15:05:20Z",
        "lastEditedBy" : "4b69a0b5-ac6f-45e9-9507-dd1385182f29",
        "tags" : [
        ]
      },
      {
        "id" : "3ce5f314-520d-4d70-8d4d-50d96383d0c7",
        "parentId" : "2192dfda-1f2d-4180-a1be-f03379f49b2b",
        "authorId" : "4b69a0b5-ac6f-45e9-9507-dd1385182f29",
        "body" : "Done.",
        "createdAt" : "2020-06-05T14:42:04Z",
        "updatedAt" : "2020-06-08T15:05:20Z",
        "lastEditedBy" : "4b69a0b5-ac6f-45e9-9507-dd1385182f29",
        "tags" : [
        ]
      }
    ],
    "commit" : "579e42c2e1333a76c94f2bd4e469f8078fd29529",
    "line" : 85,
    "diffHunk" : "@@ -1,1 +870,874 @@            # of a template. See ``_unroll_iterator`` for the other case. This is probably\n            # unncessary\n            return list(thing)\n\n        if USE_JINJA2_NATIVE:"
  },
  {
    "id" : "0c7ba93f-a3d9-4c90-8ecb-73c832415609",
    "prId" : 68560,
    "prUrl" : "https://github.com/ansible/ansible/pull/68560#pullrequestreview-465911544",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6d22514c-d309-403c-9db3-7ce95c104170",
        "parentId" : null,
        "authorId" : "4b69a0b5-ac6f-45e9-9507-dd1385182f29",
        "body" : "I question whether this should be an arg for `Templar`.  Just a thought, not a requirement.  Although that could make it harder to use.",
        "createdAt" : "2020-08-11T19:14:03Z",
        "updatedAt" : "2020-09-02T12:30:36Z",
        "lastEditedBy" : "4b69a0b5-ac6f-45e9-9507-dd1385182f29",
        "tags" : [
        ]
      },
      {
        "id" : "4843c120-271b-4195-a024-09ebbec176ca",
        "parentId" : "6d22514c-d309-403c-9db3-7ce95c104170",
        "authorId" : "94ae5814-8889-4328-9b58-745772997928",
        "body" : "I have gone through like 20 iterations of implementing this feature and in like half of them I had `environment_class` as an argument for `Templar` and for a reason I can't remember anymore I decided this was easier.",
        "createdAt" : "2020-08-12T13:24:13Z",
        "updatedAt" : "2020-09-02T12:30:36Z",
        "lastEditedBy" : "94ae5814-8889-4328-9b58-745772997928",
        "tags" : [
        ]
      }
    ],
    "commit" : "51702cb34339cc45269b460905ea2cf61e5198b6",
    "line" : 97,
    "diffHunk" : "@@ -1,1 +613,617 @@        self._fail_on_undefined_errors = C.DEFAULT_UNDEFINED_VAR_BEHAVIOR\n\n        environment_class = AnsibleNativeEnvironment if USE_JINJA2_NATIVE else AnsibleEnvironment\n\n        self.environment = environment_class("
  }
]