[
  {
    "id" : "e3b87d02-2987-4c4f-b446-f58431396dfc",
    "prId" : 3503,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7454d772-891e-4883-ac4a-5afc6da90a78",
        "parentId" : null,
        "authorId" : "ec4d48db-e488-47ba-b17d-0da1c3b9df08",
        "body" : "how is this different than just doing `.toString(encoding)`?\n",
        "createdAt" : "2015-10-23T22:12:09Z",
        "updatedAt" : "2015-10-26T02:26:41Z",
        "lastEditedBy" : "ec4d48db-e488-47ba-b17d-0da1c3b9df08",
        "tags" : [
        ]
      },
      {
        "id" : "5fc1343e-3b0c-4ac9-89ee-aab33912ab14",
        "parentId" : "7454d772-891e-4883-ac4a-5afc6da90a78",
        "authorId" : "ec4d48db-e488-47ba-b17d-0da1c3b9df08",
        "body" : "wait. nm. yes it's almost the weekend. shouldn't be doing a review right now.\n",
        "createdAt" : "2015-10-23T22:12:31Z",
        "updatedAt" : "2015-10-26T02:26:41Z",
        "lastEditedBy" : "ec4d48db-e488-47ba-b17d-0da1c3b9df08",
        "tags" : [
        ]
      }
    ],
    "commit" : "57359cd1e45084ac107ca5b16fe2a1423139d711",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +624,628 @@  var e;\n  try {\n    buf = buf.toString(encoding, 0, end);\n  } catch (err) {\n    e = err;"
  },
  {
    "id" : "48e671ff-e653-410a-8c5e-86a2c5027f92",
    "prId" : 5172,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "19637fcf-fa38-4ba8-a50a-78e3da803229",
        "parentId" : null,
        "authorId" : "d10ccdef-08de-4320-917e-16a9175dedcf",
        "body" : "Seeing these I can't help but wonder if there's value in having a more generic utility `attempt(fn,fin)` mechanism... e.g. \n\n```\nconst attempt = require('internal/util').attempt;\nattempt(() => doSomething(), (threw) => doCleanup())\n```\n\nwhere `attempt()` == \n\n```\nfunction attempt (fn, fin) {\n  var threw = true;\n  try {\n    fn();\n    threw = false;\n  } finally {\n    fin(threw);\n  }\n}\n```\n\nLikely not worth the additional complexity and perf cost tho.\n",
        "createdAt" : "2016-02-11T16:21:30Z",
        "updatedAt" : "2016-04-14T18:59:44Z",
        "lastEditedBy" : "d10ccdef-08de-4320-917e-16a9175dedcf",
        "tags" : [
        ]
      },
      {
        "id" : "acdf562e-2318-4417-90c6-e4722aeb19d3",
        "parentId" : "19637fcf-fa38-4ba8-a50a-78e3da803229",
        "authorId" : "c5f34109-f61d-4540-9a67-e4a5494934e5",
        "body" : "Yeah I dunno. Hopefully v8 will optimize try-\\* blocks before it comes to that.\n",
        "createdAt" : "2016-02-11T17:05:56Z",
        "updatedAt" : "2016-04-14T18:59:44Z",
        "lastEditedBy" : "c5f34109-f61d-4540-9a67-e4a5494934e5",
        "tags" : [
        ]
      }
    ],
    "commit" : "ae18bbef48d87d9c641df85369f62cfd5ed8c250",
    "line" : 39,
    "diffHunk" : "@@ -1,1 +486,490 @@  return bytesRead;\n}\n\nfs.readFileSync = function(path, options) {\n  if (!options) {"
  },
  {
    "id" : "ba9a6886-e20f-47c5-a1d8-d58b81ea1d81",
    "prId" : 10789,
    "prUrl" : "https://github.com/nodejs/node/pull/10789#pullrequestreview-24266506",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "07e4c293-265a-4714-87e1-d36f51538148",
        "parentId" : null,
        "authorId" : "af50f08e-2bc7-4f86-8ca4-431b9929bc48",
        "body" : "Out of interest how much perf gain did we get from this one ? ",
        "createdAt" : "2017-02-28T14:48:06Z",
        "updatedAt" : "2017-03-11T04:49:27Z",
        "lastEditedBy" : "af50f08e-2bc7-4f86-8ca4-431b9929bc48",
        "tags" : [
        ]
      },
      {
        "id" : "6ce801e7-9fe5-4b33-8d55-79bbc333a0a2",
        "parentId" : "07e4c293-265a-4714-87e1-d36f51538148",
        "authorId" : "c5f34109-f61d-4540-9a67-e4a5494934e5",
        "body" : "For the async `realpath()`? I didn't measure it explicitly because it's not used for module lookup, I merely made the changes to mirror the `realpathSync()` changes for consistency.",
        "createdAt" : "2017-02-28T15:31:26Z",
        "updatedAt" : "2017-03-11T04:49:27Z",
        "lastEditedBy" : "c5f34109-f61d-4540-9a67-e4a5494934e5",
        "tags" : [
        ]
      }
    ],
    "commit" : "c67207731f16a78f6cae90e49c53b10728241ecf",
    "line" : 254,
    "diffHunk" : "@@ -1,1 +1751,1755 @@    }\n  }\n};\n\nfs.mkdtemp = function(prefix, options, callback) {"
  },
  {
    "id" : "6d7a4175-041e-4855-913f-83ea892c8e2a",
    "prId" : 12456,
    "prUrl" : "https://github.com/nodejs/node/pull/12456#pullrequestreview-33003804",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "80ecd278-05dc-4678-ad50-f570efa08e2e",
        "parentId" : null,
        "authorId" : "23c9565c-5fe0-4faf-82b2-dc40116c9bfa",
        "body" : "I see why this might indeed be \"semver-major-y\" but it looks fine to me. The only difference is in the case callback is passed but not as a function at which point `options` would be passed and would be rethrown if real options passed.\r\n\r\nI think a CITGM run would be sufficient here and if that passes I don't think we need to change it or semver-major it.\r\n\r\nAlso I'm very surprised arguments use only indexed access and length check is performed deopts. ",
        "createdAt" : "2017-04-17T08:42:37Z",
        "updatedAt" : "2017-04-30T07:18:20Z",
        "lastEditedBy" : "23c9565c-5fe0-4faf-82b2-dc40116c9bfa",
        "tags" : [
        ]
      },
      {
        "id" : "1e1494b0-bcb3-4c58-908b-bf227950475b",
        "parentId" : "80ecd278-05dc-4678-ad50-f570efa08e2e",
        "authorId" : "c5f34109-f61d-4540-9a67-e4a5494934e5",
        "body" : "I think it's also because `arguments` was being used in a function where the named arguments were being overwritten. This could be a Crankshaft-specific limitation though, I'm not sure.",
        "createdAt" : "2017-04-17T13:36:31Z",
        "updatedAt" : "2017-04-30T07:18:20Z",
        "lastEditedBy" : "c5f34109-f61d-4540-9a67-e4a5494934e5",
        "tags" : [
        ]
      }
    ],
    "commit" : "b6da225799cd754e6696586e759218d7514fdd85",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +321,325 @@\nfs.readFile = function(path, options, callback) {\n  callback = maybeCallback(callback || options);\n  options = getOptions(options, { flag: 'r' });\n"
  },
  {
    "id" : "68827f6c-7566-4a38-9e8f-29e7e7a94b8f",
    "prId" : 12456,
    "prUrl" : "https://github.com/nodejs/node/pull/12456#pullrequestreview-32980608",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b41665ec-d6b8-4f15-8cf9-8785f356638a",
        "parentId" : null,
        "authorId" : "23c9565c-5fe0-4faf-82b2-dc40116c9bfa",
        "body" : "ditto for comment above. ",
        "createdAt" : "2017-04-17T08:42:52Z",
        "updatedAt" : "2017-04-30T07:18:20Z",
        "lastEditedBy" : "23c9565c-5fe0-4faf-82b2-dc40116c9bfa",
        "tags" : [
        ]
      }
    ],
    "commit" : "b6da225799cd754e6696586e759218d7514fdd85",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +1248,1252 @@\nfs.writeFile = function(path, data, options, callback) {\n  callback = maybeCallback(callback || options);\n  options = getOptions(options, { encoding: 'utf8', mode: 0o666, flag: 'w' });\n  const flag = options.flag || 'w';"
  }
]