[
  {
    "id" : "e3b87d02-2987-4c4f-b446-f58431396dfc",
    "prId" : 3503,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7454d772-891e-4883-ac4a-5afc6da90a78",
        "parentId" : null,
        "authorId" : "ec4d48db-e488-47ba-b17d-0da1c3b9df08",
        "body" : "how is this different than just doing `.toString(encoding)`?\n",
        "createdAt" : "2015-10-23T22:12:09Z",
        "updatedAt" : "2015-10-26T02:26:41Z",
        "lastEditedBy" : "ec4d48db-e488-47ba-b17d-0da1c3b9df08",
        "tags" : [
        ]
      },
      {
        "id" : "5fc1343e-3b0c-4ac9-89ee-aab33912ab14",
        "parentId" : "7454d772-891e-4883-ac4a-5afc6da90a78",
        "authorId" : "ec4d48db-e488-47ba-b17d-0da1c3b9df08",
        "body" : "wait. nm. yes it's almost the weekend. shouldn't be doing a review right now.\n",
        "createdAt" : "2015-10-23T22:12:31Z",
        "updatedAt" : "2015-10-26T02:26:41Z",
        "lastEditedBy" : "ec4d48db-e488-47ba-b17d-0da1c3b9df08",
        "tags" : [
        ]
      }
    ],
    "commit" : "57359cd1e45084ac107ca5b16fe2a1423139d711",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +624,628 @@  var e;\n  try {\n    buf = buf.toString(encoding, 0, end);\n  } catch (err) {\n    e = err;"
  },
  {
    "id" : "48e671ff-e653-410a-8c5e-86a2c5027f92",
    "prId" : 5172,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "19637fcf-fa38-4ba8-a50a-78e3da803229",
        "parentId" : null,
        "authorId" : "d10ccdef-08de-4320-917e-16a9175dedcf",
        "body" : "Seeing these I can't help but wonder if there's value in having a more generic utility `attempt(fn,fin)` mechanism... e.g. \n\n```\nconst attempt = require('internal/util').attempt;\nattempt(() => doSomething(), (threw) => doCleanup())\n```\n\nwhere `attempt()` == \n\n```\nfunction attempt (fn, fin) {\n  var threw = true;\n  try {\n    fn();\n    threw = false;\n  } finally {\n    fin(threw);\n  }\n}\n```\n\nLikely not worth the additional complexity and perf cost tho.\n",
        "createdAt" : "2016-02-11T16:21:30Z",
        "updatedAt" : "2016-04-14T18:59:44Z",
        "lastEditedBy" : "d10ccdef-08de-4320-917e-16a9175dedcf",
        "tags" : [
        ]
      },
      {
        "id" : "acdf562e-2318-4417-90c6-e4722aeb19d3",
        "parentId" : "19637fcf-fa38-4ba8-a50a-78e3da803229",
        "authorId" : "c5f34109-f61d-4540-9a67-e4a5494934e5",
        "body" : "Yeah I dunno. Hopefully v8 will optimize try-\\* blocks before it comes to that.\n",
        "createdAt" : "2016-02-11T17:05:56Z",
        "updatedAt" : "2016-04-14T18:59:44Z",
        "lastEditedBy" : "c5f34109-f61d-4540-9a67-e4a5494934e5",
        "tags" : [
        ]
      }
    ],
    "commit" : "ae18bbef48d87d9c641df85369f62cfd5ed8c250",
    "line" : 39,
    "diffHunk" : "@@ -1,1 +486,490 @@  return bytesRead;\n}\n\nfs.readFileSync = function(path, options) {\n  if (!options) {"
  },
  {
    "id" : "ba9a6886-e20f-47c5-a1d8-d58b81ea1d81",
    "prId" : 10789,
    "prUrl" : "https://github.com/nodejs/node/pull/10789#pullrequestreview-24266506",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "07e4c293-265a-4714-87e1-d36f51538148",
        "parentId" : null,
        "authorId" : "af50f08e-2bc7-4f86-8ca4-431b9929bc48",
        "body" : "Out of interest how much perf gain did we get from this one ? ",
        "createdAt" : "2017-02-28T14:48:06Z",
        "updatedAt" : "2017-03-11T04:49:27Z",
        "lastEditedBy" : "af50f08e-2bc7-4f86-8ca4-431b9929bc48",
        "tags" : [
        ]
      },
      {
        "id" : "6ce801e7-9fe5-4b33-8d55-79bbc333a0a2",
        "parentId" : "07e4c293-265a-4714-87e1-d36f51538148",
        "authorId" : "c5f34109-f61d-4540-9a67-e4a5494934e5",
        "body" : "For the async `realpath()`? I didn't measure it explicitly because it's not used for module lookup, I merely made the changes to mirror the `realpathSync()` changes for consistency.",
        "createdAt" : "2017-02-28T15:31:26Z",
        "updatedAt" : "2017-03-11T04:49:27Z",
        "lastEditedBy" : "c5f34109-f61d-4540-9a67-e4a5494934e5",
        "tags" : [
        ]
      }
    ],
    "commit" : "c67207731f16a78f6cae90e49c53b10728241ecf",
    "line" : 254,
    "diffHunk" : "@@ -1,1 +1751,1755 @@    }\n  }\n};\n\nfs.mkdtemp = function(prefix, options, callback) {"
  },
  {
    "id" : "6d7a4175-041e-4855-913f-83ea892c8e2a",
    "prId" : 12456,
    "prUrl" : "https://github.com/nodejs/node/pull/12456#pullrequestreview-33003804",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "80ecd278-05dc-4678-ad50-f570efa08e2e",
        "parentId" : null,
        "authorId" : "23c9565c-5fe0-4faf-82b2-dc40116c9bfa",
        "body" : "I see why this might indeed be \"semver-major-y\" but it looks fine to me. The only difference is in the case callback is passed but not as a function at which point `options` would be passed and would be rethrown if real options passed.\r\n\r\nI think a CITGM run would be sufficient here and if that passes I don't think we need to change it or semver-major it.\r\n\r\nAlso I'm very surprised arguments use only indexed access and length check is performed deopts. ",
        "createdAt" : "2017-04-17T08:42:37Z",
        "updatedAt" : "2017-04-30T07:18:20Z",
        "lastEditedBy" : "23c9565c-5fe0-4faf-82b2-dc40116c9bfa",
        "tags" : [
        ]
      },
      {
        "id" : "1e1494b0-bcb3-4c58-908b-bf227950475b",
        "parentId" : "80ecd278-05dc-4678-ad50-f570efa08e2e",
        "authorId" : "c5f34109-f61d-4540-9a67-e4a5494934e5",
        "body" : "I think it's also because `arguments` was being used in a function where the named arguments were being overwritten. This could be a Crankshaft-specific limitation though, I'm not sure.",
        "createdAt" : "2017-04-17T13:36:31Z",
        "updatedAt" : "2017-04-30T07:18:20Z",
        "lastEditedBy" : "c5f34109-f61d-4540-9a67-e4a5494934e5",
        "tags" : [
        ]
      }
    ],
    "commit" : "b6da225799cd754e6696586e759218d7514fdd85",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +321,325 @@\nfs.readFile = function(path, options, callback) {\n  callback = maybeCallback(callback || options);\n  options = getOptions(options, { flag: 'r' });\n"
  },
  {
    "id" : "68827f6c-7566-4a38-9e8f-29e7e7a94b8f",
    "prId" : 12456,
    "prUrl" : "https://github.com/nodejs/node/pull/12456#pullrequestreview-32980608",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b41665ec-d6b8-4f15-8cf9-8785f356638a",
        "parentId" : null,
        "authorId" : "23c9565c-5fe0-4faf-82b2-dc40116c9bfa",
        "body" : "ditto for comment above. ",
        "createdAt" : "2017-04-17T08:42:52Z",
        "updatedAt" : "2017-04-30T07:18:20Z",
        "lastEditedBy" : "23c9565c-5fe0-4faf-82b2-dc40116c9bfa",
        "tags" : [
        ]
      }
    ],
    "commit" : "b6da225799cd754e6696586e759218d7514fdd85",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +1248,1252 @@\nfs.writeFile = function(path, data, options, callback) {\n  callback = maybeCallback(callback || options);\n  options = getOptions(options, { encoding: 'utf8', mode: 0o666, flag: 'w' });\n  const flag = options.flag || 'w';"
  },
  {
    "id" : "bb5c9700-e17b-4b14-bae0-9811b234e57b",
    "prId" : 14055,
    "prUrl" : "https://github.com/nodejs/node/pull/14055#pullrequestreview-48764672",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e71c4f02-2dfd-4feb-afcd-21ed3c39f225",
        "parentId" : null,
        "authorId" : "4b71aeaa-5376-4bc0-be81-0ae8df38206e",
        "body" : "Now that TF+I are in, can we start inlining all of these `try*` functions?",
        "createdAt" : "2017-07-04T08:31:51Z",
        "updatedAt" : "2017-07-09T17:42:09Z",
        "lastEditedBy" : "4b71aeaa-5376-4bc0-be81-0ae8df38206e",
        "tags" : [
        ]
      },
      {
        "id" : "1e90ae30-9d05-402e-a231-3b130e6fc86b",
        "parentId" : "e71c4f02-2dfd-4feb-afcd-21ed3c39f225",
        "authorId" : "4e9ef6b4-9a31-4818-a54f-a2b732308657",
        "body" : "At least in a recently run benchmark (v8 5.8) it still seemed like it's a tiny bit better to keep them around. I suggest to wait until 6.0 has landed and if it's good to inline them, I'd make a single PR for all of them.",
        "createdAt" : "2017-07-04T11:43:37Z",
        "updatedAt" : "2017-07-09T17:42:09Z",
        "lastEditedBy" : "4e9ef6b4-9a31-4818-a54f-a2b732308657",
        "tags" : [
        ]
      },
      {
        "id" : "45b45868-cc9f-490f-8ee5-70ebb304a8cb",
        "parentId" : "e71c4f02-2dfd-4feb-afcd-21ed3c39f225",
        "authorId" : "23dd1f9f-2ce6-4461-ad78-bdc0fc563445",
        "body" : "Ack, since it's an patch level enhancement that should land in `v8.x`, although it will probably be relevant for 1 minor `node8` release.",
        "createdAt" : "2017-07-08T21:42:00Z",
        "updatedAt" : "2017-07-09T17:42:09Z",
        "lastEditedBy" : "23dd1f9f-2ce6-4461-ad78-bdc0fc563445",
        "tags" : [
        ]
      }
    ],
    "commit" : "18069523f87aa4c5f7d361201aa20745e2ede20e",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +553,557 @@  var fd = isUserFd ? path : fs.openSync(path, options.flag || 'r', 0o666);\n\n  tryStatSync(fd, isUserFd);\n  // Use stats array directly to avoid creating an fs.Stats instance just for\n  // our internal use."
  },
  {
    "id" : "ffaf7e8f-86a5-4068-9200-15bc4bffaf31",
    "prId" : 14055,
    "prUrl" : "https://github.com/nodejs/node/pull/14055#pullrequestreview-48764008",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "41c7631e-a572-439d-8586-c8e00c7a3f7d",
        "parentId" : null,
        "authorId" : "bdefb563-5b0e-49d6-af83-14c9dcbf70b5",
        "body" : "I guess it was written like this for performance. If not, isn't cleaner to use `catch` and get rid of the threw variable?",
        "createdAt" : "2017-07-04T12:41:48Z",
        "updatedAt" : "2017-07-09T17:42:09Z",
        "lastEditedBy" : "bdefb563-5b0e-49d6-af83-14c9dcbf70b5",
        "tags" : [
        ]
      },
      {
        "id" : "d9ee9489-6303-4c1b-acaf-5f3c89b5e863",
        "parentId" : "41c7631e-a572-439d-8586-c8e00c7a3f7d",
        "authorId" : "4e9ef6b4-9a31-4818-a54f-a2b732308657",
        "body" : "I am about to open a separate PR that deals with lots of those :D",
        "createdAt" : "2017-07-04T12:53:44Z",
        "updatedAt" : "2017-07-09T17:42:09Z",
        "lastEditedBy" : "4e9ef6b4-9a31-4818-a54f-a2b732308657",
        "tags" : [
        ]
      },
      {
        "id" : "4b8439e3-5224-4af4-be58-19dfa81fe3ec",
        "parentId" : "41c7631e-a572-439d-8586-c8e00c7a3f7d",
        "authorId" : "bdefb563-5b0e-49d6-af83-14c9dcbf70b5",
        "body" : "Get ready to run benchmarks then :) as I remember that some of these changes (`finally` -> `catch`) were rejected in the past. I think it was on timers.",
        "createdAt" : "2017-07-04T12:56:48Z",
        "updatedAt" : "2017-07-09T17:42:09Z",
        "lastEditedBy" : "bdefb563-5b0e-49d6-af83-14c9dcbf70b5",
        "tags" : [
        ]
      },
      {
        "id" : "52534313-7284-4271-8d7b-0dd9dbfc3575",
        "parentId" : "41c7631e-a572-439d-8586-c8e00c7a3f7d",
        "authorId" : "4e9ef6b4-9a31-4818-a54f-a2b732308657",
        "body" : "Out of my perspective the main issue is that the error has to be thrown again.",
        "createdAt" : "2017-07-04T13:06:44Z",
        "updatedAt" : "2017-07-09T17:42:09Z",
        "lastEditedBy" : "4e9ef6b4-9a31-4818-a54f-a2b732308657",
        "tags" : [
        ]
      },
      {
        "id" : "c5f696f7-aa91-4f8a-b684-261a15af5803",
        "parentId" : "41c7631e-a572-439d-8586-c8e00c7a3f7d",
        "authorId" : "4e9ef6b4-9a31-4818-a54f-a2b732308657",
        "body" : "Hm, when running the benchmark it does not seem to be a significant change, so it would be more churn than anything else.",
        "createdAt" : "2017-07-04T15:49:59Z",
        "updatedAt" : "2017-07-09T17:42:09Z",
        "lastEditedBy" : "4e9ef6b4-9a31-4818-a54f-a2b732308657",
        "tags" : [
        ]
      },
      {
        "id" : "a66ca1f4-948d-4930-93ea-eb36374fa9f4",
        "parentId" : "41c7631e-a572-439d-8586-c8e00c7a3f7d",
        "authorId" : "23c9565c-5fe0-4faf-82b2-dc40116c9bfa",
        "body" : "@BridgeAR please note that the performance profile of try/catch/finally changed quite a bit since the code was added most likely :)",
        "createdAt" : "2017-07-06T07:59:55Z",
        "updatedAt" : "2017-07-09T17:42:09Z",
        "lastEditedBy" : "23c9565c-5fe0-4faf-82b2-dc40116c9bfa",
        "tags" : [
        ]
      },
      {
        "id" : "1d2b6c70-8c28-471b-a440-aa8039c5b9dd",
        "parentId" : "41c7631e-a572-439d-8586-c8e00c7a3f7d",
        "authorId" : "4e9ef6b4-9a31-4818-a54f-a2b732308657",
        "body" : "Of course but I ran the benchmarks with changing these to try catch and it did not show changed numbers. Therefore I think it's mainly churn to change it.",
        "createdAt" : "2017-07-08T20:53:58Z",
        "updatedAt" : "2017-07-09T17:42:09Z",
        "lastEditedBy" : "4e9ef6b4-9a31-4818-a54f-a2b732308657",
        "tags" : [
        ]
      }
    ],
    "commit" : "18069523f87aa4c5f7d361201aa20745e2ede20e",
    "line" : 1,
    "diffHunk" : "@@ -1,1 +519,523 @@    binding.fstat(fd);\n    threw = false;\n  } finally {\n    if (threw && !isUserFd) fs.closeSync(fd);\n  }"
  },
  {
    "id" : "f6d3dc33-c7ca-48b9-ae3e-23476516a954",
    "prId" : 14055,
    "prUrl" : "https://github.com/nodejs/node/pull/14055#pullrequestreview-48768355",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4fa490cd-0e2f-4ee7-8b9b-02b2a9eae75c",
        "parentId" : null,
        "authorId" : "23dd1f9f-2ce6-4461-ad78-bdc0fc563445",
        "body" : "does a trinary with assign to const perform better?",
        "createdAt" : "2017-07-08T21:51:50Z",
        "updatedAt" : "2017-07-09T17:42:09Z",
        "lastEditedBy" : "23dd1f9f-2ce6-4461-ad78-bdc0fc563445",
        "tags" : [
        ]
      },
      {
        "id" : "c95f64fa-c0f3-4afa-ae8e-f2a77006f30c",
        "parentId" : "4fa490cd-0e2f-4ee7-8b9b-02b2a9eae75c",
        "authorId" : "4e9ef6b4-9a31-4818-a54f-a2b732308657",
        "body" : "There is not really a measurable difference.",
        "createdAt" : "2017-07-09T00:14:35Z",
        "updatedAt" : "2017-07-09T17:42:09Z",
        "lastEditedBy" : "4e9ef6b4-9a31-4818-a54f-a2b732308657",
        "tags" : [
        ]
      },
      {
        "id" : "4c12fdd4-21a5-40d3-8288-3ff625e86637",
        "parentId" : "4fa490cd-0e2f-4ee7-8b9b-02b2a9eae75c",
        "authorId" : "23dd1f9f-2ce6-4461-ad78-bdc0fc563445",
        "body" : "🤷‍♂️ never mind then",
        "createdAt" : "2017-07-09T03:15:42Z",
        "updatedAt" : "2017-07-09T17:42:09Z",
        "lastEditedBy" : "23dd1f9f-2ce6-4461-ad78-bdc0fc563445",
        "tags" : [
        ]
      }
    ],
    "commit" : "18069523f87aa4c5f7d361201aa20745e2ede20e",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +556,560 @@  // Use stats array directly to avoid creating an fs.Stats instance just for\n  // our internal use.\n  var size;\n  if ((statValues[1/*mode*/] & S_IFMT) === S_IFREG)\n    size = statValues[8/*size*/];"
  },
  {
    "id" : "f2e5462d-5c73-4244-a8af-d4f40cbc3871",
    "prId" : 15043,
    "prUrl" : "https://github.com/nodejs/node/pull/15043#pullrequestreview-59335793",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fa781ca1-2161-4d4b-83d1-cedd548c1049",
        "parentId" : null,
        "authorId" : "23dd1f9f-2ce6-4461-ad78-bdc0fc563445",
        "body" : "IMHO this could be changed to `TypeError`.\r\nFeedback anyone?",
        "createdAt" : "2017-08-29T13:39:27Z",
        "updatedAt" : "2017-08-31T23:19:45Z",
        "lastEditedBy" : "23dd1f9f-2ce6-4461-ad78-bdc0fc563445",
        "tags" : [
        ]
      },
      {
        "id" : "b2953b08-4461-4e09-8694-c50f14f529a8",
        "parentId" : "fa781ca1-2161-4d4b-83d1-cedd548c1049",
        "authorId" : "d10ccdef-08de-4320-917e-16a9175dedcf",
        "body" : "That's really difficult to say. The coercion to a string means that any value can be used, it's not really a `TypeError`. The real check here is the null-character bit, which doesn't *feel* like a `TypeError` to me. I could live with it tho.",
        "createdAt" : "2017-08-29T18:21:59Z",
        "updatedAt" : "2017-08-31T23:19:45Z",
        "lastEditedBy" : "d10ccdef-08de-4320-917e-16a9175dedcf",
        "tags" : [
        ]
      }
    ],
    "commit" : "0b1285c76fb2ba7927674d3d762938ce8747eebb",
    "line" : 45,
    "diffHunk" : "@@ -1,1 +160,164 @@function nullCheck(path, callback) {\n  if (('' + path).indexOf('\\u0000') !== -1) {\n    const er = new errors.Error('ERR_INVALID_ARG_TYPE',\n                                'path',\n                                'string without null bytes',"
  },
  {
    "id" : "de946c3b-ea62-4d05-ba1d-4138d4b42af5",
    "prId" : 15043,
    "prUrl" : "https://github.com/nodejs/node/pull/15043#pullrequestreview-59523886",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0946a4ac-dcee-4898-991d-cff1aa0fe2f5",
        "parentId" : null,
        "authorId" : "23dd1f9f-2ce6-4461-ad78-bdc0fc563445",
        "body" : "1. These a disparity with the docs (but out of scope for this PR)\r\n2. AFAICT `date string` will not parse\r\n\r\ntl;dr 3rd arg should be `['Date', 'time in seconds']`",
        "createdAt" : "2017-08-29T13:46:09Z",
        "updatedAt" : "2017-08-31T23:19:45Z",
        "lastEditedBy" : "23dd1f9f-2ce6-4461-ad78-bdc0fc563445",
        "tags" : [
        ]
      },
      {
        "id" : "1aea5eb4-38ce-4539-8543-1086b6dd5382",
        "parentId" : "0946a4ac-dcee-4898-991d-cff1aa0fe2f5",
        "authorId" : "5341324e-f08b-4aa9-b751-4cc831344529",
        "body" : "2.You are right I will go with ['Date', 'time in seconds']\r\nThe date string was (inaccurate) for a string timestamp arg like '1504020561954'",
        "createdAt" : "2017-08-29T15:47:13Z",
        "updatedAt" : "2017-08-31T23:19:45Z",
        "lastEditedBy" : "5341324e-f08b-4aa9-b751-4cc831344529",
        "tags" : [
        ]
      },
      {
        "id" : "46c8898c-5d01-40ed-ad64-bfc531cf0df3",
        "parentId" : "0946a4ac-dcee-4898-991d-cff1aa0fe2f5",
        "authorId" : "5341324e-f08b-4aa9-b751-4cc831344529",
        "body" : "I updated it to `['Date', 'time in seconds']` (commit: 2f0738a)",
        "createdAt" : "2017-08-30T11:26:20Z",
        "updatedAt" : "2017-08-31T23:19:45Z",
        "lastEditedBy" : "5341324e-f08b-4aa9-b751-4cc831344529",
        "tags" : [
        ]
      }
    ],
    "commit" : "0b1285c76fb2ba7927674d3d762938ce8747eebb",
    "line" : 67,
    "diffHunk" : "@@ -1,1 +1200,1204 @@    return time.getTime() / 1000;\n  }\n  throw new errors.Error('ERR_INVALID_ARG_TYPE',\n                         'time',\n                         ['Date', 'time in seconds'],"
  }
]