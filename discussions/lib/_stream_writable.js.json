[
  {
    "id" : "683819c3-b7aa-48f2-9d6d-66c27f676d89",
    "prId" : 6533,
    "prUrl" : "https://github.com/nodejs/node/pull/6533#pullrequestreview-13920869",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "918036f4-a602-4fb7-8c62-7ffc8c77b9f7",
        "parentId" : null,
        "authorId" : "9e96224b-2acc-4770-a5d7-d764637e4628",
        "body" : "All of this logic is needed because we have a very slow `bind`. In a year or so, we might be able to remove this whole `CorkedRequest`  thing. I am more concerned of `readable-stream` rather than core.",
        "createdAt" : "2016-12-21T08:42:50Z",
        "updatedAt" : "2016-12-29T19:19:43Z",
        "lastEditedBy" : "9e96224b-2acc-4770-a5d7-d764637e4628",
        "tags" : [
        ]
      }
    ],
    "commit" : "4d7531de247339692aced0f9c5643d458e80fc6e",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +538,542 @@  this.entry = null;\n  this.finish = onCorkedFinish.bind(undefined, this, state);\n}\n\nfunction onCorkedFinish(corkReq, state, err) {"
  },
  {
    "id" : "e0da1346-17a5-4d0a-81d3-37235d946c77",
    "prId" : 10558,
    "prUrl" : "https://github.com/nodejs/node/pull/10558#pullrequestreview-14828810",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f785d76a-1b0f-4ece-9ed3-9f6e29da4ee4",
        "parentId" : null,
        "authorId" : "9e96224b-2acc-4770-a5d7-d764637e4628",
        "body" : "Is this giving any perf increase? The major benefit is to avoid the creation of `CorkedRequest`, which was introduced to leverage hidden classes and the like.",
        "createdAt" : "2017-01-02T08:47:55Z",
        "updatedAt" : "2017-01-11T17:58:13Z",
        "lastEditedBy" : "9e96224b-2acc-4770-a5d7-d764637e4628",
        "tags" : [
        ]
      },
      {
        "id" : "7a5c389a-e9e5-41a5-8daa-3d8cfd75d293",
        "parentId" : "f785d76a-1b0f-4ece-9ed3-9f6e29da4ee4",
        "authorId" : "c5f34109-f61d-4540-9a67-e4a5494934e5",
        "body" : "Yes. This is similar to what was done awhile back for `process.nextTick()` request objects, changed from `new Foo()` to plain object.",
        "createdAt" : "2017-01-02T09:13:00Z",
        "updatedAt" : "2017-01-11T17:58:13Z",
        "lastEditedBy" : "c5f34109-f61d-4540-9a67-e4a5494934e5",
        "tags" : [
        ]
      }
    ],
    "commit" : "03b9f6fe26654e916f5e2dc7e9154ed51e5f1e99",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +109,113 @@  var corkReq = { next: null, entry: null, finish: undefined };\n  corkReq.finish = onCorkedFinish.bind(undefined, corkReq, this);\n  this.corkedRequestsFree = corkReq;\n}\n"
  },
  {
    "id" : "9bcbcdcc-8e14-42a3-b547-3727ffa44cb0",
    "prId" : 10558,
    "prUrl" : "https://github.com/nodejs/node/pull/10558#pullrequestreview-15036026",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b3bbb872-7b0c-47d6-9cd6-3eb4c65a39af",
        "parentId" : null,
        "authorId" : "9e96224b-2acc-4770-a5d7-d764637e4628",
        "body" : "can you please update the build script in `readable-stream`  when this lands too?",
        "createdAt" : "2017-01-02T08:52:34Z",
        "updatedAt" : "2017-01-11T17:58:13Z",
        "lastEditedBy" : "9e96224b-2acc-4770-a5d7-d764637e4628",
        "tags" : [
        ]
      },
      {
        "id" : "af57f721-4531-4ac2-8db9-c06317ff9b04",
        "parentId" : "b3bbb872-7b0c-47d6-9cd6-3eb4c65a39af",
        "authorId" : "c5f34109-f61d-4540-9a67-e4a5494934e5",
        "body" : "Done: https://github.com/nodejs/readable-stream/pull/255",
        "createdAt" : "2017-01-03T23:49:09Z",
        "updatedAt" : "2017-01-11T17:58:13Z",
        "lastEditedBy" : "c5f34109-f61d-4540-9a67-e4a5494934e5",
        "tags" : [
        ]
      }
    ],
    "commit" : "03b9f6fe26654e916f5e2dc7e9154ed51e5f1e99",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +108,112 @@  // one allocated and free to use, and we maintain at most two\n  var corkReq = { next: null, entry: null, finish: undefined };\n  corkReq.finish = onCorkedFinish.bind(undefined, corkReq, this);\n  this.corkedRequestsFree = corkReq;\n}"
  },
  {
    "id" : "bb9db8fc-dbe4-41ad-9f60-c8e2bf4ad7cc",
    "prId" : 10580,
    "prUrl" : "https://github.com/nodejs/node/pull/10580#pullrequestreview-14948439",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f833bbab-aa45-4754-aacb-465abd9dcd92",
        "parentId" : null,
        "authorId" : "7490b440-07c7-4433-856f-3720a914a77a",
        "body" : "@mscdex could `chunk` have changed before this is called?",
        "createdAt" : "2017-01-03T15:05:00Z",
        "updatedAt" : "2017-01-05T08:00:34Z",
        "lastEditedBy" : "7490b440-07c7-4433-856f-3720a914a77a",
        "tags" : [
        ]
      },
      {
        "id" : "17d9479b-b411-40d5-b214-c904d49a5485",
        "parentId" : "f833bbab-aa45-4754-aacb-465abd9dcd92",
        "authorId" : "c5f34109-f61d-4540-9a67-e4a5494934e5",
        "body" : "No. `writeOrBuffer()` is only called by `write()` and `validChunk()` does not return a modified chunk or anything.",
        "createdAt" : "2017-01-03T15:21:49Z",
        "updatedAt" : "2017-01-05T08:00:34Z",
        "lastEditedBy" : "c5f34109-f61d-4540-9a67-e4a5494934e5",
        "tags" : [
        ]
      }
    ],
    "commit" : "0a937280d8353b86051b02206811974a658a47d5",
    "line" : 69,
    "diffHunk" : "@@ -1,1 +289,293 @@// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    chunk = decodeChunk(state, chunk, encoding);\n    if (chunk instanceof Buffer)"
  },
  {
    "id" : "98e24131-56d3-40fd-a39b-14636119bbca",
    "prId" : 10580,
    "prUrl" : "https://github.com/nodejs/node/pull/10580#pullrequestreview-15028487",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5cbaa966-52d7-4b0e-91cc-21fcdbb01f00",
        "parentId" : null,
        "authorId" : "d10ccdef-08de-4320-917e-16a9175dedcf",
        "body" : "Would switching to `Buffer.isBuffer()` have the same performance profile as `instanceof`? By removing the `instanceof Buffer` check here, this becomes a semver-major. If we can switch to `Buffer.isBuffer()` and still get a performance boost, then this can be semver-patch.",
        "createdAt" : "2017-01-03T16:22:14Z",
        "updatedAt" : "2017-01-05T08:00:34Z",
        "lastEditedBy" : "d10ccdef-08de-4320-917e-16a9175dedcf",
        "tags" : [
        ]
      },
      {
        "id" : "b2d55938-c740-4c8f-8679-432f074eec04",
        "parentId" : "5cbaa966-52d7-4b0e-91cc-21fcdbb01f00",
        "authorId" : "9e96224b-2acc-4770-a5d7-d764637e4628",
        "body" : "@jasnell this PR is not removing the check (see my comment). It is still doing it, just in a different way. I would flag it semver-minor, and it can even be backported to v4 and v6.",
        "createdAt" : "2017-01-03T16:26:18Z",
        "updatedAt" : "2017-01-05T08:00:34Z",
        "lastEditedBy" : "9e96224b-2acc-4770-a5d7-d764637e4628",
        "tags" : [
        ]
      },
      {
        "id" : "431e819a-7f9c-4735-a08a-727b59665eb3",
        "parentId" : "5cbaa966-52d7-4b0e-91cc-21fcdbb01f00",
        "authorId" : "c5f34109-f61d-4540-9a67-e4a5494934e5",
        "body" : "`Buffer.isBuffer()` is [just an `instanceof` check](https://github.com/nodejs/node/blob/13a4887ee94d61d990dd22100aa7c17c39e3200a/lib/buffer.js#L286), so that would not help. Also, @mcollina is correct, we're just avoiding duplicate `instanceof`s since it was already being done in `write()`.",
        "createdAt" : "2017-01-03T16:27:44Z",
        "updatedAt" : "2017-01-05T08:00:34Z",
        "lastEditedBy" : "c5f34109-f61d-4540-9a67-e4a5494934e5",
        "tags" : [
        ]
      },
      {
        "id" : "d9ac296d-e4c5-4a15-ac5d-144694ef2b0d",
        "parentId" : "5cbaa966-52d7-4b0e-91cc-21fcdbb01f00",
        "authorId" : "d10ccdef-08de-4320-917e-16a9175dedcf",
        "body" : "Ah.. lol, forgot about that :-) ",
        "createdAt" : "2017-01-03T16:31:53Z",
        "updatedAt" : "2017-01-05T08:00:34Z",
        "lastEditedBy" : "d10ccdef-08de-4320-917e-16a9175dedcf",
        "tags" : [
        ]
      },
      {
        "id" : "727323e5-ea35-4d0d-ad01-666530b1c898",
        "parentId" : "5cbaa966-52d7-4b0e-91cc-21fcdbb01f00",
        "authorId" : "9e96224b-2acc-4770-a5d7-d764637e4628",
        "body" : "@mscdex that's my point on the review. \"remove duplicate `instanceof` checks\" should be a good commit message/pr title. ",
        "createdAt" : "2017-01-03T16:33:49Z",
        "updatedAt" : "2017-01-05T08:00:34Z",
        "lastEditedBy" : "9e96224b-2acc-4770-a5d7-d764637e4628",
        "tags" : [
        ]
      },
      {
        "id" : "7f30420b-3ca6-425d-b75b-730adf1539e0",
        "parentId" : "5cbaa966-52d7-4b0e-91cc-21fcdbb01f00",
        "authorId" : "c5f34109-f61d-4540-9a67-e4a5494934e5",
        "body" : "@mcollina It's not just that though, for example it would have also checked for `null` before getting to the second `instanceof` check. Anyway, I've changed the commit message. Let me know if it's more suitable.",
        "createdAt" : "2017-01-03T22:46:37Z",
        "updatedAt" : "2017-01-05T08:00:34Z",
        "lastEditedBy" : "c5f34109-f61d-4540-9a67-e4a5494934e5",
        "tags" : [
        ]
      }
    ],
    "commit" : "0a937280d8353b86051b02206811974a658a47d5",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +204,208 @@  if (chunk === null) {\n    er = new TypeError('May not write null values to stream');\n  } else if (typeof chunk !== 'string' &&\n             chunk !== undefined &&\n             !state.objectMode) {"
  },
  {
    "id" : "69f2d381-ea38-4e1c-b08d-efbc5e47189e",
    "prId" : 13187,
    "prUrl" : "https://github.com/nodejs/node/pull/13187#pullrequestreview-40083585",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c046b87f-a125-484d-a2dd-b6210f79ba62",
        "parentId" : null,
        "authorId" : "23c9565c-5fe0-4faf-82b2-dc40116c9bfa",
        "body" : "I'd probably do `allBuffers = allBuffers && entry.isBuf`",
        "createdAt" : "2017-05-24T10:11:01Z",
        "updatedAt" : "2017-05-26T08:30:19Z",
        "lastEditedBy" : "23c9565c-5fe0-4faf-82b2-dc40116c9bfa",
        "tags" : [
        ]
      },
      {
        "id" : "184ca15b-599a-4c8f-8ff3-a88d98945da6",
        "parentId" : "c046b87f-a125-484d-a2dd-b6210f79ba62",
        "authorId" : "c5f34109-f61d-4540-9a67-e4a5494934e5",
        "body" : "I tried something similar (continuing the rest of the loop without any conditional) and did not see any difference in performance.",
        "createdAt" : "2017-05-24T16:43:28Z",
        "updatedAt" : "2017-05-26T08:30:19Z",
        "lastEditedBy" : "c5f34109-f61d-4540-9a67-e4a5494934e5",
        "tags" : [
        ]
      }
    ],
    "commit" : "01a1022857ac29d2dae3eba288fb14ff4815f4d8",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +449,453 @@    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf)\n        allBuffers = false;\n      entry = entry.next;"
  }
]