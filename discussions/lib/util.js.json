[
  {
    "id" : "1aecd354-9899-427e-9a0b-60393efb2f6a",
    "prId" : 3119,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "abaf34f9-4b9c-4c35-8b94-b49c1c97f21b",
        "parentId" : null,
        "authorId" : "4224fcfe-ee22-4bd8-9ed5-4e8efd7a90bc",
        "body" : "Unrelated change?  Should probably be a separate commit.\n",
        "createdAt" : "2015-10-05T21:05:35Z",
        "updatedAt" : "2015-10-06T01:28:01Z",
        "lastEditedBy" : "4224fcfe-ee22-4bd8-9ed5-4e8efd7a90bc",
        "tags" : [
        ]
      }
    ],
    "commit" : "88533881dd296236a44ad36aa7afb8336298540f",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +297,301 @@    // have come from a Debug context.\n    // Otherwise, an Array will print \"Array [...]\".\n    if (constructor && constructor.name === 'Array')\n      constructor = null;\n    braces = ['[', ']'];"
  },
  {
    "id" : "21626733-ad1c-424f-b7df-28c771810afd",
    "prId" : 3130,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1a650236-1bc0-4908-a156-98e26f3f1597",
        "parentId" : null,
        "authorId" : "4e8c77e8-10f9-4830-ac93-3bf7c9d321e2",
        "body" : "To prepare the ground for the use of `MakeMirror` in https://github.com/nodejs/node/pull/3119, may I suggest to move this to a separate function ? `setupDebugObjects()` for example.\n",
        "createdAt" : "2015-09-30T11:36:40Z",
        "updatedAt" : "2015-09-30T21:44:30Z",
        "lastEditedBy" : "4e8c77e8-10f9-4830-ac93-3bf7c9d321e2",
        "tags" : [
        ]
      }
    ],
    "commit" : "dbe48446b7981a60ac3e461056c7a888572b8e24",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +192,196 @@    Debug = result[0];\n    ObjectIsPromise = result[1];\n  }\n}\n"
  },
  {
    "id" : "d5391775-faca-4594-b4ff-f25bce68f7e6",
    "prId" : 3793,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6534c47e-1ecb-49f4-8f61-9a859bd1d95a",
        "parentId" : null,
        "authorId" : "ec4d48db-e488-47ba-b17d-0da1c3b9df08",
        "body" : "`Object.keys((new ArrayBuffer(5))).length === 0`. Should this be placed in the shortcut path above?\n",
        "createdAt" : "2015-11-12T18:24:02Z",
        "updatedAt" : "2015-11-14T12:31:32Z",
        "lastEditedBy" : "ec4d48db-e488-47ba-b17d-0da1c3b9df08",
        "tags" : [
        ]
      },
      {
        "id" : "dde7448d-7c1e-42ad-9c12-bc6adc05bf83",
        "parentId" : "6534c47e-1ecb-49f4-8f61-9a859bd1d95a",
        "authorId" : "ec4d48db-e488-47ba-b17d-0da1c3b9df08",
        "body" : "nm. overlooked the other keys additions.\n",
        "createdAt" : "2015-11-12T18:24:42Z",
        "updatedAt" : "2015-11-14T12:31:32Z",
        "lastEditedBy" : "ec4d48db-e488-47ba-b17d-0da1c3b9df08",
        "tags" : [
        ]
      },
      {
        "id" : "062c8345-e96d-40fc-b61a-203c5528353f",
        "parentId" : "6534c47e-1ecb-49f4-8f61-9a859bd1d95a",
        "authorId" : "ec4d48db-e488-47ba-b17d-0da1c3b9df08",
        "body" : "hah. so I wasn't loosing it:\n\n``` js\nObject.keys(new ArrayBuffer(5)).length === 0;\nObject.getOwnPropertyNames(new ArrayBuffer(5)).length === 0;\nObject.getOwnPropertySymbols(new ArrayBuffer(5)) === 0;\n```\n",
        "createdAt" : "2015-11-12T18:26:23Z",
        "updatedAt" : "2015-11-14T12:31:32Z",
        "lastEditedBy" : "ec4d48db-e488-47ba-b17d-0da1c3b9df08",
        "tags" : [
        ]
      },
      {
        "id" : "be925c60-3e4d-4613-9031-9ee83d6c3f54",
        "parentId" : "6534c47e-1ecb-49f4-8f61-9a859bd1d95a",
        "authorId" : "4224fcfe-ee22-4bd8-9ed5-4e8efd7a90bc",
        "body" : "I put it here because it adds a key for `.byteLength` but I can probably move it up and call `formatProperty()` directly, likewise for DataView.  Good idea / bad idea?\n",
        "createdAt" : "2015-11-13T12:17:32Z",
        "updatedAt" : "2015-11-14T12:31:32Z",
        "lastEditedBy" : "4224fcfe-ee22-4bd8-9ed5-4e8efd7a90bc",
        "tags" : [
        ]
      },
      {
        "id" : "6165774d-1bc5-4a28-9511-a960187077a4",
        "parentId" : "6534c47e-1ecb-49f4-8f61-9a859bd1d95a",
        "authorId" : "4224fcfe-ee22-4bd8-9ed5-4e8efd7a90bc",
        "body" : "Added a fast path for ArrayBuffer, PTAL.\n",
        "createdAt" : "2015-11-13T12:39:56Z",
        "updatedAt" : "2015-11-14T12:31:32Z",
        "lastEditedBy" : "4224fcfe-ee22-4bd8-9ed5-4e8efd7a90bc",
        "tags" : [
        ]
      },
      {
        "id" : "0bbeaa98-999b-41b0-af01-e89dea6a8b41",
        "parentId" : "6534c47e-1ecb-49f4-8f61-9a859bd1d95a",
        "authorId" : "ec4d48db-e488-47ba-b17d-0da1c3b9df08",
        "body" : "I like it.\n",
        "createdAt" : "2015-11-13T19:11:08Z",
        "updatedAt" : "2015-11-14T12:31:32Z",
        "lastEditedBy" : "ec4d48db-e488-47ba-b17d-0da1c3b9df08",
        "tags" : [
        ]
      }
    ],
    "commit" : "6cf2cff5039d20c3f0933d496a8d1088ae6881ea",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +322,326 @@    empty = value.size === 0;\n    formatter = formatMap;\n  } else if (value instanceof ArrayBuffer) {\n    braces = ['{', '}'];\n    keys.unshift('byteLength');"
  },
  {
    "id" : "4e58e95b-611b-48c9-b660-5daf785c7dbb",
    "prId" : 3793,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "313952e9-4f45-4493-bdc0-af9d8f84cda7",
        "parentId" : null,
        "authorId" : "bd43ce4d-85c2-4f54-8666-274f0f79f75b",
        "body" : "I wonder, would `V8::Value::IsTypedArray` be faster here?\n",
        "createdAt" : "2015-11-12T18:51:04Z",
        "updatedAt" : "2015-11-14T12:31:32Z",
        "lastEditedBy" : "bd43ce4d-85c2-4f54-8666-274f0f79f75b",
        "tags" : [
        ]
      },
      {
        "id" : "d12c4018-d526-413c-8229-426e45036f70",
        "parentId" : "313952e9-4f45-4493-bdc0-af9d8f84cda7",
        "authorId" : "bd43ce4d-85c2-4f54-8666-274f0f79f75b",
        "body" : "nope, not for a buffer anyways...nevermind me\n",
        "createdAt" : "2015-11-12T23:31:12Z",
        "updatedAt" : "2015-11-14T12:31:32Z",
        "lastEditedBy" : "bd43ce4d-85c2-4f54-8666-274f0f79f75b",
        "tags" : [
        ]
      }
    ],
    "commit" : "6cf2cff5039d20c3f0933d496a8d1088ae6881ea",
    "line" : 114,
    "diffHunk" : "@@ -1,1 +674,678 @@\nfunction isTypedArray(value) {\n  return value instanceof Float32Array ||\n         value instanceof Float64Array ||\n         value instanceof Int16Array ||"
  },
  {
    "id" : "619852dc-a11d-41ad-98ed-94c4d3f78381",
    "prId" : 4013,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "80398b72-01bb-43bd-8b8c-bb11148a92fe",
        "parentId" : null,
        "authorId" : "4e8c77e8-10f9-4830-ac93-3bf7c9d321e2",
        "body" : "Any reason it's not in `internal/util` ?\n",
        "createdAt" : "2015-11-25T07:36:00Z",
        "updatedAt" : "2015-11-25T18:43:11Z",
        "lastEditedBy" : "4e8c77e8-10f9-4830-ac93-3bf7c9d321e2",
        "tags" : [
        ]
      },
      {
        "id" : "addfee84-d003-4aab-b476-dff98636b733",
        "parentId" : "80398b72-01bb-43bd-8b8c-bb11148a92fe",
        "authorId" : "ff334962-2ee8-45f1-ad4a-cfb65ffd6744",
        "body" : "Yes. I tried using `internal/util`, but the REPL doesn't seem to like it. It gives this error when starting node:\n\n`Error: Cannot find module 'internal/util'`\n",
        "createdAt" : "2015-11-25T13:17:54Z",
        "updatedAt" : "2015-11-25T18:43:11Z",
        "lastEditedBy" : "ff334962-2ee8-45f1-ad4a-cfb65ffd6744",
        "tags" : [
        ]
      }
    ],
    "commit" : "459b106d6cbee05661dee7b3929610d7d06bede0",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +902,906 @@\n\nexports.decorateErrorStack = function(err) {\n  if (!(isError(err) && err.stack))\n    return;"
  },
  {
    "id" : "c296d126-becf-4e07-9265-7c001871ed47",
    "prId" : 7499,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e04b5587-339a-436a-b115-b50546391155",
        "parentId" : null,
        "authorId" : "d10ccdef-08de-4320-917e-16a9175dedcf",
        "body" : "what about setting to `null` or `Infinity`... what affect would that need to have? Just thinking about consistency with other options\n",
        "createdAt" : "2016-06-30T17:18:49Z",
        "updatedAt" : "2016-07-05T14:19:19Z",
        "lastEditedBy" : "d10ccdef-08de-4320-917e-16a9175dedcf",
        "tags" : [
        ]
      },
      {
        "id" : "a08fdaa2-2b18-450e-a040-2a7d83b08e34",
        "parentId" : "e04b5587-339a-436a-b115-b50546391155",
        "authorId" : "ff334962-2ee8-45f1-ad4a-cfb65ffd6744",
        "body" : "I picked 60 to maintain backwards compatibility. I could assign it to `null` or `Infinity` and then change the value later, but it seems like that would only complicate things.\n",
        "createdAt" : "2016-06-30T17:55:27Z",
        "updatedAt" : "2016-07-05T14:19:19Z",
        "lastEditedBy" : "ff334962-2ee8-45f1-ad4a-cfb65ffd6744",
        "tags" : [
        ]
      },
      {
        "id" : "735f7937-d01d-4b8d-9c58-6b97ff567393",
        "parentId" : "e04b5587-339a-436a-b115-b50546391155",
        "authorId" : "d10ccdef-08de-4320-917e-16a9175dedcf",
        "body" : "I think `60` is fine, but if set to `null` or `Infinity` explicitly we should figure out what the behavior should be.\n",
        "createdAt" : "2016-06-30T20:21:39Z",
        "updatedAt" : "2016-07-05T14:19:19Z",
        "lastEditedBy" : "d10ccdef-08de-4320-917e-16a9175dedcf",
        "tags" : [
        ]
      },
      {
        "id" : "b0326af1-9a39-4999-a12b-3525523b2d29",
        "parentId" : "e04b5587-339a-436a-b115-b50546391155",
        "authorId" : "ff334962-2ee8-45f1-ad4a-cfb65ffd6744",
        "body" : "`Infinity` is documented to make the object print on a single line with no breaks. `null`, or any value for that matter, will be plugged in for `breakLength` in the `length > breakLength` comparison.\n",
        "createdAt" : "2016-06-30T21:49:39Z",
        "updatedAt" : "2016-07-05T14:19:19Z",
        "lastEditedBy" : "ff334962-2ee8-45f1-ad4a-cfb65ffd6744",
        "tags" : [
        ]
      }
    ],
    "commit" : "a2ee21db84845e0a645845d0ad07518fd6d87723",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +195,199 @@  if (ctx.maxArrayLength === undefined) ctx.maxArrayLength = kDefaultMaxLength;\n  if (ctx.maxArrayLength === null) ctx.maxArrayLength = Infinity;\n  if (ctx.breakLength === undefined) ctx.breakLength = 60;\n  return formatValue(ctx, obj, ctx.depth);\n}"
  },
  {
    "id" : "d3b1cd06-af71-4f44-a007-34e654dd68c0",
    "prId" : 12254,
    "prUrl" : "https://github.com/nodejs/node/pull/12254#pullrequestreview-31336676",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6a9c1556-32a6-44a9-85e8-410d21cba65c",
        "parentId" : null,
        "authorId" : "c8ef07ae-30f6-4919-9aa8-bf0160bbd4a0",
        "body" : "Also fyi @Fishrock123, this seems like a cleaner way to inspect Promise states than what the abort-on-rejected PR currently does…",
        "createdAt" : "2017-04-06T13:02:34Z",
        "updatedAt" : "2017-04-08T18:09:24Z",
        "lastEditedBy" : "c8ef07ae-30f6-4919-9aa8-bf0160bbd4a0",
        "tags" : [
        ]
      },
      {
        "id" : "9496b7dc-e8ff-4578-935a-f78b910b820a",
        "parentId" : "6a9c1556-32a6-44a9-85e8-410d21cba65c",
        "authorId" : "7490b440-07c7-4433-856f-3720a914a77a",
        "body" : "Errr, this allows you to get the actual result object e.g. an error without going through the Debug API? I was told that was not possible to do synchronously.",
        "createdAt" : "2017-04-06T14:36:11Z",
        "updatedAt" : "2017-04-08T18:09:24Z",
        "lastEditedBy" : "7490b440-07c7-4433-856f-3720a914a77a",
        "tags" : [
        ]
      },
      {
        "id" : "a4ee67cf-8ff2-4c9a-ac7a-5795e7dde209",
        "parentId" : "6a9c1556-32a6-44a9-85e8-410d21cba65c",
        "authorId" : "4b71aeaa-5376-4bc0-be81-0ae8df38206e",
        "body" : "@Fishrock123 this set of APIs is relatively new, having been added in V8 5.7 in https://github.com/v8/v8/commit/28432588c231019c2bb0dfbba8eba4304779706b. That might be why.",
        "createdAt" : "2017-04-06T14:52:50Z",
        "updatedAt" : "2017-04-08T18:09:24Z",
        "lastEditedBy" : "4b71aeaa-5376-4bc0-be81-0ae8df38206e",
        "tags" : [
        ]
      }
    ],
    "commit" : "a37273c1e4b93ed048e1d45818fe6c525480b121",
    "line" : 83,
    "diffHunk" : "@@ -1,1 +773,777 @@    var nextRecurseTimes = recurseTimes === null ? null : recurseTimes - 1;\n    var str = formatValue(ctx, result, nextRecurseTimes);\n    if (state === binding.kRejected) {\n      output.push('<rejected> ' + str);\n    } else {"
  },
  {
    "id" : "54de4cf5-31d5-435f-a58d-de1488942376",
    "prId" : 12712,
    "prUrl" : "https://github.com/nodejs/node/pull/12712#pullrequestreview-42872353",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "706821c1-911b-476e-baab-8f825b5b5e72",
        "parentId" : null,
        "authorId" : "4e9ef6b4-9a31-4818-a54f-a2b732308657",
        "body" : "Nit: moving the maybeCb out of the args seems nicer to me.\r\n```js\r\nfunction callbackified(maybeCb, ...args) {\r\n```",
        "createdAt" : "2017-06-08T12:03:13Z",
        "updatedAt" : "2017-06-11T02:49:54Z",
        "lastEditedBy" : "4e9ef6b4-9a31-4818-a54f-a2b732308657",
        "tags" : [
        ]
      },
      {
        "id" : "9ef12132-63fc-4cf1-b020-2ba8379c9df0",
        "parentId" : "706821c1-911b-476e-baab-8f825b5b5e72",
        "authorId" : "4b71aeaa-5376-4bc0-be81-0ae8df38206e",
        "body" : "`maybeCb` must be the last parameter, so that won't work. `(...args, maybeCb)` is not valid syntax either.",
        "createdAt" : "2017-06-08T12:16:43Z",
        "updatedAt" : "2017-06-11T02:49:54Z",
        "lastEditedBy" : "4b71aeaa-5376-4bc0-be81-0ae8df38206e",
        "tags" : [
        ]
      },
      {
        "id" : "6eef06ef-fcb8-46e9-a3d6-068e436796bd",
        "parentId" : "706821c1-911b-476e-baab-8f825b5b5e72",
        "authorId" : "4e9ef6b4-9a31-4818-a54f-a2b732308657",
        "body" : "Oh, ignore my comment, I somehow didn't see that it wasn't shift...",
        "createdAt" : "2017-06-08T12:19:41Z",
        "updatedAt" : "2017-06-11T02:49:54Z",
        "lastEditedBy" : "4e9ef6b4-9a31-4818-a54f-a2b732308657",
        "tags" : [
        ]
      }
    ],
    "commit" : "af3aa682ac534bb55765f5fef2755a88e5ff2580",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +1076,1080 @@  // and that the callback throwing will reject the promise.\n  function callbackified(...args) {\n    const maybeCb = args.pop();\n    if (typeof maybeCb !== 'function') {\n      throw new errors.TypeError("
  }
]