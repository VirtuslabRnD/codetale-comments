[
  {
    "id" : "915ed320-50a6-433e-8522-53a140618f7c",
    "prId" : 6895,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b1edc306-624a-4e1f-b6b7-2ba87078d80b",
        "parentId" : null,
        "authorId" : "102bde0f-5729-44fd-a85d-57ca690efbae",
        "body" : "I don't think this comment is correct. The change is intended to fix loosing output when doing process.exit. Interleaving will depend on OS level buffering. Here is the full backstory in case you want to link to it: https://github.com/nodejs/node/issues/6806#issuecomment-222350923\n",
        "createdAt" : "2016-05-29T09:29:16Z",
        "updatedAt" : "2016-06-01T22:59:35Z",
        "lastEditedBy" : "102bde0f-5729-44fd-a85d-57ca690efbae",
        "tags" : [
        ]
      },
      {
        "id" : "9b849595-e62a-466a-9bcf-ed2dba8efd6c",
        "parentId" : "b1edc306-624a-4e1f-b6b7-2ba87078d80b",
        "authorId" : "102bde0f-5729-44fd-a85d-57ca690efbae",
        "body" : "To clarify, IMHO the interleaving is a side effect of the blocking-ness.\n",
        "createdAt" : "2016-05-29T09:34:11Z",
        "updatedAt" : "2016-06-01T22:59:35Z",
        "lastEditedBy" : "102bde0f-5729-44fd-a85d-57ca690efbae",
        "tags" : [
        ]
      },
      {
        "id" : "62b9e1f1-0951-4f20-aa3f-1ae033a645d4",
        "parentId" : "b1edc306-624a-4e1f-b6b7-2ba87078d80b",
        "authorId" : "7490b440-07c7-4433-856f-3720a914a77a",
        "body" : "> The change is intended to fix loosing output when doing process.exit.\n\nTechnically it is intended to fix **both**.\n\n>  Interleaving will depend on OS level buffering.\n\nOf course, and OS X is hardcoded to 1kb so it won't change regardless.\n\n> To clarify, IMHO the interleaving is a side effect of the blocking-ness.\n\nSure, but it's still a problem we need to cover.\n\nTypically, it would just be an annoyance. You'd have all the information, just sorta mixed up.\n\nBut that's not always the case, since people often use ansi control characters in CLI apps.\n\nConsider a problem I ran into while writing the test: At 1024kb of data, including the newline `\\n`, an entire line of data no longer appears.\n\nWhy?\n\nSomewhere down the line `\\n` is being changed to `\\n\\r`, which overflows the buffer by one character, leaving a separate `\\r` which then erases the current line. Who is going to expect that?\n\nIf not me, very few people indeed. \n(That was done using `Terminal.app` on OS X. Given it is the default terminal, this will be in no way isolated.)\n",
        "createdAt" : "2016-05-29T14:09:26Z",
        "updatedAt" : "2016-06-01T22:59:35Z",
        "lastEditedBy" : "7490b440-07c7-4433-856f-3720a914a77a",
        "tags" : [
        ]
      },
      {
        "id" : "580190fc-5552-4943-977c-cdf157d88d5f",
        "parentId" : "b1edc306-624a-4e1f-b6b7-2ba87078d80b",
        "authorId" : "102bde0f-5729-44fd-a85d-57ca690efbae",
        "body" : "Ah, I see. Carry on then! :-)\n",
        "createdAt" : "2016-05-29T14:34:02Z",
        "updatedAt" : "2016-06-01T22:59:35Z",
        "lastEditedBy" : "102bde0f-5729-44fd-a85d-57ca690efbae",
        "tags" : [
        ]
      }
    ],
    "commit" : "88804b84ecb298d9e6525a6fbd0266ea5c357c35",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +49,53 @@  });\n\n  // Prevents interleaved stdout/stderr output in OS X terminals.\n  // As noted in the following reference, local TTYs tend to be quite fast and\n  // this behaviour has become expected due historical functionality on OS X,"
  }
]