[
  {
    "id" : "35954c2b-9a2d-4eb4-98a7-1251a1f74748",
    "prId" : 11005,
    "prUrl" : "https://github.com/nodejs/node/pull/11005#pullrequestreview-18922343",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e41ea431-611f-46a7-97f3-3e1e06179d90",
        "parentId" : null,
        "authorId" : "4224fcfe-ee22-4bd8-9ed5-4e8efd7a90bc",
        "body" : "semver-major?",
        "createdAt" : "2017-01-26T00:06:04Z",
        "updatedAt" : "2017-02-20T15:40:20Z",
        "lastEditedBy" : "4224fcfe-ee22-4bd8-9ed5-4e8efd7a90bc",
        "tags" : [
        ]
      },
      {
        "id" : "1224206e-db43-4da9-83e7-6c66569f92c1",
        "parentId" : "e41ea431-611f-46a7-97f3-3e1e06179d90",
        "authorId" : "e75ae5b4-0256-4743-b9d9-8adee03098da",
        "body" : "Do we always treat new properties in options objects as semver-major? If someone was passing unsupported option values to an API, and then the API started supporting those option values, it would feel major to them, but I don't know if that is our standard. What our API is is under-defined ATM.",
        "createdAt" : "2017-01-27T20:15:39Z",
        "updatedAt" : "2017-02-20T15:40:20Z",
        "lastEditedBy" : "e75ae5b4-0256-4743-b9d9-8adee03098da",
        "tags" : [
        ]
      }
    ],
    "commit" : "ea5679917311c0299dd0c5e3d36b3ef594d9de6d",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +345,349 @@  var context = options.secureContext ||\n                options.credentials ||\n                tls.createSecureContext(options);\n  res = tls_wrap.wrap(handle._externalStream,\n                      context.context,"
  }
]