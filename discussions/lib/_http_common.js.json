[
  {
    "id" : "5c16b1f5-609d-4e7f-a636-7d7b629d9a98",
    "prId" : 6533,
    "prUrl" : "https://github.com/nodejs/node/pull/6533#pullrequestreview-14109284",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5bf12c8e-5089-4fe8-847b-d13f8829d931",
        "parentId" : null,
        "authorId" : "9e96224b-2acc-4770-a5d7-d764637e4628",
        "body" : "you might want to check if setting a value and having a single return improves things.",
        "createdAt" : "2016-12-22T07:52:26Z",
        "updatedAt" : "2016-12-29T19:19:43Z",
        "lastEditedBy" : "9e96224b-2acc-4770-a5d7-d764637e4628",
        "tags" : [
        ]
      },
      {
        "id" : "f485fb13-e958-4bb6-8e6d-7596f872d0a8",
        "parentId" : "5bf12c8e-5089-4fe8-847b-d13f8829d931",
        "authorId" : "c5f34109-f61d-4540-9a67-e4a5494934e5",
        "body" : "I doubt it, but the early returns are what keeps the function length small enough (it avoids the increasing indentation) and allows for more unwinding.",
        "createdAt" : "2016-12-22T07:54:43Z",
        "updatedAt" : "2016-12-29T19:19:43Z",
        "lastEditedBy" : "c5f34109-f61d-4540-9a67-e4a5494934e5",
        "tags" : [
        ]
      },
      {
        "id" : "89b358c3-4622-4b72-a1c6-7ab6f2f0d7b4",
        "parentId" : "5bf12c8e-5089-4fe8-847b-d13f8829d931",
        "authorId" : "9e96224b-2acc-4770-a5d7-d764637e4628",
        "body" : "Oh, great. Than it's perfect.",
        "createdAt" : "2016-12-22T08:00:36Z",
        "updatedAt" : "2016-12-29T19:19:43Z",
        "lastEditedBy" : "9e96224b-2acc-4770-a5d7-d764637e4628",
        "tags" : [
        ]
      }
    ],
    "commit" : "4d7531de247339692aced0f9c5643d458e80fc6e",
    "line" : 52,
    "diffHunk" : "@@ -1,1 +275,279 @@    return false;\n  if (val.length < 3)\n    return true;\n  if (!validTokens[val.charCodeAt(2)])\n    return false;"
  },
  {
    "id" : "9dc979d3-ec65-462b-b610-5c8b885b00ff",
    "prId" : 6533,
    "prUrl" : "https://github.com/nodejs/node/pull/6533#pullrequestreview-16422286",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ef4a7df3-9d49-4fe6-abdd-9c9accba622f",
        "parentId" : null,
        "authorId" : "01fa8152-e4d4-43c7-8aff-1ec2eff6a6b7",
        "body" : "do you have any reference mat'l on the choice of int vs bool here?  just interested.",
        "createdAt" : "2017-01-12T18:22:24Z",
        "updatedAt" : "2017-01-12T18:22:24Z",
        "lastEditedBy" : "01fa8152-e4d4-43c7-8aff-1ec2eff6a6b7",
        "tags" : [
        ]
      },
      {
        "id" : "8c9a355a-ff41-488b-920e-e82c3e87f823",
        "parentId" : "ef4a7df3-9d49-4fe6-abdd-9c9accba622f",
        "authorId" : "c5f34109-f61d-4540-9a67-e4a5494934e5",
        "body" : "Performance-wise? Not really. At the very least it's more compact. I wouldn't be surprised though if V8 internally treated booleans as SMIs with values of 0 or 1.",
        "createdAt" : "2017-01-12T18:25:22Z",
        "updatedAt" : "2017-01-12T18:25:22Z",
        "lastEditedBy" : "c5f34109-f61d-4540-9a67-e4a5494934e5",
        "tags" : [
        ]
      }
    ],
    "commit" : "4d7531de247339692aced0f9c5643d458e80fc6e",
    "line" : 106,
    "diffHunk" : "@@ -1,1 +317,321 @@  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1  // ... 255\n];\nfunction checkInvalidHeaderChar(val) {\n  val += '';"
  },
  {
    "id" : "beb232d8-ea76-4336-87f0-ffe181c2bc81",
    "prId" : 6570,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "438baf07-b48a-4649-80f0-390e4ba0bd84",
        "parentId" : null,
        "authorId" : "4224fcfe-ee22-4bd8-9ed5-4e8efd7a90bc",
        "body" : "Isn't this the common case?  Can you quantify how much the manual loop unrolling helps?\n",
        "createdAt" : "2016-05-08T16:34:28Z",
        "updatedAt" : "2016-06-14T19:13:16Z",
        "lastEditedBy" : "4224fcfe-ee22-4bd8-9ed5-4e8efd7a90bc",
        "tags" : [
        ]
      },
      {
        "id" : "e5c8236b-ecea-491b-b6b8-692c1b805b42",
        "parentId" : "438baf07-b48a-4649-80f0-390e4ba0bd84",
        "authorId" : "c5f34109-f61d-4540-9a67-e4a5494934e5",
        "body" : "I didn't save the old results, but there was a lesser performance improvement with the pure loop implementation. I can run it again without and post the results here.\n",
        "createdAt" : "2016-05-08T18:08:29Z",
        "updatedAt" : "2016-06-14T19:13:16Z",
        "lastEditedBy" : "c5f34109-f61d-4540-9a67-e4a5494934e5",
        "tags" : [
        ]
      },
      {
        "id" : "94c16d07-0881-4ca6-9f38-a3f2aaebe958",
        "parentId" : "438baf07-b48a-4649-80f0-390e4ba0bd84",
        "authorId" : "c5f34109-f61d-4540-9a67-e4a5494934e5",
        "body" : "Ok here are the results with just the loop, no unrolling:\n\n```\nhttp/check_is_http_token.js key=\"TCN\" n=\"500000000\": ./node: 73576000 ./node-master: 76945000 ................... -4.38%\nhttp/check_is_http_token.js key=\"ETag\" n=\"500000000\": ./node: 60694000 ./node-master: 59833000 ................... 1.44%\nhttp/check_is_http_token.js key=\"date\" n=\"500000000\": ./node: 71346000 ./node-master: 59617000 .................. 19.68%\nhttp/check_is_http_token.js key=\"Vary\" n=\"500000000\": ./node: 64590000 ./node-master: 58538000 .................. 10.34%\nhttp/check_is_http_token.js key=\"server\" n=\"500000000\": ./node: 49815000 ./node-master: 43208000 ................ 15.29%\nhttp/check_is_http_token.js key=\"Server\" n=\"500000000\": ./node: 44101000 ./node-master: 42926000 ................. 2.74%\nhttp/check_is_http_token.js key=\"status\" n=\"500000000\": ./node: 49805000 ./node-master: 43655000 ................ 14.09%\nhttp/check_is_http_token.js key=\"version\" n=\"500000000\": ./node: 43245000 ./node-master: 37774000 ............... 14.48%\nhttp/check_is_http_token.js key=\"Expires\" n=\"500000000\": ./node: 39172000 ./node-master: 37568000 ................ 4.27%\nhttp/check_is_http_token.js key=\"alt-svc\" n=\"500000000\": ./node: 38508000 ./node-master: 35600000 ................ 8.17%\nhttp/check_is_http_token.js key=\"location\" n=\"500000000\": ./node: 38132000 ./node-master: 34186000 .............. 11.54%\nhttp/check_is_http_token.js key=\"Connection\" n=\"500000000\": ./node: 26488000 ./node-master: 24878000 ............. 6.47%\nhttp/check_is_http_token.js key=\"Keep-Alive\" n=\"500000000\": ./node: 29028000 ./node-master: 27224000 ............. 6.63%\nhttp/check_is_http_token.js key=\"content-type\" n=\"500000000\": ./node: 23468000 ./node-master: 21554000 ........... 8.88%\nhttp/check_is_http_token.js key=\"Content-Type\" n=\"500000000\": ./node: 24507000 ./node-master: 23320000 ........... 5.09%\nhttp/check_is_http_token.js key=\"Cache-Control\" n=\"500000000\": ./node: 22685000 ./node-master: 19883000 ......... 14.09%\nhttp/check_is_http_token.js key=\"Last-Modified\" n=\"500000000\": ./node: 22605000 ./node-master: 19911000 ......... 13.53%\nhttp/check_is_http_token.js key=\"Accept-Ranges\" n=\"500000000\": ./node: 22516000 ./node-master: 19637000 ......... 14.66%\nhttp/check_is_http_token.js key=\"content-length\" n=\"500000000\": ./node: 20171000 ./node-master: 18336000 ........ 10.01%\nhttp/check_is_http_token.js key=\"x-frame-options\" n=\"500000000\": ./node: 18221000 ./node-master: 16510000 ....... 10.36%\nhttp/check_is_http_token.js key=\"x-xss-protection\" n=\"500000000\": ./node: 16391000 ./node-master: 14117000 ...... 16.11%\nhttp/check_is_http_token.js key=\"Content-Encoding\" n=\"500000000\": ./node: 18711000 ./node-master: 16602000 ...... 12.70%\nhttp/check_is_http_token.js key=\"Content-Location\" n=\"500000000\": ./node: 18612000 ./node-master: 16531000 ...... 12.59%\nhttp/check_is_http_token.js key=\"Transfer-Encoding\" n=\"500000000\": ./node: 17713000 ./node-master: 15734000 ..... 12.58%\nhttp/check_is_http_token.js key=\"alternate-protocol\" n=\"500000000\": ./node: 14988000 ./node-master: 14720000 ..... 1.82%\nhttp/check_is_http_token.js key=\":\" n=\"500000000\": ./node: 155200000 ./node-master: 108860000 ................... 42.57%\nhttp/check_is_http_token.js key=\"@@\" n=\"500000000\": ./node: 151200000 ./node-master: 109090000 .................. 38.60%\nhttp/check_is_http_token.js key=\"中文呢\" n=\"500000000\": ./node: 138090000 ./node-master: 101780000 ............... 35.67%\nhttp/check_is_http_token.js key=\"((((())))\" n=\"500000000\": ./node: 184100000 ./node-master: 105320000 ........... 74.80%\nhttp/check_is_http_token.js key=\":alternate-protocol\" n=\"500000000\": ./node: 141000000 ./node-master: 103870000 . 35.75%\nhttp/check_is_http_token.js key=\"alternate-protocol:\" n=\"500000000\": ./node: 14917000 ./node-master: 11983000 ... 24.49%\n```\n",
        "createdAt" : "2016-05-08T20:30:05Z",
        "updatedAt" : "2016-06-14T19:13:16Z",
        "lastEditedBy" : "c5f34109-f61d-4540-9a67-e4a5494934e5",
        "tags" : [
        ]
      }
    ],
    "commit" : "c570182a39ada502d0f65223728b0cd9e136cda0",
    "line" : 88,
    "diffHunk" : "@@ -1,1 +283,287 @@      if (!isValidTokenChar(val.charCodeAt(2)))\n        return false;\n      if (len > 3) {\n        if (!isValidTokenChar(val.charCodeAt(3)))\n          return false;"
  }
]