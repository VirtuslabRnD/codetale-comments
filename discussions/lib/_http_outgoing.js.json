[
  {
    "id" : "35347260-13ad-4464-8d86-be874e249522",
    "prId" : 1062,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ac5a462a-9320-4524-b293-ef965b236b67",
        "parentId" : null,
        "authorId" : "4224fcfe-ee22-4bd8-9ed5-4e8efd7a90bc",
        "body" : "Can you create the _contentLength field in the OutgoingMessage constructor?  Adding properties post facto causes a hidden class transition.\n\nEDIT: Sorry, scratch that.  I see you're already doing that.\n",
        "createdAt" : "2015-03-05T12:39:32Z",
        "updatedAt" : "2015-03-05T21:21:47Z",
        "lastEditedBy" : "4224fcfe-ee22-4bd8-9ed5-4e8efd7a90bc",
        "tags" : [
        ]
      }
    ],
    "commit" : "4874182065655dcf8a39bfa3e4c9b47bfb9e0f75",
    "line" : 77,
    "diffHunk" : "@@ -1,1 +532,536 @@    } else {\n      this._contentLength = 0;\n    }\n    this._implicitHeader();\n  }"
  },
  {
    "id" : "b3d187bb-99dd-4b13-a641-8a75c509513a",
    "prId" : 6533,
    "prUrl" : "https://github.com/nodejs/node/pull/6533#pullrequestreview-13920457",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4db98a81-7a56-4d1f-9dc2-c018d7698eb1",
        "parentId" : null,
        "authorId" : "9e96224b-2acc-4770-a5d7-d764637e4628",
        "body" : "this use of bind is awesome. There might be more areas in which we could improve things.",
        "createdAt" : "2016-12-21T08:39:31Z",
        "updatedAt" : "2016-12-29T19:19:43Z",
        "lastEditedBy" : "9e96224b-2acc-4770-a5d7-d764637e4628",
        "tags" : [
        ]
      }
    ],
    "commit" : "4d7531de247339692aced0f9c5643d458e80fc6e",
    "line" : 173,
    "diffHunk" : "@@ -1,1 +604,608 @@    this.once('finish', callback);\n\n  var finish = onFinish.bind(undefined, this);\n\n  var ret;"
  },
  {
    "id" : "60a8da5c-5272-4af2-8d5d-6d7de4f7d8ae",
    "prId" : 10558,
    "prUrl" : "https://github.com/nodejs/node/pull/10558#pullrequestreview-14855338",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "941255e1-3c48-4ca8-af8a-4bf039abbad2",
        "parentId" : null,
        "authorId" : "bd43ce4d-85c2-4f54-8666-274f0f79f75b",
        "body" : "is it safe to use instanceof here?",
        "createdAt" : "2017-01-02T13:05:26Z",
        "updatedAt" : "2017-01-11T17:58:13Z",
        "lastEditedBy" : "bd43ce4d-85c2-4f54-8666-274f0f79f75b",
        "tags" : [
        ]
      },
      {
        "id" : "bbe998d0-60b6-4c55-94a5-655f72b1e64a",
        "parentId" : "941255e1-3c48-4ca8-af8a-4bf039abbad2",
        "authorId" : "c5f34109-f61d-4540-9a67-e4a5494934e5",
        "body" : "It should be, since we're the ones storing header values in `this._headers`. That's also the reason why we can use for-in instead of `Object.keys()` (slight speedup there) when iterating over `this._headers`.",
        "createdAt" : "2017-01-02T15:36:50Z",
        "updatedAt" : "2017-01-11T17:58:13Z",
        "lastEditedBy" : "c5f34109-f61d-4540-9a67-e4a5494934e5",
        "tags" : [
        ]
      }
    ],
    "commit" : "03b9f6fe26654e916f5e2dc7e9154ed51e5f1e99",
    "line" : 140,
    "diffHunk" : "@@ -1,1 +204,208 @@      value = entry[1];\n\n      if (value instanceof Array) {\n        for (j = 0; j < value.length; j++) {\n          storeHeader(this, state, field, value[j], false);"
  },
  {
    "id" : "4e776800-37b8-49d1-b968-39aa7bfb7113",
    "prId" : 10558,
    "prUrl" : "https://github.com/nodejs/node/pull/10558#pullrequestreview-14855449",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a5b01458-c08e-4c6b-8970-5566a2cb8825",
        "parentId" : null,
        "authorId" : "bd43ce4d-85c2-4f54-8666-274f0f79f75b",
        "body" : "should we not use similar logic as in `matchKnownFields` here?",
        "createdAt" : "2017-01-02T13:16:47Z",
        "updatedAt" : "2017-01-11T17:58:13Z",
        "lastEditedBy" : "bd43ce4d-85c2-4f54-8666-274f0f79f75b",
        "tags" : [
        ]
      },
      {
        "id" : "ca5e0ebf-c07a-480c-952d-4c9e3269dac5",
        "parentId" : "a5b01458-c08e-4c6b-8970-5566a2cb8825",
        "authorId" : "c5f34109-f61d-4540-9a67-e4a5494934e5",
        "body" : "I don't recall specifically if I tested it in here or not, but in some places such functions didn't seem to perform as well for whatever reason.",
        "createdAt" : "2017-01-02T15:38:39Z",
        "updatedAt" : "2017-01-11T17:58:13Z",
        "lastEditedBy" : "c5f34109-f61d-4540-9a67-e4a5494934e5",
        "tags" : [
        ]
      }
    ],
    "commit" : "03b9f6fe26654e916f5e2dc7e9154ed51e5f1e99",
    "line" : 402,
    "diffHunk" : "@@ -1,1 +420,424 @@  if (!this._headers) return;\n\n  var entry = this._headers[name.toLowerCase()];\n  if (!entry)\n    return;"
  },
  {
    "id" : "641a04cc-8895-4937-a04b-98121d7cda4c",
    "prId" : 10805,
    "prUrl" : "https://github.com/nodejs/node/pull/10805#pullrequestreview-18221609",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e9a82fc4-8d0e-4b70-83fd-634d52eac61f",
        "parentId" : null,
        "authorId" : "23c9565c-5fe0-4faf-82b2-dc40116c9bfa",
        "body" : "Is there any reason this can't be an `Object.assign` or `util._extend`? ",
        "createdAt" : "2017-01-24T12:48:34Z",
        "updatedAt" : "2017-02-20T21:50:51Z",
        "lastEditedBy" : "23c9565c-5fe0-4faf-82b2-dc40116c9bfa",
        "tags" : [
        ]
      },
      {
        "id" : "c7396ec0-7f41-4a71-8a2c-3d56e0dd61e7",
        "parentId" : "e9a82fc4-8d0e-4b70-83fd-634d52eac61f",
        "authorId" : "c5f34109-f61d-4540-9a67-e4a5494934e5",
        "body" : "Performance. Last we checked, `Object.assign()` is still atrociously slow. Also, it's simple enough to inline a copy implementation here.",
        "createdAt" : "2017-01-24T17:44:46Z",
        "updatedAt" : "2017-02-20T21:50:51Z",
        "lastEditedBy" : "c5f34109-f61d-4540-9a67-e4a5494934e5",
        "tags" : [
        ]
      }
    ],
    "commit" : "3e6f1032a4fdb8ca7fba02c7d2103fba68c0ee1f",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +443,447 @@  if (headers) {\n    const keys = Object.keys(headers);\n    for (var i = 0; i < keys.length; ++i) {\n      const key = keys[i];\n      const val = headers[key][1];"
  },
  {
    "id" : "4b90e653-e09c-4df5-b996-e17460f8c29a",
    "prId" : 10805,
    "prUrl" : "https://github.com/nodejs/node/pull/10805#pullrequestreview-22410732",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6692147a-5a5c-4b83-a138-5bd9189230e8",
        "parentId" : null,
        "authorId" : "e75ae5b4-0256-4743-b9d9-8adee03098da",
        "body" : "looks like a deep copy to me, what am I missing?",
        "createdAt" : "2017-01-24T18:19:02Z",
        "updatedAt" : "2017-02-20T21:50:51Z",
        "lastEditedBy" : "e75ae5b4-0256-4743-b9d9-8adee03098da",
        "tags" : [
        ]
      },
      {
        "id" : "f83e29df-6d90-4398-8f6f-dbb27b510a64",
        "parentId" : "6692147a-5a5c-4b83-a138-5bd9189230e8",
        "authorId" : "c5f34109-f61d-4540-9a67-e4a5494934e5",
        "body" : "It's not. Array values are no longer copied.",
        "createdAt" : "2017-01-24T18:28:20Z",
        "updatedAt" : "2017-02-20T21:50:51Z",
        "lastEditedBy" : "c5f34109-f61d-4540-9a67-e4a5494934e5",
        "tags" : [
        ]
      },
      {
        "id" : "25ec9ee3-96df-4a8e-a61d-6c403e30229b",
        "parentId" : "6692147a-5a5c-4b83-a138-5bd9189230e8",
        "authorId" : "e75ae5b4-0256-4743-b9d9-8adee03098da",
        "body" : "ok, so then in the docs above we need to warn that the return value should *not* be modified, right? Or is it deliberately supported, modifying the array values?",
        "createdAt" : "2017-01-24T18:31:01Z",
        "updatedAt" : "2017-02-20T21:50:51Z",
        "lastEditedBy" : "e75ae5b4-0256-4743-b9d9-8adee03098da",
        "tags" : [
        ]
      },
      {
        "id" : "4debceac-df01-4a3d-8ffb-164d3ce90d0e",
        "parentId" : "6692147a-5a5c-4b83-a138-5bd9189230e8",
        "authorId" : "e75ae5b4-0256-4743-b9d9-8adee03098da",
        "body" : "and I really misread the code :blush: I thought I saw two loops.",
        "createdAt" : "2017-01-24T18:31:21Z",
        "updatedAt" : "2017-02-20T21:50:51Z",
        "lastEditedBy" : "e75ae5b4-0256-4743-b9d9-8adee03098da",
        "tags" : [
        ]
      },
      {
        "id" : "d8005eb9-e06b-4937-b092-188dfe70f87d",
        "parentId" : "6692147a-5a5c-4b83-a138-5bd9189230e8",
        "authorId" : "c5f34109-f61d-4540-9a67-e4a5494934e5",
        "body" : "It's just matching `getHeader()` behavior.",
        "createdAt" : "2017-01-24T18:33:43Z",
        "updatedAt" : "2017-02-20T21:50:51Z",
        "lastEditedBy" : "c5f34109-f61d-4540-9a67-e4a5494934e5",
        "tags" : [
        ]
      },
      {
        "id" : "90f180ee-996f-46a7-98fa-1363ee809e38",
        "parentId" : "6692147a-5a5c-4b83-a138-5bd9189230e8",
        "authorId" : "e75ae5b4-0256-4743-b9d9-8adee03098da",
        "body" : "No problem with the behaviour, +1 for consistency, but we need the warning, right? To prevent modifying actual msg state?",
        "createdAt" : "2017-01-24T18:36:59Z",
        "updatedAt" : "2017-02-20T21:50:51Z",
        "lastEditedBy" : "e75ae5b4-0256-4743-b9d9-8adee03098da",
        "tags" : [
        ]
      },
      {
        "id" : "1fd34577-7ae6-4aef-83cc-89675ed5d2df",
        "parentId" : "6692147a-5a5c-4b83-a138-5bd9189230e8",
        "authorId" : "c5f34109-f61d-4540-9a67-e4a5494934e5",
        "body" : "I don't know, we haven't had such a warning for `getHeader()` yet. Some people may find it useful to simply add more values for example. \\*shrug\\*",
        "createdAt" : "2017-01-24T19:05:01Z",
        "updatedAt" : "2017-02-20T21:50:51Z",
        "lastEditedBy" : "c5f34109-f61d-4540-9a67-e4a5494934e5",
        "tags" : [
        ]
      },
      {
        "id" : "c36b87f9-be93-4d09-93ba-3bebc42aebc9",
        "parentId" : "6692147a-5a5c-4b83-a138-5bd9189230e8",
        "authorId" : "e75ae5b4-0256-4743-b9d9-8adee03098da",
        "body" : "OK, then appending to the array is explicitly supported as a way to add header values, great, no need for a warning,  we should document it as a feature.",
        "createdAt" : "2017-01-24T19:08:27Z",
        "updatedAt" : "2017-02-20T21:50:51Z",
        "lastEditedBy" : "e75ae5b4-0256-4743-b9d9-8adee03098da",
        "tags" : [
        ]
      },
      {
        "id" : "965322ef-1321-498f-94af-118c1b3e7dd0",
        "parentId" : "6692147a-5a5c-4b83-a138-5bd9189230e8",
        "authorId" : "c5f34109-f61d-4540-9a67-e4a5494934e5",
        "body" : "Well it's not *explicitly supported* as in we document it, it's more of a side effect of `getHeader()`'s implementation. Whether it was intentional or not when `getHeader()` was added, I do not know offhand.",
        "createdAt" : "2017-01-24T19:25:12Z",
        "updatedAt" : "2017-02-20T21:50:51Z",
        "lastEditedBy" : "c5f34109-f61d-4540-9a67-e4a5494934e5",
        "tags" : [
        ]
      },
      {
        "id" : "8f594e7f-d30a-48c8-8a1d-7a6adb061dc4",
        "parentId" : "6692147a-5a5c-4b83-a138-5bd9189230e8",
        "authorId" : "e75ae5b4-0256-4743-b9d9-8adee03098da",
        "body" : "Well, it works, \"some people may find it useful\", and we should either warn people that they should not do it, because the feature may go away, or doc it as a feature, so they know they can rely on it. We have difficulty historically in defining what is or is not the node API, I would prefer we be start being more clear about this. cc: @gibfahn \r\n",
        "createdAt" : "2017-01-24T19:29:39Z",
        "updatedAt" : "2017-02-20T21:50:51Z",
        "lastEditedBy" : "e75ae5b4-0256-4743-b9d9-8adee03098da",
        "tags" : [
        ]
      },
      {
        "id" : "b3e2c94d-b4ed-4f2a-bf2e-84a140473670",
        "parentId" : "6692147a-5a5c-4b83-a138-5bd9189230e8",
        "authorId" : "c5f34109-f61d-4540-9a67-e4a5494934e5",
        "body" : "Isn't the term 'shallow' used in the description an indication of this already (it means values are copied \"as-is\")?",
        "createdAt" : "2017-01-27T22:29:22Z",
        "updatedAt" : "2017-02-20T21:50:51Z",
        "lastEditedBy" : "c5f34109-f61d-4540-9a67-e4a5494934e5",
        "tags" : [
        ]
      },
      {
        "id" : "fdf03bbe-e11b-4d55-83dd-4e70e28d34a9",
        "parentId" : "6692147a-5a5c-4b83-a138-5bd9189230e8",
        "authorId" : "e75ae5b4-0256-4743-b9d9-8adee03098da",
        "body" : "shallow can mean \"copied as-is, so don't touch the values, you will mess http up\" or \"the values are copied as-is, so they can be modified\". \"shallow\" describes what the code does, not how the API is allowed to be used.",
        "createdAt" : "2017-01-27T22:39:10Z",
        "updatedAt" : "2017-02-20T21:50:51Z",
        "lastEditedBy" : "e75ae5b4-0256-4743-b9d9-8adee03098da",
        "tags" : [
        ]
      },
      {
        "id" : "d5d7f0e2-fcfd-4310-8e6e-4fbefe768800",
        "parentId" : "6692147a-5a5c-4b83-a138-5bd9189230e8",
        "authorId" : "e75ae5b4-0256-4743-b9d9-8adee03098da",
        "body" : "For example, https://github.com/nodejs/node/pull/10795, we could mutate the return values... but we considered that buggy usage. Here, its not clear, is the mutability a necessary evil for compatibility, or a feature.",
        "createdAt" : "2017-01-27T22:42:43Z",
        "updatedAt" : "2017-02-20T21:50:51Z",
        "lastEditedBy" : "e75ae5b4-0256-4743-b9d9-8adee03098da",
        "tags" : [
        ]
      },
      {
        "id" : "bcea2ed2-e61e-4c6e-822d-e2176142982c",
        "parentId" : "6692147a-5a5c-4b83-a138-5bd9189230e8",
        "authorId" : "c5f34109-f61d-4540-9a67-e4a5494934e5",
        "body" : "I can't speak about the origin of `getHeader()`, but to me explicitly stating a shallow copy is made in this new function implies that being able to add/remove to/from array values is intentional.",
        "createdAt" : "2017-01-27T22:57:06Z",
        "updatedAt" : "2017-02-20T21:50:51Z",
        "lastEditedBy" : "c5f34109-f61d-4540-9a67-e4a5494934e5",
        "tags" : [
        ]
      },
      {
        "id" : "28566fd8-3c30-4ce3-b7a6-cf2525384786",
        "parentId" : "6692147a-5a5c-4b83-a138-5bd9189230e8",
        "authorId" : "e75ae5b4-0256-4743-b9d9-8adee03098da",
        "body" : "OK, so my request is that that implication be stated in the docs, so people don't think its like #10795, an unfortunate loop-hole, that will be closed in the future, and that they should not depend on.",
        "createdAt" : "2017-01-27T23:04:07Z",
        "updatedAt" : "2017-02-20T21:50:51Z",
        "lastEditedBy" : "e75ae5b4-0256-4743-b9d9-8adee03098da",
        "tags" : [
        ]
      },
      {
        "id" : "2f8b2f09-b66a-4780-9d3e-26981c9ca98b",
        "parentId" : "6692147a-5a5c-4b83-a138-5bd9189230e8",
        "authorId" : "c5f34109-f61d-4540-9a67-e4a5494934e5",
        "body" : "I think https://github.com/nodejs/node/pull/10795 is a different situation. There is arguably less usefulness in mutating the list of ciphers/hashes supported by OpenSSL. Mutating the array values in this PR is *more* useful because you do not have to continually execute `setHeader()`, which has additional overhead, when you want to add more values for that header.",
        "createdAt" : "2017-01-27T23:07:14Z",
        "updatedAt" : "2017-02-20T21:50:51Z",
        "lastEditedBy" : "c5f34109-f61d-4540-9a67-e4a5494934e5",
        "tags" : [
        ]
      },
      {
        "id" : "2009c2cc-d75f-4750-8742-63f029df9cd3",
        "parentId" : "6692147a-5a5c-4b83-a138-5bd9189230e8",
        "authorId" : "e75ae5b4-0256-4743-b9d9-8adee03098da",
        "body" : "I agree it is different. I just want it stated in the docs, rather than \"implied\" (your word). I suggest you include what you just wrote:\r\n\r\n> The array values can be mutated, which is useful because you do not have to continually execute setHeader(), which has additional overhead, when you want to add more values for that header.\r\n\r\nYou seem dead set against adding an explanatory sentence, because you feel the user should be able to derive this understanding from the word \"shallow\" (if I understand you correctly), but I don't think one extra sentence is overkill here.",
        "createdAt" : "2017-01-27T23:11:24Z",
        "updatedAt" : "2017-02-20T21:50:51Z",
        "lastEditedBy" : "e75ae5b4-0256-4743-b9d9-8adee03098da",
        "tags" : [
        ]
      },
      {
        "id" : "bbb35d7e-78a5-4463-a8e8-9d4a2f2b3490",
        "parentId" : "6692147a-5a5c-4b83-a138-5bd9189230e8",
        "authorId" : "c5f34109-f61d-4540-9a67-e4a5494934e5",
        "body" : "@sam-github It's added now... LGTY?",
        "createdAt" : "2017-02-17T02:20:17Z",
        "updatedAt" : "2017-02-20T21:50:51Z",
        "lastEditedBy" : "c5f34109-f61d-4540-9a67-e4a5494934e5",
        "tags" : [
        ]
      }
    ],
    "commit" : "3e6f1032a4fdb8ca7fba02c7d2103fba68c0ee1f",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +437,441 @@\n\n// Returns a shallow copy of the current outgoing headers.\nOutgoingMessage.prototype.getHeaders = function getHeaders() {\n  const headers = this._headers;"
  },
  {
    "id" : "27468a74-4d34-462c-b529-7fd0c68212b8",
    "prId" : 10805,
    "prUrl" : "https://github.com/nodejs/node/pull/10805#pullrequestreview-20047714",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "30664f0a-e786-42b2-a4be-6bdd1a865f7d",
        "parentId" : null,
        "authorId" : "b5634520-1776-44d8-b06b-105c83374f81",
        "body" : "This would return true for `constructor`, `__proto__`, right?",
        "createdAt" : "2017-01-28T06:29:36Z",
        "updatedAt" : "2017-02-20T21:50:51Z",
        "lastEditedBy" : "b5634520-1776-44d8-b06b-105c83374f81",
        "tags" : [
        ]
      },
      {
        "id" : "a3c654e2-9cbb-4df2-9230-8e1739373dbd",
        "parentId" : "30664f0a-e786-42b2-a4be-6bdd1a865f7d",
        "authorId" : "c5f34109-f61d-4540-9a67-e4a5494934e5",
        "body" : "Technically yes, but that's nothing new.",
        "createdAt" : "2017-01-28T08:08:53Z",
        "updatedAt" : "2017-02-20T21:50:51Z",
        "lastEditedBy" : "c5f34109-f61d-4540-9a67-e4a5494934e5",
        "tags" : [
        ]
      },
      {
        "id" : "75786008-d0c2-4009-ae01-be3ed4f436e5",
        "parentId" : "30664f0a-e786-42b2-a4be-6bdd1a865f7d",
        "authorId" : "b5634520-1776-44d8-b06b-105c83374f81",
        "body" : "A `has` function returning true for something which is actually not there doesn't feel right. Strictly speaking, those inherited properties are not *headers*.",
        "createdAt" : "2017-01-28T09:51:23Z",
        "updatedAt" : "2017-02-20T21:50:51Z",
        "lastEditedBy" : "b5634520-1776-44d8-b06b-105c83374f81",
        "tags" : [
        ]
      },
      {
        "id" : "186b1863-d607-41c5-81ed-05afc44a0ffa",
        "parentId" : "30664f0a-e786-42b2-a4be-6bdd1a865f7d",
        "authorId" : "c5f34109-f61d-4540-9a67-e4a5494934e5",
        "body" : "You could make the same argument for the already existing `getHeader()`. I'm not sure it's best to have a difference in functionality between the two, especially since I'd like to be able to backport these additions and if we changed the behavior (of `getHeader()`), this PR would be semver-major then.",
        "createdAt" : "2017-01-28T10:18:20Z",
        "updatedAt" : "2017-02-20T21:50:51Z",
        "lastEditedBy" : "c5f34109-f61d-4540-9a67-e4a5494934e5",
        "tags" : [
        ]
      },
      {
        "id" : "f3e98060-92ef-415e-9d26-0dc263b41f85",
        "parentId" : "30664f0a-e786-42b2-a4be-6bdd1a865f7d",
        "authorId" : "b5634520-1776-44d8-b06b-105c83374f81",
        "body" : "I guess we can fix it a separate PR.",
        "createdAt" : "2017-02-03T16:21:31Z",
        "updatedAt" : "2017-02-20T21:50:51Z",
        "lastEditedBy" : "b5634520-1776-44d8-b06b-105c83374f81",
        "tags" : [
        ]
      }
    ],
    "commit" : "3e6f1032a4fdb8ca7fba02c7d2103fba68c0ee1f",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +458,462 @@  }\n\n  return !!(this._headers && this._headers[name.toLowerCase()]);\n};\n"
  }
]