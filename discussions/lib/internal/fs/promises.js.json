[
  {
    "id" : "64a9cdcf-dc02-41dc-af87-6fdadc7adbdc",
    "prId" : 37393,
    "prUrl" : "https://github.com/nodejs/node/pull/37393#pullrequestreview-594791815",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1f25b348-23af-4984-a762-0a8e60c09ae0",
        "parentId" : null,
        "authorId" : "df7fe02e-189e-45c5-a682-9b780fdce53e",
        "body" : "What if the signal is aborted while we wait for `open`? Shouldn't we have the same `try { } finally { }` pattern as in `writeFile`?",
        "createdAt" : "2021-02-20T21:51:49Z",
        "updatedAt" : "2021-02-26T15:29:28Z",
        "lastEditedBy" : "df7fe02e-189e-45c5-a682-9b780fdce53e",
        "tags" : [
        ]
      },
      {
        "id" : "6ceb5a20-9f35-4178-887b-d03a72372462",
        "parentId" : "1f25b348-23af-4984-a762-0a8e60c09ae0",
        "authorId" : "af81501b-2414-48e7-be86-74427773dffa",
        "body" : "`readFileHandle` already throws",
        "createdAt" : "2021-02-20T21:54:33Z",
        "updatedAt" : "2021-02-26T15:29:28Z",
        "lastEditedBy" : "af81501b-2414-48e7-be86-74427773dffa",
        "tags" : [
        ]
      },
      {
        "id" : "af555cf8-8ac5-4f94-87d8-98c36f4aafc3",
        "parentId" : "1f25b348-23af-4984-a762-0a8e60c09ae0",
        "authorId" : "df7fe02e-189e-45c5-a682-9b780fdce53e",
        "body" : "So does `writeFileHandle`, maybe we should remove the change above (line 678..).\r\n\r\nhttps://github.com/nodejs/node/blob/98037294d2b624bae25a1971e06f99d761f19cba/lib/internal/fs/promises.js#L275-L282",
        "createdAt" : "2021-02-20T21:58:15Z",
        "updatedAt" : "2021-02-26T15:29:28Z",
        "lastEditedBy" : "df7fe02e-189e-45c5-a682-9b780fdce53e",
        "tags" : [
        ]
      },
      {
        "id" : "93ba9029-413e-42a9-b65e-2ab266344138",
        "parentId" : "1f25b348-23af-4984-a762-0a8e60c09ae0",
        "authorId" : "af81501b-2414-48e7-be86-74427773dffa",
        "body" : "While true, there's a minor difference here which why I changed it the way I did (what you suggested was my first instinct as well). `writeFileHandle` returns without error if the amount of data to be written is `0` bytes. I assumed that that's why the function was written in the original way (with the abort signal check before the write). If this change is immaterial, I think that removing the changes of line 678 is the best solution to this PR.",
        "createdAt" : "2021-02-20T22:02:20Z",
        "updatedAt" : "2021-02-26T15:29:28Z",
        "lastEditedBy" : "af81501b-2414-48e7-be86-74427773dffa",
        "tags" : [
        ]
      },
      {
        "id" : "996631bf-bbf6-421e-9a40-ef396684f7ff",
        "parentId" : "1f25b348-23af-4984-a762-0a8e60c09ae0",
        "authorId" : "af81501b-2414-48e7-be86-74427773dffa",
        "body" : "Oh, re-reading it I assume that it was written this way to avoid allocating the buffer which might be large... ",
        "createdAt" : "2021-02-20T22:07:46Z",
        "updatedAt" : "2021-02-26T15:29:28Z",
        "lastEditedBy" : "af81501b-2414-48e7-be86-74427773dffa",
        "tags" : [
        ]
      },
      {
        "id" : "8ba0e632-b692-44d5-bb15-5f9b66a8d956",
        "parentId" : "1f25b348-23af-4984-a762-0a8e60c09ae0",
        "authorId" : "df7fe02e-189e-45c5-a682-9b780fdce53e",
        "body" : "Yeah, removing it is probably the right move here",
        "createdAt" : "2021-02-20T22:12:41Z",
        "updatedAt" : "2021-02-26T15:29:28Z",
        "lastEditedBy" : "df7fe02e-189e-45c5-a682-9b780fdce53e",
        "tags" : [
        ]
      },
      {
        "id" : "4c6bf123-6edc-48bc-94a5-c35146005f16",
        "parentId" : "1f25b348-23af-4984-a762-0a8e60c09ae0",
        "authorId" : "df7fe02e-189e-45c5-a682-9b780fdce53e",
        "body" : "> Oh, re-reading it I assume that it was written this way to avoid allocating the buffer which might be large...\r\n\r\nOK, so maybe we can add a comment explaining why it is done differently.",
        "createdAt" : "2021-02-20T22:33:07Z",
        "updatedAt" : "2021-02-26T15:29:28Z",
        "lastEditedBy" : "df7fe02e-189e-45c5-a682-9b780fdce53e",
        "tags" : [
        ]
      },
      {
        "id" : "24c18795-0afd-47f7-912f-4582af47e981",
        "parentId" : "1f25b348-23af-4984-a762-0a8e60c09ae0",
        "authorId" : "af81501b-2414-48e7-be86-74427773dffa",
        "body" : "I removed the signal check, and left the original `PromisePrototypeFinally`. From what I understand, the `Uint8Array` constructor shouldn't allocate much because it only offers a \"view\" into the buffer that it receives, so unless I'm misunderstanding something - it shouldn't really matter.",
        "createdAt" : "2021-02-20T22:55:58Z",
        "updatedAt" : "2021-02-26T15:29:28Z",
        "lastEditedBy" : "af81501b-2414-48e7-be86-74427773dffa",
        "tags" : [
        ]
      }
    ],
    "commit" : "c4180b74c5ba45796071f84b8308ada5dda8d6f6",
    "line" : 37,
    "diffHunk" : "@@ -1,1 +702,706 @@\n  const fd = await open(path, flag, 0o666);\n  return PromisePrototypeFinally(readFileHandle(fd, options), fd.close);\n}\n"
  }
]