[
  {
    "id" : "4f822c4a-f7a5-4fd2-9ad8-5bd55f98f5a8",
    "prId" : 30370,
    "prUrl" : "https://github.com/nodejs/node/pull/30370#pullrequestreview-409689273",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7b2586fb-2197-4e52-aa80-32933b1b64e1",
        "parentId" : null,
        "authorId" : "2be52d1c-c2eb-47e4-aee9-a127f02d3d62",
        "body" : "good thing modules are still experimental and this isn't Semver-Major ðŸ˜‡",
        "createdAt" : "2020-05-12T04:25:34Z",
        "updatedAt" : "2020-05-14T17:39:45Z",
        "lastEditedBy" : "2be52d1c-c2eb-47e4-aee9-a127f02d3d62",
        "tags" : [
        ]
      }
    ],
    "commit" : "5ae5262f448295e314393dad4c491259793cea3f",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +168,172 @@    const job = new ModuleJob(this, url, evalInstance, false, false);\n    this.moduleMap.set(url, job);\n    const { module } = await job.run();\n    return {\n      namespace: module.getNamespace(),"
  },
  {
    "id" : "5f5119b7-4a03-4e7c-9587-de4909e8923d",
    "prId" : 37701,
    "prUrl" : "https://github.com/nodejs/node/pull/37701#pullrequestreview-627203257",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3c5aac48-0ebf-4848-a91f-9eb6ca96d195",
        "parentId" : null,
        "authorId" : "a1f56401-edd9-4230-8f60-d2e2df28b52c",
        "body" : "A cursory look at this makes me wonder if we know that `format` destructured from `getFormatResponse` (via `this._getFormat()`) is `null` (guessing this means _no translator_) only in this particular instance. Without digging any deeper right now, would you be able to confirm/deny? Perhaps that could be an oversight. Let me know as I haven't been digging around here in _months_.",
        "createdAt" : "2021-04-02T12:44:25Z",
        "updatedAt" : "2021-04-03T18:06:16Z",
        "lastEditedBy" : "a1f56401-edd9-4230-8f60-d2e2df28b52c",
        "tags" : [
        ]
      },
      {
        "id" : "b5037ec2-91b3-4a0a-aa60-6f9ebc9e6c1a",
        "parentId" : "3c5aac48-0ebf-4848-a91f-9eb6ca96d195",
        "authorId" : "df7fe02e-189e-45c5-a682-9b780fdce53e",
        "body" : "I haven't encountered `null` value for format except in this use case, but I may have missed something, not sure.",
        "createdAt" : "2021-04-02T16:20:26Z",
        "updatedAt" : "2021-04-03T18:06:16Z",
        "lastEditedBy" : "df7fe02e-189e-45c5-a682-9b780fdce53e",
        "tags" : [
        ]
      },
      {
        "id" : "359fdfa3-3135-4f61-b535-4a6f2bd15af0",
        "parentId" : "3c5aac48-0ebf-4848-a91f-9eb6ca96d195",
        "authorId" : "df7fe02e-189e-45c5-a682-9b780fdce53e",
        "body" : "This PR doesnâ€™t change the current behavior, it changes the error thatâ€™s being reported. Iâ€™m all for investigate any undefined behavior, but I donâ€™t think thereâ€™s any leveraging enabled by this PR. Why would you hold off? Canâ€™t this land and be improved later?",
        "createdAt" : "2021-04-02T18:02:18Z",
        "updatedAt" : "2021-04-03T18:06:16Z",
        "lastEditedBy" : "df7fe02e-189e-45c5-a682-9b780fdce53e",
        "tags" : [
        ]
      },
      {
        "id" : "65b6b156-b1b6-40ed-b405-5b02d0db2500",
        "parentId" : "3c5aac48-0ebf-4848-a91f-9eb6ca96d195",
        "authorId" : "a1f56401-edd9-4230-8f60-d2e2df28b52c",
        "body" : "> Why would you hold off?\r\n\r\nMy current opinion is that this is not the correct way for us to determine if the module specifier is using an unsupported MIME type internally.\r\n\r\n> Canâ€™t this land and be improved later?\r\n\r\nYeah, you can actually disregard my previous comment (I went ahead and removed it entirely). My concern about the way we are checking for a `null` format here may only be able to be addressed in a larger-scale refactoring, which may be out of scope for this PR. We can always revisit this internal check in a later PR if you would prefer.",
        "createdAt" : "2021-04-02T18:18:20Z",
        "updatedAt" : "2021-04-03T18:06:16Z",
        "lastEditedBy" : "a1f56401-edd9-4230-8f60-d2e2df28b52c",
        "tags" : [
        ]
      },
      {
        "id" : "428dabda-e720-4c85-b936-3d1575feefd2",
        "parentId" : "3c5aac48-0ebf-4848-a91f-9eb6ca96d195",
        "authorId" : "df7fe02e-189e-45c5-a682-9b780fdce53e",
        "body" : "> My current opinion is that this is not the correct way for us to determine if the module specifier is using an unsupported MIME type internally.\r\n\r\nThis is probably linked to the current loader implementation, something to have in mind when refactoring it.",
        "createdAt" : "2021-04-02T18:42:25Z",
        "updatedAt" : "2021-04-03T18:06:16Z",
        "lastEditedBy" : "df7fe02e-189e-45c5-a682-9b780fdce53e",
        "tags" : [
        ]
      }
    ],
    "commit" : "46062a0d2c105aa8344e1f6f11ccb447a223b78d",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +110,114 @@\n    const { format } = getFormatResponse;\n    if (format === null) {\n      const dataUrl = RegExpPrototypeExec(\n        /^data:([^/]+\\/[^;,]+)(?:[^,]*?)(;base64)?,/,"
  }
]