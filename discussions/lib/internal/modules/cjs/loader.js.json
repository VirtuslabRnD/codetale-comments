[
  {
    "id" : "6f784b1d-ecf1-427d-ad35-f80635329557",
    "prId" : 26745,
    "prUrl" : "https://github.com/nodejs/node/pull/26745#pullrequestreview-219669758",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "966a01fa-21f6-4d7f-89e1-9344851ff8e4",
        "parentId" : null,
        "authorId" : "4e9ef6b4-9a31-4818-a54f-a2b732308657",
        "body" : "Nit: this looks like an unrelated change.",
        "createdAt" : "2019-03-27T13:41:32Z",
        "updatedAt" : "2019-03-27T19:52:37Z",
        "lastEditedBy" : "4e9ef6b4-9a31-4818-a54f-a2b732308657",
        "tags" : [
        ]
      },
      {
        "id" : "c870f2b2-9276-436d-88e1-2b71ea356ea6",
        "parentId" : "966a01fa-21f6-4d7f-89e1-9344851ff8e4",
        "authorId" : "2be52d1c-c2eb-47e4-aee9-a127f02d3d62",
        "body" : "@guybedford can you comment on this?",
        "createdAt" : "2019-03-27T18:23:14Z",
        "updatedAt" : "2019-03-27T19:52:37Z",
        "lastEditedBy" : "2be52d1c-c2eb-47e4-aee9-a127f02d3d62",
        "tags" : [
        ]
      },
      {
        "id" : "37f17523-9413-411e-83c5-bf3d4a7566b6",
        "parentId" : "966a01fa-21f6-4d7f-89e1-9344851ff8e4",
        "authorId" : "3b2df505-72aa-4ca9-add0-bc742e87c02b",
        "body" : "It's a very minor refactoring, without changing any logic at all. We can switch it back sure, but I prefer this form to be honest.",
        "createdAt" : "2019-03-27T19:08:01Z",
        "updatedAt" : "2019-03-27T19:52:37Z",
        "lastEditedBy" : "3b2df505-72aa-4ca9-add0-bc742e87c02b",
        "tags" : [
        ]
      }
    ],
    "commit" : "b1094dbe19f31f7a69ad16d193748f610b159073",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +901,905 @@    return;\n  }\n  Module._load(process.argv[1], null, true);\n  // Handle any nextTicks added in the first tick of the program\n  process._tickCallback();"
  },
  {
    "id" : "b98f790e-b355-4acf-b878-bf3c164be0db",
    "prId" : 35522,
    "prUrl" : "https://github.com/nodejs/node/pull/35522#pullrequestreview-504851231",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2115eff4-2a55-4e3e-8d91-0d142cb581c0",
        "parentId" : null,
        "authorId" : "ba098e5c-acf7-422b-a104-11cbd9de80d9",
        "body" : "Make delete work:\r\n\r\n```suggestion\r\n  ) : setModuleParent,\r\n  configurable: true,\r\n```",
        "createdAt" : "2020-10-08T14:35:14Z",
        "updatedAt" : "2020-10-16T22:51:10Z",
        "lastEditedBy" : "ba098e5c-acf7-422b-a104-11cbd9de80d9",
        "tags" : [
        ]
      }
    ],
    "commit" : "aaf225a2a0175178f3b55add5f20f16bdb8ef01c",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +241,245 @@      'require.main to find program entry point instead.',\n    'DEP0144'\n  ) : setModuleParent,\n});\n"
  },
  {
    "id" : "2f6aefd4-0795-4064-94d4-6b8617e59173",
    "prId" : 35522,
    "prUrl" : "https://github.com/nodejs/node/pull/35522#pullrequestreview-505036776",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "582ecb7d-e8ca-455f-bad9-5bb7079e9105",
        "parentId" : null,
        "authorId" : "ba098e5c-acf7-422b-a104-11cbd9de80d9",
        "body" : "moving this to be on the module itself is needed to make `delete` work",
        "createdAt" : "2020-10-08T14:41:34Z",
        "updatedAt" : "2020-10-16T22:51:10Z",
        "lastEditedBy" : "ba098e5c-acf7-422b-a104-11cbd9de80d9",
        "tags" : [
        ]
      },
      {
        "id" : "2a1244af-5e24-4519-92e7-bf7de2117123",
        "parentId" : "582ecb7d-e8ca-455f-bad9-5bb7079e9105",
        "authorId" : "df7fe02e-189e-45c5-a682-9b780fdce53e",
        "body" : "Wouldn't that trigger a new deprecation warning for each `Module` instance?\r\n\r\n```js\r\nmodule.parent; // triggers one warning\r\nmodule.parent?.parent; // triggers another warning?\r\n```",
        "createdAt" : "2020-10-08T14:44:28Z",
        "updatedAt" : "2020-10-16T22:51:10Z",
        "lastEditedBy" : "df7fe02e-189e-45c5-a682-9b780fdce53e",
        "tags" : [
        ]
      },
      {
        "id" : "34129bc1-6abd-47fe-8ad9-16d508be6cd9",
        "parentId" : "582ecb7d-e8ca-455f-bad9-5bb7079e9105",
        "authorId" : "e56038a1-969b-45e4-9251-03873e734a44",
        "body" : "No, because the deprecation uses a deprecation code:\r\n<https://github.com/nodejs/node/blob/ce84bacdc63017d8d7130b4f29dc78ac6ac138c8/lib/internal/util.js#L77-L82>",
        "createdAt" : "2020-10-08T18:03:51Z",
        "updatedAt" : "2020-10-16T22:51:10Z",
        "lastEditedBy" : "e56038a1-969b-45e4-9251-03873e734a44",
        "tags" : [
        ]
      }
    ],
    "commit" : "aaf225a2a0175178f3b55add5f20f16bdb8ef01c",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +229,233 @@}\n\nObjectDefineProperty(Module.prototype, 'parent', {\n  get: pendingDeprecation ? deprecate(\n    getModuleParent,"
  },
  {
    "id" : "8cee8d89-af56-4819-9770-12187c58a74f",
    "prId" : 37246,
    "prUrl" : "https://github.com/nodejs/node/pull/37246#pullrequestreview-585307820",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0f4d5324-398c-490b-8d30-0b1086875f3d",
        "parentId" : null,
        "authorId" : "3b2df505-72aa-4ca9-add0-bc742e87c02b",
        "body" : "This bifurcation will have implications for mocking, but I can appreciate the benefit too.\r\n\r\nI'd still prefer a more convergent path here eg, to return `node:fs` for both `node:fs` and `fs` inputs, and then to still populate a `cache['fs']` entry in the `node:fs` case as the same object for backwards compatibility. Such a change would hopefully be mostly compatible but would probably need to be a separate major nontheless. Worth thinking about at least.",
        "createdAt" : "2021-02-08T09:17:00Z",
        "updatedAt" : "2021-03-19T11:35:38Z",
        "lastEditedBy" : "3b2df505-72aa-4ca9-add0-bc742e87c02b",
        "tags" : [
        ]
      },
      {
        "id" : "c360c01c-1b90-4d29-a925-38378471e1f5",
        "parentId" : "0f4d5324-398c-490b-8d30-0b1086875f3d",
        "authorId" : "e56038a1-969b-45e4-9251-03873e734a44",
        "body" : "Existing mocking tools (such as **Jest**) provide their own `require(…)` implementation, since they need to be able to bypass the mocked module using <code>[jest.requireActual(…)](https://jestjs.io/docs/en/bypassing-module-mocks)</code>.",
        "createdAt" : "2021-02-08T09:35:16Z",
        "updatedAt" : "2021-03-19T11:35:38Z",
        "lastEditedBy" : "e56038a1-969b-45e4-9251-03873e734a44",
        "tags" : [
        ]
      }
    ],
    "commit" : "95391fe689ec78a809d16d06a4bd8ae8a472dec9",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +855,859 @@Module._resolveFilename = function(request, parent, isMain, options) {\n  if (StringPrototypeStartsWith(request, 'node:') ||\n      NativeModule.canBeRequiredByUsers(request)) {\n    return request;\n  }"
  },
  {
    "id" : "eb80d062-9f98-496a-b53f-69eb930fc850",
    "prId" : 37246,
    "prUrl" : "https://github.com/nodejs/node/pull/37246#pullrequestreview-605335273",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0d1bb4b1-1de6-4ccf-a9a8-c5879ee19034",
        "parentId" : null,
        "authorId" : "3b2df505-72aa-4ca9-add0-bc742e87c02b",
        "body" : "What is the motivation for short-circuiting the cache here, something that has never been done previously for native modules?\r\n\r\nI don't see why this scheme should be any different to any other in this regard.",
        "createdAt" : "2021-02-08T14:00:33Z",
        "updatedAt" : "2021-03-19T11:35:38Z",
        "lastEditedBy" : "3b2df505-72aa-4ca9-add0-bc742e87c02b",
        "tags" : [
        ]
      },
      {
        "id" : "7167809a-a21d-44a8-9359-ab973cc2dc4c",
        "parentId" : "0d1bb4b1-1de6-4ccf-a9a8-c5879ee19034",
        "authorId" : "ba098e5c-acf7-422b-a104-11cbd9de80d9",
        "body" : "On this topic, should we throw or defer to cache on unknown builtins?",
        "createdAt" : "2021-03-05T15:25:41Z",
        "updatedAt" : "2021-03-19T11:35:38Z",
        "lastEditedBy" : "ba098e5c-acf7-422b-a104-11cbd9de80d9",
        "tags" : [
        ]
      }
    ],
    "commit" : "95391fe689ec78a809d16d06a4bd8ae8a472dec9",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +782,786 @@\n    return module.exports;\n  }\n\n  const cachedModule = Module._cache[filename];"
  }
]