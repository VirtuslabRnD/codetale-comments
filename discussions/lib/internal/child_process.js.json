[
  {
    "id" : "7c2f8cc3-187d-4087-aa1a-3c0a0e9904b7",
    "prId" : 5283,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6806a329-d231-4b11-b05c-15c5178ca89b",
        "parentId" : null,
        "authorId" : "d10ccdef-08de-4320-917e-16a9175dedcf",
        "body" : "very minor nit: wouldn't it be _slightly_ more efficient to: \n\n``` js\nif (options.keepOpen) return;\nif (handle) handle.close();\n```\n\n/cc @bnoordhuis \n",
        "createdAt" : "2016-02-17T16:53:10Z",
        "updatedAt" : "2016-02-22T17:02:47Z",
        "lastEditedBy" : "d10ccdef-08de-4320-917e-16a9175dedcf",
        "tags" : [
        ]
      },
      {
        "id" : "0f938803-2f3c-4cdb-a9ff-514e720e57ee",
        "parentId" : "6806a329-d231-4b11-b05c-15c5178ca89b",
        "authorId" : "ff334962-2ee8-45f1-ad4a-cfb65ffd6744",
        "body" : "I don't really like the idea of returning from the function early if `options.keepOpen` is `true`. That could require more refactoring if we ever decided to add more functionality here. It also makes the code less readable IMO. Also, 100% of legacy code and probably the majority of new code would have `keepOpen = false`, meaning that it would have to run two separate `if` statements instead of only checking `keepOpen` if `handle` is truthy.\n",
        "createdAt" : "2016-02-18T16:48:54Z",
        "updatedAt" : "2016-02-22T17:02:47Z",
        "lastEditedBy" : "ff334962-2ee8-45f1-ad4a-cfb65ffd6744",
        "tags" : [
        ]
      },
      {
        "id" : "e01b0f41-8257-4eec-be7f-d21c1c813c58",
        "parentId" : "6806a329-d231-4b11-b05c-15c5178ca89b",
        "authorId" : "d10ccdef-08de-4320-917e-16a9175dedcf",
        "body" : "ok, good enough for me.\n",
        "createdAt" : "2016-02-19T22:34:21Z",
        "updatedAt" : "2016-02-22T17:02:47Z",
        "lastEditedBy" : "d10ccdef-08de-4320-917e-16a9175dedcf",
        "tags" : [
        ]
      }
    ],
    "commit" : "e854f60585061c81702cf680ad8079a447d19ef1",
    "line" : 53,
    "diffHunk" : "@@ -1,1 +96,100 @@\n    postSend: function(handle, options) {\n      // Close the Socket handle after sending it\n      if (handle && !options.keepOpen)\n        handle.close();"
  },
  {
    "id" : "9defc56e-0ba6-4796-bba8-571c6092d8b7",
    "prId" : 5283,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6c95f411-209b-4ecd-a64f-ad099af3fd95",
        "parentId" : null,
        "authorId" : "4224fcfe-ee22-4bd8-9ed5-4e8efd7a90bc",
        "body" : "Just noting that this allows a `send(message, callback, options)` signature.\n",
        "createdAt" : "2016-02-21T20:11:14Z",
        "updatedAt" : "2016-02-22T17:02:47Z",
        "lastEditedBy" : "4224fcfe-ee22-4bd8-9ed5-4e8efd7a90bc",
        "tags" : [
        ]
      }
    ],
    "commit" : "e854f60585061c81702cf680ad8079a447d19ef1",
    "line" : 94,
    "diffHunk" : "@@ -1,1 +506,510 @@    if (typeof handle === 'function') {\n      callback = handle;\n      handle = undefined;\n      options = undefined;\n    } else if (typeof options === 'function') {"
  },
  {
    "id" : "eaeb0ce6-2612-45f2-a610-eafe4ab4d83e",
    "prId" : 12348,
    "prUrl" : "https://github.com/nodejs/node/pull/12348#pullrequestreview-32954841",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a2afbe53-04a2-4db8-be31-799b37b7c880",
        "parentId" : null,
        "authorId" : "1e67d6f5-899c-414a-94c7-6360a35473ac",
        "body" : "can this be a `const` too?",
        "createdAt" : "2017-04-16T20:56:31Z",
        "updatedAt" : "2017-04-17T20:25:10Z",
        "lastEditedBy" : "1e67d6f5-899c-414a-94c7-6360a35473ac",
        "tags" : [
        ]
      },
      {
        "id" : "3984b689-5153-460d-a2ec-d22d73df14b5",
        "parentId" : "a2afbe53-04a2-4db8-be31-799b37b7c880",
        "authorId" : "afafee7a-f5c7-4e34-bbb2-fe3900a60ecf",
        "body" : "I thought I saw that `const` could trigger deopts in functions, cc/ @mscdex ",
        "createdAt" : "2017-04-16T22:23:17Z",
        "updatedAt" : "2017-04-17T20:25:10Z",
        "lastEditedBy" : "afafee7a-f5c7-4e34-bbb2-fe3900a60ecf",
        "tags" : [
        ]
      },
      {
        "id" : "63f4717e-afa0-4073-b89a-3fda9057836c",
        "parentId" : "a2afbe53-04a2-4db8-be31-799b37b7c880",
        "authorId" : "c5f34109-f61d-4540-9a67-e4a5494934e5",
        "body" : "It *can* but it's not always immediately obvious if it actually will or not without checking during runtime (e.g. by adding `--trace-opt` and grepping for 'aborted' and/or 'disabled' in the resulting output).",
        "createdAt" : "2017-04-17T00:54:17Z",
        "updatedAt" : "2017-04-17T20:25:10Z",
        "lastEditedBy" : "c5f34109-f61d-4540-9a67-e4a5494934e5",
        "tags" : [
        ]
      }
    ],
    "commit" : "97a77288cec23beedd666b9454bc336e0b438099",
    "line" : 50,
    "diffHunk" : "@@ -1,1 +185,189 @@\n    if (exitCode < 0) {\n      var syscall = this.spawnfile ? 'spawn ' + this.spawnfile : 'spawn';\n      const err = errnoException(exitCode, syscall);\n"
  },
  {
    "id" : "4bfd89df-ee27-4d82-ada0-72e4a030eb83",
    "prId" : 13459,
    "prUrl" : "https://github.com/nodejs/node/pull/13459#pullrequestreview-41964872",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "82ddb25f-5a21-4b7d-a2e5-a1bffe4bbcfa",
        "parentId" : null,
        "authorId" : "23dd1f9f-2ce6-4461-ad78-bdc0fc563445",
        "body" : "Shave off a few more millis with `const INTERNALPREFIX_LENGTH = INTERNAL_PREFIX.length`",
        "createdAt" : "2017-06-05T02:55:56Z",
        "updatedAt" : "2017-06-09T05:39:12Z",
        "lastEditedBy" : "23dd1f9f-2ce6-4461-ad78-bdc0fc563445",
        "tags" : [
        ]
      },
      {
        "id" : "cf134c76-fb07-414b-b5a7-f31412c6cf73",
        "parentId" : "82ddb25f-5a21-4b7d-a2e5-a1bffe4bbcfa",
        "authorId" : "c5f34109-f61d-4540-9a67-e4a5494934e5",
        "body" : "Again, I know it can be simplified and probably optimized, but I opted to leave it as-is for now.",
        "createdAt" : "2017-06-05T03:10:30Z",
        "updatedAt" : "2017-06-09T05:39:12Z",
        "lastEditedBy" : "c5f34109-f61d-4540-9a67-e4a5494934e5",
        "tags" : [
        ]
      }
    ],
    "commit" : "8208fdae2be11ff3c1126dc669ca63b6d08b0cb1",
    "line" : 104,
    "diffHunk" : "@@ -1,1 +763,767 @@          typeof message === 'object' &&\n          typeof message.cmd === 'string' &&\n          message.cmd.length > INTERNAL_PREFIX.length &&\n          message.cmd.slice(0, INTERNAL_PREFIX.length) === INTERNAL_PREFIX);\n}"
  },
  {
    "id" : "65d9824e-2ea3-4380-9382-9aee7322f8e0",
    "prId" : 13459,
    "prUrl" : "https://github.com/nodejs/node/pull/13459#pullrequestreview-41964838",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1dba0a1f-1e0c-4e90-93b7-d832861fb32e",
        "parentId" : null,
        "authorId" : "23dd1f9f-2ce6-4461-ad78-bdc0fc563445",
        "body" : "[question] since internal messages are rare, will adding a `Object.hasOwnProperty(message, 'cmd') &&` fail faster than `typeof message.cmd === 'string'`?",
        "createdAt" : "2017-06-05T03:03:06Z",
        "updatedAt" : "2017-06-09T05:39:12Z",
        "lastEditedBy" : "23dd1f9f-2ce6-4461-ad78-bdc0fc563445",
        "tags" : [
        ]
      },
      {
        "id" : "103ad675-a228-4d8a-bb3d-9f55bcb4194d",
        "parentId" : "1dba0a1f-1e0c-4e90-93b7-d832861fb32e",
        "authorId" : "c5f34109-f61d-4540-9a67-e4a5494934e5",
        "body" : "I know this could be simplified but I opted to leave it as-is for now.",
        "createdAt" : "2017-06-05T03:09:55Z",
        "updatedAt" : "2017-06-09T05:39:12Z",
        "lastEditedBy" : "c5f34109-f61d-4540-9a67-e4a5494934e5",
        "tags" : [
        ]
      }
    ],
    "commit" : "8208fdae2be11ff3c1126dc669ca63b6d08b0cb1",
    "line" : 103,
    "diffHunk" : "@@ -1,1 +762,766 @@  return (message !== null &&\n          typeof message === 'object' &&\n          typeof message.cmd === 'string' &&\n          message.cmd.length > INTERNAL_PREFIX.length &&\n          message.cmd.slice(0, INTERNAL_PREFIX.length) === INTERNAL_PREFIX);"
  },
  {
    "id" : "ce2486da-ede5-4096-b69d-f7c128633b5a",
    "prId" : 13459,
    "prUrl" : "https://github.com/nodejs/node/pull/13459#pullrequestreview-41970856",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a7591c53-da3e-40df-b12b-0b5af4f368bf",
        "parentId" : null,
        "authorId" : "23dd1f9f-2ce6-4461-ad78-bdc0fc563445",
        "body" : "Why not check for `isInternal` on the raw chunk?",
        "createdAt" : "2017-06-05T03:08:45Z",
        "updatedAt" : "2017-06-09T05:39:12Z",
        "lastEditedBy" : "23dd1f9f-2ce6-4461-ad78-bdc0fc563445",
        "tags" : [
        ]
      },
      {
        "id" : "c6c00dde-4e04-4d0b-a61f-ac5a7f2c0a3a",
        "parentId" : "a7591c53-da3e-40df-b12b-0b5af4f368bf",
        "authorId" : "c5f34109-f61d-4540-9a67-e4a5494934e5",
        "body" : "It has to be parsed first. `chunks` here is just an array of (complete) JSON *strings*.",
        "createdAt" : "2017-06-05T03:11:44Z",
        "updatedAt" : "2017-06-09T05:39:12Z",
        "lastEditedBy" : "c5f34109-f61d-4540-9a67-e4a5494934e5",
        "tags" : [
        ]
      },
      {
        "id" : "955f6a2f-973a-4e24-9f2c-678614715f75",
        "parentId" : "a7591c53-da3e-40df-b12b-0b5af4f368bf",
        "authorId" : "23dd1f9f-2ce6-4461-ad78-bdc0fc563445",
        "body" : "I meant implement a string based check. Can't we assume \"innerMessages\" will have a `{cmd: NODE_` prefix? or at least include a `, cmd: NODE_` substring? Might also be able to distinguish between three cases: user/inner/inner_with_handle, and turn the following compound `if` into a `switch`",
        "createdAt" : "2017-06-05T04:31:35Z",
        "updatedAt" : "2017-06-09T05:39:12Z",
        "lastEditedBy" : "23dd1f9f-2ce6-4461-ad78-bdc0fc563445",
        "tags" : [
        ]
      },
      {
        "id" : "5a386f05-bbff-44f4-b4fb-1b88750186fa",
        "parentId" : "a7591c53-da3e-40df-b12b-0b5af4f368bf",
        "authorId" : "c5f34109-f61d-4540-9a67-e4a5494934e5",
        "body" : "I'd rather not make assumptions about `JSON.stringify()` output.",
        "createdAt" : "2017-06-05T04:49:19Z",
        "updatedAt" : "2017-06-09T05:39:12Z",
        "lastEditedBy" : "c5f34109-f61d-4540-9a67-e4a5494934e5",
        "tags" : [
        ]
      }
    ],
    "commit" : "8208fdae2be11ff3c1126dc669ca63b6d08b0cb1",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +459,463 @@      var nextTick = false;\n      for (var i = 0; i < numCompleteChunks; i++) {\n        var message = JSON.parse(chunks[i]);\n\n        // There will be at most one NODE_HANDLE message in every chunk we"
  },
  {
    "id" : "47ec1e38-9408-4312-a42e-a60603b6dd4c",
    "prId" : 13459,
    "prUrl" : "https://github.com/nodejs/node/pull/13459#pullrequestreview-41970964",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a52851c0-78ca-4faa-adbc-ab6cfd6587f9",
        "parentId" : null,
        "authorId" : "23dd1f9f-2ce6-4461-ad78-bdc0fc563445",
        "body" : "even if we don't do a string based check, returning 0,1,2 (for user / inner / NODE_HANDLE) will enable using a `switch` in L466",
        "createdAt" : "2017-06-05T04:35:10Z",
        "updatedAt" : "2017-06-09T05:39:12Z",
        "lastEditedBy" : "23dd1f9f-2ce6-4461-ad78-bdc0fc563445",
        "tags" : [
        ]
      },
      {
        "id" : "cebdb70b-1340-49bc-b0e9-75d3a2e66704",
        "parentId" : "a52851c0-78ca-4faa-adbc-ab6cfd6587f9",
        "authorId" : "c5f34109-f61d-4540-9a67-e4a5494934e5",
        "body" : "It's unlikely it'll matter much, I'll let someone else work on it if they want. My main focus on this PR is `nextTick()` usage.",
        "createdAt" : "2017-06-05T04:51:07Z",
        "updatedAt" : "2017-06-09T05:39:12Z",
        "lastEditedBy" : "c5f34109-f61d-4540-9a67-e4a5494934e5",
        "tags" : [
        ]
      }
    ],
    "commit" : "8208fdae2be11ff3c1126dc669ca63b6d08b0cb1",
    "line" : 101,
    "diffHunk" : "@@ -1,1 +760,764 @@const INTERNAL_PREFIX = 'NODE_';\nfunction isInternal(message) {\n  return (message !== null &&\n          typeof message === 'object' &&\n          typeof message.cmd === 'string' &&"
  },
  {
    "id" : "8802d448-a11d-44cc-b879-71c04e159008",
    "prId" : 37028,
    "prUrl" : "https://github.com/nodejs/node/pull/37028#pullrequestreview-579452995",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8b3de164-000e-46bf-aaf3-592573f31b8b",
        "parentId" : null,
        "authorId" : "4e8c77e8-10f9-4830-ac93-3bf7c9d321e2",
        "body" : "FYI, this change broke `cheerio` through the `workerpool` module: https://ci.nodejs.org/view/Node.js-citgm/job/citgm-smoker/2604/nodes=fedora-last-latest-x64/testReport/junit/(root)/citgm/cheerio_v1_0_0_rc_5/\r\n\r\nSee https://github.com/josdejong/workerpool/blob/b0e72695fc26df60e224c2d2eafc402f3097a6f4/src/WorkerHandler.js#L262\r\n\r\nIt would probably be nice to open a PR to fix that module. It seems to have been working by accident until now.",
        "createdAt" : "2021-01-29T11:55:14Z",
        "updatedAt" : "2021-01-29T11:55:14Z",
        "lastEditedBy" : "4e8c77e8-10f9-4830-ac93-3bf7c9d321e2",
        "tags" : [
        ]
      },
      {
        "id" : "25dbbac2-5763-4eb0-9d34-218905ca8163",
        "parentId" : "8b3de164-000e-46bf-aaf3-592573f31b8b",
        "authorId" : "df7fe02e-189e-45c5-a682-9b780fdce53e",
        "body" : "Done in https://github.com/josdejong/workerpool/pull/230.",
        "createdAt" : "2021-01-29T13:11:32Z",
        "updatedAt" : "2021-01-29T13:11:32Z",
        "lastEditedBy" : "df7fe02e-189e-45c5-a682-9b780fdce53e",
        "tags" : [
        ]
      },
      {
        "id" : "defd61c0-9f31-47d1-9d7a-65d08a86cc48",
        "parentId" : "8b3de164-000e-46bf-aaf3-592573f31b8b",
        "authorId" : "e56038a1-969b-45e4-9251-03873e734a44",
        "body" : "We should probably also do <https://github.com/nodejs/node/pull/37047>.",
        "createdAt" : "2021-01-29T17:09:29Z",
        "updatedAt" : "2021-01-29T17:09:29Z",
        "lastEditedBy" : "e56038a1-969b-45e4-9251-03873e734a44",
        "tags" : [
        ]
      }
    ],
    "commit" : "029d1fd797975ef89b867f9d606257f0f070a462",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +714,718 @@      options = undefined;\n    } else if (options !== undefined) {\n      validateObject(options, 'options');\n    }\n"
  }
]