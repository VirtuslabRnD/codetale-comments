[
  {
    "id" : "919b924a-cb72-4b4f-8a4e-656dac662631",
    "prId" : 4882,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "39aaf4e2-dece-4ad1-8cb6-1a9e41213ed3",
        "parentId" : null,
        "authorId" : "d10ccdef-08de-4320-917e-16a9175dedcf",
        "body" : "Is a new module file necessary? This seems small enough that it could possibly just go into internal/util\n",
        "createdAt" : "2016-01-27T21:15:23Z",
        "updatedAt" : "2016-01-30T23:57:45Z",
        "lastEditedBy" : "d10ccdef-08de-4320-917e-16a9175dedcf",
        "tags" : [
        ]
      },
      {
        "id" : "01d192c9-cdcb-4d8d-9030-dd20d3420c89",
        "parentId" : "39aaf4e2-dece-4ad1-8cb6-1a9e41213ed3",
        "authorId" : "bd43ce4d-85c2-4f54-8666-274f0f79f75b",
        "body" : "@jasnell While it is small enough now for that, I have been working on cleaning up some of the logic in net and moving some more into internal. Either way works for me though, so if this is something you feel strongly about, I'll be happy to change.\n",
        "createdAt" : "2016-01-28T03:34:27Z",
        "updatedAt" : "2016-01-30T23:57:45Z",
        "lastEditedBy" : "bd43ce4d-85c2-4f54-8666-274f0f79f75b",
        "tags" : [
        ]
      },
      {
        "id" : "09bc8442-9197-470b-8355-90eff867e5bf",
        "parentId" : "39aaf4e2-dece-4ad1-8cb6-1a9e41213ed3",
        "authorId" : "d10ccdef-08de-4320-917e-16a9175dedcf",
        "body" : "@evanlucas ... :-) then by all means, continue as you are! \n",
        "createdAt" : "2016-01-28T04:30:23Z",
        "updatedAt" : "2016-01-30T23:57:45Z",
        "lastEditedBy" : "d10ccdef-08de-4320-917e-16a9175dedcf",
        "tags" : [
        ]
      }
    ],
    "commit" : "6cbbfef994930bc47581d592124e82b58e55ac7b",
    "line" : 1,
    "diffHunk" : "@@ -1,1 +-1,3 @@'use strict';\n\nmodule.exports = { isLegalPort };"
  },
  {
    "id" : "8d048657-0cc6-4083-b95c-645fbd747797",
    "prId" : 4882,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "02b724d2-020d-4e2f-afc1-45174a9d8664",
        "parentId" : null,
        "authorId" : "b5634520-1776-44d8-b06b-105c83374f81",
        "body" : "Would it make sense to use `Number.isInteger` here?\n",
        "createdAt" : "2016-01-29T14:21:23Z",
        "updatedAt" : "2016-01-30T23:57:45Z",
        "lastEditedBy" : "b5634520-1776-44d8-b06b-105c83374f81",
        "tags" : [
        ]
      },
      {
        "id" : "0a8a0d66-fb47-45f4-a241-f5b6a8db15c3",
        "parentId" : "02b724d2-020d-4e2f-afc1-45174a9d8664",
        "authorId" : "ff334962-2ee8-45f1-ad4a-cfb65ffd6744",
        "body" : "The problem with `parseInt()` is that something like `'10c'` becomes 10, which is not right. The problem with `Number.isInteger()` is that `'0xff'` (or any other string) is false. There are all kinds of weird edge cases.\n",
        "createdAt" : "2016-01-29T15:31:56Z",
        "updatedAt" : "2016-01-30T23:57:45Z",
        "lastEditedBy" : "ff334962-2ee8-45f1-ad4a-cfb65ffd6744",
        "tags" : [
        ]
      },
      {
        "id" : "8479a776-eb11-4a98-8e0a-b7dcf1ac920f",
        "parentId" : "02b724d2-020d-4e2f-afc1-45174a9d8664",
        "authorId" : "b5634520-1776-44d8-b06b-105c83374f81",
        "body" : "True. Should we really allow values like that? Coercion allows people to use a lot of undocumented allowed values like this and I am not sure if we can cover all the possible valid values without a lot of checks. For example this condition would allow zero to one element number arrays.\n",
        "createdAt" : "2016-01-29T16:09:05Z",
        "updatedAt" : "2016-01-30T23:57:45Z",
        "lastEditedBy" : "b5634520-1776-44d8-b06b-105c83374f81",
        "tags" : [
        ]
      },
      {
        "id" : "f21d7a6e-2806-4afa-b41f-731c325b7849",
        "parentId" : "02b724d2-020d-4e2f-afc1-45174a9d8664",
        "authorId" : "ff334962-2ee8-45f1-ad4a-cfb65ffd6744",
        "body" : "My personal opinion - no we shouldn't coerce. But, it would be an unnecessary breaking change. Also, this function is used for range checking, not type checking.\n",
        "createdAt" : "2016-01-29T16:22:21Z",
        "updatedAt" : "2016-01-30T23:57:45Z",
        "lastEditedBy" : "ff334962-2ee8-45f1-ad4a-cfb65ffd6744",
        "tags" : [
        ]
      }
    ],
    "commit" : "6cbbfef994930bc47581d592124e82b58e55ac7b",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +8,12 @@  if (typeof port === 'string' && port.trim() === '')\n    return false;\n  return +port === (port >>> 0) && port >= 0 && port <= 0xFFFF;\n}"
  }
]