[
  {
    "id" : "322a8417-91ac-4d7a-99ba-ad1bf048c296",
    "prId" : 28989,
    "prUrl" : "https://github.com/nodejs/node/pull/28989#pullrequestreview-271485085",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dd0d4f59-1f8a-4cfe-9554-9b70a6be99a1",
        "parentId" : null,
        "authorId" : "9efa1026-358a-4bae-b0b8-35fbd34d6638",
        "body" : "how does this differ from copy?",
        "createdAt" : "2019-08-06T09:11:35Z",
        "updatedAt" : "2019-08-09T22:32:39Z",
        "lastEditedBy" : "9efa1026-358a-4bae-b0b8-35fbd34d6638",
        "tags" : [
        ]
      },
      {
        "id" : "338408ba-9f8c-4550-99a6-6d13880f943f",
        "parentId" : "dd0d4f59-1f8a-4cfe-9554-9b70a6be99a1",
        "authorId" : "c5f34109-f61d-4540-9a67-e4a5494934e5",
        "body" : "It's a tad faster.",
        "createdAt" : "2019-08-06T12:33:20Z",
        "updatedAt" : "2019-08-09T22:32:39Z",
        "lastEditedBy" : "c5f34109-f61d-4540-9a67-e4a5494934e5",
        "tags" : [
        ]
      },
      {
        "id" : "01a25aea-d212-4636-8fd6-9a5008c1257b",
        "parentId" : "dd0d4f59-1f8a-4cfe-9554-9b70a6be99a1",
        "authorId" : "9efa1026-358a-4bae-b0b8-35fbd34d6638",
        "body" : "yes, just confused as two how it can be faster. Some V8 thingy?",
        "createdAt" : "2019-08-06T16:34:35Z",
        "updatedAt" : "2019-08-09T22:32:39Z",
        "lastEditedBy" : "9efa1026-358a-4bae-b0b8-35fbd34d6638",
        "tags" : [
        ]
      },
      {
        "id" : "138a781c-8973-4f0e-911d-9aa9009198df",
        "parentId" : "dd0d4f59-1f8a-4cfe-9554-9b70a6be99a1",
        "authorId" : "af965d24-c34b-4c03-8ff1-5a5da6036269",
        "body" : "yes. v8 can optimize the stuff it provides, but our buffer copy is basically a black box to it, since its written in c++. we could probably optimize our copy impl to use typedarray's set if there are no source offsets passed.",
        "createdAt" : "2019-08-06T16:41:47Z",
        "updatedAt" : "2019-08-09T22:32:39Z",
        "lastEditedBy" : "af965d24-c34b-4c03-8ff1-5a5da6036269",
        "tags" : [
        ]
      },
      {
        "id" : "8306bdd1-99f1-4821-96af-f1a07de7fbbc",
        "parentId" : "dd0d4f59-1f8a-4cfe-9554-9b70a6be99a1",
        "authorId" : "9efa1026-358a-4bae-b0b8-35fbd34d6638",
        "body" : "wouldn't it better to apply this there then?",
        "createdAt" : "2019-08-06T17:01:52Z",
        "updatedAt" : "2019-08-09T22:32:39Z",
        "lastEditedBy" : "9efa1026-358a-4bae-b0b8-35fbd34d6638",
        "tags" : [
        ]
      }
    ],
    "commit" : "53e467db24310a09772cd71fb6616239e950dd72",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +143,147 @@        ret.set(buf, ret.length - n);\n      else\n        ret.set(new Uint8Array(buf.buffer, buf.byteOffset, nb), ret.length - n);\n      n -= nb;\n      if (n === 0) {"
  },
  {
    "id" : "b5c2e2c6-8116-4d37-99e9-78da3a434c93",
    "prId" : 29337,
    "prUrl" : "https://github.com/nodejs/node/pull/29337#pullrequestreview-281033813",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "358cfa1f-fb19-45b9-9558-a6b9ad7ab4e0",
        "parentId" : null,
        "authorId" : "7490b440-07c7-4433-856f-3720a914a77a",
        "body" : "Can this be compacted with the following `if ... else`?",
        "createdAt" : "2019-08-28T15:47:17Z",
        "updatedAt" : "2019-08-31T03:40:20Z",
        "lastEditedBy" : "7490b440-07c7-4433-856f-3720a914a77a",
        "tags" : [
        ]
      },
      {
        "id" : "c2861b23-e1e4-493f-8153-1c9c9c57f4b1",
        "parentId" : "358cfa1f-fb19-45b9-9558-a6b9ad7ab4e0",
        "authorId" : "c5f34109-f61d-4540-9a67-e4a5494934e5",
        "body" : "Not without duplicating the `break`. I opted to just keep that the way it was.",
        "createdAt" : "2019-08-28T18:52:07Z",
        "updatedAt" : "2019-08-31T03:40:20Z",
        "lastEditedBy" : "c5f34109-f61d-4540-9a67-e4a5494934e5",
        "tags" : [
        ]
      }
    ],
    "commit" : "98b718572f9c136e7a11dc60e984d873d08346cc",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +107,111 @@        ret += str;\n        n -= str.length;\n      } else {\n        if (n === str.length) {\n          ret += str;"
  }
]