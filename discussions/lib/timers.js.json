[
  {
    "id" : "4b371b84-6406-4733-be3e-8af4ead69e4d",
    "prId" : 5793,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f34df1d6-72e7-4058-b61b-496ff76fcc91",
        "parentId" : null,
        "authorId" : "23c9565c-5fe0-4faf-82b2-dc40116c9bfa",
        "body" : "Any reason not to make it a `class Timeout`? \n\n``` js\nclass Timeout {\n  constructor(after) {\n    this._called = false;\n    this._idleTimeout = after;\n    this._idlePrev = this;\n    this._idleNext = this;\n    this._idleStart = null;\n    this._onTimeout = null;\n    this._repeat = null;\n  }\n  unref () {\n    if (this._handle) {\n      this._handle.unref();\n    } else if (typeof this._onTimeout === 'function') {\n      var now = TimerWrap.now();\n      if (!this._idleStart) this._idleStart = now;\n      var delay = this._idleStart + this._idleTimeout - now;\n      if (delay < 0) delay = 0;\n\n      // Prevent running cb again when unref() is called during the same cb\n      if (this._called && !this._repeat) {\n        exports.unenroll(this);\n        return;\n      }\n\n      var handle = reuse(this);\n\n      this._handle = handle || new TimerWrap();\n      this._handle.owner = this;\n      this._handle[kOnTimeout] = function unrefdHandle() {\n        this.owner._onTimeout();\n        if (!this.owner._repeat)\n          this.owner.close();\n      };\n      this._handle.start(delay, 0);\n      this._handle.domain = this.domain;\n      this._handle.unref();\n    }\n    return this;\n  }\n  ref() {\n    if (this._handle)\n      this._handle.ref();\n    return this;\n  }\n  close() {\n    this._onTimeout = null;\n    if (this._handle) {\n      this._handle[kOnTimeout] = null;\n      this._handle.close();\n    } else {\n      exports.unenroll(this);\n    }\n    return this;\n  }\n}\n```\n",
        "createdAt" : "2016-03-19T12:48:18Z",
        "updatedAt" : "2016-03-21T15:22:32Z",
        "lastEditedBy" : "23c9565c-5fe0-4faf-82b2-dc40116c9bfa",
        "tags" : [
        ]
      },
      {
        "id" : "e67f680b-d9ac-42bb-9e2d-8339c5222379",
        "parentId" : "f34df1d6-72e7-4058-b61b-496ff76fcc91",
        "authorId" : "7490b440-07c7-4433-856f-3720a914a77a",
        "body" : "No gain, more code change.\n",
        "createdAt" : "2016-03-19T13:49:45Z",
        "updatedAt" : "2016-03-21T15:22:32Z",
        "lastEditedBy" : "7490b440-07c7-4433-856f-3720a914a77a",
        "tags" : [
        ]
      },
      {
        "id" : "8659ff6b-8d3e-4599-8753-012f8cdb0829",
        "parentId" : "f34df1d6-72e7-4058-b61b-496ff76fcc91",
        "authorId" : "23c9565c-5fe0-4faf-82b2-dc40116c9bfa",
        "body" : "Well, it modernizes things a little and makes them more explicit. If we want to minimize change why not keep it `const Timeout` and do `const Timeout = function Timeout` - by naming the function expression you get the same trace.\n",
        "createdAt" : "2016-03-19T15:47:05Z",
        "updatedAt" : "2016-03-21T15:22:32Z",
        "lastEditedBy" : "23c9565c-5fe0-4faf-82b2-dc40116c9bfa",
        "tags" : [
        ]
      },
      {
        "id" : "ad429864-90c5-43a5-824e-0041beed9477",
        "parentId" : "f34df1d6-72e7-4058-b61b-496ff76fcc91",
        "authorId" : "7490b440-07c7-4433-856f-3720a914a77a",
        "body" : "Why even assign it though? It's unnecessary.\n\nTypically we have avoided modernization unless it meant performance increases or was part of some refactor that touched the code a lot anyways.\n",
        "createdAt" : "2016-03-19T16:34:43Z",
        "updatedAt" : "2016-03-21T15:22:32Z",
        "lastEditedBy" : "7490b440-07c7-4433-856f-3720a914a77a",
        "tags" : [
        ]
      },
      {
        "id" : "4dcad83e-70ed-4b63-83e1-3ff23029b8bd",
        "parentId" : "f34df1d6-72e7-4058-b61b-496ff76fcc91",
        "authorId" : "23c9565c-5fe0-4faf-82b2-dc40116c9bfa",
        "body" : "Fair enough - I'm sorry if all these questions annoy you :) \n",
        "createdAt" : "2016-03-19T16:46:34Z",
        "updatedAt" : "2016-03-21T15:22:32Z",
        "lastEditedBy" : "23c9565c-5fe0-4faf-82b2-dc40116c9bfa",
        "tags" : [
        ]
      }
    ],
    "commit" : "4fe02e23af1e0c746b30132205fbd1fbddb2a079",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +440,444 @@\n\nfunction Timeout(after) {\n  this._called = false;\n  this._idleTimeout = after;"
  }
]