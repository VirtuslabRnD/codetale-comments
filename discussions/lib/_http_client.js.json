[
  {
    "id" : "e63a747e-214c-47c9-95a1-c02a35cd0680",
    "prId" : 8923,
    "prUrl" : "https://github.com/nodejs/node/pull/8923#pullrequestreview-3126220",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "93ae5993-1403-4033-b2a8-736bec29daed",
        "parentId" : null,
        "authorId" : "18a0a2b7-cb40-4ae7-b110-7ab494225c65",
        "body" : "`RangeError`?\n",
        "createdAt" : "2016-10-05T17:00:07Z",
        "updatedAt" : "2016-10-13T11:40:24Z",
        "lastEditedBy" : "18a0a2b7-cb40-4ae7-b110-7ab494225c65",
        "tags" : [
        ]
      },
      {
        "id" : "66ba1643-67bd-45b8-82d9-cf5e57af6c5b",
        "parentId" : "93ae5993-1403-4033-b2a8-736bec29daed",
        "authorId" : "c8ef07ae-30f6-4919-9aa8-bf0160bbd4a0",
        "body" : "Ack, but for a different PR because people may want to be careful and consider that `semver-major`?\n",
        "createdAt" : "2016-10-05T17:59:13Z",
        "updatedAt" : "2016-10-13T11:40:24Z",
        "lastEditedBy" : "c8ef07ae-30f6-4919-9aa8-bf0160bbd4a0",
        "tags" : [
        ]
      },
      {
        "id" : "d006dd03-54a2-43b1-a808-384679ad0fb4",
        "parentId" : "93ae5993-1403-4033-b2a8-736bec29daed",
        "authorId" : "18a0a2b7-cb40-4ae7-b110-7ab494225c65",
        "body" : "Hmm, I think this would be a unecessary breaking change if we consider error types as API. So, LGTM as-is.\n",
        "createdAt" : "2016-10-06T14:36:08Z",
        "updatedAt" : "2016-10-13T11:40:24Z",
        "lastEditedBy" : "18a0a2b7-cb40-4ae7-b110-7ab494225c65",
        "tags" : [
        ]
      }
    ],
    "commit" : "4f62acd9c5e6f7d65605dda0ebdcf60e9e848311",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +50,54 @@    // well, and b) possibly too restrictive for real-world usage.\n    // Restrict the filter to control characters and spaces.\n    throw new TypeError('Request path contains unescaped characters');\n  } else if (protocol !== expectedProtocol) {\n    throw new Error('Protocol \"' + protocol + '\" not supported. ' +"
  },
  {
    "id" : "bae3a15e-e8c1-48f2-8e24-71ecea009be1",
    "prId" : 10558,
    "prUrl" : "https://github.com/nodejs/node/pull/10558#pullrequestreview-14854764",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4b40a18f-fd13-4da8-a96e-6d09f110b3f9",
        "parentId" : null,
        "authorId" : "bd43ce4d-85c2-4f54-8666-274f0f79f75b",
        "body" : "This additional throw probably makes this PR semver-major?",
        "createdAt" : "2017-01-02T13:01:27Z",
        "updatedAt" : "2017-01-11T17:58:13Z",
        "lastEditedBy" : "bd43ce4d-85c2-4f54-8666-274f0f79f75b",
        "tags" : [
        ]
      },
      {
        "id" : "140d6fde-d088-4062-a861-76f39abf4667",
        "parentId" : "4b40a18f-fd13-4da8-a96e-6d09f110b3f9",
        "authorId" : "c5f34109-f61d-4540-9a67-e4a5494934e5",
        "body" : "It shouldn't, I just had to move the check from the old `_renderHeaders()` to the appropriate call sites since that function no longer exists. I tried just moving it to `_storeHeader()` but that caused problems IIRC.",
        "createdAt" : "2017-01-02T15:29:16Z",
        "updatedAt" : "2017-01-11T17:58:13Z",
        "lastEditedBy" : "c5f34109-f61d-4540-9a67-e4a5494934e5",
        "tags" : [
        ]
      }
    ],
    "commit" : "03b9f6fe26654e916f5e2dc7e9154ed51e5f1e99",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +133,137 @@  } else if (self.getHeader('expect')) {\n    if (self._header) {\n      throw new Error('Can\\'t render headers after they are sent to the ' +\n                      'client');\n    }"
  },
  {
    "id" : "d4be5ee9-3c2f-44cb-aba0-53fb83000416",
    "prId" : 10558,
    "prUrl" : "https://github.com/nodejs/node/pull/10558#pullrequestreview-14854773",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "07962412-2fc1-4c6c-833a-e0093df2e870",
        "parentId" : null,
        "authorId" : "bd43ce4d-85c2-4f54-8666-274f0f79f75b",
        "body" : "As does this one",
        "createdAt" : "2017-01-02T13:01:40Z",
        "updatedAt" : "2017-01-11T17:58:13Z",
        "lastEditedBy" : "bd43ce4d-85c2-4f54-8666-274f0f79f75b",
        "tags" : [
        ]
      },
      {
        "id" : "89c51e48-1936-4a92-9f63-99ab2e7538ba",
        "parentId" : "07962412-2fc1-4c6c-833a-e0093df2e870",
        "authorId" : "c5f34109-f61d-4540-9a67-e4a5494934e5",
        "body" : "It shouldn't, I just had to move the check from the old `_renderHeaders()` to the appropriate call sites since that function no longer exists. I tried just moving it to `_storeHeader()` but that caused problems IIRC.",
        "createdAt" : "2017-01-02T15:29:23Z",
        "updatedAt" : "2017-01-11T17:58:13Z",
        "lastEditedBy" : "c5f34109-f61d-4540-9a67-e4a5494934e5",
        "tags" : [
        ]
      }
    ],
    "commit" : "03b9f6fe26654e916f5e2dc7e9154ed51e5f1e99",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +230,234 @@ClientRequest.prototype._implicitHeader = function _implicitHeader() {\n  if (this._header) {\n    throw new Error('Can\\'t render headers after they are sent to the client');\n  }\n  this._storeHeader(this.method + ' ' + this.path + ' HTTP/1.1\\r\\n',"
  },
  {
    "id" : "a01289c7-f8ea-4fcc-92c0-c215873db4e1",
    "prId" : 10818,
    "prUrl" : "https://github.com/nodejs/node/pull/10818#pullrequestreview-18203439",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0256fb52-d1ca-495e-b534-a143cf6b5f8b",
        "parentId" : null,
        "authorId" : "4224fcfe-ee22-4bd8-9ed5-4e8efd7a90bc",
        "body" : "I'm not even sure if it's appropriate to emit 'free' and skip destroying the socket.  `ClientRequest#abort()` always calls `socket.destroy()` when there is one.",
        "createdAt" : "2017-01-16T04:41:26Z",
        "updatedAt" : "2017-01-28T17:06:33Z",
        "lastEditedBy" : "4224fcfe-ee22-4bd8-9ed5-4e8efd7a90bc",
        "tags" : [
        ]
      },
      {
        "id" : "2c8123de-3b2f-483d-ac55-ff53903972aa",
        "parentId" : "0256fb52-d1ca-495e-b534-a143cf6b5f8b",
        "authorId" : "bdefb563-5b0e-49d6-af83-14c9dcbf70b5",
        "body" : "@bnoordhuis I _think_ this is for keep-alive sockets?",
        "createdAt" : "2017-01-16T06:35:54Z",
        "updatedAt" : "2017-01-28T17:06:33Z",
        "lastEditedBy" : "bdefb563-5b0e-49d6-af83-14c9dcbf70b5",
        "tags" : [
        ]
      },
      {
        "id" : "23007487-605a-434c-acd1-a37548e5e1a7",
        "parentId" : "0256fb52-d1ca-495e-b534-a143cf6b5f8b",
        "authorId" : "bdefb563-5b0e-49d6-af83-14c9dcbf70b5",
        "body" : "@bnoordhuis I guess you were referring to https://github.com/nodejs/node/blob/77be180f49096c2789c08d31744f5ef16fe340a1/lib/_http_client.js#L296-L299. I'm not sure either.",
        "createdAt" : "2017-01-16T06:55:20Z",
        "updatedAt" : "2017-01-28T17:06:33Z",
        "lastEditedBy" : "bdefb563-5b0e-49d6-af83-14c9dcbf70b5",
        "tags" : [
        ]
      },
      {
        "id" : "d67d7737-f18c-4a04-af91-8d6c808d6c23",
        "parentId" : "0256fb52-d1ca-495e-b534-a143cf6b5f8b",
        "authorId" : "bdefb563-5b0e-49d6-af83-14c9dcbf70b5",
        "body" : "This is when `socket.emit('free');` was added: https://github.com/nodejs/node/commit/d0c7d93536d8bc7977ed2d3bd0b0246a558e5137#diff-e3bc37430eb078ccbafe3aa3b570c91a, previously the socket was destroyed in all cases.",
        "createdAt" : "2017-01-17T20:33:06Z",
        "updatedAt" : "2017-01-28T17:06:33Z",
        "lastEditedBy" : "bdefb563-5b0e-49d6-af83-14c9dcbf70b5",
        "tags" : [
        ]
      },
      {
        "id" : "ebbb0cf9-1ddb-4a66-accb-30179a1feb23",
        "parentId" : "0256fb52-d1ca-495e-b534-a143cf6b5f8b",
        "authorId" : "9e96224b-2acc-4770-a5d7-d764637e4628",
        "body" : "I think we should always `destroy()`, I do not see a way for this socket to be reused even if there is an agent.",
        "createdAt" : "2017-01-24T13:32:46Z",
        "updatedAt" : "2017-01-28T17:06:33Z",
        "lastEditedBy" : "9e96224b-2acc-4770-a5d7-d764637e4628",
        "tags" : [
        ]
      },
      {
        "id" : "5ed859db-1e50-42b5-b8cb-6af51d3ab811",
        "parentId" : "0256fb52-d1ca-495e-b534-a143cf6b5f8b",
        "authorId" : "d10ccdef-08de-4320-917e-16a9175dedcf",
        "body" : "Agree. There's really no safe way to reuse it. `destroy()` is the safest thing to do",
        "createdAt" : "2017-01-24T16:27:48Z",
        "updatedAt" : "2017-01-28T17:06:33Z",
        "lastEditedBy" : "d10ccdef-08de-4320-917e-16a9175dedcf",
        "tags" : [
        ]
      },
      {
        "id" : "c90da004-1f05-439e-b67a-6963a5d6c051",
        "parentId" : "0256fb52-d1ca-495e-b534-a143cf6b5f8b",
        "authorId" : "bdefb563-5b0e-49d6-af83-14c9dcbf70b5",
        "body" : "I've added a test which should clarify why `socket.emit('free')` is used. It's for queued requests which are already aborted.",
        "createdAt" : "2017-01-24T16:29:35Z",
        "updatedAt" : "2017-01-28T17:06:33Z",
        "lastEditedBy" : "bdefb563-5b0e-49d6-af83-14c9dcbf70b5",
        "tags" : [
        ]
      },
      {
        "id" : "cf278204-d66c-4ab0-94e9-442514fa6c24",
        "parentId" : "0256fb52-d1ca-495e-b534-a143cf6b5f8b",
        "authorId" : "bdefb563-5b0e-49d6-af83-14c9dcbf70b5",
        "body" : "See f52c874b737ccb7e92d640b31e02c6efb3acd22c.",
        "createdAt" : "2017-01-24T16:31:12Z",
        "updatedAt" : "2017-01-28T17:06:33Z",
        "lastEditedBy" : "bdefb563-5b0e-49d6-af83-14c9dcbf70b5",
        "tags" : [
        ]
      }
    ],
    "commit" : "18d4ee97d812259eb11069614246c9adc5b9f719",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +648,652 @@    } else {\n      socket.emit('free');\n    }\n  } else {\n    tickOnSocket(req, socket);"
  },
  {
    "id" : "7f44b2f7-60fe-45de-b024-62ca44c15ad1",
    "prId" : 12983,
    "prUrl" : "https://github.com/nodejs/node/pull/12983#pullrequestreview-38286930",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6d4633f0-c1b9-4173-b183-fbe298810319",
        "parentId" : null,
        "authorId" : "fd6121e5-716b-4d0d-aef4-eef51dd23a40",
        "body" : "I am now wondering if this way of checking URLs is a bit hard to understand for someone who don't know the implementation details of URL...",
        "createdAt" : "2017-05-12T16:53:53Z",
        "updatedAt" : "2017-05-22T22:07:45Z",
        "lastEditedBy" : "fd6121e5-716b-4d0d-aef4-eef51dd23a40",
        "tags" : [
        ]
      },
      {
        "id" : "e6f623ab-480a-472a-9797-874c35116f9e",
        "parentId" : "6d4633f0-c1b9-4173-b183-fbe298810319",
        "authorId" : "c5f34109-f61d-4540-9a67-e4a5494934e5",
        "body" : "There's not a whole lot that can be done about that. Using a helper function as previously noted incurs a measurable performance hit.",
        "createdAt" : "2017-05-16T01:30:30Z",
        "updatedAt" : "2017-05-22T22:07:45Z",
        "lastEditedBy" : "c5f34109-f61d-4540-9a67-e4a5494934e5",
        "tags" : [
        ]
      },
      {
        "id" : "d6dc561c-134c-4e02-8f86-08de1f0c4b0b",
        "parentId" : "6d4633f0-c1b9-4173-b183-fbe298810319",
        "authorId" : "fd6121e5-716b-4d0d-aef4-eef51dd23a40",
        "body" : "@mscdex Maybe a comment would help?",
        "createdAt" : "2017-05-16T02:21:16Z",
        "updatedAt" : "2017-05-22T22:07:45Z",
        "lastEditedBy" : "fd6121e5-716b-4d0d-aef4-eef51dd23a40",
        "tags" : [
        ]
      },
      {
        "id" : "9e9aeb3e-a001-48b8-af29-6352b726aa02",
        "parentId" : "6d4633f0-c1b9-4173-b183-fbe298810319",
        "authorId" : "c5f34109-f61d-4540-9a67-e4a5494934e5",
        "body" : "Done.",
        "createdAt" : "2017-05-16T03:53:11Z",
        "updatedAt" : "2017-05-22T22:07:45Z",
        "lastEditedBy" : "c5f34109-f61d-4540-9a67-e4a5494934e5",
        "tags" : [
        ]
      }
    ],
    "commit" : "ed365653f6eb74d58a1d2a1c1bdb20e4baf67fa0",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +84,88 @@    }\n  } else if (options && options[searchParamsSymbol] &&\n             options[searchParamsSymbol][searchParamsSymbol]) {\n    // url.URL instance\n    options = urlToOptions(options);"
  },
  {
    "id" : "6f89f0aa-14b4-40ff-a20b-9d7eda0fb715",
    "prId" : 13122,
    "prUrl" : "https://github.com/nodejs/node/pull/13122#pullrequestreview-39342540",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "221c167a-e80f-4255-8f0c-66c953726179",
        "parentId" : null,
        "authorId" : "23dd1f9f-2ce6-4461-ad78-bdc0fc563445",
        "body" : "`const`?",
        "createdAt" : "2017-05-20T12:25:43Z",
        "updatedAt" : "2017-05-23T03:06:02Z",
        "lastEditedBy" : "23dd1f9f-2ce6-4461-ad78-bdc0fc563445",
        "tags" : [
        ]
      },
      {
        "id" : "bd3168b7-4721-40f9-b7ab-2711643fcecf",
        "parentId" : "221c167a-e80f-4255-8f0c-66c953726179",
        "authorId" : "c5f34109-f61d-4540-9a67-e4a5494934e5",
        "body" : "I was sticking to the \"style\" of the original code. I'm also still reluctant to use `const` in runtime code because I've been burned so many times by it in the past (even when it hasn't triggered a permanent deopt).",
        "createdAt" : "2017-05-20T20:23:59Z",
        "updatedAt" : "2017-05-23T03:06:02Z",
        "lastEditedBy" : "c5f34109-f61d-4540-9a67-e4a5494934e5",
        "tags" : [
        ]
      },
      {
        "id" : "46e951ea-41cb-40d9-98ce-9a0cb4fc8f16",
        "parentId" : "221c167a-e80f-4255-8f0c-66c953726179",
        "authorId" : "23dd1f9f-2ce6-4461-ad78-bdc0fc563445",
        "body" : "Ack. Although before it was assigned to, and now it's just initiated.",
        "createdAt" : "2017-05-20T20:25:46Z",
        "updatedAt" : "2017-05-23T03:06:02Z",
        "lastEditedBy" : "23dd1f9f-2ce6-4461-ad78-bdc0fc563445",
        "tags" : [
        ]
      }
    ],
    "commit" : "3774c99f668173175c35f64c92499c93277df5f2",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +178,182 @@      // in square brackets, as defined by URI formatting\n      // https://tools.ietf.org/html/rfc3986#section-3.2.2\n      var posColon = hostHeader.indexOf(':');\n      if (posColon !== -1 &&\n          hostHeader.indexOf(':', posColon + 1) !== -1 &&"
  }
]