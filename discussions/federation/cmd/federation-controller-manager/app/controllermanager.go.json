[
  {
    "id" : "63078074-1f15-4c2a-801b-9f0032bf96ce",
    "prId" : 46090,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/46090#pullrequestreview-54191133",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a01e38c7-8a01-4c2e-b951-f89cceeb1550",
        "parentId" : null,
        "authorId" : null,
        "body" : "This is normal, expected behaviour, right? In that case we should not be logging a fatal error here.",
        "createdAt" : "2017-06-07T18:54:53Z",
        "updatedAt" : "2017-08-10T00:49:16Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      },
      {
        "id" : "8e2e6f83-e174-457d-81d1-2d1ce375111e",
        "parentId" : "a01e38c7-8a01-4c2e-b951-f89cceeb1550",
        "authorId" : null,
        "body" : "So you die if you lose the leader election here?  Are relying on Kubernetes to automatically restart this pod to try again?  This seems to introduce potential delays and also it seems brittle.  What if Kubernetes decides to stop restarting this pod because it's failed too often?  And what if, because this pod is dead, Kubernetes decides to schedule another pod on this node, and uses up all the resources?  I guess in summary I don't understand the design for how leader election is supposed to work.  Can you point me to the design doc?",
        "createdAt" : "2017-06-07T19:00:13Z",
        "updatedAt" : "2017-08-10T00:49:16Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      },
      {
        "id" : "32bce9b6-5d9d-49a1-82d1-183bb43589c1",
        "parentId" : "a01e38c7-8a01-4c2e-b951-f89cceeb1550",
        "authorId" : "15d1f4bd-5840-4fce-87f5-1f04ed7f10e5",
        "body" : "if the instance which is leader loses leader election it would die and restart. potentially it has encountered some issues due to which it could not renew the leadership lease. Also it should be ok if it restarts as there are standby instances which could acquire lease immediately after one is available.\r\n@quinton-hoole, there was no design for leader-election for controller-manager as it was thought to be trivial. Already there are multiple examples available on how to implement it. here is the one for [kube-controller-manager](https://github.com/kubernetes/kubernetes/blob/master/cmd/kube-controller-manager/app/controllermanager.go#L208)\r\n\r\nHowever there is Federation control plane HA design, which we need to revisit in v1.8 and gather acceptance from community. https://docs.google.com/document/d/18kB5W401WBhEjUOOXQnBb-nx3bFXK8pOCHbMbdXuBMg/edit?usp=sharing",
        "createdAt" : "2017-06-08T05:22:36Z",
        "updatedAt" : "2017-08-10T00:49:16Z",
        "lastEditedBy" : "15d1f4bd-5840-4fce-87f5-1f04ed7f10e5",
        "tags" : [
        ]
      },
      {
        "id" : "fec547a3-51bc-4b48-8775-12502aebdc48",
        "parentId" : "a01e38c7-8a01-4c2e-b951-f89cceeb1550",
        "authorId" : null,
        "body" : "OK, that makes sense.  If the kubelet doesn't restart the pod, then the replicset controller will, perhaps on a different node.  Sorry, I was being dumb.",
        "createdAt" : "2017-08-03T18:59:10Z",
        "updatedAt" : "2017-08-10T00:49:16Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      }
    ],
    "commit" : "e6b54b6cfcb91890698a134c08f5fbf7fc2eeb59",
    "line" : 106,
    "diffHunk" : "@@ -1,1 +182,186 @@\t\t\tOnStartedLeading: run,\n\t\t\tOnStoppedLeading: func() {\n\t\t\t\tglog.Fatalf(\"leaderelection lost\")\n\t\t\t},\n\t\t},"
  },
  {
    "id" : "9f011d27-aa87-4223-883b-30f5db49f2db",
    "prId" : 42375,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/42375#pullrequestreview-24640403",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ce5c46b4-7dbf-446c-98ee-84e2bbfb7c3d",
        "parentId" : null,
        "authorId" : "e36c9d4f-8037-4359-bd9a-80d5b6c08379",
        "body" : "(no action required) Consider removing the ``Loading client config`` log lines.  I don't think they provide any value.",
        "createdAt" : "2017-03-02T02:21:31Z",
        "updatedAt" : "2017-03-02T02:28:41Z",
        "lastEditedBy" : "e36c9d4f-8037-4359-bd9a-80d5b6c08379",
        "tags" : [
        ]
      }
    ],
    "commit" : "244f8c87eab7362f2d434220f49b64496308c546",
    "line" : 37,
    "diffHunk" : "@@ -1,1 +169,173 @@\t\t\tglog.Fatalf(\"Cloud provider could not be initialized: %v\", err)\n\t\t}\n\t\tglog.Infof(\"Loading client config for service controller %q\", servicecontroller.UserAgentName)\n\t\tscClientset := federationclientset.NewForConfigOrDie(restclient.AddUserAgent(restClientCfg, servicecontroller.UserAgentName))\n\t\tservicecontroller := servicecontroller.New(scClientset, dns, s.FederationName, s.ServiceDnsSuffix, s.ZoneName, s.ZoneID)"
  },
  {
    "id" : "b815b7fb-e390-4945-be73-fc29dd53b7e9",
    "prId" : 42375,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/42375#pullrequestreview-24868251",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b806e425-d535-4ca5-afbb-2fd6058ddde7",
        "parentId" : null,
        "authorId" : "e36c9d4f-8037-4359-bd9a-80d5b6c08379",
        "body" : "Consider updating ``kubefed init`` so that ``--dns-provider`` is not mandatory (see #42092) when  ``services=false``.",
        "createdAt" : "2017-03-02T02:27:50Z",
        "updatedAt" : "2017-03-02T02:28:41Z",
        "lastEditedBy" : "e36c9d4f-8037-4359-bd9a-80d5b6c08379",
        "tags" : [
        ]
      },
      {
        "id" : "cdda7c35-2f2a-4c41-891d-0f8c7762bd80",
        "parentId" : "b806e425-d535-4ca5-afbb-2fd6058ddde7",
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "I dont want to do that in this PR. I know it has been discussed before. Is there an open issue for this or should I file a new one?",
        "createdAt" : "2017-03-02T07:23:54Z",
        "updatedAt" : "2017-03-02T07:23:54Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      },
      {
        "id" : "2609123d-2d89-4012-84d0-1b9cab5f73a1",
        "parentId" : "b806e425-d535-4ca5-afbb-2fd6058ddde7",
        "authorId" : "e36c9d4f-8037-4359-bd9a-80d5b6c08379",
        "body" : "There isn't an open issue because merging this PR would cause the problem.  I really think the parameter needs to be made optional in the PR that allows the services controller to be disabled.",
        "createdAt" : "2017-03-02T22:50:18Z",
        "updatedAt" : "2017-03-02T22:50:19Z",
        "lastEditedBy" : "e36c9d4f-8037-4359-bd9a-80d5b6c08379",
        "tags" : [
        ]
      },
      {
        "id" : "71c1a918-c868-4eb7-89e6-b0b34c0b7b86",
        "parentId" : "b806e425-d535-4ca5-afbb-2fd6058ddde7",
        "authorId" : "e36c9d4f-8037-4359-bd9a-80d5b6c08379",
        "body" : "Nevermind, it's more complicated than I originally thought.  It looks like it may be necessary for ``kubefed init`` to accept the ``--controllers`` argument as a first-class argument rather than passing it via ``--controllermanager--arg-overrides`` to allow detection of ``services=false`` in time to disable the check for the dns provider.  Please file an issue.\r\n\r\ncc: @madhusudancs ",
        "createdAt" : "2017-03-02T22:57:45Z",
        "updatedAt" : "2017-03-02T22:57:52Z",
        "lastEditedBy" : "e36c9d4f-8037-4359-bd9a-80d5b6c08379",
        "tags" : [
        ]
      },
      {
        "id" : "ee3adb7c-9cea-47fa-8019-89933896784b",
        "parentId" : "b806e425-d535-4ca5-afbb-2fd6058ddde7",
        "authorId" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "body" : "I would also completely defer this until we come up with a plan for structured config.",
        "createdAt" : "2017-03-02T23:05:30Z",
        "updatedAt" : "2017-03-02T23:05:30Z",
        "lastEditedBy" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "tags" : [
        ]
      },
      {
        "id" : "37ceb084-f9e9-4a2d-829a-68e56ce2caae",
        "parentId" : "b806e425-d535-4ca5-afbb-2fd6058ddde7",
        "authorId" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "body" : "The flags situation is kind of already becoming unwieldy. ",
        "createdAt" : "2017-03-02T23:06:35Z",
        "updatedAt" : "2017-03-02T23:06:43Z",
        "lastEditedBy" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "tags" : [
        ]
      }
    ],
    "commit" : "244f8c87eab7362f2d434220f49b64496308c546",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +165,169 @@\n\tif controllerEnabled(s.Controllers, serverResources, servicecontroller.ControllerName, servicecontroller.RequiredResources, true) {\n\t\tdns, err := dnsprovider.InitDnsProvider(s.DnsProvider, s.DnsConfigFile)\n\t\tif err != nil {\n\t\t\tglog.Fatalf(\"Cloud provider could not be initialized: %v\", err)"
  },
  {
    "id" : "d89f9a67-c823-4833-ac15-aeb033d3a179",
    "prId" : 42025,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/42025#pullrequestreview-26890023",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f654728c-a7db-4318-9f71-b14b0d7ff84c",
        "parentId" : null,
        "authorId" : "b8171d77-1357-47e5-acaf-22ea2fb1d529",
        "body" : "This is a nice refactor, but I wonder if it would be better to put it in another PR: it makes this PR a little larger than necessary, and occludes the main purpose I think.",
        "createdAt" : "2017-03-13T21:26:51Z",
        "updatedAt" : "2017-03-30T19:59:18Z",
        "lastEditedBy" : "b8171d77-1357-47e5-acaf-22ea2fb1d529",
        "tags" : [
        ]
      },
      {
        "id" : "70e36066-4230-4860-aecb-a97231eb6d4c",
        "parentId" : "f654728c-a7db-4318-9f71-b14b0d7ff84c",
        "authorId" : "e36c9d4f-8037-4359-bd9a-80d5b6c08379",
        "body" : "Would it be enough to put it in a separate commit?  PRs have a lot of overhead and this change is trivial enough that I'm not sure it's worth breaking out.",
        "createdAt" : "2017-03-14T14:27:41Z",
        "updatedAt" : "2017-03-30T19:59:18Z",
        "lastEditedBy" : "e36c9d4f-8037-4359-bd9a-80d5b6c08379",
        "tags" : [
        ]
      },
      {
        "id" : "3aa495b2-6236-4a50-b4ca-9b39d8adbcd4",
        "parentId" : "f654728c-a7db-4318-9f71-b14b0d7ff84c",
        "authorId" : "b8171d77-1357-47e5-acaf-22ea2fb1d529",
        "body" : "Sure, that SGTM.",
        "createdAt" : "2017-03-14T18:12:58Z",
        "updatedAt" : "2017-03-30T19:59:18Z",
        "lastEditedBy" : "b8171d77-1357-47e5-acaf-22ea2fb1d529",
        "tags" : [
        ]
      }
    ],
    "commit" : "304030a61c5eab93b839006773a907c8894ee383",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +166,170 @@\t}\n\n\tclustercontroller.StartClusterController(restClientCfg, stopChan, s.ClusterMonitorPeriod.Duration)\n\n\tif controllerEnabled(s.Controllers, serverResources, servicecontroller.ControllerName, servicecontroller.RequiredResources, true) {"
  },
  {
    "id" : "c4b014bd-d752-4edb-9d31-4d41bc2e7806",
    "prId" : 30601,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/30601#pullrequestreview-6924202",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6e466fe3-f5b7-465a-a72d-24c103241d3c",
        "parentId" : null,
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "Try KubeconfigSecretName as well?\n",
        "createdAt" : "2016-10-17T21:36:36Z",
        "updatedAt" : "2016-11-04T18:31:42Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      },
      {
        "id" : "d9efceac-27e9-4a3a-b980-50183b318aa3",
        "parentId" : "6e466fe3-f5b7-465a-a72d-24c103241d3c",
        "authorId" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "body" : "Just updated to that name.\n",
        "createdAt" : "2016-11-02T22:29:31Z",
        "updatedAt" : "2016-11-04T18:31:42Z",
        "lastEditedBy" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "tags" : [
        ]
      }
    ],
    "commit" : "efafff4078e49e9348e2d34a123983ad39866ab5",
    "line" : null,
    "diffHunk" : "@@ -1,1 +198,202 @@// upgrade path in 1.4/1.5.\nfunc restClientConfigFromSecret(master string) (*restclient.Config, error) {\n\tkubeconfigGetter := util.KubeconfigGetterForSecret(DeprecatedKubeconfigSecretName)\n\trestClientCfg, err := clientcmd.BuildConfigFromKubeconfigGetter(master, kubeconfigGetter)\n\tif err != nil {"
  },
  {
    "id" : "72e147d2-9c68-4ef9-9543-e691866c1074",
    "prId" : 26694,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ffd550a1-e62b-415a-9d4c-8a2c43ae9369",
        "parentId" : null,
        "authorId" : "ee3c1908-4390-4e95-844f-fb1e0ab18e67",
        "body" : "@nikhiljindal is this a prerequisite for starting controller manager? do we need always create secret for kubeconfig of federation controller plane? I keep this as is but want to let you know , originally, we can simply run ./federation-controller-manager --v=5 to start controller manager without any preconfiguration, but now I have to create secret for kubeconfig.\n",
        "createdAt" : "2016-06-06T05:44:32Z",
        "updatedAt" : "2016-06-06T09:04:40Z",
        "lastEditedBy" : "ee3c1908-4390-4e95-844f-fb1e0ab18e67",
        "tags" : [
        ]
      },
      {
        "id" : "a16a9276-65a3-4f14-be90-23cb840a1953",
        "parentId" : "ffd550a1-e62b-415a-9d4c-8a2c43ae9369",
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "Yes federation-controller-manager needs the kubeconfig of federation-apiserver to be able to talk to it.\n\nWe can update this code to try insecure access if secret does not exist, which will ensure that your local setup will work without secret. For clusters on GCE/GKE or any other cloud provider, we will need the secret.\n",
        "createdAt" : "2016-06-06T17:14:29Z",
        "updatedAt" : "2016-06-06T17:14:29Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      }
    ],
    "commit" : "6dde087f69b2bdd5f9191edbd572985e00f8c808",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +77,81 @@\t}\n\t// Create the config to talk to federation-apiserver.\n\tkubeconfigGetter := util.KubeconfigGetterForSecret(FederationAPIServerSecretName)\n\trestClientCfg, err := clientcmd.BuildConfigFromKubeconfigGetter(s.Master, kubeconfigGetter)\n\tif err != nil {"
  }
]