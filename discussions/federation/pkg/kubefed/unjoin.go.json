[
  {
    "id" : "741f6cd4-f622-46d4-be2f-79ba21a6be48",
    "prId" : 43443,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/43443#pullrequestreview-46149747",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1dac6945-3a00-4dd7-b1e9-a7324def2f9a",
        "parentId" : null,
        "authorId" : "e36c9d4f-8037-4359-bd9a-80d5b6c08379",
        "body" : "s/Unjoin/Unjoin removes/ (for symmetry with join doc)",
        "createdAt" : "2017-06-09T14:02:24Z",
        "updatedAt" : "2017-06-25T16:54:39Z",
        "lastEditedBy" : "e36c9d4f-8037-4359-bd9a-80d5b6c08379",
        "tags" : [
        ]
      },
      {
        "id" : "5345a047-2c85-4ef7-a95c-0db9a27e6ed7",
        "parentId" : "1dac6945-3a00-4dd7-b1e9-a7324def2f9a",
        "authorId" : "cc7376b4-34cd-480b-ad10-0b4b879dde52",
        "body" : "@marun updated!\r\n@madhusudancs this one is long pending PR together with https://github.com/kubernetes/kubernetes.github.io/pull/2937.\r\n@chenopis seems to have placed the links to these docs appropriately. This needs to be merged before the other PR can be merged.",
        "createdAt" : "2017-06-25T16:58:41Z",
        "updatedAt" : "2017-06-25T16:58:41Z",
        "lastEditedBy" : "cc7376b4-34cd-480b-ad10-0b4b879dde52",
        "tags" : [
        ]
      }
    ],
    "commit" : "e825ca53bd145e71c43fd2e7fc0c740c323f087b",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +73,77 @@\tcmd := &cobra.Command{\n\t\tUse:     \"unjoin CLUSTER_NAME --host-cluster-context=HOST_CONTEXT\",\n\t\tShort:   \"Unjoin a cluster from a federation\",\n\t\tLong:    unjoin_long,\n\t\tExample: unjoin_example,"
  },
  {
    "id" : "9fddeade-1ad3-4cbf-8ec3-15f25924f270",
    "prId" : 35494,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/35494#pullrequestreview-6490082",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dafe3ac0-e1f2-48b2-b90d-76960011c840",
        "parentId" : null,
        "authorId" : null,
        "body" : "Note: lets make sure that we generate an informative error message if the user forgets to do this.  e.g. not just 'type cluster unknown' but rather something like 'Type cluster unknown.  Context is probably not a federation. Please use the --context flag to specify a federation.'\n",
        "createdAt" : "2016-10-27T09:18:53Z",
        "updatedAt" : "2016-11-02T18:22:56Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      },
      {
        "id" : "9239c44d-cd41-47bf-a3cb-30efda81baca",
        "parentId" : "dafe3ac0-e1f2-48b2-b90d-76960011c840",
        "authorId" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "body" : "This is really hard to infer. Today, we don't say that the API server doesn't know about this type, we say the resource is not found. That might mean either:\n1. API server knows about the `federation/cluster` resource but it doesn't have the object with the name I requested.\n2. Or API server doesn't know about this type at all.\n\nAFAIK, there is no way to disambiguate that. Without additional information to infer that, saying `Context is probably not a federation` is sending users in the wrong direction. I would just leave it at \"it wasn't deleted\" warning below.\n\n@nikhiljindal is there a way to disambiguate these two cases?\n",
        "createdAt" : "2016-10-27T21:54:10Z",
        "updatedAt" : "2016-11-02T18:22:56Z",
        "lastEditedBy" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "tags" : [
        ]
      },
      {
        "id" : "386e833a-0d5a-43d0-90d0-536ff8023298",
        "parentId" : "dafe3ac0-e1f2-48b2-b90d-76960011c840",
        "authorId" : null,
        "body" : "Fair enough - if it's difficult or impossible, lets skip it.\n",
        "createdAt" : "2016-10-31T17:56:46Z",
        "updatedAt" : "2016-11-02T18:22:56Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      }
    ],
    "commit" : "90d46c86707c9bfa7b689e14fdcbda4e562eb894",
    "line" : 40,
    "diffHunk" : "@@ -1,1 +38,42 @@\t\tUnjoin removes a cluster from a federation.\n\n        Current context is assumed to be a federation endpoint.\n        Please use the --context flag otherwise.`)\n\tunjoin_example = templates.Examples(`"
  },
  {
    "id" : "5f106a45-23c6-46a6-9bb0-303b15df65d5",
    "prId" : 35494,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/35494#pullrequestreview-6527181",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7b7e41f1-339f-4112-8a77-130a52889172",
        "parentId" : null,
        "authorId" : null,
        "body" : "This is confusing.  Here you say to specify the host cluster context, but above you say to specify the federation context?\n",
        "createdAt" : "2016-10-27T09:20:11Z",
        "updatedAt" : "2016-11-02T18:22:56Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      },
      {
        "id" : "bb9bfa35-572e-4185-af4c-8e290d2bb28e",
        "parentId" : "7b7e41f1-339f-4112-8a77-130a52889172",
        "authorId" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "body" : "You need both. They are two different contexts. Added the phrase \"via the --host flag\" to clarify. Let me know if that makes sense at all.\n\nAlso, I understand why this would be confusing when you the code. The constants are defined upfront. But when the actual usage text is printed, the line in `Command.Use` below will be printed first. You will probably see the difference between those contexts when you read it in the right order.\n\nIf you still think this isn't right, let me know. Also, if have an alternative text in mind that you think might be less confusing, please suggest. \n",
        "createdAt" : "2016-10-27T22:00:04Z",
        "updatedAt" : "2016-11-02T18:22:56Z",
        "lastEditedBy" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "tags" : [
        ]
      },
      {
        "id" : "104ee267-0136-4f72-82cd-98e679100f8f",
        "parentId" : "7b7e41f1-339f-4112-8a77-130a52889172",
        "authorId" : null,
        "body" : "ok\n",
        "createdAt" : "2016-10-31T21:15:57Z",
        "updatedAt" : "2016-11-02T18:22:56Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      }
    ],
    "commit" : "90d46c86707c9bfa7b689e14fdcbda4e562eb894",
    "line" : 44,
    "diffHunk" : "@@ -1,1 +42,46 @@\tunjoin_example = templates.Examples(`\n\t\t# Unjoin removes the specified cluster from a federation.\n\t\t# Federation control plane's host cluster context name\n\t\t# must be specified via the --host-cluster-context flag\n\t\t# to properly cleanup the credentials."
  },
  {
    "id" : "3498cb83-1021-41c3-b2dc-1cba7ec888ab",
    "prId" : 35494,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/35494#pullrequestreview-6109612",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "91de003d-9f36-45b6-9da4-24af4c5099e0",
        "parentId" : null,
        "authorId" : null,
        "body" : "This defaults appropriately if not provided, I assume?\n",
        "createdAt" : "2016-10-27T09:58:16Z",
        "updatedAt" : "2016-11-02T18:22:56Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      },
      {
        "id" : "0e302c5b-7104-4d07-98f9-d6e01ee93af4",
        "parentId" : "91de003d-9f36-45b6-9da4-24af4c5099e0",
        "authorId" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "body" : "Yes.\n",
        "createdAt" : "2016-10-27T22:12:53Z",
        "updatedAt" : "2016-11-02T18:22:56Z",
        "lastEditedBy" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "tags" : [
        ]
      }
    ],
    "commit" : "90d46c86707c9bfa7b689e14fdcbda4e562eb894",
    "line" : null,
    "diffHunk" : "@@ -1,1 +73,77 @@\t}\n\thost := cmdutil.GetFlagString(cmd, \"host-cluster-context\")\n\thostSystemNamespace := cmdutil.GetFlagString(cmd, \"host-system-namespace\")\n\tkubeconfig := cmdutil.GetFlagString(cmd, \"kubeconfig\")\n"
  },
  {
    "id" : "bc9ed273-6108-4d40-a088-b4cdf226d77d",
    "prId" : 35494,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/35494#pullrequestreview-6490594",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "61a9b150-f584-4fb8-812f-294c4e2f29f3",
        "parentId" : null,
        "authorId" : null,
        "body" : "Use a better variable name than 'gvks' please.  Acronyms are bad.  And in this case I can't even work out what it might stand for.\n",
        "createdAt" : "2016-10-27T10:00:50Z",
        "updatedAt" : "2016-11-02T18:22:56Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      },
      {
        "id" : "5e2d1f10-0b12-4751-a521-3960249f6034",
        "parentId" : "61a9b150-f584-4fb8-812f-294c4e2f29f3",
        "authorId" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "body" : "`gvk` is an established convention in our source code. Also see - https://github.com/golang/go/wiki/CodeReviewComments#variable-names\n\nThere are 588 occurrences of `gvk` in just `k8s.io/kubernetes/pkg`\n",
        "createdAt" : "2016-10-27T17:39:01Z",
        "updatedAt" : "2016-11-02T18:22:56Z",
        "lastEditedBy" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "tags" : [
        ]
      },
      {
        "id" : "256edc73-dc9e-47d5-9577-0bc7643e3eb4",
        "parentId" : "61a9b150-f584-4fb8-812f-294c4e2f29f3",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Yeah, the problem is there isn't a better acronym than `gvk` because it's not a version, kind, group, and no one wants to say \"group version kind\" all day.\n",
        "createdAt" : "2016-10-28T03:51:35Z",
        "updatedAt" : "2016-11-02T18:22:56Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "9c7e6967-5f84-4023-995a-ed9ef4f0b96d",
        "parentId" : "61a9b150-f584-4fb8-812f-294c4e2f29f3",
        "authorId" : null,
        "body" : "Fair enough.\n",
        "createdAt" : "2016-10-31T17:59:19Z",
        "updatedAt" : "2016-11-02T18:22:56Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      }
    ],
    "commit" : "90d46c86707c9bfa7b689e14fdcbda4e562eb894",
    "line" : 103,
    "diffHunk" : "@@ -1,1 +101,105 @@\t// Boilerplate to create the secret in the host cluster.\n\tmapper, typer := f.Object()\n\tgvks, _, err := typer.ObjectKinds(&federationapi.Cluster{})\n\tif err != nil {\n\t\treturn nil, err"
  },
  {
    "id" : "6350c1c1-c775-4662-80bd-e3ee7c68d5bb",
    "prId" : 35494,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/35494#pullrequestreview-6490674",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3eda6a56-3979-4e56-8c7e-8bfdcc86381c",
        "parentId" : null,
        "authorId" : null,
        "body" : "Are you sure that it will always be the first element?\n",
        "createdAt" : "2016-10-27T10:05:15Z",
        "updatedAt" : "2016-11-02T18:22:56Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      },
      {
        "id" : "2b44fbdb-24e9-442b-8d1e-9fa05f942069",
        "parentId" : "3eda6a56-3979-4e56-8c7e-8bfdcc86381c",
        "authorId" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "body" : "Yeah. Or in other words, we only care about the first element.\n",
        "createdAt" : "2016-10-27T17:40:01Z",
        "updatedAt" : "2016-11-02T18:22:56Z",
        "lastEditedBy" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "tags" : [
        ]
      },
      {
        "id" : "31716819-d825-4013-88bb-0cb745011666",
        "parentId" : "3eda6a56-3979-4e56-8c7e-8bfdcc86381c",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "When asking for kinds, if you get back multiple, the typer is telling you what you should use if you don't need to deal with multiple (without more context being provided).  \n",
        "createdAt" : "2016-10-28T03:52:42Z",
        "updatedAt" : "2016-11-02T18:22:56Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "b30625a4-9965-4359-aa67-769dd7e74c11",
        "parentId" : "3eda6a56-3979-4e56-8c7e-8bfdcc86381c",
        "authorId" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "body" : "@smarterclayton Ack.\n",
        "createdAt" : "2016-10-28T04:48:15Z",
        "updatedAt" : "2016-11-02T18:22:56Z",
        "lastEditedBy" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "tags" : [
        ]
      },
      {
        "id" : "df10a41d-3340-4345-a43a-4acb6548688e",
        "parentId" : "3eda6a56-3979-4e56-8c7e-8bfdcc86381c",
        "authorId" : null,
        "body" : "OK\n",
        "createdAt" : "2016-10-31T17:59:40Z",
        "updatedAt" : "2016-11-02T18:22:56Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      }
    ],
    "commit" : "90d46c86707c9bfa7b689e14fdcbda4e562eb894",
    "line" : 107,
    "diffHunk" : "@@ -1,1 +105,109 @@\t\treturn nil, err\n\t}\n\tgvk := gvks[0]\n\tmapping, err := mapper.RESTMapping(unversioned.GroupKind{Group: gvk.Group, Kind: gvk.Kind}, gvk.Version)\n\tif err != nil {"
  },
  {
    "id" : "dc552a7a-3958-4d0e-a863-c9f26f729bb2",
    "prId" : 35494,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/35494#pullrequestreview-6491715",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1bcbbb87-ecda-45e6-b1e0-3f42f4498ef8",
        "parentId" : null,
        "authorId" : null,
        "body" : "It's not clear what the first a last arguments are here.  Perhaps use named variables to clarify (e.g. namespace=\"\", whatever=false, Get(namespace, name, whatever)\n",
        "createdAt" : "2016-10-27T10:07:32Z",
        "updatedAt" : "2016-11-02T18:22:56Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      },
      {
        "id" : "23d7f0f3-fb7b-4121-bf4b-37965de1f564",
        "parentId" : "1bcbbb87-ecda-45e6-b1e0-3f42f4498ef8",
        "authorId" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "body" : "But that's why we have - https://godoc.org/k8s.io/kubernetes/pkg/kubectl/resource#Helper.Get. No? And pretty much all the text editors have that integrated.\n",
        "createdAt" : "2016-10-27T21:29:14Z",
        "updatedAt" : "2016-11-02T18:22:56Z",
        "lastEditedBy" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "tags" : [
        ]
      },
      {
        "id" : "fde529e6-7295-4e85-97cb-ccab0dccbd7d",
        "parentId" : "1bcbbb87-ecda-45e6-b1e0-3f42f4498ef8",
        "authorId" : null,
        "body" : "Not mine.  But OK.\n",
        "createdAt" : "2016-10-31T18:05:05Z",
        "updatedAt" : "2016-11-02T18:22:56Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      }
    ],
    "commit" : "90d46c86707c9bfa7b689e14fdcbda4e562eb894",
    "line" : 118,
    "diffHunk" : "@@ -1,1 +116,120 @@\n\trh := resource.NewHelper(client, mapping)\n\tobj, err := rh.Get(\"\", name, false)\n\n\tif isNotFound(err) {"
  },
  {
    "id" : "626648ca-8599-43d5-ace9-bcbfc12aecc1",
    "prId" : 35494,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/35494#pullrequestreview-6109612",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8a1abf19-09bc-4f47-a414-fe2fd60271e5",
        "parentId" : null,
        "authorId" : null,
        "body" : "Please clarify what you're deleting here, and why.  If you're deleting the cluster from the local kubeconfig, I don't think we want to do that.\n",
        "createdAt" : "2016-10-27T10:10:23Z",
        "updatedAt" : "2016-11-02T18:22:56Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      },
      {
        "id" : "6bded6b6-2965-429e-ba2b-f177a6d62129",
        "parentId" : "8a1abf19-09bc-4f47-a414-fe2fd60271e5",
        "authorId" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "body" : "Done.\n",
        "createdAt" : "2016-10-27T22:13:08Z",
        "updatedAt" : "2016-11-02T18:22:56Z",
        "lastEditedBy" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "tags" : [
        ]
      }
    ],
    "commit" : "90d46c86707c9bfa7b689e14fdcbda4e562eb894",
    "line" : null,
    "diffHunk" : "@@ -1,1 +131,135 @@\t// Remove the cluster resource in the federation API server by\n\t// calling rh.Delete()\n\treturn cluster, rh.Delete(\"\", name)\n}\n"
  },
  {
    "id" : "3ba0f066-699a-4f97-87d3-168830b90d99",
    "prId" : 35494,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/35494#pullrequestreview-6515351",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b551904d-52b6-4d47-a40c-80e7a8271efd",
        "parentId" : null,
        "authorId" : null,
        "body" : "I think it's dangerous to delete the secrets by default here. If they're being used by other applications in the cluster, those will break.  I'd suggest making this opt-in (e.g. via --delete-credentials). \n",
        "createdAt" : "2016-10-27T10:14:36Z",
        "updatedAt" : "2016-11-02T18:22:56Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      },
      {
        "id" : "067d1b25-54e4-439f-aef3-c02742a58046",
        "parentId" : "b551904d-52b6-4d47-a40c-80e7a8271efd",
        "authorId" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "body" : "This secret is in the federation-system namespace. Other applications shouldn't be using it. It is like saying, we don't have control on things in the `kube-system` namespace. This is entirely maintained by the federation system in its own namespace.\n",
        "createdAt" : "2016-10-27T21:30:32Z",
        "updatedAt" : "2016-11-02T18:22:56Z",
        "lastEditedBy" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "tags" : [
        ]
      },
      {
        "id" : "ba6e38b1-6658-4679-9bb3-466a5a5fc358",
        "parentId" : "b551904d-52b6-4d47-a40c-80e7a8271efd",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "do creations and deletions in the federation server not propagate?\n",
        "createdAt" : "2016-10-28T03:53:46Z",
        "updatedAt" : "2016-11-02T18:22:56Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "5ffbe457-2520-4577-9270-450b2850a2af",
        "parentId" : "b551904d-52b6-4d47-a40c-80e7a8271efd",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "I wasn't aware we were claiming ownership of the \"federation-system\" namespace in all clusters\n",
        "createdAt" : "2016-10-28T03:54:26Z",
        "updatedAt" : "2016-11-02T18:22:56Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "7468e739-01cc-43b1-a3ea-1f0a4ceba1c5",
        "parentId" : "b551904d-52b6-4d47-a40c-80e7a8271efd",
        "authorId" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "body" : "@liggitt \n\n> do creations and deletions in the federation server not propagate?\n\nThis namespace is being created in the host cluster where federation control plane components are hosted, not in the federation itself.\n\n> I wasn't aware we were claiming ownership of the \"federation-system\" namespace in all clusters\n\nNot in all the clusters, only where the control plane is hosted.\n",
        "createdAt" : "2016-10-28T04:47:25Z",
        "updatedAt" : "2016-11-02T18:22:56Z",
        "lastEditedBy" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "tags" : [
        ]
      },
      {
        "id" : "74ab80ea-3780-4dfd-8452-91241c2b91c6",
        "parentId" : "b551904d-52b6-4d47-a40c-80e7a8271efd",
        "authorId" : null,
        "body" : "OK, fair enough.\n",
        "createdAt" : "2016-10-31T18:05:54Z",
        "updatedAt" : "2016-11-02T18:22:56Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      },
      {
        "id" : "8776a690-9631-4ea6-b9f9-91cb5e51b7a6",
        "parentId" : "b551904d-52b6-4d47-a40c-80e7a8271efd",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Re: namespace \"claiming\" and naming are API decisions and should get API review sign off.  We did kube-system without setting a policy up for N+1, and now we have a few others being proposed.  \n\nI think you're saying in this case that the namespace isn't special though?\n",
        "createdAt" : "2016-10-31T18:17:19Z",
        "updatedAt" : "2016-11-02T18:22:56Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "e36b8e89-afcd-492b-ad93-ec3b64377da0",
        "parentId" : "b551904d-52b6-4d47-a40c-80e7a8271efd",
        "authorId" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "body" : "@smarterclayton we already have `federation` namespace, but IIRC, it did not get any sign off. But I will be happy to either retroactively get a sign off for `federation` or `federation-system`. Whom/where should I ask for the sign off?\n",
        "createdAt" : "2016-10-31T20:09:49Z",
        "updatedAt" : "2016-11-02T18:22:56Z",
        "lastEditedBy" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "tags" : [
        ]
      }
    ],
    "commit" : "90d46c86707c9bfa7b689e14fdcbda4e562eb894",
    "line" : 141,
    "diffHunk" : "@@ -1,1 +139,143 @@\t\treturn err\n\t}\n\treturn clientset.Core().Secrets(namespace).Delete(name, &api.DeleteOptions{})\n}\n"
  },
  {
    "id" : "fab00ec5-01af-42b6-bf1a-c03de6cdb573",
    "prId" : 35494,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/35494#pullrequestreview-6491961",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ca306658-5e8c-43d7-9c70-52a4f581fa6d",
        "parentId" : null,
        "authorId" : null,
        "body" : "I think we already have a utility function for this in utils somewhere.  Look for IsNotFound.\n",
        "createdAt" : "2016-10-27T10:15:45Z",
        "updatedAt" : "2016-11-02T18:22:56Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      },
      {
        "id" : "ed03aefc-d11c-47ff-babb-6d6a19085214",
        "parentId" : "ca306658-5e8c-43d7-9c70-52a4f581fa6d",
        "authorId" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "body" : "It is using that utility from the `errors` package. Please see the code below. This just does `url.Error` unwrapping before calling that utility.\n",
        "createdAt" : "2016-10-27T21:34:25Z",
        "updatedAt" : "2016-11-02T18:22:56Z",
        "lastEditedBy" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "tags" : [
        ]
      },
      {
        "id" : "54ffc170-f360-4636-a4f9-c94ff7050ee1",
        "parentId" : "ca306658-5e8c-43d7-9c70-52a4f581fa6d",
        "authorId" : null,
        "body" : "ok\n",
        "createdAt" : "2016-10-31T18:06:13Z",
        "updatedAt" : "2016-11-02T18:22:56Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      }
    ],
    "commit" : "90d46c86707c9bfa7b689e14fdcbda4e562eb894",
    "line" : 144,
    "diffHunk" : "@@ -1,1 +142,146 @@}\n\nfunc isNotFound(err error) bool {\n\tstatusErr := err\n\tif urlErr, ok := err.(*url.Error); ok {"
  }
]