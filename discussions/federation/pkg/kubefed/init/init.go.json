[
  {
    "id" : "9b1eb5a2-5b87-4d73-87f1-6ea634bd4b01",
    "prId" : 46323,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/46323#pullrequestreview-40618631",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5da3c8e1-7554-4160-b2b2-908e83aa3c63",
        "parentId" : null,
        "authorId" : "8e448017-7838-493d-a424-33cada0da657",
        "body" : "This is a change in behavior from the alpha annotation, and I want to make sure you're aware and making the decision consciously: If a user runs without specifying `etcd-pv-storage-class` and their cluster doesn't have a default storage class installed this will result in the PVC not provisioning a new volume and instead waiting to bind to an existing PV, whereas the alpha annotation always provisioned a new volume.",
        "createdAt" : "2017-05-24T21:02:36Z",
        "updatedAt" : "2017-05-25T17:21:56Z",
        "lastEditedBy" : "8e448017-7838-493d-a424-33cada0da657",
        "tags" : [
        ]
      },
      {
        "id" : "c39ee63d-6513-4b00-b2f7-fc67973bbd3b",
        "parentId" : "5da3c8e1-7554-4160-b2b2-908e83aa3c63",
        "authorId" : "e36c9d4f-8037-4359-bd9a-80d5b6c08379",
        "body" : "Yes, I'm aware of that change, and I'm looking for feedback from someone on the federation side as to whether that is acceptable.  For openshift it's an essential change since support for the alpha annotation has already been removed.",
        "createdAt" : "2017-05-25T14:10:40Z",
        "updatedAt" : "2017-05-25T17:21:56Z",
        "lastEditedBy" : "e36c9d4f-8037-4359-bd9a-80d5b6c08379",
        "tags" : [
        ]
      },
      {
        "id" : "af3ef0d0-9a39-4847-8c6e-01bec5386063",
        "parentId" : "5da3c8e1-7554-4160-b2b2-908e83aa3c63",
        "authorId" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "body" : "I think it is fine. We need to get rid of the alpha annotation at some point or we will be forced to do it anyway. ",
        "createdAt" : "2017-05-26T20:59:22Z",
        "updatedAt" : "2017-05-26T20:59:25Z",
        "lastEditedBy" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "tags" : [
        ]
      }
    ],
    "commit" : "2c886e93e9d389e2db83e722a6f188be6d56828c",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +161,165 @@\tflags.StringVar(&o.etcdImage, \"etcd-image\", defaultEtcdImage, \"Image to use for etcd server.\")\n\tflags.StringVar(&o.etcdPVCapacity, \"etcd-pv-capacity\", \"10Gi\", \"Size of persistent volume claim to be used for etcd.\")\n\tflags.StringVar(&o.etcdPVStorageClass, \"etcd-pv-storage-class\", \"\", \"The storage class of the persistent volume claim used for etcd.   Must be provided if a default storage class is not enabled for the host cluster.\")\n\tflags.BoolVar(&o.etcdPersistentStorage, \"etcd-persistent-storage\", true, \"Use persistent volume for etcd. Defaults to 'true'.\")\n\tflags.BoolVar(&o.dryRun, \"dry-run\", false, \"dry run without sending commands to server.\")"
  },
  {
    "id" : "503cd3ca-a4ad-48f1-9e9f-203728a289de",
    "prId" : 46323,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/46323#pullrequestreview-40837205",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c6322ec5-e232-4373-8c38-b053e28fe09e",
        "parentId" : null,
        "authorId" : "15d1f4bd-5840-4fce-87f5-1f04ed7f10e5",
        "body" : "Better to not set this field, if none is specified by user, so that `DefaultStorageClass` is used.\r\nHere is note from the documentation in https://kubernetes.io/docs/concepts/storage/persistent-volumes/#storageclasses\r\n- Do not use `volume.beta.kubernetes.io/storage-class`: with any value including the empty string since it will prevent DefaultStorageClass admission controller from running if enabled.\r\n\r\n- In the future, we expect most clusters to have DefaultStorageClass enabled, and to have some form of storage available. However, there may not be any storage class names which work on all clusters, so continue to not set one by default. At some point, the alpha annotation will cease to have meaning, but the unset storageClass field on the PVC will have the desired effect.",
        "createdAt" : "2017-05-26T07:46:08Z",
        "updatedAt" : "2017-05-26T07:46:08Z",
        "lastEditedBy" : "15d1f4bd-5840-4fce-87f5-1f04ed7f10e5",
        "tags" : [
        ]
      },
      {
        "id" : "a7cec963-e372-4547-9bc7-af96db956a5e",
        "parentId" : "c6322ec5-e232-4373-8c38-b053e28fe09e",
        "authorId" : "e36c9d4f-8037-4359-bd9a-80d5b6c08379",
        "body" : "I'm not sure what your concern is.  Isn't assigning a field a value of nil effectively the same as not setting the field?",
        "createdAt" : "2017-05-29T21:31:46Z",
        "updatedAt" : "2017-05-29T21:31:46Z",
        "lastEditedBy" : "e36c9d4f-8037-4359-bd9a-80d5b6c08379",
        "tags" : [
        ]
      },
      {
        "id" : "b8eef39c-9f04-4fa7-ad6b-2568519488c7",
        "parentId" : "c6322ec5-e232-4373-8c38-b053e28fe09e",
        "authorId" : "15d1f4bd-5840-4fce-87f5-1f04ed7f10e5",
        "body" : "LGTM. I overlooked above if condition.",
        "createdAt" : "2017-05-30T00:53:58Z",
        "updatedAt" : "2017-05-30T00:53:58Z",
        "lastEditedBy" : "15d1f4bd-5840-4fce-87f5-1f04ed7f10e5",
        "tags" : [
        ]
      }
    ],
    "commit" : "2c886e93e9d389e2db83e722a6f188be6d56828c",
    "line" : 58,
    "diffHunk" : "@@ -1,1 +670,674 @@\t\t\t\t},\n\t\t\t},\n\t\t\tStorageClassName: storageClassName,\n\t\t},\n\t}"
  },
  {
    "id" : "447c5856-b312-42e8-b815-271c7d3b5bfb",
    "prId" : 40528,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/40528#pullrequestreview-23767573",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6b02dfca-8a55-4977-813f-8e58740f990f",
        "parentId" : null,
        "authorId" : "e36c9d4f-8037-4359-bd9a-80d5b6c08379",
        "body" : "(no action required) Why not read the file in ``Complete`` rather than stat'ing there and reading here?",
        "createdAt" : "2017-02-24T17:30:12Z",
        "updatedAt" : "2017-02-24T17:30:12Z",
        "lastEditedBy" : "e36c9d4f-8037-4359-bd9a-80d5b6c08379",
        "tags" : [
        ]
      }
    ],
    "commit" : "d3adaeafe0c0321937bc57902fa66c01953b1aed",
    "line" : 59,
    "diffHunk" : "@@ -1,1 +249,253 @@\tcmKubeconfigName := fmt.Sprintf(\"%s-kubeconfig\", cmName)\n\n\tvar dnsProviderConfigBytes []byte\n\tif i.options.dnsProviderConfig != \"\" {\n\t\tdnsProviderConfigBytes, err = ioutil.ReadFile(i.options.dnsProviderConfig)"
  },
  {
    "id" : "f53537af-aa5b-4471-836b-57e054de563c",
    "prId" : 40392,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/40392#pullrequestreview-18542697",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8320546d-b9bd-41f5-a5e6-312813af4fad",
        "parentId" : null,
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "Did you mean if !dryRun?",
        "createdAt" : "2017-01-26T01:21:24Z",
        "updatedAt" : "2017-01-30T22:31:41Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      }
    ],
    "commit" : "05a0f6490346cd542993449fa031393c2a30cb70",
    "line" : null,
    "diffHunk" : "@@ -1,1 +583,587 @@\trolebinding.Labels = componentLabel\n\n\tif dryRun {\n\t\treturn role, &rolebinding, nil\n\t}"
  },
  {
    "id" : "8509ccac-2dc9-494f-9b3c-986d6c7852b1",
    "prId" : 40392,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/40392#pullrequestreview-18543583",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "acb3eaae-adc9-4919-85dc-b91765868251",
        "parentId" : null,
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "Dont we need similar constant for federation controller manager to talk to host cluster?",
        "createdAt" : "2017-01-26T01:22:41Z",
        "updatedAt" : "2017-01-30T22:31:41Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      },
      {
        "id" : "a7a97857-b3bf-4728-b924-f11dfc0a7bff",
        "parentId" : "acb3eaae-adc9-4919-85dc-b91765868251",
        "authorId" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "body" : "That's the service account below.",
        "createdAt" : "2017-01-26T01:30:02Z",
        "updatedAt" : "2017-01-30T22:31:41Z",
        "lastEditedBy" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "tags" : [
        ]
      }
    ],
    "commit" : "05a0f6490346cd542993449fa031393c2a30cb70",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +64,68 @@\tHostClusterLocalDNSZoneName = \"cluster.local.\"\n\n\t// User name used by federation controller manager to make\n\t// calls to federation API server.\n\tControllerManagerUser = \"federation-controller-manager\""
  },
  {
    "id" : "6a8a8566-6bf9-4343-ad33-a05d56b29177",
    "prId" : 40392,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/40392#pullrequestreview-19259795",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1f8cc845-ffe5-497a-8f97-573eed7ec268",
        "parentId" : null,
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "Use the constants here?",
        "createdAt" : "2017-01-26T01:23:14Z",
        "updatedAt" : "2017-01-30T22:31:41Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      },
      {
        "id" : "1681835f-1004-4139-b247-ec716b97b9ef",
        "parentId" : "1f8cc845-ffe5-497a-8f97-573eed7ec268",
        "authorId" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "body" : "This is that constant. I intentionally made it a function-level constant as opposed to a top-level/package-level constant. This isn't supposed to be reused outside.",
        "createdAt" : "2017-01-26T01:31:21Z",
        "updatedAt" : "2017-01-30T22:31:41Z",
        "lastEditedBy" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "tags" : [
        ]
      },
      {
        "id" : "4581a941-4f7c-4bc6-b780-7405021a868e",
        "parentId" : "1f8cc845-ffe5-497a-8f97-573eed7ec268",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "nit: if it's constant, declare it as a constant.",
        "createdAt" : "2017-01-31T00:23:58Z",
        "updatedAt" : "2017-01-31T00:23:58Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "0f0cc0f7-9b39-4e94-b227-a1c875fe5c64",
        "parentId" : "1f8cc845-ffe5-497a-8f97-573eed7ec268",
        "authorId" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "body" : "Will do that in a follow up. Thanks for the approval.",
        "createdAt" : "2017-01-31T08:13:53Z",
        "updatedAt" : "2017-01-31T08:13:53Z",
        "lastEditedBy" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "tags" : [
        ]
      }
    ],
    "commit" : "05a0f6490346cd542993449fa031393c2a30cb70",
    "line" : 79,
    "diffHunk" : "@@ -1,1 +563,567 @@\nfunc createRoleBindings(clientset *client.Clientset, namespace, saName string, dryRun bool) (*rbac.Role, *rbac.RoleBinding, error) {\n\troleName := \"federation-system:federation-controller-manager\"\n\trole := &rbac.Role{\n\t\t// a role to use for bootstrapping the federation-controller-manager so it can access"
  },
  {
    "id" : "78520f54-8fe1-4af3-80f9-9291544af1fd",
    "prId" : 40392,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/40392#pullrequestreview-18543583",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1c430a4f-ee2f-4430-8501-0d18fba17212",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "just to clarify, this is for watching secrets stored in the federation server, where it gets credentials for other servers?",
        "createdAt" : "2017-01-26T05:18:41Z",
        "updatedAt" : "2017-01-30T22:31:41Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "b73f977e-787b-4915-93aa-a243d00d4567",
        "parentId" : "1c430a4f-ee2f-4430-8501-0d18fba17212",
        "authorId" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "body" : "This is for watching secrets stored in the host cluster where federation control plane components are hosted. And yes, to get get the credentials for all the clusters.",
        "createdAt" : "2017-01-26T06:42:02Z",
        "updatedAt" : "2017-01-30T22:31:41Z",
        "lastEditedBy" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "tags" : [
        ]
      }
    ],
    "commit" : "05a0f6490346cd542993449fa031393c2a30cb70",
    "line" : 81,
    "diffHunk" : "@@ -1,1 +565,569 @@\troleName := \"federation-system:federation-controller-manager\"\n\trole := &rbac.Role{\n\t\t// a role to use for bootstrapping the federation-controller-manager so it can access\n\t\t// secrets in the host cluster to access other clusters.\n\t\tObjectMeta: metav1.ObjectMeta{"
  },
  {
    "id" : "727437f3-abe9-417a-8e24-9a42a581b0d9",
    "prId" : 40392,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/40392#pullrequestreview-18543583",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "88f2c822-a464-4196-bace-50b85641351e",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "is the intent to have these permissions within a single namespace or across all namespaces? to grant this across all namespaces, this needs to be a clusterrole. if just inside `namespace`, this is fine",
        "createdAt" : "2017-01-26T05:19:21Z",
        "updatedAt" : "2017-01-30T22:31:41Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "3a11be75-5767-4bac-9cb2-6fe52fe78f7f",
        "parentId" : "88f2c822-a464-4196-bace-50b85641351e",
        "authorId" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "body" : "This RoleBinding is very specifically for the `federation-system` namespace. No other namespace access is required.",
        "createdAt" : "2017-01-26T06:43:29Z",
        "updatedAt" : "2017-01-30T22:31:41Z",
        "lastEditedBy" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "tags" : [
        ]
      }
    ],
    "commit" : "05a0f6490346cd542993449fa031393c2a30cb70",
    "line" : 80,
    "diffHunk" : "@@ -1,1 +564,568 @@func createRoleBindings(clientset *client.Clientset, namespace, saName string, dryRun bool) (*rbac.Role, *rbac.RoleBinding, error) {\n\troleName := \"federation-system:federation-controller-manager\"\n\trole := &rbac.Role{\n\t\t// a role to use for bootstrapping the federation-controller-manager so it can access\n\t\t// secrets in the host cluster to access other clusters."
  },
  {
    "id" : "649bfdc2-929d-4514-8bc2-28a61df7ec99",
    "prId" : 39646,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/39646#pullrequestreview-15888017",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f609d647-7c83-4099-badc-3bdf4c9ad5f4",
        "parentId" : null,
        "authorId" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "body" : "Same as above.",
        "createdAt" : "2017-01-10T04:47:11Z",
        "updatedAt" : "2017-01-10T10:23:05Z",
        "lastEditedBy" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "tags" : [
        ]
      },
      {
        "id" : "e6ce4293-535b-44da-b0ac-d54a1b7f6534",
        "parentId" : "f609d647-7c83-4099-badc-3bdf4c9ad5f4",
        "authorId" : "15d1f4bd-5840-4fce-87f5-1f04ed7f10e5",
        "body" : "updated the PR, just to solve the failing test cases for now. we need to migrate to etcd3 asap.",
        "createdAt" : "2017-01-10T10:38:07Z",
        "updatedAt" : "2017-01-10T10:38:07Z",
        "lastEditedBy" : "15d1f4bd-5840-4fce-87f5-1f04ed7f10e5",
        "tags" : [
        ]
      }
    ],
    "commit" : "9423e788269225792769ce4e298382b886276ff3",
    "line" : 50,
    "diffHunk" : "@@ -1,1 +469,473 @@\t\t\t\t\t\t\tImage: \"gcr.io/google_containers/etcd:3.0.14-alpha.1\",\n\t\t\t\t\t\t\tCommand: []string{\n\t\t\t\t\t\t\t\t\"/usr/local/bin/etcd\",\n\t\t\t\t\t\t\t\t\"--data-dir\",\n\t\t\t\t\t\t\t\t\"/var/etcd/data\","
  },
  {
    "id" : "f0b2ee92-9069-4fd9-bcd0-47e1631d9357",
    "prId" : 36447,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/36447#pullrequestreview-8508625",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "aeb87876-65c0-4b57-8e14-25fc8b89fa23",
        "parentId" : null,
        "authorId" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "body" : "I think it is fine to just print the same output in both dry run and real modes Doing that might actually be useful for people who validate the output of a dry run. So this if-block isn't necessary for dry run.\n",
        "createdAt" : "2016-11-09T18:08:55Z",
        "updatedAt" : "2016-11-17T19:58:39Z",
        "lastEditedBy" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "tags" : [
        ]
      },
      {
        "id" : "40722072-570c-4fac-b934-7d160e1175c7",
        "parentId" : "aeb87876-65c0-4b57-8e14-25fc8b89fa23",
        "authorId" : "cc7376b4-34cd-480b-ad10-0b4b879dde52",
        "body" : "i did check some of the kubectl commands which support dry run\nthere the output is generally same but there is an appended (dry rin) at the end (so the printed output is not really same).\nAlso in case of actual run, a load balancer IP is provisioned and that is what we print, but in case of dry run that is not the case, so even if we keep the same print the same would look incomplete (API server is running at IP: ), which seemed misleading.\nhaving said that, I can update which ever way seems best.. !\n",
        "createdAt" : "2016-11-09T19:20:22Z",
        "updatedAt" : "2016-11-17T19:58:39Z",
        "lastEditedBy" : "cc7376b4-34cd-480b-ad10-0b4b879dde52",
        "tags" : [
        ]
      },
      {
        "id" : "4634b6e9-bafa-454f-a136-042bb751bf4f",
        "parentId" : "aeb87876-65c0-4b57-8e14-25fc8b89fa23",
        "authorId" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "body" : "Alright, makes sense. Thanks for that explanation. Drop the unnecessary `else` and switch the condition order as other ones.\n",
        "createdAt" : "2016-11-09T21:29:15Z",
        "updatedAt" : "2016-11-17T19:58:39Z",
        "lastEditedBy" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "tags" : [
        ]
      },
      {
        "id" : "b94d247f-ec45-4ef1-92dd-a9b298a60f79",
        "parentId" : "aeb87876-65c0-4b57-8e14-25fc8b89fa23",
        "authorId" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "body" : "Still drop the else?\n",
        "createdAt" : "2016-11-14T23:24:43Z",
        "updatedAt" : "2016-11-17T19:58:39Z",
        "lastEditedBy" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "tags" : [
        ]
      }
    ],
    "commit" : "b21cfdcd0f5a9d10464d7a19a0a14bb365197737",
    "line" : 91,
    "diffHunk" : "@@ -1,1 +230,234 @@\n\tif !dryRun {\n\t\treturn printSuccess(cmdOut, ips, hostnames)\n\t}\n\t_, err = fmt.Fprintf(cmdOut, \"Federation control plane runs (dry run)\\n\")"
  },
  {
    "id" : "2b2f40fc-3b7e-4c2e-980e-51bb6ed5a0d6",
    "prId" : 36447,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/36447#pullrequestreview-7865768",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ac7a94e2-3f37-476b-943d-2eb41514db2c",
        "parentId" : null,
        "authorId" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "body" : "Same as above. Reverse the condition and drop else.\n",
        "createdAt" : "2016-11-09T18:17:55Z",
        "updatedAt" : "2016-11-17T19:58:39Z",
        "lastEditedBy" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "tags" : [
        ]
      }
    ],
    "commit" : "b21cfdcd0f5a9d10464d7a19a0a14bb365197737",
    "line" : null,
    "diffHunk" : "@@ -1,1 +273,277 @@\tif dryRun {\n\t\treturn svc, nil\n\t}\n\n\treturn clientset.Core().Services(namespace).Create(svc)"
  },
  {
    "id" : "1528e8b1-b521-4c49-9b74-9fca12ec92e1",
    "prId" : 36447,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/36447#pullrequestreview-7865768",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "06259b83-a911-4f4a-8854-b79160ba7658",
        "parentId" : null,
        "authorId" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "body" : "Same as above.\n",
        "createdAt" : "2016-11-09T18:18:30Z",
        "updatedAt" : "2016-11-17T19:58:39Z",
        "lastEditedBy" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "tags" : [
        ]
      },
      {
        "id" : "81759361-cc0d-4082-bc22-9a1eb0c8c501",
        "parentId" : "06259b83-a911-4f4a-8854-b79160ba7658",
        "authorId" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "body" : "Return the secret in the dry run mode like the way you return service above.\n",
        "createdAt" : "2016-11-09T18:20:09Z",
        "updatedAt" : "2016-11-17T19:58:39Z",
        "lastEditedBy" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "tags" : [
        ]
      }
    ],
    "commit" : "b21cfdcd0f5a9d10464d7a19a0a14bb365197737",
    "line" : null,
    "diffHunk" : "@@ -1,1 +354,358 @@\tif dryRun {\n\t\treturn secret, nil\n\t}\n\t// Boilerplate to create the secret in the host cluster.\n\treturn clientset.Core().Secrets(namespace).Create(secret)"
  },
  {
    "id" : "4386092b-7d1c-444c-8ba4-30b88098c598",
    "prId" : 36447,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/36447#pullrequestreview-7865768",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "aa6f15d4-0989-42ba-b77a-7f5a19b6e7b6",
        "parentId" : null,
        "authorId" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "body" : "Same as above.\n",
        "createdAt" : "2016-11-09T18:20:34Z",
        "updatedAt" : "2016-11-17T19:58:39Z",
        "lastEditedBy" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "tags" : [
        ]
      }
    ],
    "commit" : "b21cfdcd0f5a9d10464d7a19a0a14bb365197737",
    "line" : null,
    "diffHunk" : "@@ -1,1 +405,409 @@\n\tif dryRun {\n\t\treturn pvc, nil\n\t}\n"
  },
  {
    "id" : "686aba58-8da5-4e29-b6bd-320bd8b7d98f",
    "prId" : 36447,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/36447#pullrequestreview-7865768",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "25320d24-c6da-4c0c-b7a7-59aa0324b04c",
        "parentId" : null,
        "authorId" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "body" : "This can stay this way.\n",
        "createdAt" : "2016-11-09T18:21:25Z",
        "updatedAt" : "2016-11-17T19:58:39Z",
        "lastEditedBy" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "tags" : [
        ]
      }
    ],
    "commit" : "b21cfdcd0f5a9d10464d7a19a0a14bb365197737",
    "line" : 238,
    "diffHunk" : "@@ -1,1 +621,625 @@\tkubeconfig.Contexts[name] = context\n\n\tif !dryRun {\n\t\t// Write the update kubeconfig.\n\t\tif err := clientcmd.ModifyConfig(po, *kubeconfig, true); err != nil {"
  },
  {
    "id" : "11f2d1c0-720a-4d8b-ab72-d4a0208f579a",
    "prId" : 36045,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/36045#pullrequestreview-8737981",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "79ce8d94-6384-432a-a80a-bdfb4d0bb191",
        "parentId" : null,
        "authorId" : null,
        "body" : "nit: Add an example to illustrate a valid value.\n",
        "createdAt" : "2016-11-04T20:41:25Z",
        "updatedAt" : "2016-11-07T17:00:17Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      },
      {
        "id" : "9c9a00f3-0f48-41a3-9098-bc46fec7fe66",
        "parentId" : "79ce8d94-6384-432a-a80a-bdfb4d0bb191",
        "authorId" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "body" : "@quinton-hoole `defaultImage` is printed in the help text. I think that illustrates a valid value. If I were to add an example, I would just repeat that.\n",
        "createdAt" : "2016-11-16T02:04:10Z",
        "updatedAt" : "2016-11-16T02:04:15Z",
        "lastEditedBy" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "tags" : [
        ]
      }
    ],
    "commit" : "8d8eca5f2adf0e33d42c4ddc4178fc9e50145a02",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +115,119 @@\tutil.AddSubcommandFlags(cmd)\n\tcmd.Flags().String(\"dns-zone-name\", \"\", \"DNS suffix for this federation. Federated Service DNS names are published with this suffix.\")\n\tcmd.Flags().String(\"image\", defaultImage, \"Image to use for federation API server and controller manager binaries.\")\n\treturn cmd\n}"
  },
  {
    "id" : "b175b8d4-bf05-4d07-8fbb-f4b84a63b9f3",
    "prId" : 36045,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/36045#pullrequestreview-8737981",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "20a2c53a-a92a-4fc9-8037-c138cecbb28d",
        "parentId" : null,
        "authorId" : null,
        "body" : "nit: So we default to the explicit version of this build/release?  Should we not default to the latest version rather?\n",
        "createdAt" : "2016-11-04T20:42:47Z",
        "updatedAt" : "2016-11-07T17:00:17Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      },
      {
        "id" : "2941b22e-b8c3-40cc-8b13-981ad10ae3de",
        "parentId" : "20a2c53a-a92a-4fc9-8037-c138cecbb28d",
        "authorId" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "body" : "@quinton-hoole Yeah, that's the most ideal default behavior. But there is no good/stable way to automatically detect the latest version right now. There is no API or anything as such to determine the latest version on the client machines and no technique is future proof. Given that, I think this is a reasonable default.\n",
        "createdAt" : "2016-11-16T02:03:10Z",
        "updatedAt" : "2016-11-16T02:04:15Z",
        "lastEditedBy" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "tags" : [
        ]
      }
    ],
    "commit" : "8d8eca5f2adf0e33d42c4ddc4178fc9e50145a02",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +111,115 @@\t}\n\n\tdefaultImage := fmt.Sprintf(\"%s:%s\", hyperkubeImageName, version.Get())\n\n\tutil.AddSubcommandFlags(cmd)"
  },
  {
    "id" : "dfd53486-bd01-4fd3-80c1-20202d7d6669",
    "prId" : 35594,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/35594#pullrequestreview-6528369",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a6af1f67-2cf6-46bb-8a16-460fc93410fd",
        "parentId" : null,
        "authorId" : null,
        "body" : "Actually I'm not sure how valuable this is, and it might make user support more difficult if we don't know what the names of their API objects are.  Perhaps if users want to deploy such non-standard deployments, they should do so without our official tools?  Just a thought.\n",
        "createdAt" : "2016-10-27T10:36:18Z",
        "updatedAt" : "2016-11-02T21:19:47Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      },
      {
        "id" : "1087391a-5d9a-43bf-9916-03136abf2cba",
        "parentId" : "a6af1f67-2cf6-46bb-8a16-460fc93410fd",
        "authorId" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "body" : "I agree that providing customizability to API object names is debatable. But \"make user support more difficult\" is not a compelling argument. We should sufficiently empower the user where we can. \n",
        "createdAt" : "2016-10-28T03:26:54Z",
        "updatedAt" : "2016-11-02T21:19:47Z",
        "lastEditedBy" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "tags" : [
        ]
      },
      {
        "id" : "9b407b3d-d7f4-489d-a3c0-ee02a61b447e",
        "parentId" : "a6af1f67-2cf6-46bb-8a16-460fc93410fd",
        "authorId" : null,
        "body" : "ok, you can provide the user support :-)  I still think that the value to the user of allowing users this level of customization would not warrant the additional support complexity.\n",
        "createdAt" : "2016-10-31T21:23:06Z",
        "updatedAt" : "2016-11-02T21:19:47Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      }
    ],
    "commit" : "4a9377027df6a0c55b190daa5b7245ac6f33802f",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +17,21 @@// TODO(madhusdancs):\n// 1. Add a dry-run support.\n// 2. Make all the API object names customizable.\n//    Ex: federation-apiserver, federation-controller-manager, etc.\n// 3. Make image name and tag customizable."
  },
  {
    "id" : "64b4119e-aef4-4a1d-8b74-4c3ee0ba4661",
    "prId" : 35594,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/35594#pullrequestreview-6528492",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "51d047b1-6378-4dbe-ae41-85064f55eebf",
        "parentId" : null,
        "authorId" : null,
        "body" : "I wonder if 'Deploy' isn't a better verb here (and in other related places, like the command name)?  'Initialize' to me implies some sort of initial configuration or reset of an existing federation. http://www.dictionary.com/browse/initialize  \n",
        "createdAt" : "2016-10-27T10:41:43Z",
        "updatedAt" : "2016-11-02T21:19:47Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      },
      {
        "id" : "8b7a4a44-37e5-4d70-974b-ab1d2dc83874",
        "parentId" : "51d047b1-6378-4dbe-ae41-85064f55eebf",
        "authorId" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "body" : "> 'Initialize' to me implies some sort of initial configuration\n\nSure and this is.\n\n>  or reset of an existing federation. http://www.dictionary.com/browse/initialize\n\nI don't know where that interpretation is coming from. I haven't heard of that one before and neither is it indicated in that link.\n\nAlso, let's be consistent with other `kube` tools. `kubeadm` also calls control plane deployment init.\n",
        "createdAt" : "2016-10-28T03:30:32Z",
        "updatedAt" : "2016-11-02T21:19:47Z",
        "lastEditedBy" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "tags" : [
        ]
      },
      {
        "id" : "b8b81bfd-f246-4105-ac55-93fad0aba59f",
        "parentId" : "51d047b1-6378-4dbe-ae41-85064f55eebf",
        "authorId" : null,
        "body" : "ok\n",
        "createdAt" : "2016-10-31T21:23:50Z",
        "updatedAt" : "2016-11-02T21:19:47Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      }
    ],
    "commit" : "4a9377027df6a0c55b190daa5b7245ac6f33802f",
    "line" : 62,
    "diffHunk" : "@@ -1,1 +60,64 @@var (\n\tinit_long = templates.LongDesc(`\n\t\tInitialize a federation control plane.\n\n        Federation control plane is hosted inside a Kubernetes"
  },
  {
    "id" : "c6df95eb-fa4a-4609-844c-4121013f4b21",
    "prId" : 35594,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/35594#pullrequestreview-6182039",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9f6e85ac-63b0-4b14-8b01-92e04a970dc9",
        "parentId" : null,
        "authorId" : null,
        "body" : "I think you need to explain the difference between, and/or make the nomenclature consistent between 'DNSDomain' above, and 'dns-zone-name' here.  I gather that the former is the cluster-local DNS domain, while the latter is the Federation DNS domain?  If so, best rename appropriately to avoid the ambiguity.\n",
        "createdAt" : "2016-10-27T10:48:45Z",
        "updatedAt" : "2016-11-02T21:19:47Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      },
      {
        "id" : "04255abe-a1e4-47b0-a7f3-1974ac7cec87",
        "parentId" : "9f6e85ac-63b0-4b14-8b01-92e04a970dc9",
        "authorId" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "body" : "Done.\n\nThanks for catching that!\n",
        "createdAt" : "2016-10-28T03:43:52Z",
        "updatedAt" : "2016-11-02T21:19:47Z",
        "lastEditedBy" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "tags" : [
        ]
      }
    ],
    "commit" : "4a9377027df6a0c55b190daa5b7245ac6f33802f",
    "line" : 110,
    "diffHunk" : "@@ -1,1 +108,112 @@\n\tutil.AddSubcommandFlags(cmd)\n\tcmd.Flags().String(\"dns-zone-name\", \"\", \"DNS suffix for this federation. Federated Service DNS names are published with this suffix.\")\n\treturn cmd\n}"
  }
]