[
  {
    "id" : "9a194d0b-1956-461b-89f5-dd4108170a3a",
    "prId" : 44626,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/44626#pullrequestreview-33521800",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f6dca7e8-ecfb-4031-a820-3720d3bc3bca",
        "parentId" : null,
        "authorId" : "4cd012b4-8579-4944-9987-1924278982f5",
        "body" : "L75 -- so with ip==nil implying CNAME, I guess nothing like TXT records in coredns? @shashidharatd ?",
        "createdAt" : "2017-04-18T23:41:54Z",
        "updatedAt" : "2017-05-11T07:47:26Z",
        "lastEditedBy" : "4cd012b4-8579-4944-9987-1924278982f5",
        "tags" : [
        ]
      },
      {
        "id" : "97c4b383-f034-4e8f-965e-f56353e88e7a",
        "parentId" : "f6dca7e8-ecfb-4031-a820-3720d3bc3bca",
        "authorId" : "15d1f4bd-5840-4fce-87f5-1f04ed7f10e5",
        "body" : "CoreDNS does support TXT record.\r\nSince we do not write/read any other records other than A and CNAME record, it should be fine for federation. We need to make it more generic further as DNS provider will be used by many others apart from federation.",
        "createdAt" : "2017-04-19T04:51:04Z",
        "updatedAt" : "2017-05-11T07:47:26Z",
        "lastEditedBy" : "15d1f4bd-5840-4fce-87f5-1f04ed7f10e5",
        "tags" : [
        ]
      },
      {
        "id" : "0f03ad9e-2cc2-47a8-933e-2ebf58548bd6",
        "parentId" : "f6dca7e8-ecfb-4031-a820-3720d3bc3bca",
        "authorId" : "4cd012b4-8579-4944-9987-1924278982f5",
        "body" : "This may not always be true. Either way, the code should be fixed to handle the rrset type correctly.",
        "createdAt" : "2017-04-19T04:58:45Z",
        "updatedAt" : "2017-05-11T07:47:26Z",
        "lastEditedBy" : "4cd012b4-8579-4944-9987-1924278982f5",
        "tags" : [
        ]
      },
      {
        "id" : "751d591e-b720-4ab6-8753-c930bafac0c8",
        "parentId" : "f6dca7e8-ecfb-4031-a820-3720d3bc3bca",
        "authorId" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "body" : "I wonder if there is a better way to determine the record type than parsing the `Host` field for IP address. I mean a more generic way to determine the type than being able to just distinguish between CNAME and A records.\r\n\r\n@miekg any suggestions?\r\n\r\nFederation is not the only consumer of this library (dnsprovider). kops uses this library today. CoreDNS implementation in this library is probably not used anywhere outside federation right now, but we should still aim to make this type detection code generic. Who knows what use cases come up?",
        "createdAt" : "2017-04-19T05:10:05Z",
        "updatedAt" : "2017-05-11T07:47:26Z",
        "lastEditedBy" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "tags" : [
        ]
      },
      {
        "id" : "f3d22938-bfe4-4706-8619-99f75e10fccf",
        "parentId" : "f6dca7e8-ecfb-4031-a820-3720d3bc3bca",
        "authorId" : "e9598cb6-e0ee-4fa5-a2f1-a85c9a735f7a",
        "body" : "In the [original service definition](https://github.com/coredns/coredns/blob/master/middleware/etcd/msg/service.go) there is only 1 Host field that can either be a name or an address (A or AAAA - please don't exclude AAAA from this code). So the only way to know what you got from etcd is to parse this field. TXT/MX have extra fields. \r\n\r\nBtw: this is adding support for etcd3? If so I would like to have support for that in upstream as well....",
        "createdAt" : "2017-04-19T06:27:37Z",
        "updatedAt" : "2017-05-11T07:47:26Z",
        "lastEditedBy" : "e9598cb6-e0ee-4fa5-a2f1-a85c9a735f7a",
        "tags" : [
        ]
      },
      {
        "id" : "97d30064-19ec-4237-a98a-d736d2db3152",
        "parentId" : "f6dca7e8-ecfb-4031-a820-3720d3bc3bca",
        "authorId" : "15d1f4bd-5840-4fce-87f5-1f04ed7f10e5",
        "body" : "@miekg, we are still using etcd2 client for this library (same as CoreDNS). we would plan and upgrade to use etcd3 client ASAP. I think CoreDNS should be first upgraded to use etcd3 client then followed by this library.\r\n@csbell, i would add detecting other types from etcd records in a follow-up pr.",
        "createdAt" : "2017-04-19T07:12:01Z",
        "updatedAt" : "2017-05-11T07:47:26Z",
        "lastEditedBy" : "15d1f4bd-5840-4fce-87f5-1f04ed7f10e5",
        "tags" : [
        ]
      },
      {
        "id" : "1677600c-fb99-44cb-9876-de0eb57a332c",
        "parentId" : "f6dca7e8-ecfb-4031-a820-3720d3bc3bca",
        "authorId" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "body" : "@miekg thanks for confirming that. Does it make sense to add a helper to `middleware/etc/msg` package to determine the record type instead of having to re-implement it in all the clients?\r\n\r\n@shashidharatd thanks! Please let me know when you add it.",
        "createdAt" : "2017-04-19T14:50:45Z",
        "updatedAt" : "2017-05-11T07:47:26Z",
        "lastEditedBy" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "tags" : [
        ]
      }
    ],
    "commit" : "4bde13ac62479537f73f2bd14f142b14b4e18b62",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +75,79 @@\t\tcase ip.To4() != nil:\n\t\t\trrset.rrsType = rrstype.A\n\t\t}\n\t\trrset.rrdatas = append(rrset.rrdatas, service.Host)\n\t\trrset.ttl = int64(service.TTL)"
  }
]