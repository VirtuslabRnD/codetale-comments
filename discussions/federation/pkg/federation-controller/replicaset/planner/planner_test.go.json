[
  {
    "id" : "9bddf482-5800-4bc6-8402-1bec2e379f02",
    "prId" : 30983,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3ea02b89-efbf-423a-81da-5b5c05632618",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Does EqualValues work correctly for maps? I would really suggest using reflect,DeepEqual as everywhere in the codebase.\n",
        "createdAt" : "2016-08-19T09:22:25Z",
        "updatedAt" : "2016-08-19T14:14:49Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "e4db56be-f099-4a65-add3-8e11ab411367",
        "parentId" : "3ea02b89-efbf-423a-81da-5b5c05632618",
        "authorId" : "ab8bc7c5-233d-47c1-b03a-767fb930c021",
        "body" : "It works. Test passed when the code was ok and failed when it was wrong.\n",
        "createdAt" : "2016-08-19T09:41:42Z",
        "updatedAt" : "2016-08-19T14:14:49Z",
        "lastEditedBy" : "ab8bc7c5-233d-47c1-b03a-767fb930c021",
        "tags" : [
        ]
      }
    ],
    "commit" : "8dfdc5b612967fdf42b932440cc100accb259ead",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +41,45 @@\tplan, overflow := planer.Plan(replicas, clusters, existing, map[string]int64{})\n\tassert.Equal(t, 0, len(overflow))\n\tassert.EqualValues(t, expected, plan)\n}\n"
  },
  {
    "id" : "de295bd6-acd4-4b17-93bb-f81d6f68437a",
    "prId" : 30983,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ea81e030-5d37-4b28-a27a-91e862f3bac3",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Same here and below.\n",
        "createdAt" : "2016-08-19T09:22:33Z",
        "updatedAt" : "2016-08-19T14:14:49Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "8dfdc5b612967fdf42b932440cc100accb259ead",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +54,58 @@\t})\n\tplan, overflow := planer.Plan(replicas, clusters, existing, capacity)\n\tassert.EqualValues(t, expected, plan)\n\tassert.Equal(t, expectedOverflow, overflow)\n}"
  }
]