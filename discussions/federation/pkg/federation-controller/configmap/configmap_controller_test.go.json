[
  {
    "id" : "3bf5f40b-b9e9-4a8a-917b-100a2c437c42",
    "prId" : 43229,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/43229#pullrequestreview-27499030",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7a5baa8e-05cc-4eff-9659-1685f9faad3e",
        "parentId" : null,
        "authorId" : "b8171d77-1357-47e5-acaf-22ea2fb1d529",
        "body" : "This fix irks me, because it seems like the occasional double delivery should not be happening.\r\n\r\nThat said, it seems not worth the effort to fix this for real in light of upcoming work to refactor the federation controllers to use a common framework.",
        "createdAt" : "2017-03-16T17:35:43Z",
        "updatedAt" : "2017-03-16T19:55:40Z",
        "lastEditedBy" : "b8171d77-1357-47e5-acaf-22ea2fb1d529",
        "tags" : [
        ]
      },
      {
        "id" : "372e03c2-5291-4b3a-bf48-5c2b5f0147cb",
        "parentId" : "7a5baa8e-05cc-4eff-9659-1685f9faad3e",
        "authorId" : "ab8bc7c5-233d-47c1-b03a-767fb930c021",
        "body" : "It happens because we are running controller with greatly reduced delay time. It is possible that the change doesn't get through the async mock transport layer before the config map is  processed again. We could probably rethink the mocks but double delivery in this type of integration test with reduced delays will still be possible.",
        "createdAt" : "2017-03-16T19:22:19Z",
        "updatedAt" : "2017-03-16T19:55:40Z",
        "lastEditedBy" : "ab8bc7c5-233d-47c1-b03a-767fb930c021",
        "tags" : [
        ]
      },
      {
        "id" : "ef17d522-6903-4090-bec9-a1b2a3f85002",
        "parentId" : "7a5baa8e-05cc-4eff-9659-1685f9faad3e",
        "authorId" : "b8171d77-1357-47e5-acaf-22ea2fb1d529",
        "body" : "That's reasonable. It still seems like this is an issue that could happen in the real world, but I suppose that's OK because it's still eventually consistent.",
        "createdAt" : "2017-03-17T01:50:45Z",
        "updatedAt" : "2017-03-17T01:50:45Z",
        "lastEditedBy" : "b8171d77-1357-47e5-acaf-22ea2fb1d529",
        "tags" : [
        ]
      }
    ],
    "commit" : "77024470f31612d644c7f4c3845bb142f15e695d",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +144,148 @@\n\tconfigmapWatch.Modify(configmap1)\n\tfor {\n\t\tupdatedConfigMap := GetConfigMapFromChan(cluster1UpdateChan)\n\t\tassert.NotNil(t, updatedConfigMap)"
  },
  {
    "id" : "9761e13a-9b01-4477-acb1-a623eab00f5a",
    "prId" : 35635,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/35635#pullrequestreview-6466081",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a615082c-45d5-4e00-9a12-9e52e2d848c7",
        "parentId" : null,
        "authorId" : null,
        "body" : "nit: Probably good to add a test for a cluster that exists but is offline when the update is performed.  Check that it is not updated while offline (to test that the test is actually working), and that it does update once the cluster comes online again.\n",
        "createdAt" : "2016-10-31T16:54:49Z",
        "updatedAt" : "2016-11-04T15:45:17Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      }
    ],
    "commit" : "d010d1d897ea3d7964647a7fc1062348ed60d7eb",
    "line" : null,
    "diffHunk" : "@@ -1,1 +126,130 @@\tassert.True(t, util.ConfigMapEquivalent(configmap1, updatedConfigMap2))\n\n\t// Test add cluster\n\tclusterWatch.Add(cluster2)\n\tcreatedConfigMap2 := GetConfigMapFromChan(cluster2CreateChan)"
  }
]