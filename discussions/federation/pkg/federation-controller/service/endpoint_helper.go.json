[
  {
    "id" : "7c1df429-0fda-4612-beba-9ed878e70b91",
    "prId" : 41927,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/41927#pullrequestreview-23513966",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "58de551c-bdbf-452c-84aa-b3c97b5ae136",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "this case used to return",
        "createdAt" : "2017-02-23T13:34:09Z",
        "updatedAt" : "2017-02-23T18:56:59Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "801dc76b-2115-4500-8b74-98b7fdf13da4",
        "parentId" : "58de551c-bdbf-452c-84aa-b3c97b5ae136",
        "authorId" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "body" : "@deads2k fixed, ptal",
        "createdAt" : "2017-02-23T16:04:33Z",
        "updatedAt" : "2017-02-23T18:56:59Z",
        "lastEditedBy" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "tags" : [
        ]
      }
    ],
    "commit" : "a3a2246f734cad04656a396fc1f0d3ba4b47dacc",
    "line" : 44,
    "diffHunk" : "@@ -1,1 +96,100 @@\tcase err != nil:\n\t\tglog.Errorf(\"Did not successfully get %v from store: %v, will retry later\", key, err)\n\t\tclusterCache.endpointQueue.Add(key)\n\t\treturn err\n\tdefault:"
  },
  {
    "id" : "e16eac6c-be1a-4821-a6cf-0b0974fdca27",
    "prId" : 41927,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/41927#pullrequestreview-23523828",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c5861462-e88e-41be-91d6-752ac5b2f8b1",
        "parentId" : null,
        "authorId" : "e36c9d4f-8037-4359-bd9a-80d5b6c08379",
        "body" : "(no action required) I don't think returning an error from this function makes any sense. The only thing the caller does is log it at Info level, and it's already logged at Error level.",
        "createdAt" : "2017-02-23T16:40:04Z",
        "updatedAt" : "2017-02-23T18:56:59Z",
        "lastEditedBy" : "e36c9d4f-8037-4359-bd9a-80d5b6c08379",
        "tags" : [
        ]
      }
    ],
    "commit" : "a3a2246f734cad04656a396fc1f0d3ba4b47dacc",
    "line" : 45,
    "diffHunk" : "@@ -1,1 +97,101 @@\t\tglog.Errorf(\"Did not successfully get %v from store: %v, will retry later\", key, err)\n\t\tclusterCache.endpointQueue.Add(key)\n\t\treturn err\n\tdefault:\n\t\tglog.V(4).Infof(\"Found endpoint for federation service %s/%s from cluster %s\", endpoint.Namespace, endpoint.Name, clusterName)"
  },
  {
    "id" : "780caeac-a997-4b94-9dea-1a5c26ba777d",
    "prId" : 41927,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/41927#pullrequestreview-23758694",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "094fd6c1-9f9c-4323-afd2-334cbed6d652",
        "parentId" : null,
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "util.HandleError.",
        "createdAt" : "2017-02-24T16:40:11Z",
        "updatedAt" : "2017-02-24T16:40:11Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "e6411618-cba0-4d2d-9395-b0ee5dffe93b",
        "parentId" : "094fd6c1-9f9c-4323-afd2-334cbed6d652",
        "authorId" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "body" : "That would require sweeping through the entire package and doing a find/replace. I opted not to do that here and would prefer to do it in a follow up if that's ok?",
        "createdAt" : "2017-02-24T16:42:27Z",
        "updatedAt" : "2017-02-24T16:42:27Z",
        "lastEditedBy" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "tags" : [
        ]
      },
      {
        "id" : "e53c71dd-1fe5-4aff-b960-a6c0ff1ed2f7",
        "parentId" : "094fd6c1-9f9c-4323-afd2-334cbed6d652",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "You added new code?",
        "createdAt" : "2017-02-24T16:44:42Z",
        "updatedAt" : "2017-02-24T16:44:42Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "e5fb0dff-8de8-45e1-a4e1-0547769e3778",
        "parentId" : "094fd6c1-9f9c-4323-afd2-334cbed6d652",
        "authorId" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "body" : "\"ish\". Before, it just did `clusterCache.endpointStore.GetByKey` and if that errored, it did the `glog.Errorf` in question. Now, it's a 2-parter: `cache.SplitMetaNamespaceKey` followed by `clusterCache.endpointStore.Endpoints(namespace).Get(name)`, both of which could error.",
        "createdAt" : "2017-02-24T16:49:55Z",
        "updatedAt" : "2017-02-24T16:49:55Z",
        "lastEditedBy" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "tags" : [
        ]
      }
    ],
    "commit" : "a3a2246f734cad04656a396fc1f0d3ba4b47dacc",
    "line" : 43,
    "diffHunk" : "@@ -1,1 +95,99 @@\t\terr = cc.processEndpointDeletion(cachedService, clusterName, serviceController)\n\tcase err != nil:\n\t\tglog.Errorf(\"Did not successfully get %v from store: %v, will retry later\", key, err)\n\t\tclusterCache.endpointQueue.Add(key)\n\t\treturn err"
  },
  {
    "id" : "d89d444c-94c9-4431-a4c8-a1df6bd4631d",
    "prId" : 26034,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "82861e37-81e8-417d-9fcf-55403a85feae",
        "parentId" : null,
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "should this be cachedEndpoint, ok := endpointCache.get(key)?\n",
        "createdAt" : "2016-05-26T22:50:35Z",
        "updatedAt" : "2016-05-28T16:25:20Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      },
      {
        "id" : "420cb3c7-88cc-4170-a900-b5b6e6848c9c",
        "parentId" : "82861e37-81e8-417d-9fcf-55403a85feae",
        "authorId" : "ee3c1908-4390-4e95-844f-fb1e0ab18e67",
        "body" : "Here we check if the service cache exists, as the watcher catches all endpoints from clusters, if the endpoint is created by k8s not federation, there will no serviceCache, and we should simply skip that.\nserviceCache->fedServiceMap:[clustername]*cachedService->endpointMap[string]int\n",
        "createdAt" : "2016-05-27T02:00:12Z",
        "updatedAt" : "2016-05-28T16:25:20Z",
        "lastEditedBy" : "ee3c1908-4390-4e95-844f-fb1e0ab18e67",
        "tags" : [
        ]
      }
    ],
    "commit" : "6133db345f010e121e9b369be3d45cceee5a9679",
    "line" : 58,
    "diffHunk" : "@@ -1,1 +56,60 @@// key is the namespaced name of endpoint\nfunc (cc *clusterClientCache) syncEndpoint(key, clusterName string, clusterCache *clusterCache, serviceCache *serviceCache, fedClient federationclientset.Interface) error {\n\tcachedService, ok := serviceCache.get(key)\n\tif !ok {\n\t\t// here we filtered all non-federation services"
  },
  {
    "id" : "5ca55d61-3e00-4db4-b49f-95fc58a53518",
    "prId" : 26034,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "99459ec0-f2c1-4e15-b909-c47ff4bf53ab",
        "parentId" : null,
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "Make this else.\n",
        "createdAt" : "2016-05-26T22:50:38Z",
        "updatedAt" : "2016-05-28T16:25:20Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      }
    ],
    "commit" : "6133db345f010e121e9b369be3d45cceee5a9679",
    "line" : null,
    "diffHunk" : "@@ -1,1 +67,71 @@\t\treturn err\n\t}\n\tif exists {\n\t\tendpoint, ok := endpointInterface.(*api.Endpoints)\n\t\tif ok {"
  },
  {
    "id" : "fd8af23b-40ad-4bd1-9aa4-abbdc4372754",
    "prId" : 25991,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "35187615-f7d2-4f30-8145-d15069572f70",
        "parentId" : null,
        "authorId" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "body" : "Combine the two lines.\n",
        "createdAt" : "2016-05-31T19:47:19Z",
        "updatedAt" : "2016-06-01T23:24:23Z",
        "lastEditedBy" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "tags" : [
        ]
      },
      {
        "id" : "beaf4d5e-339d-4b66-a2e8-c453a33ee28a",
        "parentId" : "35187615-f7d2-4f30-8145-d15069572f70",
        "authorId" : null,
        "body" : "Agreed, will do, and for all subsequent cases.\n",
        "createdAt" : "2016-05-31T20:23:13Z",
        "updatedAt" : "2016-06-01T23:24:23Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      },
      {
        "id" : "80c89f5c-5e23-495c-b25b-9e79e859ac94",
        "parentId" : "35187615-f7d2-4f30-8145-d15069572f70",
        "authorId" : null,
        "body" : "Done.\n",
        "createdAt" : "2016-05-31T23:40:41Z",
        "updatedAt" : "2016-06-01T23:24:23Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      }
    ],
    "commit" : "65e1fecab5dc8a1546207a95ef352e10c3a045d7",
    "line" : null,
    "diffHunk" : "@@ -1,1 +136,140 @@\t\t\tfor i := 0; i < clientRetryCount; i++ {\n\t\t\t\ttime.Sleep(cachedService.nextDNSUpdateDelay())\n\t\t\t\terr := serviceController.ensureDnsRecords(clusterName, cachedService)\n\t\t\t\tif err == nil {\n\t\t\t\t\treturn nil"
  }
]