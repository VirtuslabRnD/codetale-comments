[
  {
    "id" : "868bdff2-0fcc-4208-953b-3f7e249d2d22",
    "prId" : 30126,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "35947c48-1ffc-4db5-adb6-6a1d707e459d",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "That logic is not really great. Basically if you have 100 of long operations and timeout expires after the first one, in the background you will still do all of them. That said it's a potential to fill the system with work that noone actually expects to be done :)\nThe situation is even worse, if those handler function can interfere with each other...\n",
        "createdAt" : "2016-08-05T10:38:49Z",
        "updatedAt" : "2016-08-09T13:39:45Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "a845a963-4a71-461b-873b-438d2c020f20",
        "parentId" : "35947c48-1ffc-4db5-adb6-6a1d707e459d",
        "authorId" : "ab8bc7c5-233d-47c1-b03a-767fb930c021",
        "body" : "Well you apparently got this logic wrong. We fire all operations on separate goroutines. So either none of the running is timed out or all of the still running ops is timed out. The client doesn't provide any convenient way to stop a running operation so there is no stop channel passed. \n",
        "createdAt" : "2016-08-05T13:13:06Z",
        "updatedAt" : "2016-08-09T13:39:45Z",
        "lastEditedBy" : "ab8bc7c5-233d-47c1-b03a-767fb930c021",
        "tags" : [
        ]
      },
      {
        "id" : "d41b2e69-0f53-4520-bf57-bea1d8ee35e6",
        "parentId" : "35947c48-1ffc-4db5-adb6-6a1d707e459d",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Yes - sorry, I misunderstood it while reading it for the first time.\n\nAnyway, you argument that there isn't any convenient way to stop a running operation is an argument for removing \"timeout\" from the interface of this method, since it doesn't stop any operations, and it will be misleading to the user.\n",
        "createdAt" : "2016-08-09T07:46:38Z",
        "updatedAt" : "2016-08-09T13:39:45Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "bc99cff0-b564-4adf-98c4-08461135ed93",
        "parentId" : "35947c48-1ffc-4db5-adb6-6a1d707e459d",
        "authorId" : "ab8bc7c5-233d-47c1-b03a-767fb930c021",
        "body" : "Added more documentation.\n",
        "createdAt" : "2016-08-09T13:40:13Z",
        "updatedAt" : "2016-08-09T13:40:13Z",
        "lastEditedBy" : "ab8bc7c5-233d-47c1-b03a-767fb930c021",
        "tags" : [
        ]
      }
    ],
    "commit" : "d836fd523fcaa945de1ac4f4c9290d0f41c1227f",
    "line" : 112,
    "diffHunk" : "@@ -1,1 +110,114 @@\t\tcase <-time.After(start.Add(timeout).Sub(now)):\n\t\t\treturn fmt.Errorf(\"failed to finish all operations in %v\", timeout)\n\t\t}\n\t}\n\t// All operations finished in time."
  },
  {
    "id" : "ca89af54-abfe-4c37-aa3e-26b8629ee2d8",
    "prId" : 30126,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0a6c3fea-6036-456e-8d7f-c7620fe8bdf4",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Why do you need this if - you have this \"time.After\" below anyway.\n",
        "createdAt" : "2016-08-05T13:34:58Z",
        "updatedAt" : "2016-08-09T13:39:45Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "a2b44d01-5792-499c-97fb-0efb845ed088",
        "parentId" : "0a6c3fea-6036-456e-8d7f-c7620fe8bdf4",
        "authorId" : "ab8bc7c5-233d-47c1-b03a-767fb930c021",
        "body" : "What if we are already past the timeout. The behavior of what after does with negative args is not documented.\n",
        "createdAt" : "2016-08-05T13:51:02Z",
        "updatedAt" : "2016-08-09T13:39:45Z",
        "lastEditedBy" : "ab8bc7c5-233d-47c1-b03a-767fb930c021",
        "tags" : [
        ]
      },
      {
        "id" : "9ad3f765-94cd-46b3-8a01-844793c05bd6",
        "parentId" : "0a6c3fea-6036-456e-8d7f-c7620fe8bdf4",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "You can always have a race - here it can still be before timeout, but in the select before it can be after. So that doesn't protect you from anything.\n",
        "createdAt" : "2016-08-09T07:45:08Z",
        "updatedAt" : "2016-08-09T13:39:45Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "8da34899-6071-49bc-964f-e875007af4d4",
        "parentId" : "0a6c3fea-6036-456e-8d7f-c7620fe8bdf4",
        "authorId" : "ab8bc7c5-233d-47c1-b03a-767fb930c021",
        "body" : "In select I'm calculating the delay agains now that is catched only once. So there is no race.\n",
        "createdAt" : "2016-08-09T08:51:05Z",
        "updatedAt" : "2016-08-09T13:39:45Z",
        "lastEditedBy" : "ab8bc7c5-233d-47c1-b03a-767fb930c021",
        "tags" : [
        ]
      },
      {
        "id" : "fc4b8474-8e56-4b10-a472-c90cf7746644",
        "parentId" : "0a6c3fea-6036-456e-8d7f-c7620fe8bdf4",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Aah ok - you're right.\n",
        "createdAt" : "2016-08-09T13:34:19Z",
        "updatedAt" : "2016-08-09T13:39:45Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "d836fd523fcaa945de1ac4f4c9290d0f41c1227f",
    "line" : 102,
    "diffHunk" : "@@ -1,1 +100,104 @@\tfor i := 0; i < len(ops); i++ {\n\t\tnow := time.Now()\n\t\tif !now.Before(start.Add(timeout)) {\n\t\t\treturn fmt.Errorf(\"failed to finish all operations in %v\", timeout)\n\t\t}"
  },
  {
    "id" : "9bf27d0e-4d97-4761-9195-26b3c9c5bb4f",
    "prId" : 30126,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "61d5ec33-b04e-493b-8283-ee8997467beb",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "I'm wondering why do you need this timeout here (since you are not terminating running go-routines anyway).\n\nI think that if someone wants a timeout (in the semantic you are guaranteeing here) she handle it herself, e.g.:\n\n```\nerrChan := make(chan error, 1)\ngo func() { errChan <- fu.Update(...) }\nselect {\n  <-errChan:\n  <-timeout\n}\n```\n\nHaving timeout here is only misleading.\n",
        "createdAt" : "2016-08-05T13:40:18Z",
        "updatedAt" : "2016-08-09T13:39:45Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "0e3c2d00-a7ee-4dfd-9db9-4236e57ee2cf",
        "parentId" : "61d5ec33-b04e-493b-8283-ee8997467beb",
        "authorId" : "ab8bc7c5-233d-47c1-b03a-767fb930c021",
        "body" : "Added doc.\n",
        "createdAt" : "2016-08-09T13:50:26Z",
        "updatedAt" : "2016-08-09T13:50:26Z",
        "lastEditedBy" : "ab8bc7c5-233d-47c1-b03a-767fb930c021",
        "tags" : [
        ]
      }
    ],
    "commit" : "d836fd523fcaa945de1ac4f4c9290d0f41c1227f",
    "line" : 71,
    "diffHunk" : "@@ -1,1 +69,73 @@}\n\nfunc (fu *federatedUpdaterImpl) Update(ops []FederatedOperation, timeout time.Duration) error {\n\tdone := make(chan error, len(ops))\n\tfor _, op := range ops {"
  },
  {
    "id" : "fe4c616e-bdc9-4982-8533-e8cecae25001",
    "prId" : 30126,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "29c0247c-aad1-49ff-9ab9-f69e1ddaf63a",
        "parentId" : null,
        "authorId" : "a179bbc5-3a91-4905-bad9-4458ac257dba",
        "body" : "Although we decided add `ClusterReference` into `ObjectMeta`, it is however mainly for federation-apiserver to be able to work as the single endpoint. This data will not be saved in etcd, federation-apiserver fill this field when it reads from the k8s cluster and clear it when it writes to the k8s cluster. In my opinion, the k8s cluster doesn't need to be aware of it. This also makes it possible to add an older version (<=1.3) of k8s to the federation.\nI would prefer adding the `ClusterName` field (empty stands for federation) to FederatedOperation instead.\nBesides, consider there might be data other than just the cluster name added to ClusterReference in the future, it means controllers would have to construct this reference for the objects it want to update which should be the job of federation-apiserver\n",
        "createdAt" : "2016-08-13T00:28:48Z",
        "updatedAt" : "2016-08-13T00:28:48Z",
        "lastEditedBy" : "a179bbc5-3a91-4905-bad9-4458ac257dba",
        "tags" : [
        ]
      },
      {
        "id" : "5dbf39f7-9d55-4c98-8f08-b31080609be3",
        "parentId" : "29c0247c-aad1-49ff-9ab9-f69e1ddaf63a",
        "authorId" : "ab8bc7c5-233d-47c1-b03a-767fb930c021",
        "body" : "I think it will be also handy for federated clientset to actually populate/remove this as well. I see little point in having a field that is populated only on special occasions. Sure, we can add this information as a separate field in federatedoperation and elsewhere but why? \n",
        "createdAt" : "2016-08-13T00:44:08Z",
        "updatedAt" : "2016-08-13T00:45:59Z",
        "lastEditedBy" : "ab8bc7c5-233d-47c1-b03a-767fb930c021",
        "tags" : [
        ]
      },
      {
        "id" : "fef6f986-df34-42d3-9529-a517c8de718f",
        "parentId" : "29c0247c-aad1-49ff-9ab9-f69e1ddaf63a",
        "authorId" : "a179bbc5-3a91-4905-bad9-4458ac257dba",
        "body" : "it has to be the apiserver as there will be other clients access to it via rest api directly.\ntwo reasons I prefer not use the cluster reference here\n1. cluster reference may have more field then this code will need to update to populate the new fields\n2. this will cause the cluster reference saved to etcd on early versions of kubernetes.\n",
        "createdAt" : "2016-08-13T02:35:45Z",
        "updatedAt" : "2016-08-15T19:15:14Z",
        "lastEditedBy" : "a179bbc5-3a91-4905-bad9-4458ac257dba",
        "tags" : [
        ]
      }
    ],
    "commit" : "d836fd523fcaa945de1ac4f4c9290d0f41c1227f",
    "line" : 75,
    "diffHunk" : "@@ -1,1 +73,77 @@\tfor _, op := range ops {\n\t\tgo func(op FederatedOperation) {\n\t\t\tclusterName, err := GetClusterName(op.Obj)\n\t\t\tif err != nil {\n\t\t\t\tdone <- err"
  }
]