[
  {
    "id" : "0819afec-0927-4500-b8d7-db078d0f25cd",
    "prId" : 27823,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b4aa7668-20ff-4907-847b-776dd80c942d",
        "parentId" : null,
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "I have kept the timeout to 1 min.\nHappy to reduce it but want to first make sure that the test passes on jenkins.\nWe can look at the log and see how much time is it taking and adjust timeout based on that.\n",
        "createdAt" : "2016-06-22T00:04:58Z",
        "updatedAt" : "2016-06-22T07:58:07Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      },
      {
        "id" : "09c18c67-3a4f-4425-9641-2ce8a1a85886",
        "parentId" : "b4aa7668-20ff-4907-847b-776dd80c942d",
        "authorId" : null,
        "body" : "nit: Please use standard timeouts from the utils package.\n",
        "createdAt" : "2016-06-22T01:49:38Z",
        "updatedAt" : "2016-06-22T07:58:07Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      },
      {
        "id" : "f6bd55e2-cffa-4e14-adab-d38a77bfdc40",
        "parentId" : "b4aa7668-20ff-4907-847b-776dd80c942d",
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "Did you mean: https://github.com/kubernetes/kubernetes/blob/master/test/e2e/framework/util.go?\nThats the package that has standard timeouts.\nBut I cannot depend on test code from here. We can perhaps refactor that library to move generic parts out of test.\n",
        "createdAt" : "2016-06-22T08:00:00Z",
        "updatedAt" : "2016-06-22T08:00:00Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      }
    ],
    "commit" : "c59de79d5fd0f096eec6b6c38a623cd0dc99bbb8",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +38,42 @@\tKubeAPIBurst            = 30\n\tKubeconfigSecretDataKey = \"kubeconfig\"\n\tgetSecretTimeout        = 1 * time.Minute\n)\n"
  },
  {
    "id" : "8bed8e6b-9b62-4a38-afdb-0dc925e2941c",
    "prId" : 26694,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "37266aa7-e66d-4c6c-8b6a-51db2dba978a",
        "parentId" : null,
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "You will get KubeconfigGetterForSecret as well when you rebase\n",
        "createdAt" : "2016-06-05T02:16:06Z",
        "updatedAt" : "2016-06-06T09:04:40Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      }
    ],
    "commit" : "6dde087f69b2bdd5f9191edbd572985e00f8c808",
    "line" : 76,
    "diffHunk" : "@@ -1,1 +74,78 @@// This is to inject a different kubeconfigGetter in tests.\n// We dont use the standard one which calls NewInCluster in tests to avoid having to setup service accounts and mount files with secret tokens.\nvar KubeconfigGetterForCluster = func(c *federation_v1alpha1.Cluster) clientcmd.KubeconfigGetter {\n\treturn func() (*clientcmdapi.Config, error) {\n\t\tsecretRefName := \"\""
  },
  {
    "id" : "72092201-17de-4f65-8188-aee09052c138",
    "prId" : 26694,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b6e4eb06-6907-4273-a0ad-d3040ce10129",
        "parentId" : null,
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "This is fine. But using BuildConfigFromKubeconfigGetter is fine as well. We can update BuildConfigFromKubeconfigGetter to not create the client and read POD_NAMESPACE if c.Spec.SecretRef is nil.\n",
        "createdAt" : "2016-06-05T02:22:13Z",
        "updatedAt" : "2016-06-06T09:04:40Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      },
      {
        "id" : "a8503326-6796-4827-81c0-1c95f7cf1bb8",
        "parentId" : "b6e4eb06-6907-4273-a0ad-d3040ce10129",
        "authorId" : "ee3c1908-4390-4e95-844f-fb1e0ab18e67",
        "body" : "I am keeping this, as\n1. we need serverAddress to build the cluster configure, we we put the logic into BuildConfigFromKubeconfigGetter, we need either pass serverAddress into it, or we need to parse the serverAddress inside BuildConfigFromKubeconfigGetter again.\n2. the clientcmd.load need data which is bytes array representing the how client config, but we only have serverAddress. if we use clientcmd.load(), we need extra logic to build the byte array. From my view, we can simply use  clientcmd.BuildConfigFromFlags(serverAddress, \"\")\n",
        "createdAt" : "2016-06-06T05:25:52Z",
        "updatedAt" : "2016-06-06T09:04:40Z",
        "lastEditedBy" : "ee3c1908-4390-4e95-844f-fb1e0ab18e67",
        "tags" : [
        ]
      },
      {
        "id" : "bd9e70d3-4f58-41da-9775-0394e39757e4",
        "parentId" : "b6e4eb06-6907-4273-a0ad-d3040ce10129",
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "Sorry I didnt understand, BuildConfigFromKubeconfigGetter already takes a serverAddress.\nWe can always call clientcmd.BuildConfigFromKubeconfigGetter(serverAddress, kubeconfigGetter) here.\nAnd ensure that BuildConfigFromKubeconfigGetter works fine even if c.Spec.SecretRef is nil.\n\nWhat you have is fine as well.\n",
        "createdAt" : "2016-06-06T17:09:46Z",
        "updatedAt" : "2016-06-06T17:09:46Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      }
    ],
    "commit" : "6dde087f69b2bdd5f9191edbd572985e00f8c808",
    "line" : 60,
    "diffHunk" : "@@ -1,1 +58,62 @@\t\tif c.Spec.SecretRef == nil {\n\t\t\tglog.Infof(\"didnt find secretRef for cluster %s. Trying insecure access\", c.Name)\n\t\t\tclusterConfig, err = clientcmd.BuildConfigFromFlags(serverAddress, \"\")\n\t\t} else {\n\t\t\tkubeconfigGetter := KubeconfigGetterForCluster(c)"
  }
]