[
  {
    "id" : "0fd968f9-3324-41c1-a2f6-e84afc5784a4",
    "prId" : 28679,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8aca7997-ec3b-44eb-8349-383d541c3f21",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "`reflect.TypeOf(func() *Cluster { var x *Cluster; return x }())` is a super convoluted way to say `reflect.TypeOf(*Cluster)` -- I'm fixing in a followup\n",
        "createdAt" : "2016-08-10T00:46:22Z",
        "updatedAt" : "2016-08-10T00:46:39Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "d18d3660-3549-4250-bb36-11b46b60594d",
        "parentId" : "8aca7997-ec3b-44eb-8349-383d541c3f21",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Hm, I see why you did it this way.\n",
        "createdAt" : "2016-08-10T00:56:42Z",
        "updatedAt" : "2016-08-10T00:56:42Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "2b8c33b4-dd2b-4747-b129-fe4aedf2a38b",
        "parentId" : "8aca7997-ec3b-44eb-8349-383d541c3f21",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "document it?\n\nOn Tue, Aug 9, 2016 at 5:57 PM, Daniel Smith notifications@github.com\nwrote:\n\n> In federation/apis/federation/deep_copy_generated.go\n> https://github.com/kubernetes/kubernetes/pull/28679#discussion_r74170915\n> :\n> \n> >  )\n> > \n> >  func init() {\n> >     if err := api.Scheme.AddGeneratedDeepCopyFuncs(\n> > -       DeepCopy_federation_Cluster,\n> > -       DeepCopy_federation_ClusterCondition,\n> > -       DeepCopy_federation_ClusterList,\n> > -       DeepCopy_federation_ClusterSpec,\n> > -       DeepCopy_federation_ClusterStatus,\n> > -       DeepCopy_federation_ServerAddressByClientCIDR,\n> > -       conversion.GeneratedDeepCopyFunc{Fn: DeepCopy_federation_Cluster, InType: reflect.TypeOf(func() *Cluster { var x *Cluster; return x }())},\n> \n> Hm, I see why you did it this way.\n> \n> â€”\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> https://github.com/kubernetes/kubernetes/pull/28679/files/629b25daf93e55464f5721f0b06e3ed3c6a48552#r74170915,\n> or mute the thread\n> https://github.com/notifications/unsubscribe-auth/AFVgVHk0rz5LPb7lgpqPrGXn_tx32l6Xks5qeSH9gaJpZM4JH-mq\n> .\n",
        "createdAt" : "2016-08-10T05:10:01Z",
        "updatedAt" : "2016-08-10T05:10:01Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "6d93924d-0ed0-4913-a948-60619e5f61a3",
        "parentId" : "8aca7997-ec3b-44eb-8349-383d541c3f21",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "If I remember right, this was just an artifact of non-uniform pointer/non-pointer signatures of the deepcopy functions. Now the `in` parameter is always a pointer. Here is a simplification PR: https://github.com/kubernetes/kubernetes/pull/30341\n",
        "createdAt" : "2016-08-10T07:48:07Z",
        "updatedAt" : "2016-08-10T07:48:07Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "629b25daf93e55464f5721f0b06e3ed3c6a48552",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +29,33 @@func init() {\n\tif err := api.Scheme.AddGeneratedDeepCopyFuncs(\n\t\tconversion.GeneratedDeepCopyFunc{Fn: DeepCopy_federation_Cluster, InType: reflect.TypeOf(func() *Cluster { var x *Cluster; return x }())},\n\t\tconversion.GeneratedDeepCopyFunc{Fn: DeepCopy_federation_ClusterCondition, InType: reflect.TypeOf(func() *ClusterCondition { var x *ClusterCondition; return x }())},\n\t\tconversion.GeneratedDeepCopyFunc{Fn: DeepCopy_federation_ClusterList, InType: reflect.TypeOf(func() *ClusterList { var x *ClusterList; return x }())},"
  }
]