[
  {
    "id" : "7c6127cb-943b-41ca-a0e5-853307b8ab3d",
    "prId" : 218,
    "prUrl" : "https://github.com/scalameta/metals/pull/218#pullrequestreview-108590597",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3264f09a-1598-41fd-8b61-cdc324d78539",
        "parentId" : null,
        "authorId" : "d66a6438-cedf-4b6c-bfdf-ceff0a38786d",
        "body" : "I've tested this locally: the default currently returns an error (because there's no 0.1.0 artifact published yet), and changing it to `0.1-SNAPSHOT` works correctly.",
        "createdAt" : "2018-04-02T10:39:24Z",
        "updatedAt" : "2018-04-02T13:59:00Z",
        "lastEditedBy" : "d66a6438-cedf-4b6c-bfdf-ceff0a38786d",
        "tags" : [
        ]
      }
    ],
    "commit" : "068a26e77742148e377252e19071478495c26d1e",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +27,31 @@    \"launch\",\n    \"-r\", \"bintray:scalameta/maven\",\n    `org.scalameta:metals_2.12:${serverVersion}`,\n    \"-M\", \"scala.meta.metals.Main\"\n  ];"
  },
  {
    "id" : "3cf9ea50-8f2b-40b1-8899-47cd0c278099",
    "prId" : 131,
    "prUrl" : "https://github.com/scalameta/metals/pull/131#pullrequestreview-83786951",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4f7faa17-4073-4d63-ba69-f02893e0a56e",
        "parentId" : null,
        "authorId" : "cea3c370-4fa4-4787-a40c-c406eb22d8b2",
        "body" : "Is this needed for every new command? I thought codeActions was a way for the server to list the commands it supports.",
        "createdAt" : "2017-12-15T11:42:58Z",
        "updatedAt" : "2017-12-15T11:43:33Z",
        "lastEditedBy" : "cea3c370-4fa4-4787-a40c-c406eb22d8b2",
        "tags" : [
        ]
      },
      {
        "id" : "53ecfbcd-29f4-4ee2-8d44-7552e446aecb",
        "parentId" : "4f7faa17-4073-4d63-ba69-f02893e0a56e",
        "authorId" : "d66a6438-cedf-4b6c-bfdf-ceff0a38786d",
        "body" : "Yes, it is. codeAction is not very well integrated in the client library, as of now. I guess it may depend by the requirement for extensions to statically include commands in the manifest",
        "createdAt" : "2017-12-15T11:52:03Z",
        "updatedAt" : "2017-12-15T11:52:04Z",
        "lastEditedBy" : "d66a6438-cedf-4b6c-bfdf-ceff0a38786d",
        "tags" : [
        ]
      }
    ],
    "commit" : "867e5b2b0a081dfb481be2a14c9b7bffa47a2d98",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +94,98 @@\n  client.onReady().then(() => {\n    const clearIndexCacheCommand = commands.registerCommand(\"scalameta.clearIndexCache\", async () => {\n      return client.sendRequest(ExecuteCommandRequest.type, { command: \"clearIndexCache\" });\n    });"
  },
  {
    "id" : "27ed351b-e5e3-4fd4-8b09-0cacfa280c62",
    "prId" : 108,
    "prUrl" : "https://github.com/scalameta/metals/pull/108#pullrequestreview-82347271",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "37059c7c-bb48-4532-81e0-eb09bc3624ff",
        "parentId" : null,
        "authorId" : "d66a6438-cedf-4b6c-bfdf-ceff0a38786d",
        "body" : "by the way, this and the other import above were added automatically as I was typing ❤️  /cc @olafurpg ",
        "createdAt" : "2017-12-10T11:11:54Z",
        "updatedAt" : "2017-12-10T17:08:36Z",
        "lastEditedBy" : "d66a6438-cedf-4b6c-bfdf-ceff0a38786d",
        "tags" : [
        ]
      },
      {
        "id" : "499854e8-e912-4514-97e6-975beef939b8",
        "parentId" : "37059c7c-bb48-4532-81e0-eb09bc3624ff",
        "authorId" : "cea3c370-4fa4-4787-a40c-c406eb22d8b2",
        "body" : "I've had this for Scala in IJ for a long time, hard to live without once you get used to it :)\r\n",
        "createdAt" : "2017-12-10T11:12:48Z",
        "updatedAt" : "2017-12-10T17:08:36Z",
        "lastEditedBy" : "cea3c370-4fa4-4787-a40c-c406eb22d8b2",
        "tags" : [
        ]
      }
    ],
    "commit" : "d70930516287ca7b7c4d7cf5be37c376e93809bd",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +11,15 @@} from 'vscode-languageclient';\nimport { Requirements } from './requirements';\nimport { exec } from 'child_process';\n\nexport async function activate(context: ExtensionContext) {"
  }
]