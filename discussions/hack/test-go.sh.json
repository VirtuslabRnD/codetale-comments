[
  {
    "id" : "373050dc-8263-40c5-819b-9920e5628953",
    "prId" : 27568,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f8114bef-ce4c-4b78-82c7-33502b201b90",
        "parentId" : null,
        "authorId" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "body" : "Optional: This could be `for apiVersion in ${apiVersions[@]}; do`, and delete line 316\n",
        "createdAt" : "2016-06-16T22:24:35Z",
        "updatedAt" : "2016-06-16T22:24:35Z",
        "lastEditedBy" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "tags" : [
        ]
      },
      {
        "id" : "aa4fe1f3-b34d-4264-90ef-7f07b35aca93",
        "parentId" : "f8114bef-ce4c-4b78-82c7-33502b201b90",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Yeah, that'd be better. I'll fix next time I mess with this file, I don't want to have to kick off another test run.\n",
        "createdAt" : "2016-06-16T22:28:07Z",
        "updatedAt" : "2016-06-16T22:28:07Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "22eac7e56ad72d1bdd5fb48aac74acb56fe90efc",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +315,319 @@IFS=';' read -a apiVersions <<< \"${KUBE_TEST_API_VERSIONS}\"\napiVersionsCount=${#apiVersions[@]}\nfor (( i=0; i<${apiVersionsCount}; i++ )); do\n  apiVersion=${apiVersions[i]}\n  echo \"Running tests for APIVersion: $apiVersion\""
  },
  {
    "id" : "cf9ebd0e-894f-4438-bb75-5f6d0f9aca7d",
    "prId" : 27568,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "277eed37-82e2-470c-889d-1c54caaa29ae",
        "parentId" : null,
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "This will make the unit tests temporarily faster but it doesn't test the two batch api versions. Tests will be just as slow again once https://github.com/kubernetes/kubernetes/pull/27426 merges.\n",
        "createdAt" : "2016-06-16T22:47:41Z",
        "updatedAt" : "2016-06-16T22:47:41Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      }
    ],
    "commit" : "22eac7e56ad72d1bdd5fb48aac74acb56fe90efc",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +59,63 @@# separated by comma, lists are separated by semicolon. e.g.,\n# \"v1,compute/v1alpha1,experimental/v1alpha2;v1,compute/v2,experimental/v1alpha3\"\nKUBE_TEST_API_VERSIONS=${KUBE_TEST_API_VERSIONS:-\"v1,autoscaling/v1,batch/v1,batch/v2alpha1,extensions/v1beta1,apps/v1alpha1,federation/v1alpha1,policy/v1alpha1,rbac.authorization.k8s.io/v1alpha1\"}\n# once we have multiple group supports\n# Create a junit-style XML test report in this directory if set."
  },
  {
    "id" : "c306bd27-fdab-4a3a-a478-bcfca95a2ed0",
    "prId" : 25978,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4ed9b477-dcdf-45d8-a4dc-3f185670b2a9",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Are we supposed to update the year when changing files? That seems wrong?\n",
        "createdAt" : "2016-07-08T17:54:48Z",
        "updatedAt" : "2016-07-13T04:53:03Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "ff317491-7810-4f7d-b053-d1ce59bb6172",
        "parentId" : "4ed9b477-dcdf-45d8-a4dc-3f185670b2a9",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "The file was moved with year intact and a new file with the same name was added.  git can't track that\n",
        "createdAt" : "2016-07-09T03:49:35Z",
        "updatedAt" : "2016-07-13T04:53:03Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "fef16dd541356b9de3df1d180d0d96daebb874d2",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +1,5 @@#!/bin/bash\n\n# Copyright 2016 The Kubernetes Authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");"
  },
  {
    "id" : "e1dd0b09-81e3-4f63-b61d-f7ef3f99bdca",
    "prId" : 21201,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d1faad13-26b8-4ed8-bf6c-2fd531c57c3a",
        "parentId" : null,
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "were you intending to call this from somewhere?\n",
        "createdAt" : "2016-02-13T01:26:27Z",
        "updatedAt" : "2016-02-22T15:27:24Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "0354ab68-2f31-4080-be05-650a78c9954e",
        "parentId" : "d1faad13-26b8-4ed8-bf6c-2fd531c57c3a",
        "authorId" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "body" : "fixed, thx.\n",
        "createdAt" : "2016-02-13T06:40:02Z",
        "updatedAt" : "2016-02-22T15:27:24Z",
        "lastEditedBy" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "tags" : [
        ]
      }
    ],
    "commit" : "cef288eb427958c45f0e08cf1fd0ce0234107a21",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +304,308 @@}\n\ncheckFDs() {\n  # several unittests panic when httptest cannot open more sockets\n  # due to the low default files limit on OS X.  Warn about low limit."
  },
  {
    "id" : "dc2e8cdd-f819-4c5c-a611-783d04e39fb6",
    "prId" : 14769,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0809eab5-6b39-4065-a96d-5ff9ccd85e8a",
        "parentId" : null,
        "authorId" : "766f642e-1622-4803-803b-05ce306fc30e",
        "body" : "Since what we really want/need is \"did any process fail\"  So set a bash variable up in `runTestIterations()` on failure? (You could just use \"fails\" since you didn't make it local.)\n",
        "createdAt" : "2015-09-29T22:56:16Z",
        "updatedAt" : "2015-09-30T23:25:16Z",
        "lastEditedBy" : "766f642e-1622-4803-803b-05ce306fc30e",
        "tags" : [
        ]
      },
      {
        "id" : "9b41487e-ee48-4c6d-80d1-177766b4a02c",
        "parentId" : "0809eab5-6b39-4065-a96d-5ff9ccd85e8a",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Sure, I don't see how it's going to work across subshells, but I guess this is no worse than what I had.\n",
        "createdAt" : "2015-09-30T23:26:10Z",
        "updatedAt" : "2015-09-30T23:26:10Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "bd7e2e5d8e2263ca9c35500857a4c77547d5c0bf",
    "line" : null,
    "diffHunk" : "@@ -1,1 +214,218 @@      runTestIterations ${p} \"$@\" &\n    done\n    wait\n    if [[ ${ITERATION_FAILURES} -gt 0 ]]; then\n      return 1"
  },
  {
    "id" : "33e41fc4-51bf-498e-ad31-d92735513d6e",
    "prId" : 13114,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dfdbcb22-bed3-4cdf-95fe-a1033113f329",
        "parentId" : null,
        "authorId" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "body" : "Nit: Just quote the whole ternary, `\"${junit_filename_prefix:+${junit_filename_prefix}.stdout}\"`\n",
        "createdAt" : "2015-08-25T18:22:40Z",
        "updatedAt" : "2015-08-26T22:27:03Z",
        "lastEditedBy" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "tags" : [
        ]
      },
      {
        "id" : "622ae1f4-38b7-451f-811a-7076e118ee4c",
        "parentId" : "dfdbcb22-bed3-4cdf-95fe-a1033113f329",
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "if I do this, then when `$junit_filename_prefix` is empty, it tries to run `tee \"\"` (I think), which seems to fail:\n\n``` console\ntee: : No such file or directory\n```\n",
        "createdAt" : "2015-08-25T21:28:05Z",
        "updatedAt" : "2015-08-26T22:27:03Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "4704a022-99d9-443e-8749-2a94c0f0d2bb",
        "parentId" : "dfdbcb22-bed3-4cdf-95fe-a1033113f329",
        "authorId" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "body" : "Got it.\n",
        "createdAt" : "2015-08-25T21:39:37Z",
        "updatedAt" : "2015-08-26T22:27:03Z",
        "lastEditedBy" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "tags" : [
        ]
      }
    ],
    "commit" : "75294b7a3809bb0e2d93fe7a796a7bb8dfdffb4b",
    "line" : 75,
    "diffHunk" : "@@ -1,1 +200,204 @@      ${KUBE_RACE} ${KUBE_TIMEOUT} \"${@+${@/#/${KUBE_GO_PACKAGE}/}}\" \\\n     \"${testargs[@]:+${testargs[@]}}\" \\\n     | tee ${junit_filename_prefix:+\"${junit_filename_prefix}.stdout\"} && rc=$? || rc=$?\n    produceJUnitXMLReport \"${junit_filename_prefix}\"\n    return ${rc}"
  },
  {
    "id" : "23e96b89-b6dd-415b-a8fe-3a26f2d1acdc",
    "prId" : 13114,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "aaa0117c-45fa-42fa-8697-d7232278f468",
        "parentId" : null,
        "authorId" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "body" : "nit: quote `\"${goflags[@]:+${goflags[@]}}\"` (as the left)\n",
        "createdAt" : "2015-08-25T18:24:55Z",
        "updatedAt" : "2015-08-26T22:27:03Z",
        "lastEditedBy" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "tags" : [
        ]
      },
      {
        "id" : "00006590-f292-4e83-9538-26785708cc27",
        "parentId" : "aaa0117c-45fa-42fa-8697-d7232278f468",
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "same as noted for `$testargs` below.\n",
        "createdAt" : "2015-08-25T21:35:56Z",
        "updatedAt" : "2015-08-26T22:27:03Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "394724d7-cd16-4605-8a22-096a9816962c",
        "parentId" : "aaa0117c-45fa-42fa-8697-d7232278f468",
        "authorId" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "body" : "Yeah, okay.\n",
        "createdAt" : "2015-08-25T21:39:50Z",
        "updatedAt" : "2015-08-26T22:27:03Z",
        "lastEditedBy" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "tags" : [
        ]
      }
    ],
    "commit" : "75294b7a3809bb0e2d93fe7a796a7bb8dfdffb4b",
    "line" : null,
    "diffHunk" : "@@ -1,1 +222,226 @@  printf \"%s\\n\" \"${@}\" | xargs -I{} -n1 -P${KUBE_COVERPROCS} \\\n    bash -c \"set -o pipefail; _pkg=\\\"{}\\\"; _pkg_out=\\${_pkg//\\//_}; \\\n        go test ${goflags[@]:+${goflags[@]}} \\\n          ${KUBE_RACE} \\\n          ${KUBE_TIMEOUT} \\"
  },
  {
    "id" : "f0a631cc-887d-41c1-9805-168b434e923a",
    "prId" : 13114,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d4617be1-2281-41f2-8a32-c023c5b7ca80",
        "parentId" : null,
        "authorId" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "body" : "nit: quote `\"${testargs[@]:+${testargs[@]}}\"` (as the left)\n",
        "createdAt" : "2015-08-25T18:25:22Z",
        "updatedAt" : "2015-08-26T22:27:03Z",
        "lastEditedBy" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "tags" : [
        ]
      },
      {
        "id" : "a2e956da-d6ab-42da-8ca8-8bafd11946ce",
        "parentId" : "d4617be1-2281-41f2-8a32-c023c5b7ca80",
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "this was intentional. without it, `go test` fails when `$testargs` isn't set with\n\n```\ncan't load package: package .: no buildable Go source files in /usr/local/google/home/jgrafton/code/kubernetes/src/github.com/kubernetes/kubernetes\ncan't load package: package .: no buildable Go source files in /usr/local/google/home/jgrafton/code/kubernetes/src/github.com/kubernetes/kubernetes\n```\n",
        "createdAt" : "2015-08-25T21:34:58Z",
        "updatedAt" : "2015-08-26T22:27:03Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "a4b0cfd0-618e-4efc-aac4-c810ce40fa48",
        "parentId" : "d4617be1-2281-41f2-8a32-c023c5b7ca80",
        "authorId" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "body" : "I love shell.\n",
        "createdAt" : "2015-08-25T21:39:56Z",
        "updatedAt" : "2015-08-26T22:27:03Z",
        "lastEditedBy" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "tags" : [
        ]
      }
    ],
    "commit" : "75294b7a3809bb0e2d93fe7a796a7bb8dfdffb4b",
    "line" : 103,
    "diffHunk" : "@@ -1,1 +228,232 @@          -coverprofile=\\\"${cover_report_dir}/\\${_pkg}/${cover_profile}\\\" \\\n          \\\"${KUBE_GO_PACKAGE}/\\${_pkg}\\\" \\\n          ${testargs[@]:+${testargs[@]}} \\\n        | tee ${junit_filename_prefix:+\\\"${junit_filename_prefix}-\\$_pkg_out.stdout\\\"}\" \\\n      && test_result=$? || test_result=$?"
  },
  {
    "id" : "5358d192-a2d0-4915-ad20-894b441a32a0",
    "prId" : 5707,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3e5dd3a1-0cbd-4163-b841-5048703e4e19",
        "parentId" : null,
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "Locally, unit tests are now being run 3 times!\nFor v1beta1, beta3 and etcdPrefix.\n@bgrant0607 @lavalamp \nIs this intended?\n\nMaybe we can run with v1beta1 and standard prefix once and then v1beta3 and custom prefix (or vice-versa)?\nOr if the test passes with a custom prefix, then it means that it will pass with the standard prefix as well?\n",
        "createdAt" : "2015-05-12T00:12:00Z",
        "updatedAt" : "2015-05-12T00:12:00Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      },
      {
        "id" : "6b501649-72b7-46c5-a71b-fa6458a8c525",
        "parentId" : "3e5dd3a1-0cbd-4163-b841-5048703e4e19",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Yes, this was intentional-- I don't mind if you combine the runs like you suggest, but we do need to test at least once with a custom prefix.\n",
        "createdAt" : "2015-05-12T00:17:37Z",
        "updatedAt" : "2015-05-12T00:17:37Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "8a1ed9a0-01a7-4730-87da-23f272bac7f2",
        "parentId" : "3e5dd3a1-0cbd-4163-b841-5048703e4e19",
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "Its actually running 4 times on shippable and travis :)\nTwice with go 1.3 (v1beta1 and then custom etcdPrefix)\nand twice with go 1.4 (v1beta3 and custom etcdPrefix)\nSending a PR to fix this.\n",
        "createdAt" : "2015-05-12T01:14:32Z",
        "updatedAt" : "2015-05-12T01:14:32Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      },
      {
        "id" : "0e98e18f-a8f4-4dc5-a875-b49e1ec8a94c",
        "parentId" : "3e5dd3a1-0cbd-4163-b841-5048703e4e19",
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "Being fixed in https://github.com/GoogleCloudPlatform/kubernetes/pull/8134\n",
        "createdAt" : "2015-05-12T21:04:30Z",
        "updatedAt" : "2015-05-12T21:04:30Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      },
      {
        "id" : "f853c089-569b-487d-8a1b-4d8a53d9f4bc",
        "parentId" : "3e5dd3a1-0cbd-4163-b841-5048703e4e19",
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "Thanks. I'd eventually like to get back to no extra test runs for this. \n",
        "createdAt" : "2015-05-12T21:07:10Z",
        "updatedAt" : "2015-05-12T21:07:10Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      }
    ],
    "commit" : "a7623ca6cc9e4a0566f182b1dfe2a4ae5bd1d548",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +210,214 @@for apiVersion in \"${apiVersions[@]}\"; do\n  echo \"Running tests for APIVersion: $apiVersion\"\n  KUBE_API_VERSION=\"${apiVersion}\" ETCD_PREFIX=${ETCD_STANDARD_PREFIX} runTests \"$@\"\ndone\necho \"Using custom etcd path prefix: ${ETCD_CUSTOM_PREFIX}\""
  },
  {
    "id" : "91b4af11-94e2-4fe7-92bb-efc5547e6082",
    "prId" : 5687,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "96aaaa31-9fad-4e5c-b81a-3a9a97d50b52",
        "parentId" : null,
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "I'm not sure if factoring this out into its own subroutine was really necessary.\n",
        "createdAt" : "2015-03-25T18:40:36Z",
        "updatedAt" : "2015-03-25T19:51:34Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      }
    ],
    "commit" : "5e4ab8e045c1babdf5f0e7c6a9da65e3c0aeb3d4",
    "line" : 181,
    "diffHunk" : "@@ -1,1 +200,204 @@}\n\nreportCoverageToCoveralls() {\n  if [[ -x \"${KUBE_GOVERALLS_BIN}\" ]]; then\n    ${KUBE_GOVERALLS_BIN} -coverprofile=\"${COMBINED_COVER_PROFILE}\" || true"
  },
  {
    "id" : "b22be88b-8c09-43cd-8079-8e69b9af5a97",
    "prId" : 4574,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ca60b263-ed30-44a5-b866-d9618979f4bd",
        "parentId" : null,
        "authorId" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "body" : "Can you comment what's going on with the `mode:`? I worked it out but it would be kind to the next reader.\n",
        "createdAt" : "2015-02-20T01:38:09Z",
        "updatedAt" : "2015-02-20T01:50:01Z",
        "lastEditedBy" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "tags" : [
        ]
      },
      {
        "id" : "d08462c3-75a0-4224-a878-9f15fa7cc2fa",
        "parentId" : "ca60b263-ed30-44a5-b866-d9618979f4bd",
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "Done.\n",
        "createdAt" : "2015-02-20T01:50:12Z",
        "updatedAt" : "2015-02-20T01:50:12Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      }
    ],
    "commit" : "c444c172bc21540094250067e796ba876b536c06",
    "line" : null,
    "diffHunk" : "@@ -1,1 +148,152 @@  # each of the coverage profiles generated when running 'go test -cover', but\n  # we strip these lines out when combining so that there's only one.\n  echo \"mode: ${KUBE_COVERMODE}\" >${combined_cover_profile}\nfi\n"
  },
  {
    "id" : "9e7e4d3f-9e81-430f-aa0e-65bed447f1a8",
    "prId" : 3285,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d161446e-9e44-4bc0-b07d-e5ea635c7989",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Unrelated? Debug changes?\n",
        "createdAt" : "2015-01-07T21:54:36Z",
        "updatedAt" : "2015-01-07T21:54:36Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "7d5ac856c506896ca95527d41cb80df3fdcba02c",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +45,49 @@\n# -covermode=atomic becomes default with -race in Go >=1.3\nKUBE_COVER=\"\" #${KUBE_COVER:--cover -covermode=atomic}\nKUBE_TIMEOUT=${KUBE_TIMEOUT:--timeout 120s}\nKUBE_RACE=\"\" #${KUBE_RACE:--race}"
  },
  {
    "id" : "1e1647a7-eab9-4450-91e2-79f41f9d788a",
    "prId" : 1159,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "22e53016-9202-4ff4-9c2f-4ab87020ad5e",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "- or :+ ?  I think both are legit, I used :+ below\n",
        "createdAt" : "2014-09-03T21:41:08Z",
        "updatedAt" : "2014-09-03T22:00:07Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "c32f4db1-ea30-4f19-998d-4a5670e1ce4e",
        "parentId" : "22e53016-9202-4ff4-9c2f-4ab87020ad5e",
        "authorId" : "fd5eb1fb-f30a-4735-908c-944e87d99845",
        "body" : "While technically both work here, I think \"+\" without the \":\" is slightly more correct here, as \"+\" means \"when undefined\" and \":+\" means \"when empty or undefined.\"\n\nFor instance \":+\" triggers for testcases=(\"\") while \"+\" doesn't, it only triggers for testcases=().\n",
        "createdAt" : "2014-09-03T21:43:07Z",
        "updatedAt" : "2014-09-03T22:00:07Z",
        "lastEditedBy" : "fd5eb1fb-f30a-4735-908c-944e87d99845",
        "tags" : [
        ]
      }
    ],
    "commit" : "3d03b4b80f722f00e8f125676f48ec78c881f4cf",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +104,108 @@  fi\ndone\nset -- ${testcases[@]+\"${testcases[@]}\"}\n\nif [[ \"${iterations}\" -gt 1 ]]; then"
  },
  {
    "id" : "bb1d43d7-b24d-489a-9b40-0444af2164e1",
    "prId" : 1093,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "74492bd9-092e-42aa-b7ad-183cb6e81b1d",
        "parentId" : null,
        "authorId" : "fd5eb1fb-f30a-4735-908c-944e87d99845",
        "body" : "Looks to me that this change is unrelated to adding a Makefile... Separate commit? I like tiny commits on git because then if there's a bug it's easy to revert... Not so if they're spawning unrelated changes.\n",
        "createdAt" : "2014-08-28T23:10:56Z",
        "updatedAt" : "2014-08-29T21:56:53Z",
        "lastEditedBy" : "fd5eb1fb-f30a-4735-908c-944e87d99845",
        "tags" : [
        ]
      }
    ],
    "commit" : "51fd21c9e7dddc2e402ac85c32b724cf21dec851",
    "line" : null,
    "diffHunk" : "@@ -1,1 +31,35 @@  find . -not \\( \\\n      \\( \\\n        -wholename './output' \\\n        -o -wholename './_output' \\\n        -o -wholename './release' \\"
  },
  {
    "id" : "730a47f0-c799-4ef4-8c45-f2613dfcc80f",
    "prId" : 1093,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ee508238-98d6-4870-bea2-5181ddee950d",
        "parentId" : null,
        "authorId" : "fd5eb1fb-f30a-4735-908c-944e87d99845",
        "body" : "Same here `${GOFLAGS-}`\n",
        "createdAt" : "2014-08-28T23:11:11Z",
        "updatedAt" : "2014-08-29T21:56:53Z",
        "lastEditedBy" : "fd5eb1fb-f30a-4735-908c-944e87d99845",
        "tags" : [
        ]
      }
    ],
    "commit" : "51fd21c9e7dddc2e402ac85c32b724cf21dec851",
    "line" : null,
    "diffHunk" : "@@ -1,1 +93,97 @@\nif [[ -n \"$1\" ]]; then\n  go test ${GOFLAGS} \\\n      -race \\\n      ${KUBE_TIMEOUT} \\"
  },
  {
    "id" : "159971dc-b816-4b83-a290-dfd2d73b70c7",
    "prId" : 767,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "afbb9184-8834-46dc-9f25-73e0cc14fd75",
        "parentId" : null,
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "how clean are the error outputs in the parallel case.  Do we want to tee them into some temporary log files?\n",
        "createdAt" : "2014-08-04T17:53:40Z",
        "updatedAt" : "2014-08-04T17:53:40Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      },
      {
        "id" : "bc65d5a5-94fc-4e95-a940-cab0e540fa43",
        "parentId" : "afbb9184-8834-46dc-9f25-73e0cc14fd75",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "I believe all test output is shown at once, so it'd be right under the line indicating the run (that's not output until after the runs complete).\n",
        "createdAt" : "2014-08-04T18:04:47Z",
        "updatedAt" : "2014-08-04T18:04:47Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "67166e581bce66b61f4f9b35e18bd0f5394ea12c",
    "line" : 43,
    "diffHunk" : "@@ -1,1 +44,48 @@fi\n\nfind_test_dirs | xargs go test -race -timeout 30s $KUBE_COVER \"${@:2}\""
  }
]