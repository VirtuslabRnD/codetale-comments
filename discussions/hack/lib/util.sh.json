[
  {
    "id" : "ff6163d3-0383-47f7-84b6-b6b6f3029ce3",
    "prId" : 95856,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/95856#pullrequestreview-518862403",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c0173aa9-b4d2-48cb-bec2-b9f20141b04d",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "drop this change, switching away from AlwaysAllow authorizer will remove the need to pass bearer tokens to check healthz",
        "createdAt" : "2020-10-28T16:35:13Z",
        "updatedAt" : "2020-10-29T15:21:00Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "cfc2b330a7027e109ac26fc6a86b68898883099e",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +58,62 @@    # shellcheck disable=SC2086\n    # Disabling because \"${extra_args}\" needs to allow for expansion here\n    if out=$(curl --max-time \"${maxtime}\" -gkfs $extra_args \"${url}\" 2>/dev/null); then\n      kube::log::status \"On try ${i}, ${prefix}: ${out}\"\n      return 0"
  },
  {
    "id" : "d45d5872-f783-414b-afe4-ece3274e4d2f",
    "prId" : 91745,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/91745#pullrequestreview-441295818",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9f60aaf0-5eab-42a1-937f-23fe6d3f05c6",
        "parentId" : null,
        "authorId" : "e58080d6-2177-419f-a546-b51075d7bcb8",
        "body" : "On CI this looks like:\r\n\r\n```\r\nAcceptable client certificate CA names\r\nCN = 127.0.0.1\r\nRequested Signature Algorithms: RSA-PSS+SHA256:ECDSA+SHA256:Ed25519:RSA-PSS+SHA384:RSA-PSS+SHA512:RSA+SHA256:RSA+SHA384:RSA+SHA512:ECDSA+SHA384:ECDSA+SHA512:RSA+SHA1:ECDSA+SHA1\r\nShared Requested Signature Algorithms: RSA-PSS+SHA256:ECDSA+SHA256:Ed25519:RSA-PSS+SHA384:RSA-PSS+SHA512:RSA+SHA256:RSA+SHA384:RSA+SHA512:ECDSA+SHA384:ECDSA+SHA512\r\n```",
        "createdAt" : "2020-07-02T01:42:29Z",
        "updatedAt" : "2020-07-06T19:55:48Z",
        "lastEditedBy" : "e58080d6-2177-419f-a546-b51075d7bcb8",
        "tags" : [
        ]
      }
    ],
    "commit" : "c595f983fa6b53383557ddbdf698873a38f2275d",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +464,468 @@  if [[ \"${output}\" != *\"/CN=127.0.0.1\"* ]] && [[ \"${output}\" != *\"CN = 127.0.0.1\"* ]]; then\n    echo \"API server not configured for client certificate authentication\"\n    echo \"Output of from acceptable client certificate check: ${output}\"\n    exit 1\n  fi"
  },
  {
    "id" : "dcbd8f94-37c3-4d73-ba80-0782601069dd",
    "prId" : 79316,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/79316#pullrequestreview-253155149",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "476595fb-7348-434a-aff4-00eb7760f557",
        "parentId" : null,
        "authorId" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "body" : "originally I didn't add this to util, but all 3 fixed scripts have a need for this and doing it correctly / portably is tricky",
        "createdAt" : "2019-06-23T23:38:36Z",
        "updatedAt" : "2019-06-24T18:43:11Z",
        "lastEditedBy" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "tags" : [
        ]
      }
    ],
    "commit" : "4aaa7b4da2643d5085d1844495c0d6cff6970cf5",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +541,545 @@# each entry will just be the $repo portion of staging/src/k8s.io/$repo/...\n# $KUBE_ROOT must be set.\nfunction kube::util::list_staging_repos() {\n  (\n    cd \"${KUBE_ROOT}/staging/src/k8s.io\" && \\"
  },
  {
    "id" : "6934892d-9d8e-4190-9c5b-344883b92f48",
    "prId" : 79316,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/79316#pullrequestreview-253157610",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0af9741b-8ced-49a9-9a66-2b48bfbbcbbe",
        "parentId" : null,
        "authorId" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "body" : "explanation:\r\n- ls output is not portable\r\n- find is more portable but gives relative paths\r\n\r\n-> cd to the search directory in a subshell, then trim off the leading `./` from results.\r\nsearch only for directories, set min/max depth so we only get results immediately below the search dir.",
        "createdAt" : "2019-06-24T00:24:21Z",
        "updatedAt" : "2019-06-24T18:43:11Z",
        "lastEditedBy" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "tags" : [
        ]
      }
    ],
    "commit" : "4aaa7b4da2643d5085d1844495c0d6cff6970cf5",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +545,549 @@    cd \"${KUBE_ROOT}/staging/src/k8s.io\" && \\\n    find . -mindepth 1 -maxdepth 1 -type d | cut -c 3- | sort\n  )\n}\n"
  },
  {
    "id" : "f281bfcf-ca0a-40bf-be62-907c230e69aa",
    "prId" : 79314,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/79314#pullrequestreview-253145839",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "59c555a7-ed6f-4e91-b725-634bb2ffca0a",
        "parentId" : null,
        "authorId" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "body" : "this is a 1:1 copy of `kube::release:md5`, it's such a trivial method that it didn't seem particularly worth deduping even, but we don't want to source the whole release machinery in update-vendor-licenses.sh",
        "createdAt" : "2019-06-23T19:10:51Z",
        "updatedAt" : "2019-06-23T19:10:52Z",
        "lastEditedBy" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "tags" : [
        ]
      },
      {
        "id" : "c5e2ddea-c3fc-4882-b5eb-7de46c09371d",
        "parentId" : "59c555a7-ed6f-4e91-b725-634bb2ffca0a",
        "authorId" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "body" : "(see `build/lib/release.sh`)\r\n\r\nI can't find any consumers of `kube::release::md5` but I'm wary of potentially breaking some script elsewhere (k/release??) and removing it would be a somewhat orthogonal change.",
        "createdAt" : "2019-06-23T19:12:08Z",
        "updatedAt" : "2019-06-23T19:12:08Z",
        "lastEditedBy" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "tags" : [
        ]
      }
    ],
    "commit" : "c8a6a720c386c5d4f895e0cf64531f24bf614f6b",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +704,708 @@\n# outputs md5 hash of $1, works on macOS and Linux\nfunction kube::util::md5() {\n  if which md5 >/dev/null 2>&1; then\n    md5 -q \"$1\""
  },
  {
    "id" : "623b0a1b-f897-40ed-8e9f-dcc161c633d8",
    "prId" : 74257,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/74257#pullrequestreview-205956694",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "911d4929-26d1-4429-9ba9-44b582036b64",
        "parentId" : null,
        "authorId" : "185604f6-2915-4313-8d6b-1d55757d0d22",
        "body" : "neat pattern",
        "createdAt" : "2019-02-20T19:30:37Z",
        "updatedAt" : "2019-03-04T21:24:17Z",
        "lastEditedBy" : "185604f6-2915-4313-8d6b-1d55757d0d22",
        "tags" : [
        ]
      }
    ],
    "commit" : "f7e1058c980247ff4b94e2332586d0eb4cf94d0e",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +15,19 @@# limitations under the License.\n\nfunction kube::util::sourced_variable {\n  # Call this function to tell shellcheck that a variable is supposed to\n  # be used from other calling context. This helps quiet an \"unused"
  },
  {
    "id" : "cf249ff5-5985-42f3-a4b1-522881748e19",
    "prId" : 74257,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/74257#pullrequestreview-206289572",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a79449e1-fa1c-432f-9255-730ed9212523",
        "parentId" : null,
        "authorId" : "185604f6-2915-4313-8d6b-1d55757d0d22",
        "body" : "What's the scope of this? Should we enable it immediately after? Is it smart enough to be local to the loop (like python)?",
        "createdAt" : "2019-02-20T19:31:17Z",
        "updatedAt" : "2019-03-04T21:24:17Z",
        "lastEditedBy" : "185604f6-2915-4313-8d6b-1d55757d0d22",
        "tags" : [
        ]
      },
      {
        "id" : "0825d069-3c47-44d6-a5ab-9ee9322a6d1e",
        "parentId" : "a79449e1-fa1c-432f-9255-730ed9212523",
        "authorId" : "931a9d14-ddc7-40c6-a3a5-d7d7c5157663",
        "body" : "Docs say that the shellcheck directives are scoped only to the command that directly follows the directive (unless the directive is right at the top of the file before the hashbang). So should be no need to re-enable.",
        "createdAt" : "2019-02-21T12:59:02Z",
        "updatedAt" : "2019-03-04T21:24:17Z",
        "lastEditedBy" : "931a9d14-ddc7-40c6-a3a5-d7d7c5157663",
        "tags" : [
        ]
      }
    ],
    "commit" : "f7e1058c980247ff4b94e2332586d0eb4cf94d0e",
    "line" : 41,
    "diffHunk" : "@@ -1,1 +89,93 @@    # point instead evaluating them at run time. The logic of adding new\n    # commands to a single trap requires them to be evaluated right away.\n    # shellcheck disable=SC2064\n    trap \"${new_cmd}\" \"${trap_add_name}\"\n  done"
  },
  {
    "id" : "bb6c5bc1-cf52-4d2e-9a5e-fb1b39ea6a41",
    "prId" : 74257,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/74257#pullrequestreview-207100123",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6c8300cd-0a71-469d-96e6-dcb31a7b38ab",
        "parentId" : null,
        "authorId" : "185604f6-2915-4313-8d6b-1d55757d0d22",
        "body" : "This is the normal pattern. AKA everything that fails blows up the script",
        "createdAt" : "2019-02-23T07:32:32Z",
        "updatedAt" : "2019-03-04T21:24:17Z",
        "lastEditedBy" : "185604f6-2915-4313-8d6b-1d55757d0d22",
        "tags" : [
        ]
      }
    ],
    "commit" : "f7e1058c980247ff4b94e2332586d0eb4cf94d0e",
    "line" : 88,
    "diffHunk" : "@@ -1,1 +252,256 @@    # remove all of the old docs; we don't want to check them in.\n    while read -r file; do\n      rm \"${KUBE_ROOT}/${file}\" 2>/dev/null || true\n    done <\"${KUBE_ROOT}/docs/.generated_docs\"\n    # The docs/.generated_docs file lists itself, so we don't need to explicitly"
  },
  {
    "id" : "a82d6e74-1d16-4826-ac82-0eeee4a383af",
    "prId" : 74257,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/74257#pullrequestreview-210785720",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c6efb17d-c4c2-47b7-9182-222b195bb365",
        "parentId" : null,
        "authorId" : "0de88c3b-1f1a-401f-9fd1-cd63adc590fd",
        "body" : "It's fail on osx with this error\r\n```\r\n/Users/yago/go/src/k8s.io/kubernetes/hack/lib/util.sh: line 652: DOCKER[@]: unbound variable\r\n```",
        "createdAt" : "2019-03-05T15:40:37Z",
        "updatedAt" : "2019-03-05T15:40:37Z",
        "lastEditedBy" : "0de88c3b-1f1a-401f-9fd1-cd63adc590fd",
        "tags" : [
        ]
      },
      {
        "id" : "ddce3300-832e-4afe-8e57-76690bcb2444",
        "parentId" : "c6efb17d-c4c2-47b7-9182-222b195bb365",
        "authorId" : "931a9d14-ddc7-40c6-a3a5-d7d7c5157663",
        "body" : "I tried this with bash 3 but can't reproduce...\r\n\r\n@yagonobre , if you apply this patch, does it still fail:\r\n```patch\r\ndiff --git a/hack/lib/util.sh b/hack/lib/util.sh\r\nindex c820206d8e..cef7c94370 100755\r\n--- a/hack/lib/util.sh\r\n+++ b/hack/lib/util.sh\r\n@@ -648,6 +648,7 @@ EOF\r\n\r\n # Determines if docker can be run, failures may simply require that the user be added to the docker group.\r\n function kube::util::ensure_docker_daemon_connectivity {\r\n+  declare -a DOCKER=()\r\n   IFS=\" \" read -ra DOCKER <<< \"${DOCKER_OPTS}\"\r\n   DOCKER=(docker \"${DOCKER[@]}\")\r\n   if ! \"${DOCKER[@]}\" info > /dev/null 2>&1 ; then\r\n```",
        "createdAt" : "2019-03-05T16:23:11Z",
        "updatedAt" : "2019-03-05T16:23:12Z",
        "lastEditedBy" : "931a9d14-ddc7-40c6-a3a5-d7d7c5157663",
        "tags" : [
        ]
      },
      {
        "id" : "01869380-6e23-4345-8f2c-dd8b8bbdaef0",
        "parentId" : "c6efb17d-c4c2-47b7-9182-222b195bb365",
        "authorId" : "931a9d14-ddc7-40c6-a3a5-d7d7c5157663",
        "body" : "Hey, I got it reproduced. A fix (tested on self-compiled bash 3, not on OS X) is available here: https://github.com/kubernetes/kubernetes/pull/74970",
        "createdAt" : "2019-03-05T16:38:13Z",
        "updatedAt" : "2019-03-05T16:38:13Z",
        "lastEditedBy" : "931a9d14-ddc7-40c6-a3a5-d7d7c5157663",
        "tags" : [
        ]
      }
    ],
    "commit" : "f7e1058c980247ff4b94e2332586d0eb4cf94d0e",
    "line" : 211,
    "diffHunk" : "@@ -1,1 +649,653 @@# Determines if docker can be run, failures may simply require that the user be added to the docker group.\nfunction kube::util::ensure_docker_daemon_connectivity {\n  IFS=\" \" read -ra DOCKER <<< \"${DOCKER_OPTS}\"\n  DOCKER=(docker \"${DOCKER[@]}\")\n  if ! \"${DOCKER[@]}\" info > /dev/null 2>&1 ; then"
  },
  {
    "id" : "f1fd3f6a-f67c-495f-90e2-8fc5c5682a33",
    "prId" : 72542,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/72542#pullrequestreview-190102097",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "04cfc24a-150f-4009-88d3-836436a3271e",
        "parentId" : null,
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "this should also then `return`",
        "createdAt" : "2019-01-08T02:24:00Z",
        "updatedAt" : "2019-01-08T19:17:45Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "3fff3a48-eedb-40be-9196-e8463b88b8ae",
        "parentId" : "04cfc24a-150f-4009-88d3-836436a3271e",
        "authorId" : "a32457ee-5d35-4249-84b2-4276603aaffb",
        "body" : "done",
        "createdAt" : "2019-01-08T06:03:46Z",
        "updatedAt" : "2019-01-08T19:17:45Z",
        "lastEditedBy" : "a32457ee-5d35-4249-84b2-4276603aaffb",
        "tags" : [
        ]
      }
    ],
    "commit" : "d6801b821137ed3ba816e202309c2b37bc24061b",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +504,508 @@\n  if [[ -n ${PULL_BASE_SHA:-} ]]; then\n    echo \"${PULL_BASE_SHA}\"\n    return\n  fi"
  },
  {
    "id" : "6e4bec68-8e9e-480d-bd56-02ac7c968b34",
    "prId" : 70718,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/70718#pullrequestreview-172757362",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7c6f72d9-9f65-429e-980f-a2d03c80e626",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "Does this have implications for callers of this function who might find themselves in a new directory? ",
        "createdAt" : "2018-11-07T23:57:33Z",
        "updatedAt" : "2018-11-08T00:01:41Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "18c5c18e-a2ed-4476-9764-fc5fc7072bd1",
        "parentId" : "7c6f72d9-9f65-429e-980f-a2d03c80e626",
        "authorId" : "1256edc4-2c21-4b50-9371-9c0a50744653",
        "body" : "Not that I've found in my testing. It doesn't impact the CWD or environment once the calling bash script itself exits out (either godep-restore or godep-save).",
        "createdAt" : "2018-11-08T00:04:35Z",
        "updatedAt" : "2018-11-08T00:04:35Z",
        "lastEditedBy" : "1256edc4-2c21-4b50-9371-9c0a50744653",
        "tags" : [
        ]
      }
    ],
    "commit" : "c0967edd4a3c588a5abd41e3cb73868538ee4afd",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +457,461 @@  # Otherwise, install forked godep\n  kube::log::status \"Installing godep version ${godep_target_version}\"\n  # Run in hermetic GOPATH\n  kube::golang::setup_env\n  go install k8s.io/kubernetes/third_party/forked/godep"
  },
  {
    "id" : "afee0152-1419-4ebe-bba0-152b46c8d851",
    "prId" : 70718,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/70718#pullrequestreview-179583531",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "883a668c-0539-4e29-af7f-b87fe47945e3",
        "parentId" : null,
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "I think this line is now causing `GOPATH` to  be set to `${KUBE_GOPATH}` (i.e. `${KUBE_ROOT}/_output/local/go`) for the rest of the script invocation.\r\n\r\nThis means that `hack/godep-restore.sh` and `hack/godep-save.sh` are saving into `_output/local/go` now, which is maybe fine (the general recommendation is to run these under `hack/run-in-gopath.sh`), but it's also unexpected.\r\n\r\ncc @apelisse ",
        "createdAt" : "2018-11-28T22:56:11Z",
        "updatedAt" : "2018-11-28T22:56:28Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "0a7d47fb-cf7f-4b33-a9ae-eb01cf4b9b32",
        "parentId" : "883a668c-0539-4e29-af7f-b87fe47945e3",
        "authorId" : "1256edc4-2c21-4b50-9371-9c0a50744653",
        "body" : "Yup, you're right. Fix in https://github.com/kubernetes/kubernetes/pull/71538",
        "createdAt" : "2018-11-29T00:34:19Z",
        "updatedAt" : "2018-11-29T00:34:19Z",
        "lastEditedBy" : "1256edc4-2c21-4b50-9371-9c0a50744653",
        "tags" : [
        ]
      }
    ],
    "commit" : "c0967edd4a3c588a5abd41e3cb73868538ee4afd",
    "line" : 37,
    "diffHunk" : "@@ -1,1 +458,462 @@  kube::log::status \"Installing godep version ${godep_target_version}\"\n  # Run in hermetic GOPATH\n  kube::golang::setup_env\n  go install k8s.io/kubernetes/third_party/forked/godep\n  export KUBE_GODEP=\"${KUBE_GOPATH}/bin/godep\""
  },
  {
    "id" : "1a79f8c3-7301-46c6-8e8b-e5ba9c5ec759",
    "prId" : 67971,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/67971#pullrequestreview-151568287",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7f2cd77b-59a7-4199-acb9-c7208637c99b",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "My litmus test for \"should I write this in shell\" has always been \"once you pass an array to a function, the answer becomes no\".  I don't see an immediately better answer here, but this sets off all sorts of alarms.",
        "createdAt" : "2018-08-31T23:04:41Z",
        "updatedAt" : "2018-09-01T01:01:10Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "9390847bd5b5662beae9288eb91e0bd4c2c0c9a3",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +21,25 @@# arguments: target, item1, item2, item3, ...\n# returns 0 if target is in the given items, 1 otherwise.\nkube::util::array_contains() {\n  local search=\"$1\"\n  local element"
  },
  {
    "id" : "2b2705b0-607c-4315-a96c-df41a2e73279",
    "prId" : 60522,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/60522#pullrequestreview-99877437",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1718f141-c0e0-4111-a88b-5bf2a6bdc699",
        "parentId" : null,
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "accept an array of these?",
        "createdAt" : "2018-02-27T21:53:20Z",
        "updatedAt" : "2018-02-27T21:53:20Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      },
      {
        "id" : "cb2c8a27-4d51-46bd-9feb-0fa2e4e642d5",
        "parentId" : "1718f141-c0e0-4111-a88b-5bf2a6bdc699",
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "eh, easy enhancement if we really need it, but I'd rather not encourage this. :)",
        "createdAt" : "2018-02-27T22:16:57Z",
        "updatedAt" : "2018-02-27T22:16:58Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      }
    ],
    "commit" : "02f0746233a301a40aad1847e9da2a9a67646002",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +474,478 @@  local -r pkg=$1\n  local -r commit=$2\n  local -r extra_constraint=${3:-}\n\n  kube::util::ensure-temp-dir"
  },
  {
    "id" : "47c9328b-df11-415e-9543-fa2219c80693",
    "prId" : 59048,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/59048#pullrequestreview-93189865",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1dd81c3e-2f87-47d8-bcb8-bceb1c45bf0b",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "I really don't think util scrips should be changing PATH like this.  It should be the caller's responsibilityt o make sure GOPATH/bin is in PATH",
        "createdAt" : "2018-02-01T06:21:13Z",
        "updatedAt" : "2018-02-01T06:21:13Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "2ad8ab16-efb8-4ba2-9303-0bb791d0e2ad",
        "parentId" : "1dd81c3e-2f87-47d8-bcb8-bceb1c45bf0b",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "https://github.com/kubernetes/kubernetes/pull/57600/files#diff-fa58360a7125fddab9491c80bb3f1a87\r\n\r\nand\r\n\r\nhttps://github.com/kubernetes/kubernetes/pull/57600/files#diff-85254102210f2a3edc79a4ae67a3448e",
        "createdAt" : "2018-02-01T06:30:34Z",
        "updatedAt" : "2018-02-01T06:30:34Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "dacd4c00-dcd3-48ad-a56f-afc87fb159d8",
        "parentId" : "1dd81c3e-2f87-47d8-bcb8-bceb1c45bf0b",
        "authorId" : "1256edc4-2c21-4b50-9371-9c0a50744653",
        "body" : "This was previously in the script, before your PR (#58975) to vendor godep. The issue is not just it being *in* the path, but also being at the *front* of the path so that we select it first. Note, we aren't exporting this, so it's not persistent past the end of the script.",
        "createdAt" : "2018-02-01T06:32:11Z",
        "updatedAt" : "2018-02-01T06:32:11Z",
        "lastEditedBy" : "1256edc4-2c21-4b50-9371-9c0a50744653",
        "tags" : [
        ]
      },
      {
        "id" : "b9be1d8a-a318-4850-8312-bd3330ed7a2a",
        "parentId" : "1dd81c3e-2f87-47d8-bcb8-bceb1c45bf0b",
        "authorId" : "1256edc4-2c21-4b50-9371-9c0a50744653",
        "body" : "The other option I considered here was setting a temp GOBIN with a well-known location, then calling it directly. I opted for the option that was closer to the revert because this was blocking all presubmits triggered godep verification.",
        "createdAt" : "2018-02-01T06:34:56Z",
        "updatedAt" : "2018-02-01T06:34:56Z",
        "lastEditedBy" : "1256edc4-2c21-4b50-9371-9c0a50744653",
        "tags" : [
        ]
      },
      {
        "id" : "53e8173b-69e7-47a5-80f2-4650ad7317d5",
        "parentId" : "1dd81c3e-2f87-47d8-bcb8-bceb1c45bf0b",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "> It should be the caller's responsibilityt o make sure GOPATH/bin is in PATH\r\n\r\n+1",
        "createdAt" : "2018-02-01T07:52:57Z",
        "updatedAt" : "2018-02-01T07:52:57Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "d58afe63845124afafce06739ff2638e51b29e15",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +449,453 @@  GP=\"$(echo $GOPATH | cut -f1 -d:)\"\n  hash -r # force bash to clear PATH cache\n  PATH=\"${GP}/bin:${PATH}\"\n\n  if [[ \"$(godep version 2>/dev/null)\" != *\"godep ${GODEP_VERSION}\"* ]]; then"
  },
  {
    "id" : "96b9ee75-655b-4f87-ae95-b2498da0148a",
    "prId" : 57600,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/57600#pullrequestreview-108651227",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4763f683-5357-4549-bae6-13316c3c287d",
        "parentId" : null,
        "authorId" : "1256edc4-2c21-4b50-9371-9c0a50744653",
        "body" : "I don't like that there is inconsistency between the way we handle godep, and the way we are handling gazelle/kazel/misspell.\r\n\r\nIt's not enough of a dislike to block this PR that we badly need, but I'd really like if we could unify on a single way (maybe via a helper util function) to install a specific version of a go app from vendor, use it in the context of the script, with as little pollution of the environment as possible. Maybe I'll look at this in a follow up PR?",
        "createdAt" : "2018-03-30T22:01:07Z",
        "updatedAt" : "2018-03-30T22:02:24Z",
        "lastEditedBy" : "1256edc4-2c21-4b50-9371-9c0a50744653",
        "tags" : [
        ]
      },
      {
        "id" : "e47907ca-5620-4058-ac4d-c521a9e3fc6d",
        "parentId" : "4763f683-5357-4549-bae6-13316c3c287d",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "We could set GOBIN in init.sh or something, and then always call $GOBIN/godep\r\n\r\nBut as long as we're checking the version of godep, it shouldn't matter.  I agree it would be cleaner to be consistent.  Our scripts are a mess here.\r\n\r\n```\r\nfunction gobin() {\r\n  echo \"${KUBE_OUTPUT_BINPATH}\"\r\n}\r\n\r\nfunction go_install() {\r\n  GOBIN=\"$(gobin)\" go install \"$@\"\r\n}\r\n\r\nfunction run_private() {\r\n  PATH=\"$(gobin):${PATH}\" \"$@\"\r\n}\r\n\r\nfunction run_global() {\r\n  \"$@\"\r\n}\r\n\r\n\r\ngo_install ./vendor/github.com/tools/godep/\r\nrun_private godep save\r\n```\r\n\r\nalternatively, make teh callers of `ensure_godep_version` pass the path to the godep they are using, and they can pass `${GOBIN}/godep` ?\r\n\r\nAgree it should be a followup",
        "createdAt" : "2018-04-02T15:51:26Z",
        "updatedAt" : "2018-04-02T15:51:27Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "4a5e5547047c3d862b75e3064c494b7714ab6350",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +436,440 @@  kube::log::status \"Installing godep version ${GODEP_VERSION}\"\n  go install ./vendor/github.com/tools/godep/\n  if ! which godep >/dev/null 2>&1; then\n    kube::log::error \"Can't find godep - is your GOPATH 'bin' in your PATH?\"\n    kube::log::error \"  GOPATH: ${GOPATH}\""
  },
  {
    "id" : "090953ba-b2aa-4897-8958-063b602ae809",
    "prId" : 55881,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/55881#pullrequestreview-77138061",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a337bc46-0fa7-4ad8-958f-cf62cc048666",
        "parentId" : null,
        "authorId" : "57a5e7e7-e6d7-467b-96ab-41e4ca978eee",
        "body" : "Could you also add `--retry-delay`? To make sure that all attempts don't fail one after the other if server is down.",
        "createdAt" : "2017-11-16T14:40:23Z",
        "updatedAt" : "2017-11-16T14:40:24Z",
        "lastEditedBy" : "57a5e7e7-e6d7-467b-96ab-41e4ca978eee",
        "tags" : [
        ]
      },
      {
        "id" : "e39d6b17-6dd6-466d-b3d4-34a526dc6675",
        "parentId" : "a337bc46-0fa7-4ad8-958f-cf62cc048666",
        "authorId" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "body" : "LOL @shyamjvs great minds think alike :)",
        "createdAt" : "2017-11-16T14:45:47Z",
        "updatedAt" : "2017-11-16T14:45:47Z",
        "lastEditedBy" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "fc801ed81ec9a06de7c770dfe22c8e545a52e2fc",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +738,742 @@    case \"${kernel}\" in\n      Linux)\n        curl --retry 10 -s -L -o cfssl https://pkg.cfssl.org/R1.2/cfssl_linux-amd64\n        curl --retry 10 -s -L -o cfssljson https://pkg.cfssl.org/R1.2/cfssljson_linux-amd64\n        ;;"
  },
  {
    "id" : "4864a806-1a0c-418a-b35c-791132fb41ff",
    "prId" : 55881,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/55881#pullrequestreview-77136397",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b35cbadf-867b-4a4d-bbc5-1c86ddc832dc",
        "parentId" : null,
        "authorId" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "body" : "wanna add a `--retry-delay 5` as well?",
        "createdAt" : "2017-11-16T14:41:11Z",
        "updatedAt" : "2017-11-16T14:41:11Z",
        "lastEditedBy" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "fc801ed81ec9a06de7c770dfe22c8e545a52e2fc",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +738,742 @@    case \"${kernel}\" in\n      Linux)\n        curl --retry 10 -s -L -o cfssl https://pkg.cfssl.org/R1.2/cfssl_linux-amd64\n        curl --retry 10 -s -L -o cfssljson https://pkg.cfssl.org/R1.2/cfssljson_linux-amd64\n        ;;"
  },
  {
    "id" : "83418770-a0c0-4a43-b6d4-0b88dbaa4fcd",
    "prId" : 54001,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/54001#pullrequestreview-69771692",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "af6ac129-8c5c-4e5e-b112-b15874f1c028",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "looks fine for me.\r\n\r\nAnother more radical idea: just define a function `sed` pointing to the right binary. I.e. not global var, just overloading the sed command. Automatically in init.sh.",
        "createdAt" : "2017-10-17T05:17:48Z",
        "updatedAt" : "2017-10-17T05:17:48Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "7061d971-d3c4-479c-86cf-5151e65a0bcc",
        "parentId" : "af6ac129-8c5c-4e5e-b112-b15874f1c028",
        "authorId" : "1256edc4-2c21-4b50-9371-9c0a50744653",
        "body" : "That is a bit radical! The upside is it’s just there and you don’t have to think about it. The downside is that it’s obscuring what it’s doing from the person writing the script, which makes it harder to diagnose. Possible unintended consequences.",
        "createdAt" : "2017-10-17T05:57:09Z",
        "updatedAt" : "2017-10-17T05:57:09Z",
        "lastEditedBy" : "1256edc4-2c21-4b50-9371-9c0a50744653",
        "tags" : [
        ]
      }
    ],
    "commit" : "f5e8eca20bbf47bd8306b32eb0bcf0568014c5eb",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +860,864 @@#  SED: The name of the gnu-sed binary\n#\nfunction kube::util::ensure-gnu-sed {\n  if LANG=C sed --help 2>&1 | grep -q GNU; then\n    SED=\"sed\""
  },
  {
    "id" : "c7beb1f8-619e-4efc-8c0d-02a6aab8823a",
    "prId" : 51766,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/51766#pullrequestreview-60213083",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ff66c6fa-4931-4ee1-8d7b-95e8246967b4",
        "parentId" : null,
        "authorId" : "1256edc4-2c21-4b50-9371-9c0a50744653",
        "body" : "I like this solution :)",
        "createdAt" : "2017-09-01T17:57:54Z",
        "updatedAt" : "2017-09-29T22:16:26Z",
        "lastEditedBy" : "1256edc4-2c21-4b50-9371-9c0a50744653",
        "tags" : [
        ]
      },
      {
        "id" : "7ccc981d-9998-44b9-9bd7-937647bc1005",
        "parentId" : "ff66c6fa-4931-4ee1-8d7b-95e8246967b4",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "there are others that can do the same - gazelle and kazel popped up.  Later.",
        "createdAt" : "2017-09-01T18:38:36Z",
        "updatedAt" : "2017-09-29T22:16:26Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "ac4ffb1e6e74e5969a8f44fff14872f5b958be33",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +523,527 @@\n  kube::log::status \"Installing godep version ${GODEP_VERSION}\"\n  go install ./vendor/github.com/tools/godep/\n\n  if [[ \"$(godep version 2>/dev/null)\" != *\"godep ${GODEP_VERSION}\"* ]]; then"
  },
  {
    "id" : "7875f05b-e4a3-44de-ae3e-9a01d327154c",
    "prId" : 51134,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/51134#pullrequestreview-57866307",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5e1af815-2c3d-48d8-ae69-3ca965b4d12a",
        "parentId" : null,
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "can you fix the one on L508 too?",
        "createdAt" : "2017-08-22T18:13:11Z",
        "updatedAt" : "2017-08-22T18:21:33Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      }
    ],
    "commit" : "86a5bd6c19551a0727212c07f9d60fe88e17be75",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +540,544 @@  kube::util::ensure-temp-dir\n  mkdir -p \"${KUBE_TEMP}/go/src\"\n  GOPATH=\"${KUBE_TEMP}/go\" go get -d -u \"${pkg}\"\n  (\n    cd \"${KUBE_TEMP}/go/src/${pkg}\""
  },
  {
    "id" : "f40a7a9f-51f2-4f7e-89ca-b15a92cd924d",
    "prId" : 48615,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/48615#pullrequestreview-48659986",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a4b18d51-cd82-4637-9953-e349cfe8185f",
        "parentId" : null,
        "authorId" : "1256edc4-2c21-4b50-9371-9c0a50744653",
        "body" : "I like this 👍 ! Would be useful to add on to the staging godeps dockerized script I've got too.",
        "createdAt" : "2017-07-07T16:57:23Z",
        "updatedAt" : "2017-07-07T19:17:10Z",
        "lastEditedBy" : "1256edc4-2c21-4b50-9371-9c0a50744653",
        "tags" : [
        ]
      }
    ],
    "commit" : "918721078fb19a060826318b4cec090f7bc646d3",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +515,519 @@\n# Checks that the GOPATH is simple, i.e. consists only of one directory, not multiple.\nkube::util::ensure_single_dir_gopath() {\n  if [[ \"${GOPATH}\" == *:* ]]; then\n    echo \"GOPATH must consist of a single directory.\" 1>&2"
  },
  {
    "id" : "4fd53ca2-8493-4ebf-9ef3-c0c74fa6bd59",
    "prId" : 38409,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/38409#pullrequestreview-12450853",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b28dbfad-dbca-4514-80b6-6fd511376860",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "Why not put `${purpose}` in quotes here? ... and remove the quotes in the callers.",
        "createdAt" : "2016-12-12T11:12:51Z",
        "updatedAt" : "2016-12-12T14:30:35Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "3d804719-c738-4151-8842-ab08e829bc60",
        "parentId" : "b28dbfad-dbca-4514-80b6-6fd511376860",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "> Why not put ${purpose} in quotes here? ... and remove the quotes in the callers.\r\n\r\nWe have one case where we need two.",
        "createdAt" : "2016-12-12T12:49:25Z",
        "updatedAt" : "2016-12-12T14:30:35Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "b23097a6-bdd1-47a7-977b-206c9a2010b6",
        "parentId" : "b28dbfad-dbca-4514-80b6-6fd511376860",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "ic. Still pretty ugly.",
        "createdAt" : "2016-12-12T12:56:25Z",
        "updatedAt" : "2016-12-12T14:30:35Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "86ed1687-f9b1-4f28-a7ed-b6192ce4103e",
        "parentId" : "b28dbfad-dbca-4514-80b6-6fd511376860",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "> ic. Still pretty ugly.\r\n\r\nI think we prove working here and then try to get cleaner integration in something like mini-kube.",
        "createdAt" : "2016-12-12T13:04:54Z",
        "updatedAt" : "2016-12-12T14:30:35Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "79a956c197ca0a06a90af829ab7aff66de45a087",
    "line" : null,
    "diffHunk" : "@@ -1,1 +484,488 @@    rm -f \"${dest_dir}/${id}-ca.crt\" \"${dest_dir}/${id}-ca.key\"\n    ${OPENSSL_BIN} req -x509 -sha256 -new -nodes -days 365 -newkey rsa:2048 -keyout \"${dest_dir}/${id}-ca.key\" -out \"${dest_dir}/${id}-ca.crt\" -subj \"/C=xx/ST=x/L=x/O=x/OU=x/CN=ca/emailAddress=x/\"\n    echo '{\"signing\":{\"default\":{\"expiry\":\"43800h\",\"usages\":[\"signing\",\"key encipherment\",${purpose}]}}}' > \"${dest_dir}/${id}-ca-config.json\"\nEOF\n}"
  },
  {
    "id" : "b9914c41-e4f6-4b5f-b928-6662b30154c8",
    "prId" : 30823,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c6e26a9b-a4b1-44e3-b0d0-bd3b23bf9526",
        "parentId" : null,
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "This function will become a lot simpler when we have swagger 2.0.\nAll logic to determine which paths to fetch will be gone. Just fetch /swagger.json\ncc @mbohlool \n",
        "createdAt" : "2016-08-17T22:02:57Z",
        "updatedAt" : "2016-08-19T00:19:41Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      },
      {
        "id" : "fe04a3f8-7f69-4429-a76e-092268f21c82",
        "parentId" : "c6e26a9b-a4b1-44e3-b0d0-bd3b23bf9526",
        "authorId" : "7f521a0d-2137-47c7-a390-3b4bdcffe306",
        "body" : "ack.\n",
        "createdAt" : "2016-08-18T20:42:12Z",
        "updatedAt" : "2016-08-19T00:19:41Z",
        "lastEditedBy" : "7f521a0d-2137-47c7-a390-3b4bdcffe306",
        "tags" : [
        ]
      }
    ],
    "commit" : "d76cdc748224ecb0fe62d30c8f15c24110384247",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +333,337 @@# SWAGGER_ROOT_DIR: Root dir where we want to to save the fetched spec.\n# VERSIONS: Array of group versions to include in swagger spec.\nkube::util::fetch-swagger-spec() {\n  for ver in ${VERSIONS}; do\n    # fetch the swagger spec for each group version."
  },
  {
    "id" : "aabe5dd5-8680-4b03-8e46-81daeca96a17",
    "prId" : 26820,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e3d2a156-7f12-4b2c-b5bc-cd609fb6ee22",
        "parentId" : null,
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "Could we put .generated_docs into .gitignore?\n",
        "createdAt" : "2016-06-03T23:50:42Z",
        "updatedAt" : "2016-06-09T00:25:33Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "dea2b57f-07df-4c4a-93e3-094ba28a6b97",
        "parentId" : "e3d2a156-7f12-4b2c-b5bc-cd609fb6ee22",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Do you mean just .generated_docs or its contents?\n",
        "createdAt" : "2016-06-03T23:55:21Z",
        "updatedAt" : "2016-06-09T00:25:33Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "1d25410c3b4a412bdb3af52a4d855297554121b8",
    "line" : null,
    "diffHunk" : "@@ -1,1 +229,233 @@# must be set.\nkube::util::remove-gen-docs() {\n  if [ -e \"${KUBE_ROOT}/.generated_docs\" ]; then\n    # remove all of the old docs; we don't want to check them in.\n    while read file; do"
  },
  {
    "id" : "36d30f4f-a7c6-4b40-afcc-3a60a7fa9150",
    "prId" : 14392,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "36f18652-5037-4ba7-ba42-2287127a94e8",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "We should probably move this package into apis/unversioned. :)\n",
        "createdAt" : "2015-09-25T17:53:33Z",
        "updatedAt" : "2015-09-25T17:53:33Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "d599d07bc3fa171f2816694c693485db507e27a0",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +261,265 @@      ;;\n    unversioned)\n      echo \"api/unversioned\"\n      ;;\n    *)"
  },
  {
    "id" : "0af6cf39-5b40-4641-a50f-e2699e836a39",
    "prId" : 7228,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7ec70c95-fc8b-4e33-af1e-d089dbc73e4a",
        "parentId" : null,
        "authorId" : "fd5eb1fb-f30a-4735-908c-944e87d99845",
        "body" : "Just one thing is I think you could improve documentation here to indicate what $3 is exactly. Some examples might help. Though now it's fairly clear from the code, so I think someone reading the code will understand what the intent is here.\n",
        "createdAt" : "2015-04-23T21:28:55Z",
        "updatedAt" : "2015-04-23T21:54:09Z",
        "lastEditedBy" : "fd5eb1fb-f30a-4735-908c-944e87d99845",
        "tags" : [
        ]
      }
    ],
    "commit" : "a8e2f6e9c83a9b5d3d31755338c81606af78267b",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +122,126 @@# Takes a binary to run $1 and then copies the results to $2.\n# If the generated and original files are the same after filtering lines\n# that match $3, copy is skipped.\nkube::util::gen-doc() {\n  local cmd=\"$1\""
  }
]