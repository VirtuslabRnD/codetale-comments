[
  {
    "id" : "053a878d-e027-46da-b4c4-18ec1c6b1614",
    "prId" : 102323,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/102323#pullrequestreview-668985811",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "059bcd1b-94f3-4ed4-96bf-b82ca83c23e9",
        "parentId" : null,
        "authorId" : "36b049e7-5c64-46e2-809a-9067732f0056",
        "body" : "We require a new kube-cross version for this, see: https://github.com/kubernetes/release/pull/2086",
        "createdAt" : "2021-05-26T12:59:38Z",
        "updatedAt" : "2021-05-26T12:59:38Z",
        "lastEditedBy" : "36b049e7-5c64-46e2-809a-9067732f0056",
        "tags" : [
        ]
      }
    ],
    "commit" : "39d9e98a6f9e51a1b2951055bbd60d6161715cd9",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +415,419 @@      \"linux/386\")\n        export CGO_ENABLED=1\n        export CC=${KUBE_LINUX_386_CC:-i686-linux-gnu-gcc}\n        ;;\n      \"linux/arm\")"
  },
  {
    "id" : "c35de14a-2ce2-4b27-8ef6-0b00854cb94f",
    "prId" : 99655,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/99655#pullrequestreview-602245097",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0bc7ea36-4861-4db1-aa81-7e4b30c929f1",
        "parentId" : null,
        "authorId" : "3fde4c0c-f2fd-4cd3-b1e2-b274bd6fc0fa",
        "body" : "```suggestion\r\n  minimum_go_version=go1.16\r\n```",
        "createdAt" : "2021-03-02T20:01:07Z",
        "updatedAt" : "2021-03-02T20:13:16Z",
        "lastEditedBy" : "3fde4c0c-f2fd-4cd3-b1e2-b274bd6fc0fa",
        "tags" : [
        ]
      },
      {
        "id" : "d87d11a6-3e55-4a35-a1aa-16ca564dcab4",
        "parentId" : "0bc7ea36-4861-4db1-aa81-7e4b30c929f1",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "the comparison handles go1.16 satisfying go1.16.0, leaving it fully specified seems preferable to me",
        "createdAt" : "2021-03-02T20:13:46Z",
        "updatedAt" : "2021-03-02T20:13:46Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "f9bfbfd7-355a-4dcb-8f7f-7043a353f17c",
        "parentId" : "0bc7ea36-4861-4db1-aa81-7e4b30c929f1",
        "authorId" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "body" : "go1.16.0 is not a valid go version technically, because go. https://github.com/golang/go/issues/27255#issuecomment-424812737",
        "createdAt" : "2021-03-02T20:19:12Z",
        "updatedAt" : "2021-03-02T20:19:44Z",
        "lastEditedBy" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "tags" : [
        ]
      },
      {
        "id" : "30bf4c8b-14b9-4c79-8541-c1993da39c63",
        "parentId" : "0bc7ea36-4861-4db1-aa81-7e4b30c929f1",
        "authorId" : "3fde4c0c-f2fd-4cd3-b1e2-b274bd6fc0fa",
        "body" : "From [Slack](https://kubernetes.slack.com/archives/CHGFYJVAN/p1614716625058500?thread_ts=1614712814.055800&cid=CHGFYJVAN):\r\n\r\njustaugustus (he/him)  5 minutes ago\r\n> @liggitt -- hmmm, the review was more about the fact that:\r\n\r\n```console\r\n$ go version\r\ngo version go1.16 linux/amd64\r\n```\r\n\r\njustaugustus (he/him)  5 minutes ago\r\n> i.e., .0 is elided in the upstream official version\r\n\r\nliggitt  3 minutes ago\r\n\r\n> understood, but the `echo -e \"${minimum_go_version}\\n${go_version[2]}\" | sort -s -t. -k 1,1 -k 2,2n -k 3,3n | head -n1` comparison allows an actual go version of go1.16 to pass the minimum_go_version=go1.16.0 requirement",
        "createdAt" : "2021-03-02T20:31:16Z",
        "updatedAt" : "2021-03-02T20:31:16Z",
        "lastEditedBy" : "3fde4c0c-f2fd-4cd3-b1e2-b274bd6fc0fa",
        "tags" : [
        ]
      }
    ],
    "commit" : "5e9189289e0425db31e4d877161be2e1e097fc7a",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +480,484 @@  IFS=\" \" read -ra go_version <<< \"$(GOFLAGS='' go version)\"\n  local minimum_go_version\n  minimum_go_version=go1.16.0\n  if [[ \"${minimum_go_version}\" != $(echo -e \"${minimum_go_version}\\n${go_version[2]}\" | sort -s -t. -k 1,1 -k 2,2n -k 3,3n | head -n1) && \"${go_version[2]}\" != \"devel\" ]]; then\n    kube::log::usage_from_stdin <<EOF"
  },
  {
    "id" : "35b365c0-b2d0-4482-8622-c05dfa96f176",
    "prId" : 98508,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/98508#pullrequestreview-581906399",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "02a59909-d1c1-4508-b089-f7b67176a52f",
        "parentId" : null,
        "authorId" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "body" : "orthogonal to this PR but leaving a note somewhere: I still think it's a bit odd that we \"globally\" toggle CGO_ENABLED=1 instead of per-binary for the binaries where it matters to us. I imagine we have a lot of binaries in the build scripts where the default would be suitable (e.g. linters).",
        "createdAt" : "2021-02-03T01:07:45Z",
        "updatedAt" : "2021-02-03T01:07:45Z",
        "lastEditedBy" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "tags" : [
        ]
      }
    ],
    "commit" : "f19f22b43edf498444817a0052b71d6084e68db9",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +421,425 @@  ccenv=$(echo \"$platform\" | awk -F/ '{print \"KUBE_\" toupper($1) \"_\" toupper($2) \"_CC\"}')\n  if [ -n \"${!ccenv-}\" ]; then \n    export CGO_ENABLED=1\n    export CC=\"${!ccenv}\"\n  fi"
  },
  {
    "id" : "eccfcc48-661a-4c1b-8b47-5dbf6d70dfba",
    "prId" : 97743,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/97743#pullrequestreview-603760045",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c4956bb4-6178-4e23-a4fd-0759060005a0",
        "parentId" : null,
        "authorId" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "body" : "can we add a comment justifying this?",
        "createdAt" : "2021-03-03T01:45:45Z",
        "updatedAt" : "2021-03-03T01:50:17Z",
        "lastEditedBy" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "tags" : [
        ]
      },
      {
        "id" : "84d94bc2-e116-4984-b4c8-2da3da0f2526",
        "parentId" : "c4956bb4-6178-4e23-a4fd-0759060005a0",
        "authorId" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "body" : "Done! thanks.",
        "createdAt" : "2021-03-03T01:50:31Z",
        "updatedAt" : "2021-03-03T01:50:31Z",
        "lastEditedBy" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "tags" : [
        ]
      },
      {
        "id" : "fdc17324-734c-4cb8-835e-e48eb46e5b5c",
        "parentId" : "c4956bb4-6178-4e23-a4fd-0759060005a0",
        "authorId" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "body" : "er, but why not do this for all platforms? I think that's still missing.",
        "createdAt" : "2021-03-03T06:56:49Z",
        "updatedAt" : "2021-03-03T06:56:49Z",
        "lastEditedBy" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "tags" : [
        ]
      },
      {
        "id" : "ab6a03f1-ee95-466c-9583-e9815606d424",
        "parentId" : "c4956bb4-6178-4e23-a4fd-0759060005a0",
        "authorId" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "body" : "Ping ðŸ™ƒ",
        "createdAt" : "2021-03-03T16:03:18Z",
        "updatedAt" : "2021-03-03T16:03:18Z",
        "lastEditedBy" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "tags" : [
        ]
      },
      {
        "id" : "71b9d0be-3714-4c6e-b0cb-c8328195cbc6",
        "parentId" : "c4956bb4-6178-4e23-a4fd-0759060005a0",
        "authorId" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "body" : "@BenTheElder limited by `kube-cross`, let's roll this out for arm64 (linux + darwin) and then we can hit the other arch(es)",
        "createdAt" : "2021-03-03T20:48:03Z",
        "updatedAt" : "2021-03-03T20:48:03Z",
        "lastEditedBy" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "tags" : [
        ]
      },
      {
        "id" : "9f60888d-0159-4474-bf88-644243c098c3",
        "parentId" : "c4956bb4-6178-4e23-a4fd-0759060005a0",
        "authorId" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "body" : "ACK.",
        "createdAt" : "2021-03-04T06:57:16Z",
        "updatedAt" : "2021-03-04T06:57:16Z",
        "lastEditedBy" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "tags" : [
        ]
      },
      {
        "id" : "5af1eb37-b3ea-49e9-b56e-57951591c708",
        "parentId" : "c4956bb4-6178-4e23-a4fd-0759060005a0",
        "authorId" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "body" : "we should probably also update the makefile docs / help text, but that can be a follow up",
        "createdAt" : "2021-03-04T06:57:46Z",
        "updatedAt" : "2021-03-04T06:57:46Z",
        "lastEditedBy" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "tags" : [
        ]
      }
    ],
    "commit" : "f719624654c68d143cad4e4af2f21cca0bfde8fd",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +210,214 @@  elif [[ \"${KUBE_FASTBUILD:-}\" == \"true\" ]]; then\n    host_arch=$(kube::util::host_arch)\n    if [[ \"${host_arch}\" != \"amd64\" && \"${host_arch}\" != \"arm64\" ]]; then\n      # on any platform other than amd64 and arm64, we just default to amd64\n      host_arch=\"amd64\""
  },
  {
    "id" : "941ff8b0-81d1-4d37-8011-b5df2d02f86c",
    "prId" : 92438,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/92438#pullrequestreview-436192693",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "799d14f1-49e6-4168-b63e-5693764b90a4",
        "parentId" : null,
        "authorId" : "3fde4c0c-f2fd-4cd3-b1e2-b274bd6fc0fa",
        "body" : "Should this always be the latest go version we've bumped to?\r\nIf so, can you add an entry in build/dependencies.yaml for this path/regex?",
        "createdAt" : "2020-06-23T19:18:24Z",
        "updatedAt" : "2020-06-23T23:05:01Z",
        "lastEditedBy" : "3fde4c0c-f2fd-4cd3-b1e2-b274bd6fc0fa",
        "tags" : [
        ]
      },
      {
        "id" : "d565d82d-1630-4374-9958-4a6b98e3a384",
        "parentId" : "799d14f1-49e6-4168-b63e-5693764b90a4",
        "authorId" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "body" : "it should, BUT that would require the image bump to go in before the PR, FWIW",
        "createdAt" : "2020-06-23T19:24:23Z",
        "updatedAt" : "2020-06-23T23:05:01Z",
        "lastEditedBy" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "tags" : [
        ]
      },
      {
        "id" : "40d6587e-6a6e-4144-ab6b-b01d8fecfa04",
        "parentId" : "799d14f1-49e6-4168-b63e-5693764b90a4",
        "authorId" : "3fde4c0c-f2fd-4cd3-b1e2-b274bd6fc0fa",
        "body" : "Ooof. Chicken and egg! Thanks for clarifying, @BenTheElder!\r\n/hold cancel",
        "createdAt" : "2020-06-23T19:42:16Z",
        "updatedAt" : "2020-06-23T23:05:01Z",
        "lastEditedBy" : "3fde4c0c-f2fd-4cd3-b1e2-b274bd6fc0fa",
        "tags" : [
        ]
      },
      {
        "id" : "245150ca-872a-4fae-9d5e-ffd4cede9425",
        "parentId" : "799d14f1-49e6-4168-b63e-5693764b90a4",
        "authorId" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "body" : "we still have this chicken and egg either way, the question is just which repo we want to merge first :man_shrugging: ",
        "createdAt" : "2020-06-23T22:07:42Z",
        "updatedAt" : "2020-06-23T23:05:01Z",
        "lastEditedBy" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "tags" : [
        ]
      }
    ],
    "commit" : "d9bb0b8ee18fe68654ef1a68611f905859b3b7bc",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +469,473 @@  IFS=\" \" read -ra go_version <<< \"$(go version)\"\n  local minimum_go_version\n  minimum_go_version=go1.14.4\n  if [[ \"${minimum_go_version}\" != $(echo -e \"${minimum_go_version}\\n${go_version[2]}\" | sort -s -t. -k 1,1 -k 2,2n -k 3,3n | head -n1) && \"${go_version[2]}\" != \"devel\" ]]; then\n    kube::log::usage_from_stdin <<EOF"
  },
  {
    "id" : "99832622-e102-402e-a0f4-7a6f35f58acf",
    "prId" : 76974,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/76974#pullrequestreview-230884854",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7c34a906-a0aa-4a99-94ce-afc9ba3bbf60",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "Can you document which global variables this configures (and that it makes them read-only) ",
        "createdAt" : "2019-04-25T18:33:33Z",
        "updatedAt" : "2019-04-25T21:05:56Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "b77efb2c-c3c8-49ed-86e4-9a925dc825b4",
        "parentId" : "7c34a906-a0aa-4a99-94ce-afc9ba3bbf60",
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "And variables it depends on, e.g., `KUBE_BUILD_PLATFORMS` and `KUBE_FASTBUILD`, etc.",
        "createdAt" : "2019-04-25T20:11:34Z",
        "updatedAt" : "2019-04-25T21:05:56Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "b9740830-51eb-402c-86fd-6ab87478675c",
        "parentId" : "7c34a906-a0aa-4a99-94ce-afc9ba3bbf60",
        "authorId" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "body" : "Done",
        "createdAt" : "2019-04-25T20:59:08Z",
        "updatedAt" : "2019-04-25T21:05:56Z",
        "lastEditedBy" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "tags" : [
        ]
      },
      {
        "id" : "e01ebe68-4958-4e7e-b2e5-1a3000e51bb4",
        "parentId" : "7c34a906-a0aa-4a99-94ce-afc9ba3bbf60",
        "authorId" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "body" : "Will add dependencies too",
        "createdAt" : "2019-04-25T20:59:44Z",
        "updatedAt" : "2019-04-25T21:05:56Z",
        "lastEditedBy" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "tags" : [
        ]
      },
      {
        "id" : "eca9d3e9-c55b-4b0c-9833-3b19a91c6405",
        "parentId" : "7c34a906-a0aa-4a99-94ce-afc9ba3bbf60",
        "authorId" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "body" : "Done",
        "createdAt" : "2019-04-25T21:06:02Z",
        "updatedAt" : "2019-04-25T21:06:02Z",
        "lastEditedBy" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "tags" : [
        ]
      }
    ],
    "commit" : "dcee810a3f544cd0669c252945b29bfeedcd119b",
    "line" : 108,
    "diffHunk" : "@@ -1,1 +164,168 @@# The configured vars will only contain platforms allowed by the\n# KUBE_SUPPORTED* vars at the top of this file.\nkube::golang::setup_platforms() {\n  if [[ -n \"${KUBE_BUILD_PLATFORMS:-}\" ]]; then\n    # KUBE_BUILD_PLATFORMS needs to be read into an array before the next"
  },
  {
    "id" : "fe775016-ebc2-4804-9e32-a1a5a3d5ffa0",
    "prId" : 75751,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/75751#pullrequestreview-219247315",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1b7a5df4-61e3-4240-acfe-263a3b33e969",
        "parentId" : null,
        "authorId" : "5de211e4-9744-455e-9548-1a8e70ed1b2e",
        "body" : "FYI @Katharine I'm having one of those \"how did this ever work at all?\" moments...\r\n\r\nWe used to return the output of `array_contains`, not its exit code.  But `array_contains` never outputs anything, it just returns.  So we probably should have been returning its exit code all along?",
        "createdAt" : "2019-03-27T01:44:17Z",
        "updatedAt" : "2019-03-27T01:50:54Z",
        "lastEditedBy" : "5de211e4-9744-455e-9548-1a8e70ed1b2e",
        "tags" : [
        ]
      },
      {
        "id" : "b9d11412-4c74-4c07-9cfc-d45da9927694",
        "parentId" : "1b7a5df4-61e3-4240-acfe-263a3b33e969",
        "authorId" : "9cdcc8e5-3ca5-47d7-abb4-ba9642e6b85a",
        "body" : "This worked because in the absence of any other argument `return` returns the exit code of the last command. Since `$(kube::util::array_contains)` evaluated to an empty string and was unquoted, `return` effectively had no arguments. The subshell correctly propagates the exit code from its last command as its own exit code, and so the effect was equivalent to calling `kube::util::array_contains`, followed by `return`, causing us to exit with the expected result.\r\n\r\nWhen the quotes were added, we were suddenly passing the empty string to `return`, which no longer defaulted to returning the last argument, breaking everything.",
        "createdAt" : "2019-03-27T02:48:03Z",
        "updatedAt" : "2019-03-27T04:04:32Z",
        "lastEditedBy" : "9cdcc8e5-3ca5-47d7-abb4-ba9642e6b85a",
        "tags" : [
        ]
      }
    ],
    "commit" : "0833a9cc38671e327a2e3c89b294ff0529f1f112",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +498,502 @@kube::golang::is_instrumented_package() {\n  kube::util::array_contains \"$1\" \"${KUBE_COVERAGE_INSTRUMENTED_PACKAGES[@]}\"\n  return $?\n}\n"
  },
  {
    "id" : "35433da1-84e7-458c-a0ec-c6eb0cb412d0",
    "prId" : 75158,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/75158#pullrequestreview-212144189",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "352f7fd3-60ac-45bb-a904-37f55a3cc755",
        "parentId" : null,
        "authorId" : "1d2372e4-a834-465f-a6f1-aa973013751c",
        "body" : "```\r\n  cd \"${KUBE_GOPATH}/src/${KUBE_GO_PACKAGE}/${subdir}\"\r\n  ^-- SC2164: Use 'cd ... || exit' or 'cd ... || return' in case cd fails.\r\n```",
        "createdAt" : "2019-03-08T05:24:41Z",
        "updatedAt" : "2019-03-22T04:32:42Z",
        "lastEditedBy" : "1d2372e4-a834-465f-a6f1-aa973013751c",
        "tags" : [
        ]
      }
    ],
    "commit" : "a52af3a9d53b523c80bb038a8f28d10ec68baa03",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +429,433 @@  local subdir\n  subdir=$(kube::realpath . | sed \"s|${KUBE_ROOT}||\")\n  cd \"${KUBE_GOPATH}/src/${KUBE_GO_PACKAGE}/${subdir}\" || return 1\n\n  # Set GOROOT so binaries that parse code can work properly."
  },
  {
    "id" : "16b21c63-39be-4ccd-b799-0125b17c1cdc",
    "prId" : 75158,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/75158#pullrequestreview-212144330",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4a386cea-9612-43f7-b259-b41118c9547d",
        "parentId" : null,
        "authorId" : "1d2372e4-a834-465f-a6f1-aa973013751c",
        "body" : "```\r\nV=2 kube::log::info \"Building ${uncovered[@]} without coverage...\"\r\n                              ^-------------^ SC2145: Argument mixes string and array. Use * or separate argument.\r\n```",
        "createdAt" : "2019-03-08T05:25:40Z",
        "updatedAt" : "2019-03-22T04:32:42Z",
        "lastEditedBy" : "1d2372e4-a834-465f-a6f1-aa973013751c",
        "tags" : [
        ]
      }
    ],
    "commit" : "a52af3a9d53b523c80bb038a8f28d10ec68baa03",
    "line" : 88,
    "diffHunk" : "@@ -1,1 +578,582 @@    done\n    if [[ \"${#uncovered[@]}\" != 0 ]]; then\n      V=2 kube::log::info \"Building ${uncovered[*]} without coverage...\"\n      go install \"${build_args[@]}\" \"${uncovered[@]}\"\n    else"
  },
  {
    "id" : "407c4bcc-0a3c-4ead-85fb-39ce6e12ca60",
    "prId" : 75158,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/75158#pullrequestreview-212144508",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "15309ab5-3aa6-474b-8e28-58ae3cdb7b8e",
        "parentId" : null,
        "authorId" : "1d2372e4-a834-465f-a6f1-aa973013751c",
        "body" : "```\r\nbinaries=($(kube::golang::binaries_from_targets \"${targets[@]}\"))\r\n          ^-- SC2207: Prefer mapfile or read -a to split command output (or quote to avoid splitting).\r\n```",
        "createdAt" : "2019-03-08T05:26:52Z",
        "updatedAt" : "2019-03-22T04:32:42Z",
        "lastEditedBy" : "1d2372e4-a834-465f-a6f1-aa973013751c",
        "tags" : [
        ]
      }
    ],
    "commit" : "a52af3a9d53b523c80bb038a8f28d10ec68baa03",
    "line" : 152,
    "diffHunk" : "@@ -1,1 +720,724 @@\n    local binaries\n    while IFS=\"\" read -r binary; do binaries+=(\"$binary\"); done < <(kube::golang::binaries_from_targets \"${targets[@]}\")\n\n    local parallel=false"
  },
  {
    "id" : "62cd70c3-5c1d-47ca-b35f-b2933a3413ae",
    "prId" : 75158,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/75158#pullrequestreview-212144591",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "be06b64b-6f0e-4b21-8998-8e65a0750a9e",
        "parentId" : null,
        "authorId" : "1d2372e4-a834-465f-a6f1-aa973013751c",
        "body" : "```\r\nwait ${job} || let \"fails+=1\"\r\n     ^----^ SC2086: Double quote to prevent globbing and word splitting.\r\n               ^-----------^ SC2219: Instead of 'let expr', prefer (( expr )) .\r\n```",
        "createdAt" : "2019-03-08T05:27:28Z",
        "updatedAt" : "2019-03-22T04:32:42Z",
        "lastEditedBy" : "1d2372e4-a834-465f-a6f1-aa973013751c",
        "tags" : [
        ]
      }
    ],
    "commit" : "a52af3a9d53b523c80bb038a8f28d10ec68baa03",
    "line" : 169,
    "diffHunk" : "@@ -1,1 +749,753 @@      local fails=0\n      for job in $(jobs -p); do\n        wait \"${job}\" || (( fails+=1 ))\n      done\n"
  },
  {
    "id" : "aba33648-9f9b-440a-a8ba-63f24663e6fa",
    "prId" : 75158,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/75158#pullrequestreview-218642894",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "39e9875a-7ff3-42f7-b75a-7c0af0248eb7",
        "parentId" : null,
        "authorId" : "f46daf11-7000-4650-ae5b-dd25c29b4e29",
        "body" : "This breaks build on MacOS. See [this PR](https://github.com/kubernetes/kubernetes/pull/75668) for further details.",
        "createdAt" : "2019-03-25T13:17:35Z",
        "updatedAt" : "2019-03-25T13:17:36Z",
        "lastEditedBy" : "f46daf11-7000-4650-ae5b-dd25c29b4e29",
        "tags" : [
        ]
      },
      {
        "id" : "78158c8b-9bf1-442b-8405-f1605378ceb4",
        "parentId" : "39e9875a-7ff3-42f7-b75a-7c0af0248eb7",
        "authorId" : "1d2372e4-a834-465f-a6f1-aa973013751c",
        "body" : "Thanks for the notice.",
        "createdAt" : "2019-03-26T00:12:20Z",
        "updatedAt" : "2019-03-26T00:12:20Z",
        "lastEditedBy" : "1d2372e4-a834-465f-a6f1-aa973013751c",
        "tags" : [
        ]
      }
    ],
    "commit" : "a52af3a9d53b523c80bb038a8f28d10ec68baa03",
    "line" : 105,
    "diffHunk" : "@@ -1,1 +606,610 @@      nonstatics+=(\"${binary}\")\n    fi\n  done\n\n  local -a build_args"
  },
  {
    "id" : "590ea076-3ab0-4644-9805-2df29f5e1300",
    "prId" : 75158,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/75158#pullrequestreview-219225471",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ed4e2872-eeff-4535-b4bc-e5a8fd7f3743",
        "parentId" : null,
        "authorId" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "body" : "this should not be a string",
        "createdAt" : "2019-03-27T00:11:48Z",
        "updatedAt" : "2019-03-27T00:11:48Z",
        "lastEditedBy" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "tags" : [
        ]
      },
      {
        "id" : "dd643219-5a2b-41be-aee3-d54a9346bc1f",
        "parentId" : "ed4e2872-eeff-4535-b4bc-e5a8fd7f3743",
        "authorId" : "1d2372e4-a834-465f-a6f1-aa973013751c",
        "body" : "@BenTheElder Thanks your comment. array_contains returns 0 or 1. So, this should not be a string. I will see your PR https://github.com/kubernetes/kubernetes/pull/75751",
        "createdAt" : "2019-03-27T00:44:27Z",
        "updatedAt" : "2019-03-27T00:44:27Z",
        "lastEditedBy" : "1d2372e4-a834-465f-a6f1-aa973013751c",
        "tags" : [
        ]
      }
    ],
    "commit" : "a52af3a9d53b523c80bb038a8f28d10ec68baa03",
    "line" : 48,
    "diffHunk" : "@@ -1,1 +497,501 @@# NB: this ignores whether coverage is globally enabled or not.\nkube::golang::is_instrumented_package() {\n  return \"$(kube::util::array_contains \"$1\" \"${KUBE_COVERAGE_INSTRUMENTED_PACKAGES[@]}\")\"\n}\n"
  },
  {
    "id" : "2c53b21e-f62e-4ad5-95be-9f6bbed4cb94",
    "prId" : 71524,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/71524#pullrequestreview-179537480",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "955ece70-05ec-4692-be41-f19eaa50b236",
        "parentId" : null,
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "I don't know if we still need this. :man_shrugging: ",
        "createdAt" : "2018-11-28T21:57:31Z",
        "updatedAt" : "2018-11-29T18:48:11Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "0cccca28-17b0-40f4-b2c4-faf41f9f3d74",
        "parentId" : "955ece70-05ec-4692-be41-f19eaa50b236",
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "we do.",
        "createdAt" : "2018-11-28T21:58:12Z",
        "updatedAt" : "2018-11-29T18:48:11Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      }
    ],
    "commit" : "e3fac7690b4334445d8c4f25439471d6c696afac",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +364,368 @@  # glob from descending further into the tree and hitting the loop.\n  cat >\"${KUBE_GOPATH}/BUILD.bazel\" <<EOF\n# This dummy BUILD file prevents Bazel from trying to descend through the\n# infinite loop created by the symlink at\n# ${go_pkg_dir}"
  },
  {
    "id" : "1fd5aaff-36e0-4860-9c00-4f2de2f17726",
    "prId" : 71524,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/71524#pullrequestreview-179988423",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0698e284-3a8d-4d78-afd4-0b1fe8adca48",
        "parentId" : null,
        "authorId" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "body" : "upstream doc here: https://docs.bazel.build/versions/master/guide.html#target-patterns",
        "createdAt" : "2018-11-29T20:01:13Z",
        "updatedAt" : "2018-11-29T20:01:13Z",
        "lastEditedBy" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "tags" : [
        ]
      }
    ],
    "commit" : "e3fac7690b4334445d8c4f25439471d6c696afac",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +358,362 @@  # the symlink loop created in this function, so create this special file which\n  # tells bazel not to follow the symlink.\n  touch \"${go_pkg_basedir}/DONT_FOLLOW_SYMLINKS_WHEN_TRAVERSING_THIS_DIRECTORY_VIA_A_RECURSIVE_TARGET_PATTERN\"\n  # Additionally, the //:package-srcs glob recursively includes all\n  # subdirectories, and similarly fails due to the symlink loop. By creating a"
  },
  {
    "id" : "e1f97b67-6906-46fa-9f8d-4cddfee953e6",
    "prId" : 69481,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/69481#pullrequestreview-163874680",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "517e6a4a-7553-411a-9d04-0dd73cd1ccac",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "I really really do not like the implicit passing of this variable to `build_some_binaries`.  I know this is just a cherry-pick, so I won't block it here, but I feel I have to object to this sort of thing.",
        "createdAt" : "2018-10-11T15:23:11Z",
        "updatedAt" : "2018-10-11T15:24:43Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "efe8f8684c333ba4ca7764a7e72adc0b8c62a706",
    "line" : 127,
    "diffHunk" : "@@ -1,1 +568,572 @@  local -a build_args\n  if [[ \"${#statics[@]}\" != 0 ]]; then\n    build_args=(\n      -installsuffix static\n      ${goflags:+\"${goflags[@]}\"}"
  },
  {
    "id" : "28b3f9e3-ff3d-43fc-aa67-fdf0eb63ffaf",
    "prId" : 69386,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/69386#pullrequestreview-161395582",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6015b883-904c-45ad-8336-95b1644c9a34",
        "parentId" : null,
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "hm, lots of verify checks fail unless verify is bumped first, but bumping verify first means that any other PR will fail (due to gofmt failures).",
        "createdAt" : "2018-10-03T23:04:08Z",
        "updatedAt" : "2018-10-05T23:06:13Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      }
    ],
    "commit" : "ee3e404122955a58f40a250ecd39e472c10f8c62",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +361,365 @@  IFS=\" \" read -ra go_version <<< \"$(go version)\"\n  local minimum_go_version\n  minimum_go_version=go1.11.1\n  if [[ \"${minimum_go_version}\" != $(echo -e \"${minimum_go_version}\\n${go_version[2]}\" | sort -s -t. -k 1,1 -k 2,2n -k 3,3n | head -n1) && \"${go_version[2]}\" != \"devel\" ]]; then\n    kube::log::usage_from_stdin <<EOF"
  },
  {
    "id" : "7a59dda9-f8c5-40b3-b83e-4370a26e76f4",
    "prId" : 68096,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/68096#pullrequestreview-151552821",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6d0199f9-a9cb-4c16-80d4-6a7ae5acf923",
        "parentId" : null,
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "I'm not sure this list belongs in this file. why not just keep it in build/lib/release.sh, where it's used?",
        "createdAt" : "2018-08-31T17:41:17Z",
        "updatedAt" : "2018-08-31T21:32:59Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "83c30b0c-8213-486f-87fd-db445eb80790",
        "parentId" : "6d0199f9-a9cb-4c16-80d4-6a7ae5acf923",
        "authorId" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "body" : "it seemed consistent with the rest of the target lists. it is also slightly awkward though that we need to keep it in sync with the cmd->image per arch method, but that's already true for the bazel build.",
        "createdAt" : "2018-08-31T21:24:29Z",
        "updatedAt" : "2018-08-31T21:32:59Z",
        "lastEditedBy" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "tags" : [
        ]
      }
    ],
    "commit" : "b56b2a741ed397df07f55e03e5a6d10e87dbc064",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +42,46 @@\n# The set of server targets we build docker images for\nkube::golang::server_image_targets() {\n  # NOTE: this contains cmd targets for kube::build::get_docker_wrapped_binaries\n  local targets=("
  },
  {
    "id" : "2a057c1c-4b6a-480b-a425-354dde94a9b4",
    "prId" : 67971,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/67971#pullrequestreview-151568048",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "489fb66f-c9b8-4505-acef-71ba07f98bab",
        "parentId" : null,
        "authorId" : "5de211e4-9744-455e-9548-1a8e70ed1b2e",
        "body" : "This and the phrase \"standard build globals\" sent me down a twisty rabbit hole I wish I hadn't fell into.\r\n\r\nIt seems like it'd be simpler to use `KUBE_BUILD_WITH_COVERAGE` here directly instead of capturing it as a local, uh, global below?",
        "createdAt" : "2018-08-31T02:00:30Z",
        "updatedAt" : "2018-09-01T01:01:10Z",
        "lastEditedBy" : "5de211e4-9744-455e-9548-1a8e70ed1b2e",
        "tags" : [
        ]
      },
      {
        "id" : "72fd18cd-5b2f-4d19-b7ae-929a7732dc74",
        "parentId" : "489fb66f-c9b8-4505-acef-71ba07f98bab",
        "authorId" : "9cdcc8e5-3ca5-47d7-abb4-ba9642e6b85a",
        "body" : "I did this in an attempt at consistency with the all the other variables that get used here. I don't really have strong opinions, and I agree that it'd be slightly simpler to not capture `build_with_coverage`, but I think it would also be inconsistent?",
        "createdAt" : "2018-08-31T16:09:08Z",
        "updatedAt" : "2018-09-01T01:01:10Z",
        "lastEditedBy" : "9cdcc8e5-3ca5-47d7-abb4-ba9642e6b85a",
        "tags" : [
        ]
      },
      {
        "id" : "b919b34f-7303-4f4f-8421-b9e014a34744",
        "parentId" : "489fb66f-c9b8-4505-acef-71ba07f98bab",
        "authorId" : "5de211e4-9744-455e-9548-1a8e70ed1b2e",
        "body" : "Yeah it looked like following the consistency for consistency's sake, I just don't know if we need to keep cargo culting it.  The reason for the capture looked to me like conveniently munging lists of flags.  This isn't that, and it's also not a well known env var used by other tools, but one we made up.  So in this case I would follow the pattern of doc'ing this as a parameter to this function.\r\n\r\nThat said, I would like to see if we can get this included in the release, so I'll file an issue for this nit.",
        "createdAt" : "2018-08-31T22:32:09Z",
        "updatedAt" : "2018-09-01T01:01:10Z",
        "lastEditedBy" : "5de211e4-9744-455e-9548-1a8e70ed1b2e",
        "tags" : [
        ]
      },
      {
        "id" : "5c419c8e-d267-470c-9219-bb27ac4e0cc6",
        "parentId" : "489fb66f-c9b8-4505-acef-71ba07f98bab",
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "it might be worth mentioning what the \"standard build globals\" assumed are? not a strong requirement though.",
        "createdAt" : "2018-08-31T22:58:22Z",
        "updatedAt" : "2018-09-01T01:01:10Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      }
    ],
    "commit" : "9390847bd5b5662beae9288eb91e0bd4c2c0c9a3",
    "line" : 83,
    "diffHunk" : "@@ -1,1 +514,518 @@# Non-covered binaries are then built using go install as usual.\nkube::golang::build_some_binaries() {\n  if [[ -n \"${build_with_coverage:-}\" ]]; then\n    local -a uncovered=()\n    for package in \"$@\"; do"
  },
  {
    "id" : "318451a8-1376-4c86-80c0-a51d6d8e85d2",
    "prId" : 63412,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/63412#pullrequestreview-117453672",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "038dbde8-d781-42db-a1ec-51eec1b70b9a",
        "parentId" : null,
        "authorId" : "1256edc4-2c21-4b50-9371-9c0a50744653",
        "body" : "This will likely fail because all the test-infra hasn't been upgraded yet. I don't think we need to enforce this as a minimum quiet yet either.",
        "createdAt" : "2018-05-03T22:07:00Z",
        "updatedAt" : "2018-05-03T22:39:44Z",
        "lastEditedBy" : "1256edc4-2c21-4b50-9371-9c0a50744653",
        "tags" : [
        ]
      },
      {
        "id" : "a3c228f1-c38a-485a-84c9-7bb08bf4361d",
        "parentId" : "038dbde8-d781-42db-a1ec-51eec1b70b9a",
        "authorId" : "da08428a-7a79-4f6f-8f27-373f0802426a",
        "body" : "Makes sense, removed.",
        "createdAt" : "2018-05-03T22:08:31Z",
        "updatedAt" : "2018-05-03T22:39:44Z",
        "lastEditedBy" : "da08428a-7a79-4f6f-8f27-373f0802426a",
        "tags" : [
        ]
      },
      {
        "id" : "9e33c436-02bb-4d72-bd85-b846e5fbf87a",
        "parentId" : "038dbde8-d781-42db-a1ec-51eec1b70b9a",
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "@BenTheElder can we bump test-infra?",
        "createdAt" : "2018-05-03T22:11:36Z",
        "updatedAt" : "2018-05-03T22:39:44Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "21ef9bca-0302-4a1f-b5ff-c402bfdd7ded",
        "parentId" : "038dbde8-d781-42db-a1ec-51eec1b70b9a",
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "though in general I think the minimum go version here is more important for minor version bumps (e.g. 1.9 -> 1.10) than patch version bumps.",
        "createdAt" : "2018-05-03T22:12:15Z",
        "updatedAt" : "2018-05-03T22:39:44Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "5dd76e6d-f4aa-40c3-9256-6669ce0fb694",
        "parentId" : "038dbde8-d781-42db-a1ec-51eec1b70b9a",
        "authorId" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "body" : "yes, though not much picks up the go versions there, since mostly we either pick up the (in CI doubly so) containerized or bazel builds.",
        "createdAt" : "2018-05-03T22:13:22Z",
        "updatedAt" : "2018-05-03T22:39:44Z",
        "lastEditedBy" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "tags" : [
        ]
      },
      {
        "id" : "ebef6c55-5ea2-4088-a690-8f1b64812b75",
        "parentId" : "038dbde8-d781-42db-a1ec-51eec1b70b9a",
        "authorId" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "body" : "discussed offline, we'll bump all the things",
        "createdAt" : "2018-05-03T22:26:38Z",
        "updatedAt" : "2018-05-03T22:39:44Z",
        "lastEditedBy" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "tags" : [
        ]
      },
      {
        "id" : "75cf095f-5d5f-4d35-a440-50bfb2f20c38",
        "parentId" : "038dbde8-d781-42db-a1ec-51eec1b70b9a",
        "authorId" : "da08428a-7a79-4f6f-8f27-373f0802426a",
        "body" : "I've re-added the bump here!",
        "createdAt" : "2018-05-03T22:40:18Z",
        "updatedAt" : "2018-05-03T22:40:18Z",
        "lastEditedBy" : "da08428a-7a79-4f6f-8f27-373f0802426a",
        "tags" : [
        ]
      }
    ],
    "commit" : "ac731ed2e541ceb82e7461901f878fadfe2f623a",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +322,326 @@  IFS=\" \" read -ra go_version <<< \"$(go version)\"\n  local minimum_go_version\n  minimum_go_version=go1.10.2\n  if [[ \"${minimum_go_version}\" != $(echo -e \"${minimum_go_version}\\n${go_version[2]}\" | sort -s -t. -k 1,1 -k 2,2n -k 3,3n | head -n1) && \"${go_version[2]}\" != \"devel\" ]]; then\n    kube::log::usage_from_stdin <<EOF"
  },
  {
    "id" : "310680eb-db0b-4505-b72b-627fb953cc61",
    "prId" : 60494,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/60494#pullrequestreview-100322491",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "92856cf7-8d95-4c53-b72a-b4aa4ab8d055",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "wow `sort -s -t. -k 1,1 -k 2,2n -k 3,3n | head -n1` :)",
        "createdAt" : "2018-02-27T13:05:59Z",
        "updatedAt" : "2018-02-27T13:05:59Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "0163d1e3-c25c-4ef8-90a5-3bfe650e25f1",
        "parentId" : "92856cf7-8d95-4c53-b72a-b4aa4ab8d055",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "```\r\nsort=$(if which gsort &>/dev/null; then echo gsort; else echo sort; fi)\r\n.... | ${sort} -V | head -n1\r\n```",
        "createdAt" : "2018-02-27T13:10:15Z",
        "updatedAt" : "2018-02-27T13:10:46Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "3002e93b-24f7-492a-a78c-ddaf5df0f064",
        "parentId" : "92856cf7-8d95-4c53-b72a-b4aa4ab8d055",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "Or even better, use `sort -V -C` that gives you rc 0 if the input was sorted.",
        "createdAt" : "2018-02-27T13:12:23Z",
        "updatedAt" : "2018-02-27T13:12:23Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "d719e8e9-c48b-4e8d-9a07-bc2f0fd7d0d4",
        "parentId" : "92856cf7-8d95-4c53-b72a-b4aa4ab8d055",
        "authorId" : "443f9b92-20b0-45c2-a13f-20c6f64f89eb",
        "body" : "@sttts this is a backport for 1.9 of what's already fixed (merged) in master.\r\n\r\nIf you want to fix it differently I think the correct place is a PR to master branch.",
        "createdAt" : "2018-02-27T16:24:39Z",
        "updatedAt" : "2018-02-27T16:26:22Z",
        "lastEditedBy" : "443f9b92-20b0-45c2-a13f-20c6f64f89eb",
        "tags" : [
        ]
      },
      {
        "id" : "ce635712-d6ad-4b03-a180-0b95085d072e",
        "parentId" : "92856cf7-8d95-4c53-b72a-b4aa4ab8d055",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "Alright, nvmd then.",
        "createdAt" : "2018-02-27T16:27:36Z",
        "updatedAt" : "2018-02-27T16:27:36Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "ca57c3d8-afee-425a-9971-88c19cc3bf44",
        "parentId" : "92856cf7-8d95-4c53-b72a-b4aa4ab8d055",
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "@sttts `sort -V` is a GNU extension, so that won't work for our macOS friends anyway. https://developer.apple.com/legacy/library/documentation/Darwin/Reference/ManPages/man1/sort.1.html",
        "createdAt" : "2018-02-28T17:48:37Z",
        "updatedAt" : "2018-02-28T17:49:03Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "9c3497b9-ea75-438f-ad74-3aadde35d7b3",
        "parentId" : "92856cf7-8d95-4c53-b72a-b4aa4ab8d055",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "We have dependencies on the brew gnu tools at many places. So gsort is available.",
        "createdAt" : "2018-03-01T05:47:42Z",
        "updatedAt" : "2018-03-01T05:47:43Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "e32e3833db3886609ed84da0903afae62a588055",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +324,328 @@  local minimum_go_version\n  minimum_go_version=go1.9.1\n  if [[ \"${minimum_go_version}\" != $(echo -e \"${minimum_go_version}\\n${go_version[2]}\" | sort -s -t. -k 1,1 -k 2,2n -k 3,3n | head -n1) && \"${go_version[2]}\" != \"devel\" ]]; then\n    kube::log::usage_from_stdin <<EOF\nDetected go version: ${go_version[*]}."
  },
  {
    "id" : "112ab47c-5667-4d0b-91ca-2d67d47932bc",
    "prId" : 51873,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/51873#pullrequestreview-60679461",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "60985d69-e33a-4d29-9846-0d0d614aaff6",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "will this cause any build performance regressions?",
        "createdAt" : "2017-09-05T16:14:29Z",
        "updatedAt" : "2017-09-05T16:14:29Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "9dcf8177-a861-4db9-a125-03dc1fa1f455",
        "parentId" : "60985d69-e33a-4d29-9846-0d0d614aaff6",
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "no, this is for release (and the post-ci, independently running kube-cross job) code only. All other jobs etc perform the \"fast path\" and only build for amd64",
        "createdAt" : "2017-09-05T17:23:30Z",
        "updatedAt" : "2017-09-05T17:23:30Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      }
    ],
    "commit" : "64be85e9dee08c133375704d66820cb9945acaf6",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +116,120 @@    linux/arm64\n    linux/s390x\n    linux/ppc64le\n    darwin/amd64\n    windows/amd64"
  },
  {
    "id" : "12efc5df-03a6-4b9d-9415-779874dc6ef0",
    "prId" : 43671,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/43671#pullrequestreview-30925643",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8f9ae7c6-6f1b-40f1-8043-2d8769bae2d0",
        "parentId" : null,
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "this is checking the wrong thing - `$OSTYPE` is referring to the host OS, but we should still support cross-compiling linux targets from macOS, which this would disable. \r\n\r\nwe probably need to change the logic so that we only build the server test targets when `$GOOS` is `linux`. Or fix `test/e2e/e2e_node` so that it builds on mac (even though it's kinda pointless to do so).",
        "createdAt" : "2017-03-27T18:33:03Z",
        "updatedAt" : "2017-03-28T03:46:07Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "3f94595f-dc04-46c9-b2de-1ae6ccacbc85",
        "parentId" : "8f9ae7c6-6f1b-40f1-8043-2d8769bae2d0",
        "authorId" : "72156db3-c40b-4455-9838-c12c0c606019",
        "body" : "For `test/e2e/e2e_node`, I'd like to skip it for mac as we had several PRs for build error :(. And for the cross-compling, no $OSTYPE here?",
        "createdAt" : "2017-03-28T05:23:24Z",
        "updatedAt" : "2017-03-28T05:23:24Z",
        "lastEditedBy" : "72156db3-c40b-4455-9838-c12c0c606019",
        "tags" : [
        ]
      },
      {
        "id" : "abb99765-b0d2-4fe6-82e8-db92f145c33e",
        "parentId" : "8f9ae7c6-6f1b-40f1-8043-2d8769bae2d0",
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "using `$OSTYPE` instead of the target platform means that a macOS user can't cross-compile e2e_node.test for linux.",
        "createdAt" : "2017-03-28T21:21:46Z",
        "updatedAt" : "2017-03-28T21:21:46Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "41a8c41f-a05f-4bfd-9748-c252d12bf6cd",
        "parentId" : "8f9ae7c6-6f1b-40f1-8043-2d8769bae2d0",
        "authorId" : "72156db3-c40b-4455-9838-c12c0c606019",
        "body" : "@ixdy , what's the command to cross-compile e2e_node.test from MacOS for Linux? I'd like to debug script to fix it :).",
        "createdAt" : "2017-03-30T01:17:46Z",
        "updatedAt" : "2017-03-30T01:17:46Z",
        "lastEditedBy" : "72156db3-c40b-4455-9838-c12c0c606019",
        "tags" : [
        ]
      },
      {
        "id" : "bbca084b-3a1d-49c1-bcb0-7ec5b188aa4b",
        "parentId" : "8f9ae7c6-6f1b-40f1-8043-2d8769bae2d0",
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "`make quick-release` should do it. You'll need a working docker setup, though.",
        "createdAt" : "2017-03-30T17:48:43Z",
        "updatedAt" : "2017-03-30T17:48:43Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "4fbf1f04-4581-4516-b7ff-6255d7fc8f03",
        "parentId" : "8f9ae7c6-6f1b-40f1-8043-2d8769bae2d0",
        "authorId" : "72156db3-c40b-4455-9838-c12c0c606019",
        "body" : "@ixdy , the `OSTYPE` works when `make quick-release`. \r\n\r\nHere's the diff to show `OSTYPE` when building\r\n```\r\n-        kube::log::status \"Building go targets for ${platform}:\" \"${targets[@]}\"\r\n+        kube::log::status \"Building go targets for ${platform}/${OSTYPE}:\" \"${targets[@]}\"\r\n```\r\n\r\nAnd here's the output of `make quick-release`: \r\n\r\n```\r\nMacPro:kubernetes klaus$ make quick-release\r\n+++ [0402 08:34:10] Verifying Prerequisites....\r\n+++ [0402 08:34:10] Using Docker for MacOS\r\n+++ [0402 08:34:10] Building Docker image kube-build:build-6433d374d6-5-v1.7.5-2\r\n+++ [0402 08:34:16] Syncing sources to container\r\n+++ [0402 08:34:18] Running build command...\r\n+++ [0402 08:34:25] Building the toolchain targets:\r\n    k8s.io/kubernetes/hack/cmd/teststale\r\n    k8s.io/kubernetes/vendor/github.com/jteeuwen/go-bindata/go-bindata\r\n+++ [0402 08:34:25] Generating bindata:\r\n    test/e2e/generated/gobindata_util.go\r\n~ ~/test/e2e/generated\r\n~/test/e2e/generated\r\n+++ [0402 08:34:26] Building go targets for linux/amd64 (linux-gnu):\r\n    cmd/kube-proxy\r\n    cmd/kube-apiserver\r\n    cmd/kube-controller-manager\r\n    cmd/cloud-controller-manager\r\n    cmd/kubelet\r\n    cmd/kubeadm\r\n    cmd/hyperkube\r\n    vendor/k8s.io/kube-aggregator\r\n    plugin/cmd/kube-scheduler\r\n```",
        "createdAt" : "2017-04-02T00:39:42Z",
        "updatedAt" : "2017-04-02T00:39:42Z",
        "lastEditedBy" : "72156db3-c40b-4455-9838-c12c0c606019",
        "tags" : [
        ]
      },
      {
        "id" : "1ca1118a-5cc0-43a4-bc48-0345988b8016",
        "parentId" : "8f9ae7c6-6f1b-40f1-8043-2d8769bae2d0",
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "hm, interesting, I suspect this still only works by accident - the `$OSTYPE` in your docker container is probably set to linux.\r\n\r\nThis previously wasn't an issue because we only cross-build `KUBE_TEST_SERVER_TARGETS` for linux platforms.\r\nI think you can only run into the compilation failure if you try to build everything (i.e. just run `make`) on macOS natively, without docker or anything else.\r\n\r\nIf you tried cross-building on macOS natively I think this will do the wrong thing. But I'm not sure this is a use case we need to worry about.\r\n\r\nFurther thoughts: we should perhaps not include `KUBE_SERVER_TARGETS` or `KUBE_TEST_SERVER_TARGETS` in `KUBE_ALL_TARGETS` when building on non-linux, since neither of those sets is expected to be built for non-linux.",
        "createdAt" : "2017-04-04T23:12:58Z",
        "updatedAt" : "2017-04-04T23:12:58Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      }
    ],
    "commit" : "c6e79167f473254a11332178fc8137162a89001c",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +165,169 @@  )\n\n  if [[ \"${OSTYPE:-}\" == \"linux\"* ]]; then\n    targets+=( test/e2e_node/e2e_node.test )\n  fi"
  },
  {
    "id" : "d55318b9-a50f-40db-8811-d05b1ce530c7",
    "prId" : 41160,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/41160#pullrequestreview-23828299",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c1827c79-6415-4a9c-957d-e207402e2907",
        "parentId" : null,
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "nobody reads my comment. :(",
        "createdAt" : "2017-02-24T21:59:23Z",
        "updatedAt" : "2017-02-24T22:35:58Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "20ba8b59-8aea-423f-b840-9f6452822f52",
        "parentId" : "c1827c79-6415-4a9c-957d-e207402e2907",
        "authorId" : "f9231906-76cd-4270-87d5-4b97ae98ebb4",
        "body" : "To be completely honest, I read the comment immediately before it that said:\r\n\r\n    # Note: if you are adding something here, you might need to add it to\r\n    # kube::build::source_targets in build/common.sh as well.\r\n\r\nand must have stopped reading because `source_targets` doesn't exist in `build/common.sh` (or anywhere else in the codebase, says `grep -r`). :-)\r\n\r\nGiven that we don't actually want this in the tar, and I just want to ensure that the binary gets built when users run `make` (or `make bazel-build`), I'll just leave this alone and move the target to `KUBE_ALL_TARGETS`.",
        "createdAt" : "2017-02-24T22:18:29Z",
        "updatedAt" : "2017-02-24T22:35:58Z",
        "lastEditedBy" : "f9231906-76cd-4270-87d5-4b97ae98ebb4",
        "tags" : [
        ]
      },
      {
        "id" : "fffea424-b72b-4f85-9d13-0de28c5cb9f4",
        "parentId" : "c1827c79-6415-4a9c-957d-e207402e2907",
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "that's only been gone for 4.5 months (#30787). :)\r\n\r\nmind removing that part of the comment while you're here?",
        "createdAt" : "2017-02-24T22:22:19Z",
        "updatedAt" : "2017-02-24T22:35:58Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "4efc7b83-2a34-4da7-9845-2fd30a0af05b",
        "parentId" : "c1827c79-6415-4a9c-957d-e207402e2907",
        "authorId" : "f9231906-76cd-4270-87d5-4b97ae98ebb4",
        "body" : "Done and done. I could create a new target group like `KUBE_EXTRA_TARGETS` just for this binary, but it seemed overkill for something that's meant to be temporary. Plus, the fact that this target sticks out like a sore thumb in `KUBE_ALL_TARGETS` is a good reminder that we should remove it.",
        "createdAt" : "2017-02-24T22:38:51Z",
        "updatedAt" : "2017-02-24T22:38:51Z",
        "lastEditedBy" : "f9231906-76cd-4270-87d5-4b97ae98ebb4",
        "tags" : [
        ]
      }
    ],
    "commit" : "0d7a6eb058a057dd7f8af485e4f56f1588004a12",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +20,24 @@\n# The set of server targets that we are only building for Linux\n# If you update this list, please also update build/release-tars/BUILD.\nkube::golang::server_targets() {\n  local targets=("
  },
  {
    "id" : "08f2feaa-12a7-443d-8e2b-8ff33beca040",
    "prId" : 33409,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/33409#pullrequestreview-1589790",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a9dcefc4-10f9-429e-97ff-f01c24b31697",
        "parentId" : null,
        "authorId" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "body" : "Why node_test_targets? It's only on a machine from which the tests are run, to push the binary to gcr.io \n",
        "createdAt" : "2016-09-26T08:59:36Z",
        "updatedAt" : "2016-09-26T18:06:58Z",
        "lastEditedBy" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "tags" : [
        ]
      },
      {
        "id" : "0e9e911f-c8cd-41a7-a33d-48bde6fdf7fb",
        "parentId" : "a9dcefc4-10f9-429e-97ff-f01c24b31697",
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "Unless I'm really misunderstanding this, `cmd/kubemark` is the hollow-node binary, which gets built into the kubemark container image (cluster/images/kubemark) which is then run on the kubernetes cluster under test, hence we should target platforms that run kubernetes.\n\nI could probably rename this target to `KUBE_SERVER_TEST_TARGETS` if it'd be a little clearer. That'd at least match the other names here (KUBE_SERVER and KUBE_CLIENT).\n",
        "createdAt" : "2016-09-26T18:01:49Z",
        "updatedAt" : "2016-09-26T18:06:58Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      }
    ],
    "commit" : "13a33139572501edeeaa028e803d94f642999210",
    "line" : null,
    "diffHunk" : "@@ -1,1 +151,155 @@# These binaries will be distributed in the kubernetes-test tarball.\nreadonly KUBE_TEST_SERVER_TARGETS=(\n  cmd/kubemark\n  vendor/github.com/onsi/ginkgo/ginkgo\n  test/e2e_node/e2e_node.test"
  },
  {
    "id" : "b1a3f81f-b82a-4bd4-b553-d2776d3e3738",
    "prId" : 32517,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/32517#pullrequestreview-298675",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2710e828-1eff-405c-b0c2-3eb1bf597bf5",
        "parentId" : null,
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "this might cause an issue if we get into this branch not inside the build image, though I think that'd only happen if you try to build k8s while on linux/arm.\n",
        "createdAt" : "2016-09-15T20:58:00Z",
        "updatedAt" : "2016-09-15T20:58:51Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "3cb4bb31-1d5f-4766-8f7f-aad6fc64ce9a",
        "parentId" : "2710e828-1eff-405c-b0c2-3eb1bf597bf5",
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "Yes, building **on** linux/arm with normally released Go is obviously broken (where the patched Golang doesn't exist)\nNot much we can do about that for the meantime.\n",
        "createdAt" : "2016-09-16T06:16:09Z",
        "updatedAt" : "2016-09-16T06:16:09Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      }
    ],
    "commit" : "aa045f786e424e787bd17d6bb564f5aa311dd7b0",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +240,244 @@      export CGO_ENABLED=1\n      export CC=arm-linux-gnueabi-gcc\n      export GOROOT=${K8S_PATCHED_GOROOT}\n    elif [[ ${platform} == \"linux/arm64\" ]]; then\n      export CGO_ENABLED=1"
  },
  {
    "id" : "f22e3f95-298e-46d2-b667-2623ba813220",
    "prId" : 31525,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e981a0fc-a7e3-4d2f-8016-6e8d27b35487",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "This breaks Mac. Capital T does not exist.\n",
        "createdAt" : "2016-08-29T16:55:16Z",
        "updatedAt" : "2016-08-29T16:55:16Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "e063c760c2bf0c8c5f2ce1928c782f359c125c42",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +271,275 @@  # TODO: This symlink should be relative.\n  if [[ ! -e \"${go_pkg_dir}\" || \"$(readlink ${go_pkg_dir})\" != \"${KUBE_ROOT}\" ]]; then\n    ln -sTf \"${KUBE_ROOT}\" \"${go_pkg_dir}\"\n  fi\n}"
  },
  {
    "id" : "f29747f1-f707-42d5-a641-58023b972aea",
    "prId" : 30659,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ca7f5740-502b-4d8a-9557-e6c76867d38d",
        "parentId" : null,
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "this change wasn't really necessary, but now the platforms are all listed on one line, which is nice. e.g.\n\n```\n+++ [0816 17:05:44] Building go targets for {linux/amd64 linux/arm linux/arm64} in parallel (output will appear in a burst when complete):\n    cmd/kube-dns\n    cmd/kube-proxy\n    cmd/kube-apiserver\n    cmd/kube-controller-manager\n    cmd/kubelet\n    cmd/kubemark\n    cmd/hyperkube\n    federation/cmd/federation-apiserver\n    federation/cmd/federation-controller-manager\n    plugin/cmd/kube-scheduler\n```\n\nand\n\n```\n+++ [0816 17:02:26] Building go targets for {linux/amd64 linux/arm linux/arm64 linux/ppc64le} in parallel (output will appear in a burst when complete):\n    cmd/kube-dns\n    cmd/kube-proxy\n    cmd/kube-apiserver\n    cmd/kube-controller-manager\n    cmd/kubelet\n    cmd/kubemark\n    cmd/hyperkube\n    federation/cmd/federation-apiserver\n    federation/cmd/federation-controller-manager\n    plugin/cmd/kube-scheduler\n```\n",
        "createdAt" : "2016-08-17T00:08:33Z",
        "updatedAt" : "2016-08-17T00:08:33Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      }
    ],
    "commit" : "dec4d1ea3326ce67a5adf27426d5a5fc9841a7d8",
    "line" : 59,
    "diffHunk" : "@@ -1,1 +667,671 @@\n    if [[ \"${parallel}\" == \"true\" ]]; then\n      kube::log::status \"Building go targets for {${platforms[*]}} in parallel (output will appear in a burst when complete):\" \"${targets[@]}\"\n      local platform\n      for platform in \"${platforms[@]}\"; do ("
  },
  {
    "id" : "a60b155c-5460-438f-b899-0fdc94c05e01",
    "prId" : 25584,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ea381660-d656-4d0b-8ae1-d8e2be3cad3a",
        "parentId" : null,
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "still have a minor preference for renaming this to something like `KUBE_BINDATAS` and moving it up a level near the other `KUBE_*` arrays (maybe between `KUBE_ALL_BINARIES` and `KUBE_STATIC_LIBRARIES`?)\n",
        "createdAt" : "2016-05-31T23:36:20Z",
        "updatedAt" : "2016-07-29T18:35:37Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "a67989ad-98ef-44d1-b075-78a8b7635dba",
        "parentId" : "ea381660-d656-4d0b-8ae1-d8e2be3cad3a",
        "authorId" : "a5be0b3b-3db2-4c99-a598-55f8708db5df",
        "body" : "hmmmm I don't really think we should expose this as a top-level variable (yet) b/c the functionality is so coupled to the implementation of `generate`.  I'd say punt on this unless you insist....  mostly +0 so leaving it for now, lmk if u think its essential\n",
        "createdAt" : "2016-06-01T17:26:53Z",
        "updatedAt" : "2016-07-29T18:35:37Z",
        "lastEditedBy" : "a5be0b3b-3db2-4c99-a598-55f8708db5df",
        "tags" : [
        ]
      }
    ],
    "commit" : "6166083c78063e719017ddd8fb2cf4882e3749bf",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +615,619 @@    \n    # Add any files with those //generate annotations in the array below.\n    readonly BINDATAS=( \"${KUBE_ROOT}/test/e2e/framework/gobindata_util.go\" )\n    kube::log::status \"Generating bindata:\" \"${BINDATAS[@]}\"\n    for bindata in ${BINDATAS[@]}; do"
  },
  {
    "id" : "20937c8a-c257-45ea-9867-145fbb037ad4",
    "prId" : 25584,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "eef60302-4762-4a13-8f55-25885ca56338",
        "parentId" : null,
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "a rare occasion I think it might be helpful to log more:\n\n``` bash\n  kube::log::status \"Generating bindata:\" \"${BINDATAS[@]}\"\n```\n",
        "createdAt" : "2016-06-02T00:05:50Z",
        "updatedAt" : "2016-07-29T18:35:37Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "842ead47-5d8a-43e5-ba33-df4952678d1a",
        "parentId" : "eef60302-4762-4a13-8f55-25885ca56338",
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "(probably outside the loop)\n",
        "createdAt" : "2016-06-02T00:06:10Z",
        "updatedAt" : "2016-07-29T18:35:37Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      }
    ],
    "commit" : "6166083c78063e719017ddd8fb2cf4882e3749bf",
    "line" : null,
    "diffHunk" : "@@ -1,1 +617,621 @@    readonly BINDATAS=( \"${KUBE_ROOT}/test/e2e/framework/gobindata_util.go\" )\n    kube::log::status \"Generating bindata:\" \"${BINDATAS[@]}\"\n    for bindata in ${BINDATAS[@]}; do\n\t  # Only try to generate bindata if the file exists, since in some cases\n\t  # one-off builds of individual directories may exclude some files."
  },
  {
    "id" : "df47c9d6-cc24-4000-b661-dfb720a232c1",
    "prId" : 24850,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5959e282-5a6c-4847-8dac-c731c3c8946c",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "why add a go install?  Comment\n",
        "createdAt" : "2016-05-06T06:12:37Z",
        "updatedAt" : "2016-05-15T06:19:22Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "36e90537-fc19-4774-942a-d77d2ce9cb05",
        "parentId" : "5959e282-5a6c-4847-8dac-c731c3c8946c",
        "authorId" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "body" : "Thanks for pointing this out. This definitely deserves a comment. I spent half a day trying to figure this out. Writing everything else took much less time. :)\n\n`go test -c` below directly builds the binary. It builds the packages, but it never installs them. `go test -i` only installs the dependencies of the test, but not the test package itself. So neither `go test -c` nor `go test -i` installs, for example, test/e2e.a. And without that, doing a staleness check on `k8s.io/kubernetes/test/e2e` package always returns true (always stale). That's why we need to install that package.\n\nI will add that as a comment.\n",
        "createdAt" : "2016-05-06T08:03:21Z",
        "updatedAt" : "2016-05-15T06:19:22Z",
        "lastEditedBy" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "tags" : [
        ]
      },
      {
        "id" : "da96a9c4-a861-4925-a51a-98d1751239b7",
        "parentId" : "5959e282-5a6c-4847-8dac-c731c3c8946c",
        "authorId" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "body" : "Done.\n",
        "createdAt" : "2016-05-10T22:55:43Z",
        "updatedAt" : "2016-05-15T06:19:22Z",
        "lastEditedBy" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "tags" : [
        ]
      }
    ],
    "commit" : "47efee7ce4d5e10b89785af05abcb3b81a72f585",
    "line" : null,
    "diffHunk" : "@@ -1,1 +489,493 @@    # returns true (always stale). And that's why we need to install the\n    # test package.\n    go install \"${goflags[@]:+${goflags[@]}}\" \\\n        -ldflags \"${goldflags}\" \\\n        \"${testpkg}\""
  },
  {
    "id" : "845133ec-1165-49a6-add6-e288432992b9",
    "prId" : 24242,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2ea63ecc-c4c3-4b68-b5c7-f060c9d791d7",
        "parentId" : null,
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "ah, this is the bit that's causing problems for some reason.\n",
        "createdAt" : "2016-04-28T01:23:50Z",
        "updatedAt" : "2016-05-09T03:32:17Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "52a40d7c-6739-432d-8650-5a4448d5b5d5",
        "parentId" : "2ea63ecc-c4c3-4b68-b5c7-f060c9d791d7",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "We have to do this to make various `go` tools happy with vendor directories - it will not find them if it is not in a cwd that is under the GOPATH.  So now we know this is the root  of the problem, what to do with it?\n",
        "createdAt" : "2016-04-28T05:38:48Z",
        "updatedAt" : "2016-05-09T03:32:17Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "7da6b39a-68f4-497b-a75c-eef7b8267d04",
        "parentId" : "2ea63ecc-c4c3-4b68-b5c7-f060c9d791d7",
        "authorId" : "766f642e-1622-4803-803b-05ce306fc30e",
        "body" : "It seems we must abandon the idea that kube can be unzipp-ed anywhere and built. We force the user to only download kube into GOPATH and only build in GOPATH. We give up trying to make the kube source self contained. Just hoist the complexity on our users (as golang seems to keep forcing us to do).\n\nWe could also try to just pull that out. Wasn't it put in partially for godeps, which we aren't using?\n",
        "createdAt" : "2016-04-28T11:43:12Z",
        "updatedAt" : "2016-05-09T03:32:17Z",
        "lastEditedBy" : "766f642e-1622-4803-803b-05ce306fc30e",
        "tags" : [
        ]
      },
      {
        "id" : "f7e74360-00ae-4730-bc76-d63304265fa5",
        "parentId" : "2ea63ecc-c4c3-4b68-b5c7-f060c9d791d7",
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "Yeah, my inclination is to get rid of the `_output/local/go/src/k8s.io.kubernetes` hack entirely - as @eparis notes, I'm guessing it was added so we could `go build` without using `godep`.\n\nNow that we're abandoning Godeps, `go build` should just work in the root. If it doesn't, we need to fix that.\n",
        "createdAt" : "2016-04-28T18:04:42Z",
        "updatedAt" : "2016-05-09T03:32:17Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "ef2da39e-7aac-4d27-bf83-854f02b75bc2",
        "parentId" : "2ea63ecc-c4c3-4b68-b5c7-f060c9d791d7",
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "I think our build scripts do far more than they need to nowadays (go 1.2/1.3 were much more limited in functionality, I guess), so we probably have a lot of room available for simplification. That said, you obviously should change as little as possible in this PR.\n",
        "createdAt" : "2016-04-28T18:07:03Z",
        "updatedAt" : "2016-05-09T03:32:17Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "e9473a9e-f493-4432-bfe9-70102a05cc9b",
        "parentId" : "2ea63ecc-c4c3-4b68-b5c7-f060c9d791d7",
        "authorId" : "766f642e-1622-4803-803b-05ce306fc30e",
        "body" : "It's not just `go build` without godep.  say I download/unzip  the tarball into /home/eparis/kubernetes. I `cd /home/eparis/kubernetes` and type `go build ./...` (or something like that). The first golang import it finds for `k8s.io/kubernetes/pkg/util/` is going to look for that in `$GOPATH/src/k8s.io/kubernetes/pkg/util`.  It won't look in `/home/eparis/kubernetes/pkg/util`.\n\nThis is a go thing, not a godep thing.\n\nThe sad part if that `vendor/` allows everything except OUR imports to work.\n\n(as I understand it).\n",
        "createdAt" : "2016-04-28T18:36:04Z",
        "updatedAt" : "2016-05-09T03:32:17Z",
        "lastEditedBy" : "766f642e-1622-4803-803b-05ce306fc30e",
        "tags" : [
        ]
      },
      {
        "id" : "7ecadd13-4260-420d-922a-6caccc570b56",
        "parentId" : "2ea63ecc-c4c3-4b68-b5c7-f060c9d791d7",
        "authorId" : "c532215f-ed76-4a19-b066-8676d269eaf1",
        "body" : "I think it's perfectly reasonable to require developers to lay out their workspace and set their GOPATH properly.\n",
        "createdAt" : "2016-04-28T20:13:40Z",
        "updatedAt" : "2016-05-09T03:32:17Z",
        "lastEditedBy" : "c532215f-ed76-4a19-b066-8676d269eaf1",
        "tags" : [
        ]
      },
      {
        "id" : "79869712-a69d-4588-ad19-665ab6851c85",
        "parentId" : "2ea63ecc-c4c3-4b68-b5c7-f060c9d791d7",
        "authorId" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "body" : "Really? There's a bunch of other gorp packaged in the kubernetes tar. What are you planning to do with that?\n",
        "createdAt" : "2016-04-28T20:22:08Z",
        "updatedAt" : "2016-05-09T03:32:17Z",
        "lastEditedBy" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "tags" : [
        ]
      },
      {
        "id" : "a86a8325-971f-4d23-8fe2-ca9b882c6f57",
        "parentId" : "2ea63ecc-c4c3-4b68-b5c7-f060c9d791d7",
        "authorId" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "body" : "(I feel like it doesn't belong in a random GOPATH directory.)\n",
        "createdAt" : "2016-04-28T20:22:44Z",
        "updatedAt" : "2016-05-09T03:32:17Z",
        "lastEditedBy" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "tags" : [
        ]
      },
      {
        "id" : "bbbf4b54-9009-4a81-b337-dd126a3c6fde",
        "parentId" : "2ea63ecc-c4c3-4b68-b5c7-f060c9d791d7",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "The symlink _output stuff serves 2 purposes.\n\n1) It allows you to 'make' or 'hack/build-go.sh' in any the kube dir, regardless of where it was untarred (good, IMO) - this means you do NOT have to be in the GOPATH yourself, but it means our scripts _do_.\n\n2) It allows us to collect the final outputs of 'go install' in a known place rather than my own $GOPATH.\n\nOnce we have a fully dockerized build, (2) matters less.  I still think (1) is valuable (especially since I believe we will NOT get away from Makefile as our main build interface, but that is a diff topic).  So we _have_ to change dirs like this.  We just need to make all our tools understand it.\n",
        "createdAt" : "2016-04-28T21:45:05Z",
        "updatedAt" : "2016-05-09T03:32:17Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "439d38bd-e8dc-46cd-9d77-6b5ad01874a8",
        "parentId" : "2ea63ecc-c4c3-4b68-b5c7-f060c9d791d7",
        "authorId" : "766f642e-1622-4803-803b-05ce306fc30e",
        "body" : "Are there any `../` in the path? does it work if you use `cd $(realpath $PATHNAME)`\n\nI know that angers some of the go/godep tools...\n",
        "createdAt" : "2016-04-28T22:15:58Z",
        "updatedAt" : "2016-05-09T03:32:17Z",
        "lastEditedBy" : "766f642e-1622-4803-803b-05ce306fc30e",
        "tags" : [
        ]
      },
      {
        "id" : "a81e2a77-7e73-4f28-a025-2f0a50f4bb76",
        "parentId" : "2ea63ecc-c4c3-4b68-b5c7-f060c9d791d7",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "There should be no .. in the path at all.  First it does cd $(realpath .),\nthen changes to ./_output/local/go/src/...\n\nOn Thu, Apr 28, 2016 at 3:16 PM, Eric Paris notifications@github.com\nwrote:\n\n> In hack/lib/golang.sh\n> https://github.com/kubernetes/kubernetes/pull/24242#discussion_r61511614\n> :\n> \n> >    export GOPATH\n> > -  # Change directories so that we are within the GOPATH.  Some tools get really\n> > -  # upset if this is not true.\n> > -  local subdir\n> > -  subdir=$(kube::realpath . | sed \"s|$KUBE_ROOT||\")\n> > -  cd \"${KUBE_GOPATH}/src/${KUBE_GO_PACKAGE}/${subdir}\"\n> \n> Are there and ../ in the path? does it work if you use cd $(realpath\n> $PATHNAME)\n> \n> â€”\n> You are receiving this because you were mentioned.\n> Reply to this email directly or view it on GitHub\n> https://github.com/kubernetes/kubernetes/pull/24242/files/71a332d7a1bad69f61d141a83280cdf5b804ee77#r61511614\n",
        "createdAt" : "2016-04-29T01:35:46Z",
        "updatedAt" : "2016-05-09T03:32:17Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "2100016e0fe3219fc93274d6d66f5d4d8c863979",
    "line" : null,
    "diffHunk" : "@@ -1,1 +311,315 @@  local subdir\n  subdir=$(kube::realpath . | sed \"s|$KUBE_ROOT||\")\n  cd \"${KUBE_GOPATH}/src/${KUBE_GO_PACKAGE}/${subdir}\"\n\n  # Unset GOBIN in case it already exists in the current session."
  },
  {
    "id" : "41252fc0-66b0-444f-b82d-df638f45d8f1",
    "prId" : 24242,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4ce1efbb-4edb-4213-9ba1-72a51cad72cf",
        "parentId" : null,
        "authorId" : "766f642e-1622-4803-803b-05ce306fc30e",
        "body" : "which tool? even with 1.6?\n",
        "createdAt" : "2016-05-06T20:46:24Z",
        "updatedAt" : "2016-05-09T03:32:17Z",
        "lastEditedBy" : "766f642e-1622-4803-803b-05ce306fc30e",
        "tags" : [
        ]
      },
      {
        "id" : "dbea4920-ce29-443c-89a0-68bb95538e0b",
        "parentId" : "4ce1efbb-4edb-4213-9ba1-72a51cad72cf",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "godep, ugorji, ginkgo...\n\nyes, even with 1.6\n",
        "createdAt" : "2016-05-06T22:44:47Z",
        "updatedAt" : "2016-05-09T03:32:17Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "2100016e0fe3219fc93274d6d66f5d4d8c863979",
    "line" : null,
    "diffHunk" : "@@ -1,1 +317,321 @@\n  # This seems to matter to some tools (godep, ugorji, ginkgo...)\n  export GO15VENDOREXPERIMENT=1\n}\n"
  },
  {
    "id" : "81e0338b-7759-4404-a09c-dd033aab5084",
    "prId" : 3007,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f5ee2c59-7304-484a-baa6-4f59d086f4bc",
        "parentId" : null,
        "authorId" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "body" : "Heh -- golang.sh is looking more and more like the wrong place to put this stuff.  Not necessary to fix right now.\n",
        "createdAt" : "2014-12-17T23:57:20Z",
        "updatedAt" : "2014-12-17T23:57:20Z",
        "lastEditedBy" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "tags" : [
        ]
      },
      {
        "id" : "a57e64dd-8e86-4c2b-8b95-343cb7c7dbf7",
        "parentId" : "f5ee2c59-7304-484a-baa6-4f59d086f4bc",
        "authorId" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "body" : "Yeah - I didn't like it either, FWIW. I'll open an issue, because there's also some cleanup that could happen. (NOT IT. :))\n",
        "createdAt" : "2014-12-18T00:20:30Z",
        "updatedAt" : "2014-12-18T00:20:30Z",
        "lastEditedBy" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "tags" : [
        ]
      }
    ],
    "commit" : "d3aed6c9cd60ec50314e693678a4c89fa6ab396e",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +50,54 @@readonly KUBE_TEST_BINARIES=(\"${KUBE_TEST_TARGETS[@]##*/}\")\nreadonly KUBE_TEST_BINARIES_WIN=(\"${KUBE_TEST_BINARIES[@]/%/.exe}\")\nreadonly KUBE_TEST_PORTABLE=(\n  api/examples/pod.json\n  cmd/e2e/pod.json"
  },
  {
    "id" : "05d311aa-d1ba-482a-b9ac-ae6d843c8515",
    "prId" : 2092,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "74392127-cf52-42c5-9222-5003b90da217",
        "parentId" : null,
        "authorId" : "fd5eb1fb-f30a-4735-908c-944e87d99845",
        "body" : "Why rsync and why one command per file instead of just passing the find list to a single rsync/cp/install invocation?\n\nAh I see this comment now:\n\n``` shell\n# We use rsync to copy some binaries around.  It is faster (0.3s vs. 1.1s) on my\n# machine vs. `install`\n```\n\nI think what makes it slow is `find -exec`, instead you can try:\n\n``` shell\nlocal filelist\nfilelist=($(find \"${full_binpath_src}\" -maxdepth 1 -type f -print))\ninstall -c \"${filelist[@]}\" \"${KUBE_OUTPUT_BINPATH}/${platform}/\"\n```\n",
        "createdAt" : "2014-10-31T21:16:17Z",
        "updatedAt" : "2014-11-02T00:56:56Z",
        "lastEditedBy" : "fd5eb1fb-f30a-4735-908c-944e87d99845",
        "tags" : [
        ]
      },
      {
        "id" : "e962830a-a30f-43e7-88ce-8bcd8656e820",
        "parentId" : "74392127-cf52-42c5-9222-5003b90da217",
        "authorId" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "body" : "I'll try it out and time it.\n",
        "createdAt" : "2014-10-31T21:22:08Z",
        "updatedAt" : "2014-11-02T00:56:56Z",
        "lastEditedBy" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "tags" : [
        ]
      },
      {
        "id" : "9b8e827e-c35e-49b5-ace4-8644b3e9a863",
        "parentId" : "74392127-cf52-42c5-9222-5003b90da217",
        "authorId" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "body" : "Nope - rsync is still significantly faster by ~2x on my latest tests.\n",
        "createdAt" : "2014-11-01T23:14:37Z",
        "updatedAt" : "2014-11-02T00:56:56Z",
        "lastEditedBy" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "tags" : [
        ]
      }
    ],
    "commit" : "5d33ce46cce5ff87653cb5a265950341c21b96f1",
    "line" : null,
    "diffHunk" : "@@ -1,1 +212,216 @@      mkdir -p \"${KUBE_OUTPUT_BINPATH}/${platform}\"\n      find \"${full_binpath_src}\" -maxdepth 1 -type f -exec \\\n        rsync -pt {} \"${KUBE_OUTPUT_BINPATH}/${platform}\" \\;\n    fi\n  done"
  }
]