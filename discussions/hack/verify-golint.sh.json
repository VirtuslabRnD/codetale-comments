[
  {
    "id" : "1ddd4e48-e76e-418d-8af3-3f5299ab63ee",
    "prId" : 84772,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/84772#pullrequestreview-312109122",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1cbf1f84-1f9a-4ba1-8f41-4193a011fdbd",
        "parentId" : null,
        "authorId" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "body" : "imo we should require no whitespace before it given how simple these files are",
        "createdAt" : "2019-11-05T22:43:41Z",
        "updatedAt" : "2019-11-05T22:43:41Z",
        "lastEditedBy" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "tags" : [
        ]
      },
      {
        "id" : "bbff7bb1-48c6-4d79-a2c4-7ff313a29d46",
        "parentId" : "1cbf1f84-1f9a-4ba1-8f41-4193a011fdbd",
        "authorId" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "body" : "oh I see, the intention is to put it on the same line as the package.\r\nI guess this is fine since go packages likely cannot contain `#` in their path, otherwise I'd suggest having comment _lines_ that start with `#` exactly.",
        "createdAt" : "2019-11-05T22:44:41Z",
        "updatedAt" : "2019-11-05T22:44:41Z",
        "lastEditedBy" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "tags" : [
        ]
      },
      {
        "id" : "93b7509e-f272-4e33-ac55-22e5c9a4942a",
        "parentId" : "1cbf1f84-1f9a-4ba1-8f41-4193a011fdbd",
        "authorId" : "29c55301-dcb8-4340-be6c-238e297e9479",
        "body" : "Thanks for reviewing, @BenTheElder!\r\n\r\nYes, the idea is that the comments are inline with the package paths. The file becomes more compact, so it's easier to see what paths are related. If the file is ever automatically sorted, which [kube::util::check-file-in-alphabetical-order](https://github.com/kubernetes/kubernetes/blob/master/hack/lib/util.sh#L712-L727) will instruct you to do if it's not, the comment will stay with the package name.\r\n\r\nWhat do you think is the best action to take here? I'm happy to make any changes :)",
        "createdAt" : "2019-11-05T23:06:07Z",
        "updatedAt" : "2019-11-05T23:06:08Z",
        "lastEditedBy" : "29c55301-dcb8-4340-be6c-238e297e9479",
        "tags" : [
        ]
      },
      {
        "id" : "12103545-3be8-4567-911b-4eb5a0d2e2f0",
        "parentId" : "1cbf1f84-1f9a-4ba1-8f41-4193a011fdbd",
        "authorId" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "body" : "IMO this is the best option, I would have marked these comments resolved, but I can't :(",
        "createdAt" : "2019-11-05T23:09:43Z",
        "updatedAt" : "2019-11-05T23:09:43Z",
        "lastEditedBy" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "tags" : [
        ]
      },
      {
        "id" : "a19cd001-3de9-416c-967a-5df645b3af79",
        "parentId" : "1cbf1f84-1f9a-4ba1-8f41-4193a011fdbd",
        "authorId" : "29c55301-dcb8-4340-be6c-238e297e9479",
        "body" : "Goodie. Thanks 🙌",
        "createdAt" : "2019-11-05T23:20:54Z",
        "updatedAt" : "2019-11-05T23:20:54Z",
        "lastEditedBy" : "29c55301-dcb8-4340-be6c-238e297e9479",
        "tags" : [
        ]
      }
    ],
    "commit" : "e16ee0b68ef900a0cb03194d20dbf9a4e6fc736c",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +48,52 @@while IFS='' read -r line; do all_packages+=(\"$line\"); done < <(go list -e ./... | grep -vE \"/(third_party|vendor|staging/src/k8s.io/client-go/pkg|generated|clientset_generated)\" | sed -e 's|^k8s.io/kubernetes/||' -e \"s|^_\\(${KUBE_ROOT}/\\)\\{0,1\\}||\")\n# The regex below removes any \"#\" character and anything behind it and including any\n# whitespace before it. Then it removes empty lines.\nfailing_packages=()\nwhile IFS='' read -r line; do failing_packages+=(\"$line\"); done < <(sed -e 's/[[:blank:]]*#.*//' -e '/^$/d' \"$failure_file\")"
  },
  {
    "id" : "7fbe2b77-b538-4dc7-ac6a-0cb97eed26cf",
    "prId" : 47377,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/47377#pullrequestreview-43592677",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2ecd1692-ff92-4cd0-b160-8020077d9e0d",
        "parentId" : null,
        "authorId" : "ad0a3561-db60-47a9-b82f-ac613199f968",
        "body" : "`mapfile -t failing_packages < \"$failure_file\"` would probably be better. But not in this PR.",
        "createdAt" : "2017-06-12T23:56:27Z",
        "updatedAt" : "2017-07-17T21:37:47Z",
        "lastEditedBy" : "ad0a3561-db60-47a9-b82f-ac613199f968",
        "tags" : [
        ]
      }
    ],
    "commit" : "ab5e2851975f8f7cfbac164543eaebf97cd15572",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +64,68 @@\t$(go list -e ./... | egrep -v \"/(third_party|vendor|staging/src/k8s.io/client-go/pkg|generated|clientset_generated)\" | sed -e 's|^k8s.io/kubernetes/||' -e \"s|^_${KUBE_ROOT}/\\?||\")\n)\nfailing_packages=(\n\t$(cat $failure_file)\n)"
  },
  {
    "id" : "c09842af-f5f6-457b-b716-5c32841f6376",
    "prId" : 47377,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/47377#pullrequestreview-46382856",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "065979de-e429-4954-a240-188d909acb02",
        "parentId" : null,
        "authorId" : "1256edc4-2c21-4b50-9371-9c0a50744653",
        "body" : "I wonder if perhaps we should `| awk '{print $1}'` or something when we cat the file in, so that we could possibly add comments to the failure file.. have some sort of trail of why the failure exists, or a PR/Issue to look at.",
        "createdAt" : "2017-06-26T20:55:33Z",
        "updatedAt" : "2017-07-17T21:37:47Z",
        "lastEditedBy" : "1256edc4-2c21-4b50-9371-9c0a50744653",
        "tags" : [
        ]
      },
      {
        "id" : "5f0d2327-397a-4905-8907-83446f659140",
        "parentId" : "065979de-e429-4954-a240-188d909acb02",
        "authorId" : "c532215f-ed76-4a19-b066-8676d269eaf1",
        "body" : "While I like the idea, I think it's out of the scope of the PR and it might be tricky to implement. For instance, if line numbers change then the failure reason is now outdated.",
        "createdAt" : "2017-06-26T20:59:47Z",
        "updatedAt" : "2017-07-17T21:37:47Z",
        "lastEditedBy" : "c532215f-ed76-4a19-b066-8676d269eaf1",
        "tags" : [
        ]
      }
    ],
    "commit" : "ab5e2851975f8f7cfbac164543eaebf97cd15572",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +65,69 @@)\nfailing_packages=(\n\t$(cat $failure_file)\n)\nunset IFS"
  },
  {
    "id" : "345dcebf-c8db-4677-9201-c3f8d906471b",
    "prId" : 40303,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/40303#pullrequestreview-17996641",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c0f3c466-5a62-452b-8f1b-916971553b69",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "@stevekuznetsov does this do what it's supposed to do?  It doesn't have to be the pinnacle of beauty, it just needs to work.",
        "createdAt" : "2017-01-23T18:18:05Z",
        "updatedAt" : "2017-01-24T07:35:27Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "e0077d19-61d5-4818-ba6e-0f4c7db17843",
        "parentId" : "c0f3c466-5a62-452b-8f1b-916971553b69",
        "authorId" : "b145fbdc-4b68-45b5-b35e-49dd38c1d060",
        "body" : "You're running `#!/bin/bash` -- always use `[[` over `[`. If using `[[`, use `&&` and `||` for logic. If you must be POSIX compliant, use `[` and `-a` and `-o`. Access to empty arrays with `-o nounset` is tricky but `${#array[@]}` is safe.",
        "createdAt" : "2017-01-23T18:54:34Z",
        "updatedAt" : "2017-01-24T07:35:27Z",
        "lastEditedBy" : "b145fbdc-4b68-45b5-b35e-49dd38c1d060",
        "tags" : [
        ]
      }
    ],
    "commit" : "81461f7214497c72dbf814efc8f74e284c8c69a2",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +101,105 @@# check to make sure all packages that pass lint are in the linted file.\necho\nif [ ${#linted[@]} -eq 0 -a ${#gone[@]} -eq 0 ]; then\n\techo 'Success! All packages that should pass lint are listed in the linted file.'\nelse"
  },
  {
    "id" : "8834e6b6-c4b9-44a6-8f0e-3b295d16af55",
    "prId" : 40303,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/40303#pullrequestreview-17997156",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "883d0d8b-39da-4ba3-87b4-939b4b7449dc",
        "parentId" : null,
        "authorId" : "b145fbdc-4b68-45b5-b35e-49dd38c1d060",
        "body" : "More readable would be\r\n\r\n```sh\r\nif ! array_contains \"${p}\" \"${all_packages[@]}\"; then\r\n    gone+=( \"${p}\" )\r\nfi\r\n```",
        "createdAt" : "2017-01-23T18:56:46Z",
        "updatedAt" : "2017-01-24T07:35:27Z",
        "lastEditedBy" : "b145fbdc-4b68-45b5-b35e-49dd38c1d060",
        "tags" : [
        ]
      }
    ],
    "commit" : "81461f7214497c72dbf814efc8f74e284c8c69a2",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +80,84 @@gone=()\nfor p in \"${linted_packages[@]}\"; do\n\tarray_contains \"$p\" \"${all_packages[@]}\" || gone+=( \"$p\" )\ndone\n"
  },
  {
    "id" : "3f3e0f20-9752-45d7-9bd3-dfedacaa7853",
    "prId" : 31104,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ecd2260b-ee99-458b-9cd2-28213c59d509",
        "parentId" : null,
        "authorId" : "c63e1ceb-64bd-4726-b8ef-e647d73dae0c",
        "body" : "The two blanks in front of echo, is it intentional?\n",
        "createdAt" : "2016-08-23T10:08:20Z",
        "updatedAt" : "2016-08-23T12:14:11Z",
        "lastEditedBy" : "c63e1ceb-64bd-4726-b8ef-e647d73dae0c",
        "tags" : [
        ]
      },
      {
        "id" : "4b478871-5174-4ee1-9265-40500a69b774",
        "parentId" : "ecd2260b-ee99-458b-9cd2-28213c59d509",
        "authorId" : "c63e1ceb-64bd-4726-b8ef-e647d73dae0c",
        "body" : "I see, it is just a comment, not actual command\n",
        "createdAt" : "2016-08-23T10:09:52Z",
        "updatedAt" : "2016-08-23T12:14:11Z",
        "lastEditedBy" : "c63e1ceb-64bd-4726-b8ef-e647d73dae0c",
        "tags" : [
        ]
      }
    ],
    "commit" : "ac85f73f0d4f8cb8e745a21e146dc6a0c82a2f73",
    "line" : 40,
    "diffHunk" : "@@ -1,1 +100,104 @@\t\techo\n\t\tfor p in \"${linted[@]}\"; do\n\t\t\techo \"  echo $p >> hack/.linted_packages\"\n\t\tdone\n\t\techo \"  LANG=C sort -o hack/.linted_packages hack/.linted_packages\""
  },
  {
    "id" : "a503e005-3072-43d0-8ce4-8f78e31683bf",
    "prId" : 31104,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "da9e657e-a3c2-4c2c-8d86-215f4e31fe3e",
        "parentId" : null,
        "authorId" : "ad0a3561-db60-47a9-b82f-ac613199f968",
        "body" : "Test via this script? Do you mean that they can fix this with the script you echo'd or test that it's fixed with this verify script? Either way, this should change.\n",
        "createdAt" : "2016-08-23T18:14:38Z",
        "updatedAt" : "2016-08-23T18:14:38Z",
        "lastEditedBy" : "ad0a3561-db60-47a9-b82f-ac613199f968",
        "tags" : [
        ]
      },
      {
        "id" : "9d89c869-a18e-4e70-a879-781acdc93295",
        "parentId" : "da9e657e-a3c2-4c2c-8d86-215f4e31fe3e",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "Please open a follow-up PR to fix this. I agree that the wording is not really good. It was even worse before this PR:\n",
        "createdAt" : "2016-08-23T18:36:00Z",
        "updatedAt" : "2016-08-23T18:36:00Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "ac85f73f0d4f8cb8e745a21e146dc6a0c82a2f73",
    "line" : 45,
    "diffHunk" : "@@ -1,1 +104,108 @@\t\techo \"  LANG=C sort -o hack/.linted_packages hack/.linted_packages\"\n\t\techo\n\t\techo 'You can test via this script and commit the result.'\n\t\techo\n\t} >&2"
  },
  {
    "id" : "1b554b32-4791-47c9-ac38-095a0b8232cd",
    "prId" : 27911,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b990155c-27ef-49d8-83c5-e63273518dd8",
        "parentId" : null,
        "authorId" : "698f4eb2-501b-44f5-9ff2-a2d82e9ac4f7",
        "body" : ":+1: Interesting concept. I can only hope that failing because you've made something more awesome doesn't trip anybody up. Should at least be strictly more pleasant than finding another flake.\n",
        "createdAt" : "2016-07-20T14:54:44Z",
        "updatedAt" : "2016-08-11T00:40:22Z",
        "lastEditedBy" : "698f4eb2-501b-44f5-9ff2-a2d82e9ac4f7",
        "tags" : [
        ]
      },
      {
        "id" : "052e8a7a-095a-4d23-bebf-4a98d6ce2edc",
        "parentId" : "b990155c-27ef-49d8-83c5-e63273518dd8",
        "authorId" : "ffc157a5-b8d0-4a06-b942-f8e5150e4215",
        "body" : "lol yeah figure it will happen a couple times then be fine like all things\nturned on at first ;)\n\nOn Wed, Jul 20, 2016 at 10:55 AM, Morgan Bauer notifications@github.com\nwrote:\n\n> In hack/verify-golint.sh\n> https://github.com/kubernetes/kubernetes/pull/27911#discussion_r71540861\n> :\n> \n> > +if [ ${#errors[@]} -eq 0 ]; then\n> > -   echo 'Congratulations!  All Go source files have been linted.'\n> >   +else\n> > -   {\n> > -       echo \"Errors from golint:\"\n> > -       for err in \"${errors[@]}\"; do\n> > -           echo \"$err\"\n> > -       done\n> > -       echo\n> > -       echo 'Please fix the above errors. You can test via \"golint\" and commit the result.'\n> > -       echo\n> > -   } >&2\n> > -   false\n> >   +fi\n> >   +\n> >   +# check to make sure all packages that pass lint are in the linted file.\n> \n> 👍 Interesting concept. I can only hope that failing because you've made\n> something more awesome doesn't trip anybody up. Should at least be strictly\n> more pleasant than finding another flake.\n> \n> —\n> You are receiving this because you were assigned.\n> Reply to this email directly, view it on GitHub\n> https://github.com/kubernetes/kubernetes/pull/27911/files/68813d56bae618645cd24259e79d0a3556db689b#r71540861,\n> or mute the thread\n> https://github.com/notifications/unsubscribe-auth/ABYNbB6TKNrPIbKQA_n8OornLvLa_DZPks5qXjbmgaJpZM4I8WTQ\n> .\n",
        "createdAt" : "2016-07-20T15:01:29Z",
        "updatedAt" : "2016-08-11T00:40:22Z",
        "lastEditedBy" : "ffc157a5-b8d0-4a06-b942-f8e5150e4215",
        "tags" : [
        ]
      }
    ],
    "commit" : "70d860fe08f0c992ed66ff38bfa5bdb8835563e3",
    "line" : 80,
    "diffHunk" : "@@ -1,1 +78,82 @@fi\n\n# check to make sure all packages that pass lint are in the linted file.\nif [ ${#linted[@]} -eq 0 ]; then\n\techo 'Success! All packages that should pass lint are listed in the linted file.'"
  },
  {
    "id" : "48c6c8b2-cb16-49ef-83d5-fdaac449577d",
    "prId" : 27911,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "eba5214d-eadb-40a6-93c7-37d64fc925fd",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Is this missing a \"in $2\"? I don't understand how this works otherwise.\n",
        "createdAt" : "2016-07-20T22:04:21Z",
        "updatedAt" : "2016-08-11T00:40:22Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "678e255a-3e65-43d8-84c9-b79e49409b8f",
        "parentId" : "eba5214d-eadb-40a6-93c7-37d64fc925fd",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "oh, is it the \"shift\" that makes it work? Please document, looking for $1 and $2 is how I figure out what bash functions will do if there's no comment telling me the usage. :)\n",
        "createdAt" : "2016-07-20T22:06:02Z",
        "updatedAt" : "2016-08-11T00:40:22Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "70d860fe08f0c992ed66ff38bfa5bdb8835563e3",
    "line" : null,
    "diffHunk" : "@@ -1,1 +29,33 @@    local seeking=$1; shift # shift will iterate through the array\n    local in=1 # in holds the exit status for the function\n    for element; do\n        if [[ \"$element\" == \"$seeking\" ]]; then\n            in=0 # set in to 0 since we found it"
  },
  {
    "id" : "263efda6-5ac5-4192-b4e5-0697050c2480",
    "prId" : 27911,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "88b5fcb8-4ea0-4f6d-be9c-4c643bb13f2e",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "can you write a command for them to copy-paste to do the addition? Like \"echo 'foo/bar' >> $linted_file && sort $linted_file\". Would save effort.\n",
        "createdAt" : "2016-07-20T22:08:03Z",
        "updatedAt" : "2016-08-11T00:40:22Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "70d860fe08f0c992ed66ff38bfa5bdb8835563e3",
    "line" : null,
    "diffHunk" : "@@ -1,1 +88,92 @@\t\tdone\n\t\techo\n\t\techo 'Please add the following packages to the linted file. You can test via this script and commit the result.'\n\t\techo\n\t} >&2"
  }
]