[
  {
    "id" : "7df09442-60d2-4ff4-874f-a2741d53d953",
    "prId" : 76810,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/76810#pullrequestreview-228579278",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "894a53ad-8021-47c4-a153-1660d8879f74",
        "parentId" : null,
        "authorId" : "e7b8fd7e-f93b-44b6-b6d0-4331207d901c",
        "body" : "change reason:\r\n```\r\nIn hack/test-update-storage-objects.sh line 126:\r\nfor test in ${tests[@]}; do\r\n            ^-- SC2068: Double quote array expansions to avoid re-splitting elements.\r\n```",
        "createdAt" : "2019-04-19T03:26:47Z",
        "updatedAt" : "2019-04-19T04:03:30Z",
        "lastEditedBy" : "e7b8fd7e-f93b-44b6-b6d0-4331207d901c",
        "tags" : [
        ]
      }
    ],
    "commit" : "4d6319b9b243c471a299efb1d7be6d282c6f7b15",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +124,128 @@\n# Create object(s)\nfor test in \"${tests[@]}\"; do\n  IFS=',' read -ra test_data <<<\"$test\"\n  source_file=${test_data[0]}"
  },
  {
    "id" : "a44fb54e-883a-4389-aabb-0fb9511199aa",
    "prId" : 76810,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/76810#pullrequestreview-228583395",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1705c7a1-2518-4400-a83f-720825e892b2",
        "parentId" : null,
        "authorId" : "185604f6-2915-4313-8d6b-1d55757d0d22",
        "body" : "Note IFS=,",
        "createdAt" : "2019-04-19T03:40:43Z",
        "updatedAt" : "2019-04-19T04:03:30Z",
        "lastEditedBy" : "185604f6-2915-4313-8d6b-1d55757d0d22",
        "tags" : [
        ]
      },
      {
        "id" : "03b7dfba-09bd-4641-9ae0-b8838e3516d9",
        "parentId" : "1705c7a1-2518-4400-a83f-720825e892b2",
        "authorId" : "e7b8fd7e-f93b-44b6-b6d0-4331207d901c",
        "body" : "Thank you very much. @fejta \r\nYou are right. I have updated the code.\r\n:+1: ",
        "createdAt" : "2019-04-19T04:07:23Z",
        "updatedAt" : "2019-04-19T04:07:24Z",
        "lastEditedBy" : "e7b8fd7e-f93b-44b6-b6d0-4331207d901c",
        "tags" : [
        ]
      }
    ],
    "commit" : "4d6319b9b243c471a299efb1d7be6d282c6f7b15",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +125,129 @@# Create object(s)\nfor test in \"${tests[@]}\"; do\n  IFS=',' read -ra test_data <<<\"$test\"\n  source_file=${test_data[0]}\n"
  },
  {
    "id" : "06824b6d-9622-43f0-a52b-7e2847a3277a",
    "prId" : 63165,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/63165#pullrequestreview-115472939",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ae6e5c4b-6372-4236-9e74-b89b93566283",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "un-indent",
        "createdAt" : "2018-04-26T08:22:04Z",
        "updatedAt" : "2018-04-26T12:27:54Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "a68c57155e728b2782408cbab88ecee0444a4ba8",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +52,56 @@  local storage_media_type=${2:-\"\"}\n  kube::log::status \"Starting kube-apiserver with...\"\n  kube::log::status \"                        storage-media-type: ${storage_media_type}\"\n  kube::log::status \"                            runtime-config: ${RUNTIME_CONFIG}\"\n  kube::log::status \"                 storage-version overrides: ${storage_versions}\""
  },
  {
    "id" : "fbe17816-b4f7-4a29-8b5e-0b849f1928e5",
    "prId" : 63075,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/63075#pullrequestreview-115144237",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b03211a6-9e5e-4350-8726-e8cfaca763f7",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "why this?",
        "createdAt" : "2018-04-25T10:24:16Z",
        "updatedAt" : "2018-04-25T13:02:37Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "ec6e1aa8-e574-40b4-83e4-8a0b33706e1b",
        "parentId" : "b03211a6-9e5e-4350-8726-e8cfaca763f7",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "> why this?\r\n\r\nv1 requires autoscaling/v1 because the RC/scale endpoint serves it. You have to be able to manage that type or the rest api installer fails.",
        "createdAt" : "2018-04-25T12:02:01Z",
        "updatedAt" : "2018-04-25T13:02:37Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "e931158128a6b50a6b13dbdb16887679e4e113cd",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +121,125 @@# Additionally use KUBE_STORAGE_MEDIA_TYPE_JSON for storage encoding.\n#######################################################\nKUBE_API_VERSIONS=\"v1,autoscaling/v1,${KUBE_OLD_API_VERSION},${KUBE_NEW_API_VERSION}\"\nRUNTIME_CONFIG=\"api/all=false,api/v1=true,${KUBE_OLD_API_VERSION}=true,${KUBE_NEW_API_VERSION}=true\"\nstartApiServer ${KUBE_OLD_STORAGE_VERSIONS} ${KUBE_STORAGE_MEDIA_TYPE_JSON}"
  },
  {
    "id" : "db252abf-9d1a-42ad-9067-857ad87e1316",
    "prId" : 50327,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/50327#pullrequestreview-56247166",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "40f900a0-a77b-4929-92db-c53ac75c7694",
        "parentId" : null,
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "It looks like we should disable `extensions/v1beta1` in the new api version, because we want to make sure we can read from `networking.k8s.io/v1` even if `extensions/v1beta1` is removed.\r\n\r\nAt line 111, we should add a test data for networking.k8s.io object.\r\n\r\n@sttts you only changed the internal versions of the PR, so it's not your responsibility to add the upgrade test. It should had been added when we created networking.k8s.io/v1.\r\n\r\n",
        "createdAt" : "2017-08-10T21:19:54Z",
        "updatedAt" : "2017-08-15T09:56:45Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      },
      {
        "id" : "314fe703-3fef-455a-b190-5df397067ad7",
        "parentId" : "40f900a0-a77b-4929-92db-c53ac75c7694",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "@sttts could you open a followup issue/PR for fixing this script?",
        "createdAt" : "2017-08-11T17:34:45Z",
        "updatedAt" : "2017-08-15T09:56:45Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      },
      {
        "id" : "3de3f679-6e0d-408e-aaf4-292f7844b140",
        "parentId" : "40f900a0-a77b-4929-92db-c53ac75c7694",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "As we still write `extensions/v1beta1` objects (see discussion below), disabling `extensions/v1beta1` will break `networking.k8s.io/v1` as the former cannot be decoded from storage anymore. KUBE_API_VERSIONS is all or nothing: types+http-handler or no registered types and no http-handler for the disabled group. I wonder whether we shouldn't have a way to keep types registered when disabling group versions.",
        "createdAt" : "2017-08-14T09:18:17Z",
        "updatedAt" : "2017-08-15T09:56:45Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "ab2fcef2-0128-4a50-9c09-591bb9ccd276",
        "parentId" : "40f900a0-a77b-4929-92db-c53ac75c7694",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "Create an issue (which includes switching storage types): https://github.com/kubernetes/kubernetes/issues/50604",
        "createdAt" : "2017-08-14T09:23:06Z",
        "updatedAt" : "2017-08-15T09:56:45Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "f7c643ab-5a98-441c-8c11-e3561a08e05d",
        "parentId" : "40f900a0-a77b-4929-92db-c53ac75c7694",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "@sttts I think the parameter should be like this:\r\n```bash\r\nKUBE_OLD_API_VERSION=\"storage.k8s.io/v1beta1,extensions/v1beta1\"\r\nKUBE_NEW_API_VERSION=\"networking.k8s.io/v1,storage.k8s.io/v1\"\r\nKUBE_OLD_STORAGE_VERSIONS=\"extensions/v1beta1,storage.k8s.io/v1beta1\"\r\n# In step 3, networking objects will be converted from \"extensions/v1beta1\" and stored as \"networking.k8s.io/v1\".\r\n# https://github.com/kubernetes/kubernetes/blob/v1.8.0-alpha.2/hack/test-update-storage-objects.sh#L175\r\nKUBE_NEW_STORAGE_VERSIONS=\"networking.k8s.io/v1,storage.k8s.io/v1\" \r\n```\r\n\r\n> As we still write extensions/v1beta1 objects\r\n\r\nAre you referring to fact with this PR, by default we still store objects as `extensions/v1beta1`? I agree. But we should test that we have the ability of converting the storage versions now.\r\n\r\nAnyway, it doesn't block this PR.",
        "createdAt" : "2017-08-15T01:46:37Z",
        "updatedAt" : "2017-09-01T19:59:55Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "6bc9f3fba6b3ca51ce8af68e1acf7920d569d51d",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +114,118 @@\nKUBE_OLD_API_VERSION=\"networking.k8s.io/v1,storage.k8s.io/v1beta1,extensions/v1beta1\"\nKUBE_NEW_API_VERSION=\"networking.k8s.io/v1,storage.k8s.io/v1,extensions/v1beta1\"\nKUBE_OLD_STORAGE_VERSIONS=\"storage.k8s.io/v1beta1\"\nKUBE_NEW_STORAGE_VERSIONS=\"storage.k8s.io/v1\""
  },
  {
    "id" : "abc9b381-0dd9-414a-8bf9-397ed6080774",
    "prId" : 35782,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/35782#pullrequestreview-20045469",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b98ebf86-fd14-4087-a101-e471652c9dff",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "@lavalamp - I think this is the right thing to do. WDYT?",
        "createdAt" : "2017-01-31T11:01:35Z",
        "updatedAt" : "2017-02-02T14:26:21Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "d7a7e5ae-6606-411a-95f0-7afd9aa858ce",
        "parentId" : "b98ebf86-fd14-4087-a101-e471652c9dff",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "Job has v1 and v2alpha1, can we test that? I feel it's unfair to ask you to test Job, but otherwise we don't test any version upgrades.\r\n\r\n@soltysh it looks like you are the last one that touched this file, do you remember if we should test v1 and v2alpha1 Job in this script?",
        "createdAt" : "2017-02-02T12:56:41Z",
        "updatedAt" : "2017-02-02T14:26:21Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      },
      {
        "id" : "a7499718-58ae-43de-9d31-cc0c1b3dd4b5",
        "parentId" : "b98ebf86-fd14-4087-a101-e471652c9dff",
        "authorId" : "a6ca7669-677e-4e8d-80cf-83cbff3b4216",
        "body" : "Created #40860\r\n\r\ncc @DirectXMan12",
        "createdAt" : "2017-02-02T13:07:40Z",
        "updatedAt" : "2017-02-02T14:26:21Z",
        "lastEditedBy" : "a6ca7669-677e-4e8d-80cf-83cbff3b4216",
        "tags" : [
        ]
      },
      {
        "id" : "f36e41c5-f857-4999-be4c-1c5c42cc18c5",
        "parentId" : "b98ebf86-fd14-4087-a101-e471652c9dff",
        "authorId" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "body" : "Jobs should be removed from v2alpha1 per https://github.com/kubernetes/kubernetes/issues/37166",
        "createdAt" : "2017-02-03T16:11:54Z",
        "updatedAt" : "2017-02-03T16:11:54Z",
        "lastEditedBy" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "tags" : [
        ]
      }
    ],
    "commit" : "868118d49fdbd7c867a6f66ff4f736ed9873baa6",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +109,113 @@\n# After removing HPA in v1beta1 there is basically no resource which has\n# two versions. In the future we may want to extend it.\n# source_file,resource,namespace,name,old_version,new_version\ntests=("
  },
  {
    "id" : "1754e7c0-7b75-4c31-935d-19795dc63172",
    "prId" : 34082,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/34082#pullrequestreview-3052968",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e8ce2c1d-615d-4dd6-b567-888a4b60d962",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Update the comment block above to say that this also tests rolling forward to etcd3?\n\nAlso, will this be flaky? Should we start and stop through etcd 2.3 first?\n",
        "createdAt" : "2016-10-05T20:25:01Z",
        "updatedAt" : "2016-10-06T07:33:00Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "2082ca97-cd7a-44b0-818b-ea50f3b6d90d",
        "parentId" : "e8ce2c1d-615d-4dd6-b567-888a4b60d962",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Currently, this is just the first step of test, because we are using 3.0.10 binary in all runs. So we are actually only testing migration from v2 to v3 API, not upgrading the binary itself. I will try to improve the test later (once we have the \"migrate-if-needed.sh\" script fully ready.\n",
        "createdAt" : "2016-10-06T06:41:30Z",
        "updatedAt" : "2016-10-06T07:33:00Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "0e61d817c5f2902f7f498e36c933aae0bf915861",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +176,180 @@KUBE_API_VERSIONS=\"${KUBE_NEW_API_VERSION},${KUBE_OLD_API_VERSION}\"\nRUNTIME_CONFIG=\"api/all=false,api/${KUBE_OLD_API_VERSION}=true,api/${KUBE_NEW_API_VERSION}=true\"\nstartApiServer ${STORAGE_BACKEND_ETCD3} ${KUBE_NEW_STORAGE_VERSIONS} ${KUBE_STORAGE_MEDIA_TYPE_JSON}\n\n# Update etcd objects, so that will now be stored in the new api version."
  },
  {
    "id" : "dcced309-d824-4988-a049-32c564cea807",
    "prId" : 34082,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/34082#pullrequestreview-3052986",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e55670bc-2955-44da-9de2-dc5e09d1cec4",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "So what i wanted to say is that it shouldn't be flaky.\n",
        "createdAt" : "2016-10-06T06:41:46Z",
        "updatedAt" : "2016-10-06T07:33:00Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "0e61d817c5f2902f7f498e36c933aae0bf915861",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +176,180 @@KUBE_API_VERSIONS=\"${KUBE_NEW_API_VERSION},${KUBE_OLD_API_VERSION}\"\nRUNTIME_CONFIG=\"api/all=false,api/${KUBE_OLD_API_VERSION}=true,api/${KUBE_NEW_API_VERSION}=true\"\nstartApiServer ${STORAGE_BACKEND_ETCD3} ${KUBE_NEW_STORAGE_VERSIONS} ${KUBE_STORAGE_MEDIA_TYPE_JSON}\n\n# Update etcd objects, so that will now be stored in the new api version."
  },
  {
    "id" : "8d090a48-baa1-4de7-bfc5-af0b0f3ca1a5",
    "prId" : 26553,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "52c52f2f-9507-44fb-b144-8469c857ec3c",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "@lavalamp - my feeling is that this is enough (we are testing defaulg prefix \"/registry\" in all other suites and existing tests. If you really think that it's not enough, we can run this suite twice for different prefixes. But I think this is just waste of time.\n",
        "createdAt" : "2016-05-31T08:52:04Z",
        "updatedAt" : "2016-05-31T08:52:04Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "9a5d0e0fa0c25e9ffbf09123f76800014bb720d9",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +38,42 @@ETCD_HOST=${ETCD_HOST:-127.0.0.1}\nETCD_PORT=${ETCD_PORT:-4001}\nETCD_PREFIX=${ETCD_PREFIX:-randomPrefix}\nAPI_PORT=${API_PORT:-8080}\nAPI_HOST=${API_HOST:-127.0.0.1}"
  },
  {
    "id" : "2d4f8641-d282-468e-bbb0-30ccf003b847",
    "prId" : 22357,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cdc5fa6e-541e-416a-b056-b40794230339",
        "parentId" : null,
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "RUNTIME_CONFIG is being printed twice?\n",
        "createdAt" : "2016-03-04T01:55:19Z",
        "updatedAt" : "2016-03-04T22:05:42Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      }
    ],
    "commit" : "156c1f3c5d96ed780c54eac697eadd12aca24ceb",
    "line" : null,
    "diffHunk" : "@@ -1,1 +46,50 @@  local storage_versions=${1:-\"\"}\n  kube::log::status \"Starting kube-apiserver with KUBE_API_VERSIONS: ${KUBE_API_VERSIONS}\"\n  kube::log::status \"                            and runtime-config: ${RUNTIME_CONFIG}\"\n  kube::log::status \"                 and storage-version overrides: ${storage_versions}\"\n"
  },
  {
    "id" : "14a4a4c8-4093-487a-ba0d-8394501c1f6b",
    "prId" : 19512,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a6c7f1ea-5bb7-42d1-8994-0aaf5e0fa788",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "I think you need a `[[ -n ${APISERVER_PID-} ]] ||` here, too, in case this is called when ${APISERVER_PID} is not set?\n",
        "createdAt" : "2016-01-19T23:23:45Z",
        "updatedAt" : "2016-01-19T23:23:45Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "fefb7a9846e60c9590a803c99c5ecb659ac1fc04",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +65,69 @@  [[ -n ${APISERVER_PID-} ]] && kill ${APISERVER_PID} 1>&2 2>/dev/null\n\n  wait ${APISERVER_PID} || true\n  kube::log::status \"api server exited\"\n  unset APISERVER_PID"
  },
  {
    "id" : "04a2bf70-bc44-4183-9154-85e16790859f",
    "prId" : 19512,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "62ebddd6-2ae9-4434-8b9b-68f05159b3a0",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Is this still needed even with the wait added in? And if so, maybe you should add it at the end of the killApiServer function, since that case is exercised multiple times?\n",
        "createdAt" : "2016-01-19T23:24:32Z",
        "updatedAt" : "2016-01-19T23:24:32Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "531a12d0-1243-43a7-a324-1ae9e5c447df",
        "parentId" : "62ebddd6-2ae9-4434-8b9b-68f05159b3a0",
        "authorId" : "d324e241-a7f0-4ace-bda2-4174b07bdb18",
        "body" : "Yes, even with the wait.\n\nI can add the extra sleeps, but in my experience this particular spot is where the sleep was needed.  Since it's a kludge (I don't consider the wait a kludge, though), I prefer the minimal kludging necessary.  WDYT?\n",
        "createdAt" : "2016-01-25T18:50:44Z",
        "updatedAt" : "2016-01-25T18:50:44Z",
        "lastEditedBy" : "d324e241-a7f0-4ace-bda2-4174b07bdb18",
        "tags" : [
        ]
      },
      {
        "id" : "a623cd32-8180-4bf5-a76d-de7d812ef6cd",
        "parentId" : "62ebddd6-2ae9-4434-8b9b-68f05159b3a0",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "OK, that is mysterious. But I want to get this in ASAP, so LGTM\n",
        "createdAt" : "2016-01-25T20:47:04Z",
        "updatedAt" : "2016-01-25T20:47:04Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "fefb7a9846e60c9590a803c99c5ecb659ac1fc04",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +127,131 @@\n# This seems to reduce flakiness.\nsleep 1\nstartApiServer\n"
  },
  {
    "id" : "0f018950-0245-4c42-95cd-0ff3fb0eca6d",
    "prId" : 11273,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "34f42170-fdfb-488e-a38c-c729b9c05270",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "does this not run in shippable?\n",
        "createdAt" : "2015-07-15T04:12:07Z",
        "updatedAt" : "2015-07-15T04:53:51Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "85be438c-6d39-4d7d-a01a-c979d0eea4fb",
        "parentId" : "34f42170-fdfb-488e-a38c-c729b9c05270",
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "It does:\nhttps://github.com/GoogleCloudPlatform/kubernetes/blob/master/shippable.yml#L43\n\npod.yaml was copied to both directories previously.\n",
        "createdAt" : "2015-07-15T04:15:20Z",
        "updatedAt" : "2015-07-15T04:53:51Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "59e22c4d-0136-453f-a530-e0fb721a6d97",
        "parentId" : "34f42170-fdfb-488e-a38c-c729b9c05270",
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "yes it runs in shippable. pod.yaml is duplicated in both locations to alleviate build woes cause by #11239. this finishes the migration.\n",
        "createdAt" : "2015-07-15T04:16:49Z",
        "updatedAt" : "2015-07-15T04:53:51Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      }
    ],
    "commit" : "337772a91f90dd96533d5b8158f014983aa97302",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +94,98 @@# Create a pod\nkube::log::status \"Creating a pod\"\n${KUBECTL} create -f docs/user-guide/pod.yaml\n\nkillApiServer"
  }
]