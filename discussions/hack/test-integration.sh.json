[
  {
    "id" : "bf910ae3-1b71-4c5b-9349-8bc48efa2f45",
    "prId" : 14501,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8a77368e-c5ff-4d81-aa67-a6d6806bac06",
        "parentId" : null,
        "authorId" : null,
        "body" : "Lets open an issue for this so that we don't forget.\n",
        "createdAt" : "2015-09-24T17:15:34Z",
        "updatedAt" : "2015-09-24T17:15:34Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      }
    ],
    "commit" : "ec427f22b16f8819a81442696f3f08e6de4a228b",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +45,49 @@  kube::log::status \"Running integration test cases\"\n\n  # TODO: Re-enable race detection when we switch to a thread-safe etcd client\n  # KUBE_RACE=\"-race\"\n  KUBE_GOFLAGS=\"-tags 'integration no-docker' \" \\"
  },
  {
    "id" : "165c7b51-1691-4d66-b173-0bde87939673",
    "prId" : 6017,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "91b9d42e-e763-43e2-99af-a1c562798766",
        "parentId" : null,
        "authorId" : "fd5eb1fb-f30a-4735-908c-944e87d99845",
        "body" : "I think this is what you want:\n\n``` shell\n$ KUBE_TEST_API_VERSIONS='v1beta1,v1beta3'\n$ apiVersions=(${KUBE_TEST_API_VERSIONS//,/ })\n$ for apiVersion in \"${apiVersions[@]}\"; do echo \"[$apiVersion]\"; done\n[v1beta1]\n[v1beta3]\n```\n\nSo this is transforming the comma-separated `KUBE_TEST_API_VERSIONS` into an `apiVersions` bash array, that you can then iterate on.\n\nIf this is a function, you should have `local` on all variables. (Doesn't seem to be the case here.)\n",
        "createdAt" : "2015-03-26T21:52:03Z",
        "updatedAt" : "2015-03-26T22:36:52Z",
        "lastEditedBy" : "fd5eb1fb-f30a-4735-908c-944e87d99845",
        "tags" : [
        ]
      },
      {
        "id" : "2d30565a-e47a-40c1-bc01-c76f17dba217",
        "parentId" : "91b9d42e-e763-43e2-99af-a1c562798766",
        "authorId" : "fd5eb1fb-f30a-4735-908c-944e87d99845",
        "body" : "And yes, this works for more than 2 values, I just confirmed it :-)\n",
        "createdAt" : "2015-03-26T21:52:41Z",
        "updatedAt" : "2015-03-26T22:36:52Z",
        "lastEditedBy" : "fd5eb1fb-f30a-4735-908c-944e87d99845",
        "tags" : [
        ]
      },
      {
        "id" : "efd42762-0166-4206-a717-b053c65a65f6",
        "parentId" : "91b9d42e-e763-43e2-99af-a1c562798766",
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "Yes. That works as well, but am wondering if its better.\nI found that using the read command and using Parameter Expansion are the 2 most popular ways of converting a CSV to an array: http://stackoverflow.com/questions/918886/how-do-i-split-a-string-on-a-delimiter-in-bash.\nBut it seems people prefer IFS since Parameter expansion breaks if the array values contain \"*\" or any other special regex wildcard.\nIn our simple case, both work, but am wondering if you have a preference for one over the other?\n",
        "createdAt" : "2015-03-26T22:34:38Z",
        "updatedAt" : "2015-03-26T22:36:52Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      },
      {
        "id" : "6e201433-995f-46f0-8f75-300f49cc9a0a",
        "parentId" : "91b9d42e-e763-43e2-99af-a1c562798766",
        "authorId" : "fd5eb1fb-f30a-4735-908c-944e87d99845",
        "body" : "I usually avoid IFS because sometimes it has some non-obvious side effects and IMHO it's just an awful interface... But I kind of agree this one case here seems like it should work for all combinations... I don't know, I'd still go for the substitution but I'll let you make the call, pick the one you're more comfortable with.\n",
        "createdAt" : "2015-03-26T23:18:59Z",
        "updatedAt" : "2015-03-26T23:18:59Z",
        "lastEditedBy" : "fd5eb1fb-f30a-4735-908c-944e87d99845",
        "tags" : [
        ]
      },
      {
        "id" : "d2e0f66a-41d1-404e-9cb2-9522411beac5",
        "parentId" : "91b9d42e-e763-43e2-99af-a1c562798766",
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "I will keep it as is :)\nThanks!\n",
        "createdAt" : "2015-03-26T23:26:30Z",
        "updatedAt" : "2015-03-26T23:26:30Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      }
    ],
    "commit" : "f56aa58741aeb6a8750d4e6ca7c84b212f25e60d",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +56,60 @@\n# Convert the CSV to an array of API versions to test\nIFS=',' read -a apiVersions <<< \"${KUBE_TEST_API_VERSIONS}\"\nfor apiVersion in \"${apiVersions[@]}\"; do\n  runTests \"${apiVersion}\""
  },
  {
    "id" : "e9edfdea-3b20-452b-89c0-9737cf19edeb",
    "prId" : 1410,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a0cfb1e8-0cad-44fb-9257-5cc750312a46",
        "parentId" : null,
        "authorId" : "fd5eb1fb-f30a-4735-908c-944e87d99845",
        "body" : "This will fail if we use `set -o nounset` (which I should correct shortly.)\n\nThis would be the standard way to check whether a variable is set or unset:\n\n``` shell\nif [[ \"${KUBE_NO_BUILD_INTEGRATION+set}\" != \"set\" ]]; then\n  ...\n```\n\nAlso, the `$(dirname $0)` needs double quotes, in fact it needs double quotes around itself and around $0 as well...\n\nThis works:\n\n``` shell\n  \"$(dirname \"$0\")\"/build-go.sh cmd/integration\n```\n\nBut it's really ugly... So my preference is always to set a variable at the start of the script which only needs one quote:\n\n``` shell\nbasedir=$(dirname \"$0\")\n```\n\nAnd then use `${basedir}` throughout the script:\n\n``` shell\nsource \"${basedir}/util.sh\"\nsource \"${basedir}/config-go.sh\"\n...\nif [[ \"${KUBE_NO_BUILD_INTEGRATION+set}\" != \"set\" ]]; then\n  \"${basedir}/build-go.sh\" cmd/integration\nfi\n```\n\nThis script needs more love, so if you prefer we can merge your change unchanged and I can take a stab on it on a separate PR.\n\nCheers,\nFilipe\n",
        "createdAt" : "2014-09-23T16:08:55Z",
        "updatedAt" : "2014-09-23T16:08:55Z",
        "lastEditedBy" : "fd5eb1fb-f30a-4735-908c-944e87d99845",
        "tags" : [
        ]
      },
      {
        "id" : "33357c7f-56a3-4746-b899-1b52ae9c3045",
        "parentId" : "a0cfb1e8-0cad-44fb-9257-5cc750312a46",
        "authorId" : "fd5eb1fb-f30a-4735-908c-944e87d99845",
        "body" : "Yes, in fact let me do that, I'll merge yours and follow up with another one myself.\n",
        "createdAt" : "2014-09-23T16:09:33Z",
        "updatedAt" : "2014-09-23T16:09:33Z",
        "lastEditedBy" : "fd5eb1fb-f30a-4735-908c-944e87d99845",
        "tags" : [
        ]
      }
    ],
    "commit" : "a96d16f8c08f6586b392f6c827a990c4f8db8573",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +30,34 @@set -e\n\nif [[ -z $KUBE_NO_BUILD_INTEGRATION ]]; then\n    $(dirname $0)/build-go.sh cmd/integration\nfi"
  }
]