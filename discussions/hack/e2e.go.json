[
  {
    "id" : "aaec0841-d204-4811-adee-ebb4911e7edd",
    "prId" : 60895,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/60895#pullrequestreview-102170392",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a71c51c0-fbdf-4c78-afe2-1a13641c9797",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "> kubetest now imports client-go, which imports glog, which registers an incompatible -v level flag\r\n\r\ndoesn't registering `v` into the local flagset mask the global one? and if `--v=5` is passed, this will fail with a parse error, right?",
        "createdAt" : "2018-03-07T19:43:44Z",
        "updatedAt" : "2018-03-07T19:43:44Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "2abb1f2c-94c4-486b-b77c-d0bab1b32446",
        "parentId" : "a71c51c0-fbdf-4c78-afe2-1a13641c9797",
        "authorId" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "body" : "we're shelling out to kubetest, not importing it. The goal is *explicitly* to mask it because people use bare `-v` (no args) already which doesn't match what kubetest now has. the old kubetest flag was a bool.",
        "createdAt" : "2018-03-07T19:55:12Z",
        "updatedAt" : "2018-03-07T19:55:12Z",
        "lastEditedBy" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "tags" : [
        ]
      },
      {
        "id" : "06c959dc-820f-4922-ab83-2c36658a9e3d",
        "parentId" : "a71c51c0-fbdf-4c78-afe2-1a13641c9797",
        "authorId" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "body" : "Er to clarify, glog's flag was incompatible in kubetest, but we can't change that, so @Q-Lee  changed the kubetest flag, but that breaks people who are used to `go run hack/e2e.go -v ...` because the `-v` is passed to kubetest which now has the glog flag registered. So we're translating it here to the new flag upstream, because people using hack/e2e.go have also not transitioned to kubetest when the actual implementation was moved there.",
        "createdAt" : "2018-03-08T02:26:58Z",
        "updatedAt" : "2018-03-08T02:33:58Z",
        "lastEditedBy" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "tags" : [
        ]
      }
    ],
    "commit" : "9674792897e34e023649c2b68ff736a28a69d834",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +47,51 @@\tget := fs.Bool(\"get\", getDefault, \"go get -u kubetest if old or not installed\")\n\told := fs.Duration(\"old\", oldDefault, \"Consider kubetest old if it exceeds this\")\n\tverbose := fs.Bool(\"v\", true, \"this flag is translated to kubetest's --verbose-commands\")\n\tvar a []string\n\tif err := fs.Parse(args[1:]); err == flag.ErrHelp {"
  },
  {
    "id" : "697e3fb6-e826-406f-97f9-debc21f1550d",
    "prId" : 40374,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/40374#pullrequestreview-19479599",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "84f51a42-fa9e-4f59-9790-f76aa1c70668",
        "parentId" : null,
        "authorId" : "ad0a3561-db60-47a9-b82f-ac613199f968",
        "body" : "Why are you doing it this way instead of just having `flag.Bool` var blocks and calling `flag.Parse` in `main`?",
        "createdAt" : "2017-01-31T19:17:16Z",
        "updatedAt" : "2017-02-03T01:43:07Z",
        "lastEditedBy" : "ad0a3561-db60-47a9-b82f-ac613199f968",
        "tags" : [
        ]
      },
      {
        "id" : "93350c57-1861-4c63-a4d7-2d5a7ec283d9",
        "parentId" : "84f51a42-fa9e-4f59-9790-f76aa1c70668",
        "authorId" : "185604f6-2915-4313-8d6b-1d55757d0d22",
        "body" : "To assist with unit testing",
        "createdAt" : "2017-01-31T20:01:07Z",
        "updatedAt" : "2017-02-03T01:43:07Z",
        "lastEditedBy" : "185604f6-2915-4313-8d6b-1d55757d0d22",
        "tags" : [
        ]
      },
      {
        "id" : "0bc723f0-4fb9-4539-bba3-3141c943bf58",
        "parentId" : "84f51a42-fa9e-4f59-9790-f76aa1c70668",
        "authorId" : "ad0a3561-db60-47a9-b82f-ac613199f968",
        "body" : "I looked at the unit test, and it seems to mostly test that the `flag` package works properly. ",
        "createdAt" : "2017-01-31T20:51:40Z",
        "updatedAt" : "2017-02-03T01:43:07Z",
        "lastEditedBy" : "ad0a3561-db60-47a9-b82f-ac613199f968",
        "tags" : [
        ]
      },
      {
        "id" : "248c617e-72fc-4434-935f-d6a60a0ba78f",
        "parentId" : "84f51a42-fa9e-4f59-9790-f76aa1c70668",
        "authorId" : "185604f6-2915-4313-8d6b-1d55757d0d22",
        "body" : "Actually I added this unit test because it is non-trivial and I messed it up multiple times. These unit tests are what give me confidence it does the right thing.  Specifically that go run hack/e2e.go --get=false --blah --foo sends --blah and --foo to kubetest.",
        "createdAt" : "2017-02-01T04:00:41Z",
        "updatedAt" : "2017-02-03T01:43:07Z",
        "lastEditedBy" : "185604f6-2915-4313-8d6b-1d55757d0d22",
        "tags" : [
        ]
      }
    ],
    "commit" : "2fffe48eb11afd3c4c09783a5edbc2cb03dc322b",
    "line" : 183,
    "diffHunk" : "@@ -1,1 +42,46 @@)\n\nfunc parse(args []string) (flags, error) {\n\tfs := flag.NewFlagSet(args[0], flag.ContinueOnError)\n\tget := fs.Bool(\"get\", getDefault, \"go get -u kubetest if old or not installed\")"
  },
  {
    "id" : "e51c278f-51ac-4d87-b1b9-73b35b303a84",
    "prId" : 37866,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/37866#pullrequestreview-11085538",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ba2bd7d1-9e97-45f9-9273-1f4d5c73635d",
        "parentId" : null,
        "authorId" : "ad0a3561-db60-47a9-b82f-ac613199f968",
        "body" : "Just declare these as `interrupt *time.Timer`. Don't bother creating timers.",
        "createdAt" : "2016-12-01T23:33:49Z",
        "updatedAt" : "2016-12-02T03:52:00Z",
        "lastEditedBy" : "ad0a3561-db60-47a9-b82f-ac613199f968",
        "tags" : [
        ]
      },
      {
        "id" : "8cb27242-31e3-4ac1-894b-dea1782018c3",
        "parentId" : "ba2bd7d1-9e97-45f9-9273-1f4d5c73635d",
        "authorId" : "185604f6-2915-4313-8d6b-1d55757d0d22",
        "body" : "IMO this makes finishRunning easier to read and understand.",
        "createdAt" : "2016-12-02T00:17:26Z",
        "updatedAt" : "2016-12-02T03:52:00Z",
        "lastEditedBy" : "185604f6-2915-4313-8d6b-1d55757d0d22",
        "tags" : [
        ]
      }
    ],
    "commit" : "416f066648a9b40839d1ef0c9a5efdd13c776806",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +36,40 @@var (\n\tinterrupt = time.NewTimer(time.Duration(0)) // interrupt testing at this time.\n\tterminate = time.NewTimer(time.Duration(0)) // terminate testing at this time.\n\t// TODO(fejta): change all these _ flags to -\n\tbuild            = flag.Bool(\"build\", false, \"If true, build a new release. Otherwise, use whatever is there.\")"
  },
  {
    "id" : "66b6971f-f64f-4fe2-8716-7eeb45b64f25",
    "prId" : 37866,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/37866#pullrequestreview-11206932",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c0038d72-2742-4378-b634-d7099361b624",
        "parentId" : null,
        "authorId" : "ad0a3561-db60-47a9-b82f-ac613199f968",
        "body" : "Wouldn't it be better to just not run them at all?",
        "createdAt" : "2016-12-02T07:21:05Z",
        "updatedAt" : "2016-12-02T07:21:10Z",
        "lastEditedBy" : "ad0a3561-db60-47a9-b82f-ac613199f968",
        "tags" : [
        ]
      },
      {
        "id" : "196b2a01-2ee3-47e8-be10-f5e368694fd0",
        "parentId" : "c0038d72-2742-4378-b634-d7099361b624",
        "authorId" : "185604f6-2915-4313-8d6b-1d55757d0d22",
        "body" : "Mind if I play around with improving this in a later PR?",
        "createdAt" : "2016-12-02T17:46:18Z",
        "updatedAt" : "2016-12-02T17:46:18Z",
        "lastEditedBy" : "185604f6-2915-4313-8d6b-1d55757d0d22",
        "tags" : [
        ]
      }
    ],
    "commit" : "416f066648a9b40839d1ef0c9a5efdd13c776806",
    "line" : 55,
    "diffHunk" : "@@ -1,1 +799,803 @@\t\tselect {\n\t\tcase <-terminate.C:\n\t\t\tterminate.Reset(time.Duration(0)) // Kill subsequent processes immediately.\n\t\t\tcmd.Process.Kill()\n\t\t\treturn fmt.Errorf(\"Terminate testing after 15m after %s timeout during %s\", *timeout, stepName)"
  },
  {
    "id" : "855e8966-414a-4618-b7a5-db97162d5ecd",
    "prId" : 37624,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/37624#pullrequestreview-10529894",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2b6846f4-e456-40bd-82d2-5151ecfb4c62",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "I debated using `CombinedOutput()`, but in many cases that's not what you want, but you'd still like `stderr` on failures.",
        "createdAt" : "2016-11-29T13:10:33Z",
        "updatedAt" : "2016-11-29T13:10:33Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "8896293cba1cfc8d603781ef3c44ffe43784db72",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +585,589 @@\to, err := exec.Command(\"kubectl\", \"get\", \"nodes\", \"--no-headers\").Output()\n\tif err != nil {\n\t\tlog.Printf(\"kubectl get nodes failed: %s\\n%s\", WrapError(err).Error(), string(o))\n\t\treturn -1, err\n\t}"
  },
  {
    "id" : "58d5f077-3a73-4dc5-a4a5-5a2eb105cbf3",
    "prId" : 37019,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/37019#pullrequestreview-9566018",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9186cced-b5d0-41f7-bd03-1e1bbd525218",
        "parentId" : null,
        "authorId" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "body" : "Optional: This is another thing you probably want to make modifiable in the not-too-distant future. Right now this is reasonable for testing pulls to Kubernetes Anywhere, but it can't necessarily test CI builds of Kubernetes.",
        "createdAt" : "2016-11-21T22:58:20Z",
        "updatedAt" : "2016-12-01T21:29:23Z",
        "lastEditedBy" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "tags" : [
        ]
      },
      {
        "id" : "7d3cbeb6-8d46-4345-8b92-bb1fb5a1cbf8",
        "parentId" : "9186cced-b5d0-41f7-bd03-1e1bbd525218",
        "authorId" : "f9231906-76cd-4270-87d5-4b97ae98ebb4",
        "body" : "Absolutely. That will be my next PR. I was trying to build up the functionality incrementally (and also get early feedback on the approach). Thanks for all of the feedback, by the way!",
        "createdAt" : "2016-11-21T23:14:24Z",
        "updatedAt" : "2016-12-01T21:29:23Z",
        "lastEditedBy" : "f9231906-76cd-4270-87d5-4b97ae98ebb4",
        "tags" : [
        ]
      },
      {
        "id" : "56a7eab0-db90-4dee-b49f-229667f5913a",
        "parentId" : "9186cced-b5d0-41f7-bd03-1e1bbd525218",
        "authorId" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "body" : "From experience, you may just want to get it out of the way sooner rather than later. After you push this PR, you're going to have to bump the e2e docker image (or have someone from @kubernetes/test-infra-maintainers do it) to use it in a job. That's not automatic (yet).",
        "createdAt" : "2016-11-21T23:21:55Z",
        "updatedAt" : "2016-12-01T21:29:23Z",
        "lastEditedBy" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "tags" : [
        ]
      },
      {
        "id" : "43a50daa-f9f8-4f99-ace6-35f189cd13ea",
        "parentId" : "9186cced-b5d0-41f7-bd03-1e1bbd525218",
        "authorId" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "body" : "But if it's a staged approach where you enable CI on the KA repo first and then handle k8s CI versions later, it's probably reasonable just to wait.",
        "createdAt" : "2016-11-21T23:23:02Z",
        "updatedAt" : "2016-12-01T21:29:23Z",
        "lastEditedBy" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "tags" : [
        ]
      }
    ],
    "commit" : "19fb97331d9d6eb473320675e3b435b4466ec6e4",
    "line" : 55,
    "diffHunk" : "@@ -1,1 +91,95 @@.phase2.installer_container=\"docker.io/colemickens/k8s-ignition:latest\"\n.phase2.docker_registry=\"gcr.io/google-containers\"\n.phase2.kubernetes_version=\"v1.4.1\"\n.phase2.provider=\"{{.Phase2Provider}}\"\n"
  },
  {
    "id" : "e0bfa04f-7cae-404a-b6b0-a1b93b3a25cb",
    "prId" : 34442,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/34442#pullrequestreview-3814059",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d9b373be-1bc5-437d-832a-8134e6e0c113",
        "parentId" : null,
        "authorId" : "185604f6-2915-4313-8d6b-1d55757d0d22",
        "body" : "Seems like it makes more sense to call deploy.Down() before return the Up error rather than relying on a defer.\n\nAlternatively we could change the run signature to a tuple such that we can determine whether or not main needs to schedule a teardown (ignoring the error).  For example we could do `return didAttemptUpWithoutSuccessfulDown, err` and if the first value is true call deploy.Down ignoring the error.\n\nHowever it seems reasonable to expect run() to handle tearing down before returning the error if appropriate.\n",
        "createdAt" : "2016-10-10T21:13:24Z",
        "updatedAt" : "2016-10-12T08:54:13Z",
        "lastEditedBy" : "185604f6-2915-4313-8d6b-1d55757d0d22",
        "tags" : [
        ]
      },
      {
        "id" : "2dfd13a0-2bf8-45a4-8193-1e8d967249ca",
        "parentId" : "d9b373be-1bc5-437d-832a-8134e6e0c113",
        "authorId" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "body" : "I'm not sure I follow. The whole problem is that we don't call 'Down' after the failed 'Up'.\n",
        "createdAt" : "2016-10-10T21:29:44Z",
        "updatedAt" : "2016-10-12T08:54:13Z",
        "lastEditedBy" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "tags" : [
        ]
      },
      {
        "id" : "25e52b48-f15d-4698-b012-1781e85728ae",
        "parentId" : "d9b373be-1bc5-437d-832a-8134e6e0c113",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Yes - I completely don't understand your suggestion Erik. I'm duplicating the logic that we had in the past:\nhttps://github.com/fejta/kubernetes/blob/ffe611569dbd645a7d5c9428828ece1404e7e396/hack/jenkins/e2e-runner.sh#L169-L181\nand that logic worked correctly. However, your PR https://github.com/kubernetes/kubernetes/pull/28575 broke it. I think it's better to have something working (potentially not ideal) than not-working. I don't have time to tune the whole framework.\n",
        "createdAt" : "2016-10-11T06:27:40Z",
        "updatedAt" : "2016-10-12T08:54:13Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "31e137f4-aab4-4021-a805-0912ce2e85bd",
        "parentId" : "d9b373be-1bc5-437d-832a-8134e6e0c113",
        "authorId" : "185604f6-2915-4313-8d6b-1d55757d0d22",
        "body" : "I assure you this was not my intention, and I would like to see it working again soon too -- ideally with the lowest ongoing maintenance burden.\n\nIt is much easier to reason about control flow in Golang than bash. It seems the easiest way to understand the test output is if we do the following (for both cluster and kubemark down):\n- Ensure we always attempt to teardown if we attempt to setup.\n- Attempt to teardown exactly once after setting up.\n\nWhat are your thoughts about this flow? Is there a good way to achieve it?\n",
        "createdAt" : "2016-10-11T07:12:44Z",
        "updatedAt" : "2016-10-12T08:54:13Z",
        "lastEditedBy" : "185604f6-2915-4313-8d6b-1d55757d0d22",
        "tags" : [
        ]
      },
      {
        "id" : "840ef4a6-3726-4069-8133-35cbd76d51a9",
        "parentId" : "d9b373be-1bc5-437d-832a-8134e6e0c113",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Sure, I didn't want to imply that you broke it on purpose.\nI agree with the goal (always attempt to teardown exactly once). Though this isn't super trivial now, and I think that the issue this is solving is pretty serious (we just faced exactly the same for GCE - the lack of quota there is not configuration issue - it's just leaking resources because of not calling tear down after e.g. timeedout runs).\n\nSo WDYT about fixing it with this PR as is (to fix those leaks), and leave a TODO to fix it properly in the upcoming days?\n",
        "createdAt" : "2016-10-11T07:21:09Z",
        "updatedAt" : "2016-10-12T08:54:13Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "7685df18-c2b0-4d65-8528-f686c3a9e6c6",
        "parentId" : "d9b373be-1bc5-437d-832a-8134e6e0c113",
        "authorId" : "185604f6-2915-4313-8d6b-1d55757d0d22",
        "body" : "TODO is fine, but can we address the xmlWrap stuff in this PR?\n",
        "createdAt" : "2016-10-11T20:48:50Z",
        "updatedAt" : "2016-10-12T08:54:13Z",
        "lastEditedBy" : "185604f6-2915-4313-8d6b-1d55757d0d22",
        "tags" : [
        ]
      },
      {
        "id" : "d3ae18aa-6a6f-4466-a3fd-41df93a36968",
        "parentId" : "d9b373be-1bc5-437d-832a-8134e6e0c113",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "done\n",
        "createdAt" : "2016-10-12T06:28:35Z",
        "updatedAt" : "2016-10-12T08:54:13Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "1cfbb446c85e2b26df8276d0d8d21ca599b23d9b",
    "line" : null,
    "diffHunk" : "@@ -1,1 +235,239 @@\t\t// Start the cluster using this version.\n\t\tif err := xmlWrap(\"Up\", deploy.Up); err != nil {\n\t\t\treturn fmt.Errorf(\"starting e2e cluster: %s\", err)\n\t\t}\n\t}"
  },
  {
    "id" : "9cf374f9-bdd1-4ee0-b74a-a6fa9f85bafd",
    "prId" : 34128,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/34128#pullrequestreview-7179573",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bd0c706a-0b32-4b7c-a0b8-86d90775f72a",
        "parentId" : null,
        "authorId" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "body" : "Do we maybe want to pull this out to one level higher and run it in either the case that `-up` **or** `-test` is selected, then just eliminate the `kubectl version` check for `-test`? i.e. move it to about line 215 in the original and just say:\n\n```\nif *up || *test {\n  // get nodes. If there's something wrong, we need to get out of dodge after this.\n  // if *dump is set, send the output to a file\n}\n```\n",
        "createdAt" : "2016-10-05T23:57:11Z",
        "updatedAt" : "2016-10-05T23:57:12Z",
        "lastEditedBy" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "tags" : [
        ]
      },
      {
        "id" : "6a45cfda-8ae9-46e6-bb8c-a87996c2d35d",
        "parentId" : "bd0c706a-0b32-4b7c-a0b8-86d90775f72a",
        "authorId" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "body" : "Actually, that may not be the best for large clusters, where `get nodes -oyaml` might be dicey in the first place. Hrm.\n",
        "createdAt" : "2016-10-05T23:58:57Z",
        "updatedAt" : "2016-10-05T23:58:57Z",
        "lastEditedBy" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "tags" : [
        ]
      },
      {
        "id" : "07ee5ee0-4ccd-4b74-9adb-cb3bd77b6dc0",
        "parentId" : "bd0c706a-0b32-4b7c-a0b8-86d90775f72a",
        "authorId" : "c532215f-ed76-4a19-b066-8676d269eaf1",
        "body" : "Ah, I didn't consider large clusters. How bad is it?\n",
        "createdAt" : "2016-10-07T01:15:01Z",
        "updatedAt" : "2016-10-07T01:15:01Z",
        "lastEditedBy" : "c532215f-ed76-4a19-b066-8676d269eaf1",
        "tags" : [
        ]
      },
      {
        "id" : "a177ca7d-6cea-4e91-815a-ade3ac639c69",
        "parentId" : "bd0c706a-0b32-4b7c-a0b8-86d90775f72a",
        "authorId" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "body" : "Sorry for leaving this PR for so long. I don't think it's too terrible, but the entire yaml output for all nodes is a pretty big chunk. On the whole this change is probably worth it but might be something to watch on the large cluster projects.\n",
        "createdAt" : "2016-10-12T17:08:50Z",
        "updatedAt" : "2016-10-12T17:08:50Z",
        "lastEditedBy" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "tags" : [
        ]
      },
      {
        "id" : "557b963f-e268-4425-ac5c-d9f226f27638",
        "parentId" : "bd0c706a-0b32-4b7c-a0b8-86d90775f72a",
        "authorId" : "c532215f-ed76-4a19-b066-8676d269eaf1",
        "body" : "OK. No worries for the delay. I'm not in a rush.\n",
        "createdAt" : "2016-10-12T17:53:18Z",
        "updatedAt" : "2016-10-12T17:53:18Z",
        "lastEditedBy" : "c532215f-ed76-4a19-b066-8676d269eaf1",
        "tags" : [
        ]
      },
      {
        "id" : "2509ddf5-c183-4bc7-9b0d-ecea517678b8",
        "parentId" : "bd0c706a-0b32-4b7c-a0b8-86d90775f72a",
        "authorId" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "body" : "For large cluster it's bad. Running kubectl get nodes on 3000 Node cluster makes logs even harder to read. Is there an easy way to disable it for some suites? @spxtr \n",
        "createdAt" : "2016-10-27T08:25:50Z",
        "updatedAt" : "2016-10-27T08:25:50Z",
        "lastEditedBy" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "tags" : [
        ]
      },
      {
        "id" : "d71678b5-a9d9-4a4c-bf5e-91b117ae4633",
        "parentId" : "bd0c706a-0b32-4b7c-a0b8-86d90775f72a",
        "authorId" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "body" : "Ping @spxtr @zmerlynn - can we please limit it to 10 Nodes or something. It really hurts during large cluster testing.\n\ncc @wojtek-t \n",
        "createdAt" : "2016-11-04T11:04:33Z",
        "updatedAt" : "2016-11-04T11:04:33Z",
        "lastEditedBy" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "tags" : [
        ]
      }
    ],
    "commit" : "d5e0b1cf848f0a1e9f70dbba8960c26fdb53b0bc",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +212,216 @@\t\t\treturn fmt.Errorf(\"starting e2e cluster: %s\", err)\n\t\t}\n\t\tif *dump != \"\" {\n\t\t\tcmd := exec.Command(\"./cluster/kubectl.sh\", \"--match-server-version=false\", \"get\", \"nodes\", \"-oyaml\")\n\t\t\tb, err := cmd.CombinedOutput()"
  },
  {
    "id" : "18ac771a-9f3b-4d4e-9526-5f960ee51c34",
    "prId" : 33518,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/33518#pullrequestreview-1770538",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3e9a2c7b-d885-488a-961e-fd60aa507366",
        "parentId" : null,
        "authorId" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "body" : "Do you think we should treat that as not-an-error in kops?  Or maybe a different exit code?\n",
        "createdAt" : "2016-09-27T05:00:12Z",
        "updatedAt" : "2016-09-27T21:48:20Z",
        "lastEditedBy" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "tags" : [
        ]
      },
      {
        "id" : "49627870-4b0c-4488-94ee-026d18130126",
        "parentId" : "3e9a2c7b-d885-488a-961e-fd60aa507366",
        "authorId" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "body" : "I'm not clear on that. I actually didn't feel like fighting the exit status. Maybe it should be a 0 exit code for `delete`, but a 1 exit code for `get`?\n",
        "createdAt" : "2016-09-27T16:29:32Z",
        "updatedAt" : "2016-09-27T21:48:20Z",
        "lastEditedBy" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "tags" : [
        ]
      }
    ],
    "commit" : "d905478e0ac20845e859e00aab8d2270b3feb128",
    "line" : 255,
    "diffHunk" : "@@ -1,1 +505,509 @@\t// We do a \"kops get\" first so the exit status of \"kops delete\" is\n\t// more sensical in the case of a non-existant cluster. (\"kops\n\t// delete\" will exit with status 1 on a non-existant cluster)\n\terr := finishRunning(\"kops get\", exec.Command(k.path, \"get\", \"clusters\", k.cluster))\n\tif err != nil {"
  },
  {
    "id" : "1d494572-6a73-424e-9ddc-ceff7d478a48",
    "prId" : 33518,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/33518#pullrequestreview-1835004",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1301594e-07b1-4b95-8174-f715d7f08378",
        "parentId" : null,
        "authorId" : "c532215f-ed76-4a19-b066-8676d269eaf1",
        "body" : "I'm slightly worried about relying on the existence of a temp file after we've closed it, but it's probably fine.\n",
        "createdAt" : "2016-09-27T21:05:09Z",
        "updatedAt" : "2016-09-27T21:48:20Z",
        "lastEditedBy" : "c532215f-ed76-4a19-b066-8676d269eaf1",
        "tags" : [
        ]
      },
      {
        "id" : "6dab63f9-e510-4d20-8eae-adfd3d3e3d02",
        "parentId" : "1301594e-07b1-4b95-8174-f715d7f08378",
        "authorId" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "body" : "The ioutil.TempFile semantics leave the file until you unlink it, so this should be fine.\n",
        "createdAt" : "2016-09-27T21:47:44Z",
        "updatedAt" : "2016-09-27T21:48:20Z",
        "lastEditedBy" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "tags" : [
        ]
      },
      {
        "id" : "f0e0d06a-47eb-4949-8417-55bf6883663d",
        "parentId" : "1301594e-07b1-4b95-8174-f715d7f08378",
        "authorId" : "c532215f-ed76-4a19-b066-8676d269eaf1",
        "body" : "Sounds good.\n",
        "createdAt" : "2016-09-27T22:01:45Z",
        "updatedAt" : "2016-09-27T22:01:58Z",
        "lastEditedBy" : "c532215f-ed76-4a19-b066-8676d269eaf1",
        "tags" : [
        ]
      }
    ],
    "commit" : "d905478e0ac20845e859e00aab8d2270b3feb128",
    "line" : 165,
    "diffHunk" : "@@ -1,1 +415,419 @@\t\treturn nil, err\n\t}\n\tdefer f.Close()\n\tkubecfg := f.Name()\n\tif err := f.Chmod(0600); err != nil {"
  },
  {
    "id" : "0afa665d-86bf-473c-aaac-5a11ab57573d",
    "prId" : 33518,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/33518#pullrequestreview-1823509",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8838c82e-4a72-4e8a-8257-27342574fb53",
        "parentId" : null,
        "authorId" : "c532215f-ed76-4a19-b066-8676d269eaf1",
        "body" : "This is pretty neat.\n",
        "createdAt" : "2016-09-27T21:14:46Z",
        "updatedAt" : "2016-09-27T21:48:20Z",
        "lastEditedBy" : "c532215f-ed76-4a19-b066-8676d269eaf1",
        "tags" : [
        ]
      }
    ],
    "commit" : "d905478e0ac20845e859e00aab8d2270b3feb128",
    "line" : 211,
    "diffHunk" : "@@ -1,1 +461,465 @@\t// added to kops and not here, but this is a fine place to loop\n\t// for now.\n\tfor stop := time.Now().Add(10 * time.Minute); time.Now().Before(stop); time.Sleep(30 * time.Second) {\n\t\tn, err := clusterSize(k)\n\t\tif err != nil {"
  },
  {
    "id" : "c1994972-3da8-47f9-8af0-2ce39a8258b2",
    "prId" : 33240,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/33240#pullrequestreview-1261860",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f2c5372c-779a-4c14-93e6-87a4f27156b0",
        "parentId" : null,
        "authorId" : "185604f6-2915-4313-8d6b-1d55757d0d22",
        "body" : "Doesn't this mean that every err stack trace will be at e2e.go:112?\n",
        "createdAt" : "2016-09-23T01:24:39Z",
        "updatedAt" : "2016-09-23T01:41:20Z",
        "lastEditedBy" : "185604f6-2915-4313-8d6b-1d55757d0d22",
        "tags" : [
        ]
      },
      {
        "id" : "bcd79b9d-9d5b-432e-a8b0-8f5f80207f3d",
        "parentId" : "f2c5372c-779a-4c14-93e6-87a4f27156b0",
        "authorId" : "c532215f-ed76-4a19-b066-8676d269eaf1",
        "body" : "Not sure what's going to cause a stack trace. Errors look like this:\n\n```\n2016/09/22 18:31:19 e2e.go:468: Step 'up' finished in 15.909371ms\n2016/09/22 18:31:19 e2e.go:133: Saved XML output to /workspace/_artifacts/junit_runner.xml.\n2016/09/22 18:31:19 e2e.go:145: Something went wrong: starting e2e cluster: error running up: exit status 1\n```\n",
        "createdAt" : "2016-09-23T01:40:09Z",
        "updatedAt" : "2016-09-23T01:41:20Z",
        "lastEditedBy" : "c532215f-ed76-4a19-b066-8676d269eaf1",
        "tags" : [
        ]
      },
      {
        "id" : "9b725fe9-9cb7-44a3-a8dc-95847f64b7b3",
        "parentId" : "f2c5372c-779a-4c14-93e6-87a4f27156b0",
        "authorId" : "185604f6-2915-4313-8d6b-1d55757d0d22",
        "body" : "Got it because you're just returning the error (that's what you cannot change, creation of the error)\n",
        "createdAt" : "2016-09-23T01:52:41Z",
        "updatedAt" : "2016-09-23T01:52:58Z",
        "lastEditedBy" : "185604f6-2915-4313-8d6b-1d55757d0d22",
        "tags" : [
        ]
      }
    ],
    "commit" : "3503c4f71ae149da26609052dbc83506887f99b3",
    "line" : 113,
    "diffHunk" : "@@ -1,1 +110,114 @@\tsuite.Cases = append(suite.Cases, c)\n\tsuite.Tests++\n\treturn err\n}\n"
  },
  {
    "id" : "d9eed956-66fb-4ba4-af0c-29949da6ada2",
    "prId" : 30321,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6db0aeb4-5048-4632-b726-acff4d584dd3",
        "parentId" : null,
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "you have taken the Go unnecessarily-short-variable-name style to heart, I see. :)\n",
        "createdAt" : "2016-08-26T22:28:12Z",
        "updatedAt" : "2016-08-29T17:16:14Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "51b80c46-c3d6-4198-a68d-2bed3573b6f1",
        "parentId" : "6db0aeb4-5048-4632-b726-acff4d584dd3",
        "authorId" : "185604f6-2915-4313-8d6b-1d55757d0d22",
        "body" : "Ack\n",
        "createdAt" : "2016-08-29T17:16:18Z",
        "updatedAt" : "2016-08-29T17:16:18Z",
        "lastEditedBy" : "185604f6-2915-4313-8d6b-1d55757d0d22",
        "tags" : [
        ]
      }
    ],
    "commit" : "fd15911910cf1dd5600c6641757e7b5bb91f7224",
    "line" : 209,
    "diffHunk" : "@@ -1,1 +199,203 @@\n\tvar mode os.FileMode = 0664\n\tbp := filepath.Join(location, \"gcp-resources-before.txt\")\n\tup := filepath.Join(location, \"gcp-resources-cluster-up.txt\")\n\tap := filepath.Join(location, \"gcp-resources-after.txt\")"
  },
  {
    "id" : "8c45ae20-f008-4410-b2e4-ba002709f0b4",
    "prId" : 30321,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d0f082da-c24f-47c8-b2f6-85920dccc89e",
        "parentId" : null,
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "nit: this could be `const`?\n",
        "createdAt" : "2016-08-26T22:29:21Z",
        "updatedAt" : "2016-08-29T17:16:14Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "31f735b5-8752-4a8f-a752-c88e844da610",
        "parentId" : "d0f082da-c24f-47c8-b2f6-85920dccc89e",
        "authorId" : "185604f6-2915-4313-8d6b-1d55757d0d22",
        "body" : "Ack\n",
        "createdAt" : "2016-08-29T17:16:16Z",
        "updatedAt" : "2016-08-29T17:16:16Z",
        "lastEditedBy" : "185604f6-2915-4313-8d6b-1d55757d0d22",
        "tags" : [
        ]
      }
    ],
    "commit" : "fd15911910cf1dd5600c6641757e7b5bb91f7224",
    "line" : 208,
    "diffHunk" : "@@ -1,1 +198,202 @@\t}\n\n\tvar mode os.FileMode = 0664\n\tbp := filepath.Join(location, \"gcp-resources-before.txt\")\n\tup := filepath.Join(location, \"gcp-resources-cluster-up.txt\")"
  },
  {
    "id" : "9f828d07-7816-4779-af41-299fd565524f",
    "prId" : 30321,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "708bc317-5dce-4868-9ef8-bb024fbc93cc",
        "parentId" : null,
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "there's a `ValidateClusterSize` call in here that still `Fatal`'s on errors.\n",
        "createdAt" : "2016-08-26T22:32:55Z",
        "updatedAt" : "2016-08-29T17:16:14Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "2fea6dbd-efff-4385-b921-09b3b834f916",
        "parentId" : "708bc317-5dce-4868-9ef8-bb024fbc93cc",
        "authorId" : "185604f6-2915-4313-8d6b-1d55757d0d22",
        "body" : "Done\n",
        "createdAt" : "2016-08-29T17:16:21Z",
        "updatedAt" : "2016-08-29T17:16:21Z",
        "lastEditedBy" : "185604f6-2915-4313-8d6b-1d55757d0d22",
        "tags" : [
        ]
      }
    ],
    "commit" : "fd15911910cf1dd5600c6641757e7b5bb91f7224",
    "line" : 456,
    "diffHunk" : "@@ -1,1 +409,413 @@}\n\nfunc Test() error {\n\tif !IsUp() {\n\t\tlog.Fatal(\"Testing requested, but e2e cluster not up!\")"
  },
  {
    "id" : "841f3d78-3024-45ca-960d-94517176c7ca",
    "prId" : 28575,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "30f0738f-a5e2-4404-adb7-d7597e709574",
        "parentId" : null,
        "authorId" : "c532215f-ed76-4a19-b066-8676d269eaf1",
        "body" : "Why? What if I check out to some other folder?\n",
        "createdAt" : "2016-08-02T23:35:23Z",
        "updatedAt" : "2016-08-09T21:04:26Z",
        "lastEditedBy" : "c532215f-ed76-4a19-b066-8676d269eaf1",
        "tags" : [
        ]
      },
      {
        "id" : "077d0bdd-86f7-47ab-a11c-1f27d1331214",
        "parentId" : "30f0738f-a5e2-4404-adb7-d7597e709574",
        "authorId" : "185604f6-2915-4313-8d6b-1d55757d0d22",
        "body" : "We make assumptions you're inside the source tree, and the source makes assumptions you're on gopath.\n\nIf you check out to another folder you can check out again to the right folder or else not run e2e tests.\n",
        "createdAt" : "2016-08-03T21:46:28Z",
        "updatedAt" : "2016-08-09T21:04:26Z",
        "lastEditedBy" : "185604f6-2915-4313-8d6b-1d55757d0d22",
        "tags" : [
        ]
      },
      {
        "id" : "745a06d7-2ed6-4fd1-a558-d025c195f137",
        "parentId" : "30f0738f-a5e2-4404-adb7-d7597e709574",
        "authorId" : "185604f6-2915-4313-8d6b-1d55757d0d22",
        "body" : "Ideally I'd like to remove this restriction later, but for the moment I'm more interested in simplifying things so we can make forward progress faster.\n\nAny alternative suggestions?\n",
        "createdAt" : "2016-08-04T06:48:48Z",
        "updatedAt" : "2016-08-09T21:04:26Z",
        "lastEditedBy" : "185604f6-2915-4313-8d6b-1d55757d0d22",
        "tags" : [
        ]
      },
      {
        "id" : "bfb40b44-4f08-4645-b98b-e035f8d2569c",
        "parentId" : "30f0738f-a5e2-4404-adb7-d7597e709574",
        "authorId" : "c532215f-ed76-4a19-b066-8676d269eaf1",
        "body" : "It's probably fine as-is.\n",
        "createdAt" : "2016-08-05T20:03:20Z",
        "updatedAt" : "2016-08-09T21:04:26Z",
        "lastEditedBy" : "c532215f-ed76-4a19-b066-8676d269eaf1",
        "tags" : [
        ]
      },
      {
        "id" : "9f39af75-b271-406c-9d23-4a49dfa76d8d",
        "parentId" : "30f0738f-a5e2-4404-adb7-d7597e709574",
        "authorId" : "5de211e4-9744-455e-9548-1a8e70ed1b2e",
        "body" : "Could we maybe check for some well known kubernetes release artifacts instead?  Otherwise somewhere we ought to doc that \"you must run tests from a directory that has the word kubernetes somewhere in its ancestry\"\n",
        "createdAt" : "2016-08-09T17:38:58Z",
        "updatedAt" : "2016-08-09T21:04:26Z",
        "lastEditedBy" : "5de211e4-9744-455e-9548-1a8e70ed1b2e",
        "tags" : [
        ]
      }
    ],
    "commit" : "7011d8826ea0e6aa6da5ec7da9a60bb5d4ecc3d0",
    "line" : 92,
    "diffHunk" : "@@ -1,1 +75,79 @@\tif !strings.Contains(filepath.Base(acwd), \"kubernetes\") {\n\t\t// TODO(fejta): cd up into  the kubernetes directory\n\t\tlog.Fatalf(\"Must run from kubernetes directory: %v\", cwd)\n\t}\n"
  },
  {
    "id" : "d45021a2-be4c-440d-a4e4-08d80b307431",
    "prId" : 28575,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3ad4bf35-81bf-4ece-bc08-a5314e29e9c3",
        "parentId" : null,
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "it's kinda gross seeing this code duplicated 3x.\n",
        "createdAt" : "2016-08-09T19:11:54Z",
        "updatedAt" : "2016-08-09T21:04:26Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "d7585fc4-c2d3-42c7-a607-63b2840f4b51",
        "parentId" : "3ad4bf35-81bf-4ece-bc08-a5314e29e9c3",
        "authorId" : "185604f6-2915-4313-8d6b-1d55757d0d22",
        "body" : "Acknowledged, I'll address this when I switch things over to using `error` instead of `bool`\n",
        "createdAt" : "2016-08-09T20:52:13Z",
        "updatedAt" : "2016-08-09T21:04:26Z",
        "lastEditedBy" : "185604f6-2915-4313-8d6b-1d55757d0d22",
        "tags" : [
        ]
      }
    ],
    "commit" : "7011d8826ea0e6aa6da5ec7da9a60bb5d4ecc3d0",
    "line" : 433,
    "diffHunk" : "@@ -1,1 +400,404 @@\t}\n\tdefer os.Chdir(old)\n\terr = os.Chdir(\"../kubernetes_skew\")\n\tif err != nil {\n\t\tlog.Printf(\"Failed to cd ../kubernetes_skew: %v\", err)"
  },
  {
    "id" : "08f7524a-2ca7-4828-830c-a9d9896f1267",
    "prId" : 28575,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4eca609c-822a-4989-9c90-bd51c7fdeee3",
        "parentId" : null,
        "authorId" : "c532215f-ed76-4a19-b066-8676d269eaf1",
        "body" : "We don't always want to do a quick release. On post-submit Jenkins we want to do the full release.\n",
        "createdAt" : "2016-08-15T18:43:29Z",
        "updatedAt" : "2016-08-15T18:43:29Z",
        "lastEditedBy" : "c532215f-ed76-4a19-b066-8676d269eaf1",
        "tags" : [
        ]
      }
    ],
    "commit" : "7011d8826ea0e6aa6da5ec7da9a60bb5d4ecc3d0",
    "line" : 102,
    "diffHunk" : "@@ -1,1 +92,96 @@\t\t// The build-release script needs stdin to ask the user whether\n\t\t// it's OK to download the docker image.\n\t\tcmd := exec.Command(\"make\", \"quick-release\")\n\t\tcmd.Stdin = os.Stdin\n\t\tif !finishRunning(\"build-release\", cmd) {"
  },
  {
    "id" : "a670a212-fc76-4606-8484-9a44c38bb093",
    "prId" : 26027,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cc8a2c3e-436d-49b3-8d65-7906282503d1",
        "parentId" : null,
        "authorId" : "5de211e4-9744-455e-9548-1a8e70ed1b2e",
        "body" : "I get that this is DRY'er than setting a default in all of the `clusters/*/config-foo.sh` scripts but I don't know if it's a pattern we want to extend as more features get added?\n",
        "createdAt" : "2016-08-10T20:58:51Z",
        "updatedAt" : "2016-08-12T15:07:01Z",
        "lastEditedBy" : "5de211e4-9744-455e-9548-1a8e70ed1b2e",
        "tags" : [
        ]
      },
      {
        "id" : "9f34517b-97ed-4866-9ebc-93457c209753",
        "parentId" : "cc8a2c3e-436d-49b3-8d65-7906282503d1",
        "authorId" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "body" : "Right, that's why I asked. Again with `batch/v2alpha1` I'm blazing the trail, this time for group versions for e2e tests.\n",
        "createdAt" : "2016-08-11T11:01:03Z",
        "updatedAt" : "2016-08-12T15:07:01Z",
        "lastEditedBy" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "tags" : [
        ]
      }
    ],
    "commit" : "783df1220552e14f1377ca0cb219e153864a93e8",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +264,268 @@func Up() bool {\n\t// force having batch/v2alpha1 always on for e2e tests\n\tos.Setenv(\"KUBE_RUNTIME_CONFIG\", \"batch/v2alpha1=true\")\n\treturn finishRunning(\"up\", exec.Command(\"./hack/e2e-internal/e2e-up.sh\"))\n}"
  },
  {
    "id" : "14cc4cc2-3d49-4513-855f-14002bd85baa",
    "prId" : 4339,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dfab5214-fba4-417f-a756-438a1ce2b886",
        "parentId" : null,
        "authorId" : "fd5eb1fb-f30a-4735-908c-944e87d99845",
        "body" : "I'm wondering if we could simply use `cmd.CombinedOutput()` here? Maybe in a goroutine? It's not like we're streaming the output to stdout live, we're just capturing it to include in the final output... Not 100% sure if it will work with a command that gets interrupted but I think it just might... What do you think?\n",
        "createdAt" : "2015-02-11T21:13:05Z",
        "updatedAt" : "2015-02-11T21:13:14Z",
        "lastEditedBy" : "fd5eb1fb-f30a-4735-908c-944e87d99845",
        "tags" : [
        ]
      }
    ],
    "commit" : "f08f7e6972d28d014827732a1c9584dfdc4969c2",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +278,282 @@func runBashUntil(stepName string, cmd *exec.Cmd) func() {\n\tlog.Printf(\"Running in background: %v\", stepName)\n\toutput := bytes.NewBuffer(nil)\n\tcmd.Stdout, cmd.Stderr = output, output\n\tif err := cmd.Start(); err != nil {"
  },
  {
    "id" : "4ffb76c3-37ba-496b-9f0c-2d3e20ade2c3",
    "prId" : 3488,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bab712f1-415f-4c29-9482-3133a2078d4f",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Only one suggestion-- perhaps should fail if this TearDown fails, rather than calling up again...\n",
        "createdAt" : "2015-01-15T00:37:03Z",
        "updatedAt" : "2015-01-18T17:21:29Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "6f496741-22c2-4f9c-9a90-3e7129f81f7f",
        "parentId" : "bab712f1-415f-4c29-9482-3133a2078d4f",
        "authorId" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "body" : "I think it should, good point.\n",
        "createdAt" : "2015-01-15T07:51:30Z",
        "updatedAt" : "2015-01-18T17:21:29Z",
        "lastEditedBy" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "tags" : [
        ]
      }
    ],
    "commit" : "0c51f9df8d8283ea0d9ab06d1a4fccc75abd15ba",
    "line" : null,
    "diffHunk" : "@@ -1,1 +188,192 @@func Up() bool {\n\tif IsUp() {\n\t\tlog.Printf(\"e2e cluster already running; will teardown\")\n\t\tif res := TearDown(); !res {\n\t\t\treturn false"
  },
  {
    "id" : "724a2c08-5313-4d52-979c-0e19096ee0a7",
    "prId" : 3208,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6e78c6b1-4ab7-479f-9421-5a34aea08b0e",
        "parentId" : null,
        "authorId" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "body" : "\"\\ua789\"  (modifier letter colon) may be visually closer\n",
        "createdAt" : "2015-01-05T17:19:24Z",
        "updatedAt" : "2015-01-05T17:19:24Z",
        "lastEditedBy" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "tags" : [
        ]
      }
    ],
    "commit" : "d938ecaba203a4dacc10c38527a52eca546230d7",
    "line" : 62,
    "diffHunk" : "@@ -1,1 +503,507 @@\t\t\tout += \" \"\n\t\tcase r == ':':\n\t\t\tout += \"\\u02D0\" // \"ː\", MODIFIER LETTER TRIANGULAR COLON\n\t\tdefault:\n\t\t\tout += string(r)"
  },
  {
    "id" : "362913d2-2aea-4cbc-a4c2-5ce29cace799",
    "prId" : 2829,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c6c56e38-1797-4024-90b0-d2f3c5cf8a30",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "clusterVersionRoot?\n",
        "createdAt" : "2014-12-12T19:55:09Z",
        "updatedAt" : "2014-12-16T00:03:55Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "7a575e26-5581-4cff-a882-cc7afc33ba51",
        "parentId" : "c6c56e38-1797-4024-90b0-d2f3c5cf8a30",
        "authorId" : "7766e039-aa4c-4476-9091-5cc8763fa8d6",
        "body" : "Eh, the version variable/flag is just named version, not clusterVersion. Unless you think they should both be clusterVersion/clusterVersionRoot?\n",
        "createdAt" : "2014-12-12T20:06:24Z",
        "updatedAt" : "2014-12-16T00:03:55Z",
        "lastEditedBy" : "7766e039-aa4c-4476-9091-5cc8763fa8d6",
        "tags" : [
        ]
      },
      {
        "id" : "9046c719-1b08-4732-8ec8-e619c81678c3",
        "parentId" : "c6c56e38-1797-4024-90b0-d2f3c5cf8a30",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "On second thought, after spending a bit more time thinking about this, what do you think about not using a global here and parameterizing this in the places that need it?\n",
        "createdAt" : "2014-12-15T21:34:48Z",
        "updatedAt" : "2014-12-16T00:03:55Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "b0980534-c4f6-4ff6-ab25-52b5d96f0c7c",
        "parentId" : "c6c56e38-1797-4024-90b0-d2f3c5cf8a30",
        "authorId" : "7766e039-aa4c-4476-9091-5cc8763fa8d6",
        "body" : "I initially did that, and it cluttered everything up more than it seemed to be worth for a simple test module. It had to be added as a parameter to almost every method.\n",
        "createdAt" : "2014-12-15T23:02:34Z",
        "updatedAt" : "2014-12-16T00:03:55Z",
        "lastEditedBy" : "7766e039-aa4c-4476-9091-5cc8763fa8d6",
        "tags" : [
        ]
      }
    ],
    "commit" : "fe76243b05b307ecda3138b01ff4d704f84d7d26",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +72,76 @@\tsignals = make(chan os.Signal, 100)\n\t// Root directory of the specified cluster version, rather than of where\n\t// this script is being run from.\n\tversionRoot = *root\n)"
  },
  {
    "id" : "753c73fd-12b9-446b-8142-736ef02c22e9",
    "prId" : 2829,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2bfcf894-ae50-487b-86f6-997814ba0860",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Suggestion: make this a parameter, so that it is explicit to callers whether they're getting versioned or local tools.\n",
        "createdAt" : "2014-12-15T21:34:59Z",
        "updatedAt" : "2014-12-16T00:03:55Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "1f2ce15a-062d-47dc-8ca7-0de95b1b9d4f",
        "parentId" : "2bfcf894-ae50-487b-86f6-997814ba0860",
        "authorId" : "7766e039-aa4c-4476-9091-5cc8763fa8d6",
        "body" : "A command line flag? If you just mean parameterizing the method, that seems like designing in more complexity than is needed now, since there isn't currently any reason that any single run of this file will need to use multiple client versions.\n",
        "createdAt" : "2014-12-15T23:06:00Z",
        "updatedAt" : "2014-12-16T00:03:55Z",
        "lastEditedBy" : "7766e039-aa4c-4476-9091-5cc8763fa8d6",
        "tags" : [
        ]
      }
    ],
    "commit" : "fe76243b05b307ecda3138b01ff4d704f84d7d26",
    "line" : 167,
    "diffHunk" : "@@ -1,1 +505,509 @@# TODO(jbeda): This will break on usage if there is a space in\n# ${KUBE_ROOT}.  Covert to an array?  Or an exported function?\nexport KUBECFG=\"` + versionRoot + `/cluster/kubecfg.sh` + kubecfgArgs() + `\"\nexport KUBECTL=\"` + versionRoot + `/cluster/kubectl.sh` + kubectlArgs() + `\"\n"
  },
  {
    "id" : "476282f8-e57f-4aee-b9a5-c246a134da32",
    "prId" : 2829,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b3abe4a5-2fef-4ac6-b147-caecf99a9dd9",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "kube-env & provider/util.sh should probably be sourced from the same directory.\n",
        "createdAt" : "2014-12-15T23:27:36Z",
        "updatedAt" : "2014-12-16T00:03:55Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "82007b0f-8bb4-4c3c-8ca3-f9ce973403cd",
        "parentId" : "b3abe4a5-2fef-4ac6-b147-caecf99a9dd9",
        "authorId" : "7766e039-aa4c-4476-9091-5cc8763fa8d6",
        "body" : "Discussed offline, leaving as is because user may have changed kube-env locally.\n",
        "createdAt" : "2014-12-15T23:50:02Z",
        "updatedAt" : "2014-12-16T00:03:55Z",
        "lastEditedBy" : "7766e039-aa4c-4476-9091-5cc8763fa8d6",
        "tags" : [
        ]
      }
    ],
    "commit" : "fe76243b05b307ecda3138b01ff4d704f84d7d26",
    "line" : 172,
    "diffHunk" : "@@ -1,1 +509,513 @@\nsource \"` + *root + `/cluster/kube-env.sh\"\nsource \"` + versionRoot + `/cluster/${KUBERNETES_PROVIDER}/util.sh\"\n\nprepare-e2e"
  },
  {
    "id" : "00f2f817-78e2-4389-87b7-2a5fdb7ebbe1",
    "prId" : 2782,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "91d8a888-d745-4d96-9fde-7ee146c29241",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Loop variable i needs to count down from len(strings)-1 to 1 for this line to be correct.\n",
        "createdAt" : "2014-12-08T18:49:21Z",
        "updatedAt" : "2014-12-08T19:11:24Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "f3a992aa08cebb8d430afc4fc4d714eeb2c6668e",
    "line" : null,
    "diffHunk" : "@@ -1,1 +142,146 @@func shuffleStrings(strings []string, r *rand.Rand) {\n\tfor i := len(strings) - 1; i > 0; i-- {\n\t\tj := r.Intn(i + 1)\n\t\tstrings[i], strings[j] = strings[j], strings[i]\n\t}"
  },
  {
    "id" : "23f1a645-7271-49bd-8156-6cb1aec64b00",
    "prId" : 1993,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7d1bc450-c5bf-4cf6-aa75-89cb948d18c8",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Can you instead put an empty detect-project function in vagrant's setup? I'd like to not accumulate any cruft in this go file-- if people are debugging bash scripts in a go file then that's worse than it was before.\n\n(Also sorry for breaking vagrant)\n",
        "createdAt" : "2014-10-25T00:24:13Z",
        "updatedAt" : "2014-10-25T00:24:13Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "c2eb31f1-9ed0-404a-b024-518749fe9f94",
        "parentId" : "7d1bc450-c5bf-4cf6-aa75-89cb948d18c8",
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "The function detect-project is meaningless and vague outside of GCE, so please do not add it to the Vagrant setup.  \n\nThe function detect-project is called in the GCE bash scripts by the kube-up() and kube-push() functions, can we just invoke kube-up() instead?\n\nIf not, can we add a new function that more accurately describes the need?\n\nFor example, can we have the following:\n\n```\n// Perform and preparations required to run e2e tests\nfunction prepare-e2e() {\n}\n```\n\nThe GCE implementation of that function could call detect-project(), and the Vagrant environment can do what it pleases as well.\n",
        "createdAt" : "2014-10-27T15:12:51Z",
        "updatedAt" : "2014-10-27T15:12:51Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      },
      {
        "id" : "7add2aab-97ff-4e9e-9039-993477d9eb2a",
        "parentId" : "7d1bc450-c5bf-4cf6-aa75-89cb948d18c8",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Yeah, I'm OK with that, too, or moving detect-project to be called elsewhere. Just really want to minimize the amount of bash-in-go hacking we do. :)\n",
        "createdAt" : "2014-10-27T18:34:31Z",
        "updatedAt" : "2014-10-27T18:34:31Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "d709d8561a943763cba56bf77c4483c98202008a",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +209,213 @@\nif [[ ${KUBERNETES_PROVIDER} == \"gce\" ]]; then\n  detect-project\nfi\n"
  },
  {
    "id" : "d2e14def-6d02-4848-b553-0279f7ecb82a",
    "prId" : 1976,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "91791688-c29d-417e-b9cd-c1c270ed109e",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "I don't understand - so by default it runs nothing?  Why is that useful?\n",
        "createdAt" : "2014-10-23T22:11:35Z",
        "updatedAt" : "2014-10-23T22:11:35Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "a5a28756-eb46-4101-8854-72395a46966e",
        "parentId" : "91791688-c29d-417e-b9cd-c1c270ed109e",
        "authorId" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "body" : "If you don't have this then running `go run hack/e2e.go -down` tries to run tests before taking the cluster down.  Having to pass an extra `-test=` is really random.\n\nThis way it does the stuff requested with the cluster, there is an easy way to run all tests and also an easy way to filter the tests that are run.\n",
        "createdAt" : "2014-10-23T23:31:41Z",
        "updatedAt" : "2014-10-23T23:31:41Z",
        "lastEditedBy" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "tags" : [
        ]
      },
      {
        "id" : "1637a070-6e85-4645-ae57-ced5f2738ebd",
        "parentId" : "91791688-c29d-417e-b9cd-c1c270ed109e",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "It was also really annoying that -build also tried to run tests, even if the cluster wasn't up.\n",
        "createdAt" : "2014-10-23T23:36:24Z",
        "updatedAt" : "2014-10-23T23:36:24Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "0102a34e-08e1-4b7a-b302-bb9cfccf4845",
        "parentId" : "91791688-c29d-417e-b9cd-c1c270ed109e",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "OK, OK.  I yield\n",
        "createdAt" : "2014-10-24T03:46:53Z",
        "updatedAt" : "2014-10-24T03:46:53Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "47f1cb966b645297f6d18431027747845eb6faaa",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +38,42 @@\tdown    = flag.Bool(\"down\", false, \"If true, tear down the cluster before exiting.\")\n\ttest    = flag.Bool(\"test\", false, \"Run all tests in hack/e2e-suite.\")\n\ttests   = flag.String(\"tests\", \"\", \"Run only tests in hack/e2e-suite matching this glob. Ignored if -test is set.\")\n\troot    = flag.String(\"root\", absOrDie(filepath.Clean(filepath.Join(path.Base(os.Args[0]), \"..\"))), \"Root directory of kubernetes repository.\")\n\tverbose = flag.Bool(\"v\", false, \"If true, print all command output.\")"
  }
]