[
  {
    "id" : "24354292-9a3e-4e88-a7ba-820edc5a4847",
    "prId" : 31330,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5b56be87-5738-417f-ab2a-c25505521d2d",
        "parentId" : null,
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "maybe fix the typo though @fejta (`s/_/)/`)\n",
        "createdAt" : "2016-08-24T21:12:28Z",
        "updatedAt" : "2016-08-24T21:12:28Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      }
    ],
    "commit" : "12ea9cb1db4bdd71857fc16d3293da37fe98c29a",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +49,53 @@: ${KUBE_GCS_DEV_RELEASE_BUCKET:=\"kubernetes-release-dev\"}\n\n# Explicitly set config path so staging gcloud (if installed_ uses the same path\n# as release\nexport CLOUDSDK_CONFIG=\"${WORKSPACE}/.config/gcloud\""
  },
  {
    "id" : "e9552206-7772-4f52-b60e-4e43c78871e2",
    "prId" : 30906,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2918cb5d-a7a1-407e-8198-a08478c4db70",
        "parentId" : null,
        "authorId" : "beafb6cc-4b81-43ba-b2fd-9026cd5ca01b",
        "body" : "what happens if $KUBE_GCE_MASTER_IMAGE file is not present?\n(if users override KUBE_GCE_MASTER_IMAGE, will this get affected?)\n",
        "createdAt" : "2016-08-18T20:03:38Z",
        "updatedAt" : "2016-08-18T21:26:25Z",
        "lastEditedBy" : "beafb6cc-4b81-43ba-b2fd-9026cd5ca01b",
        "tags" : [
        ]
      },
      {
        "id" : "c269c460-79fc-44d2-9657-2335c2730e47",
        "parentId" : "2918cb5d-a7a1-407e-8198-a08478c4db70",
        "authorId" : "da89ddc4-a965-438c-a3b1-c68ba2d1d5bc",
        "body" : "In this context, if `JENKINS_GCI_IMAGE_FAMILY` is set, `KUBE_GCE_MASTER_IMAGE` will always be overridden to the latest GCI build, disregarding what user sets.\n\nhttps://github.com/kubernetes/kubernetes/blob/master/hack/jenkins/e2e-runner.sh#L236\nhttps://github.com/kubernetes/kubernetes/blob/master/hack/jenkins/e2e-runner.sh#L197\n",
        "createdAt" : "2016-08-18T20:38:43Z",
        "updatedAt" : "2016-08-18T21:26:25Z",
        "lastEditedBy" : "da89ddc4-a965-438c-a3b1-c68ba2d1d5bc",
        "tags" : [
        ]
      },
      {
        "id" : "f52eb483-a03f-44fe-a088-dbae9e0f3025",
        "parentId" : "2918cb5d-a7a1-407e-8198-a08478c4db70",
        "authorId" : "beafb6cc-4b81-43ba-b2fd-9026cd5ca01b",
        "body" : "Humm.. that doesn't guarantee that information is present in the GCS bucket though, right? May be we should properly handle the 'gsutil' command failure in general (log error and exit?).\n\nAlso, if `JENKINS_GCI_IMAGE_FAMILY` and `KUBE_GCE_MASTER_IMAGE` are assumed, then we should probably add check/assert for them to be non-empty at the beginning of the function? or at least mention in the comment above this function that they are assumed?\n",
        "createdAt" : "2016-08-18T20:56:43Z",
        "updatedAt" : "2016-08-18T21:26:25Z",
        "lastEditedBy" : "beafb6cc-4b81-43ba-b2fd-9026cd5ca01b",
        "tags" : [
        ]
      },
      {
        "id" : "ca8958eb-3168-4a50-bf93-03e4156d7c01",
        "parentId" : "2918cb5d-a7a1-407e-8198-a08478c4db70",
        "authorId" : "da89ddc4-a965-438c-a3b1-c68ba2d1d5bc",
        "body" : "This script has exit on error set, so if anything returns non 0, it will exit and show the last error.\n\nAgain, assert won't be very useful with exit on error, but comments will be helpful. I'll add those.\n",
        "createdAt" : "2016-08-18T21:10:02Z",
        "updatedAt" : "2016-08-18T21:26:25Z",
        "lastEditedBy" : "da89ddc4-a965-438c-a3b1-c68ba2d1d5bc",
        "tags" : [
        ]
      },
      {
        "id" : "20629fbc-fc93-409f-9ccc-ea02871b9996",
        "parentId" : "2918cb5d-a7a1-407e-8198-a08478c4db70",
        "authorId" : "da89ddc4-a965-438c-a3b1-c68ba2d1d5bc",
        "body" : "Done\n",
        "createdAt" : "2016-08-18T21:26:30Z",
        "updatedAt" : "2016-08-18T21:26:30Z",
        "lastEditedBy" : "da89ddc4-a965-438c-a3b1-c68ba2d1d5bc",
        "tags" : [
        ]
      }
    ],
    "commit" : "e4952581b93c060afd5b3fcb6f2e670bfa220ff8",
    "line" : null,
    "diffHunk" : "@@ -1,1 +180,184 @@        exit 1\n    fi\n    local -r gci_k8s_version=\"v$(gsutil cat gs://container-vm-image-staging/k8s-version-map/${KUBE_GCE_MASTER_IMAGE})\"\n    echo \"${gci_k8s_version}\"\n}"
  },
  {
    "id" : "36e695ea-49e8-42a3-8e9d-0c08376bebcd",
    "prId" : 29864,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "efeb5bc6-7f26-473a-b47c-158c1bc2c581",
        "parentId" : null,
        "authorId" : "c532215f-ed76-4a19-b066-8676d269eaf1",
        "body" : "Is it possible to get JSON output for this and pipe into `jq` so that we're not going to break if the output format changes?\n",
        "createdAt" : "2016-08-02T18:30:23Z",
        "updatedAt" : "2016-08-02T18:30:23Z",
        "lastEditedBy" : "c532215f-ed76-4a19-b066-8676d269eaf1",
        "tags" : [
        ]
      },
      {
        "id" : "980742f7-c794-432b-b082-1401832d9610",
        "parentId" : "efeb5bc6-7f26-473a-b47c-158c1bc2c581",
        "authorId" : "da89ddc4-a965-438c-a3b1-c68ba2d1d5bc",
        "body" : "Unfortunately the image description is now just a string and not programatically formatted. I do have a change pending to make this version number detection more reliable though. Just wanted to get the jobs started soon.\n",
        "createdAt" : "2016-08-02T18:34:16Z",
        "updatedAt" : "2016-08-02T18:34:16Z",
        "lastEditedBy" : "da89ddc4-a965-438c-a3b1-c68ba2d1d5bc",
        "tags" : [
        ]
      }
    ],
    "commit" : "dee12cfb60906b61f5c2d6e2bc530cad95cc6483",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +193,197 @@# Figures out the builtin k8s version of a GCI image.\nfunction get_gci_k8s_version() {\n    local -r image_description=$(gcloud compute images describe ${KUBE_GCE_MASTER_IMAGE} --project=${KUBE_GCE_MASTER_PROJECT})\n    # Staged GCI images all include versions in their image descriptions so we\n    # extract builtin Kubernetes version from them."
  },
  {
    "id" : "f687b77d-4802-4be7-80a9-858c7f0b72fe",
    "prId" : 29631,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0babd4f8-aa9e-4b20-9f8b-2c01644b61b2",
        "parentId" : null,
        "authorId" : "2758f003-b4bb-4113-b6a9-e1f4e42a1de6",
        "body" : "Why not check for exact match instead of regex?\n",
        "createdAt" : "2016-07-27T21:05:19Z",
        "updatedAt" : "2016-07-27T21:05:19Z",
        "lastEditedBy" : "2758f003-b4bb-4113-b6a9-e1f4e42a1de6",
        "tags" : [
        ]
      },
      {
        "id" : "a40e5c24-5c07-4f29-973a-1cb2b88af47f",
        "parentId" : "0babd4f8-aa9e-4b20-9f8b-2c01644b61b2",
        "authorId" : "da89ddc4-a965-438c-a3b1-c68ba2d1d5bc",
        "body" : "Because this way it allows both cases? For some reason this has been a convention in k8s' code\n",
        "createdAt" : "2016-07-27T23:38:11Z",
        "updatedAt" : "2016-07-27T23:38:11Z",
        "lastEditedBy" : "da89ddc4-a965-438c-a3b1-c68ba2d1d5bc",
        "tags" : [
        ]
      }
    ],
    "commit" : "081dfbbb7385a7bd20f629fbb3ed142ce3ed3ca8",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +188,192 @@  local -r image_name=\"$(echo ${image_info} | jq '.name')\"\n\n  if [[ \"${JENKINS_USE_GCI_VERSION:-}\" =~ ^[yY]$ ]]; then\n    # GCI QA jobs use the builtin k8s version.\n    # Staged GCI images all include versions in their image descriptions so we"
  },
  {
    "id" : "d10763de-9381-45de-9b8f-206f53fc8d1b",
    "prId" : 29631,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "743513f7-e004-4a70-ad25-89fe5376ba5d",
        "parentId" : null,
        "authorId" : "2758f003-b4bb-4113-b6a9-e1f4e42a1de6",
        "body" : "What is this environment variable used for?\n",
        "createdAt" : "2016-07-27T21:09:21Z",
        "updatedAt" : "2016-07-27T21:09:21Z",
        "lastEditedBy" : "2758f003-b4bb-4113-b6a9-e1f4e42a1de6",
        "tags" : [
        ]
      },
      {
        "id" : "5923efe5-862e-4327-bdcf-0adb3a115567",
        "parentId" : "743513f7-e004-4a70-ad25-89fe5376ba5d",
        "authorId" : "da89ddc4-a965-438c-a3b1-c68ba2d1d5bc",
        "body" : "It's used to determine which version of k8s to download, and to use in test.\n\nhttps://github.com/kubernetes/kubernetes/blob/master/hack/jenkins/e2e-runner.sh#L285\n",
        "createdAt" : "2016-07-27T23:43:09Z",
        "updatedAt" : "2016-07-27T23:43:09Z",
        "lastEditedBy" : "da89ddc4-a965-438c-a3b1-c68ba2d1d5bc",
        "tags" : [
        ]
      },
      {
        "id" : "857d4e51-d7a7-4968-be20-110591e03ba7",
        "parentId" : "743513f7-e004-4a70-ad25-89fe5376ba5d",
        "authorId" : "2758f003-b4bb-4113-b6a9-e1f4e42a1de6",
        "body" : "IMO the image description is not the most reliable source to determine K8s version installed on the image.  Did you have any other options in mind?\n",
        "createdAt" : "2016-07-28T00:09:44Z",
        "updatedAt" : "2016-07-28T00:09:44Z",
        "lastEditedBy" : "2758f003-b4bb-4113-b6a9-e1f4e42a1de6",
        "tags" : [
        ]
      },
      {
        "id" : "1af0c095-a657-4af9-a061-15b7502edd77",
        "parentId" : "743513f7-e004-4a70-ad25-89fe5376ba5d",
        "authorId" : "da89ddc4-a965-438c-a3b1-c68ba2d1d5bc",
        "body" : "Yes, I actually had a more reliable way implemented before I sent this PR\nout. I think that one is going to take sometime to go through review, so\nthis can go in first to get us going. WDYT?\n\nOn Jul 27, 2016 5:10 PM, \"Amey Deshpande\" notifications@github.com wrote:\n\n> In hack/jenkins/e2e-runner.sh\n> https://github.com/kubernetes/kubernetes/pull/29631#discussion_r72546726\n> :\n> \n> > @@ -186,6 +179,37 @@ function dump_cluster_logs() {\n> >      fi\n> >  }\n> > \n> > +# GCI specific settings.\n> > +# Assumes: JENKINS_GCI_IMAGE_FAMILY\n> > +function setup_gci_vars() {\n> > -  local -r gci_staging_project=container-vm-image-staging\n> > -  local -r image_info=\"$(gcloud compute images describe-from-family ${JENKINS_GCI_IMAGE_FAMILY} --project=${gci_staging_project} --format=json)\"\n> > -  local -r image_description=\"$(echo ${image_info} | jq '.description')\"\n> > -  local -r image_name=\"$(echo ${image_info} | jq '.name')\"\n> >   +\n> > -  if [[ \"${JENKINS_USE_GCI_VERSION:-}\" =~ ^[yY]$ ]]; then\n> > -    # GCI QA jobs use the builtin k8s version.\n> > -    # Staged GCI images all include versions in their image descriptions so we\n> > -    # extract builtin Kubernetes version from them.\n> > -    local -r k8s_version_re='._Kubernetes: ([0-9a-z.-]+),._'\n> > -    if [[ ${image_description} =~ ${k8s_version_re} ]]; then\n> > -      export JENKINS_PUBLISHED_VERSION=\"release/${BASH_REMATCH[1]}\"\n> \n> IMO the image description is not the most reliable source to determine K8s\n> version installed on the image. Did you have any other options in mind?\n> \n> —\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> https://github.com/kubernetes/kubernetes/pull/29631/files/081dfbbb7385a7bd20f629fbb3ed142ce3ed3ca8#r72546726,\n> or mute the thread\n> https://github.com/notifications/unsubscribe-auth/AGVaIX_EhswVMD6sJJsefNeQFF1i5gLZks5qZ_N3gaJpZM4JVkAr\n> .\n",
        "createdAt" : "2016-07-28T00:51:00Z",
        "updatedAt" : "2016-07-28T00:51:00Z",
        "lastEditedBy" : "da89ddc4-a965-438c-a3b1-c68ba2d1d5bc",
        "tags" : [
        ]
      },
      {
        "id" : "e0fbb1d2-7276-4c28-ad51-e864f87b38fc",
        "parentId" : "743513f7-e004-4a70-ad25-89fe5376ba5d",
        "authorId" : "2758f003-b4bb-4113-b6a9-e1f4e42a1de6",
        "body" : "If you have an alternative in the works, I'm fine with the current version as an interim solution.\n",
        "createdAt" : "2016-07-28T21:41:31Z",
        "updatedAt" : "2016-07-28T21:41:31Z",
        "lastEditedBy" : "2758f003-b4bb-4113-b6a9-e1f4e42a1de6",
        "tags" : [
        ]
      }
    ],
    "commit" : "081dfbbb7385a7bd20f629fbb3ed142ce3ed3ca8",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +194,198 @@    local -r k8s_version_re='.*Kubernetes: ([0-9a-z.-]+),.*'\n    if [[ ${image_description} =~ ${k8s_version_re} ]]; then\n      export JENKINS_PUBLISHED_VERSION=\"release/${BASH_REMATCH[1]}\"\n    else\n      echo \"Failed to determine builtin k8s version for image ${image_name}: ${image_description}\""
  },
  {
    "id" : "eb3b8ae8-d145-4150-bb60-e6eb956004ef",
    "prId" : 29446,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "25d68cad-16c9-4d04-8369-ab6230fef49b",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "@spxtr - I know this will make the whole suite to be red, instead of producing some xunit files, but I think it is way better, that silently ignore errors and marking runs as \"passed\". We should fix those \"xunit\" files later.\n",
        "createdAt" : "2016-07-22T09:57:20Z",
        "updatedAt" : "2016-07-22T09:57:20Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "7ef2e946dc7b562954e6c2e75052023a1d2bcedf",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +426,430 @@  # TODO: The above comment is no longer accurate. Need to fix this before\n  # turning xunit off for the postsubmit tests. See: #28200\n  ./test/kubemark/run-e2e-tests.sh --ginkgo.focus=\"${KUBEMARK_TESTS:-starting\\s30\\spods}\" \"${KUBEMARK_TEST_ARGS:-}\" || dump_cluster_logs_and_exit\n  ./test/kubemark/stop-kubemark.sh\n  NUM_NODES=${NUM_NODES_BKP}"
  },
  {
    "id" : "3fe00874-de77-44c5-b360-0e8f5877be5e",
    "prId" : 28917,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2a6fb33d-0e2c-4330-9f24-69af11be5780",
        "parentId" : null,
        "authorId" : "2758f003-b4bb-4113-b6a9-e1f4e42a1de6",
        "body" : "curious - why do we need \"-test\" image here?  can we use \"gci-canary\" instead?\n",
        "createdAt" : "2016-07-13T22:13:21Z",
        "updatedAt" : "2016-07-13T22:13:21Z",
        "lastEditedBy" : "2758f003-b4bb-4113-b6a9-e1f4e42a1de6",
        "tags" : [
        ]
      },
      {
        "id" : "73349def-1513-47af-9fe7-f074da3ebefa",
        "parentId" : "2a6fb33d-0e2c-4330-9f24-69af11be5780",
        "authorId" : "2758f003-b4bb-4113-b6a9-e1f4e42a1de6",
        "body" : "Ah sorry, I misread it the first time.  Makes sense now.\n",
        "createdAt" : "2016-07-13T22:14:21Z",
        "updatedAt" : "2016-07-13T22:14:21Z",
        "lastEditedBy" : "2758f003-b4bb-4113-b6a9-e1f4e42a1de6",
        "tags" : [
        ]
      }
    ],
    "commit" : "f5d711a56c430514780ad65bb63417f73d3bd22b",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +217,221 @@  export KUBE_GCE_MASTER_IMAGE=\"$(get_latest_gci_image \"${GCI_STAGING_PROJECT}\" \"${JENKINS_GCI_IMAGE_FAMILY}\")\"\n  export KUBE_OS_DISTRIBUTION=\"gci\"\n  if [[ \"${JENKINS_GCI_IMAGE_FAMILY}\" == \"gci-canary-test\" ]]; then\n    # The family \"gci-canary-test\" is reserved for a special type of GCI images\n    # that are used to continuously validate Docker releases."
  },
  {
    "id" : "b018c42f-4f0a-4921-af51-2e39ee3f2a55",
    "prId" : 28780,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6b2a8e36-4dfd-4519-9f8d-ca53c08b47c3",
        "parentId" : null,
        "authorId" : "c532215f-ed76-4a19-b066-8676d269eaf1",
        "body" : "`>&2` and `exit 1`?\n",
        "createdAt" : "2016-07-11T17:33:10Z",
        "updatedAt" : "2016-07-11T17:33:10Z",
        "lastEditedBy" : "c532215f-ed76-4a19-b066-8676d269eaf1",
        "tags" : [
        ]
      },
      {
        "id" : "ca309c66-3fdf-4807-b115-09b600a0a4dc",
        "parentId" : "6b2a8e36-4dfd-4519-9f8d-ca53c08b47c3",
        "authorId" : "185604f6-2915-4313-8d6b-1d55757d0d22",
        "body" : "No I explicitly do not want to exit 1 (for the time being)\n",
        "createdAt" : "2016-07-11T17:36:34Z",
        "updatedAt" : "2016-07-11T17:36:53Z",
        "lastEditedBy" : "185604f6-2915-4313-8d6b-1d55757d0d22",
        "tags" : [
        ]
      },
      {
        "id" : "11a926b0-624a-43ec-906c-97afa32088a5",
        "parentId" : "6b2a8e36-4dfd-4519-9f8d-ca53c08b47c3",
        "authorId" : "c532215f-ed76-4a19-b066-8676d269eaf1",
        "body" : "OK, just `>&2` then.\n",
        "createdAt" : "2016-07-11T17:38:15Z",
        "updatedAt" : "2016-07-11T17:38:16Z",
        "lastEditedBy" : "c532215f-ed76-4a19-b066-8676d269eaf1",
        "tags" : [
        ]
      },
      {
        "id" : "a7e76147-81c2-4d51-ab94-1b8b734586b7",
        "parentId" : "6b2a8e36-4dfd-4519-9f8d-ca53c08b47c3",
        "authorId" : "c532215f-ed76-4a19-b066-8676d269eaf1",
        "body" : "Not a big deal though, doesn't really need to happen here. We should probably go over the whole file and make it consistent at some point.\n",
        "createdAt" : "2016-07-11T17:44:31Z",
        "updatedAt" : "2016-07-11T17:44:31Z",
        "lastEditedBy" : "c532215f-ed76-4a19-b066-8676d269eaf1",
        "tags" : [
        ]
      },
      {
        "id" : "85f0f0cd-09e0-4204-845a-e9330f35074a",
        "parentId" : "6b2a8e36-4dfd-4519-9f8d-ca53c08b47c3",
        "authorId" : "185604f6-2915-4313-8d6b-1d55757d0d22",
        "body" : "This file does not follow this pattern -- everything goes to stdout. If we want to make that change let's update the whole file in a separate PR.\n",
        "createdAt" : "2016-07-11T17:49:16Z",
        "updatedAt" : "2016-07-11T17:49:16Z",
        "lastEditedBy" : "185604f6-2915-4313-8d6b-1d55757d0d22",
        "tags" : [
        ]
      }
    ],
    "commit" : "3d30caf80cb07998a54341573ce46fc216831996",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +230,234 @@  unset KUBEKINS_SERVICE_ACCOUNT_FILE\nelif [[ -n \"${KUBEKINS_SERVICE_ACCOUNT_FILE:-}\" ]]; then\n  echo \"ERROR: cannot access service account file at: ${KUBEKINS_SERVICE_ACCOUNT_FILE}\"\nfi\n"
  },
  {
    "id" : "c28c0274-1990-4b5a-b059-2825b2636f13",
    "prId" : 28634,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2aff06b7-78fd-4e9c-98fb-bd651058d0e8",
        "parentId" : null,
        "authorId" : "ad0a3561-db60-47a9-b82f-ac613199f968",
        "body" : "What is this whitespace change?\n",
        "createdAt" : "2016-07-07T20:41:20Z",
        "updatedAt" : "2016-07-07T20:41:20Z",
        "lastEditedBy" : "ad0a3561-db60-47a9-b82f-ac613199f968",
        "tags" : [
        ]
      },
      {
        "id" : "30a7a1a9-31a5-46b7-9365-897d5a3d783f",
        "parentId" : "2aff06b7-78fd-4e9c-98fb-bd651058d0e8",
        "authorId" : "185604f6-2915-4313-8d6b-1d55757d0d22",
        "body" : "Death to tabs!\n",
        "createdAt" : "2016-07-07T20:41:43Z",
        "updatedAt" : "2016-07-07T20:41:43Z",
        "lastEditedBy" : "185604f6-2915-4313-8d6b-1d55757d0d22",
        "tags" : [
        ]
      },
      {
        "id" : "2647e183-69f9-4818-97b6-1f92b7e16d83",
        "parentId" : "2aff06b7-78fd-4e9c-98fb-bd651058d0e8",
        "authorId" : "ad0a3561-db60-47a9-b82f-ac613199f968",
        "body" : "You realize this is a Go project, right? :smile:\n",
        "createdAt" : "2016-07-07T20:42:32Z",
        "updatedAt" : "2016-07-07T20:42:32Z",
        "lastEditedBy" : "ad0a3561-db60-47a9-b82f-ac613199f968",
        "tags" : [
        ]
      },
      {
        "id" : "185d6ab4-1164-459f-b900-2a6486d69054",
        "parentId" : "2aff06b7-78fd-4e9c-98fb-bd651058d0e8",
        "authorId" : "185604f6-2915-4313-8d6b-1d55757d0d22",
        "body" : "What??? GET ME OUT OF HERE!\n",
        "createdAt" : "2016-07-09T01:16:30Z",
        "updatedAt" : "2016-07-09T01:16:30Z",
        "lastEditedBy" : "185604f6-2915-4313-8d6b-1d55757d0d22",
        "tags" : [
        ]
      }
    ],
    "commit" : "8c8c7d4ef85a958c349e1524a24a7efc2a0c9862",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +351,355 @@        # Back out into the old tests now that we've downloaded & maybe upgraded.\n        cd ../kubernetes_old\n        # Append kubectl-path of skewed kubectl to test args, since we always\n        # want that to use the skewed kubectl version:\n        #"
  },
  {
    "id" : "7347a88f-22ae-43b4-a7cd-cbc64c5eb818",
    "prId" : 28575,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "42e38af9-fad9-418a-94db-0dd3fa3a7293",
        "parentId" : null,
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "aren't `--ctl` and `--test` mutually exclusive?\n",
        "createdAt" : "2016-08-09T20:30:44Z",
        "updatedAt" : "2016-08-09T21:04:26Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "f3d65544-43b3-4620-aa42-b0c4853db184",
        "parentId" : "42e38af9-fad9-418a-94db-0dd3fa3a7293",
        "authorId" : "185604f6-2915-4313-8d6b-1d55757d0d22",
        "body" : "No, not anymore, fixed the flag comment\n",
        "createdAt" : "2016-08-09T21:00:51Z",
        "updatedAt" : "2016-08-09T21:04:26Z",
        "lastEditedBy" : "185604f6-2915-4313-8d6b-1d55757d0d22",
        "tags" : [
        ]
      }
    ],
    "commit" : "7011d8826ea0e6aa6da5ec7da9a60bb5d4ecc3d0",
    "line" : 141,
    "diffHunk" : "@@ -1,1 +369,373 @@\nif [[ \"${E2E_UP,,}\" == \"true\" ]]; then\n  e2e_go_args+=(--up --ctl=\"version --match-server-version=false\")\nfi\n"
  },
  {
    "id" : "b434e8dd-46e6-4ab4-a32a-fbabfaff1799",
    "prId" : 28191,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3b273660-9f2e-44b3-9ce2-1076a8f67dcd",
        "parentId" : null,
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "we need to be careful about this, I think - we need to make sure the cluster is torn down before we errexit.\n",
        "createdAt" : "2016-06-28T23:26:40Z",
        "updatedAt" : "2016-06-29T03:30:16Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "8d365d10-5156-4f83-b4f0-fb6022b0acbf",
        "parentId" : "3b273660-9f2e-44b3-9ce2-1076a8f67dcd",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "That's what I wanted to ask. I will make some more changes.\n",
        "createdAt" : "2016-06-28T23:30:09Z",
        "updatedAt" : "2016-06-29T03:30:16Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "2611d471-3edd-4a69-af67-a7af958d67c2",
        "parentId" : "3b273660-9f2e-44b3-9ce2-1076a8f67dcd",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "updated, PTAL\n",
        "createdAt" : "2016-06-29T00:47:37Z",
        "updatedAt" : "2016-06-29T03:30:16Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "9dbf60ca-7389-498f-8ffd-a57012a452b2",
        "parentId" : "3b273660-9f2e-44b3-9ce2-1076a8f67dcd",
        "authorId" : "185604f6-2915-4313-8d6b-1d55757d0d22",
        "body" : "What about when --isup fails?\n",
        "createdAt" : "2016-06-29T20:52:13Z",
        "updatedAt" : "2016-06-29T20:52:13Z",
        "lastEditedBy" : "185604f6-2915-4313-8d6b-1d55757d0d22",
        "tags" : [
        ]
      },
      {
        "id" : "8916c294-bfef-4a80-a2ed-3599940a6981",
        "parentId" : "3b273660-9f2e-44b3-9ce2-1076a8f67dcd",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "I guess that was already triggering a complete test failure? Either that or it wasn't causing a failure at all?\n",
        "createdAt" : "2016-06-29T21:29:47Z",
        "updatedAt" : "2016-06-29T21:29:47Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "b754695adb6c8d3b42c6e0956d963324471c116f",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +193,197 @@        gsutil cp ./version gs://kubernetes-release/ci/latest-green.txt\n    fi\n    return ${exitcode}\n}\n"
  },
  {
    "id" : "d16b6817-f02f-461b-bfee-42317e28b917",
    "prId" : 28191,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1d7c7c9f-f4b9-4fb8-8bf0-59d5388464a1",
        "parentId" : null,
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "issue # to track?\n",
        "createdAt" : "2016-06-29T01:14:21Z",
        "updatedAt" : "2016-06-29T03:30:16Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "a5145544-14a8-4123-8bee-40232fa196ba",
        "parentId" : "1d7c7c9f-f4b9-4fb8-8bf0-59d5388464a1",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "added.\n",
        "createdAt" : "2016-06-29T03:30:36Z",
        "updatedAt" : "2016-06-29T03:30:36Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "b754695adb6c8d3b42c6e0956d963324471c116f",
    "line" : 41,
    "diffHunk" : "@@ -1,1 +368,372 @@  # handle blocking the merge queue as a result of test failure flakes.  Infrastructure failures should continue to\n  # exit non-0.\n  # TODO: The above comment is no longer accurate. Need to fix this before\n  # turning xunit off for the postsubmit tests. See: #28200\n  ./test/kubemark/run-e2e-tests.sh --ginkgo.focus=\"${KUBEMARK_TESTS:-starting\\s30\\spods}\" \"${KUBEMARK_TEST_ARGS:-}\" || dump_cluster_logs"
  },
  {
    "id" : "66d0d73a-cf77-45f3-bb95-6f9da61cdb68",
    "prId" : 28191,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7dd54058-9bea-4ca2-a3cc-30e151efa95c",
        "parentId" : null,
        "authorId" : "185604f6-2915-4313-8d6b-1d55757d0d22",
        "body" : "Don't we already have `exitcode`? Why do we need a second one?\n",
        "createdAt" : "2016-06-29T20:54:09Z",
        "updatedAt" : "2016-06-29T20:54:09Z",
        "lastEditedBy" : "185604f6-2915-4313-8d6b-1d55757d0d22",
        "tags" : [
        ]
      },
      {
        "id" : "df8b9c36-1b2d-4553-b5a0-668ffc9875d8",
        "parentId" : "7dd54058-9bea-4ca2-a3cc-30e151efa95c",
        "authorId" : "185604f6-2915-4313-8d6b-1d55757d0d22",
        "body" : "I guess is just local to the function but seems a little odd.\n",
        "createdAt" : "2016-06-29T20:56:14Z",
        "updatedAt" : "2016-06-29T20:56:14Z",
        "lastEditedBy" : "185604f6-2915-4313-8d6b-1d55757d0d22",
        "tags" : [
        ]
      },
      {
        "id" : "a80ed6e6-f556-4d07-b4d4-427c2cea2dda",
        "parentId" : "7dd54058-9bea-4ca2-a3cc-30e151efa95c",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Yeah I dunno what the rules are in shell, but I like my local variables and global ones to not interact...\n",
        "createdAt" : "2016-06-29T21:28:07Z",
        "updatedAt" : "2016-06-29T21:28:07Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "b754695adb6c8d3b42c6e0956d963324471c116f",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +203,207 @@# Set this var instead of exiting-- we must do the cluster teardown step. We'll\n# return this at the very end.\nEXIT_CODE=0\n\n# We get the Kubernetes tarballs unless we are going to use old ones"
  },
  {
    "id" : "3fcbba8c-a214-4a3b-9737-e06fa9e85938",
    "prId" : 28133,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "86e8ebaa-a59e-4bd8-8aaf-49b81a2e9557",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Why do you need to curl this? Shouldn't this file be included in whatever PR is getting tested?\n",
        "createdAt" : "2016-06-27T22:18:43Z",
        "updatedAt" : "2016-06-29T23:49:54Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "32010e75-41a5-4d2f-a81e-34c1088d2434",
        "parentId" : "86e8ebaa-a59e-4bd8-8aaf-49b81a2e9557",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "IMO it's not good to get it from master-- if it breaks at head it breaks everywhere...\n",
        "createdAt" : "2016-06-27T22:19:28Z",
        "updatedAt" : "2016-06-29T23:49:54Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "a5d60e96-34e6-4d20-9069-d39a185d926c",
        "parentId" : "86e8ebaa-a59e-4bd8-8aaf-49b81a2e9557",
        "authorId" : "e83108b8-1fb2-416b-9298-d5b70c14f708",
        "body" : "The reason we need to curl it is because e2e-runner is running as standalone script on jenkins. It does not come with the whole repo. \n",
        "createdAt" : "2016-06-27T22:26:00Z",
        "updatedAt" : "2016-06-29T23:49:54Z",
        "lastEditedBy" : "e83108b8-1fb2-416b-9298-d5b70c14f708",
        "tags" : [
        ]
      },
      {
        "id" : "02e476b6-e043-4c71-8a04-786e594d4f5c",
        "parentId" : "86e8ebaa-a59e-4bd8-8aaf-49b81a2e9557",
        "authorId" : "629d8942-34f3-4c20-a8cc-f4de4d3f809a",
        "body" : "How is this running standalone? Don't you need to clone this repo to get access to the script in the first place?\n",
        "createdAt" : "2016-06-28T00:21:08Z",
        "updatedAt" : "2016-06-29T23:49:54Z",
        "lastEditedBy" : "629d8942-34f3-4c20-a8cc-f4de4d3f809a",
        "tags" : [
        ]
      },
      {
        "id" : "b8116f1c-7a14-4898-b1d0-b6ae3d4f12d2",
        "parentId" : "86e8ebaa-a59e-4bd8-8aaf-49b81a2e9557",
        "authorId" : "e83108b8-1fb2-416b-9298-d5b70c14f708",
        "body" : "Nope. e2e-runner will pull k8s binary from gcs. \n@ixdy \n",
        "createdAt" : "2016-06-28T01:15:43Z",
        "updatedAt" : "2016-06-29T23:49:54Z",
        "lastEditedBy" : "e83108b8-1fb2-416b-9298-d5b70c14f708",
        "tags" : [
        ]
      },
      {
        "id" : "8944402c-8037-4e2b-83da-8a9d2cea18db",
        "parentId" : "86e8ebaa-a59e-4bd8-8aaf-49b81a2e9557",
        "authorId" : "c532215f-ed76-4a19-b066-8676d269eaf1",
        "body" : "@freehan is correct. We curl down `e2e-runner.sh` which downloads the kubernetes tar from GCS.\n",
        "createdAt" : "2016-07-08T17:46:27Z",
        "updatedAt" : "2016-07-08T17:46:27Z",
        "lastEditedBy" : "c532215f-ed76-4a19-b066-8676d269eaf1",
        "tags" : [
        ]
      }
    ],
    "commit" : "586bb1f02877d2988b7ba273e5455f82a4a21a75",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +23,27 @@\n# include shell2junit library\nsource <(curl -fsS --retry 3 'https://raw.githubusercontent.com/kubernetes/kubernetes/master/third_party/forked/shell2junit/sh2ju.sh')\n\n# Have cmd/e2e run by goe2e.sh generate JUnit report in ${WORKSPACE}/junit*.xml"
  },
  {
    "id" : "21526eaf-aa8e-4059-a34d-3184fb41e538",
    "prId" : 28133,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bb6c1d76-71e8-4b5a-86a8-4090beaf331c",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "@david-mcmahon you seem like someone who knows bash. Would you like to review this?\n",
        "createdAt" : "2016-06-27T22:38:54Z",
        "updatedAt" : "2016-06-29T23:49:54Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "586bb1f02877d2988b7ba273e5455f82a4a21a75",
    "line" : null,
    "diffHunk" : "@@ -1,1 +47,51 @@#          This is because the command runs in subshell.\nfunction record_command() {\n    set +o xtrace\n    set +o nounset\n    set +o errexit"
  },
  {
    "id" : "8b507e3b-b916-4246-a16c-b59bc90a556a",
    "prId" : 28133,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1814f750-eb66-497f-b97c-7d74990b2089",
        "parentId" : null,
        "authorId" : "629d8942-34f3-4c20-a8cc-f4de4d3f809a",
        "body" : "Why set + here and then re-set - below?\n",
        "createdAt" : "2016-06-28T00:23:34Z",
        "updatedAt" : "2016-06-29T23:49:54Z",
        "lastEditedBy" : "629d8942-34f3-4c20-a8cc-f4de4d3f809a",
        "tags" : [
        ]
      },
      {
        "id" : "ec6e722b-42c3-42d5-90ce-2c1653d08cf1",
        "parentId" : "1814f750-eb66-497f-b97c-7d74990b2089",
        "authorId" : "e83108b8-1fb2-416b-9298-d5b70c14f708",
        "body" : "for xtrace, if we leave it on, it will trace all commands in juLog, which is way too noisy. \n\njuLog made the assumption that nounset and errexit were not set. I want to ensure it won't exit accidentally. \n",
        "createdAt" : "2016-06-28T01:15:37Z",
        "updatedAt" : "2016-06-29T23:49:54Z",
        "lastEditedBy" : "e83108b8-1fb2-416b-9298-d5b70c14f708",
        "tags" : [
        ]
      }
    ],
    "commit" : "586bb1f02877d2988b7ba273e5455f82a4a21a75",
    "line" : null,
    "diffHunk" : "@@ -1,1 +49,53 @@    set +o xtrace\n    set +o nounset\n    set +o errexit\n\n    local class=$1"
  },
  {
    "id" : "d7802974-a011-460e-9a3d-0dac7e9112f0",
    "prId" : 28133,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f18ec301-1add-4c5f-ba53-5b1d19bda077",
        "parentId" : null,
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "I think you could use `${@:3}` instead of `shift`ing, though I haven' tested this. \n",
        "createdAt" : "2016-06-28T21:16:32Z",
        "updatedAt" : "2016-06-29T23:49:54Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "fc29ab03-051d-4efb-9414-f28fc762f86b",
        "parentId" : "f18ec301-1add-4c5f-ba53-5b1d19bda077",
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "it's also pretty readable as-is, so maybe we don't need to worry about this.\n",
        "createdAt" : "2016-06-28T21:22:54Z",
        "updatedAt" : "2016-06-29T23:49:54Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "0139531b-9021-4f76-9178-4b550215e45d",
        "parentId" : "f18ec301-1add-4c5f-ba53-5b1d19bda077",
        "authorId" : "e83108b8-1fb2-416b-9298-d5b70c14f708",
        "body" : "it works. Thanks.\n",
        "createdAt" : "2016-06-28T21:32:05Z",
        "updatedAt" : "2016-06-29T23:49:54Z",
        "lastEditedBy" : "e83108b8-1fb2-416b-9298-d5b70c14f708",
        "tags" : [
        ]
      }
    ],
    "commit" : "586bb1f02877d2988b7ba273e5455f82a4a21a75",
    "line" : null,
    "diffHunk" : "@@ -1,1 +56,60 @@    shift\n    echo \"Recording: ${class} ${name}\"\n    echo \"Running command: $@\"\n    juLog -output=\"${ARTIFACTS}\" -class=\"${class}\" -name=\"${name}\" \"$@\"\n"
  },
  {
    "id" : "96a2112c-9d9e-428b-8727-4f7b9717b947",
    "prId" : 27743,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6ab8c7d3-d2fb-47f6-bd37-7c1d0018c2d7",
        "parentId" : null,
        "authorId" : "185604f6-2915-4313-8d6b-1d55757d0d22",
        "body" : "Never seen `<<<` before! I guess it is cat the var to stdin\n",
        "createdAt" : "2016-06-23T00:57:15Z",
        "updatedAt" : "2016-06-23T00:57:15Z",
        "lastEditedBy" : "185604f6-2915-4313-8d6b-1d55757d0d22",
        "tags" : [
        ]
      }
    ],
    "commit" : "93189dd5694f3b9d8dd5360f2a83dd954a101ead",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +100,104 @@      return\n    fi\n  done <<< \"${releases}\"\n  echo \"Failed to determine the latest Docker release.\"\n  exit 1"
  },
  {
    "id" : "7a75ab05-34fc-4071-94bb-b3208c283762",
    "prId" : 27743,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5f2563e1-634b-4dd7-9404-21a6448282a8",
        "parentId" : null,
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "The kubekins-test image has jq: https://github.com/kubernetes/kubernetes/blob/master/hack/jenkins/test-image/Dockerfile#L34\n",
        "createdAt" : "2016-06-23T00:58:33Z",
        "updatedAt" : "2016-06-23T00:58:33Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "8c2b0364-87fa-44ea-9c82-cd3f95cbe612",
        "parentId" : "5f2563e1-634b-4dd7-9404-21a6448282a8",
        "authorId" : "da89ddc4-a965-438c-a3b1-c68ba2d1d5bc",
        "body" : "Great. I'll update it in a follow up CL.\n",
        "createdAt" : "2016-06-23T04:33:33Z",
        "updatedAt" : "2016-06-23T04:33:33Z",
        "lastEditedBy" : "da89ddc4-a965-438c-a3b1-c68ba2d1d5bc",
        "tags" : [
        ]
      }
    ],
    "commit" : "93189dd5694f3b9d8dd5360f2a83dd954a101ead",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +93,97 @@  # The GitHub API returns releases in descending order of creation time so the\n  # first one is always the latest.\n  # TODO: if we can install `jq` on the Jenkins nodes, we won't have to craft\n  # regular expressions here.\n  while read -r line; do"
  },
  {
    "id" : "312ec8c1-c867-4f2e-aded-3af6ada84f34",
    "prId" : 26813,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "07113042-5a15-4fde-93ff-fa0a133129d9",
        "parentId" : null,
        "authorId" : "c532215f-ed76-4a19-b066-8676d269eaf1",
        "body" : "nit: quotes `\"${version_re}\"`\n",
        "createdAt" : "2016-06-06T17:13:35Z",
        "updatedAt" : "2016-06-06T17:13:35Z",
        "lastEditedBy" : "c532215f-ed76-4a19-b066-8676d269eaf1",
        "tags" : [
        ]
      },
      {
        "id" : "9e2ac67b-1f2e-4346-ab4b-007aa5478a25",
        "parentId" : "07113042-5a15-4fde-93ff-fa0a133129d9",
        "authorId" : "da89ddc4-a965-438c-a3b1-c68ba2d1d5bc",
        "body" : "I have been following the [bash 3.2 guide](http://www.tldp.org/LDP/abs/html/bashver3.html#REGEXMATCHREF) on using regular expression by not quoting them:\n\n```\nIn fact, quoting in this context is not advisable as it may cause regex evaluation to fail.\n```\n",
        "createdAt" : "2016-06-06T17:16:49Z",
        "updatedAt" : "2016-06-06T17:16:49Z",
        "lastEditedBy" : "da89ddc4-a965-438c-a3b1-c68ba2d1d5bc",
        "tags" : [
        ]
      },
      {
        "id" : "0e135209-74a4-4a89-9dbf-900912b32a77",
        "parentId" : "07113042-5a15-4fde-93ff-fa0a133129d9",
        "authorId" : "c532215f-ed76-4a19-b066-8676d269eaf1",
        "body" : "Ah, okay. Good :)\n",
        "createdAt" : "2016-06-06T17:32:28Z",
        "updatedAt" : "2016-06-06T17:32:28Z",
        "lastEditedBy" : "c532215f-ed76-4a19-b066-8676d269eaf1",
        "tags" : [
        ]
      }
    ],
    "commit" : "a3d712c3599b0636dddb401039f97574002f40f9",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +134,138 @@  local -r version_re='.*\\\"tag_name\\\":[[:space:]]+\\\"v([0-9\\.r|c-]+)\\\",.*'\n  local -r latest_release=\"$(curl -fsSL --retry 3 https://api.github.com/repos/docker/docker/releases/latest)\"\n  if [[ \"${latest_release}\" =~ ${version_re} ]]; then\n    echo \"${BASH_REMATCH[1]}\"\n  else"
  },
  {
    "id" : "5bd0cc82-9410-4d56-9767-35fad0927058",
    "prId" : 25920,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "77c7d62c-dd20-4dc0-91d6-5dfb071cd38b",
        "parentId" : null,
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "not really related to this PR, but does the bucket name still need to be conf?\n",
        "createdAt" : "2016-05-19T22:44:20Z",
        "updatedAt" : "2016-05-19T22:45:17Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "1278c135-07cb-44ef-b33a-01253b4103c2",
        "parentId" : "77c7d62c-dd20-4dc0-91d6-5dfb071cd38b",
        "authorId" : "da89ddc4-a965-438c-a3b1-c68ba2d1d5bc",
        "body" : "As of now yes as it's been using the old product name that we don't want to mention in public. We'll make another one that's okay to share.\n",
        "createdAt" : "2016-05-19T23:33:12Z",
        "updatedAt" : "2016-05-19T23:33:12Z",
        "lastEditedBy" : "da89ddc4-a965-438c-a3b1-c68ba2d1d5bc",
        "tags" : [
        ]
      }
    ],
    "commit" : "967b869c6799cda26c0fe7378cea9b27e42c2fde",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +114,118 @@    # transient server errors.\n    for n in $(seq 3); do\n      image=\"$(gsutil cat \"gs://${image_project}/image-indices/latest-base-image-${image_index}\")\" && break || sleep 1\n    done\n    if [[ -z \"${image}\" ]]; then"
  },
  {
    "id" : "adfc49b5-c203-482c-9767-e97e3851b9d3",
    "prId" : 25000,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e1846753-cfb2-4987-9420-322da09191a0",
        "parentId" : null,
        "authorId" : "c532215f-ed76-4a19-b066-8676d269eaf1",
        "body" : "I'd appreciate a short comment on what these environment variables do.\n",
        "createdAt" : "2016-04-29T22:52:39Z",
        "updatedAt" : "2016-05-11T18:08:23Z",
        "lastEditedBy" : "c532215f-ed76-4a19-b066-8676d269eaf1",
        "tags" : [
        ]
      }
    ],
    "commit" : "3f3e2d9b9a29a5cef6793aa3a99cef8cd7896a36",
    "line" : null,
    "diffHunk" : "@@ -1,1 +332,336 @@# JENKINS_USE_SKEW_KUBECTL=true will use the skewed version of Kubectl; it is\n# mutually exclusive with JENKINS_USE_SKEW_TESTS.\nif [[ -n \"${JENKINS_PUBLISHED_SKEW_VERSION:-}\" ]]; then\n    cd ..\n    mv kubernetes kubernetes_old"
  },
  {
    "id" : "f4333d94-2a9f-4b22-b0dc-89a41c54fc8f",
    "prId" : 23821,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "445a0632-8994-4c9a-a8e3-5a6e83785bda",
        "parentId" : null,
        "authorId" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "body" : "Does this actually restart the copy from the beginning? I happen to recall some state file that was local and could resume a cp. If the contents changes as we were cp'ing what's the desired behavior? \n",
        "createdAt" : "2016-04-04T17:25:56Z",
        "updatedAt" : "2016-04-06T23:42:39Z",
        "lastEditedBy" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "tags" : [
        ]
      },
      {
        "id" : "981e9b49-483d-4229-aefb-f1a5601f90ac",
        "parentId" : "445a0632-8994-4c9a-a8e3-5a6e83785bda",
        "authorId" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "body" : "Ah this thing https://cloud.google.com/storage/docs/gsutil/commands/cp#resumable-transfers\n",
        "createdAt" : "2016-04-04T17:26:14Z",
        "updatedAt" : "2016-04-06T23:42:39Z",
        "lastEditedBy" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "tags" : [
        ]
      },
      {
        "id" : "2a8f4564-a835-4391-947c-71cd502f284c",
        "parentId" : "445a0632-8994-4c9a-a8e3-5a6e83785bda",
        "authorId" : "c532215f-ed76-4a19-b066-8676d269eaf1",
        "body" : "I added the line below to deal with this.\n",
        "createdAt" : "2016-04-04T17:42:24Z",
        "updatedAt" : "2016-04-06T23:42:39Z",
        "lastEditedBy" : "c532215f-ed76-4a19-b066-8676d269eaf1",
        "tags" : [
        ]
      }
    ],
    "commit" : "5f5639da1ea8fc8e5cb821849b61bb3f5305a1b8",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +252,256 @@    # race conditions where the bucket contents change under us as we download.\n    for n in $(seq 3); do\n        gsutil -mq cp -r \"${CLOUDSDK_BUCKET}\" ~ && break || sleep 1\n        # Delete any temporary files from the download so that we start from\n        # scratch when we retry."
  },
  {
    "id" : "f27a1088-e6e2-4ae4-bc0e-c5fcfcdf8f5d",
    "prId" : 21442,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c41b576e-6cbf-4799-a2c5-22b280adec79",
        "parentId" : null,
        "authorId" : "c532215f-ed76-4a19-b066-8676d269eaf1",
        "body" : "I think test_args defaults to \"\" anyway, so you might not need the check.\n",
        "createdAt" : "2016-02-18T19:57:02Z",
        "updatedAt" : "2016-02-18T19:57:02Z",
        "lastEditedBy" : "c532215f-ed76-4a19-b066-8676d269eaf1",
        "tags" : [
        ]
      }
    ],
    "commit" : "68fddbdfadb20e97281ba8ffdaf5de9b4d5ef311",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +175,179 @@    go run ./hack/e2e.go ${E2E_OPT:-} -v --isup\n    go run ./hack/e2e.go ${E2E_OPT:-} -v --test \\\n      ${GINKGO_TEST_ARGS:+--test_args=\"${GINKGO_TEST_ARGS}\"} \\\n      && exitcode=0 || exitcode=$?\n    if [[ \"${E2E_PUBLISH_GREEN_VERSION:-}\" == \"true\" && ${exitcode} == 0 && -n ${build_version:-} ]]; then"
  }
]