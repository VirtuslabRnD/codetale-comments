[
  {
    "id" : "541887b2-a12c-42a3-9ac6-4fd973fa1758",
    "prId" : 33338,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/33338#pullrequestreview-1374923",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fd478e35-3f1e-4930-ae82-d7f13cbe6bcd",
        "parentId" : null,
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "we should probably change the path for the non-pull branch too?\n",
        "createdAt" : "2016-09-23T17:28:41Z",
        "updatedAt" : "2016-09-26T19:43:00Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "74c4087a-fefe-4af7-a54d-c87a3148ad8b",
        "parentId" : "fd478e35-3f1e-4930-ae82-d7f13cbe6bcd",
        "authorId" : "a0299f5e-d293-4eaf-b600-44d80bb14e1f",
        "body" : "It will break testgrid and other utilities that collect cadvisor/heapster/etc. results, and it isn't actively causing any problems.\n",
        "createdAt" : "2016-09-23T17:35:54Z",
        "updatedAt" : "2016-09-26T19:43:00Z",
        "lastEditedBy" : "a0299f5e-d293-4eaf-b600-44d80bb14e1f",
        "tags" : [
        ]
      },
      {
        "id" : "1f08ccfb-5fce-4603-b59c-7575d1a8b2a0",
        "parentId" : "fd478e35-3f1e-4930-ae82-d7f13cbe6bcd",
        "authorId" : "c532215f-ed76-4a19-b066-8676d269eaf1",
        "body" : "They'll need to be fixed at some point anyway, since we're looking to split up the repo. I'm fine with putting that off, though.\n",
        "createdAt" : "2016-09-23T17:54:06Z",
        "updatedAt" : "2016-09-26T19:43:00Z",
        "lastEditedBy" : "c532215f-ed76-4a19-b066-8676d269eaf1",
        "tags" : [
        ]
      }
    ],
    "commit" : "9b7f347e934c134a88d14b19315e363183611306",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +71,75 @@\nif [[ ${JOB_NAME} =~ -pull- ]]; then\n  : ${JENKINS_GCS_LOGS_PATH:=\"gs://kubernetes-jenkins/pr-logs/pull/${GCS_SUBDIR}${ghprbPullId:-unknown}\"}\n  : ${JENKINS_GCS_LATEST_PATH:=\"gs://kubernetes-jenkins/pr-logs/directory\"}\n  : ${JENKINS_GCS_LOGS_INDIRECT:=\"gs://kubernetes-jenkins/pr-logs/directory/${JOB_NAME}\"}"
  },
  {
    "id" : "fb5ba9ba-aa1d-48ea-9fc0-b455fe5cf035",
    "prId" : 33338,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/33338#pullrequestreview-1372814",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bb69c8a0-2db4-4705-b665-8ce6fa420f1a",
        "parentId" : null,
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "do we want this case? or should we just treat everything that's not `kubernetes/kubernetes` with its full path?\n",
        "createdAt" : "2016-09-23T17:30:48Z",
        "updatedAt" : "2016-09-26T19:43:00Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "d4bd2750-62b9-4d7a-997b-5675079fc6a5",
        "parentId" : "bb69c8a0-2db4-4705-b665-8ce6fa420f1a",
        "authorId" : "a0299f5e-d293-4eaf-b600-44d80bb14e1f",
        "body" : "I think eliding it is nice, because it lets things like `k8s-gubernator.appspot.com/pr/test-infra/34` do \"the right thing\" without extra logic. Especially as we add more and more other repos, having less duplicate `kubernetes_` path-spam will be nice.\n",
        "createdAt" : "2016-09-23T17:37:58Z",
        "updatedAt" : "2016-09-26T19:43:00Z",
        "lastEditedBy" : "a0299f5e-d293-4eaf-b600-44d80bb14e1f",
        "tags" : [
        ]
      },
      {
        "id" : "ecd850e5-606d-4a79-aacb-c49babf3b47d",
        "parentId" : "bb69c8a0-2db4-4705-b665-8ce6fa420f1a",
        "authorId" : "c532215f-ed76-4a19-b066-8676d269eaf1",
        "body" : "I'm happy with it either way.\n",
        "createdAt" : "2016-09-23T17:42:13Z",
        "updatedAt" : "2016-09-26T19:43:00Z",
        "lastEditedBy" : "c532215f-ed76-4a19-b066-8676d269eaf1",
        "tags" : [
        ]
      }
    ],
    "commit" : "9b7f347e934c134a88d14b19315e363183611306",
    "line" : null,
    "diffHunk" : "@@ -1,1 +60,64 @@    kubernetes/kubernetes) GCS_SUBDIR=\"\" ;;\n    # a different repo on the k8s org: just the repo name (strip kubernetes/)\n    kubernetes/*) GCS_SUBDIR=\"${remote_git_repo#kubernetes/}/\" ;;\n    # any other repo: ${org}_${repo} (replace / with _)\n    *) GCS_SUBDIR=\"${remote_git_repo/\\//_}/\" ;;"
  },
  {
    "id" : "b7495a63-6b43-4a1c-8646-591a215fae80",
    "prId" : 33338,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/33338#pullrequestreview-1395257",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "146e7f3a-148d-4898-b2a1-4956c8470b0e",
        "parentId" : null,
        "authorId" : "c532215f-ed76-4a19-b066-8676d269eaf1",
        "body" : "I guess I was hoping to get this info from the environment. This line feels super brittle.\n1. It will be empty without a git checkout, so we'll default to empty `GCS_SUBDIR`, even if we add a job that tests another repo without checking it out. This isn't a deal-breaker, just something we have to keep in mind.\n2. If the remote url ends with \".git\", what happens?\n3. On my machine it's called \"remote.upstream\", but this assumes it's \"remote.remote\". On Jenkins we set that, but I can totally see us changing that at some point and breaking this.\n",
        "createdAt" : "2016-09-23T17:52:57Z",
        "updatedAt" : "2016-09-26T19:43:00Z",
        "lastEditedBy" : "c532215f-ed76-4a19-b066-8676d269eaf1",
        "tags" : [
        ]
      },
      {
        "id" : "51901eb5-1cc2-4f72-a20e-9de44aa08ad2",
        "parentId" : "146e7f3a-148d-4898-b2a1-4956c8470b0e",
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "maybe do something like https://github.com/kubernetes/kubernetes/blob/master/hack/lib/util.sh#L383-L387 ?\n",
        "createdAt" : "2016-09-23T19:58:02Z",
        "updatedAt" : "2016-09-26T19:43:00Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      }
    ],
    "commit" : "9b7f347e934c134a88d14b19315e363183611306",
    "line" : null,
    "diffHunk" : "@@ -1,1 +54,58 @@# in general for most devs, where origin and upstream are more common.\nGCS_SUBDIR=\"\"\nreadonly remote_git_repo=$(git config --get remote.remote.url | sed 's:.*github.com/::' || true)\nif [[ -n \"${remote_git_repo}\" ]]; then\n  case \"${remote_git_repo}\" in"
  },
  {
    "id" : "34c03252-3cd3-4022-ab58-8c83ad4b659a",
    "prId" : 31478,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "79319dbb-18e6-40c7-a0f1-2f74e365bb96",
        "parentId" : null,
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "do you need to filter out the [ and ]?\n",
        "createdAt" : "2016-08-26T00:21:12Z",
        "updatedAt" : "2016-08-26T00:27:25Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "534fbf3c-7019-44e8-aa11-3eb08f8af5ad",
        "parentId" : "79319dbb-18e6-40c7-a0f1-2f74e365bb96",
        "authorId" : "629d8942-34f3-4c20-a8cc-f4de4d3f809a",
        "body" : "Pardon.  No, that's just a ridiculously compressed compound sed expression that does a few things.  Updated with a comment.\n",
        "createdAt" : "2016-08-26T00:28:06Z",
        "updatedAt" : "2016-08-26T00:28:06Z",
        "lastEditedBy" : "629d8942-34f3-4c20-a8cc-f4de4d3f809a",
        "tags" : [
        ]
      }
    ],
    "commit" : "55bfc885db176eb871997a112efb8fa449984e85",
    "line" : null,
    "diffHunk" : "@@ -1,1 +160,164 @@    # and then ensuring there's a single comma at the end of the line.\n    gsutil -q cat ${job_results} 2>&- |\\\n     sed -n 's/^\\({\"version\".*}\\),*/\\1,/p' |\\\n     tail -${cache_size} >> ${tmp_results} || continue\n    break"
  },
  {
    "id" : "ebe894ba-b1a5-4e5f-8755-9f544dd46554",
    "prId" : 30551,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a259b988-e15c-4ad1-8d92-7534c5b065e4",
        "parentId" : null,
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "what wasn't valid about it before?\n",
        "createdAt" : "2016-08-12T23:10:00Z",
        "updatedAt" : "2016-08-16T22:57:16Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "58f243a1-214d-499e-b315-43c9003ca713",
        "parentId" : "a259b988-e15c-4ad1-8d92-7534c5b065e4",
        "authorId" : "629d8942-34f3-4c20-a8cc-f4de4d3f809a",
        "body" : "Some of the jq queries I was making were barfing and when I added this it started working.  If your jq-foo is good and you want to take a look, I can send you some details?  But this also works, albeit a bit less simple than before.\n",
        "createdAt" : "2016-08-12T23:12:42Z",
        "updatedAt" : "2016-08-16T22:57:16Z",
        "lastEditedBy" : "629d8942-34f3-4c20-a8cc-f4de4d3f809a",
        "tags" : [
        ]
      },
      {
        "id" : "32c9701f-855c-4e03-96cb-5b1552b495fb",
        "parentId" : "a259b988-e15c-4ad1-8d92-7534c5b065e4",
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "do you have an example of before and after? the shell interpreter in my mind is tired.\n",
        "createdAt" : "2016-08-12T23:15:29Z",
        "updatedAt" : "2016-08-16T22:57:16Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "faa6496b-22ed-454b-b925-aa0758765568",
        "parentId" : "a259b988-e15c-4ad1-8d92-7534c5b065e4",
        "authorId" : "629d8942-34f3-4c20-a8cc-f4de4d3f809a",
        "body" : "Not really shell here.  Pure jq.\n\n```\n$ jq -r '.JOB[] | select(.result == \"SUCCESS\") | select(.version != \"\") | [.version,.buildnumber] | \"\\(.[0]) \\(.[1])\"' /tmp/out.json\nv1.4.0-alpha.2.793+a4acf0874763b9 7478\nv1.4.0-alpha.2.795+16c71aad4a2266 7479\n\n```\n\nWhere /tmp/out.json is:\n\n```\n{\"JOB\" : [\n{\"version\": \"v1.4.0-alpha.2.793+a4acf0874763b9\", \"buildnumber\": \"7478\", \"result\": \"SUCCESS\"},\n{\"version\": \"v1.4.0-alpha.2.795+16c71aad4a2266\", \"buildnumber\": \"7479\", \"result\": \"SUCCESS\"},\n{}\n]}\n```\n\nAnd...\n\n```\n$ jq -r '.JOB[] | select(.result == \"SUCCESS\") | select(.version != \"\") | [.version,.buildnumber] | \"\\(.[0]) \\(.[1])\"' /tmp/out2.json\njq: error: Cannot iterate over null\njq: error: Cannot iterate over null\n```\n\nWhere /tmp/out2.json is:\n\n```\n{\"version\": \"v1.4.0-alpha.2.793+a4acf0874763b9\", \"buildnumber\": \"21513\", \"result\": \"SUCCESS\"}\n{\"version\": \"v1.4.0-alpha.2.793+a4acf0874763b9\", \"buildnumber\": \"21514\", \"result\": \"SUCCESS\"}\n```\n",
        "createdAt" : "2016-08-15T18:16:30Z",
        "updatedAt" : "2016-08-16T22:57:16Z",
        "lastEditedBy" : "629d8942-34f3-4c20-a8cc-f4de4d3f809a",
        "tags" : [
        ]
      },
      {
        "id" : "f7e22a18-1583-4e7d-b78f-b4053a9dd4cd",
        "parentId" : "a259b988-e15c-4ad1-8d92-7534c5b065e4",
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "so as currently written, it's not a valid JSON file (which allows only a single object at root), but `jq` seems to work:\n\ninput:\n\n```\n{\"version\": \"v1.4.0-alpha.2.793+a4acf0874763b9\", \"buildnumber\": \"7478\", \"result\": \"SUCCESS\"}\n{\"version\": \"v1.4.0-alpha.2.795+16c71aad4a2266\", \"buildnumber\": \"7479\", \"result\": \"SUCCESS\"}\n```\n\n``` shell\n$ jq -r '. | select(.result == \"SUCCESS\") | select(.version != \"\") | [.version,.buildnumber] | \"\\(.[0]) \\(.[1])\"' /\ntmp/out2.json\nv1.4.0-alpha.2.793+a4acf0874763b9 7478\nv1.4.0-alpha.2.795+16c71aad4a2266 7479\n```\n\nIf you wanted it to be actually valid JSON for anything that reads it, then it could really just be an array:\n\n```\n[\n        {\"version\": \"v1.4.0-alpha.2.793+a4acf0874763b9\", \"buildnumber\": \"7478\", \"result\": \"SUCCESS\"},\n        {\"version\": \"v1.4.0-alpha.2.795+16c71aad4a2266\", \"buildnumber\": \"7479\", \"result\": \"SUCCESS\"},\n        {}\n]\n```\n\n``` shell\n$ jq -r '.[] | select(.result == \"SUCCESS\") | select(.version != \"\") | [.version,.buildnumber] | \"\\(.[0]) \\(.[1])\"'\n /tmp/out.json\nv1.4.0-alpha.2.793+a4acf0874763b9 7478\nv1.4.0-alpha.2.795+16c71aad4a2266 7479\n```\n\nI'm fine with the object wrapper you've implemented here too. Not sure if you use the \"JOB\" identifier anywhere else.\n",
        "createdAt" : "2016-08-15T23:48:36Z",
        "updatedAt" : "2016-08-16T22:57:16Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "2529f930-39a1-4ac2-b671-b5d8670f40ae",
        "parentId" : "a259b988-e15c-4ad1-8d92-7534c5b065e4",
        "authorId" : "629d8942-34f3-4c20-a8cc-f4de4d3f809a",
        "body" : "Thank you for fixing my jq expression!  PTAL.\n",
        "createdAt" : "2016-08-16T22:58:18Z",
        "updatedAt" : "2016-08-16T22:58:18Z",
        "lastEditedBy" : "629d8942-34f3-4c20-a8cc-f4de4d3f809a",
        "tags" : [
        ]
      }
    ],
    "commit" : "399b114c0470065326c8fd8b6be91279af84be00",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +152,156 @@  mkdir -p ${tmp_results%/*}\n\n  # Construct a valid json file\n  echo \"[\" > ${tmp_results}\n"
  },
  {
    "id" : "9a849495-8d61-4ef7-8eb3-5f946b4cc2cd",
    "prId" : 30551,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2c884c7e-be17-4552-9229-0dc7f5364ac0",
        "parentId" : null,
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "is this doing the clever thing of removing all the wrapping each time?\n\n(ugh we really need to be able to use `jq` here. @spxtr should we just create an upload-to-gcs docker image with gcloud and jq installed?)\n",
        "createdAt" : "2016-08-15T23:51:56Z",
        "updatedAt" : "2016-08-16T22:57:16Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "8b30219e-deda-49cc-96df-5b03a0d0443a",
        "parentId" : "2c884c7e-be17-4552-9229-0dc7f5364ac0",
        "authorId" : "629d8942-34f3-4c20-a8cc-f4de4d3f809a",
        "body" : "It is, in fact, doing just that clever thing. :)\n",
        "createdAt" : "2016-08-16T22:57:30Z",
        "updatedAt" : "2016-08-16T22:57:38Z",
        "lastEditedBy" : "629d8942-34f3-4c20-a8cc-f4de4d3f809a",
        "tags" : [
        ]
      }
    ],
    "commit" : "399b114c0470065326c8fd8b6be91279af84be00",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +158,162 @@    echo \"Copying ${job_results} to ${tmp_results} (attempt ${upload_attempt})\"\n    gsutil -q cat ${job_results} 2>&- |\\\n     sed -n 's/^\\({\"version\".*}\\),*/\\1,/p' >> ${tmp_results} || continue\n\n    break"
  },
  {
    "id" : "1c50311a-a1ec-4e1e-b901-68f99d7a5843",
    "prId" : 30385,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c46f8896-3ed6-48f2-af69-eb4645b51d72",
        "parentId" : null,
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "\"convenient\" that gsutil doesn't exit nonzero if the file doesn't exist.\n",
        "createdAt" : "2016-08-10T21:10:56Z",
        "updatedAt" : "2016-08-10T21:10:56Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "f9bc9b3d-aeab-480d-aff3-c01614e09312",
        "parentId" : "c46f8896-3ed6-48f2-af69-eb4645b51d72",
        "authorId" : "629d8942-34f3-4c20-a8cc-f4de4d3f809a",
        "body" : "Either way it's further piped into sed which is all 'set -e' cares about anyway. \n",
        "createdAt" : "2016-08-10T21:27:47Z",
        "updatedAt" : "2016-08-10T21:27:47Z",
        "lastEditedBy" : "629d8942-34f3-4c20-a8cc-f4de4d3f809a",
        "tags" : [
        ]
      },
      {
        "id" : "32a9f332-496a-465c-8ae7-9f2ccb0c81ce",
        "parentId" : "c46f8896-3ed6-48f2-af69-eb4645b51d72",
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "but we also set pipefail.\n",
        "createdAt" : "2016-08-10T21:41:53Z",
        "updatedAt" : "2016-08-10T21:41:53Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "fbfe2fc0-de64-4f80-aea1-a7c67352b186",
        "parentId" : "c46f8896-3ed6-48f2-af69-eb4645b51d72",
        "authorId" : "629d8942-34f3-4c20-a8cc-f4de4d3f809a",
        "body" : "Ah yes. We'll convenient then. \n",
        "createdAt" : "2016-08-10T22:26:21Z",
        "updatedAt" : "2016-08-10T22:26:21Z",
        "lastEditedBy" : "629d8942-34f3-4c20-a8cc-f4de4d3f809a",
        "tags" : [
        ]
      }
    ],
    "commit" : "c99a18e31ca5c7b1d673b24670a265e2886c9b4b",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +97,101 @@  else\n    # Last resort from the started.json\n    gsutil cat ${gcs_build_path}/started.json 2>/dev/null |\\\n     sed -n 's/ *\"version\": *\"\\([^\"]*\\)\",*/\\1/p'\n  fi"
  },
  {
    "id" : "f3dd9024-9c48-46d6-9c3a-f0062a7e37ea",
    "prId" : 23415,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2829c21a-2ff6-44df-b59b-ada9ecce2576",
        "parentId" : null,
        "authorId" : "c532215f-ed76-4a19-b066-8676d269eaf1",
        "body" : "I think this will break if `version` is unset. Previously I was setting it to `\"\"` before trying to discover the version.\n",
        "createdAt" : "2016-03-30T17:45:40Z",
        "updatedAt" : "2016-03-31T20:49:20Z",
        "lastEditedBy" : "c532215f-ed76-4a19-b066-8676d269eaf1",
        "tags" : [
        ]
      },
      {
        "id" : "037ca4c8-ab21-45d4-b1a5-13d8c1502355",
        "parentId" : "2829c21a-2ff6-44df-b59b-ada9ecce2576",
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "good catch. added `local version=\"\"`.\n",
        "createdAt" : "2016-03-31T20:46:04Z",
        "updatedAt" : "2016-03-31T20:49:20Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      }
    ],
    "commit" : "62b3587b629dbfe01b29e1bda2bb4bc72705585e",
    "line" : 82,
    "diffHunk" : "@@ -1,1 +74,78 @@  fi\n\n  if [[ -n \"${version}\" ]]; then\n    echo \"Found Kubernetes version: ${version}\"\n  else"
  },
  {
    "id" : "334c3290-33ca-40ab-89f3-e1fe6c18a48b",
    "prId" : 23415,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fb182377-fe02-4d61-bd11-e20f678197b8",
        "parentId" : null,
        "authorId" : "c532215f-ed76-4a19-b066-8676d269eaf1",
        "body" : "Which jobs will reach this point after this has settled?\n",
        "createdAt" : "2016-03-30T17:48:49Z",
        "updatedAt" : "2016-03-31T20:49:20Z",
        "lastEditedBy" : "c532215f-ed76-4a19-b066-8676d269eaf1",
        "tags" : [
        ]
      },
      {
        "id" : "c1150463-1a1d-42af-8b6b-8668d2079cac",
        "parentId" : "fb182377-fe02-4d61-bd11-e20f678197b8",
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "PR Jenkins will until we update it.\n",
        "createdAt" : "2016-03-31T20:43:27Z",
        "updatedAt" : "2016-03-31T20:49:20Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "54a37854-dcda-46c7-b79d-1eb586177792",
        "parentId" : "fb182377-fe02-4d61-bd11-e20f678197b8",
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "also there may be a race between this merging + the Jenkins job configs updating.\n",
        "createdAt" : "2016-03-31T20:44:33Z",
        "updatedAt" : "2016-03-31T20:49:20Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      }
    ],
    "commit" : "62b3587b629dbfe01b29e1bda2bb4bc72705585e",
    "line" : 137,
    "diffHunk" : "@@ -1,1 +129,133 @@  echo \"Called without JENKINS_BUILD_STARTED or JENKINS_BUILD_FINISHED set.\"\n  echo \"Assuming a legacy invocation.\"\n  upload_artifacts_and_build_result \"[UNSET]\"\nfi"
  },
  {
    "id" : "e6b0b8af-0a98-4b23-96d5-c3f2f539876c",
    "prId" : 14454,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "94ac672f-d31a-4a2c-890e-2d91a2fead45",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Can we retry uploading in case of failure (e.g. 3 times)? This will make it more robust.\n\nSame in other places.\n",
        "createdAt" : "2015-10-12T12:28:14Z",
        "updatedAt" : "2015-10-15T19:50:26Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "06a615b9-be89-444c-9301-e61e163145f1",
        "parentId" : "94ac672f-d31a-4a2c-890e-2d91a2fead45",
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "added retry loop. waiting for kubernetes-test-go to run again to see if it worked.\n",
        "createdAt" : "2015-10-14T22:45:51Z",
        "updatedAt" : "2015-10-15T19:50:26Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      }
    ],
    "commit" : "35db467216035099fe1fe7a406eae998eea71312",
    "line" : null,
    "diffHunk" : "@@ -1,1 +56,60 @@    echo \"Uploading to ${gcs_build_path} (attempt ${upload_attempt})\"\n    if [[ -d \"${artifacts_path}\" ]]; then\n      gsutil -m -q -o \"GSUtil:use_magicfile=True\" cp -a \"${gcs_acl}\" -r -c \\\n        -z log,txt,xml \"${artifacts_path}\" \"${gcs_build_path}/artifacts\" || continue\n    fi"
  },
  {
    "id" : "518db159-71d5-494c-a6ba-430505903f7e",
    "prId" : 14454,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8d81f520-ebe7-47fd-86dd-7710ec198ca2",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "is this references from somewhere?\n",
        "createdAt" : "2015-10-12T12:30:24Z",
        "updatedAt" : "2015-10-15T19:50:26Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "c13845e3-8646-4e73-9413-e54a2de295dc",
        "parentId" : "8d81f520-ebe7-47fd-86dd-7710ec198ca2",
        "authorId" : "ad0a3561-db60-47a9-b82f-ac613199f968",
        "body" : "Referenced in the trap command at the bottom. Jenkins will source this in and that trap command will execute it. See https://github.com/kubernetes/kubernetes/pull/14454#issuecomment-146390939 for more details.\n",
        "createdAt" : "2015-10-13T18:37:44Z",
        "updatedAt" : "2015-10-15T19:50:26Z",
        "lastEditedBy" : "ad0a3561-db60-47a9-b82f-ac613199f968",
        "tags" : [
        ]
      }
    ],
    "commit" : "35db467216035099fe1fe7a406eae998eea71312",
    "line" : 47,
    "diffHunk" : "@@ -1,1 +45,49 @@# We intentionally ignore gsutil errors since we don't want failed uploads to\n# fail the entire test run (#13548).\nfunction upload_logs_to_gcs() {\n  if [[ ! ${JENKINS_UPLOAD_TO_GCS:-} =~ ^[yY]$ ]]; then\n      return"
  }
]