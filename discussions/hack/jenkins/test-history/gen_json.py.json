[
  {
    "id" : "1f58d62c-4bd8-44a9-ad2a-4f27e76a1b36",
    "prId" : 22003,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "14170e42-aad5-4140-9407-4d140538fa65",
        "parentId" : null,
        "authorId" : "185604f6-2915-4313-8d6b-1d55757d0d22",
        "body" : "FYI, let's stick with % or .format consistently within the file (so please translate my previous % suggestions to .format)\n",
        "createdAt" : "2016-02-25T20:26:40Z",
        "updatedAt" : "2016-03-04T23:52:58Z",
        "lastEditedBy" : "185604f6-2915-4313-8d6b-1d55757d0d22",
        "tags" : [
        ]
      }
    ],
    "commit" : "633e12e1d4583ac7c2ee383547204b89141f60c4",
    "line" : null,
    "diffHunk" : "@@ -1,1 +184,188 @@        sys.exit(1)\n    server, prefix = sys.argv[1:]\n    print('Finding tests prefixed with {} at server {}'.format(prefix, server))\n    tests = get_tests(server, prefix)\n    with open('tests.json', 'w') as f:"
  },
  {
    "id" : "fb4f0350-fa45-49fd-b28a-bf6baa8ffd83",
    "prId" : 22003,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4ca9dd93-46e8-4b4a-8f1d-e2d38194338d",
        "parentId" : null,
        "authorId" : "185604f6-2915-4313-8d6b-1d55757d0d22",
        "body" : "Please import modules only (not classes)\n\nhttps://google.github.io/styleguide/pyguide.html?showone=Imports#Imports\n",
        "createdAt" : "2016-02-25T20:35:35Z",
        "updatedAt" : "2016-03-04T23:52:58Z",
        "lastEditedBy" : "185604f6-2915-4313-8d6b-1d55757d0d22",
        "tags" : [
        ]
      },
      {
        "id" : "53152d76-34fc-4905-bd53-0c8ee89a35ef",
        "parentId" : "4ca9dd93-46e8-4b4a-8f1d-e2d38194338d",
        "authorId" : "c532215f-ed76-4a19-b066-8676d269eaf1",
        "body" : "The class is `xml.etree.ElementTree.ElementTree`!\n",
        "createdAt" : "2016-03-04T23:54:06Z",
        "updatedAt" : "2016-03-04T23:54:06Z",
        "lastEditedBy" : "c532215f-ed76-4a19-b066-8676d269eaf1",
        "tags" : [
        ]
      }
    ],
    "commit" : "633e12e1d4583ac7c2ee383547204b89141f60c4",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +29,33 @@import time\nimport urllib2\nimport xml.etree.ElementTree as ET\nimport zlib\n"
  },
  {
    "id" : "5c63923d-8959-438b-8f8c-041f17ddd53a",
    "prId" : 22003,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7cfb6369-b89a-4351-bb82-9e560b258f1f",
        "parentId" : null,
        "authorId" : "185604f6-2915-4313-8d6b-1d55757d0d22",
        "body" : "should we exit 1 for this scenario? (aka it might be better to just let the exceptions bubble up (or at least traceback.format_exc() so we can find it in the logs)\n",
        "createdAt" : "2016-03-01T04:45:58Z",
        "updatedAt" : "2016-03-04T23:52:58Z",
        "lastEditedBy" : "185604f6-2915-4313-8d6b-1d55757d0d22",
        "tags" : [
        ]
      }
    ],
    "commit" : "633e12e1d4583ac7c2ee383547204b89141f60c4",
    "line" : null,
    "diffHunk" : "@@ -1,1 +117,121 @@        root = ET.fromstring(data)\n    except ET.ParseError:\n        return\n\n    for child in root:"
  },
  {
    "id" : "55ae297a-461e-4f25-9092-53837b46aa98",
    "prId" : 22003,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bdec1378-14ea-4427-80ec-314079aa1fdb",
        "parentId" : null,
        "authorId" : "185604f6-2915-4313-8d6b-1d55757d0d22",
        "body" : "FYI, I tend to favor basename(argv[0]) to avoid 80m character path\n",
        "createdAt" : "2016-03-01T04:47:43Z",
        "updatedAt" : "2016-03-04T23:52:58Z",
        "lastEditedBy" : "185604f6-2915-4313-8d6b-1d55757d0d22",
        "tags" : [
        ]
      }
    ],
    "commit" : "633e12e1d4583ac7c2ee383547204b89141f60c4",
    "line" : 183,
    "diffHunk" : "@@ -1,1 +181,185 @@if __name__ == '__main__':\n    if len(sys.argv) != 3:\n        print('Usage: {} <server> <prefix>'.format(sys.argv[0]))\n        sys.exit(1)\n    server, prefix = sys.argv[1:]"
  }
]