[
  {
    "id" : "d97bce6d-1daa-4442-a34d-66383d3bac74",
    "prId" : 30787,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "82c96142-24a1-46ea-b356-a91f069960c7",
        "parentId" : null,
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "👍 this is so much better.\n",
        "createdAt" : "2016-09-08T23:15:46Z",
        "updatedAt" : "2016-10-04T02:42:31Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      }
    ],
    "commit" : "d955f54918159630a331611672e3f226ce7bd5af",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +25,29 @@# If the output set is changed update that function.\n\n\"${KUBE_ROOT}/build/run.sh\" hack/update-generated-protobuf-dockerized.sh \"$@\"\n\n# ex: ts=2 sw=2 et filetype=sh"
  },
  {
    "id" : "319b9a7e-8fe7-4868-baab-0b8003ce0958",
    "prId" : 25525,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5d1a7e41-85d3-4f61-85aa-4df11ebcb04f",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "IIRC, this was added to avoid hash collisions with other builds. I think we still need it.\n",
        "createdAt" : "2016-06-09T07:55:06Z",
        "updatedAt" : "2016-07-03T07:42:20Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "0184e0ba-d47a-49fa-85bb-a5cbedc8d75f",
        "parentId" : "5d1a7e41-85d3-4f61-85aa-4df11ebcb04f",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "@smarterclayton This makes a hash that is never ever cleaned up.  I think this might be related to trying to build releases, which already run under docker?\n",
        "createdAt" : "2016-06-25T17:27:58Z",
        "updatedAt" : "2016-07-03T07:42:20Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "3050ab8e-5299-4702-bea5-a04ceee3f6fe",
        "parentId" : "5d1a7e41-85d3-4f61-85aa-4df11ebcb04f",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "thoughts on this?\n",
        "createdAt" : "2016-07-01T02:16:25Z",
        "updatedAt" : "2016-07-03T07:42:20Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "204aee0e-e747-4bae-8c2c-639a7c2b10bd",
        "parentId" : "5d1a7e41-85d3-4f61-85aa-4df11ebcb04f",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "I think this was copied from the code for releases at the time to get a\nunique value.  And possibly to avoid rebuilding if that was not necessary?\n\nOn Thu, Jun 30, 2016 at 7:16 PM, Tim Hockin notifications@github.com\nwrote:\n\n> In hack/update-generated-protobuf.sh\n> https://github.com/kubernetes/kubernetes/pull/25525#discussion_r69239288\n> :\n> \n> > @@ -31,19 +31,13 @@ function prereqs() {\n> >    fi\n> >    kube::build::ensure_docker_daemon_connectivity || return 1\n> > -  KUBE_ROOT_HASH=$(kube::build::short_hash \"${HOSTNAME:-}:${REPO_DIR:-${KUBE_ROOT}}/go-to-protobuf\")\n> > -  KUBE_ROOT_HASH=$(kube::build::short_hash \"${HOSTNAME:-}:${REPO_DIR:-${KUBE_ROOT}}\")\n> \n> thoughts on this?\n> \n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> https://github.com/kubernetes/kubernetes/pull/25525/files/70ad115beafcf9bd93386a66e1f8d5d6b9588331#r69239288,\n> or mute the thread\n> https://github.com/notifications/unsubscribe/ABG_p_Sn21LQt7HfHYt6I7iwK8413CX2ks5qRHiIgaJpZM4Icxfh\n> .\n",
        "createdAt" : "2016-07-01T16:08:11Z",
        "updatedAt" : "2016-07-03T07:42:20Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "94061850-a41b-4d20-ba54-e6a7fe20283f",
        "parentId" : "5d1a7e41-85d3-4f61-85aa-4df11ebcb04f",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "sooo....change is OK?  \n",
        "createdAt" : "2016-07-01T17:38:43Z",
        "updatedAt" : "2016-07-03T07:42:20Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "e0435b62-289d-4bff-ad99-c0d73d4c50fa",
        "parentId" : "5d1a7e41-85d3-4f61-85aa-4df11ebcb04f",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "I think so but wojtek-t wrote it all.  I confess I never use this\ncommand because it doesn't work with a remote docker.\n",
        "createdAt" : "2016-07-01T22:24:17Z",
        "updatedAt" : "2016-07-03T07:42:20Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "c0feaac4-ac94-4ed2-8a05-ade4a029e70b",
        "parentId" : "5d1a7e41-85d3-4f61-85aa-4df11ebcb04f",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Yeah - I think it's possible that I don't understand correctly the purpose of this hash.\nSo basically, I introduced this hash to avoid situation when running update-generated-protobuf.sh and some other script running on docker at the same time on the same machine will cause some conflicts.\nBasically, we are using the same hash here:\nhttps://github.com/kubernetes/kubernetes/blob/master/build/common.sh#L159\n\nbut now I can't find any code that may cause problems with that. So either something changed in the meantime or I misunderstood something or I missing something now :)\n\nAnyway - I think we can try with this :)\n",
        "createdAt" : "2016-07-04T06:17:37Z",
        "updatedAt" : "2016-07-04T06:17:37Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "55eaa380364bb94097b269186288a35b8589c3d7",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +32,36 @@  kube::build::ensure_docker_daemon_connectivity || return 1\n\n  KUBE_ROOT_HASH=$(kube::build::short_hash \"${HOSTNAME:-}:${REPO_DIR:-${KUBE_ROOT}}\")\n  KUBE_BUILD_IMAGE_TAG=\"build-${KUBE_ROOT_HASH}\"\n  KUBE_BUILD_IMAGE=\"${KUBE_BUILD_IMAGE_REPO}:${KUBE_BUILD_IMAGE_TAG}\""
  },
  {
    "id" : "53e3f1de-d427-4d71-842c-e4bb29b010d5",
    "prId" : 25354,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a359d40b-f00e-45a1-8841-08f48b8e1b1f",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "1) PLEASE add a comment explaining why the _obvious_ cleanup doesn't work.\n\n2) Please explain to me why it doesn't work?  From the error you pasted before it looks like a root/non-root issue.  I didn't have any such issue here - did someone just need to run 'make clean' or 'sudo make clean'.  Nothing in our build should actually require root.\n",
        "createdAt" : "2016-05-10T06:21:17Z",
        "updatedAt" : "2016-05-10T06:21:17Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "e46d5818-68c7-44c2-a29e-ebfd89af0eeb",
        "parentId" : "a359d40b-f00e-45a1-8841-08f48b8e1b1f",
        "authorId" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "body" : "@thockin see #25343 for explanation. \n",
        "createdAt" : "2016-05-10T06:42:48Z",
        "updatedAt" : "2016-05-10T06:42:48Z",
        "lastEditedBy" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "tags" : [
        ]
      },
      {
        "id" : "09a105a7-2c08-458a-b53b-4305cbbf8d17",
        "parentId" : "a359d40b-f00e-45a1-8841-08f48b8e1b1f",
        "authorId" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "body" : "In short, it's related to SELinux re-labeling happening to mount directory inside the container. All the directories/fies that are then created inside the container are owned by root, which causes problems @gmarek mentioned in his issue. The other possible approach is to build the binaries outside the container, then there's no problem (see my proposed solution for that: #25346.\n",
        "createdAt" : "2016-05-10T06:45:06Z",
        "updatedAt" : "2016-05-10T06:45:06Z",
        "lastEditedBy" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "tags" : [
        ]
      },
      {
        "id" : "7e177cf2-cd60-4a44-a8da-c12b7a1dbe8c",
        "parentId" : "a359d40b-f00e-45a1-8841-08f48b8e1b1f",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "Is it selinux or simply \"container runs as root\" ?\n\nOn Mon, May 9, 2016 at 11:45 PM, Maciej Szulik notifications@github.com\nwrote:\n\n> In hack/update-generated-protobuf.sh\n> https://github.com/kubernetes/kubernetes/pull/25354#discussion_r62619851\n> :\n> \n> > @@ -37,7 +37,13 @@ function prereqs() {\n> >    KUBE_BUILD_CONTAINER_NAME=\"kube-build-${KUBE_ROOT_HASH}\"\n> >    KUBE_BUILD_DATA_CONTAINER_NAME=\"kube-build-data-${KUBE_ROOT_HASH}\"\n> >    DOCKER_MOUNT_ARGS=(\n> > -    --volume \"${REPO_DIR:-${KUBE_ROOT}}:/go/src/${KUBE_GO_PACKAGE}\"\n> > -    --volume \"${REPO_DIR:-${KUBE_ROOT}}/cluster:/go/src/${KUBE_GO_PACKAGE}/cluster\"\n> \n> In short, it's related to SELinux re-labeling happening to mount directory\n> inside the container. All the directories/fies that are then created inside\n> the container are owned by root, which causes problems @gmarek\n> https://github.com/gmarek mentioned in his issue. The other possible\n> approach is to build the binaries outside the container, then there's no\n> problem (see my proposed solution for that: #25346\n> https://github.com/kubernetes/kubernetes/pull/25346.\n> \n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly or view it on GitHub\n> https://github.com/kubernetes/kubernetes/pull/25354/files/9a8e4f69cd707441ea9f7996a983f9e30a30a5ce#r62619851\n",
        "createdAt" : "2016-05-10T06:47:35Z",
        "updatedAt" : "2016-05-10T06:47:35Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "9d763005-b6c0-46d4-8951-b441f651de69",
        "parentId" : "a359d40b-f00e-45a1-8841-08f48b8e1b1f",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "The latter.\n\nThe problem is basically, that we want to avoid mounting the k8s.io/kubernetes/_output directory. If there is an easier way to mount all but this one, then it would be preferred. But I don't know how to do it.\n",
        "createdAt" : "2016-05-10T07:10:06Z",
        "updatedAt" : "2016-05-10T07:10:06Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "525dd680-5001-4a1f-8f67-630dc1462e07",
        "parentId" : "a359d40b-f00e-45a1-8841-08f48b8e1b1f",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "There is not a way to all-but-one.  But we should just make all the tooling\nnot run as root in the first place.  I tried it, it's a little more than\ntrivial.  First PR is in flight.  Not sure how much time I'll get...\n\nOn Tue, May 10, 2016 at 12:10 AM, Wojciech Tyczynski <\nnotifications@github.com> wrote:\n\n> In hack/update-generated-protobuf.sh\n> https://github.com/kubernetes/kubernetes/pull/25354#discussion_r62621882\n> :\n> \n> > @@ -37,7 +37,13 @@ function prereqs() {\n> >    KUBE_BUILD_CONTAINER_NAME=\"kube-build-${KUBE_ROOT_HASH}\"\n> >    KUBE_BUILD_DATA_CONTAINER_NAME=\"kube-build-data-${KUBE_ROOT_HASH}\"\n> >    DOCKER_MOUNT_ARGS=(\n> > -    --volume \"${REPO_DIR:-${KUBE_ROOT}}:/go/src/${KUBE_GO_PACKAGE}\"\n> > -    --volume \"${REPO_DIR:-${KUBE_ROOT}}/cluster:/go/src/${KUBE_GO_PACKAGE}/cluster\"\n> \n> The latter.\n> \n> The problem is basically, that we want to avoid mounting the\n> k8s.io/kubernetes/_output directory. If there is an easier way to mount\n> all but this one, then it would be preferred. But I don't know how to do it.\n> \n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly or view it on GitHub\n> https://github.com/kubernetes/kubernetes/pull/25354/files/9a8e4f69cd707441ea9f7996a983f9e30a30a5ce#r62621882\n",
        "createdAt" : "2016-05-10T07:13:10Z",
        "updatedAt" : "2016-05-10T07:13:10Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "1a9fa82d-2a22-4420-9742-1aaa20919dee",
        "parentId" : "a359d40b-f00e-45a1-8841-08f48b8e1b1f",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Yeah - that would be great. (And would fix this problem). Thanks!\n",
        "createdAt" : "2016-05-10T08:09:59Z",
        "updatedAt" : "2016-05-10T08:09:59Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "9a8e4f69cd707441ea9f7996a983f9e30a30a5ce",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +38,42 @@  KUBE_BUILD_DATA_CONTAINER_NAME=\"kube-build-data-${KUBE_ROOT_HASH}\"\n  DOCKER_MOUNT_ARGS=(\n    --volume \"${REPO_DIR:-${KUBE_ROOT}}/cluster:/go/src/${KUBE_GO_PACKAGE}/cluster\"\n    --volume \"${REPO_DIR:-${KUBE_ROOT}}/cmd:/go/src/${KUBE_GO_PACKAGE}/cmd\"\n    --volume \"${REPO_DIR:-${KUBE_ROOT}}/vendor:/go/src/${KUBE_GO_PACKAGE}/vendor\""
  },
  {
    "id" : "cbd2cddb-b0e2-4b49-ac9e-b0091ef8179e",
    "prId" : 22738,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "aae6b7d5-c135-4516-8b44-b578e6d717ce",
        "parentId" : null,
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Why do we need these if we're doing a docker build?\n",
        "createdAt" : "2016-03-14T17:16:40Z",
        "updatedAt" : "2016-03-14T17:16:40Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "5770dd36-2885-44dd-a692-a603f9b87d26",
        "parentId" : "aae6b7d5-c135-4516-8b44-b578e6d717ce",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Basically I want to reuse the existing docker_build commands (it's already tested, works on different platforms etc.) And this requires all of those to have this working.\n",
        "createdAt" : "2016-03-14T18:00:37Z",
        "updatedAt" : "2016-03-14T18:00:37Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "58291fd6-5fe9-4572-bf8c-7d6a19f12145",
        "parentId" : "aae6b7d5-c135-4516-8b44-b578e6d717ce",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Ok.\n",
        "createdAt" : "2016-03-14T18:05:19Z",
        "updatedAt" : "2016-03-14T18:05:19Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "4c490314-a0d1-40cf-8307-ea2fd9c97414",
        "parentId" : "aae6b7d5-c135-4516-8b44-b578e6d717ce",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "One problem with our docker builds (not your problem to fix here) is that builds don't work from a local env to a remote docker vm.  The volumes approach limits us - it would be better to do a pure docker build from the client than to do mounting.  I'll open a separate issue for that.\n",
        "createdAt" : "2016-03-14T18:51:57Z",
        "updatedAt" : "2016-03-14T18:51:57Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "52798beef2447c9fb3bed9e54fb6b67dcc9ea7e3",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +37,41 @@  KUBE_BUILD_CONTAINER_NAME=\"kube-build-${KUBE_ROOT_HASH}\"\n  KUBE_BUILD_DATA_CONTAINER_NAME=\"kube-build-data-${KUBE_ROOT_HASH}\"\n  DOCKER_MOUNT_ARGS=(\n    --volume \"${KUBE_ROOT}:/go/src/${KUBE_GO_PACKAGE}\"\n    --volume /etc/localtime:/etc/localtime:ro"
  }
]