[
  {
    "id" : "f547e437-c8f9-4ae5-b8aa-b10610245a50",
    "prId" : 76812,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/76812#pullrequestreview-229904210",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "27b2f4d1-d4e6-44df-90b0-318e2f5fe690",
        "parentId" : null,
        "authorId" : "185604f6-2915-4313-8d6b-1d55757d0d22",
        "body" : "`if ! args=$(getopt -o ...); then` (does this work?)",
        "createdAt" : "2019-04-24T05:05:03Z",
        "updatedAt" : "2019-04-24T05:05:23Z",
        "lastEditedBy" : "185604f6-2915-4313-8d6b-1d55757d0d22",
        "tags" : [
        ]
      },
      {
        "id" : "dedc50c0-e809-472f-9a3a-abfed27b1d5e",
        "parentId" : "27b2f4d1-d4e6-44df-90b0-318e2f5fe690",
        "authorId" : "e7b8fd7e-f93b-44b6-b6d0-4331207d901c",
        "body" : "I think that should work too, but this already can work here.",
        "createdAt" : "2019-04-24T05:26:50Z",
        "updatedAt" : "2019-04-24T05:26:50Z",
        "lastEditedBy" : "e7b8fd7e-f93b-44b6-b6d0-4331207d901c",
        "tags" : [
        ]
      }
    ],
    "commit" : "14775c4057b3f7e930338f08f9af25f5d36a5612",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +66,70 @@\nargs=$(getopt -o s:mho:k:c -l server:,master,heapster,output:,kubelet:,scheduler,controller-manager,help,inuse-space,inuse-objects,alloc-space,alloc-objects,cpu,kubelet-binary:,master-binary:,scheduler-binary:,controller-manager-binary:,scheduler-port:,controller-manager-port: -- \"$@\")\nif [[ $? ]]; then\n  >&2 echo \"Error in getopt\"\n  exit 1"
  },
  {
    "id" : "1829a9ac-8679-4c88-b449-ec5015794930",
    "prId" : 18150,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "45b84069-d474-4712-80d7-d414591a350d",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "shouldn't flag be mem_pprof_flags?\n",
        "createdAt" : "2015-12-03T13:39:42Z",
        "updatedAt" : "2015-12-04T10:25:53Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "6ddfe2e1-6a1e-4687-9f66-4062aa72e5d3",
        "parentId" : "45b84069-d474-4712-80d7-d414591a350d",
        "authorId" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "body" : "I believe that pprof can grab only one profile at a time, so we need to iterate over \"flags\" (really - memory profiler operation kind) and do it one by one. I can push iteration outside of this function if you think it'll be better.\n",
        "createdAt" : "2015-12-03T16:41:43Z",
        "updatedAt" : "2015-12-04T10:25:53Z",
        "lastEditedBy" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "tags" : [
        ]
      },
      {
        "id" : "244631c8-5459-4390-89dd-dc11f7c730cb",
        "parentId" : "45b84069-d474-4712-80d7-d414591a350d",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "hmm - so can you given an example of flags that you may want to pass here and that you can't pass all of them to a single pprof call?\n",
        "createdAt" : "2015-12-03T16:56:31Z",
        "updatedAt" : "2015-12-04T10:25:53Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "6e236c84-ef34-4025-9a21-d6a7d395d829",
        "parentId" : "45b84069-d474-4712-80d7-d414591a350d",
        "authorId" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "body" : "--inuse_space, --inuse_objects\n",
        "createdAt" : "2015-12-04T09:17:26Z",
        "updatedAt" : "2015-12-04T10:25:53Z",
        "lastEditedBy" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "tags" : [
        ]
      },
      {
        "id" : "b0a8f110-5d30-4931-9a9a-5fe09c02cbb3",
        "parentId" : "45b84069-d474-4712-80d7-d414591a350d",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Whatever those are :)\nAnyway - can you please add a comment about it (also giving this example)?\n",
        "createdAt" : "2015-12-04T09:23:46Z",
        "updatedAt" : "2015-12-04T10:25:53Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "b26a9ac1-ee63-42db-be12-727a783ee51c",
        "parentId" : "45b84069-d474-4712-80d7-d414591a350d",
        "authorId" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "body" : "Done.\n",
        "createdAt" : "2015-12-04T09:35:12Z",
        "updatedAt" : "2015-12-04T10:25:53Z",
        "lastEditedBy" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "tags" : [
        ]
      }
    ],
    "commit" : "9d11195508c30881804f9a103c9dc874e8209a6e",
    "line" : null,
    "diffHunk" : "@@ -1,1 +41,45 @@        # kinds.\n        for flag in ${mem_pprof_flags}; do\n          go tool pprof \"-${flag}\" \"-pdf\" \"${binary}\" \"http://localhost:${tunnel_port}/${path}/heap\" > \"${output_prefix}-${profile}-${flag}-profile-${timestamp}.pdf\"\n        done\n        ;;"
  },
  {
    "id" : "cd04332e-f7e7-4747-bc08-ef7ede1a73c9",
    "prId" : 15943,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "630dbd2c-db8f-478e-8ce2-f03513a3e32f",
        "parentId" : null,
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "at least set nounset? errexit and pipefail may be good ideas, too\n",
        "createdAt" : "2015-10-21T00:45:20Z",
        "updatedAt" : "2015-10-27T08:42:37Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "5382c693-1633-4f07-8a5e-ab989f2d846d",
        "parentId" : "630dbd2c-db8f-478e-8ce2-f03513a3e32f",
        "authorId" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "body" : "Done.\n",
        "createdAt" : "2015-10-21T07:56:48Z",
        "updatedAt" : "2015-10-27T08:42:37Z",
        "lastEditedBy" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "tags" : [
        ]
      }
    ],
    "commit" : "a087a418c151990cdd7830cc4b54cd998dc8d6b7",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +14,18 @@# See the License for the specific language governing permissions and\n# limitations under the License.\n\nset -o errexit\nset -o nounset"
  },
  {
    "id" : "94fd3abe-ae6a-4869-8a4c-9031e2fdc4b4",
    "prId" : 15943,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7394eed4-4c67-44c7-94ca-2931bce86845",
        "parentId" : null,
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "is it strictly necessary to use cmdline arguments here? we avoid a lot of the messy command-line parsing in most of our shell scripts by just using environment variables...\n",
        "createdAt" : "2015-10-21T00:56:14Z",
        "updatedAt" : "2015-10-27T08:42:37Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "2f139989-2a55-423d-bd5b-1a5f3fa761db",
        "parentId" : "7394eed4-4c67-44c7-94ca-2931bce86845",
        "authorId" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "body" : "The difference is that I don't think that preserving state between runs makes a lot of sense here.\n",
        "createdAt" : "2015-10-21T08:51:21Z",
        "updatedAt" : "2015-10-27T08:42:37Z",
        "lastEditedBy" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "tags" : [
        ]
      }
    ],
    "commit" : "a087a418c151990cdd7830cc4b54cd998dc8d6b7",
    "line" : null,
    "diffHunk" : "@@ -1,1 +41,45 @@eval set -- \"${args}\"\n\nwhile true; do\n  case $1 in\n    -s|--server)"
  },
  {
    "id" : "aebb6c23-c952-4042-9819-4ea7375c1341",
    "prId" : 15943,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5ce306c5-fe7f-4c48-b602-3f8db30bf8b1",
        "parentId" : null,
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "maybe handle bad flags too?\n",
        "createdAt" : "2015-10-21T01:11:30Z",
        "updatedAt" : "2015-10-27T08:42:37Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "47029aca-8e49-4883-9678-34b01d5e3ed8",
        "parentId" : "5ce306c5-fe7f-4c48-b602-3f8db30bf8b1",
        "authorId" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "body" : "It's done by getopt.\n",
        "createdAt" : "2015-10-21T08:56:45Z",
        "updatedAt" : "2015-10-27T08:42:37Z",
        "lastEditedBy" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "tags" : [
        ]
      },
      {
        "id" : "0bda395a-ab44-43d4-b300-617fbe90bef9",
        "parentId" : "5ce306c5-fe7f-4c48-b602-3f8db30bf8b1",
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "what happens if the args to getopt don't match the args in the case statement?\n",
        "createdAt" : "2015-10-26T08:32:22Z",
        "updatedAt" : "2015-10-27T08:42:37Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "11a771c2-a145-4be9-b3e0-e0a94c12645f",
        "parentId" : "5ce306c5-fe7f-4c48-b602-3f8db30bf8b1",
        "authorId" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "body" : "As long as cases statements match declared flags, nothing bad - getopt will fail with appropriate error. If some flag isn't handled case will break (which I believe it's also good).\n",
        "createdAt" : "2015-10-26T08:59:36Z",
        "updatedAt" : "2015-10-27T08:42:37Z",
        "lastEditedBy" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "tags" : [
        ]
      }
    ],
    "commit" : "a087a418c151990cdd7830cc4b54cd998dc8d6b7",
    "line" : 114,
    "diffHunk" : "@@ -1,1 +112,116 @@      break;\n      ;;\n  esac\ndone\n"
  },
  {
    "id" : "f2db7d5f-c68e-42b5-8383-39f40067dd5e",
    "prId" : 15943,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4c26037d-5f29-447f-b537-bd9a0cdf3130",
        "parentId" : null,
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "for whatever reason I think we prefer curl to wget?\n",
        "createdAt" : "2015-10-26T08:38:27Z",
        "updatedAt" : "2015-10-27T08:42:37Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "d6c3c04c-7b89-4c23-bfcb-559e1584a587",
        "parentId" : "4c26037d-5f29-447f-b537-bd9a0cdf3130",
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "actually, I guess we use both. never mind.\n",
        "createdAt" : "2015-10-26T08:39:27Z",
        "updatedAt" : "2015-10-27T08:42:37Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      }
    ],
    "commit" : "a087a418c151990cdd7830cc4b54cd998dc8d6b7",
    "line" : 156,
    "diffHunk" : "@@ -1,1 +154,158 @@    heapster)\n      rm heapster\n      wget https://github.com/kubernetes/heapster/releases/download/${HEAPSTER_VERSION}/heapster\n      kube::util::trap_add 'rm -f heapster' EXIT\n      kube::util::trap_add 'rm -f heapster' SIGTERM"
  }
]