[
  {
    "id" : "6662baab-6dc7-4bf9-85d1-dff6d01c5ce5",
    "prId" : 100569,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/100569#pullrequestreview-622624814",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a3da90d0-c84f-4a20-9b6a-238e7e182baa",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "for the curious, this is because the JWKS URL published in the OIDC discovery doc defaults to using the `--external-hostname`, expecting that to be generally resolveable.\r\n\r\nlocal-up-cluster sets `--external-hostname=localhost` which is... not generally resolveable.\r\n\r\n`--service-account-jwks-uri` gives the cluster deployer complete control over the JWKS hostname and can be used to alter the address used.",
        "createdAt" : "2021-03-25T21:17:52Z",
        "updatedAt" : "2021-03-25T21:19:10Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "9b791853-133c-43e0-84a8-89a47725a0c2",
        "parentId" : "a3da90d0-c84f-4a20-9b6a-238e7e182baa",
        "authorId" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "body" : "neat",
        "createdAt" : "2021-03-27T06:30:03Z",
        "updatedAt" : "2021-03-27T06:30:03Z",
        "lastEditedBy" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "tags" : [
        ]
      }
    ],
    "commit" : "91ca1b12bb2cb4936893b45a155350fc3254525c",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +571,575 @@      --service-account-lookup=\"${SERVICE_ACCOUNT_LOOKUP}\" \\\n      --service-account-issuer=\"https://kubernetes.default.svc\" \\\n      --service-account-jwks-uri=\"https://kubernetes.default.svc/openid/v1/jwks\" \\\n      --service-account-signing-key-file=\"${SERVICE_ACCOUNT_KEY}\" \\\n      --enable-admission-plugins=\"${ENABLE_ADMISSION_PLUGINS}\" \\"
  },
  {
    "id" : "555c03b4-ca95-4437-bbb6-864997ea53c5",
    "prId" : 91504,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/91504#pullrequestreview-419566432",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "784215fc-0158-423b-99a3-1067f6ba250c",
        "parentId" : null,
        "authorId" : "275dd783-53c3-4fed-8434-96ed6a2e0331",
        "body" : "Do we need to check if deployment is started successfully before printing out this message?",
        "createdAt" : "2020-05-27T18:43:08Z",
        "updatedAt" : "2020-06-02T14:16:03Z",
        "lastEditedBy" : "275dd783-53c3-4fed-8434-96ed6a2e0331",
        "tags" : [
        ]
      },
      {
        "id" : "c4ad38a4-9d3d-4ffc-a4e9-e41659a83506",
        "parentId" : "784215fc-0158-423b-99a3-1067f6ba250c",
        "authorId" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "body" : "I was wondering the same but then followed the example set by the dashboard installation which also doesn't wait.\r\n",
        "createdAt" : "2020-05-27T20:01:21Z",
        "updatedAt" : "2020-06-02T14:16:03Z",
        "lastEditedBy" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "tags" : [
        ]
      },
      {
        "id" : "5c3fc527-6674-4935-ad75-e84ac582369a",
        "parentId" : "784215fc-0158-423b-99a3-1067f6ba250c",
        "authorId" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "body" : "I suppose \"deployed\" really means just \"deployed\" and not also \"running\".",
        "createdAt" : "2020-05-27T20:02:02Z",
        "updatedAt" : "2020-06-02T14:16:03Z",
        "lastEditedBy" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "tags" : [
        ]
      }
    ],
    "commit" : "2a31764ba7d84c77b119b97331c17e78fc7d9285",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +929,933 @@        ${KUBECTL} --kubeconfig=\"${CERT_DIR}/admin.kubeconfig\" apply -f \"${KUBE_ROOT}/cluster/addons/volumesnapshots/volume-snapshot-controller/volume-snapshot-controller-deployment.yaml\"\n\n        echo \"Kubernetes-CSI snapshotter successfully deployed.\"\n    fi\n}"
  },
  {
    "id" : "e52b5cb3-8929-4372-a4a8-f1b96e7cad49",
    "prId" : 86870,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/86870#pullrequestreview-338993003",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "48ec63ab-ea28-4d3c-923c-2c06576e8846",
        "parentId" : null,
        "authorId" : "ae15cfb8-5436-4398-94e0-d443e413b257",
        "body" : "Hi @dims \r\nMaybe we shouldn't set a default value here. We didn't change anything here.",
        "createdAt" : "2020-01-07T01:45:59Z",
        "updatedAt" : "2020-01-07T01:45:59Z",
        "lastEditedBy" : "ae15cfb8-5436-4398-94e0-d443e413b257",
        "tags" : [
        ]
      }
    ],
    "commit" : "eb074761bc287f6ba9b0bd44b512c0293acd6526",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +77,81 @@CLOUD_PROVIDER=${CLOUD_PROVIDER:-\"\"}\nCLOUD_CONFIG=${CLOUD_CONFIG:-\"\"}\nEXTERNAL_CLOUD_VOLUME_PLUGIN=${EXTERNAL_CLOUD_VOLUME_PLUGIN:-\"${CLOUD_PROVIDER}\"}\nFEATURE_GATES=${FEATURE_GATES:-\"AllAlpha=false\"}\nSTORAGE_BACKEND=${STORAGE_BACKEND:-\"etcd3\"}"
  },
  {
    "id" : "cd459f3b-62d9-4ec3-8914-5b91bb1f6bef",
    "prId" : 79186,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/79186#pullrequestreview-251960471",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "560896c9-bfaf-451b-bc40-581c1f21d988",
        "parentId" : null,
        "authorId" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "body" : "This should just work but FYI @dims 😅",
        "createdAt" : "2019-06-19T20:43:33Z",
        "updatedAt" : "2019-06-20T00:25:26Z",
        "lastEditedBy" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "tags" : [
        ]
      }
    ],
    "commit" : "5628b6b50ef68964fb0c2ef6eacc2349981df59d",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +350,354 @@\n  # Check if the API server is still running\n  [[ -n \"${APISERVER_PID-}\" ]] && kube::util::read-array APISERVER_PIDS < <(pgrep -P \"${APISERVER_PID}\" ; ps -o pid= -p \"${APISERVER_PID}\")\n  [[ -n \"${APISERVER_PIDS-}\" ]] && sudo kill \"${APISERVER_PIDS[@]}\" 2>/dev/null\n"
  },
  {
    "id" : "0987db64-9d66-4873-9d64-297e0f387667",
    "prId" : 76050,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/76050#pullrequestreview-221885003",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0fb79e45-e4cc-4e4f-a9ad-af0d18f94722",
        "parentId" : null,
        "authorId" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "body" : "we should not have inline shellcheck disable comments :/\r\nthis lint also catches legitimate bugs",
        "createdAt" : "2019-04-02T20:23:12Z",
        "updatedAt" : "2019-04-02T20:23:12Z",
        "lastEditedBy" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "tags" : [
        ]
      },
      {
        "id" : "1ff536b4-6aaa-406b-aa8b-3aeef989e8a2",
        "parentId" : "0fb79e45-e4cc-4e4f-a9ad-af0d18f94722",
        "authorId" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "body" : "https://github.com/koalaman/shellcheck/wiki/SC2206",
        "createdAt" : "2019-04-02T20:23:36Z",
        "updatedAt" : "2019-04-02T20:23:36Z",
        "lastEditedBy" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "tags" : [
        ]
      },
      {
        "id" : "61787078-e752-4ae1-ac65-6e47570a3ad2",
        "parentId" : "0fb79e45-e4cc-4e4f-a9ad-af0d18f94722",
        "authorId" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "body" : "ack, i'll get rid of it when i get a chance",
        "createdAt" : "2019-04-02T20:24:29Z",
        "updatedAt" : "2019-04-02T20:24:29Z",
        "lastEditedBy" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "tags" : [
        ]
      },
      {
        "id" : "bbb84bbc-8e4b-43ed-9b15-40319dcd9020",
        "parentId" : "0fb79e45-e4cc-4e4f-a9ad-af0d18f94722",
        "authorId" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "body" : "will come back to this one later.",
        "createdAt" : "2019-04-02T20:28:37Z",
        "updatedAt" : "2019-04-02T20:28:38Z",
        "lastEditedBy" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "tags" : [
        ]
      }
    ],
    "commit" : "1b953aaa5904c0713217210376422932d59dad2c",
    "line" : 2,
    "diffHunk" : "@@ -1,1 +749,753 @@    fi\n\n    # shellcheck disable=SC2206\n    all_kubelet_flags=(\n      ${priv_arg}"
  },
  {
    "id" : "303e0e55-4445-4ad8-abd4-1394b18ed486",
    "prId" : 76050,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/76050#pullrequestreview-221958002",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5579c2e0-aec7-41b7-9b92-4a11e08e56fe",
        "parentId" : null,
        "authorId" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "body" : "is this a single flag when set?",
        "createdAt" : "2019-04-02T20:23:19Z",
        "updatedAt" : "2019-04-02T20:23:19Z",
        "lastEditedBy" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "tags" : [
        ]
      },
      {
        "id" : "a9fd5722-e75e-4a04-8a6d-93a6f007980d",
        "parentId" : "5579c2e0-aec7-41b7-9b92-4a11e08e56fe",
        "authorId" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "body" : "yes it is https://cs.k8s.io/?q=priv_arg&i=nope&files=&repos=kubernetes/kubernetes",
        "createdAt" : "2019-04-02T20:25:18Z",
        "updatedAt" : "2019-04-02T20:25:18Z",
        "lastEditedBy" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "tags" : [
        ]
      },
      {
        "id" : "03e783fc-40d0-4dad-9231-665f793b1e7a",
        "parentId" : "5579c2e0-aec7-41b7-9b92-4a11e08e56fe",
        "authorId" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "body" : "`${priv_arg:+\"$priv_arg\"}` will avoid splitting issues and _also_ not become an empty string",
        "createdAt" : "2019-04-02T20:28:14Z",
        "updatedAt" : "2019-04-02T20:28:14Z",
        "lastEditedBy" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "tags" : [
        ]
      },
      {
        "id" : "c30ae253-d35d-4e0f-893b-040aac5203ec",
        "parentId" : "5579c2e0-aec7-41b7-9b92-4a11e08e56fe",
        "authorId" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "body" : "@caesarxuchao let's do `${priv_arg:+\"$priv_arg\"}`, this will expand to a single flag (shell word / array entry) if set to a non-empty string and otherwise not expand to anything.",
        "createdAt" : "2019-04-03T00:12:37Z",
        "updatedAt" : "2019-04-03T00:12:38Z",
        "lastEditedBy" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "tags" : [
        ]
      }
    ],
    "commit" : "1b953aaa5904c0713217210376422932d59dad2c",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +751,755 @@    # shellcheck disable=SC2206\n    all_kubelet_flags=(\n      ${priv_arg}\n      \"--v=${LOG_LEVEL}\"\n      \"--vmodule=${LOG_SPEC}\""
  },
  {
    "id" : "8e1b3450-8a71-4817-b2b1-65122bedd95b",
    "prId" : 75662,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/75662#pullrequestreview-218178693",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "494dd6dd-c208-4e8b-ba50-dad0469a618c",
        "parentId" : null,
        "authorId" : "dcab10bd-e585-4065-b62c-ab73b7a208ac",
        "body" : "In ./hack/local-up-cluster.sh line 164:\r\n  local hyperkube_path=$(kube::util::find-binary \"hyperkube\")\r\n        ^------------^ SC2155: Declare and assign separately to avoid masking return values.",
        "createdAt" : "2019-03-25T07:46:50Z",
        "updatedAt" : "2019-03-25T07:46:50Z",
        "lastEditedBy" : "dcab10bd-e585-4065-b62c-ab73b7a208ac",
        "tags" : [
        ]
      }
    ],
    "commit" : "8cc3718e690c140ee9ffeb3a2b8d48c3e1510f6c",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +163,167 @@function guess_built_binary_path {\n  local hyperkube_path\n  hyperkube_path=$(kube::util::find-binary \"hyperkube\")\n  if [[ -z \"${hyperkube_path}\" ]]; then\n    return"
  },
  {
    "id" : "7b922396-2a1c-4c09-a8ab-7c4a0c8ac6a3",
    "prId" : 75662,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/75662#pullrequestreview-218179328",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b881d4ec-428a-47af-a71c-cfab69c71f16",
        "parentId" : null,
        "authorId" : "dcab10bd-e585-4065-b62c-ab73b7a208ac",
        "body" : "In ./hack/local-up-cluster.sh line 270:\r\n        if [ ! $? -eq 0 ]; then\r\n               ^-- SC2181: Check exit code directly with e.g. 'if mycmd;', not indirectly with $?.",
        "createdAt" : "2019-03-25T07:48:45Z",
        "updatedAt" : "2019-03-25T07:48:45Z",
        "lastEditedBy" : "dcab10bd-e585-4065-b62c-ab73b7a208ac",
        "tags" : [
        ]
      }
    ],
    "commit" : "8cc3718e690c140ee9ffeb3a2b8d48c3e1510f6c",
    "line" : 43,
    "diffHunk" : "@@ -1,1 +268,272 @@    # this can happen if you run local-up-cluster.sh twice and kill etcd in between.\n    if [[ \"${API_PORT}\" -gt \"0\" ]]; then\n        if ! curl --silent -g \"${API_HOST}:${API_PORT}\" ; then\n            echo \"API SERVER insecure port is free, proceeding...\"\n        else"
  },
  {
    "id" : "68a8a92f-1d27-42ac-8629-47229f94ad94",
    "prId" : 75662,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/75662#pullrequestreview-218179609",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "25874077-4369-4f30-b98d-e3a2db0f3189",
        "parentId" : null,
        "authorId" : "dcab10bd-e585-4065-b62c-ab73b7a208ac",
        "body" : "In ./hack/local-up-cluster.sh line 279:\r\n    if [ ! $? -eq 0 ]; then\r\n           ^-- SC2181: Check exit code directly with e.g. 'if mycmd;', not indirectly with $?.",
        "createdAt" : "2019-03-25T07:49:43Z",
        "updatedAt" : "2019-03-25T07:49:44Z",
        "lastEditedBy" : "dcab10bd-e585-4065-b62c-ab73b7a208ac",
        "tags" : [
        ]
      }
    ],
    "commit" : "8cc3718e690c140ee9ffeb3a2b8d48c3e1510f6c",
    "line" : 53,
    "diffHunk" : "@@ -1,1 +276,280 @@    fi\n\n    if ! curl --silent -k -g \"${API_HOST}:${API_SECURE_PORT}\" ; then\n        echo \"API SERVER secure port is free, proceeding...\"\n    else"
  },
  {
    "id" : "2d54dd3a-79c5-47b5-9986-fdaeeb4ca555",
    "prId" : 75662,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/75662#pullrequestreview-218181092",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4a1b2ff1-5ffb-4779-aa47-7cbd7c94ff99",
        "parentId" : null,
        "authorId" : "dcab10bd-e585-4065-b62c-ab73b7a208ac",
        "body" : "In ./hack/local-up-cluster.sh line 427:\r\n    ETCD_LOGFILE=${LOG_DIR}/etcd.log\r\n    ^----------^ SC2034: ETCD_LOGFILE appears unused. Verify use (or export if used externally).",
        "createdAt" : "2019-03-25T07:54:29Z",
        "updatedAt" : "2019-03-25T07:54:29Z",
        "lastEditedBy" : "dcab10bd-e585-4065-b62c-ab73b7a208ac",
        "tags" : [
        ]
      }
    ],
    "commit" : "8cc3718e690c140ee9ffeb3a2b8d48c3e1510f6c",
    "line" : 148,
    "diffHunk" : "@@ -1,1 +424,428 @@function start_etcd {\n    echo \"Starting etcd\"\n    export ETCD_LOGFILE=${LOG_DIR}/etcd.log\n    kube::etcd::start\n}"
  },
  {
    "id" : "d957e72b-5f45-4a74-8e83-8ee6944961fa",
    "prId" : 75662,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/75662#pullrequestreview-218182446",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f2d148aa-90d6-4cb5-98b7-12f47ce726f1",
        "parentId" : null,
        "authorId" : "dcab10bd-e585-4065-b62c-ab73b7a208ac",
        "body" : "To make the following fixes work correctly:\r\n\r\nIn ./hack/local-up-cluster.sh line 556:\r\n    ${CONTROLPLANE_SUDO} \"${GO_OUT}/hyperkube\" apiserver ${authorizer_arg} ${priv_arg} ${runtime_config} \\\r\n                                                         ^---------------^ SC2086: Double quote to prevent globbing and word splitting.",
        "createdAt" : "2019-03-25T07:58:36Z",
        "updatedAt" : "2019-03-25T07:58:36Z",
        "lastEditedBy" : "dcab10bd-e585-4065-b62c-ab73b7a208ac",
        "tags" : [
        ]
      }
    ],
    "commit" : "8cc3718e690c140ee9ffeb3a2b8d48c3e1510f6c",
    "line" : 193,
    "diffHunk" : "@@ -1,1 +505,509 @@    authorizer_arg=\"\"\n    if [[ -n \"${AUTHORIZATION_MODE}\" ]]; then\n      authorizer_arg=\"--authorization-mode=${AUTHORIZATION_MODE}\"\n    fi\n    priv_arg=\"\""
  },
  {
    "id" : "d211ea5b-b640-4d3a-b3d4-8c2ef9cc6759",
    "prId" : 75662,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/75662#pullrequestreview-218182615",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "37911047-fd07-487a-b10d-913958b214ba",
        "parentId" : null,
        "authorId" : "dcab10bd-e585-4065-b62c-ab73b7a208ac",
        "body" : "To make the following fixes work correctly:\r\n\r\nIn ./hack/local-up-cluster.sh line 556:\r\n    ${CONTROLPLANE_SUDO} \"${GO_OUT}/hyperkube\" apiserver ${authorizer_arg} ${priv_arg} ${runtime_config} \\\r\n                                                                           ^---------^ SC2086: Double quote to prevent globbing and word splitting.",
        "createdAt" : "2019-03-25T07:59:11Z",
        "updatedAt" : "2019-03-25T07:59:11Z",
        "lastEditedBy" : "dcab10bd-e585-4065-b62c-ab73b7a208ac",
        "tags" : [
        ]
      }
    ],
    "commit" : "8cc3718e690c140ee9ffeb3a2b8d48c3e1510f6c",
    "line" : 198,
    "diffHunk" : "@@ -1,1 +509,513 @@    priv_arg=\"\"\n    if [[ -n \"${ALLOW_PRIVILEGED}\" ]]; then\n      priv_arg=\"--allow-privileged=${ALLOW_PRIVILEGED}\"\n    fi\n"
  },
  {
    "id" : "180c5af4-b9a1-4f06-8a42-a36c4229992e",
    "prId" : 75662,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/75662#pullrequestreview-218183085",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3a03bb04-877b-42f1-a9c8-6b0b5b1323ef",
        "parentId" : null,
        "authorId" : "dcab10bd-e585-4065-b62c-ab73b7a208ac",
        "body" : "To make the following fixes work correctly:\r\n\r\nIn ./hack/local-up-cluster.sh line 642:\r\n      ${node_cidr_args} \\\r\n      ^---------------^ SC2086: Double quote to prevent globbing and word splitting.",
        "createdAt" : "2019-03-25T08:00:44Z",
        "updatedAt" : "2019-03-25T08:00:44Z",
        "lastEditedBy" : "dcab10bd-e585-4065-b62c-ab73b7a208ac",
        "tags" : [
        ]
      }
    ],
    "commit" : "8cc3718e690c140ee9ffeb3a2b8d48c3e1510f6c",
    "line" : 258,
    "diffHunk" : "@@ -1,1 +620,624 @@    node_cidr_args=()\n    if [[ \"${NET_PLUGIN}\" == \"kubenet\" ]]; then\n      node_cidr_args=(\"--allocate-node-cidrs=true\" \"--cluster-cidr=10.1.0.0/16\")\n    fi\n"
  },
  {
    "id" : "05d375a6-c092-4770-9029-300df0c56527",
    "prId" : 75662,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/75662#pullrequestreview-218183305",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e7204f28-78fa-43bf-89c1-505f7822ee1f",
        "parentId" : null,
        "authorId" : "dcab10bd-e585-4065-b62c-ab73b7a208ac",
        "body" : "To make the following fixes work correctly:\r\n\r\nIn ./hack/local-up-cluster.sh line 645:\r\n      ${cloud_config_arg} \\\r\n      ^-----------------^ SC2086: Double quote to prevent globbing and word splitting.",
        "createdAt" : "2019-03-25T08:01:28Z",
        "updatedAt" : "2019-03-25T08:01:28Z",
        "lastEditedBy" : "dcab10bd-e585-4065-b62c-ab73b7a208ac",
        "tags" : [
        ]
      }
    ],
    "commit" : "8cc3718e690c140ee9ffeb3a2b8d48c3e1510f6c",
    "line" : 269,
    "diffHunk" : "@@ -1,1 +627,631 @@      cloud_config_arg=(\"--cloud-provider=external\")\n      cloud_config_arg+=(\"--external-cloud-volume-plugin=${CLOUD_PROVIDER}\")\n      cloud_config_arg+=(\"--cloud-config=${CLOUD_CONFIG}\")\n    fi\n"
  },
  {
    "id" : "089afe0c-86a9-468e-bc8a-9846d676a3b0",
    "prId" : 75662,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/75662#pullrequestreview-218184052",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6ae92683-fd02-4a70-85f4-e6523ad13de8",
        "parentId" : null,
        "authorId" : "dcab10bd-e585-4065-b62c-ab73b7a208ac",
        "body" : "To make the following fixes work correctly:\r\n\r\nIn ./hack/local-up-cluster.sh line 674:\r\n      ${node_cidr_args} \\\r\n      ^---------------^ SC2086: Double quote to prevent globbing and word splitting.",
        "createdAt" : "2019-03-25T08:03:55Z",
        "updatedAt" : "2019-03-25T08:03:55Z",
        "lastEditedBy" : "dcab10bd-e585-4065-b62c-ab73b7a208ac",
        "tags" : [
        ]
      }
    ],
    "commit" : "8cc3718e690c140ee9ffeb3a2b8d48c3e1510f6c",
    "line" : 299,
    "diffHunk" : "@@ -1,1 +664,668 @@    node_cidr_args=()\n    if [[ \"${NET_PLUGIN}\" == \"kubenet\" ]]; then\n      node_cidr_args=(\"--allocate-node-cidrs=true\" \"--cluster-cidr=10.1.0.0/16\")\n    fi\n"
  },
  {
    "id" : "2c1f1af5-40e2-4703-bbb4-cfa84df95292",
    "prId" : 75662,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/75662#pullrequestreview-218184588",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "44f067e5-c2f7-4f51-bfc1-f22c051fcaa2",
        "parentId" : null,
        "authorId" : "dcab10bd-e585-4065-b62c-ab73b7a208ac",
        "body" : "To make the following fixes work correctly:\r\n\r\nIn ./hack/local-up-cluster.sh line 753:\r\n      ${priv_arg}\r\n      ^---------^ SC2206: Quote to prevent word splitting, or split robustly with mapfile or read -a.",
        "createdAt" : "2019-03-25T08:05:34Z",
        "updatedAt" : "2019-03-25T08:05:34Z",
        "lastEditedBy" : "dcab10bd-e585-4065-b62c-ab73b7a208ac",
        "tags" : [
        ]
      }
    ],
    "commit" : "8cc3718e690c140ee9ffeb3a2b8d48c3e1510f6c",
    "line" : 329,
    "diffHunk" : "@@ -1,1 +688,692 @@    priv_arg=\"\"\n    if [[ -n \"${ALLOW_PRIVILEGED}\" ]]; then\n      priv_arg=\"--allow-privileged=${ALLOW_PRIVILEGED}\"\n    fi\n"
  },
  {
    "id" : "027be08c-66ea-4365-8484-25a8a529ef64",
    "prId" : 75662,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/75662#pullrequestreview-218184788",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "00ba627c-1b03-474e-b18d-1de0b3c189db",
        "parentId" : null,
        "authorId" : "dcab10bd-e585-4065-b62c-ab73b7a208ac",
        "body" : "To make the following fixes work correctly:\r\n\r\nIn ./hack/local-up-cluster.sh line 759:\r\n      ${cloud_config_arg}\r\n      ^-----------------^ SC2206: Quote to prevent word splitting, or split robustly with mapfile or read -a.",
        "createdAt" : "2019-03-25T08:06:16Z",
        "updatedAt" : "2019-03-25T08:06:17Z",
        "lastEditedBy" : "dcab10bd-e585-4065-b62c-ab73b7a208ac",
        "tags" : [
        ]
      }
    ],
    "commit" : "8cc3718e690c140ee9ffeb3a2b8d48c3e1510f6c",
    "line" : 338,
    "diffHunk" : "@@ -1,1 +694,698 @@    if [[ \"${EXTERNAL_CLOUD_PROVIDER:-}\" == \"true\" ]]; then\n       cloud_config_arg=(\"--cloud-provider=external\")\n       cloud_config_arg+=(\"--provider-id=$(hostname)\")\n    fi\n"
  },
  {
    "id" : "cbd596fe-e2a8-4179-bd47-47b047fdb222",
    "prId" : 75662,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/75662#pullrequestreview-218186191",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "86d355a0-d3d8-42f5-8a15-c57979e5f268",
        "parentId" : null,
        "authorId" : "dcab10bd-e585-4065-b62c-ab73b7a208ac",
        "body" : "I think it should not be changed to avoid behavior changes.\r\nSo I ignore this message.\r\n\r\nIn ./hack/local-up-cluster.sh line 781:\r\n      ${KUBELET_FLAGS}\r\n      ^--------------^ SC2206: Quote to prevent word splitting, or split robustly with mapfile or read -a.",
        "createdAt" : "2019-03-25T08:10:49Z",
        "updatedAt" : "2019-03-25T08:10:49Z",
        "lastEditedBy" : "dcab10bd-e585-4065-b62c-ab73b7a208ac",
        "tags" : [
        ]
      }
    ],
    "commit" : "8cc3718e690c140ee9ffeb3a2b8d48c3e1510f6c",
    "line" : 411,
    "diffHunk" : "@@ -1,1 +749,753 @@    fi\n\n    # shellcheck disable=SC2206\n    all_kubelet_flags=(\n      \"${priv_arg}\""
  },
  {
    "id" : "813b8978-d90d-41e5-b7c7-939c5907c7b3",
    "prId" : 75662,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/75662#pullrequestreview-218186684",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7687c5d8-4b96-4d0f-a796-a081630e590e",
        "parentId" : null,
        "authorId" : "dcab10bd-e585-4065-b62c-ab73b7a208ac",
        "body" : "I think it's a redirect to the normal user.\r\nSo I ignore this message.\r\n\r\nIn ./hack/local-up-cluster.sh line 788:\r\n    sudo -E \"${GO_OUT}/hyperkube\" kubelet \"${all_kubelet_flags[@]}\" >\"${KUBELET_LOG}\" 2>&1 &\r\n                                                                    ^-- SC2024: sudo doesn't affect redirects. Use ..| sudo tee file",
        "createdAt" : "2019-03-25T08:12:14Z",
        "updatedAt" : "2019-03-25T08:12:14Z",
        "lastEditedBy" : "dcab10bd-e585-4065-b62c-ab73b7a208ac",
        "tags" : [
        ]
      }
    ],
    "commit" : "8cc3718e690c140ee9ffeb3a2b8d48c3e1510f6c",
    "line" : 475,
    "diffHunk" : "@@ -1,1 +786,790 @@    fi\n\n    # shellcheck disable=SC2024\n    sudo -E \"${GO_OUT}/hyperkube\" kubelet \"${all_kubelet_flags[@]}\" >\"${KUBELET_LOG}\" 2>&1 &\n    KUBELET_PID=$!"
  },
  {
    "id" : "f0759da2-75ee-426c-93e5-bb42d44d502a",
    "prId" : 75662,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/75662#pullrequestreview-218187126",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9bcf1026-1e6b-45cc-a8e7-eb90bc662451",
        "parentId" : null,
        "authorId" : "dcab10bd-e585-4065-b62c-ab73b7a208ac",
        "body" : "I think it's a redirect to the normal user.\r\nSo I ignore this message.\r\n\r\nIn ./hack/local-up-cluster.sh line 827:\r\n      --master=\"https://${API_HOST}:${API_SECURE_PORT}\" >\"${PROXY_LOG}\" 2>&1 &\r\n                                                        ^-- SC2024: sudo doesn't affect redirects. Use ..| sudo tee file",
        "createdAt" : "2019-03-25T08:13:33Z",
        "updatedAt" : "2019-03-25T08:13:33Z",
        "lastEditedBy" : "dcab10bd-e585-4065-b62c-ab73b7a208ac",
        "tags" : [
        ]
      }
    ],
    "commit" : "8cc3718e690c140ee9ffeb3a2b8d48c3e1510f6c",
    "line" : 503,
    "diffHunk" : "@@ -1,1 +823,827 @@    fi\n\n    # shellcheck disable=SC2024\n    sudo \"${GO_OUT}/hyperkube\" proxy \\\n      --v=\"${LOG_LEVEL}\" \\"
  },
  {
    "id" : "782fcf58-0bb0-499c-86b4-94b012e89ab2",
    "prId" : 75662,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/75662#pullrequestreview-219456037",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "741efc1f-3056-4f38-b14d-c134cfbb09c9",
        "parentId" : null,
        "authorId" : "d7870cae-47b0-4c8e-8527-be8fc4be86de",
        "body" : "Confirming my understanding is correct - the `()` is added because we want to quote `--cluster-dns...` and `--cluster-domain=...` separately?\r\n\r\nDoes shellcheck complain if we quote them together?",
        "createdAt" : "2019-03-25T13:29:07Z",
        "updatedAt" : "2019-03-25T13:31:43Z",
        "lastEditedBy" : "d7870cae-47b0-4c8e-8527-be8fc4be86de",
        "tags" : [
        ]
      },
      {
        "id" : "ddad087d-93a1-41a4-9bcf-7006703ffffc",
        "parentId" : "741efc1f-3056-4f38-b14d-c134cfbb09c9",
        "authorId" : "dcab10bd-e585-4065-b62c-ab73b7a208ac",
        "body" : "This is a change to split into each option.\r\ndns_args have to be quoted for fixing the following shellcheck message.\r\n\r\nIn ./hack/local-up-cluster.sh line 774:\r\n      ${dns_args}\r\n      ^---------^ SC2206: Quote to prevent word splitting, or split robustly with mapfile or read -a.\r\n\r\nIf dns_args not defined as an array, it was executed as one option.\r\n\r\ne.g.\r\nhyperkube kubelet --allow-privileged=true ... '--cluster-dns=10.0.0.10 --cluster-domain=cluster.local' port=10250\r\n\r\n",
        "createdAt" : "2019-03-26T08:17:08Z",
        "updatedAt" : "2019-03-26T08:21:43Z",
        "lastEditedBy" : "dcab10bd-e585-4065-b62c-ab73b7a208ac",
        "tags" : [
        ]
      },
      {
        "id" : "6a696657-5979-42fb-9935-5e65d7914a59",
        "parentId" : "741efc1f-3056-4f38-b14d-c134cfbb09c9",
        "authorId" : "d7870cae-47b0-4c8e-8527-be8fc4be86de",
        "body" : ":+1: \r\n",
        "createdAt" : "2019-03-27T13:24:14Z",
        "updatedAt" : "2019-03-27T13:24:15Z",
        "lastEditedBy" : "d7870cae-47b0-4c8e-8527-be8fc4be86de",
        "tags" : [
        ]
      }
    ],
    "commit" : "8cc3718e690c140ee9ffeb3a2b8d48c3e1510f6c",
    "line" : 346,
    "diffHunk" : "@@ -1,1 +701,705 @@    if [[ \"${ENABLE_CLUSTER_DNS}\" = true ]]; then\n      if [[ \"${ENABLE_NODELOCAL_DNS:-}\" == \"true\" ]]; then\n        dns_args=(\"--cluster-dns=${LOCAL_DNS_IP}\" \"--cluster-domain=${DNS_DOMAIN}\")\n      else\n        dns_args=(\"--cluster-dns=${DNS_SERVER_IP}\" \"--cluster-domain=${DNS_DOMAIN}\")"
  },
  {
    "id" : "900477e7-ef08-4eb0-81e9-605e65d34a15",
    "prId" : 75662,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/75662#pullrequestreview-218740372",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f8a86fa0-cd80-401b-886d-2ed167b64093",
        "parentId" : null,
        "authorId" : "d7870cae-47b0-4c8e-8527-be8fc4be86de",
        "body" : "Was this a shellcheck recommended change? If not, would you mind elaborating on the benefits?",
        "createdAt" : "2019-03-25T13:30:37Z",
        "updatedAt" : "2019-03-25T13:31:43Z",
        "lastEditedBy" : "d7870cae-47b0-4c8e-8527-be8fc4be86de",
        "tags" : [
        ]
      },
      {
        "id" : "6e28b14c-cb9e-41cb-a2fd-a4bd5e9efcf1",
        "parentId" : "f8a86fa0-cd80-401b-886d-2ed167b64093",
        "authorId" : "dcab10bd-e585-4065-b62c-ab73b7a208ac",
        "body" : "auth_args have to be quoted for fixing the following shellcheck message.\r\n\r\nIn ./hack/local-up-cluster.sh line 773:\r\n      ${auth_args}\r\n      ^----------^ SC2206: Quote to prevent word splitting, or split robustly with mapfile or read -a.\r\n\r\nIf auth_args not defined as an array and dose not set any value, it was executed as blank option.\r\n\r\ne.g.\r\nhyperkube kubelet --allow-privileged=true ... --fail-swap-on=false '' --authorization-mode=Webhook\r\n",
        "createdAt" : "2019-03-26T08:21:18Z",
        "updatedAt" : "2019-03-26T08:21:43Z",
        "lastEditedBy" : "dcab10bd-e585-4065-b62c-ab73b7a208ac",
        "tags" : [
        ]
      }
    ],
    "commit" : "8cc3718e690c140ee9ffeb3a2b8d48c3e1510f6c",
    "line" : 366,
    "diffHunk" : "@@ -1,1 +716,720 @@    fi\n\n    auth_args=()\n    if [[ \"${KUBELET_AUTHORIZATION_WEBHOOK:-}\" != \"false\" ]]; then\n      auth_args+=(\"--authorization-mode=Webhook\")"
  },
  {
    "id" : "c8b29b6c-ca18-4bad-a8ab-09db1165957f",
    "prId" : 75662,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/75662#pullrequestreview-218746218",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c3e6d11b-47ee-472d-b32e-dd2dd8d4514c",
        "parentId" : null,
        "authorId" : "dcab10bd-e585-4065-b62c-ab73b7a208ac",
        "body" : "\r\nI made a mistake and might have deleted your comment.\r\n\r\n> Can you share more about the use of mapfile here?\r\n> It looks like the shellcheck message related more to the double quote issues?\r\n\r\n\r\nAPISERVER_PIDS is the command line option and must be split on newlines.\r\nIt does not work by just double quoting and should be defined as an array.\r\nAnd shellcheck displayed SC2206 when I used () to define APISERVER_PIDS as an array.\r\nSo I used mapfile.\r\n\r\nhttps://github.com/koalaman/shellcheck/wiki/SC2206",
        "createdAt" : "2019-03-26T08:29:56Z",
        "updatedAt" : "2019-03-26T08:29:56Z",
        "lastEditedBy" : "dcab10bd-e585-4065-b62c-ab73b7a208ac",
        "tags" : [
        ]
      }
    ],
    "commit" : "8cc3718e690c140ee9ffeb3a2b8d48c3e1510f6c",
    "line" : 64,
    "diffHunk" : "@@ -1,1 +349,353 @@  # Check if the API server is still running\n  [[ -n \"${APISERVER_PID-}\" ]] && mapfile -t APISERVER_PIDS < <(pgrep -P \"${APISERVER_PID}\" ; ps -o pid= -p \"${APISERVER_PID}\")\n  [[ -n \"${APISERVER_PIDS-}\" ]] && sudo kill \"${APISERVER_PIDS[@]}\" 2>/dev/null\n\n  # Check if the controller-manager is still running"
  },
  {
    "id" : "7734e809-6621-4882-846a-83c4f15e29ce",
    "prId" : 74739,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/74739#pullrequestreview-209541537",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3e17f809-bb90-4fcc-b474-8f09f01d5b5c",
        "parentId" : null,
        "authorId" : "5de211e4-9744-455e-9548-1a8e70ed1b2e",
        "body" : "this change isn't described in the commit or PR description, what's going on here?",
        "createdAt" : "2019-02-28T23:36:35Z",
        "updatedAt" : "2019-03-14T00:31:14Z",
        "lastEditedBy" : "5de211e4-9744-455e-9548-1a8e70ed1b2e",
        "tags" : [
        ]
      },
      {
        "id" : "a017ef0e-0870-488f-ad44-3e3188b1a355",
        "parentId" : "3e17f809-bb90-4fcc-b474-8f09f01d5b5c",
        "authorId" : "2ed5c6ef-f119-4350-84bd-11a7582f6d4f",
        "body" : "Yes, I will update the PR with this change. but basically if we don't run the kobeproxy with don't need to generate it certificates. It similar change that I did in this commit  https://github.com/kubernetes/kubernetes/pull/74269/commits/33a81a7882d71e5d8f4a3850947c1d87677bf783 for kubelet. In general I think it will be better if we move the generate certificates to each method that start the service \r\nso that apiserver, scheduler kubeproxy kubelet will generate certificates as well. ",
        "createdAt" : "2019-03-01T11:33:29Z",
        "updatedAt" : "2019-03-14T00:31:14Z",
        "lastEditedBy" : "2ed5c6ef-f119-4350-84bd-11a7582f6d4f",
        "tags" : [
        ]
      }
    ],
    "commit" : "dcebfd82ac72ebe8fe32e9755657471e6261ce95",
    "line" : 48,
    "diffHunk" : "@@ -1,1 +819,823 @@\n    if [[ \"${REUSE_CERTS}\" != true ]]; then\n        generate_kubeproxy_certs\n    fi\n"
  },
  {
    "id" : "f395b822-428c-45b5-adcd-6d2dd6ce74f8",
    "prId" : 72584,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/72584#pullrequestreview-190444984",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "60607f89-f5d1-405c-80db-05c7049a90aa",
        "parentId" : null,
        "authorId" : "255dd885-bee4-4c1f-baef-ba11f903dc5c",
        "body" : "Alternative: we could unify this into a `create_crd` function that takes a YAML file as parameter.",
        "createdAt" : "2019-01-08T16:54:13Z",
        "updatedAt" : "2019-01-18T16:17:33Z",
        "lastEditedBy" : "255dd885-bee4-4c1f-baef-ba11f903dc5c",
        "tags" : [
        ]
      },
      {
        "id" : "2a35a282-c5db-420f-96c3-28f8351d6848",
        "parentId" : "60607f89-f5d1-405c-80db-05c7049a90aa",
        "authorId" : "275dd783-53c3-4fed-8434-96ed6a2e0331",
        "body" : "Sure",
        "createdAt" : "2019-01-08T21:13:54Z",
        "updatedAt" : "2019-01-18T16:17:33Z",
        "lastEditedBy" : "275dd783-53c3-4fed-8434-96ed6a2e0331",
        "tags" : [
        ]
      }
    ],
    "commit" : "36030137b351b30964a8476133d811558a0bbd21",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +980,984 @@    fi\n}\n\nfunction print_success {\nif [[ \"${START_MODE}\" != \"kubeletonly\" ]]; then"
  },
  {
    "id" : "964005e9-c6bb-4fe7-9b45-da5721dfee1a",
    "prId" : 72584,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/72584#pullrequestreview-190444984",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1b49b233-01c6-40ca-a8da-0306eb37a6c0",
        "parentId" : null,
        "authorId" : "255dd885-bee4-4c1f-baef-ba11f903dc5c",
        "body" : "I think it wouldn't install the CRDs if `FEATURE_GATES` is set to `AllAlpha=true`, right?",
        "createdAt" : "2019-01-08T17:01:40Z",
        "updatedAt" : "2019-01-18T16:17:33Z",
        "lastEditedBy" : "255dd885-bee4-4c1f-baef-ba11f903dc5c",
        "tags" : [
        ]
      },
      {
        "id" : "7066ca0e-94f3-47fa-aa7f-2631f2865394",
        "parentId" : "1b49b233-01c6-40ca-a8da-0306eb37a6c0",
        "authorId" : "255dd885-bee4-4c1f-baef-ba11f903dc5c",
        "body" : "Would it be better to do something like this instead?\r\n\r\n```if [[ \"${FEATURE_GATES:-}\" =~ \"CSIDriverRegistry=true\" || (...)```",
        "createdAt" : "2019-01-08T17:04:50Z",
        "updatedAt" : "2019-01-18T16:17:33Z",
        "lastEditedBy" : "255dd885-bee4-4c1f-baef-ba11f903dc5c",
        "tags" : [
        ]
      },
      {
        "id" : "177df4a9-9f39-4b1d-95d6-03282dae4134",
        "parentId" : "1b49b233-01c6-40ca-a8da-0306eb37a6c0",
        "authorId" : "275dd783-53c3-4fed-8434-96ed6a2e0331",
        "body" : "Yes, I'll change it.  Thanks!",
        "createdAt" : "2019-01-08T21:14:14Z",
        "updatedAt" : "2019-01-18T16:17:33Z",
        "lastEditedBy" : "275dd783-53c3-4fed-8434-96ed6a2e0331",
        "tags" : [
        ]
      }
    ],
    "commit" : "36030137b351b30964a8476133d811558a0bbd21",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +1132,1136 @@  create_csi_crd \"csinodeinfo\"\nfi\n\nprint_success\n"
  },
  {
    "id" : "58ff7d27-35a3-4c29-b869-9551f0078544",
    "prId" : 72487,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/72487#pullrequestreview-200426670",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fcf4a738-0739-451d-805a-3e20f9c5a86c",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "should we set `--audit-log-maxsize` to avoid filling disks with logs?",
        "createdAt" : "2019-01-10T16:26:07Z",
        "updatedAt" : "2019-02-18T16:19:14Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "1e84c41b-6d87-45c2-9ac3-226a04b575b3",
        "parentId" : "fcf4a738-0739-451d-805a-3e20f9c5a86c",
        "authorId" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "body" : "what size would you expect for a local cluster doing some testing?\r\nplanning to look at something similar for https://github.com/kubernetes-sigs/kind soon. ",
        "createdAt" : "2019-02-06T06:24:18Z",
        "updatedAt" : "2019-02-18T16:19:14Z",
        "lastEditedBy" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "tags" : [
        ]
      }
    ],
    "commit" : "6b6bfb37fbd7e3f4bac4e27fb40599b5911f5e74",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +575,579 @@      --vmodule=\"${LOG_SPEC}\" \\\n      --audit-policy-file=\"${AUDIT_POLICY_FILE}\" \\\n      --audit-log-path=${LOG_DIR}/kube-apiserver-audit.log \\\n      --cert-dir=\"${CERT_DIR}\" \\\n      --client-ca-file=\"${CERT_DIR}/client-ca.crt\" \\"
  },
  {
    "id" : "8bd36af8-4fd4-46fe-a9e0-0e38f638aee6",
    "prId" : 70555,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/70555#pullrequestreview-174655216",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "76058778-3288-482d-8895-f80d8fec7a7b",
        "parentId" : null,
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "The usage of `==` vs `=` in this file is confusing but I see we do this elsewhere in this file.",
        "createdAt" : "2018-11-14T00:45:50Z",
        "updatedAt" : "2018-11-14T02:34:26Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      }
    ],
    "commit" : "6d7c5e90ede44b355e522a8f17a3c925652cd329",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +706,710 @@    mkdir -p \"/var/lib/kubelet\" &>/dev/null || sudo mkdir -p \"/var/lib/kubelet\"\n    # Enable dns\n    if [[ \"${ENABLE_CLUSTER_DNS}\" = true ]]; then\n      if [[ \"${ENABLE_NODELOCAL_DNS:-}\" == \"true\" ]]; then\n        dns_args=\"--cluster-dns=${LOCAL_DNS_IP} --cluster-domain=${DNS_DOMAIN}\""
  },
  {
    "id" : "7a0ac566-94f4-4e00-9497-9c1b7d3cff56",
    "prId" : 66724,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/66724#pullrequestreview-141246878",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bfbe5a37-a3ca-479c-a369-cab232b0eae6",
        "parentId" : null,
        "authorId" : "185604f6-2915-4313-8d6b-1d55757d0d22",
        "body" : "Are we certain $LOG_DIR exists?",
        "createdAt" : "2018-07-27T19:45:25Z",
        "updatedAt" : "2018-07-27T19:45:31Z",
        "lastEditedBy" : "185604f6-2915-4313-8d6b-1d55757d0d22",
        "tags" : [
        ]
      },
      {
        "id" : "9a1f7ff7-a824-4d82-b59d-b590d89edd8f",
        "parentId" : "bfbe5a37-a3ca-479c-a369-cab232b0eae6",
        "authorId" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "body" : "following the pattern like the rest of the file. if LOG_DIR is not set we default to `/tmp` and if it is set we assume it's created already",
        "createdAt" : "2018-07-27T19:50:12Z",
        "updatedAt" : "2018-07-27T19:50:13Z",
        "lastEditedBy" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "b96969347d6e3a176784417875249ea68d611455",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +254,258 @@    echo \"Kubelet cgroup driver defaulted to use: ${CGROUP_DRIVER}\"\n  fi\n  if [[ -f /var/log/docker.log && ! -f ${LOG_DIR}/docker.log ]]; then\n    ln -s /var/log/docker.log ${LOG_DIR}/docker.log\n  fi"
  },
  {
    "id" : "1358fd91-fa35-4efd-91ee-ebb4dd81a792",
    "prId" : 62508,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/62508#pullrequestreview-116117881",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b6093e2f-b781-4057-a4bf-afe7a56a1036",
        "parentId" : null,
        "authorId" : "5de211e4-9744-455e-9548-1a8e70ed1b2e",
        "body" : "style nit: `\"${KUBELET_IMAGE}\"` etc. but won't hold for this",
        "createdAt" : "2018-04-28T02:19:33Z",
        "updatedAt" : "2018-04-28T02:19:54Z",
        "lastEditedBy" : "5de211e4-9744-455e-9548-1a8e70ed1b2e",
        "tags" : [
        ]
      }
    ],
    "commit" : "b44c68eb2e76fce05482e08f617d6f0f172ec3ab",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +790,794 @@\n      # Build the hyperkube container image if necessary\n      if [[ -z \"$KUBELET_IMAGE\" && -n \"$DOCKERIZE_KUBELET\" ]]; then\n        HYPERKUBE_BIN=\"${GO_OUT}/hyperkube\" REGISTRY=\"k8s.gcr.io\" VERSION=\"latest\" make -C \"${KUBE_ROOT}/cluster/images/hyperkube\" build\n        KUBELET_IMAGE=\"k8s.gcr.io/hyperkube-amd64:latest\""
  },
  {
    "id" : "e7add3a9-f339-4bd5-a6a8-4c01e3cddd0a",
    "prId" : 60377,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/60377#pullrequestreview-99224767",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ba9b544c-f46e-4986-9f3f-3e002fa7bfe0",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "why cross compiling?",
        "createdAt" : "2018-02-26T07:26:08Z",
        "updatedAt" : "2018-02-26T07:26:08Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "7015b8fa-d6e8-4799-92b3-88d76b3d5f76",
        "parentId" : "ba9b544c-f46e-4986-9f3f-3e002fa7bfe0",
        "authorId" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "body" : "the CI system is basically running kubetest with the \"local\" deployment option (https://github.com/kubernetes/test-infra/blob/master/kubetest/local.go) and it needs the `make cross` for the end-to-end conformance test to work properly.",
        "createdAt" : "2018-02-26T09:08:07Z",
        "updatedAt" : "2018-02-26T09:08:08Z",
        "lastEditedBy" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "d71b7a8d7dd74c9fe394bfeb549cc5612782af0d",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +953,957 @@  ${KUBE_ROOT}/hack/install-etcd.sh\n  export PATH=\"${KUBE_ROOT}/third_party/etcd:${PATH}\"\n  KUBE_FASTBUILD=true make ginkgo cross\n  apt install -y sudo\nfi"
  },
  {
    "id" : "601a299f-c1f9-47db-8283-3b6fa1880f14",
    "prId" : 60377,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/60377#pullrequestreview-99225041",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "60914e06-53e1-4c91-b168-d6c752808449",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "KUBETEST_IN_DOCKER does not say what it is. Maybe RUN_IN_KUBE_CI ?",
        "createdAt" : "2018-02-26T07:26:51Z",
        "updatedAt" : "2018-02-26T07:26:51Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "8ace67d5-adf3-40a8-80ed-b8cc1e9ca1f5",
        "parentId" : "60914e06-53e1-4c91-b168-d6c752808449",
        "authorId" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "body" : "@sttts KUBETEST_IN_DOCKER is already used by the CI system. please see https://storage.googleapis.com/kubernetes-jenkins/logs/ci-kubernetes-local-e2e/219/build-log.txt",
        "createdAt" : "2018-02-26T09:09:14Z",
        "updatedAt" : "2018-02-26T09:09:15Z",
        "lastEditedBy" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "d71b7a8d7dd74c9fe394bfeb549cc5612782af0d",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +949,953 @@\n# If we are running in the CI, we need a few more things before we can start\nif [[ \"${KUBETEST_IN_DOCKER:-}\" == \"true\" ]]; then\n  echo \"Preparing to test ...\"\n  ${KUBE_ROOT}/hack/install-etcd.sh"
  },
  {
    "id" : "2331b866-2a2f-479d-9fdf-78f0620c5538",
    "prId" : 58567,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/58567#pullrequestreview-90399733",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fe29ac7b-4d1c-45d2-8d20-5ce70b925863",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "Are PodPresets beta by now and enable by default?",
        "createdAt" : "2018-01-22T08:43:11Z",
        "updatedAt" : "2018-01-24T12:50:12Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "237e354d-ac8e-467c-a5c7-09fb20f2091f",
        "parentId" : "fe29ac7b-4d1c-45d2-8d20-5ce70b925863",
        "authorId" : "c29e1906-5f0b-4d7b-af8b-d664805e8c8e",
        "body" : "Still alpha",
        "createdAt" : "2018-01-22T08:54:14Z",
        "updatedAt" : "2018-01-24T12:50:12Z",
        "lastEditedBy" : "c29e1906-5f0b-4d7b-af8b-d664805e8c8e",
        "tags" : [
        ]
      }
    ],
    "commit" : "0a230fad17ee6e0b531c990d7297b4cc3637eb36",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +480,484 @@    fi\n\n    if [[ ${ENABLE_ADMISSION_PLUGINS} == *\"PodPreset\"* ]]; then\n        if [[ -n \"${RUNTIME_CONFIG}\" ]]; then\n            RUNTIME_CONFIG+=\",\""
  },
  {
    "id" : "0423c04d-0c89-42c1-9594-797c827a5b86",
    "prId" : 58567,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/58567#pullrequestreview-90772903",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "da2f74a9-7083-464c-bc8c-22e2daea82ea",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "Remove those which are enabled by default.",
        "createdAt" : "2018-01-23T10:04:18Z",
        "updatedAt" : "2018-01-24T12:50:12Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "b68ef0e4-0b2f-4e7c-89f6-e94ed447f88d",
        "parentId" : "da2f74a9-7083-464c-bc8c-22e2daea82ea",
        "authorId" : "c29e1906-5f0b-4d7b-af8b-d664805e8c8e",
        "body" : "Already remove `NamespaceLifecycle `.",
        "createdAt" : "2018-01-23T10:29:18Z",
        "updatedAt" : "2018-01-24T12:50:12Z",
        "lastEditedBy" : "c29e1906-5f0b-4d7b-af8b-d664805e8c8e",
        "tags" : [
        ]
      }
    ],
    "commit" : "0a230fad17ee6e0b531c990d7297b4cc3637eb36",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +439,443 @@    #\n    # The order defined here dose not matter.\n    ENABLE_ADMISSION_PLUGINS=Initializers,LimitRanger,ServiceAccount${security_admission},DefaultStorageClass,DefaultTolerationSeconds,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota,PodPreset\n\n    audit_arg=\"\""
  },
  {
    "id" : "91f98d45-04f0-429a-a1b2-0dce9449afac",
    "prId" : 54288,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/54288#pullrequestreview-71376562",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2fcbe522-e956-45d0-b92a-2962dc49942c",
        "parentId" : null,
        "authorId" : "87ab1d19-ad39-40d0-a045-817039414280",
        "body" : "Do we have some specific e2e tests that I can run for the IPVS proxy after launching this?",
        "createdAt" : "2017-10-23T16:23:32Z",
        "updatedAt" : "2017-10-25T01:56:18Z",
        "lastEditedBy" : "87ab1d19-ad39-40d0-a045-817039414280",
        "tags" : [
        ]
      },
      {
        "id" : "a251ec6d-ac65-4ba1-96cd-ffe06f9a6a70",
        "parentId" : "2fcbe522-e956-45d0-b92a-2962dc49942c",
        "authorId" : "f2d7a78e-606f-4060-903e-a21198d7084e",
        "body" : "Currently, we have no specific e2e tests for IPVS proxier.",
        "createdAt" : "2017-10-24T01:34:27Z",
        "updatedAt" : "2017-10-25T01:56:18Z",
        "lastEditedBy" : "f2d7a78e-606f-4060-903e-a21198d7084e",
        "tags" : [
        ]
      },
      {
        "id" : "cf3baece-455d-4417-8548-b34c38a57fc8",
        "parentId" : "2fcbe522-e956-45d0-b92a-2962dc49942c",
        "authorId" : "f2d7a78e-606f-4060-903e-a21198d7084e",
        "body" : "I think if we can pass all existing test cases, it would be good.",
        "createdAt" : "2017-10-24T01:35:47Z",
        "updatedAt" : "2017-10-25T01:56:18Z",
        "lastEditedBy" : "f2d7a78e-606f-4060-903e-a21198d7084e",
        "tags" : [
        ]
      }
    ],
    "commit" : "a6af82789833322d47fe52be6b038eb4b4387744",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +118,122 @@#set feature gates if using ipvs mode\nif [ \"${KUBEPROXY_MODE}\" == \"ipvs\" ]; then\n    FEATURE_GATES=\"$FEATURE_GATES,SupportIPVSProxyMode=true\"\nfi\n"
  },
  {
    "id" : "ce5153db-dca5-4508-a1fc-c71fdf18fb44",
    "prId" : 54288,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/54288#pullrequestreview-72660644",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f47f7396-530a-473e-b387-52a7cdb04008",
        "parentId" : null,
        "authorId" : "d168965e-f2a1-46dc-9041-18f8ba845ebe",
        "body" : "wouldn't it be better to just include this in the creation of the file above?\r\n\r\ne.g.\r\n```\r\nmode:\"${KUBEPROXY_MODE}\r\n```",
        "createdAt" : "2017-10-27T22:06:13Z",
        "updatedAt" : "2017-10-27T22:06:13Z",
        "lastEditedBy" : "d168965e-f2a1-46dc-9041-18f8ba845ebe",
        "tags" : [
        ]
      },
      {
        "id" : "4b71afe2-a99f-4aa1-aa87-f390946f78c7",
        "parentId" : "f47f7396-530a-473e-b387-52a7cdb04008",
        "authorId" : "1256edc4-2c21-4b50-9371-9c0a50744653",
        "body" : "Right now the default of this var will be “”. Would kubeproxy accept `mode: ` if this was unspecified?",
        "createdAt" : "2017-10-27T22:13:15Z",
        "updatedAt" : "2017-10-27T22:13:15Z",
        "lastEditedBy" : "1256edc4-2c21-4b50-9371-9c0a50744653",
        "tags" : [
        ]
      },
      {
        "id" : "58883454-9d65-4aa7-9f33-6832f9bef60c",
        "parentId" : "f47f7396-530a-473e-b387-52a7cdb04008",
        "authorId" : "f2d7a78e-606f-4060-903e-a21198d7084e",
        "body" : "> Would kubeproxy accept mode: if this was unspecified?\r\n\r\nYes. Kube-proxy treats the empty mode as default mode - the iptables mode.",
        "createdAt" : "2017-10-28T02:32:45Z",
        "updatedAt" : "2017-10-28T02:32:51Z",
        "lastEditedBy" : "f2d7a78e-606f-4060-903e-a21198d7084e",
        "tags" : [
        ]
      },
      {
        "id" : "7fcdfd44-8833-4adc-b402-44d6a221f2aa",
        "parentId" : "f47f7396-530a-473e-b387-52a7cdb04008",
        "authorId" : "f2d7a78e-606f-4060-903e-a21198d7084e",
        "body" : "I sent a PR to clean up this, ref: https://github.com/kubernetes/kubernetes/pull/54738",
        "createdAt" : "2017-10-28T02:33:54Z",
        "updatedAt" : "2017-10-28T02:33:54Z",
        "lastEditedBy" : "f2d7a78e-606f-4060-903e-a21198d7084e",
        "tags" : [
        ]
      }
    ],
    "commit" : "a6af82789833322d47fe52be6b038eb4b4387744",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +745,749 @@featureGates: ${FEATURE_GATES}\nEOF\n    if [ \"${KUBEPROXY_MODE}\" == \"ipvs\" ]; then\n        cat <<EOF >> /tmp/kube-proxy.yaml\nmode: ipvs"
  },
  {
    "id" : "8af0f0db-8886-4b76-98f4-67f475db3627",
    "prId" : 48076,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/48076#pullrequestreview-46320269",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "15e3d803-4b7c-4ca9-95af-a6ef2971709d",
        "parentId" : null,
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "this could also just be `if [[ -z \"${GO_OUT}\" ]]; then`",
        "createdAt" : "2017-06-26T16:54:44Z",
        "updatedAt" : "2017-06-26T16:54:44Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      }
    ],
    "commit" : "52bd0bc71396af28e1430c2cd0eea799f214864c",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +150,154 @@        O)\n            GO_OUT=$(guess_built_binary_path)\n            if [ \"$GO_OUT\" == \"\" ]; then\n                echo \"Could not guess the correct output directory to use.\"\n                exit 1"
  },
  {
    "id" : "267ade58-9cb5-48f0-98d0-da115d0af801",
    "prId" : 46045,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/46045#pullrequestreview-40241600",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2d42d3ee-862c-4c9d-bdb2-5b105df73ef3",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Thanks for those fixes !",
        "createdAt" : "2017-05-25T09:23:26Z",
        "updatedAt" : "2017-05-25T17:56:23Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "a13f026fd012859f04467e6007e2cafe4a788927",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +663,667 @@      KUBELET_PID=$!\n      # Quick check that kubelet is running.\n      if ps -p $KUBELET_PID > /dev/null ; then\n\techo \"kubelet ( $KUBELET_PID ) is running.\"\n      else"
  },
  {
    "id" : "0c93c11c-5141-44a7-b94c-32615b91513b",
    "prId" : 45286,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/45286#pullrequestreview-37640619",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "28783457-55fb-4389-8354-8dc5bf73f492",
        "parentId" : null,
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "why is this defaulting to true?  i don't think you should do this change.",
        "createdAt" : "2017-05-11T17:03:58Z",
        "updatedAt" : "2017-05-12T02:33:47Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      },
      {
        "id" : "e3f5da4f-02fa-499b-9152-a9238059e7b4",
        "parentId" : "28783457-55fb-4389-8354-8dc5bf73f492",
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "actually, i see below it was defaulting to true previously... i think that was a mistake... can we make that false?",
        "createdAt" : "2017-05-11T17:04:31Z",
        "updatedAt" : "2017-05-12T02:33:47Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      },
      {
        "id" : "89fd3472-551e-488e-b6fd-ad96d61d1a13",
        "parentId" : "28783457-55fb-4389-8354-8dc5bf73f492",
        "authorId" : "766f642e-1622-4803-803b-05ce306fc30e",
        "body" : "@derekwaynecarr I think that change should be a part of https://github.com/kubernetes/kubernetes/issues/45615",
        "createdAt" : "2017-05-11T17:10:15Z",
        "updatedAt" : "2017-05-12T02:33:47Z",
        "lastEditedBy" : "766f642e-1622-4803-803b-05ce306fc30e",
        "tags" : [
        ]
      }
    ],
    "commit" : "951a36aac77338aaebe614b4b8d47962fb77c3a4",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +209,213 @@CLAIM_BINDER_SYNC_PERIOD=${CLAIM_BINDER_SYNC_PERIOD:-\"15s\"} # current k8s default\nENABLE_CONTROLLER_ATTACH_DETACH=${ENABLE_CONTROLLER_ATTACH_DETACH:-\"true\"} # current default\nKEEP_TERMINATED_POD_VOLUMES=${KEEP_TERMINATED_POD_VOLUMES:-\"true\"}\n# This is the default dir and filename where the apiserver will generate a self-signed cert\n# which should be able to be used as the CA to verify itself"
  },
  {
    "id" : "57323a49-5586-4b79-a8b3-baf17819ef2b",
    "prId" : 42911,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/42911#pullrequestreview-28757386",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9ad63f21-27a5-4bf3-98a8-75fd1879c883",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "Do we autogenerate these in /var/lib/kubernetes?",
        "createdAt" : "2017-03-23T18:28:27Z",
        "updatedAt" : "2017-03-27T13:44:14Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "e860248c-7bbe-4ab8-8395-eaabe7ea1c32",
        "parentId" : "9ad63f21-27a5-4bf3-98a8-75fd1879c883",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "> Do we autogenerate these in /var/lib/kubernetes?\r\n\r\nFor local-up, yes.",
        "createdAt" : "2017-03-23T19:41:01Z",
        "updatedAt" : "2017-03-27T13:44:14Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "8e26fa25da6d3b1deb333fe2484f794795d1c6b9",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +461,465 @@      --requestheader-client-ca-file=\"${CERT_DIR}/request-header-ca.crt\" \\\n      --requestheader-allowed-names=system:auth-proxy \\\n      --proxy-client-cert-file=\"${CERT_DIR}/client-auth-proxy.crt\" \\\n      --proxy-client-key-file=\"${CERT_DIR}/client-auth-proxy.key\" \\\n      --cors-allowed-origins=\"${API_CORS_ALLOWED_ORIGINS}\" >\"${APISERVER_LOG}\" 2>&1 &"
  },
  {
    "id" : "37643c90-00c7-4127-b4e9-02187853015f",
    "prId" : 42316,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/42316#pullrequestreview-24491522",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9cc14233-67b3-4d21-8bec-401b2d49d6bb",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "Why did this default change?\r\n\r\n@liggitt @derekwaynecarr something expected?",
        "createdAt" : "2017-03-01T13:42:15Z",
        "updatedAt" : "2017-03-01T13:42:16Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "3de202c5-9669-4a57-b71c-7697f4e8b509",
        "parentId" : "9cc14233-67b3-4d21-8bec-401b2d49d6bb",
        "authorId" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "body" : "@deads2k the \"default\" of false accidentally snuck in with my PR here: https://github.com/kubernetes/kubernetes/commit/bd912f50bae3855082bdcc8368b8a85eefe1e8e8#diff-ed3df710e9af7cd30a185896a60897d9R578. It was not supposed to.",
        "createdAt" : "2017-03-01T14:38:08Z",
        "updatedAt" : "2017-03-01T14:38:08Z",
        "lastEditedBy" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "tags" : [
        ]
      }
    ],
    "commit" : "36f551ab1d12af55a2483576f489382bc865a996",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +188,192 @@CONTAINER_RUNTIME_ENDPOINT=${CONTAINER_RUNTIME_ENDPOINT:-\"\"}\nIMAGE_SERVICE_ENDPOINT=${IMAGE_SERVICE_ENDPOINT:-\"\"}\nENABLE_CRI=${ENABLE_CRI:-\"true\"}\nRKT_PATH=${RKT_PATH:-\"\"}\nRKT_STAGE1_IMAGE=${RKT_STAGE1_IMAGE:-\"\"}"
  },
  {
    "id" : "f5a6f6e0-4ccb-4dd6-88d0-5e05586a8232",
    "prId" : 41526,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/41526#pullrequestreview-22174731",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0e492a69-aa07-4570-85b8-b57b86e79083",
        "parentId" : null,
        "authorId" : "7dd504ec-7e63-45b3-98f8-6eb1c683e9c2",
        "body" : "May I ask the reason/use case you want to enable `ENABLE_SWAGGER_UI`? Personally I don't think it's a frequently used flag for developers (the main users of this script)",
        "createdAt" : "2017-02-16T04:13:05Z",
        "updatedAt" : "2017-02-16T04:13:22Z",
        "lastEditedBy" : "7dd504ec-7e63-45b3-98f8-6eb1c683e9c2",
        "tags" : [
        ]
      },
      {
        "id" : "efe24f6d-e350-46cb-8c96-97ea3dcf8064",
        "parentId" : "0e492a69-aa07-4570-85b8-b57b86e79083",
        "authorId" : "9c76f9d4-eaaa-4ca5-ab15-871535509602",
        "body" : "the official site (https://kubernetes.io/kubernetes/third_party/swagger-ui/) seems to be unstable. Could we to make a simple way to use swagger-ui?",
        "createdAt" : "2017-02-16T05:13:34Z",
        "updatedAt" : "2017-02-16T05:13:34Z",
        "lastEditedBy" : "9c76f9d4-eaaa-4ca5-ab15-871535509602",
        "tags" : [
        ]
      }
    ],
    "commit" : "363bfaa5f23dd1b6583c77a6afb908e45974bc64",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +65,69 @@# enable swagger ui\nENABLE_SWAGGER_UI=${ENABLE_SWAGGER_UI:-false}\n\n# RBAC Mode options\nALLOW_ANY_TOKEN=${ALLOW_ANY_TOKEN:-false}"
  },
  {
    "id" : "f025126c-55ae-4e98-b944-ffc9417252f3",
    "prId" : 40928,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/40928#pullrequestreview-20501562",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "91793d64-3d94-4de3-ae34-2f5fcb8efef4",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "This is getting complicated.",
        "createdAt" : "2017-02-07T08:44:52Z",
        "updatedAt" : "2017-02-15T14:01:54Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "6310074e-3494-41df-9e83-9c985377a597",
        "parentId" : "91793d64-3d94-4de3-ae34-2f5fcb8efef4",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "> This is getting complicated.\r\n\r\nLooks about the same as signing for the apiserver.",
        "createdAt" : "2017-02-07T13:03:56Z",
        "updatedAt" : "2017-02-15T14:01:54Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "45d274bb524609dcf43f41badb8c400192f50e5b",
    "line" : 41,
    "diffHunk" : "@@ -1,1 +416,420 @@\n    # Create matching certificates for kube-aggregator\n    kube::util::create_serving_certkey \"${CONTROLPLANE_SUDO}\" \"${CERT_DIR}\" \"server-ca\" kube-aggregator api.kube-public.svc \"localhost\" ${API_HOST_IP}\n    kube::util::create_client_certkey \"${CONTROLPLANE_SUDO}\" \"${CERT_DIR}\" request-header-ca auth-proxy system:auth-proxy\n    # TODO remove masters and add rolebinding"
  },
  {
    "id" : "b6ee4946-91cc-4b82-9d06-ce1d084b7c22",
    "prId" : 40928,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/40928#pullrequestreview-21995321",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e633c8be-2e43-459d-ad50-8bf9f0cb4f21",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "why is this needed?",
        "createdAt" : "2017-02-15T13:10:25Z",
        "updatedAt" : "2017-02-15T14:01:54Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "6e04260a-9648-4316-84e9-0871ca10d5ac",
        "parentId" : "e633c8be-2e43-459d-ad50-8bf9f0cb4f21",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "need a namespace to create the pod in.  In order to be publicly accessible, `kube-public` seems like a reasonable spot.",
        "createdAt" : "2017-02-15T13:14:11Z",
        "updatedAt" : "2017-02-15T14:01:54Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "45d274bb524609dcf43f41badb8c400192f50e5b",
    "line" : 67,
    "diffHunk" : "@@ -1,1 +483,487 @@\n    # create the kube-public namespace for the aggregator\n    ${KUBECTL} --kubeconfig=\"${CERT_DIR}/admin.kubeconfig\" create namespace kube-public\n    ${CONTROLPLANE_SUDO} cp \"${CERT_DIR}/admin.kubeconfig\" \"${CERT_DIR}/admin-kube-aggregator.kubeconfig\"\n    ${CONTROLPLANE_SUDO} chown $(whoami) \"${CERT_DIR}/admin-kube-aggregator.kubeconfig\""
  },
  {
    "id" : "6bcad6f7-ff58-49e2-a7a5-eccbbc610cb4",
    "prId" : 40928,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/40928#pullrequestreview-22004875",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0565095b-320b-4eee-bc1d-57047e8d9162",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "How about also printing to the user how to use this aggregator config?",
        "createdAt" : "2017-02-15T13:13:49Z",
        "updatedAt" : "2017-02-15T14:01:54Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "1d5e5704-b9cd-437a-91b2-dd43f3ea4a89",
        "parentId" : "0565095b-320b-4eee-bc1d-57047e8d9162",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "> How about also printing to the user how to use this aggregator config?\r\n\r\ndone.",
        "createdAt" : "2017-02-15T14:02:25Z",
        "updatedAt" : "2017-02-15T14:02:25Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "45d274bb524609dcf43f41badb8c400192f50e5b",
    "line" : 70,
    "diffHunk" : "@@ -1,1 +486,490 @@    ${CONTROLPLANE_SUDO} cp \"${CERT_DIR}/admin.kubeconfig\" \"${CERT_DIR}/admin-kube-aggregator.kubeconfig\"\n    ${CONTROLPLANE_SUDO} chown $(whoami) \"${CERT_DIR}/admin-kube-aggregator.kubeconfig\"\n    ${KUBECTL} config set-cluster local-up-cluster --kubeconfig=\"${CERT_DIR}/admin-kube-aggregator.kubeconfig\" --server=\"https://${API_HOST_IP}:9443\"\n    echo \"use 'kubectl --kubeconfig=${CERT_DIR}/admin-kube-aggregator.kubeconfig' to use the aggregated API server\"\n"
  },
  {
    "id" : "fcdcc848-7db2-4489-995c-1122c4c55edc",
    "prId" : 40193,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/40193#pullrequestreview-20459996",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4671f2d9-5779-4c0b-b3d6-507f06d6d219",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "👍 ",
        "createdAt" : "2017-02-07T09:20:26Z",
        "updatedAt" : "2017-02-07T09:20:26Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "544e7aaee4d560dbc1d0a83ee31fd91afa729811",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +691,695 @@To start using your cluster, you can open up another terminal/tab and run:\n\n  export KUBECONFIG=${CERT_DIR}/admin.kubeconfig\n  cluster/kubectl.sh\n"
  },
  {
    "id" : "eaf47b8b-bad7-4653-94d7-937695bb4bca",
    "prId" : 39972,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/39972#pullrequestreview-20118415",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "49a2322d-d5d2-4e32-87e6-1611761e211a",
        "parentId" : null,
        "authorId" : "8e9f49fc-1050-4601-b81c-83bf660c5eb8",
        "body" : "should this be changed to true? or blank if we are changing the default in the code?\r\n\r\nalso this whole change causes --cgroup-root to be a required option yes?  i.e. if i don't explicitly say --cgroups-per-qos=false, then --cgroup-root is required?",
        "createdAt" : "2017-01-25T16:34:52Z",
        "updatedAt" : "2017-02-03T22:28:39Z",
        "lastEditedBy" : "8e9f49fc-1050-4601-b81c-83bf660c5eb8",
        "tags" : [
        ]
      },
      {
        "id" : "c56b0866-e74b-4665-99bd-cccb9d96329a",
        "parentId" : "49a2322d-d5d2-4e32-87e6-1611761e211a",
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "i have reduced this pr scope to just the new flag name but not enabling it.\r\n\r\nthe enable will be a follow-on pr next week.",
        "createdAt" : "2017-02-03T22:32:11Z",
        "updatedAt" : "2017-02-03T22:32:11Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      }
    ],
    "commit" : "75fa285a56797c1d312df430eaf39025430d273f",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +35,39 @@SERVICE_CLUSTER_IP_RANGE=${SERVICE_CLUSTER_IP_RANGE:-10.0.0.0/24}\n# if enabled, must set CGROUP_ROOT\nCGROUPS_PER_QOS=${CGROUPS_PER_QOS:-false}\n# this is not defaulted to preserve backward compatibility.\n# if EXPERIMENTAL_CGROUPS_PER_QOS is enabled, recommend setting to /"
  },
  {
    "id" : "6ca19e2a-5213-4be0-b421-22d10c6f05a9",
    "prId" : 38403,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/38403#pullrequestreview-12228662",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b2d3a5df-b286-4983-abbe-61dfacf52426",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "no need for the temporary file. Just pipe the HERE document above through `kubectl config view --kubeconfig /dev/stdin --minify --flatten`",
        "createdAt" : "2016-12-09T07:00:43Z",
        "updatedAt" : "2016-12-09T13:22:41Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "3e347679-4315-40f4-85df-54585e849176",
        "parentId" : "b2d3a5df-b286-4983-abbe-61dfacf52426",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "> no need for the temporary file. Just pipe the HERE document above through kubectl config view --kubeconfig /dev/stdin --minify --flatten\r\n\r\nI tried here: https://gist.github.com/deads2k/18d7d352671fbb50d2c362a326eae489, but the kubeconfigs were always empty.",
        "createdAt" : "2016-12-09T13:23:25Z",
        "updatedAt" : "2016-12-09T13:23:25Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "2b1af399-1a43-4e1b-873d-ae9d7d982aa6",
        "parentId" : "b2d3a5df-b286-4983-abbe-61dfacf52426",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "leave it as it is for now. Will take a look later.",
        "createdAt" : "2016-12-09T13:46:52Z",
        "updatedAt" : "2016-12-09T13:46:52Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "207c04a3f837fce1310857ded7342c1297cf6713",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +403,407 @@EOF\n\n    # flatten the kubeconfig files to make them self contained\n    username=$(whoami)\n    ${CONTROLPLANE_SUDO} /bin/bash -e <<EOF"
  },
  {
    "id" : "7ab66deb-6f9f-4650-b337-a7b2fac59686",
    "prId" : 38319,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/38319#pullrequestreview-12013248",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1fb1d04e-5497-484d-b3d9-09bdd14e8d1a",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "This write the config, so sudo is necessary as well.",
        "createdAt" : "2016-12-08T07:28:30Z",
        "updatedAt" : "2016-12-08T18:54:31Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "feff1a26-de6c-4962-9dfa-801414f2ac32",
        "parentId" : "1fb1d04e-5497-484d-b3d9-09bdd14e8d1a",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "> This write the config, so sudo is necessary as well.\r\n\r\nSame issue with reading client keys.",
        "createdAt" : "2016-12-08T12:34:49Z",
        "updatedAt" : "2016-12-08T18:54:31Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "fb9c10995366e8cccf450facf930d5bb509d7ad2",
    "line" : null,
    "diffHunk" : "@@ -1,1 +540,544 @@\n    ${CONTROLPLANE_SUDO} cp \"${CERT_DIR}/admin.kubeconfig\" \"${CERT_DIR}/admin-discovery.kubeconfig\"\n    ${CONTROLPLANE_SUDO} ${GO_OUT}/kubectl config set-cluster local-up-cluster --kubeconfig=\"${CERT_DIR}/admin-discovery.kubeconfig\" --insecure-skip-tls-verify --server=\"https://${API_HOST}:${DISCOVERY_SECURE_PORT}\"\n\n    DISCOVERY_SERVER_LOG=/tmp/kubernetes-discovery.log"
  },
  {
    "id" : "c9209fa8-3e71-4119-a0b6-4e4c773aac51",
    "prId" : 38319,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/38319#pullrequestreview-12091546",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "42344e40-6800-4ad1-8fbc-0da70fc2c769",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "@xilabao I've defaulted this to off.  I'm reworking it to run as a pod in a future pull.  I'll tag you in it.",
        "createdAt" : "2016-12-08T18:55:09Z",
        "updatedAt" : "2016-12-08T18:55:09Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "fb9c10995366e8cccf450facf930d5bb509d7ad2",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +849,853 @@\nSTART_DISCOVERY=${START_DISCOVERY:-false}\nif [[ \"${START_DISCOVERY}\" = true ]]; then\n  start_discovery\nfi"
  },
  {
    "id" : "0528649c-0073-4745-8f9e-cfb185dcb88c",
    "prId" : 38289,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/38289#pullrequestreview-11820469",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dcd22479-eb9d-4221-8278-55d1abd03f6b",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "is this the discovery server accepting requestheader auth, or knowing what headers to use to send it along to the underlying servers? I expected the apiserver to add these in order to trust the proxied requests from the discovery server",
        "createdAt" : "2016-12-07T14:46:31Z",
        "updatedAt" : "2016-12-07T14:48:17Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "b59fc3e7-9944-4e20-b93d-4abf65b558d9",
        "parentId" : "dcd22479-eb9d-4221-8278-55d1abd03f6b",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "> is this the discovery server accepting requestheader auth, or knowing what headers to use to send it along to the underlying servers? I expected the apiserver to add these in order to trust the proxied requests from the discovery server\r\n\r\nThis flag is used to check tokenreviews.  The request header flags are used to accept an auth-proxy.  The process will *also* attach proxy headers on proxied requests, but that isn't wired up yet.\r\n\r\nThe core API server already has the request-header flags in local-up-cluster.sh",
        "createdAt" : "2016-12-07T14:56:00Z",
        "updatedAt" : "2016-12-07T14:56:00Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "eb6655a5-e575-4d84-8d62-97f29863bd13",
        "parentId" : "dcd22479-eb9d-4221-8278-55d1abd03f6b",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "ok. unrelatedly, we may want to remove the \"X-\" from the auth proxy headers some time soon, sounds like X prefixes aren't recommended any more",
        "createdAt" : "2016-12-07T15:14:04Z",
        "updatedAt" : "2016-12-07T15:14:04Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "798d3edabf6c6745ded1f99a9fad3257092e531e",
    "line" : 41,
    "diffHunk" : "@@ -1,1 +521,525 @@      --cert-dir=\"${CERT_DIR}\" \\\n      --client-ca-file=\"${CERT_DIR}/client-ca-bundle.crt\" \\\n      --authentication-kubeconfig=\"${CERT_DIR}/discovery-auth.kubeconfig\" \\\n      --authorization-kubeconfig=\"${CERT_DIR}/discovery-auth.kubeconfig\" \\\n      --requestheader-username-headers=X-Remote-User \\"
  },
  {
    "id" : "e9ae535e-c044-4cd3-9b0d-78ea6e90ad84",
    "prId" : 38127,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/38127#pullrequestreview-11798319",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b7a2bb25-06ee-4a17-9149-65743b495f53",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "@sttts any reason not to do this.  It makes us compatible with `kubernetes-discovery`.",
        "createdAt" : "2016-12-06T14:48:20Z",
        "updatedAt" : "2016-12-06T14:48:20Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "57b191a2-c4c3-4602-94b9-bb4f7c5c7f2c",
        "parentId" : "b7a2bb25-06ee-4a17-9149-65743b495f53",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "Don't we have to do this to pass through the user and groups?",
        "createdAt" : "2016-12-07T07:00:34Z",
        "updatedAt" : "2016-12-07T07:00:34Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "c87812ea-878b-4ce5-8f1a-b842a4df46b3",
        "parentId" : "b7a2bb25-06ee-4a17-9149-65743b495f53",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "> Don't we have to do this to pass through the user and groups?\r\n\r\nYeah, just want to make sure you can't think of a reason.  tag if we're good?",
        "createdAt" : "2016-12-07T13:21:06Z",
        "updatedAt" : "2016-12-07T13:21:06Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "c218b31a-76cb-462b-8ac3-7c853c864120",
        "parentId" : "b7a2bb25-06ee-4a17-9149-65743b495f53",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "Should be fine for the non-proxy case.",
        "createdAt" : "2016-12-07T13:22:31Z",
        "updatedAt" : "2016-12-07T13:22:31Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "fdb0b2bca260c19268d8310fd6a32e4717a8b44d",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +470,474 @@      --cloud-provider=\"${CLOUD_PROVIDER}\" \\\n      --cloud-config=\"${CLOUD_CONFIG}\" \\\n      --requestheader-username-headers=X-Remote-User \\\n      --requestheader-group-headers=X-Remote-Group \\\n      --requestheader-extra-headers-prefix=X-Remote-Extra- \\"
  },
  {
    "id" : "79d9b01c-77a0-41fc-b8ce-d456009ff22d",
    "prId" : 37228,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/37228#pullrequestreview-13891238",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b2abcc31-d28a-41e2-8a66-ce701036c759",
        "parentId" : null,
        "authorId" : "8e448017-7838-493d-a424-33cada0da657",
        "body" : "Why do this for local cluster up?",
        "createdAt" : "2016-12-21T02:28:30Z",
        "updatedAt" : "2017-01-20T17:08:45Z",
        "lastEditedBy" : "8e448017-7838-493d-a424-33cada0da657",
        "tags" : [
        ]
      },
      {
        "id" : "2d2c186f-1884-497d-bc06-a99db6c75c55",
        "parentId" : "b2abcc31-d28a-41e2-8a66-ce701036c759",
        "authorId" : "8e9f49fc-1050-4601-b81c-83bf660c5eb8",
        "body" : "I figured `local-up-cluster.sh` is used for deploying dev environments where it is more likely the user will want to keep the volumes around for debug purposes.  I know that is what I would want personally.",
        "createdAt" : "2016-12-21T02:44:18Z",
        "updatedAt" : "2017-01-20T17:08:45Z",
        "lastEditedBy" : "8e9f49fc-1050-4601-b81c-83bf660c5eb8",
        "tags" : [
        ]
      }
    ],
    "commit" : "e2750a305a8708d64aa8a7d94155027d97b53d53",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +537,541 @@        --cgroup-driver=${CGROUP_DRIVER} \\\n        --cgroup-root=${CGROUP_ROOT} \\\n        --keep-terminated-pod-volumes=true \\\n        ${auth_args} \\\n        ${dns_args} \\"
  },
  {
    "id" : "4dabdf9d-d566-404a-bdd1-915fe967fdf9",
    "prId" : 36707,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/36707#pullrequestreview-8622666",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4de5537c-a948-47d5-b879-a9c33ead6fe7",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "I'd like to see us stop passing cert_dir and pass explicit CA and serving certs.\n",
        "createdAt" : "2016-11-15T15:16:50Z",
        "updatedAt" : "2016-11-28T08:24:54Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "a1b17db4581b714a44f4158325bb60ac4257d87d",
    "line" : null,
    "diffHunk" : "@@ -1,1 +418,422 @@\n    APISERVER_LOG=/tmp/kube-apiserver.log\n    sudo -E \"${GO_OUT}/hyperkube\" apiserver ${anytoken_arg} ${authorizer_arg} ${priv_arg} ${runtime_config}\\\n      ${advertise_address} \\\n      --v=${LOG_LEVEL} \\"
  },
  {
    "id" : "6c349a12-26ed-455f-aacf-a42bc82daf21",
    "prId" : 36707,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/36707#pullrequestreview-9444354",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0e2d7962-6879-4b99-a2bf-635d15ec7547",
        "parentId" : null,
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "Why?\n(Just curious)\n",
        "createdAt" : "2016-11-19T00:29:26Z",
        "updatedAt" : "2016-11-28T08:24:54Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      },
      {
        "id" : "9b60ff6f-bf07-40e8-8d69-bd556d68bfc9",
        "parentId" : "0e2d7962-6879-4b99-a2bf-635d15ec7547",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "@deads2k ^^",
        "createdAt" : "2016-11-21T07:16:15Z",
        "updatedAt" : "2016-11-28T08:24:54Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "792a3724-e8a6-40ff-9b1d-2284a0a3b741",
        "parentId" : "0e2d7962-6879-4b99-a2bf-635d15ec7547",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "> Why?\r\n> (Just curious)\r\n\r\nControllers should start running with their own identity.  Part of that will involved a bootstrapping identity with sufficient power to create services accounts and run the SA token secret generator, but it should not require full access.\r\n\r\nRBAC will authorize based on specific permissions and non-RBAC authorizers will be able to authorize based on username, but neither need to grant full powers.",
        "createdAt" : "2016-11-21T12:44:17Z",
        "updatedAt" : "2016-11-28T08:24:54Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "a1b17db4581b714a44f4158325bb60ac4257d87d",
    "line" : 73,
    "diffHunk" : "@@ -1,1 +410,414 @@\n    # Create client certs signed with client-ca, given id, given CN and a number of groups\n    # NOTE: system:masters will be removed in the future\n    create_client_certkey client-ca kubelet system:node:${HOSTNAME_OVERRIDE} system:nodes\n    create_client_certkey client-ca kube-proxy system:kube-proxy system:nodes"
  },
  {
    "id" : "4f921a37-4925-47b5-915d-5e97b7c0763f",
    "prId" : 36216,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/36216#pullrequestreview-7530823",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7d60a051-fdc0-487e-a376-2f41f1d2ad2d",
        "parentId" : null,
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "should there be tests for alternate container runtimes too?\n",
        "createdAt" : "2016-11-04T21:15:00Z",
        "updatedAt" : "2016-11-08T06:04:37Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "2fe21234-c3e2-4b56-8d9a-ad8d38c030d6",
        "parentId" : "7d60a051-fdc0-487e-a376-2f41f1d2ad2d",
        "authorId" : "9a0adb95-53bd-4ddc-b5fe-11ad6bdfe165",
        "body" : "@ixdy Yes, but how to test `remote` container-runtime or we just skip test when we use `remote`?\n",
        "createdAt" : "2016-11-07T02:27:01Z",
        "updatedAt" : "2016-11-08T06:04:37Z",
        "lastEditedBy" : "9a0adb95-53bd-4ddc-b5fe-11ad6bdfe165",
        "tags" : [
        ]
      },
      {
        "id" : "50fe90e5-9d4a-4f97-ba5d-fd449066037d",
        "parentId" : "7d60a051-fdc0-487e-a376-2f41f1d2ad2d",
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "good question. :) I don't know the answer. \n\nminor nit: the `[[ -z \"${CONTAINER_RUNTIME}\" ]]` branch of this probably won't ever apply and can be removed, since we set `CONTAINER_RUNTIME` to `docker` by default if it's empty.\n",
        "createdAt" : "2016-11-07T23:46:18Z",
        "updatedAt" : "2016-11-08T06:04:37Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      }
    ],
    "commit" : "833ef552f5f99f58e4321e7740b3de29912f382a",
    "line" : null,
    "diffHunk" : "@@ -1,1 +627,631 @@\nif [[ \"${CONTAINER_RUNTIME}\" == \"docker\" ]]; then\n  test_docker\nfi\n"
  },
  {
    "id" : "54ce95df-0f15-4496-aaa1-7262ae07d722",
    "prId" : 35962,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/35962#pullrequestreview-7646563",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "009843d6-0626-477c-a825-a2bffc13844c",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "We don't require exact match to `true` for other `ALLOW_*/ENABLE_*` options, why these?\n",
        "createdAt" : "2016-11-08T15:44:06Z",
        "updatedAt" : "2016-12-02T03:06:39Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "afe59e6d-8c07-46d6-a1cf-baa615775a9f",
        "parentId" : "009843d6-0626-477c-a825-a2bffc13844c",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "> liggitt 2 minutes ago Kubernetes member\n> We don't require exact match to true for other ALLOW__/ENABLE__ options, why these?\n\nI'd claim the others should probably be updated.\n",
        "createdAt" : "2016-11-08T15:46:26Z",
        "updatedAt" : "2016-12-02T03:06:39Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "abd3b18a-cd69-4fec-a296-9772c0c92f86",
        "parentId" : "009843d6-0626-477c-a825-a2bffc13844c",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "What's the benefit to treating ENABLE_RBAC=1 as false?\n",
        "createdAt" : "2016-11-08T15:49:12Z",
        "updatedAt" : "2016-12-02T03:06:39Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "55bcda41-4c7a-42e2-b56d-53deb74fb17f",
        "parentId" : "009843d6-0626-477c-a825-a2bffc13844c",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "> What's the benefit to treating ENABLE_RBAC=1 as false?\n\nAbout the same reasoning on as `--bool-flag=1` doesn't work.  \n",
        "createdAt" : "2016-11-08T15:51:25Z",
        "updatedAt" : "2016-12-02T03:06:39Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "72e0e91b5edb961cd22e2cdbce5d02300a754402",
    "line" : null,
    "diffHunk" : "@@ -1,1 +414,418 @@    fi\n    authorizer_arg=\"\"\n    if [[ \"${ENABLE_RBAC}\" = true ]]; then\n      authorizer_arg=\"--authorization-mode=RBAC \"\n    fi"
  },
  {
    "id" : "b58c791e-ee53-4b27-9a23-ce53d76c9e2e",
    "prId" : 34619,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/34619#pullrequestreview-3914784",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "088ef918-f49c-42cc-8961-b83a0a8cc07c",
        "parentId" : null,
        "authorId" : "c532215f-ed76-4a19-b066-8676d269eaf1",
        "body" : "I would have expected that if `ENABLE_RBAC` is `\"false\"` then we wouldn't use this.\n",
        "createdAt" : "2016-10-12T16:26:53Z",
        "updatedAt" : "2016-10-12T16:26:53Z",
        "lastEditedBy" : "c532215f-ed76-4a19-b066-8676d269eaf1",
        "tags" : [
        ]
      },
      {
        "id" : "c7f1dc8c-6827-40e2-baf7-3b304b71206d",
        "parentId" : "088ef918-f49c-42cc-8961-b83a0a8cc07c",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "> I would have expected that if ENABLE_RBAC is \"false\" then we wouldn't use this.\n\nThe other condition checks in the same method don't make the distinction.  Do you feel strongly?\n",
        "createdAt" : "2016-10-12T16:48:27Z",
        "updatedAt" : "2016-10-12T16:48:28Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "127e335802729a50dfbf78126cb8df5da5a406c6",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +287,291 @@    fi\n    authorizer_arg=\"\"\n    if [[ -n \"${ENABLE_RBAC:-}\" ]]; then\n      authorizer_arg=\"--authorization-mode=RBAC \"\n    fi"
  },
  {
    "id" : "9a5a3742-d811-4963-8c15-8123b9bd11b8",
    "prId" : 33966,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/33966#pullrequestreview-3376154",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "be7d9361-444f-443e-af60-e22de758bb3f",
        "parentId" : null,
        "authorId" : "766f642e-1622-4803-803b-05ce306fc30e",
        "body" : "Why not use `--cacert=$(ROOT_CA_FILE)` instead of `-k` ?\n",
        "createdAt" : "2016-10-07T17:48:12Z",
        "updatedAt" : "2016-10-19T10:36:10Z",
        "lastEditedBy" : "766f642e-1622-4803-803b-05ce306fc30e",
        "tags" : [
        ]
      },
      {
        "id" : "aea43eb2-e1ae-4a6a-9441-94a0a4d84f2a",
        "parentId" : "be7d9361-444f-443e-af60-e22de758bb3f",
        "authorId" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "body" : "@eparis : yep you are right\n",
        "createdAt" : "2016-10-07T20:48:09Z",
        "updatedAt" : "2016-10-19T10:36:10Z",
        "lastEditedBy" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "20d1818d78746247785f327b89028a35f5ca6caa",
    "line" : null,
    "diffHunk" : "@@ -1,1 +177,181 @@    fi\n\n    curl --silent -k -g $API_HOST:$API_SECURE_PORT\n    if [ ! $? -eq 0 ]; then\n        echo \"API SERVER secure port is free, proceeding...\""
  },
  {
    "id" : "19e11749-b47f-463b-9c54-5139573555dc",
    "prId" : 33966,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/33966#pullrequestreview-4257476",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fe91cace-32d9-4ff1-8497-55d92e460217",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "probably ought to check both.\n",
        "createdAt" : "2016-10-14T11:37:09Z",
        "updatedAt" : "2016-10-19T10:36:10Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "7d35d08e-467c-47f0-926c-7321bfc2b078",
        "parentId" : "fe91cace-32d9-4ff1-8497-55d92e460217",
        "authorId" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "body" : "Ack. Fixing\n",
        "createdAt" : "2016-10-14T12:21:47Z",
        "updatedAt" : "2016-10-19T10:36:10Z",
        "lastEditedBy" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "20d1818d78746247785f327b89028a35f5ca6caa",
    "line" : null,
    "diffHunk" : "@@ -1,1 +179,183 @@    curl --silent -k -g $API_HOST:$API_SECURE_PORT\n    if [ ! $? -eq 0 ]; then\n        echo \"API SERVER secure port is free, proceeding...\"\n    else\n        echo \"ERROR starting API SERVER, exiting. Some process on $API_HOST is serving already on $API_SECURE_PORT\""
  },
  {
    "id" : "ed80746c-9ae5-4cdd-be55-51e571b61ef8",
    "prId" : 33663,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/33663#pullrequestreview-5555662",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "075798b4-e1f0-4190-aa9b-ff158f6eb9b5",
        "parentId" : null,
        "authorId" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "body" : "Note, the relabel to a shared SELinux context should no longer be necessary, because the Kubelet will be running with `spc_t` due to running in a privileged container, which is unconfined.\n",
        "createdAt" : "2016-10-24T22:54:21Z",
        "updatedAt" : "2016-10-26T15:11:55Z",
        "lastEditedBy" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "tags" : [
        ]
      }
    ],
    "commit" : "aa855b9f24d73e4b62aab7cd15ddb4bf1f5061dc",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +504,508 @@        --volume=/sys:/sys:ro \\\n        --volume=/var/lib/docker/:/var/lib/docker:ro \\\n        --volume=/var/lib/kubelet/:/var/lib/kubelet:rw \\\n        --volume=/dev:/dev \\\n        ${cred_bind} \\"
  },
  {
    "id" : "8a4aba2a-bd42-4f07-9d70-59fa36983b85",
    "prId" : 31898,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "85978d9d-d15f-4f21-a595-9d31567c909c",
        "parentId" : null,
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "Am I missing where this is used?\n",
        "createdAt" : "2016-09-03T02:16:04Z",
        "updatedAt" : "2016-09-03T02:16:04Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      }
    ],
    "commit" : "de1d44e3f06bcde6c3ae1e269df291f8c643e78e",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +342,346 @@    priv_arg=\"\"\n    if [[ -n \"${ALLOW_PRIVILEGED}\" ]]; then\n      priv_arg=\"--allow-privileged \"\n    fi\n"
  },
  {
    "id" : "df3f3c9e-5129-4bb8-9973-df05e0b650ce",
    "prId" : 31898,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1d0a5e16-d3b2-4b2c-8989-3fc3ba8cb74e",
        "parentId" : null,
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "Ah there it is\n",
        "createdAt" : "2016-09-03T02:16:47Z",
        "updatedAt" : "2016-09-03T02:16:47Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      }
    ],
    "commit" : "de1d44e3f06bcde6c3ae1e269df291f8c643e78e",
    "line" : 52,
    "diffHunk" : "@@ -1,1 +437,441 @@        --cidfile=$KUBELET_CIDFILE \\\n        gcr.io/google_containers/kubelet \\\n        /kubelet --v=${LOG_LEVEL} --containerized ${priv_arg}--chaos-chance=\"${CHAOS_CHANCE}\" --hostname-override=\"${HOSTNAME_OVERRIDE}\" --cloud-provider=\"${CLOUD_PROVIDER}\" --cloud-config=\"${CLOUD_CONFIG}\" \\ --address=\"127.0.0.1\" --api-servers=\"${API_HOST}:${API_PORT}\" --port=\"$KUBELET_PORT\"  --enable-controller-attach-detach=\"${ENABLE_CONTROLLER_ATTACH_DETACH}\" &> $KUBELET_LOG &\n    fi\n}"
  },
  {
    "id" : "b1eb239e-02d0-4227-befa-a94e61cdbd5a",
    "prId" : 27557,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d6433e80-7631-49e5-a8b4-96f3893fad04",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "does this work properly if the value is \"\" ?\n",
        "createdAt" : "2016-08-01T06:40:38Z",
        "updatedAt" : "2016-08-02T18:12:26Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "f9f9286b-687a-4c73-ae3d-398a5789d29d",
        "parentId" : "d6433e80-7631-49e5-a8b4-96f3893fad04",
        "authorId" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "body" : "I think \"\" is fine here because that's the default value for this flag..\n",
        "createdAt" : "2016-08-01T07:38:24Z",
        "updatedAt" : "2016-08-02T18:12:26Z",
        "lastEditedBy" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "tags" : [
        ]
      }
    ],
    "commit" : "f45ba9090918c68eaca43d7eca2a82b07a20b14d",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +304,308 @@      --service-cluster-ip-range=\"10.0.0.0/24\" \\\n      --cloud-provider=\"${CLOUD_PROVIDER}\" \\\n      --cloud-config=\"${CLOUD_CONFIG}\" \\\n      --cors-allowed-origins=\"${API_CORS_ALLOWED_ORIGINS}\" >\"${APISERVER_LOG}\" 2>&1 &\n    APISERVER_PID=$!"
  },
  {
    "id" : "d544c553-576c-40f2-9e79-3fd49af90ac6",
    "prId" : 27557,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3f468e21-8b93-426d-8c7e-99be252df718",
        "parentId" : null,
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "I assume `${CLOUD_CONFIG}` is expected to point to a file? Should we also check that the file exists?\n",
        "createdAt" : "2016-08-01T19:48:47Z",
        "updatedAt" : "2016-08-02T18:12:26Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      },
      {
        "id" : "ebce05c0-76c6-4994-a791-b507bda9ed6b",
        "parentId" : "3f468e21-8b93-426d-8c7e-99be252df718",
        "authorId" : "a7f673a6-4b23-4df6-aa10-f123fa9dcd5f",
        "body" : "yes, it is checked now.\n",
        "createdAt" : "2016-08-02T18:13:10Z",
        "updatedAt" : "2016-08-02T18:13:10Z",
        "lastEditedBy" : "a7f673a6-4b23-4df6-aa10-f123fa9dcd5f",
        "tags" : [
        ]
      }
    ],
    "commit" : "f45ba9090918c68eaca43d7eca2a82b07a20b14d",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +45,49 @@# sanity check for OpenStack provider\nif [ \"${CLOUD_PROVIDER}\" == \"openstack\" ]; then\n    if [ \"${CLOUD_CONFIG}\" == \"\" ]; then\n        echo \"Missing CLOUD_CONFIG env for OpenStack provider!\"\n        exit 1"
  },
  {
    "id" : "b942cb0e-dd6f-4b2b-afaa-7682d623c95a",
    "prId" : 17193,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "85a3c747-13c2-4869-87a5-ae1d17eb2777",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "I recommend initializing at the top in case it is unset, with the other variables.\n",
        "createdAt" : "2015-11-13T01:02:25Z",
        "updatedAt" : "2015-11-13T01:54:49Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "042a2108-c20e-4425-83ae-9fd23750ae37",
        "parentId" : "85a3c747-13c2-4869-87a5-ae1d17eb2777",
        "authorId" : "9ff1e219-e424-4704-8813-37da798c818e",
        "body" : "Good call. There's even a check for unbound variable that fails otherwise.\n",
        "createdAt" : "2015-11-13T02:34:58Z",
        "updatedAt" : "2015-11-13T02:35:05Z",
        "lastEditedBy" : "9ff1e219-e424-4704-8813-37da798c818e",
        "tags" : [
        ]
      }
    ],
    "commit" : "ffded0c0a3fdbd7aa6171328b7321320945df395",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +264,268 @@        --address=\"127.0.0.1\" \\\n        --api-servers=\"${API_HOST}:${API_PORT}\" \\\n        --port=\"$KUBELET_PORT\" ${KUBELET_ARGS} >\"${KUBELET_LOG}\" 2>&1 &\n      KUBELET_PID=$!\n    else"
  },
  {
    "id" : "0873689a-2e7e-4064-9be5-e148bd0373bf",
    "prId" : 15188,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "eb66d9fa-e199-402c-91d5-60336036c9a9",
        "parentId" : null,
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "Was the addition of this if statement in a PR that was not cherrypicked?\n",
        "createdAt" : "2015-10-06T22:43:31Z",
        "updatedAt" : "2015-10-06T23:47:23Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "f92f472a-34e0-4497-a856-575b884d7a92",
        "parentId" : "eb66d9fa-e199-402c-91d5-60336036c9a9",
        "authorId" : "0970b119-085d-41b4-8f33-e10409965eba",
        "body" : "also cherry-picks #15081\nlet me know if you want me to move it out\n",
        "createdAt" : "2015-10-06T23:49:26Z",
        "updatedAt" : "2015-10-06T23:49:26Z",
        "lastEditedBy" : "0970b119-085d-41b4-8f33-e10409965eba",
        "tags" : [
        ]
      }
    ],
    "commit" : "eff1245a2c0c3dc61c90c1e3ac702908507b0cac",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +203,207 @@function start_apiserver {\n    # Admission Controllers to invoke prior to persisting objects in cluster\n    if [[ -z \"${ALLOW_SECURITY_CONTEXT}\" ]]; then\n      ADMISSION_CONTROL=NamespaceLifecycle,NamespaceAutoProvision,LimitRanger,SecurityContextDeny,ServiceAccount,ResourceQuota\n    else"
  },
  {
    "id" : "8fcd670c-1238-46a5-ae9f-c7691f97006b",
    "prId" : 9479,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "de3ab709-b0c7-46ba-b69c-bf6ad439efff",
        "parentId" : null,
        "authorId" : "109e4fe5-4b7d-49ac-a32f-b25103830bbf",
        "body" : "Yeah, this is much nicer and cleaner. Thanks for doing this!\n",
        "createdAt" : "2015-06-09T21:11:52Z",
        "updatedAt" : "2015-06-10T17:25:10Z",
        "lastEditedBy" : "109e4fe5-4b7d-49ac-a32f-b25103830bbf",
        "tags" : [
        ]
      }
    ],
    "commit" : "a2ea0ba467af11708e51b30a9dc927ca648f648b",
    "line" : null,
    "diffHunk" : "@@ -1,1 +269,273 @@}\n\n\ntest_docker\ntest_apiserver_off"
  },
  {
    "id" : "53f55d90-e51f-40e7-b1e3-cc3cd4c7c37d",
    "prId" : 8234,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "32aef126-e696-4c72-b9be-68366c07a6a0",
        "parentId" : null,
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "I will suggest adding a comment here saying something like: \"Check if the API server is still running\"\n",
        "createdAt" : "2015-05-15T17:30:51Z",
        "updatedAt" : "2015-05-15T22:52:32Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      }
    ],
    "commit" : "4c859c7e35e477e807b664ed06ba157e569e0169",
    "line" : null,
    "diffHunk" : "@@ -1,1 +111,115 @@  echo \"Cleaning up...\"\n  # Check if the API server is still running\n  [[ -n \"${APISERVER_PID-}\" ]] && APISERVER_PIDS=$(ps -eh --ppid=${APISERVER_PID} --pid=${APISERVER_PID} |awk '{print $1}'|xargs)\n  [[ -n \"${APISERVER_PIDS-}\" ]] && sudo kill ${APISERVER_PIDS}\n"
  },
  {
    "id" : "be735c9d-c47a-4134-8c1b-c25becb80aac",
    "prId" : 4401,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2b3a3dce-a1b7-4721-a633-ff37d1e04567",
        "parentId" : null,
        "authorId" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "body" : "It might be better to just echo this rather than running it in case a user already has used the context name \"local\" for something else.  \n",
        "createdAt" : "2015-02-13T00:15:38Z",
        "updatedAt" : "2015-02-13T00:31:50Z",
        "lastEditedBy" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "tags" : [
        ]
      },
      {
        "id" : "870543ea-8212-4935-9275-ef4cae6dfd83",
        "parentId" : "2b3a3dce-a1b7-4721-a633-ff37d1e04567",
        "authorId" : "8076e56f-768c-4f89-90e6-045ef34e1525",
        "body" : "Done. It now echos out the commands to run to set kubeconfig entries to talk to the local cluster.\n",
        "createdAt" : "2015-02-13T00:32:47Z",
        "updatedAt" : "2015-02-13T00:32:47Z",
        "lastEditedBy" : "8076e56f-768c-4f89-90e6-045ef34e1525",
        "tags" : [
        ]
      }
    ],
    "commit" : "61cc821506af2de05c2c902960dd64b9cca16188",
    "line" : null,
    "diffHunk" : "@@ -1,1 +149,153 @@  --master=\"http://${API_HOST}:${API_PORT}\" >\"${SCHEDULER_LOG}\" 2>&1 &\nSCHEDULER_PID=$!\n\ncat <<EOF\nLocal Kubernetes cluster is running. Press Ctrl-C to shut it down."
  },
  {
    "id" : "1b5a2aac-fb23-44f6-9847-5921e2768a88",
    "prId" : 4254,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a9ede296-caf6-40d9-812b-fb7120b798cc",
        "parentId" : null,
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "This was changed when upgrading to 2, and I'm reverting it back now that we're using -bind-addr\n",
        "createdAt" : "2015-02-09T22:27:05Z",
        "updatedAt" : "2015-02-09T22:27:05Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "4369e31b9d740ec05b1a8bffc929c1070dff334f",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +94,98 @@  --port=\"${API_PORT}\" \\\n  --runtime_config=api/v1beta3 \\\n  --etcd_servers=\"http://127.0.0.1:4001\" \\\n  --portal_net=\"10.0.0.0/24\" \\\n  --cors_allowed_origins=\"${API_CORS_ALLOWED_ORIGINS}\" >\"${APISERVER_LOG}\" 2>&1 &"
  },
  {
    "id" : "ff5b7326-b67d-469b-b636-e33c090ee89f",
    "prId" : 2878,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d7d49d83-1388-4510-b5ba-f66337d9b4a8",
        "parentId" : null,
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "No value necessary when the option is a bool?\n",
        "createdAt" : "2014-12-12T00:29:59Z",
        "updatedAt" : "2015-01-08T18:01:29Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "9f6ef276-70e3-49dd-97c6-223cbc6faedb",
        "parentId" : "d7d49d83-1388-4510-b5ba-f66337d9b4a8",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Treating the flag as \"present\" to enable.  Might be overkill or too clever, but means we don't have to define true/1/yes semantics for a label.  We could treat this as a label set and use label semantics, but I imagine we'll want values broader than the label subset.\n\n> On Dec 11, 2014, at 7:30 PM, bgrant0607 notifications@github.com wrote:\n> \n> In hack/local-up-cluster.sh:\n> \n> > @@ -92,6 +92,7 @@ APISERVER_LOG=/tmp/kube-apiserver.log\n> >    -v=${LOG_LEVEL} \\\n> >    --address=\"${API_HOST}\" \\\n> >    --port=\"${API_PORT}\" \\\n> > -  --runtime_config=api/v1beta3 \\\n> >   No value necessary when the option is a bool?\n> \n> —\n> Reply to this email directly or view it on GitHub.\n",
        "createdAt" : "2014-12-12T00:34:59Z",
        "updatedAt" : "2015-01-08T18:01:29Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "6bc288f3-db5d-49e6-be03-1974b6405980",
        "parentId" : "d7d49d83-1388-4510-b5ba-f66337d9b4a8",
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "What I meant was that if we're going to predicate registration of the v1beta3 handlers, we should also predicate its inclusion in the list of supported versions reported by the API version handler.\n",
        "createdAt" : "2014-12-12T16:55:06Z",
        "updatedAt" : "2015-01-08T18:01:29Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "b84e3644-c37f-4590-9d59-5069b80fc00f",
        "parentId" : "d7d49d83-1388-4510-b5ba-f66337d9b4a8",
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "Really, this list should be constructed automatically when calling NewAPIGroupVersion.\n",
        "createdAt" : "2014-12-12T16:57:01Z",
        "updatedAt" : "2015-01-08T18:01:29Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "8232df96-b394-4fc2-a220-77a8f0c573a4",
        "parentId" : "d7d49d83-1388-4510-b5ba-f66337d9b4a8",
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "Sorry. Somehow added these comments in the wrong place. They were intended to be comments on:\n\n```\nversionHandler := apiserver.APIVersionHandler(\"v1beta1\", \"v1beta2\", \"v1beta3\")\n```\n",
        "createdAt" : "2014-12-12T17:00:21Z",
        "updatedAt" : "2015-01-08T18:01:29Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "c19f0484-7336-4047-bf96-dbcbe37ec247",
        "parentId" : "d7d49d83-1388-4510-b5ba-f66337d9b4a8",
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "I'm fine with present implies enable.\n",
        "createdAt" : "2014-12-12T17:01:46Z",
        "updatedAt" : "2015-01-08T18:01:29Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "50072be4-899c-422f-9b39-ae1d659cc0b5",
        "parentId" : "d7d49d83-1388-4510-b5ba-f66337d9b4a8",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Fixed versionHandler in the commit - may want to wait for the rest to filter out\n",
        "createdAt" : "2014-12-12T23:27:47Z",
        "updatedAt" : "2015-01-08T18:01:29Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "7fd887df61f890e8d39f6f10624074a0b5e8323f",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +93,97 @@  --address=\"${API_HOST}\" \\\n  --port=\"${API_PORT}\" \\\n  --runtime_config=api/v1beta3 \\\n  --etcd_servers=\"http://127.0.0.1:4001\" \\\n  --portal_net=\"10.0.0.0/24\" \\"
  },
  {
    "id" : "373561ac-ab9b-47fb-88b0-5e536acc0ce1",
    "prId" : 103710,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/103710#pullrequestreview-707611213",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4839d597-69f5-46e7-bb73-3dd0df9d2f53",
        "parentId" : null,
        "authorId" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "body" : "@nckturner is `true` the current default if `--configure-cloud-routes` is not specified in the command line?",
        "createdAt" : "2021-07-15T13:35:18Z",
        "updatedAt" : "2021-07-15T13:35:19Z",
        "lastEditedBy" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "tags" : [
        ]
      },
      {
        "id" : "9df7e192-c86d-4c14-8041-15dfe3ab322c",
        "parentId" : "4839d597-69f5-46e7-bb73-3dd0df9d2f53",
        "authorId" : "ddc05ecb-1a86-4393-8e22-f1bb528c2d50",
        "body" : "Yes, that is correct.",
        "createdAt" : "2021-07-15T16:52:10Z",
        "updatedAt" : "2021-07-15T16:52:10Z",
        "lastEditedBy" : "ddc05ecb-1a86-4393-8e22-f1bb528c2d50",
        "tags" : [
        ]
      }
    ],
    "commit" : "1887ddfc9685c45e68eb330be28b2509511dfdfd",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +655,659 @@\n    cloud_config_arg=(\"--cloud-provider=${CLOUD_PROVIDER}\" \"--cloud-config=${CLOUD_CONFIG}\")\n    cloud_config_arg+=(\"--configure-cloud-routes=${CONFIGURE_CLOUD_ROUTES}\")\n    if [[ \"${EXTERNAL_CLOUD_PROVIDER:-}\" == \"true\" ]]; then\n      cloud_config_arg=(\"--cloud-provider=external\")"
  }
]