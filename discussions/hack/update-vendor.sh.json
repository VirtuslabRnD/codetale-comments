[
  {
    "id" : "2b8b6d86-2b0b-444d-9be0-adc5859bd792",
    "prId" : 99596,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/99596#pullrequestreview-623378367",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e7d0b25a-9cf7-4b7e-9117-1424bfc82725",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "cc @cblecker or @BenTheElder or other bash-savvy folks to ack this approach",
        "createdAt" : "2021-03-29T15:43:36Z",
        "updatedAt" : "2021-03-29T15:43:36Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "00ca55dd059ecd5b35224e867f1c59c09cb2c11f",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +53,57 @@}\ntrap finish EXIT\n\nif [ -z \"${BASH_XTRACEFD:-}\" ]; then\n  exec 19> \"${LOG_FILE}\""
  },
  {
    "id" : "fab8fa6e-8a52-40d4-922b-9e712d1d0ce6",
    "prId" : 79316,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/79316#pullrequestreview-253154007",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "54fa7393-571e-4966-84de-27bc3dcb616d",
        "parentId" : null,
        "authorId" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "body" : "unnecessary cat usage. we can just pipe the file to input. all of the changes on `.*cat.*` lines are this.",
        "createdAt" : "2019-06-23T23:13:34Z",
        "updatedAt" : "2019-06-24T18:43:11Z",
        "lastEditedBy" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "tags" : [
        ]
      }
    ],
    "commit" : "4aaa7b4da2643d5085d1844495c0d6cff6970cf5",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +68,72 @@\n  # 1a. Ensure replace directives have an explicit require directive\n  jq -r '\"-require \\(.Old.Path)@\\(.New.Version)\"' < \"${replace_json}\" | xargs -L 100 go mod edit -fmt\n  # 1b. Ensure require directives have a corresponding replace directive pinning a version\n  jq -r '\"-replace \\(.Path)=\\(.Path)@\\(.Version)\"' < \"${require_json}\" | xargs -L 100 go mod edit -fmt"
  },
  {
    "id" : "e258f371-15dd-4f80-8973-6cfb1697c92c",
    "prId" : 79316,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/79316#pullrequestreview-253679174",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "32f688c0-5a60-487d-af9f-54c925918bef",
        "parentId" : null,
        "authorId" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "body" : "Here we've used a command group to redirect once, which is simpler (and preferred by shellcheck).\r\n\r\nIt has a super minor performance benefit of only needing to open the file once since bash know understands the intent to redirect all of these to the same output.",
        "createdAt" : "2019-06-23T23:14:32Z",
        "updatedAt" : "2019-06-24T18:43:11Z",
        "lastEditedBy" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "tags" : [
        ]
      },
      {
        "id" : "eece35ba-e234-4683-8cc5-27807d7adf51",
        "parentId" : "32f688c0-5a60-487d-af9f-54c925918bef",
        "authorId" : "185604f6-2915-4313-8d6b-1d55757d0d22",
        "body" : "What is the difference between `{ foo }` and `( foo )`?",
        "createdAt" : "2019-06-24T21:48:00Z",
        "updatedAt" : "2019-06-24T21:48:16Z",
        "lastEditedBy" : "185604f6-2915-4313-8d6b-1d55757d0d22",
        "tags" : [
        ]
      },
      {
        "id" : "cbb530f4-b0e3-424f-a258-52a338bf4fee",
        "parentId" : "32f688c0-5a60-487d-af9f-54c925918bef",
        "authorId" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "body" : "`{ foo }` is a command group but does not involve a subshell. `( foo )` is a command group in a subshell. using `{ foo; }` or:\r\n```\r\n{\r\n   foo\r\n}\r\n```\r\ngets the benefits of grouping without involving a subprocess / shell.\r\n\r\ntechnically there are also some slightly different rules for parsing to identify them that don't apply here.",
        "createdAt" : "2019-06-24T21:55:17Z",
        "updatedAt" : "2019-06-24T21:55:17Z",
        "lastEditedBy" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "tags" : [
        ]
      }
    ],
    "commit" : "4aaa7b4da2643d5085d1844495c0d6cff6970cf5",
    "line" : 49,
    "diffHunk" : "@@ -1,1 +112,116 @@    cat \"${go_mod_replace}\";\n    echo \")\";\n  } > go.mod\n\n  go mod edit -fmt"
  },
  {
    "id" : "a044537e-d09b-4141-84c6-6cd5867c78ca",
    "prId" : 79316,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/79316#pullrequestreview-253154091",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "df1a4488-1ab8-4003-8ef8-9072fbdafa6e",
        "parentId" : null,
        "authorId" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "body" : "not strictly necessary, but we were computing this in at least 3 places, so >WET ==> DRY",
        "createdAt" : "2019-06-23T23:15:19Z",
        "updatedAt" : "2019-06-24T18:43:11Z",
        "lastEditedBy" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "tags" : [
        ]
      }
    ],
    "commit" : "4aaa7b4da2643d5085d1844495c0d6cff6970cf5",
    "line" : 124,
    "diffHunk" : "@@ -1,1 +206,210 @@# tidy staging repos in reverse dependency order.\n# the content of dependencies' go.mod files affects what `go mod tidy` chooses to record in a go.mod file.\ntidy_unordered=\"${TMP_DIR}/tidy_unordered.txt\"\nkube::util::list_staging_repos | xargs -I {} echo \"k8s.io/{}\" > \"${tidy_unordered}\"\nrm -f \"${TMP_DIR}/tidy_deps.txt\""
  },
  {
    "id" : "c4cf6829-d7f4-4194-b7be-d51895bce318",
    "prId" : 79316,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/79316#pullrequestreview-253154123",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c912d0f7-60b1-46c8-938a-ebf786e0e53d",
        "parentId" : null,
        "authorId" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "body" : "I dislike needing these disable statements, but in this case it's a warning about potentially reading and writing to the same path in a loop (which wouldn't be safe). Since shellcheck has to just guess based on where the path is being referenced that it _might_ be hitting this, we have to confirm that it is not.",
        "createdAt" : "2019-06-23T23:16:14Z",
        "updatedAt" : "2019-06-24T18:43:11Z",
        "lastEditedBy" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "tags" : [
        ]
      }
    ],
    "commit" : "4aaa7b4da2643d5085d1844495c0d6cff6970cf5",
    "line" : 132,
    "diffHunk" : "@@ -1,1 +213,217 @@# pipeline (but only ready it again) so we disable the lint to assure shellcheck\n# that :this-is-fine:\n# shellcheck disable=SC2094\nwhile IFS= read -r repo; do\n  # record existence of the repo to ensure modules with no peer relationships still get included in the order"
  },
  {
    "id" : "7f427501-2a31-4ee7-98e4-740fd55dae7e",
    "prId" : 74877,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/74877#pullrequestreview-217950582",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "36644d27-ffd9-41d8-9b83-88562ebac00f",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "Do we still need this?  I hoped that modules would eliminate this need",
        "createdAt" : "2019-03-22T20:10:19Z",
        "updatedAt" : "2019-04-03T14:20:03Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "d0261b10770210f83edbcfe379db24e1b82a9e86",
    "line" : 272,
    "diffHunk" : "@@ -1,1 +270,274 @@# create a symlink in vendor directory pointing to the staging components.\n# This lets other packages and tools use the local staging components as if they were vendored.\nfor repo in $(ls staging/src/k8s.io); do\n  rm -fr \"${KUBE_ROOT}/vendor/k8s.io/${repo}\"\n  ln -s \"../../staging/src/k8s.io/${repo}\" \"${KUBE_ROOT}/vendor/k8s.io/${repo}\""
  }
]