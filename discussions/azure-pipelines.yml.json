[
  {
    "id" : "1617e26d-6356-4e8d-a1a8-6bfaa946c64a",
    "prId" : 12455,
    "prUrl" : "https://github.com/numpy/numpy/pull/12455#pullrequestreview-178941273",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cc2a7ceb-c310-446e-8b40-d03162b0c679",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "I think these long lines can also be split in `*.yml` files, see `.travis.yml`, lines 28-31. Don't know that it is worth worrying about.",
        "createdAt" : "2018-11-27T18:31:07Z",
        "updatedAt" : "2018-11-27T18:31:07Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      }
    ],
    "commit" : "425301dc3a132de1effcd610e8e0a74762745f1a",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +125,129 @@  - powershell: |\n      $wc = New-Object net.webclient\n      $wc.Downloadfile(\"https://download.microsoft.com/download/7/9/6/796EF2E4-801B-4FC4-AB28-B59FBF6D907B/VCForPython27.msi\", \"VCForPython27.msi\")\n      Start-Process \"VCForPython27.msi\" /qn -Wait\n    displayName: 'Install VC 9.0'"
  },
  {
    "id" : "1dce2d6b-2441-4fed-a3bf-34ad846aaefa",
    "prId" : 12543,
    "prUrl" : "https://github.com/numpy/numpy/pull/12543#pullrequestreview-184941274",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7a3b1e2d-ff49-4288-8dd8-1c1b14cabfa7",
        "parentId" : null,
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "I think yml will let you break these long lines with `\\`. The effect seems to be to ignore all the following whitespace, including at the beginning of the next line. Don't need to do that here, but might want to experiment next time.",
        "createdAt" : "2018-12-14T01:36:31Z",
        "updatedAt" : "2018-12-14T01:36:31Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      }
    ],
    "commit" : "a1449aef3e4ac6deeb4fc2ae6c3087cfde0419c2",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +21,25 @@           cd .. && \\\n           mkdir openblas && cd openblas && \\\n           wget https://3f23b170c54c2533c070-1c8a9b3114517dc5fe17b7c3f8c63a43.ssl.cf2.rackcdn.com/openblas-v0.3.4-manylinux1_i686.tar.gz && \\\n           tar zxvf openblas-v0.3.4-manylinux1_i686.tar.gz && \\\n           cp -r ./usr/local/lib/* /usr/lib && \\"
  },
  {
    "id" : "f1b9865e-bec1-4819-8cfa-d518a09d3ed2",
    "prId" : 12594,
    "prUrl" : "https://github.com/numpy/numpy/pull/12594#pullrequestreview-229136003",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8392ebd3-e1f3-4ad3-9eaf-0610acb5815e",
        "parentId" : null,
        "authorId" : "73d6f7d8-2c7d-4a48-8754-5ce4a97a850f",
        "body" : "we should add `failTaskOnFailedTests: true` for consistency with our recent move to displaying test summaries on failures and only failing after the publishing happens",
        "createdAt" : "2019-04-20T01:25:34Z",
        "updatedAt" : "2019-04-21T08:07:16Z",
        "lastEditedBy" : "73d6f7d8-2c7d-4a48-8754-5ce4a97a850f",
        "tags" : [
        ]
      },
      {
        "id" : "cf5f433a-0039-4827-8b34-4d62f9c9947f",
        "parentId" : "8392ebd3-e1f3-4ad3-9eaf-0610acb5815e",
        "authorId" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "body" : "+1 to this and the above comment",
        "createdAt" : "2019-04-20T19:45:09Z",
        "updatedAt" : "2019-04-21T08:07:16Z",
        "lastEditedBy" : "ab55dc5f-f626-43b1-ba83-3d8843d79a45",
        "tags" : [
        ]
      },
      {
        "id" : "dd05fbdc-dfad-4cef-be7c-c720895ed416",
        "parentId" : "8392ebd3-e1f3-4ad3-9eaf-0610acb5815e",
        "authorId" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "body" : "Is there a way to make `failTaskOnFailedTests: true` the default so we don't have to add it to each job?",
        "createdAt" : "2019-04-20T19:54:04Z",
        "updatedAt" : "2019-04-21T08:07:16Z",
        "lastEditedBy" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "tags" : [
        ]
      },
      {
        "id" : "e9071887-6e14-4c7e-8d28-87f10b819d86",
        "parentId" : "8392ebd3-e1f3-4ad3-9eaf-0610acb5815e",
        "authorId" : "73d6f7d8-2c7d-4a48-8754-5ce4a97a850f",
        "body" : "Not sure, but you've fixed the issue so marking as resolved",
        "createdAt" : "2019-04-22T16:39:51Z",
        "updatedAt" : "2019-04-22T16:39:52Z",
        "lastEditedBy" : "73d6f7d8-2c7d-4a48-8754-5ce4a97a850f",
        "tags" : [
        ]
      }
    ],
    "commit" : "f402a691a9c99e0ba2e090d4f8269ea81aac1a50",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +222,226 @@    inputs:\n      testResultsFiles: '**/test-*.xml'\n      testRunTitle: 'Publish test results for PyPy3'\n      failTaskOnFailedTests: true"
  },
  {
    "id" : "4649d7fa-2c6c-4b07-bce3-aa06f5dc9076",
    "prId" : 12594,
    "prUrl" : "https://github.com/numpy/numpy/pull/12594#pullrequestreview-229138107",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "826530b4-54b9-4a09-be67-a4135580f492",
        "parentId" : null,
        "authorId" : "73d6f7d8-2c7d-4a48-8754-5ce4a97a850f",
        "body" : "let's add `continueOnError: true` so that failures can be nicely summarized with the next publication step\r\n\r\nThis is a recent change in our Azure CI, so probably wasn't in the example code before",
        "createdAt" : "2019-04-20T01:26:52Z",
        "updatedAt" : "2019-04-21T08:07:16Z",
        "lastEditedBy" : "73d6f7d8-2c7d-4a48-8754-5ce4a97a850f",
        "tags" : [
        ]
      },
      {
        "id" : "3711f5ad-66d4-436e-b86c-45ddbb7fc2b5",
        "parentId" : "826530b4-54b9-4a09-be67-a4135580f492",
        "authorId" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "body" : "ok",
        "createdAt" : "2019-04-20T19:58:17Z",
        "updatedAt" : "2019-04-21T08:07:16Z",
        "lastEditedBy" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "tags" : [
        ]
      },
      {
        "id" : "cf4cc72a-15d4-4c65-a585-46e39d377a50",
        "parentId" : "826530b4-54b9-4a09-be67-a4135580f492",
        "authorId" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "body" : "Either `failTaskOnFailedTests: true` or `continueOnError: true` is causing CI to pass even though [testing returns 1](https://dev.azure.com/numpy/numpy/_build/results?buildId=3018&view=logs&jobId=b18cf24a-3d78-5967-8f9a-813d25a10c78)",
        "createdAt" : "2019-04-21T05:39:34Z",
        "updatedAt" : "2019-04-21T08:07:16Z",
        "lastEditedBy" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "tags" : [
        ]
      },
      {
        "id" : "e43ec254-e377-45a7-873a-feb62088c0a6",
        "parentId" : "826530b4-54b9-4a09-be67-a4135580f492",
        "authorId" : "73d6f7d8-2c7d-4a48-8754-5ce4a97a850f",
        "body" : "They both conspire to allow that to happen--any kind of error in the build / test stage is ignored apart from a yellow warning marker & continuation to the next Azure stage is allowed.\r\n\r\nThe Azure job will only fail at the test publication stage if the test result files contain a report of a failed test, but the linear algebra backend error didn't prevent the tests from passing.\r\n\r\nMaybe there's a way to improve granularity even more there, but maybe we should just focus on having the PyPy job consistent with the other Azure entries in this PR, which I think it is now.",
        "createdAt" : "2019-04-22T16:45:10Z",
        "updatedAt" : "2019-04-22T16:45:10Z",
        "lastEditedBy" : "73d6f7d8-2c7d-4a48-8754-5ce4a97a850f",
        "tags" : [
        ]
      }
    ],
    "commit" : "f402a691a9c99e0ba2e090d4f8269ea81aac1a50",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +217,221 @@  steps:\n  - script: source tools/pypy-test.sh\n    displayName: 'Run PyPy3 Build / Tests'\n    continueOnError: true\n  - task: PublishTestResults@2"
  },
  {
    "id" : "45744a04-c61d-4f22-9b4c-7d860f61607b",
    "prId" : 13019,
    "prUrl" : "https://github.com/numpy/numpy/pull/13019#pullrequestreview-207646689",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "56591881-9b36-4397-8245-c27da37d3f9c",
        "parentId" : null,
        "authorId" : "73d6f7d8-2c7d-4a48-8754-5ce4a97a850f",
        "body" : "we don't have Python 2 in development Windows Azure CI so careful with this on backport I suppose",
        "createdAt" : "2019-02-23T03:23:55Z",
        "updatedAt" : "2019-02-25T21:35:10Z",
        "lastEditedBy" : "73d6f7d8-2c7d-4a48-8754-5ce4a97a850f",
        "tags" : [
        ]
      },
      {
        "id" : "6221d4af-9dd3-482b-9408-e8b157912ee7",
        "parentId" : "56591881-9b36-4397-8245-c27da37d3f9c",
        "authorId" : "73d6f7d8-2c7d-4a48-8754-5ce4a97a850f",
        "body" : "Actually, I conditionally restricted this to Python 3.6 recently, so the usage of `print()` should only be \"ok\".",
        "createdAt" : "2019-02-25T21:38:04Z",
        "updatedAt" : "2019-02-25T21:38:05Z",
        "lastEditedBy" : "73d6f7d8-2c7d-4a48-8754-5ce4a97a850f",
        "tags" : [
        ]
      }
    ],
    "commit" : "b90cbbad4e0d3e31c7ae1e7cfdc1932c3ccb396b",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +179,183 @@    displayName: 'Build NumPy'\n  - bash: |\n      pushd . && cd .. && target=$(python -c \"import numpy, os; print(os.path.abspath(os.path.join(os.path.dirname(numpy.__file__), '.libs')))\") && popd\n      pip download -d destination --only-binary --no-deps numpy==1.14\n      cd destination && unzip numpy*.whl && cp numpy/.libs/*.dll $target"
  },
  {
    "id" : "ad85b838-8c37-4eab-ae55-41ad64788ca0",
    "prId" : 13603,
    "prUrl" : "https://github.com/numpy/numpy/pull/13603#pullrequestreview-240710761",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ca8b09d5-d33c-417a-8610-105f83a084ed",
        "parentId" : null,
        "authorId" : "73d6f7d8-2c7d-4a48-8754-5ce4a97a850f",
        "body" : "A little gruesome, but it works",
        "createdAt" : "2019-05-21T20:58:03Z",
        "updatedAt" : "2019-05-22T03:24:45Z",
        "lastEditedBy" : "73d6f7d8-2c7d-4a48-8754-5ce4a97a850f",
        "tags" : [
        ]
      },
      {
        "id" : "7b0e1857-80c6-49ef-97e0-524c9bdd92a8",
        "parentId" : "ca8b09d5-d33c-417a-8610-105f83a084ed",
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "I think it would be better to break the long line with `\\` continuation characters. Leading space on the following line will be ignored, so you can indent it. ",
        "createdAt" : "2019-05-21T22:41:19Z",
        "updatedAt" : "2019-05-22T03:24:45Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "779062fd-bd17-4693-b42d-caa4f7f874bc",
        "parentId" : "ca8b09d5-d33c-417a-8610-105f83a084ed",
        "authorId" : "73d6f7d8-2c7d-4a48-8754-5ce4a97a850f",
        "body" : "Ok, I pushed that change in, but in a separate commit because I had a lot of formatting issues with that command. It gets used on multiple platforms / shells, and sometimes inside of other quotes, etc.",
        "createdAt" : "2019-05-21T22:54:02Z",
        "updatedAt" : "2019-05-22T03:24:45Z",
        "lastEditedBy" : "73d6f7d8-2c7d-4a48-8754-5ce4a97a850f",
        "tags" : [
        ]
      },
      {
        "id" : "c0d16383-9220-4614-86ef-c4cbf9d49c90",
        "parentId" : "ca8b09d5-d33c-417a-8610-105f83a084ed",
        "authorId" : "73d6f7d8-2c7d-4a48-8754-5ce4a97a850f",
        "body" : "Yeah, the failures are showing up already. I think I tried quite a few permutations and ultimately went with what worked which was a single-line approach.",
        "createdAt" : "2019-05-21T23:26:05Z",
        "updatedAt" : "2019-05-22T03:24:45Z",
        "lastEditedBy" : "73d6f7d8-2c7d-4a48-8754-5ce4a97a850f",
        "tags" : [
        ]
      },
      {
        "id" : "2d23cfd9-50b9-4176-957f-6aed5a90c355",
        "parentId" : "ca8b09d5-d33c-417a-8610-105f83a084ed",
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Shame, should work with yml. I wonder if putting the rhs in quotes would do it? Can make the experiment after this goes in.",
        "createdAt" : "2019-05-22T00:42:22Z",
        "updatedAt" : "2019-05-22T03:24:45Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      },
      {
        "id" : "ef58c44a-36c2-4462-91a8-942709fb3c7e",
        "parentId" : "ca8b09d5-d33c-417a-8610-105f83a084ed",
        "authorId" : "73d6f7d8-2c7d-4a48-8754-5ce4a97a850f",
        "body" : "Alright, I removed the second revision commit. I think I played with quotes too with little success. ",
        "createdAt" : "2019-05-22T03:27:15Z",
        "updatedAt" : "2019-05-22T03:27:15Z",
        "lastEditedBy" : "73d6f7d8-2c7d-4a48-8754-5ce4a97a850f",
        "tags" : [
        ]
      },
      {
        "id" : "def12486-bd94-47c7-ade2-ecec6da74197",
        "parentId" : "ca8b09d5-d33c-417a-8610-105f83a084ed",
        "authorId" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "body" : "Probably a script to execute the command would be better but a bit more complicated.",
        "createdAt" : "2019-05-22T15:27:57Z",
        "updatedAt" : "2019-05-22T15:27:58Z",
        "lastEditedBy" : "e6b1ca39-8ea5-45f7-ae52-a080cee1181b",
        "tags" : [
        ]
      }
    ],
    "commit" : "49edd6bd303ee489ba9fa492e69163280e890ae5",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +10,14 @@  # to match numpy-wheels repo\n  OpenBLAS_version: 0.3.7.dev\n  TEST_GET_CONFIG: import numpy, ctypes; dll = ctypes.CDLL(numpy.core._multiarray_umath.__file__); get_config = dll.openblas_get_config; get_config.restype=ctypes.c_char_p; res = get_config(); print('OpenBLAS get_config returned', str(res)); assert b'OpenBLAS $(OpenBLAS_version)' in res\n\njobs:"
  },
  {
    "id" : "e68ba922-9b3b-4dca-8d16-3e33a833c3a4",
    "prId" : 13603,
    "prUrl" : "https://github.com/numpy/numpy/pull/13603#pullrequestreview-240296362",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b98d55c1-5cb0-47e1-85bc-fc4a6c757c78",
        "parentId" : null,
        "authorId" : "73d6f7d8-2c7d-4a48-8754-5ce4a97a850f",
        "body" : "For the version numbering confusion see: https://github.com/MacPython/openblas-libs/issues/4\r\n\r\nSo `0.3.5-...` actually means `0.3.7.dev`\r\n\r\nThe commit hash after the character `g` is the correct OpenBLAS develop branch commit, but we should clean this up in our ecosystem in the future. For now, all the more reason to double check the true version with ctypes.",
        "createdAt" : "2019-05-21T20:59:41Z",
        "updatedAt" : "2019-05-22T03:24:45Z",
        "lastEditedBy" : "73d6f7d8-2c7d-4a48-8754-5ce4a97a850f",
        "tags" : [
        ]
      }
    ],
    "commit" : "49edd6bd303ee489ba9fa492e69163280e890ae5",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +28,32 @@           mkdir openblas && cd openblas && \\\n           wget https://3f23b170c54c2533c070-1c8a9b3114517dc5fe17b7c3f8c63a43.ssl.cf2.rackcdn.com/openblas-v0.3.5-274-g6a8b4269-manylinux1_i686.tar.gz && \\\n           tar zxvf openblas-v0.3.5-274-g6a8b4269-manylinux1_i686.tar.gz && \\\n           cp -r ./usr/local/lib/* /usr/lib && \\\n           cp ./usr/local/include/* /usr/include && \\"
  },
  {
    "id" : "4f274d94-c0f1-457e-bf40-235489eb8905",
    "prId" : 13603,
    "prUrl" : "https://github.com/numpy/numpy/pull/13603#pullrequestreview-240296362",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cf44e087-30a2-4842-9318-b752a47daf3e",
        "parentId" : null,
        "authorId" : "73d6f7d8-2c7d-4a48-8754-5ce4a97a850f",
        "body" : "this kind of thing is needed now because we need to import NumPy after running runtests.py",
        "createdAt" : "2019-05-21T21:01:00Z",
        "updatedAt" : "2019-05-22T03:24:45Z",
        "lastEditedBy" : "73d6f7d8-2c7d-4a48-8754-5ce4a97a850f",
        "tags" : [
        ]
      }
    ],
    "commit" : "49edd6bd303ee489ba9fa492e69163280e890ae5",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +32,36 @@           cp ./usr/local/include/* /usr/include && \\\n           cd ../numpy && \\\n           python3 -m pip install . && \\\n           F77=gfortran-5 F90=gfortran-5 \\\n           CFLAGS='-UNDEBUG -std=c99' python3 runtests.py -n --mode=full -- -rsx --junitxml=junit/test-results.xml && \\"
  },
  {
    "id" : "6ddeb436-120f-46e2-a59a-40225a57dc0d",
    "prId" : 13603,
    "prUrl" : "https://github.com/numpy/numpy/pull/13603#pullrequestreview-240296362",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "afdfa4df-d6c8-49b1-8a48-df96a6c15779",
        "parentId" : null,
        "authorId" : "73d6f7d8-2c7d-4a48-8754-5ce4a97a850f",
        "body" : "discovered as a result of probing the OpenBLAS version; our distributed wheels won't match 0.3.7.dev just yet",
        "createdAt" : "2019-05-21T21:01:49Z",
        "updatedAt" : "2019-05-22T03:24:45Z",
        "lastEditedBy" : "73d6f7d8-2c7d-4a48-8754-5ce4a97a850f",
        "tags" : [
        ]
      }
    ],
    "commit" : "49edd6bd303ee489ba9fa492e69163280e890ae5",
    "line" : 58,
    "diffHunk" : "@@ -1,1 +109,113 @@  # install matplotlib to avoid pip install of older numpy\n  - script: python -m pip install matplotlib\n    displayName: 'Install matplotlib before refguide run'\n  - script: python runtests.py -g --refguide-check\n    displayName: 'Run Refuide Check'"
  },
  {
    "id" : "123f3b35-3b29-48ec-9180-1b9d9e7ab52e",
    "prId" : 14771,
    "prUrl" : "https://github.com/numpy/numpy/pull/14771#pullrequestreview-307095933",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5b12b5d7-5e9d-4796-af84-87ad68fd80ce",
        "parentId" : null,
        "authorId" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "body" : "This change is enough to fix the macOS failure",
        "createdAt" : "2019-10-25T09:47:21Z",
        "updatedAt" : "2019-10-26T07:31:25Z",
        "lastEditedBy" : "919d650d-5f9e-4069-90f7-968e2cf7bb16",
        "tags" : [
        ]
      }
    ],
    "commit" : "955b2906c6da37844b0ee54b8a53850cf5df199f",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +65,69 @@      # azure config for mac os -- Microsoft has indicated\n      # they will patch this issue\n      vmImage: macOS-10.14\n    steps:\n    # the @0 refers to the (major) version of the *task* on Microsoft's"
  }
]