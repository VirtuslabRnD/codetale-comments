[
  {
    "id" : "04a3e4c9-3d47-496f-88d7-3dfc26b79374",
    "prId" : 9780,
    "prUrl" : "https://github.com/digital-asset/daml/pull/9780",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5d56801f-8199-43b3-8d34-aad57ccf431e",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "looking at this I wonder if we might be screwing yourself over with path conversion somewhere. I vaguely recall that bash‚Äôs automatic path conversion caused very weird issues in the past in a few places and the easiest solution was to just use powershell for those tasks.",
        "createdAt" : "2021-05-21T17:46:18Z",
        "updatedAt" : "2021-05-21T17:46:24Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "d27caa8f-aa13-4989-8a80-23c708cb34c3",
        "parentId" : "5d56801f-8199-43b3-8d34-aad57ccf431e",
        "authorId" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "body" : "There is a bad interaction between Bash escaping and YAML escaping: lines like\r\n```bash\r\n$(Build.StagingDirectory)/test.exe\r\n```\r\nwill get mangled because Azure YAML substitution goes first, so Bash sees\r\n```bash\r\nC:\\Path\\With\\Backslashes/test.exe\r\n```\r\nand it interprets the backslashes as escaping characters, yielding\r\n```bash\r\nC:PathWithBackslashes/test.exe\r\n```\r\nwhich does not exist. Adding single quotes around the YAML substitution makes it look a bit weird from a Bash perspective (single quotes meaning no substitution) but make this work properly as the YAML substitution ignores the single quotes, but the single quotes do tell Bash to not interpret the backslashes as escape characters.\r\n\r\nIf you were thinking of another issue, then I'm not (yet) aware of it.",
        "createdAt" : "2021-05-24T13:09:14Z",
        "updatedAt" : "2021-05-24T13:09:14Z",
        "lastEditedBy" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "tags" : [
        ]
      }
    ],
    "commit" : "266ebda27310b98d562fcb2aa7be92705f3c9e85",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +62,66 @@      ls -l '$(Build.StagingDirectory)'\\\\test-signing\\\\installer.exe\n      \"/C/Program Files/dotnet/dotnet.exe\" tool install --global AzureSignTool\n      ls -l /C/Users/u/.dotnet/tools/azuresigntool\n      /C/Users/u/.dotnet/tools/azuresigntool sign \\\n        --azure-key-vault-url \"$AZURE_KEY_VAULT_URL\" \\"
  },
  {
    "id" : "489c43bf-954c-4ae6-8a7d-222df057ed52",
    "prId" : 9166,
    "prUrl" : "https://github.com/digital-asset/daml/pull/9166",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8c1b6533-ef9e-4ba5-8289-748f2a7b8412",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "I‚Äôm starting to wonder whether I should write a linter for azure pipelines configs :slightly_smiling_face: ",
        "createdAt" : "2021-03-17T09:23:17Z",
        "updatedAt" : "2021-03-17T09:23:29Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      }
    ],
    "commit" : "ab9f49bd9d3fcf1499fe10528d738dfdf7757888",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +79,83 @@        artifactName: linux-release\n        targetPath: $(Build.StagingDirectory)/release-artifacts\n      condition: and(succeeded(), not(eq(variables['skip-github'], 'TRUE')))\n    - task: DownloadPipelineArtifact@0\n      inputs:"
  },
  {
    "id" : "4e0621e3-24be-42a4-8690-8884d4b129cc",
    "prId" : 9071,
    "prUrl" : "https://github.com/digital-asset/daml/pull/9071",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a89d7319-8eb2-4545-9dcd-ec3f06bdaa2d",
        "parentId" : null,
        "authorId" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "body" : "I'm really not sure what kind of directory merging `DownloadPipelineArtifact@0` does if say both `linux-release` and `macos-release` have a `github` folder.\r\n\r\nA possible way to test this would be to run a test commit that:\r\n1. Considers itself a release by tricking the check_release job\r\n2. Disabling the Maven/npm push in build-unix\r\n2. Stops the release process after downloading the artifacts, and instead of all the pushing just publishes its `StagingDirectory/release-artifacts` as a new artifact, so we can inspect and check that all the files are there.",
        "createdAt" : "2021-03-11T10:12:22Z",
        "updatedAt" : "2021-03-11T10:15:54Z",
        "lastEditedBy" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "tags" : [
        ]
      },
      {
        "id" : "c939232b-da66-4317-aab8-62f120a8cdc8",
        "parentId" : "a89d7319-8eb2-4545-9dcd-ec3f06bdaa2d",
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "Sorry should have been clearer, I tested this by adding a dummy step to `build.yml` which downloaded all of them and directories got merged correctly.",
        "createdAt" : "2021-03-11T10:15:31Z",
        "updatedAt" : "2021-03-11T10:15:54Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "97936b16-40d6-4dd4-ae65-cc98d93cc7e7",
        "parentId" : "a89d7319-8eb2-4545-9dcd-ec3f06bdaa2d",
        "authorId" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "body" : ":+1:",
        "createdAt" : "2021-03-11T10:20:12Z",
        "updatedAt" : "2021-03-11T10:20:12Z",
        "lastEditedBy" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "tags" : [
        ]
      }
    ],
    "commit" : "94e93e012902f624f80cb802e8e042addbd18acb",
    "line" : 96,
    "diffHunk" : "@@ -1,1 +98,102 @@        echo \"$GPG_KEY\" | base64 -d > $KEY_FILE\n        gpg --homedir $GPG_DIR --no-tty --quiet --import $KEY_FILE\n        cd $(Build.StagingDirectory)/release-artifacts/github\n        sha256sum $(find . -type f | sort) > sha256sums\n        # Note: relies on our release artifacts not having spaces in their"
  },
  {
    "id" : "43432708-857b-4a34-8d4d-a7091b067b35",
    "prId" : 8752,
    "prUrl" : "https://github.com/digital-asset/daml/pull/8752",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d712b3b6-63df-4028-9be2-cb96e086c972",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "we probably want to keep this and delete the rest now that we have an actual oracle job that uses the credentials.",
        "createdAt" : "2021-02-05T18:47:03Z",
        "updatedAt" : "2021-02-08T18:41:46Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "8afe4b3e-1730-4efd-beb6-390f8ee723dc",
        "parentId" : "d712b3b6-63df-4028-9be2-cb96e086c972",
        "authorId" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "body" : "üëç ",
        "createdAt" : "2021-02-08T18:41:59Z",
        "updatedAt" : "2021-02-08T18:42:00Z",
        "lastEditedBy" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "tags" : [
        ]
      }
    ],
    "commit" : "55bc53c15efbc3f6ecb3dc8563253144c09d9b80",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +198,202 @@        push daml-script-runner $(script-runner).asc\n      env:\n        AUTH: $(ARTIFACTORY_USERNAME):$(ARTIFACTORY_PASSWORD)\n      condition: not(eq(variables['skip-github'], 'TRUE'))\n    - template: ci/bash-lib.yml"
  },
  {
    "id" : "258366c5-b666-45e8-91c2-3f11f37b3706",
    "prId" : 8150,
    "prUrl" : "https://github.com/digital-asset/daml/pull/8150",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b445fe23-6116-4475-ad80-67409fa0caa0",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "https://hackage.haskell.org/package/acme-php-0.0.3/docs/Prelude-PHP.html#t:Bool",
        "createdAt" : "2020-12-03T13:37:30Z",
        "updatedAt" : "2020-12-03T13:37:30Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "ee65a714-a536-4307-b3e9-434122070bb9",
        "parentId" : "b445fe23-6116-4475-ad80-67409fa0caa0",
        "authorId" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "body" : "I believe in this case \"Skipped\" and \"Canceled\" may also be valid values, but unfortunately the documentation doesn't make it quite clear to me.",
        "createdAt" : "2020-12-03T14:14:33Z",
        "updatedAt" : "2020-12-03T14:14:33Z",
        "lastEditedBy" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "tags" : [
        ]
      }
    ],
    "commit" : "f2ddd669d7f1b1a53fc1a7dbf0c9b3ff5b746b93",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +807,811 @@              msg=\"has failed. Please investigate.\"\n              ;;\n            *)\n              # Should not be reached, but who knows?\n              msg=\"has completed with status $(status). See <https://github.com/digital-asset/daml/blob/master/release/RELEASE.md|RELEASE.md> for what to do next.\""
  },
  {
    "id" : "77643b2f-2a3c-4aa7-9563-5e68e48b9a8b",
    "prId" : 7178,
    "prUrl" : "https://github.com/digital-asset/daml/pull/7178",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3d7f911f-9e3e-474c-95ec-8879c880e1a3",
        "parentId" : null,
        "authorId" : "181bcece-33df-41af-887d-5d5f51beb543",
        "body" : "Maybe add a `-f` in here so it fails properly.",
        "createdAt" : "2020-08-19T09:28:39Z",
        "updatedAt" : "2020-08-19T11:18:05Z",
        "lastEditedBy" : "181bcece-33df-41af-887d-5d5f51beb543",
        "tags" : [
        ]
      },
      {
        "id" : "26700c6f-3138-4dde-ac0c-a70971850276",
        "parentId" : "3d7f911f-9e3e-474c-95ec-8879c880e1a3",
        "authorId" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "body" : "It doesn't, though, because Bash doesn't propagate errors through pipes. You just end up with an empty `PR`. Maybe I should check for that? ü§î",
        "createdAt" : "2020-08-19T10:04:56Z",
        "updatedAt" : "2020-08-19T11:18:05Z",
        "lastEditedBy" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "tags" : [
        ]
      },
      {
        "id" : "c0c1b336-9707-4912-a7cd-caa1b2a45e7e",
        "parentId" : "3d7f911f-9e3e-474c-95ec-8879c880e1a3",
        "authorId" : "181bcece-33df-41af-887d-5d5f51beb543",
        "body" : "It does if you `set -o pipefail`, which you have, doesn't it?",
        "createdAt" : "2020-08-19T10:25:55Z",
        "updatedAt" : "2020-08-19T11:18:05Z",
        "lastEditedBy" : "181bcece-33df-41af-887d-5d5f51beb543",
        "tags" : [
        ]
      },
      {
        "id" : "a9ec5a58-706f-4248-88a9-0e0681854cb1",
        "parentId" : "3d7f911f-9e3e-474c-95ec-8879c880e1a3",
        "authorId" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "body" : "Not in a subshell. `-o pipefail` works for pipes in the current script but in my experience (and I tested it for this one) it doesn't in subshells. Or maybe it is that Bash doesn't propagate errors through string interpolation? Not quite sure what the actual issue is, but it does succeed on that statement and sets the variable to an empty string. (I think; now that I say it I did not try to differentiate between empty string and unset.)",
        "createdAt" : "2020-08-19T11:03:30Z",
        "updatedAt" : "2020-08-19T11:18:05Z",
        "lastEditedBy" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "tags" : [
        ]
      },
      {
        "id" : "77a62933-e0dc-45f1-8341-5aadc3c0eec1",
        "parentId" : "3d7f911f-9e3e-474c-95ec-8879c880e1a3",
        "authorId" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "body" : "```\r\nbash-3.2$ set -euo pipefail\r\nbash-3.2$ echo \"hello $(exit 1) world\"\r\nhello  world\r\nbash-3.2$ \r\n```",
        "createdAt" : "2020-08-19T11:04:41Z",
        "updatedAt" : "2020-08-19T11:18:05Z",
        "lastEditedBy" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "tags" : [
        ]
      },
      {
        "id" : "fbbb8445-7076-4bd5-a7f6-770601ad2d7c",
        "parentId" : "3d7f911f-9e3e-474c-95ec-8879c880e1a3",
        "authorId" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "body" : "ü§î\r\nThe more I test this the more confused I get.",
        "createdAt" : "2020-08-19T11:09:33Z",
        "updatedAt" : "2020-08-19T11:18:05Z",
        "lastEditedBy" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "tags" : [
        ]
      },
      {
        "id" : "e5bcc02f-d1f5-4342-91d1-9ed5b837f0f8",
        "parentId" : "3d7f911f-9e3e-474c-95ec-8879c880e1a3",
        "authorId" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "body" : "So Bash does seem to fil as expected now. I'm pretty sure I tested it about an hour ago and it didn't, but ü§∑ . Thinking more about it, though, in this case, I do not want it to fail, as the Slack notification is still useful even if the script does not manage to get the PR number.",
        "createdAt" : "2020-08-19T11:15:16Z",
        "updatedAt" : "2020-08-19T11:18:05Z",
        "lastEditedBy" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "tags" : [
        ]
      },
      {
        "id" : "faac9fbe-10f6-4638-b40d-619dfd50e007",
        "parentId" : "3d7f911f-9e3e-474c-95ec-8879c880e1a3",
        "authorId" : "181bcece-33df-41af-887d-5d5f51beb543",
        "body" : "Subshells are not pipes.\r\n\r\n```\r\n$ ((exit 1) | echo 'hello, world'); echo $?\r\nhello, world\r\n0\r\n$ (set -o pipefail; (exit 1) | echo 'hello, world'); echo $?\r\nhello, world\r\n1\r\n```\r\n",
        "createdAt" : "2020-08-19T11:39:33Z",
        "updatedAt" : "2020-08-19T11:39:33Z",
        "lastEditedBy" : "181bcece-33df-41af-887d-5d5f51beb543",
        "tags" : [
        ]
      },
      {
        "id" : "9df6897b-4b26-4fb1-a0c4-bc9de1649494",
        "parentId" : "3d7f911f-9e3e-474c-95ec-8879c880e1a3",
        "authorId" : "181bcece-33df-41af-887d-5d5f51beb543",
        "body" : "That said, I like your fix that just reports anyway. üôÇ ",
        "createdAt" : "2020-08-19T11:40:21Z",
        "updatedAt" : "2020-08-19T11:40:21Z",
        "lastEditedBy" : "181bcece-33df-41af-887d-5d5f51beb543",
        "tags" : [
        ]
      }
    ],
    "commit" : "2c7b41d95fa7fc6ae0e20ad4ecc3fab080c784e6",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +803,807 @@\n          AUTH=\"$(get-gh-auth-header)\"\n          PR=$(curl -H \"$AUTH\" \\\n                    -H \"Accept: application/vnd.github.groot-preview+json\" \\\n                    -s -f \\"
  },
  {
    "id" : "975e4e3b-538e-428e-a044-98ce7811fd61",
    "prId" : 7178,
    "prUrl" : "https://github.com/digital-asset/daml/pull/7178",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "38a9497d-349e-4067-ab82-b8a7480c89a2",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "do you care about the newline? If not `true` seems like a more natural choice here.",
        "createdAt" : "2020-08-20T06:56:55Z",
        "updatedAt" : "2020-08-20T06:57:03Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "0ecc37f7-f99b-42b2-972f-7d3adb1872b8",
        "parentId" : "38a9497d-349e-4067-ab82-b8a7480c89a2",
        "authorId" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "body" : "I don't. I keep forgetting about `true` for some reason. Given that it's already merged I don't think this is worth changing, but I'll try to keep it in mind next time.",
        "createdAt" : "2020-08-20T10:02:08Z",
        "updatedAt" : "2020-08-20T10:02:08Z",
        "lastEditedBy" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "tags" : [
        ]
      },
      {
        "id" : "3165691a-cb20-4d30-9ca1-5064132c5910",
        "parentId" : "38a9497d-349e-4067-ab82-b8a7480c89a2",
        "authorId" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "body" : "Also note that the newline is actually discarded by the assignment here:\r\n```\r\nbash-3.2$ a=$(fail || echo \"\")\r\nbash: fail: command not found\r\nbash-3.2$ b=$(fail || true)\r\nbash: fail: command not found\r\nbash-3.2$ declare -p a\r\ndeclare -- a=\"\"\r\nbash-3.2$ declare -p b\r\ndeclare -- b=\"\"\r\nbash-3.2$ \r\n```",
        "createdAt" : "2020-08-20T10:04:43Z",
        "updatedAt" : "2020-08-20T10:04:44Z",
        "lastEditedBy" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "tags" : [
        ]
      }
    ],
    "commit" : "2c7b41d95fa7fc6ae0e20ad4ecc3fab080c784e6",
    "line" : 37,
    "diffHunk" : "@@ -1,1 +808,812 @@                    \"https://api.github.com/repos/digital-asset/daml/commits/$(git rev-parse HEAD)/pulls\" \\\n               | jq '.[0].number' \\\n               || echo \"\")\n          # Note: if we somehow fail to resolve the PR number from the GitHub\n          # API, there is still value in getting the notification on Slack, as"
  },
  {
    "id" : "47a9a549-1d49-426f-8f77-170e3878a471",
    "prId" : 7101,
    "prUrl" : "https://github.com/digital-asset/daml/pull/7101",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "17e30281-ae19-4d75-89c9-e8b9bb65d2d5",
        "parentId" : null,
        "authorId" : "181bcece-33df-41af-887d-5d5f51beb543",
        "body" : "Wait wait wait. Why is there a `$` there at all?\r\n\r\nIt should be `awk '{ print $1 }'`.",
        "createdAt" : "2020-08-12T10:31:25Z",
        "updatedAt" : "2020-08-12T10:31:26Z",
        "lastEditedBy" : "181bcece-33df-41af-887d-5d5f51beb543",
        "tags" : [
        ]
      },
      {
        "id" : "f749d930-4cba-4d33-b05f-e7f24889aea4",
        "parentId" : "17e30281-ae19-4d75-89c9-e8b9bb65d2d5",
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "good catch, https://github.com/digital-asset/daml/pull/7104",
        "createdAt" : "2020-08-12T10:34:24Z",
        "updatedAt" : "2020-08-12T10:34:25Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      }
    ],
    "commit" : "a4f657a4c225f6504324bc900dce6678caa90daf",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +814,818 @@              local message pr_handler\n              message=$1\n              pr_handler=$(head -1 release/rotation | awk '${print $1}')\n              curl -XPOST \\\n                   -i \\"
  },
  {
    "id" : "beba63d9-4ccb-4718-b929-568875a4ba9a",
    "prId" : 7099,
    "prUrl" : "https://github.com/digital-asset/daml/pull/7099",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2d70e84a-2002-403a-a8c7-6fd577d27bf6",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "This will also trigger for manually opened release PRs right? I guess there is no harm in it but it also seems a bit redundant.",
        "createdAt" : "2020-08-12T09:40:57Z",
        "updatedAt" : "2020-08-12T09:55:38Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "7940fe7a-0f68-4f24-9e0e-e10979d3def9",
        "parentId" : "2d70e84a-2002-403a-a8c7-6fd577d27bf6",
        "authorId" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "body" : "Good point. I've updated to condition to match the branch name created by the automated release PRs. It's obviously not completely tamper-proof, but should be good enough to prevent accidental triggers.",
        "createdAt" : "2020-08-12T09:56:29Z",
        "updatedAt" : "2020-08-12T09:56:29Z",
        "lastEditedBy" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "tags" : [
        ]
      }
    ],
    "commit" : "868e3d9241416b515a5f57622514a9e0ea217e84",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +783,787 @@          PR_BRANCH: $(pr.branch)\n\n  - job: notify_release_pr\n    condition: and(not(canceled()),\n                   startsWith(variables['Build.SourceBranchName'], 'auto-release-pr-'),"
  },
  {
    "id" : "ba06c34d-4fbd-4085-ba22-9c6f2b97a4c1",
    "prId" : 7011,
    "prUrl" : "https://github.com/digital-asset/daml/pull/7011",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "207ed6d7-c51e-43fe-a336-5377bed36f7e",
        "parentId" : null,
        "authorId" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "body" : "This step of the release process runs on the trigger commit on the master branch, so the `release/rotation` file is the right one. (As opposed to many steps in the release process that checkout the target commit.)",
        "createdAt" : "2020-08-05T13:30:13Z",
        "updatedAt" : "2020-08-05T16:25:24Z",
        "lastEditedBy" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "tags" : [
        ]
      }
    ],
    "commit" : "9f4599d35cb51733847572c3264d234d481fd349",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +476,480 @@      - bash: |\n          set -euo pipefail\n          pr_handler=$(head -1 release/rotation | awk \"${print $1}\")\n          curl -XPOST \\\n               -i \\"
  },
  {
    "id" : "cac03ff0-e55f-4d63-923c-a0e3b33974d1",
    "prId" : 7011,
    "prUrl" : "https://github.com/digital-asset/daml/pull/7011",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5f179edc-b94c-4c57-9205-0bd7f1f8e826",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "Was this always the case and we just didn‚Äôt hit it so far or did something change?",
        "createdAt" : "2020-08-05T14:22:31Z",
        "updatedAt" : "2020-08-05T16:25:24Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "c4fc6c81-0095-47f4-93a4-e788113c73d3",
        "parentId" : "5f179edc-b94c-4c57-9205-0bd7f1f8e826",
        "authorId" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "body" : "I'm not sure. It's _probably_ a git version change between our GCP-hosted nodes and the Azure ones.\r\n\r\nMaking it work for both seemed like less effort than trying to figure out when I should support which one.",
        "createdAt" : "2020-08-05T15:58:43Z",
        "updatedAt" : "2020-08-05T16:25:24Z",
        "lastEditedBy" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "tags" : [
        ]
      }
    ],
    "commit" : "9f4599d35cb51733847572c3264d234d481fd349",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +526,530 @@        # This series of pipes extracts the `username:password` part.\n        #\n        # It looks like in some cases the credentials get stored separately as\n        # a header instead.\n        if header=$(git config 'http.https://github.com/digital-asset/daml.extraheader'); then"
  },
  {
    "id" : "5d77bf40-7369-4155-aae4-7127b1727e7d",
    "prId" : 7011,
    "prUrl" : "https://github.com/digital-asset/daml/pull/7011",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "aac5dad3-d243-4de4-88b2-9f7564e1e5f4",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "Is `http.https` intentional?",
        "createdAt" : "2020-08-05T14:22:55Z",
        "updatedAt" : "2020-08-05T16:25:24Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "a68a62f1-06ed-49a4-9dcb-d050a568c3e3",
        "parentId" : "aac5dad3-d243-4de4-88b2-9f7564e1e5f4",
        "authorId" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "body" : "The git config format lets you have \"subsections\", for example\r\n```\r\n[branch master]\r\n  remote = ...\r\n[branch temp]\r\n  remote = ...\r\n```\r\nso all the `branch` things have the same structure, but a different name. For the `git config` command, you access them with `section.subsection.attribute`, so `git config branch.master.remote`.\r\n\r\nThere's an `http` section that uses the URL as the subsection, so the file looks like:\r\n```\r\n[http https://github.com/digital-asset/daml]\r\n  extraheader = Authorization: basic username:password\r\n```\r\nI expected I'd need some sort of escaping to include the URL in the `git config` call, but apparently not, despite the presence of a dot in the URL. ü§∑ ",
        "createdAt" : "2020-08-05T16:02:08Z",
        "updatedAt" : "2020-08-05T16:25:24Z",
        "lastEditedBy" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "tags" : [
        ]
      },
      {
        "id" : "05f19898-017a-40fe-9c7e-c334de8412fd",
        "parentId" : "aac5dad3-d243-4de4-88b2-9f7564e1e5f4",
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "ah makes sense, thanks for the explanation!",
        "createdAt" : "2020-08-05T16:18:33Z",
        "updatedAt" : "2020-08-05T16:25:24Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      }
    ],
    "commit" : "9f4599d35cb51733847572c3264d234d481fd349",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +528,532 @@        # It looks like in some cases the credentials get stored separately as\n        # a header instead.\n        if header=$(git config 'http.https://github.com/digital-asset/daml.extraheader'); then\n            AUTH=\"$header\"\n        else"
  },
  {
    "id" : "ed8e83be-14a1-4ce0-b612-585166389cc3",
    "prId" : 6859,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6859",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "21409515-0769-4a54-97d9-ac1cea8a5a9c",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "Does this trigger on both the PR and on master?",
        "createdAt" : "2020-07-24T14:25:08Z",
        "updatedAt" : "2020-07-24T16:33:38Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "a5d823cc-5d3f-4f56-ac4f-0c3f76000cbc",
        "parentId" : "21409515-0769-4a54-97d9-ac1cea8a5a9c",
        "authorId" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "body" : "No, the `notify_user` job never runs on master.",
        "createdAt" : "2020-07-24T14:37:48Z",
        "updatedAt" : "2020-07-24T16:33:38Z",
        "lastEditedBy" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "tags" : [
        ]
      }
    ],
    "commit" : "1dcc002b38f1f101a91dffe08b4ac1a241a94085",
    "line" : 66,
    "diffHunk" : "@@ -1,1 +822,826 @@          }\n\n          if [ \"$(is_release)\" == \"true\" ]; then\n              # releases matter to everyone\n              tell_daml \"$(status)\""
  },
  {
    "id" : "3609f6eb-ea49-4172-afad-e34a75a0718b",
    "prId" : 6709,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6709",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b66ffa99-78b0-451c-9098-0053ede65728",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "This feels a bit off. Shouldn‚Äôt we consider this a blocking check and do something like using a special format for the update PR and match on that on every PR?",
        "createdAt" : "2020-07-13T15:40:59Z",
        "updatedAt" : "2020-07-13T15:41:04Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "27ae597f-9b3f-4514-8581-0613d9fbd28a",
        "parentId" : "b66ffa99-78b0-451c-9098-0053ede65728",
        "authorId" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "body" : "I'm not sure I understand what you mean here. This will trigger an independent build that reports its status to the branch and thus blocks the PR, exactly as if you'd triggered it through the web UI.",
        "createdAt" : "2020-07-13T15:43:43Z",
        "updatedAt" : "2020-07-13T15:43:43Z",
        "lastEditedBy" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "tags" : [
        ]
      },
      {
        "id" : "a909e976-27a8-4b84-85ce-2c295d813b9c",
        "parentId" : "b66ffa99-78b0-451c-9098-0053ede65728",
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "Ah I didn‚Äôt know independent builds were considered blocking. Then this seems reasonable :+1:",
        "createdAt" : "2020-07-13T15:45:08Z",
        "updatedAt" : "2020-07-13T15:45:08Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "3a741af4-7add-4434-bd23-9e9681b7fea9",
        "parentId" : "b66ffa99-78b0-451c-9098-0053ede65728",
        "authorId" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "body" : "My understanding is that:\r\n- We have a set number of builds that GH will wait for specifically; however\r\n- All builds reported for the \"tip\" commit of a PR are part of the PR status;\r\n- Any build reported as anything else than succeeded (i.e. pending or failed) blocks the PR from being merged.\r\n\r\nI'll keep an eye on this when we do the next snapshot.",
        "createdAt" : "2020-07-13T15:58:22Z",
        "updatedAt" : "2020-07-13T15:58:23Z",
        "lastEditedBy" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "tags" : [
        ]
      }
    ],
    "commit" : "b240269f6dcaebd5d2ce956ed89add947842628a",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +553,557 @@        trigger_sha: '$(trigger_sha)'\n\n  - job: compat_versions_pr_trigger_daily\n    dependsOn: compat_versions_pr\n    pool:"
  },
  {
    "id" : "f558bc35-8a8e-402d-b51c-d83382052517",
    "prId" : 6530,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6530",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3b44a71b-f27f-40dc-b1f6-170ea81b03c4",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "Maybe a comment that we do this to remove shared memory created by postgres would be useful in the future?",
        "createdAt" : "2020-06-29T19:19:29Z",
        "updatedAt" : "2020-06-29T19:20:06Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      }
    ],
    "commit" : "e2cfd6d92d22d33601f70cdf8e76e3a3325e4ef7",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +140,144 @@      - template: ci/report-start.yml\n      - checkout: self\n      - bash:\n          for shmid in $(ipcs -m | sed 1,3d | awk '{print $2}' | sed '$d'); do ipcrm -m $shmid; done\n        name: clear_shm"
  },
  {
    "id" : "4dfe3e5b-0fb8-48c8-9da9-37d541881eeb",
    "prId" : 6530,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6530",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2b2b969e-c19e-4f25-b13c-eebd7bd3b0f2",
        "parentId" : null,
        "authorId" : "181bcece-33df-41af-887d-5d5f51beb543",
        "body" : "Can we pull this out into a script which can also be run locally easily when things go to hell? (Perhaps one with a useful name like `release-shared-memory.sh`?)",
        "createdAt" : "2020-06-30T07:42:10Z",
        "updatedAt" : "2020-06-30T07:42:10Z",
        "lastEditedBy" : "181bcece-33df-41af-887d-5d5f51beb543",
        "tags" : [
        ]
      }
    ],
    "commit" : "e2cfd6d92d22d33601f70cdf8e76e3a3325e4ef7",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +141,145 @@      - checkout: self\n      - bash:\n          for shmid in $(ipcs -m | sed 1,3d | awk '{print $2}' | sed '$d'); do ipcrm -m $shmid; done\n        name: clear_shm\n      - bash: |"
  },
  {
    "id" : "7baa01c9-f753-4d16-a4d8-8b0dde40a181",
    "prId" : 6479,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6479",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2634d18a-6d39-4216-a9fc-932bfae34516",
        "parentId" : null,
        "authorId" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "body" : "Note: no need for extra condition checks here, this will only run if `release` has run.",
        "createdAt" : "2020-06-24T13:22:54Z",
        "updatedAt" : "2020-06-24T13:22:54Z",
        "lastEditedBy" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "tags" : [
        ]
      },
      {
        "id" : "cf63f07e-91bc-498f-8fee-204c3c19771d",
        "parentId" : "2634d18a-6d39-4216-a9fc-932bfae34516",
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "Since I wondered that myself: If `release` has finished we‚Äôve uploaded to maven, github releases and the gcp bucket.",
        "createdAt" : "2020-06-24T13:44:06Z",
        "updatedAt" : "2020-06-24T13:53:40Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      }
    ],
    "commit" : "b11c39af056cdb557bed8407e18c515d915a4317",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +479,483 @@  - job: compat_versions_pr\n    dependsOn:\n    - release\n    - check_for_release\n    pool:"
  },
  {
    "id" : "a400934a-61c8-492e-bbda-5509b70b57e3",
    "prId" : 6016,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6016",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b321095c-ebc0-4af9-b1bf-c4cff8626090",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "doesn‚Äôt this break this PR which adds more than one line?",
        "createdAt" : "2020-05-19T17:00:20Z",
        "updatedAt" : "2020-05-19T17:02:11Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "65885442-9357-4b7b-b6b1-a7aa25c03f29",
        "parentId" : "b321095c-ebc0-4af9-b1bf-c4cff8626090",
        "authorId" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "body" : "No, because it also changes more than the 2 release files, so it doesn't get there.",
        "createdAt" : "2020-05-19T17:17:41Z",
        "updatedAt" : "2020-05-19T17:17:41Z",
        "lastEditedBy" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "tags" : [
        ]
      },
      {
        "id" : "f5f8ba68-7e69-4448-8025-832109b4e60c",
        "parentId" : "b321095c-ebc0-4af9-b1bf-c4cff8626090",
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "ah right, thanks for the explanation!",
        "createdAt" : "2020-05-19T17:18:42Z",
        "updatedAt" : "2020-05-19T17:18:42Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      }
    ],
    "commit" : "5f991d71059dcd0bad10906e5ddf2f510803c993",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +299,303 @@\n          if changes_release_files; then\n              if changes_one_line_in_latest; then\n                  setvar is_release true\n                  setvar trigger_sha $(branch_sha)"
  },
  {
    "id" : "69bc75b4-eef7-4bee-b158-5bf44f36d7c5",
    "prId" : 5891,
    "prUrl" : "https://github.com/digital-asset/daml/pull/5891",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2f305754-bb3f-4c5d-b111-d2a0574786d5",
        "parentId" : null,
        "authorId" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "body" : "This only runs on \"individual CI\", i.e. not PRs, which means\r\n- It does not need to worry about Azure running merge commits; the current commit really is the one we're running for.\r\n- This is not tested as part of the PR checks. üôè driven development.",
        "createdAt" : "2020-05-07T10:28:35Z",
        "updatedAt" : "2020-05-07T11:44:20Z",
        "lastEditedBy" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "tags" : [
        ]
      }
    ],
    "commit" : "7f03492dd91f7e57d5b0bfc6d790163fc4243e2d",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +269,273 @@        TEST_SHA=$(cat ci/cron/perf/test_sha)\n        LAST_CHANGES=$(git log -n1 --format=%H daml-lf/scenario-interpreter/src/perf)\n        CURRENT_SHA=$(git rev-parse HEAD)\n        if [ \"$TEST_SHA\" != \"$LAST_CHANGES\" ]; then\n            if [ \"$LAST_CHANGES\" = \"$CURRENT_SHA\" ]; then"
  },
  {
    "id" : "f9b99a1f-9203-4926-b827-d28cb2e30915",
    "prId" : 5723,
    "prUrl" : "https://github.com/digital-asset/daml/pull/5723",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a5604b73-4c0a-4b09-a65e-5325ad3c14fb",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "Shouldn‚Äôt we also enable macos on the daily compat cron job?",
        "createdAt" : "2020-04-27T11:49:36Z",
        "updatedAt" : "2020-04-27T12:46:10Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "31ef80d8-677b-4412-bc02-0befe7aac719",
        "parentId" : "a5604b73-4c0a-4b09-a65e-5325ad3c14fb",
        "authorId" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "body" : "Good catch, thanks. I had thought of that at some point but got lost in YAML.",
        "createdAt" : "2020-04-27T11:54:59Z",
        "updatedAt" : "2020-04-27T12:46:10Z",
        "lastEditedBy" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "tags" : [
        ]
      }
    ],
    "commit" : "d1ff343e9dbb546c7a82b0abde88dfdf0e823f64",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +190,194 @@      - template: ci/report-end.yml\n\n  - job: compatibility_macos\n    dependsOn:\n      - check_for_release"
  },
  {
    "id" : "67bdad51-32d0-4f7c-b714-9a6ae1bd66c4",
    "prId" : 5723,
    "prUrl" : "https://github.com/digital-asset/daml/pull/5723",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "85b9fe2e-688a-4760-b6a7-efa89a7681c8",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "Let‚Äôs leave it like this for now but I wonder if it might make sense to separate building the platform-agnostic artifacts from building the SDK tarball and running the tests. That might make the logic a bit cleaner and we can start running the macos job sooner.",
        "createdAt" : "2020-04-27T11:51:00Z",
        "updatedAt" : "2020-04-27T12:46:10Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      }
    ],
    "commit" : "d1ff343e9dbb546c7a82b0abde88dfdf0e823f64",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +184,188 @@      - template: ci/report-start.yml\n      - checkout: self\n      - template: ci/compatibility.yml\n        parameters:\n          test_flags: '--quick'"
  },
  {
    "id" : "bf4ed554-8582-4c74-8266-783ac9ab07b4",
    "prId" : 5665,
    "prUrl" : "https://github.com/digital-asset/daml/pull/5665",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b992b939-617a-423a-b536-8274db12aa6b",
        "parentId" : null,
        "authorId" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "body" : "Is the Bazel configuration done in the root WORKSPACE going to translate to the nested one?",
        "createdAt" : "2020-04-23T09:36:08Z",
        "updatedAt" : "2020-04-23T10:46:39Z",
        "lastEditedBy" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "tags" : [
        ]
      },
      {
        "id" : "4d9fb977-d65e-4bf9-8596-9d1a1c5cd132",
        "parentId" : "b992b939-617a-423a-b536-8274db12aa6b",
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "Good catch! I‚Äôve added an environment variable and modified the script to write to the bazelrc.local in that directory. Hopefully that should work.",
        "createdAt" : "2020-04-23T09:48:02Z",
        "updatedAt" : "2020-04-23T10:46:39Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      }
    ],
    "commit" : "fae715204e6fbce3b32c31c7d03f3ca3a5de8700",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +192,196 @@          IS_FORK: $(System.PullRequest.IsFork)\n          # to upload to the bazel cache\n          GOOGLE_APPLICATION_CREDENTIALS_CONTENT: $(GOOGLE_APPLICATION_CREDENTIALS_CONTENT)\n      - bash: |\n          set -euo pipefail"
  },
  {
    "id" : "cc853173-9128-471c-b8a5-ed8461a56757",
    "prId" : 4701,
    "prUrl" : "https://github.com/digital-asset/daml/pull/4701",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a9ac2148-e202-4e2e-a16b-5a040f7ee15c",
        "parentId" : null,
        "authorId" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "body" : "Note: `branch_sha` is defined as the current commit when running from master, and as the branch sha (as opposed to the merge sha) on a PR.",
        "createdAt" : "2020-02-25T20:18:01Z",
        "updatedAt" : "2020-02-25T20:18:02Z",
        "lastEditedBy" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "tags" : [
        ]
      }
    ],
    "commit" : "59d4f65b32c73c8985e3acdbc94f295bf949682c",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +256,260 @@          if is_release_commit; then\n              echo \"##vso[task.setvariable variable=is_release;isOutput=true]true\"\n              echo \"##vso[task.setvariable variable=trigger_sha;isOutput=true]$(branch_sha)\"\n              echo \"##vso[task.setvariable variable=release_sha;isOutput=true]$(cat LATEST | awk '{print $1}')\"\n              echo \"##vso[task.setvariable variable=release_tag;isOutput=true]$(cat LATEST | awk '{print $2}')\""
  },
  {
    "id" : "1107abb0-ca37-43dc-bd60-e7a7cbacb6be",
    "prId" : 4611,
    "prUrl" : "https://github.com/digital-asset/daml/pull/4611",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "df16335a-8feb-44ee-962c-25c39df765a1",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "I would strongly recommend to not add that. You have more than enough things on your plate already :slightly_smiling_face: But I‚Äôll leave it to up to you.",
        "createdAt" : "2020-02-19T17:32:52Z",
        "updatedAt" : "2020-02-20T10:17:05Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "a9ad6c05-4e41-4c4f-b43e-c7a51768c81f",
        "parentId" : "df16335a-8feb-44ee-962c-25c39df765a1",
        "authorId" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "body" : "I'm not planning to jump on each of those, but I do want to get a sense for how much of an issue this is, as not everyone reports it when it happens.",
        "createdAt" : "2020-02-20T12:07:45Z",
        "updatedAt" : "2020-02-20T12:07:45Z",
        "lastEditedBy" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "tags" : [
        ]
      }
    ],
    "commit" : "591f4fae040b28817fc7820aad9addc97ad38f39",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +403,407 @@          # backoff to mitigate.\n          BACKOFF=1\n          tell_gary() {\n              curl -XPOST \\\n                   -i \\"
  },
  {
    "id" : "4d40588e-d077-4e47-9cde-d045f7ac952b",
    "prId" : 4611,
    "prUrl" : "https://github.com/digital-asset/daml/pull/4611",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "36dcf190-67ec-4a55-aea7-9aeb9902f94d",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "Do we actually need `git fetch` here or only `git checkout`? I would expect that the branch commit should always be in here already. Maybe that would help make this less flaky and it might also explain why we haven‚Äôt seen this on steps that use the regular Azure checkout step.",
        "createdAt" : "2020-02-19T17:33:37Z",
        "updatedAt" : "2020-02-20T10:17:05Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "e9792bc3-633e-4571-969d-e7b2a3a40e39",
        "parentId" : "36dcf190-67ec-4a55-aea7-9aeb9902f94d",
        "authorId" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "body" : "We _have_ seen this exact issue on steps that use the regular Azure checkout, as that was the reason for putting in this workaround in the first place.\r\n\r\nWe _may_ need git fetch because this is a separate job, which means it may run on a separate machine which may not have fetched this commit yet. But now that you mention it maybe we could just check whether we have the commit before trying to fetch it.",
        "createdAt" : "2020-02-20T10:15:39Z",
        "updatedAt" : "2020-02-20T10:17:05Z",
        "lastEditedBy" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "tags" : [
        ]
      },
      {
        "id" : "0028213f-af8d-4a23-a23a-964ab631d6a3",
        "parentId" : "36dcf190-67ec-4a55-aea7-9aeb9902f94d",
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "> We _have_ seen this exact issue on steps that use the regular Azure checkout, as that was the reason for putting in this workaround in the first place.\r\n\r\nWe have but it seemed like new behavior so maybe whatever change required this in Azure is no longer necessary.",
        "createdAt" : "2020-02-20T10:17:46Z",
        "updatedAt" : "2020-02-20T10:17:47Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "fe50ecee-0fe7-499c-9416-ae208745f91e",
        "parentId" : "36dcf190-67ec-4a55-aea7-9aeb9902f94d",
        "authorId" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "body" : "True. Hopefully the Slack messages will give me some idea of how prevalent this issue is, and whether we need to dig further.",
        "createdAt" : "2020-02-20T12:07:06Z",
        "updatedAt" : "2020-02-20T12:07:07Z",
        "lastEditedBy" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "tags" : [
        ]
      }
    ],
    "commit" : "591f4fae040b28817fc7820aad9addc97ad38f39",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +411,415 @@          }\n          trap tell_gary EXIT\n          while !  git fetch origin $(branch_sha); do\n            if (( $BACKOFF > 500 )); then\n              echo \"Could not get commit $(branch_sha); something is very wrong.\""
  },
  {
    "id" : "8ec0961c-26ac-472b-a9f2-f6f11fb30e89",
    "prId" : 4513,
    "prUrl" : "https://github.com/digital-asset/daml/pull/4513",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cd0261f9-de24-4382-9cf8-7085c534ab49",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "Given that this changes build artifacts, I‚Äôd be more comfortable running `bazel test` with the environment variable set.",
        "createdAt" : "2020-02-19T10:30:21Z",
        "updatedAt" : "2020-02-25T14:08:02Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "4a98ee5e-7ddc-4dd8-8c87-d39488f74604",
        "parentId" : "cd0261f9-de24-4382-9cf8-7085c534ab49",
        "authorId" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "body" : "Makes sense. I'll see if I can add that to the PR build step, so we don't have to wait until we merge it to discover if that breaks things.\r\n\r\nSpolier alert: I had not actually tried running `bazel test` with the env var set, and it does break things. I'll see if I can fix it.",
        "createdAt" : "2020-02-19T12:45:26Z",
        "updatedAt" : "2020-02-25T14:08:02Z",
        "lastEditedBy" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "tags" : [
        ]
      }
    ],
    "commit" : "81246bd2733ace93653cb663dca5a0cdaf7c11e9",
    "line" : 262,
    "diffHunk" : "@@ -1,1 +337,341 @@          eval \"$(./dev-env/bin/dade-assist)\"\n\n          export DAML_SDK_RELEASE_VERSION=$(release_tag)\n          bazel build //release:release\n"
  },
  {
    "id" : "23079e51-fe52-4bc0-bb1e-0e3c3054f005",
    "prId" : 4358,
    "prUrl" : "https://github.com/digital-asset/daml/pull/4358",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6b846390-cffa-4ac3-914a-c40d778328c2",
        "parentId" : null,
        "authorId" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "body" : "`HEAD^2` does not exist for master commits as they have a single parent (squash-merge).",
        "createdAt" : "2020-02-03T16:20:27Z",
        "updatedAt" : "2020-02-03T17:30:33Z",
        "lastEditedBy" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "tags" : [
        ]
      }
    ],
    "commit" : "268976f3ae0f4c09fc8d177ac9f38e6395c59ba3",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +25,29 @@          set -euo pipefail\n          if [ \"$(Build.Reason)\" == \"PullRequest\" ]; then\n              echo \"##vso[task.setvariable variable=branch;isOutput=true]$(git rev-parse 'HEAD^2')\"\n              echo \"##vso[task.setvariable variable=master;isOutput=true]$(git rev-parse 'HEAD^1')\"\n              echo \"##vso[task.setvariable variable=fork_point;isOutput=true]$(git merge-base --fork-point 'HEAD^1' 'HEAD^2')\""
  },
  {
    "id" : "f87cc7e1-e970-4d3b-9bb9-4cea28412133",
    "prId" : 4358,
    "prUrl" : "https://github.com/digital-asset/daml/pull/4358",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "94fcea31-7f3c-40bf-b082-0ed026ccd27a",
        "parentId" : null,
        "authorId" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "body" : "This job doesn't really make sense on master commits as there is no followup action required ‚Äî and build failures are already reported.",
        "createdAt" : "2020-02-03T16:21:21Z",
        "updatedAt" : "2020-02-03T17:30:33Z",
        "lastEditedBy" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "tags" : [
        ]
      }
    ],
    "commit" : "268976f3ae0f4c09fc8d177ac9f38e6395c59ba3",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +498,502 @@\n  - job: notify_user\n    condition: eq(variables['Build.Reason'], 'PullRequest')\n    dependsOn:\n      - git_sha"
  },
  {
    "id" : "b3cfa8a9-5698-4ca2-a6fa-b6f77f06cd5d",
    "prId" : 4144,
    "prUrl" : "https://github.com/digital-asset/daml/pull/4144",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "034f680a-0fe5-4f8a-a8ed-3a05655ecfbd",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "If this keeps being a problem, maybe we can remove `jq` and `gcloud` which don‚Äôt seem to be necessary to get the rerun button to work in case of cancellations and I don‚Äôt think recording build data is crucial.",
        "createdAt" : "2020-01-21T17:23:50Z",
        "updatedAt" : "2020-01-21T17:23:55Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      }
    ],
    "commit" : "818ae24990ad4b42f9c1c240eebf7bf929dc9880",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +364,368 @@          # result of the merge (i.e. this is not using the same commit as the\n          # other jobs in this build). This seems good enough here as all we\n          # really want is the dev-env, and conflicts should be pretty rare\n          # there. It _does_ mean this may fail to catch changes that would\n          # break this job, e.g. incompatible updates of jq or gcloud."
  },
  {
    "id" : "6a09eaed-ec95-483c-b4e9-883beed130cd",
    "prId" : 3323,
    "prUrl" : "https://github.com/digital-asset/daml/pull/3323",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a517cb02-d54e-4315-a389-fcdc7e8308e6",
        "parentId" : null,
        "authorId" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "body" : "```suggestion\r\n          key: $(nix-cache-key) | dQw4w9WgXcQ\r\n```",
        "createdAt" : "2019-11-04T11:47:39Z",
        "updatedAt" : "2019-11-04T11:47:49Z",
        "lastEditedBy" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "tags" : [
        ]
      },
      {
        "id" : "5ef91a5d-7fa8-47eb-ad20-6eb60bd2d201",
        "parentId" : "a517cb02-d54e-4315-a389-fcdc7e8308e6",
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : ":fire:",
        "createdAt" : "2019-11-04T11:51:20Z",
        "updatedAt" : "2019-11-04T11:51:20Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      }
    ],
    "commit" : "8b12e94cf7b2bf55cf63a5b55a0708b7c4c579ad",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +47,51 @@      - task: CacheBeta@0\n        inputs:\n          key: $(nix-cache-key) | v2\n          path: $(nix-cache-path)\n      - bash: |"
  },
  {
    "id" : "f4b89a4d-49e2-4bf3-9a76-22d93aedb585",
    "prId" : 2968,
    "prUrl" : "https://github.com/digital-asset/daml/pull/2968",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bd5e4615-4f71-4909-8cd0-c05f469bec55",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "Just to be sure I understand this correctly (might be worth documenting), this will create separate signature files that will then be automatically picked up by the release process and uploaded to github releases as well?",
        "createdAt" : "2019-09-21T05:35:08Z",
        "updatedAt" : "2019-09-23T21:05:28Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      }
    ],
    "commit" : "f52e8ccbd305580a00451992a0c17ce2136f1396",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +223,227 @@          # Note: relies on our release artifacts not having spaces in their\n          # names. Creates a ${f}.asc with the signature for each $f.\n          for f in *; do\n              gpg --homedir $GPG_DIR -ab $f\n          done"
  },
  {
    "id" : "86bb0969-ca14-4bd4-a219-29d89cc061d9",
    "prId" : 2420,
    "prUrl" : "https://github.com/digital-asset/daml/pull/2420",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0f58c6c6-8ddf-4a0d-b4ed-8bec77724a2d",
        "parentId" : null,
        "authorId" : "0aa8e877-303a-4005-8f07-7003661da2a6",
        "body" : "As I understand the [`--repository_cache` flag](https://bazel.build/designs/2016/09/30/repository-cache.html) this only caches external dependencies, i.e. dependencies specified in `WORKSPACE` or files imported by `WORKSPACE`. So, I don't think `*.bazel` or `BUILD` need to be included in the key. @cocreature am I missing something?",
        "createdAt" : "2019-08-12T11:26:57Z",
        "updatedAt" : "2019-08-12T11:26:57Z",
        "lastEditedBy" : "0aa8e877-303a-4005-8f07-7003661da2a6",
        "tags" : [
        ]
      }
    ],
    "commit" : "cc99c2dafcb2dcc87cab36001fc7ed8ff7cd04bf",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +60,64 @@          fi\n        displayName: restore cache\n      - bash: echo $(git log -n1 --pretty=format:%H azure-pipelines.yml $(find . -name \\*.bazel -or -name \\*.bzl -or -name WORKSPACE -or -name BUILD)) >> $(bazel-repo-cache-key)\n        displayName: bazel repo cache key\n      - task: CacheBeta@0"
  },
  {
    "id" : "43ba507b-5a84-4ec3-8d7d-eab7241fd785",
    "prId" : 2377,
    "prUrl" : "https://github.com/digital-asset/daml/pull/2377",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "db0d3320-2563-4cdf-a418-bbf15d8bf8f0",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "The uncached builds are quite slow here. Can we easily mark this as non-required? I couldn‚Äôt find anything in the Azure docs but maybe I‚Äôm just missing something.\r\nIf not, we probably need to disable this on Monday if nothing has changed until then.",
        "createdAt" : "2019-08-02T09:40:41Z",
        "updatedAt" : "2019-08-02T11:23:53Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "b3c554e2-0ce7-4485-8a35-bd565aea51c9",
        "parentId" : "db0d3320-2563-4cdf-a418-bbf15d8bf8f0",
        "authorId" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "body" : "How slow? macOS builds typically take about 25 minutes, so as long as it's faster than that it should be OK. An easy way to speed those up would be to run them on our own linux pool, which has bigger machines than the Azure-provided ones. Another option would be to use the same logic as in this PR to skip the build entirely if caching fails.",
        "createdAt" : "2019-08-02T09:44:16Z",
        "updatedAt" : "2019-08-02T11:23:53Z",
        "lastEditedBy" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "tags" : [
        ]
      },
      {
        "id" : "ff0ecda6-c64a-415c-9f1a-a6ea56e9729a",
        "parentId" : "db0d3320-2563-4cdf-a418-bbf15d8bf8f0",
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "I think it was around 40 minutes.",
        "createdAt" : "2019-08-02T09:44:58Z",
        "updatedAt" : "2019-08-02T11:23:53Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "469531c7-e964-4237-858f-5574ff8d3ad1",
        "parentId" : "db0d3320-2563-4cdf-a418-bbf15d8bf8f0",
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "Looks, like I was misremembering. It finished in ~20 minutes so it‚Äôs probably fine. However, the workaround doesn‚Äôt seem to work since the cache upload step is failing.",
        "createdAt" : "2019-08-02T09:51:16Z",
        "updatedAt" : "2019-08-02T11:23:53Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "e9cbc55c-957a-4b84-b27e-47603c219100",
        "parentId" : "db0d3320-2563-4cdf-a418-bbf15d8bf8f0",
        "authorId" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "body" : "Looks like this takes about 15 minutes, so well below the macOS one.",
        "createdAt" : "2019-08-02T10:34:06Z",
        "updatedAt" : "2019-08-02T11:23:53Z",
        "lastEditedBy" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "tags" : [
        ]
      }
    ],
    "commit" : "259dbf423c4bdf1b2e9d7a29a78800535a1220c7",
    "line" : 65,
    "diffHunk" : "@@ -1,1 +162,166 @@          tar czf .azure-cache/stack-root.tar.gz -C $HOME .stack\n        displayName: \"Pack cache\"\n        condition: not(eq('true', variables['cacheFailed']))\n      - template: ci/tell-slack-failed.yml\n      - template: ci/report-end.yml"
  },
  {
    "id" : "54ff1812-2b9f-43a8-b746-899fe4679f52",
    "prId" : 1274,
    "prUrl" : "https://github.com/digital-asset/daml/pull/1274",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6a9f0e2a-64e1-4e4f-b94b-1eeb45d07a1a",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "I‚Äôve verified that signing works correctly without the `has_released` check so hopefully it will work properly during a release as well.",
        "createdAt" : "2019-05-21T14:19:18Z",
        "updatedAt" : "2019-05-22T06:46:38Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      }
    ],
    "commit" : "61acee607b0fff6c58ed95a7ec7087a481d863ec",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +110,114 @@    pool:\n      name: 'windows-pool'\n    condition: and(succeeded(), eq(dependencies.Linux.outputs['release.has_released'], 'true'))\n    variables:\n      unsigned-installer: $[ dependencies.Windows.outputs['publish.artifact-unsigned-windows-installer'] ]"
  },
  {
    "id" : "18abead4-3f64-4f63-b528-61da169adddc",
    "prId" : 1274,
    "prUrl" : "https://github.com/digital-asset/daml/pull/1274",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "12d871de-3a45-428d-9c45-aa59da72f6c8",
        "parentId" : null,
        "authorId" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "body" : "Feels a bit weird to be using an `http` call in a signing phase. Any chance you could turn this into an `https` call?",
        "createdAt" : "2019-05-21T15:53:57Z",
        "updatedAt" : "2019-05-22T06:46:38Z",
        "lastEditedBy" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "tags" : [
        ]
      },
      {
        "id" : "761e990f-57e9-4312-9484-4f94f2d53e68",
        "parentId" : "12d871de-3a45-428d-9c45-aa59da72f6c8",
        "authorId" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "body" : "`curl https://timestamp.digicert.com` doesn't seem to work, so I suppose that's off the table. Still feels weird though.",
        "createdAt" : "2019-05-21T16:04:59Z",
        "updatedAt" : "2019-05-22T06:46:38Z",
        "lastEditedBy" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "tags" : [
        ]
      },
      {
        "id" : "5b7bfb0a-fa45-4f00-b82e-c34b07ec4109",
        "parentId" : "12d871de-3a45-428d-9c45-aa59da72f6c8",
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "Yeah I was rather surprised by this but I copied it from the official [Digicert documentation](https://www.digicert.com/code-signing/signcode-signtool-command-line.htm). I took a short look at [RFC 3161](https://www.ietf.org/rfc/rfc3161.txt) which defines the timestamping protocol and it looks like that has a custom signing mechanism so presumably that‚Äôs why using HTTP is reasonable here.",
        "createdAt" : "2019-05-22T06:49:29Z",
        "updatedAt" : "2019-05-22T06:49:30Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      }
    ],
    "commit" : "61acee607b0fff6c58ed95a7ec7087a481d863ec",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +126,130 @@          chmod +x \"$(Build.StagingDirectory)/$INSTALLER\"\n          echo \"$SIGNING_KEY\" | base64 -d > signing_key.pfx\n          MSYS_NO_PATHCONV=1 signtool.exe sign '/f' signing_key.pfx '/fd' sha256 '/tr' \"http://timestamp.digicert.com\" '/v' \"$(Build.StagingDirectory)/$INSTALLER\"\n          rm signing_key.pfx\n          echo \"##vso[task.setvariable variable=artifact-windows-installer;isOutput=true]$INSTALLER\""
  },
  {
    "id" : "092592df-6bfa-48a2-ab37-14928194ff37",
    "prId" : 1274,
    "prUrl" : "https://github.com/digital-asset/daml/pull/1274",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "62b44f41-7e2f-442e-8eff-d412c751248f",
        "parentId" : null,
        "authorId" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "body" : "I don't see this variable being used. Should it be added to the checks of the `release` job?",
        "createdAt" : "2019-05-21T15:56:06Z",
        "updatedAt" : "2019-05-22T06:46:38Z",
        "lastEditedBy" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "tags" : [
        ]
      },
      {
        "id" : "0e26f88e-69b0-4b50-b298-70dd71467c9f",
        "parentId" : "62b44f41-7e2f-442e-8eff-d412c751248f",
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "I‚Äôve just removed it. Given that we set it unconditionally there doesn‚Äôt seem to be a reason to have it.",
        "createdAt" : "2019-05-22T06:49:51Z",
        "updatedAt" : "2019-05-22T06:49:51Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      }
    ],
    "commit" : "61acee607b0fff6c58ed95a7ec7087a481d863ec",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +129,133 @@          rm signing_key.pfx\n          echo \"##vso[task.setvariable variable=artifact-windows-installer;isOutput=true]$INSTALLER\"\n          echo \"##vso[task.setvariable variable=has_released;isOutput=true]true\"\n        name: signing\n        env:"
  },
  {
    "id" : "02bb01e2-f82e-44b5-87b2-60fc9da337de",
    "prId" : 560,
    "prUrl" : "https://github.com/digital-asset/daml/pull/560",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8e134217-9548-4ddd-ae10-f3aaf388e765",
        "parentId" : null,
        "authorId" : "388d36df-8f3d-4508-bff1-4e5921364443",
        "body" : "hoping azures' yaml parser supports this: can we use [anchors and merge keys](https://camel.readthedocs.io/en/latest/yamlref.html#merge-keys) to reduce code duplication?",
        "createdAt" : "2019-04-26T21:53:06Z",
        "updatedAt" : "2019-04-26T23:03:10Z",
        "lastEditedBy" : "388d36df-8f3d-4508-bff1-4e5921364443",
        "tags" : [
        ]
      },
      {
        "id" : "c076c111-03db-4460-8446-4482039541d4",
        "parentId" : "8e134217-9548-4ddd-ae10-f3aaf388e765",
        "authorId" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "body" : "> /azure-pipelines.yml: Anchors are not currently supported. Remove the anchor 'SLACK'\r\n\r\nNope :(",
        "createdAt" : "2019-04-26T23:02:42Z",
        "updatedAt" : "2019-04-26T23:03:10Z",
        "lastEditedBy" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "tags" : [
        ]
      },
      {
        "id" : "148cbe17-1fe3-4022-b978-4ec63efe0c31",
        "parentId" : "8e134217-9548-4ddd-ae10-f3aaf388e765",
        "authorId" : "388d36df-8f3d-4508-bff1-4e5921364443",
        "body" : "Meh :-/\r\n\r\nhttps://github.com/Microsoft/azure-pipelines-yaml/issues/187",
        "createdAt" : "2019-04-27T15:56:22Z",
        "updatedAt" : "2019-04-27T15:56:22Z",
        "lastEditedBy" : "388d36df-8f3d-4508-bff1-4e5921364443",
        "tags" : [
        ]
      }
    ],
    "commit" : "8c4263c2cb61acb18223d212bfd5a63301a7b7f7",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +26,30 @@        parameters:\n          name: linux\n      - bash: |\n          set -euo pipefail\n          MESSAGE=$(git log --pretty=format:%s -n1)"
  },
  {
    "id" : "19cb6780-60dd-4a43-b05a-5c277fff367f",
    "prId" : 230,
    "prUrl" : "https://github.com/digital-asset/daml/pull/230",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "593040f0-ffdf-4570-b85c-3792e33b1c40",
        "parentId" : null,
        "authorId" : "18b7038d-baff-4c33-be33-76f4534dc9ed",
        "body" : "What specifically is the security concern that you are trying to address here? Could we add this in a comment so we don‚Äôt forget about it?",
        "createdAt" : "2019-04-09T09:55:50Z",
        "updatedAt" : "2019-04-09T10:58:46Z",
        "lastEditedBy" : "18b7038d-baff-4c33-be33-76f4534dc9ed",
        "tags" : [
        ]
      },
      {
        "id" : "04218848-7d40-4ad0-9bd5-2f8920dbf88e",
        "parentId" : "593040f0-ffdf-4570-b85c-3792e33b1c40",
        "authorId" : null,
        "body" : "The linux-pool is only available for non-public PRs so I need a fallback for external PRs.",
        "createdAt" : "2019-04-09T13:52:42Z",
        "updatedAt" : "2019-04-09T13:52:42Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      }
    ],
    "commit" : "b39bf789a1ded0c4a751b9399720df1c332df945",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +21,25 @@    timeoutInMinutes: 360\n    pool:\n      ${{ if eq(variables['System.PullRequest.IsFork'], 'true') }}:\n        vmImage: 'ubuntu-16.04'\n      ${{ if eq(variables['System.PullRequest.IsFork'], 'false') }}:"
  }
]