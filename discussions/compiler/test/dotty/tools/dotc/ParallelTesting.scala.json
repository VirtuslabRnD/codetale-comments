[
  {
    "id" : "bd053da0-3c15-4ecf-8f3b-b411633b7a89",
    "prId" : 2125,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/2125#pullrequestreview-29420442",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1a3c1611-382b-49f3-a366-c15dad5f1043",
        "parentId" : null,
        "authorId" : "5bf81a51-885f-46a7-83a3-61092da8405f",
        "body" : "Can't you use the \"bench\" runner here instead?",
        "createdAt" : "2017-03-28T10:07:31Z",
        "updatedAt" : "2017-03-29T13:15:05Z",
        "lastEditedBy" : "5bf81a51-885f-46a7-83a3-61092da8405f",
        "tags" : [
        ]
      },
      {
        "id" : "228becea-4f06-49f7-9595-c792e724e232",
        "parentId" : "1a3c1611-382b-49f3-a366-c15dad5f1043",
        "authorId" : "2dc29bea-17b2-4800-bf4f-843c62cca7de",
        "body" : "Two-fold: the `Bench` uses `println`, and previously @smarter suggested that we implement `-Ytimes:X` as a real flag. ",
        "createdAt" : "2017-03-28T11:15:41Z",
        "updatedAt" : "2017-03-29T13:15:05Z",
        "lastEditedBy" : "2dc29bea-17b2-4800-bf4f-843c62cca7de",
        "tags" : [
        ]
      }
    ],
    "commit" : "08d75b5b1bcdb7b1051831e7a2282f1fbb896267",
    "line" : 303,
    "diffHunk" : "@@ -1,1 +301,305 @@        if (times == 1) new Driver { def newCompiler(implicit ctx: Context) = new Compiler }\n        else new Driver {\n          def newCompiler(implicit ctx: Context) = new Compiler\n\n          private def ntimes(n: Int)(op: Int => Reporter): Reporter ="
  },
  {
    "id" : "47b0c7c9-6a8a-4e6c-8073-2d8e382cd2f9",
    "prId" : 2125,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/2125#pullrequestreview-29403132",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4f435562-db11-4f2b-8f87-f8c45cc0ece9",
        "parentId" : null,
        "authorId" : "5bf81a51-885f-46a7-83a3-61092da8405f",
        "body" : "enableVerbose",
        "createdAt" : "2017-03-28T10:35:29Z",
        "updatedAt" : "2017-03-29T13:15:05Z",
        "lastEditedBy" : "5bf81a51-885f-46a7-83a3-61092da8405f",
        "tags" : [
        ]
      }
    ],
    "commit" : "08d75b5b1bcdb7b1051831e7a2282f1fbb896267",
    "line" : 844,
    "diffHunk" : "@@ -1,1 +842,846 @@     *  classpath\n     */\n    def verbose: CompilationTest = new CompilationTest(\n      targets.map(t => t.withFlags(\"-verbose\", \"-Ylog-classpath\")),\n      times, shouldDelete, threadLimit, shouldFail"
  },
  {
    "id" : "049f8257-743a-487d-bb41-88ca8fc45c29",
    "prId" : 2125,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/2125#pullrequestreview-29423863",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "43c4d67d-8643-43a6-9f75-6728a6a724da",
        "parentId" : null,
        "authorId" : "5bf81a51-885f-46a7-83a3-61092da8405f",
        "body" : "duplicates `cleanup`.",
        "createdAt" : "2017-03-28T10:37:06Z",
        "updatedAt" : "2017-03-29T13:15:05Z",
        "lastEditedBy" : "5bf81a51-885f-46a7-83a3-61092da8405f",
        "tags" : [
        ]
      },
      {
        "id" : "bb25a018-062b-496a-894f-b659bbf4151e",
        "parentId" : "43c4d67d-8643-43a6-9f75-6728a6a724da",
        "authorId" : "2dc29bea-17b2-4800-bf4f-843c62cca7de",
        "body" : "No - cleanup is conditional, delete is explicit.\r\n\r\nSee `tastyBootstrap` test in `CompilationTests.scala`",
        "createdAt" : "2017-03-28T11:31:26Z",
        "updatedAt" : "2017-03-29T13:15:05Z",
        "lastEditedBy" : "2dc29bea-17b2-4800-bf4f-843c62cca7de",
        "tags" : [
        ]
      },
      {
        "id" : "2eacba80-a6a8-4c7f-a1c5-e669e66bdce9",
        "parentId" : "43c4d67d-8643-43a6-9f75-6728a6a724da",
        "authorId" : "5bf81a51-885f-46a7-83a3-61092da8405f",
        "body" : "That's what I'm saying: the conditional should check condition and call unconditional one instead of re-implementing it.",
        "createdAt" : "2017-03-28T11:35:08Z",
        "updatedAt" : "2017-03-29T13:15:05Z",
        "lastEditedBy" : "5bf81a51-885f-46a7-83a3-61092da8405f",
        "tags" : [
        ]
      }
    ],
    "commit" : "08d75b5b1bcdb7b1051831e7a2282f1fbb896267",
    "line" : 872,
    "diffHunk" : "@@ -1,1 +870,874 @@\n    /** Delete all output files generated by this `CompilationTest` */\n    def delete(): Unit = targets.foreach(t => delete(t.outDir))\n\n    private def delete(file: JFile): Unit = {"
  },
  {
    "id" : "f075b90f-9ca2-431f-8ad9-a2cc9a04eac6",
    "prId" : 2125,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/2125#pullrequestreview-29424266",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "26c37573-476e-4ea5-8945-8249c82b1053",
        "parentId" : null,
        "authorId" : "5bf81a51-885f-46a7-83a3-61092da8405f",
        "body" : "windows? :-)? Why not take a JFile and test if it's an already existing directory using the API and create?",
        "createdAt" : "2017-03-28T10:38:57Z",
        "updatedAt" : "2017-03-29T13:15:05Z",
        "lastEditedBy" : "5bf81a51-885f-46a7-83a3-61092da8405f",
        "tags" : [
        ]
      },
      {
        "id" : "b8a13e7a-ac80-45fc-bde9-6d647947e160",
        "parentId" : "26c37573-476e-4ea5-8945-8249c82b1053",
        "authorId" : "2dc29bea-17b2-4800-bf4f-843c62cca7de",
        "body" : "`java.io.File` internally handles forward slash translation if the platform is Windows.\r\n\r\nI could provide more of an API for this, but felt it was approaching over-engineering...",
        "createdAt" : "2017-03-28T11:37:20Z",
        "updatedAt" : "2017-03-29T13:15:05Z",
        "lastEditedBy" : "2dc29bea-17b2-4800-bf4f-843c62cca7de",
        "tags" : [
        ]
      }
    ],
    "commit" : "08d75b5b1bcdb7b1051831e7a2282f1fbb896267",
    "line" : 901,
    "diffHunk" : "@@ -1,1 +899,903 @@  private def checkRequirements(f: String, sourceDir: JFile, outDir: String): Unit = {\n    require(sourceDir.isDirectory && sourceDir.exists, \"passed non-directory to `compileFilesInDir`\")\n    require(outDir.last == '/', \"please specify an `outDir` with a trailing slash\")\n  }\n"
  },
  {
    "id" : "dfc3c350-b66d-436b-9865-a9c84762a837",
    "prId" : 2125,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/2125#pullrequestreview-29424477",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ccb1f77f-781b-4338-b857-03418421133d",
        "parentId" : null,
        "authorId" : "5bf81a51-885f-46a7-83a3-61092da8405f",
        "body" : "why should this stop tests from being run? \r\nIt would be nice to report an error but continue test execution",
        "createdAt" : "2017-03-28T10:40:30Z",
        "updatedAt" : "2017-03-29T13:15:05Z",
        "lastEditedBy" : "5bf81a51-885f-46a7-83a3-61092da8405f",
        "tags" : [
        ]
      },
      {
        "id" : "adb09b5f-8b35-4286-9cac-5eef8856bd8b",
        "parentId" : "ccb1f77f-781b-4338-b857-03418421133d",
        "authorId" : "2dc29bea-17b2-4800-bf4f-843c62cca7de",
        "body" : "Most likely it will screw up tests that keep output for compilation that depends on previous compilation - e.g. `tastyBootstrap`.\r\n\r\nBut yeah - sure, I could make it continue with some randomized value instead.",
        "createdAt" : "2017-03-28T11:38:36Z",
        "updatedAt" : "2017-03-29T13:15:05Z",
        "lastEditedBy" : "2dc29bea-17b2-4800-bf4f-843c62cca7de",
        "tags" : [
        ]
      }
    ],
    "commit" : "08d75b5b1bcdb7b1051831e7a2282f1fbb896267",
    "line" : 934,
    "diffHunk" : "@@ -1,1 +932,936 @@      .map(_.getMethodName)\n      .getOrElse {\n        throw new IllegalStateException(\"Unable to reflectively find calling method\")\n      }\n  }"
  },
  {
    "id" : "ea9c2b5d-8ec8-41f6-ad79-d405793faaf4",
    "prId" : 2125,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/2125#pullrequestreview-29424667",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7014f749-0c6c-40b0-b19a-ccdcbbf9969f",
        "parentId" : null,
        "authorId" : "5bf81a51-885f-46a7-83a3-61092da8405f",
        "body" : ">does **not** perform separate compilation\r\n\r\nWhy?",
        "createdAt" : "2017-03-28T10:40:59Z",
        "updatedAt" : "2017-03-29T13:15:05Z",
        "lastEditedBy" : "5bf81a51-885f-46a7-83a3-61092da8405f",
        "tags" : [
        ]
      },
      {
        "id" : "e7a12479-be95-4487-85a9-9cbf65021cf5",
        "parentId" : "7014f749-0c6c-40b0-b19a-ccdcbbf9969f",
        "authorId" : "2dc29bea-17b2-4800-bf4f-843c62cca7de",
        "body" : "Because we have tests that compile things on a single depth to weed out where an error ocurred - see `tastyBootstrap`",
        "createdAt" : "2017-03-28T11:39:33Z",
        "updatedAt" : "2017-03-29T13:15:05Z",
        "lastEditedBy" : "2dc29bea-17b2-4800-bf4f-843c62cca7de",
        "tags" : [
        ]
      }
    ],
    "commit" : "08d75b5b1bcdb7b1051831e7a2282f1fbb896267",
    "line" : 1037,
    "diffHunk" : "@@ -1,1 +1035,1039 @@\n  /** This function behaves similar to `compileFilesInDir` but it ignores\n   *  sub-directories and as such, does **not** perform separate compilation\n   *  tests.\n   */"
  }
]