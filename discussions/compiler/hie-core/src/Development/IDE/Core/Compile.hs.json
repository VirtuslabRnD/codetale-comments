[
  {
    "id" : "fdeec9ed-6ebc-48d0-b371-4ba7caeec377",
    "prId" : 1903,
    "prUrl" : "https://github.com/digital-asset/daml/pull/1903",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4b082288-1df3-450b-9845-c4f7bc2922d9",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "Ugh, I feel like there must be a better way to handle this. This seems like a problem that every LSP server for languages that support CPP has to deal with.",
        "createdAt" : "2019-06-27T07:11:03Z",
        "updatedAt" : "2019-06-27T21:43:56Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "ae5f219e-f1d1-4f2f-ae82-84ab01ae3797",
        "parentId" : "4b082288-1df3-450b-9845-c4f7bc2922d9",
        "authorId" : "5364da9b-036b-4a1e-b26b-68138cc489f9",
        "body" : "Agreed - but inclined to leave it as is for now. It works. If there's a better way, that's step 2.",
        "createdAt" : "2019-06-27T21:38:24Z",
        "updatedAt" : "2019-06-27T21:43:56Z",
        "lastEditedBy" : "5364da9b-036b-4a1e-b26b-68138cc489f9",
        "tags" : [
        ]
      },
      {
        "id" : "d1fda007-820b-4fee-ab94-7f9e3a635ce0",
        "parentId" : "4b082288-1df3-450b-9845-c4f7bc2922d9",
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "Absolutely, I wasnâ€™t trying to suggest that this needs fixing before merging. Just something that we might want to cleanup at some point.",
        "createdAt" : "2019-06-28T07:11:04Z",
        "updatedAt" : "2019-06-28T07:11:04Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      }
    ],
    "commit" : "961a774b69885b8de3edbed8762fcdc4f19ce99f",
    "line" : 51,
    "diffHunk" : "@@ -1,1 +342,346 @@            let tweak x\n                    | Just x <- stripPrefix \"# \" x\n                    , \"___HIE_CORE_MAGIC___\" `isInfixOf` x\n                    , let num = takeWhile (not . isSpace) x\n                    -- important to use /, and never \\ for paths, even on Windows, since then C escapes them"
  },
  {
    "id" : "bd5ee2a8-73cf-485d-b10e-c5939aa0c253",
    "prId" : 1903,
    "prUrl" : "https://github.com/digital-asset/daml/pull/1903",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e3ecc89a-886f-4634-8f49-3e35ca905039",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "This seems like you are basically inlining what we do when converting to `NormalizedFilePath` but in a slightly different way (we normalize to `pathSeparator` instead of `/`). Do we rely on the fact that this normalizes to `/`? If so it would be good to point this out in a comment, if not, I would suggest to use `NormalizedFilePath` instead.",
        "createdAt" : "2019-06-27T07:12:49Z",
        "updatedAt" : "2019-06-27T21:43:56Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "4a4c88b9-2617-4e15-9b6f-ed5d463639db",
        "parentId" : "e3ecc89a-886f-4634-8f49-3e35ca905039",
        "authorId" : "48f08da4-00c5-4c3b-a5f6-153f82b3416a",
        "body" : "On Windows \\ plus Cpp escaping plus GHC unescaping all goes very wrong. The use of / is essential. I'll add a comment",
        "createdAt" : "2019-06-27T07:51:12Z",
        "updatedAt" : "2019-06-27T21:43:56Z",
        "lastEditedBy" : "48f08da4-00c5-4c3b-a5f6-153f82b3416a",
        "tags" : [
        ]
      }
    ],
    "commit" : "961a774b69885b8de3edbed8762fcdc4f19ce99f",
    "line" : 55,
    "diffHunk" : "@@ -1,1 +346,350 @@                    -- important to use /, and never \\ for paths, even on Windows, since then C escapes them\n                    -- and GHC gets all confused\n                        = \"# \" <> num <> \" \\\"\" <> map (\\x -> if isPathSeparator x then '/' else x) filename <> \"\\\"\"\n                    | otherwise = x\n            stringToStringBuffer . unlines . map tweak . lines <$> readFileUTF8' out"
  }
]