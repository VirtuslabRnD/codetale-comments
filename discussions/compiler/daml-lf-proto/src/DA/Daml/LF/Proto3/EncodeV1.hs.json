[
  {
    "id" : "df69ca60-e5fc-4bb7-8c18-90f74b26f92b",
    "prId" : 7893,
    "prUrl" : "https://github.com/digital-asset/daml/pull/7893",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1b5552d7-bca0-4568-9cfe-804be30a2e42",
        "parentId" : null,
        "authorId" : "f7ed27fc-83ac-401f-af8b-91c645eda7e9",
        "body" : "Oof. Do we picture someone hitting this?\r\n",
        "createdAt" : "2020-11-12T15:53:30Z",
        "updatedAt" : "2020-11-17T16:02:54Z",
        "lastEditedBy" : "f7ed27fc-83ac-401f-af8b-91c645eda7e9",
        "tags" : [
        ]
      },
      {
        "id" : "25022e1b-8b07-4323-8bbf-1f4ef3d655a6",
        "parentId" : "1b5552d7-bca0-4568-9cfe-804be30a2e42",
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "`n` is a 32-bit integer, so you'd need more than 2 billion _distinct_ types. That sounds quite ambitious even for the most productive DAML teams.",
        "createdAt" : "2020-11-12T16:12:03Z",
        "updatedAt" : "2020-11-17T16:02:54Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      }
    ],
    "commit" : "5500373afafd8bfb0d8bf17d627d2b4f4eec2b00",
    "line" : 53,
    "diffHunk" : "@@ -1,1 +346,350 @@            Nothing -> do\n                when (n == maxBound) $\n                    error \"Type interning table grew too large\"\n                put $! env\n                    { internedTypes = Map.insert ptyp n internedTypes"
  },
  {
    "id" : "572a938c-d0ac-41cb-b139-73a9316c9c05",
    "prId" : 3067,
    "prUrl" : "https://github.com/digital-asset/daml/pull/3067",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cacb7556-f77d-4446-8419-84e935662f05",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "Given that you already went through all the effort of making this monadic, we might also want to add a proper error monad into the stack.",
        "createdAt" : "2019-10-02T14:34:39Z",
        "updatedAt" : "2019-10-04T10:37:43Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "b5294fed-c75e-4c5c-b4cf-0060cefac5d7",
        "parentId" : "cacb7556-f77d-4446-8419-84e935662f05",
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "Given that we're _very_ unlikely to go beyond 2^31 entries in the table, I'm reluctant to make this change.",
        "createdAt" : "2019-10-02T15:37:20Z",
        "updatedAt" : "2019-10-04T10:37:43Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      }
    ],
    "commit" : "eb8a3c63a39ce4715734e5fd8e994ef0f0490499",
    "line" : 85,
    "diffHunk" : "@@ -1,1 +85,89 @@        Nothing -> do\n            when (n == maxBound) $\n                error \"Dotted name interning table grew too large\"\n            put $! env\n                { internedDottedNames = HMS.insert ids n internedDottedNames"
  },
  {
    "id" : "3f29cc02-bb6b-4971-a60d-ce3898c496ee",
    "prId" : 3039,
    "prUrl" : "https://github.com/digital-asset/daml/pull/3039",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e2629843-738c-4891-bce9-f438e65ae0bf",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "Have we ever checked if this is actually faster? Due to the increase in allocations I wouldnâ€™t be surprised if this actually ends up being slower in which case there is no point keeping this for the scenario service.",
        "createdAt" : "2019-09-26T03:44:32Z",
        "updatedAt" : "2019-09-26T08:01:56Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "653dd601-dab7-4837-ade5-4f8fabe3b8fe",
        "parentId" : "e2629843-738c-4891-bce9-f438e65ae0bf",
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "The problem right now is that the scenario service takes a single module rather than a package. The string interning table is part of the package not of the module. We should change this by shipping a \"fat module\", i.e. a module with a string interning table to the scenario service. That is on my todo list.",
        "createdAt" : "2019-09-26T07:32:21Z",
        "updatedAt" : "2019-09-26T08:01:56Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      },
      {
        "id" : "d395c61a-bbaf-463e-94b3-cab4f5bb9629",
        "parentId" : "e2629843-738c-4891-bce9-f438e65ae0bf",
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "Oh I see, that makes a lot of sense.",
        "createdAt" : "2019-09-26T07:38:36Z",
        "updatedAt" : "2019-09-26T08:01:56Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      }
    ],
    "commit" : "23c8499f8ef51d8ee678d91116fd9342b9919fd2",
    "line" : 79,
    "diffHunk" : "@@ -1,1 +657,661 @@encodeModuleWithLargePackageIds :: Version -> Module -> P.Module\nencodeModuleWithLargePackageIds version mod =\n    let env = initEncodeEnv version InternNothing\n    in\n    evalState (encodeModule mod) env"
  }
]