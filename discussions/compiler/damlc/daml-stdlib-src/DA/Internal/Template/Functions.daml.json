[
  {
    "id" : "89aa621e-a5b5-4b33-bbb7-553a9de96d31",
    "prId" : 5014,
    "prUrl" : "https://github.com/digital-asset/daml/pull/5014",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ac1e88ec-8712-403d-bc68-54de217bcfeb",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : ":tada: Now I can add `Ord` instances :slightly_smiling_face: ",
        "createdAt" : "2020-03-16T11:05:33Z",
        "updatedAt" : "2020-03-16T11:07:57Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "2ebeb222-d104-4184-915e-8ae12b6a0906",
        "parentId" : "ac1e88ec-8712-403d-bc68-54de217bcfeb",
        "authorId" : null,
        "body" : "Yes :)",
        "createdAt" : "2020-03-16T11:08:52Z",
        "updatedAt" : "2020-03-16T11:08:52Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      },
      {
        "id" : "e1961792-87fd-4efd-a1af-d2f562f5d295",
        "parentId" : "ac1e88ec-8712-403d-bc68-54de217bcfeb",
        "authorId" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "body" : "The order for enums and variants still needs to be adjusted. ",
        "createdAt" : "2020-03-16T11:35:03Z",
        "updatedAt" : "2020-03-16T11:35:04Z",
        "lastEditedBy" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "tags" : [
        ]
      }
    ],
    "commit" : "9624bbc8e99ef22fe521c17e57ef7ebef36b6457",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +239,243 @@    eqAny aAny bAny && aRep == bRep\n\ninstance Eq AnyContractKey where\n  AnyContractKey aAny aRep == AnyContractKey bAny bRep =\n    eqAny aAny bAny && aRep == bRep"
  },
  {
    "id" : "c07ac206-3780-4fac-b0ef-e7b9a0e221d4",
    "prId" : 4030,
    "prUrl" : "https://github.com/digital-asset/daml/pull/4030",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d8e7c99f-0908-4c32-b8cd-53067d47229b",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "It looks like this comment belongs to `fetchByKey`.",
        "createdAt" : "2020-01-14T09:14:29Z",
        "updatedAt" : "2020-01-15T14:32:49Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "e45e735c-768f-4cf1-8a6d-4b41642f1266",
        "parentId" : "d8e7c99f-0908-4c32-b8cd-53067d47229b",
        "authorId" : null,
        "body" : "Oops, fixed!",
        "createdAt" : "2020-01-14T11:52:42Z",
        "updatedAt" : "2020-01-15T14:32:49Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      }
    ],
    "commit" : "3a6d332937a2569a52ae38499c6fe1022c9fe04c",
    "line" : 134,
    "diffHunk" : "@@ -1,1 +133,137 @@  -- key `k`, you must call `fetchByKey @Account k`.\n  fetchByKey : k -> Update (ContractId t, t)\n  -- NOTE(F. Mazzoli): the motivation for this function to return both the\n  -- contract ID and the contract instance is that `fetchByKey` results in\n  -- a fetch node in the transaction structure, and the fetch node"
  }
]