[
  {
    "id" : "e3ac89da-6692-417e-9ef4-b9419417d1db",
    "prId" : 3152,
    "prUrl" : "https://github.com/digital-asset/daml/pull/3152",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8c3d1673-3d79-4cd1-8a96-328d25b9dab7",
        "parentId" : null,
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "I suppose these two methods have the `proxy t` and not the signatures from below because their signatures need to refer to `t`. Is that correct?",
        "createdAt" : "2019-10-14T08:11:11Z",
        "updatedAt" : "2019-10-14T08:11:12Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      },
      {
        "id" : "c3ef0c09-c259-4839-a2ce-514844a0e068",
        "parentId" : "8c3d1673-3d79-4cd1-8a96-328d25b9dab7",
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "There are two issues here:\r\n\r\n1. Declaring the typeclass `IouInstance` will require `AllowAmbigousTypes` in every module that defines a template if we don’t have the proxy there which is obviously not a good idea (there is a comment in `ghc-lib` on this).\r\n2. 1 applies to the declaration of the typeclass but not the declaration of the `Choice` instance. However, if we don’t have the proxy here we need to make it up during template desugaring to define `_toAnyChoice = _toAnyChoiceProposalArchive someProxy` and apart from that complicating template desugaring, I’m not really sure how to do this nicely without requiring `ScopedTypeVariables` in every module that defines a `template`.\r\n\r\nI’ll add a comment for `2` here.",
        "createdAt" : "2019-10-14T08:20:27Z",
        "updatedAt" : "2019-10-14T08:20:27Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "e88e4447-c5d8-4be6-9072-359cb7008708",
        "parentId" : "8c3d1673-3d79-4cd1-8a96-328d25b9dab7",
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "Don't we have `ScopedTypeVariables` enabled by default in DAML?",
        "createdAt" : "2019-10-14T08:23:53Z",
        "updatedAt" : "2019-10-14T08:23:53Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      },
      {
        "id" : "b68f3d5f-1cba-4353-b2f8-1dcc5e5ae242",
        "parentId" : "8c3d1673-3d79-4cd1-8a96-328d25b9dab7",
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "oh good point, I thought I had grepped for that but apparently I missed this.",
        "createdAt" : "2019-10-14T08:27:29Z",
        "updatedAt" : "2019-10-14T08:27:30Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "73bf2ab8-6802-444f-8249-d655aa367bd7",
        "parentId" : "8c3d1673-3d79-4cd1-8a96-328d25b9dab7",
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "That said, I think there is still something to be said for keeping `_toAnyChoice = _toAnyChoiceProposalArchive` and thereby keeping template desugaring as simple as possible.",
        "createdAt" : "2019-10-14T08:28:35Z",
        "updatedAt" : "2019-10-14T08:28:35Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      }
    ],
    "commit" : "c63bf452f634b4328536ae697639d3adf4216488",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +53,57 @@  exercise : ContractId t -> c -> Update r\n  _toAnyChoice : proxy t -> c -> AnyChoice\n  _fromAnyChoice : proxy t -> AnyChoice -> Optional c\n\ntoAnyChoice : forall t c r. Choice t c r => c -> AnyChoice"
  },
  {
    "id" : "ad2dc30b-2b68-4460-a108-fb234c50d81d",
    "prId" : 2178,
    "prUrl" : "https://github.com/digital-asset/daml/pull/2178",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "aceb1a69-dd43-4210-8b51-65e99537c3a2",
        "parentId" : null,
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "We should document the methods of `Template`.",
        "createdAt" : "2019-07-29T14:55:56Z",
        "updatedAt" : "2019-07-30T22:55:02Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      },
      {
        "id" : "10e5274e-de59-47c5-bf08-66192aa34519",
        "parentId" : "aceb1a69-dd43-4210-8b51-65e99537c3a2",
        "authorId" : "c1c263c2-6852-4f5d-a507-38300d7a6e98",
        "body" : "Ok, I think I dropped the comments for these 4 methods because I didn't think they were very useful. I'll restore them here and we can iterate on it later if we want.",
        "createdAt" : "2019-07-29T16:11:33Z",
        "updatedAt" : "2019-07-30T22:55:02Z",
        "lastEditedBy" : "c1c263c2-6852-4f5d-a507-38300d7a6e98",
        "tags" : [
        ]
      }
    ],
    "commit" : "ca591f5890a7d9487d0b2351de3d08b4592a1a87",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +12,16 @@import DA.Internal.Prelude\n\nclass Template t where\n\n  -- | The signatories of a contract."
  }
]