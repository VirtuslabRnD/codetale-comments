[
  {
    "id" : "4bffd01d-ef33-4312-b5c3-291113970223",
    "prId" : 3503,
    "prUrl" : "https://github.com/digital-asset/daml/pull/3503",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ee61ed9e-66bd-48b8-b27f-867974dc9ec3",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "This seems to have gotten to the point where it deserves a custom record type instead of `(String, Bool, [(String, String)])`.",
        "createdAt" : "2019-11-18T12:17:21Z",
        "updatedAt" : "2019-11-18T20:20:05Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      }
    ],
    "commit" : "e11899fa2735e5f9588b587ccc13106f6598a88d",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +43,47 @@  , optHideAllPkgs :: Bool\n    -- ^ hide all imported packages\n  , optPackageImports :: [(String, Bool, [(String, String)])]\n    -- ^ list of explicit package imports and modules with aliases. The boolean flag controls\n    -- whether modules without given alias are visible."
  },
  {
    "id" : "9b92d2b1-f4ca-4ec2-984a-dcb9e13c97b0",
    "prId" : 2878,
    "prUrl" : "https://github.com/digital-asset/daml/pull/2878",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1342bbaf-0c20-4494-96e8-90e83e1cc318",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "Do we care about being able to configure this?",
        "createdAt" : "2019-09-11T11:23:36Z",
        "updatedAt" : "2019-09-11T14:44:31Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "d323359a-e5b2-42f4-b801-a4e5382ccdbe",
        "parentId" : "1342bbaf-0c20-4494-96e8-90e83e1cc318",
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "Answering my own question: No, this isn’t actually configurable, `mkOptions` will always overwrite it. Maybe we should error out in `mkOptions` if this is already set.",
        "createdAt" : "2019-09-11T11:24:47Z",
        "updatedAt" : "2019-09-11T14:44:31Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "20bdee50-d08a-4f61-9004-46392980e2a0",
        "parentId" : "1342bbaf-0c20-4494-96e8-90e83e1cc318",
        "authorId" : null,
        "body" : "I added a comment saying it's set by `mkOptions` at least",
        "createdAt" : "2019-09-11T14:44:45Z",
        "updatedAt" : "2019-09-11T14:44:45Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      }
    ],
    "commit" : "4b4ee9add38694378a528445e0e9b48ef1ab7dec",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +73,77 @@  , optCppPath :: Maybe FilePath\n    -- ^ Enable CPP, by giving filepath to the executable.\n  , optGhcVersionFile :: Maybe FilePath\n    -- ^ Path to \"ghcversion.h\". Needed for running CPP. We ship this\n    -- as part of our runfiles. This is set by 'mkOptions'."
  },
  {
    "id" : "6bd2e061-3434-4896-9c64-433d851249ed",
    "prId" : 2343,
    "prUrl" : "https://github.com/digital-asset/daml/pull/2343",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "412faa14-9d18-477b-bcb4-80014f202441",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "Should this maybe go into `mkOptions`? That seems to match how we handle things like the package db.",
        "createdAt" : "2019-07-31T06:54:53Z",
        "updatedAt" : "2019-07-31T06:55:27Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      }
    ],
    "commit" : "ecf776ff07fbf114d0ee21c837a6904f83ce17a1",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +123,127 @@defaultOptionsIO :: Maybe LF.Version -> IO Options\ndefaultOptionsIO mbVersion = do\n  hlintDataDir <-locateRunfiles $ mainWorkspace </> \"compiler/damlc/daml-ide-core\"\n  mkOptions $ (defaultOptions mbVersion){optHlintUsage=HlintEnabled hlintDataDir False}\n"
  },
  {
    "id" : "e45b4bbd-00f8-48d7-9268-2ac826241a7c",
    "prId" : 2138,
    "prUrl" : "https://github.com/digital-asset/daml/pull/2138",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "367623e7-c6fa-4839-bfb8-feced0150384",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "Why is this a `Maybe`? What is the difference between `Nothing` and `HlintDisabled`?",
        "createdAt" : "2019-07-15T06:55:34Z",
        "updatedAt" : "2019-07-15T06:56:38Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "83d767ae-36b7-443b-9299-f7a11c70de68",
        "parentId" : "367623e7-c6fa-4839-bfb8-feced0150384",
        "authorId" : null,
        "body" : "In truth not much:\r\n  - `--hlint-enabled f` => `Just HlintEnabled f`\r\n  - `--hlint-disabled`  => `Just HlintDisabled`\r\n  - `{- nothing -}`     => `Nothing`\r\nThe code for parsing the options looks like this:\r\n```haskell\r\nhlintEnabledOpt :: Parser HlintUsage\r\nhlintEnabledOpt = HlintEnabled <$> strOption\r\n  ( long \"with-hlint\"\r\n    <> metavar \"DIR\"\r\n    <> help \"Enable hlint with hlint.yaml directory\"\r\n  )\r\n\r\nhlintDisabledOpt :: Parser HlintUsage\r\nhlintDisabledOpt = flag' HlintDisabled\r\n  ( long \"without-hlint\"\r\n    <> help \"Disable hlint\"\r\n  )\r\n\r\nhlintUsageOpt :: Parser (Maybe HlintUsage)\r\nhlintUsageOpt = optional (hlintEnabledOpt <|> hlintDisabledOpt)\r\n```\r\nThe sad truth is that I haven't yet been able to work out how to express an \"optional with a default\".",
        "createdAt" : "2019-07-15T09:13:09Z",
        "updatedAt" : "2019-07-15T09:13:09Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      },
      {
        "id" : "a03e6c0f-bc45-487e-a804-5c043b0afaef",
        "parentId" : "367623e7-c6fa-4839-bfb8-feced0150384",
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "```haskell\r\nhlintEnabledOpt = option reader (long \"with-hlint\" <> metavar \"DIR\" <> help \"Enable hlint with hlint.yaml directory\" <> value HLintDisabled)\r\n  where reader = HLintEnabled readerAsk\r\n```\r\nThat should get you pretty close.",
        "createdAt" : "2019-07-15T09:16:56Z",
        "updatedAt" : "2019-07-15T09:17:15Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "e44493d7-819e-4640-9275-8c53a785c05b",
        "parentId" : "367623e7-c6fa-4839-bfb8-feced0150384",
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "Another alternative would be to parse into a `Maybe` first and then convert that to `HLintUsage` using an `fmap` or just use a `Maybe` directly instead of `HLintUsage` (don’t feel particularly strongly about that either way).",
        "createdAt" : "2019-07-15T09:18:39Z",
        "updatedAt" : "2019-07-15T09:18:39Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      }
    ],
    "commit" : "9a5c5e028fdb1b9ffda8f82b7ce5c53e2b7aa402",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +60,64 @@    -- or only a subset of them. This is mostly used to run additional\n    -- checks on CI while keeping the IDE fast.\n  , optHlintUsage :: Maybe HlintUsage\n  -- ^ Information about hlint usage.\n  , optIsGenerated :: Bool"
  },
  {
    "id" : "b571e0d2-c3fe-47cf-b851-2c0054ab34d8",
    "prId" : 2115,
    "prUrl" : "https://github.com/digital-asset/daml/pull/2115",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "eec0513e-87dc-4771-9174-3a8917140242",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "It looks like you are already switching on `optHlintDataDir` so this option seems to be redundant.",
        "createdAt" : "2019-07-12T12:04:26Z",
        "updatedAt" : "2019-07-12T15:42:21Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "484b6cdd-ff54-46e8-a4e5-12046be1d619",
        "parentId" : "eec0513e-87dc-4771-9174-3a8917140242",
        "authorId" : null,
        "body" : "Going to get reworked.",
        "createdAt" : "2019-07-12T14:54:55Z",
        "updatedAt" : "2019-07-12T15:42:21Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      }
    ],
    "commit" : "70dbda3a4e6f6e2c8b607e944eb807553787c2c2",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +59,63 @@    -- or only a subset of them. This is mostly used to run additional\n    -- checks on CI while keeping the IDE fast.\n  , optHlintEnabled :: Bool\n  -- ^ Whether or not to enable hlint\n  , optHlintDataDir :: Maybe FilePath"
  },
  {
    "id" : "11db83b2-1fff-4ddd-82e7-08b020c3dd13",
    "prId" : 2115,
    "prUrl" : "https://github.com/digital-asset/daml/pull/2115",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b0dd84c8-57fc-4d6f-b668-86a23d12b231",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "You really love pressing `M-q` ;)",
        "createdAt" : "2019-07-12T12:04:51Z",
        "updatedAt" : "2019-07-12T15:42:21Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "5b99a901-605b-4baf-8678-384d077f578d",
        "parentId" : "b0dd84c8-57fc-4d6f-b668-86a23d12b231",
        "authorId" : null,
        "body" : "`M-q`, `M-q`, `M-q` again!",
        "createdAt" : "2019-07-12T12:19:07Z",
        "updatedAt" : "2019-07-12T15:42:21Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      }
    ],
    "commit" : "70dbda3a4e6f6e2c8b607e944eb807553787c2c2",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +95,99 @@basePackages = [\"daml-prim\", \"daml-stdlib\"]\n\n-- | Check that import paths and package db directories exist and add\n-- the default package db if it exists\nmkOptions :: Options -> IO Options"
  }
]