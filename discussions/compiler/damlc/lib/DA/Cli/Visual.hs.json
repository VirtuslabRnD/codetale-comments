[
  {
    "id" : "d1cd0646-42ae-493b-b6fe-1b5fc5290986",
    "prId" : 2278,
    "prUrl" : "https://github.com/digital-asset/daml/pull/2278",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "33a42429-f028-482e-b0e9-b9416d58d2d6",
        "parentId" : null,
        "authorId" : "c1c263c2-6852-4f5d-a507-38300d7a6e98",
        "body" : "`archive c = exercise c Archive` in DA.Internal.Template. So won't the `exercise` case be sufficient?",
        "createdAt" : "2019-07-24T19:27:36Z",
        "updatedAt" : "2019-07-24T19:33:53Z",
        "lastEditedBy" : "c1c263c2-6852-4f5d-a507-38300d7a6e98",
        "tags" : [
        ]
      },
      {
        "id" : "95223062-a0ca-4998-a4c0-42970776c59d",
        "parentId" : "33a42429-f028-482e-b0e9-b9416d58d2d6",
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "That does not work right now because `archive` is polymorphic. Once we do the substitution at the type level, this should work. I'll leave a comment to this effect.",
        "createdAt" : "2019-07-24T19:32:15Z",
        "updatedAt" : "2019-07-24T19:33:53Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      },
      {
        "id" : "c212c3cc-ebd5-4c7a-9766-e187473f16a7",
        "parentId" : "33a42429-f028-482e-b0e9-b9416d58d2d6",
        "authorId" : "c1c263c2-6852-4f5d-a507-38300d7a6e98",
        "body" : "Ah right, thanks",
        "createdAt" : "2019-07-24T19:34:19Z",
        "updatedAt" : "2019-07-24T19:34:19Z",
        "lastEditedBy" : "c1c263c2-6852-4f5d-a507-38300d7a6e98",
        "tags" : [
        ]
      }
    ],
    "commit" : "9b2077e3eeec96348b37961d057e91ddec5904f7",
    "line" : 51,
    "diffHunk" : "@@ -1,1 +88,92 @@    -- handle polymorphic calls to `exercise` like this one.\n    EInternalTemplateVal \"archive\" `LF.ETyApp` LF.TCon tpl `LF.ETmApp` _dict ->\n        Set.singleton (AExercise tpl (LF.ChoiceName \"Archive\"))\n    expr -> Set.unions $ map (startFromExpr seen world) $ children expr\n"
  },
  {
    "id" : "7d02275f-98d4-4a0f-babf-ff4a4b6f1ca0",
    "prId" : 2178,
    "prUrl" : "https://github.com/digital-asset/daml/pull/2178",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b4086b7d-0152-4231-a02f-799bf08d7fde",
        "parentId" : null,
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "Has anything actually changed here?",
        "createdAt" : "2019-07-29T14:58:40Z",
        "updatedAt" : "2019-07-30T22:55:02Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      },
      {
        "id" : "346919d0-241e-4d8e-ab55-99dbf626a9d6",
        "parentId" : "b4086b7d-0152-4231-a02f-799bf08d7fde",
        "authorId" : "c1c263c2-6852-4f5d-a507-38300d7a6e98",
        "body" : "Don't think so. I guess I was just pointing out in the comments that `create` and `archive` come from a `Template` instance and `exercise` comes from a `Choice` instance.",
        "createdAt" : "2019-07-29T15:09:34Z",
        "updatedAt" : "2019-07-30T22:55:02Z",
        "lastEditedBy" : "c1c263c2-6852-4f5d-a507-38300d7a6e98",
        "tags" : [
        ]
      }
    ],
    "commit" : "ca591f5890a7d9487d0b2351de3d08b4592a1a87",
    "line" : 46,
    "diffHunk" : "@@ -1,1 +86,90 @@    EInternalTemplateVal \"archive\" `LF.ETyApp` LF.TCon tpl `LF.ETmApp` _dict ->\n        Set.singleton (AExercise tpl (LF.ChoiceName \"Archive\"))\n    -- NOTE(RJR): Look for calls to the `exercise` method from a `Choice`\n    -- instance and produce the corresponding edge in the graph.\n    EInternalTemplateVal \"exercise\" `LF.ETyApp` LF.TCon tpl `LF.ETyApp` LF.TCon (LF.Qualified _ _ (LF.TypeConName [chc])) `LF.ETyApp` _ret `LF.ETmApp` _dict ->"
  },
  {
    "id" : "b22532ce-00e4-4bc4-ba18-f5593dc9259c",
    "prId" : 2116,
    "prUrl" : "https://github.com/digital-asset/daml/pull/2116",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6cd02d7b-c85d-43d4-a38e-4d9ac06e673d",
        "parentId" : null,
        "authorId" : "c1c263c2-6852-4f5d-a507-38300d7a6e98",
        "body" : "`ChoiceAndActions` (plural)?",
        "createdAt" : "2019-07-12T13:45:07Z",
        "updatedAt" : "2019-07-12T14:46:46Z",
        "lastEditedBy" : "c1c263c2-6852-4f5d-a507-38300d7a6e98",
        "tags" : [
        ]
      }
    ],
    "commit" : "02aebbe3458fcf83dfc3b16ff7d3af76a9e53b09",
    "line" : 3,
    "diffHunk" : "@@ -1,1 +26,30 @@            | AExercise (LF.Qualified LF.TypeConName) LF.ChoiceName deriving (Eq, Ord, Show )\n\ndata ChoiceAndAction = ChoiceAndAction\n    { choiceName :: LF.ChoiceName\n    , choiceConsuming :: IsConsuming"
  },
  {
    "id" : "19ac9878-27ba-4a48-a88d-f1b85032a9f9",
    "prId" : 2116,
    "prUrl" : "https://github.com/digital-asset/daml/pull/2116",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bb395ec5-eb50-4692-a7f3-e78f685840ed",
        "parentId" : null,
        "authorId" : "c1c263c2-6852-4f5d-a507-38300d7a6e98",
        "body" : "You're really unqualifying the name right? So maybe `tplNameUnqual`?",
        "createdAt" : "2019-07-12T13:49:33Z",
        "updatedAt" : "2019-07-12T14:46:46Z",
        "lastEditedBy" : "c1c263c2-6852-4f5d-a507-38300d7a6e98",
        "tags" : [
        ]
      },
      {
        "id" : "c835a130-d216-407a-a1a7-a97d41f58cfb",
        "parentId" : "bb395ec5-eb50-4692-a7f3-e78f685840ed",
        "authorId" : "295ee093-aa35-4d63-bc72-cc3a66e7e50c",
        "body" : "that sounds a lot better. Done ",
        "createdAt" : "2019-07-12T14:29:39Z",
        "updatedAt" : "2019-07-12T14:46:46Z",
        "lastEditedBy" : "295ee093-aa35-4d63-bc72-cc3a66e7e50c",
        "tags" : [
        ]
      }
    ],
    "commit" : "02aebbe3458fcf83dfc3b16ff7d3af76a9e53b09",
    "line" : 81,
    "diffHunk" : "@@ -1,1 +128,132 @@        nodesWithCreate = nodes ++ [addCreateChoice tpla lookupData]\n\ntplNamet :: LF.TypeConName -> T.Text\ntplNamet tplConName = head (LF.unTypeConName tplConName)\n"
  },
  {
    "id" : "b6b1a374-19bc-4928-b19b-8774f3a7be92",
    "prId" : 2116,
    "prUrl" : "https://github.com/digital-asset/daml/pull/2116",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c81fe3c3-84c3-4e4e-8158-9270eb1fdac8",
        "parentId" : null,
        "authorId" : "c1c263c2-6852-4f5d-a507-38300d7a6e98",
        "body" : "Don't think you need the `where` clause if this is the entire implementation",
        "createdAt" : "2019-07-12T13:51:43Z",
        "updatedAt" : "2019-07-12T14:46:46Z",
        "lastEditedBy" : "c1c263c2-6852-4f5d-a507-38300d7a6e98",
        "tags" : [
        ]
      },
      {
        "id" : "e267f654-8112-4f8d-89ef-052c56151d4d",
        "parentId" : "c81fe3c3-84c3-4e4e-8158-9270eb1fdac8",
        "authorId" : "295ee093-aa35-4d63-bc72-cc3a66e7e50c",
        "body" : "Done ",
        "createdAt" : "2019-07-12T14:46:30Z",
        "updatedAt" : "2019-07-12T14:46:46Z",
        "lastEditedBy" : "295ee093-aa35-4d63-bc72-cc3a66e7e50c",
        "tags" : [
        ]
      }
    ],
    "commit" : "02aebbe3458fcf83dfc3b16ff7d3af76a9e53b09",
    "line" : 92,
    "diffHunk" : "@@ -1,1 +138,142 @@choiceActionToChoicePairs :: ChoiceAndAction -> [(LF.ChoiceName, LF.ChoiceName)]\nchoiceActionToChoicePairs cha@ChoiceAndAction {..} = pairs\n    where pairs = map (\\ac -> (fst $ extractChoiceData cha, actionToChoice ac)) (Set.elems actions)\n\ngraphEdges :: Map.Map LF.ChoiceName ChoiceDetails -> [TemplateChoices] -> [(ChoiceDetails, ChoiceDetails)]"
  }
]