[
  {
    "id" : "deac3c9a-7200-4356-9a3f-99c2e2eaae53",
    "prId" : 3342,
    "prUrl" : "https://github.com/digital-asset/daml/pull/3342",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e0c14c90-5d6d-4a8b-9a32-9738abc45843",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "Based on the comment it isn’t clear to me what this does. Looking at the source, we end up calling\r\n```\r\n(foldr1 (</>) $ splitOn \".\" modName) ++ qual ++ \"GenInstances\" ++ \".daml\"\r\n```\r\nso this is neither appending nor prepended but inserted somewhere in the middle. Maybe it would be clearer to make this the root of the module hierarchy so we generate modules like `Qual.modName.GenInstances.daml`",
        "createdAt" : "2019-11-05T14:44:35Z",
        "updatedAt" : "2019-11-05T18:46:21Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "7a6e7def-94d5-475a-83d7-cf4ba02e8809",
        "parentId" : "e0c14c90-5d6d-4a8b-9a32-9738abc45843",
        "authorId" : "6bbb482c-d598-4c97-ac37-b89d94b27ee4",
        "body" : "This comes from the idea that you will compile with the module aliases Mod -> ModA for package 1, and Mod -> ModB for package2 when you build an upgrade project. In that way it's consistent that we change the module name everywhere the same way. I'll try to make the docu for the option clearer.",
        "createdAt" : "2019-11-05T16:33:11Z",
        "updatedAt" : "2019-11-05T18:46:21Z",
        "lastEditedBy" : "6bbb482c-d598-4c97-ac37-b89d94b27ee4",
        "tags" : [
        ]
      }
    ],
    "commit" : "272818c92a48fbaf19707d743912199fcaf709f7",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +69,73 @@    <> value Nothing\n\nqualOpt :: Parser (Maybe String)\nqualOpt =\n    option (Just <$> str) $"
  },
  {
    "id" : "37ee1710-d5a9-47d3-8132-3f21ba1dedc4",
    "prId" : 2339,
    "prUrl" : "https://github.com/digital-asset/daml/pull/2339",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "68efd989-ebee-4f41-bad5-32d2f960d4f8",
        "parentId" : null,
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "We should rename this to `--with-lint` or `--with-dlint`.",
        "createdAt" : "2019-07-31T07:49:00Z",
        "updatedAt" : "2019-07-31T07:50:42Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      },
      {
        "id" : "05b14d65-ef18-42fc-9e7b-d3b8b56238d4",
        "parentId" : "68efd989-ebee-4f41-bad5-32d2f960d4f8",
        "authorId" : null,
        "body" : "✔️ ",
        "createdAt" : "2019-08-05T19:25:54Z",
        "updatedAt" : "2019-08-05T19:25:55Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      }
    ],
    "commit" : "fbe9d034237196247b233b85cad77396f3785517",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +341,345 @@hlintEnabledOpt = HlintEnabled\n  <$> strOption\n  ( long \"with-hlint\"\n    <> metavar \"DIR\"\n    <> help \"Enable hlint with 'hlint.yaml' directory\""
  }
]