[
  {
    "id" : "2cbb083f-8d39-4013-8833-e370876c4c8f",
    "prId" : 9056,
    "prUrl" : "https://github.com/digital-asset/daml/pull/9056",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b54ea47f-8a9e-4c1d-8ff8-255ab2232b09",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "Let’s leave it from this PR but the checks below for inconsistent versions, incompatible lf versions & unit id conflicts look like we can already do them when setting up `.daml/dependencies` instead of only failing here.",
        "createdAt" : "2021-03-12T11:33:15Z",
        "updatedAt" : "2021-03-12T18:50:32Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "9e1456ed-bfd2-4bb4-bff8-ef8806fe51d6",
        "parentId" : "b54ea47f-8a9e-4c1d-8ff8-255ab2232b09",
        "authorId" : "6bbb482c-d598-4c97-ac37-b89d94b27ee4",
        "body" : "it's a bit tricky because you need to know the unit id's as registered in the package database for these checks.",
        "createdAt" : "2021-03-12T11:59:17Z",
        "updatedAt" : "2021-03-12T18:50:32Z",
        "lastEditedBy" : "6bbb482c-d598-4c97-ac37-b89d94b27ee4",
        "tags" : [
        ]
      },
      {
        "id" : "cabaa0b1-a7d7-49e0-8b27-0cde82ab93d3",
        "parentId" : "b54ea47f-8a9e-4c1d-8ff8-255ab2232b09",
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "What’s stopping us from figuring out the unit ids during the install phase?",
        "createdAt" : "2021-03-12T12:00:10Z",
        "updatedAt" : "2021-03-12T18:50:32Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "2ea349bb-55b8-4620-8634-07b065adea8c",
        "parentId" : "b54ea47f-8a9e-4c1d-8ff8-255ab2232b09",
        "authorId" : "6bbb482c-d598-4c97-ac37-b89d94b27ee4",
        "body" : "you can do that. I like the idea of the dependencies db to be completely independent of the tricks we need to apply to the package database.",
        "createdAt" : "2021-03-12T12:49:38Z",
        "updatedAt" : "2021-03-12T18:50:32Z",
        "lastEditedBy" : "6bbb482c-d598-4c97-ac37-b89d94b27ee4",
        "tags" : [
        ]
      }
    ],
    "commit" : "4061e93ed9c3219d901d58130ff4e83639604b3c",
    "line" : 96,
    "diffHunk" : "@@ -1,1 +108,112 @@              , dalfsFromDependencies\n              , dalfsFromDataDependencies\n              , mainUnitIds = map decodedUnitId mainDalfs\n              }\n"
  },
  {
    "id" : "4f8e81c5-2108-48a4-b26e-4313a1a65c52",
    "prId" : 8541,
    "prUrl" : "https://github.com/digital-asset/daml/pull/8541",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f4b7cb2d-231c-4e64-a727-7a2c521d5b1a",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "This is growing quite long, maybe a good idea to factor out the check as well as the body of the `when`, so this just turns into something like\r\n```\r\ncreateProjectPackageDb … = do\r\n  needsReinitialization <- getNeedsReinitialization\r\n  when needsReinitialization $ initializeDb\r\n```\r\n\r\nFine to leave that for a separate PR.",
        "createdAt" : "2021-01-19T07:35:00Z",
        "updatedAt" : "2021-01-20T13:54:55Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "f64471ce-af43-4653-86b4-b40c495f7bcb",
        "parentId" : "f4b7cb2d-231c-4e64-a727-7a2c521d5b1a",
        "authorId" : "6bbb482c-d598-4c97-ac37-b89d94b27ee4",
        "body" : "I'll factor it out.",
        "createdAt" : "2021-01-19T11:07:49Z",
        "updatedAt" : "2021-01-20T13:54:55Z",
        "lastEditedBy" : "6bbb482c-d598-4c97-ac37-b89d94b27ee4",
        "tags" : [
        ]
      }
    ],
    "commit" : "b6fb176c23eec633519bb1c62ee5863656dc91d0",
    "line" : 149,
    "diffHunk" : "@@ -1,1 +78,82 @@    (needsReinitalization, depsFingerprint)\n        <- dbNeedsReinitialization projectRoot deps thisSdkVer (show $ optDamlLfVersion opts)\n    when needsReinitalization $ do\n      clearPackageDb\n      depsExtracted <- mapM extractDar deps"
  },
  {
    "id" : "37938f08-4bcd-4a8a-98a9-31bcfaea93be",
    "prId" : 7546,
    "prUrl" : "https://github.com/digital-asset/daml/pull/7546",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "aa4ce0e4-4503-4345-91c3-ef2fd95ae96a",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "I’m confused by this. `thisSdkVer` is now in the GHC format. However `edSdkVersions` is the one read from the manifest which with this change should now be the actual SDK version. What am I missing?",
        "createdAt" : "2020-10-01T14:42:57Z",
        "updatedAt" : "2020-10-02T09:53:40Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "2f063499-e350-4459-8b02-881caef910f3",
        "parentId" : "aa4ce0e4-4503-4345-91c3-ef2fd95ae96a",
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "You're missing nothing. I think I'm missing something now though. Where did we actually need the \"sanitized\" version? To me this looks like the only place we use the `PackageSdkVersion` is in the manifest.",
        "createdAt" : "2020-10-01T15:03:23Z",
        "updatedAt" : "2020-10-02T09:53:40Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      },
      {
        "id" : "3f7afaee-34c6-4a16-a871-c7acc89da682",
        "parentId" : "aa4ce0e4-4503-4345-91c3-ef2fd95ae96a",
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "I’m a bit confused why CI even passes. Shouldn’t the comparison that dependencies have the same sdk version fail with this change? Does it only work because this is not a release build so the SDK version is 0.0.0? What happens if you set `DAML_SDK_RELEASE_VERSION` to a snapshot?\r\n\r\nAs to where this is used: We need to use the mangled version when building `daml-stdlib` and `daml-prim` but that is set in a Bazel build rather than our Haskell code. I’m not quite sure if we need the mangled version in our Haskell code.",
        "createdAt" : "2020-10-01T15:54:22Z",
        "updatedAt" : "2020-10-02T09:53:40Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "78b8bc0e-122d-4020-930a-ad2b0d045a0a",
        "parentId" : "aa4ce0e4-4503-4345-91c3-ef2fd95ae96a",
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "It looks like we don't need the mangled version in our Haskell code at all. I've removed it and ran\r\n```sh\r\nDAML_SDK_RELEASE_VERSION=0.0.0-snapshot.20200930.5312.0.b9a1905d daml-sdk-head --skip-jars\r\n```\r\nThen I've built two projects `foo` and `bar` using that SDK where `bar` depends on `foo` and everything worked fine.\r\n\r\nI'm wondering if we should add a test for this but I assume it doesn't make too much sense since the release PRs for snapshot releases would catch such issues.",
        "createdAt" : "2020-10-02T10:05:16Z",
        "updatedAt" : "2020-10-02T10:05:16Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      },
      {
        "id" : "0b7671fa-e80f-4d76-840c-048fee14099b",
        "parentId" : "aa4ce0e4-4503-4345-91c3-ef2fd95ae96a",
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "Ah, and\r\n```sh\r\nDAML_SDK_RELEASE_VERSION=0.0.0-snapshot.20200930.5312.0.b9a1905d bt //compiler/damlc/tests:packaging\r\n```\r\nworks as well.",
        "createdAt" : "2020-10-02T10:11:33Z",
        "updatedAt" : "2020-10-02T10:11:33Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      }
    ],
    "commit" : "2cf36bbdf603bc2c2de0942bc119265f4d64756f",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +81,85 @@    depsExtracted <- mapM extractDar deps\n\n    let uniqSdkVersions = nubSort $ thisSdkVer : map edSdkVersions depsExtracted\n    let depsSdkVersions = map edSdkVersions depsExtracted\n    unless (all (== thisSdkVer) depsSdkVersions) $"
  },
  {
    "id" : "359db985-de29-4c26-af47-ed34ecd9a137",
    "prId" : 5222,
    "prUrl" : "https://github.com/digital-asset/daml/pull/5222",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "42688e54-f638-4149-aec6-a2126a71c9ba",
        "parentId" : null,
        "authorId" : "181bcece-33df-41af-887d-5d5f51beb543",
        "body" : "Feels weird to me to exit from anywhere other than a `main`, but I'll leave it to you to decide the style of the project. Is it worth trying to catch higher up and explicitly print and exit there?",
        "createdAt" : "2020-03-26T18:35:15Z",
        "updatedAt" : "2020-03-26T18:35:18Z",
        "lastEditedBy" : "181bcece-33df-41af-887d-5d5f51beb543",
        "tags" : [
        ]
      },
      {
        "id" : "f9deaebd-d7fa-43e3-8f7e-405fa5af02ae",
        "parentId" : "42688e54-f638-4149-aec6-a2126a71c9ba",
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "`exitFailure` still throws an exception if you really want to catch it somewhere up. But generally, compilers can be much more lenient wtr to crashing than long-running processes and if we cannot initialize the package db everything is broken anyway.",
        "createdAt" : "2020-03-26T18:38:30Z",
        "updatedAt" : "2020-03-26T18:38:30Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      }
    ],
    "commit" : "3e4a9b2ad073c7ebe422a16088dab9642f2bfade",
    "line" : 41,
    "diffHunk" : "@@ -1,1 +516,520 @@    hPutStrLn stderr msg\n    hFlush stderr\n    exitFailure"
  },
  {
    "id" : "3aa9efc6-6322-417d-96cf-2dffe4e8dde6",
    "prId" : 4547,
    "prUrl" : "https://github.com/digital-asset/daml/pull/4547",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "36f5c6af-2ea5-4c62-94ae-de73e6134b8a",
        "parentId" : null,
        "authorId" : null,
        "body" : "Should say `daml damlc init` instead of `daml init`.\r\n\r\n`daml damlc init` should really be `daml damlc init-package-db` or so.",
        "createdAt" : "2020-02-18T10:56:41Z",
        "updatedAt" : "2020-02-18T10:56:42Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      }
    ],
    "commit" : "bdbde8693bbec46d4f6b6389be185d35834b653c",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +225,229 @@    dbPath = projectPackageDatabase </> lfVersionString (optDamlLfVersion opts)\n    clearPackageDb = do\n        -- Since we reinitialize the whole package db during `daml init` anyway,\n        -- we clear the package db before to avoid\n        -- issues during SDk upgrades. Once we have a more clever mechanism than"
  },
  {
    "id" : "2e0778ae-e40c-4569-8d60-9f8b0dfb0d5a",
    "prId" : 4421,
    "prUrl" : "https://github.com/digital-asset/daml/pull/4421",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ea5a28d1-5960-4464-aa1d-50501d6a3f0d",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "Same here package ids might be useful.",
        "createdAt" : "2020-02-06T12:17:47Z",
        "updatedAt" : "2020-02-06T14:11:54Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "1c5983c9-b4a5-4304-bf35-e7bbb675a33a",
        "parentId" : "ea5a28d1-5960-4464-aa1d-50501d6a3f0d",
        "authorId" : null,
        "body" : "Added here too",
        "createdAt" : "2020-02-06T12:27:20Z",
        "updatedAt" : "2020-02-06T14:11:54Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      }
    ],
    "commit" : "ded024d96b658daf9adac370050f78ba296dd20d",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +163,167 @@            ]\n    when (not $ MS.null unitIdConflicts) $ do\n        fail $ \"Transitive dependencies with same unit id but conflicting package ids: \"\n            ++ intercalate \", \"\n                [ show k <> \" [\" <> intercalate \",\" (map show (Set.toList v)) <> \"]\""
  },
  {
    "id" : "359614ab-cd9f-4a34-a3e6-6a3b64e96faf",
    "prId" : 4391,
    "prUrl" : "https://github.com/digital-asset/daml/pull/4391",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1b4b25f2-2ba4-4ae5-adf0-745820dbb8ff",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "Maybe add a comment here “When compiling dummy interface files for a data-dependency we know all package flags so we don’t need to infer anything.”.",
        "createdAt" : "2020-02-18T08:15:29Z",
        "updatedAt" : "2020-02-18T11:12:21Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      }
    ],
    "commit" : "e29eddf5d338724158422a9fd62bf47e4131c5c1",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +282,286 @@            -- When compiling dummy interface files for a data-dependency,\n            -- we know all package flags so we don’t need to infer anything.\n            , optInferDependantPackages = InferDependantPackages False\n            }\n"
  },
  {
    "id" : "cc267521-354c-4224-825a-2a40e8fe3e8e",
    "prId" : 3860,
    "prUrl" : "https://github.com/digital-asset/daml/pull/3860",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fc8fdfba-ae95-4eef-9255-d6a073bdf9ed",
        "parentId" : null,
        "authorId" : "0aa8e877-303a-4005-8f07-7003661da2a6",
        "body" : "Just to be sure, this is because\r\n> -- [...] This is _only_\r\n    -- relevant for `compile` which at the moment is only used for building daml-stdlib\r\n    -- and daml-prim.\r\n\r\n?",
        "createdAt" : "2019-12-16T13:01:42Z",
        "updatedAt" : "2019-12-16T13:01:53Z",
        "lastEditedBy" : "0aa8e877-303a-4005-8f07-7003661da2a6",
        "tags" : [
        ]
      },
      {
        "id" : "559c8276-8954-47f9-a32b-01614115da86",
        "parentId" : "fc8fdfba-ae95-4eef-9255-d6a073bdf9ed",
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "yep, I’ll remove it completely from the `Options` record in a follow up PR. the current state makes no sense.",
        "createdAt" : "2019-12-16T13:04:08Z",
        "updatedAt" : "2019-12-16T13:04:08Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      }
    ],
    "commit" : "89e5cb64394b55687cea69a70479dd1ac91c74e6",
    "line" : 92,
    "diffHunk" : "@@ -1,1 +294,298 @@                opts\n                    { optWriteInterface = False\n                    , optIfaceDir = Nothing\n                    , optPackageDbs = projectPackageDatabaseAbs : optPackageDbs opts\n                    , optIsGenerated = True"
  },
  {
    "id" : "2660315f-68f7-4f62-90fb-35fb0b5ab985",
    "prId" : 3749,
    "prUrl" : "https://github.com/digital-asset/daml/pull/3749",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b6b8b96d-db62-4d8e-8778-cd299cb149a0",
        "parentId" : null,
        "authorId" : null,
        "body" : "If possible extract `either (fail . DA.Pretty.renderPretty) pure` as a separate function (like `requiredE` from the daml-assistant codebase).\r\n\r\n```suggestion\r\n            requiredE $\r\n```",
        "createdAt" : "2019-12-05T14:22:40Z",
        "updatedAt" : "2019-12-06T08:28:36Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      },
      {
        "id" : "70787ef2-87de-40ff-88b6-f75cee977ce8",
        "parentId" : "b6b8b96d-db62-4d8e-8778-cd299cb149a0",
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "I’ll leave it for now but I agree that we should factor this out eventually.",
        "createdAt" : "2019-12-06T08:30:51Z",
        "updatedAt" : "2019-12-06T08:30:51Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      }
    ],
    "commit" : "1a0ffd6813e1bbccf2096df10bb480c1e97d5008",
    "line" : 126,
    "diffHunk" : "@@ -1,1 +102,106 @@    pkgs <- forM allDalfs $ \\(name, dalf) -> do\n        (pkgId, package) <-\n            either (fail . DA.Pretty.renderPretty) pure $\n            Archive.decodeArchive Archive.DecodeAsMain dalf\n        pure (pkgId, package, dalf, stringToUnitId (parseUnitId name pkgId))"
  },
  {
    "id" : "d0969172-d12f-49a7-841b-629d82f62cf2",
    "prId" : 3633,
    "prUrl" : "https://github.com/digital-asset/daml/pull/3633",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1bc4a2e9-583e-4b20-9010-9ed39f3118a0",
        "parentId" : null,
        "authorId" : "43409235-97e4-48dc-9ec7-403ee0a7de54",
        "body" : "Would it be worth unifying all instances of the string \"Sdk\" into a single named variable?\r\n(I count 10 places in the code base)",
        "createdAt" : "2019-11-26T16:19:05Z",
        "updatedAt" : "2019-11-26T16:19:27Z",
        "lastEditedBy" : "43409235-97e4-48dc-9ec7-403ee0a7de54",
        "tags" : [
        ]
      },
      {
        "id" : "620cac34-39e8-45ca-a2b9-272bb84d5f95",
        "parentId" : "1bc4a2e9-583e-4b20-9010-9ed39f3118a0",
        "authorId" : "6bbb482c-d598-4c97-ac37-b89d94b27ee4",
        "body" : "You're right there.",
        "createdAt" : "2019-11-26T17:04:14Z",
        "updatedAt" : "2019-11-26T17:04:14Z",
        "lastEditedBy" : "6bbb482c-d598-4c97-ac37-b89d94b27ee4",
        "tags" : [
        ]
      },
      {
        "id" : "5ec8af69-85bf-492c-b762-2db5bf48eb0a",
        "parentId" : "1bc4a2e9-583e-4b20-9010-9ed39f3118a0",
        "authorId" : "6bbb482c-d598-4c97-ac37-b89d94b27ee4",
        "body" : "I'll do it in a follow PR.",
        "createdAt" : "2019-11-26T18:28:06Z",
        "updatedAt" : "2019-11-26T18:28:06Z",
        "lastEditedBy" : "6bbb482c-d598-4c97-ac37-b89d94b27ee4",
        "tags" : [
        ]
      }
    ],
    "commit" : "8db0a3656e6463846bbf7e0e4f7962b02bda3c26",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +126,130 @@                        generateTemplateInstancesPkgFromLf\n                            getUid\n                            (Just \"Sdk\")\n                            pkgId\n                            dalf"
  }
]