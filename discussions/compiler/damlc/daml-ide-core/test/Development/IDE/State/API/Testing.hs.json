[
  {
    "id" : "104e93dd-0e24-472a-99e7-a26c0ff7eacc",
    "prId" : 4729,
    "prUrl" : "https://github.com/digital-asset/daml/pull/4729",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ede5b603-d616-487d-b124-21be01f7d667",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "We end up with a slightly different version of HLint that yells about these hints.",
        "createdAt" : "2020-02-26T16:46:34Z",
        "updatedAt" : "2020-02-26T18:12:13Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      }
    ],
    "commit" : "3953e50eabc1fe12d2ef4d54b5bbc4c8c556d224",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +553,557 @@graphToExpectedGraph vGraph = ExpectedGraph vSubgrpaghs vEdges\n    where vSubgrpaghs = map subgraphToExpectedSubgraph (V.subgraphs vGraph)\n          vEdges = map (bimap expectedChcDetails expectedChcDetails) (V.edges vGraph)\n          expectedChcDetails chc = ExpectedChoiceDetails (V.consuming chc)\n                                ((T.unpack . LF.unChoiceName . V.displayChoiceName) chc)"
  },
  {
    "id" : "aa61fd77-9585-430b-b6db-3fcd75006eab",
    "prId" : 2408,
    "prUrl" : "https://github.com/digital-asset/daml/pull/2408",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5c70247a-0ac6-45ed-84d5-2bb6845c3b73",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "You might want to add an unqualified import `import Data.Set (Set)` so you can avoid having to write `Set.Set` everywhere.",
        "createdAt" : "2019-08-06T07:45:08Z",
        "updatedAt" : "2019-08-06T16:16:26Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      }
    ],
    "commit" : "e66f648ae22d4689f10dff3c20c6cea2187cd6d5",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +130,134 @@    { _cName :: String\n    , _consuming :: Bool\n    , _action :: Set.Set ExpectedChoiceAction\n    } deriving (Eq, Ord, Show )\n"
  },
  {
    "id" : "9a7e456c-4dad-48cb-b425-bc4fae05112b",
    "prId" : 2371,
    "prUrl" : "https://github.com/digital-asset/daml/pull/2371",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "68fdfe7e-15d6-4dea-93c6-e6260251e745",
        "parentId" : null,
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "The `_action` field should be moved into `ExpectedChoices`.",
        "createdAt" : "2019-08-05T14:06:58Z",
        "updatedAt" : "2019-08-05T14:08:21Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      },
      {
        "id" : "c9596235-a510-4b9d-91af-03c9aa3bda64",
        "parentId" : "68fdfe7e-15d6-4dea-93c6-e6260251e745",
        "authorId" : "295ee093-aa35-4d63-bc72-cc3a66e7e50c",
        "body" : "Yup, thanks will move it",
        "createdAt" : "2019-08-05T15:25:53Z",
        "updatedAt" : "2019-08-05T15:25:53Z",
        "lastEditedBy" : "295ee093-aa35-4d63-bc72-cc3a66e7e50c",
        "tags" : [
        ]
      }
    ],
    "commit" : "66b5b7e6be738ae8597dd2cb62a7f4df985506f7",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +135,139 @@    { _tplName :: T.Text\n    , _choices :: Set.Set ExpectedChoices\n    , _action :: Set.Set ExpectedChoiceAction\n    } deriving (Eq, Ord, Show)\n"
  },
  {
    "id" : "a316ecf5-d88f-4e85-adeb-36c65efde554",
    "prId" : 2371,
    "prUrl" : "https://github.com/digital-asset/daml/pull/2371",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cc054079-6df8-4ec8-bdd7-2eb44dc31516",
        "parentId" : null,
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "```suggestion\r\ndata ExpectedChoice = ExpectedChoice\r\n```\r\nThis is just about one choice, right?",
        "createdAt" : "2019-08-05T14:07:30Z",
        "updatedAt" : "2019-08-05T14:08:21Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      }
    ],
    "commit" : "66b5b7e6be738ae8597dd2cb62a7f4df985506f7",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +127,131 @@    | Exercise TemplateName ChoiceName deriving (Eq, Ord, Show)\n\ndata ExpectedChoices = ExpectedChoices\n    { _cName :: String\n    , _consuming :: Bool"
  },
  {
    "id" : "c20a5931-ca09-4da1-b07d-29f82f37efbd",
    "prId" : 2325,
    "prUrl" : "https://github.com/digital-asset/daml/pull/2325",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d880045d-0546-43f0-82b2-85cbd47698bd",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "A comment explaining what the `Int` represents would be nice. It looks like it is the sum of the number of actions for each choice? In that case `numActions` might be a better field name. Seems like a slightly weird property to test for but we can always change or extend this later so Iâ€™m happy to keep it for now.",
        "createdAt" : "2019-07-31T07:08:28Z",
        "updatedAt" : "2019-07-31T18:57:12Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "e212a3f1-1fb6-4231-bed4-989751399f96",
        "parentId" : "d880045d-0546-43f0-82b2-85cbd47698bd",
        "authorId" : "295ee093-aa35-4d63-bc72-cc3a66e7e50c",
        "body" : "Yes this `Int` is not adding any value, this is intended to check the action from a choice. I will fill this out in a following PR",
        "createdAt" : "2019-07-31T15:30:00Z",
        "updatedAt" : "2019-07-31T18:57:12Z",
        "lastEditedBy" : "295ee093-aa35-4d63-bc72-cc3a66e7e50c",
        "tags" : [
        ]
      }
    ],
    "commit" : "3a390e5baed8d24cb1eac9a25b9951eb49ad4db9",
    "line" : 72,
    "diffHunk" : "@@ -1,1 +125,129 @@data TemplateProp = TemplateProp\n    { _choices :: Set.Set ExpectedChoices\n    , _action :: Int\n    } deriving (Eq, Ord, Show)\n"
  },
  {
    "id" : "f1c84b49-f297-4dcd-85de-c1059538bdee",
    "prId" : 2325,
    "prUrl" : "https://github.com/digital-asset/daml/pull/2325",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ae9f82c7-132b-4a91-b4a1-bf7cce1ecf2f",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "I would add an `expectNoErrors` call here. That way you get usable diagnostics if it fails.\r\nAnd then, I would just turn the `Nothing` case into a pattern match failure, e.g.,\r\n`Just dalf <- pure mbDalf`",
        "createdAt" : "2019-07-31T07:14:48Z",
        "updatedAt" : "2019-07-31T18:57:12Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "cf674de2-33a3-4af2-b409-3597c41aaf98",
        "parentId" : "ae9f82c7-132b-4a91-b4a1-bf7cce1ecf2f",
        "authorId" : "295ee093-aa35-4d63-bc72-cc3a66e7e50c",
        "body" : "Thanks for the help with this, Using monad fail now.",
        "createdAt" : "2019-07-31T18:31:41Z",
        "updatedAt" : "2019-07-31T18:57:12Z",
        "lastEditedBy" : "295ee093-aa35-4d63-bc72-cc3a66e7e50c",
        "tags" : [
        ]
      }
    ],
    "commit" : "3a390e5baed8d24cb1eac9a25b9951eb49ad4db9",
    "line" : 104,
    "diffHunk" : "@@ -1,1 +529,533 @@expectedTemplatePoperties damlFilePath expectedProps = do\n    ideState <- ShakeTest $ Reader.asks steService\n    mbDalf <- liftIO $ API.runAction ideState (API.getDalf damlFilePath)\n    expectNoErrors\n    Just lfPkg <- pure mbDalf"
  }
]