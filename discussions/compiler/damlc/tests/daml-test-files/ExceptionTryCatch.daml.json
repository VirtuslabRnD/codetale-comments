[
  {
    "id" : "a6a86140-6edf-4a96-8a27-c438792e63ff",
    "prId" : 9203,
    "prUrl" : "https://github.com/digital-asset/daml/pull/9203",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "262ae4cb-5321-4a35-aa11-d0eb62b2c9fd",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "Because of alignment?",
        "createdAt" : "2021-03-23T13:36:09Z",
        "updatedAt" : "2021-03-25T12:11:19Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "c29aa4ad-7c02-452b-9626-f51d37a0804f",
        "parentId" : "262ae4cb-5321-4a35-aa11-d0eb62b2c9fd",
        "authorId" : "f7ed27fc-83ac-401f-af8b-91c645eda7e9",
        "body" : "Because of the `x <-` and the alignment. But I think I have a fix.",
        "createdAt" : "2021-03-23T15:50:42Z",
        "updatedAt" : "2021-03-25T12:11:19Z",
        "lastEditedBy" : "f7ed27fc-83ac-401f-af8b-91c645eda7e9",
        "tags" : [
        ]
      }
    ],
    "commit" : "a470356b0f4f4756ba4fbcb3b673a0b289818579",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +36,40 @@        pure (10 / 0)\n    catch\n        (_: ArithmeticError) -> pure 0\n    pure (x+1)\n"
  },
  {
    "id" : "73baae83-deac-4b88-b0d9-21422cc2cac6",
    "prId" : 9203,
    "prUrl" : "https://github.com/digital-asset/daml/pull/9203",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0ab400f0-55cb-46a7-a7a5-123570ba5b72",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "maybe add a test that uses guards somewhere. Perhaps also worth testing that you get a more or less sensible error if you have multiple patterns in a case.",
        "createdAt" : "2021-03-23T13:55:01Z",
        "updatedAt" : "2021-03-25T12:11:19Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      }
    ],
    "commit" : "a470356b0f4f4756ba4fbcb3b673a0b289818579",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +7,11 @@module ExceptionTryCatch where\n\nimport DA.Exception\n\ntest1 : ActionCatch m => m Int"
  }
]