[
  {
    "id" : "27d90df8-e9cd-4844-82f2-44a44002978f",
    "prId" : 3161,
    "prUrl" : "https://github.com/digital-asset/daml/pull/3161",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0be5f7ad-0ea5-4518-af8f-8923c992c574",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "Do we use `External` for anything coming from an external package? I think we might want to special case this for `Archive` given how common it is.",
        "createdAt" : "2019-10-11T16:36:25Z",
        "updatedAt" : "2019-10-11T16:39:10Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "454df8c5-fb96-49c0-a9dd-bc5b30d10822",
        "parentId" : "0be5f7ad-0ea5-4518-af8f-8923c992c574",
        "authorId" : "47456c32-5020-4def-a2b4-79c67e41159e",
        "body" : "Good point, worth a special case.\r\nWhen I added this, the desugaring for templates was different, and was used in our code for what is now achieved by generic template instances.",
        "createdAt" : "2019-10-13T20:44:19Z",
        "updatedAt" : "2019-10-13T20:44:19Z",
        "lastEditedBy" : "47456c32-5020-4def-a2b4-79c67e41159e",
        "tags" : [
        ]
      },
      {
        "id" : "987389e6-26ca-49c2-ae22-038cadb2be09",
        "parentId" : "0be5f7ad-0ea5-4518-af8f-8923c992c574",
        "authorId" : null,
        "body" : "I'll remove it in a separate PR.",
        "createdAt" : "2019-10-14T08:43:10Z",
        "updatedAt" : "2019-10-14T08:43:10Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      }
    ],
    "commit" : "f2c6565d8de0c44efa30373c85667291956291be",
    "line" : 73,
    "diffHunk" : "@@ -1,1 +73,77 @@       - \n  \n  + **Choice External\\:Archive**\n    \n  "
  },
  {
    "id" : "0a1c8f69-8cc2-4e47-8239-09b6c0229bfa",
    "prId" : 3161,
    "prUrl" : "https://github.com/digital-asset/daml/pull/3161",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3fb2933d-55bc-47f4-a0fa-042462df664e",
        "parentId" : null,
        "authorId" : "47456c32-5020-4def-a2b4-79c67e41159e",
        "body" : "BTW further down this output there is documentation for an expoerted `Constr3` (I cannot place the comment on any relevant line because none of them changed).\r\nThe rst contains a _link_ and link target for the constructor. These constructor link targets are syntactically incorrect in rst because of their indentation. Also, the link is outright _useless_ IMHO - how would anyone/anything want to link to a constructor when all documentation is about _types_ not values?\r\n\r\nWould be good to remove the constructor links altogether.",
        "createdAt" : "2019-10-13T22:45:52Z",
        "updatedAt" : "2019-10-13T22:48:56Z",
        "lastEditedBy" : "47456c32-5020-4def-a2b4-79c67e41159e",
        "tags" : [
        ]
      },
      {
        "id" : "05b435e9-9018-414d-8726-2ce8ad666c10",
        "parentId" : "3fb2933d-55bc-47f4-a0fa-042462df664e",
        "authorId" : null,
        "body" : "Disagree on both counts. The links are syntactically correct.  And they're not useless at all. There's lots of examples of such links in the DAML standard library docs, by the way.",
        "createdAt" : "2019-10-14T08:39:38Z",
        "updatedAt" : "2019-10-14T08:39:51Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      }
    ],
    "commit" : "f2c6565d8de0c44efa30373c85667291956291be",
    "line" : 105,
    "diffHunk" : "@@ -1,1 +105,109 @@Typeclasses\n^^^^^^^^^^^\n\n.. _class-exportlist-class1-82332:\n"
  }
]