[
  {
    "id" : "48583c65-c757-4e41-b473-e5d38de930ee",
    "prId" : 4104,
    "prUrl" : "https://github.com/digital-asset/daml/pull/4104",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "049f6d10-8ad4-45e4-89a4-232999bc3031",
        "parentId" : null,
        "authorId" : "0aa8e877-303a-4005-8f07-7003661da2a6",
        "body" : "Does this test reliably fail without this change? It seems that [\"Zip entry timestamps are recorded only to two 2 second precision\"](https://www.mindprod.com/jgloss/zip.html). If not, maybe we could use something like `faketime` to make this test reliably fail if the timestamp is not deterministic?",
        "createdAt" : "2020-01-20T09:53:33Z",
        "updatedAt" : "2020-01-20T09:54:50Z",
        "lastEditedBy" : "0aa8e877-303a-4005-8f07-7003661da2a6",
        "tags" : [
        ]
      },
      {
        "id" : "36681ebf-e24a-4587-8016-54f9c2067061",
        "parentId" : "049f6d10-8ad4-45e4-89a4-232999bc3031",
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "It sadly doesn’t fail reliably on a single-run but if you run it a couple of times, it fails reliably. I took a brief look at `libfaketime` last week but it didn’t seem worth the complexity for now.",
        "createdAt" : "2020-01-20T10:00:05Z",
        "updatedAt" : "2020-01-20T10:00:05Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "beca0fac-04ac-4396-ae7a-d3859724b155",
        "parentId" : "049f6d10-8ad4-45e4-89a4-232999bc3031",
        "authorId" : null,
        "body" : "You could add a `sleep 10` in between the first and second build to make it fail more reliably.\r\n\r\n(Plus, any code with `sleep` must be the good code.)",
        "createdAt" : "2020-01-20T10:42:45Z",
        "updatedAt" : "2020-01-20T10:42:45Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      },
      {
        "id" : "d19dfcbd-93d4-48ff-9f5e-eda9d5bf545e",
        "parentId" : "049f6d10-8ad4-45e4-89a4-232999bc3031",
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "This is a terrible idea, I love it :heart: ",
        "createdAt" : "2020-01-20T11:44:48Z",
        "updatedAt" : "2020-01-20T11:44:48Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "beca96e4-06b5-4980-9f8b-2fe89327287c",
        "parentId" : "049f6d10-8ad4-45e4-89a4-232999bc3031",
        "authorId" : "0aa8e877-303a-4005-8f07-7003661da2a6",
        "body" : "> It sadly doesn’t fail reliably on a single-run but if you run it a couple of times, it fails reliably. I took a brief look at `libfaketime` last week but it didn’t seem worth the complexity for now.\r\n\r\nThat's fair.\r\n\r\n> You could add a sleep 10 in between the first and second build to make it fail more reliably.\r\n\r\nYeah, let's try not to make CI intentionally slower.",
        "createdAt" : "2020-01-20T11:50:57Z",
        "updatedAt" : "2020-01-20T11:50:58Z",
        "lastEditedBy" : "0aa8e877-303a-4005-8f07-7003661da2a6",
        "tags" : [
        ]
      }
    ],
    "commit" : "3cdd961b732a95f15d739dde089c9b113ef25373",
    "line" : 37,
    "diffHunk" : "@@ -1,1 +85,89 @@\n$damlc build --project-root \"$PROJDIR\" -o \"$PROJDIR/out.dar\"\nSECOND_SHA=$(sha256sum $PROJDIR/out.dar)\n\nif [[ $FIRST_SHA != $SECOND_SHA ]]; then"
  }
]