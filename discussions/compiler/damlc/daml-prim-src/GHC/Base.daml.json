[
  {
    "id" : "144400a3-46a6-46fd-812e-cc7e1a9f041b",
    "prId" : 7969,
    "prUrl" : "https://github.com/digital-asset/daml/pull/7969",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fe071f5a-fd72-4086-bdbf-f0a696804936",
        "parentId" : null,
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "Let's hope nobody has used `$` with explicit type applications so far. I mean, why would you, but still. And there's a simple workaround: just don't use `$`. ðŸ’¸",
        "createdAt" : "2020-11-16T12:08:07Z",
        "updatedAt" : "2020-11-16T14:15:09Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      },
      {
        "id" : "da10e450-9308-463f-9efe-2f22202f05b8",
        "parentId" : "fe071f5a-fd72-4086-bdbf-f0a696804936",
        "authorId" : "f7ed27fc-83ac-401f-af8b-91c645eda7e9",
        "body" : "So, technically this is breaking the existing standard library interface. But it's also a bug fix in the sense that it makes `($)` work with ApplicativeDo. Do you want to weigh in on this, @bame-da?",
        "createdAt" : "2020-11-16T12:24:37Z",
        "updatedAt" : "2020-11-16T14:15:09Z",
        "lastEditedBy" : "f7ed27fc-83ac-401f-af8b-91c645eda7e9",
        "tags" : [
        ]
      },
      {
        "id" : "68e6645d-2e46-4389-bfb7-80830b0ddf14",
        "parentId" : "fe071f5a-fd72-4086-bdbf-f0a696804936",
        "authorId" : "c2a5fc86-d15f-4be2-b872-e38684970a45",
        "body" : "All good from my end.",
        "createdAt" : "2020-11-16T12:36:58Z",
        "updatedAt" : "2020-11-16T14:15:09Z",
        "lastEditedBy" : "c2a5fc86-d15f-4be2-b872-e38684970a45",
        "tags" : [
        ]
      }
    ],
    "commit" : "6fcaaf57f58db9956392477f1c7da06ae08d5720",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +96,100 @@-- This function has a very low precedence, which is why you might want to use\n-- it instead of regular function application.\n($) : forall r a (b : TYPE r). (a -> b) -> a -> b\nf $ x =  f x"
  }
]