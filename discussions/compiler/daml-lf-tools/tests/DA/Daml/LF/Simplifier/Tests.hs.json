[
  {
    "id" : "d4e2c453-04b1-4080-93f4-77c3efa68955",
    "prId" : 6519,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6519",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e2d2ed8a-3697-4bdb-87a4-ac62b17c6ceb",
        "parentId" : null,
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "Aren't we rewriting that into\r\n```\r\n\\z. let x = z in \\y. y\r\n```\r\nbecause `z` is safe?",
        "createdAt" : "2020-06-29T13:45:52Z",
        "updatedAt" : "2020-06-29T13:48:29Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      },
      {
        "id" : "9f624eb8-c9a8-4adb-9cff-c5d6be3b6ba0",
        "parentId" : "e2d2ed8a-3697-4bdb-87a4-ac62b17c6ceb",
        "authorId" : "f7ed27fc-83ac-401f-af8b-91c645eda7e9",
        "body" : "We are not, because `\\xy.y` is closed and is therefore lifted.\r\n\r\nIt's arguable what the right thing to do is (the eta reduced `\\z\\y.y` would be even better than `\\z. let x = z in \\y. y`), but we can achieve both of these with separate optimizations (inlining vs eta reduction).",
        "createdAt" : "2020-06-29T13:51:20Z",
        "updatedAt" : "2020-06-29T13:51:20Z",
        "lastEditedBy" : "f7ed27fc-83ac-401f-af8b-91c645eda7e9",
        "tags" : [
        ]
      }
    ],
    "commit" : "440feb2dd24c7f3dc86bb2c8dd4726f4c78d6f19",
    "line" : 61,
    "diffHunk" : "@@ -1,1 +59,63 @@                    (EVar (ExprVarName \"y\"))))\n        ]\n    , mkTestCase \"\\\\z.(\\\\xy.y)z\" -- test that we're lifting closed lambda subexpressions\n        [ dval \"foo\" (TInt64 :-> TInt64 :-> TInt64)\n            (ETmLam (ExprVarName \"z\", TInt64)"
  },
  {
    "id" : "0dc3fd75-e3ce-4258-9256-7755e7831fd5",
    "prId" : 6519,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6519",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e2c7f415-addd-423d-9123-00f0719100e0",
        "parentId" : null,
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "Maybe it's worth adding one more case that somehow resembles lifting a computed dictionary, like to one for `Show [Int]`.",
        "createdAt" : "2020-06-29T13:47:58Z",
        "updatedAt" : "2020-06-29T13:48:29Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      },
      {
        "id" : "5fe5ba6f-d59a-46af-9a76-640f717de6a1",
        "parentId" : "e2c7f415-addd-423d-9123-00f0719100e0",
        "authorId" : "f7ed27fc-83ac-401f-af8b-91c645eda7e9",
        "body" : "This is a good idea!",
        "createdAt" : "2020-06-29T13:52:41Z",
        "updatedAt" : "2020-06-29T13:52:41Z",
        "lastEditedBy" : "f7ed27fc-83ac-401f-af8b-91c645eda7e9",
        "tags" : [
        ]
      },
      {
        "id" : "6765daac-ceb3-4d3f-b8d6-36e27380a195",
        "parentId" : "e2c7f415-addd-423d-9123-00f0719100e0",
        "authorId" : "f7ed27fc-83ac-401f-af8b-91c645eda7e9",
        "body" : "(I'm going to add this in a separate PR!)",
        "createdAt" : "2020-06-29T16:26:02Z",
        "updatedAt" : "2020-06-29T16:26:02Z",
        "lastEditedBy" : "f7ed27fc-83ac-401f-af8b-91c645eda7e9",
        "tags" : [
        ]
      }
    ],
    "commit" : "440feb2dd24c7f3dc86bb2c8dd4726f4c78d6f19",
    "line" : 81,
    "diffHunk" : "@@ -1,1 +79,83 @@            -- NOTE: this is a candidate for eta reduction, may be optimized in the future\n        ]\n    ]\n  where\n    mkTestCase :: String -> [DefValue] -> [DefValue] -> TestTree"
  }
]