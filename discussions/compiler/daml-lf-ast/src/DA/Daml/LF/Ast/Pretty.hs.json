[
  {
    "id" : "e5cc1f63-7060-40e4-b66a-28def9affdce",
    "prId" : 9716,
    "prUrl" : "https://github.com/digital-asset/daml/pull/9716",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "68cfa227-12bc-4622-97c3-fba796479870",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "Can we also rename the constructors?",
        "createdAt" : "2021-05-18T07:21:38Z",
        "updatedAt" : "2021-05-18T07:30:49Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "b76cc1c6-a7a1-46f7-9f8c-fb0ff3407c5b",
        "parentId" : "68cfa227-12bc-4622-97c3-fba796479870",
        "authorId" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "body" : "in another PR",
        "createdAt" : "2021-05-18T08:12:27Z",
        "updatedAt" : "2021-05-18T08:12:27Z",
        "lastEditedBy" : "7e495b20-db12-4c9f-84f9-0c729e38a0c9",
        "tags" : [
        ]
      }
    ],
    "commit" : "eb7a25d5fc14df5e91c9477a78870c24c8279a28",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +258,262 @@    BEGreaterNumeric -> \"GREATER_NUMERIC\"\n    BENumericFromText -> \"TEXT_TO_NUMERIC\"\n    BEToTextNumeric -> \"NUMERIC_TO_TEXT\"\n    BEScaleBigNumeric -> \"SCALE_BIGNUMERIC\"\n    BEPrecisionBigNumeric -> \"PRECISION_BIGNUMERIC\""
  },
  {
    "id" : "65f05fe0-4b10-4ffb-ab5e-00179cacb4ca",
    "prId" : 8112,
    "prUrl" : "https://github.com/digital-asset/daml/pull/8112",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7ca8f3a7-17a4-47cc-83b7-d5597d9d9f13",
        "parentId" : null,
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "We might a bit more verticality (is that a word?) here. But it's hard to tell if we don't have any producers for these AST nodes. Thus, let's have a look at the resulting output once we have the parser done. If we forget it, it's also not the end of the world since this is not for users anyway.",
        "createdAt" : "2020-11-30T15:19:07Z",
        "updatedAt" : "2020-11-30T15:37:49Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      },
      {
        "id" : "d7c9a16a-dba2-4a47-a476-dda072f3fdc8",
        "parentId" : "7ca8f3a7-17a4-47cc-83b7-d5597d9d9f13",
        "authorId" : "f7ed27fc-83ac-401f-af8b-91c645eda7e9",
        "body" : "👍 Makes sense.",
        "createdAt" : "2020-11-30T15:57:49Z",
        "updatedAt" : "2020-11-30T15:57:49Z",
        "lastEditedBy" : "f7ed27fc-83ac-401f-af8b-91c645eda7e9",
        "tags" : [
        ]
      }
    ],
    "commit" : "5460be3dfb25af6f956974b06f80a02376c2cf77",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +408,412 @@      pPrintAppKeyword lvl prec \"ulookup_by_key\" [tplArg retrieveByKeyTemplate, TmArg retrieveByKeyKey]\n    UTryCatch t e1 x e2 -> keyword_ \"try\" <-> pPrintTyArg lvl t <-> pPrintTmArg lvl e1\n      <-> keyword_ \"catch\" <-> pPrintPrec lvl precParam x <-> keyword_ \".\" <-> pPrintTmArg lvl e2\n\ninstance Pretty Scenario where"
  },
  {
    "id" : "0eb38a1e-bc61-43b6-a6fc-55ca70dd9e82",
    "prId" : 6280,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6280",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "21505566-5d4b-4251-806a-ba56b2e5350b",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "Your PR description says that you no longer emit kind annotations if the kind is start but this change seems to be doing exactly the opposite? We special-cased star before and did not emit the kind annotation whereas now we no longer special-case it.",
        "createdAt" : "2020-06-10T06:36:28Z",
        "updatedAt" : "2020-06-10T07:40:21Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "77fcd31d-8085-42bc-9b64-24d07cb229b9",
        "parentId" : "21505566-5d4b-4251-806a-ba56b2e5350b",
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "Looks like there are too many negations in my PR description. It says\r\n> * Kind annotations are no longer omitted when the kind is `*` (star).\r\n\r\nMeaning, we now emit kind annotations even when the kind is `*`.",
        "createdAt" : "2020-06-10T07:06:18Z",
        "updatedAt" : "2020-06-10T07:40:21Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      },
      {
        "id" : "5d6e3cd4-e251-4dcb-951d-07d05a913a0c",
        "parentId" : "21505566-5d4b-4251-806a-ba56b2e5350b",
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "I misread omitted as emitted :facepalm: ",
        "createdAt" : "2020-06-10T07:40:10Z",
        "updatedAt" : "2020-06-10T07:40:21Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      }
    ],
    "commit" : "70954984b4ae80f38f6e0ce1578a074d463fe13b",
    "line" : 54,
    "diffHunk" : "@@ -1,1 +310,314 @@pPrintAndKind :: Pretty a => PrettyLevel -> Rational -> (a, Kind) -> Doc ann\npPrintAndKind lvl prec (v, k)\n  | levelHasKinds lvl = maybeParens (prec > precBinding) $\n      pPrintPrec lvl 0 v <-> docHasType <-> kind_ (pPrintPrec lvl 0 k)\n  | otherwise = pPrintPrec lvl 0 v"
  },
  {
    "id" : "80cc8091-0493-46c0-b315-64d01d6c7d7b",
    "prId" : 6280,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6280",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8547b15d-c255-412e-a7ba-3300dcc6c6c5",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "The description above mentions that you omit type annotations. Emitting type applications is another step imho. Not opposed to it but maybe update the comment.",
        "createdAt" : "2020-06-10T06:38:32Z",
        "updatedAt" : "2020-06-10T07:40:21Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "527c2e90-67f9-4c35-b64e-48749282d5d3",
        "parentId" : "8547b15d-c255-412e-a7ba-3300dcc6c6c5",
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "Good point. I should say we omit type information in level -2. It's not only type annotations but also type applications and type abstraction.",
        "createdAt" : "2020-06-10T07:37:51Z",
        "updatedAt" : "2020-06-10T07:40:21Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      }
    ],
    "commit" : "70954984b4ae80f38f6e0ce1578a074d463fe13b",
    "line" : 86,
    "diffHunk" : "@@ -1,1 +468,472 @@      in  hang (docTmLambda <> hsep (map (pPrintAndType lvl precParam) bs) <> docTmLambdaDot)\n            2 (pPrintPrec lvl precELam e1)\n    e0@ETyLam{}\n      | levelHasTypes lvl ->\n        maybeParens (prec > precELam) $"
  },
  {
    "id" : "6f0b1640-4a71-40a6-ae1e-2c115fc0e6a2",
    "prId" : 2530,
    "prUrl" : "https://github.com/digital-asset/daml/pull/2530",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "aa37712b-fa50-4b32-962d-add95e79799f",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "Just to be clear, my “simplification” you mean that this simplifies the result not only the code right? This definitely seems to change how things are printed so “simplification” seems somewhat misleading.",
        "createdAt" : "2019-08-14T09:34:14Z",
        "updatedAt" : "2019-08-14T09:34:24Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "c2162fcb-62a9-41dd-8f9c-f4cf5e0d452a",
        "parentId" : "aa37712b-fa50-4b32-962d-add95e79799f",
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "What I had before was supposed to do what we do now but it didn't.",
        "createdAt" : "2019-08-14T09:51:50Z",
        "updatedAt" : "2019-08-14T09:51:50Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      }
    ],
    "commit" : "fe2120a7950d1e101847fb01a9b188dd31cfdcc7",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +422,426 @@    EScenario scen -> pPrintPrec lvl prec scen\n    ELocation loc x\n        | lvl >= PrettyLevel 1 -> prettyAppDoc lvl prec (\"@location\" <> parens (pretty loc)) [TmArg x]\n        | otherwise -> pPrintPrec lvl prec x\n    ESome typ body -> prettyAppKeyword lvl prec \"some\" [TyArg typ, TmArg body]"
  }
]