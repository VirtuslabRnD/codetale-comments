[
  {
    "id" : "546cf122-d6fa-49bb-b50d-7a2308546366",
    "prId" : 2398,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/2398#pullrequestreview-37516412",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ae2000ac-86dc-49be-87e5-a87decdc0685",
        "parentId" : null,
        "authorId" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "body" : "Note that with both scalac and doty, not using `private[this]` here will generate a pair of getter and setter, this is arguably something that we should fix in the compiler since `private[this]` and `private` should be considered equivalent in an object.",
        "createdAt" : "2017-05-08T17:30:57Z",
        "updatedAt" : "2017-05-08T17:30:57Z",
        "lastEditedBy" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "tags" : [
        ]
      },
      {
        "id" : "60599af5-e0bc-46f6-8c53-fd620c3813eb",
        "parentId" : "ae2000ac-86dc-49be-87e5-a87decdc0685",
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "Let's leave it like this. Do we have an issue for this?",
        "createdAt" : "2017-05-11T08:50:53Z",
        "updatedAt" : "2017-05-11T08:50:53Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      }
    ],
    "commit" : "71cadcea87220b89b7eff80c8ff7daaf5cb34b49",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +212,216 @@\n    /** The synthesizer to be used, or `null` if no synthesis is done on this scope */\n    private var synthesize: SymbolSynthesizer = null\n\n    /** Use specified synthesize for this scope */"
  },
  {
    "id" : "dc80b5ca-d963-465f-af83-7cb093cab601",
    "prId" : 2398,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/2398#pullrequestreview-37517100",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "730625d6-e894-478c-b51f-5573f22d97f3",
        "parentId" : null,
        "authorId" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "body" : "For efficiency, I would consider using `(Name, Context) => Symbol` instead, but that might be a premature optimization.",
        "createdAt" : "2017-05-08T17:31:49Z",
        "updatedAt" : "2017-05-08T17:31:49Z",
        "lastEditedBy" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "tags" : [
        ]
      },
      {
        "id" : "030e8b2c-d240-45cd-9bb9-aed267d0ff98",
        "parentId" : "730625d6-e894-478c-b51f-5573f22d97f3",
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "I would assume that with our current simple use cases the JVM must be capable of inlineing the this additional lambda. Seem a bit premature optimization.",
        "createdAt" : "2017-05-11T08:53:52Z",
        "updatedAt" : "2017-05-11T08:53:53Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      }
    ],
    "commit" : "71cadcea87220b89b7eff80c8ff7daaf5cb34b49",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +44,48 @@   *  no symbol should be synthesized for the given name.\n   */\n  type SymbolSynthesizer = Name => Context => Symbol\n\n  class ScopeEntry private[Scopes] (val name: Name, _sym: Symbol, val owner: Scope) {"
  }
]