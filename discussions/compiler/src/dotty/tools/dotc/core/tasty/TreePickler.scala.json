[
  {
    "id" : "3719fe2d-08f1-4bc8-af57-6e5c0df8acb0",
    "prId" : 11595,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/11595#pullrequestreview-604469864",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6b100d61-6245-4203-b2ba-ef686b0a8f38",
        "parentId" : null,
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "Do we need to allow other modifiers like annotations? Can these be on the binding or are they always on the type?",
        "createdAt" : "2021-03-04T10:29:18Z",
        "updatedAt" : "2021-03-04T10:29:18Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      },
      {
        "id" : "222b0e69-82d2-4368-a8c9-cfbbf447c741",
        "parentId" : "6b100d61-6245-4203-b2ba-ef686b0a8f38",
        "authorId" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "body" : "They should be on the type.  Are there other flags on bound symbols except Implicit or Given?\r\n\r\n",
        "createdAt" : "2021-03-04T16:26:02Z",
        "updatedAt" : "2021-03-04T16:26:02Z",
        "lastEditedBy" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "tags" : [
        ]
      },
      {
        "id" : "0bf385a6-f2d3-4db8-972d-3341ff32d682",
        "parentId" : "6b100d61-6245-4203-b2ba-ef686b0a8f38",
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "Not now. But I could imagine there could be a Synthetic flag added to some of those.\r\n\r\nIt may also make sense to have `Erased` and `Inline` in the future. Such as in #11598.",
        "createdAt" : "2021-03-04T19:24:28Z",
        "updatedAt" : "2021-03-04T19:24:28Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      }
    ],
    "commit" : "6b193651e0eec9e343e3735ab771f187156e2242",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +536,540 @@            pickleType(sym.info)\n            pickleTree(body)\n            pickleFlags(sym.flags &~ Case, sym.isTerm)\n          }\n        case Alternative(alts) =>"
  },
  {
    "id" : "8106bb9e-9ecd-4ff3-8f10-7230e46a084e",
    "prId" : 9063,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/9063#pullrequestreview-420481505",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8f9b3603-1e51-4a87-abce-206335da79f3",
        "parentId" : null,
        "authorId" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "body" : "I don't understand how this is enough for disambiguation. In #9050 both overloads of `append` are defined in the same owner: `Buffer`. Shouldn't we pickle the type of the overload itself?",
        "createdAt" : "2020-05-28T15:55:47Z",
        "updatedAt" : "2020-06-04T08:44:35Z",
        "lastEditedBy" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "tags" : [
        ]
      },
      {
        "id" : "1f09e26c-4886-4e1e-bab7-2ccce34cca5c",
        "parentId" : "8f9b3603-1e51-4a87-abce-206335da79f3",
        "authorId" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "body" : "The signature of the symbol is enough. The two signatures are always different or we would get a \"have the same erasure\" error. But it has to be the signature of the symbol itself, not the signature after asSeenFrom.\r\n",
        "createdAt" : "2020-05-28T20:45:11Z",
        "updatedAt" : "2020-06-04T08:44:35Z",
        "lastEditedBy" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "tags" : [
        ]
      },
      {
        "id" : "ad4d6045-502b-4897-9cd8-113945140aa5",
        "parentId" : "8f9b3603-1e51-4a87-abce-206335da79f3",
        "authorId" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "body" : "Ah I see, I missed that the signature comes from the symbol here. I think this is worth explaining in more details in the TastyFormat documentation since it's pretty subtle and doing the wrong thing will appear to work most of the time.",
        "createdAt" : "2020-05-28T20:50:30Z",
        "updatedAt" : "2020-06-04T08:44:35Z",
        "lastEditedBy" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "tags" : [
        ]
      }
    ],
    "commit" : "19e658ca38f03961d5f8e8f4dff1832681548354",
    "line" : 53,
    "diffHunk" : "@@ -1,1 +392,396 @@                  pickleNameAndSig(name, tree.symbol.signature)\n                  pickleTree(qual)\n                  pickleType(tree.symbol.owner.typeRef)\n                }\n              else"
  },
  {
    "id" : "ef3d496e-4a3c-4d2d-850b-b5c7979cd925",
    "prId" : 8561,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/8561#pullrequestreview-385511727",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "95afb196-0c8d-4895-8a02-8a57c63870c1",
        "parentId" : null,
        "authorId" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "body" : "If we change the tasty format, should we update the tasty version?",
        "createdAt" : "2020-04-01T09:16:25Z",
        "updatedAt" : "2020-04-01T12:21:36Z",
        "lastEditedBy" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "tags" : [
        ]
      },
      {
        "id" : "1f0b62b6-cb88-495d-bfd5-40bdbfa323dd",
        "parentId" : "95afb196-0c8d-4895-8a02-8a57c63870c1",
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "Yes, I missed it",
        "createdAt" : "2020-04-01T11:16:23Z",
        "updatedAt" : "2020-04-01T12:21:36Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      },
      {
        "id" : "6a0ed0ce-2dfa-423b-80cd-dc1e5882fc84",
        "parentId" : "95afb196-0c8d-4895-8a02-8a57c63870c1",
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "Oh, I rebased on another PR that also changed it.",
        "createdAt" : "2020-04-01T11:54:05Z",
        "updatedAt" : "2020-04-01T12:21:36Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      }
    ],
    "commit" : "cebfdd8f5b6249aa1f7d8f4870bf0da7b7349152",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +605,609 @@          withLength {\n            writeNat(idx)\n            pickleType(tree.tpe, richTypes = true)\n            args.foreach(pickleTree)\n          }"
  },
  {
    "id" : "ee47f959-a828-4cef-91c0-692ca4ba39b9",
    "prId" : 4616,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/4616#pullrequestreview-138317150",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "292aed23-cc4d-4f22-868f-8bfbab40e2ce",
        "parentId" : null,
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "Is it intentional to not have the `registerTreeAddr` like in the typed version?",
        "createdAt" : "2018-07-18T14:02:17Z",
        "updatedAt" : "2018-07-26T14:54:44Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      },
      {
        "id" : "9dd37fcb-c118-465e-94e0-0fff433b71d8",
        "parentId" : "292aed23-cc4d-4f22-868f-8bfbab40e2ce",
        "authorId" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "body" : "Yes. Untyped trees have no cross-references.",
        "createdAt" : "2018-07-18T15:42:01Z",
        "updatedAt" : "2018-07-26T14:54:44Z",
        "lastEditedBy" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "tags" : [
        ]
      }
    ],
    "commit" : "88e7d180574eda8a71037d1735ac6a3ff76a1c08",
    "line" : 127,
    "diffHunk" : "@@ -1,1 +674,678 @@\n    def pickleParam(tree: untpd.Tree): Unit = tree match {\n      case tree: untpd.ValDef => pickleDef(PARAM, tree, tree.tpt)\n      case tree: untpd.DefDef => pickleDef(PARAM, tree, tree.tpt, tree.rhs)\n      case tree: untpd.TypeDef => pickleDef(TYPEPARAM, tree, tree.rhs)"
  },
  {
    "id" : "334a34f7-d79c-4c2e-9850-b8f2a938d882",
    "prId" : 4616,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/4616#pullrequestreview-138606646",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "784927bb-79f4-4b98-a35b-ed7b8ffca41e",
        "parentId" : null,
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "Shouldn't we have a `THICKET` tag? I also don't see any logic that unpickles Thickets in this commit",
        "createdAt" : "2018-07-18T14:09:38Z",
        "updatedAt" : "2018-07-26T14:54:44Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      },
      {
        "id" : "6a1db837-0024-4433-85ff-9623022430dd",
        "parentId" : "784927bb-79f4-4b98-a35b-ed7b8ffca41e",
        "authorId" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "body" : "There is no situation in the Tasty format where we pickle thickets separately. Instead, they are always inlined.  Except for empty trees, which need to be kept around in some situations (untyped first, but since the last commit where we mark inlined arguments we also have a situation where EmptyTree can show up as a typed tree).",
        "createdAt" : "2018-07-18T15:41:23Z",
        "updatedAt" : "2018-07-26T14:54:44Z",
        "lastEditedBy" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "tags" : [
        ]
      },
      {
        "id" : "3624d7be-7bd4-4ab3-be96-60e6390ded55",
        "parentId" : "784927bb-79f4-4b98-a35b-ed7b8ffca41e",
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "Ok",
        "createdAt" : "2018-07-19T10:13:48Z",
        "updatedAt" : "2018-07-26T14:54:44Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      }
    ],
    "commit" : "88e7d180574eda8a71037d1735ac6a3ff76a1c08",
    "line" : 312,
    "diffHunk" : "@@ -1,1 +859,863 @@        withLength { pickleTree(splice) }\n      case Thicket(trees) =>\n        if (trees.isEmpty) writeByte(EMPTYTREE)\n        else trees.foreach(pickleUntyped)\n      case _ =>"
  },
  {
    "id" : "4f428d93-95da-44d1-88af-eb39a30d89b7",
    "prId" : 4616,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/4616#pullrequestreview-138317024",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8dc75ce6-c175-4a15-8568-856fb5c694db",
        "parentId" : null,
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "Shouldn't we have `withLength {trees.foreach(pickleUntyped)}` to then know how many trees we need to read?",
        "createdAt" : "2018-07-18T14:12:06Z",
        "updatedAt" : "2018-07-26T14:54:44Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      },
      {
        "id" : "7642f0f2-7057-4095-a0f8-38c53238ddad",
        "parentId" : "8dc75ce6-c175-4a15-8568-856fb5c694db",
        "authorId" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "body" : "No, since non-empty thickets are inlined.",
        "createdAt" : "2018-07-18T15:41:41Z",
        "updatedAt" : "2018-07-26T14:54:44Z",
        "lastEditedBy" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "tags" : [
        ]
      }
    ],
    "commit" : "88e7d180574eda8a71037d1735ac6a3ff76a1c08",
    "line" : 313,
    "diffHunk" : "@@ -1,1 +860,864 @@      case Thicket(trees) =>\n        if (trees.isEmpty) writeByte(EMPTYTREE)\n        else trees.foreach(pickleUntyped)\n      case _ =>\n        val tree1 = desugar(tree)"
  }
]