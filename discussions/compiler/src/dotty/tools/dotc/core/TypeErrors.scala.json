[
  {
    "id" : "1605490e-e89c-4339-ac41-6962a930f19c",
    "prId" : 5868,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/5868#pullrequestreview-202047014",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0c7c356a-6ff5-45ec-8dce-524a643829b0",
        "parentId" : null,
        "authorId" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "body" : "The call `super.getMessage` will get empty string, which may hide useful error messages. ",
        "createdAt" : "2019-02-11T11:01:56Z",
        "updatedAt" : "2019-02-11T12:08:16Z",
        "lastEditedBy" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "tags" : [
        ]
      }
    ],
    "commit" : "cd1c914b86d43ac6f94a8b1eb53875e02833f059",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +19,23 @@  def this() = this(\"\")\n  def toMessage(implicit ctx: Context): Message = super.getMessage\n  override def getMessage: String = super.getMessage\n}\n"
  },
  {
    "id" : "4c7b74a0-1ea7-40f4-ab76-107a117efdb0",
    "prId" : 5832,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/5832#pullrequestreview-199339806",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "466e6355-5f9b-4c8e-b7aa-6a9d4f3c8089",
        "parentId" : null,
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "This may be annoying but at least no error messages will be empty due to this bug in the future",
        "createdAt" : "2019-02-02T06:33:51Z",
        "updatedAt" : "2019-02-02T06:34:08Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      },
      {
        "id" : "e4f496a1-fd62-45f7-8947-501fc26e5409",
        "parentId" : "466e6355-5f9b-4c8e-b7aa-6a9d4f3c8089",
        "authorId" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "body" : "Indeed, it helped find the problem in `Formatting.scala`. Thanks for suggesting it 👍 ",
        "createdAt" : "2019-02-02T08:11:00Z",
        "updatedAt" : "2019-02-02T08:11:00Z",
        "lastEditedBy" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "tags" : [
        ]
      }
    ],
    "commit" : "00fbf27972dbdffdc1f637b297d3e031ca15c826",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +19,23 @@  def this() = this(\"\")\n  def toMessage(implicit ctx: Context): Message = super.getMessage\n  override def getMessage: String = throw new Exception(\"Use toMessage instead for TypeError\")\n}\n"
  },
  {
    "id" : "48aa07c1-fc0b-43d1-83f2-1d15c4c98065",
    "prId" : 4729,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/4729#pullrequestreview-140010809",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "10cdd07f-8fcf-4217-90b0-973f683d1651",
        "parentId" : null,
        "authorId" : "223e67d6-1873-432a-9af9-f40b82a7eedd",
        "body" : "Can you make this a parameter of the class and then do something like:\r\n```scala\r\ndef withinImplicitSearch =\r\n  if (inImplicitSearch) this\r\n  else new CyclicReference(denot, inImplicitSearch = true)\r\n\r\n...\r\n\r\n} catch {\r\n  case ce: CyclicReference =>\r\n    throw ce.withinImplicitSearch\r\n}\r\n```\r\nI'm not the best to come up with method name",
        "createdAt" : "2018-07-24T16:41:44Z",
        "updatedAt" : "2018-08-09T13:56:07Z",
        "lastEditedBy" : "223e67d6-1873-432a-9af9-f40b82a7eedd",
        "tags" : [
        ]
      },
      {
        "id" : "ef9db87a-e979-4dfa-8ba1-b3a2bfc289d7",
        "parentId" : "10cdd07f-8fcf-4217-90b0-973f683d1651",
        "authorId" : "348fab8e-49e2-442e-884d-850c7f41fdde",
        "body" : "The new Exception has a different stack trace and other state. I could try to copy the various relevant fields (I spent some time investigating), but that seems more fragile than having one mutable field.",
        "createdAt" : "2018-07-24T17:59:58Z",
        "updatedAt" : "2018-08-09T13:56:07Z",
        "lastEditedBy" : "348fab8e-49e2-442e-884d-850c7f41fdde",
        "tags" : [
        ]
      }
    ],
    "commit" : "d8e6d3ef892ca676aa512655e0ea1b233bf930be",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +105,109 @@ */\nclass CyclicReference private (val denot: SymDenotation) extends TypeError {\n  var inImplicitSearch: Boolean = false\n\n  override def toMessage(implicit ctx: Context): Message = {"
  },
  {
    "id" : "665bb240-194b-4b61-93cc-bad2219f22d4",
    "prId" : 4385,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/4385#pullrequestreview-117493766",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "902ba0df-bd1f-4f39-bbcc-e50d9ac40b38",
        "parentId" : null,
        "authorId" : "348fab8e-49e2-442e-884d-850c7f41fdde",
        "body" : "Does this refactoring intentionally drop the case for type bounds here (search and compare with the removed `showType`)? But guess yes, the old output wasn’t ideal either.",
        "createdAt" : "2018-05-04T04:54:52Z",
        "updatedAt" : "2018-06-04T16:47:35Z",
        "lastEditedBy" : "348fab8e-49e2-442e-884d-850c7f41fdde",
        "tags" : [
        ]
      }
    ],
    "commit" : "7fea20774f89ad11c728546e11ffa54e06128def",
    "line" : 145,
    "diffHunk" : "@@ -1,1 +143,147 @@  private def showType(tp: Type)(implicit ctx: Context) = tp match {\n    case ClassInfo(_, cls, _, _, _) => cls.showLocated\n    case _ => tp.show\n  }\n"
  }
]