[
  {
    "id" : "3cc4ae7b-2e0e-4650-8355-21abe321d902",
    "prId" : 6103,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/6103#pullrequestreview-216164620",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6264d5a1-a302-4a2d-acc9-39d08595717d",
        "parentId" : null,
        "authorId" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "body" : "I think this doesn't make a difference in practice since this method is never called from a context with a nested reporter, but we could change it to errorsReported for consistency.",
        "createdAt" : "2019-03-19T13:49:00Z",
        "updatedAt" : "2019-03-19T13:49:02Z",
        "lastEditedBy" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "tags" : [
        ]
      }
    ],
    "commit" : "48be47d484619c857375b73f2d7e81a5ac796c60",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +288,292 @@    def isRunnable(implicit ctx: Context): Boolean =\n      !ctx.reporter.hasErrors\n        // TODO: This might test an unintended condition.\n        // To find out whether any errors have been reported during this\n        // run one calls `errorsReported`, not `hasErrors`."
  },
  {
    "id" : "5f8cd7d3-c7dd-4385-b2f9-3e1299935b23",
    "prId" : 13173,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/13173#pullrequestreview-719514151",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "be806c22-4f47-4460-b329-9c1eb2b0ec73",
        "parentId" : null,
        "authorId" : "d07c2ee4-7ec8-40c8-8344-288874efe6a1",
        "body" : "Check for isCheckable. ",
        "createdAt" : "2021-07-30T23:21:38Z",
        "updatedAt" : "2021-07-30T23:21:38Z",
        "lastEditedBy" : "d07c2ee4-7ec8-40c8-8344-288874efe6a1",
        "tags" : [
        ]
      }
    ],
    "commit" : "bd08f7e92b595f83ad44c250b7b944ab350c9252",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +108,112 @@            }\n          fusedPhases += phaseToAdd\n          val shouldAddYCheck = filteredPhases(i).exists(_.isCheckable) && YCheckAfter.containsPhase(phaseToAdd)\n          if (shouldAddYCheck) {\n            val checker = new TreeChecker"
  },
  {
    "id" : "48fd473e-afe3-4c39-86c3-1e29123f6bad",
    "prId" : 13173,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/13173#pullrequestreview-719514213",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "20a64bcc-a794-4d4a-99f3-465360eb4574",
        "parentId" : null,
        "authorId" : "d07c2ee4-7ec8-40c8-8344-288874efe6a1",
        "body" : "Moved up from FrontEnd",
        "createdAt" : "2021-07-30T23:21:49Z",
        "updatedAt" : "2021-07-30T23:21:50Z",
        "lastEditedBy" : "d07c2ee4-7ec8-40c8-8344-288874efe6a1",
        "tags" : [
        ]
      }
    ],
    "commit" : "bd08f7e92b595f83ad44c250b7b944ab350c9252",
    "line" : 80,
    "diffHunk" : "@@ -1,1 +408,412 @@      Iterator.iterate(this)(_.next) takeWhile (_.hasNext)\n\n    final def monitor(doing: String)(body: => Unit)(using Context): Unit =\n      try body\n      catch"
  }
]