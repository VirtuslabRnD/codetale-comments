[
  {
    "id" : "469d6c73-eefe-4819-a755-318f6e4995e4",
    "prId" : 9984,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/9984#pullrequestreview-583183643",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9f31a6f8-3d78-41d5-a33c-b7cedda185de",
        "parentId" : null,
        "authorId" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "body" : "Can `inline if` be reduced in the `Inlining` phase?",
        "createdAt" : "2021-02-03T14:59:58Z",
        "updatedAt" : "2021-02-08T10:26:36Z",
        "lastEditedBy" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "tags" : [
        ]
      },
      {
        "id" : "4316521f-94d3-4a39-b71a-9c38917aaa36",
        "parentId" : "9f31a6f8-3d78-41d5-a33c-b7cedda185de",
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "Yes. Any inline if that is found in the `Inlining` phase is reduced there. This happens with all `inline if` in non-transparent inline methods.",
        "createdAt" : "2021-02-04T09:21:21Z",
        "updatedAt" : "2021-02-08T10:26:36Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      }
    ],
    "commit" : "bdf24824be9e0f1360dc26521e3cacf95367ef1d",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +127,131 @@   *  This mode forces expansion of inline calls in those positions even during typing.\n   */\n  val ForceInline: Mode = newMode(29, \"ForceInline\")\n}"
  },
  {
    "id" : "a8ca1b1c-f9af-4490-b99e-a8dc6fa918dc",
    "prId" : 3429,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/3429#pullrequestreview-73854666",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2f99d988-76cb-4829-92e2-530f8caef4aa",
        "parentId" : null,
        "authorId" : "223e67d6-1873-432a-9af9-f40b82a7eedd",
        "body" : "Why did you rename this value? I think the old name is more consistent with the other mode's name",
        "createdAt" : "2017-11-02T10:22:44Z",
        "updatedAt" : "2017-11-02T14:14:52Z",
        "lastEditedBy" : "223e67d6-1873-432a-9af9-f40b82a7eedd",
        "tags" : [
        ]
      },
      {
        "id" : "d15e046a-148d-435d-94b1-0cdb2c34b33a",
        "parentId" : "2f99d988-76cb-4829-92e2-530f8caef4aa",
        "authorId" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "body" : "It's because otherwise we'd risk that someone thinks it's `Pattern | Type` only. And `PatternOrTypeorInPatternAlternative` was too long.",
        "createdAt" : "2017-11-02T16:32:01Z",
        "updatedAt" : "2017-11-02T16:32:01Z",
        "lastEditedBy" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "tags" : [
        ]
      }
    ],
    "commit" : "de555100826067b94f417fbd728675373d77d975",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +91,95 @@  val PrintShowExceptions = newMode(18, \"PrintShowExceptions\")\n\n  val PatternOrTypeBits = Pattern | Type | InPatternAlternative\n\n  /** We are elaborating the fully qualified name of a package clause."
  },
  {
    "id" : "f72b8ef8-f543-4b56-b451-85711795d455",
    "prId" : 2685,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/2685#pullrequestreview-43979141",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "85ff865a-eb34-4e42-be7b-6be453a955fb",
        "parentId" : null,
        "authorId" : "5bf81a51-885f-46a7-83a3-61092da8405f",
        "body" : "it would be nice to leave a note that it is used as heuristic to find scala 2.12",
        "createdAt" : "2017-06-14T10:41:55Z",
        "updatedAt" : "2017-06-14T10:41:55Z",
        "lastEditedBy" : "5bf81a51-885f-46a7-83a3-61092da8405f",
        "tags" : [
        ]
      }
    ],
    "commit" : "e0057dac3c21e9a7a42b4c7a3574d4633559a80a",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +72,76 @@\n  /** We are currently unpickling from Java 8 or higher */\n  val Java8Unpickling = newMode(14, \"Java8Unpickling\")\n\n  /** Use Scala2 scheme for overloading and implicit resolution */"
  }
]