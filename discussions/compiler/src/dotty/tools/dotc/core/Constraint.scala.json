[
  {
    "id" : "b6e3ca38-1924-41be-bd24-9c368902a972",
    "prId" : 5736,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/5736#pullrequestreview-223311312",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e96262e7-d189-4b75-88ae-cd48918fa13a",
        "parentId" : null,
        "authorId" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "body" : "Same as for `minLower`",
        "createdAt" : "2019-04-05T14:36:31Z",
        "updatedAt" : "2019-05-13T12:55:51Z",
        "lastEditedBy" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "tags" : [
        ]
      }
    ],
    "commit" : "3c3b3db63be69936c391db3a965ebda1aff03391",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +56,60 @@   * This is like `upper`, except that each parameter returned is no greater than every other returned parameter.\n   */\n  def minUpper(param: TypeParamRef): List[TypeParamRef]\n\n  /** lower(param) \\ lower(butNot) */"
  },
  {
    "id" : "955e2db1-468d-4b11-bd0a-7565218c1d2b",
    "prId" : 4946,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/4946#pullrequestreview-146988155",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1cfff9bf-67ce-4dda-9efb-e07b71509688",
        "parentId" : null,
        "authorId" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "body" : "Is this comment still correct?",
        "createdAt" : "2018-08-16T14:47:35Z",
        "updatedAt" : "2018-08-20T16:56:53Z",
        "lastEditedBy" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "tags" : [
        ]
      },
      {
        "id" : "99b10a78-4976-4d5d-a062-faaec0eb3f7a",
        "parentId" : "1cfff9bf-67ce-4dda-9efb-e07b71509688",
        "authorId" : "348fab8e-49e2-442e-884d-850c7f41fdde",
        "body" : "I can't make sense of \"@pre `param` is not part of the constraint domain.\" if that's a precondition. What's the \"constraint domain\"?\r\n\r\nOtherwise, I suspect yes.\r\n\r\n> Poly params that are known to be smaller or greater than `param` are not contained in the return bounds.\r\n\r\n~IIUC, this suggests that in `[Y<:String, Z>:Int, W>:Z<:Y]`, `nonParamBounds(Y)` and `nonParamBounds(Z)` don't include `W`. But `nonParamBounds(W)` should mention `Z` and `Y`, so it might never have been accurate.~\r\n\r\nEDIT: my patch doesn't affect it, and neither does yours; this comment means, concretely, that we only account for `boundsMap` but not `lowerMap` or `upperMap`. How information is partitioned between those map is another matter entirely (and might be affected by your patch).",
        "createdAt" : "2018-08-16T19:21:51Z",
        "updatedAt" : "2018-08-20T18:01:26Z",
        "lastEditedBy" : "348fab8e-49e2-442e-884d-850c7f41fdde",
        "tags" : [
        ]
      }
    ],
    "commit" : "69957bb4af202c7fb6b5f310e8e6657c2e20448b",
    "line" : 3,
    "diffHunk" : "@@ -1,1 +60,64 @@   *  are not contained in the return bounds.\n   *  @pre `param` is not part of the constraint domain.\n   */\n  def nonParamBounds(param: TypeParamRef)(implicit ctx: Context): TypeBounds\n"
  }
]