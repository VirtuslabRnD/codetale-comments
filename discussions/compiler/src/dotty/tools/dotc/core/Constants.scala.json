[
  {
    "id" : "1a5fb1b4-f6e9-426f-90d0-38c6991a2fd2",
    "prId" : 12212,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/12212#pullrequestreview-644341854",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "61a1d984-fab5-49aa-b511-fa10a5ff4c03",
        "parentId" : null,
        "authorId" : "317b625a-4db6-4333-bf57-152beea40aa0",
        "body" : "Idle thought, what would it look like with guard terminated by `then`? `case P if b then body`",
        "createdAt" : "2021-04-25T11:05:30Z",
        "updatedAt" : "2021-04-25T11:05:30Z",
        "lastEditedBy" : "317b625a-4db6-4333-bf57-152beea40aa0",
        "tags" : [
        ]
      },
      {
        "id" : "330e0da9-ddc1-45b5-8ccd-c730b11617c3",
        "parentId" : "61a1d984-fab5-49aa-b511-fa10a5ff4c03",
        "authorId" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "body" : "Too late for that...",
        "createdAt" : "2021-04-26T07:27:52Z",
        "updatedAt" : "2021-04-26T07:27:52Z",
        "lastEditedBy" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "tags" : [
        ]
      }
    ],
    "commit" : "86994352b7c9e1f3e46fbf7ab0e7158c01767e8c",
    "line" : 37,
    "diffHunk" : "@@ -1,1 +165,169 @@      }\n      pt match\n        case ConstantType(value) if value == this => this\n        case _: SingletonType => null\n        case _ =>"
  },
  {
    "id" : "a55a053d-e4e4-4a58-9a0a-9d68c0c689b4",
    "prId" : 12212,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/12212#pullrequestreview-644126342",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0c569867-6a52-4109-8244-9b2dfbb8accb",
        "parentId" : null,
        "authorId" : "317b625a-4db6-4333-bf57-152beea40aa0",
        "body" : "In a series of `if p && q then` where the ps are mutually exclusive, preferable to\r\n```\r\nexpr match p => if q then res else default\r\n```\r\nNoticed the similar pattern in constant folding. Maybe nbd for 7 tests. My question would be what should my fingers type automatically for this pattern.\r\n\r\nIt could optimize `eq` as exclusive but maybe not `==`.",
        "createdAt" : "2021-04-25T11:14:14Z",
        "updatedAt" : "2021-04-25T11:14:15Z",
        "lastEditedBy" : "317b625a-4db6-4333-bf57-152beea40aa0",
        "tags" : [
        ]
      }
    ],
    "commit" : "86994352b7c9e1f3e46fbf7ab0e7158c01767e8c",
    "line" : 56,
    "diffHunk" : "@@ -1,1 +184,188 @@            Constant(floatValue)\n          else if (target == defn.DoubleClass && isNumeric)\n            Constant(doubleValue)\n          else\n            null"
  }
]