[
  {
    "id" : "d4ea92a5-940d-4277-a260-a1de2babefcf",
    "prId" : 10530,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/10530#pullrequestreview-548028682",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b3e4ba7f-f384-4d2f-9050-739a68aed079",
        "parentId" : null,
        "authorId" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "body" : "If it's exactly equivalent, why do we need to set it instead of checking owner.is(NoInits) directly?",
        "createdAt" : "2020-11-27T18:10:16Z",
        "updatedAt" : "2020-12-09T10:12:42Z",
        "lastEditedBy" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "tags" : [
        ]
      },
      {
        "id" : "3e3ddc3c-e81c-4009-b235-46d627242034",
        "parentId" : "b3e4ba7f-f384-4d2f-9050-739a68aed079",
        "authorId" : "5a9cd756-9120-4d5e-ac88-e9c636084f0e",
        "body" : "Because that is what Scala 2's Tasty reader will look at. Also, the inliner looks at this to determine whether it is safe to elide.",
        "createdAt" : "2020-11-27T21:34:20Z",
        "updatedAt" : "2020-12-09T10:12:42Z",
        "lastEditedBy" : "5a9cd756-9120-4d5e-ac88-e9c636084f0e",
        "tags" : [
        ]
      },
      {
        "id" : "377bc162-f8f4-4dd6-8ab5-c0f730ab0aa9",
        "parentId" : "b3e4ba7f-f384-4d2f-9050-739a68aed079",
        "authorId" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "body" : ">  Also, the inliner looks at this to determine whether it is safe to elide.\r\n\r\nI think that's worth mentioning in the documentation of this flag.",
        "createdAt" : "2020-12-07T16:33:39Z",
        "updatedAt" : "2020-12-09T10:12:42Z",
        "lastEditedBy" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "tags" : [
        ]
      },
      {
        "id" : "f3e31b64-0dc8-4b6c-baba-353dd2b7c4be",
        "parentId" : "b3e4ba7f-f384-4d2f-9050-739a68aed079",
        "authorId" : "5a9cd756-9120-4d5e-ac88-e9c636084f0e",
        "body" : "Done.",
        "createdAt" : "2020-12-09T10:12:55Z",
        "updatedAt" : "2020-12-09T10:12:55Z",
        "lastEditedBy" : "5a9cd756-9120-4d5e-ac88-e9c636084f0e",
        "tags" : [
        ]
      }
    ],
    "commit" : "471fcd9e198204f37995f56c4eb4c5ec10122add",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +296,300 @@  /** Lazy val or method is known or assumed to be stable and realizable.\n   *\n   *  For a trait constructor, this is set if and only if owner.is(NoInits),\n   *  including for Java interfaces and for Scala 2 traits. It will be used by\n   *"
  },
  {
    "id" : "30ab89bd-cd51-474a-a099-353c1474b142",
    "prId" : 6791,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/6791#pullrequestreview-258121501",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ec5f2c6e-80dc-4dee-8019-faccd612b011",
        "parentId" : null,
        "authorId" : "3a3c9c08-5985-41f6-a86b-7fc5a427f51a",
        "body" : "Can this also be exported?",
        "createdAt" : "2019-07-04T09:52:00Z",
        "updatedAt" : "2019-07-04T14:44:49Z",
        "lastEditedBy" : "3a3c9c08-5985-41f6-a86b-7fc5a427f51a",
        "tags" : [
        ]
      },
      {
        "id" : "efda53ac-157d-4cc5-89ee-ceda6adcbf2c",
        "parentId" : "ec5f2c6e-80dc-4dee-8019-faccd612b011",
        "authorId" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "body" : "`export opaques.Flag` would also export the `def Flag`, rendering it public. This is not what we want.\r\n",
        "createdAt" : "2019-07-04T12:29:05Z",
        "updatedAt" : "2019-07-04T14:44:49Z",
        "lastEditedBy" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "tags" : [
        ]
      },
      {
        "id" : "69730a65-25be-4b96-97f8-aa43c6357233",
        "parentId" : "ec5f2c6e-80dc-4dee-8019-faccd612b011",
        "authorId" : "3a3c9c08-5985-41f6-a86b-7fc5a427f51a",
        "body" : "Is that method not defined as `private`? What happens when you export a private method?",
        "createdAt" : "2019-07-04T14:01:48Z",
        "updatedAt" : "2019-07-04T14:44:49Z",
        "lastEditedBy" : "3a3c9c08-5985-41f6-a86b-7fc5a427f51a",
        "tags" : [
        ]
      },
      {
        "id" : "c0742071-3094-4122-99b9-ce2c4499e21f",
        "parentId" : "ec5f2c6e-80dc-4dee-8019-faccd612b011",
        "authorId" : "3a3c9c08-5985-41f6-a86b-7fc5a427f51a",
        "body" : "Even though it is `private[Flags]` and is exported into Flags object, this is technically fine with the contract of the `private[Flags]`(namely that it should not be exposed outside `Flags`). If we don't want it in `Flags` either, shouldn't it be `private[opaques]`?",
        "createdAt" : "2019-07-04T14:04:41Z",
        "updatedAt" : "2019-07-04T14:44:49Z",
        "lastEditedBy" : "3a3c9c08-5985-41f6-a86b-7fc5a427f51a",
        "tags" : [
        ]
      },
      {
        "id" : "f17ea181-1b1e-4e5f-8d7c-c37158c07e35",
        "parentId" : "ec5f2c6e-80dc-4dee-8019-faccd612b011",
        "authorId" : "3a3c9c08-5985-41f6-a86b-7fc5a427f51a",
        "body" : "(except that we're using it in `Flags`, e.g. in `newFlags`:\r\n\r\n```scala\r\nopaques.Flag(KINDFLAGS | bits), opaques.Flag(TERMS | bits), opaques.Flag(TYPES | bits)\r\n```\r\n\r\nThis would have been simplified if we exported the method)",
        "createdAt" : "2019-07-04T14:07:18Z",
        "updatedAt" : "2019-07-04T14:44:49Z",
        "lastEditedBy" : "3a3c9c08-5985-41f6-a86b-7fc5a427f51a",
        "tags" : [
        ]
      },
      {
        "id" : "c1c376ae-101d-43f4-8e1b-2d3142b0f932",
        "parentId" : "ec5f2c6e-80dc-4dee-8019-faccd612b011",
        "authorId" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "body" : "An exported member is always public.\r\n",
        "createdAt" : "2019-07-04T15:11:29Z",
        "updatedAt" : "2019-07-04T15:11:29Z",
        "lastEditedBy" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "tags" : [
        ]
      },
      {
        "id" : "550764fb-6e23-425d-b375-58bf6454b613",
        "parentId" : "ec5f2c6e-80dc-4dee-8019-faccd612b011",
        "authorId" : "3a3c9c08-5985-41f6-a86b-7fc5a427f51a",
        "body" : "That does create problems when doing `export x._`. It can well become an antipattern as you must now be concerned with the private details of the implementation of `x` to do the `export` correctly. I don't know of any other case where this insight into `private` members would be required.",
        "createdAt" : "2019-07-04T15:18:48Z",
        "updatedAt" : "2019-07-04T15:18:48Z",
        "lastEditedBy" : "3a3c9c08-5985-41f6-a86b-7fc5a427f51a",
        "tags" : [
        ]
      },
      {
        "id" : "f9f1a0d9-7b03-4aa8-bd06-eb2d17350f95",
        "parentId" : "ec5f2c6e-80dc-4dee-8019-faccd612b011",
        "authorId" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "body" : "An export only exports members that are visible at the point of export. But then the forwarders become public. I think that's the right tradeoff.\r\n",
        "createdAt" : "2019-07-04T16:11:06Z",
        "updatedAt" : "2019-07-04T16:11:06Z",
        "lastEditedBy" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "tags" : [
        ]
      },
      {
        "id" : "136dbc67-0802-4cd9-a1fc-16a0299ad5bd",
        "parentId" : "ec5f2c6e-80dc-4dee-8019-faccd612b011",
        "authorId" : "3a3c9c08-5985-41f6-a86b-7fc5a427f51a",
        "body" : "Yes, that makes sense",
        "createdAt" : "2019-07-04T16:26:43Z",
        "updatedAt" : "2019-07-04T16:26:43Z",
        "lastEditedBy" : "3a3c9c08-5985-41f6-a86b-7fc5a427f51a",
        "tags" : [
        ]
      }
    ],
    "commit" : "a778f3501b8db28f3f962db1d7e8c0e5f4bd03e4",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +23,27 @@  export opaques.FlagSet\n\n  type Flag = opaques.Flag\n\n  delegate FlagOps {"
  },
  {
    "id" : "41527339-29e8-43d7-a39d-c929eff89dad",
    "prId" : 4622,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/4622#pullrequestreview-126249310",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4868e120-a25d-4fbe-a6fb-ee8d293fabc6",
        "parentId" : null,
        "authorId" : "70ef1594-3bb7-4579-b053-2189b409b5dc",
        "body" : "Why not make transparent a `commonFlag`, if we use it that way below anyways?",
        "createdAt" : "2018-06-05T19:38:03Z",
        "updatedAt" : "2018-06-06T12:14:33Z",
        "lastEditedBy" : "70ef1594-3bb7-4579-b053-2189b409b5dc",
        "tags" : [
        ]
      },
      {
        "id" : "a9a7e9d6-87a5-4883-a724-08517918ea75",
        "parentId" : "4868e120-a25d-4fbe-a6fb-ee8d293fabc6",
        "authorId" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "body" : "Since there are no `transparent` types, it should not apply to them.\r\n",
        "createdAt" : "2018-06-06T06:39:45Z",
        "updatedAt" : "2018-06-06T12:14:33Z",
        "lastEditedBy" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "tags" : [
        ]
      }
    ],
    "commit" : "b359c7dd2a24ffbfdf4bf85673a9ac789362d83a",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +365,369 @@\n  /** Labelled with `transparent` modifier */\n  final val Transparent = termFlag(39, \"transparent\")\n\n  /** Symbol is an enum class or enum case (if used with case) */"
  },
  {
    "id" : "b66f3358-d117-4de9-978b-e0d1b991a0e1",
    "prId" : 4620,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/4620#pullrequestreview-126305254",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dc0d21ed-c37c-46a6-92ba-87003ce995ff",
        "parentId" : null,
        "authorId" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "body" : "The documentation for `Enum` needs to be updated:\r\n\r\n```Scala\r\n   /** Symbol is a Java enum */\r\n   final val Enum = commonFlag(40, \"<enum>\")\r\n```",
        "createdAt" : "2018-06-06T08:27:50Z",
        "updatedAt" : "2018-06-06T09:48:45Z",
        "lastEditedBy" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "tags" : [
        ]
      },
      {
        "id" : "0b8b37f5-007d-4369-bc49-bab6ca8b8eea",
        "parentId" : "dc0d21ed-c37c-46a6-92ba-87003ce995ff",
        "authorId" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "body" : "That's done in the latest commit.\r\n",
        "createdAt" : "2018-06-06T09:45:21Z",
        "updatedAt" : "2018-06-06T09:48:45Z",
        "lastEditedBy" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "tags" : [
        ]
      }
    ],
    "commit" : "0c7ef1354e5ee16e4f4e2f0b4d6719ef49a3fb11",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +565,569 @@\n  /** An enum case */\n  final val EnumCase = allOf(Enum, Case)\n\n  /** A term parameter or parameter accessor */"
  },
  {
    "id" : "cc9db110-a53b-444f-ab5e-5fba567c7196",
    "prId" : 4435,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/4435#pullrequestreview-116828012",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3199d565-57a6-4e99-86d8-569fc9849860",
        "parentId" : null,
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "Do we really need to define a new one for only one use?",
        "createdAt" : "2018-05-02T09:30:14Z",
        "updatedAt" : "2018-05-02T09:30:24Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      },
      {
        "id" : "b7b445dc-3e2b-4808-83a9-ee388e4b0299",
        "parentId" : "3199d565-57a6-4e99-86d8-569fc9849860",
        "authorId" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "body" : "It's slightly more efficient that way. The `|` computation takes time, it's not just a simple bitwise `|`.\r\n",
        "createdAt" : "2018-05-02T09:33:34Z",
        "updatedAt" : "2018-05-02T09:33:42Z",
        "lastEditedBy" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "tags" : [
        ]
      }
    ],
    "commit" : "b7fa3584d816daebddc3e6a5c36590fcd21bcf91",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +544,548 @@\n  /** Either method or module */\n  final val MethodOrModule = Method | Module\n\n  /** Either method or lazy or deferred */"
  },
  {
    "id" : "fd2a1398-7376-4fdd-a662-a08752df4d03",
    "prId" : 3931,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/3931#pullrequestreview-92476496",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "98c81b9f-915a-44a0-819c-e9aaf88b61e0",
        "parentId" : null,
        "authorId" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "body" : "The doc says `Deferred term member or a parameter accessor`, which is incorrect. ",
        "createdAt" : "2018-01-30T04:04:31Z",
        "updatedAt" : "2018-01-30T08:21:17Z",
        "lastEditedBy" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "tags" : [
        ]
      },
      {
        "id" : "83273058-913b-4bdf-8eeb-7e15c7f6d3ca",
        "parentId" : "98c81b9f-915a-44a0-819c-e9aaf88b61e0",
        "authorId" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "body" : "OK, I'll roll that into a future PR.",
        "createdAt" : "2018-01-30T08:40:00Z",
        "updatedAt" : "2018-01-30T08:40:00Z",
        "lastEditedBy" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "tags" : [
        ]
      }
    ],
    "commit" : "1f2d2347822b52afdec4e506244344fad42cd75a",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +579,583 @@\n  /** A deferred term member or a parameter accessor (these don't have right hand sides) */\n  final val DeferredOrTypeParam = Deferred | TypeParam\n\n  /** value that's final or inline */"
  },
  {
    "id" : "59736ab1-8990-4df4-9c7f-58bd14536840",
    "prId" : 3497,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/3497#pullrequestreview-77463375",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ccf4b220-8a2e-443a-a614-81903ef79923",
        "parentId" : null,
        "authorId" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "body" : "If you want to go deep in micro-optimizations, you could use a while loop",
        "createdAt" : "2017-11-17T15:13:52Z",
        "updatedAt" : "2017-11-17T15:13:53Z",
        "lastEditedBy" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "tags" : [
        ]
      },
      {
        "id" : "d2db88e1-d99e-48df-82a3-6083cb2ebad2",
        "parentId" : "ccf4b220-8a2e-443a-a614-81903ef79923",
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "Should avoid `FlagSet*` altogether. ",
        "createdAt" : "2017-11-17T15:15:52Z",
        "updatedAt" : "2017-11-17T15:15:52Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      }
    ],
    "commit" : "bddc39aa754465ee26a5513f6fe410ce805e4360",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +175,179 @@  def union(flagss: FlagSet*): FlagSet = {\n    var flag = EmptyFlags\n    for (f <- flagss)\n      flag |= f\n    flag"
  },
  {
    "id" : "d0c7c5eb-ddf8-4154-99cb-7cce6f3712ec",
    "prId" : 3497,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/3497#pullrequestreview-77464692",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7bf4e9a4-03fd-4a33-8577-535f73a2a6ee",
        "parentId" : null,
        "authorId" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "body" : "This is still going to box, isn't it? `FlagSet*` becomes `Seq[FlagSet]`, value classes in generic positions are always boxed.",
        "createdAt" : "2017-11-17T15:15:52Z",
        "updatedAt" : "2017-11-17T15:15:52Z",
        "lastEditedBy" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "tags" : [
        ]
      },
      {
        "id" : "69e57f72-21f1-4678-8d48-9b5c958b99b6",
        "parentId" : "7bf4e9a4-03fd-4a33-8577-535f73a2a6ee",
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "We avoid reboxing in the fold, half of the boxes are gone.",
        "createdAt" : "2017-11-17T15:20:08Z",
        "updatedAt" : "2017-11-17T15:20:08Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      }
    ],
    "commit" : "bddc39aa754465ee26a5513f6fe410ce805e4360",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +173,177 @@\n  /** The union of all flags in given flag set */\n  def union(flagss: FlagSet*): FlagSet = {\n    var flag = EmptyFlags\n    for (f <- flagss)"
  }
]