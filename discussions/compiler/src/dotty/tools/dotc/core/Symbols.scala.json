[
  {
    "id" : "9904f07c-975b-47af-b5a6-8b85413a8cf1",
    "prId" : 10915,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/10915#pullrequestreview-560842958",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d721d671-5eb7-4e2d-8ab2-f2251510d9e1",
        "parentId" : null,
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "```suggestion\r\n                  for sym <- decls if !sym.is(TypeParam) do decls1.enter(sym)\r\n```",
        "createdAt" : "2021-01-04T08:19:26Z",
        "updatedAt" : "2021-01-04T08:19:57Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      }
    ],
    "commit" : "1687717d5d5e42fdafd0aae180801aaf9bb20a70",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +829,833 @@                  val newTypeParams = mapSymbols(original.typeParams, ttmap1, mapAlways = true)\n                  newTypeParams.foreach(decls1.enter)\n                  for sym <- decls do if !sym.is(TypeParam) then decls1.enter(sym)\n                  val parents1 = parents.map(_.substSym(otypeParams, newTypeParams))\n                  val selfInfo1 = selfInfo match"
  },
  {
    "id" : "678f179a-0b9d-45aa-b61e-d5e645649ad0",
    "prId" : 10428,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/10428#pullrequestreview-536528029",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "aa5bc444-4e84-4952-a077-c813575b63ce",
        "parentId" : null,
        "authorId" : "5a9cd756-9120-4d5e-ac88-e9c636084f0e",
        "body" : "I'm not sure how this is going to work when calling a member of the original class that does not come from the patch. Why is it more desirable to use the patch source rather than the original source?",
        "createdAt" : "2020-11-23T12:51:09Z",
        "updatedAt" : "2020-11-24T12:01:39Z",
        "lastEditedBy" : "5a9cd756-9120-4d5e-ac88-e9c636084f0e",
        "tags" : [
        ]
      },
      {
        "id" : "c52e2c30-c40b-4621-875b-a9c60ef2c29b",
        "parentId" : "aa5bc444-4e84-4952-a077-c813575b63ce",
        "authorId" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "body" : "In the concrete cases, there was no original source. The source for Predef.scala was missing. \r\n",
        "createdAt" : "2020-11-23T14:34:21Z",
        "updatedAt" : "2020-11-24T12:01:39Z",
        "lastEditedBy" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "tags" : [
        ]
      }
    ],
    "commit" : "c351094f371729bb83d74fbaa8face9252ca4f12",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +435,439 @@          mySource = ctx.getSource(file)\n        else\n          mySource = defn.patchSource(this)\n          if !mySource.exists then\n            mySource = atPhaseNoLater(flattenPhase) {"
  },
  {
    "id" : "fd174b8b-43bc-4e85-864f-dc26e8405c5c",
    "prId" : 7036,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/7036#pullrequestreview-280786159",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "895bac96-9456-4935-8a72-b0c80d33f004",
        "parentId" : null,
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "```suggestion\r\n      !isClass && is(Case, butNot = Enum | Module)\r\n```",
        "createdAt" : "2019-08-28T11:32:14Z",
        "updatedAt" : "2019-08-28T12:00:39Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      },
      {
        "id" : "d598f097-89c0-4635-a0cf-b34f220a99b6",
        "parentId" : "895bac96-9456-4935-8a72-b0c80d33f004",
        "authorId" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "body" : "Initially, I tried `is(...)`, but it does not check --- it makes sense, as adaptation only happens with a select.",
        "createdAt" : "2019-08-28T11:45:11Z",
        "updatedAt" : "2019-08-28T12:00:39Z",
        "lastEditedBy" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "tags" : [
        ]
      },
      {
        "id" : "29d5c6df-c660-4d15-b514-b36131437c10",
        "parentId" : "895bac96-9456-4935-8a72-b0c80d33f004",
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "Ok",
        "createdAt" : "2019-08-28T12:19:13Z",
        "updatedAt" : "2019-08-28T12:19:13Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      }
    ],
    "commit" : "1d7e79dd5301105348eee6be3d4299aa13aeaeac",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +544,548 @@     */\n    final def isPatternBound(implicit ctx: Context): Boolean =\n      !isClass && this.is(Case, butNot = Enum | Module)\n\n    /** The symbol's signature if it is completed or a method, NotAMethod otherwise. */"
  },
  {
    "id" : "30249518-7006-4b3a-82d5-38752559d1ea",
    "prId" : 4001,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/4001#pullrequestreview-96920269",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e2b86dfe-7943-45a0-833f-4cf1973e3d02",
        "parentId" : null,
        "authorId" : "223e67d6-1873-432a-9af9-f40b82a7eedd",
        "body" : "Why not simply `denot.ensureCompleted()`? I expect it to be NoOp if  `infoOrCompleter` returns `NoCompleter`.",
        "createdAt" : "2018-02-15T14:59:31Z",
        "updatedAt" : "2018-02-15T16:46:10Z",
        "lastEditedBy" : "223e67d6-1873-432a-9af9-f40b82a7eedd",
        "tags" : [
        ]
      },
      {
        "id" : "3c1bf2e0-c4ab-4208-92dc-d875123b48e6",
        "parentId" : "e2b86dfe-7943-45a0-833f-4cf1973e3d02",
        "authorId" : "223e67d6-1873-432a-9af9-f40b82a7eedd",
        "body" : "Apparently I am wrong",
        "createdAt" : "2018-02-15T16:33:00Z",
        "updatedAt" : "2018-02-15T16:46:10Z",
        "lastEditedBy" : "223e67d6-1873-432a-9af9-f40b82a7eedd",
        "tags" : [
        ]
      },
      {
        "id" : "be4f6aed-1bb1-4ae4-8b29-13c238866214",
        "parentId" : "e2b86dfe-7943-45a0-833f-4cf1973e3d02",
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "Will revert that change",
        "createdAt" : "2018-02-15T16:45:35Z",
        "updatedAt" : "2018-02-15T16:46:10Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      }
    ],
    "commit" : "9f806bb695dfece62b0c9d8bbda6728a6a7ca669",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +643,647 @@        case _: NoCompleter =>\n        case _ => denot.ensureCompleted()\n      }\n      myTree match {\n        case fn: TreeProvider =>"
  },
  {
    "id" : "80e8546f-3ff0-4f42-b3af-2c9c73b7d5b7",
    "prId" : 3263,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/3263#pullrequestreview-67637432",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "740f5b81-ac1b-4573-96f5-17b70fefa696",
        "parentId" : null,
        "authorId" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "body" : "Not sure if it'll help performance, but have you tried doing `if (this eq NoSymbol) NoDenotation else ...` to avoid the override?",
        "createdAt" : "2017-10-06T07:05:17Z",
        "updatedAt" : "2017-10-06T07:05:26Z",
        "lastEditedBy" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "tags" : [
        ]
      },
      {
        "id" : "d7bfb6a8-ff96-4228-b619-2acb5dd07112",
        "parentId" : "740f5b81-ac1b-4573-96f5-17b70fefa696",
        "authorId" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "body" : "I have not tired it. I don't think we'd see a difference either way. Would be good to know more about tradeoffs like this, though.",
        "createdAt" : "2017-10-06T11:09:09Z",
        "updatedAt" : "2017-10-06T11:09:09Z",
        "lastEditedBy" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "tags" : [
        ]
      }
    ],
    "commit" : "d0c377ba7dc6ee571e92dad5c96326fc5447df9c",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +422,426 @@    }\n\n    /** Overridden in NoSymbol */\n    protected def recomputeDenot(lastd: SymDenotation)(implicit ctx: Context) = {\n      val newd = lastd.current.asInstanceOf[SymDenotation]"
  }
]