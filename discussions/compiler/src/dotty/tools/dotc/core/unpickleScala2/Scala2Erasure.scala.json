[
  {
    "id" : "7cb8bfbd-05a5-4347-873c-a5808da86fed",
    "prId" : 11603,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/11603#pullrequestreview-606224387",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f164965f-7416-4b19-9b1b-10a18434fa6d",
        "parentId" : null,
        "authorId" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "body" : "I think it would be slightly nicer to use pattern matching, even if we needed to use two nested matches for performance reasons. But I leave the final choice to you.",
        "createdAt" : "2021-03-05T17:05:07Z",
        "updatedAt" : "2021-03-08T12:43:00Z",
        "lastEditedBy" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "tags" : [
        ]
      },
      {
        "id" : "eae51ad2-f2ac-4ad0-a930-541ea5e9b7ba",
        "parentId" : "f164965f-7416-4b19-9b1b-10a18434fa6d",
        "authorId" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "body" : "I prefer to avoid using two nested matches because then I would need two fallback clauses, so in the end the code wouldn't look clearer than it does currently.",
        "createdAt" : "2021-03-08T12:08:46Z",
        "updatedAt" : "2021-03-08T12:43:00Z",
        "lastEditedBy" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "tags" : [
        ]
      }
    ],
    "commit" : "943636ff3be1ba52daf6fb409ddf7101aae8272b",
    "line" : 106,
    "diffHunk" : "@@ -1,1 +104,108 @@    /** Would these two pseudo-symbols be represented with the same symbol in Scala 2? */\n    def sameSymbol(other: PseudoSymbol): Boolean =\n      // Pattern match on (psym1, psym2) desugared by hand to avoid allocating a tuple\n      if psym.isInstanceOf[StructuralRef] && other.isInstanceOf[StructuralRef] then\n        val tp1 = psym.asInstanceOf[StructuralRef]"
  }
]