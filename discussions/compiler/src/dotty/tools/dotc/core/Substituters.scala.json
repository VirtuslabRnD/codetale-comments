[
  {
    "id" : "de9bee2a-ee86-4b68-a854-567c146c64c3",
    "prId" : 9618,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/9618#pullrequestreview-473209515",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1bc88cd9-87a5-4633-a491-f092dd13a965",
        "parentId" : null,
        "authorId" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "body" : "Does it mean all classes that inherit `TypeMap` (e.g. `DeepTypeMap`, `ApproximatingTypeMap` and `AsSeenFromMap`) have to write `using mapCtx` explicitly everywhere?",
        "createdAt" : "2020-08-24T08:29:56Z",
        "updatedAt" : "2020-08-24T17:19:12Z",
        "lastEditedBy" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "tags" : [
        ]
      }
    ],
    "commit" : "eaf6033fbfb36ce82a7d83aeceb6fbbfb404e3ff",
    "line" : 64,
    "diffHunk" : "@@ -1,1 +183,187 @@\n  final class SubstThisMap(from: ClassSymbol, to: Type)(using Context) extends DeepTypeMap {\n    def apply(tp: Type): Type = substThis(tp, from, to, this)(using mapCtx)\n  }\n"
  },
  {
    "id" : "c73ba1c9-b91a-4497-b7c9-c1ef1ea1bfc7",
    "prId" : 5899,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/5899#pullrequestreview-204310685",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9265e8ee-55af-4ede-86bf-cb355ee3d5f8",
        "parentId" : null,
        "authorId" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "body" : "The regular `SubstBindingMap` also extends `DeepTypeMap`, does this matter here ?",
        "createdAt" : "2019-02-15T15:31:03Z",
        "updatedAt" : "2019-02-15T15:57:54Z",
        "lastEditedBy" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "tags" : [
        ]
      },
      {
        "id" : "f2b8c5ca-7cda-422d-9908-e0ddf99ebdeb",
        "parentId" : "9265e8ee-55af-4ede-86bf-cb355ee3d5f8",
        "authorId" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "body" : "No, we do not need to substitute ClassInfos here.",
        "createdAt" : "2019-02-15T15:58:20Z",
        "updatedAt" : "2019-02-15T15:58:20Z",
        "lastEditedBy" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "tags" : [
        ]
      }
    ],
    "commit" : "cf5d20e9dd15b3d756b3eb3bc45b15fec4a42de1",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +198,202 @@\n  /** An approximating substitution that can handle wildcards in the `to` list */\n  final class SubstApproxMap(from: List[Symbol], to: List[Type])(implicit ctx: Context) extends ApproximatingTypeMap {\n    def apply(tp: Type): Type = tp match {\n      case tp: NamedType =>"
  },
  {
    "id" : "fee75cb0-56fe-4b4c-bc31-943138d2ed1d",
    "prId" : 3061,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/3061#pullrequestreview-62714547",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3e0e75eb-cb0a-4309-86d0-635567c5b4e7",
        "parentId" : null,
        "authorId" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "body" : "Still needs to be removed?",
        "createdAt" : "2017-09-11T13:26:43Z",
        "updatedAt" : "2017-09-20T15:20:34Z",
        "lastEditedBy" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "tags" : [
        ]
      },
      {
        "id" : "62be4c03-8f52-49eb-a6ae-851d23bf63fc",
        "parentId" : "3e0e75eb-cb0a-4309-86d0-635567c5b4e7",
        "authorId" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "body" : "Yes, but this should be part of optimizations in a separate PR.",
        "createdAt" : "2017-09-14T11:10:32Z",
        "updatedAt" : "2017-09-20T15:20:35Z",
        "lastEditedBy" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "tags" : [
        ]
      }
    ],
    "commit" : "2e65bd581c7506e1a382d906a9c8a961fafabfff",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +17,21 @@      case _: ThisType | NoPrefix =>\n        tp\n      case tp: RefinedType => // @!!! remove\n        tp.derivedRefinedType(subst(tp.parent, from, to, theMap), tp.refinedName, subst(tp.refinedInfo, from, to, theMap))\n      case tp: TypeAlias =>"
  }
]