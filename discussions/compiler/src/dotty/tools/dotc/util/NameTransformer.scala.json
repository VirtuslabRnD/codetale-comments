[
  {
    "id" : "4cf1ed43-ca05-4577-a760-9d5911d3fb37",
    "prId" : 5744,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/5744#pullrequestreview-194552969",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f8e7d30c-3bf6-492d-b6e8-71ee893dcfc6",
        "parentId" : null,
        "authorId" : "348fab8e-49e2-442e-884d-850c7f41fdde",
        "body" : "Is `decodeIllegalChars` meant to invert `avoidIllegalChars`? Ideally, a few tests `decodeIllegalChars(avoidIllegalChars(str)) == str` would be good.\r\n\r\nPotential, shorter alternative for the 2 while loops:\r\n```scala\r\n      while (i < name.length) {\r\n        if (i < name.length - 5 && name(i) == '$' && name(i + 1) == 'u') {\r\n          sb.append(Integer.valueOf(name.substring(i + 2, i + 6), 16).toChar)\r\n          i += 6\r\n        } else {\r\n          sb.append(name(i))\r\n          i += 1\r\n        }\r\n      }\r\n```",
        "createdAt" : "2019-01-21T09:46:01Z",
        "updatedAt" : "2019-01-21T11:22:42Z",
        "lastEditedBy" : "348fab8e-49e2-442e-884d-850c7f41fdde",
        "tags" : [
        ]
      },
      {
        "id" : "4903de2b-f889-45e1-8897-4a64b2372733",
        "parentId" : "f8e7d30c-3bf6-492d-b6e8-71ee893dcfc6",
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "Implemented this way",
        "createdAt" : "2019-01-21T11:22:56Z",
        "updatedAt" : "2019-01-21T11:22:56Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      }
    ],
    "commit" : "d4ddb49081132d9c78b2d7f9cbdaf217a188bc1c",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +73,77 @@    }\n    else name\n  }\n\n  /** Replace operator symbols by corresponding expansion strings."
  }
]