[
  {
    "id" : "44e0c8c8-9891-45d8-a452-a45fa4584427",
    "prId" : 9725,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/9725#pullrequestreview-486557875",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "19ad145e-748a-4016-8ac0-3dbfec8ba8d1",
        "parentId" : null,
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "The original code has the following [comment](https://github.com/scala-js/scala-js/blob/master/compiler/src/main/scala/org/scalajs/nscplugin/PrepJSInterop.scala#L270). Do we need to check the self now? Or is it just that it's transformation does not cause problems anymore?\r\n",
        "createdAt" : "2020-09-10T14:54:25Z",
        "updatedAt" : "2020-09-14T20:05:33Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      },
      {
        "id" : "7385d577-de8e-4756-af3d-97f32f22dd40",
        "parentId" : "19ad145e-748a-4016-8ac0-3dbfec8ba8d1",
        "authorId" : "5a9cd756-9120-4d5e-ac88-e9c636084f0e",
        "body" : "In dotc it's not an issue, by construction, because self-types are not transformed through the regular `transform`. They are rerouted to `transformSelf` by `MacroTransfrom.Transformer`. Since we do not override `transformSelf`, we have nothing special to do.",
        "createdAt" : "2020-09-11T08:19:39Z",
        "updatedAt" : "2020-09-14T20:05:33Z",
        "lastEditedBy" : "5a9cd756-9120-4d5e-ac88-e9c636084f0e",
        "tags" : [
        ]
      }
    ],
    "commit" : "9bcba442107e53e95c821c5372e21bea374296a6",
    "line" : 203,
    "diffHunk" : "@@ -1,1 +201,205 @@    private def transformTemplate(tree: Template)(using Context): Template = {\n      // First, recursively transform the template\n      val transformedTree = super.transform(tree).asInstanceOf[Template]\n\n      val clsSym = ctx.owner"
  },
  {
    "id" : "73d83487-b131-4604-8062-e452ae1d5471",
    "prId" : 9725,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/9725#pullrequestreview-486557875",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "40249af0-e5ee-4977-8c95-141730df50c8",
        "parentId" : null,
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "The original also did it for `AnyRef`. Are you sure we do not need to cover `parentSym == defn.AnyRefAlias`? Or are they all dealiased by this point?",
        "createdAt" : "2020-09-10T15:52:11Z",
        "updatedAt" : "2020-09-14T20:05:33Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      },
      {
        "id" : "4a72d8d4-927f-4084-bd1c-00032fa94070",
        "parentId" : "40249af0-e5ee-4977-8c95-141730df50c8",
        "authorId" : "5a9cd756-9120-4d5e-ac88-e9c636084f0e",
        "body" : "They are dealiased at this point. I have added tests that specifically test with `extends AnyRef with js.Any` and `extends Object with js.Any` to make sure.",
        "createdAt" : "2020-09-11T08:32:35Z",
        "updatedAt" : "2020-09-14T20:05:33Z",
        "lastEditedBy" : "5a9cd756-9120-4d5e-ac88-e9c636084f0e",
        "tags" : [
        ]
      }
    ],
    "commit" : "9bcba442107e53e95c821c5372e21bea374296a6",
    "line" : 319,
    "diffHunk" : "@@ -1,1 +317,321 @@      for (parent <- sym.info.parents) {\n        parent.typeSymbol match {\n          case parentSym if parentSym == defn.ObjectClass =>\n            // AnyRef is valid, except for non-native JS classes and objects\n            if (!isJSNative && !sym.is(Trait)) {"
  },
  {
    "id" : "410d45d9-994c-412e-8ef7-c07c1da7c522",
    "prId" : 9725,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/9725#pullrequestreview-488043343",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "aa385a2c-de10-4a4e-9353-ade35bd135cd",
        "parentId" : null,
        "authorId" : "f186a0ec-8fc4-4e94-87e9-c629d1b38b60",
        "body" : "This is a bit confusing IMO. Because both the helper and this method check things (and there is only this call site of the helper). Not sure how to improve it easily though.",
        "createdAt" : "2020-09-14T16:43:02Z",
        "updatedAt" : "2020-09-14T20:05:33Z",
        "lastEditedBy" : "f186a0ec-8fc4-4e94-87e9-c629d1b38b60",
        "tags" : [
        ]
      },
      {
        "id" : "9b0a1b26-69bc-4e09-ab8f-586dc58bf668",
        "parentId" : "aa385a2c-de10-4a4e-9353-ade35bd135cd",
        "authorId" : "5a9cd756-9120-4d5e-ac88-e9c636084f0e",
        "body" : "That was bothering me as well, but I didn't find a better name, and I still don't find one now, so I'll leave it as is for now.",
        "createdAt" : "2020-09-14T18:42:20Z",
        "updatedAt" : "2020-09-14T20:05:33Z",
        "lastEditedBy" : "5a9cd756-9120-4d5e-ac88-e9c636084f0e",
        "tags" : [
        ]
      }
    ],
    "commit" : "9bcba442107e53e95c821c5372e21bea374296a6",
    "line" : 519,
    "diffHunk" : "@@ -1,1 +517,521 @@        }\n\n        checkAndGetJSNativeLoadingSpecAnnotOf(pos, sym) match {\n          case Some(annot) if annot.symbol == jsdefn.JSGlobalScopeAnnot =>\n            if (!sym.is(Module)) {"
  },
  {
    "id" : "5bba6aaa-dbcf-4b46-a182-302a9300cdcd",
    "prId" : 9725,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/9725#pullrequestreview-487785389",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "596fd046-acf2-422f-a9b4-1fddd58271a8",
        "parentId" : null,
        "authorId" : "f186a0ec-8fc4-4e94-87e9-c629d1b38b60",
        "body" : "Consider inlining this to `checkGlobalRefPath` (the only call site).",
        "createdAt" : "2020-09-14T16:43:55Z",
        "updatedAt" : "2020-09-14T20:05:33Z",
        "lastEditedBy" : "f186a0ec-8fc4-4e94-87e9-c629d1b38b60",
        "tags" : [
        ]
      }
    ],
    "commit" : "9bcba442107e53e95c821c5372e21bea374296a6",
    "line" : 517,
    "diffHunk" : "@@ -1,1 +515,519 @@            else pathName.substring(0, dotIndex)\n          checkGlobalRefName(globalRef)\n        }\n\n        checkAndGetJSNativeLoadingSpecAnnotOf(pos, sym) match {"
  },
  {
    "id" : "388c2138-cf42-45e7-a30d-d649cef273c4",
    "prId" : 9725,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/9725#pullrequestreview-488043343",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "992dfd44-51cd-4171-be8c-e658869a4c2b",
        "parentId" : null,
        "authorId" : "f186a0ec-8fc4-4e94-87e9-c629d1b38b60",
        "body" : "This check doesn't flatten parameter lists. Is this on purpose? (IIUC, Scala.js 2.x does flatten lists).",
        "createdAt" : "2020-09-14T16:50:43Z",
        "updatedAt" : "2020-09-14T20:05:33Z",
        "lastEditedBy" : "f186a0ec-8fc4-4e94-87e9-c629d1b38b60",
        "tags" : [
        ]
      },
      {
        "id" : "154a3db1-9d5c-4c61-a53f-1ba05ad9fb91",
        "parentId" : "992dfd44-51cd-4171-be8c-e658869a4c2b",
        "authorId" : "5a9cd756-9120-4d5e-ac88-e9c636084f0e",
        "body" : "This is on purpose. In Scala.js 2.x we also don't flatten the lists:\r\nhttps://github.com/scala-js/scala-js/blob/49dd4263301fe9d099906ccd02c0b4f27e479591/compiler/src/main/scala/org/scalajs/nscplugin/PrepJSInterop.scala#L936-L943",
        "createdAt" : "2020-09-14T19:01:35Z",
        "updatedAt" : "2020-09-14T20:05:33Z",
        "lastEditedBy" : "5a9cd756-9120-4d5e-ac88-e9c636084f0e",
        "tags" : [
        ]
      }
    ],
    "commit" : "9bcba442107e53e95c821c5372e21bea374296a6",
    "line" : 647,
    "diffHunk" : "@@ -1,1 +645,649 @@        } else {\n          // JS bracket calls must have at least one non-repeated parameter\n          sym.info.stripPoly match {\n            case mt: MethodType if mt.paramInfos.nonEmpty && !mt.paramInfos.head.isRepeatedParam =>\n              // ok"
  },
  {
    "id" : "fb44fc46-cc48-403a-a082-65438e2974c1",
    "prId" : 9725,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/9725#pullrequestreview-488043343",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "680cbaff-dd69-4115-a121-45c5a5836619",
        "parentId" : null,
        "authorId" : "f186a0ec-8fc4-4e94-87e9-c629d1b38b60",
        "body" : "Is this deliberately different from `sym.isJSType`?",
        "createdAt" : "2020-09-14T16:56:52Z",
        "updatedAt" : "2020-09-14T20:05:33Z",
        "lastEditedBy" : "f186a0ec-8fc4-4e94-87e9-c629d1b38b60",
        "tags" : [
        ]
      },
      {
        "id" : "478ea4a7-8a6c-4428-b417-42121157eb7f",
        "parentId" : "680cbaff-dd69-4115-a121-45c5a5836619",
        "authorId" : "5a9cd756-9120-4d5e-ac88-e9c636084f0e",
        "body" : "Yes. I have added a comment.",
        "createdAt" : "2020-09-14T19:03:05Z",
        "updatedAt" : "2020-09-14T20:05:33Z",
        "lastEditedBy" : "5a9cd756-9120-4d5e-ac88-e9c636084f0e",
        "tags" : [
        ]
      }
    ],
    "commit" : "9bcba442107e53e95c821c5372e21bea374296a6",
    "line" : 922,
    "diffHunk" : "@@ -1,1 +920,924 @@   */\n  def isJSAny(sym: Symbol)(using Context): Boolean =\n    sym.isSubClass(jsdefn.JSAnyClass)\n\n  /** Checks that a setter has the right signature."
  }
]