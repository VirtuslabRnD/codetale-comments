[
  {
    "id" : "e87fdd30-cf05-4d70-b590-a2d3894a8e17",
    "prId" : 8652,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/8652#pullrequestreview-451119745",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b0b7be9f-7efc-4ef8-b498-a611e99ab470",
        "parentId" : null,
        "authorId" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "body" : "Don't they need a field to be callable from Scala 2 and Java, or am I misunderstanding this?",
        "createdAt" : "2020-07-18T18:42:30Z",
        "updatedAt" : "2020-07-22T08:29:14Z",
        "lastEditedBy" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "tags" : [
        ]
      },
      {
        "id" : "811f0585-d3ac-47e5-b8fd-bccb9e2a9dea",
        "parentId" : "b0b7be9f-7efc-4ef8-b498-a611e99ab470",
        "authorId" : "5a9cd756-9120-4d5e-ac88-e9c636084f0e",
        "body" : "No, they only need a getter (which returns a constant instead of accessing the field).\r\n\r\nNote that this PR does not change the code emitted for `final val`s compared to what #9261 introduced. Previously, no field was emitted either. The changes here are accommodating the fact that now there is a trait setter for them (if they come from a trait), in which case the trait setter does nothing (its rhs is `()`).",
        "createdAt" : "2020-07-19T11:22:34Z",
        "updatedAt" : "2020-07-22T08:29:14Z",
        "lastEditedBy" : "5a9cd756-9120-4d5e-ac88-e9c636084f0e",
        "tags" : [
        ]
      }
    ],
    "commit" : "77e29253e1443d26a9bb4852e36c9d5f3da15d48",
    "line" : 43,
    "diffHunk" : "@@ -1,1 +129,133 @@        val constantFinalVal = sym.isAllOf(Accessor | Final, butNot = Mutable) && tree.rhs.isInstanceOf[Literal]\n        if constantFinalVal then\n          // constant final vals do not need to be transformed at all, and do not need a field\n          tree\n        else"
  }
]