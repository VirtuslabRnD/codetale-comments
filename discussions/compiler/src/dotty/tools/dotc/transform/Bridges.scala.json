[
  {
    "id" : "96677920-9f29-45c4-b368-2da1d9d53552",
    "prId" : 3927,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/3927#pullrequestreview-92021555",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a43e14d2-17e3-4a94-9bfe-02a296eb1353",
        "parentId" : null,
        "authorId" : "223e67d6-1873-432a-9af9-f40b82a7eedd",
        "body" : "Maybe:\r\n```scala\r\nval infoStr = sym.showDcl(preErasureCtx)\r\ni\"$infoStr in ${sym.owner}\"\r\n```\r\nThis will print `def produce: => X`. But I think we could configure the printer to not print the `=>`. Other part of the compiler (such as error messages) could benefit from it.",
        "createdAt" : "2018-01-26T16:27:55Z",
        "updatedAt" : "2018-01-27T09:30:15Z",
        "lastEditedBy" : "223e67d6-1873-432a-9af9-f40b82a7eedd",
        "tags" : [
        ]
      },
      {
        "id" : "8d1a609a-c7d6-480b-812f-f815b5e2ecf9",
        "parentId" : "a43e14d2-17e3-4a94-9bfe-02a296eb1353",
        "authorId" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "body" : "The problem is that printing the type will always print the `=>`. Otherwise it would be confusing. I would should work on the Printer but it has to look at the larger context to do the right thing. ",
        "createdAt" : "2018-01-27T09:26:43Z",
        "updatedAt" : "2018-01-27T09:30:15Z",
        "lastEditedBy" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "tags" : [
        ]
      }
    ],
    "commit" : "c39f0698f8971ba7d920556fc234c0893dc1d095",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +57,61 @@        bridgeTarget(bridge) == member && bridge.signature == other.signature)\n    def info(sym: Symbol)(implicit ctx: Context) = sym.info\n    def desc(sym: Symbol)= {\n      val infoStr = info(sym)(preErasureCtx) match {\n        case ExprType(info) => i\": $info\""
  }
]