[
  {
    "id" : "ac2c26d5-3634-45b3-9533-92dd82d227e9",
    "prId" : 7027,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/7027#pullrequestreview-274149435",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dddee971-36e1-4a36-a66c-c90fce28dc31",
        "parentId" : null,
        "authorId" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "body" : "Can't we check ctx.mode.is(Pattern) here too ?",
        "createdAt" : "2019-08-12T15:44:35Z",
        "updatedAt" : "2019-08-13T09:24:28Z",
        "lastEditedBy" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "tags" : [
        ]
      },
      {
        "id" : "cc6c46e0-173a-4222-8dd3-d169c219ff3f",
        "parentId" : "dddee971-36e1-4a36-a66c-c90fce28dc31",
        "authorId" : "3a56b927-736f-4aab-8690-358cd24ca570",
        "body" : "We don't want to, since we actually want to inline non-wildcard idents. One example that compiling the stdlib thankfully caught is `@switch` annotation, which needs to see appropriate inlined literals. I'll add a comment explaining as much.",
        "createdAt" : "2019-08-13T09:04:47Z",
        "updatedAt" : "2019-08-13T09:24:28Z",
        "lastEditedBy" : "3a56b927-736f-4aab-8690-358cd24ca570",
        "tags" : [
        ]
      }
    ],
    "commit" : "4b64f0b5d78322c9b990963e9ea9b141ffe880a4",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +147,151 @@    if (tree.isType) {\n      toTypeTree(tree)\n    } else if (tree.name != nme.WILDCARD) {\n      // We constant-fold all idents except wildcards.\n      // AFAIK, constant-foldable wildcard idents can only occur in patterns, for instance as `case _: \"a\"`."
  },
  {
    "id" : "f1b48070-60b6-4a47-94b7-7d1a4fffcbdc",
    "prId" : 7027,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/7027#pullrequestreview-274161027",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c6c79bdc-5a96-4399-92a4-707430571844",
        "parentId" : null,
        "authorId" : "3a56b927-736f-4aab-8690-358cd24ca570",
        "body" : "@smarter I think this comment is at the precise level of detail that we want. I don't think going into the subtle differences of Bind/Ident nodes in patterns makes sense - if we did that consequently in the whole compiler, then more than half of the documentation would be permanently outdated.",
        "createdAt" : "2019-08-13T09:26:33Z",
        "updatedAt" : "2019-08-13T09:26:33Z",
        "lastEditedBy" : "3a56b927-736f-4aab-8690-358cd24ca570",
        "tags" : [
        ]
      }
    ],
    "commit" : "4b64f0b5d78322c9b990963e9ea9b141ffe880a4",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +152,156 @@      // Constant-folding that would result in `case \"a\": \"a\"`, which changes the meaning of the pattern.\n      // Note that we _do_ want to constant-fold idents in patterns that _aren't_ wildcards -\n      // for example, @switch annotation needs to see inlined literals and not indirect references.\n      constToLiteral(tree)\n    } else tree"
  },
  {
    "id" : "bc0315ae-beb0-49b7-8d60-013f7fc1463c",
    "prId" : 3265,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/3265#pullrequestreview-68765649",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "583a397a-da17-4094-b741-284db405ed84",
        "parentId" : null,
        "authorId" : "1f1241a4-206b-4204-be44-be9e433da151",
        "body" : "Probably doesn't matter in this case, but I prefer to check the symbol's name (or identity), rather than the selected name, so as to avoid mis-classification in the presence of renaming imports.",
        "createdAt" : "2017-10-11T22:00:56Z",
        "updatedAt" : "2017-10-11T22:00:56Z",
        "lastEditedBy" : "1f1241a4-206b-4204-be44-be9e433da151",
        "tags" : [
        ]
      }
    ],
    "commit" : "745fa3d3f9abe1cd00f3fd98c444fbdf9964cf5b",
    "line" : 37,
    "diffHunk" : "@@ -1,1 +231,235 @@          op match {\n            case nme.ZAND => if (c) y else x\n            case nme.ZOR  => if (c) x else y\n            case _ => tree\n          }"
  }
]