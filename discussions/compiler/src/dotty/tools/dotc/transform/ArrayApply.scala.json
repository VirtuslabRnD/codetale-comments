[
  {
    "id" : "6a2bb240-4978-4f7c-af87-1a0360af777f",
    "prId" : 6821,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/6821#pullrequestreview-259687218",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "55613775-56a7-4554-9285-43c45dc295bf",
        "parentId" : null,
        "authorId" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "body" : "Is this necessary for the common case where the user doesn't manually add type ascriptions or blocks himself ? If it's not necessary then I'd say we shouldn't bother trying to optimize these edge cases.",
        "createdAt" : "2019-07-09T15:37:06Z",
        "updatedAt" : "2019-07-10T08:39:45Z",
        "lastEditedBy" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "tags" : [
        ]
      },
      {
        "id" : "fbb4206e-1d6e-4bfa-8b6a-a215af376a4b",
        "parentId" : "55613775-56a7-4554-9285-43c45dc295bf",
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "Those are to remove artefacts of inlining. They will be useful if we want to optimize the instantiation an opaque type containing an array (such as in `IArray`).",
        "createdAt" : "2019-07-09T16:31:05Z",
        "updatedAt" : "2019-07-10T08:39:45Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      },
      {
        "id" : "de79599c-3237-4788-8605-417cd81f8a23",
        "parentId" : "55613775-56a7-4554-9285-43c45dc295bf",
        "authorId" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "body" : "I see, but it'd be even nicer if inlining didn't produce such artfacts :)",
        "createdAt" : "2019-07-09T16:33:03Z",
        "updatedAt" : "2019-07-10T08:39:45Z",
        "lastEditedBy" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "tags" : [
        ]
      },
      {
        "id" : "4e0296e1-efd0-475e-b3bc-6b7181030261",
        "parentId" : "55613775-56a7-4554-9285-43c45dc295bf",
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "Only the `Typed` is an artefact. But now I see it is an artefact of unpacking a varargs into another one. In Scala2 there is an equivalent [cast striped in the same place](https://github.com/scala/scala/blob/d030172d7ef807d85391d32c5456b1b97b15a402/src/compiler/scala/tools/nsc/transform/CleanUp.scala#L540).",
        "createdAt" : "2019-07-09T18:36:20Z",
        "updatedAt" : "2019-07-10T08:39:45Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      }
    ],
    "commit" : "154181716dddd546e4f628aacec7351ba02537ce",
    "line" : 64,
    "diffHunk" : "@@ -1,1 +62,66 @@\n  object StripAscription {\n    def unapply(tree: Tree)(implicit ctx: Context): Some[Tree] = tree match {\n      case Typed(expr, _) => unapply(expr)\n      case _ => Some(tree)"
  }
]