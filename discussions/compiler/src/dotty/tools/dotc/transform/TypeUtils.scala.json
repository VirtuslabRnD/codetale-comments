[
  {
    "id" : "929fc996-a569-418b-9aaf-c9a833129f94",
    "prId" : 4938,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/4938#pullrequestreview-153079615",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f89b11c3-5065-468a-8c5c-c30d2095fe31",
        "parentId" : null,
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "Could be `tailtec`:\r\n```scala\r\ndef tupleArity(implicit ctx: Context): Int = {\r\n  def tupleArity(tp: Type, arity: Int): Int = tp match {\r\n    case AppliedType(tycon, _ :: tl :: Nil) if tycon.isRef(defn.PairClass) =>\r\n      tupleArity(tl, arity + 1)\r\n   case tp1 =>\r\n      if (tp1.isRef(defn.UnitClass)) arity\r\n      else if (defn.isTupleClass(tp1.classSymbol)) arity + tp1.dealias.argInfos.length\r\n      else -1\r\n  }\r\n  tupleArity(self, 0)\r\n}\r\n```\r\n",
        "createdAt" : "2018-09-04T12:04:37Z",
        "updatedAt" : "2018-09-06T16:47:42Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      },
      {
        "id" : "931ce007-f728-4a80-93a7-5c095d91da15",
        "parentId" : "f89b11c3-5065-468a-8c5c-c30d2095fe31",
        "authorId" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "body" : "I believe that version behaves differently for *: sequences that do not end in `Unit`.",
        "createdAt" : "2018-09-06T15:43:29Z",
        "updatedAt" : "2018-09-06T16:47:42Z",
        "lastEditedBy" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "tags" : [
        ]
      },
      {
        "id" : "e9d46435-1d27-474b-bd64-951621c0bcac",
        "parentId" : "f89b11c3-5065-468a-8c5c-c30d2095fe31",
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "Maybe, still there exists a correct tailrec version of the method. Can be revisited later.",
        "createdAt" : "2018-09-06T19:11:42Z",
        "updatedAt" : "2018-09-06T19:11:42Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      }
    ],
    "commit" : "42a5a9df1ad852cc3154ee968c25372513aa4ede",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +32,36 @@     *  or -1 if this is not a tuple type.\n     */\n    def tupleArity(implicit ctx: Context): Int = self match {\n      case AppliedType(tycon, _ :: tl :: Nil) if tycon.isRef(defn.PairClass) =>\n        val arity = tl.tupleArity"
  }
]