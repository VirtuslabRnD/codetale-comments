[
  {
    "id" : "f041f32d-79ec-4a12-94c1-6773f355258f",
    "prId" : 3217,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/3217#pullrequestreview-66318159",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "be01e908-f369-4836-89a3-469abd5d2dd4",
        "parentId" : null,
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "This came from the design that @DarkDimius showed me to add new compilation units. I mostly looked at it from a functional point of view, not a performance one. I will have a look and see if it can be done in a better way.",
        "createdAt" : "2017-09-30T16:19:45Z",
        "updatedAt" : "2017-09-30T16:19:46Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      },
      {
        "id" : "b0c7ac56-affd-44e2-bdf6-affb8d8aaf98",
        "parentId" : "be01e908-f369-4836-89a3-469abd5d2dd4",
        "authorId" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "body" : "I see. In essence, MiniPhase.runOn calls the indexing framework that figures out the method call plan. I thought that would be done before, but it seems not (maybe because we don't have the right context before?). The problem with that approach is that it is done afresh for each compilation unit, even if it \r\nis always the same computation.\r\n\r\nNobody except LinkAll seems to call `runOn`, however.\r\n",
        "createdAt" : "2017-09-30T16:36:01Z",
        "updatedAt" : "2017-09-30T16:54:28Z",
        "lastEditedBy" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "tags" : [
        ]
      },
      {
        "id" : "3411aa12-a770-4f62-a2b9-301bcb12a0c7",
        "parentId" : "be01e908-f369-4836-89a3-469abd5d2dd4",
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "This is probably cleaner #3219, there was not a good reason for it to be a miniphase. That PR should further improve performance on `LinkAll`.",
        "createdAt" : "2017-09-30T17:14:12Z",
        "updatedAt" : "2017-09-30T17:14:12Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      },
      {
        "id" : "b8dd5a47-2af3-4bec-ae9c-95234540cb89",
        "parentId" : "be01e908-f369-4836-89a3-469abd5d2dd4",
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "If I remember correctly `runOn` was designed specifically for the purpose of adding new compilation units. Until `LinkAll` this use case was only used in the linker fork.",
        "createdAt" : "2017-09-30T17:26:44Z",
        "updatedAt" : "2017-09-30T17:26:44Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      }
    ],
    "commit" : "f27cd43a657f1a0dd427a940eda1e33b097b5b1c",
    "line" : 3,
    "diffHunk" : "@@ -1,1 +36,40 @@    }\n\n    if (ctx.settings.XlinkOptimise.value) super.runOn(allUnits(Set.empty, units.toSet, Set.empty))\n    else units\n  }"
  },
  {
    "id" : "0d8f2ea0-46fe-4a9a-8ea5-82ebc23a9c23",
    "prId" : 2910,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/2910#pullrequestreview-60375586",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "332f35d5-28e6-4df5-9a00-1adbe53156c6",
        "parentId" : null,
        "authorId" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "body" : "Don't think this is correct in general, you assume that inParents will be false before you set it to true, but you can have a Template inside the parents of a Template, e.g:\r\n```scala\r\nclass A(x: Int)\r\nclass B extends A({ class Foo; 1 })\r\n```",
        "createdAt" : "2017-09-01T15:50:23Z",
        "updatedAt" : "2017-09-07T08:58:52Z",
        "lastEditedBy" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "tags" : [
        ]
      },
      {
        "id" : "4f951b58-9162-4c98-91f9-489b94567d00",
        "parentId" : "332f35d5-28e6-4df5-9a00-1adbe53156c6",
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "This works, I added a test for it.",
        "createdAt" : "2017-09-04T10:11:46Z",
        "updatedAt" : "2017-09-07T08:58:52Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      }
    ],
    "commit" : "4f0b0706ca7359a8dfe24692d539a96e971aa6bc",
    "line" : 54,
    "diffHunk" : "@@ -1,1 +52,56 @@        inParents = true\n        val acc2 = this(acc1, parents)\n        inParents = false\n        this(this(acc2, self), tree.body)\n      case _ => foldOver(acc, tree)"
  }
]