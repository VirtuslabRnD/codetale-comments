[
  {
    "id" : "cd820032-4042-4f75-a321-6bfd9e299a51",
    "prId" : 9469,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/9469#pullrequestreview-459983920",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ecd352e9-d1cc-4863-8e1c-30a0febf6dd2",
        "parentId" : null,
        "authorId" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "body" : "It's unclear to me why we cannot just use `arg.tpe.widen` as the type of the binding?",
        "createdAt" : "2020-08-03T12:04:51Z",
        "updatedAt" : "2020-08-03T12:57:23Z",
        "lastEditedBy" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "tags" : [
        ]
      },
      {
        "id" : "13465955-6a7b-48e0-a312-e0672de757e8",
        "parentId" : "ecd352e9-d1cc-4863-8e1c-30a0febf6dd2",
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "It is to allow TermRef to definitions with constant types to be constant folded after this transformation.",
        "createdAt" : "2020-08-03T12:27:21Z",
        "updatedAt" : "2020-08-03T12:57:23Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      }
    ],
    "commit" : "354a0f144d2d5b90670a34c10dbc95cf8be809e7",
    "line" : 40,
    "diffHunk" : "@@ -1,1 +71,75 @@            val flags = Synthetic | (param.symbol.flags & Erased)\n            val tpe = if arg.tpe.dealias.isInstanceOf[ConstantType] then arg.tpe.dealias else arg.tpe.widen\n            val binding = ValDef(newSymbol(ctx.owner, param.name, flags, tpe, coord = arg.span), arg).withSpan(arg.span)\n            bindings += binding\n            binding.symbol"
  },
  {
    "id" : "9cfd76a8-b7b7-4004-ab85-307302cd7f66",
    "prId" : 9469,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/9469#pullrequestreview-460312841",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "701a3c08-4bdc-4e4a-8a44-411762f8118d",
        "parentId" : null,
        "authorId" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "body" : "This is constant folding -- can we reuse the logic in `ConstFold`?",
        "createdAt" : "2020-08-03T12:07:28Z",
        "updatedAt" : "2020-08-03T12:57:23Z",
        "lastEditedBy" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "tags" : [
        ]
      },
      {
        "id" : "666d3255-73af-4e4a-836a-e33dc91f3318",
        "parentId" : "701a3c08-4bdc-4e4a-8a44-411762f8118d",
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "It is not exactly constant folding. It is just the propagation of constants. After this `ConstFold` is used at some point and performs the actual folding.",
        "createdAt" : "2020-08-03T13:20:14Z",
        "updatedAt" : "2020-08-03T13:20:40Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      },
      {
        "id" : "938cb39b-ab84-4fac-97d0-49a1b256980f",
        "parentId" : "701a3c08-4bdc-4e4a-8a44-411762f8118d",
        "authorId" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "body" : "What about `TreeInfo.constToLiteral`?",
        "createdAt" : "2020-08-03T13:47:29Z",
        "updatedAt" : "2020-08-03T13:47:29Z",
        "lastEditedBy" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "tags" : [
        ]
      },
      {
        "id" : "3413cd1b-e8c5-4d5e-bee1-9bf2919a7fe8",
        "parentId" : "701a3c08-4bdc-4e4a-8a44-411762f8118d",
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "It fails. It also looks like overkill.",
        "createdAt" : "2020-08-03T14:28:16Z",
        "updatedAt" : "2020-08-03T14:28:17Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      },
      {
        "id" : "75af9dac-fdfb-4c1b-97b5-70156ffcb3f3",
        "parentId" : "701a3c08-4bdc-4e4a-8a44-411762f8118d",
        "authorId" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "body" : "OK. Maybe as an optimization for later, beta-reduce & inlining may create new const-folding opportunities.",
        "createdAt" : "2020-08-03T19:34:28Z",
        "updatedAt" : "2020-08-03T19:34:29Z",
        "lastEditedBy" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "tags" : [
        ]
      },
      {
        "id" : "03384802-51ea-4040-8f1b-d0e29fbff566",
        "parentId" : "701a3c08-4bdc-4e4a-8a44-411762f8118d",
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "Indeed",
        "createdAt" : "2020-08-03T20:17:40Z",
        "updatedAt" : "2020-08-03T20:17:40Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      }
    ],
    "commit" : "354a0f144d2d5b90670a34c10dbc95cf8be809e7",
    "line" : 53,
    "diffHunk" : "@@ -1,1 +86,90 @@        case ConstantType(const) if isPureExpr(tree) => cpy.Literal(tree)(const)\n        case _ => super.transform(tree)\n    }.transform(expansion)\n    val bindings1 =\n      bindings.result().filterNot(vdef => vdef.tpt.tpe.isInstanceOf[ConstantType] && isPureExpr(vdef.rhs))"
  }
]