[
  {
    "id" : "3e7cbd6e-7dbe-4067-894f-bfa401302e88",
    "prId" : 5112,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/5112#pullrequestreview-158707931",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1ce034ea-397d-44f3-b739-b132bde7230d",
        "parentId" : null,
        "authorId" : "223e67d6-1873-432a-9af9-f40b82a7eedd",
        "body" : "Sorry, I missed this. Is this needed if you move `TailRec` after `Mixin` within the same group?",
        "createdAt" : "2018-09-25T16:27:32Z",
        "updatedAt" : "2018-09-25T16:38:45Z",
        "lastEditedBy" : "223e67d6-1873-432a-9af9-f40b82a7eedd",
        "tags" : [
        ]
      },
      {
        "id" : "78d03fa2-6f22-4592-94e2-bc152cb951d4",
        "parentId" : "1ce034ea-397d-44f3-b739-b132bde7230d",
        "authorId" : "5a9cd756-9120-4d5e-ac88-e9c636084f0e",
        "body" : "Even more so. But right now it's necessary above all for *extension methods* (for `AnyVal`s, which also use this `forwarder()` method). In general, when creating a forwarder of any sort, we must remove the `@tailrec` annotation.\r\n\r\nPreviously, no forwarder was ever created before `TailRec` ran. But now that `TailRec` runs after the creation of extension methods, we must ensure that `forwarder` drops `@tailrec`).",
        "createdAt" : "2018-09-25T19:30:40Z",
        "updatedAt" : "2018-09-25T19:30:41Z",
        "lastEditedBy" : "5a9cd756-9120-4d5e-ac88-e9c636084f0e",
        "tags" : [
        ]
      }
    ],
    "commit" : "f102203d7b3d21db8a4c6444b01d16d17fde4448",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +25,29 @@      flags = member.flags &~ Deferred,\n      info = cls.thisType.memberInfo(member)).enteredAfter(thisPhase).asTerm\n    res.addAnnotations(member.annotations.filter(_.symbol != defn.TailrecAnnot))\n    res\n  }"
  },
  {
    "id" : "957a428e-cd4b-4f79-9734-645a4c1d3779",
    "prId" : 2017,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/2017#pullrequestreview-23001944",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "08e41d11-8500-4762-b517-2bdec595965f",
        "parentId" : null,
        "authorId" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "body" : "typo: chaches -> caches",
        "createdAt" : "2017-02-21T16:25:28Z",
        "updatedAt" : "2017-02-21T16:25:28Z",
        "lastEditedBy" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "tags" : [
        ]
      }
    ],
    "commit" : "d009eb81f0b4d9f71b70a1ac023c833629e3c44c",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +42,46 @@      cls.info.member(sym.name).hasAltWith(_.symbol == sym)\n      // this is a hot spot, where we spend several seconds while compiling stdlib\n      // unfortunately it will discard and recompute all the member chaches,\n      // both making itself slow and slowing down anything that runs after it\n      // because resolveSuper uses hacks with explicit adding to scopes through .enter"
  }
]