[
  {
    "id" : "d1334260-1468-4ead-8d25-3c0178b4414d",
    "prId" : 12495,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/12495#pullrequestreview-662803227",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f288c37a-6bb6-4406-a688-496ac0dfccfc",
        "parentId" : null,
        "authorId" : "ed629d1e-b3d4-4235-b1d2-9b900fd9ee32",
        "body" : "Should we remove `checkClassBody` or is it too early? Also `cache`, summarization, etc.",
        "createdAt" : "2021-05-18T20:13:25Z",
        "updatedAt" : "2021-05-18T22:21:53Z",
        "lastEditedBy" : "ed629d1e-b3d4-4235-b1d2-9b900fd9ee32",
        "tags" : [
        ]
      },
      {
        "id" : "c9a94607-0546-4d21-82c9-acd177823750",
        "parentId" : "f288c37a-6bb6-4406-a688-496ac0dfccfc",
        "authorId" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "body" : "Yes, we will remove the existing version in another PR.",
        "createdAt" : "2021-05-19T06:20:15Z",
        "updatedAt" : "2021-05-19T06:20:15Z",
        "lastEditedBy" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "tags" : [
        ]
      }
    ],
    "commit" : "12bfbd27637d381f8860fcaf804dd8c2859bfa49",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +60,64 @@      )\n\n      // Checking.checkClassBody(tree)\n\n      import semantic._"
  },
  {
    "id" : "202f4788-b04f-419b-9f0b-ecea6f148f35",
    "prId" : 12495,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/12495#pullrequestreview-662805028",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ec7d872d-d4b6-4c08-bf95-80ad7965a16d",
        "parentId" : null,
        "authorId" : "ed629d1e-b3d4-4235-b1d2-9b900fd9ee32",
        "body" : "We discussed that we could in theory call `init` here instead of `eval`. I there are tricky reasons to prefer `eval`, fine, but if not, then `init` would make the intent clearer.",
        "createdAt" : "2021-05-18T20:17:31Z",
        "updatedAt" : "2021-05-18T22:21:53Z",
        "lastEditedBy" : "ed629d1e-b3d4-4235-b1d2-9b900fd9ee32",
        "tags" : [
        ]
      },
      {
        "id" : "1df930b8-492b-4328-8632-e81dcda21d03",
        "parentId" : "ec7d872d-d4b6-4c08-bf95-80ad7965a16d",
        "authorId" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "body" : "Here the reason is only for consistency and tries to follow the Scala specification on initialization literally.\r\nInside the interpreter, beyond the cosmetical reason, another reason to reuse the cache infrastructure in early promotion of warm objects. ",
        "createdAt" : "2021-05-19T06:23:30Z",
        "updatedAt" : "2021-05-19T06:23:30Z",
        "lastEditedBy" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "tags" : [
        ]
      }
    ],
    "commit" : "12bfbd27637d381f8860fcaf804dd8c2859bfa49",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +66,70 @@      val thisRef = ThisRef(cls)\n      val heap = Objekt(cls, fields = mutable.Map.empty)\n      val res = eval(tpl, thisRef, cls)(using heap, ctx, Vector.empty)\n      res.errors.foreach(_.issue)\n    }"
  }
]