[
  {
    "id" : "d6673191-8ad6-451c-ab4f-b5afc98dff51",
    "prId" : 7789,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/7789#pullrequestreview-348675629",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f5820edd-74ac-4d0b-be2a-4edbac1ed6d2",
        "parentId" : null,
        "authorId" : "3a3c9c08-5985-41f6-a86b-7fc5a427f51a",
        "body" : "As far as I can see this value is dependent only on `ctx`, to look-up an enum-related method. AFAIK if you have a `lazy val` in a class, it'll allocate memory for each instance of that class. I think it would be more memory-efficient to evict this constant out of the class. Do you think it is possible to do so?",
        "createdAt" : "2020-01-24T11:00:14Z",
        "updatedAt" : "2020-02-13T13:59:50Z",
        "lastEditedBy" : "3a3c9c08-5985-41f6-a86b-7fc5a427f51a",
        "tags" : [
        ]
      },
      {
        "id" : "0f4b9082-30b9-4921-91d3-775ab03c6228",
        "parentId" : "f5820edd-74ac-4d0b-be2a-4edbac1ed6d2",
        "authorId" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "body" : "It seems difficult to do that due to the dependence on `ctx`.",
        "createdAt" : "2020-01-27T13:52:50Z",
        "updatedAt" : "2020-02-13T13:59:50Z",
        "lastEditedBy" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "tags" : [
        ]
      }
    ],
    "commit" : "6a4d06a40b13b72ae3468486d1c2d916400dea8e",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +25,29 @@\n  // Methods that should be ignored in the checking\n  lazy val ignoredMethods: Set[Symbol] = Set(\n    ctx.requiredClass(\"scala.runtime.EnumValues\").requiredMethod(\"register\"),\n    defn.Any_getClass,"
  }
]