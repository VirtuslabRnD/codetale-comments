[
  {
    "id" : "904b0fb5-db93-4e4c-bdc6-7ab672d09f96",
    "prId" : 6074,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/6074#pullrequestreview-213060490",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b43da575-e39a-457f-9460-c6e4c547acd5",
        "parentId" : null,
        "authorId" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "body" : "I would put the withSpan in the definition of rewire",
        "createdAt" : "2019-03-11T17:00:03Z",
        "updatedAt" : "2019-03-11T17:00:03Z",
        "lastEditedBy" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "tags" : [
        ]
      },
      {
        "id" : "f9411922-90d4-45ce-9775-a82e976d6840",
        "parentId" : "b43da575-e39a-457f-9460-c6e4c547acd5",
        "authorId" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "body" : "Thanks @smarter . That was what @nicolasstucki and I initially did -- but soon we find it's not the right place due to the recursive nature of `rewire`.",
        "createdAt" : "2019-03-11T19:58:35Z",
        "updatedAt" : "2019-03-11T19:58:36Z",
        "lastEditedBy" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "tags" : [
        ]
      },
      {
        "id" : "813bb3ac-b1a9-4b48-9b91-475e9e5ded5d",
        "parentId" : "b43da575-e39a-457f-9460-c6e4c547acd5",
        "authorId" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "body" : "There is one branch of `rewire` which is not recursive (the last one), that branch should get the withSpan.",
        "createdAt" : "2019-03-11T20:00:23Z",
        "updatedAt" : "2019-03-11T20:00:23Z",
        "lastEditedBy" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "tags" : [
        ]
      },
      {
        "id" : "b26cdb65-b325-435c-bf9f-13bd881613f0",
        "parentId" : "b43da575-e39a-457f-9460-c6e4c547acd5",
        "authorId" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "body" : "The problem is that we want to set the initial `tree.span`, instead of the `tree.span` from recursive calls.",
        "createdAt" : "2019-03-11T20:05:15Z",
        "updatedAt" : "2019-03-11T20:05:16Z",
        "lastEditedBy" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "tags" : [
        ]
      },
      {
        "id" : "f5790b8d-4f5b-4f0b-8212-8bb18aa2ed1a",
        "parentId" : "b43da575-e39a-457f-9460-c6e4c547acd5",
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "The issue there is that the `tree` is the tree of the qualifier which does not have the position of the full call (it does not cover the arguments). We could pass the position as a parameter to `rewire` instead. ",
        "createdAt" : "2019-03-11T20:07:21Z",
        "updatedAt" : "2019-03-11T20:07:21Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      },
      {
        "id" : "d59a5743-084c-4cb6-a21b-863581c6d2bc",
        "parentId" : "b43da575-e39a-457f-9460-c6e4c547acd5",
        "authorId" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "body" : "ah I see, one way to do that would be to change rewire to contain an inner method which is recursive, but I guess it's not very important since it's only used once anyway.",
        "createdAt" : "2019-03-11T20:12:59Z",
        "updatedAt" : "2019-03-11T20:13:00Z",
        "lastEditedBy" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "tags" : [
        ]
      },
      {
        "id" : "7baa0010-b4ad-4b90-b59e-9e5ccac2535e",
        "parentId" : "b43da575-e39a-457f-9460-c6e4c547acd5",
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "Or we could pass the `span` as an extra parameter.",
        "createdAt" : "2019-03-11T20:14:23Z",
        "updatedAt" : "2019-03-11T20:14:23Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      }
    ],
    "commit" : "a7ed132d0d47b4ec8518af5e9da6e58f40cbe677",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +93,97 @@    case _ =>\n      if (isMethodWithExtension(tree.symbol))\n        rewire(tree).ensureConforms(tree.tpe).withSpan(tree.span)\n      else\n        tree"
  }
]