[
  {
    "id" : "07611b20-45c1-463d-b5ec-335f2daeabcb",
    "prId" : 4643,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/4643#pullrequestreview-133621694",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "02c9a9a2-1924-4afa-8bfd-d9cafb5063f0",
        "parentId" : null,
        "authorId" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "body" : "I don't think this is thread-safe",
        "createdAt" : "2018-06-11T11:48:05Z",
        "updatedAt" : "2018-06-19T13:12:18Z",
        "lastEditedBy" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "tags" : [
        ]
      },
      {
        "id" : "f6ea023a-e8d3-4ac2-93bb-d7ec6a1b8105",
        "parentId" : "02c9a9a2-1924-4afa-8bfd-d9cafb5063f0",
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "It is not and not intended to be. Each thread should generate its own toolbox. I will add documentation and thick how to check that they do not use the same compiler in two threads.",
        "createdAt" : "2018-06-11T12:01:32Z",
        "updatedAt" : "2018-06-19T13:12:18Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      },
      {
        "id" : "03d01f18-b5f4-444d-ba41-b6d8b2306547",
        "parentId" : "02c9a9a2-1924-4afa-8bfd-d9cafb5063f0",
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "Decided to make it thread-safe by synchronization instead. If someone wants parallelism they should create several instances of the `Toolbox`",
        "createdAt" : "2018-06-12T17:37:29Z",
        "updatedAt" : "2018-06-19T13:12:18Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      },
      {
        "id" : "e4c27424-a41f-445e-a5b1-042bf6e3ceeb",
        "parentId" : "02c9a9a2-1924-4afa-8bfd-d9cafb5063f0",
        "authorId" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "body" : "> Decided to make it thread-safe by synchronization instead.\r\n\r\nI don't see any synchronization logic in the code.",
        "createdAt" : "2018-06-29T23:12:56Z",
        "updatedAt" : "2018-06-29T23:12:57Z",
        "lastEditedBy" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "tags" : [
        ]
      },
      {
        "id" : "60d83eb5-5f2f-43c9-928b-0cc598347d72",
        "parentId" : "02c9a9a2-1924-4afa-8bfd-d9cafb5063f0",
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "I must have lost that commit in one of the reading. I will add it again.",
        "createdAt" : "2018-06-30T04:41:03Z",
        "updatedAt" : "2018-06-30T04:41:03Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      },
      {
        "id" : "bc9c6e4b-0ce5-4c08-90a3-376b3bcef7c0",
        "parentId" : "02c9a9a2-1924-4afa-8bfd-d9cafb5063f0",
        "authorId" : "348fab8e-49e2-442e-884d-850c7f41fdde",
        "body" : "Searching for `synchronized` still finds nothing here?",
        "createdAt" : "2018-07-02T13:05:24Z",
        "updatedAt" : "2018-07-02T13:05:24Z",
        "lastEditedBy" : "348fab8e-49e2-442e-884d-850c7f41fdde",
        "tags" : [
        ]
      },
      {
        "id" : "11a03a70-1340-4c73-80c1-9667d8a2f0d4",
        "parentId" : "02c9a9a2-1924-4afa-8bfd-d9cafb5063f0",
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "It is in #4746",
        "createdAt" : "2018-07-02T13:19:01Z",
        "updatedAt" : "2018-07-02T13:19:01Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      }
    ],
    "commit" : "f781701546a24bebb7e0af7cd9d642760dccbd7a",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +15,19 @@  import tpd._\n\n  private[this] val contextBase: ContextBase = new ContextBase\n\n  def run[T](expr: Expr[T], settings: ToolboxSettings): T = {"
  },
  {
    "id" : "a90d8dea-f55a-4ac0-a6dc-11044ac0a549",
    "prId" : 3972,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/3972#pullrequestreview-95089589",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fa408f87-9aa8-4705-97e7-9e1f4b2da99a",
        "parentId" : null,
        "authorId" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "body" : "`dummy.scala`?",
        "createdAt" : "2018-02-08T14:07:42Z",
        "updatedAt" : "2018-02-12T15:41:34Z",
        "lastEditedBy" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "tags" : [
        ]
      },
      {
        "id" : "c617beda-cf1d-4952-8e8b-bdcf9effd375",
        "parentId" : "fa408f87-9aa8-4705-97e7-9e1f4b2da99a",
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "`setup` expects some input file. But it is not required here. Hence I add a dummy file name that is then ignored. It is the `_` in `val (_, ctx: Context) = `",
        "createdAt" : "2018-02-08T14:25:19Z",
        "updatedAt" : "2018-02-12T15:41:34Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      }
    ],
    "commit" : "02b177409ba79bcbb455b83dc25432c9f9d93011",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +18,22 @@\n  def run[T](expr: Expr[T], settings: Settings[Run]): T = {\n    val (_, ctx: Context) = setup(settings.compilerArgs.toArray :+ \"dummy.scala\", initCtx.fresh)\n\n    val outDir: AbstractFile = settings.outDir match {"
  },
  {
    "id" : "5983468c-3970-4369-bf63-5314b9c11a69",
    "prId" : 3972,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/3972#pullrequestreview-95083536",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dbd6947b-27ab-44e4-8405-01262117de49",
        "parentId" : null,
        "authorId" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "body" : "what's `dummy.scala`? ",
        "createdAt" : "2018-02-08T14:08:58Z",
        "updatedAt" : "2018-02-12T15:41:34Z",
        "lastEditedBy" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "tags" : [
        ]
      }
    ],
    "commit" : "02b177409ba79bcbb455b83dc25432c9f9d93011",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +51,55 @@\n  def withTree[T](expr: Expr[_], f: (Tree, Context) => T, settings: Settings[_]): T = {\n    val (_, ctx: Context) = setup(settings.compilerArgs.toArray :+ \"dummy.scala\", initCtx.fresh)\n\n    var output: Option[T] = None"
  }
]