[
  {
    "id" : "940ca0b5-2d47-4cf7-96d9-5f00dfb53e55",
    "prId" : 11695,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/11695#pullrequestreview-613118417",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "77916eec-3165-411e-ac44-1bfb45ad589e",
        "parentId" : null,
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "We might also want to remove `Inline`",
        "createdAt" : "2021-03-15T09:27:59Z",
        "updatedAt" : "2021-03-17T17:59:10Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      },
      {
        "id" : "4654ec79-67d1-4ac8-b07d-fb7ef3f3d598",
        "parentId" : "77916eec-3165-411e-ac44-1bfb45ad589e",
        "authorId" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "body" : "No, inline is per param, not per clause\r\n",
        "createdAt" : "2021-03-16T11:14:04Z",
        "updatedAt" : "2021-03-17T17:59:10Z",
        "lastEditedBy" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "tags" : [
        ]
      }
    ],
    "commit" : "0af3f598cc7026212393f7ca8271e0985adbf30a",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +926,930 @@    if (homogenizedView && mods.flags.isTypeFlags) flagMask &~= GivenOrImplicit // drop implicit/given from classes\n    val rawFlags = if (sym.exists) sym.flags else mods.flags\n    if (rawFlags.is(Param)) flagMask = flagMask &~ Given &~ Erased\n    val flags = rawFlags & flagMask\n    var flagsText = toTextFlags(sym, flags)"
  },
  {
    "id" : "a6272a68-2ba9-499f-88d9-694fe2c558a9",
    "prId" : 9255,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/9255#pullrequestreview-442357591",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ca325ea8-fdfa-47a4-b088-d53f0da76dbb",
        "parentId" : null,
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "We need to invert the parameters if the name ends in `:`\r\n\r\n```scala\r\nextension (x: Int):\r\n  def +: (y: Double) = 1\r\n//  is printed as\r\nextension (y: Double) def +:(x: Int): Int = 1\r\n```",
        "createdAt" : "2020-07-03T11:55:46Z",
        "updatedAt" : "2020-07-05T10:03:18Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      }
    ],
    "commit" : "e1601400452edcac163e2d53a4fa60aaf191a95d",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +545,549 @@        keywordText(\"extension \")\n        ~ addVparamssText(tparamsText(tparams), vparamss)\n        ~ \" \" ~ (if mdefs.length == 1 then toText(mdefs.head) else blockText(mdefs))\n      case packageDef: PackageDef =>\n        packageDefText(packageDef)"
  },
  {
    "id" : "edc1f286-3036-4962-a746-e9973c88701d",
    "prId" : 6497,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/6497#pullrequestreview-238457340",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dd85d8c6-7f8b-4a89-a26c-ab8b2be1c7ce",
        "parentId" : null,
        "authorId" : "37519144-0f9f-4b2b-85f7-34dde9be2e11",
        "body" : "This was calling:\r\n\r\n`getAttachment(untpd.ApplyGiven).isDefined`\r\n\r\nand now we call:\r\n\r\n`getAttachment(untpd.ApplyGiven).nonEmpty`\r\n\r\nIs that intentional?",
        "createdAt" : "2019-05-16T14:21:17Z",
        "updatedAt" : "2019-05-16T14:22:33Z",
        "lastEditedBy" : "37519144-0f9f-4b2b-85f7-34dde9be2e11",
        "tags" : [
        ]
      },
      {
        "id" : "263630f2-5d36-40e1-b071-589e682c4baf",
        "parentId" : "dd85d8c6-7f8b-4a89-a26c-ab8b2be1c7ce",
        "authorId" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "body" : "yes, it's the same thing. We used to call one in some places and the other in others. ",
        "createdAt" : "2019-05-16T15:07:24Z",
        "updatedAt" : "2019-05-16T15:07:24Z",
        "lastEditedBy" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "tags" : [
        ]
      }
    ],
    "commit" : "f2c80b2054f38c8a2fdfc6ec5b5fef553f297dd1",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +351,355 @@        else if (!ctx.settings.YprintDebug.value && fun.hasType && fun.symbol == defn.InternalQuoted_exprSplice)\n          keywordStr(\"${\") ~ toTextGlobal(args, \", \") ~ keywordStr(\"}\")\n        else if (app.isGivenApply && !homogenizedView)\n          changePrec(InfixPrec) {\n            toTextLocal(fun) ~ \" given \" ~"
  },
  {
    "id" : "0e91736e-7ce6-48b9-8b7f-48ccb716a8e1",
    "prId" : 5763,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/5763#pullrequestreview-202563820",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "465f0389-3b01-4210-889c-335a7bf65f6f",
        "parentId" : null,
        "authorId" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "body" : "Why typeText instead if keywordStr? (I don't know enough about the syntax highlighting stuff to be able to tell).\r\n",
        "createdAt" : "2019-02-10T18:00:02Z",
        "updatedAt" : "2019-02-14T06:43:23Z",
        "lastEditedBy" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "tags" : [
        ]
      },
      {
        "id" : "7000df7f-08f1-4642-9d6c-da338fb117c1",
        "parentId" : "465f0389-3b01-4210-889c-335a7bf65f6f",
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "It looks like this:\r\n<img width=\"514\" alt=\"screenshot 2019-02-12 at 10 33 08\" src=\"https://user-images.githubusercontent.com/3648029/52625590-9e36ee80-2eb1-11e9-9533-26aabd38f3f0.png\">\r\n\r\nI added it because in some large examples it was easyer to see which where types splices and which  where terms splices.",
        "createdAt" : "2019-02-12T09:35:51Z",
        "updatedAt" : "2019-02-14T06:43:23Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      }
    ],
    "commit" : "bb9874c4bd40b5e853ae19721898c16d4393e7a1",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +325,329 @@      case tree @ Select(qual, name) =>\n        if (tree.hasType && tree.symbol == defn.QuotedExpr_~) keywordStr(\"~(\") ~ toTextLocal(qual) ~ keywordStr(\")\")\n        else if (tree.hasType && tree.symbol == defn.QuotedType_~) typeText(\"~(\") ~ toTextLocal(qual) ~ typeText(\")\")\n        else if (qual.isType) toTextLocal(qual) ~ \"#\" ~ typeText(toText(name))\n        else toTextLocal(qual) ~ (\".\" ~ nameIdText(tree) provided name != nme.CONSTRUCTOR)"
  },
  {
    "id" : "589cd4c5-f758-48ac-ac8d-b601a24233f0",
    "prId" : 4731,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/4731#pullrequestreview-134042974",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "38e778b0-f032-45ea-8397-a9f961f4f282",
        "parentId" : null,
        "authorId" : "223e67d6-1873-432a-9af9-f40b82a7eedd",
        "body" : "`sym.name` is `package$` for package object",
        "createdAt" : "2018-06-27T16:54:29Z",
        "updatedAt" : "2018-07-03T12:38:20Z",
        "lastEditedBy" : "223e67d6-1873-432a-9af9-f40b82a7eedd",
        "tags" : [
        ]
      },
      {
        "id" : "88509303-8a3f-4795-b2a6-848e37ec6fef",
        "parentId" : "38e778b0-f032-45ea-8397-a9f961f4f282",
        "authorId" : "348fab8e-49e2-442e-884d-850c7f41fdde",
        "body" : "Makes sense to me, but is this testable without too much effort? Otherwise I'll need to figure out an example to try this out... (that is, write a test.)",
        "createdAt" : "2018-07-03T12:09:05Z",
        "updatedAt" : "2018-07-03T12:38:20Z",
        "lastEditedBy" : "348fab8e-49e2-442e-884d-850c7f41fdde",
        "tags" : [
        ]
      },
      {
        "id" : "860a4057-5efe-45da-95d3-87f8da776190",
        "parentId" : "38e778b0-f032-45ea-8397-a9f961f4f282",
        "authorId" : "223e67d6-1873-432a-9af9-f40b82a7eedd",
        "body" : "I've added a test case",
        "createdAt" : "2018-07-03T15:09:32Z",
        "updatedAt" : "2018-07-03T15:09:32Z",
        "lastEditedBy" : "223e67d6-1873-432a-9af9-f40b82a7eedd",
        "tags" : [
        ]
      }
    ],
    "commit" : "107d8ff4906ecee3861654ed5f473c39221b57ba",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +749,753 @@      val name =\n        if (sym.isPackageObject) sym.owner.name\n        else sym.name.stripModuleClassSuffix\n      kindString(sym) ~~ (nameString(name) + idString(sym))\n    }"
  },
  {
    "id" : "19b13328-5734-4584-8a74-72de27c639b1",
    "prId" : 3691,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/3691#pullrequestreview-89359045",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "52ef4674-3a66-4bfc-a25d-f1f7fdaf9411",
        "parentId" : null,
        "authorId" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "body" : "Remove the prefix `dotty.tools.dotc `?",
        "createdAt" : "2018-01-10T13:15:13Z",
        "updatedAt" : "2018-01-17T17:23:46Z",
        "lastEditedBy" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "tags" : [
        ]
      },
      {
        "id" : "6811f67a-1587-442a-8fff-ee7a98b5f368",
        "parentId" : "52ef4674-3a66-4bfc-a25d-f1f7fdaf9411",
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "No, confused the IDE",
        "createdAt" : "2018-01-17T08:31:49Z",
        "updatedAt" : "2018-01-17T17:23:46Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      }
    ],
    "commit" : "a5f967e03589eb823a18c3b340d72c0c63ad2242",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +26,30 @@import util.Positions._\nimport dotty.tools.dotc.transform.SymUtils._\nimport dotty.tools.dotc.transform.FirstTransform\n\nimport scala.annotation.switch"
  }
]