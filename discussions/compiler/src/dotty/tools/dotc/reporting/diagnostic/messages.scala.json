[
  {
    "id" : "14aa3cb4-c121-4649-84e9-f378cff18976",
    "prId" : 5176,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/5176#pullrequestreview-159584615",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a2b01efd-6e8e-4f34-a8f7-4a18ec4bcf1c",
        "parentId" : null,
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "We should reuse `VarValParametersMayNotBeCallByName` instead and maybe addapt a bit it's explanation.",
        "createdAt" : "2018-09-27T18:06:26Z",
        "updatedAt" : "2018-09-27T19:43:44Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      },
      {
        "id" : "8af991dd-6968-47bd-9919-03c70c33537d",
        "parentId" : "a2b01efd-6e8e-4f34-a8f7-4a18ec4bcf1c",
        "authorId" : "1a7d8f9e-77a7-44d8-8e84-72ed77060419",
        "body" : "That was my first idea, but I thought it might be confusing, because it's not really a `val` and doesn't seem to behave like a case class parameter, which implicitly is a `val`, either.",
        "createdAt" : "2018-09-27T18:22:38Z",
        "updatedAt" : "2018-09-27T19:43:44Z",
        "lastEditedBy" : "1a7d8f9e-77a7-44d8-8e84-72ed77060419",
        "tags" : [
        ]
      },
      {
        "id" : "19ab098e-f8e1-42f7-8e5f-a0d9f23ac9fd",
        "parentId" : "a2b01efd-6e8e-4f34-a8f7-4a18ec4bcf1c",
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "You are right",
        "createdAt" : "2018-09-27T18:35:22Z",
        "updatedAt" : "2018-09-27T19:43:44Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      }
    ],
    "commit" : "6509411c4f9834d566573fb768121b40d86ce88f",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +1667,1671 @@  }\n\n  case class ValueClassParameterMayNotBeCallByName(valueClass: Symbol, param: Symbol)(implicit ctx: Context)\n    extends Message(ValueClassParameterMayNotBeCallByNameID) {\n    val msg = s\"value class parameter `${param.name}` may not be call-by-name\""
  },
  {
    "id" : "2b351071-d2ef-419c-8f7e-7479c67c92a1",
    "prId" : 4617,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/4617#pullrequestreview-125658840",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5646b63b-979a-4ab3-824f-97365190eed5",
        "parentId" : null,
        "authorId" : "348fab8e-49e2-442e-884d-850c7f41fdde",
        "body" : "@allanrenucci `s/as defined/than defined/`, no?",
        "createdAt" : "2018-06-04T16:52:14Z",
        "updatedAt" : "2018-06-04T16:52:15Z",
        "lastEditedBy" : "348fab8e-49e2-442e-884d-850c7f41fdde",
        "tags" : [
        ]
      },
      {
        "id" : "a6032935-65bf-485e-8613-f08fbebd871f",
        "parentId" : "5646b63b-979a-4ab3-824f-97365190eed5",
        "authorId" : "223e67d6-1873-432a-9af9-f40b82a7eedd",
        "body" : "Probably. I reuse the same wording as in the initial error message. Feel free to open a new PR 😄 ",
        "createdAt" : "2018-06-04T16:54:38Z",
        "updatedAt" : "2018-06-04T16:54:38Z",
        "lastEditedBy" : "223e67d6-1873-432a-9af9-f40b82a7eedd",
        "tags" : [
        ]
      }
    ],
    "commit" : "949ea8fbf768c63e92a642eb07cbe1e1fa1df4cb",
    "line" : 37,
    "diffHunk" : "@@ -1,1 +1389,1393 @@        else \"\"\n\n      \"You have specified more parameter lists as defined in the method definition(s).\" + addendum\n    }\n"
  },
  {
    "id" : "75eba569-6c82-4b13-87a4-2eef69a1c5e1",
    "prId" : 3804,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/3804#pullrequestreview-88883454",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "63593b77-4b3c-44b1-af7e-3808c3acc201",
        "parentId" : null,
        "authorId" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "body" : "It's better to have this general reference at the end, and put more specific information before.",
        "createdAt" : "2018-01-15T14:36:26Z",
        "updatedAt" : "2018-01-15T14:36:34Z",
        "lastEditedBy" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "tags" : [
        ]
      },
      {
        "id" : "2f6e5d38-b8ed-4a80-807f-fa7ae6a6b5a2",
        "parentId" : "63593b77-4b3c-44b1-af7e-3808c3acc201",
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "This is part of the `missing parameter type` explaination. ",
        "createdAt" : "2018-01-15T16:56:22Z",
        "updatedAt" : "2018-01-15T16:56:22Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      },
      {
        "id" : "9d57731a-c903-48e2-b2a5-5330e26b31c3",
        "parentId" : "63593b77-4b3c-44b1-af7e-3808c3acc201",
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "It also follows the old format in scalac that users said was clearer.",
        "createdAt" : "2018-01-15T16:57:29Z",
        "updatedAt" : "2018-01-15T16:57:29Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      }
    ],
    "commit" : "a51091bd1c01525e79d64e544abc6004015e5e96",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +196,200 @@      i\"\"\"missing parameter type\n         |\n         |The argument types of an anonymous function must be fully known. (SLS 8.5)\n         |Expected type: $pt\n         |Missing type for parameter ${param.name}$ofFun\"\"\""
  },
  {
    "id" : "67a19703-0b12-48fa-a3ee-7a7cb93e3a5e",
    "prId" : 2914,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/2914#pullrequestreview-52185942",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9b15bd42-e59a-4bb0-a322-8c8e6e7dceea",
        "parentId" : null,
        "authorId" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "body" : "If this is only for cyclic references, could we do `case ex: CyclicReference` instead?",
        "createdAt" : "2017-07-25T18:47:21Z",
        "updatedAt" : "2017-07-26T07:54:00Z",
        "lastEditedBy" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "tags" : [
        ]
      },
      {
        "id" : "e216d63a-97a8-4fdc-bd22-f214a5876b20",
        "parentId" : "9b15bd42-e59a-4bb0-a322-8c8e6e7dceea",
        "authorId" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "body" : "I think we by default we should not throw any exception from printing. It detracts from the underlying cause.\r\n",
        "createdAt" : "2017-07-25T20:10:40Z",
        "updatedAt" : "2017-07-26T07:54:00Z",
        "lastEditedBy" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "tags" : [
        ]
      },
      {
        "id" : "d26822bf-67ba-4560-be09-adc25d7d2267",
        "parentId" : "9b15bd42-e59a-4bb0-a322-8c8e6e7dceea",
        "authorId" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "body" : "Sure, but we shouldn't be throwing any kind of exceptions, and silently catching them all might hide issues.",
        "createdAt" : "2017-07-25T20:24:16Z",
        "updatedAt" : "2017-07-26T07:54:00Z",
        "lastEditedBy" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "tags" : [
        ]
      }
    ],
    "commit" : "dd661bf2d18d30d2c4758b8b0821f068cdd065b0",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +717,721 @@        }\n      catch {\n        case NonFatal(ex) => fntpe.show\n      }\n"
  },
  {
    "id" : "d3c89098-d447-49cf-989b-df5c7115c48a",
    "prId" : 2823,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/2823#pullrequestreview-47594625",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "450ba713-a41c-4c50-91cf-6b14f8e16c78",
        "parentId" : null,
        "authorId" : "2dc29bea-17b2-4800-bf4f-843c62cca7de",
        "body" : ":+1:",
        "createdAt" : "2017-07-03T07:44:23Z",
        "updatedAt" : "2017-07-05T14:34:27Z",
        "lastEditedBy" : "2dc29bea-17b2-4800-bf4f-843c62cca7de",
        "tags" : [
        ]
      }
    ],
    "commit" : "16be5c5c8d179a5a972996aecb93e7d3b823b7fd",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +1331,1335 @@\n  case class MethodDoesNotTakeParameters(tree: tpd.Tree, methPartType: Types.Type)\n  (err: typer.ErrorReporting.Errors)(implicit ctx: Context)\n  extends Message(MethodDoesNotTakeParametersId) {\n    private val more = tree match {"
  },
  {
    "id" : "1304d215-9a98-4ec4-9d9f-d4c014feff26",
    "prId" : 2823,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/2823#pullrequestreview-47659269",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f382123e-e415-4a38-bfd6-720b41fa303f",
        "parentId" : null,
        "authorId" : "2dc29bea-17b2-4800-bf4f-843c62cca7de",
        "body" : "Why make the name private? If you're an IDE, wouldn't you want to be able to extract the name from the message?",
        "createdAt" : "2017-07-03T07:45:59Z",
        "updatedAt" : "2017-07-05T14:34:27Z",
        "lastEditedBy" : "2dc29bea-17b2-4800-bf4f-843c62cca7de",
        "tags" : [
        ]
      },
      {
        "id" : "3f0d09fc-4279-4bf8-8110-aee6ce170e0a",
        "parentId" : "f382123e-e415-4a38-bfd6-720b41fa303f",
        "authorId" : "4e011f19-aaf2-4491-847b-8175b7785d80",
        "body" : "My thought was to prevent accidental use that might happen by passing in a string directly; I may not understand all the implications, but even with private it seems I can still extract the string in `ErrorMessagesTests.scala`:\r\n\r\n```\r\n      val OverloadedOrRecursiveMethodNeedsResultType(treeName) :: Nil = messages\r\n      assertEquals(\"i\", treeName)\r\n```\r\nSeems to work\r\n\r\n",
        "createdAt" : "2017-07-03T12:04:40Z",
        "updatedAt" : "2017-07-05T14:34:27Z",
        "lastEditedBy" : "4e011f19-aaf2-4491-847b-8175b7785d80",
        "tags" : [
        ]
      },
      {
        "id" : "03311b34-04f7-4440-b32d-5100a315f4de",
        "parentId" : "f382123e-e415-4a38-bfd6-720b41fa303f",
        "authorId" : "2dc29bea-17b2-4800-bf4f-843c62cca7de",
        "body" : "Hmm, I did correct this before having coffee. Ignore this comment, it's just the constructor marked private, not the members ☕️ ",
        "createdAt" : "2017-07-03T13:05:25Z",
        "updatedAt" : "2017-07-05T14:34:27Z",
        "lastEditedBy" : "2dc29bea-17b2-4800-bf4f-843c62cca7de",
        "tags" : [
        ]
      }
    ],
    "commit" : "16be5c5c8d179a5a972996aecb93e7d3b823b7fd",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +1210,1214 @@  }\n\n  case class OverloadedOrRecursiveMethodNeedsResultType private (termName: String)(implicit ctx: Context)\n  extends Message(OverloadedOrRecursiveMethodNeedsResultTypeID) {\n    val kind = \"Syntax\""
  },
  {
    "id" : "3fa37e6f-ce3d-49db-9d37-d9346017819c",
    "prId" : 2747,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/2747#pullrequestreview-44245603",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ee52fcc7-3674-496f-9c0e-000a348984da",
        "parentId" : null,
        "authorId" : "2dc29bea-17b2-4800-bf4f-843c62cca7de",
        "body" : "We could also possibly try to identify which flags have been applied to what and make a suggestion. That would be cool 😄 ",
        "createdAt" : "2017-06-14T06:29:04Z",
        "updatedAt" : "2017-06-14T20:16:31Z",
        "lastEditedBy" : "2dc29bea-17b2-4800-bf4f-843c62cca7de",
        "tags" : [
        ]
      },
      {
        "id" : "4a7cd852-8873-4099-a9f7-f7614186c2ba",
        "parentId" : "ee52fcc7-3674-496f-9c0e-000a348984da",
        "authorId" : "b6f7db4c-d540-4698-818c-6e99e362c07e",
        "body" : "@felixmulder not quite sure how to identify all modifiers for traits,methods,variables. Should this not be handled instead by the next error,\r\n 1693         syntaxError(s\"illegal modifier combination: ${mods.flags} and $flag\")\r\n",
        "createdAt" : "2017-06-14T18:04:42Z",
        "updatedAt" : "2017-06-14T20:16:31Z",
        "lastEditedBy" : "b6f7db4c-d540-4698-818c-6e99e362c07e",
        "tags" : [
        ]
      },
      {
        "id" : "c66f7233-0bc2-455f-bb5b-537eae6410cc",
        "parentId" : "ee52fcc7-3674-496f-9c0e-000a348984da",
        "authorId" : "2dc29bea-17b2-4800-bf4f-843c62cca7de",
        "body" : "Hmm, I think these two should be harmonized. I.e. the same error message for both. You could make `sort: Option[String]` to discern between the `case _` and the rest of them.\r\n\r\nOtherwise this LGTM now :)",
        "createdAt" : "2017-06-15T08:41:46Z",
        "updatedAt" : "2017-06-15T08:41:46Z",
        "lastEditedBy" : "2dc29bea-17b2-4800-bf4f-843c62cca7de",
        "tags" : [
        ]
      },
      {
        "id" : "f87e6321-e296-42e7-8436-36d8f5258656",
        "parentId" : "ee52fcc7-3674-496f-9c0e-000a348984da",
        "authorId" : "b6f7db4c-d540-4698-818c-6e99e362c07e",
        "body" : "Cool, I can take that one next. Can we agree that it will be handled with the 1693 consolidation refactor and get this one through? :) ",
        "createdAt" : "2017-06-15T08:59:39Z",
        "updatedAt" : "2017-06-15T08:59:40Z",
        "lastEditedBy" : "b6f7db4c-d540-4698-818c-6e99e362c07e",
        "tags" : [
        ]
      },
      {
        "id" : "5ca56777-b287-4950-a463-f35155061268",
        "parentId" : "ee52fcc7-3674-496f-9c0e-000a348984da",
        "authorId" : "2dc29bea-17b2-4800-bf4f-843c62cca7de",
        "body" : "Sure - that's fine by me - assigning you in #1589",
        "createdAt" : "2017-06-15T09:14:33Z",
        "updatedAt" : "2017-06-15T09:14:33Z",
        "lastEditedBy" : "2dc29bea-17b2-4800-bf4f-843c62cca7de",
        "tags" : [
        ]
      }
    ],
    "commit" : "b4d2163f45e16df40562bf5136bd94fb579eae28",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +1628,1632 @@         |Consider the following example:\n         |$code\n         |In this instance, the modifier 'sealed' is not applicable to the item type 'def' (method)\n        \"\"\"\n    }"
  },
  {
    "id" : "2abdf3a8-10d5-4675-87ba-674b65b18114",
    "prId" : 2485,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/2485#pullrequestreview-39330263",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "43e2757a-1d6e-4f02-bb29-476a2b858682",
        "parentId" : null,
        "authorId" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "body" : "I might be good to also mention that classes extending `AnyVal` can extend `universal traits`.",
        "createdAt" : "2017-05-20T07:47:49Z",
        "updatedAt" : "2017-05-20T13:27:59Z",
        "lastEditedBy" : "a7e5fcc8-eade-485d-96d2-94106dd74f83",
        "tags" : [
        ]
      }
    ],
    "commit" : "502e7e7080f49e18cde67a0d4243cbcf10440c7f",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +1473,1477 @@    val explanation =\n      hl\"\"\"Only classes (not traits) are allowed to extend ${\"AnyVal\"}, but traits may extend\n          |${\"Any\"} to become ${Green(\"\\\"universal traits\\\"\")} which may only have ${\"def\"} members.\n          |Universal traits can be mixed into classes that extend ${\"AnyVal\"}.\n          |\"\"\""
  },
  {
    "id" : "385ab480-67b4-4414-9734-07a56b54de24",
    "prId" : 2484,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/2484#pullrequestreview-39329293",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4651cbe4-24b7-4a95-b4c9-ed3b3b9cba96",
        "parentId" : null,
        "authorId" : "2dc29bea-17b2-4800-bf4f-843c62cca7de",
        "body" : "Is there something we can say here in `explanation`? I know you wanted to just get everything over to the new format first - but can't help myself 😆 ",
        "createdAt" : "2017-05-19T21:13:00Z",
        "updatedAt" : "2017-05-19T21:43:21Z",
        "lastEditedBy" : "2dc29bea-17b2-4800-bf4f-843c62cca7de",
        "tags" : [
        ]
      },
      {
        "id" : "10cfd4c9-87af-4811-b80f-48c44eb0fbc8",
        "parentId" : "4651cbe4-24b7-4a95-b4c9-ed3b3b9cba96",
        "authorId" : "f421cd57-a5f8-43f1-ba16-5141c1a2eba1",
        "body" : "\"Traits do not support extending AnyVal\" ?\r\n\"AnyVal instances must be representable in a single value, which excludes usage of traits\"?",
        "createdAt" : "2017-05-19T21:41:59Z",
        "updatedAt" : "2017-05-19T21:43:21Z",
        "lastEditedBy" : "f421cd57-a5f8-43f1-ba16-5141c1a2eba1",
        "tags" : [
        ]
      },
      {
        "id" : "8dc05f37-8571-4d8e-a690-c9dee30f89fb",
        "parentId" : "4651cbe4-24b7-4a95-b4c9-ed3b3b9cba96",
        "authorId" : "2dc29bea-17b2-4800-bf4f-843c62cca7de",
        "body" : "I leave it up to your discretion :)",
        "createdAt" : "2017-05-19T21:43:56Z",
        "updatedAt" : "2017-05-19T21:43:56Z",
        "lastEditedBy" : "2dc29bea-17b2-4800-bf4f-843c62cca7de",
        "tags" : [
        ]
      },
      {
        "id" : "bfa84273-cbfe-46a9-a694-33f0c2e19459",
        "parentId" : "4651cbe4-24b7-4a95-b4c9-ed3b3b9cba96",
        "authorId" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "body" : "If someone tries to make a trait extending AnyVal, they should be told about universal traits (traits extending Any): http://docs.scala-lang.org/overviews/core/value-classes.html",
        "createdAt" : "2017-05-19T23:42:11Z",
        "updatedAt" : "2017-05-19T23:42:11Z",
        "lastEditedBy" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "tags" : [
        ]
      },
      {
        "id" : "69459b3a-08fa-4c01-a75e-ca05837d5f2e",
        "parentId" : "4651cbe4-24b7-4a95-b4c9-ed3b3b9cba96",
        "authorId" : "f421cd57-a5f8-43f1-ba16-5141c1a2eba1",
        "body" : "This leads to the question how we'd support adding relevant links to `Message`s. Links to the lang specs will be helpful in many cases, Stackoverflow might be good, too.\r\nBut links do not always age well.",
        "createdAt" : "2017-05-20T06:31:36Z",
        "updatedAt" : "2017-05-20T06:31:36Z",
        "lastEditedBy" : "f421cd57-a5f8-43f1-ba16-5141c1a2eba1",
        "tags" : [
        ]
      }
    ],
    "commit" : "74eb841e3845fcf44ba4b21f9b1fd8e0b3ea9011",
    "line" : 130,
    "diffHunk" : "@@ -1,1 +1471,1475 @@    val msg = hl\"\"\"$sym cannot extend ${\"AnyVal\"}\"\"\"\n    val kind = \"Syntax\"\n    val explanation = \"\"\n  }\n"
  },
  {
    "id" : "f01eb2b0-5d0c-4488-8f39-981e0713e497",
    "prId" : 2362,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/2362#pullrequestreview-36706384",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "efe0195c-057e-4e58-9a3d-877442227c66",
        "parentId" : null,
        "authorId" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "body" : "We need better integration of formatters. It seems non-sensical that we either get explanations of duplicated values (in ex) or syntax highlighting (in hl) but not both. That's just a side remark, intended for a future PR.\r\n",
        "createdAt" : "2017-05-07T21:10:14Z",
        "updatedAt" : "2017-05-08T08:47:07Z",
        "lastEditedBy" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "tags" : [
        ]
      },
      {
        "id" : "97ac2382-d5ea-4753-ae3c-8275f5f071c3",
        "parentId" : "efe0195c-057e-4e58-9a3d-877442227c66",
        "authorId" : "f421cd57-a5f8-43f1-ba16-5141c1a2eba1",
        "body" : "I agree, the current formatters don't compose well. @felixmulder and I discussed the need automated line wrapping as well.",
        "createdAt" : "2017-05-08T07:26:56Z",
        "updatedAt" : "2017-05-08T08:47:07Z",
        "lastEditedBy" : "f421cd57-a5f8-43f1-ba16-5141c1a2eba1",
        "tags" : [
        ]
      }
    ],
    "commit" : "5319eee927d45d0e87c083a97ac0a483ccc2bb26",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +1244,1248 @@\n    val explanation =\n      hl\"\"\"|The compiler can't decide which of the possible choices you\n           |are referencing with $name.\n           |Note:"
  },
  {
    "id" : "a459d403-7d99-4163-bff1-d2668b8fdb8a",
    "prId" : 1842,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/1842#pullrequestreview-14033855",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8e2f7d3f-b454-411a-abf1-da782f232e8f",
        "parentId" : null,
        "authorId" : "2dc29bea-17b2-4800-bf4f-843c62cca7de",
        "body" : "This line shouldn't need to be added IIRC.",
        "createdAt" : "2016-12-21T15:06:15Z",
        "updatedAt" : "2016-12-21T19:36:48Z",
        "lastEditedBy" : "2dc29bea-17b2-4800-bf4f-843c62cca7de",
        "tags" : [
        ]
      },
      {
        "id" : "9d24a8cc-b379-46b1-b139-70943a1f7f65",
        "parentId" : "8e2f7d3f-b454-411a-abf1-da782f232e8f",
        "authorId" : "66f5a572-2acf-4147-b55a-e89c6c122a2a",
        "body" : "These imports that were removed were unused, that's why I removed them. `util.SourcePosition` still needs to be included as it is in use in the MessageContainers.\r\n\r\nI can put the imports back in if that's what you want",
        "createdAt" : "2016-12-21T16:15:10Z",
        "updatedAt" : "2016-12-21T19:36:48Z",
        "lastEditedBy" : "66f5a572-2acf-4147-b55a-e89c6c122a2a",
        "tags" : [
        ]
      },
      {
        "id" : "d5115d59-e534-4051-8489-aca3e799e0e9",
        "parentId" : "8e2f7d3f-b454-411a-abf1-da782f232e8f",
        "authorId" : "2dc29bea-17b2-4800-bf4f-843c62cca7de",
        "body" : "Nah, it's fine boyscout principle right? :smiley:. The one below however didn't need to change right?",
        "createdAt" : "2016-12-21T18:30:47Z",
        "updatedAt" : "2016-12-21T19:36:48Z",
        "lastEditedBy" : "2dc29bea-17b2-4800-bf4f-843c62cca7de",
        "tags" : [
        ]
      },
      {
        "id" : "38fac2e9-8918-4935-b493-3495c985555f",
        "parentId" : "8e2f7d3f-b454-411a-abf1-da782f232e8f",
        "authorId" : "66f5a572-2acf-4147-b55a-e89c6c122a2a",
        "body" : "That was my idea in cleaning up the used imports! :smile:\r\n\r\nNo the one below shouldn't have changed, I've fixed that. That might have been the IDE trying to tidy up for me!",
        "createdAt" : "2016-12-21T19:33:34Z",
        "updatedAt" : "2016-12-21T19:36:48Z",
        "lastEditedBy" : "66f5a572-2acf-4147-b55a-e89c6c122a2a",
        "tags" : [
        ]
      }
    ],
    "commit" : "e3da9482fc8323337131661611dde76e52121945",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +6,10 @@import dotc.core._\nimport Contexts.Context, Decorators._, Symbols._, Names._, NameOps._, Types._\nimport util.SourcePosition\nimport config.Settings.Setting\nimport interfaces.Diagnostic.{ERROR, WARNING, INFO}"
  },
  {
    "id" : "be470cff-4f65-459a-9e57-d8c3dd0d6957",
    "prId" : 1842,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/1842#pullrequestreview-13981794",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a3728bae-aebc-4b43-80d4-c737a5c3d94b",
        "parentId" : null,
        "authorId" : "2dc29bea-17b2-4800-bf4f-843c62cca7de",
        "body" : "Throughout this explanation, there's no need for there to be a padding of whitespace after the `|`-signs. None of the other messages should be doing this.",
        "createdAt" : "2016-12-21T15:08:09Z",
        "updatedAt" : "2016-12-21T19:36:48Z",
        "lastEditedBy" : "2dc29bea-17b2-4800-bf4f-843c62cca7de",
        "tags" : [
        ]
      }
    ],
    "commit" : "e3da9482fc8323337131661611dde76e52121945",
    "line" : null,
    "diffHunk" : "@@ -1,1 +921,925 @@           |\n           |${\"List[_]\"}\n           |\"\"\"\n  }\n"
  }
]