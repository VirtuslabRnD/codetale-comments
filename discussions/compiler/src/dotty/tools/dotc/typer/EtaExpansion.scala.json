[
  {
    "id" : "d7f8c622-6fa0-4426-89c3-8ee34844c13d",
    "prId" : 4428,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/4428#pullrequestreview-123758182",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4bebac34-7add-45c7-9b66-3817c9207331",
        "parentId" : null,
        "authorId" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "body" : "This is very likely to break things. Dotty does not have global type inference, once you create a val, its type cannot be further constrained. (In fact, I remember adding the fullyDefinedType call here to fix a problem, git blame should tell you more)",
        "createdAt" : "2018-05-01T21:35:36Z",
        "updatedAt" : "2018-05-28T13:14:48Z",
        "lastEditedBy" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "tags" : [
        ]
      },
      {
        "id" : "f7d104ed-e198-4594-a5a0-62187670ad3d",
        "parentId" : "4bebac34-7add-45c7-9b66-3817c9207331",
        "authorId" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "body" : "After looking into it this _might_ be OK because we're more careful about how we deal with signatures containing type variables in recent versions of Dotty, I've found one related issue for which I've opened a PR: https://github.com/lampepfl/dotty/pull/4593",
        "createdAt" : "2018-05-28T14:48:29Z",
        "updatedAt" : "2018-05-28T14:48:29Z",
        "lastEditedBy" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "tags" : [
        ]
      },
      {
        "id" : "fec6ba70-f670-44e6-b30a-4a569ef5e7d3",
        "parentId" : "4bebac34-7add-45c7-9b66-3817c9207331",
        "authorId" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "body" : "Thanks a lot for looking into it @smarter !",
        "createdAt" : "2018-05-28T14:52:29Z",
        "updatedAt" : "2018-05-28T14:52:30Z",
        "lastEditedBy" : "bc4c7970-6d84-475b-b408-2ed0f22a7bf3",
        "tags" : [
        ]
      }
    ],
    "commit" : "abf792452c4d4e3324c5a12eb699e310e7efb93b",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +47,51 @@    else {\n      val name = UniqueName.fresh(prefix)\n      // don't instantiate here, as the type params could be further constrained, see tests/pos/pickleinf.scala\n      var liftedType = expr.tpe.widen\n      if (liftedFlags.is(Method)) liftedType = ExprType(liftedType)"
  }
]