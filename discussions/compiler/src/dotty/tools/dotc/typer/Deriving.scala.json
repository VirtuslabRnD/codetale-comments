[
  {
    "id" : "0fd0a979-730d-4d51-8b07-b8c7fb9a6170",
    "prId" : 5839,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/5839#pullrequestreview-200584154",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "46d4b705-c757-44fc-ad7f-748e6e240f86",
        "parentId" : null,
        "authorId" : "6d71bb21-e402-4464-b2b1-8bdd8e068461",
        "body" : "`docs/reference/derivation.md` should be update to reflect that change. I think it would make sense to keep this under specified and say that `Generic` instance are only guaranteed to be cached when writing `derives Generic`.",
        "createdAt" : "2019-02-06T13:52:06Z",
        "updatedAt" : "2019-02-07T09:35:37Z",
        "lastEditedBy" : "6d71bb21-e402-4464-b2b1-8bdd8e068461",
        "tags" : [
        ]
      }
    ],
    "commit" : "654909f26c4c655d2a1ac68d33b281b813e2674a",
    "line" : 96,
    "diffHunk" : "@@ -1,1 +247,251 @@    }\n\n    /** If any of the instances has a companion with a `derived` member\n     *  that refers to `scala.reflect.Generic`, add an implied instance\n     *  of `Generic`. Note: this is just an optimization to avoid possible"
  },
  {
    "id" : "45b8278c-b699-435d-b5a8-006aa7c4636d",
    "prId" : 5839,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/5839#pullrequestreview-201621529",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1d79b7e3-d989-4bea-88e1-f14e14552efb",
        "parentId" : null,
        "authorId" : "6d71bb21-e402-4464-b2b1-8bdd8e068461",
        "body" : "What happens if this generates two identical names?",
        "createdAt" : "2019-02-06T14:35:21Z",
        "updatedAt" : "2019-02-07T09:35:37Z",
        "lastEditedBy" : "6d71bb21-e402-4464-b2b1-8bdd8e068461",
        "tags" : [
        ]
      },
      {
        "id" : "70712634-2ee1-4623-8fb0-31a06b0586a3",
        "parentId" : "1d79b7e3-d989-4bea-88e1-f14e14552efb",
        "authorId" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "body" : "How could that happen? Both parameter lists use disjoint names.",
        "createdAt" : "2019-02-07T08:09:15Z",
        "updatedAt" : "2019-02-07T09:35:37Z",
        "lastEditedBy" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "tags" : [
        ]
      },
      {
        "id" : "224a1a3a-0cd6-4cff-b25f-d931ba8fcb23",
        "parentId" : "1d79b7e3-d989-4bea-88e1-f14e14552efb",
        "authorId" : "6d71bb21-e402-4464-b2b1-8bdd8e068461",
        "body" : "- `class Foo[A_B, A]`\r\n- `class Bar[_B_C, _C]`\r\n\r\nyields\r\n\r\n- `A_B_B_C`\r\n- `A_B_C`\r\n- `A_B_C`\r\n- `A_C`",
        "createdAt" : "2019-02-07T08:23:05Z",
        "updatedAt" : "2019-02-07T09:35:37Z",
        "lastEditedBy" : "6d71bb21-e402-4464-b2b1-8bdd8e068461",
        "tags" : [
        ]
      },
      {
        "id" : "b213ce01-3d36-405a-80e7-51548363bc4b",
        "parentId" : "1d79b7e3-d989-4bea-88e1-f14e14552efb",
        "authorId" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "body" : "Good point. We should use a reserved separator then. Maybe `_$_`?\r\n",
        "createdAt" : "2019-02-08T14:58:55Z",
        "updatedAt" : "2019-02-08T14:58:55Z",
        "lastEditedBy" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "tags" : [
        ]
      },
      {
        "id" : "92b433fd-31e9-462c-916d-1e387cd7bd7e",
        "parentId" : "1d79b7e3-d989-4bea-88e1-f14e14552efb",
        "authorId" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "body" : "I'll do the change in the follow-up PR #5843",
        "createdAt" : "2019-02-08T15:03:29Z",
        "updatedAt" : "2019-02-08T15:03:29Z",
        "lastEditedBy" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "tags" : [
        ]
      }
    ],
    "commit" : "654909f26c4c655d2a1ac68d33b281b813e2674a",
    "line" : 52,
    "diffHunk" : "@@ -1,1 +194,198 @@          else if (nparams == 1) tparam :: Nil\n          else typeClass.typeParams.map(tcparam =>\n            tparam.copy(name = s\"${tparam.name}_${tcparam.name}\".toTypeName)\n              .asInstanceOf[TypeSymbol])\n        }"
  }
]