[
  {
    "id" : "1d0c88c8-0ae8-4d49-b592-d6a6984fdca3",
    "prId" : 9181,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/9181#pullrequestreview-462608311",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "340d8cf8-2e2a-49e8-a65e-21176a72d4af",
        "parentId" : null,
        "authorId" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "body" : "The special handling of lazy bitmap fields should be explained here (maybe with a reference to the other comment in BCodeSkelBuilder)",
        "createdAt" : "2020-08-06T15:08:45Z",
        "updatedAt" : "2020-08-06T20:20:36Z",
        "lastEditedBy" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "tags" : [
        ]
      }
    ],
    "commit" : "745d53c78e040aea398c38754bcc8ff3ad2df91d",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +141,145 @@       */\n      def isStaticModuleField(using Context): Boolean =\n        sym.owner.isStaticModuleClass && sym.isField && !sym.name.is(LazyBitMapName)\n\n      def isStaticMember(using Context): Boolean = (sym ne NoSymbol) &&"
  },
  {
    "id" : "b4f7ce10-6b17-48f0-a935-36cf29223ab4",
    "prId" : 8429,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/8429#pullrequestreview-368250884",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f50b0ffd-28c3-4ecc-9186-f26091d86797",
        "parentId" : null,
        "authorId" : "128563de-a925-4397-af34-450c7978a8d2",
        "body" : "I don't think it should be a hard error, or at least it looks like this is fine in java:\r\n\r\nThe problem is that dotty is giving `serialVersionUID` private access\r\n\r\n```java\r\n// Foo.java\r\npublic interface Foo {\r\n  long serialVersionUID = 1L;\r\n}\r\n```\r\n```\r\n$ javap Foo\r\nCompiled from \"Foo.java\"\r\npublic interface Foo {\r\n  public static final long serialVersionUID;\r\n}\r\n```\r\n",
        "createdAt" : "2020-03-03T19:06:06Z",
        "updatedAt" : "2020-03-03T19:13:35Z",
        "lastEditedBy" : "128563de-a925-4397-af34-450c7978a8d2",
        "tags" : [
        ]
      },
      {
        "id" : "e318f604-fd06-488e-9667-c9a005396940",
        "parentId" : "f50b0ffd-28c3-4ecc-9186-f26091d86797",
        "authorId" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "body" : "Fair enough, but it's still not something that means anything, see https://docs.oracle.com/en/java/javase/13/docs/api/java.base/java/io/Serializable.html. serialVersionUID is a thing you can use in a class that you serialize, but it doesn't do anything on an interface.",
        "createdAt" : "2020-03-03T19:10:23Z",
        "updatedAt" : "2020-03-03T19:13:35Z",
        "lastEditedBy" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "tags" : [
        ]
      },
      {
        "id" : "ef5db735-46df-44cf-84a8-259253524ef8",
        "parentId" : "f50b0ffd-28c3-4ecc-9186-f26091d86797",
        "authorId" : "128563de-a925-4397-af34-450c7978a8d2",
        "body" : "although if the contract of the annotation is a private field then I will approve",
        "createdAt" : "2020-03-03T19:10:35Z",
        "updatedAt" : "2020-03-03T19:13:35Z",
        "lastEditedBy" : "128563de-a925-4397-af34-450c7978a8d2",
        "tags" : [
        ]
      },
      {
        "id" : "cd7ed9d2-567d-4554-a068-a9276c14042a",
        "parentId" : "f50b0ffd-28c3-4ecc-9186-f26091d86797",
        "authorId" : "128563de-a925-4397-af34-450c7978a8d2",
        "body" : "Ah yeah i see only useful if it is not inherited",
        "createdAt" : "2020-03-03T19:13:32Z",
        "updatedAt" : "2020-03-03T19:13:35Z",
        "lastEditedBy" : "128563de-a925-4397-af34-450c7978a8d2",
        "tags" : [
        ]
      }
    ],
    "commit" : "cd5bf8386749d2a7c9aaaad97c3ffd9e4fc8f74f",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +798,802 @@      sym.getAnnotation(defn.SerialVersionUIDAnnot).flatMap { annot =>\n        if (sym.is(Flags.Trait)) {\n          ctx.error(\"@SerialVersionUID does nothing on a trait\", annot.tree.sourcePos)\n          None\n        } else {"
  },
  {
    "id" : "9300a651-0947-4840-9298-fe7ee63627ed",
    "prId" : 4926,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/4926#pullrequestreview-145379043",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "99e67c0e-4b58-4bb1-bc02-314ef515c766",
        "parentId" : null,
        "authorId" : "348fab8e-49e2-442e-884d-850c7f41fdde",
        "body" : "Itâ€™s emitted, one m ",
        "createdAt" : "2018-08-10T19:57:28Z",
        "updatedAt" : "2018-08-10T20:01:06Z",
        "lastEditedBy" : "348fab8e-49e2-442e-884d-850c7f41fdde",
        "tags" : [
        ]
      }
    ],
    "commit" : "fd2b18012b797f6122376d6e41046cc252912540",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +627,631 @@    def symbol: Symbol = a.tree.symbol\n\n    def args: List[Tree] = List.empty // those arguments to scala-defined annotations. they are never emmitted\n  }\n"
  },
  {
    "id" : "788a5fab-3b07-4f52-927c-3db2f555afbd",
    "prId" : 3925,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/3925#pullrequestreview-92594629",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4d459d22-137c-4e9e-8bb7-7819c68ee6e3",
        "parentId" : null,
        "authorId" : "223e67d6-1873-432a-9af9-f40b82a7eedd",
        "body" : "I could not get rid of the `Option` here since the backend expects this signature",
        "createdAt" : "2018-01-30T15:14:09Z",
        "updatedAt" : "2018-01-30T16:43:28Z",
        "lastEditedBy" : "223e67d6-1873-432a-9af9-f40b82a7eedd",
        "tags" : [
        ]
      }
    ],
    "commit" : "2d710304a8f6cc18d3f8b145f8d546bbec3adc9c",
    "line" : 1,
    "diffHunk" : "@@ -1,1 +442,446 @@  private val desugared = new java.util.IdentityHashMap[Type, tpd.Select]\n\n  def desugarIdent(i: Ident): Option[tpd.Select] = {\n    var found = desugared.get(i.tpe)\n    if (found == null) {"
  },
  {
    "id" : "63e7a079-862f-4dd4-b5ed-19c539419374",
    "prId" : 2322,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/2322#pullrequestreview-35278241",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8e331c69-605a-484e-a062-f2128fabb636",
        "parentId" : null,
        "authorId" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "body" : "This TODO is no longer necessary.",
        "createdAt" : "2017-04-28T05:32:51Z",
        "updatedAt" : "2017-04-28T07:54:51Z",
        "lastEditedBy" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "tags" : [
        ]
      }
    ],
    "commit" : "c3cc84fce7112c255d391bd42ad1cd2b2581e32c",
    "line" : 125,
    "diffHunk" : "@@ -1,1 +549,553 @@    def simpleName: Name = sym.name\n    def javaSimpleName: String = toDenot(sym).name.mangledString // addModuleSuffix(simpleName.dropLocal)\n    def javaBinaryName: String = javaClassName.replace('.', '/') // TODO: can we make this a string? addModuleSuffix(fullNameInternal('/'))\n    def javaClassName: String = toDenot(sym).fullName.mangledString // addModuleSuffix(fullNameInternal('.')).toString\n    def name: Name = sym.name"
  }
]