[
  {
    "id" : "87d17387-18ee-4db4-8af1-8fe1a543595d",
    "prId" : 6304,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/6304#pullrequestreview-232175680",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ce0dfc5e-93c9-4e67-b64c-07c8d6eb3ced",
        "parentId" : null,
        "authorId" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "body" : "Is this correct with respect to name-mangling ? More tests please :).",
        "createdAt" : "2019-04-30T12:19:23Z",
        "updatedAt" : "2019-05-03T15:35:39Z",
        "lastEditedBy" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "tags" : [
        ]
      },
      {
        "id" : "5cdb53a8-bdac-48bb-a839-65321c32567d",
        "parentId" : "ce0dfc5e-93c9-4e67-b64c-07c8d6eb3ced",
        "authorId" : "5a9cd756-9120-4d5e-ac88-e9c636084f0e",
        "body" : "More tests will come from upstream Scala.js, notably coming from https://github.com/scala-js/scala-js/tree/v1.0.0-M7/test-suite/js/src/test/scala/org/scalajs/testsuite/junit, once #6365 is merged and I get to enable those tests. See for example `JUnitNamesTest` for the name-mangling aspect.",
        "createdAt" : "2019-04-30T14:03:48Z",
        "updatedAt" : "2019-05-03T15:35:40Z",
        "lastEditedBy" : "5a9cd756-9120-4d5e-ac88-e9c636084f0e",
        "tags" : [
        ]
      }
    ],
    "commit" : "e5bd1fefd2070ee3cfb6ca616987619bbbee9457",
    "line" : 225,
    "diffHunk" : "@@ -1,1 +223,227 @@    DefDef(sym, {\n      val metadata = for (test <- tests) yield {\n        val name = Literal(Constant(test.name.toString))\n        val ignored = Literal(Constant(test.hasAnnotation(junitdefn.IgnoreAnnotClass)))\n        // TODO Handle @Test annotations with arguments"
  },
  {
    "id" : "afcb3943-b70d-4530-a47b-7ad95fa3a908",
    "prId" : 6304,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/6304#pullrequestreview-232175680",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1e6dfd5a-bf45-4568-a754-94e614deacef",
        "parentId" : null,
        "authorId" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "body" : "Using .decls means you'll miss inherited members, is this OK here ? Also something that should be tested I think :).",
        "createdAt" : "2019-04-30T12:31:37Z",
        "updatedAt" : "2019-05-03T15:35:39Z",
        "lastEditedBy" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "tags" : [
        ]
      },
      {
        "id" : "6b6d389a-a881-40ae-93ff-620464f01ec2",
        "parentId" : "1e6dfd5a-bf45-4568-a754-94e614deacef",
        "authorId" : "5a9cd756-9120-4d5e-ac88-e9c636084f0e",
        "body" : "See https://github.com/scala-js/scala-js/blob/v1.0.0-M7/test-suite/js/src/test/scala/org/scalajs/testsuite/junit/JUnitSubClassTest.scala for tests of inherited members. Again, they will come after #6365.",
        "createdAt" : "2019-04-30T14:06:45Z",
        "updatedAt" : "2019-05-03T15:35:40Z",
        "lastEditedBy" : "5a9cd756-9120-4d5e-ac88-e9c636084f0e",
        "tags" : [
        ]
      }
    ],
    "commit" : "e5bd1fefd2070ee3cfb6ca616987619bbbee9457",
    "line" : 297,
    "diffHunk" : "@@ -1,1 +295,299 @@\n  private def annotatedMethods(owner: ClassSymbol, annot: Symbol)(implicit ctx: Context): List[Symbol] =\n    owner.info.decls.filter(m => m.is(Method) && m.hasAnnotation(annot))\n}\n"
  }
]