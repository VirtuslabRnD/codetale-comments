[
  {
    "id" : "99a9ccb8-78ec-427d-b5c3-77b84660b5dd",
    "prId" : 5252,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/5252#pullrequestreview-165986984",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2b2291de-8d7a-47aa-abfe-04b858256f8f",
        "parentId" : null,
        "authorId" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "body" : "Does this work on Windows or do we need File.pathSeparator instead of / here too ?",
        "createdAt" : "2018-10-17T11:30:05Z",
        "updatedAt" : "2018-10-17T11:30:05Z",
        "lastEditedBy" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "tags" : [
        ]
      },
      {
        "id" : "f705818a-9666-4c7e-b374-8698fd6d97d8",
        "parentId" : "2b2291de-8d7a-47aa-abfe-04b858256f8f",
        "authorId" : "223e67d6-1873-432a-9af9-f40b82a7eedd",
        "body" : "This goes through `java.nio.file.Paths`. I believe it handles path separator correctly",
        "createdAt" : "2018-10-17T11:32:02Z",
        "updatedAt" : "2018-10-17T11:32:02Z",
        "lastEditedBy" : "223e67d6-1873-432a-9af9-f40b82a7eedd",
        "tags" : [
        ]
      },
      {
        "id" : "a8c749eb-6ffa-42be-9cc6-fb16bcf45df6",
        "parentId" : "2b2291de-8d7a-47aa-abfe-04b858256f8f",
        "authorId" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "body" : "Ok. Note for later: To be perfect we probably shouldn't write files directly in the home directory, on Linux you should use $HOME/.config/nameofyourapplication/ and on Windows there's some other folder, but this is hard to handle correctly. There's https://github.com/soc/directories-jvm that is designed to do that for you, but it doesn't seem to have a stable ABI so we'd have to embed it in our sources.",
        "createdAt" : "2018-10-17T11:35:00Z",
        "updatedAt" : "2018-10-17T11:35:00Z",
        "lastEditedBy" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "tags" : [
        ]
      },
      {
        "id" : "465fcc28-da70-4ddd-bc2e-a34ac8c0806a",
        "parentId" : "2b2291de-8d7a-47aa-abfe-04b858256f8f",
        "authorId" : "2c02aea2-3019-42f4-9678-8a2da637c660",
        "body" : "I think `$HOME/.dotty_history` is the right place on Linux. A history file isn't a configuration file, so it doesn't belong under `$HOME/.config`. Also cp. `$HOME/.scala_history`, `$HOME/.histfile`, `$HOME/.bash_history` and many, many more ...\r\n\r\nFor configuration files on Linux, if you're going to bother with the [XDG spec](https://specifications.freedesktop.org/basedir-spec/basedir-spec-latest.html), you should first check if `$XDG_CONFIG_HOME` is set and only default to `$HOME/.config` if it isn't. But bear in mind that standards schmandards and lots of configuration stuff still quite happily lives in dotfiles directly in `$HOME`.",
        "createdAt" : "2018-10-18T08:52:35Z",
        "updatedAt" : "2018-10-18T08:52:36Z",
        "lastEditedBy" : "2c02aea2-3019-42f4-9678-8a2da637c660",
        "tags" : [
        ]
      }
    ],
    "commit" : "9aef060e3b0869edb0b9b477097a5cb575bf92d2",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +56,60 @@      .highlighter(new Highlighter)\n      .parser(new Parser)\n      .variable(HISTORY_FILE, s\"$userHome/.dotty_history\") // Save history to file\n      .variable(SECONDARY_PROMPT_PATTERN, \"%M\") // A short word explaining what is \"missing\",\n                                                // this is supplied from the EOFError.getMissing() method"
  },
  {
    "id" : "240ce03c-238f-4d49-b649-932bd8de73af",
    "prId" : 4680,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/4680#pullrequestreview-132840261",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dddbddef-2766-4cd8-96c8-38dfda0287d4",
        "parentId" : null,
        "authorId" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "body" : "Can we take an InputStream instead of hardcoding System.in ? For tests we shouldn't have to use System.in.",
        "createdAt" : "2018-06-28T12:54:50Z",
        "updatedAt" : "2018-06-29T11:58:04Z",
        "lastEditedBy" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "tags" : [
        ]
      },
      {
        "id" : "c679652d-1812-4328-b65d-b43744d9db11",
        "parentId" : "dddbddef-2766-4cd8-96c8-38dfda0287d4",
        "authorId" : "223e67d6-1873-432a-9af9-f40b82a7eedd",
        "body" : "JlineLine doesn't seem to let you configure the input stream and we should probably not modify `System.in`. We don't do end to end testing for the REPL, the tests don't rely on JLine",
        "createdAt" : "2018-06-28T13:27:29Z",
        "updatedAt" : "2018-06-29T11:58:04Z",
        "lastEditedBy" : "223e67d6-1873-432a-9af9-f40b82a7eedd",
        "tags" : [
        ]
      }
    ],
    "commit" : "926d42695e53747c93f2db06833ed6ab892e33d2",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +27,31 @@  private val newLinePrompt = blue(\"     | \")\n\n  /** Blockingly read line from `System.in`\n   *\n   *  This entry point into JLine handles everything to do with terminal"
  }
]