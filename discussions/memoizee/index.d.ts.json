[
  {
    "id" : "08489862-8a28-48f9-8c6c-91e657cb7f81",
    "prId" : 13097,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/13097#pullrequestreview-12046041",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4a3eee3c-0ca3-44d1-bef8-89e4fc69a0de",
        "parentId" : null,
        "authorId" : "3869aabd-5b54-4208-bd58-934576e71b3a",
        "body" : "Don't need `I`",
        "createdAt" : "2016-12-08T15:30:40Z",
        "updatedAt" : "2016-12-08T15:42:05Z",
        "lastEditedBy" : "3869aabd-5b54-4208-bd58-934576e71b3a",
        "tags" : [
        ]
      }
    ],
    "commit" : "8825deefbc83b48fb75649dc8b988e21d18d7f62",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +16,20 @@ * @interface IMemoizeeOptions\n */\ninterface IMemoizeeOptions {\n  length?: number;\n  maxAge?: number;"
  },
  {
    "id" : "dba0ad32-8ee8-484c-8198-4315e37e5303",
    "prId" : 13097,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/13097#pullrequestreview-12046041",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "30aea277-23ac-42d9-a523-9a23f5568bd3",
        "parentId" : null,
        "authorId" : "3869aabd-5b54-4208-bd58-934576e71b3a",
        "body" : "These jsdoc comments just duplicate what's already in the code.",
        "createdAt" : "2016-12-08T15:31:00Z",
        "updatedAt" : "2016-12-08T15:42:05Z",
        "lastEditedBy" : "3869aabd-5b54-4208-bd58-934576e71b3a",
        "tags" : [
        ]
      }
    ],
    "commit" : "8825deefbc83b48fb75649dc8b988e21d18d7f62",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +32,36 @@ * Main interface functions\n * @interface IMemoizee\n * @extends {Function}\n */\ninterface IMemoizee extends Function {"
  },
  {
    "id" : "494ed413-aa5e-49a1-9373-8044be1b020c",
    "prId" : 13097,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/13097#pullrequestreview-12046041",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "957d93a2-ef00-4384-ac17-59080e45d785",
        "parentId" : null,
        "authorId" : "3869aabd-5b54-4208-bd58-934576e71b3a",
        "body" : "Why not `Array<(arg: any) => any>`?",
        "createdAt" : "2016-12-08T15:36:25Z",
        "updatedAt" : "2016-12-08T15:42:05Z",
        "lastEditedBy" : "3869aabd-5b54-4208-bd58-934576e71b3a",
        "tags" : [
        ]
      }
    ],
    "commit" : "8825deefbc83b48fb75649dc8b988e21d18d7f62",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +26,30 @@  primitive?: boolean;\n  normalizer?: (value: any ) => void;\n  resolvers?: RevolversArray;\n}\n"
  },
  {
    "id" : "7bad790d-fa63-472e-8960-8233c8eea15d",
    "prId" : 13097,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/13097#pullrequestreview-12046041",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cc0fa8f1-b082-4903-97e2-6113325a4e65",
        "parentId" : null,
        "authorId" : "3869aabd-5b54-4208-bd58-934576e71b3a",
        "body" : "Could this be:\r\n```ts\r\ninterface Memoized<F> {\r\n  delete: F;\r\n  clear(): void;\r\n}\r\n\r\ndeclare function memoizee<F extends Function>(f: F, options?: Options): F & Memoized<F>;\r\n```\r\n\r\n(Using `delete: F` under so that it will have the same argument types. It will have the wrong return type, but that's the best I can do.)",
        "createdAt" : "2016-12-08T15:39:17Z",
        "updatedAt" : "2016-12-08T15:42:05Z",
        "lastEditedBy" : "3869aabd-5b54-4208-bd58-934576e71b3a",
        "tags" : [
        ]
      }
    ],
    "commit" : "8825deefbc83b48fb75649dc8b988e21d18d7f62",
    "line" : 47,
    "diffHunk" : "@@ -1,1 +45,49 @@ * @returns {IMemoizee}\n */\ndeclare function memoizee(f: (...params: any[]) => void, options?: IMemoizeeOptions): IMemoizee;\n\nexport = memoizee;"
  }
]