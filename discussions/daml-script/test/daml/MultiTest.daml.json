[
  {
    "id" : "be80f835-242f-4246-b142-7dbecbbd1599",
    "prId" : 6369,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6369",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "da1e029b-90af-408d-ad0d-142ce52d3689",
        "parentId" : null,
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "Shouldn't we have some assertions here as well? And do I get it right that we can't make assertions on the `isLocal` field here? I assume that doesn't stop us from asserting on the other two fields?",
        "createdAt" : "2020-06-16T17:26:52Z",
        "updatedAt" : "2020-06-16T17:28:39Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      },
      {
        "id" : "40675190-dece-4c61-9978-e2cb6ca92554",
        "parentId" : "da1e029b-90af-408d-ad0d-142ce52d3689",
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "We could but then we’re just verifying the same thing we already verify for the single participant tests which seems a bit pointless. `is_local` would be the interesting part to check that stuff is actually from different participants but given this issue there isn’t much that we can test herre.",
        "createdAt" : "2020-06-16T17:52:01Z",
        "updatedAt" : "2020-06-16T17:52:01Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "b87a3e84-0d22-4dc0-81f8-ebb56e5461c5",
        "parentId" : "da1e029b-90af-408d-ad0d-142ce52d3689",
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "That makes sense. Thanks for the explanation.",
        "createdAt" : "2020-06-17T07:25:41Z",
        "updatedAt" : "2020-06-17T07:25:41Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      }
    ],
    "commit" : "bf048c88fb6eaac386200e07889ff278b351b160",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +49,53 @@  p2 <- allocatePartyOn \"p2\" (ParticipantName \"two\")\n  parties1' <- listKnownPartiesOn (ParticipantName \"one\")\n  parties2' <- listKnownPartiesOn (ParticipantName \"two\")\n  pure (parties1' \\\\ parties1, parties2' \\\\ parties2)"
  }
]