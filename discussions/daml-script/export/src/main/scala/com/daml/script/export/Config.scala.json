[
  {
    "id" : "a911c27e-65cd-462a-9068-2c2d2d033d8b",
    "prId" : 9568,
    "prUrl" : "https://github.com/digital-asset/daml/pull/9568",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8484b218-89f2-41d3-9054-c9be89da2cc5",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : ":facepalm: ",
        "createdAt" : "2021-05-04T12:31:44Z",
        "updatedAt" : "2021-05-04T13:14:59Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      }
    ],
    "commit" : "830a0efe4b7e824f0d3c371125bf757b174bd1ff",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +67,71 @@    opt[String](\"end\")\n      .optional()\n      .action((x, c) => c.copy(end = parseLedgerOffset(x)))\n      .text(\n        \"The transaction offset (inclusive) for the end position of the export. Optional, by default the export includes the current end of the ledger.\""
  },
  {
    "id" : "413dd016-41cc-42a5-a3ad-ec6b1148d45a",
    "prId" : 9414,
    "prUrl" : "https://github.com/digital-asset/daml/pull/9414",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c8476074-8a09-4336-8768-81f043251ac7",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "We should probably infer this from the assistant when run via the assistant. Let’s leave that for a separate PR though.",
        "createdAt" : "2021-04-14T14:58:34Z",
        "updatedAt" : "2021-04-16T09:56:58Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      }
    ],
    "commit" : "99c690d85e10c5c021c4e76288c415a7b48b2e2a",
    "line" : 85,
    "diffHunk" : "@@ -1,1 +83,87 @@          .action(actionExportScript((x, c) => c.copy(outputPath = x.toPath)))\n          .text(\"Create the Daml script under this directory prefix.\"),\n        opt[String](\"sdk-version\")\n          .required()\n          .action(actionExportScript((x, c) => c.copy(sdkVersion = x)))"
  },
  {
    "id" : "423cffb2-1e99-4f72-86ed-809cc77a342f",
    "prId" : 9414,
    "prUrl" : "https://github.com/digital-asset/daml/pull/9414",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e7b8e13d-6d6a-4bc5-b3c5-3e4b8570739f",
        "parentId" : null,
        "authorId" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "body" : "This is unlikely to be a cause of concern and I understand that this is hidden behind a required option, but is there something we can do to make errors more telling than a `NullPointerException`? Would it be feasible to have a \"raw\" version of this that contains `Option`s and have a function that validates it and turns it into something that can be used safely?",
        "createdAt" : "2021-04-15T16:39:01Z",
        "updatedAt" : "2021-04-16T09:56:58Z",
        "lastEditedBy" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "tags" : [
        ]
      },
      {
        "id" : "cf22a46e-e98a-4541-9526-4e96e460260c",
        "parentId" : "e7b8e13d-6d6a-4bc5-b3c5-3e4b8570739f",
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "Definitely feasible, I tend to go for the `null/\"\"/…` approach personally mainly because I’m lazy and I’m angry at scopt for making me implement my own validation logic (Haskell’s optparse-applicative is much nicer). That said, that’s a pretty poor excuse so definitely open to reconsider this. But let’s leave it out of this PR, this is just reshuffling.",
        "createdAt" : "2021-04-16T07:36:29Z",
        "updatedAt" : "2021-04-16T09:56:58Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      }
    ],
    "commit" : "99c690d85e10c5c021c4e76288c415a7b48b2e2a",
    "line" : 99,
    "diffHunk" : "@@ -1,1 +97,101 @@\n  private val EmptyExportScript = ExportScript(\n    outputPath = null,\n    sdkVersion = \"\",\n    acsBatchSize = 10,"
  }
]