[
  {
    "id" : "d594ef46-7d36-4637-8e62-c4bc8e1b80a6",
    "prId" : 3455,
    "prUrl" : "https://github.com/digital-asset/daml/pull/3455",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cacc0f5b-c3c4-4559-8172-dc84a8ecba28",
        "parentId" : null,
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "Should the exception we might throw below contain that we expected 2 fields in the record too? Same above.",
        "createdAt" : "2019-11-13T18:49:00Z",
        "updatedAt" : "2019-11-13T19:04:24Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      },
      {
        "id" : "94f06844-f1de-4ef4-b048-7083d5e4b039",
        "parentId" : "cacc0f5b-c3c4-4559-8172-dc84a8ecba28",
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "Good idea, fixed.",
        "createdAt" : "2019-11-13T19:17:49Z",
        "updatedAt" : "2019-11-13T19:17:50Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      }
    ],
    "commit" : "8190a156393f3a2e2fbc3d25ea4a2cdfc7dd2ab0",
    "line" : 234,
    "diffHunk" : "@@ -1,1 +189,193 @@            case SVariant(_, \"AllocParty\", v) => {\n              v match {\n                case SRecord(_, _, vals) if vals.size == 2 => {\n                  val displayName = vals.get(0).asInstanceOf[SText].value\n                  val continue = vals.get(1)"
  },
  {
    "id" : "5a5efc87-4390-4614-9589-ebeed9ecdf0b",
    "prId" : 3428,
    "prUrl" : "https://github.com/digital-asset/daml/pull/3428",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c6ed0291-cecd-44dc-9707-3ec7bb995f95",
        "parentId" : null,
        "authorId" : "9da357e5-66f5-424f-b28c-d68ddac2a372",
        "body" : "`DottedName.assertFromString(\"DA.Internal.LF\")` can be a constant.",
        "createdAt" : "2019-11-12T16:00:09Z",
        "updatedAt" : "2019-11-12T16:30:05Z",
        "lastEditedBy" : "9da357e5-66f5-424f-b28c-d68ddac2a372",
        "tags" : [
        ]
      }
    ],
    "commit" : "e607d4d5daa377415ce47b2303aec1cef06e892e",
    "line" : 63,
    "diffHunk" : "@@ -1,1 +61,65 @@      .find {\n        case (pkgId, pkg) =>\n          pkg.modules.contains(DottedName.assertFromString(\"DA.Internal.LF\"))\n      }\n      .get"
  },
  {
    "id" : "6762ec33-d14e-4d37-b50c-e258d8eab6c6",
    "prId" : 3428,
    "prUrl" : "https://github.com/digital-asset/daml/pull/3428",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5d6852a6-31d8-4141-aa72-8af561044b91",
        "parentId" : null,
        "authorId" : "9da357e5-66f5-424f-b28c-d68ddac2a372",
        "body" : "you should use match here, something like this:\r\n```\r\nmachine.toSValue match {\r\n  case STuple(_, (a0: SVariant) :: (a1: SVariant) :: _) => (a0, a1)\r\n  case => sys.error(\"something unexpected\")\r\n}\r\n```\r\nor  if you know that it is a tuple 2\r\n```\r\nmachine.toSValue match {\r\n  case STuple(_, (a0: SVariant) :: (a1: SVariant) :: Nil) => (a0, a1)\r\n  case => sys.error(\"something unexpected\")\r\n}\r\n```\r\nin any case using `match` is more idiomatic Scala, you should never use `asInstanceOf`.\r\n",
        "createdAt" : "2019-11-12T16:29:40Z",
        "updatedAt" : "2019-11-12T16:33:50Z",
        "lastEditedBy" : "9da357e5-66f5-424f-b28c-d68ddac2a372",
        "tags" : [
        ]
      },
      {
        "id" : "6f399e7e-853e-4963-8a02-0e6ab26dd043",
        "parentId" : "5d6852a6-31d8-4141-aa72-8af561044b91",
        "authorId" : "9da357e5-66f5-424f-b28c-d68ddac2a372",
        "body" : "oops it is `java.util.ArrayList` you cannot match it like this, so you might want to convert it to Scala first. But in any case using `asInstanceOf` is discouraged unless you are hardcore Java programmer :)",
        "createdAt" : "2019-11-12T16:32:47Z",
        "updatedAt" : "2019-11-12T16:32:48Z",
        "lastEditedBy" : "9da357e5-66f5-424f-b28c-d68ddac2a372",
        "tags" : [
        ]
      },
      {
        "id" : "77fa6162-9b12-47d5-9c7b-dd2345a70de9",
        "parentId" : "5d6852a6-31d8-4141-aa72-8af561044b91",
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "Yeah I’ll kill all the `asInstanceOf` stuff in a follow-up PR. That was just for prototyping.",
        "createdAt" : "2019-11-12T16:48:52Z",
        "updatedAt" : "2019-11-12T16:48:52Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      }
    ],
    "commit" : "e607d4d5daa377415ce47b2303aec1cef06e892e",
    "line" : 119,
    "diffHunk" : "@@ -1,1 +117,121 @@      }\n    }\n    val tuple = machine.toSValue.asInstanceOf[STuple]\n    (tuple.values.get(0).asInstanceOf[SVariant], tuple.values.get(1).asInstanceOf[SVariant])\n  }"
  },
  {
    "id" : "8f2b559e-acde-40b6-9aa0-70f8e1768799",
    "prId" : 3428,
    "prUrl" : "https://github.com/digital-asset/daml/pull/3428",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9f1e97e6-7227-4271-82e4-2dfd556bddcc",
        "parentId" : null,
        "authorId" : "0aa8e877-303a-4005-8f07-7003661da2a6",
        "body" : "Could some of this be shared between triggers and daml-script?",
        "createdAt" : "2019-11-13T08:26:06Z",
        "updatedAt" : "2019-11-13T08:28:28Z",
        "lastEditedBy" : "0aa8e877-303a-4005-8f07-7003661da2a6",
        "tags" : [
        ]
      },
      {
        "id" : "5d6008c4-019e-4ed9-8ddd-781b7f650a87",
        "parentId" : "9f1e97e6-7227-4271-82e4-2dfd556bddcc",
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "We could probably share a bit, e.g., the logic for converting `AnyTemplate` but most of the conversion are specific to the types used in the trigger/script library so the shared code isn’t as large as one might hope. I’ll first cleanup the conversion logic here and then see what we can factor out.",
        "createdAt" : "2019-11-13T08:31:11Z",
        "updatedAt" : "2019-11-13T08:31:11Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      }
    ],
    "commit" : "e607d4d5daa377415ce47b2303aec1cef06e892e",
    "line" : 80,
    "diffHunk" : "@@ -1,1 +78,82 @@  val compiledPackages = PureCompiledPackages(darMap, definitionMap).right.get\n\n  def toLedgerRecord(v: SValue) = {\n    lfValueToApiRecord(\n      true,"
  }
]