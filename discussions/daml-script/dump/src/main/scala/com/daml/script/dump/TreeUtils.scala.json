[
  {
    "id" : "5d878460-6356-4d4e-a6e2-ce9436c9cea9",
    "prId" : 9154,
    "prUrl" : "https://github.com/digital-asset/daml/pull/9154",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5680da51-987b-4173-aa8f-9001893dc9a5",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "Non-consuming choices can still call consuming choices (e.g., `Archive`). Totally fine not to handle this case but perhaps worth mentioning in the comment.",
        "createdAt" : "2021-03-17T16:45:42Z",
        "updatedAt" : "2021-03-18T09:20:15Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "bfb4e996-e018-4da7-b649-e5bdd613ba88",
        "parentId" : "5680da51-987b-4173-aa8f-9001893dc9a5",
        "authorId" : "0aa8e877-303a-4005-8f07-7003661da2a6",
        "body" : "True, I've expanded the comment. It shouldn't be too hard to expand this to take nested consuming choices into account. I'll look into it separately, though.",
        "createdAt" : "2021-03-18T09:18:57Z",
        "updatedAt" : "2021-03-18T09:20:15Z",
        "lastEditedBy" : "0aa8e877-303a-4005-8f07-7003661da2a6",
        "tags" : [
        ]
      },
      {
        "id" : "c6708bfc-e302-46b0-b399-0efe2e77e23a",
        "parentId" : "5680da51-987b-4173-aa8f-9001893dc9a5",
        "authorId" : "0aa8e877-303a-4005-8f07-7003661da2a6",
        "body" : "Addressed in https://github.com/digital-asset/daml/pull/9185 ",
        "createdAt" : "2021-03-19T08:49:48Z",
        "updatedAt" : "2021-03-19T08:49:49Z",
        "lastEditedBy" : "0aa8e877-303a-4005-8f07-7003661da2a6",
        "tags" : [
        ]
      }
    ],
    "commit" : "9d32f247d524a0c929318ee4afcaea01a12e1db7",
    "line" : 59,
    "diffHunk" : "@@ -1,1 +241,245 @@          if (exercisedEvent.consuming) {\n            // If the choice is not consuming then we have two resulting contracts:\n            // The created one and the result of the exercise. I.e. not a simple command.\n            // A child exercised event might still consume the contract, but this heuristic is kept simple for now.\n            simpleExercise(exercisedEvent).map(SimpleCommand(command, _))"
  },
  {
    "id" : "42b94b8d-e133-42a3-b4fd-a21be283227a",
    "prId" : 9150,
    "prUrl" : "https://github.com/digital-asset/daml/pull/9150",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fa3814be-6a99-49a5-9eac-6673e4113e39",
        "parentId" : null,
        "authorId" : "0aa8e877-303a-4005-8f07-7003661da2a6",
        "body" : "\r\n\r\nI'll address this in a follow-up PR.\r\n",
        "createdAt" : "2021-03-16T12:03:52Z",
        "updatedAt" : "2021-03-17T10:16:46Z",
        "lastEditedBy" : "0aa8e877-303a-4005-8f07-7003661da2a6",
        "tags" : [
        ]
      },
      {
        "id" : "2cd6dafd-f17d-4039-8b96-cb487731bb2e",
        "parentId" : "fa3814be-6a99-49a5-9eac-6673e4113e39",
        "authorId" : "0aa8e877-303a-4005-8f07-7003661da2a6",
        "body" : "https://github.com/digital-asset/daml/pull/9154",
        "createdAt" : "2021-03-17T13:38:46Z",
        "updatedAt" : "2021-03-17T13:38:47Z",
        "lastEditedBy" : "0aa8e877-303a-4005-8f07-7003661da2a6",
        "tags" : [
        ]
      }
    ],
    "commit" : "2509bf2af2f12f186ccd0a872e3c6552f4ba9731",
    "line" : 98,
    "diffHunk" : "@@ -1,1 +232,236 @@          }\n        case _: CreateAndExerciseCommand =>\n          // TODO[AH] Identify simple createAndExercise commands.\n          None\n      }"
  },
  {
    "id" : "b4ad9e62-88b8-4ea3-bd1f-d1ac87f8cbce",
    "prId" : 9080,
    "prUrl" : "https://github.com/digital-asset/daml/pull/9080",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c78a56c8-d757-41fe-8bae-9a93f9f61881",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "This doesn’t take into account whether the contract ids are used right? So if an exercise creates two contracts and returns one and we use only that, we still will don’t hit this?\r\n\r\nThat seems very sensible, just making sure I understand the logic correctly.",
        "createdAt" : "2021-03-11T10:45:20Z",
        "updatedAt" : "2021-03-11T11:28:11Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "059a1ef6-3830-4051-9bb0-520da1b8b099",
        "parentId" : "c78a56c8-d757-41fe-8bae-9a93f9f61881",
        "authorId" : "0aa8e877-303a-4005-8f07-7003661da2a6",
        "body" : "Yes, that's right. It's a relatively simple heuristic.",
        "createdAt" : "2021-03-11T11:01:40Z",
        "updatedAt" : "2021-03-11T11:28:11Z",
        "lastEditedBy" : "0aa8e877-303a-4005-8f07-7003661da2a6",
        "tags" : [
        ]
      }
    ],
    "commit" : "080ae9bb3504d053c72d7b884e7662a2d09d7b5b",
    "line" : 69,
    "diffHunk" : "@@ -1,1 +169,173 @@    * A create event is a simple event. An exercise event can be a simple event.\n    */\n  case class SimpleEvent(event: TreeEvent.Kind, contractId: ContractId)\n\n  object SimpleEvent {"
  }
]