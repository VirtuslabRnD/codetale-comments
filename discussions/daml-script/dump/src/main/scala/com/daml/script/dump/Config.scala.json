[
  {
    "id" : "582c897b-375d-4d2b-ae43-60f9469ba30d",
    "prId" : 8978,
    "prUrl" : "https://github.com/digital-asset/daml/pull/8978",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1807c2ce-3b27-4de3-bdb9-78db9d5ff4d4",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "maybe 0 would be a nice way to disable batching?",
        "createdAt" : "2021-03-01T15:11:25Z",
        "updatedAt" : "2021-03-02T09:35:58Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "f7e8df41-7c10-4607-9a2a-1128c47bafde",
        "parentId" : "1807c2ce-3b27-4de3-bdb9-78db9d5ff4d4",
        "authorId" : "0aa8e877-303a-4005-8f07-7003661da2a6",
        "body" : "Depends what you mean by disabling batching. If you mean one command per submit, then that's already equivalent to a batch size of 1. If you mean batch all commands into one submit, then yes, we can do that. However, as discussed in https://github.com/digital-asset/daml/pull/8952#discussion_r582953935 that would likely cause issues when more of the ACS contracts are referenced than fit into a tuple. So, I'm not sure if we should provide this option.",
        "createdAt" : "2021-03-02T09:25:00Z",
        "updatedAt" : "2021-03-02T09:35:58Z",
        "lastEditedBy" : "0aa8e877-303a-4005-8f07-7003661da2a6",
        "tags" : [
        ]
      }
    ],
    "commit" : "2ec30f8c28c27562c37cdb003b5d7794a2946bdd",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +61,65 @@      .action((x, c) => c.copy(acsBatchSize = x))\n      .validate(x =>\n        if (x <= 0) { failure(\"ACS batch size must be greater than zero\") }\n        else { success }\n      )"
  },
  {
    "id" : "e47eb678-46c8-44b8-97ae-bcb78a173921",
    "prId" : 8898,
    "prUrl" : "https://github.com/digital-asset/daml/pull/8898",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b7f3078c-1790-45f6-930e-4b595f53ef23",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "I assume you checked that we don’t have this anywhere else? I think extractor accepts offsets as well but from a quick look it seems like it doesn’t quite have the need for this (it only accepts absolute offsets).",
        "createdAt" : "2021-02-19T12:17:56Z",
        "updatedAt" : "2021-02-19T16:54:03Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "61c3b0ea-c445-4062-bf29-3b61ab7672b4",
        "parentId" : "b7f3078c-1790-45f6-930e-4b595f53ef23",
        "authorId" : "0aa8e877-303a-4005-8f07-7003661da2a6",
        "body" : "Yes, I looked around for this functionality. Extractor was the closest I found, but as you say, it doesn't quite cut it.",
        "createdAt" : "2021-02-19T13:19:14Z",
        "updatedAt" : "2021-02-19T16:54:03Z",
        "lastEditedBy" : "0aa8e877-303a-4005-8f07-7003661da2a6",
        "tags" : [
        ]
      }
    ],
    "commit" : "d785f2f478199f22e6cf6f32675978033e331df1",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +24,28 @@    parser.parse(args, Empty)\n\n  private def parseLedgerOffset(s: String): LedgerOffset = LedgerOffset {\n    s match {\n      case s if s == \"begin\" =>"
  },
  {
    "id" : "5a7257e5-3b32-4c2b-85ca-4ec12abea990",
    "prId" : 8898,
    "prUrl" : "https://github.com/digital-asset/daml/pull/8898",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "58c02069-ed7a-4012-8ffb-b98601f12d41",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "Do we have the invariant that `--start=x --end=x` always produces the acs dump at the given offset?",
        "createdAt" : "2021-02-19T12:21:48Z",
        "updatedAt" : "2021-02-19T16:54:03Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "a84409de-70a9-48af-a02e-e37820d73614",
        "parentId" : "58c02069-ed7a-4012-8ffb-b98601f12d41",
        "authorId" : "0aa8e877-303a-4005-8f07-7003661da2a6",
        "body" : "Yes, assuming `x` is a valid offset.\r\n",
        "createdAt" : "2021-02-19T15:53:07Z",
        "updatedAt" : "2021-02-19T16:54:03Z",
        "lastEditedBy" : "0aa8e877-303a-4005-8f07-7003661da2a6",
        "tags" : [
        ]
      }
    ],
    "commit" : "d785f2f478199f22e6cf6f32675978033e331df1",
    "line" : 49,
    "diffHunk" : "@@ -1,1 +54,58 @@      .action((x, c) => c.copy(start = parseLedgerOffset(x)))\n      .text(\n        \"The transaction offset (inclusive) for the end position of the dump. Optional, by default the dump includes the current end of the ledger.\"\n      )\n    opt[File]('o', \"output\")"
  },
  {
    "id" : "4bd62170-3655-4875-858c-2266341d520a",
    "prId" : 7934,
    "prUrl" : "https://github.com/digital-asset/daml/pull/7934",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "341a807f-6de1-486a-88c9-c85de37f673a",
        "parentId" : null,
        "authorId" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "body" : "Any reason to add a sub-command in case you need to support some sort of alternative action in the future?",
        "createdAt" : "2021-02-05T10:28:01Z",
        "updatedAt" : "2021-02-05T11:11:15Z",
        "lastEditedBy" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "tags" : [
        ]
      },
      {
        "id" : "8a586781-83b2-44e3-aa97-4aabf63ac362",
        "parentId" : "341a807f-6de1-486a-88c9-c85de37f673a",
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "oh sorry forgot to respond to this before merging. Yeah we might want to change this. I’d rather revisit the whole CLI once ti becomes stable or at least released than try to predict what we might want to add.",
        "createdAt" : "2021-02-05T12:20:16Z",
        "updatedAt" : "2021-02-05T12:20:16Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      }
    ],
    "commit" : "0b06b97faa32687d9061f524a07d3ea42a6d6ffb",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +20,24 @@    parser.parse(args, Empty)\n\n  private val parser = new scopt.OptionParser[Config](\"script-dump\") {\n    opt[String](\"host\")\n      .required()"
  }
]