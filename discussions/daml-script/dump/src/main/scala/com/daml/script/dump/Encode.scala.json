[
  {
    "id" : "cd73ce6c-6c52-4772-a41a-78101b5185d6",
    "prId" : 9150,
    "prUrl" : "https://github.com/digital-asset/daml/pull/9150",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "705602c5-ccdc-4ec7-93a6-3c83f64a8cef",
        "parentId" : null,
        "authorId" : "0aa8e877-303a-4005-8f07-7003661da2a6",
        "body" : "I'll address this in a follow-up PR.",
        "createdAt" : "2021-03-16T12:03:40Z",
        "updatedAt" : "2021-03-17T10:16:46Z",
        "lastEditedBy" : "0aa8e877-303a-4005-8f07-7003661da2a6",
        "tags" : [
        ]
      },
      {
        "id" : "ba87faa5-cf6d-479f-9437-354d94804de9",
        "parentId" : "705602c5-ccdc-4ec7-93a6-3c83f64a8cef",
        "authorId" : "0aa8e877-303a-4005-8f07-7003661da2a6",
        "body" : "https://github.com/digital-asset/daml/pull/9179",
        "createdAt" : "2021-03-18T10:09:33Z",
        "updatedAt" : "2021-03-18T10:09:34Z",
        "lastEditedBy" : "0aa8e877-303a-4005-8f07-7003661da2a6",
        "tags" : [
        ]
      }
    ],
    "commit" : "2509bf2af2f12f186ccd0a872e3c6552f4ba9731",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +30,34 @@\n    val acsCidRefs = acs.values.foldMap(createdReferencedCids)\n    // TODO[AH] Avoid constructing Commands twice. Currently we do this once here and once more in encodeTree.\n    val treeCidRefs = trees.foldMap { tree =>\n      val cmds = Command.fromTree(tree)"
  },
  {
    "id" : "0cea2996-fbfe-45ad-b609-681f8c8ed7ab",
    "prId" : 8995,
    "prUrl" : "https://github.com/digital-asset/daml/pull/8995",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d2a34552-1721-45d2-ae35-3a1e3da7cf8e",
        "parentId" : null,
        "authorId" : "0aa8e877-303a-4005-8f07-7003661da2a6",
        "body" : "I'm not too happy with this `isTree` parameter. However, for now it seems like an improvement over the previous state.",
        "createdAt" : "2021-03-03T09:26:50Z",
        "updatedAt" : "2021-03-03T09:26:50Z",
        "lastEditedBy" : "0aa8e877-303a-4005-8f07-7003661da2a6",
        "tags" : [
        ]
      }
    ],
    "commit" : "5fe04a8e681e6536c55229526fe22111a3176f08",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +334,338 @@  private def encodeSelector(selector: Selector): Doc = Doc.str(selector.i)\n\n  private def submit(partyMap: Map[Party, String], submitters: Set[Party], isTree: Boolean): Doc = {\n    val tree = if (isTree) { Doc.text(\"Tree\") }\n    else { Doc.empty }"
  },
  {
    "id" : "ed363650-cdc4-4916-ae50-6dd46343a055",
    "prId" : 8978,
    "prUrl" : "https://github.com/digital-asset/daml/pull/8978",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "55cd56dd-26ab-4420-a622-99911b41d9a8",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "Why do we have to filter empty docs now? Iâ€™m not really sure which of them can be empty.",
        "createdAt" : "2021-03-01T15:10:18Z",
        "updatedAt" : "2021-03-02T09:35:58Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "ea038316-fcb3-45bd-9cbd-1bf9491528f4",
        "parentId" : "55cd56dd-26ab-4420-a622-99911b41d9a8",
        "authorId" : "0aa8e877-303a-4005-8f07-7003661da2a6",
        "body" : "`Doc.stack` will include empty items in it's arguments as empty lines, with `hang` annoyingly prefixed by whitespace. If we don't generate an ACS, i.e. `--start start`, then `encodeACS` will return an empty doc. So, without the filter the dump would include an empty line at the top. Before, this wasn't an issue because we used `++` on sequences. So, if `sortedAcs` was empty, then the sequence passed to `Doc.stack` would just not include any ACS lines.",
        "createdAt" : "2021-03-02T09:33:15Z",
        "updatedAt" : "2021-03-02T09:35:58Z",
        "lastEditedBy" : "0aa8e877-303a-4005-8f07-7003661da2a6",
        "tags" : [
        ]
      }
    ],
    "commit" : "2ec30f8c28c27562c37cdb003b5d7794a2946bdd",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +70,74 @@      Doc.text(\"dump : Parties -> Script ()\") /\n      (Doc.text(\"dump Parties{..} = do\") /\n        stackNonEmpty(\n          encodeACS(partyMap, cidMap, cidRefs, sortedAcs, batchSize = acsBatchSize)\n            +: trees.map(t => encodeTree(partyMap, cidMap, cidRefs, t))"
  },
  {
    "id" : "9e416bde-7540-4981-a6ae-e291a8451bd0",
    "prId" : 8952,
    "prUrl" : "https://github.com/digital-asset/daml/pull/8952",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b9ddb4e2-cde5-4d72-97a6-cfdfb534072d",
        "parentId" : null,
        "authorId" : "0aa8e877-303a-4005-8f07-7003661da2a6",
        "body" : "We could change this to issue a single `submit` that issues all `createCmd`s to reconstruct the ACS in one go.\r\nHowever, with a large ACS this might require a pretty large tuple to bind all the contract Ids. I'm not sure if this could cause issues.\r\n",
        "createdAt" : "2021-02-25T14:57:32Z",
        "updatedAt" : "2021-02-26T11:04:04Z",
        "lastEditedBy" : "0aa8e877-303a-4005-8f07-7003661da2a6",
        "tags" : [
        ]
      },
      {
        "id" : "570c4999-32ed-497d-9aee-905d22f9381f",
        "parentId" : "b9ddb4e2-cde5-4d72-97a6-cfdfb534072d",
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "It would, tuples are quite limited in size. This brings up another important point: We might want to batch the creation of the ACS. I opened https://github.com/digital-asset/daml/issues/8954 for this.",
        "createdAt" : "2021-02-25T15:58:39Z",
        "updatedAt" : "2021-02-26T11:04:04Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      }
    ],
    "commit" : "d9b2685a0683a93de9efbb99cb041939323d3324",
    "line" : 55,
    "diffHunk" : "@@ -1,1 +71,75 @@        Doc.stack(\n          sortedAcs.map(createdEvent =>\n            encodeSubmitCreatedEvents(partyMap, cidMap, cidRefs, Seq(createdEvent))\n          ) ++\n            trees.map(t => encodeTree(partyMap, cidMap, cidRefs, t))"
  }
]