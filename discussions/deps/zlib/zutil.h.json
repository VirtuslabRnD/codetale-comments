[
  {
    "id" : "601bdada-95e6-42e4-8225-5c8bd1ff137a",
    "prId" : 10980,
    "prUrl" : "https://github.com/nodejs/node/pull/10980#pullrequestreview-32243066",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bd410347-2ec2-4ae3-95f6-37028b867d7b",
        "parentId" : null,
        "authorId" : "d0f85ae5-dc76-465a-a9f3-eadef2f5bce8",
        "body" : "This might be the source of #12244. This would _slightly_ change the gzip header that is produced by `zlib.gzip()` on macOS. From looking at the code it seems that macOS would have previously fallen through to the default of `0x03` (Unix).",
        "createdAt" : "2017-04-05T23:06:11Z",
        "updatedAt" : "2017-04-05T23:06:11Z",
        "lastEditedBy" : "d0f85ae5-dc76-465a-a9f3-eadef2f5bce8",
        "tags" : [
        ]
      },
      {
        "id" : "c70887e6-9d99-4f53-9c42-d26424f2a15c",
        "parentId" : "bd410347-2ec2-4ae3-95f6-37028b867d7b",
        "authorId" : "2be52d1c-c2eb-47e4-aee9-a127f02d3d62",
        "body" : "is this something we would want to float a patch for on LTS?",
        "createdAt" : "2017-04-06T01:44:24Z",
        "updatedAt" : "2017-04-06T01:44:24Z",
        "lastEditedBy" : "2be52d1c-c2eb-47e4-aee9-a127f02d3d62",
        "tags" : [
        ]
      },
      {
        "id" : "f2cd9002-ee9b-47d3-8d5f-649a70f47c93",
        "parentId" : "bd410347-2ec2-4ae3-95f6-37028b867d7b",
        "authorId" : "e75ae5b4-0256-4743-b9d9-8adee03098da",
        "body" : "I am on the fence. Its clearly an observable change, @flippmoke saw it, but its not clear that we are that committed to binary identicality of output encoding. Then again, it seems a low-risk change to float a patch on the LTS branches to make them absolutely identical in output. @flippmoke, do you have an opinion on this? Do you feel that your test suites were depending on unstable encoding details, or do you feel that this is a regression?",
        "createdAt" : "2017-04-06T17:20:11Z",
        "updatedAt" : "2017-04-06T17:20:11Z",
        "lastEditedBy" : "e75ae5b4-0256-4743-b9d9-8adee03098da",
        "tags" : [
        ]
      },
      {
        "id" : "d83a00f4-d4a0-49b5-a411-341b710b8fe2",
        "parentId" : "bd410347-2ec2-4ae3-95f6-37028b867d7b",
        "authorId" : "3c1a7337-9ab0-4335-b6e8-0ae0e6a5e96f",
        "body" : "@sam-github I would say we were surprised to see a in encoding change due to a patch release. However, I can understand how this is not a big deal for the vast majority of use cases for users. It is possibly confusing as well for OSX users that might use zlib elsewhere that they will not get the same binary results. However, I feel this is more an issue with zlib issuing this in a patch release rather then node doing this in a patch release.\r\n\r\nAlso just a note I am somewhat confused by the MAC OS header above it as well and when _ _ APPLE _ _applies compared to it. https://github.com/nodejs/node/pull/10980/files/dfa8abe1b500b86ffb3951736c209e57d83ed3ed#diff-a12b3cb4ae22eb7956dc70bda62773a3L121",
        "createdAt" : "2017-04-06T17:56:18Z",
        "updatedAt" : "2017-04-06T17:56:19Z",
        "lastEditedBy" : "3c1a7337-9ab0-4335-b6e8-0ae0e6a5e96f",
        "tags" : [
        ]
      },
      {
        "id" : "5c23fe46-5a74-4326-bef5-8143c40a04e8",
        "parentId" : "bd410347-2ec2-4ae3-95f6-37028b867d7b",
        "authorId" : "d0f85ae5-dc76-465a-a9f3-eadef2f5bce8",
        "body" : "@flippmoke I believe that is a relic of the pre-xcode days when MetroWerks/CodeWarrior was the compiler of choice on Mac. Yay legacy!",
        "createdAt" : "2017-04-11T22:21:45Z",
        "updatedAt" : "2017-04-11T22:21:45Z",
        "lastEditedBy" : "d0f85ae5-dc76-465a-a9f3-eadef2f5bce8",
        "tags" : [
        ]
      }
    ],
    "commit" : "dfa8abe1b500b86ffb3951736c209e57d83ed3ed",
    "line" : 91,
    "diffHunk" : "@@ -1,1 +161,165 @@\n#ifdef __APPLE__\n#  define OS_CODE 19\n#endif\n"
  }
]