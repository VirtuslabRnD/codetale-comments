[
  {
    "id" : "9a577036-5800-49b7-88b5-6bc191a4aa7d",
    "prId" : 12004,
    "prUrl" : "https://github.com/nodejs/node/pull/12004#pullrequestreview-29038339",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3fd9f0db-56ff-438e-967d-42ba106cce7d",
        "parentId" : null,
        "authorId" : "4224fcfe-ee22-4bd8-9ed5-4e8efd7a90bc",
        "body" : "I realize the original CL does that too but do you happen to know why it uses empty_string() instead of undefined_value() or the_hole_value()?",
        "createdAt" : "2017-03-23T18:08:27Z",
        "updatedAt" : "2017-03-27T08:19:15Z",
        "lastEditedBy" : "4224fcfe-ee22-4bd8-9ed5-4e8efd7a90bc",
        "tags" : [
        ]
      },
      {
        "id" : "706bc687-5a55-43c5-99b3-b739f368fe7e",
        "parentId" : "3fd9f0db-56ff-438e-967d-42ba106cce7d",
        "authorId" : "4e8c77e8-10f9-4830-ac93-3bf7c9d321e2",
        "body" : "I agree, there doesn't seem to be a good reason for that. Do you want me to change it for `undefined_value()`?",
        "createdAt" : "2017-03-24T08:29:38Z",
        "updatedAt" : "2017-03-27T08:19:15Z",
        "lastEditedBy" : "4e8c77e8-10f9-4830-ac93-3bf7c9d321e2",
        "tags" : [
        ]
      },
      {
        "id" : "e2e258ac-4aa6-468a-9dab-beaa38df57d4",
        "parentId" : "3fd9f0db-56ff-438e-967d-42ba106cce7d",
        "authorId" : "4e8c77e8-10f9-4830-ac93-3bf7c9d321e2",
        "body" : "@gsathya ^",
        "createdAt" : "2017-03-24T08:33:24Z",
        "updatedAt" : "2017-03-27T08:19:15Z",
        "lastEditedBy" : "4e8c77e8-10f9-4830-ac93-3bf7c9d321e2",
        "tags" : [
        ]
      },
      {
        "id" : "935411f2-8d50-4db3-836e-8fc2c4ff0481",
        "parentId" : "3fd9f0db-56ff-438e-967d-42ba106cce7d",
        "authorId" : "4224fcfe-ee22-4bd8-9ed5-4e8efd7a90bc",
        "body" : "I think the logic is that the initial value won't matter because it's overwritten in all code paths?  I'd have used the_hole_value() because its presence traps in many cases and it's something you can unambiguously debug-check since it's never produced by JS code.",
        "createdAt" : "2017-03-24T08:44:13Z",
        "updatedAt" : "2017-03-27T08:19:15Z",
        "lastEditedBy" : "4224fcfe-ee22-4bd8-9ed5-4e8efd7a90bc",
        "tags" : [
        ]
      },
      {
        "id" : "766e8071-d029-4e75-9500-05844bafa0fb",
        "parentId" : "3fd9f0db-56ff-438e-967d-42ba106cce7d",
        "authorId" : "df22e469-605e-4236-97c4-d1c8c71a7cbc",
        "body" : "empty_string isn't the value, it's the name of the variable. we never actually lookup the variable by name, so it doesn't need a name.",
        "createdAt" : "2017-03-25T02:57:31Z",
        "updatedAt" : "2017-03-27T08:19:15Z",
        "lastEditedBy" : "df22e469-605e-4236-97c4-d1c8c71a7cbc",
        "tags" : [
        ]
      }
    ],
    "commit" : "d22346de40f27157ea81f94479ba42bfc0122f5a",
    "line" : 259,
    "diffHunk" : "@@ -1,1 +3216,3220 @@  Variable* async_return = function_state_->async_return_variable();\n  if (async_return == nullptr) {\n    async_return = scope()->NewTemporary(ast_value_factory()->empty_string());\n    function_state_->set_async_return_variable(async_return);\n  }"
  }
]