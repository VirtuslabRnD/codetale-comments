[
  {
    "id" : "246ec2d4-60cc-4b06-8e15-e5d490afcf06",
    "prId" : 6360,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6360",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2d524628-06a1-4fb2-9950-af4a6eca15e7",
        "parentId" : null,
        "authorId" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "body" : "Is `pattern` a GHC-specific feature?",
        "createdAt" : "2020-06-16T08:37:50Z",
        "updatedAt" : "2020-06-16T08:47:33Z",
        "lastEditedBy" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "tags" : [
        ]
      },
      {
        "id" : "19bc9992-ae22-4955-8989-d36ff3d1d21a",
        "parentId" : "2d524628-06a1-4fb2-9950-af4a6eca15e7",
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "GHC-specific as in not supported in DAML? No! You can use pattern synonyms in DAML as well (that’s how `Just` works as a synonym for `Some`). However, it can potentially slow your code down over inlining it since our optimizer is shit. For GHC, the optimizer will usually optimize it to the same code.",
        "createdAt" : "2020-06-16T08:49:44Z",
        "updatedAt" : "2020-06-16T08:49:44Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "6d88d7ca-0ae1-4785-b42f-5615e89626c7",
        "parentId" : "2d524628-06a1-4fb2-9950-af4a6eca15e7",
        "authorId" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "body" : "> GHC-specific as in not supported in DAML?\r\n\r\nNo, as in, part of the extension GHC has on top of standard Haskell.\r\n\r\nJust asking, I never saw this. :slightly_smiling_face: ",
        "createdAt" : "2020-06-16T10:11:04Z",
        "updatedAt" : "2020-06-16T10:11:04Z",
        "lastEditedBy" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "tags" : [
        ]
      },
      {
        "id" : "c644f589-b803-4455-8a60-c0786e776c2e",
        "parentId" : "2d524628-06a1-4fb2-9950-af4a6eca15e7",
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "Ah yes it is. I don’t differentiate between GHC and standard Haskell. Given that GHC is the only usable Haskell implementation the standard is pretty much irrelevant and it matters much more what GHC does.",
        "createdAt" : "2020-06-16T10:15:06Z",
        "updatedAt" : "2020-06-16T10:15:06Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      }
    ],
    "commit" : "5cff7dd79662c53b0d2c9d94af645e4ff856f3a8",
    "line" : 69,
    "diffHunk" : "@@ -1,1 +118,122 @@\n\npattern CreatedProposeDeal :: ContractId -> ProposeDeal -> Event\npattern CreatedProposeDeal cid asset <- Created cid (TemplateId \"ProposeAccept\" \"ProposeDeal\") (A.fromJSON -> A.Success asset)\n"
  }
]