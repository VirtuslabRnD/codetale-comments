[
  {
    "id" : "8f6a05ce-ab0b-4a04-abc1-8c0ea5287726",
    "prId" : 7222,
    "prUrl" : "https://github.com/digital-asset/daml/pull/7222",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c6d3adb3-d2f2-482a-9946-72525a48688f",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "Which one does it use if you don’t do that?",
        "createdAt" : "2020-09-07T11:45:50Z",
        "updatedAt" : "2020-09-08T09:50:39Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "839ddea0-8b9e-4b02-b030-12e244c9ade0",
        "parentId" : "c6d3adb3-d2f2-482a-9946-72525a48688f",
        "authorId" : "6bbb482c-d598-4c97-ac37-b89d94b27ee4",
        "body" : "can't quite remember whether it tried a different path or couldn't find it at all.",
        "createdAt" : "2020-09-07T12:57:36Z",
        "updatedAt" : "2020-09-08T09:50:39Z",
        "lastEditedBy" : "6bbb482c-d598-4c97-ac37-b89d94b27ee4",
        "tags" : [
        ]
      }
    ],
    "commit" : "05a1d035c2e74f50ac256733c38d9f9a607b65d5",
    "line" : 146,
    "diffHunk" : "@@ -1,1 +214,218 @@          addTestDependencies \"package.json\" testDepsPath\n          patchTsDependencies uiDir \"package.json\"\n          -- use '--scripts-prepend-node-path' to make sure we are using the correct 'node' binary\n          retry 3 (callProcessSilent npmPath [\"install\", \"--scripts-prepend-node-path\"])\n          step \"Run Puppeteer end-to-end tests\""
  },
  {
    "id" : "847c442e-5433-4e96-8ba5-7d7d6e7442fa",
    "prId" : 7222,
    "prUrl" : "https://github.com/digital-asset/daml/pull/7222",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ca060977-443c-41cf-9463-6b48fb9bc3d7",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "Why do we need this in this test but I don’t need seem to have it in PATH on my machine where I’ve installed NPM?",
        "createdAt" : "2020-09-07T11:46:46Z",
        "updatedAt" : "2020-09-08T09:50:39Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "67831d9c-2699-49e7-a271-32c5f269aff7",
        "parentId" : "ca060977-443c-41cf-9463-6b48fb9bc3d7",
        "authorId" : "6bbb482c-d598-4c97-ac37-b89d94b27ee4",
        "body" : "you won't have 'npm-cli.js' in your PATH because it's a wrapper from bazel for `npm`.",
        "createdAt" : "2020-09-07T12:58:38Z",
        "updatedAt" : "2020-09-08T09:50:39Z",
        "lastEditedBy" : "6bbb482c-d598-4c97-ac37-b89d94b27ee4",
        "tags" : [
        ]
      }
    ],
    "commit" : "05a1d035c2e74f50ac256733c38d9f9a607b65d5",
    "line" : 152,
    "diffHunk" : "@@ -1,1 +218,222 @@          step \"Run Puppeteer end-to-end tests\"\n          copyFile testTsPath (uiDir </> \"src\" </> \"index.test.ts\")\n          -- we need 'npm-cli.js' in the path for the following test\n          mbOldPath <- getEnv \"PATH\"\n          setEnv \"PATH\" (takeDirectory npmPath <> (searchPathSeparator : fromMaybe \"\" mbOldPath)) True"
  },
  {
    "id" : "41964d0d-6e48-42be-b508-68975c2c1fa7",
    "prId" : 7222,
    "prUrl" : "https://github.com/digital-asset/daml/pull/7222",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "865db732-9469-413c-b3d3-3e5905673d9a",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "I like `lens-aeson` for this kind of ad-hoc JSON manipulation but I’ll leave it up to you if you want to use it.",
        "createdAt" : "2020-09-07T11:50:51Z",
        "updatedAt" : "2020-09-08T09:50:39Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "50ea3866-f962-4f76-8fcb-4b1976d74b9b",
        "parentId" : "865db732-9469-413c-b3d3-3e5905673d9a",
        "authorId" : "6bbb482c-d598-4c97-ac37-b89d94b27ee4",
        "body" : "I didn't want to pull in the lens machinery for this pretty specific case.",
        "createdAt" : "2020-09-07T12:55:25Z",
        "updatedAt" : "2020-09-08T09:50:39Z",
        "lastEditedBy" : "6bbb482c-d598-4c97-ac37-b89d94b27ee4",
        "tags" : [
        ]
      }
    ],
    "commit" : "05a1d035c2e74f50ac256733c38d9f9a607b65d5",
    "line" : 201,
    "diffHunk" : "@@ -1,1 +258,262 @@patchTsDependencies uiDir packageJsonFile = do\n  packageJson0 <- readJsonFile packageJsonFile\n  case packageJson0 of\n    Aeson.Object packageJson ->\n      case HMS.lookup \"dependencies\" packageJson of"
  },
  {
    "id" : "33096dc1-363c-4469-89a5-5de7ca097c1f",
    "prId" : 7222,
    "prUrl" : "https://github.com/digital-asset/daml/pull/7222",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b50622a3-328b-48ce-b428-0bd07f273a04",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "technically relative file urls are invalid. I guess npm handles them given that this test passes but perhaps worth keeping in mind.",
        "createdAt" : "2020-09-07T11:54:52Z",
        "updatedAt" : "2020-09-08T09:50:39Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "507d9209-8548-4fd3-9853-5ab66cdaf7b0",
        "parentId" : "b50622a3-328b-48ce-b428-0bd07f273a04",
        "authorId" : "6bbb482c-d598-4c97-ac37-b89d94b27ee4",
        "body" : "I didn't know that! We did have absolute file path in there first and changed it to relative ones.",
        "createdAt" : "2020-09-07T12:54:47Z",
        "updatedAt" : "2020-09-08T09:50:39Z",
        "lastEditedBy" : "6bbb482c-d598-4c97-ac37-b89d94b27ee4",
        "tags" : [
        ]
      },
      {
        "id" : "9629144e-b348-4e4c-9802-f409da994def",
        "parentId" : "b50622a3-328b-48ce-b428-0bd07f273a04",
        "authorId" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "body" : "\"Technically\" as in the RFC for URLs? NPM seems to be fine with them [per their documentation of package.json](https://docs.npmjs.com/files/package.json#local-paths).",
        "createdAt" : "2020-09-08T09:50:34Z",
        "updatedAt" : "2020-09-08T09:50:39Z",
        "lastEditedBy" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "tags" : [
        ]
      },
      {
        "id" : "8e9580fe-c360-4a29-ae4b-b9049a5c8dc6",
        "parentId" : "b50622a3-328b-48ce-b428-0bd07f273a04",
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "yep, according to the rfc you need a leading slash.",
        "createdAt" : "2020-09-08T10:01:19Z",
        "updatedAt" : "2020-09-08T10:01:20Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      }
    ],
    "commit" : "05a1d035c2e74f50ac256733c38d9f9a607b65d5",
    "line" : 215,
    "diffHunk" : "@@ -1,1 +272,276 @@                   | \"@daml.js/create-daml-app\" `elem` depNames\n                   ] ++\n                   [ (depName, Aeson.String $ T.pack $ \"file:\" <> libRelPath)\n                   | tsLib <- allTsLibraries\n                   , let libName = tsLibraryName tsLib"
  },
  {
    "id" : "41b5cf6b-b507-4e5f-9aa0-07d4a86fbc33",
    "prId" : 7222,
    "prUrl" : "https://github.com/digital-asset/daml/pull/7222",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "54ac0c14-b08b-4b49-938a-790ae8151204",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "Do we ever expect to hit this case?",
        "createdAt" : "2020-09-07T11:55:43Z",
        "updatedAt" : "2020-09-08T09:50:39Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "2c83df45-d455-4e51-b667-c9c30ee73a2f",
        "parentId" : "54ac0c14-b08b-4b49-938a-790ae8151204",
        "authorId" : "6bbb482c-d598-4c97-ac37-b89d94b27ee4",
        "body" : "That would be the rare case when there are actually no dependencies. Not sure what kind of `package.json` files we generate.",
        "createdAt" : "2020-09-07T12:54:00Z",
        "updatedAt" : "2020-09-08T09:50:39Z",
        "lastEditedBy" : "6bbb482c-d598-4c97-ac37-b89d94b27ee4",
        "tags" : [
        ]
      }
    ],
    "commit" : "05a1d035c2e74f50ac256733c38d9f9a607b65d5",
    "line" : 232,
    "diffHunk" : "@@ -1,1 +289,293 @@          setPermissions packageJsonFile (setOwnerWritable True p)\n          BSL.writeFile packageJsonFile (Aeson.encode newPackageJson)\n        Nothing -> pure () -- Nothing to patch\n        _otherwise -> error $ \"malformed package.json:\" <> show packageJson\n    _otherwise -> error $ \"malformed package.json:\" <> show packageJson0"
  }
]