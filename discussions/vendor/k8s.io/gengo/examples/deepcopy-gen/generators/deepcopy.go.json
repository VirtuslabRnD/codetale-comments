[
  {
    "id" : "12d86191-43ff-4a58-9f8e-a25d6c8b98c4",
    "prId" : 40178,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/40178#pullrequestreview-17955342",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5323256f-f964-4c60-a8c4-e32343cdfa28",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "Can you give an example before and after for this chunk when you open the upstream.  It's not obvious at a glance what this is doing and I'm wondering if you already added similar code elsewhere.",
        "createdAt" : "2017-01-23T13:27:48Z",
        "updatedAt" : "2017-01-23T22:53:04Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "4477f69c-443a-4568-9b78-56c218790ffe",
        "parentId" : "5323256f-f964-4c60-a8c4-e32343cdfa28",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Yeah, basically your \"CanonicalizeImports\" strips the information that gengo needs in order to output to the correct location.  I think there is a better fix in gengo, but I don't have the brainpower to refine it yet (and haven't seen all the cases).\r\n\r\nBasically \"k8s.io/kubernetes/vendor/k8s.io/apimachinery/pkg/runtime\" is a valid go path (to various tools), and also to the output base location that we need to write to.",
        "createdAt" : "2017-01-23T15:58:59Z",
        "updatedAt" : "2017-01-23T22:53:04Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "c60809aead9a5d2db3bbad09c1897798018bb69c",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +185,189 @@\t\tif pkgNeedsGeneration {\n\t\t\tglog.V(3).Infof(\"Package %q needs generation\", i)\n\t\t\tpath := pkg.Path\n\t\t\t// if the source path is within a /vendor/ directory (for example,\n\t\t\t// k8s.io/kubernetes/vendor/k8s.io/apimachinery/pkg/apis/meta/v1), allow"
  }
]