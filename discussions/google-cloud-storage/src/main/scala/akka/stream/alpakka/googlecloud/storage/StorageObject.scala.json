[
  {
    "id" : "f195470f-45c2-4373-bdb0-fc8014324691",
    "prId" : 2388,
    "prUrl" : "https://github.com/akka/alpakka/pull/2388#pullrequestreview-487833862",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "94ba3576-6d49-4fa4-a58d-63e3ed17a9ae",
        "parentId" : null,
        "authorId" : "daac5cb5-ce57-4037-a06c-7adf6a3f10e6",
        "body" : "Same as above.",
        "createdAt" : "2020-09-14T14:39:02Z",
        "updatedAt" : "2020-09-17T11:31:36Z",
        "lastEditedBy" : "daac5cb5-ce57-4037-a06c-7adf6a3f10e6",
        "tags" : [
        ]
      }
    ],
    "commit" : "078493ad102903973fa5ef8e44072b5f16382a8c",
    "line" : 120,
    "diffHunk" : "@@ -1,1 +140,144 @@  def withTimeStorageClassUpdated(value: OffsetDateTime): StorageObject = copy(timeStorageClassUpdated = value)\n  def withCacheControl(value: String): StorageObject = copy(cacheControl = Option(value))\n  def withCustomTime(value: OffsetDateTime): StorageObject = copy(customTime = Option(value))\n  def withMetadata(value: Map[String, String]): StorageObject = copy(metadata = Option(value))\n  def withComponentCount(value: Int): StorageObject = copy(componentCount = Option(value))"
  },
  {
    "id" : "89a8d683-da47-4dd4-8018-d82fa50ec97d",
    "prId" : 2165,
    "prUrl" : "https://github.com/akka/alpakka/pull/2165#pullrequestreview-364193244",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "35cc8cff-3bb5-4385-8368-6f88ea69dd76",
        "parentId" : null,
        "authorId" : "daac5cb5-ce57-4037-a06c-7adf6a3f10e6",
        "body" : "I forgot about the `Option` converter :+1: ",
        "createdAt" : "2020-02-25T14:42:27Z",
        "updatedAt" : "2020-02-25T14:49:31Z",
        "lastEditedBy" : "daac5cb5-ce57-4037-a06c-7adf6a3f10e6",
        "tags" : [
        ]
      }
    ],
    "commit" : "75fdd0803f078c5fb8b479dbb17d4b8e4cf8403f",
    "line" : 40,
    "diffHunk" : "@@ -1,1 +85,89 @@  /** Java API */\n  def getContentType: akka.http.javadsl.model.ContentType = contentType.asInstanceOf[ContentType]\n  def getTimeDeleted: Optional[OffsetDateTime] = timeDeleted.asJava\n  def getContentDisposition: Optional[String] = contentDisposition.asJava\n  def getContentEncoding: Optional[String] = contentEncoding.asJava"
  }
]