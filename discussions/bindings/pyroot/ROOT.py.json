[
  {
    "id" : "9b7230a3-c271-4cfb-9c64-22e2f392a4bf",
    "prId" : 3107,
    "prUrl" : "https://github.com/root-project/root/pull/3107#pullrequestreview-182990395",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2b7f9be6-b010-490c-aef3-cac5178d59d4",
        "parentId" : null,
        "authorId" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "body" : "Also important to note here: the action is \"instant\", i.e. it triggers an event loop on the spot.\r\n\r\nRelated: does this documentation appear anywhere?",
        "createdAt" : "2018-12-06T13:52:17Z",
        "updatedAt" : "2018-12-11T16:17:30Z",
        "lastEditedBy" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "tags" : [
        ]
      },
      {
        "id" : "dd7543c3-47fe-469c-a3f5-ecf64fd485db",
        "parentId" : "2b7f9be6-b010-490c-aef3-cac5178d59d4",
        "authorId" : "3fcf578f-7d83-494c-917c-61c04f4fb016",
        "body" : "It's passed down to the pythonization. So you can see it with `help(...)` or `? ...` or whatever. But ofc our documentation of pythonizations is lacking (in terms of doxygen).",
        "createdAt" : "2018-12-06T14:31:08Z",
        "updatedAt" : "2018-12-11T16:17:30Z",
        "lastEditedBy" : "3fcf578f-7d83-494c-917c-61c04f4fb016",
        "tags" : [
        ]
      },
      {
        "id" : "93d54217-118f-42ea-9627-d18551b845d6",
        "parentId" : "2b7f9be6-b010-490c-aef3-cac5178d59d4",
        "authorId" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "body" : "I see. In any case could you explicitly mention that calling `AsNumpy` triggers an event loop?",
        "createdAt" : "2018-12-06T14:33:14Z",
        "updatedAt" : "2018-12-11T16:17:30Z",
        "lastEditedBy" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "tags" : [
        ]
      },
      {
        "id" : "b876ed7b-9f3f-48d8-bb15-fa07009a0bf5",
        "parentId" : "2b7f9be6-b010-490c-aef3-cac5178d59d4",
        "authorId" : "28bf1eea-b1ed-4971-b001-9f6e3a5ec44f",
        "body" : "Unless we go for saving as private data member the RResultPtrs and we make the full structure lazy as mentioned at the PPP meeting...",
        "createdAt" : "2018-12-06T21:37:27Z",
        "updatedAt" : "2018-12-11T16:17:30Z",
        "lastEditedBy" : "28bf1eea-b1ed-4971-b001-9f6e3a5ec44f",
        "tags" : [
        ]
      },
      {
        "id" : "c1af02a4-08d7-41cb-8398-ca4b3b3cbf91",
        "parentId" : "2b7f9be6-b010-490c-aef3-cac5178d59d4",
        "authorId" : "3fcf578f-7d83-494c-917c-61c04f4fb016",
        "body" : "@etejedor and I have checked. Either we make it lazy or we avoid the extra copy. Soon, I'll make a proposal without extra copy since this speeds up reading custom types by a factor of 4 (only doing the wrapping, not the copy of the complex type saves a lot of time).",
        "createdAt" : "2018-12-09T19:07:38Z",
        "updatedAt" : "2018-12-11T16:17:30Z",
        "lastEditedBy" : "3fcf578f-7d83-494c-917c-61c04f4fb016",
        "tags" : [
        ]
      }
    ],
    "commit" : "6447ccb14a5261d303a11110904f5a4164584d2e",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +403,407 @@\n    Returns:\n        dict: Dict with column names as keys and 1D numpy arrays with content as values\n    \"\"\"\n    # Import numpy lazily"
  },
  {
    "id" : "1ffe06fa-bb3a-4126-8640-d3717db126d4",
    "prId" : 3158,
    "prUrl" : "https://github.com/root-project/root/pull/3158#pullrequestreview-184158040",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d00ae9b2-3bd1-453c-825f-32180a656e1d",
        "parentId" : null,
        "authorId" : "3fcf578f-7d83-494c-917c-61c04f4fb016",
        "body" : "The only \"ugly\" thing is that we have to inject a method in the ROOT module.",
        "createdAt" : "2018-12-12T10:53:11Z",
        "updatedAt" : "2018-12-12T12:49:10Z",
        "lastEditedBy" : "3fcf578f-7d83-494c-917c-61c04f4fb016",
        "tags" : [
        ]
      },
      {
        "id" : "0ab927e1-b9d3-4dd0-b1ef-299d4027e46f",
        "parentId" : "d00ae9b2-3bd1-453c-825f-32180a656e1d",
        "authorId" : "4c541c6e-f658-422b-9f5a-7ae0b2a9a1f5",
        "body" : "We could also implement `_add__array_interface__` in a helpers.py and get a pointer to that method in `Pythonize.cxx`, right? It is not super important anyway since in the new PyROOT we will not have this problem.",
        "createdAt" : "2018-12-12T12:10:02Z",
        "updatedAt" : "2018-12-12T12:49:10Z",
        "lastEditedBy" : "4c541c6e-f658-422b-9f5a-7ae0b2a9a1f5",
        "tags" : [
        ]
      },
      {
        "id" : "5ca3349d-2927-4c70-ba37-840a53bb7eb6",
        "parentId" : "d00ae9b2-3bd1-453c-825f-32180a656e1d",
        "authorId" : "3fcf578f-7d83-494c-917c-61c04f4fb016",
        "body" : "We would need to add the `helper.py` as a part of the ROOT module. This seems more odd to me than putting it in `ROOT.py` directly. However, you're right. The new pyroot does solve this naturally much nicer.",
        "createdAt" : "2018-12-12T12:42:28Z",
        "updatedAt" : "2018-12-12T12:49:10Z",
        "lastEditedBy" : "3fcf578f-7d83-494c-917c-61c04f4fb016",
        "tags" : [
        ]
      }
    ],
    "commit" : "5ea826c588738da49eb8965bb6a48dd28bed81a1",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +242,246 @@\n# Array interface\ndef _add__array_interface__(self):\n    self.__array_interface__ = property(self._get__array_interface__)\n"
  }
]