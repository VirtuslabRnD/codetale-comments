[
  {
    "id" : "0713f849-0192-45ea-b11a-a96a2855cabf",
    "prId" : 6024,
    "prUrl" : "https://github.com/root-project/root/pull/6024#pullrequestreview-450571530",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d68b3c14-8934-40fa-83a6-0128f931e485",
        "parentId" : null,
        "authorId" : "3fcf578f-7d83-494c-917c-61c04f4fb016",
        "body" : "This was the actual bug?",
        "createdAt" : "2020-07-17T07:27:57Z",
        "updatedAt" : "2020-07-17T09:12:32Z",
        "lastEditedBy" : "3fcf578f-7d83-494c-917c-61c04f4fb016",
        "tags" : [
        ]
      },
      {
        "id" : "a9e3fcc6-8282-42e7-b0cc-716641fb4665",
        "parentId" : "d68b3c14-8934-40fa-83a6-0128f931e485",
        "authorId" : "4c541c6e-f658-422b-9f5a-7ae0b2a9a1f5",
        "body" : "This was unrelated with the corruption. This change (see two commits) it's related with adding boolean semantics to `CPPExcInstance`.",
        "createdAt" : "2020-07-17T07:51:21Z",
        "updatedAt" : "2020-07-17T09:12:32Z",
        "lastEditedBy" : "4c541c6e-f658-422b-9f5a-7ae0b2a9a1f5",
        "tags" : [
        ]
      },
      {
        "id" : "447b9817-9d0b-4c15-9b16-174be8698abe",
        "parentId" : "d68b3c14-8934-40fa-83a6-0128f931e485",
        "authorId" : "3fcf578f-7d83-494c-917c-61c04f4fb016",
        "body" : "I see, thanks!",
        "createdAt" : "2020-07-17T11:10:01Z",
        "updatedAt" : "2020-07-17T11:10:01Z",
        "lastEditedBy" : "3fcf578f-7d83-494c-917c-61c04f4fb016",
        "tags" : [
        ]
      }
    ],
    "commit" : "37ca6d6d0b09ace42e3f84d4055199a294514344",
    "line" : 83,
    "diffHunk" : "@@ -1,1 +235,239 @@    0,                             // tp_compare\n    (reprfunc)ep_repr,             // tp_repr\n    &ep_as_number,                 // tp_as_number\n    0,                             // tp_as_sequence\n    0,                             // tp_as_mapping"
  },
  {
    "id" : "58c41097-decc-4c02-81f5-17861efa0342",
    "prId" : 6024,
    "prUrl" : "https://github.com/root-project/root/pull/6024#pullrequestreview-450571422",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "27df09cc-0cfb-415a-ac26-28af4a494ca7",
        "parentId" : null,
        "authorId" : "3fcf578f-7d83-494c-917c-61c04f4fb016",
        "body" : "What about the other methods? If we treat the `CPPExcInstance_Type` as number and follow the Python number protocol, we'll still run into undefined operations, like adding stuff. Do we error out gracefully with a `0` in the type field or do we crash with a segfault?",
        "createdAt" : "2020-07-17T07:30:57Z",
        "updatedAt" : "2020-07-17T09:12:32Z",
        "lastEditedBy" : "3fcf578f-7d83-494c-917c-61c04f4fb016",
        "tags" : [
        ]
      },
      {
        "id" : "90f64456-7275-4bac-8471-4b7c7bb84c58",
        "parentId" : "27df09cc-0cfb-415a-ac26-28af4a494ca7",
        "authorId" : "4c541c6e-f658-422b-9f5a-7ae0b2a9a1f5",
        "body" : "`CPPExcInstance` inherits from Python's `Exception`, so for all the non-defined fields here we will fall back to `Exception`'s implementation.",
        "createdAt" : "2020-07-17T07:52:47Z",
        "updatedAt" : "2020-07-17T09:12:32Z",
        "lastEditedBy" : "4c541c6e-f658-422b-9f5a-7ae0b2a9a1f5",
        "tags" : [
        ]
      },
      {
        "id" : "522126ab-bc97-402a-bce5-82187a39f87b",
        "parentId" : "27df09cc-0cfb-415a-ac26-28af4a494ca7",
        "authorId" : "3fcf578f-7d83-494c-917c-61c04f4fb016",
        "body" : "Perfect!",
        "createdAt" : "2020-07-17T11:09:49Z",
        "updatedAt" : "2020-07-17T11:09:50Z",
        "lastEditedBy" : "3fcf578f-7d83-494c-917c-61c04f4fb016",
        "tags" : [
        ]
      }
    ],
    "commit" : "37ca6d6d0b09ace42e3f84d4055199a294514344",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +161,165 @@\n//-----------------------------------------------------------------------------\nstatic PyNumberMethods ep_as_number = {\n    0,                             // nb_add\n    0,                             // nb_subtract"
  },
  {
    "id" : "a0d3b8cb-8b47-48ff-93d5-4e726db11d61",
    "prId" : 6024,
    "prUrl" : "https://github.com/root-project/root/pull/6024#pullrequestreview-451007644",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ceceed57-c17b-4864-89b6-11ebdc125ca8",
        "parentId" : null,
        "authorId" : "ec1903c5-44e7-4fb1-bee9-25de61836fba",
        "body" : "Won't this always result in exactly the same `<whatever the type is>`, because both branches are the same.",
        "createdAt" : "2020-07-17T15:15:11Z",
        "updatedAt" : "2020-07-17T15:20:06Z",
        "lastEditedBy" : "ec1903c5-44e7-4fb1-bee9-25de61836fba",
        "tags" : [
        ]
      },
      {
        "id" : "ba3f7fdb-1ef6-4032-af05-ccea0a5c1456",
        "parentId" : "ceceed57-c17b-4864-89b6-11ebdc125ca8",
        "authorId" : "4c541c6e-f658-422b-9f5a-7ae0b2a9a1f5",
        "body" : "Nice catch! Although since it is harmless (and it is what is in upstream cppyy now) I will just leave it as it is.",
        "createdAt" : "2020-07-17T15:25:28Z",
        "updatedAt" : "2020-07-17T15:25:29Z",
        "lastEditedBy" : "4c541c6e-f658-422b-9f5a-7ae0b2a9a1f5",
        "tags" : [
        ]
      },
      {
        "id" : "629576dc-755a-4b61-b9bc-e27e60e5a7cb",
        "parentId" : "ceceed57-c17b-4864-89b6-11ebdc125ca8",
        "authorId" : "683b29c3-de55-4bfa-a8f9-8a107533453c",
        "body" : "Or rather, in the case of the code where the above was copied from, it did matter:\r\n```\r\n#if PY_VERSION_HEX < 0x03000000\r\n    , 0                            // nb_true_divide\r\n#else\r\n    , (binaryfunc)op_div_stub      // nb_true_divide\r\n#endif\r\n```\r\nsince for p2, op_div_stub is slotted into nb_divide instead of nb_true_divide. It only looks like it doesn't matter for `CPPExcInstance` as contrary to `CPPInstance` it does not have a divide stub.",
        "createdAt" : "2020-07-17T23:54:10Z",
        "updatedAt" : "2020-07-17T23:54:10Z",
        "lastEditedBy" : "683b29c3-de55-4bfa-a8f9-8a107533453c",
        "tags" : [
        ]
      }
    ],
    "commit" : "37ca6d6d0b09ace42e3f84d4055199a294514344",
    "line" : 63,
    "diffHunk" : "@@ -1,1 +210,214 @@#else\n    , 0                            // nb_true_divide\n#endif\n    , 0                            // nb_inplace_floor_divide\n    , 0                            // nb_inplace_true_divide"
  }
]