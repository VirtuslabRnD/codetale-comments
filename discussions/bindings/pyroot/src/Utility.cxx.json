[
  {
    "id" : "31a5cbc7-3baf-4448-ab4a-4adce1595c82",
    "prId" : 1753,
    "prUrl" : "https://github.com/root-project/root/pull/1753#pullrequestreview-105290483",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d8b53151-9d30-45cc-b2c2-87a160706f29",
        "parentId" : null,
        "authorId" : "4c541c6e-f658-422b-9f5a-7ae0b2a9a1f5",
        "body" : "I was doing a bit of research about how to set Python properties from C using the Python-C API, and I found [this](https://docs.python.org/2/c-api/structures.html#c.PyGetSetDef).\r\n",
        "createdAt" : "2018-03-16T13:35:13Z",
        "updatedAt" : "2018-03-21T13:19:13Z",
        "lastEditedBy" : "4c541c6e-f658-422b-9f5a-7ae0b2a9a1f5",
        "tags" : [
        ]
      },
      {
        "id" : "2ca5fefd-bb52-4e5d-9660-47f26c379d52",
        "parentId" : "d8b53151-9d30-45cc-b2c2-87a160706f29",
        "authorId" : "3fcf578f-7d83-494c-917c-61c04f4fb016",
        "body" : "I've seen the doc you referenced in the link as well, but this applies for adding new types in C extensions. I do not think that we have access to the data structure needed to use this. Have a look [here](https://docs.python.org/3/extending/newtypes.html).\r\n\r\nThey use the struct `PyGetSetDef` in the struct `PyTypeObject` to define the getters and setters. I don't think that this works for us or do you see where we could manipulate this information?",
        "createdAt" : "2018-03-20T10:31:38Z",
        "updatedAt" : "2018-03-21T13:19:13Z",
        "lastEditedBy" : "3fcf578f-7d83-494c-917c-61c04f4fb016",
        "tags" : [
        ]
      }
    ],
    "commit" : "2b22528180f3284fd506cd4ad3a75280712abe07",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +260,264 @@Bool_t PyROOT::Utility::AddProperty(PyObject *pyclass, const char *func, const char *property)\n{\n   PyObject *builtin = PyImport_ImportModule(\"__builtin__\");\n   PyObject *property_class = PyObject_GetAttrString(builtin, \"property\");\n   PyObject *func_obj = PyObject_GetAttrString(pyclass, func);"
  }
]