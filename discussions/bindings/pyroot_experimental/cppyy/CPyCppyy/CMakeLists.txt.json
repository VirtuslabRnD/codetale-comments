[
  {
    "id" : "aa744977-b5ae-47cd-a1cf-54a66590e91f",
    "prId" : 2161,
    "prUrl" : "https://github.com/root-project/root/pull/2161#pullrequestreview-131200164",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0ea86265-99a9-4d54-95e0-aaad4b885e51",
        "parentId" : null,
        "authorId" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "body" : "This might clash with other `libcppyy.so` builds. Can we rename this to `ROOTcppyy`?",
        "createdAt" : "2018-06-13T08:25:03Z",
        "updatedAt" : "2018-06-22T12:37:36Z",
        "lastEditedBy" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "tags" : [
        ]
      },
      {
        "id" : "fa3b6b33-f9a8-432e-bccc-205f87d6a8a8",
        "parentId" : "0ea86265-99a9-4d54-95e0-aaad4b885e51",
        "authorId" : "4c541c6e-f658-422b-9f5a-7ae0b2a9a1f5",
        "body" : "Changing the name of `libcppyy.so` would make Cppyy fail. If you check [this line](https://github.com/amadio/root/blob/cppyy/bindings/pyroot_experimental/cppyy/cppyy/python/cppyy/_cpython_cppyy.py#L19) in Cppyy's Python code, it is trying to import the extension module and use it from Python. For that line to work, it needs that a library called `libcppyy.so` is in the `PYTHONPATH`.\r\n\r\nA similar thing happens with the other Cppyy library, `libcppyy_backend.so`, and [this line](https://github.com/amadio/root/blob/cppyy/bindings/pyroot_experimental/cppyy/cppyy-backend/clingwrapper/python/cppyy_backend/loader.py#L9).",
        "createdAt" : "2018-06-19T13:21:49Z",
        "updatedAt" : "2018-06-22T12:37:36Z",
        "lastEditedBy" : "4c541c6e-f658-422b-9f5a-7ae0b2a9a1f5",
        "tags" : [
        ]
      },
      {
        "id" : "897d602b-4ee4-4da9-8e90-28a24de8832a",
        "parentId" : "0ea86265-99a9-4d54-95e0-aaad4b885e51",
        "authorId" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "body" : "I am predicting a mess of runtime / environment fragility. We can address this when we get there.\r\n\r\n(We *know* we want load load *our* library and that we do not want to interfere with the users' pip stuff etc; we should dial our library very explicitly without having to ask Python to resolve anything. This even to the extreme that we should not even *have* separate dynamic libraries for this: they should all be part of one single `libROOTPyROOT` or whatever you call it.)",
        "createdAt" : "2018-06-22T13:47:40Z",
        "updatedAt" : "2018-06-22T13:47:40Z",
        "lastEditedBy" : "09b7e073-cbeb-42e8-aa22-8b1468de56ae",
        "tags" : [
        ]
      }
    ],
    "commit" : "14429d84400bafaeb50ff48ee6ccc0e21d2de701",
    "line" : 39,
    "diffHunk" : "@@ -1,1 +37,41 @@)\n\nadd_library(cppyy SHARED ${headers} ${sources})\ntarget_compile_options(cppyy PRIVATE\n  -Wno-shadow -Wno-strict-aliasing -Wno-unused-but-set-parameter)"
  },
  {
    "id" : "c56b0cb3-fe6e-4550-8c79-6a4cf32324fd",
    "prId" : 5083,
    "prUrl" : "https://github.com/root-project/root/pull/5083#pullrequestreview-379410398",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fcd46219-eeae-46be-9195-f6f76743294e",
        "parentId" : null,
        "authorId" : "b3162d7b-6062-4c19-9553-67738ce206f7",
        "body" : "I think there is separate PR for this: https://github.com/root-project/root/pull/5158\r\nMake sure you don't resolve the same thing in a different places...",
        "createdAt" : "2020-03-23T11:44:01Z",
        "updatedAt" : "2020-03-24T13:54:44Z",
        "lastEditedBy" : "b3162d7b-6062-4c19-9553-67738ce206f7",
        "tags" : [
        ]
      },
      {
        "id" : "5e9c0ab1-4a6a-4c79-b440-32a5a0b35332",
        "parentId" : "fcd46219-eeae-46be-9195-f6f76743294e",
        "authorId" : "7b5ff0c6-b6b3-4b50-ad87-968f3a2fbec9",
        "body" : "@etejedor it should be fine because here I just reshuffle while in the other PR it's changed, can you confirm?",
        "createdAt" : "2020-03-23T12:35:42Z",
        "updatedAt" : "2020-03-24T13:54:44Z",
        "lastEditedBy" : "7b5ff0c6-b6b3-4b50-ad87-968f3a2fbec9",
        "tags" : [
        ]
      },
      {
        "id" : "75dbf72d-5db5-48f9-b602-0ef7655a4af0",
        "parentId" : "fcd46219-eeae-46be-9195-f6f76743294e",
        "authorId" : "4c541c6e-f658-422b-9f5a-7ae0b2a9a1f5",
        "body" : "@oshadura , @maxgalli is not introducing that change, just moving it. The disabling of those warnings for Python3.8 was introduced by @stwunsch here: 9a540f30\r\n",
        "createdAt" : "2020-03-23T13:08:20Z",
        "updatedAt" : "2020-03-24T13:54:44Z",
        "lastEditedBy" : "4c541c6e-f658-422b-9f5a-7ae0b2a9a1f5",
        "tags" : [
        ]
      }
    ],
    "commit" : "2082d7cec3d55bcff2207a2a1703bc4eba1b18d2",
    "line" : 66,
    "diffHunk" : "@@ -1,1 +79,83 @@  endif()\n\n  # Disables warnings due to new field tp_vectorcall in Python 3.8\n  if(NOT MSVC AND ${python_version_string} STRGREATER_EQUAL \"3_8\")\n    target_compile_options(${libname} PRIVATE -Wno-missing-field-initializers)"
  },
  {
    "id" : "fed0cbae-7f66-4911-a208-4345d5a8de50",
    "prId" : 5083,
    "prUrl" : "https://github.com/root-project/root/pull/5083#pullrequestreview-379419964",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8e2b62fa-c96b-44ad-9ed4-2d494c2f7094",
        "parentId" : null,
        "authorId" : "b3162d7b-6062-4c19-9553-67738ce206f7",
        "body" : "Can we avoid it or maybe use source directory? Which header do you need? From comment it is not clear. (I am not happy to add all possible ROOT headers here...)",
        "createdAt" : "2020-03-23T11:46:12Z",
        "updatedAt" : "2020-03-24T13:54:44Z",
        "lastEditedBy" : "b3162d7b-6062-4c19-9553-67738ce206f7",
        "tags" : [
        ]
      },
      {
        "id" : "8de680e5-b116-414d-9c27-bc949e2f85ce",
        "parentId" : "8e2b62fa-c96b-44ad-9ed4-2d494c2f7094",
        "authorId" : "7b5ff0c6-b6b3-4b50-ad87-968f3a2fbec9",
        "body" : "do you want me to add a #FIXME here?",
        "createdAt" : "2020-03-23T13:20:22Z",
        "updatedAt" : "2020-03-24T13:54:44Z",
        "lastEditedBy" : "7b5ff0c6-b6b3-4b50-ad87-968f3a2fbec9",
        "tags" : [
        ]
      }
    ],
    "commit" : "2082d7cec3d55bcff2207a2a1703bc4eba1b18d2",
    "line" : 73,
    "diffHunk" : "@@ -1,1 +84,88 @@  endif()\n\n  target_include_directories(${libname} PRIVATE ${CMAKE_BINARY_DIR}/include) # needed for string_view backport\n\n  target_include_directories(${libname} PUBLIC ${python_include_dir}"
  }
]