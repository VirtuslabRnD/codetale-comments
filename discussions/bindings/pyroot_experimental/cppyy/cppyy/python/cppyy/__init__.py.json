[
  {
    "id" : "c3f59eda-6264-4c5d-9b7c-f5d33b8f9ee8",
    "prId" : 5334,
    "prUrl" : "https://github.com/root-project/root/pull/5334#pullrequestreview-390670145",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e3fd82d7-401a-4a79-b78a-fa05d692dea9",
        "parentId" : null,
        "authorId" : "7b5ff0c6-b6b3-4b50-ad87-968f3a2fbec9",
        "body" : "I'm not sure I understand, once we raise the error due to the mismatch between the cppy_backend variable and the python version used what do we do? we just exit and then it's up to the user understanding that a different python needs to be used?",
        "createdAt" : "2020-04-09T09:53:32Z",
        "updatedAt" : "2020-04-09T09:53:46Z",
        "lastEditedBy" : "7b5ff0c6-b6b3-4b50-ad87-968f3a2fbec9",
        "tags" : [
        ]
      },
      {
        "id" : "48864f8b-6406-4ce8-a483-d950af534ee0",
        "parentId" : "e3fd82d7-401a-4a79-b78a-fa05d692dea9",
        "authorId" : "4c541c6e-f658-422b-9f5a-7ae0b2a9a1f5",
        "body" : "In the case where the user specified `CPPYY_BACKEND_LIBRARY`, we check if the library has a version that conflicts with the current Python version we are running on. If so, we error out with an informative message to the user about this situation. I think it is better to stop and tell the user that the their environment has a conflict with the Python they are running.",
        "createdAt" : "2020-04-09T10:22:08Z",
        "updatedAt" : "2020-04-09T10:22:08Z",
        "lastEditedBy" : "4c541c6e-f658-422b-9f5a-7ae0b2a9a1f5",
        "tags" : [
        ]
      }
    ],
    "commit" : "5b73439ee7b494223f742ca780ae1306ec93d8d5",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +69,73 @@           return ''\n       else:\n           raise RuntimeError('CPPYY_BACKEND_LIBRARY variable ({})'\n                              ' does not match Python version {}.{}'\n                              .format(cbl_var, major, minor))"
  }
]