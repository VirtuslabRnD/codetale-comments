[
  {
    "id" : "4b2ce92c-11fe-45cf-b9c2-dfaeb40ff2f9",
    "prId" : 5310,
    "prUrl" : "https://github.com/root-project/root/pull/5310#pullrequestreview-397460937",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "22b0313a-f9c2-4f8b-8566-6d63ebc60223",
        "parentId" : null,
        "authorId" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "body" : "```suggestion\r\n                # RVec arguments become a pointer/size pair of arguments\r\n                c_input_types += [nb.types.CPointer(get_numba_type(get_inner_type(t))), nb.int32]\r\n```",
        "createdAt" : "2020-04-21T16:28:28Z",
        "updatedAt" : "2020-04-24T13:20:11Z",
        "lastEditedBy" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "tags" : [
        ]
      }
    ],
    "commit" : "70f1bbfc99028895d29c7ba057f9b1c289436d8a",
    "line" : 88,
    "diffHunk" : "@@ -1,1 +86,90 @@        for t in input_types:\n            if 'RVec' in t:\n                c_input_types += [nb.types.CPointer(get_numba_type(get_inner_type(t))), nb.int32]\n            else:\n                c_input_types.append(get_numba_type(t))"
  },
  {
    "id" : "008fd0d8-9add-4937-99d6-52f8451257c4",
    "prId" : 5310,
    "prUrl" : "https://github.com/root-project/root/pull/5310#pullrequestreview-399711916",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "49157790-7cbf-442b-8a2d-826415006069",
        "parentId" : null,
        "authorId" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "body" : "Printing a function gets you something like `<function f at 0x7f415c1e0040>`, maybe nicer:\r\n\r\n```suggestion\r\n            raise Exception('Failed to jit Python callable {} with numba.jit'.format(func.__name__))\r\n```",
        "createdAt" : "2020-04-21T16:47:39Z",
        "updatedAt" : "2020-04-24T13:20:11Z",
        "lastEditedBy" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "tags" : [
        ]
      },
      {
        "id" : "3642e3e7-b462-4845-bcd4-15f18b860ebd",
        "parentId" : "49157790-7cbf-442b-8a2d-826415006069",
        "authorId" : "3fcf578f-7d83-494c-917c-61c04f4fb016",
        "body" : "It's good to see the pointer so you can debug whether you actually see the function you expect. Since you can replace in Python an object with a given name at any time, a pointer is the only id you have.",
        "createdAt" : "2020-04-24T07:38:14Z",
        "updatedAt" : "2020-04-24T13:20:11Z",
        "lastEditedBy" : "3fcf578f-7d83-494c-917c-61c04f4fb016",
        "tags" : [
        ]
      },
      {
        "id" : "f9ace162-1076-48e5-b75b-20919fc92feb",
        "parentId" : "49157790-7cbf-442b-8a2d-826415006069",
        "authorId" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "body" : ":+1: ",
        "createdAt" : "2020-04-24T07:42:25Z",
        "updatedAt" : "2020-04-24T13:20:11Z",
        "lastEditedBy" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "tags" : [
        ]
      }
    ],
    "commit" : "70f1bbfc99028895d29c7ba057f9b1c289436d8a",
    "line" : 131,
    "diffHunk" : "@@ -1,1 +129,133 @@            nbjit = nb.jit(nb_return_type(*nb_input_types), nopython=True, inline='always')(func)\n        except:\n            raise Exception('Failed to jit Python callable {} with numba.jit'.format(func))\n        func.numba_func = nbjit\n"
  },
  {
    "id" : "82f473ec-8b14-4ce3-bf32-034a71d3ba66",
    "prId" : 5310,
    "prUrl" : "https://github.com/root-project/root/pull/5310#pullrequestreview-399767447",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3aa57977-2e15-4316-9a2b-a8badd8e57d8",
        "parentId" : null,
        "authorId" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "body" : "should we return the numba-jitted function instead? Is it less surprising if `@Numba.Declare` returns a numba-jitted function or the function itself?",
        "createdAt" : "2020-04-21T17:38:50Z",
        "updatedAt" : "2020-04-24T13:20:11Z",
        "lastEditedBy" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "tags" : [
        ]
      },
      {
        "id" : "e96d5e94-5870-49dd-bb7e-148f24012409",
        "parentId" : "3aa57977-2e15-4316-9a2b-a8badd8e57d8",
        "authorId" : "3fcf578f-7d83-494c-917c-61c04f4fb016",
        "body" : "Hmm, ... I don't know!",
        "createdAt" : "2020-04-22T07:07:30Z",
        "updatedAt" : "2020-04-24T13:20:11Z",
        "lastEditedBy" : "3fcf578f-7d83-494c-917c-61c04f4fb016",
        "tags" : [
        ]
      },
      {
        "id" : "4ec603b4-0c22-4383-b1cf-d633d4f802d0",
        "parentId" : "3aa57977-2e15-4316-9a2b-a8badd8e57d8",
        "authorId" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "body" : "i think either solution is fine as long as the documentation of `ROOT.Numba.Declare` says what the decorator does to the function (either nothing, or it transforms it into a numba function).\r\n\r\nWhich makes me think: are there any user docs for this feature?",
        "createdAt" : "2020-04-23T15:01:09Z",
        "updatedAt" : "2020-04-24T13:20:11Z",
        "lastEditedBy" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "tags" : [
        ]
      },
      {
        "id" : "15fb62e5-dafb-4162-a114-6e06256cddf8",
        "parentId" : "3aa57977-2e15-4316-9a2b-a8badd8e57d8",
        "authorId" : "3fcf578f-7d83-494c-917c-61c04f4fb016",
        "body" : "There's a tutorial :D And I'll add the numba jitted function as an attribute!",
        "createdAt" : "2020-04-24T07:03:51Z",
        "updatedAt" : "2020-04-24T13:20:11Z",
        "lastEditedBy" : "3fcf578f-7d83-494c-917c-61c04f4fb016",
        "tags" : [
        ]
      },
      {
        "id" : "90ebfd45-8c9b-4bda-b4f3-d3dccd845ec5",
        "parentId" : "3aa57977-2e15-4316-9a2b-a8badd8e57d8",
        "authorId" : "3fcf578f-7d83-494c-917c-61c04f4fb016",
        "body" : "Now you can get from the callable `f` the numba jitted func as `f.jitted`. Any better suggestions for the wording?",
        "createdAt" : "2020-04-24T07:10:52Z",
        "updatedAt" : "2020-04-24T13:20:11Z",
        "lastEditedBy" : "3fcf578f-7d83-494c-917c-61c04f4fb016",
        "tags" : [
        ]
      },
      {
        "id" : "784f3357-b66f-4ca6-8718-908ccbcc70f9",
        "parentId" : "3aa57977-2e15-4316-9a2b-a8badd8e57d8",
        "authorId" : "3fcf578f-7d83-494c-917c-61c04f4fb016",
        "body" : "Probably, `f.jitted_func`?",
        "createdAt" : "2020-04-24T07:11:12Z",
        "updatedAt" : "2020-04-24T13:20:11Z",
        "lastEditedBy" : "3fcf578f-7d83-494c-917c-61c04f4fb016",
        "tags" : [
        ]
      },
      {
        "id" : "3028593b-8140-4bf7-b394-914bcdc14cd1",
        "parentId" : "3aa57977-2e15-4316-9a2b-a8badd8e57d8",
        "authorId" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "body" : "> There's a tutorial\r\n\r\nThere is a discoverability issue (users don't go look for a tutorial for a feature they don't know), but it's not for this PR to solve it. Maybe we should have a \"Using RDF from python\" section in the RDF user guide that points to things like `Numba.Declare`.\r\n\r\n`f.jitted[_func]` could refer to either numba's jitted function or cling's. I'd suggest  something like `f.numba_func`",
        "createdAt" : "2020-04-24T07:26:25Z",
        "updatedAt" : "2020-04-24T13:20:11Z",
        "lastEditedBy" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "tags" : [
        ]
      },
      {
        "id" : "bd9b7495-33af-4fda-9832-9233a3f7fd6d",
        "parentId" : "3aa57977-2e15-4316-9a2b-a8badd8e57d8",
        "authorId" : "3fcf578f-7d83-494c-917c-61c04f4fb016",
        "body" : "Taken!",
        "createdAt" : "2020-04-24T07:46:32Z",
        "updatedAt" : "2020-04-24T13:20:11Z",
        "lastEditedBy" : "3fcf578f-7d83-494c-917c-61c04f4fb016",
        "tags" : [
        ]
      },
      {
        "id" : "bfe5cd90-e0e2-45b2-ae65-e44bf1de2263",
        "parentId" : "3aa57977-2e15-4316-9a2b-a8badd8e57d8",
        "authorId" : "3fcf578f-7d83-494c-917c-61c04f4fb016",
        "body" : "Taken the `f.numba_func` and also added a rather massiv docstring to the outer decorator.",
        "createdAt" : "2020-04-24T07:57:00Z",
        "updatedAt" : "2020-04-24T13:20:11Z",
        "lastEditedBy" : "3fcf578f-7d83-494c-917c-61c04f4fb016",
        "tags" : [
        ]
      },
      {
        "id" : "9ee4b4b2-6c41-4757-92d5-4d1ff87be8b1",
        "parentId" : "3aa57977-2e15-4316-9a2b-a8badd8e57d8",
        "authorId" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "body" : "great!",
        "createdAt" : "2020-04-24T09:01:49Z",
        "updatedAt" : "2020-04-24T13:20:11Z",
        "lastEditedBy" : "f2c15ca6-f995-45d3-a26d-40d002e52d07",
        "tags" : [
        ]
      }
    ],
    "commit" : "70f1bbfc99028895d29c7ba057f9b1c289436d8a",
    "line" : 307,
    "diffHunk" : "@@ -1,1 +305,309 @@        func.__cpp_wrapper__ = cppwrappercode\n\n        return func\n\n    return inner"
  },
  {
    "id" : "7739f21f-7f88-48ae-83dc-5af2f7d25337",
    "prId" : 5310,
    "prUrl" : "https://github.com/root-project/root/pull/5310#pullrequestreview-400122501",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "44c2c2d6-0943-4dc6-a145-8b9d4ae52db0",
        "parentId" : null,
        "authorId" : "4c541c6e-f658-422b-9f5a-7ae0b2a9a1f5",
        "body" : "We can leave this file here, for now. But perhaps at some point we will need to reorganize. Everything that is not a pythonization but belongs more to the interface of the ROOT module, could go in an e.g. `interface` submodule (containing now `_facade.py`, `_numbadeclare.py`, `_application.py`).",
        "createdAt" : "2020-04-24T14:40:54Z",
        "updatedAt" : "2020-04-24T14:40:54Z",
        "lastEditedBy" : "4c541c6e-f658-422b-9f5a-7ae0b2a9a1f5",
        "tags" : [
        ]
      },
      {
        "id" : "cba5602f-df5b-4ea8-8e98-51f2ae16d292",
        "parentId" : "44c2c2d6-0943-4dc6-a145-8b9d4ae52db0",
        "authorId" : "3fcf578f-7d83-494c-917c-61c04f4fb016",
        "body" : "Agreed!",
        "createdAt" : "2020-04-24T17:05:31Z",
        "updatedAt" : "2020-04-24T17:05:31Z",
        "lastEditedBy" : "3fcf578f-7d83-494c-917c-61c04f4fb016",
        "tags" : [
        ]
      }
    ],
    "commit" : "70f1bbfc99028895d29c7ba057f9b1c289436d8a",
    "line" : 1,
    "diffHunk" : "@@ -1,1 +-1,3 @@from cppyy import gbl as gbl_namespace\n\n"
  }
]