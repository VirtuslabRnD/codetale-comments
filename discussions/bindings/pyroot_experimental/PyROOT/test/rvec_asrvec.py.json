[
  {
    "id" : "48cd31c6-bf92-4139-87ee-62c70beaaa0f",
    "prId" : 3368,
    "prUrl" : "https://github.com/root-project/root/pull/3368#pullrequestreview-202034131",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3740d7b8-4c96-42ec-826b-9540d13ca4f0",
        "parentId" : null,
        "authorId" : "3fcf578f-7d83-494c-917c-61c04f4fb016",
        "body" : "The ownership is now managed by Python!",
        "createdAt" : "2019-02-11T10:32:16Z",
        "updatedAt" : "2019-02-11T14:00:37Z",
        "lastEditedBy" : "3fcf578f-7d83-494c-917c-61c04f4fb016",
        "tags" : [
        ]
      }
    ],
    "commit" : "aa26d04c083324232e5f6f096154b1a585cde31d",
    "line" : 79,
    "diffHunk" : "@@ -1,1 +77,81 @@        self.assertEqual(rvec[0], rvec2[0])\n\n    def test_ownership(self):\n        \"\"\"\n        Test ownership of returned RVec (to be owned by Python)"
  },
  {
    "id" : "164029ea-1867-438d-9e34-4943484b14ca",
    "prId" : 3368,
    "prUrl" : "https://github.com/root-project/root/pull/3368#pullrequestreview-202103905",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "feb801a2-3553-4abb-ad66-0ae73da52c9c",
        "parentId" : null,
        "authorId" : "3fcf578f-7d83-494c-917c-61c04f4fb016",
        "body" : "This is tricky. We do not increase the refcount of the numpy array we use for adoption. However, now it could happen that the GC destroys the memory of the numpy array and our adopted rvec points to invalid memory.\r\nStill, I think this is the way to go.\r\n\r\n@etejedor Do you agree?",
        "createdAt" : "2019-02-11T10:33:49Z",
        "updatedAt" : "2019-02-11T14:00:37Z",
        "lastEditedBy" : "3fcf578f-7d83-494c-917c-61c04f4fb016",
        "tags" : [
        ]
      },
      {
        "id" : "df9e4007-06b8-4516-be91-5176c59deccf",
        "parentId" : "feb801a2-3553-4abb-ad66-0ae73da52c9c",
        "authorId" : "4c541c6e-f658-422b-9f5a-7ae0b2a9a1f5",
        "body" : "What is the disadvantage of increasing the reference of the numpy array and prevent any premature deletion?\r\nHow do other libraries that adopt numpy arrays handle this case?",
        "createdAt" : "2019-02-11T13:02:39Z",
        "updatedAt" : "2019-02-11T14:00:37Z",
        "lastEditedBy" : "4c541c6e-f658-422b-9f5a-7ae0b2a9a1f5",
        "tags" : [
        ]
      },
      {
        "id" : "fa37eb7b-db29-4b89-b575-8ca1a8b2cb5e",
        "parentId" : "feb801a2-3553-4abb-ad66-0ae73da52c9c",
        "authorId" : "3fcf578f-7d83-494c-917c-61c04f4fb016",
        "body" : "Hm good questions, just checked:\r\n\r\n```python\r\nimport ROOT\r\nimport numpy as np\r\nimport sys\r\n\r\nrvec = ROOT.ROOT.VecOps.RVec(\"float\")(1)\r\nprint(sys.getrefcount(rvec))\r\n# Returns: 2\r\n\r\nnpy = np.asarray(rvec)\r\nprint(sys.getrefcount(rvec))\r\n# Returns: 3\r\n\r\ndel npy\r\nprint(sys.getrefcount(rvec))\r\n# Returns: 2\r\n```",
        "createdAt" : "2019-02-11T13:11:47Z",
        "updatedAt" : "2019-02-11T14:00:37Z",
        "lastEditedBy" : "3fcf578f-7d83-494c-917c-61c04f4fb016",
        "tags" : [
        ]
      },
      {
        "id" : "f818f1a2-84a3-4d06-8655-12da666c33b9",
        "parentId" : "feb801a2-3553-4abb-ad66-0ae73da52c9c",
        "authorId" : "3fcf578f-7d83-494c-917c-61c04f4fb016",
        "body" : "So yes, they increment the refcount. But who decreases the refcount after the adopted container is deleted? How does the original container know about this?",
        "createdAt" : "2019-02-11T13:12:42Z",
        "updatedAt" : "2019-02-11T14:00:37Z",
        "lastEditedBy" : "3fcf578f-7d83-494c-917c-61c04f4fb016",
        "tags" : [
        ]
      },
      {
        "id" : "8ab27c01-746a-4c3a-b524-918ae81fd331",
        "parentId" : "feb801a2-3553-4abb-ad66-0ae73da52c9c",
        "authorId" : "3fcf578f-7d83-494c-917c-61c04f4fb016",
        "body" : "I see only the option to add the adopted object to the dictionary of the rvec. i'll give it a try.",
        "createdAt" : "2019-02-11T13:16:34Z",
        "updatedAt" : "2019-02-11T14:00:37Z",
        "lastEditedBy" : "3fcf578f-7d83-494c-917c-61c04f4fb016",
        "tags" : [
        ]
      },
      {
        "id" : "dd330a9e-feac-4116-8c37-3a8032f92410",
        "parentId" : "feb801a2-3553-4abb-ad66-0ae73da52c9c",
        "authorId" : "3fcf578f-7d83-494c-917c-61c04f4fb016",
        "body" : "ok, i've pushed a fix. now the returned `RVec` has the adopted object as the attribute `__adopted__` (see the tests). Now we have this behaviour:\r\n\r\n```python\r\nimport ROOT\r\nimport numpy as np\r\nimport sys\r\n\r\nnpy = np.array([1, 2])\r\nprint(sys.getrefcount(npy))\r\n# Returns: 2\r\n\r\nrvec = ROOT.AsRVec(npy)\r\nrvec.__adopted__ = npy\r\nprint(sys.getrefcount(npy))\r\n# Returns: 3\r\n\r\ndel rvec\r\nprint(sys.getrefcount(npy))\r\n# Returns: 2\r\n```",
        "createdAt" : "2019-02-11T13:28:13Z",
        "updatedAt" : "2019-02-11T14:00:37Z",
        "lastEditedBy" : "3fcf578f-7d83-494c-917c-61c04f4fb016",
        "tags" : [
        ]
      }
    ],
    "commit" : "aa26d04c083324232e5f6f096154b1a585cde31d",
    "line" : 96,
    "diffHunk" : "@@ -1,1 +94,98 @@        self.assertEqual(id(rvec.__adopted__), id(np_obj))\n\n    def test_refcount(self):\n        \"\"\"\n        Test reference count of returned RVec"
  },
  {
    "id" : "12bff05a-8be9-409e-981c-50ba194b708a",
    "prId" : 3368,
    "prUrl" : "https://github.com/root-project/root/pull/3368#pullrequestreview-202105407",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e3e2ee41-617e-4e79-bf86-7994521d0656",
        "parentId" : null,
        "authorId" : "3fcf578f-7d83-494c-917c-61c04f4fb016",
        "body" : "Here is the test for the `__adopted__` attribute.",
        "createdAt" : "2019-02-11T13:31:30Z",
        "updatedAt" : "2019-02-11T14:00:37Z",
        "lastEditedBy" : "3fcf578f-7d83-494c-917c-61c04f4fb016",
        "tags" : [
        ]
      }
    ],
    "commit" : "aa26d04c083324232e5f6f096154b1a585cde31d",
    "line" : 87,
    "diffHunk" : "@@ -1,1 +85,89 @@        self.assertEqual(rvec.__python_owns__, True)\n\n    def test_attribute_adopted(self):\n        \"\"\"\n        Test __adopted__ attribute of returned RVecs"
  }
]