[
  {
    "id" : "8997a71b-53fd-44bf-8d51-8c792286f11f",
    "prId" : 3445,
    "prUrl" : "https://github.com/root-project/root/pull/3445#pullrequestreview-205289565",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c8409dd2-d2a1-434f-804f-02b386ce21f4",
        "parentId" : null,
        "authorId" : "3fcf578f-7d83-494c-917c-61c04f4fb016",
        "body" : "`NotImplemented` is kind of unspecific. Wouldn't it be better to run in an exception like `raise Exception(\"Comparison of {} and {} is not valid.\".format(self, o))`?",
        "createdAt" : "2019-02-19T15:37:45Z",
        "updatedAt" : "2019-02-19T15:39:30Z",
        "lastEditedBy" : "3fcf578f-7d83-494c-917c-61c04f4fb016",
        "tags" : [
        ]
      },
      {
        "id" : "efc5516e-210e-4ac9-9ffb-f126d9f7f26d",
        "parentId" : "c8409dd2-d2a1-434f-804f-02b386ce21f4",
        "authorId" : "3fcf578f-7d83-494c-917c-61c04f4fb016",
        "body" : "Or ` TypeError`?",
        "createdAt" : "2019-02-19T15:39:57Z",
        "updatedAt" : "2019-02-19T15:39:57Z",
        "lastEditedBy" : "3fcf578f-7d83-494c-917c-61c04f4fb016",
        "tags" : [
        ]
      },
      {
        "id" : "3c9134a6-9382-4551-a10d-5c76298149d5",
        "parentId" : "c8409dd2-d2a1-434f-804f-02b386ce21f4",
        "authorId" : "3fcf578f-7d83-494c-917c-61c04f4fb016",
        "body" : "Ah ok, I see: https://docs.python.org/3/library/constants.html#NotImplemented",
        "createdAt" : "2019-02-19T15:40:34Z",
        "updatedAt" : "2019-02-19T15:40:35Z",
        "lastEditedBy" : "3fcf578f-7d83-494c-917c-61c04f4fb016",
        "tags" : [
        ]
      },
      {
        "id" : "76f198a1-c2b5-4579-a0ff-aa5cb8e94e4a",
        "parentId" : "c8409dd2-d2a1-434f-804f-02b386ce21f4",
        "authorId" : "3fcf578f-7d83-494c-917c-61c04f4fb016",
        "body" : "Ok, it works exactly as you've done it. `NotImplemented` gives Python the possibility to try another operator before throwing an error. The name is weird though ...",
        "createdAt" : "2019-02-19T15:42:16Z",
        "updatedAt" : "2019-02-19T15:42:16Z",
        "lastEditedBy" : "3fcf578f-7d83-494c-917c-61c04f4fb016",
        "tags" : [
        ]
      },
      {
        "id" : "54d9a07f-b7d0-44e2-a42d-8cd995bc7d6c",
        "parentId" : "c8409dd2-d2a1-434f-804f-02b386ce21f4",
        "authorId" : "4c541c6e-f658-422b-9f5a-7ae0b2a9a1f5",
        "body" : "Yes, seems the way to go for binary special methods. I will try the other operand upon return of `NotImplemented`.",
        "createdAt" : "2019-02-19T15:46:50Z",
        "updatedAt" : "2019-02-19T15:46:51Z",
        "lastEditedBy" : "4c541c6e-f658-422b-9f5a-7ae0b2a9a1f5",
        "tags" : [
        ]
      }
    ],
    "commit" : "e65cfeff444090fca8a7e5d6c6f0c5700e7cb665",
    "line" : 43,
    "diffHunk" : "@@ -1,1 +41,45 @@        return self.Compare(o) == -1\n    else:\n        return NotImplemented\n\ndef _le(self, o):"
  }
]