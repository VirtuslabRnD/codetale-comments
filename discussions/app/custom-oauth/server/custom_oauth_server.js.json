[
  {
    "id" : "9aade5ab-66f9-4e6c-bd2f-29ba2ec8e1b5",
    "prId" : 16114,
    "prUrl" : "https://github.com/RocketChat/Rocket.Chat/pull/16114#pullrequestreview-341102734",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5ad804e5-29cf-40ef-8f1a-721b0fc22f6c",
        "parentId" : null,
        "authorId" : "9e666942-cd54-4d1b-8cc7-4188822a684b",
        "body" : "I'm not sure if the javascript guarantee any kind of order for this case, maybe use a Map instead.",
        "createdAt" : "2020-01-02T20:08:29Z",
        "updatedAt" : "2020-01-29T22:03:45Z",
        "lastEditedBy" : "9e666942-cd54-4d1b-8cc7-4188822a684b",
        "tags" : [
        ]
      },
      {
        "id" : "78dd2b17-2712-41dc-8148-7ca5d29700f0",
        "parentId" : "5ad804e5-29cf-40ef-8f1a-721b0fc22f6c",
        "authorId" : "6b2de464-07b6-478f-bdd0-b8707d59c1c1",
        "body" : "It doesn't need to be in order",
        "createdAt" : "2020-01-10T11:22:29Z",
        "updatedAt" : "2020-01-29T22:03:45Z",
        "lastEditedBy" : "6b2de464-07b6-478f-bdd0-b8707d59c1c1",
        "tags" : [
        ]
      }
    ],
    "commit" : "697762dbaf320f78366edde0dc8048334d3778cf",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +18,22 @@const BeforeUpdateOrCreateUserFromExternalService = [];\n\nconst normalizers = {\n\t// Set 'id' to '_id' for any sources that provide it\n\t_id(identity) {"
  },
  {
    "id" : "89e5fc8d-4eb2-4cd8-b8f2-fee728f975c3",
    "prId" : 14121,
    "prUrl" : "https://github.com/RocketChat/Rocket.Chat/pull/14121#pullrequestreview-226272285",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4d7e79c7-0f5f-4ab6-ad20-ee7d642f9d63",
        "parentId" : null,
        "authorId" : "beb0c9ad-a917-4bb6-948e-12669fdc6784",
        "body" : "We may need to add something to actually honor this.  I'm looking through meteors code base and don't see anything that even honors expiresAt :(",
        "createdAt" : "2019-04-12T17:40:11Z",
        "updatedAt" : "2019-04-16T14:26:32Z",
        "lastEditedBy" : "beb0c9ad-a917-4bb6-948e-12669fdc6784",
        "tags" : [
        ]
      },
      {
        "id" : "746ce429-30d2-478f-bf5d-27e24815a018",
        "parentId" : "4d7e79c7-0f5f-4ab6-ad20-ee7d642f9d63",
        "authorId" : "7b2384d1-cf48-4170-be43-91421b27d404",
        "body" : "I'll have a look tomorrow, and create a pull request to use expiresAt and refreshToken, if I can't find it's already there.\r\n\r\nBtw. can you point me to some docu on how to build a Docker container from my changed sources / git.",
        "createdAt" : "2019-04-12T19:03:21Z",
        "updatedAt" : "2019-04-16T14:26:32Z",
        "lastEditedBy" : "7b2384d1-cf48-4170-be43-91421b27d404",
        "tags" : [
        ]
      },
      {
        "id" : "d13a2a4d-4011-46a5-970c-23401e37078b",
        "parentId" : "4d7e79c7-0f5f-4ab6-ad20-ee7d642f9d63",
        "authorId" : "beb0c9ad-a917-4bb6-948e-12669fdc6784",
        "body" : "do `meteor build --directory /folder/you/want/to/build/in`\r\n\r\nThen `cp .docker/Dockerfile /folder/you/want/to/build/in`\r\n\r\nfinally: go into the folder and `docker build -t theimage:tag .`\r\n\r\nShould do the trick\r\n",
        "createdAt" : "2019-04-12T20:23:29Z",
        "updatedAt" : "2019-04-16T14:26:32Z",
        "lastEditedBy" : "beb0c9ad-a917-4bb6-948e-12669fdc6784",
        "tags" : [
        ]
      }
    ],
    "commit" : "9555bd762b33dd39358cc4520abd3fc833016f6f",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +192,196 @@\t\t\t\taccessToken: response.access_token,\n\t\t\t\tidToken: response.id_token,\n\t\t\t\texpiresAt: (+new Date) + (1000 * parseInt(response.expires_in, 10)),\n\t\t\t};\n"
  },
  {
    "id" : "7b13075b-a178-4630-b925-91555f9deec8",
    "prId" : 13761,
    "prUrl" : "https://github.com/RocketChat/Rocket.Chat/pull/13761#pullrequestreview-226337916",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3434abd3-bdeb-43d1-bd63-ea39f59fb5e7",
        "parentId" : null,
        "authorId" : "6964290b-9c1c-4342-b385-246ac9f1cd7f",
        "body" : "moved it here",
        "createdAt" : "2019-04-13T03:38:59Z",
        "updatedAt" : "2019-04-15T22:10:38Z",
        "lastEditedBy" : "6964290b-9c1c-4342-b385-246ac9f1cd7f",
        "tags" : [
        ]
      },
      {
        "id" : "8492ca6b-0d66-45d4-ac0e-c23ae2834c95",
        "parentId" : "3434abd3-bdeb-43d1-bd63-ea39f59fb5e7",
        "authorId" : "beb0c9ad-a917-4bb6-948e-12669fdc6784",
        "body" : "👍  just a note it will only happen on subsequent logins.  This portion is only ran on login after the user has been created.",
        "createdAt" : "2019-04-13T03:42:40Z",
        "updatedAt" : "2019-04-15T22:10:38Z",
        "lastEditedBy" : "beb0c9ad-a917-4bb6-948e-12669fdc6784",
        "tags" : [
        ]
      },
      {
        "id" : "e1f299c4-89c8-47d3-910b-af8baa7776b3",
        "parentId" : "3434abd3-bdeb-43d1-bd63-ea39f59fb5e7",
        "authorId" : "6964290b-9c1c-4342-b385-246ac9f1cd7f",
        "body" : "mmmh, then we should move it elsewhere, because it should update always",
        "createdAt" : "2019-04-13T03:44:20Z",
        "updatedAt" : "2019-04-15T22:10:38Z",
        "lastEditedBy" : "6964290b-9c1c-4342-b385-246ac9f1cd7f",
        "tags" : [
        ]
      },
      {
        "id" : "27a46248-159d-4bc1-b815-74e96c0f52a1",
        "parentId" : "3434abd3-bdeb-43d1-bd63-ea39f59fb5e7",
        "authorId" : "6964290b-9c1c-4342-b385-246ac9f1cd7f",
        "body" : "but the name of the hook \"BeforeUpdateOrCreateUserFromExternalService\" suggest another effect, or?",
        "createdAt" : "2019-04-13T03:45:44Z",
        "updatedAt" : "2019-04-15T22:10:38Z",
        "lastEditedBy" : "6964290b-9c1c-4342-b385-246ac9f1cd7f",
        "tags" : [
        ]
      },
      {
        "id" : "3088d0d0-5d15-41f0-ab6e-71b3a9494257",
        "parentId" : "3434abd3-bdeb-43d1-bd63-ea39f59fb5e7",
        "authorId" : "beb0c9ad-a917-4bb6-948e-12669fdc6784",
        "body" : "Unfortunately will have to divide it up.  This location for updating users.\r\n\r\nThen inside of `validateNewUser` by doing something like:\r\n\r\n```\r\nusers.roles = ['role1', 'role2'];\r\n```",
        "createdAt" : "2019-04-13T03:46:28Z",
        "updatedAt" : "2019-04-15T22:10:38Z",
        "lastEditedBy" : "beb0c9ad-a917-4bb6-948e-12669fdc6784",
        "tags" : [
        ]
      },
      {
        "id" : "56f730d9-9495-4a71-9773-7d794250e7da",
        "parentId" : "3434abd3-bdeb-43d1-bd63-ea39f59fb5e7",
        "authorId" : "beb0c9ad-a917-4bb6-948e-12669fdc6784",
        "body" : "You _*might*_ be able to some how add a field on serviceData an then else where manage to pull the roles off of the object and then run logic to insert it.  But it will be extremely dirty",
        "createdAt" : "2019-04-13T03:47:46Z",
        "updatedAt" : "2019-04-15T22:10:38Z",
        "lastEditedBy" : "beb0c9ad-a917-4bb6-948e-12669fdc6784",
        "tags" : [
        ]
      },
      {
        "id" : "37e86a54-ea78-4c36-baa7-9682959c17dd",
        "parentId" : "3434abd3-bdeb-43d1-bd63-ea39f59fb5e7",
        "authorId" : "6964290b-9c1c-4342-b385-246ac9f1cd7f",
        "body" : "ok, so i should have direct setting of roles in validateNewUser\r\nand the updating go roles with calls to `import { addUserRoles, removeUserFromRoles } from '../../authorization'` within BeforeUpdateOrCreateUserFromExternalService, right?\r\n\r\n![image](https://user-images.githubusercontent.com/979121/56074388-b6dc5b80-5db1-11e9-9d88-cf727f4a9449.png)\r\n",
        "createdAt" : "2019-04-13T03:55:23Z",
        "updatedAt" : "2019-04-15T22:10:38Z",
        "lastEditedBy" : "6964290b-9c1c-4342-b385-246ac9f1cd7f",
        "tags" : [
        ]
      },
      {
        "id" : "7c9dd3b2-91d6-4b54-b440-bc8b621d7878",
        "parentId" : "3434abd3-bdeb-43d1-bd63-ea39f59fb5e7",
        "authorId" : "beb0c9ad-a917-4bb6-948e-12669fdc6784",
        "body" : "if it were me something like this inside of validateNewUser\r\n\r\n```\r\nif (this.mergeRoles && this.rolesClaim && user.services[this.name]) {\r\n  const identity = user.services[this.name];\r\n\r\n  if (Array.isArray(identity[this.rolesClaim])) {\r\n    user.roles = identity[this.rolesClaim].filter((val) => val != 'offline_access' && val != 'uma_authorization');\r\n  }\r\n}\r\n```",
        "createdAt" : "2019-04-13T04:06:41Z",
        "updatedAt" : "2019-04-15T22:10:38Z",
        "lastEditedBy" : "beb0c9ad-a917-4bb6-948e-12669fdc6784",
        "tags" : [
        ]
      }
    ],
    "commit" : "fa7e7acd9775c1a44df76c5f05bd81ef750075cf",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +323,327 @@\t\t\t\t}\n\n\t\t\t\tif (this.mergeRoles) {\n\t\t\t\t\tupdateRolesFromSSO(user, serviceData, this.rolesClaim);\n\t\t\t\t}"
  }
]