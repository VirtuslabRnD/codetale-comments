[
  {
    "id" : "2673f4f0-658f-4369-84e8-be70272e3449",
    "prId" : 22321,
    "prUrl" : "https://github.com/RocketChat/Rocket.Chat/pull/22321#pullrequestreview-682498293",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e1d6883d-0b0a-476f-8032-522379e30967",
        "parentId" : null,
        "authorId" : "61ddb048-36d3-4039-ab51-6db005c8c855",
        "body" : "this can be added to array above ([line 490](https://github.com/RocketChat/Rocket.Chat/pull/22321/files#diff-a54a068ba97aea1ca55267c7e9150910a7f0ccaddd5e362968afb51e036317b8R490))",
        "createdAt" : "2021-06-14T03:41:36Z",
        "updatedAt" : "2021-06-14T03:41:40Z",
        "lastEditedBy" : "61ddb048-36d3-4039-ab51-6db005c8c855",
        "tags" : [
        ]
      },
      {
        "id" : "1bd3f8cc-ec8e-4ed3-9af8-84bdbcbbcacf",
        "parentId" : "e1d6883d-0b0a-476f-8032-522379e30967",
        "authorId" : "61ddb048-36d3-4039-ab51-6db005c8c855",
        "body" : "actually, no it can't because it is not public =\\",
        "createdAt" : "2021-06-14T03:45:22Z",
        "updatedAt" : "2021-06-14T03:45:22Z",
        "lastEditedBy" : "61ddb048-36d3-4039-ab51-6db005c8c855",
        "tags" : [
        ]
      }
    ],
    "commit" : "ca628c411c332264439a432054300a0b6f1f3ae5",
    "line" : 103,
    "diffHunk" : "@@ -1,1 +493,497 @@\t\t});\n\n\t\trcSettings.Livechat_history_monitor_type = settings.get('Livechat_history_monitor_type');\n\n\t\trcSettings.Livechat_Show_Connecting = this.showConnecting();"
  },
  {
    "id" : "53d95a43-6c1e-49c1-a015-0aa7f1483c79",
    "prId" : 18261,
    "prUrl" : "https://github.com/RocketChat/Rocket.Chat/pull/18261#pullrequestreview-459551230",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "83f231aa-9ab9-4262-8ae4-b01576df4394",
        "parentId" : null,
        "authorId" : "e286e399-a847-4b77-8052-d1ba61e04074",
        "body" : "You need to retrieve here the `Message_MaxAllowedSize` setting as well.\r\n```suggestion\r\n\t\t\t'Livechat_message_character_limit',\r\n\t\t\t'Message_MaxAllowedSize',\r\n```",
        "createdAt" : "2020-08-01T04:31:29Z",
        "updatedAt" : "2020-08-02T01:53:52Z",
        "lastEditedBy" : "e286e399-a847-4b77-8052-d1ba61e04074",
        "tags" : [
        ]
      }
    ],
    "commit" : "50aed57a503411a7c8d56d7470dc2bfab487afa8",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +430,434 @@\t\t\t'Livechat_title_color',\n\t\t\t'Livechat_enable_message_character_limit',\n\t\t\t'Livechat_message_character_limit',\n\t\t\t'Message_MaxAllowedSize',\n\t\t\t'Livechat_enabled',"
  },
  {
    "id" : "9d7a949e-15ee-4294-b3b3-be3df1b40ac1",
    "prId" : 17503,
    "prUrl" : "https://github.com/RocketChat/Rocket.Chat/pull/17503#pullrequestreview-405887227",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "90aa7d38-c4e3-4a34-a23d-1ce190a1f065",
        "parentId" : null,
        "authorId" : "b46a28c1-01dc-4bcc-aa52-d54e9985c838",
        "body" : "Is this `console.error` intentional here?",
        "createdAt" : "2020-05-05T13:28:27Z",
        "updatedAt" : "2020-05-05T15:15:15Z",
        "lastEditedBy" : "b46a28c1-01dc-4bcc-aa52-d54e9985c838",
        "tags" : [
        ]
      },
      {
        "id" : "f85d832a-aa5a-49ef-9c30-435ad0fa1b83",
        "parentId" : "90aa7d38-c4e3-4a34-a23d-1ce190a1f065",
        "authorId" : "e286e399-a847-4b77-8052-d1ba61e04074",
        "body" : "Yeah.",
        "createdAt" : "2020-05-05T15:12:25Z",
        "updatedAt" : "2020-05-05T15:15:15Z",
        "lastEditedBy" : "e286e399-a847-4b77-8052-d1ba61e04074",
        "tags" : [
        ]
      }
    ],
    "commit" : "1555a12311073450e1371cf93b3a472745f92d5e",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +613,617 @@\t\t\tMeteor.defer(() => callbacks.run('livechat.chatQueued', LivechatRooms.findOneById(rid)));\n\t\t} catch (e) {\n\t\t\tconsole.error(e);\n\t\t\tthrow new Meteor.Error('error-returning-inquiry', 'Error returning inquiry to the queue', { method: 'livechat:returnRoomAsInquiry' });\n\t\t}"
  },
  {
    "id" : "d13305e7-2766-4f3c-851e-536898b09b56",
    "prId" : 17033,
    "prUrl" : "https://github.com/RocketChat/Rocket.Chat/pull/17033#pullrequestreview-398252605",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bd85c413-9762-4e21-a636-62c707624f5b",
        "parentId" : null,
        "authorId" : "abb054e6-b771-4069-83f6-eac631c0a29d",
        "body" : "```suggestion\r\n\t\t\t/**\r\n\t\t\t * @deprecated the `AppInterface.ILivechatRoomClosedHandler` event will be removed\r\n\t\t\t * in the next major version of the Apps-Engine\r\n\t\t\t */\r\n\t\t\tApps.getBridges().getListenerBridge().livechatEvent(AppInterface.ILivechatRoomClosedHandler, room);\r\n\t\t\tApps.getBridges().getListenerBridge().livechatEvent(AppInterface.IPostLivechatRoomClosed, room);\r\n```",
        "createdAt" : "2020-04-21T21:35:51Z",
        "updatedAt" : "2020-04-30T14:26:10Z",
        "lastEditedBy" : "abb054e6-b771-4069-83f6-eac631c0a29d",
        "tags" : [
        ]
      },
      {
        "id" : "df71f348-3d08-4662-8e36-9926ec4c0571",
        "parentId" : "bd85c413-9762-4e21-a636-62c707624f5b",
        "authorId" : "d662aabf-06e8-46f9-a6fb-6ccb7bf9606b",
        "body" : "Thank you!",
        "createdAt" : "2020-04-22T14:31:12Z",
        "updatedAt" : "2020-04-30T14:26:10Z",
        "lastEditedBy" : "d662aabf-06e8-46f9-a6fb-6ccb7bf9606b",
        "tags" : [
        ]
      }
    ],
    "commit" : "b53be08fc868f4e7c43a2fb38ae994b867a49ff2",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +374,378 @@\t\t\t */\n\t\t\tApps.getBridges().getListenerBridge().livechatEvent(AppInterface.ILivechatRoomClosedHandler, room);\n\t\t\tApps.getBridges().getListenerBridge().livechatEvent(AppInterface.IPostLivechatRoomClosed, room);\n\t\t\tcallbacks.run('livechat.closeRoom', room);\n\t\t});"
  },
  {
    "id" : "8ed80dfb-a2c5-4d6d-942b-36f2db631d6d",
    "prId" : 15230,
    "prUrl" : "https://github.com/RocketChat/Rocket.Chat/pull/15230#pullrequestreview-289267723",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a79705f0-6614-4891-9764-d1fd478a5711",
        "parentId" : null,
        "authorId" : "409df6ab-3b03-4605-a9f9-90ba7bb0018e",
        "body" : "Using destructuring you could do something like:\r\n\r\n```suggestion\r\n\t\tconst transferData = {\r\n\t\t\ttransferredBy,\r\n\t\t\tts: new Date(),\r\n\t\t\tscope: nextDepartment ? 'department' : 'agent',\r\n\t\t\t...previousDepartment && { previousDepartment },\r\n\t\t\t...nextDepartment && { nextDepartment },\r\n\t\t\t...previousAgent && { previousAgent },\r\n\t\t\t...nextAgent && { nextAgent },\r\n\t\t};\r\n```\r\n\r\nAnother important thing: It would be very helpful storing more information about the agents, I mean, not only the `id`.\r\nWhat you think about storing the `username`, also?\r\nWe could store the `username` from both `previousAgent` and `previousAgent`, as well as from the `transferredBy`. Then we would store an object instead of a string.\r\n\r\nIf you don't mind, you could add a new field on the `transferredBy`, defining whether it is a `user` or` guest`.\r\n",
        "createdAt" : "2019-09-17T13:55:38Z",
        "updatedAt" : "2019-11-13T01:22:37Z",
        "lastEditedBy" : "409df6ab-3b03-4605-a9f9-90ba7bb0018e",
        "tags" : [
        ]
      }
    ],
    "commit" : "d4ab16ed27d24d0a794ea48a0e178f29f9c3f456",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +476,480 @@\t\t}));\n\t\tconst user = Users.findOneByUsername(transferredBy.username);\n\t\tconst transfer = {\n\t\t\ttransferData: {\n\t\t\t\ttransferredBy,"
  },
  {
    "id" : "16237507-6575-491f-92d8-31dd018f1732",
    "prId" : 15230,
    "prUrl" : "https://github.com/RocketChat/Rocket.Chat/pull/15230#pullrequestreview-315675744",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d585ca6a-180f-4216-8a93-f6be8143010e",
        "parentId" : null,
        "authorId" : "409df6ab-3b03-4605-a9f9-90ba7bb0018e",
        "body" : "```suggestion\r\n\t\treturn RoutingManager.unassignAgent(inquiry, departmentId) && this.saveTransferHistory(room, transferData);\r\n```",
        "createdAt" : "2019-11-12T16:38:02Z",
        "updatedAt" : "2019-11-13T01:22:37Z",
        "lastEditedBy" : "409df6ab-3b03-4605-a9f9-90ba7bb0018e",
        "tags" : [
        ]
      }
    ],
    "commit" : "d4ab16ed27d24d0a794ea48a0e178f29f9c3f456",
    "line" : 68,
    "diffHunk" : "@@ -1,1 +527,531 @@\t\tconst transferData = { roomId: rid, scope: 'queue', departmentId, transferredBy };\n\t\tthis.saveTransferHistory(room, transferData);\n\t\treturn RoutingManager.unassignAgent(inquiry, departmentId);\n\t},\n"
  },
  {
    "id" : "13cb5324-c4c0-4217-99bc-bd2f0b8e1049",
    "prId" : 15230,
    "prUrl" : "https://github.com/RocketChat/Rocket.Chat/pull/15230#pullrequestreview-315675744",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "838a1baf-6b45-46c1-9fda-24b184586c62",
        "parentId" : null,
        "authorId" : "409df6ab-3b03-4605-a9f9-90ba7bb0018e",
        "body" : "```suggestion\r\n\t\tconst result = await RoutingManager.transferRoom(room, guest, transferData) && this.saveTransferHistory(room, transferData);\r\n```",
        "createdAt" : "2019-11-12T16:39:03Z",
        "updatedAt" : "2019-11-13T01:22:37Z",
        "lastEditedBy" : "409df6ab-3b03-4605-a9f9-90ba7bb0018e",
        "tags" : [
        ]
      }
    ],
    "commit" : "d4ab16ed27d24d0a794ea48a0e178f29f9c3f456",
    "line" : 49,
    "diffHunk" : "@@ -1,1 +490,494 @@\n\tasync transfer(room, guest, transferData) {\n\t\tconst result = await RoutingManager.transferRoom(room, guest, transferData);\n\t\tif (!result) {\n\t\t\treturn false;"
  },
  {
    "id" : "c4cddeac-5a9d-402e-9248-7446894682b8",
    "prId" : 13818,
    "prUrl" : "https://github.com/RocketChat/Rocket.Chat/pull/13818#pullrequestreview-217778326",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "acd91718-b970-4582-87dd-ce4f52480841",
        "parentId" : null,
        "authorId" : "08341c92-9d32-4db9-b11e-644bd64f0c85",
        "body" : "@renatobecker As far as I can see, this change will always add all agents to the inquiry. The inquiry triggers a notification which may result in an email if the agent is not online.\r\n=> Will this change not lead to a behavior where all agents always get notified via mail of all livechats? ",
        "createdAt" : "2019-03-22T10:31:44Z",
        "updatedAt" : "2019-03-22T15:11:22Z",
        "lastEditedBy" : "08341c92-9d32-4db9-b11e-644bd64f0c85",
        "tags" : [
        ]
      },
      {
        "id" : "1825079e-2a9f-4fb3-a53e-eec7642c81ab",
        "parentId" : "acd91718-b970-4582-87dd-ce4f52480841",
        "authorId" : "409df6ab-3b03-4605-a9f9-90ba7bb0018e",
        "body" : "Hi @mrsimpson! Actually, we were facing an issue related to `receiver` field missing in the fake `subscription` created to send notifications to online agents. I just pushed a new commit fixing this issue, as well as we'll only consider online agents to send notifications.\r\n\r\nThanks. ",
        "createdAt" : "2019-03-22T14:14:38Z",
        "updatedAt" : "2019-03-22T15:11:22Z",
        "lastEditedBy" : "409df6ab-3b03-4605-a9f9-90ba7bb0018e",
        "tags" : [
        ]
      }
    ],
    "commit" : "411551909737bfc19085ad7d182ef9707f623d22",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +534,538 @@\t\t// get the agents of the department\n\t\tif (departmentId) {\n\t\t\tconst agents = Livechat.getAgents(departmentId);\n\t\t\tif (agents.count() === 0) {\n\t\t\t\treturn false;"
  },
  {
    "id" : "a53274c6-0f1b-4798-86ea-2821834dc745",
    "prId" : 22689,
    "prUrl" : "https://github.com/RocketChat/Rocket.Chat/pull/22689#pullrequestreview-709518447",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6beb4292-5d38-4775-bbff-5134e22c5669",
        "parentId" : null,
        "authorId" : "2491d7cd-a9b5-4520-8c24-7c13b370f008",
        "body" : "I didn't understand why we need to maintain the same status on both `room` and `message` object. Doesn't it seem redundant?  ",
        "createdAt" : "2021-07-19T08:25:32Z",
        "updatedAt" : "2021-07-19T08:25:33Z",
        "lastEditedBy" : "2491d7cd-a9b5-4520-8c24-7c13b370f008",
        "tags" : [
        ]
      },
      {
        "id" : "0ad09646-c28e-4418-bcb3-c343e55d3001",
        "parentId" : "6beb4292-5d38-4775-bbff-5134e22c5669",
        "authorId" : "2491d7cd-a9b5-4520-8c24-7c13b370f008",
        "body" : "or is there any difference between the statuses stored in each object? If so could you please explain?",
        "createdAt" : "2021-07-19T08:26:47Z",
        "updatedAt" : "2021-07-19T08:26:47Z",
        "lastEditedBy" : "2491d7cd-a9b5-4520-8c24-7c13b370f008",
        "tags" : [
        ]
      },
      {
        "id" : "ae5b8aa2-5d7c-4206-8a89-c568566746e5",
        "parentId" : "6beb4292-5d38-4775-bbff-5134e22c5669",
        "authorId" : "df2fb533-a4bf-4974-8e25-64bb7dcc7b3b",
        "body" : "Here I followed the same way Jitsi is done. Instead of `callStatus` we have `jitsiTimeout` stored in both the `room` and `message` object to know the status of the call. If the timeout expires then it means the call ended otherwise the call hasn't yet ended. \r\nWe need to make sure that one call is initiated at a time in one room. In order to know whether the room has an ongoing call or not we need the call status in the `room` object. And to maintain the call status initiated by the message action buttons, we need the call status in the `message` object.",
        "createdAt" : "2021-07-19T09:27:09Z",
        "updatedAt" : "2021-07-19T09:29:39Z",
        "lastEditedBy" : "df2fb533-a4bf-4974-8e25-64bb7dcc7b3b",
        "tags" : [
        ]
      },
      {
        "id" : "5c8a66e3-af40-4795-aab2-70cff6376f1d",
        "parentId" : "6beb4292-5d38-4775-bbff-5134e22c5669",
        "authorId" : "2491d7cd-a9b5-4520-8c24-7c13b370f008",
        "body" : "> We need to make sure that one call is initiated at a time in one room. In order to know whether the room has an ongoing call or not we need the call status in the room object.\r\n\r\n:top: This totally makes sense. I also think that the room object should be the right place to store the call status since we have a rule that only one call can be initiated at a time in one room.\r\n\r\n> And to maintain the call status initiated by the message action buttons, we need the call status in the message object.\r\n\r\n:top: This doesn't makes sense, why can't we check the room's `callStatus`  property when any action button is clicked? All the checks you're performing [here](https://github.com/RocketChat/Rocket.Chat/pull/22689/files#diff-0e697798268df9d4a2d39482864eb4cf479141030a7287dd1208d51ff8c07885R12) and [here](https://github.com/RocketChat/Rocket.Chat/pull/22689/files#diff-0e697798268df9d4a2d39482864eb4cf479141030a7287dd1208d51ff8c07885R23) on the message `callStatus` property, why not perform the same check on the room `callStatus` property?\r\n\r\n",
        "createdAt" : "2021-07-20T06:41:51Z",
        "updatedAt" : "2021-07-20T06:41:51Z",
        "lastEditedBy" : "2491d7cd-a9b5-4520-8c24-7c13b370f008",
        "tags" : [
        ]
      },
      {
        "id" : "e7ded4a5-fc23-46bc-af0b-22b715bbee67",
        "parentId" : "6beb4292-5d38-4775-bbff-5134e22c5669",
        "authorId" : "df2fb533-a4bf-4974-8e25-64bb7dcc7b3b",
        "body" : "@murtaza98 Earlier we had not decided that we would be removing join call and end call action buttons if the call ends. So keeping that case in mind, I had kept the state in the message object of that actionLink because every actionLink had its own `callStatus`. Given that now based on our discussion we are doing away with the actionLink when the call ends, I think we do not need this field anymore here. I'll remove it.",
        "createdAt" : "2021-07-20T15:41:58Z",
        "updatedAt" : "2021-07-20T16:04:56Z",
        "lastEditedBy" : "df2fb533-a4bf-4974-8e25-64bb7dcc7b3b",
        "tags" : [
        ]
      }
    ],
    "commit" : "826a48f787cffd2435b368e4bcd16a72842931d3",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +1202,1206 @@\t},\n\tupdateCallStatus(callId, rid, status, user = null) {\n\t\tRooms.setCallStatus(rid, status);\n\t\tif (status === 'ended' && user) {\n\t\t\treturn updateMessage({ _id: callId, msg: '', actionLinks: [], endTs: new Date() }, user);"
  },
  {
    "id" : "0bd061ab-98f6-4718-b7c6-4e5e511a2151",
    "prId" : 22772,
    "prUrl" : "https://github.com/RocketChat/Rocket.Chat/pull/22772#pullrequestreview-716049913",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6b40a43e-ba63-48df-b612-51d7429cd933",
        "parentId" : null,
        "authorId" : "34fde88b-e8d3-4125-af3a-0d4cc8bd83a8",
        "body" : "Can you check if id is a String? Since this is a public facing endpoint, i don't want ppl to be passing objects as `id`.\r\n`check(id, Match.Maybe(String));`",
        "createdAt" : "2021-07-27T15:07:10Z",
        "updatedAt" : "2021-07-27T15:07:16Z",
        "lastEditedBy" : "34fde88b-e8d3-4125-af3a-0d4cc8bd83a8",
        "tags" : [
        ]
      },
      {
        "id" : "ed64c393-5a1b-49fd-88da-32223c4a9051",
        "parentId" : "6b40a43e-ba63-48df-b612-51d7429cd933",
        "authorId" : "2491d7cd-a9b5-4520-8c24-7c13b370f008",
        "body" : "Makes sense, I've added it",
        "createdAt" : "2021-07-27T15:13:11Z",
        "updatedAt" : "2021-07-27T15:13:11Z",
        "lastEditedBy" : "2491d7cd-a9b5-4520-8c24-7c13b370f008",
        "tags" : [
        ]
      }
    ],
    "commit" : "9e15293f8e4beed94731872addee9b5bea312004",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +225,229 @@\t\tcheck(token, String);\n\t\tcheck(id, Match.Maybe(String));\n\n\t\tlet userId;\n\t\tconst updateUser = {"
  }
]