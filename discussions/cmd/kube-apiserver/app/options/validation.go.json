[
  {
    "id" : "66b58073-d7b5-4ba4-acaf-e90ffc585ec3",
    "prId" : 96527,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/96527#pullrequestreview-529519033",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3e5fb2e4-811d-411a-9428-2bb298525f72",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "I think there's combinations of setting things to true and false that might make this return the wrong thing. Is this check necessary at all? It'll default on now, right?",
        "createdAt" : "2020-11-12T21:34:33Z",
        "updatedAt" : "2020-11-13T23:21:24Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "965a7699-9172-480f-9af8-68ff30fd170c",
        "parentId" : "3e5fb2e4-811d-411a-9428-2bb298525f72",
        "authorId" : "521b6fc2-4b36-4594-8b5b-9d1e5bcc8759",
        "body" : "if none of the three are set, it'll default to on. but if any of the three is set, we must check for the presence of all three, right? in that case, the highest precedence value basically overrides everything else, which is what the loop is doing",
        "createdAt" : "2020-11-12T21:36:52Z",
        "updatedAt" : "2020-11-13T23:21:24Z",
        "lastEditedBy" : "521b6fc2-4b36-4594-8b5b-9d1e5bcc8759",
        "tags" : [
        ]
      },
      {
        "id" : "6de001eb-b049-40f8-82d8-48bc5ffe4c20",
        "parentId" : "3e5fb2e4-811d-411a-9428-2bb298525f72",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Oh I see, it's ordered. OK yeah this makes sense.",
        "createdAt" : "2020-11-12T21:41:10Z",
        "updatedAt" : "2020-11-13T23:21:24Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "642b11483030e5aedbd6f43aeac3cbe40255b3b6",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +142,146 @@\t\t\t\treturn []error{fmt.Errorf(\"%s=false conflicts with APIPriorityAndFairness feature gate\", testConfig)}\n\t\t\t}\n\t\t\tif strings.Contains(enabledAPIString, fmt.Sprintf(\"%s=true\", testConfig)) {\n\t\t\t\treturn nil\n\t\t\t}"
  },
  {
    "id" : "88f46a1f-ed9d-4a39-9f1d-e953f5fd05da",
    "prId" : 91824,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/91824#pullrequestreview-497903512",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d6a5f273-3f98-4914-942e-0407218a9e1b",
        "parentId" : null,
        "authorId" : "c490e441-2b9f-41f2-8559-d47be0ea8836",
        "body" : "Why did you change this? This doesn't match the actual command-line options",
        "createdAt" : "2020-07-16T13:40:07Z",
        "updatedAt" : "2020-10-26T18:06:38Z",
        "lastEditedBy" : "c490e441-2b9f-41f2-8559-d47be0ea8836",
        "tags" : [
        ]
      },
      {
        "id" : "b568bf06-856e-44a9-921f-088211e3b516",
        "parentId" : "d6a5f273-3f98-4914-942e-0407218a9e1b",
        "authorId" : "0c76e20f-41a5-4725-b3c3-d5b6cae89641",
        "body" : "we have only one range (comma separated) so the new error message is the correct one. ",
        "createdAt" : "2020-09-28T19:19:21Z",
        "updatedAt" : "2020-10-26T18:06:38Z",
        "lastEditedBy" : "0c76e20f-41a5-4725-b3c3-d5b6cae89641",
        "tags" : [
        ]
      },
      {
        "id" : "68973ad5-80f3-45ef-b97b-bcd6d0fe11f3",
        "parentId" : "d6a5f273-3f98-4914-942e-0407218a9e1b",
        "authorId" : "c490e441-2b9f-41f2-8559-d47be0ea8836",
        "body" : "oh... huh. OK, the code is kind of confusing (like it was originally written the other way maybe?) but yeah, the error messages were wrong before, and they are correct with your changes.",
        "createdAt" : "2020-09-28T21:18:55Z",
        "updatedAt" : "2020-10-26T18:06:39Z",
        "lastEditedBy" : "c490e441-2b9f-41f2-8559-d47be0ea8836",
        "tags" : [
        ]
      }
    ],
    "commit" : "14b3451cfa7b96365807f3a0c7f952a87a8ef950",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +76,80 @@\n\t\tif !dualstack {\n\t\t\terrs = append(errs, errors.New(\"--service-cluster-ip-range[0] and --service-cluster-ip-range[1] must be of different IP family\"))\n\t\t}\n"
  },
  {
    "id" : "23a060a4-d080-4ef2-91b8-562a06a0bee8",
    "prId" : 89929,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/89929#pullrequestreview-389350712",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bcfcac85-947a-46ba-bdd4-160f75663cfd",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Should we add the reverse check, too?",
        "createdAt" : "2020-04-07T17:43:57Z",
        "updatedAt" : "2020-04-07T19:09:05Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "fe045e37-9ba7-4484-8b60-58368bf255a6",
        "parentId" : "bcfcac85-947a-46ba-bdd4-160f75663cfd",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "no? requiring the feature to be on if the API is enabled would break anything that runs with `api/all=true`",
        "createdAt" : "2020-04-07T17:46:46Z",
        "updatedAt" : "2020-04-07T19:09:05Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "45c2f4534c619ab5a4505fce18bcef40c1fe3d3f",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +141,145 @@\t\t\treturn nil\n\t\tdefault:\n\t\t\treturn []error{fmt.Errorf(\"enabling APIPriorityAndFairness requires --runtime-confg=flowcontrol.apiserver.k8s.io/v1alpha1=true to enable the required API\")}\n\t\t}\n\t}"
  },
  {
    "id" : "a1ac6de6-0d79-41d7-906c-9db0063ba21c",
    "prId" : 89929,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/89929#pullrequestreview-389349706",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5d5b3911-f96f-4049-9eb7-1f83feef2a96",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "`api/all` works, too, right?",
        "createdAt" : "2020-04-07T17:45:25Z",
        "updatedAt" : "2020-04-07T19:09:05Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "45c2f4534c619ab5a4505fce18bcef40c1fe3d3f",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +136,140 @@\t\tcase strings.Contains(enabledAPIString, \"api/all=true\"):\n\t\t\treturn nil\n\t\tcase strings.Contains(enabledAPIString, \"api/alpha=true\"):\n\t\t\treturn nil\n\t\tcase strings.Contains(enabledAPIString, \"flowcontrol.apiserver.k8s.io/v1alpha1=true\"):"
  },
  {
    "id" : "346c1c74-7f1c-4e4f-ad35-c1dc8c59749b",
    "prId" : 79386,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/79386#pullrequestreview-266810361",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4b94ba8f-af88-439a-bd6f-1b7701991c29",
        "parentId" : null,
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "should we document this constant? why 20?\r\nEDIT\r\nIÂ´ve found in the release notes ðŸ˜… \r\n`1. Max 20 bit for range (min network bits `<v6>/108` or <v4>/12)`",
        "createdAt" : "2019-07-15T12:25:22Z",
        "updatedAt" : "2019-08-28T18:42:36Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      },
      {
        "id" : "e206eaa5-b1b2-4161-a70c-1e204307c8b2",
        "parentId" : "4b94ba8f-af88-439a-bd6f-1b7701991c29",
        "authorId" : "0c76e20f-41a5-4725-b3c3-d5b6cae89641",
        "body" : "The subtle reason for this is the snapshots - save to etcd - executed frequently and maintained by the thing that assigns service IP. if we add more bits the snapshotting latency will increase. Same reason having too many service cidrs is going to also add lots of latency during snapshotting.. ",
        "createdAt" : "2019-07-23T17:16:40Z",
        "updatedAt" : "2019-08-28T18:42:36Z",
        "lastEditedBy" : "0c76e20f-41a5-4725-b3c3-d5b6cae89641",
        "tags" : [
        ]
      },
      {
        "id" : "90c0952d-1136-4565-8fd8-a8bfe50371e4",
        "parentId" : "4b94ba8f-af88-439a-bd6f-1b7701991c29",
        "authorId" : "57f729dd-988a-4d1a-83bf-ee70bf637c64",
        "body" : "@khenidak that's up to the admin though, how many service cidrs or size they want to use. I think we should document what the reasonable limits are, and maybe warn if they are exceeded?",
        "createdAt" : "2019-07-25T18:07:02Z",
        "updatedAt" : "2019-08-28T18:42:36Z",
        "lastEditedBy" : "57f729dd-988a-4d1a-83bf-ee70bf637c64",
        "tags" : [
        ]
      },
      {
        "id" : "e8e91ba0-bd9a-4d7c-84f2-8318b9580375",
        "parentId" : "4b94ba8f-af88-439a-bd6f-1b7701991c29",
        "authorId" : "57f729dd-988a-4d1a-83bf-ee70bf637c64",
        "body" : "I think I'm even more in favor of having a single option after seeing all the shouldWorkOnSecondary() stuff and the split secondary stuff in the allocator below.",
        "createdAt" : "2019-07-25T18:34:21Z",
        "updatedAt" : "2019-08-28T18:42:36Z",
        "lastEditedBy" : "57f729dd-988a-4d1a-83bf-ee70bf637c64",
        "tags" : [
        ]
      }
    ],
    "commit" : "c27e0b029d328552cc3ef0661f16a5ad3c422fb8",
    "line" : 65,
    "diffHunk" : "@@ -1,1 +78,82 @@\t\t// significantly increase snapshotting time.\n\t\tvar ones, bits = options.SecondaryServiceClusterIPRange.Mask.Size()\n\t\tif bits-ones > 20 {\n\t\t\terrs = append(errs, errors.New(\"specified --secondary-service-cluster-ip-range is too large\"))\n\t\t}"
  },
  {
    "id" : "3c4a6513-197f-4fb2-a54b-344d3144670c",
    "prId" : 79386,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/79386#pullrequestreview-264936505",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "953d926e-59b5-459d-a39f-7a2aca3901f8",
        "parentId" : null,
        "authorId" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "body" : "This check doesn't need a feature gate check?",
        "createdAt" : "2019-07-22T15:24:10Z",
        "updatedAt" : "2019-08-28T18:42:36Z",
        "lastEditedBy" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "tags" : [
        ]
      },
      {
        "id" : "2b3d9522-4fbc-479f-bad2-117b84cf81df",
        "parentId" : "953d926e-59b5-459d-a39f-7a2aca3901f8",
        "authorId" : "0c76e20f-41a5-4725-b3c3-d5b6cae89641",
        "body" : "This https://github.com/kubernetes/kubernetes/pull/79386/commits/6521a8793ce8820f20c4c5f56642e6e5289eef41#diff-6696b3d19b862aab51fa1646fc7811abR46? ",
        "createdAt" : "2019-07-22T17:18:08Z",
        "updatedAt" : "2019-08-28T18:42:36Z",
        "lastEditedBy" : "0c76e20f-41a5-4725-b3c3-d5b6cae89641",
        "tags" : [
        ]
      }
    ],
    "commit" : "c27e0b029d328552cc3ef0661f16a5ad3c422fb8",
    "line" : 50,
    "diffHunk" : "@@ -1,1 +63,67 @@\t// by the range set on --service-cluster-ip-range. If/when the user decides to use dual stack services\n\t// the Secondary* must be of different IPFamily than --service-cluster-ip-range\n\tif secondaryServiceClusterIPRangeUsed {\n\t\t// Should be dualstack IPFamily(PrimaryServiceClusterIPRange) != IPFamily(SecondaryServiceClusterIPRange)\n\t\tdualstack, err := netutils.IsDualStackCIDRs([]*net.IPNet{&options.PrimaryServiceClusterIPRange, &options.SecondaryServiceClusterIPRange})"
  }
]