[
  {
    "id" : "fe744283-0365-4728-9c40-64a725078849",
    "prId" : 33352,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/33352#pullrequestreview-4098947",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5dcb884e-628f-4b27-8ba8-48aed1c813d1",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "I really dislike the convention of relying on the name to match.  I know we don't really do methods on API types, but this seems like EXACTLY what methods are for...  Rather than having to provide a public function with an obscure and non-idiomatic name, with an exact signature, a method seems vastly cleaner\n",
        "createdAt" : "2016-10-13T06:02:30Z",
        "updatedAt" : "2016-10-19T01:07:44Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "0d161d7b-81e6-4cfa-bdbd-9291d0cc2c9e",
        "parentId" : "5dcb884e-628f-4b27-8ba8-48aed1c813d1",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "I agree in principle, but we are already doing the same for conversions and defaulting. And changing this would probably be quite a huge change, so maybe we should fix it later?\n",
        "createdAt" : "2016-10-13T10:58:33Z",
        "updatedAt" : "2016-10-19T01:07:44Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "2c852484-7c68-40c5-95ed-c75f6bf4bbb0",
        "parentId" : "5dcb884e-628f-4b27-8ba8-48aed1c813d1",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "This is just continuing existing code.  I know we like to rail at our past selves for bad decisions, but I'm just avoiding refactoring the other half of the code that isn't (by far) the worst problem we have in generation.\n",
        "createdAt" : "2016-10-13T15:26:40Z",
        "updatedAt" : "2016-10-19T01:07:44Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "957c0955aa0ca0dc4eb6b220def556525b9d880c",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +19,23 @@// Given a list of input directories, it will scan for top level types\n// and generate efficient defaulters for an entire object from the sum\n// of the SetDefault_* methods contained in the object tree.\n//\n// Generation is governed by comment tags in the source.  Any package may"
  },
  {
    "id" : "86fb7aa1-0b00-408f-9079-70427d6a212b",
    "prId" : 33352,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/33352#pullrequestreview-4066744",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c58e615d-7424-4d38-9cca-505a536220da",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "s/Defaulter/defaulting/ ? (it seems that in most places we call them \"defaulting functions\"\n",
        "createdAt" : "2016-10-13T13:03:31Z",
        "updatedAt" : "2016-10-19T01:07:44Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "957c0955aa0ca0dc4eb6b220def556525b9d880c",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +15,19 @@*/\n\n// defaulter-gen is a tool for auto-generating Defaulter functions.\n//\n// Given a list of input directories, it will scan for top level types"
  }
]