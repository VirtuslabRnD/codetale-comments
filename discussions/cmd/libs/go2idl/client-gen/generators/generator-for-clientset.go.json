[
  {
    "id" : "c6cabd43-627e-45ae-97a3-be28689bded4",
    "prId" : 19734,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "53664462-7210-4033-8cbc-d2faa6ab2fb1",
        "parentId" : null,
        "authorId" : "ad0a3561-db60-47a9-b82f-ac613199f968",
        "body" : "These are unrelated but just cleaning up some things?\n",
        "createdAt" : "2016-01-20T00:53:57Z",
        "updatedAt" : "2016-01-20T01:27:59Z",
        "lastEditedBy" : "ad0a3561-db60-47a9-b82f-ac613199f968",
        "tags" : [
        ]
      },
      {
        "id" : "02ecc0c9-ded5-4b4e-8694-01ae8499d8f9",
        "parentId" : "53664462-7210-4033-8cbc-d2faa6ab2fb1",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "They are needed for #19737. I want the FakeClientset to be implementing this interface.\n",
        "createdAt" : "2016-01-20T01:05:51Z",
        "updatedAt" : "2016-01-20T01:27:59Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "fb81b2278eb1be4f1ba9d61b8d29ef01e141d34b",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +117,121 @@var clientsetInterfaceTemplate = `\ntype Interface interface {\n    $range .allGroups$$.Group$() $.PackageName$.$.Group$Interface\n    $end$\n}"
  },
  {
    "id" : "4b97d786-348e-411e-b448-80d01b1d5895",
    "prId" : 19267,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9db4ac15-a442-4929-a0af-93846beadfdc",
        "parentId" : null,
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "No idea what this function is doing :)\nCan you please explain a bit more?\n",
        "createdAt" : "2016-01-05T22:15:52Z",
        "updatedAt" : "2016-01-12T19:30:26Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      },
      {
        "id" : "f5cb07db-5b5c-4e9c-ab96-680a52ed22c9",
        "parentId" : "9db4ac15-a442-4929-a0af-93846beadfdc",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "The go2idl framework will parse _all_ the types in your input directory, and the imported packages, and then the framework iterate through all the types, use the Filter() to filter the types, and then call the `GenerateType(type)`.\n\nHere, we actually don't care about `type`, we just need to make sure `GenerateType()` is called once, and note that GenerateType doesn't use any type-specific information.\n\nIn short, the framework is built around types, while clientset is not type-specific, so there is some workaround in this PR.\n",
        "createdAt" : "2016-01-05T22:31:07Z",
        "updatedAt" : "2016-01-12T19:30:26Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      },
      {
        "id" : "814c03e6-1231-4565-9b27-8665fe0752c8",
        "parentId" : "9db4ac15-a442-4929-a0af-93846beadfdc",
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "Whats wrong if GenerateType is called twice?\nWhat if I want to regenerate it?\n\nIf we do want to restrict it, the comment for GenerateType should say that it can only be called once and maybe the function should give an error if called multiple times?\n",
        "createdAt" : "2016-01-11T22:19:29Z",
        "updatedAt" : "2016-01-12T19:30:26Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      },
      {
        "id" : "b0239c94-eab7-4e01-a15d-bf63d74533c7",
        "parentId" : "9db4ac15-a442-4929-a0af-93846beadfdc",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "> Whats wrong if GenerateType is called twice?\n\nNothing wrong, it's just that the same file will be regenerated with the same content many times. Pure inefficiency.\n\n> What if I want to regenerate it?\n\nYou can run `client-gen` in your terminal again. There is no reason to generate the `clientset` multiple times in one run of `client-gen`.\n\n> If we do want to restrict it, the comment for GenerateType should say that it can only be called once and maybe the function should give an error if called multiple times?\n\nIt's not an error to call GenerateType multiple times, it's just inefficient. I prefer to make the restrictriction in `Filter()`, we have a similar practice [here](https://github.com/kubernetes/kubernetes/blob/master/cmd/libs/go2idl/client-gen/generators/generator-for-group.go#L38).\n",
        "createdAt" : "2016-01-11T22:36:47Z",
        "updatedAt" : "2016-01-12T19:30:26Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      },
      {
        "id" : "5ad8d396-9cc8-487f-84a8-900ad3fcd5b9",
        "parentId" : "9db4ac15-a442-4929-a0af-93846beadfdc",
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "> You can run client-gen in your terminal again. There is no reason to generate the clientset multiple times in one run of client-gen.\n\nHow will GenerateType() be called multiple times in the same run?\n",
        "createdAt" : "2016-01-12T00:20:27Z",
        "updatedAt" : "2016-01-12T19:30:26Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      },
      {
        "id" : "96585d2c-88c2-487d-8e01-18b68bcfebbe",
        "parentId" : "9db4ac15-a442-4929-a0af-93846beadfdc",
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "Maybe add a comment at the top of this file (below line 29) that how the functions in this file should be used.\n",
        "createdAt" : "2016-01-12T00:27:07Z",
        "updatedAt" : "2016-01-12T19:30:26Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      },
      {
        "id" : "14300c09-8f51-4ce9-9e13-192131f8da4d",
        "parentId" : "9db4ac15-a442-4929-a0af-93846beadfdc",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "Because the go2idl framework iterate through all the types it has parsed, and call GenerateType() for every type.\n",
        "createdAt" : "2016-01-12T00:27:59Z",
        "updatedAt" : "2016-01-12T19:30:26Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      },
      {
        "id" : "319e6652-288c-4223-bd65-8ca922375e6f",
        "parentId" : "9db4ac15-a442-4929-a0af-93846beadfdc",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "https://github.com/kubernetes/kubernetes/blob/master/cmd/libs/go2idl/generator/generator.go#L76-L83\n",
        "createdAt" : "2016-01-12T00:31:00Z",
        "updatedAt" : "2016-01-12T19:30:26Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      },
      {
        "id" : "8d3d13f5-919b-4f1a-a230-2174abe3824e",
        "parentId" : "9db4ac15-a442-4929-a0af-93846beadfdc",
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "aah those comments are awesome!\nAs discussed, make it explicit that genClientset implements that interface.\n",
        "createdAt" : "2016-01-12T00:47:05Z",
        "updatedAt" : "2016-01-12T19:30:26Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      },
      {
        "id" : "59909558-2e32-4d0a-b4d8-b0baa55d7ae1",
        "parentId" : "9db4ac15-a442-4929-a0af-93846beadfdc",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "Yeah, that would make the code much easier to understand. Thanks for the suggestion.\n",
        "createdAt" : "2016-01-12T00:57:38Z",
        "updatedAt" : "2016-01-12T19:30:26Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "64083a05766b30c111baa48964373b17fd8b1123",
    "line" : 50,
    "diffHunk" : "@@ -1,1 +48,52 @@\n// We only want to call GenerateType() once.\nfunc (g *genClientset) Filter(c *generator.Context, t *types.Type) bool {\n\tret := generate_clientset\n\tgenerate_clientset = false"
  },
  {
    "id" : "0ef2726c-ee45-4b10-8ca9-62780b721b42",
    "prId" : 19267,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0e2616a2-6b71-4c72-acbd-b0f67d511419",
        "parentId" : null,
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "Any tests?\n",
        "createdAt" : "2016-01-05T22:22:28Z",
        "updatedAt" : "2016-01-12T19:30:26Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      },
      {
        "id" : "8292de28-98c2-4b00-bb6d-30a441fd3afd",
        "parentId" : "0e2616a2-6b71-4c72-acbd-b0f67d511419",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "I think you are referring to the tests for the generated clientset, not the for generator itself, right? Can I add them when in another PR?\n",
        "createdAt" : "2016-01-06T23:40:25Z",
        "updatedAt" : "2016-01-12T19:30:26Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      },
      {
        "id" : "ff678355-fef6-4be0-8178-4910d06175fc",
        "parentId" : "0e2616a2-6b71-4c72-acbd-b0f67d511419",
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "I was referring to tests for this generator code.\n",
        "createdAt" : "2016-01-11T22:21:37Z",
        "updatedAt" : "2016-01-12T19:30:26Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      },
      {
        "id" : "e6854251-cfbd-4ab4-bf26-d330d7dad54c",
        "parentId" : "0e2616a2-6b71-4c72-acbd-b0f67d511419",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "cmd/libs/go2idl/client-gen/testoutput/clientset_generated/test_release_1_1/clientset.go is a test for the generator code, what do you think?\n",
        "createdAt" : "2016-01-11T22:41:56Z",
        "updatedAt" : "2016-01-12T19:30:26Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      },
      {
        "id" : "8294edb2-f47f-4ff8-85b4-c179149ad945",
        "parentId" : "0e2616a2-6b71-4c72-acbd-b0f67d511419",
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "That is like the integration test :)\nI was referring to unit test for functions in this file.\n\nTo be honest, another motivation for asking for tests was to see how the functions in this file should be used.\nLike I should call Filter() first and then GenerateType() and not the other way round.\n",
        "createdAt" : "2016-01-12T00:20:32Z",
        "updatedAt" : "2016-01-12T19:30:26Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      },
      {
        "id" : "d0475ba7-35f4-4e9b-b1eb-906de9818e0d",
        "parentId" : "0e2616a2-6b71-4c72-acbd-b0f67d511419",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "> To be honest, another motivation for asking for tests was to see how the functions in this file should be used.\n> Like I should call Filter() first and then GenerateType() and not the other way round.\n\nThat is a framework thing, IMO it should be the job for the framework rather than for each individual generator.\n\n> That is like the integration test\n\nYes, kind of, but writing unit test for each function would be too trivial.\n",
        "createdAt" : "2016-01-12T00:42:06Z",
        "updatedAt" : "2016-01-12T19:30:26Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "64083a05766b30c111baa48964373b17fd8b1123",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +17,21 @@package generators\n\nimport (\n\t\"fmt\"\n\t\"io\""
  }
]