[
  {
    "id" : "516a5b78-2e7b-473e-8fc3-2ff593e4e35c",
    "prId" : 3733,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "28df99fa-8658-4eac-bf8a-8c6edd4c2b98",
        "parentId" : null,
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "The apiserver does:\nclient.BindKubeletClientConfigFlags(flag.CommandLine, &kubeletConfig)\n\nIs that done somewhere here?\n",
        "createdAt" : "2015-01-27T19:50:10Z",
        "updatedAt" : "2015-01-30T04:17:28Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "d9e2825d-c776-4f4e-b52e-341d00ca8253",
        "parentId" : "28df99fa-8658-4eac-bf8a-8c6edd4c2b98",
        "authorId" : "7116d1ae-39f7-4e5d-81a9-1bcb75ebd909",
        "body" : "nop, updated.\n",
        "createdAt" : "2015-01-28T02:06:33Z",
        "updatedAt" : "2015-01-30T04:17:28Z",
        "lastEditedBy" : "7116d1ae-39f7-4e5d-81a9-1bcb75ebd909",
        "tags" : [
        ]
      }
    ],
    "commit" : "c793c4f0ab946a5575dbbe3e1bbefc67e878a4eb",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +109,113 @@\tcontrollerManager.Run(10 * time.Second)\n\n\tkubeletClient, err := client.NewKubeletClient(&kubeletConfig)\n\tif err != nil {\n\t\tglog.Fatalf(\"Failure to start kubelet client: %v\", err)"
  },
  {
    "id" : "fa8ca266-aea7-4681-ab63-5b84535b2a35",
    "prId" : 3195,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bd8f8b3e-1392-44ec-a036-f16563e6f279",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "Regarding QuantityFlag() itself:  Should that continue to return *Quantity or just a value?  And should it call MustParse() internally instead of panic()? \n",
        "createdAt" : "2015-01-07T22:47:52Z",
        "updatedAt" : "2015-01-07T23:21:45Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "66ddb0ca-8247-4c47-85b3-b79b01315903",
        "parentId" : "bd8f8b3e-1392-44ec-a036-f16563e6f279",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "And any reason to have done it this way as opposed to, e.g., the way machineList is done?\n",
        "createdAt" : "2015-01-07T22:50:02Z",
        "updatedAt" : "2015-01-07T23:21:45Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "bddcb22e-a18e-49e0-9c4e-84cc7f656042",
        "parentId" : "bd8f8b3e-1392-44ec-a036-f16563e6f279",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "QuantityFlag has to return a pointer, because it's going to modify the variable it returns when flag.Parse() is called.\n\nI did it this way because it's just like the pattern that the flag package itself uses.\n",
        "createdAt" : "2015-01-07T23:13:57Z",
        "updatedAt" : "2015-01-07T23:21:45Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "00dd45c3-3246-4670-8840-1b32ed0eff55",
        "parentId" : "bd8f8b3e-1392-44ec-a036-f16563e6f279",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "I did make QuantityFlag use MustParse, though.\n",
        "createdAt" : "2015-01-07T23:22:34Z",
        "updatedAt" : "2015-01-07T23:22:34Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "610f8fed-4525-4931-bb9a-67d0c450f361",
        "parentId" : "bd8f8b3e-1392-44ec-a036-f16563e6f279",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "Re: Pointer - Duh!  Sorry.\n\nRe: style - We should make the other flag-adapter types follow the same pattern.\n",
        "createdAt" : "2015-01-08T00:14:06Z",
        "updatedAt" : "2015-01-08T00:14:06Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "2050131b9a779be36d0821eaed0c851d6e416edb",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +53,57 @@\t// TODO: in the meantime, use resource.QuantityFlag() instead of these\n\tnodeMilliCPU = flag.Int64(\"node_milli_cpu\", 1000, \"The amount of MilliCPU provisioned on each node\")\n\tnodeMemory   = resource.QuantityFlag(\"node_memory\", \"3Gi\", \"The amount of memory (in bytes) provisioned on each node\")\n)\n"
  },
  {
    "id" : "2ab4e401-cd78-49f2-8f07-bba3a9b54d2b",
    "prId" : 2531,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "082d7a8a-c05a-4ab5-8b33-8a793f39e071",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "You realize this is going to start off by asking for a large, negative amount of memory on 32 bit systems, right?\n",
        "createdAt" : "2014-11-21T22:38:07Z",
        "updatedAt" : "2014-11-21T22:58:09Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "9c75b070-662d-4515-8d22-763a760ecc8c",
        "parentId" : "082d7a8a-c05a-4ab5-8b33-8a793f39e071",
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "Yeah, this isn't going to work.\n",
        "createdAt" : "2014-11-21T22:44:14Z",
        "updatedAt" : "2014-11-21T22:58:09Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "5b14fa0c-6d05-4188-b4a8-6f245712757e",
        "parentId" : "082d7a8a-c05a-4ab5-8b33-8a793f39e071",
        "authorId" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "body" : "Notice the `glog.Fatalf` above.  This means that the user will have to set the flag.  But it means that we build and that we give the user a reasonable error.\n",
        "createdAt" : "2014-11-21T22:45:57Z",
        "updatedAt" : "2014-11-21T22:58:09Z",
        "lastEditedBy" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "tags" : [
        ]
      },
      {
        "id" : "ba1a0051-d5d2-4a9d-8f7c-4cbc675176b4",
        "parentId" : "082d7a8a-c05a-4ab5-8b33-8a793f39e071",
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "If we want a hack, we could min with maxint.\n",
        "createdAt" : "2014-11-21T22:48:42Z",
        "updatedAt" : "2014-11-21T22:58:09Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "35aeed6d-ea18-4049-891b-3600f7b4a6a7",
        "parentId" : "082d7a8a-c05a-4ab5-8b33-8a793f39e071",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "I'm pretty sure that's a much worse experience than the build error-- you'd have to go find the error log on your master to see this.\n",
        "createdAt" : "2014-11-21T22:49:12Z",
        "updatedAt" : "2014-11-21T22:58:09Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "2c4981d5-bb0d-4e60-a66f-69533f5854b4",
        "parentId" : "082d7a8a-c05a-4ab5-8b33-8a793f39e071",
        "authorId" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "body" : "Okay -- I'll clamp and warn.\n",
        "createdAt" : "2014-11-21T22:49:48Z",
        "updatedAt" : "2014-11-21T22:58:09Z",
        "lastEditedBy" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "tags" : [
        ]
      },
      {
        "id" : "30eab6c1-26c6-426f-9d73-dcef1e8a4ea2",
        "parentId" : "082d7a8a-c05a-4ab5-8b33-8a793f39e071",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "thanks!\n",
        "createdAt" : "2014-11-21T22:58:54Z",
        "updatedAt" : "2014-11-21T22:58:54Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "e5b988393dde7ff6d2fc4561a7f7aa4300b7c98f",
    "line" : 45,
    "diffHunk" : "@@ -1,1 +115,119 @@\t\tCapacity: api.ResourceList{\n\t\t\tresources.CPU:    util.NewIntOrStringFromInt(int(*nodeMilliCPU)),\n\t\t\tresources.Memory: util.NewIntOrStringFromInt(int(*nodeMemory)),\n\t\t},\n\t}"
  }
]