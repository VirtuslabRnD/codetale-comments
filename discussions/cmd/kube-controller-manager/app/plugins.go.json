[
  {
    "id" : "ab60309a-a178-40a3-a9bb-9ad2b9453967",
    "prId" : 80353,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/80353#pullrequestreview-278725599",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4a07709e-9314-4ade-879a-c69b89068e5b",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "I vaguely expected all the volume plugins (other than csi/flex/pvc/secret/configmap/downward/projected ones) to be put in the legacyprovider file",
        "createdAt" : "2019-08-15T20:54:47Z",
        "updatedAt" : "2019-08-22T22:31:09Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "cab0a61b-b54f-47db-92c0-f2894e780be0",
        "parentId" : "4a07709e-9314-4ade-879a-c69b89068e5b",
        "authorId" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "body" : "hostpath, emtpyDir, ... ?\r\n\r\nThis PR is only about the legacy cloud provider packages which definitely will be removed as defined in one of the cloud provider extraction KEPs. \r\n\r\nThere's a seperate CSI migration effort that will eventually replace some of these with stub drivers to CSI since we can't remove the types.\r\n\r\nI spoke to @davidz627 @msau42 and @saad-ali about this particular aspect.",
        "createdAt" : "2019-08-15T21:01:39Z",
        "updatedAt" : "2019-08-22T22:31:09Z",
        "lastEditedBy" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "tags" : [
        ]
      },
      {
        "id" : "4eaf4cbd-6d63-4aab-8107-37111fa16f65",
        "parentId" : "4a07709e-9314-4ade-879a-c69b89068e5b",
        "authorId" : "98986d5f-c846-4478-8363-8a016e3d6b89",
        "body" : "I think we discussed this as part of the KEP but wanted to point out again that compatibility (wrt legacy in-tree volume plugins) will break if the changes in this PR is built with `nolegacyproviders` and deployed without CSI migration feature flags enabled. CSI migration shims (https://github.com/kubernetes/kubernetes/pull/80587/files) will need to take care of ensuring that compatibility as discussed with @davidz627 ",
        "createdAt" : "2019-08-16T18:35:18Z",
        "updatedAt" : "2019-08-22T22:31:09Z",
        "lastEditedBy" : "98986d5f-c846-4478-8363-8a016e3d6b89",
        "tags" : [
        ]
      },
      {
        "id" : "7c637126-ae1c-4207-977c-7d9170f79bad",
        "parentId" : "4a07709e-9314-4ade-879a-c69b89068e5b",
        "authorId" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "body" : "Right, this cannot be used for official releases, only for testing because it definitely breaks compatibility. Eventually the CSI migration work should be able to solve this issue though as I understand it.\r\n\r\nHighlighting things that don't work if we deleted these provider packages is the goal. This one just happens to already have work going to fix it :upside_down_face: ",
        "createdAt" : "2019-08-16T18:50:28Z",
        "updatedAt" : "2019-08-22T22:31:09Z",
        "lastEditedBy" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "tags" : [
        ]
      },
      {
        "id" : "5eb6d494-d8d3-4bcc-b8c5-68486d74a981",
        "parentId" : "4a07709e-9314-4ade-879a-c69b89068e5b",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "hostPath and emptyDir should stay, but should anything else?",
        "createdAt" : "2019-08-22T22:42:08Z",
        "updatedAt" : "2019-08-22T22:42:09Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "05539cdc-0e78-442b-8749-88e9736978d7",
        "parentId" : "4a07709e-9314-4ade-879a-c69b89068e5b",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "it's totally fine to move the other ones in a followup. This PR doesn't need to be any larger.",
        "createdAt" : "2019-08-22T22:50:32Z",
        "updatedAt" : "2019-08-22T22:50:32Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "5a3301a59d0c4d5e76002cff99a2f5450d2eea80",
    "line" : 40,
    "diffHunk" : "@@ -1,1 +81,85 @@// ProbeExpandableVolumePlugins returns volume plugins which are expandable\nfunc ProbeExpandableVolumePlugins(config persistentvolumeconfig.VolumeConfiguration) []volume.VolumePlugin {\n\tallPlugins := []volume.VolumePlugin{}\n\n\tallPlugins = appendExpandableLegacyProviderVolumes(allPlugins)"
  },
  {
    "id" : "061d1508-ce13-43dc-b011-94c00af29795",
    "prId" : 68310,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/68310#pullrequestreview-162124517",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "27f13026-18b9-4a96-9e30-86722fdb9d0d",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Is the \"-\" worth it? :)",
        "createdAt" : "2018-10-05T17:06:16Z",
        "updatedAt" : "2018-10-05T17:06:17Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "f3f46d5f5ad7da329c089bd12ec5e1109d0d5841",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +27,31 @@\n\t// Cloud providers\n\tcloudprovider \"k8s.io/cloud-provider\"\n\t_ \"k8s.io/kubernetes/pkg/cloudprovider/providers\"\n\t// Volume plugins"
  },
  {
    "id" : "f7859844-1200-44c8-b6d5-6f1ded179c47",
    "prId" : 67469,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/67469#pullrequestreview-150441578",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f49d7557-2ed9-40f2-944e-39fb8d5b83c1",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "strange import order",
        "createdAt" : "2018-08-29T07:24:08Z",
        "updatedAt" : "2018-09-04T11:42:52Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "04027078-ea0b-4bbc-920c-a872c084113f",
        "parentId" : "f49d7557-2ed9-40f2-944e-39fb8d5b83c1",
        "authorId" : "05637862-b60e-403e-8519-09d1b3f0c9c2",
        "body" : ":wink:",
        "createdAt" : "2018-08-29T07:54:50Z",
        "updatedAt" : "2018-09-04T11:42:52Z",
        "lastEditedBy" : "05637862-b60e-403e-8519-09d1b3f0c9c2",
        "tags" : [
        ]
      }
    ],
    "commit" : "3fd3e40803776a54613739274ba6cbb5df47b00b",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +57,61 @@\tkubectrlmgrconfig \"k8s.io/kubernetes/pkg/controller/apis/config\"\n\t\"k8s.io/kubernetes/pkg/features\"\n\t\"k8s.io/utils/exec\"\n)\n"
  },
  {
    "id" : "eb990f45-710a-407f-806b-8f61c01eef31",
    "prId" : 29006,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d11ace83-ff29-4954-a413-e5c79884d298",
        "parentId" : null,
        "authorId" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "body" : "do we really need this switch statement anymore?\n",
        "createdAt" : "2016-07-22T02:20:47Z",
        "updatedAt" : "2016-08-18T10:50:16Z",
        "lastEditedBy" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "tags" : [
        ]
      },
      {
        "id" : "38718368-3a68-467b-8b17-f38d732db4ed",
        "parentId" : "d11ace83-ff29-4954-a413-e5c79884d298",
        "authorId" : "8d7e3035-146d-4d3c-86b9-e61987a0f17b",
        "body" : "Looking at this closer the switch adds the volume type for a set cloud provider.  I think we should leave this until we've tested scenario's like ebs running in non aws cloud provider.   \n",
        "createdAt" : "2016-07-25T17:12:31Z",
        "updatedAt" : "2016-08-18T10:50:16Z",
        "lastEditedBy" : "8d7e3035-146d-4d3c-86b9-e61987a0f17b",
        "tags" : [
        ]
      },
      {
        "id" : "03fff157-0f9b-4ba5-a7cc-3067d44d4723",
        "parentId" : "d11ace83-ff29-4954-a413-e5c79884d298",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "I'd rather NOT pass cloud in at all.  If someone tries to use EBS on GCE or vice-versa, it is not going to work, and I think that is OK.\n",
        "createdAt" : "2016-08-05T17:21:29Z",
        "updatedAt" : "2016-08-18T10:50:16Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "bb5d562f37ab029d2b562e23bd23e906ee099a45",
    "line" : null,
    "diffHunk" : "@@ -1,1 +121,125 @@// TODO: remove in Kubernetes 1.5\nfunc NewAlphaVolumeProvisioner(cloud cloudprovider.Interface, config componentconfig.VolumeConfiguration) (volume.ProvisionableVolumePlugin, error) {\n\tswitch {\n\tcase cloud == nil && config.EnableHostPathProvisioning:\n\t\treturn getProvisionablePluginFromVolumePlugins(host_path.ProbeVolumePlugins("
  },
  {
    "id" : "fc6675a6-d461-40ae-8a6c-2fc1e91d78b8",
    "prId" : 29006,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "68c0439b-522b-4945-a221-6ba3ad2644be",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "At this point do we still need to open-code the list or can we iterate an \"all plugins\" list and find them dynamically?\n",
        "createdAt" : "2016-08-05T17:22:10Z",
        "updatedAt" : "2016-08-18T10:50:16Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "85c4c4ef-38b9-4859-9d6d-3613a7c1d561",
        "parentId" : "68c0439b-522b-4945-a221-6ba3ad2644be",
        "authorId" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "body" : "This approach was turned down in PR https://github.com/kubernetes/kubernetes/pull/21552\n",
        "createdAt" : "2016-08-08T11:04:34Z",
        "updatedAt" : "2016-08-18T10:50:16Z",
        "lastEditedBy" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "tags" : [
        ]
      },
      {
        "id" : "7aae47d5-3965-4780-901e-70404a71c786",
        "parentId" : "68c0439b-522b-4945-a221-6ba3ad2644be",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "That was too magical.  I meant in the other direction.  We could have a\npkg/volume/all/all_plugins.go which explicitly contains a list of all\nplugins and offers simple functions like `all.ProbeVolumePlugins`.  This is\nprobably a different set of PRs to do this.  My main gripe is that\ncontroller manager is special-casing things like NFs, when it really should\nbe generic mechanism.  Plugins should be more or less opaque.  I'll file an\nissue\n\nOn Mon, Aug 8, 2016 at 4:05 AM, Jan Šafránek notifications@github.com\nwrote:\n\n> In cmd/kube-controller-manager/app/plugins.go\n> https://github.com/kubernetes/kubernetes/pull/29006#discussion_r73857700\n> :\n> \n> > @@ -95,32 +97,18 @@ func ProbeRecyclableVolumePlugins(config componentconfig.VolumeConfiguration) []\n> >     }\n> >     allPlugins = append(allPlugins, nfs.ProbeVolumePlugins(nfsConfig)...)\n> \n> This approach was turned down in PR #21552\n> https://github.com/kubernetes/kubernetes/pull/21552\n> \n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> https://github.com/kubernetes/kubernetes/pull/29006/files/ec13593208a8c485eaded742cd20663864293c05#r73857700,\n> or mute the thread\n> https://github.com/notifications/unsubscribe-auth/AFVgVETXYdApodtqcD-BBXfppNjNTXHAks5qdw1ygaJpZM4JNdmW\n> .\n",
        "createdAt" : "2016-08-08T16:24:53Z",
        "updatedAt" : "2016-08-18T10:50:16Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "bb5d562f37ab029d2b562e23bd23e906ee099a45",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +97,101 @@\t\tglog.Fatalf(\"Could not create NFS recycler pod from file %s: %+v\", config.PersistentVolumeRecyclerConfiguration.PodTemplateFilePathNFS, err)\n\t}\n\tallPlugins = append(allPlugins, nfs.ProbeVolumePlugins(nfsConfig)...)\n\n\tif cloud != nil {"
  },
  {
    "id" : "55c8565b-a898-4676-8d44-212f596a1fde",
    "prId" : 25457,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ef043a12-8e09-46ec-a1b6-eb4d3630ccec",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "Is there any reason not to make an \"all_plugins\" pkg that has all of the volume plugins listed in one place?  This would return, for example, a Secrets plugin here, but that won't answer as an attachable..\n",
        "createdAt" : "2016-05-24T21:24:48Z",
        "updatedAt" : "2016-05-25T06:02:46Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "5760ec7f-95cc-4a2e-9f25-8941853c2378",
        "parentId" : "ef043a12-8e09-46ec-a1b6-eb4d3630ccec",
        "authorId" : "8e448017-7838-493d-a424-33cada0da657",
        "body" : "Nope. This PR was large enough as is, didn't want to go refactoring this ugly code and make it larger. Will do that separately (https://github.com/kubernetes/kubernetes/issues/14217).\n",
        "createdAt" : "2016-05-24T22:41:31Z",
        "updatedAt" : "2016-05-25T06:02:46Z",
        "lastEditedBy" : "8e448017-7838-493d-a424-33cada0da657",
        "tags" : [
        ]
      }
    ],
    "commit" : "92500a20d72712f3ef8e825ee41c38a84288c4a3",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +51,55 @@// which specifies the directory to search for additional third party volume\n// plugins.\n// The list of plugins is manually compiled. This code and the plugin\n// initialization code for kubelet really, really need a through refactor.\nfunc ProbeAttachableVolumePlugins(config componentconfig.VolumeConfiguration) []volume.VolumePlugin {"
  },
  {
    "id" : "cd1daca2-ac17-48c2-932e-2cf4159a2b06",
    "prId" : 14537,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c31044dc-621c-447b-9781-17de0ed9987f",
        "parentId" : null,
        "authorId" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "body" : "kube-controller-manager with just this patchset (without provisioners in separate PRs) will always fail with \"ProvisionablePlugin expected but not found in []volume.VolumePlugin{(*gce_pd.gcePersistentDiskPlugin)(0xc208564e70)}\", as the returned volume plugin does not implement ProvisionableVolumePlugin yet.\n\nI expect e2e test will always fail.\n",
        "createdAt" : "2015-12-10T13:08:45Z",
        "updatedAt" : "2015-12-11T15:33:59Z",
        "lastEditedBy" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "tags" : [
        ]
      },
      {
        "id" : "b6747f3e-0a83-4843-8082-8ab170fbb5a2",
        "parentId" : "c31044dc-621c-447b-9781-17de0ed9987f",
        "authorId" : "727fc82d-d969-41a4-a614-7fefce94f9a6",
        "body" : "Per our IRC conversation, I downgraded the error in controllermanager from Fatal to Error.  \n",
        "createdAt" : "2015-12-10T14:27:15Z",
        "updatedAt" : "2015-12-11T15:33:59Z",
        "lastEditedBy" : "727fc82d-d969-41a4-a614-7fefce94f9a6",
        "tags" : [
        ]
      }
    ],
    "commit" : "4fc1bf1f2314b213af2f540ebe86d169ccfadd9c",
    "line" : 70,
    "diffHunk" : "@@ -1,1 +104,108 @@\t\t}\n\t}\n\treturn nil, fmt.Errorf(\"ProvisionablePlugin expected but not found in %#v: \", plugins)\n}\n"
  },
  {
    "id" : "f1a40890-d025-4cc0-a4f2-fe0a426bca23",
    "prId" : 13310,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c01fc409-3db3-4f9c-bf5b-1c75938327e6",
        "parentId" : null,
        "authorId" : null,
        "body" : "Hmm.. I think this might be too specific at the controller-manager level. Why not pass the whole struct and let the plugins fish out what they are interested in ?\n",
        "createdAt" : "2015-08-28T18:14:25Z",
        "updatedAt" : "2015-09-01T16:05:03Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      },
      {
        "id" : "0714bb0d-3d4d-4d86-8e65-62f4cf0b805c",
        "parentId" : "c01fc409-3db3-4f9c-bf5b-1c75938327e6",
        "authorId" : "727fc82d-d969-41a4-a614-7fefce94f9a6",
        "body" : "Because passing the whole struct would pass 1 big struct with specific values (PVRecycTimeoutForNFS) instead of a generic value (PVRecycTimeout).   \n\nThe design we settled on was to leave specifics in the binary (where the rubber has to meet the road and enumerated flags must be specific) and then use a more generic VolumeConfig which will never contain the word \"NFS\" or any other plugin detail.\n",
        "createdAt" : "2015-08-28T19:31:10Z",
        "updatedAt" : "2015-09-01T16:05:03Z",
        "lastEditedBy" : "727fc82d-d969-41a4-a614-7fefce94f9a6",
        "tags" : [
        ]
      },
      {
        "id" : "39bd6621-1fa6-4cbd-b292-56fa7722db1a",
        "parentId" : "c01fc409-3db3-4f9c-bf5b-1c75938327e6",
        "authorId" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "body" : "For the record, that design decision makes sense to me, @markturansky \n",
        "createdAt" : "2015-08-31T17:49:41Z",
        "updatedAt" : "2015-09-01T16:05:03Z",
        "lastEditedBy" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "tags" : [
        ]
      }
    ],
    "commit" : "68358fd30879a04eb53d8db6e940fcc785710682",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +48,52 @@\t// TODO transfer config.PersistentVolumeRecyclerTimeoutNFS and other flags to this instance of VolumeConfig\n\t// Configuring recyclers will be done in a follow-up PR\n\t}\n\n\tallPlugins = append(allPlugins, host_path.ProbeVolumePlugins(hostPathConfig)...)"
  },
  {
    "id" : "ca99384f-45e3-4dc1-9773-0dc06640c8f0",
    "prId" : 13310,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "521cad24-0edf-4b78-82f6-a10ab04d8a34",
        "parentId" : null,
        "authorId" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "body" : "Curious if you have any use-cases in mind for host path.  Elaborate?\n",
        "createdAt" : "2015-08-31T17:48:22Z",
        "updatedAt" : "2015-09-01T16:05:03Z",
        "lastEditedBy" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "tags" : [
        ]
      },
      {
        "id" : "50980cd8-8d69-45f0-b77a-c7409a280ff6",
        "parentId" : "521cad24-0edf-4b78-82f6-a10ab04d8a34",
        "authorId" : "727fc82d-d969-41a4-a614-7fefce94f9a6",
        "body" : "The recycler configuration, which this PR is the precursor for.\n",
        "createdAt" : "2015-08-31T17:54:10Z",
        "updatedAt" : "2015-09-01T16:05:03Z",
        "lastEditedBy" : "727fc82d-d969-41a4-a614-7fefce94f9a6",
        "tags" : [
        ]
      },
      {
        "id" : "c7a578e0-de45-4ed9-a6f1-90a4b580923a",
        "parentId" : "521cad24-0edf-4b78-82f6-a10ab04d8a34",
        "authorId" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "body" : "What do you plan to differentiate about the recycler for host volumes?\n",
        "createdAt" : "2015-08-31T18:29:50Z",
        "updatedAt" : "2015-09-01T16:05:03Z",
        "lastEditedBy" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "tags" : [
        ]
      },
      {
        "id" : "19cd40bc-9e6e-4b63-b00b-8f635f04eb0c",
        "parentId" : "521cad24-0edf-4b78-82f6-a10ab04d8a34",
        "authorId" : "727fc82d-d969-41a4-a614-7fefce94f9a6",
        "body" : "That's the next PR and not really relevant to this one.\n\nThat said, base timeout, X seconds to add per Gig of space to recycle, and a default recycler implementation.\n",
        "createdAt" : "2015-08-31T18:50:59Z",
        "updatedAt" : "2015-09-01T16:05:03Z",
        "lastEditedBy" : "727fc82d-d969-41a4-a614-7fefce94f9a6",
        "tags" : [
        ]
      },
      {
        "id" : "92445851-a878-4b84-809c-7b4ba65fca9c",
        "parentId" : "521cad24-0edf-4b78-82f6-a10ab04d8a34",
        "authorId" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "body" : "@markturansky Cool, sounds good.\n",
        "createdAt" : "2015-09-02T03:48:29Z",
        "updatedAt" : "2015-09-02T03:48:29Z",
        "lastEditedBy" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "tags" : [
        ]
      }
    ],
    "commit" : "68358fd30879a04eb53d8db6e940fcc785710682",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +42,46 @@\t// CLI flags meant to configure volume plugins.  From that single config, create an instance of volume.VolumeConfig\n\t// for a specific plugin and pass that instance to the plugin's ProbeVolumePlugins(config) func.\n\thostPathConfig := volume.VolumeConfig{\n\t// transfer attributes from VolumeConfig to this instance of volume.VolumeConfig\n\t}"
  }
]