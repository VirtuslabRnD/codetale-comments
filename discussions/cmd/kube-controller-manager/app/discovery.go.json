[
  {
    "id" : "c4f2d9f2-5e5e-4884-b6ec-5a9d5bba06dc",
    "prId" : 91637,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/91637#pullrequestreview-432850485",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4fcd3394-0b20-44cb-a0a3-311990ad185e",
        "parentId" : null,
        "authorId" : "7aca96c2-45d7-4567-99be-0323d7556c55",
        "body" : "For my paranoia's sake can we add this to the TestController_DiscoveryError test in https://github.com/kubernetes/kubernetes/blob/release-1.18/cmd/kube-controller-manager/app/core_test.go#L100?",
        "createdAt" : "2020-06-17T23:06:07Z",
        "updatedAt" : "2020-07-06T19:44:10Z",
        "lastEditedBy" : "7aca96c2-45d7-4567-99be-0323d7556c55",
        "tags" : [
        ]
      },
      {
        "id" : "3dd5c0e2-6b8c-4131-a28d-0b66ef8ef3e1",
        "parentId" : "4fcd3394-0b20-44cb-a0a3-311990ad185e",
        "authorId" : "399a0f74-29de-4365-9ae5-f743ae5f278c",
        "body" : "Good call, I've added this and the EndpointSlice controller to that test.",
        "createdAt" : "2020-06-17T23:50:55Z",
        "updatedAt" : "2020-07-06T19:44:10Z",
        "lastEditedBy" : "399a0f74-29de-4365-9ae5-f743ae5f278c",
        "tags" : [
        ]
      }
    ],
    "commit" : "fa59370e9348e3f04fdf86defa1b8de132e39562",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +55,59 @@}\n\nfunc startEndpointSliceMirroringController(ctx ControllerContext) (http.Handler, bool, error) {\n\tif !utilfeature.DefaultFeatureGate.Enabled(features.EndpointSlice) {\n\t\tklog.V(2).Infof(\"Not starting endpointslicemirroring-controller since EndpointSlice feature gate is disabled\")"
  },
  {
    "id" : "8d9f4431-bd00-4d8f-8270-eb93a4284305",
    "prId" : 82289,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/82289#pullrequestreview-283759355",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "32054541-e9f0-480f-afa8-acf1e974b715",
        "parentId" : null,
        "authorId" : "0c76e20f-41a5-4725-b3c3-d5b6cae89641",
        "body" : "is this an error condition? What would the user do in a case where they expect endpoint slices (say configured proxy to switch to `EndpointSlice`)?",
        "createdAt" : "2019-09-04T16:55:49Z",
        "updatedAt" : "2019-09-04T16:55:49Z",
        "lastEditedBy" : "0c76e20f-41a5-4725-b3c3-d5b6cae89641",
        "tags" : [
        ]
      },
      {
        "id" : "4ba9f9e7-c3b8-47aa-b9c5-fa94a22bbe90",
        "parentId" : "32054541-e9f0-480f-afa8-acf1e974b715",
        "authorId" : "399a0f74-29de-4365-9ae5-f743ae5f278c",
        "body" : "This could theoretically occur if the `--controllers` flag on `kube-controller-manager` was set to include `endpointslice` but the api group was not enabled. There are likely other edge cases I'm not thinking of. This just follows a pattern seen in a number of other startController methods, such as the [batch controller startup code](https://github.com/kubernetes/kubernetes/blob/master/cmd/kube-controller-manager/app/batch.go#L34).",
        "createdAt" : "2019-09-04T16:59:30Z",
        "updatedAt" : "2019-09-04T17:00:00Z",
        "lastEditedBy" : "399a0f74-29de-4365-9ae5-f743ae5f278c",
        "tags" : [
        ]
      }
    ],
    "commit" : "8f9483d827f0e7f2b605a0bce95e11702f1ff9c7",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +30,34 @@\nfunc startEndpointSliceController(ctx ControllerContext) (http.Handler, bool, error) {\n\tif !ctx.AvailableResources[discoveryv1alpha1.SchemeGroupVersion.WithResource(\"endpointslices\")] {\n\t\tklog.Warningf(\"Not starting endpointslice-controller, discovery.k8s.io/v1alpha1 resources are not available\")\n\t\treturn nil, false, nil"
  },
  {
    "id" : "e139fdbc-c4a4-49f3-9f1f-a7467c1e4295",
    "prId" : 81048,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/81048#pullrequestreview-279353526",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c2408c27-ae31-42ad-b46b-99eea5955823",
        "parentId" : null,
        "authorId" : "0c76e20f-41a5-4725-b3c3-d5b6cae89641",
        "body" : "don't we need to validate this?",
        "createdAt" : "2019-08-23T21:47:52Z",
        "updatedAt" : "2019-08-29T04:13:56Z",
        "lastEditedBy" : "0c76e20f-41a5-4725-b3c3-d5b6cae89641",
        "tags" : [
        ]
      },
      {
        "id" : "d53f8ae8-80bd-498b-8f5e-b2f7f6a330b4",
        "parentId" : "c2408c27-ae31-42ad-b46b-99eea5955823",
        "authorId" : "399a0f74-29de-4365-9ae5-f743ae5f278c",
        "body" : "Good catch, I've added some basic validation logic for the controller config (https://github.com/robscott/kubernetes/blob/endpointslice-controller/cmd/kube-controller-manager/app/options/endpointslicecontroller.go#L68). Strangely it looks like the only other controller doing config validation is the StatefulSetController.",
        "createdAt" : "2019-08-25T21:16:13Z",
        "updatedAt" : "2019-08-29T04:13:56Z",
        "lastEditedBy" : "399a0f74-29de-4365-9ae5-f743ae5f278c",
        "tags" : [
        ]
      }
    ],
    "commit" : "75f6c249235b40b24e9ea1efdb1ff81dd76a8d68",
    "line" : 40,
    "diffHunk" : "@@ -1,1 +38,42 @@\t\tctx.InformerFactory.Core().V1().Nodes(),\n\t\tctx.InformerFactory.Discovery().V1alpha1().EndpointSlices(),\n\t\tctx.ComponentConfig.EndpointSliceController.MaxEndpointsPerSlice,\n\t\tctx.ClientBuilder.ClientOrDie(\"endpointslice-controller\"),\n\t).Run(int(ctx.ComponentConfig.EndpointSliceController.ConcurrentServiceEndpointSyncs), ctx.Stop)"
  }
]