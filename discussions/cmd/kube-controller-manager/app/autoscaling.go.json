[
  {
    "id" : "68d26cf8-4bd1-4f30-b5ef-d35427b2710a",
    "prId" : 66615,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/66615#pullrequestreview-141041484",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e973eb7f-7b04-45d7-93c4-a258e4b193e7",
        "parentId" : null,
        "authorId" : "3a4b4830-dc71-4d7e-a7db-de2453284945",
        "body" : "why do we still have the downscale forbidden window?  We should think about how to get rid of these together",
        "createdAt" : "2018-07-26T18:10:42Z",
        "updatedAt" : "2018-08-01T16:01:56Z",
        "lastEditedBy" : "3a4b4830-dc71-4d7e-a7db-de2453284945",
        "tags" : [
        ]
      },
      {
        "id" : "6ee4aa33-75bc-492a-805a-c0fbe546687a",
        "parentId" : "e973eb7f-7b04-45d7-93c4-a258e4b193e7",
        "authorId" : "c4140906-a9ca-4fa2-9dcc-0ea022464411",
        "body" : "I really would rather do it in a separate PR:\r\n- This PR will be really big if I add one more change to it\r\n- I'd rather talk to @mwielgus about it before getting rid of the downscale forbidden window",
        "createdAt" : "2018-07-27T09:21:52Z",
        "updatedAt" : "2018-08-01T16:01:56Z",
        "lastEditedBy" : "c4140906-a9ca-4fa2-9dcc-0ea022464411",
        "tags" : [
        ]
      }
    ],
    "commit" : "8ef369ea2d1f487e46ca90f64dd30111eafafa78",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +94,98 @@\t\tctx.InformerFactory.Autoscaling().V1().HorizontalPodAutoscalers(),\n\t\tctx.ComponentConfig.HPAController.HorizontalPodAutoscalerSyncPeriod.Duration,\n\t\tctx.ComponentConfig.HPAController.HorizontalPodAutoscalerDownscaleForbiddenWindow.Duration,\n\t).Run(ctx.Stop)\n\treturn nil, true, nil"
  },
  {
    "id" : "c57332db-c98b-43a1-a0a5-45a4d25554c5",
    "prId" : 66299,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/66299#pullrequestreview-140521126",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "59136a42-ca70-4e84-a404-5cac57cc9ef9",
        "parentId" : null,
        "authorId" : "e81e699e-eb6c-4380-bfd5-16ab81ac51d6",
        "body" : "Will this make replicaCalc, scaleKindResolver and NewHorizontalController share the same client QPS quota?",
        "createdAt" : "2018-07-25T22:12:57Z",
        "updatedAt" : "2018-07-25T22:13:30Z",
        "lastEditedBy" : "e81e699e-eb6c-4380-bfd5-16ab81ac51d6",
        "tags" : [
        ]
      },
      {
        "id" : "4cedd3a9-a280-4abb-9127-032ffb06addf",
        "parentId" : "59136a42-ca70-4e84-a404-5cac57cc9ef9",
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "Yes but the ScaleKindResolver only make O(number of autoscaled resource kinds) calls so it should not be an issue.",
        "createdAt" : "2018-07-25T22:20:47Z",
        "updatedAt" : "2018-07-25T22:20:48Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      }
    ],
    "commit" : "efb882721550d3ff76d1eb912da0b0a8446aed75",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +85,89 @@\t)\n\tgo podautoscaler.NewHorizontalController(\n\t\thpaClient.CoreV1(),\n\t\tscaleClient,\n\t\thpaClient.AutoscalingV1(),"
  },
  {
    "id" : "95a2eebf-f226-429b-afba-726090c8d94f",
    "prId" : 55168,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/55168#pullrequestreview-74475396",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8c8696cc-5f52-4020-a5f7-3b53390032e1",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "@DirectXMan12 ^^",
        "createdAt" : "2017-11-06T15:01:55Z",
        "updatedAt" : "2018-02-22T17:55:55Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "be7785a2-1b0f-4ab7-9840-61230fa484cb",
        "parentId" : "8c8696cc-5f52-4020-a5f7-3b53390032e1",
        "authorId" : "3a4b4830-dc71-4d7e-a7db-de2453284945",
        "body" : ":-(.  It was fun while it lasted",
        "createdAt" : "2017-11-06T16:29:15Z",
        "updatedAt" : "2018-02-22T17:55:55Z",
        "lastEditedBy" : "3a4b4830-dc71-4d7e-a7db-de2453284945",
        "tags" : [
        ]
      }
    ],
    "commit" : "55ce3dedaa51c66dcd52b86f01e687905afe3e94",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +25,29 @@\t\"k8s.io/apimachinery/pkg/runtime/schema\"\n\t\"k8s.io/client-go/discovery\"\n\tdiscocache \"k8s.io/client-go/discovery/cached\"\n\t\"k8s.io/client-go/dynamic\"\n\t\"k8s.io/client-go/scale\""
  },
  {
    "id" : "d1db94c3-9559-44d9-a3f3-8ff2b8ddd6bd",
    "prId" : 53743,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/53743#pullrequestreview-68718665",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "efef3aac-3f88-4962-8add-4c69426ba748",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "if the rest of the this pull earns it, I'll let you have it :)",
        "createdAt" : "2017-10-11T19:07:06Z",
        "updatedAt" : "2017-10-19T17:21:07Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "62d7940e-7a0d-4dfd-b13d-8cc0f510cdfb",
        "parentId" : "efef3aac-3f88-4962-8add-4c69426ba748",
        "authorId" : "3a4b4830-dc71-4d7e-a7db-de2453284945",
        "body" : "whoops, didn't mean to leave that in :-P",
        "createdAt" : "2017-10-11T19:09:46Z",
        "updatedAt" : "2017-10-19T17:21:07Z",
        "lastEditedBy" : "3a4b4830-dc71-4d7e-a7db-de2453284945",
        "tags" : [
        ]
      }
    ],
    "commit" : "f22bfcd65acafc75235665feac3b147f16e30998",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +25,29 @@\t\"k8s.io/apimachinery/pkg/runtime/schema\"\n\t\"k8s.io/client-go/discovery\"\n\tdiscocache \"k8s.io/client-go/discovery/cached\" // Saturday Night Fever\n\t\"k8s.io/client-go/dynamic\"\n\t\"k8s.io/client-go/scale\""
  },
  {
    "id" : "ce1fb419-9139-4597-8279-8b2de7c5ab52",
    "prId" : 53743,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/53743#pullrequestreview-69966401",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e5444d24-e050-4429-a720-240e44ebf7f6",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "please open an issue to put this on the controller context and share it amongst all controllers.  namespace cleanup, GC, and this come to mind.",
        "createdAt" : "2017-10-17T15:25:22Z",
        "updatedAt" : "2017-10-19T17:21:07Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "ec8822e6-0304-45ad-a207-930166e103d1",
        "parentId" : "e5444d24-e050-4429-a720-240e44ebf7f6",
        "authorId" : "3a4b4830-dc71-4d7e-a7db-de2453284945",
        "body" : "https://github.com/kubernetes/kubernetes/issues/54084",
        "createdAt" : "2017-10-17T17:38:24Z",
        "updatedAt" : "2017-10-19T17:21:07Z",
        "lastEditedBy" : "3a4b4830-dc71-4d7e-a7db-de2453284945",
        "tags" : [
        ]
      }
    ],
    "commit" : "f22bfcd65acafc75235665feac3b147f16e30998",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +77,81 @@\tcachedDiscovery := discocache.NewMemCacheClient(hpaClientGoClient.Discovery())\n\trestMapper := discovery.NewDeferredDiscoveryRESTMapper(cachedDiscovery, apimeta.InterfacesForUnstructured)\n\trestMapper.Reset()\n\t// we don't use cached discovery because DiscoveryScaleKindResolver does its own caching,\n\t// so we want to re-fetch every time when we actually ask for it"
  },
  {
    "id" : "0ed74cc7-dc71-42be-91b3-1362d0de21c3",
    "prId" : 40710,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/40710#pullrequestreview-19313579",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "65586f11-dc37-4950-8aa9-3a90618ffbf3",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "this belongs to the PR?",
        "createdAt" : "2017-01-31T13:32:17Z",
        "updatedAt" : "2017-02-01T00:55:03Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "b84da5a6-ddd2-4630-aad8-b7daa6ff3f3a",
        "parentId" : "65586f11-dc37-4950-8aa9-3a90618ffbf3",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "> this belongs to the PR?\r\n\r\nsadly yes.  the client types aren't compatible.  Need to be able to get each type of client until we fully shift.",
        "createdAt" : "2017-01-31T13:33:19Z",
        "updatedAt" : "2017-02-01T00:55:03Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "a12d45a24031d20dfffd5186eef675f77260b2bd",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +41,45 @@\treplicaCalc := podautoscaler.NewReplicaCalculator(metricsClient, hpaClient.Core())\n\tgo podautoscaler.NewHorizontalController(\n\t\tctx.ClientBuilder.ClientGoClientOrDie(\"horizontal-pod-autoscaler\").Core(),\n\t\thpaClient.Extensions(),\n\t\thpaClient.Autoscaling(),"
  }
]