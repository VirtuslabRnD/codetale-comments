[
  {
    "id" : "6d417100-be78-47d7-959a-8e65c3bc338f",
    "prId" : 80433,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/80433#pullrequestreview-264879192",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "56967853-ba36-44fe-a80f-427367dbeb45",
        "parentId" : null,
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "this is technically a quick workaround for not having something like `kubectl explain pod.spec` in kubeadm.\r\n/assign @fabriziopandini \r\n",
        "createdAt" : "2019-07-22T15:04:49Z",
        "updatedAt" : "2019-07-22T15:05:28Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      }
    ],
    "commit" : "ca8d5759ffcf00c98dacc42e6e2dc66b112e9c50",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +99,103 @@\t\tLong: dedent.Dedent(`\n\t\t\tThis command prints configurations for subcommands provided.\n\t\t\tFor details, see: https://godoc.org/k8s.io/kubernetes/cmd/kubeadm/app/apis/kubeadm/v1beta2`),\n\t\tRunE: cmdutil.SubCmdRunE(\"print\"),\n\t}"
  },
  {
    "id" : "d82f8121-ccd1-490e-baa5-de603f01b022",
    "prId" : 77946,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/77946#pullrequestreview-238242509",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "773c7cda-256e-4e20-b6e7-30072b21976f",
        "parentId" : null,
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "just wanted to note that potential consumers of this variant would need to migrate to file only.\r\nalso that we need to have this deprecated for 12 months as GA functionality.\r\ncc @rosti\r\n",
        "createdAt" : "2019-05-15T18:15:43Z",
        "updatedAt" : "2019-05-15T18:15:52Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      },
      {
        "id" : "729f5243-3f4e-473e-ba8d-a7c05fc4668a",
        "parentId" : "773c7cda-256e-4e20-b6e7-30072b21976f",
        "authorId" : "27315fad-771e-420e-af79-534db73fcb49",
        "body" : "@neolit123 do you want me to put that in the above deprecation message?",
        "createdAt" : "2019-05-15T18:31:14Z",
        "updatedAt" : "2019-05-15T18:31:14Z",
        "lastEditedBy" : "27315fad-771e-420e-af79-534db73fcb49",
        "tags" : [
        ]
      },
      {
        "id" : "3be2627f-a915-438b-8817-5dd8d1e102c3",
        "parentId" : "773c7cda-256e-4e20-b6e7-30072b21976f",
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "let's wait on rosti's comments.\r\n",
        "createdAt" : "2019-05-15T21:04:47Z",
        "updatedAt" : "2019-05-15T21:04:47Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      },
      {
        "id" : "79a17afe-9031-47c3-aaa2-dccd6ce74009",
        "parentId" : "773c7cda-256e-4e20-b6e7-30072b21976f",
        "authorId" : "cccc7bed-95f4-42a9-83ef-6ba1a4dca7ec",
        "body" : "This is actually the worst of them all. You don't get to see what's getting uploaded and users can easily mistake this to \"patch\" sort of command. Thus, they can inadvertently set some fields of their ClusterConfiguration to defaults and not even notice it.",
        "createdAt" : "2019-05-16T08:22:10Z",
        "updatedAt" : "2019-05-16T08:22:10Z",
        "lastEditedBy" : "cccc7bed-95f4-42a9-83ef-6ba1a4dca7ec",
        "tags" : [
        ]
      }
    ],
    "commit" : "c55eaa9b5a756b44174df7ed74a2086198152712",
    "line" : 51,
    "diffHunk" : "@@ -1,1 +350,354 @@\t\tDeprecated: \"please see kubeadm init phase upload-config\",\n\t\tUse:        \"from-flags\",\n\t\tShort:      \"Create the in-cluster configuration file for the first time from using flags\",\n\t\tLong: fmt.Sprintf(dedent.Dedent(`\n\t\t\tUsing this command, you can upload configuration to the ConfigMap in the cluster using the same flags you gave to 'kubeadm init'."
  },
  {
    "id" : "dc0dcd88-5813-4dfd-90dc-0bae5ead45d0",
    "prId" : 69969,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/69969#pullrequestreview-166435471",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "18e2ad1b-f72a-40f9-9e1c-1102950e8ca8",
        "parentId" : null,
        "authorId" : "a09f2d48-fec0-4c0d-bd81-6de7378a6ebf",
        "body" : "Can we make sure that we can always get the data of `ClusterConfigurationConfigMapKey`? i.e., is it possible that the configmap doesn't have the data of such key?",
        "createdAt" : "2018-10-19T01:48:33Z",
        "updatedAt" : "2018-10-19T01:48:36Z",
        "lastEditedBy" : "a09f2d48-fec0-4c0d-bd81-6de7378a6ebf",
        "tags" : [
        ]
      },
      {
        "id" : "f17164cf-5cdc-462f-a763-d238617cdaee",
        "parentId" : "18e2ad1b-f72a-40f9-9e1c-1102950e8ca8",
        "authorId" : "a09f2d48-fec0-4c0d-bd81-6de7378a6ebf",
        "body" : "Seems like it's impossible :)",
        "createdAt" : "2018-10-19T09:02:15Z",
        "updatedAt" : "2018-10-19T09:02:15Z",
        "lastEditedBy" : "a09f2d48-fec0-4c0d-bd81-6de7378a6ebf",
        "tags" : [
        ]
      }
    ],
    "commit" : "325be03a45df8e5e9b3302f2beb5d7770ef22ec5",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +384,388 @@\t\tfmt.Fprintf(out, \"%s\", value)\n\t} else {\n\t\tfmt.Fprintf(out, \"%s\", cfgConfigMap.Data[constants.ClusterConfigurationConfigMapKey])\n\t}\n\treturn nil"
  },
  {
    "id" : "c691189c-86d8-490f-a1e8-0ea6e5ec6636",
    "prId" : 69969,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/69969#pullrequestreview-166689428",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "be2014f9-e75f-4089-b314-6131740d5f0e",
        "parentId" : null,
        "authorId" : "cceb72db-05cd-42c9-9219-c1058f5b3cc3",
        "body" : "@neolit123 I'm not super familiar with golang idioms, but the key here is that even when retrieving with the wrong key there was no error (simply returned empty string). So, I would think that we can use the same conditional but based on length of the string returned, not the 'ok' status?",
        "createdAt" : "2018-10-19T14:44:04Z",
        "updatedAt" : "2018-10-19T14:44:04Z",
        "lastEditedBy" : "cceb72db-05cd-42c9-9219-c1058f5b3cc3",
        "tags" : [
        ]
      },
      {
        "id" : "1fe8db5a-f655-42a3-ab8a-4b5ada69331b",
        "parentId" : "be2014f9-e75f-4089-b314-6131740d5f0e",
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "we seem to be using `ok` in other areas config-map related areas of kubeadm. the `ok` part as in golang ensures that the key actually exists in the map.\r\n\r\notherwise doing something like mymap[\"some-key\"] on a missing key would return an empty string and we couldn't differentiate between a `\"\"` value assigned to a key and a missing key.\r\n",
        "createdAt" : "2018-10-19T20:24:30Z",
        "updatedAt" : "2018-10-19T20:24:30Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      },
      {
        "id" : "58fb4666-dac1-4f46-a88d-3dd8229ed671",
        "parentId" : "be2014f9-e75f-4089-b314-6131740d5f0e",
        "authorId" : "cceb72db-05cd-42c9-9219-c1058f5b3cc3",
        "body" : "@neolit123 thanks for the explanation! ",
        "createdAt" : "2018-10-19T20:44:13Z",
        "updatedAt" : "2018-10-19T20:44:13Z",
        "lastEditedBy" : "cceb72db-05cd-42c9-9219-c1058f5b3cc3",
        "tags" : [
        ]
      }
    ],
    "commit" : "325be03a45df8e5e9b3302f2beb5d7770ef22ec5",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +381,385 @@\t}\n\t// No need to append \\n as that already exists in the ConfigMap\n\tif value, ok := cfgConfigMap.Data[constants.InitConfigurationConfigMapKey]; ok {\n\t\tfmt.Fprintf(out, \"%s\", value)\n\t} else {"
  },
  {
    "id" : "0385a242-7859-4d8c-8883-d6e5e392439d",
    "prId" : 69289,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/69289#pullrequestreview-161556585",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "89349981-24da-4f5c-845b-fc2059654a0e",
        "parentId" : null,
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "?",
        "createdAt" : "2018-10-02T22:09:17Z",
        "updatedAt" : "2018-10-04T11:20:24Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      },
      {
        "id" : "e634002f-7165-401a-a970-eb448d71f243",
        "parentId" : "89349981-24da-4f5c-845b-fc2059654a0e",
        "authorId" : "8a27151d-3530-4221-90e8-48b3a85cba37",
        "body" : "This gives some info about api version supported by kubeadm command migrate...",
        "createdAt" : "2018-10-04T11:08:21Z",
        "updatedAt" : "2018-10-04T11:20:24Z",
        "lastEditedBy" : "8a27151d-3530-4221-90e8-48b3a85cba37",
        "tags" : [
        ]
      }
    ],
    "commit" : "b4092acdb64c81b66d9a7f0139119bb1cd053e54",
    "line" : 55,
    "diffHunk" : "@@ -1,1 +232,236 @@\t\t\tIn this version of kubeadm, the following API versions are supported:\n\t\t\t- %s\n\t\t\t- %s\n\n\t\t\tFurther, kubeadm can only write out config of version %q, but read both types."
  },
  {
    "id" : "9d52aa21-f98d-4327-975d-48877aa4033b",
    "prId" : 67441,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/67441#pullrequestreview-148385484",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1b69fa2d-487c-4fc1-b3bf-1d503794d03b",
        "parentId" : null,
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "?",
        "createdAt" : "2018-08-20T21:51:32Z",
        "updatedAt" : "2018-08-22T08:44:21Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      },
      {
        "id" : "d83fca37-8088-4491-b4e1-0575db989bde",
        "parentId" : "1b69fa2d-487c-4fc1-b3bf-1d503794d03b",
        "authorId" : "cccc7bed-95f4-42a9-83ef-6ba1a4dca7ec",
        "body" : "I think, this one was a comment in the old PR. We decided to mark all unaddressed comments in the original PR as TODOs in the new one.",
        "createdAt" : "2018-08-22T08:46:32Z",
        "updatedAt" : "2018-08-22T08:46:32Z",
        "lastEditedBy" : "cccc7bed-95f4-42a9-83ef-6ba1a4dca7ec",
        "tags" : [
        ]
      }
    ],
    "commit" : "0fde05ac53dfd04a0217c9203fe39e41ce099b6c",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +164,168 @@func getDefaultedInitConfig() (*kubeadmapi.InitConfiguration, error) {\n\treturn configutil.ConfigFileAndDefaultsToInternalConfig(\"\", &kubeadmapiv1alpha3.InitConfiguration{\n\t\t// TODO: Probably move to getDefaultedClusterConfig?\n\t\tClusterConfiguration: kubeadmapiv1alpha3.ClusterConfiguration{\n\t\t\tAPI:               kubeadmapiv1alpha3.API{AdvertiseAddress: \"1.2.3.4\"},"
  },
  {
    "id" : "d6db9b1c-2b0d-4749-b4a7-8ed468ce6a11",
    "prId" : 66074,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/66074#pullrequestreview-136564463",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5328cb21-7c1c-45df-b0e5-4b51bd6a92a2",
        "parentId" : null,
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "oh, printing this as a default to `true` might not be a good idea...\r\ni assume it's possible to modify it in the `internalcfg` before marshaling?\r\nthen fix the validation eventually, i guess.\r\n",
        "createdAt" : "2018-07-11T20:21:48Z",
        "updatedAt" : "2018-07-12T09:42:34Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      },
      {
        "id" : "27913bcb-03c8-47ed-90da-0e88ec8d31f4",
        "parentId" : "5328cb21-7c1c-45df-b0e5-4b51bd6a92a2",
        "authorId" : "cccc7bed-95f4-42a9-83ef-6ba1a4dca7ec",
        "body" : "I understand it, but this is out of the scope for this PR. I can try to get a workaround for that, but this can be done in another PR.",
        "createdAt" : "2018-07-12T09:11:42Z",
        "updatedAt" : "2018-07-12T09:42:34Z",
        "lastEditedBy" : "cccc7bed-95f4-42a9-83ef-6ba1a4dca7ec",
        "tags" : [
        ]
      }
    ],
    "commit" : "a899760fef7da0f48d3b8845a2ff98fcdbd87d8d",
    "line" : 120,
    "diffHunk" : "@@ -1,1 +176,180 @@\t\tToken: sillyToken.Token.String(),\n\t\tDiscoveryTokenAPIServers:               []string{\"kube-apiserver:6443\"},\n\t\tDiscoveryTokenUnsafeSkipCAVerification: true, // TODO: DiscoveryTokenUnsafeSkipCAVerification: true needs to be set for validation to pass, but shouldn't be recommended as the default\n\t})\n\tif err != nil {"
  },
  {
    "id" : "cf9dfcce-5e3a-41d3-b1f9-30a30c22a802",
    "prId" : 66074,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/66074#pullrequestreview-136566377",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "224ed0ad-0857-4163-a582-44ff36249a01",
        "parentId" : null,
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "i haven't look at how this works or tested it.\r\nso we use the init configuration from `getDefaultedInitConfig()` and then pass that to `registration.GetFromInternalConfig()` to be able to get the config for a certain known component type?\r\n\r\nit seems a bit strange as an interface. :thinking: \r\n",
        "createdAt" : "2018-07-11T21:02:54Z",
        "updatedAt" : "2018-07-12T09:42:34Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      },
      {
        "id" : "43b740da-d1ed-4471-8f82-23a215d77847",
        "parentId" : "224ed0ad-0857-4163-a582-44ff36249a01",
        "authorId" : "cccc7bed-95f4-42a9-83ef-6ba1a4dca7ec",
        "body" : "This is how it works. Component configs can be directly influenced by a top level config (currently `InitConfiguration`). For example an option in some component config may be directly depending on the value of another option in the `InitConfiguration`",
        "createdAt" : "2018-07-12T09:16:49Z",
        "updatedAt" : "2018-07-12T09:42:34Z",
        "lastEditedBy" : "cccc7bed-95f4-42a9-83ef-6ba1a4dca7ec",
        "tags" : [
        ]
      }
    ],
    "commit" : "a899760fef7da0f48d3b8845a2ff98fcdbd87d8d",
    "line" : 135,
    "diffHunk" : "@@ -1,1 +191,195 @@\t}\n\n\trealobj, ok := registration.GetFromInternalConfig(defaultedInitConfig)\n\tif !ok {\n\t\treturn []byte{}, fmt.Errorf(\"GetFromInternalConfig failed\")"
  },
  {
    "id" : "9f665c4b-0921-4054-8847-d23c6c740ea1",
    "prId" : 64408,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/64408#pullrequestreview-124210754",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f17c82e3-7cb6-4996-8fa7-4b421e937a1a",
        "parentId" : null,
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "The question I had earlier is do we want to tie this object to a specific api-version, b/c it shouldn't mutate.  ",
        "createdAt" : "2018-05-30T00:08:51Z",
        "updatedAt" : "2018-06-01T14:14:41Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      }
    ],
    "commit" : "d01a7be2acfdf43a3b12d1d4231145e1107c633a",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +54,58 @@\tavailableAPIObjects = []string{masterConfig, nodeConfig}\n\t// sillyToken is only set statically to make kubeadm not randomize the token on every run\n\tsillyToken = kubeadmapiv1alpha2.BootstrapToken{\n\t\tToken: &kubeadmapiv1alpha2.BootstrapTokenString{\n\t\t\tID:     \"abcdef\","
  },
  {
    "id" : "76314340-b9f5-4b13-9962-bb202c940dc9",
    "prId" : 64232,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/64232#pullrequestreview-124261526",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "619212bb-4a76-4886-80ab-b44ff353daa2",
        "parentId" : null,
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "What's the user story here?  I'm just wondering if adding a cli makes sense and will be used, b/c once created it will be near impossible to take out.  \r\n\r\nespecially seeing how we have diff and upgrade... \r\n\r\n/cc @liztio ",
        "createdAt" : "2018-05-24T01:49:12Z",
        "updatedAt" : "2018-05-30T06:29:15Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      },
      {
        "id" : "87ddfa76-89fd-4ee1-b727-3b9477b1047e",
        "parentId" : "619212bb-4a76-4886-80ab-b44ff353daa2",
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "This is client-side migration of config files (bytes on disk) only, it doesn't touch any upgrading code nor is a replacement for anything upgrade-specific.",
        "createdAt" : "2018-05-30T06:18:00Z",
        "updatedAt" : "2018-05-30T06:29:15Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      }
    ],
    "commit" : "7914dce526a56347cdafcc239487a4a85f9e5e26",
    "line" : 37,
    "diffHunk" : "@@ -1,1 +144,148 @@\n// NewCmdConfigMigrate returns cobra.Command for \"kubeadm config migrate\" command\nfunc NewCmdConfigMigrate(out io.Writer) *cobra.Command {\n\tvar oldCfgPath, newCfgPath string\n\tcmd := &cobra.Command{"
  },
  {
    "id" : "854d849c-9bca-41ee-82a5-8cf215d18e94",
    "prId" : 64177,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/64177#pullrequestreview-122468987",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a05d1232-9e2a-43af-aa8a-c77e91176298",
        "parentId" : null,
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "Can you please move this to `AddImagesCommonConfigFlags`? That will solve the issue",
        "createdAt" : "2018-05-23T06:38:46Z",
        "updatedAt" : "2018-05-23T08:16:58Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      },
      {
        "id" : "23d042f0-662e-4331-a686-e5447e0e9565",
        "parentId" : "a05d1232-9e2a-43af-aa8a-c77e91176298",
        "authorId" : "05637862-b60e-403e-8519-09d1b3f0c9c2",
        "body" : "little confused about it. `AddImagesCommonConfigFlags` are common flag for `list` and `pull` flag, why move it?",
        "createdAt" : "2018-05-23T07:11:50Z",
        "updatedAt" : "2018-05-23T08:16:58Z",
        "lastEditedBy" : "05637862-b60e-403e-8519-09d1b3f0c9c2",
        "tags" : [
        ]
      },
      {
        "id" : "0895a69e-2ffc-4745-96ca-1e9e72ca3bd3",
        "parentId" : "a05d1232-9e2a-43af-aa8a-c77e91176298",
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "`--config` needs to be common between both `list` and `pull`. Both use the config file.\r\nThe thing that pull needs that list don't is `CRISocket`, so that should be passed correctly (!) to pull only\r\nMakes sense?",
        "createdAt" : "2018-05-23T07:46:56Z",
        "updatedAt" : "2018-05-23T08:16:58Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      },
      {
        "id" : "87d5d2b0-b02b-4d74-b51f-f2592da9ed4b",
        "parentId" : "a05d1232-9e2a-43af-aa8a-c77e91176298",
        "authorId" : "05637862-b60e-403e-8519-09d1b3f0c9c2",
        "body" : "got it, thanks",
        "createdAt" : "2018-05-23T07:55:28Z",
        "updatedAt" : "2018-05-23T08:16:58Z",
        "lastEditedBy" : "05637862-b60e-403e-8519-09d1b3f0c9c2",
        "tags" : [
        ]
      }
    ],
    "commit" : "54d8466c71a07047304b733c877e042bc48aa3fb",
    "line" : 70,
    "diffHunk" : "@@ -1,1 +397,401 @@\tflagSet.StringVar(featureGatesString, \"feature-gates\", *featureGatesString, \"A set of key=value pairs that describe feature gates for various features. \"+\n\t\t\"Options are:\\n\"+strings.Join(features.KnownFeatures(&features.InitFeatureGates), \"\\n\"))\n\tflagSet.StringVar(cfgPath, \"config\", *cfgPath, \"Path to kubeadm config file.\")\n}\n"
  },
  {
    "id" : "f49de825-045f-4ab2-b6b2-d1579a6ef5f8",
    "prId" : 63783,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/63783#pullrequestreview-120009939",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b529449b-1d96-47e0-aded-55b198261289",
        "parentId" : null,
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "Please avoid alias versioned naming in the future, b/c this causes a lot of extra busy work every time you promote an api.  ",
        "createdAt" : "2018-05-14T19:55:09Z",
        "updatedAt" : "2018-05-14T19:55:10Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      },
      {
        "id" : "2fe798a6-7547-47a7-b5d1-bfca2cd3382d",
        "parentId" : "b529449b-1d96-47e0-aded-55b198261289",
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "I think it's preferable. The renaming is mechanical.\r\nWe need it to be able to handle multiple versions of the external API smoothly.",
        "createdAt" : "2018-05-14T20:03:20Z",
        "updatedAt" : "2018-05-14T20:03:20Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      },
      {
        "id" : "64ede7cf-fa00-4cc1-9096-1b619e324483",
        "parentId" : "b529449b-1d96-47e0-aded-55b198261289",
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "The import code should never use two versions of the same api.\r\n\r\nI have pretty strong feelings on this stuff, b/c I've eaten it pretty hard on api shuffles. ",
        "createdAt" : "2018-05-14T21:06:23Z",
        "updatedAt" : "2018-05-14T21:07:53Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      }
    ],
    "commit" : "68c68dfadcba95d1501548bf34896fa1a31690df",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +30,34 @@\tclientset \"k8s.io/client-go/kubernetes\"\n\tkubeadmapi \"k8s.io/kubernetes/cmd/kubeadm/app/apis/kubeadm\"\n\tkubeadmapiv1alpha1 \"k8s.io/kubernetes/cmd/kubeadm/app/apis/kubeadm/v1alpha1\"\n\tcmdutil \"k8s.io/kubernetes/cmd/kubeadm/app/cmd/util\"\n\t\"k8s.io/kubernetes/cmd/kubeadm/app/constants\""
  },
  {
    "id" : "956ccca6-2453-40b7-bd60-758cb0a2153b",
    "prId" : 52251,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/52251#pullrequestreview-62464328",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e91e585e-1412-438f-b202-756bed6778a0",
        "parentId" : null,
        "authorId" : "b8f6188a-f26e-4203-bed3-a5d075997fdf",
        "body" : "returs --> returns",
        "createdAt" : "2017-09-13T14:54:54Z",
        "updatedAt" : "2017-09-23T12:08:30Z",
        "lastEditedBy" : "b8f6188a-f26e-4203-bed3-a5d075997fdf",
        "tags" : [
        ]
      }
    ],
    "commit" : "42bd5001340085fc56dd74b9900c1fe99732506d",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +66,70 @@}\n\n// NewCmdConfigUpload returs cobra.Command for \"kubeadm config upload\" command\nfunc NewCmdConfigUpload(out io.Writer, kubeConfigFile *string) *cobra.Command {\n\tcmd := &cobra.Command{"
  },
  {
    "id" : "a53ced61-e2c3-444c-b13a-1a4ff2427c92",
    "prId" : 50980,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/50980#pullrequestreview-57413114",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9aa52f4a-4467-4623-b132-37ee2fb8be11",
        "parentId" : null,
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "Why are you passing string ptrs here vs. string?  ",
        "createdAt" : "2017-08-20T20:14:27Z",
        "updatedAt" : "2017-08-22T15:49:50Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      },
      {
        "id" : "7c5552c7-6eff-4e5c-b801-1281cdc52963",
        "parentId" : "9aa52f4a-4467-4623-b132-37ee2fb8be11",
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "In order for `NewCmdConfigUpload` to actually be able to catch the value of `kubeConfigFile` later, if passed by value; it will be `\"\"`. Flags are populated later on, after this call is made.",
        "createdAt" : "2017-08-21T06:47:08Z",
        "updatedAt" : "2017-08-22T15:49:50Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      }
    ],
    "commit" : "28117323bc92ebfc0eec8ade6531085e589b7fcd",
    "line" : 59,
    "diffHunk" : "@@ -1,1 +57,61 @@\tcmd.PersistentFlags().StringVar(&kubeConfigFile, \"kubeconfig\", \"/etc/kubernetes/admin.conf\", \"The KubeConfig file to use for talking to the cluster\")\n\n\tcmd.AddCommand(NewCmdConfigUpload(out, &kubeConfigFile))\n\tcmd.AddCommand(NewCmdConfigView(out, &kubeConfigFile))\n"
  },
  {
    "id" : "c74740d7-3b0c-4b8b-8754-b6384b042dd4",
    "prId" : 50980,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/50980#pullrequestreview-57523685",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5bda7d0d-e90a-44ac-9eb1-65494c34d578",
        "parentId" : null,
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "Please denote details of where the configuration is stored so they can independently verify. ",
        "createdAt" : "2017-08-20T20:16:41Z",
        "updatedAt" : "2017-08-22T15:49:50Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      },
      {
        "id" : "a9ae2623-7f97-4138-9a52-795f3b64e5c4",
        "parentId" : "5bda7d0d-e90a-44ac-9eb1-65494c34d578",
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "done",
        "createdAt" : "2017-08-21T14:57:59Z",
        "updatedAt" : "2017-08-22T15:49:50Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      }
    ],
    "commit" : "28117323bc92ebfc0eec8ade6531085e589b7fcd",
    "line" : 80,
    "diffHunk" : "@@ -1,1 +78,82 @@\treturn &cobra.Command{\n\t\tUse:   \"view\",\n\t\tShort: \"View the kubeadm configuration stored inside the cluster\",\n\t\tLong: fmt.Sprintf(dedent.Dedent(`\n\t\t\tUsing this command, you can view the ConfigMap in the cluster where the configuration for kubeadm is located"
  }
]