[
  {
    "id" : "542606cb-3fdd-420b-b811-b0e5a2e23bc8",
    "prId" : 77507,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/77507#pullrequestreview-237215792",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ba640c1c-5558-4ff1-b898-9bec12fef61f",
        "parentId" : null,
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "this might need a CombinedOutput instead, but since it was part of the old code let's leave it as is...\r\n",
        "createdAt" : "2019-05-14T12:41:27Z",
        "updatedAt" : "2019-05-14T12:41:28Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      }
    ],
    "commit" : "56ce743f7b68335683eebaec4dfb7cc1804170d4",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +190,194 @@\t\tumountDirsCmd := fmt.Sprintf(\"awk '$2 ~ path {print $2}' path=%s/ /proc/mounts | xargs -r umount\", absoluteKubeletRunDirectory)\n\t\tklog.V(1).Infof(\"[reset] Executing command %q\", umountDirsCmd)\n\t\tumountOutputBytes, err := exec.Command(\"sh\", \"-c\", umountDirsCmd).Output()\n\t\tif err != nil {\n\t\t\tklog.Errorf(\"[reset] Failed to unmount mounted directories in %s: %s\\n\", kubeadmconstants.KubeletRunDirectory, string(umountOutputBytes))"
  },
  {
    "id" : "a8c2bd29-8b5e-4563-9156-4550d20699e4",
    "prId" : 74870,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/74870#pullrequestreview-210346622",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "617840f3-e60e-4d60-a5f9-6dc1b62c01d3",
        "parentId" : null,
        "authorId" : "bfaab188-fe7f-45cd-8e91-eeb4626a5f04",
        "body" : "This is removing the `os.Stat` along with the `kubeadmutil.CheckErr` which will fatal when called. This is a change in behavior that wasn't called out in the description. It seems like this might cause an NPE at some point later on in the code?\r\n\r\nAlso the error checking is a little funny here and could be reduced / an indentation level removed by flipping the logic around to look more go-ish:\r\n\r\n```\r\nclient, err := ...\r\nif err != nil {\r\n  // log the thing\r\n  // os.exit\r\n}\r\ncfg, err := ...\r\n```",
        "createdAt" : "2019-03-04T15:27:26Z",
        "updatedAt" : "2019-03-06T01:17:56Z",
        "lastEditedBy" : "bfaab188-fe7f-45cd-8e91-eeb4626a5f04",
        "tags" : [
        ]
      },
      {
        "id" : "62188220-32b7-4f7b-8921-fd1babec6e8f",
        "parentId" : "617840f3-e60e-4d60-a5f9-6dc1b62c01d3",
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "@chuckha \r\n\r\n> depends on #74869\r\n> please review only the second commit.\r\n\r\n:)\r\n\r\n> This is removing the os.Stat along with the kubeadmutil.CheckErr which will fatal when called. This is a change in behavior that wasn't called out in the description. It seems like this might cause an NPE at some point later on in the code?\r\n> Also the error checking is a little funny here and could be reduced / an indentation level removed by flipping the logic around to look more go-ish:\r\n\r\nwe don't want to exit if `err != nil` (we cannot obtain a client) but instead continue.\r\nthere is follow up logic has extra checks if `cfg != nil`. reason for that is that the lack of InitConfiguration is not fatal for reset.\r\n\r\nprone to panics, but that's how InitConfiguration is used here...\r\nwe need e2e for reset.\r\n",
        "createdAt" : "2019-03-04T20:06:35Z",
        "updatedAt" : "2019-03-06T01:17:56Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      },
      {
        "id" : "16b3f728-bd5c-4822-9e87-c645d8c639b3",
        "parentId" : "617840f3-e60e-4d60-a5f9-6dc1b62c01d3",
        "authorId" : "bfaab188-fe7f-45cd-8e91-eeb4626a5f04",
        "body" : "oops! my mistake.",
        "createdAt" : "2019-03-04T20:19:22Z",
        "updatedAt" : "2019-03-06T01:17:56Z",
        "lastEditedBy" : "bfaab188-fe7f-45cd-8e91-eeb4626a5f04",
        "tags" : [
        ]
      }
    ],
    "commit" : "6f6b364b9c8438e8fa0d53df5efbba22b21c709f",
    "line" : 3,
    "diffHunk" : "@@ -1,1 +66,70 @@\t\t\tvar cfg *kubeadmapi.InitConfiguration\n\t\t\tclient, err = getClientset(kubeConfigFile, false)\n\t\t\tif err == nil {\n\t\t\t\tklog.V(1).Infof(\"[reset] Loaded client set from kubeconfig file: %s\", kubeConfigFile)\n\t\t\t\tcfg, err = configutil.FetchInitConfigurationFromCluster(client, os.Stdout, \"reset\", false)"
  },
  {
    "id" : "dc534698-19cc-4672-a2aa-29f592520459",
    "prId" : 74410,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/74410#pullrequestreview-207523884",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "926b0f49-e6e4-4d9f-8aa9-5e9b29358017",
        "parentId" : null,
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "we need to check if `cfg` is not `nil` here.",
        "createdAt" : "2019-02-25T17:19:03Z",
        "updatedAt" : "2019-02-26T11:41:17Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      }
    ],
    "commit" : "3306efd619153cccea035faa1a22865e84927357",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +75,79 @@\t\t\t}\n\n\t\t\tif criSocketPath == \"\" {\n\t\t\t\tcriSocketPath, err = resetDetectCRISocket(cfg)\n\t\t\t\tkubeadmutil.CheckErr(err)"
  },
  {
    "id" : "89c95f42-a1eb-4f8f-8f6c-96b57b2d11f4",
    "prId" : 74410,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/74410#pullrequestreview-207726348",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b91b2022-8ff7-4ac7-8f80-768e25373df8",
        "parentId" : null,
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "i don't think we should call `Run` if `cfg` is `nil`",
        "createdAt" : "2019-02-25T17:20:19Z",
        "updatedAt" : "2019-02-26T11:41:17Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      },
      {
        "id" : "1da14131-f9ca-4c0d-959a-1fa001ad0ff2",
        "parentId" : "b91b2022-8ff7-4ac7-8f80-768e25373df8",
        "authorId" : "cfee56b2-957f-461a-9a7c-e65e86542734",
        "body" : "We not call `Run` if cfg is nil, reset will be aborted. \r\nI see that in the `Run` workflow, the next processes will continue, even though have the mistakes of the previous step.\r\nI am not sure if this place the same as `Run` workflow.",
        "createdAt" : "2019-02-26T00:28:03Z",
        "updatedAt" : "2019-02-26T11:41:17Z",
        "lastEditedBy" : "cfee56b2-957f-461a-9a7c-e65e86542734",
        "tags" : [
        ]
      },
      {
        "id" : "440c3ea3-5067-4d1a-b015-76d5786115fc",
        "parentId" : "b91b2022-8ff7-4ac7-8f80-768e25373df8",
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "yes, i guess that's true.\r\ni guess we can pass `nil` here but inside Run we need to not use `cfg.SomeField` because it will panic.\r\n",
        "createdAt" : "2019-02-26T00:33:52Z",
        "updatedAt" : "2019-02-26T11:41:17Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      },
      {
        "id" : "af6be179-ccec-4cc9-bc10-e877f3cbd45c",
        "parentId" : "b91b2022-8ff7-4ac7-8f80-768e25373df8",
        "authorId" : "cfee56b2-957f-461a-9a7c-e65e86542734",
        "body" : "I check the currently code, I find `resetDetectCRISocket` , `getEtcdDataDir` and `RemoveStackedEtcdMemberFromCluster` using `cfg`, and we should check `cfg` is not nil in these place if we pass `nil` here.\r\nShould i check `cfg` is nil before invoke `Run`, or check it inside Run? Which one do you prefer?",
        "createdAt" : "2019-02-26T00:52:15Z",
        "updatedAt" : "2019-02-26T11:41:17Z",
        "lastEditedBy" : "cfee56b2-957f-461a-9a7c-e65e86542734",
        "tags" : [
        ]
      },
      {
        "id" : "6a6b9edf-83ef-4a17-ba0e-ec2815cf0555",
        "parentId" : "b91b2022-8ff7-4ac7-8f80-768e25373df8",
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "so we should run all the code that doesn't depend on `cfg`, but if a line is calling `cfg.SomeField` we should always check if `cfg` is `nil` before that.\r\n",
        "createdAt" : "2019-02-26T01:03:42Z",
        "updatedAt" : "2019-02-26T11:41:17Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      },
      {
        "id" : "26e07427-b1ff-4c62-9bfd-001eb70737bd",
        "parentId" : "b91b2022-8ff7-4ac7-8f80-768e25373df8",
        "authorId" : "cfee56b2-957f-461a-9a7c-e65e86542734",
        "body" : "yes, you said right.\r\n\r\nI considered it, maybe better to check `cfg` in advance, it is similar to invoke `getClientset` check `client` variable.\r\n\r\nI update the code in my local development environment, below is code:\r\n\r\n```go\r\ncfg, err := configutil.FetchInitConfigurationFromCluster(client, os.Stdout, \"reset\", false)\r\nif err != nil {\r\n\tkubeadmutil.CheckErr(errors.Errorf(\"[reset] Unable to fetch the kubeadm-config ConfigMap from cluster: %v\\n\", err))\r\n}\r\n```\r\n\r\nIf we check `cfg` is `nil` , reset will be aborted. If user wants to continue cleanup, should we tell them how to do it?\r\n",
        "createdAt" : "2019-02-26T01:44:31Z",
        "updatedAt" : "2019-02-26T11:41:17Z",
        "lastEditedBy" : "cfee56b2-957f-461a-9a7c-e65e86542734",
        "tags" : [
        ]
      },
      {
        "id" : "5b96a3c2-6c71-458b-b1f5-f5188969b68a",
        "parentId" : "b91b2022-8ff7-4ac7-8f80-768e25373df8",
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "replied here: https://github.com/kubernetes/kubernetes/pull/74410/files#r260095993\r\n",
        "createdAt" : "2019-02-26T01:51:11Z",
        "updatedAt" : "2019-02-26T11:41:17Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      }
    ],
    "commit" : "3306efd619153cccea035faa1a22865e84927357",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +83,87 @@\t\t\tr, err := NewReset(in, ignorePreflightErrorsSet, forceReset, certsDir, criSocketPath)\n\t\t\tkubeadmutil.CheckErr(err)\n\t\t\tkubeadmutil.CheckErr(r.Run(out, client, cfg))\n\t\t},\n\t}"
  },
  {
    "id" : "29e47659-b69f-41d5-86dd-7cb06a17c0d4",
    "prId" : 74410,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/74410#pullrequestreview-207731145",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "19c6c7e5-8c92-491f-92b8-b973f1e36c12",
        "parentId" : null,
        "authorId" : "cfee56b2-957f-461a-9a7c-e65e86542734",
        "body" : "Add check. Because `etcdphase.RemoveStackedEtcdMemberFromCluster(client, cfg)` function will use `cfg` and not check  it.",
        "createdAt" : "2019-02-26T02:11:27Z",
        "updatedAt" : "2019-02-26T11:41:17Z",
        "lastEditedBy" : "cfee56b2-957f-461a-9a7c-e65e86542734",
        "tags" : [
        ]
      },
      {
        "id" : "a457356e-dcc2-45fa-9739-572ceca7f839",
        "parentId" : "19c6c7e5-8c92-491f-92b8-b973f1e36c12",
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "nice catch.\r\n",
        "createdAt" : "2019-02-26T02:13:52Z",
        "updatedAt" : "2019-02-26T11:41:17Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      }
    ],
    "commit" : "3306efd619153cccea035faa1a22865e84927357",
    "line" : 48,
    "diffHunk" : "@@ -1,1 +147,151 @@\tif err == nil {\n\t\tdirsToClean = append(dirsToClean, etcdDataDir)\n\t\tif cfg != nil {\n\t\t\tif err := etcdphase.RemoveStackedEtcdMemberFromCluster(client, cfg); err != nil {\n\t\t\t\tklog.Warningf(\"[reset] failed to remove etcd member: %v\\n.Please manually remove this etcd member using etcdctl\", err)"
  },
  {
    "id" : "2627df4f-ccee-4adb-9eca-1d8920343584",
    "prId" : 74112,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/74112#pullrequestreview-205008159",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bedcc5b8-318d-420e-9960-7df7ec612317",
        "parentId" : null,
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "as a future PR i think we need to reduce the number of calls in reset.go to `FetchInitConfigurationFromCluster` to one. during a reset scenario we only need to fetch this configuration once and this equals one client config map fetch and only one call to apply dynamic defaults.\r\n",
        "createdAt" : "2019-02-19T00:53:54Z",
        "updatedAt" : "2019-02-22T01:13:39Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      },
      {
        "id" : "08db5029-9849-4a71-be6e-57fa5c629926",
        "parentId" : "bedcc5b8-318d-420e-9960-7df7ec612317",
        "authorId" : "cfee56b2-957f-461a-9a7c-e65e86542734",
        "body" : "@neolit123 I agree, but i see in reset.go called the `FetchInitConfigurationFromCluster` function three times. So i think if we wants to fetch configuration once, we should update these codes, can we have another PR to implement it? What do you think?",
        "createdAt" : "2019-02-19T02:25:39Z",
        "updatedAt" : "2019-02-22T01:13:39Z",
        "lastEditedBy" : "cfee56b2-957f-461a-9a7c-e65e86542734",
        "tags" : [
        ]
      },
      {
        "id" : "cbdf3d2b-0511-42d2-8489-4d6217c53572",
        "parentId" : "bedcc5b8-318d-420e-9960-7df7ec612317",
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "yes, as i've mentioned:\r\n> as a future PR\r\n",
        "createdAt" : "2019-02-19T02:28:33Z",
        "updatedAt" : "2019-02-22T01:13:39Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      },
      {
        "id" : "09f8c175-e196-4fa4-adfa-f492f611b1cd",
        "parentId" : "bedcc5b8-318d-420e-9960-7df7ec612317",
        "authorId" : "cfee56b2-957f-461a-9a7c-e65e86542734",
        "body" : "OK, i know. Thanks.\r\n\r\nIf needs, i'm so willing to do it.",
        "createdAt" : "2019-02-19T02:36:29Z",
        "updatedAt" : "2019-02-22T01:13:39Z",
        "lastEditedBy" : "cfee56b2-957f-461a-9a7c-e65e86542734",
        "tags" : [
        ]
      }
    ],
    "commit" : "83f5296a147183ba9471ddfeb73c76cab17471bc",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +211,215 @@\nfunc removeEtcdMember(client clientset.Interface) error {\n\tcfg, err := configutil.FetchInitConfigurationFromCluster(client, os.Stdout, \"reset\", false)\n\tif err != nil {\n\t\treturn err"
  },
  {
    "id" : "ffa4d79b-45ed-43b8-8af4-236959a1535c",
    "prId" : 74072,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/74072#pullrequestreview-204177619",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "91f27a3e-02aa-4bd1-9f30-531dc0119917",
        "parentId" : null,
        "authorId" : "0de88c3b-1f1a-401f-9fd1-cd63adc590fd",
        "body" : "Should we test just `err == nil`?",
        "createdAt" : "2019-02-14T18:01:01Z",
        "updatedAt" : "2019-02-14T18:29:17Z",
        "lastEditedBy" : "0de88c3b-1f1a-401f-9fd1-cd63adc590fd",
        "tags" : [
        ]
      },
      {
        "id" : "4ad02cc0-7387-4c33-9f2a-dfe257961b93",
        "parentId" : "91f27a3e-02aa-4bd1-9f30-531dc0119917",
        "authorId" : "cccc7bed-95f4-42a9-83ef-6ba1a4dca7ec",
        "body" : "I don't think it's safe to continue with reset if we encounter something different than ErrNotExist. The rest of the [stat(2)](http://man7.org/linux/man-pages/man2/stat.2.html) possible errors are bad enough for us to stop after the call to `getClientset`.",
        "createdAt" : "2019-02-14T23:34:08Z",
        "updatedAt" : "2019-02-14T23:34:08Z",
        "lastEditedBy" : "cccc7bed-95f4-42a9-83ef-6ba1a4dca7ec",
        "tags" : [
        ]
      },
      {
        "id" : "e1a42aea-0d4d-4f1b-a7b1-f78e910530ed",
        "parentId" : "91f27a3e-02aa-4bd1-9f30-531dc0119917",
        "authorId" : "f46daf11-7000-4650-ae5b-dd25c29b4e29",
        "body" : "@rosti \r\n> The rest of the [stat(2)](http://man7.org/linux/man-pages/man2/stat.2.html) possible errors are bad enough for us to stop after the call to `getClientset`\r\n\r\nisn't is what kubeadmutil.CheckErr(err) is called for?",
        "createdAt" : "2019-02-15T10:41:39Z",
        "updatedAt" : "2019-02-15T10:41:39Z",
        "lastEditedBy" : "f46daf11-7000-4650-ae5b-dd25c29b4e29",
        "tags" : [
        ]
      }
    ],
    "commit" : "7a8de82dfd344758a285246bc7955ca3e3ea405c",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +63,67 @@\n\t\t\tkubeConfigFile = cmdutil.FindExistingKubeConfig(kubeConfigFile)\n\t\t\tif _, err := os.Stat(kubeConfigFile); !os.IsNotExist(err) {\n\t\t\t\tclient, err = getClientset(kubeConfigFile, false)\n\t\t\t\tkubeadmutil.CheckErr(err)"
  },
  {
    "id" : "e01ade39-dfb7-4303-839a-396dc5b25a1f",
    "prId" : 71874,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/71874#pullrequestreview-204504427",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "33100ab6-0577-4480-bf66-836a5abbf30b",
        "parentId" : null,
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "added some V(1) output for this..",
        "createdAt" : "2019-02-16T04:11:24Z",
        "updatedAt" : "2019-02-19T15:41:25Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      }
    ],
    "commit" : "363c778d45b72c7a37b8d22dfaf6d7f8ee237261",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +67,71 @@\t\t\t\tklog.V(1).Infof(\"[reset] loaded client set from kubeconfig file: %s\", kubeConfigFile)\n\t\t\t} else {\n\t\t\t\tklog.V(1).Infof(\"[reset] could not get client set from missing kubeconfig file: %s\", kubeConfigFile)\n\t\t\t}\n"
  },
  {
    "id" : "3f4fd91d-c940-405b-a5e1-0a2e85e7f312",
    "prId" : 70874,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/70874#pullrequestreview-174528267",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4337d6a9-45f8-41c6-aaa6-8aebae1f5d2f",
        "parentId" : null,
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "i think we should print this in the cobra commands help screen e.g. `kubeadm reset --help` instead of printing it on every run.\r\n\r\nbut i will defer to @timothysc 's decision on this.\r\n",
        "createdAt" : "2018-11-13T18:31:55Z",
        "updatedAt" : "2018-11-13T18:32:36Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      },
      {
        "id" : "f663b3ea-74ed-4e09-a151-98079d4a7398",
        "parentId" : "4337d6a9-45f8-41c6-aaa6-8aebae1f5d2f",
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "It only matters when they run the command, so I'm fine with it here.  Otherwise it would just be noise in the help window. ",
        "createdAt" : "2018-11-13T18:48:41Z",
        "updatedAt" : "2018-11-13T18:48:41Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      }
    ],
    "commit" : "89a5d5cadd06612ceb466f2e514c4e9dd3e1aac5",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +193,197 @@\tto reset your system's IPVS tables.\n\t`\n\tfmt.Print(msg)\n\n\treturn nil"
  },
  {
    "id" : "54dcdae3-b6a5-43a3-aa67-d8a763f34dfb",
    "prId" : 70003,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/70003#pullrequestreview-169479808",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f3115e85-32ab-4983-a79b-fdb3dda9906f",
        "parentId" : null,
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "const for this really shouldn't be localized. ",
        "createdAt" : "2018-10-29T19:33:15Z",
        "updatedAt" : "2018-10-29T19:34:21Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      }
    ],
    "commit" : "b35e22abe173302d266ef5a5ce2388bb17f5bf4c",
    "line" : 93,
    "diffHunk" : "@@ -1,1 +187,191 @@\nfunc getEtcdDataDir(manifestPath string, client clientset.Interface) (string, error) {\n\tconst etcdVolumeName = \"etcd-data\"\n\tvar dataDir string\n"
  },
  {
    "id" : "bf978242-20e7-413d-b34e-1bea459ac0f4",
    "prId" : 70003,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/70003#pullrequestreview-169479808",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "82cba33c-f9fe-4b57-834e-d9afce637c1c",
        "parentId" : null,
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "it's weird to return empty strings vs. nil objects.",
        "createdAt" : "2018-10-29T19:33:42Z",
        "updatedAt" : "2018-10-29T19:34:21Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      }
    ],
    "commit" : "b35e22abe173302d266ef5a5ce2388bb17f5bf4c",
    "line" : 104,
    "diffHunk" : "@@ -1,1 +198,202 @@\tetcdPod, err := utilstaticpod.ReadStaticPodFromDisk(manifestPath)\n\tif err != nil {\n\t\treturn \"\", err\n\t}\n"
  },
  {
    "id" : "a53295df-7a32-4a65-b1a1-f8075c50305b",
    "prId" : 45708,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/45708#pullrequestreview-39920245",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "037a4e44-f566-4fb7-97b7-1a329b392998",
        "parentId" : null,
        "authorId" : "b8f6188a-f26e-4203-bed3-a5d075997fdf",
        "body" : "both ways are correctly gofmt-ed, I dont think this needs to be changed. ",
        "createdAt" : "2017-05-12T16:06:27Z",
        "updatedAt" : "2017-05-31T01:43:52Z",
        "lastEditedBy" : "b8f6188a-f26e-4203-bed3-a5d075997fdf",
        "tags" : [
        ]
      },
      {
        "id" : "eae5517b-0653-41c1-90ff-84a9653233cd",
        "parentId" : "037a4e44-f566-4fb7-97b7-1a329b392998",
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "I prefer initializations in ifs where possible since it reduces scope pollution by limiting visibility of the initialized variables.",
        "createdAt" : "2017-05-24T03:29:52Z",
        "updatedAt" : "2017-05-31T01:43:52Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      }
    ],
    "commit" : "85d22f0a83d21f8ff64960e922f8f462a07551ae",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +184,188 @@\tfmt.Printf(\"[reset] Deleting files: %v\\n\", filesToClean)\n\tfor _, path := range filesToClean {\n\t\tif err := os.RemoveAll(path); err != nil {\n\t\t\tfmt.Printf(\"[reset] Failed to remove file: %q [%v]\\n\", path, err)\n\t\t}"
  },
  {
    "id" : "90bd3fdf-de8a-49fe-84b0-8179fd9f33a1",
    "prId" : 41603,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/41603#pullrequestreview-22383255",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b7100ef1-703f-444b-88d2-387a6099d5e6",
        "parentId" : null,
        "authorId" : "b8f6188a-f26e-4203-bed3-a5d075997fdf",
        "body" : "Similar to my last comment. I really dislike how many package alias we use. Why can't we just use `constants` here?  For me, what that shows, is that our package names are not well thought out. ",
        "createdAt" : "2017-02-16T22:38:55Z",
        "updatedAt" : "2017-02-17T19:37:28Z",
        "lastEditedBy" : "b8f6188a-f26e-4203-bed3-a5d075997fdf",
        "tags" : [
        ]
      },
      {
        "id" : "c5569083-7dcf-4d0b-b1a9-ccddf7d799e9",
        "parentId" : "b7100ef1-703f-444b-88d2-387a6099d5e6",
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "I agree that some of the package aliases are bad, but I think this one makes sense as well.\r\nThis says explicitely that we're talking about kubeadm constants, no one else's constants.",
        "createdAt" : "2017-02-16T22:48:11Z",
        "updatedAt" : "2017-02-17T19:37:28Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      }
    ],
    "commit" : "60b789b1c7488da4772ad300c8067b0d5b83e021",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +28,32 @@\n\tkubeadmapi \"k8s.io/kubernetes/cmd/kubeadm/app/apis/kubeadm\"\n\tkubeadmconstants \"k8s.io/kubernetes/cmd/kubeadm/app/constants\"\n\t\"k8s.io/kubernetes/cmd/kubeadm/app/preflight\"\n\tkubeadmutil \"k8s.io/kubernetes/cmd/kubeadm/app/util\""
  },
  {
    "id" : "50d364eb-c2e7-440f-ab48-d80a6500d47a",
    "prId" : 37831,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/37831#pullrequestreview-11048484",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f45fc805-ac0e-49e3-8fbe-1d2e90fd56d3",
        "parentId" : null,
        "authorId" : "659c7c1f-39ba-41a7-8331-fcc6b3b5f2fb",
        "body" : "what would happen if non-docker container runtime used ?",
        "createdAt" : "2016-12-01T19:40:41Z",
        "updatedAt" : "2016-12-06T13:44:19Z",
        "lastEditedBy" : "659c7c1f-39ba-41a7-8331-fcc6b3b5f2fb",
        "tags" : [
        ]
      },
      {
        "id" : "31d5585d-380b-4945-869b-8a6c79d5d8aa",
        "parentId" : "f45fc805-ac0e-49e3-8fbe-1d2e90fd56d3",
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "we don't support other runtimes than docker for the moment, so that's not a problem for now.\r\nthis code just moved from below",
        "createdAt" : "2016-12-01T20:18:45Z",
        "updatedAt" : "2016-12-06T13:44:19Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      }
    ],
    "commit" : "7a463eff0877ad68f6a22b3befe0ac815034a3ad",
    "line" : null,
    "diffHunk" : "@@ -1,1 +127,131 @@\tif warnings, errors := dockerCheck.Check(); len(warnings) == 0 && len(errors) == 0 {\n\t\tfmt.Println(\"[reset] Stopping all running docker containers...\")\n\t\tif err := exec.Command(\"sh\", \"-c\", \"docker ps | grep 'k8s_' | awk '{print $1}' | xargs -r docker rm --force --volumes\").Run(); err != nil {\n\t\t\tfmt.Println(\"[reset] Failed to stop the running containers\")\n\t\t}"
  },
  {
    "id" : "93102fb3-3759-4613-9aae-9bed228cbc1b",
    "prId" : 37831,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/37831#pullrequestreview-11040757",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "129cdce6-97c1-41e1-89aa-e13abb77ab23",
        "parentId" : null,
        "authorId" : "659c7c1f-39ba-41a7-8331-fcc6b3b5f2fb",
        "body" : "maybe instead of embedding \"shell\" script here, write small function to call umount individually and report error on particular path ?",
        "createdAt" : "2016-12-01T19:42:44Z",
        "updatedAt" : "2016-12-06T13:44:19Z",
        "lastEditedBy" : "659c7c1f-39ba-41a7-8331-fcc6b3b5f2fb",
        "tags" : [
        ]
      }
    ],
    "commit" : "7a463eff0877ad68f6a22b3befe0ac815034a3ad",
    "line" : null,
    "diffHunk" : "@@ -1,1 +100,104 @@\n\tfmt.Println(\"[reset] Unmounting directories in /var/lib/kubelet...\")\n\tumountDirsCmd := \"cat /proc/mounts | awk '{print $2}' | grep '/var/lib/kubelet' | xargs -r umount\"\n\tumountOutputBytes, err := exec.Command(\"sh\", \"-c\", umountDirsCmd).Output()\n\tif err != nil {"
  },
  {
    "id" : "0ce51255-dcf4-4a19-8948-3395080cfe3d",
    "prId" : 37831,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/37831#pullrequestreview-11671145",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7b28bc29-8c64-4391-934c-8268723164b0",
        "parentId" : null,
        "authorId" : "659c7c1f-39ba-41a7-8331-fcc6b3b5f2fb",
        "body" : "we need to add HttpProxyCheck() in RunResetCheck(). but we need somehow get API URL which written in kubelet.conf.\r\nAlso, `FileAvailableCheck{Path: \"/etc/kubernetes/kubelet.conf\"}` needed there if we want to use kubectl here.\r\nAnd `InPathCheck{executable: \"kubectl\", mandatory: true}`\r\n",
        "createdAt" : "2016-12-06T14:02:14Z",
        "updatedAt" : "2016-12-06T14:02:14Z",
        "lastEditedBy" : "659c7c1f-39ba-41a7-8331-fcc6b3b5f2fb",
        "tags" : [
        ]
      },
      {
        "id" : "8577a68e-fa34-44a5-b382-67a540957446",
        "parentId" : "7b28bc29-8c64-4391-934c-8268723164b0",
        "authorId" : "4815d47d-9abd-4b5d-8074-030539047224",
        "body" : "Would these be covered sufficiently by the err handling?",
        "createdAt" : "2016-12-06T15:11:39Z",
        "updatedAt" : "2016-12-06T15:11:39Z",
        "lastEditedBy" : "4815d47d-9abd-4b5d-8074-030539047224",
        "tags" : [
        ]
      },
      {
        "id" : "6b0ce925-d88e-4a88-9ea2-7ee57f90df9e",
        "parentId" : "7b28bc29-8c64-4391-934c-8268723164b0",
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "The reason I don't want to add those checks is that the drain/remove functions aren't critical in any way, if it doesn't work, it just won't do the drain and remove things.",
        "createdAt" : "2016-12-06T15:35:18Z",
        "updatedAt" : "2016-12-06T15:35:18Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      },
      {
        "id" : "63a46ea9-0531-404e-a330-700573a2dd3b",
        "parentId" : "7b28bc29-8c64-4391-934c-8268723164b0",
        "authorId" : "659c7c1f-39ba-41a7-8331-fcc6b3b5f2fb",
        "body" : "checks can be done optional based on state of \"remove-node\". if user specifies flag, he/she assumes that it would be done gracefully.",
        "createdAt" : "2016-12-06T15:47:29Z",
        "updatedAt" : "2016-12-06T15:47:29Z",
        "lastEditedBy" : "659c7c1f-39ba-41a7-8331-fcc6b3b5f2fb",
        "tags" : [
        ]
      },
      {
        "id" : "118b6099-1be5-4cca-80e4-0a8dc54e4b7d",
        "parentId" : "7b28bc29-8c64-4391-934c-8268723164b0",
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "Still, it will try to drain regardless of `remove-node`...\r\nAt least, this is totally fine for the next stable release, it improves and fixes lots of things\r\n\r\nThe TODO I added was to switch over to the go native client, but we're gonna do that in time for v1.6 when we have more time and are confident that the versioned go client (`client-go`) works properly.",
        "createdAt" : "2016-12-06T15:50:42Z",
        "updatedAt" : "2016-12-06T15:50:42Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      },
      {
        "id" : "afa1e5a9-217c-40a9-95ac-61dfed990a9e",
        "parentId" : "7b28bc29-8c64-4391-934c-8268723164b0",
        "authorId" : "659c7c1f-39ba-41a7-8331-fcc6b3b5f2fb",
        "body" : "comment applicable to both invocations of kubectl, before client-go used.\r\nIt doesn't make sense to fail with debug message if we already in the beginning can warn user about potential issue. That's the whole reason for prechecks.",
        "createdAt" : "2016-12-06T16:01:22Z",
        "updatedAt" : "2016-12-06T16:01:22Z",
        "lastEditedBy" : "659c7c1f-39ba-41a7-8331-fcc6b3b5f2fb",
        "tags" : [
        ]
      },
      {
        "id" : "9ecaa65a-a2e4-4e4c-bb14-3fa704ffdd2a",
        "parentId" : "7b28bc29-8c64-4391-934c-8268723164b0",
        "authorId" : "4815d47d-9abd-4b5d-8074-030539047224",
        "body" : "This situation is very different with reset however, we're expecting that the system could easily have failed to cluster up, so the drain operation may well fail and we intend to keep on going. Provided the error messages resulting from attempting to drain are logical, it's probably ok to let the error for whatever happens bubble up, as we're going to proceed either way. \r\n\r\nThat said, @luxas what happens on pure nodes here? Is kubectl configured there? Does draining only work on masters?",
        "createdAt" : "2016-12-06T19:43:12Z",
        "updatedAt" : "2016-12-06T19:43:12Z",
        "lastEditedBy" : "4815d47d-9abd-4b5d-8074-030539047224",
        "tags" : [
        ]
      },
      {
        "id" : "7104d52d-6985-47ba-a854-5d4e4df09dce",
        "parentId" : "7b28bc29-8c64-4391-934c-8268723164b0",
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "It works on nodes as well, otherwise I wouldn't have added it here...\r\nThe `/etc/kubernetes/kubelet.conf` file exists everywhere when using kubeadm, and kubectl is installed everywhere, so when going the opinionated route with debs and rpms, it just \"should work (tm)\" :smile:",
        "createdAt" : "2016-12-06T20:11:19Z",
        "updatedAt" : "2016-12-06T20:11:20Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      }
    ],
    "commit" : "7a463eff0877ad68f6a22b3befe0ac815034a3ad",
    "line" : 218,
    "diffHunk" : "@@ -1,1 +157,161 @@\tfmt.Printf(\"[reset] Draining node: %q\\n\", hostname)\n\n\toutput, err = exec.Command(\"kubectl\", \"--kubeconfig\", kubeConfigPath, \"drain\", hostname, \"--delete-local-data\", \"--force\", \"--ignore-daemonsets\").Output()\n\tif err != nil {\n\t\treturn fmt.Errorf(\"failed to drain node %q [%s]\", hostname, output)"
  },
  {
    "id" : "220daf3d-3eb7-467c-97f7-535dbd7ad469",
    "prId" : 35632,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/35632#pullrequestreview-5876895",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5722b789-914d-4f4e-a723-8be9c7636119",
        "parentId" : null,
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "`failed to remove contents of directory` would be better I think\n",
        "createdAt" : "2016-10-26T15:36:06Z",
        "updatedAt" : "2016-10-27T13:27:34Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      }
    ],
    "commit" : "2ee787c5837561dc35d18bbf9a5f02d9f86e0053",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +78,82 @@\td, err := os.Open(path)\n\tif err != nil {\n\t\tfmt.Printf(\"failed to remove directory: [%v]\\n\", err)\n\t}\n\tdefer d.Close()"
  },
  {
    "id" : "c33724f8-84e2-42a5-bd17-c06322fad13a",
    "prId" : 35632,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/35632#pullrequestreview-5876895",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7f985ca6-16ab-438f-a0b9-1ef56cc3f94e",
        "parentId" : null,
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "nit: if you could move this above `resetConfigDir(\"/etc/kubernetes/\")` it would be more logical with potential errors etc.\n",
        "createdAt" : "2016-10-26T15:37:36Z",
        "updatedAt" : "2016-10-27T13:27:34Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      }
    ],
    "commit" : "2ee787c5837561dc35d18bbf9a5f02d9f86e0053",
    "line" : 78,
    "diffHunk" : "@@ -1,1 +135,139 @@\n\tdirsToClean := []string{\"/var/lib/kubelet\", \"/var/lib/etcd\"}\n\tfmt.Printf(\"Deleting contents of stateful directories: %v\\n\", dirsToClean)\n\tfor _, dir := range dirsToClean {\n\t\tcleanDir(dir)"
  },
  {
    "id" : "04969b2f-beba-4e75-9817-884b4205417d",
    "prId" : 35632,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/35632#pullrequestreview-5876895",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "35e451a5-0982-401c-9788-d62247201071",
        "parentId" : null,
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "I think that we might want to just do a `os.RemoveAll` here to minimize leftover\n",
        "createdAt" : "2016-10-26T15:42:44Z",
        "updatedAt" : "2016-10-27T13:27:34Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      }
    ],
    "commit" : "2ee787c5837561dc35d18bbf9a5f02d9f86e0053",
    "line" : 80,
    "diffHunk" : "@@ -1,1 +137,141 @@\tfmt.Printf(\"Deleting contents of stateful directories: %v\\n\", dirsToClean)\n\tfor _, dir := range dirsToClean {\n\t\tcleanDir(dir)\n\t}\n"
  },
  {
    "id" : "6f18084a-2e5f-4e0a-b641-9c9ffdd96cf9",
    "prId" : 35632,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/35632#pullrequestreview-5876895",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c7f26e47-0e3b-45cd-a51f-864f97e5564c",
        "parentId" : null,
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "I think that we might want to just do a os.RemoveAll here to minimize leftover\n\nIf you're doing that, you can remove the cleanDir function which means less code => better\n",
        "createdAt" : "2016-10-26T15:43:37Z",
        "updatedAt" : "2016-10-27T13:27:34Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      }
    ],
    "commit" : "2ee787c5837561dc35d18bbf9a5f02d9f86e0053",
    "line" : 45,
    "diffHunk" : "@@ -1,1 +101,105 @@\tfmt.Printf(\"Deleting contents of config directories: %v\\n\", dirsToClean)\n\tfor _, dir := range dirsToClean {\n\t\tcleanDir(dir)\n\t}\n"
  },
  {
    "id" : "f958d7be-fa66-4952-9acf-7481f5e5d879",
    "prId" : 35111,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/35111#pullrequestreview-5032169",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fc276ab8-30d5-4164-be4b-6ad8a564c6a2",
        "parentId" : null,
        "authorId" : "d37d9758-bdf5-4c23-a40e-a85099689a0c",
        "body" : "What is the first return value about exactly?\n",
        "createdAt" : "2016-10-19T13:02:29Z",
        "updatedAt" : "2016-10-19T13:02:34Z",
        "lastEditedBy" : "d37d9758-bdf5-4c23-a40e-a85099689a0c",
        "tags" : [
        ]
      },
      {
        "id" : "a2ab23bc-30c6-454b-a354-94437b24b8e9",
        "parentId" : "fc276ab8-30d5-4164-be4b-6ad8a564c6a2",
        "authorId" : "0ac5d6cd-da87-46a2-9b30-0d21db1063a2",
        "body" : "A `Reset` instance.\n",
        "createdAt" : "2016-10-19T13:37:03Z",
        "updatedAt" : "2016-10-19T13:37:04Z",
        "lastEditedBy" : "0ac5d6cd-da87-46a2-9b30-0d21db1063a2",
        "tags" : [
        ]
      },
      {
        "id" : "d9d3e549-376a-4bfe-bc7e-4495a388b83a",
        "parentId" : "fc276ab8-30d5-4164-be4b-6ad8a564c6a2",
        "authorId" : "d37d9758-bdf5-4c23-a40e-a85099689a0c",
        "body" : "Ah, it's just a `struct{}`... do we really need it? We don't have dummy structs like this in neither `init.go` nor `join.go`, why is one needed here? Are you planning to add these everywhere, so that we have `init.Run()` and `join.Run()`, etc?\n",
        "createdAt" : "2016-10-19T13:54:40Z",
        "updatedAt" : "2016-10-19T13:54:45Z",
        "lastEditedBy" : "d37d9758-bdf5-4c23-a40e-a85099689a0c",
        "tags" : [
        ]
      },
      {
        "id" : "fe9474f0-bdd3-4345-bd32-4b6cf40d5e80",
        "parentId" : "fc276ab8-30d5-4164-be4b-6ad8a564c6a2",
        "authorId" : "0ac5d6cd-da87-46a2-9b30-0d21db1063a2",
        "body" : "> Are you planning to add these everywhere, so that we have init.Run() and join.Run(), etc?\n\nYes, or at least in the cases where there's pre-flight checking. This will make tests easier to implement, as well.\n",
        "createdAt" : "2016-10-19T14:38:07Z",
        "updatedAt" : "2016-10-19T14:38:20Z",
        "lastEditedBy" : "0ac5d6cd-da87-46a2-9b30-0d21db1063a2",
        "tags" : [
        ]
      },
      {
        "id" : "07bc75b8-c259-47e4-9d2b-0de4b010e1a9",
        "parentId" : "fc276ab8-30d5-4164-be4b-6ad8a564c6a2",
        "authorId" : "d37d9758-bdf5-4c23-a40e-a85099689a0c",
        "body" : "> This will make tests easier to implement, as well.\n> SGTM.\n",
        "createdAt" : "2016-10-20T09:27:16Z",
        "updatedAt" : "2016-10-20T09:27:16Z",
        "lastEditedBy" : "d37d9758-bdf5-4c23-a40e-a85099689a0c",
        "tags" : [
        ]
      }
    ],
    "commit" : "0699457f2bc9d1fb445850ccea622138108274f0",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +58,62 @@\t\terr := preflight.RunResetCheck()\n\t\tif err != nil {\n\t\t\treturn nil, &preflight.PreFlightError{Msg: err.Error()}\n\t\t}\n\t} else {"
  },
  {
    "id" : "bc18f2a2-b286-4dad-9655-58fca222ee00",
    "prId" : 34807,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/34807#pullrequestreview-4349856",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "89e09411-9417-4480-aa81-b5ab9a2ac455",
        "parentId" : null,
        "authorId" : "d37d9758-bdf5-4c23-a40e-a85099689a0c",
        "body" : "I think `find /var/lib/kubelet | xargs -n 1 findmnt -n -t tmpfs -o TARGET -T | uniq | xargs -r umount` is cleaner.\n",
        "createdAt" : "2016-10-14T19:16:07Z",
        "updatedAt" : "2016-10-15T08:58:26Z",
        "lastEditedBy" : "d37d9758-bdf5-4c23-a40e-a85099689a0c",
        "tags" : [
        ]
      },
      {
        "id" : "0017b3ba-ff85-4a14-89d4-3d0d11800e97",
        "parentId" : "89e09411-9417-4480-aa81-b5ab9a2ac455",
        "authorId" : "d37d9758-bdf5-4c23-a40e-a85099689a0c",
        "body" : "If you depend on `awk`, you don't have to use `grep`, i.e. `awk '$2 ~ /\\/var\\/lib\\/kubelet { print $2 }' | xargs umount`, or even `awk '$2 ~ /\\/var\\/lib\\/kubelet { system(\"umount \"$2) }`, on the other hand you don't even have to shell out...\n",
        "createdAt" : "2016-10-14T19:22:52Z",
        "updatedAt" : "2016-10-15T08:58:26Z",
        "lastEditedBy" : "d37d9758-bdf5-4c23-a40e-a85099689a0c",
        "tags" : [
        ]
      },
      {
        "id" : "fa7a3807-5d20-4c93-854e-9f13f360e532",
        "parentId" : "89e09411-9417-4480-aa81-b5ab9a2ac455",
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "I think we should improve that later on...\nI don't think `find /var/lib/kubelet | xargs -n 1 findmnt -n -t tmpfs -o TARGET -T | uniq | xargs -r umount` is better because it will do a find in the whole /var/lib/kubelet dir which may be large.\n\n`/proc/mounts` is a very small file with the information we need.\n\nI couldn't get awk working standalone, so someone can take that as a fun thing improve later :)\n",
        "createdAt" : "2016-10-14T21:43:07Z",
        "updatedAt" : "2016-10-15T08:58:26Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      }
    ],
    "commit" : "ecdaa7195a31aedfb5389a873223ad7cac7a44e0",
    "line" : 73,
    "diffHunk" : "@@ -1,1 +71,75 @@\tfmt.Printf(\"Unmounting directories in /var/lib/kubelet...\\n\")\n\t// Don't check for errors here, since umount will return a non-zero exit code if there is no directories to umount\n\texec.Command(\"sh\", \"-c\", \"cat /proc/mounts | awk '{print $2}' | grep '/var/lib/kubelet' | xargs umount\").Run()\n\n\tdirsToRemove := []string{\"/var/lib/kubelet\", \"/var/lib/etcd\", \"/etc/kubernetes\"}"
  }
]