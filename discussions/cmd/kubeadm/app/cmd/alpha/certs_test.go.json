[
  {
    "id" : "70b67eff-3b9f-4b0b-94cd-786c5025ceac",
    "prId" : 92183,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/92183#pullrequestreview-438360995",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c6e0799f-fe04-41ae-9921-343605d1a231",
        "parentId" : null,
        "authorId" : "cccc7bed-95f4-42a9-83ef-6ba1a4dca7ec",
        "body" : "Better put a new line after this one. We separate `k8s.io` from other packages.",
        "createdAt" : "2020-06-25T14:07:18Z",
        "updatedAt" : "2020-07-09T05:27:27Z",
        "lastEditedBy" : "cccc7bed-95f4-42a9-83ef-6ba1a4dca7ec",
        "tags" : [
        ]
      },
      {
        "id" : "dfed7063-4799-4a2c-b6d9-cb161692b73b",
        "parentId" : "c6e0799f-fe04-41ae-9921-343605d1a231",
        "authorId" : "8066ee2f-0c16-437d-9b9a-d0d19725550e",
        "body" : "Done.",
        "createdAt" : "2020-06-26T14:59:08Z",
        "updatedAt" : "2020-07-09T05:27:27Z",
        "lastEditedBy" : "8066ee2f-0c16-437d-9b9a-d0d19725550e",
        "tags" : [
        ]
      }
    ],
    "commit" : "81554ffdc0b66c98905a2800e078205eb87f4a72",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +30,34 @@\t\"github.com/spf13/pflag\"\n\t\"github.com/stretchr/testify/assert\"\n\t\"github.com/stretchr/testify/require\"\n\n\t\"k8s.io/client-go/tools/clientcmd\""
  },
  {
    "id" : "933b0f1b-2f34-4387-a948-5be91bdbb9cb",
    "prId" : 92183,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/92183#pullrequestreview-443937998",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f8893420-07ae-4559-9dad-87614e9cb4ab",
        "parentId" : null,
        "authorId" : "8066ee2f-0c16-437d-9b9a-d0d19725550e",
        "body" : "This is a test for the happy path only. Error cases in the creation of cert CSR and kubeconfig CSR files are tested in the respective packages.",
        "createdAt" : "2020-07-07T14:21:30Z",
        "updatedAt" : "2020-07-09T05:27:27Z",
        "lastEditedBy" : "8066ee2f-0c16-437d-9b9a-d0d19725550e",
        "tags" : [
        ]
      }
    ],
    "commit" : "81554ffdc0b66c98905a2800e078205eb87f4a72",
    "line" : 80,
    "diffHunk" : "@@ -1,1 +355,359 @@\t\tassert.NoError(t, err, \"failed to load kubeconfig CSR file: %s\", name)\n\t}\n}\n\nfunc TestGenCSRConfig(t *testing.T) {"
  },
  {
    "id" : "5dcc5cd9-ba52-43e3-90ac-4cdff4b19cf4",
    "prId" : 92183,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/92183#pullrequestreview-445112326",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2d700ef7-e9e7-4d64-b4ef-9d287ef8c280",
        "parentId" : null,
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "the kubelet.conf is managed by the kubelet (but \"kubeadm init\" does amend it, at one place/phase). i do not expect the new command to generate CSRs for the kubelet, especially in a case where kubelet client certificates are auto-rotated post TLS bootstrap.\r\n",
        "createdAt" : "2020-07-07T16:03:49Z",
        "updatedAt" : "2020-07-09T05:27:27Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      },
      {
        "id" : "ea096fbc-e57d-469e-9bfc-f1d1b4ec51f2",
        "parentId" : "2d700ef7-e9e7-4d64-b4ef-9d287ef8c280",
        "authorId" : "8066ee2f-0c16-437d-9b9a-d0d19725550e",
        "body" : "Ideally, I'd want to start the apiserver with only an external CA certificate.\r\nWhich means that the the control-plane kubelet, which uses a client-certificate based kubeconfig, rather than a bootstrap token based kubeconfig, will also need to have a client certificiate signed by the external CA.\r\n\r\nI'm going to test that today, to make sure I've understood this correctly.",
        "createdAt" : "2020-07-08T10:49:33Z",
        "updatedAt" : "2020-07-09T05:27:27Z",
        "lastEditedBy" : "8066ee2f-0c16-437d-9b9a-d0d19725550e",
        "tags" : [
        ]
      },
      {
        "id" : "fa92fde9-e216-4b67-858b-218ac6fdfdad",
        "parentId" : "2d700ef7-e9e7-4d64-b4ef-9d287ef8c280",
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "normally the TLS bootstrap process would create the CSR and let the KCM sign it.\r\nfor kubelet client certs this is done automatically, and i'd assume the new `signerName` feature and external signer support in general will have to manage that.\r\n\r\ni don't see the need for creating a CSR / key on disk for this unless the user wants to manually rotate their kubelet client certificate, which conflates with the existing client certificate that the kubelet / KCM normally manage when kubelet client certificate rotation is enabled (enabled by default by kubeadm).\r\n\r\nbut please, double check my thinking as well.",
        "createdAt" : "2020-07-08T14:36:20Z",
        "updatedAt" : "2020-07-09T05:27:27Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      },
      {
        "id" : "fe3cbd75-8c52-4c47-b2bc-b54d43920f8c",
        "parentId" : "2d700ef7-e9e7-4d64-b4ef-9d287ef8c280",
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "after our discussion during the kubeadm office hours we decided to leave this for now.",
        "createdAt" : "2020-07-08T20:40:01Z",
        "updatedAt" : "2020-07-09T05:27:27Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      }
    ],
    "commit" : "81554ffdc0b66c98905a2800e078205eb87f4a72",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +313,317 @@\texpectedKubeConfigs := []string{\n\t\t\"admin\",\n\t\t\"kubelet\",\n\t\t\"controller-manager\",\n\t\t\"scheduler\","
  }
]