[
  {
    "id" : "2c3dd6d3-e78b-4e0d-a6bc-ff23268744e6",
    "prId" : 85025,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/85025#pullrequestreview-314534804",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "99e77856-b2a7-48b1-915b-4d4aa8b413a1",
        "parentId" : null,
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "although, the mitigation is to simply pass the CLI flag, not upgrading etcd is not a good idea.\r\nthe version difference between 1.15 and 1.16 is \"3.3.10 -> 3.3.15\", at the time of writing this message and it includes important fixes.",
        "createdAt" : "2019-11-09T02:13:38Z",
        "updatedAt" : "2019-11-09T02:18:08Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      }
    ],
    "commit" : "b2906cf092532086c91f71bceb57ba523d61a6ad",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +109,113 @@\t\tkubeConfigPath: constants.GetKubeletKubeConfigPath(),\n\t\tdryRun:         false,\n\t\tetcdUpgrade:    true,\n\t}\n}"
  },
  {
    "id" : "8f54cab5-baba-4928-9618-cf5a6c9cd24b",
    "prId" : 78408,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/78408#pullrequestreview-246861672",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5ec71371-4f0c-4158-b85e-f4349e8800d4",
        "parentId" : null,
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "in an ideal world `kubeadm upgrade apply` should have been the UX that works all use cases:\r\n- primary CP\r\n- secondary CP\r\n- worker\r\n(as long as we can detect primary vs secondary)\r\n",
        "createdAt" : "2019-05-27T22:18:35Z",
        "updatedAt" : "2019-05-29T20:07:03Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      },
      {
        "id" : "89ac1d19-5f9d-4494-80ad-a201f4a57754",
        "parentId" : "5ec71371-4f0c-4158-b85e-f4349e8800d4",
        "authorId" : "cccc7bed-95f4-42a9-83ef-6ba1a4dca7ec",
        "body" : "@neolit123 that's a nice UX suggestion, but a bit hard and unreliable to implement in my opinion. The `primary CP` does not need to be invoked on the `kubeadm init` node. It just needs to be done on a CP node only once. Then it should store somewhere a result of this operation and allow for the same command to detect it on other nodes.\r\nThis may be unreliable, hence we should always have the manual interface as a safe backup.",
        "createdAt" : "2019-05-28T15:03:47Z",
        "updatedAt" : "2019-05-29T20:07:03Z",
        "lastEditedBy" : "cccc7bed-95f4-42a9-83ef-6ba1a4dca7ec",
        "tags" : [
        ]
      },
      {
        "id" : "d5ffe870-eecc-441d-8b26-3357234e4813",
        "parentId" : "5ec71371-4f0c-4158-b85e-f4349e8800d4",
        "authorId" : "8a27151d-3530-4221-90e8-48b3a85cba37",
        "body" : "I'm not sure it is a good idea, but this is something out of scope of this PR",
        "createdAt" : "2019-05-28T20:38:26Z",
        "updatedAt" : "2019-05-29T20:07:03Z",
        "lastEditedBy" : "8a27151d-3530-4221-90e8-48b3a85cba37",
        "tags" : [
        ]
      },
      {
        "id" : "8cb8bfef-a55b-4105-a52b-1c85214ce8eb",
        "parentId" : "5ec71371-4f0c-4158-b85e-f4349e8800d4",
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "clearly out of scope of this PR. just saying that the `apply` vs `node` is not exactly intuitive.\r\n",
        "createdAt" : "2019-05-28T20:53:51Z",
        "updatedAt" : "2019-05-29T20:07:03Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      },
      {
        "id" : "40f0681d-32d5-4e57-8d12-ff0407980a39",
        "parentId" : "5ec71371-4f0c-4158-b85e-f4349e8800d4",
        "authorId" : "67bc6085-2cd9-4674-9dbc-d2a266f478be",
        "body" : "@rosti, @neolit123, checking the logic for `kubeadm upgrade apply` I'm wondering what is preventing it from being idempotent, assuming the same version is passed to `kubeadm upgrade apply` on all control plane nodes.\r\n\r\n* `PerformControlPlaneUpgrade` -> `PerformStaticPodUpgrade` is trivial and always happens.\r\n* `PerformPostUpgradeTasks` from what I could see should be safe to re-run.\r\n\r\nOf course is not a \"supported\" way of upgrading, but I fail to see what is preventing us from doing so.\r\n\r\nIn general (and if we are really planning to improve the upgrade UX), once that we have run `kubeadm upgrade apply` once in one control plane, we'll have upgraded the `ClusterConfiguration` with the new Kubernetes version, and in secondary control planes we could know from what version we are trying to update to what version (present in the `kubeadm-config` configmap in the cluster configuration).\r\n\r\nUnsure if I'm missing something...",
        "createdAt" : "2019-06-06T18:00:59Z",
        "updatedAt" : "2019-06-06T18:01:43Z",
        "lastEditedBy" : "67bc6085-2cd9-4674-9dbc-d2a266f478be",
        "tags" : [
        ]
      },
      {
        "id" : "a6286e62-e599-4130-bf0c-0f88a2643c72",
        "parentId" : "5ec71371-4f0c-4158-b85e-f4349e8800d4",
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "> once that we have run kubeadm upgrade apply once in one control plane, we'll have upgraded the ClusterConfiguration with the new Kubernetes version, and in secondary control planes we could know from what version we are trying to update to what version (present in the kubeadm-config configmap in the cluster configuration).\r\n\r\nthis is similar to what i was thinking without doing much research on this topic.\r\n",
        "createdAt" : "2019-06-06T23:27:17Z",
        "updatedAt" : "2019-06-06T23:27:17Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      }
    ],
    "commit" : "67d76c46c72b6baf44a49112016aae3a5f076ce9",
    "line" : 177,
    "diffHunk" : "@@ -1,1 +94,98 @@\t// binds the Runner to kubeadm upgrade node command by altering\n\t// command help, adding --skip-phases flag and by adding phases subcommands\n\tnodeRunner.BindToCommand(cmd)\n\n\t// upgrade node config command is subject to GA deprecation policy, so we should deprecate it"
  },
  {
    "id" : "2b09ebf0-50d1-4e0e-88b7-d03ae0b9de21",
    "prId" : 78408,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/78408#pullrequestreview-242903667",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1cc9d255-7023-4823-9ddd-4c90a23d552a",
        "parentId" : null,
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "add TODO to remove when 1.18 is released?",
        "createdAt" : "2019-05-27T22:27:43Z",
        "updatedAt" : "2019-05-29T20:07:03Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      },
      {
        "id" : "0ec9ff68-ea83-445e-967a-39ed96983b4f",
        "parentId" : "1cc9d255-7023-4823-9ddd-4c90a23d552a",
        "authorId" : "8a27151d-3530-4221-90e8-48b3a85cba37",
        "body" : "I will add an issue as well",
        "createdAt" : "2019-05-28T20:28:34Z",
        "updatedAt" : "2019-05-29T20:07:03Z",
        "lastEditedBy" : "8a27151d-3530-4221-90e8-48b3a85cba37",
        "tags" : [
        ]
      }
    ],
    "commit" : "67d76c46c72b6baf44a49112016aae3a5f076ce9",
    "line" : 329,
    "diffHunk" : "@@ -1,1 +191,195 @@\n// NewCmdUpgradeNodeConfig returns the cobra.Command for downloading the new/upgrading the kubelet configuration from the kubelet-config-1.X\n// ConfigMap in the cluster\n// TODO: to remove when 1.18 is released\nfunc NewCmdUpgradeNodeConfig() *cobra.Command {"
  },
  {
    "id" : "736464bc-faed-4952-97af-76a67b1242f5",
    "prId" : 78408,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/78408#pullrequestreview-244615022",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c5c07a77-dc8d-446e-bd77-4e506d7f529c",
        "parentId" : null,
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "add TODO to remove when 1.18 is released?",
        "createdAt" : "2019-05-27T22:27:52Z",
        "updatedAt" : "2019-05-29T20:07:03Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      },
      {
        "id" : "38303fb4-a684-4c0b-a00d-fba447e39438",
        "parentId" : "c5c07a77-dc8d-446e-bd77-4e506d7f529c",
        "authorId" : "cccc7bed-95f4-42a9-83ef-6ba1a4dca7ec",
        "body" : "The `experimental` prefix of the original command implies an alpha state of this. Hence we can remove it. Although, I wouldn't mind keeping it for a cycle or two. Both options work for me.\r\n\r\nIs this even plugged into the command line interface somewhere? `NewCmdUpgradeControlPlane` seems unused ATM.",
        "createdAt" : "2019-05-28T14:56:44Z",
        "updatedAt" : "2019-05-29T20:07:03Z",
        "lastEditedBy" : "cccc7bed-95f4-42a9-83ef-6ba1a4dca7ec",
        "tags" : [
        ]
      },
      {
        "id" : "6de4ca04-d37f-4fb6-ac24-3be6328be759",
        "parentId" : "c5c07a77-dc8d-446e-bd77-4e506d7f529c",
        "authorId" : "8a27151d-3530-4221-90e8-48b3a85cba37",
        "body" : "Now it is plugged in the command line\r\nEven if it is alpha, the approach I'm proposing is to keep this around for 1 cycle, so we are not breaking users",
        "createdAt" : "2019-05-28T20:35:53Z",
        "updatedAt" : "2019-05-29T20:07:03Z",
        "lastEditedBy" : "8a27151d-3530-4221-90e8-48b3a85cba37",
        "tags" : [
        ]
      },
      {
        "id" : "f9ae7436-88be-44c7-9898-f70d7a6c7eda",
        "parentId" : "c5c07a77-dc8d-446e-bd77-4e506d7f529c",
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "+1 for keeping even if alpha. \r\nwe are GA and alpha will still break users.\r\n",
        "createdAt" : "2019-05-28T20:55:18Z",
        "updatedAt" : "2019-05-29T20:07:03Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      },
      {
        "id" : "0d9c2977-99f0-42bd-82f9-b3fe1f534b48",
        "parentId" : "c5c07a77-dc8d-446e-bd77-4e506d7f529c",
        "authorId" : "8a27151d-3530-4221-90e8-48b3a85cba37",
        "body" : "Probably it is necessary to make more clear what is GA and what not",
        "createdAt" : "2019-06-02T08:17:05Z",
        "updatedAt" : "2019-06-02T08:17:05Z",
        "lastEditedBy" : "8a27151d-3530-4221-90e8-48b3a85cba37",
        "tags" : [
        ]
      }
    ],
    "commit" : "67d76c46c72b6baf44a49112016aae3a5f076ce9",
    "line" : 373,
    "diffHunk" : "@@ -1,1 +229,233 @@}\n\n// NewCmdUpgradeControlPlane returns the cobra.Command for upgrading the controlplane instance on this node\n// TODO: to remove when 1.16 is released\nfunc NewCmdUpgradeControlPlane() *cobra.Command {"
  },
  {
    "id" : "38aac17b-2b96-4275-94cf-bed8d4d722e5",
    "prId" : 78408,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/78408#pullrequestreview-242907648",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b728ff6c-5cc8-44ad-9d13-7cd25b45fa3f",
        "parentId" : null,
        "authorId" : "cccc7bed-95f4-42a9-83ef-6ba1a4dca7ec",
        "body" : "This exact check is present somewhere in reset (I think) as a separate func. Probably extracting it as an utility func somewhere is a good idea.",
        "createdAt" : "2019-05-28T15:40:26Z",
        "updatedAt" : "2019-05-29T20:07:03Z",
        "lastEditedBy" : "cccc7bed-95f4-42a9-83ef-6ba1a4dca7ec",
        "tags" : [
        ]
      },
      {
        "id" : "7582d866-e840-47c0-86b1-04afb342ffae",
        "parentId" : "b728ff6c-5cc8-44ad-9d13-7cd25b45fa3f",
        "authorId" : "8a27151d-3530-4221-90e8-48b3a85cba37",
        "body" : "I will open an issue to track this",
        "createdAt" : "2019-05-28T20:36:33Z",
        "updatedAt" : "2019-05-29T20:07:03Z",
        "lastEditedBy" : "8a27151d-3530-4221-90e8-48b3a85cba37",
        "tags" : [
        ]
      }
    ],
    "commit" : "67d76c46c72b6baf44a49112016aae3a5f076ce9",
    "line" : 232,
    "diffHunk" : "@@ -1,1 +131,135 @@\t// the kube-apiserver manifest file\n\tisControlPlaneNode := true\n\tfilepath := kubeadmconstants.GetStaticPodFilepath(kubeadmconstants.KubeAPIServer, kubeadmconstants.GetStaticPodDirectory())\n\tif _, err := os.Stat(filepath); os.IsNotExist(err) {\n\t\tisControlPlaneNode = false"
  },
  {
    "id" : "ba7dec86-b95f-4bf8-b466-c237979ceaac",
    "prId" : 72299,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/72299#pullrequestreview-187930160",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3d45e734-810f-498d-aac5-266a45115366",
        "parentId" : null,
        "authorId" : "0de88c3b-1f1a-401f-9fd1-cd63adc590fd",
        "body" : "You can use `%[1]s`",
        "createdAt" : "2018-12-23T00:51:50Z",
        "updatedAt" : "2018-12-27T09:36:26Z",
        "lastEditedBy" : "0de88c3b-1f1a-401f-9fd1-cd63adc590fd",
        "tags" : [
        ]
      },
      {
        "id" : "36c4091a-26cc-40e9-a13b-da5e43fd8e56",
        "parentId" : "3d45e734-810f-498d-aac5-266a45115366",
        "authorId" : "f46daf11-7000-4650-ae5b-dd25c29b4e29",
        "body" : "@yagonobre Thank you for the review. Done.",
        "createdAt" : "2018-12-26T17:12:42Z",
        "updatedAt" : "2018-12-27T09:36:26Z",
        "lastEditedBy" : "f46daf11-7000-4650-ae5b-dd25c29b4e29",
        "tags" : [
        ]
      }
    ],
    "commit" : "e6937ec27f602926fdcccf548ff977ea01a4d78b",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +49,53 @@\tupgradeNodeConfigExample = normalizer.Examples(fmt.Sprintf(`\n\t\t# Downloads the kubelet configuration from the ConfigMap in the cluster. Uses a specific desired kubelet version.\n\t\tkubeadm upgrade node config --kubelet-version %s\n\n\t\t# Simulates the downloading of the kubelet configuration from the ConfigMap in the cluster with a specific desired"
  },
  {
    "id" : "5e1af7d5-9f8b-4f7d-9a09-1fb275405a0a",
    "prId" : 66973,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/66973#pullrequestreview-147787860",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d572193f-72a3-46d7-b979-fe5bd41b6e19",
        "parentId" : null,
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "Why would we call out the upgrade path for a HA control plan node differently than the master?  I think we should detect from on cluster config and just roll with the upgrade.?.?.?",
        "createdAt" : "2018-08-17T21:35:02Z",
        "updatedAt" : "2018-08-22T21:12:12Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      },
      {
        "id" : "99d70bed-b717-4571-a134-d13538cd87d5",
        "parentId" : "d572193f-72a3-46d7-b979-fe5bd41b6e19",
        "authorId" : "bfaab188-fe7f-45cd-8e91-eeb4626a5f04",
        "body" : "That's fair feedback. I think this keeps the code simpler at the expense of the user. For an experimental thing I think that's fine. Once it becomes not experimental any more I'd fully expect this code to merge with the existing upgrade code. I see your point though and either we do extra work now to integrate it or integrate it later.",
        "createdAt" : "2018-08-20T16:03:35Z",
        "updatedAt" : "2018-08-22T21:12:12Z",
        "lastEditedBy" : "bfaab188-fe7f-45cd-8e91-eeb4626a5f04",
        "tags" : [
        ]
      },
      {
        "id" : "9d4f8184-5e5d-4a58-a761-4af33686a955",
        "parentId" : "d572193f-72a3-46d7-b979-fe5bd41b6e19",
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "I'm fine with calling this good enough for now, so long as there is a //TODO plus issue opened. ",
        "createdAt" : "2018-08-20T19:26:34Z",
        "updatedAt" : "2018-08-22T21:12:12Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      }
    ],
    "commit" : "aa641ad5e3b608cc89db411acce543252dc95810",
    "line" : 57,
    "diffHunk" : "@@ -1,1 +119,123 @@\n\tcmd := &cobra.Command{\n\t\tUse:     \"experimental-control-plane\",\n\t\tShort:   \"Upgrades the control plane instance deployed on this node. IMPORTANT. This command should be executed after executing `kubeadm upgrade apply` on another control plane instance\",\n\t\tLong:    upgradeNodeConfigLongDesc,"
  }
]