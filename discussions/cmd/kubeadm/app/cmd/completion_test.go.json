[
  {
    "id" : "cc170851-7a06-40bc-b334-0637c458e4ff",
    "prId" : 60931,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/60931#pullrequestreview-102620662",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "aba70444-ae5c-4733-8dc5-9f93e477874e",
        "parentId" : null,
        "authorId" : "3c1422a0-6358-4857-8f56-961979171514",
        "body" : "Iterate over all the supported shells?",
        "createdAt" : "2018-03-09T02:57:35Z",
        "updatedAt" : "2018-05-09T19:20:33Z",
        "lastEditedBy" : "3c1422a0-6358-4857-8f56-961979171514",
        "tags" : [
        ]
      },
      {
        "id" : "8fe85898-c6cc-484d-85b1-19c66798566b",
        "parentId" : "aba70444-ae5c-4733-8dc5-9f93e477874e",
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "the only purpose of `TestNewCmdCompletion` is to test the command execution with a valid argument / shell.\r\nall valid shells and error cases are iterated in the next test `TestRunCompletion`.",
        "createdAt" : "2018-03-09T11:43:05Z",
        "updatedAt" : "2018-05-09T19:20:33Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      }
    ],
    "commit" : "5510b4c94aedb2accb002808596d67c3a41ca9a6",
    "line" : 37,
    "diffHunk" : "@@ -1,1 +35,39 @@\t// use a dummy parent command as NewCmdCompletion needs it.\n\tparentCmd := &cobra.Command{}\n\targs := []string{\"completion\", shells[0]}\n\tparentCmd.SetArgs(args)\n\tcmd := NewCmdCompletion(&out, \"\")"
  },
  {
    "id" : "9e8de255-d187-4830-b15f-d99b9ca5a4b4",
    "prId" : 60931,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/60931#pullrequestreview-103750823",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a01c598b-6ed9-4e07-99a1-b964b1520a7b",
        "parentId" : null,
        "authorId" : "3c1422a0-6358-4857-8f56-961979171514",
        "body" : "IMO this test can be merged into above test case.",
        "createdAt" : "2018-03-09T02:58:39Z",
        "updatedAt" : "2018-05-09T19:20:33Z",
        "lastEditedBy" : "3c1422a0-6358-4857-8f56-961979171514",
        "tags" : [
        ]
      },
      {
        "id" : "9ee6b7a8-768e-4db8-8258-570a1fa48c24",
        "parentId" : "a01c598b-6ed9-4e07-99a1-b964b1520a7b",
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "but then the test would exit if the command fails (see `kubeadmutil.CheckErr(err)`) and we won't be able to test all the test cases with `expectedError: true,`.\r\n",
        "createdAt" : "2018-03-09T11:45:50Z",
        "updatedAt" : "2018-05-09T19:20:33Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      },
      {
        "id" : "da7be326-f4f4-458a-8c1d-7a55a14ba8fa",
        "parentId" : "a01c598b-6ed9-4e07-99a1-b964b1520a7b",
        "authorId" : "3c1422a0-6358-4857-8f56-961979171514",
        "body" : "> we won't be able to test all the test cases with expectedError: true\r\n\r\n@neolit123 You can use `recover()` to cover this test scenario. Please refer to https://github.com/kubernetes/kubernetes/blob/36058cb0c3ed3c9e46e1eda48c106679b603d0cb/pkg/kubelet/cm/cpumanager/policy_static_test.go#L91-L101 for guidance.",
        "createdAt" : "2018-03-12T07:20:09Z",
        "updatedAt" : "2018-05-09T19:20:33Z",
        "lastEditedBy" : "3c1422a0-6358-4857-8f56-961979171514",
        "tags" : [
        ]
      },
      {
        "id" : "6856724d-e1dc-4ecd-8fd8-a44292a2fd9b",
        "parentId" : "a01c598b-6ed9-4e07-99a1-b964b1520a7b",
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "thank you, i will try `recover()`.",
        "createdAt" : "2018-03-12T11:58:42Z",
        "updatedAt" : "2018-05-09T19:20:33Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      },
      {
        "id" : "2fe99389-db26-4100-af81-69957986014c",
        "parentId" : "a01c598b-6ed9-4e07-99a1-b964b1520a7b",
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "@dixudx \r\n\r\ni think your suggestion to use `recover()` would not work in this case.\r\nplease have a look here, where `CheckErr()` is used to validate if `RunComletion()` has error:\r\nhttps://github.com/kubernetes/kubernetes/blob/master/cmd/kubeadm/app/cmd/completion.go#L104\r\n`CheckErr()` calls `checkErr(\"\", err, fatal)`, where `fatal()` is a callback that calls `os.Exit(code)`\r\nhttps://github.com/kubernetes/kubernetes/blob/master/cmd/kubeadm/app/util/error.go#L59\r\n\r\ncorrect me if i'm wrong, but `recover()` would not recover from an `os.Exit()` because the whole process is terminated and this is not a `panic`?\r\n",
        "createdAt" : "2018-03-13T16:25:09Z",
        "updatedAt" : "2018-05-09T19:20:33Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      },
      {
        "id" : "98c4c1ad-d69d-462c-8cc5-32200e0c3d86",
        "parentId" : "a01c598b-6ed9-4e07-99a1-b964b1520a7b",
        "authorId" : "3c1422a0-6358-4857-8f56-961979171514",
        "body" : "@neolit123 Yes, you're right. My bad. Sorry for the misleading.\r\n\r\nSo keep it as it is.",
        "createdAt" : "2018-03-14T09:55:16Z",
        "updatedAt" : "2018-05-09T19:20:33Z",
        "lastEditedBy" : "3c1422a0-6358-4857-8f56-961979171514",
        "tags" : [
        ]
      }
    ],
    "commit" : "5510b4c94aedb2accb002808596d67c3a41ca9a6",
    "line" : 46,
    "diffHunk" : "@@ -1,1 +44,48 @@}\n\nfunc TestRunCompletion(t *testing.T) {\n\tvar out bytes.Buffer\n\ttype TestCase struct {"
  }
]