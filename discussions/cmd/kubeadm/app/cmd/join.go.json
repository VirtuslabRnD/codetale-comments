[
  {
    "id" : "867f2b11-d5a7-4358-9303-a2ecd48b58ec",
    "prId" : 83661,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/83661#pullrequestreview-299380623",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d1bd7dad-75c6-409a-ae30-217011efbe31",
        "parentId" : null,
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "long term, we should not bind more logic related to flags and flags mixtures.\r\nsome day, ideally, we should move all flags to configuration-only and configuration patching.",
        "createdAt" : "2019-10-09T11:25:44Z",
        "updatedAt" : "2019-10-13T13:39:32Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      },
      {
        "id" : "27d4ae8c-e67a-4a07-a617-f1995e183f56",
        "parentId" : "d1bd7dad-75c6-409a-ae30-217011efbe31",
        "authorId" : "e2ca6907-6765-444e-8bf6-1452233150d6",
        "body" : "+1",
        "createdAt" : "2019-10-09T12:44:47Z",
        "updatedAt" : "2019-10-13T13:39:32Z",
        "lastEditedBy" : "e2ca6907-6765-444e-8bf6-1452233150d6",
        "tags" : [
        ]
      }
    ],
    "commit" : "6dbf154d438f919896917bd99e3b6b61510a5f2b",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +345,349 @@\t\tif opt.externalcfg.ControlPlane != nil {\n\t\t\tklog.Warningf(\"[preflight] WARNING: JoinControlPane.controlPlane settings will be ignored when %s flag is not set.\", options.ControlPlane)\n\t\t}\n\t\topt.externalcfg.ControlPlane = nil\n\t}"
  },
  {
    "id" : "fd13c073-c6f2-476c-8b19-89e9ab46e880",
    "prId" : 74831,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/74831#pullrequestreview-209818515",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f7aaf7ae-097d-42ec-ba93-40662448b533",
        "parentId" : null,
        "authorId" : "8a27151d-3530-4221-90e8-48b3a85cba37",
        "body" : "Note for reviewers: \r\nI was forced to rename `options` to `opt` because it was hiding an imported package, and this, unfortunately, adds some noise into the PR.\r\nThe relevant changes on `newJoinData ` are at L349 and L379",
        "createdAt" : "2019-03-01T22:25:49Z",
        "updatedAt" : "2019-03-02T17:31:49Z",
        "lastEditedBy" : "8a27151d-3530-4221-90e8-48b3a85cba37",
        "tags" : [
        ]
      },
      {
        "id" : "357d67df-8b37-48da-84d1-33d5b1e318f9",
        "parentId" : "f7aaf7ae-097d-42ec-ba93-40662448b533",
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "ok, got it.\r\ni did add a comment about that:\r\n`the opt rename seems out of scope, but this is fine.`\r\n\r\nwill delete it.\r\n",
        "createdAt" : "2019-03-01T22:54:08Z",
        "updatedAt" : "2019-03-02T17:31:49Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      }
    ],
    "commit" : "5ecd74afbe4639dc0a1781acd079ce132f41eaa4",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +310,314 @@// This func takes care of validating joinOptions passed to the command, and then it converts\n// options into the internal JoinConfiguration type that is used as input all the phases in the kubeadm join workflow\nfunc newJoinData(cmd *cobra.Command, args []string, opt *joinOptions, out io.Writer) (*joinData, error) {\n\t// Re-apply defaults to the public kubeadm API (this will set only values not exposed/not set as a flags)\n\tkubeadmscheme.Scheme.Default(opt.externalcfg)"
  },
  {
    "id" : "2ff6752b-9beb-4676-9591-a44758c877b9",
    "prId" : 73452,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/73452#pullrequestreview-204972023",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e5ae5506-5ff5-4365-891b-c1c6e430c8a9",
        "parentId" : null,
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "these two lines are not needed:\r\n```\r\n_, err := joinRunner.InitData(args)\r\nkubeadmutil.CheckErr(err)\r\n```\r\n",
        "createdAt" : "2019-02-08T14:19:49Z",
        "updatedAt" : "2019-02-19T05:39:52Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      },
      {
        "id" : "a18f894c-f845-4703-8b66-44d0c186b8b2",
        "parentId" : "e5ae5506-5ff5-4365-891b-c1c6e430c8a9",
        "authorId" : "389750aa-9ab1-4291-b7d6-88df867e9eab",
        "body" : "might be i am missing something but in updated PR i need\r\nc, err := joinRunner.InitData(args)\r\nkubeadmutil.CheckErr(err)\r\nwdyt?",
        "createdAt" : "2019-02-13T09:37:33Z",
        "updatedAt" : "2019-02-19T05:39:52Z",
        "lastEditedBy" : "389750aa-9ab1-4291-b7d6-88df867e9eab",
        "tags" : [
        ]
      },
      {
        "id" : "b6e4e8b0-e616-4dc0-bde6-6b60a2949c3a",
        "parentId" : "e5ae5506-5ff5-4365-891b-c1c6e430c8a9",
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "```\r\n_, err := joinRunner.InitData(args)\r\nkubeadmutil.CheckErr(err)\r\n```\r\n^ these two lines are not needed.\r\n\r\nas you can see:\r\n```\r\nerr = joinRunner.Run(args)\r\n```\r\nwill call InitData():\r\nhttps://github.com/kubernetes/kubernetes/blob/master/cmd/kubeadm/app/cmd/phases/workflow/runner.go#L193-L206\r\n",
        "createdAt" : "2019-02-18T22:36:21Z",
        "updatedAt" : "2019-02-19T05:39:52Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      }
    ],
    "commit" : "6bbed9fef00d9789abf041f3961c9543e7a4ff45",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +158,162 @@\n\t\t\tc, err := joinRunner.InitData(args)\n\t\t\tkubeadmutil.CheckErr(err)\n\n\t\t\tdata := c.(*joinData)"
  },
  {
    "id" : "3934697e-abbb-473f-893f-86ef830ab599",
    "prId" : 73406,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/73406#pullrequestreview-198328413",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "518c84ae-e9e1-45d6-ac93-63b11d48e5d7",
        "parentId" : null,
        "authorId" : "cccc7bed-95f4-42a9-83ef-6ba1a4dca7ec",
        "body" : "Please, convert the tab into a space here.",
        "createdAt" : "2019-01-29T10:03:12Z",
        "updatedAt" : "2019-01-31T15:49:50Z",
        "lastEditedBy" : "cccc7bed-95f4-42a9-83ef-6ba1a4dca7ec",
        "tags" : [
        ]
      },
      {
        "id" : "11a54c65-c5fe-454e-8663-5a8fdfc5e189",
        "parentId" : "518c84ae-e9e1-45d6-ac93-63b11d48e5d7",
        "authorId" : "b09c5b8f-91f1-49f0-82ac-fbdd21c638c1",
        "body" : "i think this is a github display issue, i checked it is a space",
        "createdAt" : "2019-01-29T16:20:31Z",
        "updatedAt" : "2019-01-31T15:49:50Z",
        "lastEditedBy" : "b09c5b8f-91f1-49f0-82ac-fbdd21c638c1",
        "tags" : [
        ]
      },
      {
        "id" : "3062179d-894e-4d6f-97dc-2ee900223aa9",
        "parentId" : "518c84ae-e9e1-45d6-ac93-63b11d48e5d7",
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "looks like a tab in the email DIFF too.\r\n",
        "createdAt" : "2019-01-29T16:24:47Z",
        "updatedAt" : "2019-01-31T15:49:50Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      },
      {
        "id" : "9c0d517f-ff68-4540-b438-78f85d47e709",
        "parentId" : "518c84ae-e9e1-45d6-ac93-63b11d48e5d7",
        "authorId" : "cccc7bed-95f4-42a9-83ef-6ba1a4dca7ec",
        "body" : "Checked out this version of the file and opened it in vim, it's a tab. Please, fix that in order to keep the code well aligned and I'll lgtm it.",
        "createdAt" : "2019-01-30T16:43:57Z",
        "updatedAt" : "2019-01-31T15:49:50Z",
        "lastEditedBy" : "cccc7bed-95f4-42a9-83ef-6ba1a4dca7ec",
        "tags" : [
        ]
      },
      {
        "id" : "1eb43983-14cd-450f-bbb2-118a5f3a6eba",
        "parentId" : "518c84ae-e9e1-45d6-ac93-63b11d48e5d7",
        "authorId" : "b09c5b8f-91f1-49f0-82ac-fbdd21c638c1",
        "body" : "@rosti @neolit123 thx changing.msorry for that, i use `vim-go` i might need to check that. changing it now",
        "createdAt" : "2019-01-30T21:14:47Z",
        "updatedAt" : "2019-01-31T15:49:50Z",
        "lastEditedBy" : "b09c5b8f-91f1-49f0-82ac-fbdd21c638c1",
        "tags" : [
        ]
      },
      {
        "id" : "e82655e4-71ad-4c64-adb5-a5fbd169c6d4",
        "parentId" : "518c84ae-e9e1-45d6-ac93-63b11d48e5d7",
        "authorId" : "b09c5b8f-91f1-49f0-82ac-fbdd21c638c1",
        "body" : "done @rosti thx :rocket: ",
        "createdAt" : "2019-01-30T21:58:07Z",
        "updatedAt" : "2019-01-31T15:49:50Z",
        "lastEditedBy" : "b09c5b8f-91f1-49f0-82ac-fbdd21c638c1",
        "tags" : [
        ]
      }
    ],
    "commit" : "fd708d173ee1a4fb5c14ba1ac655ad6645856317",
    "line" : 62,
    "diffHunk" : "@@ -1,1 +254,258 @@\t\t\"For token-based discovery, allow joining without --discovery-token-ca-cert-hash pinning.\",\n\t)\n\t//\tdiscovery via kube config file flag\n\tflagSet.StringVar(\n\t\t&cfg.Discovery.File.KubeConfigPath, options.FileDiscovery, \"\","
  },
  {
    "id" : "61dee6b8-e2b8-4d9b-8392-23e3f5a299af",
    "prId" : 73029,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/73029#pullrequestreview-194101912",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "10ea42f9-9cff-48c9-9c83-7cdd75cff14a",
        "parentId" : null,
        "authorId" : "8a27151d-3530-4221-90e8-48b3a85cba37",
        "body" : "How does behave the runner together with args? I'm mostly concerned about [this]( https://github.com/kubernetes/kubernetes/blob/4531ce692a3557f2c1985409480095d7c884c341/cmd/kubeadm/app/cmd/phases/workflow/runner.go#L308)\r\n",
        "createdAt" : "2019-01-17T22:11:48Z",
        "updatedAt" : "2019-01-20T14:32:11Z",
        "lastEditedBy" : "8a27151d-3530-4221-90e8-48b3a85cba37",
        "tags" : [
        ]
      },
      {
        "id" : "769eb0c8-2a52-4ac0-8c71-2de88b870073",
        "parentId" : "10ea42f9-9cff-48c9-9c83-7cdd75cff14a",
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "did some basic tests and couldn't see a problem with the `cobra.NoArgs` of the sub command.\r\nwe should test again once there are actual phases...\r\n",
        "createdAt" : "2019-01-18T13:48:03Z",
        "updatedAt" : "2019-01-20T14:32:11Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      }
    ],
    "commit" : "9744d40f37cfa2dd003919989b08a0638bb63478",
    "line" : 37,
    "diffHunk" : "@@ -1,1 +191,195 @@\t\tLong:  joinLongDescription,\n\t\tRun: func(cmd *cobra.Command, args []string) {\n\t\t\tjoinOptions.args = &args\n\n\t\t\tc, err := joinRunner.InitData()"
  },
  {
    "id" : "04c6348c-7042-4ed7-a52a-49d6a8e2b8df",
    "prId" : 72870,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/72870#pullrequestreview-192833854",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "131254b4-c3e8-476e-afa3-ef38fa70beff",
        "parentId" : null,
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "RunPullImagesCheck() already creates a container runtime instance:\r\nhttps://github.com/kubernetes/kubernetes/blob/master/cmd/kubeadm/app/preflight/checks.go#L1042-L1053\r\n",
        "createdAt" : "2019-01-15T15:46:46Z",
        "updatedAt" : "2019-01-15T15:50:51Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      },
      {
        "id" : "feb72814-75e3-48cd-bc4f-e4b75e7424b6",
        "parentId" : "131254b4-c3e8-476e-afa3-ef38fa70beff",
        "authorId" : "b09c5b8f-91f1-49f0-82ac-fbdd21c638c1",
        "body" : "yop thx @neolit123 i was already fixing it",
        "createdAt" : "2019-01-15T15:47:38Z",
        "updatedAt" : "2019-01-15T15:50:51Z",
        "lastEditedBy" : "b09c5b8f-91f1-49f0-82ac-fbdd21c638c1",
        "tags" : [
        ]
      },
      {
        "id" : "9741863d-23da-4f87-b21c-dc9e37d5fc5d",
        "parentId" : "131254b4-c3e8-476e-afa3-ef38fa70beff",
        "authorId" : "b09c5b8f-91f1-49f0-82ac-fbdd21c638c1",
        "body" : "done",
        "createdAt" : "2019-01-15T19:52:51Z",
        "updatedAt" : "2019-01-15T19:52:51Z",
        "lastEditedBy" : "b09c5b8f-91f1-49f0-82ac-fbdd21c638c1",
        "tags" : [
        ]
      }
    ],
    "commit" : "86b6bbd1b9988ee99b2de533b0eb08b91ebd45f0",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +421,425 @@\n\t\tfmt.Println(\"[join] Pulling control-plane images\")\n\t\tif err := preflight.RunPullImagesCheck(utilsexec.New(), initCfg, j.ignorePreflightErrors); err != nil {\n\t\t\treturn err\n\t\t}"
  },
  {
    "id" : "d4907b93-3da5-45d9-96d2-9727fbf457fc",
    "prId" : 72442,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/72442#pullrequestreview-188777412",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7d3d0964-fb1f-4f00-85c4-8e48eaa05110",
        "parentId" : null,
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "just to mention: we didn't expose initOptions in the case of `kubeadm init`, since we don't have `init_test.go`. maybe now that we have init phases we can have some proper unit tests for init.\r\n",
        "createdAt" : "2019-01-02T12:14:51Z",
        "updatedAt" : "2019-01-09T11:47:55Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      },
      {
        "id" : "b2f0ae24-88b4-4d07-8e2d-4e027a2c8505",
        "parentId" : "7d3d0964-fb1f-4f00-85c4-8e48eaa05110",
        "authorId" : "8a27151d-3530-4221-90e8-48b3a85cba37",
        "body" : "Yes! PR is in flight",
        "createdAt" : "2019-01-02T18:30:05Z",
        "updatedAt" : "2019-01-09T11:47:55Z",
        "lastEditedBy" : "8a27151d-3530-4221-90e8-48b3a85cba37",
        "tags" : [
        ]
      }
    ],
    "commit" : "fd842480d19359263f3a691ce9343c7f326e432a",
    "line" : 47,
    "diffHunk" : "@@ -1,1 +177,181 @@//     the newJoinData method, that implements all the command options validation logic\nfunc NewCmdJoin(out io.Writer, joinOptions *joinOptions) *cobra.Command {\n\tif joinOptions == nil {\n\t\tjoinOptions = newJoinOptions()\n\t}"
  },
  {
    "id" : "c63eab08-f22c-4f94-9ea6-f1d5689cc370",
    "prId" : 72442,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/72442#pullrequestreview-188779192",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8b11b0b9-f737-4a76-b46d-31ed7b765f38",
        "parentId" : null,
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "i guess the plan for followup PRs is to create a join phase runner and add the phases to it instead of calling them in this Run() function?\r\n\r\none concern here is that we don't have a clear separation between init and join phases - i.e. the init phases are under this namespace:\r\nhttps://github.com/kubernetes/kubernetes/tree/8288f9e457561e666ee0ab1dbbd2b14c36fbdaed/cmd/kubeadm/app/cmd/phases\r\n\r\nmaybe we should put them under `phases/init`, `phases/join`?\r\n",
        "createdAt" : "2019-01-02T12:47:58Z",
        "updatedAt" : "2019-01-09T11:47:55Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      },
      {
        "id" : "28b80f7d-be9c-43bf-998f-86ed2aa7a505",
        "parentId" : "8b11b0b9-f737-4a76-b46d-31ed7b765f38",
        "authorId" : "8a27151d-3530-4221-90e8-48b3a85cba37",
        "body" : "@neolit123 yes next pr will add the join phase runner.\r\nI don't think we should have separation between phases, instead when possible we should reuse existing phases into the join workflow, but let's see this once we agree upon a list of phases for this workflow",
        "createdAt" : "2019-01-02T18:35:30Z",
        "updatedAt" : "2019-01-09T11:47:55Z",
        "lastEditedBy" : "8a27151d-3530-4221-90e8-48b3a85cba37",
        "tags" : [
        ]
      }
    ],
    "commit" : "fd842480d19359263f3a691ce9343c7f326e432a",
    "line" : 347,
    "diffHunk" : "@@ -1,1 +380,384 @@\n// Run executes worker node provisioning and tries to join an existing cluster.\nfunc (j *joinData) Run() error {\n\tfmt.Println(\"[preflight] Running pre-flight checks\")\n"
  },
  {
    "id" : "78419069-8e94-4e82-8c7a-18131abc9a8c",
    "prId" : 70755,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/70755#pullrequestreview-173168451",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "810579db-fb35-47f4-8bd4-92860c8e18a7",
        "parentId" : null,
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "nit: in the future this should be use/be called `ClusterConfiguration`, because the thing returned from the cluster configmap at this stage is a clusterconfig, not an initconfig\r\nThis is not specific to this PR though",
        "createdAt" : "2018-11-08T20:46:24Z",
        "updatedAt" : "2018-11-08T20:46:33Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      },
      {
        "id" : "fddfbadc-f5d7-48a0-bb45-f5605927493d",
        "parentId" : "810579db-fb35-47f4-8bd4-92860c8e18a7",
        "authorId" : "67bc6085-2cd9-4674-9dbc-d2a266f478be",
        "body" : "Yes, I'll file a bug for that later, thank you.",
        "createdAt" : "2018-11-08T20:57:29Z",
        "updatedAt" : "2018-11-08T20:57:29Z",
        "lastEditedBy" : "67bc6085-2cd9-4674-9dbc-d2a266f478be",
        "tags" : [
        ]
      }
    ],
    "commit" : "fb88c199cdca1b210e5b5f36a0504d0278e4ff16",
    "line" : 81,
    "diffHunk" : "@@ -1,1 +534,538 @@\n\t// This feature is disabled by default in kubeadm\n\tif features.Enabled(j.initCfg.FeatureGates, features.DynamicKubeletConfig) {\n\t\tif err := kubeletphase.EnableDynamicConfigForNode(client, j.cfg.NodeRegistration.Name, kubeletVersion); err != nil {\n\t\t\treturn errors.Wrap(err, \"error consuming base kubelet configuration\")"
  },
  {
    "id" : "5ec88db1-636d-4341-ab9b-74b37450fdff",
    "prId" : 69662,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/69662#pullrequestreview-168341308",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1b593a7f-4892-4563-aada-128808dbd441",
        "parentId" : null,
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "This is weirdly conflating the data types for an IPVS flag.  \r\n\r\n@fabriziopandini thoughts?",
        "createdAt" : "2018-10-24T01:55:31Z",
        "updatedAt" : "2018-11-01T08:48:08Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      },
      {
        "id" : "121888e5-9b88-4312-b3e0-f5dbbe679855",
        "parentId" : "1b593a7f-4892-4563-aada-128808dbd441",
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "having both configs in a struct called Join feels weird indeed. the struct is just used for storage in the case of initcfg, so that fetchInitConfigurationFromJoinConfiguration() is not called multiple times.\r\nif they remain like so they should be joinCfg, initCfg. also line 299 would need some renames.\r\n\r\non control-plane nodes the IPVS check is conditional for kube-proxy mode already. the conditional IPVS check on worker nodes seems viable in cases of worker nodes not having the IPVS modules where an error will always be thrown.\r\n",
        "createdAt" : "2018-10-24T21:45:09Z",
        "updatedAt" : "2018-11-01T08:48:08Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      },
      {
        "id" : "2c7b0e9f-b4b0-408e-80bb-de45bc94f2c9",
        "parentId" : "1b593a7f-4892-4563-aada-128808dbd441",
        "authorId" : "8a27151d-3530-4221-90e8-48b3a85cba37",
        "body" : "@timothysc what we really need here is ClusterConfiguration but as of today InitConfiguration and ClusterConfiguration are still tied together in many utilities.\r\nFixing the above point IMO is out scope of this PR, so I'm fine with the proposed solution with one last exception already discussed with @ereslibre ",
        "createdAt" : "2018-10-25T11:53:39Z",
        "updatedAt" : "2018-11-01T08:48:08Z",
        "lastEditedBy" : "8a27151d-3530-4221-90e8-48b3a85cba37",
        "tags" : [
        ]
      }
    ],
    "commit" : "242e071fa24cb8ab11b3a276486e2154770bf3f4",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +290,294 @@type Join struct {\n\tcfg                   *kubeadmapi.JoinConfiguration\n\tinitCfg               *kubeadmapi.InitConfiguration\n\ttlsBootstrapCfg       *clientcmdapi.Config\n\tignorePreflightErrors sets.String"
  },
  {
    "id" : "3d2f1520-ea51-4894-bbac-050b0611ad12",
    "prId" : 68455,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/68455#pullrequestreview-156429547",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "18beff1c-fff1-4667-aac4-2dabf0bb26b0",
        "parentId" : null,
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "?? why? ",
        "createdAt" : "2018-09-18T01:18:20Z",
        "updatedAt" : "2018-09-18T01:19:09Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      },
      {
        "id" : "42a999f8-fb80-4be8-bcb5-cd1d2a3e2321",
        "parentId" : "18beff1c-fff1-4667-aac4-2dabf0bb26b0",
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "@Klaven \r\nit should be a `fmt.Println` instead of `fmt.Printf(.....\\n)`. please fix this.\r\n\r\n@timothysc \r\nin the case control plane join this `glog.Infoln()` would introduce the glog formatting with time / __FILE__, __LINE__, etc. i think Lucas' original idea was to have the default kubeadm output glog-free.\r\n@chuckha can confirm.\r\n",
        "createdAt" : "2018-09-18T01:32:05Z",
        "updatedAt" : "2018-09-18T01:32:05Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      },
      {
        "id" : "5acd6c06-23f6-404e-a490-9dc44ae138c3",
        "parentId" : "18beff1c-fff1-4667-aac4-2dabf0bb26b0",
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "IIRC @chuckha had set a option to disable the glog premable.  \r\nRight now I'd like to switch it all to glog and provide uniformity there.  \r\n\r\nIt's too late in the cycle to hit 1.12 w/cleanup work so we'll have to punt until 1.13 and try to provide better clarity on goals.  Ideally, we move it all to glog, strip out unnecessary details by default and provide more verbose logs with verbosity levels. ",
        "createdAt" : "2018-09-18T13:05:16Z",
        "updatedAt" : "2018-09-18T13:05:16Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      },
      {
        "id" : "79c40ab1-74a1-40cd-bf5c-b4f0e06bf8c3",
        "parentId" : "18beff1c-fff1-4667-aac4-2dabf0bb26b0",
        "authorId" : "bfaab188-fe7f-45cd-8e91-eeb4626a5f04",
        "body" : "It's impossible to disable glog preamble. What @timothysc is remembering is me changing all debug calls to be `glog.V(n)` calls and all user output to use `fmt.Println/f`.\r\n\r\nI don't want kubeadm to switch entirely to glog for the user output, it would make parsing the token out of `kubeadm init` even worse.\r\n\r\nThe rules for kubeadm:\r\n* Does the user need to see it? yes => use `fmt.Print` no => use `glog.V(1).Infoln/Debugln`. \r\n* Never use `glog` without using the `.V(n)` feature.",
        "createdAt" : "2018-09-18T14:22:57Z",
        "updatedAt" : "2018-09-18T14:22:57Z",
        "lastEditedBy" : "bfaab188-fe7f-45cd-8e91-eeb4626a5f04",
        "tags" : [
        ]
      },
      {
        "id" : "d0a7a5dc-c624-4939-915d-864a74b285e4",
        "parentId" : "18beff1c-fff1-4667-aac4-2dabf0bb26b0",
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "^ +100\r\n",
        "createdAt" : "2018-09-18T15:29:41Z",
        "updatedAt" : "2018-09-18T15:29:41Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      }
    ],
    "commit" : "a5356e5ba98c219b12ba2b0f37fbff8dfd6047a2",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +332,336 @@\n\t\t// run kubeadm init preflight checks for checking all the prequisites\n\t\tfmt.Printf(\"[join] running pre-flight checks before initializing the new control plane instance\\n\")\n\t\tpreflight.RunInitMasterChecks(utilsexec.New(), initConfiguration, j.ignorePreflightErrors)\n"
  },
  {
    "id" : "d7f7e560-f93c-402d-899f-18d5558310c5",
    "prId" : 67763,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/67763#pullrequestreview-164487103",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "779bb084-6822-4117-85f0-1d42f1b94ddb",
        "parentId" : null,
        "authorId" : "8a27151d-3530-4221-90e8-48b3a85cba37",
        "body" : "I think to understand why you are creating separated object instead of working on cfg, but I'm wondering if we can do the the other way around: use cfg and then clean up cfg.Discovery.File or cfg.Discovery.BootstrapToken if corresponding flags/args are not set",
        "createdAt" : "2018-10-11T17:52:45Z",
        "updatedAt" : "2018-10-16T12:25:48Z",
        "lastEditedBy" : "8a27151d-3530-4221-90e8-48b3a85cba37",
        "tags" : [
        ]
      },
      {
        "id" : "24110f64-218a-4673-9362-e7bb610e9939",
        "parentId" : "779bb084-6822-4117-85f0-1d42f1b94ddb",
        "authorId" : "8a27151d-3530-4221-90e8-48b3a85cba37",
        "body" : "I'm not a fan of this solution but we can leave with it ATM",
        "createdAt" : "2018-10-14T06:52:01Z",
        "updatedAt" : "2018-10-16T12:25:48Z",
        "lastEditedBy" : "8a27151d-3530-4221-90e8-48b3a85cba37",
        "tags" : [
        ]
      }
    ],
    "commit" : "576b8d3f4fdb0961981bc04dc647b19a8c90ac4e",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +160,164 @@\tkubeadmscheme.Scheme.Default(cfg)\n\n\tfd := &kubeadmapiv1beta1.FileDiscovery{}\n\tbtd := &kubeadmapiv1beta1.BootstrapTokenDiscovery{}\n"
  },
  {
    "id" : "39e483a4-06e3-4046-bc47-7b1ba320cf38",
    "prId" : 67763,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/67763#pullrequestreview-164486928",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6c8766b8-3382-4ca8-a4d1-8ac11e9ed3bc",
        "parentId" : null,
        "authorId" : "8a27151d-3530-4221-90e8-48b3a85cba37",
        "body" : "This is a little bit confusing.\r\nIn the config we now there is `BootstrapToken.Token` and `TLSBootstrapToken` but not `Token`\r\nhere there is `Token`, `TLSBootstrapToken` but not `discovery-token` anymore",
        "createdAt" : "2018-10-11T17:57:19Z",
        "updatedAt" : "2018-10-16T12:25:48Z",
        "lastEditedBy" : "8a27151d-3530-4221-90e8-48b3a85cba37",
        "tags" : [
        ]
      },
      {
        "id" : "8765b83b-87b0-43ee-bc8d-f96e179e64d8",
        "parentId" : "6c8766b8-3382-4ca8-a4d1-8ac11e9ed3bc",
        "authorId" : "8a27151d-3530-4221-90e8-48b3a85cba37",
        "body" : "Please fix the flag documentation explaining the semantics of this flag",
        "createdAt" : "2018-10-14T06:45:28Z",
        "updatedAt" : "2018-10-16T12:25:48Z",
        "lastEditedBy" : "8a27151d-3530-4221-90e8-48b3a85cba37",
        "tags" : [
        ]
      }
    ],
    "commit" : "576b8d3f4fdb0961981bc04dc647b19a8c90ac4e",
    "line" : 86,
    "diffHunk" : "@@ -1,1 +227,231 @@\t\t\"Specify the node name.\")\n\tflagSet.StringVar(\n\t\ttoken, \"token\", \"\",\n\t\t\"Use this token for both discovery-token and tls-bootstrap-token when those values are not provided.\")\n\tflagSet.StringVar("
  },
  {
    "id" : "f569d372-8491-428a-9f42-b7736d6163d4",
    "prId" : 63969,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/63969#pullrequestreview-121067171",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "01d5c976-1de7-484e-b115-c36b00edc090",
        "parentId" : null,
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "welp, there is also this issue in `join_test.go`:\r\n```\r\ninvalid operation: join (variable of type *Join) has no field or method Validate\r\n````\r\npossibly this and the related tests has to be removed:\r\nhttps://github.com/luxas/kubernetes/blob/469532c49917bbecaf9d9b29ff5da5a4aa57209c/cmd/kubeadm/app/cmd/join_test.go#L177-L181\r\n",
        "createdAt" : "2018-05-17T14:30:09Z",
        "updatedAt" : "2018-05-17T23:55:17Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      }
    ],
    "commit" : "00390b6ec5cef0b126c5e3deedb2a505b08cdd14",
    "line" : 118,
    "diffHunk" : "@@ -1,1 +227,231 @@\tpreflight.TryStartKubelet(ignorePreflightErrors)\n\n\treturn &Join{cfg: internalcfg}, nil\n}\n"
  },
  {
    "id" : "9f5946a9-2343-49ea-8e01-7f38f2b9d904",
    "prId" : 59292,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/59292#pullrequestreview-94582125",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "76e265f5-2d9a-408e-89d2-90d30fc2b68f",
        "parentId" : null,
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "Does this need to be a top level command line flag?  Shouldn't this be an exception case? ",
        "createdAt" : "2018-02-07T03:22:19Z",
        "updatedAt" : "2018-02-13T15:16:51Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      }
    ],
    "commit" : "62dddb7853e878d83dc2095af82bdec1bfbc29c3",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +169,173 @@\t\t\"A set of key=value pairs that describe feature gates for various features. \"+\n\t\t\t\"Options are:\\n\"+strings.Join(features.KnownFeatures(&features.InitFeatureGates), \"\\n\"))\n\tflagSet.StringVar(\n\t\t&cfg.CRISocket, \"cri-socket\", cfg.CRISocket,\n\t\t`Specify the CRI socket to connect to.`,"
  },
  {
    "id" : "81eb9e84-47da-45ca-ae41-862e15424499",
    "prId" : 52913,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/52913#pullrequestreview-64959327",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d8d9df37-76cd-4ef4-8b36-9cc5c342ad5a",
        "parentId" : null,
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "As we can now drop support for v1.7 kubelets, you can now remove this completely (preferably in an other PR though)",
        "createdAt" : "2017-09-25T15:40:22Z",
        "updatedAt" : "2017-09-26T09:56:30Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      },
      {
        "id" : "a0089e12-2010-4b40-8f7f-d59b4575337b",
        "parentId" : "d8d9df37-76cd-4ef4-8b36-9cc5c342ad5a",
        "authorId" : "659c7c1f-39ba-41a7-8331-fcc6b3b5f2fb",
        "body" : "Yes, I deliberately kept that part here. 1.7 cleanup should be in separate PR.",
        "createdAt" : "2017-09-25T16:40:11Z",
        "updatedAt" : "2017-09-26T09:56:30Z",
        "lastEditedBy" : "659c7c1f-39ba-41a7-8331-fcc6b3b5f2fb",
        "tags" : [
        ]
      }
    ],
    "commit" : "521c84aa89d8ce05a037f8ab2dba07cd6ec27077",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +223,227 @@\t// Otherwise, just assume v1.8\n\t// TODO: In the beginning of the v1.9 cycle, we can remove the logic as we then don't support v1.7 anymore\n\tif err == nil && kubeletVersion.Major() == 1 && kubeletVersion.Minor() == 7 {\n\t\thostname := nodeutil.GetHostname(j.cfg.NodeName)\n\t\tif err := kubeadmnode.PerformTLSBootstrap(cfg, hostname); err != nil {"
  },
  {
    "id" : "a0b3c274-181a-4c12-b195-b6fec6ab111d",
    "prId" : 52188,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/52188#pullrequestreview-61606716",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "69bcfda9-52ce-4187-b9f0-ae25f954cbed",
        "parentId" : null,
        "authorId" : "6682fc41-9e62-4c69-b891-a0be20e50c30",
        "body" : "Side comment but it might be nice to keep a version check in here permanently to validate the kubeadm<>kubelet skew is supported and fail fast with a nice error if not.",
        "createdAt" : "2017-09-08T19:35:25Z",
        "updatedAt" : "2017-09-08T19:38:39Z",
        "lastEditedBy" : "6682fc41-9e62-4c69-b891-a0be20e50c30",
        "tags" : [
        ]
      },
      {
        "id" : "20beed14-47a0-4f0b-a6d4-13939fd01b99",
        "parentId" : "69bcfda9-52ce-4187-b9f0-ae25f954cbed",
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "I'm planning to add such a version check in v1.9\r\nToo late for v1.8 indeed",
        "createdAt" : "2017-09-08T19:39:48Z",
        "updatedAt" : "2017-09-08T19:39:48Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      },
      {
        "id" : "905aba91-21aa-4173-85b9-7b756faf4479",
        "parentId" : "69bcfda9-52ce-4187-b9f0-ae25f954cbed",
        "authorId" : "6682fc41-9e62-4c69-b891-a0be20e50c30",
        "body" : "Filed https://github.com/kubernetes/kubeadm/issues/430 so we don't forget.",
        "createdAt" : "2017-09-08T19:47:08Z",
        "updatedAt" : "2017-09-08T19:47:08Z",
        "lastEditedBy" : "6682fc41-9e62-4c69-b891-a0be20e50c30",
        "tags" : [
        ]
      },
      {
        "id" : "45e2aacd-ae8b-45d4-95d3-56e92d0a1430",
        "parentId" : "69bcfda9-52ce-4187-b9f0-ae25f954cbed",
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "Thanks!",
        "createdAt" : "2017-09-08T19:52:39Z",
        "updatedAt" : "2017-09-08T19:52:39Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      }
    ],
    "commit" : "136d68b4d5c52472691ed893cfd5bf801a21461e",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +221,225 @@\t// In case the command executed successfully and returned v1.7-something, we'll perform TLS Bootstrapping\n\t// Otherwise, just assume v1.8\n\t// TODO: In the beginning of the v1.9 cycle, we can remove the logic as we then don't support v1.7 anymore\n\tif err == nil && strings.HasPrefix(string(kubeletVersionBytes), \"Kubernetes v1.7\") {\n\t\thostname := nodeutil.GetHostname(j.cfg.NodeName)"
  },
  {
    "id" : "019583aa-4f2f-429f-8694-aeb11970e3ed",
    "prId" : 52188,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/52188#pullrequestreview-61604292",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "71af9122-72aa-4187-bffb-bda1608eb841",
        "parentId" : null,
        "authorId" : "6682fc41-9e62-4c69-b891-a0be20e50c30",
        "body" : "nit: this call could be inside the 1.7 conditional block since it doesn't need to happen if we're offloading bootstrapping to the 1.8+ kubelet.",
        "createdAt" : "2017-09-08T19:37:51Z",
        "updatedAt" : "2017-09-08T19:38:39Z",
        "lastEditedBy" : "6682fc41-9e62-4c69-b891-a0be20e50c30",
        "tags" : [
        ]
      },
      {
        "id" : "b189c13a-4600-43c1-96e3-9661985c15ae",
        "parentId" : "71af9122-72aa-4187-bffb-bda1608eb841",
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "That will get removed in v1.9 anyway; it does no harm to print the server version unconditionally now ;)",
        "createdAt" : "2017-09-08T19:41:46Z",
        "updatedAt" : "2017-09-08T19:41:46Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      }
    ],
    "commit" : "136d68b4d5c52472691ed893cfd5bf801a21461e",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +211,215 @@\t\treturn err\n\t}\n\tif err := kubeadmnode.ValidateAPIServer(client); err != nil {\n\t\treturn err\n\t}"
  },
  {
    "id" : "210ca4cc-a4fc-4b90-afd8-5cf4eb826129",
    "prId" : 41921,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/41921#pullrequestreview-23565421",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "513dc23a-56d1-45a8-b9d5-bb37dfa6f3d1",
        "parentId" : null,
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "maybe add `--masters` here?",
        "createdAt" : "2017-02-23T19:43:20Z",
        "updatedAt" : "2017-02-28T19:06:14Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      }
    ],
    "commit" : "1d37c6be4903d47776028c17b056b16cba150fab",
    "line" : 62,
    "diffHunk" : "@@ -1,1 +104,108 @@\t\t&cfgPath, \"config\", cfgPath,\n\t\t\"Path to kubeadm config file\")\n\n\tcmd.PersistentFlags().StringVar(\n\t\t&cfg.DiscoveryFile, \"discovery-file\", \"\","
  },
  {
    "id" : "cefec1b4-f70c-4ad4-b223-e808ff994a42",
    "prId" : 41921,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/41921#pullrequestreview-24307902",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a0de4891-d6d6-4c5e-b25c-928298fd9ff1",
        "parentId" : null,
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "The defaulting is broken right now. Now it defaults an empty NodeConfiguration object, while we expect it to default a NodeConfiguration object with the flag values present. We'll solve this by doing the following above instead of the four lines currently:\r\n```go\r\n\tcfg := &kubeadmapiext.NodeConfiguration{}\r\n\tapi.Scheme.Default(cfg)\r\n```\r\nThis runs the initial defaulting of the external (versioned) config object, so defaults for an empty object will show up in the cobra help text",
        "createdAt" : "2017-02-28T18:24:09Z",
        "updatedAt" : "2017-02-28T19:06:14Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      }
    ],
    "commit" : "1d37c6be4903d47776028c17b056b16cba150fab",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +57,61 @@\n\tvar skipPreFlight bool\n\tvar cfgPath string\n\n\tcmd := &cobra.Command{"
  },
  {
    "id" : "e5cb4026-92ba-4c81-bf64-fe0e4cce43d9",
    "prId" : 41603,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/41603#pullrequestreview-22385071",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ddb04a9f-fa45-4d54-9c16-3a3c2a5620e7",
        "parentId" : null,
        "authorId" : "b8f6188a-f26e-4203-bed3-a5d075997fdf",
        "body" : "I don't think you should have a pkgs alias here. kubeconfig  doesn't seem to collide with anything. ",
        "createdAt" : "2017-02-16T22:37:52Z",
        "updatedAt" : "2017-02-17T19:37:28Z",
        "lastEditedBy" : "b8f6188a-f26e-4203-bed3-a5d075997fdf",
        "tags" : [
        ]
      },
      {
        "id" : "859cf7b8-127a-4fb2-91f0-7fd1afe1a6fb",
        "parentId" : "ddb04a9f-fa45-4d54-9c16-3a3c2a5620e7",
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "I actually think it's much better to throw `util`  at the end so one knows for sure that it's question about a generic helpers lib.\r\n\r\nIf the name was kubeconfig, I'd think it the question was about the kubeconfig phase for example, or a k8s-generic factory or something",
        "createdAt" : "2017-02-16T22:47:16Z",
        "updatedAt" : "2017-02-17T19:37:28Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      },
      {
        "id" : "3cc8eb48-0ae9-4a30-89b4-ba832a63dd3b",
        "parentId" : "ddb04a9f-fa45-4d54-9c16-3a3c2a5620e7",
        "authorId" : "b8f6188a-f26e-4203-bed3-a5d075997fdf",
        "body" : "I disagree, and here is why: https://blog.golang.org/package-names",
        "createdAt" : "2017-02-16T22:52:14Z",
        "updatedAt" : "2017-02-17T19:37:28Z",
        "lastEditedBy" : "b8f6188a-f26e-4203-bed3-a5d075997fdf",
        "tags" : [
        ]
      },
      {
        "id" : "5574ea51-0780-49d5-a621-4b1b77e20719",
        "parentId" : "ddb04a9f-fa45-4d54-9c16-3a3c2a5620e7",
        "authorId" : "b8f6188a-f26e-4203-bed3-a5d075997fdf",
        "body" : "@pires, @jbeda, @mikedanese what do you think?",
        "createdAt" : "2017-02-16T22:54:58Z",
        "updatedAt" : "2017-02-17T19:37:28Z",
        "lastEditedBy" : "b8f6188a-f26e-4203-bed3-a5d075997fdf",
        "tags" : [
        ]
      },
      {
        "id" : "0df26057-695a-428b-b101-9757d2d894cd",
        "parentId" : "ddb04a9f-fa45-4d54-9c16-3a3c2a5620e7",
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "> Don't steal good names from the user. Avoid giving a package a name that is commonly used in client code. For example, the buffered I/O package is called bufio, not buf, since buf is a good variable name for a buffer.\r\n\r\nI don't think this should be kubeconfig for that reason for instance.\r\nFurther, that doc said there should be no package named `util` and I'm trying to move things away from `kubeadmutil` (the \"generic\" one) as much as possible.\r\n\r\nWhat's your suggestion here other than kubeconfig?",
        "createdAt" : "2017-02-16T22:58:09Z",
        "updatedAt" : "2017-02-17T19:37:28Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      }
    ],
    "commit" : "60b789b1c7488da4772ad300c8067b0d5b83e021",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +37,41 @@\t\"k8s.io/kubernetes/cmd/kubeadm/app/preflight\"\n\tkubeadmutil \"k8s.io/kubernetes/cmd/kubeadm/app/util\"\n\tkubeconfigutil \"k8s.io/kubernetes/cmd/kubeadm/app/util/kubeconfig\"\n)\n"
  },
  {
    "id" : "d1bbdac1-1d97-4494-be13-12a62d348cf2",
    "prId" : 40292,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/40292#pullrequestreview-17907390",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d8d77945-1b12-4365-8dc6-75eb07202dcd",
        "parentId" : null,
        "authorId" : "0ac5d6cd-da87-46a2-9b30-0d21db1063a2",
        "body" : "Where will we be using the CA file written here?",
        "createdAt" : "2017-01-23T11:29:13Z",
        "updatedAt" : "2017-01-23T11:33:23Z",
        "lastEditedBy" : "0ac5d6cd-da87-46a2-9b30-0d21db1063a2",
        "tags" : [
        ]
      },
      {
        "id" : "6ebc256c-9688-4248-b96a-705398d0ac0b",
        "parentId" : "d8d77945-1b12-4365-8dc6-75eb07202dcd",
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "In the debs/rpms with the --client-ca-cert file, see the PR description above",
        "createdAt" : "2017-01-23T11:58:05Z",
        "updatedAt" : "2017-01-23T11:58:05Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      }
    ],
    "commit" : "6a37f450ae5c62770f5befd4e5334833ada513dd",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +148,152 @@\tcluster := cfg.Contexts[cfg.CurrentContext].Cluster\n\tcaCertFile := filepath.Join(kubeadmapi.GlobalEnvParams.KubernetesDir, kubeadmconstants.CACertName)\n\terr = certutil.WriteCert(caCertFile, cfg.Clusters[cluster].CertificateAuthorityData)\n\tif err != nil {\n\t\treturn fmt.Errorf(\"couldn't save the CA certificate to disk: %v\", err)"
  },
  {
    "id" : "7ce26ab6-3506-4c44-8175-e1360972de41",
    "prId" : 39464,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/39464#pullrequestreview-15537478",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6013f12f-17eb-4076-b4ba-63cb1cc54e0a",
        "parentId" : null,
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "???",
        "createdAt" : "2017-01-06T17:19:23Z",
        "updatedAt" : "2017-01-06T17:19:23Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      },
      {
        "id" : "a57de463-876a-40bc-8ed7-1b310a2471d8",
        "parentId" : "6013f12f-17eb-4076-b4ba-63cb1cc54e0a",
        "authorId" : "0ac5d6cd-da87-46a2-9b30-0d21db1063a2",
        "body" : "Will fix in the refactor.",
        "createdAt" : "2017-01-06T18:16:43Z",
        "updatedAt" : "2017-01-06T18:16:43Z",
        "lastEditedBy" : "0ac5d6cd-da87-46a2-9b30-0d21db1063a2",
        "tags" : [
        ]
      }
    ],
    "commit" : "c272bc56b1545fbe83e31683b313ef3894eb3262",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +34,38 @@\t\"k8s.io/kubernetes/cmd/kubeadm/app/preflight\"\n\tkubeadmutil \"k8s.io/kubernetes/cmd/kubeadm/app/util\"\n\n\t\"k8s.io/kubernetes/pkg/api\"\n\tclientcmdapi \"k8s.io/kubernetes/pkg/client/unversioned/clientcmd/api\""
  },
  {
    "id" : "f24fb557-52e1-4c9d-9652-4282f28d9c4c",
    "prId" : 37084,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/37084#pullrequestreview-11626434",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "313d98e9-8751-40ed-ba3b-86f84e2feca2",
        "parentId" : null,
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "Have you manually verified this works?\r\nJust wondering if it should be before or after the TLS bootstrap...",
        "createdAt" : "2016-12-02T14:24:20Z",
        "updatedAt" : "2016-12-06T14:46:41Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      },
      {
        "id" : "4e4b4a0d-026c-4d27-b22d-33140c254d85",
        "parentId" : "313d98e9-8751-40ed-ba3b-86f84e2feca2",
        "authorId" : "bf09051f-4cbd-4752-ac6f-965d34becfd3",
        "body" : "Yeah, I did at one point. Not sure what difference it makes if its before or after TLS bootstrap since we are passing the same object.",
        "createdAt" : "2016-12-02T15:08:52Z",
        "updatedAt" : "2016-12-06T14:46:41Z",
        "lastEditedBy" : "bf09051f-4cbd-4752-ac6f-965d34becfd3",
        "tags" : [
        ]
      },
      {
        "id" : "16ffa040-c054-4260-aa7b-85272df4b8e1",
        "parentId" : "313d98e9-8751-40ed-ba3b-86f84e2feca2",
        "authorId" : "659c7c1f-39ba-41a7-8331-fcc6b3b5f2fb",
        "body" : "@luxas it should be before tls bootstrap, otherwise it will try to issue new cert for same node name, so looks at right place.",
        "createdAt" : "2016-12-06T16:35:58Z",
        "updatedAt" : "2016-12-06T16:35:58Z",
        "lastEditedBy" : "659c7c1f-39ba-41a7-8331-fcc6b3b5f2fb",
        "tags" : [
        ]
      }
    ],
    "commit" : "16453a33346c4d8e407623e3e49daf476e91a353",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +146,150 @@\t}\n\n\terr = kubenode.CheckForNodeNameDuplicates(connectionDetails)\n\tif err != nil {\n\t\treturn err"
  },
  {
    "id" : "c74f31df-ece2-4abe-9d7b-951ff1286dce",
    "prId" : 36462,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/36462#pullrequestreview-10638700",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9a11e7ec-5f3e-4e76-b87d-e39e977c70ac",
        "parentId" : null,
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "This should be moved inside the if-statement I suppose?",
        "createdAt" : "2016-11-29T21:13:20Z",
        "updatedAt" : "2016-12-15T21:57:21Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      }
    ],
    "commit" : "7945c437e59e3211c94a432e803d173282a677cd",
    "line" : null,
    "diffHunk" : "@@ -1,1 +130,134 @@// Run executes worked node provisioning and tries to join an existing cluster.\nfunc (j *Join) Run(out io.Writer) error {\n\tclusterInfo, err := kubenode.RetrieveTrustedClusterInfo(j.cfg.Discovery.Token)\n\tif err != nil {\n\t\treturn err"
  },
  {
    "id" : "7c03267b-9571-4d9c-b63d-a14864c442ae",
    "prId" : 36462,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/36462#pullrequestreview-12576801",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "204803b6-aaa1-4be6-bde1-464ec4144db3",
        "parentId" : null,
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "What's this?",
        "createdAt" : "2016-11-29T21:13:34Z",
        "updatedAt" : "2016-12-15T21:57:21Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      },
      {
        "id" : "e50ce6db-06c5-40c9-ab47-3a113cc7bf75",
        "parentId" : "204803b6-aaa1-4be6-bde1-464ec4144db3",
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "It's a todo to move token discovery behind the discovery interface witch involved deleteing ConnectionInfo. I don't want to do that here.",
        "createdAt" : "2016-12-12T23:38:53Z",
        "updatedAt" : "2016-12-15T21:57:21Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      }
    ],
    "commit" : "7945c437e59e3211c94a432e803d173282a677cd",
    "line" : 105,
    "diffHunk" : "@@ -1,1 +136,140 @@\n\tvar cfg *clientcmdapi.Config\n\t// TODO: delete this first block when we move Token to the discovery interface\n\tif j.cfg.Discovery.Token != nil {\n\t\tconnectionDetails, err := kubenode.EstablishMasterConnection(j.cfg.Discovery.Token, clusterInfo)"
  },
  {
    "id" : "ff8aee79-2664-4670-b6df-f74300e4f551",
    "prId" : 34719,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/34719#pullrequestreview-4216115",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ee11321b-304b-4465-ba65-2454bda622cb",
        "parentId" : null,
        "authorId" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "body" : "NB: Hopefully we'll be able to get rid of the discovery port as we move this stuff forward.\n",
        "createdAt" : "2016-10-13T18:10:16Z",
        "updatedAt" : "2016-10-17T11:10:47Z",
        "lastEditedBy" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "tags" : [
        ]
      },
      {
        "id" : "6cf3b692-af05-430f-b49a-a3722b2a8fc4",
        "parentId" : "ee11321b-304b-4465-ba65-2454bda622cb",
        "authorId" : "d37d9758-bdf5-4c23-a40e-a85099689a0c",
        "body" : "Yes, and then we can pass the port as you suggested above.\n",
        "createdAt" : "2016-10-14T07:01:09Z",
        "updatedAt" : "2016-10-17T11:10:47Z",
        "lastEditedBy" : "d37d9758-bdf5-4c23-a40e-a85099689a0c",
        "tags" : [
        ]
      }
    ],
    "commit" : "6f57775669b01a2de113e7a2766b3c4531731aa9",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +76,80 @@\t)\n\n\tcmd.PersistentFlags().Int32Var(\n\t\t&cfg.DiscoveryPort, \"discovery-port\", kubeadmapi.DefaultDiscoveryBindPort,\n\t\t\"(optional) Discovery port on the master\","
  },
  {
    "id" : "d59d8eae-8a7c-48f1-b2ac-711221190472",
    "prId" : 34719,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/34719#pullrequestreview-4216047",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5626c4dc-ec88-4a87-b5fe-cc4c8213fa80",
        "parentId" : null,
        "authorId" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "body" : "Should this be part of the non-flag arg that is passed in?  That would feel more natural.\n\n```\nkubeadm join --token=XXX 1.2.3.4:1234?\n```\n",
        "createdAt" : "2016-10-13T18:12:56Z",
        "updatedAt" : "2016-10-17T11:10:47Z",
        "lastEditedBy" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "tags" : [
        ]
      },
      {
        "id" : "3e50ccf1-0930-4fb5-909a-6e449aa28782",
        "parentId" : "5626c4dc-ec88-4a87-b5fe-cc4c8213fa80",
        "authorId" : "d37d9758-bdf5-4c23-a40e-a85099689a0c",
        "body" : "Sure, but right now with discovery port this doesn't exactly make sense.\n",
        "createdAt" : "2016-10-14T07:00:21Z",
        "updatedAt" : "2016-10-17T11:10:47Z",
        "lastEditedBy" : "d37d9758-bdf5-4c23-a40e-a85099689a0c",
        "tags" : [
        ]
      }
    ],
    "commit" : "6f57775669b01a2de113e7a2766b3c4531731aa9",
    "line" : null,
    "diffHunk" : "@@ -1,1 +71,75 @@\t)\n\n\tcmd.PersistentFlags().Int32Var(\n\t\t&cfg.APIPort, \"api-port\", kubeadmapi.DefaultAPIBindPort,\n\t\t\"(optional) API server port on the master\","
  },
  {
    "id" : "b7473e6b-0025-491e-9a01-4e581c3306cf",
    "prId" : 34341,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/34341#pullrequestreview-4048795",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8550573f-f4d2-43fe-ad70-e13eb024b831",
        "parentId" : null,
        "authorId" : "0ac5d6cd-da87-46a2-9b30-0d21db1063a2",
        "body" : "New flags must be added to `hack/verify-flags/known-flags.txt`, otherwise build won't pass.\n",
        "createdAt" : "2016-10-13T11:02:47Z",
        "updatedAt" : "2016-10-13T15:53:24Z",
        "lastEditedBy" : "0ac5d6cd-da87-46a2-9b30-0d21db1063a2",
        "tags" : [
        ]
      }
    ],
    "commit" : "4231c046dd6830ab5cc52b7d0c8e80e811daf2e4",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +60,64 @@\n\tcmd.PersistentFlags().BoolVar(\n\t\t&skipPreFlight, \"skip-preflight-checks\", false,\n\t\t\"skip preflight checks normally run before modifying the system\",\n\t)"
  },
  {
    "id" : "4a65121a-704b-4239-95fa-b9b48a03d1e0",
    "prId" : 34341,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/34341#pullrequestreview-4112930",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "177ae3e9-cbcb-4983-b884-d08c55936027",
        "parentId" : null,
        "authorId" : "d37d9758-bdf5-4c23-a40e-a85099689a0c",
        "body" : "Also prefix here...\n",
        "createdAt" : "2016-10-13T16:33:02Z",
        "updatedAt" : "2016-10-13T16:50:41Z",
        "lastEditedBy" : "d37d9758-bdf5-4c23-a40e-a85099689a0c",
        "tags" : [
        ]
      }
    ],
    "commit" : "4231c046dd6830ab5cc52b7d0c8e80e811daf2e4",
    "line" : 43,
    "diffHunk" : "@@ -1,1 +71,75 @@\t// TODO(phase1+) this we are missing args from the help text, there should be a way to tell cobra about it\n\tif !skipPreFlight {\n\t\tfmt.Println(\"Running pre-flight checks\")\n\t\terr := preflight.RunJoinNodeChecks()\n\t\tif err != nil {"
  },
  {
    "id" : "66f33502-c47e-47c1-a93d-001c3060c5ae",
    "prId" : 34341,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/34341#pullrequestreview-4112930",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a359c725-c8cd-4b4f-8c35-8d072f3e2678",
        "parentId" : null,
        "authorId" : "d37d9758-bdf5-4c23-a40e-a85099689a0c",
        "body" : "I thought the convention was that descriptions start with a capital letter...\n",
        "createdAt" : "2016-10-13T16:33:28Z",
        "updatedAt" : "2016-10-13T16:50:41Z",
        "lastEditedBy" : "d37d9758-bdf5-4c23-a40e-a85099689a0c",
        "tags" : [
        ]
      }
    ],
    "commit" : "4231c046dd6830ab5cc52b7d0c8e80e811daf2e4",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +61,65 @@\tcmd.PersistentFlags().BoolVar(\n\t\t&skipPreFlight, \"skip-preflight-checks\", false,\n\t\t\"skip preflight checks normally run before modifying the system\",\n\t)\n"
  },
  {
    "id" : "e94342cb-0b9a-4f6f-b3bf-9222fae2da8e",
    "prId" : 34341,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/34341#pullrequestreview-4112930",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b668cd58-240e-4ac7-9169-137e146b8c7c",
        "parentId" : null,
        "authorId" : "d37d9758-bdf5-4c23-a40e-a85099689a0c",
        "body" : "Ditto\n",
        "createdAt" : "2016-10-13T16:33:38Z",
        "updatedAt" : "2016-10-13T16:50:42Z",
        "lastEditedBy" : "d37d9758-bdf5-4c23-a40e-a85099689a0c",
        "tags" : [
        ]
      }
    ],
    "commit" : "4231c046dd6830ab5cc52b7d0c8e80e811daf2e4",
    "line" : 49,
    "diffHunk" : "@@ -1,1 +77,81 @@\t\t}\n\t} else {\n\t\tfmt.Println(\"Skipping pre-flight checks\")\n\t}\n"
  }
]