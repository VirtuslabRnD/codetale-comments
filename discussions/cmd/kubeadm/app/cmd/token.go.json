[
  {
    "id" : "a523b795-1bdb-4099-820d-5303035218e1",
    "prId" : 102310,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/102310#pullrequestreview-670190987",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "101734ee-96f4-455f-aad2-2ef0ffdfe1fe",
        "parentId" : null,
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "seems like a copy / paste mistake.\r\nthe Wrap line was copied from above, but there is no err to use in this \"else\" branch.",
        "createdAt" : "2021-05-27T13:35:33Z",
        "updatedAt" : "2021-05-27T13:36:00Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      }
    ],
    "commit" : "d98a83bb01b9cadc0bcfebf52bc16bf074be3a22",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +280,284 @@\t} else {\n\t\tif certificateKey != \"\" {\n\t\t\treturn errors.New(\"cannot use --certificate-key without --print-join-command\")\n\t\t}\n\t\tfmt.Fprintln(out, internalcfg.BootstrapTokens[0].Token.String())"
  },
  {
    "id" : "82f9b332-ebe7-4ee5-aef1-0eef3541789e",
    "prId" : 94727,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/94727#pullrequestreview-487728770",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d0632e68-0174-4cdc-b257-c2344930d0ab",
        "parentId" : null,
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "here we can assume if the token pattern is invalid, the token is invalid. so printing it here as part of the error can only be problematic if a good token is part of the message - e.g. `valid-tokenfoo`, where if `foo` is removed one can get the token.\r\n\r\nin any case this change is fine.\r\n",
        "createdAt" : "2020-09-14T13:01:38Z",
        "updatedAt" : "2020-09-14T13:01:38Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      }
    ],
    "commit" : "fbd62d55af6d3ed31cdaedc43d6f19ba613056ff",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +427,431 @@\t\t\tif err != nil {\n\t\t\t\treturn errors.Errorf(\"given token didn't match pattern %q or %q\",\n\t\t\t\t\tbootstrapapi.BootstrapTokenIDPattern, bootstrapapi.BootstrapTokenIDPattern)\n\t\t\t}\n\t\t\ttokenID = bts.ID"
  },
  {
    "id" : "0783c44c-f257-4901-a1aa-b15e1090bf9b",
    "prId" : 90105,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/90105#pullrequestreview-537889377",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b9ae943f-c369-4a23-b015-9567059c58b0",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "nit, keep import back up with the out-of-repo imports",
        "createdAt" : "2020-11-24T20:45:19Z",
        "updatedAt" : "2021-02-24T10:06:45Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "fd62f32125f78deb2e4c5c2dc636c4b9422cfc79",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +38,42 @@\tbootstrapapi \"k8s.io/cluster-bootstrap/token/api\"\n\tbootstraputil \"k8s.io/cluster-bootstrap/token/util\"\n\t\"k8s.io/klog/v2\"\n\tkubeadmapi \"k8s.io/kubernetes/cmd/kubeadm/app/apis/kubeadm\"\n\tkubeadmscheme \"k8s.io/kubernetes/cmd/kubeadm/app/apis/kubeadm/scheme\""
  },
  {
    "id" : "eb79f58a-790c-4056-ae68-e9c95f4a21e2",
    "prId" : 84591,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/84591#pullrequestreview-312701354",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a4884b1e-7038-4bb0-b3fd-ac321b6b66b8",
        "parentId" : null,
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "if --certificate-key is passed but not --print-join-command we should error out with:\r\n\"cannot use --certificate-key without --print-join-command\"",
        "createdAt" : "2019-11-06T19:52:41Z",
        "updatedAt" : "2019-11-07T20:28:07Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      }
    ],
    "commit" : "dea6d6491aa5fc6bd757a0dcd07248892a7c6483",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +259,263 @@\t// if --print-join-command was specified, print a machine-readable full `kubeadm join` command\n\t// otherwise, just print the token\n\tif printJoinCommand {\n\t\tskipTokenPrint := false\n\t\tif certificateKey != \"\" {"
  },
  {
    "id" : "f3f6b985-164a-44c7-8312-2590b0b3f0e1",
    "prId" : 84591,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/84591#pullrequestreview-312701939",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "293f63f9-364b-426a-a36a-a84ea2bb8e19",
        "parentId" : null,
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "possibly move/scope `skipCertificateKeyPrint := false` above this call?",
        "createdAt" : "2019-11-06T19:53:38Z",
        "updatedAt" : "2019-11-07T20:28:07Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      }
    ],
    "commit" : "dea6d6491aa5fc6bd757a0dcd07248892a7c6483",
    "line" : 43,
    "diffHunk" : "@@ -1,1 +263,267 @@\t\tif certificateKey != \"\" {\n\t\t\tskipCertificateKeyPrint := false\n\t\t\tjoinCommand, err := cmdutil.GetJoinControlPlaneCommand(kubeConfigFile, internalcfg.BootstrapTokens[0].Token.String(), certificateKey, skipTokenPrint, skipCertificateKeyPrint)\n\t\t\tif err != nil {\n\t\t\t\treturn errors.Wrap(err, \"failed to get join command\")"
  },
  {
    "id" : "14073162-ec7f-49f1-ae7b-92ef95e9e650",
    "prId" : 68341,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/68341#pullrequestreview-152987462",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "72d573d0-0836-4c62-9ebc-99648cfae5e5",
        "parentId" : null,
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "@riverzhang are you basically removing an extra empty line here because `fmt.Fprintln(w, humanFriendlyTokenOutput)` already adds one?",
        "createdAt" : "2018-09-06T13:56:07Z",
        "updatedAt" : "2018-09-06T13:56:07Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      },
      {
        "id" : "2b1b1530-579e-4baf-8a35-b6f42212ccc8",
        "parentId" : "72d573d0-0836-4c62-9ebc-99648cfae5e5",
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "never mind i missed the linked issue:\r\nhttps://github.com/kubernetes/kubeadm/issues/1094\r\n\r\nthanks\r\n/lgtm\r\n",
        "createdAt" : "2018-09-06T14:10:23Z",
        "updatedAt" : "2018-09-06T14:10:24Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      },
      {
        "id" : "e1e4abc6-058c-4a71-b874-f855e9a1283c",
        "parentId" : "72d573d0-0836-4c62-9ebc-99648cfae5e5",
        "authorId" : "265a1528-3e80-4b49-afe6-6e2e972974a5",
        "body" : "yeah. ",
        "createdAt" : "2018-09-06T15:25:44Z",
        "updatedAt" : "2018-09-06T15:25:45Z",
        "lastEditedBy" : "265a1528-3e80-4b49-afe6-6e2e972974a5",
        "tags" : [
        ]
      }
    ],
    "commit" : "acaa1108d045ad438309ff504f42f65a486a9f78",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +342,346 @@\t}\n\n\treturn fmt.Sprintf(\"%s\\t%s\\t%s\\t%s\\t%s\\t%s\", token.Token.String(), ttl, expires, usagesString, description, groupsString)\n}\n"
  },
  {
    "id" : "29f85617-6396-43da-b41b-495620e089d8",
    "prId" : 64408,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/64408#pullrequestreview-124032278",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b58f6109-5c93-4c00-9b8d-9f6859597635",
        "parentId" : null,
        "authorId" : "8a27151d-3530-4221-90e8-48b3a85cba37",
        "body" : "This function seems a good canditate for moving in `client-go`",
        "createdAt" : "2018-05-29T10:55:30Z",
        "updatedAt" : "2018-06-01T14:14:41Z",
        "lastEditedBy" : "8a27151d-3530-4221-90e8-48b3a85cba37",
        "tags" : [
        ]
      },
      {
        "id" : "d2acf633-8527-4428-a3e6-7e001d51c903",
        "parentId" : "b58f6109-5c93-4c00-9b8d-9f6859597635",
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "It is. But later.",
        "createdAt" : "2018-05-29T14:56:54Z",
        "updatedAt" : "2018-06-01T14:14:41Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      }
    ],
    "commit" : "d01a7be2acfdf43a3b12d1d4231145e1107c633a",
    "line" : 275,
    "diffHunk" : "@@ -1,1 +319,323 @@}\n\nfunc humanReadableBootstrapToken(token *kubeadmapi.BootstrapToken) string {\n\tdescription := token.Description\n\tif len(description) == 0 {"
  },
  {
    "id" : "ab01f3ce-1520-4279-8ece-66a8ec766581",
    "prId" : 62850,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/62850#pullrequestreview-113690854",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "95bb6190-e7b7-43b7-8fb1-8b79e6cbb702",
        "parentId" : null,
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "Most of this code exists in clientcmd.NewNonInteractiveDeferredLoadingClientConfig and should be leveraged using the client tooling.  ",
        "createdAt" : "2018-04-19T16:52:39Z",
        "updatedAt" : "2018-04-26T17:11:53Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      }
    ],
    "commit" : "d1f6e0bf3aaa74a82aa21ff17ecbce40c3c6f977",
    "line" : 55,
    "diffHunk" : "@@ -1,1 +389,393 @@}\n\nfunc findExistingKubeConfig(file string) string {\n\t// The user did provide a --kubeconfig flag. Respect that and threat it as an\n\t// explicit path without building a DefaultClientConfigLoadingRules object."
  },
  {
    "id" : "76accf2f-724a-4eac-b9ef-f551d5f4df5d",
    "prId" : 62850,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/62850#pullrequestreview-119556560",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e98c18c6-f881-4d3c-af6a-083e754ddb3a",
        "parentId" : null,
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "Could you put this in `constants.go`?",
        "createdAt" : "2018-05-11T19:38:55Z",
        "updatedAt" : "2018-05-11T19:43:23Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      }
    ],
    "commit" : "d1f6e0bf3aaa74a82aa21ff17ecbce40c3c6f977",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +52,56 @@)\n\nconst defaultKubeConfig = \"/etc/kubernetes/admin.conf\"\n\n// NewCmdToken returns cobra.Command for token management"
  },
  {
    "id" : "68e372d7-d522-4274-80e8-cef3a2484a5f",
    "prId" : 62850,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/62850#pullrequestreview-119556560",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1fd8dca0-c96a-4956-85a0-5ee1fa36eee0",
        "parentId" : null,
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "@neolit123 can you move this function to `cmd/kubeadm/app/cmd/util` please?\r\nWe have other places in kubeadm where it's used as a Kubernetes client tool, and we could/should leverage the same functionality to be consistent",
        "createdAt" : "2018-05-11T19:42:59Z",
        "updatedAt" : "2018-05-11T19:43:23Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      }
    ],
    "commit" : "d1f6e0bf3aaa74a82aa21ff17ecbce40c3c6f977",
    "line" : 58,
    "diffHunk" : "@@ -1,1 +392,396 @@\t// The user did provide a --kubeconfig flag. Respect that and threat it as an\n\t// explicit path without building a DefaultClientConfigLoadingRules object.\n\tif file != defaultKubeConfig {\n\t\treturn file\n\t}"
  },
  {
    "id" : "b2dccd1f-7dfa-43ac-b782-d2cdaeaad499",
    "prId" : 60059,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/60059#pullrequestreview-99269524",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "79a14ac3-17e7-45f5-909d-6d786685960a",
        "parentId" : null,
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "We shouldn't hardcode versions in prod code. How can we workaround this? Why the lookup is a problem here?",
        "createdAt" : "2018-02-26T10:56:02Z",
        "updatedAt" : "2018-02-26T10:56:02Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      },
      {
        "id" : "6c8d1258-1cae-4b0f-8dd6-3e730ac900a8",
        "parentId" : "79a14ac3-17e7-45f5-909d-6d786685960a",
        "authorId" : "8a27151d-3530-4221-90e8-48b3a85cba37",
        "body" : "The lookup access internet, and this is a problem in some environment.\r\n\r\nI agree that we should seek for a better solution, but being this already implemented in few other points in kubeadm, IMO we should accept this also here and open a new issue where discuss how to address this consistently across the codebase",
        "createdAt" : "2018-02-26T11:37:49Z",
        "updatedAt" : "2018-02-26T11:37:49Z",
        "lastEditedBy" : "8a27151d-3530-4221-90e8-48b3a85cba37",
        "tags" : [
        ]
      },
      {
        "id" : "4969415d-0e75-4287-9537-5c20d3e5dd37",
        "parentId" : "79a14ac3-17e7-45f5-909d-6d786685960a",
        "authorId" : "a09f2d48-fec0-4c0d-bd81-6de7378a6ebf",
        "body" : "IIUC, the call stack is `ConfigFileAndDefaultsToInternalConfig` --> `SetInitDynamicDefaults` --> `NormalizeKubernetesVersion` --> `KubernetesReleaseVersion`. If the kubernetes version is configured, `KubernetesReleaseVersion` will `normalizedBuildVersion` the specified version and return, otherwise it will `fetchFromURL` from the internet.",
        "createdAt" : "2018-02-26T11:45:25Z",
        "updatedAt" : "2018-02-26T11:45:26Z",
        "lastEditedBy" : "a09f2d48-fec0-4c0d-bd81-6de7378a6ebf",
        "tags" : [
        ]
      }
    ],
    "commit" : "e247752ef9c1026dbd3d3c561515736bd36be6a6",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +92,96 @@\t\t// KubernetesVersion is not used by bootstrap-token, but we set this explicitly to avoid\n\t\t// the lookup of the version from the internet when executing ConfigFileAndDefaultsToInternalConfig\n\t\tKubernetesVersion: \"v1.9.0\",\n\t}\n"
  },
  {
    "id" : "e7fd1a16-5d4b-458e-9ed9-04dbc1d7ed93",
    "prId" : 56185,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/56185#pullrequestreview-78513376",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3bb62558-6d9c-40bf-8182-d29b000ab929",
        "parentId" : null,
        "authorId" : "a09f2d48-fec0-4c0d-bd81-6de7378a6ebf",
        "body" : "Users may want to see `fmt.Fprintln(out, token)` in this case anyway.",
        "createdAt" : "2017-11-22T06:46:44Z",
        "updatedAt" : "2017-11-22T15:30:28Z",
        "lastEditedBy" : "a09f2d48-fec0-4c0d-bd81-6de7378a6ebf",
        "tags" : [
        ]
      },
      {
        "id" : "a0028116-1130-4cf8-894f-d2e0e16945bf",
        "parentId" : "3bb62558-6d9c-40bf-8182-d29b000ab929",
        "authorId" : "6682fc41-9e62-4c69-b891-a0be20e50c30",
        "body" : "My intention here is that this flag could be useful as part of an automated provisioning step where you might run something like `kubeadm token create --print-join-command >> worker_init.sh` to create an init script for your worker nodes. Having a second line with just the token that you have to filter out would be annoying in that case.\r\n\r\nThe token is still there in the join command so if you accidentally ran manually with `--print-join-command` you could still copy-paste just what you wanted.",
        "createdAt" : "2017-11-22T15:33:59Z",
        "updatedAt" : "2017-11-22T15:33:59Z",
        "lastEditedBy" : "6682fc41-9e62-4c69-b891-a0be20e50c30",
        "tags" : [
        ]
      },
      {
        "id" : "56f00cdc-6643-454d-b206-846e647e15f6",
        "parentId" : "3bb62558-6d9c-40bf-8182-d29b000ab929",
        "authorId" : "a09f2d48-fec0-4c0d-bd81-6de7378a6ebf",
        "body" : ">Having a second line with just the token that you have to filter out would be annoying in that case.\r\n\r\nI didn't meant a second line with just the token is needed here. I meant that when `if err != nil` is true, we'd better print an error to users and also print the token anyway. (It will return and ~~nothing~~ (UPDATE: no token) will be printed for users for now when `if err != nil` is true, right?) Feel free to correct me if I misunderstand here :)",
        "createdAt" : "2017-11-22T15:52:28Z",
        "updatedAt" : "2017-11-22T15:53:46Z",
        "lastEditedBy" : "a09f2d48-fec0-4c0d-bd81-6de7378a6ebf",
        "tags" : [
        ]
      },
      {
        "id" : "f02cea30-8c56-4cda-952c-2149982c31f4",
        "parentId" : "3bb62558-6d9c-40bf-8182-d29b000ab929",
        "authorId" : "a09f2d48-fec0-4c0d-bd81-6de7378a6ebf",
        "body" : "@fabriziopandini any ideas here?",
        "createdAt" : "2017-11-22T16:52:15Z",
        "updatedAt" : "2017-11-22T16:52:16Z",
        "lastEditedBy" : "a09f2d48-fec0-4c0d-bd81-6de7378a6ebf",
        "tags" : [
        ]
      }
    ],
    "commit" : "b4b275d255b6484b7bd081e69e24f4fd0b8e981b",
    "line" : 87,
    "diffHunk" : "@@ -1,1 +246,250 @@\tif printJoinCommand {\n\t\tjoinCommand, err := getJoinCommand(token, kubeConfigFile)\n\t\tif err != nil {\n\t\t\treturn fmt.Errorf(\"failed to get join command: %v\", err)\n\t\t}"
  },
  {
    "id" : "e6949e5b-6f34-4fc3-a8f4-334feedf9517",
    "prId" : 55377,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/55377#pullrequestreview-75396503",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7ae4c520-88cc-4e9f-a532-28fac0ea11cd",
        "parentId" : null,
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "While you're here and mocking with these funcs, could you add some valuable unit tests for the functionality?\r\n(might require splitting out some functionality into standalone funcs, but I don't mind)",
        "createdAt" : "2017-11-09T09:55:33Z",
        "updatedAt" : "2017-11-09T09:56:12Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      },
      {
        "id" : "298efcd9-1174-4eaa-a418-d2b5ac89e373",
        "parentId" : "7ae4c520-88cc-4e9f-a532-28fac0ea11cd",
        "authorId" : "a09f2d48-fec0-4c0d-bd81-6de7378a6ebf",
        "body" : "will address later :)",
        "createdAt" : "2017-11-09T10:01:47Z",
        "updatedAt" : "2017-11-09T10:01:47Z",
        "lastEditedBy" : "a09f2d48-fec0-4c0d-bd81-6de7378a6ebf",
        "tags" : [
        ]
      },
      {
        "id" : "68f240d7-8aa0-446b-b629-15e8e8e90d92",
        "parentId" : "7ae4c520-88cc-4e9f-a532-28fac0ea11cd",
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "In this or an other PR you mean?",
        "createdAt" : "2017-11-09T10:03:41Z",
        "updatedAt" : "2017-11-09T10:03:41Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      },
      {
        "id" : "0ac5507e-596b-4afa-bf70-8b35d1ee0721",
        "parentId" : "7ae4c520-88cc-4e9f-a532-28fac0ea11cd",
        "authorId" : "a09f2d48-fec0-4c0d-bd81-6de7378a6ebf",
        "body" : "I'll be off work today soon at my local time. So I'd like to send another PR to address what you are expecting. WDYT? Feel free to merge this one first if you think it's good to go :)",
        "createdAt" : "2017-11-09T10:48:56Z",
        "updatedAt" : "2017-11-09T10:48:56Z",
        "lastEditedBy" : "a09f2d48-fec0-4c0d-bd81-6de7378a6ebf",
        "tags" : [
        ]
      }
    ],
    "commit" : "a537cc2d725e1f74f05572fb3d33fc2f983ea896",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +209,213 @@\t// adding groups only makes sense for authentication\n\tusagesSet := sets.NewString(usages...)\n\tusageAuthentication := strings.TrimPrefix(bootstrapapi.BootstrapTokenUsageAuthentication, bootstrapapi.BootstrapTokenUsagePrefix)\n\tif len(extraGroups) > 0 && !usagesSet.Has(usageAuthentication) {\n\t\treturn fmt.Errorf(\"--groups cannot be specified unless --usages includes %q\", usageAuthentication)"
  },
  {
    "id" : "f0145d47-b7aa-481b-b2f0-db5df8c6235c",
    "prId" : 50933,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/50933#pullrequestreview-58813647",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2480c56d-db74-4281-acb8-86e3d4ba8d65",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "nit: column headers shouldn't have whitespace in the titles",
        "createdAt" : "2017-08-27T03:49:49Z",
        "updatedAt" : "2017-08-27T03:49:49Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "c7996a7236ee67c01babcfca3f4a91f88cca699e",
    "line" : 73,
    "diffHunk" : "@@ -1,1 +266,270 @@\n\tw := tabwriter.NewWriter(out, 10, 4, 3, ' ', 0)\n\tfmt.Fprintln(w, \"TOKEN\\tTTL\\tEXPIRES\\tUSAGES\\tDESCRIPTION\\tEXTRA GROUPS\")\n\tfor _, secret := range secrets.Items {\n\t\ttokenId := getSecretString(&secret, bootstrapapi.BootstrapTokenIDKey)"
  },
  {
    "id" : "5aaf08e5-22c9-4b65-840a-eb7467690531",
    "prId" : 50162,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/50162#pullrequestreview-54511361",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "065811c4-29d2-4952-a667-6d63ae7c7446",
        "parentId" : null,
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "fwiw I explicitly call it kubernetes.Interface vs. using the internal vernacular b/c it's easier for new folks to understand.  ",
        "createdAt" : "2017-08-04T18:32:22Z",
        "updatedAt" : "2017-08-04T18:34:38Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      },
      {
        "id" : "d16f0c8e-a243-4304-970d-841fd95e9061",
        "parentId" : "065811c4-29d2-4952-a667-6d63ae7c7446",
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "SGTM, we should probably rename a couple of other imports as well, like kubeadmconstants to just constants etc. However, not a priority for me rn",
        "createdAt" : "2017-08-05T08:48:43Z",
        "updatedAt" : "2017-08-05T08:48:43Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      }
    ],
    "commit" : "0734b63dc0e6dd2ef5185ffac0b9008d5d9ea4c0",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +194,198 @@\n// RunCreateToken generates a new bootstrap token and stores it as a secret on the server.\nfunc RunCreateToken(out io.Writer, client clientset.Interface, token string, tokenDuration time.Duration, usages []string, description string) error {\n\n\tif len(token) == 0 {"
  },
  {
    "id" : "54964093-784d-4c61-b401-71a1756db220",
    "prId" : 41729,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/41729#pullrequestreview-23047545",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "afe84d89-cab3-4246-b2ec-ccfda000e70e",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "Why top level and not under `kubectl`?  I'm assuming its because you anticipate them moving into the apiserver in a couple releases?",
        "createdAt" : "2017-02-21T13:23:06Z",
        "updatedAt" : "2017-02-23T05:28:37Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "ca66e668-3972-4f82-b15d-0a8c1016e6cc",
        "parentId" : "afe84d89-cab3-4246-b2ec-ccfda000e70e",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "They'll be used from both for a while, then gradually moved only to apiserver.",
        "createdAt" : "2017-02-21T15:08:43Z",
        "updatedAt" : "2017-02-23T05:28:37Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "3203e31c-57c0-4c25-b964-010496184f9a",
        "parentId" : "afe84d89-cab3-4246-b2ec-ccfda000e70e",
        "authorId" : "ad267631-96d1-4bad-b913-e8d6342e65a2",
        "body" : "Also we have the desire to eventually move `kubectl` out of the main repo, so I'd say top level makes sense.",
        "createdAt" : "2017-02-21T19:26:16Z",
        "updatedAt" : "2017-02-23T05:28:37Z",
        "lastEditedBy" : "ad267631-96d1-4bad-b913-e8d6342e65a2",
        "tags" : [
        ]
      }
    ],
    "commit" : "651188d68753d9379f19308f754842e354e789c8",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +38,42 @@\ttokenutil \"k8s.io/kubernetes/cmd/kubeadm/app/util/token\"\n\tbootstrapapi \"k8s.io/kubernetes/pkg/bootstrap/api\"\n\t\"k8s.io/kubernetes/pkg/printers\"\n)\n"
  },
  {
    "id" : "a2b71bff-abf6-450d-bfd3-b0da1523f548",
    "prId" : 41663,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/41663#pullrequestreview-23607991",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dae6f91e-e11e-41a7-ab0e-22fc65e6deb4",
        "parentId" : null,
        "authorId" : "b8f6188a-f26e-4203-bed3-a5d075997fdf",
        "body" : "are we moving away from having [foo] labels?",
        "createdAt" : "2017-02-17T22:09:27Z",
        "updatedAt" : "2017-02-27T10:56:26Z",
        "lastEditedBy" : "b8f6188a-f26e-4203-bed3-a5d075997fdf",
        "tags" : [
        ]
      },
      {
        "id" : "ae4daf45-956e-44f2-9716-c84ea8f09414",
        "parentId" : "dae6f91e-e11e-41a7-ab0e-22fc65e6deb4",
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "not generally, but it doesn't make sense to have it for only one line",
        "createdAt" : "2017-02-23T22:41:10Z",
        "updatedAt" : "2017-02-27T10:56:26Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      }
    ],
    "commit" : "796c3f97734bfe2eb803101ff01aee3bea23827a",
    "line" : 320,
    "diffHunk" : "@@ -1,1 +317,321 @@\t\treturn fmt.Errorf(\"failed to delete bootstrap token [%v]\", err)\n\t}\n\tfmt.Fprintf(out, \"bootstrap token with id %q deleted\\n\", tokenId)\n\treturn nil\n}"
  },
  {
    "id" : "f49cf4cb-0597-4f61-96ee-6b8907b6d97b",
    "prId" : 41663,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/41663#pullrequestreview-22607757",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "158a0210-83d6-407c-b229-d93d858a5d3d",
        "parentId" : null,
        "authorId" : "b8f6188a-f26e-4203-bed3-a5d075997fdf",
        "body" : "Why don't we return an error if the time parsing fails? It seems like this function never returns an error that isn't nil inside the iteration of Secret Items.",
        "createdAt" : "2017-02-17T22:14:18Z",
        "updatedAt" : "2017-02-27T10:56:26Z",
        "lastEditedBy" : "b8f6188a-f26e-4203-bed3-a5d075997fdf",
        "tags" : [
        ]
      },
      {
        "id" : "296905be-0c16-4658-8c1a-613827b0976d",
        "parentId" : "158a0210-83d6-407c-b229-d93d858a5d3d",
        "authorId" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "body" : "IMO, if one secret is malformed we want to be able to print out the rest of them.  If we return an error here then one bad secret spoils everything.",
        "createdAt" : "2017-02-17T22:43:09Z",
        "updatedAt" : "2017-02-27T10:56:26Z",
        "lastEditedBy" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "tags" : [
        ]
      }
    ],
    "commit" : "796c3f97734bfe2eb803101ff01aee3bea23827a",
    "line" : 259,
    "diffHunk" : "@@ -1,1 +270,274 @@\t\t\tif err != nil {\n\t\t\t\tfmt.Fprintf(errW, \"can't parse expiration time of bootstrap token %s\\n\", secret.Name)\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\tttl = printers.ShortHumanDuration(expireTime.Sub(time.Now()))"
  },
  {
    "id" : "06e4fadd-25b2-4195-b076-a4212e086617",
    "prId" : 41663,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/41663#pullrequestreview-23606201",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "639307de-67e0-44ca-8f52-6a1c9aae710c",
        "parentId" : null,
        "authorId" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "body" : "The `[token]` parameter is undefined in the help text.  I'd do `create [token-value]` and then change the description to document that \"The token-value is the actual token to write.  This should be a securely generated random token of the form [a-z0-9]{6}.[a-z0-9]{16}.\"",
        "createdAt" : "2017-02-23T22:34:37Z",
        "updatedAt" : "2017-02-27T10:56:26Z",
        "lastEditedBy" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "tags" : [
        ]
      }
    ],
    "commit" : "796c3f97734bfe2eb803101ff01aee3bea23827a",
    "line" : 63,
    "diffHunk" : "@@ -1,1 +91,95 @@\tvar description string\n\tcreateCmd := &cobra.Command{\n\t\tUse:   \"create [token]\",\n\t\tShort: \"Create bootstrap tokens on the server.\",\n\t\tLong: dedent.Dedent(`"
  },
  {
    "id" : "fb84a14f-6398-4ea1-9576-1592bf5a3c0f",
    "prId" : 41663,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/41663#pullrequestreview-23606201",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fe9f50f5-ad0c-4ac6-8a88-f67711398733",
        "parentId" : null,
        "authorId" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "body" : "nit+: We should skip/ignore/warn on tokens that don't match our naming requirement.",
        "createdAt" : "2017-02-23T22:41:48Z",
        "updatedAt" : "2017-02-27T10:56:26Z",
        "lastEditedBy" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "tags" : [
        ]
      }
    ],
    "commit" : "796c3f97734bfe2eb803101ff01aee3bea23827a",
    "line" : 222,
    "diffHunk" : "@@ -1,1 +241,245 @@\tw := tabwriter.NewWriter(out, 10, 4, 3, ' ', 0)\n\tfmt.Fprintln(w, \"TOKEN\\tTTL\\tEXPIRES\\tUSAGES\\tDESCRIPTION\")\n\tfor _, secret := range secrets.Items {\n\t\ttokenId := getSecretString(&secret, bootstrapapi.BootstrapTokenIDKey)\n\t\tif len(tokenId) == 0 {"
  },
  {
    "id" : "bfdc62b5-100f-45b8-96ac-8359bc238196",
    "prId" : 35805,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/35805#pullrequestreview-6897390",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1cd7faaa-805a-489f-84f3-c4ab5db59e52",
        "parentId" : null,
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "I guess we should have an option to specify the token that should be created.\nI think something like this is fine\n\n```\n# kubeadm create token abcdef.1234567890123456 --duration 8h\nabcdef.1234567890123456\n# kubeadm create token --duration 8h\nfedcba.6543210987654321\n```\n",
        "createdAt" : "2016-10-31T14:47:54Z",
        "updatedAt" : "2016-12-20T15:44:54Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      },
      {
        "id" : "2f64f4bf-13c8-4267-ba3e-964ab2fa6486",
        "parentId" : "1cd7faaa-805a-489f-84f3-c4ab5db59e52",
        "authorId" : "4815d47d-9abd-4b5d-8074-030539047224",
        "body" : "Right now it's in as kubeadm token create --token = MY.TOKEN. Let me know if you'd prefer the argless route.\n",
        "createdAt" : "2016-11-02T15:03:43Z",
        "updatedAt" : "2016-12-20T15:44:54Z",
        "lastEditedBy" : "4815d47d-9abd-4b5d-8074-030539047224",
        "tags" : [
        ]
      },
      {
        "id" : "526d99ce-efe7-4f2d-ac72-18a16d9ce793",
        "parentId" : "1cd7faaa-805a-489f-84f3-c4ab5db59e52",
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "I think I prefer the argless route, but we should defer that decision until you've proceeded more on this PR and until others are taking a look at it\n",
        "createdAt" : "2016-11-02T19:58:08Z",
        "updatedAt" : "2016-12-20T15:44:54Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      }
    ],
    "commit" : "bfe345dd86072fd5ed01381535643239b8c0e2e1",
    "line" : null,
    "diffHunk" : "@@ -1,1 +73,77 @@\t\t\"Shared secret used to secure cluster bootstrap. If none is provided, one will be generated for you.\",\n\t)\n\ttokenCmd.AddCommand(createCmd)\n\n\ttokenCmd.AddCommand(NewCmdTokenGenerate(out))"
  },
  {
    "id" : "20eed6a9-0f91-4969-887f-70b82d65f2e1",
    "prId" : 35805,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/35805#pullrequestreview-7315556",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d19a0319-7bf9-4f0a-bbfb-63a723fe2981",
        "parentId" : null,
        "authorId" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "body" : "`data[\"usage-bootstrap-signing\"] = []byte(\"true\")`\n",
        "createdAt" : "2016-11-02T20:48:35Z",
        "updatedAt" : "2016-12-20T15:44:54Z",
        "lastEditedBy" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "tags" : [
        ]
      },
      {
        "id" : "890b229f-77fa-4a9f-986e-6318c3952a51",
        "parentId" : "d19a0319-7bf9-4f0a-bbfb-63a723fe2981",
        "authorId" : "4815d47d-9abd-4b5d-8074-030539047224",
        "body" : "Added.\n",
        "createdAt" : "2016-11-05T14:31:02Z",
        "updatedAt" : "2016-12-20T15:44:54Z",
        "lastEditedBy" : "4815d47d-9abd-4b5d-8074-030539047224",
        "tags" : [
        ]
      }
    ],
    "commit" : "bfe345dd86072fd5ed01381535643239b8c0e2e1",
    "line" : null,
    "diffHunk" : "@@ -1,1 +158,162 @@\t\treturn err\n\t}\n\n\tfmt.Fprintln(out, kubeadmutil.BearerToken(d))\n\treturn nil"
  },
  {
    "id" : "b23d3718-d513-43d0-9e3a-a66cd3507085",
    "prId" : 35805,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/35805#pullrequestreview-7315536",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ad8f384e-5e17-4de9-9aa5-5b85b23c42dc",
        "parentId" : null,
        "authorId" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "body" : "Eventually folks are going to ask for ways to script this and we'll find ourselves reimplementing all of the output modes that `kubectl` has.  This is good for now but won't last.\n\nAlso -- most users see the key as `123456.1234567890123456`.  I'm not sure we need to break it down to id and token (I called that part \"secret\").  I'd just name the column \"token\" and have the dotted form.\n",
        "createdAt" : "2016-11-02T20:51:28Z",
        "updatedAt" : "2016-12-20T15:44:54Z",
        "lastEditedBy" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "tags" : [
        ]
      },
      {
        "id" : "22f7a13b-905f-466a-9f05-53397767a194",
        "parentId" : "ad8f384e-5e17-4de9-9aa5-5b85b23c42dc",
        "authorId" : "4815d47d-9abd-4b5d-8074-030539047224",
        "body" : "I implemented delete via the token ID, so my goal was to give the user two easy to copy parts, ID and full token which contains both parts with the '.'.\n\nAre you suggesting just columns \"token\" and \"expiration\"? If so I could perhaps have \"delete\" handle both forms, and automatically dissect it if given the whole token.\n",
        "createdAt" : "2016-11-03T17:05:42Z",
        "updatedAt" : "2016-12-20T15:44:54Z",
        "lastEditedBy" : "4815d47d-9abd-4b5d-8074-030539047224",
        "tags" : [
        ]
      },
      {
        "id" : "58121896-a062-4986-8dac-5cba340815ce",
        "parentId" : "ad8f384e-5e17-4de9-9aa5-5b85b23c42dc",
        "authorId" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "body" : "Ah -- gotcha.  So the columns are `ID`, `ID.Secret`, `TTL`.  I misread it before and thought the second column was just the secret.  This looks good to me.\n",
        "createdAt" : "2016-11-04T16:06:22Z",
        "updatedAt" : "2016-12-20T15:44:54Z",
        "lastEditedBy" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "tags" : [
        ]
      },
      {
        "id" : "1e3fa608-e649-4fd0-9796-8151b7e10f36",
        "parentId" : "ad8f384e-5e17-4de9-9aa5-5b85b23c42dc",
        "authorId" : "4815d47d-9abd-4b5d-8074-030539047224",
        "body" : "Sounds good, done.\n",
        "createdAt" : "2016-11-05T14:29:46Z",
        "updatedAt" : "2016-12-20T15:44:54Z",
        "lastEditedBy" : "4815d47d-9abd-4b5d-8074-030539047224",
        "tags" : [
        ]
      }
    ],
    "commit" : "bfe345dd86072fd5ed01381535643239b8c0e2e1",
    "line" : 191,
    "diffHunk" : "@@ -1,1 +215,219 @@\tw.Flush()\n\n\treturn nil\n}\n"
  },
  {
    "id" : "4a479e53-09d3-4829-8047-1a8b8b8545b4",
    "prId" : 35805,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/35805#pullrequestreview-6851793",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "91eb7ffa-9356-4eaf-8006-bb88d546d988",
        "parentId" : null,
        "authorId" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "body" : "You may get `IsNotFound` here and that is okay.  That means that it was deleted while the user was doing something else -- perhaps expired?  I'd output something like \"<cmd/token> bootstrap token already deleted: <tokenId>\".  This shouldn't return an error.\n",
        "createdAt" : "2016-11-02T20:55:01Z",
        "updatedAt" : "2016-12-20T15:44:54Z",
        "lastEditedBy" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "tags" : [
        ]
      }
    ],
    "commit" : "bfe345dd86072fd5ed01381535643239b8c0e2e1",
    "line" : null,
    "diffHunk" : "@@ -1,1 +226,230 @@\n\ttokenSecretName := fmt.Sprintf(\"%s%s\", kubeadmutil.BootstrapTokenSecretPrefix, tokenId)\n\tif err := client.Secrets(api.NamespaceSystem).Delete(tokenSecretName, nil); err != nil {\n\t\treturn fmt.Errorf(\"failed to delete bootstrap token [%v]\", err)\n\t}"
  },
  {
    "id" : "f8023c37-874b-4920-afc4-232957e25ad9",
    "prId" : 35144,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/35144#pullrequestreview-5905263",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6549c9d6-ee6c-48f2-8e05-fe76d9c14ffe",
        "parentId" : null,
        "authorId" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "body" : "I'm not sure this is worth it.  Other places where a sub-command isn't given we just print help and exit with 0.  (for example `kubeadm`).  In the case with a bad subcommand -- cobra will errror and give suggestions if you have a typo.\n\nI'd just leave RunE undefined.\n",
        "createdAt" : "2016-10-25T21:39:43Z",
        "updatedAt" : "2016-10-31T18:14:34Z",
        "lastEditedBy" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "tags" : [
        ]
      },
      {
        "id" : "4a58a345-45e9-454d-a0f7-f8f88199ef5f",
        "parentId" : "6549c9d6-ee6c-48f2-8e05-fe76d9c14ffe",
        "authorId" : "f9231906-76cd-4270-87d5-4b97ae98ebb4",
        "body" : "It's debatable what the exit code should be if you run `kubeadm token` (which doesn't do anything on its own, since it requires a subcommand), but it sounds like you agree with the fact that if you run `kubeadm token invalid_subcommand` that the exit code should be non-zero.\n\nAs it turns out, this isn't the case with cobra by default. If I comment out this RunE callback and run `kubeadm token invalid_subcommand`, it prints the usage and exits 0. That doesn't happen with invalid top-level commands (e.g. `kubeadm invalid_command` does exit 1), but seems unique to `token` because this is the first time in kubeadm we have a depth of 2 subcommands (`token generate` instead of just `init` or `join`). I'm not sure if this is the expected behavior or not of cobra, but in the case that you run `kubeadm token invalid_command`, it assumes you're actually running the command `kubeadm token` with the argument `invalid_command` (which could have been a filename), hence the need to insert the RunE callback to actually do something with the argument.\n\nTL;DR:\n\nExit codes without this RunE callback:\n\n```\n$ kubeadm token                    # exits 0\n$ kubeadm invalid_command          # exits 1\n$ kubeadm token invalid_command    # exits 0\n```\n\nExit codes _with_ this RunE callback:\n\n```\n$ kubeadm token                    # exits 1\n$ kubeadm invalid_command          # exits 1\n$ kubeadm token invalid_command    # exits 1\n```\n\n(but the callback can be easily tweaked to make `kubeadm token` exit 0)\n",
        "createdAt" : "2016-10-26T17:21:13Z",
        "updatedAt" : "2016-10-31T18:14:34Z",
        "lastEditedBy" : "f9231906-76cd-4270-87d5-4b97ae98ebb4",
        "tags" : [
        ]
      }
    ],
    "commit" : "cf6b6778dcd682013fa4403be21c2373e76be9dd",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +40,44 @@\t\t// We want to return an error code in these cases so that the\n\t\t// user knows that their command was invalid.\n\t\tRunE: func(cmd *cobra.Command, args []string) error {\n\t\t\tif len(args) < 1 {\n\t\t\t\treturn errors.New(\"missing subcommand; 'token' is not meant to be run on its own\")"
  }
]