[
  {
    "id" : "38ded7fd-e2fb-4a2c-886c-863f34a91774",
    "prId" : 101923,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/101923#pullrequestreview-661185048",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4e53c726-8058-44a4-9835-b1842a01a154",
        "parentId" : null,
        "authorId" : "8a27151d-3530-4221-90e8-48b3a85cba37",
        "body" : "This is one of the few cases in kubeadm where we are assuming that flags and config could be set at the same time for the same field and we are enforcing a precedence rule (flags over config).\r\nThis leads me to two considerations/questions:\r\n- Should me make this behavior more clear by documenting it both in the API and on the flags?\r\n- Are we sure this behaviour (flag over config) is consistent across all the flags that can co-exists with config?",
        "createdAt" : "2021-05-14T14:05:44Z",
        "updatedAt" : "2021-05-14T14:27:03Z",
        "lastEditedBy" : "8a27151d-3530-4221-90e8-48b3a85cba37",
        "tags" : [
        ]
      },
      {
        "id" : "e8114b16-ba05-45c1-908b-99d18aa95673",
        "parentId" : "4e53c726-8058-44a4-9835-b1842a01a154",
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "i'm hoping that long term we can remove flags like --skip-phases. and allow only usage from config.\r\n\r\n> Should me make this behavior more clear by documenting it both in the API and on the flags?\r\n\r\ni can document it in both places.\r\n\r\n> Are we sure this behaviour (flag over config) is consistent across all the flags that can co-exists with config?\r\n\r\nyes, one exception is --cri-socket, which for 1.22 we are disallowing as mixed with --config.\r\nhttps://github.com/kubernetes/kubernetes/pull/101600\r\n\r\nanother \"long term\" note here is that criSocket must be a field in KubeletConfiguration and kubeadm should not care about it; have no, crictl vs docker CLI, abstraction and so on.\r\n",
        "createdAt" : "2021-05-14T14:57:21Z",
        "updatedAt" : "2021-05-14T15:06:08Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      },
      {
        "id" : "6e704647-dc15-4ef3-a7d6-7f17c984a2b7",
        "parentId" : "4e53c726-8058-44a4-9835-b1842a01a154",
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "added more comments.",
        "createdAt" : "2021-05-17T16:41:52Z",
        "updatedAt" : "2021-05-17T16:41:52Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      }
    ],
    "commit" : "24a1f9d817ca5c2c5ec5785563457edac7b99f32",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +200,204 @@\t\tif len(initRunner.Options.SkipPhases) == 0 {\n\t\t\tinitRunner.Options.SkipPhases = data.cfg.SkipPhases\n\t\t}\n\t\treturn data, nil\n\t})"
  },
  {
    "id" : "e247d0c9-6b51-4a5c-aa7d-4cc0a7b6a8b5",
    "prId" : 99471,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/99471#pullrequestreview-600571460",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dc440156-3329-4f65-afc5-f4edfcc0c15e",
        "parentId" : null,
        "authorId" : "8a27151d-3530-4221-90e8-48b3a85cba37",
        "body" : "For sake of future memory, I will add a note:\r\n```\r\n // Currently this cannot be as part of Default() because the function is called for\r\n // upgrades too, which can break existing nodes after a kubelet restart.\r\n```",
        "createdAt" : "2021-03-01T10:13:01Z",
        "updatedAt" : "2021-03-02T16:39:49Z",
        "lastEditedBy" : "8a27151d-3530-4221-90e8-48b3a85cba37",
        "tags" : [
        ]
      }
    ],
    "commit" : "b6ff320507a6504352c2d670a9b6f8ae114e1847",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +342,346 @@\t// upgrades too, which can break existing nodes after a kubelet restart.\n\t// TODO: https://github.com/kubernetes/kubeadm/issues/2376\n\tcomponentconfigs.MutateCgroupDriver(&cfg.ClusterConfiguration)\n\n\tignorePreflightErrorsSet, err := validation.ValidateIgnorePreflightErrors(options.ignorePreflightErrors, cfg.NodeRegistration.IgnorePreflightErrors)"
  },
  {
    "id" : "022c4312-b145-44f7-a098-ded7af6fd02c",
    "prId" : 84118,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/84118#pullrequestreview-304233111",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "68e4ca67-a20c-4243-98a4-35cdfa232fce",
        "parentId" : null,
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "these changes above are auto-cleanup of whitespace.\r\n",
        "createdAt" : "2019-10-19T22:02:20Z",
        "updatedAt" : "2019-11-13T13:49:58Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      }
    ],
    "commit" : "431fd630ffd7af45262a60775d328a8b64fb7d9f",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +78,82 @@\n\t\t{{end}}{{end}}Then you can join any number of worker nodes by running the following on each as root:\n\n\t\t{{.joinWorkerCommand}}\n\t\t`)))"
  },
  {
    "id" : "286f36f8-1414-4c4d-befc-78e20f182c11",
    "prId" : 75499,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/75499#pullrequestreview-238286906",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "235d8dcf-7161-415d-9b5c-e9686a1d2ecf",
        "parentId" : null,
        "authorId" : "cccc7bed-95f4-42a9-83ef-6ba1a4dca7ec",
        "body" : "Ideally we should call this twice - once for command line supplied errors and once for config file supplied ones. This is because of the \"all\" keyword (it must not be specified in the config file).\r\nAfter that, we should have a couple of sets, that need merging. If the command line set has \"all\" in it, the resulting set should be consisting only of `{\"all\"}`. Otherwise it's a simple merge of both. Probably a helper func should do the trick.",
        "createdAt" : "2019-05-15T11:19:23Z",
        "updatedAt" : "2019-05-23T07:22:32Z",
        "lastEditedBy" : "cccc7bed-95f4-42a9-83ef-6ba1a4dca7ec",
        "tags" : [
        ]
      },
      {
        "id" : "c38ca31e-fbbb-4173-8ee1-38112c284a12",
        "parentId" : "235d8dcf-7161-415d-9b5c-e9686a1d2ecf",
        "authorId" : "659c7c1f-39ba-41a7-8331-fcc6b3b5f2fb",
        "body" : "@rosti  if config has something specific, and command line says `ignore all` we still need to fail. We shouldn't allow to mix 'all' with anything else. Let admin think twice (or more times) when admin tries to mask all errors.",
        "createdAt" : "2019-05-15T12:15:18Z",
        "updatedAt" : "2019-05-23T07:22:32Z",
        "lastEditedBy" : "659c7c1f-39ba-41a7-8331-fcc6b3b5f2fb",
        "tags" : [
        ]
      },
      {
        "id" : "b88db500-4faa-41bf-96ba-abfbc13fd11c",
        "parentId" : "235d8dcf-7161-415d-9b5c-e9686a1d2ecf",
        "authorId" : "1c1af4c1-5d58-48e6-862a-4fcdf81c9f70",
        "body" : "This indeed sounds like a desirable behaviour to me.",
        "createdAt" : "2019-05-16T09:45:54Z",
        "updatedAt" : "2019-05-23T07:22:32Z",
        "lastEditedBy" : "1c1af4c1-5d58-48e6-862a-4fcdf81c9f70",
        "tags" : [
        ]
      }
    ],
    "commit" : "7e2b4aa562ee45bd575f1078d6ed84f82aeb10aa",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +312,316 @@\t}\n\n\tignorePreflightErrorsSet, err := validation.ValidateIgnorePreflightErrors(options.ignorePreflightErrors, cfg.NodeRegistration.IgnorePreflightErrors)\n\tif err != nil {\n\t\treturn nil, err"
  },
  {
    "id" : "ac0e5cdf-55c6-432b-823c-e85e1192603f",
    "prId" : 75499,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/75499#pullrequestreview-239190276",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "284e09af-62e0-4f57-a19b-5d7f98d6d245",
        "parentId" : null,
        "authorId" : "659c7c1f-39ba-41a7-8331-fcc6b3b5f2fb",
        "body" : "Also nit: do we have usage of this somewhere? Otherwise we are loosing prestine state as we read from config file, isn't it?",
        "createdAt" : "2019-05-16T12:51:42Z",
        "updatedAt" : "2019-05-23T07:22:32Z",
        "lastEditedBy" : "659c7c1f-39ba-41a7-8331-fcc6b3b5f2fb",
        "tags" : [
        ]
      },
      {
        "id" : "bd6b8034-5cdd-4bdf-a8bb-f44869df2cc4",
        "parentId" : "284e09af-62e0-4f57-a19b-5d7f98d6d245",
        "authorId" : "1c1af4c1-5d58-48e6-862a-4fcdf81c9f70",
        "body" : "This is currently not used anywhere, but given the configuration object is passed around, and this field _could_ eventually be used elsewhere as a result, I thought doing the above might reduce the chance of a bug/inconsistent behaviour. I can remove it if you'd rather keep the configuration file's initial state. Let me know.",
        "createdAt" : "2019-05-18T08:38:10Z",
        "updatedAt" : "2019-05-23T07:22:32Z",
        "lastEditedBy" : "1c1af4c1-5d58-48e6-862a-4fcdf81c9f70",
        "tags" : [
        ]
      }
    ],
    "commit" : "7e2b4aa562ee45bd575f1078d6ed84f82aeb10aa",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +317,321 @@\t}\n\t// Also set the union of pre-flight errors to InitConfiguration, to provide a consistent view of the runtime configuration:\n\tcfg.NodeRegistration.IgnorePreflightErrors = ignorePreflightErrorsSet.List()\n\n\t// override node name and CRI socket from the command line options"
  },
  {
    "id" : "3cb8f3a9-8edf-42e1-95f1-5b9003faf823",
    "prId" : 75431,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/75431#pullrequestreview-215357987",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a8b782c8-2615-411e-a554-0e5f8f9ccf98",
        "parentId" : null,
        "authorId" : "67bc6085-2cd9-4674-9dbc-d2a266f478be",
        "body" : "The error handling here is a bit convoluted with the internal logic of `UsingExternalCA`, when no externalCA this error is never checked and we can't tell the difference between an unrelated error (cannot read a file because of permission errors for example) from errors that are related to x509 validations.",
        "createdAt" : "2019-03-17T12:41:22Z",
        "updatedAt" : "2019-03-17T12:42:27Z",
        "lastEditedBy" : "67bc6085-2cd9-4674-9dbc-d2a266f478be",
        "tags" : [
        ]
      },
      {
        "id" : "46ba634f-ee3e-4e13-a507-fcc5b080b4b8",
        "parentId" : "a8b782c8-2615-411e-a554-0e5f8f9ccf98",
        "authorId" : "8a27151d-3530-4221-90e8-48b3a85cba37",
        "body" : "yep that's true, but at least the error message that surfaces to the user can help to understand and fix the problem\r\n\r\nATM UsingExternalCA returns\r\n- false, with error in case there is no CA\r\n- false, nil in case  in case the user provided a CA but it is not external\r\n- true, with error in case the user provided an external CA but the signed certs are not valid\r\n- true, nil in case the user provided an external CA and the signed certs are valid\r\n\r\nAfter release this should be probably refactored",
        "createdAt" : "2019-03-17T14:21:50Z",
        "updatedAt" : "2019-03-17T14:21:50Z",
        "lastEditedBy" : "8a27151d-3530-4221-90e8-48b3a85cba37",
        "tags" : [
        ]
      }
    ],
    "commit" : "ff072aa639614551a23e9d843dab0a7243b3d919",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +334,338 @@\n\t// Checks if an external CA is provided by the user (when the CA Cert is present but the CA Key is not)\n\texternalCA, err := certsphase.UsingExternalCA(&cfg.ClusterConfiguration)\n\tif externalCA {\n\t\t// In case the certificates signed by CA (that should be provided by the user) are missing or invalid,"
  },
  {
    "id" : "1e228926-067b-4bac-8fee-a49f5fa14fbd",
    "prId" : 75431,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/75431#pullrequestreview-215738420",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f3ca8947-313c-4c4e-b7a4-0c3b9c4ee795",
        "parentId" : null,
        "authorId" : "cccc7bed-95f4-42a9-83ef-6ba1a4dca7ec",
        "body" : "This check probably needs to be moved to the upload certs phase itself.",
        "createdAt" : "2019-03-18T14:43:07Z",
        "updatedAt" : "2019-03-18T15:46:27Z",
        "lastEditedBy" : "cccc7bed-95f4-42a9-83ef-6ba1a4dca7ec",
        "tags" : [
        ]
      },
      {
        "id" : "fe9d7c95-465a-4a78-9f54-9247706ed38c",
        "parentId" : "f3ca8947-313c-4c4e-b7a4-0c3b9c4ee795",
        "authorId" : "8a27151d-3530-4221-90e8-48b3a85cba37",
        "body" : "@rosti I think that it is better to have the check here, because this blocks before the init process starts, while blocking in the upload certs phases will block the cluster creation in the middle ",
        "createdAt" : "2019-03-18T17:16:05Z",
        "updatedAt" : "2019-03-18T17:16:06Z",
        "lastEditedBy" : "8a27151d-3530-4221-90e8-48b3a85cba37",
        "tags" : [
        ]
      }
    ],
    "commit" : "ff072aa639614551a23e9d843dab0a7243b3d919",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +363,367 @@\t}\n\n\tif options.uploadCerts && (externalCA || externalFrontProxyCA) {\n\t\treturn nil, errors.New(\"can't use upload-certs with an external CA or an external front-proxy CA\")\n\t}"
  },
  {
    "id" : "43c7f66d-01aa-4c54-9f88-b99655a17aac",
    "prId" : 73907,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/73907#pullrequestreview-203309119",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f97bdd20-d006-4647-a479-6164b09926f0",
        "parentId" : null,
        "authorId" : "8a27151d-3530-4221-90e8-48b3a85cba37",
        "body" : "I think that these two flags should be allowed to be used with `--config` (rif `ValidateMixedArguments`)",
        "createdAt" : "2019-02-13T13:34:47Z",
        "updatedAt" : "2019-02-19T05:52:47Z",
        "lastEditedBy" : "8a27151d-3530-4221-90e8-48b3a85cba37",
        "tags" : [
        ]
      },
      {
        "id" : "03f73e27-b1de-4343-86a7-d0c991fc0998",
        "parentId" : "f97bdd20-d006-4647-a479-6164b09926f0",
        "authorId" : "6746e0cc-0c52-4344-889b-945a672c83e3",
        "body" : "+1",
        "createdAt" : "2019-02-13T14:58:12Z",
        "updatedAt" : "2019-02-19T05:52:47Z",
        "lastEditedBy" : "6746e0cc-0c52-4344-889b-945a672c83e3",
        "tags" : [
        ]
      },
      {
        "id" : "d12dc889-47f2-4cb9-a99d-c72d1a3d94ca",
        "parentId" : "f97bdd20-d006-4647-a479-6164b09926f0",
        "authorId" : "0de88c3b-1f1a-401f-9fd1-cd63adc590fd",
        "body" : "I'll update after https://github.com/kubernetes/kubernetes/pull/73998 get merged",
        "createdAt" : "2019-02-13T16:24:12Z",
        "updatedAt" : "2019-02-19T05:52:47Z",
        "lastEditedBy" : "0de88c3b-1f1a-401f-9fd1-cd63adc590fd",
        "tags" : [
        ]
      }
    ],
    "commit" : "79fd5f25a775d917189113a1da5c7c74a46db06f",
    "line" : 68,
    "diffHunk" : "@@ -1,1 +262,266 @@\t\t\"Don't apply any changes; just output what would be done.\",\n\t)\n\tflagSet.BoolVar(\n\t\tuploadCerts, options.UploadCerts, *uploadCerts,\n\t\t\"Upload certfificates to kubeadm-certs secret.\","
  },
  {
    "id" : "3af5509b-328e-4744-af28-f35bef9173ba",
    "prId" : 73907,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/73907#pullrequestreview-203310449",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ca5203a8-a704-4aff-9605-ae1922129d09",
        "parentId" : null,
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "We're nearing the size to break down into a struct or sub-struct to pass in. ",
        "createdAt" : "2019-02-13T14:56:36Z",
        "updatedAt" : "2019-02-19T05:52:47Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      },
      {
        "id" : "388fb45a-4956-4e89-95d4-0a90a08cf004",
        "parentId" : "ca5203a8-a704-4aff-9605-ae1922129d09",
        "authorId" : "0de88c3b-1f1a-401f-9fd1-cd63adc590fd",
        "body" : "Agreed, should I do it on this pr?",
        "createdAt" : "2019-02-13T16:26:22Z",
        "updatedAt" : "2019-02-19T05:52:47Z",
        "lastEditedBy" : "0de88c3b-1f1a-401f-9fd1-cd63adc590fd",
        "tags" : [
        ]
      }
    ],
    "commit" : "79fd5f25a775d917189113a1da5c7c74a46db06f",
    "line" : 48,
    "diffHunk" : "@@ -1,1 +244,248 @@// Note: All flags that are not bound to the cfg object should be allowed in cmd/kubeadm/app/apis/kubeadm/validation/validation.go\nfunc AddInitOtherFlags(\n\tflagSet *flag.FlagSet,\n\tcfgPath *string,\n\tskipTokenPrint, dryRun, uploadCerts *bool,"
  },
  {
    "id" : "fd0262b9-2af3-4956-8074-035d97c6676a",
    "prId" : 73907,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/73907#pullrequestreview-204827638",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b90ffc5b-4760-41a1-a73c-e3d36fef5ba0",
        "parentId" : null,
        "authorId" : "8a27151d-3530-4221-90e8-48b3a85cba37",
        "body" : "Please make init data fail if externalCA and uploadCerts",
        "createdAt" : "2019-02-18T14:13:44Z",
        "updatedAt" : "2019-02-19T05:52:47Z",
        "lastEditedBy" : "8a27151d-3530-4221-90e8-48b3a85cba37",
        "tags" : [
        ]
      },
      {
        "id" : "0188d592-b913-442a-af5b-05c4e294edfc",
        "parentId" : "b90ffc5b-4760-41a1-a73c-e3d36fef5ba0",
        "authorId" : "0de88c3b-1f1a-401f-9fd1-cd63adc590fd",
        "body" : "Thanks @fabriziopandini, I'll address this and finish the tests.",
        "createdAt" : "2019-02-18T14:56:05Z",
        "updatedAt" : "2019-02-19T05:52:47Z",
        "lastEditedBy" : "0de88c3b-1f1a-401f-9fd1-cd63adc590fd",
        "tags" : [
        ]
      }
    ],
    "commit" : "79fd5f25a775d917189113a1da5c7c74a46db06f",
    "line" : 97,
    "diffHunk" : "@@ -1,1 +370,374 @@\t\texternalCA:            externalCA,\n\t\toutputWriter:          out,\n\t\tuploadCerts:           options.uploadCerts,\n\t}, nil\n}"
  },
  {
    "id" : "bb8e2434-6b6c-485e-9da6-2253d43d4870",
    "prId" : 70795,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/70795#pullrequestreview-173652848",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "87a85e37-7737-483f-924b-516d60d55465",
        "parentId" : null,
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "initData already holds a method to get the kubeconfig path:\r\n`adminKubeConfigPath` -> `i.KubeConfigPath()`\r\nit can replace the code above :)\r\n```\r\n\t_, kubeConfigDir, _, _, err := getDirectoriesToUse(i.dryRun, i.dryRunDir, i.cfg.CertificatesDir)\r\n\tif err != nil {\r\n\t\treturn errors.Wrap(err, \"failed to get directories to use\")\r\n\t}\r\n \tadminKubeConfigPath := filepath.Join(kubeConfigDir, kubeadmconstants.AdminKubeConfigFileName)\r\n```",
        "createdAt" : "2018-11-10T03:37:04Z",
        "updatedAt" : "2018-11-13T10:56:01Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      },
      {
        "id" : "0bd041d7-de9c-44ed-b271-ef164815c799",
        "parentId" : "87a85e37-7737-483f-924b-516d60d55465",
        "authorId" : "1b5a940a-2f98-4b21-a0fe-2e30fb957eb5",
        "body" : "Updated",
        "createdAt" : "2018-11-10T06:49:33Z",
        "updatedAt" : "2018-11-13T10:56:01Z",
        "lastEditedBy" : "1b5a940a-2f98-4b21-a0fe-2e30fb957eb5",
        "tags" : [
        ]
      }
    ],
    "commit" : "5851fd556bdb29be1870bd1213d2daf05d7664e6",
    "line" : 65,
    "diffHunk" : "@@ -1,1 +564,568 @@\t// Prints the join command, multiple times in case the user has multiple tokens\n\tfor _, token := range i.Tokens() {\n\t\tif err := printJoinCommand(out, adminKubeConfigPath, token, i.skipTokenPrint); err != nil {\n\t\t\treturn errors.Wrap(err, \"failed to print join command\")\n\t\t}"
  },
  {
    "id" : "62be9657-33de-47c2-89ec-ed42f4b939dc",
    "prId" : 70795,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/70795#pullrequestreview-173662114",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d25860e1-f631-4feb-98aa-cc1bfc16ed23",
        "parentId" : null,
        "authorId" : "8a27151d-3530-4221-90e8-48b3a85cba37",
        "body" : "I'm expecting this PR to remove this func after rebasing when all the phases merge",
        "createdAt" : "2018-11-10T13:51:52Z",
        "updatedAt" : "2018-11-13T10:56:01Z",
        "lastEditedBy" : "8a27151d-3530-4221-90e8-48b3a85cba37",
        "tags" : [
        ]
      }
    ],
    "commit" : "5851fd556bdb29be1870bd1213d2daf05d7664e6",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +464,468 @@\n// runInit executes master node provisioning\nfunc runInit(i *initData, out io.Writer) error {\n\t// Get directories to write files to; can be faked if we're dry-running\n\tklog.V(1).Infof(\"[init] Getting certificates directory from configuration\")"
  },
  {
    "id" : "87309884-a2c7-416c-91d8-36870cb6877d",
    "prId" : 70795,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/70795#pullrequestreview-174329298",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "624f0bd2-2d2e-4d45-bd4e-7300bdccd691",
        "parentId" : null,
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "that was a bug indeed, thanks for fixing. @yuexiao-wang ",
        "createdAt" : "2018-11-13T12:05:29Z",
        "updatedAt" : "2018-11-13T12:05:30Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      },
      {
        "id" : "bc012e3c-355f-46d3-936e-f079c6548edd",
        "parentId" : "624f0bd2-2d2e-4d45-bd4e-7300bdccd691",
        "authorId" : "1b5a940a-2f98-4b21-a0fe-2e30fb957eb5",
        "body" : "thanks for your help",
        "createdAt" : "2018-11-13T12:07:43Z",
        "updatedAt" : "2018-11-13T12:07:43Z",
        "lastEditedBy" : "1b5a940a-2f98-4b21-a0fe-2e30fb957eb5",
        "tags" : [
        ]
      }
    ],
    "commit" : "5851fd556bdb29be1870bd1213d2daf05d7664e6",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +402,406 @@func (d initData) KubeConfigPath() string {\n\tif d.dryRun {\n\t\td.kubeconfigPath = filepath.Join(d.dryRunDir, kubeadmconstants.AdminKubeConfigFileName)\n\t}\n\treturn d.kubeconfigPath"
  },
  {
    "id" : "0b7abbc5-4eba-4568-9541-60413bd2ffc6",
    "prId" : 70727,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/70727#pullrequestreview-172624018",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d1e4d8b6-18e3-45e0-ad8c-9fc0d8758432",
        "parentId" : null,
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "we should move the printing of the join command outside of runInit().\r\nthis should happen right after the phase runner has executed all the phases.",
        "createdAt" : "2018-11-07T16:52:05Z",
        "updatedAt" : "2018-11-08T03:01:30Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      },
      {
        "id" : "1ba2883d-7da5-445c-aab7-fe76997781ff",
        "parentId" : "d1e4d8b6-18e3-45e0-ad8c-9fc0d8758432",
        "authorId" : "0de88c3b-1f1a-401f-9fd1-cd63adc590fd",
        "body" : "I should address this on this pr? I guess that we have another step in the tracker issue for this.",
        "createdAt" : "2018-11-07T17:31:38Z",
        "updatedAt" : "2018-11-08T03:01:30Z",
        "lastEditedBy" : "0de88c3b-1f1a-401f-9fd1-cd63adc590fd",
        "tags" : [
        ]
      },
      {
        "id" : "46f304ab-ef9b-44fb-a536-9a282bbc0111",
        "parentId" : "d1e4d8b6-18e3-45e0-ad8c-9fc0d8758432",
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "sorry, indeed it was a separate step.\r\nthe scope of this PR is good.\r\n",
        "createdAt" : "2018-11-07T18:05:09Z",
        "updatedAt" : "2018-11-08T03:01:30Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      }
    ],
    "commit" : "e743f0e4759510cf70dbb55929c2439a85d41f68",
    "line" : 75,
    "diffHunk" : "@@ -1,1 +534,538 @@\t// Prints the join command, multiple times in case the user has multiple tokens\n\tfor _, token := range i.Tokens() {\n\t\tif err := printJoinCommand(out, adminKubeConfigPath, token, i.skipTokenPrint); err != nil {\n\t\t\treturn errors.Wrap(err, \"failed to print join command\")\n\t\t}"
  },
  {
    "id" : "77040a02-216d-4a19-8688-38aada5694c2",
    "prId" : 70512,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/70512#pullrequestreview-171266857",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "69a55845-01e0-4572-9717-6aae23413f2a",
        "parentId" : null,
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "We should really be documenting here what phases are hidden and what are not. ",
        "createdAt" : "2018-11-01T23:57:16Z",
        "updatedAt" : "2018-11-02T20:19:13Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      },
      {
        "id" : "55b49a7b-1a5f-4c36-890f-d24f9e2a9a56",
        "parentId" : "69a55845-01e0-4572-9717-6aae23413f2a",
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "might be a good idea to just `// hidden` for code clarity next to these.\r\n\r\nin terms of k/website, i need to think about the whole reshuffle but it seems like cobra generates also the hidden phases which is something that we don't want in general.\r\n\r\ncan we consider that as a bug @fabriziopandini ?",
        "createdAt" : "2018-11-02T20:51:17Z",
        "updatedAt" : "2018-11-02T20:51:17Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      }
    ],
    "commit" : "30467aa34b366fb3a73993318fc7058c3ac7b9d5",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +169,173 @@\tinitRunner.AppendPhase(phases.NewControlPlanePhase())\n\tinitRunner.AppendPhase(phases.NewEtcdPhase())\n\tinitRunner.AppendPhase(phases.NewWaitControlPlanePhase())\n\t// TODO: add other phases to the runner.\n"
  },
  {
    "id" : "1f88f057-1ee3-42d0-acaa-41bb087313f8",
    "prId" : 70512,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/70512#pullrequestreview-171021188",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2e0ed00f-3582-4971-9bec-aec1ac2a0c81",
        "parentId" : null,
        "authorId" : "8a27151d-3530-4221-90e8-48b3a85cba37",
        "body" : "@neolit123 if I'm not wrong the waiter is used only by the wait-control-plane phase, so IMO this can be a local variable in the phase\r\n\r\nNB. the other usage of waiter is in self-hosting, that will go away soon",
        "createdAt" : "2018-11-02T09:21:18Z",
        "updatedAt" : "2018-11-02T13:48:40Z",
        "lastEditedBy" : "8a27151d-3530-4221-90e8-48b3a85cba37",
        "tags" : [
        ]
      }
    ],
    "commit" : "30467aa34b366fb3a73993318fc7058c3ac7b9d5",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +127,131 @@\texternalCA            bool\n\tclient                clientset.Interface\n\twaiter                apiclient.Waiter\n\toutputWriter          io.Writer\n}"
  },
  {
    "id" : "8440e924-ce3f-46d6-aeac-2a4f4b74944e",
    "prId" : 70480,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/70480#pullrequestreview-171547707",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9822caae-e543-432c-9a8f-7c9f003364b4",
        "parentId" : null,
        "authorId" : "3c1422a0-6358-4857-8f56-961979171514",
        "body" : "Why declaring this var, which is used only once?",
        "createdAt" : "2018-11-05T13:07:45Z",
        "updatedAt" : "2018-11-05T13:08:55Z",
        "lastEditedBy" : "3c1422a0-6358-4857-8f56-961979171514",
        "tags" : [
        ]
      },
      {
        "id" : "b9305bf9-fe1c-461e-8770-21ee23c088f2",
        "parentId" : "9822caae-e543-432c-9a8f-7c9f003364b4",
        "authorId" : "cccc7bed-95f4-42a9-83ef-6ba1a4dca7ec",
        "body" : "That's because the expression to take the timeout value is huge and best viewed on a single line. Also the call to `NewControlPlaneWaiter` on the following line continues to fit on screen.",
        "createdAt" : "2018-11-05T13:14:11Z",
        "updatedAt" : "2018-11-05T13:14:12Z",
        "lastEditedBy" : "cccc7bed-95f4-42a9-83ef-6ba1a4dca7ec",
        "tags" : [
        ]
      }
    ],
    "commit" : "eb6f7b1f17c87bb7e4d5cbba9ac6694e10492729",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +472,476 @@\n\t// TODO: NewControlPlaneWaiter should be converted to private after the self-hosting phase is removed.\n\ttimeout := i.cfg.ClusterConfiguration.APIServer.TimeoutForControlPlane.Duration\n\twaiter, err := phases.NewControlPlaneWaiter(i.dryRun, timeout, client, i.outputWriter)\n\tif err != nil {"
  },
  {
    "id" : "88abc7e1-3de0-4941-893e-6e1ac892a8b0",
    "prId" : 69622,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/69622#pullrequestreview-165292594",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "14892b37-dba8-415e-a84f-addf3cf55dbc",
        "parentId" : null,
        "authorId" : "cccc7bed-95f4-42a9-83ef-6ba1a4dca7ec",
        "body" : "It will be more clear if this is reduced to `AddInitOtherFlags(cmd.PersistentFlags(), &options)`.",
        "createdAt" : "2018-10-16T08:10:50Z",
        "updatedAt" : "2018-10-16T10:25:43Z",
        "lastEditedBy" : "cccc7bed-95f4-42a9-83ef-6ba1a4dca7ec",
        "tags" : [
        ]
      },
      {
        "id" : "85b71dfe-7b59-49b2-8fcc-4b96526547c6",
        "parentId" : "14892b37-dba8-415e-a84f-addf3cf55dbc",
        "authorId" : "3c1422a0-6358-4857-8f56-961979171514",
        "body" : "Agree with @rosti ",
        "createdAt" : "2018-10-16T14:10:41Z",
        "updatedAt" : "2018-10-16T14:12:22Z",
        "lastEditedBy" : "3c1422a0-6358-4857-8f56-961979171514",
        "tags" : [
        ]
      },
      {
        "id" : "d6716d25-7e88-44d8-81fd-d9da0e28cbc3",
        "parentId" : "14892b37-dba8-415e-a84f-addf3cf55dbc",
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "We can follow up on another PR.",
        "createdAt" : "2018-10-16T18:00:22Z",
        "updatedAt" : "2018-10-16T18:00:22Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      }
    ],
    "commit" : "68b4286ae0e5275e498d028ee38b996fbe78c123",
    "line" : 95,
    "diffHunk" : "@@ -1,1 +156,160 @@\t// adds command flags\n\tAddInitConfigFlags(cmd.PersistentFlags(), options.externalcfg, &options.featureGatesString)\n\tAddInitOtherFlags(cmd.PersistentFlags(), &options.cfgPath, &options.skipTokenPrint, &options.dryRun, &options.ignorePreflightErrors)\n\toptions.bto.AddTokenFlag(cmd.PersistentFlags())\n\toptions.bto.AddTTLFlag(cmd.PersistentFlags())"
  },
  {
    "id" : "56b8ebe3-53e2-4f7b-8610-d5ef3f57c5ca",
    "prId" : 64708,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/64708#pullrequestreview-125719064",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1b58191a-dc4a-466d-aeae-564802ada6ff",
        "parentId" : null,
        "authorId" : "bfaab188-fe7f-45cd-8e91-eeb4626a5f04",
        "body" : "This snuck in but I think it's a safe enough change.\r\n\r\nThe intent was that this only prints if the feature is enabled, but it was always printing.",
        "createdAt" : "2018-06-04T18:40:06Z",
        "updatedAt" : "2018-06-05T13:56:10Z",
        "lastEditedBy" : "bfaab188-fe7f-45cd-8e91-eeb4626a5f04",
        "tags" : [
        ]
      },
      {
        "id" : "c78c3ea7-be24-4377-82a2-25a88d673372",
        "parentId" : "1b58191a-dc4a-466d-aeae-564802ada6ff",
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "That's ok by me",
        "createdAt" : "2018-06-04T19:59:33Z",
        "updatedAt" : "2018-06-05T13:56:10Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      }
    ],
    "commit" : "0a4b6dfe93c0d2ca5ea81c39f61f69d088c85c07",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +484,488 @@\t// PHASE 7: Make the control plane self-hosted if feature gate is enabled\n\tif features.Enabled(i.cfg.FeatureGates, features.SelfHosting) {\n\t\tglog.V(1).Infof(\"[init] feature gate is enabled. Making control plane self-hosted\")\n\t\t// Temporary control plane is up, now we create our self hosted control\n\t\t// plane components and remove the static manifests:"
  },
  {
    "id" : "e7f1102e-0007-48eb-8c45-a1e637b979ab",
    "prId" : 64624,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/64624#pullrequestreview-126157297",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "287e0a36-8020-47eb-8d19-a4691ca130a0",
        "parentId" : null,
        "authorId" : "8a27151d-3530-4221-90e8-48b3a85cba37",
        "body" : "s/manifestDir/kubeletDir?",
        "createdAt" : "2018-06-05T21:15:08Z",
        "updatedAt" : "2018-06-06T20:41:29Z",
        "lastEditedBy" : "8a27151d-3530-4221-90e8-48b3a85cba37",
        "tags" : [
        ]
      },
      {
        "id" : "8bd32af0-04d6-4adc-ba7b-8bb4e3108c69",
        "parentId" : "287e0a36-8020-47eb-8d19-a4691ca130a0",
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "The wording could indeed be better here; dryRunDir would be a better word",
        "createdAt" : "2018-06-05T21:18:51Z",
        "updatedAt" : "2018-06-06T20:41:29Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      }
    ],
    "commit" : "7a87cf1c2849623d412d876484001255b8e7b68d",
    "line" : 114,
    "diffHunk" : "@@ -1,1 +584,588 @@\tkubeletConfigFiles := []string{kubeadmconstants.KubeletConfigurationFileName, kubeadmconstants.KubeletEnvFileName}\n\tfor _, filename := range kubeletConfigFiles {\n\t\trealPath := filepath.Join(manifestDir, filename)\n\t\toutputPath := filepath.Join(kubeadmconstants.KubeletRunDirectory, filename)\n\t\tfiles = append(files, dryrunutil.NewFileToPrint(realPath, outputPath))"
  },
  {
    "id" : "7d7a41b8-6681-4524-be19-410cd92bce62",
    "prId" : 64408,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/64408#pullrequestreview-124436727",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3bd2d40c-f9a1-444e-9197-4a796ccf4465",
        "parentId" : null,
        "authorId" : "8a27151d-3530-4221-90e8-48b3a85cba37",
        "body" : "What about changing `Add` methods in order to accept in input also `externalCfg`; doing this we could avoid to change following lines above:\r\n```go\r\nerr = bto.ApplyTo(externalcfg)\r\nkubeadmutil.CheckErr(err)\r\n```\r\nAnd help in keeping the flag logic isolated from the command logic",
        "createdAt" : "2018-05-29T10:53:10Z",
        "updatedAt" : "2018-06-01T14:14:41Z",
        "lastEditedBy" : "8a27151d-3530-4221-90e8-48b3a85cba37",
        "tags" : [
        ]
      },
      {
        "id" : "40785a6a-63cf-4840-b8e1-eeba070488ca",
        "parentId" : "3bd2d40c-f9a1-444e-9197-4a796ccf4465",
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "The ApplyTo is required as it can only run at runtime, when the command is executed.\r\nIt doesn't make sense to run this code at set-up time.",
        "createdAt" : "2018-05-30T14:38:41Z",
        "updatedAt" : "2018-06-01T14:14:41Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      }
    ],
    "commit" : "d01a7be2acfdf43a3b12d1d4231145e1107c633a",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +158,162 @@\tAddInitConfigFlags(cmd.PersistentFlags(), externalcfg, &featureGatesString)\n\tAddInitOtherFlags(cmd.PersistentFlags(), &cfgPath, &skipPreFlight, &skipTokenPrint, &dryRun, &ignorePreflightErrors)\n\tbto.AddTokenFlag(cmd.PersistentFlags())\n\tbto.AddTTLFlag(cmd.PersistentFlags())\n"
  },
  {
    "id" : "83f38352-e444-478c-998c-1dc8d5c2d86a",
    "prId" : 64096,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/64096#pullrequestreview-121806347",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f8bc4cfd-1678-4e23-85eb-38d9e7ed3208",
        "parentId" : null,
        "authorId" : "bfaab188-fe7f-45cd-8e91-eeb4626a5f04",
        "body" : "typo in 'miligate', I assume you mean 'mitigate'. Also drop the word 'in'\r\n\r\n",
        "createdAt" : "2018-05-21T13:58:33Z",
        "updatedAt" : "2018-05-21T14:16:54Z",
        "lastEditedBy" : "bfaab188-fe7f-45cd-8e91-eeb4626a5f04",
        "tags" : [
        ]
      }
    ],
    "commit" : "ddca1be88c2190ab3f9961e9ab2ede7dfad29e6c",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +97,101 @@\t\t\t\t- {{ .SchedulerImage }}\n\t\t\t\t- {{ .EtcdImage }} (only if no external etcd endpoints are configured)\n\t\t\t\t- You can check or miligate this in beforehand with \"kubeadm config images pull\" to make sure the images\n\t\t\t\t  are downloaded locally and cached.\n"
  },
  {
    "id" : "6eb923bd-c33d-4bac-941c-7101b80a8cd9",
    "prId" : 64096,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/64096#pullrequestreview-121808386",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f955be8c-e9ee-4e94-9ac3-28bebbaac18e",
        "parentId" : null,
        "authorId" : "cccc7bed-95f4-42a9-83ef-6ba1a4dca7ec",
        "body" : "typo? \"mitigate\"? :)",
        "createdAt" : "2018-05-21T14:04:11Z",
        "updatedAt" : "2018-05-21T14:12:04Z",
        "lastEditedBy" : "cccc7bed-95f4-42a9-83ef-6ba1a4dca7ec",
        "tags" : [
        ]
      }
    ],
    "commit" : "ddca1be88c2190ab3f9961e9ab2ede7dfad29e6c",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +97,101 @@\t\t\t\t- {{ .SchedulerImage }}\n\t\t\t\t- {{ .EtcdImage }} (only if no external etcd endpoints are configured)\n\t\t\t\t- You can check or miligate this in beforehand with \"kubeadm config images pull\" to make sure the images\n\t\t\t\t  are downloaded locally and cached.\n"
  },
  {
    "id" : "1cbbcded-bae9-4913-8bc5-3c8dc1650c20",
    "prId" : 59731,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/59731#pullrequestreview-96013558",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "61063166-ecc7-4a75-8b0b-d20a6ee3465d",
        "parentId" : null,
        "authorId" : "3c1422a0-6358-4857-8f56-961979171514",
        "body" : "How about `docker ps -a | grep kube | grep -v pause`?",
        "createdAt" : "2018-02-13T02:58:55Z",
        "updatedAt" : "2018-02-13T02:59:32Z",
        "lastEditedBy" : "3c1422a0-6358-4857-8f56-961979171514",
        "tags" : [
        ]
      }
    ],
    "commit" : "d8eb6c1c73096cc4e217552d08dcc00a5a9e827b",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +108,112 @@\t\tall docker containers that have been started (including ones that have crashed and exited) by running the\n\t\tfollowing commands:\n\t\t\t- 'docker ps -a'\n\t\t\n\t\tOnce you have that list, you can inspect the logs for any pod with:"
  },
  {
    "id" : "65d0edfc-3544-4564-9c45-a533de60454a",
    "prId" : 59731,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/59731#pullrequestreview-119517427",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b7102615-bfa4-47de-87eb-2bf24adba493",
        "parentId" : null,
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "suggest: \r\n```\r\nAdditionally, a control plane component may have crashed or exited when started by the container runtime. To troubleshoot, list all containers using your preferred container runtimes CLI, e.g. docker.\r\nHere is one example how you may list all Kubernetes containers running in docker:\r\n     - `docker ps -a | grep kube | grep -v pause`\r\n     - Once you have found the failing container, you can inspect its logs with\r\n     - `docker logs CONTAINERID`\r\n```",
        "createdAt" : "2018-05-11T17:33:10Z",
        "updatedAt" : "2018-05-11T17:34:03Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      }
    ],
    "commit" : "d8eb6c1c73096cc4e217552d08dcc00a5a9e827b",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +105,109 @@\t\t\t- 'journalctl -xeu kubelet'\n\t\t\n\t\tAdditionally a control plane component may not have come up in docker. If that's the case, you can enumerate \n\t\tall docker containers that have been started (including ones that have crashed and exited) by running the\n\t\tfollowing commands:"
  },
  {
    "id" : "34cd909b-12d9-4c3a-9df2-7e315ec6dc2f",
    "prId" : 59067,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/59067#pullrequestreview-95256679",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3674a538-7d9c-4fb1-ae3d-51dc0a2c20c2",
        "parentId" : null,
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "@kubernetes/sig-auth-pr-reviews - is there a mechanism to verify that the audit policy is sane?",
        "createdAt" : "2018-02-08T00:20:55Z",
        "updatedAt" : "2018-02-09T21:44:44Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      },
      {
        "id" : "01ac7e3e-2041-43f9-a4e0-f604a2651cbd",
        "parentId" : "3674a538-7d9c-4fb1-ae3d-51dc0a2c20c2",
        "authorId" : "bfaab188-fe7f-45cd-8e91-eeb4626a5f04",
        "body" : "I was thinking try to serialize it into a Policy type and see if it was valid, that would probably catch a lot of the cases",
        "createdAt" : "2018-02-08T22:28:24Z",
        "updatedAt" : "2018-02-09T21:44:45Z",
        "lastEditedBy" : "bfaab188-fe7f-45cd-8e91-eeb4626a5f04",
        "tags" : [
        ]
      }
    ],
    "commit" : "ed769174bbf65043e7a8cfc2f7e98627b92d9513",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +324,328 @@\t\t// Setup the AuditPolicy (either it was passed in and exists or it wasn't passed in and generate a default policy)\n\t\tif i.cfg.AuditPolicyConfiguration.Path != \"\" {\n\t\t\t// TODO(chuckha) ensure passed in audit policy is valid so users don't have to find the error in the api server log.\n\t\t\tif _, err := os.Stat(i.cfg.AuditPolicyConfiguration.Path); err != nil {\n\t\t\t\treturn fmt.Errorf(\"error getting file info for audit policy file %q [%v]\", i.cfg.AuditPolicyConfiguration.Path, err)"
  },
  {
    "id" : "742d910a-72e4-484b-a9de-b92a18ca22a7",
    "prId" : 59057,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/59057#pullrequestreview-94578677",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b306baec-d2c8-4928-af18-303783d33354",
        "parentId" : null,
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "@luxas I'd like us to make a policy on what is in<>out for cmdline flag additions.  ",
        "createdAt" : "2018-02-07T02:53:57Z",
        "updatedAt" : "2018-02-13T20:19:01Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      }
    ],
    "commit" : "2c956cf19eb9d5e5d3758628d971f2f5a4f4539a",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +191,195 @@\t\t\"The duration before the bootstrap token is automatically deleted. If set to '0', the token will never expire.\",\n\t)\n\tflagSet.StringVar(\n\t\t&cfg.CRISocket, \"cri-socket\", cfg.CRISocket,\n\t\t`Specify the CRI socket to connect to.`,"
  },
  {
    "id" : "3a036fc5-892b-445d-ba22-5e75862c7311",
    "prId" : 58080,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/58080#pullrequestreview-88771099",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5bf6bb47-56c1-440b-ae59-60e86dc70efa",
        "parentId" : null,
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "Do we need this now, could we push for component config in order to resolve this in the long-term?  ",
        "createdAt" : "2018-01-12T19:49:13Z",
        "updatedAt" : "2018-01-19T12:40:56Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      },
      {
        "id" : "35b55d70-219e-446f-820c-930ffb7a6e2d",
        "parentId" : "5bf6bb47-56c1-440b-ae59-60e86dc70efa",
        "authorId" : "d37d9758-bdf5-4c23-a40e-a85099689a0c",
        "body" : "I also realised that this would be the best fit for component config, but in the mean time we could add this to phases command.",
        "createdAt" : "2018-01-15T10:17:25Z",
        "updatedAt" : "2018-01-19T12:40:56Z",
        "lastEditedBy" : "d37d9758-bdf5-4c23-a40e-a85099689a0c",
        "tags" : [
        ]
      }
    ],
    "commit" : "72376f26ef9aa530f8f1c49c08e29e3757bece61",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +195,199 @@\t\t\"Options are:\\n\"+strings.Join(features.KnownFeatures(&features.InitFeatureGates), \"\\n\"))\n\n\tflagSet.Var(utilflag.NewMapStringString(&cfg.APIServerExtraArgs), \"apiserver-extra-args\", \"A set of extra flags to pass to the API Server or override default ones in form of <flagname>=<value>\")\n\tflagSet.Var(utilflag.NewMapStringString(&cfg.ControllerManagerExtraArgs), \"controller-manager-extra-args\", \"A set of extra flags to pass to the Controller Manager or override default ones in form of <flagname>=<value>\")\n\tflagSet.Var(utilflag.NewMapStringString(&cfg.SchedulerExtraArgs), \"scheduler-extra-args\", \"A set of extra flags to pass to the Scheduler or override default ones in form of <flagname>=<value>\")"
  },
  {
    "id" : "71c2b370-923a-4f13-b76d-95fd9195c1e1",
    "prId" : 56072,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/56072#pullrequestreview-78287454",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "30819cfe-4b56-4907-b08c-ec2b82d5068c",
        "parentId" : null,
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "again ignore-checks-errors is difficult to read and rationalize. ",
        "createdAt" : "2017-11-22T00:42:15Z",
        "updatedAt" : "2017-11-22T00:45:02Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      }
    ],
    "commit" : "e42eb28500e2014e7abb7a7bb275f1917db87be7",
    "line" : 48,
    "diffHunk" : "@@ -1,1 +202,206 @@\t)\n\tflagSet.StringSliceVar(\n\t\tignoreChecksErrors, \"ignore-checks-errors\", *ignoreChecksErrors,\n\t\t\"A list of checks whose errors will be shown as warnings. Example: 'IsPrivilegedUser,Swap'. Value 'all' ignores errors from all checks.\",\n\t)"
  },
  {
    "id" : "98cdaadd-91f4-46e5-a053-46b5dac81fe8",
    "prId" : 55479,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/55479#pullrequestreview-88827538",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5b06e3a2-5502-44cd-b3c2-53777069dde3",
        "parentId" : null,
        "authorId" : "3c1422a0-6358-4857-8f56-961979171514",
        "body" : "Should add a `BoolVar` flag `no-taint-master` to `AddInitConfigFlags`.\r\nIf not, `cfg.NoTaintMaster` will always be false and cannot be override by parsing arguments.",
        "createdAt" : "2018-01-14T09:51:13Z",
        "updatedAt" : "2018-02-12T17:14:37Z",
        "lastEditedBy" : "3c1422a0-6358-4857-8f56-961979171514",
        "tags" : [
        ]
      },
      {
        "id" : "8576a48a-7998-499d-b483-8b02b51cc0f5",
        "parentId" : "5b06e3a2-5502-44cd-b3c2-53777069dde3",
        "authorId" : "83a30e06-2ee9-4906-aa9a-794ee0ebda00",
        "body" : "`cfg.NoTaintMaster` can be set in the config file. For testing I have `/etc/kubeadm/kubeadm.yaml` containing:\r\n```yaml\r\napiVersion: kubeadm.k8s.io/v1alpha1\r\nkind: MasterConfiguration\r\nkubernetesVersion: v1.9.1\r\nnoTaintMaster: true\r\n```\r\nand am running `kubeadm init --config /etc/kubeadm/kubeadm.yaml`.\r\n\r\nMy understanding was that the config file mechanism was the future and the CLI variants were deprecated, perhaps I understood wrongly? I'll add the lines to `AddInitConfigFlags`, it looks like it will be pretty straightforward.",
        "createdAt" : "2018-01-15T11:19:10Z",
        "updatedAt" : "2018-02-12T17:14:37Z",
        "lastEditedBy" : "83a30e06-2ee9-4906-aa9a-794ee0ebda00",
        "tags" : [
        ]
      },
      {
        "id" : "a43098cc-3c57-4c74-a635-cf44eda31113",
        "parentId" : "5b06e3a2-5502-44cd-b3c2-53777069dde3",
        "authorId" : "3c1422a0-6358-4857-8f56-961979171514",
        "body" : "> My understanding was that the config file mechanism was the future and the CLI variants were deprecated\r\n\r\nI agree. But for now, we still use arguments. @luxas WDYT?",
        "createdAt" : "2018-01-15T13:58:38Z",
        "updatedAt" : "2018-02-12T17:14:37Z",
        "lastEditedBy" : "3c1422a0-6358-4857-8f56-961979171514",
        "tags" : [
        ]
      }
    ],
    "commit" : "a4e00ff3d8b704871e83bbd0c15dbb310810d06f",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +389,393 @@\n\t// PHASE 4: Mark the master with the right label/taint\n\tif err := markmasterphase.MarkMaster(client, i.cfg.NodeName, !i.cfg.NoTaintMaster); err != nil {\n\t\treturn fmt.Errorf(\"error marking master: %v\", err)\n\t}"
  },
  {
    "id" : "8c9a8609-d033-490e-8107-6484e13b3ddf",
    "prId" : 53325,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/53325#pullrequestreview-66818446",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8b943b89-1a84-4a2e-b192-f7bd938e6441",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "this should wait for #53338 to be approved, and then #53252 and #53338 should be picked together (`hack/cherry-pick.sh upstream/release-1.8 53252 53338`), since we don't want one merging without the other, right?",
        "createdAt" : "2017-10-03T16:26:23Z",
        "updatedAt" : "2017-10-03T16:26:23Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "62b0cde3-ef75-46c5-8bfe-e870bb99ed81",
        "parentId" : "8b943b89-1a84-4a2e-b192-f7bd938e6441",
        "authorId" : "659c7c1f-39ba-41a7-8331-fcc6b3b5f2fb",
        "body" : "No. #53338 is independent with certificate rotation issue. #53338 is just about 1.7.x -> 1.7.x upgrades with 1.8.0 kubeadm.",
        "createdAt" : "2017-10-03T16:36:18Z",
        "updatedAt" : "2017-10-03T16:36:18Z",
        "lastEditedBy" : "659c7c1f-39ba-41a7-8331-fcc6b3b5f2fb",
        "tags" : [
        ]
      }
    ],
    "commit" : "987fea7554923b38756aef71128e6e0d9451ce5e",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +389,393 @@\n\t// Create/update RBAC rules that makes the nodes to rotate certificates and get their CSRs approved automatically\n\tif err := nodebootstraptokenphase.AutoApproveNodeCertificateRotation(client, k8sVersion); err != nil {\n\t\treturn err\n\t}"
  },
  {
    "id" : "96108645-3174-46af-bd14-8721b952277f",
    "prId" : 51369,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/51369#pullrequestreview-58831930",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9dd7888b-04d5-4cb3-9435-c05fd30be55d",
        "parentId" : null,
        "authorId" : "6682fc41-9e62-4c69-b891-a0be20e50c30",
        "body" : "Nit: maybe `This error is likely caused by one of these problems:`?",
        "createdAt" : "2017-08-27T21:18:07Z",
        "updatedAt" : "2017-09-03T15:03:03Z",
        "lastEditedBy" : "6682fc41-9e62-4c69-b891-a0be20e50c30",
        "tags" : [
        ]
      }
    ],
    "commit" : "92c5997b8ea910fa27925443d4f9fd6420e0c889",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +88,92 @@\t\t\t{{ .Error }}\n\n\t\tThis error is likely caused by that:\n\t\t\t- The kubelet is not running\n\t\t\t- The kubelet is unhealthy due to a misconfiguration of the node in some way (required cgroups disabled)"
  },
  {
    "id" : "110b19ef-9f3c-48af-84d3-d811ccbe5a38",
    "prId" : 51369,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/51369#pullrequestreview-60151953",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ab52b377-730a-4bfe-9853-e05d09930365",
        "parentId" : null,
        "authorId" : "6682fc41-9e62-4c69-b891-a0be20e50c30",
        "body" : "Is it okay to assume the port number here? Isn't it configurable?",
        "createdAt" : "2017-08-27T21:24:35Z",
        "updatedAt" : "2017-09-03T15:03:03Z",
        "lastEditedBy" : "6682fc41-9e62-4c69-b891-a0be20e50c30",
        "tags" : [
        ]
      },
      {
        "id" : "78fa29a0-dfce-4691-a3ad-f2372169b509",
        "parentId" : "ab52b377-730a-4bfe-9853-e05d09930365",
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "I think it's ok to assume that; it's the standard for the kubelet readonly port. If you change that manually you will way larger problems :)",
        "createdAt" : "2017-09-01T14:31:40Z",
        "updatedAt" : "2017-09-03T15:03:03Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      }
    ],
    "commit" : "92c5997b8ea910fa27925443d4f9fd6420e0c889",
    "line" : 81,
    "diffHunk" : "@@ -1,1 +515,519 @@\tgo func(errC chan error, waiter apiclient.Waiter) {\n\t\t// This goroutine can only make kubeadm init fail. If this check succeeds, it won't do anything special\n\t\tif err := waiter.WaitForHealthyKubelet(40*time.Second, \"http://localhost:10255/healthz\"); err != nil {\n\t\t\terrC <- err\n\t\t}"
  },
  {
    "id" : "76835ca7-d0a2-494d-a9f2-792946774702",
    "prId" : 51369,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/51369#pullrequestreview-72666242",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1b51315d-5688-48f2-9b79-454b877ffeb0",
        "parentId" : null,
        "authorId" : "38ca4f80-c365-4775-8981-1e56b713b07b",
        "body" : "Shouldn't this be based on `--skip-preflight-checks`, if this flag is set, we shouldn't check the status of kubelet, if not it makes sense to check the status.",
        "createdAt" : "2017-10-28T05:37:09Z",
        "updatedAt" : "2017-10-28T05:37:09Z",
        "lastEditedBy" : "38ca4f80-c365-4775-8981-1e56b713b07b",
        "tags" : [
        ]
      },
      {
        "id" : "ac8d07a5-fbfc-4d44-b649-9a0e2bb4d037",
        "parentId" : "1b51315d-5688-48f2-9b79-454b877ffeb0",
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "It's a hard line to balance.. I'd prefer to have this as-is although there is a small change it will timeout before all the images have pulled.",
        "createdAt" : "2017-10-28T08:03:43Z",
        "updatedAt" : "2017-10-28T08:03:43Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      },
      {
        "id" : "48bcf82f-9b3a-47ca-92ec-50dd2bf96dd8",
        "parentId" : "1b51315d-5688-48f2-9b79-454b877ffeb0",
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "If you want to discuss this, please open a new issue in kubernetes/kubeadm though",
        "createdAt" : "2017-10-28T08:04:04Z",
        "updatedAt" : "2017-10-28T08:04:04Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      }
    ],
    "commit" : "92c5997b8ea910fa27925443d4f9fd6420e0c889",
    "line" : 79,
    "diffHunk" : "@@ -1,1 +513,517 @@\tfmt.Println(\"[init] This often takes around a minute; or longer if the control plane images have to be pulled.\")\n\n\tgo func(errC chan error, waiter apiclient.Waiter) {\n\t\t// This goroutine can only make kubeadm init fail. If this check succeeds, it won't do anything special\n\t\tif err := waiter.WaitForHealthyKubelet(40*time.Second, \"http://localhost:10255/healthz\"); err != nil {"
  },
  {
    "id" : "29c48e4e-8b79-4c7b-8a29-72fabfe5eda3",
    "prId" : 51363,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/51363#pullrequestreview-58779542",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "eabc941a-2ac4-48d4-be16-7665edb735ec",
        "parentId" : null,
        "authorId" : "f9231906-76cd-4270-87d5-4b97ae98ebb4",
        "body" : "This seems fine, but is there a reason we don't want this to occur even before MarkMaster?",
        "createdAt" : "2017-08-25T20:44:56Z",
        "updatedAt" : "2017-08-25T22:50:32Z",
        "lastEditedBy" : "f9231906-76cd-4270-87d5-4b97ae98ebb4",
        "tags" : [
        ]
      },
      {
        "id" : "08141d20-0574-4e0d-9efa-2af113fd5c55",
        "parentId" : "eabc941a-2ac4-48d4-be16-7665edb735ec",
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "It feels much safer to wait for the kubelet to register properly before attempting to put things into the API.\r\nI don't think there is gonna be something that MarkMaster needs from the config anyway (and I can live with requiring the phase user to pass that in such a case (only the master name is required now)\r\n\r\nSounds reasonable so this can be lgtm'd?",
        "createdAt" : "2017-08-25T21:15:42Z",
        "updatedAt" : "2017-08-25T22:50:32Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      },
      {
        "id" : "379e69d7-b69a-43b6-8f43-6072e129f122",
        "parentId" : "eabc941a-2ac4-48d4-be16-7665edb735ec",
        "authorId" : "f9231906-76cd-4270-87d5-4b97ae98ebb4",
        "body" : "> It feels much safer to wait for the kubelet to register properly before attempting to put things into the API.\r\n\r\nHonest question -- why?\r\n\r\nBut this does answer the crux of my question, which is that we don't actually care about the master being properly marked before we upload the configuration, we're actually just relying on the fact that MarkMaster will wait until the master kubelet is registered. That was the part that was unclear to me, since the comment here claims this is being done \"right in the beginning of cluster initialization\" but actually happens second. I think that's worth making clear in the comment.",
        "createdAt" : "2017-08-25T21:48:48Z",
        "updatedAt" : "2017-08-25T22:50:32Z",
        "lastEditedBy" : "f9231906-76cd-4270-87d5-4b97ae98ebb4",
        "tags" : [
        ]
      },
      {
        "id" : "7aaa5a00-842d-4fc0-8c99-df02283662f7",
        "parentId" : "eabc941a-2ac4-48d4-be16-7665edb735ec",
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "fair enough; you've convinced me :smile:\r\nupdated to make it the first thing _for real_",
        "createdAt" : "2017-08-25T22:49:07Z",
        "updatedAt" : "2017-08-25T22:50:32Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      }
    ],
    "commit" : "b1fb289f0fafb2471eafd54133dfe23824f313f9",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +329,333 @@\n\t// Upload currently used configuration to the cluster\n\t// Note: This is done right in the beginning of cluster initialization; as we might want to make other phases\n\t// depend on centralized information from this source in the future\n\tif err := uploadconfigphase.UploadConfiguration(i.cfg, client); err != nil {"
  },
  {
    "id" : "41ca1d20-8fd9-4647-9f03-8093966574fc",
    "prId" : 51122,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/51122#pullrequestreview-58081283",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "020eadb7-2b35-4980-9b3e-23508ff9589a",
        "parentId" : null,
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "I'm still kind of flummoxed why we are passing args around vs. having a centralized configuration object.  For example, for testing and validation I may want to dump the state of config during a dryRun for *, which would include the tempdirs b/c I want to inspect the certs.",
        "createdAt" : "2017-08-23T13:38:38Z",
        "updatedAt" : "2017-08-25T17:31:28Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      }
    ],
    "commit" : "2c718143441e7c9d588ce1b331ea927baa5a48ef",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +267,271 @@\t}\n\n\t// Get directories to write files to; can be faked if we're dry-running\n\trealCertsDir := i.cfg.CertificatesDir\n\tcertsDirToWriteTo, kubeConfigDir, manifestDir, err := getDirectoriesToUse(i.dryRun, i.cfg.CertificatesDir)"
  },
  {
    "id" : "51bffd0d-0d85-4060-824d-510c6a0b6351",
    "prId" : 50933,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/50933#pullrequestreview-58402069",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "71267fd4-8132-456b-9c33-413d47ac53e4",
        "parentId" : null,
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "The default kubeadm token should have a prefix of `system:bootstrappers:kubeadm:default-node` or something.\r\nPlease add that to constants.go\r\nWe should also migrate the RBAC-creation code to create a ClusterRoleBinding depending on version",
        "createdAt" : "2017-08-24T12:07:35Z",
        "updatedAt" : "2017-08-25T21:29:38Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      },
      {
        "id" : "b3009dc8-29af-4687-98e3-ed22e1079a61",
        "parentId" : "71267fd4-8132-456b-9c33-413d47ac53e4",
        "authorId" : "6682fc41-9e62-4c69-b891-a0be20e50c30",
        "body" : "Are you okay doing that in a followup PR? I wanted to make sure we're careful about upgrading the cluster role binding since it's possible that an upgraded cluster would have nodes using tokens created without the new default group.",
        "createdAt" : "2017-08-24T13:41:39Z",
        "updatedAt" : "2017-08-25T21:29:38Z",
        "lastEditedBy" : "6682fc41-9e62-4c69-b891-a0be20e50c30",
        "tags" : [
        ]
      },
      {
        "id" : "c1d3dfb6-63bb-4116-a622-2f0a9fd5ba55",
        "parentId" : "71267fd4-8132-456b-9c33-413d47ac53e4",
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "I'm ok with that.",
        "createdAt" : "2017-08-24T13:46:09Z",
        "updatedAt" : "2017-08-25T21:29:38Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      },
      {
        "id" : "a8604785-2969-46e3-b1ca-49d0af2e1c90",
        "parentId" : "71267fd4-8132-456b-9c33-413d47ac53e4",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "> The default kubeadm token should have a prefix of system:bootstrappers:kubeadm:default-node or something.\r\n\r\nThat seems like you're using a group to represent an individual token... each token already has its own unique username... why not use that?",
        "createdAt" : "2017-08-24T14:34:10Z",
        "updatedAt" : "2017-08-25T21:29:38Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "903c2166-cf6e-4402-8b48-07af219b52ad",
        "parentId" : "71267fd4-8132-456b-9c33-413d47ac53e4",
        "authorId" : "6682fc41-9e62-4c69-b891-a0be20e50c30",
        "body" : "I think there's a slight difference where you might have a single logical node pool (maybe `system:bootstrappers:high-integrity-nodes`). That group name might be used in a custom CSR autoapprover to assign a particular class of node identity to those nodes.\r\n\r\nYou might rotate through multiple tokens for different nodes within that pool, e.g., a token you used to bootstrap an initial set of nodes, and then another token you use to bootstrap additional nodes later on.",
        "createdAt" : "2017-08-24T14:45:27Z",
        "updatedAt" : "2017-08-25T21:29:38Z",
        "lastEditedBy" : "6682fc41-9e62-4c69-b891-a0be20e50c30",
        "tags" : [
        ]
      },
      {
        "id" : "18ee6cea-ef26-451c-bb61-560d9ce3ab85",
        "parentId" : "71267fd4-8132-456b-9c33-413d47ac53e4",
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "So this is for the default token _group_, sorry for not making that clear.\r\nClusterRoleBindings will be bound to this group; and the default token will be added to this group by default.",
        "createdAt" : "2017-08-24T14:47:24Z",
        "updatedAt" : "2017-08-25T21:29:38Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      }
    ],
    "commit" : "c7996a7236ee67c01babcfca3f4a91f88cca699e",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +340,344 @@\t// Create the default node bootstrap token\n\ttokenDescription := \"The default bootstrap token generated by 'kubeadm init'.\"\n\tif err := nodebootstraptokenphase.UpdateOrCreateToken(client, i.cfg.Token, false, i.cfg.TokenTTL, kubeadmconstants.DefaultTokenUsages, []string{}, tokenDescription); err != nil {\n\t\treturn err\n\t}"
  },
  {
    "id" : "7c523075-331f-41b7-b021-4a6bb5174a6e",
    "prId" : 50631,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/50631#pullrequestreview-56504836",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "51563d4c-6afb-4f9c-a44a-a0e4fcc8afb2",
        "parentId" : null,
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "So there are a number of different clientset stubs, I'm wondering if we can dedupe.  \r\n",
        "createdAt" : "2017-08-16T00:20:38Z",
        "updatedAt" : "2017-08-18T13:05:26Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      }
    ],
    "commit" : "0bf84aa182449ab51cbb5f819da3fbcad19690a2",
    "line" : 95,
    "diffHunk" : "@@ -1,1 +357,361 @@\tif dryRun {\n\t\t// If we're dry-running; we should create a faked client that answers some GETs in order to be able to do the full init flow and just logs the rest of requests\n\t\tdryRunGetter := apiclient.NewInitDryRunGetter(cfg.NodeName, cfg.Networking.ServiceSubnet)\n\t\treturn apiclient.NewDryRunClient(dryRunGetter, os.Stdout), nil\n\t}"
  },
  {
    "id" : "8e259e60-06c4-4321-8ca0-d46338d6e446",
    "prId" : 49982,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/49982#pullrequestreview-55284163",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9089ed9c-8f2f-494c-a0d2-58ed4f7e1b24",
        "parentId" : null,
        "authorId" : "6682fc41-9e62-4c69-b891-a0be20e50c30",
        "body" : "Minor nit: it might be easier to maintain these comments if we dropped the numbering.",
        "createdAt" : "2017-08-08T20:15:22Z",
        "updatedAt" : "2017-08-10T03:47:07Z",
        "lastEditedBy" : "6682fc41-9e62-4c69-b891-a0be20e50c30",
        "tags" : [
        ]
      },
      {
        "id" : "766ccfb4-a118-4555-85fc-647e4e363b5d",
        "parentId" : "9089ed9c-8f2f-494c-a0d2-58ed4f7e1b24",
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "We do name the phases, so +1. ",
        "createdAt" : "2017-08-09T15:19:03Z",
        "updatedAt" : "2017-08-10T03:47:07Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      },
      {
        "id" : "dbabeaa1-89b1-4d94-b09d-dc20992e8d7d",
        "parentId" : "9089ed9c-8f2f-494c-a0d2-58ed4f7e1b24",
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "Yeah, can be done in followups",
        "createdAt" : "2017-08-09T15:52:26Z",
        "updatedAt" : "2017-08-10T03:47:07Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      }
    ],
    "commit" : "cb739722246403e1cdc05f7dd5d7be55a6346e4d",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +254,258 @@\t}\n\n\t// PHASE 5: Set up the node bootstrap tokens\n\tif !i.skipTokenPrint {\n\t\tfmt.Printf(\"[token] Using token: %s\\n\", i.cfg.Token)"
  },
  {
    "id" : "cf4e25f4-67b8-4d8f-b764-8cf2ac4636a0",
    "prId" : 48196,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/48196#pullrequestreview-47393713",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ac874f32-3453-430b-949a-6ae34eab754c",
        "parentId" : null,
        "authorId" : "b8f6188a-f26e-4203-bed3-a5d075997fdf",
        "body" : "I've brought this up in the past and haven't really seen anything change. I don't see why we use package aliases when the package name should either be descriptive enough or using the alias makes it longer (See https://blog.golang.org/package-names).\r\n\r\nEspecially with the packages we control under `k8s.io/kubernetes/cmd/kubeadm`, I really think we should avoid this problem. This also causes the same package to be called different things in different files which makes readability across files difficult. ",
        "createdAt" : "2017-06-29T23:11:30Z",
        "updatedAt" : "2017-07-08T12:58:59Z",
        "lastEditedBy" : "b8f6188a-f26e-4203-bed3-a5d075997fdf",
        "tags" : [
        ]
      },
      {
        "id" : "942107eb-ab9d-4f34-9c73-8ceb3ca5bff4",
        "parentId" : "ac874f32-3453-430b-949a-6ae34eab754c",
        "authorId" : "b8f6188a-f26e-4203-bed3-a5d075997fdf",
        "body" : "I would argue there is no need to have the `phase` package and we should just have a `cmdphase` package (or maybe abbreviate phase to `ph`) and all the other ones we are using (cert phase, etc.).  \r\n\r\nHaving the `phase` package just be a name holder doesn't seem prudent. ",
        "createdAt" : "2017-06-29T23:22:55Z",
        "updatedAt" : "2017-07-08T12:58:59Z",
        "lastEditedBy" : "b8f6188a-f26e-4203-bed3-a5d075997fdf",
        "tags" : [
        ]
      },
      {
        "id" : "412a4efe-634a-44f6-be2f-96d9d3593905",
        "parentId" : "ac874f32-3453-430b-949a-6ae34eab754c",
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "@dmmcquay If you have opinions, send PRs to fix, I won't stop you ;)\r\nHowever, I personally don't have time to fix that given all the features I/we want to land in v1.8",
        "createdAt" : "2017-06-30T05:33:26Z",
        "updatedAt" : "2017-07-08T12:58:59Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      },
      {
        "id" : "1f1a1b33-aa82-4385-94a9-56abd452d2f6",
        "parentId" : "ac874f32-3453-430b-949a-6ae34eab754c",
        "authorId" : "b8f6188a-f26e-4203-bed3-a5d075997fdf",
        "body" : "Fair enough. Just seems like we are continuing the problem we had before in new code we are adding. ",
        "createdAt" : "2017-06-30T13:42:48Z",
        "updatedAt" : "2017-07-08T12:58:59Z",
        "lastEditedBy" : "b8f6188a-f26e-4203-bed3-a5d075997fdf",
        "tags" : [
        ]
      }
    ],
    "commit" : "c2e9052aead4b56a675fa145d00da0a8a00f314d",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +32,36 @@\tkubeadmapiext \"k8s.io/kubernetes/cmd/kubeadm/app/apis/kubeadm/v1alpha1\"\n\t\"k8s.io/kubernetes/cmd/kubeadm/app/apis/kubeadm/validation\"\n\tcmdphases \"k8s.io/kubernetes/cmd/kubeadm/app/cmd/phases\"\n\tkubeadmconstants \"k8s.io/kubernetes/cmd/kubeadm/app/constants\"\n\taddonsphase \"k8s.io/kubernetes/cmd/kubeadm/app/phases/addons\""
  },
  {
    "id" : "524c6ab2-8c8b-4966-8545-f2cd40f8147c",
    "prId" : 44588,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/44588#pullrequestreview-34638243",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bb2d83f0-66f5-45be-b348-4d72f8aef948",
        "parentId" : null,
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "Idea for follow-up: I think we should kill NewInit() and move everything to Init.Run()\r\n\r\nThat way we wouldn't have to pass everything as args to this function\r\nBut can be handled later",
        "createdAt" : "2017-04-25T17:50:51Z",
        "updatedAt" : "2017-04-25T17:51:06Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      }
    ],
    "commit" : "d047dfbc6f5fa02724820210398e28983f236b33",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +183,187 @@\tpreflight.TryStartKubelet()\n\n\treturn &Init{cfg: cfg, skipTokenPrint: skipTokenPrint}, nil\n}\n"
  },
  {
    "id" : "17b75937-ed1b-43aa-9623-7d4430cb3888",
    "prId" : 42970,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/42970#pullrequestreview-26461272",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0e9c0b17-719b-4a63-9c80-167aca2d805b",
        "parentId" : null,
        "authorId" : "b8f6188a-f26e-4203-bed3-a5d075997fdf",
        "body" : "I think this is much clearer and a step in the correct direction of making docs for kubeadm better. My only comment is about making kubeadm as OS-agnostic as much as possible (https://github.com/kubernetes/kubeadm/issues/108). Obviously, kubeadm is not supported for windows or macOS yet. Maybe writing in plain English what you are doing (in these commands) and saying something like:\r\n\"For example, run these commands on your linux machine.\"\r\n\r\nJust an idea. ",
        "createdAt" : "2017-03-13T00:55:31Z",
        "updatedAt" : "2017-03-13T00:57:11Z",
        "lastEditedBy" : "b8f6188a-f26e-4203-bed3-a5d075997fdf",
        "tags" : [
        ]
      }
    ],
    "commit" : "c15d011da3540a8d4c0fc9a8f95e352b6a845403",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +50,54 @@\t\tTo start using your cluster, you need to run (as a regular user):\n\n\t\t  sudo cp {{.KubeConfigPath}} $HOME/\n\t\t  sudo chmod $(id -u):$(id -g) $HOME/{{.KubeConfigName}}\n\t\t  export KUBECONFIG=$HOME/{{.KubeConfigName}}"
  },
  {
    "id" : "bb164ccf-512c-4a3f-abda-a18864bd232e",
    "prId" : 42970,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/42970#pullrequestreview-26616382",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f24f4811-dbe6-4ca6-8d1d-3d1b333a9559",
        "parentId" : null,
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "Cool, I didn't know you could pass `map[string]string` to Golang templates, thought one could only use structs to get that neat behavior.",
        "createdAt" : "2017-03-13T17:36:47Z",
        "updatedAt" : "2017-03-13T17:37:25Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      }
    ],
    "commit" : "c15d011da3540a8d4c0fc9a8f95e352b6a845403",
    "line" : 48,
    "diffHunk" : "@@ -1,1 +264,268 @@\t}\n\n\tctx := map[string]string{\n\t\t\"KubeConfigPath\": path.Join(kubeadmapi.GlobalEnvParams.KubernetesDir, kubeadmconstants.AdminKubeConfigFileName),\n\t\t\"KubeConfigName\": kubeadmconstants.AdminKubeConfigFileName,"
  },
  {
    "id" : "7765c60c-019d-49d6-a3ce-f064119401b4",
    "prId" : 40758,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/40758#pullrequestreview-19496975",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bcc9401e-7e76-4a17-a9ef-c94c2879932c",
        "parentId" : null,
        "authorId" : "b8f6188a-f26e-4203-bed3-a5d075997fdf",
        "body" : "Any reason not to just leave this instead of adding a package alias? Makes the name longer and I don't see it conflicting with another package. ",
        "createdAt" : "2017-01-31T21:02:19Z",
        "updatedAt" : "2017-02-01T17:07:02Z",
        "lastEditedBy" : "b8f6188a-f26e-4203-bed3-a5d075997fdf",
        "tags" : [
        ]
      },
      {
        "id" : "0c32e70e-94f5-487e-948e-b7f2530e16dd",
        "parentId" : "bcc9401e-7e76-4a17-a9ef-c94c2879932c",
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "Idk what's best, here I just aligned it with the other phase packages that have the `phase` suffix.\r\nI don't feel strongly for either case.\r\n\r\n@pires What do you think is the most clean option?",
        "createdAt" : "2017-02-01T08:04:30Z",
        "updatedAt" : "2017-02-01T17:07:02Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      }
    ],
    "commit" : "79515ec8800b68bc2a4f377661f16e2bcedb4dcd",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +34,38 @@\t\"k8s.io/kubernetes/cmd/kubeadm/app/discovery\"\n\tkubemaster \"k8s.io/kubernetes/cmd/kubeadm/app/master\"\n\tapiconfigphase \"k8s.io/kubernetes/cmd/kubeadm/app/phases/apiconfig\"\n\tcertphase \"k8s.io/kubernetes/cmd/kubeadm/app/phases/certs\"\n\tkubeconfigphase \"k8s.io/kubernetes/cmd/kubeadm/app/phases/kubeconfig\""
  },
  {
    "id" : "f4da8905-3318-440d-b0ee-022894cc13c9",
    "prId" : 40292,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/40292#pullrequestreview-17907263",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3f271e1f-93f3-4786-bc11-ac3184032447",
        "parentId" : null,
        "authorId" : "0ac5d6cd-da87-46a2-9b30-0d21db1063a2",
        "body" : "Why is this removed?",
        "createdAt" : "2017-01-23T11:23:28Z",
        "updatedAt" : "2017-01-23T11:33:23Z",
        "lastEditedBy" : "0ac5d6cd-da87-46a2-9b30-0d21db1063a2",
        "tags" : [
        ]
      },
      {
        "id" : "ef4f652b-fd1c-43b0-9c02-d444847824fe",
        "parentId" : "3f271e1f-93f3-4786-bc11-ac3184032447",
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "Cleanup. It's covered in defaults.go",
        "createdAt" : "2017-01-23T11:57:07Z",
        "updatedAt" : "2017-01-23T11:57:07Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      }
    ],
    "commit" : "6a37f450ae5c62770f5befd4e5334833ada513dd",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +169,173 @@\tpreflight.TryStartKubelet()\n\n\treturn &Init{cfg: cfg, selfHosted: selfHosted}, nil\n}\n"
  },
  {
    "id" : "fb25d8b6-1a36-4328-af10-ac31133ea07d",
    "prId" : 34719,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/34719#pullrequestreview-4369277",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "85c2c5b5-f1ea-4f29-b938-34d6308ac42a",
        "parentId" : null,
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "Why change this?\nThe token is required when running kubeadm join\n",
        "createdAt" : "2016-10-14T21:51:09Z",
        "updatedAt" : "2016-10-17T11:10:47Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      },
      {
        "id" : "be8793fb-f577-469b-9613-bfc5297d7de1",
        "parentId" : "85c2c5b5-f1ea-4f29-b938-34d6308ac42a",
        "authorId" : "d37d9758-bdf5-4c23-a40e-a85099689a0c",
        "body" : "Yes, see the code below. I've just changed how these arguments are generated.\n",
        "createdAt" : "2016-10-15T08:44:57Z",
        "updatedAt" : "2016-10-17T11:10:47Z",
        "lastEditedBy" : "d37d9758-bdf5-4c23-a40e-a85099689a0c",
        "tags" : [
        ]
      },
      {
        "id" : "d579c335-f247-4f16-9825-3fdaf43f013a",
        "parentId" : "85c2c5b5-f1ea-4f29-b938-34d6308ac42a",
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "Ah, ok\n",
        "createdAt" : "2016-10-15T08:47:43Z",
        "updatedAt" : "2016-10-17T11:10:47Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      }
    ],
    "commit" : "6f57775669b01a2de113e7a2766b3c4531731aa9",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +43,47 @@\t\tYou can now join any number of machines by running the following on each node:\n\n\t\tkubeadm join %s\n\t\t`)\n)"
  },
  {
    "id" : "89100373-20ff-41ad-b279-e9ccdeff4e21",
    "prId" : 34501,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/34501#pullrequestreview-3700853",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0d9591dd-62a6-4210-8d80-b958e47ba797",
        "parentId" : null,
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "Why isn't this in the API?\n",
        "createdAt" : "2016-10-11T05:47:58Z",
        "updatedAt" : "2016-10-11T17:26:06Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      },
      {
        "id" : "afadd431-8087-4e06-af84-0266cde07cc7",
        "parentId" : "0d9591dd-62a6-4210-8d80-b958e47ba797",
        "authorId" : "d37d9758-bdf5-4c23-a40e-a85099689a0c",
        "body" : "I think that it wouldn't be of much use there really.\n",
        "createdAt" : "2016-10-11T10:46:31Z",
        "updatedAt" : "2016-10-11T17:26:06Z",
        "lastEditedBy" : "d37d9758-bdf5-4c23-a40e-a85099689a0c",
        "tags" : [
        ]
      },
      {
        "id" : "a81515f6-6f70-4283-b00f-bf35e123f5fc",
        "parentId" : "0d9591dd-62a6-4210-8d80-b958e47ba797",
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "It doesn't really make sense to put in the api. It's a path to an API object.\n",
        "createdAt" : "2016-10-11T15:30:03Z",
        "updatedAt" : "2016-10-11T17:26:06Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      },
      {
        "id" : "99e06077-72b0-4507-9c6d-4fec1cb6c523",
        "parentId" : "0d9591dd-62a6-4210-8d80-b958e47ba797",
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "Ok for me\n",
        "createdAt" : "2016-10-11T15:32:24Z",
        "updatedAt" : "2016-10-11T17:26:06Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      }
    ],
    "commit" : "58d25e378c4f76c087b10fe624f6fa64879292ad",
    "line" : 45,
    "diffHunk" : "@@ -1,1 +98,102 @@\t)\n\n\tcmd.PersistentFlags().StringVar(&cfgPath, \"config\", \"\", \"Path to kubeadm config file\")\n\n\t// TODO (phase1+) @errordeveloper make the flags below not show up in --help but rather on --advanced-help"
  },
  {
    "id" : "1102917e-0b3b-4fbd-b8f2-9bcfff47a89b",
    "prId" : 34341,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/34341#pullrequestreview-3939561",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "55ab5a09-a49a-4773-a9fc-27dc9683ee86",
        "parentId" : null,
        "authorId" : "4815d47d-9abd-4b5d-8074-030539047224",
        "body" : "We should change this to skip-preflight now I'm thinking, feel free or I can get it as a followup.\n",
        "createdAt" : "2016-10-12T12:54:15Z",
        "updatedAt" : "2016-10-13T15:53:24Z",
        "lastEditedBy" : "4815d47d-9abd-4b5d-8074-030539047224",
        "tags" : [
        ]
      },
      {
        "id" : "6f4a4289-dbec-41bb-977c-8792b32dca31",
        "parentId" : "55ab5a09-a49a-4773-a9fc-27dc9683ee86",
        "authorId" : "0ac5d6cd-da87-46a2-9b30-0d21db1063a2",
        "body" : "@luxas mentioned this as well and I am not taking this lightly. As an user, I think _pre-flight_ is less clear about the intents of this flag, which is to perform checks. I suggest `skip-preflight-checks`.\nThat said, all log entries related to pre-flight should include a reference to _pre-flight check {failed,succeeded}_.\n",
        "createdAt" : "2016-10-12T18:57:43Z",
        "updatedAt" : "2016-10-13T15:53:24Z",
        "lastEditedBy" : "0ac5d6cd-da87-46a2-9b30-0d21db1063a2",
        "tags" : [
        ]
      }
    ],
    "commit" : "4231c046dd6830ab5cc52b7d0c8e80e811daf2e4",
    "line" : null,
    "diffHunk" : "@@ -1,1 +130,134 @@\t\t&skipPreFlight, \"skip-preflight-checks\", false,\n\t\t\"skip preflight checks normally run before modifying the system\",\n\t)\n\n\treturn cmd"
  },
  {
    "id" : "4ba3ab96-0a3a-4051-98a2-f9c56f814029",
    "prId" : 34341,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/34341#pullrequestreview-3939744",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5b93b402-545e-4600-8cf7-9a1540d41422",
        "parentId" : null,
        "authorId" : "4815d47d-9abd-4b5d-8074-030539047224",
        "body" : "Can we make IsRoot a preflight check and move it into the master and node lists with all the others?\n",
        "createdAt" : "2016-10-12T12:55:06Z",
        "updatedAt" : "2016-10-13T15:53:24Z",
        "lastEditedBy" : "4815d47d-9abd-4b5d-8074-030539047224",
        "tags" : [
        ]
      },
      {
        "id" : "7d67c8d8-2abd-4105-9e7d-4acd97f9f0d6",
        "parentId" : "5b93b402-545e-4600-8cf7-9a1540d41422",
        "authorId" : "b8f6188a-f26e-4203-bed3-a5d075997fdf",
        "body" : "I think we could do that, but in my opinion it's nice to have it return EX_NOPERM 77 for now. \n",
        "createdAt" : "2016-10-12T16:05:57Z",
        "updatedAt" : "2016-10-13T15:53:24Z",
        "lastEditedBy" : "b8f6188a-f26e-4203-bed3-a5d075997fdf",
        "tags" : [
        ]
      },
      {
        "id" : "cec6109d-5f02-4e94-95e8-19f525eb81e7",
        "parentId" : "5b93b402-545e-4600-8cf7-9a1540d41422",
        "authorId" : "4815d47d-9abd-4b5d-8074-030539047224",
        "body" : "Is it not possible for it to be in the normal list of checks, and still return it's own code? \n",
        "createdAt" : "2016-10-12T16:36:40Z",
        "updatedAt" : "2016-10-13T15:53:24Z",
        "lastEditedBy" : "4815d47d-9abd-4b5d-8074-030539047224",
        "tags" : [
        ]
      },
      {
        "id" : "a38c1a18-89b0-44e7-b2df-571339236cb4",
        "parentId" : "5b93b402-545e-4600-8cf7-9a1540d41422",
        "authorId" : "0ac5d6cd-da87-46a2-9b30-0d21db1063a2",
        "body" : "@dmmcquay I can support both yours and @dgoodwin opinions. Make sure you agree on one.\n",
        "createdAt" : "2016-10-12T18:58:36Z",
        "updatedAt" : "2016-10-13T15:53:24Z",
        "lastEditedBy" : "0ac5d6cd-da87-46a2-9b30-0d21db1063a2",
        "tags" : [
        ]
      }
    ],
    "commit" : "4231c046dd6830ab5cc52b7d0c8e80e811daf2e4",
    "line" : null,
    "diffHunk" : "@@ -1,1 +148,152 @@\t\t\treturn nil, fmt.Errorf(\"unable to decode config from %q [%v]\", cfgPath, err)\n\t\t}\n\t}\n\n\tif !skipPreFlight {"
  },
  {
    "id" : "1163e099-1d80-440a-b4b4-bcb3dac3de9d",
    "prId" : 34341,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/34341#pullrequestreview-4112930",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b3967345-65ff-4fff-a867-1fd6790bebf1",
        "parentId" : null,
        "authorId" : "d37d9758-bdf5-4c23-a40e-a85099689a0c",
        "body" : "Should be added to config, but I'm happy if you do this in a separate PR.\n",
        "createdAt" : "2016-10-13T16:31:24Z",
        "updatedAt" : "2016-10-13T16:50:41Z",
        "lastEditedBy" : "d37d9758-bdf5-4c23-a40e-a85099689a0c",
        "tags" : [
        ]
      }
    ],
    "commit" : "4231c046dd6830ab5cc52b7d0c8e80e811daf2e4",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +51,55 @@\tcfg := &kubeadmapi.MasterConfiguration{}\n\tvar cfgPath string\n\tvar skipPreFlight bool\n\tcmd := &cobra.Command{\n\t\tUse:   \"init\","
  },
  {
    "id" : "fa74cd50-b92d-4780-b80b-e2b8914e33a6",
    "prId" : 34341,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/34341#pullrequestreview-4112930",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3935cbc3-6d64-4499-8a7c-88cde07668af",
        "parentId" : null,
        "authorId" : "d37d9758-bdf5-4c23-a40e-a85099689a0c",
        "body" : "Missing `<cmd/init>` prefix here...\n",
        "createdAt" : "2016-10-13T16:32:22Z",
        "updatedAt" : "2016-10-13T16:50:41Z",
        "lastEditedBy" : "d37d9758-bdf5-4c23-a40e-a85099689a0c",
        "tags" : [
        ]
      }
    ],
    "commit" : "4231c046dd6830ab5cc52b7d0c8e80e811daf2e4",
    "line" : 63,
    "diffHunk" : "@@ -1,1 +157,161 @@\t\t}\n\t} else {\n\t\tfmt.Println(\"Skipping pre-flight checks\")\n\t}\n"
  },
  {
    "id" : "00a81c3a-165c-483e-b4c1-a8309754e1e1",
    "prId" : 33262,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/33262#pullrequestreview-1434268",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b6157244-e279-49cd-aecf-7d996b3f45d3",
        "parentId" : null,
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "Why are we supporting external etcd? I thought we were going for opinionated and minimal. This command already has 13 flags. I'm worried about this exploding in complexity.\n",
        "createdAt" : "2016-09-23T17:29:17Z",
        "updatedAt" : "2016-09-26T08:13:51Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      },
      {
        "id" : "52880619-66bf-448a-9161-6469a5e77282",
        "parentId" : "b6157244-e279-49cd-aecf-7d996b3f45d3",
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "I was thinking about if we could make it only two flags, `--external-etcd-endpoints` and `--external-etcd-certdir` with hardcoded cert/keyfile/ca filenames\n",
        "createdAt" : "2016-09-23T19:10:47Z",
        "updatedAt" : "2016-09-26T08:13:51Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      },
      {
        "id" : "f92bd4b6-f65c-4190-9890-3cbc0e5455d8",
        "parentId" : "b6157244-e279-49cd-aecf-7d996b3f45d3",
        "authorId" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "body" : "Pointing at a dedicated etcd seems to be an advanced enough scenario it should be with other advanced config.  What is the latest thinking on how to approach that? Passed in a file vs flags?\n",
        "createdAt" : "2016-09-23T23:25:41Z",
        "updatedAt" : "2016-09-26T08:13:51Z",
        "lastEditedBy" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "tags" : [
        ]
      },
      {
        "id" : "4e69dc21-f57c-48c6-a366-c5a7946b42b1",
        "parentId" : "b6157244-e279-49cd-aecf-7d996b3f45d3",
        "authorId" : "d37d9758-bdf5-4c23-a40e-a85099689a0c",
        "body" : "Again, I'll let @pires comment on this, as he insisted to add this feature.\n",
        "createdAt" : "2016-09-24T11:39:52Z",
        "updatedAt" : "2016-09-26T08:13:51Z",
        "lastEditedBy" : "d37d9758-bdf5-4c23-a40e-a85099689a0c",
        "tags" : [
        ]
      },
      {
        "id" : "663b0f03-9270-4cc3-ad62-b0da1dc0cf80",
        "parentId" : "b6157244-e279-49cd-aecf-7d996b3f45d3",
        "authorId" : "d37d9758-bdf5-4c23-a40e-a85099689a0c",
        "body" : "I am all in for trimming flags. I'd start by grouping `--help|--basic-usage` and `--advanced-usage`, and provide config file for anything beyond basic eventually.\n",
        "createdAt" : "2016-09-24T12:29:48Z",
        "updatedAt" : "2016-09-26T08:13:51Z",
        "lastEditedBy" : "d37d9758-bdf5-4c23-a40e-a85099689a0c",
        "tags" : [
        ]
      }
    ],
    "commit" : "3a4613d3b25dd1944a7f26b6d2037c9e82fcde7e",
    "line" : null,
    "diffHunk" : "@@ -1,1 +90,94 @@\n\t// TODO (phase1+) @errordeveloper make the flags below not show up in --help but rather on --advanced-help\n\tcmd.PersistentFlags().StringSliceVar(\n\t\t&s.InitFlags.API.Etcd.ExternalEndpoints, \"external-etcd-endpoints\", []string{},\n\t\t\"etcd endpoints to use, in case you have an external cluster\","
  },
  {
    "id" : "b91b0405-a67b-4c9b-ab75-49d7b4b75d60",
    "prId" : 33262,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/33262#pullrequestreview-1437626",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "392ed1b6-3230-475d-9aca-a149ba0b4b15",
        "parentId" : null,
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "init.RunInit is redundant, consider init.Run \n",
        "createdAt" : "2016-09-23T18:04:54Z",
        "updatedAt" : "2016-09-26T08:13:51Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      },
      {
        "id" : "5160e02f-d47a-45b7-84b6-20132048f109",
        "parentId" : "392ed1b6-3230-475d-9aca-a149ba0b4b15",
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "This is `cmd.RunInit` and `cmd.RunJoin` also exists.\nI think this is a very very small nit, not worth to prioritize\n",
        "createdAt" : "2016-09-23T19:08:50Z",
        "updatedAt" : "2016-09-26T08:13:51Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      },
      {
        "id" : "67ab45b1-fa10-406b-8f5e-27ef034f0c7d",
        "parentId" : "392ed1b6-3230-475d-9aca-a149ba0b4b15",
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "Why is `advertiseAddrs` `*[]string` instead of a plain `[]string`?\n",
        "createdAt" : "2016-09-23T19:31:20Z",
        "updatedAt" : "2016-09-26T08:13:51Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      },
      {
        "id" : "153fbc2f-f5ab-4a13-9868-f0a68590546d",
        "parentId" : "392ed1b6-3230-475d-9aca-a149ba0b4b15",
        "authorId" : "ad0a3561-db60-47a9-b82f-ac613199f968",
        "body" : "Also, why is this not just the `AdvertiseAddrs` field in the `KubeadmConfig`? Ideally flag parsing shouldn't happen here, it should happen with the other flag parsing. I'd be ok with just moving the parsing to the `Run` closure and populating the config there, but a flag type for `[]net.IP` would be ideal. That way, the flag parsing library could indicate errors parsing an IP flag.\n",
        "createdAt" : "2016-09-23T21:09:14Z",
        "updatedAt" : "2016-09-26T08:13:51Z",
        "lastEditedBy" : "ad0a3561-db60-47a9-b82f-ac613199f968",
        "tags" : [
        ]
      },
      {
        "id" : "1d4171a8-f56b-47df-85cd-3b0165962e46",
        "parentId" : "392ed1b6-3230-475d-9aca-a149ba0b4b15",
        "authorId" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "body" : "Agree on `*[]string`.  If that is ever nil the first line of this function will crash.\n\nAs for `init.Run` the real suggestion seems to be to break each command out in to a new package.  That seems like a big refactor and perhaps overkill.\n",
        "createdAt" : "2016-09-23T23:28:50Z",
        "updatedAt" : "2016-09-26T08:13:51Z",
        "lastEditedBy" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "tags" : [
        ]
      },
      {
        "id" : "ef35e234-6723-4599-9627-f67a56fc609e",
        "parentId" : "392ed1b6-3230-475d-9aca-a149ba0b4b15",
        "authorId" : "d37d9758-bdf5-4c23-a40e-a85099689a0c",
        "body" : "Cobra doesn't support `[]net.IP` right now, I'm afraid, hence I've used this. Passing it by reference seemed legit, but I haven't considered the alternatives.\n\nI wouldn't break commands into packages just yet. I can see some discussion of how `InitFlags` and `JoinFlags` can be improved, and I'd be happy to do that and reconsider how commands are organised at that stage, which would quite appropriate to do in a follow-up PR.\n",
        "createdAt" : "2016-09-24T11:44:10Z",
        "updatedAt" : "2016-09-26T08:13:51Z",
        "lastEditedBy" : "d37d9758-bdf5-4c23-a40e-a85099689a0c",
        "tags" : [
        ]
      },
      {
        "id" : "d8a4948a-d45e-482e-be84-5e8fb73fffa9",
        "parentId" : "392ed1b6-3230-475d-9aca-a149ba0b4b15",
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "Can't you just pass them by value for the time being (i.e. `[]string`)?\n",
        "createdAt" : "2016-09-24T15:01:16Z",
        "updatedAt" : "2016-09-26T08:13:51Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      },
      {
        "id" : "8bc1a5e1-0d4a-4342-adb4-1d3e0a372709",
        "parentId" : "392ed1b6-3230-475d-9aca-a149ba0b4b15",
        "authorId" : "d37d9758-bdf5-4c23-a40e-a85099689a0c",
        "body" : "I don't think there is a chance for it to become `nil`, which sounds like the only real concern. I've added a TODO comment to eliminate the need for it by using custom flag parsing helper (or just make a PR to `spf13/pflag`).\n",
        "createdAt" : "2016-09-24T16:24:14Z",
        "updatedAt" : "2016-09-26T08:13:51Z",
        "lastEditedBy" : "d37d9758-bdf5-4c23-a40e-a85099689a0c",
        "tags" : [
        ]
      }
    ],
    "commit" : "3a4613d3b25dd1944a7f26b6d2037c9e82fcde7e",
    "line" : 113,
    "diffHunk" : "@@ -1,1 +111,115 @@\n// RunInit executes master node provisioning, including certificates, needed static pod manifests, etc.\nfunc RunInit(out io.Writer, cmd *cobra.Command, args []string, s *kubeadmapi.KubeadmConfig, advertiseAddrs *[]string) error {\n\t// Auto-detect the IP\n\tif len(*advertiseAddrs) == 0 {"
  },
  {
    "id" : "ee35f371-aa6b-48e8-b254-219007834c7b",
    "prId" : 33262,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/33262#pullrequestreview-1437832",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8b800656-59ec-4303-9a70-0060cb3bbefd",
        "parentId" : null,
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "Why is both `kubelet.json` and `admin.json` created? How do one differ from the other?\n",
        "createdAt" : "2016-09-23T19:33:05Z",
        "updatedAt" : "2016-09-26T08:13:51Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      },
      {
        "id" : "8a971da5-8555-4676-8e0e-d28949c2c59d",
        "parentId" : "8b800656-59ec-4303-9a70-0060cb3bbefd",
        "authorId" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "body" : "IIRC, the kubelet cert is how the local kubelet authenticates to the master.  The admin key is how users runnin as root can get admin on the cluster.  It should be possible to scope down what the kubelet key does and eventually delete/remove/rename the admin key in favor of other admin mechanisms.\n",
        "createdAt" : "2016-09-23T23:34:57Z",
        "updatedAt" : "2016-09-26T08:13:51Z",
        "lastEditedBy" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "tags" : [
        ]
      },
      {
        "id" : "a29e9e06-a550-4d56-9113-03ef26aeb3e5",
        "parentId" : "8b800656-59ec-4303-9a70-0060cb3bbefd",
        "authorId" : "d37d9758-bdf5-4c23-a40e-a85099689a0c",
        "body" : "@jbeda yes, admin config is sort of recovery path, user may wish to copy it to a safe place etc, we can address it in the docs. Also, `kubeadm user` is still on the table, it'd do CSR dance for users etc. May be we could consider Google apps auth also, but in any case admin/root key seems like a handy thing to have, given we are still in alpha and who know what could go wrong with CSR API.\n",
        "createdAt" : "2016-09-24T12:02:11Z",
        "updatedAt" : "2016-09-26T08:13:51Z",
        "lastEditedBy" : "d37d9758-bdf5-4c23-a40e-a85099689a0c",
        "tags" : [
        ]
      },
      {
        "id" : "e8ab873f-8bb3-4580-b4f2-cee89b936fa6",
        "parentId" : "8b800656-59ec-4303-9a70-0060cb3bbefd",
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "Okay, so `admin.json` is unused for the time being?\nIIRC they're equal at the moment as well\n\nSo we're leaving it for users and will document that for now the user should copy `/etc/kubernetes/admin.json` and use it for authenticating with the apiserver?\n\nThat SGTM\n",
        "createdAt" : "2016-09-24T14:44:00Z",
        "updatedAt" : "2016-09-26T08:13:51Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      },
      {
        "id" : "7fca0ab3-ee01-494e-be4d-fb5726e1f08e",
        "parentId" : "8b800656-59ec-4303-9a70-0060cb3bbefd",
        "authorId" : "d37d9758-bdf5-4c23-a40e-a85099689a0c",
        "body" : "> IIRC they're equal at the moment as well\n\nNo, the files contain different client certs.\n\n> So we're leaving it for users and will document that for now the user should copy /etc/kubernetes/admin.json and use it for authenticating with the apiserver?\n\nYes.\n",
        "createdAt" : "2016-09-24T16:37:29Z",
        "updatedAt" : "2016-09-26T08:13:51Z",
        "lastEditedBy" : "d37d9758-bdf5-4c23-a40e-a85099689a0c",
        "tags" : [
        ]
      }
    ],
    "commit" : "3a4613d3b25dd1944a7f26b6d2037c9e82fcde7e",
    "line" : 163,
    "diffHunk" : "@@ -1,1 +161,165 @@\t}\n\n\tkubeconfigs, err := kubemaster.CreateCertsAndConfigForClients(s, []string{\"kubelet\", \"admin\"}, caKey, caCert)\n\tif err != nil {\n\t\treturn err"
  }
]