[
  {
    "id" : "087e20e3-7003-41d7-8210-de2f72b79ec0",
    "prId" : 70512,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/70512#pullrequestreview-170884205",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "95a3dc68-a460-48bb-b319-dd26246d9f52",
        "parentId" : null,
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "just fixing something missing from the last PR - capitalization.\r\n",
        "createdAt" : "2018-11-01T21:07:43Z",
        "updatedAt" : "2018-11-02T13:48:40Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      }
    ],
    "commit" : "30467aa34b366fb3a73993318fc7058c3ac7b9d5",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +130,134 @@\t\t}\n\n\t\tfmt.Printf(\"[control-plane] Creating static Pod manifest for %q\\n\", component)\n\t\tif err := controlplane.CreateStaticPodFiles(data.ManifestDir(), cfg, component); err != nil {\n\t\t\treturn err"
  },
  {
    "id" : "e83f9b3f-27b3-4b25-b722-598298627970",
    "prId" : 70097,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/70097#pullrequestreview-170113954",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "da1f9bcf-5a55-4d23-b40a-8b8966087ac6",
        "parentId" : null,
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "seems to me that the original code in runInit() used the same folder for dry-run and without dry-run in the case of etcd and api server.\r\n\r\nhere by using ManifestDir() we now respect the dry-run flag.\r\n",
        "createdAt" : "2018-10-25T22:07:30Z",
        "updatedAt" : "2018-10-31T14:05:45Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      },
      {
        "id" : "7b0121f8-4459-4384-92b1-b1f6e26303e6",
        "parentId" : "da1f9bcf-5a55-4d23-b40a-8b8966087ac6",
        "authorId" : "8a27151d-3530-4221-90e8-48b3a85cba37",
        "body" : "I don't have history here, but what you are proposing seems ok to me.",
        "createdAt" : "2018-10-31T07:12:59Z",
        "updatedAt" : "2018-10-31T14:05:45Z",
        "lastEditedBy" : "8a27151d-3530-4221-90e8-48b3a85cba37",
        "tags" : [
        ]
      }
    ],
    "commit" : "c8c93bb581f5cd8a337d114072898a18ffbaf15b",
    "line" : 269,
    "diffHunk" : "@@ -1,1 +131,135 @@\n\t\tfmt.Printf(\"[control-plane] creating static Pod manifest for %q\\n\", component)\n\t\tif err := controlplane.CreateStaticPodFiles(data.ManifestDir(), cfg, component); err != nil {\n\t\t\treturn err\n\t\t}"
  },
  {
    "id" : "05211d4f-88d4-420f-bff8-49cb8f5791f8",
    "prId" : 70097,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/70097#pullrequestreview-170257734",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0fa07848-7ebe-4152-b71d-816e60168da0",
        "parentId" : null,
        "authorId" : "8a27151d-3530-4221-90e8-48b3a85cba37",
        "body" : "in certs and kubeconfig I have added a run method to the top level phase that prints the folder where stuff are going to be saved. What do you think about doing the same here?",
        "createdAt" : "2018-10-31T07:09:03Z",
        "updatedAt" : "2018-10-31T14:05:45Z",
        "lastEditedBy" : "8a27151d-3530-4221-90e8-48b3a85cba37",
        "tags" : [
        ]
      },
      {
        "id" : "4ff9cfe4-3ef9-4548-9bcf-175321befd70",
        "parentId" : "0fa07848-7ebe-4152-b71d-816e60168da0",
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "SGTM",
        "createdAt" : "2018-10-31T13:45:40Z",
        "updatedAt" : "2018-10-31T14:05:45Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      }
    ],
    "commit" : "c8c93bb581f5cd8a337d114072898a18ffbaf15b",
    "line" : 194,
    "diffHunk" : "@@ -1,1 +81,85 @@\t\t\tnewControlPlaneSubPhase(kubeadmconstants.KubeControllerManager),\n\t\t\tnewControlPlaneSubPhase(kubeadmconstants.KubeScheduler),\n\t\t},\n\t\tRun: runControlPlanePhase,\n\t}"
  },
  {
    "id" : "65bc74ee-655f-4c54-a2a2-0d2b78703a29",
    "prId" : 59288,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/59288#pullrequestreview-111595667",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "abb66df4-42c3-4308-af88-e237d6f77312",
        "parentId" : null,
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "So I need to look through history here.  I think other changes that crib'd hostIP from self-hosting affected this.  Sorry it's taking a while but we want the original intent to be preserved.  @kad if you have a moment could you dig the change, otherwise i'll have to search for it tomorrow. ",
        "createdAt" : "2018-02-09T00:52:48Z",
        "updatedAt" : "2018-02-15T17:05:50Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      },
      {
        "id" : "2118d22f-0cee-492a-95c2-d4d2e561b462",
        "parentId" : "abb66df4-42c3-4308-af88-e237d6f77312",
        "authorId" : "cc3618eb-e452-47bc-914a-abcad9b01552",
        "body" : "This is actually a defect. The `kube-apiserver` only accepts an IP for `--advertise-address`.\r\nhttps://kubernetes.io/docs/reference/generated/kube-apiserver/\r\n\r\nI believe what @stevesloka has here is correct.",
        "createdAt" : "2018-02-09T02:53:53Z",
        "updatedAt" : "2018-02-15T17:05:50Z",
        "lastEditedBy" : "cc3618eb-e452-47bc-914a-abcad9b01552",
        "tags" : [
        ]
      },
      {
        "id" : "52dde4d1-ee6e-4ffb-94f1-667ff0b89f5c",
        "parentId" : "abb66df4-42c3-4308-af88-e237d6f77312",
        "authorId" : "06be2998-8e58-49a1-960a-716ab2ae239d",
        "body" : "Just for reference: Yes this can only be an IP and #56956 was just merged to validate this.",
        "createdAt" : "2018-04-12T12:21:58Z",
        "updatedAt" : "2018-04-12T12:21:58Z",
        "lastEditedBy" : "06be2998-8e58-49a1-960a-716ab2ae239d",
        "tags" : [
        ]
      }
    ],
    "commit" : "dc03cc003540b2f486c67db2b91f020033834b62",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +144,148 @@\n\t\tif properties.use == \"all\" || properties.use == \"apiserver\" {\n\t\t\tcmd.Flags().StringVar(&cfg.API.AdvertiseAddress, \"apiserver-advertise-address\", cfg.API.AdvertiseAddress, \"The IP address of the API server is accessible on\")\n\t\t\tcmd.Flags().Int32Var(&cfg.API.BindPort, \"apiserver-bind-port\", cfg.API.BindPort, \"The port the API server is accessible on\")\n\t\t\tcmd.Flags().StringVar(&cfg.Networking.ServiceSubnet, \"service-cidr\", cfg.Networking.ServiceSubnet, \"The range of IP address used for service VIPs\")"
  },
  {
    "id" : "90c817bc-18de-4fec-978e-2001f5b395bd",
    "prId" : 58080,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/58080#pullrequestreview-87862690",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5a590c31-155b-4c02-9264-09b92cd23ebd",
        "parentId" : null,
        "authorId" : "3c1422a0-6358-4857-8f56-961979171514",
        "body" : "Add a newline here?",
        "createdAt" : "2018-01-10T15:00:09Z",
        "updatedAt" : "2018-01-19T12:40:56Z",
        "lastEditedBy" : "3c1422a0-6358-4857-8f56-961979171514",
        "tags" : [
        ]
      }
    ],
    "commit" : "72376f26ef9aa530f8f1c49c08e29e3757bece61",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +155,159 @@\t\t\tcmd.Flags().StringVar(&cfg.Networking.PodSubnet, \"pod-network-cidr\", cfg.Networking.PodSubnet, \"The range of IP addresses used for the Pod network\")\n\t\t\tcmd.Flags().Var(utilflag.NewMapStringString(&cfg.ControllerManagerExtraArgs), \"controller-manager-extra-args\", \"A set of extra flags to pass to the Controller Manager or override default ones in form of <flagname>=<value>\")\n\t\t}\n\n\t\tif properties.use == \"all\" || properties.use == \"scheduler\" {"
  }
]