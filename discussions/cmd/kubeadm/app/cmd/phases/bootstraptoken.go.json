[
  {
    "id" : "b03562bf-5188-4a0d-bb29-d257d04a1d67",
    "prId" : 71009,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/71009#pullrequestreview-174673141",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f48220ad-1fad-4866-b24f-5aa5f64dabbb",
        "parentId" : null,
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "i think this makes the var unused.",
        "createdAt" : "2018-11-14T02:08:02Z",
        "updatedAt" : "2018-11-14T02:17:02Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      },
      {
        "id" : "e881ed6f-acdc-4c8b-bb4b-6633d4585ee1",
        "parentId" : "f48220ad-1fad-4866-b24f-5aa5f64dabbb",
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "fixing. ",
        "createdAt" : "2018-11-14T02:14:45Z",
        "updatedAt" : "2018-11-14T02:17:02Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      }
    ],
    "commit" : "ef3380b42d00787ff9f93233f9c8f19d5b6bb9df",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +62,66 @@\t\tName:    \"bootstrap-token\",\n\t\tAliases: []string{\"bootstraptoken\"},\n\t\tShort:   \"Generates bootstrap tokens used to join a node to a cluster\",\n\t\tExample: bootstrapTokenExamples,\n\t\tLong:    bootstrapTokenLongDesc,"
  },
  {
    "id" : "b43c76b1-d981-426f-80a8-03de3c34ab5a",
    "prId" : 70727,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/70727#pullrequestreview-172587195",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "623e76aa-f7c4-415d-bf6d-0a52bb4695a5",
        "parentId" : null,
        "authorId" : "8a27151d-3530-4221-90e8-48b3a85cba37",
        "body" : "I think that this phase should give a user a message, otherwise this phase is almost silent about implemented actions. e.g.\r\n```\r\nfmt.Println(\"[bootstrap-token] Configuring bootstrap tokens,  cluster-info ConfigMap, RBAC Roles\")\r\n```",
        "createdAt" : "2018-11-07T11:27:35Z",
        "updatedAt" : "2018-11-08T03:01:30Z",
        "lastEditedBy" : "8a27151d-3530-4221-90e8-48b3a85cba37",
        "tags" : [
        ]
      },
      {
        "id" : "b77cc203-b2bd-4d45-9f05-c88353dfc4e5",
        "parentId" : "623e76aa-f7c4-415d-bf6d-0a52bb4695a5",
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "extra space after `,`",
        "createdAt" : "2018-11-07T16:45:29Z",
        "updatedAt" : "2018-11-08T03:01:30Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      }
    ],
    "commit" : "e743f0e4759510cf70dbb55929c2439a85d41f68",
    "line" : 300,
    "diffHunk" : "@@ -1,1 +94,98 @@\n\tfmt.Println(\"[bootstrap-token] Configuring bootstrap tokens, cluster-info ConfigMap, RBAC Roles\")\n\t// Create the default node bootstrap token\n\tif err := nodebootstraptokenphase.UpdateOrCreateTokens(client, false, data.Cfg().BootstrapTokens); err != nil {\n\t\treturn errors.Wrap(err, \"error updating or creating token\")"
  },
  {
    "id" : "3ecdc54c-3c07-4078-ae77-5e70e7cf13d1",
    "prId" : 60022,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/60022#pullrequestreview-98310489",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9b7840c7-45ea-4b44-993e-21889873613a",
        "parentId" : null,
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "So I generally like everything except what happens in this failure condition.  From what I grok, if you fail you don't see the full kubeadm join flow.  ",
        "createdAt" : "2018-02-20T16:00:01Z",
        "updatedAt" : "2018-02-20T16:00:28Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      },
      {
        "id" : "d6f40d60-f3ae-4344-a6e7-30d1843e3037",
        "parentId" : "9b7840c7-45ea-4b44-993e-21889873613a",
        "authorId" : "8a27151d-3530-4221-90e8-48b3a85cba37",
        "body" : "getJoinCommand could fail only if the admin.conf is not available/is invalid, but in that case the operation most probably will fail long before reaching this point.\r\n\r\nHowever, if all the preceding steps completes but getJoinCommand fails for any reason, in the current implementation you don't see printed the `kubeadm join` command to use for joining nodes, but instead you see printed the message  \"failed to get join command: %error\".\r\n\r\nIs that  acceptable for you? If not what do you suggest? To improve the error message? How? Printing a static  `kubeadm join` command without with fixed values instead of variables read from admin.conf e.g. kubeadm join {api-server-address} ....?",
        "createdAt" : "2018-02-20T16:59:11Z",
        "updatedAt" : "2018-02-20T16:59:11Z",
        "lastEditedBy" : "8a27151d-3530-4221-90e8-48b3a85cba37",
        "tags" : [
        ]
      },
      {
        "id" : "13f41024-2d96-45dc-91e0-eee64f3fb408",
        "parentId" : "9b7840c7-45ea-4b44-993e-21889873613a",
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "I guess I'm ok with the change as the user can just hit the up-arrow.  ",
        "createdAt" : "2018-02-21T18:35:10Z",
        "updatedAt" : "2018-02-21T18:35:10Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      }
    ],
    "commit" : "33f8ca9cd7790485d5448af8f3a38713a1a153e7",
    "line" : 73,
    "diffHunk" : "@@ -1,1 +341,345 @@\n\tjoinCommand, err := cmdutil.GetJoinCommand(kubeConfigFile, internalcfg.Token, skipTokenPrint)\n\tif err != nil {\n\t\treturn fmt.Errorf(\"failed to get join command: %v\", err)\n\t}"
  },
  {
    "id" : "17f77676-c519-4073-9462-27b6eaaf0b82",
    "prId" : 56025,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/56025#pullrequestreview-78120582",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a491717b-4991-489a-bf84-f77ece3c1ca0",
        "parentId" : null,
        "authorId" : "a09f2d48-fec0-4c0d-bd81-6de7378a6ebf",
        "body" : "Seems like https://github.com/kubernetes/kubeadm/issues/519 would be fixed here? cc @luxas",
        "createdAt" : "2017-11-20T04:31:38Z",
        "updatedAt" : "2017-11-21T08:54:57Z",
        "lastEditedBy" : "a09f2d48-fec0-4c0d-bd81-6de7378a6ebf",
        "tags" : [
        ]
      },
      {
        "id" : "3347dc76-e7c3-44c2-bf56-4cd85d52912b",
        "parentId" : "a491717b-4991-489a-bf84-f77ece3c1ca0",
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "nope; this is for when you create a **new** token, but the issue is about getting it back with the original token",
        "createdAt" : "2017-11-20T21:10:01Z",
        "updatedAt" : "2017-11-21T08:54:57Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      },
      {
        "id" : "e7a2b76a-54bf-48c5-850e-409decbc7d8e",
        "parentId" : "a491717b-4991-489a-bf84-f77ece3c1ca0",
        "authorId" : "a09f2d48-fec0-4c0d-bd81-6de7378a6ebf",
        "body" : "What's the final decision of that thread? Maybe this idea suggested by @mattmoyer in https://github.com/kubernetes/kubeadm/issues/519#issuecomment-342832458 ?\r\n```\r\nA new command kubeadm token get <token id> that gets the full token given the ID, with a --print-join-command flag to optionally print the full join command instead of just the token.\r\n```",
        "createdAt" : "2017-11-21T13:58:56Z",
        "updatedAt" : "2017-11-21T13:58:56Z",
        "lastEditedBy" : "a09f2d48-fec0-4c0d-bd81-6de7378a6ebf",
        "tags" : [
        ]
      },
      {
        "id" : "b70ed9ec-4747-4199-affa-f22b43146579",
        "parentId" : "a491717b-4991-489a-bf84-f77ece3c1ca0",
        "authorId" : "a09f2d48-fec0-4c0d-bd81-6de7378a6ebf",
        "body" : "If we want @mattmoyer 's second idea, I think it will be the same logic here. Am I missing something (again)? :D\r\n```\r\nAdd a --print-join-command flag for kubeadm token create that prints out the whole join command just like kubeadm init does. This would hopefully make it easy to automate around by running something like kubeadm token create --print-join-command >> worker_init.sh during provisioning.\r\n```",
        "createdAt" : "2017-11-21T14:05:53Z",
        "updatedAt" : "2017-11-21T14:05:53Z",
        "lastEditedBy" : "a09f2d48-fec0-4c0d-bd81-6de7378a6ebf",
        "tags" : [
        ]
      }
    ],
    "commit" : "29d9a39e9f9feebc5a345c8c51597a16edce1b3f",
    "line" : 338,
    "diffHunk" : "@@ -1,1 +353,357 @@\t}\n\tfmt.Println(\"[bootstraptoken] You can now join any number of machines by running:\")\n\tfmt.Printf(\"[bootstraptoken]   kubeadm join {master} --token %s --discovery-token-ca-cert-hash %s \\n\", internalcfg.Token, pubkeypin.Hash(caCert))\n\n\treturn nil"
  },
  {
    "id" : "c65a24ad-93fa-42cb-a20c-14468f7e62ff",
    "prId" : 56025,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/56025#pullrequestreview-77923089",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0ad944f6-8552-44c6-8c2e-09f5c8cbe1f5",
        "parentId" : null,
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "from here and below, the code seems to be unnecessarily duplicated between `kubeadm phase bootstrap-token` and  `kubeadm token create` I think the code here should match each other exactly and be re-used.",
        "createdAt" : "2017-11-20T21:08:12Z",
        "updatedAt" : "2017-11-21T08:54:57Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      }
    ],
    "commit" : "29d9a39e9f9feebc5a345c8c51597a16edce1b3f",
    "line" : 268,
    "diffHunk" : "@@ -1,1 +283,287 @@}\n\nfunc addBootstrapTokenFlags(flagSet *pflag.FlagSet, cfg *kubeadmapiext.MasterConfiguration, cfgPath, description *string, usages, extraGroups *[]string, skipTokenPrint *bool) {\n\tflagSet.StringVar(\n\t\tcfgPath, \"config\", *cfgPath,"
  },
  {
    "id" : "32856993-f913-41e3-8b03-ff187ad5502c",
    "prId" : 49982,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/49982#pullrequestreview-55207383",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "abe341ad-0bc8-497d-bfee-cb635efd56ea",
        "parentId" : null,
        "authorId" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "body" : "Should we verify that this file doesn't have creds in it and meets other expectations?",
        "createdAt" : "2017-08-08T21:00:30Z",
        "updatedAt" : "2017-08-10T03:47:07Z",
        "lastEditedBy" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "tags" : [
        ]
      },
      {
        "id" : "e8f9c94a-8151-48da-aa22-fc996c58c1b0",
        "parentId" : "abe341ad-0bc8-497d-bfee-cb635efd56ea",
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "That is not required as kubeadm just strips out and unnamed or currently used cluster from that file: https://github.com/kubernetes/kubernetes/blob/master/cmd/kubeadm/app/util/kubeconfig/kubeconfig.go#L103\r\n\r\nSo it will never send creds. Not sure if we have to restrict having no creds here...",
        "createdAt" : "2017-08-09T11:34:44Z",
        "updatedAt" : "2017-08-10T03:47:07Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      }
    ],
    "commit" : "cb739722246403e1cdc05f7dd5d7be55a6346e4d",
    "line" : 65,
    "diffHunk" : "@@ -1,1 +63,67 @@\n\t\t\t// Here it's safe to get args[0], since we've validated that the argument exists above in validateExactArgNumber\n\t\t\tclusterInfoFile := args[0]\n\t\t\t// Create the cluster-info ConfigMap or update if it already exists\n\t\t\terr = clusterinfo.CreateBootstrapConfigMapIfNotExists(client, clusterInfoFile)"
  }
]