[
  {
    "id" : "cbbdfd00-0737-4639-a9ff-d33197819ce0",
    "prId" : 85843,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/85843#pullrequestreview-326507765",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a8aeda5d-0bc0-44b1-b2aa-496ccfc75fcd",
        "parentId" : null,
        "authorId" : "0de88c3b-1f1a-401f-9fd1-cd63adc590fd",
        "body" : "Maybe we should add other runtimes as well.",
        "createdAt" : "2019-12-03T16:35:07Z",
        "updatedAt" : "2019-12-04T10:57:38Z",
        "lastEditedBy" : "0de88c3b-1f1a-401f-9fd1-cd63adc590fd",
        "tags" : [
        ]
      },
      {
        "id" : "bf1aeddd-6a4d-42b3-94f3-a8dcacb8aedd",
        "parentId" : "a8aeda5d-0bc0-44b1-b2aa-496ccfc75fcd",
        "authorId" : "ac23ff3e-7056-4b63-b3a5-13e815cb8f0f",
        "body" : "I was looking to add containerd as well, but they dont have a full fledged CLI currently that we can translate the help commands too. Seems that you can use `crioctl` to manage it so we could lump together cri-o and containerd and print the crio output. As it includes the socket config, it should work for both.\r\n\r\nNo idea about any other runtimes currently, other that the big three (docker, cri-o, containerd)",
        "createdAt" : "2019-12-03T21:38:59Z",
        "updatedAt" : "2019-12-04T10:57:38Z",
        "lastEditedBy" : "ac23ff3e-7056-4b63-b3a5-13e815cb8f0f",
        "tags" : [
        ]
      },
      {
        "id" : "b804e5b2-ca00-4b74-afd6-5b2f763ad98c",
        "parentId" : "a8aeda5d-0bc0-44b1-b2aa-496ccfc75fcd",
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "why remove docker from this sentence - it's an indication for newbie users that docker is a \"container runtime\"?\r\n\r\nEDIT: actually never mind, i didn't read bellow.",
        "createdAt" : "2019-12-03T23:02:35Z",
        "updatedAt" : "2019-12-04T10:57:38Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      }
    ],
    "commit" : "c355cadbb1f5e9a40c5dd83d006a1c3efc346cba",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +48,52 @@\n\tAdditionally, a control plane component may have crashed or exited when started by the container runtime.\n\tTo troubleshoot, list all containers using your preferred container runtimes CLI.\n{{ if .IsDocker }}\n\tHere is one example how you may list all Kubernetes containers running in docker:"
  },
  {
    "id" : "8541498e-255a-4ad5-accd-ff8cef96034e",
    "prId" : 85843,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/85843#pullrequestreview-326508678",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "db81a8cd-ec1c-4205-b8ec-7352a4ffddda",
        "parentId" : null,
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "printing different help per CRI, seems fine but IMO we should not use the NodeRegistration.CRISocket.",
        "createdAt" : "2019-12-03T23:04:57Z",
        "updatedAt" : "2019-12-04T10:57:38Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      }
    ],
    "commit" : "c355cadbb1f5e9a40c5dd83d006a1c3efc346cba",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +59,63 @@\t\tOnce you have found the failing container, you can inspect its logs with:\n\t\t- 'crictl --runtime-endpoint {{ .Socket }} logs CONTAINERID'\n{{ end }}\n\t`)))\n)"
  }
]