[
  {
    "id" : "a8e6a83c-9567-4707-b492-2f8b358059f0",
    "prId" : 75499,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/75499#pullrequestreview-241025501",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9be0cc3d-c434-4881-bac8-380b013cfb93",
        "parentId" : null,
        "authorId" : "1c1af4c1-5d58-48e6-862a-4fcdf81c9f70",
        "body" : "It seems importing `\"k8s.io/apimachinery/pkg/util/sets\"` in tests yields to build errors like [that one](https://prow.k8s.io/view/gcs/kubernetes-jenkins/pr-logs/pull/75499/pull-kubernetes-verify/1129715477703036929):\r\n```diff\r\ndiff -Naupr -x _output /home/prow/go/src/k8s.io/kubernetes/cmd/kubeadm/app/cmd/BUILD /tmp/verify-bazel.STLhDZ/go/src/k8s.io/kubernetes/cmd/kubeadm/app/cmd/BUILD\r\n--- /home/prow/go/src/k8s.io/kubernetes/cmd/kubeadm/app/cmd/BUILD\t2019-05-18 11:50:23.049528531 +0000\r\n+++ /tmp/verify-bazel.STLhDZ/go/src/k8s.io/kubernetes/cmd/kubeadm/app/cmd/BUILD\t2019-05-18 11:51:00.467822797 +0000\r\n@@ -99,6 +99,7 @@ go_test(\r\n         \"//staging/src/k8s.io/apimachinery/pkg/api/errors:go_default_library\",\r\n         \"//staging/src/k8s.io/apimachinery/pkg/apis/meta/v1:go_default_library\",\r\n         \"//staging/src/k8s.io/apimachinery/pkg/runtime:go_default_library\",\r\n+        \"//staging/src/k8s.io/apimachinery/pkg/util/sets:go_default_library\",\r\n         \"//staging/src/k8s.io/client-go/kubernetes/fake:go_default_library\",\r\n         \"//staging/src/k8s.io/client-go/testing:go_default_library\",\r\n         \"//staging/src/k8s.io/client-go/tools/clientcmd:go_default_library\",\r\n\r\nRun ./hack/update-bazel.sh\r\n```\r\nThis presumably happens because Bazel (which I'm unfamiliar with) requires this dependency to be declared. I have added it manually in `cmd/kubeadm/app/cmd/BUILD` but is there a better way to achieve this?\r\n\r\nEDIT: of course, I'll squash the related extra commits once I've established the best way to add these dependencies üôÇ It is just easier to either drop & redo, or squash, than having to git-rebase, edit, reset, add, etc.",
        "createdAt" : "2019-05-18T19:53:09Z",
        "updatedAt" : "2019-05-23T07:22:32Z",
        "lastEditedBy" : "1c1af4c1-5d58-48e6-862a-4fcdf81c9f70",
        "tags" : [
        ]
      },
      {
        "id" : "a9efae3d-e333-440f-b033-2071254d55dc",
        "parentId" : "9be0cc3d-c434-4881-bac8-380b013cfb93",
        "authorId" : "cccc7bed-95f4-42a9-83ef-6ba1a4dca7ec",
        "body" : "Yes, there is a script - `./hack/update-bazel.sh` that will do everything for you. Actually, always use that script to update bazel deps.",
        "createdAt" : "2019-05-22T14:18:26Z",
        "updatedAt" : "2019-05-23T07:22:32Z",
        "lastEditedBy" : "cccc7bed-95f4-42a9-83ef-6ba1a4dca7ec",
        "tags" : [
        ]
      },
      {
        "id" : "70662a9a-8681-4712-9da0-1f85c80fc019",
        "parentId" : "9be0cc3d-c434-4881-bac8-380b013cfb93",
        "authorId" : "1c1af4c1-5d58-48e6-862a-4fcdf81c9f70",
        "body" : "Thanks for the explanation! üëç ",
        "createdAt" : "2019-05-23T07:18:49Z",
        "updatedAt" : "2019-05-23T07:22:32Z",
        "lastEditedBy" : "1c1af4c1-5d58-48e6-862a-4fcdf81c9f70",
        "tags" : [
        ]
      }
    ],
    "commit" : "7e2b4aa562ee45bd575f1078d6ed84f82aeb10aa",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +23,27 @@\t\"testing\"\n\n\t\"k8s.io/apimachinery/pkg/util/sets\"\n\t\"k8s.io/kubernetes/cmd/kubeadm/app/cmd/options\"\n)"
  },
  {
    "id" : "bf523c65-292e-4e7f-bfdd-95b4f709b7b8",
    "prId" : 72442,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/72442#pullrequestreview-188659731",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "498dfc9e-1cdf-48a9-9f52-2ea4895cc919",
        "parentId" : null,
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "sub-tests :+1: \r\n",
        "createdAt" : "2019-01-02T12:50:07Z",
        "updatedAt" : "2019-01-09T11:47:55Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      }
    ],
    "commit" : "fd842480d19359263f3a691ce9343c7f326e432a",
    "line" : 289,
    "diffHunk" : "@@ -1,1 +218,222 @@\t}\n\tfor _, tc := range testCases {\n\t\tt.Run(tc.name, func(t *testing.T) {\n\t\t\t// initialize an external join option and inject it to the join cmd\n\t\t\tjoinOptions := newJoinOptions()"
  }
]