[
  {
    "id" : "06ff0e2b-b262-4e3e-9bb1-57ff6b4be1cc",
    "prId" : 47342,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/47342#pullrequestreview-45209146",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "81ab9b59-1f9e-41d3-ae6e-5b61817ca1c8",
        "parentId" : null,
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "depending on how far we get on component config in 1.8 we may want some 3rd object managing \"config\" ",
        "createdAt" : "2017-06-13T13:57:42Z",
        "updatedAt" : "2017-06-24T16:22:01Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      },
      {
        "id" : "583b5f69-bd7a-4f0c-ba37-136f8c3c5110",
        "parentId" : "81ab9b59-1f9e-41d3-ae6e-5b61817ca1c8",
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "Agree, but out of scope for this PR",
        "createdAt" : "2017-06-20T17:26:23Z",
        "updatedAt" : "2017-06-24T16:22:01Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      }
    ],
    "commit" : "051db16083fbc7486e71bfafc459112edcf057c1",
    "line" : 55,
    "diffHunk" : "@@ -1,1 +517,521 @@\n\tif len(modes) == 0 {\n\t\treturn []string{fmt.Sprintf(\"--authorization-mode=%s\", kubeadmapiext.DefaultAuthorizationModes)}\n\t}\n"
  },
  {
    "id" : "03eb72b6-02e4-40e1-9404-99810a29ff6d",
    "prId" : 46864,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/46864#pullrequestreview-41851440",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "24ae5955-c390-45b4-b248-40d55d0ba64a",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "how was this being set before?",
        "createdAt" : "2017-06-02T17:26:30Z",
        "updatedAt" : "2017-06-06T04:47:36Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "e4687b1a-8085-4227-b141-96b6cdab60f5",
        "parentId" : "24ae5955-c390-45b4-b248-40d55d0ba64a",
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "@liggitt It was being set unconditionally in the `defaultArguments` slice initializer above. Now only for v1.6",
        "createdAt" : "2017-06-02T18:07:52Z",
        "updatedAt" : "2017-06-06T04:47:36Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      },
      {
        "id" : "9edb8445-9fa5-42e7-aa1e-3f662fe646ac",
        "parentId" : "24ae5955-c390-45b4-b248-40d55d0ba64a",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "ah, and got removed by the SAR PR. ok.",
        "createdAt" : "2017-06-02T18:30:18Z",
        "updatedAt" : "2017-06-06T04:47:36Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "de2ef8f0c7c0d0909106f4d197674ccf1903625a",
    "line" : 53,
    "diffHunk" : "@@ -1,1 +429,433 @@\t\t// enable the former CSR group approver for v1.6 clusters.\n\t\t// TODO(luxas): Remove this once we're targeting v1.8 at HEAD\n\t\tdefaultArguments[\"insecure-experimental-approve-all-kubelet-csrs-for-group\"] = bootstrapapi.BootstrapGroup\n\t}\n"
  },
  {
    "id" : "cf6d7464-7a40-4043-95bf-5481fa1b5b38",
    "prId" : 44002,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/44002#pullrequestreview-30642992",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8f8b55b4-101f-48a5-882c-9ce581d778ba",
        "parentId" : null,
        "authorId" : "f9231906-76cd-4270-87d5-4b97ae98ebb4",
        "body" : "I know on the command-line, we support strings like `latest` and `stable-1.6`. Are those guaranteed to be normalized to semver by this point?",
        "createdAt" : "2017-04-03T21:41:39Z",
        "updatedAt" : "2017-04-11T21:51:50Z",
        "lastEditedBy" : "f9231906-76cd-4270-87d5-4b97ae98ebb4",
        "tags" : [
        ]
      },
      {
        "id" : "380de155-e50a-4b3f-9e84-0bc3b2d4531c",
        "parentId" : "8f8b55b4-101f-48a5-882c-9ce581d778ba",
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "Yes they are.",
        "createdAt" : "2017-04-03T21:51:35Z",
        "updatedAt" : "2017-04-11T21:51:50Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      }
    ],
    "commit" : "199ad852a1dbb7f67d5ce89ea4e38fdf4a7c32c2",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +74,78 @@\t}\n\n\tk8sVersion, err := version.ParseSemantic(cfg.KubernetesVersion)\n\tif err != nil {\n\t\treturn err"
  },
  {
    "id" : "9efcfafb-c906-4fb4-9c2c-9030b230d624",
    "prId" : 42064,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/42064#pullrequestreview-23803460",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f14e2ae8-98f6-45d2-91f9-7f8baca924c6",
        "parentId" : null,
        "authorId" : "b8f6188a-f26e-4203-bed3-a5d075997fdf",
        "body" : "With @dgoodwin PR moving this, wouldn't it be better to check the config? This might cause a merge conflict. ",
        "createdAt" : "2017-02-24T18:18:55Z",
        "updatedAt" : "2017-03-01T12:33:31Z",
        "lastEditedBy" : "b8f6188a-f26e-4203-bed3-a5d075997fdf",
        "tags" : [
        ]
      },
      {
        "id" : "9cf933ac-4260-451e-9560-2c5484c0f5fd",
        "parentId" : "f14e2ae8-98f6-45d2-91f9-7f8baca924c6",
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "this isn't using the selfHosted value from the config, instead this is an argument from the caller of this function, so not directly related",
        "createdAt" : "2017-02-24T20:18:40Z",
        "updatedAt" : "2017-03-01T12:33:31Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      }
    ],
    "commit" : "5cbefbcbcaaebdba8ad70e818cceb2d1bdfe4010",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +333,337 @@\tcommand = append(command, getAuthzParameters(cfg.AuthorizationMode)...)\n\n\tif selfHosted {\n\t\tcommand = append(command, \"--advertise-address=$(POD_IP)\")\n\t} else {"
  },
  {
    "id" : "ea7777a3-b04f-4872-ac3b-f6be8b2e72ec",
    "prId" : 41897,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/41897#pullrequestreview-23311121",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "424676cf-b719-4fd9-8f69-9fec56a80931",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "This makes me happy",
        "createdAt" : "2017-02-22T16:16:04Z",
        "updatedAt" : "2017-02-23T21:45:12Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "d8d65307-349b-4c91-9cf1-73d00810c0a3",
        "parentId" : "424676cf-b719-4fd9-8f69-9fec56a80931",
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "Cool to make you happy :)\r\n\r\nI still think that the `path.Join` expression is terrible, but some first-time contributor said we wanted to claim to clean those up for us, so until I know whether he will do it or not I'll wait for it",
        "createdAt" : "2017-02-22T19:32:45Z",
        "updatedAt" : "2017-02-23T21:45:12Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      }
    ],
    "commit" : "036463dd17ac20d459dc4143f5c08368766500ca",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +380,384 @@\t\t\"--address=127.0.0.1\",\n\t\t\"--leader-elect\",\n\t\t\"--kubeconfig=\"+path.Join(kubeadmapi.GlobalEnvParams.KubernetesDir, kubeadmconstants.ControllerManagerKubeConfigFileName),\n\t\t\"--root-ca-file=\"+getCertFilePath(kubeadmconstants.CACertName),\n\t\t\"--service-account-private-key-file=\"+getCertFilePath(kubeadmconstants.ServiceAccountPrivateKeyName),"
  },
  {
    "id" : "1c16ae26-e832-42ab-9573-eac8cae8f8d4",
    "prId" : 41810,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/41810#pullrequestreview-23085387",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fe997426-ebdc-4366-83e3-7f20136f3448",
        "parentId" : null,
        "authorId" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "body" : "This comment doesn't parse for me.",
        "createdAt" : "2017-02-21T21:56:50Z",
        "updatedAt" : "2017-02-23T13:30:42Z",
        "lastEditedBy" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "tags" : [
        ]
      },
      {
        "id" : "890f7f65-20bb-4609-955d-3bddea63c436",
        "parentId" : "fe997426-ebdc-4366-83e3-7f20136f3448",
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "Oops. This is artwork as a result of push notifications I guess :smile:\r\nI'll fix that up in a follow up -- I have lots of other PRs coming",
        "createdAt" : "2017-02-21T22:12:13Z",
        "updatedAt" : "2017-02-23T13:30:42Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      }
    ],
    "commit" : "3c322d04de52d6f3dcf5e804ebbab11bfbf28a0a",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +456,460 @@func getAuthzParameters(authzMode string) []string {\n\tcommand := []string{}\n\t// RBAC is always on. If the user specified\n\tauthzModes := []string{authzmodes.ModeRBAC}\n\tif len(authzMode) != 0 && authzMode != authzmodes.ModeRBAC {"
  },
  {
    "id" : "da620353-573f-4f43-8ff7-c7a19b6ea2aa",
    "prId" : 41810,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/41810#pullrequestreview-23085551",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6a124ac0-96e5-44dd-bff3-8f22cce7d85c",
        "parentId" : null,
        "authorId" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "body" : "Do we want to interpret authzModes as a list similar to the way the apiserver does?  That would change this code quite a bit.  But it might be good to mirror what the apiserver does.",
        "createdAt" : "2017-02-21T21:57:28Z",
        "updatedAt" : "2017-02-23T13:30:42Z",
        "lastEditedBy" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "tags" : [
        ]
      },
      {
        "id" : "34ae5de9-41b8-4ac8-88cc-99fe49d4f992",
        "parentId" : "6a124ac0-96e5-44dd-bff3-8f22cce7d85c",
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "Yea, that might make sense. However, if we do decide so (please file an issue and ping me), that's for an other PR to avoid doing too many things in one.",
        "createdAt" : "2017-02-21T22:13:01Z",
        "updatedAt" : "2017-02-23T13:30:42Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      }
    ],
    "commit" : "3c322d04de52d6f3dcf5e804ebbab11bfbf28a0a",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +458,462 @@\t// RBAC is always on. If the user specified\n\tauthzModes := []string{authzmodes.ModeRBAC}\n\tif len(authzMode) != 0 && authzMode != authzmodes.ModeRBAC {\n\t\tauthzModes = append(authzModes, authzMode)\n\t}"
  },
  {
    "id" : "466efd5d-1e7c-40dd-a133-e27106e651fe",
    "prId" : 39846,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/39846#pullrequestreview-16888961",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b0073e28-e665-4f67-860d-7d0d7c431f0f",
        "parentId" : null,
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "@liggitt @deads2k Do we have well-defined names for these files yet or do these names look good?",
        "createdAt" : "2017-01-16T21:33:35Z",
        "updatedAt" : "2017-01-18T22:03:09Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      },
      {
        "id" : "354fd5ac-2aad-476b-a425-60d95fae31d8",
        "parentId" : "b0073e28-e665-4f67-860d-7d0d7c431f0f",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "the apiserver has no defaults for these... the values used in the kube-up shell scripts is the only known value we have, but I wouldn't take that as normative",
        "createdAt" : "2017-01-16T21:54:22Z",
        "updatedAt" : "2017-01-18T22:03:09Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "f46bf42ba0b1cbcb2cb1d0aec0d4097d91572eed",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +51,55 @@\tkubeScheduler                  = \"kube-scheduler\"\n\tkubeProxy                      = \"kube-proxy\"\n\tauthorizationPolicyFile        = \"abac_policy.json\"\n\tauthorizationWebhookConfigFile = \"webhook_authz.conf\"\n)"
  },
  {
    "id" : "9b16d13c-2640-435b-a6d2-b7e11be2b02c",
    "prId" : 39638,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/39638#pullrequestreview-16111984",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9c0ef495-92fd-4185-8536-780da48c9332",
        "parentId" : null,
        "authorId" : "0ac5d6cd-da87-46a2-9b30-0d21db1063a2",
        "body" : "Should we use `path/filepath` instead in order to provide OS-agnostic code? Windows Containers support is alpha and there's WIP that will make Windows easier to adopt, and I'd like to see `kubeadm` running on it as well some time in the future.",
        "createdAt" : "2017-01-10T15:49:41Z",
        "updatedAt" : "2017-01-21T09:15:46Z",
        "lastEditedBy" : "0ac5d6cd-da87-46a2-9b30-0d21db1063a2",
        "tags" : [
        ]
      },
      {
        "id" : "17887456-b72a-47a4-891f-7ed67c505ded",
        "parentId" : "9c0ef495-92fd-4185-8536-780da48c9332",
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "So `path` isn't cross-platform? How strange, didn't know that!\r\nBut I would prefer a PR that does that only, because there are lots of them I think\r\nSounds good? We could open an issue for it",
        "createdAt" : "2017-01-11T09:23:10Z",
        "updatedAt" : "2017-01-21T09:15:46Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      },
      {
        "id" : "ffe3b7c9-f30a-4797-a8d2-91f5d8bfd31e",
        "parentId" : "9c0ef495-92fd-4185-8536-780da48c9332",
        "authorId" : "0ac5d6cd-da87-46a2-9b30-0d21db1063a2",
        "body" : "Agreed. https://github.com/kubernetes/kubeadm/issues/108",
        "createdAt" : "2017-01-11T10:51:47Z",
        "updatedAt" : "2017-01-21T09:15:46Z",
        "lastEditedBy" : "0ac5d6cd-da87-46a2-9b30-0d21db1063a2",
        "tags" : [
        ]
      }
    ],
    "commit" : "e8ebfa02ff4731c3d8290c63d8065c0fb997a06c",
    "line" : null,
    "diffHunk" : "@@ -1,1 +304,308 @@\nfunc getCertFilePath(certName string) string {\n\treturn path.Join(kubeadmapi.GlobalEnvParams.HostPKIPath, certName)\n}\n"
  },
  {
    "id" : "a753e5c1-0173-44e9-b65b-d385e6da7e35",
    "prId" : 39638,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/39638#pullrequestreview-16112179",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "99e4ab6a-ba27-408a-81de-4cd4008f197a",
        "parentId" : null,
        "authorId" : "0ac5d6cd-da87-46a2-9b30-0d21db1063a2",
        "body" : "Picking on an ongoing debate in a different PR, should we aim for using templates or similar? Not a blocker to this PR but it's important to create new issues to identify things we want to do in the future.",
        "createdAt" : "2017-01-10T15:51:37Z",
        "updatedAt" : "2017-01-21T09:15:46Z",
        "lastEditedBy" : "0ac5d6cd-da87-46a2-9b30-0d21db1063a2",
        "tags" : [
        ]
      },
      {
        "id" : "0f78d5f6-b4d6-4a8d-b85f-9e8546d2594b",
        "parentId" : "99e4ab6a-ba27-408a-81de-4cd4008f197a",
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "In my next PR, I'm refactoring the cloudprovider phase (step 3), and I'm gonna look into if it makes sense to use templates then, it might or might not do.\r\n",
        "createdAt" : "2017-01-11T09:25:09Z",
        "updatedAt" : "2017-01-21T09:15:46Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      },
      {
        "id" : "cafa1f1d-d79c-4e12-84de-4b71ac41f315",
        "parentId" : "99e4ab6a-ba27-408a-81de-4cd4008f197a",
        "authorId" : "0ac5d6cd-da87-46a2-9b30-0d21db1063a2",
        "body" : "OK. If you believe it makes sense I'd suggest doing it in a separate PR just for that.",
        "createdAt" : "2017-01-11T10:52:58Z",
        "updatedAt" : "2017-01-21T09:15:46Z",
        "lastEditedBy" : "0ac5d6cd-da87-46a2-9b30-0d21db1063a2",
        "tags" : [
        ]
      }
    ],
    "commit" : "e8ebfa02ff4731c3d8290c63d8065c0fb997a06c",
    "line" : null,
    "diffHunk" : "@@ -1,1 +412,416 @@\t\t\"--insecure-experimental-approve-all-kubelet-csrs-for-group=\"+KubeletBootstrapGroup,\n\t)\n\n\tif cfg.CloudProvider != \"\" {\n\t\tcommand = append(command, \"--cloud-provider=\"+cfg.CloudProvider)"
  },
  {
    "id" : "9092793c-3b35-4880-84f2-216ca197b863",
    "prId" : 38709,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/38709#pullrequestreview-12716421",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "46e23bce-7f10-4c25-bd32-ffefc710be15",
        "parentId" : null,
        "authorId" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "body" : "1.5.1?",
        "createdAt" : "2016-12-13T16:19:48Z",
        "updatedAt" : "2016-12-13T16:20:30Z",
        "lastEditedBy" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "tags" : [
        ]
      },
      {
        "id" : "bb13be8d-8d3c-4a34-9b06-39cd2d756992",
        "parentId" : "46e23bce-7f10-4c25-bd32-ffefc710be15",
        "authorId" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "body" : "Never mind",
        "createdAt" : "2016-12-13T16:21:22Z",
        "updatedAt" : "2016-12-13T16:21:22Z",
        "lastEditedBy" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "tags" : [
        ]
      }
    ],
    "commit" : "96850dc6005a88bb9a49415d013953cec3497942",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +57,61 @@\n\t// Minimum version of kube-apiserver that has to have --anonymous-auth=false set\n\tanonAuthDisableAPIServerMinVersion = semver.MustParse(\"1.5.0\")\n)\n"
  },
  {
    "id" : "db8cdb29-1e67-4a1c-b3f5-98f51c4ae600",
    "prId" : 35119,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/35119#pullrequestreview-5263041",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "06be047a-a48e-46ca-9d1e-2608768f0a77",
        "parentId" : null,
        "authorId" : "ad0a3561-db60-47a9-b82f-ac613199f968",
        "body" : "Why was this leading path removed? Should the path to hyperkube above still be absolute?\n",
        "createdAt" : "2016-10-20T20:00:00Z",
        "updatedAt" : "2016-10-20T20:00:15Z",
        "lastEditedBy" : "ad0a3561-db60-47a9-b82f-ac613199f968",
        "tags" : [
        ]
      },
      {
        "id" : "8c4bc0d0-0ea4-44bf-a3c9-33fb493db4d1",
        "parentId" : "06be047a-a48e-46ca-9d1e-2608768f0a77",
        "authorId" : "d37d9758-bdf5-4c23-a40e-a85099689a0c",
        "body" : "No, it's not in the path...\n",
        "createdAt" : "2016-10-21T14:08:14Z",
        "updatedAt" : "2016-10-21T14:08:14Z",
        "lastEditedBy" : "d37d9758-bdf5-4c23-a40e-a85099689a0c",
        "tags" : [
        ]
      }
    ],
    "commit" : "b7b082265457fe1ded9358b5afe97a2e5887b5bb",
    "line" : 70,
    "diffHunk" : "@@ -1,1 +227,231 @@\t\tcommand = []string{\"/hyperkube\", component}\n\t} else {\n\t\tcommand = []string{\"kube-\" + component}\n\t}\n\tcommand = append(command, envParams[\"component_loglevel\"])"
  },
  {
    "id" : "704f8636-3e0b-4620-b101-d0726331fafe",
    "prId" : 33262,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/33262#pullrequestreview-1390089",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "36a23e71-bf6b-4899-b868-670b3e868105",
        "parentId" : null,
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "@pires We should definitely document that the `--external-etcd-cafile`, `--external-etcd-certfile` and `--external-etcd-keyfile` **only can** start with `/etc/ssl/certs` or just dump the individual parameters in favor for `--external-etcd-certdir` and fix this\n",
        "createdAt" : "2016-09-23T19:40:47Z",
        "updatedAt" : "2016-09-26T08:13:51Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      }
    ],
    "commit" : "3a4613d3b25dd1944a7f26b6d2037c9e82fcde7e",
    "line" : 150,
    "diffHunk" : "@@ -1,1 +148,152 @@\t\tVolumeSource: api.VolumeSource{\n\t\t\t// TODO(phase1+) make path configurable\n\t\t\tHostPath: &api.HostPathVolumeSource{Path: \"/etc/ssl/certs\"},\n\t\t},\n\t}"
  },
  {
    "id" : "dd7a040a-c554-4d79-9dc6-bcbe86041a91",
    "prId" : 33262,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/33262#pullrequestreview-1401884",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4eee6506-5961-472d-8fa2-fd4cd8c24268",
        "parentId" : null,
        "authorId" : "ad0a3561-db60-47a9-b82f-ac613199f968",
        "body" : "I would split this up into 3 separate commands, one for each component. Other than the hyperkube logic, they really don't share much, and should probably be separate.\n",
        "createdAt" : "2016-09-23T22:25:22Z",
        "updatedAt" : "2016-09-26T08:13:51Z",
        "lastEditedBy" : "ad0a3561-db60-47a9-b82f-ac613199f968",
        "tags" : [
        ]
      }
    ],
    "commit" : "3a4613d3b25dd1944a7f26b6d2037c9e82fcde7e",
    "line" : 220,
    "diffHunk" : "@@ -1,1 +218,222 @@}\n\nfunc getComponentCommand(component string, s *kubeadmapi.KubeadmConfig) (command []string) {\n\tbaseFlags := map[string][]string{\n\t\tapiServer: {"
  }
]