[
  {
    "id" : "19406e27-f568-4812-86de-c1652c9c1683",
    "prId" : 33262,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/33262#pullrequestreview-1453430",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2a325a48-3c4c-4379-a2e1-d68d376c9604",
        "parentId" : null,
        "authorId" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "body" : "Creating a daemonset per arch seems a little advanced and may confuse people when they list the kube-system namespace.  I imagine mixed-arch clusters are going to be rare/advanced.  Perhaps just default to the current arch and make this be an advanced thing as we go down that path?\n",
        "createdAt" : "2016-09-23T23:47:21Z",
        "updatedAt" : "2016-09-26T08:13:51Z",
        "lastEditedBy" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "tags" : [
        ]
      },
      {
        "id" : "7994ce61-dff5-4bc0-a95a-96552afd161e",
        "parentId" : "2a325a48-3c4c-4379-a2e1-d68d376c9604",
        "authorId" : "d37d9758-bdf5-4c23-a40e-a85099689a0c",
        "body" : "@luxas added this, I let him comment. I'd be happy if we defaulted to current arch. We also have a solution for using new multi-arch image capability, but it only works with Docker Hub (see [registry API v2-2](https://github.com/docker/distribution/blob/master/docs/spec/manifest-v2-2.md) and https://github.com/kubernetes/release/pull/87).\n",
        "createdAt" : "2016-09-24T11:19:50Z",
        "updatedAt" : "2016-09-26T08:13:51Z",
        "lastEditedBy" : "d37d9758-bdf5-4c23-a40e-a85099689a0c",
        "tags" : [
        ]
      },
      {
        "id" : "6754f3f7-844d-420d-90fb-b6d526b67c10",
        "parentId" : "2a325a48-3c4c-4379-a2e1-d68d376c9604",
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "This will be here and will be documented as well.\nIt's here until gcr.io supports v2 schema 2 (cc @aronchick): https://twitter.com/aronchick/status/779048421738946560\n\nAlso read: https://github.com/kubernetes/kubernetes/blob/master/docs/proposals/multi-platform.md which is accepted if you want more details.\n\nI totally agree we should end up with manifest lists, but that's blocked for now.\n\nkubeadm will/should be a opinionated way to set up Kubernetes on the other architectures as well, and there are probably more folks using Kubernetes on arm/arm64/ppc64le than you think\n",
        "createdAt" : "2016-09-24T15:07:41Z",
        "updatedAt" : "2016-09-26T08:13:51Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      },
      {
        "id" : "521a8755-d991-4191-b806-fd5ae5730371",
        "parentId" : "2a325a48-3c4c-4379-a2e1-d68d376c9604",
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "I vote for using current architecture. That seems most reasonable until gcr supports v2 schema 2. I think creating 3 daemonsets will confuse users.\n",
        "createdAt" : "2016-09-24T17:09:10Z",
        "updatedAt" : "2016-09-26T08:13:51Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      },
      {
        "id" : "06b9117b-94e1-4f24-b81a-933783a6cecf",
        "parentId" : "2a325a48-3c4c-4379-a2e1-d68d376c9604",
        "authorId" : "d37d9758-bdf5-4c23-a40e-a85099689a0c",
        "body" : "> I think creating 3 daemonsets will confuse users.\n\nI've had exactly the same concern, and I've raised it with @luxas already.\n\n@luxas could you please make a PR ASAP to update this, once it's not just me thinking this?\n",
        "createdAt" : "2016-09-25T14:14:39Z",
        "updatedAt" : "2016-09-26T08:13:51Z",
        "lastEditedBy" : "d37d9758-bdf5-4c23-a40e-a85099689a0c",
        "tags" : [
        ]
      }
    ],
    "commit" : "3a4613d3b25dd1944a7f26b6d2037c9e82fcde7e",
    "line" : 236,
    "diffHunk" : "@@ -1,1 +234,238 @@\tarches := [3]string{\"amd64\", \"arm\", \"arm64\"}\n\n\tfor _, arch := range arches {\n\t\tkubeProxyDaemonSet := NewDaemonSet(kubeProxy+\"-\"+arch, createKubeProxyPodSpec(s, arch))\n\t\tSetMasterTaintTolerations(&kubeProxyDaemonSet.Spec.Template.ObjectMeta)"
  },
  {
    "id" : "8afa55de-6a14-4937-bf2f-fef430ad398e",
    "prId" : 33262,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/33262#pullrequestreview-1453504",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f3b3ccb7-ce06-4920-81e7-d136cbec32b5",
        "parentId" : null,
        "authorId" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "body" : "Do we want DNS to have master node affinity?\n",
        "createdAt" : "2016-09-23T23:50:34Z",
        "updatedAt" : "2016-09-26T08:13:51Z",
        "lastEditedBy" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "tags" : [
        ]
      },
      {
        "id" : "401f823d-318b-42e4-afdd-6f9edc40e3e9",
        "parentId" : "f3b3ccb7-ce06-4920-81e7-d136cbec32b5",
        "authorId" : "d37d9758-bdf5-4c23-a40e-a85099689a0c",
        "body" : "It's not affinity, just toleration, i.e. it may if it has to. It seems like DNS is critical enough.\n",
        "createdAt" : "2016-09-24T11:17:35Z",
        "updatedAt" : "2016-09-26T08:13:51Z",
        "lastEditedBy" : "d37d9758-bdf5-4c23-a40e-a85099689a0c",
        "tags" : [
        ]
      },
      {
        "id" : "a2a0b7d1-3b21-4218-8f14-8aa3a36d7858",
        "parentId" : "f3b3ccb7-ce06-4920-81e7-d136cbec32b5",
        "authorId" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "body" : "For efficiency sake, it might be best to pin it to the master.  If it gets scheduled on another node instead of the master then it is taking up space that could be used by a workload.\n",
        "createdAt" : "2016-09-24T14:51:57Z",
        "updatedAt" : "2016-09-26T08:13:51Z",
        "lastEditedBy" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "tags" : [
        ]
      },
      {
        "id" : "4f400587-f086-4c09-aa5a-829a9cbcfa4f",
        "parentId" : "f3b3ccb7-ce06-4920-81e7-d136cbec32b5",
        "authorId" : "d37d9758-bdf5-4c23-a40e-a85099689a0c",
        "body" : "Ah, you are actually suggesting to add master affinity, that makes sense, but do we need this right now?\n",
        "createdAt" : "2016-09-24T16:21:15Z",
        "updatedAt" : "2016-09-26T08:13:51Z",
        "lastEditedBy" : "d37d9758-bdf5-4c23-a40e-a85099689a0c",
        "tags" : [
        ]
      },
      {
        "id" : "31d5ae82-ebfa-4983-b781-cd808d676c6c",
        "parentId" : "f3b3ccb7-ce06-4920-81e7-d136cbec32b5",
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "@jbeda I'd prefer to leave it as is as running kube-dns on the cluster is the standard deployment. I don't see a good reason to diverge from that.\n",
        "createdAt" : "2016-09-24T17:12:33Z",
        "updatedAt" : "2016-09-26T08:13:51Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      },
      {
        "id" : "dc96b757-bc7b-4891-912d-eed7fbb60014",
        "parentId" : "f3b3ccb7-ce06-4920-81e7-d136cbec32b5",
        "authorId" : "d37d9758-bdf5-4c23-a40e-a85099689a0c",
        "body" : "@mikedanese I agree.\n\n> If it gets scheduled on another node instead of the master then it is taking up space that could be used by a workload.\n\nThis sounds like all the add-ons would have to run on master...\n",
        "createdAt" : "2016-09-25T14:17:16Z",
        "updatedAt" : "2016-09-26T08:13:51Z",
        "lastEditedBy" : "d37d9758-bdf5-4c23-a40e-a85099689a0c",
        "tags" : [
        ]
      }
    ],
    "commit" : "3a4613d3b25dd1944a7f26b6d2037c9e82fcde7e",
    "line" : 248,
    "diffHunk" : "@@ -1,1 +246,250 @@\n\tkubeDNSDeployment := NewDeployment(\"kube-dns\", 1, createKubeDNSPodSpec(s))\n\tSetMasterTaintTolerations(&kubeDNSDeployment.Spec.Template.ObjectMeta)\n\n\tif _, err := client.Extensions().Deployments(api.NamespaceSystem).Create(kubeDNSDeployment); err != nil {"
  }
]