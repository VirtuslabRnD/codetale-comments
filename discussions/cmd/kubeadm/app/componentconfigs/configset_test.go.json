[
  {
    "id" : "8bf736de-4974-41cb-a5bb-d8d0a1a29e22",
    "prId" : 91980,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/91980#pullrequestreview-428194607",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cf11ea7a-8ba7-4ec4-b293-ce70537b7840",
        "parentId" : null,
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "maybe this function should be local to TestFetchFromClusterWithLocalUpgrades if it's used only there.",
        "createdAt" : "2020-06-10T14:21:36Z",
        "updatedAt" : "2020-06-22T13:30:12Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      },
      {
        "id" : "cb7a6782-5e19-4ea4-a7b6-bdf6664745cb",
        "parentId" : "cf11ea7a-8ba7-4ec4-b293-ce70537b7840",
        "authorId" : "cccc7bed-95f4-42a9-83ef-6ba1a4dca7ec",
        "body" : "For now it's used only there. But I can replace a lot of the v1.ConfigMaps with it in this file and the results will be more readable. Hence, I kept it directly in the file for future use.",
        "createdAt" : "2020-06-10T15:38:12Z",
        "updatedAt" : "2020-06-22T13:30:12Z",
        "lastEditedBy" : "cccc7bed-95f4-42a9-83ef-6ba1a4dca7ec",
        "tags" : [
        ]
      },
      {
        "id" : "c9b775c9-2663-46b0-b3d1-14eae6c71388",
        "parentId" : "cf11ea7a-8ba7-4ec4-b293-ce70537b7840",
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "ok",
        "createdAt" : "2020-06-10T15:49:27Z",
        "updatedAt" : "2020-06-22T13:30:12Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      }
    ],
    "commit" : "1d2d15ee033a55767dfb84261940f719a963b446",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +112,116 @@}\n\nfunc kubeproxyConfigMap(contents string) *v1.ConfigMap {\n\treturn &v1.ConfigMap{\n\t\tObjectMeta: metav1.ObjectMeta{"
  },
  {
    "id" : "b7feff72-ad95-4ba9-a9f0-27b37e5db853",
    "prId" : 91980,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/91980#pullrequestreview-434908649",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "74521731-9ec5-43e8-bec3-30c9186fd8fc",
        "parentId" : null,
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "can we use this here?\r\n`if (err != nil) != test.expectedErr ...`",
        "createdAt" : "2020-06-10T14:28:38Z",
        "updatedAt" : "2020-06-22T13:30:12Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      },
      {
        "id" : "1c1f80ff-c78d-477b-a3cd-52ba36f4cda8",
        "parentId" : "74521731-9ec5-43e8-bec3-30c9186fd8fc",
        "authorId" : "cccc7bed-95f4-42a9-83ef-6ba1a4dca7ec",
        "body" : "I am personally not very fond of this style especially when we have a more complex test validity check, than just \"check if the func returned or not error as expected\".",
        "createdAt" : "2020-06-22T13:13:09Z",
        "updatedAt" : "2020-06-22T13:30:12Z",
        "lastEditedBy" : "cccc7bed-95f4-42a9-83ef-6ba1a4dca7ec",
        "tags" : [
        ]
      }
    ],
    "commit" : "1d2d15ee033a55767dfb84261940f719a963b446",
    "line" : 116,
    "diffHunk" : "@@ -1,1 +223,227 @@\n\t\t\terr = FetchFromClusterWithLocalOverwrites(clusterCfg, client, docmap)\n\t\t\tif err != nil {\n\t\t\t\tif !test.expectedErr {\n\t\t\t\t\tt.Errorf(\"unexpected failure: %v\", err)"
  }
]