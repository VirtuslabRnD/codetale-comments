[
  {
    "id" : "66139f4f-1f42-4b3a-b866-7d6a8f581c7c",
    "prId" : 95991,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/95991#pullrequestreview-521543993",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a9cb0472-8bf0-4e12-90ed-00292588b566",
        "parentId" : null,
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "the KEP mentions\r\n> Recursion will stop on pointers as values for those are usually not logged\r\n\r\nwouldn't that mean that TokenAuth and ClientCertAuth would not be filtered regardless as pointer values in the struct?\r\nalso kubeConfigSpec or its fields are not logged during runtime.\r\n",
        "createdAt" : "2020-10-29T19:54:30Z",
        "updatedAt" : "2020-10-30T17:32:35Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      },
      {
        "id" : "9361e8c9-cea3-4268-bc58-63945fb5d9f0",
        "parentId" : "a9cb0472-8bf0-4e12-90ed-00292588b566",
        "authorId" : "b112ea13-32cd-4220-9b55-14ca54cb7a3c",
        "body" : "> Recursion will stop on pointers as values for those are usually not logged\r\n\r\nI think (or hope) this is a typo or misphrasing in the KEP?  While (raw) pointers are rarely meaningful in logs, I feel like pointers are routinely logged on the understanding that they will render in logs as `&{foo bar baz}`.\r\n\r\nAs a result, any log call with a tagged reference value, like those here, _should_ be filtered, because the underlying value will be rendered otherwise.  However, for pointers of greater depth, e.g. `TokenAuthRef **tokenAuth`, recursion could be halted, since logging an address is unlikely to present a security risk.\r\n\r\n> also kubeConfigSpec or its fields are not logged during runtime.\r\n\r\nAnd indeed it should not be, exactly because of the potential of leaking these credentials.  KEP-1753 and KEP-1933 are defensive measures against future developer mistakes.  Such mistakes [are not uncommon](https://groups.google.com/g/kubernetes-security-announce/c/9d0gPe7SCM8).",
        "createdAt" : "2020-10-29T20:53:46Z",
        "updatedAt" : "2020-10-30T17:32:35Z",
        "lastEditedBy" : "b112ea13-32cd-4220-9b55-14ca54cb7a3c",
        "tags" : [
        ]
      },
      {
        "id" : "c8bec3a8-c5ef-4132-a543-6b5c210489ca",
        "parentId" : "a9cb0472-8bf0-4e12-90ed-00292588b566",
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "looks like the KEP might need a minor clarification around the referenced sentence.",
        "createdAt" : "2020-10-30T23:26:51Z",
        "updatedAt" : "2020-10-30T23:26:51Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      },
      {
        "id" : "77612b2e-25ce-446e-ac54-532e951dd73b",
        "parentId" : "a9cb0472-8bf0-4e12-90ed-00292588b566",
        "authorId" : "1a61efa4-a385-482c-bcf4-5798db43144e",
        "body" : "I think `klog.Infof(\"%+v\", foo{pointer: &bar{baz: \"secret\"}})` won't print `secret`, but `klog.Infof(\"%v\", &bar{baz: \"secret\"})` will, so only on the initial argument do we need to dereference pointers, not while recursing, is my understanding correct?",
        "createdAt" : "2020-11-02T11:23:38Z",
        "updatedAt" : "2020-11-02T11:23:38Z",
        "lastEditedBy" : "1a61efa4-a385-482c-bcf4-5798db43144e",
        "tags" : [
        ]
      }
    ],
    "commit" : "8644f3ff8391c40a7076bc681f86e5fbfb64495b",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +63,67 @@\tClientName     string\n\tTokenAuth      *tokenAuth      `datapolicy:\"token\"`\n\tClientCertAuth *clientCertAuth `datapolicy:\"security-key\"`\n}\n"
  },
  {
    "id" : "21d07a21-e64a-4a6f-ab50-7d07945dc8a9",
    "prId" : 94988,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/94988#pullrequestreview-497017485",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2f2de149-241b-4cb4-b55b-7413617f8e1b",
        "parentId" : null,
        "authorId" : "8a27151d-3530-4221-90e8-48b3a85cba37",
        "body" : "Should we use certs.UsingExternalCA for determining if we are in external CA mode?",
        "createdAt" : "2020-09-25T08:56:13Z",
        "updatedAt" : "2020-09-25T08:56:18Z",
        "lastEditedBy" : "8a27151d-3530-4221-90e8-48b3a85cba37",
        "tags" : [
        ]
      },
      {
        "id" : "eb5bc258-51fe-47c3-a9a8-09b2ee15036a",
        "parentId" : "2f2de149-241b-4cb4-b55b-7413617f8e1b",
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "i think UsingExternalCA and UsingExternalFrontProxyCA should only check existence of .key files.\r\n\r\n.key files missing would indicate to kubeadm about the general assumption of \"external CA\", but the validation of certificate signatures should be a separate step based on the .crt.\r\n",
        "createdAt" : "2020-09-26T16:55:23Z",
        "updatedAt" : "2020-09-26T16:55:50Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      }
    ],
    "commit" : "7c783fa374e1a48d88409ee7f9bd01836c40542f",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +75,79 @@\tif _, err := os.Stat(caKeyPath); os.IsNotExist(err) {\n\t\texternaCA = true\n\t}\n\n\tfiles := []string{"
  },
  {
    "id" : "73026a4d-6e3a-4cb7-bea8-5222abb159da",
    "prId" : 94504,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/94504#pullrequestreview-497835090",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c2712c33-da3f-401d-943e-fa9dee26428a",
        "parentId" : null,
        "authorId" : "0de88c3b-1f1a-401f-9fd1-cd63adc590fd",
        "body" : "Should we move this comment to line 129 and keep the line 128 empty? ",
        "createdAt" : "2020-09-16T18:00:51Z",
        "updatedAt" : "2020-09-16T18:01:29Z",
        "lastEditedBy" : "0de88c3b-1f1a-401f-9fd1-cd63adc590fd",
        "tags" : [
        ]
      },
      {
        "id" : "13fc790d-aa06-408f-a30d-513ddcf21c21",
        "parentId" : "c2712c33-da3f-401d-943e-fa9dee26428a",
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "i think it's consistent with the other function `WriteKubeConfigWithClientCert` where `// Validate period` is printed right after a line with `}`",
        "createdAt" : "2020-09-28T19:33:40Z",
        "updatedAt" : "2020-09-28T19:33:40Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      }
    ],
    "commit" : "b5b9698fbf43152a950504a0b68d0b4b2eda6d7b",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +126,130 @@\t\treturn nil, errors.Wrap(err, \"couldn't create a kubeconfig; the CA files couldn't be loaded\")\n\t}\n\t// Validate period\n\tcertsphase.CheckCertificatePeriodValidity(kubeadmconstants.CACertAndKeyBaseName, caCert)\n"
  },
  {
    "id" : "c93e2e37-8055-4a94-bc6b-8e5cd462d9b0",
    "prId" : 94398,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/94398#pullrequestreview-479859205",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "76abe31a-3087-412d-ac99-1a4391c731d4",
        "parentId" : null,
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "@fabriziopandini alternatively i can make GetControlPlaneEndpoint() return `controlPlaneEndpoint, localAPIEndpoint, error`\r\n\r\nthen the localAPIEndpoint return, needs to be ignored in a few places in the codebase.",
        "createdAt" : "2020-09-01T15:20:13Z",
        "updatedAt" : "2020-09-01T16:38:44Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      },
      {
        "id" : "89b5a3ac-7447-4dd5-897a-5a33775cbf2a",
        "parentId" : "76abe31a-3087-412d-ac99-1a4391c731d4",
        "authorId" : "8a27151d-3530-4221-90e8-48b3a85cba37",
        "body" : "I'm ok with the solution you are proposing.\r\nHaving `GetControlPlaneEndpoint` returning two endpoints seems a little bit weird to me...",
        "createdAt" : "2020-09-01T15:28:34Z",
        "updatedAt" : "2020-09-01T16:38:44Z",
        "lastEditedBy" : "8a27151d-3530-4221-90e8-48b3a85cba37",
        "tags" : [
        ]
      }
    ],
    "commit" : "d9441906c4155173ce1a75421d8fcd1d2f79c471",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +363,367 @@\nfunc getKubeConfigSpecsBase(cfg *kubeadmapi.InitConfiguration) (map[string]*kubeConfigSpec, error) {\n\tcontrolPlaneEndpoint, err := kubeadmutil.GetControlPlaneEndpoint(cfg.ControlPlaneEndpoint, &cfg.LocalAPIEndpoint)\n\tif err != nil {\n\t\treturn nil, err"
  },
  {
    "id" : "fdcdfafb-0d0d-46b9-b192-888c2f8f0e37",
    "prId" : 94398,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/94398#pullrequestreview-479906163",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6a8c8617-d768-4957-b2da-868a7ee08473",
        "parentId" : null,
        "authorId" : "e2ca6907-6765-444e-8bf6-1452233150d6",
        "body" : "for control plane nodes, it might make sense for the kubelet to speak to the local API server ? (e.g. dynamic environments, machines that are using DHCP where the lease expire)",
        "createdAt" : "2020-09-01T15:36:53Z",
        "updatedAt" : "2020-09-01T16:38:44Z",
        "lastEditedBy" : "e2ca6907-6765-444e-8bf6-1452233150d6",
        "tags" : [
        ]
      },
      {
        "id" : "be5d6e84-b64b-4f35-ab86-51d6da3d2022",
        "parentId" : "6a8c8617-d768-4957-b2da-868a7ee08473",
        "authorId" : "8a27151d-3530-4221-90e8-48b3a85cba37",
        "body" : "From the issue I understood this is going to be tackled in a separated PR, is this right @neolit123 ",
        "createdAt" : "2020-09-01T15:41:02Z",
        "updatedAt" : "2020-09-01T16:38:44Z",
        "lastEditedBy" : "8a27151d-3530-4221-90e8-48b3a85cba37",
        "tags" : [
        ]
      },
      {
        "id" : "ec7dfdb4-6e84-49eb-ae3d-7c88afd21f7b",
        "parentId" : "6a8c8617-d768-4957-b2da-868a7ee08473",
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "that is true and we spoke about this yesterday.\r\n\r\nthe problem is that kubeadm join has a kubelet-start phase that blocks until it connects to an api-server at the CPE.\r\nhttps://github.com/kubernetes/kubernetes/blob/f2e3154a140dc192760a5cf8c01f8044e1aa867b/cmd/kubeadm/app/cmd/phases/join/kubelet.go#L99\r\n\r\nhttps://kubernetes.io/docs/reference/setup-tools/kubeadm/kubeadm-join/\r\nthe CP + etcd manifests for this node are written after the TLS bootstrap.\r\n\r\nthis implies rework of the kubeadm join phases and needs some discussion (maybe tomorrow @ office hours).\r\nso potentially a separate PR.",
        "createdAt" : "2020-09-01T15:44:26Z",
        "updatedAt" : "2020-09-01T16:38:44Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      },
      {
        "id" : "ac92405a-0417-4c76-a0fd-627687eb017a",
        "parentId" : "6a8c8617-d768-4957-b2da-868a7ee08473",
        "authorId" : "e2ca6907-6765-444e-8bf6-1452233150d6",
        "body" : "sounds good, I'll join",
        "createdAt" : "2020-09-01T15:46:19Z",
        "updatedAt" : "2020-09-01T16:38:44Z",
        "lastEditedBy" : "e2ca6907-6765-444e-8bf6-1452233150d6",
        "tags" : [
        ]
      },
      {
        "id" : "cbd19e9b-303f-4b7b-b8eb-2167e92ade8b",
        "parentId" : "6a8c8617-d768-4957-b2da-868a7ee08473",
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "i will make this PR not close the issue and we can have multiple checkboxes in it to leave time for investigating the kubelet.conf optional change.",
        "createdAt" : "2020-09-01T15:48:05Z",
        "updatedAt" : "2020-09-01T16:38:44Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      },
      {
        "id" : "f192e684-cfe6-478a-b1f2-7db0701509e7",
        "parentId" : "6a8c8617-d768-4957-b2da-868a7ee08473",
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "done.",
        "createdAt" : "2020-09-01T15:48:38Z",
        "updatedAt" : "2020-09-01T16:38:44Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      },
      {
        "id" : "5dd224f4-c25f-4d52-81ef-3e1a769511d2",
        "parentId" : "6a8c8617-d768-4957-b2da-868a7ee08473",
        "authorId" : "6746e0cc-0c52-4344-889b-945a672c83e3",
        "body" : "+1 to both using the local address for the kubelet and also treating it as a separate PR, this will help to greatly simplify the bootstrapping process when using a load balancer, since the load balancer will not need to be pre-created for bootstrapping.",
        "createdAt" : "2020-09-01T16:09:56Z",
        "updatedAt" : "2020-09-01T16:38:44Z",
        "lastEditedBy" : "6746e0cc-0c52-4344-889b-945a672c83e3",
        "tags" : [
        ]
      }
    ],
    "commit" : "d9441906c4155173ce1a75421d8fcd1d2f79c471",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +381,385 @@\t\t},\n\t\tkubeadmconstants.KubeletKubeConfigFileName: {\n\t\t\tAPIServer:  controlPlaneEndpoint,\n\t\t\tClientName: fmt.Sprintf(\"%s%s\", kubeadmconstants.NodesUserPrefix, cfg.NodeRegistration.Name),\n\t\t\tClientCertAuth: &clientCertAuth{"
  },
  {
    "id" : "f59026d7-78cf-4ff5-a978-ab76fc686bb3",
    "prId" : 92183,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/92183#pullrequestreview-443807132",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "969cebc6-7ab0-405a-89ba-b9d9c79ee945",
        "parentId" : null,
        "authorId" : "8066ee2f-0c16-437d-9b9a-d0d19725550e",
        "body" : "Note to self: Move this to create.",
        "createdAt" : "2020-07-07T11:38:33Z",
        "updatedAt" : "2020-07-09T05:27:27Z",
        "lastEditedBy" : "8066ee2f-0c16-437d-9b9a-d0d19725550e",
        "tags" : [
        ]
      }
    ],
    "commit" : "81554ffdc0b66c98905a2800e078205eb87f4a72",
    "line" : 125,
    "diffHunk" : "@@ -1,1 +183,187 @@\t}\n}\n\n// validateKubeConfig check if the kubeconfig file exist and has the expected CA and server URL\nfunc validateKubeConfig(outDir, filename string, config *clientcmdapi.Config) error {"
  },
  {
    "id" : "a0e7bd87-0c1e-44a2-838c-745f6b18b2a5",
    "prId" : 92183,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/92183#pullrequestreview-443937998",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8e34b249-7bfa-4666-81e6-5fd8fd090857",
        "parentId" : null,
        "authorId" : "8066ee2f-0c16-437d-9b9a-d0d19725550e",
        "body" : "I split this simple snippet into a function so that I can get the same config in the new function below.",
        "createdAt" : "2020-07-07T14:33:00Z",
        "updatedAt" : "2020-07-09T05:27:27Z",
        "lastEditedBy" : "8066ee2f-0c16-437d-9b9a-d0d19725550e",
        "tags" : [
        ]
      }
    ],
    "commit" : "81554ffdc0b66c98905a2800e078205eb87f4a72",
    "line" : 125,
    "diffHunk" : "@@ -1,1 +183,187 @@\t}\n}\n\n// validateKubeConfig check if the kubeconfig file exist and has the expected CA and server URL\nfunc validateKubeConfig(outDir, filename string, config *clientcmdapi.Config) error {"
  },
  {
    "id" : "94876d0e-9408-464f-a81b-b6561e4b6b6d",
    "prId" : 57778,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/57778#pullrequestreview-86311212",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c5c64562-d92b-4375-91ec-2d921bb0cff7",
        "parentId" : null,
        "authorId" : "1256edc4-2c21-4b50-9371-9c0a50744653",
        "body" : "Should the verb here be `%s` for `kubeConfigFilePath`? I don't think formatting wise that this needs to be quoted/escaped.",
        "createdAt" : "2018-01-03T08:04:50Z",
        "updatedAt" : "2018-01-03T08:08:07Z",
        "lastEditedBy" : "1256edc4-2c21-4b50-9371-9c0a50744653",
        "tags" : [
        ]
      },
      {
        "id" : "34474cc5-1bbf-4b0d-9c6d-11f3270a6709",
        "parentId" : "c5c64562-d92b-4375-91ec-2d921bb0cff7",
        "authorId" : "a09f2d48-fec0-4c0d-bd81-6de7378a6ebf",
        "body" : "Yeah it's not necessarily to be quoted, but in order to be consistent with other places in kubeadm, I leave the verb as-is.\r\n\r\n```\r\n[controlplane] Wrote Static Pod manifest for component kube-apiserver to \"/etc/kubernetes/manifests/kube-apiserver.yaml\"\r\n[controlplane] Wrote Static Pod manifest for component kube-controller-manager to \"/etc/kubernetes/manifests/kube-controller-manager.yaml\"\r\n[controlplane] Wrote Static Pod manifest for component kube-scheduler to \"/etc/kubernetes/manifests/kube-scheduler.yaml\"\r\n[etcd] Wrote Static Pod manifest for a local etcd instance to \"/etc/kubernetes/manifests/etcd.yaml\"\r\n[init] Waiting for the kubelet to boot up the control plane as Static Pods from directory \"/etc/kubernetes/manifests\"\r\n```",
        "createdAt" : "2018-01-03T08:11:14Z",
        "updatedAt" : "2018-01-03T08:11:14Z",
        "lastEditedBy" : "a09f2d48-fec0-4c0d-bd81-6de7378a6ebf",
        "tags" : [
        ]
      },
      {
        "id" : "04aef62c-72d7-4543-95ab-a17b79c1a6c3",
        "parentId" : "c5c64562-d92b-4375-91ec-2d921bb0cff7",
        "authorId" : "659c7c1f-39ba-41a7-8331-fcc6b3b5f2fb",
        "body" : "I like quotes in such output. Good to visually distinguish filenames in long output.",
        "createdAt" : "2018-01-03T08:12:19Z",
        "updatedAt" : "2018-01-03T08:12:19Z",
        "lastEditedBy" : "659c7c1f-39ba-41a7-8331-fcc6b3b5f2fb",
        "tags" : [
        ]
      },
      {
        "id" : "9774b317-8afb-47a4-bbb1-88cce263d359",
        "parentId" : "c5c64562-d92b-4375-91ec-2d921bb0cff7",
        "authorId" : "1256edc4-2c21-4b50-9371-9c0a50744653",
        "body" : "Makes sense to me",
        "createdAt" : "2018-01-03T08:12:57Z",
        "updatedAt" : "2018-01-03T08:12:57Z",
        "lastEditedBy" : "1256edc4-2c21-4b50-9371-9c0a50744653",
        "tags" : [
        ]
      }
    ],
    "commit" : "38a8c72f8adc7ba7d2fc2b2478fa50f9cc02ebd2",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +232,236 @@\t\t}\n\n\t\tfmt.Printf(\"[kubeconfig] Wrote KubeConfig file to disk: %q\\n\", kubeConfigFilePath)\n\t\treturn nil\n\t}"
  },
  {
    "id" : "e0ad7ebe-bb24-496c-8cae-c99c76f6df6d",
    "prId" : 57778,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/57778#pullrequestreview-86310178",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "50c4bc30-ddfc-4c6f-b979-f1fea0a094a0",
        "parentId" : null,
        "authorId" : "1256edc4-2c21-4b50-9371-9c0a50744653",
        "body" : "same here",
        "createdAt" : "2018-01-03T08:06:48Z",
        "updatedAt" : "2018-01-03T08:08:07Z",
        "lastEditedBy" : "1256edc4-2c21-4b50-9371-9c0a50744653",
        "tags" : [
        ]
      }
    ],
    "commit" : "38a8c72f8adc7ba7d2fc2b2478fa50f9cc02ebd2",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +259,263 @@\t// Basically, if we find a kubeconfig file with the same path; the same CA cert and the same server URL;\n\t// kubeadm thinks those files are equal and doesn't bother writing a new file\n\tfmt.Printf(\"[kubeconfig] Using existing up-to-date KubeConfig file: %q\\n\", kubeConfigFilePath)\n\n\treturn nil"
  },
  {
    "id" : "8a1102a6-0708-431d-a377-3081d3d6b748",
    "prId" : 49419,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/49419#pullrequestreview-54516926",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6fcb9b81-6e0f-4b66-b996-a52a6eae4675",
        "parentId" : null,
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "nit: CAKey",
        "createdAt" : "2017-08-05T15:08:19Z",
        "updatedAt" : "2017-08-05T19:47:37Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      }
    ],
    "commit" : "f9f91bf18e639a8ecee12391d0fb149539e9a8f8",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +38,42 @@// clientCertAuth struct holds info required to build a client certificate to provide authentication info in a kubeconfig object\ntype clientCertAuth struct {\n\tCaKey         *rsa.PrivateKey\n\tOrganizations []string\n}"
  },
  {
    "id" : "44efc8dd-9ce3-4fd7-a53b-074dc41833b7",
    "prId" : 49419,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/49419#pullrequestreview-54516926",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a0fa867d-7e31-4fd9-b4b2-ae1c62355e3a",
        "parentId" : null,
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "nit: CACert",
        "createdAt" : "2017-08-05T15:08:32Z",
        "updatedAt" : "2017-08-05T19:47:37Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      }
    ],
    "commit" : "f9f91bf18e639a8ecee12391d0fb149539e9a8f8",
    "line" : 48,
    "diffHunk" : "@@ -1,1 +49,53 @@// kubeConfigSpec struct holds info required to build a KubeConfig object\ntype kubeConfigSpec struct {\n\tCaCert         *x509.Certificate\n\tAPIServer      string\n\tClientName     string"
  },
  {
    "id" : "97bcc5dc-a1c3-4435-abb8-0ec8f9e90b0c",
    "prId" : 49419,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/49419#pullrequestreview-54516926",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b9240ea6-13dd-4f9e-ab4f-872047762b88",
        "parentId" : null,
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "nit: inline this in the if clause: `if err := foo(); err != nil {`. Reduces scope, which is good",
        "createdAt" : "2017-08-05T15:10:33Z",
        "updatedAt" : "2017-08-05T19:47:38Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      }
    ],
    "commit" : "f9f91bf18e639a8ecee12391d0fb149539e9a8f8",
    "line" : 152,
    "diffHunk" : "@@ -1,1 +118,122 @@\n\t\t// writes the KubeConfig to disk if it not exists\n\t\terr = createKubeConfigFileIfNotExists(outDir, kubeConfigFileName, config)\n\t\tif err != nil {\n\t\t\treturn err"
  },
  {
    "id" : "29199f07-f34c-41d2-b9e8-a9bf3eca4df2",
    "prId" : 49419,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/49419#pullrequestreview-54516926",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "286c8d36-b5fd-476e-a335-b911223379fc",
        "parentId" : null,
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "I'd love to find a helper func in an auth pkg for this some day.",
        "createdAt" : "2017-08-05T15:11:08Z",
        "updatedAt" : "2017-08-05T19:47:38Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      }
    ],
    "commit" : "f9f91bf18e639a8ecee12391d0fb149539e9a8f8",
    "line" : 189,
    "diffHunk" : "@@ -1,1 +149,153 @@\t\t\tCaCert:     caCert,\n\t\t\tAPIServer:  cfg.GetMasterEndpoint(),\n\t\t\tClientName: fmt.Sprintf(\"system:node:%s\", cfg.NodeName),\n\t\t\tClientCertAuth: &clientCertAuth{\n\t\t\t\tCaKey:         caKey,"
  },
  {
    "id" : "f5fa22cc-c48c-4288-a580-e72349351e6c",
    "prId" : 49419,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/49419#pullrequestreview-54516926",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "74677938-bdd5-4fc2-96e5-ab58c194e08d",
        "parentId" : null,
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "nit: kubeconfig",
        "createdAt" : "2017-08-05T15:11:51Z",
        "updatedAt" : "2017-08-05T19:47:38Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      }
    ],
    "commit" : "f9f91bf18e639a8ecee12391d0fb149539e9a8f8",
    "line" : 241,
    "diffHunk" : "@@ -1,1 +179,183 @@func buildKubeConfigFromSpec(spec *kubeConfigSpec) (*clientcmdapi.Config, error) {\n\n\t// If this kubeconfing should use token\n\tif spec.TokenAuth != nil {\n\t\t// create a kubeconfig with a token"
  },
  {
    "id" : "d89f0abf-ff92-4b91-8246-0d5078f5aa82",
    "prId" : 39846,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/39846#pullrequestreview-16911310",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0767f372-dbf8-46c5-99f0-c3cbd65ae48f",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "add a TODO here to make credentials for the controller manager, kube proxy, and scheduler as well (should do that in a follow-up PR)",
        "createdAt" : "2017-01-17T02:14:21Z",
        "updatedAt" : "2017-01-18T22:03:09Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "f46bf42ba0b1cbcb2cb1d0aec0d4097d91572eed",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +89,93 @@\t\treturn fmt.Errorf(\"couldn't create config for %s: %v\", KubeletKubeConfigClientName, err)\n\t}\n\n\t// TODO make credentials for the controller manager and kube proxy\n"
  }
]