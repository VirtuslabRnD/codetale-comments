[
  {
    "id" : "245f17be-0243-420b-a83a-96dedb8b8126",
    "prId" : 92183,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/92183#pullrequestreview-443937998",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "39d27a15-20eb-4470-b8be-b76a3bbeb4c1",
        "parentId" : null,
        "authorId" : "8066ee2f-0c16-437d-9b9a-d0d19725550e",
        "body" : "I moved this to a separate function where it can be unit tested separately from the complex and slow key and CSR generation.",
        "createdAt" : "2020-07-07T14:28:11Z",
        "updatedAt" : "2020-07-09T05:27:27Z",
        "lastEditedBy" : "8066ee2f-0c16-437d-9b9a-d0d19725550e",
        "tags" : [
        ]
      }
    ],
    "commit" : "81554ffdc0b66c98905a2800e078205eb87f4a72",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +416,420 @@\t}\n\treturn out, nil\n}\n\nfunc createKeyAndCSR(kubeadmConfig *kubeadmapi.InitConfiguration, cert *KubeadmCert) error {"
  },
  {
    "id" : "6218acab-699a-406d-9af2-dee946abce61",
    "prId" : 92183,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/92183#pullrequestreview-443937998",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "22feaa1b-2573-47c0-9cb2-e5645293a450",
        "parentId" : null,
        "authorId" : "8066ee2f-0c16-437d-9b9a-d0d19725550e",
        "body" : "This where I can test the creation of a single key and CSR file and *some* of the error cases.\r\nThis could be made more generic  and reusable in future. See https://github.com/kubernetes/kubernetes/compare/master...wallrj:kubeconfig-builder",
        "createdAt" : "2020-07-07T14:29:42Z",
        "updatedAt" : "2020-07-09T05:27:27Z",
        "lastEditedBy" : "8066ee2f-0c16-437d-9b9a-d0d19725550e",
        "tags" : [
        ]
      }
    ],
    "commit" : "81554ffdc0b66c98905a2800e078205eb87f4a72",
    "line" : 60,
    "diffHunk" : "@@ -1,1 +447,451 @@\t}\n\treturn nil\n}\n\n// CreateDefaultKeysAndCSRFiles is used in ExternalCA mode to create key files"
  },
  {
    "id" : "e24fde8d-2bc2-4065-8e71-2ac8cbc3ed87",
    "prId" : 92183,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/92183#pullrequestreview-443937998",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e43def55-a8aa-41cb-a96e-7e521610b62a",
        "parentId" : null,
        "authorId" : "8066ee2f-0c16-437d-9b9a-d0d19725550e",
        "body" : "This then becomes a simple wrapper which only needs a unit test for the happy path (see below)",
        "createdAt" : "2020-07-07T14:30:11Z",
        "updatedAt" : "2020-07-09T05:27:27Z",
        "lastEditedBy" : "8066ee2f-0c16-437d-9b9a-d0d19725550e",
        "tags" : [
        ]
      }
    ],
    "commit" : "81554ffdc0b66c98905a2800e078205eb87f4a72",
    "line" : 75,
    "diffHunk" : "@@ -1,1 +462,466 @@\t}\n\treturn nil\n}"
  },
  {
    "id" : "4a56fe8e-734e-46a4-9d26-9a4141306b1e",
    "prId" : 67605,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/67605#pullrequestreview-147810909",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "175e0fc3-b786-40f4-8e7f-115bb318423f",
        "parentId" : null,
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "Please use errors.Wrap on error propagation.  ",
        "createdAt" : "2018-08-20T20:12:00Z",
        "updatedAt" : "2018-08-20T20:14:18Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      },
      {
        "id" : "5e82473e-0406-42d7-9984-1018b4d4950c",
        "parentId" : "175e0fc3-b786-40f4-8e7f-115bb318423f",
        "authorId" : "a2762dd2-4f61-45ce-b5d5-d94727263ab7",
        "body" : "We already use fmt.Errorf everywhere, at some point I'd like to just remove them all in one fell swoop. It seems like it might even be automateable",
        "createdAt" : "2018-08-20T20:32:27Z",
        "updatedAt" : "2018-08-20T20:32:27Z",
        "lastEditedBy" : "a2762dd2-4f61-45ce-b5d5-d94727263ab7",
        "tags" : [
        ]
      }
    ],
    "commit" : "394e6b554af0c143615a6824db8864732c0ec672",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +78,82 @@\tcfg, err := k.GetConfig(ic)\n\tif err != nil {\n\t\treturn nil, nil, fmt.Errorf(\"couldn't get configuration for %q CA certificate: %v\", k.Name, err)\n\t}\n\tcaCert, caKey, err := NewCACertAndKey(cfg)"
  },
  {
    "id" : "2762fe3d-2c84-414f-8879-702851e16947",
    "prId" : 67208,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/67208#pullrequestreview-146485062",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "238cd2b0-58ed-405a-846d-e3994ee8a8f6",
        "parentId" : null,
        "authorId" : "8a27151d-3530-4221-90e8-48b3a85cba37",
        "body" : "I would like to see something in this structure that could help in cleaning up `UsingExternalCA` and `SharedCertificateExists` e.g.\r\n- for `UsingExternalCA` we need to know which KubeadmCert is a CA (might be func (k *KubeadmCert) IsCa returning CAName==\"\")\r\n- for `SharedCertificateExists` we could rely on the same function I guess...\r\n\r\nwdyt?",
        "createdAt" : "2018-08-15T13:39:24Z",
        "updatedAt" : "2018-08-15T15:07:34Z",
        "lastEditedBy" : "8a27151d-3530-4221-90e8-48b3a85cba37",
        "tags" : [
        ]
      },
      {
        "id" : "cca73882-e7de-4fd7-a55b-ff36e5a82d85",
        "parentId" : "238cd2b0-58ed-405a-846d-e3994ee8a8f6",
        "authorId" : "a2762dd2-4f61-45ce-b5d5-d94727263ab7",
        "body" : "@fabriziopandini that's for phase 2! I'm trying to keep this change small so it's easier to review, but eventually I'm going to remove all the functions in certs/ and only use the new struct",
        "createdAt" : "2018-08-15T15:06:14Z",
        "updatedAt" : "2018-08-15T15:07:34Z",
        "lastEditedBy" : "a2762dd2-4f61-45ce-b5d5-d94727263ab7",
        "tags" : [
        ]
      }
    ],
    "commit" : "742b258ca293fd3547d64323a3c4e5bff9af1645",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +31,35 @@\n// KubeadmCert represents a certificate that Kubeadm will create to function properly.\ntype KubeadmCert struct {\n\tName     string\n\tBaseName string"
  },
  {
    "id" : "d5ac0307-6a0c-4b41-a3b1-a5666ad3dccb",
    "prId" : 67208,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/67208#pullrequestreview-146479330",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "201e413f-aab7-4c7e-ae35-37eb239c7eeb",
        "parentId" : null,
        "authorId" : "8a27151d-3530-4221-90e8-48b3a85cba37",
        "body" : "I'm a little bit torn about the whole CertificateTree / CertificateMap thing\r\n\r\nWhile It makes perfectly sense to get certificates organised in a tree so you can create stuff in a proper order, I'm not sure it is worth to have two additional views of the certificate list (CertificateTree and CertificateMap) only to get a proper order during creation of certificates. \r\n\r\nWhat about a using simple:\r\n```go\r\nfunc (c Certificates) Create(ic *kubeadmapi.InitConfiguration) error {\r\n\tfor _, cert := range c {\r\n\t\tif cert.IsCA {\r\n\t\t\t// Create CA\r\n\r\n\t\t\t// Create certificates signed by CA\r\n\t\t\tfor _, leaves := range certificateList {\r\n\t\t\t\tif leaves.CAName == Cert.Name {\r\n\t\t\t\t\t\r\n\t\t\t\t\t// Create signed Cert\r\n\t\t\t\t} \r\n\t\t\t}\r\n\t\t} \r\n\t}\r\n}\r\n```\r\nInstead?",
        "createdAt" : "2018-08-15T13:45:33Z",
        "updatedAt" : "2018-08-15T15:07:34Z",
        "lastEditedBy" : "8a27151d-3530-4221-90e8-48b3a85cba37",
        "tags" : [
        ]
      },
      {
        "id" : "316853a6-039b-450e-8951-b12df9170b6d",
        "parentId" : "201e413f-aab7-4c7e-ae35-37eb239c7eeb",
        "authorId" : "a2762dd2-4f61-45ce-b5d5-d94727263ab7",
        "body" : "The CertTree is going to be used in other areas (I'm working on the command line clients right now). There's multiple places where you want to be able to iterate over a hierarchical structure, so I think this is still useful.",
        "createdAt" : "2018-08-15T14:53:27Z",
        "updatedAt" : "2018-08-15T15:07:34Z",
        "lastEditedBy" : "a2762dd2-4f61-45ce-b5d5-d94727263ab7",
        "tags" : [
        ]
      }
    ],
    "commit" : "742b258ca293fd3547d64323a3c4e5bff9af1645",
    "line" : 75,
    "diffHunk" : "@@ -1,1 +73,77 @@\n// CertificateTree is represents a one-level-deep tree, mapping a CA to the certs that depend on it.\ntype CertificateTree map[*KubeadmCert]Certificates\n\n// CreateTree creates the CAs, certs signed by the CAs, and writes them all to disk."
  },
  {
    "id" : "c20e7a39-5614-440b-9774-663171a3313a",
    "prId" : 67208,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/67208#pullrequestreview-146478683",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6e783860-2970-47cf-810d-77806d2903b9",
        "parentId" : null,
        "authorId" : "8a27151d-3530-4221-90e8-48b3a85cba37",
        "body" : "IMO we should implement only a `GetKubeadmCertList` method that, given a cluster configuration, returns the proper list of certificates (this will hide a bit of complexity to the outside world).",
        "createdAt" : "2018-08-15T13:46:22Z",
        "updatedAt" : "2018-08-15T15:07:34Z",
        "lastEditedBy" : "8a27151d-3530-4221-90e8-48b3a85cba37",
        "tags" : [
        ]
      },
      {
        "id" : "b6d0231b-fdb7-44c3-95b4-66e754be9aed",
        "parentId" : "6e783860-2970-47cf-810d-77806d2903b9",
        "authorId" : "a2762dd2-4f61-45ce-b5d5-d94727263ab7",
        "body" : "There's certain contexts (such as constructing the command line tools) where we don't have the configuration, so we need a way to retrieve everything.",
        "createdAt" : "2018-08-15T14:52:10Z",
        "updatedAt" : "2018-08-15T15:07:34Z",
        "lastEditedBy" : "a2762dd2-4f61-45ce-b5d5-d94727263ab7",
        "tags" : [
        ]
      }
    ],
    "commit" : "742b258ca293fd3547d64323a3c4e5bff9af1645",
    "line" : 160,
    "diffHunk" : "@@ -1,1 +158,162 @@\n// GetCertsWithoutEtcd returns all of the certificates kubeadm needs when etcd is hosted externally.\nfunc GetCertsWithoutEtcd() Certificates {\n\treturn Certificates{\n\t\t&KubeadmCertRootCA,"
  }
]