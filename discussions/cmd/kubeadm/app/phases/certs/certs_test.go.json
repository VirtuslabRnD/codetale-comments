[
  {
    "id" : "af32755d-66b3-4c74-aa6c-e15d61328506",
    "prId" : 76381,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/76381#pullrequestreview-225500722",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ff06b871-36c9-4efe-b7f2-c1bfba84c0e2",
        "parentId" : null,
        "authorId" : "cccc7bed-95f4-42a9-83ef-6ba1a4dca7ec",
        "body" : "I think, that we need a check for `test.expectedKey != nil`, because there is a test case where `expectedKey` is not initialized (left to nil).",
        "createdAt" : "2019-04-11T10:56:51Z",
        "updatedAt" : "2019-04-11T10:56:51Z",
        "lastEditedBy" : "cccc7bed-95f4-42a9-83ef-6ba1a4dca7ec",
        "tags" : [
        ]
      },
      {
        "id" : "7ca29c81-eb7f-4e87-aac4-6b1f829a51d6",
        "parentId" : "ff06b871-36c9-4efe-b7f2-c1bfba84c0e2",
        "authorId" : "1f3d109e-1a23-4a7a-b130-47d557e30286",
        "body" : "This code path is unreachable when an error is expected and `test.expectedKey` is `nil` (though it'd be safer to check `test.expectedKey` instead of `expectedErr` indeed).\r\n\r\nBut... after looking at this code a couple of minutes longer I don't understand what it actually checks: it compares private keys and in case of their equality reports an error about the keys not matching. I'd expect the opposite.",
        "createdAt" : "2019-04-11T11:19:16Z",
        "updatedAt" : "2019-04-11T11:21:24Z",
        "lastEditedBy" : "1f3d109e-1a23-4a7a-b130-47d557e30286",
        "tags" : [
        ]
      },
      {
        "id" : "472a5dd6-3fad-4c2f-9870-b5d441da2d82",
        "parentId" : "ff06b871-36c9-4efe-b7f2-c1bfba84c0e2",
        "authorId" : "1f3d109e-1a23-4a7a-b130-47d557e30286",
        "body" : "Oops, the PR got merged already, but I've addressed the comment in https://github.com/kubernetes/kubernetes/pull/76390.",
        "createdAt" : "2019-04-11T12:26:44Z",
        "updatedAt" : "2019-04-11T12:26:44Z",
        "lastEditedBy" : "1f3d109e-1a23-4a7a-b130-47d557e30286",
        "tags" : [
        ]
      }
    ],
    "commit" : "2d77d9a5a925c158673f6b64d501c1087e3e1bce",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +365,369 @@\n\t\t//TODO: check if there is a better method to compare keys\n\t\tif resultingKey.D == test.expectedKey.D {\n\t\t\tt.Error(\"created key does not match expected key\")\n\t\t}"
  },
  {
    "id" : "36c53bb5-b8ab-43f0-bf0c-aba8531c27b7",
    "prId" : 68296,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/68296#pullrequestreview-152988331",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1711325e-c846-499d-8dd3-56f26b174519",
        "parentId" : null,
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "```\r\nerr := CreatePKIAssets(cfg)\r\nif err != nil {\r\n\tif test.expectError {\r\n\t\treturn\r\n\t}\r\n\tt.Fatalf(\"Unexpected error: %v\", err)\r\n}\r\nif test.expectError {\r\n\tt.Fatal(\"Expected error from CreatePKIAssets, got none\")\r\n}\r\n```\r\n\r\ncan this be refactored to the following:\r\n\r\n```\r\nif err := CreatePKIAssets(cfg); (err != nil) != test.expectError {\r\n\tt.Fatalf(\"expected error: %v, got: %v, error: %v\", test.expectError, (err != nil), err)\r\n}\r\n```\r\n",
        "createdAt" : "2018-09-05T21:34:15Z",
        "updatedAt" : "2018-09-06T15:29:00Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      },
      {
        "id" : "0aa3f0fa-66f1-48a4-b4cd-e9fd3a147fe9",
        "parentId" : "1711325e-c846-499d-8dd3-56f26b174519",
        "authorId" : "a2762dd2-4f61-45ce-b5d5-d94727263ab7",
        "body" : "This turns out to not quite be the case: if there's an error and we expect it, we don't want to continue to run assertCertsExist",
        "createdAt" : "2018-09-06T15:27:21Z",
        "updatedAt" : "2018-09-06T15:29:00Z",
        "lastEditedBy" : "a2762dd2-4f61-45ce-b5d5-d94727263ab7",
        "tags" : [
        ]
      }
    ],
    "commit" : "cda8c39f7712931a0efa38db3b82f65273792b54",
    "line" : 71,
    "diffHunk" : "@@ -1,1 +442,446 @@\t\t\twritePKIFiles(t, tmpdir, test.files)\n\n\t\t\terr := CreatePKIAssets(cfg)\n\t\t\tif err != nil {\n\t\t\t\tif test.expectError {"
  },
  {
    "id" : "d45de18f-efe3-4faa-8cb0-ac62bfa52a8f",
    "prId" : 57415,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/57415#pullrequestreview-98309053",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9b376119-d06b-4037-b0e5-7c565d77e3f0",
        "parentId" : null,
        "authorId" : "2eb6ad87-e305-458f-a360-22c64806994c",
        "body" : "More specific: `of etcd server cert and key`",
        "createdAt" : "2018-02-21T18:41:17Z",
        "updatedAt" : "2018-02-24T00:05:51Z",
        "lastEditedBy" : "2eb6ad87-e305-458f-a360-22c64806994c",
        "tags" : [
        ]
      }
    ],
    "commit" : "509e9af5223de6849b7d99dbb53796f794876752",
    "line" : 100,
    "diffHunk" : "@@ -1,1 +330,334 @@\tetcdServerCert, _, err := NewEtcdServerCertAndKey(cfg, caCert, caKey)\n\tif err != nil {\n\t\tt.Fatalf(\"failed creation of cert and key: %v\", err)\n\t}\n"
  }
]