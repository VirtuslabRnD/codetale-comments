[
  {
    "id" : "df90a90d-5758-4248-b434-3ce35ad89d26",
    "prId" : 47342,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/47342#pullrequestreview-45229065",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1d01c706-35a7-4bb9-8636-ee00a03b7a59",
        "parentId" : null,
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "In another PR could we add some cookie labels to at least say kubeadm was here.  It always strikes me as odd to proactively change state.  ",
        "createdAt" : "2017-06-20T18:37:07Z",
        "updatedAt" : "2017-06-24T16:22:01Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      }
    ],
    "commit" : "051db16083fbc7486e71bfafc459112edcf057c1",
    "line" : 54,
    "diffHunk" : "@@ -1,1 +274,278 @@\tnodesRoleBinding.Subjects = newSubjects\n\n\tif _, err := clientset.RbacV1beta1().ClusterRoleBindings().Update(nodesRoleBinding); err != nil {\n\t\treturn err\n\t}"
  },
  {
    "id" : "1c6ea972-6998-4c19-8f05-ea1608ae819f",
    "prId" : 46875,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/46875#pullrequestreview-42207207",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "143e2302-f5a2-4370-8bae-ca4868694b0c",
        "parentId" : null,
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "if already exists, call `.Update()`",
        "createdAt" : "2017-06-02T19:28:53Z",
        "updatedAt" : "2017-06-06T08:44:28Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      },
      {
        "id" : "5e034fa3-9a1d-42a4-9c3b-dfa6914ad5dc",
        "parentId" : "143e2302-f5a2-4370-8bae-ca4868694b0c",
        "authorId" : "f9231906-76cd-4270-87d5-4b97ae98ebb4",
        "body" : "Will calling Update() actually do anything for these service accounts? Based on the creation code above, they just have a name and a namespace, so I thought an Update would just be a no-op. If the service accounts exist, they should already have the same name and namespace, no?",
        "createdAt" : "2017-06-05T21:32:58Z",
        "updatedAt" : "2017-06-06T08:44:28Z",
        "lastEditedBy" : "f9231906-76cd-4270-87d5-4b97ae98ebb4",
        "tags" : [
        ]
      },
      {
        "id" : "68de4d2f-322f-4dd4-9834-fd50369b3ef1",
        "parentId" : "143e2302-f5a2-4370-8bae-ca4868694b0c",
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "Of course!\r\n\r\nYeah, that's correct. I did it mechanically locally without thinking of this special case... this SGTM",
        "createdAt" : "2017-06-06T04:02:24Z",
        "updatedAt" : "2017-06-06T08:44:28Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      }
    ],
    "commit" : "7ffd870c1e97f593177051a9da01d182b060d118",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +68,72 @@\t\t\tif !apierrors.IsAlreadyExists(err) {\n\t\t\t\treturn err\n\t\t\t}\n\t\t}\n\t}"
  },
  {
    "id" : "388bc52f-4e25-4846-8022-b2aa832fe6f7",
    "prId" : 45619,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/45619#pullrequestreview-41135571",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3ca95b6f-82bf-431f-9acf-4bbdc73afb7c",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "constant reference for the resource/subresource would be ideal",
        "createdAt" : "2017-05-25T17:04:30Z",
        "updatedAt" : "2017-05-30T18:43:13Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "64fa73f8-73f4-4bdf-be4c-9d06a8e1846a",
        "parentId" : "3ca95b6f-82bf-431f-9acf-4bbdc73afb7c",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "cc @cjcullen for CSR subresource authorization checks",
        "createdAt" : "2017-05-31T05:27:49Z",
        "updatedAt" : "2017-05-31T05:27:49Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "fb4c020c826fb1d724f2acc13d0f77e59161fceb",
    "line" : 91,
    "diffHunk" : "@@ -1,1 +146,150 @@\t\t\t},\n\t\t\tRules: []rbac.PolicyRule{\n\t\t\t\trbac.NewRule(\"create\").Groups(\"certificates.k8s.io\").Resources(\"certificatesigningrequests/nodeclient\").RuleOrDie(),\n\t\t\t},\n\t\t},"
  },
  {
    "id" : "351dca0d-f52e-4839-835e-54e067075a47",
    "prId" : 40154,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/40154#pullrequestreview-17542953",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c2f1de76-a5d0-4f0a-846e-da0d7de8ed20",
        "parentId" : null,
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "Is there any specific reason we prefix the [cluster]rolebindings with `kubeadm` and not system?\r\n\r\nI see the ClusterRoles are prefixed system because those roles are automatically bootstrapped by the apiserver, but why can't we use `system:` for the bindings as well?\r\n\r\nI'm thinking about portability here...",
        "createdAt" : "2017-01-19T19:50:03Z",
        "updatedAt" : "2017-01-19T19:57:06Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      },
      {
        "id" : "054e5594-3e54-4d48-9a42-691df249b616",
        "parentId" : "c2f1de76-a5d0-4f0a-846e-da0d7de8ed20",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "this is a binding created by kubeadm, so kubeadm should set it up in a way that doesn't conflict with bindings created by anyone else.",
        "createdAt" : "2017-01-19T19:56:55Z",
        "updatedAt" : "2017-01-19T19:57:11Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "083ffb6e93db594f9b7da98276ade74a365e1dfe",
    "line" : 79,
    "diffHunk" : "@@ -1,1 +95,99 @@\tclusterRoleBinding := rbac.ClusterRoleBinding{\n\t\tObjectMeta: metav1.ObjectMeta{\n\t\t\tName: \"kubeadm:node-proxier\",\n\t\t},\n\t\tRoleRef: rbac.RoleRef{"
  }
]