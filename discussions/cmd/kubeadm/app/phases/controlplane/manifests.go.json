[
  {
    "id" : "78331969-df99-4598-92b1-ef989bf42c9b",
    "prId" : 102722,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/102722#pullrequestreview-679661939",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e0e1ae22-1fd4-4ec4-b107-4505fd0cdb27",
        "parentId" : null,
        "authorId" : "c5cbab8f-2eaf-48d9-a433-0b0fd4a2806d",
        "body" : "\"so that later when we add rootless logic for control-plane static pod creation we can ignore user and group creation if the command/phase is run in dry-run mode\". Is it not too early? And it is confused to someboy that isDryRun is added into some functions but never used in it ,I think.\r\n",
        "createdAt" : "2021-06-09T09:27:58Z",
        "updatedAt" : "2021-06-09T09:28:03Z",
        "lastEditedBy" : "c5cbab8f-2eaf-48d9-a433-0b0fd4a2806d",
        "tags" : [
        ]
      },
      {
        "id" : "67172c21-73b6-45ec-8196-f11f977a2926",
        "parentId" : "e0e1ae22-1fd4-4ec4-b107-4505fd0cdb27",
        "authorId" : "30343065-ff78-4ac2-8aa1-fe001a3627c6",
        "body" : "The PR for rootless control plane migration became too big. So we decided to break it into 2 parts. 1 where we plumb the dry-run flag into these functions and other where we update the static pod manifests. ",
        "createdAt" : "2021-06-09T13:35:39Z",
        "updatedAt" : "2021-06-09T13:35:39Z",
        "lastEditedBy" : "30343065-ff78-4ac2-8aa1-fe001a3627c6",
        "tags" : [
        ]
      }
    ],
    "commit" : "e6bf19bcf691ea32dfcb549cc03eb2e6a86649ef",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +92,96 @@\n// CreateStaticPodFiles creates all the requested static pod files.\nfunc CreateStaticPodFiles(manifestDir, patchesDir string, cfg *kubeadmapi.ClusterConfiguration, endpoint *kubeadmapi.APIEndpoint, isDryRun bool, componentNames ...string) error {\n\t// gets the StaticPodSpecs, actualized for the current ClusterConfiguration\n\tklog.V(1).Infoln(\"[control-plane] getting StaticPodSpecs\")"
  },
  {
    "id" : "e4978a43-ad88-4f42-a48e-9678c01cbccf",
    "prId" : 85745,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/85745#pullrequestreview-325438075",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5e28c388-f138-4d40-93e2-07e0c54638ca",
        "parentId" : null,
        "authorId" : "67bc6085-2cd9-4674-9dbc-d2a266f478be",
        "body" : "Our etcd server certificate allows `localhost`, wouldn't it be better to use it instead?",
        "createdAt" : "2019-11-30T22:24:39Z",
        "updatedAt" : "2019-11-30T22:24:46Z",
        "lastEditedBy" : "67bc6085-2cd9-4674-9dbc-d2a266f478be",
        "tags" : [
        ]
      },
      {
        "id" : "c4301560-0188-4142-8a26-460fb58ed677",
        "parentId" : "5e28c388-f138-4d40-93e2-07e0c54638ca",
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "localhost is a lottery, you don't know in advance what ip is going to resolve, check the following gist explaining the topic\r\nhttps://gist.github.com/aojea/94f6f483173641647c731f582e52f0b0\r\n",
        "createdAt" : "2019-12-01T15:18:27Z",
        "updatedAt" : "2019-12-01T18:04:52Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      },
      {
        "id" : "49798f9d-51b4-43b1-857d-f49fabe934f5",
        "parentId" : "5e28c388-f138-4d40-93e2-07e0c54638ca",
        "authorId" : "67bc6085-2cd9-4674-9dbc-d2a266f478be",
        "body" : "Yes, it's better to use IP addresses directly. I was thinking that using `localhost` we would rely on whatever has been set on the containers `/etc/hosts`, but that's just shifting the problem somewhere else.",
        "createdAt" : "2019-12-02T18:22:49Z",
        "updatedAt" : "2019-12-02T18:22:49Z",
        "lastEditedBy" : "67bc6085-2cd9-4674-9dbc-d2a266f478be",
        "tags" : [
        ]
      }
    ],
    "commit" : "335a3e9efbc8316cd030a42645d79e2a97bf2655",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +166,170 @@\t\tetcdLocalhostAddress := \"127.0.0.1\"\n\t\tif utilsnet.IsIPv6String(localAPIEndpoint.AdvertiseAddress) {\n\t\t\tetcdLocalhostAddress = \"::1\"\n\t\t}\n\t\tdefaultArguments[\"etcd-servers\"] = fmt.Sprintf(\"https://%s\", net.JoinHostPort(etcdLocalhostAddress, strconv.Itoa(kubeadmconstants.EtcdListenClientPort)))"
  },
  {
    "id" : "2996c153-c459-4b2a-b07b-16f0aaf3513a",
    "prId" : 85609,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/85609#pullrequestreview-322609089",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "00ebb4c6-e32c-4644-bdc8-c3d2c64d6c69",
        "parentId" : null,
        "authorId" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "body" : "should we check the boolean return value - log warning if it is true ?",
        "createdAt" : "2019-11-25T21:11:33Z",
        "updatedAt" : "2019-11-25T21:11:33Z",
        "lastEditedBy" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "tags" : [
        ]
      },
      {
        "id" : "1a64bb8a-d921-414d-a5cd-06ba3540ae3d",
        "parentId" : "00ebb4c6-e32c-4644-bdc8-c3d2c64d6c69",
        "authorId" : "c892e350-ac78-4a0c-a13f-d0b4b7842b18",
        "body" : "the boolean is only applicable to the dual-stack case. both ipv4 and ipv6 make use of `node-cidr-mask-size` for the original single-stack case. ",
        "createdAt" : "2019-11-25T22:04:36Z",
        "updatedAt" : "2019-11-25T22:04:37Z",
        "lastEditedBy" : "c892e350-ac78-4a0c-a13f-d0b4b7842b18",
        "tags" : [
        ]
      }
    ],
    "commit" : "e8ee8622b804e254ebee84c4fe965d8c8e7d695d",
    "line" : 49,
    "diffHunk" : "@@ -1,1 +343,347 @@\t\t\t}\n\t\t} else {\n\t\t\tmaskSize, _ := calcNodeCidrSize(cfg.Networking.PodSubnet)\n\t\t\tdefaultArguments[\"node-cidr-mask-size\"] = maskSize\n\t\t}"
  },
  {
    "id" : "2011d89d-48d7-4407-bd4a-6e59e401fdd8",
    "prId" : 85043,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/85043#pullrequestreview-314638077",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cae5c1bb-ebff-4290-a052-f8ac49403a19",
        "parentId" : null,
        "authorId" : "e2ca6907-6765-444e-8bf6-1452233150d6",
        "body" : "IIRC, we don't explicitly set  `--port 0` to explicitly disable insecure serving.\r\n\r\nIf we do it would break insecure serving of metrics for the scheduler and controller-manager, that could be mitigated by an action required",
        "createdAt" : "2019-11-10T17:37:12Z",
        "updatedAt" : "2019-11-10T17:37:21Z",
        "lastEditedBy" : "e2ca6907-6765-444e-8bf6-1452233150d6",
        "tags" : [
        ]
      },
      {
        "id" : "bfde3712-19f5-4429-ae36-3d2146fcbdc2",
        "parentId" : "cae5c1bb-ebff-4290-a052-f8ac49403a19",
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "are you suggesting adding --port=0 for both with an action required as part of this PR?\r\n\r\nthe components are binding on localhost so they are not exposed to external consumers. but i can see that there may be cases where metrics are proxied to an external consumer.\r\n\r\nthe alternative is to keep the insecure serving supported and wait for the action-required to come from the components them self when --port is removed.\r\n",
        "createdAt" : "2019-11-10T18:17:40Z",
        "updatedAt" : "2019-11-10T18:17:41Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      },
      {
        "id" : "cda86c39-a6ac-4210-9ac9-762db2e2b8d7",
        "parentId" : "cae5c1bb-ebff-4290-a052-f8ac49403a19",
        "authorId" : "e2ca6907-6765-444e-8bf6-1452233150d6",
        "body" : "That’s fine by me. I’ll open an issue to discuss secure defaults ",
        "createdAt" : "2019-11-10T20:07:02Z",
        "updatedAt" : "2019-11-10T20:07:03Z",
        "lastEditedBy" : "e2ca6907-6765-444e-8bf6-1452233150d6",
        "tags" : [
        ]
      }
    ],
    "commit" : "23ba857b50797160596f99894bc9724e67fe45fd",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +75,79 @@\t\t\tImage:           images.GetKubernetesImage(kubeadmconstants.KubeScheduler, cfg),\n\t\t\tImagePullPolicy: v1.PullIfNotPresent,\n\t\t\tCommand:         getSchedulerCommand(cfg),\n\t\t\tVolumeMounts:    staticpodutil.VolumeMountMapToSlice(mounts.GetVolumeMounts(kubeadmconstants.KubeScheduler)),\n\t\t\tLivenessProbe:   staticpodutil.LivenessProbe(staticpodutil.GetSchedulerProbeAddress(cfg), \"/healthz\", kubeadmconstants.KubeSchedulerPort, v1.URISchemeHTTPS),"
  },
  {
    "id" : "57ecb535-8420-4386-987f-7464c604410b",
    "prId" : 82616,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/82616#pullrequestreview-287298216",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0b748145-9728-498d-9747-b12074e21f49",
        "parentId" : null,
        "authorId" : "67bc6085-2cd9-4674-9dbc-d2a266f478be",
        "body" : "Do you think it's worth adding an `else` branch here with a warning? Just in case they introduced a typo? Something like \"Unknown authz mode: {requested}; will be ignored\".",
        "createdAt" : "2019-09-12T09:12:57Z",
        "updatedAt" : "2019-09-12T13:30:46Z",
        "lastEditedBy" : "67bc6085-2cd9-4674-9dbc-d2a266f478be",
        "tags" : [
        ]
      },
      {
        "id" : "37a0c6bf-c94d-479f-bed3-1d95e991174c",
        "parentId" : "0b748145-9728-498d-9747-b12074e21f49",
        "authorId" : "75a54437-3d0b-4f66-bad1-a169c444c221",
        "body" : "Good point, because this setting is security relevant I think it's definitely worth it. Not that for example `RBAC` is missing in the apiserver configurationjust in case the user typed `rbac` or something like this...",
        "createdAt" : "2019-09-12T09:22:44Z",
        "updatedAt" : "2019-09-12T13:30:46Z",
        "lastEditedBy" : "75a54437-3d0b-4f66-bad1-a169c444c221",
        "tags" : [
        ]
      }
    ],
    "commit" : "40ab042f9031bb2f3b303e2372f944ea7bddd571",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +208,212 @@\t\t\t} else {\n\t\t\t\tklog.Warningf(\"ignoring unknown kube-apiserver authorization-mode %q\", requested)\n\t\t\t}\n\t\t}\n"
  },
  {
    "id" : "fbafefdc-c243-4df2-866f-1ee2dde5d295",
    "prId" : 82616,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/82616#pullrequestreview-288531496",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d1276448-776c-40ee-813f-7e2a4c7d9901",
        "parentId" : null,
        "authorId" : "cccc7bed-95f4-42a9-83ef-6ba1a4dca7ec",
        "body" : "Theoretically speaking, we don't need the warning if `defaultMode` is a subset of `mode`.",
        "createdAt" : "2019-09-16T10:21:28Z",
        "updatedAt" : "2019-09-16T10:37:47Z",
        "lastEditedBy" : "cccc7bed-95f4-42a9-83ef-6ba1a4dca7ec",
        "tags" : [
        ]
      }
    ],
    "commit" : "40ab042f9031bb2f3b303e2372f944ea7bddd571",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +213,217 @@\t\t// only return the user provided mode if at least one was valid\n\t\tif len(mode) > 0 {\n\t\t\tklog.Warningf(\"the default kube-apiserver authorization-mode is %q; using %q\",\n\t\t\t\tstrings.Join(defaultMode, \",\"),\n\t\t\t\tstrings.Join(mode, \",\"),"
  },
  {
    "id" : "6921f928-9245-42f4-8a09-b01415b75503",
    "prId" : 82616,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/82616#pullrequestreview-288531496",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1872cfbf-1ec1-480f-a002-acdefc04755e",
        "parentId" : null,
        "authorId" : "cccc7bed-95f4-42a9-83ef-6ba1a4dca7ec",
        "body" : "Strictly speaking, a typo here is worth bailing out. This can end in an insecure or non-operational cluster.",
        "createdAt" : "2019-09-16T10:30:38Z",
        "updatedAt" : "2019-09-16T10:37:47Z",
        "lastEditedBy" : "cccc7bed-95f4-42a9-83ef-6ba1a4dca7ec",
        "tags" : [
        ]
      }
    ],
    "commit" : "40ab042f9031bb2f3b303e2372f944ea7bddd571",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +207,211 @@\t\t\t\tmode = append(mode, requested)\n\t\t\t} else {\n\t\t\t\tklog.Warningf(\"ignoring unknown kube-apiserver authorization-mode %q\", requested)\n\t\t\t}\n\t\t}"
  },
  {
    "id" : "9484cebb-c78b-4625-9c94-c0ec7402e797",
    "prId" : 82616,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/82616#pullrequestreview-300164362",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7ad025de-876b-4e00-99aa-8138365cc9ac",
        "parentId" : null,
        "authorId" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "body" : "It seems allModes can be a map - the lookup would be more straight forward",
        "createdAt" : "2019-10-10T15:36:52Z",
        "updatedAt" : "2019-10-10T15:36:52Z",
        "lastEditedBy" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "40ab042f9031bb2f3b303e2372f944ea7bddd571",
    "line" : 40,
    "diffHunk" : "@@ -1,1 +224,228 @@\nfunc isValidAuthzMode(authzMode string) bool {\n\tallModes := []string{\n\t\tkubeadmconstants.ModeNode,\n\t\tkubeadmconstants.ModeRBAC,"
  },
  {
    "id" : "b177b7f8-6fc2-4623-a907-5aefeb4a4e72",
    "prId" : 64096,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/64096#pullrequestreview-121808386",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d46113f1-69d7-41cf-b4ff-f81da12f88ec",
        "parentId" : null,
        "authorId" : "cccc7bed-95f4-42a9-83ef-6ba1a4dca7ec",
        "body" : "kubelet defaults to `IfNotPresent` if this is not set in the static pod YAML. Thus setting it here explicitly can be omitted (although it doesn't do any harm to be set explicitly here).",
        "createdAt" : "2018-05-21T14:09:49Z",
        "updatedAt" : "2018-05-21T14:12:04Z",
        "lastEditedBy" : "cccc7bed-95f4-42a9-83ef-6ba1a4dca7ec",
        "tags" : [
        ]
      }
    ],
    "commit" : "ddca1be88c2190ab3f9961e9ab2ede7dfad29e6c",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +77,81 @@\t\t\tName:            kubeadmconstants.KubeAPIServer,\n\t\t\tImage:           images.GetCoreImage(kubeadmconstants.KubeAPIServer, cfg.GetControlPlaneImageRepository(), cfg.KubernetesVersion, cfg.UnifiedControlPlaneImage),\n\t\t\tImagePullPolicy: v1.PullIfNotPresent,\n\t\t\tCommand:         getAPIServerCommand(cfg),\n\t\t\tVolumeMounts:    staticpodutil.VolumeMountMapToSlice(mounts.GetVolumeMounts(kubeadmconstants.KubeAPIServer)),"
  },
  {
    "id" : "8455f020-acae-4295-9d3e-0fce948c22e9",
    "prId" : 57561,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/57561#pullrequestreview-89642503",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bf539e5b-df55-41e9-93e1-1ad92a5e3018",
        "parentId" : null,
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "Why does the controller manager need to talk with the meta-data service?",
        "createdAt" : "2018-01-17T02:45:29Z",
        "updatedAt" : "2018-01-18T15:38:54Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      },
      {
        "id" : "b036c0c3-8974-40e4-8a26-dd579576c962",
        "parentId" : "bf539e5b-df55-41e9-93e1-1ad92a5e3018",
        "authorId" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "body" : "when the cloud provider is looking for \"which node am i\" info, in this specific scenario there is no openstack metadata service and the code looks in the config drive, to be able to mount the config drive it needs privs. we have a `search-order` (https://kubernetes.io/docs/concepts/cluster-administration/cloud-providers/) but in this case there is simply no metadata service and the only choice is the config service where it fails because the kube controller manager does not have enough super powers",
        "createdAt" : "2018-01-17T03:24:13Z",
        "updatedAt" : "2018-01-18T15:38:54Z",
        "lastEditedBy" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "tags" : [
        ]
      },
      {
        "id" : "e50f1cc2-e4af-4e8d-ab31-710fb8cd2581",
        "parentId" : "bf539e5b-df55-41e9-93e1-1ad92a5e3018",
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "It would be nice to put this down into a code comment.",
        "createdAt" : "2018-01-17T05:03:59Z",
        "updatedAt" : "2018-01-18T15:38:54Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      },
      {
        "id" : "e1358285-248c-4613-bbab-5fa668a50a3c",
        "parentId" : "bf539e5b-df55-41e9-93e1-1ad92a5e3018",
        "authorId" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "body" : "@kargakis ack, if this looks ok otherwise, will happily do that in a little bit",
        "createdAt" : "2018-01-17T11:52:19Z",
        "updatedAt" : "2018-01-18T15:38:54Z",
        "lastEditedBy" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "tags" : [
        ]
      },
      {
        "id" : "c5dd9c51-70b0-4d80-945f-784d2460d6d8",
        "parentId" : "bf539e5b-df55-41e9-93e1-1ad92a5e3018",
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "Once the cloud-controller code is excised from the controller manager, is there any reason that we would still need this?  ",
        "createdAt" : "2018-01-17T15:43:59Z",
        "updatedAt" : "2018-01-18T15:38:54Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      },
      {
        "id" : "a9d36d4f-389c-45ab-b7a6-f673cf4a7329",
        "parentId" : "bf539e5b-df55-41e9-93e1-1ad92a5e3018",
        "authorId" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "body" : "@timothysc correct, when we excise code that calls out to openstack cloud provider from these 2 containers we can yank the privilege flag.",
        "createdAt" : "2018-01-17T23:38:46Z",
        "updatedAt" : "2018-01-18T15:38:54Z",
        "lastEditedBy" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "tags" : [
        ]
      },
      {
        "id" : "69ca9cc6-fc94-454a-9f4f-e19310d4687f",
        "parentId" : "bf539e5b-df55-41e9-93e1-1ad92a5e3018",
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "When is the ETA on that excise?  1.10, 1.11?  \"Hand-wavy\" future?",
        "createdAt" : "2018-01-17T23:40:35Z",
        "updatedAt" : "2018-01-18T15:38:54Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      },
      {
        "id" : "44de39ca-0ada-47f6-808f-5d5886ebf273",
        "parentId" : "bf539e5b-df55-41e9-93e1-1ad92a5e3018",
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "Also, would https://github.com/kubernetes/kubernetes/pull/58080 work for this use case? ",
        "createdAt" : "2018-01-17T23:43:28Z",
        "updatedAt" : "2018-01-18T15:38:54Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      },
      {
        "id" : "1f5c6926-2d25-4a16-9695-132bd6ade662",
        "parentId" : "bf539e5b-df55-41e9-93e1-1ad92a5e3018",
        "authorId" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "body" : "@timothysc we con't currently expose `--cloud-provider` from kubeadm command line, so that won't help. i've updated the PR with a new field in `MasterConfiguration` and updated the unit test. hopefully that combination will work for everyone.",
        "createdAt" : "2018-01-18T00:45:22Z",
        "updatedAt" : "2018-01-18T15:38:54Z",
        "lastEditedBy" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "tags" : [
        ]
      },
      {
        "id" : "2a579d3c-1421-4c01-bab6-859e1d15385f",
        "parentId" : "bf539e5b-df55-41e9-93e1-1ad92a5e3018",
        "authorId" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "body" : "@timothysc For 1.10, i do not expect to move at least the openstack cloud provider out of tree. at best we will have an external openstack controller manager that will work for some scenarios with the in-tree one still being the primary one. 1.11 is a distinct possibility.",
        "createdAt" : "2018-01-18T00:46:51Z",
        "updatedAt" : "2018-01-18T15:38:54Z",
        "lastEditedBy" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "658a27cebfce8c9dd3f5a76af1a5e169e2bd9769",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +114,118 @@\t\t}\n\t\tstaticPodSpecs[kubeadmconstants.KubeControllerManager].Spec.Containers[0].SecurityContext = &v1.SecurityContext{\n\t\t\tPrivileged: utilpointer.BoolPtr(true),\n\t\t}\n\t}"
  },
  {
    "id" : "acdfb9e5-abaa-4f38-a7b9-6035b98c9185",
    "prId" : 50832,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/50832#pullrequestreview-59805929",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9f9e719e-2b48-45a2-821f-60e4d4b9b2e1",
        "parentId" : null,
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "Gah, should have spotted this earlier, I realize `delete(defaultArguments, \"cluster...\")` is probably preferable over this method... WDYT?\r\n\r\nIt would be great to get an unit test for this as well if possible...",
        "createdAt" : "2017-08-29T21:59:41Z",
        "updatedAt" : "2017-08-31T17:13:28Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      },
      {
        "id" : "4b4ed14f-e120-4289-ad02-417c874e04dc",
        "parentId" : "9f9e719e-2b48-45a2-821f-60e4d4b9b2e1",
        "authorId" : "ddc05ecb-1a86-4393-8e22-f1bb528c2d50",
        "body" : "The nice thing about setting to \"\" is that (in controller manager logs) you get:\r\n\r\n> Skipping \"csrsigning\"\r\n\r\ninstead of: \r\n\r\n> Failed to start certificate controller: error reading CA cert file \"/etc/kubernetes/ca/ca.pem\": open /etc/kubernetes/ca/ca.pem: no such file or directory\r\n\r\nwhen using `delete()` which I think is slightly better, but I will switch them if you prefer.  ",
        "createdAt" : "2017-08-31T07:12:21Z",
        "updatedAt" : "2017-08-31T17:13:28Z",
        "lastEditedBy" : "ddc05ecb-1a86-4393-8e22-f1bb528c2d50",
        "tags" : [
        ]
      },
      {
        "id" : "7aaa0279-015e-4fcb-927b-0cb7aba08dce",
        "parentId" : "9f9e719e-2b48-45a2-821f-60e4d4b9b2e1",
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "With that context (thanks for reminding me about the UX), it makes sense to pass `\"\"`",
        "createdAt" : "2017-08-31T09:41:40Z",
        "updatedAt" : "2017-08-31T17:13:28Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      }
    ],
    "commit" : "e0ab0b57abc60a42075f7b1ef3844852120c4dd6",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +221,225 @@\t// so that the csrsigning controller fails to start\n\tif res, _ := certphase.UsingExternalCA(cfg); res {\n\t\tdefaultArguments[\"cluster-signing-key-file\"] = \"\"\n\t\tdefaultArguments[\"cluster-signing-cert-file\"] = \"\"\n\t}"
  }
]