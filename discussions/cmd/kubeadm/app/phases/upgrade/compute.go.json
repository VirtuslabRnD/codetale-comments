[
  {
    "id" : "20e3d1a0-6a55-49ba-9992-2ed74ad645b2",
    "prId" : 62655,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/62655#pullrequestreview-112498667",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7f263c8f-5bea-4cf2-8ebe-a8f8ba591009",
        "parentId" : null,
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "I don't see what this change has todo with the this PR.  \r\n\r\nFWIW renaming and refactorings should not be in this PR.  ",
        "createdAt" : "2018-04-16T15:27:54Z",
        "updatedAt" : "2018-04-24T16:00:05Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      },
      {
        "id" : "f2fb2687-dad3-4a9a-82c3-cd3658993377",
        "parentId" : "7f263c8f-5bea-4cf2-8ebe-a8f8ba591009",
        "authorId" : "bf66f693-b705-46d8-a378-3750b55f033c",
        "body" : "I neglected to put this in the commit, but it was necessary for me to restructure the module, because `HasTLS()` imports `ReadStaticPodFromDisk ` from `app/util/staticpod`\r\n\r\n`app/util/staticpod` already imports from `/app/util` and this created a dependency cycle.\r\n",
        "createdAt" : "2018-04-16T16:41:13Z",
        "updatedAt" : "2018-04-24T16:00:05Z",
        "lastEditedBy" : "bf66f693-b705-46d8-a378-3750b55f033c",
        "tags" : [
        ]
      }
    ],
    "commit" : "dac4fe84bbd26332452699320f8ed504c279b8a9",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +24,28 @@\t\"k8s.io/kubernetes/cmd/kubeadm/app/features\"\n\t\"k8s.io/kubernetes/cmd/kubeadm/app/phases/addons/dns\"\n\tetcdutil \"k8s.io/kubernetes/cmd/kubeadm/app/util/etcd\"\n\t\"k8s.io/kubernetes/pkg/util/version\"\n)"
  },
  {
    "id" : "50960132-5fa7-4a93-849d-4abd80bc14c9",
    "prId" : 50872,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/50872#pullrequestreview-58225087",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a9d8c00b-0c38-47a6-801e-9195cf1c9b65",
        "parentId" : null,
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "I'm flummoxed by this logic. ",
        "createdAt" : "2017-08-23T21:21:36Z",
        "updatedAt" : "2017-08-25T14:23:44Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      },
      {
        "id" : "4d6ef7aa-a488-4b20-b04e-15fc83db80ca",
        "parentId" : "a9d8c00b-0c38-47a6-801e-9195cf1c9b65",
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "ideas how to improve the kubelet version handling?",
        "createdAt" : "2017-08-23T21:44:04Z",
        "updatedAt" : "2017-08-25T14:23:44Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      }
    ],
    "commit" : "396a33dd8fe112454652cdbf8618c8671c18c42f",
    "line" : 37,
    "diffHunk" : "@@ -1,1 +35,39 @@\t}\n\t// Don't report something available for upgrade if we don't know the current state\n\tif len(u.Before.KubeletVersions) == 0 {\n\t\treturn false\n\t}"
  },
  {
    "id" : "6eb1118d-e7b6-40f3-be89-ca9bcc5ac116",
    "prId" : 48899,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/48899#pullrequestreview-60294238",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "06b2bf91-e586-426f-a07e-c9466ed42446",
        "parentId" : null,
        "authorId" : "659c7c1f-39ba-41a7-8331-fcc6b3b5f2fb",
        "body" : "Nit: I wouldn't really call \"latest\" as \"experimental\". In case of `ci/*` builds I agree to call them experimental, but alphas/betas already have some quality tags attached (even were not very high). ",
        "createdAt" : "2017-09-03T11:32:50Z",
        "updatedAt" : "2017-09-03T11:33:49Z",
        "lastEditedBy" : "659c7c1f-39ba-41a7-8331-fcc6b3b5f2fb",
        "tags" : [
        ]
      },
      {
        "id" : "45c85fe1-6c8d-416f-9942-4f972043ce2a",
        "parentId" : "06b2bf91-e586-426f-a07e-c9466ed42446",
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "They are very experimental -- they are just cut from master without any special coordination that feature X, Y, Z must be there for it to ship.",
        "createdAt" : "2017-09-03T11:49:46Z",
        "updatedAt" : "2017-09-03T11:49:46Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      }
    ],
    "commit" : "c5756269887280f21c3d190a1b91ea232a6fcfc5",
    "line" : 132,
    "diffHunk" : "@@ -1,1 +177,181 @@\n\t\t// Get and output the current latest unstable version\n\t\tlatestVersionStr, latestVersion, err := versionGetterImpl.VersionFromCILabel(\"latest\", \"experimental version\")\n\t\tif err != nil {\n\t\t\treturn nil, err"
  },
  {
    "id" : "ef185f54-fe14-438a-92ac-f736aa7d7116",
    "prId" : 48899,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/48899#pullrequestreview-60294265",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ebfdb63f-a274-4b93-b48b-3559912d474a",
        "parentId" : null,
        "authorId" : "659c7c1f-39ba-41a7-8331-fcc6b3b5f2fb",
        "body" : "We wouldn't hit it now, but for future (2.x versions), we probably want to have boundary check here.\r\nWorth to add TODO in comments ?",
        "createdAt" : "2017-09-03T11:33:31Z",
        "updatedAt" : "2017-09-03T11:33:49Z",
        "lastEditedBy" : "659c7c1f-39ba-41a7-8331-fcc6b3b5f2fb",
        "tags" : [
        ]
      },
      {
        "id" : "2e31189b-e95c-4ea0-87bd-5f616438ad94",
        "parentId" : "ebfdb63f-a274-4b93-b48b-3559912d474a",
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "this is in the queue already so I won't update it anymore.\r\nI think this is probably the smallest problem we'll have regarding 2.x ;)",
        "createdAt" : "2017-09-03T11:51:51Z",
        "updatedAt" : "2017-09-03T11:51:51Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      }
    ],
    "commit" : "c5756269887280f21c3d190a1b91ea232a6fcfc5",
    "line" : 139,
    "diffHunk" : "@@ -1,1 +184,188 @@\t\tminorUnstable := latestVersion.Components()[1]\n\t\t// Get and output the current latest unstable version\n\t\tpreviousBranch := fmt.Sprintf(\"latest-1.%d\", minorUnstable-1)\n\t\tpreviousBranchLatestVersionStr, previousBranchLatestVersion, err := versionGetterImpl.VersionFromCILabel(previousBranch, \"\")\n\t\tif err != nil {"
  }
]