[
  {
    "id" : "cb87b529-5d75-4b87-97fe-36244f8bec19",
    "prId" : 98664,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/98664#pullrequestreview-580539526",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "28d3f49a-dfa8-4053-9eec-0afa3cecce89",
        "parentId" : null,
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "wondering, were the tests here and TestRenewCertsByComponent racy or should not run pkiutiltesting based test in parallel (it does have a `lock` for its functions)?\r\n\r\n",
        "createdAt" : "2021-02-01T16:02:35Z",
        "updatedAt" : "2021-02-01T16:29:21Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      },
      {
        "id" : "b2abd7ab-abd1-458f-84c3-fe943f9dec55",
        "parentId" : "28d3f49a-dfa8-4053-9eec-0afa3cecce89",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "These tests were made parallel in order to speed them up, but the reason they were slow was private key generation, not artificial waits in the tests. Running in parallel didn't help in CPU or random-constrained environments.\r\n\r\nWhen using pkiutil/testing, we want a test to run, asking for private keys, then reset for the next test. Otherwise another test's Reset() could result in already-used private keys being handed out again to a still-running parallel test",
        "createdAt" : "2021-02-01T16:35:06Z",
        "updatedAt" : "2021-02-01T16:35:06Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "8761972f684f87823679003a60384ead789ca97b",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +444,448 @@\t\trt := tests[i]\n\t\tt.Run(rt.description, func(t *testing.T) {\n\t\t\tpkiutiltesting.Reset()\n\t\t\twaiter := NewFakeStaticPodWaiter(rt.waitErrsToReturn)\n\t\t\tpathMgr, err := NewFakeStaticPodPathManager(rt.moveFileFunc)"
  },
  {
    "id" : "a7627f24-ba93-4d37-8625-a85052ab1c3c",
    "prId" : 77188,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/77188#pullrequestreview-232822361",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2006bdb0-aafb-49a9-82f4-216b11fce558",
        "parentId" : null,
        "authorId" : "cccc7bed-95f4-42a9-83ef-6ba1a4dca7ec",
        "body" : "`StaticPodPathManager` should have a `KubernetesDir()` method. We should then be able to initialize a path manager with a different KubernetesDir for tests.",
        "createdAt" : "2019-04-30T10:20:17Z",
        "updatedAt" : "2019-05-09T09:17:24Z",
        "lastEditedBy" : "cccc7bed-95f4-42a9-83ef-6ba1a4dca7ec",
        "tags" : [
        ]
      },
      {
        "id" : "a283316d-9d57-4ba6-90f9-5d2027855f46",
        "parentId" : "2006bdb0-aafb-49a9-82f4-216b11fce558",
        "authorId" : "e7b8fd7e-f93b-44b6-b6d0-4331207d901c",
        "body" : "@rosti Sorry for the delay. Thanks for your suggestion. I'll try it in this direction.",
        "createdAt" : "2019-05-02T01:52:00Z",
        "updatedAt" : "2019-05-09T09:17:24Z",
        "lastEditedBy" : "e7b8fd7e-f93b-44b6-b6d0-4331207d901c",
        "tags" : [
        ]
      }
    ],
    "commit" : "d46bd0dc7affaf3fcf91deb33a45211095aab7ad",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +469,473 @@\t\t\t}\n\t\t\tdefer os.RemoveAll(pathMgr.(*fakeStaticPodPathManager).KubernetesDir())\n\t\t\ttmpKubernetesDir := pathMgr.(*fakeStaticPodPathManager).KubernetesDir()\n\n\t\t\ttempCertsDir, err := ioutil.TempDir(\"\", \"kubeadm-certs\")"
  },
  {
    "id" : "551ead47-0420-4db9-be99-6a66a8ee473e",
    "prId" : 62655,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/62655#pullrequestreview-114546870",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "571d6bdf-b517-4920-8dd2-118bfe41a3dc",
        "parentId" : null,
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "same as other comment, I'm an anti-stub person and we have the jiggery to dynamically spin clusters in UTs. ",
        "createdAt" : "2018-04-23T16:40:25Z",
        "updatedAt" : "2018-04-24T16:00:05Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      },
      {
        "id" : "37958063-c210-436c-a096-94209f68c8bd",
        "parentId" : "571d6bdf-b517-4920-8dd2-118bfe41a3dc",
        "authorId" : "bf66f693-b705-46d8-a378-3750b55f033c",
        "body" : "@timothysc this sounds great for testing `GenericClient.GetStatus()` in `util/etcd/etcd_test.go`\r\n\r\nDo we have an existing unit-test harness for running etcd as a static pod using a kubelet?\r\nThat would be what is required for this particular test.",
        "createdAt" : "2018-04-23T18:40:21Z",
        "updatedAt" : "2018-04-24T16:00:05Z",
        "lastEditedBy" : "bf66f693-b705-46d8-a378-3750b55f033c",
        "tags" : [
        ]
      },
      {
        "id" : "56fe60d8-955d-42cb-b157-ac4236c40e84",
        "parentId" : "571d6bdf-b517-4920-8dd2-118bfe41a3dc",
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "We have utilities to basically spin up an actual etcd server + client pair, but at this point I'm ok with merging what is here and we can create a new issue and cross-link for future work. ",
        "createdAt" : "2018-04-23T20:39:36Z",
        "updatedAt" : "2018-04-24T16:00:05Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      }
    ],
    "commit" : "dac4fe84bbd26332452699320f8ed504c279b8a9",
    "line" : 120,
    "diffHunk" : "@@ -1,1 +216,220 @@}\n\nfunc (c fakeTLSEtcdClient) GetStatus() (*clientv3.StatusResponse, error) {\n\tclient := &clientv3.StatusResponse{}\n\tclient.Version = \"3.1.12\""
  },
  {
    "id" : "9de050fa-d86c-4c7c-9746-d7b1c978b5b9",
    "prId" : 62655,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/62655#pullrequestreview-114509683",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "78f3f0fb-8914-4b3c-8eab-d5a3c0ecdbad",
        "parentId" : null,
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "Who cleans up these directories?  ",
        "createdAt" : "2018-04-23T16:41:58Z",
        "updatedAt" : "2018-04-24T16:00:05Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      },
      {
        "id" : "175526bf-6e8f-41cd-bfba-f8fa88fb1ccd",
        "parentId" : "78f3f0fb-8914-4b3c-8eab-d5a3c0ecdbad",
        "authorId" : "bf66f693-b705-46d8-a378-3750b55f033c",
        "body" : "```go\r\ndefer os.RemoveAll(pathMgr.(*fakeStaticPodPathManager).KubernetesDir())\r\n```\r\n\r\nhttps://github.com/kubernetes/kubernetes/pull/62655/files#diff-012a4c853bcc083f2ac6c61d69e7292eR375",
        "createdAt" : "2018-04-23T18:47:18Z",
        "updatedAt" : "2018-04-24T16:00:05Z",
        "lastEditedBy" : "bf66f693-b705-46d8-a378-3750b55f033c",
        "tags" : [
        ]
      }
    ],
    "commit" : "dac4fe84bbd26332452699320f8ed504c279b8a9",
    "line" : 55,
    "diffHunk" : "@@ -1,1 +142,146 @@\nfunc NewFakeStaticPodPathManager(moveFileFunc func(string, string) error) (StaticPodPathManager, error) {\n\tkubernetesDir, err := ioutil.TempDir(\"\", \"kubeadm-pathmanager-\")\n\tif err != nil {\n\t\treturn nil, fmt.Errorf(\"couldn't create a temporary directory for the upgrade: %v\", err)"
  }
]