[
  {
    "id" : "988bda77-44ce-4346-9307-46fbe649745d",
    "prId" : 56513,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/56513#pullrequestreview-80662275",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c825f80c-96b7-498b-b2c2-f9e8ce0547a0",
        "parentId" : null,
        "authorId" : "a09f2d48-fec0-4c0d-bd81-6de7378a6ebf",
        "body" : "This should fix https://k8s-testgrid.appspot.com/sig-cluster-lifecycle-all#kubeadm-gce-upgrade-stable-master , right?\r\n```\r\nsudo kubeadm upgrade apply 1.10.0-alpha.0.738+3904cc78031e92 -y -f'\\n[upgrade/version] FATAL: The --version argument is invalid due to these fatal errors:\\n\\n\\t-Specified version to upgrade to \\\"v1.10.0-alpha.0.738+3904cc78031e92\\\" is too high; kubeadm can upgrade only 1 minor version at a time\\n\\nPlease fix the misalignments highlighted above and try upgrading again\r\n```",
        "createdAt" : "2017-12-02T01:42:21Z",
        "updatedAt" : "2017-12-02T01:42:27Z",
        "lastEditedBy" : "a09f2d48-fec0-4c0d-bd81-6de7378a6ebf",
        "tags" : [
        ]
      }
    ],
    "commit" : "f7c494fe5b1a07d243e778ba29e511eb53e9821d",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +80,84 @@\t\ttooLargeUpgradeSkewErr := fmt.Errorf(\"Specified version to upgrade to %q is too high; kubeadm can upgrade only %d minor version at a time\", newK8sVersionStr, MaximumAllowedMinorVersionUpgradeSkew)\n\t\t// If the version that we're about to upgrade to is a released version, we should fully enforce this policy\n\t\t// If the version is a CI/dev/experimental version, it's okay to jump two minor version steps, but then require the -f flag\n\t\tif len(newK8sVersion.PreRelease()) == 0 {\n\t\t\tskewErrors.Mandatory = append(skewErrors.Mandatory, tooLargeUpgradeSkewErr)"
  },
  {
    "id" : "d5d571a7-6b7f-412b-b81f-020c826a34af",
    "prId" : 50872,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/50872#pullrequestreview-58222869",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4d9dc163-d26c-4960-a1b5-c84bc113975d",
        "parentId" : null,
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "This is done to leave for the other PR?",
        "createdAt" : "2017-08-23T20:58:17Z",
        "updatedAt" : "2017-08-25T14:23:44Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      },
      {
        "id" : "320ac74f-732a-41f1-940c-2e36203f3a94",
        "parentId" : "4d9dc163-d26c-4960-a1b5-c84bc113975d",
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "yes",
        "createdAt" : "2017-08-23T21:34:50Z",
        "updatedAt" : "2017-08-25T14:23:44Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      }
    ],
    "commit" : "396a33dd8fe112454652cdbf8618c8671c18c42f",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +29,33 @@// EnforceVersionPolicies enforces that the proposed new version is compatible with all the different version skew policies\nfunc EnforceVersionPolicies(_ VersionGetter, _ string, _ *version.Version, _, _ bool) *VersionSkewPolicyErrors {\n\t// No-op now and return no skew errors\n\treturn nil\n}"
  }
]