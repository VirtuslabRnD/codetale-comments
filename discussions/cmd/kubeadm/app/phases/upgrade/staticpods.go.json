[
  {
    "id" : "73c94576-e196-4d83-90e7-cc7d7672027e",
    "prId" : 89588,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/89588#pullrequestreview-383096943",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b8882315-db90-4733-b781-1a9cb43ed9fa",
        "parentId" : null,
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "bellow, can we replace:\r\n```\r\n\tcurrentEtcdVersion, err := version.ParseSemantic(currentEtcdVersionStr)\r\n\tif err != nil {\r\n\t\treturn true, errors.Wrapf(err, \"failed to parse the current etcd version(%s)\", currentEtcdVersionStr)\r\n\t}\r\n\t// Comparing current etcd version with desired to catch the same version or downgrade condition and fail on them.\r\n\tif desiredEtcdVersion.LessThan(currentEtcdVersion) {\r\n\t\treturn false, errors.Errorf(\"the desired etcd version for this Kubernetes version %q is %q, but the current etcd version is %q. Won't downgrade etcd, instead just continue\", cfg.KubernetesVersion, desiredEtcdVersion.String(), currentEtcdVersion.String())\r\n\t}\r\n\t// For the case when desired etcd version is the same as current etcd version\r\n\tif strings.Compare(desiredEtcdVersion.String(), currentEtcdVersion.String()) == 0 {\r\n\t\treturn false, nil\r\n\t}\r\n```\r\n\r\nwith:\r\n```\r\ncurrentEtcdVersion, err := version.ParseSemantic(currentEtcdVersionStr)\r\nif err != nil {\r\n\treturn true, errors.Wrapf(err, \"failed to parse the current etcd version(%s)\", currentEtcdVersionStr)\r\n}\r\n\r\n// Comparing current etcd version with desired to catch the same version or downgrade condition and fail on them.\r\nif desiredEtcdVersion.Compare(currentEtcdVersionStr) < 1 {\r\n\treturn false, errors.Errorf(\"the desired etcd version %q is not newer than the current etcd version %q. Skipping etcd upgrade\", desiredEtcdVersion.String(), currentEtcdVersionStr)\r\n}\r\n```\r\n\r\nref https://github.com/kubernetes/apimachinery/blob/master/pkg/util/version/version.go#L314\r\n",
        "createdAt" : "2020-03-27T18:15:56Z",
        "updatedAt" : "2020-03-30T13:29:17Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      }
    ],
    "commit" : "c8b7e5739c818fb5d11e89bf8df34b9ca8520bed",
    "line" : 58,
    "diffHunk" : "@@ -1,1 +308,312 @@\t\treturn true, errors.Wrap(err, \"failed to retrieve the current etcd version\")\n\t}\n\n\tcmpResult, err := desiredEtcdVersion.Compare(currentEtcdVersionStr)\n\tif err != nil {"
  },
  {
    "id" : "6191227e-b433-410f-8b87-d10bfee1e8fb",
    "prId" : 77188,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/77188#pullrequestreview-236375436",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4820dbd1-94c3-4668-b482-3de4415915a7",
        "parentId" : null,
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "this is much better.",
        "createdAt" : "2019-05-11T12:27:37Z",
        "updatedAt" : "2019-05-11T12:27:37Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      }
    ],
    "commit" : "d46bd0dc7affaf3fcf91deb33a45211095aab7ad",
    "line" : 72,
    "diffHunk" : "@@ -1,1 +120,124 @@// KubernetesDir should point to the directory Kubernetes owns for storing various configuration files\nfunc (spm *KubeStaticPodPathManager) KubernetesDir() string {\n\treturn spm.kubernetesDir\n}\n"
  },
  {
    "id" : "6c48051e-fc21-4044-ae1f-d91341726622",
    "prId" : 75956,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/75956#pullrequestreview-223006942",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "42d69675-edd9-4e9c-8ccf-5019f194570a",
        "parentId" : null,
        "authorId" : "e44ca1be-f60c-49b3-ada5-e63ae63c65fc",
        "body" : "s/che/the/",
        "createdAt" : "2019-04-01T22:33:52Z",
        "updatedAt" : "2019-04-02T19:27:38Z",
        "lastEditedBy" : "e44ca1be-f60c-49b3-ada5-e63ae63c65fc",
        "tags" : [
        ]
      },
      {
        "id" : "7d186399-480b-47a2-8ffa-b34c0ebfa524",
        "parentId" : "42d69675-edd9-4e9c-8ccf-5019f194570a",
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "non blocking for merge.",
        "createdAt" : "2019-04-04T21:17:01Z",
        "updatedAt" : "2019-04-04T21:17:01Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      }
    ],
    "commit" : "211bc613a04e4bc790af31cf7a7b0e3a86c2652b",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +265,269 @@\n\t// gets the etcd version of the local/stacked etcd member running on the current machine\n\t// the version is read from che cluster; this should take into account that there are still\n\t// around old etcd manifest with etcd listening on local host only\n\t// N.B. taking care of old etcd manifests is necessary only in v1.14; starting from v1.15 all the etcd manifest should have 2 endpoints"
  },
  {
    "id" : "e2a1641d-6dac-42a6-a520-2a8d47f32c09",
    "prId" : 71740,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/71740#pullrequestreview-182419358",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "abddf21b-fbd7-4b3f-a64d-2227a8210f67",
        "parentId" : null,
        "authorId" : "8a27151d-3530-4221-90e8-48b3a85cba37",
        "body" : "Same here for the if and for the `recoverEtcd` part",
        "createdAt" : "2018-12-06T19:53:50Z",
        "updatedAt" : "2018-12-06T20:48:48Z",
        "lastEditedBy" : "8a27151d-3530-4221-90e8-48b3a85cba37",
        "tags" : [
        ]
      }
    ],
    "commit" : "5610ac3c9c7ac55d1d8854d9bc747af80220abea",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +182,186 @@\t}\n\t// Normally, if an Etcd upgrade is successful, but the apiserver upgrade fails, Etcd is not rolled back.\n\t// In the case of a TLS upgrade, the old KubeAPIServer config is incompatible with the new Etcd confg, so we rollback Etcd\n\t// if the APIServer upgrade fails.\n\tif component == constants.KubeAPIServer {"
  },
  {
    "id" : "7d034275-5701-4ab2-a2c5-1782b826e316",
    "prId" : 71740,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/71740#pullrequestreview-182419358",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "98fcc3ff-17b2-4890-a3a3-54e9f887d87d",
        "parentId" : null,
        "authorId" : "8a27151d-3530-4221-90e8-48b3a85cba37",
        "body" : "All the code under to old``if isTLSUpgrade` should go away.\r\n\r\nThe case \"upgrading the etcd protocol\" doesn't exist anymore, so probably also the `waitForComponentUpgrade` should go away (this last point should be double checked)",
        "createdAt" : "2018-12-06T20:42:48Z",
        "updatedAt" : "2018-12-06T20:48:48Z",
        "lastEditedBy" : "8a27151d-3530-4221-90e8-48b3a85cba37",
        "tags" : [
        ]
      }
    ],
    "commit" : "5610ac3c9c7ac55d1d8854d9bc747af80220abea",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +175,179 @@\t}\n\n\t// We currently depend on getting the Etcd mirror Pod hash from the KubeAPIServer;\n\t// Upgrading the Etcd protocol takes down the apiserver, so we can't verify component restarts if we restart Etcd independently.\n\t// Skip waiting for Etcd to restart and immediately move on to updating the apiserver."
  },
  {
    "id" : "57ec5590-19b2-4000-8286-fe444c4812d6",
    "prId" : 71740,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/71740#pullrequestreview-182419358",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "63c21c1b-dca3-415c-b80b-45f6ad8de881",
        "parentId" : null,
        "authorId" : "8a27151d-3530-4221-90e8-48b3a85cba37",
        "body" : "The case if we are upgrading TLS doesn't exist anymore so pod restart delay IMO should go away",
        "createdAt" : "2018-12-06T20:46:04Z",
        "updatedAt" : "2018-12-06T20:48:48Z",
        "lastEditedBy" : "8a27151d-3530-4221-90e8-48b3a85cba37",
        "tags" : [
        ]
      }
    ],
    "commit" : "5610ac3c9c7ac55d1d8854d9bc747af80220abea",
    "line" : 56,
    "diffHunk" : "@@ -1,1 +313,317 @@\n\t// Waiter configurations for checking etcd status\n\t// If we are upgrading TLS we need to wait for old static pod to be removed.\n\t// This is needed because we are not able to currently verify that the static pod\n\t// has been updated through the apiserver across an etcd TLS upgrade."
  },
  {
    "id" : "9a07926e-57b3-4117-b8ce-2dcf87e1b886",
    "prId" : 64337,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/64337#pullrequestreview-124925670",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cf6f2d45-96f4-4de3-8e20-13c285aa0764",
        "parentId" : null,
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "minor format consistency things are usually nice to stick in editors to auto-save.  totally non-blocking just an FYI.  ",
        "createdAt" : "2018-05-31T18:01:58Z",
        "updatedAt" : "2018-05-31T18:43:10Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      },
      {
        "id" : "c3124111-90b5-48f6-8964-f64c020aaf3d",
        "parentId" : "cf6f2d45-96f4-4de3-8e20-13c285aa0764",
        "authorId" : "a2762dd2-4f61-45ce-b5d5-d94727263ab7",
        "body" : "I do have a lot of autocommit things, just not removing trailing space I guess",
        "createdAt" : "2018-05-31T18:35:13Z",
        "updatedAt" : "2018-05-31T18:43:10Z",
        "lastEditedBy" : "a2762dd2-4f61-45ce-b5d5-d94727263ab7",
        "tags" : [
        ]
      }
    ],
    "commit" : "6ed91fc07ca75591691d3aacc30dc8d56f6cbf62",
    "line" : 68,
    "diffHunk" : "@@ -1,1 +147,151 @@\t\t}\n\t}\n\n\tif !spm.keepEtcdDir {\n\t\tif err := os.RemoveAll(spm.BackupEtcdDir()); err != nil {"
  },
  {
    "id" : "087b4b16-f303-476e-bc9c-209c6dae43d1",
    "prId" : 62655,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/62655#pullrequestreview-112499884",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5d623077-ae8e-4730-ac52-3f5d0f825c77",
        "parentId" : null,
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "Doesn't this overlap with @detiber 's proposed kubelet change? ",
        "createdAt" : "2018-04-16T16:20:16Z",
        "updatedAt" : "2018-04-24T16:00:05Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      },
      {
        "id" : "e5ca109b-3050-4251-bff4-f2d1d10e388c",
        "parentId" : "5d623077-ae8e-4730-ac52-3f5d0f825c77",
        "authorId" : "bf66f693-b705-46d8-a378-3750b55f033c",
        "body" : "It does, these are all proposed solutions that complement each other and overlap in different ways.\r\n\r\nThis PR skips the dependency on the APIServer for the protocol switch.\r\n\r\nThe kubelet API PR completely gets rid of the hard dependency on the APIServer.",
        "createdAt" : "2018-04-16T16:44:45Z",
        "updatedAt" : "2018-04-24T16:00:05Z",
        "lastEditedBy" : "bf66f693-b705-46d8-a378-3750b55f033c",
        "tags" : [
        ]
      }
    ],
    "commit" : "dac4fe84bbd26332452699320f8ed504c279b8a9",
    "line" : 70,
    "diffHunk" : "@@ -1,1 +207,211 @@\t\t// If we don't do this, there is a case where we remove the Static Pod manifest, kubelet is slow to react, kubeadm checks the\n\t\t// API endpoint below of the OLD Static Pod component and proceeds quickly enough, which might lead to unexpected results.\n\t\tif err := waiter.WaitForStaticPodHashChange(cfg.NodeName, component, beforePodHash); err != nil {\n\t\t\treturn rollbackOldManifests(recoverManifests, err, pathMgr, recoverEtcd)\n\t\t}"
  },
  {
    "id" : "0377f1ed-48c2-4b6c-a81e-c4705eb9c84e",
    "prId" : 60385,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/60385#pullrequestreview-100836921",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9897b808-adc3-488e-b177-84710efad8eb",
        "parentId" : null,
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "Why CreateEtcdCACertAndKeyFiles needs to run when upgrading the api server?",
        "createdAt" : "2018-02-28T21:04:23Z",
        "updatedAt" : "2018-02-28T21:04:23Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      },
      {
        "id" : "b27d9a5c-535d-4b20-934b-b564cab765f1",
        "parentId" : "9897b808-adc3-488e-b177-84710efad8eb",
        "authorId" : "a09f2d48-fec0-4c0d-bd81-6de7378a6ebf",
        "body" : "IIUC, `CreateEtcdServerCertAndKeyFiles` in L145 and `CreateAPIServerEtcdClientCertAndKeyFiles` in L153 depends on etcd CA to generate their cert and key files, `CreateEtcdCACertAndKeyFiles` ensures etcd CA files are existing or generated.",
        "createdAt" : "2018-03-01T02:52:17Z",
        "updatedAt" : "2018-03-01T02:52:18Z",
        "lastEditedBy" : "a09f2d48-fec0-4c0d-bd81-6de7378a6ebf",
        "tags" : [
        ]
      },
      {
        "id" : "a658bae5-88c5-4e9f-bfd0-84f419e3c01e",
        "parentId" : "9897b808-adc3-488e-b177-84710efad8eb",
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "Makes sense\r\n\r\n/hold cancel",
        "createdAt" : "2018-03-01T08:25:03Z",
        "updatedAt" : "2018-03-01T08:25:03Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      },
      {
        "id" : "398d7996-40c5-4de4-9041-6e59660503f9",
        "parentId" : "9897b808-adc3-488e-b177-84710efad8eb",
        "authorId" : "bf66f693-b705-46d8-a378-3750b55f033c",
        "body" : "Peter explained correctly what I was thinking :+1:\r\n\r\nThe happy path would work without it, but if you ever wanted the apiserver to start independently of etcd, it would fail.",
        "createdAt" : "2018-03-02T16:43:01Z",
        "updatedAt" : "2018-03-02T16:43:01Z",
        "lastEditedBy" : "bf66f693-b705-46d8-a378-3750b55f033c",
        "tags" : [
        ]
      }
    ],
    "commit" : "41974cb91f4672b4ece9790f7d9a9ec6460cd02b",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +137,141 @@\n\t// ensure etcd certs are generated for etcd and kube-apiserver\n\tif component == constants.Etcd || component == constants.KubeAPIServer {\n\t\tif err := certsphase.CreateEtcdCACertAndKeyFiles(cfg); err != nil {\n\t\t\treturn fmt.Errorf(\"failed to upgrade the %s CA certificate and key: %v\", constants.Etcd, err)"
  },
  {
    "id" : "615a4b8d-4388-41e9-bc0b-2bfa9932e969",
    "prId" : 56500,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/56500#pullrequestreview-79682501",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ccd84e08-2de5-431c-a9b0-d573b723e9fc",
        "parentId" : null,
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "nit: change the `cfg` parameter to just `nodeName string` as that is the only thing used in `cfg`\r\nI'd prefer if you parameterized the rollback function to call here instead of baking in this `recoverEtcd` logic... can you do that please?",
        "createdAt" : "2017-11-28T18:54:27Z",
        "updatedAt" : "2017-11-29T20:53:36Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      },
      {
        "id" : "de4852c0-c20b-4cb8-9144-87aad0ee2bc5",
        "parentId" : "ccd84e08-2de5-431c-a9b0-d573b723e9fc",
        "authorId" : "6c37c694-3f72-4ff3-ac3a-5fbddf4d5796",
        "body" : "here is the thing, if a separate function used for etcd manifest rollback then:\r\n1. We just end up duplicating the code\r\n2. componentUpgrade will needs to be changed and checked everytime when roll back is called to see which rollback needs to be called, normal or etcd specific,  I think it will bring more confusion than gain from separating. Please let me know if you still wants me to change it.  ",
        "createdAt" : "2017-11-28T20:46:19Z",
        "updatedAt" : "2017-11-29T20:53:36Z",
        "lastEditedBy" : "6c37c694-3f72-4ff3-ac3a-5fbddf4d5796",
        "tags" : [
        ]
      },
      {
        "id" : "8c1911f0-ca37-49bb-b471-d13674921398",
        "parentId" : "ccd84e08-2de5-431c-a9b0-d573b723e9fc",
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "ok, no need to change it",
        "createdAt" : "2017-11-28T22:40:57Z",
        "updatedAt" : "2017-11-29T20:53:36Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      }
    ],
    "commit" : "294114a219c1807971d723d3d37301b4549fb094",
    "line" : 3,
    "diffHunk" : "@@ -1,1 +127,131 @@}\n\nfunc upgradeComponent(component string, waiter apiclient.Waiter, pathMgr StaticPodPathManager, cfg *kubeadmapi.MasterConfiguration, beforePodHash string, recoverManifests map[string]string) error {\n\t// Special treatment is required for etcd case, when rollbackOldManifests should roll back etcd\n\t// manifests only for the case when component is Etcd"
  },
  {
    "id" : "6eb02052-0a3f-4ddd-b1e9-f0f0c344f027",
    "prId" : 55010,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/55010#pullrequestreview-77069019",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3e0621c6-c911-4369-8a37-1b318596da5a",
        "parentId" : null,
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "it would be great if you added one more arg to this func; a validation func arg `validateFunc func() error` or similar that you call here.\r\nThen this func would rollback things to the previous state if `validateFunc` errors",
        "createdAt" : "2017-11-16T07:00:55Z",
        "updatedAt" : "2017-11-18T23:48:27Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      },
      {
        "id" : "e48d58e7-c59b-4086-bd40-5f38a9b60fe7",
        "parentId" : "3e0621c6-c911-4369-8a37-1b318596da5a",
        "authorId" : "bdc500eb-fd23-4d89-81ce-2986aa831dfa",
        "body" : "Yeah, or at least _additional_ checks. For etcd we're going to want to do the default pod checks, but also need to check that connecting directly to etcd works",
        "createdAt" : "2017-11-16T11:12:36Z",
        "updatedAt" : "2017-11-18T23:48:27Z",
        "lastEditedBy" : "bdc500eb-fd23-4d89-81ce-2986aa831dfa",
        "tags" : [
        ]
      }
    ],
    "commit" : "1f20a8d022df7f07e3633c9fbe5c36f11b7043cd",
    "line" : 105,
    "diffHunk" : "@@ -1,1 +164,168 @@\t\treturn rollbackOldManifests(recoverManifests, err, pathMgr)\n\t}\n\n\tfmt.Printf(\"[upgrade/staticpods] Component %q upgraded successfully!\\n\", component)\n\treturn nil"
  },
  {
    "id" : "afed6948-ef8e-497d-a1d0-2584f8530b50",
    "prId" : 55010,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/55010#pullrequestreview-77625767",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f703821f-6178-4420-9fba-cb7bb03c12b5",
        "parentId" : null,
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "In this func, I want to:\r\n - Move back the old manifest\r\n - Check if the old etcd version comes back up again\r\n - If it does: Say to the user we tried to upgrade but couldn't, but restored everything\r\n - If it doesn't: Say to the user we tried to upgrade but couldn't, and couldn't restore the earlier state. Tell the user the data was backed up to {backup-dir} instead of overwriting any data that might or might not be in use",
        "createdAt" : "2017-11-17T23:35:29Z",
        "updatedAt" : "2017-11-18T23:48:27Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      },
      {
        "id" : "b423987e-7bf0-40ce-a9a6-d543c47b8b7b",
        "parentId" : "f703821f-6178-4420-9fba-cb7bb03c12b5",
        "authorId" : "6c37c694-3f72-4ff3-ac3a-5fbddf4d5796",
        "body" : "Here is a comment from @jamiehannaford : '''\r\nIf the etcd upgrade goes wrong:\r\n\r\nWe should replace the current data dir (if any) with restore old one\r\nRestore manifests\r\nCheck the restored etcd works. If it's not responding, tell the user something like \"Hey something went wrong. We tried restoring but that failed. Here is the location to your backed up data\"\r\n'''\r\nPlease sync up with him what would be the final solution. As restoring etcd data was suggested by him. (Unless of course I misread his comment).",
        "createdAt" : "2017-11-18T01:49:26Z",
        "updatedAt" : "2017-11-18T23:48:27Z",
        "lastEditedBy" : "6c37c694-3f72-4ff3-ac3a-5fbddf4d5796",
        "tags" : [
        ]
      },
      {
        "id" : "19b0bee6-9eef-4917-9f45-a2e439f89e98",
        "parentId" : "f703821f-6178-4420-9fba-cb7bb03c12b5",
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "I'll sync up with him.\r\nI think I disagree on `We should replace the current data dir (if any) with restore old one` => instead defer this to the user. We tried our best and did back up, but won't start overriding any data just like that to be safe.",
        "createdAt" : "2017-11-18T21:27:43Z",
        "updatedAt" : "2017-11-18T23:48:27Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      }
    ],
    "commit" : "1f20a8d022df7f07e3633c9fbe5c36f11b7043cd",
    "line" : 256,
    "diffHunk" : "@@ -1,1 +293,297 @@\n// rollbackEtcdData rolls back the the content of etcd folder if something went wrong\nfunc rollbackEtcdData(cfg *kubeadmapi.MasterConfiguration, origErr error, pathMgr StaticPodPathManager) error {\n\terrs := []error{origErr}\n\tbackupEtcdDir := pathMgr.BackupEtcdDir()"
  },
  {
    "id" : "675f9119-3a93-4860-a0e8-c8171b45d0b8",
    "prId" : 55010,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/55010#pullrequestreview-77603735",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ff9f6129-a77e-4e0f-934a-3b897ee1838d",
        "parentId" : null,
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "@xiang90 @hongchaodeng Would this even work? Can we do this or is it destined to fail while the etcd cluster is running? Is there any easy way to take a snapshot via the Go client?",
        "createdAt" : "2017-11-17T23:41:35Z",
        "updatedAt" : "2017-11-18T23:48:27Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      },
      {
        "id" : "cd87522b-7133-41cd-aea9-ba29d658761e",
        "parentId" : "ff9f6129-a77e-4e0f-934a-3b897ee1838d",
        "authorId" : "6c37c694-3f72-4ff3-ac3a-5fbddf4d5796",
        "body" : "I check etcd v3 go client and I see there is a func to take snapshot, but I could not find any func to restore this snapshot.",
        "createdAt" : "2017-11-18T02:16:12Z",
        "updatedAt" : "2017-11-18T23:48:27Z",
        "lastEditedBy" : "6c37c694-3f72-4ff3-ac3a-5fbddf4d5796",
        "tags" : [
        ]
      }
    ],
    "commit" : "1f20a8d022df7f07e3633c9fbe5c36f11b7043cd",
    "line" : 125,
    "diffHunk" : "@@ -1,1 +184,188 @@\tbackupEtcdDir := pathMgr.BackupEtcdDir()\n\trunningEtcdDir := cfg.Etcd.DataDir\n\tif err := util.CopyDir(runningEtcdDir, backupEtcdDir); err != nil {\n\t\treturn true, fmt.Errorf(\"fail to back up etcd data with %v\", err)\n\t}"
  },
  {
    "id" : "f34140f5-fbb9-4192-9d8e-b4fba2d2239b",
    "prId" : 48899,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/48899#pullrequestreview-55503447",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "237730e7-a385-4bf3-9c89-bb27e08e9a88",
        "parentId" : null,
        "authorId" : "bdc500eb-fd23-4d89-81ce-2986aa831dfa",
        "body" : "👍  great comment. We should always aspire to document algorithms like this",
        "createdAt" : "2017-08-10T11:49:00Z",
        "updatedAt" : "2017-09-03T09:29:18Z",
        "lastEditedBy" : "bdc500eb-fd23-4d89-81ce-2986aa831dfa",
        "tags" : [
        ]
      }
    ],
    "commit" : "c5756269887280f21c3d190a1b91ea232a6fcfc5",
    "line" : 145,
    "diffHunk" : "@@ -1,1 +154,158 @@\t\t// notice the removal of the Static Pod, leading to a false positive below where we check that the API endpoint is healthy\n\t\t// If we don't do this, there is a case where we remove the Static Pod manifest, kubelet is slow to react, kubeadm checks the\n\t\t// API endpoint below of the OLD Static Pod component and proceeds quickly enough, which might lead to unexpected results.\n\t\tif err := waiter.WaitForStaticPodControlPlaneHashChange(cfg.NodeName, component, beforePodHashMap[component]); err != nil {\n\t\t\treturn rollbackOldManifests(recoverManifests, err, pathMgr)"
  }
]