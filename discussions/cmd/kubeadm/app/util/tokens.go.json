[
  {
    "id" : "76775938-c6ef-433f-bb51-7534d932cc91",
    "prId" : 36462,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/36462#pullrequestreview-12577002",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "91e007b4-ecda-4b24-8cc7-cd60b3cab0fd",
        "parentId" : null,
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "I'm not saying you have to do it now, but can you move this file to a separate package for clarity (`cmd/kubeadm/app/util/token`) and import it as `tokenutil` where it's then used?",
        "createdAt" : "2016-11-29T21:21:57Z",
        "updatedAt" : "2016-12-15T21:57:21Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      },
      {
        "id" : "b6ce5715-d218-41b8-bb2f-d682027b68a3",
        "parentId" : "91e007b4-ecda-4b24-8cc7-cd60b3cab0fd",
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "all token stuff should be moved to cmd/kubeadm/app/discovery/token. Tokens have leaked and now permeate all of the kubeadm codebase which is very bad. ",
        "createdAt" : "2016-12-12T23:40:23Z",
        "updatedAt" : "2016-12-15T21:57:21Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      }
    ],
    "commit" : "7945c437e59e3211c94a432e803d173282a677cd",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +43,47 @@}\n\nfunc GenerateToken(d *kubeadmapi.TokenDiscovery) error {\n\ttokenID, err := RandBytes(TokenIDBytes)\n\tif err != nil {"
  },
  {
    "id" : "16d3315d-e3ec-46ac-9ce3-adb474341c48",
    "prId" : 36462,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/36462#pullrequestreview-13136680",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "102ca7a4-edc0-4431-a600-03630573f7e0",
        "parentId" : null,
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "Also a future TODO",
        "createdAt" : "2016-12-15T14:25:11Z",
        "updatedAt" : "2016-12-15T21:57:21Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      }
    ],
    "commit" : "7945c437e59e3211c94a432e803d173282a677cd",
    "line" : null,
    "diffHunk" : "@@ -1,1 +84,88 @@\t\treturn false, err\n\t}\n\treturn true, nil\n}\n"
  },
  {
    "id" : "4ab8bae5-5df2-47ec-8d8b-20298a78c238",
    "prId" : 33262,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/33262#pullrequestreview-1401884",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3c918039-b6f6-42e8-a018-9d64df25ebec",
        "parentId" : null,
        "authorId" : "ad0a3561-db60-47a9-b82f-ac613199f968",
        "body" : "It seems that this function doesn't need the full `KubeadmConfig` struct. And it's actually an output parameter. Please name the type of the `Secrets` field, have this function return that type, and assign into it from the caller. e.g.\n\n``` go\ntype SecretConfig struct {\n    TokenID     string\n    Token       []byte\n    BearerToken string\n}\n\nfunc GenerateToken() (*SecretConfig, error) {\n...\n}\n\nscfg, err := GenerateToken()\nif err != nil { ... }\nkcfg.Secrets = scfg\n```\n",
        "createdAt" : "2016-09-23T21:53:06Z",
        "updatedAt" : "2016-09-26T08:13:51Z",
        "lastEditedBy" : "ad0a3561-db60-47a9-b82f-ac613199f968",
        "tags" : [
        ]
      }
    ],
    "commit" : "3a4613d3b25dd1944a7f26b6d2037c9e82fcde7e",
    "line" : 45,
    "diffHunk" : "@@ -1,1 +43,47 @@}\n\nfunc GenerateToken(s *kubeadmapi.KubeadmConfig) error {\n\t_, tokenID, err := RandBytes(TokenIDLen / 2)\n\tif err != nil {"
  },
  {
    "id" : "af53050b-7672-4c43-a022-fce795881e2e",
    "prId" : 33262,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/33262#pullrequestreview-1453268",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "82939a19-b3fa-4077-8a25-7a67ec444599",
        "parentId" : null,
        "authorId" : "ad0a3561-db60-47a9-b82f-ac613199f968",
        "body" : "This should be a function to validate and parse a token. The decision of if it's provided should probably exist elsewhere. This simplifies its purpose and signature. `func ParseToken(tok string) (*SecretConfig, error)`\n",
        "createdAt" : "2016-09-23T21:55:21Z",
        "updatedAt" : "2016-09-26T08:13:51Z",
        "lastEditedBy" : "ad0a3561-db60-47a9-b82f-ac613199f968",
        "tags" : [
        ]
      },
      {
        "id" : "294915ff-93b8-4daa-bec2-5f1d9daa9e7e",
        "parentId" : "82939a19-b3fa-4077-8a25-7a67ec444599",
        "authorId" : "ad0a3561-db60-47a9-b82f-ac613199f968",
        "body" : "And when you have simple parsing, you can now create a special string flag that validates at flag parsing time. You also would no longer need to propagate the `GivenToken` field all through the config just to get it to validation 3 levels deep in the library.\n",
        "createdAt" : "2016-09-23T21:57:11Z",
        "updatedAt" : "2016-09-26T08:13:51Z",
        "lastEditedBy" : "ad0a3561-db60-47a9-b82f-ac613199f968",
        "tags" : [
        ]
      },
      {
        "id" : "d3dbcb58-05fe-4cee-a8b2-82daa5c6a1ae",
        "parentId" : "82939a19-b3fa-4077-8a25-7a67ec444599",
        "authorId" : "d37d9758-bdf5-4c23-a40e-a85099689a0c",
        "body" : "This makes a lot of sense to me, and the way flags struct is passed around is a very poor design, which is begging for improvement. I believe I've captured all your comments as TODOs now.\n",
        "createdAt" : "2016-09-25T14:03:51Z",
        "updatedAt" : "2016-09-26T08:13:51Z",
        "lastEditedBy" : "d37d9758-bdf5-4c23-a40e-a85099689a0c",
        "tags" : [
        ]
      }
    ],
    "commit" : "3a4613d3b25dd1944a7f26b6d2037c9e82fcde7e",
    "line" : 63,
    "diffHunk" : "@@ -1,1 +61,65 @@}\n\nfunc UseGivenTokenIfValid(s *kubeadmapi.KubeadmConfig) (bool, error) {\n\tif s.Secrets.GivenToken == \"\" {\n\t\treturn false, nil // not given"
  }
]