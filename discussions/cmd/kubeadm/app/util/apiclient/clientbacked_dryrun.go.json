[
  {
    "id" : "485d6f72-dac5-438b-aea7-293465225333",
    "prId" : 50631,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/50631#pullrequestreview-57296249",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "085eb220-f253-4a5f-b213-c421db43c33f",
        "parentId" : null,
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "So the naming here is weird.  \r\nclientbacked_dryrun.NewClientBackedDryRunGetter() ?  ",
        "createdAt" : "2017-08-18T19:48:46Z",
        "updatedAt" : "2017-08-18T20:05:14Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      }
    ],
    "commit" : "0bf84aa182449ab51cbb5f819da3fbcad19690a2",
    "line" : 44,
    "diffHunk" : "@@ -1,1 +42,46 @@\n// NewClientBackedDryRunGetter creates a new ClientBackedDryRunGetter instance based on the rest.Config object\nfunc NewClientBackedDryRunGetter(config *rest.Config) *ClientBackedDryRunGetter {\n\treturn &ClientBackedDryRunGetter{\n\t\tbaseConfig:    config,"
  },
  {
    "id" : "472d5569-6a82-442e-a3fa-a2e652a45ec2",
    "prId" : 50631,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/50631#pullrequestreview-57296249",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bacd037c-4a06-40d1-8a0d-4be2a9201006",
        "parentId" : null,
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "same.",
        "createdAt" : "2017-08-18T19:51:02Z",
        "updatedAt" : "2017-08-18T20:05:14Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      }
    ],
    "commit" : "0bf84aa182449ab51cbb5f819da3fbcad19690a2",
    "line" : 52,
    "diffHunk" : "@@ -1,1 +50,54 @@\n// NewClientBackedDryRunGetterFromKubeconfig creates a new ClientBackedDryRunGetter instance from the given KubeConfig file\nfunc NewClientBackedDryRunGetterFromKubeconfig(file string) (*ClientBackedDryRunGetter, error) {\n\tconfig, err := clientcmd.LoadFromFile(file)\n\tif err != nil {"
  }
]