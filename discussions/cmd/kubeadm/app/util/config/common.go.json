[
  {
    "id" : "a5d74df0-bc65-43a8-965f-b582c951fdb6",
    "prId" : 101129,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/101129#pullrequestreview-636860055",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "24372d5e-6195-456e-be29-eb33141235bd",
        "parentId" : null,
        "authorId" : "5e225159-999d-430a-8b58-d5220dc1429d",
        "body" : "v1beta1 became read-only in 1.15 and became deprecated in 1.17.\r\n\r\nv1beta2 became read-only in 1.22, so it will be deprecated at least 1.24+?",
        "createdAt" : "2021-04-15T03:09:52Z",
        "updatedAt" : "2021-04-20T00:47:43Z",
        "lastEditedBy" : "5e225159-999d-430a-8b58-d5220dc1429d",
        "tags" : [
        ]
      },
      {
        "id" : "25b735f6-8cfe-41ac-8649-845abbfd87de",
        "parentId" : "24372d5e-6195-456e-be29-eb33141235bd",
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "in this context, read-only means kubeadm no longer writes it as output version, for example when the users does `kubeadm config print...`. internally kubeadm converts **from** this version to its now preferred v1beta3 (R / W).\r\n\r\nalso, we are not strictly following this policy:\r\nhttps://kubernetes.io/docs/reference/using-api/deprecation-policy/#deprecating-parts-of-the-api\r\n\r\nfor a couple of different points:\r\n- we deprecate betas slower\r\n- we enable the latest version as preferred version\r\n\r\ni will add a note that v1beta2 will be deprecated in a future release.\r\nafter discussions with @fabriziopandini we can do that in 1.23 or later, not strictly decided yet.\r\nat that point users would have ~1 year to transition to v1beta3.\r\n",
        "createdAt" : "2021-04-15T15:58:44Z",
        "updatedAt" : "2021-04-20T00:47:43Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      }
    ],
    "commit" : "6b6ae146cd0f527796a5e264f5248042981728da",
    "line" : 37,
    "diffHunk" : "@@ -1,1 +66,70 @@\n\t// Deprecated API versions are supported by us, but can only be used for migration.\n\tdeprecatedAPIVersions := map[string]struct{}{}\n\n\tgvString := gv.String()"
  },
  {
    "id" : "ad1c3dbd-c11c-4119-97ac-8cb19a819206",
    "prId" : 71315,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/71315#pullrequestreview-177210195",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4693a355-63f8-4baf-9055-5bdad031cb26",
        "parentId" : null,
        "authorId" : "3c1422a0-6358-4857-8f56-961979171514",
        "body" : "I think we can do some refactoring for `ConfigFileAndDefaultsToInternalConfig`, since the file will be read twice. There is no need.",
        "createdAt" : "2018-11-21T11:36:20Z",
        "updatedAt" : "2018-11-21T11:36:48Z",
        "lastEditedBy" : "3c1422a0-6358-4857-8f56-961979171514",
        "tags" : [
        ]
      },
      {
        "id" : "ee38b755-79e4-4dfb-822b-2b2a458cc520",
        "parentId" : "4693a355-63f8-4baf-9055-5bdad031cb26",
        "authorId" : "cccc7bed-95f4-42a9-83ef-6ba1a4dca7ec",
        "body" : "Yes, that's on my agenda for the next release cycle. Decoupling InitConfiguration and ClusterConfiguration is one of my priorities. If we refactor the APIs and make ClusterConfiguration more standalone and introduce an internal type that houses the usual pair (ClusterConfiguration + NodeRegistrationOptions for the current node) we can eliminate most of the confusion and optimize things at all levels.\r\nBut for now at the end of this release cycle it's best to keep the changes as small as possible and just fix the bug at hand.",
        "createdAt" : "2018-11-21T12:17:08Z",
        "updatedAt" : "2018-11-21T12:17:45Z",
        "lastEditedBy" : "cccc7bed-95f4-42a9-83ef-6ba1a4dca7ec",
        "tags" : [
        ]
      }
    ],
    "commit" : "037fb6103e5f135edb1b4fc66b75f0f93ad4009d",
    "line" : 58,
    "diffHunk" : "@@ -1,1 +178,182 @@\t// Migrate InitConfiguration and ClusterConfiguration if there are any in the config\n\tif kubeadmutil.GroupVersionKindsHasInitConfiguration(gvks...) || kubeadmutil.GroupVersionKindsHasClusterConfiguration(gvks...) {\n\t\to, err := ConfigFileAndDefaultsToInternalConfig(cfgPath, &kubeadmapiv1beta1.InitConfiguration{})\n\t\tif err != nil {\n\t\t\treturn []byte{}, err"
  },
  {
    "id" : "3393412b-faf0-4c4e-b750-de96ae15dafd",
    "prId" : 71315,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/71315#pullrequestreview-177195814",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "31b37d11-1af9-480c-80c3-ff6a1b940dcd",
        "parentId" : null,
        "authorId" : "3c1422a0-6358-4857-8f56-961979171514",
        "body" : "same as above.",
        "createdAt" : "2018-11-21T11:36:43Z",
        "updatedAt" : "2018-11-21T11:36:48Z",
        "lastEditedBy" : "3c1422a0-6358-4857-8f56-961979171514",
        "tags" : [
        ]
      }
    ],
    "commit" : "037fb6103e5f135edb1b4fc66b75f0f93ad4009d",
    "line" : 71,
    "diffHunk" : "@@ -1,1 +191,195 @@\t// Migrate JoinConfiguration if there is any\n\tif kubeadmutil.GroupVersionKindsHasJoinConfiguration(gvks...) {\n\t\to, err := JoinConfigFileAndDefaultsToInternalConfig(cfgPath, &kubeadmapiv1beta1.JoinConfiguration{})\n\t\tif err != nil {\n\t\t\treturn []byte{}, err"
  },
  {
    "id" : "548050c8-a23e-44c8-bb78-8ced564faa69",
    "prId" : 71126,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/71126#pullrequestreview-175753404",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e3f55cc7-36b7-4b9a-ba6e-81fe01d8ad91",
        "parentId" : null,
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "SGTM to have the change here.\r\ncould have been in ChooseBindAddress too.\r\n",
        "createdAt" : "2018-11-16T11:03:28Z",
        "updatedAt" : "2018-11-16T11:03:32Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      }
    ],
    "commit" : "b46fbbc4e692e75d46bd0b2b74cca2a818cac47f",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +178,182 @@\t}\n\tif bindAddress != nil && !bindAddress.IsUnspecified() && !reflect.DeepEqual(ip, bindAddress) {\n\t\tklog.Warningf(\"WARNING: overriding requested API server bind address: requested %q, actual %q\", bindAddress, ip)\n\t}\n\treturn ip, nil"
  },
  {
    "id" : "8fd109d1-4c0b-41ce-a7e3-642521270ee6",
    "prId" : 69055,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/69055#pullrequestreview-159482694",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "47ed7f84-9713-4f9e-8087-ad080b0d89af",
        "parentId" : null,
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "b/c you are removing alpha 2 should you remove v1.11?",
        "createdAt" : "2018-09-27T13:30:58Z",
        "updatedAt" : "2018-09-27T13:31:53Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      },
      {
        "id" : "0af40e5f-1ef1-415c-a0c4-70c96389e5ad",
        "parentId" : "47ed7f84-9713-4f9e-8087-ad080b0d89af",
        "authorId" : "8a27151d-3530-4221-90e8-48b3a85cba37",
        "body" : "This piece of code gives warning to user if the pass to kubeadm an older version of the config, and tell what version of kubeadm can be used for executing config migrate.\r\nI think that giving a warning also for v1alpha1 doesn't hurts...",
        "createdAt" : "2018-09-27T14:42:56Z",
        "updatedAt" : "2018-09-27T14:42:56Z",
        "lastEditedBy" : "8a27151d-3530-4221-90e8-48b3a85cba37",
        "tags" : [
        ]
      }
    ],
    "commit" : "4f5374e7cc228c057e8ff9717f0883f434af3439",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +84,88 @@\toldKnownAPIVersions := map[string]string{\n\t\t\"kubeadm.k8s.io/v1alpha1\": \"v1.11\",\n\t\t\"kubeadm.k8s.io/v1alpha2\": \"v1.12\",\n\t}\n\t// If we find an old API version in this gvk list, error out and tell the user why this doesn't work"
  },
  {
    "id" : "bcd07121-25f6-4219-8a3c-77e707a6fbe4",
    "prId" : 67397,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/67397#pullrequestreview-149820230",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "82332e59-8da5-445f-8b6b-bf8b7b6ea41e",
        "parentId" : null,
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "Are there negative tests for this? ",
        "createdAt" : "2018-08-27T17:43:35Z",
        "updatedAt" : "2018-08-27T20:06:00Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      },
      {
        "id" : "c5f7736a-e63a-4b55-b127-b7699d1a4ddc",
        "parentId" : "82332e59-8da5-445f-8b6b-bf8b7b6ea41e",
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "tests are missing. will add them.",
        "createdAt" : "2018-08-27T18:07:45Z",
        "updatedAt" : "2018-08-27T20:06:00Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      }
    ],
    "commit" : "90df4b4adddeab08b814d469d875672fcccab695",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +150,154 @@// VerifyAPIServerBindAddress can be used to verify if a bind address for the API Server is 0.0.0.0,\n// in which case this address is not valid and should not be used.\nfunc VerifyAPIServerBindAddress(address string) error {\n\tip := net.ParseIP(address)\n\tif ip == nil {"
  },
  {
    "id" : "4da44ce9-4077-417f-a8f6-dc8b5c513ae1",
    "prId" : 65952,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/65952#pullrequestreview-137503501",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3b7a661a-e4f6-400f-a7b4-be6e88a03242",
        "parentId" : null,
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "Can't we make this more restrictive based on version?  e.g. for 1.12 they can only call is join, etc. \r\n\r\n/approve \r\n\r\n",
        "createdAt" : "2018-07-16T16:25:29Z",
        "updatedAt" : "2018-07-16T16:31:43Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      },
      {
        "id" : "d89a9a07-1c21-410f-9b80-6503aca53ca7",
        "parentId" : "3b7a661a-e4f6-400f-a7b4-be6e88a03242",
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "I don't feel very strong about this so self-apply lgtm is ok imo. ",
        "createdAt" : "2018-07-16T16:31:40Z",
        "updatedAt" : "2018-07-16T16:31:43Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      }
    ],
    "commit" : "728b30b3f107f541a2578972229e87195d08e8fe",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +91,95 @@\t}\n\t// InitConfiguration, MasterConfiguration and NodeConfiguration are mutually exclusive, error if more than one are specified\n\tmutuallyExclusive := []string{constants.InitConfigurationKind, constants.MasterConfigurationKind, constants.JoinConfigurationKind, constants.NodeConfigurationKind}\n\tfoundOne := false\n\tfor _, kind := range mutuallyExclusive {"
  },
  {
    "id" : "c2081d4f-c04a-4c94-9c34-81d449eb579f",
    "prId" : 65631,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/65631#pullrequestreview-134681783",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "038f7edc-1ec8-490e-bafa-b0a6acad94d5",
        "parentId" : null,
        "authorId" : "8a27151d-3530-4221-90e8-48b3a85cba37",
        "body" : "If the user is passing a file with both `MasterConfiguration` and `NodeConfiguration` this function will always return the first; however, as agreed in slack with @luxas this is going to be fixed in an upcoming PR",
        "createdAt" : "2018-07-05T14:38:44Z",
        "updatedAt" : "2018-07-05T14:38:44Z",
        "lastEditedBy" : "8a27151d-3530-4221-90e8-48b3a85cba37",
        "tags" : [
        ]
      },
      {
        "id" : "576a97e7-d9bc-4973-a78f-47aac6f0a78f",
        "parentId" : "038f7edc-1ec8-490e-bafa-b0a6acad94d5",
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "This is fixed in https://github.com/kubernetes/kubernetes/pull/65787 yes. Trying to do multiple PRs with limited scope in each",
        "createdAt" : "2018-07-05T14:41:31Z",
        "updatedAt" : "2018-07-05T14:41:32Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      }
    ],
    "commit" : "71f63dcc3a5114056da798f1977a142b124d4939",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +33,37 @@\n// AnyConfigFileAndDefaultsToInternal reads either a MasterConfiguration or NodeConfiguration and unmarshals it\nfunc AnyConfigFileAndDefaultsToInternal(cfgPath string) (runtime.Object, error) {\n\tb, err := ioutil.ReadFile(cfgPath)\n\tif err != nil {"
  }
]