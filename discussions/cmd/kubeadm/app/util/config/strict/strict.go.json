[
  {
    "id" : "c0007f3c-6a67-4271-8ac2-9cc159f0aaf1",
    "prId" : 70901,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/70901#pullrequestreview-175616598",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3552adbc-7857-499e-a12d-9b71df4b1b4e",
        "parentId" : null,
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "after the suggestion by @rosti this was greatly simplified and the init function was removed. :tada: \r\nwhat this is doing is to check if a certain GVK exists in our kubeadm configs and if it doesn't it checks the component configs.\r\n\r\nif it's missing for both it outputs such an error:\r\n\r\n```\r\nW1116 02:17:13.388274   30409 strict.go:47] unknown configuration schema.GroupVersionKind{Group:\"kubeproxy.config.k8s.io\", Version:\"v1alpha1\", Kind:\"KubeProxyConfiguration1\"} for scheme definitions \"k8s.io/kubernetes/cmd/kubeadm/app/apis/kubeadm/scheme/scheme.go:31\" and \"k8s.io/kubernetes/cmd/kubeadm/app/componentconfigs/scheme.go:28\"\r\n```\r\n\r\n@timothysc please let me know if you want me to further amend the error output.\r\n",
        "createdAt" : "2018-11-16T00:27:04Z",
        "updatedAt" : "2018-11-16T00:29:41Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      }
    ],
    "commit" : "2473bba9e5688811460b3d990f9b35a2271bdb52",
    "line" : 46,
    "diffHunk" : "@@ -1,1 +44,48 @@\t\tif err != nil {\n\t\t\terr := errors.Errorf(\"unknown configuration %#v for scheme definitions in %q and %q\",\n\t\t\t\tgvk, scheme.Scheme.Name(), componentconfigs.Scheme.Name())\n\t\t\tklog.Warning(err.Error())\n\t\t\treturn err"
  },
  {
    "id" : "ef13055f-e8b6-4e28-8433-1d5a4fa83434",
    "prId" : 70901,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/70901#pullrequestreview-175848452",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "316b9291-fb24-49b2-a646-275a5c3eb9e8",
        "parentId" : null,
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "Why don't you run klog `if err != nil` on the caller side instead?",
        "createdAt" : "2018-11-16T13:22:15Z",
        "updatedAt" : "2018-11-16T13:25:10Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      },
      {
        "id" : "6bcfa766-a8a4-4a5e-acf5-c94bfd83f40c",
        "parentId" : "316b9291-fb24-49b2-a646-275a5c3eb9e8",
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "i did this to contain the klog messages in one location.\r\notherwise i have to copy them two times - one for init and one for join config.",
        "createdAt" : "2018-11-16T15:23:28Z",
        "updatedAt" : "2018-11-16T15:23:28Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      }
    ],
    "commit" : "2473bba9e5688811460b3d990f9b35a2271bdb52",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +30,34 @@// schema is known and if it unmarshals with strict mode.\n//\n// TODO(neolit123): The returned error here is currently ignored everywhere and a klog warning is thrown instead.\n// We don't want to turn this into an actual error yet. Eventually this can be controlled with an optional CLI flag.\nfunc VerifyUnmarshalStrict(bytes []byte, gvk schema.GroupVersionKind) error {"
  },
  {
    "id" : "3d9b56ea-41c9-420e-9468-4052b80b42a3",
    "prId" : 70901,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/70901#pullrequestreview-175797296",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4765d2d7-8bde-4561-bfe9-a401ed5a87aa",
        "parentId" : null,
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "nit: this isn't needed, just use `:=` on first invocation instead",
        "createdAt" : "2018-11-16T13:22:42Z",
        "updatedAt" : "2018-11-16T13:25:10Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      }
    ],
    "commit" : "2473bba9e5688811460b3d990f9b35a2271bdb52",
    "line" : 37,
    "diffHunk" : "@@ -1,1 +35,39 @@\n\tvar (\n\t\tiface interface{}\n\t\terr   error\n\t)"
  }
]