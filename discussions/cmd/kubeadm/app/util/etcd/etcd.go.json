[
  {
    "id" : "f3c40309-0c1e-4776-bf27-f04399a6d6ec",
    "prId" : 87656,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/87656#pullrequestreview-356687445",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "80a79f4e-85aa-4460-9b19-d2b2e63e9b49",
        "parentId" : null,
        "authorId" : "cccc7bed-95f4-42a9-83ef-6ba1a4dca7ec",
        "body" : "Again, can we merge `getEtcdEndpoints` and `getEtcdEndpointsWithBackoff`?",
        "createdAt" : "2020-02-11T13:28:20Z",
        "updatedAt" : "2020-02-20T11:19:18Z",
        "lastEditedBy" : "cccc7bed-95f4-42a9-83ef-6ba1a4dca7ec",
        "tags" : [
        ]
      },
      {
        "id" : "0742f7c6-3574-4951-a3d7-9effaec5784e",
        "parentId" : "80a79f4e-85aa-4460-9b19-d2b2e63e9b49",
        "authorId" : "67bc6085-2cd9-4674-9dbc-d2a266f478be",
        "body" : "The reason for these functions is that `getEtcdEndpoints` and `getAPIEndpoint` don't need testing (they have no logic). We test their `WithBackoff` counterparts, where we can control the backoff on the unit tests, so we have faster unit test execution and controlled with the backoff required depending on the test cases we are stubbing.",
        "createdAt" : "2020-02-11T14:13:45Z",
        "updatedAt" : "2020-02-20T11:19:18Z",
        "lastEditedBy" : "67bc6085-2cd9-4674-9dbc-d2a266f478be",
        "tags" : [
        ]
      }
    ],
    "commit" : "3e59a0651f168331dfc51a056ee3f5b25be431bd",
    "line" : 53,
    "diffHunk" : "@@ -1,1 +125,129 @@// getEtcdEndpoints returns the list of etcd endpoints.\nfunc getEtcdEndpoints(client clientset.Interface) ([]string, error) {\n\treturn getEtcdEndpointsWithBackoff(client, constants.StaticPodMirroringDefaultRetry)\n}\n"
  },
  {
    "id" : "c1c93561-0d5e-45fb-af95-08b4029557f1",
    "prId" : 85201,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/85201#pullrequestreview-316244633",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a0f82f46-d743-4b7b-aa53-bc759a983cc1",
        "parentId" : null,
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "we need to increase this, let me fetch the new values.",
        "createdAt" : "2019-11-13T12:59:34Z",
        "updatedAt" : "2019-11-14T08:27:27Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      },
      {
        "id" : "1bfd85dc-f518-433b-83ce-a688644e59a8",
        "parentId" : "a0f82f46-d743-4b7b-aa53-bc759a983cc1",
        "authorId" : "8a27151d-3530-4221-90e8-48b3a85cba37",
        "body" : "done",
        "createdAt" : "2019-11-13T13:33:08Z",
        "updatedAt" : "2019-11-14T08:27:27Z",
        "lastEditedBy" : "8a27151d-3530-4221-90e8-48b3a85cba37",
        "tags" : [
        ]
      }
    ],
    "commit" : "0573a2227ffd500c07e92cfb9e51a9d6f37cfc97",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +45,49 @@\tSteps:    9,\n\tDuration: 50 * time.Millisecond,\n\tFactor:   2.0,\n\tJitter:   0.1,\n}"
  },
  {
    "id" : "a9b4298b-5ee7-4afa-9d47-1efc22aac980",
    "prId" : 85201,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/85201#pullrequestreview-317085079",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a3c4e340-4334-422c-bd4d-cdb14ec5425b",
        "parentId" : null,
        "authorId" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "body" : "The error return from the Close() calls is not logged.\r\n\r\nShould the non-nil error be logged ?",
        "createdAt" : "2019-11-14T16:07:15Z",
        "updatedAt" : "2019-11-14T16:07:15Z",
        "lastEditedBy" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "tags" : [
        ]
      },
      {
        "id" : "20253ce3-3d84-4163-a889-38667923301f",
        "parentId" : "a3c4e340-4334-422c-bd4d-cdb14ec5425b",
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "i don't think it will give us any value.",
        "createdAt" : "2019-11-14T16:22:30Z",
        "updatedAt" : "2019-11-14T16:22:30Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      }
    ],
    "commit" : "0573a2227ffd500c07e92cfb9e51a9d6f37cfc97",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +146,150 @@\t\treturn err\n\t}\n\tdefer cli.Close()\n\n\t// Syncs the list of endpoints"
  },
  {
    "id" : "630ea840-85cc-49af-b1aa-a443fa31701e",
    "prId" : 79677,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/79677#pullrequestreview-257212085",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f3c9c37e-ce63-4725-be15-91b9b9c995c7",
        "parentId" : null,
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "please note that etcd does seem to have a number of different \"retry clients\", but those seem undocumented or at least i couldn't find the docs. https://github.com/etcd-io/etcd/blob/master/clientv3/retry.go#L159-L184\r\n\r\ni did not investigate further as this solution:\r\n- gives us fine grained control over the backoff\r\n- worked in my tests\r\n",
        "createdAt" : "2019-07-03T00:34:53Z",
        "updatedAt" : "2019-07-03T00:36:51Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      }
    ],
    "commit" : "25668531f783ccaa31c5ef9877b6abf72abac30f",
    "line" : 57,
    "diffHunk" : "@@ -1,1 +245,249 @@\tvar resp *clientv3.MemberAddResponse\n\terr = wait.ExponentialBackoff(addRemoveBackoff, func() (bool, error) {\n\t\tresp, err = cli.MemberAdd(context.Background(), []string{peerAddrs})\n\t\tif err == nil {\n\t\t\treturn true, nil"
  },
  {
    "id" : "c3759324-8d32-4867-a4e4-979242b6263f",
    "prId" : 79677,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/79677#pullrequestreview-257408094",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "20f317ce-87ad-43c3-9839-11b01db488bc",
        "parentId" : null,
        "authorId" : "0de88c3b-1f1a-401f-9fd1-cd63adc590fd",
        "body" : "~Do we need the `lastError` var? Because we are checking `err`, so if `err != nil`  it'll always be equal to `lastError`.~",
        "createdAt" : "2019-07-03T10:51:54Z",
        "updatedAt" : "2019-07-03T10:54:27Z",
        "lastEditedBy" : "0de88c3b-1f1a-401f-9fd1-cd63adc590fd",
        "tags" : [
        ]
      }
    ],
    "commit" : "25668531f783ccaa31c5ef9877b6abf72abac30f",
    "line" : 43,
    "diffHunk" : "@@ -1,1 +209,213 @@\t})\n\tif err != nil {\n\t\treturn nil, lastError\n\t}\n"
  },
  {
    "id" : "1d59bc35-6bf2-45ef-9ae9-f58297941f1f",
    "prId" : 75956,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/75956#pullrequestreview-221066083",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0f4e3fb4-0e36-4dc6-84bf-a2dc27fc0250",
        "parentId" : null,
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "just noting this can panic for a bogus Pod manifest on disk where there are no containers.",
        "createdAt" : "2019-04-01T12:09:53Z",
        "updatedAt" : "2019-04-02T19:27:38Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      }
    ],
    "commit" : "211bc613a04e4bc790af31cf7a7b0e3a86c2652b",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +89,93 @@\t\tetcdPod, err := staticpod.ReadStaticPodFromDisk(etcdManifestFile)\n\t\tif err == nil && len(etcdPod.Spec.Containers) > 0 {\n\t\t\tetcdContainer := etcdPod.Spec.Containers[0]\n\t\t\tfor _, arg := range etcdContainer.Command {\n\t\t\t\tif arg == \"--listen-client-urls=https://127.0.0.1:2379\" {"
  },
  {
    "id" : "00e802f4-88d2-4db5-8002-c6546e9f5668",
    "prId" : 75956,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/75956#pullrequestreview-221066083",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "70f762f8-df3e-4771-8733-7023ffadcc60",
        "parentId" : null,
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "[2]",
        "createdAt" : "2019-04-01T12:15:21Z",
        "updatedAt" : "2019-04-02T19:27:38Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      }
    ],
    "commit" : "211bc613a04e4bc790af31cf7a7b0e3a86c2652b",
    "line" : 64,
    "diffHunk" : "@@ -1,1 +120,124 @@\t\t}\n\n\t\treturn etcdClient, nil\n\t}\n"
  },
  {
    "id" : "8ec1886b-25d9-4001-9b47-cbfc7984aa47",
    "prId" : 75956,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/75956#pullrequestreview-223007042",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "72083ab2-47d0-4fe7-ba42-8b03c9172c3b",
        "parentId" : null,
        "authorId" : "27315fad-771e-420e-af79-534db73fcb49",
        "body" : "Sorry this might be silly, but is there no way to have used a custom port and still have this issue?",
        "createdAt" : "2019-04-03T16:52:46Z",
        "updatedAt" : "2019-04-03T16:53:08Z",
        "lastEditedBy" : "27315fad-771e-420e-af79-534db73fcb49",
        "tags" : [
        ]
      },
      {
        "id" : "857b6725-8c2c-4169-be50-4b6915e0ad39",
        "parentId" : "72083ab2-47d0-4fe7-ba42-8b03c9172c3b",
        "authorId" : "cccc7bed-95f4-42a9-83ef-6ba1a4dca7ec",
        "body" : "No, we don't provide supported ways of changing the port number here. It's hard wired to a constant (`EtcdListenClientPort`).\r\nThat said, we cannot stop users from editing the static pod specs, but we don't support such cases and users are on their own in that case.",
        "createdAt" : "2019-04-04T11:49:51Z",
        "updatedAt" : "2019-04-04T11:49:51Z",
        "lastEditedBy" : "cccc7bed-95f4-42a9-83ef-6ba1a4dca7ec",
        "tags" : [
        ]
      },
      {
        "id" : "16ce93c5-ed32-4734-b6ae-aabbfc776335",
        "parentId" : "72083ab2-47d0-4fe7-ba42-8b03c9172c3b",
        "authorId" : "27315fad-771e-420e-af79-534db73fcb49",
        "body" : "thank you.",
        "createdAt" : "2019-04-04T15:31:17Z",
        "updatedAt" : "2019-04-04T15:31:17Z",
        "lastEditedBy" : "27315fad-771e-420e-af79-534db73fcb49",
        "tags" : [
        ]
      },
      {
        "id" : "420efa83-b777-4022-baa6-f9d77a9c81d2",
        "parentId" : "72083ab2-47d0-4fe7-ba42-8b03c9172c3b",
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "non blocking for merge.",
        "createdAt" : "2019-04-04T21:17:15Z",
        "updatedAt" : "2019-04-04T21:17:15Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      }
    ],
    "commit" : "211bc613a04e4bc790af31cf7a7b0e3a86c2652b",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +91,95 @@\t\t\tetcdContainer := etcdPod.Spec.Containers[0]\n\t\t\tfor _, arg := range etcdContainer.Command {\n\t\t\t\tif arg == \"--listen-client-urls=https://127.0.0.1:2379\" {\n\t\t\t\t\tklog.V(1).Infoln(\"etcd manifest created by kubeadm v1.12 or older\")\n\t\t\t\t\treturn true"
  },
  {
    "id" : "7d32425c-4cec-43c3-8819-0af261a6fd60",
    "prId" : 74112,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/74112#pullrequestreview-207092654",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6ec702a9-97c7-490a-9021-25b06fdf0da9",
        "parentId" : null,
        "authorId" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "body" : "The other func's are declared with (c *Client)\r\nShould these two follow the same pattern ?",
        "createdAt" : "2019-02-22T17:11:53Z",
        "updatedAt" : "2019-02-22T17:11:54Z",
        "lastEditedBy" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "tags" : [
        ]
      },
      {
        "id" : "4c390f8d-c9e2-445b-9e04-3664dc372785",
        "parentId" : "6ec702a9-97c7-490a-9021-25b06fdf0da9",
        "authorId" : "cfee56b2-957f-461a-9a7c-e65e86542734",
        "body" : "@tedyu Thanks for you point out it. \r\nNow there are different signatures in etcd.go. This PR implement remove local etc member from cluster, so keep function have the same signatures is not in the scope of this PR. I will open an issue to track it. You can attention it.",
        "createdAt" : "2019-02-23T03:18:23Z",
        "updatedAt" : "2019-02-23T03:18:24Z",
        "lastEditedBy" : "cfee56b2-957f-461a-9a7c-e65e86542734",
        "tags" : [
        ]
      }
    ],
    "commit" : "83f5296a147183ba9471ddfeb73c76cab17471bc",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +150,154 @@\n// GetMemberID returns the member ID of the given peer URL\nfunc (c Client) GetMemberID(peerURL string) (uint64, error) {\n\tcli, err := clientv3.New(clientv3.Config{\n\t\tEndpoints:   c.Endpoints,"
  },
  {
    "id" : "3de2e3dd-6901-40cc-bee6-56f7e7471ad2",
    "prId" : 72984,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/72984#pullrequestreview-193626149",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "df5c1a5a-a028-4b11-9b33-7e5edba220ab",
        "parentId" : null,
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "as a note/TODO: in a separate PR  we need to make all the client methods to use pointers.\r\ngolang encourages a matching pattern.\r\n",
        "createdAt" : "2019-01-17T13:42:39Z",
        "updatedAt" : "2019-01-18T11:04:54Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      }
    ],
    "commit" : "b4cb3fd37c8f36c653b551ea5f962c2cac1aba9b",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +148,152 @@\n// AddMember notifies an existing etcd cluster that a new member is joining\nfunc (c *Client) AddMember(name string, peerAddrs string) ([]Member, error) {\n\t// Parse the peer address, required to add the client URL later to the list\n\t// of endpoints for this client. Parsing as a first operation to make sure that"
  },
  {
    "id" : "29855485-0e4e-4260-9b2e-410735b4fd40",
    "prId" : 72984,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/72984#pullrequestreview-193668174",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c31da90d-2fcd-47da-8d90-a81de4a6f457",
        "parentId" : null,
        "authorId" : "cccc7bed-95f4-42a9-83ef-6ba1a4dca7ec",
        "body" : "A few things here:\r\n1. You are parsing the peer address, while the endpoints point to the client address. In most cases they differ only in port number, but let's just be safe here...\r\n2. The call to `url.Parse` (in theory) can fail after successful call to `MemberAdd`, thus failing the `AddMember` while we actually have a new member.\r\n3. You don't need to call `url.Parse` and `GetClientURLByIP`. The client address for the new node is in `resp.Member.ClientURLs`.\r\n4. All of the active members (as of the call to `MemberAdd`) should be returned in `resp.Members`. You can iterate them and get their `ClientURLs` to regenerate the latest version of `c.Endpoints`.",
        "createdAt" : "2019-01-17T14:09:47Z",
        "updatedAt" : "2019-01-18T11:04:54Z",
        "lastEditedBy" : "cccc7bed-95f4-42a9-83ef-6ba1a4dca7ec",
        "tags" : [
        ]
      },
      {
        "id" : "bc6dfa88-d9e2-48dc-8376-624f8c401798",
        "parentId" : "c31da90d-2fcd-47da-8d90-a81de4a6f457",
        "authorId" : "67bc6085-2cd9-4674-9dbc-d2a266f478be",
        "body" : "Let me explain the process I went through, and why I think this is the less bad solution:\r\n\r\n1. On the local etcd setup we [control the endpoints](https://github.com/kubernetes/kubernetes/blob/af31a202ea5ac80ebaca81fa949bf3b31c649618/cmd/kubeadm/app/phases/etcd/local.go#L157) and it's basically going to be this hostname with this port.\r\n\r\n2. I didn't think of this case, is this feasible? If the provided peer address is not an URL, how can the member addition succeed?\r\n\r\n3. This was my very first try, but the ClientURLs is empty until the `etcd` member starts, and at this point in the code the kubelet is basically starting it. On the response we only have the peer address with an empty list of client URLS, so this is not really an option :(\r\n\r\n4. This is the same issue, the new added member is not active and hasn't yet got ClientURLs; it could have (depending if etcd actually started on the background or not).\r\n\r\nSo I went through the process of checking what options we did have and I tried:\r\n\r\na) Call to `CheckLocalEtcdStatus` directly: the straightforward one. Since this tries to retrieve the endpoints from `GetClusterStatus` on `NewFromCluster` is again a suboptimal situation, because we are blocking trying to download the `kubeadm-config` configmap during the blackout.\r\n\r\nb) Call to `Sync()` on etcdclient: during the blackout this is again not the best idea, because we would have to loop until we get a valid answer, felt awkward.\r\n\r\nc) Try to get the real response from `MemberAdd`: empty clientURLs because the instance could have not started yet; only the peerURLs is populated for the new member.\r\n\r\nd) Add the endpoint manually, parsing the hostname and changing the port to the client port.\r\n\r\nI also have thought if it's worth checking if this endpoint is on the list to avoid adding duplicates (it wouldn't be a problem, we would check the new endpoint more than once if it was already there, but I was wondering if the hassle of checking if the endpoint exists to avoid checking it twice is worth it).",
        "createdAt" : "2019-01-17T14:40:51Z",
        "updatedAt" : "2019-01-18T11:04:54Z",
        "lastEditedBy" : "67bc6085-2cd9-4674-9dbc-d2a266f478be",
        "tags" : [
        ]
      },
      {
        "id" : "0e658bd7-96cc-4515-abc9-43e604f0c630",
        "parentId" : "c31da90d-2fcd-47da-8d90-a81de4a6f457",
        "authorId" : "cccc7bed-95f4-42a9-83ef-6ba1a4dca7ec",
        "body" : "Thanks for the elaboration @ereslibre ! Since you have verified that this is the best working solution, then I am OK to keep it that way.",
        "createdAt" : "2019-01-17T14:58:46Z",
        "updatedAt" : "2019-01-18T11:04:54Z",
        "lastEditedBy" : "cccc7bed-95f4-42a9-83ef-6ba1a4dca7ec",
        "tags" : [
        ]
      },
      {
        "id" : "153e3007-ad47-448b-a780-05d32c017bfd",
        "parentId" : "c31da90d-2fcd-47da-8d90-a81de4a6f457",
        "authorId" : "67bc6085-2cd9-4674-9dbc-d2a266f478be",
        "body" : "Thank you @rosti for the feedback!",
        "createdAt" : "2019-01-17T15:01:32Z",
        "updatedAt" : "2019-01-18T11:04:54Z",
        "lastEditedBy" : "67bc6085-2cd9-4674-9dbc-d2a266f478be",
        "tags" : [
        ]
      }
    ],
    "commit" : "b4cb3fd37c8f36c653b551ea5f962c2cac1aba9b",
    "line" : 39,
    "diffHunk" : "@@ -1,1 +187,191 @@\n\t// Add the new member client address to the list of endpoints\n\tc.Endpoints = append(c.Endpoints, GetClientURLByIP(parsedPeerAddrs.Hostname()))\n\n\treturn ret, nil"
  },
  {
    "id" : "6d4ce658-b5dc-4372-924a-54ea2a913657",
    "prId" : 71945,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/71945#pullrequestreview-184166377",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d722db96-1b25-45ad-bcae-348911a8c2cc",
        "parentId" : null,
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "having a single method that accepts a pointer and the rest accepting non-pointers seems a bit odd.\r\nwe might want to make all of them accept pointer... see GetVersion(),  GetClusterVersions() etc.\r\n",
        "createdAt" : "2018-12-11T12:19:23Z",
        "updatedAt" : "2018-12-13T01:35:32Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      },
      {
        "id" : "a8959e80-567b-4405-9ba2-8082ddddbd47",
        "parentId" : "d722db96-1b25-45ad-bcae-348911a8c2cc",
        "authorId" : "cfee56b2-957f-461a-9a7c-e65e86542734",
        "body" : "you mean that Sync() return the real etcd endpoints? such as:\r\n\r\n```go\r\nfunc (c Client) Sync() ([]string, error) {}\r\n```",
        "createdAt" : "2018-12-11T12:59:31Z",
        "updatedAt" : "2018-12-13T01:35:32Z",
        "lastEditedBy" : "cfee56b2-957f-461a-9a7c-e65e86542734",
        "tags" : [
        ]
      },
      {
        "id" : "28cf6536-f75f-4b5d-9ebc-0b5923cfee9f",
        "parentId" : "d722db96-1b25-45ad-bcae-348911a8c2cc",
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "the methods for `Client` have different signatures:\r\n`func (c *Client) Sync()`\r\n`func (c Client) AddMember(name string, peerAddrs string) ([]Member, error) {`\r\n...\r\n\r\n`Sync()` uses a pointer, but the rest of the methods use non-pointers.\r\n",
        "createdAt" : "2018-12-11T13:19:43Z",
        "updatedAt" : "2018-12-13T01:35:32Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      },
      {
        "id" : "d3226161-a7ac-4b04-9035-aa769bb01fb9",
        "parentId" : "d722db96-1b25-45ad-bcae-348911a8c2cc",
        "authorId" : "cfee56b2-957f-461a-9a7c-e65e86542734",
        "body" : "Sync() only return error now, but the rest of the methods return multi values.\r\nCan change this `Sync()` method return endpoints and error, like other methods?\r\nThe `NewFromCluster` invoke `Sync()` like below:\r\n\r\n```go\r\nendpoints, err = etcdClient.Sync()\r\nif err != nil {\r\n\treturn nil, errors.Wrap(err, \"error syncing endpoints with etc\")\r\n}\r\netcdClient.Endpoints = endpoints\r\n```\r\nIn this case, all methods use non-pointers, and only change `Sync()` methods, but test case maybe need to update.\r\n\r\nThe other ways, the methods of `Client` all change non-pointers to pointer, the way need to change more codes.\r\n\r\nI am not sure if i understand what you mean？If wrong, can you explain your comments again. Thanks.",
        "createdAt" : "2018-12-11T14:03:27Z",
        "updatedAt" : "2018-12-13T01:35:32Z",
        "lastEditedBy" : "cfee56b2-957f-461a-9a7c-e65e86542734",
        "tags" : [
        ]
      },
      {
        "id" : "de9988b3-c41d-4d7a-ad62-50c4e53a1210",
        "parentId" : "d722db96-1b25-45ad-bcae-348911a8c2cc",
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "@pytimer my point is this:\r\n```\r\nfunc (c *Client) Sync(...) ...\r\nfunc (c Client) AddMember(...) ...\r\n...\r\n```\r\n^ see how `c` is a pointer in `Sync` but not a pointer in the rest of methods for the `Client` type.\r\nwe need to make all the methods consistent.\r\n",
        "createdAt" : "2018-12-11T14:20:43Z",
        "updatedAt" : "2018-12-13T01:35:32Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      },
      {
        "id" : "573d5dd1-1a92-455d-bb9b-229cf78827b2",
        "parentId" : "d722db96-1b25-45ad-bcae-348911a8c2cc",
        "authorId" : "8a27151d-3530-4221-90e8-48b3a85cba37",
        "body" : "@pytimer I'm ok with the solution you are proposing:\r\n```\r\nfunc (c Client) Sync() ([]string, error) {}\r\n```\r\n\r\n@neolit123 IMO the solution above keeps consistency in the signature and address the issue.\r\nEventually we will reconsider changing all the methods in another PR",
        "createdAt" : "2018-12-11T14:42:26Z",
        "updatedAt" : "2018-12-13T01:35:32Z",
        "lastEditedBy" : "8a27151d-3530-4221-90e8-48b3a85cba37",
        "tags" : [
        ]
      },
      {
        "id" : "7a1361f9-7fbd-4b6b-a1e4-91a0b739948b",
        "parentId" : "d722db96-1b25-45ad-bcae-348911a8c2cc",
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "/approve\r\nas per @fabriziopandini 's comment.\r\nthanks @pytimer \r\n",
        "createdAt" : "2018-12-11T14:51:19Z",
        "updatedAt" : "2018-12-13T01:35:32Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      },
      {
        "id" : "69a991c8-70ca-47a9-8a71-ce4c72120150",
        "parentId" : "d722db96-1b25-45ad-bcae-348911a8c2cc",
        "authorId" : "8a27151d-3530-4221-90e8-48b3a85cba37",
        "body" : "/hold",
        "createdAt" : "2018-12-11T14:53:40Z",
        "updatedAt" : "2018-12-13T01:35:32Z",
        "lastEditedBy" : "8a27151d-3530-4221-90e8-48b3a85cba37",
        "tags" : [
        ]
      },
      {
        "id" : "d10b1298-25f3-4081-9416-23240d151fdc",
        "parentId" : "d722db96-1b25-45ad-bcae-348911a8c2cc",
        "authorId" : "8a27151d-3530-4221-90e8-48b3a85cba37",
        "body" : "@pytimer please kindly fix as discussed above to address @neolit123  feedback and then I will leave hold",
        "createdAt" : "2018-12-11T14:54:26Z",
        "updatedAt" : "2018-12-13T01:35:32Z",
        "lastEditedBy" : "8a27151d-3530-4221-90e8-48b3a85cba37",
        "tags" : [
        ]
      },
      {
        "id" : "464a8870-a00d-4b15-b9cb-c710ae14698b",
        "parentId" : "d722db96-1b25-45ad-bcae-348911a8c2cc",
        "authorId" : "cfee56b2-957f-461a-9a7c-e65e86542734",
        "body" : "@fabriziopandini @neolit123 \r\n\r\nFix like:\r\n\r\n```go\r\nfunc (c Client) Sync() ([]string, error) {}\r\n```\r\n\r\nIs it ok?",
        "createdAt" : "2018-12-11T15:01:53Z",
        "updatedAt" : "2018-12-13T01:35:32Z",
        "lastEditedBy" : "cfee56b2-957f-461a-9a7c-e65e86542734",
        "tags" : [
        ]
      },
      {
        "id" : "56633f44-190a-435f-bfb8-c89c6b7d1922",
        "parentId" : "d722db96-1b25-45ad-bcae-348911a8c2cc",
        "authorId" : "cccc7bed-95f4-42a9-83ef-6ba1a4dca7ec",
        "body" : "@pytimer @fabriziopandini @neolit123 I am not OK with `func (c Client) Sync() ([]string, error)`. This is no longer a `Sync` method. It's not even a `GetEndpoints` method (because we have `Endpoints` member in `Client`). Furthermore, this introduces a code smell (inappropriate intimacy), where `NewFromCluster` now updates field inside `Client`.\r\n\r\nThis is a lot worse solution to the problem it tries to solve. I am much more in favor of making all methods `func (c *Client)`, than have this. I am also in favor of having only `Sync()` take a pointer to `Client`.",
        "createdAt" : "2018-12-12T09:58:19Z",
        "updatedAt" : "2018-12-13T01:35:32Z",
        "lastEditedBy" : "cccc7bed-95f4-42a9-83ef-6ba1a4dca7ec",
        "tags" : [
        ]
      },
      {
        "id" : "f84dd458-567e-484a-b895-ede924f909fc",
        "parentId" : "d722db96-1b25-45ad-bcae-348911a8c2cc",
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "@pytimer \r\nOK, i missed the part that we want to modify the existing Client object and not a copy.\r\nplease bring back `(c *Client) Sync()` .\r\n\r\nwe will then cherry pick this PR for 1.13.\r\nand we can have another PR that refactors all methods to use pointers.\r\n",
        "createdAt" : "2018-12-12T13:04:57Z",
        "updatedAt" : "2018-12-13T01:35:32Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      }
    ],
    "commit" : "48d757b6bb5a46ef8daf48fe57cc88bee4f80262",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +198,202 @@// Sync synchronizes client's endpoints with the known endpoints from the etcd membership.\nfunc (c *Client) Sync() error {\n\tcli, err := clientv3.New(clientv3.Config{\n\t\tEndpoints:   c.Endpoints,\n\t\tDialTimeout: 20 * time.Second,"
  },
  {
    "id" : "7d3c325e-2c2f-48bc-977f-10c2e9e8e0a4",
    "prId" : 70893,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/70893#pullrequestreview-174059522",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "93b24595-1a5c-4cbe-a9dc-9112206b2f33",
        "parentId" : null,
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "i guess there is no other way to determine if these pod manifests were created by kubeadm 1.12?\r\n",
        "createdAt" : "2018-11-09T23:18:33Z",
        "updatedAt" : "2018-11-13T08:14:57Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      },
      {
        "id" : "7f917465-f6eb-4154-8759-54dfcf57168c",
        "parentId" : "93b24595-1a5c-4cbe-a9dc-9112206b2f33",
        "authorId" : "8a27151d-3530-4221-90e8-48b3a85cba37",
        "body" : "I'm not a fan of this solution, but considering it should go aways next cycle I think this can be accepted (the same hack is used elsewhere in kubeadm itself).\r\nNevertheless, if there are any better idea ...",
        "createdAt" : "2018-11-10T07:00:00Z",
        "updatedAt" : "2018-11-13T08:14:57Z",
        "lastEditedBy" : "8a27151d-3530-4221-90e8-48b3a85cba37",
        "tags" : [
        ]
      },
      {
        "id" : "7807d2a7-e6dc-46e3-803b-46e1e0539da8",
        "parentId" : "93b24595-1a5c-4cbe-a9dc-9112206b2f33",
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "we probably should just merge on monday unless there is further feedback.\r\n",
        "createdAt" : "2018-11-10T13:33:47Z",
        "updatedAt" : "2018-11-13T08:14:57Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      },
      {
        "id" : "619d6a90-9e71-4ce2-b024-a5c3f957f389",
        "parentId" : "93b24595-1a5c-4cbe-a9dc-9112206b2f33",
        "authorId" : "cccc7bed-95f4-42a9-83ef-6ba1a4dca7ec",
        "body" : "Works for me.\r\nIn the future it may be handy to add a comment at the beginning of generated YAML files, stating that these files are autogenerated and the kubeadm version with which it was done. This will not only provide a start point for issues like this, but make users less tempted to tamper the generated YAMLs themselves, rather than edit the kubeadm config and rerun it.",
        "createdAt" : "2018-11-12T14:05:03Z",
        "updatedAt" : "2018-11-13T08:14:57Z",
        "lastEditedBy" : "cccc7bed-95f4-42a9-83ef-6ba1a4dca7ec",
        "tags" : [
        ]
      },
      {
        "id" : "eea9f96a-0e69-4519-bc0b-b108369cdea2",
        "parentId" : "93b24595-1a5c-4cbe-a9dc-9112206b2f33",
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "Very good point @rosti, please file an issue for it!",
        "createdAt" : "2018-11-12T15:06:46Z",
        "updatedAt" : "2018-11-13T08:14:57Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      },
      {
        "id" : "f573915c-4ef1-4038-937b-cd4d305dea02",
        "parentId" : "93b24595-1a5c-4cbe-a9dc-9112206b2f33",
        "authorId" : "8a27151d-3530-4221-90e8-48b3a85cba37",
        "body" : "@luxas @rosti what about adding an annotation too? comments are fine, but cannot be used by app",
        "createdAt" : "2018-11-12T15:30:23Z",
        "updatedAt" : "2018-11-13T08:14:57Z",
        "lastEditedBy" : "8a27151d-3530-4221-90e8-48b3a85cba37",
        "tags" : [
        ]
      },
      {
        "id" : "dd96e2ba-c16a-4181-bff8-b71413d95573",
        "parentId" : "93b24595-1a5c-4cbe-a9dc-9112206b2f33",
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "for 1.12 -> 1.13 there is no way.\r\n\r\nfor later versions an annotation seem OK as long as we need it and/or want to maintain it..\r\nannotating which pods are created with what kubeadm version seems like a nice to have to me.\r\n\r\n```\r\nkind: Pod\r\nmetadata:\r\n  annotations:\r\n    kubeadmVersion: <version-from-client>\r\n```\r\n`version-from-client` should be the same as `kubeadm version -o=short`\r\nand be parsed using: https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/pkg/util/version/version.go#L111\r\n",
        "createdAt" : "2018-11-12T15:48:00Z",
        "updatedAt" : "2018-11-13T08:14:57Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      },
      {
        "id" : "7d96ffa7-ed9d-4fb9-a27e-f8f25f830802",
        "parentId" : "93b24595-1a5c-4cbe-a9dc-9112206b2f33",
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "issue created:\r\nhttps://github.com/kubernetes/kubeadm/issues/1231\r\n",
        "createdAt" : "2018-11-12T19:31:55Z",
        "updatedAt" : "2018-11-13T08:14:57Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      }
    ],
    "commit" : "7f1b2a62a749852782b9ec102b22242fef5dd008",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +135,139 @@\tetcdContainer := etcdPod.Spec.Containers[0]\n\tfor _, arg := range etcdContainer.Command {\n\t\tif arg == \"--listen-client-urls=https://127.0.0.1:2379\" {\n\t\t\tklog.V(1).Infoln(\"etcd manifest created by kubeadm v1.12\")\n\t\t\toldManifest = true"
  },
  {
    "id" : "c4b07777-1aa9-46bb-9b38-6da86818cf81",
    "prId" : 70633,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/70633#pullrequestreview-176238002",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "31bb143d-eba2-46e8-b1f1-28ecc20a38d9",
        "parentId" : null,
        "authorId" : "cccc7bed-95f4-42a9-83ef-6ba1a4dca7ec",
        "body" : "Could have used GetClientURLByIP here, but it's not bad the way it is either.",
        "createdAt" : "2018-11-19T10:48:44Z",
        "updatedAt" : "2018-11-19T10:50:07Z",
        "lastEditedBy" : "cccc7bed-95f4-42a9-83ef-6ba1a4dca7ec",
        "tags" : [
        ]
      }
    ],
    "commit" : "99887716c5e34a6289b2e7334cd00d986d4fd065",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +365,369 @@// address and client port for the API controller\nfunc GetClientURL(cfg *kubeadmapi.InitConfiguration) string {\n\treturn \"https://\" + net.JoinHostPort(cfg.LocalAPIEndpoint.AdvertiseAddress, strconv.Itoa(constants.EtcdListenClientPort))\n}\n"
  },
  {
    "id" : "3a1f7902-d4b7-47a1-a40f-9b99ef7c9f44",
    "prId" : 64337,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/64337#pullrequestreview-124951709",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "eeb79e8b-a0af-4bab-88db-dd6403c89820",
        "parentId" : null,
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "nit: we call `MasterConfiguration` generally `cfg`. `etcd` or `etcdCfg` or `etcdObj` or `e` would probably be better here.",
        "createdAt" : "2018-05-31T19:53:33Z",
        "updatedAt" : "2018-05-31T19:58:26Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      }
    ],
    "commit" : "6ed91fc07ca75591691d3aacc30dc8d56f6cbf62",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +220,224 @@\n// CheckConfigurationIsHA returns true if the given MasterConfiguration etcd block appears to be an HA configuration.\nfunc CheckConfigurationIsHA(cfg *kubeadmapi.Etcd) bool {\n\treturn cfg.External != nil && len(cfg.External.Endpoints) > 1\n}"
  },
  {
    "id" : "ebd21f49-733b-4b67-95b1-65a3eef794e6",
    "prId" : 63925,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/63925#pullrequestreview-121111896",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "275be48b-e146-45db-ab8b-cc99843c8a56",
        "parentId" : null,
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "change only if see fit :+1: \r\n```\r\nfor _, v := range versions {\r\n\tif clusterVersion != \"\" && clusterVersion != v {\r\n\t\treturn \"\", fmt.Errorf(\"etcd cluster contains endpoints with mismatched versions: %v\", versions)\r\n\t}\r\n\tclusterVersion = v\r\n}\r\n```\r\n",
        "createdAt" : "2018-05-16T22:28:26Z",
        "updatedAt" : "2018-05-17T15:02:46Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      },
      {
        "id" : "876bf82f-7722-41e4-a318-44c6b2f18012",
        "parentId" : "275be48b-e146-45db-ab8b-cc99843c8a56",
        "authorId" : "6746e0cc-0c52-4344-889b-945a672c83e3",
        "body" : "I added this to my PR for fixing the static pod upgrade regression in master.",
        "createdAt" : "2018-05-17T16:07:21Z",
        "updatedAt" : "2018-05-17T16:07:21Z",
        "lastEditedBy" : "6746e0cc-0c52-4344-889b-945a672c83e3",
        "tags" : [
        ]
      }
    ],
    "commit" : "db43b87ba75f863b07b95064b961751e3df3f89e",
    "line" : 96,
    "diffHunk" : "@@ -1,1 +141,145 @@\t\t} else {\n\t\t\tclusterVersion = v\n\t\t}\n\t}\n\tif clusterVersion == \"\" {"
  },
  {
    "id" : "5da0aac6-b148-4d7a-8eff-3d3dacecd991",
    "prId" : 62655,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/62655#pullrequestreview-114506886",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "eaa69291-1d28-4a10-9589-43fd9d02209c",
        "parentId" : null,
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "Did you test the upgrade scenario of external etcd that @craigtracey was validating?  ",
        "createdAt" : "2018-04-23T16:46:33Z",
        "updatedAt" : "2018-04-24T16:00:05Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      },
      {
        "id" : "4333c099-201c-4f38-b941-8c179b9c6e12",
        "parentId" : "eaa69291-1d28-4a10-9589-43fd9d02209c",
        "authorId" : "bf66f693-b705-46d8-a378-3750b55f033c",
        "body" : "We don't have a test for this, but I assume @detiber would include it in the follow up PR?",
        "createdAt" : "2018-04-23T18:39:03Z",
        "updatedAt" : "2018-04-24T16:00:05Z",
        "lastEditedBy" : "bf66f693-b705-46d8-a378-3750b55f033c",
        "tags" : [
        ]
      }
    ],
    "commit" : "dac4fe84bbd26332452699320f8ed504c279b8a9",
    "line" : 41,
    "diffHunk" : "@@ -1,1 +39,43 @@\n// GenericClient is a common etcd client for supported etcd servers\ntype GenericClient struct {\n\tEndpoints []string\n\tTLSConfig *tls.Config"
  },
  {
    "id" : "5cae35a5-fc14-49dd-be10-52ab747d5733",
    "prId" : 62655,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/62655#pullrequestreview-114868886",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8cc63c2f-e845-4345-966e-5132d32facca",
        "parentId" : null,
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "this is basically a wait.Until, please use that f(n) or comment to reduce this later. ",
        "createdAt" : "2018-04-23T16:48:16Z",
        "updatedAt" : "2018-04-24T16:00:05Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      },
      {
        "id" : "9718d1b7-fa47-450c-a124-c58d7805b169",
        "parentId" : "8cc63c2f-e845-4345-966e-5132d32facca",
        "authorId" : "bf66f693-b705-46d8-a378-3750b55f033c",
        "body" : "@timothysc, are you referring to this?\r\nhttps://godoc.org/k8s.io/apimachinery/pkg/util/wait#Until",
        "createdAt" : "2018-04-24T15:47:23Z",
        "updatedAt" : "2018-04-24T16:00:05Z",
        "lastEditedBy" : "bf66f693-b705-46d8-a378-3750b55f033c",
        "tags" : [
        ]
      },
      {
        "id" : "ee9b1a11-0361-46df-8b9c-07b4a47c3fbd",
        "parentId" : "8cc63c2f-e845-4345-966e-5132d32facca",
        "authorId" : "6746e0cc-0c52-4344-889b-945a672c83e3",
        "body" : "https://github.com/stealthybox/kubernetes/pull/2 attempts to modify WaitForStatus to use wait.Until from apimachinery.",
        "createdAt" : "2018-04-24T16:36:41Z",
        "updatedAt" : "2018-04-24T16:36:42Z",
        "lastEditedBy" : "6746e0cc-0c52-4344-889b-945a672c83e3",
        "tags" : [
        ]
      }
    ],
    "commit" : "dac4fe84bbd26332452699320f8ed504c279b8a9",
    "line" : 112,
    "diffHunk" : "@@ -1,1 +110,114 @@func (c GenericClient) WaitForStatus(delay time.Duration, retries int, retryInterval time.Duration) (*clientv3.StatusResponse, error) {\n\tfmt.Printf(\"[util/etcd] Waiting %v for initial delay\\n\", delay)\n\ttime.Sleep(delay)\n\tfor i := 0; i < retries; i++ {\n\t\tif i > 0 {"
  },
  {
    "id" : "8bb1237c-7c21-4fcc-8ba7-1033206c7769",
    "prId" : 104134,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/104134#pullrequestreview-723657603",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0da38e48-5baa-47ce-956a-b1bba441eca4",
        "parentId" : null,
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "just a non-blocking comment:\r\n\r\ni find the etcd API package organization a bit odd.\r\ni would have expected member types and common errors to have been abstract at the top level v3.\r\n",
        "createdAt" : "2021-08-05T16:58:22Z",
        "updatedAt" : "2021-08-05T16:58:22Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      },
      {
        "id" : "e56167b6-a390-4268-a7c3-8112613f3c82",
        "parentId" : "0da38e48-5baa-47ce-956a-b1bba441eca4",
        "authorId" : "84bc0fbc-6074-4eea-8990-8ddb9995fc14",
        "body" : "Agreed :)",
        "createdAt" : "2021-08-05T18:10:43Z",
        "updatedAt" : "2021-08-05T18:10:43Z",
        "lastEditedBy" : "84bc0fbc-6074-4eea-8990-8ddb9995fc14",
        "tags" : [
        ]
      }
    ],
    "commit" : "c8431f42d9a2c54a978b8db4399660c168305e73",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +38,42 @@\t\"github.com/pkg/errors\"\n\t\"go.etcd.io/etcd/api/v3/etcdserverpb\"\n\t\"go.etcd.io/etcd/api/v3/v3rpc/rpctypes\"\n\t\"go.etcd.io/etcd/client/pkg/v3/transport\"\n\tclientv3 \"go.etcd.io/etcd/client/v3\""
  },
  {
    "id" : "3245239f-f3cd-43c4-8ce7-ac1652cec9c9",
    "prId" : 104134,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/104134#pullrequestreview-723703074",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "183bbacf-8955-4435-9642-2a241da29fe8",
        "parentId" : null,
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "just to double check, if `err != nil` is `true` here, is it reaching (being assigned to) `lastError` so that we can show it to the user?",
        "createdAt" : "2021-08-05T17:05:32Z",
        "updatedAt" : "2021-08-05T17:05:32Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      },
      {
        "id" : "2837ab18-6415-4a4f-bff9-0d57b61582cd",
        "parentId" : "183bbacf-8955-4435-9642-2a241da29fe8",
        "authorId" : "84bc0fbc-6074-4eea-8990-8ddb9995fc14",
        "body" : "Yes - this was covered in one of the unit tests (albeit now removed, but yes, this was tested).",
        "createdAt" : "2021-08-05T19:05:27Z",
        "updatedAt" : "2021-08-05T19:05:27Z",
        "lastEditedBy" : "84bc0fbc-6074-4eea-8990-8ddb9995fc14",
        "tags" : [
        ]
      }
    ],
    "commit" : "c8431f42d9a2c54a978b8db4399660c168305e73",
    "line" : 52,
    "diffHunk" : "@@ -1,1 +389,393 @@\t\t\tvar listResp *clientv3.MemberListResponse\n\t\t\tlistResp, err = cli.MemberList(ctx)\n\t\t\tif err == nil {\n\t\t\t\trespMembers = listResp.Members\n\t\t\t\treturn true, nil"
  }
]