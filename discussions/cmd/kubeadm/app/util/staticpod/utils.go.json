[
  {
    "id" : "ba3dbbc1-00ef-455e-9260-e2bf61e2fe25",
    "prId" : 86493,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/86493#pullrequestreview-338220887",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "865a7902-c4c8-4cbe-b79d-fea317552357",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "will a probe address of `0.0.0.0` work?",
        "createdAt" : "2019-12-20T21:12:29Z",
        "updatedAt" : "2020-01-03T23:42:26Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "76db251f-2eb3-47cc-beba-143f0cdc3032",
        "parentId" : "865a7902-c4c8-4cbe-b79d-fea317552357",
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "good catch \r\n```\r\n--- FAIL: TestGetControllerManagerProbeAddress (0.00s)\r\n    --- FAIL: TestGetControllerManagerProbeAddress/setting_controller_manager_extra_ipv6_address_arg_to_something_acknowledges_it#01 (0.00s)\r\n        /Users/aojea/work/src/k8s.io/kubernetes/cmd/kubeadm/app/util/staticpod/utils_test.go:141: Unexpected result from GetControllerManagerProbeAddress:\r\n            \texpected: 127.0.0.1\r\n            \tactual: 0.0.0.0\r\n```",
        "createdAt" : "2019-12-20T21:15:44Z",
        "updatedAt" : "2020-01-03T23:42:26Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      },
      {
        "id" : "fae2fd82-2250-41e2-8adf-7016d0c6021f",
        "parentId" : "865a7902-c4c8-4cbe-b79d-fea317552357",
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "I guess that we should default to localhost for unspecified addresses, right?\r\nmy question is, should we return `localhost` or try to be smart and resolve the ip family?",
        "createdAt" : "2019-12-20T21:17:06Z",
        "updatedAt" : "2020-01-03T23:42:26Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      },
      {
        "id" : "2f0b7f92-10e1-4b8e-a3b7-362a0cc32f16",
        "parentId" : "865a7902-c4c8-4cbe-b79d-fea317552357",
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "@mauilion I remember that you told me that in linux is possible to use 0.0.0.0 as destination address, but do you think that will be safe to use it to configure the http probe?",
        "createdAt" : "2019-12-20T21:20:39Z",
        "updatedAt" : "2020-01-03T23:42:26Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      },
      {
        "id" : "f58b40e2-4052-4a2e-bef5-6b6bae32d2e0",
        "parentId" : "865a7902-c4c8-4cbe-b79d-fea317552357",
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "it feels to me that if `0.0.0.0` is passed as `--bind-address` it should be used for a probe too, transparently, without defaulting to a localhost or per family IP.\r\n",
        "createdAt" : "2019-12-20T21:28:25Z",
        "updatedAt" : "2020-01-03T23:42:26Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      },
      {
        "id" : "76872ba2-2af9-4066-b297-7413618e5fd2",
        "parentId" : "865a7902-c4c8-4cbe-b79d-fea317552357",
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "I think that we should fall back to loopbacks addresses for the probes, it's the most secure and reliable IMHO",
        "createdAt" : "2019-12-20T21:45:31Z",
        "updatedAt" : "2020-01-03T23:42:26Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      },
      {
        "id" : "ea819f59-5abc-419e-ad58-fcfe6832a52b",
        "parentId" : "865a7902-c4c8-4cbe-b79d-fea317552357",
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "alright.",
        "createdAt" : "2019-12-20T21:53:03Z",
        "updatedAt" : "2020-01-03T23:42:26Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      },
      {
        "id" : "5d565acf-e512-483e-b5b4-efd46fd9e63b",
        "parentId" : "865a7902-c4c8-4cbe-b79d-fea317552357",
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "I mean, if it binds to 0.0.0.0 is going to listen in all interfaces and all ip addresses ... but I don't understand what IP is going to poll the probe, is deterministic the 0.0.0.0 or it just picks one randomly in the host? ",
        "createdAt" : "2019-12-20T21:53:05Z",
        "updatedAt" : "2020-01-03T23:42:26Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      },
      {
        "id" : "450a6c61-8e76-47da-993f-9d10e18818a1",
        "parentId" : "865a7902-c4c8-4cbe-b79d-fea317552357",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "> I mean, if it binds to 0.0.0.0 is going to listen in all interfaces and all ip addresses ... but I don't understand what IP is going to poll the probe, is deterministic the 0.0.0.0 or it just picks one randomly in the host?\r\n\r\nI have the same question... is contacting 0.0.0.0 a normal thing to do?",
        "createdAt" : "2019-12-20T21:54:43Z",
        "updatedAt" : "2020-01-03T23:42:26Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "5dabe4d6-5759-4089-bf6d-64713f16730d",
        "parentId" : "865a7902-c4c8-4cbe-b79d-fea317552357",
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "we mostly care for the probes to serve on a loopback IP, yet the 0.0.0.0 -> loopback IP transform becomes a undocumented behavior.\r\n\r\nif someone complains they can customize their manifests.\r\n",
        "createdAt" : "2019-12-20T21:58:43Z",
        "updatedAt" : "2020-01-03T23:42:26Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      },
      {
        "id" : "f3d3b92c-07d4-4bcc-a7e8-523d96164403",
        "parentId" : "865a7902-c4c8-4cbe-b79d-fea317552357",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "does a probe against 0.0.0.0 actually work?",
        "createdAt" : "2019-12-20T22:01:36Z",
        "updatedAt" : "2020-01-03T23:42:26Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "362210ee-39b3-4bb7-bfae-d2aa9326cad9",
        "parentId" : "865a7902-c4c8-4cbe-b79d-fea317552357",
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "_checking_ in the meantime net.Dial considers it valid :/\r\nhttps://golang.org/src/net/dial.go",
        "createdAt" : "2019-12-20T22:11:32Z",
        "updatedAt" : "2020-01-03T23:42:26Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      },
      {
        "id" : "d38cf9bc-0428-44fc-a051-5278ca7f978b",
        "parentId" : "865a7902-c4c8-4cbe-b79d-fea317552357",
        "authorId" : "67bc6085-2cd9-4674-9dbc-d2a266f478be",
        "body" : "One thing I'm worried about here is whether using 0.0.0.0 for the probe works now because of obscure reasons but will stop working in the future; I'm not sure if this is legal at all. Also, would this work on kubelet on Windows?\r\n\r\n@aojea: based on your last comment this is at least documented so I'd consider it safe, despite I don't get how this is implemented.",
        "createdAt" : "2019-12-20T22:23:44Z",
        "updatedAt" : "2020-01-03T23:42:26Z",
        "lastEditedBy" : "67bc6085-2cd9-4674-9dbc-d2a266f478be",
        "tags" : [
        ]
      },
      {
        "id" : "05553788-e9a7-4337-a018-577f88f4e3ca",
        "parentId" : "865a7902-c4c8-4cbe-b79d-fea317552357",
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "`kind create cluster`\r\n\r\n`kubectl apply`\r\n\r\n```\r\napiVersion: v1\r\nkind: Pod\r\nmetadata:\r\n  labels:\r\n    test: liveness\r\n  name: liveness-http\r\nspec:\r\n  containers:\r\n  - name: liveness\r\n    image: k8s.gcr.io/liveness\r\n    args:\r\n    - /server\r\n    livenessProbe:\r\n      httpGet:\r\n        host: 0.0.0.0\r\n        path: /healthz\r\n        port: 8080\r\n        httpHeaders:\r\n        - name: Custom-Header\r\n          value: Awesome\r\n      initialDelaySeconds: 3\r\n      periodSeconds: 3\r\n```\r\n\r\nand seems that the probe fails when using 0.0.0.0 as host\r\n\r\n```\r\nEvents:\r\n  Type     Reason     Age                 From                         Message\r\n  ----     ------     ----                ----                         -------\r\n  Normal   Scheduled  109s                default-scheduler            Successfully assigned default/liveness-http to kind-control-plane\r\n  Normal   Pulled     73s (x3 over 100s)  kubelet, kind-control-plane  Successfully pulled image \"k8s.gcr.io/liveness\"\r\n  Normal   Created    72s (x3 over 99s)   kubelet, kind-control-plane  Created container liveness\r\n  Normal   Started    72s (x3 over 99s)   kubelet, kind-control-plane  Started container liveness\r\n  Normal   Pulling    63s (x4 over 108s)  kubelet, kind-control-plane  Pulling image \"k8s.gcr.io/liveness\"\r\n  Warning  Unhealthy  63s (x9 over 96s)   kubelet, kind-control-plane  Liveness probe failed: Get http://0.0.0.0:8080/healthz: dial tcp 0.0.0.0:8080: connect: connection refused\r\n  Normal   Killing    63s (x3 over 90s)   kubelet, kind-control-plane  Container liveness failed liveness probe, will be restarted\r\n```",
        "createdAt" : "2019-12-20T22:23:47Z",
        "updatedAt" : "2020-01-03T23:42:26Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      },
      {
        "id" : "4d53a9c3-e762-4af3-a25b-9f54b5a0dd58",
        "parentId" : "865a7902-c4c8-4cbe-b79d-fea317552357",
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "I've created another one without the host parameter and it works\r\n\r\nthe curious is that the url without host works\r\n```\r\n    Liveness:       http-get http://:8080/healthz delay=3s timeout=1s period=3s #success=1 #failure=3\r\n```\r\nbut this doesn't\r\n```\r\n    Liveness:       http-get http://0.0.0.0:8080/healthz delay=3s timeout=1s period=3s #success=1 #failure=3\r\n```",
        "createdAt" : "2019-12-20T22:29:57Z",
        "updatedAt" : "2020-01-03T23:42:26Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      },
      {
        "id" : "8751088c-a9aa-4ea6-8267-09e3fd125f8d",
        "parentId" : "865a7902-c4c8-4cbe-b79d-fea317552357",
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "ok, in that case our fallback here is valid.",
        "createdAt" : "2019-12-20T22:30:22Z",
        "updatedAt" : "2020-01-03T23:42:26Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      },
      {
        "id" : "f54c6c1e-d7fe-47a8-a041-4115e1848197",
        "parentId" : "865a7902-c4c8-4cbe-b79d-fea317552357",
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "> the curious is that the url without host works\r\n\r\nthis could be defaulting that k8s probes are doing.",
        "createdAt" : "2019-12-20T22:32:19Z",
        "updatedAt" : "2020-01-03T23:42:26Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      },
      {
        "id" : "16260756-9164-4590-bbc2-b5cdea049c5e",
        "parentId" : "865a7902-c4c8-4cbe-b79d-fea317552357",
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "using 0.0.0.0 will end in a broken environment hard to debug (it took me a while today to find out the problem) and is common to use those addresses, at least we use `::` in kind , I think that in case of having bind-address as 0.0.0.0 or :: we should choose one of the following options:\r\n1. omit the host field in the probe\r\n2. use a loopback address",
        "createdAt" : "2019-12-20T22:32:58Z",
        "updatedAt" : "2020-01-03T23:42:26Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      },
      {
        "id" : "ecc80435-1c1f-45a4-8367-0c34617570eb",
        "parentId" : "865a7902-c4c8-4cbe-b79d-fea317552357",
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "I'm leaning towards omitting the host field, at the end 0.0.0.0 and :: is kind of \"no address\" :)",
        "createdAt" : "2019-12-20T22:38:11Z",
        "updatedAt" : "2020-01-03T23:42:26Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      },
      {
        "id" : "46f5965f-91b1-4fa4-b451-6ab79a7a8124",
        "parentId" : "865a7902-c4c8-4cbe-b79d-fea317552357",
        "authorId" : "67bc6085-2cd9-4674-9dbc-d2a266f478be",
        "body" : "So looks like omitting the host is the best way to go, so we don't need ad-hoc logic for ipv4 and ipv6 here, right?",
        "createdAt" : "2019-12-20T22:38:20Z",
        "updatedAt" : "2020-01-03T23:42:26Z",
        "lastEditedBy" : "67bc6085-2cd9-4674-9dbc-d2a266f478be",
        "tags" : [
        ]
      },
      {
        "id" : "1e1e2dbd-bbdb-4148-9bec-3d9a0aa54892",
        "parentId" : "865a7902-c4c8-4cbe-b79d-fea317552357",
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "kubeadm itself does block 0.0.0.0 at least as an api server advertise address: https://github.com/kubernetes/kubernetes/blob/master/cmd/kubeadm/app/util/config/common.go#L121-L140\r\nbut not for custom bind-address (extra args) for the other components.\r\n\r\nwe also have to note that the api server probe uses the advertise address, while the probes for the other components use bind-address\r\nhttps://github.com/kubernetes/kubernetes/blob/34ba1683b9d68284a481814d58673f999cff0520/cmd/kubeadm/app/util/staticpod/utils.go#L237-L251\r\n\r\nso it seems to me an api server probe of 0.0.0.0 was already not possible.\r\n",
        "createdAt" : "2019-12-20T22:42:55Z",
        "updatedAt" : "2020-01-03T23:42:26Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      },
      {
        "id" : "87155802-ea14-456b-93d7-02dcc727430d",
        "parentId" : "865a7902-c4c8-4cbe-b79d-fea317552357",
        "authorId" : "67bc6085-2cd9-4674-9dbc-d2a266f478be",
        "body" : "For the sake of completeness: https://tools.ietf.org/html/rfc5735#section-3.",
        "createdAt" : "2019-12-20T22:46:45Z",
        "updatedAt" : "2020-01-03T23:42:26Z",
        "lastEditedBy" : "67bc6085-2cd9-4674-9dbc-d2a266f478be",
        "tags" : [
        ]
      },
      {
        "id" : "94ba4ba9-ceb8-4aba-9ae4-d19b8dbccfd1",
        "parentId" : "865a7902-c4c8-4cbe-b79d-fea317552357",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "Commented on #86504",
        "createdAt" : "2020-01-03T18:49:32Z",
        "updatedAt" : "2020-01-03T23:42:26Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "c0bc36c12e17fec422dcf6ae431f1cdb55c2d82b",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +253,257 @@// GetControllerManagerProbeAddress returns the kubernetes controller manager probe address\nfunc GetControllerManagerProbeAddress(cfg *kubeadmapi.ClusterConfiguration) string {\n\tif addr, exists := cfg.ControllerManager.ExtraArgs[kubeControllerManagerBindAddressArg]; exists {\n\t\treturn getProbeAddress(addr)\n\t}"
  },
  {
    "id" : "9d958d26-cc3e-4493-a4f7-cf5da2d8f40f",
    "prId" : 60728,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/60728#pullrequestreview-101245044",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4b06e8e9-d4ae-4be5-9bf3-ea298d3b134d",
        "parentId" : null,
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "This pre-supposes that etcdctl is installed and it's not part of the installation process.  You'd have to use the client library. ",
        "createdAt" : "2018-03-05T15:54:37Z",
        "updatedAt" : "2018-03-05T15:54:49Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      },
      {
        "id" : "2c1c3e84-339b-4b07-8ae6-28a0ae2bdef4",
        "parentId" : "4b06e8e9-d4ae-4be5-9bf3-ea298d3b134d",
        "authorId" : "bf66f693-b705-46d8-a378-3750b55f033c",
        "body" : "Hi Tim,\r\nWould you please clarify? The liveness probe exec's into the container:\r\nhttps://kubernetes.io/docs/reference/generated/kubernetes-api/v1.9/#execaction-v1-core\r\n\r\nThis does assume that `etcdctl` is an included binary on the `PATH` inside the `etcd` container, and that it's capable of using the V3 API.",
        "createdAt" : "2018-03-05T17:01:52Z",
        "updatedAt" : "2018-03-05T17:01:52Z",
        "lastEditedBy" : "bf66f693-b705-46d8-a378-3750b55f033c",
        "tags" : [
        ]
      },
      {
        "id" : "dcc2cca5-a462-460b-8cd6-699bd09e35e9",
        "parentId" : "4b06e8e9-d4ae-4be5-9bf3-ea298d3b134d",
        "authorId" : "bf66f693-b705-46d8-a378-3750b55f033c",
        "body" : "I have verified this works with the current upstream image: `k8s.gcr.io/etcd-amd64:3.1.11`",
        "createdAt" : "2018-03-05T17:04:49Z",
        "updatedAt" : "2018-03-05T17:04:49Z",
        "lastEditedBy" : "bf66f693-b705-46d8-a378-3750b55f033c",
        "tags" : [
        ]
      }
    ],
    "commit" : "9bbf3fd5393455b544f6d7d0ed622d551c8e6741",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +102,106 @@\ttlsFlags := fmt.Sprintf(\"--cacert=%[1]s/%[2]s --cert=%[1]s/%[3]s --key=%[1]s/%[4]s\", certsDir, CACertName, CertName, KeyName)\n\t// etcd pod is alive if a linearizable get succeeds.\n\tcmd := fmt.Sprintf(\"ETCDCTL_API=3 etcdctl --endpoints=%s:%d %s get foo\", GetProbeAddress(cfg, componentName), port, tlsFlags)\n\n\treturn &v1.Probe{"
  },
  {
    "id" : "5e75f402-26eb-417a-abb7-af514012d808",
    "prId" : 53484,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/53484#pullrequestreview-73471156",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8c3b1355-ca42-4f39-8836-b22d2d8a41a3",
        "parentId" : null,
        "authorId" : "bdc500eb-fd23-4d89-81ce-2986aa831dfa",
        "body" : "the result here is that ipv4 is always prioritised over ipv6 if a component uses hostnames. we should add a test to make this behaviour explicit.",
        "createdAt" : "2017-10-06T13:14:50Z",
        "updatedAt" : "2017-11-03T17:46:10Z",
        "lastEditedBy" : "bdc500eb-fd23-4d89-81ce-2986aa831dfa",
        "tags" : [
        ]
      },
      {
        "id" : "1ff365fb-12c9-4993-9f98-8cfbf3abdef8",
        "parentId" : "8c3b1355-ca42-4f39-8836-b22d2d8a41a3",
        "authorId" : "b6f0a138-d8c9-4579-8e5a-45064a09c78c",
        "body" : "That is correct. Preferring v4 over v6 is the approach that is taken elsewhere in the project. Since we pass a hostname to `net.LookupIP`, it can be challenging to test the behavior in unit tests b/c it depends on the layout of `/etc/hosts` on the host. Let me know if you have suggestions.",
        "createdAt" : "2017-10-06T20:26:08Z",
        "updatedAt" : "2017-11-03T17:46:10Z",
        "lastEditedBy" : "b6f0a138-d8c9-4579-8e5a-45064a09c78c",
        "tags" : [
        ]
      },
      {
        "id" : "fe806de0-cfb7-4b8a-9093-2131546629cc",
        "parentId" : "8c3b1355-ca42-4f39-8836-b22d2d8a41a3",
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "seems like you could `return addr.To4().String()` here? to make the code shorter",
        "createdAt" : "2017-10-27T18:20:04Z",
        "updatedAt" : "2017-11-03T17:46:10Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      },
      {
        "id" : "62b56722-abc3-42cd-90c8-015584b7d86e",
        "parentId" : "8c3b1355-ca42-4f39-8836-b22d2d8a41a3",
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "ping @danehans ",
        "createdAt" : "2017-11-01T13:23:45Z",
        "updatedAt" : "2017-11-03T17:46:10Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      }
    ],
    "commit" : "1d478936084ff5a27200f5865e42badca46bd6a6",
    "line" : 97,
    "diffHunk" : "@@ -1,1 +222,226 @@\t\t\t\tfor _, addr := range addrs {\n\t\t\t\t\tif addr.To4() != nil {\n\t\t\t\t\t\tip = addr\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}"
  },
  {
    "id" : "6d9abb5d-46b9-4a80-8760-9d84e2a890d5",
    "prId" : 53484,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/53484#pullrequestreview-74160204",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6a6f113e-dd11-4071-998f-12b279247583",
        "parentId" : null,
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "seems like you could do `addr.To16().String()` here to make the code cleaner?",
        "createdAt" : "2017-10-27T18:20:37Z",
        "updatedAt" : "2017-11-03T17:46:10Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      },
      {
        "id" : "7d63dcf3-1a56-438d-a5c0-15ca891dbebf",
        "parentId" : "6a6f113e-dd11-4071-998f-12b279247583",
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "ping @danehans ",
        "createdAt" : "2017-11-01T13:23:58Z",
        "updatedAt" : "2017-11-03T17:46:10Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      },
      {
        "id" : "d2405904-0148-45fc-bb45-83fcac4c8585",
        "parentId" : "6a6f113e-dd11-4071-998f-12b279247583",
        "authorId" : "b6f0a138-d8c9-4579-8e5a-45064a09c78c",
        "body" : "@luxas I updated the PR to do `addr.To16().String()` and the same for To4, but I don't think that is exactly the approach we want to take. We want to iterate over the slice of IP's and prefer a v4 address over a v6 address. In the above, we want to assign the v6 addr to ip to save the value and loop back though the slice. This is b/c the next ip may be a v4 ip. I am going to push a new patch set. Take a look and let me know if it makes sense to you.",
        "createdAt" : "2017-11-03T17:40:47Z",
        "updatedAt" : "2017-11-03T17:46:10Z",
        "lastEditedBy" : "b6f0a138-d8c9-4579-8e5a-45064a09c78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "1d478936084ff5a27200f5865e42badca46bd6a6",
    "line" : 101,
    "diffHunk" : "@@ -1,1 +226,230 @@\t\t\t\t\t}\n\t\t\t\t\tif addr.To16() != nil && ip == nil {\n\t\t\t\t\t\tip = addr\n\t\t\t\t\t}\n\t\t\t\t}"
  },
  {
    "id" : "a3dde6f5-1805-41d6-9c2c-8045782e416a",
    "prId" : 49840,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/49840#pullrequestreview-71991885",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9cd4dee5-9d02-4759-8422-355b4df01bd1",
        "parentId" : null,
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "unit tests here please (for both instances)",
        "createdAt" : "2017-10-25T19:39:40Z",
        "updatedAt" : "2017-11-01T04:44:55Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      },
      {
        "id" : "78b0e4bf-61dc-4116-b3dc-5edf2f2b3106",
        "parentId" : "9cd4dee5-9d02-4759-8422-355b4df01bd1",
        "authorId" : "19c6d4c2-ebee-46fd-8427-5a6ae5c98a9d",
        "body" : "will do",
        "createdAt" : "2017-10-25T19:56:32Z",
        "updatedAt" : "2017-11-01T04:44:55Z",
        "lastEditedBy" : "19c6d4c2-ebee-46fd-8427-5a6ae5c98a9d",
        "tags" : [
        ]
      }
    ],
    "commit" : "5a64c049e652d2e8907b3851948b6850f18bbda3",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +104,108 @@\n// VolumeMapToSlice returns a slice of volumes from a map's values\nfunc VolumeMapToSlice(volumes map[string]v1.Volume) []v1.Volume {\n\tv := make([]v1.Volume, 0, len(volumes))\n"
  }
]