[
  {
    "id" : "a08f6a74-1dcf-4f40-96e5-d091fa1a8bd0",
    "prId" : 82414,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/82414#pullrequestreview-284793064",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "509aa670-7c6c-4a22-b190-e6ef29e06598",
        "parentId" : null,
        "authorId" : "e7b8fd7e-f93b-44b6-b6d0-4331207d901c",
        "body" : "I searched the code base, and it seemed that the return values can be ignored.\r\ne.g. https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/cli-runtime/pkg/kustomize/builder_test.go#L136",
        "createdAt" : "2019-09-06T10:54:53Z",
        "updatedAt" : "2019-09-06T10:54:53Z",
        "lastEditedBy" : "e7b8fd7e-f93b-44b6-b6d0-4331207d901c",
        "tags" : [
        ]
      }
    ],
    "commit" : "c53f2f306ae6f1ff4501720e1f1019fe8cbe4488",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +209,213 @@\t}\n\tname := \"resource.yaml\"\n\tmemFS.WriteFile(filepath.Join(fakeDir, name), b)\n\n\tkm.kustomizationFile.Resources = []string{name}"
  },
  {
    "id" : "134da33e-c79d-4b51-b7c7-7fb8b70f167a",
    "prId" : 80905,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/80905#pullrequestreview-271200254",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d7fe458a-a720-496d-96cd-6dd9adbdd287",
        "parentId" : null,
        "authorId" : "67bc6085-2cd9-4674-9dbc-d2a266f478be",
        "body" : "I think it's fine for now but would a template look more clear?",
        "createdAt" : "2019-08-02T15:30:17Z",
        "updatedAt" : "2019-08-12T12:24:13Z",
        "lastEditedBy" : "67bc6085-2cd9-4674-9dbc-d2a266f478be",
        "tags" : [
        ]
      },
      {
        "id" : "b47afae6-c24c-4422-9bff-44bff390cee4",
        "parentId" : "d7fe458a-a720-496d-96cd-6dd9adbdd287",
        "authorId" : "8a27151d-3530-4221-90e8-48b3a85cba37",
        "body" : "I'm working on a follow-up PR for overcoming known limitations, and I will fix this in that PR",
        "createdAt" : "2019-08-06T08:43:53Z",
        "updatedAt" : "2019-08-12T12:24:13Z",
        "lastEditedBy" : "8a27151d-3530-4221-90e8-48b3a85cba37",
        "tags" : [
        ]
      },
      {
        "id" : "4b6e3fec-347b-4343-8988-56e060937f89",
        "parentId" : "d7fe458a-a720-496d-96cd-6dd9adbdd287",
        "authorId" : "cccc7bed-95f4-42a9-83ef-6ba1a4dca7ec",
        "body" : "We already import some Kustomize packages, importing the types package, filling in a struct and marshaling it to YAML looks like the cleanest way to me.",
        "createdAt" : "2019-08-06T08:50:56Z",
        "updatedAt" : "2019-08-12T12:24:13Z",
        "lastEditedBy" : "cccc7bed-95f4-42a9-83ef-6ba1a4dca7ec",
        "tags" : [
        ]
      }
    ],
    "commit" : "5eca04955797e4e3e9cbf804bac64f82b7719b00",
    "line" : 160,
    "diffHunk" : "@@ -1,1 +158,162 @@\t}\n\n\tkustomization.WriteString(\"patches:\\n\")\n\tfor i, p := range patches {\n\t\tb, err := p.MarshalJSON()"
  },
  {
    "id" : "ef61a593-f491-4697-b1f9-9859f258f650",
    "prId" : 80905,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/80905#pullrequestreview-271207675",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e36cd8de-f786-4a9f-8169-42cbf583a718",
        "parentId" : null,
        "authorId" : "cccc7bed-95f4-42a9-83ef-6ba1a4dca7ec",
        "body" : "Ideally this should be `var kustomization kustomizetypes.Kustomization` (where `kustomizetypes \"sigs.k8s.io/kustomize/pkg/types\"`) and then simply marshal it to YAML.",
        "createdAt" : "2019-08-06T08:49:14Z",
        "updatedAt" : "2019-08-12T12:24:13Z",
        "lastEditedBy" : "cccc7bed-95f4-42a9-83ef-6ba1a4dca7ec",
        "tags" : [
        ]
      },
      {
        "id" : "14ae3172-7c04-4f21-af6e-355453fafbf7",
        "parentId" : "e36cd8de-f786-4a9f-8169-42cbf583a718",
        "authorId" : "8a27151d-3530-4221-90e8-48b3a85cba37",
        "body" : "Agreed, that's the approach I'm already following in the follow-up PR for overcoming known limitations",
        "createdAt" : "2019-08-06T09:00:58Z",
        "updatedAt" : "2019-08-12T12:24:13Z",
        "lastEditedBy" : "8a27151d-3530-4221-90e8-48b3a85cba37",
        "tags" : [
        ]
      }
    ],
    "commit" : "5eca04955797e4e3e9cbf804bac64f82b7719b00",
    "line" : 137,
    "diffHunk" : "@@ -1,1 +135,139 @@\tmemFS := fs.MakeFakeFS()\n\n\tvar kustomization bytes.Buffer\n\tfakeDir := \"/\"\n\t// for Windows we need this to be a drive because kustomize uses filepath.Abs()"
  },
  {
    "id" : "97af11f1-0b19-4ff6-aa1b-07e28fdfa71b",
    "prId" : 80905,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/80905#pullrequestreview-271997890",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9473f64c-71a3-49b9-82c0-a9f1d95ae75b",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "why is this being used as a singleton? is the returned manager threadsafe?",
        "createdAt" : "2019-08-07T13:56:10Z",
        "updatedAt" : "2019-08-12T12:24:13Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "9623cb05-2a3c-449a-8bd6-8a7acdf6bcc1",
        "parentId" : "9473f64c-71a3-49b9-82c0-a9f1d95ae75b",
        "authorId" : "8a27151d-3530-4221-90e8-48b3a85cba37",
        "body" : "kubeadm applies kustomizations in different points of the workflow, and using a singleton allows us to avoid to re-read patches every time.\r\nThe returned manager is thread-safe.",
        "createdAt" : "2019-08-07T14:21:36Z",
        "updatedAt" : "2019-08-12T12:24:13Z",
        "lastEditedBy" : "8a27151d-3530-4221-90e8-48b3a85cba37",
        "tags" : [
        ]
      }
    ],
    "commit" : "5eca04955797e4e3e9cbf804bac64f82b7719b00",
    "line" : 45,
    "diffHunk" : "@@ -1,1 +43,47 @@\n// GetManager return the KustomizeManager singleton instance\nfunc GetManager(kustomizeDir string) (*Manager, error) {\n\tlock.Lock()\n\tdefer lock.Unlock()"
  },
  {
    "id" : "a1c1be79-3b4e-4eb4-b87d-2f2fc843154c",
    "prId" : 80905,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/80905#pullrequestreview-273651324",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "41756d89-ff27-4d1d-baaa-257bf626ddd4",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "what ensures this mimicked behavior doesn't drift from actual kustomize behavior?",
        "createdAt" : "2019-08-07T13:57:11Z",
        "updatedAt" : "2019-08-12T12:24:13Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "323e4884-f304-4250-99ad-faad40251ad0",
        "parentId" : "41756d89-ff27-4d1d-baaa-257bf626ddd4",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "cc @monopole for insights on more consistent ways to make use of the kustomize capabilities",
        "createdAt" : "2019-08-07T13:58:05Z",
        "updatedAt" : "2019-08-12T12:24:13Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "48b17b46-4a3b-4017-86a2-5a5a1ad8d1a6",
        "parentId" : "41756d89-ff27-4d1d-baaa-257bf626ddd4",
        "authorId" : "8a27151d-3530-4221-90e8-48b3a85cba37",
        "body" : "Just a note waiting for @monopole review\r\nBeing kubeadm still in the main k/k repo, we are not allowed to import \"k8s.io/cli-runtime/pkg/kustomize/k8sdeps\", when kubeadm will move out from k/k (ETA 1.18), there will be room to further reduce risk of drift by using types defined in this package.",
        "createdAt" : "2019-08-07T14:31:41Z",
        "updatedAt" : "2019-08-12T12:24:13Z",
        "lastEditedBy" : "8a27151d-3530-4221-90e8-48b3a85cba37",
        "tags" : [
        ]
      },
      {
        "id" : "98a22f9b-19aa-401d-86c0-2b45ec771ba0",
        "parentId" : "41756d89-ff27-4d1d-baaa-257bf626ddd4",
        "authorId" : "273a1fe2-2c42-473d-a40f-7ed06da98d90",
        "body" : "Sorry about the delay, i was out for a bit.\r\n\r\nThere’s no formal notion of kustomize as a versioned library or service as yet, though it’s being worked on.  So the kustomize API is merely 1) the main program command line arguments and 2) the kustomization file and patches it references.\r\n\r\nErgo the recommended way to integrate kustomize into program foo is to have foo write a kustomization file and associated resources / patches to a file system, execute kustomize in a sub-process with the desired working directory, then capture stdout for whatever purpose (discarding it on error).  This is how kubebuilder uses it.  One can upgrade kustomize (the binary) without recompiling foo (modulo major version numbers).\r\n\r\nThis PR looks to be integrating kustomize into kubeadm in a fashion similar to how kustomize is integrated into kubectl, via the snapshot at k8s.io/cli-runtime/pkg/kustomize.  Doing this means kubeadm users don't have to install kustomize, but you’re tying yourself to 1) an old kustomize snapshot, and 2) _a code arrangement intended only for kubectl and not supported for others._\r\n\r\nI.e. the only build we'll try not to break as we change cli-runtime/pkg/kustomize is the kubectl build.  So at some point the kubeadm build will break.  I don't think the fix will be hard (some new imports, new call styles, etc. without much change to overall concept), but it will presumably be annoying.\r\n\r\n\r\n\r\n\r\n",
        "createdAt" : "2019-08-09T23:07:08Z",
        "updatedAt" : "2019-08-12T12:24:13Z",
        "lastEditedBy" : "273a1fe2-2c42-473d-a40f-7ed06da98d90",
        "tags" : [
        ]
      },
      {
        "id" : "92999382-00ac-40e5-b12a-94d956479830",
        "parentId" : "41756d89-ff27-4d1d-baaa-257bf626ddd4",
        "authorId" : "8a27151d-3530-4221-90e8-48b3a85cba37",
        "body" : "@monopole thanks for the valuable feedback!\r\nMy take away is that the current implementation has some trade-off that can be acceptable for the alpha release of this feature, but in the long term we should converge on one of the kubebuilder or the kubectl model (unless the ongoing work around \"kustomize as a versioned library\" opens other options). I'm open an issue in the k/kustomize repo to properly track this.\r\n\r\nUnless there are no different opinions, I'm +1 to get this merged as it is because the above points are related only to implementation details, without any impact on the user experience",
        "createdAt" : "2019-08-12T08:16:14Z",
        "updatedAt" : "2019-08-12T12:24:13Z",
        "lastEditedBy" : "8a27151d-3530-4221-90e8-48b3a85cba37",
        "tags" : [
        ]
      },
      {
        "id" : "cbb59ecb-d12c-4eed-8369-9611b1f7fe0c",
        "parentId" : "41756d89-ff27-4d1d-baaa-257bf626ddd4",
        "authorId" : "8a27151d-3530-4221-90e8-48b3a85cba37",
        "body" : " as per comment above https://github.com/kubernetes-sigs/kustomize/issues/1441",
        "createdAt" : "2019-08-12T12:10:56Z",
        "updatedAt" : "2019-08-12T12:24:13Z",
        "lastEditedBy" : "8a27151d-3530-4221-90e8-48b3a85cba37",
        "tags" : [
        ]
      }
    ],
    "commit" : "5eca04955797e4e3e9cbf804bac64f82b7719b00",
    "line" : 108,
    "diffHunk" : "@@ -1,1 +106,110 @@// Portions of the kustomize logic in this function are taken from the kubernetes-sigs/kind project\nfunc (km *Manager) Kustomize(res []byte) ([]byte, error) {\n\t// create a loader that mimics the behavior of kubectl kustomize\n\t// and converts the resource into a UnstructuredSlice\n\t// Nb. in kubeadm we are controlling resource generation, and so we"
  }
]