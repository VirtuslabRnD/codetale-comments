[
  {
    "id" : "a2cdf0a4-4e92-480c-a1ab-91bf2c407403",
    "prId" : 86810,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/86810#pullrequestreview-340039320",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f02ca3ab-1e3e-434b-99ae-52c5a9cebfc7",
        "parentId" : null,
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "this opens the same discussion as the `upgrade plan` PR:\r\nstreaming vs object separation\r\n\r\nmy vote is for the command to have the parent `Images` structure:\r\n```\r\ntype Images struct {\r\n\tmetav1.TypeMeta `json:\",inline\"`\r\n\r\n\tImages []Image `json:\"images\"`\r\n}\r\n\r\ntype Image struct {\r\n\tName    string `json:\"name\"`\r\n\tVersion string `json:\"version\"`\r\n}\r\n```\r\n\r\nthis leaves us the option to add extra contents to the Images structure in the future.\r\nstreaming is not really required for this command, and for the time being.\r\n\r\ni'm sure @rosti will agree to this.\r\n",
        "createdAt" : "2020-01-03T21:24:33Z",
        "updatedAt" : "2020-02-17T15:24:36Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      },
      {
        "id" : "e0de8f5f-f3a0-46df-964e-a47557ac3d85",
        "parentId" : "f02ca3ab-1e3e-434b-99ae-52c5a9cebfc7",
        "authorId" : "cccc7bed-95f4-42a9-83ef-6ba1a4dca7ec",
        "body" : "Absolutely, that would make parsing a lot easier. In the JSON case, we end up with a bunch of objects, that are not separated in any way. Making it hard for users to parse them. In addition to that, image listing is an operation that takes a negligibly small amount of time to complete. Hence, no buffering and separate objects are needed.",
        "createdAt" : "2020-01-06T13:27:14Z",
        "updatedAt" : "2020-02-17T15:24:36Z",
        "lastEditedBy" : "cccc7bed-95f4-42a9-83ef-6ba1a4dca7ec",
        "tags" : [
        ]
      },
      {
        "id" : "28c49e06-dcf2-4c6b-8d10-d3c55754542a",
        "parentId" : "f02ca3ab-1e3e-434b-99ae-52c5a9cebfc7",
        "authorId" : "f46daf11-7000-4650-ae5b-dd25c29b4e29",
        "body" : "@neolit123 @rosti Thank you for the review. Looks like I should also get rid of unbuffered output in the current implementation of [token output](https://github.com/kubernetes/kubernetes/pull/78764). Please, confirm. ",
        "createdAt" : "2020-01-08T12:26:49Z",
        "updatedAt" : "2020-02-17T15:24:36Z",
        "lastEditedBy" : "f46daf11-7000-4650-ae5b-dd25c29b4e29",
        "tags" : [
        ]
      },
      {
        "id" : "a10b9a1b-3d6e-4961-8413-d30b9238a5d0",
        "parentId" : "f02ca3ab-1e3e-434b-99ae-52c5a9cebfc7",
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "does the token output looks like this?\r\n\r\n```\r\nBootstrapToken\r\n---\r\nBootstrapToken\r\n---\r\n```\r\n\r\ni'm sorry but i forgot what we are doing there. it makes sense if we are fetching one token at a time, if we are fetching them all at once it makes sense to have a parent structure:\r\n\r\n```\r\nBootstrapTokens {\r\n    .... []BootstrapToken\r\n}\r\n```\r\n\r\nthe parent structure is preferred in all cases, unless we want it unbuffered - e.g. making network calls that are slow.\r\n",
        "createdAt" : "2020-01-08T14:57:36Z",
        "updatedAt" : "2020-02-17T15:24:36Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      },
      {
        "id" : "1c15d8b6-adda-40cb-bfbd-da96b2dde68c",
        "parentId" : "f02ca3ab-1e3e-434b-99ae-52c5a9cebfc7",
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "/cc @akutz \r\ndo you have an opinion on this topic?",
        "createdAt" : "2020-01-08T17:55:45Z",
        "updatedAt" : "2020-02-17T15:24:36Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      }
    ],
    "commit" : "a31ccc7b99bc31c86e843b7a9584b11182cc02d0",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +40,44 @@\n\tImages []string `json:\"images\"`\n}"
  },
  {
    "id" : "8beefc58-4d0c-4ad6-a5a2-95b58519ca71",
    "prId" : 78764,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/78764#pullrequestreview-295635338",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8835053d-d050-49ad-8314-6cd21724e389",
        "parentId" : null,
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "@rosti you had objections about adding the full metav1 types to our objects, because we don't need a lot of the automatic/dynamic fields that the api server manages.\r\n\r\nyet, the structured output needs them.\r\nmaybe we should still include the full ObjectMeta there for consistency instead of defining a subset.\r\n\r\n@bart0sh \r\ni remember we were in doubt whether we should duplicate BoostrapToken under the output group.\r\nwe may still wan to do that, but wondering whether \r\nhttps://github.com/kubernetes/kubernetes/blob/master/cmd/kubeadm/app/apis/kubeadm/v1beta2/types.go#L228\r\nshould have TypeMeta and ObjectMeta\r\nand this structure should look like:\r\n\r\n```\r\ntype BootstrapToken struct {\r\n    kubeadmapiv1beta2.BootstrapToken\r\n}\r\n```\r\n",
        "createdAt" : "2019-10-01T13:41:57Z",
        "updatedAt" : "2019-10-03T11:14:27Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      },
      {
        "id" : "df584b9b-e89e-49f8-ba53-91ec9d510d89",
        "parentId" : "8835053d-d050-49ad-8314-6cd21724e389",
        "authorId" : "f46daf11-7000-4650-ae5b-dd25c29b4e29",
        "body" : "I'd prefer not to modify kubeadm API just for this. Another point is that  kubeadmapiv1beta2.BootstrapToken doesn't need TypeMeta and ObjectMeta fields as they're only required by output machinery, hence it's better to have them only in the output API in my opinion.",
        "createdAt" : "2019-10-01T14:13:14Z",
        "updatedAt" : "2019-10-03T11:14:27Z",
        "lastEditedBy" : "f46daf11-7000-4650-ae5b-dd25c29b4e29",
        "tags" : [
        ]
      }
    ],
    "commit" : "ba0c84ade8a94737648173b9ecca4f8882040b40",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +29,33 @@type BootstrapToken struct {\n\tmetav1.TypeMeta   `json:\",inline\"`\n\tmetav1.ObjectMeta `json:\",inline\"`\n\n\tkubeadmapiv1beta2.BootstrapToken"
  }
]