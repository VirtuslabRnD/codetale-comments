[
  {
    "id" : "23029102-0a8a-460a-81f3-a31971bcb924",
    "prId" : 102964,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/102964#pullrequestreview-691003193",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1d16dd3a-6998-400b-9e4f-3a2ed0d6a3eb",
        "parentId" : null,
        "authorId" : "e7b8fd7e-f93b-44b6-b6d0-4331207d901c",
        "body" : "How about group current project imports?\r\nSimilar problems exist in other files.",
        "createdAt" : "2021-06-18T04:04:58Z",
        "updatedAt" : "2021-06-18T04:19:06Z",
        "lastEditedBy" : "e7b8fd7e-f93b-44b6-b6d0-4331207d901c",
        "tags" : [
        ]
      },
      {
        "id" : "026fe31d-1390-46b2-a3e2-e2cb0859219c",
        "parentId" : "1d16dd3a-6998-400b-9e4f-3a2ed0d6a3eb",
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "Sorry, can you please clarify.\r\nAre you suggesting to change the import alias?",
        "createdAt" : "2021-06-18T13:36:40Z",
        "updatedAt" : "2021-06-18T13:36:40Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      },
      {
        "id" : "82e7a14c-c881-4b26-971c-76c169776958",
        "parentId" : "1d16dd3a-6998-400b-9e4f-3a2ed0d6a3eb",
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "ok, i see what you mean.\r\n\r\n`k8s.io/kubernetes/cmd/kubeadm/*` should be a separate group under imports.\r\n",
        "createdAt" : "2021-06-23T17:38:02Z",
        "updatedAt" : "2021-06-23T17:38:02Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      },
      {
        "id" : "72f3b349-b473-4d18-b716-40d55d0b34d9",
        "parentId" : "1d16dd3a-6998-400b-9e4f-3a2ed0d6a3eb",
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "i logged a separate issue for this because ideally we want to fix this in a separate PR:\r\nhttps://github.com/kubernetes/kubeadm/issues/2515\r\n",
        "createdAt" : "2021-06-23T18:17:28Z",
        "updatedAt" : "2021-06-23T18:17:29Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      }
    ],
    "commit" : "622f69bf8d4637099ab35a0e766aeaac58bfe51d",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +34,38 @@\tbootstraputil \"k8s.io/cluster-bootstrap/token/util\"\n\t\"k8s.io/klog/v2\"\n\tbootstraptokenv1 \"k8s.io/kubernetes/cmd/kubeadm/app/apis/bootstraptoken/v1\"\n\t\"k8s.io/kubernetes/cmd/kubeadm/app/apis/kubeadm\"\n\tkubeadmapiv1 \"k8s.io/kubernetes/cmd/kubeadm/app/apis/kubeadm/v1beta3\""
  },
  {
    "id" : "c02465c0-ec3d-400e-8cd6-f5d0fd0ef786",
    "prId" : 98984,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/98984#pullrequestreview-599735170",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8aa95757-14ac-406e-93a5-3ce5dc228651",
        "parentId" : null,
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "we need unit tests cmd/kubeadm/app/phases/controlplane/manifests_test.go",
        "createdAt" : "2021-02-11T08:41:44Z",
        "updatedAt" : "2021-03-01T03:20:18Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      },
      {
        "id" : "5507cb7d-4f90-4bb9-94d5-b69703c4a944",
        "parentId" : "8aa95757-14ac-406e-93a5-3ce5dc228651",
        "authorId" : "e7b8fd7e-f93b-44b6-b6d0-4331207d901c",
        "body" : "Hi @aojea !\r\nI'm sorry for the delay.\r\nCould you please have a look?",
        "createdAt" : "2021-02-26T02:46:14Z",
        "updatedAt" : "2021-03-01T03:20:18Z",
        "lastEditedBy" : "e7b8fd7e-f93b-44b6-b6d0-4331207d901c",
        "tags" : [
        ]
      },
      {
        "id" : "11c75f8f-8328-4f31-8337-732885e50d20",
        "parentId" : "8aa95757-14ac-406e-93a5-3ce5dc228651",
        "authorId" : "e7b8fd7e-f93b-44b6-b6d0-4331207d901c",
        "body" : "If `allocation-node-cidrs` is not explicitly configured, it will be defaulted as `true` by kubeadm.\r\nSo we should validate the Pod subnet against the node-mask when `c.ControllerManager.ExtraArgs[\"allocate-node-cidrs\"] != \"false\"`.",
        "createdAt" : "2021-02-26T02:49:31Z",
        "updatedAt" : "2021-03-01T03:20:18Z",
        "lastEditedBy" : "e7b8fd7e-f93b-44b6-b6d0-4331207d901c",
        "tags" : [
        ]
      },
      {
        "id" : "9a770785-2462-460a-875b-b28ee8c9d78a",
        "parentId" : "8aa95757-14ac-406e-93a5-3ce5dc228651",
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "I think is correct but let's double check with @neolit123 ^^^",
        "createdAt" : "2021-02-26T10:05:35Z",
        "updatedAt" : "2021-03-01T03:20:18Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      },
      {
        "id" : "1180830a-4165-4f9c-a42c-3ac601a76702",
        "parentId" : "8aa95757-14ac-406e-93a5-3ce5dc228651",
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "the  KCM flag `allocate-node-cidrs` is `false` by default, so it makes sense to validate in kubeadm only if the the user has set the flag to `true`.",
        "createdAt" : "2021-02-26T13:47:04Z",
        "updatedAt" : "2021-03-01T03:20:18Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      },
      {
        "id" : "8adeb718-041c-498e-98f4-38d1efd26b99",
        "parentId" : "8aa95757-14ac-406e-93a5-3ce5dc228651",
        "authorId" : "e7b8fd7e-f93b-44b6-b6d0-4331207d901c",
        "body" : "If the `PodSubnet` is set and the `ExtraArgs[\"allocate-node-cidrs\"]` is not set, kubeadm will add `allocate-node-cidrs=true` flag for KCM automatically.\r\nIn this case,  can we skip this validation? \r\nOr should we not add the `allocate-node-cidrs` flag for KCM automatically?\r\nhttps://github.com/kubernetes/kubernetes/blob/43e8405d9c675521eff6e19c9bedbe116eb43d9e/cmd/kubeadm/app/phases/controlplane/manifests.go#L307-L308\r\n\r\n",
        "createdAt" : "2021-02-26T15:52:08Z",
        "updatedAt" : "2021-03-01T03:20:18Z",
        "lastEditedBy" : "e7b8fd7e-f93b-44b6-b6d0-4331207d901c",
        "tags" : [
        ]
      },
      {
        "id" : "a4d071a8-3254-4344-9dc7-88a8f08c77d4",
        "parentId" : "8aa95757-14ac-406e-93a5-3ce5dc228651",
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "the KCM docs say that `cluster-cidr` requires `allocate-node-cidrs`, so we should be setting it to `true` in the default args. adding the flag by default seems correct to me. this make it easier for the user and not require them to pass flags when they wish to set a pod subnet.\r\n\r\nextraArgs are merged over default args.\r\nso if the user was explicit about `allocate-node-cidrs==false`, we should respect it and skip validation in ValidateNetworking.\r\n\r\nso the diff here seems valid to me.\r\n",
        "createdAt" : "2021-02-26T16:24:33Z",
        "updatedAt" : "2021-03-01T03:20:19Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      }
    ],
    "commit" : "2ba178c92c19bad48da800e106c73a50f742fc0d",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +502,506 @@\tif len(c.Networking.PodSubnet) != 0 {\n\t\tallErrs = append(allErrs, ValidateIPNetFromString(c.Networking.PodSubnet, constants.MinimumAddressesInPodSubnet, isDualStack, field.NewPath(\"podSubnet\"))...)\n\t\tif c.ControllerManager.ExtraArgs[\"allocate-node-cidrs\"] != \"false\" {\n\t\t\t// Pod subnet was already validated, we need to validate now against the node-mask\n\t\t\tallErrs = append(allErrs, ValidatePodSubnetNodeMask(c.Networking.PodSubnet, c, field.NewPath(\"podSubnet\"))...)"
  },
  {
    "id" : "4a47eefa-4f47-426d-99e3-405bd0182e1b",
    "prId" : 98984,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/98984#pullrequestreview-599222112",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9de61b6d-b9b8-48da-87ea-925e09936c67",
        "parentId" : null,
        "authorId" : "5e225159-999d-430a-8b58-d5220dc1429d",
        "body" : "getClusterNodeMask will check whether dual stack is enabled as well.\r\n\r\nNeed we refactor ValidatePodSubnetNodeMask with isDual stack as an input,  like func ValidateIPNetFromString.\r\nIMO it would make things clear.\r\n\r\nCurrent change is LGTM as well.",
        "createdAt" : "2021-02-26T02:55:21Z",
        "updatedAt" : "2021-03-01T03:20:18Z",
        "lastEditedBy" : "5e225159-999d-430a-8b58-d5220dc1429d",
        "tags" : [
        ]
      },
      {
        "id" : "2b2c12a3-4d76-4a4c-a4b2-8c64964bb1d4",
        "parentId" : "9de61b6d-b9b8-48da-87ea-925e09936c67",
        "authorId" : "e7b8fd7e-f93b-44b6-b6d0-4331207d901c",
        "body" : "Thanks @pacoxu \r\nIt makes sense!",
        "createdAt" : "2021-02-26T03:15:20Z",
        "updatedAt" : "2021-03-01T03:20:18Z",
        "lastEditedBy" : "e7b8fd7e-f93b-44b6-b6d0-4331207d901c",
        "tags" : [
        ]
      }
    ],
    "commit" : "2ba178c92c19bad48da800e106c73a50f742fc0d",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +504,508 @@\t\tif c.ControllerManager.ExtraArgs[\"allocate-node-cidrs\"] != \"false\" {\n\t\t\t// Pod subnet was already validated, we need to validate now against the node-mask\n\t\t\tallErrs = append(allErrs, ValidatePodSubnetNodeMask(c.Networking.PodSubnet, c, field.NewPath(\"podSubnet\"))...)\n\t\t}\n\t}"
  },
  {
    "id" : "9ac6229a-b09f-4933-b4e9-96d58b31e84d",
    "prId" : 73998,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/73998#pullrequestreview-203423753",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f14efd79-5963-4c40-b95b-345e844fbaba",
        "parentId" : null,
        "authorId" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "body" : "How about putting these into a Set and check whether flagName is contained in the Set ?",
        "createdAt" : "2019-02-13T19:30:42Z",
        "updatedAt" : "2019-02-13T19:30:42Z",
        "lastEditedBy" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "tags" : [
        ]
      },
      {
        "id" : "14b61b3d-8026-4784-84ca-6f118d894b03",
        "parentId" : "f14efd79-5963-4c40-b95b-345e844fbaba",
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "our flags are kind of sparse and cover different functionality i.e. the flags don't make sense to be a part of the same set outside of this validatation, but i guess we can consider it for a future refactor.\r\n",
        "createdAt" : "2019-02-13T19:34:13Z",
        "updatedAt" : "2019-02-13T19:34:13Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      },
      {
        "id" : "55fced21-807c-47f2-a719-061cfe7f9ba0",
        "parentId" : "f14efd79-5963-4c40-b95b-345e844fbaba",
        "authorId" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "body" : "I have a patch ready, should I send out PR ?",
        "createdAt" : "2019-02-13T19:53:43Z",
        "updatedAt" : "2019-02-13T19:53:44Z",
        "lastEditedBy" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "tags" : [
        ]
      },
      {
        "id" : "aaa4f689-eaf2-4e5c-8628-14507a982cbd",
        "parentId" : "f14efd79-5963-4c40-b95b-345e844fbaba",
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "given the flags are mostly unrelated, my initial reaction is, no.\r\nbut you can still send if you want to get feedback on the change.\r\n",
        "createdAt" : "2019-02-13T19:58:00Z",
        "updatedAt" : "2019-02-13T19:58:00Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      },
      {
        "id" : "fbd754cd-2c2b-4056-be6a-349c85332556",
        "parentId" : "f14efd79-5963-4c40-b95b-345e844fbaba",
        "authorId" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "body" : "See #74032",
        "createdAt" : "2019-02-13T20:11:33Z",
        "updatedAt" : "2019-02-13T20:11:33Z",
        "lastEditedBy" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "277dfbbdebb7d239a3d2fe720f7cb16dbc350b8d",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +419,423 @@\tisAllowed := false\n\tswitch flagName {\n\tcase kubeadmcmdoptions.CfgPath,\n\t\tkubeadmcmdoptions.IgnorePreflightErrors,\n\t\tkubeadmcmdoptions.DryRun,"
  },
  {
    "id" : "a2963e61-12cc-4898-825b-69332867b93e",
    "prId" : 67830,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/67830#pullrequestreview-149449723",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9c07c746-8a0c-4945-bf7e-a7d83b873e0b",
        "parentId" : null,
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "why nix the `EndPoint` part? ",
        "createdAt" : "2018-08-24T16:28:22Z",
        "updatedAt" : "2018-08-24T16:29:46Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      },
      {
        "id" : "4252c0d4-5944-4b7d-8a43-d00f2eb0f0d0",
        "parentId" : "9c07c746-8a0c-4945-bf7e-a7d83b873e0b",
        "authorId" : "8a27151d-3530-4221-90e8-48b3a85cba37",
        "body" : "... don't know 😜 \r\nIf it is ok for you I will restore the comment when I rebase the next PR",
        "createdAt" : "2018-08-24T20:23:47Z",
        "updatedAt" : "2018-08-24T20:23:48Z",
        "lastEditedBy" : "8a27151d-3530-4221-90e8-48b3a85cba37",
        "tags" : [
        ]
      },
      {
        "id" : "7308c90b-15fd-4bc8-9781-0d70d324f43a",
        "parentId" : "9c07c746-8a0c-4945-bf7e-a7d83b873e0b",
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "sure.",
        "createdAt" : "2018-08-24T20:27:40Z",
        "updatedAt" : "2018-08-24T20:27:41Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      }
    ],
    "commit" : "960ef7bf67a4cbe976c232d661edd0515469e45e",
    "line" : 50,
    "diffHunk" : "@@ -1,1 +407,411 @@\n// ValidateAPI validates API configuration\nfunc ValidateAPI(c *kubeadm.API, fldPath *field.Path) field.ErrorList {\n\tallErrs := field.ErrorList{}\n\tallErrs = append(allErrs, ValidateIPFromString(c.AdvertiseAddress, fldPath.Child(\"advertiseAddress\"))...)"
  },
  {
    "id" : "71fd6ee7-af1b-4769-94bd-2c81a732c920",
    "prId" : 67763,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/67763#pullrequestreview-164486928",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a8173a64-6f70-4cc1-bed4-9fd66bf20345",
        "parentId" : null,
        "authorId" : "8a27151d-3530-4221-90e8-48b3a85cba37",
        "body" : "This should go away when `APIServerEndpoints` changes from `[]string` to `string`",
        "createdAt" : "2018-10-14T06:44:39Z",
        "updatedAt" : "2018-10-16T12:25:48Z",
        "lastEditedBy" : "8a27151d-3530-4221-90e8-48b3a85cba37",
        "tags" : [
        ]
      }
    ],
    "commit" : "576b8d3f4fdb0961981bc04dc647b19a8c90ac4e",
    "line" : 78,
    "diffHunk" : "@@ -1,1 +128,132 @@\n\t// TODO remove once we support multiple api servers\n\tif len(b.APIServerEndpoints) > 1 {\n\t\tfmt.Println(\"[validation] WARNING: kubeadm doesn't fully support multiple API Servers yet\")\n\t}"
  },
  {
    "id" : "b5b6eb8b-a960-482e-ba31-3aeef262a664",
    "prId" : 56072,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/56072#pullrequestreview-78561104",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e7ea8217-6fcf-401e-9806-6335f1e99c26",
        "parentId" : null,
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "I'm not certain...but this looks like it would force an exit if both are specified why couldn't it prefer 'ignore-checks-errors' and warn?",
        "createdAt" : "2017-11-21T22:58:57Z",
        "updatedAt" : "2017-11-22T00:45:02Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      },
      {
        "id" : "be0dee8a-2d97-4d7b-bfe6-d50d39894302",
        "parentId" : "e7ea8217-6fcf-401e-9806-6335f1e99c26",
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "+1. I'd only warn if skipPreflightChecks is there and that's it",
        "createdAt" : "2017-11-22T19:49:20Z",
        "updatedAt" : "2017-11-22T19:52:46Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      }
    ],
    "commit" : "e42eb28500e2014e7abb7a7bb275f1917db87be7",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +343,347 @@\tif skipPreflightChecks {\n\t\tif ignoreErrors.Has(\"all\") {\n\t\t\tallErrs = append(allErrs, field.Invalid(field.NewPath(\"ignore-checks-errors\"), strings.Join(ignoreErrors.List(), \",\"), \"'all' is used together with deprecated flag --skip-preflight-checks. Remove deprecated flag\"))\n\t\t}\n\t\tignoreErrors.Insert(\"all\")"
  },
  {
    "id" : "dbdaea2e-d68a-4a84-8ba7-5f9301ed501d",
    "prId" : 56072,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/56072#pullrequestreview-78287454",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2bbbfde1-5986-4719-9aef-a69e65b097c0",
        "parentId" : null,
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "same.. could warn",
        "createdAt" : "2017-11-21T22:59:25Z",
        "updatedAt" : "2017-11-22T00:45:02Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      }
    ],
    "commit" : "e42eb28500e2014e7abb7a7bb275f1917db87be7",
    "line" : 40,
    "diffHunk" : "@@ -1,1 +349,353 @@\n\tif ignoreErrors.Has(\"all\") && ignoreErrors.Len() > 1 {\n\t\tallErrs = append(allErrs, field.Invalid(field.NewPath(\"ignore-checks-errors\"), strings.Join(ignoreErrors.List(), \",\"), \"don't specify individual checks if 'all' is used\"))\n\t}\n"
  },
  {
    "id" : "097cbebb-feb5-4036-9ea4-cf4105f07100",
    "prId" : 56072,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/56072#pullrequestreview-78287454",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c30dc3e3-9dcb-461e-b299-4516e454064b",
        "parentId" : null,
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "ValidateIgnoreChecksErrors - doesn't parse well when reading.   \r\n",
        "createdAt" : "2017-11-22T00:39:52Z",
        "updatedAt" : "2017-11-22T00:45:02Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      }
    ],
    "commit" : "e42eb28500e2014e7abb7a7bb275f1917db87be7",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +332,336 @@\n// ValidateIgnoreChecksErrors validates duplicates in ignore-checks-errors flag.\nfunc ValidateIgnoreChecksErrors(ignoreChecksErrors []string, skipPreflightChecks bool) (sets.String, error) {\n\tignoreErrors := sets.NewString()\n\tallErrs := field.ErrorList{}"
  },
  {
    "id" : "a7e2a738-3101-4fc9-bbc8-f6fd0a53b432",
    "prId" : 55972,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/55972#pullrequestreview-78803904",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6675cc15-113a-4810-b024-aa57e06ea76b",
        "parentId" : null,
        "authorId" : "a09f2d48-fec0-4c0d-bd81-6de7378a6ebf",
        "body" : "oh one more thing, why is the validation commented here? :)",
        "createdAt" : "2017-11-23T07:27:40Z",
        "updatedAt" : "2017-11-23T07:27:46Z",
        "lastEditedBy" : "a09f2d48-fec0-4c0d-bd81-6de7378a6ebf",
        "tags" : [
        ]
      },
      {
        "id" : "4472ab63-aa16-4c4d-8201-595dc4fb7ca3",
        "parentId" : "6675cc15-113a-4810-b024-aa57e06ea76b",
        "authorId" : "cd7571ee-9c0c-4333-87be-61f1cb410e46",
        "body" : "Thanks for the review! This change breaks UT's, I would like to fix the UT's in a follow up PR, then we can turn on this validate of the proxy.",
        "createdAt" : "2017-11-23T14:41:53Z",
        "updatedAt" : "2017-11-23T14:41:53Z",
        "lastEditedBy" : "cd7571ee-9c0c-4333-87be-61f1cb410e46",
        "tags" : [
        ]
      },
      {
        "id" : "639d78d0-a9d0-4194-a07b-02d59ccc0293",
        "parentId" : "6675cc15-113a-4810-b024-aa57e06ea76b",
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "ok, let's do that. We'll enable both kubelet and kube-proxy config API validation at the same time then",
        "createdAt" : "2017-11-23T21:43:30Z",
        "updatedAt" : "2017-11-23T21:43:41Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      }
    ],
    "commit" : "ce8113d9a99e1f8babea0831f605ca3dcfa7af14",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +74,78 @@\tallErrs = append(allErrs, ValidateFeatureGates(c.FeatureGates, field.NewPath(\"feature-gates\"))...)\n\tallErrs = append(allErrs, ValidateAPIEndpoint(c, field.NewPath(\"api-endpoint\"))...)\n\t//allErrs = append(allErrs, ValidateProxy(c, field.NewPath(\"kube-proxy\"))...)\n\treturn allErrs\n}"
  },
  {
    "id" : "9e083393-8145-4579-b7cb-777e39ca9ce5",
    "prId" : 55972,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/55972#pullrequestreview-78651390",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8992953b-9bc2-4e28-93a0-23a1c9a7dded",
        "parentId" : null,
        "authorId" : "a09f2d48-fec0-4c0d-bd81-6de7378a6ebf",
        "body" : "s/KubeProxy.Config/kubeProxy.config",
        "createdAt" : "2017-11-23T08:52:06Z",
        "updatedAt" : "2017-11-23T08:52:11Z",
        "lastEditedBy" : "a09f2d48-fec0-4c0d-bd81-6de7378a6ebf",
        "tags" : [
        ]
      }
    ],
    "commit" : "ce8113d9a99e1f8babea0831f605ca3dcfa7af14",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +86,90 @@\terr := kubeproxyscheme.Scheme.Convert(c.KubeProxy.Config, internalcfg, nil)\n\tif err != nil {\n\t\tallErrs = append(allErrs, field.Invalid(fldPath, \"KubeProxy.Config\", err.Error()))\n\t\treturn allErrs\n\t}"
  },
  {
    "id" : "96dcaacd-e9ef-45ee-9322-bd83b8d62302",
    "prId" : 42557,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/42557#pullrequestreview-30249803",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8927c728-a42b-4748-a89f-aca24ed57661",
        "parentId" : null,
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "We should make sure here that you can't set it to `RBAC,RBAC,ABAC,ABAC` or the like. Duplicate values aren't allowed",
        "createdAt" : "2017-03-31T13:49:41Z",
        "updatedAt" : "2017-04-06T02:35:30Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      }
    ],
    "commit" : "68f69b2c73b78117091c07dee9e4e16531219053",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +73,77 @@func ValidateAuthorizationModes(authzModes []string, fldPath *field.Path) field.ErrorList {\n\tallErrs := field.ErrorList{}\n\tfor _, authzMode := range authzModes {\n\t\tif !authzmodes.IsValidAuthorizationMode(authzMode) {\n\t\t\tallErrs = append(allErrs, field.Invalid(fldPath, authzMode, \"invalid authorization mode\"))"
  },
  {
    "id" : "5c54e0be-0144-4196-88ee-b02f31f4e92e",
    "prId" : 41921,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/41921#pullrequestreview-24083993",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2bee4f75-a698-4da9-8327-cc11e1c685e6",
        "parentId" : null,
        "authorId" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "body" : "Ideally we should have a default port.  `kubeadm join 1.2.3.4` won't work as \"SplitHostPort\" will barf.  (the default port is 6443).\r\n\r\nI think the current implementation supports a default port.\r\n\r\nAn optional enhancement in the future would be to support DNS names or SRV records.  But that can be for later.",
        "createdAt" : "2017-02-27T18:54:55Z",
        "updatedAt" : "2017-02-28T19:06:13Z",
        "lastEditedBy" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "tags" : [
        ]
      },
      {
        "id" : "5db6604c-2c31-4abf-9fc6-e1f4605f5758",
        "parentId" : "2bee4f75-a698-4da9-8327-cc11e1c685e6",
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "This is good for now",
        "createdAt" : "2017-02-27T20:18:26Z",
        "updatedAt" : "2017-02-28T19:06:14Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      }
    ],
    "commit" : "1d37c6be4903d47776028c17b056b16cba150fab",
    "line" : 100,
    "diffHunk" : "@@ -1,1 +108,112 @@\tallErrs := field.ErrorList{}\n\tfor _, m := range c.DiscoveryTokenAPIServers {\n\t\t_, _, err := net.SplitHostPort(m)\n\t\tif err != nil {\n\t\t\tallErrs = append(allErrs, field.Invalid(fldPath, m, err.Error()))"
  },
  {
    "id" : "d17d254e-7cc2-42ba-bf1e-7cf63ddd3585",
    "prId" : 41020,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/41020#pullrequestreview-20465565",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6ea5732b-5986-432f-9cce-5bdde85d85b6",
        "parentId" : null,
        "authorId" : "b8f6188a-f26e-4203-bed3-a5d075997fdf",
        "body" : "Test should be added for these new functions. ",
        "createdAt" : "2017-02-06T21:17:45Z",
        "updatedAt" : "2017-02-07T16:26:12Z",
        "lastEditedBy" : "b8f6188a-f26e-4203-bed3-a5d075997fdf",
        "tags" : [
        ]
      },
      {
        "id" : "278e534a-4295-4485-ab09-131f19c34390",
        "parentId" : "6ea5732b-5986-432f-9cce-5bdde85d85b6",
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "That's right, but since there are no tests at all for this package, can we do it in a follow-up?\r\nI'd like to get this merged asap so I can continue with the next PR\r\n\r\nSounds good?",
        "createdAt" : "2017-02-06T21:26:24Z",
        "updatedAt" : "2017-02-07T16:26:12Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      },
      {
        "id" : "ebd4d657-cbad-4ae0-9ade-33a3faf04257",
        "parentId" : "6ea5732b-5986-432f-9cce-5bdde85d85b6",
        "authorId" : "b8f6188a-f26e-4203-bed3-a5d075997fdf",
        "body" : "I really think tests should be added as new code is added.  I think it is one of the things we agreed on as a SIG to improve the overall quality of kubeadm. ",
        "createdAt" : "2017-02-06T21:37:47Z",
        "updatedAt" : "2017-02-07T16:26:12Z",
        "lastEditedBy" : "b8f6188a-f26e-4203-bed3-a5d075997fdf",
        "tags" : [
        ]
      },
      {
        "id" : "47274751-a965-49f5-826d-347c3d75c030",
        "parentId" : "6ea5732b-5986-432f-9cce-5bdde85d85b6",
        "authorId" : "0ac5d6cd-da87-46a2-9b30-0d21db1063a2",
        "body" : "@luxas I agree we should add tests. The fact there are no tests are another reason to do so!",
        "createdAt" : "2017-02-07T08:28:51Z",
        "updatedAt" : "2017-02-07T16:26:12Z",
        "lastEditedBy" : "0ac5d6cd-da87-46a2-9b30-0d21db1063a2",
        "tags" : [
        ]
      },
      {
        "id" : "deb456b4-f6a8-40fb-b03d-2e5ec7b21522",
        "parentId" : "6ea5732b-5986-432f-9cce-5bdde85d85b6",
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "@pires There is now a test for this",
        "createdAt" : "2017-02-07T09:48:14Z",
        "updatedAt" : "2017-02-07T16:26:12Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      }
    ],
    "commit" : "f6647fc15207f7ac6f6f0ce798d0408316d09bc7",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +75,79 @@}\n\nfunc ValidateServiceSubnet(subnet string, fldPath *field.Path) field.ErrorList {\n\t_, svcSubnet, err := net.ParseCIDR(subnet)\n\tif err != nil {"
  }
]