[
  {
    "id" : "c0bb45ed-0cb1-43e0-9604-68175285b2f3",
    "prId" : 87453,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/87453#pullrequestreview-347034931",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cc017c05-2792-4567-83dd-dbcbc3b667ec",
        "parentId" : null,
        "authorId" : "4138710b-380a-4011-917f-70ce4f4b9717",
        "body" : "Should also account for >1 CIDR in non-dualstack mode.",
        "createdAt" : "2020-01-23T03:55:56Z",
        "updatedAt" : "2020-02-05T11:25:02Z",
        "lastEditedBy" : "4138710b-380a-4011-917f-70ce4f4b9717",
        "tags" : [
        ]
      }
    ],
    "commit" : "6dda7adaf5902f2b2006351a417cb138561d42af",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +198,202 @@\t}{\n\t\t{\"invalid missing CIDR\", \"\", 0, false, false},\n\t\t{\"invalid  CIDR\", \"a\", 0, false, false},\n\t\t{\"invalid CIDR missing decimal points in IPv4 address and / mask\", \"1234\", 0, false, false},\n\t\t{\"invalid CIDR use of letters instead of numbers and / mask\", \"abc\", 0, false, false},"
  },
  {
    "id" : "fa135f33-97e9-42b0-a3d2-0356b5985e5b",
    "prId" : 75499,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/75499#pullrequestreview-238355539",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a8405a3b-16e2-4e74-bf12-64a362e56511",
        "parentId" : null,
        "authorId" : "659c7c1f-39ba-41a7-8331-fcc6b3b5f2fb",
        "body" : "not correct expected result. should be error. 'all' should not be mixed with anything else.",
        "createdAt" : "2019-05-16T10:49:53Z",
        "updatedAt" : "2019-05-23T07:22:32Z",
        "lastEditedBy" : "659c7c1f-39ba-41a7-8331-fcc6b3b5f2fb",
        "tags" : [
        ]
      },
      {
        "id" : "0dc2d95f-193a-4318-95dc-e46e45248db3",
        "parentId" : "a8405a3b-16e2-4e74-bf12-64a362e56511",
        "authorId" : "1c1af4c1-5d58-48e6-862a-4fcdf81c9f70",
        "body" : "My understanding was that if `all` is provided via the **CLI**, \r\nthen it should override the values provided via the **config file** too.\r\nIs that not what we'd like?\r\n\r\nEDIT: apparently not, given your other comment:\r\n\r\n> If 'all' is set in CLI and config has something else in addition, it is an error situation.\r\n\r\nHowever, it would be good to understand the reasoning behind.\r\n",
        "createdAt" : "2019-05-16T12:02:10Z",
        "updatedAt" : "2019-05-23T07:22:32Z",
        "lastEditedBy" : "1c1af4c1-5d58-48e6-862a-4fcdf81c9f70",
        "tags" : [
        ]
      },
      {
        "id" : "dab5576d-9321-4175-9141-1d69aa4252d6",
        "parentId" : "a8405a3b-16e2-4e74-bf12-64a362e56511",
        "authorId" : "659c7c1f-39ba-41a7-8331-fcc6b3b5f2fb",
        "body" : "This forces to limit usage of 'all' as much as possible. Easier to add any individual check, rather than trying to blindly ignoring all possible errors from checks without thinking. We seen a lot of 'guides' in the internet where they all started with 'kubeadm .... --skip-preflight-checks' and then trying to deal with problems that were actually reported by preflight checks as errors/warnings.\r\nSo, morale for admins: if you really know what you're doing, think again, and if still think that error must be ignored - add individual error to the list. If you copy&pasting from somewhere 'all', think 3 times, are you really want to do that. ",
        "createdAt" : "2019-05-16T12:22:50Z",
        "updatedAt" : "2019-05-23T07:22:32Z",
        "lastEditedBy" : "659c7c1f-39ba-41a7-8331-fcc6b3b5f2fb",
        "tags" : [
        ]
      }
    ],
    "commit" : "7e2b4aa562ee45bd575f1078d6ed84f82aeb10aa",
    "line" : 83,
    "diffHunk" : "@@ -1,1 +767,771 @@\t\t\t[]string{\"all\"},\n\t\t\t[]string{},\n\t\t\tsets.NewString(\"all\"),\n\t\t\tfalse,\n\t\t},"
  },
  {
    "id" : "cbb92f62-a78b-4be6-9d8e-a4faff00f93c",
    "prId" : 64974,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/64974#pullrequestreview-127611629",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "89755110-66e6-4e91-8ffb-509725aeb5dd",
        "parentId" : null,
        "authorId" : "bfaab188-fe7f-45cd-8e91-eeb4626a5f04",
        "body" : "These will be easier to debug if run as sub tests (`t.Run(...`)",
        "createdAt" : "2018-06-11T13:20:08Z",
        "updatedAt" : "2018-06-12T16:00:27Z",
        "lastEditedBy" : "bfaab188-fe7f-45cd-8e91-eeb4626a5f04",
        "tags" : [
        ]
      },
      {
        "id" : "f2c1b057-eec7-462a-8112-0bccb90753bb",
        "parentId" : "89755110-66e6-4e91-8ffb-509725aeb5dd",
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "If I have time I'll do that, otherwise just leave up to a more general refactor of our tests",
        "createdAt" : "2018-06-11T15:09:27Z",
        "updatedAt" : "2018-06-12T16:00:27Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      }
    ],
    "commit" : "f126f78266ae0c27d099b4796dcc50d3dfdc61b0",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +111,115 @@\t\texpectedErrors bool\n\t}{\n\t\t{\"\", \"/some/path\", true},                                                      // node name can't be empty\n\t\t{\"valid-nodename\", \"\", true},                                                  // crisocket can't be empty\n\t\t{\"INVALID-NODENAME\", \"/some/path\", true},                                      // Upper cases is invalid"
  },
  {
    "id" : "9c62989c-3c19-47b5-85f1-04c9e87bb937",
    "prId" : 56280,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/56280#pullrequestreview-78875169",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4c927ee0-bb4b-49b8-bd33-bc485ea3a950",
        "parentId" : null,
        "authorId" : "a09f2d48-fec0-4c0d-bd81-6de7378a6ebf",
        "body" : "note: the test case is mainly stolen from the original test case of kubelet validation.",
        "createdAt" : "2017-11-23T09:04:33Z",
        "updatedAt" : "2017-11-24T17:13:16Z",
        "lastEditedBy" : "a09f2d48-fec0-4c0d-bd81-6de7378a6ebf",
        "tags" : [
        ]
      },
      {
        "id" : "caef7b49-884d-4f8e-9033-3395d7d6b87d",
        "parentId" : "4c927ee0-bb4b-49b8-bd33-bc485ea3a950",
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "that's ok I guess :)",
        "createdAt" : "2017-11-24T10:18:22Z",
        "updatedAt" : "2017-11-24T17:13:16Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      }
    ],
    "commit" : "cf97d6f6ebad83ed52092e1b489a941d9620e041",
    "line" : 78,
    "diffHunk" : "@@ -1,1 +546,550 @@}\n\nfunc TestValidateKubeletConfiguration(t *testing.T) {\n\tsuccessCase := &kubeadm.KubeletConfiguration{\n\t\tBaseConfig: &kubeletconfigv1alpha1.KubeletConfiguration{"
  },
  {
    "id" : "e54e77b2-69e5-4763-b40f-8aa4dd35def2",
    "prId" : 54994,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/54994#pullrequestreview-75817658",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "39ddc07b-d16c-4897-bd9f-cda07912f4b1",
        "parentId" : null,
        "authorId" : "659c7c1f-39ba-41a7-8331-fcc6b3b5f2fb",
        "body" : "This value added, but seems to be neither used nor affects the test case. Why it is added ?\r\n",
        "createdAt" : "2017-11-10T12:31:38Z",
        "updatedAt" : "2017-11-25T04:27:09Z",
        "lastEditedBy" : "659c7c1f-39ba-41a7-8331-fcc6b3b5f2fb",
        "tags" : [
        ]
      },
      {
        "id" : "32b8edd7-51d8-4622-ac2d-9b0d06f0762e",
        "parentId" : "39ddc07b-d16c-4897-bd9f-cda07912f4b1",
        "authorId" : "a09f2d48-fec0-4c0d-bd81-6de7378a6ebf",
        "body" : "I was thinking of adding this to cover the below condition:\r\n```go\r\nif len(c.PodSubnet) != 0 {\r\n\tallErrs = append(allErrs, ValidateIPNetFromString(c.PodSubnet, constants.MinimumAddressesInServiceSubnet, field.NewPath(\"pod-subnet\"))...)\r\n}\r\n```\r\nhttps://github.com/xiangpengzhao/kubernetes/blob/b09bfb481ac1c60dba50ab6c51cddd4c616b6b82/cmd/kubeadm/app/apis/kubeadm/validation/validation.go#L252-L254",
        "createdAt" : "2017-11-10T15:35:38Z",
        "updatedAt" : "2017-11-25T04:27:09Z",
        "lastEditedBy" : "a09f2d48-fec0-4c0d-bd81-6de7378a6ebf",
        "tags" : [
        ]
      },
      {
        "id" : "49f646b3-382b-4fbf-a2f7-986bba508ca5",
        "parentId" : "39ddc07b-d16c-4897-bd9f-cda07912f4b1",
        "authorId" : "659c7c1f-39ba-41a7-8331-fcc6b3b5f2fb",
        "body" : "Well, for testing that it will be better to have two separate items: one with valid PodSubnet, one with invalid PodSubnet to trigger error. Same applies to ServiceSubnet: we have positive cases, good to add negative case to cover fully `ValidateNetworking()`",
        "createdAt" : "2017-11-10T16:09:16Z",
        "updatedAt" : "2017-11-25T04:27:09Z",
        "lastEditedBy" : "659c7c1f-39ba-41a7-8331-fcc6b3b5f2fb",
        "tags" : [
        ]
      },
      {
        "id" : "34002dac-b747-404c-b265-82b0dad9b021",
        "parentId" : "39ddc07b-d16c-4897-bd9f-cda07912f4b1",
        "authorId" : "a09f2d48-fec0-4c0d-bd81-6de7378a6ebf",
        "body" : "Because we already have `TestValidateIPFromString` to test (cover) the invalid cases of `PodSubnet` so I didn't add negative case here. Do I still add it here?",
        "createdAt" : "2017-11-10T16:21:31Z",
        "updatedAt" : "2017-11-25T04:27:09Z",
        "lastEditedBy" : "a09f2d48-fec0-4c0d-bd81-6de7378a6ebf",
        "tags" : [
        ]
      },
      {
        "id" : "d39a0d65-fabc-4ddc-a529-9896cc9230f9",
        "parentId" : "39ddc07b-d16c-4897-bd9f-cda07912f4b1",
        "authorId" : "659c7c1f-39ba-41a7-8331-fcc6b3b5f2fb",
        "body" : "My point was more about testing function `ValidateNetworking()` itself. `TestValidateIPFromString` and `TestValidateIPNetFromString` are validating that basic network functions works. Here we can make sure that whole path from top to bottom works by test case that will trigger different code paths in `ValidateNetworking`.",
        "createdAt" : "2017-11-10T16:49:04Z",
        "updatedAt" : "2017-11-25T04:27:09Z",
        "lastEditedBy" : "659c7c1f-39ba-41a7-8331-fcc6b3b5f2fb",
        "tags" : [
        ]
      }
    ],
    "commit" : "b5b75997fb2ca8be8321416c46cc147353259b57",
    "line" : 57,
    "diffHunk" : "@@ -1,1 +387,391 @@\t\t\t\t\tServiceSubnet: \"10.96.0.1/12\",\n\t\t\t\t\tDNSDomain:     \"cluster.local\",\n\t\t\t\t\tPodSubnet:     \"10.0.1.15/16\",\n\t\t\t\t},\n\t\t\t\tCertificatesDir: \"/some/other/cert/dir\","
  },
  {
    "id" : "29b3b90f-60fd-488e-bc2b-987604a61b56",
    "prId" : 54994,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/54994#pullrequestreview-75743597",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e1498418-bcea-49ba-84e8-1194ae1c527c",
        "parentId" : null,
        "authorId" : "659c7c1f-39ba-41a7-8331-fcc6b3b5f2fb",
        "body" : "Can we have here test case with positive result as well ?",
        "createdAt" : "2017-11-10T12:36:33Z",
        "updatedAt" : "2017-11-25T04:27:09Z",
        "lastEditedBy" : "659c7c1f-39ba-41a7-8331-fcc6b3b5f2fb",
        "tags" : [
        ]
      }
    ],
    "commit" : "b5b75997fb2ca8be8321416c46cc147353259b57",
    "line" : 424,
    "diffHunk" : "@@ -1,1 +987,991 @@\t\t\t\tDiscoveryTokenAPIServers: []string{\"192.168.122.100\"},\n\t\t\t},\n\t\t\tfalse,\n\t\t},\n\t\t{"
  }
]