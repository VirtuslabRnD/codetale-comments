[
  {
    "id" : "1b15f267-90e6-4e66-b52c-81850da548fb",
    "prId" : 73408,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/73408#pullrequestreview-201428808",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6c1339d5-8ac6-427c-a3ca-03fcf26d3e40",
        "parentId" : null,
        "authorId" : "05637862-b60e-403e-8519-09d1b3f0c9c2",
        "body" : "keep original better, and others place",
        "createdAt" : "2019-01-31T02:13:37Z",
        "updatedAt" : "2019-02-15T15:34:02Z",
        "lastEditedBy" : "05637862-b60e-403e-8519-09d1b3f0c9c2",
        "tags" : [
        ]
      },
      {
        "id" : "084e1e85-ae1f-4bba-8107-b34c03f66cc6",
        "parentId" : "6c1339d5-8ac6-427c-a3ca-03fcf26d3e40",
        "authorId" : "27315fad-771e-420e-af79-534db73fcb49",
        "body" : "I'm not sure how this happened. nice catch.",
        "createdAt" : "2019-02-08T04:32:56Z",
        "updatedAt" : "2019-02-15T15:34:02Z",
        "lastEditedBy" : "27315fad-771e-420e-af79-534db73fcb49",
        "tags" : [
        ]
      }
    ],
    "commit" : "160ed26c20e8114579dd15e0a7f8bf51b916aa12",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +24,28 @@\n\tv1 \"k8s.io/api/core/v1\"\n\tmetav1 \"k8s.io/apimachinery/pkg/apis/meta/v1\"\n\tutilerrors \"k8s.io/apimachinery/pkg/util/errors\"\n\tapiserveroptions \"k8s.io/apiserver/pkg/server/options\""
  },
  {
    "id" : "ab1568ea-d540-4fa1-9ceb-1d57b9225ff7",
    "prId" : 68233,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/68233#pullrequestreview-152457991",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4aa25aaf-7262-4f08-8c0a-e01e20b731fb",
        "parentId" : null,
        "authorId" : "05637862-b60e-403e-8519-09d1b3f0c9c2",
        "body" : "why delete `*.AddToScheme(scheme)` ?, for  `AddScheme()` in file `cmd/cloud-controller-manager/app/apis/config/scheme/scheme.go`?",
        "createdAt" : "2018-09-05T11:13:53Z",
        "updatedAt" : "2018-09-05T11:13:53Z",
        "lastEditedBy" : "05637862-b60e-403e-8519-09d1b3f0c9c2",
        "tags" : [
        ]
      },
      {
        "id" : "bbefc97b-6bf1-4b38-b94f-60f873a7e84e",
        "parentId" : "4aa25aaf-7262-4f08-8c0a-e01e20b731fb",
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "Yeah earlier this function built its own scheme from scratch, now it's reusing the standardized code in the scheme package which exposes the global `Scheme` variable.",
        "createdAt" : "2018-09-05T11:55:57Z",
        "updatedAt" : "2018-09-05T11:55:58Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      }
    ],
    "commit" : "3ff1e531110614c384b8c2fbc76027048ab67332",
    "line" : 50,
    "diffHunk" : "@@ -1,1 +114,118 @@\n\tinternal := &ccmconfig.CloudControllerManagerConfiguration{}\n\tif err := ccmconfigscheme.Scheme.Convert(versioned, internal, nil); err != nil {\n\t\treturn nil, err\n\t}"
  },
  {
    "id" : "3ed9866a-5d3d-4511-9024-5cb7aeaf79c5",
    "prId" : 67362,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/67362#pullrequestreview-147875863",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f898308d-f346-4e81-ac58-daffd69ed49f",
        "parentId" : null,
        "authorId" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "body" : "Wondering if we want to categorize this as \"cloud provider\" as well. Not blocking though, will think about it and open another PR if I think it should :) ",
        "createdAt" : "2018-08-20T14:49:20Z",
        "updatedAt" : "2018-08-20T14:51:53Z",
        "lastEditedBy" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "tags" : [
        ]
      },
      {
        "id" : "fcb92401-40d3-4b96-bca1-5556ea75b23e",
        "parentId" : "f898308d-f346-4e81-ac58-daffd69ed49f",
        "authorId" : "05637862-b60e-403e-8519-09d1b3f0c9c2",
        "body" : "which one? `KubeCloudShared`? i think should not:grinning:",
        "createdAt" : "2018-08-21T01:15:39Z",
        "updatedAt" : "2018-08-21T01:15:40Z",
        "lastEditedBy" : "05637862-b60e-403e-8519-09d1b3f0c9c2",
        "tags" : [
        ]
      }
    ],
    "commit" : "b0eb92cc5292c7bebb6bad66b3e7a045d5e4ee5e",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +137,141 @@\to.Debugging.AddFlags(fss.FlagSet(\"debugging\"))\n\to.GenericComponent.AddFlags(fss.FlagSet(\"generic\"))\n\to.KubeCloudShared.AddFlags(fss.FlagSet(\"generic\"))\n\to.ServiceController.AddFlags(fss.FlagSet(\"service controller\"))\n"
  },
  {
    "id" : "2ca629a9-2efd-4a60-b19a-c0c4ed5de0a5",
    "prId" : 67069,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/67069#pullrequestreview-151589056",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "32bb4ffd-1b3e-43aa-ac93-b4d19c35c23a",
        "parentId" : null,
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : ":+1:",
        "createdAt" : "2018-09-01T09:38:04Z",
        "updatedAt" : "2018-09-01T09:41:44Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      }
    ],
    "commit" : "c609df0ed1848a73f000e8b4b9d2adc09c1bd54b",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +103,107 @@\ts.Authentication.RemoteKubeConfigFileOptional = true\n\ts.Authorization.RemoteKubeConfigFileOptional = true\n\ts.Authorization.AlwaysAllowPaths = []string{\"/healthz\"}\n\n\ts.SecureServing.ServerCert.CertDirectory = \"/var/run/kubernetes\""
  },
  {
    "id" : "a2a130c7-36f6-4dce-b454-56911698f872",
    "prId" : 67069,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/67069#pullrequestreview-151589056",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7ea8e9c8-eaa8-4d76-aa6f-15d3ac8104f4",
        "parentId" : null,
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "What's the timeframe for that with this implemented in v1.12? v1.14?",
        "createdAt" : "2018-09-01T09:38:33Z",
        "updatedAt" : "2018-09-01T09:41:44Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      }
    ],
    "commit" : "c609df0ed1848a73f000e8b4b9d2adc09c1bd54b",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +63,67 @@\n\tSecureServing *apiserveroptions.SecureServingOptionsWithLoopback\n\t// TODO: remove insecure serving mode\n\tInsecureServing *apiserveroptions.DeprecatedInsecureServingOptionsWithLoopback\n\tAuthentication  *apiserveroptions.DelegatingAuthenticationOptions"
  },
  {
    "id" : "9c545a36-ed20-4365-9073-b40bf26bfb2e",
    "prId" : 65294,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/65294#pullrequestreview-131278005",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "41a4e1a7-be9b-440d-8c29-cf84a73b471e",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "the old style is usually what we use in Kube.",
        "createdAt" : "2018-06-22T17:21:10Z",
        "updatedAt" : "2018-06-22T17:21:11Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "dfdfd68b7a74bc6653a5e8ddc013b4f3ecfcd257",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +151,155 @@// ApplyTo fills up cloud controller manager config with options.\nfunc (o *CloudControllerManagerOptions) ApplyTo(c *cloudcontrollerconfig.Config, userAgent string) error {\n\tvar err error\n\tif err = o.CloudProvider.ApplyTo(&c.ComponentConfig.CloudProvider); err != nil {\n\t\treturn err"
  },
  {
    "id" : "e79ab9ee-a116-4ccb-b61a-d8fcf920f412",
    "prId" : 64191,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/64191#pullrequestreview-122561082",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7e9cd4aa-64a1-4dfb-899a-c872dc1af709",
        "parentId" : null,
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "nit: dependency",
        "createdAt" : "2018-05-23T12:33:43Z",
        "updatedAt" : "2018-05-23T12:33:56Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      }
    ],
    "commit" : "be7f087ade7db66700736a0a072acb1bad6fab3f",
    "line" : 41,
    "diffHunk" : "@@ -1,1 +236,240 @@\teventBroadcaster.StartLogging(glog.Infof)\n\teventBroadcaster.StartRecordingToSink(&v1core.EventSinkImpl{Interface: kubeClient.CoreV1().Events(\"\")})\n\t// TODO: remove dependence on the legacyscheme\n\treturn eventBroadcaster.NewRecorder(legacyscheme.Scheme, v1.EventSource{Component: userAgent})\n}"
  },
  {
    "id" : "a174bdfe-1d4f-48b1-9c1e-d481386af661",
    "prId" : 63283,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/63283#pullrequestreview-120118339",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c023b9e0-6dfc-4604-8b37-81476524fcf2",
        "parentId" : null,
        "authorId" : "c29e1906-5f0b-4d7b-af8b-d664805e8c8e",
        "body" : "How about move `ports.InsecureCloudControllerManagerPort` into `NewDefaultComponentConfig`?",
        "createdAt" : "2018-05-15T06:02:09Z",
        "updatedAt" : "2018-05-18T02:24:44Z",
        "lastEditedBy" : "c29e1906-5f0b-4d7b-af8b-d664805e8c8e",
        "tags" : [
        ]
      },
      {
        "id" : "066db808-9ba4-4ff5-bb7e-3444bdd0e864",
        "parentId" : "c023b9e0-6dfc-4604-8b37-81476524fcf2",
        "authorId" : "05637862-b60e-403e-8519-09d1b3f0c9c2",
        "body" : "I think it's not this PR's work, may be do `codeclean` in others PR. ",
        "createdAt" : "2018-05-15T07:48:34Z",
        "updatedAt" : "2018-05-18T02:24:44Z",
        "lastEditedBy" : "05637862-b60e-403e-8519-09d1b3f0c9c2",
        "tags" : [
        ]
      }
    ],
    "commit" : "3d20f1a99caaf3019d483d2c2c8fdb3d641661d2",
    "line" : 58,
    "diffHunk" : "@@ -1,1 +69,73 @@// NewCloudControllerManagerOptions creates a new ExternalCMServer with a default config.\nfunc NewCloudControllerManagerOptions() *CloudControllerManagerOptions {\n\tcomponentConfig := NewDefaultComponentConfig(ports.InsecureCloudControllerManagerPort)\n\n\ts := CloudControllerManagerOptions{"
  },
  {
    "id" : "08124e07-f3a3-4d89-982e-3b7372cadef7",
    "prId" : 63283,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/63283#pullrequestreview-120146152",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b90886bd-d8dc-430a-b13f-0de52f591904",
        "parentId" : null,
        "authorId" : "c29e1906-5f0b-4d7b-af8b-d664805e8c8e",
        "body" : "move this to `o.CloudProvider.Validate`",
        "createdAt" : "2018-05-15T06:21:07Z",
        "updatedAt" : "2018-05-18T02:24:44Z",
        "lastEditedBy" : "c29e1906-5f0b-4d7b-af8b-d664805e8c8e",
        "tags" : [
        ]
      },
      {
        "id" : "122997ef-fc46-408d-a036-ecd0f23885dc",
        "parentId" : "b90886bd-d8dc-430a-b13f-0de52f591904",
        "authorId" : "05637862-b60e-403e-8519-09d1b3f0c9c2",
        "body" : "fixed",
        "createdAt" : "2018-05-15T09:11:05Z",
        "updatedAt" : "2018-05-18T02:24:44Z",
        "lastEditedBy" : "05637862-b60e-403e-8519-09d1b3f0c9c2",
        "tags" : [
        ]
      }
    ],
    "commit" : "3d20f1a99caaf3019d483d2c2c8fdb3d641661d2",
    "line" : 209,
    "diffHunk" : "@@ -1,1 +207,211 @@\n\tif len(o.CloudProvider.Name) == 0 {\n\t\terrors = append(errors, fmt.Errorf(\"--cloud-provider cannot be empty\"))\n\t}\n"
  },
  {
    "id" : "964d724a-8bcb-4256-8ff9-212963e0ae86",
    "prId" : 63283,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/63283#pullrequestreview-120093704",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "069ec7ec-35c3-413d-ae03-3f031963c559",
        "parentId" : null,
        "authorId" : "c29e1906-5f0b-4d7b-af8b-d664805e8c8e",
        "body" : "L181~L195 duplicated with kube-controller-manager, should move to a common func",
        "createdAt" : "2018-05-15T06:35:55Z",
        "updatedAt" : "2018-05-18T02:24:44Z",
        "lastEditedBy" : "c29e1906-5f0b-4d7b-af8b-d664805e8c8e",
        "tags" : [
        ]
      }
    ],
    "commit" : "3d20f1a99caaf3019d483d2c2c8fdb3d641661d2",
    "line" : 185,
    "diffHunk" : "@@ -1,1 +185,189 @@\n\tc.LeaderElectionClient = clientset.NewForConfigOrDie(restclient.AddUserAgent(c.Kubeconfig, \"leader-election\"))\n\n\tc.EventRecorder = createRecorder(c.Client, userAgent)\n\tc.ComponentConfig.NodeStatusUpdateFrequency = o.NodeStatusUpdateFrequency"
  },
  {
    "id" : "9c4a0a78-2a15-49a4-aaf0-c3ec5ee58d94",
    "prId" : 63283,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/63283#pullrequestreview-122239621",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9b032c5a-099c-44a1-a16a-6099d3310899",
        "parentId" : null,
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "Do we have an issue filed for this?",
        "createdAt" : "2018-05-22T15:43:48Z",
        "updatedAt" : "2018-05-22T15:51:37Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      },
      {
        "id" : "eff18715-6106-4e93-9a7a-462685c5e86e",
        "parentId" : "9b032c5a-099c-44a1-a16a-6099d3310899",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "> Preview\r\n\r\nWorking on the PR.",
        "createdAt" : "2018-05-22T16:01:07Z",
        "updatedAt" : "2018-05-22T16:01:07Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "3d20f1a99caaf3019d483d2c2c8fdb3d641661d2",
    "line" : 89,
    "diffHunk" : "@@ -1,1 +94,98 @@\n\t// disable secure serving for now\n\t// TODO: enable HTTPS by default\n\ts.SecureServing.BindPort = 0\n"
  },
  {
    "id" : "47af5755-58ed-467b-8356-1048df84511a",
    "prId" : 63283,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/63283#pullrequestreview-122358410",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6fd991c6-cbf7-4129-8122-068516cbfa54",
        "parentId" : null,
        "authorId" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "body" : "I guess it's not this PR's job, but your types should move out of the componentconfig API group soon, and into an API group owned by your component.",
        "createdAt" : "2018-05-22T15:44:15Z",
        "updatedAt" : "2018-05-22T15:44:15Z",
        "lastEditedBy" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "tags" : [
        ]
      },
      {
        "id" : "48e8cde0-17fc-4ff9-a649-860af8e813dc",
        "parentId" : "6fd991c6-cbf7-4129-8122-068516cbfa54",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "Yes, the discussion is going on (I think around scheduler mainly). Do you know what the plan is whether these should be published in their own repo for easy consumation? We cannot force people building these configs to vendor kube.",
        "createdAt" : "2018-05-22T15:48:12Z",
        "updatedAt" : "2018-05-22T15:48:12Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "efb773c1-d85e-4b4c-8878-c683e8814b69",
        "parentId" : "6fd991c6-cbf7-4129-8122-068516cbfa54",
        "authorId" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "body" : "I agree we don't want people vendoring all of kube.\r\nI don't know of concrete plans to publish the configs separately (though you and I talked about it a long time ago, I don't think anything has happened since then).\r\nStaging-style approach is probably the easiest thing right now. Not sure what it takes to set up a staging repo, but I don't think it's that hard?",
        "createdAt" : "2018-05-22T20:58:29Z",
        "updatedAt" : "2018-05-22T20:58:29Z",
        "lastEditedBy" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "tags" : [
        ]
      },
      {
        "id" : "d591a063-9b8f-4d7f-a2f1-31f2539bed64",
        "parentId" : "6fd991c6-cbf7-4129-8122-068516cbfa54",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "Only the agreement is hard. Technically, another staging repo being published is 10 min of work.",
        "createdAt" : "2018-05-22T21:22:44Z",
        "updatedAt" : "2018-05-22T21:22:44Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "3d20f1a99caaf3019d483d2c2c8fdb3d641661d2",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +37,41 @@\t\"k8s.io/kubernetes/pkg/api/legacyscheme\"\n\t\"k8s.io/kubernetes/pkg/apis/componentconfig\"\n\tcomponentconfigv1alpha1 \"k8s.io/kubernetes/pkg/apis/componentconfig/v1alpha1\"\n\t\"k8s.io/kubernetes/pkg/master/ports\"\n\t// add the kubernetes feature gates"
  },
  {
    "id" : "f8943b21-2db8-42d6-8b81-348673de1b98",
    "prId" : 63283,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/63283#pullrequestreview-122239908",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dab796c1-d4e1-43bc-9ae8-a31a5c5e396f",
        "parentId" : null,
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "I can imagine authn/authz being very valuable features to enable in custom-written ccms out of core that reuses this common code. Is there a plan to let the user using this code easily be able to enable these? Open an issue to track this?",
        "createdAt" : "2018-05-22T15:45:18Z",
        "updatedAt" : "2018-05-22T15:51:37Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      },
      {
        "id" : "9ffa8afd-7b45-4060-b828-80efb0a9da70",
        "parentId" : "dab796c1-d4e1-43bc-9ae8-a31a5c5e396f",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "It's all in k8s.io/apiserver. Should be ready to be used.",
        "createdAt" : "2018-05-22T16:01:48Z",
        "updatedAt" : "2018-05-22T16:01:48Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "3d20f1a99caaf3019d483d2c2c8fdb3d641661d2",
    "line" : 79,
    "diffHunk" : "@@ -1,1 +86,90 @@\t\t},\n\t\tAuthentication:            nil, // TODO: enable with apiserveroptions.NewDelegatingAuthenticationOptions()\n\t\tAuthorization:             nil, // TODO: enable with apiserveroptions.NewDelegatingAuthorizationOptions()\n\t\tNodeStatusUpdateFrequency: componentConfig.NodeStatusUpdateFrequency,\n\t}"
  },
  {
    "id" : "d945e97f-704a-4b5c-85a1-a56bf170fe9c",
    "prId" : 63283,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/63283#pullrequestreview-122240929",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d968c30a-f1a4-4b88-8da3-9207a8389ffa",
        "parentId" : null,
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "Can we please soon move the controller-manager and ccm componentconfig to dedicated packages/API groups?",
        "createdAt" : "2018-05-22T15:46:45Z",
        "updatedAt" : "2018-05-22T15:51:37Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      },
      {
        "id" : "1cc6f7c9-1f82-4943-8027-5ceb9e1ae7a7",
        "parentId" : "d968c30a-f1a4-4b88-8da3-9207a8389ffa",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "A +1 from me, as long as we don't force consumers (like an out-of-tree kubeadm) to vendor kube. AFAIK we still have heave dependencies on internal types (does anybody have an overview?). The canonical solution would be to have k8s.io/cloud-controller-manager/pkg/apis/components. But we are still a bit far from that I fear.",
        "createdAt" : "2018-05-22T16:04:13Z",
        "updatedAt" : "2018-05-22T16:04:13Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "3d20f1a99caaf3019d483d2c2c8fdb3d641661d2",
    "line" : 96,
    "diffHunk" : "@@ -1,1 +101,105 @@\n// NewDefaultComponentConfig returns cloud-controller manager configuration object.\nfunc NewDefaultComponentConfig(insecurePort int32) componentconfig.CloudControllerManagerConfiguration {\n\tscheme := runtime.NewScheme()\n\tcomponentconfigv1alpha1.AddToScheme(scheme)"
  },
  {
    "id" : "482e5e14-1cc7-43ba-b5c0-ccc5052b700f",
    "prId" : 63283,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/63283#pullrequestreview-122241803",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a3203ca2-8f0a-4645-8bfb-686f51ba8b9c",
        "parentId" : null,
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "nit: syncing\r\nDo you track this in issue?",
        "createdAt" : "2018-05-22T15:47:35Z",
        "updatedAt" : "2018-05-22T15:51:37Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      },
      {
        "id" : "b16af14f-8a79-4822-960b-9fe7df0d6ea3",
        "parentId" : "a3203ca2-8f0a-4645-8bfb-686f51ba8b9c",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "Yes, this will be part of the discussion with @mtaufen of how to develop these pattern further. This issue is on the radar.",
        "createdAt" : "2018-05-22T16:06:25Z",
        "updatedAt" : "2018-05-22T16:06:25Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "3d20f1a99caaf3019d483d2c2c8fdb3d641661d2",
    "line" : 166,
    "diffHunk" : "@@ -1,1 +166,170 @@\n\t// sync back to component config\n\t// TODO: find more elegant way than synching back the values.\n\tc.ComponentConfig.KubeCloudShared.Port = int32(o.InsecureServing.BindPort)\n\tc.ComponentConfig.KubeCloudShared.Address = o.InsecureServing.BindAddress.String()"
  },
  {
    "id" : "91a3e03b-544c-42de-a4b0-b142da40578a",
    "prId" : 63283,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/63283#pullrequestreview-122231927",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "eec99a9a-df8a-4f84-bc4e-ef61aaf50759",
        "parentId" : null,
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "Could you create a CloudControllerManagerUserAgent string constant in a follow-up?",
        "createdAt" : "2018-05-22T15:49:08Z",
        "updatedAt" : "2018-05-22T15:51:37Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      }
    ],
    "commit" : "3d20f1a99caaf3019d483d2c2c8fdb3d641661d2",
    "line" : 217,
    "diffHunk" : "@@ -1,1 +220,224 @@\n\tc := &cloudcontrollerconfig.Config{}\n\tif err := o.ApplyTo(c, \"cloud-controller-manager\"); err != nil {\n\t\treturn nil, err\n\t}"
  },
  {
    "id" : "182ff9f6-1b24-4403-9aa3-5fe808a2de75",
    "prId" : 63283,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/63283#pullrequestreview-122231927",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9bae7ab2-7931-49a9-865b-15014f2161a5",
        "parentId" : null,
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "Should add a TODO to remove the dep on the `legacyscheme`",
        "createdAt" : "2018-05-22T15:49:28Z",
        "updatedAt" : "2018-05-22T15:51:37Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      }
    ],
    "commit" : "3d20f1a99caaf3019d483d2c2c8fdb3d641661d2",
    "line" : 228,
    "diffHunk" : "@@ -1,1 +231,235 @@\teventBroadcaster.StartLogging(glog.Infof)\n\teventBroadcaster.StartRecordingToSink(&v1core.EventSinkImpl{Interface: kubeClient.CoreV1().Events(\"\")})\n\treturn eventBroadcaster.NewRecorder(legacyscheme.Scheme, v1.EventSource{Component: userAgent})\n}"
  },
  {
    "id" : "7076d7ae-f6c4-436b-808a-8fb4f79d6741",
    "prId" : 52633,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/52633#pullrequestreview-63892568",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "07375abb-88d3-4a9e-a325-54632db87a64",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "Please add a comment to this function that many values are copied from the original controller manager and should probably stay in syc, and add a reciprocal comment to the original location.",
        "createdAt" : "2017-09-19T18:30:01Z",
        "updatedAt" : "2017-09-20T07:53:18Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "1c4cf046-9ded-4fa4-bf26-48aa1d800754",
        "parentId" : "07375abb-88d3-4a9e-a325-54632db87a64",
        "authorId" : "dd7ae991-dbbc-4a29-896b-4334bdee748b",
        "body" : "Sounds good. Note added.",
        "createdAt" : "2017-09-20T07:54:17Z",
        "updatedAt" : "2017-09-20T07:54:17Z",
        "lastEditedBy" : "dd7ae991-dbbc-4a29-896b-4334bdee748b",
        "tags" : [
        ]
      }
    ],
    "commit" : "5af2ac5344286c3f9e84db3b16f9cda0f2df68b6",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +61,65 @@\t\t\tLeaderElection:            leaderelectionconfig.DefaultLeaderElectionConfiguration(),\n\t\t\tControllerStartInterval:   metav1.Duration{Duration: 0 * time.Second},\n\t\t\tRouteReconciliationPeriod: metav1.Duration{Duration: 10 * time.Second},\n\t\t},\n\t\tNodeStatusUpdateFrequency: metav1.Duration{Duration: 5 * time.Minute},"
  },
  {
    "id" : "a6b1f900-1cd6-4099-9699-d7e5e31235e9",
    "prId" : 52524,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/52524#pullrequestreview-63198846",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "25074d7b-5f11-4997-a373-d31500fe608b",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "This doesn't explain what the flag is for.",
        "createdAt" : "2017-09-15T20:28:42Z",
        "updatedAt" : "2017-09-15T20:29:05Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "1f3639f8-c792-400f-a8fe-8c5422715b4a",
        "parentId" : "25074d7b-5f11-4997-a373-d31500fe608b",
        "authorId" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "body" : "@thockin, it's just a cut-n-paste from the kube-controller-manager\r\n\r\nhttps://github.com/kubernetes/kubernetes/blob/master/cmd/kube-controller-manager/app/options/options.go#L193",
        "createdAt" : "2017-09-15T23:12:22Z",
        "updatedAt" : "2017-09-15T23:12:22Z",
        "lastEditedBy" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "tags" : [
        ]
      },
      {
        "id" : "ad167fae-bb06-4fe7-a457-04f1e02bff8d",
        "parentId" : "25074d7b-5f11-4997-a373-d31500fe608b",
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "I agree with both @thockin and @dims. This should be fixed, but as it is a copy-paste from kcm it is ok for this v1.8 bugfix. Can be more descriptive in future releases.",
        "createdAt" : "2017-09-16T08:54:16Z",
        "updatedAt" : "2017-09-16T08:54:16Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      }
    ],
    "commit" : "a53b0c3f347f6e4197dcf1f44fe5e174334429e7",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +87,91 @@\tfs.BoolVar(&s.EnableContentionProfiling, \"contention-profiling\", false, \"Enable lock contention profiling, if profiling is enabled.\")\n\tfs.StringVar(&s.ClusterCIDR, \"cluster-cidr\", s.ClusterCIDR, \"CIDR Range for Pods in cluster.\")\n\tfs.StringVar(&s.ClusterName, \"cluster-name\", s.ClusterName, \"The instance prefix for the cluster.\")\n\tfs.BoolVar(&s.AllocateNodeCIDRs, \"allocate-node-cidrs\", false, \"Should CIDRs for Pods be allocated and set on the cloud provider.\")\n\tfs.StringVar(&s.Master, \"master\", s.Master, \"The address of the Kubernetes API server (overrides any value in kubeconfig).\")"
  },
  {
    "id" : "7bef0dfe-a67c-4a7d-b90e-67391bd32a08",
    "prId" : 52371,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/52371#pullrequestreview-75167248",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4451248f-3852-448d-9abb-18a74fd23cfb",
        "parentId" : null,
        "authorId" : "ae819fef-700f-45ca-aa42-0afbedcadc19",
        "body" : ":+1: ",
        "createdAt" : "2017-11-08T16:46:52Z",
        "updatedAt" : "2017-12-18T19:00:50Z",
        "lastEditedBy" : "ae819fef-700f-45ca-aa42-0afbedcadc19",
        "tags" : [
        ]
      }
    ],
    "commit" : "070a7b58237ad12582b3b2eff00877e48324ad66",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +34,38 @@// CloudControllerManagerServer is the main context object for the controller manager.\ntype CloudControllerManagerServer struct {\n\tcmoptions.ControllerManagerServer\n\n\t// NodeStatusUpdateFrequency is the frequency at which the controller updates nodes' status"
  },
  {
    "id" : "7e03b9cb-5faf-4e74-8706-dd29a7d0b65d",
    "prId" : 50289,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/50289#pullrequestreview-61683979",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e65c53dd-0083-40a3-bb8c-79162b024150",
        "parentId" : null,
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "As this is in alpha, we're probably gonna delete this (not include) when going to beta (hopefully in v1.9)",
        "createdAt" : "2017-09-10T12:57:13Z",
        "updatedAt" : "2017-09-10T12:57:16Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      }
    ],
    "commit" : "55c7ce1d80fb380ddc7efdcbf7cf7bc2b72bbc8c",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +78,82 @@\t\t\"The period for syncing NodeStatus in NodeController.\")\n\tfs.DurationVar(&s.NodeStatusUpdateFrequency.Duration, \"node-status-update-frequency\", s.NodeStatusUpdateFrequency.Duration, \"Specifies how often the controller updates nodes' status.\")\n\t// TODO: remove --service-account-private-key-file 6 months after 1.8 is released (~1.10)\n\tfs.StringVar(&s.ServiceAccountKeyFile, \"service-account-private-key-file\", s.ServiceAccountKeyFile, \"Filename containing a PEM-encoded private RSA or ECDSA key used to sign service account tokens.\")\n\tfs.MarkDeprecated(\"service-account-private-key-file\", \"This flag is currently no-op and will be deleted.\")"
  },
  {
    "id" : "04b0397b-e7e2-4899-9899-a62ee671cee9",
    "prId" : 34273,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/34273#pullrequestreview-12762558",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f782bf2c-67e9-46fa-ab2a-170808631911",
        "parentId" : null,
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "Hmm, why is this here?\r\nWill it be possible to build in many cloudproviders in the same cloudcontrollermanager?\r\nFor example, I could make a cloudcontrollermanager myself that would include both `raspberrypi-cloud` and `rancher` as cloudproviders and I could just toggle between those in my cluster?\r\n\r\nOr do we want to make it clear that only one cloudprovider is supported per cloudcontrollermanager?",
        "createdAt" : "2016-12-10T14:37:34Z",
        "updatedAt" : "2016-12-22T23:16:25Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      },
      {
        "id" : "3f76ee4f-e19d-44a0-b8ab-dcc694fc75fe",
        "parentId" : "f782bf2c-67e9-46fa-ab2a-170808631911",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "step 1 - move the existing code\r\nstep 2 - fix it\r\n\r\nWe're still barely scratching step 1. :)",
        "createdAt" : "2016-12-13T07:22:30Z",
        "updatedAt" : "2016-12-22T23:16:25Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "f1c5d66b-971c-44f7-8a15-5369e3364edd",
        "parentId" : "f782bf2c-67e9-46fa-ab2a-170808631911",
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "@thockin Yes, fully agree, just giving some food for thought for future improvements, follow-ups :smile:",
        "createdAt" : "2016-12-13T19:45:33Z",
        "updatedAt" : "2016-12-22T23:16:25Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      }
    ],
    "commit" : "75da31075743fcbc88ab133bcabdc9cc53392ead",
    "line" : null,
    "diffHunk" : "@@ -1,1 +63,67 @@\tfs.Int32Var(&s.Port, \"port\", s.Port, \"The port that the cloud-controller-manager's http service runs on\")\n\tfs.Var(componentconfig.IPVar{Val: &s.Address}, \"address\", \"The IP address to serve on (set to 0.0.0.0 for all interfaces)\")\n\tfs.StringVar(&s.CloudProvider, \"cloud-provider\", s.CloudProvider, \"The provider of cloud services. Empty for no provider.\")\n\tfs.StringVar(&s.CloudConfigFile, \"cloud-config\", s.CloudConfigFile, \"The path to the cloud provider configuration file.  Empty string for no configuration file.\")\n\tfs.DurationVar(&s.MinResyncPeriod.Duration, \"min-resync-period\", s.MinResyncPeriod.Duration, \"The resync period in reflectors will be random between MinResyncPeriod and 2*MinResyncPeriod\")"
  }
]