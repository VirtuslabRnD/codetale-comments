[
  {
    "id" : "453ddfc0-c755-4e27-acb0-ba2db1288a04",
    "prId" : 80681,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/80681#pullrequestreview-267547011",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9013bd03-cfe2-41b9-9c19-a14ba19fee4d",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "I expected these to be defaulted in config defaulting, not in Run()",
        "createdAt" : "2019-07-28T17:18:09Z",
        "updatedAt" : "2019-08-03T03:47:02Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "fd853138-d47e-4119-a82e-e0757d0e900d",
        "parentId" : "9013bd03-cfe2-41b9-9c19-a14ba19fee4d",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "That makes the default values appear in flag help",
        "createdAt" : "2019-07-28T17:18:48Z",
        "updatedAt" : "2019-08-03T03:47:02Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "3643f55d-2ac5-4b53-9e51-b23b9d7d8b53",
        "parentId" : "9013bd03-cfe2-41b9-9c19-a14ba19fee4d",
        "authorId" : "20555cdb-65b0-41d0-aea2-5598a3439d50",
        "body" : "Sounds good. Shoud we migrate scheduler's option to here for consistent?",
        "createdAt" : "2019-07-28T17:30:38Z",
        "updatedAt" : "2019-08-03T03:47:02Z",
        "lastEditedBy" : "20555cdb-65b0-41d0-aea2-5598a3439d50",
        "tags" : [
        ]
      },
      {
        "id" : "497483e5-c9a1-4490-9162-cef0d71e9044",
        "parentId" : "9013bd03-cfe2-41b9-9c19-a14ba19fee4d",
        "authorId" : "20555cdb-65b0-41d0-aea2-5598a3439d50",
        "body" : "Fixed",
        "createdAt" : "2019-07-29T02:39:40Z",
        "updatedAt" : "2019-08-03T03:47:02Z",
        "lastEditedBy" : "20555cdb-65b0-41d0-aea2-5598a3439d50",
        "tags" : [
        ]
      }
    ],
    "commit" : "41a435a812690431f9f449f08fe28967a8aed582",
    "line" : 1,
    "diffHunk" : "@@ -1,1 +184,188 @@\t// add a uniquifier so that two processes on the same host don't accidentally both become active\n\tid = id + \"_\" + string(uuid.NewUUID())\n\n\t// Lock required for leader election\n\trl, err := resourcelock.New(c.ComponentConfig.Generic.LeaderElection.ResourceLock,"
  },
  {
    "id" : "82389643-fa1d-459e-be74-5cb213410506",
    "prId" : 76627,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/76627#pullrequestreview-226869470",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "89cd029c-768b-4e63-9da8-5fc74218c877",
        "parentId" : null,
        "authorId" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "body" : "cc @cheftako @mikedanese this was breaking implementations that didn't import the GCE provider",
        "createdAt" : "2019-04-15T20:41:14Z",
        "updatedAt" : "2019-04-15T20:41:15Z",
        "lastEditedBy" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "tags" : [
        ]
      }
    ],
    "commit" : "16c150c15db321d9bc6049b9a2ac62af09a7b615",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +89,93 @@\tglobalflag.AddGlobalFlags(namedFlagSets.FlagSet(\"global\"), cmd.Name())\n\n\tif flag.CommandLine.Lookup(\"cloud-provider-gce-lb-src-cidrs\") != nil {\n\t\t// hoist this flag from the global flagset to preserve the commandline until\n\t\t// the gce cloudprovider is removed."
  },
  {
    "id" : "49d9982b-b0b7-438c-9eaa-648e3571bcc6",
    "prId" : 73408,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/73408#pullrequestreview-201453159",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7f0e6fa4-75b0-4489-b4e3-38bae78397ad",
        "parentId" : null,
        "authorId" : "05637862-b60e-403e-8519-09d1b3f0c9c2",
        "body" : "can we rename 'apiserverflag'?\r\nthe same in others place",
        "createdAt" : "2019-01-31T02:13:03Z",
        "updatedAt" : "2019-02-15T15:34:02Z",
        "lastEditedBy" : "05637862-b60e-403e-8519-09d1b3f0c9c2",
        "tags" : [
        ]
      },
      {
        "id" : "ec8ab673-e988-4ff7-a77b-3bf8f73b6dc7",
        "parentId" : "7f0e6fa4-75b0-4489-b4e3-38bae78397ad",
        "authorId" : "27315fad-771e-420e-af79-534db73fcb49",
        "body" : "done. it is now `cliflag`. On a side note. I did not name any of the `globalflag` imports as it was never named before and left those imports bare.",
        "createdAt" : "2019-02-08T07:18:18Z",
        "updatedAt" : "2019-02-15T15:34:02Z",
        "lastEditedBy" : "27315fad-771e-420e-af79-534db73fcb49",
        "tags" : [
        ]
      }
    ],
    "commit" : "160ed26c20e8114579dd15e0a7f8bf51b916aa12",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +36,40 @@\tcloudprovider \"k8s.io/cloud-provider\"\n\tcliflag \"k8s.io/component-base/cli/flag\"\n\t\"k8s.io/component-base/cli/globalflag\"\n\t\"k8s.io/klog\"\n\tcloudcontrollerconfig \"k8s.io/kubernetes/cmd/cloud-controller-manager/app/config\""
  },
  {
    "id" : "9575368e-c747-40a4-aa45-86b259fdc5b4",
    "prId" : 72970,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/72970#pullrequestreview-193269458",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "19dd68f1-6473-43f6-b3f5-870d70560f1e",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "do we need a TODO to wire up waits for these other server processes, or are we not planning to wait for requests to complete for non-apiservers?",
        "createdAt" : "2019-01-16T16:20:14Z",
        "updatedAt" : "2019-01-18T09:57:13Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "888bd213-c4f4-4232-bf4e-d65a09ef1e42",
        "parentId" : "19dd68f1-6473-43f6-b3f5-870d70560f1e",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "A TODO maybe, but I don't think anybody will add that any time soon. Those APIs are not that critical that it's worth it.",
        "createdAt" : "2019-01-16T17:50:43Z",
        "updatedAt" : "2019-01-18T09:57:13Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "5b47f99164d76b6b043d7de2d3834abeda6685b0",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +151,155 @@\t\thandler := genericcontrollermanager.BuildHandlerChain(unsecuredMux, &c.Authorization, &c.Authentication)\n\t\t// TODO: handle stoppedCh returned by c.SecureServing.Serve\n\t\tif _, err := c.SecureServing.Serve(handler, 0, stopCh); err != nil {\n\t\t\treturn err\n\t\t}"
  },
  {
    "id" : "69406514-7578-4273-ba9f-c0195c8a79d8",
    "prId" : 68283,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/68283#pullrequestreview-186121244",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "10d0e9a2-6c5f-44f7-ab65-26e97ce24073",
        "parentId" : null,
        "authorId" : "7aca96c2-45d7-4567-99be-0323d7556c55",
        "body" : "It would be nice if we could find a way to enforce that the controller name is the same in both the KCM and the CCM. I realize you have done this in the code but referencing the same constant or similar would help to ensure that the names are consistent across executables. ",
        "createdAt" : "2018-12-18T00:00:02Z",
        "updatedAt" : "2019-01-15T01:19:35Z",
        "lastEditedBy" : "7aca96c2-45d7-4567-99be-0323d7556c55",
        "tags" : [
        ]
      },
      {
        "id" : "6b2e79a9-06b3-4262-b88b-010f0c23f299",
        "parentId" : "10d0e9a2-6c5f-44f7-ab65-26e97ce24073",
        "authorId" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "body" : "I can have a follow up PR for this one :) ",
        "createdAt" : "2018-12-18T15:19:17Z",
        "updatedAt" : "2019-01-15T01:19:35Z",
        "lastEditedBy" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "tags" : [
        ]
      }
    ],
    "commit" : "3820f7400ff2113fa1e8b17551db37018859de97",
    "line" : 190,
    "diffHunk" : "@@ -1,1 +268,272 @@\tcontrollers[\"cloud-node\"] = startCloudNodeController\n\tcontrollers[\"cloud-node-lifecycle\"] = startCloudNodeLifecycleController\n\tcontrollers[\"persistentvolume-binder\"] = startPersistentVolumeLabelController\n\tcontrollers[\"service\"] = startServiceController\n\tcontrollers[\"route\"] = startRouteController"
  },
  {
    "id" : "f7cf6530-77f0-4e06-86fa-b3013eb71738",
    "prId" : 59582,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/59582#pullrequestreview-96084556",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2d71d104-d4b0-4d0d-9053-bfd6df8a6129",
        "parentId" : null,
        "authorId" : "7aca96c2-45d7-4567-99be-0323d7556c55",
        "body" : "Given that you have created a stop channel, would it make sense to use it here?",
        "createdAt" : "2018-02-12T22:09:10Z",
        "updatedAt" : "2018-02-13T10:22:18Z",
        "lastEditedBy" : "7aca96c2-45d7-4567-99be-0323d7556c55",
        "tags" : [
        ]
      },
      {
        "id" : "5bd4fe50-383c-45a4-83ba-8a4b8541421c",
        "parentId" : "2d71d104-d4b0-4d0d-9053-bfd6df8a6129",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "Leaving this to https://github.com/kubernetes/kubernetes/pull/57932.",
        "createdAt" : "2018-02-13T10:04:52Z",
        "updatedAt" : "2018-02-13T10:22:18Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "5483ab7679dd055422131fd1c22a18eee39a775e",
    "line" : 168,
    "diffHunk" : "@@ -1,1 +149,153 @@\n\tif !c.Generic.ComponentConfig.LeaderElection.LeaderElect {\n\t\trun(nil)\n\t\tpanic(\"unreachable\")\n\t}"
  },
  {
    "id" : "23db9ff2-3d2f-4d2c-a2e9-aa76529ad5c6",
    "prId" : 52371,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/52371#pullrequestreview-77314553",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dbcd9915-3d51-435c-a855-4fff53c316d2",
        "parentId" : null,
        "authorId" : "ae819fef-700f-45ca-aa42-0afbedcadc19",
        "body" : "Why don't we want shared-informed client to use ServiceAccount for authentication?",
        "createdAt" : "2017-11-08T16:46:00Z",
        "updatedAt" : "2017-12-18T19:00:50Z",
        "lastEditedBy" : "ae819fef-700f-45ca-aa42-0afbedcadc19",
        "tags" : [
        ]
      },
      {
        "id" : "eeef6a67-d9a0-45fe-b7da-fe1988b24959",
        "parentId" : "dbcd9915-3d51-435c-a855-4fff53c316d2",
        "authorId" : "7aca96c2-45d7-4567-99be-0323d7556c55",
        "body" : "I would have to regenerate with the old client to get the exact details. The client did not have the permissions on one of the objects it was watching.",
        "createdAt" : "2017-11-17T01:06:18Z",
        "updatedAt" : "2017-12-18T19:00:50Z",
        "lastEditedBy" : "7aca96c2-45d7-4567-99be-0323d7556c55",
        "tags" : [
        ]
      }
    ],
    "commit" : "070a7b58237ad12582b3b2eff00877e48324ad66",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +205,209 @@\t}\n\n\tversionedClient := rootClientBuilder.ClientOrDie(\"shared-informers\")\n\tsharedInformers := informers.NewSharedInformerFactory(versionedClient, resyncPeriod(s)())\n"
  },
  {
    "id" : "a5dc1a6f-de29-40db-9c1e-4d08360d6b2a",
    "prId" : 51397,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/51397#pullrequestreview-58797298",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fb7b92ee-a278-418a-a03e-ccca193cf1cc",
        "parentId" : null,
        "authorId" : "f2d7a78e-606f-4060-903e-a21198d7084e",
        "body" : "@wackxu I think your motivation is good. However, I can't see any real benefit from this refactor?",
        "createdAt" : "2017-08-26T08:15:57Z",
        "updatedAt" : "2017-08-30T09:10:15Z",
        "lastEditedBy" : "f2d7a78e-606f-4060-903e-a21198d7084e",
        "tags" : [
        ]
      },
      {
        "id" : "5beab1e5-1d80-443f-87a7-a6276efc403e",
        "parentId" : "fb7b92ee-a278-418a-a03e-ccca193cf1cc",
        "authorId" : "f71497cc-dd85-47eb-bbed-996bde0d13a4",
        "body" : "As we can see some other module that have the similar code ,this has been separated from the original function such as kubernetes\\plugin\\cmd\\kube-scheduler\\app\\server.go. I think that the piece of code is too long and it has independent perfection function. it will be more readable and reasonable by refactoring the code and it more meets the programming standards。",
        "createdAt" : "2017-08-26T08:29:16Z",
        "updatedAt" : "2017-08-30T09:10:15Z",
        "lastEditedBy" : "f71497cc-dd85-47eb-bbed-996bde0d13a4",
        "tags" : [
        ]
      },
      {
        "id" : "934df98c-8f71-4e44-be8f-fea664a11403",
        "parentId" : "fb7b92ee-a278-418a-a03e-ccca193cf1cc",
        "authorId" : "f2d7a78e-606f-4060-903e-a21198d7084e",
        "body" : "I am not sure if different components will share the same startup.",
        "createdAt" : "2017-08-26T08:46:11Z",
        "updatedAt" : "2017-08-30T09:10:15Z",
        "lastEditedBy" : "f2d7a78e-606f-4060-903e-a21198d7084e",
        "tags" : [
        ]
      }
    ],
    "commit" : "c69df736ee54154c04860f3cafd46d82b0fc89ff",
    "line" : 40,
    "diffHunk" : "@@ -1,1 +252,256 @@}\n\nfunc startHTTP(s *options.CloudControllerManagerServer) {\n\tmux := http.NewServeMux()\n\thealthz.InstallHandler(mux)"
  },
  {
    "id" : "0c75f33e-c1c9-4f4c-a910-794a07a7da25",
    "prId" : 48797,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/48797#pullrequestreview-50489165",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "008eecf5-4638-4348-910f-df3c84c95a2b",
        "parentId" : null,
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "Why are you triming space? We don't do that for any other string config.",
        "createdAt" : "2017-07-18T01:23:31Z",
        "updatedAt" : "2017-07-18T01:23:32Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      }
    ],
    "commit" : "dfc8b667a28819b09d27cabaa5620152a10d4246",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +241,245 @@\t\t} else {\n\t\t\tvar clusterCIDR *net.IPNet\n\t\t\tif len(strings.TrimSpace(s.ClusterCIDR)) != 0 {\n\t\t\t\t_, clusterCIDR, err = net.ParseCIDR(s.ClusterCIDR)\n\t\t\t\tif err != nil {"
  },
  {
    "id" : "69836836-7bea-4c56-a9f3-1ec5580a312a",
    "prId" : 44680,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/44680#pullrequestreview-59933734",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6678a910-1bea-4d43-8f13-a8e0ce12316f",
        "parentId" : null,
        "authorId" : "7aca96c2-45d7-4567-99be-0323d7556c55",
        "body" : "Why 5? Would it be worth making this configurable?",
        "createdAt" : "2017-08-31T17:32:42Z",
        "updatedAt" : "2017-08-31T18:04:29Z",
        "lastEditedBy" : "7aca96c2-45d7-4567-99be-0323d7556c55",
        "tags" : [
        ]
      }
    ],
    "commit" : "53856420e861ab29587bc1e49c9fcb641f25f8fc",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +223,227 @@\t// Start the PersistentVolumeLabelController\n\tpvlController := cloudcontrollers.NewPersistentVolumeLabelController(client(\"pvl-controller\"), cloud)\n\tthreads := 5\n\tgo pvlController.Run(threads, stop)\n\ttime.Sleep(wait.Jitter(s.ControllerStartInterval.Duration, ControllerStartJitter))"
  },
  {
    "id" : "95701fd7-a480-4e39-94b8-84935067f56f",
    "prId" : 34273,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/34273#pullrequestreview-12617315",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5518ac45-bd88-4d7c-aea7-9feb83dec817",
        "parentId" : null,
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "Is there any way we can try to fetch this value from the api-server instead of having it as a flag\r\n\r\nI really would want to keep the flags down here",
        "createdAt" : "2016-12-10T14:29:06Z",
        "updatedAt" : "2016-12-22T23:16:25Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      },
      {
        "id" : "c4b22609-cbb6-40e5-b52e-cee4b52da906",
        "parentId" : "5518ac45-bd88-4d7c-aea7-9feb83dec817",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "API server doesn't have cluster CIDR yet...",
        "createdAt" : "2016-12-13T07:17:17Z",
        "updatedAt" : "2016-12-22T23:16:25Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "75da31075743fcbc88ab133bcabdc9cc53392ead",
    "line" : 196,
    "diffHunk" : "@@ -1,1 +194,198 @@\tsharedInformers := informers.NewSharedInformerFactory(client(\"shared-informers\"), nil, ResyncPeriod(s)())\n\n\t_, clusterCIDR, err := net.ParseCIDR(s.ClusterCIDR)\n\tif err != nil {\n\t\tglog.Warningf(\"Unsuccessful parsing of cluster CIDR %v: %v\", s.ClusterCIDR, err)"
  },
  {
    "id" : "bc29bf57-a1b0-438e-9c66-cd418ebcbd7d",
    "prId" : 34273,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/34273#pullrequestreview-13449743",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "17cb268b-eace-435d-bf8d-79a346b89b0c",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "The total lack of comments in this file bums me out...",
        "createdAt" : "2016-12-13T07:16:04Z",
        "updatedAt" : "2016-12-22T23:16:25Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "9a7f46f8-a63a-4254-86cd-5b13643fc20e",
        "parentId" : "17cb268b-eace-435d-bf8d-79a346b89b0c",
        "authorId" : "ae819fef-700f-45ca-aa42-0afbedcadc19",
        "body" : "Sorry, I took care of it now.",
        "createdAt" : "2016-12-17T17:23:57Z",
        "updatedAt" : "2016-12-22T23:16:25Z",
        "lastEditedBy" : "ae819fef-700f-45ca-aa42-0afbedcadc19",
        "tags" : [
        ]
      }
    ],
    "commit" : "75da31075743fcbc88ab133bcabdc9cc53392ead",
    "line" : null,
    "diffHunk" : "@@ -1,1 +103,107 @@\n\t// Start the external controller manager server\n\tgo func() {\n\t\tmux := http.NewServeMux()\n\t\thealthz.InstallHandler(mux)"
  },
  {
    "id" : "8b6bbbfa-f122-41d5-8093-0e7911ba0fa2",
    "prId" : 34273,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/34273#pullrequestreview-14225787",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2d211530-d93f-40b3-97c7-d4f3194ecd73",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "could be private ?\r\n",
        "createdAt" : "2016-12-22T20:33:42Z",
        "updatedAt" : "2016-12-22T23:16:25Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "75da31075743fcbc88ab133bcabdc9cc53392ead",
    "line" : 74,
    "diffHunk" : "@@ -1,1 +72,76 @@\n// ResyncPeriod computes the time interval a shared informer waits before resyncing with the api server\nfunc ResyncPeriod(s *options.CloudControllerManagerServer) func() time.Duration {\n\treturn func() time.Duration {\n\t\tfactor := rand.Float64() + 1"
  },
  {
    "id" : "1b8e6084-98d0-4ab7-b592-ee9706f63653",
    "prId" : 34273,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/34273#pullrequestreview-14229585",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9df27da0-211d-4186-82b3-33d69c18b4af",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "This controller doesn't need ServiceAccountKeyFile, and should probably just use the UseServiceAccountCredentials flag to determine this... the goal here is to run each controller loop with a distinct identity so its permissions can be scoped to its job.",
        "createdAt" : "2016-12-22T21:00:59Z",
        "updatedAt" : "2016-12-22T23:16:25Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "75da31075743fcbc88ab133bcabdc9cc53392ead",
    "line" : 133,
    "diffHunk" : "@@ -1,1 +131,135 @@\t\t}\n\t\tvar clientBuilder controller.ControllerClientBuilder\n\t\tif len(s.ServiceAccountKeyFile) > 0 && s.UseServiceAccountCredentials {\n\t\t\tclientBuilder = controller.SAControllerClientBuilder{\n\t\t\t\tClientConfig: restclient.AnonymousClientConfig(kubeconfig),"
  }
]