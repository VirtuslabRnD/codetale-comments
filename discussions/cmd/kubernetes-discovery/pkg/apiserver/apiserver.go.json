[
  {
    "id" : "4ae96b6e-241e-4b31-b3d5-9a0cfc0b3492",
    "prId" : 38624,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/38624#pullrequestreview-12526654",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "74a2ab8e-cec2-460e-ba39-b3627548b15a",
        "parentId" : null,
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Let me guess - we don't generate camel case names for informers?  `Apiregistration` is like we're not even trying... ",
        "createdAt" : "2016-12-12T19:12:34Z",
        "updatedAt" : "2016-12-12T21:26:37Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "b81645e382a2e2ca9418b957fac6a2bbdac5eca6",
    "line" : 71,
    "diffHunk" : "@@ -1,1 +124,128 @@\t\tproxyClientKey:   c.ProxyClientKey,\n\t\tproxyHandlers:    map[string]*proxyHandler{},\n\t\tlister:           informerFactory.Apiregistration().InternalVersion().APIServices().Lister(),\n\t\tproxyMux:         proxyMux,\n\t}"
  },
  {
    "id" : "21dc459b-8448-419c-a9fe-c0c8b2f22894",
    "prId" : 38319,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/38319#pullrequestreview-12012939",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "24e1ff4a-1943-4592-9aea-aaf31a36ee34",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "Why not call the default chain builder with your wrapper `apiHandler`? Don't particularly like the code duplication below.",
        "createdAt" : "2016-12-08T07:13:36Z",
        "updatedAt" : "2016-12-08T18:54:31Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "8be6ab13-c825-4637-b7fb-6754ca261a27",
        "parentId" : "24e1ff4a-1943-4592-9aea-aaf31a36ee34",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "> Why not call the default chain builder with your wrapper apiHandler? Don't particularly like the code duplication below.\r\n\r\nI'm about to add a handler in between authentication and authorization.",
        "createdAt" : "2016-12-08T12:32:52Z",
        "updatedAt" : "2016-12-08T18:54:31Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "fb9c10995366e8cccf450facf930d5bb509d7ad2",
    "line" : 113,
    "diffHunk" : "@@ -1,1 +149,153 @@func (h *handlerChainConfig) handlerChain(apiHandler http.Handler, c *genericapiserver.Config) (secure, insecure http.Handler) {\n\t// add this as a filter so that we never collide with \"already registered\" failures on `/apis`\n\thandler := WithAPIs(apiHandler, h.informers.Apiregistration().InternalVersion().APIServices())\n\n\thandler = apiserverfilters.WithAuthorization(handler, c.RequestContextMapper, c.Authorizer)"
  },
  {
    "id" : "b40e6aeb-4320-4db0-a95f-8476f2f17d42",
    "prId" : 38319,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/38319#pullrequestreview-11964569",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d3b21a8f-5257-44ab-ae90-6a7fdb89417f",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "I like the `please`.",
        "createdAt" : "2016-12-08T07:13:58Z",
        "updatedAt" : "2016-12-08T18:54:31Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "fb9c10995366e8cccf450facf930d5bb509d7ad2",
    "line" : 131,
    "diffHunk" : "@@ -1,1 +167,171 @@}\n\n// AddAPIService adds an API service.  It is not thread-safe, so only call it on one thread at a time please.\n// It's a slow moving API, so its ok to run the controller on a single thread\nfunc (s *APIDiscoveryServer) AddAPIService(apiService *apiregistration.APIService) {"
  },
  {
    "id" : "5b32c5a1-3b21-4004-b590-f8b6b49c398b",
    "prId" : 38319,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/38319#pullrequestreview-12013043",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "aeb3072e-699a-4b22-a158-6cbd9fbc909b",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "No need to override the old value?",
        "createdAt" : "2016-12-08T07:14:38Z",
        "updatedAt" : "2016-12-08T18:54:31Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "625b1ecd-6c31-44b7-a979-69e62c3fd4e2",
        "parentId" : "aeb3072e-699a-4b22-a158-6cbd9fbc909b",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "> No need to override the old value?\r\n\r\nNot for the discovery endpoint since that's purely lister based.",
        "createdAt" : "2016-12-08T12:33:30Z",
        "updatedAt" : "2016-12-08T18:54:31Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "fb9c10995366e8cccf450facf930d5bb509d7ad2",
    "line" : 134,
    "diffHunk" : "@@ -1,1 +170,174 @@// It's a slow moving API, so its ok to run the controller on a single thread\nfunc (s *APIDiscoveryServer) AddAPIService(apiService *apiregistration.APIService) {\n\tif s.handledAPIServices.Has(apiService.Name) {\n\t\treturn\n\t}"
  }
]