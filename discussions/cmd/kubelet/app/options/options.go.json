[
  {
    "id" : "d13e5baa-2f24-476f-be50-d697968b8b24",
    "prId" : 101480,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/101480#pullrequestreview-645744959",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f1ed5b32-618c-4d1d-a1af-9d5310759363",
        "parentId" : null,
        "authorId" : "a08a031e-c5d0-4521-a805-73ac0bc08c9a",
        "body" : "Not sure why this URL has been changed as the current one leads to the right documentation page. Could you please elaborate?",
        "createdAt" : "2021-04-27T10:51:04Z",
        "updatedAt" : "2021-04-28T07:27:27Z",
        "lastEditedBy" : "a08a031e-c5d0-4521-a805-73ac0bc08c9a",
        "tags" : [
        ]
      },
      {
        "id" : "95a1729f-f57c-4eee-997e-9a9c41efe4c5",
        "parentId" : "f1ed5b32-618c-4d1d-a1af-9d5310759363",
        "authorId" : "ac20bfc0-048b-4f7c-8f40-c004ff5299e1",
        "body" : "Old url: http://kubernetes.io/docs/user-guide/compute-resources is unsafety HTTP, and auto redirect to new HTTPS url.",
        "createdAt" : "2021-04-27T11:32:15Z",
        "updatedAt" : "2021-04-28T07:27:27Z",
        "lastEditedBy" : "ac20bfc0-048b-4f7c-8f40-c004ff5299e1",
        "tags" : [
        ]
      }
    ],
    "commit" : "bebca30309c0bed34e412cf5c57a290adfaaa74f",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +530,534 @@\t// Node Allocatable Flags\n\tfs.Var(cliflag.NewMapStringString(&c.SystemReserved), \"system-reserved\", \"A set of ResourceName=ResourceQuantity (e.g. cpu=200m,memory=500Mi,ephemeral-storage=1Gi) pairs that describe resources reserved for non-kubernetes components. Currently only cpu and memory are supported. See https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/ for more detail. [default=none]\")\n\tfs.Var(cliflag.NewMapStringString(&c.KubeReserved), \"kube-reserved\", \"A set of ResourceName=ResourceQuantity (e.g. cpu=200m,memory=500Mi,ephemeral-storage=1Gi) pairs that describe resources reserved for kubernetes system components. Currently cpu, memory and local ephemeral storage for root file system are supported. See https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/ for more detail. [default=none]\")\n\tfs.StringSliceVar(&c.EnforceNodeAllocatable, \"enforce-node-allocatable\", c.EnforceNodeAllocatable, \"A comma separated list of levels of node allocatable enforcement to be enforced by kubelet. Acceptable options are 'none', 'pods', 'system-reserved', and 'kube-reserved'. If the latter two options are specified, '--system-reserved-cgroup' and '--kube-reserved-cgroup' must also be set, respectively. If 'none' is specified, no additional options should be set. See https://kubernetes.io/docs/tasks/administer-cluster/reserve-compute-resources/ for more details.\")\n\tfs.StringVar(&c.SystemReservedCgroup, \"system-reserved-cgroup\", c.SystemReservedCgroup, \"Absolute name of the top level cgroup that is used to manage non-kubernetes components for which compute resources were reserved via '--system-reserved' flag. Ex. '/system-reserved'. [default='']\")"
  },
  {
    "id" : "9a21a2d2-e835-4b00-9e42-fff4242c4fe9",
    "prId" : 101432,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/101432#pullrequestreview-658955177",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e4418e25-a628-4dc3-90d9-374dbb3bc64a",
        "parentId" : null,
        "authorId" : "8eff55b7-2f52-4dd6-b8a6-b75a1c427179",
        "body" : "I guess this line should be updated with the new policy name once we decide on it -- and then push that new policy name all the way through the other files.",
        "createdAt" : "2021-05-12T19:20:44Z",
        "updatedAt" : "2021-05-12T19:26:26Z",
        "lastEditedBy" : "8eff55b7-2f52-4dd6-b8a6-b75a1c427179",
        "tags" : [
        ]
      },
      {
        "id" : "0c4171ed-f765-4330-968b-f700a5399c4f",
        "parentId" : "e4418e25-a628-4dc3-90d9-374dbb3bc64a",
        "authorId" : "38db888a-e196-4a62-9357-0fcd42a50015",
        "body" : "Right, we will update.",
        "createdAt" : "2021-05-13T14:22:25Z",
        "updatedAt" : "2021-05-13T14:22:25Z",
        "lastEditedBy" : "38db888a-e196-4a62-9357-0fcd42a50015",
        "tags" : [
        ]
      }
    ],
    "commit" : "a2fb8b00392a1bcf5c906dcddbf8d04247ddd85f",
    "line" : 3,
    "diffHunk" : "@@ -1,1 +492,496 @@\tfs.StringVar(&c.CgroupDriver, \"cgroup-driver\", c.CgroupDriver, \"Driver that the kubelet uses to manipulate cgroups on the host.  Possible values: 'cgroupfs', 'systemd'\")\n\tfs.StringVar(&c.CgroupRoot, \"cgroup-root\", c.CgroupRoot, \"Optional root cgroup to use for pods. This is handled by the container runtime on a best effort basis. Default: '', which means use the container runtime default.\")\n\tfs.StringVar(&c.CPUManagerPolicy, \"cpu-manager-policy\", c.CPUManagerPolicy, \"CPU Manager policy to use. Possible values: 'none', 'static'.\")\n\tfs.Var(cliflag.NewMapStringStringNoSplit(&c.CPUManagerPolicyOptions), \"cpu-manager-policy-options\", \"A set of key=value CPU Manager policy options to use, to fine tune their behaviour. If not supplied, keep the default behaviour.\")\n\tfs.DurationVar(&c.CPUManagerReconcilePeriod.Duration, \"cpu-manager-reconcile-period\", c.CPUManagerReconcilePeriod.Duration, \"<Warning: Alpha feature> CPU Manager reconciliation period. Examples: '10s', or '1m'. If not supplied, defaults to 'NodeStatusUpdateFrequency'\")"
  },
  {
    "id" : "efecf616-5b2f-4a36-89c3-020fe0ee3626",
    "prId" : 95239,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/95239#pullrequestreview-504498710",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "14581d57-4e16-41d8-87ac-b83fc7475e9a",
        "parentId" : null,
        "authorId" : "0c76e20f-41a5-4725-b3c3-d5b6cae89641",
        "body" : "the `if set` part of the doc has been removed. Is this intentional?",
        "createdAt" : "2020-10-02T17:31:54Z",
        "updatedAt" : "2020-10-07T21:28:03Z",
        "lastEditedBy" : "0c76e20f-41a5-4725-b3c3-d5b6cae89641",
        "tags" : [
        ]
      },
      {
        "id" : "453afda9-5a78-4e32-9b66-72cee472f88f",
        "parentId" : "14581d57-4e16-41d8-87ac-b83fc7475e9a",
        "authorId" : "c490e441-2b9f-41f2-8559-d47be0ea8836",
        "body" : "It seemed like it would be awkward to rewrite the sentence in a way that reflected the fact that the value could be one or two addresses, and it seemed kind of obvious and unnecessary to state anyway... (\"kubelet --node-ip tells kubelet to set the node IP\")",
        "createdAt" : "2020-10-03T11:51:42Z",
        "updatedAt" : "2020-10-07T21:28:03Z",
        "lastEditedBy" : "c490e441-2b9f-41f2-8559-d47be0ea8836",
        "tags" : [
        ]
      },
      {
        "id" : "c2f90597-842d-4857-b161-923ca506c720",
        "parentId" : "14581d57-4e16-41d8-87ac-b83fc7475e9a",
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "so, in order to have a kubelet with dual stack addresses you always have to pass the node-ips as a parameter.\r\nThis is a pita for installation automation :/ but since you did an extensive research on this topic I imagine that is not easy to support/add it",
        "createdAt" : "2020-10-08T07:24:38Z",
        "updatedAt" : "2020-10-08T07:24:50Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      },
      {
        "id" : "f9bc88ba-0ab2-4b91-9d6d-2e56e04a22b8",
        "parentId" : "14581d57-4e16-41d8-87ac-b83fc7475e9a",
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "ic, RTFM thing , it is in the KEP ",
        "createdAt" : "2020-10-08T07:30:51Z",
        "updatedAt" : "2020-10-08T07:30:51Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      }
    ],
    "commit" : "971477d9b5cc4bf5ae62abe3bbc46e534f481e1b",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +326,330 @@\tfs.StringVar(&f.HostnameOverride, \"hostname-override\", f.HostnameOverride, \"If non-empty, will use this string as identification instead of the actual hostname. If --cloud-provider is set, the cloud provider determines the name of the node (consult cloud provider documentation to determine if and how the hostname is used).\")\n\n\tfs.StringVar(&f.NodeIP, \"node-ip\", f.NodeIP, \"IP address (or comma-separated dual-stack IP addresses) of the node. If unset, kubelet will use the node's default IPv4 address, if any, or its default IPv6 address if it has no IPv4 addresses. You can pass '::' to make it prefer the default IPv6 address rather than the default IPv4 address.\")\n\n\tfs.StringVar(&f.CertDirectory, \"cert-dir\", f.CertDirectory, \"The directory where the TLS certs are located. \"+"
  },
  {
    "id" : "7aeb861e-442c-46c5-8997-6bb226b63942",
    "prId" : 92967,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/92967#pullrequestreview-527122617",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "11f19ba2-b44f-4bf6-a71c-9745d5c5073a",
        "parentId" : null,
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "possibly not a blocker, but adding a new flag would later require migration:\r\nhttps://github.com/kubernetes/kubernetes/issues/86843\r\n\r\none way of asking users to move to use the component configuration and to not add new flags, is to expose the feature only in the configuration.\r\n\r\ncc @mtaufen \r\n",
        "createdAt" : "2020-11-09T20:50:51Z",
        "updatedAt" : "2020-11-12T11:26:46Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      },
      {
        "id" : "2977feb8-f3cc-4251-9cd5-bcbc1bcdc7e4",
        "parentId" : "11f19ba2-b44f-4bf6-a71c-9745d5c5073a",
        "authorId" : "a1d73c29-275d-437e-b673-7957d6a4d943",
        "body" : "I think we can migrate it later together with `topology-manager-policy` in a separate PR. ",
        "createdAt" : "2020-11-10T11:47:42Z",
        "updatedAt" : "2020-11-12T11:26:46Z",
        "lastEditedBy" : "a1d73c29-275d-437e-b673-7957d6a4d943",
        "tags" : [
        ]
      }
    ],
    "commit" : "b7714918db923523d98e6dd834f53b57a407acd0",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +538,542 @@\tfs.BoolVar(&c.ProtectKernelDefaults, \"protect-kernel-defaults\", c.ProtectKernelDefaults, \"Default kubelet behaviour for kernel tuning. If set, kubelet errors if any of kernel tunables is different than kubelet defaults.\")\n\tfs.StringVar(&c.ReservedSystemCPUs, \"reserved-cpus\", c.ReservedSystemCPUs, \"A comma-separated list of CPUs or CPU ranges that are reserved for system and kubernetes usage. This specific list will supersede cpu counts in --system-reserved and --kube-reserved.\")\n\tfs.StringVar(&c.TopologyManagerScope, \"topology-manager-scope\", c.TopologyManagerScope, \"Scope to which topology hints applied. Topology Manager collects hints from Hint Providers and applies them to defined scope to ensure the pod admission. Possible values: 'container' (default), 'pod'.\")\n\t// Node Allocatable Flags\n\tfs.Var(cliflag.NewMapStringString(&c.SystemReserved), \"system-reserved\", \"A set of ResourceName=ResourceQuantity (e.g. cpu=200m,memory=500Mi,ephemeral-storage=1Gi) pairs that describe resources reserved for non-kubernetes components. Currently only cpu and memory are supported. See http://kubernetes.io/docs/user-guide/compute-resources for more detail. [default=none]\")"
  },
  {
    "id" : "9708a30f-ce5f-413f-be16-444b5b08495c",
    "prId" : 91863,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/91863#pullrequestreview-434253075",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "322f14dd-1028-425d-98bb-e010688b55a5",
        "parentId" : null,
        "authorId" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "body" : "We should keep the flag name the same for backwards compatibility during the deprecation period.\r\nOne technique to manage this is to add a new flag called \"kernel-memcg-notification\", but still keep the old one and just mark the old one deprecated. BootstrapKubeconfig is one example of that (in this case both can point to the same field in the config, instead of flags struct, but the concept is the same).",
        "createdAt" : "2020-06-09T16:40:14Z",
        "updatedAt" : "2020-06-24T10:44:12Z",
        "lastEditedBy" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "tags" : [
        ]
      },
      {
        "id" : "872ca585-f566-479a-a7c6-ad3033961ec4",
        "parentId" : "322f14dd-1028-425d-98bb-e010688b55a5",
        "authorId" : "4ff6be29-02e8-4f7f-8b4d-a207c13aeecd",
        "body" : "@mtaufen PTAL\r\n\r\n```\r\n--experimental-kernel-memcg-notification                   Use kernelMemcgNotification configuration. (DEPRECATED: This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.)\r\n--kernel-memcg-notification                                If enabled, the kubelet will integrate with the kernel memcg notification to determine if memory eviction thresholds are crossed rather than polling. (DEPRECATED: This parameter should be set via the config file specified by the Kubelet's --config flag. See https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/ for more information.)\r\n```",
        "createdAt" : "2020-06-09T23:28:03Z",
        "updatedAt" : "2020-06-24T10:44:12Z",
        "lastEditedBy" : "4ff6be29-02e8-4f7f-8b4d-a207c13aeecd",
        "tags" : [
        ]
      },
      {
        "id" : "4c367813-ae3a-46fb-9ebd-a4892dfa464a",
        "parentId" : "322f14dd-1028-425d-98bb-e010688b55a5",
        "authorId" : "d3b9ec12-6001-425a-940b-b74c57282ba6",
        "body" : "curious, why the name change (why remove the \"experimental\" part)?",
        "createdAt" : "2020-06-19T17:37:11Z",
        "updatedAt" : "2020-06-24T10:44:12Z",
        "lastEditedBy" : "d3b9ec12-6001-425a-940b-b74c57282ba6",
        "tags" : [
        ]
      },
      {
        "id" : "9f6274af-5f4d-4b74-84ff-63a42f23f9b4",
        "parentId" : "322f14dd-1028-425d-98bb-e010688b55a5",
        "authorId" : "4ff6be29-02e8-4f7f-8b4d-a207c13aeecd",
        "body" : "Technically it \"graduated\", since it is not experimental anymore, we moved to the KubeletConfiguration file.\r\n\r\nKeeping the `--experimental-kernel-memcg-notification` one only for backward compatibility reasons, it must be removed in a few releases. Only `--kernel-memcg-notification` will be left at this point.",
        "createdAt" : "2020-06-19T17:55:02Z",
        "updatedAt" : "2020-06-24T10:44:12Z",
        "lastEditedBy" : "4ff6be29-02e8-4f7f-8b4d-a207c13aeecd",
        "tags" : [
        ]
      }
    ],
    "commit" : "c39cf28ed35200bd9b20ee1408edef73cd3ab7e6",
    "line" : 56,
    "diffHunk" : "@@ -1,1 +515,519 @@\n\tfs.Int32Var(&c.NodeStatusMaxImages, \"node-status-max-images\", c.NodeStatusMaxImages, \"The maximum number of images to report in Node.Status.Images. If -1 is specified, no cap will be applied.\")\n\tfs.BoolVar(&c.KernelMemcgNotification, \"kernel-memcg-notification\", c.KernelMemcgNotification, \"If enabled, the kubelet will integrate with the kernel memcg notification to determine if memory eviction thresholds are crossed rather than polling.\")\n\n\t// Flags intended for testing, not recommended used in production environments."
  },
  {
    "id" : "25a9a448-c517-4b43-9990-b70dde761762",
    "prId" : 91532,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/91532#pullrequestreview-439365606",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2ddd017a-b248-4e1b-b124-0423ed885d7f",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "will we be duplicating this message across all places we add --logging-format? can we do this in one place so we don't have to maintain the full list of valid formats, and the full list of flags that can't be used in combination with this in multiple places?",
        "createdAt" : "2020-06-29T17:00:52Z",
        "updatedAt" : "2020-07-01T17:59:43Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "86bc84a4-62f7-468a-ae9d-215639d54767",
        "parentId" : "2ddd017a-b248-4e1b-b124-0423ed885d7f",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "can we expose/use unsupportedLoggingFlags to avoid building this manually, or move the flag registration methdo to staging/src/k8s.io/component-base/logs so we can use that private method",
        "createdAt" : "2020-06-29T17:19:25Z",
        "updatedAt" : "2020-07-01T17:59:43Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "f8ad52c1-efba-4e8c-af97-84e8feb40fa7",
        "parentId" : "2ddd017a-b248-4e1b-b124-0423ed885d7f",
        "authorId" : "6ea93d56-a0ec-4969-ac42-11a78c2085e6",
        "body" : "This list of flags haven't changed for very long time. I don't think we are worried about this getting out of date. Also we should not be worried about a having duplicate too much. I don't think it makes sense to try to optimize current code for future.\r\n\r\nI would love to refactor all possible duplicates of this flag, but we are still implementing validation of unsupported flags. Even thou there is 5 contributors working on this issue (with 5 PRs), only one can work at the time. It would really help if we could agree on one set of requirements allowing us to merge all PRs at once. \r\n\r\nPRs touching flags:\r\n* https://github.com/kubernetes/kubernetes/pull/91501\r\n* https://github.com/kubernetes/kubernetes/pull/91521\r\n* https://github.com/kubernetes/kubernetes/pull/91532\r\n* https://github.com/kubernetes/kubernetes/pull/91522\r\n* https://github.com/kubernetes/kubernetes/pull/92394",
        "createdAt" : "2020-06-29T17:38:02Z",
        "updatedAt" : "2020-07-01T17:59:43Z",
        "lastEditedBy" : "6ea93d56-a0ec-4969-ac42-11a78c2085e6",
        "tags" : [
        ]
      },
      {
        "id" : "03395cf5-9ac4-447a-919b-bb8fda708596",
        "parentId" : "2ddd017a-b248-4e1b-b124-0423ed885d7f",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "it doesn't need to block this PR, but can you add an issue or item to the list of follow-ups to unify this so we don't end up with a half-dozen copies of the same code that drift from each other?",
        "createdAt" : "2020-06-29T17:42:59Z",
        "updatedAt" : "2020-07-01T17:59:43Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "b92b04e7cd754efbf223adf4a8496a497ad8a243",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +541,545 @@\tfs.StringVar(&c.SystemReservedCgroup, \"system-reserved-cgroup\", c.SystemReservedCgroup, \"Absolute name of the top level cgroup that is used to manage non-kubernetes components for which compute resources were reserved via '--system-reserved' flag. Ex. '/system-reserved'. [default='']\")\n\tfs.StringVar(&c.KubeReservedCgroup, \"kube-reserved-cgroup\", c.KubeReservedCgroup, \"Absolute name of the top level cgroup that is used to manage kubernetes components for which compute resources were reserved via '--kube-reserved' flag. Ex. '/kube-reserved'. [default='']\")\n\tfs.StringVar(&c.Logging.Format, \"logging-format\", c.Logging.Format, `Sets the log format. Permitted formats: \"text\", \"json\".\\nNon-default formats don't honor these flags: -add_dir_header, --alsologtostderr, --log_backtrace_at, --log_dir, --log_file, --log_file_max_size, --logtostderr, --skip_headers, --skip_log_headers, --stderrthreshold, --log-flush-frequency.\\nNon-default choices are currently alpha and subject to change without warning.`)\n\n\t// Graduated experimental flags, kept for backward compatibility"
  },
  {
    "id" : "a3122226-1f83-4f12-bc66-e982a765743a",
    "prId" : 89381,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/89381#pullrequestreview-379772790",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "052a385b-8d33-4d6d-8396-e56f511a9a18",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "also add to pkg/kubelet/cadvisor/cadvisor_linux.go, line 35-36 (replacing the link to the stale closed issue that's already there)?",
        "createdAt" : "2020-03-23T19:49:12Z",
        "updatedAt" : "2020-03-23T19:52:26Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "993e99f8-eb0b-4fb9-a2ce-ce514533d8db",
        "parentId" : "052a385b-8d33-4d6d-8396-e56f511a9a18",
        "authorId" : "d2b16581-e7e9-48b8-9f76-6f6bcb9ec300",
        "body" : "done",
        "createdAt" : "2020-03-23T19:52:36Z",
        "updatedAt" : "2020-03-23T19:52:36Z",
        "lastEditedBy" : "d2b16581-e7e9-48b8-9f76-6f6bcb9ec300",
        "tags" : [
        ]
      }
    ],
    "commit" : "b4ed7273daaf7000394d01993fa14654b665e323",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +417,421 @@\tfs.MarkDeprecated(\"keep-terminated-pod-volumes\", \"will be removed in a future version\")\n\tfs.BoolVar(&f.EnableCAdvisorJSONEndpoints, \"enable-cadvisor-json-endpoints\", f.EnableCAdvisorJSONEndpoints, \"Enable cAdvisor json /spec and /stats/* endpoints.\")\n\t// TODO: Remove this flag in 1.20+.  https://github.com/kubernetes/kubernetes/issues/68522\n\tfs.MarkDeprecated(\"enable-cadvisor-json-endpoints\", \"will be removed in a future version\")\n"
  },
  {
    "id" : "728a7983-7c04-43d6-adfa-cdfb2e47617b",
    "prId" : 89158,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/89158#pullrequestreview-377926215",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2dac69df-301b-4e09-9903-1cdfcccfed6c",
        "parentId" : null,
        "authorId" : "d7870cae-47b0-4c8e-8527-be8fc4be86de",
        "body" : "Mhmm I agree this flag could have a more descriptive name ... ideally `KubeApiserverQPS`. But I also agree that changing it is probably a whole ordeal.\r\n\r\nOne small nit - instead of indirectly stating that this flag only appplies to the apiserver by listing the apis it does not apply to, could we instead directly state this flag only applies to the apiserver?\r\n\r\nMy concern is this indirect method will be come confusing/false should we add more apis...",
        "createdAt" : "2020-03-17T14:00:50Z",
        "updatedAt" : "2020-03-17T14:00:59Z",
        "lastEditedBy" : "d7870cae-47b0-4c8e-8527-be8fc4be86de",
        "tags" : [
        ]
      },
      {
        "id" : "e7bb1377-2c5d-4404-8611-8ee3f652d218",
        "parentId" : "2dac69df-301b-4e09-9903-1cdfcccfed6c",
        "authorId" : "db7935b7-456b-4141-989f-c0c03e9104eb",
        "body" : "@mattjmcnaughton \r\n> could we instead directly state this flag only applies to the apiserver\r\n\r\nevents and node heartbeat updates are also going to API server. It's just `kube-api-qps` parameter throttles every request **but** events and node heartbeat. Calling out the exceptions just seemed easier than whitelisting all the possible objects.",
        "createdAt" : "2020-03-18T05:56:44Z",
        "updatedAt" : "2020-03-18T05:56:44Z",
        "lastEditedBy" : "db7935b7-456b-4141-989f-c0c03e9104eb",
        "tags" : [
        ]
      },
      {
        "id" : "4f9b658e-97ba-4d30-8b54-a9765d9ff2c1",
        "parentId" : "2dac69df-301b-4e09-9903-1cdfcccfed6c",
        "authorId" : "d7870cae-47b0-4c8e-8527-be8fc4be86de",
        "body" : "Ah gotcha - so if a new API server were to be added later, it would be throttled by this parameter? If yes, than I agree with you :)",
        "createdAt" : "2020-03-19T17:11:14Z",
        "updatedAt" : "2020-03-19T17:11:14Z",
        "lastEditedBy" : "d7870cae-47b0-4c8e-8527-be8fc4be86de",
        "tags" : [
        ]
      }
    ],
    "commit" : "2c6b149bf0b1852721bf865028e33f9f43805a8c",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +542,546 @@\n\tfs.StringVar(&c.ContentType, \"kube-api-content-type\", c.ContentType, \"Content type of requests sent to apiserver.\")\n\tfs.Int32Var(&c.KubeAPIQPS, \"kube-api-qps\", c.KubeAPIQPS, \"QPS to use while talking with kubernetes apiserver. Doesn't cover events and node heartbeat apis which rate limiting is controlled by a different set of flags\")\n\tfs.Int32Var(&c.KubeAPIBurst, \"kube-api-burst\", c.KubeAPIBurst, \"Burst to use while talking with kubernetes apiserver. Doesn't cover events and node heartbeat apis which rate limiting is controlled by a different set of flags\")\n\tfs.BoolVar(&c.SerializeImagePulls, \"serialize-image-pulls\", c.SerializeImagePulls, \"Pull images one at a time. We recommend *not* changing the default value on nodes that run docker daemon with version < 1.9 or an Aufs storage backend. Issue #10959 has more details.\")"
  },
  {
    "id" : "4303553a-c095-44c2-8335-7cf592cabe25",
    "prId" : 72076,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/72076#pullrequestreview-189962697",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "da8e9c2f-712f-480b-a158-5eee438f41ce",
        "parentId" : null,
        "authorId" : "d2b16581-e7e9-48b8-9f76-6f6bcb9ec300",
        "body" : "Do we need to update the description for the Configuration type as well? https://github.com/kubernetes/kubernetes/blob/master/pkg/kubelet/apis/config/types.go#L222.",
        "createdAt" : "2019-01-07T19:49:22Z",
        "updatedAt" : "2019-01-09T15:51:19Z",
        "lastEditedBy" : "d2b16581-e7e9-48b8-9f76-6f6bcb9ec300",
        "tags" : [
        ]
      }
    ],
    "commit" : "bce9d5f2043bd86964c9fec80d466e47776071bc",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +561,565 @@\n\tfs.StringVar(&c.PodCIDR, \"pod-cidr\", c.PodCIDR, \"The CIDR to use for pod IP addresses, only used in standalone mode.  In cluster mode, this is obtained from the master. For IPv6, the maximum number of IP's allocated is 65536\")\n\tfs.Int64Var(&c.PodPidsLimit, \"pod-max-pids\", c.PodPidsLimit, \"Set the maximum number of processes per pod.  If -1, the kubelet defaults to the node allocatable pid capacity.\")\n\n\tfs.StringVar(&c.ResolverConfig, \"resolv-conf\", c.ResolverConfig, \"Resolver configuration file used as the basis for the container DNS resolution configuration.\")"
  },
  {
    "id" : "9ffedd9d-52e9-40cc-a5a9-115361c5e157",
    "prId" : 68267,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/68267#pullrequestreview-174693433",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a535f4df-9792-469d-a7e2-11329d43c623",
        "parentId" : null,
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "%q prints lists of strings rather nicely.",
        "createdAt" : "2018-11-14T04:01:50Z",
        "updatedAt" : "2018-11-14T04:50:28Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      },
      {
        "id" : "0b9494dd-632e-4270-91fd-3a39b8232152",
        "parentId" : "a535f4df-9792-469d-a7e2-11329d43c623",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "```sh\r\nfmt.Printf(\"%q\", []string{\"a\", \"b\"})\r\n[\"a\" \"b\"]\r\n```\r\n\r\nI like my commas :)",
        "createdAt" : "2018-11-14T04:27:44Z",
        "updatedAt" : "2018-11-14T04:50:28Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "9fb2dcad5e2869b9342717d32e021a8374a82f4b",
    "line" : 61,
    "diffHunk" : "@@ -1,1 +416,420 @@\tfs.BoolVar(&f.ExperimentalNodeAllocatableIgnoreEvictionThreshold, \"experimental-allocatable-ignore-eviction\", f.ExperimentalNodeAllocatableIgnoreEvictionThreshold, \"When set to 'true', Hard Eviction Thresholds will be ignored while calculating Node Allocatable. See https://kubernetes.io/docs/tasks/administer-cluster/reserve-compute-resources/ for more details. [default=false]\")\n\tbindableNodeLabels := flag.ConfigurationMap(f.NodeLabels)\n\tfs.Var(&bindableNodeLabels, \"node-labels\", fmt.Sprintf(\"<Warning: Alpha feature> Labels to add when registering the node in the cluster.  Labels must be key=value pairs separated by ','. Labels in the 'kubernetes.io' namespace must begin with an allowed prefix (%s) or be in the specifically allowed set (%s)\", strings.Join(kubeletapis.KubeletLabelNamespaces(), \", \"), strings.Join(kubeletapis.KubeletLabels(), \", \")))\n\tfs.StringVar(&f.VolumePluginDir, \"volume-plugin-dir\", f.VolumePluginDir, \"The full path of the directory in which to search for additional third party volume plugins\")\n\tfs.StringVar(&f.LockFilePath, \"lock-file\", f.LockFilePath, \"<Warning: Alpha feature> The path to file for kubelet to use as a lock file.\")"
  },
  {
    "id" : "e9111484-1049-4459-9290-8e476813fd12",
    "prId" : 65480,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/65480#pullrequestreview-132197178",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3337965a-4db9-4764-8a8a-5c572630faa8",
        "parentId" : null,
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "Is this worth setting as deprecated? I guess we should just do all flags at once.",
        "createdAt" : "2018-06-26T20:06:52Z",
        "updatedAt" : "2018-06-26T20:07:38Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      },
      {
        "id" : "ce1b2862-0916-4952-8575-05b73eaafcdf",
        "parentId" : "3337965a-4db9-4764-8a8a-5c572630faa8",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "the `defer func()` at the top of the function auto-marks all the flags bound to config struct fields as deprecated with an explanation",
        "createdAt" : "2018-06-26T20:44:21Z",
        "updatedAt" : "2018-06-26T20:44:21Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "ce51c76b97f8c8f71f9bc08e57a4f98a84801cb2",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +490,494 @@\t\t\"are generated for the public address and saved to the directory passed to --cert-dir.\")\n\tfs.StringVar(&c.TLSPrivateKeyFile, \"tls-private-key-file\", c.TLSPrivateKeyFile, \"File containing x509 private key matching --tls-cert-file.\")\n\tfs.BoolVar(&c.ServerTLSBootstrap, \"rotate-server-certificates\", c.ServerTLSBootstrap, \"<Warning: alpha feature> Auto request and rotate the kubelet serving certificates by requesting new certificates from the kube-apiserver when the certificate expiration approaches. Requires the RotateKubeletServerCertificate feature gate to be enabled.\")\n\n\ttlsCipherPossibleValues := flag.TLSCipherPossibleValues()"
  },
  {
    "id" : "79c4679f-08ed-4426-a7f8-4328e7ebf9f1",
    "prId" : 64661,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/64661#pullrequestreview-125404322",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "89863d74-9622-4437-8a14-42af37bf48a7",
        "parentId" : null,
        "authorId" : "e45395cd-3c20-445c-b404-a2b9ffe5efab",
        "body" : "> If set, the cloud provider determines the **name** of the node \r\n\r\nThat's not true is it? The cloud provider will only set the address of type hostname; not change the nodes name. \r\n\r\nedit: Sorry, I'm explicitly talking about when cloud provider is external. ",
        "createdAt" : "2018-06-03T18:13:02Z",
        "updatedAt" : "2018-06-03T18:14:31Z",
        "lastEditedBy" : "e45395cd-3c20-445c-b404-a2b9ffe5efab",
        "tags" : [
        ]
      },
      {
        "id" : "3e66b79f-2dc9-4db9-b369-c2b792da64b5",
        "parentId" : "89863d74-9622-4437-8a14-42af37bf48a7",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "The cloud provider does determine the node name. Some use the detected or overridden hostname to do so, some don't. ",
        "createdAt" : "2018-06-03T18:33:01Z",
        "updatedAt" : "2018-06-03T18:33:02Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "cd012781-afda-43de-9cdc-a7cc015fdd22",
        "parentId" : "89863d74-9622-4437-8a14-42af37bf48a7",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "See https://github.com/kubernetes/website/pull/8873 for descriptions of how each cloud provider determines the node name. Can update that with the behavior of the kubelet for `--cloud-provider=external`",
        "createdAt" : "2018-06-03T18:35:19Z",
        "updatedAt" : "2018-06-03T19:04:25Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "32a73b3c881377271144904a4c994a3e28db86a3",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +367,371 @@\t\t\"If --tls-cert-file and --tls-private-key-file are provided, this flag will be ignored.\")\n\n\tfs.StringVar(&f.CloudProvider, \"cloud-provider\", f.CloudProvider, \"The provider for cloud services. Specify empty string for running with no cloud provider. If set, the cloud provider determines the name of the node (consult cloud provider documentation to determine if and how the hostname is used).\")\n\tfs.StringVar(&f.CloudConfigFile, \"cloud-config\", f.CloudConfigFile, \"The path to the cloud provider configuration file.  Empty string for no configuration file.\")\n"
  },
  {
    "id" : "60270994-593c-4915-9ddf-25ee845d814e",
    "prId" : 64170,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/64170#pullrequestreview-123218072",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "508e83bc-2f91-47b6-896e-88515fbd7496",
        "parentId" : null,
        "authorId" : "d2b16581-e7e9-48b8-9f76-6f6bcb9ec300",
        "body" : "If it is experimental, should we add the `Experimental` prefix to the flag?  Or is that only for boolean flags (i.e. the thing is on or off).?",
        "createdAt" : "2018-05-24T22:02:12Z",
        "updatedAt" : "2018-05-30T19:55:00Z",
        "lastEditedBy" : "d2b16581-e7e9-48b8-9f76-6f6bcb9ec300",
        "tags" : [
        ]
      },
      {
        "id" : "594777b6-0d2e-4837-acfe-5829d48f3b09",
        "parentId" : "508e83bc-2f91-47b6-896e-88515fbd7496",
        "authorId" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "body" : "I don't think it's necessary. We warn that it's alpha in the help text. In general, \"experimental\" isn't even a word that exists in the context of our deprecation policy (other than defining what \"Alpha\" means...), so we shouldn't use it in names, and we shouldn't force name changes when things graduate from alpha to beta in any case.",
        "createdAt" : "2018-05-25T00:59:09Z",
        "updatedAt" : "2018-05-30T19:55:00Z",
        "lastEditedBy" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "tags" : [
        ]
      }
    ],
    "commit" : "0539086ff3f4a93c2283b1328e4a8fe64bfe174d",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +172,176 @@\t// NodeStatusMaxImages caps the number of images reported in Node.Status.Images.\n\t// This is an experimental, short-term flag to help with node scalability.\n\tNodeStatusMaxImages int32\n\n\t// DEPRECATED FLAGS"
  },
  {
    "id" : "0f3fcc2e-8fcf-4a15-8ca8-86ad5740b60c",
    "prId" : 63437,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/63437#pullrequestreview-148133744",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dba0227d-bd7c-4bdd-a107-be704289028d",
        "parentId" : null,
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "`defaults to Linux Kernel default (100ms)` for clear?",
        "createdAt" : "2018-06-22T02:52:20Z",
        "updatedAt" : "2018-09-01T18:20:19Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      },
      {
        "id" : "64710cfa-4539-4e20-ab24-a232dae238ca",
        "parentId" : "dba0227d-bd7c-4bdd-a107-be704289028d",
        "authorId" : "08b133eb-435d-4b35-b865-ed400fece96e",
        "body" : "See the former comment from ligitt. Cobra will render the default automatically. ",
        "createdAt" : "2018-06-22T07:45:08Z",
        "updatedAt" : "2018-09-01T18:20:19Z",
        "lastEditedBy" : "08b133eb-435d-4b35-b865-ed400fece96e",
        "tags" : [
        ]
      },
      {
        "id" : "848cd636-305c-48dd-87ec-aaa8207d48e8",
        "parentId" : "dba0227d-bd7c-4bdd-a107-be704289028d",
        "authorId" : "3c1422a0-6358-4857-8f56-961979171514",
        "body" : "We should stop adding new flags to kubelet. Add directly to `KubeletConfiguration` instead?",
        "createdAt" : "2018-07-04T01:57:41Z",
        "updatedAt" : "2018-09-01T18:20:19Z",
        "lastEditedBy" : "3c1422a0-6358-4857-8f56-961979171514",
        "tags" : [
        ]
      },
      {
        "id" : "cca45b1b-88af-4f19-a39c-7e8c31bc80a6",
        "parentId" : "dba0227d-bd7c-4bdd-a107-be704289028d",
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "i would prefer to not have the flag and just use via `KubeletConfiguration`; we should note that dynamically changing the field value will not impact currently running pods (only new pods)",
        "createdAt" : "2018-08-21T16:02:26Z",
        "updatedAt" : "2018-09-01T18:20:19Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      }
    ],
    "commit" : "588d2808b77d11f235b6eba5c21bcaa89a2f7804",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +531,535 @@\tfs.StringVar(&c.ResolverConfig, \"resolv-conf\", c.ResolverConfig, \"Resolver configuration file used as the basis for the container DNS resolution configuration.\")\n\tfs.BoolVar(&c.CPUCFSQuota, \"cpu-cfs-quota\", c.CPUCFSQuota, \"Enable CPU CFS quota enforcement for containers that specify CPU limits\")\n\tfs.DurationVar(&c.CPUCFSQuotaPeriod.Duration, \"cpu-cfs-quota-period\", c.CPUCFSQuotaPeriod.Duration, \"Sets CPU CFS quota period value, cpu.cfs_period_us, defaults to Linux Kernel default\")\n\tfs.BoolVar(&c.EnableControllerAttachDetach, \"enable-controller-attach-detach\", c.EnableControllerAttachDetach, \"Enables the Attach/Detach controller to manage attachment/detachment of volumes scheduled to this node, and disables kubelet from executing any attach/detach operations\")\n\tfs.BoolVar(&c.MakeIPTablesUtilChains, \"make-iptables-util-chains\", c.MakeIPTablesUtilChains, \"If true, kubelet will ensure iptables utility rules are present on host.\")"
  },
  {
    "id" : "baebe263-abea-4807-a6ae-f9df9aa694f2",
    "prId" : 59898,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/59898#pullrequestreview-99512358",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d44dab46-e4d8-4f35-8786-3d3abfa9e4db",
        "parentId" : null,
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "Nit: should probably make it clear that `This flag can only be used with --container-runtime=remote`\r\nThe same applies to the flag below.",
        "createdAt" : "2018-02-26T23:47:19Z",
        "updatedAt" : "2018-02-26T23:47:19Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "faa581c5cb1065ba8cfbab8a6a9608f6f22f076c",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +528,532 @@\tfs.Int32Var(&c.IPTablesMasqueradeBit, \"iptables-masquerade-bit\", c.IPTablesMasqueradeBit, \"The bit of the fwmark space to mark packets for SNAT. Must be within the range [0, 31]. Please match this parameter with corresponding parameter in kube-proxy.\")\n\tfs.Int32Var(&c.IPTablesDropBit, \"iptables-drop-bit\", c.IPTablesDropBit, \"The bit of the fwmark space to mark packets for dropping. Must be within the range [0, 31].\")\n\tfs.StringVar(&c.ContainerLogMaxSize, \"container-log-max-size\", c.ContainerLogMaxSize, \"<Warning: Alpha feature> Set the maximum size (e.g. 10Mi) of container log file before it is rotated.\")\n\tfs.Int32Var(&c.ContainerLogMaxFiles, \"container-log-max-files\", c.ContainerLogMaxFiles, \"<Warning: Alpha feature> Set the maximum number of container log files that can be present for a container. The number must be >= 2.\")\n"
  },
  {
    "id" : "bae4218e-c020-461c-9b1b-bb6d99f33afb",
    "prId" : 59580,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/59580#pullrequestreview-95248616",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e818afed-bdb7-4d86-8c1a-253e360b7d4a",
        "parentId" : null,
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "Pros/cons regarding using a pointer or not here in the internal code?\r\nAre we using the int32 to be consistent with most other fields or would uint16 make sense for this field internally for now?",
        "createdAt" : "2018-02-08T19:40:51Z",
        "updatedAt" : "2018-02-08T21:52:32Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      },
      {
        "id" : "119820e4-b830-4e66-9a5b-3b89ce5f07ab",
        "parentId" : "e818afed-bdb7-4d86-8c1a-253e360b7d4a",
        "authorId" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "body" : "Not sure of the details of how Uint16Var flags get parsed. Do you get an error if you overflow it? I'd imagine they'd just use strconv.ParseUint under the hood, which should just give you a \"value out of range\" error? If so we could skip this in our validation.",
        "createdAt" : "2018-02-08T21:59:45Z",
        "updatedAt" : "2018-02-08T21:59:45Z",
        "lastEditedBy" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "tags" : [
        ]
      }
    ],
    "commit" : "5ab9ccd4fb613496b2acf136dc9b5aa87ff91457",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +118,122 @@\n\t// cAdvisorPort is the port of the localhost cAdvisor endpoint (set to 0 to disable)\n\tCAdvisorPort int32\n\n\t// EXPERIMENTAL FLAGS"
  },
  {
    "id" : "38a7692d-05ce-4fd9-b19b-6fb908e34fb2",
    "prId" : 54643,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/54643#pullrequestreview-73929764",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "69047a3a-0878-4f69-b8c1-76a334cccf20",
        "parentId" : null,
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "How about making this `StringArrayVar` so that we could use the flag multiple times, but setting only one header at a time? E.g., \r\n```\r\ncurl -H \"Accept: application/xml\" -H \"Content-Type: application/xml\" ...\r\n```",
        "createdAt" : "2017-11-01T16:36:08Z",
        "updatedAt" : "2017-11-01T16:36:08Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "39c0d0ff-01cc-4824-87e9-ed2561a1ae69",
        "parentId" : "69047a3a-0878-4f69-b8c1-76a334cccf20",
        "authorId" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "body" : "Hmm, I like that idea. I'll take a look at doing it.\r\n",
        "createdAt" : "2017-11-01T16:47:32Z",
        "updatedAt" : "2017-11-01T16:47:33Z",
        "lastEditedBy" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "tags" : [
        ]
      },
      {
        "id" : "35b0be51-37ec-4f0b-a472-8d8a49c33474",
        "parentId" : "69047a3a-0878-4f69-b8c1-76a334cccf20",
        "authorId" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "body" : "Offline chat with @yujuhong: using the flag multiple times is nice, but the downside is that you have to use []string instead of map[string][]string, which is less convenient from JSON/YAML perspective. We eventually plan to get rid of flags, so we'll stick with the map[string][]string solution.",
        "createdAt" : "2017-11-02T17:09:48Z",
        "updatedAt" : "2017-11-02T17:09:48Z",
        "lastEditedBy" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "tags" : [
        ]
      },
      {
        "id" : "ebde5936-99ed-4c98-8c82-11013bf3855c",
        "parentId" : "69047a3a-0878-4f69-b8c1-76a334cccf20",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "> using the flag multiple times is nice, but the downside is that you have to use []string instead of map[string][]string, which is less convenient from JSON/YAML perspective\r\n\r\nI don't think that's true, I think it just means your `Set` impl has to handle being called multiple times. It is still free to populate any data structure it wants to",
        "createdAt" : "2017-11-02T17:26:08Z",
        "updatedAt" : "2017-11-02T17:26:08Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "578f8310-5428-4cc0-83b2-78e55e7420c7",
        "parentId" : "69047a3a-0878-4f69-b8c1-76a334cccf20",
        "authorId" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "body" : "@liggitt That's a good counterpoint to my argument, we could just stick with `fs.Var` and do whatever we want. \r\n\r\nMaking Set iterative would also mean that flags append to defaults, rather than override them. In this specific case I suppose that would be ok, because we don't set any default headers. I can modify the Set implementation from this PR to stop it from clearing the previous values on each Set call. OTOH, we'll ultimately get rid of the flag, so maybe it doesn't matter that much. WDYT?",
        "createdAt" : "2017-11-02T20:26:07Z",
        "updatedAt" : "2017-11-02T20:26:07Z",
        "lastEditedBy" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "tags" : [
        ]
      },
      {
        "id" : "e2bd0b85-9406-40b4-b762-46dedf65c378",
        "parentId" : "69047a3a-0878-4f69-b8c1-76a334cccf20",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "> Making Set iterative would also mean that flags append to defaults, rather than override them\r\n\r\nOnly if you want it to (which we probably wouldn't). First call to Set would wipe existing value and toggle a flag that Set had been called.",
        "createdAt" : "2017-11-02T20:32:26Z",
        "updatedAt" : "2017-11-02T20:32:26Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "7cb21746c09cd7dd8e2beaaa03f17ba41563a318",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +338,342 @@\tfs.DurationVar(&c.HTTPCheckFrequency.Duration, \"http-check-frequency\", c.HTTPCheckFrequency.Duration, \"Duration between checking http for new data\")\n\tfs.StringVar(&c.ManifestURL, \"manifest-url\", c.ManifestURL, \"URL for accessing the container manifest\")\n\tfs.Var(flag.ColonSeparatedMultimapStringString(c.ManifestURLHeader), \"manifest-url-header\", \"Comma-separated list of HTTP headers to use when accessing the manifest URL. Multiple headers with the same name will be added in the same order provided. For example: `a:hello,b:again,c:world,b:beautiful`\")\n\tfs.BoolVar(&c.EnableServer, \"enable-server\", c.EnableServer, \"Enable the Kubelet's server\")\n\tfs.Var(componentconfig.IPVar{Val: &c.Address}, \"address\", \"The IP address for the Kubelet to serve on (set to 0.0.0.0 for all interfaces)\")"
  },
  {
    "id" : "2c7b1528-5f88-4840-b434-db03111a5d15",
    "prId" : 54602,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/54602#pullrequestreview-73801711",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "145b6fef-58d2-4e6a-93e8-8de47fdacd1a",
        "parentId" : null,
        "authorId" : "7dd504ec-7e63-45b3-98f8-6eb1c683e9c2",
        "body" : "The change looks fine to me and this already got `lgtm`. Let's ping @kubernetes/sig-node-pr-reviews for approval.",
        "createdAt" : "2017-11-02T14:14:50Z",
        "updatedAt" : "2017-11-02T14:15:22Z",
        "lastEditedBy" : "7dd504ec-7e63-45b3-98f8-6eb1c683e9c2",
        "tags" : [
        ]
      }
    ],
    "commit" : "612eaa8f144376d8cdcbb4309824d884f1190984",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +197,201 @@\t\treturn fmt.Errorf(\"the DynamicKubeletConfig feature gate must be enabled in order to use the --dynamic-config-dir flag\")\n\t}\n\t// ensure that nobody sets InitConfigDir if the KubeletConfigFile feature gate is turned off\n\tif f.InitConfigDir.Provided() && !utilfeature.DefaultFeatureGate.Enabled(features.KubeletConfigFile) {\n\t\treturn fmt.Errorf(\"the KubeletConfigFile feature gate must be enabled in order to use the --init-config-dir flag\")"
  },
  {
    "id" : "5fe94707-362b-448c-bae5-585fd25c8302",
    "prId" : 53573,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/53573#pullrequestreview-68019920",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cba84381-6c5b-4f6c-b679-04cdd5f997dc",
        "parentId" : null,
        "authorId" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "body" : "`s/Specify empty string for running with no cloud provider./Specify empty string for running with no cloud provider. (default)`",
        "createdAt" : "2017-10-09T15:21:53Z",
        "updatedAt" : "2017-10-09T15:22:03Z",
        "lastEditedBy" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "tags" : [
        ]
      }
    ],
    "commit" : "169a599a7688206d29653ec23186068c2e3a6d2f",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +222,226 @@\t\t\"If --tls-cert-file and --tls-private-key-file are provided, this flag will be ignored.\")\n\n\tfs.StringVar(&f.CloudProvider, \"cloud-provider\", f.CloudProvider, \"The provider for cloud services. Specify empty string for running with no cloud provider.\")\n\tfs.StringVar(&f.CloudConfigFile, \"cloud-config\", f.CloudConfigFile, \"The path to the cloud provider configuration file.  Empty string for no configuration file.\")\n"
  },
  {
    "id" : "a153c7b3-b6e7-4c4d-9558-89bfb4199fb5",
    "prId" : 53088,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/53088#pullrequestreview-68416508",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ba3c2467-0471-4c2d-a3bd-b70ab3e6c1b1",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "where does this magic port number come from?",
        "createdAt" : "2017-10-10T19:54:48Z",
        "updatedAt" : "2017-10-11T16:53:07Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "7c4b2618-6755-4d78-b346-de08a48e7b2d",
        "parentId" : "ba3c2467-0471-4c2d-a3bd-b70ab3e6c1b1",
        "authorId" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "body" : "From the defaulting code in pkg/kubelet/apis/kubeletconfig/v1alpha1/defaults.go.",
        "createdAt" : "2017-10-10T20:32:27Z",
        "updatedAt" : "2017-10-11T16:53:07Z",
        "lastEditedBy" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "tags" : [
        ]
      }
    ],
    "commit" : "8180536bedd8bee2e7d05922c9a135b2ef9afd54",
    "line" : 87,
    "diffHunk" : "@@ -1,1 +171,175 @@\t\tremoteRuntimeEndpoint = \"unix:///var/run/dockershim.sock\"\n\t} else if runtime.GOOS == \"windows\" {\n\t\tremoteRuntimeEndpoint = \"tcp://localhost:3735\"\n\t}\n"
  },
  {
    "id" : "1fea704f-156d-472e-af69-5b21f2385bce",
    "prId" : 53088,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/53088#pullrequestreview-68416526",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6bbc650f-768e-4d11-9d21-0954faf099c7",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "where does this magic path come from?",
        "createdAt" : "2017-10-10T19:55:15Z",
        "updatedAt" : "2017-10-11T16:53:07Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "6a0dc72c-95f1-44bf-8bf8-110ca8782aba",
        "parentId" : "6bbc650f-768e-4d11-9d21-0954faf099c7",
        "authorId" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "body" : "From the defaulting code in pkg/kubelet/apis/kubeletconfig/v1alpha1/defaults.go.",
        "createdAt" : "2017-10-10T20:32:31Z",
        "updatedAt" : "2017-10-11T16:53:07Z",
        "lastEditedBy" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "tags" : [
        ]
      }
    ],
    "commit" : "8180536bedd8bee2e7d05922c9a135b2ef9afd54",
    "line" : 85,
    "diffHunk" : "@@ -1,1 +169,173 @@\tremoteRuntimeEndpoint := \"\"\n\tif runtime.GOOS == \"linux\" {\n\t\tremoteRuntimeEndpoint = \"unix:///var/run/dockershim.sock\"\n\t} else if runtime.GOOS == \"windows\" {\n\t\tremoteRuntimeEndpoint = \"tcp://localhost:3735\""
  },
  {
    "id" : "1547ed85-17a0-4b44-a9f4-67f719a3f3d6",
    "prId" : 53025,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/53025#pullrequestreview-68343406",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d60baa45-f657-49b8-8c24-de5cef67ae79",
        "parentId" : null,
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "Does this actually work? If so then why do we do the stuff above (L312)?",
        "createdAt" : "2017-09-29T23:22:51Z",
        "updatedAt" : "2017-10-10T16:38:05Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      },
      {
        "id" : "35a921f9-6bec-4aed-a964-b38bcf678e88",
        "parentId" : "d60baa45-f657-49b8-8c24-de5cef67ae79",
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "Does this work because of the defaulting?",
        "createdAt" : "2017-09-29T23:23:38Z",
        "updatedAt" : "2017-10-10T16:38:05Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      },
      {
        "id" : "4b951051-063d-4175-b2dc-a18fa4312468",
        "parentId" : "d60baa45-f657-49b8-8c24-de5cef67ae79",
        "authorId" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "body" : "Yeah, it works, I can run the dynamic kubelet config tests with this patch, with the feature gate set via the command line. I pinged @smarterclayton about L312 a few days ago, he said it had been too long since he wrote it to really remember, but that it might have either been an early go convention before we switched to plfag/cobra or that we may have been initializing it lazily at one point, then refactored it out (but probably the former).\r\n\r\n",
        "createdAt" : "2017-09-29T23:43:49Z",
        "updatedAt" : "2017-10-10T16:38:05Z",
        "lastEditedBy" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "tags" : [
        ]
      },
      {
        "id" : "6c156b86-b54f-4a25-a3f2-fe02b000a117",
        "parentId" : "d60baa45-f657-49b8-8c24-de5cef67ae79",
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "I'm fairly certain if you removed the defaulting, you would get a nil pointer dereference and that's why that is there. But sounds good.",
        "createdAt" : "2017-09-30T15:32:20Z",
        "updatedAt" : "2017-10-10T16:38:05Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      },
      {
        "id" : "441c75ad-4b0b-4169-927a-e6b1e142b747",
        "parentId" : "d60baa45-f657-49b8-8c24-de5cef67ae79",
        "authorId" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "body" : "Interesting point. I think that might be true. But shouldn't be an issue, since we'll always default before applying the flags.",
        "createdAt" : "2017-10-10T16:24:08Z",
        "updatedAt" : "2017-10-10T16:38:05Z",
        "lastEditedBy" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "tags" : [
        ]
      }
    ],
    "commit" : "131b419596a3d4fce1020c3b11f78034b5880593",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +313,317 @@\tfs.DurationVar(&c.VolumeStatsAggPeriod.Duration, \"volume-stats-agg-period\", c.VolumeStatsAggPeriod.Duration, \"Specifies interval for kubelet to calculate and cache the volume disk usage for all pods and volumes.  To disable volume calculations, set to 0.\")\n\tfs.StringVar(&c.VolumePluginDir, \"volume-plugin-dir\", c.VolumePluginDir, \"<Warning: Alpha feature> The full path of the directory in which to search for additional third party volume plugins\")\n\tfs.Var(flag.MapStringBool(c.FeatureGates), \"feature-gates\", \"A set of key=value pairs that describe feature gates for alpha/experimental features. \"+\n\t\t\"Options are:\\n\"+strings.Join(utilfeature.DefaultFeatureGate.KnownFeatures(), \"\\n\"))\n\tfs.StringVar(&c.KubeletCgroups, \"kubelet-cgroups\", c.KubeletCgroups, \"Optional absolute name of cgroups to create and run the Kubelet in.\")"
  },
  {
    "id" : "9d5287e6-74d0-4d6d-98ac-62f79ad9a03d",
    "prId" : 51312,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/51312#pullrequestreview-58779328",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8b2f9d6c-81de-4c7b-bdb4-31e5f2a865b7",
        "parentId" : null,
        "authorId" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "body" : "Please add a `MarkDeprecated` e.g. `fs.MarkDeprecated(\"cloud-provider\", \"Specify empty string for running with no cloud provider, this will be the default in upcoming releases.\")`\r\n\r\nAnd maybe make the `StringVar` doc string start with \"Deprecated\", so it's super-obvious.",
        "createdAt" : "2017-08-25T03:49:29Z",
        "updatedAt" : "2017-08-25T23:31:10Z",
        "lastEditedBy" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "tags" : [
        ]
      },
      {
        "id" : "cb5f46b8-90a3-4ee3-8a10-9ac0fb6ac90f",
        "parentId" : "8b2f9d6c-81de-4c7b-bdb4-31e5f2a865b7",
        "authorId" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "body" : "@mtaufen Don't want users thinking we're deprecating the cloud-provider flag if we start the flag descrption with \"DEPRECATED\". Do you forsee that as a problem? ",
        "createdAt" : "2017-08-25T19:42:41Z",
        "updatedAt" : "2017-08-25T23:31:10Z",
        "lastEditedBy" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "tags" : [
        ]
      },
      {
        "id" : "60f69fc7-c2fe-4581-a4a6-baab9085dc46",
        "parentId" : "8b2f9d6c-81de-4c7b-bdb4-31e5f2a865b7",
        "authorId" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "body" : "Oh duh. I see your point, you aren't deprecating the entire flag. \r\nCan we at least print a deprecation warning when people use the auto-detection feature?",
        "createdAt" : "2017-08-25T20:30:23Z",
        "updatedAt" : "2017-08-25T23:31:10Z",
        "lastEditedBy" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "tags" : [
        ]
      },
      {
        "id" : "742a5c2c-68d9-4904-afbd-a29c71257136",
        "parentId" : "8b2f9d6c-81de-4c7b-bdb4-31e5f2a865b7",
        "authorId" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "body" : "Yup, I'll add that",
        "createdAt" : "2017-08-25T22:47:03Z",
        "updatedAt" : "2017-08-25T23:31:10Z",
        "lastEditedBy" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "tags" : [
        ]
      }
    ],
    "commit" : "fd860227147a2d3cd64ccd37b0d75900e6fc2e0e",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +225,229 @@\t\t\"If --tls-cert-file and --tls-private-key-file are provided, this flag will be ignored.\")\n\n\tfs.StringVar(&f.CloudProvider, \"cloud-provider\", f.CloudProvider, \"The provider for cloud services. By default, kubelet will attempt to auto-detect the cloud provider (deprecated). Specify empty string for running with no cloud provider, this will be the default in upcoming releases.\")\n\tfs.StringVar(&f.CloudConfigFile, \"cloud-config\", f.CloudConfigFile, \"The path to the cloud provider configuration file.  Empty string for no configuration file.\")\n"
  },
  {
    "id" : "fbd092f5-5a2e-4ee5-b89e-b6f13e663035",
    "prId" : 51307,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/51307#pullrequestreview-60278296",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7fa5a522-1c9c-4855-a4f2-a10d2b3e2275",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "the changes here did not take effect in kubemark, which is currently setting up KubeletFlags itself as `f := &options.KubeletFlags{}`... either kubemark should call NewKubeletFlags() or this PR has to adjust usage in kubemark as well",
        "createdAt" : "2017-09-02T16:00:20Z",
        "updatedAt" : "2017-09-02T16:00:20Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "c18626de4af37254d4a9c76bd9afae2425125a9a",
    "line" : 80,
    "diffHunk" : "@@ -1,1 +167,171 @@\n// NewKubeletFlags will create a new KubeletFlags with default values\nfunc NewKubeletFlags() *KubeletFlags {\n\tremoteRuntimeEndpoint := \"\"\n\tif runtime.GOOS == \"linux\" {"
  },
  {
    "id" : "7999c010-1c65-44f3-8714-5507c6baf898",
    "prId" : 51180,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/51180#pullrequestreview-60256042",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "58364827-f427-4f74-a910-27c58970103d",
        "parentId" : null,
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "Why should this be configurable?",
        "createdAt" : "2017-09-01T22:34:04Z",
        "updatedAt" : "2017-09-04T14:25:19Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      },
      {
        "id" : "74a988ad-3e33-4c9f-8746-7c5a5988efef",
        "parentId" : "58364827-f427-4f74-a910-27c58970103d",
        "authorId" : "8b309230-89cb-4a04-bf89-29a323dad0d8",
        "body" : "@derekwaynecarr asked for this tunable so that we can evaluate the perf effect of cgroupfs scribbling frequency",
        "createdAt" : "2017-09-01T22:35:26Z",
        "updatedAt" : "2017-09-04T14:25:19Z",
        "lastEditedBy" : "8b309230-89cb-4a04-bf89-29a323dad0d8",
        "tags" : [
        ]
      },
      {
        "id" : "0ff14666-13d8-47bd-bd2b-c04bfec6842b",
        "parentId" : "58364827-f427-4f74-a910-27c58970103d",
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "@vishh -- i wanted a way to measure its impact.  if we want to remove the flag before release, we can evaluate that.",
        "createdAt" : "2017-09-01T22:45:29Z",
        "updatedAt" : "2017-09-04T14:25:19Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      },
      {
        "id" : "8209a2c1-53a9-4e36-933d-8dd399a7e739",
        "parentId" : "58364827-f427-4f74-a910-27c58970103d",
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "@vishh -- earlier iterations of the PR had it reconciling every 1s, which i worried was going to be expensive.  ",
        "createdAt" : "2017-09-01T22:47:17Z",
        "updatedAt" : "2017-09-04T14:25:19Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      }
    ],
    "commit" : "5b5958ecec612b8e9b4c9b551493bf2bb294d419",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +329,333 @@\tfs.StringVar(&c.CgroupRoot, \"cgroup-root\", c.CgroupRoot, \"Optional root cgroup to use for pods. This is handled by the container runtime on a best effort basis. Default: '', which means use the container runtime default.\")\n\tfs.StringVar(&c.CPUManagerPolicy, \"cpu-manager-policy\", c.CPUManagerPolicy, \"<Warning: Alpha feature> CPU Manager policy to use. Possible values: 'none', 'static'. Default: 'none'\")\n\tfs.DurationVar(&c.CPUManagerReconcilePeriod.Duration, \"cpu-manager-reconcile-period\", c.CPUManagerReconcilePeriod.Duration, \"<Warning: Alpha feature> CPU Manager reconciliation period. Examples: '10s', or '1m'. If not supplied, defaults to `NodeStatusUpdateFrequency`\")\n\tfs.StringVar(&c.ContainerRuntime, \"container-runtime\", c.ContainerRuntime, \"The container runtime to use. Possible values: 'docker', 'rkt'.\")\n\tfs.DurationVar(&c.RuntimeRequestTimeout.Duration, \"runtime-request-timeout\", c.RuntimeRequestTimeout.Duration, \"Timeout of all runtime requests except long running request - pull, logs, exec and attach. When timeout exceeded, kubelet will cancel the request, throw out an error and retry later.\")"
  },
  {
    "id" : "825968da-9016-4299-b799-4dc9180ec041",
    "prId" : 48859,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/48859#pullrequestreview-92035403",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e5d34807-aa6c-4c4e-9aee-70bbd0dce829",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "List the values in this help message?",
        "createdAt" : "2018-01-18T17:20:58Z",
        "updatedAt" : "2018-01-18T17:20:58Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "46099c60-8b6e-4cc9-a79e-38684a71d88e",
        "parentId" : "e5d34807-aa6c-4c4e-9aee-70bbd0dce829",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "yeah, that's a good idea",
        "createdAt" : "2018-01-18T17:25:51Z",
        "updatedAt" : "2018-01-18T17:25:51Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "9e3cc05b-4bc3-479f-8189-44fe3f838981",
        "parentId" : "e5d34807-aa6c-4c4e-9aee-70bbd0dce829",
        "authorId" : "2bda90ba-1b71-4200-8930-647b29609c37",
        "body" : "@lavalamp @liggitt i've made this PR to address this issue: https://github.com/kubernetes/kubernetes/pull/58920",
        "createdAt" : "2018-01-27T20:24:52Z",
        "updatedAt" : "2018-01-27T20:24:52Z",
        "lastEditedBy" : "2bda90ba-1b71-4200-8930-647b29609c37",
        "tags" : [
        ]
      },
      {
        "id" : "3d74ab9f-6712-4723-89e9-bfd1afc2a78f",
        "parentId" : "e5d34807-aa6c-4c4e-9aee-70bbd0dce829",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "Thanks for following up",
        "createdAt" : "2018-01-27T20:46:02Z",
        "updatedAt" : "2018-01-27T20:46:02Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "d7dbc96c70d480f0b81cd83ae3abd34b69c1e70d",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +445,449 @@\tfs.StringSliceVar(&c.TLSCipherSuites, \"tls-cipher-suites\", c.TLSCipherSuites,\n\t\t\"Comma-separated list of cipher suites for the server. \"+\n\t\t\t\"Values are from tls package constants (https://golang.org/pkg/crypto/tls/#pkg-constants). \"+\n\t\t\t\"If omitted, the default Go cipher suites will be used\")\n"
  },
  {
    "id" : "07eb688b-2b15-4f6e-9116-0860bf78f8ad",
    "prId" : 47720,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/47720#pullrequestreview-45294895",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1d437953-0d95-4773-8172-276e914fcd01",
        "parentId" : null,
        "authorId" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "body" : "Thanks! Please keep the `utilflag` one instead, for consistency with the other pkgs that come from util subdirs. Otherwise lgtm.",
        "createdAt" : "2017-06-19T13:15:01Z",
        "updatedAt" : "2017-08-23T13:55:45Z",
        "lastEditedBy" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "tags" : [
        ]
      },
      {
        "id" : "5c91ba79-c9db-490f-b0db-3a7fa17d96b3",
        "parentId" : "1d437953-0d95-4773-8172-276e914fcd01",
        "authorId" : "3597207f-5523-4681-8f93-90724c483130",
        "body" : "Thanks for pointing out this, I also have thought about this before submit this PR. But after go through other pkgs, I find that this style is necessary only when there are package conflicts. I think it is briefer to directly import without alias when on package conflicts.",
        "createdAt" : "2017-06-20T05:28:22Z",
        "updatedAt" : "2017-08-23T13:55:45Z",
        "lastEditedBy" : "3597207f-5523-4681-8f93-90724c483130",
        "tags" : [
        ]
      },
      {
        "id" : "19032250-38af-4efb-9324-a9772c76bbdb",
        "parentId" : "1d437953-0d95-4773-8172-276e914fcd01",
        "authorId" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "body" : "Personal opinion I guess. I'm not going to block this PR on a nit though :)",
        "createdAt" : "2017-06-20T16:13:21Z",
        "updatedAt" : "2017-08-23T13:55:45Z",
        "lastEditedBy" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "tags" : [
        ]
      },
      {
        "id" : "e992c6a4-43ae-4b6d-b470-0ddf9c265279",
        "parentId" : "1d437953-0d95-4773-8172-276e914fcd01",
        "authorId" : "3597207f-5523-4681-8f93-90724c483130",
        "body" : "Thanks  :)",
        "createdAt" : "2017-06-20T23:27:07Z",
        "updatedAt" : "2017-08-23T13:55:45Z",
        "lastEditedBy" : "3597207f-5523-4681-8f93-90724c483130",
        "tags" : [
        ]
      }
    ],
    "commit" : "a4770d79b8b8c7d8ff92c2659a911adc9d78003a",
    "line" : 3,
    "diffHunk" : "@@ -1,1 +24,28 @@\n\tutilfeature \"k8s.io/apiserver/pkg/util/feature\"\n\t\"k8s.io/apiserver/pkg/util/flag\"\n\t\"k8s.io/kubernetes/pkg/apis/componentconfig\"\n\t\"k8s.io/kubernetes/pkg/features\""
  },
  {
    "id" : "b6e6dd20-2605-46a4-837a-f502adaf318c",
    "prId" : 46089,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/46089#pullrequestreview-97985828",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a0773eb5-01b9-44f6-a8a6-f5df27545a75",
        "parentId" : null,
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "You changed the format of the endpoint to include the protocol. I don't want to break existing users. Could you make sure that endpoints without protocols can still be accepted by assuming the default protocol for each OS? ",
        "createdAt" : "2017-05-22T16:32:39Z",
        "updatedAt" : "2017-05-25T02:21:26Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "9b461dcd-9581-47c1-8e0d-a7ee3859ae65",
        "parentId" : "a0773eb5-01b9-44f6-a8a6-f5df27545a75",
        "authorId" : "2e700334-1db1-41da-bb64-1b6195185431",
        "body" : "It's also a bit strange that the new schemes are not [registered with the IANA][1].  They seem to be [Go-isms][2].  Is it worth mentioning (here or in some other docs?) that `unix` is a `SOCK_STREAM` (vs. `unixgram`'s `SOCK_DGRAM` and `unixpacket`'s `SOCK_SEQPACKET`)?\r\n\r\n[1]: https://www.iana.org/assignments/uri-schemes/uri-schemes.xhtml\r\n[2]: https://golang.org/pkg/net/#Dial",
        "createdAt" : "2018-02-20T20:58:08Z",
        "updatedAt" : "2018-02-20T20:58:08Z",
        "lastEditedBy" : "2e700334-1db1-41da-bb64-1b6195185431",
        "tags" : [
        ]
      }
    ],
    "commit" : "fb26c9100a78fdb1f2733cbfca727519a7d5ac8f",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +303,307 @@\tfs.BoolVar(&c.ExperimentalDockershim, \"experimental-dockershim\", c.ExperimentalDockershim, \"Enable dockershim only mode. In this mode, kubelet will only start dockershim without any other functionalities. This flag only serves test purpose, please do not use it unless you are conscious of what you are doing. [default=false]\")\n\tfs.MarkHidden(\"experimental-dockershim\")\n\tfs.StringVar(&c.RemoteRuntimeEndpoint, \"container-runtime-endpoint\", c.RemoteRuntimeEndpoint, \"[Experimental] The endpoint of remote runtime service. Currently unix socket is supported on Linux, and tcp is supported on windows.  Examples:'unix:///var/run/dockershim.sock', 'tcp://localhost:3735'\")\n\tfs.StringVar(&c.RemoteImageEndpoint, \"image-service-endpoint\", c.RemoteImageEndpoint, \"[Experimental] The endpoint of remote image service. If not specified, it will be the same with container-runtime-endpoint by default. Currently unix socket is supported on Linux, and tcp is supported on windows.  Examples:'unix:///var/run/dockershim.sock', 'tcp://localhost:3735'\")\n\tfs.BoolVar(&c.DockerDisableSharedPID, \"docker-disable-shared-pid\", c.DockerDisableSharedPID, \"The Container Runtime Interface (CRI) defaults to using a shared PID namespace for containers in a pod when running with Docker 1.13.1 or higher. Setting this flag reverts to the previous behavior of isolated PID namespaces. This ability will be removed in a future Kubernetes release.\")"
  },
  {
    "id" : "aaadc0ac-0564-474d-b7f9-cc0220a14c00",
    "prId" : 40171,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/40171#pullrequestreview-17735196",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1c45c9e4-3a64-4d4f-8cf4-c04ba3140d88",
        "parentId" : null,
        "authorId" : "7dd504ec-7e63-45b3-98f8-6eb1c683e9c2",
        "body" : "Do we need to add TODO or comment to clarify when this flag should be removed?",
        "createdAt" : "2017-01-20T02:43:53Z",
        "updatedAt" : "2017-01-20T18:30:12Z",
        "lastEditedBy" : "7dd504ec-7e63-45b3-98f8-6eb1c683e9c2",
        "tags" : [
        ]
      },
      {
        "id" : "4b3560ea-4846-4e3e-b765-ef923b0d818b",
        "parentId" : "1c45c9e4-3a64-4d4f-8cf4-c04ba3140d88",
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "Added a TODO",
        "createdAt" : "2017-01-20T18:30:27Z",
        "updatedAt" : "2017-01-20T18:30:27Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "d4364e76dab62fdf276e8c26cfd03833ceeb02a9",
    "line" : null,
    "diffHunk" : "@@ -1,1 +216,220 @@\t// TODO(#40229): Remove the docker-exec-handler flag.\n\tfs.StringVar(&s.DockerExecHandlerName, \"docker-exec-handler\", s.DockerExecHandlerName, \"Handler to use when executing a command in a container. Valid values are 'native' and 'nsenter'. Defaults to 'native'.\")\n\tfs.MarkDeprecated(\"docker-exec-handler\", \"this flag will be removed and only the 'native' handler will be supported in the future.\")\n\tfs.StringVar(&s.NonMasqueradeCIDR, \"non-masquerade-cidr\", s.NonMasqueradeCIDR, \"Traffic to IPs outside this range will use IP masquerade.\")\n\tfs.StringVar(&s.PodCIDR, \"pod-cidr\", \"\", \"The CIDR to use for pod IP addresses, only used in standalone mode.  In cluster mode, this is obtained from the master.\")"
  },
  {
    "id" : "f56e61ed-271b-4e30-bab6-79f5486732eb",
    "prId" : 40117,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/40117#pullrequestreview-30370498",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a4264467-9242-4bab-876e-37951caa7067",
        "parentId" : null,
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "I think the `KubeletFlag` type can have its own `AddFlags()` method, which `KubeletServer` can call. Thoughts?",
        "createdAt" : "2017-03-30T17:01:57Z",
        "updatedAt" : "2017-04-03T20:29:01Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "a44540cd-7093-44c1-8af6-cda04a77c080",
        "parentId" : "a4264467-9242-4bab-876e-37951caa7067",
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "This can be reused for #43253",
        "createdAt" : "2017-03-30T17:17:40Z",
        "updatedAt" : "2017-04-03T20:29:01Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "bb257473-5509-4198-aa9d-30d0ed469740",
        "parentId" : "a4264467-9242-4bab-876e-37951caa7067",
        "authorId" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "body" : "Yeah separate AddFlags seems reasonable.",
        "createdAt" : "2017-04-01T01:18:52Z",
        "updatedAt" : "2017-04-03T20:29:01Z",
        "lastEditedBy" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "tags" : [
        ]
      }
    ],
    "commit" : "f5eed7e91d38516d83d77fbfa490ce49f9e2e1e8",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +74,78 @@\t// If set, kubelet will use this IP address for the node.\n\tNodeIP string\n}\n\n// KubeletServer encapsulates all of the parameters necessary for starting up"
  },
  {
    "id" : "fe55712c-0783-420a-895d-03ab3eca3119",
    "prId" : 38258,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/38258#pullrequestreview-11994799",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8bb5535b-3810-4607-8ae8-600785c65787",
        "parentId" : null,
        "authorId" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "body" : "I  wonder if this would be better guarded by a feature gate than a flag; with a feature gate we don't have a new flag that needs to be removed later. Just a thought.",
        "createdAt" : "2016-12-07T04:22:34Z",
        "updatedAt" : "2016-12-07T15:10:12Z",
        "lastEditedBy" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "tags" : [
        ]
      },
      {
        "id" : "38de5bba-160d-43ae-a635-c613c60dc610",
        "parentId" : "8bb5535b-3810-4607-8ae8-600785c65787",
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "i think its fair to assume that not all kernels are equal and there could be some distros that require it to be off so a flag not tied to feature gate seems right in the long run?",
        "createdAt" : "2016-12-07T04:26:53Z",
        "updatedAt" : "2016-12-07T15:10:12Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      },
      {
        "id" : "36c77853-2a6a-41e9-a830-b9b14b9cfdea",
        "parentId" : "8bb5535b-3810-4607-8ae8-600785c65787",
        "authorId" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "body" : "Yeah true. This is the kind of switch that might need to be in for the long haul, due to the kernel issue. A flag is probably the appropriate solution.",
        "createdAt" : "2016-12-07T04:34:41Z",
        "updatedAt" : "2016-12-07T15:10:12Z",
        "lastEditedBy" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "tags" : [
        ]
      },
      {
        "id" : "ad2950f6-1790-4288-a416-00cb268f9a43",
        "parentId" : "8bb5535b-3810-4607-8ae8-600785c65787",
        "authorId" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "body" : "Should we put a note in this flag that it may cause soft lockups due to an unidentified kernel issue? I've heard some worries that we don't want people trying to \"make Kubernetes faster\" by turning this on without realizing it could cause other problems.",
        "createdAt" : "2016-12-07T15:07:14Z",
        "updatedAt" : "2016-12-07T15:10:12Z",
        "lastEditedBy" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "tags" : [
        ]
      },
      {
        "id" : "3f19464c-7e80-4033-8f6e-6acd16de3dc2",
        "parentId" : "8bb5535b-3810-4607-8ae8-600785c65787",
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "we haven't proven that it causes soft lockups have we?",
        "createdAt" : "2016-12-07T15:15:34Z",
        "updatedAt" : "2016-12-07T15:15:34Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      },
      {
        "id" : "43c695c9-c793-421d-b938-c0a07ac999b8",
        "parentId" : "8bb5535b-3810-4607-8ae8-600785c65787",
        "authorId" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "body" : "We did, in some sense. Soft lockups are kernel problem, so proper fix is beyond our reach, but we did prove that this triggers soft lockup on debian in CVM. @dchen1107 ",
        "createdAt" : "2016-12-08T10:32:43Z",
        "updatedAt" : "2016-12-08T10:32:43Z",
        "lastEditedBy" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "tags" : [
        ]
      }
    ],
    "commit" : "bcca0395cff73fe7aac48aaedcf896af01963912",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +250,254 @@\tfs.Int32Var(&s.EvictionMaxPodGracePeriod, \"eviction-max-pod-grace-period\", s.EvictionMaxPodGracePeriod, \"Maximum allowed grace period (in seconds) to use when terminating pods in response to a soft eviction threshold being met.  If negative, defer to pod specified value.\")\n\tfs.StringVar(&s.EvictionMinimumReclaim, \"eviction-minimum-reclaim\", s.EvictionMinimumReclaim, \"A set of minimum reclaims (e.g. imagefs.available=2Gi) that describes the minimum amount of resource the kubelet will reclaim when performing a pod eviction if that resource is under pressure.\")\n\tfs.BoolVar(&s.ExperimentalKernelMemcgNotification, \"experimental-kernel-memcg-notification\", s.ExperimentalKernelMemcgNotification, \"If enabled, the kubelet will integrate with the kernel memcg notification to determine if memory eviction thresholds are crossed rather than polling.\")\n\tfs.Int32Var(&s.PodsPerCore, \"pods-per-core\", s.PodsPerCore, \"Number of Pods per core that can run on this Kubelet. The total number of Pods on this Kubelet cannot exceed max-pods, so max-pods will be used if this calculation results in a larger number of Pods allowed on the Kubelet. A value of 0 disables this limit.\")\n\tfs.BoolVar(&s.ProtectKernelDefaults, \"protect-kernel-defaults\", s.ProtectKernelDefaults, \"Default kubelet behaviour for kernel tuning. If set, kubelet errors if any of kernel tunables is different than kubelet defaults.\")"
  },
  {
    "id" : "7fe33546-b5f8-493d-bfc3-46752bd95346",
    "prId" : 34906,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/34906#pullrequestreview-4811961",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a255bb50-ea1f-4319-9858-2f8679af0ec5",
        "parentId" : null,
        "authorId" : "c490e441-2b9f-41f2-8559-d47be0ea8836",
        "body" : "Since this was previously a no-op if configure-cbr0 was false, and configure-cbr0 is now always false, this is now always a no-op. (Actually... it looks like it may have been a no-op already; `reconcileCBR0` in kubelet_network.go always got called if configure-cbr0 was true, regardless of the value of reconcile-cidr.)\n",
        "createdAt" : "2016-10-17T14:53:30Z",
        "updatedAt" : "2016-10-17T14:53:31Z",
        "lastEditedBy" : "c490e441-2b9f-41f2-8559-d47be0ea8836",
        "tags" : [
        ]
      },
      {
        "id" : "8e7d8b0e-e9cd-4410-840f-f830ee276421",
        "parentId" : "a255bb50-ea1f-4319-9858-2f8679af0ec5",
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "Actually my initial draft of this was removing `reconcile-cidr` as well, but I think we should take it separately.\n\nIf we agree to remove that as well, I'm fine, but please in another PR to make it easier for reviewing.\n\nAnother concern is that we didn't mark `reconcile-cidr` as deprecated...\n",
        "createdAt" : "2016-10-17T14:59:37Z",
        "updatedAt" : "2016-10-17T14:59:37Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      },
      {
        "id" : "d9d0f14d-c691-4de4-a620-c2528e2651be",
        "parentId" : "a255bb50-ea1f-4319-9858-2f8679af0ec5",
        "authorId" : "c490e441-2b9f-41f2-8559-d47be0ea8836",
        "body" : "well, if you don't remove it, the doc string that's there now is wrong; it implies that reconcile-cidr still does something if register-node is true, but it doesn't.\n",
        "createdAt" : "2016-10-17T15:05:37Z",
        "updatedAt" : "2016-10-17T15:05:37Z",
        "lastEditedBy" : "c490e441-2b9f-41f2-8559-d47be0ea8836",
        "tags" : [
        ]
      },
      {
        "id" : "793f49f3-07f7-4e9b-b25a-e45beb25b546",
        "parentId" : "a255bb50-ea1f-4319-9858-2f8679af0ec5",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "ping @luxas on this \n",
        "createdAt" : "2016-10-19T07:00:15Z",
        "updatedAt" : "2016-10-19T07:00:15Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "565c5e62686b8589721f7a1834350bc9ae469e71",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +199,203 @@\tfs.BoolVar(&s.Containerized, \"containerized\", s.Containerized, \"Experimental support for running kubelet in a container.  Intended for testing. [default=false]\")\n\tfs.Int64Var(&s.MaxOpenFiles, \"max-open-files\", s.MaxOpenFiles, \"Number of files that can be opened by Kubelet process. [default=1000000]\")\n\tfs.BoolVar(&s.ReconcileCIDR, \"reconcile-cidr\", s.ReconcileCIDR, \"Reconcile node CIDR with the CIDR specified by the API server. Won't have any effect if register-node is false. [default=true]\")\n\tfs.Var(&s.SystemReserved, \"system-reserved\", \"A set of ResourceName=ResourceQuantity (e.g. cpu=200m,memory=150G) pairs that describe resources reserved for non-kubernetes components. Currently only cpu and memory are supported. See http://kubernetes.io/docs/user-guide/compute-resources for more detail. [default=none]\")\n\tfs.Var(&s.KubeReserved, \"kube-reserved\", \"A set of ResourceName=ResourceQuantity (e.g. cpu=200m,memory=150G) pairs that describe resources reserved for kubernetes system components. Currently only cpu and memory are supported. See http://kubernetes.io/docs/user-guide/compute-resources for more detail. [default=none]\")"
  },
  {
    "id" : "239c469d-aaf7-45d4-9575-80acc1e1f4a9",
    "prId" : 34381,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/34381#pullrequestreview-4150781",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c8ff8b21-31e9-41dd-863a-5fe29663f23f",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "This defaults on?\n",
        "createdAt" : "2016-10-13T19:42:14Z",
        "updatedAt" : "2016-10-25T07:40:36Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "8f468a6b-a8bd-4556-ac14-c8aca66524e2",
        "parentId" : "c8ff8b21-31e9-41dd-863a-5fe29663f23f",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "yes\n",
        "createdAt" : "2016-10-13T19:49:05Z",
        "updatedAt" : "2016-10-25T07:40:36Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "c83f5804d263e4f1e056f27ebddb519c1ed634ae",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +101,105 @@\n\t// Authentication\n\tfs.BoolVar(&s.Authentication.Anonymous.Enabled, \"anonymous-auth\", s.Authentication.Anonymous.Enabled, \"\"+\n\t\t\"Enables anonymous requests to the Kubelet server. Requests that are not rejected by another \"+\n\t\t\"authentication method are treated as anonymous requests. Anonymous requests have a username \"+"
  },
  {
    "id" : "f19fa7a2-eaac-4077-ad83-00b47bca56d1",
    "prId" : 34381,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/34381#pullrequestreview-5589541",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b8e0a68c-3fff-4557-9ed2-a9d2cb67e442",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "I'd like to see this default-on too.  One level release skew should be safe since we supported the endpoint in 1.4.\n",
        "createdAt" : "2016-10-13T19:43:22Z",
        "updatedAt" : "2016-10-25T07:40:36Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "1e8cb7d0-fe64-4dd1-bc85-49d275b4ba7f",
        "parentId" : "b8e0a68c-3fff-4557-9ed2-a9d2cb67e442",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "we shouldn't default this on if the corresponding API isn't defaulted on\n",
        "createdAt" : "2016-10-13T20:14:14Z",
        "updatedAt" : "2016-10-25T07:40:36Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "5c912beb-8661-46f0-8809-11a88ef91897",
        "parentId" : "b8e0a68c-3fff-4557-9ed2-a9d2cb67e442",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "> we shouldn't default this on if the corresponding API isn't defaulted on\n\nbeta API that I thought I turned on by default.  It's not?\n",
        "createdAt" : "2016-10-14T12:22:38Z",
        "updatedAt" : "2016-10-25T07:40:36Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "bfaeec14-162f-4f7e-b67d-7c88eb6d872a",
        "parentId" : "b8e0a68c-3fff-4557-9ed2-a9d2cb67e442",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "You're right, the backing API is on. However, the kubelet isn't guaranteed to have an API client. I can look into dynamically enabling it as a follow up, but the stateless default has to be off, I think\n",
        "createdAt" : "2016-10-25T06:40:10Z",
        "updatedAt" : "2016-10-25T07:40:36Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "c83f5804d263e4f1e056f27ebddb519c1ed634ae",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +105,109 @@\t\t\"authentication method are treated as anonymous requests. Anonymous requests have a username \"+\n\t\t\"of system:anonymous, and a group name of system:unauthenticated.\")\n\tfs.BoolVar(&s.Authentication.Webhook.Enabled, \"authentication-token-webhook\", s.Authentication.Webhook.Enabled, \"\"+\n\t\t\"Use the TokenReview API to determine authentication for bearer tokens.\")\n\tfs.DurationVar(&s.Authentication.Webhook.CacheTTL.Duration, \"authentication-token-webhook-cache-ttl\", s.Authentication.Webhook.CacheTTL.Duration, \"\"+"
  },
  {
    "id" : "faba5bf8-0ca7-4624-ba5d-d23cdca16cc1",
    "prId" : 32151,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dfa9756a-eb41-4d41-a232-3b863abed293",
        "parentId" : null,
        "authorId" : "d37d9758-bdf5-4c23-a40e-a85099689a0c",
        "body" : "You probably want to mark it deprecated...\n",
        "createdAt" : "2016-09-07T15:46:50Z",
        "updatedAt" : "2016-09-13T21:43:22Z",
        "lastEditedBy" : "d37d9758-bdf5-4c23-a40e-a85099689a0c",
        "tags" : [
        ]
      },
      {
        "id" : "97bd62e6-f425-4ff7-a4e1-ded28ef52370",
        "parentId" : "dfa9756a-eb41-4d41-a232-3b863abed293",
        "authorId" : "a1478705-4cd0-46fe-a843-060cf4cf0442",
        "body" : "That would only be appropriate for the CNI usage of the flag; there is another meaning for non-CNI plugins.\nMaybe non-CNI plugins should be deprecated, but that's another conversation.\n",
        "createdAt" : "2016-09-07T15:53:20Z",
        "updatedAt" : "2016-09-13T21:43:22Z",
        "lastEditedBy" : "a1478705-4cd0-46fe-a843-060cf4cf0442",
        "tags" : [
        ]
      }
    ],
    "commit" : "8a696831788e24d8c95de43da7d1051d9a1bc992",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +148,152 @@\tfs.DurationVar(&s.VolumeStatsAggPeriod.Duration, \"volume-stats-agg-period\", s.VolumeStatsAggPeriod.Duration, \"Specifies interval for kubelet to calculate and cache the volume disk usage for all pods and volumes.  To disable volume calculations, set to 0.  Default: '1m'\")\n\tfs.StringVar(&s.NetworkPluginName, \"network-plugin\", s.NetworkPluginName, \"<Warning: Alpha feature> The name of the network plugin to be invoked for various events in kubelet/pod lifecycle\")\n\tfs.StringVar(&s.NetworkPluginDir, \"network-plugin-dir\", s.NetworkPluginDir, \"<Warning: Alpha feature> The full path of the directory in which to search for network plugins or CNI config\")\n\tfs.StringVar(&s.CNIConfDir, \"cni-conf-dir\", s.CNIConfDir, \"<Warning: Alpha feature> The full path of the directory in which to search for CNI config files. Default: /etc/cni/net.d\")\n\tfs.StringVar(&s.CNIBinDir, \"cni-bin-dir\", s.CNIBinDir, \"<Warning: Alpha feature> The full path of the directory in which to search for CNI plugin binaries. Default: /opt/cni/bin\")"
  },
  {
    "id" : "06aaa7bc-9212-4e13-a0e6-31e28649f82a",
    "prId" : 31197,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5b4be000-6718-4133-9124-80cb4661dcd8",
        "parentId" : null,
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "Please mark experimental flannel overlay as deprecated also\n",
        "createdAt" : "2016-09-02T21:33:15Z",
        "updatedAt" : "2016-09-02T21:36:19Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      }
    ],
    "commit" : "83ca3504b498666a4c5b777f1b17a62ea6833531",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +174,178 @@\tfs.MarkDeprecated(\"rkt-stage1-image\", \"Will be removed in a future version. The default stage1 image will be specified by the rkt configurations, see https://github.com/coreos/rkt/blob/master/Documentation/configuration.md for more details.\")\n\tfs.BoolVar(&s.ConfigureCBR0, \"configure-cbr0\", s.ConfigureCBR0, \"If true, kubelet will configure cbr0 based on Node.Spec.PodCIDR.\")\n\tfs.MarkDeprecated(\"configure-cbr0\", \"Will be removed in a future version. Please use kubenet or other network plugins.\")\n\tfs.StringVar(&s.HairpinMode, \"hairpin-mode\", s.HairpinMode, \"How should the kubelet setup hairpin NAT. This allows endpoints of a Service to loadbalance back to themselves if they should try to access their own Service. Valid values are \\\"promiscuous-bridge\\\", \\\"hairpin-veth\\\" and \\\"none\\\".\")\n\tfs.BoolVar(&s.BabysitDaemons, \"babysit-daemons\", s.BabysitDaemons, \"If true, the node has babysitter process monitoring docker and kubelet.\")"
  },
  {
    "id" : "3acc54d7-ca53-4a75-88eb-5a849a779607",
    "prId" : 30798,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d64c169a-de4c-4493-bcc3-c5807462383e",
        "parentId" : null,
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "@mtaufen \n",
        "createdAt" : "2016-08-17T22:55:15Z",
        "updatedAt" : "2016-08-17T22:55:15Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      },
      {
        "id" : "0dd3129d-5c61-45f1-87d9-8f99e220c812",
        "parentId" : "d64c169a-de4c-4493-bcc3-c5807462383e",
        "authorId" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "body" : "Last I checked `auth-path` has been deprecated since 1.2 (two releases). Can we just remove it in 1.4? (I already did this in #29216, let me know if I shouldn't).\n",
        "createdAt" : "2016-08-18T00:04:32Z",
        "updatedAt" : "2016-08-18T00:05:06Z",
        "lastEditedBy" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "tags" : [
        ]
      },
      {
        "id" : "77bb7903-793e-4f3f-83de-c6378c164d4e",
        "parentId" : "d64c169a-de4c-4493-bcc3-c5807462383e",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Please do\n",
        "createdAt" : "2016-08-18T00:11:29Z",
        "updatedAt" : "2016-08-18T00:11:29Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "a59b7c59-76d0-408d-aabc-575a8d8aefef",
        "parentId" : "d64c169a-de4c-4493-bcc3-c5807462383e",
        "authorId" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "body" : "Ok will do.\n",
        "createdAt" : "2016-08-18T00:46:28Z",
        "updatedAt" : "2016-08-18T00:46:28Z",
        "lastEditedBy" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "tags" : [
        ]
      }
    ],
    "commit" : "a66828d73e0f8ca411daf93b6bc7c9ba029956ff",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +77,81 @@\tfs.MarkDeprecated(\"auth-path\", \"will be removed in a future version\")\n\tfs.StringSliceVar(&s.APIServerList, \"api-servers\", []string{}, \"List of Kubernetes API servers for publishing events, and reading pods and services. (ip:port), comma separated.\")\n\tfs.MarkDeprecated(\"api-servers\", \"Use --kubeconfig instead. Will be removed in a future version.\")\n\n\tfs.StringVar(&s.PodManifestPath, \"config\", s.PodManifestPath, \"Path to to the directory containing pod manifest files to run, or the path to a single pod manifest file.\")"
  },
  {
    "id" : "8f20d674-bad6-4fd5-b9ff-89206c4f6bee",
    "prId" : 30376,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4bbc1c2a-7df9-4801-b584-ac6d2adfc77d",
        "parentId" : null,
        "authorId" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "body" : "Can you document that passing 0 means \"use default\" in the usage string? I did a double take when I first saw this because the defaulting code in componentconfig/v1alpha1/defaults.go doesn't override the empty value for this field, and 0 for MTU sounds scary if one doesn't know that 0 means \"use default.\" To be clear: I think this is fine as-is, it just ought to be documented.\n",
        "createdAt" : "2016-08-24T19:04:16Z",
        "updatedAt" : "2016-08-24T19:04:16Z",
        "lastEditedBy" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "tags" : [
        ]
      }
    ],
    "commit" : "902ba4e249f51abf79376f42d7c7f9141291f577",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +145,149 @@\tfs.StringVar(&s.NetworkPluginName, \"network-plugin\", s.NetworkPluginName, \"<Warning: Alpha feature> The name of the network plugin to be invoked for various events in kubelet/pod lifecycle\")\n\tfs.StringVar(&s.NetworkPluginDir, \"network-plugin-dir\", s.NetworkPluginDir, \"<Warning: Alpha feature> The full path of the directory in which to search for network plugins\")\n\tfs.Int32Var(&s.NetworkPluginMTU, \"network-plugin-mtu\", s.NetworkPluginMTU, \"<Warning: Alpha feature> The MTU to be passed to the network plugin, to override the default\")\n\tfs.StringVar(&s.VolumePluginDir, \"volume-plugin-dir\", s.VolumePluginDir, \"<Warning: Alpha feature> The full path of the directory in which to search for additional third party volume plugins\")\n\tfs.StringVar(&s.CloudProvider, \"cloud-provider\", s.CloudProvider, \"The provider for cloud services. By default, kubelet will attempt to auto-detect the cloud provider. Specify empty string for running with no cloud provider. [default=auto-detect]\")"
  },
  {
    "id" : "14fe61d3-6ccd-40b8-bfed-4779290f62a1",
    "prId" : 29216,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "86e8b0fa-0134-4da9-8d75-30f5ff8eb7c5",
        "parentId" : null,
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "We were planning on using it for self hosting bootstrap, is that not the case anymore? (I didn't look through all the comments, apologies if this has already been discussed)\n",
        "createdAt" : "2016-08-12T21:08:37Z",
        "updatedAt" : "2016-08-25T17:57:46Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "90e8c1fc-318a-4901-b917-21173ebd5565",
        "parentId" : "86e8b0fa-0134-4da9-8d75-30f5ff8eb7c5",
        "authorId" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "body" : "No worries. @vishh mentioned in a comment on an old diff of the Dynamic Kubelet Settings proposal doc that self-bootstrapping is no longer using runonce mode.\n",
        "createdAt" : "2016-08-12T21:41:51Z",
        "updatedAt" : "2016-08-25T17:57:46Z",
        "lastEditedBy" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "tags" : [
        ]
      }
    ],
    "commit" : "7ae1458ab090c9e8fbac186c61021d17ae192dfa",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +57,61 @@\t// TODO(mtaufen): It is increasingly looking like nobody actually uses the\n\t//                Kubelet's runonce mode anymore, so it may be a candidate\n\t//                for deprecation and removal.\n\t// If runOnce is true, the Kubelet will check the API server once for pods,\n\t// run those in addition to the pods specified by the local manifest, and exit."
  },
  {
    "id" : "ccdb03e1-d201-4298-91af-56519c26b2fb",
    "prId" : 27970,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "94578476-2a5f-4798-8911-c1a2f776b482",
        "parentId" : null,
        "authorId" : "8e448017-7838-493d-a424-33cada0da657",
        "body" : "Looks like this was removed in PR https://github.com/kubernetes/kubernetes/pull/19837 and might've been re-added in a bad merge.\n",
        "createdAt" : "2016-08-05T18:27:54Z",
        "updatedAt" : "2016-08-15T18:29:44Z",
        "lastEditedBy" : "8e448017-7838-493d-a424-33cada0da657",
        "tags" : [
        ]
      },
      {
        "id" : "92009bc3-6509-4666-9d29-504dcb97bcba",
        "parentId" : "94578476-2a5f-4798-8911-c1a2f776b482",
        "authorId" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "body" : "I am not sure why that PR #19837 moves all the constants to v1apha1 version pkg/apis/componentconfig/v1alpha1/defaults.go? Should I also move my change to there too?\n",
        "createdAt" : "2016-08-07T17:50:38Z",
        "updatedAt" : "2016-08-15T18:29:44Z",
        "lastEditedBy" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "tags" : [
        ]
      },
      {
        "id" : "7c2e0f2c-aa36-4c7e-8e41-24d1f3070ef7",
        "parentId" : "94578476-2a5f-4798-8911-c1a2f776b482",
        "authorId" : "8e448017-7838-493d-a424-33cada0da657",
        "body" : "cc @mikedanese A bunch of kubelet const variables were moved to `pkg/apis/componentconfig/v1alpha1/defaults.go`. Can you help us understand the reasoning, and guidance for where to put consts like `DefaultKubeletVolumesDirName`?\n",
        "createdAt" : "2016-08-09T18:31:31Z",
        "updatedAt" : "2016-08-15T18:29:44Z",
        "lastEditedBy" : "8e448017-7838-493d-a424-33cada0da657",
        "tags" : [
        ]
      },
      {
        "id" : "9404182e-ea05-4b28-b4be-0f170f4951d9",
        "parentId" : "94578476-2a5f-4798-8911-c1a2f776b482",
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "Ask @mtaufen. Are they used to default fields of the KubeletConfiguration API object?\n",
        "createdAt" : "2016-08-10T02:06:12Z",
        "updatedAt" : "2016-08-15T18:29:44Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      },
      {
        "id" : "dccec1f4-3957-4d74-b50f-b1ad1973f6b5",
        "parentId" : "94578476-2a5f-4798-8911-c1a2f776b482",
        "authorId" : "8e448017-7838-493d-a424-33cada0da657",
        "body" : "Nope, they're used as consts in the kubelet class.\n",
        "createdAt" : "2016-08-10T03:40:58Z",
        "updatedAt" : "2016-08-15T18:29:44Z",
        "lastEditedBy" : "8e448017-7838-493d-a424-33cada0da657",
        "tags" : [
        ]
      },
      {
        "id" : "65f95e5a-fd40-458b-93e9-4ce00756fd29",
        "parentId" : "94578476-2a5f-4798-8911-c1a2f776b482",
        "authorId" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "body" : "The consts that were moved are used for constructing defaults for the v1alpha1 KubeletConfiguration object. Just glancing through the changes, it seems like the hardcoded const \"defaults\" added in this PR are always used. Does \"default\" imply that it could be possible, in the future, for a user to configure these values? If so, maybe it makes sense to expose these dir names via componentconfig?\n",
        "createdAt" : "2016-08-10T05:13:01Z",
        "updatedAt" : "2016-08-15T18:29:44Z",
        "lastEditedBy" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "tags" : [
        ]
      },
      {
        "id" : "cfbfce41-863d-452b-b58d-ca07c21c751a",
        "parentId" : "94578476-2a5f-4798-8911-c1a2f776b482",
        "authorId" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "body" : "@saad-ali @thockin could you confirm whether it is possible, in the future, for a user to configure those values like \"plugin\" \"volume\" in the mounting paths? It seems for me that those names are used internally and users should not configure them.\n",
        "createdAt" : "2016-08-11T18:14:02Z",
        "updatedAt" : "2016-08-15T18:29:44Z",
        "lastEditedBy" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "tags" : [
        ]
      },
      {
        "id" : "e4e26440-a8a9-48f1-8911-18a2db2f6cf9",
        "parentId" : "94578476-2a5f-4798-8911-c1a2f776b482",
        "authorId" : "8e448017-7838-493d-a424-33cada0da657",
        "body" : "Agreed. Let's leave them as is then.\n",
        "createdAt" : "2016-08-12T03:12:05Z",
        "updatedAt" : "2016-08-15T18:29:44Z",
        "lastEditedBy" : "8e448017-7838-493d-a424-33cada0da657",
        "tags" : [
        ]
      },
      {
        "id" : "c90e3227-c09f-4677-902e-bff375b9be2a",
        "parentId" : "94578476-2a5f-4798-8911-c1a2f776b482",
        "authorId" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "body" : "@mtaufen @saad-ali \nJust want to confirm that those default values are only used for kubelet internally. So options.go is the appropriate place for those values?\n",
        "createdAt" : "2016-08-15T18:13:23Z",
        "updatedAt" : "2016-08-15T18:29:44Z",
        "lastEditedBy" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "tags" : [
        ]
      }
    ],
    "commit" : "f19a1148db1b7584be6b6b60abaf8c0bd1503ed3",
    "line" : null,
    "diffHunk" : "@@ -1,1 +34,38 @@\tDefaultKubeletVolumesDirName    = \"volumes\"\n\tDefaultKubeletPluginsDirName    = \"plugins\"\n\tDefaultKubeletContainersDirName = \"containers\"\n)\n"
  },
  {
    "id" : "501514ae-a2c4-42ef-a76d-395d1b4da2d5",
    "prId" : 25972,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "434cff4b-7e03-4ad0-83ce-4e9ca733bd34",
        "parentId" : null,
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "test/e2e/framework/util.go\n",
        "createdAt" : "2016-05-26T20:37:49Z",
        "updatedAt" : "2016-05-26T20:37:49Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      }
    ],
    "commit" : "79ca1911e1de0e6dce501ac35900eef308db0806",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +40,44 @@\texperimentalFlannelOverlay = false\n\n\t// When these values are updated, also update test/e2e/util.go\n\tdefaultPodInfraContainerImageName    = \"gcr.io/google_containers/pause\"\n\tdefaultPodInfraContainerImageVersion = \"3.0\""
  },
  {
    "id" : "311705d0-c31b-4eb7-b577-1a56be5cff5d",
    "prId" : 23308,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a7e999cb-bc03-4cb0-a217-15005d98c79c",
        "parentId" : null,
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "Hmm.....kubelet still creates a rkt.Config object and pre-fill some fields. Does that mean it will not be able to do that in the future?\n",
        "createdAt" : "2016-03-25T17:47:50Z",
        "updatedAt" : "2016-03-29T00:06:26Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "80c3c35c-77b9-479a-9616-f83e95244fe4",
        "parentId" : "a7e999cb-bc03-4cb0-a217-15005d98c79c",
        "authorId" : "227eb550-8b08-4420-9a78-279f840bd8de",
        "body" : "@yujuhong If the config is pre-filled, the pre-filled values will be preferred over the values get from rkt api service\n",
        "createdAt" : "2016-03-28T04:14:55Z",
        "updatedAt" : "2016-03-29T00:06:26Z",
        "lastEditedBy" : "227eb550-8b08-4420-9a78-279f840bd8de",
        "tags" : [
        ]
      },
      {
        "id" : "8b9f9177-48b8-4883-9d35-5b54b2c63c9c",
        "parentId" : "a7e999cb-bc03-4cb0-a217-15005d98c79c",
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "but you're deprecating the \"--rkt-stage1-image\" flag, so users cannot configure rkt through kubelet\n",
        "createdAt" : "2016-03-28T16:57:12Z",
        "updatedAt" : "2016-03-29T00:06:26Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "e817d1e26f3f03d0d221fef0086148ba1a69cc87",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +212,216 @@\tfs.StringVar(&s.RktAPIEndpoint, \"rkt-api-endpoint\", s.RktAPIEndpoint, \"The endpoint of the rkt API service to communicate with. Only used if --container-runtime='rkt'.\")\n\tfs.StringVar(&s.RktStage1Image, \"rkt-stage1-image\", s.RktStage1Image, \"image to use as stage1. Local paths and http/https URLs are supported. If empty, the 'stage1.aci' in the same directory as '--rkt-path' will be used.\")\n\tfs.MarkDeprecated(\"rkt-stage1-image\", \"Will be removed in a future version. The default stage1 image will be specified by the rkt configurations, see https://github.com/coreos/rkt/blob/master/Documentation/configuration.md for more details.\")\n\tfs.BoolVar(&s.ConfigureCBR0, \"configure-cbr0\", s.ConfigureCBR0, \"If true, kubelet will configure cbr0 based on Node.Spec.PodCIDR.\")\n\tfs.StringVar(&s.HairpinMode, \"hairpin-mode\", s.HairpinMode, \"How should the kubelet setup hairpin NAT. This allows endpoints of a Service to loadbalance back to themselves if they should try to access their own Service. Valid values are \\\"promiscuous-bridge\\\", \\\"hairpin-veth\\\" and \\\"none\\\".\")"
  },
  {
    "id" : "8d7aaad0-d801-4a40-9284-993393695398",
    "prId" : 23059,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "455be53e-b7f3-4a56-ab05-f2303f0610e0",
        "parentId" : null,
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "Should we give a flag to override this image config? Other people have wanted the ability to specify custom images. Its ok to not add the flag in this PR...\n",
        "createdAt" : "2016-03-24T20:49:31Z",
        "updatedAt" : "2016-03-25T21:46:21Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      },
      {
        "id" : "3c6b81f2-c603-41b8-a92d-1717e1a80501",
        "parentId" : "455be53e-b7f3-4a56-ab05-f2303f0610e0",
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "As I understand it, it's still possible to change the value by passing `--pod-infra-container-image` to `kubelet`. This is just the default.\n\nOr am I missing something?\n",
        "createdAt" : "2016-03-24T21:26:22Z",
        "updatedAt" : "2016-03-25T21:46:21Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      },
      {
        "id" : "4b86143e-249d-4dd1-abd3-ea3dbfa43cdd",
        "parentId" : "455be53e-b7f3-4a56-ab05-f2303f0610e0",
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "My bad. Misconstrued the logic. lgtm\n",
        "createdAt" : "2016-03-25T17:57:54Z",
        "updatedAt" : "2016-03-25T21:46:21Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      }
    ],
    "commit" : "c6172e58cf52888d53bb0d3d87c17a3d0760d960",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +40,44 @@\n\tdefaultPodInfraContainerImageName    = \"gcr.io/google_containers/pause\"\n\tdefaultPodInfraContainerImageVersion = \"2.0\"\n)\n"
  },
  {
    "id" : "d6b61999-8590-4bc3-80ae-4ceee09875e1",
    "prId" : 19944,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b8e43862-32d2-46a9-9df9-ce2e534492dd",
        "parentId" : null,
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "Why not make this a directory --custom-metrics-config=/path/to/custom/metrics/dir and if the string is \"\" don't enable it?\n",
        "createdAt" : "2016-02-04T19:28:05Z",
        "updatedAt" : "2016-02-05T11:00:26Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      }
    ],
    "commit" : "bf0c8812637c5d892caa49f563426a89e5ae5047",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +216,220 @@\tfs.DurationVar(&s.OutOfDiskTransitionFrequency.Duration, \"outofdisk-transition-frequency\", s.OutOfDiskTransitionFrequency.Duration, \"Duration for which the kubelet has to wait before transitioning out of out-of-disk node condition status. Default: 5m0s\")\n\tfs.StringVar(&s.NodeIP, \"node-ip\", s.NodeIP, \"IP address of the node. If set, kubelet will use this IP address for the node\")\n\tfs.BoolVar(&s.EnableCustomMetrics, \"enable-custom-metrics\", s.EnableCustomMetrics, \"Support for gathering custom metrics.\")\n}"
  },
  {
    "id" : "5959b7b8-8672-45ee-99b8-842c71eb1c62",
    "prId" : 19837,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "69e3652b-bc5c-4980-91f2-f3bb3048622b",
        "parentId" : null,
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "@liggitt - fyi, still reviewing this, but it looks like defaulting has been moved here....\n",
        "createdAt" : "2016-02-11T22:30:04Z",
        "updatedAt" : "2016-07-15T01:40:21Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      },
      {
        "id" : "2b62afc3-111f-407b-80e6-6500b5be440a",
        "parentId" : "69e3652b-bc5c-4980-91f2-f3bb3048622b",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "as long as the returned `KubeletServer` still contains a defaulted config, it doesn't impact us\n",
        "createdAt" : "2016-06-22T14:46:56Z",
        "updatedAt" : "2016-07-15T01:40:21Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "e52718bbc696e6b5ae8538be8b774771a150c6e4",
    "line" : 52,
    "diffHunk" : "@@ -1,1 +49,53 @@// NewKubeletServer will create a new KubeletServer with default values.\nfunc NewKubeletServer() *KubeletServer {\n\tconfig := componentconfig.KubeletConfiguration{}\n\tapi.Scheme.Convert(&v1alpha1.KubeletConfiguration{}, &config)\n\treturn &KubeletServer{"
  },
  {
    "id" : "799c6d39-0b0d-4a27-bf0d-a874ec50eebe",
    "prId" : 19837,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3b1f8c2c-18de-4b37-ae92-ea83c3b749e2",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "why are these not represented as config struct fields?\n",
        "createdAt" : "2016-06-22T14:45:07Z",
        "updatedAt" : "2016-07-15T01:40:21Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "0f7cf5e4-b7fc-4853-895c-d711717bafb3",
        "parentId" : "3b1f8c2c-18de-4b37-ae92-ea83c3b749e2",
        "authorId" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "body" : "I'll move `SystemReserved` and `KubeReserved` into the config struct today. I talked to @mikedanese about these fields last week and IIRC the reason not to move `AuthPath` and `KubeConfig` into the config struct (yet) is that they are read from disk, but we do not yet have the option to read the kubelet config struct from disk. @mikedanese please correct me if I am not remembering correctly.\n",
        "createdAt" : "2016-06-27T15:39:16Z",
        "updatedAt" : "2016-07-15T01:40:21Z",
        "lastEditedBy" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "tags" : [
        ]
      },
      {
        "id" : "f070d2fc-224a-4fae-821e-1d0c7f251dde",
        "parentId" : "3b1f8c2c-18de-4b37-ae92-ea83c3b749e2",
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "AuthPath is required to connect to api-server. We should group that in the KubeConfig bucket and leave the ComponentConfig bucket for options that don't pertain to api-server connection.\n",
        "createdAt" : "2016-06-27T17:12:39Z",
        "updatedAt" : "2016-07-15T01:40:21Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      },
      {
        "id" : "31d1940a-d2e2-43fe-a6f8-926dbef7ecd5",
        "parentId" : "3b1f8c2c-18de-4b37-ae92-ea83c3b749e2",
        "authorId" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "body" : "I'm currently rebasing again, it looks like the comment for `AuthPath` has updated to `Deprecated -- use KubeConfig instead`. So perhaps the functionality is already present in `KubeConfig` and we should we leave `AuthPath` where it is for legacy reasons? \n",
        "createdAt" : "2016-06-27T18:05:59Z",
        "updatedAt" : "2016-07-15T01:40:21Z",
        "lastEditedBy" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "tags" : [
        ]
      },
      {
        "id" : "9ce0f68f-bb59-47b1-8bc4-404e19c7359f",
        "parentId" : "3b1f8c2c-18de-4b37-ae92-ea83c3b749e2",
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "Yup. That sounds good.\n",
        "createdAt" : "2016-06-28T17:06:47Z",
        "updatedAt" : "2016-07-15T01:40:21Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      }
    ],
    "commit" : "e52718bbc696e6b5ae8538be8b774771a150c6e4",
    "line" : null,
    "diffHunk" : "@@ -1,1 +52,56 @@\tapi.Scheme.Convert(&v1alpha1.KubeletConfiguration{}, &config)\n\treturn &KubeletServer{\n\t\tAuthPath:             util.NewStringFlag(\"/var/lib/kubelet/kubernetes_auth\"), // deprecated\n\t\tKubeConfig:           util.NewStringFlag(\"/var/lib/kubelet/kubeconfig\"),\n\t\tKubeletConfiguration: config,"
  }
]