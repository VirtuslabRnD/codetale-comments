[
  {
    "id" : "01aee7c9-39b1-44ac-900a-628d0266c087",
    "prId" : 11839,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "16656feb-2fff-4454-b3d8-295894347aeb",
        "parentId" : null,
        "authorId" : "ad0a3561-db60-47a9-b82f-ac613199f968",
        "body" : "maybe...\n\n``` go\nfunc newMungeLine(line []byte) mungeLine {\n    return mungeLine{\n        data:     line,\n        header:   mlHeaderRE.Match(line),\n        link:     mlLinkRE.Match(line),\n        beginTag: beginTagRE.Match(line),\n        endTag:   endTag.Match(line),\n    }\n}\n```\n\nThere's a MatchString variant if you want to stick with strings.\n",
        "createdAt" : "2015-07-27T18:23:23Z",
        "updatedAt" : "2015-07-31T00:42:02Z",
        "lastEditedBy" : "ad0a3561-db60-47a9-b82f-ac613199f968",
        "tags" : [
        ]
      }
    ],
    "commit" : "024208e39f9308efb013a9979b93aef4dbe77dc0",
    "line" : null,
    "diffHunk" : "@@ -1,1 +234,238 @@func trimRightSpace(in string) string {\n\treturn strings.TrimRightFunc(in, unicode.IsSpace)\n}\n\n// Splits a document up into a slice of lines."
  },
  {
    "id" : "c8b3ca2c-fc12-4935-9471-b50137fafd31",
    "prId" : 11839,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7cfbc1c3-be55-4290-9227-a7f8c5cd666e",
        "parentId" : null,
        "authorId" : "ad0a3561-db60-47a9-b82f-ac613199f968",
        "body" : "This could also be a trim before the split. Just noting, up to you.\n",
        "createdAt" : "2015-07-27T18:25:20Z",
        "updatedAt" : "2015-07-31T00:42:02Z",
        "lastEditedBy" : "ad0a3561-db60-47a9-b82f-ac613199f968",
        "tags" : [
        ]
      }
    ],
    "commit" : "024208e39f9308efb013a9979b93aef4dbe77dc0",
    "line" : 269,
    "diffHunk" : "@@ -1,1 +240,244 @@\tlines := strings.Split(document, \"\\n\")\n\t// Skip trailing empty string from Split-ing\n\tif len(lines) > 0 && lines[len(lines)-1] == \"\" {\n\t\tlines = lines[:len(lines)-1]\n\t}"
  }
]