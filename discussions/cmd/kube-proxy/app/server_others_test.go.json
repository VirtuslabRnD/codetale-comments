[
  {
    "id" : "c850cd1f-9563-4c2d-b785-472c6afba4e8",
    "prId" : 93040,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/93040#pullrequestreview-514759910",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7f0263c2-c26b-4743-8584-a254dfde9e9c",
        "parentId" : null,
        "authorId" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "body" : "Would it be possible to add an error case here too where we fall back to another proxy mode when the desired scheduler module doesn't exist?",
        "createdAt" : "2020-10-22T14:00:57Z",
        "updatedAt" : "2020-10-23T21:17:56Z",
        "lastEditedBy" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "tags" : [
        ]
      }
    ],
    "commit" : "51ed2421944324574aeff62ced4749b9bca9fd76",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +146,150 @@\t\t\texpected:      proxyModeIPTables,\n\t\t},\n\t\t{ // flag says ipvs, ipset version ok, kernel modules installed for sed scheduler\n\t\t\tflag:          \"ipvs\",\n\t\t\tkmods:         []string{\"ip_vs\", \"ip_vs_rr\", \"ip_vs_wrr\", \"ip_vs_sh\", \"nf_conntrack\", \"ip_vs_sed\"},"
  },
  {
    "id" : "b32bb520-1394-4501-b00d-20a2d860df3d",
    "prId" : 87748,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/87748#pullrequestreview-358681421",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3c73948d-4daa-4fbe-a1a8-c962b337f791",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "how about a case for `detecLocal: \"random garbage\"` ?",
        "createdAt" : "2020-02-11T17:28:06Z",
        "updatedAt" : "2020-02-22T02:38:02Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "038054e4-5e1f-4c2c-a204-bc8e4b467a97",
        "parentId" : "3c73948d-4daa-4fbe-a1a8-c962b337f791",
        "authorId" : "2cc59e20-7474-4601-ae08-1e230c1461d2",
        "body" : "Done.",
        "createdAt" : "2020-02-14T02:36:10Z",
        "updatedAt" : "2020-02-22T02:38:02Z",
        "lastEditedBy" : "2cc59e20-7474-4601-ae08-1e230c1461d2",
        "tags" : [
        ]
      }
    ],
    "commit" : "8c6956e5bb4f9557e6ba459f1f6bbcb80e3b5b80",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +164,168 @@\t\t},\n\t\t{\n\t\t\tdetectLocal: string(proxyconfigapi.LocalModeClusterCIDR),\n\t\t\texpected:    proxyconfigapi.LocalModeClusterCIDR,\n\t\t\terrExpected: false,"
  },
  {
    "id" : "e1763a69-3152-442a-9d04-fe069aa8a8b9",
    "prId" : 87748,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/87748#pullrequestreview-358681421",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2a81feaf-0500-444f-8bac-1178220f9c07",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "How about cases for missing or bad `config` ?",
        "createdAt" : "2020-02-11T17:29:49Z",
        "updatedAt" : "2020-02-22T02:38:02Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "32a8ea94-8769-4004-9c17-0e98caa89ebd",
        "parentId" : "2a81feaf-0500-444f-8bac-1178220f9c07",
        "authorId" : "2cc59e20-7474-4601-ae08-1e230c1461d2",
        "body" : "Done.",
        "createdAt" : "2020-02-14T02:36:38Z",
        "updatedAt" : "2020-02-22T02:38:02Z",
        "lastEditedBy" : "2cc59e20-7474-4601-ae08-1e230c1461d2",
        "tags" : [
        ]
      }
    ],
    "commit" : "8c6956e5bb4f9557e6ba459f1f6bbcb80e3b5b80",
    "line" : 82,
    "diffHunk" : "@@ -1,1 +214,218 @@\t\t\texpected:    resolveLocalDetector(t)(proxyutiliptables.NewDetectLocalByCIDR(\"2002::1234:abcd:ffff:c0a8:101/64\", utiliptablestest.NewIpv6Fake())),\n\t\t\terrExpected: false,\n\t\t},\n\t\t{\n\t\t\tmode:        proxyconfigapi.LocalModeClusterCIDR,"
  },
  {
    "id" : "230e820b-edbe-4d55-9ec4-a159b78888c0",
    "prId" : 73380,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/73380#pullrequestreview-219729045",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "74b8ea81-2f5c-499f-8dc4-30038fd51572",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "I like to use errors.New if there's no actual arguments to the error; but it doesn't really matter much and this is an error just for the test anyway.",
        "createdAt" : "2019-03-27T21:08:12Z",
        "updatedAt" : "2019-03-27T21:08:13Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "73cd7a27-2a88-4696-a565-2dc2871645f3",
        "parentId" : "74b8ea81-2f5c-499f-8dc4-30038fd51572",
        "authorId" : "4138710b-380a-4011-917f-70ce4f4b9717",
        "body" : "I wasn't sure enough about best-practices there to suggest a change, but I usually do that too.",
        "createdAt" : "2019-03-27T21:12:26Z",
        "updatedAt" : "2019-03-27T21:12:26Z",
        "lastEditedBy" : "4138710b-380a-4011-917f-70ce4f4b9717",
        "tags" : [
        ]
      }
    ],
    "commit" : "a23e44216102f6d1995e0885d52f0d50c2776012",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +68,72 @@\t\t{ // detect, error\n\t\t\tflag:          \"\",\n\t\t\tiptablesError: fmt.Errorf(\"oops\"),\n\t\t\texpected:      proxyModeUserspace,\n\t\t},"
  }
]