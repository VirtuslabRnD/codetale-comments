[
  {
    "id" : "867ab77f-b81c-4ddd-ab88-a29f3c4da1e2",
    "prId" : 35821,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/35821#pullrequestreview-6462471",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "05e3d4dc-d83e-47aa-b827-d3cfe92d2aa9",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "Would prefer NewDefault()\n",
        "createdAt" : "2016-10-31T15:43:38Z",
        "updatedAt" : "2016-11-02T22:18:24Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "40fc804831c9ec856c291f1816cb46fb35a38e34",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +68,72 @@\tconst permWritable = \"rw\"\n\tconst sysfsDevice = \"sysfs\"\n\tm := mount.New(\"\" /* default mount path */)\n\tmountPoints, err := m.List()\n\tif err != nil {"
  },
  {
    "id" : "8c6ad0f9-ac9d-465b-916c-ca45d0a0062f",
    "prId" : 28697,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c2dfaa88-c631-4ae9-b7cd-4dc2cfbda25e",
        "parentId" : null,
        "authorId" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "body" : "What happens if we just flare an event and carry on? do e2es pass? \n@thockin is the node really unusable if we can't set the table size? \n",
        "createdAt" : "2016-07-08T18:53:24Z",
        "updatedAt" : "2016-07-11T05:33:09Z",
        "lastEditedBy" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "tags" : [
        ]
      },
      {
        "id" : "2b77ed29-3943-4c6b-b836-500a1190af67",
        "parentId" : "c2dfaa88-c631-4ae9-b7cd-4dc2cfbda25e",
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "As is mentioned in https://github.com/kubernetes/kubernetes/pull/28697#issue-164584119:\n\n> I'm not sure whether we want to mark the node as Unscheduable when this happened, which only needs few lines change. I can do that if we think we should.\n\nWe can mark the node as unschedulable. I'm just not sure whether we want to do that. :)\n",
        "createdAt" : "2016-07-08T20:10:21Z",
        "updatedAt" : "2016-07-11T05:33:09Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      },
      {
        "id" : "747c40c5-81ed-4432-82d2-5eba577909e0",
        "parentId" : "c2dfaa88-c631-4ae9-b7cd-4dc2cfbda25e",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "The node will be OK.  Kube-proxy will run, it will just be more likely to run out of conntrack entries.  It might also affect some of the conntrack-based UDP cleanup in the case of rapid re-use.\n\nIf we think that firing an event is actually enough signal for us to a) keep track of how often this occurs in our tests and b) help debug when a user gets a conntrack error, then that is certainly a lighter-weight solution\n",
        "createdAt" : "2016-07-08T23:31:26Z",
        "updatedAt" : "2016-07-11T05:33:09Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "424685321191af4f3b9c3fe88581f454448718a4",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +53,57 @@\tif !writable {\n\t\treturn readOnlySysFSError\n\t}\n\t// TODO: generify this and sysctl to a new sysfs.WriteInt()\n\tglog.Infof(\"Setting conntrack hashsize to %d\", max/4)"
  },
  {
    "id" : "7837998a-938a-42b1-96c6-15095448b68e",
    "prId" : 28697,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b791aa4f-ef75-4969-bcc8-d3f5024e3746",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "Would it be simpler if we simply captured and analyzed the error we get when the ioutil.WriteFile fails?\n",
        "createdAt" : "2016-07-11T04:49:48Z",
        "updatedAt" : "2016-07-11T05:33:09Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "5134407a-b842-4ad4-b15d-d742c291443e",
        "parentId" : "b791aa4f-ef75-4969-bcc8-d3f5024e3746",
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "I've tried [`IsPermissions`](https://golang.org/pkg/os/#IsPermission), and it doesn't seem to work for read only file system error.\nAnd parsing string seems to be a little more brittle than this one.\n",
        "createdAt" : "2016-07-11T05:24:25Z",
        "updatedAt" : "2016-07-11T05:33:09Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      }
    ],
    "commit" : "424685321191af4f3b9c3fe88581f454448718a4",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +47,51 @@\t// hashsize and return a special error readOnlySysFSError here. The caller should deal with\n\t// readOnlySysFSError differently.\n\twritable, err := isSysFSWritable()\n\tif err != nil {\n\t\treturn err"
  },
  {
    "id" : "778d7451-a3ed-4f96-b2c5-f30a369f2aa1",
    "prId" : 19182,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2907f83f-ace5-47d4-a729-754378e7a234",
        "parentId" : null,
        "authorId" : "0970b119-085d-41b4-8f33-e10409965eba",
        "body" : "should the type be Duration instead of int ?\n",
        "createdAt" : "2015-12-30T04:00:39Z",
        "updatedAt" : "2015-12-30T23:46:50Z",
        "lastEditedBy" : "0970b119-085d-41b4-8f33-e10409965eba",
        "tags" : [
        ]
      },
      {
        "id" : "8fa5fe65-ea9d-4772-9398-1a98deee9886",
        "parentId" : "2907f83f-ace5-47d4-a729-754378e7a234",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "I chose seconds because any finer granularity is not respected.  I could go either way, but given the very limited exposure of this, I think simpler is better.\n",
        "createdAt" : "2015-12-30T19:11:43Z",
        "updatedAt" : "2015-12-30T23:46:50Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "942c45b4-3bd2-4249-bbe7-28e8af9778b5",
        "parentId" : "2907f83f-ace5-47d4-a729-754378e7a234",
        "authorId" : "0970b119-085d-41b4-8f33-e10409965eba",
        "body" : "sounds good\n",
        "createdAt" : "2015-12-31T21:25:28Z",
        "updatedAt" : "2015-12-31T21:25:28Z",
        "lastEditedBy" : "0970b119-085d-41b4-8f33-e10409965eba",
        "tags" : [
        ]
      }
    ],
    "commit" : "da0ac31182ffeebde65f72e09bc12e1af20dd73a",
    "line" : 45,
    "diffHunk" : "@@ -1,1 +43,47 @@}\n\nfunc (realConntracker) SetTCPEstablishedTimeout(seconds int) error {\n\tglog.Infof(\"Setting nf_conntrack_tcp_timeout_established to %d\", seconds)\n\treturn sysctl.SetSysctl(\"net/netfilter/nf_conntrack_tcp_timeout_established\", seconds)"
  },
  {
    "id" : "9961ea9b-b1e0-45fd-af0e-946e91dde5b5",
    "prId" : 19182,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/19182#pullrequestreview-24171113",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ab1f0017-28f6-492d-9c60-fee9dc36e456",
        "parentId" : null,
        "authorId" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "body" : "this line appears to be the culprit that fails our smoke testing when `max` is non-zero.\nxref https://github.com/mesosphere/kubernetes-mesos/issues/724\n",
        "createdAt" : "2016-01-05T21:59:53Z",
        "updatedAt" : "2016-01-05T21:59:53Z",
        "lastEditedBy" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "tags" : [
        ]
      },
      {
        "id" : "1de3eaaa-45e5-413d-af45-9a71d4b6e7ae",
        "parentId" : "ab1f0017-28f6-492d-9c60-fee9dc36e456",
        "authorId" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "body" : "for posterity: the nf_conntrack module doesn't seem to support setting the value of this hashsize parameter for network namespace other than `init_net`; this is strictly incompatible with our mesos/docker-based testing environment.\n",
        "createdAt" : "2016-01-06T16:54:22Z",
        "updatedAt" : "2016-01-06T16:54:22Z",
        "lastEditedBy" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "tags" : [
        ]
      },
      {
        "id" : "56f16233-780a-44b0-82d1-b3c5899dc3ca",
        "parentId" : "ab1f0017-28f6-492d-9c60-fee9dc36e456",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "Thanks for tracking it - what is the fix?  What can we do?\n\nOn Wed, Jan 6, 2016 at 8:54 AM, James DeFelice notifications@github.com\nwrote:\n\n> In cmd/kube-proxy/app/conntrack.go\n> https://github.com/kubernetes/kubernetes/pull/19182#discussion_r48979830\n> :\n> \n> > +\n> > +type Conntracker interface {\n> > -   SetMax(max int) error\n> > -   SetTCPEstablishedTimeout(seconds int) error\n> >   +}\n> >   +\n> >   +type realConntracker struct{}\n> >   +\n> >   +func (realConntracker) SetMax(max int) error {\n> > -   glog.Infof(\"Setting nf_conntrack_max to %d\", max)\n> > -   if err := sysctl.SetSysctl(\"net/netfilter/nf_conntrack_max\", max); err != nil {\n> > -       return err\n> > -   }\n> > -   // TODO: generify this and sysctl to a new sysfs.WriteInt()\n> > -   glog.Infof(\"Setting conntrack hashsize to %d\", max/4)\n> > -   return ioutil.WriteFile(\"/sys/module/nf_conntrack/parameters/hashsize\", []byte(strconv.Itoa(max/4)), 0640)\n> \n> for posterity: the nf_conntrack module doesn't seem to support setting the\n> value of this hashsize parameter for network namespace other than init_net;\n> this is strictly incompatible with our mesos/docker-based testing\n> environment.\n> \n> â€”\n> Reply to this email directly or view it on GitHub\n> https://github.com/kubernetes/kubernetes/pull/19182/files#r48979830.\n",
        "createdAt" : "2016-01-20T08:17:31Z",
        "updatedAt" : "2016-01-20T08:17:31Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "314b189b-62fd-4058-b013-303de9da6233",
        "parentId" : "ab1f0017-28f6-492d-9c60-fee9dc36e456",
        "authorId" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "body" : "for k8s-mesos I've disabled these tuning parameters by default (read: zero by default). this fixes our CI environment immediately. users can still tweak them if needed/wanted. short of changing the way hashsize is implemented in the kernel module i'm not sure how else to really \"fix\" this.\n",
        "createdAt" : "2016-01-20T12:10:14Z",
        "updatedAt" : "2016-01-20T12:10:14Z",
        "lastEditedBy" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "tags" : [
        ]
      },
      {
        "id" : "a324cbac-5e00-4d69-9746-4a21b77aee29",
        "parentId" : "ab1f0017-28f6-492d-9c60-fee9dc36e456",
        "authorId" : "805fa308-60d3-47d0-a8cc-c9ed9b441d83",
        "body" : "More links I collected for the context:\r\n\r\n- k8s-mesos issue @jdef mentioned, that might be related to setting hashsize inside nested network namespace\r\n  https://github.com/mesosphere/kubernetes-mesos/issues/724\r\n\r\n- more general discussion regarding whether sysctl are namespace safe\r\n  https://github.com/kubernetes/kubernetes/issues/29572\r\n\r\n- initial Linux kernel change, that restrict conntrack hash resize to init_net\r\n  https://lwn.net/Articles/375395/",
        "createdAt" : "2017-02-28T07:03:49Z",
        "updatedAt" : "2017-02-28T07:03:49Z",
        "lastEditedBy" : "805fa308-60d3-47d0-a8cc-c9ed9b441d83",
        "tags" : [
        ]
      }
    ],
    "commit" : "da0ac31182ffeebde65f72e09bc12e1af20dd73a",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +40,44 @@\t// TODO: generify this and sysctl to a new sysfs.WriteInt()\n\tglog.Infof(\"Setting conntrack hashsize to %d\", max/4)\n\treturn ioutil.WriteFile(\"/sys/module/nf_conntrack/parameters/hashsize\", []byte(strconv.Itoa(max/4)), 0640)\n}\n"
  }
]