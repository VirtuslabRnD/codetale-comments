[
  {
    "id" : "049a0042-c6c3-48dc-8132-1fe20091be73",
    "prId" : 99613,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/99613#pullrequestreview-604870433",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "39a1039f-a950-4bbd-8a2a-6a2dd0897952",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "Is this OK?  Does it need followup?",
        "createdAt" : "2021-03-05T07:08:39Z",
        "updatedAt" : "2021-03-05T07:08:39Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "ba24e436-3cac-41b0-b4e6-bde7a6cef865",
        "parentId" : "39a1039f-a950-4bbd-8a2a-6a2dd0897952",
        "authorId" : "4b308e06-1000-4b80-8c89-2c79aded4187",
        "body" : "Should I put a comment in this line or skip calling getConntrackMax() by judging runtime.GOOS  at https://github.com/kubernetes/kubernetes/blob/d6bc98fc5a39e7ff16dc563408b35767024b13b5/cmd/kube-proxy/app/server.go#L671-L677\r\nIn fact no windows will come to this point.",
        "createdAt" : "2021-03-05T07:34:33Z",
        "updatedAt" : "2021-03-05T07:34:33Z",
        "lastEditedBy" : "4b308e06-1000-4b80-8c89-2c79aded4187",
        "tags" : [
        ]
      }
    ],
    "commit" : "d6bc98fc5a39e7ff16dc563408b35767024b13b5",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +188,192 @@\nfunc detectNumCPU() int {\n\treturn goruntime.NumCPU()\n}\n"
  },
  {
    "id" : "b94e2245-93c7-4fa4-b8eb-fa9a1b33049b",
    "prId" : 56256,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/56256#pullrequestreview-78595321",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cc24b13f-1714-48f2-8f26-79dd09af73b4",
        "parentId" : null,
        "authorId" : "d168965e-f2a1-46dc-9041-18f8ba845ebe",
        "body" : "Just double checking, but we're OK to have the \"cleanup ipvs\" flag (and maybe others) ignored on windows, rather than returning a \"not supported\" type error?",
        "createdAt" : "2017-11-22T22:33:31Z",
        "updatedAt" : "2017-11-22T22:33:32Z",
        "lastEditedBy" : "d168965e-f2a1-46dc-9041-18f8ba845ebe",
        "tags" : [
        ]
      },
      {
        "id" : "61daf791-de38-4cbc-9b43-d5fc4a002cc7",
        "parentId" : "cc24b13f-1714-48f2-8f26-79dd09af73b4",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "I think that's the easiest path forward.  The flags are kind of a mess, and being cross-platform makes it 10x worse.  We need a more holistic answer",
        "createdAt" : "2017-11-22T22:36:08Z",
        "updatedAt" : "2017-11-22T22:36:08Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "79778288de676b5d2fde1f11ca92d57a3bf638f0",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +47,51 @@\n// NewProxyServer returns a new ProxyServer.\nfunc NewProxyServer(o *Options) (*ProxyServer, error) {\n\treturn newProxyServer(o.config, o.CleanupAndExit, o.scheme, o.master)\n}"
  },
  {
    "id" : "e641f7fd-99d1-4f1a-b96e-91c6937fcdd7",
    "prId" : 51064,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/51064#pullrequestreview-62946017",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0e47c1f8-70a5-46e8-a47c-ac65bcd1d246",
        "parentId" : null,
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "throw out an error if a wrong mode is configured? e.g. iptables is not supported",
        "createdAt" : "2017-09-01T02:35:10Z",
        "updatedAt" : "2017-09-18T18:12:25Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      },
      {
        "id" : "3347760f-3407-4a7d-b2a6-38da365d5363",
        "parentId" : "0e47c1f8-70a5-46e8-a47c-ac65bcd1d246",
        "authorId" : "86293b18-930b-445d-b6b4-023b31ef478d",
        "body" : "If incorrect mode is passed, it would fall back to userspace",
        "createdAt" : "2017-09-15T04:55:05Z",
        "updatedAt" : "2017-09-18T18:12:25Z",
        "lastEditedBy" : "86293b18-930b-445d-b6b4-023b31ef478d",
        "tags" : [
        ]
      }
    ],
    "commit" : "a8d797afdd933547275b00a69842f357c374e7de",
    "line" : 93,
    "diffHunk" : "@@ -1,1 +91,95 @@\tvar endpointsEventHandler proxyconfig.EndpointsHandler\n\n\tproxyMode := getProxyMode(string(config.Mode), winkernel.WindowsKernelCompatTester{})\n\tif proxyMode == proxyModeKernelspace {\n\t\tglog.V(0).Info(\"Using Kernelspace Proxier.\")"
  }
]