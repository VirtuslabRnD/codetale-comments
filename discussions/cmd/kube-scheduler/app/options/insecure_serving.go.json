[
  {
    "id" : "c7b77818-afd5-4aa0-a903-f44bd7b02f79",
    "prId" : 69663,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/69663#pullrequestreview-166123608",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8a47417e-1337-4c8d-871d-cb42c6797dfc",
        "parentId" : null,
        "authorId" : "6252ac4b-6b9e-4dee-8931-ca3b934d52fc",
        "body" : "Trying to understand why is it replacing one deprecated option with another deprecated one?",
        "createdAt" : "2018-10-16T14:24:05Z",
        "updatedAt" : "2018-11-08T15:44:12Z",
        "lastEditedBy" : "6252ac4b-6b9e-4dee-8931-ca3b934d52fc",
        "tags" : [
        ]
      },
      {
        "id" : "af856bd9-ba80-4432-b0aa-9c8079f4641e",
        "parentId" : "8a47417e-1337-4c8d-871d-cb42c6797dfc",
        "authorId" : "6252ac4b-6b9e-4dee-8931-ca3b934d52fc",
        "body" : "it seems that is it extending it to loopback? though still not sure why to extend a deprecated option?",
        "createdAt" : "2018-10-16T14:31:06Z",
        "updatedAt" : "2018-11-08T15:44:12Z",
        "lastEditedBy" : "6252ac4b-6b9e-4dee-8931-ca3b934d52fc",
        "tags" : [
        ]
      },
      {
        "id" : "d8d8a43f-c2f8-432e-8286-bc4882aea2b1",
        "parentId" : "8a47417e-1337-4c8d-871d-cb42c6797dfc",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "It's not extending it in the code sense. We have support for insecure ports using these two option structs (not new for scheduler). The whole insecure port code is deprecated, to be removed when all components switched over to secure ports. The difference of `DeprecatedInsecureServingOptionsWithLoopback` is just that it add the loopback authenticator which helps testing. Otherwise it is the same.",
        "createdAt" : "2018-10-18T14:28:34Z",
        "updatedAt" : "2018-11-08T15:44:12Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "1588af4031e746e3e48855256054133e8707f018",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +33,37 @@type CombinedInsecureServingOptions struct {\n\tHealthz *apiserveroptions.DeprecatedInsecureServingOptionsWithLoopback\n\tMetrics *apiserveroptions.DeprecatedInsecureServingOptionsWithLoopback\n\n\tBindPort    int    // overrides the structs above on ApplyTo, ignored on ApplyToFromLoadedConfig"
  },
  {
    "id" : "3abd0690-c977-4450-b462-e317c3e8f447",
    "prId" : 63410,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/63410#pullrequestreview-119349100",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9cffe866-c41f-41bc-befd-911d6a71dea7",
        "parentId" : null,
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "is there a need to return an `error` for this function?",
        "createdAt" : "2018-05-11T01:24:08Z",
        "updatedAt" : "2018-05-15T11:10:36Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      },
      {
        "id" : "b5e74d96-7b91-4cce-9a73-e4f8a4c31a5a",
        "parentId" : "9cffe866-c41f-41bc-befd-911d6a71dea7",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "it probably used to",
        "createdAt" : "2018-05-11T08:06:19Z",
        "updatedAt" : "2018-05-15T11:10:36Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "e333ba061f76e9f744a33851b0795b531e1767f9",
    "line" : 124,
    "diffHunk" : "@@ -1,1 +122,126 @@\t}\n\n\treturn nil\n}\n"
  },
  {
    "id" : "6ac31619-5ce2-401c-a0f8-81372300e190",
    "prId" : 63410,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/63410#pullrequestreview-119339475",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "06dd0f1f-3381-4f39-ae4d-ca0b845f9fae",
        "parentId" : null,
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "for this pattern - would it make more sense to return an error in the case where the object is `nil`, or even let it panic unless calls on `nil` objects actually happen in the call stack?\r\n\r\nthe same for other functions too.\r\n",
        "createdAt" : "2018-05-11T01:36:46Z",
        "updatedAt" : "2018-05-15T11:10:36Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      },
      {
        "id" : "563b5f7f-cdf1-4b89-9d03-850df24addd0",
        "parentId" : "06dd0f1f-3381-4f39-ae4d-ca0b845f9fae",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "This is intentional, a pattern we follow everywhere else: if you want to disable a feature completely, set the options to nil.",
        "createdAt" : "2018-05-11T07:25:07Z",
        "updatedAt" : "2018-05-15T11:10:36Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "e333ba061f76e9f744a33851b0795b531e1767f9",
    "line" : 151,
    "diffHunk" : "@@ -1,1 +149,153 @@\tif o == nil {\n\t\treturn nil\n\t}\n\n\terrors := []error{}"
  },
  {
    "id" : "9c016f41-61f5-4797-82e7-9ca62e03f889",
    "prId" : 60372,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/60372#pullrequestreview-99614433",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "edf19872-aea0-4e88-bd68-06ee06a9fcc2",
        "parentId" : null,
        "authorId" : "c29e1906-5f0b-4d7b-af8b-d664805e8c8e",
        "body" : "I still have a doubt if MetricsBindAddress and HealthzBindAddress are loaded from file and they have different address but same port. Bootstrap will fail.",
        "createdAt" : "2018-02-27T09:19:51Z",
        "updatedAt" : "2018-04-28T20:36:36Z",
        "lastEditedBy" : "c29e1906-5f0b-4d7b-af8b-d664805e8c8e",
        "tags" : [
        ]
      },
      {
        "id" : "df8aa8c9-f9a2-4505-9946-50ea20b11b99",
        "parentId" : "edf19872-aea0-4e88-bd68-06ee06a9fcc2",
        "authorId" : "c29e1906-5f0b-4d7b-af8b-d664805e8c8e",
        "body" : "e.g. MetricsBindAddress = \"0.0.0.0:8080\"\r\nHealthzBindAddress = \"127.0.0.1:8080\"",
        "createdAt" : "2018-02-27T09:24:35Z",
        "updatedAt" : "2018-04-28T20:36:36Z",
        "lastEditedBy" : "c29e1906-5f0b-4d7b-af8b-d664805e8c8e",
        "tags" : [
        ]
      },
      {
        "id" : "161bc592-4098-412c-9481-b1136426a734",
        "parentId" : "edf19872-aea0-4e88-bd68-06ee06a9fcc2",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "no. this works fine.\r\n\r\nThere might be different ways to write addresses for ipv6. But this is out of our control and an error in the logs is fine.\r\n\r\nI am only replicating the old logic here. I don't like the way it is done either as there is too much magic involved.",
        "createdAt" : "2018-02-27T09:32:05Z",
        "updatedAt" : "2018-04-28T20:36:36Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "50b41a0c-f373-4410-9f52-ca1f2b362ba8",
        "parentId" : "edf19872-aea0-4e88-bd68-06ee06a9fcc2",
        "authorId" : "c29e1906-5f0b-4d7b-af8b-d664805e8c8e",
        "body" : "yes, it is old logic.",
        "createdAt" : "2018-02-27T09:43:35Z",
        "updatedAt" : "2018-04-28T20:36:36Z",
        "lastEditedBy" : "c29e1906-5f0b-4d7b-af8b-d664805e8c8e",
        "tags" : [
        ]
      }
    ],
    "commit" : "24bc981918a567c72585348e11632ba880d12c57",
    "line" : 66,
    "diffHunk" : "@@ -1,1 +64,68 @@\t\treturn err\n\t}\n\tif o.Metrics != nil && (c.ComponentConfig.MetricsBindAddress != c.ComponentConfig.HealthzBindAddress || o.Healthz == nil) {\n\t\tif err := o.Metrics.ApplyTo(&c.InsecureMetricsServing); err != nil {\n\t\t\treturn err"
  },
  {
    "id" : "b8b22d0b-d846-42da-a96c-c983530494a7",
    "prId" : 60372,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/60372#pullrequestreview-110419551",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cfeae67c-f01e-4a60-8d4a-a4cc1fb98582",
        "parentId" : null,
        "authorId" : "6252ac4b-6b9e-4dee-8931-ca3b934d52fc",
        "body" : "The above looks like cyclic, calling  updateInsecureServingOptionsFromAddress here and then calling updateAddressFromInsecureServingOptions in applyTo.",
        "createdAt" : "2018-04-06T18:56:06Z",
        "updatedAt" : "2018-04-28T20:36:36Z",
        "lastEditedBy" : "6252ac4b-6b9e-4dee-8931-ca3b934d52fc",
        "tags" : [
        ]
      },
      {
        "id" : "de47a0d6-03b0-425d-a8a7-eb63d4b6c12d",
        "parentId" : "cfeae67c-f01e-4a60-8d4a-a4cc1fb98582",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "@hzxuzhonghu had the same comment above. We call `updateInsecureServingOptionsFromAddress` to set the options from the componentconfig. We call `updateAddressFromInsecureServingOptions` to\r\n- copy the address from the options to the componentconfig\r\n- erase the componentconfig address if the respective `*InsecureServingOptions` is `nil` (a pattern we use to disable optional part of the configuration in custom plumbing, e.g. in Origin).",
        "createdAt" : "2018-04-09T11:35:01Z",
        "updatedAt" : "2018-04-28T20:36:36Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "24bc981918a567c72585348e11632ba880d12c57",
    "line" : 105,
    "diffHunk" : "@@ -1,1 +103,107 @@\t}\n\tif err := updateInsecureServingOptionsFromAddress(o.Metrics, componentConfig.MetricsBindAddress); err != nil {\n\t\treturn fmt.Errorf(\"invalid metrics address: %v\", err)\n\t}\n"
  }
]