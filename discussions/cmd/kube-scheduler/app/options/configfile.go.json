[
  {
    "id" : "09b2c00d-b0fe-424b-9827-bec10d04bb87",
    "prId" : 99597,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/99597#pullrequestreview-644819389",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a7ae146e-77c6-4ba9-9320-968540ddd01a",
        "parentId" : null,
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "why not use `runtime.Encode`?",
        "createdAt" : "2021-04-21T19:24:17Z",
        "updatedAt" : "2021-05-04T15:20:21Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      },
      {
        "id" : "a4d1faa6-a229-435a-b2a9-e82d5cb6e6f3",
        "parentId" : "a7ae146e-77c6-4ba9-9320-968540ddd01a",
        "authorId" : "521b6fc2-4b36-4594-8b5b-9d1e5bcc8759",
        "body" : "runtime.Encode (returns []byte) uses encoder.Encode (returns bytes.Buffer) internally; it's just a small wrapper. I just liked the bytes.Buffer interface better than dealing with raw []byte",
        "createdAt" : "2021-04-26T15:33:46Z",
        "updatedAt" : "2021-05-04T15:20:21Z",
        "lastEditedBy" : "521b6fc2-4b36-4594-8b5b-9d1e5bcc8759",
        "tags" : [
        ]
      }
    ],
    "commit" : "3c8e56bef9514094a640cc6f9ad3ccc8894c5c0e",
    "line" : 67,
    "diffHunk" : "@@ -1,1 +75,79 @@\t\tencoder = scheme.Codecs.EncoderForVersion(info.Serializer, configv1beta2.SchemeGroupVersion)\n\t}\n\tif err := encoder.Encode(cfg, buf); err != nil {\n\t\treturn buf, err\n\t}"
  },
  {
    "id" : "b9aa84e4-ac6d-4852-8c12-bf5d2999d374",
    "prId" : 99597,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/99597#pullrequestreview-676616969",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1f3f3e8a-8f2d-49dd-a61f-26b83cb0dc87",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "this is switching on encoding the internal config based on the external version it has in its apiVersion field? shouldn't we pick a default version to encode to (latest seems reasonable) like we did previously if cfg.TypeMeta.APIVersion is empty?",
        "createdAt" : "2021-06-04T06:54:18Z",
        "updatedAt" : "2021-06-04T07:01:48Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "b29123e4-8873-49d4-83d3-d8945bc9f76b",
        "parentId" : "1f3f3e8a-8f2d-49dd-a61f-26b83cb0dc87",
        "authorId" : "521b6fc2-4b36-4594-8b5b-9d1e5bcc8759",
        "body" : "since the internal object could've been converted from any version, there could be some information loss if we convert for example v1beta1 -> internal -> v1beta2.\r\n\r\nto be quite honest, and I discussed this with @alculquicondor, I don't understand the purpose of this feature. who is using this and for what?",
        "createdAt" : "2021-06-04T16:19:45Z",
        "updatedAt" : "2021-06-04T16:40:26Z",
        "lastEditedBy" : "521b6fc2-4b36-4594-8b5b-9d1e5bcc8759",
        "tags" : [
        ]
      },
      {
        "id" : "a31c1ee6-7d12-45f5-a223-bdcb8df8a109",
        "parentId" : "1f3f3e8a-8f2d-49dd-a61f-26b83cb0dc87",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "> I don't understand the purpose of this feature. who is using this and for what?\r\n\r\nisn't this the path taken when generating a config with `--write-config-to`?",
        "createdAt" : "2021-06-04T16:42:45Z",
        "updatedAt" : "2021-06-04T16:42:45Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "469fdddc-2284-4ccd-9113-5df042eb992a",
        "parentId" : "1f3f3e8a-8f2d-49dd-a61f-26b83cb0dc87",
        "authorId" : "521b6fc2-4b36-4594-8b5b-9d1e5bcc8759",
        "body" : "right, but I don't fully understand what that feature is used for. perhaps to generate a default config file that you can modify afterwards? if that's the only use-case for this, I agree that switching on API version here is unnecessary",
        "createdAt" : "2021-06-04T16:59:32Z",
        "updatedAt" : "2021-06-04T17:00:25Z",
        "lastEditedBy" : "521b6fc2-4b36-4594-8b5b-9d1e5bcc8759",
        "tags" : [
        ]
      },
      {
        "id" : "d16b0213-3d04-4ff7-859a-73bfdcf9da83",
        "parentId" : "1f3f3e8a-8f2d-49dd-a61f-26b83cb0dc87",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "> perhaps to generate a default config file that you can modify afterwards?\r\n\r\nit's not just a default config file, it writes the effective configuration resulting from the flags you set, so someone transitioning from flags to a config file can add `--write-config-to=foo.yaml` to their existing flag-based invocation and get the equivalent config file.",
        "createdAt" : "2021-06-04T17:08:42Z",
        "updatedAt" : "2021-06-04T17:08:42Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "251780c9-c5a1-4a8d-ac31-de1abd793b6a",
        "parentId" : "1f3f3e8a-8f2d-49dd-a61f-26b83cb0dc87",
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "using latest version sgtm",
        "createdAt" : "2021-06-04T17:12:41Z",
        "updatedAt" : "2021-06-04T17:12:41Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      },
      {
        "id" : "46bcba14-cbfa-4646-90ad-616401fb0863",
        "parentId" : "1f3f3e8a-8f2d-49dd-a61f-26b83cb0dc87",
        "authorId" : "521b6fc2-4b36-4594-8b5b-9d1e5bcc8759",
        "body" : "Done.",
        "createdAt" : "2021-06-04T17:22:14Z",
        "updatedAt" : "2021-06-04T17:22:14Z",
        "lastEditedBy" : "521b6fc2-4b36-4594-8b5b-9d1e5bcc8759",
        "tags" : [
        ]
      },
      {
        "id" : "1a69b206-f37e-4f6f-981d-04f8d6448225",
        "parentId" : "1f3f3e8a-8f2d-49dd-a61f-26b83cb0dc87",
        "authorId" : "521b6fc2-4b36-4594-8b5b-9d1e5bcc8759",
        "body" : "actually, I'm having second thoughts about this: we necessarily need to switch when someone loads a v1beta1 config file that uses a deprecated plugin because the v1beta2 encoder cannot encode plugin args for deprecated plugins. am I missing something?\r\n\r\n```bash\r\n~/src/k8s.io/kubernetes/cmd/kube-scheduler/app/options $ go test -v -run=TestSchedulerOptions/v1beta1_plugin_config\r\n=== RUN   TestSchedulerOptions\r\n=== RUN   TestSchedulerOptions/v1beta1_plugin_config\r\n    options_test.go:1123: unexpected error in encodeConfig: no kind \"ServiceAffinityArgs\" is registered for version \"kubescheduler.config.k8s.io/v1beta2\" in scheme \"k8s.io/kubernetes/pkg/scheduler/apis/config/v1beta2/conversion.go:42\"\r\n--- FAIL: TestSchedulerOptions (0.01s)\r\n    --- FAIL: TestSchedulerOptions/v1beta1_plugin_config (0.01s)\r\n```",
        "createdAt" : "2021-06-04T17:39:42Z",
        "updatedAt" : "2021-06-04T17:40:50Z",
        "lastEditedBy" : "521b6fc2-4b36-4594-8b5b-9d1e5bcc8759",
        "tags" : [
        ]
      },
      {
        "id" : "11083f00-344f-4e96-9098-667a6a22dc11",
        "parentId" : "1f3f3e8a-8f2d-49dd-a61f-26b83cb0dc87",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "I don't object to switching on APIVersion, my comment was limited to the behavior when APIVersion was empty (pick a default, instead of erroring)",
        "createdAt" : "2021-06-04T17:52:23Z",
        "updatedAt" : "2021-06-04T17:52:23Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "34e27e98-1233-4104-9f88-fb202e99e295",
        "parentId" : "1f3f3e8a-8f2d-49dd-a61f-26b83cb0dc87",
        "authorId" : "521b6fc2-4b36-4594-8b5b-9d1e5bcc8759",
        "body" : "ah I completely misread your comment. done.",
        "createdAt" : "2021-06-04T19:49:02Z",
        "updatedAt" : "2021-06-04T19:49:02Z",
        "lastEditedBy" : "521b6fc2-4b36-4594-8b5b-9d1e5bcc8759",
        "tags" : [
        ]
      }
    ],
    "commit" : "3c8e56bef9514094a640cc6f9ad3ccc8894c5c0e",
    "line" : 59,
    "diffHunk" : "@@ -1,1 +67,71 @@\n\tvar encoder runtime.Encoder\n\tswitch cfg.TypeMeta.APIVersion {\n\tcase configv1beta1.SchemeGroupVersion.String():\n\t\tencoder = scheme.Codecs.EncoderForVersion(info.Serializer, configv1beta1.SchemeGroupVersion)"
  },
  {
    "id" : "8f914116-7ce8-4a05-a556-7dd2b8136176",
    "prId" : 99597,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/99597#pullrequestreview-676464458",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "01be4756-0767-4ecf-a942-2e7ed71e9998",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "do you have a pointer to the decisions made based on this field? it's pretty strange for the external version source to change the interpretation of the converted internal config",
        "createdAt" : "2021-06-04T06:55:13Z",
        "updatedAt" : "2021-06-04T06:55:13Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "c49cbb92-11d8-43f5-8d3d-8b34719602be",
        "parentId" : "01be4756-0767-4ecf-a942-2e7ed71e9998",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "if the only decision made is a pass/fail validation decision, that would be helpful to clarify here. we explicitly don't want the internal configuration getting interpreted differently based on version",
        "createdAt" : "2021-06-04T07:01:30Z",
        "updatedAt" : "2021-06-04T07:01:30Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "e843f329-e8e1-4af4-bc6b-02c11a2a8ec7",
        "parentId" : "01be4756-0767-4ecf-a942-2e7ed71e9998",
        "authorId" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "body" : "There are two places, the validation and the plugin config defaulting logic inside the framework. The former will continue to exist, the latter will be removed as a followup to this PR (https://github.com/kubernetes/kubernetes/issues/102211).",
        "createdAt" : "2021-06-04T13:22:55Z",
        "updatedAt" : "2021-06-04T13:22:55Z",
        "lastEditedBy" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "tags" : [
        ]
      },
      {
        "id" : "770761ba-b8f0-4e7e-a7b5-8c7df4b6c9a0",
        "parentId" : "01be4756-0767-4ecf-a942-2e7ed71e9998",
        "authorId" : "521b6fc2-4b36-4594-8b5b-9d1e5bcc8759",
        "body" : "*three places. We also use this in `--write-config-to`. I've added a comment in the internal KubeSchedulerConfiguration with references to exactly what places use this field.",
        "createdAt" : "2021-06-04T16:21:38Z",
        "updatedAt" : "2021-06-04T16:40:26Z",
        "lastEditedBy" : "521b6fc2-4b36-4594-8b5b-9d1e5bcc8759",
        "tags" : [
        ]
      }
    ],
    "commit" : "3c8e56bef9514094a640cc6f9ad3ccc8894c5c0e",
    "line" : 44,
    "diffHunk" : "@@ -1,1 +52,56 @@\t\t// conversion. See KubeSchedulerConfiguration internal type definition for\n\t\t// more details.\n\t\tcfgObj.TypeMeta.APIVersion = gvk.GroupVersion().String()\n\t\treturn cfgObj, nil\n\t}"
  },
  {
    "id" : "60fbaf24-ab98-4981-9fe7-c64b8ab233ae",
    "prId" : 87628,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/87628#pullrequestreview-350454091",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6bd45aac-edfa-4d25-bb9d-ce88a21320a7",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "I don't know when this is invoked but this doesn't look rollback safe.",
        "createdAt" : "2020-01-29T21:23:17Z",
        "updatedAt" : "2020-01-29T22:19:00Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "a83cd91d-f3d1-47e4-948c-14cec0d00a54",
        "parentId" : "6bd45aac-edfa-4d25-bb9d-ce88a21320a7",
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "This is only used for debugging purposes.\r\nIf you specify an output config file, we produce it and then exit the binary. This way a dev can verify defaults and/or validation is applied properly.\r\nSo, this should be safe, as everything will be converted to v1alpha2 internally.",
        "createdAt" : "2020-01-29T21:58:36Z",
        "updatedAt" : "2020-01-29T22:19:00Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      }
    ],
    "commit" : "3d83ef2e8ec5a4008aa21dee89cae8b13c21f84b",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +79,83 @@\t}\n\n\tencoder := kubeschedulerscheme.Codecs.EncoderForVersion(info.Serializer, kubeschedulerconfigv1alpha2.SchemeGroupVersion)\n\n\tconfigFile, err := os.Create(fileName)"
  }
]