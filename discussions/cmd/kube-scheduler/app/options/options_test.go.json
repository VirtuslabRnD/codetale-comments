[
  {
    "id" : "7845d17f-a8bf-4a7f-ae12-486402a700e9",
    "prId" : 99597,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/99597#pullrequestreview-600919043",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "38199153-9ea7-45b0-af2f-46714a6addb0",
        "parentId" : null,
        "authorId" : "521b6fc2-4b36-4594-8b5b-9d1e5bcc8759",
        "body" : "@hprateek43 I changed this back to make sure v1beta1 and v1beta2 tests were similar. Was there a reason for your change that I missed?",
        "createdAt" : "2021-03-01T16:22:37Z",
        "updatedAt" : "2021-05-04T15:20:20Z",
        "lastEditedBy" : "521b6fc2-4b36-4594-8b5b-9d1e5bcc8759",
        "tags" : [
        ]
      }
    ],
    "commit" : "3c8e56bef9514094a640cc6f9ad3ccc8894c5c0e",
    "line" : 228,
    "diffHunk" : "@@ -1,1 +450,454 @@\t\t\t\t\tRemoteKubeConfigFileOptional: true,\n\t\t\t\t\tAlwaysAllowPaths:             []string{\"/healthz\", \"/readyz\", \"/livez\"}, // note: this does not match /healthz/ or /healthz/*\n\t\t\t\t\tAlwaysAllowGroups:            []string{\"system:masters\"},\n\t\t\t\t},\n\t\t\t\tLogs: logs.NewOptions(),"
  },
  {
    "id" : "6d0d9d14-8d38-4931-bc41-a0a7828a02bd",
    "prId" : 84129,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/84129#pullrequestreview-309827850",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "32ff7485-21a6-4c85-b856-880081d59748",
        "parentId" : null,
        "authorId" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "body" : "Did you mean to leave these commented out?",
        "createdAt" : "2019-10-22T16:49:54Z",
        "updatedAt" : "2019-10-31T12:44:53Z",
        "lastEditedBy" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "tags" : [
        ]
      },
      {
        "id" : "5b023392-a377-4086-b330-5fc264e73786",
        "parentId" : "32ff7485-21a6-4c85-b856-880081d59748",
        "authorId" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "body" : "(and above)",
        "createdAt" : "2019-10-22T16:50:03Z",
        "updatedAt" : "2019-10-31T12:44:53Z",
        "lastEditedBy" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "tags" : [
        ]
      },
      {
        "id" : "cd2bf9d8-d54d-4d85-b3af-ede3bf2dca30",
        "parentId" : "32ff7485-21a6-4c85-b856-880081d59748",
        "authorId" : "9aec7491-cc5b-4389-aa6a-bb1d8e1b32cd",
        "body" : "Hmm I though it might be good to leave some indication what the expected behavior is in the future, but I'm not dogmatic about that. WDYT?",
        "createdAt" : "2019-10-24T17:23:22Z",
        "updatedAt" : "2019-10-31T12:44:53Z",
        "lastEditedBy" : "9aec7491-cc5b-4389-aa6a-bb1d8e1b32cd",
        "tags" : [
        ]
      },
      {
        "id" : "8a202e92-7d0a-4fcb-84c4-eecf9eff97bf",
        "parentId" : "32ff7485-21a6-4c85-b856-880081d59748",
        "authorId" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "body" : "Ah, got it. Let's add a TODO comment then:\r\n```\r\nTODO(obitech): Uncomment this test when v1alpha2 is available.\r\n```\r\n\r\nWe should also be prepared (in the future) for separate test cases for v1alpha1 and v1alpha2 configs.",
        "createdAt" : "2019-10-29T23:20:36Z",
        "updatedAt" : "2019-10-31T12:44:53Z",
        "lastEditedBy" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "tags" : [
        ]
      },
      {
        "id" : "e7262fe3-fb39-49d1-972c-c907220d449f",
        "parentId" : "32ff7485-21a6-4c85-b856-880081d59748",
        "authorId" : "9aec7491-cc5b-4389-aa6a-bb1d8e1b32cd",
        "body" : "Done! Happy to rework the tests in the future",
        "createdAt" : "2019-10-31T12:03:09Z",
        "updatedAt" : "2019-10-31T12:44:53Z",
        "lastEditedBy" : "9aec7491-cc5b-4389-aa6a-bb1d8e1b32cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "b15aba547a633e6e89e1c5ff85c1fadddba6d537",
    "line" : 48,
    "diffHunk" : "@@ -1,1 +513,517 @@\t\t\t// TODO (obitech): Remove this comment and add a new test for v1alpha2, when it's available, as this should fail then.\n\t\t\t// expectedError: `key \"leaderElect\" already set`,\n\t\t\t// checkErrFn:    runtime.IsStrictDecodingError,\n\t\t\texpectedUsername: \"config\",\n\t\t\texpectedConfig: kubeschedulerconfig.KubeSchedulerConfiguration{"
  },
  {
    "id" : "53c17ea0-fff5-48ee-babb-d43e258d3e10",
    "prId" : 83030,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/83030#pullrequestreview-292066189",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e77f4cec-bd5e-4911-a64c-d3485f3ef32e",
        "parentId" : null,
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "Any chance that this and the rest of expectedError can be migrated to `checkErrFn`?",
        "createdAt" : "2019-09-23T20:04:00Z",
        "updatedAt" : "2019-09-26T15:41:32Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      },
      {
        "id" : "7a698693-223a-405f-a781-1c3ac11e5aca",
        "parentId" : "e77f4cec-bd5e-4911-a64c-d3485f3ef32e",
        "authorId" : "bf66f693-b705-46d8-a378-3750b55f033c",
        "body" : "IMO it's pretty useful to have these be separate.\r\nWe could add a comment explaining the value. (they're both convenient and optional)\r\n\r\nOtherwise your functions could end up looking like this:\r\n```go\r\nexpectedError: func(err error) bool {\r\n    if ! strings.Contains(\"my expected string\") {\r\n        return false\r\n    }\r\n    return runtime.IsStrictDecodingError(err)\r\n}\r\n```\r\nNote how:\r\n- `runtime.IsStrictDecodingError` now has to be wrapped\r\n- The function has to branch to support both cases\r\n- `string.Contains` is not using assert\r\n  ( If it was, you'd have to close scope on `t`, and you wouldn't return it or the assertion could be conflated with the function. You could change the signature to take in `t` and not return anything, but then you'd always have to wrap common type-check functions for errors. )\r\n\r\nSince checking for error string contents is so common and the runner code is simple to maintain, I think it's fine to support both fields.",
        "createdAt" : "2019-09-23T21:15:40Z",
        "updatedAt" : "2019-09-26T15:41:32Z",
        "lastEditedBy" : "bf66f693-b705-46d8-a378-3750b55f033c",
        "tags" : [
        ]
      },
      {
        "id" : "9e3f43f6-2eaf-44a1-adea-5be3da1c749c",
        "parentId" : "e77f4cec-bd5e-4911-a64c-d3485f3ef32e",
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "I wouldn't advocate for wrapping `string.Contains`, but I was hoping the current errors would have some type associated with them.",
        "createdAt" : "2019-09-23T21:31:33Z",
        "updatedAt" : "2019-09-26T15:41:32Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      }
    ],
    "commit" : "6acef2b94c289d37afda6ec97e652d5dcf38e12f",
    "line" : 63,
    "diffHunk" : "@@ -1,1 +458,462 @@\t\t\tname:          \"no config\",\n\t\t\toptions:       &Options{},\n\t\t\texpectedError: \"no configuration has been provided\",\n\t\t},\n\t\t{"
  },
  {
    "id" : "203c27eb-0e1f-49b6-919c-5d9e918eb942",
    "prId" : 83030,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/83030#pullrequestreview-293256132",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1458e828-a656-48b1-a3b9-ef0e975a5819",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "can you ensure the error message mentions the invalid field somehow?",
        "createdAt" : "2019-09-25T12:56:36Z",
        "updatedAt" : "2019-09-26T15:41:32Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "b96833f1-c49b-4ec1-b8e0-2c536f0955d3",
        "parentId" : "1458e828-a656-48b1-a3b9-ef0e975a5819",
        "authorId" : "9aec7491-cc5b-4389-aa6a-bb1d8e1b32cd",
        "body" : "I added part of the expected error messages in the test cases under `expectedError`",
        "createdAt" : "2019-09-25T17:51:09Z",
        "updatedAt" : "2019-09-26T15:41:32Z",
        "lastEditedBy" : "9aec7491-cc5b-4389-aa6a-bb1d8e1b32cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "6acef2b94c289d37afda6ec97e652d5dcf38e12f",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +134,138 @@  leaderElect: true\nfoo: bar`, configKubeconfig)), os.FileMode(0600)); err != nil {\n\t\tt.Fatal(err)\n\t}\n"
  },
  {
    "id" : "9edb0802-a5ad-4875-a9a2-23b8b3f54620",
    "prId" : 77501,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/77501#pullrequestreview-236367479",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "090f9952-018f-410b-9c06-d81b6cef6f48",
        "parentId" : null,
        "authorId" : "5f2c1de8-4266-42c0-b343-ba247af3578f",
        "body" : "How much work would it be to add `pluginConfig` in this test?",
        "createdAt" : "2019-05-10T22:27:55Z",
        "updatedAt" : "2019-05-17T23:24:50Z",
        "lastEditedBy" : "5f2c1de8-4266-42c0-b343-ba247af3578f",
        "tags" : [
        ]
      },
      {
        "id" : "1946c000-c6c5-4a44-a868-3d1a03f2b051",
        "parentId" : "090f9952-018f-410b-9c06-d81b6cef6f48",
        "authorId" : "e9ccec4a-f0c0-4820-a947-6050b5de65a5",
        "body" : "Thanks, I have added the unit test for the plugin configuration.",
        "createdAt" : "2019-05-11T08:09:56Z",
        "updatedAt" : "2019-05-17T23:24:50Z",
        "lastEditedBy" : "e9ccec4a-f0c0-4820-a947-6050b5de65a5",
        "tags" : [
        ]
      }
    ],
    "commit" : "0734d1debb79be8164c8cfca85c7393c0aed6313",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +155,159 @@clientConnection:\n  kubeconfig: \"%s\"\nplugins:\n  reserve:\n    enabled:"
  },
  {
    "id" : "3537e9aa-e21d-49b3-b111-fe792ce5b216",
    "prId" : 77501,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/77501#pullrequestreview-239145577",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f0417607-866a-4d20-b4f1-85c840fc639b",
        "parentId" : null,
        "authorId" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "body" : "Could you also add disabled plugins here for testing purposes?",
        "createdAt" : "2019-05-17T20:48:11Z",
        "updatedAt" : "2019-05-17T23:24:50Z",
        "lastEditedBy" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "tags" : [
        ]
      },
      {
        "id" : "c0350e8f-e1f3-4a44-b354-8dc89c6a3944",
        "parentId" : "f0417607-866a-4d20-b4f1-85c840fc639b",
        "authorId" : "e9ccec4a-f0c0-4820-a947-6050b5de65a5",
        "body" : "Updated. PTAL.\r\nThanks!!",
        "createdAt" : "2019-05-17T21:38:50Z",
        "updatedAt" : "2019-05-17T23:24:50Z",
        "lastEditedBy" : "e9ccec4a-f0c0-4820-a947-6050b5de65a5",
        "tags" : [
        ]
      }
    ],
    "commit" : "0734d1debb79be8164c8cfca85c7393c0aed6313",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +159,163 @@    enabled:\n    - name: foo\n    - name: bar\n    disabled:\n    - name: baz"
  },
  {
    "id" : "ebb5ef66-1623-4669-9aa5-55e0a7b269b8",
    "prId" : 67352,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/67352#pullrequestreview-146246732",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "98b785c4-922d-4382-87b7-21b14485c9b9",
        "parentId" : null,
        "authorId" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "body" : "What are we trying to achieve here? I know that when someone changes defaults, they need to change this test as well. Are we trying to prevent accidental change of defaults?\r\nOne limitation of this test is that people must remember to update it when adding few fields to the config.",
        "createdAt" : "2018-08-13T21:39:54Z",
        "updatedAt" : "2018-08-16T14:50:50Z",
        "lastEditedBy" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "tags" : [
        ]
      },
      {
        "id" : "0bde4014-df56-43be-b960-fdf87b573b4d",
        "parentId" : "98b785c4-922d-4382-87b7-21b14485c9b9",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "> Are we trying to prevent accidental change of defaults?\r\n\r\nYes, this. The same config file version loaded across releases should have the same behavior unless we intentionally and deliberately change it. This will catch an unintentional change. ",
        "createdAt" : "2018-08-13T21:46:21Z",
        "updatedAt" : "2018-08-16T14:50:50Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "cce32f78-04e6-4521-bb58-154e2a3700a4",
        "parentId" : "98b785c4-922d-4382-87b7-21b14485c9b9",
        "authorId" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "body" : "I see. One idea to ensure that people add fields to this test when new fields are added in the future is to add a check for the number of fields in the `KubeSchedulerConfiguration` struct (reflect.NumField) with a comment explaining that when the check fails, the developer should add proper default values to the test.",
        "createdAt" : "2018-08-13T23:58:32Z",
        "updatedAt" : "2018-08-16T14:50:50Z",
        "lastEditedBy" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "tags" : [
        ]
      },
      {
        "id" : "ccf58da5-f6c4-44c1-b742-19a30d1d6308",
        "parentId" : "98b785c4-922d-4382-87b7-21b14485c9b9",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "We could do that too, but it's not just field additions. Code motion and changes to defaults in shared config structs can change things accidentally, and we'd want to catch that. ",
        "createdAt" : "2018-08-14T00:02:37Z",
        "updatedAt" : "2018-08-16T14:50:50Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "c29fe65b-056f-4e44-b088-ca92e9d79817",
        "parentId" : "98b785c4-922d-4382-87b7-21b14485c9b9",
        "authorId" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "body" : "Yes, I didn't mean to add that check instead of this PR. I meant to add that check to this PR to ensure that other developers add the default values of new fields to the test that you have added in this PR.",
        "createdAt" : "2018-08-14T00:08:55Z",
        "updatedAt" : "2018-08-16T14:50:50Z",
        "lastEditedBy" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "tags" : [
        ]
      },
      {
        "id" : "62b2b7e0-cfc1-41f5-84c8-919587557ed3",
        "parentId" : "98b785c4-922d-4382-87b7-21b14485c9b9",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "I think the test as written will catch what we care about, which is changes in defaults. If a new field has a non-empty default, the test will catch it. If it has no default, I don't really care if this test has `Foo: \"\"` or omits `Foo`... the result is the same.",
        "createdAt" : "2018-08-14T17:36:26Z",
        "updatedAt" : "2018-08-16T14:50:50Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "e4e6c298-0a95-4958-aac6-db4cbea60799",
        "parentId" : "98b785c4-922d-4382-87b7-21b14485c9b9",
        "authorId" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "body" : "Makes sense",
        "createdAt" : "2018-08-14T20:51:36Z",
        "updatedAt" : "2018-08-16T14:50:50Z",
        "lastEditedBy" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "tags" : [
        ]
      }
    ],
    "commit" : "13de114286ec738e8ed46b112a934399f61b61e4",
    "line" : 41,
    "diffHunk" : "@@ -1,1 +152,156 @@\t\t\t},\n\t\t\texpectedUsername: \"config\",\n\t\t\texpectedConfig: componentconfig.KubeSchedulerConfiguration{\n\t\t\t\tSchedulerName:                  \"default-scheduler\",\n\t\t\t\tAlgorithmSource:                componentconfig.SchedulerAlgorithmSource{Provider: &defaultSource},"
  },
  {
    "id" : "c0b16bee-4237-469f-a509-825b5279f0c1",
    "prId" : 66916,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/66916#pullrequestreview-148583924",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1c7463b5-ba03-45f1-99f1-baee84fd30a1",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "leave a test case in place that attempts to load a `componentconfig.v1alpha1` file and ensures it errors with a good message",
        "createdAt" : "2018-08-08T21:15:01Z",
        "updatedAt" : "2018-08-24T03:03:01Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "5f8991c1-90d9-4d75-a498-c50007aa0c41",
        "parentId" : "1c7463b5-ba03-45f1-99f1-baee84fd30a1",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "Is this done?",
        "createdAt" : "2018-08-20T09:35:50Z",
        "updatedAt" : "2018-08-24T03:03:01Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "62f3b5ad-7bce-477a-9075-77980af02048",
        "parentId" : "1c7463b5-ba03-45f1-99f1-baee84fd30a1",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "yes, the `oldconfigFile` case below",
        "createdAt" : "2018-08-22T17:17:15Z",
        "updatedAt" : "2018-08-24T03:03:01Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "7f8a59162b9a6145623df7351e34bcb4b309b4d5",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +71,75 @@\tconfigKubeconfig := filepath.Join(tmpDir, \"config.kubeconfig\")\n\tif err := ioutil.WriteFile(configFile, []byte(fmt.Sprintf(`\napiVersion: kubescheduler.config.k8s.io/v1alpha1\nkind: KubeSchedulerConfiguration\nclientConnection:"
  },
  {
    "id" : "f871af98-68a6-4d0d-9a1e-105703fa4b54",
    "prId" : 66722,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/66722#pullrequestreview-145843636",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "332301d9-d113-40fe-a530-6e5217bf6181",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "I noticed this test isn't actually inspecting any values of the resulting config, just testing the user credentials.\r\n\r\nI expanded it to look at the config that is loaded in https://github.com/kubernetes/kubernetes/pull/67352\r\n\r\nThat test will help us notice of any defaults change unexpectedly while moving things around, switching to shared structs, etc.",
        "createdAt" : "2018-08-13T21:28:32Z",
        "updatedAt" : "2018-08-14T16:02:32Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "db855a2b2df0ba61f8d6b715dce5b37d7cc5f0d6",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +143,147 @@\t\t\toptions: &Options{\n\t\t\t\tComponentConfig: componentconfig.KubeSchedulerConfiguration{\n\t\t\t\t\tClientConnection: apimachineryconfig.ClientConnectionConfiguration{\n\t\t\t\t\t\tKubeconfig: flagKubeconfig}}},\n\t\t\texpectedUsername: \"flag\","
  },
  {
    "id" : "d30ded16-2a7f-4efc-9007-94362f4e34e1",
    "prId" : 65507,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/65507#pullrequestreview-132254473",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e7b78014-4e18-4833-bd9b-a97be94e0f42",
        "parentId" : null,
        "authorId" : "38ca4f80-c365-4775-8981-1e56b713b07b",
        "body" : "q: Is it safe to assume that tempdir always exists especially when running in containers?",
        "createdAt" : "2018-06-27T00:59:36Z",
        "updatedAt" : "2018-06-27T00:59:36Z",
        "lastEditedBy" : "38ca4f80-c365-4775-8981-1e56b713b07b",
        "tags" : [
        ]
      },
      {
        "id" : "3e38edbc-1c72-4d12-94ee-9fd8b0b02114",
        "parentId" : "e7b78014-4e18-4833-bd9b-a97be94e0f42",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "Many unit tests already do this, so yes",
        "createdAt" : "2018-06-27T01:01:21Z",
        "updatedAt" : "2018-06-27T01:01:21Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "14d31aff480a4399e83720a066627b23cdef4c54",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +32,36 @@func TestSchedulerOptions(t *testing.T) {\n\t// temp dir\n\ttmpDir, err := ioutil.TempDir(\"\", \"scheduler-options\")\n\tif err != nil {\n\t\tt.Fatal(err)"
  },
  {
    "id" : "e710b134-d476-4c81-a851-67be75a04395",
    "prId" : 65507,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/65507#pullrequestreview-132254288",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b0dc07da-6009-4b5f-bc44-3b83537a743a",
        "parentId" : null,
        "authorId" : "38ca4f80-c365-4775-8981-1e56b713b07b",
        "body" : "This is pretty clever!! ",
        "createdAt" : "2018-06-27T01:00:01Z",
        "updatedAt" : "2018-06-27T01:00:01Z",
        "lastEditedBy" : "38ca4f80-c365-4775-8981-1e56b713b07b",
        "tags" : [
        ]
      }
    ],
    "commit" : "14d31aff480a4399e83720a066627b23cdef4c54",
    "line" : 122,
    "diffHunk" : "@@ -1,1 +120,124 @@\n\t// Insulate this test from picking up in-cluster config when run inside a pod\n\t// We can't assume we have permissions to write to /var/run/secrets/... from a unit test to mock in-cluster config for testing\n\toriginalHost := os.Getenv(\"KUBERNETES_SERVICE_HOST\")\n\tif len(originalHost) > 0 {"
  },
  {
    "id" : "79973460-c592-476d-b2d0-3b8d5199bcc4",
    "prId" : 65507,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/65507#pullrequestreview-132609052",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8e741e2c-c811-46e1-9dad-d04e1ef26b53",
        "parentId" : null,
        "authorId" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "body" : "it would be better to `continue` instead of `return` here and below.",
        "createdAt" : "2018-06-27T04:27:45Z",
        "updatedAt" : "2018-06-27T04:31:16Z",
        "lastEditedBy" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "tags" : [
        ]
      },
      {
        "id" : "59b255e8-4e31-4ad6-9d24-bab3cc98543c",
        "parentId" : "8e741e2c-c811-46e1-9dad-d04e1ef26b53",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "This is inside a t.Run function… returning continues to the next test case",
        "createdAt" : "2018-06-27T11:02:52Z",
        "updatedAt" : "2018-06-27T11:02:52Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "ca5721a3-be08-4168-8408-bd261e57f974",
        "parentId" : "8e741e2c-c811-46e1-9dad-d04e1ef26b53",
        "authorId" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "body" : "Yes, you are right! I missed that it is inside t.Run.\r\nThanks again!",
        "createdAt" : "2018-06-27T21:07:11Z",
        "updatedAt" : "2018-06-27T21:07:11Z",
        "lastEditedBy" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "tags" : [
        ]
      }
    ],
    "commit" : "14d31aff480a4399e83720a066627b23cdef4c54",
    "line" : 172,
    "diffHunk" : "@@ -1,1 +170,174 @@\t\t\t\t\tt.Errorf(\"expected %q, got %q\", tc.expectedError, err.Error())\n\t\t\t\t}\n\t\t\t\treturn\n\t\t\t}\n"
  },
  {
    "id" : "d49e4b35-c6b8-42b6-87f8-32ed6be1d6bd",
    "prId" : 65507,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/65507#pullrequestreview-132281499",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "aa75144e-962b-414e-b796-58233f625013",
        "parentId" : null,
        "authorId" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "body" : "Impressive! Thanks for writing the test.",
        "createdAt" : "2018-06-27T04:28:42Z",
        "updatedAt" : "2018-06-27T04:31:16Z",
        "lastEditedBy" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "tags" : [
        ]
      }
    ],
    "commit" : "14d31aff480a4399e83720a066627b23cdef4c54",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +30,34 @@)\n\nfunc TestSchedulerOptions(t *testing.T) {\n\t// temp dir\n\ttmpDir, err := ioutil.TempDir(\"\", \"scheduler-options\")"
  }
]