[
  {
    "id" : "4f538496-ee98-402b-8b1f-0086a5efc14d",
    "prId" : 88728,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/88728#pullrequestreview-369656620",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c1807ec0-2acd-4c35-bbb9-a1711c10bdcc",
        "parentId" : null,
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "Where is this coming from?",
        "createdAt" : "2020-03-03T15:13:08Z",
        "updatedAt" : "2020-03-19T23:37:17Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      },
      {
        "id" : "a07dc2df-be75-4d48-9fde-7bd16e0f60af",
        "parentId" : "c1807ec0-2acd-4c35-bbb9-a1711c10bdcc",
        "authorId" : "f28b709f-13c6-489d-a940-4b17c129a45b",
        "body" : "because we call `app.Setup` now, and it creates a configz, we need to clean up this config for next test case, or just log the error and don't return directly\r\n\r\n```\r\n\tif cz, err := configz.New(\"componentconfig\"); err == nil {\r\n\t\tcz.Set(cc.ComponentConfig)\r\n\t} else {\r\n\t\treturn nil, nil, fmt.Errorf(\"unable to register configz: %s\", err)\r\n\t}\r\n```",
        "createdAt" : "2020-03-04T13:23:09Z",
        "updatedAt" : "2020-03-19T23:37:17Z",
        "lastEditedBy" : "f28b709f-13c6-489d-a940-4b17c129a45b",
        "tags" : [
        ]
      },
      {
        "id" : "37393b9b-c994-411e-a702-6b654b04e856",
        "parentId" : "c1807ec0-2acd-4c35-bbb9-a1711c10bdcc",
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "I think we need to reach to the OWNERS of the users of this library (`/pkg/integration/serving`) to learn what are their expectations. Perhaps we can change this to be much closer to `runCommand`. Otherwise, anything that is not common, should go outside of `Setup`.",
        "createdAt" : "2020-03-04T15:35:54Z",
        "updatedAt" : "2020-03-19T23:37:17Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      },
      {
        "id" : "c0d51cd5-14d1-4074-945d-903ae56e2924",
        "parentId" : "c1807ec0-2acd-4c35-bbb9-a1711c10bdcc",
        "authorId" : "f28b709f-13c6-489d-a940-4b17c129a45b",
        "body" : "Actually, if we move this to `Run`, we still need to add `configz.Delete(\"componentconfig\")` because `app.Run` is also called by `StartTestServer`.\r\n\r\nWe can find similar code in `cmd/kube-controller-manager/app/controllermanager.go` which also has a testserver used by `/pkg/integration/serving`\r\n\r\n```\r\nfunc Run(c *config.CompletedConfig, stopCh <-chan struct{}) error {\r\n\t// To help debugging, immediately log version\r\n\tklog.Infof(\"Version: %+v\", version.Get())\r\n\r\n\tif cfgz, err := configz.New(ConfigzName); err == nil {\r\n\t\tcfgz.Set(c.ComponentConfig)\r\n\t} else {\r\n\t\tklog.Errorf(\"unable to register configz: %v\", err)\r\n\t}\r\n```\r\n\r\nit logs an error and continue the execution, otherwise it will also need a `configz.Delete`\r\n\r\n",
        "createdAt" : "2020-03-05T14:34:20Z",
        "updatedAt" : "2020-03-19T23:37:17Z",
        "lastEditedBy" : "f28b709f-13c6-489d-a940-4b17c129a45b",
        "tags" : [
        ]
      },
      {
        "id" : "d7ac603d-fc51-41f6-8903-890b0f8a75f2",
        "parentId" : "c1807ec0-2acd-4c35-bbb9-a1711c10bdcc",
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "That is true. But at least we don't need to worry about it when testing Setup. If this is what other binaries are doing for the serving test, that's great.",
        "createdAt" : "2020-03-05T15:17:40Z",
        "updatedAt" : "2020-03-19T23:37:17Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      }
    ],
    "commit" : "16015a691c4feadcfa5d59432c92712e82979509",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +68,72 @@\t\t\tos.RemoveAll(result.TmpDir)\n\t\t}\n\t\tconfigz.Delete(\"componentconfig\")\n\t}\n\tdefer func() {"
  },
  {
    "id" : "e9e2a00e-3a4a-4546-ace4-2c72d0a18bf9",
    "prId" : 82072,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/82072#pullrequestreview-286800441",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d34a6dc3-e46b-4566-8ed9-b6b20c584aee",
        "parentId" : null,
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "fix `tearDown` to cancel the context, instead of closing a channel that is not used anymore.",
        "createdAt" : "2019-09-11T13:49:03Z",
        "updatedAt" : "2019-10-17T01:11:41Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      }
    ],
    "commit" : "47a6c5b69357549f5a01540521d7c9a86a3b4fbb",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +125,129 @@\t\t\terrCh <- err\n\t\t}\n\t}(ctx)\n\n\tt.Logf(\"Waiting for /healthz to be ok...\")"
  }
]