[
  {
    "id" : "28fa1f52-9e53-455a-8346-ea5b080b0633",
    "prId" : 2517,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d4da49c5-2119-41f4-bfcc-bc6b64109907",
        "parentId" : null,
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Will this break new clients against old servers?\n",
        "createdAt" : "2014-11-24T00:44:55Z",
        "updatedAt" : "2014-11-25T06:25:18Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "4ab9978f-e4d2-469f-9a0c-482497c7ec8f",
        "parentId" : "d4da49c5-2119-41f4-bfcc-bc6b64109907",
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "I don't think so...\n",
        "createdAt" : "2014-11-24T16:45:38Z",
        "updatedAt" : "2014-11-25T06:25:18Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "acf6d828005aaefb11a65d7ba8e971137915aa86",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +161,165 @@\tdataInput := readConfigData()\n\terr := kubecfg.ValidateObject(dataInput, c)\n\tif err != nil {\n\t\tglog.Fatalf(\"Error validating %v as an object for %v: %v\\n\", *config, storage, err)\n\t}"
  },
  {
    "id" : "0b9a1f98-bade-4b31-bdc3-1e2dba68d7b5",
    "prId" : 1386,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "08a48c38-7322-4fc3-8e8a-55ca5d21817c",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Can we add this stuff to the ~/.kubernetes_auth file instead?\n",
        "createdAt" : "2014-09-19T22:53:12Z",
        "updatedAt" : "2014-09-19T22:53:12Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "21d32b87-2d88-4b7d-b3f3-a7f733a5a74c",
        "parentId" : "08a48c38-7322-4fc3-8e8a-55ca5d21817c",
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "It will work in both places. (since the auth file is just a serialized AuthInfo struct)  I'm in favor of flexibility, since you may generate different user/password for each cluster, but use a shared CA file.\n\nBut if you feel strongly, I'll remove the flags.\n",
        "createdAt" : "2014-09-19T22:55:14Z",
        "updatedAt" : "2014-09-19T22:55:14Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      },
      {
        "id" : "bb009a86-fc6d-4b9b-9d49-e43acc21890e",
        "parentId" : "08a48c38-7322-4fc3-8e8a-55ca5d21817c",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "I don't feel super strongly, but I think it'll be a huge pain to use these flags if you want to do much of anything. Your choice, I guess.\n",
        "createdAt" : "2014-09-19T22:57:57Z",
        "updatedAt" : "2014-09-19T22:57:57Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "6b164cde-07a6-4eae-b160-fb40a81f586d",
        "parentId" : "08a48c38-7322-4fc3-8e8a-55ca5d21817c",
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "Right, that's my point.  If you want to use .kubernetes_auth you can just put the relevant data in there and it will work as it stands in this PR, since it will deserialize.\n\nIf you then want to override using the flags, you can do that too.\n\nSo it works either way you want it.\n",
        "createdAt" : "2014-09-19T23:01:20Z",
        "updatedAt" : "2014-09-19T23:01:20Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "8dff6f12d797fc4ce1f6727cc256619bacd0270d",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +62,66 @@\tcaFile        = flag.String(\"certificate_authority\", \"\", \"Path to a cert. file for the certificate authority\")\n\tcertFile      = flag.String(\"client_certificate\", \"\", \"Path to a client certificate for TLS.\")\n\tkeyFile       = flag.String(\"client_key\", \"\", \"Path to a client key file for TLS.\")\n)\n"
  },
  {
    "id" : "27ad826e-e4fa-4186-b34b-5e9c8f1a9570",
    "prId" : 1211,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d6715a5a-264f-441e-9a10-cb584789c8aa",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Recommend tossing this whole block into its own function.\n",
        "createdAt" : "2014-09-08T19:03:14Z",
        "updatedAt" : "2014-09-09T21:50:49Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "35a50a94da0bd8d787bf0c28065350bb9179bcf4",
    "line" : null,
    "diffHunk" : "@@ -1,1 +100,104 @@func readConfigData() []byte {\n\t// we look for http:// or https:// to determine if valid URL, otherwise do normal file IO\n\tif strings.Index(*config, \"http://\") == 0 || strings.Index(*config, \"https://\") == 0 {\n\t\tresp, err := http.Get(*config)\n\t\tif err != nil {"
  },
  {
    "id" : "2a5db4f7-c6c2-470a-bc39-4cdf0ce50f4d",
    "prId" : 570,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e3e19d69-98cc-45ee-b103-0cc896f0ab0a",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "This assumes the arg doesn't start with a /, which it might.\n",
        "createdAt" : "2014-07-23T05:51:44Z",
        "updatedAt" : "2014-07-23T05:51:44Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "fbd7bc375fd6616bfb76759f78f8e70c100f0497",
    "line" : 54,
    "diffHunk" : "@@ -1,1 +164,168 @@\tverb := \"\"\n\tsegments := strings.SplitN(flag.Arg(1), \"/\", 2)\n\tstorage := segments[0]\n\tpath := strings.Trim(flag.Arg(1), \"/\")\n\tsetBody := false"
  }
]