[
  {
    "id" : "ad8acb42-b84f-495f-bcd5-b2b3a9fdcdec",
    "prId" : 5771,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/5771#pullrequestreview-194965100",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9149107b-b1f4-4b1c-a829-1bdc6964630d",
        "parentId" : null,
        "authorId" : "37519144-0f9f-4b2b-85f7-34dde9be2e11",
        "body" : "üëç ",
        "createdAt" : "2019-01-22T11:49:17Z",
        "updatedAt" : "2019-01-22T16:35:55Z",
        "lastEditedBy" : "37519144-0f9f-4b2b-85f7-34dde9be2e11",
        "tags" : [
        ]
      }
    ],
    "commit" : "1060a38929bdda853a00ccb4aef347d03c67dec7",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +53,57 @@Such encoding required a lot of boilerplate, especially when defining type classes.\nIn Dotty, this is no longer the case,\nand type classes with infix syntax become very straightforward to define!\nFor example, consider:\n"
  },
  {
    "id" : "7c7361d2-cd96-4971-a0af-38541fcc33c3",
    "prId" : 5771,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/5771#pullrequestreview-194968349",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "97613456-2fe6-49e3-8e2f-7450fe59aff4",
        "parentId" : null,
        "authorId" : "37519144-0f9f-4b2b-85f7-34dde9be2e11",
        "body" : "I think we dive in the topic of extension methods & type classes directly by skipping generic extension methods. Yes, it has been less straightforward before, but extension methods are a general language feature (others coming from other ecosystems do not use them for type classes only). This is why I left more elaborate examples out.",
        "createdAt" : "2019-01-22T11:51:47Z",
        "updatedAt" : "2019-01-22T16:35:55Z",
        "lastEditedBy" : "37519144-0f9f-4b2b-85f7-34dde9be2e11",
        "tags" : [
        ]
      },
      {
        "id" : "9ffc4117-326b-4c0d-bdca-20e59ae51ce2",
        "parentId" : "97613456-2fe6-49e3-8e2f-7450fe59aff4",
        "authorId" : "98bdc06d-7937-462c-9d62-1f850e7819aa",
        "body" : "By _elaborate_, you mean that it has a type parameter? I think most Scala users (even beginners) won't have a problem understanding this code snippet. But of course I can change `ListSemigroup` to `StringSemigroup` for example, if that makes it simpler.",
        "createdAt" : "2019-01-22T11:58:03Z",
        "updatedAt" : "2019-01-22T16:35:55Z",
        "lastEditedBy" : "98bdc06d-7937-462c-9d62-1f850e7819aa",
        "tags" : [
        ]
      }
    ],
    "commit" : "1060a38929bdda853a00ccb4aef347d03c67dec7",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +54,58 @@In Dotty, this is no longer the case,\nand type classes with infix syntax become very straightforward to define!\nFor example, consider:\n\n```scala"
  }
]