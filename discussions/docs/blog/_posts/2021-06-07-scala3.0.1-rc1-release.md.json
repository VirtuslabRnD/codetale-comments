[
  {
    "id" : "0acaa786-7757-4fc7-b5c9-4648b1cec22d",
    "prId" : 12699,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/12699#pullrequestreview-675669390",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8090ff48-1115-417f-a905-b0be43b45dc5",
        "parentId" : null,
        "authorId" : "3a3c9c08-5985-41f6-a86b-7fc5a427f51a",
        "body" : "/cc @neko-kai ",
        "createdAt" : "2021-06-03T14:44:14Z",
        "updatedAt" : "2021-06-03T14:44:14Z",
        "lastEditedBy" : "3a3c9c08-5985-41f6-a86b-7fc5a427f51a",
        "tags" : [
        ]
      },
      {
        "id" : "8e7e02d7-a0ef-4517-bb54-cc101b17691a",
        "parentId" : "8090ff48-1115-417f-a905-b0be43b45dc5",
        "authorId" : "f7c6b5d4-6d93-4f3d-b583-a110d7a49c7d",
        "body" : "@anatoliykmetyuk I would add a link to the migration guide which has more details on how to to make use of it from a user perspective - https://docs.scala-lang.org/scala3/guides/migration/plugin-kind-projector.html â€“ and a quick mention that `-Ykind-projector:underscores` option is required to enable it.",
        "createdAt" : "2021-06-03T19:52:44Z",
        "updatedAt" : "2021-06-03T19:52:44Z",
        "lastEditedBy" : "f7c6b5d4-6d93-4f3d-b583-a110d7a49c7d",
        "tags" : [
        ]
      }
    ],
    "commit" : "a151ea84e320e902de3851d2ac39869260212c2e",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +25,29 @@\n# Kind-projector work\nThis release also brings extra features for the [Kind Projector](https://docs.scala-lang.org/scala3/guides/migration/plugin-kind-projector.html) migration support. First, PR [#12378](https://github.com/lampepfl/dotty/pull/12378) allows `_` as type lambda placeholder. Second, PR [#12341](https://github.com/lampepfl/dotty/pull/12341) brings support for the variance annotations on the placeholder. This work enhances the ability to cross-compile Scala 2 code that uses the Kind Projector plugin to Scala 3.\n\n# Improved error reporting"
  },
  {
    "id" : "6165dbc1-e3b6-4bcd-b7a0-9676dbb5a6e7",
    "prId" : 12699,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/12699#pullrequestreview-675365482",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "625d5188-8690-4ac0-b699-358cadba9e1d",
        "parentId" : null,
        "authorId" : "3a3c9c08-5985-41f6-a86b-7fc5a427f51a",
        "body" : "/cc @pikinier20 @romanowski ",
        "createdAt" : "2021-06-03T14:44:54Z",
        "updatedAt" : "2021-06-03T14:44:54Z",
        "lastEditedBy" : "3a3c9c08-5985-41f6-a86b-7fc5a427f51a",
        "tags" : [
        ]
      }
    ],
    "commit" : "a151ea84e320e902de3851d2ac39869260212c2e",
    "line" : 61,
    "diffHunk" : "@@ -1,1 +59,63 @@\n# Scaladoc\nWe have updated the [documentation](http://dotty.epfl.ch/docs/usage/scaladoc/index.html) for Scaladoc making it easier for you to get started. Also, PR [#11582](https://github.com/lampepfl/dotty/pull/11582) has added the snippet compiler to ensure the snippets in your scaladoc documentation comments aren't broken. You can read more about this feature on the [mailing list](https://contributors.scala-lang.org/t/snippet-validation-in-scaladoc-for-scala-3/4976).\n\n# Metaprogramming"
  },
  {
    "id" : "e444ce44-73e8-4ca6-a434-8a63143e6c78",
    "prId" : 12699,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/12699#pullrequestreview-675365775",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b3cc5ca3-dafa-40dc-a759-bd785c57e336",
        "parentId" : null,
        "authorId" : "3a3c9c08-5985-41f6-a86b-7fc5a427f51a",
        "body" : "/cc @nicolasstucki ",
        "createdAt" : "2021-06-03T14:45:08Z",
        "updatedAt" : "2021-06-03T14:45:13Z",
        "lastEditedBy" : "3a3c9c08-5985-41f6-a86b-7fc5a427f51a",
        "tags" : [
        ]
      }
    ],
    "commit" : "a151ea84e320e902de3851d2ac39869260212c2e",
    "line" : 63,
    "diffHunk" : "@@ -1,1 +61,65 @@We have updated the [documentation](http://dotty.epfl.ch/docs/usage/scaladoc/index.html) for Scaladoc making it easier for you to get started. Also, PR [#11582](https://github.com/lampepfl/dotty/pull/11582) has added the snippet compiler to ensure the snippets in your scaladoc documentation comments aren't broken. You can read more about this feature on the [mailing list](https://contributors.scala-lang.org/t/snippet-validation-in-scaladoc-for-scala-3/4976).\n\n# Metaprogramming\nA lot of metaprogramming work was focused on improving the performance. Some of the notable PRs include:\n"
  },
  {
    "id" : "e5ac3433-1874-4e13-bbc0-71f08cfa034d",
    "prId" : 12699,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/12699#pullrequestreview-675366581",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6e6dfb23-66af-4b3d-b217-eba353c915eb",
        "parentId" : null,
        "authorId" : "3a3c9c08-5985-41f6-a86b-7fc5a427f51a",
        "body" : "/cc @odersky @sjrd @smarter ",
        "createdAt" : "2021-06-03T14:45:47Z",
        "updatedAt" : "2021-06-03T14:45:48Z",
        "lastEditedBy" : "3a3c9c08-5985-41f6-a86b-7fc5a427f51a",
        "tags" : [
        ]
      }
    ],
    "commit" : "a151ea84e320e902de3851d2ac39869260212c2e",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +11,15 @@<!--more-->\n\n# Experimental language features policy\nResearch and experimentation has always been an integral part of the Scala community's culture. That's what made Scala the language it is right now. Like many things in engineering, however, it's a part of a trade-off between experimentation and stability. Experimenting is fun and insightful, but when stakes on your project are high, stability becomes a priority.\n"
  }
]