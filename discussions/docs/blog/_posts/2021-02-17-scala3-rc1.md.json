[
  {
    "id" : "6ff4bc23-1504-4607-adc5-fdb6f60482b0",
    "prId" : 11451,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/11451#pullrequestreview-606454354",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0358f085-ca45-490e-97d9-a048611b3492",
        "parentId" : null,
        "authorId" : "3a3c9c08-5985-41f6-a86b-7fc5a427f51a",
        "body" : "What's the motivation behind using heading level 2 instead of 1 and leaving a newline?",
        "createdAt" : "2021-03-08T15:05:43Z",
        "updatedAt" : "2021-03-08T18:03:59Z",
        "lastEditedBy" : "3a3c9c08-5985-41f6-a86b-7fc5a427f51a",
        "tags" : [
        ]
      },
      {
        "id" : "e09c2016-5b65-4ad1-9914-262769b47504",
        "parentId" : "0358f085-ca45-490e-97d9-a048611b3492",
        "authorId" : "7f4dd8e1-6dc3-48f1-ac69-2bad57c15767",
        "body" : "@anatoliykmetyuk I invite you to look at the [Google Style Guide](https://google.github.io/styleguide/docguide/style.html), for instance the section [Add spacing to headings](\r\nhttps://google.github.io/styleguide/docguide/style.html#add-spacing-to-headings).\r\nIMO the best choice would be to adher to an existing style guide or (at least) to agree on a minimal set of rules which work both with Scaladoc *and* with tools such as Pandoc (see PR #11257).",
        "createdAt" : "2021-03-08T16:10:23Z",
        "updatedAt" : "2021-03-08T18:03:59Z",
        "lastEditedBy" : "7f4dd8e1-6dc3-48f1-ac69-2bad57c15767",
        "tags" : [
        ]
      }
    ],
    "commit" : "61a05c97c804ec032e2d08aa125ae70653e38180",
    "line" : 67,
    "diffHunk" : "@@ -1,1 +113,117 @@\n## Settling on `scaladoc` as the documentation tool\n\nWe have settled on using the well-known `scaladoc` as a name for the documentation tool for Scala 3 (known previously as `scala3doc`).\nThe obsolete `dotty-doc` (or `scala3-doc`) is removed in RC1. We have also removed all the Kotlin dependencies (Dokka, etc.) from scaladoc."
  },
  {
    "id" : "82da3dec-f162-4907-bccd-98433efb720c",
    "prId" : 11417,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/11417#pullrequestreview-591505892",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "900b906a-e364-4a79-ba08-fd2aeb878a45",
        "parentId" : null,
        "authorId" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "body" : "Add:\r\n\r\n# Use `future` and `future-migration` to specify language versions after 3.0 in `-source`\r\n\r\n[PR #11355] changes the `-source` specifier for the Scala version(s) after 3.0 from `3.1` to future. I.e. it is now\r\n`-source future` and `-source future-migration` instead of `-source 3.1` and `-source 3.1-migration`. Language imports are changed analogously. The reason for the change is that we want to keep the possibility open to ship a `3.1` version that does not yet contain all the changes enabled under `-source future`.\r\n",
        "createdAt" : "2021-02-16T18:34:22Z",
        "updatedAt" : "2021-02-17T16:50:08Z",
        "lastEditedBy" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "tags" : [
        ]
      }
    ],
    "commit" : "f4b053694cdf96d79f743232ee1851d0a29ca1d0",
    "line" : 109,
    "diffHunk" : "@@ -1,1 +107,111 @@# Settling on `scaladoc` as the documentation tool\nWe have settled on using the well-known `scaladoc` as a name for the documentation tool for Scala 3 (known previously as `scala3doc`).. The obsolete `dotty-doc` (or `scala3-doc`) is removed in RC1. We have also removed all the Kotlin dependencies (Dokka, etc.) from scaladoc. For details, see [PR #11349](https://github.com/lampepfl/dotty/pull/11349). To read more about `scaladoc`, see [documentation](https://dotty.epfl.ch/docs/usage/scaladoc/index.html)\n\n# Use `future` and `future-migration` to specify language versions after 3.0 in `-source`\n[PR #11355](https://github.com/lampepfl/dotty/pull/11355) changes the `-source` specifier for the Scala version(s) after 3.0 from `3.1` to `future`. I.e. it is now"
  },
  {
    "id" : "1cb43f67-c416-4127-8356-cd13f4273ec4",
    "prId" : 11417,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/11417#pullrequestreview-592254348",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7d37c666-26a7-4701-885e-a2c5657170f2",
        "parentId" : null,
        "authorId" : "6afe87c6-578a-428e-9a08-5dcb1f0353d7",
        "body" : "Can we just say `null`?",
        "createdAt" : "2021-02-17T14:31:11Z",
        "updatedAt" : "2021-02-17T16:50:08Z",
        "lastEditedBy" : "6afe87c6-578a-428e-9a08-5dcb1f0353d7",
        "tags" : [
        ]
      }
    ],
    "commit" : "f4b053694cdf96d79f743232ee1851d0a29ca1d0",
    "line" : 73,
    "diffHunk" : "@@ -1,1 +71,75 @@```\n\nIt defines a concrete variable x without an initial value, or rather the default initial value that the JVM assigns to object fields. It can only be used in a class or object, not to initialize a local variable.\n\nWe came up with an arguably better way to express this idiom: the special `uninitialized` value in the `scala.compiletime` object. To get an uninitialized field, you now write:"
  }
]