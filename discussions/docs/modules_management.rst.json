[
  {
    "id" : "b93ffbd8-688e-4533-ad4d-82933ad7fbb4",
    "prId" : 10303,
    "prUrl" : "https://github.com/apache/airflow/pull/10303#pullrequestreview-474576792",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0e76c6b8-06a3-4acb-8716-859d8a04334e",
        "parentId" : null,
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "``airflow info`` please.",
        "createdAt" : "2020-08-24T18:48:22Z",
        "updatedAt" : "2020-09-05T10:59:07Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      },
      {
        "id" : "d0e6916d-68e2-45e3-b4c0-0c778a374f96",
        "parentId" : "0e76c6b8-06a3-4acb-8716-859d8a04334e",
        "authorId" : "08142c85-ee39-4c93-a31a-84accd3c6bf0",
        "body" : "I've added airflow info details example below this as well.",
        "createdAt" : "2020-08-25T15:06:37Z",
        "updatedAt" : "2020-09-05T10:59:07Z",
        "lastEditedBy" : "08142c85-ee39-4c93-a31a-84accd3c6bf0",
        "tags" : [
        ]
      }
    ],
    "commit" : "81a5557c4687b760c7754b9633a74da12a5f1097",
    "line" : 173,
    "diffHunk" : "@@ -1,1 +171,175 @@    PYTHONPATH=/home/arch/projects/airflow_operators python\n\nThe ``sys.path`` variable will look like below:\n\n.. code-block:: pycon"
  },
  {
    "id" : "bb43dabc-42ad-4595-b90b-c9e3e69fbed7",
    "prId" : 10303,
    "prUrl" : "https://github.com/apache/airflow/pull/10303#pullrequestreview-474243099",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "939828ff-8c20-4b04-bf9f-20bccd9666e1",
        "parentId" : null,
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "I think it would be worth to add section about .pth files (https://docs.python.org/3/library/site.html#module-site) . I often find it invaluable (especially in production installation) to modularize access to different parts of code. Big organisations often have a lot of independent modules and components and often they are not installed by \"pip\" packages (for various reason - compilation needs, necessity to use code from sources etc.)  and in those cases adding paths to search in .pth files is a really nice way of modularising such access. Then you need to just drop the .pth file in one of the site modules. The .pth has also the nice property that it can have an executable that it executed at every python interpreter start. It is also used in big packages that needs to be installed from sources (example ROS uses .pth files extensively http://wiki.ros.org/rospy)",
        "createdAt" : "2020-08-25T08:16:56Z",
        "updatedAt" : "2020-09-05T10:59:07Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      }
    ],
    "commit" : "81a5557c4687b760c7754b9633a74da12a5f1097",
    "line" : 70,
    "diffHunk" : "@@ -1,1 +68,72 @@installable package and how to specify additional directories to be added\nto ``sys.path`` using the environment variable :envvar:`PYTHONPATH`.\n\n\nCreating a package in Python"
  },
  {
    "id" : "07cce2d4-10c5-41c2-9a7a-51d73cdcc6d7",
    "prId" : 12689,
    "prUrl" : "https://github.com/apache/airflow/pull/12689#pullrequestreview-540421573",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5de3f7fd-b8c2-4780-9405-0623a0d7eec1",
        "parentId" : null,
        "authorId" : "59d531be-9d1e-478d-99a0-6e20963d3e21",
        "body" : "If everything is working correctly, the sample value here should be something like `postgresql+psycopg2://p...s:PASSWORD@postgres/airflow` instead, according to https://github.com/apache/airflow/blob/b858683abf5b17ef85d4b246e05871819a747f14/airflow/cli/commands/info_command.py#L85\r\n\r\nMay you please help double check?\r\n\r\nOR, personally I think we can consider removing `sql_alchemy_conn` from the info command output\r\n\r\nADD-UP: if we show it here, either we are showing something useful BUT sensitive, or we are showing something not very useful (after sufficient necessary masking), IMHO",
        "createdAt" : "2020-11-28T21:17:31Z",
        "updatedAt" : "2020-11-28T22:07:28Z",
        "lastEditedBy" : "59d531be-9d1e-478d-99a0-6e20963d3e21",
        "tags" : [
        ]
      },
      {
        "id" : "69f8067e-d225-4620-82e7-9609eb93ee7d",
        "parentId" : "5de3f7fd-b8c2-4780-9405-0623a0d7eec1",
        "authorId" : "0d4fd7c4-f8ab-4371-acfe-b9cca6decaf5",
        "body" : "In my opinion it works as expected. I can use example generated with `--anonymize` flag:\r\n```\r\nroot@1aa14208df15:/opt/airflow# airflow info --anonymize\r\n...\r\nConfig info\r\nexecutor             | LocalExecutor\r\ntask_logging_handler | airflow.utils.log.file_task_handler.FileTaskHandler\r\nsql_alchemy_conn     | postgresql+psycopg2://p...s:PASSWORD@postgres/airflow\r\n```\r\n\r\nIf some one can run `airflow info` in your deployment - it's too late, so masking information like conn uri (which is also accessible via `airflow config` command) will not increase security.",
        "createdAt" : "2020-11-28T21:49:04Z",
        "updatedAt" : "2020-11-28T22:07:28Z",
        "lastEditedBy" : "0d4fd7c4-f8ab-4371-acfe-b9cca6decaf5",
        "tags" : [
        ]
      },
      {
        "id" : "8c023537-97f2-45f4-be3e-4051ccfad005",
        "parentId" : "5de3f7fd-b8c2-4780-9405-0623a0d7eec1",
        "authorId" : "59d531be-9d1e-478d-99a0-6e20963d3e21",
        "body" : "My bad that I missed the `--anonymize` flag.\r\n\r\nRegarding whether to keep `sql_alchemy_conn` in the output of `airflow info`, I still keep my view given it's (almost) the only sensitive item in the output. *But I will not insist in this opinion in this PR*.\r\n\r\nOR, at least, let's make anonymisation default. Currently it's `store_true`, i.e. no anonymisation by default. Let me know your thoughts?\r\n\r\nhttps://github.com/apache/airflow/blob/07a2ed5a2ab6edf3fc38c94186fe2204a47f44b7/airflow/cli/cli_parser.py#L649-L653",
        "createdAt" : "2020-11-28T22:19:37Z",
        "updatedAt" : "2020-11-28T22:19:37Z",
        "lastEditedBy" : "59d531be-9d1e-478d-99a0-6e20963d3e21",
        "tags" : [
        ]
      },
      {
        "id" : "72427342-5670-471e-ab5e-4c7bc4460ea9",
        "parentId" : "5de3f7fd-b8c2-4780-9405-0623a0d7eec1",
        "authorId" : "59d531be-9d1e-478d-99a0-6e20963d3e21",
        "body" : "But can be discussed & addressed in separate PR anyway, if you prefer. I will approve this PR first.",
        "createdAt" : "2020-11-28T22:22:41Z",
        "updatedAt" : "2020-11-28T22:22:41Z",
        "lastEditedBy" : "59d531be-9d1e-478d-99a0-6e20963d3e21",
        "tags" : [
        ]
      },
      {
        "id" : "dbc33b36-4266-4af9-ba3e-40878ae293a8",
        "parentId" : "5de3f7fd-b8c2-4780-9405-0623a0d7eec1",
        "authorId" : "0d4fd7c4-f8ab-4371-acfe-b9cca6decaf5",
        "body" : "Created a separate issue: https://github.com/apache/airflow/issues/12696",
        "createdAt" : "2020-11-28T22:34:09Z",
        "updatedAt" : "2020-11-28T22:34:09Z",
        "lastEditedBy" : "0d4fd7c4-f8ab-4371-acfe-b9cca6decaf5",
        "tags" : [
        ]
      }
    ],
    "commit" : "07a2ed5a2ab6edf3fc38c94186fe2204a47f44b7",
    "line" : 61,
    "diffHunk" : "@@ -1,1 +264,268 @@    executor             | LocalExecutor\n    task_logging_handler | airflow.utils.log.file_task_handler.FileTaskHandler\n    sql_alchemy_conn     | postgresql+psycopg2://postgres:airflow@postgres/airflow\n    dags_folder          | /files/dags\n    plugins_folder       | /root/airflow/plugins"
  }
]