[
  {
    "id" : "670e6c54-8333-4329-9297-d82f412adca9",
    "prId" : 3774,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e806e5ed-a6ae-441b-a59b-97f6f2d7c425",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "I am not sure why it pretends 1035 and 1123 are intechangeable - they aren't.  Strike 1035 entirely.\n",
        "createdAt" : "2015-01-23T22:53:53Z",
        "updatedAt" : "2015-01-23T22:53:53Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "560381f4-bbe6-4afc-b748-f211b44abf44",
        "parentId" : "e806e5ed-a6ae-441b-a59b-97f6f2d7c425",
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "The [identifiers doc](https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/design/identifiers.md) also needs to be fixed in that case.\n",
        "createdAt" : "2015-01-23T22:58:44Z",
        "updatedAt" : "2015-01-23T22:58:44Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      },
      {
        "id" : "4496670d-d461-46c7-94a1-e13ed0ebbe61",
        "parentId" : "e806e5ed-a6ae-441b-a59b-97f6f2d7c425",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "You are right, my memory was flawed.  1123 is defined in terms of 1035.\nSorry for the noise.\n\nOn Fri, Jan 23, 2015 at 2:59 PM, Vish Kannan notifications@github.com\nwrote:\n\n> In docs/resources.md\n> https://github.com/GoogleCloudPlatform/kubernetes/pull/3774#discussion_r23486949\n> :\n> \n> > @@ -22,7 +22,7 @@ Note that the resource model currently prohibits over-committing resources; we w\n> >  All resources have a _type_ that is identified by their _typename_ (a string, e.g., \"memory\").  Several resource types are predefined by Kubernetes (a full list is below), although only two will be supported at first: CPU and memory.  Users and system administrators can define their own resource types if they wish (e.g., Hadoop slots).\n> > \n> >  A fully-qualified resource typename is constructed from a DNS-style _subdomain_, followed by a slash `/`, followed by a DNS Label.\n> > -\\* The subdomain must conform to [RFC 1035 section 2.3.1 'subdomain' syntax](http://tools.ietf.org/html/rfc1035) / [RFC 1123](http://www.ietf.org/rfc/rfc1123.txt) (e.g., `kubernetes.io`, `myveryown.org`).\n> > +\\* The subdomain must conform to [RFC 1035](http://tools.ietf.org/html/rfc1035) / [RFC 1123](http://www.ietf.org/rfc/rfc1123.txt) (e.g., `kubernetes.io`, `myveryown.org`).\n> \n> The identifiers doc\n> https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/design/identifiers.md\n> also needs to be fixed in that case.\n> \n> ## \n> \n> Reply to this email directly or view it on GitHub\n> https://github.com/GoogleCloudPlatform/kubernetes/pull/3774/files#r23486949\n> .\n",
        "createdAt" : "2015-01-23T23:03:25Z",
        "updatedAt" : "2015-01-23T23:03:25Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "72669db7-b1d1-4214-81e1-0d3a07f221d3",
        "parentId" : "e806e5ed-a6ae-441b-a59b-97f6f2d7c425",
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "Ack.\n",
        "createdAt" : "2015-01-23T23:46:22Z",
        "updatedAt" : "2015-01-23T23:46:22Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      }
    ],
    "commit" : "6388c771979f1e174648ccae8e70d38f8b88316f",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +23,27 @@\nA fully-qualified resource typename is constructed from a DNS-style _subdomain_, followed by a slash `/`, followed by a DNS Label.\n* The subdomain must conform to [RFC 1035](http://tools.ietf.org/html/rfc1035) / [RFC 1123](http://www.ietf.org/rfc/rfc1123.txt) (e.g., `kubernetes.io`, `myveryown.org`).\n* The DNS label must conform to [RFC 1123](http://www.ietf.org/rfc/rfc1123.txt) - alphanumeric characters, with a maximum length of 63 characters, with the '-' character allowed anywhere except the first or last character.\n* As a shorthand, any resource typename that does not start with a subdomain and a slash will automatically be prefixed with the built-in Kubernetes _namespace_, `kubernetes.io/` in order to fully-qualify it.  This namespace is reserved for code in the open source Kubernetes repository; as a result, all user typenames MUST be fully qualified, and cannot be created in this namespace."
  },
  {
    "id" : "50eff76e-a804-4faa-9279-e7b5e3b61de3",
    "prId" : 3748,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c5734b11-d62a-4a4a-8ea2-9b46434a1614",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "s/1035/1123\n",
        "createdAt" : "2015-01-23T22:08:34Z",
        "updatedAt" : "2015-01-23T22:08:34Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "c83aed17-52ea-4750-b974-4ecf53777510",
        "parentId" : "c5734b11-d62a-4a4a-8ea2-9b46434a1614",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "maybe strike the section reference\n",
        "createdAt" : "2015-01-23T22:08:56Z",
        "updatedAt" : "2015-01-23T22:08:56Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "0abbc79a-8756-4b4b-853b-902b16b14e3c",
        "parentId" : "c5734b11-d62a-4a4a-8ea2-9b46434a1614",
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "sent #3774\n",
        "createdAt" : "2015-01-23T22:30:29Z",
        "updatedAt" : "2015-01-23T22:30:29Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      },
      {
        "id" : "f90fe638-cfd6-4016-a3a4-93f7efe54506",
        "parentId" : "c5734b11-d62a-4a4a-8ea2-9b46434a1614",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "Brian's too quick to merge :)\n\nOn Fri, Jan 23, 2015 at 2:30 PM, Vish Kannan notifications@github.com\nwrote:\n\n> In docs/resources.md\n> https://github.com/GoogleCloudPlatform/kubernetes/pull/3748#discussion_r23485453\n> :\n> \n> > @@ -21,13 +21,12 @@ Note that the resource model currently prohibits over-committing resources; we w\n> > \n> >  All resources have a _type_ that is identified by their _typename_ (a string, e.g., \"memory\").  Several resource types are predefined by Kubernetes (a full list is below), although only two will be supported at first: CPU and memory.  Users and system administrators can define their own resource types if they wish (e.g., Hadoop slots).\n> > \n> > -A fully-qualified resource typename is constructed from a DNS-style _subdomain_ with at least one dot, a slash `/`, and a path comprised of one or more segments separated by slashes.\n> > -\\* The subdomain must conform to [RFC 1035 section 2.3.1 'subdomain' syntax](http://tools.ietf.org/html/rfc1035) (e.g., `kubernetes.io`, `myveryown.org`).\n> > -\\* The path must conform to [RFC 3986 URI `path-rootless` syntax](http://tools.ietf.org/html/rfc3986#section-3.3)  (e.g., `memory`, `shinyNewResource/v2`), save that it must not use dot-segments (`.` and `..`).\n> > -\\* As a shorthand, any resource typename that does not start with a subdomain and a slash will automatically be prefixed with the built-in Kubernetes _namespace_, `kubernetes.io/resources/` http://kubernetes.io/resources/\n> >  in order to fully-qualify it.  This namespace is reserved for code in the open source Kubernetes repository; as a result, all user typenames MUST be fully qualified, and cannot be created in this namespace.\n> > -\\* Typenames are treated as literal strings, and neither escaped nor case-converted.  This means that case is signifcant (unlike RFC 1035 subdomains) and paths should avoid characters that need percent-encoding.\n> > +A fully-qualified resource typename is constructed from a DNS-style _subdomain_, followed by a slash `/`, followed by a DNS Label.\n> > +\\* The subdomain must conform to [RFC 1035 section 2.3.1 'subdomain' syntax](http://tools.ietf.org/html/rfc1035) / [RFC 1123](http://www.ietf.org/rfc/rfc1123.txt) (e.g., `kubernetes.io`, `myveryown.org`).\n> \n> sent #3774 https://github.com/GoogleCloudPlatform/kubernetes/pull/3774\n> \n> ## \n> \n> Reply to this email directly or view it on GitHub\n> https://github.com/GoogleCloudPlatform/kubernetes/pull/3748/files#r23485453\n> .\n",
        "createdAt" : "2015-01-23T22:54:39Z",
        "updatedAt" : "2015-01-23T22:54:39Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "f933b55405125f383f52d437e10726a6ef7ebcf8",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +23,27 @@\nA fully-qualified resource typename is constructed from a DNS-style _subdomain_, followed by a slash `/`, followed by a DNS Label.\n* The subdomain must conform to [RFC 1035 section 2.3.1 'subdomain' syntax](http://tools.ietf.org/html/rfc1035) / [RFC 1123](http://www.ietf.org/rfc/rfc1123.txt) (e.g., `kubernetes.io`, `myveryown.org`).\n* The DNS label must conform to [RFC 1123](http://www.ietf.org/rfc/rfc1123.txt) - alphanumeric characters, with a maximum length of 63 characters, with the '-' character allowed anywhere except the first or last character.\n* As a shorthand, any resource typename that does not start with a subdomain and a slash will automatically be prefixed with the built-in Kubernetes _namespace_, `kubernetes.io/` in order to fully-qualify it.  This namespace is reserved for code in the open source Kubernetes repository; as a result, all user typenames MUST be fully qualified, and cannot be created in this namespace."
  },
  {
    "id" : "73fc21c6-a6fe-4aba-bf26-999eefa9c8bb",
    "prId" : 617,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4732f756-9857-49fd-b32d-c54cce080670",
        "parentId" : null,
        "authorId" : "911fae49-4bfc-49cb-815b-bf168e470d24",
        "body" : "I think if a node's resource capacity is modeled like this, with capacity commonly being the only type of resource information provided, then it makes sense for a pod's resource requests/limits to be expressed the same way, with the type of information (request/limit/capacity) first, with entries for the resource names+values nested inside (like your first example).\nIt would be impractical/verbose to require a node's resource capacity to look like:\n\n```\nresources: [\n  cpu: [ capacity: 12],\n  memory: [ capacity: \"128G\" ],\n  bananas: [ capacity: \"3\" ]\n]\n```\n",
        "createdAt" : "2014-07-30T07:24:12Z",
        "updatedAt" : "2014-09-02T02:50:04Z",
        "lastEditedBy" : "911fae49-4bfc-49cb-815b-bf168e470d24",
        "tags" : [
        ]
      },
      {
        "id" : "e7551679-3546-4233-940f-4c653caed75c",
        "parentId" : "4732f756-9857-49fd-b32d-c54cce080670",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "I would prefer to see the latter, or something like it.\n\n```\nresources: {\n  cpu: 12\n  memory: 128000000000\n  bananas: 3\n  disk: {\n    hda: 50000000000\n    hdc: 1000000000000\n  }\n} \n```\n",
        "createdAt" : "2014-08-02T04:19:47Z",
        "updatedAt" : "2014-09-02T02:50:04Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "3f8e5d4a-6727-4346-98bc-d1e5cf57e35b",
        "parentId" : "4732f756-9857-49fd-b32d-c54cce080670",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "Apparently I was unclear on this.  I think the code snippet you posted as \"impractical\" looks good.\n",
        "createdAt" : "2014-08-04T23:17:23Z",
        "updatedAt" : "2014-09-02T02:50:04Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "b0c12cfa-5247-4810-ad83-7a4ffa684142",
        "parentId" : "4732f756-9857-49fd-b32d-c54cce080670",
        "authorId" : "911fae49-4bfc-49cb-815b-bf168e470d24",
        "body" : "Sure. I would just rather not see the term 'capacity' unnecessarily duplicated for each of N different resources, since there's no 'request' or 'limit' to confuse it with here.\n",
        "createdAt" : "2014-08-05T09:40:18Z",
        "updatedAt" : "2014-09-02T02:50:04Z",
        "lastEditedBy" : "911fae49-4bfc-49cb-815b-bf168e470d24",
        "tags" : [
        ]
      },
      {
        "id" : "98b061be-9c00-48dd-915f-15f05409b82e",
        "parentId" : "4732f756-9857-49fd-b32d-c54cce080670",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "...yet  I expect even capacity statements will grow nuances over time and will end up with multiple fields.\n",
        "createdAt" : "2014-08-08T05:33:46Z",
        "updatedAt" : "2014-09-02T02:50:04Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "783836de8757fd2fd55be564060ba9be8c03f6f3",
    "line" : null,
    "diffHunk" : "@@ -1,1 +145,149 @@  predicted: [ cpu: <CPU-info>, memory: <memory-info> ],\n]\n```\n\nwhere a `<CPU-info>` or `<memory-info>` structure looks like this:"
  },
  {
    "id" : "97dcf183-edcb-4ffe-a0f9-c40f251b5d08",
    "prId" : 617,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6e6be1bc-78c4-4354-bb25-435146df8f9f",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "Again, we should be clear what this representation is.  It's not JSON syntax, so it's not clearly the primary REST API.  But it does describe a structure, albeit loosely.  Somewhere we should be more precise.\n\nFor the sake of clarity, given that I was arguing for the other representation, I presume that the case of named resources (assuming we wanted to do that at all) would look something like the following?\n\nresources: [\n  request: { cpu: 250, memory:  \"40Mi\", disk: [ { name: \"hdc\", size: \"1G\" }, { name: \"hdx\", size: \"4G\" }] }\n]\n",
        "createdAt" : "2014-08-23T22:26:36Z",
        "updatedAt" : "2014-09-02T02:50:04Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "783836de8757fd2fd55be564060ba9be8c03f6f3",
    "line" : null,
    "diffHunk" : "@@ -1,1 +47,51 @@A _resource specification_ can be used to describe resource requests, resource allocations, and/or resource usage for a container or pod, and capacity for a node.  For example (although it would be unusual to see all of these fields simultaneously):\n```\nresources: [\n  request:   [ cpu: 2.5, memory: \"40Mi\" ],\n  limit:     [ cpu: 4.0, memory: \"99Mi\" ],"
  },
  {
    "id" : "cd949ab6-eb6d-4175-8e44-d307684def84",
    "prId" : 617,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8139809a-98fc-47de-a8a4-de6bb251fb73",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "Do you expect this to be a REST GET'able object?  PUT'able?\n",
        "createdAt" : "2014-08-23T23:35:49Z",
        "updatedAt" : "2014-09-02T02:50:04Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "783836de8757fd2fd55be564060ba9be8c03f6f3",
    "line" : 109,
    "diffHunk" : "@@ -1,1 +107,111 @@A resource type may have an associated read-only ResourceType structure, that contains metadata about the type.  For example:\n```\nresourceTypes: [\n  \"kubernetes.io/resources/memory\": [\n    isCompressible: false, ... "
  },
  {
    "id" : "52da01a4-e002-4609-9002-bfbe8d1e2415",
    "prId" : 617,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b9294436-028a-4656-afdf-8ecea41d3f39",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "This is future, so not a huge deal for now, but I don't like this.  It conflates different ideas, and it makes it practically impossible to know how to parse a resource typename.  is \"foo.com/a/b\" a type named \"a/b\" or a type named \"a\" with an subdivision of \"b\".  We could change the syntax, but I don't know that it is better.\n\nSimply asserting that the value of each key has a type which depends on the key seems sufficient.  DiskSpace then has a type of map[string]int.\n",
        "createdAt" : "2014-08-29T21:30:29Z",
        "updatedAt" : "2014-09-02T02:50:04Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "783836de8757fd2fd55be564060ba9be8c03f6f3",
    "line" : 213,
    "diffHunk" : "@@ -1,1 +211,215 @@  request: [\n    cpu: 2.3, memory: \"4Gi\",\n    \"storageSpace/hda\":  \"0.5Ti\", \"storageTime/hda\":  0.3,\n    \"storageSpace/ssd1\": \"0.1Ti\", \"storageTime/ssd1\": 0.9,\n ],"
  },
  {
    "id" : "a1dcfa82-0e4b-430e-b6f1-50d4cf14a76c",
    "prId" : 617,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a924bfe1-c4a9-4323-bb14-8360803589be",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "Nits as I made a quick last pass.  We can fix in a followup.\n\nStill using E notation here.\n\nStill some unclarity on float.  If I want 512MiB of memory, I can say \"512Mi\" or 631242752.  Am I also allowed to say \"0.5Gi\" ?  That is, are you intending to allow float for all fields, or just CPU?  You know my position on float at all, so the more limited my concession the happier I am.\n\nYou mention below milli-units but we don't actually say what precision floating point we use.  Specifically 0.0001 when scaled against Tera (e.g. for dis) is over a hundred MB.  If we're going to round that off, we should say so.  But I hope we can just say that FP only works for CPU.  Or not at all.\n",
        "createdAt" : "2014-09-02T03:33:52Z",
        "updatedAt" : "2014-09-02T03:33:52Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "783836de8757fd2fd55be564060ba9be8c03f6f3",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +34,38 @@Resource quantities can be added and subtracted: for example, a node has a fixed quantity of each resource type that can be allocated to pods/containers; once such an allocation has been made, the allocated resources cannot be made available to other pods/containers without over-committing the resources.\n\nTo make life easier for people, quantities can be represented externally as unadorned integers, or as fixed-point integers with one of these SI suffices  (E, P, T, G, M, K, m) or their power-of-two equivalents (Ei, Pi, Ti, Gi, Mi, Ki).  For example, the following represent roughly the same value: 128974848, \"129e6\", \"129M\" , \"123Mi\".  Small quantities can be represented directly as decimals (e.g., 0.3), or using milli-units (e.g., \"300m\").\n  * \"Externally\" means in user interfaces, reports, graphs, and in JSON or YAML resource specifications that might be generated or read by people.\n  * Case is significant: \"m\" and \"M\" are not the same, so \"k\" is not a valid SI suffix. There are no power-of-two equivalents for SI suffixes that represent multipliers less than 1."
  }
]