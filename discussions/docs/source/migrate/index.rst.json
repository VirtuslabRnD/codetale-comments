[
  {
    "id" : "8a3801fa-7ac0-4d7b-86ff-9be7821ec285",
    "prId" : 2579,
    "prUrl" : "https://github.com/digital-asset/daml/pull/2579",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "71232578-3a77-4c03-8366-55af01282795",
        "parentId" : null,
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "Does `daml migrate` generate `build.sh`?",
        "createdAt" : "2019-08-19T10:58:05Z",
        "updatedAt" : "2019-08-19T14:04:55Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      },
      {
        "id" : "affbee0a-7a75-42a7-a3cc-af49c93181ef",
        "parentId" : "71232578-3a77-4c03-8366-55af01282795",
        "authorId" : "6bbb482c-d598-4c97-ac37-b89d94b27ee4",
        "body" : "yes.",
        "createdAt" : "2019-08-19T11:26:10Z",
        "updatedAt" : "2019-08-19T14:04:55Z",
        "lastEditedBy" : "6bbb482c-d598-4c97-ac37-b89d94b27ee4",
        "tags" : [
        ]
      },
      {
        "id" : "58076c79-09ec-40d0-9597-ee960fa47104",
        "parentId" : "71232578-3a77-4c03-8366-55af01282795",
        "authorId" : "c2a5fc86-d15f-4be2-b872-e38684970a45",
        "body" : "no :P. I just tried it out and got the `.daml` files, but no build scripts.",
        "createdAt" : "2019-08-19T12:25:26Z",
        "updatedAt" : "2019-08-19T14:04:55Z",
        "lastEditedBy" : "c2a5fc86-d15f-4be2-b872-e38684970a45",
        "tags" : [
        ]
      }
    ],
    "commit" : "54b72adcb69cdf4f0bee89d30ed6e55f4c8b4fe2",
    "line" : 41,
    "diffHunk" : "@@ -1,1 +39,43 @@.. code-block:: none\n\n  ./build.sh\n\nrespectively ``.\\build.cmd`` if your on a Windows system.  Note that you can **not** use the usual"
  },
  {
    "id" : "c7f3ad88-6030-47c7-bada-c0f7a4943c28",
    "prId" : 2579,
    "prUrl" : "https://github.com/digital-asset/daml/pull/2579",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "aa204ee6-4fb3-434f-af2a-f6871edef90e",
        "parentId" : null,
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "Why does `daml build` not work? Can you please give a short explanation? Can we maybe actually make it work?",
        "createdAt" : "2019-08-19T10:58:35Z",
        "updatedAt" : "2019-08-19T14:04:55Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      },
      {
        "id" : "b27724f1-528c-405a-8032-9d9a87092f8f",
        "parentId" : "aa204ee6-4fb3-434f-af2a-f6871edef90e",
        "authorId" : "6bbb482c-d598-4c97-ac37-b89d94b27ee4",
        "body" : "`daml build` will initialize the package db from the given .dar dependencies. However, we want to generate the interface files from the .dars and put those into the package db. This is done during the `migrate` command. If you call `daml build` you will overwrite them again.",
        "createdAt" : "2019-08-19T11:27:05Z",
        "updatedAt" : "2019-08-19T14:04:55Z",
        "lastEditedBy" : "6bbb482c-d598-4c97-ac37-b89d94b27ee4",
        "tags" : [
        ]
      },
      {
        "id" : "bc3f1b84-3adf-422a-92c5-537e30043063",
        "parentId" : "aa204ee6-4fb3-434f-af2a-f6871edef90e",
        "authorId" : "c2a5fc86-d15f-4be2-b872-e38684970a45",
        "body" : "Does that mean `daml build` will bork the migration project? If so, we should fix that.",
        "createdAt" : "2019-08-19T12:25:59Z",
        "updatedAt" : "2019-08-19T14:04:55Z",
        "lastEditedBy" : "c2a5fc86-d15f-4be2-b872-e38684970a45",
        "tags" : [
        ]
      }
    ],
    "commit" : "54b72adcb69cdf4f0bee89d30ed6e55f4c8b4fe2",
    "line" : 43,
    "diffHunk" : "@@ -1,1 +41,45 @@  ./build.sh\n\nrespectively ``.\\build.cmd`` if your on a Windows system.  Note that you can **not** use the usual\n``daml build`` command to build the migration project. The `migrate` command will setup the project\nand initializes a suitable package database, while ``daml build`` would overwrite this setup again."
  },
  {
    "id" : "a67d1162-94ab-4796-949d-94fd7c8cc45b",
    "prId" : 2579,
    "prUrl" : "https://github.com/digital-asset/daml/pull/2579",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bd89a6d0-88f6-4b6e-9c37-d6c44ce29fa4",
        "parentId" : null,
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "We need an explanation aiming at our users intuition here.",
        "createdAt" : "2019-08-19T11:09:05Z",
        "updatedAt" : "2019-08-19T14:04:55Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      }
    ],
    "commit" : "54b72adcb69cdf4f0bee89d30ed6e55f4c8b4fe2",
    "line" : 106,
    "diffHunk" : "@@ -1,1 +104,108 @@\nFrom its type signature you can see that it can convert any two data types that are instances of the\n``Generic`` class and whose generic representation can be converted itself.\n\nThe ``migrate`` command takes care of defining generic instances for all relevant data types in the"
  },
  {
    "id" : "33616b0f-3d0c-467a-898a-52dd04f867ea",
    "prId" : 2579,
    "prUrl" : "https://github.com/digital-asset/daml/pull/2579",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6b0c352a-226d-4634-8723-b7638ed46348",
        "parentId" : null,
        "authorId" : "c2a5fc86-d15f-4be2-b872-e38684970a45",
        "body" : "I think it would be much nicer if it went through with as much as possible, but left stubs for `Conv` instances that it can't automatically derive. So the user can open `Main.daml` and fill in those `cv` definitions.",
        "createdAt" : "2019-08-19T12:30:43Z",
        "updatedAt" : "2019-08-19T14:04:55Z",
        "lastEditedBy" : "c2a5fc86-d15f-4be2-b872-e38684970a45",
        "tags" : [
        ]
      },
      {
        "id" : "a5aaecec-b403-4f6b-af63-6b1a39acded5",
        "parentId" : "6b0c352a-226d-4634-8723-b7638ed46348",
        "authorId" : "6bbb482c-d598-4c97-ac37-b89d94b27ee4",
        "body" : "it will add the templates, but it won't compile so you really just have to change the line containing the application of the `conv` function.",
        "createdAt" : "2019-08-19T13:54:41Z",
        "updatedAt" : "2019-08-19T14:04:55Z",
        "lastEditedBy" : "6bbb482c-d598-4c97-ac37-b89d94b27ee4",
        "tags" : [
        ]
      },
      {
        "id" : "15f95874-de7f-476d-8e99-0384f53e0540",
        "parentId" : "6b0c352a-226d-4634-8723-b7638ed46348",
        "authorId" : "6bbb482c-d598-4c97-ac37-b89d94b27ee4",
        "body" : "I added a sentence to the docs.",
        "createdAt" : "2019-08-19T14:06:05Z",
        "updatedAt" : "2019-08-19T14:06:06Z",
        "lastEditedBy" : "6bbb482c-d598-4c97-ac37-b89d94b27ee4",
        "tags" : [
        ]
      }
    ],
    "commit" : "54b72adcb69cdf4f0bee89d30ed6e55f4c8b4fe2",
    "line" : 129,
    "diffHunk" : "@@ -1,1 +127,131 @@\nWhen the package ``foo-2.0.0`` contains an extended data type of the ``Foo`` template that is not\nisomorphic, the build will fail. For example, let's assume the ``Foo`` module in the ``foo-2.0.0``\npackage has been extended to\n"
  }
]