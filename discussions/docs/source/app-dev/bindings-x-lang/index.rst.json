[
  {
    "id" : "92aecdc0-eb35-44b7-a4c5-10588cb20d31",
    "prId" : 1569,
    "prUrl" : "https://github.com/digital-asset/daml/pull/1569",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "01cbac4d-dfd3-4c90-a5ec-e28bfe9dbac4",
        "parentId" : null,
        "authorId" : "217c7adb-d958-471a-ac17-e626ccd391d4",
        "body" : "This is a little bit light on detail. Is there anything we can link to in the gRPC docs to explain how to do this? Otherwise it's a bit [\"draw the rest of the owl\"](https://www.google.com/search?q=draw+the+owl&source=lnms&tbm=isch&sa=X&ved=0ahUKEwiC5ZDviOHiAhXTwsQBHflmAE0Q_AUIECgB&biw=1280&bih=721#imgrc=gbPGHaXIjOhvjM:). ",
        "createdAt" : "2019-06-11T09:02:47Z",
        "updatedAt" : "2019-06-11T20:22:16Z",
        "lastEditedBy" : "217c7adb-d958-471a-ac17-e626ccd391d4",
        "tags" : [
        ]
      },
      {
        "id" : "4e4d0159-d03a-401e-b6c5-2922502529e5",
        "parentId" : "01cbac4d-dfd3-4c90-a5ec-e28bfe9dbac4",
        "authorId" : "9da357e5-66f5-424f-b28c-d68ddac2a372",
        "body" : "it is just a summary to re-iterate what needs to be done. The **Ledger API** doc and the link to gRPC tutorial above cover this up.",
        "createdAt" : "2019-06-11T14:13:00Z",
        "updatedAt" : "2019-06-11T20:22:16Z",
        "lastEditedBy" : "9da357e5-66f5-424f-b28c-d68ddac2a372",
        "tags" : [
        ]
      },
      {
        "id" : "5a8957f3-e039-460f-b762-051a052e3f7f",
        "parentId" : "01cbac4d-dfd3-4c90-a5ec-e28bfe9dbac4",
        "authorId" : "9da357e5-66f5-424f-b28c-d68ddac2a372",
        "body" : "I am also fine with removing this completely.",
        "createdAt" : "2019-06-11T20:11:00Z",
        "updatedAt" : "2019-06-11T20:22:16Z",
        "lastEditedBy" : "9da357e5-66f5-424f-b28c-d68ddac2a372",
        "tags" : [
        ]
      }
    ],
    "commit" : "e0d65ca625ce2ff4b3cb2e165a49ed05357f92bc",
    "line" : 95,
    "diffHunk" : "@@ -1,1 +93,97 @@When creating custom bindings for the Digital Asset distributed ledger, you will need to:\n\n- generate **Ledger API** from the gRPC definitions\n\n- decide whether to write a codegen to generate ledger commands or manually build them for all contracts defined in your DAML model."
  },
  {
    "id" : "d6336689-bf70-4e36-b218-ada607ffeaec",
    "prId" : 1569,
    "prUrl" : "https://github.com/digital-asset/daml/pull/1569",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e9b6ac05-d056-4ea4-af6a-058f2606857e",
        "parentId" : null,
        "authorId" : "217c7adb-d958-471a-ac17-e626ccd391d4",
        "body" : "Big improvement, this is much clearer!",
        "createdAt" : "2019-06-12T12:18:47Z",
        "updatedAt" : "2019-06-12T12:18:47Z",
        "lastEditedBy" : "217c7adb-d958-471a-ac17-e626ccd391d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "e0d65ca625ce2ff4b3cb2e165a49ed05357f92bc",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +23,27 @@\n- Ledger API\n    Client \"stubs\" for the programming language, -- the remote API that allows sending ledger commands and receiving ledger transactions. You have to generate **Ledger API** from `the gRPC protobuf definitions in the daml repository on GitHub <https://github.com/digital-asset/daml/tree/master/ledger-api/grpc-definitions>`_. **Ledger API** is documented on this page: :doc:`/app-dev/grpc/index`. The `gRPC <https://grpc.io/docs/>`_ tutorial explains how to generate client \"stubs\".\n\n- Codegen"
  },
  {
    "id" : "45366135-a20d-4d31-a482-696308b321b1",
    "prId" : 1569,
    "prUrl" : "https://github.com/digital-asset/daml/pull/1569",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9e79203d-cff1-46c0-a828-716dfedc818e",
        "parentId" : null,
        "authorId" : "217c7adb-d958-471a-ac17-e626ccd391d4",
        "body" : "Also a massive improvement. Nice!",
        "createdAt" : "2019-06-12T12:19:18Z",
        "updatedAt" : "2019-06-12T12:19:19Z",
        "lastEditedBy" : "217c7adb-d958-471a-ac17-e626ccd391d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "e0d65ca625ce2ff4b3cb2e165a49ed05357f92bc",
    "line" : 43,
    "diffHunk" : "@@ -1,1 +41,45 @@========================\n\nNo matter what approach you take, either manually building commands or writing a codegen to do this, you need to understand how ledger commands are structured. This section demonstrates how to build create and exercise commands manually and how it can be done using contract classes generated by Scala codegen.\n\nCreate Command"
  }
]