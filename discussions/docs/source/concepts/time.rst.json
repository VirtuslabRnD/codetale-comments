[
  {
    "id" : "630cdbfd-1bb5-42b1-aeb9-3fd2a9466914",
    "prId" : 6705,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6705",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "eabb91af-75e3-42c6-a36c-7668dd8c3f71",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "Maybe worth at least hinting at some of the problems for users that aren’t too familiar with this?",
        "createdAt" : "2020-07-13T17:31:32Z",
        "updatedAt" : "2020-07-17T14:41:06Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "d6d645ac-b1c6-4f3f-8bc3-1dc7712e9fa3",
        "parentId" : "eabb91af-75e3-42c6-a36c-7668dd8c3f71",
        "authorId" : "c83a17a2-0c0d-4811-9fe5-e560bb3ad87a",
        "body" : "Probably yes, but I don't feel comfortable with stating any issues. Do you have suggestions? Just a generic \"clock skew, synchronization, and if you solve these you always have space time from theory of relativity?\"",
        "createdAt" : "2020-07-16T14:29:30Z",
        "updatedAt" : "2020-07-17T14:41:06Z",
        "lastEditedBy" : "c83a17a2-0c0d-4811-9fe5-e560bb3ad87a",
        "tags" : [
        ]
      },
      {
        "id" : "d2900d01-66d9-4c8a-bb8c-1abdd5fe410f",
        "parentId" : "eabb91af-75e3-42c6-a36c-7668dd8c3f71",
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "Not sure I have great suggestions so maybe just leave it out for now. We can always add it later.",
        "createdAt" : "2020-07-17T09:28:28Z",
        "updatedAt" : "2020-07-17T14:41:06Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      }
    ],
    "commit" : "92a1f771c9356f590c2119e8a66c419baaba461b",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +8,12 @@\nThe DAML language contains a function :ref:`getTime <daml-ref-gettime>` which returns the “current time”.\nHowever, the notion of time comes with a lot of problems in a distributed setting.\n\nThis document describes the detailed semantics of time on DAML ledgers,"
  },
  {
    "id" : "89494ceb-26fc-43e6-a7d0-925b97b0740e",
    "prId" : 6705,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6705",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bb29dda1-091e-46a5-bf12-591dc6ad197d",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "Not quite sure how to improve this but at this point it’s somewhat unclear what `transaction_latency` is used for while the skew values have been clearly introduced before.",
        "createdAt" : "2020-07-13T17:38:13Z",
        "updatedAt" : "2020-07-17T14:41:06Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      }
    ],
    "commit" : "92a1f771c9356f590c2119e8a66c419baaba461b",
    "line" : 74,
    "diffHunk" : "@@ -1,1 +72,76 @@#. ``skew_min`` and ``skew_max``, the bounds on the difference between ``lt_TX`` and ``rt_TX``.\n\n#. ``transaction_latency``, the average duration from the time a transaction is submitted from a participant to the ledger\n   until the transaction is recorded.\n   This value is used by the participant to account for latency when submitting transactions to the ledger:"
  },
  {
    "id" : "da31ac31-b9da-4435-a51c-74d231e37466",
    "prId" : 6705,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6705",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "649ace3c-9959-4e1c-b9a9-d2ee434a1db0",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "My understanding is that this only helps you very little. You can use this to ensure that the transaction arrives roughly at rt_TX at the ledger but If the ledger also interprets the transaction (to validate it) you’ve lost. You need to increase the skew as well to handle commands that take a long time to interpret.",
        "createdAt" : "2020-07-13T17:46:45Z",
        "updatedAt" : "2020-07-17T14:41:06Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "7377da52-cd7e-4218-b1f6-e00942f98828",
        "parentId" : "649ace3c-9959-4e1c-b9a9-d2ee434a1db0",
        "authorId" : "7fffcfe2-e6e3-4e9c-a758-1855e207e60a",
        "body" : "That's a very good point; for such a ledger, submitting the transaction with roughly `lt = 2 * interpretation_time` should work, but the Ledger API server might get in your way, as its guess of the `transaction_latency` will be far off. I propose we make `transaction_latency` also settable by the user; its purpose is only informative anyways, and if the user has better information, we should let them provide it. Yes, it requires the user to understand the guts of the architecture, but unfortunately I think that they have to, if they want to understand when their transactions will get accepted by the ledger.\r\n\r\nA related question is on what kind of stability guarantees do we want to give here. Are we committing to the processing pipeline described here? I don't think we should, especially since if the ledger implementation changes, I believe the application will unfortunately have to adapt slightly. This is worth a sentence or two too IMO.",
        "createdAt" : "2020-07-14T09:41:14Z",
        "updatedAt" : "2020-07-17T14:41:06Z",
        "lastEditedBy" : "7fffcfe2-e6e3-4e9c-a758-1855e207e60a",
        "tags" : [
        ]
      },
      {
        "id" : "bc72887d-fb0d-43da-8557-d36e835b4e97",
        "parentId" : "649ace3c-9959-4e1c-b9a9-d2ee434a1db0",
        "authorId" : "c83a17a2-0c0d-4811-9fe5-e560bb3ad87a",
        "body" : "Good point, `min_ledger_time_*` can only be used to work around a very long interpretation time, but it won't save you if the validation time is also too long. \r\n\r\nThere are currently no plans to change the ledger time model. In the future, we might improve it to better handle such large transactions, e.g., giving the user more control, or by better estimating the actual time it will take for the transaction to be committed (from data like the current network latency, current ledger load, or transaction size).\r\n\r\n> Are we committing to the processing pipeline described here\r\n\r\nNo, both the ledger time model and the algorithm for assigning may be changed in the future. I have added a sentence.\r\n\r\nAs a side note, `min_ledger_time_*` gives you the ability to delay submissions, which is useful for internal tests dealing with contention.",
        "createdAt" : "2020-07-16T14:22:24Z",
        "updatedAt" : "2020-07-17T14:41:06Z",
        "lastEditedBy" : "c83a17a2-0c0d-4811-9fe5-e560bb3ad87a",
        "tags" : [
        ]
      },
      {
        "id" : "72aeed9f-5881-4ed9-b6ff-7e6f2eeddd07",
        "parentId" : "649ace3c-9959-4e1c-b9a9-d2ee434a1db0",
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "We did have users run into this issue I believe so I would at least mention that this might not be sufficient and you need to bump the skew as well.",
        "createdAt" : "2020-07-17T09:31:34Z",
        "updatedAt" : "2020-07-17T14:41:06Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      }
    ],
    "commit" : "92a1f771c9356f590c2119e8a66c419baaba461b",
    "line" : 116,
    "diffHunk" : "@@ -1,1 +114,118 @@   the intention is that the transaction is record at ``lt_TX == rt_TX``.\n\nUse the parameters ``min_ledger_time_rel`` and ``min_ledger_time_abs`` if you expect that\ncommand interpretation will take a considerate amount of time, such that by\nthe time the resulting transaction is submitted to the ledger, its assigned ledger time is not valid anymore."
  },
  {
    "id" : "d5aea392-0835-4706-94cf-0a603f23dccb",
    "prId" : 6705,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6705",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5203a65f-9a9f-43b4-860f-174dac3e249a",
        "parentId" : null,
        "authorId" : "7fffcfe2-e6e3-4e9c-a758-1855e207e60a",
        "body" : "it's unclear to me how this will translate to multi-domain Canton (aka multi-canton Canton). Nothing to be solved in this PR, though.",
        "createdAt" : "2020-07-14T09:08:18Z",
        "updatedAt" : "2020-07-17T14:41:06Z",
        "lastEditedBy" : "7fffcfe2-e6e3-4e9c-a758-1855e207e60a",
        "tags" : [
        ]
      }
    ],
    "commit" : "92a1f771c9356f590c2119e8a66c419baaba461b",
    "line" : 66,
    "diffHunk" : "@@ -1,1 +64,68 @@.. _ledger-time-model:\n\nLedger time model\n*****************\n"
  },
  {
    "id" : "f2f6db98-cf43-449e-8028-999243e9ae89",
    "prId" : 6705,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6705",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3f87ee48-6c43-4f0f-8ac7-22dc0280c9d6",
        "parentId" : null,
        "authorId" : "7fffcfe2-e6e3-4e9c-a758-1855e207e60a",
        "body" : "I'd state some example cases when people have to worry about (otherwise, it's unclear when/why they should read the rest of this section).",
        "createdAt" : "2020-07-14T09:10:27Z",
        "updatedAt" : "2020-07-17T14:41:06Z",
        "lastEditedBy" : "7fffcfe2-e6e3-4e9c-a758-1855e207e60a",
        "tags" : [
        ]
      }
    ],
    "commit" : "92a1f771c9356f590c2119e8a66c419baaba461b",
    "line" : 89,
    "diffHunk" : "@@ -1,1 +87,91 @@\nThe ledger time is assigned automatically by the participant.\nIn most cases, DAML applications will not need to worry about ledger time and record time at all.\n\nFor reference, this section describes the details of how the ledger time is currently assigned."
  },
  {
    "id" : "55c5880c-2a94-4942-980c-e99bc05b5087",
    "prId" : 6705,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6705",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "be14d5e5-5df9-49e1-aeee-9da0b70258da",
        "parentId" : null,
        "authorId" : "7fffcfe2-e6e3-4e9c-a758-1855e207e60a",
        "body" : "Relative to what?",
        "createdAt" : "2020-07-14T09:11:07Z",
        "updatedAt" : "2020-07-17T14:41:06Z",
        "lastEditedBy" : "7fffcfe2-e6e3-4e9c-a758-1855e207e60a",
        "tags" : [
        ]
      }
    ],
    "commit" : "92a1f771c9356f590c2119e8a66c419baaba461b",
    "line" : 96,
    "diffHunk" : "@@ -1,1 +94,98 @@#. When submitting commands over the ledger API,\n   users can optionally specify a ``min_ledger_time_rel`` or ``min_ledger_time_abs`` argument.\n   This defines a lower bound for the ledger time in relative and absolute terms, respectively.\n\n#. The ledger time is set to the highest of the following values:"
  },
  {
    "id" : "4dc1e63f-331a-4a29-9b92-9a135ea9779d",
    "prId" : 6705,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6705",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "182194ce-a992-48c8-a95e-d5131d2ebcd4",
        "parentId" : null,
        "authorId" : "7fffcfe2-e6e3-4e9c-a758-1855e207e60a",
        "body" : "Can they specify both?",
        "createdAt" : "2020-07-14T09:12:09Z",
        "updatedAt" : "2020-07-17T14:41:06Z",
        "lastEditedBy" : "7fffcfe2-e6e3-4e9c-a758-1855e207e60a",
        "tags" : [
        ]
      }
    ],
    "commit" : "92a1f771c9356f590c2119e8a66c419baaba461b",
    "line" : 95,
    "diffHunk" : "@@ -1,1 +93,97 @@\n#. When submitting commands over the ledger API,\n   users can optionally specify a ``min_ledger_time_rel`` or ``min_ledger_time_abs`` argument.\n   This defines a lower bound for the ledger time in relative and absolute terms, respectively.\n"
  },
  {
    "id" : "4638f08d-dacf-408d-aa53-282982dd2893",
    "prId" : 6705,
    "prUrl" : "https://github.com/digital-asset/daml/pull/6705",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "05068dfb-8f75-4ed4-9192-fb9e53da9ce7",
        "parentId" : null,
        "authorId" : "7fffcfe2-e6e3-4e9c-a758-1855e207e60a",
        "body" : "Some thinking out loud: I'm wondering what the best way to link this to the ledger model is. The model has a notion of a commit, and the `lt/rt` would in reality be assigned to commits. I don't think it's urgent to change/solve it for this PR, as I think that just saying \"transaction\" will be sufficiently understandable.\r\n\r\nChanging lt/rt to refer to commits also introduces problems, though, since the ledger model also has a notion of projections, which are just transactions, but we still want to assign these timestamps to them. I see a couple of ways out:\r\n1. we assign the timestamps to both a commit and to every action in the commit, with all actions within a single commit having the same timestamp\r\n2. we change the notion of a projection to be a commit, though this one is tricky, as we have to figure out what to do with requesters, such that we don't mess the authorization definitions up (likely: a commit would then have to allow for a different requester for each top-level action in the commit).",
        "createdAt" : "2020-07-14T09:29:17Z",
        "updatedAt" : "2020-07-17T14:41:06Z",
        "lastEditedBy" : "7fffcfe2-e6e3-4e9c-a758-1855e207e60a",
        "tags" : [
        ]
      },
      {
        "id" : "271dc266-273e-40f8-abf1-adeca532ad57",
        "parentId" : "05068dfb-8f75-4ed4-9192-fb9e53da9ce7",
        "authorId" : "c83a17a2-0c0d-4811-9fe5-e560bb3ad87a",
        "body" : "I'd pick option 1:\r\n\r\nDefine that the ledger time is a property of the commit, then define that everything that \"belongs\" to a commit (all actions, all contracts created by that commit) have a ledger time equal to the ledger time of the commit.\r\n\r\nThe current text already has the sentence \"where lt_C is the ledger time of the transaction that created C\".",
        "createdAt" : "2020-07-16T14:25:42Z",
        "updatedAt" : "2020-07-17T14:41:06Z",
        "lastEditedBy" : "c83a17a2-0c0d-4811-9fe5-e560bb3ad87a",
        "tags" : [
        ]
      },
      {
        "id" : "ff840d98-51d8-4835-ac54-2e53e6cd3f46",
        "parentId" : "05068dfb-8f75-4ed4-9192-fb9e53da9ce7",
        "authorId" : "c83a17a2-0c0d-4811-9fe5-e560bb3ad87a",
        "body" : "@oggy- is this something you would like to resolve now? ",
        "createdAt" : "2020-07-16T20:31:04Z",
        "updatedAt" : "2020-07-17T14:41:06Z",
        "lastEditedBy" : "c83a17a2-0c0d-4811-9fe5-e560bb3ad87a",
        "tags" : [
        ]
      }
    ],
    "commit" : "92a1f771c9356f590c2119e8a66c419baaba461b",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +11,15 @@\nThis document describes the detailed semantics of time on DAML ledgers,\ncentered around the two timestamps assigned to each transaction:\nthe *ledger time* ``lt_TX`` and the *record time* ``rt_TX``.\n"
  }
]