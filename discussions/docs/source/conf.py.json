[
  {
    "id" : "b601ba58-edd9-46e8-bf86-6f2a1a551dc1",
    "prId" : 4363,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/4363#pullrequestreview-660498724",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ee93ba71-adb3-4e32-bba5-d783b86ec503",
        "parentId" : null,
        "authorId" : "0e487e6e-a7e7-4430-a4d6-ca9e76a34cba",
        "body" : "Fix for:\r\n\r\n```\r\nWARNING: html_add_permalinks has been deprecated since v3.5.0. Please use html_permalinks and html_permalinks_icon instead.\r\n```",
        "createdAt" : "2021-05-17T01:42:45Z",
        "updatedAt" : "2021-05-17T01:45:55Z",
        "lastEditedBy" : "0e487e6e-a7e7-4430-a4d6-ca9e76a34cba",
        "tags" : [
        ]
      }
    ],
    "commit" : "1e8dadb7ad28a5b2e6ddb6b38352540e482d5608",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +197,201 @@html_show_sphinx = False\n\nhtml_permalinks_icon = \" \"\n\n# If true, \"(C) Copyright ...\" is shown in the HTML footer. Default is True."
  },
  {
    "id" : "bb084ce8-c7ed-4264-9bf8-a579666fed81",
    "prId" : 4242,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/4242#pullrequestreview-637507557",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "eed96153-e41d-41e2-97d2-418085731f6f",
        "parentId" : null,
        "authorId" : "0e487e6e-a7e7-4430-a4d6-ca9e76a34cba",
        "body" : "Now `mlflow.start_run` is type-annotated and looks like this:\r\n\r\n```python\r\ndef start_run(...) -> ActiveRun:\r\n    ...\r\n```\r\n\r\nSphinx tries to create a link for `ActiveRun` using its fully qualified class name (`mlflow.tracking.fluent.ActiveRun`) as a reference target, but our doc doesn't contain the reference `mlflow.tracking.fluent.ActiveRun` so it will result in the following warning (which is treated as an error due to the `-W` option):\r\n\r\n```\r\n/home/circleci/project/mlflow/__init__.py:docstring of mlflow.tracking.fluent.active_run:: WARNING: py:class reference target not found: mlflow.tracking.fluent.ActiveRun\r\n```\r\n\r\nAs a workaround, map `mlflow.tracking.fluent.ActiveRun` to [`mlflow.ActiveRun`](https://www.mlflow.org/docs/latest/python_api/mlflow.html#mlflow.ActiveRun).",
        "createdAt" : "2021-04-14T11:24:38Z",
        "updatedAt" : "2021-04-16T02:04:30Z",
        "lastEditedBy" : "0e487e6e-a7e7-4430-a4d6-ca9e76a34cba",
        "tags" : [
        ]
      },
      {
        "id" : "f060674c-5512-43e7-8fc5-ac9d69d068b3",
        "parentId" : "eed96153-e41d-41e2-97d2-418085731f6f",
        "authorId" : "52b26aee-f464-4ce0-af48-b29e1a3f86e2",
        "body" : "Seems missing some similar cases, such as:\r\n\r\n```\r\nmlflow.deployments.BaseDeploymentClient\r\nmflow.models.{Model, ModelSignature, ModelInputExample, infer_signature, FlavorBackend}\r\nmflow.projects.SubmittedRun\r\n\r\nmlflow.tracking.MlflowClient\r\nmflow.types.{DataType, ColSpec, Schema, TensorSpec}\r\n```",
        "createdAt" : "2021-04-15T15:00:01Z",
        "updatedAt" : "2021-04-16T02:04:30Z",
        "lastEditedBy" : "52b26aee-f464-4ce0-af48-b29e1a3f86e2",
        "tags" : [
        ]
      },
      {
        "id" : "1463c568-de21-456d-b159-9e4f941272a7",
        "parentId" : "eed96153-e41d-41e2-97d2-418085731f6f",
        "authorId" : "52b26aee-f464-4ce0-af48-b29e1a3f86e2",
        "body" : "Maybe we can automatically generate the `reference_map`, by searching all `__all__` exports in every sub-module, and for each item in `__all__` , if it is not a function but an Class, then we can add it into `reference_map`, we can generate the original ref by https://github.com/mlflow/mlflow/pull/4242/files#r614140548",
        "createdAt" : "2021-04-15T15:01:52Z",
        "updatedAt" : "2021-04-16T02:04:30Z",
        "lastEditedBy" : "52b26aee-f464-4ce0-af48-b29e1a3f86e2",
        "tags" : [
        ]
      },
      {
        "id" : "f13379a0-55d8-45a2-aa9c-05e9b1e18f63",
        "parentId" : "eed96153-e41d-41e2-97d2-418085731f6f",
        "authorId" : "0e487e6e-a7e7-4430-a4d6-ca9e76a34cba",
        "body" : "One challenge is:\r\n\r\n```\r\n{\"mlflow.tracking.fluent.ActiveRun\": \"< valid_ref >\"}\r\n```\r\n\r\nHow can we dynamically get `< valid_ref >` ?",
        "createdAt" : "2021-04-15T15:25:51Z",
        "updatedAt" : "2021-04-16T02:04:30Z",
        "lastEditedBy" : "0e487e6e-a7e7-4430-a4d6-ca9e76a34cba",
        "tags" : [
        ]
      },
      {
        "id" : "4c68d0e1-f7ab-4eab-b897-9869a4c27ea9",
        "parentId" : "eed96153-e41d-41e2-97d2-418085731f6f",
        "authorId" : "52b26aee-f464-4ce0-af48-b29e1a3f86e2",
        "body" : "> How can we dynamically get < valid_ref > ?\r\n\r\nUsing module (include the __all__ list) name + item name?\r\nwe can search 2 depth level modules",
        "createdAt" : "2021-04-16T09:26:17Z",
        "updatedAt" : "2021-04-16T09:26:18Z",
        "lastEditedBy" : "52b26aee-f464-4ce0-af48-b29e1a3f86e2",
        "tags" : [
        ]
      }
    ],
    "commit" : "0e3645c0c2ce1c0820c915301daa9c550a880dde",
    "line" : 48,
    "diffHunk" : "@@ -1,1 +358,362 @@    ref_map = {\n        # < Invalid reference >: < valid reference >\n        \"mlflow.tracking.fluent.ActiveRun\": \"mlflow.ActiveRun\",\n        \"mlflow.store.entities.paged_list.PagedList\": \"mlflow.store.entities.PagedList\",\n    }"
  },
  {
    "id" : "7f8840e8-26c0-4db9-af82-936344ab84c1",
    "prId" : 4242,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/4242#pullrequestreview-636786454",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "845a1b72-2049-45bd-8078-50672ed453f6",
        "parentId" : null,
        "authorId" : "52b26aee-f464-4ce0-af48-b29e1a3f86e2",
        "body" : "Why we generate the `invalid_ref` by `_camel_to_snake` ? does it always match the rule of \"camel --> snake\" format ?\r\n\r\nI suggest we can generate the original ref by:\r\n```\r\nentity_cls = getattr(mlflow.entities, entity_name)\r\ninvalid_ref = entity_cls.__module__ + entity_name\r\n```",
        "createdAt" : "2021-04-15T14:51:35Z",
        "updatedAt" : "2021-04-16T02:04:30Z",
        "lastEditedBy" : "52b26aee-f464-4ce0-af48-b29e1a3f86e2",
        "tags" : [
        ]
      },
      {
        "id" : "ca3940ea-bc3e-450f-bad9-dd082bbddf5e",
        "parentId" : "845a1b72-2049-45bd-8078-50672ed453f6",
        "authorId" : "0e487e6e-a7e7-4430-a4d6-ca9e76a34cba",
        "body" : "Much better approach! Thanks!",
        "createdAt" : "2021-04-15T14:52:56Z",
        "updatedAt" : "2021-04-16T02:04:30Z",
        "lastEditedBy" : "0e487e6e-a7e7-4430-a4d6-ca9e76a34cba",
        "tags" : [
        ]
      }
    ],
    "commit" : "0e3645c0c2ce1c0820c915301daa9c550a880dde",
    "line" : 64,
    "diffHunk" : "@@ -1,1 +374,378 @@        invalid_ref = entity_cls.__module__ + \".\" + entity_name\n        valid_ref = \"mlflow.entities.model_registry.{}\".format(entity_name)\n        ref_map[invalid_ref] = valid_ref\n\n    return ref_map"
  },
  {
    "id" : "eef61f3b-0ec5-40a5-8e52-5d6959cf0263",
    "prId" : 3776,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/3776#pullrequestreview-544582872",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d425f5cf-1f25-4cf0-9057-bc72ebc23674",
        "parentId" : null,
        "authorId" : "0e487e6e-a7e7-4430-a4d6-ca9e76a34cba",
        "body" : "Adding these to  suppress warningss coming from type hints for model schema.\r\n\r\n<img width=\"975\" alt=\"Screen Shot 2020-12-03 at 23 00 57\" src=\"https://user-images.githubusercontent.com/17039389/101043768-00e70600-35c2-11eb-92eb-641aebd705c1.png\">\r\n",
        "createdAt" : "2020-12-03T14:51:33Z",
        "updatedAt" : "2020-12-04T06:15:13Z",
        "lastEditedBy" : "0e487e6e-a7e7-4430-a4d6-ca9e76a34cba",
        "tags" : [
        ]
      },
      {
        "id" : "ad5e812c-37af-4af6-82a7-363943edcbe6",
        "parentId" : "d425f5cf-1f25-4cf0-9057-bc72ebc23674",
        "authorId" : "0e487e6e-a7e7-4430-a4d6-ca9e76a34cba",
        "body" : "The reason `mlflow.models.signature.ModelSignature` is cosidered as an invalid target is because we don't have `mlflow/models/signature.rst`. If we added `mlflow/models/signature.rst`, the warning would disappear.",
        "createdAt" : "2020-12-03T15:04:03Z",
        "updatedAt" : "2020-12-04T06:15:13Z",
        "lastEditedBy" : "0e487e6e-a7e7-4430-a4d6-ca9e76a34cba",
        "tags" : [
        ]
      },
      {
        "id" : "40ed4c8e-4f4c-4e29-b6e3-c132978e969b",
        "parentId" : "d425f5cf-1f25-4cf0-9057-bc72ebc23674",
        "authorId" : "9b00f760-3323-47e3-bb69-3add3073befc",
        "body" : "How often / in what situations will we need to add to this list?",
        "createdAt" : "2020-12-04T00:39:10Z",
        "updatedAt" : "2020-12-04T06:15:13Z",
        "lastEditedBy" : "9b00f760-3323-47e3-bb69-3add3073befc",
        "tags" : [
        ]
      },
      {
        "id" : "729487ac-c5d0-4183-8318-44d630284f2a",
        "parentId" : "d425f5cf-1f25-4cf0-9057-bc72ebc23674",
        "authorId" : "0e487e6e-a7e7-4430-a4d6-ca9e76a34cba",
        "body" : "We'd need to add this list when we add type annotations.\r\n\r\n```python\r\ndef new_api(x: dict):  # fine because dict is a python's built-in object\r\n    ...\r\n\r\ndef new_api(x: sklearn.xxx.Yyy):  # sphinx tries to put a link on sklearn.xxx.Yyy and emits a warning\r\n    ...\r\n\r\ndef new_api(x: mlflow.xxx.yyy):  # might emit a warning if there isn't a page for mlflow.xxx.yyy.\r\n    ...\r\n```",
        "createdAt" : "2020-12-04T00:59:56Z",
        "updatedAt" : "2020-12-04T06:15:13Z",
        "lastEditedBy" : "0e487e6e-a7e7-4430-a4d6-ca9e76a34cba",
        "tags" : [
        ]
      },
      {
        "id" : "6de1a627-7520-430f-bf5a-999f401874ef",
        "parentId" : "d425f5cf-1f25-4cf0-9057-bc72ebc23674",
        "authorId" : "0e487e6e-a7e7-4430-a4d6-ca9e76a34cba",
        "body" : "There are a few ways to disable the warnings:\r\n\r\n1. Set `nitpicky` to `False`: https://github.com/mlflow/mlflow/blob/master/docs/source/conf.py#L311\r\n2. Set `autodoc_typehints` to `False` (https://www.sphinx-doc.org/en/2.0/usage/extensions/autodoc.html#confval-autodoc_typehints)",
        "createdAt" : "2020-12-04T01:01:18Z",
        "updatedAt" : "2020-12-04T06:15:13Z",
        "lastEditedBy" : "0e487e6e-a7e7-4430-a4d6-ca9e76a34cba",
        "tags" : [
        ]
      }
    ],
    "commit" : "37f4b8b4e81232c874a059e1552f182985c01262",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +326,330 @@    (\"py:class\", \"mlflow.types.schema.Schema\"),\n    (\"py:class\", \"mlflow.models.model.Model\"),\n    (\"py:class\", \"mlflow.models.signature.ModelSignature\"),\n]\n"
  }
]