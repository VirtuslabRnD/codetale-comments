[
  {
    "id" : "3eceece7-b11e-49df-aba4-4c35153fea68",
    "prId" : 8138,
    "prUrl" : "https://github.com/digital-asset/daml/pull/8138",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "63693d15-f25f-44d0-b1e9-6d4c5e586708",
        "parentId" : null,
        "authorId" : "eb431011-3221-41ae-bf30-e72dde278004",
        "body" : "```suggestion\r\n```suggestion\r\nDAML Participant pruning is currently an :doc:`Early Access Feature in Labs status </support/status-definitions>`\r\n\r\n```\r\n```",
        "createdAt" : "2020-12-02T16:53:39Z",
        "updatedAt" : "2020-12-04T12:38:21Z",
        "lastEditedBy" : "eb431011-3221-41ae-bf30-e72dde278004",
        "tags" : [
        ]
      },
      {
        "id" : "b323a3dd-3e0b-4eb5-8104-a56228e37fc6",
        "parentId" : "63693d15-f25f-44d0-b1e9-6d4c5e586708",
        "authorId" : "1d70ec7b-8793-4cc6-95c8-fac6f7816dcc",
        "body" : "Done.",
        "createdAt" : "2020-12-03T11:29:06Z",
        "updatedAt" : "2020-12-04T12:38:21Z",
        "lastEditedBy" : "1d70ec7b-8793-4cc6-95c8-fac6f7816dcc",
        "tags" : [
        ]
      }
    ],
    "commit" : "f8f2a379412917249d96152ed5bdf97fd2ab6126",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +6,10 @@DAML Participant pruning\n========================\n\n.. HINT::\n   DAML Participant pruning is currently an :doc:`Early Access Feature in Labs status </support/status-definitions>`"
  },
  {
    "id" : "23ac6c2a-97d7-4192-8e0f-80a9077a9a76",
    "prId" : 8138,
    "prUrl" : "https://github.com/digital-asset/daml/pull/8138",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2bb08f98-a2f5-4059-bf96-27a02976d2f0",
        "parentId" : null,
        "authorId" : "d7d10058-0c3f-4068-af8a-3d7024c74f76",
        "body" : "Suggesting to make this more precise to match the specific pruning deletes here, i.e. we prune events and completions (archived contracts are already removed independently form pruning from `participant_contracts`), and we also prune `participant_command_completions`: https://github.com/digital-asset/daml/blob/f0b98a85b9beb06f5fe4619aaba7b0f6c7ae18f0/ledger/participant-integration-api/src/main/scala/platform/store/dao/JdbcLedgerDao.scala#L865-L866\r\n\r\n<please_ignore>The situation with transactions is a bit more subtle when we refer to the `TransactionService.GetTransactionTrees` where we end up potentially returning \"partial\" transactions with only `CreatedEvent` on behalf of contracts that have not been archived as of the specified pruning offset. But I am not sure how to capture this in a concise way without this being super-confusing.</please_ignore>\r\n\r\n```suggestion\r\nTo satisfy these requirements, the :ref:`Pruning Service <com.daml.ledger.api.v1.admin.ParticipantPruningService>` Ledger API endpoint [2]_ allows DAML Participants to support pruning of events on behalf of DAML contracts and command completions that were respectively archived and completed before or at a given ledger offset.\r\n```",
        "createdAt" : "2020-12-04T09:23:53Z",
        "updatedAt" : "2020-12-04T12:38:21Z",
        "lastEditedBy" : "d7d10058-0c3f-4068-af8a-3d7024c74f76",
        "tags" : [
        ]
      },
      {
        "id" : "239fe894-375c-4740-b475-39593b48942b",
        "parentId" : "2bb08f98-a2f5-4059-bf96-27a02976d2f0",
        "authorId" : "eb431011-3221-41ae-bf30-e72dde278004",
        "body" : "That's not correct though, right? We don't return \"partial\" transactions. We retain create events in the `participant_events` table (if the respective contract hasn't been archived yet) so that we can serve the ActiveContractsService. But we don't don't deliver these create events as part of the transaction services, because the minimum starting offset of transaction streams must be greater than the last pruned offset.",
        "createdAt" : "2020-12-04T09:31:03Z",
        "updatedAt" : "2020-12-04T12:38:21Z",
        "lastEditedBy" : "eb431011-3221-41ae-bf30-e72dde278004",
        "tags" : [
        ]
      },
      {
        "id" : "9d2766eb-ac3e-455a-b583-25953a60af74",
        "parentId" : "2bb08f98-a2f5-4059-bf96-27a02976d2f0",
        "authorId" : "d7d10058-0c3f-4068-af8a-3d7024c74f76",
        "body" : "You're right - I temporarily forgot that we end up hiding this part. Good. So this speaks to the second paragraph in my comment above - will wrap that in a `<please_ignore>` tag to cross that out as the rest is still relevant I think.",
        "createdAt" : "2020-12-04T10:00:51Z",
        "updatedAt" : "2020-12-04T12:38:21Z",
        "lastEditedBy" : "d7d10058-0c3f-4068-af8a-3d7024c74f76",
        "tags" : [
        ]
      },
      {
        "id" : "3905a25e-c60b-4137-abff-45ad031b9944",
        "parentId" : "2bb08f98-a2f5-4059-bf96-27a02976d2f0",
        "authorId" : "1d70ec7b-8793-4cc6-95c8-fac6f7816dcc",
        "body" : "@oliverse-da I applied your suggestions about this. Thanks!",
        "createdAt" : "2020-12-04T11:40:44Z",
        "updatedAt" : "2020-12-04T12:38:21Z",
        "lastEditedBy" : "1d70ec7b-8793-4cc6-95c8-fac6f7816dcc",
        "tags" : [
        ]
      }
    ],
    "commit" : "f8f2a379412917249d96152ed5bdf97fd2ab6126",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +14,18 @@In addition, privacy demands [1]_ may require removing Personally Identifiable Information (PII) upon request.\n\nTo satisfy these requirements, the :ref:`Pruning Service <com.daml.ledger.api.v1.admin.ParticipantPruningService>` Ledger API endpoint [2]_ allows DAML Participants to support pruning of DAML contracts and transactions that were respectively archived and submitted before or at a given ledger offset.\n\nPlease refer to the specific DAML Driver information for details about its pruning support."
  },
  {
    "id" : "7d72952d-abf4-4eda-a9ec-509ca71f7c38",
    "prId" : 8138,
    "prUrl" : "https://github.com/digital-asset/daml/pull/8138",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0c1c1209-e18e-42c6-a617-a7bff2e919dc",
        "parentId" : null,
        "authorId" : "d7d10058-0c3f-4068-af8a-3d7024c74f76",
        "body" : "Regarding \"even if they are already streaming past it\", I believe with the current code, this is only the case in the `CommandCompletions` case, but nevertheless for clarity it is probably good to leave this sentence in here also in case we later find it becomes necessary to abort transaction streams more aggressively too.",
        "createdAt" : "2020-12-04T09:32:01Z",
        "updatedAt" : "2020-12-04T12:38:21Z",
        "lastEditedBy" : "d7d10058-0c3f-4068-af8a-3d7024c74f76",
        "tags" : [
        ]
      },
      {
        "id" : "9c37c499-4185-446a-bb30-2bb2829e8190",
        "parentId" : "0c1c1209-e18e-42c6-a617-a7bff2e919dc",
        "authorId" : "1d70ec7b-8793-4cc6-95c8-fac6f7816dcc",
        "body" : "Yes, I'd rather stay a bit more vague here and detail these aspects in the API docs, as in this way we won't need to update this doc if details change (esp. for the worse). They are less relevant for the operator anyway, actually we might also consider removing the API-related sections altogether from the ops guide. WDYT @gerolf-da ?",
        "createdAt" : "2020-12-04T11:39:19Z",
        "updatedAt" : "2020-12-04T12:38:21Z",
        "lastEditedBy" : "1d70ec7b-8793-4cc6-95c8-fac6f7816dcc",
        "tags" : [
        ]
      },
      {
        "id" : "dddcaae3-985d-472b-aa3f-1c47c2c95e96",
        "parentId" : "0c1c1209-e18e-42c6-a617-a7bff2e919dc",
        "authorId" : "eb431011-3221-41ae-bf30-e72dde278004",
        "body" : "The operator needs to interact with the API to trigger pruning, so I'm fine with having a more vague representation of the API here, together with a link to the API docs.",
        "createdAt" : "2020-12-04T11:50:56Z",
        "updatedAt" : "2020-12-04T12:38:21Z",
        "lastEditedBy" : "eb431011-3221-41ae-bf30-e72dde278004",
        "tags" : [
        ]
      }
    ],
    "commit" : "f8f2a379412917249d96152ed5bdf97fd2ab6126",
    "line" : 39,
    "diffHunk" : "@@ -1,1 +37,41 @@-----------------------------------\n\n- Active data streams from the DAML Participant may abort and need to be re-established by the DAML application from a later offset than pruned, even if they are already streaming past it.\n- Requesting information at offsets that predate pruning, including from the ledger's start, will result in a ``NOT_FOUND`` gRPC error.\n  - As a consequence, after pruning, a DAML application must bootstrap from the Active Contract Service and a recent offset [3]_."
  }
]