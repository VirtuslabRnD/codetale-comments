[
  {
    "id" : "4476fede-ba98-4927-83bc-258c52eebee1",
    "prId" : 10071,
    "prUrl" : "https://github.com/digital-asset/daml/pull/10071",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cf38f420-fe48-41ad-9476-390586910b26",
        "parentId" : null,
        "authorId" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "body" : "Practical example, good idea!",
        "createdAt" : "2021-06-21T20:58:59Z",
        "updatedAt" : "2021-06-21T20:59:03Z",
        "lastEditedBy" : "1a7c6bd0-63e1-4deb-9695-6d6e9742f90b",
        "tags" : [
        ]
      }
    ],
    "commit" : "acee97c32fe489ab7e75aa6768fff90a8ac9b302",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +1309,1313 @@For example, if this message preceded the above 3-query example, it\nwould be as if ``\"4307\"`` had been specified for the first two queries,\nwhile ``\"5609\"`` would be used for the third query.\n\nThe output is a series of JSON documents, each ``payload`` formatted"
  },
  {
    "id" : "d14b5a17-bab0-447a-bb8e-5a5c689d8e26",
    "prId" : 7133,
    "prUrl" : "https://github.com/digital-asset/daml/pull/7133",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "efaa7f0c-0bd4-4882-b9cc-298ce7369cf0",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "Pretty sure you need more stars here.",
        "createdAt" : "2020-08-18T07:41:25Z",
        "updatedAt" : "2020-08-25T17:07:06Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      }
    ],
    "commit" : "2af64453c630fe4f2fd7ceb6dc355343dcac5a66",
    "line" : 332,
    "diffHunk" : "@@ -1,1 +825,829 @@The response is the same as for the POST method below.\n\nGet all Active Contracts Matching a Given Query\n***********************************************\n"
  },
  {
    "id" : "e96b5f54-6249-4449-bd75-c591b812442b",
    "prId" : 7133,
    "prUrl" : "https://github.com/digital-asset/daml/pull/7133",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7c52f663-984a-4ac1-90e3-50d10e51ba0a",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "Does this actually render as code? I thought two newlines mean it no longer belongs to the code block.",
        "createdAt" : "2020-08-24T11:51:51Z",
        "updatedAt" : "2020-08-25T17:07:07Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "fde9867f-a545-4dbd-92e6-c7823b60c1b8",
        "parentId" : "7c52f663-984a-4ac1-90e3-50d10e51ba0a",
        "authorId" : "f54de0ef-2e7e-457a-8c80-613c17895693",
        "body" : "Yes all is rendering correctly, there's 1 newline after the `code-block` delegation and two newlines separating the inline code block that displays the json-encoded token.\r\n",
        "createdAt" : "2020-08-24T16:10:14Z",
        "updatedAt" : "2020-08-25T17:07:07Z",
        "lastEditedBy" : "f54de0ef-2e7e-457a-8c80-613c17895693",
        "tags" : [
        ]
      }
    ],
    "commit" : "2af64453c630fe4f2fd7ceb6dc355343dcac5a66",
    "line" : 243,
    "diffHunk" : "@@ -1,1 +166,170 @@\n.. code-block:: none\n\n    eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwczovL2RhbWwuY29tL2xlZGdlci1hcGkiOnsibGVkZ2VySWQiOiJNeUxlZGdlciIsImFwcGxpY2F0aW9uSWQiOiJIVFRQLUpTT04tQVBJLUdhdGV3YXkiLCJhY3RBcyI6WyJCb2IiXX19.0uPPZtM1AmKvnGixt_Qo53cMDcpnziCjKKiWLvMX2VM\n"
  },
  {
    "id" : "68f54263-5db4-4391-9aec-ef5d168f97bf",
    "prId" : 5660,
    "prUrl" : "https://github.com/digital-asset/daml/pull/5660",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0befc05c-0b0b-4e51-848b-3b51b40d7460",
        "parentId" : null,
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "I'm not sure if the reference to firesheep is appropriate. What do you think about a more neutral name like `--allow-tokens-without-tls`? I wouldn't be surprised if this breaks `create-daml-app` can you please test that it still works after this change, for instance by using `daml-sdk-head` and doing the first few steps of the getting started guide.",
        "createdAt" : "2020-04-23T14:45:40Z",
        "updatedAt" : "2020-04-27T20:37:42Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      },
      {
        "id" : "ec6b1a92-4738-42c8-b5d0-01a05f332033",
        "parentId" : "0befc05c-0b0b-4e51-848b-3b51b40d7460",
        "authorId" : "4c501a40-3340-4f35-b66e-fcfb75e20f37",
        "body" : "The current name comes from @garyverhaegen-da , how's this alternative?",
        "createdAt" : "2020-04-23T15:03:59Z",
        "updatedAt" : "2020-04-27T20:37:42Z",
        "lastEditedBy" : "4c501a40-3340-4f35-b66e-fcfb75e20f37",
        "tags" : [
        ]
      },
      {
        "id" : "43a7587e-da1c-4e4a-9549-585897b6a5c8",
        "parentId" : "0befc05c-0b0b-4e51-848b-3b51b40d7460",
        "authorId" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "body" : "I also do not think the firesheep reference is necessarily appropriate. I'm also slowly realizing there are a lot of people in the internet that may be too young to understand it ðŸ˜¢\r\n\r\nI do think it needs to be \"scary\", though. I like cURL's `--insecure`, but could see something more specific, like `--allow-insecure-tokens` or the like.\r\n\r\n",
        "createdAt" : "2020-04-23T15:33:07Z",
        "updatedAt" : "2020-04-27T20:37:42Z",
        "lastEditedBy" : "8afc1e61-17e0-4309-b9ea-f0690fd56c47",
        "tags" : [
        ]
      },
      {
        "id" : "1228a0c6-9fd9-48b3-96e8-3db17bd9e7c0",
        "parentId" : "0befc05c-0b0b-4e51-848b-3b51b40d7460",
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "> I'm also slowly realizing there are a lot of people in the internet that may be too young to understand it\r\n\r\nI seem to fall into that group :slightly_smiling_face: ",
        "createdAt" : "2020-04-23T15:34:50Z",
        "updatedAt" : "2020-04-27T20:37:42Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "0d6bd258-6d6e-486c-aff1-c0f9995e2440",
        "parentId" : "0befc05c-0b0b-4e51-848b-3b51b40d7460",
        "authorId" : "181bcece-33df-41af-887d-5d5f51beb543",
        "body" : "TIL I've been listening to Security Now for over 10 years.\r\n\r\n[Security Now, Episode #272: Firesheep](https://twit.tv/shows/security-now/episodes/272).",
        "createdAt" : "2020-04-23T15:38:20Z",
        "updatedAt" : "2020-04-27T20:37:42Z",
        "lastEditedBy" : "181bcece-33df-41af-887d-5d5f51beb543",
        "tags" : [
        ]
      },
      {
        "id" : "4fd3e61d-149c-435d-9850-56766b8b397e",
        "parentId" : "0befc05c-0b0b-4e51-848b-3b51b40d7460",
        "authorId" : "4c501a40-3340-4f35-b66e-fcfb75e20f37",
        "body" : "Changed to `--allow-insecure-tokens` in abb4034c5e6835fa794b209061e178da8b3954dd.",
        "createdAt" : "2020-04-27T20:38:59Z",
        "updatedAt" : "2020-04-27T20:39:00Z",
        "lastEditedBy" : "4c501a40-3340-4f35-b66e-fcfb75e20f37",
        "tags" : [
        ]
      }
    ],
    "commit" : "185ea518a2b61c43eb373b611650bcf599b2e5ee",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +105,109 @@            Example: \"prefix=static,directory=./static-content\"\n      --allow-insecure-tokens\n            DEV MODE ONLY (not recommended for production). Allow connections without a reverse proxy providing HTTPS.\n      --access-token-file <value>\n            provide the path from which the access token will be read, required to interact with an authenticated ledger, no default"
  },
  {
    "id" : "89e4cf1b-cb9f-4e8e-ad80-1fbabce35893",
    "prId" : 5613,
    "prUrl" : "https://github.com/digital-asset/daml/pull/5613",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b5eb74a8-12a1-4341-9b8c-d9bdd09e4d70",
        "parentId" : null,
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "```suggestion\r\n- URL: ``/v1/packages/list``\r\n```\r\nOtherwise `/v1/packages` is a prefix of the two other packaging endpoints which always has potential for confusion.",
        "createdAt" : "2020-04-21T09:30:21Z",
        "updatedAt" : "2020-04-21T17:06:40Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      },
      {
        "id" : "08a133e0-54cc-48bb-ac1c-488fc289ec41",
        "parentId" : "b5eb74a8-12a1-4341-9b8c-d9bdd09e4d70",
        "authorId" : "9da357e5-66f5-424f-b28c-d68ddac2a372",
        "body" : "https://restfulapi.net/resource-naming/\r\nsee `Never use CRUD function names in URIs`",
        "createdAt" : "2020-04-21T19:43:05Z",
        "updatedAt" : "2020-04-21T19:43:05Z",
        "lastEditedBy" : "9da357e5-66f5-424f-b28c-d68ddac2a372",
        "tags" : [
        ]
      }
    ],
    "commit" : "df0a5ae3b0ae4b91bca78266ae32c865a9e2fa97",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +1071,1075 @@============\n\n- URL: ``/v1/packages``\n- Method: ``GET``\n- Content: <EMPTY>"
  },
  {
    "id" : "403516f7-ce99-47ae-92f5-77005f106f25",
    "prId" : 5456,
    "prUrl" : "https://github.com/digital-asset/daml/pull/5456",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "accc28ef-3c7b-4970-9042-1a4ff51149ac",
        "parentId" : null,
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "I would merge this section and the one about empty responses and say here that the result might be an empty list if none of the parties is known.\r\n```suggestion\r\nResponse with Unknown Parties Warning\r\n```",
        "createdAt" : "2020-04-07T13:56:01Z",
        "updatedAt" : "2020-04-07T13:56:33Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      }
    ],
    "commit" : "973dad8b65873fb44284364221d1463b0b8030e2",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +978,982 @@- ``isLocal`` -- true if party is hosted by the backing participant.\n\nNonempty Response with Unknown Parties Warning\n==============================================\n"
  },
  {
    "id" : "9157f7b8-b214-4aff-a4e1-85a0baf4a4e8",
    "prId" : 5454,
    "prUrl" : "https://github.com/digital-asset/daml/pull/5454",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6649f1b5-7df4-4cb1-a32f-3a78ce35155e",
        "parentId" : null,
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "Isn't it like this in RST?\r\n```suggestion\r\n            HTTP JSON API service port number. A port number of 0 will let the system pick an ephemeral port. Consider specifying ``--port-file`` option with port number 0.\r\n```",
        "createdAt" : "2020-04-07T09:18:50Z",
        "updatedAt" : "2020-04-08T16:28:33Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      },
      {
        "id" : "5af9556e-b83b-4a53-a201-0dc6e49ba47b",
        "parentId" : "6649f1b5-7df4-4cb1-a32f-3a78ce35155e",
        "authorId" : "9da357e5-66f5-424f-b28c-d68ddac2a372",
        "body" : "yes, it is like this in rst, but this is a copy/paste from `daml json-api --help`.",
        "createdAt" : "2020-04-07T13:54:52Z",
        "updatedAt" : "2020-04-08T16:28:33Z",
        "lastEditedBy" : "9da357e5-66f5-424f-b28c-d68ddac2a372",
        "tags" : [
        ]
      }
    ],
    "commit" : "d9cec789b9965322dc5e0bca30fec585e45ff851",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +73,77 @@            IP address that HTTP JSON API service listens on. Defaults to 127.0.0.1.\n      --http-port <value>\n            HTTP JSON API service port number. A port number of 0 will let the system pick an ephemeral port. Consider specifying `--port-file` option with port number 0.\n      --port-file <value>\n            Optional unique file name where to write the allocated HTTP port number. If process terminates gracefully, this file will be deleted automatically. Used to inform clients in CI about which port HTTP JSON API listens on. Defaults to none, that is, no file gets created."
  },
  {
    "id" : "7d4995cf-05f0-4440-8193-12cb4823c6b0",
    "prId" : 5395,
    "prUrl" : "https://github.com/digital-asset/daml/pull/5395",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "268eb874-3fe3-4311-ade6-2d2f05d53bd0",
        "parentId" : null,
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "I'm not convinced this is the right behaviour. I assume the intent is to bring it line with the `query` endpoint. However, parties are a runtime thing whereas templates are a compile time thing. Thus, asking for a list of templates that happens to be empty is very likely a programming error. In contrast, asking for a list of parties where none of them can be resolved seems like more usual business to me. Thus, changing the behaviour depending on whether at least one party could be resolved is the wrong thing to do in my opinion. (Asking for an empty list of parties should still be an error though since that's clearly a programming error.)",
        "createdAt" : "2020-04-06T11:36:17Z",
        "updatedAt" : "2020-04-06T11:36:17Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      },
      {
        "id" : "b4d46806-5d7a-4a3b-8feb-27de678e6f87",
        "parentId" : "268eb874-3fe3-4311-ade6-2d2f05d53bd0",
        "authorId" : "9da357e5-66f5-424f-b28c-d68ddac2a372",
        "body" : "@hurryabit yes, that is the intent.\r\n\r\nIn my experience if you are fetching something by ID (template ID or party ID) and there is no entity with that ID, -- this is an error. It is a common practice in RESTful APIs to return 40x status in this case.... we are not RESTful though....\r\n\r\nWe currently return an error only if all of the IDs do not exist. I think we should return an error, if at least one of the IDs does not exist, but I remember you had a strong opinion about non-existent template IDs.\r\n\r\nUp to you if you want to treat template IDs and party IDs differently, it is easy to change this error to OK(200) for the party lookup by ID.",
        "createdAt" : "2020-04-06T18:44:33Z",
        "updatedAt" : "2020-04-06T19:11:23Z",
        "lastEditedBy" : "9da357e5-66f5-424f-b28c-d68ddac2a372",
        "tags" : [
        ]
      },
      {
        "id" : "f9128c7f-0477-4d69-aaa4-dd883b0a69e5",
        "parentId" : "268eb874-3fe3-4311-ade6-2d2f05d53bd0",
        "authorId" : "9da357e5-66f5-424f-b28c-d68ddac2a372",
        "body" : "PR: #5456",
        "createdAt" : "2020-04-06T19:10:45Z",
        "updatedAt" : "2020-04-06T19:10:45Z",
        "lastEditedBy" : "9da357e5-66f5-424f-b28c-d68ddac2a372",
        "tags" : [
        ]
      }
    ],
    "commit" : "a6c0705ce91a60c3ff16e10f07520b7ae462f835",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +1010,1014 @@    }\n\nBadRequest(400) Response with Unknown Parties Warning\n=====================================================\n"
  },
  {
    "id" : "20dd41e3-ab5c-47f7-9aca-f5ccfc5bf1f1",
    "prId" : 4754,
    "prUrl" : "https://github.com/digital-asset/daml/pull/4754",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "734acd3e-c1ee-44c8-8891-c510522f8d14",
        "parentId" : null,
        "authorId" : "9da357e5-66f5-424f-b28c-d68ddac2a372",
        "body" : "@hurryabit are you sure you want this? The original contract created and archived, we do not conflate here like we do in the streaming API.\r\n\r\n#4507 says:\r\n> Response format: exactly the resulting transaction tree you get from ledger-API in submit-and-wait, formatted exactly as for the exercise endpoint.",
        "createdAt" : "2020-02-28T19:13:21Z",
        "updatedAt" : "2020-03-02T17:35:31Z",
        "lastEditedBy" : "9da357e5-66f5-424f-b28c-d68ddac2a372",
        "tags" : [
        ]
      },
      {
        "id" : "74d39eec-44e9-40d9-965b-3cbf5aec17d5",
        "parentId" : "734acd3e-c1ee-44c8-8891-c510522f8d14",
        "authorId" : "eb431011-3221-41ae-bf30-e72dde278004",
        "body" : "When using the streaming API, one is more interested in getting \"actionable\" contracts. For `create-and-exercise` I think it can make sense to return the response as is.\r\nFor the response to a regular `exercise` command we don't do any conflation of transient contracts either.",
        "createdAt" : "2020-03-02T14:54:49Z",
        "updatedAt" : "2020-03-02T17:35:31Z",
        "lastEditedBy" : "eb431011-3221-41ae-bf30-e72dde278004",
        "tags" : [
        ]
      },
      {
        "id" : "3c0cb723-8e51-4b61-890a-42455ea15cac",
        "parentId" : "734acd3e-c1ee-44c8-8891-c510522f8d14",
        "authorId" : "9da357e5-66f5-424f-b28c-d68ddac2a372",
        "body" : "all right... leaving it as is.",
        "createdAt" : "2020-03-02T15:21:36Z",
        "updatedAt" : "2020-03-02T17:35:31Z",
        "lastEditedBy" : "9da357e5-66f5-424f-b28c-d68ddac2a372",
        "tags" : [
        ]
      },
      {
        "id" : "31c9c2df-ceac-40e1-b691-2d2bc30306e0",
        "parentId" : "734acd3e-c1ee-44c8-8891-c510522f8d14",
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "I prefer to _not_ conflate here. So, all good.",
        "createdAt" : "2020-03-04T15:53:07Z",
        "updatedAt" : "2020-03-04T15:54:31Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      }
    ],
    "commit" : "37358a488d97c38be7a565409fb1d175d37a70b3",
    "line" : 47,
    "diffHunk" : "@@ -1,1 +590,594 @@\n- ``created`` and ``archived`` events for the initial contract (``\"contractId\": \"#1:0\"``), which was created and archived right away when a consuming choice was exercised on it,\n- a ``created`` event for the contract that is the result of the choice exercise (``\"contractId\": \"#1:2\"``).\n\n- Content-Type: ``application/json``"
  },
  {
    "id" : "de8549e2-5660-44e2-86cc-1992e608d992",
    "prId" : 4680,
    "prUrl" : "https://github.com/digital-asset/daml/pull/4680",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3055cde9-8f92-405f-b3d8-61f4030f2408",
        "parentId" : null,
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "What happens if there are some known parties and some unknown parties? I expect that we only receive records for the known parties. We should consider adding a `warnings` field containing the unknown parties, but I'm fine doing this in a separate PR.",
        "createdAt" : "2020-02-25T09:20:37Z",
        "updatedAt" : "2020-02-26T14:39:52Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      },
      {
        "id" : "e7262b42-3618-462e-8eb5-f986ff94cab2",
        "parentId" : "3055cde9-8f92-405f-b3d8-61f4030f2408",
        "authorId" : "9da357e5-66f5-424f-b28c-d68ddac2a372",
        "body" : "~I will add warnings in the follow up PR~",
        "createdAt" : "2020-02-25T15:02:29Z",
        "updatedAt" : "2020-02-26T14:39:52Z",
        "lastEditedBy" : "9da357e5-66f5-424f-b28c-d68ddac2a372",
        "tags" : [
        ]
      },
      {
        "id" : "cc228f6e-e6a3-4c23-b06e-050cfdb65c2c",
        "parentId" : "3055cde9-8f92-405f-b3d8-61f4030f2408",
        "authorId" : "9da357e5-66f5-424f-b28c-d68ddac2a372",
        "body" : "scratch the above it is a rather small change, easier to add it to this PR and update the docs once.",
        "createdAt" : "2020-02-25T16:43:57Z",
        "updatedAt" : "2020-02-26T14:39:52Z",
        "lastEditedBy" : "9da357e5-66f5-424f-b28c-d68ddac2a372",
        "tags" : [
        ]
      },
      {
        "id" : "572a2bf3-d413-4070-a94d-2876e4f919fc",
        "parentId" : "3055cde9-8f92-405f-b3d8-61f4030f2408",
        "authorId" : "9da357e5-66f5-424f-b28c-d68ddac2a372",
        "body" : "scratch the above it is a rather small change, easier to add it to this PR and update the docs once.",
        "createdAt" : "2020-02-25T16:44:09Z",
        "updatedAt" : "2020-02-26T14:39:52Z",
        "lastEditedBy" : "9da357e5-66f5-424f-b28c-d68ddac2a372",
        "tags" : [
        ]
      }
    ],
    "commit" : "1c893cbb4ae4c432898f1636e3e8be6fbf07f824",
    "line" : 62,
    "diffHunk" : "@@ -1,1 +855,859 @@    }\n\nPlease note that the order of the party objects in the response is not guaranteed to match the order of the passed party identifiers.\n\nWhere"
  },
  {
    "id" : "8f4151f4-8023-4573-8971-c629604adbf7",
    "prId" : 4593,
    "prUrl" : "https://github.com/digital-asset/daml/pull/4593",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5997761e-986a-4a38-a640-d23e74f80cb4",
        "parentId" : null,
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "Can we say something about the type of the offset? Is it always a string? Or shall we treat it as something opaque whose only purpose it to pass it to the next call of this endpoint?",
        "createdAt" : "2020-02-26T16:54:44Z",
        "updatedAt" : "2020-02-26T17:16:56Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      },
      {
        "id" : "5d7173c0-7584-4ba4-8c17-1ef075b512a1",
        "parentId" : "5997761e-986a-4a38-a640-d23e74f80cb4",
        "authorId" : "4c501a40-3340-4f35-b66e-fcfb75e20f37",
        "body" : "The previous paragraph mentions the rules for what it might be; do you think there is too much detail there?",
        "createdAt" : "2020-02-26T16:58:00Z",
        "updatedAt" : "2020-02-26T17:16:56Z",
        "lastEditedBy" : "4c501a40-3340-4f35-b66e-fcfb75e20f37",
        "tags" : [
        ]
      },
      {
        "id" : "57a9042c-1eda-43fc-aa3b-481ee2378be6",
        "parentId" : "5997761e-986a-4a38-a640-d23e74f80cb4",
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "Oh right\r\n> it may be `null` instead of a string.\r\n\r\nCan we guarantee that it's either a string or null? Or could it be something else? Particularly on other ledgers which can't represent the offset by a single number.",
        "createdAt" : "2020-02-26T17:00:16Z",
        "updatedAt" : "2020-02-26T17:16:56Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      },
      {
        "id" : "ea7c4fef-d504-4acb-9b12-560b813b0064",
        "parentId" : "5997761e-986a-4a38-a640-d23e74f80cb4",
        "authorId" : "4c501a40-3340-4f35-b66e-fcfb75e20f37",
        "body" : "Even for ledgers that want to use more structure, the ledger API requires them to string-encode it, and we merely pass-through for the purpose of #4509.\r\n\r\nhttps://github.com/digital-asset/daml/blob/4d734939c9490bd0cdfd5faf36351d1fcba12e73/ledger-api/grpc-definitions/com/digitalasset/ledger/api/v1/ledger_offset.proto#L14-L22",
        "createdAt" : "2020-02-26T17:10:57Z",
        "updatedAt" : "2020-02-26T17:16:56Z",
        "lastEditedBy" : "4c501a40-3340-4f35-b66e-fcfb75e20f37",
        "tags" : [
        ]
      },
      {
        "id" : "7819f256-6523-48ee-aec1-4f64d5cf08ff",
        "parentId" : "5997761e-986a-4a38-a640-d23e74f80cb4",
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "Then it makes sense. Thansl.",
        "createdAt" : "2020-02-26T18:20:17Z",
        "updatedAt" : "2020-02-26T18:20:17Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      }
    ],
    "commit" : "d8c3640f424750f2bb6655ae779d003b71b15bca",
    "line" : 63,
    "diffHunk" : "@@ -1,1 +965,969 @@    {\n        \"events\": [],\n        \"offset\": \"2\"\n    }\n"
  },
  {
    "id" : "ac3f7be4-a5f6-489b-a52b-c285743ca3a8",
    "prId" : 4436,
    "prUrl" : "https://github.com/digital-asset/daml/pull/4436",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "62fce65d-1411-4f66-99dd-15690df6f358",
        "parentId" : null,
        "authorId" : "9da357e5-66f5-424f-b28c-d68ddac2a372",
        "body" : "you did not update the Where section that explains what `contracts` now `events` element is",
        "createdAt" : "2020-02-06T19:42:53Z",
        "updatedAt" : "2020-02-06T19:47:31Z",
        "lastEditedBy" : "9da357e5-66f5-424f-b28c-d68ddac2a372",
        "tags" : [
        ]
      },
      {
        "id" : "10695bbc-7182-4174-964d-ba4bfd63ee7f",
        "parentId" : "62fce65d-1411-4f66-99dd-15690df6f358",
        "authorId" : "4c501a40-3340-4f35-b66e-fcfb75e20f37",
        "body" : "a9afe39b5e",
        "createdAt" : "2020-02-06T19:47:37Z",
        "updatedAt" : "2020-02-06T19:47:37Z",
        "lastEditedBy" : "4c501a40-3340-4f35-b66e-fcfb75e20f37",
        "tags" : [
        ]
      }
    ],
    "commit" : "a9afe39b5e87a6e8baf6081a1af87ec1223dffcc",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +432,436 @@        \"result\": {\n            \"exerciseResult\": \"#201:1\",\n            \"events\": [\n                {\n                    \"archived\": {"
  },
  {
    "id" : "503455ab-94be-481d-8132-b16797942145",
    "prId" : 4393,
    "prUrl" : "https://github.com/digital-asset/daml/pull/4393",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "20906d4a-bde3-4893-b217-79aec69db09e",
        "parentId" : null,
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "What happens if the list is empty? Do we also allow the format `{\"templateId\": ..., \"key\": ...}` if the list contains only one element, i.e., `N = 1`? We should try to be consistent with the other endpoints in this regard. If we're not, I'm fine with addressing this in a separate PR.",
        "createdAt" : "2020-02-05T19:28:48Z",
        "updatedAt" : "2020-02-06T18:05:46Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      },
      {
        "id" : "33ce53ca-4e0f-460b-a95e-978047a7bd26",
        "parentId" : "20906d4a-bde3-4893-b217-79aec69db09e",
        "authorId" : "9da357e5-66f5-424f-b28c-d68ddac2a372",
        "body" : "@hurryabit \r\n\r\n1. Empty list would cause an error: `result: Vector(TextMessage.Strict({\"error\":\"Cannot resolve any templateId from request: List(), unresolved templateIds: Set()\"}))`\r\n2. The request must be a list of pairs. If all templates fails resolution, we return error.\r\n\r\nI will create a ticket to address the consistency.",
        "createdAt" : "2020-02-05T20:29:21Z",
        "updatedAt" : "2020-02-06T18:05:46Z",
        "lastEditedBy" : "9da357e5-66f5-424f-b28c-d68ddac2a372",
        "tags" : [
        ]
      },
      {
        "id" : "a69f3550-9eac-4f1c-b60d-4ed88add12ae",
        "parentId" : "20906d4a-bde3-4893-b217-79aec69db09e",
        "authorId" : "9da357e5-66f5-424f-b28c-d68ddac2a372",
        "body" : "#4417 created to validate and address the consistency.",
        "createdAt" : "2020-02-05T20:38:26Z",
        "updatedAt" : "2020-02-06T18:05:46Z",
        "lastEditedBy" : "9da357e5-66f5-424f-b28c-d68ddac2a372",
        "tags" : [
        ]
      }
    ],
    "commit" : "95d525291dacf9c2f25712dee97c68fdb1666f50",
    "line" : 86,
    "diffHunk" : "@@ -1,1 +961,965 @@        ...\n        {\"templateId\": \"<template ID N>\", \"key\": <key N>}\n    ]\n\nWhere:"
  },
  {
    "id" : "b666eeec-89c2-4282-ae7a-acaefff2318d",
    "prId" : 4363,
    "prUrl" : "https://github.com/digital-asset/daml/pull/4363",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "43425e1a-3028-46d5-9ff9-90db88c4c518",
        "parentId" : null,
        "authorId" : "4c501a40-3340-4f35-b66e-fcfb75e20f37",
        "body" : "@hurryabit Currently `\"matchedQueries\"` are always emitted as demonstrated in docs even if only one query is supplied; please let me know if this is undesirable.",
        "createdAt" : "2020-02-05T01:03:04Z",
        "updatedAt" : "2020-02-06T14:50:14Z",
        "lastEditedBy" : "4c501a40-3340-4f35-b66e-fcfb75e20f37",
        "tags" : [
        ]
      },
      {
        "id" : "1b340e52-ec46-4e88-8a70-217692001978",
        "parentId" : "43425e1a-3028-46d5-9ff9-90db88c4c518",
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "I think this is perfectly fine. Ignoring a field is no hard work.",
        "createdAt" : "2020-02-05T09:21:59Z",
        "updatedAt" : "2020-02-06T14:50:14Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      }
    ],
    "commit" : "0eebf6edfa656f053fe4aa62ae2b225acfed08a5",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +813,817 @@            \"templateId\": \"b70bbfbc77a4790f66d4840cb19f657dd20848f5e2f64e39ad404a6cbd98cf75:Iou:Iou\"\n        },\n        \"matchedQueries\": [1, 2]\n    }]\n"
  },
  {
    "id" : "c4132767-a8f8-4c06-bbe0-e672b0dcdd7e",
    "prId" : 4312,
    "prUrl" : "https://github.com/digital-asset/daml/pull/4312",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b53d833d-62f4-4beb-a371-48d3c430bff4",
        "parentId" : null,
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "I like documentation. Thanks.",
        "createdAt" : "2020-01-30T21:28:24Z",
        "updatedAt" : "2020-01-30T21:28:24Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      }
    ],
    "commit" : "78599c17af9a135b4807e32f1657f935a368ec00",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +848,852 @@    }]\n\nIf any template IDs are found not to resolve, the first non-heartbeat\nelement of the stream will report them::\n"
  },
  {
    "id" : "24ff2473-fbe1-4485-9590-ea0502ebe92f",
    "prId" : 4173,
    "prUrl" : "https://github.com/digital-asset/daml/pull/4173",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dcaa5c9d-67d6-4f7c-a19a-a595238b880b",
        "parentId" : null,
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "Haven't we renamed this to `payload`? If not, we should in order to make it consistent.",
        "createdAt" : "2020-01-23T09:39:48Z",
        "updatedAt" : "2020-01-23T19:01:40Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      },
      {
        "id" : "8856ec74-d418-4269-8666-8c374ea79a73",
        "parentId" : "dcaa5c9d-67d6-4f7c-a19a-a595238b880b",
        "authorId" : "9da357e5-66f5-424f-b28c-d68ddac2a372",
        "body" : "@hurryabit it is renamed only in the response. See #3826 :\r\n> I suggest we rename the argument field of the contracts you receive from the JSON API to payload.\r\n\r\nThis particular JSON is a create command, a request sent to JSON API.",
        "createdAt" : "2020-01-23T15:41:28Z",
        "updatedAt" : "2020-01-23T19:01:40Z",
        "lastEditedBy" : "9da357e5-66f5-424f-b28c-d68ddac2a372",
        "tags" : [
        ]
      },
      {
        "id" : "d98c4930-7fa8-484f-b8af-2f2d4e7ec257",
        "parentId" : "dcaa5c9d-67d6-4f7c-a19a-a595238b880b",
        "authorId" : "9da357e5-66f5-424f-b28c-d68ddac2a372",
        "body" : "if you want to rename `argument` to the `payload` in the requests, this should be addressed in #4189.",
        "createdAt" : "2020-01-23T15:57:57Z",
        "updatedAt" : "2020-01-23T19:01:40Z",
        "lastEditedBy" : "9da357e5-66f5-424f-b28c-d68ddac2a372",
        "tags" : [
        ]
      }
    ],
    "commit" : "b8cf409e8cef5b8914ce1acd514a03c9c86e5086",
    "line" : 449,
    "diffHunk" : "@@ -1,1 +313,317 @@  + ``\"<module>:<entity>\"`` if contract template can be uniquely identified by it's module and entity name.\n\n- ``argument`` field contains contract fields as defined in the DAML template and formatted according to :doc:`lf-value-specification`.\n\n.. _create-response:"
  },
  {
    "id" : "57983303-c9c8-4df6-bb03-e42bf7bb26f5",
    "prId" : 4078,
    "prUrl" : "https://github.com/digital-asset/daml/pull/4078",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "db7f70d6-0cb3-4c4b-be2e-2093da679885",
        "parentId" : null,
        "authorId" : "9da357e5-66f5-424f-b28c-d68ddac2a372",
        "body" : "Right, archived events don't have the payload (template args) to apply the search filter to.\r\nShould we explain this in the doc, so we don't get asked why we don't filter out the \"phantom\" archived events?",
        "createdAt" : "2020-01-16T19:04:37Z",
        "updatedAt" : "2020-01-17T19:35:10Z",
        "lastEditedBy" : "9da357e5-66f5-424f-b28c-d68ddac2a372",
        "tags" : [
        ]
      },
      {
        "id" : "ee50e411-5844-4e9e-abce-e9aeac93e708",
        "parentId" : "db7f70d6-0cb3-4c4b-be2e-2093da679885",
        "authorId" : "4c501a40-3340-4f35-b66e-fcfb75e20f37",
        "body" : "I've already explained this in a more abstract, interface-y sense; I hope anyone who cared enough about the implementation details beyond that would dig and find your comment.",
        "createdAt" : "2020-01-16T19:29:13Z",
        "updatedAt" : "2020-01-17T19:35:10Z",
        "lastEditedBy" : "4c501a40-3340-4f35-b66e-fcfb75e20f37",
        "tags" : [
        ]
      }
    ],
    "commit" : "15ed1efe32a67f4760758a7431a61151e87a99ab",
    "line" : 94,
    "diffHunk" : "@@ -1,1 +348,352 @@   the same results.\n\n3. You will almost certainly receive contract IDs in ``archived`` that\n   you never received a ``created`` for.  These are contracts that\n   query filtered out, but for which the server no longer is aware of"
  },
  {
    "id" : "e7c0af68-4bca-40f8-a24e-bc38fa117bcc",
    "prId" : 3936,
    "prUrl" : "https://github.com/digital-asset/daml/pull/3936",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3f6fb5d0-520b-4d7c-9e1b-99f791d3cf35",
        "parentId" : null,
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "This format differs from what you get from the `/commands/exercise` endpoint. Her you get something looking like\r\n```\r\n{\r\n  created: [C1, C2],\r\n  archived: [A1, A2]\r\n}\r\n```\r\nThere you'd instead get\r\n```\r\n[\r\n  {created: C1},\r\n  {created: C2},\r\n  {archived: A1},\r\n  {archived: A2}\r\n]\r\n```\r\nI'd prefer if the encoding is the same for both endpoints. Since the `/commands/exercise` endpoint does not work with the first format, we need to use the second in both places. It would be nice if could keep the order of the events we don't filter out during consolidation for the `/contracts/searchForever` endpoint, but I don't consider it a hard requirement.",
        "createdAt" : "2020-01-16T10:54:27Z",
        "updatedAt" : "2020-01-16T10:55:30Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      }
    ],
    "commit" : "c3e5537e2aecde8437425b615b2f58a501c67967",
    "line" : 57,
    "diffHunk" : "@@ -1,1 +296,300 @@and archives the one above, the same stream will eventually produce::\n\n    {\n        \"created\": [{\n            \"observers\": [],"
  }
]