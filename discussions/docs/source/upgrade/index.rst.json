[
  {
    "id" : "8aeb28fb-d03d-4386-bead-2be9ded20d97",
    "prId" : 4794,
    "prUrl" : "https://github.com/digital-asset/daml/pull/4794",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cd5f3447-291c-40ed-ab48-f3f9fd57084a",
        "parentId" : null,
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "We might want to turn this into a DAML script (in a separate PR). That has the advantage that it’s easier to reproduce without including screenshots of navigator and we can test it.",
        "createdAt" : "2020-03-03T13:18:23Z",
        "updatedAt" : "2020-03-04T14:53:19Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      }
    ],
    "commit" : "ffa1da113ccd87d742c17bdafd8fe4ca866ce0ff",
    "line" : 93,
    "diffHunk" : "@@ -1,1 +134,138 @@We point a browser to http://localhost:4000, and follow the steps:\n\n#. Login as Alice:\n    #. Select Templates tab.\n    #. Create a *CoinProposal* with Alice as issuer and Bob as owner."
  },
  {
    "id" : "e87ff8d1-2aca-4282-9f8f-6ad0efe49357",
    "prId" : 4794,
    "prUrl" : "https://github.com/digital-asset/daml/pull/4794",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b3504886-1844-470d-9df7-90b5753c9009",
        "parentId" : null,
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "I'm not sure I'm a big fan of this. Some of our users will get it wrong. Since we have the mechanisms to rename modules when importing packages, we should teach how to do this instead.",
        "createdAt" : "2020-03-04T15:59:09Z",
        "updatedAt" : "2020-03-04T17:03:33Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      },
      {
        "id" : "e6786e3d-e6ff-4460-89b0-d0bdb9430d10",
        "parentId" : "b3504886-1844-470d-9df7-90b5753c9009",
        "authorId" : "43409235-97e4-48dc-9ec7-403ee0a7de54",
        "body" : "Yeah, we discussed this a bit. We do plan to move the example in this direction. As you say, we may as well show our users an example how to do this!",
        "createdAt" : "2020-03-04T17:29:28Z",
        "updatedAt" : "2020-03-04T17:29:28Z",
        "lastEditedBy" : "43409235-97e4-48dc-9ec7-403ee0a7de54",
        "tags" : [
        ]
      },
      {
        "id" : "92c80052-18f9-40b9-ba48-9a60b2ca2047",
        "parentId" : "b3504886-1844-470d-9df7-90b5753c9009",
        "authorId" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "body" : "I think splitting it up into separate packages makes sense, I don’t really want to explain how to handle colliding module names here and e.g. danban uses the scheme used here. My idea was to leave this to a fairly simple but sensible (as in, I’m comfortable using this in production) example and then link to the packaging docs which will have all the details around data-dependencies, colliding module names, ….",
        "createdAt" : "2020-03-04T17:48:02Z",
        "updatedAt" : "2020-03-04T17:48:03Z",
        "lastEditedBy" : "7ddbf119-9fd4-4e95-b47a-aa60f2648372",
        "tags" : [
        ]
      },
      {
        "id" : "f0b1798d-865b-492f-8451-63e591a108cc",
        "parentId" : "b3504886-1844-470d-9df7-90b5753c9009",
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "A link to an explanation of how to handle module name clashes does the job as well. Thanks.",
        "createdAt" : "2020-03-04T17:58:37Z",
        "updatedAt" : "2020-03-04T17:58:37Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      }
    ],
    "commit" : "ffa1da113ccd87d742c17bdafd8fe4ca866ce0ff",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +39,43 @@use the example of a simple *Coin* template as an example here.\nWe have some prescience that there will be future versions of *Coin*,\nand so place the definition of ``Coin`` in a module named ``CoinV1``\n\n.. literalinclude:: example/coinV1/daml/CoinV1.daml"
  },
  {
    "id" : "f6a7a823-9319-4d3f-9976-78edd776fab5",
    "prId" : 4750,
    "prUrl" : "https://github.com/digital-asset/daml/pull/4750",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9488ae97-7f2e-43d3-8017-33c745f81dad",
        "parentId" : null,
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "I'm not 100% sure but that feels better to me:\r\n```suggestion\r\nthat template would completely break the authorization guarantees provided\r\n ```",
        "createdAt" : "2020-03-04T13:56:40Z",
        "updatedAt" : "2020-03-04T14:05:16Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      }
    ],
    "commit" : "640b866ae4363332d8f87196545558db2d66a968",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +13,17 @@template. Changing the definition of a template, e.g., by extending it\nwith a new choice without agreement from signatories of contracts of\nthat template would completely break the authority guarantees provided\nby DAML.\n"
  },
  {
    "id" : "fdf7dc4d-ec97-40a9-ba77-2ed3bf29473d",
    "prId" : 4750,
    "prUrl" : "https://github.com/digital-asset/daml/pull/4750",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "86ca79f5-477c-423d-a21c-c1191810e562",
        "parentId" : null,
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "```suggestion\r\nand module names for the sake of simplicity.\r\n```",
        "createdAt" : "2020-03-04T13:59:32Z",
        "updatedAt" : "2020-03-04T14:05:17Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      }
    ],
    "commit" : "640b866ae4363332d8f87196545558db2d66a968",
    "line" : 54,
    "diffHunk" : "@@ -1,1 +52,56 @@is not required as templates are identified by the triple\n``(PackageId, ModuleName, TemplateName)`` but here we omit package ids\nand module names for presentational purposes.\n\n.. literalinclude:: daml/Upgrade.daml"
  },
  {
    "id" : "99fab585-0906-4169-98ce-6e6d0029293f",
    "prId" : 4750,
    "prUrl" : "https://github.com/digital-asset/daml/pull/4750",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5178dfe2-3515-46d6-91c9-09e50554578b",
        "parentId" : null,
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "```suggestion\r\nNext, we need to provide a way for\r\n```",
        "createdAt" : "2020-03-04T14:00:23Z",
        "updatedAt" : "2020-03-04T14:05:17Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      }
    ],
    "commit" : "640b866ae4363332d8f87196545558db2d66a968",
    "line" : 61,
    "diffHunk" : "@@ -1,1 +59,63 @@  :end-before: -- COIN_AMOUNT_END\n\nNow, that we defined our new template, we need to provide a way for\nthe signatories issuer and owner to agree to a contract being\nupgraded. It would be possible to structure this such that issuer and"
  },
  {
    "id" : "c31931d1-609e-41a6-af6a-73d179969015",
    "prId" : 4750,
    "prUrl" : "https://github.com/digital-asset/daml/pull/4750",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "854b06a7-956e-4f31-9f37-820c4838ccb3",
        "parentId" : null,
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "```suggestion\r\nthe signatories, issuer and owner, to agree to a contract being\r\n```",
        "createdAt" : "2020-03-04T14:00:54Z",
        "updatedAt" : "2020-03-04T14:05:17Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      }
    ],
    "commit" : "640b866ae4363332d8f87196545558db2d66a968",
    "line" : 62,
    "diffHunk" : "@@ -1,1 +60,64 @@\nNow, that we defined our new template, we need to provide a way for\nthe signatories issuer and owner to agree to a contract being\nupgraded. It would be possible to structure this such that issuer and\nowner have to agree to an upgrade for each *Coin* contract"
  },
  {
    "id" : "23dabef1-e481-4d13-a98b-b59205936b02",
    "prId" : 4750,
    "prUrl" : "https://github.com/digital-asset/daml/pull/4750",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "eda615a4-d6f2-40d4-8912-3883005cd84c",
        "parentId" : null,
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "```suggestion\r\nowner have to agree to an upgrade for each individual *Coin* contract\r\n```",
        "createdAt" : "2020-03-04T14:01:46Z",
        "updatedAt" : "2020-03-04T14:05:17Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      }
    ],
    "commit" : "640b866ae4363332d8f87196545558db2d66a968",
    "line" : 64,
    "diffHunk" : "@@ -1,1 +62,66 @@the signatories issuer and owner to agree to a contract being\nupgraded. It would be possible to structure this such that issuer and\nowner have to agree to an upgrade for each *Coin* contract\nseparately. However, since the template definition for those is all\nthe same, this is usually not necessary for most"
  },
  {
    "id" : "fa84e340-aef9-461e-ab4b-1bc729b8f843",
    "prId" : 4750,
    "prUrl" : "https://github.com/digital-asset/daml/pull/4750",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "09cd6896-68c5-4b0d-908e-1289ba61feac",
        "parentId" : null,
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "```suggestion\r\nseparately. However, since the template definition for all of them is\r\n```",
        "createdAt" : "2020-03-04T14:02:22Z",
        "updatedAt" : "2020-03-04T14:05:17Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      }
    ],
    "commit" : "640b866ae4363332d8f87196545558db2d66a968",
    "line" : 65,
    "diffHunk" : "@@ -1,1 +63,67 @@upgraded. It would be possible to structure this such that issuer and\nowner have to agree to an upgrade for each *Coin* contract\nseparately. However, since the template definition for those is all\nthe same, this is usually not necessary for most\napplications. Instead, we collect agreement from the signatories only"
  },
  {
    "id" : "b2abeb54-d886-4d57-a445-515ae4647a64",
    "prId" : 4750,
    "prUrl" : "https://github.com/digital-asset/daml/pull/4750",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ad03afa9-b87a-4433-9d19-554c7eac103b",
        "parentId" : null,
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "The word \"accept\" is a bit overloaded here. We also need to make it clear that we pass the contract by reference not by value.\r\n```suggestion\r\nhas one *nonconsuming* choice that takes the contract ID of a *Coin* contract, archives\r\n```",
        "createdAt" : "2020-03-04T14:03:40Z",
        "updatedAt" : "2020-03-04T14:05:18Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      }
    ],
    "commit" : "640b866ae4363332d8f87196545558db2d66a968",
    "line" : 81,
    "diffHunk" : "@@ -1,1 +79,83 @@\nNow we can define the *UpgradeCoinAgreement* template. This template\nhas one *nonconsuming* choice that accepts a *Coin* contract, archives\nthis *Coin* contract and creates a *CoinWithAmount* contract with\n*amount* set to 1."
  },
  {
    "id" : "d59802bb-7994-4a31-b7cf-507b9849bf81",
    "prId" : 4750,
    "prUrl" : "https://github.com/digital-asset/daml/pull/4750",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "803cd8b6-45f2-4772-84af-084cdd022561",
        "parentId" : null,
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "```suggestion\r\nthe same issuer and owner and the *amount* set to 1.\r\n```",
        "createdAt" : "2020-03-04T14:05:05Z",
        "updatedAt" : "2020-03-04T14:05:18Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      }
    ],
    "commit" : "640b866ae4363332d8f87196545558db2d66a968",
    "line" : 83,
    "diffHunk" : "@@ -1,1 +81,85 @@has one *nonconsuming* choice that accepts a *Coin* contract, archives\nthis *Coin* contract and creates a *CoinWithAmount* contract with\n*amount* set to 1.\n\n.. literalinclude:: daml/Upgrade.daml"
  }
]