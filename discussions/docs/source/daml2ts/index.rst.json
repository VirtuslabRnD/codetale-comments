[
  {
    "id" : "7c464670-7474-448d-be55-4eb785eb8fee",
    "prId" : 5171,
    "prUrl" : "https://github.com/digital-asset/daml/pull/5171",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2ab4f286-72ab-4b7c-96f5-a4fbd8718873",
        "parentId" : null,
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "There is no more `PACKAGE` parameter and we're finally writing JavaScript + typing. We should embrace that:\r\n```suggestion\r\nIn outline, the command to generate JavaScript and TypeScript typings from DAML is ``daml codegen ts DAR -o OUTDIR`` where ``DAR`` is the path to a DAR file (generated via ``daml build``) and ``OUTDIR`` is a directory where you want the JavaScript to be written.\r\n```\r\nCan you please check there are no more references to `PACKAGE` elsewhere.",
        "createdAt" : "2020-03-25T17:28:40Z",
        "updatedAt" : "2020-03-25T17:50:50Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      },
      {
        "id" : "da609f5c-94ac-4a01-9c35-9adaa6764356",
        "parentId" : "2ab4f286-72ab-4b7c-96f5-a4fbd8718873",
        "authorId" : "be70ea6e-6fac-4058-8a37-3814d07afb64",
        "body" : "(1) Fixed.\r\n(2) Done.",
        "createdAt" : "2020-03-25T18:30:57Z",
        "updatedAt" : "2020-03-25T18:30:57Z",
        "lastEditedBy" : "be70ea6e-6fac-4058-8a37-3814d07afb64",
        "tags" : [
        ]
      }
    ],
    "commit" : "ede39c0bc7b73401d689c75f3f46feb6f2c5843f",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +22,26 @@``daml2ts`` is invoked via the DAML SDK assistant.\n\nIn outline, the command to generate TypeScript from DAML is ``daml codegen ts DAR -o OUTDIR`` where ``DAR`` is the path to a DAR file (generated via ``daml build``), ``OUTDIR`` is a directory where you want the TypeScript to be written and ``PACKAGE`` is a desired TypeScript package name.\n\nHere's a complete example that generates TypeScript from a project produced from the standard \"skeleton\" template."
  },
  {
    "id" : "49fb78b1-5450-49c7-b8a1-445ebafb7098",
    "prId" : 5171,
    "prUrl" : "https://github.com/digital-asset/daml/pull/5171",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "094d3f90-ebbc-4e03-aa69-4ad206ea7a08",
        "parentId" : null,
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "Isn't there a `src` somewhere in the path to `Main.ts` as well?",
        "createdAt" : "2020-03-25T17:31:18Z",
        "updatedAt" : "2020-03-25T17:50:50Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      },
      {
        "id" : "58b2f464-de88-483d-80ef-5031e3be6810",
        "parentId" : "094d3f90-ebbc-4e03-aa69-4ad206ea7a08",
        "authorId" : "be70ea6e-6fac-4058-8a37-3814d07afb64",
        "body" : "Yes. Fixed.",
        "createdAt" : "2020-03-25T18:31:43Z",
        "updatedAt" : "2020-03-25T18:31:43Z",
        "lastEditedBy" : "be70ea6e-6fac-4058-8a37-3814d07afb64",
        "tags" : [
        ]
      }
    ],
    "commit" : "ede39c0bc7b73401d689c75f3f46feb6f2c5843f",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +39,43 @@  - The files are arranged into directories;\n  - One of those directories will be named as per the ``PACKAGE`` argument and will contain the definitions corresponding to the DAML files in the project;\n  - For example, ``generated/ts/my-proj/Main.ts`` contains the definitions for ``daml/Main.daml``;\n  - The remaining directories correspond to modules of the DAML standard library;\n  - Those directories have numeric names (the names are hashes of the DAML-LF package they are derived from)."
  },
  {
    "id" : "998721b8-8a99-4a11-bd6c-b663c8f52b18",
    "prId" : 4975,
    "prUrl" : "https://github.com/digital-asset/daml/pull/4975",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "92986d23-3ef7-4616-ae94-5ec8505b12b2",
        "parentId" : null,
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "I think documenting this type just adds complexity that doesn't help with anything.\r\n```suggestion\r\n   const Color = {\r\n```",
        "createdAt" : "2020-03-16T09:38:01Z",
        "updatedAt" : "2020-03-16T09:54:59Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      },
      {
        "id" : "d499fd7c-2fec-41ce-8433-365740228d61",
        "parentId" : "92986d23-3ef7-4616-ae94-5ec8505b12b2",
        "authorId" : "be70ea6e-6fac-4058-8a37-3814d07afb64",
        "body" : "https://github.com/digital-asset/daml/pull/5044",
        "createdAt" : "2020-03-17T16:36:23Z",
        "updatedAt" : "2020-03-17T16:36:23Z",
        "lastEditedBy" : "be70ea6e-6fac-4058-8a37-3814d07afb64",
        "tags" : [
        ]
      }
    ],
    "commit" : "3f6f10a59e79f234fa88ceca81c572c611a97f7d",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +204,208 @@   type Color = | 'Red' | 'Blue' | 'Yellow'\n\n   const Color : {readonly Red: Color; readonly Blue: Color; readonly Yellow: Color} = {\n     Red: 'Red',\n     Blue: 'Blue',"
  },
  {
    "id" : "61f10bee-ebd9-4c79-9a15-992308316844",
    "prId" : 4261,
    "prUrl" : "https://github.com/digital-asset/daml/pull/4261",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cdb27a9a-a470-4c7c-9dd8-fe825632b2ec",
        "parentId" : null,
        "authorId" : "c1c263c2-6852-4f5d-a507-38300d7a6e98",
        "body" : "Really? Why is `Int` mapped to a Typescript `string`?",
        "createdAt" : "2020-01-30T16:55:19Z",
        "updatedAt" : "2020-01-30T16:56:17Z",
        "lastEditedBy" : "c1c263c2-6852-4f5d-a507-38300d7a6e98",
        "tags" : [
        ]
      }
    ],
    "commit" : "a76046d79ab88f984b34a7709ce11c23e2a9fd43",
    "line" : 104,
    "diffHunk" : "@@ -1,1 +64,68 @@| ``Bool``          | ``Bool``           | ``boolean``                      |\n+-------------------+--------------------+----------------------------------+\n| ``Int``           | ``Int``            | ``string``                       |\n+-------------------+--------------------+----------------------------------+\n| ``Decimal``       | ``Decimal``        | ``string``                       |"
  },
  {
    "id" : "d1b9b4e8-ce04-41a2-84dd-f588d28031a0",
    "prId" : 4196,
    "prUrl" : "https://github.com/digital-asset/daml/pull/4196",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dc3c7e59-764e-4eff-b980-792adbec6e26",
        "parentId" : null,
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "I understand you're excited but I'm not sure that makes a lot of sense to our users. I suggest something like\r\n> `daml2ts` - A TypeScript codegen for DAML",
        "createdAt" : "2020-01-28T09:31:34Z",
        "updatedAt" : "2020-01-28T09:57:12Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      }
    ],
    "commit" : "0ee7fd589c7e34883bbaedb4edf624607e808634",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +2,6 @@.. SPDX-License-Identifier: Apache-2.0\n\nTypeScript!\n###########\n"
  },
  {
    "id" : "1ea9e0bb-5e4f-4366-832c-8c80995a50fd",
    "prId" : 4196,
    "prUrl" : "https://github.com/digital-asset/daml/pull/4196",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "92fb5e8e-04fa-4ab5-8402-eb66ee96fbc3",
        "parentId" : null,
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "The code `daml2ts` generates uses the library...",
        "createdAt" : "2020-01-28T09:32:23Z",
        "updatedAt" : "2020-01-28T09:57:12Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      },
      {
        "id" : "3115ee90-cb26-472c-87c0-8d19326d2681",
        "parentId" : "92fb5e8e-04fa-4ab5-8402-eb66ee96fbc3",
        "authorId" : "be70ea6e-6fac-4058-8a37-3814d07afb64",
        "body" : "✔️ ",
        "createdAt" : "2020-01-29T13:57:54Z",
        "updatedAt" : "2020-01-29T13:57:54Z",
        "lastEditedBy" : "be70ea6e-6fac-4058-8a37-3814d07afb64",
        "tags" : [
        ]
      }
    ],
    "commit" : "0ee7fd589c7e34883bbaedb4edf624607e808634",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +15,19 @@``daml2ts`` inputs are compiled DAML modules. ``daml2ts`` outputs are TypeScript source files containing definitions modeling the DAML entities found.\n\nThe code ``daml2ts`` generates is in terms of the package `@daml/types <https://github.com/digital-asset/daml/tree/master/language-support/ts/daml-types>`_.\n\nPrimitives: @daml/types"
  },
  {
    "id" : "0a7a387f-524e-4a6c-824a-2596b87f3905",
    "prId" : 4196,
    "prUrl" : "https://github.com/digital-asset/daml/pull/4196",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "84e8cacc-54ff-4b72-ad11-941eb494dfd6",
        "parentId" : null,
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "Let's not tell our users about this one. It's an implementation detail and doesn't make too much sense when you don't also talk about the companion objects, which I would like to avoid.",
        "createdAt" : "2020-01-28T09:34:03Z",
        "updatedAt" : "2020-01-28T09:57:12Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      }
    ],
    "commit" : "0ee7fd589c7e34883bbaedb4edf624607e808634",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +24,28 @@**Interfaces**:\n\n- ``Serializable<T>``\n- ``Template<T extends object, K = unknown>``\n- ``Choice<T extends object, C, R, K = unknown>``"
  },
  {
    "id" : "fd8cfc64-ee53-4cba-8cad-e819a8909c18",
    "prId" : 4196,
    "prUrl" : "https://github.com/digital-asset/daml/pull/4196",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "411929de-f586-468d-8e8a-cd2884e1cb67",
        "parentId" : null,
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "Let's remove the decoder stuff from here. It's an implementation detail and nobody knows what `jtv` refers to anyway. An object \"implements\" an interface rather than \"extends\" it. I would say something like\r\n\r\n> An object that implements the `Template<T, K>` interface provides metadata for a template of type `T` with a potential contract key of type `K`, where the absence of contract key is marked by `K = undefined`. Such metadata includes the name of the template, the module and package where it is defined, and a description of the types `T` and `K`.\r\n\r\nSimilarly for choices.",
        "createdAt" : "2020-01-28T09:42:17Z",
        "updatedAt" : "2020-01-28T09:57:12Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      },
      {
        "id" : "8c0e3f16-efcc-44c8-abd1-0671a1e300f1",
        "parentId" : "411929de-f586-468d-8e8a-cd2884e1cb67",
        "authorId" : "be70ea6e-6fac-4058-8a37-3814d07afb64",
        "body" : "Oops. Sorry not obvious (since you're reviewing the ReST), that section you are commenting on is a comment 😄 .",
        "createdAt" : "2020-01-28T10:40:58Z",
        "updatedAt" : "2020-01-28T10:40:59Z",
        "lastEditedBy" : "be70ea6e-6fac-4058-8a37-3814d07afb64",
        "tags" : [
        ]
      },
      {
        "id" : "c80c0677-b68d-4b58-bdf7-4f0bc9513425",
        "parentId" : "411929de-f586-468d-8e8a-cd2884e1cb67",
        "authorId" : "be70ea6e-6fac-4058-8a37-3814d07afb64",
        "body" : "✔️ \r\n",
        "createdAt" : "2020-01-29T13:54:37Z",
        "updatedAt" : "2020-01-29T13:54:38Z",
        "lastEditedBy" : "be70ea6e-6fac-4058-8a37-3814d07afb64",
        "tags" : [
        ]
      }
    ],
    "commit" : "0ee7fd589c7e34883bbaedb4edf624607e808634",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +31,35 @@        An object that extends the ``Serializable<T>`` interface has a field ``decoder: () => jtv.Decoder<T>``.\n        An object that extends the ``Template<T, K>`` interface has fields ``templateId: string``, ``keyDecoder: ()=> jtv.Decoder<K>``, ``Archive: Choice<T, {}, {}>`` and extends ``Serializable<T>``.\n        An object that extends the ``Choice<T, C, R, K>`` interface has fields ``template: () => Template<T, K>``, ``argumentDecoder: () => jtv.Decoder<C>``, ``resultDecoder: () => jtv.Decoder<R>`` and ``choiceName: string``.\n\n**Types**:"
  },
  {
    "id" : "39421a6a-19bf-434f-81d9-e514b61440b6",
    "prId" : 4196,
    "prUrl" : "https://github.com/digital-asset/daml/pull/4196",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "adb3602b-5a92-4c34-b06c-d5620e3ad4e3",
        "parentId" : null,
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "The first column should be the DAML type. That's what we get as input and users want to know how it gets converted into TS. Maybe this whole section should make this clear by having some like `Primitive DAML types` as its heading and then explaining that `@daml/types` contains TS equivalents of these types.",
        "createdAt" : "2020-01-28T09:44:47Z",
        "updatedAt" : "2020-01-28T09:57:12Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      },
      {
        "id" : "70c071ef-0a92-4a29-94b1-8ecd96567d55",
        "parentId" : "adb3602b-5a92-4c34-b06c-d5620e3ad4e3",
        "authorId" : "be70ea6e-6fac-4058-8a37-3814d07afb64",
        "body" : "I will alter the table to lead with the DAML type and change the heading.",
        "createdAt" : "2020-01-29T14:06:11Z",
        "updatedAt" : "2020-01-29T14:06:11Z",
        "lastEditedBy" : "be70ea6e-6fac-4058-8a37-3814d07afb64",
        "tags" : [
        ]
      },
      {
        "id" : "a76c5fa4-49d4-4999-9362-9d0994444c5c",
        "parentId" : "adb3602b-5a92-4c34-b06c-d5620e3ad4e3",
        "authorId" : "be70ea6e-6fac-4058-8a37-3814d07afb64",
        "body" : "✔️ ",
        "createdAt" : "2020-01-29T14:20:52Z",
        "updatedAt" : "2020-01-29T14:20:52Z",
        "lastEditedBy" : "be70ea6e-6fac-4058-8a37-3814d07afb64",
        "tags" : [
        ]
      }
    ],
    "commit" : "0ee7fd589c7e34883bbaedb4edf624607e808634",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +36,40 @@\n+-------------------+------------------+----------------------------------+\n| TypeScript        | DAML equiv.      | TypeScript definition            |\n+===================+==================+==================================+\n| ``Unit``          | ``()``           | ``{}``                           |"
  },
  {
    "id" : "dfea9009-bf15-4b67-9332-d4825f0ace8c",
    "prId" : 4196,
    "prUrl" : "https://github.com/digital-asset/daml/pull/4196",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8d025d76-64f7-4114-af1a-addd08011321",
        "parentId" : null,
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "Nice!",
        "createdAt" : "2020-01-28T09:45:20Z",
        "updatedAt" : "2020-01-28T09:57:12Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      }
    ],
    "commit" : "0ee7fd589c7e34883bbaedb4edf624607e808634",
    "line" : 72,
    "diffHunk" : "@@ -1,1 +70,74 @@\n.. note::\n   The Typescript definition of type ``Optional<T>`` in the above table might look complicated. It accounts for differences in the encoding of optional values when nested versus when they are not (i.e. \"top-level\"). For example, ``null`` and ``\"foo\"`` are two possible values of ``Optional<Text>`` whereas, ``[]`` and ``[\"foo\"]`` are two possible values of type ``Optional<Optional<Text>>`` (``null`` is another possible value, ``[null]`` is **not**).\n\nDAML to TypeScript mappings"
  },
  {
    "id" : "16e3d068-16a2-44c0-a7cf-a4451838156c",
    "prId" : 4196,
    "prUrl" : "https://github.com/digital-asset/daml/pull/4196",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d9dce3bd-c511-4c4e-a80e-f5e2b9446369",
        "parentId" : null,
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "I would move this on the line before. Then the DAML and the TS look a bit closer.",
        "createdAt" : "2020-01-28T09:46:16Z",
        "updatedAt" : "2020-01-28T09:57:12Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      },
      {
        "id" : "3b751790-2769-4c79-886e-a277f593489b",
        "parentId" : "d9dce3bd-c511-4c4e-a80e-f5e2b9446369",
        "authorId" : "be70ea6e-6fac-4058-8a37-3814d07afb64",
        "body" : "✔️ ",
        "createdAt" : "2020-01-29T14:00:11Z",
        "updatedAt" : "2020-01-29T14:00:11Z",
        "lastEditedBy" : "be70ea6e-6fac-4058-8a37-3814d07afb64",
        "tags" : [
        ]
      }
    ],
    "commit" : "0ee7fd589c7e34883bbaedb4edf624607e808634",
    "line" : 88,
    "diffHunk" : "@@ -1,1 +86,90 @@\n   data Person =\n     Person with\n       name: Text\n       party: Party"
  },
  {
    "id" : "92013bc1-b6dc-4b63-8020-8d45197584bb",
    "prId" : 4196,
    "prUrl" : "https://github.com/digital-asset/daml/pull/4196",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a68499bf-f2e5-44da-87dc-a6b80ad26cc8",
        "parentId" : null,
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "We should move tuples up into the big table. This section is more about variants that about tuples.",
        "createdAt" : "2020-01-28T09:48:25Z",
        "updatedAt" : "2020-01-28T09:57:12Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      },
      {
        "id" : "3ea176ba-31e6-48bf-8384-ab8a5bb5960a",
        "parentId" : "a68499bf-f2e5-44da-87dc-a6b80ad26cc8",
        "authorId" : "be70ea6e-6fac-4058-8a37-3814d07afb64",
        "body" : "I'm not clear on how to do that. I thought I did a pretty good job on this (slightly challenging) section. Do you feel strongly about this?",
        "createdAt" : "2020-01-29T14:02:22Z",
        "updatedAt" : "2020-01-29T14:02:22Z",
        "lastEditedBy" : "be70ea6e-6fac-4058-8a37-3814d07afb64",
        "tags" : [
        ]
      },
      {
        "id" : "ed5457f9-8697-4fe3-9171-35a29524cd69",
        "parentId" : "a68499bf-f2e5-44da-87dc-a6b80ad26cc8",
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "To me, it feels like we're in a section about data type definitions here. That's why tuples don't fit well. You can't define them yourself but they are defined in the stdlib. I guess that's what made this section challenging.\r\n\r\nI suggest we add rows to the big table above:\r\n```\r\n+-----------+-------------------------+\r\n| DAML      | TypeScript              |\r\n+-----------+-------------------------+\r\n| (a, b)    | { _1: a; _2: b }        |\r\n| (a, b, c) | { _1: a; _2: b; _3: c } |\r\n+-----------+-------------------------+\r\n```\r\n And also add a remark that `n`-tuples for `n > 3` work analogously.",
        "createdAt" : "2020-01-29T14:24:34Z",
        "updatedAt" : "2020-01-29T14:24:34Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      },
      {
        "id" : "ac0c0ce9-44a0-4792-8f06-34b300d7461e",
        "parentId" : "a68499bf-f2e5-44da-87dc-a6b80ad26cc8",
        "authorId" : "be70ea6e-6fac-4058-8a37-3814d07afb64",
        "body" : "Got it. Moving to the big table!",
        "createdAt" : "2020-01-30T13:30:47Z",
        "updatedAt" : "2020-01-30T13:30:48Z",
        "lastEditedBy" : "be70ea6e-6fac-4058-8a37-3814d07afb64",
        "tags" : [
        ]
      }
    ],
    "commit" : "0ee7fd589c7e34883bbaedb4edf624607e808634",
    "line" : 104,
    "diffHunk" : "@@ -1,1 +102,106 @@   }\n\nTuples\n~~~~~~\n"
  },
  {
    "id" : "79e8794f-73db-4ddd-ac3b-4c09d41e187b",
    "prId" : 4196,
    "prUrl" : "https://github.com/digital-asset/daml/pull/4196",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f6a759e4-e732-4319-b694-45499bfb11e7",
        "parentId" : null,
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "It might make sense to put a link to the \"Discriminated Unions\" section in the TS handbook under the phrase \"discriminated union\".\r\nhttps://www.typescriptlang.org/docs/handbook/advanced-types.html#discriminated-unions",
        "createdAt" : "2020-01-28T09:50:23Z",
        "updatedAt" : "2020-01-28T09:57:12Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      },
      {
        "id" : "23154d75-9c76-43a7-af5e-5b3c28a9a545",
        "parentId" : "f6a759e4-e732-4319-b694-45499bfb11e7",
        "authorId" : "be70ea6e-6fac-4058-8a37-3814d07afb64",
        "body" : "✔️ ",
        "createdAt" : "2020-01-29T14:03:03Z",
        "updatedAt" : "2020-01-29T14:03:04Z",
        "lastEditedBy" : "be70ea6e-6fac-4058-8a37-3814d07afb64",
        "tags" : [
        ]
      }
    ],
    "commit" : "0ee7fd589c7e34883bbaedb4edf624607e808634",
    "line" : 143,
    "diffHunk" : "@@ -1,1 +141,145 @@     | Add (Expr a, Expr a)\n\nIn TypeScript, it is represented as a discriminated union.\n\n.. code-block:: typescript"
  },
  {
    "id" : "ef3a7e5b-f5fa-4d7d-b616-e1d73f392192",
    "prId" : 4196,
    "prUrl" : "https://github.com/digital-asset/daml/pull/4196",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "20c1e183-15ee-4711-b1ff-3401f59649ac",
        "parentId" : null,
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "What's wrong with the dot here? Some weird unicode symbol?",
        "createdAt" : "2020-01-28T09:50:46Z",
        "updatedAt" : "2020-01-28T09:57:12Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      },
      {
        "id" : "ab00bf5f-679b-4bea-b05c-3a1b010116bf",
        "parentId" : "20c1e183-15ee-4711-b1ff-3401f59649ac",
        "authorId" : "be70ea6e-6fac-4058-8a37-3814d07afb64",
        "body" : "Dunno 😕 .\r\n",
        "createdAt" : "2020-01-29T13:56:53Z",
        "updatedAt" : "2020-01-29T13:56:53Z",
        "lastEditedBy" : "be70ea6e-6fac-4058-8a37-3814d07afb64",
        "tags" : [
        ]
      }
    ],
    "commit" : "0ee7fd589c7e34883bbaedb4edf624607e808634",
    "line" : 156,
    "diffHunk" : "@@ -1,1 +154,158 @@~~~~~~~~~~~~~~~~\n\nLet's slightly modify the ``Expr a`` type of the last section into the following.\n\n.. code-block:: daml"
  },
  {
    "id" : "ec719437-3f85-4c5b-8fff-f549fb2f799f",
    "prId" : 4196,
    "prUrl" : "https://github.com/digital-asset/daml/pull/4196",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "18533b87-f023-46c4-a5c3-e4d454969599",
        "parentId" : null,
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "Let's not document the companion object for the `Transfer` type.",
        "createdAt" : "2020-01-28T09:53:10Z",
        "updatedAt" : "2020-01-28T09:57:12Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      },
      {
        "id" : "8fa9904b-17bf-4d74-ba8a-7a67eb65a37b",
        "parentId" : "18533b87-f023-46c4-a5c3-e4d454969599",
        "authorId" : "be70ea6e-6fac-4058-8a37-3814d07afb64",
        "body" : "✔️ ",
        "createdAt" : "2020-01-29T13:55:10Z",
        "updatedAt" : "2020-01-29T13:55:11Z",
        "lastEditedBy" : "be70ea6e-6fac-4058-8a37-3814d07afb64",
        "tags" : [
        ]
      }
    ],
    "commit" : "0ee7fd589c7e34883bbaedb4edf624607e808634",
    "line" : 250,
    "diffHunk" : "@@ -1,1 +248,252 @@   :linenos:\n\n   const Transfer: daml.Serializable<Transfer> = ({\n     /* ... */\n     }),"
  },
  {
    "id" : "0706e4c4-614c-4599-84fe-3c18aeff4c99",
    "prId" : 4196,
    "prUrl" : "https://github.com/digital-asset/daml/pull/4196",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ea3e70ab-7921-4aa2-9a7a-7a7daed1ee99",
        "parentId" : null,
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "We should very briefly mention that the `undefined` captures the fact that `Iou` has no contract key.",
        "createdAt" : "2020-01-28T09:54:15Z",
        "updatedAt" : "2020-01-28T09:57:12Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      },
      {
        "id" : "e8f17e78-a1d5-4285-9f20-bc1d7ee4c5da",
        "parentId" : "ea3e70ab-7921-4aa2-9a7a-7a7daed1ee99",
        "authorId" : "be70ea6e-6fac-4058-8a37-3814d07afb64",
        "body" : "✔️ ",
        "createdAt" : "2020-01-29T14:04:41Z",
        "updatedAt" : "2020-01-29T14:04:41Z",
        "lastEditedBy" : "be70ea6e-6fac-4058-8a37-3814d07afb64",
        "tags" : [
        ]
      }
    ],
    "commit" : "0ee7fd589c7e34883bbaedb4edf624607e808634",
    "line" : 255,
    "diffHunk" : "@@ -1,1 +253,257 @@   })\n\n   const Iou: daml.Template<Iou, undefined> & {\n     Archive: daml.Choice<Iou, DA_Internal_Template.Archive, {}, undefined>;\n     Transfer: daml.Choice<Iou, Transfer, daml.ContractId<Iou>, undefined>;"
  },
  {
    "id" : "cd2ac2d6-4b23-4085-9e13-6ffbddee66e4",
    "prId" : 4196,
    "prUrl" : "https://github.com/digital-asset/daml/pull/4196",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "124da39d-2e01-4ed8-9c42-28b9e4b87450",
        "parentId" : null,
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "Each template results in a companion object...",
        "createdAt" : "2020-01-28T09:56:03Z",
        "updatedAt" : "2020-01-28T09:57:12Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      },
      {
        "id" : "0c23d11b-64a5-4b90-98b0-f92f5c48289c",
        "parentId" : "124da39d-2e01-4ed8-9c42-28b9e4b87450",
        "authorId" : "be70ea6e-6fac-4058-8a37-3814d07afb64",
        "body" : "✔️ ",
        "createdAt" : "2020-01-29T13:55:51Z",
        "updatedAt" : "2020-01-29T13:55:51Z",
        "lastEditedBy" : "be70ea6e-6fac-4058-8a37-3814d07afb64",
        "tags" : [
        ]
      }
    ],
    "commit" : "0ee7fd589c7e34883bbaedb4edf624607e808634",
    "line" : 245,
    "diffHunk" : "@@ -1,1 +243,247 @@   }\n\nEach template and each template choice also results in the generation of a companion object corresponding to the choice or template type. Here, is a schematic of the ones generated from the ``Iou`` template.\n\n.. code-block:: typescript"
  },
  {
    "id" : "9d995cfc-9f00-44e8-bfc6-c36ce44745ae",
    "prId" : 4196,
    "prUrl" : "https://github.com/digital-asset/daml/pull/4196",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2966d08a-9e84-4ca1-bbd2-4e5684501323",
        "parentId" : null,
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "Very nice.",
        "createdAt" : "2020-01-28T09:56:19Z",
        "updatedAt" : "2020-01-28T09:57:13Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      }
    ],
    "commit" : "0ee7fd589c7e34883bbaedb4edf624607e808634",
    "line" : 266,
    "diffHunk" : "@@ -1,1 +264,268 @@What **is** important is the use of the companion objects when creating contracts and exercising choices using the `@daml/ledger <https://github.com/digital-asset/daml/tree/master/language-support/ts/daml-ledger>`_ package. The following code snippet demonstrates their usage.\n\n.. code-block:: typescript\n   :linenos:\n"
  },
  {
    "id" : "e18bb20d-250b-4a72-8826-d91db461d127",
    "prId" : 4196,
    "prUrl" : "https://github.com/digital-asset/daml/pull/4196",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "495c0a2d-0c8c-4870-ba00-fbe87da606c0",
        "parentId" : null,
        "authorId" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "body" : "I just realized we're using small `t` in DAML and capital `T` in TypeScript. Let's use the same. Since it is meant to be a metavariable, we can use capital `T` in DAML too. We could also switch to Greek tau if that makes you feel more comfortable. Or alpha, beta.",
        "createdAt" : "2020-01-29T14:28:52Z",
        "updatedAt" : "2020-01-29T14:28:56Z",
        "lastEditedBy" : "695308fb-441d-4069-a1cc-f8c5944daace",
        "tags" : [
        ]
      },
      {
        "id" : "9589b6b4-56df-4498-ad6e-6cf0c66af250",
        "parentId" : "495c0a2d-0c8c-4870-ba00-fbe87da606c0",
        "authorId" : "be70ea6e-6fac-4058-8a37-3814d07afb64",
        "body" : "Switching to τ and η",
        "createdAt" : "2020-01-29T14:37:33Z",
        "updatedAt" : "2020-01-29T14:37:33Z",
        "lastEditedBy" : "be70ea6e-6fac-4058-8a37-3814d07afb64",
        "tags" : [
        ]
      }
    ],
    "commit" : "0ee7fd589c7e34883bbaedb4edf624607e808634",
    "line" : 56,
    "diffHunk" : "@@ -1,1 +54,58 @@| ``Party``         | ``Party``        | ``string``                       |\n+-------------------+------------------+----------------------------------+\n| ``List<T>``       | ``[t]``          | ``T[]``                          |\n+-------------------+------------------+----------------------------------+\n| ``Date``          | ``Date``         | ``string``                       |"
  }
]