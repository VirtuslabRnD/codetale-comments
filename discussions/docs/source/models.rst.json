[
  {
    "id" : "83f87d3f-5b39-424f-bc73-dce686afecfd",
    "prId" : 4428,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/4428#pullrequestreview-678913689",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0bfc9da8-51bb-4e83-9086-8330d5cf94ff",
        "parentId" : null,
        "authorId" : "672c9aff-2ae2-4b23-92a1-3e0ef1c935e9",
        "body" : "@andreakress do we need to mention anything about which version of mlflow client this was added in, or reflecting the current state is fine?",
        "createdAt" : "2021-06-08T18:19:29Z",
        "updatedAt" : "2021-06-08T18:23:02Z",
        "lastEditedBy" : "672c9aff-2ae2-4b23-92a1-3e0ef1c935e9",
        "tags" : [
        ]
      },
      {
        "id" : "a0e84bd8-7e63-445f-b06a-86fc2ac0d831",
        "parentId" : "0bfc9da8-51bb-4e83-9086-8330d5cf94ff",
        "authorId" : "0b9595f2-5a0a-4a5c-aff1-cb1a81b3d6b5",
        "body" : "So, for the OS docs, this will appear with the new release, right (1.18.0?). If I look at earlier doc versions, it will not appear? If so, no need to add the version it was added in. ",
        "createdAt" : "2021-06-08T18:32:09Z",
        "updatedAt" : "2021-06-08T18:32:09Z",
        "lastEditedBy" : "0b9595f2-5a0a-4a5c-aff1-cb1a81b3d6b5",
        "tags" : [
        ]
      },
      {
        "id" : "6601af6e-c3ae-44b9-8260-9bacf7075ab8",
        "parentId" : "0bfc9da8-51bb-4e83-9086-8330d5cf94ff",
        "authorId" : "672c9aff-2ae2-4b23-92a1-3e0ef1c935e9",
        "body" : "That's right - i forgot you can look at earlier versions of docs. That makes sense!",
        "createdAt" : "2021-06-08T19:17:20Z",
        "updatedAt" : "2021-06-08T19:17:21Z",
        "lastEditedBy" : "672c9aff-2ae2-4b23-92a1-3e0ef1c935e9",
        "tags" : [
        ]
      }
    ],
    "commit" : "4e75fb3948aaec12f16f401d416940b3a3f90cab",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +92,96 @@\ndatabricks_runtime\n    Databricks runtime version and type, if the model was trained in a Databricks notebook or job.\n\n"
  },
  {
    "id" : "c8a8b46a-1b2c-4317-a5e3-e71041e668f2",
    "prId" : 4068,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/4068#pullrequestreview-584491960",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "09afb779-e75d-45c1-87d7-7c39aa81e7a1",
        "parentId" : null,
        "authorId" : "6df779be-baaa-40f8-bfb9-de44c59eb7af",
        "body" : "need to confirm this code block works",
        "createdAt" : "2021-02-05T16:18:35Z",
        "updatedAt" : "2021-02-12T20:05:46Z",
        "lastEditedBy" : "6df779be-baaa-40f8-bfb9-de44c59eb7af",
        "tags" : [
        ]
      }
    ],
    "commit" : "e026c4c520f34ec458e8437e5ff80eddf8af9063",
    "line" : 130,
    "diffHunk" : "@@ -1,1 +248,252 @@on the ``MNIST dataset``:\n\n.. code-block:: python\n\n    from keras.datasets import mnist"
  },
  {
    "id" : "35230cfa-5a33-4d43-8268-5a7d473d7b15",
    "prId" : 4068,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/4068#pullrequestreview-585787142",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2ee7e467-b14b-4468-9b62-cb1ba709ddfb",
        "parentId" : null,
        "authorId" : "6df779be-baaa-40f8-bfb9-de44c59eb7af",
        "body" : "add in \"All flavors support column-based signatures.\"",
        "createdAt" : "2021-02-08T18:15:04Z",
        "updatedAt" : "2021-02-12T20:05:46Z",
        "lastEditedBy" : "6df779be-baaa-40f8-bfb9-de44c59eb7af",
        "tags" : [
        ]
      }
    ],
    "commit" : "e026c4c520f34ec458e8437e5ff80eddf8af9063",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +118,122 @@\nColumn-based Signature Example\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nAll flavors support column-based signatures.\n"
  },
  {
    "id" : "8ed21a41-7a65-4b15-b4db-b94edf37eedb",
    "prId" : 4068,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/4068#pullrequestreview-585787142",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ffac80fa-eb63-49dc-9b2b-1b83ba7a7ca9",
        "parentId" : null,
        "authorId" : "6df779be-baaa-40f8-bfb9-de44c59eb7af",
        "body" : "add in \"Only DL flavors support tensor-based signatures (i.e TensorFlow, Keras, PyTorch, Onnx, and Gluon).\"",
        "createdAt" : "2021-02-08T18:15:07Z",
        "updatedAt" : "2021-02-12T20:05:46Z",
        "lastEditedBy" : "6df779be-baaa-40f8-bfb9-de44c59eb7af",
        "tags" : [
        ]
      }
    ],
    "commit" : "e026c4c520f34ec458e8437e5ff80eddf8af9063",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +136,140 @@      \nTensor-based Signature Example\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nOnly DL flavors support tensor-based signatures (i.e TensorFlow, Keras, PyTorch, Onnx, and Gluon).\n"
  },
  {
    "id" : "9538799a-7cb1-44b6-a8a7-52f5a08e53ca",
    "prId" : 4068,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/4068#pullrequestreview-588160017",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f022358a-8ab9-4796-86e3-dab10c975f00",
        "parentId" : null,
        "authorId" : "7dc30493-29f9-4bc4-bf26-00054b8b0b57",
        "body" : "Isn't fastai a DL flavor?",
        "createdAt" : "2021-02-10T23:15:06Z",
        "updatedAt" : "2021-02-12T20:05:46Z",
        "lastEditedBy" : "7dc30493-29f9-4bc4-bf26-00054b8b0b57",
        "tags" : [
        ]
      },
      {
        "id" : "544819c0-8a66-41d1-b7dd-a37e640d0de3",
        "parentId" : "f022358a-8ab9-4796-86e3-dab10c975f00",
        "authorId" : "6df779be-baaa-40f8-bfb9-de44c59eb7af",
        "body" : "hm.. do we plan on supporting tensor input for fastai? @tomasatdatabricks ",
        "createdAt" : "2021-02-10T23:48:51Z",
        "updatedAt" : "2021-02-12T20:05:46Z",
        "lastEditedBy" : "6df779be-baaa-40f8-bfb9-de44c59eb7af",
        "tags" : [
        ]
      }
    ],
    "commit" : "e026c4c520f34ec458e8437e5ff80eddf8af9063",
    "line" : 43,
    "diffHunk" : "@@ -1,1 +137,141 @@Tensor-based Signature Example\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nOnly DL flavors support tensor-based signatures (i.e TensorFlow, Keras, PyTorch, Onnx, and Gluon).\n\nEach tensor-based input and output is represented by a dtype corresponding to one of"
  },
  {
    "id" : "85c5b4bb-2539-48bb-977a-28f9435b767b",
    "prId" : 3798,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/3798#pullrequestreview-550659418",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "16937c28-d402-4f2d-8a31-9734704309f8",
        "parentId" : null,
        "authorId" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "body" : "Can we also say that it's best to pass in examples with missing values when using `infer_signature` to ensure that the correct data type is captured?",
        "createdAt" : "2020-12-11T23:53:37Z",
        "updatedAt" : "2020-12-12T00:51:57Z",
        "lastEditedBy" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "tags" : [
        ]
      },
      {
        "id" : "bc504c59-22a9-4589-b255-5d2ad3bbf3ed",
        "parentId" : "16937c28-d402-4f2d-8a31-9734704309f8",
        "authorId" : "d79ebb0f-0833-4329-8a37-7ae540003587",
        "body" : "Makes sense. Let me rephrase it.",
        "createdAt" : "2020-12-12T00:19:03Z",
        "updatedAt" : "2020-12-12T00:51:57Z",
        "lastEditedBy" : "d79ebb0f-0833-4329-8a37-7ae540003587",
        "tags" : [
        ]
      }
    ],
    "commit" : "243b813a2c8dba66f5f74327e818cac147bf682d",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +162,166 @@serve models and to deploy models to Spark, so this can affect most model deployments. The best way\nto avoid this problem is to declare integer columns as doubles (float64) whenever there can be\nmissing values.\n\nHow To Log Models With Signatures"
  },
  {
    "id" : "f5b2c16c-d594-4d50-b646-5709e7cdca3c",
    "prId" : 3194,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/3194#pullrequestreview-457971278",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "68196882-495c-498c-a2cf-3434fca00036",
        "parentId" : null,
        "authorId" : "0e487e6e-a7e7-4430-a4d6-ca9e76a34cba",
        "body" : "```suggestion\r\nspaCy(``spaCy``)\r\n```",
        "createdAt" : "2020-07-29T22:57:24Z",
        "updatedAt" : "2020-08-04T20:41:07Z",
        "lastEditedBy" : "0e487e6e-a7e7-4430-a4d6-ca9e76a34cba",
        "tags" : [
        ]
      },
      {
        "id" : "1b826e28-0918-4cbd-9496-702136072334",
        "parentId" : "68196882-495c-498c-a2cf-3434fca00036",
        "authorId" : "6d4a2e11-d3e1-4165-abba-00dd048f07b1",
        "body" : "@harupy We have resorted to using a capital letter in the enumerated built-in models' list, as you can see [here](https://mlflow.org/docs/latest/models.html#built-in-model-flavors) and [other places](https://mlflow.org/docs/latest/tracking.html#automatic-logging). However, the use in the description resorts to how it's referred to in `spaCy's` documentation, though. `Fastai` is also referred to `fastai` in its documentation. So if do for `spaCy`, in this enumerated list, then we ought to do it for `fastai`, both with lower case, to be consistent. \r\n\r\nOr we flout that and be consistent to use a capital letter as the first letter in the list for all built-in models in our documentation.\r\n",
        "createdAt" : "2020-07-29T23:12:51Z",
        "updatedAt" : "2020-08-04T20:41:07Z",
        "lastEditedBy" : "6d4a2e11-d3e1-4165-abba-00dd048f07b1",
        "tags" : [
        ]
      },
      {
        "id" : "4139e745-3ded-4582-a5e0-07b745f4229e",
        "parentId" : "68196882-495c-498c-a2cf-3434fca00036",
        "authorId" : "0e487e6e-a7e7-4430-a4d6-ca9e76a34cba",
        "body" : "ok let's stick to the current approach (using a capital letter in the enumerated built-in models' list)",
        "createdAt" : "2020-07-29T23:44:53Z",
        "updatedAt" : "2020-08-04T20:41:07Z",
        "lastEditedBy" : "0e487e6e-a7e7-4430-a4d6-ca9e76a34cba",
        "tags" : [
        ]
      }
    ],
    "commit" : "831b08cb389607e059054f6f3fdd25509a250fe4",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +487,491 @@For more information, see :py:mod:`mlflow.lightgbm`.\n\nSpacy(``spaCy``)\n^^^^^^^^^^^^^^^^^^^^\nThe ``spaCy`` model flavor enables logging of `spaCy models <https://spacy.io/models>`_ in MLflow format via"
  },
  {
    "id" : "4f1a1804-430c-440a-af47-e61fa943380e",
    "prId" : 2829,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/2829#pullrequestreview-412759587",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "94f5f7d7-8213-4a5c-bf10-ce4edb162131",
        "parentId" : null,
        "authorId" : "672c9aff-2ae2-4b23-92a1-3e0ef1c935e9",
        "body" : "👍 ",
        "createdAt" : "2020-05-14T22:39:59Z",
        "updatedAt" : "2020-05-17T23:18:40Z",
        "lastEditedBy" : "672c9aff-2ae2-4b23-92a1-3e0ef1c935e9",
        "tags" : [
        ]
      },
      {
        "id" : "3dcdd7c9-a3da-4966-85f6-1141d4b2c060",
        "parentId" : "94f5f7d7-8213-4a5c-bf10-ce4edb162131",
        "authorId" : "6d4a2e11-d3e1-4165-abba-00dd048f07b1",
        "body" : "What blurb should we add? More than happy to add anything that augments it. \r\n\r\nIt seems like the only supported backend flavors are defined here:\r\nhttps://github.com/mlflow/mlflow/blob/97c9b9d641ffc9b866c836c9e526277920f28c2a/mlflow/models/flavor_backend_registry.py#L14  And that mapping of flavors to flavor backends only support two. \r\n\r\nTo that extent, we state that you can either serve a model with the `python_function` or the `crate (R Function) flavor`\r\n",
        "createdAt" : "2020-05-15T15:40:54Z",
        "updatedAt" : "2020-05-17T23:18:40Z",
        "lastEditedBy" : "6d4a2e11-d3e1-4165-abba-00dd048f07b1",
        "tags" : [
        ]
      }
    ],
    "commit" : "5c5f0c75695f53d23ee2e0a30b5dc369e5a38619",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +62,66 @@.. code-block:: bash\n\n    mlflow models serve -m my_model\n\nIn addition, the ``mlflow sagemaker`` command-line tool can package and deploy models to AWS"
  },
  {
    "id" : "5e5fa2a5-a4e3-485f-95fa-84a3494dd5b3",
    "prId" : 2327,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/2327#pullrequestreview-425840633",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d5fbc71d-b92c-4465-8aec-31118a43186a",
        "parentId" : null,
        "authorId" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "body" : "Update to include `help` and `run-local` commands?",
        "createdAt" : "2020-06-07T17:58:23Z",
        "updatedAt" : "2020-06-16T19:06:17Z",
        "lastEditedBy" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "tags" : [
        ]
      }
    ],
    "commit" : "5a49e0b73902335c060cf80784a7aad6b1a280a1",
    "line" : 46,
    "diffHunk" : "@@ -1,1 +871,875 @@    mlflow deployments update --help\n    mlflow deployments list --help\n    mlflow deployments get --help\n    mlflow deployments run-local --help\n    mlflow deployments help --help"
  },
  {
    "id" : "ca308d8d-922e-4179-b38e-cc3fdacb8f6d",
    "prId" : 910,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/910#pullrequestreview-207577751",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "63628b8b-5a4e-4ebe-8cd3-86d12d78de48",
        "parentId" : null,
        "authorId" : "defbdbf6-c2b5-4b1e-b40b-da9b7f2d2e74",
        "body" : "MLflows -> MLflow models",
        "createdAt" : "2019-02-25T19:04:05Z",
        "updatedAt" : "2019-02-25T19:09:54Z",
        "lastEditedBy" : "defbdbf6-c2b5-4b1e-b40b-da9b7f2d2e74",
        "tags" : [
        ]
      },
      {
        "id" : "61721325-da54-4945-aab7-7bf06a92ea77",
        "parentId" : "63628b8b-5a4e-4ebe-8cd3-86d12d78de48",
        "authorId" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "body" : "Fixed!",
        "createdAt" : "2019-02-25T19:09:31Z",
        "updatedAt" : "2019-02-25T19:09:56Z",
        "lastEditedBy" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "tags" : [
        ]
      }
    ],
    "commit" : "e01fb8a35b4adaf8c2bf8624d715635722f0375c",
    "line" : 43,
    "diffHunk" : "@@ -1,1 +140,144 @@\nThe :py:mod:`mlflow.pyfunc` module defines functions for saving and loading MLflow models with the\n``python_function`` flavor. This module also includes utilities for creating custom Python models.\nFor more information, see the :ref:`custom Python models documentation <custom-python-models>`\nand the :mod:`mlflow.pyfunc` documentation."
  },
  {
    "id" : "286ed3d1-94a3-4657-bc34-99eeb79fe335",
    "prId" : 910,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/910#pullrequestreview-207577751",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "23e47266-a122-44db-9952-73cef775ad58",
        "parentId" : null,
        "authorId" : "defbdbf6-c2b5-4b1e-b40b-da9b7f2d2e74",
        "body" : "any Python MLlibrary -> any Python ML library.",
        "createdAt" : "2019-02-25T19:04:44Z",
        "updatedAt" : "2019-02-25T19:09:54Z",
        "lastEditedBy" : "defbdbf6-c2b5-4b1e-b40b-da9b7f2d2e74",
        "tags" : [
        ]
      },
      {
        "id" : "a0a43981-4b64-43da-8a1e-903959ee1b63",
        "parentId" : "23e47266-a122-44db-9952-73cef775ad58",
        "authorId" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "body" : "Fixed!",
        "createdAt" : "2019-02-25T19:09:36Z",
        "updatedAt" : "2019-02-25T19:09:56Z",
        "lastEditedBy" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "tags" : [
        ]
      }
    ],
    "commit" : "e01fb8a35b4adaf8c2bf8624d715635722f0375c",
    "line" : 73,
    "diffHunk" : "@@ -1,1 +208,212 @@``python_function`` flavor that contain  user-specified code and *artifact* (file) dependencies.\nThese artifact dependencies may include serialized models produced by any Python ML library.\n\nBecause these custom models contain the ``python_function`` flavor, they can be deployed\nto any of MLflow's supported production environments, such as SageMaker, AzureML, or local"
  },
  {
    "id" : "bd7c7f15-c9b8-4b25-9e45-eaae2e2a0767",
    "prId" : 793,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/793#pullrequestreview-191800738",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5d938c90-abbe-446e-b7ed-381930a10bf3",
        "parentId" : null,
        "authorId" : "defbdbf6-c2b5-4b1e-b40b-da9b7f2d2e74",
        "body" : "Remove the italics.",
        "createdAt" : "2019-01-11T17:49:51Z",
        "updatedAt" : "2019-01-15T06:30:57Z",
        "lastEditedBy" : "defbdbf6-c2b5-4b1e-b40b-da9b7f2d2e74",
        "tags" : [
        ]
      },
      {
        "id" : "5913ac00-ba4e-4d37-b435-4b78b7416475",
        "parentId" : "5d938c90-abbe-446e-b7ed-381930a10bf3",
        "authorId" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "body" : "Italics removed!",
        "createdAt" : "2019-01-11T19:05:47Z",
        "updatedAt" : "2019-01-15T06:30:57Z",
        "lastEditedBy" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "tags" : [
        ]
      }
    ],
    "commit" : "be18a22a370ffaacab75b44cff15223c5f180d0c",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +122,126 @@produce the model. This interoperability is very powerful because it allows any Python model to be\nproductionized in a variety of environments.\n\nThe convention for ``python_function`` models is to have a ``predict`` method or function with the following\nsignature:"
  },
  {
    "id" : "d5b6bd0b-329b-4bb4-a11b-21a24cb9d740",
    "prId" : 719,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/719#pullrequestreview-184869597",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f984aaca-53fd-4bc5-af66-98cea676a5d5",
        "parentId" : null,
        "authorId" : "b2c1789f-eaaf-4ce0-9ad7-695c9467c3cc",
        "body" : "Shouldn't we talk about what `result_type` is assumed if you don't pass one? We should say something about that as a transition into the next paragraph. For example, by default, we return the first numeric column as a double or whatever it is.",
        "createdAt" : "2018-12-13T21:09:41Z",
        "updatedAt" : "2018-12-19T22:33:20Z",
        "lastEditedBy" : "b2c1789f-eaaf-4ce0-9ad7-695c9467c3cc",
        "tags" : [
        ]
      }
    ],
    "commit" : "46d40cc23382cf8a24feb872cdaa8a9b500b579b",
    "line" : 3,
    "diffHunk" : "@@ -1,1 +499,503 @@\n    pyfunc_udf = mlflow.pyfunc.spark_udf(<path-to-model>)\n    df = spark_df.withColumn(\"prediction\", pyfunc_udf(<features>))\n\nThe resulting UDF is based Spark's Pandas UDF and is currently limited to producing either a single"
  },
  {
    "id" : "51a8ccfd-ba08-457f-84b6-74c9147f7297",
    "prId" : 690,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/690#pullrequestreview-173136488",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "99ecffc0-29ab-48e2-b992-2c1451444440",
        "parentId" : null,
        "authorId" : "defbdbf6-c2b5-4b1e-b40b-da9b7f2d2e74",
        "body" : "@dbczumar In general we recommend against talking about features that are scheduled for future releases (MLflow 0.9.0). What is the purpose of announcing this before it's available.",
        "createdAt" : "2018-11-08T19:31:41Z",
        "updatedAt" : "2018-11-09T01:38:07Z",
        "lastEditedBy" : "defbdbf6-c2b5-4b1e-b40b-da9b7f2d2e74",
        "tags" : [
        ]
      },
      {
        "id" : "6ff54ee0-b091-42ac-b9a2-0d2b52611e13",
        "parentId" : "99ecffc0-29ab-48e2-b992-2c1451444440",
        "authorId" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "body" : "@stbof The purpose of announcing this change in advance is to allow users to migrate their client code before we implement the change. Some client code will break in `0.9.0` if users do not make certain modifications, so we need to inform them and give them the chance to modify their code beforehand.",
        "createdAt" : "2018-11-08T19:35:46Z",
        "updatedAt" : "2018-11-09T01:38:07Z",
        "lastEditedBy" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "tags" : [
        ]
      }
    ],
    "commit" : "63cff9074d82d8dbfb8e4895e98c410f15cb3d23",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +268,272 @@    specified using a ``Content-Type`` request header value of  ``application/json; format=pandas-records``\n    or ``application/json``. Starting in MLflow 0.9.0, ``application/json`` will refer to the\n    ``split`` format instead. For forwards compatibility, we recommend using the ``split`` format\n    or specifying the ``application/json; format=pandas-records`` content type.\n"
  },
  {
    "id" : "65826cab-c815-4e12-833b-ecbc59f4d064",
    "prId" : 690,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/690#pullrequestreview-173137289",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f69db477-d158-4555-b796-9f039e2e3ace",
        "parentId" : null,
        "authorId" : "defbdbf6-c2b5-4b1e-b40b-da9b7f2d2e74",
        "body" : "For this deployment flavor, the endpoint ONLY accepts -> For this deployment flavor, the endpoint accepts `only`",
        "createdAt" : "2018-11-08T19:32:40Z",
        "updatedAt" : "2018-11-09T01:38:07Z",
        "lastEditedBy" : "defbdbf6-c2b5-4b1e-b40b-da9b7f2d2e74",
        "tags" : [
        ]
      },
      {
        "id" : "a5bab687-9d49-4d16-9e82-fd8bf55059f8",
        "parentId" : "f69db477-d158-4555-b796-9f039e2e3ace",
        "authorId" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "body" : "Done! Thanks!",
        "createdAt" : "2018-11-08T19:37:51Z",
        "updatedAt" : "2018-11-09T01:38:07Z",
        "lastEditedBy" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "tags" : [
        ]
      }
    ],
    "commit" : "63cff9074d82d8dbfb8e4895e98c410f15cb3d23",
    "line" : 158,
    "diffHunk" : "@@ -1,1 +447,451 @@\n  * ``mleap``: For this deployment flavor, the endpoint accepts `only`\n    JSON-serialized Pandas DataFrames in the ``split`` orientation. For example,\n    ``data = pandas_df.to_json(orient='split')``. This format is specified using a ``Content-Type``\n    request header value of ``application/json``."
  },
  {
    "id" : "5a340203-e806-4b4f-8ae2-211efb074ac4",
    "prId" : 690,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/690#pullrequestreview-173137289",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3301225b-23cc-4035-8822-62dc986d3e2a",
        "parentId" : null,
        "authorId" : "defbdbf6-c2b5-4b1e-b40b-da9b7f2d2e74",
        "body" : "module will accept the following data formats -> module accept the following data formats",
        "createdAt" : "2018-11-08T19:35:25Z",
        "updatedAt" : "2018-11-09T01:38:07Z",
        "lastEditedBy" : "defbdbf6-c2b5-4b1e-b40b-da9b7f2d2e74",
        "tags" : [
        ]
      },
      {
        "id" : "0d4be03c-fbb1-4be7-aa52-838be3d22755",
        "parentId" : "3301225b-23cc-4035-8822-62dc986d3e2a",
        "authorId" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "body" : "Done (removed `will`)",
        "createdAt" : "2018-11-08T19:37:35Z",
        "updatedAt" : "2018-11-09T01:38:07Z",
        "lastEditedBy" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "tags" : [
        ]
      }
    ],
    "commit" : "63cff9074d82d8dbfb8e4895e98c410f15cb3d23",
    "line" : 152,
    "diffHunk" : "@@ -1,1 +441,445 @@container for all MLflow models. Model webservers deployed using the :py:mod:`mlflow.sagemaker`\nmodule accept the following data formats as input, depending on the deployment flavor:\n\n  * ``python_function``: For this deployment flavor, The endpoint accepts the same formats\n    as the pyfunc server. These formats are described in the"
  },
  {
    "id" : "f23cda93-bdfc-4027-b36b-fe4b435b8e1e",
    "prId" : 631,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/631#pullrequestreview-167114853",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fdcdcb4a-b041-43d9-b883-717ffcb1e237",
        "parentId" : null,
        "authorId" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "body" : "Cross-ref doesn't work (that said, `python_api/mlflow.azureml.html` is empty in the docs page -- is that intentional?)",
        "createdAt" : "2018-10-22T19:40:06Z",
        "updatedAt" : "2018-10-24T18:10:14Z",
        "lastEditedBy" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "tags" : [
        ]
      },
      {
        "id" : "c9276649-5bc9-440f-8521-4a159d63e1a2",
        "parentId" : "fdcdcb4a-b041-43d9-b883-717ffcb1e237",
        "authorId" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "body" : "The cross-ref seems to work when the docs are built with Python 3. Previously, if the docs were built with Python 2, the Azure ML docs would not be generated because `mlflow.azureml` attempts to import from the SDK, which only supports Python3; this import error caused this portion of the docs to be skipped. To fix this problem, I removed these SDK imports from the top-level module and moved them into `build_image` - you should be able to build the docs successfully using both major versions of python.",
        "createdAt" : "2018-10-22T23:01:19Z",
        "updatedAt" : "2018-10-24T18:10:14Z",
        "lastEditedBy" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "tags" : [
        ]
      }
    ],
    "commit" : "fc931bfbbfa0728a7505557d1d6b376d50e5c1fc",
    "line" : 65,
    "diffHunk" : "@@ -1,1 +269,273 @@Microsoft Azure ML\n^^^^^^^^^^^^^^^^^^\nThe :py:mod:`mlflow.azureml` module can package ``python_function`` models into Azure ML container images.\nThese images can be deployed to Azure Kubernetes Service (AKS) and the Azure Container Instances (ACI)\nplatform for real-time serving."
  },
  {
    "id" : "88d686b1-8c98-49f9-ae60-4e507e507223",
    "prId" : 631,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/631#pullrequestreview-167114853",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5592f4ef-9451-4337-8832-0609820cc4a3",
        "parentId" : null,
        "authorId" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "body" : "Cross-ref here also doesn't work, would be good",
        "createdAt" : "2018-10-22T19:40:24Z",
        "updatedAt" : "2018-10-24T18:10:14Z",
        "lastEditedBy" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "tags" : [
        ]
      },
      {
        "id" : "9ea8cbc2-59f3-479b-9727-8f1602d7bc47",
        "parentId" : "5592f4ef-9451-4337-8832-0609820cc4a3",
        "authorId" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "body" : "The cross-ref seems to work when the docs are built with Python 3. Previously, if the docs were built with Python 2, the Azure ML docs would not be generated because `mlflow.azureml` attempts to import from the SDK, which only supports Python3; this import error caused this portion of the docs to be skipped. To fix this problem, I removed these SDK imports from the top-level module and moved them into `build_image` - you should be able to build the docs successfully using both major versions of python.",
        "createdAt" : "2018-10-22T23:01:17Z",
        "updatedAt" : "2018-10-24T18:10:14Z",
        "lastEditedBy" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "tags" : [
        ]
      }
    ],
    "commit" : "fc931bfbbfa0728a7505557d1d6b376d50e5c1fc",
    "line" : 75,
    "diffHunk" : "@@ -1,1 +273,277 @@platform for real-time serving.\n\n* :py:func:`build_image <mlflow.azureml.build_image>` registers an MLflow model with an existing Azure ML\n  workspace and builds an Azure ML container image for deployment to AKS and ACI. The `Azure ML SDK`_ is\n  required in order to use this function. **The Azure ML SDK requires Python 3. It cannot be installed with"
  },
  {
    "id" : "adadc43f-9315-49c6-8546-9d02d1d466e6",
    "prId" : 631,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/631#pullrequestreview-167114853",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a4771fda-9edd-41ce-b80d-8fc79bb0b7b1",
        "parentId" : null,
        "authorId" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "body" : "Mind giving a simple curl example w/the wine dataset mentioned? (Maybe say we'll run from the examples/python wine thingy)",
        "createdAt" : "2018-10-22T20:56:57Z",
        "updatedAt" : "2018-10-24T18:10:14Z",
        "lastEditedBy" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "tags" : [
        ]
      },
      {
        "id" : "fefaaf22-6bce-41f2-bcd1-9c682cc2e3f7",
        "parentId" : "a4771fda-9edd-41ce-b80d-8fc79bb0b7b1",
        "authorId" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "body" : "Added a curl to the CLI example and `requests.post` code to the Python API example.",
        "createdAt" : "2018-10-22T22:18:51Z",
        "updatedAt" : "2018-10-24T18:10:14Z",
        "lastEditedBy" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "tags" : [
        ]
      }
    ],
    "commit" : "fc931bfbbfa0728a7505557d1d6b376d50e5c1fc",
    "line" : 135,
    "diffHunk" : "@@ -1,1 +321,325 @@    # used in the MLflow ElasticNet example:\n    # https://github.com/mlflow/mlflow/tree/master/examples/sklearn_elasticnet_wine\n    print(\"Scoring URI is: %s\", webservice.scoring_uri)\n\n    import requests"
  },
  {
    "id" : "2c01def9-90d4-46f4-a616-7b2521361da4",
    "prId" : 631,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/631#pullrequestreview-167160057",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0e3eee2a-1f76-4e0f-b3c5-33e6b0805202",
        "parentId" : null,
        "authorId" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "body" : "```suggestion\r\n    response_json = json.loads(response.text)\r\n    print(response_json)\r\n```",
        "createdAt" : "2018-10-22T23:07:53Z",
        "updatedAt" : "2018-10-24T18:10:14Z",
        "lastEditedBy" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "tags" : [
        ]
      },
      {
        "id" : "7ebde810-2b2b-45cb-a7be-1cfd4d6095ec",
        "parentId" : "0e3eee2a-1f76-4e0f-b3c5-33e6b0805202",
        "authorId" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "body" : "Done! Thanks!",
        "createdAt" : "2018-10-23T00:10:13Z",
        "updatedAt" : "2018-10-24T18:10:14Z",
        "lastEditedBy" : "3f60ced2-d2f0-4cc5-9898-5aefe16e0be8",
        "tags" : [
        ]
      }
    ],
    "commit" : "fc931bfbbfa0728a7505557d1d6b376d50e5c1fc",
    "line" : 155,
    "diffHunk" : "@@ -1,1 +341,345 @@                  url=webservice.scoring_uri, data=json.dumps(sample_input),\n                  headers={\"Content-type\": \"application/json\"})\n    response_json = json.loads(response.text)\n    print(response_json)\n"
  },
  {
    "id" : "14e3e743-f03b-41f8-bd39-88a166a55166",
    "prId" : 454,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/454#pullrequestreview-153534457",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "39b236f7-3231-41b6-9bf0-4a734496d3ad",
        "parentId" : null,
        "authorId" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "body" : "I kind of liked the depth-2 here, it gives a good high-level view of what models we support, and concrete examples of what we're talking about:\r\n\r\n![image](https://user-images.githubusercontent.com/1400247/45247984-d877e080-b2c0-11e8-8054-0966cfa3213b.png)\r\n",
        "createdAt" : "2018-09-08T00:09:59Z",
        "updatedAt" : "2018-09-09T18:18:53Z",
        "lastEditedBy" : "6e958077-8d60-494d-8079-e77af3a2951f",
        "tags" : [
        ]
      }
    ],
    "commit" : "a93894809b69af0e05e4ca30951319433c580b88",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +11,15 @@.. contents:: Table of Contents\n  :local:\n  :depth: 1\n\n"
  },
  {
    "id" : "dbf31c33-5638-4e19-85c0-7b196a1bc8bd",
    "prId" : 168,
    "prUrl" : "https://github.com/mlflow/mlflow/pull/168#pullrequestreview-138084196",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dfdddedb-63c2-49bc-9d9d-e17aa8e8917d",
        "parentId" : null,
        "authorId" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "body" : "Mentioned pandas explicitly, an alternative could be to just replace \"pandas DataFrame input\" with  \"input data\" - feel free to also revert to the original",
        "createdAt" : "2018-07-18T02:24:23Z",
        "updatedAt" : "2018-07-18T02:25:29Z",
        "lastEditedBy" : "bd3067fd-855b-4bd1-898d-ca29199fd092",
        "tags" : [
        ]
      }
    ],
    "commit" : "92761eb68ba47949995be0317752d5672836d4ef",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +201,205 @@saved using Spark MLLib's native serialization, and can then be loaded back as MLlib models or\ndeployed as ``Python Function`` models. When deployed as a Pyfunc, the model will create its own\nSparkContext and convert pandas DataFrame input to a Spark DataFrame before scoring. While this is not\nthe most efficient solution, especially for real-time scoring, it enables users to easily deploy any MLlib PipelineModel\n(as long as the PipelineModel has no external JAR dependencies) to any endpoint supported by"
  }
]