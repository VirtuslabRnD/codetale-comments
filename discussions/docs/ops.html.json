[
  {
    "id" : "65d6fd00-ad63-4319-9168-f201b95bbf07",
    "prId" : 4527,
    "prUrl" : "https://github.com/apache/kafka/pull/4527#pullrequestreview-127445075",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "53886b55-dc77-41bf-be8b-6af7d2623661",
        "parentId" : null,
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "We should probably mention above that out of range offsets will be adjusted to the log start and log end offsets. For example, if the log end offset is 10 and the offset after shifting is 15, then we will actually commit offset 10. Similarly for the other options.",
        "createdAt" : "2018-02-08T01:38:33Z",
        "updatedAt" : "2018-08-14T14:53:16Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      },
      {
        "id" : "d8141f7e-c990-4598-88a8-a1cc73c10394",
        "parentId" : "53886b55-dc77-41bf-be8b-6af7d2623661",
        "authorId" : "1f60b6b5-22a7-46e5-a4f0-892e56ff1c64",
        "body" : "Added a general note at the end of this section.",
        "createdAt" : "2018-06-11T06:28:00Z",
        "updatedAt" : "2018-08-14T14:53:16Z",
        "lastEditedBy" : "1f60b6b5-22a7-46e5-a4f0-892e56ff1c64",
        "tags" : [
        ]
      }
    ],
    "commit" : "e881e3b1a549ce955960f3964c5f28dcc2554933",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +262,266 @@    </li>\n    <li>\n      --shift-by &lt;Long: number-of-offsets&gt; : Reset offsets shifting current offset by 'n', where 'n' can be positive or negative.\n    </li>\n    <li>"
  },
  {
    "id" : "7de07827-e93e-43c0-8c8b-b2eec1c45e0e",
    "prId" : 5582,
    "prUrl" : "https://github.com/apache/kafka/pull/5582#pullrequestreview-164010285",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "23a0ecb3-8422-492a-ba20-2ae0682b3922",
        "parentId" : null,
        "authorId" : "b4936a15-698a-496e-85a1-b1e229b4986b",
        "body" : "Not sure this matches the actual implementation,",
        "createdAt" : "2018-10-10T11:07:25Z",
        "updatedAt" : "2018-10-25T19:47:00Z",
        "lastEditedBy" : "b4936a15-698a-496e-85a1-b1e229b4986b",
        "tags" : [
        ]
      },
      {
        "id" : "ad19f166-7cc2-43a5-87a6-f8bc47019ab3",
        "parentId" : "23a0ecb3-8422-492a-ba20-2ae0682b3922",
        "authorId" : "e0554c25-f6f3-4e49-a325-bcc5d4dc5fb2",
        "body" : "Fixed.  There is now a processor-level metric `expired-connections-killed-count` that tracks the value on a per-(listener,processor) basis as well as an aggregated sum of these to provide a broker-wide metric.  The aggregated sum metric is called `ExpiredConnectionsKilledCount`.  The `ops.html` doc is also updated to reflect this.",
        "createdAt" : "2018-10-11T20:52:28Z",
        "updatedAt" : "2018-10-25T19:47:00Z",
        "lastEditedBy" : "e0554c25-f6f3-4e49-a325-bcc5d4dc5fb2",
        "tags" : [
        ]
      }
    ],
    "commit" : "9c30b80b2b29b7f5c86af21fd19fc520cfe798db",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +976,980 @@      <tr>\n        <td>The total number of connections disconnected, across all processors, due to a client not re-authenticating and then using the connection beyond its expiration time for anything other than re-authentication</td>\n        <td>kafka.network:type=SocketServer,name=ExpiredConnectionsKilledCount</td>\n        <td>ideally 0 when re-authentication is enabled, implying there are no longer any older, pre-2.2.0 clients connecting to this broker</td>\n      </tr>"
  }
]