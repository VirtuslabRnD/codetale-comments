[
  {
    "id" : "65d6fd00-ad63-4319-9168-f201b95bbf07",
    "prId" : 4527,
    "prUrl" : "https://github.com/apache/kafka/pull/4527#pullrequestreview-127445075",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "53886b55-dc77-41bf-be8b-6af7d2623661",
        "parentId" : null,
        "authorId" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "body" : "We should probably mention above that out of range offsets will be adjusted to the log start and log end offsets. For example, if the log end offset is 10 and the offset after shifting is 15, then we will actually commit offset 10. Similarly for the other options.",
        "createdAt" : "2018-02-08T01:38:33Z",
        "updatedAt" : "2018-08-14T14:53:16Z",
        "lastEditedBy" : "5c21df64-97d8-46ab-9722-a7e9ba1d7c49",
        "tags" : [
        ]
      },
      {
        "id" : "d8141f7e-c990-4598-88a8-a1cc73c10394",
        "parentId" : "53886b55-dc77-41bf-be8b-6af7d2623661",
        "authorId" : "1f60b6b5-22a7-46e5-a4f0-892e56ff1c64",
        "body" : "Added a general note at the end of this section.",
        "createdAt" : "2018-06-11T06:28:00Z",
        "updatedAt" : "2018-08-14T14:53:16Z",
        "lastEditedBy" : "1f60b6b5-22a7-46e5-a4f0-892e56ff1c64",
        "tags" : [
        ]
      }
    ],
    "commit" : "e881e3b1a549ce955960f3964c5f28dcc2554933",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +262,266 @@    </li>\n    <li>\n      --shift-by &lt;Long: number-of-offsets&gt; : Reset offsets shifting current offset by 'n', where 'n' can be positive or negative.\n    </li>\n    <li>"
  },
  {
    "id" : "7de07827-e93e-43c0-8c8b-b2eec1c45e0e",
    "prId" : 5582,
    "prUrl" : "https://github.com/apache/kafka/pull/5582#pullrequestreview-164010285",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "23a0ecb3-8422-492a-ba20-2ae0682b3922",
        "parentId" : null,
        "authorId" : "b4936a15-698a-496e-85a1-b1e229b4986b",
        "body" : "Not sure this matches the actual implementation,",
        "createdAt" : "2018-10-10T11:07:25Z",
        "updatedAt" : "2018-10-25T19:47:00Z",
        "lastEditedBy" : "b4936a15-698a-496e-85a1-b1e229b4986b",
        "tags" : [
        ]
      },
      {
        "id" : "ad19f166-7cc2-43a5-87a6-f8bc47019ab3",
        "parentId" : "23a0ecb3-8422-492a-ba20-2ae0682b3922",
        "authorId" : "e0554c25-f6f3-4e49-a325-bcc5d4dc5fb2",
        "body" : "Fixed.  There is now a processor-level metric `expired-connections-killed-count` that tracks the value on a per-(listener,processor) basis as well as an aggregated sum of these to provide a broker-wide metric.  The aggregated sum metric is called `ExpiredConnectionsKilledCount`.  The `ops.html` doc is also updated to reflect this.",
        "createdAt" : "2018-10-11T20:52:28Z",
        "updatedAt" : "2018-10-25T19:47:00Z",
        "lastEditedBy" : "e0554c25-f6f3-4e49-a325-bcc5d4dc5fb2",
        "tags" : [
        ]
      }
    ],
    "commit" : "9c30b80b2b29b7f5c86af21fd19fc520cfe798db",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +976,980 @@      <tr>\n        <td>The total number of connections disconnected, across all processors, due to a client not re-authenticating and then using the connection beyond its expiration time for anything other than re-authentication</td>\n        <td>kafka.network:type=SocketServer,name=ExpiredConnectionsKilledCount</td>\n        <td>ideally 0 when re-authentication is enabled, implying there are no longer any older, pre-2.2.0 clients connecting to this broker</td>\n      </tr>"
  },
  {
    "id" : "2fa36d02-f1a5-4845-9e72-13b2f510bf17",
    "prId" : 8171,
    "prUrl" : "https://github.com/apache/kafka/pull/8171#pullrequestreview-365131226",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c0dfcd3d-2947-484d-aed9-c0127a94d872",
        "parentId" : null,
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "nit: `polls` -> `consumer poll calls`? Ditto below.",
        "createdAt" : "2020-02-26T17:21:20Z",
        "updatedAt" : "2020-02-26T19:19:39Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      },
      {
        "id" : "805388e1-afe5-4719-878b-108dbf6dba25",
        "parentId" : "c0dfcd3d-2947-484d-aed9-c0127a94d872",
        "authorId" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "body" : "Done!",
        "createdAt" : "2020-02-26T19:17:09Z",
        "updatedAt" : "2020-02-26T19:19:43Z",
        "lastEditedBy" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "tags" : [
        ]
      }
    ],
    "commit" : "2f49ab241a5113d20eccedf3c098014218332965",
    "line" : 128,
    "diffHunk" : "@@ -1,1 +1715,1719 @@        <td>poll-rate</td>\n        <td>The average number of consumer poll calls per second.</td>\n        <td>kafka.streams:type=stream-thread-metrics,thread-id=([-.\\w]+)</td>\n      </tr>\n      <tr>"
  },
  {
    "id" : "689ac152-aac0-43b2-b6a1-8c73423b56f3",
    "prId" : 8171,
    "prUrl" : "https://github.com/apache/kafka/pull/8171#pullrequestreview-365131226",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d62439b1-d4db-46f5-98a3-b7bb4f858bef",
        "parentId" : null,
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "It's better to add a note at the beginning of `Processor Node Metrics` that the following four metrics are only available in certain types of nodes, e.g. process-rate and process-total would only be available for source nodes.",
        "createdAt" : "2020-02-26T17:26:58Z",
        "updatedAt" : "2020-02-26T19:19:39Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      },
      {
        "id" : "6d84171a-f815-4f68-8e52-3d65c6103e83",
        "parentId" : "d62439b1-d4db-46f5-98a3-b7bb4f858bef",
        "authorId" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "body" : "Done",
        "createdAt" : "2020-02-26T19:14:47Z",
        "updatedAt" : "2020-02-26T19:19:43Z",
        "lastEditedBy" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "tags" : [
        ]
      }
    ],
    "commit" : "2f49ab241a5113d20eccedf3c098014218332965",
    "line" : 357,
    "diffHunk" : "@@ -1,1 +1861,1865 @@      <tr>\n        <td>process-rate</td>\n        <td>The average number of records processed by a source processor node per second.</td>\n        <td>kafka.streams:type=stream-processor-node-metrics,thread-id=([-.\\w]+),task-id=([-.\\w]+),processor-node-id=([-.\\w]+)</td>\n      </tr>"
  },
  {
    "id" : "66ec2e12-7836-4727-99ac-e339b3400483",
    "prId" : 8171,
    "prUrl" : "https://github.com/apache/kafka/pull/8171#pullrequestreview-365131226",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5f7d432f-58e0-4575-8aeb-071cc669f989",
        "parentId" : null,
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "Ditto here, mention that the following metrics are only available for certain types of stores.",
        "createdAt" : "2020-02-26T17:29:15Z",
        "updatedAt" : "2020-02-26T19:19:39Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      },
      {
        "id" : "28f8025d-55ba-4bee-a85c-9c886af42173",
        "parentId" : "5f7d432f-58e0-4575-8aeb-071cc669f989",
        "authorId" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "body" : "Done",
        "createdAt" : "2020-02-26T19:15:02Z",
        "updatedAt" : "2020-02-26T19:19:43Z",
        "lastEditedBy" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "tags" : [
        ]
      }
    ],
    "commit" : "2f49ab241a5113d20eccedf3c098014218332965",
    "line" : 652,
    "diffHunk" : "@@ -1,1 +2040,2044 @@      </tr>\n      <tr>\n        <td>suppression-buffer-size-avg</td>\n        <td>The average total size, in bytes, of the buffered data over the sampling window.</td>\n        <td>kafka.streams:type=stream-state-metrics,thread-id=([-.\\w]+),task-id=([-.\\w]+),in-memory-suppression-id=([-.\\w]+)</td>"
  },
  {
    "id" : "f7cc3e72-71a4-4bdc-b891-fbbaccd874ef",
    "prId" : 8171,
    "prUrl" : "https://github.com/apache/kafka/pull/8171#pullrequestreview-365229060",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b848b735-6b07-4331-a36f-e86a8a0ff6cc",
        "parentId" : null,
        "authorId" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "body" : "Just for my own education, why this one is set to ns instead of ms?",
        "createdAt" : "2020-02-26T20:36:21Z",
        "updatedAt" : "2020-02-26T20:41:12Z",
        "lastEditedBy" : "3dfe0270-df82-43af-827f-0681ce1c6ad9",
        "tags" : [
        ]
      },
      {
        "id" : "c3cab9d8-abfc-4fbb-8d02-465527b2a5cb",
        "parentId" : "b848b735-6b07-4331-a36f-e86a8a0ff6cc",
        "authorId" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "body" : "It has been always that way. This was not part of KIP-444. I guess because since this metric is on task level, the values may be smaller than on thread level where the metrics measure ms.",
        "createdAt" : "2020-02-26T20:46:22Z",
        "updatedAt" : "2020-02-26T20:46:22Z",
        "lastEditedBy" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "tags" : [
        ]
      }
    ],
    "commit" : "2f49ab241a5113d20eccedf3c098014218332965",
    "line" : 241,
    "diffHunk" : "@@ -1,1 +1797,1801 @@      <tr>\n        <td>commit-latency-avg</td>\n        <td>The average execution time in ns, for committing.</td>\n        <td>kafka.streams:type=stream-task-metrics,thread-id=([-.\\w]+),task-id=([-.\\w]+)</td>\n      </tr>"
  },
  {
    "id" : "34a74264-3f33-4d87-b19c-4ffb855e46f2",
    "prId" : 8623,
    "prUrl" : "https://github.com/apache/kafka/pull/8623#pullrequestreview-406291095",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6592ba8b-0b54-441f-99cc-5351859c77de",
        "parentId" : null,
        "authorId" : "d520dc4e-6bae-4b0b-90d6-4c0a1cabb518",
        "body" : "Fix the wrong indent issue on UI\r\n![圖片](https://user-images.githubusercontent.com/43372967/81137422-5a864400-8f91-11ea-935c-bb4859da82d2.png)\r\n",
        "createdAt" : "2020-05-06T04:01:55Z",
        "updatedAt" : "2020-05-19T06:43:05Z",
        "lastEditedBy" : "d520dc4e-6bae-4b0b-90d6-4c0a1cabb518",
        "tags" : [
        ]
      }
    ],
    "commit" : "5a6a7fd61a57cbf9d707d8cf2e1a83cb7c3e66c8",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +484,488 @@    leader.replication.throttled.rate\n    follower.replication.throttled.rate\n  </pre>\n\n  <p>Then there is the configuration pair of enumerated sets of throttled replicas: </p>"
  },
  {
    "id" : "23517614-a12f-4c93-9abe-c5b198331b33",
    "prId" : 8623,
    "prUrl" : "https://github.com/apache/kafka/pull/8623#pullrequestreview-406291246",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "70782bfe-fe80-4557-8149-85513a6235b8",
        "parentId" : null,
        "authorId" : "d520dc4e-6bae-4b0b-90d6-4c0a1cabb518",
        "body" : "fix the wrong indent.\r\n![圖片](https://user-images.githubusercontent.com/43372967/81137449-71c53180-8f91-11ea-9830-53413db795f4.png)\r\n",
        "createdAt" : "2020-05-06T04:02:31Z",
        "updatedAt" : "2020-05-19T06:43:05Z",
        "lastEditedBy" : "d520dc4e-6bae-4b0b-90d6-4c0a1cabb518",
        "tags" : [
        ]
      }
    ],
    "commit" : "5a6a7fd61a57cbf9d707d8cf2e1a83cb7c3e66c8",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +491,495 @@    leader.replication.throttled.replicas\n    follower.replication.throttled.replicas\n  </pre>\n\n  <p>Which are configured per topic. </p>"
  },
  {
    "id" : "101c90a5-8dcb-4616-92f6-c619ef4813d8",
    "prId" : 9276,
    "prUrl" : "https://github.com/apache/kafka/pull/9276#pullrequestreview-544298070",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "afb2bf5a-fa36-4272-9577-a2be5655d787",
        "parentId" : null,
        "authorId" : "6d796b57-ffdb-431e-bdfa-65a42d4bf7c7",
        "body" : "I wasn't sure what information to add for this column of \"normal value\". \r\n* For date-based retention topics, it should roughly be sizeOfTopic/segmentSize\r\n* But for compacted topics, that isn't the case\r\n* If this is too high, it will mean more file handles.\r\n* If it is too high, it might inefficient (is this true?)\r\n\r\nAnyway, I wasn't sure what to put, so I left it simple.",
        "createdAt" : "2020-09-09T22:24:24Z",
        "updatedAt" : "2020-12-03T01:53:35Z",
        "lastEditedBy" : "6d796b57-ffdb-431e-bdfa-65a42d4bf7c7",
        "tags" : [
        ]
      },
      {
        "id" : "07d683b6-2562-4076-a3be-eecd10ac5ba9",
        "parentId" : "afb2bf5a-fa36-4272-9577-a2be5655d787",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "I think this is fine :)",
        "createdAt" : "2020-12-03T19:16:51Z",
        "updatedAt" : "2020-12-03T19:17:27Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      }
    ],
    "commit" : "01bd15304026399663abed54702d40351c0ca7b2",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +1048,1052 @@        <td>Number of log segments in a partition</td>\n        <td>kafka.log:type=Log,name=NumLogSegments,topic=([-.\\w]+),partition=([0-9]+)</td>\n        <td>The number of log segments in a partition.</td>\n      </tr>\n      <tr>"
  },
  {
    "id" : "242a0fee-d4e8-4729-a9f8-c61e73f109c8",
    "prId" : 9276,
    "prUrl" : "https://github.com/apache/kafka/pull/9276#pullrequestreview-544298070",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "10636624-0236-4551-8857-a603d9f3ceac",
        "parentId" : null,
        "authorId" : "6d796b57-ffdb-431e-bdfa-65a42d4bf7c7",
        "body" : "Is this the last committed offset? Or, is it uncommitted offsets? Meaning, if a producer appends a record there but the followers haven't yet acked it, will this value get incremented?\r\n\r\nDoes that level of detail matter, in the docs?\r\n",
        "createdAt" : "2020-09-09T22:25:18Z",
        "updatedAt" : "2020-12-03T01:53:35Z",
        "lastEditedBy" : "6d796b57-ffdb-431e-bdfa-65a42d4bf7c7",
        "tags" : [
        ]
      },
      {
        "id" : "584a63ad-ec59-4179-8f61-0851b2896ffa",
        "parentId" : "10636624-0236-4551-8857-a603d9f3ceac",
        "authorId" : "6d796b57-ffdb-431e-bdfa-65a42d4bf7c7",
        "body" : "Tag @hachikuji ",
        "createdAt" : "2020-09-09T22:26:42Z",
        "updatedAt" : "2020-12-03T01:53:35Z",
        "lastEditedBy" : "6d796b57-ffdb-431e-bdfa-65a42d4bf7c7",
        "tags" : [
        ]
      },
      {
        "id" : "5d2b25ea-052f-4a6a-80f6-d70868b6f246",
        "parentId" : "10636624-0236-4551-8857-a603d9f3ceac",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "This is the last uncomitted offset: after the local append it would be incremented, not waiting for other replicas to ack.",
        "createdAt" : "2020-12-03T19:16:08Z",
        "updatedAt" : "2020-12-03T19:17:27Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      }
    ],
    "commit" : "01bd15304026399663abed54702d40351c0ca7b2",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +1058,1062 @@        <td>Last offset in a partition</td>\n        <td>kafka.log:type=Log,name=LogEndOffset,topic=([-.\\w]+),partition=([0-9]+)</td>\n        <td>The last offset in a partition.</td>\n      </tr>\n  </tbody></table>"
  },
  {
    "id" : "db94dde0-e23a-43db-a548-7617d0b1abf1",
    "prId" : 9895,
    "prUrl" : "https://github.com/apache/kafka/pull/9895#pullrequestreview-570516493",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1641a568-ff81-4be2-b7ca-c96358f3d041",
        "parentId" : null,
        "authorId" : "114424ac-2f76-47ba-b653-f85692b08607",
        "body" : "I'm still a little confused about the difference between the two after reading this. Maybe an example of something that is exposed by RocksDB but not collected by RocksDB would help",
        "createdAt" : "2021-01-14T19:26:36Z",
        "updatedAt" : "2021-01-18T12:55:23Z",
        "lastEditedBy" : "114424ac-2f76-47ba-b653-f85692b08607",
        "tags" : [
        ]
      },
      {
        "id" : "153ebc83-753c-45fe-a09f-a50b7c7aabb3",
        "parentId" : "1641a568-ff81-4be2-b7ca-c96358f3d041",
        "authorId" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "body" : "I elaborated on the two types of metrics. Let me know if it is better now.",
        "createdAt" : "2021-01-15T16:03:20Z",
        "updatedAt" : "2021-01-18T12:55:23Z",
        "lastEditedBy" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "tags" : [
        ]
      },
      {
        "id" : "3cb8d699-8c7f-496b-92ee-e4c680406f9c",
        "parentId" : "1641a568-ff81-4be2-b7ca-c96358f3d041",
        "authorId" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "body" : "Thanks for the explanation, I also didn't understand the difference at first",
        "createdAt" : "2021-01-15T21:17:33Z",
        "updatedAt" : "2021-01-18T12:55:23Z",
        "lastEditedBy" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "tags" : [
        ]
      },
      {
        "id" : "951eb906-52a3-4127-a818-005f6ca604e7",
        "parentId" : "1641a568-ff81-4be2-b7ca-c96358f3d041",
        "authorId" : "114424ac-2f76-47ba-b653-f85692b08607",
        "body" : "Ahh I see now, thanks for the additional info! LGTM",
        "createdAt" : "2021-01-18T14:02:20Z",
        "updatedAt" : "2021-01-18T14:02:20Z",
        "lastEditedBy" : "114424ac-2f76-47ba-b653-f85692b08607",
        "tags" : [
        ]
      }
    ],
    "commit" : "5b919cfeef63076fccbecdb1d8b28eaaaabeed66",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +2035,2039 @@  RocksDB metrics are grouped into statistics-based metrics and properties-based metrics.\n  The former are recorded from statistics that a RocksDB state store collects whereas the latter are recorded from\n  properties that RocksDB exposes.\n  Statistics collected by RocksDB provide cumulative measurements over time, e.g. bytes written to the state store.\n  Properties exposed by RocksDB provide current measurements, e.g., the amount of memory currently used."
  },
  {
    "id" : "b0ca4d97-afd0-4b07-86c6-b36edde40771",
    "prId" : 9895,
    "prUrl" : "https://github.com/apache/kafka/pull/9895#pullrequestreview-571662855",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "25784ad5-fbab-4ce6-9f8e-b16a5dbced7e",
        "parentId" : null,
        "authorId" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "body" : "Technically I think it's possible for users to share a single block cache among only some stores, but not others. Or they could have two block caches shared across different state stores, etc. Would we detect this case and report the correct block cache for a given state store?\r\n(Idk how common that pattern could possibly be, but this made me wonder)",
        "createdAt" : "2021-01-15T21:23:30Z",
        "updatedAt" : "2021-01-18T12:55:23Z",
        "lastEditedBy" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "tags" : [
        ]
      },
      {
        "id" : "fdea26da-4eca-48ae-9688-51d4248e73d4",
        "parentId" : "25784ad5-fbab-4ce6-9f8e-b16a5dbced7e",
        "authorId" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "body" : "Good point! Currently, we treat this mixed pattern as an illegal state and throw an `IllegalStateException`. Probably not the best way to handle it. Allowing such a mixed pattern complicates the measurement of the cache metrics. I opened [KAFKA-12223](https://issues.apache.org/jira/browse/KAFKA-12223) to document this. ",
        "createdAt" : "2021-01-18T12:51:14Z",
        "updatedAt" : "2021-01-18T12:55:23Z",
        "lastEditedBy" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "tags" : [
        ]
      },
      {
        "id" : "80ab28a5-199e-4708-a445-b72a5c989a60",
        "parentId" : "25784ad5-fbab-4ce6-9f8e-b16a5dbced7e",
        "authorId" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "body" : "Thanks!",
        "createdAt" : "2021-01-19T21:10:09Z",
        "updatedAt" : "2021-01-19T21:10:09Z",
        "lastEditedBy" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "tags" : [
        ]
      }
    ],
    "commit" : "5b919cfeef63076fccbecdb1d8b28eaaaabeed66",
    "line" : 41,
    "diffHunk" : "@@ -1,1 +2149,2153 @@  each metric reports the sum over all the RocksDB instances of the state store, except for the block cache metrics\n  <code>block-cache-*</code>. The block cache metrics report the sum over all RocksDB instances if each instance uses its\n  own block cache, and they report the recorded value from only one instance if a single block cache is shared\n  among all instances.\n"
  },
  {
    "id" : "0e2a7f16-f954-40e6-b2c1-f0f6f1e336bf",
    "prId" : 9895,
    "prUrl" : "https://github.com/apache/kafka/pull/9895#pullrequestreview-571662666",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d6d5e6bb-64a8-4766-b3fa-6ed4c4f40ad9",
        "parentId" : null,
        "authorId" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "body" : "Do you know if this applies only to a single rocksdb instance, or across all instances? By default rocksdb has a single shared Environment (basically a thread pool) for compactions so it seems like it could go either way. But it's ok if you don't know, I wouldn't waste hours trying to understand the rocksdb code trying to figure it out 😉 ",
        "createdAt" : "2021-01-15T21:26:58Z",
        "updatedAt" : "2021-01-18T12:55:23Z",
        "lastEditedBy" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "tags" : [
        ]
      },
      {
        "id" : "717c9428-725d-4a65-97e8-99f71db865ef",
        "parentId" : "d6d5e6bb-64a8-4766-b3fa-6ed4c4f40ad9",
        "authorId" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "body" : "No, I do not know. I supposed that it only applies to one single RocksDB instance. I am wondering how RocksDB can share a thread pool between state stores that are started independently from each other.",
        "createdAt" : "2021-01-18T12:54:02Z",
        "updatedAt" : "2021-01-18T12:55:23Z",
        "lastEditedBy" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "tags" : [
        ]
      },
      {
        "id" : "8b43648a-555a-4d28-b730-e60993650846",
        "parentId" : "d6d5e6bb-64a8-4766-b3fa-6ed4c4f40ad9",
        "authorId" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "body" : "I think it has to do with the `Env` class which specifies the thread pool. By default it uses a static `Env`, so the Env -- and also the underlying threads -- are shared between all stores within the process. Something like that",
        "createdAt" : "2021-01-19T21:09:52Z",
        "updatedAt" : "2021-01-19T21:09:52Z",
        "lastEditedBy" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "tags" : [
        ]
      }
    ],
    "commit" : "5b919cfeef63076fccbecdb1d8b28eaaaabeed66",
    "line" : 103,
    "diffHunk" : "@@ -1,1 +2211,2215 @@    <tr>\n      <td>compaction-pending</td>\n      <td>This metric reports 1 if at least one compaction is pending, otherwise it reports 0.</td>\n      <td>kafka.streams:type=stream-state-metrics,thread-id=([-.\\w]+),task-id=([-.\\w]+),[store-scope]-id=([-.\\w]+)</td>\n    </tr>"
  },
  {
    "id" : "e7816152-68c1-474f-bb77-3bb23effd6ac",
    "prId" : 10165,
    "prUrl" : "https://github.com/apache/kafka/pull/10165#pullrequestreview-594732955",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "560f9701-d106-43ca-8831-8036dcfeb940",
        "parentId" : null,
        "authorId" : "d520dc4e-6bae-4b0b-90d6-4c0a1cabb518",
        "body" : "default should be 10 * 60 seconds\r\nhttps://github.com/apache/kafka/blob/trunk/connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorConnectorConfig.java#L152",
        "createdAt" : "2021-02-20T09:16:47Z",
        "updatedAt" : "2021-02-20T09:17:17Z",
        "lastEditedBy" : "d520dc4e-6bae-4b0b-90d6-4c0a1cabb518",
        "tags" : [
        ]
      }
    ],
    "commit" : "0aa87a2987e89be4deeac6112e48c42dc6d423f2",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +790,794 @@    <li><code>refresh.topics.interval.seconds</code>: frequency of checking for new topics in the source cluster; lower values than the default may lead to performance degradation (default: 600, every ten minutes)\n    <li><code>refresh.groups.enabled</code>: whether to check for new consumer groups in the source cluster periodically (default: true)\n    <li><code>refresh.groups.interval.seconds</code>: frequency of checking for new consumer groups in the source cluster; lower values than the default may lead to performance degradation (default: 600, every ten minutes)\n    <li><code>sync.topic.configs.enabled</code>: whether to replicate topic configurations from the source cluster (default: true)\n    <li><code>sync.topic.acls.enabled</code>: whether to sync ACLs from the source cluster (default: true)"
  },
  {
    "id" : "8c2bc6ee-605a-4501-be3a-44fe6d7c9ec3",
    "prId" : 10165,
    "prUrl" : "https://github.com/apache/kafka/pull/10165#pullrequestreview-594733017",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "42e1a0f3-16b3-4029-9f25-4c52658e7b12",
        "parentId" : null,
        "authorId" : "d520dc4e-6bae-4b0b-90d6-4c0a1cabb518",
        "body" : "default should be 10 * 60 seconds\r\nhttps://github.com/apache/kafka/blob/trunk/connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorConnectorConfig.java#L145",
        "createdAt" : "2021-02-20T09:17:28Z",
        "updatedAt" : "2021-02-20T09:17:29Z",
        "lastEditedBy" : "d520dc4e-6bae-4b0b-90d6-4c0a1cabb518",
        "tags" : [
        ]
      }
    ],
    "commit" : "0aa87a2987e89be4deeac6112e48c42dc6d423f2",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +788,792 @@  <ul>\n    <li><code>refresh.topics.enabled</code>: whether to check for new topics in the source cluster periodically (default: true)\n    <li><code>refresh.topics.interval.seconds</code>: frequency of checking for new topics in the source cluster; lower values than the default may lead to performance degradation (default: 600, every ten minutes)\n    <li><code>refresh.groups.enabled</code>: whether to check for new consumer groups in the source cluster periodically (default: true)\n    <li><code>refresh.groups.interval.seconds</code>: frequency of checking for new consumer groups in the source cluster; lower values than the default may lead to performance degradation (default: 600, every ten minutes)"
  },
  {
    "id" : "a7047b67-da29-42f5-bf9d-77dba0b2eb64",
    "prId" : 10165,
    "prUrl" : "https://github.com/apache/kafka/pull/10165#pullrequestreview-594733056",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8a83aba9-9a73-4318-bf95-4f40dc9bb76e",
        "parentId" : null,
        "authorId" : "d520dc4e-6bae-4b0b-90d6-4c0a1cabb518",
        "body" : "default should be 1 second\r\nhttps://github.com/apache/kafka/blob/trunk/connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorConnectorConfig.java#L173",
        "createdAt" : "2021-02-20T09:17:48Z",
        "updatedAt" : "2021-02-20T09:17:48Z",
        "lastEditedBy" : "d520dc4e-6bae-4b0b-90d6-4c0a1cabb518",
        "tags" : [
        ]
      }
    ],
    "commit" : "0aa87a2987e89be4deeac6112e48c42dc6d423f2",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +794,798 @@    <li><code>sync.topic.acls.enabled</code>: whether to sync ACLs from the source cluster (default: true)\n    <li><code>emit.heartbeats.enabled</code>: whether to emit heartbeats periodically (default: true)\n    <li><code>emit.heartbeats.interval.seconds</code>: frequency at which heartbeats are emitted (default: 1, every one seconds)\n    <li><code>heartbeats.topic.replication.factor</code>: replication factor of MirrorMaker's internal heartbeat topics (default: 3)\n    <li><code>emit.checkpoints.enabled</code>: whether to emit MirrorMaker's consumer offsets periodically (default: true)"
  },
  {
    "id" : "54a1d870-ad48-427a-9cfa-d1d3fa663a9f",
    "prId" : 10165,
    "prUrl" : "https://github.com/apache/kafka/pull/10165#pullrequestreview-594733078",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bfa03ac0-16b9-4ea9-9420-61a9b63e7f54",
        "parentId" : null,
        "authorId" : "d520dc4e-6bae-4b0b-90d6-4c0a1cabb518",
        "body" : "default should be false\r\nhttps://github.com/apache/kafka/blob/trunk/connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorConnectorConfig.java#L185",
        "createdAt" : "2021-02-20T09:18:05Z",
        "updatedAt" : "2021-02-20T09:18:05Z",
        "lastEditedBy" : "d520dc4e-6bae-4b0b-90d6-4c0a1cabb518",
        "tags" : [
        ]
      }
    ],
    "commit" : "0aa87a2987e89be4deeac6112e48c42dc6d423f2",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +799,803 @@    <li><code>emit.checkpoints.interval.seconds</code>: frequency at which checkpoints are emitted (default: 60, every minute)\n    <li><code>checkpoints.topic.replication.factor</code>: replication factor of MirrorMaker's internal checkpoints topics (default: 3)\n    <li><code>sync.group.offsets.enabled</code>: whether to periodically write the translated offsets of replicated consumer groups (in the source cluster) to <code>__consumer_offsets</code> topic in target cluster, as long as no active consumers in that group are connected to the target cluster (default: false)\n    <li><code>sync.group.offsets.interval.seconds</code>: frequency at which consumer group offsets are synced (default: 60, every minute)\n    <li><code>offset-syncs.topic.replication.factor</code>: replication factor of MirrorMaker's internal offset-sync topics (default: 3)"
  },
  {
    "id" : "47ac5ca5-442d-4303-9d1a-163247390161",
    "prId" : 10251,
    "prUrl" : "https://github.com/apache/kafka/pull/10251#pullrequestreview-602498275",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1345fba9-d370-4318-96b9-e7774b169405",
        "parentId" : null,
        "authorId" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "body" : "Noticed that we seem to be missing this task-level metric as well. Might be good to take stock of all the metrics at some point and make sure they're documented clearly, especially since it's easy to miss this doc which is outside of the usual Streams docs",
        "createdAt" : "2021-03-03T04:31:43Z",
        "updatedAt" : "2021-03-04T02:02:08Z",
        "lastEditedBy" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "tags" : [
        ]
      }
    ],
    "commit" : "e7e32296ef631baa4afef884d33da19a0928e680",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +2358,2362 @@      </tr>\n      <tr>\n        <td>active-process-ratio</td>\n        <td>The total number of records dropped within this task.</td>\n        <td>kafka.streams:type=stream-task-metrics,thread-id=([-.\\w]+),task-id=([-.\\w]+)</td>"
  },
  {
    "id" : "35eb034e-b121-479c-9534-b725dfe8d7c8",
    "prId" : 10449,
    "prUrl" : "https://github.com/apache/kafka/pull/10449#pullrequestreview-625573862",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f98d2eb7-a683-48d4-bd7a-58e2511970dd",
        "parentId" : null,
        "authorId" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "body" : "Technically, the record e2e latency metrics are processor node level metrics that are only available on certain types of nodes. Since the bean regex depends on the level (i.e., the metric group) the regex was wrong before. ",
        "createdAt" : "2021-03-31T12:42:12Z",
        "updatedAt" : "2021-03-31T12:48:32Z",
        "lastEditedBy" : "b7cbfdaf-f3e2-4130-8254-501ace9562ac",
        "tags" : [
        ]
      },
      {
        "id" : "d84f5c6c-aae4-46b9-a838-6a7128784530",
        "parentId" : "f98d2eb7-a683-48d4-bd7a-58e2511970dd",
        "authorId" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "body" : "Ah, thanks. Tbh I had forgotten how we ultimately ended up doing these metrics, thanks for catching this",
        "createdAt" : "2021-03-31T18:00:21Z",
        "updatedAt" : "2021-03-31T18:00:21Z",
        "lastEditedBy" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "tags" : [
        ]
      }
    ],
    "commit" : "a2701cc9aa138600332c6e3425fc95d579a86b20",
    "line" : 56,
    "diffHunk" : "@@ -1,1 +2576,2580 @@      </tr>\n      <tr>\n        <td>record-e2e-latency-avg</td>\n        <td>The average end-to-end latency of a record, measured by comparing the record timestamp with the system time when it has been fully processed by the node.</td>\n        <td>kafka.streams:type=stream-processor-node-metrics,thread-id=([-.\\w]+),task-id=([-.\\w]+),processor-node-id=([-.\\w]+)</td>"
  }
]