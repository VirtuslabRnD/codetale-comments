[
  {
    "id" : "30668b2a-37ec-48d8-bab8-31bbf51d5387",
    "prId" : 6515,
    "prUrl" : "https://github.com/apache/airflow/pull/6515#pullrequestreview-317080857",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "323a4a2c-cd22-4698-a2a2-335fb42590a3",
        "parentId" : null,
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "```suggestion\r\n    In general, you should not write any complex code outside the tasks. The code outside the tasks runs every time Airflow parses the DAG, which happens every second by default.\r\n```",
        "createdAt" : "2019-11-14T16:17:07Z",
        "updatedAt" : "2019-11-25T15:31:41Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      }
    ],
    "commit" : "896e0e8b0a9fa9d68c3449013c8435e97a417f5f",
    "line" : 105,
    "diffHunk" : "@@ -1,1 +103,107 @@.. note::\n\n    In general, you should not write any code outside the tasks. The code outside the tasks runs every time Airflow parses the DAG, which happens every second by default.\n\n"
  },
  {
    "id" : "ad9f627a-67ff-4c02-bd2f-0245e34224f8",
    "prId" : 6515,
    "prUrl" : "https://github.com/apache/airflow/pull/6515#pullrequestreview-321893972",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ebf0eafc-894c-4f91-a72a-8e44d1e11cec",
        "parentId" : null,
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "```\r\nAirflow parses all the DAG files in a loop, trying to parse each file every ``processor_poll_interval`` seconds (default 1 second). During parsing, Airflow will open and close a new connection to the metadata DB for each Variable. Because of this using Variables at the \"file-scope\" of your DAG files should be avoided unless you have no choice.\r\n```\r\n\r\n(It should be only for each dag file, not for each Variable used. But I haven't tested this)",
        "createdAt" : "2019-11-21T12:13:33Z",
        "updatedAt" : "2019-11-25T15:31:41Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "51ae51ee-3765-4104-a36f-18c19a1b82cc",
        "parentId" : "ebf0eafc-894c-4f91-a72a-8e44d1e11cec",
        "authorId" : "52a5f991-d092-449d-a9fe-29ef949cf21e",
        "body" : "From the airflow code, it seems like a new session is created per variable",
        "createdAt" : "2019-11-21T13:40:17Z",
        "updatedAt" : "2019-11-25T15:31:41Z",
        "lastEditedBy" : "52a5f991-d092-449d-a9fe-29ef949cf21e",
        "tags" : [
        ]
      },
      {
        "id" : "31ccfd86-a3df-4788-9e5f-2a0a174aade1",
        "parentId" : "ebf0eafc-894c-4f91-a72a-8e44d1e11cec",
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "We configure things to use a session pool, or _should_.\r\n\r\nBut I have not tested this to see what actually happens in a long time :)",
        "createdAt" : "2019-11-22T21:26:10Z",
        "updatedAt" : "2019-11-25T15:31:41Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "ea7c0961-f487-4c2d-a536-e552f5f0c8a5",
        "parentId" : "ebf0eafc-894c-4f91-a72a-8e44d1e11cec",
        "authorId" : "52a5f991-d092-449d-a9fe-29ef949cf21e",
        "body" : "Yes, you are right. I looked at the wrapper function only. The actual session created uses the pool.",
        "createdAt" : "2019-11-23T04:44:04Z",
        "updatedAt" : "2019-11-25T15:31:41Z",
        "lastEditedBy" : "52a5f991-d092-449d-a9fe-29ef949cf21e",
        "tags" : [
        ]
      }
    ],
    "commit" : "896e0e8b0a9fa9d68c3449013c8435e97a417f5f",
    "line" : 88,
    "diffHunk" : "@@ -1,1 +86,90 @@Airflow parses all the DAGs in the background at a specific period.\nThe default period is set using ``processor_poll_interval`` config, which is by default 1 second. During parsing, Airflow creates a new connection to the metadata DB for each DAG.\nIt can result in a lot of open connections.\n\nThe best way of using variables is via a Jinja template which will delay reading the value until the task execution. The template synaxt to do this is:"
  },
  {
    "id" : "fa9b0a54-8d1c-4e73-8a68-9e50f9f15c5d",
    "prId" : 6515,
    "prUrl" : "https://github.com/apache/airflow/pull/6515#pullrequestreview-320835469",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0fbb38b4-705a-408a-923d-f5fb9f6da5fc",
        "parentId" : null,
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "`DEFAULT_DATE` isn't defined anywhere.",
        "createdAt" : "2019-11-21T12:17:06Z",
        "updatedAt" : "2019-11-25T15:31:41Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      }
    ],
    "commit" : "896e0e8b0a9fa9d68c3449013c8435e97a417f5f",
    "line" : 163,
    "diffHunk" : "@@ -1,1 +161,165 @@ class MyCustomOperatorTest(unittest.TestCase):\n    def setUp(self):\n        self.dag = DAG(TEST_DAG_ID, schedule_interval='@daily', default_args={'start_date' : DEFAULT_DATE})\n        self.op = MyCustomOperator(\n            dag=self.dag,"
  },
  {
    "id" : "a15ddc97-4f96-42e2-8751-e587e8bbd640",
    "prId" : 6515,
    "prUrl" : "https://github.com/apache/airflow/pull/6515#pullrequestreview-320835469",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "85891578-6a1e-450b-ab1e-a26c05e700ce",
        "parentId" : null,
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "```suggestion\r\n    poke_interval=0,\r\n    timeout=0,\r\n )\r\n```\r\n\r\nas there is no point in waiting for this - it's either there already, or it's failed.",
        "createdAt" : "2019-11-21T12:19:42Z",
        "updatedAt" : "2019-11-25T15:31:41Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      }
    ],
    "commit" : "896e0e8b0a9fa9d68c3449013c8435e97a417f5f",
    "line" : 194,
    "diffHunk" : "@@ -1,1 +192,196 @@    poke_interval=0,\n    timeout=0\n )\n task >> check\n"
  },
  {
    "id" : "463c1312-5073-4997-80d0-950ccbe8e31a",
    "prId" : 6515,
    "prUrl" : "https://github.com/apache/airflow/pull/6515#pullrequestreview-320835469",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "58044244-3f96-43fe-8483-5e7741972f4d",
        "parentId" : null,
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "```suggestion\r\n check = S3KeySensor(\r\n     task_id='check_parquet_exists',\r\n```",
        "createdAt" : "2019-11-21T12:20:00Z",
        "updatedAt" : "2019-11-25T15:31:41Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      }
    ],
    "commit" : "896e0e8b0a9fa9d68c3449013c8435e97a417f5f",
    "line" : 189,
    "diffHunk" : "@@ -1,1 +187,191 @@\n task = PushToS3(...)\n check = S3KeySensor(\n    task_id='check_parquet_exists',\n    bucket_key=\"s3://bucket/key/foo.parquet\","
  },
  {
    "id" : "fc448feb-096e-4519-b898-4ca8888e8f3a",
    "prId" : 6515,
    "prUrl" : "https://github.com/apache/airflow/pull/6515#pullrequestreview-320835469",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e81f3c23-e206-4fd2-a666-fdc35b26e8ed",
        "parentId" : null,
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "Earlier in this doc we say \"don't use variables\" and yet here we are. :)",
        "createdAt" : "2019-11-21T12:20:45Z",
        "updatedAt" : "2019-11-25T15:31:41Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      }
    ],
    "commit" : "896e0e8b0a9fa9d68c3449013c8435e97a417f5f",
    "line" : 215,
    "diffHunk" : "@@ -1,1 +213,217 @@    \"MY_DAG_DEST_PATH\",\n    \"s3://default-target/path/\"\n )\n\nDeployment in Production"
  },
  {
    "id" : "9718d828-d635-4e65-99eb-3567ae16a737",
    "prId" : 6515,
    "prUrl" : "https://github.com/apache/airflow/pull/6515#pullrequestreview-320835469",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "edd9f700-57f3-4a77-a67c-11f19d23b1e8",
        "parentId" : null,
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "There's also the option of using `sql_alchemy_conn_cmd` (only for the connection, not everything has a `_cmd` \"flavour\") so that you don't have to put secrets in the config file.",
        "createdAt" : "2019-11-21T12:44:09Z",
        "updatedAt" : "2019-11-25T15:31:41Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      }
    ],
    "commit" : "896e0e8b0a9fa9d68c3449013c8435e97a417f5f",
    "line" : 288,
    "diffHunk" : "@@ -1,1 +286,290 @@.. code::\n\n AIRFLOW__CORE__SQL_ALCHEMY_CONN=my_conn_id\n AIRFLOW__WEBSERVER__BASE_URL=http://host:port\n"
  },
  {
    "id" : "1247afee-7248-4197-8029-b391b4938af5",
    "prId" : 6515,
    "prUrl" : "https://github.com/apache/airflow/pull/6515#pullrequestreview-322345106",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a1051fe9-064b-4e07-a13b-e0c79fa1d3b0",
        "parentId" : null,
        "authorId" : "c25957e2-1132-4c48-a536-3824307fd862",
        "body" : "```suggestion\r\n.. code:: python\r\n```",
        "createdAt" : "2019-11-25T14:50:00Z",
        "updatedAt" : "2019-11-25T15:31:41Z",
        "lastEditedBy" : "c25957e2-1132-4c48-a536-3824307fd862",
        "tags" : [
        ]
      },
      {
        "id" : "9918f9d3-4e43-4a40-9389-87653658de3a",
        "parentId" : "a1051fe9-064b-4e07-a13b-e0c79fa1d3b0",
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "(FYI this one isn't required it seems as python is configured as the default lanauge. I think)",
        "createdAt" : "2019-11-25T14:58:10Z",
        "updatedAt" : "2019-11-25T15:31:41Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "e6f2d5e2-83fc-43a3-8d63-fbf8ed516aba",
        "parentId" : "a1051fe9-064b-4e07-a13b-e0c79fa1d3b0",
        "authorId" : "c25957e2-1132-4c48-a536-3824307fd862",
        "body" : "Oh yes I think so too. I saw at a different doc we don't mention it but it still renders it as python.\r\n\r\nhttps://github.com/apache/airflow/pull/6515#discussion_r350229921",
        "createdAt" : "2019-11-25T15:04:59Z",
        "updatedAt" : "2019-11-25T15:31:41Z",
        "lastEditedBy" : "c25957e2-1132-4c48-a536-3824307fd862",
        "tags" : [
        ]
      }
    ],
    "commit" : "896e0e8b0a9fa9d68c3449013c8435e97a417f5f",
    "line" : 135,
    "diffHunk" : "@@ -1,1 +133,137 @@**Unit test for loading a DAG:**\n\n.. code::\n\n from airflow.models import DagBag"
  },
  {
    "id" : "23798562-e6d6-4699-8268-27c14a92f32f",
    "prId" : 6515,
    "prUrl" : "https://github.com/apache/airflow/pull/6515#pullrequestreview-322333043",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "99e18226-352c-4246-8e30-96a81e23865b",
        "parentId" : null,
        "authorId" : "c25957e2-1132-4c48-a536-3824307fd862",
        "body" : "```suggestion\r\n.. code:: python\r\n```",
        "createdAt" : "2019-11-25T14:50:20Z",
        "updatedAt" : "2019-11-25T15:31:41Z",
        "lastEditedBy" : "c25957e2-1132-4c48-a536-3824307fd862",
        "tags" : [
        ]
      }
    ],
    "commit" : "896e0e8b0a9fa9d68c3449013c8435e97a417f5f",
    "line" : 153,
    "diffHunk" : "@@ -1,1 +151,155 @@**Unit test for custom operator:**\n\n.. code::\n\n import unittest"
  },
  {
    "id" : "277e70ff-f01d-4011-b234-e01d21fbdcca",
    "prId" : 6515,
    "prUrl" : "https://github.com/apache/airflow/pull/6515#pullrequestreview-322333176",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ada89b39-6ea3-480c-8973-e8a4ae3ae1b2",
        "parentId" : null,
        "authorId" : "c25957e2-1132-4c48-a536-3824307fd862",
        "body" : "```suggestion\r\n.. code:: python\r\n```",
        "createdAt" : "2019-11-25T14:50:30Z",
        "updatedAt" : "2019-11-25T15:31:41Z",
        "lastEditedBy" : "c25957e2-1132-4c48-a536-3824307fd862",
        "tags" : [
        ]
      }
    ],
    "commit" : "896e0e8b0a9fa9d68c3449013c8435e97a417f5f",
    "line" : 186,
    "diffHunk" : "@@ -1,1 +184,188 @@Similarly, if you have a task that starts a microservice in Kubernetes or Mesos, you should check if the service has started or not using :class:`airflow.sensors.http_sensor.HttpSensor`.\n\n.. code::\n\n task = PushToS3(...)"
  },
  {
    "id" : "4f8af027-0340-47ab-bd53-31817f23f6b5",
    "prId" : 6515,
    "prUrl" : "https://github.com/apache/airflow/pull/6515#pullrequestreview-322336078",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ba7fe622-3655-4bbf-a10a-b13da744c577",
        "parentId" : null,
        "authorId" : "c25957e2-1132-4c48-a536-3824307fd862",
        "body" : "```suggestion\r\n.. code:: python\r\n```",
        "createdAt" : "2019-11-25T14:50:38Z",
        "updatedAt" : "2019-11-25T15:31:41Z",
        "lastEditedBy" : "c25957e2-1132-4c48-a536-3824307fd862",
        "tags" : [
        ]
      },
      {
        "id" : "5b671314-6e9f-4c46-a4be-04ea83862dc1",
        "parentId" : "ba7fe622-3655-4bbf-a10a-b13da744c577",
        "authorId" : "c25957e2-1132-4c48-a536-3824307fd862",
        "body" : "Maybe we don't need this, the default is python I think",
        "createdAt" : "2019-11-25T14:54:05Z",
        "updatedAt" : "2019-11-25T15:31:41Z",
        "lastEditedBy" : "c25957e2-1132-4c48-a536-3824307fd862",
        "tags" : [
        ]
      }
    ],
    "commit" : "896e0e8b0a9fa9d68c3449013c8435e97a417f5f",
    "line" : 208,
    "diffHunk" : "@@ -1,1 +206,210 @@You can use environment variables  to parameterize the DAG.\n\n.. code::\n\n import os"
  }
]