[
  {
    "id" : "9da0638d-fffc-4778-a938-335024eef170",
    "prId" : 15302,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "abb0054b-cefa-4841-bb11-9915e1d5167e",
        "parentId" : null,
        "authorId" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "body" : "I would omit this detail unless you think admins are likely to need to use the annotation.\n\nI would suggest explaining that this feature is off by default, and explaining how to enable it.\n",
        "createdAt" : "2015-10-08T19:34:00Z",
        "updatedAt" : "2015-10-14T10:11:21Z",
        "lastEditedBy" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "tags" : [
        ]
      },
      {
        "id" : "ecb7f8d1-baf6-4776-89a0-e98f7723589a",
        "parentId" : "abb0054b-cefa-4841-bb11-9915e1d5167e",
        "authorId" : "a6ca7669-677e-4e8d-80cf-83cbff3b4216",
        "body" : "This is the only way (except looking into apiserver logs) to verify that the plugin is working and distinguish a pod with resources set manually from one that has resources auto-populated, so I'd leave this information.\n\nIn context of this document information about how to enabled it is redundant.\n",
        "createdAt" : "2015-10-09T11:17:43Z",
        "updatedAt" : "2015-10-14T10:11:21Z",
        "lastEditedBy" : "a6ca7669-677e-4e8d-80cf-83cbff3b4216",
        "tags" : [
        ]
      },
      {
        "id" : "1012e15b-a27f-442b-976f-4a8b6053f981",
        "parentId" : "abb0054b-cefa-4841-bb11-9915e1d5167e",
        "authorId" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "body" : "> In context of this document information about how to enabled it is redundant.\n\nCan you explain what you mean by this? My worry is that people will see this section and assume this behavior is always on. It would be useful to tell them how to know whether it's on, how to enable/disable it, etc. It's fine to point to a section of a different document rather than creating a redundancy (e.g. say \"see <link> for more information about how experimental features are enabled and disabled). \n",
        "createdAt" : "2015-10-10T06:44:16Z",
        "updatedAt" : "2015-10-14T10:11:21Z",
        "lastEditedBy" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "tags" : [
        ]
      },
      {
        "id" : "961a7b7f-9a85-4caf-8101-d7843fff49f8",
        "parentId" : "abb0054b-cefa-4841-bb11-9915e1d5167e",
        "authorId" : "a6ca7669-677e-4e8d-80cf-83cbff3b4216",
        "body" : "This document explains what Admission Control plugin is, specifies the list of available plugins, describes how to enable them and what is the recommended set of plugins. I think it's unnecessary to mention that InitialResources is enabled by default because it is not on the list of recommended plugins and to explain how enabled it because it is already done for any plugin.\n",
        "createdAt" : "2015-10-14T10:09:16Z",
        "updatedAt" : "2015-10-14T10:11:21Z",
        "lastEditedBy" : "a6ca7669-677e-4e8d-80cf-83cbff3b4216",
        "tags" : [
        ]
      }
    ],
    "commit" : "4abe33458e5000f373b09bf9a3e74697a429ce4f",
    "line" : null,
    "diffHunk" : "@@ -1,1 +149,153 @@then the plug-in auto-populates a compute resource request based on historical usage of containers running the same image.\nIf there is not enough data to make a decision the Request is left unchanged.\nWhen the plug-in sets a compute resource request, it annotates the pod with information on what compute resources it auto-populated.\n\nSee the [InitialResouces proposal](../proposals/initial-resources.md) for more details."
  },
  {
    "id" : "3e2e0450-104e-4ed4-8e74-846dd80e38de",
    "prId" : 11438,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "40020f17-3ee0-4c1d-87ac-7703f9dd698b",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "s/LimitRanger/LimitRange/\n",
        "createdAt" : "2015-07-17T17:52:31Z",
        "updatedAt" : "2015-07-17T18:31:55Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "e527b078-9245-43e7-99cf-820e3e32e646",
        "parentId" : "40020f17-3ee0-4c1d-87ac-7703f9dd698b",
        "authorId" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "body" : "Agh, we're totally inconsistent about calling it LimitRange vs. LimitRanger. But to make it locally consistent I'll apply your suggestion.\n",
        "createdAt" : "2015-07-17T18:30:14Z",
        "updatedAt" : "2015-07-17T18:31:55Z",
        "lastEditedBy" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "tags" : [
        ]
      },
      {
        "id" : "75c18613-d458-4f8e-a8c7-968f0c401070",
        "parentId" : "40020f17-3ee0-4c1d-87ac-7703f9dd698b",
        "authorId" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "body" : "Actually, we have multiple uses of both just within this doc. I'm going to leave this for a followup PR. \n",
        "createdAt" : "2015-07-17T18:31:16Z",
        "updatedAt" : "2015-07-17T18:31:55Z",
        "lastEditedBy" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "tags" : [
        ]
      },
      {
        "id" : "35c6a807-97c1-4511-bc85-d392e5d706f3",
        "parentId" : "40020f17-3ee0-4c1d-87ac-7703f9dd698b",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "OK\n",
        "createdAt" : "2015-07-17T19:17:08Z",
        "updatedAt" : "2015-07-17T19:17:08Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "d64250c34c8a11ad1637199fd77cec5de66ae867",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +122,126 @@This plug-in will observe the incoming request and ensure that it does not violate any of the constraints\nenumerated in the ```LimitRange``` object in a ```Namespace```.  If you are using ```LimitRange``` objects in\nyour Kubernetes deployment, you MUST use this plug-in to enforce those constraints. LimitRanger can also\nbe used to apply default resource requests to Pods that don't specify any; currently, the default LimitRanger\napplies a 0.1 CPU requirement to all Pods in the ```default``` namespace."
  },
  {
    "id" : "21a1bac3-51e8-42ee-95ab-6216e335bde0",
    "prId" : 11438,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "29e038f4-cd7f-4ed5-9cc6-e0c42b95d2aa",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "here too\n",
        "createdAt" : "2015-07-17T17:52:46Z",
        "updatedAt" : "2015-07-17T18:31:55Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "d64250c34c8a11ad1637199fd77cec5de66ae867",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +123,127 @@enumerated in the ```LimitRange``` object in a ```Namespace```.  If you are using ```LimitRange``` objects in\nyour Kubernetes deployment, you MUST use this plug-in to enforce those constraints. LimitRanger can also\nbe used to apply default resource requests to Pods that don't specify any; currently, the default LimitRanger\napplies a 0.1 CPU requirement to all Pods in the ```default``` namespace.\n"
  }
]