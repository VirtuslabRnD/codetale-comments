[
  {
    "id" : "c861d664-054b-46d2-af00-0d5ccc66d678",
    "prId" : 3002,
    "prUrl" : "https://github.com/typelevel/cats/pull/3002#pullrequestreview-279330260",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d1684331-e7d1-4adc-9cf5-c9ab05691a71",
        "parentId" : null,
        "authorId" : "6b760ef7-e448-44a7-b744-0c25c840a80a",
        "body" : "I see you are trying to make the example consistent with the last rule. But now I think about it, I'd suggest that we remove the last rule because: \r\n1, it's not enforced in kernel anyway due to historical reasons. \r\n2, it's kind of unintuitive. It's not easy for contributors to just look at existing names and figure this rule out. Yes, I know the current inconsistent names are not easier to figure out a rule. But in case we will be able to fix all the names in the future, at which point this rule will stand out as unintuitive. \r\n\r\nNot sure if we should spend much time bike shedding these rules, the names themselves provide no value whatsoever, the long names actually make the code harder to read  (the type signature provides all the information). We just need them to be unique enough. ",
        "createdAt" : "2019-08-23T16:41:11Z",
        "updatedAt" : "2019-08-23T16:41:12Z",
        "lastEditedBy" : "6b760ef7-e448-44a7-b744-0c25c840a80a",
        "tags" : [
        ]
      },
      {
        "id" : "77475021-eaf1-4cc1-9e09-07c781952029",
        "parentId" : "d1684331-e7d1-4adc-9cf5-c9ab05691a71",
        "authorId" : "6943dbfe-856b-4f1b-bd04-dca0091e8291",
        "body" : "I don't care at all about the specifics of the rules here, just that the guidelines are followed consistently, and that they are internally consistent. All of the instances in cats-kernel follow the rule you're suggesting we remove (including `catsKernelStdMonoidForList` itself), so if we remove the rule we're just asking for more inconsistency.\r\n\r\nAt this point I don't really care about any of thisâ€”I was just trying to take care of some low-hanging-fruit clean-up before 2.0 for an issue that bothers me and a few other people. If it's a big deal we can shelve it.",
        "createdAt" : "2019-08-25T10:56:48Z",
        "updatedAt" : "2019-08-25T10:57:02Z",
        "lastEditedBy" : "6943dbfe-856b-4f1b-bd04-dca0091e8291",
        "tags" : [
        ]
      }
    ],
    "commit" : "694d0bbfb214cf58a7d65cd05ed2ebd85d9f456e",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +81,85 @@- If the instance is for a standard library type add `Std` after the package. i.e. `catsStdShowForVector` and `catsKernelStdGroupForTuple`.\n\nAs an example, an implicit instance of `Monoid` for `List` defined in the package `Kernel` should be named `catsKernelStdMonoidForList`.\n\nThis rule is relatively flexible. Use what you see appropriate. The goal is to maintain uniqueness and avoid conflicts."
  },
  {
    "id" : "b16aa313-59f4-4e05-b187-3f695929010b",
    "prId" : 2095,
    "prUrl" : "https://github.com/typelevel/cats/pull/2095#pullrequestreview-82891306",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "eb592559-e6f4-493b-8037-7cde74d1c0ed",
        "parentId" : null,
        "authorId" : "b714495a-5740-47d4-aaaa-98f354f5c0a7",
        "body" : "It's really outside of the point of this example, but my mental compiler complained that you would need `F[_]:Monad` and `F[_]:Functor` constraints to be able to implement them :)",
        "createdAt" : "2017-12-12T16:23:00Z",
        "updatedAt" : "2017-12-12T16:23:12Z",
        "lastEditedBy" : "b714495a-5740-47d4-aaaa-98f354f5c0a7",
        "tags" : [
        ]
      }
    ],
    "commit" : "3b69015c0bcdcb713881cf336af9c7f8aa1e2221",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +108,112 @@\nabstract class KleisliInstance1 {\n  implicit def catsDataFunctorForKleisli[F[_], A]: Functor[Kleisli[F, A, ?]] = ...\n}\n```"
  }
]