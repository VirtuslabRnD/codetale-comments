[
  {
    "id" : "dbb9bed5-237f-4000-b500-82e72d5dc59b",
    "prId" : 332,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "172fe092-b442-4d3b-9c68-0e498d9346c4",
        "parentId" : null,
        "authorId" : "b714495a-5740-47d4-aaaa-98f354f5c0a7",
        "body" : "I'm not sure I would say this is how we've been approaching monad transformers. In #304, OptionT is its own class that wraps `F[Option[A]]`. We don't define a `Monad[F[Option[?]]` directly. I think doing so would lead to ambiguity as to whether you were trying to map over `F` or the inner option, wouldn't it?\n\nThe difference may be subtle, but I'm a bit hesitant to say something in the docs that is different than the actual Cats implementation (though I should note that the referenced pull request is not yet merged).\n",
        "createdAt" : "2015-06-20T13:30:33Z",
        "updatedAt" : "2015-06-22T17:31:35Z",
        "lastEditedBy" : "b714495a-5740-47d4-aaaa-98f354f5c0a7",
        "tags" : [
        ]
      }
    ],
    "commit" : "5f158e3c01b88eea247d3643d3f46f2439dffc3d",
    "line" : 99,
    "diffHunk" : "@@ -1,1 +103,107 @@```\n\nThis sort of construction is called a monad transformer.\n"
  }
]