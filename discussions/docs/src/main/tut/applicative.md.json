[
  {
    "id" : "f14521ef-eb56-460b-9e40-ca80625f3ae1",
    "prId" : 420,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "93c3f7ba-a983-4f02-800c-3502e0113826",
        "parentId" : null,
        "authorId" : "563615ca-cb31-4799-9fed-c4f9891ee7c8",
        "body" : "Also noticed this one, on re-reading the page.\n",
        "createdAt" : "2015-07-25T14:58:38Z",
        "updatedAt" : "2015-07-25T16:02:44Z",
        "lastEditedBy" : "563615ca-cb31-4799-9fed-c4f9891ee7c8",
        "tags" : [
        ]
      },
      {
        "id" : "6f631fe1-2447-4b1d-8ff7-f2400ab082ac",
        "parentId" : "93c3f7ba-a983-4f02-800c-3502e0113826",
        "authorId" : "89a3e0e3-e301-4aa8-b150-74070eb5a619",
        "body" : "Good catch!\n",
        "createdAt" : "2015-07-25T15:51:36Z",
        "updatedAt" : "2015-07-25T16:02:44Z",
        "lastEditedBy" : "89a3e0e3-e301-4aa8-b150-74070eb5a619",
        "tags" : [
        ]
      }
    ],
    "commit" : "d47d0d3b9534a9c0b4926211c1b596bb5d38595d",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +17,21 @@This method takes any value and returns the value in the context of\nthe functor. For many familiar functors, how to do this is\nobvious. For `Option`, the `pure` operation wraps the value in\n`Some`. For `List`, the `pure` operation returns a single element\n`List`:"
  },
  {
    "id" : "03d5378c-2803-437b-9a3b-c3ddefee776b",
    "prId" : 238,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4a0fe942-5761-454e-a00e-8bb619b15fce",
        "parentId" : null,
        "authorId" : "b714495a-5740-47d4-aaaa-98f354f5c0a7",
        "body" : "Minor nitpick, but I think this sentence/paragraph would read more easily if you changed this from `, when` to `. When`.\n\n:+1: thanks for all the great docs!\n",
        "createdAt" : "2015-02-25T13:14:36Z",
        "updatedAt" : "2015-02-25T13:14:36Z",
        "lastEditedBy" : "b714495a-5740-47d4-aaaa-98f354f5c0a7",
        "tags" : [
        ]
      }
    ],
    "commit" : "066dca12184fc44ce7baa2a4213da762fdafd17a",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +30,34 @@\nLike [Functor](functor.html) and [Apply](apply.html), Applicative\nfunctors also composes naturally with other Applicative functors, when\nyou compose one Applicative with another, the resulting `pure`\noperation will lift the passed value into one context, and the result"
  }
]