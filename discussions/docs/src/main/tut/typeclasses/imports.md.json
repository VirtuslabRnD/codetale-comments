[
  {
    "id" : "1c905b07-68a2-413d-9e19-89bc43bb13eb",
    "prId" : 1756,
    "prUrl" : "https://github.com/typelevel/cats/pull/1756#pullrequestreview-62404044",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cce8fc05-f968-4563-ba9c-5bce8b963bf7",
        "parentId" : null,
        "authorId" : "98bd6ddf-86cb-413a-a672-ee7d989ba290",
        "body" : "I was surprised this actually worked and we didn't need `import cats.syntax.semigroup._`, but it seems that `MonoidSyntax` extends `SemigroupSyntax`.\r\n\r\nIt seems that all the kernel syntax extends their \"super syntax traits\", which is another inconsistency between cats-kernel and cats-core (even though this syntax is in cats-core).\r\n",
        "createdAt" : "2017-09-13T11:17:44Z",
        "updatedAt" : "2017-09-13T11:17:45Z",
        "lastEditedBy" : "98bd6ddf-86cb-413a-a672-ee7d989ba290",
        "tags" : [
        ]
      }
    ],
    "commit" : "10a5db55e7713c73ddd00cd0efd2ae534d3d7d71",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +45,49 @@```tut:book\nimport cats.instances.string._\nimport cats.syntax.monoid._\n\n\"Hello, \" |+| \"World!\""
  },
  {
    "id" : "ed35c19e-befa-4d8d-a243-1786e47e2c15",
    "prId" : 1756,
    "prUrl" : "https://github.com/typelevel/cats/pull/1756#pullrequestreview-62404470",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0e59ac38-7f85-4625-8315-c57a3cf65eef",
        "parentId" : null,
        "authorId" : "98bd6ddf-86cb-413a-a672-ee7d989ba290",
        "body" : "If `MonoidSyntax` didn't extend `SemigroupSyntax`, we wouldn't have this issue.\r\n\r\nYou would only have this issue when you use `cats.implicits._` or `cats.xxx.all._` in combination with an a la carte import.",
        "createdAt" : "2017-09-13T11:19:56Z",
        "updatedAt" : "2017-09-13T11:19:56Z",
        "lastEditedBy" : "98bd6ddf-86cb-413a-a672-ee7d989ba290",
        "tags" : [
        ]
      }
    ],
    "commit" : "10a5db55e7713c73ddd00cd0efd2ae534d3d7d71",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +74,78 @@//now we also need access to isEmpty from Monoid\nimport cats.syntax.monoid._\n(x |+| 1).isEmpty //error: value |+| is not a member of Int\n```\n"
  }
]