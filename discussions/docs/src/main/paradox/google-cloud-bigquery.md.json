[
  {
    "id" : "b9749770-2b02-421c-b47b-ecf2063b9aa8",
    "prId" : 2613,
    "prUrl" : "https://github.com/akka/alpakka/pull/2613#pullrequestreview-619123470",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "21a613a6-42a8-4c02-9369-ba34d783f227",
        "parentId" : null,
        "authorId" : "daac5cb5-ce57-4037-a06c-7adf6a3f10e6",
        "body" : "It would be nice to consolidate this documentation in one place, but we can address that later.\r\n\r\nhttps://github.com/akka/alpakka/issues/2623",
        "createdAt" : "2021-03-23T18:08:59Z",
        "updatedAt" : "2021-03-24T23:41:41Z",
        "lastEditedBy" : "daac5cb5-ce57-4037-a06c-7adf6a3f10e6",
        "tags" : [
        ]
      },
      {
        "id" : "5b3aa9dd-f226-4af0-b225-4eea0606e3ad",
        "parentId" : "21a613a6-42a8-4c02-9369-ba34d783f227",
        "authorId" : "0f602f47-e8d3-4bc5-b20c-220fb24fc52f",
        "body" : "Much agreed!",
        "createdAt" : "2021-03-23T22:03:10Z",
        "updatedAt" : "2021-03-24T23:41:41Z",
        "lastEditedBy" : "0f602f47-e8d3-4bc5-b20c-220fb24fc52f",
        "tags" : [
        ]
      }
    ],
    "commit" : "af8e150b07e46dc8d18a992207b502febbd12d59",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +53,57 @@Credentials will be loaded automatically:\n\n1. From the file path specified by the `GOOGLE_APPLICATION_CREDENTIALS` environment variable or another [“well-known” location](https://medium.com/google-cloud/use-google-cloud-user-credentials-when-testing-containers-locally-acb57cd4e4da); or\n2. When running in a [Compute Engine](https://cloud.google.com/compute) instance.\n"
  },
  {
    "id" : "f6231160-9aa9-4dfd-88db-4a9e40c29c45",
    "prId" : 2533,
    "prUrl" : "https://github.com/akka/alpakka/pull/2533#pullrequestreview-544450559",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "adf3c160-0e7b-466e-8283-e12d90e54420",
        "parentId" : null,
        "authorId" : "daac5cb5-ce57-4037-a06c-7adf6a3f10e6",
        "body" : "We should include the Java example as well for parity.",
        "createdAt" : "2020-12-02T21:20:46Z",
        "updatedAt" : "2020-12-08T08:10:32Z",
        "lastEditedBy" : "daac5cb5-ce57-4037-a06c-7adf6a3f10e6",
        "tags" : [
        ]
      },
      {
        "id" : "5738eda9-ae85-478e-9e45-8ff9a275e260",
        "parentId" : "adf3c160-0e7b-466e-8283-e12d90e54420",
        "authorId" : "0f602f47-e8d3-4bc5-b20c-220fb24fc52f",
        "body" : "Definitely! Are there any preferred JSON libraries for Java?",
        "createdAt" : "2020-12-03T20:59:33Z",
        "updatedAt" : "2020-12-08T08:10:32Z",
        "lastEditedBy" : "0f602f47-e8d3-4bc5-b20c-220fb24fc52f",
        "tags" : [
        ]
      },
      {
        "id" : "17500985-79e5-4144-9c8d-64b0c8dca361",
        "parentId" : "adf3c160-0e7b-466e-8283-e12d90e54420",
        "authorId" : "0f602f47-e8d3-4bc5-b20c-220fb24fc52f",
        "body" : "Looks like Akka HTTP uses Jackson, I'll go with that.",
        "createdAt" : "2020-12-03T21:03:05Z",
        "updatedAt" : "2020-12-08T08:10:32Z",
        "lastEditedBy" : "0f602f47-e8d3-4bc5-b20c-220fb24fc52f",
        "tags" : [
        ]
      },
      {
        "id" : "03141aec-fa78-4ea7-88a0-039cc48f0bfc",
        "parentId" : "adf3c160-0e7b-466e-8283-e12d90e54420",
        "authorId" : "daac5cb5-ce57-4037-a06c-7adf6a3f10e6",
        "body" : "Sounds good. Thanks.",
        "createdAt" : "2020-12-03T21:09:09Z",
        "updatedAt" : "2020-12-08T08:10:32Z",
        "lastEditedBy" : "daac5cb5-ce57-4037-a06c-7adf6a3f10e6",
        "tags" : [
        ]
      }
    ],
    "commit" : "a32a060ce7ccce4441b8d619aed6d969d2bbd684",
    "line" : 78,
    "diffHunk" : "@@ -1,1 +116,120 @@\nScala\n: @@snip [snip](/google-cloud-bigquery/src/test/scala/docs/scaladsl/GoogleBigQuerySourceCustomParserDoc.scala) { #custom-parser }\n\nJava"
  },
  {
    "id" : "eea6d243-9180-4fe6-888f-2f4c57c1e205",
    "prId" : 2533,
    "prUrl" : "https://github.com/akka/alpakka/pull/2533#pullrequestreview-545712442",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9d3fb8f6-8618-4682-a10c-4c7f7ae308c1",
        "parentId" : null,
        "authorId" : "4882cc52-301b-4f60-833b-818aa2be339d",
        "body" : "I'm not sure, that BQ can't mess up the param order. I hope they didn't go that far, but would be good to check it...",
        "createdAt" : "2020-12-06T11:00:00Z",
        "updatedAt" : "2020-12-08T08:10:32Z",
        "lastEditedBy" : "4882cc52-301b-4f60-833b-818aa2be339d",
        "tags" : [
        ]
      },
      {
        "id" : "ad57bb4c-734d-49f9-897d-1597c561e079",
        "parentId" : "9d3fb8f6-8618-4682-a10c-4c7f7ae308c1",
        "authorId" : "0f602f47-e8d3-4bc5-b20c-220fb24fc52f",
        "body" : "You raise an important point; I'll look into it.",
        "createdAt" : "2020-12-06T12:43:49Z",
        "updatedAt" : "2020-12-08T08:10:32Z",
        "lastEditedBy" : "0f602f47-e8d3-4bc5-b20c-220fb24fc52f",
        "tags" : [
        ]
      },
      {
        "id" : "baf60b34-64dd-4768-892e-2d475e2b0f7e",
        "parentId" : "9d3fb8f6-8618-4682-a10c-4c7f7ae308c1",
        "authorId" : "0f602f47-e8d3-4bc5-b20c-220fb24fc52f",
        "body" : "[This stackoverflow answer](https://stackoverflow.com/a/59825040) suggests that it is \"pretty safe\" to assume this.",
        "createdAt" : "2020-12-06T13:03:50Z",
        "updatedAt" : "2020-12-08T08:10:32Z",
        "lastEditedBy" : "0f602f47-e8d3-4bc5-b20c-220fb24fc52f",
        "tags" : [
        ]
      },
      {
        "id" : "8cdb5583-bebe-4428-868b-a464977f5a0a",
        "parentId" : "9d3fb8f6-8618-4682-a10c-4c7f7ae308c1",
        "authorId" : "4882cc52-301b-4f60-833b-818aa2be339d",
        "body" : "I hope so. My only concern is that there is a \"schema\" field that returns the explicit return order. I hope that they don't mess up things for sport :D",
        "createdAt" : "2020-12-06T14:43:21Z",
        "updatedAt" : "2020-12-08T08:10:32Z",
        "lastEditedBy" : "4882cc52-301b-4f60-833b-818aa2be339d",
        "tags" : [
        ]
      }
    ],
    "commit" : "a32a060ce7ccce4441b8d619aed6d969d2bbd684",
    "line" : 65,
    "diffHunk" : "@@ -1,1 +103,107 @@When calling the `GoogleBigQuerySource.runQuery` method, your parser is passed one-by-one each entry in the `rows` key of the response.\nNote that these entries are represented as \"a series of JSON f,v objects for indicating fields and values\" ([reference documentation](https://cloud.google.com/bigquery/docs/reference/rest/v2/jobs/getQueryResults#body.GetQueryResultsResponse.FIELDS.rows)).\n@scala[To correctly generate a Spray `JsonFormat[T]` for your case class `T`, you must `import akka.stream.alpakka.googlecloud.bigquery.scaladsl.BigQueryJsonProtocol._` and use the provided `bigQueryJsonFormatN(T)` methods as a drop-in replacement for the usual `jsonFormatN(T)`. Furthermore, the order and presence of parameters in `T` is required to strictly match the query.]\n\nThe actual parsing implementation is fully customizable via the [unmarshalling API](https://doc.akka.io/docs/akka-http/current/common/unmarshalling.html) from Akka HTTP."
  }
]