[
  {
    "id" : "b869e6b5-56a0-4395-9c9f-7728fd3f32ab",
    "prId" : 2149,
    "prUrl" : "https://github.com/akka/alpakka/pull/2149#pullrequestreview-383176372",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "03dc49ac-8b36-4a55-9a92-9e5dccdb54b6",
        "parentId" : null,
        "authorId" : "daac5cb5-ce57-4037-a06c-7adf6a3f10e6",
        "body" : "@ennru This may have not been needed, but it was required for me to build docs.",
        "createdAt" : "2020-03-27T20:24:08Z",
        "updatedAt" : "2020-03-27T20:24:08Z",
        "lastEditedBy" : "daac5cb5-ce57-4037-a06c-7adf6a3f10e6",
        "tags" : [
        ]
      }
    ],
    "commit" : "bad5a65ea7379eb10e93bb91e6aee36623c68134",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +28,32 @@## Sessions\n\nCassandra is accessed through @apidoc[akka.stream.alpakka.cassandra.*.CassandraSession]s which are managed by the @apidoc[CassandraSessionRegistry] Akka extension. This way a session is shared across all usages within the actor system and properly shut down after the actor system is shut down.\n\n@scala[The `CassandraSession` is provided to the stream factory methods as an `implicit` parameter.]"
  },
  {
    "id" : "7aedd0b8-a372-4922-8cb8-9e9b75955a5b",
    "prId" : 164,
    "prUrl" : "https://github.com/akka/alpakka/pull/164#pullrequestreview-79808174",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9474fd40-1551-465a-bc77-9fbbf95639a0",
        "parentId" : null,
        "authorId" : "7b601e48-f550-477f-a23e-0dc6ca34c971",
        "body" : "Doesn't the cassandra connector have both Java and Scala APIs? We should link to both APIs using @scala[] and @java[] here.",
        "createdAt" : "2017-11-28T18:47:33Z",
        "updatedAt" : "2017-12-05T22:17:57Z",
        "lastEditedBy" : "7b601e48-f550-477f-a23e-0dc6ca34c971",
        "tags" : [
        ]
      },
      {
        "id" : "18a7a954-aa37-42ad-92ba-795e9f504679",
        "parentId" : "9474fd40-1551-465a-bc77-9fbbf95639a0",
        "authorId" : "082c3515-9d78-4eef-9127-b3f805b08211",
        "body" : "I dont see any of the other connectors doing that. It renders as a inline link. Im not sure about how to style it. It would be weird to interrupt every sentence with java-link & scala-link.\r\n\r\nDo you have any suggestion? I'd rather leave it.",
        "createdAt" : "2017-11-29T10:59:03Z",
        "updatedAt" : "2017-12-05T22:17:57Z",
        "lastEditedBy" : "082c3515-9d78-4eef-9127-b3f805b08211",
        "tags" : [
        ]
      },
      {
        "id" : "54af517f-4656-4bdd-aa40-24acc0d86dca",
        "parentId" : "9474fd40-1551-465a-bc77-9fbbf95639a0",
        "authorId" : "a141b0cb-a84d-4131-a4c1-fc1f8b93e109",
        "body" : "It looks weird only in the markdown source, not in the produced page, right?\r\n\r\nI would be cool to have a `@unidoc` directive that figures out how to link to both Scala and Java docs automatically. Preferably even checking that those classes indeed exist? Way outside the scope of this PR though :).",
        "createdAt" : "2017-11-29T11:02:48Z",
        "updatedAt" : "2017-12-05T22:17:57Z",
        "lastEditedBy" : "a141b0cb-a84d-4131-a4c1-fc1f8b93e109",
        "tags" : [
        ]
      }
    ],
    "commit" : "292fd5427199edf19a493a2c9a340faf7dca5584",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +1,5 @@# Cassandra Connector\n\nThe Cassandra connector allows you to read and write to Cassandra. You can query a stream of rows from @scaladoc[CassandraSource](akka.stream.alpakka.cassandra.scaladsl.CassandraSource$) or use prepared statements to insert or update with @scaladoc[CassandraSink](akka.stream.alpakka.cassandra.scaladsl.CassandraSink$).\n\n## Artifacts"
  },
  {
    "id" : "9a3e9ca7-4088-4d4a-bef8-84041d163fe9",
    "prId" : 7,
    "prUrl" : "https://github.com/akka/alpakka/pull/7#pullrequestreview-5804915",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e866795b-9269-44ee-8405-d7da20551b65",
        "parentId" : null,
        "authorId" : "7b601e48-f550-477f-a23e-0dc6ca34c971",
        "body" : "Ah, ok, maybe it is ok then with such a simplistic sample given this note.\n",
        "createdAt" : "2016-10-26T08:13:11Z",
        "updatedAt" : "2016-10-26T13:29:12Z",
        "lastEditedBy" : "7b601e48-f550-477f-a23e-0dc6ca34c971",
        "tags" : [
        ]
      }
    ],
    "commit" : "c2683dbdf6f560b8bb71e9cd6b37495064bad041",
    "line" : 70,
    "diffHunk" : "@@ -1,1 +68,72 @@: @@snip (../../../../cassandra/src/test/java/akka/stream/contrib/cassandra/CassandraSourceTest.java) { #run-source }\n\nHere we used a basic sink to complete the stream by collecting all of the stream elements to a collection. The power of streams comes from building larger data pipelines which leverage backpressure to ensure efficient flow control. Feel free to edit the example code and build @extref[more advanced stream topologies](akka-docs:scala/stream/stream-introduction).\n\n### Running the example code"
  }
]