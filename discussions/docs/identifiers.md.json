[
  {
    "id" : "8c4444f2-6ed0-4ad3-9c45-90171579560b",
    "prId" : 1216,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f85684d2-5208-4061-a697-380a281daca6",
        "parentId" : null,
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "This should be clarified to be:\n\n\"A non-empty string guaranteed to be unique to a resource type within a given scope at a particular time.\"\n\nIt should be a-ok to have different resource types that have the same name in a particular scope.\n",
        "createdAt" : "2014-09-09T20:21:53Z",
        "updatedAt" : "2014-09-12T00:43:25Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      },
      {
        "id" : "85b36fc6-1fb3-411c-84c4-12983c91156f",
        "parentId" : "f85684d2-5208-4061-a697-380a281daca6",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "Agree with your point, but I think \"within a given scope\" captures that.  It's already a mouthy sentence.\n",
        "createdAt" : "2014-09-10T06:00:56Z",
        "updatedAt" : "2014-09-12T00:43:25Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "d4b6f7ab3c5499a564a13cb8ca9f2645c12b7e7b",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +10,14 @@\nName\n: A non-empty string guaranteed to be unique within a given scope at a particular time; used in resource URLs; provided by clients at creation time and encouraged to be human friendly; intended to facilitate creation idempotence and space-uniqueness of singleton objects, distinguish distinct entities, and reference particular entities across operations.\n\n[rfc1035](http://www.ietf.org/rfc/rfc1035.txt)/[rfc1123](http://www.ietf.org/rfc/rfc1123.txt) label (DNS_LABEL)"
  },
  {
    "id" : "d53d8037-50c7-4c62-a21d-17a3689a20e7",
    "prId" : 334,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "baf70db2-9ef6-4c9b-987b-0644366049ee",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "This is the pod.ID field, correct? And it should equal the ContainerManifest's ID, field, should we choose to keep that as a thing, correct?\n",
        "createdAt" : "2014-07-01T23:26:08Z",
        "updatedAt" : "2014-07-01T23:26:08Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "0a418113-05c9-433b-a22f-f96c34d0e824",
        "parentId" : "baf70db2-9ef6-4c9b-987b-0644366049ee",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Yes, based on tentative agreement in #294.  I can clarify that in the doc.\n",
        "createdAt" : "2014-07-01T23:27:12Z",
        "updatedAt" : "2014-07-01T23:28:36Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "a6a27fd6ef97a91ab14a5cd980ce17fdf24e4817",
    "line" : 58,
    "diffHunk" : "@@ -1,1 +56,60 @@1) Each container name within a container manifest must be unique within that manifest\n\n2) Each pod instance on the apiserver must have a unique identifier across space and time (UUID)\n   1) The apiserver may set this identifier if not specified by a client\n   2) This identifier will persist even if moved across hosts"
  }
]