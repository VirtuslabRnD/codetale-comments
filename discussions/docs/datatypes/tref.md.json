[
  {
    "id" : "6f9fec5c-a373-4475-b272-24004b3af466",
    "prId" : 2174,
    "prUrl" : "https://github.com/zio/zio/pull/2174#pullrequestreview-313685194",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b0676efb-3b93-4113-9393-72024e257f5b",
        "parentId" : null,
        "authorId" : "6080cd8f-e671-4d49-a54c-b6159456ac0e",
        "body" : "See the comment about renaming.",
        "createdAt" : "2019-11-07T15:45:38Z",
        "updatedAt" : "2019-11-08T11:06:30Z",
        "lastEditedBy" : "6080cd8f-e671-4d49-a54c-b6159456ac0e",
        "tags" : [
        ]
      },
      {
        "id" : "b354c7bf-5c66-4e3d-b246-8c0140541db9",
        "parentId" : "b0676efb-3b93-4113-9393-72024e257f5b",
        "authorId" : "aa91bf35-8de7-401d-863b-3a8992a6c726",
        "body" : "Sorry, I didn't pull the latest changes. Thanks for noticing. +1",
        "createdAt" : "2019-11-07T22:08:00Z",
        "updatedAt" : "2019-11-08T11:06:30Z",
        "lastEditedBy" : "aa91bf35-8de7-401d-863b-3a8992a6c726",
        "tags" : [
        ]
      },
      {
        "id" : "57e2e7ad-97d1-4444-9625-a4ca738a6efe",
        "parentId" : "b0676efb-3b93-4113-9393-72024e257f5b",
        "authorId" : "aa91bf35-8de7-401d-863b-3a8992a6c726",
        "body" : "As you made changes to rolling back to `make`, I will leave as it is.",
        "createdAt" : "2019-11-07T22:39:15Z",
        "updatedAt" : "2019-11-08T11:06:30Z",
        "lastEditedBy" : "aa91bf35-8de7-401d-863b-3a8992a6c726",
        "tags" : [
        ]
      }
    ],
    "commit" : "bd15dc83ad4b09636562c2449552bcf3fe2caced",
    "line" : 39,
    "diffHunk" : "@@ -1,1 +37,41 @@\nval retrieveSingle: UIO[Int] = (for {\n  tRef <- TRef.make(10)\n  value <- tRef.get\n} yield value).commit"
  },
  {
    "id" : "54882435-55b8-4d77-b25a-24761480f480",
    "prId" : 2174,
    "prUrl" : "https://github.com/zio/zio/pull/2174#pullrequestreview-313679136",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8aa58d44-e651-49ea-98b0-c891c54898c0",
        "parentId" : null,
        "authorId" : "6080cd8f-e671-4d49-a54c-b6159456ac0e",
        "body" : "I'd consider renaming `makeCommit` method to `committed`. \r\n\r\n@jdegoes wdyt?",
        "createdAt" : "2019-11-07T15:46:07Z",
        "updatedAt" : "2019-11-08T11:06:30Z",
        "lastEditedBy" : "6080cd8f-e671-4d49-a54c-b6159456ac0e",
        "tags" : [
        ]
      },
      {
        "id" : "7dddff7c-412a-4dcd-ba5d-0730e6f0231c",
        "parentId" : "8aa58d44-e651-49ea-98b0-c891c54898c0",
        "authorId" : "fb116aef-1bf2-4605-9639-255437a2e564",
        "body" : "It is `make` followed by `commit`. So `makeCommit`. If we kept with `apply` for `make` then `committed` could work well, or even just `commit`, but I am not a fan of that for reasons listed above.",
        "createdAt" : "2019-11-07T21:41:48Z",
        "updatedAt" : "2019-11-08T11:06:30Z",
        "lastEditedBy" : "fb116aef-1bf2-4605-9639-255437a2e564",
        "tags" : [
        ]
      },
      {
        "id" : "5cbc730d-af7c-4c01-91cc-7430718edb66",
        "parentId" : "8aa58d44-e651-49ea-98b0-c891c54898c0",
        "authorId" : "6080cd8f-e671-4d49-a54c-b6159456ac0e",
        "body" : "Reverted the `apply` renaming in #2179. Please take a look.",
        "createdAt" : "2019-11-07T22:26:06Z",
        "updatedAt" : "2019-11-08T11:06:30Z",
        "lastEditedBy" : "6080cd8f-e671-4d49-a54c-b6159456ac0e",
        "tags" : [
        ]
      }
    ],
    "commit" : "bd15dc83ad4b09636562c2449552bcf3fe2caced",
    "line" : 51,
    "diffHunk" : "@@ -1,1 +49,53 @@\nval retrieveMultiple: UIO[Int] = for {\n  tRef <- TRef.makeCommit(10)\n  value <- tRef.get.commit\n} yield value"
  },
  {
    "id" : "8b38e63b-3f78-4b73-b5c1-b200adda251f",
    "prId" : 2174,
    "prUrl" : "https://github.com/zio/zio/pull/2174#pullrequestreview-313670194",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8f3847d0-f8fc-4848-9612-429457050138",
        "parentId" : null,
        "authorId" : "fb116aef-1bf2-4605-9639-255437a2e564",
        "body" : "This example is not really realistic because each thing is done in isolation from the others, so there are no atomic guarantees across the set and get.",
        "createdAt" : "2019-11-07T21:42:41Z",
        "updatedAt" : "2019-11-08T11:06:30Z",
        "lastEditedBy" : "fb116aef-1bf2-4605-9639-255437a2e564",
        "tags" : [
        ]
      },
      {
        "id" : "7c5ee50b-3922-4c05-a715-d46a6371c690",
        "parentId" : "8f3847d0-f8fc-4848-9612-429457050138",
        "authorId" : "aa91bf35-8de7-401d-863b-3a8992a6c726",
        "body" : "Sure, you're completely right (also applies for the other examples), for each statement, they're working in isolation. Let me just make sure I'm not wrong, but to have guarantees across the set and get, should I enclosure the statements in a single atomic transaction?\r\n```\r\nfor {\r\n  tRef <- TRef(10).commit\r\n  nValue <- STM.atomically { // tRef.set(12).flatMap(_ => tRef.get).commit\r\n    for {\r\n      _ <- tRef.set(12)\r\n      nValue <- tRef.get\r\n    } yield nValue\r\n  }\r\n} yield nValue\r\n```\r\nthen it gives the guarantees about atomicity of the `set and get`. ",
        "createdAt" : "2019-11-07T22:18:35Z",
        "updatedAt" : "2019-11-08T11:06:30Z",
        "lastEditedBy" : "aa91bf35-8de7-401d-863b-3a8992a6c726",
        "tags" : [
        ]
      }
    ],
    "commit" : "bd15dc83ad4b09636562c2449552bcf3fe2caced",
    "line" : 75,
    "diffHunk" : "@@ -1,1 +73,77 @@Or on multiple transactions:\n\n```scala mdoc:silent\nimport zio._\nimport zio.stm._"
  }
]