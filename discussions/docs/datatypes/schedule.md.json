[
  {
    "id" : "fb7ffcc8-e98c-489c-aa96-4d249c407159",
    "prId" : 2294,
    "prUrl" : "https://github.com/zio/zio/pull/2294#pullrequestreview-320966870",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4657f667-ab58-4de2-8986-a288cb1d8e2b",
        "parentId" : null,
        "authorId" : "2a2f79ba-933f-43cd-9d45-5d769ab0f54d",
        "body" : "import is missing",
        "createdAt" : "2019-11-21T09:50:51Z",
        "updatedAt" : "2019-11-21T15:24:42Z",
        "lastEditedBy" : "2a2f79ba-933f-43cd-9d45-5d769ab0f54d",
        "tags" : [
        ]
      },
      {
        "id" : "77549cac-5667-475a-bc46-a0512b22b5ee",
        "parentId" : "4657f667-ab58-4de2-8986-a288cb1d8e2b",
        "authorId" : "0676ff00-bbe5-4a0f-8ff4-791926933b92",
        "body" : "Oh interesting. I didn't realize code in the snippets were compiled. Hmm, not exactly ideal but I guess I can use the `TimeoutException` in `scala.concurrent` to get around this. I didn't really want to specify one because usually web clients/servers define their own TimeoutException, so choosing one is pretty arbitrary.\r\n\r\nAnyway, I went with that for now. Or I could make up a completely different example altogether.",
        "createdAt" : "2019-11-21T15:25:11Z",
        "updatedAt" : "2019-11-21T15:25:12Z",
        "lastEditedBy" : "0676ff00-bbe5-4a0f-8ff4-791926933b92",
        "tags" : [
        ]
      }
    ],
    "commit" : "f0bf5f6451748e382cfce491e4253bb75e4f2a8d",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +110,114 @@\nval whileTimeout = Schedule.exponential(10.milliseconds) && Schedule.doWhile[Throwable] {\n  case _: TimeoutException => true\n  case _ => false\n}"
  }
]