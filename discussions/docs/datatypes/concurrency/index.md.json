[
  {
    "id" : "3a8c1be2-8988-4cda-b97e-0d7cd2db965d",
    "prId" : 4934,
    "prUrl" : "https://github.com/zio/zio/pull/4934#pullrequestreview-633374737",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7a39ab63-94a0-4075-9931-05a5a5d37a79",
        "parentId" : null,
        "authorId" : "fb116aef-1bf2-4605-9639-255437a2e564",
        "body" : "Another key point: ZIO concurrency structures, including those built with STM, are _safe for interruption_. This means that you can place them into timeouts, race them, and so forth, without leaking any resources.",
        "createdAt" : "2021-04-12T10:24:32Z",
        "updatedAt" : "2021-04-12T10:24:32Z",
        "lastEditedBy" : "fb116aef-1bf2-4605-9639-255437a2e564",
        "tags" : [
        ]
      }
    ],
    "commit" : "bdcb2490112b7b7e34be3190ededf18b1e0be1c0",
    "line" : 73,
    "diffHunk" : "@@ -1,1 +63,67 @@The idea behind the `modify` is that a variable is only updated if it still has the same value as the time we had read the value from the original memory location. If the value has changed, it retries in the while loop until it succeeds. \n\n## Advantage of Using ZIO Concurrency\n\nHere we are going to enumerate some points that why the ZIO concurrency model helps us to do our job well:"
  }
]