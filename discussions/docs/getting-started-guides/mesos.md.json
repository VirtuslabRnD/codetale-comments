[
  {
    "id" : "5932367b-4776-474f-a1a7-84df94337653",
    "prId" : 12745,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8aa4fef0-170b-4574-aec5-54002e032fd6",
        "parentId" : null,
        "authorId" : "ad0a3561-db60-47a9-b82f-ac613199f968",
        "body" : "Are we sure about the changes in this file?\n",
        "createdAt" : "2015-08-17T16:52:07Z",
        "updatedAt" : "2015-08-17T18:33:08Z",
        "lastEditedBy" : "ad0a3561-db60-47a9-b82f-ac613199f968",
        "tags" : [
        ]
      },
      {
        "id" : "5e56dde2-8d7f-474a-8dd9-50706aa9e83d",
        "parentId" : "8aa4fef0-170b-4574-aec5-54002e032fd6",
        "authorId" : "766f642e-1622-4803-803b-05ce306fc30e",
        "body" : "`mesos-master` `auth-path` `km-path` `executor-path` `--proxy-path` I verified are defined by mesos with a `-` and the docs are in fact wrong.\n\nIn this case mesos-master is purely a user indicator, and in fact they use mesos-master in other places.\n",
        "createdAt" : "2015-08-17T18:26:30Z",
        "updatedAt" : "2015-08-17T18:33:08Z",
        "lastEditedBy" : "766f642e-1622-4803-803b-05ce306fc30e",
        "tags" : [
        ]
      }
    ],
    "commit" : "ca310ffdac8d33671f32d7cb91c8fb1278cd059f",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +133,137 @@```\n\nIdentify your Mesos master: depending on your Mesos installation this is either a `host:port` like `mesos-master:5050` or a ZooKeeper URL like `zk://zookeeper:2181/mesos`.\nIn order to let Kubernetes survive Mesos master changes, the ZooKeeper URL is recommended for production environments.\n"
  },
  {
    "id" : "91918ddc-f266-4229-a68f-ff843d62b7d2",
    "prId" : 10747,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "369b6d5c-2465-45e7-8c00-e73fab89be86",
        "parentId" : null,
        "authorId" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "body" : "maybe explain what this is looking up (the kubernetes master)\n",
        "createdAt" : "2015-07-14T06:17:22Z",
        "updatedAt" : "2015-07-14T06:23:16Z",
        "lastEditedBy" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "tags" : [
        ]
      }
    ],
    "commit" : "3cb31a2ad4455ff405dd9f6759c75a98284dc0ee",
    "line" : null,
    "diffHunk" : "@@ -1,1 +271,275 @@\n```bash\nkubectl  exec busybox -- nslookup kubernetes\n```\n"
  },
  {
    "id" : "ddf0e7c2-a7b3-4e37-b232-b77959c17de1",
    "prId" : 10072,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4e838997-c640-437d-826e-3b927a029503",
        "parentId" : null,
        "authorId" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "body" : "can you add to that list the fact that you don't run the addons for monitoring, logging, and DNS? (obviously fine to do in a separate PR)\n",
        "createdAt" : "2015-06-19T06:37:59Z",
        "updatedAt" : "2015-06-28T14:55:12Z",
        "lastEditedBy" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "tags" : [
        ]
      },
      {
        "id" : "6c39a0c2-08ff-4ca8-8f42-003bdde4a800",
        "parentId" : "4e838997-c640-437d-826e-3b927a029503",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "DNS in fact is working fine on-top of k8sm. Added monitoring and logging as not available yet.\n",
        "createdAt" : "2015-06-22T14:45:48Z",
        "updatedAt" : "2015-06-28T14:55:12Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "dc7a9c87926723dd7dfde6c1f2f8f608c4e2646c",
    "line" : null,
    "diffHunk" : "@@ -1,1 +26,30 @@\n**NOTE:** There are [known issues with the current implementation][7] and support for centralized logging and monitoring is not yet available.\nPlease [file an issue against the kubernetes-mesos project][8] if you have problems completing the steps below.\n\n### Prerequisites"
  },
  {
    "id" : "d1d09bbf-4b2b-468b-aa7b-7827e187298f",
    "prId" : 10072,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c0bce0ce-c164-47a1-ae21-11ee5340cae0",
        "parentId" : null,
        "authorId" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "body" : "comment on 'sudo docker run' line a few lines below: this will almost always work, but the etcd version that we have actually qualified Kubernetes against can be found in \"cluster/images/etcd/Makefile\" which may not be the latest etcd. Probably not worth mentioning though.\n",
        "createdAt" : "2015-06-19T06:38:42Z",
        "updatedAt" : "2015-06-28T14:55:12Z",
        "lastEditedBy" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "tags" : [
        ]
      },
      {
        "id" : "857a0ed1-bb1b-4543-8092-eee7c9c5114f",
        "parentId" : "c0bce0ce-c164-47a1-ae21-11ee5340cae0",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "The docker hub version is not maintained. With the follow-up commit we switch to the quai.io container with the same version as in cluster/images/etcd/Makefile (v2.0.9).\n",
        "createdAt" : "2015-06-22T15:14:04Z",
        "updatedAt" : "2015-06-28T14:55:12Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "dc7a9c87926723dd7dfde6c1f2f8f608c4e2646c",
    "line" : null,
    "diffHunk" : "@@ -1,1 +64,68 @@$ export KUBERNETES_MASTER=http://${KUBERNETES_MASTER_IP}:8888\n```\n\n### Deploy etcd\nStart etcd and verify that it is running:"
  },
  {
    "id" : "917a4545-232f-45ca-8df6-2d50af121008",
    "prId" : 5442,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7245a2ee-39bf-4d99-b9fa-980241ed241c",
        "parentId" : null,
        "authorId" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "body" : "Can you call out in the text what version of Kubernetes is being installed.\n",
        "createdAt" : "2015-03-16T19:39:25Z",
        "updatedAt" : "2015-04-02T18:24:22Z",
        "lastEditedBy" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "tags" : [
        ]
      },
      {
        "id" : "e6668f81-d9a8-40ff-8e50-5104afdb3bbc",
        "parentId" : "7245a2ee-39bf-4d99-b9fa-980241ed241c",
        "authorId" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "body" : "Will do\n\nOn Mon, Mar 16, 2015 at 3:39 PM, Eric Tune notifications@github.com wrote:\n\n> In docs/getting-started-guides/mesos.md\n> https://github.com/GoogleCloudPlatform/kubernetes/pull/5442#discussion_r26519939\n> :\n> \n> > @@ -0,0 +1,287 @@\n> > +## Getting started with Kubernetes on Mesos\n> > +\n> > +<!-- TODO: Update, clean up. -->\n> > +\n> > +Mesos allows dynamic sharing of cluster resources between Kubernetes and other first-class Mesos frameworks such as [Hadoop][1], [Spark][2], and [Chronos][3].\n> > +Mesos ensures applications running on your cluster are isolated and that resources are allocated fairly.\n> > +\n> > +Running Kubernetes on Mesos allows you to easily move Kubernetes workloads from one cloud provider to another to your own physical datacenter.\n> > +\n> > +This tutorial will walk you through setting up Kubernetes on a Mesos cluster on [Google Cloud Plaform][4].\n> > +It provides a step by step walk through of adding Kubernetes to a Mesos cluster and running the classic GuestBook demo application.\n> > +\n> \n> Can you call out in the text what version of Kubernetes is being installed.\n> \n> â€”\n> Reply to this email directly or view it on GitHub\n> https://github.com/GoogleCloudPlatform/kubernetes/pull/5442/files#r26519939\n> .\n\n## \n\nJames DeFelice\n585.241.9488 (voice)\n650.649.6071 (fax)\n",
        "createdAt" : "2015-03-18T15:49:32Z",
        "updatedAt" : "2015-04-02T18:24:22Z",
        "lastEditedBy" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "tags" : [
        ]
      },
      {
        "id" : "e9365d2e-b98d-4c03-8987-56d6fecba8aa",
        "parentId" : "7245a2ee-39bf-4d99-b9fa-980241ed241c",
        "authorId" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "body" : "Thanks.  This is the only issue blocking merge, I think.\n",
        "createdAt" : "2015-03-19T17:16:45Z",
        "updatedAt" : "2015-04-02T18:24:22Z",
        "lastEditedBy" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "tags" : [
        ]
      }
    ],
    "commit" : "8a6e13a8c4913e6769259ac75d6d1e9d93de7ee3",
    "line" : null,
    "diffHunk" : "@@ -1,1 +11,15 @@It provides a step by step walk through of adding Kubernetes to a Mesos cluster and running the classic GuestBook demo application.\nThe walkthrough presented here is based on the v0.4.x series of the Kubernetes-Mesos project, which itself is based on Kubernetes v0.11.0.\n\n### Prerequisites\n"
  },
  {
    "id" : "0ae969d9-4505-469e-a7b7-2249e59708a7",
    "prId" : 5442,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1bc8ef44-82cc-496b-bdfa-e9baef6e235e",
        "parentId" : null,
        "authorId" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "body" : "does something like this work:\n\n`gcloud compute firewall-rules create frontend-service --source-ranges 0.0.0.0/0 --allow tcp:9998`\n",
        "createdAt" : "2015-03-16T19:56:13Z",
        "updatedAt" : "2015-04-02T18:24:22Z",
        "lastEditedBy" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "tags" : [
        ]
      },
      {
        "id" : "235c1baa-b5a3-4be1-a3c6-3b1fa73215cf",
        "parentId" : "1bc8ef44-82cc-496b-bdfa-e9baef6e235e",
        "authorId" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "body" : "Yep that appears to work too. If executed from the command line of the GCE\nVM then we'd need to have the user authenticate first. I just tried it and\ngot a warning:\n\nYour credentials may be visible to others with access to this\nvirtual machine. Are you sure you want to authenticate with\nyour personal account?\n\nI'm not sure if that would inhibit people. If they have gcloud installed on\ntheir local machine then it's (hopefully) more secure but that adds a\ndependency to the tutorial.\n\nThoughts?\n\nOn Mon, Mar 16, 2015 at 3:56 PM, Eric Tune notifications@github.com wrote:\n\n> In docs/getting-started-guides/mesos.md\n> https://github.com/GoogleCloudPlatform/kubernetes/pull/5442#discussion_r26521270\n> :\n> \n> > +$ # determine the internal port for the frontend service portal\n> > +$ sudo iptables-save|grep -e frontend  # -- port 36336 in this case\n> > +-A KUBE-PORTALS-CONTAINER -d 10.10.10.149/32 -p tcp -m comment --comment frontend -m tcp --dport 9998 -j DNAT --to-destination 10.22.183.23:36336\n> > +-A KUBE-PORTALS-CONTAINER -d 10.22.183.23/32 -p tcp -m comment --comment frontend -m tcp --dport 9998 -j DNAT --to-destination 10.22.183.23:36336\n> > +-A KUBE-PORTALS-HOST -d 10.10.10.149/32 -p tcp -m comment --comment frontend -m tcp --dport 9998 -j DNAT --to-destination 10.22.183.23:36336\n> > +-A KUBE-PORTALS-HOST -d 10.22.183.23/32 -p tcp -m comment --comment frontend -m tcp --dport 9998 -j DNAT --to-destination 10.22.183.23:36336\n> > +\n> > +$ # open up access to the internal port for the frontend service portal\n> > +$ sudo iptables -A INPUT -i eth0 -p tcp -m state --state NEW,ESTABLISHED -m tcp \\\n> > -  --dport ${internal_frontend_service_port} -j ACCEPT\n> >   +```\n> >   +\n> >   +Next, add a firewall rule in Google Cloud Platform Console / Networking:\n> >   +\n> >   +![Google Cloud Platform firewall configuration][9]\n> >   +\n> \n> does something like this work:\n> \n> gcloud compute firewall-rules create frontend-service --source-ranges\n> 0.0.0.0/0 --allow tcp:9998\n> \n> â€”\n> Reply to this email directly or view it on GitHub\n> https://github.com/GoogleCloudPlatform/kubernetes/pull/5442/files#r26521270\n> .\n\n## \n\nJames DeFelice\n585.241.9488 (voice)\n650.649.6071 (fax)\n",
        "createdAt" : "2015-03-18T15:25:37Z",
        "updatedAt" : "2015-04-02T18:24:22Z",
        "lastEditedBy" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "tags" : [
        ]
      },
      {
        "id" : "42171030-6858-4192-a5d0-f63a3ad2acf2",
        "parentId" : "1bc8ef44-82cc-496b-bdfa-e9baef6e235e",
        "authorId" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "body" : "I hadn't realized how automated the mesos cluster setup was until I look a closer look just now.  It appears one could setup a mesos cluster without ever touching the gcloud tool.  That surprised me.   I'll let you leave the text as is.\n",
        "createdAt" : "2015-03-19T17:16:18Z",
        "updatedAt" : "2015-04-02T18:24:22Z",
        "lastEditedBy" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "tags" : [
        ]
      }
    ],
    "commit" : "8a6e13a8c4913e6769259ac75d6d1e9d93de7ee3",
    "line" : null,
    "diffHunk" : "@@ -1,1 +285,289 @@\n![Google Cloud Platform firewall configuration][9]\n\nNow, you can visit the guestbook in your browser!\n"
  },
  {
    "id" : "76acbb6d-50d9-4f33-a787-511ea515b80a",
    "prId" : 5442,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "791d6191-6e11-4108-8c0b-7ff03ad9c89b",
        "parentId" : null,
        "authorId" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "body" : "Why are you running the service proxy on the master? Usually that is only run on the kubelet machines (unless I am forgetting something).\n",
        "createdAt" : "2015-03-29T08:06:03Z",
        "updatedAt" : "2015-04-02T18:24:22Z",
        "lastEditedBy" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "tags" : [
        ]
      }
    ],
    "commit" : "8a6e13a8c4913e6769259ac75d6d1e9d93de7ee3",
    "line" : null,
    "diffHunk" : "@@ -1,1 +93,97 @@\n```bash\n$ sudo ./bin/km proxy \\\n  --bind_address=${servicehost} \\\n  --etcd_servers=http://${servicehost}:4001 \\"
  },
  {
    "id" : "d66f08b2-75ae-420f-b320-23541822f3dd",
    "prId" : 5442,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "405fffc5-38e0-4159-a94f-b86480f0a38f",
        "parentId" : null,
        "authorId" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "body" : "FWIW I had 7 pods in 'kubectl get pods' and 'mesos ps' (3 x frontend-controller, 1 nginx, 1 redis-master, 2 x redis-slave-controller)\n",
        "createdAt" : "2015-03-29T08:20:03Z",
        "updatedAt" : "2015-04-02T18:24:22Z",
        "lastEditedBy" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "tags" : [
        ]
      }
    ],
    "commit" : "8a6e13a8c4913e6769259ac75d6d1e9d93de7ee3",
    "line" : null,
    "diffHunk" : "@@ -1,1 +233,237 @@ 0:00:08    R    41.58 MB  0.5   64.97    none   root  b9b2e0b2-d825-11e4-9162-42010acb46e2\n```\nThe number of Kubernetes pods listed earlier (from `bin/kubectl get pods`) should equal to the number active Mesos tasks listed the previous listing (`mesos ps`).\n\nNext, determine the internal IP address of the front end [service portal][8]:"
  }
]