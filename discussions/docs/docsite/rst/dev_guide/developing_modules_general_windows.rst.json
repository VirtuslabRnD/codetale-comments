[
  {
    "id" : "a7be5cee-368b-4baa-8175-7d916f1d846c",
    "prId" : 27308,
    "prUrl" : "https://github.com/ansible/ansible/pull/27308#pullrequestreview-52491769",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dafddd9c-58e0-4ed0-938d-d3dc8014e6a0",
        "parentId" : null,
        "authorId" : "a42ef04e-9973-4624-ace3-3da0615d5fc2",
        "body" : "suggestion: \r\n- name: get result of remove a file (check mode)\r\n\r\n(using 'actual' here confuses with the later meaning of 'not in check mode')",
        "createdAt" : "2017-07-26T08:27:43Z",
        "updatedAt" : "2017-07-31T21:46:30Z",
        "lastEditedBy" : "a42ef04e-9973-4624-ace3-3da0615d5fc2",
        "tags" : [
        ]
      },
      {
        "id" : "77da1d22-1592-4507-8f16-f8ca0418a7e6",
        "parentId" : "dafddd9c-58e0-4ed0-938d-d3dc8014e6a0",
        "authorId" : "7c547162-2334-4e33-a627-e146840da9ec",
        "body" : "Changed",
        "createdAt" : "2017-07-26T20:43:31Z",
        "updatedAt" : "2017-07-31T21:46:30Z",
        "lastEditedBy" : "7c547162-2334-4e33-a627-e146840da9ec",
        "tags" : [
        ]
      }
    ],
    "commit" : "6cad8a75598702b9cbe1d38b9a038f72885e072d",
    "line" : 215,
    "diffHunk" : "@@ -1,1 +213,217 @@      register: remove_file_check\n      check_mode: yes\n    \n    - name: get result of remove a file (check mode)\n      win_command: powershell.exe \"if (Test-Path -Path 'C:\\temp') { 'true' } else { 'false' }\""
  },
  {
    "id" : "6f40a512-035b-4aa7-8e8f-d0a19101082e",
    "prId" : 27308,
    "prUrl" : "https://github.com/ansible/ansible/pull/27308#pullrequestreview-52289437",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "80bf5e8e-c59d-4aa1-be16-4a233343413f",
        "parentId" : null,
        "authorId" : "a42ef04e-9973-4624-ace3-3da0615d5fc2",
        "body" : "suggestion: \r\n- name: get result of remove a file",
        "createdAt" : "2017-07-26T08:29:15Z",
        "updatedAt" : "2017-07-31T21:46:30Z",
        "lastEditedBy" : "a42ef04e-9973-4624-ace3-3da0615d5fc2",
        "tags" : [
        ]
      }
    ],
    "commit" : "6cad8a75598702b9cbe1d38b9a038f72885e072d",
    "line" : 231,
    "diffHunk" : "@@ -1,1 +229,233 @@        state: absent\n      register: remove_file\n    \n    - name: get result of remove a file\n      win_command: powershell.exe \"if (Test-Path -Path 'C:\\temp') { 'true' } else { 'false' }\""
  },
  {
    "id" : "ddfe0f13-4508-44ee-86c0-46dcbfdc80dc",
    "prId" : 33515,
    "prUrl" : "https://github.com/ansible/ansible/pull/33515#pullrequestreview-81041922",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ec3b3257-31fd-4484-b55a-db2816d369d8",
        "parentId" : null,
        "authorId" : "0e63cc34-1bfa-4233-9166-7dc54bf9e259",
        "body" : "Please rename the images so they don't feature your username.",
        "createdAt" : "2017-12-05T00:54:48Z",
        "updatedAt" : "2017-12-06T22:40:52Z",
        "lastEditedBy" : "0e63cc34-1bfa-4233-9166-7dc54bf9e259",
        "tags" : [
        ]
      },
      {
        "id" : "acd5e52e-9efc-410b-85d6-3211a74e735d",
        "parentId" : "ec3b3257-31fd-4484-b55a-db2816d369d8",
        "authorId" : "7c547162-2334-4e33-a627-e146840da9ec",
        "body" : "I can't, these images are not supported/managed by Ansible and are just registered under my name. Vagrant Cloud always puts the username as a prefix on the boxes.\r\n\r\nI don't think we want to manage these under an Ansible umbrella and it was something I've been doing in my spare time.",
        "createdAt" : "2017-12-05T01:01:26Z",
        "updatedAt" : "2017-12-06T22:40:52Z",
        "lastEditedBy" : "7c547162-2334-4e33-a627-e146840da9ec",
        "tags" : [
        ]
      }
    ],
    "commit" : "059ae3420921e518ac2b6a383c1649fdadd6bd57",
    "line" : 70,
    "diffHunk" : "@@ -1,1 +81,85 @@images can be used:\n\n- `jborean93/WindowsServer2008-x86 <https://app.vagrantup.com/jborean93/boxes/WindowsServer2008-x86>`_\n- `jborean93/WindowsServer2008-x64 <https://app.vagrantup.com/jborean93/boxes/WindowsServer2008-x64>`_\n- `jborean93/WindowsServer2008R2 <https://app.vagrantup.com/jborean93/boxes/WindowsServer2008R2>`_"
  },
  {
    "id" : "19383eaa-4d3b-40f9-a994-f0fe42f14a89",
    "prId" : 44705,
    "prUrl" : "https://github.com/ansible/ansible/pull/44705#pullrequestreview-172250430",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "95787b3a-d9e0-4899-adcb-a5f03c17ebdd",
        "parentId" : null,
        "authorId" : "0d301bd1-6b47-409f-ac92-439b799b2375",
        "body" : "This bit should move up above lines 277-279 - otherwise we're telling people about referencing other C# utilities when they don't know C# utilities are possible . . . ",
        "createdAt" : "2018-11-06T14:20:38Z",
        "updatedAt" : "2018-11-06T21:59:33Z",
        "lastEditedBy" : "0d301bd1-6b47-409f-ac92-439b799b2375",
        "tags" : [
        ]
      },
      {
        "id" : "88d9c11e-cb6f-4c09-a79d-1805d1c75439",
        "parentId" : "95787b3a-d9e0-4899-adcb-a5f03c17ebdd",
        "authorId" : "7c547162-2334-4e33-a627-e146840da9ec",
        "body" : "There's already a brief snippet around C# utils at https://github.com/ansible/ansible/pull/44705/files#diff-3caf171979d08135734172ec792f5820R176 which is above all this.",
        "createdAt" : "2018-11-06T21:52:03Z",
        "updatedAt" : "2018-11-06T21:59:33Z",
        "lastEditedBy" : "7c547162-2334-4e33-a627-e146840da9ec",
        "tags" : [
        ]
      }
    ],
    "commit" : "9ff30993e196aa792e92137d8861713f3eb40c0a",
    "line" : 103,
    "diffHunk" : "@@ -1,1 +294,298 @@This will import the module_util at ``./lib/ansible/module_utils/powershell/Ansible.ModuleUtils.Legacy.psm1``\nand enable calling all of its functions. As of Ansible 2.8, Windows module\nutils can also be written in C# and stored at ``lib/ansible/module_utils/csharp``.\nThese module_utils can be imported by adding the following line to a PowerShell\nmodule:"
  },
  {
    "id" : "af012f6e-3de1-42c2-bf53-638effd2129e",
    "prId" : 44705,
    "prUrl" : "https://github.com/ansible/ansible/pull/44705#pullrequestreview-172235439",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "97bcc30e-cd9e-4206-a343-efbfa1ad7718",
        "parentId" : null,
        "authorId" : "0d301bd1-6b47-409f-ac92-439b799b2375",
        "body" : "Are the parameters defined below specific to Windows modules? ",
        "createdAt" : "2018-11-06T14:21:24Z",
        "updatedAt" : "2018-11-06T21:59:33Z",
        "lastEditedBy" : "0d301bd1-6b47-409f-ac92-439b799b2375",
        "tags" : [
        ]
      },
      {
        "id" : "5de7c8b8-7eca-495a-938d-a3b80d8700f1",
        "parentId" : "97bcc30e-cd9e-4206-a343-efbfa1ad7718",
        "authorId" : "7c547162-2334-4e33-a627-e146840da9ec",
        "body" : "Not 100%, they are shared with basic.py but the structure is slightly different.",
        "createdAt" : "2018-11-06T21:14:02Z",
        "updatedAt" : "2018-11-06T21:59:33Z",
        "lastEditedBy" : "7c547162-2334-4e33-a627-e146840da9ec",
        "tags" : [
        ]
      }
    ],
    "commit" : "9ff30993e196aa792e92137d8861713f3eb40c0a",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +192,196 @@A slightly more advanced module is `win_uri <https://github.com/ansible/ansible/blob/devel/lib/ansible/modules/windows/win_uri.ps1>`_ which additionally shows how to use different parameter types (bool, str, int, list, dict, path) and a selection of choices for parameters, how to fail a module and how to handle exceptions.\n\nAs part of the new ``AnsibleModule`` wrapper, the input parameters are defined and validated based on an argument\nspec. The following options can be set at the root level of the argument spec:\n"
  },
  {
    "id" : "f401952d-8e8c-44d7-92c8-67cb28f7a1f9",
    "prId" : 44705,
    "prUrl" : "https://github.com/ansible/ansible/pull/44705#pullrequestreview-172236565",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "14b3715c-2e10-4418-a614-ee9461b194fa",
        "parentId" : null,
        "authorId" : "0d301bd1-6b47-409f-ac92-439b799b2375",
        "body" : "Ah, this answers my question above - C# module utils are not replacing the PowerShell module utils, just adding to them. Would a developer choose only one, or could s/he use both?",
        "createdAt" : "2018-11-06T14:25:07Z",
        "updatedAt" : "2018-11-06T21:59:33Z",
        "lastEditedBy" : "0d301bd1-6b47-409f-ac92-439b799b2375",
        "tags" : [
        ]
      },
      {
        "id" : "475fc92d-0dbb-46d5-9d80-85bce7f25164",
        "parentId" : "14b3715c-2e10-4418-a614-ee9461b194fa",
        "authorId" : "7c547162-2334-4e33-a627-e146840da9ec",
        "body" : "I'll add a bit around the choices between the 2.",
        "createdAt" : "2018-11-06T21:16:51Z",
        "updatedAt" : "2018-11-06T21:59:33Z",
        "lastEditedBy" : "7c547162-2334-4e33-a627-e146840da9ec",
        "tags" : [
        ]
      }
    ],
    "commit" : "9ff30993e196aa792e92137d8861713f3eb40c0a",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +174,178 @@- Avoid using PSCustomObjects unless necessary\n- Look for common functions in ``./lib/ansible/module_utils/powershell/`` and use the code there instead of duplicating work. These can be imported by adding the line ``#Requires -Module *`` where * is the filename to import, and will be automatically included with the module code sent to the Windows target when run via Ansible\n- As well as PowerShell module utils, C# module utils are stored in ``./lib/ansible/module_utils/csharp/`` and are automatically imported in a module execution if the line ``#AnsibleRequires -CSharpUtil *`` is present\n- C# and PowerShell module utils achieve the same goal but C# allows a developer to implement low level tasks, such as calling the Win32 API, and can be faster in some cases\n- Ensure the code runs under Powershell v3 and higher on Windows Server 2008 and higher; if higher minimum Powershell or OS versions are required, ensure the documentation reflects this clearly"
  },
  {
    "id" : "4f36fc3b-93c5-4cdd-b0e5-e7d2f1ffa012",
    "prId" : 44705,
    "prUrl" : "https://github.com/ansible/ansible/pull/44705#pullrequestreview-172235950",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f314835c-6c63-4197-8a2b-5adcdfc4269a",
        "parentId" : null,
        "authorId" : "0d301bd1-6b47-409f-ac92-439b799b2375",
        "body" : "These are comprehensive and helpful. Adding examples would make them even better. Could we add examples, or link to an existing Windows module that uses all or most of these options?",
        "createdAt" : "2018-11-06T14:26:37Z",
        "updatedAt" : "2018-11-06T21:59:33Z",
        "lastEditedBy" : "0d301bd1-6b47-409f-ac92-439b799b2375",
        "tags" : [
        ]
      },
      {
        "id" : "4d1773bc-31da-4d8d-af9e-c28bb81508a8",
        "parentId" : "f314835c-6c63-4197-8a2b-5adcdfc4269a",
        "authorId" : "7c547162-2334-4e33-a627-e146840da9ec",
        "body" : "Currently not all of these are used, I've just changed a few modules to use the new framework. The win_environment and win_uri module are linked in this doc as examples but as time goes on we will have more to reference to.",
        "createdAt" : "2018-11-06T21:15:17Z",
        "updatedAt" : "2018-11-06T21:59:33Z",
        "lastEditedBy" : "7c547162-2334-4e33-a627-e146840da9ec",
        "tags" : [
        ]
      }
    ],
    "commit" : "9ff30993e196aa792e92137d8861713f3eb40c0a",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +195,199 @@spec. The following options can be set at the root level of the argument spec:\n\n- ``mutually_exclusive``: A list of lists, where the inner list contains module options that cannot be set together\n- ``no_log``: Stops the module from emitting any logs to the Windows Event log\n- ``options``: A dictionary where the key is the module option and the value is the spec for that option"
  }
]