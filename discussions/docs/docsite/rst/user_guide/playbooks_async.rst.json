[
  {
    "id" : "7f6abf56-cbdd-4731-ba41-f37b5e447ba1",
    "prId" : 65474,
    "prUrl" : "https://github.com/ansible/ansible/pull/65474#pullrequestreview-327139944",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "19986a0f-ae6b-4913-981c-ad2ec7a32539",
        "parentId" : null,
        "authorId" : "659587dc-b401-4c91-aa40-a8a932100545",
        "body" : "Couple of comments here on async and playbooks.  \r\n\r\n- Would it be better to describe `async` only first (poll = 0) as that is closest to async ahoc option? Seems like with the poll > 0, it's not async anymore, it's just a way to extend the timeout...\r\n\r\n-  Should the title of this section be 'run tasks asynchronously' to match the adhoc title? Currently the title is different from the example intro here.\r\n",
        "createdAt" : "2019-12-03T21:12:09Z",
        "updatedAt" : "2019-12-12T17:43:10Z",
        "lastEditedBy" : "659587dc-b401-4c91-aa40-a8a932100545",
        "tags" : [
        ]
      },
      {
        "id" : "418419f1-99b2-45f0-90b3-5503851e65a8",
        "parentId" : "19986a0f-ae6b-4913-981c-ad2ec7a32539",
        "authorId" : "0d301bd1-6b47-409f-ac92-439b799b2375",
        "body" : "I think extending the timeout is a more common use case than running multiple tasks concurrently, so keeping it closer to the top seems useful. \r\n\r\nIf I've understood the functionality correctly, with `poll = 5` Ansible closes the connection, then re-opens it to check for results every five seconds, instead of holding the connection open. So the behavior is asynchronous, even though it isn't running multiple tasks in parallel.\r\n\r\nGood point about the titles. I'll play with some options there.",
        "createdAt" : "2019-12-04T20:43:29Z",
        "updatedAt" : "2019-12-12T17:43:10Z",
        "lastEditedBy" : "0d301bd1-6b47-409f-ac92-439b799b2375",
        "tags" : [
        ]
      }
    ],
    "commit" : "d08f1559bac04ff2d48bc58a260f020a5370e5f6",
    "line" : 104,
    "diffHunk" : "@@ -1,1 +69,73 @@\nTo run a playbook task asynchronously::\n\n    ---\n"
  }
]