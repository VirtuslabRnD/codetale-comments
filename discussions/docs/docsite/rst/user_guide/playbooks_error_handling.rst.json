[
  {
    "id" : "a832ef7e-d462-41bd-9cec-3a35cd57086a",
    "prId" : 55941,
    "prUrl" : "https://github.com/ansible/ansible/pull/55941#pullrequestreview-232473359",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0f1204ac-8725-4bfb-8edd-de99371a7bf4",
        "parentId" : null,
        "authorId" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "body" : "i would separate the 'Ansible joins' and also prefix with 'As for all conditionals in Ansible' since this is a property of conditionals in general.",
        "createdAt" : "2019-04-30T19:53:46Z",
        "updatedAt" : "2019-05-01T12:23:46Z",
        "lastEditedBy" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "tags" : [
        ]
      },
      {
        "id" : "d08b9fe3-7a03-4a4e-826b-33acd42821c1",
        "parentId" : "0f1204ac-8725-4bfb-8edd-de99371a7bf4",
        "authorId" : "0d301bd1-6b47-409f-ac92-439b799b2375",
        "body" : "Done. Thanks for the tip. ",
        "createdAt" : "2019-05-01T01:31:14Z",
        "updatedAt" : "2019-05-01T12:23:46Z",
        "lastEditedBy" : "0d301bd1-6b47-409f-ac92-439b799b2375",
        "tags" : [
        ]
      }
    ],
    "commit" : "f26f94d9c543cd18f14860e71f4fe7c7e6e8fe46",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +65,69 @@\nAnsible lets you define what \"failure\" means in each task using the ``failed_when`` conditional. As with all conditionals in Ansible, lists of multiple ``failed_when`` conditions are joined with an implicit ``and``, meaning the task only fails when *all* conditions are met. If you want to trigger a failure when any of the conditions is met, you must define the conditions in a string with an explicit ``or`` operator.\n\nYou may check for failure by searching for a word or phrase in the output of a command::\n"
  },
  {
    "id" : "08a30360-87d7-446d-b225-ec8816642be7",
    "prId" : 55941,
    "prUrl" : "https://github.com/ansible/ansible/pull/55941#pullrequestreview-232473424",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c0d721ab-d7e5-4fe1-97ae-6e8abb359182",
        "parentId" : null,
        "authorId" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "body" : "probably we also want to add 'multiline' example for those that have very long conditionals",
        "createdAt" : "2019-04-30T19:55:29Z",
        "updatedAt" : "2019-05-01T12:23:46Z",
        "lastEditedBy" : "30fc1801-f8f1-4cc4-9690-e31e203f4f6d",
        "tags" : [
        ]
      },
      {
        "id" : "6cc3cfb9-222c-4a4c-81cc-664a05f06c24",
        "parentId" : "c0d721ab-d7e5-4fe1-97ae-6e8abb359182",
        "authorId" : "0d301bd1-6b47-409f-ac92-439b799b2375",
        "body" : "I'm going to file that under \"future work\" and call this PR good enough for now. ",
        "createdAt" : "2019-05-01T01:31:50Z",
        "updatedAt" : "2019-05-01T12:23:46Z",
        "lastEditedBy" : "0d301bd1-6b47-409f-ac92-439b799b2375",
        "tags" : [
        ]
      }
    ],
    "commit" : "f26f94d9c543cd18f14860e71f4fe7c7e6e8fe46",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +103,107 @@ If you want the task to fail when only one condition is satisfied, change the ``failed_when`` definition to::\n\n      failed_when: result.rc == 0 or \"No such\" not in result.stdout\n\n.. _override_the_changed_result:"
  }
]