[
  {
    "id" : "9e7d2bf7-eac2-4cda-a6b9-89e509ae4af0",
    "prId" : 53755,
    "prUrl" : "https://github.com/ansible/ansible/pull/53755#pullrequestreview-216302341",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ef837bf0-dee3-4a51-a1be-4984d6caca58",
        "parentId" : null,
        "authorId" : "0d301bd1-6b47-409f-ac92-439b799b2375",
        "body" : "Here it's `nxos` . . . ",
        "createdAt" : "2019-03-19T17:19:50Z",
        "updatedAt" : "2019-03-22T18:53:37Z",
        "lastEditedBy" : "0d301bd1-6b47-409f-ac92-439b799b2375",
        "tags" : [
        ]
      }
    ],
    "commit" : "0edea648a693825c3ea6cd1f153e1d18c0a3ff6d",
    "line" : 211,
    "diffHunk" : "@@ -1,1 +347,351 @@\n  - name: Run Cisco NXOS command\n    nxos_command:\n      commands: show ip int br\n    when: ansible_network_os == 'nxos'"
  },
  {
    "id" : "0cf6c60a-41a1-45a4-83ba-6300aea8d4a0",
    "prId" : 53755,
    "prUrl" : "https://github.com/ansible/ansible/pull/53755#pullrequestreview-216807922",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "75471024-291c-4d0b-b4fc-68bf35ff8d1e",
        "parentId" : null,
        "authorId" : "a592774c-8568-4229-8c0e-31fbe6d00e14",
        "body" : "I actually like the links to the other pages in case they aren't familiar with YAML.",
        "createdAt" : "2019-03-20T00:33:04Z",
        "updatedAt" : "2019-03-22T18:53:37Z",
        "lastEditedBy" : "a592774c-8568-4229-8c0e-31fbe6d00e14",
        "tags" : [
        ]
      },
      {
        "id" : "30d0cacc-dfa2-4978-b80b-65338360c55a",
        "parentId" : "75471024-291c-4d0b-b4fc-68bf35ff8d1e",
        "authorId" : "659587dc-b401-4c91-aa40-a8a932100545",
        "body" : "thanks for the catch! didn't noticed I'd deleted a link\r\n",
        "createdAt" : "2019-03-20T14:48:58Z",
        "updatedAt" : "2019-03-22T18:53:37Z",
        "lastEditedBy" : "659587dc-b401-4c91-aa40-a8a932100545",
        "tags" : [
        ]
      },
      {
        "id" : "e676bc22-1fe3-45d0-8d1a-3096f8442e73",
        "parentId" : "75471024-291c-4d0b-b4fc-68bf35ff8d1e",
        "authorId" : "659587dc-b401-4c91-aa40-a8a932100545",
        "body" : "ooph.. the link is there in the doc snippet below this.",
        "createdAt" : "2019-03-20T15:42:50Z",
        "updatedAt" : "2019-03-22T18:53:37Z",
        "lastEditedBy" : "659587dc-b401-4c91-aa40-a8a932100545",
        "tags" : [
        ]
      }
    ],
    "commit" : "0edea648a693825c3ea6cd1f153e1d18c0a3ff6d",
    "line" : 37,
    "diffHunk" : "@@ -1,1 +17,21 @@* **Ansible 2.5** (or higher) installed. See :ref:`intro_installation_guide` for more information.\n* One or more network devices that are compatible with Ansible.\n* Basic understanding of YAML :ref:`yaml_syntax`.\n* Basic understanding of Jinja2 templates. See :ref:`playbooks_templating` for more information.\n* Basic Linux command line use."
  },
  {
    "id" : "57fa9122-bf64-4a79-afa7-5a07a50686f8",
    "prId" : 53755,
    "prUrl" : "https://github.com/ansible/ansible/pull/53755#pullrequestreview-216482900",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3f6e1e15-32d5-4469-8bfa-3af879803064",
        "parentId" : null,
        "authorId" : "a592774c-8568-4229-8c0e-31fbe6d00e14",
        "body" : "The mention of Ansible Vault here is awkward. It implies this example is what a file encrypted with Vault looks like. Instead, move it to after the example, or just wait for the Vault section altogether.",
        "createdAt" : "2019-03-20T00:38:05Z",
        "updatedAt" : "2019-03-22T18:53:37Z",
        "lastEditedBy" : "a592774c-8568-4229-8c0e-31fbe6d00e14",
        "tags" : [
        ]
      },
      {
        "id" : "8547a75e-5b32-4752-83e1-003f982c8dcd",
        "parentId" : "3f6e1e15-32d5-4469-8bfa-3af879803064",
        "authorId" : "a592774c-8568-4229-8c0e-31fbe6d00e14",
        "body" : "I take that back, I misread what you meant. This is fine.",
        "createdAt" : "2019-03-20T00:39:48Z",
        "updatedAt" : "2019-03-22T18:53:37Z",
        "lastEditedBy" : "a592774c-8568-4229-8c0e-31fbe6d00e14",
        "tags" : [
        ]
      }
    ],
    "commit" : "0edea648a693825c3ea6cd1f153e1d18c0a3ff6d",
    "line" : 72,
    "diffHunk" : "@@ -1,1 +30,34 @@In our example, the inventory file defines the groups ``eos``, ``ios``, ``vyos`` and a \"group of groups\" called ``switches``. Further details about subgroups and inventory files can be found in the :ref:`Ansible inventory Group documentation <subgroups>`.\n\nBecause Ansible is a flexible tool, there are a number of ways to specify connection information and credentials. We recommend using the ``[my_group:vars]`` capability in your inventory file. Here's what it would look like if you specified your SSH passwords (encrypted with Ansible Vault) among your variables:\n\n.. code-block:: ini"
  },
  {
    "id" : "a57ffdf5-50db-40ce-be98-fab5d4d88fd1",
    "prId" : 53755,
    "prUrl" : "https://github.com/ansible/ansible/pull/53755#pullrequestreview-217924032",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b339ea23-42ed-4e29-88f9-64b5d25bfac4",
        "parentId" : null,
        "authorId" : "7a1e5757-684b-4684-bcab-c114385bca28",
        "body" : "Probably can also add an example to work with multiple prompts. Since currently, only `cli_command` support multi prompt scenario will be good to have in the doc",
        "createdAt" : "2019-03-20T13:29:14Z",
        "updatedAt" : "2019-03-22T18:53:37Z",
        "lastEditedBy" : "7a1e5757-684b-4684-bcab-c114385bca28",
        "tags" : [
        ]
      },
      {
        "id" : "8c3a1cc6-5a0b-4b01-87dc-4c3bc91a6a85",
        "parentId" : "b339ea23-42ed-4e29-88f9-64b5d25bfac4",
        "authorId" : "659587dc-b401-4c91-aa40-a8a932100545",
        "body" : "@ganeshrn can you point me to an example of this that I can add here?",
        "createdAt" : "2019-03-20T15:44:09Z",
        "updatedAt" : "2019-03-22T18:53:37Z",
        "lastEditedBy" : "659587dc-b401-4c91-aa40-a8a932100545",
        "tags" : [
        ]
      },
      {
        "id" : "4fa02571-c398-446d-8092-1b0f88696f8c",
        "parentId" : "b339ea23-42ed-4e29-88f9-64b5d25bfac4",
        "authorId" : "659587dc-b401-4c91-aa40-a8a932100545",
        "body" : "@ganeshrn ok found the example in the `cli_command` module examples so I'll add a pointer to that from here rather than repeat it.",
        "createdAt" : "2019-03-21T14:42:30Z",
        "updatedAt" : "2019-03-22T18:53:37Z",
        "lastEditedBy" : "659587dc-b401-4c91-aa40-a8a932100545",
        "tags" : [
        ]
      },
      {
        "id" : "20690a34-209c-4b04-bf73-8f6a930d41f0",
        "parentId" : "b339ea23-42ed-4e29-88f9-64b5d25bfac4",
        "authorId" : "03414708-c2dd-47ff-98b5-76f6e033ea52",
        "body" : "Here is an example for changing the password on a Juniper Junos device->\r\n\r\n```\r\n- name: CHANGE PASSWORD TO WORKSHOP DEFAULT\r\n  cli_command:\r\n    command: \"{{item}}\"\r\n    prompt:\r\n      - \"New password\"\r\n      - \"Retype new password\"\r\n    answer:\r\n      - \"mypassword123\"\r\n      - \"mypassword123\"\r\n    check_all: True\r\n  loop:\r\n    - \"configure\"\r\n    - \"rollback\"\r\n    - \"set system root-authentication plain-text-password\"\r\n    - \"commit\"\r\n```",
        "createdAt" : "2019-03-21T15:04:42Z",
        "updatedAt" : "2019-03-22T18:53:37Z",
        "lastEditedBy" : "03414708-c2dd-47ff-98b5-76f6e033ea52",
        "tags" : [
        ]
      },
      {
        "id" : "9dfceb48-b6cd-4d02-8169-1ed2d6176a19",
        "parentId" : "b339ea23-42ed-4e29-88f9-64b5d25bfac4",
        "authorId" : "659587dc-b401-4c91-aa40-a8a932100545",
        "body" : "added. thanks!",
        "createdAt" : "2019-03-22T18:54:30Z",
        "updatedAt" : "2019-03-22T18:54:30Z",
        "lastEditedBy" : "659587dc-b401-4c91-aa40-a8a932100545",
        "tags" : [
        ]
      }
    ],
    "commit" : "0edea648a693825c3ea6cd1f153e1d18c0a3ff6d",
    "line" : 280,
    "diffHunk" : "@@ -1,1 +416,420 @@\n    tasks:\n      - name: Run show command\n        cli_command:\n          command: \"{{show_interfaces}}\""
  },
  {
    "id" : "865785e0-c95c-45d6-a9c9-8b6ae85951e3",
    "prId" : 53755,
    "prUrl" : "https://github.com/ansible/ansible/pull/53755#pullrequestreview-217299266",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "db0a4264-4b6c-47aa-92b4-dd8d17107b17",
        "parentId" : null,
        "authorId" : "03414708-c2dd-47ff-98b5-76f6e033ea52",
        "body" : "I might just put the command, check out our Red Hat Ansible Automation Technical Deck for some really easy Juniper and Cisco examples, the way I am showing it in the repo might be hard to document b/c it requires group_vars and groups to be setup by platform type",
        "createdAt" : "2019-03-21T15:06:33Z",
        "updatedAt" : "2019-03-22T18:53:37Z",
        "lastEditedBy" : "03414708-c2dd-47ff-98b5-76f6e033ea52",
        "tags" : [
        ]
      }
    ],
    "commit" : "0edea648a693825c3ea6cd1f153e1d18c0a3ff6d",
    "line" : 280,
    "diffHunk" : "@@ -1,1 +416,420 @@\n    tasks:\n      - name: Run show command\n        cli_command:\n          command: \"{{show_interfaces}}\""
  }
]