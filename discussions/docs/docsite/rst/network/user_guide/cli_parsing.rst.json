[
  {
    "id" : "e998bd8f-aa97-42bd-b9e5-0593365292dd",
    "prId" : 71497,
    "prUrl" : "https://github.com/ansible/ansible/pull/71497#pullrequestreview-492934765",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "66f8fee9-4972-4a4a-be7d-8191d65ddd11",
        "parentId" : null,
        "authorId" : "0d301bd1-6b47-409f-ac92-439b799b2375",
        "body" : "I think I might put this paragraph (the one below) at the top of the page as an intro, above the local TOC. It tells people why they want this feature. ",
        "createdAt" : "2020-09-21T16:47:08Z",
        "updatedAt" : "2020-09-22T16:41:32Z",
        "lastEditedBy" : "0d301bd1-6b47-409f-ac92-439b799b2375",
        "tags" : [
        ]
      },
      {
        "id" : "9a1de93d-4e46-45e1-84fd-eeae3673c92e",
        "parentId" : "66f8fee9-4972-4a4a-be7d-8191d65ddd11",
        "authorId" : "659587dc-b401-4c91-aa40-a8a932100545",
        "body" : "put part of it up there instead of the current text to keep the before toc text short but helpful  (and improve the google description, which should pull that first sentence or two in search results)",
        "createdAt" : "2020-09-21T19:57:09Z",
        "updatedAt" : "2020-09-22T16:41:32Z",
        "lastEditedBy" : "659587dc-b401-4c91-aa40-a8a932100545",
        "tags" : [
        ]
      }
    ],
    "commit" : "4dc1cd906cfb198fc41529c9071b0d32291bd02f",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +17,21 @@The `ansible.netcommon <https://galaxy.ansible.com/ansible/netcommon>`_ collection version 1.2.0 or later  includes the :ref:`cli_parse <ansible_collections.ansible.netcommon.cli_parse_module>` module that can run CLI commands and parse the semi-structured text output. You can use the ``cli_parse`` module on a device, host, or platform that only supports a command-line interface and the commands issued return semi-structured text. The ``cli_parse`` module can either run a CLI command on a device and return a parsed result or can simply parse any text document. The ``cli_parse`` module includes cli_parser plugins to interface with a variety of parsing engines.\n\nWhy parse the text?\n--------------------\n"
  },
  {
    "id" : "430cd36b-ffcd-4c49-bc85-7bf7a738df4e",
    "prId" : 71497,
    "prUrl" : "https://github.com/ansible/ansible/pull/71497#pullrequestreview-492788813",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ef9d9d1a-82ef-49b2-b370-b56859d5c6ce",
        "parentId" : null,
        "authorId" : "0d301bd1-6b47-409f-ac92-439b799b2375",
        "body" : "This is a great comparison - I might mention this higher up in the doc as well, since consolidating two tasks into one is likely a big selling point for this approach. ",
        "createdAt" : "2020-09-21T16:57:14Z",
        "updatedAt" : "2020-09-22T16:41:32Z",
        "lastEditedBy" : "0d301bd1-6b47-409f-ac92-439b799b2375",
        "tags" : [
        ]
      }
    ],
    "commit" : "4dc1cd906cfb198fc41529c9071b0d32291bd02f",
    "line" : 589,
    "diffHunk" : "@@ -1,1 +587,591 @@-----------------\n\nAlthough Ansible contains a number of plugins that can convert XML to Ansible native data structures, the``cli_parse`` module runs the command on devices that return XML and returns the converted data in a single task.\n\nThis example task runs the ``show interface`` command and parses the output as XML:"
  }
]