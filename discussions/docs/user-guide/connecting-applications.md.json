[
  {
    "id" : "5b29ef4a-813d-40c7-aa26-3417e939d688",
    "prId" : 21145,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "86377696-6364-428b-952e-8daf4e57a7b9",
        "parentId" : null,
        "authorId" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "body" : "Can we just modify the kubectl client to print something like -check describe output- for the status.Ingress column? Can we detect the lb is on aws? \n",
        "createdAt" : "2016-02-17T01:59:47Z",
        "updatedAt" : "2016-02-17T02:00:08Z",
        "lastEditedBy" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "tags" : [
        ]
      },
      {
        "id" : "4885e641-a5cb-4650-8395-35b681252b02",
        "parentId" : "86377696-6364-428b-952e-8daf4e57a7b9",
        "authorId" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "body" : "We could, except that it would then surprise anyone grepping the output.  Also I'm not sure I have time to do it in 1.2.\n",
        "createdAt" : "2016-02-17T02:59:59Z",
        "updatedAt" : "2016-02-17T02:59:59Z",
        "lastEditedBy" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "tags" : [
        ]
      }
    ],
    "commit" : "c081e29a5501ffef872705bdfe967bbcfa541718",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +429,433 @@hostname, not an IP.  It's too long to fit in the standard `kubectl get svc`\noutput, in fact, so you'll need to do `kubectl describe service nginxsvc` to\nsee it.  You'll see something like this:\n\n```"
  },
  {
    "id" : "ab47f66f-4347-48c0-be2f-c6d126a4a428",
    "prId" : 18983,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ede99c9e-a8bb-4e34-af99-1edd77995ed2",
        "parentId" : null,
        "authorId" : "d3750908-30a6-4a5f-9e5a-a3b1641b98f9",
        "body" : "Otherwise you get the error `arguments in resource/name form must have a single resource and name`.\n",
        "createdAt" : "2015-12-21T20:39:37Z",
        "updatedAt" : "2015-12-21T20:39:41Z",
        "lastEditedBy" : "d3750908-30a6-4a5f-9e5a-a3b1641b98f9",
        "tags" : [
        ]
      }
    ],
    "commit" : "ac80a09e2488f26940482189ec70d4a80c92734b",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +411,415 @@\n```console\n$ kubectl delete rc,svc -l app=nginx\n$ kubectl create -f ./nginx-app.yaml\n$ kubectl get svc nginxsvc"
  },
  {
    "id" : "aa4f2121-db28-4d1e-938b-b49961efc88b",
    "prId" : 11267,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2552a690-cc2d-49e6-9217-b667a6ecc57c",
        "parentId" : null,
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "cretificates -> certificates\n",
        "createdAt" : "2015-07-14T22:48:47Z",
        "updatedAt" : "2015-07-15T20:01:45Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      }
    ],
    "commit" : "5b3cd8fa233e32eca15e75ad64198221fbee6e01",
    "line" : null,
    "diffHunk" : "@@ -1,1 +209,213 @@Till now we have only accessed the nginx server from within the cluster. Before exposing the Service to the internet, you want to make sure the communication channel is secure. For this, you will need:\n* Self signed certificates for https (unless you already have an identitiy certificate)\n* An nginx server configured to use the cretificates\n* A [secret](secrets.md) that makes the certificates accessible to pods\n"
  },
  {
    "id" : "baee694f-5145-4cdb-86bd-11d58e12afb0",
    "prId" : 11072,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cea56800-977a-4696-95a9-14be4710b525",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "No mention of headless services?\n",
        "createdAt" : "2015-07-14T05:12:02Z",
        "updatedAt" : "2015-07-14T05:12:02Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "e3757d7b-3f43-4496-ac1f-77d9b65f8f48",
        "parentId" : "cea56800-977a-4696-95a9-14be4710b525",
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "I planned for that to go into a doc about \"advanced use cases\", along with setting up your own load balancer, importing services (nil selector), session affinity, and some non-service-related topics.\n",
        "createdAt" : "2015-07-14T05:16:15Z",
        "updatedAt" : "2015-07-14T05:16:15Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      }
    ],
    "commit" : "34cd952092335b64c8c35b521dd2bc85e95fd6d5",
    "line" : 52,
    "diffHunk" : "@@ -1,1 +50,54 @@So we have pods running nginx in a flat, cluster wide, address space. In theory, you could talk to these pods directly, but what happens when a node dies? The pods die with it, and the replication controller will create new ones, with different ips. This is the problem a Service solves.\n\nA Kubernetes Service is an abstraction which defines a logical set of Pods running somewhere in your cluster, that all provide the same functionality. When created, each Service is assigned a unique IP address (also called clusterIP). This address is tied to the lifespan of the Service, and will not change while the Service is alive. Pods can be configured to talk to the Service, and know that communication to the Service will be automatically load-balanced out to some pod that is a member of the Service ([why not use round robin dns?](../services.md#why-not-use-round-robin-dns)).\n\nYou can create a Service for your 2 nginx replicas with the following yaml:"
  },
  {
    "id" : "81f1595d-99d0-4b42-9553-33e4d3d17fc5",
    "prId" : 11072,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "938a0933-4d4f-4d85-9d4f-1446d97ec40b",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "This is wrong.  port is the abstract port on the Service.  targetPort is the port on the pods\n",
        "createdAt" : "2015-07-14T05:13:19Z",
        "updatedAt" : "2015-07-14T05:13:19Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "34cd952092335b64c8c35b521dd2bc85e95fd6d5",
    "line" : 67,
    "diffHunk" : "@@ -1,1 +65,69 @@    app: nginx\n```\nThis specification will create a Service which targets TCP port 80 on any Pod with the \"app=nginx\" label, and expose it on a targetPort (set to the `port` by default) that other pods can use to access the Service. Check your Service:\n```shell\n$ kubectl get svc"
  },
  {
    "id" : "64c27254-1791-4ec4-900b-867fd0731577",
    "prId" : 11072,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b9f47b12-cb21-406b-b2f8-bdb84b19db39",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "This is automatic now!\n",
        "createdAt" : "2015-07-14T05:15:07Z",
        "updatedAt" : "2015-07-14T05:15:07Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "9c816d5f-9cbc-43e1-8eea-86a81c7f85c9",
        "parentId" : "b9f47b12-cb21-406b-b2f8-bdb84b19db39",
        "authorId" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "body" : "It works out of the box, but it doesn't look like we removed the warnings https://github.com/GoogleCloudPlatform/kubernetes/blob/master/pkg/kubectl/cmd/create.go#L126\n",
        "createdAt" : "2015-07-14T18:18:27Z",
        "updatedAt" : "2015-07-14T18:18:27Z",
        "lastEditedBy" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "tags" : [
        ]
      },
      {
        "id" : "b3ed11d1-e9e2-4bd5-9990-306f077f2320",
        "parentId" : "b9f47b12-cb21-406b-b2f8-bdb84b19db39",
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "It also looks like we didn't update the documentation:\nhttps://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/services-firewalls.md\n",
        "createdAt" : "2015-07-14T18:27:53Z",
        "updatedAt" : "2015-07-14T18:27:53Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "5c3b9b5c-8b08-4ea3-8948-bce8848833fb",
        "parentId" : "b9f47b12-cb21-406b-b2f8-bdb84b19db39",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "Dagnabbit\n\nOn Tue, Jul 14, 2015 at 11:28 AM, Brian Grant notifications@github.com\nwrote:\n\n> In docs/user-guide/connecting-applications.md\n> https://github.com/GoogleCloudPlatform/kubernetes/pull/11072#discussion_r34601931\n> :\n> \n> > +```yaml\n> > +apiVersion: v1\n> > +kind: Service\n> > +metadata:\n> > -  name: nginxsvc\n> >   +spec:\n> > -  type: NodePort\n> > -  ports:\n> > -  - port: 80\n> > -    protocol: TCP\n> > -    targetPort: 80\n> > -  selector:\n> > -    app: nginx\n> >   +```\n> >   +\n> >   +If you have [firewall rules](../services-firewalls.md),  you will have to open the tcp port in the output of the kubectl command before you can access your Service:\n> \n> It also looks like we didn't update the documentation:\n> \n> https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/services-firewalls.md\n> \n> â€”\n> Reply to this email directly or view it on GitHub\n> https://github.com/GoogleCloudPlatform/kubernetes/pull/11072/files#r34601931\n> .\n",
        "createdAt" : "2015-07-14T18:32:48Z",
        "updatedAt" : "2015-07-14T18:32:48Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "34cd952092335b64c8c35b521dd2bc85e95fd6d5",
    "line" : 166,
    "diffHunk" : "@@ -1,1 +164,168 @@```\n\nIf you have [firewall rules](../services-firewalls.md),  you will have to open the tcp port in the output of the kubectl command before you can access your Service:\n```shell\n$ kubectl delete svc nginxsvc"
  },
  {
    "id" : "88c19735-7e84-4377-bcdb-53f9c3b0e2d0",
    "prId" : 11072,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f4ef8b77-87ca-439c-9da7-9a6f68d68d8e",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "You won't get these warning messages any more\n",
        "createdAt" : "2015-07-14T05:15:48Z",
        "updatedAt" : "2015-07-14T05:15:48Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "34cd952092335b64c8c35b521dd2bc85e95fd6d5",
    "line" : 195,
    "diffHunk" : "@@ -1,1 +193,197 @@$ kubectl delete svc nginxsvc\n$ kubectl create -f nginxsvc.yaml\nAn external load-balanced service was created.  On many platforms (e.g. Google Compute Engine),\nyou will also need to explicitly open a Firewall rule for the service port(s) (tcp:80) to serve traffic.\n"
  }
]