[
  {
    "id" : "49a04cf6-7719-4196-ac49-b9c75aa6993c",
    "prId" : 17574,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1888062c-b585-4d41-95b5-33d2f66c7221",
        "parentId" : null,
        "authorId" : "bb4cf218-381a-40ad-ac0c-0c2c66685cd4",
        "body" : "@gmarek Made the comments explicit. PTAL.\n",
        "createdAt" : "2015-11-20T20:02:19Z",
        "updatedAt" : "2015-11-20T20:54:14Z",
        "lastEditedBy" : "bb4cf218-381a-40ad-ac0c-0c2c66685cd4",
        "tags" : [
        ]
      }
    ],
    "commit" : "36104df7cfab0a8843c6551daff11ed9794873e6",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +105,109 @@\nBy default, at the end of each test, it will delete namespaces and everything under it (e.g. events, replication controllers) on Kubemark master, which takes a lot of time.\nSuch work aren't needed in most cases: if you delete your Kubemark cluster after running `run-e2e-tests.sh`;\nyou don't care about namespace deletion performance, specifically related to etcd; etc.\nThere is a flag that enables you to avoid namespace deletion: `--delete-namespace=false`."
  },
  {
    "id" : "05cf5d87-b85c-4cbb-9a6e-d319d81bc492",
    "prId" : 15466,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "722ee8a9-4b3a-4163-a29f-d445cb3abbc7",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Since you are copying different things to master machine anyway, can you please copy this script too?\n",
        "createdAt" : "2015-10-13T14:48:36Z",
        "updatedAt" : "2015-11-18T14:21:26Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "3e68e2ff-30f9-417e-bcfe-ec25c8b9c6a7",
        "parentId" : "722ee8a9-4b3a-4163-a29f-d445cb3abbc7",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "And possibly run it there - then you will be able to just log in and start using kubectl - it would be very convenient.\n",
        "createdAt" : "2015-10-13T14:49:14Z",
        "updatedAt" : "2015-11-18T14:21:26Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "4b87ecfb-469d-4cff-8558-5e56f75c5594",
        "parentId" : "722ee8a9-4b3a-4163-a29f-d445cb3abbc7",
        "authorId" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "body" : "The script is put in the master - the problem with running it automatically is that it's not trivial way to do it in a future-proof way. We're downloading a script, that downloads another script which installs gcloud. The second script does have `--no-prompts` (or sth like that) flag, but AFAICT there's no way to easily inject it to the first one. This means that the user needs to press enter few times.\n",
        "createdAt" : "2015-10-15T13:13:13Z",
        "updatedAt" : "2015-11-18T14:21:26Z",
        "lastEditedBy" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "tags" : [
        ]
      }
    ],
    "commit" : "b4e7495d471537620f192a269e6df18c3d6dbd05",
    "line" : null,
    "diffHunk" : "@@ -1,1 +113,117 @@i.e. `/var/logs/` directory. Because binaries are not supervised by anything they won't be restarted in the case of a crash.\n\nTo help you with debugging from inside the cluster startup script puts a `~/configure-kubectl.sh` script on the master. It downloads `gcloud` and `kubectl` tool and configures\nkubectl to work on unsecured master port (useful if there are problems with security). After the script is run you can use kubectl command from the master machine to play with\nthe cluster."
  },
  {
    "id" : "99c457f4-443e-41b9-91ca-fa27119cff6f",
    "prId" : 15466,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "84784700-21de-44a4-acda-bd44d3475124",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "I think that what would be useful here is to give exact commands that user can copy and paste (just changing the IP address in it).\n",
        "createdAt" : "2015-10-13T14:53:15Z",
        "updatedAt" : "2015-11-18T14:21:26Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "af7f6b72-8f81-420a-a839-aaaf07a8ec86",
        "parentId" : "84784700-21de-44a4-acda-bd44d3475124",
        "authorId" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "body" : "Done.\n",
        "createdAt" : "2015-10-15T13:22:23Z",
        "updatedAt" : "2015-11-18T14:21:26Z",
        "lastEditedBy" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "tags" : [
        ]
      }
    ],
    "commit" : "b4e7495d471537620f192a269e6df18c3d6dbd05",
    "line" : null,
    "diffHunk" : "@@ -1,1 +122,126 @@\nWhen you have a Pod name you can use `kubectl logs` on external cluster to get logs, or use a `kubectl describe pod` call to find an external Node on which this particular\nHollowNode is running so you can ssh to it.\n\nE.g. you want to see the logs of HollowKubelet on which pod `my-pod` is running. To do so you can execute:"
  }
]