[
  {
    "id" : "b51ac37d-8100-41b4-85a9-314450b044fc",
    "prId" : 32315,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6cfde9f9-1ebb-4fb1-befb-8f11460f4e6c",
        "parentId" : null,
        "authorId" : "ad0a3561-db60-47a9-b82f-ac613199f968",
        "body" : "@lavalamp is this a good example to cargo-cult?\n",
        "createdAt" : "2016-09-09T18:08:37Z",
        "updatedAt" : "2016-09-09T20:03:10Z",
        "lastEditedBy" : "ad0a3561-db60-47a9-b82f-ac613199f968",
        "tags" : [
        ]
      },
      {
        "id" : "0be711c2-78a4-4e00-9b8b-906e3c80d7e8",
        "parentId" : "6cfde9f9-1ebb-4fb1-befb-8f11460f4e6c",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "open to pointing to a different one, as long as it's one with the desired suffix\n\nchecked this group in particular, and opened https://github.com/kubernetes/kubernetes/pull/32409 to make sure it was added to the test and doc generation scripts as an example\n",
        "createdAt" : "2016-09-09T20:04:32Z",
        "updatedAt" : "2016-09-09T20:04:32Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "05d1325b-d839-4536-adde-8c1ab8cf6a85",
        "parentId" : "6cfde9f9-1ebb-4fb1-befb-8f11460f4e6c",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "`batch` is probably best, if my other change ever merges, but anything other than `pkg/api` is fine.\n",
        "createdAt" : "2016-09-10T00:12:45Z",
        "updatedAt" : "2016-09-10T00:12:45Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "5e74ed03-5d0c-40bd-be19-79a1c19f36fb",
        "parentId" : "6cfde9f9-1ebb-4fb1-befb-8f11460f4e6c",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "We should pick one with the right suffix for copy pasta purposes\n",
        "createdAt" : "2016-09-10T00:29:01Z",
        "updatedAt" : "2016-09-10T00:29:02Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "620cc66ead8256ad27fceb61d5d37e6d6c0c3efc",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +520,524 @@\nAt the moment, you'll have to make a new directory under `pkg/apis/`; copy the\ndirectory structure from `pkg/apis/authentication`. Add the new group/version to all\nof the `hack/{verify,update}-generated-{deep-copy,conversions,swagger}.sh` files\nin the appropriate places--it should just require adding your new group/version"
  },
  {
    "id" : "039bb208-6b38-4028-b75e-8ca3c67b5c7b",
    "prId" : 15832,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "abfec032-b050-4cc8-841f-7486189f4f54",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "I would like to begin starting new features in their own group to begin with.\n",
        "createdAt" : "2015-10-19T17:31:02Z",
        "updatedAt" : "2015-10-19T17:38:02Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "4a4831906c769197785c7b603da14097f0f7fff0",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +294,298 @@\nIn short, the expected API evolution is as follows:\n* `extensions/v1alpha1` ->\n* `newapigroup/v1alpha1` -> ... -> `newapigroup/v1alphaN` ->\n* `newapigroup/v1beta1` -> ... -> `newapigroup/v1betaN` ->"
  },
  {
    "id" : "a1b2df6a-2c98-453e-b46e-714e346816c9",
    "prId" : 15339,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "62e640a4-ca9f-4ef3-a906-e6f85c274c7d",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "s/with/which/\n",
        "createdAt" : "2015-10-14T16:32:30Z",
        "updatedAt" : "2015-10-14T16:32:30Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "ca6c950b897c53f5b5cd4875ce6683f51b781830",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +560,564 @@    or semantics change in an [incompatible way](#on-compatibility)\n  - Cluster Reliability: because the feature is relatively new, and may lack complete end-to-end\n    tests, enabling the feature via a flag might expose bugs with destabilize the cluster (e.g. a\n    bug in a control loop might rapidly create excessive numbers of object, exhausting API storage).\n  - Support: there is *no commitment* from the project to complete the feature; the feature may be"
  },
  {
    "id" : "06e8dc24-3e49-4d64-9ff4-3d4aa9db4478",
    "prId" : 15339,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "66052388-a171-4081-9e2c-6fb30aad3584",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "s/documentedr/documented/\n",
        "createdAt" : "2015-10-14T16:33:06Z",
        "updatedAt" : "2015-10-14T16:33:06Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "ca6c950b897c53f5b5cd4875ce6683f51b781830",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +574,578 @@    during beta may frequently turn up API issues not thought of during review\n  - Upgradeability: the object schema and semantics may change in a later software release; when\n    this happens, an upgrade path will be documentedr; in some cases, objects will be automatically\n    converted to the new version; in other cases, a manual upgrade may be necessary;  a manual\n    upgrade may require downtime for anything relying on the new feature, and may require"
  },
  {
    "id" : "46b6a292-eddc-4537-903e-0d63e75a521b",
    "prId" : 5459,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "227c7ca6-7c95-4e04-bbd5-6361fc395351",
        "parentId" : null,
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Sigh\n",
        "createdAt" : "2015-03-13T20:53:13Z",
        "updatedAt" : "2015-03-16T21:07:36Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "e1f48241-d3a6-438a-a49f-bef80570147d",
        "parentId" : "227c7ca6-7c95-4e04-bbd5-6361fc395351",
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "We should ask someone else to try first. That's a good test of whether anyone else can figure it out. :-)\n\nAnd maybe motivation to finish the conversion to genericetcd. BTW, if you want help with that, file issues for the remaining objects, and we can farm them out.\n",
        "createdAt" : "2015-03-14T06:17:03Z",
        "updatedAt" : "2015-03-16T21:07:36Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "a337b06d-e488-476e-8c93-082c1e2b58f2",
        "parentId" : "227c7ca6-7c95-4e04-bbd5-6361fc395351",
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "Maybe one of the last people to have added an object, such as @pmorie or @markturansky should take a stab.\n",
        "createdAt" : "2015-03-14T06:23:51Z",
        "updatedAt" : "2015-03-16T21:07:36Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "4b9ba26d-f63f-435b-978c-7467c59f6a2a",
        "parentId" : "227c7ca6-7c95-4e04-bbd5-6361fc395351",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Derek and Andy have already done some of them - Andy converted 5 or 6 coupled versions.  If I don't get to this on Monday one of them will take a swipe at it.\n",
        "createdAt" : "2015-03-14T15:38:38Z",
        "updatedAt" : "2015-03-16T21:07:36Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "9919693b-f5ca-4e46-b367-004cc568ddb6",
        "parentId" : "227c7ca6-7c95-4e04-bbd5-6361fc395351",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "OK.  I'd like to proceed with this doc and they can edit it.\n",
        "createdAt" : "2015-03-15T04:52:44Z",
        "updatedAt" : "2015-03-16T21:07:36Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "f0dee9bd-2503-4765-8d71-0730b16006e7",
        "parentId" : "227c7ca6-7c95-4e04-bbd5-6361fc395351",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Yes\n\n> On Mar 15, 2015, at 12:52 AM, Tim Hockin notifications@github.com wrote:\n> \n> In docs/devel/api_changes.md:\n> \n> > +\n> > +## Examples and docs\n> > +\n> > +At last, your change is done, all unit tests pass, e2e passes, you're done.\n> > +Whoah, hold on.  You just changed the API.  If you are touching an existing\n> > +facet of the API, you have to try _really_ hard to make sure that _all_ the\n> > +examples and docs are updated.  There's no easy way to do this, due in part ot\n> > +JSON and YAML silently dropping unknown fields.  You're clever - you'll figure\n> > +it out.  Put `grep` or `ack` to good use.\n> > +\n> > +If you added functionality, you should consider documenting it and/or writing\n> > +an example to illustrate your change.\n> > +\n> > +## Adding new REST objects\n> > +\n> > +TODO(smarterclayton): write this.\n> > OK. I'd like to proceed with this doc and they can edit it.\n> \n> â€”\n> Reply to this email directly or view it on GitHub.\n",
        "createdAt" : "2015-03-15T17:32:53Z",
        "updatedAt" : "2015-03-16T21:07:36Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "3a1e6239809e44f92ebd445f73868329028bc4c8",
    "line" : 289,
    "diffHunk" : "@@ -1,1 +287,291 @@## Adding new REST objects\n\nTODO(smarterclayton): write this."
  },
  {
    "id" : "9e069db2-2dcc-416b-9386-6d68250e83aa",
    "prId" : 5459,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d982eb38-5dc3-4825-ad65-5b8be3d672d9",
        "parentId" : null,
        "authorId" : null,
        "body" : "why?\n",
        "createdAt" : "2015-03-13T21:42:15Z",
        "updatedAt" : "2015-03-16T21:07:36Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      },
      {
        "id" : "4d7dcf1d-00e9-47b4-9109-6b729b1a8baa",
        "parentId" : "d982eb38-5dc3-4825-ad65-5b8be3d672d9",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "Why make assumptions?  Because they might be true in practice (e.g. today I assumed there will always be at least one port on a service, so I can assume [0] is always safe to access.  The fuzzer, however, sometimes fuzzes 0.  Hence a fuzzer fixup.\n",
        "createdAt" : "2015-03-13T21:47:25Z",
        "updatedAt" : "2015-03-16T21:07:36Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "c5dee0d2-959d-43ca-a768-3b13ec20a68c",
        "parentId" : "d982eb38-5dc3-4825-ad65-5b8be3d672d9",
        "authorId" : null,
        "body" : "My apologies for being ambiguous.  \"Why does the test not run validation\" was my question.\n",
        "createdAt" : "2015-03-13T22:13:53Z",
        "updatedAt" : "2015-03-16T21:07:36Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      },
      {
        "id" : "fb6a4df7-5950-4ef9-929a-ee8d7ebcb12b",
        "parentId" : "d982eb38-5dc3-4825-ad65-5b8be3d672d9",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "It's not a validation test, it's a fuzzer.  It could run validation but it\nwould just be harder to implement for less actual value.\nOn Mar 13, 2015 3:14 PM, \"Quinton Hoole\" notifications@github.com wrote:\n\n> In docs/devel/api_changes.md\n> https://github.com/GoogleCloudPlatform/kubernetes/pull/5459#discussion_r26427188\n> :\n> \n> > +versioned APIs directly.\n> > +\n> > +If you see errors from the `serialization_test`, it may indicate the need for\n> > +explicit conversions.\n> > +\n> > +The conversion code resides with each versioned API -\n> > +`pkg/api/<version>/conversion.go.  Unsurprisingly, this also requires you to\n> > +add tests to`pkg/api/<version>/conversion_test.go.\n> > +\n> > +## Update the fuzzer\n> > +\n> > +Part of our testing regimen for APIs is to \"fuzz\" (fill with random values) API\n> > +objects and then convert them to and from the different API versions.  This is\n> > +a great way of exposing places where you lost information or made bad\n> > +assumptions.  If you have added any fields which need very careful formatting\n> > +(the test does not run validation) or if you have made assumptions such as\n> \n> My apologies for being ambiguous. \"Why does the test not run validation\"\n> was my question.\n> \n> â€”\n> Reply to this email directly or view it on GitHub\n> https://github.com/GoogleCloudPlatform/kubernetes/pull/5459/files#r26427188\n> .\n",
        "createdAt" : "2015-03-13T22:17:27Z",
        "updatedAt" : "2015-03-16T21:07:36Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "3a1e6239809e44f92ebd445f73868329028bc4c8",
    "line" : 235,
    "diffHunk" : "@@ -1,1 +233,237 @@a great way of exposing places where you lost information or made bad\nassumptions.  If you have added any fields which need very careful formatting\n(the test does not run validation) or if you have made assumptions such as\n\"this slice will always have at least 1 element\", you may get an error or even\na panic from the `serialization_test`.  If so, look at the diff it produces (or"
  },
  {
    "id" : "a3ca8cd0-883f-4e86-8d27-6015845978da",
    "prId" : 5459,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6bcf7e57-c4b3-4c4b-bf7c-f122a0923ea4",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "@bgrant0607 @smarterclayton @alex-mohr @brendanburns @erictune \n\nA random smattering of people to validate my definition of \"compatible\"\n",
        "createdAt" : "2015-03-13T22:00:21Z",
        "updatedAt" : "2015-03-16T21:07:36Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "3a1e6239809e44f92ebd445f73868329028bc4c8",
    "line" : null,
    "diffHunk" : "@@ -1,1 +55,59 @@backward-compatibly.\n\n## On compatibility\n\nBefore talking about how to make API changes, it is worthwhile to clarify what"
  },
  {
    "id" : "0320cf6f-b1ed-45d3-a3b9-cbcb93eb1677",
    "prId" : 5459,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0efabada-2380-4dc7-9f52-10a9ac4e3b0b",
        "parentId" : null,
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "It would be useful to say more about the relationship between the internal rep and the versioned APIs -- we translate all versions to a common internal representation. We should explain Decode/Encode: parsing, defaulting, conversion, validation, etc. \n",
        "createdAt" : "2015-03-13T23:39:31Z",
        "updatedAt" : "2015-03-16T21:07:36Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "b6585fb1-5a71-4965-80d8-2dd3133e8542",
        "parentId" : "0efabada-2380-4dc7-9f52-10a9ac4e3b0b",
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "Not the details, just the sequence and high-level sketch.\n",
        "createdAt" : "2015-03-13T23:53:27Z",
        "updatedAt" : "2015-03-16T21:07:36Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "df8dcfa3-97f8-499d-af51-f8de8b171154",
        "parentId" : "0efabada-2380-4dc7-9f52-10a9ac4e3b0b",
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "Explaining that we allow objects to be accessed (created, read, updated, deleted) via any/multiple api versions is important.\n",
        "createdAt" : "2015-03-14T00:13:39Z",
        "updatedAt" : "2015-03-16T21:07:36Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "5f02a34b-0fad-459b-a29b-e496f3328d97",
        "parentId" : "0efabada-2380-4dc7-9f52-10a9ac4e3b0b",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "OK, I move the bits about conversion to the top and explained the process a bit.  PTAL\n",
        "createdAt" : "2015-03-15T04:16:13Z",
        "updatedAt" : "2015-03-16T21:07:36Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "3a1e6239809e44f92ebd445f73868329028bc4c8",
    "line" : null,
    "diffHunk" : "@@ -1,1 +6,10 @@code itself.\n\nWhat this means for API changes is that you have to be somewhat thoughtful in\nhow you approach changes, and that you have to touch a number of pieces to make\na complete change.  This document aims to guide you through the process, though"
  },
  {
    "id" : "b6a57c62-0f4d-4100-b627-6497ebb53c3a",
    "prId" : 5459,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a193fcec-41b6-4ec4-b7c5-c7fe6b086acc",
        "parentId" : null,
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "It's worth calling out enums. We mostly avoid enums, but have a few de-facto ones. Perhaps counter-intuitively, _adding_ a new enum value is a breaking change if clients might reasonably expect to understand all values a field may be set to. OTOH, _removing_ an enum value, especially in a status field, can be a backward-compatible change, so long as it's treated similarly to a deprecated field -- the system doesn't reject the request or do something else unreasonable.\n",
        "createdAt" : "2015-03-14T00:00:28Z",
        "updatedAt" : "2015-03-16T21:07:36Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "bbd15bd3-4984-484c-81d4-3521520c0833",
        "parentId" : "a193fcec-41b6-4ec4-b7c5-c7fe6b086acc",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "Will add a short note on this.\n",
        "createdAt" : "2015-03-15T04:21:01Z",
        "updatedAt" : "2015-03-16T21:07:36Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "3a1e6239809e44f92ebd445f73868329028bc4c8",
    "line" : null,
    "diffHunk" : "@@ -1,1 +60,64 @@we mean by API compatibility.  An API change is considered backward-compatible\nif it:\n   * adds new functionality that is not required for correct behavior\n   * does not change existing semantics\n   * does not change existing defaults"
  },
  {
    "id" : "59c75db7-2904-4c2d-bab7-1f4b24e52b3a",
    "prId" : 5459,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "aaf4ea9b-3e14-4f4c-ba20-03e73c6b804f",
        "parentId" : null,
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "We should have a process for proposing incompatible changes: maybe a thread on kubernetes-dev or something.\n",
        "createdAt" : "2015-03-14T00:14:47Z",
        "updatedAt" : "2015-03-16T21:07:36Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "c5446266-f26a-4751-b5a1-339ff033206b",
        "parentId" : "aaf4ea9b-3e14-4f4c-ba20-03e73c6b804f",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "Will tell them to contact us first.\n",
        "createdAt" : "2015-03-15T04:40:50Z",
        "updatedAt" : "2015-03-16T21:07:36Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "3a1e6239809e44f92ebd445f73868329028bc4c8",
    "line" : 76,
    "diffHunk" : "@@ -1,1 +74,78 @@\nIf your change does not meet these criteria, it is not considered strictly\ncompatible.  There are times when this might be OK, but mostly we want changes\nthat meet this definition.  If you think you need to break compatibility, you\nshould talk to the Kubernetes team first."
  },
  {
    "id" : "fcd3ef1a-b22f-461f-a9a6-cdd9757b7245",
    "prId" : 5459,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "967cf3a5-4ac6-4801-9aa2-f5eefe309a78",
        "parentId" : null,
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "We should mention description tag here. Every non-inline field must have a description tag. The tags are automatically pulled into the swagger model.\n\nPresence of description tags is verified by hack/verify-description.sh, which also runs during pre-submit hooks and on Travis.\n",
        "createdAt" : "2015-03-14T06:15:03Z",
        "updatedAt" : "2015-03-16T21:07:36Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "ea3fd921-2600-4a6f-849c-4419f0d2eb29",
        "parentId" : "967cf3a5-4ac6-4801-9aa2-f5eefe309a78",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "noted in the version API section\n",
        "createdAt" : "2015-03-15T04:51:43Z",
        "updatedAt" : "2015-03-16T21:07:36Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "3a1e6239809e44f92ebd445f73868329028bc4c8",
    "line" : 275,
    "diffHunk" : "@@ -1,1 +273,277 @@figure out the best way to make sure your cool feature keeps working forever.\n\n## Examples and docs\n\nAt last, your change is done, all unit tests pass, e2e passes, you're done,"
  }
]