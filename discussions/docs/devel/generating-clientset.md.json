[
  {
    "id" : "0ae53225-a4d4-424a-9841-9d7035f2e6ba",
    "prId" : 31470,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bf133b64-cc79-4624-a7df-0fca409ddcd6",
        "parentId" : null,
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "@smarterclayton FYI, I remember you once complained about missing expansion files when generating clientset.\n",
        "createdAt" : "2016-08-25T22:53:37Z",
        "updatedAt" : "2016-08-26T17:59:00Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "889b100e63cb86b2963a8e8664b5f2911545fe92",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +70,74 @@  interface and its methods in file ${TYPE}_expansion.go. In most cases, you\n  don't want to remove existing expansion files. So to make life easier,\n  instead of creating a new clientset from scratch, ***you can copy and rename an\n  existing clientset (so that all the expansion files are copied)***, and then run\n  client-gen."
  },
  {
    "id" : "5e595427-10f0-4f14-b594-32b26c45aeea",
    "prId" : 21436,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2453859a-b9b9-410a-9772-63564195e03a",
        "parentId" : null,
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "Example added.\n",
        "createdAt" : "2016-02-18T20:07:13Z",
        "updatedAt" : "2016-02-19T18:43:26Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "f255a723ac2348dc068425e09988474f4d531013",
    "line" : 41,
    "diffHunk" : "@@ -1,1 +39,43 @@\n```\n$ client-gen --input=\"api/v1,extensions/v1beta1\" --clientset-name=\"my_release\"\n```\n"
  },
  {
    "id" : "24085a0b-77e5-494f-9d32-b50cf81041e5",
    "prId" : 21436,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "930fa3d1-f322-4e15-95d8-f07301e2d2d6",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "How would it work if you have api types in a different repo? I.e., can you change the `k8s.io/kubernetes/pkg/` part of this?\n",
        "createdAt" : "2016-02-18T22:19:35Z",
        "updatedAt" : "2016-02-19T18:43:26Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "2f8c3b47-b003-4768-b5fa-e1abddb87775",
        "parentId" : "930fa3d1-f322-4e15-95d8-f07301e2d2d6",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "Not supported yet. How about the design [here](https://github.com/kubernetes/kubernetes/pull/21436#discussion_r53362017)?\n",
        "createdAt" : "2016-02-19T05:58:29Z",
        "updatedAt" : "2016-02-19T18:43:26Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "f255a723ac2348dc068425e09988474f4d531013",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +36,40 @@The workflow includes four steps:\n- Marking API types with tags: in `pkg/apis/${GROUP}/${VERSION}/types.go`, mark the types (e.g., Pods) that you want to generate clients for with the `// +genclient=true` tag.  If the resource associated with the type is not namespace scoped (e.g., PersistentVolume), you need to append the `nonNamespaced=true` tag as well.\n- Running the client-gen tool: you need to use the command line argument `--input` to specify the groups and versions of the APIs you want to generate clients for, client-gen will then look into `pkg/apis/${GROUP}/${VERSION}/types.go` and generate clients for the types you have marked with the `genlcient` tags. For example, run\n\n```"
  }
]