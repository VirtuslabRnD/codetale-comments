[
  {
    "id" : "248dcfa3-d983-49b5-8966-bb75dc3594a8",
    "prId" : 4685,
    "prUrl" : "https://github.com/apache/kafka/pull/4685#pullrequestreview-102896745",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4fdc60ab-74e0-49d1-afb7-5ce76d923c68",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "I thought, KIP-261 is only part of 1.2 release?",
        "createdAt" : "2018-03-11T21:12:53Z",
        "updatedAt" : "2018-03-12T19:00:03Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "9cb6b81e-6626-41a4-931a-bcd3cfc7ba93",
        "parentId" : "4fdc60ab-74e0-49d1-afb7-5ce76d923c68",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "In 1.1.0 release we have another KIP: https://cwiki.apache.org/confluence/display/KAFKA/KIP-205%3A+Add+all%28%29+and+range%28%29+API+to+ReadOnlyWindowStore\r\n\r\nI found the description on the existing 1.1.0 section was not incorrect and tries to modify as well. See my other comment on the PR.",
        "createdAt" : "2018-03-11T21:21:44Z",
        "updatedAt" : "2018-03-12T19:00:03Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      }
    ],
    "commit" : "f3c611f4a7fd45fe6f851c0c97e0ae9d497ffecf",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +41,45 @@\n    <p>\n        If you want to upgrade from 1.0.x to 1.1.0 and you have customized window store implementations on the <code>ReadOnlyWindowStore</code> interface\n        you'd need to update your code to incorporate the newly added public APIs.\n        Otherwise, if you are using Java 7 you don't need to make any code changes as the public API is fully backward compatible;"
  },
  {
    "id" : "9f98c285-f974-4b15-9570-d018501fcda5",
    "prId" : 4685,
    "prUrl" : "https://github.com/apache/kafka/pull/4685#pullrequestreview-107596802",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1f7cc715-6a85-4e8f-8d82-5cecc8ad42b5",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "@guozhangwang @dguy @rajinisivaram This PR was cherry-picked to 1.1 branch -- however, this paragraph talks about 1.2 release and should not be part of 1.1. I don't think we need to get a new RC for this, but we should make sure to update the docs before we push them live for 1.1. Thanks.",
        "createdAt" : "2018-03-26T00:51:44Z",
        "updatedAt" : "2018-03-26T00:51:44Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "19d78d95-2e2b-49c6-b1a5-cefbbe13afa1",
        "parentId" : "1f7cc715-6a85-4e8f-8d82-5cecc8ad42b5",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "Thanks for pointing it out!",
        "createdAt" : "2018-03-26T03:29:35Z",
        "updatedAt" : "2018-03-26T03:29:35Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      },
      {
        "id" : "1a3b2b23-b762-4922-a457-5f0acacfaf1e",
        "parentId" : "1f7cc715-6a85-4e8f-8d82-5cecc8ad42b5",
        "authorId" : "b4936a15-698a-496e-85a1-b1e229b4986b",
        "body" : "@mjsax @guozhangwang Is there a PR to fix this in the 1.1 branch? If not, can you submit one so that I can generate 1.1 docs using that? Or do I just need to revert this commit to generate the docs? Thanks.",
        "createdAt" : "2018-03-28T09:06:09Z",
        "updatedAt" : "2018-03-28T09:06:09Z",
        "lastEditedBy" : "b4936a15-698a-496e-85a1-b1e229b4986b",
        "tags" : [
        ]
      }
    ],
    "commit" : "f3c611f4a7fd45fe6f851c0c97e0ae9d497ffecf",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +35,39 @@\n    <p>\n        If you want to upgrade from 1.1.x to 1.2.0 and you have customized window store implementations on the <code>ReadOnlyWindowStore</code> interface\n        you'd need to update your code to incorporate the newly added public APIs; otherwise you don't need to make any code changes.\n        See <a href=\"#streams_api_changes_120\">below</a> for a complete list of 1.2.0 API and semantic changes that allow you to advance your application and/or simplify your code base."
  },
  {
    "id" : "88a96114-33a2-45c6-9ea7-667dcf022bb7",
    "prId" : 4922,
    "prUrl" : "https://github.com/apache/kafka/pull/4922#pullrequestreview-114981013",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1bdba5e3-4e69-4025-87d8-73036f13ced4",
        "parentId" : null,
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "nit: could we list the possible reasons of skipped records here?",
        "createdAt" : "2018-04-24T20:10:06Z",
        "updatedAt" : "2018-04-24T22:10:59Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      },
      {
        "id" : "bc2991ad-8013-47e9-82e0-68a9209ac39d",
        "parentId" : "1bdba5e3-4e69-4025-87d8-73036f13ced4",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "yeah, I considered doing that but was overcome by laziness. ;) I'll add it.",
        "createdAt" : "2018-04-24T20:53:01Z",
        "updatedAt" : "2018-04-24T22:10:59Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "cd0fd689-2946-429f-a2cb-86055da4c5a6",
        "parentId" : "1bdba5e3-4e69-4025-87d8-73036f13ced4",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "I'm working my way though this, but just had this thought... if we don't want people to depend on record skipping for correctness, is there an argument that we shouldn't document the behavior?",
        "createdAt" : "2018-04-24T21:44:30Z",
        "updatedAt" : "2018-04-24T22:10:59Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      },
      {
        "id" : "bc5bfbae-f48f-45fa-800c-a334fbdf840c",
        "parentId" : "1bdba5e3-4e69-4025-87d8-73036f13ced4",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "I think \"correctness\" here is really dependent on users app case-by-case: if I do not expect ANY skipped records, then I will monitor on this metric `> 0`, if I do expect, that sometimes there are null keys from the source topic that will be skipped, then I will probably not monitor on this metric or just monitor on it not larger than a very big value indicating spiky anomaly.",
        "createdAt" : "2018-04-24T21:59:02Z",
        "updatedAt" : "2018-04-24T22:10:59Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      }
    ],
    "commit" : "fd078d7decfe71ebf34f07f6fe38c49e5019674e",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +104,108 @@    <p>\n        We have removed the <code>skippedDueToDeserializationError-rate</code> and <code>skippedDueToDeserializationError-total</code> metrics.\n        Deserialization errors, and all other causes of record skipping, are now accounted for in the pre-existing metrics\n        <code>skipped-records-rate</code> and <code>skipped-records-total</code>. When a record is skipped, the event is\n        now logged at WARN level. If these warnings become burdensome, we recommend explicitly filtering out unprocessable"
  },
  {
    "id" : "0a0245d6-f124-4396-973b-ffc11cbb468f",
    "prId" : 5006,
    "prUrl" : "https://github.com/apache/kafka/pull/5006#pullrequestreview-120427471",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "daac41e9-8c9a-42f2-88e3-de01cd475a0a",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "Was added in `1.1` IIRC.",
        "createdAt" : "2018-05-15T21:29:31Z",
        "updatedAt" : "2018-05-15T21:47:38Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "6952b709-d448-4c05-96f3-6b57cb62dc7e",
        "parentId" : "daac41e9-8c9a-42f2-88e3-de01cd475a0a",
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "I think we are talking about different KIPs? I was referring to https://cwiki.apache.org/confluence/display/KAFKA/KIP-261%3A+Add+Single+Value+Fetch+in+Window+Stores",
        "createdAt" : "2018-05-15T21:47:14Z",
        "updatedAt" : "2018-05-15T21:47:38Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      }
    ],
    "commit" : "5a0e010dccc80dcf6deb9d4267bb8cff3622cb5f",
    "line" : 50,
    "diffHunk" : "@@ -1,1 +61,65 @@\n    <p>\n        In 2.0.0 we have added a few new APIs on the <code>ReadOnlyWindowStore</code> interface (for details please read <a href=\"#streams_api_changes_200\">Streams API changes</a> below).\n        If you have customized window store implementations that extends the <code>ReadOnlyWindowStore</code> interface you need to make code changes.\n    </p>"
  },
  {
    "id" : "37b8157d-18bd-4c20-925d-c4c7284cf1a7",
    "prId" : 6586,
    "prUrl" : "https://github.com/apache/kafka/pull/6586#pullrequestreview-227421033",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "22695dea-be16-4a59-a866-afce97355219",
        "parentId" : null,
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "Should we also mention the added `EagerBufferConfig` as well?",
        "createdAt" : "2019-04-16T16:47:50Z",
        "updatedAt" : "2019-04-16T16:47:50Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      },
      {
        "id" : "4acf8fce-b578-4ac7-87ef-3565c3c68d47",
        "parentId" : "22695dea-be16-4a59-a866-afce97355219",
        "authorId" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "body" : "I left it out intentionally; I _think_ that it's unnecessary detail, which would make the guide more cumbersome without adding value.\r\n\r\nThe reason is that this change doesn't have any effect on the code that people have written or will write. Specifically, the return type of `BufferConfig.emitEarlyWhenFull()` used to be `BufferConfig<?>`, and now it's `EagerBufferConfig extends BufferConfig<?>`, and both are applicable in exactly the same case: `Suppressed.untilTimeLimit(BufferConfig)`, and not `Suppressed.untilWindowCloses(StrictBufferConfig)`.\r\n\r\nAt the most, it's a change that people may notice in passing, but they can read the javadocs if they're curious. It shouldn't materially affect their lives in any way.",
        "createdAt" : "2019-04-16T20:16:07Z",
        "updatedAt" : "2019-04-16T20:16:07Z",
        "lastEditedBy" : "f84c555e-0e5d-4773-b994-4121b6b8dada",
        "tags" : [
        ]
      }
    ],
    "commit" : "3a4fc30f58b8281a9ac99fda57e21bbfc45a003c",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +72,76 @@\n    <h3><a id=\"streams_api_changes_230\" href=\"#streams_api_changes_230\">Streams API changes in 2.3.0</a></h3>\n    <p>Version 2.3.0 adds the Suppress operator to the <code>kafka-streams-scala</code> Ktable API.</p>\n    <p>\n        As of 2.3.0 Streams now offers an in-memory version of the window store, in addition to the persistent one based on RocksDB. The new public interface <code>inMemoryWindowStore()</code> is added to Stores that provides a built-in in-memory window store."
  },
  {
    "id" : "2864e8d7-8cb8-445e-a689-7b8b9aeff1fb",
    "prId" : 7515,
    "prUrl" : "https://github.com/apache/kafka/pull/7515#pullrequestreview-302210777",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a601ebae-c71a-473d-8521-999adcde5443",
        "parentId" : null,
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "@guozhangwang @ableegoldman Update this PR and added this paragraph for KIP-444 and KIP-471 -- Call for review.",
        "createdAt" : "2019-10-15T21:31:54Z",
        "updatedAt" : "2019-10-16T06:34:57Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "c391cd446f0e0b72205772a7207a93ac50c0b581",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +96,100 @@        <a href=\"/{{version}}/documentation/#kafka_streams_rocksdb_monitoring\">RocksDB monitoring</a>\n        section in the operations guide.\n    </p>\n\n    <p>"
  },
  {
    "id" : "45c7e889-5dea-4a63-afc8-59366149f634",
    "prId" : 7515,
    "prUrl" : "https://github.com/apache/kafka/pull/7515#pullrequestreview-302226601",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d394b36d-c181-40b4-8634-a484d8c25f09",
        "parentId" : null,
        "authorId" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "body" : "nit: updated -> update",
        "createdAt" : "2019-10-15T22:15:05Z",
        "updatedAt" : "2019-10-16T06:34:57Z",
        "lastEditedBy" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "tags" : [
        ]
      }
    ],
    "commit" : "c391cd446f0e0b72205772a7207a93ac50c0b581",
    "line" : 52,
    "diffHunk" : "@@ -1,1 +121,125 @@        (<a href=\"https://cwiki.apache.org/confluence/display/KAFKA/KIP-528%3A+Deprecate+PartitionGrouper+configuration+and+interface\">KIP-528</a>)\n        and will be removed in the next major release (<a href=\"https://issues.apache.org/jira/browse/KAFKA-7785\">KAFKA-7785</a>.\n        Hence, this feature won't be supported in the future any longer and you need to updated your code accordingly.\n        If you use a custom <code>PartitionGrouper</code> and stop to use it, the created tasks might change.\n        Hence, you will need to reset your application to upgrade it."
  },
  {
    "id" : "0db03c5c-21f5-41d8-be20-b5134b4ae66b",
    "prId" : 7516,
    "prUrl" : "https://github.com/apache/kafka/pull/7516#pullrequestreview-302243298",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4093174f-ff63-4779-8185-39561e45e85e",
        "parentId" : null,
        "authorId" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "body" : "In the API changes below, we should document that the KafkaStreams state listener semantics is also changed with cooperative rebalance protocol, that users should now be aware when the transition could happen.",
        "createdAt" : "2019-10-15T17:25:13Z",
        "updatedAt" : "2019-10-16T22:14:07Z",
        "lastEditedBy" : "eba565e8-e1d5-4749-9c9a-5d117de6c96c",
        "tags" : [
        ]
      },
      {
        "id" : "735c3760-9f0c-417e-9690-75045f486544",
        "parentId" : "4093174f-ff63-4779-8185-39561e45e85e",
        "authorId" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "body" : "We should merge https://github.com/apache/kafka/pull/7515 first and then this PR can be rebase and more details can be filled into the section as marked by the placeholder.",
        "createdAt" : "2019-10-15T20:22:26Z",
        "updatedAt" : "2019-10-16T22:14:07Z",
        "lastEditedBy" : "9baadc38-cd41-4762-be0c-791258ced78c",
        "tags" : [
        ]
      },
      {
        "id" : "c43ebd2c-c01e-4400-908a-4e72208a5592",
        "parentId" : "4093174f-ff63-4779-8185-39561e45e85e",
        "authorId" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "body" : "Sounds good, please let me know when you get that merged",
        "createdAt" : "2019-10-15T20:56:41Z",
        "updatedAt" : "2019-10-16T22:14:07Z",
        "lastEditedBy" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "tags" : [
        ]
      },
      {
        "id" : "8ee90960-7a06-442e-85c2-879e915a4af5",
        "parentId" : "4093174f-ff63-4779-8185-39561e45e85e",
        "authorId" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "body" : "Added a paragraph to the \"Streams API changes in 2.4\" section describing the state listener changes. Also wrote a bit on the improvements 429 introduces (eg restore during rebalance) even though they aren't technically API changes, please take a look",
        "createdAt" : "2019-10-15T22:58:54Z",
        "updatedAt" : "2019-10-16T22:14:07Z",
        "lastEditedBy" : "d97f50bf-60f9-45b3-81a0-a24a5f42f740",
        "tags" : [
        ]
      }
    ],
    "commit" : "1c63da5b472bf61a33d16a01a2a8a7c75a829c16",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +38,42 @@        (possible values are <code>\"0.10.0\" - \"2.3\"</code>) and during the second you remove it. This is required to safely upgrade to the new cooperative rebalancing protocol of the embedded consumer. Note that you will remain using the old eager\n        rebalancing protocol if you skip or delay the second rolling bounce, but you can safely switch over to cooperative at any time once the entire group is on 2.4+ by removing the config value and bouncing. For more details please refer to\n        <a href=\"https://cwiki.apache.org/confluence/x/vAclBg\">KIP-429</a>:\n    </p>\n    <ul>"
  }
]