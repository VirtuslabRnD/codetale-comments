[
  {
    "id" : "2ed17b06-8508-4c40-8548-d37126a86aaa",
    "prId" : 3579,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/3579#pullrequestreview-79603010",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a18c660f-1485-43b0-980f-ce625744fb85",
        "parentId" : null,
        "authorId" : "223e67d6-1873-432a-9af9-f40b82a7eedd",
        "body" : "Why are `b(a1)` and `b(a2)` better than `c`?",
        "createdAt" : "2017-11-28T17:43:49Z",
        "updatedAt" : "2017-12-01T15:36:43Z",
        "lastEditedBy" : "223e67d6-1873-432a-9af9-f40b82a7eedd",
        "tags" : [
        ]
      },
      {
        "id" : "c258d300-2d0d-4479-9d13-ab1c9a9c80cc",
        "parentId" : "a18c660f-1485-43b0-980f-ce625744fb85",
        "authorId" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "body" : "because their return type is a subtype is of the return type of c",
        "createdAt" : "2017-11-28T18:11:41Z",
        "updatedAt" : "2017-12-01T15:36:43Z",
        "lastEditedBy" : "9ffc9890-522c-4d3a-8fe5-fb5cbad2b309",
        "tags" : [
        ]
      }
    ],
    "commit" : "e9204dd73a528f1ce9ef3a42a0b732bf63068b75",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +58,62 @@    This query would now be classified as ambiguous. This makes sense, after all\n    there are two possible solutions, `b(a1)` and `b(a2)`, neither of which is better\n    than the other and both of which are better than the third solution, `c`.\n    By contrast, Scala 2 would have rejected the search for `A` as\n    ambiguous, and subsequently have classified the query `b(implicitly[A])` as a normal fail,"
  },
  {
    "id" : "60f1644f-bd5a-4ca0-87df-c3951f13bcc5",
    "prId" : 3579,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/3579#pullrequestreview-79594095",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "69d39080-06d5-4199-b571-4946c88280a5",
        "parentId" : null,
        "authorId" : "223e67d6-1873-432a-9af9-f40b82a7eedd",
        "body" : "3 solutions?",
        "createdAt" : "2017-11-28T17:56:49Z",
        "updatedAt" : "2017-12-01T15:36:43Z",
        "lastEditedBy" : "223e67d6-1873-432a-9af9-f40b82a7eedd",
        "tags" : [
        ]
      }
    ],
    "commit" : "e9204dd73a528f1ce9ef3a42a0b732bf63068b75",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +57,61 @@\n    This query would now be classified as ambiguous. This makes sense, after all\n    there are two possible solutions, `b(a1)` and `b(a2)`, neither of which is better\n    than the other and both of which are better than the third solution, `c`.\n    By contrast, Scala 2 would have rejected the search for `A` as"
  },
  {
    "id" : "673321d6-e290-455d-8095-971cd2de23c9",
    "prId" : 2592,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/2592#pullrequestreview-40832804",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "031e3997-c79b-4b27-9b49-f11a0968e3da",
        "parentId" : null,
        "authorId" : "7aa36552-f314-4217-a921-109d4a7a544d",
        "body" : "Why is that by the way?",
        "createdAt" : "2017-05-29T23:08:10Z",
        "updatedAt" : "2017-05-29T23:08:10Z",
        "lastEditedBy" : "7aa36552-f314-4217-a921-109d4a7a544d",
        "tags" : [
        ]
      }
    ],
    "commit" : "f14335b05964b272ee543404024044c3ea348406",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +27,31 @@ 2. Implicit parameters may not have singleton types.\n\n        /*!*/ def f(implicit x: y.type) // error `y.type` not allowed as type of implicit\n\n 3. Nesting is now taken into account for selecting an implicit."
  }
]