[
  {
    "id" : "549ce420-02e2-498a-8e96-7659a4cce811",
    "prId" : 4024,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/4024#pullrequestreview-98139556",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9a0bb448-63c1-40c7-8d88-281c13d08f43",
        "parentId" : null,
        "authorId" : "223e67d6-1873-432a-9af9-f40b82a7eedd",
        "body" : "Maybe add a paragraph explaining the rules that make an `unapply` qualify for vararg extraction. I am not even sure what are the rules myself.  The return type must be of the form `Option[Seq[T]]` or `Option[(..., Seq[T])]`?",
        "createdAt" : "2018-02-21T10:11:34Z",
        "updatedAt" : "2018-02-21T10:11:34Z",
        "lastEditedBy" : "223e67d6-1873-432a-9af9-f40b82a7eedd",
        "tags" : [
        ]
      },
      {
        "id" : "458d1c9d-4d9b-44e2-9d3e-932005a5f4fa",
        "parentId" : "9a0bb448-63c1-40c7-8d88-281c13d08f43",
        "authorId" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "body" : "I can't context switch into that, sorry. Constant context switching is what kills my productivity. So either somebody else digs out the details and adds them or we leave it as is. Again, my plea stands that somebody will have to take over the pattern matching problematic. ",
        "createdAt" : "2018-02-21T10:26:02Z",
        "updatedAt" : "2018-02-21T10:26:02Z",
        "lastEditedBy" : "d08d2c4a-dc79-4be6-96b0-506d21e90d1d",
        "tags" : [
        ]
      }
    ],
    "commit" : "fe10bec9c7d083841bf669ad975dca239344c165",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +26,30 @@    class Person(val name: String, val children: Person *)\n    object Person {\n      def unapplySeq(p: Person) = Some((p.name, p.children))\n    }\n"
  },
  {
    "id" : "cf262110-91da-4870-b031-36abbea1b9aa",
    "prId" : 2592,
    "prUrl" : "https://github.com/lampepfl/dotty/pull/2592#pullrequestreview-40855467",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bbf449dc-e29b-4125-aee8-04e4dff111e5",
        "parentId" : null,
        "authorId" : "7aa36552-f314-4217-a921-109d4a7a544d",
        "body" : "When developing Scalameta 2.x that's supposed to crosscompile against 2.x and 3.x, I found this to be an unfortunate problem. There's currently no way to write crosscompilable code that contains sequence wildcards. Can something be done with this?",
        "createdAt" : "2017-05-29T23:14:19Z",
        "updatedAt" : "2017-05-29T23:14:19Z",
        "lastEditedBy" : "7aa36552-f314-4217-a921-109d4a7a544d",
        "tags" : [
        ]
      },
      {
        "id" : "2a4a9879-2942-4284-b6a6-5c7f3201ca0f",
        "parentId" : "bbf449dc-e29b-4125-aee8-04e4dff111e5",
        "authorId" : "5bf81a51-885f-46a7-83a3-61092da8405f",
        "body" : "@xeno-by AFAIK, we support both syntaxes under -language:Scala2\r\nhttps://github.com/lampepfl/dotty/issues/1059\r\n\r\nOn 30 May 2017 01:14:25 Eugene Burmako <notifications@github.com> wrote:\r\n\r\n> xeno-by commented on this pull request.\r\n>\r\n>\r\n>\r\n>> +\r\n> +The syntax of vararg patterns has changed. In the new syntax one\r\n> +writes varargs in patterns exactly like one writes them in\r\n> +expressions, using a `: _*` type annotation:\r\n> +\r\n> +    xs match {\r\n> +      case List(1, 2, xs: _*) => println(xs)    // binds xs\r\n> +      case List(1, _ : _*) =>                   // wildcard pattern\r\n> +    }\r\n> +\r\n> +The old syntax, which is shorter but less regular, is no longer\r\n> +supported:\r\n> +\r\n> +    /*!*/ case List(1, 2, xs @ _*)       // syntax error\r\n> +    /*!*/ case List(1, 2, _*) => ...     // syntax error\r\n> +\r\n>\r\n> When developing Scalameta 2.x that's supposed to crosscompile against 2.x \r\n> and 3.x, I found this to be an unfortunate problem. There's currently no \r\n> way to write crosscompilable code that contains sequence wildcards. Can \r\n> something be done with this?\r\n>\r\n> --\r\n> You are receiving this because you are subscribed to this thread.\r\n> Reply to this email directly or view it on GitHub:\r\n> https://github.com/lampepfl/dotty/pull/2592#pullrequestreview-40833029\r\n",
        "createdAt" : "2017-05-30T05:35:04Z",
        "updatedAt" : "2017-05-30T05:35:04Z",
        "lastEditedBy" : "5bf81a51-885f-46a7-83a3-61092da8405f",
        "tags" : [
        ]
      }
    ],
    "commit" : "f14335b05964b272ee543404024044c3ea348406",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +18,22 @@    /*!*/ case List(1, 2, xs @ _*)       // syntax error\n    /*!*/ case List(1, 2, _*) => ...     // syntax error\n\n"
  }
]