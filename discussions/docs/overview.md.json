[
  {
    "id" : "e890fdb2-1bf3-4c74-8e3f-949cda883f70",
    "prId" : 5063,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "08ff1adc-5855-42f4-afbe-07882af53b9b",
        "parentId" : null,
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "This should go right below the networking model paragraph.\n\nI might factor out the label selector part, merge it with the discussion about labels, and move that paragraph below this one.\n",
        "createdAt" : "2015-03-05T01:18:42Z",
        "updatedAt" : "2015-03-05T08:34:33Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "27ef1367-a9ba-4573-8309-aed6edf8ef9a",
        "parentId" : "08ff1adc-5855-42f4-afbe-07882af53b9b",
        "authorId" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "body" : "Moved it right below networking model paragraph.\n\nI didn't really understand your suggestion about factoring out the label selector part, but I think the way it reads now seems OK...\n",
        "createdAt" : "2015-03-05T08:37:35Z",
        "updatedAt" : "2015-03-05T08:37:35Z",
        "lastEditedBy" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "tags" : [
        ]
      }
    ],
    "commit" : "dc0dc18f84b29f83c1ac5a6557766ff10b79bdee",
    "line" : null,
    "diffHunk" : "@@ -1,1 +13,17 @@Kubernetes supports a unique [networking model](networking.md). Kubernetes encourages a flat address space and does not dynamically allocate ports, instead allowing users to select whichever ports are convenient for them. To achieve this, it allocates an IP address for each pod.\n\nModern Internet applications are commonly built by layering micro-services, for example a set of web front-ends talking to a distributed in-memory key-value store talking to a replicated storage service. To facilitate this architecture, Kubernetes offers the [service](services.md) abstraction, which provides a stable IP address and [DNS name](dns.md) that corresponds to a dynamic set of pods such as the set of pods constituting a micro-service. The set is defined using a label selector and thus can refer to any set of pods. When a container running in a Kubernetes pod connects to this address, the connection is forwarded by a local agent (called the kube proxy) running on the source machine, to one of the corresponding back-end containers. The exact back-end is chosen using a round-robin policy to balance load. The kube proxy takes care of tracking the dynamic set of back-ends as pods are replaced by new pods on new hosts, so that the service IP address (and DNS name) never changes.\n\nEvery resource in Kubernetes, such as a pod, is identified by a URI and has a UID. Important components of the URI are the kind of object (e.g. pod), the object’s name, and the object’s [namespace](namespaces.md). Every name is unique within its namespace, and in contexts where an object name is provided without a namespace, it is assumed to be in the default namespace. UID is unique across time and space."
  }
]