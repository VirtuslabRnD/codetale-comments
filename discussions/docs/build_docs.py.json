[
  {
    "id" : "d41e6a19-fcb5-4d1a-b0f3-039476ca1644",
    "prId" : 10377,
    "prUrl" : "https://github.com/apache/airflow/pull/10377#pullrequestreview-469613479",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5796a4e1-36bf-45d0-a5f4-7aa87ea15376",
        "parentId" : null,
        "authorId" : "c25957e2-1132-4c48-a536-3824307fd862",
        "body" : "LGTM, only question is if we do need to rename the file at all? i.e. just have `docs/build` instead of `docs/build_docs.py`",
        "createdAt" : "2020-08-18T14:34:26Z",
        "updatedAt" : "2020-08-18T17:13:38Z",
        "lastEditedBy" : "c25957e2-1132-4c48-a536-3824307fd862",
        "tags" : [
        ]
      },
      {
        "id" : "8448495a-66ee-4cce-8d20-34c6207af056",
        "parentId" : "5796a4e1-36bf-45d0-a5f4-7aa87ea15376",
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "Yes. There are several reasons for it:\r\n\r\n1) there was a problem when I switched to Docker-build only tests in #10368 . In .dockerignore we are ignoring anything with \"build\" name at any level as build artifact. Usually generated directories (including one generated by setup.py create directories which are named \"build\". I could probably filter it out, but I think generally naming anything just \"build\" is a dangerous one precisely for the reason that various tools might skip or ignore it or delete it.\r\n\r\n2) Without the .py extension this file does not get recognized as python file by pre-commit. This is why I had to fix a number of pylint/flake/mypy inside it it because it was not verified before.\r\n\r\n3) I think generally speaking running it via buid.py should be discouraged in favour of `./breeze build-doc`. The problem is that you never know if you have all the recent extensions installed. For example if you'd do it after adding spellchecking it would have failed and you would have to figure out that you have to re-rerun 'pip install .[doc]' again. For people who are casual contributors and do it very rarely this might come as a surprise. Also they might not remember that they have a separate virtualenv where they should build the docs and they would loose time trying to find out what's going on. They also might have an even older version of the virtualenv that will not work well. \r\n\r\nThe`./breeze build-doc` - handles all the venv problems for you and will ask you \"rebuild the image\" in such case,\r\n which makes it obvious what you should do.\r\n\r\nActually - it's even worse now @kaxil @mik-laj  -  I just checked that now. And the old instructions are wrong. `pip install -e '.[doc]'` does not work at all:\r\n\r\nIf you do it from the scratch you get the below error. So unless we know how to fix it, I am removing the old mechanism and replace it with breeze-only. I see no point keeping the instructions which do not work.\r\n\r\n```\r\nModule \"airflow.providers.amazon.aws.example_dags.example_datasync_1\" could not be loaded. Full source will not be available. \"error importing 'airflow.providers.amazon.aws.example_dags.example_datasync_1' (exception was: ModuleNotFoundError(\"No module named 'boto3'\",))\"\r\n[airflow.providers.amazon.aws.example_dags.example_datasync_1] Entry is false for \r\n[airflow.providers.amazon.aws.example_dags.example_datasync_1] Entry is false for \r\n[airflow.providers.amazon.aws.example_dags.example_datasync_1] Entry is false for \r\nModule \"airflow.providers.amazon.aws.example_dags.example_datasync_2\" could not be loaded. Full source will not be available. \"error importing 'airflow.providers.amazon.aws.example_dags.example_datasync_2' (exception was: ModuleNotFoundError(\"No module named 'boto3'\",))\"\r\n[airflow.providers.amazon.aws.example_dags.example_datasync_2] Entry is false for \r\nModule \"airflow.providers.amazon.aws.example_dags.example_ecs_fargate\" could not be loaded. Full source will not be available. \"error importing 'airflow.providers.amazon.aws.example_dags.example_ecs_fargate' (exception was: ModuleNotFoundError(\"No module named 'boto3'\",))\"\r\nModule \"airflow.providers.amazon.aws.example_dags.example_emr_job_flow_automatic_steps\" could not be loaded. Full source will not be available. \"error importing 'airflow.providers.amazon.aws.example_dags.example_emr_job_flow_automatic_steps' (exception was: ModuleNotFoundError(\"No module named 'boto3'\",))\"\r\n[airflow.providers.amazon.aws.example_dags.example_emr_job_flow_automatic_steps] Entry is false for \r\nModule \"airflow.providers.amazon.aws.example_dags.example_emr_job_flow_manual_steps\" could not be loaded. Full source will not be available. \"error importing 'airflow.providers.amazon.aws.example_dags.example_emr_job_flow_manual_steps' (exception was: ModuleNotFoundError(\"No module named 'boto3'\",))\"\r\nModule \"airflow.providers.amazon.aws.example_dags.example_google_api_to_s3_transfer_basic\" could not be loaded. Full source will not be available. \"error importing 'airflow.providers.amazon.aws.example_dags.example_google_api_to_s3_transfer_basic' (exception was: ModuleNotFoundError(\"No module named 'boto3'\",))\"\r\n[airflow.providers.amazon.aws.example_dags.example_google_api_to_s3_transfer_basic] Entry is false for \r\nModule \"airflow.providers.amazon.aws.example_dags.example_google_api_to_s3_transfer_advanced\" could not be loaded. Full source will not be available. \"error importing 'airflow.providers.amazon.aws.example_dags.example_google_api_to_s3_transfer_advanced' (exception was: ModuleNotFoundError(\"No module named 'boto3'\",))\"\r\n[airflow.providers.amazon.aws.example_dags.example_google_api_to_s3_transfer_advanced] Entry is false for \r\n[airflow.providers.amazon.aws.example_dags.example_google_api_to_s3_transfer_advanced] Entry is false for \r\n[airflow.providers.amazon.aws.example_dags.example_google_api_to_s3_transfer_advanced] Entry is false for \r\n[airflow.providers.amazon.aws.example_dags.example_google_api_to_s3_transfer_advanced] Entry is false for \r\n\r\n==================================================\r\n```\r\n\r\n\r\n",
        "createdAt" : "2020-08-18T16:04:51Z",
        "updatedAt" : "2020-08-18T17:13:38Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      },
      {
        "id" : "ed3422c0-f036-4d59-9ddc-4f42902a662b",
        "parentId" : "5796a4e1-36bf-45d0-a5f4-7aa87ea15376",
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "I pasted a wrong (previous output) currently You have a lot of problems like that ^^ unless you have the [al] extras installed . I really think breeze is the only option for contributors to build the docs properly.",
        "createdAt" : "2020-08-18T16:14:36Z",
        "updatedAt" : "2020-08-18T17:13:38Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      }
    ],
    "commit" : "36dff7a6a335de120d8f8acba2d62e1b28fa4d81",
    "line" : 3,
    "diffHunk" : "@@ -1,1 +15,19 @@# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\nimport argparse\nimport ast"
  },
  {
    "id" : "dc0b15f6-95ce-44fa-be01-6be958cc9ba8",
    "prId" : 12161,
    "prUrl" : "https://github.com/apache/airflow/pull/12161#pullrequestreview-525662805",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "34caa03e-ebf9-4b3e-a608-128b531dfdf6",
        "parentId" : null,
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "For spell checking, we should also load this plugin.",
        "createdAt" : "2020-11-07T16:05:44Z",
        "updatedAt" : "2020-11-07T16:05:44Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      }
    ],
    "commit" : "66633f4bab327ab07fd19959e971f6d28234a804",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +604,608 @@    \"\"\"\n    extensions_to_use = [\n        'provider_init_hack',\n        \"sphinxarg.ext\",\n        \"autoapi.extension\","
  }
]