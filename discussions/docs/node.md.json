[
  {
    "id" : "0fcc57ac-e202-469c-a64d-bed18f35ad50",
    "prId" : 10302,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2ae3122e-72e1-415c-a2a4-a553fba645cc",
        "parentId" : null,
        "authorId" : "e7e1d709-e9c3-47a5-91f2-ed86958679e2",
        "body" : "```yaml ?\n",
        "createdAt" : "2015-06-24T20:07:51Z",
        "updatedAt" : "2015-06-24T20:07:51Z",
        "lastEditedBy" : "e7e1d709-e9c3-47a5-91f2-ed86958679e2",
        "tags" : [
        ]
      },
      {
        "id" : "0f573172-1f2f-415a-8abc-3608737c4187",
        "parentId" : "2ae3122e-72e1-415c-a2a4-a553fba645cc",
        "authorId" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "body" : "fixed.\n",
        "createdAt" : "2015-06-24T22:58:29Z",
        "updatedAt" : "2015-06-24T22:58:29Z",
        "lastEditedBy" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "tags" : [
        ]
      }
    ],
    "commit" : "832f1b8165cc1dcd9088d0006c0f849c6e59645a",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +164,168 @@If you want to explicitly reserve resources for non-Pod processes, you can create a placeholder\npod.  Use the following template:\n```\napiVersion: v1\nkind: Pod"
  },
  {
    "id" : "9aec72f7-00e4-44c0-bc49-0d1705d79507",
    "prId" : 8505,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "159795ff-b5a7-486f-a97d-67a59e608c17",
        "parentId" : null,
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "The description is still true. The only small thing is that kubernetes does not need to keep checking -- node (kubelet) will post the status if it becomes ready.\n",
        "createdAt" : "2015-05-20T19:51:22Z",
        "updatedAt" : "2015-05-20T20:34:55Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "165e2edc-71dc-4461-af2e-e0576d4b4898",
        "parentId" : "159795ff-b5a7-486f-a97d-67a59e608c17",
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "I think you can keep it unchanged for now. \n",
        "createdAt" : "2015-05-20T19:51:37Z",
        "updatedAt" : "2015-05-20T20:34:55Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "fa10509a7f6166304e966d82217520ba329b89cc",
    "line" : 39,
    "diffHunk" : "@@ -1,1 +80,84 @@ignored for any cluster activity, until it becomes valid. Note that Kubernetes\nwill keep invalid node unless explicitly deleted by client, and it will keep\nchecking to see if it becomes valid.\n\nCurrently, there are two agents that interacts with Kubernetes node interface:"
  },
  {
    "id" : "70d9deaa-7d19-43b2-a191-9a6ab6c474ee",
    "prId" : 3790,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e8f37ad1-f61a-421e-ae11-855ab525eb49",
        "parentId" : null,
        "authorId" : "a6409368-42e0-44a9-bf79-9d3042ac3b65",
        "body" : "I might be confused here, but shouldn't the example you listed below is opposite of what you claimed above? Shouldn't be {\"kind\": \"Reachable\", \"status\": \"Full\"}, {\"kind\": \"Ready\", \"status\": \"None\"}?\n",
        "createdAt" : "2015-01-26T18:32:47Z",
        "updatedAt" : "2015-01-26T18:56:19Z",
        "lastEditedBy" : "a6409368-42e0-44a9-bf79-9d3042ac3b65",
        "tags" : [
        ]
      },
      {
        "id" : "8bf590c5-6a11-40d8-9437-bdabb5c0d800",
        "parentId" : "e8f37ad1-f61a-421e-ae11-855ab525eb49",
        "authorId" : "7116d1ae-39f7-4e5d-81a9-1bcb75ebd909",
        "body" : "Ah, good catch, updated.\n",
        "createdAt" : "2015-01-26T18:55:41Z",
        "updatedAt" : "2015-01-26T18:56:19Z",
        "lastEditedBy" : "7116d1ae-39f7-4e5d-81a9-1bcb75ebd909",
        "tags" : [
        ]
      }
    ],
    "commit" : "04ed23a7b34bccb029b3bfeb37d37238980eca1e",
    "line" : 40,
    "diffHunk" : "@@ -1,1 +45,49 @@will make a comprehensive scheduling decision based on the information. Node\ncondition is represented as a json object. For example, the following conditions\nmean the node is reachable from its cluster, but not ready to accept pods:\n```json\n\"conditions\": ["
  },
  {
    "id" : "584ee2dc-63e9-471a-ae7b-0f4d575d5176",
    "prId" : 2498,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c3800ac6-e7b6-4c8a-9f8b-a1892a4d5456",
        "parentId" : null,
        "authorId" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "body" : "will it continue to check, so that I can define a node, and then add it a week later, and then pods can go to it?  I thinks so?\n",
        "createdAt" : "2014-11-20T19:24:52Z",
        "updatedAt" : "2014-11-20T23:13:35Z",
        "lastEditedBy" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "tags" : [
        ]
      },
      {
        "id" : "0ab6981a-99c3-4071-8c0a-aba0ae3254b0",
        "parentId" : "c3800ac6-e7b6-4c8a-9f8b-a1892a4d5456",
        "authorId" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "body" : "Okay, there is a place further down where you can explain this.\n",
        "createdAt" : "2014-11-20T19:30:20Z",
        "updatedAt" : "2014-11-20T23:13:35Z",
        "lastEditedBy" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "tags" : [
        ]
      }
    ],
    "commit" : "1bbd63513fe051e7e7268e0cff62753023907abe",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +22,26 @@or from your physical or virtual machines. What this means is that when\nKubernetes creates a node, it only creates a representation for the node.\nAfter creation, Kubernetes will check whether the node is valid or not.\nFor example, if you try to create a node from the following content:\n```json"
  }
]