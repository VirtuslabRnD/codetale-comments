[
  {
    "id" : "b4cac17e-726f-447d-af20-8480e569d79c",
    "prId" : 14765,
    "prUrl" : "https://github.com/apache/airflow/pull/14765#pullrequestreview-611646473",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "491cb545-3478-4866-a2f7-3a4c81580862",
        "parentId" : null,
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "This section seems to have a lot of repetition with the following sections but I will update that in the next PR.",
        "createdAt" : "2021-03-13T23:42:13Z",
        "updatedAt" : "2021-03-16T20:59:37Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      }
    ],
    "commit" : "5936e0c6280fdf3ce48fc066331237b3c9f5abf8",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +26,30 @@from the variables used to build the image starting with ``AIRFLOW``.\n\nThe image entrypoint works as follows:\n\n* In case the user is not \"airflow\" (with undefined user id) and the group id of the user is set to ``0`` (root),"
  },
  {
    "id" : "d9a0068a-90ca-448d-a412-c40710b437cb",
    "prId" : 14765,
    "prUrl" : "https://github.com/apache/airflow/pull/14765#pullrequestreview-611646520",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3215c0f7-f751-4cc1-a48e-0249b902f889",
        "parentId" : null,
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "This is not true for the image for Airflow 2.0. For Airflow 2.o, we use `airflow db check` command.",
        "createdAt" : "2021-03-13T23:43:29Z",
        "updatedAt" : "2021-03-16T20:59:37Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      }
    ],
    "commit" : "5936e0c6280fdf3ce48fc066331237b3c9f5abf8",
    "line" : 40,
    "diffHunk" : "@@ -1,1 +38,42 @@* The working directory is ``/opt/airflow`` by default.\n\n* If ``AIRFLOW__CORE__SQL_ALCHEMY_CONN`` variable is passed to the container and it is either mysql or postgres\n  SQL alchemy connection, then the connection is checked and the script waits until the database is reachable.\n  If ``AIRFLOW__CORE__SQL_ALCHEMY_CONN_CMD`` variable is passed to the container, it is evaluated as a"
  },
  {
    "id" : "4b18de67-918b-4275-b3e9-dbe9b4186531",
    "prId" : 14765,
    "prUrl" : "https://github.com/apache/airflow/pull/14765#pullrequestreview-611646544",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "386a0230-3356-4402-b291-f25cf0ef527a",
        "parentId" : null,
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "It is not supported. ",
        "createdAt" : "2021-03-13T23:43:56Z",
        "updatedAt" : "2021-03-16T20:59:37Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      }
    ],
    "commit" : "5936e0c6280fdf3ce48fc066331237b3c9f5abf8",
    "line" : 199,
    "diffHunk" : "@@ -1,1 +197,201 @@* ``postgres://``            - default port 5432\n* ``mysql://``               - default port 3306\n* ``sqlite://``\n\nIn case of SQLite backend, there is no connection to establish and waiting is skipped."
  },
  {
    "id" : "0232e837-db44-44a0-b5d2-cb2f21007ad6",
    "prId" : 14765,
    "prUrl" : "https://github.com/apache/airflow/pull/14765#pullrequestreview-611647072",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "71f0e70c-6fdf-4fb8-bbaf-8bfe044dc235",
        "parentId" : null,
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "This page contains a combination of content from several sections, incl., Using the production image,  Actions executed at image start.  It's not the best idea, but seems sufficient for now. I would like to write the \"Using the production image\" section a little differently so that the user can actually run Airflow after reading this page and that there would not be so much duplicate information.",
        "createdAt" : "2021-03-13T23:57:12Z",
        "updatedAt" : "2021-03-16T20:59:37Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      }
    ],
    "commit" : "5936e0c6280fdf3ce48fc066331237b3c9f5abf8",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +16,20 @@    under the License.\n\nEntrypoint\n==========\n"
  },
  {
    "id" : "64aed006-df92-47f1-8742-779df33206e0",
    "prId" : 15162,
    "prUrl" : "https://github.com/apache/airflow/pull/15162#pullrequestreview-627459468",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "424d8a65-e7c4-468e-aaaa-3331316e052a",
        "parentId" : null,
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "```suggestion\r\nsuch an arbitrary user in (``/etc/passwd``) and make it's home directory point to ``/home/airflow``.\r\n```",
        "createdAt" : "2021-04-03T13:53:52Z",
        "updatedAt" : "2021-04-03T23:59:48Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      }
    ],
    "commit" : "b6ef788370c04a448c969785ec76fb89f6d27d20",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +98,102 @@\nIn order to accommodate a number of external libraries and projects, Airflow will automatically create\nsuch an arbitrary user in (`/etc/passwd`) and make it's home directory point to ``/home/airflow``.\nMany of 3rd-party libraries and packages require home directory of the user to be present, because they\nneed to write some cache information there, so such a dynamic creation of a user is necessary."
  },
  {
    "id" : "c7a3017b-1f9a-43b8-9719-85c2b445271f",
    "prId" : 16170,
    "prUrl" : "https://github.com/apache/airflow/pull/16170#pullrequestreview-671870060",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "547e8faf-11a0-4acb-810c-601c97f5e202",
        "parentId" : null,
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "I think it is worth adding a warning that not all dependencies can be installed this way. In case of problems, we should consider using the standard method.",
        "createdAt" : "2021-05-30T22:30:42Z",
        "updatedAt" : "2021-05-30T22:30:50Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      },
      {
        "id" : "b4bb4f2a-f652-46a8-a7f6-bc1f169570b9",
        "parentId" : "547e8faf-11a0-4acb-810c-601c97f5e202",
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "True.",
        "createdAt" : "2021-05-30T22:32:44Z",
        "updatedAt" : "2021-05-30T22:32:44Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      }
    ],
    "commit" : "150a48d46b2a7c5b8111f51ecaaac266d6734c83",
    "line" : 131,
    "diffHunk" : "@@ -1,1 +266,270 @@The variable should contain a list of requirements that should be installed additionally when entering\nthe containers. Note that this option slows down starting of Airflow as every time any container starts\nit must install new packages. Therefore this option should only be used for testing. When testing is\nfinished, you should create your custom image with dependencies baked in.\n"
  },
  {
    "id" : "bf93e18a-512e-4664-b3b2-19b69bd9cd37",
    "prId" : 16170,
    "prUrl" : "https://github.com/apache/airflow/pull/16170#pullrequestreview-671870244",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "752caade-14db-47f2-9ad4-178e6e3c7890",
        "parentId" : null,
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "```suggestion\r\nfinished, you should create your custom image with dependencies baked in.\r\n\r\nNot all dependencies can be installed this way. Dependencies that require compiling cannot be installed\r\nbecause they need ``build-essentials`` installed. In case you get compilation problem, you should revert\r\nto ``customizing image`` - this is the only good way to install dependencies that require compilation. \r\n```",
        "createdAt" : "2021-05-30T22:35:41Z",
        "updatedAt" : "2021-05-30T22:35:41Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      }
    ],
    "commit" : "150a48d46b2a7c5b8111f51ecaaac266d6734c83",
    "line" : 132,
    "diffHunk" : "@@ -1,1 +267,271 @@the containers. Note that this option slows down starting of Airflow as every time any container starts\nit must install new packages. Therefore this option should only be used for testing. When testing is\nfinished, you should create your custom image with dependencies baked in.\n\nExample:"
  },
  {
    "id" : "5ea26828-4ffe-4197-a14a-3d7301c1b827",
    "prId" : 16935,
    "prUrl" : "https://github.com/apache/airflow/pull/16935#pullrequestreview-704429602",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4f00757f-4a67-43b1-b7d2-1e1ae2d902b0",
        "parentId" : null,
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "Libraries are not removed very often, but are updated very often, and the new version may not be compatible,  thus destroying the environment",
        "createdAt" : "2021-07-12T16:04:40Z",
        "updatedAt" : "2021-07-12T16:04:40Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      },
      {
        "id" : "f104c946-125a-4c77-b857-6d0c5adc1e55",
        "parentId" : "4f00757f-4a67-43b1-b7d2-1e1ae2d902b0",
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "Yeah. But you can protect from that by specifying `==version` (which makes an easy counter-argument here like \"always specify all dependencies and make them with `==`\"). \r\n\r\nHowever. there is no way to protect even if you specify `==version` and someone removes that version. Which already happened to Airflow at least once that I rememeber. And this is exactly what happened with leftpad.\r\n\r\nI really think that it's the \"removal\" of dependency which is far more disastrous and the REAL reason why we should never use this variable in production.",
        "createdAt" : "2021-07-12T18:40:42Z",
        "updatedAt" : "2021-07-12T18:40:42Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      }
    ],
    "commit" : "a94d80f67111450cf00eecd6acd2d9d4a071a5d5",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +270,274 @@    get restarted, when your machines in K8S cluster get restarted. In a K8S Cluster those events can happen\n    literally any time. This opens you up to a serious vulnerability where your production environment\n    might be brought down by a single dependency being removed from PyPI - or even dependency of your\n    dependency. This means that you put your production service availability in hands of 3rd-party developers.\n    At any time, any moment including weekends and holidays those 3rd party developers might bring your"
  }
]