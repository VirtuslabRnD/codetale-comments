[
  {
    "id" : "b789c857-aeaa-4c5f-a187-d034384dabf5",
    "prId" : 4894,
    "prUrl" : "https://github.com/apache/airflow/pull/4894#pullrequestreview-215293216",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a590dcc5-0a68-4fef-8b31-58d1db1527fc",
        "parentId" : null,
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "Asf license notice needed",
        "createdAt" : "2019-03-14T09:17:26Z",
        "updatedAt" : "2019-03-29T11:03:13Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "f5f162b9-51e0-4add-8c24-da454b275c38",
        "parentId" : "a590dcc5-0a68-4fef-8b31-58d1db1527fc",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "I updated a PR.",
        "createdAt" : "2019-03-16T00:56:28Z",
        "updatedAt" : "2019-03-29T11:03:13Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      }
    ],
    "commit" : "72ed97592070d1a3b732929ceb24e7ff8ac085c4",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +22,26 @@\nfrom os import path\n\nfrom docutils import nodes\nfrom docutils.parsers.rst import directives"
  },
  {
    "id" : "e4b54341-b70b-4215-869d-668217cdddc1",
    "prId" : 4894,
    "prUrl" : "https://github.com/apache/airflow/pull/4894#pullrequestreview-215295047",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "04aa57dd-b37a-42a8-85a7-437f0dbb6609",
        "parentId" : null,
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "Can we do this via subclassing LiteralInclude so we don't have to have so much code here?",
        "createdAt" : "2019-03-14T13:55:44Z",
        "updatedAt" : "2019-03-29T11:03:13Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "da4bb076-324a-47d9-bf79-6f1459531213",
        "parentId" : "04aa57dd-b37a-42a8-85a7-437f0dbb6609",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "I know that we have a lot of code, but it is not possible to extend this class. The logic of this directive is contained in one method. There is no method that we can extend to add new expected  behavior.",
        "createdAt" : "2019-03-14T14:33:17Z",
        "updatedAt" : "2019-03-29T11:03:13Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      },
      {
        "id" : "f6d7a939-b8cb-442b-844f-2baa6852b53f",
        "parentId" : "04aa57dd-b37a-42a8-85a7-437f0dbb6609",
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "If we subclass we at least don't have to set the `option_spec` and other class properties.",
        "createdAt" : "2019-03-14T21:42:12Z",
        "updatedAt" : "2019-03-29T11:03:13Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "35834bd3-e88c-4ca8-82d4-4c7217b5c1ae",
        "parentId" : "04aa57dd-b37a-42a8-85a7-437f0dbb6609",
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "Which version did you copy from? There are odd/subtle differences from the version linked to",
        "createdAt" : "2019-03-14T21:45:57Z",
        "updatedAt" : "2019-03-29T11:03:13Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "37e2b340-1e7a-4346-af86-b2ac007b6855",
        "parentId" : "04aa57dd-b37a-42a8-85a7-437f0dbb6609",
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "Unless I'm missing something (I've only had a _quick_ look) I think we should be able to do this as something like:\r\n\r\n```python\r\n    def run(self):\r\n        _, filename = self.env.relfn2path(self.arguments[0])\r\n        retnode, = super().run()\r\n        container_node = nodes.container(\"\", literal_block=True, classes=[\"example-block-wrapper\"])\r\n        container_node += example_header(filename=filename)\r\n        container_node += retnode\r\n        retnode = container_node\r\n        return [retnode]\r\n```\r\n\r\n?",
        "createdAt" : "2019-03-14T21:50:05Z",
        "updatedAt" : "2019-03-29T11:03:13Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "40f310fd-fbab-4b66-a2fd-75b34d953ffc",
        "parentId" : "04aa57dd-b37a-42a8-85a7-437f0dbb6609",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "I based on, If I remember correctly.:\r\nhttps://github.com/sphinx-doc/sphinx/blob/v1.8.3/sphinx/directives/code.py\r\nI've automatically formatted the code to be compatible with my company's requirements. We use black. Changes from my team are undergoing internal review. During it, we had a lot of discussion about style, which forced us to introduce automatic formatting of the code.\r\n\r\nI made changes in the `option_spec` field. If I extend this class then I will have to make identical modifications programmatically. It is worth noting that the value of this field is closely related to the implementation. If the value of the field changes, then the implementation must also be changed.",
        "createdAt" : "2019-03-14T21:58:52Z",
        "updatedAt" : "2019-03-29T11:03:13Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      },
      {
        "id" : "215b528e-518e-4c3e-9227-898e48e30bfa",
        "parentId" : "04aa57dd-b37a-42a8-85a7-437f0dbb6609",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "My changes affect these lines:\r\nhttps://github.com/sphinx-doc/sphinx/blob/v1.8.3/sphinx/directives/code.py#L456-L462",
        "createdAt" : "2019-03-14T22:01:16Z",
        "updatedAt" : "2019-03-29T11:03:13Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      },
      {
        "id" : "a8f34b0b-6d9b-4f1f-b27f-7d5223124250",
        "parentId" : "04aa57dd-b37a-42a8-85a7-437f0dbb6609",
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "(I figured there was some auto-formatting going on)\r\n\r\nA link to that would more helpful than master :)\r\n\r\nThe only change in option_spec is the removal of `caption` right? Basically there is a lot of code here that we haven't really changed, and it's hard to work out what is special and what isn't.",
        "createdAt" : "2019-03-14T22:21:28Z",
        "updatedAt" : "2019-03-29T11:03:13Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "58e0268d-35c6-4807-a642-96813b9c5d73",
        "parentId" : "04aa57dd-b37a-42a8-85a7-437f0dbb6609",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "I will prepare a detailed description of the changes that I made in the code of this class tomorrow.",
        "createdAt" : "2019-03-14T22:26:36Z",
        "updatedAt" : "2019-03-29T11:03:13Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      },
      {
        "id" : "8b43a816-1f5f-4f22-85c5-76203ae1c2c2",
        "parentId" : "04aa57dd-b37a-42a8-85a7-437f0dbb6609",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "Can you wait with review? I did not think that this change might require such a discussion",
        "createdAt" : "2019-03-14T22:31:35Z",
        "updatedAt" : "2019-03-29T11:03:13Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      },
      {
        "id" : "935add67-c559-4ebe-b856-6794317c7129",
        "parentId" : "04aa57dd-b37a-42a8-85a7-437f0dbb6609",
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "I might be over thinking it - still, a comment in the source  would help future Us.",
        "createdAt" : "2019-03-14T22:52:24Z",
        "updatedAt" : "2019-03-29T11:03:13Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      },
      {
        "id" : "3271a953-8fb1-4f35-b8ff-c06d6b88bbee",
        "parentId" : "04aa57dd-b37a-42a8-85a7-437f0dbb6609",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "Diff changes: https://pastebin.com/W4eHex7C\r\nLine 1-5: I changed the name of the class. No comemnts\r\nLine 6-15: I updated description of class. No comments\r\nLine 16-17: I remove caption. Now, we use a filename as a caption allways.\r\nLine 18-19 At the time of writing PR, there were no validation types in the project.\r\nLine 20-25: There are two changes here.\r\na) I dropped support for translating the message. We do not support translations in the project.\r\nb) I pass a arguments to logger. Reason available: https://github.com/apache/airflow/pull/4804\r\nLine 26-38. \r\na) I dropped caption support. It was conflicting with the new header.\r\nb) I added a new header.  This uses the file name as the header content.\r\n\r\n> Unless I'm missing something (I've only had a quick look) I think we should be able to do this as something like:\r\n\r\nI did not find the official API to make a distinction.  This is just one class and I decided it would be better to copy it. I've done research on how other people implement extensions for this directive and other people also copy the full class code\r\nhttps://github.com/FabriceSalvaire/sphinx-getthecode/blob/master/sphinxcontrib/getthecode.py#L27-L32",
        "createdAt" : "2019-03-16T01:29:19Z",
        "updatedAt" : "2019-03-29T11:03:13Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      }
    ],
    "commit" : "72ed97592070d1a3b732929ceb24e7ff8ac085c4",
    "line" : 44,
    "diffHunk" : "@@ -1,1 +42,46 @@\n\nclass ExampleInclude(SphinxDirective):\n    \"\"\"\n    Like ``.. literalinclude:: ``, but it does not support caption option."
  }
]