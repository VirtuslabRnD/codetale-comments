[
  {
    "id" : "f7e6e6e6-4bc4-476a-9897-2e7502e7eed7",
    "prId" : 13660,
    "prUrl" : "https://github.com/apache/airflow/pull/13660#pullrequestreview-574907225",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ab121855-9eff-4db5-8ffd-c24f2c747d2c",
        "parentId" : null,
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "It would be great to mention in the documentation that you can place dags, plugin python code and see logs in tose subdirectories of folder where the docker compse is. Those subdirectories should also be .dockerignored in case someone runs the docker-compose from this folder.",
        "createdAt" : "2021-01-14T04:40:32Z",
        "updatedAt" : "2021-01-25T21:07:06Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      },
      {
        "id" : "01cf62d5-483d-4f27-a2d4-709d34de3fa7",
        "parentId" : "ab121855-9eff-4db5-8ffd-c24f2c747d2c",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "I added description to ``docker-compose.yaml`` section.",
        "createdAt" : "2021-01-24T08:35:24Z",
        "updatedAt" : "2021-01-25T21:07:06Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      }
    ],
    "commit" : "e79799f6bcb4d1b4c069ee54596d6ca7fc1366da",
    "line" : 53,
    "diffHunk" : "@@ -1,1 +51,55 @@    AIRFLOW__CORE__LOAD_EXAMPLES: 'true'\n  volumes:\n    - ./dags:/opt/airflow/dags\n    - ./logs:/opt/airflow/logs\n    - ./plugins:/opt/airflow/plugins"
  },
  {
    "id" : "e8290554-870d-445d-bb32-0cdb33cb8da9",
    "prId" : 13660,
    "prUrl" : "https://github.com/apache/airflow/pull/13660#pullrequestreview-574907179",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "12ce6d32-dbdc-42c3-9623-b32f9f7fcb22",
        "parentId" : null,
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "This docker-compose does not work with docker-compose version 1.25.3 which is default version on Linux 'debian buster' LTS. You need to manually instal 1.27.4 which supports anchors.\r\n\r\nWhen you try to ruin in the 1.25.3 you get this message that does not explain much:\r\n\r\n```\r\nERROR: The Compose file './docker-compose.yaml' is invalid because:\r\nInvalid top-level property \"x-airflow-common\". Valid top-level sections for this Compose file are: version, services, networks, volumes, and extensions starting with \"x-\".\r\n\r\nYou might be seeing this error because you're using the wrong Compose file version. Either specify a supported version (e.g \"2.2\" or \"3.3\") and place your service definitions under the `services` key, or omit the `version` key and place your service definitions at the root of the file to use version 1.\r\nFor more on the Compose file format versions, see https://docs.docker.com/compose/compose-file/\r\nservices.airflow-scheduler.depends_on contains an invalid type, it should be an array\r\nservices.airflow-webserver.depends_on contains an invalid type, it should be an array\r\nservices.airflow-worker.depends_on contains an invalid type, it should be an array\r\nservices.flower.depends_on contains an invalid type, it should be an array\r\n```\r\n\r\nIt would be great if we find a way to provide better message explaining that minimum supported version is X (wihich one is it ) and directing people to installation/upgrade instructions. At the very least - if we cannot do it we should clearly state it in the docs that this is prerequisite and explain that this message means they have to upgrade docker-compose.",
        "createdAt" : "2021-01-14T04:47:05Z",
        "updatedAt" : "2021-01-25T21:07:06Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      },
      {
        "id" : "c8b38d85-e09e-470f-97e6-8eac4d702f2a",
        "parentId" : "12ce6d32-dbdc-42c3-9623-b32f9f7fcb22",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "Thanks for pointing this out. I added a description to the \"Before you begin\" section.",
        "createdAt" : "2021-01-24T08:34:50Z",
        "updatedAt" : "2021-01-25T21:07:06Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      }
    ],
    "commit" : "e79799f6bcb4d1b4c069ee54596d6ca7fc1366da",
    "line" : 40,
    "diffHunk" : "@@ -1,1 +38,42 @@---\nversion: '3'\nx-airflow-common:\n  &airflow-common\n  image: ${AIRFLOW_IMAGE_NAME:-apache/airflow:master-python3.8}"
  },
  {
    "id" : "6e8663d1-cc3f-4037-a8c7-c4506ae4b825",
    "prId" : 13660,
    "prUrl" : "https://github.com/apache/airflow/pull/13660#pullrequestreview-574907272",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9f6d3246-33fa-459f-bfb8-abafb81079df",
        "parentId" : null,
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "Unfortunately this does not work on linux.\r\n\r\nWhen you run the \"db init' command you get this error:\r\n\r\n```\r\nUnable to load the config, contains a configuration error.\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.6/pathlib.py\", line 1248, in mkdir\r\n    self._accessor.mkdir(self, mode)\r\n  File \"/usr/local/lib/python3.6/pathlib.py\", line 387, in wrapped\r\n    return strfunc(str(pathobj), *args)\r\nFileNotFoundError: [Errno 2] No such file or directory: '/opt/airflow/logs/scheduler/2021-01-14'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.6/logging/config.py\", line 565, in configure\r\n    handler = self.configure_handler(handlers[name])\r\n  File \"/usr/local/lib/python3.6/logging/config.py\", line 738, in configure_handler\r\n    result = factory(**kwargs)\r\n  File \"/home/airflow/.local/lib/python3.6/site-packages/airflow/utils/log/file_processor_handler.py\", line 46, in __init__\r\n    Path(self._get_log_directory()).mkdir(parents=True, exist_ok=True)\r\n  File \"/usr/local/lib/python3.6/pathlib.py\", line 1252, in mkdir\r\n    self.parent.mkdir(parents=True, exist_ok=True)\r\n  File \"/usr/local/lib/python3.6/pathlib.py\", line 1248, in mkdir\r\n    self._accessor.mkdir(self, mode)\r\n  File \"/usr/local/lib/python3.6/pathlib.py\", line 387, in wrapped\r\n    return strfunc(str(pathobj), *args)\r\nPermissionError: [Errno 13] Permission denied: '/opt/airflow/logs/scheduler'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/airflow/.local/bin/airflow\", line 5, in <module>\r\n    from airflow.__main__ import main\r\n  File \"/home/airflow/.local/lib/python3.6/site-packages/airflow/__init__.py\", line 46, in <module>\r\n    settings.initialize()\r\n  File \"/home/airflow/.local/lib/python3.6/site-packages/airflow/settings.py\", line 432, in initialize\r\n    LOGGING_CLASS_PATH = configure_logging()\r\n  File \"/home/airflow/.local/lib/python3.6/site-packages/airflow/logging_config.py\", line 62, in configure_logging\r\n    raise e\r\n  File \"/home/airflow/.local/lib/python3.6/site-packages/airflow/logging_config.py\", line 57, in configure_logging\r\n    dictConfig(logging_config)\r\n  File \"/usr/local/lib/python3.6/logging/config.py\", line 802, in dictConfig\r\n    dictConfigClass(config).configure()\r\n  File \"/usr/local/lib/python3.6/logging/config.py\", line 573, in configure\r\n    '%r: %s' % (name, e))\r\nValueError: Unable to configure handler 'processor': [Errno 13] Permission denied: '/opt/airflow/logs/scheduler'\r\n```\r\n\r\nThe reason is that the \"dags\"  \"logs\" and \"plugins\" folder are created as \"root\" owned automatically and they seem to be not writeable for airflow process. \r\n\r\nAlso after running it \"dags\",  \"logs\" and \"plugins\"  folder are created with the \"root\" user which makes it difiicult for the user to manage it (they have to run `sudo` to delete the folders and files created.  Idealy those folders should be created with the host user or there should be an easy way to delete them. \r\n\r\n```\r\nquick-start-docker+ 2 Â± ls -la\r\ntotal 80\r\ndrwxrwxr-x  5 jarek jarek  4096 sty 14 05:39 .\r\ndrwxr-xr-x 10 jarek jarek 12288 sty 14 05:30 ..\r\ndrwxr-xr-x  2 root  root   4096 sty 14 05:39 dags\r\n-rw-rw-r--  1 jarek jarek  2767 sty 14 05:30 docker-compose.yaml\r\n-rw-rw-r--  1 jarek jarek  4889 sty 14 05:30 docker.rst\r\n-rw-rw-r--  1 jarek jarek   991 sty 14 05:30 index.rst\r\n-rw-rw-r--  1 jarek jarek  3809 sty 14 05:30 local.rst\r\ndrwxr-xr-x  2 root  root   4096 sty 14 05:39 logs\r\ndrwxr-xr-x  2 root  root   4096 sty 14 05:39 plugins\r\n```\r\n\r\nIn order to fix it, you can utillise the fact that airflow is openshift compatible. Airflow inside production docker file can be run as \"any\" user providing that group of that user is \"0\".  This should allowe you to run all commands as \"HOST\" user with group \"0\" but I think it also requires to make sure that the folders are created with appropriate HOST user automatically.\r\n\r\nSee https://docs.openshift.com/container-platform/4.1/openshift_images/create-images.html \"support arbitrary user ids\" chapter. \r\n",
        "createdAt" : "2021-01-14T04:56:15Z",
        "updatedAt" : "2021-01-25T21:07:06Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      },
      {
        "id" : "3de0bf2b-22d5-4cd1-9826-2b76b610b288",
        "parentId" : "9f6d3246-33fa-459f-bfb8-abafb81079df",
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "Also this makes it very hard to work on the docker-compose from the sources because once those folders are created as root you cannot switch branches until you delete them.",
        "createdAt" : "2021-01-14T05:05:33Z",
        "updatedAt" : "2021-01-25T21:07:06Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      },
      {
        "id" : "f6f41419-16d7-4642-8991-891ca0990888",
        "parentId" : "9f6d3246-33fa-459f-bfb8-abafb81079df",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "I improved compatibility with Linux. See: \r\nhttps://github.com/apache/airflow/pull/13660/commits/d1fdb571fd679eea3154b352f88ecf773f54e814",
        "createdAt" : "2021-01-24T08:36:07Z",
        "updatedAt" : "2021-01-25T21:07:06Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      }
    ],
    "commit" : "e79799f6bcb4d1b4c069ee54596d6ca7fc1366da",
    "line" : 54,
    "diffHunk" : "@@ -1,1 +52,56 @@  volumes:\n    - ./dags:/opt/airflow/dags\n    - ./logs:/opt/airflow/logs\n    - ./plugins:/opt/airflow/plugins\n  user: \"${AIRFLOW_UID:-50000}:${AIRFLOW_GID:-50000}\""
  },
  {
    "id" : "ae382b28-2bfc-430d-9ce1-b3ddeb5addc3",
    "prId" : 13660,
    "prUrl" : "https://github.com/apache/airflow/pull/13660#pullrequestreview-574915294",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "40fa25e2-16e1-4ba9-b410-89ad6ec3f3a2",
        "parentId" : null,
        "authorId" : "0d4fd7c4-f8ab-4371-acfe-b9cca6decaf5",
        "body" : "I'm quite confused - why do we keep docker-compose in docs directory?",
        "createdAt" : "2021-01-24T10:15:12Z",
        "updatedAt" : "2021-01-25T21:07:06Z",
        "lastEditedBy" : "0d4fd7c4-f8ab-4371-acfe-b9cca6decaf5",
        "tags" : [
        ]
      },
      {
        "id" : "46dfee4e-5d59-497a-8379-3414e50b5b8a",
        "parentId" : "40fa25e2-16e1-4ba9-b410-89ad6ec3f3a2",
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "Because this is an example for end-users. It's not intended to be run as regular part of development process.",
        "createdAt" : "2021-01-24T10:18:48Z",
        "updatedAt" : "2021-01-25T21:07:06Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      },
      {
        "id" : "cafd0577-69a6-4623-ae8a-23aee4a96e7c",
        "parentId" : "40fa25e2-16e1-4ba9-b410-89ad6ec3f3a2",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "Because this file is part of the documentation package, to make it easier to release with each new documentation release. We should not link to files that are in Github or other places in the official documentation, if we describe the official installation.\r\n\r\n> PUBLICATION\r\n> Projects SHALL publish official releases and SHALL NOT publish unreleased materials outside the development community.\r\n\r\n>During the process of developing software and preparing a release, various packages are made available to the development community for testing purposes. Projects MUST direct outsiders towards official releases rather than raw source repositories, nightly builds, snapshots, release candidates, or any other similar packages. The only people who are supposed to know about such developer resources are individuals actively participating in development or following the dev list and thus aware of the conditions placed on unreleased materials.\r\n\r\nIf we are going to publish this file elsewhere, we will have to have a separate publishing process for this file. As for the directory, it is the same directory as `docker.rst`, so as not to create additional confusion. Now the entire guide is in one directory.\r\n",
        "createdAt" : "2021-01-24T10:21:59Z",
        "updatedAt" : "2021-01-25T21:07:06Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      }
    ],
    "commit" : "e79799f6bcb4d1b4c069ee54596d6ca7fc1366da",
    "line" : 1,
    "diffHunk" : "@@ -1,1 +-1,3 @@# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information"
  },
  {
    "id" : "75dfd116-ab58-49d2-916f-de3707cb0e15",
    "prId" : 15484,
    "prUrl" : "https://github.com/apache/airflow/pull/15484#pullrequestreview-642049610",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2a68ff01-77a4-4a38-b622-87d0ac35cd31",
        "parentId" : null,
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "I am afraid this is used as \"downloadable\" piece of code, so we should not replace it here. Maybe we should instead add `stable` tag in DockerHub and refer to it here.",
        "createdAt" : "2021-04-22T09:55:42Z",
        "updatedAt" : "2021-04-22T10:11:58Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      },
      {
        "id" : "80c1ee61-b114-496b-934c-b865d0d0d022",
        "parentId" : "2a68ff01-77a4-4a38-b622-87d0ac35cd31",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "Downloadable files are available at airflow.apache.org. Here we have the source code which may contain dynamically generated values. We shouldn't encourage end-users to download this file, so I don't see the problem.",
        "createdAt" : "2021-04-22T10:01:11Z",
        "updatedAt" : "2021-04-22T10:11:58Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      },
      {
        "id" : "0d70f008-c763-4c01-9436-6e6e7ed3eaa7",
        "parentId" : "2a68ff01-77a4-4a38-b622-87d0ac35cd31",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "Why would the user want to download the file from there instead of airflow.apache.org?",
        "createdAt" : "2021-04-22T10:02:09Z",
        "updatedAt" : "2021-04-22T10:11:58Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      },
      {
        "id" : "7447ba42-d84e-4443-952e-1d05a4225cfe",
        "parentId" : "2a68ff01-77a4-4a38-b622-87d0ac35cd31",
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "I am afraid this is what our documentation encourages user to currently:\r\n\r\nhttps://airflow.apache.org/docs/apache-airflow/stable/start/docker.html directs user to:\r\n\r\nhttps://airflow.apache.org/docs/apache-airflow/stable/docker-compose.yaml",
        "createdAt" : "2021-04-22T10:08:59Z",
        "updatedAt" : "2021-04-22T10:11:58Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      },
      {
        "id" : "02455494-1b53-40ac-943f-6169ba40b584",
        "parentId" : "2a68ff01-77a4-4a38-b622-87d0ac35cd31",
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "Unless it is also replaced there of course via sphinx - but my impression was that files such as .yaml are not modified by sphinx on-the-fly (am I wrong?) ",
        "createdAt" : "2021-04-22T10:12:00Z",
        "updatedAt" : "2021-04-22T10:18:37Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      },
      {
        "id" : "f25ea169-56d7-433b-a848-3147de5e1eb7",
        "parentId" : "2a68ff01-77a4-4a38-b622-87d0ac35cd31",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "Can you look at changes in docs/conf.py file?",
        "createdAt" : "2021-04-22T10:21:09Z",
        "updatedAt" : "2021-04-22T10:21:09Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      },
      {
        "id" : "d510dfac-1573-44e3-99b6-f975bbbb4f03",
        "parentId" : "2a68ff01-77a4-4a38-b622-87d0ac35cd31",
        "authorId" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "body" : "Yes, one of the custom plugins replaces `|version|` in the downloadable example files https://github.com/apache/airflow/pull/15484/files#diff-4cd7637805a295ed7c8e92bbd346f5dcbc0e8cbee512f67838f264075904430bR21-R33",
        "createdAt" : "2021-04-22T10:46:55Z",
        "updatedAt" : "2021-04-22T10:46:55Z",
        "lastEditedBy" : "f73f66ab-2657-4a50-be7a-2ca3ca98c202",
        "tags" : [
        ]
      }
    ],
    "commit" : "ed9f5c23410727e5e80279409e841c22f9e5ffc6",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +40,44 @@x-airflow-common:\n  &airflow-common\n  image: ${AIRFLOW_IMAGE_NAME:-apache/airflow:|version|}\n  environment:\n    &airflow-common-env"
  },
  {
    "id" : "25aa7373-81f4-4983-9766-852d1f64409c",
    "prId" : 16255,
    "prUrl" : "https://github.com/apache/airflow/pull/16255#pullrequestreview-675634434",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "515cb15f-eb1e-4adc-a08a-ac82fcac8e76",
        "parentId" : null,
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "This container does not run by default\r\nhttps://docs.docker.com/compose/profiles/",
        "createdAt" : "2021-06-03T19:04:50Z",
        "updatedAt" : "2021-06-03T19:04:50Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      }
    ],
    "commit" : "aa074981f7429fd05ed8388daf91767c2579b597",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +153,157 @@  airflow-cli:\n    <<: *airflow-common\n    profiles:\n      - debug\n    environment:"
  },
  {
    "id" : "9e4b4bfa-bafc-4df6-8c74-261cea175ed9",
    "prId" : 17484,
    "prUrl" : "https://github.com/apache/airflow/pull/17484#pullrequestreview-724913438",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "73bf6f3f-a1b9-4652-9cae-1634c7ff60cc",
        "parentId" : null,
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "Should the `$` character be escaped?",
        "createdAt" : "2021-08-08T13:25:16Z",
        "updatedAt" : "2021-08-08T13:25:16Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      },
      {
        "id" : "d30a00b9-c1a1-4f94-88c4-91f3a0933cf1",
        "parentId" : "73bf6f3f-a1b9-4652-9cae-1634c7ff60cc",
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "Nope. Here we are checking the docker env - it will be filled before the script is passed to docker.",
        "createdAt" : "2021-08-08T15:21:37Z",
        "updatedAt" : "2021-08-08T15:21:37Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      }
    ],
    "commit" : "d6607a47dc5a55eebd8a17e2ecc36025f678b0dc",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +163,167 @@          exit 1\n        fi\n        if [[ -z \"${AIRFLOW_UID}\" ]]; then\n          echo -e \"\\033[1;31mERROR!!!: AIRFLOW_UID not set!\\e[0m\"\n          echo \"Please follow these instructions to set AIRFLOW_UID and AIRFLOW_GID environment variables:"
  },
  {
    "id" : "af510cb6-3567-47e7-88ef-43e59f347a71",
    "prId" : 17484,
    "prUrl" : "https://github.com/apache/airflow/pull/17484#pullrequestreview-724932736",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "92b916f5-f84a-46cd-be33-f33acbac82dd",
        "parentId" : null,
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "What do you think about moving these checks to entrypoint or Airflow CLI? Now this file is a little cluttered and less legible, so it is more difficult for beginners to maintain and understand. Ideally, the docker-compose file should only contain environment configurations and only run other scripts, not the scripts itself.",
        "createdAt" : "2021-08-08T13:32:31Z",
        "updatedAt" : "2021-08-08T13:32:32Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      },
      {
        "id" : "137286e3-79f6-4455-998d-ba7d6b5e36f1",
        "parentId" : "92b916f5-f84a-46cd-be33-f33acbac82dd",
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "I do not think it belongs there. It's 'docker-compose' limitation as a whole, not airflow. It really belongs here, in the quick-start compose, because it strictly relates to docker-compose problems. Similiarly as we have a check in breeze (there for example we have 40GB limitation for disk, because we expect that dev environment will need more disk for various image versions, logs from tests etc.). I do not see how it fits airflow CLI.",
        "createdAt" : "2021-08-08T15:26:47Z",
        "updatedAt" : "2021-08-08T16:03:34Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      },
      {
        "id" : "6fc828fe-85ec-4791-a235-2bfea2d9d769",
        "parentId" : "92b916f5-f84a-46cd-be33-f33acbac82dd",
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "I think you'd look at it differently if you (like I did ) had to answer ~ 20 people who had similar problems in issues, slack discussion, stack overflow. \r\n\r\nNo matter how hard you try, and how much \"clean\" you would like to have the docker-compose quick-start, the \"self-maintenance\" should be much more important even than future maintainability of that script.\r\n\r\nPeople WILL NOT read documentation, people WILL NOT check prerequisites. People WILL NOT read or run checks that are marked as \"before you begin\". People WILL NOT run command that is written as \"initialize environment\". \r\n\r\nPeople really want simply do this:\r\n* search for docker-compose\r\n* download the docker-compose file that they will find on our page\r\n* run `docker-compose up` \r\n* at most they will modify airflow version embedded (and very likely put 2.0.2 or similar there as they will be afraid of trying something newer and they already have this version in their production installation) .\r\n\r\nThey will do it without reading any manuals or documentation. If it won't work - they will not read any instructions or troubleshooting or prerequisites or manuals, they will open issue entitled \"Airflow does not work with docker-compose\". If we are lucky - they will copy&paste output of the \"up\" command.\r\n\r\nI am exaggerating here of course (a bit). There are people who will do the stuff above, but the problem is that there are enough people who won't who end up in opening issues that could be solved by reading the docs. And note - it's not a complaint. This is a fact of life that we have to embrace and find a way to cope with it without spending to much time on repetitively telling people the same story - basically  \"Read The Friendly Manual\",\r\n\r\nThis change aims to stop the flood of those issues coming - hoping that either:\r\n\r\na) those who will attempt to copy*paste the output will actually read it while copying and fix the problems on their own\r\nb) we will see exactly in the issue posted what problem they had (and will be able to respond immediately and close such issues without spending time on trying to understand what's going on).\r\n\r\nSo this is really about protecting my and other committers time and energy. Not about future maintainability - it's not even at all about future \"production ready\" docker-composers that are possibly going to approach it differently. This is STRICTLY about the \"Quick-Start Docker-Compose\" and making it self-serviceable.\r\n\r\nIn order to \"protect\" against those kind of users - whatever we implement needs to be part of the compose file they download and needs to be resistant to allow any version of Airflow released (From 2 series). Full stop.",
        "createdAt" : "2021-08-08T15:37:29Z",
        "updatedAt" : "2021-08-08T16:09:37Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      },
      {
        "id" : "288afd57-f470-4dce-81f9-ce0eb4acca20",
        "parentId" : "92b916f5-f84a-46cd-be33-f33acbac82dd",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "I am not sure if we have to make sure this file is compatible with older versions. We have already introduced changes that made this file incompatible with Airflow 2.0.0, so if the user uses it with this version, they will not succeed. Also, I'm not sure if taking care of backward compatibility for things that are marked as non-production / exemplary is something necessary. \r\n\r\nFrom what I have observed, most users who have a problem with the environment also have a problem with changing the default Docker image, so if with the default Docker image this check will work, it will be sufficient. However, even if they are able to change the Docker image, they first check if the default file works for them without any modification.\r\n\r\nWhat do you think about moving this script into a separate script within the image and then running it if it is detected?\r\n```\r\n[[ -f /docker-compos-check ]] && . /docker-compos-check\r\n```\r\nThis will allow us to have more control over this code because each new image update will be able to update this script. The docker image is also versioned, so we will have more control on how this script looks like. The docker-compose file is under the full control of the user, and we cannot expect that in a future release the user will update the docker-compose file to update this script. ",
        "createdAt" : "2021-08-08T16:37:17Z",
        "updatedAt" : "2021-08-08T16:37:17Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      },
      {
        "id" : "8183bd55-df2d-4aa4-8088-6a82f9f45b4a",
        "parentId" : "92b916f5-f84a-46cd-be33-f33acbac82dd",
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "Again. This has nothing to do with Airflow. The check is strictly Quick-start docker-compose related, not image. It makes no sense to add it to the image. \r\n\r\nIt's the docker-compose with airflow + celery + Postgres that has those requirements. This is a deployment requirement. \r\n\r\nAnd we DO have to support other versions. For example 2.0.2 is still released by MWAA and Google Compos just released 2.1.2 (and they will not release a new version for a while). And people are trying exactly those versions.\r\n\r\nI need a solution that we will put out with 2.1.3 that will work with those versions for the months to come. I see no other way as to add it to docker-compose. I don't want to answer any more any of similar issues in the next weeks and months.\r\n\r\nDo you see other way how we can achieve that?\r\n",
        "createdAt" : "2021-08-08T17:07:14Z",
        "updatedAt" : "2021-08-08T17:08:42Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      },
      {
        "id" : "1ba65199-491e-4c62-aa38-c3fc601164fe",
        "parentId" : "92b916f5-f84a-46cd-be33-f33acbac82dd",
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "> This will allow us to have more control over this code because each new image update will be able to update this script. The docker image is also versioned, so we will have more control on how this script looks like. The docker-compose file is under the full control of the user, and we cannot expect that in a future release the user will update the docker-compose file to update this script.\r\n\r\nI specifically do not want the users to modify this code. It is a \"quick start\", the main purpose of that code (and the docker compose) is to guide the user while they are \"quick-starting\" airflow. Once they got through that first gate - I do not care. they can remove that code, they can change it, they can modify it. I do not care. This code is not going to be maintained- neither by us, nor the user. I am specifically trying to address ONE case only. \r\n\r\na) users downloads the compose\r\nb) changes version of airflow to another\r\nc) runs `docker-compose up`\r\nd) sees errors and is guided how to fix them (rather than getting airflow killed, no-access etc.).\r\n\r\nOnce the user is past that step, I do not really care what happen next to be perfectly honest. If the user modifies the compose file - they are on their own (because we do not support docker-compose beyond quick start).\r\n\r\nI REALLY want to be able to address the issue of users:\r\n\r\n \"I downloaded the docker-compose from YOUR page, I only modified the version of Airflow and it DOES NOT WORK\".\r\n\r\nThis happened numerous times already - in exactly this wording and exactly this expectations from the users.  They expect the quick-start to work out-of-the-box. And this is \"reasonable\" expectation. They do not read the docs - this is not nice, but it's a fact of life. I simply want to respond to the user's expectations and let them know how to solve the problems they have (without me or other committers having to explain it over and over).",
        "createdAt" : "2021-08-08T17:34:22Z",
        "updatedAt" : "2021-08-08T17:44:49Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      },
      {
        "id" : "88e12592-98c1-454b-9e93-edb20f78d716",
        "parentId" : "92b916f5-f84a-46cd-be33-f33acbac82dd",
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "Also what adds to that is that when the docs are not strictly followed, the errors are REALLY misleading - airflow killed, no access, permision error, directories created as root that cannot be deleted without sudo etc. etc. To a new user they indeed indicate that Airflow DOES NOT WORK. \r\n\r\nThis is very unrealistic expectation from the new users to give them \"quick-start\" solution that requires them to understand what happens inside, how Airflow works, and why some errors appear. They won't understand it. They are just learning airflow. \r\n\r\nThe \"quick-start\" should literally guide the user and either explicitly tell the user what to do or prevent the users from making mistakes. And it's the \"quick-start\" property, not \"airflow image\" property nor \"airflow\" property. That's why it MUST be part of the \"quick-start docker compose\" and not any other component.\r\n\r\nI fully agree that this kind of script should not be part of \"production\" docker-compose. But I am 100% sure it should be part of \"quick-start\" one.",
        "createdAt" : "2021-08-08T17:48:54Z",
        "updatedAt" : "2021-08-08T17:54:17Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      },
      {
        "id" : "756b1ee8-8298-4765-b842-13ddefcf53fe",
        "parentId" : "92b916f5-f84a-46cd-be33-f33acbac82dd",
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "> made this file incompatible with Airflow 2.0.0,\r\n\r\nWhat are the changes @mik-laj ? Is it only about the optional _PIP_INSTALL variables? Or any other changes that make it actually not work with airflow 2.0.0? I think if there is a minimum version support, then we should also make it part of this check - for the same reason I explained above. This is often the first \"contact\" with airflow for our users - one that should be \"quick\" and \"painless\". So we should also fail hard if we are using incompatible airflow version.\r\n\r\nIs there a minimum version supported now ? I would like to add it as another check then. Let me try it.\r\n",
        "createdAt" : "2021-08-08T17:58:44Z",
        "updatedAt" : "2021-08-08T17:58:44Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      },
      {
        "id" : "4e634889-8925-416b-8b81-dfce80278cda",
        "parentId" : "92b916f5-f84a-46cd-be33-f33acbac82dd",
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "Added min version check to the script.",
        "createdAt" : "2021-08-08T20:02:57Z",
        "updatedAt" : "2021-08-08T20:02:57Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      }
    ],
    "commit" : "d6607a47dc5a55eebd8a17e2ecc36025f678b0dc",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +148,152 @@    <<: *airflow-common\n    entrypoint: /bin/bash\n    command:\n      - -c\n      - |"
  },
  {
    "id" : "8e4abc4e-5103-4533-b104-9adf61685852",
    "prId" : 17484,
    "prUrl" : "https://github.com/apache/airflow/pull/17484#pullrequestreview-724913230",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "444ed4c2-26fc-46f7-9a8b-36dcd1685a29",
        "parentId" : null,
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "```suggestion\r\n        mkdir -p /sources/{logs,dags,plugins}\r\n```\r\nFor consistency",
        "createdAt" : "2021-08-08T13:34:59Z",
        "updatedAt" : "2021-08-08T13:34:59Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      },
      {
        "id" : "1db049ce-080e-4102-8fd3-acd8650f5128",
        "parentId" : "444ed4c2-26fc-46f7-9a8b-36dcd1685a29",
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "This won't work this way. It's bash globbing rule. It will only work if the files are created already - it's the same as putting * in file name. ",
        "createdAt" : "2021-08-08T15:19:05Z",
        "updatedAt" : "2021-08-08T15:19:05Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      }
    ],
    "commit" : "d6607a47dc5a55eebd8a17e2ecc36025f678b0dc",
    "line" : 62,
    "diffHunk" : "@@ -1,1 +195,199 @@          echo \"   https://airflow.apache.org/docs/apache-airflow/stable/start/docker.html#before-you-begin\"\n        fi\n        mkdir -p /sources/logs /sources/dags /sources/plugins\n        chown -R \"${AIRFLOW_UID}:${AIRFLOW_GID}\" /sources/{logs,dags,plugins}\n        exec /entrypoint airflow version"
  }
]