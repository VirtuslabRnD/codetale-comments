[
  {
    "id" : "8e264fcd-a279-457c-a62b-e4cc1048c07a",
    "prId" : 1687,
    "prUrl" : "https://github.com/typelevel/cats-effect/pull/1687#pullrequestreview-641205947",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4fff0d2b-af94-4956-97d1-dd65f46d4b08",
        "parentId" : null,
        "authorId" : "3f1176f1-791a-4566-8749-308589834168",
        "body" : "Another dispatcher example illustrating the case where it isn't immediately `.use`d might be helpful to illustrate the lifecycle mentioned above. My concern is that the current example easily becomes a footgun if someone were to modify it for a case where they didn't immediately block with `.never`.\r\n\r\n```scala\r\ntrait Consumer[A] {\r\n  def onNext(a: A): Unit\r\n}\r\n```\r\n\r\n``` scala\r\n// CE2\r\ndef consumer[F[_]: Effect, A](handler: A => F[Unit]): Consumer[A] =\r\n  new Consumer[A] {\r\n    def onNext(a: A) = handler(a).toIO.unsafeRunSync()\r\n  }\r\n```\r\n\r\n```scala\r\n// CE3\r\ndef consumer[F[_]: Async, A](handler: A => F[Unit]): Resource[F, Consumer[A]] =\r\n  Dispatcher[F] map { dispatcher =>\r\n    new Consumer[A] {\r\n      def onNext(a: A) = dispatcher.unsafeRunSync(handler(a))\r\n    }\r\n  }\r\n```\r\n\r\n```scala\r\n// CE3 alternative\r\ndef consumer[F[_], A](dispatcher: Dispatcher[F], handler: A => F[Unit]): Consumer[A] =\r\n  new Consumer[A] {\r\n    def onNext(a: A) = dispatcher.unsafeRunSync(handler(a))\r\n  }\r\n```",
        "createdAt" : "2021-04-11T16:40:42Z",
        "updatedAt" : "2021-04-26T16:46:39Z",
        "lastEditedBy" : "3f1176f1-791a-4566-8749-308589834168",
        "tags" : [
        ]
      },
      {
        "id" : "9f39ffe6-8f44-4c31-9abc-58184e088f36",
        "parentId" : "4fff0d2b-af94-4956-97d1-dd65f46d4b08",
        "authorId" : "df537f5b-c150-4710-8eb4-40b8b59c3bcc",
        "body" : "actually, I'll just use that. It's a much simpler example.",
        "createdAt" : "2021-04-21T15:02:12Z",
        "updatedAt" : "2021-04-26T16:46:39Z",
        "lastEditedBy" : "df537f5b-c150-4710-8eb4-40b8b59c3bcc",
        "tags" : [
        ]
      }
    ],
    "commit" : "34ab9fe90e0cf5ec4b0d2e5c9313eee1def14806",
    "line" : 481,
    "diffHunk" : "@@ -1,1 +479,483 @@    }\n  }\n```\n\nThe `Resource` produced by this method will manage the lifetime of the `Dispatcher` instance - while it's open,"
  }
]