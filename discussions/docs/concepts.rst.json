[
  {
    "id" : "b1108a24-6984-4391-929c-cdd41310e888",
    "prId" : 4779,
    "prUrl" : "https://github.com/apache/airflow/pull/4779#pullrequestreview-242659707",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e9c7f31a-33bc-48cf-bcb9-167c1681cff1",
        "parentId" : null,
        "authorId" : "8c680a1a-3743-44ea-9ab0-a9f70d8fd124",
        "body" : "Add this to let users know that we recommend set relationships using bitshift operators",
        "createdAt" : "2019-05-28T13:15:18Z",
        "updatedAt" : "2019-05-28T13:17:25Z",
        "lastEditedBy" : "8c680a1a-3743-44ea-9ab0-a9f70d8fd124",
        "tags" : [
        ]
      }
    ],
    "commit" : "37c27da23ebcea1ec6ae2357a31e1f52da43b7ab",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +187,191 @@\nWe recommend you setting operator relationships with bitshift operators rather than ``set_upstream()``\nand ``set_downstream()``.\n\nTraditionally, operator relationships are set with the ``set_upstream()`` and"
  },
  {
    "id" : "0f550722-6e4c-4a1d-8d9b-ba51035c85ab",
    "prId" : 4779,
    "prUrl" : "https://github.com/apache/airflow/pull/4779#pullrequestreview-242659707",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f8945ca9-ab4b-4017-8677-f0877325f75c",
        "parentId" : null,
        "authorId" : "8c680a1a-3743-44ea-9ab0-a9f70d8fd124",
        "body" : "Let users know `>>` could work on `list[operatos]` as upstream",
        "createdAt" : "2019-05-28T13:16:30Z",
        "updatedAt" : "2019-05-28T13:17:25Z",
        "lastEditedBy" : "8c680a1a-3743-44ea-9ab0-a9f70d8fd124",
        "tags" : [
        ]
      }
    ],
    "commit" : "37c27da23ebcea1ec6ae2357a31e1f52da43b7ab",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +252,256 @@.. code:: python\n\n    op1 >> [op2, op3] >> op4\n\nis equivalent to:"
  },
  {
    "id" : "2771d271-b7ca-410c-b31d-d3d246ef12f8",
    "prId" : 4805,
    "prUrl" : "https://github.com/apache/airflow/pull/4805#pullrequestreview-209854462",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "df4b868d-ac9f-42af-b284-0fa158d9c869",
        "parentId" : null,
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "If we have this file in repo, we should include it instead of copy it's content. It's allow to keep example allways working and fresh. \r\nSee: \r\nhttp://www.sphinx-doc.org/en/1.5/markup/code.html#directive-literalinclude\r\nhttps://github.com/apache/airflow/blob/master/docs/howto/operator.rst",
        "createdAt" : "2019-03-01T17:10:51Z",
        "updatedAt" : "2019-03-01T17:10:52Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      },
      {
        "id" : "e5e4b965-ac5d-4383-9cee-bbcd75b9a3c0",
        "parentId" : "df4b868d-ac9f-42af-b284-0fa158d9c869",
        "authorId" : "56b181b5-2e4f-4c48-b5f9-715cb1204f19",
        "body" : "This is a very good idea. But there is no such folder for those scripts. What do you think if we make a dir under docs, like /docs/example_dags/branch_without_trigger.py ? ",
        "createdAt" : "2019-03-01T19:11:57Z",
        "updatedAt" : "2019-03-01T19:11:57Z",
        "lastEditedBy" : "56b181b5-2e4f-4c48-b5f9-715cb1204f19",
        "tags" : [
        ]
      },
      {
        "id" : "608d431e-88f9-4faa-b3ae-6f7d2ca3e418",
        "parentId" : "df4b868d-ac9f-42af-b284-0fa158d9c869",
        "authorId" : "8c680a1a-3743-44ea-9ab0-a9f70d8fd124",
        "body" : "@cixuuz I don't think create a py file iin docs is a good idea.",
        "createdAt" : "2019-03-02T02:55:33Z",
        "updatedAt" : "2019-03-02T02:55:34Z",
        "lastEditedBy" : "8c680a1a-3743-44ea-9ab0-a9f70d8fd124",
        "tags" : [
        ]
      },
      {
        "id" : "cfbf1bed-fce1-4c04-8083-5692025b0c24",
        "parentId" : "df4b868d-ac9f-42af-b284-0fa158d9c869",
        "authorId" : "56b181b5-2e4f-4c48-b5f9-715cb1204f19",
        "body" : "Considering this kind of script is only for demo and no other script storing in .py, I agree with u that not doing so. Thank you!",
        "createdAt" : "2019-03-02T03:02:55Z",
        "updatedAt" : "2019-03-02T03:02:55Z",
        "lastEditedBy" : "56b181b5-2e4f-4c48-b5f9-715cb1204f19",
        "tags" : [
        ]
      },
      {
        "id" : "f18f9aad-a964-436a-808c-dbaf6628c2f1",
        "parentId" : "df4b868d-ac9f-42af-b284-0fa158d9c869",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "Files can be stored in the `airflow/example_dags` directory or `airflow/contrib/example_dags` directory. Files from this directory can be automatically tested to confirm their correctness.\r\nExample: \r\n```\r\n.. literalinclude:: ../../airflow/example_dags/example_python_operator.py\r\n    :language: python\r\n    :start-after: [START howto_operator_python_kwargs]\r\n    :end-before: [END howto_operator_python_kwargs]\r\n```\r\nSource: https://raw.githubusercontent.com/apache/airflow/master/docs/howto/operator.rst\r\n\r\nOther scripts are stored in py files.",
        "createdAt" : "2019-03-02T04:41:10Z",
        "updatedAt" : "2019-03-02T04:44:20Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      },
      {
        "id" : "86fd2a13-719e-4e59-8c31-0cbe02977582",
        "parentId" : "df4b868d-ac9f-42af-b284-0fa158d9c869",
        "authorId" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "body" : "I will try to extract all examples to separate files and create automatic tests. ",
        "createdAt" : "2019-03-02T04:56:14Z",
        "updatedAt" : "2019-03-02T04:56:14Z",
        "lastEditedBy" : "07638d17-cc8b-40a4-abdc-7b39759362ab",
        "tags" : [
        ]
      },
      {
        "id" : "00efe624-50d7-45c9-b821-7777a2911275",
        "parentId" : "df4b868d-ac9f-42af-b284-0fa158d9c869",
        "authorId" : "38d80383-47b9-439a-9efe-9282f79f8b2f",
        "body" : "@mik-laj , I don't think this should be a blocker as we have done it for other doc files as well. If we want to extract this file from doc and put it in example folder, we could do it in a later pr. ",
        "createdAt" : "2019-03-02T05:46:57Z",
        "updatedAt" : "2019-03-02T05:46:58Z",
        "lastEditedBy" : "38d80383-47b9-439a-9efe-9282f79f8b2f",
        "tags" : [
        ]
      }
    ],
    "commit" : "80dbf9a0612d3fe1f2029c7a7c529ff57fea3c6b",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +762,766 @@.. code:: python\n\n  #dags/branch_without_trigger.py\n  import datetime as dt  \n  "
  },
  {
    "id" : "97ec2a18-6847-4eee-84a5-1164dd537e40",
    "prId" : 5970,
    "prUrl" : "https://github.com/apache/airflow/pull/5970#pullrequestreview-346909504",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0c4955e4-4fa0-4b82-95c0-fb2323a09d42",
        "parentId" : null,
        "authorId" : "e29ffafb-ac51-434b-b9e0-af262caae1ee",
        "body" : "I think this should also be added to the Updating.md (see my comment).",
        "createdAt" : "2020-01-22T10:04:47Z",
        "updatedAt" : "2020-01-23T09:04:28Z",
        "lastEditedBy" : "e29ffafb-ac51-434b-b9e0-af262caae1ee",
        "tags" : [
        ]
      },
      {
        "id" : "a97b4f0d-c6a2-409f-9117-b24499ba1975",
        "parentId" : "0c4955e4-4fa0-4b82-95c0-fb2323a09d42",
        "authorId" : "e29ffafb-ac51-434b-b9e0-af262caae1ee",
        "body" : "That is something users should be aware of when updating Airflow. Don't you think?",
        "createdAt" : "2020-01-22T10:05:47Z",
        "updatedAt" : "2020-01-23T09:04:28Z",
        "lastEditedBy" : "e29ffafb-ac51-434b-b9e0-af262caae1ee",
        "tags" : [
        ]
      },
      {
        "id" : "7e594fde-1000-41fd-a46a-8044ea14dbab",
        "parentId" : "0c4955e4-4fa0-4b82-95c0-fb2323a09d42",
        "authorId" : "c25957e2-1132-4c48-a536-3824307fd862",
        "body" : "Agree with @feluelle , let's add this to Updating.md\r\n\r\nGood work @m1racoli ",
        "createdAt" : "2020-01-22T10:12:59Z",
        "updatedAt" : "2020-01-23T09:04:28Z",
        "lastEditedBy" : "c25957e2-1132-4c48-a536-3824307fd862",
        "tags" : [
        ]
      },
      {
        "id" : "a07b20f2-5362-4f3d-ae0d-8cdde49ff389",
        "parentId" : "0c4955e4-4fa0-4b82-95c0-fb2323a09d42",
        "authorId" : "ae5763a9-2cba-40ab-a391-799b1e892737",
        "body" : "Good point and thanks! Will update Updating.md.",
        "createdAt" : "2020-01-22T21:18:26Z",
        "updatedAt" : "2020-01-23T09:04:28Z",
        "lastEditedBy" : "ae5763a9-2cba-40ab-a391-799b1e892737",
        "tags" : [
        ]
      }
    ],
    "commit" : "d600f6ee6e3941d58d80473e0b95aa6c0ba7e87f",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +1059,1063 @@a cascaded skip from ``task1``. ``task4`` is downstream of ``task1`` and\n``task2``, but it will not be skipped, since its ``trigger_rule`` is set to\n``all_done``.\n\n.. image:: img/latest_only_with_trigger.png"
  },
  {
    "id" : "740aacc4-9404-4c56-acb6-bd9d46959790",
    "prId" : 6999,
    "prUrl" : "https://github.com/apache/airflow/pull/6999#pullrequestreview-337998509",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2d89a0a2-3b42-4bce-b980-437a46d18fe9",
        "parentId" : null,
        "authorId" : "892a0dfc-e8a5-4923-93ad-99df2c9c34db",
        "body" : "While this is mentioned later on, it is a concept that is often misunderstood (even the tutorial had to emphasise this). I still have colleagues who don't realize a DAG is actually code...",
        "createdAt" : "2020-01-03T09:23:50Z",
        "updatedAt" : "2020-01-06T05:12:00Z",
        "lastEditedBy" : "892a0dfc-e8a5-4923-93ad-99df2c9c34db",
        "tags" : [
        ]
      }
    ],
    "commit" : "ee9ba2387037840f0268cd08186a8fef113f5233",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +35,39 @@\nA DAG is defined in a Python script, which represents the DAGs structure (tasks\nand their dependencies) as code.\n\nFor example, a simple DAG could consist of three tasks: A, B, and C. It could"
  },
  {
    "id" : "75f52f0d-7a21-4680-bbb4-e1a30d968eb2",
    "prId" : 6999,
    "prUrl" : "https://github.com/apache/airflow/pull/6999#pullrequestreview-337998664",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "718c9c85-4e1c-4e3d-a027-7645a1af9293",
        "parentId" : null,
        "authorId" : "892a0dfc-e8a5-4923-93ad-99df2c9c34db",
        "body" : "Added section for DAG Runs and execution_date, as I feel they are important concepts and give a lot of context.",
        "createdAt" : "2020-01-03T09:24:18Z",
        "updatedAt" : "2020-01-06T05:12:00Z",
        "lastEditedBy" : "892a0dfc-e8a5-4923-93ad-99df2c9c34db",
        "tags" : [
        ]
      }
    ],
    "commit" : "ee9ba2387037840f0268cd08186a8fef113f5233",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +119,123 @@.. _concepts:dagruns:\n\nDAG Runs\n========\n"
  },
  {
    "id" : "16382198-ec94-4fab-89b9-46c71d998f91",
    "prId" : 6999,
    "prUrl" : "https://github.com/apache/airflow/pull/6999#pullrequestreview-338415455",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8831237d-3921-424a-ba70-de88f4b98e27",
        "parentId" : null,
        "authorId" : "892a0dfc-e8a5-4923-93ad-99df2c9c34db",
        "body" : "Moved Task and Task Instance up (before Operator) as they are kind of more high level concepts. We start off talking about workflow / dependencies / orchestration, so rather continue with that and then dive lower into operator details.\r\nI feel this more clearly shows what a dependency looks like and what is upstream/downstream.",
        "createdAt" : "2020-01-03T09:25:41Z",
        "updatedAt" : "2020-01-06T05:12:00Z",
        "lastEditedBy" : "892a0dfc-e8a5-4923-93ad-99df2c9c34db",
        "tags" : [
        ]
      },
      {
        "id" : "672b96e9-f376-4afe-8820-0bb7401c52f7",
        "parentId" : "8831237d-3921-424a-ba70-de88f4b98e27",
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "❤️ ",
        "createdAt" : "2020-01-05T18:51:38Z",
        "updatedAt" : "2020-01-06T05:12:00Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      }
    ],
    "commit" : "ee9ba2387037840f0268cd08186a8fef113f5233",
    "line" : 54,
    "diffHunk" : "@@ -1,1 +147,151 @@.. _concepts:tasks:\n\nTasks\n=====\n"
  },
  {
    "id" : "d588a343-78ee-4e9d-b847-87b3691422f7",
    "prId" : 6999,
    "prUrl" : "https://github.com/apache/airflow/pull/6999#pullrequestreview-338415455",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e912edd1-f066-41c3-83a3-4e614a2d6bf1",
        "parentId" : null,
        "authorId" : "892a0dfc-e8a5-4923-93ad-99df2c9c34db",
        "body" : "Not sure how you feel about this note - but I think differentiating between previous and upstream is important for a new user especially. The concepts of upstream / downstream task didn't sink in for me at first and explicitly calling them out from previous would have helped me immediately understand.",
        "createdAt" : "2020-01-03T09:30:56Z",
        "updatedAt" : "2020-01-06T05:12:00Z",
        "lastEditedBy" : "892a0dfc-e8a5-4923-93ad-99df2c9c34db",
        "tags" : [
        ]
      },
      {
        "id" : "c74d6151-d81e-4d36-847b-5bb28373ab45",
        "parentId" : "e912edd1-f066-41c3-83a3-4e614a2d6bf1",
        "authorId" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "body" : "❤️ ",
        "createdAt" : "2020-01-05T18:52:59Z",
        "updatedAt" : "2020-01-06T05:12:00Z",
        "lastEditedBy" : "e8563344-32ea-4c07-9731-a2fed8d2edf2",
        "tags" : [
        ]
      }
    ],
    "commit" : "ee9ba2387037840f0268cd08186a8fef113f5233",
    "line" : 115,
    "diffHunk" : "@@ -1,1 +208,212 @@Here, *previous* refers to the logical past/prior ``execution_date``, that runs independently of other runs,\nand *upstream* refers to a dependency within the same run and having the same ``execution_date``.\n\n.. note::\n    The Airflow documentation sometimes refers to *previous* instead of *upstream* in places, and vice-versa."
  }
]