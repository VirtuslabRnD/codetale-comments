[
  {
    "id" : "7797a2ac-4252-4894-b4c4-7b8774a84c10",
    "prId" : 13580,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a2d792e9-d43f-483f-bffe-39443a8558ce",
        "parentId" : null,
        "authorId" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "body" : "Is there a reason not to call this an 'extension' ?  We use nouns for things like this elsewhere in the system (viz: 'plugin').\n",
        "createdAt" : "2015-11-14T04:09:26Z",
        "updatedAt" : "2015-11-25T16:19:55Z",
        "lastEditedBy" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "tags" : [
        ]
      },
      {
        "id" : "882ad01c-49f0-41d9-9c9e-faccfa6b429b",
        "parentId" : "a2d792e9-d43f-483f-bffe-39443a8558ce",
        "authorId" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "body" : "Although I'm sure it wasn't the original intention, one reason to call it an \"extender\" might be so that we can reserve the term \"extension\" for the unified extension architecture we will hopefully develop eventually (to cover all call-out extensions like this one, admission controller extension, etc.).\n",
        "createdAt" : "2015-11-14T09:25:51Z",
        "updatedAt" : "2015-11-25T16:19:55Z",
        "lastEditedBy" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "tags" : [
        ]
      }
    ],
    "commit" : "cadc24e9fd7f2bccc972df4d67985aa33a4cd823",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +32,36 @@<!-- END MUNGE: UNVERSIONED_WARNING -->\n\n# Scheduler extender\n\nThere are three ways to add new scheduling rules (predicates and priority functions) to Kubernetes: (1) by adding these rules to the scheduler and recompiling (described here: https://github.com/kubernetes/kubernetes/blob/master/docs/devel/scheduler.md), (2) implementing your own scheduler process that runs instead of, or alongside of, the standard Kubernetes scheduler, (3) implementing a \"scheduler extender\" process that the standard Kubernetes scheduler calls out to as a final pass when making scheduling decisions."
  },
  {
    "id" : "f2280793-4476-4124-95c2-f0d6bda41c94",
    "prId" : 13580,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3e23194a-9d26-4661-a08c-cc55591fe82a",
        "parentId" : null,
        "authorId" : "bb4cf218-381a-40ad-ac0c-0c2c66685cd4",
        "body" : "AFAICT, we can improve the docs by separating it into two sub-sections\n- Motivation\n- Technical details/approaches. This part could be further separated into one about algorithm/workflow and another talking about API changes?\n",
        "createdAt" : "2015-11-15T06:11:18Z",
        "updatedAt" : "2015-11-25T16:19:55Z",
        "lastEditedBy" : "bb4cf218-381a-40ad-ac0c-0c2c66685cd4",
        "tags" : [
        ]
      },
      {
        "id" : "37128f4a-7ea5-4307-a053-8ce1fe077b38",
        "parentId" : "3e23194a-9d26-4661-a08c-cc55591fe82a",
        "authorId" : "bb4cf218-381a-40ad-ac0c-0c2c66685cd4",
        "body" : "Is it common to lay out goals and non-goals in k8s docs? Another nice thing to talk about is that lay out goals such as:\n- Allow external process to access generic scheduler API, including filtering and prioritization. The ordering is k8s scheduler goes first, then extension...\n",
        "createdAt" : "2015-11-15T06:19:00Z",
        "updatedAt" : "2015-11-25T16:19:55Z",
        "lastEditedBy" : "bb4cf218-381a-40ad-ac0c-0c2c66685cd4",
        "tags" : [
        ]
      },
      {
        "id" : "bdda5f0e-0658-49f5-b90e-33057e6f570a",
        "parentId" : "3e23194a-9d26-4661-a08c-cc55591fe82a",
        "authorId" : "367dd7b1-86fa-48f7-aa20-489e5d4b6a8d",
        "body" : "Thanks for the feedback, will address this separately in another PR.\n",
        "createdAt" : "2015-11-16T23:05:49Z",
        "updatedAt" : "2015-11-25T16:19:55Z",
        "lastEditedBy" : "367dd7b1-86fa-48f7-aa20-489e5d4b6a8d",
        "tags" : [
        ]
      }
    ],
    "commit" : "cadc24e9fd7f2bccc972df4d67985aa33a4cd823",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +34,38 @@# Scheduler extender\n\nThere are three ways to add new scheduling rules (predicates and priority functions) to Kubernetes: (1) by adding these rules to the scheduler and recompiling (described here: https://github.com/kubernetes/kubernetes/blob/master/docs/devel/scheduler.md), (2) implementing your own scheduler process that runs instead of, or alongside of, the standard Kubernetes scheduler, (3) implementing a \"scheduler extender\" process that the standard Kubernetes scheduler calls out to as a final pass when making scheduling decisions.\n\nThis document describes the third approach. This approach is needed for use cases where scheduling decisions need to be made on resources not directly managed by the standard Kubernetes scheduler. The extender helps make scheduling decisions based on such resources. (Note that the three approaches are not mutually exclusive.)"
  },
  {
    "id" : "f280559a-9837-44fb-9038-dba2acd872a7",
    "prId" : 13580,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fc6274ac-a845-48cc-99b6-49db1a724261",
        "parentId" : null,
        "authorId" : "bb4cf218-381a-40ad-ac0c-0c2c66685cd4",
        "body" : "There seems to be only one value of weight. But shouldn't one extender have multiple prioritize function? \n\nAdditionally, why note let the remote call also returns the weight too?\n",
        "createdAt" : "2015-11-15T06:27:41Z",
        "updatedAt" : "2015-11-25T16:19:55Z",
        "lastEditedBy" : "bb4cf218-381a-40ad-ac0c-0c2c66685cd4",
        "tags" : [
        ]
      },
      {
        "id" : "46e871df-0a98-4c54-8d0a-50741b4d0581",
        "parentId" : "fc6274ac-a845-48cc-99b6-49db1a724261",
        "authorId" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "body" : "Each extender has one priority function and one predicate function.\n",
        "createdAt" : "2015-11-15T07:10:38Z",
        "updatedAt" : "2015-11-25T16:19:55Z",
        "lastEditedBy" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "tags" : [
        ]
      },
      {
        "id" : "b714c987-37d3-45b2-a73b-3ac46637c1f2",
        "parentId" : "fc6274ac-a845-48cc-99b6-49db1a724261",
        "authorId" : "bb4cf218-381a-40ad-ac0c-0c2c66685cd4",
        "body" : "What prevents each extender to have multiple filter and priority functions? It's one HTTP roundtrip :)\n",
        "createdAt" : "2015-11-15T07:14:40Z",
        "updatedAt" : "2015-11-25T16:19:55Z",
        "lastEditedBy" : "bb4cf218-381a-40ad-ac0c-0c2c66685cd4",
        "tags" : [
        ]
      },
      {
        "id" : "0622073d-9ed0-438c-ab81-ca389800297e",
        "parentId" : "fc6274ac-a845-48cc-99b6-49db1a724261",
        "authorId" : "bb4cf218-381a-40ad-ac0c-0c2c66685cd4",
        "body" : "So a way to model this is that one extender is an isolated identity that provides some extension functions to do the work. \n",
        "createdAt" : "2015-11-15T07:15:49Z",
        "updatedAt" : "2015-11-25T16:19:55Z",
        "lastEditedBy" : "bb4cf218-381a-40ad-ac0c-0c2c66685cd4",
        "tags" : [
        ]
      },
      {
        "id" : "fc864ff0-37bc-47aa-93b9-5b1b2e4d38dd",
        "parentId" : "fc6274ac-a845-48cc-99b6-49db1a724261",
        "authorId" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "body" : "> What prevents each extender to have multiple filter and priority functions? It's one HTTP roundtrip :)\n\nI think it would just make things more complicated. I think it's simpler if there's one prioritize endpoint that runs one prioritize function, and one filter endpoint that runs one predicate function. Since they are presumably in the same process, it should not be hard to combine the logic into one predicate function and one priority function, so I don't think this overly restricts the generality of the extender.\n",
        "createdAt" : "2015-11-15T07:45:33Z",
        "updatedAt" : "2015-11-25T16:19:55Z",
        "lastEditedBy" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "tags" : [
        ]
      }
    ],
    "commit" : "cadc24e9fd7f2bccc972df4d67985aa33a4cd823",
    "line" : 54,
    "diffHunk" : "@@ -1,1 +52,56 @@\t// The numeric multiplier for the node scores that the prioritize call generates.\n\t// The weight should be a positive integer\n\tWeight int `json:\"weight,omitempty\"`\n\t// EnableHttps specifies whether https should be used to communicate with the extender\n\tEnableHttps bool `json:\"enableHttps,omitempty\"`"
  },
  {
    "id" : "31661168-fbc1-43a0-bc15-a5e05ffbdef3",
    "prId" : 13580,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "84b203e5-16d4-4d6a-8cf6-b4d9df4c0b3d",
        "parentId" : null,
        "authorId" : "bb4cf218-381a-40ad-ac0c-0c2c66685cd4",
        "body" : "How does this config correlates to the configuration file? It would be easier for users to understand if there would be some examples. Can you add it? Or help explain if I'm missing sth.\n",
        "createdAt" : "2015-11-15T06:31:43Z",
        "updatedAt" : "2015-11-25T16:19:55Z",
        "lastEditedBy" : "bb4cf218-381a-40ad-ac0c-0c2c66685cd4",
        "tags" : [
        ]
      },
      {
        "id" : "af8a27c0-b90b-4295-b030-1c9c4d1888ac",
        "parentId" : "84b203e5-16d4-4d6a-8cf6-b4d9df4c0b3d",
        "authorId" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "body" : "Yeah, extending\nhttps://github.com/kubernetes/kubernetes/blob/master/examples/scheduler-policy-config.json\n(or creating a separate example file called scheduler-policy-config-with-extender.json) to include an example of using an extender might be good. \n",
        "createdAt" : "2015-11-15T07:09:55Z",
        "updatedAt" : "2015-11-25T16:19:55Z",
        "lastEditedBy" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "tags" : [
        ]
      },
      {
        "id" : "3c51661d-7211-4030-b65f-c8ab7406f0fc",
        "parentId" : "84b203e5-16d4-4d6a-8cf6-b4d9df4c0b3d",
        "authorId" : "367dd7b1-86fa-48f7-aa20-489e5d4b6a8d",
        "body" : "Done\n",
        "createdAt" : "2015-11-16T23:15:33Z",
        "updatedAt" : "2015-11-25T16:19:55Z",
        "lastEditedBy" : "367dd7b1-86fa-48f7-aa20-489e5d4b6a8d",
        "tags" : [
        ]
      }
    ],
    "commit" : "cadc24e9fd7f2bccc972df4d67985aa33a4cd823",
    "line" : null,
    "diffHunk" : "@@ -1,1 +43,47 @@// Holds the parameters used to communicate with the extender. If a verb is unspecified/empty,\n// it is assumed that the extender chose not to provide that extension.\ntype ExtenderConfig struct {\n\t// URLPrefix at which the extender is available\n\tURLPrefix string `json:\"urlPrefix\"`"
  },
  {
    "id" : "eae2a366-66e4-4b27-ba01-9b6f6f6097f9",
    "prId" : 13580,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0ae8f04a-02c6-4e74-af64-834a21524d3b",
        "parentId" : null,
        "authorId" : "bb4cf218-381a-40ad-ac0c-0c2c66685cd4",
        "body" : "We can improve the docs by adding two more sections here -- one for predicate and one for prioritization.\n",
        "createdAt" : "2015-11-15T06:35:13Z",
        "updatedAt" : "2015-11-25T16:19:55Z",
        "lastEditedBy" : "bb4cf218-381a-40ad-ac0c-0c2c66685cd4",
        "tags" : [
        ]
      },
      {
        "id" : "b04283fb-1de6-4e36-9c8c-d34f335cdd7a",
        "parentId" : "0ae8f04a-02c6-4e74-af64-834a21524d3b",
        "authorId" : "367dd7b1-86fa-48f7-aa20-489e5d4b6a8d",
        "body" : "Will take up in another PR\n",
        "createdAt" : "2015-11-16T23:15:49Z",
        "updatedAt" : "2015-11-25T16:19:55Z",
        "lastEditedBy" : "367dd7b1-86fa-48f7-aa20-489e5d4b6a8d",
        "tags" : [
        ]
      }
    ],
    "commit" : "cadc24e9fd7f2bccc972df4d67985aa33a4cd823",
    "line" : 96,
    "diffHunk" : "@@ -1,1 +94,98 @@```\n\nArguments passed to the FilterVerb endpoint on the extender are the set of nodes filtered through the k8s predicates and the pod. Arguments passed to the PrioritizeVerb endpoint on the extender are the set of nodes filtered through the k8s predicates and extender predicates and the pod.\n\n```go"
  }
]