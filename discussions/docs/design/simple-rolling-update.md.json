[
  {
    "id" : "17e4a404-60b4-4f23-b5a9-555ffa9d6f02",
    "prId" : 6713,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5915a80f-059a-4bdc-9f40-12261e7754f3",
        "parentId" : null,
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "This assumes a single container, obviously.\n\nAs much as possible, flags should match kubectl run/run-container.\n\nIf we were to support multiple containers in run, we would support that here, also.\n",
        "createdAt" : "2015-04-11T00:32:41Z",
        "updatedAt" : "2015-04-22T17:28:21Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "dc5a4dfb-8e76-47fa-b201-ceba8af78e4d",
        "parentId" : "5915a80f-059a-4bdc-9f40-12261e7754f3",
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "I'm ok if the multi-container case requires a config file.  I think this will hit the 80% use case pretty squarely.\n",
        "createdAt" : "2015-04-11T03:23:16Z",
        "updatedAt" : "2015-04-22T17:28:21Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      },
      {
        "id" : "6340d4b9-ca7e-42b8-95cf-29ef4b109e6b",
        "parentId" : "5915a80f-059a-4bdc-9f40-12261e7754f3",
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "Fair enough.\n",
        "createdAt" : "2015-04-11T04:42:34Z",
        "updatedAt" : "2015-04-22T17:28:21Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      }
    ],
    "commit" : "7e0f6f859f21e67ec79a91b4f3544615a4251359",
    "line" : null,
    "diffHunk" : "@@ -1,1 +5,9 @@\n### Lightweight rollout\nAssume that we have a current replication controller named ```foo``` and it is running image ```image:v1```\n\n```kubectl rolling-update rc foo [foo-v2] --image=myimage:v2```"
  },
  {
    "id" : "d6a5e55e-6ea1-474c-8b0e-cd5e418f7e2e",
    "prId" : 6713,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "525ef6f4-b2d7-466d-aef8-fae390c016d4",
        "parentId" : null,
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "FWIW, I think that will be a very common occurrence.\n",
        "createdAt" : "2015-04-11T00:33:26Z",
        "updatedAt" : "2015-04-22T17:28:21Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "b6566f61-a371-4f84-8449-783b7c3dd73b",
        "parentId" : "525ef6f4-b2d7-466d-aef8-fae390c016d4",
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "Really?  I think it's pretty unlikely.  How many people are going to control-c a rolling update that is basically 100% done?\n",
        "createdAt" : "2015-04-11T03:23:40Z",
        "updatedAt" : "2015-04-22T17:28:21Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      },
      {
        "id" : "15e38d5e-923c-4e03-b30a-77d3b480b201",
        "parentId" : "525ef6f4-b2d7-466d-aef8-fae390c016d4",
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "It's racy. Most people will have small rollouts.\n\nAnyway, not a big deal. We'll see.\n",
        "createdAt" : "2015-04-11T03:32:41Z",
        "updatedAt" : "2015-04-22T17:28:21Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "e80a3e9b-972c-466a-af5b-53a6a8a2c512",
        "parentId" : "525ef6f4-b2d7-466d-aef8-fae390c016d4",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "> On Apr 10, 2015, at 11:23 PM, Brendan Burns notifications@github.com wrote:\n> \n> In docs/design/simple-rolling-update.md:\n> \n> > +## Simple rolling update\n> > +This is a lightweight design document for simple rolling update in `kubectl`\n> > +\n> > +### Lightweight rollout\n> > +Assume that we have a current replication controller named `foo` and it is running image `image:v1`\n> > +\n> > +`kubectl rollingupdate rc foo --image=myimage:v2`\n> > +\n> > +Under the hood, this will do the following:\n> > -   \\* Create a new replication controller named foo-next, identical to foo, except image is updated to the new image.\n> > -   \\* Do the standard down/up one-by-one until foo has replicas zero and foo-next has replicas N\n> > -   \\* delete rc foo\n> > -   \\* create rc foo that is identical to foo-next\n> > -   \\* delete foo-next\n> >   +\n> >   +Obviously there is a race here, where if you kill the client between delete foo, and creating the new version of 'foo' you might be surprised about what is there, but I think that's ok.\n> >   Really? I think it's pretty unlikely. How many people are going to control-c a rolling update that is basically 100% done?\n> \n> All the time, and when they do, it's because of this.\n\n```\nkubectl rolling-update old new\n... Waiting ...\n/horror oh no oh no oh no\nctrl+c\n```\n\nSo the ctrl+c because of a mistake is _exactly_ at the worst time, and it is when the user will _most_ need to recover.  That's when good tools are separated from great tools.  Protecting the user in this moment is the most critical moment.\n\n> â€”\n> Reply to this email directly or view it on GitHub.\n",
        "createdAt" : "2015-04-11T04:03:24Z",
        "updatedAt" : "2015-04-22T17:28:21Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "7f62d8be-7278-4eed-a262-4af6d0dbc01a",
        "parentId" : "525ef6f4-b2d7-466d-aef8-fae390c016d4",
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "That's pretty much the scenario I was thinking of.\n\nCertainly, I think some significant fraction of all rollouts will be killed in the middle. Some non-zero fraction of those will be caught in the delete dance.\n",
        "createdAt" : "2015-04-11T04:50:12Z",
        "updatedAt" : "2015-04-22T17:28:21Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "bceb8e17-a8e8-4a98-b44d-64941b71bedd",
        "parentId" : "525ef6f4-b2d7-466d-aef8-fae390c016d4",
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "Ok, I added more clarity and detail around how this is recovered from.\n",
        "createdAt" : "2015-04-21T04:07:34Z",
        "updatedAt" : "2015-04-22T17:28:21Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "7e0f6f859f21e67ec79a91b4f3544615a4251359",
    "line" : null,
    "diffHunk" : "@@ -1,1 +12,16 @@the name of the original controller.\n\nObviously there is a race here, where if you kill the client between delete foo, and creating the new version of 'foo' you might be surprised about what is there, but I think that's ok.\nSee [Recovery](#recovery) below\n"
  },
  {
    "id" : "208d54e7-b0f3-4c0a-94e2-d8e07b2b4165",
    "prId" : 6713,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f93d70cd-493b-4d66-a4f8-f41b6eb6d288",
        "parentId" : null,
        "authorId" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "body" : "I think you need to explain how the rename is implemented, otherwise it's not clear what the race condition is that you're referring to.\n",
        "createdAt" : "2015-04-21T19:46:51Z",
        "updatedAt" : "2015-04-22T17:28:21Z",
        "lastEditedBy" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "tags" : [
        ]
      }
    ],
    "commit" : "7e0f6f859f21e67ec79a91b4f3544615a4251359",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +12,16 @@the name of the original controller.\n\nObviously there is a race here, where if you kill the client between delete foo, and creating the new version of 'foo' you might be surprised about what is there, but I think that's ok.\nSee [Recovery](#recovery) below\n"
  },
  {
    "id" : "c2378fc3-a866-412a-8480-fa8ced03a0ca",
    "prId" : 6713,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a9ef5afd-5cf0-4247-a318-f1ee3b47c3e9",
        "parentId" : null,
        "authorId" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "body" : "Explain that the simple rolling update can only be used to update the image, not other properties of the pod.\n",
        "createdAt" : "2015-04-21T19:50:32Z",
        "updatedAt" : "2015-04-22T17:28:21Z",
        "lastEditedBy" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "tags" : [
        ]
      },
      {
        "id" : "01f6ab59-a0df-41c3-99ed-039989badb17",
        "parentId" : "a9ef5afd-5cf0-4247-a318-f1ee3b47c3e9",
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "Are we planning to merge this doc? If so, it really belongs in proposals until the features are implemented.\n",
        "createdAt" : "2015-04-22T19:23:51Z",
        "updatedAt" : "2015-04-22T19:23:51Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      }
    ],
    "commit" : "7e0f6f859f21e67ec79a91b4f3544615a4251359",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +7,11 @@Assume that we have a current replication controller named ```foo``` and it is running image ```image:v1```\n\n```kubectl rolling-update rc foo [foo-v2] --image=myimage:v2```\n\nIf the user doesn't specify a name for the 'next' controller, then the 'next' controller is renamed to"
  },
  {
    "id" : "c843e9d5-96c6-4178-aef7-b117b28a309a",
    "prId" : 6713,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bce21df7-ab54-44a6-ab64-769f27c1188e",
        "parentId" : null,
        "authorId" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "body" : "I would recommend moving the details of the execution flow earlier in the doc; it's hard to understand what's going on here (as well as the race condition you mention earlier) without understanding how this works under the covers.\n",
        "createdAt" : "2015-04-21T19:53:18Z",
        "updatedAt" : "2015-04-22T17:28:21Z",
        "lastEditedBy" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "tags" : [
        ]
      },
      {
        "id" : "80feb329-4479-472e-a4f4-18d760f6f2ad",
        "parentId" : "bce21df7-ab54-44a6-ab64-769f27c1188e",
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "I added a link up a the top down to these details.\n",
        "createdAt" : "2015-04-22T17:21:59Z",
        "updatedAt" : "2015-04-22T17:28:21Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "7e0f6f859f21e67ec79a91b4f3544615a4251359",
    "line" : null,
    "diffHunk" : "@@ -1,1 +33,37 @@Whenever the rolling update command executes, the kubectl client looks for replication controllers called ```foo``` and ```foo-next```, if they exist, an attempt is\nmade to roll ```foo``` to ```foo-next```.  If ```foo-next``` does not exist, then it is created, and the rollout is a new rollout.  If ```foo``` doesn't exist, then\nit is assumed that the rollout is nearly completed, and ```foo-next``` is renamed to ```foo```.  Details of the execution flow are given below.\n\n"
  },
  {
    "id" : "c17cd6e2-6331-43c7-8af3-f36de9c9ca21",
    "prId" : 6713,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e70e0ba1-40f3-40aa-94f8-378c3130e69d",
        "parentId" : null,
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "FYI, we need to change this annotation to one that keeps track of deltas instead.\n",
        "createdAt" : "2015-04-21T20:26:31Z",
        "updatedAt" : "2015-04-22T17:28:21Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "10ad1e1f-9d72-46f4-90e9-10fc222e0f9d",
        "parentId" : "e70e0ba1-40f3-40aa-94f8-378c3130e69d",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "I assume these annotations are \"kubernetes.io/\" scoped?\n",
        "createdAt" : "2015-04-21T20:30:52Z",
        "updatedAt" : "2015-04-22T17:28:21Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "2a3af622-f164-42c8-8ef8-16a9ecb3137f",
        "parentId" : "e70e0ba1-40f3-40aa-94f8-378c3130e69d",
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "@bgrant0607 \nNot sure I follow, why do the need to be deltas?\n\n@thockin \nAdded a note to this effect.\n",
        "createdAt" : "2015-04-22T17:15:14Z",
        "updatedAt" : "2015-04-22T17:28:21Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      },
      {
        "id" : "7f68d076-e296-4b74-a56f-8a0dcd548412",
        "parentId" : "e70e0ba1-40f3-40aa-94f8-378c3130e69d",
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "Keeping track of desired replicas in an annotation interacts badly with resize, but nevermind about the deltas for now. It will hopefully be made moot by implementing a Deployment object, which will keep track of the desired replicas.\n\nThe original discussion:\nhttps://github.com/GoogleCloudPlatform/kubernetes/pull/2863#issuecomment-69701562\n",
        "createdAt" : "2015-04-23T00:12:29Z",
        "updatedAt" : "2015-04-23T00:12:29Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      }
    ],
    "commit" : "7e0f6f859f21e67ec79a91b4f3544615a4251359",
    "line" : null,
    "diffHunk" : "@@ -1,1 +22,26 @@If a rollout fails or is terminated in the middle, it is important that the user be able to resume the roll out.\nTo facilitate recovery in the case of a crash of the updating process itself, we add the following annotations to each replicaController in the ```kubernetes.io/``` annotation namespace:\n   * ```desired-replicas``` The desired number of replicas for this controller (either N or zero)\n   * ```update-partner``` A pointer to the replicaiton controller resource that is the other half of this update (syntax ```<name>``` the namespace is assumed to be identical to the namespace of this replication controller.)\n"
  },
  {
    "id" : "9be48657-eeee-4905-ae87-40e76f7d1b21",
    "prId" : 6713,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ddfe311e-930a-420f-adb9-ae0e90010a7c",
        "parentId" : null,
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "I'd also like the following to work:\n\n```\nkubectl rolling-update rc foo foo-v2\n```\n\nin the case that foo-v2 had already been created.\n",
        "createdAt" : "2015-04-21T20:42:00Z",
        "updatedAt" : "2015-04-22T17:28:21Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "5939cee0-3987-45db-a208-55193b255de1",
        "parentId" : "ddfe311e-930a-420f-adb9-ae0e90010a7c",
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "Added further details to show how this would work.\n",
        "createdAt" : "2015-04-22T17:17:01Z",
        "updatedAt" : "2015-04-22T17:28:21Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "7e0f6f859f21e67ec79a91b4f3544615a4251359",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +28,32 @@\n```\nkubectl rolling-update rc foo [foo-v2] --image=myimage:v2\n```\n"
  },
  {
    "id" : "683efe59-43a3-4c6c-8b6f-d75ab3c5f736",
    "prId" : 6713,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "18fa88de-ce53-4c2a-a629-443dbfbcaca3",
        "parentId" : null,
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "We also need to add/choose a label key/value to use as the uniquifying label. As discussed in https://github.com/GoogleCloudPlatform/kubernetes/issues/1743#issuecomment-93774833, I suggest the key `deployment` by default, but the user should be able to override that via flag. Even if the object name is changed back to the original, the label value should still advance.\n",
        "createdAt" : "2015-04-21T20:45:23Z",
        "updatedAt" : "2015-04-22T17:28:21Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "cf439e8b-7fdb-4dd3-9720-4763639c82c8",
        "parentId" : "18fa88de-ce53-4c2a-a629-443dbfbcaca3",
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "done.\n",
        "createdAt" : "2015-04-22T17:17:14Z",
        "updatedAt" : "2015-04-22T17:28:21Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "7e0f6f859f21e67ec79a91b4f3544615a4251359",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +9,13 @@```kubectl rolling-update rc foo [foo-v2] --image=myimage:v2```\n\nIf the user doesn't specify a name for the 'next' controller, then the 'next' controller is renamed to\nthe name of the original controller.\n"
  },
  {
    "id" : "29984c8e-259f-4798-8cb0-ad62b5c86d1e",
    "prId" : 6713,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9a4c893e-61cc-4638-8342-5c3ee8b4bede",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "Can you detail what happens if the user did not specify foo-next?  How do you crash-recover in this case? Where does the update-partner annotation come into play?\n",
        "createdAt" : "2015-04-21T21:11:38Z",
        "updatedAt" : "2015-04-22T17:28:21Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "57e5e42e-1775-40de-a537-ec5f504a437b",
        "parentId" : "9a4c893e-61cc-4638-8342-5c3ee8b4bede",
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "done.\n",
        "createdAt" : "2015-04-22T17:17:21Z",
        "updatedAt" : "2015-04-22T17:28:21Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "7e0f6f859f21e67ec79a91b4f3544615a4251359",
    "line" : null,
    "diffHunk" : "@@ -1,1 +55,59 @@then ```foo-next``` is synthesized using the pattern ```<controller-name>-<hash-of-next-controller-JSON>```\n\n#### Initialization\n   * If ```foo``` and ```foo-next``` do not exist:\n      * Exit, and indicate an error to the user, that the specified controller doesn't exist."
  },
  {
    "id" : "a766d882-5fb2-4359-9be9-de682d42306a",
    "prId" : 6713,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7a3f0b64-41f4-41a1-84f0-ee5b382aeaf7",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "FWIW I preferred \"rollback\" or \"reverse\" to \"abort\".  Abort implies killing an on-going process.\n",
        "createdAt" : "2015-04-23T19:52:19Z",
        "updatedAt" : "2015-04-23T19:52:19Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "46fc209f-583b-433e-b980-e94fd24b623b",
        "parentId" : "7a3f0b64-41f4-41a1-84f0-ee5b382aeaf7",
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "Me, too, but perhaps an argument could be made that it's similar to unstaging a commit in git.\n",
        "createdAt" : "2015-04-23T20:00:33Z",
        "updatedAt" : "2015-04-23T20:00:33Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      }
    ],
    "commit" : "7e0f6f859f21e67ec79a91b4f3544615a4251359",
    "line" : 41,
    "diffHunk" : "@@ -1,1 +39,43 @@Abort is assumed to want to reverse a rollout in progress.\n\n```kubectl rolling-update rc foo [foo-v2] --abort```\n\nThis is really just semantic sugar for:"
  }
]