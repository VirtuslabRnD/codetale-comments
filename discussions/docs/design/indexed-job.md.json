[
  {
    "id" : "e054444c-1bfa-4a54-a4d7-169a1a2b9794",
    "prId" : 18260,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3f523509-d264-41df-b1c1-53881c308ff8",
        "parentId" : null,
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Since we support env bar expansion inside the args and cmd, having an example that leverages that would be good (since you don't have to do shell magic).  Maybe just as an API only example\n",
        "createdAt" : "2015-12-06T23:48:23Z",
        "updatedAt" : "2016-01-22T08:07:10Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "14cea363-6da3-4023-b356-d7419e20f94d",
        "parentId" : "3f523509-d264-41df-b1c1-53881c308ff8",
        "authorId" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "body" : "That will not work with one of my proposed implementations, the \"identity env vars\" are not set until after the command is run, so they cannot be referenced in the Pod Spec cmd or args.\n",
        "createdAt" : "2015-12-07T18:20:09Z",
        "updatedAt" : "2016-01-22T08:07:10Z",
        "lastEditedBy" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "tags" : [
        ]
      }
    ],
    "commit" : "3ac015887e51adc42ea494c9cf94ac6399734646",
    "line" : 627,
    "diffHunk" : "@@ -1,1 +625,629 @@   --per-completion-env=COLOR=\"green yellow red\" \\\n   -- \\\n   sh -c 'echo \"Have a nice $COLOR $FRUIT\" && sleep 5' \n```\n"
  },
  {
    "id" : "27b96d21-f0c6-40af-8fc5-25ea999188b8",
    "prId" : 18260,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fa63f104-b9ac-4ee6-a42d-4e764874696f",
        "parentId" : null,
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "Env substitution syntax is `$(envvar)`\n",
        "createdAt" : "2015-12-08T06:37:12Z",
        "updatedAt" : "2016-01-22T08:07:10Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "e115741f-762f-447d-ad39-c7785e96a420",
        "parentId" : "fa63f104-b9ac-4ee6-a42d-4e764874696f",
        "authorId" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "body" : "Hmm.  That raises some sticky issues.\nThe `$(VAR)` style is for kubelet-substitution of env vars.  If we chose the server side template expansion (multiple parameters), then you would use `$(VAR)`.  But if we chose the index-only approach, then it needs to be shell-substitution, which is just `$VAR`.  For shell-substitution, dollar-paren means run a command, which is the wrong thing entirely.\n",
        "createdAt" : "2015-12-08T19:34:34Z",
        "updatedAt" : "2016-01-22T08:07:10Z",
        "lastEditedBy" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "tags" : [
        ]
      },
      {
        "id" : "346db7c2-b9f2-470a-94d8-b4871be628d5",
        "parentId" : "fa63f104-b9ac-4ee6-a42d-4e764874696f",
        "authorId" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "body" : "I think when you are using the kubectl run, porcelain, you should not need to know about the `$(VAR)` hack, nor about PodSpecs, nor about how the positional parameters after `--` are converted into a PodSpec.  So, I think this should only use `$VAR` syntax.  But, those do need to be escaped in my example.\n",
        "createdAt" : "2015-12-08T19:45:51Z",
        "updatedAt" : "2016-01-22T08:07:10Z",
        "lastEditedBy" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "tags" : [
        ]
      }
    ],
    "commit" : "3ac015887e51adc42ea494c9cf94ac6399734646",
    "line" : 306,
    "diffHunk" : "@@ -1,1 +304,308 @@   --restart=OnFailure  \\\n   -- \\\n   /usr/local/bin/process_matrix_block -start_row $SR -end_row $ER -start_col $ER --end_col $EC \n```\n"
  },
  {
    "id" : "e39feca3-a795-4111-90ad-333f0964bdc1",
    "prId" : 18260,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ad7018b2-2855-488a-ae3a-264d38b24692",
        "parentId" : null,
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "The user might need a way to specify the separator for env values.\n",
        "createdAt" : "2015-12-08T06:38:19Z",
        "updatedAt" : "2016-01-22T08:07:10Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      }
    ],
    "commit" : "3ac015887e51adc42ea494c9cf94ac6399734646",
    "line" : 234,
    "diffHunk" : "@@ -1,1 +232,236 @@```\nkubectl run process-files --image=myfileprocessor \\\n   --per-completion-env=F=\"12342.dat 97283.dat 38732.dat\" \\\n   --restart=OnFailure  \\\n   -- \\"
  },
  {
    "id" : "b057e6e6-0256-4f97-898d-bef5485d29b9",
    "prId" : 18260,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "51c610c0-50fd-4487-961e-a9ea28cf2c29",
        "parentId" : null,
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "You mean that if any per-completion-env is specified then completions is set by its length?\n",
        "createdAt" : "2015-12-08T06:40:42Z",
        "updatedAt" : "2016-01-22T08:07:10Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "989d6ac7-43c7-419b-bc2c-a8da507dc6c5",
        "parentId" : "51c610c0-50fd-4487-961e-a9ea28cf2c29",
        "authorId" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "body" : "yes.\n",
        "createdAt" : "2015-12-08T19:35:31Z",
        "updatedAt" : "2016-01-22T08:07:10Z",
        "lastEditedBy" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "tags" : [
        ]
      }
    ],
    "commit" : "3ac015887e51adc42ea494c9cf94ac6399734646",
    "line" : 244,
    "diffHunk" : "@@ -1,1 +242,246 @@- `--restart=OnFailure` implies creating a job instead of replicationController.\n- Each pods command line is `/usr/local/bin/process_file $F`.\n- `--per-completion-env=` implies the jobs `.spec.completions` is set to the length of the argument array (3 in the example).\n- `--per-completion-env=F=<values>` causes env var with `F` to be available in the enviroment when the command line is evaluated.\n"
  },
  {
    "id" : "02fc4ed1-c342-40cd-90ce-9cfe6d0f5924",
    "prId" : 18260,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "76bd8eb2-73c8-487b-8bc8-1741173709f6",
        "parentId" : null,
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "cc @kubernetes/kubectl regarding this new proposed kubectl convention\n",
        "createdAt" : "2015-12-08T06:41:38Z",
        "updatedAt" : "2016-01-22T08:07:10Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      }
    ],
    "commit" : "3ac015887e51adc42ea494c9cf94ac6399734646",
    "line" : 287,
    "diffHunk" : "@@ -1,1 +285,289 @@```\nkubectl run process-matrix --image=my/matrix \\\n   --per-completion-env=COMMAND_LINE=@matrix-commandlines.txt \\\n   --restart=OnFailure  \\\n   -- \\"
  },
  {
    "id" : "be5349ed-6441-4ed4-b1f3-f58d2788edcf",
    "prId" : 18260,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c25247a4-8cc6-434f-806f-7bd36f6dfb1c",
        "parentId" : null,
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "Since indexed jobs are intended for static work distribution, and we have other controller for other use cases, I'm ok with the challenges completion args present to dynamic scalability.\n",
        "createdAt" : "2015-12-08T06:51:11Z",
        "updatedAt" : "2016-01-22T08:07:10Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "1c22f9c7-6c49-4929-bc92-64d5458f48a8",
        "parentId" : "c25247a4-8cc6-434f-806f-7bd36f6dfb1c",
        "authorId" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "body" : "I don't understand the second clause of this comment.\n",
        "createdAt" : "2015-12-08T19:39:25Z",
        "updatedAt" : "2016-01-22T08:07:10Z",
        "lastEditedBy" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "tags" : [
        ]
      }
    ],
    "commit" : "3ac015887e51adc42ea494c9cf94ac6399734646",
    "line" : null,
    "diffHunk" : "@@ -1,1 +209,213 @@\nTherefore we to allow pods in the same Job to differ **only** in the following aspects:\n\n- command line\n- environment variables"
  },
  {
    "id" : "6fcd5994-39b4-4040-b5d7-5f29d4fa40a1",
    "prId" : 18260,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e5ebca01-b736-4f0c-a4fe-7d1daf29b1c5",
        "parentId" : null,
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "Whether the per-completion data is in a pod or in ConfigMap, annotations could record the source of the data.\n",
        "createdAt" : "2015-12-08T06:52:59Z",
        "updatedAt" : "2016-01-22T08:07:10Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      }
    ],
    "commit" : "3ac015887e51adc42ea494c9cf94ac6399734646",
    "line" : null,
    "diffHunk" : "@@ -1,1 +493,497 @@- Drawback: while in separate storage, they could be mutatated, which would have unexpected effects\n- Drawback: Logic for using index to lookup paramters needs to be in the Pod.\n- Drawback: CLIs and UIs are limited to using the \"index\" as the identity of a pod\n  from a job.  They cannot easily say, for example `repeated failures on the pod processing banana.txt`.\n"
  },
  {
    "id" : "4fd2c08c-13eb-4c04-bd42-31c99201fa2c",
    "prId" : 18260,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b98f0c58-c398-40de-a191-f7e9a7780f84",
        "parentId" : null,
        "authorId" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "body" : "I'm not sure what you're trying to address with this issue. Our current PodSpec allows you to provide or not a command. Additionally it's super easy to create a new image the way you wanted it to. \n",
        "createdAt" : "2015-12-10T10:13:35Z",
        "updatedAt" : "2016-01-22T08:07:10Z",
        "lastEditedBy" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "tags" : [
        ]
      },
      {
        "id" : "efcf8b83-c0a0-4f1f-b28b-14377f390e6a",
        "parentId" : "b98f0c58-c398-40de-a191-f7e9a7780f84",
        "authorId" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "body" : "Suppose I am running an image that was built by someone else.  The image author has set all necessary flags for the image as part of the default command line of the image.  \n\nNow I want to use that image, but I need to run some shell code prior to the Image's default command line.  How do I get the default command line out of the image so that I can prepend my shell script to it? \n",
        "createdAt" : "2015-12-10T22:23:22Z",
        "updatedAt" : "2016-01-22T08:07:10Z",
        "lastEditedBy" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "tags" : [
        ]
      },
      {
        "id" : "eaae6cba-a328-434a-99bb-d2f97c295400",
        "parentId" : "b98f0c58-c398-40de-a191-f7e9a7780f84",
        "authorId" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "body" : "How about docker inspect?\n",
        "createdAt" : "2015-12-11T11:07:07Z",
        "updatedAt" : "2016-01-22T08:07:10Z",
        "lastEditedBy" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "tags" : [
        ]
      }
    ],
    "commit" : "3ac015887e51adc42ea494c9cf94ac6399734646",
    "line" : 222,
    "diffHunk" : "@@ -1,1 +220,224 @@If we require people to specify the complete command line to use Indexed Job,\nthen they will not automatically pick up changes in the default\ncommand or args.\n\nThis needs more thought."
  },
  {
    "id" : "0cfdd041-0471-4a56-b5dc-a044a882ff0a",
    "prId" : 18260,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e4b29676-d7cf-4b28-841d-56f58bbc2de4",
        "parentId" : null,
        "authorId" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "body" : "I'd add a requirement for how this file should be structured. \n",
        "createdAt" : "2015-12-10T10:17:13Z",
        "updatedAt" : "2016-01-22T08:07:10Z",
        "lastEditedBy" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "tags" : [
        ]
      }
    ],
    "commit" : "3ac015887e51adc42ea494c9cf94ac6399734646",
    "line" : 264,
    "diffHunk" : "@@ -1,1 +262,266 @@However, `kubectl` should also support a format like:\n `--per-completion-env=F=@files-to-process.txt`.\nThat allows `kubectl` to parse the file, point out any syntax errors, and would not run up against command line length limits (2MB is common, as low as 4kB is POSIX compliant).\n\nOne case we do not try to handle is where the file of work is stored on a cloud filesystem, and not accessible from the users local host.  Then we cannot easily use indexed job, because we do not know the number of completions.  The user needs to copy the file locally first or use the Work-Queue style of Job (already supported)."
  },
  {
    "id" : "4e4fa6c2-740e-4103-8e3d-b17e0b761e73",
    "prId" : 18260,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dc362161-a738-45f3-aaf5-abc7b7be840e",
        "parentId" : null,
        "authorId" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "body" : "[Currently](https://github.com/kubernetes/kubernetes/blob/05394f93016cf7884605736a38d2a06361ed20fd/pkg/kubectl/cmd/run.go#L152-L154) anything else than Always results in a job. \n",
        "createdAt" : "2015-12-10T10:35:44Z",
        "updatedAt" : "2016-01-22T08:07:10Z",
        "lastEditedBy" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "tags" : [
        ]
      }
    ],
    "commit" : "3ac015887e51adc42ea494c9cf94ac6399734646",
    "line" : 242,
    "diffHunk" : "@@ -1,1 +240,244 @@In the above example:\n\n- `--restart=OnFailure` implies creating a job instead of replicationController.\n- Each pods command line is `/usr/local/bin/process_file $F`.\n- `--per-completion-env=` implies the jobs `.spec.completions` is set to the length of the argument array (3 in the example)."
  },
  {
    "id" : "e64ff19b-b6a3-41ac-a590-19b8bc5f3c46",
    "prId" : 18260,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "359409e1-4dab-4922-ad7a-70c519ed12c8",
        "parentId" : null,
        "authorId" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "body" : "In any of the above case, how the controller will know when the job is finished?\n",
        "createdAt" : "2015-12-10T10:42:14Z",
        "updatedAt" : "2016-01-22T08:07:10Z",
        "lastEditedBy" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "tags" : [
        ]
      }
    ],
    "commit" : "3ac015887e51adc42ea494c9cf94ac6399734646",
    "line" : null,
    "diffHunk" : "@@ -1,1 +855,859 @@- allow unset `.spec.completions` to indicate no scoreboard, and no index for tasks (identical tasks)\n- allow `.spec.completions=-1` to indicate the same.\n- add `.spec.indexed` to job to indicate need for scoreboard.\n\n#### Interaction with vertical autoscaling"
  },
  {
    "id" : "ea28d4dc-920c-41ce-8e40-a6bb31f98136",
    "prId" : 18260,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "794e8f83-5937-479a-9ee5-b0b3b9f18b19",
        "parentId" : null,
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "s/fills provides/provides/\n",
        "createdAt" : "2015-12-18T12:24:54Z",
        "updatedAt" : "2016-01-22T08:07:10Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      },
      {
        "id" : "78edfbf8-92d8-480e-ab2d-f664ef1e316a",
        "parentId" : "794e8f83-5937-479a-9ee5-b0b3b9f18b19",
        "authorId" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "body" : "Still valid.\n",
        "createdAt" : "2016-01-12T13:28:26Z",
        "updatedAt" : "2016-01-22T08:07:10Z",
        "lastEditedBy" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "tags" : [
        ]
      }
    ],
    "commit" : "3ac015887e51adc42ea494c9cf94ac6399734646",
    "line" : 73,
    "diffHunk" : "@@ -1,1 +71,75 @@logical process.\n\nIndexed job fills provides a third option with better ease-of-use for common use cases.\n\n## Requirements"
  },
  {
    "id" : "2613b0a7-7852-43a6-8583-147f17c2654e",
    "prId" : 18260,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "afc7e2c0-9fd4-46bb-8b3d-befdf6829f94",
        "parentId" : null,
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "s/grenn/green/\n",
        "createdAt" : "2015-12-18T12:44:45Z",
        "updatedAt" : "2016-01-22T08:07:10Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      },
      {
        "id" : "dc25747d-9411-4a3a-a064-afbedde49057",
        "parentId" : "afc7e2c0-9fd4-46bb-8b3d-befdf6829f94",
        "authorId" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "body" : "Still valid.\n",
        "createdAt" : "2016-01-12T15:01:44Z",
        "updatedAt" : "2016-01-22T08:07:10Z",
        "lastEditedBy" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "tags" : [
        ]
      }
    ],
    "commit" : "3ac015887e51adc42ea494c9cf94ac6399734646",
    "line" : 656,
    "diffHunk" : "@@ -1,1 +654,658 @@\n```\nHave a nice grenn apple\n```\n"
  },
  {
    "id" : "4b9f4fa1-709b-49bb-ada8-639f46b60f85",
    "prId" : 18260,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c31bb5e2-9477-4b13-9f86-fcb4c92ee6a2",
        "parentId" : null,
        "authorId" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "body" : "Again link.\n",
        "createdAt" : "2016-01-12T14:59:30Z",
        "updatedAt" : "2016-01-22T08:07:10Z",
        "lastEditedBy" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "tags" : [
        ]
      }
    ],
    "commit" : "3ac015887e51adc42ea494c9cf94ac6399734646",
    "line" : 324,
    "diffHunk" : "@@ -1,1 +322,326 @@```\n\nKubectl should build the same JobSpec, and then put it into a ScheduledJob (#11980) and create that.\n\nFor [workflow type jobs](../../docs/user-guide/jobs.md#job-patterns), creating a complete workflow from a single command line would be messy, because of the need to specify all the arguments multiple times."
  }
]