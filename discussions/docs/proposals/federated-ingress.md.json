[
  {
    "id" : "17295d77-e9bc-44e6-a877-192df37bb76d",
    "prId" : 29793,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e08daa4f-ddbc-49bc-a4a7-724683e469dd",
        "parentId" : null,
        "authorId" : "d324e241-a7f0-4ace-bda2-4174b07bdb18",
        "body" : "There's a step that comes after this.  Otherwise you just have two unrelated L7 load balancers.  We want a single global VIP.\n\nThe tweaks are:\n1. The services backing the ingress object must share the same nodePort, since the share a single health check.\n2. After the two load balancers are created, we create a global address, forwarding rule, target proxy, URL map, backend service, and health check.  The backend service points at the instance groups from _all_ glbc instances as opposed to only one.\n\nAs I write this, however, I can start to see problems.  We are really breaking the abstraction.  Our global ingress controller makes a lot of assumptions about how the lower-level ingress controller is implemented, and we're going to restrict that local ingress controller's ability to, e.g., destroy and recreate instance groups because the gcloud API will see them as also belonging to the global backend-service.\n",
        "createdAt" : "2016-07-30T00:19:17Z",
        "updatedAt" : "2016-11-11T22:21:05Z",
        "lastEditedBy" : "d324e241-a7f0-4ace-bda2-4174b07bdb18",
        "tags" : [
        ]
      }
    ],
    "commit" : "41609319800fcb84ec3652f7d84377921374649e",
    "line" : 133,
    "diffHunk" : "@@ -1,1 +131,135 @@\n1. Only works across GCP clusters (but see below for a light at the end of the tunnel, for future versions).\n\n## Amazon Web Services only - backed by Route53\n"
  }
]