[
  {
    "id" : "1dc2ea95-d342-49d5-91fd-88464aca69b0",
    "prId" : 18404,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fe356697-c36b-4271-87f8-7a49a4dae3f2",
        "parentId" : null,
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "`kubectl rollback abort` ?\n",
        "createdAt" : "2015-12-10T04:35:44Z",
        "updatedAt" : "2016-01-13T00:26:16Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      },
      {
        "id" : "8c7aefd7-4bba-44b3-bfae-1a9526e05ffa",
        "parentId" : "fe356697-c36b-4271-87f8-7a49a4dae3f2",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Might be confusion between whether abort stops the running deployment OR stops the running deployment and rolls back.\n",
        "createdAt" : "2015-12-10T21:12:02Z",
        "updatedAt" : "2016-01-13T00:26:16Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "7ac04777-3371-4aee-b691-93db9c4c3ef9",
        "parentId" : "fe356697-c36b-4271-87f8-7a49a4dae3f2",
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "I like undo.\n",
        "createdAt" : "2015-12-11T00:45:03Z",
        "updatedAt" : "2016-01-13T00:26:16Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "6f4965d3-0bb6-48f3-8134-28fd46119c31",
        "parentId" : "fe356697-c36b-4271-87f8-7a49a4dae3f2",
        "authorId" : "ad267631-96d1-4bad-b913-e8d6342e65a2",
        "body" : "It may be just me but \"undo\" may sound like you are rolling back to a previous state by **destroying the current (active) state**. If that's not what is going to happen (current state remains in history) then maybe `kubectl rollout revert` or `kubectl rollout rollback`.\n",
        "createdAt" : "2015-12-11T14:31:41Z",
        "updatedAt" : "2016-01-13T00:26:16Z",
        "lastEditedBy" : "ad267631-96d1-4bad-b913-e8d6342e65a2",
        "tags" : [
        ]
      },
      {
        "id" : "457edd4d-0f92-44a4-894f-83302349af2a",
        "parentId" : "fe356697-c36b-4271-87f8-7a49a4dae3f2",
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "How about `kubectl rollout cancel` for stoping the deployment and `kubectl rollout rollback` for stoping the current and rolling back?\n",
        "createdAt" : "2015-12-11T14:38:08Z",
        "updatedAt" : "2016-01-13T00:26:16Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      },
      {
        "id" : "abbfe9a8-1256-4abf-a2b9-7e0293b0c8ac",
        "parentId" : "fe356697-c36b-4271-87f8-7a49a4dae3f2",
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "Also I thought this would be `kubectl deploy`\n",
        "createdAt" : "2015-12-11T14:38:35Z",
        "updatedAt" : "2016-01-13T00:26:16Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      },
      {
        "id" : "1fed56ff-c1eb-4543-911e-76aa2361092e",
        "parentId" : "fe356697-c36b-4271-87f8-7a49a4dae3f2",
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "\"rollout rollback\" sounds odd.\n\n\"rollout revert\" isn't too bad.\n",
        "createdAt" : "2015-12-11T17:52:18Z",
        "updatedAt" : "2016-01-13T00:26:16Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "0ffc9872-7212-4223-b5eb-f0ff9fc4f642",
        "parentId" : "fe356697-c36b-4271-87f8-7a49a4dae3f2",
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "@fabianofranz I don't understand your distinction between undo and revert/rollback. `undo` is intended to halt any rollout currently in progress, if any, and rollout the desired state that existed previous to the latest rollout. We could restrict it to just in-progress rollouts, but we don't actually need to, since, unlike `kubectl rolling-update`, we can easily retain previous state.\n",
        "createdAt" : "2016-01-04T18:27:12Z",
        "updatedAt" : "2016-01-13T00:26:16Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "66f0786e-1317-4df8-a291-5cfefd0a37c1",
        "parentId" : "fe356697-c36b-4271-87f8-7a49a4dae3f2",
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "@bgrant0607 \n\n'undo' implies undoing an existing thing, not cancelling something that is part way completed.\n\nIn my mind, I 'cancel' something in progress, I 'undo' something that has previously completed.\n\nPut another way, the button at the bottom of a progress bar would never say \"undo\" it says \"abort\" or \"cancel\" \n\n\"revert\" is ok, but a little too technical imho.\n",
        "createdAt" : "2016-01-04T19:19:56Z",
        "updatedAt" : "2016-01-13T00:26:16Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      },
      {
        "id" : "9d052a0e-f499-4507-b2bb-0d03fb48c6a5",
        "parentId" : "fe356697-c36b-4271-87f8-7a49a4dae3f2",
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "I see the point about \"undo\" vs \"abort\", but we'd implement both the same way. I'm not sure we should require a different verb depending on whether the previous RC replicas count reached 0 or not.\n",
        "createdAt" : "2016-01-06T04:43:46Z",
        "updatedAt" : "2016-01-13T00:26:16Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "83a80156-5d83-4827-a485-b6d49045d841",
        "parentId" : "fe356697-c36b-4271-87f8-7a49a4dae3f2",
        "authorId" : "f04ec747-f3ff-4334-a66e-6daaf4497091",
        "body" : "I don't think there's any totally accurate verb here and all the arguments for each have their merits, but FWIW `undo` is most pleasing to me personally.\n",
        "createdAt" : "2016-01-07T02:21:50Z",
        "updatedAt" : "2016-01-13T00:26:16Z",
        "lastEditedBy" : "f04ec747-f3ff-4334-a66e-6daaf4497091",
        "tags" : [
        ]
      }
    ],
    "commit" : "c492462f906d6487b9f8d86500186d92e8028a90",
    "line" : 86,
    "diffHunk" : "@@ -1,1 +84,88 @@\n`kubectl rollout` supports both Deployment and DaemonSet. It has the following subcommands:\n- `kubectl rollout undo` works like rollback; it allows the users to rollback to a previous version of deployment.\n- `kubectl rollout pause` allows the users to pause a deployment. See [pause deployments](#pause-deployments).\n- `kubectl rollout resume` allows the users to resume a paused deployment."
  },
  {
    "id" : "f86ae7fb-34c4-4770-8a29-c90432eb3f99",
    "prId" : 18404,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0cb0a46c-c31f-4fad-9907-4787fa6c15cc",
        "parentId" : null,
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Possible future commands here:\n- `kubectl set volume` (equivalent of oc volumes)\n- `kubectl set resources` or `kubectl set limits`\n- `kubectl set security`\n",
        "createdAt" : "2015-12-10T21:14:04Z",
        "updatedAt" : "2016-01-13T00:26:16Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "e320d81e-f639-41a8-b08a-8661e277ce8d",
        "parentId" : "0cb0a46c-c31f-4fad-9907-4787fa6c15cc",
        "authorId" : "ad267631-96d1-4bad-b913-e8d6342e65a2",
        "body" : "Would this extend to other kinds of simple updates, sometimes restricted to some resource types, like a user-friendly version of `kubectl patch`? E.g.:\n\n`kubectl set port` (set the port of a service)\n",
        "createdAt" : "2015-12-11T14:42:49Z",
        "updatedAt" : "2016-01-13T00:26:16Z",
        "lastEditedBy" : "ad267631-96d1-4bad-b913-e8d6342e65a2",
        "tags" : [
        ]
      },
      {
        "id" : "7d5e34b5-3486-407e-bed3-aff8c97c80c0",
        "parentId" : "0cb0a46c-c31f-4fad-9907-4787fa6c15cc",
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "@fabianofranz Yes.\n\nSince this command supports multiple resource types, the resource type needs to be specified with the resource name, either \"type name\" or \"type/name\".\n",
        "createdAt" : "2015-12-11T20:49:51Z",
        "updatedAt" : "2016-01-13T00:26:16Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      }
    ],
    "commit" : "c492462f906d6487b9f8d86500186d92e8028a90",
    "line" : null,
    "diffHunk" : "@@ -1,1 +108,112 @@\n`kubectl create` and `kubectl delete`, for creating and deleting Deployments and DaemonSets, are also relevant.\n\n### Example\n"
  },
  {
    "id" : "31e26641-08c6-4910-9039-cf3533671882",
    "prId" : 18404,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c1a89092-a7e5-4d76-8878-5618030da376",
        "parentId" : null,
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "@kubernetes/rh-ux regarding a top level command for all pod-template style interactions.\n",
        "createdAt" : "2015-12-10T21:14:41Z",
        "updatedAt" : "2016-01-13T00:26:16Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "efef1eae-0c48-42aa-9305-f6337c31044a",
        "parentId" : "c1a89092-a7e5-4d76-8878-5618030da376",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "We had a fairly deep UX discussion today on commands that support targeted use case functionality for edit.  The root issue was `expose` - expose tries to be polymorphic to objects that have no common interface (pod -> service -> ingress / route).  Therefore, each flag we add to expose causes severe issues in help and other supporting behavior because \"--port\" means something different to each object.  \n\nOur plan was to recommend we stop adding flags to expose (and rollback anything not necessary to have minimal expose work correctly), and instead invest in targeted edit.  I.e., expose gets you 80% of the way, but if you need deeper functionality you don't rely on more complex expose, you rely on a command that is targeted to helping you edit a particular use case.  Example is `kubectl set service-ports` or `kubectl set route-termination` or `kubectl set ingress-termination`.  A user, using the help function on set, would get a large list of possible things to edit, but each item in that list would be able to solve a particular use case.\n\nThe guiding principle would be:\n\n```\nkubectl set <noun>-<subnoun>\n```\n\nwhere in a few cases, such as common use, or common interface, `<noun>` could be omitted.  As an example, pod manipulation is very common, and as noted below we expect many objects to have single primary pod templates (they are the core object of the system).  So for concepts that exist only on pods, the default noun would be omitted so `kubectl set env` and that command would work across any resource that is polymorphic to a pod template (imagine an interface for `PodTemplate() api.PodTemplate`).  Other types would have the `noun` in place when the object the noun acts on is very clear (ingress, daemonset, etc).\n\nRoot level commands would target polymorphic interfaces across large subsets of commands (scale, delete, get) or creation flows (create, run, expose) or very important actions (exec, portforward)\n",
        "createdAt" : "2015-12-15T15:34:16Z",
        "updatedAt" : "2016-01-13T00:26:16Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "86b22f32-2ede-4c13-9ad6-8241021961f7",
        "parentId" : "c1a89092-a7e5-4d76-8878-5618030da376",
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "Makes sense to me. Should be added to kubectl conventions.\n\nI'd still only add set subnouns for things that are pretty common and commonly modified. `kubectl edit` should be considered the general escape hatch.\n",
        "createdAt" : "2016-01-04T18:22:25Z",
        "updatedAt" : "2016-01-13T00:26:16Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      }
    ],
    "commit" : "c492462f906d6487b9f8d86500186d92e8028a90",
    "line" : null,
    "diffHunk" : "@@ -1,1 +91,95 @@- `kubectl rollout retry` retries a failed deployment. See [perm-failed deployments](#perm-failed-deployments).\n\n### `kubectl set`\n\n`kubectl set` has the following subcommands:"
  },
  {
    "id" : "2bf126fc-1291-4e60-8d47-08491da41ac9",
    "prId" : 18404,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c94125e7-d266-4bf9-af45-b52f15845d6a",
        "parentId" : null,
        "authorId" : "ad267631-96d1-4bad-b913-e8d6342e65a2",
        "body" : "`kubectl rollout cancel` or `kubectl rollout stop` to stop a deployment in progress?\n",
        "createdAt" : "2015-12-11T14:34:26Z",
        "updatedAt" : "2016-01-13T00:26:16Z",
        "lastEditedBy" : "ad267631-96d1-4bad-b913-e8d6342e65a2",
        "tags" : [
        ]
      },
      {
        "id" : "7db2ef11-8020-4e1e-973c-590b850f5de1",
        "parentId" : "c94125e7-d266-4bf9-af45-b52f15845d6a",
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "What would \"cancel\" do?\n",
        "createdAt" : "2015-12-11T17:52:51Z",
        "updatedAt" : "2016-01-13T00:26:16Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "43622c9c-e02a-4ddc-83fd-4e0d8aec78e8",
        "parentId" : "c94125e7-d266-4bf9-af45-b52f15845d6a",
        "authorId" : "ad267631-96d1-4bad-b913-e8d6342e65a2",
        "body" : "Stop a deployment in progress and make sure you are kept at the latest active state?\n",
        "createdAt" : "2015-12-11T18:14:59Z",
        "updatedAt" : "2016-01-13T00:26:16Z",
        "lastEditedBy" : "ad267631-96d1-4bad-b913-e8d6342e65a2",
        "tags" : [
        ]
      },
      {
        "id" : "7c6fadc7-7557-4502-bf0f-bb251e09f429",
        "parentId" : "c94125e7-d266-4bf9-af45-b52f15845d6a",
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "@fabianofranz What do you mean by \"latest active state\"?\n\nIf this isn't covered by either undo or pause or delete --cascade=false, then I don't think it makes sense.\n",
        "createdAt" : "2016-01-04T17:59:13Z",
        "updatedAt" : "2016-01-13T00:26:16Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      }
    ],
    "commit" : "c492462f906d6487b9f8d86500186d92e8028a90",
    "line" : null,
    "diffHunk" : "@@ -1,1 +86,90 @@- `kubectl rollout undo` works like rollback; it allows the users to rollback to a previous version of deployment.\n- `kubectl rollout pause` allows the users to pause a deployment. See [pause deployments](#pause-deployments).\n- `kubectl rollout resume` allows the users to resume a paused deployment.\n- `kubectl rollout status` shows the status of a deployment.\n- `kubectl rollout history` shows meaningful version information of all previous deployments. See [development version](#deployment-version)."
  },
  {
    "id" : "fd30001d-1b6d-46e4-8cd2-440999a3f906",
    "prId" : 18404,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "232018e2-4685-4860-bd8a-c1eddad8b72b",
        "parentId" : null,
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "`rollout` over `deploy`?\n",
        "createdAt" : "2015-12-11T14:35:55Z",
        "updatedAt" : "2016-01-13T00:26:16Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      },
      {
        "id" : "0954bb07-c26e-4407-bbc3-fd03cc81cd7f",
        "parentId" : "232018e2-4685-4860-bd8a-c1eddad8b72b",
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "I suggested \"rollout\". It's a bit more obvious (to me, anyway) and less coupled to Deployment (since we also want it to support DaemonSet).\n",
        "createdAt" : "2015-12-11T17:51:10Z",
        "updatedAt" : "2016-01-13T00:26:16Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      }
    ],
    "commit" : "c492462f906d6487b9f8d86500186d92e8028a90",
    "line" : 85,
    "diffHunk" : "@@ -1,1 +83,87 @@### `kubectl rollout`\n\n`kubectl rollout` supports both Deployment and DaemonSet. It has the following subcommands:\n- `kubectl rollout undo` works like rollback; it allows the users to rollback to a previous version of deployment.\n- `kubectl rollout pause` allows the users to pause a deployment. See [pause deployments](#pause-deployments)."
  },
  {
    "id" : "5ac68344-5681-4b75-b314-e36aae0d9c06",
    "prId" : 18404,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a9bf75fb-4649-4a92-acf8-27dc9c152dc3",
        "parentId" : null,
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "All other means of mutating deployments and daemonsets are also relevant, since they may trigger rollouts if they modify the pod template: apply, edit, replace, patch, and, at least for now, label and annotate.\n",
        "createdAt" : "2016-01-04T18:31:43Z",
        "updatedAt" : "2016-01-13T00:26:16Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "1a33d95a-c492-408c-a6c1-572dc171cb87",
        "parentId" : "a9bf75fb-4649-4a92-acf8-27dc9c152dc3",
        "authorId" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "body" : "Added\n",
        "createdAt" : "2016-01-11T22:19:55Z",
        "updatedAt" : "2016-01-13T00:26:16Z",
        "lastEditedBy" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "tags" : [
        ]
      }
    ],
    "commit" : "c492462f906d6487b9f8d86500186d92e8028a90",
    "line" : 82,
    "diffHunk" : "@@ -1,1 +80,84 @@\nUsers may use `kubectl scale` or `kubectl autoscale` to scale up and down Deployments (both already implemented).\n\n### `kubectl rollout`\n"
  },
  {
    "id" : "ee403b78-a7ff-4721-ab76-f4422b295ab9",
    "prId" : 18404,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1f3f9e4a-237e-42b8-bfe8-3ca63b0ebbf6",
        "parentId" : null,
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "FYI: We may eventually want to make this a preference. The issue about splitting preferences into a separate file is #10693.\n",
        "createdAt" : "2016-01-13T06:35:12Z",
        "updatedAt" : "2016-01-13T06:35:12Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      }
    ],
    "commit" : "c492462f906d6487b9f8d86500186d92e8028a90",
    "line" : 151,
    "diffHunk" : "@@ -1,1 +149,153 @@\nWe store previous deployment version information in annotations `rollout.kubectl.kubernetes.io/change-source` and `rollout.kubectl.kubernetes.io/version` of replication controllers of the deployment, to support rolling back changes as well as for the users to view previous changes with `kubectl rollout history`.\n- `rollout.kubectl.kubernetes.io/change-source`, which is optional, records the kubectl command of the last mutation made to this rollout. Users may use `--record` in `kubectl` to record current command in this annotation.\n- `rollout.kubectl.kubernetes.io/version` records a version number to distinguish the change sequence of a deployment's\nreplication controllers. A deployment obtains the largest version number from its replication controllers and increments the number by 1 upon update or creation of the deployment, and update the version annotation of its new replication controller."
  },
  {
    "id" : "5b367095-44d3-4f60-b640-b949e2d78011",
    "prId" : 18404,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4bbb8423-0974-4b61-9f9c-6320d18505ff",
        "parentId" : null,
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "These annotations would be written to Deployment and then copied to the corresponding RC.\n",
        "createdAt" : "2016-01-13T06:44:58Z",
        "updatedAt" : "2016-01-13T06:44:58Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "49f01498-f433-42b4-9155-c8adfd71fd1e",
        "parentId" : "4bbb8423-0974-4b61-9f9c-6320d18505ff",
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "Do we plan to keep a version annotation in the Deployment object and maintain it? \n",
        "createdAt" : "2016-01-13T20:02:02Z",
        "updatedAt" : "2016-01-13T20:02:02Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      }
    ],
    "commit" : "c492462f906d6487b9f8d86500186d92e8028a90",
    "line" : 150,
    "diffHunk" : "@@ -1,1 +148,152 @@### Deployment Version\n\nWe store previous deployment version information in annotations `rollout.kubectl.kubernetes.io/change-source` and `rollout.kubectl.kubernetes.io/version` of replication controllers of the deployment, to support rolling back changes as well as for the users to view previous changes with `kubectl rollout history`.\n- `rollout.kubectl.kubernetes.io/change-source`, which is optional, records the kubectl command of the last mutation made to this rollout. Users may use `--record` in `kubectl` to record current command in this annotation.\n- `rollout.kubectl.kubernetes.io/version` records a version number to distinguish the change sequence of a deployment's"
  },
  {
    "id" : "f5705865-e4ad-4703-a1fe-7783e5f314c5",
    "prId" : 18404,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d55f9354-f035-4576-a119-c296e378ae2f",
        "parentId" : null,
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "And potentially resume.\n",
        "createdAt" : "2016-01-13T06:45:31Z",
        "updatedAt" : "2016-01-13T06:45:31Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      }
    ],
    "commit" : "c492462f906d6487b9f8d86500186d92e8028a90",
    "line" : 168,
    "diffHunk" : "@@ -1,1 +166,170 @@### Pause Deployments\n\nUsers sometimes need to temporarily disable a deployment. See issue [#14516](https://github.com/kubernetes/kubernetes/issues/14516).\n\n### Perm-failed Deployments"
  }
]