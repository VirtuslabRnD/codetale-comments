[
  {
    "id" : "00324d53-8d4b-47b3-a6be-acdd594da3f8",
    "prId" : 10679,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "576ab5a6-1166-4f2c-8a52-8b2ba318107e",
        "parentId" : null,
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "So I debate at times why we don't cache the entire contents of etcd in the api-server, even O(10^3+) nodes, it's not that much data, vs. acting like an etcd pass through.  \n",
        "createdAt" : "2015-07-07T21:22:32Z",
        "updatedAt" : "2015-07-23T06:14:44Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      },
      {
        "id" : "7b882ed7-2425-43fb-a4a0-25b3ae4d16c7",
        "parentId" : "576ab5a6-1166-4f2c-8a52-8b2ba318107e",
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "Ha, I read on... and that's what you're doing. \n",
        "createdAt" : "2015-07-08T01:17:23Z",
        "updatedAt" : "2015-07-23T06:14:44Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      },
      {
        "id" : "ea41a2ea-15aa-4bef-98df-98ec306f9fc2",
        "parentId" : "576ab5a6-1166-4f2c-8a52-8b2ba318107e",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Done (in a way)\n",
        "createdAt" : "2015-07-16T09:53:50Z",
        "updatedAt" : "2015-07-23T06:14:44Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "f69809c2-a38e-482a-bc2c-386556ef7d1c",
        "parentId" : "576ab5a6-1166-4f2c-8a52-8b2ba318107e",
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "Yes, we should definitely keep the whole state (all resources within the scope of interest of a component) in memory, all the time.\n",
        "createdAt" : "2015-07-22T06:51:13Z",
        "updatedAt" : "2015-07-23T06:14:44Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      }
    ],
    "commit" : "dd6ba6a07fb75adfc86845bedafc9f73acf67615",
    "line" : 45,
    "diffHunk" : "@@ -1,1 +43,47 @@- having too many open watches on etcd\n- avoiding deserializing/converting the same objects multiple times in different\nwatch results\n\nIn the future, we would also like to add an indexing mechanism to the watch."
  },
  {
    "id" : "cd0e373d-27e6-46a2-b5c9-9e6764e16288",
    "prId" : 10679,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "aa74f333-a391-4f0a-afff-392fb78ceb84",
        "parentId" : null,
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "why not optionally add meta-data to support caching algos. \n",
        "createdAt" : "2015-07-08T01:19:07Z",
        "updatedAt" : "2015-07-23T06:14:44Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      },
      {
        "id" : "77b143cc-3fcc-4dc1-9d19-0bfaf31bebfb",
        "parentId" : "aa74f333-a391-4f0a-afff-392fb78ceb84",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "@timothysc These are not \"caches\" in the normal sense, these are a rolling history window so that you can support clients having some amount of latency between their list and watch calls. There's no possibility to use another algorithm here. And also no need, because everything will be in memory. The things that fall out of the \"cache\" are not e.g. pods, but _changes_ to pods.\n",
        "createdAt" : "2015-07-15T20:22:53Z",
        "updatedAt" : "2015-07-23T06:14:44Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "3dfbe7d9-19b2-4e56-991b-a0c920892901",
        "parentId" : "aa74f333-a391-4f0a-afff-392fb78ceb84",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Yes - this is exactly what @lavalamp wrote (in fact I was trying to wrote exactly that, but it seems I wasn't clear enough). Reprased - hopefully will be better in the new version.\n",
        "createdAt" : "2015-07-16T10:02:24Z",
        "updatedAt" : "2015-07-23T06:14:44Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "40239a7d-9a57-4897-a841-36b65a100aaa",
        "parentId" : "aa74f333-a391-4f0a-afff-392fb78ceb84",
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "We'll have all the state in memory, so we should also be able to return resources (e.g. pods) without new calls to etcd.\n",
        "createdAt" : "2015-07-22T06:57:29Z",
        "updatedAt" : "2015-07-23T06:14:44Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      }
    ],
    "commit" : "dd6ba6a07fb75adfc86845bedafc9f73acf67615",
    "line" : 87,
    "diffHunk" : "@@ -1,1 +85,89 @@  - have different cache sizes for different resources (e.g. bigger cache\n    [= longer history] for pods, which can significantly affect performance)\n  - avoid any overhead for objects that are watched very rarely (e.g. events\n    are almost not watched at all, but there are a lot of them)\n  - filter the cache for each watcher more effectively"
  },
  {
    "id" : "9357caf4-c20f-4740-92bd-a52f825021f7",
    "prId" : 10679,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0eab6f0a-4e16-465f-afb3-dc8d412e8867",
        "parentId" : null,
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "So it's a push update vs. a thundering re-list storm? \n",
        "createdAt" : "2015-07-08T01:33:56Z",
        "updatedAt" : "2015-07-23T06:14:44Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      },
      {
        "id" : "2ab19c83-9c7f-493c-9801-760b6dcdc58c",
        "parentId" : "0eab6f0a-4e16-465f-afb3-dc8d412e8867",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Yes - that's the idea.\n",
        "createdAt" : "2015-07-08T07:04:14Z",
        "updatedAt" : "2015-07-23T06:14:44Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "dd6ba6a07fb75adfc86845bedafc9f73acf67615",
    "line" : null,
    "diffHunk" : "@@ -1,1 +167,171 @@\n  Whenever reslisting will be done to refresh the internal watch to etcd,\n  EtcdResync event will be send to all the watchers. It will contain the\n  full list of all the objects the watcher is interested in (appropriately\n  filtered) as the parameter of this watch event."
  },
  {
    "id" : "a2b56b18-4706-4060-9857-3859a1a88e3d",
    "prId" : 10679,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2c5478aa-eecd-4bb3-9f0b-fd4e88f8a1e0",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "I'd really strongly suggest that you do this in a second step, not at the same time. And IMO this needs to be gated by API version. We can't just start sending this, it will break all v1 clients.\n\nFor the first step, just disconnect everyone.\n\nThis case should be super rare, as it should be easy for apiserver to keep up, so I'm not worried about it.\n",
        "createdAt" : "2015-07-15T20:39:43Z",
        "updatedAt" : "2015-07-23T06:14:44Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "3e80760f-b353-425d-93d5-29208880a210",
        "parentId" : "2c5478aa-eecd-4bb3-9f0b-fd4e88f8a1e0",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Done.\n",
        "createdAt" : "2015-07-16T11:37:12Z",
        "updatedAt" : "2015-07-23T06:14:44Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "dd6ba6a07fb75adfc86845bedafc9f73acf67615",
    "line" : null,
    "diffHunk" : "@@ -1,1 +164,168 @@necessary. In such case, to avoid LIST requests coming from all watchers at\nthe same time, we can introduce an additional etcd event type:\n[EtcdResync](../../pkg/tools/etcd_helper_watch.go#L36)\n\n  Whenever reslisting will be done to refresh the internal watch to etcd,"
  }
]