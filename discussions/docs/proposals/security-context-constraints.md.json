[
  {
    "id" : "a1cca984-092a-45e1-b7c1-5b5523f1a240",
    "prId" : 7893,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a03ed509-482c-443e-b830-cb80546c375b",
        "parentId" : null,
        "authorId" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "body" : "In openshift, IIUC, when you create a project, you create one or more RoleBindings in that new namespace.  Those RoleBindings reference Roles which list PolicyRules.\n\nI'm not clear on whether a Role it typically pointed to by only one namespace, or by many.  The rest of this comment assumes that it it the former, and might not make sense if it is the latter.\n\nWhy not attach the SecurityContext to any PolicyRule(s) that allow for creation of Pods?  \n\nSome useful properties:\n- viewing a Role gives all the information about what that Role can do, including what sorts of object the role could possibly create.\n- harmonizes PolicyRule and SecurityContextConstraint.\n- decouples SecurityContextConstraints from definition of users and groups.\n",
        "createdAt" : "2015-05-26T20:58:07Z",
        "updatedAt" : "2016-02-05T14:04:23Z",
        "lastEditedBy" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "tags" : [
        ]
      },
      {
        "id" : "9031a1f4-ad91-487f-a44c-fc3b7cf8f2cd",
        "parentId" : "a03ed509-482c-443e-b830-cb80546c375b",
        "authorId" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "body" : "In the above suggestion, the Authorize() step just does:\n- if no SecurityContext is specified in Pod, the authorize, if pod creation is otherwise authorized. \n- if SecurityContext is specified in Pod, then authorize only if it is allowed according to SecurityContextConstraints of that PolicyRule.  \n\nAn admission control step does:\n- if SecurityContext is unset or underspecified, then fill it in with allocated/default values.\n- if SecurityContext is fully-specified, then do nothing, since the  Authorize() step has allowed it.\n",
        "createdAt" : "2015-05-26T21:08:12Z",
        "updatedAt" : "2016-02-05T14:04:23Z",
        "lastEditedBy" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "tags" : [
        ]
      }
    ],
    "commit" : "c22f348f86e2a9836b0d18be3f27f0ff1c7d5181",
    "line" : null,
    "diffHunk" : "@@ -1,1 +274,278 @@1.  Add the user (or group) to an existing `PodSecurityPolicy` object with the proper\nelevated privileges.\n\n## Admission\n"
  },
  {
    "id" : "0c16fc6b-faa9-43c2-8743-43cc439dc83b",
    "prId" : 7893,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0963d89f-0289-4824-bb10-abd62c2b563e",
        "parentId" : null,
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "Why would I need to run a privileged container _in_ the namespace? What utility does that have?\n\n> or execute commands in that pod\n\nI'm assuming this is \"cluster operators should be able to execute commands in that pod\" not \"users cannot create pods with these privileges or execute commands in that pod\". \n\nExecute is a resource not an object attribute. We should allow or deny exec in authorization not in admission.\n",
        "createdAt" : "2015-09-11T17:42:20Z",
        "updatedAt" : "2016-02-05T14:04:23Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      },
      {
        "id" : "22a4f777-e4f8-4f52-8dab-e24894a78d8c",
        "parentId" : "0963d89f-0289-4824-bb10-abd62c2b563e",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "Not sure what you mean... all containers in pods are in namespaces... if you want to run infrastructure in pods, and the infra containers need to be privileged, then you need this. This lets a cluster admin do something like scheduling a privileged router pod in every namespace while still limiting other users in the namespace to normal pods.\n",
        "createdAt" : "2015-09-11T17:50:46Z",
        "updatedAt" : "2016-02-05T14:04:23Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "776f42af-6eba-482f-a990-23aeb0cc7380",
        "parentId" : "0963d89f-0289-4824-bb10-abd62c2b563e",
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "As a cluster admin, why would I need to run a pod as privileged in a namespace that doesn't allow privileged pods rather than creating a new namespace that allows privileged pods and creating the pod there?\n",
        "createdAt" : "2015-09-11T20:27:05Z",
        "updatedAt" : "2016-02-05T14:04:23Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      },
      {
        "id" : "2828e244-ed3c-4999-bc5d-7cbefaf39276",
        "parentId" : "0963d89f-0289-4824-bb10-abd62c2b563e",
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "Never mind. I think I disagree with myself. I'll mull this over this weekend and review openshift user/group policy stuff to get context.\n",
        "createdAt" : "2015-09-11T23:06:58Z",
        "updatedAt" : "2016-02-05T14:04:23Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      },
      {
        "id" : "694efbee-4786-4ac1-9335-6c580fd7b6cf",
        "parentId" : "0963d89f-0289-4824-bb10-abd62c2b563e",
        "authorId" : "e3588215-d816-4819-aeb2-ba1d8a6b343a",
        "body" : "Any update on your thinking, @mikedanese?\n",
        "createdAt" : "2015-09-30T05:13:31Z",
        "updatedAt" : "2016-02-05T14:04:23Z",
        "lastEditedBy" : "e3588215-d816-4819-aeb2-ba1d8a6b343a",
        "tags" : [
        ]
      },
      {
        "id" : "c2e90ac3-d8dc-48c2-ac66-a8bc908f1193",
        "parentId" : "0963d89f-0289-4824-bb10-abd62c2b563e",
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "I agree that it's a use case. I'm okay with it how it is written in the design doc.\n",
        "createdAt" : "2015-09-30T16:05:38Z",
        "updatedAt" : "2016-02-05T14:04:23Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      }
    ],
    "commit" : "c22f348f86e2a9836b0d18be3f27f0ff1c7d5181",
    "line" : null,
    "diffHunk" : "@@ -1,1 +62,66 @@Use case 2:\nAs a cluster operator, an infrastructure component should be able to create a pod with elevated\nprivileges in a namespace where regular users cannot create pods with these privileges or execute\ncommands in that pod.\n"
  },
  {
    "id" : "e2950986-b6d0-424e-b775-826ef5f84551",
    "prId" : 7893,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7a48b865-4a38-4846-aff4-d79a63f8fd76",
        "parentId" : null,
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "Can a group contain another group as a member?\n",
        "createdAt" : "2015-09-14T18:05:26Z",
        "updatedAt" : "2016-02-05T14:04:23Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      },
      {
        "id" : "0823d2da-6fc4-4dba-ad67-1270ce284328",
        "parentId" : "7a48b865-4a38-4846-aff4-d79a63f8fd76",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "In our current model we assume that that's a function of the authenticator\n- if the authenticator returns a set of groups for a user, we can compare\n  it against this list.  The details of expansion are hidden.\n\nOn Mon, Sep 14, 2015 at 2:05 PM, Mike Danese notifications@github.com\nwrote:\n\n> In docs/proposals/security-context-constraints.md\n> https://github.com/kubernetes/kubernetes/pull/7893#discussion_r39425961:\n> \n> > -   kapi.TypeMeta\n> > -   kapi.ListMeta\n> >   +\n> > -   Items []PodSecurityPolicy\n> >   +}\n> >   +```\n> >   +\n> >   +### PodSecurityPolicy Lifecycle\n> >   +\n> >   +As reusable objects in the root scope, PodSecurityPolicy follows the lifecycle of the\n> >   +cluster itself.  Maintenance of constraints such as adding, assigning, or changing them is the\n> >   +responsibility of the cluster administrator.\n> >   +\n> >   +Creating a new user within a namespace should not require the cluster administrator to\n> >   +define the user's PodSecurityPolicy.  They should receive the default set of policies\n> >   +that the administrator has defined for the groups they are assigned.\n> \n> Can a group contain another group as a member?\n> \n> â€”\n> Reply to this email directly or view it on GitHub\n> https://github.com/kubernetes/kubernetes/pull/7893/files#r39425961.\n\n## \n\nClayton Coleman | Lead Engineer, OpenShift\n",
        "createdAt" : "2015-09-14T18:19:50Z",
        "updatedAt" : "2016-02-05T14:04:23Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "c22f348f86e2a9836b0d18be3f27f0ff1c7d5181",
    "line" : 257,
    "diffHunk" : "@@ -1,1 +255,259 @@Creating a new user within a namespace should not require the cluster administrator to\ndefine the user's PodSecurityPolicy.  They should receive the default set of policies\nthat the administrator has defined for the groups they are assigned.\n\n"
  },
  {
    "id" : "2086ffe7-7dcc-4bd4-920f-6fc03da86801",
    "prId" : 7893,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6cb93114-d6ce-42fe-9e18-ebae2c594749",
        "parentId" : null,
        "authorId" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "body" : "Is there a fifth use-case now that there is `RunAsNonRoot`?\n",
        "createdAt" : "2015-09-18T15:27:49Z",
        "updatedAt" : "2016-02-05T14:04:23Z",
        "lastEditedBy" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "tags" : [
        ]
      },
      {
        "id" : "38dcd094-560e-4255-808b-810a5e64660d",
        "parentId" : "6cb93114-d6ce-42fe-9e18-ebae2c594749",
        "authorId" : "fb0525d4-54d0-4bfa-8b41-17f8b31b43fd",
        "body" : "Can probably roll it in to UC 1 or make a new one\n",
        "createdAt" : "2015-09-18T15:29:51Z",
        "updatedAt" : "2016-02-05T14:04:23Z",
        "lastEditedBy" : "fb0525d4-54d0-4bfa-8b41-17f8b31b43fd",
        "tags" : [
        ]
      }
    ],
    "commit" : "c22f348f86e2a9836b0d18be3f27f0ff1c7d5181",
    "line" : 75,
    "diffHunk" : "@@ -1,1 +73,77 @@pods and service accounts within a project\n\n\n## Requirements\n"
  }
]