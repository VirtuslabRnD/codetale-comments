[
  {
    "id" : "ace32bb5-780c-4712-90dc-0bf50dbce18d",
    "prId" : 12070,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e5c1365f-7b22-4375-b979-8c0262c57078",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Or maybe we should have a single binary that will be simulating N instances of KubeletSim? This should probably simplify the setup.\n",
        "createdAt" : "2015-07-31T08:59:38Z",
        "updatedAt" : "2015-08-11T07:27:19Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "d8bb70e5-d3db-4476-bef3-d5a7ad1bfbcf",
        "parentId" : "e5c1365f-7b22-4375-b979-8c0262c57078",
        "authorId" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "body" : "Let's not get ahead of ourselves. I don't think we should think how it will be packed into binaries, or set up, but how to write a library that can simulate a single node.\n",
        "createdAt" : "2015-07-31T14:03:34Z",
        "updatedAt" : "2015-08-11T07:27:19Z",
        "lastEditedBy" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "tags" : [
        ]
      },
      {
        "id" : "5fbd7024-126f-4700-84fd-30632b8f94c7",
        "parentId" : "e5c1365f-7b22-4375-b979-8c0262c57078",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "I kind of agree - but Kubelet is kind of modular (e.g. it has containerManager, containerRuntime, etc.) Maybe switching some of those to their \"fake\" implementations would be easier. But I don't have much expertise in this area, so writing \"kubelet simulator\" from scratch might be easier indeed.\n",
        "createdAt" : "2015-07-31T14:32:15Z",
        "updatedAt" : "2015-08-11T07:27:19Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "f1e6f515-91e7-4b6f-b609-3c8cbf065ed4",
        "parentId" : "e5c1365f-7b22-4375-b979-8c0262c57078",
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "Or have a mode for the kubelet that can fork itself (x) times per machine. Provided we don't use leverage memory to hard it should be ok. \n",
        "createdAt" : "2015-07-31T19:48:58Z",
        "updatedAt" : "2015-08-11T07:27:19Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      },
      {
        "id" : "0ffae6e6-4564-4496-915b-3daebeb3f4b6",
        "parentId" : "e5c1365f-7b22-4375-b979-8c0262c57078",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Memory is one thing, but I think that more problems can appear in that approach (e.g. Kubelet has some requirements about the network, about Docker, etc.). I think fighting with also of those can:\n1. complicate the code a lot\n2. be more expensive in terms of engineering time than creating some simple library that will simulate the load.\n",
        "createdAt" : "2015-08-03T08:47:30Z",
        "updatedAt" : "2015-08-11T07:27:19Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "170142d6-769a-4092-b358-2226553391f6",
        "parentId" : "e5c1365f-7b22-4375-b979-8c0262c57078",
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "Well aware of the constraints on local system, but the biggest issue that I can see is not the networking, but instead the process tracking with docker.  Which kubelet would own what. \n\nPerhaps @dchen1107 could shed some details here. \n",
        "createdAt" : "2015-08-05T13:55:17Z",
        "updatedAt" : "2015-08-11T07:27:19Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      },
      {
        "id" : "3b84df94-b10c-49f5-afcc-f590b4b2f91d",
        "parentId" : "e5c1365f-7b22-4375-b979-8c0262c57078",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "I don't want to run any Docker at all for that.\nSince we are not going to run any containers, it's not needed at all.\n",
        "createdAt" : "2015-08-05T13:57:02Z",
        "updatedAt" : "2015-08-11T07:27:19Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "4f725900e33d593ec8a2ece623212f3e3dd0ae0a",
    "line" : 75,
    "diffHunk" : "@@ -1,1 +73,77 @@   changes read from apiserver.\n\t TBD: Maybe we can reuse a real Kubelet for it by just injecting some \"fake\"\n   interfaces to it?\n3. Similarly create a KubeProxySim that is generating the same load on apiserver\n   as a real KubeProxy. Again, since we are not planning to talk to those"
  },
  {
    "id" : "61466216-285c-49bb-a703-c4d6b7814060",
    "prId" : 12070,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2a28e985-25c7-4ca7-b3c9-625a8a041c1e",
        "parentId" : null,
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "I'm much more a fan of oversubscription and glide-in vs. simulation.  I just think as the system changes it will become difficult to manage. \n",
        "createdAt" : "2015-07-31T19:44:38Z",
        "updatedAt" : "2015-08-11T07:27:19Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      },
      {
        "id" : "3c6e5d72-da8f-4add-946c-23709f5e5d6b",
        "parentId" : "2a28e985-25c7-4ca7-b3c9-625a8a041c1e",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "I don't fully agree with that approach. Although I think that \"glide-in\" approach has some advantages, we have a \"simulation framework\" internally for borg and it works really really well.\n",
        "createdAt" : "2015-08-03T08:50:29Z",
        "updatedAt" : "2015-08-11T07:27:19Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "4f725900e33d593ec8a2ece623212f3e3dd0ae0a",
    "line" : null,
    "diffHunk" : "@@ -1,1 +68,72 @@\n1. Determine what requests both KubeProxy and Kubelet are sending to apiserver.\n2. Create a KubeletSim that is generating the same load on apiserver that the\n   real Kubelet, but is not starting any containers. In the initial version we\n   can assume that pods never die, so it is enough to just react on the state"
  },
  {
    "id" : "57617401-7d2b-43cb-94fd-fe9bc320bc95",
    "prId" : 12070,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0af6506b-9a63-4ff5-8edf-848e24015f64",
        "parentId" : null,
        "authorId" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "body" : "Would the load it generates have to match up semantically to the load generated by KubeletSim/KubeProxySim? For example, KubeletSim can only report a pod that has been created through the API server?\n",
        "createdAt" : "2015-07-31T21:23:24Z",
        "updatedAt" : "2015-08-11T07:27:19Z",
        "lastEditedBy" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "tags" : [
        ]
      },
      {
        "id" : "8bed3e1e-6255-433d-98a0-8a0ce3b39941",
        "parentId" : "0af6506b-9a63-4ff5-8edf-848e24015f64",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "I'm not sure if I understood your comment.\nThe load generator I'm talking above is not for Kubelet - it will just be generating load on apiserver (e.g. creating/updating/deleting pods or RCs). Those pods will then be pick by KubeletSims. I would like to avoid creating anything very sophisticated in the first pass to just prove that this approach is useful.\n",
        "createdAt" : "2015-08-03T07:17:54Z",
        "updatedAt" : "2015-08-11T07:27:19Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "f0dc69af-fb4f-4c4e-9fb8-943d345c617a",
        "parentId" : "0af6506b-9a63-4ff5-8edf-848e24015f64",
        "authorId" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "body" : "Sorry, I got confused what \"it\" referred to.\n",
        "createdAt" : "2015-08-08T06:08:48Z",
        "updatedAt" : "2015-08-11T07:27:19Z",
        "lastEditedBy" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "tags" : [
        ]
      },
      {
        "id" : "c7b4123f-0430-46fb-90e3-d75d017d7469",
        "parentId" : "0af6506b-9a63-4ff5-8edf-848e24015f64",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Sorry - I meant \"create a load generator to simulate some load on the cluster (probably initially ...)\"\n",
        "createdAt" : "2015-08-10T06:31:38Z",
        "updatedAt" : "2015-08-11T07:27:19Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "4f725900e33d593ec8a2ece623212f3e3dd0ae0a",
    "line" : 84,
    "diffHunk" : "@@ -1,1 +82,86 @@   a cluster with KubeletSim and KubeProxySim instead of real ones and put\n   a bunch of them on a single machine.\n5. Create a load generator for it (probably initially it would be enough to\n   reuse tests that we use in gce-scalability suite).\n"
  },
  {
    "id" : "995ab048-3365-4851-a5f1-162cf477e7bd",
    "prId" : 12070,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d2a578ab-236d-43b3-bce9-4598e59c23de",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "@davidopp - I've added this one. What do you think about it?\n",
        "createdAt" : "2015-08-03T08:52:01Z",
        "updatedAt" : "2015-08-11T07:27:19Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "512f0c52-a416-4a0e-9b0d-e574769d2cde",
        "parentId" : "d2a578ab-236d-43b3-bce9-4598e59c23de",
        "authorId" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "body" : "Looks fine.\n",
        "createdAt" : "2015-08-08T06:01:23Z",
        "updatedAt" : "2015-08-11T07:27:19Z",
        "lastEditedBy" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "tags" : [
        ]
      }
    ],
    "commit" : "4f725900e33d593ec8a2ece623212f3e3dd0ae0a",
    "line" : 46,
    "diffHunk" : "@@ -1,1 +44,48 @@(something like \"k8s-bot run scalability tests please\" should be feasible).\n\nHowever, running performance tests on 1000-node clusters (or even bigger in the\nfuture is) is a non-starter. Thus, we need some more sophisticated infrastructure\nto simulate big clusters on relatively small number of machines and/or cores."
  },
  {
    "id" : "a75fba6c-8f8c-4655-b014-ba7f8882b38c",
    "prId" : 12070,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ea82b604-475a-4801-baec-4316dea31935",
        "parentId" : null,
        "authorId" : "aee8926e-0646-4183-b0d7-65633cf782b0",
        "body" : "\"real Kubelet nor KubeProxy\"\n",
        "createdAt" : "2015-08-04T12:31:25Z",
        "updatedAt" : "2015-08-11T07:27:19Z",
        "lastEditedBy" : "aee8926e-0646-4183-b0d7-65633cf782b0",
        "tags" : [
        ]
      },
      {
        "id" : "5827ad76-a468-4018-91f6-173035bfb0e0",
        "parentId" : "ea82b604-475a-4801-baec-4316dea31935",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Done.\n",
        "createdAt" : "2015-08-04T13:12:40Z",
        "updatedAt" : "2015-08-11T07:27:19Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "4f725900e33d593ec8a2ece623212f3e3dd0ae0a",
    "line" : null,
    "diffHunk" : "@@ -1,1 +59,63 @@\nSince we do not focus on the node performance, we don't need real Kubelet nor\nKubeProxy - in fact we don't even need to start real containers.\nAll we actually need is to have some Kubelet-like and KubeProxy-like components\nthat will be simulating the load on apiserver that their real equivalents are"
  }
]