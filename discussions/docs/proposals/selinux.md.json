[
  {
    "id" : "4e47edb6-d086-4ce8-ae70-2e8554f712ba",
    "prId" : 14192,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c3a5cb09-ee52-420b-ab92-987b2b66f262",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "what does this mean?  We don't have a cluster config object.\n",
        "createdAt" : "2015-09-23T21:00:50Z",
        "updatedAt" : "2015-09-30T23:20:32Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "9f491bb4-9cf5-4044-8802-1c3eb670431d",
        "parentId" : "c3a5cb09-ee52-420b-ab92-987b2b66f262",
        "authorId" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "body" : "#14513 \n",
        "createdAt" : "2015-09-24T19:55:15Z",
        "updatedAt" : "2015-09-30T23:20:32Z",
        "lastEditedBy" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "tags" : [
        ]
      }
    ],
    "commit" : "7f049b7deb545970a235125d9438c9bdbc10fea7",
    "line" : null,
    "diffHunk" : "@@ -1,1 +273,277 @@criteria to activate the kubelet SELinux label management for volumes are:\n\n1.  SELinux integration is enabled in the cluster\n2.  SELinux is enabled on the node\n3.  The `pod.Spec.SecurityContext.SELinuxOptions` field is set"
  },
  {
    "id" : "65e40668-33b3-405b-8fd0-987f8950dc0e",
    "prId" : 14192,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "96b582ad-2a6b-49ea-81e0-05aae643d1ca",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "This taxonomy is really the same as the PV taxonomy:  RWO, ROX, RWX\n\nSpecifically your 1.2 is a lie.  Most block devices support single-writer or multi-reader modes\n",
        "createdAt" : "2015-09-25T23:35:56Z",
        "updatedAt" : "2015-09-30T23:20:32Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "c69e426e-239c-42a3-b0a7-04c7d11dde1a",
        "parentId" : "96b582ad-2a6b-49ea-81e0-05aae643d1ca",
        "authorId" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "body" : "ack; I'll rewrite.\n",
        "createdAt" : "2015-09-27T16:34:22Z",
        "updatedAt" : "2015-09-30T23:20:32Z",
        "lastEditedBy" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "tags" : [
        ]
      },
      {
        "id" : "00dba3f6-37a6-442c-8850-ebb3653ccff4",
        "parentId" : "96b582ad-2a6b-49ea-81e0-05aae643d1ca",
        "authorId" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "body" : "@thockin So, is it really that 1.2 needs to be split into:\n1.  Use of network block devices without using PVs\n2.  Use of network block devices with PVs in `ReadWriteOnce` mode\n3.  Use of network block devices with PVs in `*Many` modes\n\nI think (1) and (2) go where 1.2 is now, and (3) should be another bullet in 'shared storage'\n\n@markturansky @wattsteve @childsb @swagiaal \n",
        "createdAt" : "2015-09-28T19:39:13Z",
        "updatedAt" : "2015-09-30T23:20:32Z",
        "lastEditedBy" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "tags" : [
        ]
      },
      {
        "id" : "e1a77bcc-6d8b-46ca-91db-d0db5a1058a4",
        "parentId" : "96b582ad-2a6b-49ea-81e0-05aae643d1ca",
        "authorId" : null,
        "body" : "I think the use of \"Unshared\" vs \"Shared\" is confusing here. The real dividing line is \"Volumes which support client side chcon\" and \"volumes which do not\"\n",
        "createdAt" : "2015-09-28T20:02:38Z",
        "updatedAt" : "2015-09-30T23:20:32Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      },
      {
        "id" : "5f32f270-7f32-4d31-a511-de4595e2bca6",
        "parentId" : "96b582ad-2a6b-49ea-81e0-05aae643d1ca",
        "authorId" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "body" : "I don't agree, @swagiaal.  For example, in the use-case where you have a network block device being used via a PV in `ReadOnlyMany` mode, I don't think you want to do the chcon, even though the block device supports it.  I think that falls into the same category as NFS, where you can't really do the chcon from the client side (due to the security risk you take on) even if you're in `ReadWriteOnce` PV mode.\n",
        "createdAt" : "2015-09-28T20:07:38Z",
        "updatedAt" : "2015-09-30T23:20:32Z",
        "lastEditedBy" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "tags" : [
        ]
      },
      {
        "id" : "07c86449-1256-4ef7-b37c-4cc0403be733",
        "parentId" : "96b582ad-2a6b-49ea-81e0-05aae643d1ca",
        "authorId" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "body" : "To expand a little bit more, if you're using a block device-based volume that supports `chcon` in one of the `Many` PV modes, I think you have problems similar to 'shared' FSs like NFS, etc:\n1.  Which context is the right one to use?\n2.  How should manage the context?\n\nI'm inclined to say the right point at which to solve the above questions is when such a volume is provisioned rather than when it is mounted into a pod.\n",
        "createdAt" : "2015-09-29T01:54:54Z",
        "updatedAt" : "2015-09-30T23:20:32Z",
        "lastEditedBy" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "tags" : [
        ]
      },
      {
        "id" : "7a726c5b-207e-4345-aa32-29878a2fdb94",
        "parentId" : "96b582ad-2a6b-49ea-81e0-05aae643d1ca",
        "authorId" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "body" : "I'm leaning towards rewriting this section when I make a pass back through this doc.\n",
        "createdAt" : "2015-09-29T01:55:12Z",
        "updatedAt" : "2015-09-30T23:20:32Z",
        "lastEditedBy" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "tags" : [
        ]
      },
      {
        "id" : "5857293a-ce4e-42e9-8b05-bd325908d443",
        "parentId" : "96b582ad-2a6b-49ea-81e0-05aae643d1ca",
        "authorId" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "body" : "@wattsteve @childsb Opinions welcome, since this recasts the framework we've been talking about volumes in terms of slightly.  PTAL\n",
        "createdAt" : "2015-09-29T01:55:56Z",
        "updatedAt" : "2015-09-30T23:20:32Z",
        "lastEditedBy" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "tags" : [
        ]
      },
      {
        "id" : "6ff81c13-4ac5-4300-98db-291040f82943",
        "parentId" : "96b582ad-2a6b-49ea-81e0-05aae643d1ca",
        "authorId" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "body" : "@swagiaal For the record, I didn't disagree about being confusing, only on how you were partitioning the space of volumes/FSs.\n",
        "createdAt" : "2015-09-29T01:56:45Z",
        "updatedAt" : "2015-09-30T23:20:32Z",
        "lastEditedBy" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "tags" : [
        ]
      },
      {
        "id" : "d233acbe-d4f3-411d-8636-ad87403ab00f",
        "parentId" : "96b582ad-2a6b-49ea-81e0-05aae643d1ca",
        "authorId" : "8d7e3035-146d-4d3c-86b9-e61987a0f17b",
        "body" : "i think we should lump the 1 write multiple read use case into the shared storage category and fully address it in the next iteration.\n",
        "createdAt" : "2015-09-29T17:23:40Z",
        "updatedAt" : "2015-09-30T23:20:32Z",
        "lastEditedBy" : "8d7e3035-146d-4d3c-86b9-e61987a0f17b",
        "tags" : [
        ]
      }
    ],
    "commit" : "7f049b7deb545970a235125d9438c9bdbc10fea7",
    "line" : 121,
    "diffHunk" : "@@ -1,1 +119,123 @@Kubernetes volumes can be divided into two broad categories:\n\n1.  Unshared storage:\n    1.  Volumes created by the kubelet on the host directory: empty directory, git repo, secret,\n        downward api.  All volumes in this category delegate to `EmptyDir` for their underlying"
  },
  {
    "id" : "f48aa632-598c-44a7-b952-d01e195334e3",
    "prId" : 14192,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1273917a-bdd2-43bc-8b58-75567ae52a96",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "Does \"support\" mean they want the runtime to do :Z or does it mean they handle it themselves and DON'T want auto support?\n",
        "createdAt" : "2015-09-25T23:59:22Z",
        "updatedAt" : "2015-09-30T23:20:32Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "e67c3116-2b1b-44e6-8745-3b7347535a37",
        "parentId" : "1273917a-bdd2-43bc-8b58-75567ae52a96",
        "authorId" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "body" : "They want the runtime to do a chcon\n",
        "createdAt" : "2015-09-27T16:32:02Z",
        "updatedAt" : "2015-09-30T23:20:32Z",
        "lastEditedBy" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "tags" : [
        ]
      },
      {
        "id" : "645ec36b-2b86-47df-ace7-c46f62acb4bd",
        "parentId" : "1273917a-bdd2-43bc-8b58-75567ae52a96",
        "authorId" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "body" : "@thockin Could it be better named, perhaps?  `RequestsKubeletChcon`, `RequestKubeletLabelManagement`, `DesiresInHeartOfHeartsSELinuxLabelManagementFromKubelet`?\n",
        "createdAt" : "2015-09-29T02:18:38Z",
        "updatedAt" : "2015-09-30T23:20:32Z",
        "lastEditedBy" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "tags" : [
        ]
      }
    ],
    "commit" : "7f049b7deb545970a235125d9438c9bdbc10fea7",
    "line" : null,
    "diffHunk" : "@@ -1,1 +290,294 @@```\n\nIndividual volume plugins are responsible for correctly reporting whether they support label\nmanagement in the kubelet.  In the first round of work, only `hostPath` and `emptyDir` and its\nderivations will be tested with ownership management support:"
  },
  {
    "id" : "63118978-29f9-480e-9bb0-4857b2da539c",
    "prId" : 14192,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0ca0609d-a5a6-48f4-afd1-f8b3bc3c01b6",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "does this mean we close #9844?\n",
        "createdAt" : "2015-10-02T18:12:11Z",
        "updatedAt" : "2015-10-02T18:12:11Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "a33b0773-2ab4-41ed-aaf6-042e9e9b1c65",
        "parentId" : "0ca0609d-a5a6-48f4-afd1-f8b3bc3c01b6",
        "authorId" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "body" : "Already closed!\n",
        "createdAt" : "2015-10-02T18:34:43Z",
        "updatedAt" : "2015-10-02T18:34:43Z",
        "lastEditedBy" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "tags" : [
        ]
      }
    ],
    "commit" : "7f049b7deb545970a235125d9438c9bdbc10fea7",
    "line" : 89,
    "diffHunk" : "@@ -1,1 +87,91 @@\n\nThere is a [proposed change](https://github.com/GoogleCloudPlatform/kubernetes/pull/9844) to the\nEmptyDir plugin that adds SELinux relabeling capabilities to that plugin, which is also carried as a\npatch in [OpenShift](https://github.com/openshift/origin).  It is preferable to solve the problem"
  }
]