[
  {
    "id" : "a9efd7c1-3a56-459e-a624-062894b0d49d",
    "prId" : 17201,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "36c441d3-b0c5-4467-b620-2da341e55408",
        "parentId" : null,
        "authorId" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "body" : "See comment above.\n",
        "createdAt" : "2015-11-13T06:39:56Z",
        "updatedAt" : "2015-12-08T00:44:08Z",
        "lastEditedBy" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "tags" : [
        ]
      },
      {
        "id" : "a8671e5d-489e-4d34-8dc8-f98bb2ab9f5b",
        "parentId" : "36c441d3-b0c5-4467-b620-2da341e55408",
        "authorId" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "body" : "Ack.\n",
        "createdAt" : "2015-11-13T18:26:47Z",
        "updatedAt" : "2015-12-08T00:44:08Z",
        "lastEditedBy" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "tags" : [
        ]
      }
    ],
    "commit" : "54a6da979c6d85dc81fae364124d5c7dd465bc6c",
    "line" : null,
    "diffHunk" : "@@ -1,1 +166,170 @@  `Capacity` (which will yield todays behavior of scheduling based on capacity).\n\n### 3rd party schedulers\n\nThe community should be notified that an update to schedulers is recommended, but if a scheduler is"
  },
  {
    "id" : "3dddb211-052f-4fe3-ad83-d791ef8be253",
    "prId" : 17201,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bce65810-ac15-4d15-b6da-2792933180de",
        "parentId" : null,
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "Can mesos run multiple kubelets per node?\n",
        "createdAt" : "2015-11-17T04:12:47Z",
        "updatedAt" : "2015-12-08T00:44:08Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      },
      {
        "id" : "f19004fd-7fbc-479f-9e76-458a799f8a72",
        "parentId" : "bce65810-ac15-4d15-b6da-2792933180de",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "No, we don't support that, at least not in the near future.\n",
        "createdAt" : "2015-11-17T08:11:09Z",
        "updatedAt" : "2015-12-08T00:44:08Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "64126130-c7b8-4768-b69a-120a02cc427d",
        "parentId" : "bce65810-ac15-4d15-b6da-2792933180de",
        "authorId" : "a6409368-42e0-44a9-bf79-9d3042ac3b65",
        "body" : "@timstclair can we add one Kubelet per node as an assumption in this proposal.\n",
        "createdAt" : "2015-11-18T19:09:19Z",
        "updatedAt" : "2015-12-08T00:44:08Z",
        "lastEditedBy" : "a6409368-42e0-44a9-bf79-9d3042ac3b65",
        "tags" : [
        ]
      },
      {
        "id" : "e2b88b32-4384-47ea-9eab-94cae77f8c9b",
        "parentId" : "bce65810-ac15-4d15-b6da-2792933180de",
        "authorId" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "body" : "Done (under scope).\n",
        "createdAt" : "2015-11-18T19:16:44Z",
        "updatedAt" : "2015-12-08T00:44:08Z",
        "lastEditedBy" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "tags" : [
        ]
      }
    ],
    "commit" : "54a6da979c6d85dc81fae364124d5c7dd465bc6c",
    "line" : null,
    "diffHunk" : "@@ -1,1 +53,57 @@       3. Usage scales with the number of pods running on the node\n2. For external schedulers (such as mesos, hadoop, etc.) integration, they might want to partition\n   compute resources on a given node, limiting how much Kubelet can use. We should provide a\n   mechanism by which they can query kubelet, and reserve some resources for their own purpose.\n"
  },
  {
    "id" : "8a4ad32f-d3f9-4ab9-8a7f-ff6f9051232e",
    "prId" : 17201,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f5ec6776-e576-426c-985f-8965b4d97771",
        "parentId" : null,
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "We may need to recommend a safe upgrade path where both the Kubelets and scheduler(s) are updated before Allocatable is configured to be less than Capacity. Otherwise, schedulers using Capacity could incur many rejected pods.\n",
        "createdAt" : "2015-11-17T07:47:54Z",
        "updatedAt" : "2015-12-08T00:44:08Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "c3ccc840-6ec7-4273-b900-ccd2e525d155",
        "parentId" : "f5ec6776-e576-426c-985f-8965b4d97771",
        "authorId" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "body" : "This strikes me as overly conservative, since it would mean we wouldn't get any of the benefits of `Allocatable` until a later version. What do you mean by \"schedulers using Capacity could incur many rejected pods\"? Rejected by the Kubelet? The proposal below (version discrepency) is to not enforce Allocatable on the kubelet initially, so that schedulers using Capacity won't have pods rejected by the kubelet.\n",
        "createdAt" : "2015-11-17T21:05:40Z",
        "updatedAt" : "2015-12-08T00:44:08Z",
        "lastEditedBy" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "tags" : [
        ]
      }
    ],
    "commit" : "54a6da979c6d85dc81fae364124d5c7dd465bc6c",
    "line" : null,
    "diffHunk" : "@@ -1,1 +103,107 @@```\n\nThe scheduler will use `Allocatable` in place of `Capacity` when scheduling pods, and the Kubelet\nwill use it when performing admission checks.\n"
  },
  {
    "id" : "c8d4fcf2-c33e-4f01-9c03-2b7189c89bc8",
    "prId" : 17201,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3b1ca9e3-79e3-4964-b669-eadeec3e5aa6",
        "parentId" : null,
        "authorId" : "a6409368-42e0-44a9-bf79-9d3042ac3b65",
        "body" : "Update this definition based on the new proposal for meso's case here?\n",
        "createdAt" : "2015-11-18T19:32:25Z",
        "updatedAt" : "2015-12-08T00:44:08Z",
        "lastEditedBy" : "a6409368-42e0-44a9-bf79-9d3042ac3b65",
        "tags" : [
        ]
      },
      {
        "id" : "f4237bd2-1d45-4551-9d83-f0857f159937",
        "parentId" : "3b1ca9e3-79e3-4964-b669-eadeec3e5aa6",
        "authorId" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "body" : "Done.\n",
        "createdAt" : "2015-11-18T21:21:09Z",
        "updatedAt" : "2015-12-08T00:44:08Z",
        "lastEditedBy" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "tags" : [
        ]
      }
    ],
    "commit" : "54a6da979c6d85dc81fae364124d5c7dd465bc6c",
    "line" : null,
    "diffHunk" : "@@ -1,1 +75,79 @@   Kubernetes. Currently this covers all the processes lumped together in the `/system` raw\n   container.\n3. **Kubelet Allocatable** - Compute resources available for scheduling (including scheduled &\n   unscheduled resources). This value is the focus of this proposal. See [below](#api-changes) for\n   more details."
  },
  {
    "id" : "5469ebf6-f204-414f-a011-0360a64fbce6",
    "prId" : 17201,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ccaca52f-0cd4-4005-9588-593224eaa580",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : ":+1: \n",
        "createdAt" : "2015-12-02T07:51:06Z",
        "updatedAt" : "2015-12-08T00:44:08Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "54a6da979c6d85dc81fae364124d5c7dd465bc6c",
    "line" : 102,
    "diffHunk" : "@@ -1,1 +100,104 @@\n```\n   [Allocatable] = [Node Capacity] - [Kube-Reserved] - [System-Reserved]\n```\n"
  }
]