[
  {
    "id" : "b1fe7834-76d0-4603-9302-d73a2b0d57f8",
    "prId" : 17431,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d772675d-6a01-4582-9f90-7c17088bb5f8",
        "parentId" : null,
        "authorId" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "body" : "What about security of the endpoints? I can't remember if we discussed that during the f2f and decided to skip that for now...\n",
        "createdAt" : "2015-11-18T14:37:45Z",
        "updatedAt" : "2015-12-03T09:52:03Z",
        "lastEditedBy" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "tags" : [
        ]
      },
      {
        "id" : "45c31e76-5a75-4bc4-a309-c4a5b36e7b79",
        "parentId" : "d772675d-6a01-4582-9f90-7c17088bb5f8",
        "authorId" : "23a1cb07-5c3e-472f-91f1-e216e00b4739",
        "body" : "I think the decision was that the custom endpoint exposed by the pod would be exposed and accessible.\n\nWe need to add something to the docs to outline that these custom metrics are not private information.\n\nIdeally, we would have something setup where the prometheus endpoint could only be accessible by the kubelet, but I don't believe this was ever planned for the first iteration.\n",
        "createdAt" : "2015-11-18T14:58:09Z",
        "updatedAt" : "2015-12-03T09:52:03Z",
        "lastEditedBy" : "23a1cb07-5c3e-472f-91f1-e216e00b4739",
        "tags" : [
        ]
      },
      {
        "id" : "18d3b870-be9a-482c-a292-21ec030214b8",
        "parentId" : "d772675d-6a01-4582-9f90-7c17088bb5f8",
        "authorId" : "c929c906-4dfb-433b-9bc7-1b4b05c176f8",
        "body" : "Added clarification.\n",
        "createdAt" : "2015-11-19T15:02:34Z",
        "updatedAt" : "2015-12-03T09:52:03Z",
        "lastEditedBy" : "c929c906-4dfb-433b-9bc7-1b4b05c176f8",
        "tags" : [
        ]
      }
    ],
    "commit" : "eb9a2c51d4dc5addf09ce62cf2ada5bed526bf53",
    "line" : null,
    "diffHunk" : "@@ -1,1 +59,63 @@(For version 1.2, we assume that custom metrics are not private information and they are accessible by everyone.\nIn future, we may restrict it by making the endpoints accessible only by kubelet/cAdvisor).\nCAdvisor will collect metrics from such endpoints of all pods on each node by pulling, and expose them to Heapster.\nHeapster will:\n* collect custom metrics from all CAdvisors in the cluster, together with pulling system metrics"
  },
  {
    "id" : "659cbf02-ccf6-46db-82cb-7e13b01212f7",
    "prId" : 17431,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "78a169c9-5926-4807-953f-70da0dc03c3b",
        "parentId" : null,
        "authorId" : "3a4b4830-dc71-4d7e-a7db-de2453284945",
        "body" : "How does this look when you actually write it out?  Pardon my ignorance here, but do we have any other JSON-based annotations?  It seems like having a JSON-based annotation might get confusing when a user is reading or writing it out (especially if they try to write YAML instead...)\n\nI do get that we want it just to eventually match the way it will look in PodSpec, though.\n",
        "createdAt" : "2015-11-18T19:56:03Z",
        "updatedAt" : "2015-12-03T09:52:03Z",
        "lastEditedBy" : "3a4b4830-dc71-4d7e-a7db-de2453284945",
        "tags" : [
        ]
      },
      {
        "id" : "0b40fdea-c643-4990-a029-3bf5f7ff016f",
        "parentId" : "78a169c9-5926-4807-953f-70da0dc03c3b",
        "authorId" : "c929c906-4dfb-433b-9bc7-1b4b05c176f8",
        "body" : "Please see [api-conventions](https://github.com/kubernetes/kubernetes/blob/master/docs/devel/api-conventions.md#label-selector-and-annotation-conventions). JSON annotation seems to be a reasonable choice before we make our API stable.\n",
        "createdAt" : "2015-11-19T14:50:19Z",
        "updatedAt" : "2015-12-03T09:52:03Z",
        "lastEditedBy" : "c929c906-4dfb-433b-9bc7-1b4b05c176f8",
        "tags" : [
        ]
      },
      {
        "id" : "dce4b570-5aa1-434f-a443-e67ed4dbfdf9",
        "parentId" : "78a169c9-5926-4807-953f-70da0dc03c3b",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "JSON annotations are our standard pattern in other places.  It's not perfect, but it's better than decomposing the fields\n",
        "createdAt" : "2015-11-19T15:44:32Z",
        "updatedAt" : "2015-12-03T09:52:03Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "cd491bc1-65c7-426c-9cb9-86c4d8ac6301",
        "parentId" : "78a169c9-5926-4807-953f-70da0dc03c3b",
        "authorId" : "3a4b4830-dc71-4d7e-a7db-de2453284945",
        "body" : "I'd argue that have embedded JSON that needs to be written by humans is not the best idea (having to escape quotes by hand and all that), but yeah, the alternatives are not nearly as nice.  Agreed, decomposing the field would be poor.\n",
        "createdAt" : "2015-11-19T16:36:13Z",
        "updatedAt" : "2015-12-03T09:52:03Z",
        "lastEditedBy" : "3a4b4830-dc71-4d7e-a7db-de2453284945",
        "tags" : [
        ]
      }
    ],
    "commit" : "eb9a2c51d4dc5addf09ce62cf2ada5bed526bf53",
    "line" : null,
    "diffHunk" : "@@ -1,1 +111,115 @@\t\t\"names\": [\"myMetric\"]\n\t}\n]\n```\n"
  },
  {
    "id" : "464c2834-c9b4-4097-b661-38cdf7ec2dbe",
    "prId" : 17431,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5924c85f-3313-4825-9c01-ec0fdc41c2db",
        "parentId" : null,
        "authorId" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "body" : "Storing them in a backend isn't strictly required for custom metrics to function, is it?\n",
        "createdAt" : "2015-11-19T16:43:36Z",
        "updatedAt" : "2015-12-03T09:52:03Z",
        "lastEditedBy" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "tags" : [
        ]
      },
      {
        "id" : "d5d8071a-8ff9-4a90-9620-a93038cec438",
        "parentId" : "5924c85f-3313-4825-9c01-ec0fdc41c2db",
        "authorId" : "3a4b4830-dc71-4d7e-a7db-de2453284945",
        "body" : "It makes sense to persist pod-based custom metrics like this  -- if you're exposing the application metrics from your pod to Heapster, you probably want them stored to look at later as well.\n\nFor the push-based metrics, we probably don't want to persist them (considering they may be generated or pulled from the backend itself), but that's a follow-up proposal.\n",
        "createdAt" : "2015-11-19T16:46:12Z",
        "updatedAt" : "2015-12-03T09:52:03Z",
        "lastEditedBy" : "3a4b4830-dc71-4d7e-a7db-de2453284945",
        "tags" : [
        ]
      },
      {
        "id" : "4b32a8fb-5a8c-48df-b2b3-6c47c9f25133",
        "parentId" : "5924c85f-3313-4825-9c01-ec0fdc41c2db",
        "authorId" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "body" : "Agreed. I just wanted to make sure there wasn't a new requirement on a backend specifically for getting custom metrics to work.\n",
        "createdAt" : "2015-11-19T16:48:07Z",
        "updatedAt" : "2015-12-03T09:52:03Z",
        "lastEditedBy" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "tags" : [
        ]
      }
    ],
    "commit" : "eb9a2c51d4dc5addf09ce62cf2ada5bed526bf53",
    "line" : 65,
    "diffHunk" : "@@ -1,1 +63,67 @@* collect custom metrics from all CAdvisors in the cluster, together with pulling system metrics\n(for version 1.2: we assume pooling period of ~30 seconds),\n* store them in a metrics backend (influxDB, Prometheus, Hawkular, GCM, …),\n* expose the latest snapshot of custom metrics for queries (by HPA/scheduler/…) using [model API](https://github.com/kubernetes/heapster/blob/master/docs/model.md).\n"
  },
  {
    "id" : "f12ecf47-cf67-4313-929d-4f81cde6ea75",
    "prId" : 17431,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9435cb8c-f461-4b6e-a826-967913e89fe3",
        "parentId" : null,
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "doesn't this need to be {} and not [] to be a valid JSON doc?\n\nI would have expected:\n\n```\n{  \n  customEndpoints: [ { \"protocol\": \"prometheus\", ... }, { .. } ]\n}\n```\n",
        "createdAt" : "2015-11-23T14:57:16Z",
        "updatedAt" : "2015-12-03T09:52:03Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      },
      {
        "id" : "35ed4a60-13dd-47b7-ba9d-ef048044f5ac",
        "parentId" : "9435cb8c-f461-4b6e-a826-967913e89fe3",
        "authorId" : "c929c906-4dfb-433b-9bc7-1b4b05c176f8",
        "body" : "I think my example is valid (at least it get parsed by on-line JSON parser: http://jsonviewer.stack.hu).\n",
        "createdAt" : "2015-11-27T12:16:03Z",
        "updatedAt" : "2015-12-03T09:52:03Z",
        "lastEditedBy" : "c929c906-4dfb-433b-9bc7-1b4b05c176f8",
        "tags" : [
        ]
      },
      {
        "id" : "7a2419d5-7280-46e9-9234-0e08b7c011e5",
        "parentId" : "9435cb8c-f461-4b6e-a826-967913e89fe3",
        "authorId" : "3a4b4830-dc71-4d7e-a7db-de2453284945",
        "body" : "Having an array at the top level is valid JSON.  The `=` business is not, but I assumed that was just instead of writing out a valid annotations object.\n",
        "createdAt" : "2015-11-30T22:12:57Z",
        "updatedAt" : "2015-12-03T09:52:03Z",
        "lastEditedBy" : "3a4b4830-dc71-4d7e-a7db-de2453284945",
        "tags" : [
        ]
      },
      {
        "id" : "43ad8084-264b-4d60-9566-ce8ec2b6e323",
        "parentId" : "9435cb8c-f461-4b6e-a826-967913e89fe3",
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "Annotations expect the value to be a string, so it has to be quoted and then unpacked and parsed by itself.\n",
        "createdAt" : "2015-12-03T01:27:30Z",
        "updatedAt" : "2015-12-03T09:52:03Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      }
    ],
    "commit" : "eb9a2c51d4dc5addf09ce62cf2ada5bed526bf53",
    "line" : 101,
    "diffHunk" : "@@ -1,1 +99,103 @@\n```\n\"metrics.alpha.kubernetes.io/custom-endpoints\" = [\n\t{\n\t\t\"api\": \"prometheus\","
  },
  {
    "id" : "ede7b970-97aa-4b34-9d1e-8d9acbb064d0",
    "prId" : 17431,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "90c88a42-ba1c-4e91-a9de-3760627a41e8",
        "parentId" : null,
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "can you elaborate a little more on what happens if add/delete/edit the annotation during the life of a pod?\n\nwhat edits would be valid and not valid?\n\nif/how validation of the annotation happens?\n",
        "createdAt" : "2015-11-23T14:59:25Z",
        "updatedAt" : "2015-12-03T09:52:03Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      },
      {
        "id" : "3996bdde-e9ea-4ea8-8714-f1728fda706c",
        "parentId" : "90c88a42-ba1c-4e91-a9de-3760627a41e8",
        "authorId" : "c929c906-4dfb-433b-9bc7-1b4b05c176f8",
        "body" : "Good point. Clarified.\n",
        "createdAt" : "2015-11-27T13:33:50Z",
        "updatedAt" : "2015-12-03T09:52:03Z",
        "lastEditedBy" : "c929c906-4dfb-433b-9bc7-1b4b05c176f8",
        "tags" : [
        ]
      }
    ],
    "commit" : "eb9a2c51d4dc5addf09ce62cf2ada5bed526bf53",
    "line" : 89,
    "diffHunk" : "@@ -1,1 +87,91 @@Later, when we are sure that our API is correct and stable, we will make it a part of `PodSpec`.\n\nWe will add a new optional pod annotation with the following key: `metrics.alpha.kubernetes.io/custom-endpoints`.\nIt will contain a string-value in JSON format.\nThe value will be a list of tuples defining ports, paths and API"
  },
  {
    "id" : "4509178d-7408-42c6-9484-a455c506fe1d",
    "prId" : 17431,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c8bed1d2-cc53-439a-882b-596073738e91",
        "parentId" : null,
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "Does this imply that the annotation can not be edited post create of the pod?\n\nWhen you note that in case of error, pod will not be started, will the pod just be marked failed or will it wait forever?\n",
        "createdAt" : "2015-11-23T15:03:58Z",
        "updatedAt" : "2015-12-03T09:52:03Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      },
      {
        "id" : "e3ed5ae8-7a30-48c4-adb9-b701bdfdacf4",
        "parentId" : "c8bed1d2-cc53-439a-882b-596073738e91",
        "authorId" : "c929c906-4dfb-433b-9bc7-1b4b05c176f8",
        "body" : "Done.\n",
        "createdAt" : "2015-11-27T13:33:57Z",
        "updatedAt" : "2015-12-03T09:52:03Z",
        "lastEditedBy" : "c929c906-4dfb-433b-9bc7-1b4b05c176f8",
        "tags" : [
        ]
      }
    ],
    "commit" : "eb9a2c51d4dc5addf09ce62cf2ada5bed526bf53",
    "line" : 122,
    "diffHunk" : "@@ -1,1 +120,124 @@## Implementation notes\n\n1. Kubelet will parse value of `metrics.alpha.kubernetes.io/custom-endpoints` annotation for pods.\nIn case of error, pod will not be started (will be marked as failed) and kubelet will generate `FailedToCreateContainer` event with appropriate message\n(we will not introduce any new event type, as types of events are considered a part of kubelet API and we do not want to change it)."
  },
  {
    "id" : "3dfa91e5-a4a1-4bf2-9784-4083fb91fce7",
    "prId" : 17431,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "83207833-8446-40dc-a53f-d2b2884668bf",
        "parentId" : null,
        "authorId" : "df06b0d6-fd6c-44d1-8008-efeaccd16cd5",
        "body" : "s/by pull/using pull model\n",
        "createdAt" : "2015-11-26T11:44:13Z",
        "updatedAt" : "2015-12-03T09:52:03Z",
        "lastEditedBy" : "df06b0d6-fd6c-44d1-8008-efeaccd16cd5",
        "tags" : [
        ]
      }
    ],
    "commit" : "eb9a2c51d4dc5addf09ce62cf2ada5bed526bf53",
    "line" : null,
    "diffHunk" : "@@ -1,1 +54,58 @@## Design\n\nFor the Kubernetes version 1.2, we plan to implement aggregation of pod custom metrics in Prometheus format by pull.\n\nEach pod, to expose custom metrics, will expose a set of Prometheus endpoints."
  },
  {
    "id" : "87e0bac1-76e4-414d-8fda-8b712aa8e295",
    "prId" : 17431,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "febd597f-cc89-4d6c-821e-41c06c46e5ff",
        "parentId" : null,
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "Eventually the cluster admin will need to be able to cap that value. Maybe using LimitRange.\n",
        "createdAt" : "2015-12-03T01:42:25Z",
        "updatedAt" : "2015-12-03T09:52:03Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "0214abe8-9e1d-47a1-bdc2-014b39b0398b",
        "parentId" : "febd597f-cc89-4d6c-821e-41c06c46e5ff",
        "authorId" : "c929c906-4dfb-433b-9bc7-1b4b05c176f8",
        "body" : "Done.\n",
        "createdAt" : "2015-12-03T09:26:13Z",
        "updatedAt" : "2015-12-03T09:52:03Z",
        "lastEditedBy" : "c929c906-4dfb-433b-9bc7-1b4b05c176f8",
        "tags" : [
        ]
      }
    ],
    "commit" : "eb9a2c51d4dc5addf09ce62cf2ada5bed526bf53",
    "line" : 72,
    "diffHunk" : "@@ -1,1 +70,74 @@\nFor version 1.2, to prevent a huge number of metrics negatively affect the system performance,\nthe number of metrics that can be exposed by each pod will be limited to the configurable value (default: 5).\nIn future, we will need a way to cap the number of exposed metrics per pod,\none of possible solutions is using LimtRanger admission control plugin."
  },
  {
    "id" : "929a30ae-54c1-4108-8af9-31cd93ae5ca9",
    "prId" : 17431,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "60427585-240d-4337-b581-e82bbc8c86d2",
        "parentId" : null,
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "I'm ok with the annotation approach for now. When we think about creating real API fields, I'd also like to think about what other things we might want in the \"upward API\".\n",
        "createdAt" : "2015-12-03T01:45:51Z",
        "updatedAt" : "2015-12-03T09:52:03Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      }
    ],
    "commit" : "eb9a2c51d4dc5addf09ce62cf2ada5bed526bf53",
    "line" : 87,
    "diffHunk" : "@@ -1,1 +85,89 @@\nFor Kubernetes 1.2, defining pod Prometheus endpoints will be done using annotations.\nLater, when we are sure that our API is correct and stable, we will make it a part of `PodSpec`.\n\nWe will add a new optional pod annotation with the following key: `metrics.alpha.kubernetes.io/custom-endpoints`."
  },
  {
    "id" : "080c8c91-3bbb-4338-b85a-c08b710a5b79",
    "prId" : 17431,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "29ce15e1-a30f-4a9d-9ac1-15e3c779d144",
        "parentId" : null,
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "I could imagine wanting to specify metric-specific information, such as to distinguish metrics that represent throughput, latency, queue length / load, state size, etc. Or even just whether high or low values are \"good\" or \"bad\". Or whether it's a gauge, etc.\n",
        "createdAt" : "2015-12-03T01:50:54Z",
        "updatedAt" : "2015-12-03T09:52:03Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "f1402747-6bc4-4bb5-9f84-9a10e4bd6b9d",
        "parentId" : "29ce15e1-a30f-4a9d-9ac1-15e3c779d144",
        "authorId" : "c929c906-4dfb-433b-9bc7-1b4b05c176f8",
        "body" : "I think in future it may be reasonable to add metric type: counter/gauge/..., but I think for 1.2 we can start w/o it.\n",
        "createdAt" : "2015-12-03T09:36:08Z",
        "updatedAt" : "2015-12-03T09:52:03Z",
        "lastEditedBy" : "c929c906-4dfb-433b-9bc7-1b4b05c176f8",
        "tags" : [
        ]
      }
    ],
    "commit" : "eb9a2c51d4dc5addf09ce62cf2ada5bed526bf53",
    "line" : null,
    "diffHunk" : "@@ -1,1 +104,108 @@\t\t\"path\": \"/status\",\n\t\t\"port\": \"8080\",\n\t\t\"names\": [\"qps\", \"activeConnections\"]\n\t},\n\t{"
  }
]