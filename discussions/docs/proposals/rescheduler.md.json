[
  {
    "id" : "c6ad0109-c739-41e0-a7d4-f7524579c3b7",
    "prId" : 12433,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "829c410a-f251-4f22-9aab-c2e907130ba3",
        "parentId" : null,
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "Aren't these policy choices, and thus more recommendations vs. hard and fast rules?  \n",
        "createdAt" : "2015-08-11T02:01:12Z",
        "updatedAt" : "2015-08-11T08:31:50Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      },
      {
        "id" : "3c9bb5da-b00e-44f3-aab4-2eb2522d67f3",
        "parentId" : "829c410a-f251-4f22-9aab-c2e907130ba3",
        "authorId" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "body" : "Yes. I considered writing the doc in a more traditional style where I lay out the axes of the design space and explain the different points in the space. However, after struggling with that a bit, I realized it was easier to start with one point in the design space (the Baseline rescheduler) and then describe variations on it. But either way, this is just talking about different design possibilities. Let me know if I am not fully understanding your point.\n",
        "createdAt" : "2015-08-11T05:26:15Z",
        "updatedAt" : "2015-08-11T08:31:50Z",
        "lastEditedBy" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "tags" : [
        ]
      }
    ],
    "commit" : "e4d9aaa2cfd9790b9839fd6b89433e153b942d4c",
    "line" : 129,
    "diffHunk" : "@@ -1,1 +127,131 @@rescheduler, and then describe possible modifications. The Baseline\nrescheduler\n* only kicks in when there are one or more PENDING Pods for some period of time; its objective function is binary: completely happy if there are no PENDING Pods, and completely unhappy if there are PENDING Pods; it does not try to optimize for any other aspect of cluster layout\n* is not a scheduler -- it simply identifies a node where a PENDING Pod could fit if one or more Pods on that node were moved out of the way, and then kills those Pods to make room for the PENDING Pod, which will then be scheduled there by the regular scheduler(s).  [obviously this killing operation must be able to specify \"don't allow the killed Pod to reschedule back to whence it was killed\" otherwise the killing is pointless] Of course it should only do this if it is sure the killed Pods will be able to reschedule into already-free space in the cluster. Note that although it is not a scheduler, the Rescheduler needs to be linked with the predicate functions of the scheduling algorithm(s) so that it can know (1) that the PENDING Pod would actually schedule into the hole it has identified once the hole is created, and (2) that the evicted Pod(s) will be able to schedule somewhere else in the cluster.\n"
  },
  {
    "id" : "8e0f6d51-d3e4-49c1-9432-36a42e7d1eeb",
    "prId" : 12433,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3005f4e7-e2c4-43d4-9e57-2fbc2851168f",
        "parentId" : null,
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "I really like the way the doc reads, but there is a key use-case which I find that is missing.  \n\nGracefully shutting down underutilized nodes, which could be driven by policy.   \n",
        "createdAt" : "2015-08-11T02:08:14Z",
        "updatedAt" : "2015-08-11T08:31:50Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      },
      {
        "id" : "2fe492e3-169d-42ae-bfdf-fb0143dfb9a1",
        "parentId" : "3005f4e7-e2c4-43d4-9e57-2fbc2851168f",
        "authorId" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "body" : "I tried to cover this use case in the last sentence of the doc. Is there additional description you would suggest there? (Or is that actually not the use case you had in mind?)\n",
        "createdAt" : "2015-08-11T05:24:39Z",
        "updatedAt" : "2015-08-11T08:31:50Z",
        "lastEditedBy" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "tags" : [
        ]
      }
    ],
    "commit" : "e4d9aaa2cfd9790b9839fd6b89433e153b942d4c",
    "line" : 124,
    "diffHunk" : "@@ -1,1 +122,126 @@particular label selector, etc. These policies are presumably part of\nthe Rescheduler's configuration.\n\nThere are a lot of design possibilities for a rescheduler. To explain\nthem, it's easiest to start with the description of a baseline"
  }
]