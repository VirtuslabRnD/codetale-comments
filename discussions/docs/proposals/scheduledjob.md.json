[
  {
    "id" : "17168a75-5940-43a1-bc98-c413cff75710",
    "prId" : 25595,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3c1e7f7b-c723-44c5-93a1-b31ad3a9a261",
        "parentId" : null,
        "authorId" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "body" : ":+1: \n",
        "createdAt" : "2016-05-13T22:11:50Z",
        "updatedAt" : "2016-08-04T14:29:24Z",
        "lastEditedBy" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "tags" : [
        ]
      }
    ],
    "commit" : "87cba77e345d612027d283283e0b9125b9401423",
    "line" : 63,
    "diffHunk" : "@@ -1,1 +191,195 @@## Modifications to Job resource\n\nTODO for beta: forbid manual selector since that could cause confusing between\nsubsequent jobs.\n"
  },
  {
    "id" : "a9bd348f-cbb8-4a36-9e09-23fab6843fde",
    "prId" : 25595,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "eee32963-e92c-4111-9897-230511660993",
        "parentId" : null,
        "authorId" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "body" : "I don't think that's SJ controller problem, it should create a Job and delegate all the rest to the job controller.\n",
        "createdAt" : "2016-05-13T22:33:25Z",
        "updatedAt" : "2016-08-04T14:29:24Z",
        "lastEditedBy" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "tags" : [
        ]
      },
      {
        "id" : "4707e4e4-34dd-48c2-bbdb-a56578368179",
        "parentId" : "eee32963-e92c-4111-9897-230511660993",
        "authorId" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "body" : "I agree.  But, users don't care about whose problem it is.\n",
        "createdAt" : "2016-05-17T05:19:25Z",
        "updatedAt" : "2016-08-04T14:29:24Z",
        "lastEditedBy" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "tags" : [
        ]
      }
    ],
    "commit" : "87cba77e345d612027d283283e0b9125b9401423",
    "line" : 144,
    "diffHunk" : "@@ -1,1 +283,287 @@- ensure at most one Job created per \"start time\" of a schedule.\n- ensure that at most one Pod is created per Job\n- ensure at most one container start occurs per Pod\n\n#### Ensuring one Job"
  },
  {
    "id" : "2e6029fe-536a-4a1c-b7d3-d00c15ef999c",
    "prId" : 25595,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "10cfb9d4-0e07-42e6-a44c-5c6402663fcc",
        "parentId" : null,
        "authorId" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "body" : "Other possible approach is:\n1. create a job object\n2. update sj status.Active with a job link (to etcd)\n3. save job to etcd\n\nThis will safe you from the need to extend the job with suspension.\n",
        "createdAt" : "2016-05-13T22:36:37Z",
        "updatedAt" : "2016-08-04T14:29:24Z",
        "lastEditedBy" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "tags" : [
        ]
      },
      {
        "id" : "bc4f27e9-b17b-4c3d-9c0f-cc2b861dbe25",
        "parentId" : "10cfb9d4-0e07-42e6-a44c-5c6402663fcc",
        "authorId" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "body" : "With this approach there is a chance where 2nd step succeeds and 3rd fails, but in that case we end up with an Active link to non-existing job. But that should be then updated in the next controller run, if it won't find that active job in the system.\n",
        "createdAt" : "2016-05-13T22:39:47Z",
        "updatedAt" : "2016-08-04T14:29:24Z",
        "lastEditedBy" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "tags" : [
        ]
      },
      {
        "id" : "0b475de3-8862-448d-ba4f-18034337dc9d",
        "parentId" : "10cfb9d4-0e07-42e6-a44c-5c6402663fcc",
        "authorId" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "body" : "Would prefer not to put special creation logic in apiserver if avoidable.\n",
        "createdAt" : "2016-05-17T05:30:46Z",
        "updatedAt" : "2016-08-04T14:29:24Z",
        "lastEditedBy" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "tags" : [
        ]
      },
      {
        "id" : "bfc2ea23-5c4b-43a0-affa-8da3f9d4c0c6",
        "parentId" : "10cfb9d4-0e07-42e6-a44c-5c6402663fcc",
        "authorId" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "body" : "Actually, I wasn't thinking about apiserver here, I was talking about controller flow.\n",
        "createdAt" : "2016-05-17T12:35:14Z",
        "updatedAt" : "2016-08-04T14:29:24Z",
        "lastEditedBy" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "tags" : [
        ]
      },
      {
        "id" : "098debf8-c3b3-4a1a-87ec-99a52599d186",
        "parentId" : "10cfb9d4-0e07-42e6-a44c-5c6402663fcc",
        "authorId" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "body" : "In the case of a crash between the 2nd and 3rd step, all the controller knows (on its second invocation) is that it hasn't _yet_ seen the active job.  Either we encode an arbitrary timeout, or it waits forever, or we just fail to start a job if a crash happens in this window.  \n",
        "createdAt" : "2016-05-17T16:17:27Z",
        "updatedAt" : "2016-08-04T14:29:24Z",
        "lastEditedBy" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "tags" : [
        ]
      },
      {
        "id" : "86dc6c8c-4faa-4326-84e6-be11c1e0ae63",
        "parentId" : "10cfb9d4-0e07-42e6-a44c-5c6402663fcc",
        "authorId" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "body" : "Yeah, but the scheduledjob.status.active will contain `ObjectReference` to an active job, if one isn't there it will repeat the process removing that reference, since it didn't find a job with that name. The only thing we'll need to add is to check for the existence of Active jobs from status in the scheduled controller. (And I hope we're both talking about the steps from my first comment.)\n",
        "createdAt" : "2016-05-18T08:46:46Z",
        "updatedAt" : "2016-08-04T14:29:24Z",
        "lastEditedBy" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "tags" : [
        ]
      }
    ],
    "commit" : "87cba77e345d612027d283283e0b9125b9401423",
    "line" : 164,
    "diffHunk" : "@@ -1,1 +303,307 @@  1. controller writes writes an annotation in the SJ saying that it created a job for this time.\n  1. controller unsuspends that job.\n1. by picking a deterministic name, so that at most one object create can succeed.\n\n#### Ensuring one Pod"
  },
  {
    "id" : "7cd61229-b1f0-4599-b22f-8273a31bb33d",
    "prId" : 25595,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c043f763-551c-4baa-be8a-2b93479b2171",
        "parentId" : null,
        "authorId" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "body" : "This is very extreme case, I'm inclined not to solve it for 1.3.\n",
        "createdAt" : "2016-05-13T22:37:39Z",
        "updatedAt" : "2016-08-04T14:29:24Z",
        "lastEditedBy" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "tags" : [
        ]
      }
    ],
    "commit" : "87cba77e345d612027d283283e0b9125b9401423",
    "line" : 156,
    "diffHunk" : "@@ -1,1 +295,299 @@1. it creates a new one.\n1. the first one eventually gets written to etcd.\n1. there are now two jobs for the same start time.\n\nWe can solve this in several ways:"
  },
  {
    "id" : "a20c2148-11a1-4f21-9db4-0b06b9004d23",
    "prId" : 25595,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a6ab45ee-5776-4663-9d86-38b79575cca3",
        "parentId" : null,
        "authorId" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "body" : ":+1: \n",
        "createdAt" : "2016-05-13T22:40:07Z",
        "updatedAt" : "2016-08-04T14:29:24Z",
        "lastEditedBy" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "tags" : [
        ]
      }
    ],
    "commit" : "87cba77e345d612027d283283e0b9125b9401423",
    "line" : 179,
    "diffHunk" : "@@ -1,1 +318,322 @@\nThis is too hard to do for the alpha version.  We will await user\nfeedback to see if the \"at most once\" property is needed in the beta version.\n\nThis is awkward but possible for a containerized application ensure on it own, as it needs"
  },
  {
    "id" : "97283d00-202a-4872-adcc-a90af5027c28",
    "prId" : 25595,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bec48801-1111-471c-b4d8-69afe1b6dd41",
        "parentId" : null,
        "authorId" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "body" : "This applies to schedule as well.\n",
        "createdAt" : "2016-08-02T12:04:08Z",
        "updatedAt" : "2016-08-04T14:29:24Z",
        "lastEditedBy" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "tags" : [
        ]
      },
      {
        "id" : "512b5b96-7103-4a7c-ae44-24b41ff29112",
        "parentId" : "bec48801-1111-471c-b4d8-69afe1b6dd41",
        "authorId" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "body" : "I reworded this, PTAL.\n",
        "createdAt" : "2016-08-04T01:30:11Z",
        "updatedAt" : "2016-08-04T14:29:24Z",
        "lastEditedBy" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "tags" : [
        ]
      }
    ],
    "commit" : "87cba77e345d612027d283283e0b9125b9401423",
    "line" : null,
    "diffHunk" : "@@ -1,1 +238,242 @@\nIf the job template of a ScheduledJob is updated, then future executions use the new template\nbut old ones still satisfy the schedule and are not re-run just because the template changed.\n\nIf you delete and replace a ScheduledJob with one of the same name, it will:"
  },
  {
    "id" : "7622c6da-f026-42b7-a890-7d71b18c38b6",
    "prId" : 25595,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c6a22d87-6fa1-40e8-a9df-30a0cfbaaf29",
        "parentId" : null,
        "authorId" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "body" : ":+1: \n",
        "createdAt" : "2016-08-02T12:06:06Z",
        "updatedAt" : "2016-08-04T14:29:24Z",
        "lastEditedBy" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "tags" : [
        ]
      }
    ],
    "commit" : "87cba77e345d612027d283283e0b9125b9401423",
    "line" : 136,
    "diffHunk" : "@@ -1,1 +275,279 @@TODO: consider hard-coding the minimum StartingDeadlineSeconds\nat say 1 minute.  Then we can offer a clearer guarantee,\nassuming we know what the setting of the lock lease duration is.\n\n### Ensuring jobs are run at most once"
  },
  {
    "id" : "d835fcab-53f8-464a-a57a-1faba03cd4b5",
    "prId" : 11980,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a1f764d3-0e12-4cc6-bffe-9bfe0c013929",
        "parentId" : null,
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "Comment still holds on name \n",
        "createdAt" : "2015-07-31T16:41:35Z",
        "updatedAt" : "2016-01-14T11:10:13Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      },
      {
        "id" : "04279c73-6adf-4708-8e96-37b71b803a81",
        "parentId" : "a1f764d3-0e12-4cc6-bffe-9bfe0c013929",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "The problem with \"Cron\" is that is technically focused (a particular linux\ntool) but is opaque to higher level users who come from different\nbackgrounds.\n\nEven the Chronos GitHub page describes it with \"It allows you to schedule\nyour jobs using ISO8601 repeating interval notation, which enables more\nflexibility in job scheduling\".  RepeatingJob or CalendarJob or\nRecurringJob all seem less clear to an outside user (someone who is not an\nexpert at these systems) than ScheduledJob.\n\nOn Fri, Jul 31, 2015 at 12:41 PM, Timothy St. Clair <\nnotifications@github.com> wrote:\n\n> In docs/proposals/scheduledjob.md\n> https://github.com/GoogleCloudPlatform/kubernetes/pull/11980#discussion_r35991090\n> :\n> \n> > @@ -0,0 +1,132 @@\n> > +# ScheduledJob Controller\n> \n> Comment still holds on name\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/GoogleCloudPlatform/kubernetes/pull/11980/files#r35991090\n> .\n\n## \n\nClayton Coleman | Lead Engineer, OpenShift\n",
        "createdAt" : "2015-07-31T16:49:37Z",
        "updatedAt" : "2016-01-14T11:10:13Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "a361e321-7e6d-4744-baa3-28c204ef3cec",
        "parentId" : "a1f764d3-0e12-4cc6-bffe-9bfe0c013929",
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "Proposal was around (diurnal, periodic, etc.) There may be a couple more. \n",
        "createdAt" : "2015-07-31T17:01:54Z",
        "updatedAt" : "2016-01-14T11:10:13Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      },
      {
        "id" : "14f4d711-c942-4db9-b592-d36bb23b6f48",
        "parentId" : "a1f764d3-0e12-4cc6-bffe-9bfe0c013929",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Periodic suffers some of the same usability concerns.  I do think API\nobjects should be precise in their meaning, but designed for end users, not\nsystems researchers.\n\nOn Fri, Jul 31, 2015 at 1:02 PM, Timothy St. Clair <notifications@github.com\n\n> wrote:\n> \n> In docs/proposals/scheduledjob.md\n> https://github.com/GoogleCloudPlatform/kubernetes/pull/11980#discussion_r35992880\n> :\n> \n> > @@ -0,0 +1,132 @@\n> > +# ScheduledJob Controller\n> \n> Proposal was around (diurnal, periodic, etc.) There may be a couple more.\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/GoogleCloudPlatform/kubernetes/pull/11980/files#r35992880\n> .\n\n## \n\nClayton Coleman | Lead Engineer, OpenShift\n",
        "createdAt" : "2015-07-31T17:26:45Z",
        "updatedAt" : "2016-01-14T11:10:13Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "c51a4486-2fd7-4077-95f4-b1fd706d11d6",
        "parentId" : "a1f764d3-0e12-4cc6-bffe-9bfe0c013929",
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "I'm fine with ScheduledJob. It's similar to ScheduledExecutorService in Java.\n",
        "createdAt" : "2015-08-11T16:17:30Z",
        "updatedAt" : "2016-01-14T11:10:13Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "5c2fc76c-e8bc-4491-b778-b74d243dba33",
        "parentId" : "a1f764d3-0e12-4cc6-bffe-9bfe0c013929",
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "Could also call it CalendaredJob\n",
        "createdAt" : "2015-11-12T06:58:43Z",
        "updatedAt" : "2016-01-14T11:10:13Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      }
    ],
    "commit" : "10de4c2d51d14c1efa9ae1f9914136960c081475",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +28,32 @@<!-- END MUNGE: UNVERSIONED_WARNING -->\n\n# ScheduledJob Controller\n\n## Abstract"
  },
  {
    "id" : "e96ea64d-674c-4745-a062-fec89c334a59",
    "prId" : 11980,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "196ffeb5-1051-4cde-a821-059db549f112",
        "parentId" : null,
        "authorId" : "9f5dc2fc-1039-44a5-863f-115658f282e7",
        "body" : "@soltysh my understanding here is that ISO8601 format it's going to be a necessary pain but as far as I understood `string` are not mergeable and to me schedule spec looks something we may want to update quite often. Should we consider a more structured representation instead?  \n",
        "createdAt" : "2015-09-23T11:14:14Z",
        "updatedAt" : "2016-01-14T11:10:13Z",
        "lastEditedBy" : "9f5dc2fc-1039-44a5-863f-115658f282e7",
        "tags" : [
        ]
      },
      {
        "id" : "63d297ec-677d-4d46-a5eb-d80ea80b10b9",
        "parentId" : "196ffeb5-1051-4cde-a821-059db549f112",
        "authorId" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "body" : "My understanding is that you won't be merging schedule, but rather replacing an old one with a new one. Although ISO8601 format seems clunky at first, it's very readable and easily customizable. Using any kind of structured representation would introduce unnecessary complication imho. \n",
        "createdAt" : "2015-09-23T11:18:07Z",
        "updatedAt" : "2016-01-14T11:10:13Z",
        "lastEditedBy" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "tags" : [
        ]
      },
      {
        "id" : "1c7c5673-987c-4ea7-b23c-21a808dfe78b",
        "parentId" : "196ffeb5-1051-4cde-a821-059db549f112",
        "authorId" : "9f5dc2fc-1039-44a5-863f-115658f282e7",
        "body" : "I was not discussing ISO8601 here but the string representation.\nI'm not sure I fully understand all the implications of replacing schedules. Do you plan to delete/create? In any cases may you add something about it in the doc (except if I missed something)?\n",
        "createdAt" : "2015-09-23T11:37:08Z",
        "updatedAt" : "2016-01-14T11:10:13Z",
        "lastEditedBy" : "9f5dc2fc-1039-44a5-863f-115658f282e7",
        "tags" : [
        ]
      },
      {
        "id" : "2a4f3139-0304-4a9b-9952-9ffc687e97d3",
        "parentId" : "196ffeb5-1051-4cde-a821-059db549f112",
        "authorId" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "body" : "My general idea (which as you point out needs clear statement somewhere in this proposal) is that any changes you'll do to the scheduledjob will reflect in every new run, it does not affect nor delete existing executions. Eg. I have a job running every 15 mins, it's 1.45, so one is currently running, and I change the schedule to be running every hour, that means the existing job will finish what it started and next one will start at 2, then at 3 etc. @sdminonne does it make sense?\n",
        "createdAt" : "2015-09-23T11:49:41Z",
        "updatedAt" : "2016-01-14T11:10:13Z",
        "lastEditedBy" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "tags" : [
        ]
      },
      {
        "id" : "58370441-b798-4025-9637-4d287dfeedf3",
        "parentId" : "196ffeb5-1051-4cde-a821-059db549f112",
        "authorId" : "9f5dc2fc-1039-44a5-863f-115658f282e7",
        "body" : "@soltysh absolutely but when you say _I change the schedule to be running every hour_ are you updating the scheduleJob spec or are you creating another one? My understanding is that we should simply updating the current scheduleJob. But to do this we need the `iso8601 spec` to be mergeable. Am I missing something?  \n",
        "createdAt" : "2015-09-23T12:09:19Z",
        "updatedAt" : "2016-01-14T11:10:13Z",
        "lastEditedBy" : "9f5dc2fc-1039-44a5-863f-115658f282e7",
        "tags" : [
        ]
      },
      {
        "id" : "7045a31e-6405-46fb-8d42-2c83c0c7c15d",
        "parentId" : "196ffeb5-1051-4cde-a821-059db549f112",
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "I don't see much utility in partially updating a schedule over replacing a schedule.\n",
        "createdAt" : "2015-09-23T21:58:23Z",
        "updatedAt" : "2016-01-14T11:10:13Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      },
      {
        "id" : "7e7b400f-76bd-4db1-bd5e-a4334e60c2bd",
        "parentId" : "196ffeb5-1051-4cde-a821-059db549f112",
        "authorId" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "body" : "Right, those where my feelings as well, though I know nothing about mergeable strings and need to read about it a bit. But again, when updating you'll just modify the current schedule so that it matches your new expectations and submit the new one which will replace the old one.\n",
        "createdAt" : "2015-09-24T08:48:16Z",
        "updatedAt" : "2016-01-14T11:10:13Z",
        "lastEditedBy" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "tags" : [
        ]
      },
      {
        "id" : "f8313646-6f4c-4291-aa53-b5c86af6b5ba",
        "parentId" : "196ffeb5-1051-4cde-a821-059db549f112",
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "Maybe an example would help.\n\nFor instance, one might change `R/2015-07-21T14:00:00Z/P1D` to `R/2015-07-26T20:00:00Z/P1D`. \n\n@sdminonne Do you want to be able to independently change the start date, start time, and periodicity?\n",
        "createdAt" : "2015-11-12T07:20:11Z",
        "updatedAt" : "2016-01-14T11:10:13Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "391ba2e6-dbfb-420a-bc1f-0e20327ad6d0",
        "parentId" : "196ffeb5-1051-4cde-a821-059db549f112",
        "authorId" : "9f5dc2fc-1039-44a5-863f-115658f282e7",
        "body" : "@bgrant0607, doesn't matter replacing completely the scheduler is good enough for us. Thanks\n",
        "createdAt" : "2015-11-14T22:37:55Z",
        "updatedAt" : "2016-01-14T11:10:13Z",
        "lastEditedBy" : "9f5dc2fc-1039-44a5-863f-115658f282e7",
        "tags" : [
        ]
      }
    ],
    "commit" : "10de4c2d51d14c1efa9ae1f9914136960c081475",
    "line" : null,
    "diffHunk" : "@@ -1,1 +103,107 @@    // Schedule contains the schedule in Cron format, see https://en.wikipedia.org/wiki/Cron.\n    Schedule string\n\n    // Optional deadline in seconds for starting the job if it misses scheduled\n    // time for any reason.  Missed jobs executions will be counted as failed ones."
  },
  {
    "id" : "1b995589-9193-4f9c-891f-a973fe0fc728",
    "prId" : 11980,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2a3e6e9e-8385-45b4-bfe0-5aa1acfcaf53",
        "parentId" : null,
        "authorId" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "body" : "I would go ahead and add json tags into this struct, there's no reason not to fully define API objects in the proposal (especially ideally they would be the exact same as what went into the code).\n",
        "createdAt" : "2015-11-13T19:08:50Z",
        "updatedAt" : "2016-01-14T11:10:13Z",
        "lastEditedBy" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "tags" : [
        ]
      },
      {
        "id" : "f03b3d35-ae1d-4698-9ae2-918cc51845f3",
        "parentId" : "2a3e6e9e-8385-45b4-bfe0-5aa1acfcaf53",
        "authorId" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "body" : "I didn't do it up until now not to clutter the proposal with too much of implementation details. The comments are exactly like the ones in the actual code.\n",
        "createdAt" : "2015-11-13T20:58:11Z",
        "updatedAt" : "2016-01-14T11:10:13Z",
        "lastEditedBy" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "tags" : [
        ]
      },
      {
        "id" : "598a367b-960d-4b7f-81d2-f51eeed5dd09",
        "parentId" : "2a3e6e9e-8385-45b4-bfe0-5aa1acfcaf53",
        "authorId" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "body" : "Maybe except for the places where I'm just showing the fact of existence of a structure, eg. `ScheduledJobCondition` in this proposal (to be added in v2), since they follow exact patterns as similar structs elsewhere `JobCondition`, `PodCondition`, etc.\n",
        "createdAt" : "2015-11-13T20:59:20Z",
        "updatedAt" : "2016-01-14T11:10:13Z",
        "lastEditedBy" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "tags" : [
        ]
      }
    ],
    "commit" : "10de4c2d51d14c1efa9ae1f9914136960c081475",
    "line" : 81,
    "diffHunk" : "@@ -1,1 +79,83 @@    // Status is a structure describing current status of a job.\n    Status ScheduledJobStatus\n}\n\n// ScheduledJobList is a collection of scheduled jobs."
  },
  {
    "id" : "9b886835-18d3-48b8-94fc-6f5dd7477b78",
    "prId" : 11980,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a1882da3-98db-4cc0-b0cb-61badb88a3c5",
        "parentId" : null,
        "authorId" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "body" : "Same comment applies here: json tags / comments.\n",
        "createdAt" : "2015-11-13T19:09:09Z",
        "updatedAt" : "2016-01-14T11:10:13Z",
        "lastEditedBy" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "tags" : [
        ]
      }
    ],
    "commit" : "10de4c2d51d14c1efa9ae1f9914136960c081475",
    "line" : 89,
    "diffHunk" : "@@ -1,1 +87,91 @@\n    Items []ScheduledJob\n}\n```\n"
  },
  {
    "id" : "f6226fd1-c374-4578-9afb-ef5425bf6668",
    "prId" : 11980,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8fb216d0-e399-4e93-a79d-5e5024ec11c7",
        "parentId" : null,
        "authorId" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "body" : "Nit: start sentence w/ `The ScheduledJobStatus...`\n",
        "createdAt" : "2015-11-13T19:11:59Z",
        "updatedAt" : "2016-01-14T11:10:13Z",
        "lastEditedBy" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "tags" : [
        ]
      }
    ],
    "commit" : "10de4c2d51d14c1efa9ae1f9914136960c081475",
    "line" : null,
    "diffHunk" : "@@ -1,1 +148,152 @@```\n\n`ScheduledJobStatus` structure is defined to contain information about scheduled\njob executions.  The structure holds a list of currently running job instances\nand additional information about overall successful and unsuccessful job executions."
  },
  {
    "id" : "fbbf6f9e-0d03-4083-aa0d-7691467fc075",
    "prId" : 11980,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6fa1ed5a-c249-4d16-8dcb-7eaa094fe5af",
        "parentId" : null,
        "authorId" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "body" : "Add examples here?\n",
        "createdAt" : "2015-11-13T19:12:34Z",
        "updatedAt" : "2016-01-14T11:10:13Z",
        "lastEditedBy" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "tags" : [
        ]
      },
      {
        "id" : "bf4fe7e4-d2cc-4c4d-aacd-ff7e1b69e57e",
        "parentId" : "6fa1ed5a-c249-4d16-8dcb-7eaa094fe5af",
        "authorId" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "body" : "I think they are already covered by use cases, I don't see any point in repeating those.\n",
        "createdAt" : "2015-11-13T21:02:14Z",
        "updatedAt" : "2016-01-14T11:10:13Z",
        "lastEditedBy" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "tags" : [
        ]
      }
    ],
    "commit" : "10de4c2d51d14c1efa9ae1f9914136960c081475",
    "line" : null,
    "diffHunk" : "@@ -1,1 +168,172 @@}\n```\n\n### Modifications to Job resource\n"
  },
  {
    "id" : "38c7d37a-3980-4c46-8942-4f8523585900",
    "prId" : 11980,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e43d2030-ada5-456e-9311-6b306f6842af",
        "parentId" : null,
        "authorId" : "9f5dc2fc-1039-44a5-863f-115658f282e7",
        "body" : "@soltysh nit s/7787/17787/\n",
        "createdAt" : "2015-12-14T18:15:25Z",
        "updatedAt" : "2016-01-14T11:10:13Z",
        "lastEditedBy" : "9f5dc2fc-1039-44a5-863f-115658f282e7",
        "tags" : [
        ]
      },
      {
        "id" : "c0907508-4cb5-424d-869e-cd6cb3f7b34d",
        "parentId" : "e43d2030-ada5-456e-9311-6b306f6842af",
        "authorId" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "body" : "Fixed.\n",
        "createdAt" : "2015-12-22T22:22:08Z",
        "updatedAt" : "2016-01-14T11:10:13Z",
        "lastEditedBy" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "tags" : [
        ]
      }
    ],
    "commit" : "10de4c2d51d14c1efa9ae1f9914136960c081475",
    "line" : null,
    "diffHunk" : "@@ -1,1 +220,224 @@* Be able to specify more general template in `.spec` field, to create arbitrary\n  types of resources. This relates to the work happening in [#18215](https://issues.k8s.io/18215).\n\n<!-- BEGIN MUNGE: GENERATED_ANALYTICS -->\n[![Analytics](https://kubernetes-site.appspot.com/UA-36037335-10/GitHub/docs/proposals/scheduledjob.md?pixel)]()"
  },
  {
    "id" : "a0844bfd-de78-4063-881b-e8f5521729bf",
    "prId" : 11980,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d12c2929-3f7d-4ffb-952c-f96bf55fcbca",
        "parentId" : null,
        "authorId" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "body" : "Do we need to distinguish between Failure Condition of the Job, and failure to start the job entirely (name collision, lack of permissions to create job, apiserver not available, etc)\n",
        "createdAt" : "2015-12-19T09:20:45Z",
        "updatedAt" : "2016-01-14T11:10:13Z",
        "lastEditedBy" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "tags" : [
        ]
      },
      {
        "id" : "f4fd51c9-35a4-4ba1-b1d4-1ad468ecc21b",
        "parentId" : "d12c2929-3f7d-4ffb-952c-f96bf55fcbca",
        "authorId" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "body" : "I don't think so, at least for now I don't see the need for that distinction. \n",
        "createdAt" : "2015-12-22T22:13:38Z",
        "updatedAt" : "2016-01-14T11:10:13Z",
        "lastEditedBy" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "tags" : [
        ]
      }
    ],
    "commit" : "10de4c2d51d14c1efa9ae1f9914136960c081475",
    "line" : 163,
    "diffHunk" : "@@ -1,1 +161,165 @@    Successful int64\n\n    // Failed tracks the overall amount of failures of this job.\n    Failed int64\n"
  },
  {
    "id" : "ba6abbd5-1cc7-4839-96fb-c8a56718bf23",
    "prId" : 11980,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "087e4668-df60-4ea1-b3b0-e17ff95178d6",
        "parentId" : null,
        "authorId" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "body" : "This seems impractical to track since Jobs may eventually be garbage collected, and since, IIUC, status is supposed to be able to be recreated if it were deleted.\n",
        "createdAt" : "2015-12-19T09:24:16Z",
        "updatedAt" : "2016-01-14T11:10:13Z",
        "lastEditedBy" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "tags" : [
        ]
      },
      {
        "id" : "eccce146-9fc2-4664-a8a3-1abad4a55886",
        "parentId" : "087e4668-df60-4ea1-b3b0-e17ff95178d6",
        "authorId" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "body" : "You've raised that issue already when implementing JobController. I'm thinking about taking different approach here. Instead of counting pods each time I'm thinking about updating this value with new information. Not sure how to implement it yet, though ;) Still the general idea of having those tracked should stay.\n",
        "createdAt" : "2015-12-22T22:15:41Z",
        "updatedAt" : "2016-01-14T11:10:13Z",
        "lastEditedBy" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "tags" : [
        ]
      }
    ],
    "commit" : "10de4c2d51d14c1efa9ae1f9914136960c081475",
    "line" : null,
    "diffHunk" : "@@ -1,1 +158,162 @@    Active []ObjectReference\n\n    // Successful tracks the overall amount of successful completions of this job.\n    Successful int64\n"
  }
]