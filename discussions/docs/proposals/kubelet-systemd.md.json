[
  {
    "id" : "cda188b3-a7f8-4ac1-b880-24922838ade6",
    "prId" : 17688,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "760864ed-95dd-47d9-9dc5-758e4849f77d",
        "parentId" : null,
        "authorId" : "fe14371d-949e-4054-be50-58e78d693579",
        "body" : "Suggestion to add:\n\n> Systemd is in general the single-writer on all cgroups but services and scopes can be configured with [the `Delegate=` option](http://man7.org/linux/man-pages/man5/systemd.resource-control.5.html#OPTIONS). In this case, systemd knows that another writer will handle this part of the cgroup tree.\n\nI think rkt does not explain this correctly. I filed a bug in rkt for this: https://github.com/coreos/rkt/issues/1883\n",
        "createdAt" : "2015-12-17T12:17:37Z",
        "updatedAt" : "2016-05-12T21:32:34Z",
        "lastEditedBy" : "fe14371d-949e-4054-be50-58e78d693579",
        "tags" : [
        ]
      },
      {
        "id" : "c7ff117e-7e3c-429e-8175-3cd0d6a1fcc4",
        "parentId" : "760864ed-95dd-47d9-9dc5-758e4849f77d",
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "@alban - agree\n",
        "createdAt" : "2016-01-04T20:06:14Z",
        "updatedAt" : "2016-05-12T21:32:34Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      }
    ],
    "commit" : "eee9a589db64e77ae8abf0516e11608b404b44e2",
    "line" : null,
    "diffHunk" : "@@ -1,1 +95,99 @@\nThe Kernel direction for `cgroup` management is to promote a single-writer model rather than\nallowing multiple processes to independently write to parts of the file-system.\n\nIn distributions that run `systemd` as their init system, the cgroup tree is managed by `systemd`"
  },
  {
    "id" : "a28a1e67-7051-4635-ab7d-ffa9d54bd6c9",
    "prId" : 17688,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f526df48-0351-4fab-b84c-9493640cec05",
        "parentId" : null,
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "I assume the requirement here is to be future proof if and when such a change happens.\n",
        "createdAt" : "2015-12-19T00:02:26Z",
        "updatedAt" : "2016-05-12T21:32:34Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      },
      {
        "id" : "76c8d7fe-5eee-4e43-b29f-bbf04425ab43",
        "parentId" : "f526df48-0351-4fab-b84c-9493640cec05",
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "correct.\n",
        "createdAt" : "2016-01-04T20:03:26Z",
        "updatedAt" : "2016-05-12T21:32:34Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      }
    ],
    "commit" : "eee9a589db64e77ae8abf0516e11608b404b44e2",
    "line" : null,
    "diffHunk" : "@@ -1,1 +94,98 @@### cgroupfs single writer\n\nThe Kernel direction for `cgroup` management is to promote a single-writer model rather than\nallowing multiple processes to independently write to parts of the file-system.\n"
  },
  {
    "id" : "8c5bc437-3b74-42f7-827e-f13549f9153c",
    "prId" : 17688,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0b1825c7-ee48-426d-888b-7a635e94eaa8",
        "parentId" : null,
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "AFAIK, we might still continue to provide an option where a kubelet deployment will also place resource restrictions on the docker daemon. However, that option can be disabled if needed.\n",
        "createdAt" : "2015-12-19T00:23:28Z",
        "updatedAt" : "2016-05-12T21:32:34Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      },
      {
        "id" : "2d09d8be-d277-4c85-b691-9da44cc83361",
        "parentId" : "0b1825c7-ee48-426d-888b-7a635e94eaa8",
        "authorId" : "4c30e665-5e6c-4a02-81a0-563b610a6d75",
        "body" : "> kubelet deployment\n\nto be clear does this refer to the overall recipe for setting up a node as a kubenode, or are you talking about the kubelet itself doing this? The latter seems contradictory with https://github.com/kubernetes/kubernetes/pull/17688/files#r48083469\n",
        "createdAt" : "2015-12-21T14:25:34Z",
        "updatedAt" : "2016-05-12T21:32:34Z",
        "lastEditedBy" : "4c30e665-5e6c-4a02-81a0-563b610a6d75",
        "tags" : [
        ]
      },
      {
        "id" : "871ee781-9d07-4069-845e-4655af1addd3",
        "parentId" : "0b1825c7-ee48-426d-888b-7a635e94eaa8",
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "@jonboulle: On non-systemd distros where the kubelet is expected to setup cgroups for the daemons, it will continue to do so for the foreseeable future.\n\nAs for systemd distros, I'm suggesting letting the admins deal with node bootstrapping since there are multiple ways one would prefer to setup such nodes.\n",
        "createdAt" : "2015-12-21T18:51:04Z",
        "updatedAt" : "2016-05-12T21:32:34Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      },
      {
        "id" : "dc20971a-e8fc-4d95-a897-72d32bb87b7c",
        "parentId" : "0b1825c7-ee48-426d-888b-7a635e94eaa8",
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "We agreed in F2F that kubelet would do bootstrapping.\n",
        "createdAt" : "2016-01-08T18:52:19Z",
        "updatedAt" : "2016-05-12T21:32:34Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      }
    ],
    "commit" : "eee9a589db64e77ae8abf0516e11608b404b44e2",
    "line" : 263,
    "diffHunk" : "@@ -1,1 +261,265 @@the `service` unit that launches `docker`.  The `kubelet` will not set any limits itself\nat this time and will assume whatever budget was set aside for `docker` was included in\neither `--kube-reserved` or `--system-reserved` reservations.\n\nMany OS distributions package `docker` by default, and it will often belong to the"
  },
  {
    "id" : "c2b9bc55-0cce-4fdf-b86e-6918745ebc6d",
    "prId" : 17688,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c3339a78-2f85-447f-ae05-0ef16a695520",
        "parentId" : null,
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "Kubelet has to perform accounting. So +1. \nI'd even clarify that `--cgroup-root` is not recommended for most standalone kubernetes installations.\n",
        "createdAt" : "2015-12-19T00:28:50Z",
        "updatedAt" : "2016-05-12T21:32:34Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      }
    ],
    "commit" : "eee9a589db64e77ae8abf0516e11608b404b44e2",
    "line" : 413,
    "diffHunk" : "@@ -1,1 +411,415 @@primary mechanism to distinguish and account for end-user pod compute resource usage.\n\nInstead, the `kubelet` can and should sum the usage of each running `pod` on the node to account for\nend-user pod usage separate from system-reserved and kubernetes-reserved accounting via `cAdvisor`.\n"
  },
  {
    "id" : "45802a69-3b36-4fc1-ab55-5af57b2e65f0",
    "prId" : 17688,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "decd7f0f-0088-4c15-9463-9121eccec17d",
        "parentId" : null,
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "This doesn't define the scope, it defines what is \"out of scope\", perhaps change the title. \n",
        "createdAt" : "2016-01-14T16:51:19Z",
        "updatedAt" : "2016-05-12T21:32:34Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      },
      {
        "id" : "e5339af9-180a-42c9-8d00-ccce6966cf38",
        "parentId" : "decd7f0f-0088-4c15-9463-9121eccec17d",
        "authorId" : "a6409368-42e0-44a9-bf79-9d3042ac3b65",
        "body" : "+1. \n",
        "createdAt" : "2016-05-19T22:30:26Z",
        "updatedAt" : "2016-05-19T22:30:26Z",
        "lastEditedBy" : "a6409368-42e0-44a9-bf79-9d3042ac3b65",
        "tags" : [
        ]
      }
    ],
    "commit" : "eee9a589db64e77ae8abf0516e11608b404b44e2",
    "line" : 46,
    "diffHunk" : "@@ -1,1 +44,48 @@## Scope of proposal\n\nThis proposal does not account for running the `kubelet` in a container.\n\n## Background on systemd"
  },
  {
    "id" : "70869e96-6542-4709-9c1a-f71a36a919b4",
    "prId" : 17688,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0e5cef5f-4462-4b8c-8eaf-2a10adc93655",
        "parentId" : null,
        "authorId" : "a6409368-42e0-44a9-bf79-9d3042ac3b65",
        "body" : "Docker 1.7 is minimal version Kubelet support since 1.1 release. Kubelet will mark the node not_ready today if docker version is below that minimal version. \n",
        "createdAt" : "2016-05-19T22:28:28Z",
        "updatedAt" : "2016-05-19T22:28:28Z",
        "lastEditedBy" : "a6409368-42e0-44a9-bf79-9d3042ac3b65",
        "tags" : [
        ]
      }
    ],
    "commit" : "eee9a589db64e77ae8abf0516e11608b404b44e2",
    "line" : 420,
    "diffHunk" : "@@ -1,1 +418,422 @@### Docker runtime support for --cgroup-parent\n\nDocker versions <= 1.0.9 did not have proper support for `-cgroup-parent` flag on `systemd`.  This\nwas fixed in this PR (https://github.com/docker/docker/pull/18612).  As result, it's expected\nthat containers launched by the `docker` daemon may continue to go in the default `system.slice` and"
  }
]