[
  {
    "id" : "d5ef297d-ec31-4913-80ef-4af6cf8c0e44",
    "prId" : 29350,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1f08345f-7e05-4e36-bb95-8723ffa00b49",
        "parentId" : null,
        "authorId" : "9f15ed5c-6b7e-465c-870d-91725e990899",
        "body" : "I don't foresee this being a connection that a typical user would make, unless explicitly told to do so in a blog/guide/doc. Definitely, not a blocker or anything though. Just a nice enhancement.\n",
        "createdAt" : "2016-07-22T01:55:59Z",
        "updatedAt" : "2016-08-04T20:15:50Z",
        "lastEditedBy" : "9f15ed5c-6b7e-465c-870d-91725e990899",
        "tags" : [
        ]
      },
      {
        "id" : "7608873f-413e-4d3f-af83-29960a600384",
        "parentId" : "1f08345f-7e05-4e36-bb95-8723ffa00b49",
        "authorId" : "0af48e59-4be9-46ce-9275-aa218813b6fd",
        "body" : "Largely just a debugging mechanism. When you turn on authz, it's hard to tell if a user has misconfigured creds or incorrect access. `kubectl login` could immediately tell you one or the other.\n",
        "createdAt" : "2016-07-22T04:15:42Z",
        "updatedAt" : "2016-08-04T20:15:50Z",
        "lastEditedBy" : "0af48e59-4be9-46ce-9275-aa218813b6fd",
        "tags" : [
        ]
      }
    ],
    "commit" : "5a89b84a085f316855b2694fb05c2211130cf0a4",
    "line" : 88,
    "diffHunk" : "@@ -1,1 +86,90 @@However `kubectl login` should still be seen as a supplement to, not a\nreplacement for, `kubectl config` by helping validate any kubeconfig generated\nby the latter command.\n\n## Credential validation"
  },
  {
    "id" : "07905fa3-6602-4c90-bd47-8d106f33f79a",
    "prId" : 29350,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e9e28dd1-2dbb-4d37-a0b4-e34e07f7601f",
        "parentId" : null,
        "authorId" : "9f15ed5c-6b7e-465c-870d-91725e990899",
        "body" : "Is \"kubernetes\" needed here? This is worded as a statement, but we probably want to hint that these are your choices. What about:\n\n> Select an authentication method:\n",
        "createdAt" : "2016-07-22T02:01:18Z",
        "updatedAt" : "2016-08-04T20:15:50Z",
        "lastEditedBy" : "9f15ed5c-6b7e-465c-870d-91725e990899",
        "tags" : [
        ]
      }
    ],
    "commit" : "5a89b84a085f316855b2694fb05c2211130cf0a4",
    "line" : null,
    "diffHunk" : "@@ -1,1 +146,150 @@Cluster Name [\"cluster-1\"]:\n\nThe kubernetes server supports the following methods:\n\n  1. Bearer token"
  },
  {
    "id" : "01571124-38b4-4ec0-9e16-3acbfdbd8336",
    "prId" : 29350,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "43b2b552-0398-4de6-b905-3b96c9b96f0d",
        "parentId" : null,
        "authorId" : "9f15ed5c-6b7e-465c-870d-91725e990899",
        "body" : "Since this is an interactive flow, can we reasonably assume that a default browser is configured, and automatically open it? I believe this is how `gcloud` does it.\n",
        "createdAt" : "2016-07-22T02:04:44Z",
        "updatedAt" : "2016-08-04T20:15:50Z",
        "lastEditedBy" : "9f15ed5c-6b7e-465c-870d-91725e990899",
        "tags" : [
        ]
      }
    ],
    "commit" : "5a89b84a085f316855b2694fb05c2211130cf0a4",
    "line" : null,
    "diffHunk" : "@@ -1,1 +164,168 @@Client Secret []: *****\n\nOpen the following address in a browser.\n\n    https://accounts.google.com/o/oauth2/v2/auth?redirect_uri=urn%3Aietf%3Awg%3Aoauth%3A2.0%3Aoob&scopes=openid%20email&access_type=offline&..."
  },
  {
    "id" : "e71786e6-7c37-42fe-812d-6f3d28d77821",
    "prId" : 29350,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2e7e1b8b-2899-4dba-82df-47d1b9a46750",
        "parentId" : null,
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "Where do these strings come from?  I think they need to come from the API on the server (via a \"Description\" field or some-such.\n",
        "createdAt" : "2016-07-22T04:19:53Z",
        "updatedAt" : "2016-08-04T20:15:50Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      },
      {
        "id" : "c2f2a872-bf16-47e6-a810-c3f8b9f5aba1",
        "parentId" : "2e7e1b8b-2899-4dba-82df-47d1b9a46750",
        "authorId" : "0af48e59-4be9-46ce-9275-aa218813b6fd",
        "body" : "Was thinking that `kubectl` would recognize a mode from the server than print some human readable string.\n\nEDIT: It has to understand the mode to prompt the user for the correct information anyway.\n",
        "createdAt" : "2016-07-22T04:34:58Z",
        "updatedAt" : "2016-08-04T20:15:51Z",
        "lastEditedBy" : "0af48e59-4be9-46ce-9275-aa218813b6fd",
        "tags" : [
        ]
      },
      {
        "id" : "e8257fdb-6bd0-424f-b092-4160a7998f6a",
        "parentId" : "2e7e1b8b-2899-4dba-82df-47d1b9a46750",
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "I suppose that's true, but I'd like to make sure that this is tied into the specific `Authenticator` rather than a random map somewhere in `kubectl`  So perhaps instead of tying this info to the API object we need to add something to the `Authenticator` interface?\n",
        "createdAt" : "2016-07-22T15:25:31Z",
        "updatedAt" : "2016-08-04T20:15:51Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "5a89b84a085f316855b2694fb05c2211130cf0a4",
    "line" : null,
    "diffHunk" : "@@ -1,1 +148,152 @@The kubernetes server supports the following methods:\n\n  1. Bearer token\n  2. Username and password\n  3. Keystone"
  },
  {
    "id" : "ee2e0eda-c84d-4b4b-8c3a-5bec2fee0d8b",
    "prId" : 29350,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "429b361d-f1da-4449-bbb7-ecadc9b53915",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "@liggitt noteworthy update\n",
        "createdAt" : "2016-08-02T14:04:31Z",
        "updatedAt" : "2016-08-04T20:15:51Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "c4076c0e-303b-4433-9b28-e6d61b011a12",
        "parentId" : "429b361d-f1da-4449-bbb7-ecadc9b53915",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Should this be \"MUST\" or \"SHOULD\"?  I.e. when there's a proxy server doing auth, and it doesn't set this, does login have to tolerate that?\n",
        "createdAt" : "2016-08-04T16:29:44Z",
        "updatedAt" : "2016-08-04T20:15:51Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "affbd52d-7f38-4e32-9a7e-e320a45d7b97",
        "parentId" : "429b361d-f1da-4449-bbb7-ecadc9b53915",
        "authorId" : "0af48e59-4be9-46ce-9275-aa218813b6fd",
        "body" : "\"SHOULD\"? I could see use cases where admins don't actually want you to be able to differentiate between a failed login and an authorization denial.\n",
        "createdAt" : "2016-08-04T17:38:08Z",
        "updatedAt" : "2016-08-04T20:15:52Z",
        "lastEditedBy" : "0af48e59-4be9-46ce-9275-aa218813b6fd",
        "tags" : [
        ]
      }
    ],
    "commit" : "5a89b84a085f316855b2694fb05c2211130cf0a4",
    "line" : null,
    "diffHunk" : "@@ -1,1 +98,102 @@To help `kubectl login` diagnose mis-configured credentials, responses from the\nAPI server to authenticated requests SHOULD include the `Authentication-Info`\nheader as defined in [RFC 7615](https://tools.ietf.org/html/rfc7615). The value\nwill hold name value pairs for `username` and `uid`. Since usernames and IDs\ncan be arbitrary strings, these values will be escaped using the `quoted-string`"
  },
  {
    "id" : "e6decd49-3791-4819-94fb-5ae3335d92b3",
    "prId" : 29350,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8a7ab6e1-2b59-4824-a63b-58e4ec2c3607",
        "parentId" : null,
        "authorId" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "body" : "Is login per cluster?  If I have existing clusters but want to login to a new one can I get prompts for that?\n",
        "createdAt" : "2016-08-04T15:54:33Z",
        "updatedAt" : "2016-08-04T20:15:51Z",
        "lastEditedBy" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "tags" : [
        ]
      },
      {
        "id" : "890e31c6-4add-4392-b4f8-8bb230162483",
        "parentId" : "8a7ab6e1-2b59-4824-a63b-58e4ec2c3607",
        "authorId" : "0af48e59-4be9-46ce-9275-aa218813b6fd",
        "body" : "By default `kubectl login` assume you're not switching cluster or users. There are `kubectl login --switch-cluster` and `kubectl login --switch-user` flags proposed a little further down. Maybe I should call them out here as well though.\n",
        "createdAt" : "2016-08-04T15:58:21Z",
        "updatedAt" : "2016-08-04T20:15:51Z",
        "lastEditedBy" : "0af48e59-4be9-46ce-9275-aa218813b6fd",
        "tags" : [
        ]
      },
      {
        "id" : "fefb58db-f0e3-457f-940c-254ad529b47f",
        "parentId" : "8a7ab6e1-2b59-4824-a63b-58e4ec2c3607",
        "authorId" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "body" : "no need to call out here.  I see it now.\n",
        "createdAt" : "2016-08-04T16:06:01Z",
        "updatedAt" : "2016-08-04T20:15:51Z",
        "lastEditedBy" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "tags" : [
        ]
      }
    ],
    "commit" : "5a89b84a085f316855b2694fb05c2211130cf0a4",
    "line" : 67,
    "diffHunk" : "@@ -1,1 +65,69 @@The steps taken are:\n\n1. If no cluster configured, prompt user for cluster information.\n2. If no user is configured, discover the authentication strategies supported by the API server.\n3. Prompt the user for some information based on the authentication strategy they choose."
  },
  {
    "id" : "93d325e4-1458-4adf-b75b-5ebb39a673ce",
    "prId" : 29350,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e72501aa-780e-4a3f-84e0-942ff166bed3",
        "parentId" : null,
        "authorId" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "body" : "What happens on a 403?  I hope I get `Authentication-Info: username=\"janedoe@example.com\"  even for a 403 so I can debug if I am auth-N-ing as the wrong user (and that is why auth-Z failed).\n\nWhat happens on a 401?  \n",
        "createdAt" : "2016-08-04T16:02:57Z",
        "updatedAt" : "2016-08-04T20:15:51Z",
        "lastEditedBy" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "tags" : [
        ]
      },
      {
        "id" : "b9de7096-e734-40bb-a6eb-98b8be9b20b1",
        "parentId" : "e72501aa-780e-4a3f-84e0-942ff166bed3",
        "authorId" : "0af48e59-4be9-46ce-9275-aa218813b6fd",
        "body" : "\"If the user successfully authenticates this header will be set, regardless of auth-Z decisions. For example a 401 Unauthorized (user didn't provide valid credentials) would lack this header, while a 403 Forbidden response would contain it.\"\n\nDoes this work?\n",
        "createdAt" : "2016-08-04T17:29:54Z",
        "updatedAt" : "2016-08-04T20:15:51Z",
        "lastEditedBy" : "0af48e59-4be9-46ce-9275-aa218813b6fd",
        "tags" : [
        ]
      },
      {
        "id" : "0e7ae92b-34ff-404d-858c-144ed2ceb657",
        "parentId" : "e72501aa-780e-4a3f-84e0-942ff166bed3",
        "authorId" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "body" : "❤️ \n",
        "createdAt" : "2016-08-04T18:48:20Z",
        "updatedAt" : "2016-08-04T20:15:52Z",
        "lastEditedBy" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "tags" : [
        ]
      }
    ],
    "commit" : "5a89b84a085f316855b2694fb05c2211130cf0a4",
    "line" : 108,
    "diffHunk" : "@@ -1,1 +106,110 @@HTTP/1.1 200 OK\nAuthentication-Info: username=\"janedoe@example.com\", uid=\"123456\"\n```\n\nIf the user successfully authenticates this header will be set, regardless of"
  },
  {
    "id" : "22fb1f9f-e701-451f-a807-648a7b4c6726",
    "prId" : 29350,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0ca6ee90-0888-448c-979f-91ff7c81cedc",
        "parentId" : null,
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "I would _prefer_ (but interested in other's opinions) that login also support flags for answering all of the questions below - in general I think it should be possible for a client to script \"login\" correctly without future changes causing failures.  I.e.:\n\n```\nkubectl login -u user -p $PASSWORD\n```\n\nshould never prompt the user for server info, because the user is in a non-interactive context.  Alternatively, we can say \"no, this is something that kubectl config is for\" (if it's possible to do all the setup that login will do w.r.t. kerberos or oidc).\n\nEither way, we should call it out here.\n",
        "createdAt" : "2016-08-04T16:33:08Z",
        "updatedAt" : "2016-08-04T20:15:51Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "47e596f7-600b-4efb-b453-69d48fbf106f",
        "parentId" : "0ca6ee90-0888-448c-979f-91ff7c81cedc",
        "authorId" : "0af48e59-4be9-46ce-9275-aa218813b6fd",
        "body" : "`kubectl config` already has a lot of these options, so I don't know if we want to replicate effort here as well. For now, I think `kubectl login` should fail if it needs to prompt and isn't in an interactive session by printing a recommendation to use `kubectl config`.\n\nI imagine experienced users will still prefer `kubectl config` with `kubectl login` only being used for final challenges (like a token exchange or password/username validation).\n",
        "createdAt" : "2016-08-04T17:23:50Z",
        "updatedAt" : "2016-08-04T20:15:51Z",
        "lastEditedBy" : "0af48e59-4be9-46ce-9275-aa218813b6fd",
        "tags" : [
        ]
      }
    ],
    "commit" : "5a89b84a085f316855b2694fb05c2211130cf0a4",
    "line" : null,
    "diffHunk" : "@@ -1,1 +137,141 @@## Examples\n\nIf kubeconfig isn't configured, `kubectl login` will attempt to fully configure\nand validate the client's credentials.\n"
  },
  {
    "id" : "9630d66a-605b-4ab7-bd18-233fc9769346",
    "prId" : 29350,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1f2da56f-6ccc-426e-b023-97f5a77cf3f5",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "not a big deal, but perhaps something like `--prompt-cluster` would be better, you might not end up switching clusters. can discuss further in the impl PR\n",
        "createdAt" : "2016-08-05T16:09:59Z",
        "updatedAt" : "2016-08-05T16:09:59Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "bc1085cf-badf-4785-a409-ed086d55837e",
        "parentId" : "1f2da56f-6ccc-426e-b023-97f5a77cf3f5",
        "authorId" : "0af48e59-4be9-46ce-9275-aa218813b6fd",
        "body" : "`--reprompt`, `--reprompt-cluster` and `--reprompt-user`? Is \"reprompt\" a word?\n",
        "createdAt" : "2016-08-05T16:22:05Z",
        "updatedAt" : "2016-08-05T16:22:05Z",
        "lastEditedBy" : "0af48e59-4be9-46ce-9275-aa218813b6fd",
        "tags" : [
        ]
      }
    ],
    "commit" : "5a89b84a085f316855b2694fb05c2211130cf0a4",
    "line" : 213,
    "diffHunk" : "@@ -1,1 +211,215 @@```\n\nUsers who wish to switch servers can provide the `--switch-cluster` flag which\nwill prompt the user for new cluster details and switch the current context. It\nbehaves identically to `kubectl login` when a cluster is not set."
  }
]