[
  {
    "id" : "c8348ff4-1d7c-4bc0-9a29-3e30f4c2d222",
    "prId" : 12873,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a84b96ca-4832-4f83-8d8f-5525af41fb74",
        "parentId" : null,
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "Was this paragraph changed or just reformatted?\n",
        "createdAt" : "2015-08-19T21:15:08Z",
        "updatedAt" : "2015-08-21T15:52:26Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "d2c9fdd4-8b37-4c2e-9d22-313ddbe6a344",
        "parentId" : "a84b96ca-4832-4f83-8d8f-5525af41fb74",
        "authorId" : null,
        "body" : "Just reformatted.\n",
        "createdAt" : "2015-08-20T22:50:50Z",
        "updatedAt" : "2015-08-21T15:52:26Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      }
    ],
    "commit" : "27edaf84f1acd37c96936ccd1a643479a3d61a8c",
    "line" : 175,
    "diffHunk" : "@@ -1,1 +353,357 @@   located in the same cluster (e.g. for failure correlation, network\n   latency or bandwidth cost reasons), but can tolerate being\n   partitioned for \"short\" periods of time (for example while\n   migrating the application from one cluster to another). Most small\n   to medium sized LAMP stacks with not-very-strict latency goals"
  },
  {
    "id" : "3a3f0930-1d36-41e4-a50d-49bad1943f88",
    "prId" : 12873,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "abaea514-52b3-439d-ab73-0e236eabe3ff",
        "parentId" : null,
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "inconsistent indentation\n",
        "createdAt" : "2015-08-19T21:26:32Z",
        "updatedAt" : "2015-08-21T15:52:26Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "9cf917f3-7f8d-46f6-988f-208088e00a26",
        "parentId" : "abaea514-52b3-439d-ab73-0e236eabe3ff",
        "authorId" : null,
        "body" : "Done.\n",
        "createdAt" : "2015-08-20T22:51:52Z",
        "updatedAt" : "2015-08-21T15:52:26Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      }
    ],
    "commit" : "27edaf84f1acd37c96936ccd1a643479a3d61a8c",
    "line" : null,
    "diffHunk" : "@@ -1,1 +527,531 @@\n1. **Failure isolation:** The Decoupled Hierarchical approach provides\n    better failure isolation than the Monolithic approach, as each\n    underlying Kubernetes cluster, and the Federation Control Plane,\n    can operate and fail completely independently of each other.  In"
  },
  {
    "id" : "fb259826-26a5-478f-8313-6b1e7bc516e4",
    "prId" : 12873,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1fa6c57a-5d70-4a52-82e1-a947c0bfbe72",
        "parentId" : null,
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "+1 to a cluster registry.\n",
        "createdAt" : "2015-08-19T21:58:28Z",
        "updatedAt" : "2015-08-21T15:52:26Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      }
    ],
    "commit" : "27edaf84f1acd37c96936ccd1a643479a3d61a8c",
    "line" : null,
    "diffHunk" : "@@ -1,1 +599,603 @@but be explicitly multi-cluster.\n\n+ Clusters become first class objects, which can be registered,\n   listed, described, deregistered etc via the API.\n+ Compute resources can be explicitly requested in specific clusters,"
  },
  {
    "id" : "70f84cea-edc8-4972-abdd-a8ba0c8078c1",
    "prId" : 7614,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "921b5228-15c7-426d-b25a-f88ce56911d4",
        "parentId" : null,
        "authorId" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "body" : "The drawback here is that you might not be able to acquire the resources.\nIf everyone is planning to do this, and a large IaaS provider/zone has a large outage, it isn't assured that everyone can instantly scale up on other IaaS providers/zones.\n",
        "createdAt" : "2015-05-01T16:34:11Z",
        "updatedAt" : "2015-05-01T16:34:11Z",
        "lastEditedBy" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "tags" : [
        ]
      }
    ],
    "commit" : "7fc51ca580767f355d2256aabdb4b5a1ca25674e",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +226,230 @@   remaining cluster, possibly proportional to both the remaining functioning resources\n   and the unavailable resources in the failed cluster(s).\n   (All the benefits of over-provisioning, without expensive idle resources.)\n\nDoing nothing (i.e. forcing users to choose between 1 and 2 on their"
  }
]