[
  {
    "id" : "f95b0eb9-889a-47d0-bf5c-76b2be238908",
    "prId" : 17197,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7cde5d24-84ea-452d-8a05-0c67a766e79b",
        "parentId" : null,
        "authorId" : "aa0ae875-2718-4d41-836b-db4cfbf596c8",
        "body" : "\"put back\" is a problem, at the end or head or other palce of the queue can be quite different.\n",
        "createdAt" : "2015-11-13T22:03:40Z",
        "updatedAt" : "2015-11-17T06:59:26Z",
        "lastEditedBy" : "aa0ae875-2718-4d41-836b-db4cfbf596c8",
        "tags" : [
        ]
      },
      {
        "id" : "355bff64-8cf6-4709-afda-fb99aa70eda2",
        "parentId" : "7cde5d24-84ea-452d-8a05-0c67a766e79b",
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "Pods rejected by Kubelet fail, and must be recreated by their controllers in order to be rescheduled.\n",
        "createdAt" : "2015-11-13T23:08:31Z",
        "updatedAt" : "2015-11-17T06:59:26Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "9b27c658-4e76-436e-9088-f0b0e4067c88",
        "parentId" : "7cde5d24-84ea-452d-8a05-0c67a766e79b",
        "authorId" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "body" : "I think for the first version we shouldn't worry about manipulating where in the scheduler queue the replacement pods go. I had a more detailed comment about it somewhere, but basically it boils down to\n(1) if some pod other than the one you were trying to get scheduled gets scheduled, it's probably fine, because at least you're making progress (in draining the pending queue)\n(2) if evicted pods can't reschedule because some other pods got scheduled in the interim, it's somewhat more problematic than (1), but preventing this is extremely hard in a system with multiple schedulers, so we should just punt on this for now\n\nThis component can get arbitrarily complex. I'd really like to start out with something simple.\n",
        "createdAt" : "2015-11-13T23:13:37Z",
        "updatedAt" : "2015-11-17T06:59:26Z",
        "lastEditedBy" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "tags" : [
        ]
      },
      {
        "id" : "246426f7-20bc-4db5-bf73-2e528c650163",
        "parentId" : "7cde5d24-84ea-452d-8a05-0c67a766e79b",
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "+1 to starting simple.\n\nCo-designing schedulers to not conflict can also solve a lot of the problem. For instance, a best-effort scheduler wouldn't really compete with a scheduler of pods with guaranteed QoS.\n",
        "createdAt" : "2015-11-13T23:20:25Z",
        "updatedAt" : "2015-11-17T06:59:26Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "eb5cb54b-fe33-4e70-918f-5e4abeac9121",
        "parentId" : "7cde5d24-84ea-452d-8a05-0c67a766e79b",
        "authorId" : "bb4cf218-381a-40ad-ac0c-0c2c66685cd4",
        "body" : "@davidopp \n+1with starting simple. Just out of curiosity, are you referring to rescheduler?\n",
        "createdAt" : "2015-11-17T04:53:11Z",
        "updatedAt" : "2015-11-17T06:59:26Z",
        "lastEditedBy" : "bb4cf218-381a-40ad-ac0c-0c2c66685cd4",
        "tags" : [
        ]
      }
    ],
    "commit" : "f849ff60effe8b49ecb661354ff706666643b149",
    "line" : null,
    "diffHunk" : "@@ -1,1 +86,90 @@\n    This conflict is complex to deal with in api-server and etcd. Our current solution is to let Kubelet\n    to do the conflict check and if the conflict happens, effected pods would be put back to scheduler\n    and waiting to be scheduled again. Implementation details are in later sections.\n"
  },
  {
    "id" : "19db5eca-8d17-4f9e-bda9-9680154ea03d",
    "prId" : 17197,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "28814eb0-808e-4d15-8ee6-fe2469d78338",
        "parentId" : null,
        "authorId" : "aa0ae875-2718-4d41-836b-db4cfbf596c8",
        "body" : "I remember in the discussion we talked about the case if the value is invalue.\n",
        "createdAt" : "2015-11-13T22:13:01Z",
        "updatedAt" : "2015-11-17T06:59:26Z",
        "lastEditedBy" : "aa0ae875-2718-4d41-836b-db4cfbf596c8",
        "tags" : [
        ]
      },
      {
        "id" : "695150dd-8b0e-479d-8556-ea23841d22f6",
        "parentId" : "28814eb0-808e-4d15-8ee6-fe2469d78338",
        "authorId" : "aa0ae875-2718-4d41-836b-db4cfbf596c8",
        "body" : "Ah, just saw it. It's below there.\n",
        "createdAt" : "2015-11-13T22:14:04Z",
        "updatedAt" : "2015-11-17T06:59:26Z",
        "lastEditedBy" : "aa0ae875-2718-4d41-836b-db4cfbf596c8",
        "tags" : [
        ]
      }
    ],
    "commit" : "f849ff60effe8b49ecb661354ff706666643b149",
    "line" : null,
    "diffHunk" : "@@ -1,1 +112,116 @@        annotation or which has `scheduler.alpha.kubernetes.io/name: kube-scheduler`. In the future, it may be possible to\n        change which scheduler is the default for a given cluster.\n\n- Dealing with conflicts. All schedulers must use predicate functions that are at least as strict as\nthe ones that Kubelet applies when deciding whether to accept a pod, otherwise Kubelet and scheduler"
  },
  {
    "id" : "3154d42f-e299-44b8-953a-24a965ee7926",
    "prId" : 17197,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "14ebc7ad-3c02-4336-bc7c-2ceae4a55540",
        "parentId" : null,
        "authorId" : "aa0ae875-2718-4d41-836b-db4cfbf596c8",
        "body" : "And we can make it flexible in the future so users(cluster admins) can define there customized rules on how to pick pod by scheduelrs.\n",
        "createdAt" : "2015-11-13T22:16:55Z",
        "updatedAt" : "2015-11-17T06:59:26Z",
        "lastEditedBy" : "aa0ae875-2718-4d41-836b-db4cfbf596c8",
        "tags" : [
        ]
      },
      {
        "id" : "36289400-6904-4fb0-9741-88db1b4d3bdf",
        "parentId" : "14ebc7ad-3c02-4336-bc7c-2ceae4a55540",
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "I would like to make it configurable in a policy object: #17097\n",
        "createdAt" : "2015-11-13T23:16:40Z",
        "updatedAt" : "2015-11-17T06:59:26Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "354c8a45-e18c-4db8-bc07-8edfe7e1b1c2",
        "parentId" : "14ebc7ad-3c02-4336-bc7c-2ceae4a55540",
        "authorId" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "body" : "This doc isn't really intended to design how the annotations get added (but it's useful to at least give a flavor as to the kinds of policies we might have). These are good comments but I think we should leave this doc at the current level of detail, and address these comments in a follow-up design for how to set the annotations.\n",
        "createdAt" : "2015-11-14T10:42:21Z",
        "updatedAt" : "2015-11-17T06:59:26Z",
        "lastEditedBy" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "tags" : [
        ]
      }
    ],
    "commit" : "f849ff60effe8b49ecb661354ff706666643b149",
    "line" : null,
    "diffHunk" : "@@ -1,1 +149,153 @@admission controller might add the scheduler annotation based on the namespace of the pod, and/or identify if\nthere are conflicting rules, and/or set a default value for the scheduler annotation, and/or reject pods on\nwhich the client has set a scheduler annotation that does not correspond to a running scheduler.\n2. Dynamic launching scheduler(s) and registering to admission controller (as an external call). This also\nrequires some work on authorization and authentication to control what schedulers can write the /binding"
  },
  {
    "id" : "1f47e7b9-e97b-4c06-8763-5dbff2811062",
    "prId" : 17197,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cbd2d4fb-a2ca-4322-8bb7-1116b07f02ff",
        "parentId" : null,
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "Annotations are key=value. You shouldn't be using the key itself to differentiate among schedulers.\nscheduler.alpha.kubernetes.io/name = kube-scheduler\n\nIn 1.2, I want to use initializers for this. #3585 cc @derekwaynecarr \n",
        "createdAt" : "2015-11-13T23:10:13Z",
        "updatedAt" : "2015-11-17T06:59:26Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "6fb7e4de-3d2a-4f05-acb9-bfc78d35e9f4",
        "parentId" : "cbd2d4fb-a2ca-4322-8bb7-1116b07f02ff",
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "Detail: We'll likely need to extend field selectors to be able to select on annotations.\n",
        "createdAt" : "2015-11-13T23:11:40Z",
        "updatedAt" : "2015-11-17T06:59:26Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "00126ae7-4eae-4cab-b475-17c2852bc582",
        "parentId" : "cbd2d4fb-a2ca-4322-8bb7-1116b07f02ff",
        "authorId" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "body" : "Just to be clear, this proposal isn't making a statement about how/where the annotations get added. Adding them (e.g. in an admission controller or initializer or whatever) is left as the second step. To experiment with this feature after the first step is completed and before the second step is completed, you'd have to manually add the annotation via client.\n",
        "createdAt" : "2015-11-13T23:15:44Z",
        "updatedAt" : "2015-11-17T06:59:26Z",
        "lastEditedBy" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "tags" : [
        ]
      },
      {
        "id" : "36aedf88-9429-49f3-a229-e7b78fa3c179",
        "parentId" : "cbd2d4fb-a2ca-4322-8bb7-1116b07f02ff",
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "My first comment was indicating that annotations weren't even being used correctly.\n\nPlease read:\nhttps://github.com/kubernetes/kubernetes/blob/master/docs/user-guide/annotations.md\nhttps://github.com/kubernetes/kubernetes/blob/master/docs/devel/api-conventions.md#label-selector-and-annotation-conventions\n",
        "createdAt" : "2015-11-13T23:22:26Z",
        "updatedAt" : "2015-11-17T06:59:26Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "561108a3-f5df-49bd-a6ec-39d53cf00171",
        "parentId" : "cbd2d4fb-a2ca-4322-8bb7-1116b07f02ff",
        "authorId" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "body" : "Yeah sorry I put this comment in the wrong place.\n Wasn't replying to your comment on how to use annotations (which I agree with).\n",
        "createdAt" : "2015-11-14T00:33:58Z",
        "updatedAt" : "2015-11-17T06:59:26Z",
        "lastEditedBy" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "tags" : [
        ]
      },
      {
        "id" : "dcb75f0d-86c7-4818-8807-b59ea5235b05",
        "parentId" : "cbd2d4fb-a2ca-4322-8bb7-1116b07f02ff",
        "authorId" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "body" : "Oh actually I did put the comment in the right place, just wasn't making it clear which comment I was replying to. I was replying to \"In 1.2, I want to use initializers for this. #3585.\" My point was just not to focus too much on anything this doc says about how/where the annotations will be added. I wasn't replying to the comment about the proper format of the annotation.\n",
        "createdAt" : "2015-11-14T10:17:37Z",
        "updatedAt" : "2015-11-17T06:59:26Z",
        "lastEditedBy" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "tags" : [
        ]
      },
      {
        "id" : "f419061a-f2b0-42ca-8337-925f48a655a1",
        "parentId" : "cbd2d4fb-a2ca-4322-8bb7-1116b07f02ff",
        "authorId" : "bb4cf218-381a-40ad-ac0c-0c2c66685cd4",
        "body" : "Hi @bgrant0607 , would you mind sharing what initializers will do w.r.t. annotation? \nWe can improve the docs by adding something about the plan/potential steps. \n",
        "createdAt" : "2015-11-15T22:42:00Z",
        "updatedAt" : "2015-11-17T06:59:26Z",
        "lastEditedBy" : "bb4cf218-381a-40ad-ac0c-0c2c66685cd4",
        "tags" : [
        ]
      },
      {
        "id" : "9d26f184-2318-426f-a892-955650d7b664",
        "parentId" : "cbd2d4fb-a2ca-4322-8bb7-1116b07f02ff",
        "authorId" : "367ad63e-2fc8-4db1-949a-10424aaf7469",
        "body" : "@bgrant0607, thanks for pointing out. I used to use \"/\" to separate the key and the value of an annotation, and I was wrong. \"/\" should be part of the key of this annotation. I will correct these mistakes in the next update.\n\n@hongchaodeng I think it is related to #3585 and it is not done yet.\n",
        "createdAt" : "2015-11-16T07:17:51Z",
        "updatedAt" : "2015-11-17T06:59:26Z",
        "lastEditedBy" : "367ad63e-2fc8-4db1-949a-10424aaf7469",
        "tags" : [
        ]
      }
    ],
    "commit" : "f849ff60effe8b49ecb661354ff706666643b149",
    "line" : null,
    "diffHunk" : "@@ -1,1 +96,100 @@- Add an annotation in pod template: `scheduler.alpha.kubernetes.io/name: scheduler-name`, this is used to\nseparate pods between schedulers. `scheduler-name` should match one of the schedulers' `scheduler-name`\n- Add a `scheduler-name` to each scheduler. It is done by hardcode or as command-line argument. The\nKubernetes native scheduler (now `kube-scheduler` process) would have the name as `kube-scheduler`\n- The `scheduler-name` plays an important part in separating the pods between different schedulers."
  },
  {
    "id" : "6d78e349-2e9b-44f6-b1ff-573530c0e302",
    "prId" : 17197,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "333a1425-6216-48cd-8f69-5d6a46f138d1",
        "parentId" : null,
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "We should also create an API for querying nodes where the pod fits, with an optional limit to the number of (prioritized) nodes returned, as a complement to the approach proposed in #11470. \n",
        "createdAt" : "2015-11-13T23:15:01Z",
        "updatedAt" : "2015-11-17T06:59:26Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "0b678e09-bc6f-4e75-8534-098f1beaf0f5",
        "parentId" : "333a1425-6216-48cd-8f69-5d6a46f138d1",
        "authorId" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "body" : "This would be an API exported by every scheduler in the system?\nThe input would be a pod, and the output would be a prioritized list of nodes?\nWhat is the motivation/use case for this? To make it possible to implement the callout approach (#11470) without passing all the nodes on each call? \n\nBTW I created a separate issue for \"guidelines for writing schedulers\" (#17208); I think this comment probably belongs there? (I've added it to the list there.)\n",
        "createdAt" : "2015-11-14T10:21:31Z",
        "updatedAt" : "2015-11-17T06:59:26Z",
        "lastEditedBy" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "tags" : [
        ]
      },
      {
        "id" : "56c459d2-9f43-4dfc-9c37-e141047ce245",
        "parentId" : "333a1425-6216-48cd-8f69-5d6a46f138d1",
        "authorId" : "367ad63e-2fc8-4db1-949a-10424aaf7469",
        "body" : "I also think this comment should be places in the \"guidelines for writing schedulers\".\n",
        "createdAt" : "2015-11-16T09:09:25Z",
        "updatedAt" : "2015-11-17T06:59:26Z",
        "lastEditedBy" : "367ad63e-2fc8-4db1-949a-10424aaf7469",
        "tags" : [
        ]
      },
      {
        "id" : "91f53586-0344-4d59-aa41-b708878600a0",
        "parentId" : "333a1425-6216-48cd-8f69-5d6a46f138d1",
        "authorId" : "367ad63e-2fc8-4db1-949a-10424aaf7469",
        "body" : "@davidopp @bgrant0607 \n\nMaybe I can add another section like \"related scheduler design issues\" by the end of the proposal to include the many links appeared in the comments so far. Some of them are really helpful for the readers to understand what would be going on in future, but they are hard to be included as part of this multi-scheduler proposal.\n\nPossible ones are:\n\n#13580 for scheduler extension\n#17097 for policy object in pod template\n#16845 for deploying group of pods\n#17208 guide doc for writing new schedulers\n\nIt that OK?\n",
        "createdAt" : "2015-11-16T09:28:31Z",
        "updatedAt" : "2015-11-17T06:59:26Z",
        "lastEditedBy" : "367ad63e-2fc8-4db1-949a-10424aaf7469",
        "tags" : [
        ]
      },
      {
        "id" : "31b9373c-e6ee-4aae-93c4-a148aa987929",
        "parentId" : "333a1425-6216-48cd-8f69-5d6a46f138d1",
        "authorId" : "2189757a-ca1a-4186-a1b2-cd6358214fe9",
        "body" : "s/16485/16845/\n",
        "createdAt" : "2015-11-16T09:33:58Z",
        "updatedAt" : "2015-11-17T06:59:26Z",
        "lastEditedBy" : "2189757a-ca1a-4186-a1b2-cd6358214fe9",
        "tags" : [
        ]
      },
      {
        "id" : "e00aa2d2-872d-4733-bcf7-4c9b33ededf6",
        "parentId" : "333a1425-6216-48cd-8f69-5d6a46f138d1",
        "authorId" : "367ad63e-2fc8-4db1-949a-10424aaf7469",
        "body" : "right...\n",
        "createdAt" : "2015-11-16T09:38:11Z",
        "updatedAt" : "2015-11-17T06:59:26Z",
        "lastEditedBy" : "367ad63e-2fc8-4db1-949a-10424aaf7469",
        "tags" : [
        ]
      },
      {
        "id" : "f61bd337-ac2e-4285-a78a-f8ec2b53800b",
        "parentId" : "333a1425-6216-48cd-8f69-5d6a46f138d1",
        "authorId" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "body" : "Yes that sounds like a good idea. I wouldn't bother to try to summarize them in this doc, because it will just be redundant, but pointing to the other issues is a good idea.\n",
        "createdAt" : "2015-11-16T09:42:06Z",
        "updatedAt" : "2015-11-17T06:59:26Z",
        "lastEditedBy" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "tags" : [
        ]
      },
      {
        "id" : "7e551e92-a245-4aad-8f79-385adc1b9082",
        "parentId" : "333a1425-6216-48cd-8f69-5d6a46f138d1",
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "+1\n",
        "createdAt" : "2015-11-18T15:52:34Z",
        "updatedAt" : "2015-11-18T15:52:34Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      }
    ],
    "commit" : "f849ff60effe8b49ecb661354ff706666643b149",
    "line" : 119,
    "diffHunk" : "@@ -1,1 +117,121 @@may get into an infinite loop where Kubelet keeps rejecting a pod and scheduler keeps re-scheduling\nit back the same node. To make it easier for people who write new schedulers to obey this rule, we will\ncreate a library containing the predicates Kubelet uses. (See issue [#12744](https://github.com/kubernetes/kubernetes/issues/12744).)\n\nIn summary, in the initial version of this multi-scheduler design, we will achieve the following:"
  },
  {
    "id" : "468380b0-82d4-4f83-ba11-3e90161301a6",
    "prId" : 17197,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b1d59bd2-8d83-462a-b0e2-61473f71c965",
        "parentId" : null,
        "authorId" : "bb4cf218-381a-40ad-ac0c-0c2c66685cd4",
        "body" : "We can improve by laying out a section right after Challenges talking about goals and non-goals.\n\nGoals:\n- two level scheduling?\n- shared state? Optimistic concurrency control?\n- static scheduler dispatch\n- How to plugin? HTTP remote call? Compile binary?\n- ...\n\nNon-goals:\n- admission control\n- dynamic scheduler dispatch\n- ...\n",
        "createdAt" : "2015-11-15T22:34:46Z",
        "updatedAt" : "2015-11-17T06:59:26Z",
        "lastEditedBy" : "bb4cf218-381a-40ad-ac0c-0c2c66685cd4",
        "tags" : [
        ]
      },
      {
        "id" : "7fb73f8d-0b4a-47ee-b0ce-4bd88ab62c54",
        "parentId" : "b1d59bd2-8d83-462a-b0e2-61473f71c965",
        "authorId" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "body" : "I think most of these are either already sufficiently covered in the doc or don't need to be covered in this doc. The two I agree with are:\n\n1) \"How to plugin\" - it could be useful to add a sentence to the Motivation section mentioning that we envision a number of ways to extend the scheduler: write your own scheduler (described in this doc), use the callout approach implemented in #13580, recompile the scheduler with the new policy (and select it using the config file), and maybe in the future dynamically link a new policy into the scheduler.\n\n2) Mention explicitly in the introduction that we're not trying to address the question of how the scheduler name annotation gets set. (Though I think mentioning that we anticipate it will be set by a component like admission controller/initializer, as the doc currently does, is reasonable.)\n",
        "createdAt" : "2015-11-15T23:30:19Z",
        "updatedAt" : "2015-11-17T06:59:26Z",
        "lastEditedBy" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "tags" : [
        ]
      },
      {
        "id" : "1d91a9bd-0385-4a35-8c5c-6c02af205253",
        "parentId" : "b1d59bd2-8d83-462a-b0e2-61473f71c965",
        "authorId" : "367ad63e-2fc8-4db1-949a-10424aaf7469",
        "body" : "Noted.\n",
        "createdAt" : "2015-11-16T07:46:33Z",
        "updatedAt" : "2015-11-17T06:59:26Z",
        "lastEditedBy" : "367ad63e-2fc8-4db1-949a-10424aaf7469",
        "tags" : [
        ]
      }
    ],
    "commit" : "f849ff60effe8b49ecb661354ff706666643b149",
    "line" : null,
    "diffHunk" : "@@ -1,1 +88,92 @@    to do the conflict check and if the conflict happens, effected pods would be put back to scheduler\n    and waiting to be scheduled again. Implementation details are in later sections.\n\n## Where to start: initial design\n"
  },
  {
    "id" : "9b92afaa-efe4-43a6-a8b9-de94490cadbc",
    "prId" : 17197,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9056004c-6ed4-495a-9d2b-9085a81cdb96",
        "parentId" : null,
        "authorId" : "bb4cf218-381a-40ad-ac0c-0c2c66685cd4",
        "body" : "After some reads, I realize we can make this simpler by adding sub sections:\n- dispatch algorithm\n- pod annotation example\n- Predicate reuse/refactor\n",
        "createdAt" : "2015-11-15T23:04:49Z",
        "updatedAt" : "2015-11-17T06:59:26Z",
        "lastEditedBy" : "bb4cf218-381a-40ad-ac0c-0c2c66685cd4",
        "tags" : [
        ]
      },
      {
        "id" : "06bc030c-28c4-47a5-92b7-ebc0e59ab881",
        "parentId" : "9056004c-6ed4-495a-9d2b-9085a81cdb96",
        "authorId" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "body" : "I'm a bit reluctant to ask Haiyang to do a lot of additional changes to this doc since we really want him to start working on the implementation. :)\n\nAnyway we will have a follow-up doc describing how the annotation gets set, and there we could address the issues you mention there.\n",
        "createdAt" : "2015-11-15T23:32:52Z",
        "updatedAt" : "2015-11-17T06:59:26Z",
        "lastEditedBy" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "tags" : [
        ]
      },
      {
        "id" : "e527464d-5b94-4724-9c8a-f45a8c963fc6",
        "parentId" : "9056004c-6ed4-495a-9d2b-9085a81cdb96",
        "authorId" : "367ad63e-2fc8-4db1-949a-10424aaf7469",
        "body" : "Yeah, that doc is very necessary. Having the multi-scheduler implemented earlier is helpful to iterate towards better design.\n",
        "createdAt" : "2015-11-16T07:46:00Z",
        "updatedAt" : "2015-11-17T06:59:26Z",
        "lastEditedBy" : "367ad63e-2fc8-4db1-949a-10424aaf7469",
        "tags" : [
        ]
      }
    ],
    "commit" : "f849ff60effe8b49ecb661354ff706666643b149",
    "line" : null,
    "diffHunk" : "@@ -1,1 +89,93 @@    and waiting to be scheduled again. Implementation details are in later sections.\n\n## Where to start: initial design\n\nWe definitely want the multi-scheduler design to be a generic mechanism. The following lists the changes"
  },
  {
    "id" : "1ac087de-0820-480e-bce3-4de469ac0d0a",
    "prId" : 17197,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a198f299-5be8-49d6-88c5-2d0b381b6783",
        "parentId" : null,
        "authorId" : "bb4cf218-381a-40ad-ac0c-0c2c66685cd4",
        "body" : "Could correlation between sentences be improved by changing to:\n\nOmega and Mesos have done a great work to support two level scheduling structure which enables users to run customized and flexible scheduling behaviors as needed.\n",
        "createdAt" : "2015-11-17T04:36:25Z",
        "updatedAt" : "2015-11-17T06:59:26Z",
        "lastEditedBy" : "bb4cf218-381a-40ad-ac0c-0c2c66685cd4",
        "tags" : [
        ]
      },
      {
        "id" : "4f6d7bac-90b6-424d-b59b-81de4a9303e0",
        "parentId" : "a198f299-5be8-49d6-88c5-2d0b381b6783",
        "authorId" : "367ad63e-2fc8-4db1-949a-10424aaf7469",
        "body" : "Reply to this one and the one above.\n\nI think the way Omega does is not a \"two level scheduling\". I would keep the content for now.\n",
        "createdAt" : "2015-11-17T05:20:06Z",
        "updatedAt" : "2015-11-17T06:59:26Z",
        "lastEditedBy" : "367ad63e-2fc8-4db1-949a-10424aaf7469",
        "tags" : [
        ]
      }
    ],
    "commit" : "f849ff60effe8b49ecb661354ff706666643b149",
    "line" : null,
    "diffHunk" : "@@ -1,1 +48,52 @@cluster and many other constraints since their performance must meet some higher SLOs.\n[Mesos](http://mesos.apache.org/) has done a great work to support multiple schedulers by building a\ntwo-level scheduling structure. This proposal describes how Kubernetes is going to support multi-scheduler\nso that users could be able to run their user-provided scheduler(s) to enable some customized scheduling\nbehavior as they need. As previously discussed in [#11793](https://github.com/kubernetes/kubernetes/issues/11793),"
  },
  {
    "id" : "334a92c3-1281-49c2-be34-2f229a41ccc3",
    "prId" : 17197,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a2b3f112-03ff-49f1-8dff-26d7c9bbd6a8",
        "parentId" : null,
        "authorId" : "bb4cf218-381a-40ad-ac0c-0c2c66685cd4",
        "body" : "Remove the last line \"as the doc currently does.\" seems better?\n",
        "createdAt" : "2015-11-17T04:38:37Z",
        "updatedAt" : "2015-11-17T06:59:26Z",
        "lastEditedBy" : "bb4cf218-381a-40ad-ac0c-0c2c66685cd4",
        "tags" : [
        ]
      }
    ],
    "commit" : "f849ff60effe8b49ecb661354ff706666643b149",
    "line" : 57,
    "diffHunk" : "@@ -1,1 +55,59 @@It is worth mentioning that the proposal does not address the question of how the scheduler name annotation gets\nset although it is reasonable to anticipate that it would be set by a component like admission controller/initializer,\nas the doc currently does.\n\nBefore going to the details of this proposal, below lists a number of the methods to extend the scheduler:"
  },
  {
    "id" : "020772df-92c8-4659-8927-a811ab8ece4c",
    "prId" : 17197,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "afaa36c1-ff45-4452-9918-73871a37f1fb",
        "parentId" : null,
        "authorId" : "bb4cf218-381a-40ad-ac0c-0c2c66685cd4",
        "body" : "remove \"or maybe in future\" seems better?\n",
        "createdAt" : "2015-11-17T04:42:50Z",
        "updatedAt" : "2015-11-17T06:59:26Z",
        "lastEditedBy" : "bb4cf218-381a-40ad-ac0c-0c2c66685cd4",
        "tags" : [
        ]
      }
    ],
    "commit" : "f849ff60effe8b49ecb661354ff706666643b149",
    "line" : null,
    "diffHunk" : "@@ -1,1 +63,67 @@- Recompile the scheduler with a new policy\n- Restart the scheduler with a new [scheduler policy config file](../../examples/scheduler-policy-config.json)\n- Or maybe in future dynamically link a new policy into the running scheduler\n\n## Challenges in multiple schedulers"
  },
  {
    "id" : "4f1bfca5-e285-4e99-8be8-840ac0d71f17",
    "prId" : 17197,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2e90de85-3562-4f47-9afe-3e9e6e734b45",
        "parentId" : null,
        "authorId" : "bb4cf218-381a-40ad-ac0c-0c2c66685cd4",
        "body" : "Can we improve the second sentence by saying:\n\nThe details are going to be explained in this proposal.\n",
        "createdAt" : "2015-11-17T04:44:04Z",
        "updatedAt" : "2015-11-17T06:59:26Z",
        "lastEditedBy" : "bb4cf218-381a-40ad-ac0c-0c2c66685cd4",
        "tags" : [
        ]
      }
    ],
    "commit" : "f849ff60effe8b49ecb661354ff706666643b149",
    "line" : 61,
    "diffHunk" : "@@ -1,1 +59,63 @@Before going to the details of this proposal, below lists a number of the methods to extend the scheduler:\n\n- Write your own scheduler and run it along with Kubernetes native scheduler. This is going to be detailed in this proposal\n- Use the callout approach such as the one implemented in [#13580](https://github.com/kubernetes/kubernetes/issues/13580)\n- Recompile the scheduler with a new policy"
  },
  {
    "id" : "c3c5f1eb-7007-42e5-a536-888b8a979997",
    "prId" : 17197,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7ef5b1ef-b576-42ac-a6ba-ee4c8f1083c7",
        "parentId" : null,
        "authorId" : "bb4cf218-381a-40ad-ac0c-0c2c66685cd4",
        "body" : "\"match\" sounds a little ambiguous.\nCan we use \"is equivalent to\".\n",
        "createdAt" : "2015-11-17T04:57:50Z",
        "updatedAt" : "2015-11-17T06:59:26Z",
        "lastEditedBy" : "bb4cf218-381a-40ad-ac0c-0c2c66685cd4",
        "tags" : [
        ]
      }
    ],
    "commit" : "f849ff60effe8b49ecb661354ff706666643b149",
    "line" : 105,
    "diffHunk" : "@@ -1,1 +103,107 @@NOT be claimed by more than one scheduler. To be specific, a scheduler can add a pod to its queue if and only if:\n    1. The pod has no nodeName, **AND**\n    2. The `scheduler-name` specified in the pod's annotation `scheduler.alpha.kubernetes.io/name: scheduler-name`\n    matches the `scheduler-name` of the scheduler.\n"
  }
]