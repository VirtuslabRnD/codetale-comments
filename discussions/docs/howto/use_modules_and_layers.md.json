[
  {
    "id" : "3076f606-3e55-4019-9366-040ed46df568",
    "prId" : 2943,
    "prUrl" : "https://github.com/zio/zio/pull/2943#pullrequestreview-362908880",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f7d4a194-df19-44bc-91d2-b6c29d028b56",
        "parentId" : null,
        "authorId" : "e51a12a9-b5b7-4e30-a51d-293206825c6f",
        "body" : "I might mention being able to provide alternative implementations and in particular test implementations here.",
        "createdAt" : "2020-02-21T20:56:27Z",
        "updatedAt" : "2020-02-25T23:41:00Z",
        "lastEditedBy" : "e51a12a9-b5b7-4e30-a51d-293206825c6f",
        "tags" : [
        ]
      }
    ],
    "commit" : "46c4359450801830050e37ff4644311a5909f3ac",
    "line" : 69,
    "diffHunk" : "@@ -1,1 +67,71 @@This formulation of module pattern is _the way_ ZIO manages dependencies between application components, giving extreme power in terms of compositionality and offering the capability to easily change different implementations. This is particularly useful during the testing/mocking phase. \n\n### What is a module?\nA module is a group of functions that deals with only one concern. Keeping the scope of a module limited improves our ability to understand code, in that we need to focus\n only on one topic at a time without juggling with too many concepts together in our head."
  },
  {
    "id" : "2d9bdaf3-51e9-45a8-8792-e3032853e0bb",
    "prId" : 2943,
    "prUrl" : "https://github.com/zio/zio/pull/2943#pullrequestreview-363046423",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f6fa7798-d82e-4b7f-81e4-c91dfa8be16f",
        "parentId" : null,
        "authorId" : "e51a12a9-b5b7-4e30-a51d-293206825c6f",
        "body" : "I think you need a type annotation on `get` here.",
        "createdAt" : "2020-02-21T21:00:41Z",
        "updatedAt" : "2020-02-25T23:41:00Z",
        "lastEditedBy" : "e51a12a9-b5b7-4e30-a51d-293206825c6f",
        "tags" : [
        ]
      },
      {
        "id" : "a49eb845-6a05-4b6b-a254-aeb3675cc802",
        "parentId" : "f6fa7798-d82e-4b7f-81e4-c91dfa8be16f",
        "authorId" : "73db70fa-89e1-4c46-9a34-73cfc3db7d43",
        "body" : "No, if the environment is a single `Has[A]` you don't need type hinting the compiler. It will infer correctly that `_.get` returns type `A`. In case of composite environment `Has[A] with Has[B]` you must specify what you want.\r\n(replying here to @adamgfraser comment)",
        "createdAt" : "2020-02-22T19:41:36Z",
        "updatedAt" : "2020-02-25T23:41:00Z",
        "lastEditedBy" : "73db70fa-89e1-4c46-9a34-73cfc3db7d43",
        "tags" : [
        ]
      }
    ],
    "commit" : "46c4359450801830050e37ff4644311a5909f3ac",
    "line" : 196,
    "diffHunk" : "@@ -1,1 +194,198 @@  //accessor methods\n  def getUser(userId: UserId): ZIO[UserRepo, DBError, Option[User]] =\n    ZIO.accessM(_.get.getUser(userId))\n\n  def createUser(user: User): ZIO[UserRepo, DBError, Unit] ="
  },
  {
    "id" : "8600cd85-5af5-4a81-8289-e974eaea3b8a",
    "prId" : 2943,
    "prUrl" : "https://github.com/zio/zio/pull/2943#pullrequestreview-362908880",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a181a938-e43c-4171-b4f6-fc5b9385601d",
        "parentId" : null,
        "authorId" : "e51a12a9-b5b7-4e30-a51d-293206825c6f",
        "body" : "Fantastic!",
        "createdAt" : "2020-02-21T21:03:12Z",
        "updatedAt" : "2020-02-25T23:41:00Z",
        "lastEditedBy" : "e51a12a9-b5b7-4e30-a51d-293206825c6f",
        "tags" : [
        ]
      }
    ],
    "commit" : "46c4359450801830050e37ff4644311a5909f3ac",
    "line" : 274,
    "diffHunk" : "@@ -1,1 +272,276 @@\n```scala mdoc:silent\n  val zEnvMakeUser: ZIO[ZEnv, DBError, Unit] = makeUser2.provideCustomLayer(fullLayer)\n```\n"
  },
  {
    "id" : "2986c244-b2d3-42ef-b559-0e1e13bc8fc4",
    "prId" : 2943,
    "prUrl" : "https://github.com/zio/zio/pull/2943#pullrequestreview-363046423",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4a8db791-2459-4168-a775-8197848578bf",
        "parentId" : null,
        "authorId" : "73db70fa-89e1-4c46-9a34-73cfc3db7d43",
        "body" : "I like this example. Simple and to the point :+1:",
        "createdAt" : "2020-02-22T19:43:47Z",
        "updatedAt" : "2020-02-25T23:41:00Z",
        "lastEditedBy" : "73db70fa-89e1-4c46-9a34-73cfc3db7d43",
        "tags" : [
        ]
      }
    ],
    "commit" : "46c4359450801830050e37ff4644311a5909f3ac",
    "line" : 252,
    "diffHunk" : "@@ -1,1 +250,254 @@\n// provide the layer to the program\nmakeUser.provideLayer(fullLayer)\n  \n"
  },
  {
    "id" : "6f99456b-7f6a-4b87-ab1e-206f8b7226eb",
    "prId" : 2943,
    "prUrl" : "https://github.com/zio/zio/pull/2943#pullrequestreview-363802363",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "74565f2e-e62d-48bd-a538-88ee61b4223a",
        "parentId" : null,
        "authorId" : "e51a12a9-b5b7-4e30-a51d-293206825c6f",
        "body" : "Great to use `mdoc` here!",
        "createdAt" : "2020-02-25T00:45:41Z",
        "updatedAt" : "2020-02-25T23:41:00Z",
        "lastEditedBy" : "e51a12a9-b5b7-4e30-a51d-293206825c6f",
        "tags" : [
        ]
      }
    ],
    "commit" : "46c4359450801830050e37ff4644311a5909f3ac",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +16,20 @@\n\n```scala mdoc:invisible\nimport zio.ZIO          \nimport zio.IO"
  },
  {
    "id" : "aa16dfab-92c8-4f76-9a3f-58f078a58906",
    "prId" : 2943,
    "prUrl" : "https://github.com/zio/zio/pull/2943#pullrequestreview-364365366",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f13258b2-bef3-4526-bd76-4f9d3ff9f59d",
        "parentId" : null,
        "authorId" : "e51a12a9-b5b7-4e30-a51d-293206825c6f",
        "body" : "Can we use `mdoc` here. Also should be `Boolean` instead of `boolean` in type signature.",
        "createdAt" : "2020-02-25T00:47:20Z",
        "updatedAt" : "2020-02-25T23:41:00Z",
        "lastEditedBy" : "e51a12a9-b5b7-4e30-a51d-293206825c6f",
        "tags" : [
        ]
      },
      {
        "id" : "79222091-6eed-48c9-97ec-c8b498b28b84",
        "parentId" : "f13258b2-bef3-4526-bd76-4f9d3ff9f59d",
        "authorId" : "8e162472-7b32-4470-9f18-d38260b580a1",
        "body" : "It is difficult to use `mdoc` with `???`. I tested this snipped separately and it compiles ",
        "createdAt" : "2020-02-25T18:55:31Z",
        "updatedAt" : "2020-02-25T23:41:00Z",
        "lastEditedBy" : "8e162472-7b32-4470-9f18-d38260b580a1",
        "tags" : [
        ]
      }
    ],
    "commit" : "46c4359450801830050e37ff4644311a5909f3ac",
    "line" : 53,
    "diffHunk" : "@@ -1,1 +51,55 @@To run the program we must supply a `DBConnection` through `provide`, before feeding it to ZIO runtime.\n\n```scala\nval dbConnection: DBConnection = ???\nval runnable: ZIO[Any, Nothing, Boolean] = created.provide(dbConnection)"
  },
  {
    "id" : "d7cd5b82-3344-4f4c-b66e-377b34e24b68",
    "prId" : 2943,
    "prUrl" : "https://github.com/zio/zio/pull/2943#pullrequestreview-364366255",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "385c79da-30e5-4553-91a7-ceeb0d00a8d1",
        "parentId" : null,
        "authorId" : "e51a12a9-b5b7-4e30-a51d-293206825c6f",
        "body" : "I think some of this should still be available from above?",
        "createdAt" : "2020-02-25T00:52:51Z",
        "updatedAt" : "2020-02-25T23:41:00Z",
        "lastEditedBy" : "e51a12a9-b5b7-4e30-a51d-293206825c6f",
        "tags" : [
        ]
      },
      {
        "id" : "34961cf2-e253-47a0-a32e-ec0b14ee69bf",
        "parentId" : "385c79da-30e5-4553-91a7-ceeb0d00a8d1",
        "authorId" : "8e162472-7b32-4470-9f18-d38260b580a1",
        "body" : "they are defined as simple examples above, but I am actually defining them properly only here",
        "createdAt" : "2020-02-25T18:56:49Z",
        "updatedAt" : "2020-02-25T23:41:00Z",
        "lastEditedBy" : "8e162472-7b32-4470-9f18-d38260b580a1",
        "tags" : [
        ]
      }
    ],
    "commit" : "46c4359450801830050e37ff4644311a5909f3ac",
    "line" : 176,
    "diffHunk" : "@@ -1,1 +174,178 @@Here we define a module to cope with CRUD operations for the `User` domain object. We provide also an in memory implementation of the module\n\n```scala mdoc:silent\ntype UserRepo = Has[UserRepo.Service]\n"
  },
  {
    "id" : "e79cd368-ad1a-4196-bfc4-c7a91a44353f",
    "prId" : 2943,
    "prUrl" : "https://github.com/zio/zio/pull/2943#pullrequestreview-364288248",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b10a1f6c-917f-4125-ada9-4646b30cfe6e",
        "parentId" : null,
        "authorId" : "e51a12a9-b5b7-4e30-a51d-293206825c6f",
        "body" : "Very minor would probably use curly braces after `ZLayer.fromFunction` here.",
        "createdAt" : "2020-02-25T01:11:08Z",
        "updatedAt" : "2020-02-25T23:41:00Z",
        "lastEditedBy" : "e51a12a9-b5b7-4e30-a51d-293206825c6f",
        "tags" : [
        ]
      },
      {
        "id" : "513e44ae-cb2d-4e62-8a9a-40c2a8215da3",
        "parentId" : "b10a1f6c-917f-4125-ada9-4646b30cfe6e",
        "authorId" : "8e162472-7b32-4470-9f18-d38260b580a1",
        "body" : "Done",
        "createdAt" : "2020-02-25T16:49:29Z",
        "updatedAt" : "2020-02-25T23:41:00Z",
        "lastEditedBy" : "8e162472-7b32-4470-9f18-d38260b580a1",
        "tags" : [
        ]
      }
    ],
    "commit" : "46c4359450801830050e37ff4644311a5909f3ac",
    "line" : 216,
    "diffHunk" : "@@ -1,1 +214,218 @@\n  import zio.console.Console\n  val consoleLogger: ZLayer[Console, Nothing, Logging] = ZLayer.fromFunction( console =>\n    new Service {\n      def info(s: String): UIO[Unit]  = console.get.putStrLn(s\"info - $s\")"
  },
  {
    "id" : "31faed78-54a0-4a06-a863-058be4cc8c45",
    "prId" : 2943,
    "prUrl" : "https://github.com/zio/zio/pull/2943#pullrequestreview-364685234",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bb043224-380b-467c-bfda-faf0fb6af0da",
        "parentId" : null,
        "authorId" : "73db70fa-89e1-4c46-9a34-73cfc3db7d43",
        "body" : "Just curious: is there a reason not to use wildcard import `zio._` or inline one `zio.{Has, IO, UIO, ZEnv, ZIO, ZLayer}` ? Does `mdoc` support this?",
        "createdAt" : "2020-02-26T00:52:21Z",
        "updatedAt" : "2020-02-26T01:00:31Z",
        "lastEditedBy" : "73db70fa-89e1-4c46-9a34-73cfc3db7d43",
        "tags" : [
        ]
      },
      {
        "id" : "dd236024-02cb-4b33-b80f-ba37d3d53b11",
        "parentId" : "bb043224-380b-467c-bfda-faf0fb6af0da",
        "authorId" : "8e162472-7b32-4470-9f18-d38260b580a1",
        "body" : "yes it does, I just wanted to be explicit about what I needed of ZIO. Could have equally grouped things in `{...}`",
        "createdAt" : "2020-02-26T08:03:31Z",
        "updatedAt" : "2020-02-26T08:03:32Z",
        "lastEditedBy" : "8e162472-7b32-4470-9f18-d38260b580a1",
        "tags" : [
        ]
      }
    ],
    "commit" : "46c4359450801830050e37ff4644311a5909f3ac",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +22,26 @@import zio.Has\nimport zio.ZEnv\nimport zio.ZLayer\nimport zio.clock.Clock\nimport zio.console.Console"
  },
  {
    "id" : "50d02b55-0544-4622-bf3c-0b868349b2b3",
    "prId" : 2943,
    "prUrl" : "https://github.com/zio/zio/pull/2943#pullrequestreview-364792757",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9a25c462-4bc2-4535-9b0d-0aebc1957642",
        "parentId" : null,
        "authorId" : "73db70fa-89e1-4c46-9a34-73cfc3db7d43",
        "body" : "The list has all points number 1. Was it supposed to be 1, 2, 3, 4? Or perhaps a bulleted list?",
        "createdAt" : "2020-02-26T00:55:23Z",
        "updatedAt" : "2020-02-26T01:00:31Z",
        "lastEditedBy" : "73db70fa-89e1-4c46-9a34-73cfc3db7d43",
        "tags" : [
        ]
      },
      {
        "id" : "49f156bf-a768-4a6a-b676-f0221323a63d",
        "parentId" : "9a25c462-4bc2-4535-9b0d-0aebc1957642",
        "authorId" : "8e162472-7b32-4470-9f18-d38260b580a1",
        "body" : "That's how markdown works, you can put any number and it will make it progressive, so I just put 1 everywhere",
        "createdAt" : "2020-02-26T08:02:49Z",
        "updatedAt" : "2020-02-26T08:02:49Z",
        "lastEditedBy" : "8e162472-7b32-4470-9f18-d38260b580a1",
        "tags" : [
        ]
      },
      {
        "id" : "3b917edd-f781-40cd-9bf4-f3a940bdc4a2",
        "parentId" : "9a25c462-4bc2-4535-9b0d-0aebc1957642",
        "authorId" : "73db70fa-89e1-4c46-9a34-73cfc3db7d43",
        "body" : "Ah, I see. Everyday learning :)",
        "createdAt" : "2020-02-26T10:41:10Z",
        "updatedAt" : "2020-02-26T10:41:10Z",
        "lastEditedBy" : "73db70fa-89e1-4c46-9a34-73cfc3db7d43",
        "tags" : [
        ]
      }
    ],
    "commit" : "46c4359450801830050e37ff4644311a5909f3ac",
    "line" : 78,
    "diffHunk" : "@@ -1,1 +76,80 @@Let's build a module for user data access, following these simple steps:\n\n1. Define an object that gives the name to the module, this can be (not necessarily) a package object\n1. Within the module object define a `trait Service` that defines the interface our module is exposing, in our case 2 methods to retrieve and create a user\n1. Within the module object define the different implementations of `ModuleName` through `ZLayer` (see below for details on `ZLayer`)"
  }
]