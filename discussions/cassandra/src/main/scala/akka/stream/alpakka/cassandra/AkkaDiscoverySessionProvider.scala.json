[
  {
    "id" : "8e7b7d03-e20c-481a-9474-23e11034c20e",
    "prId" : 2182,
    "prUrl" : "https://github.com/akka/alpakka/pull/2182#pullrequestreview-372689355",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e6a54c58-66ea-4ef1-995c-bb5ea3b7efc4",
        "parentId" : null,
        "authorId" : "daac5cb5-ce57-4037-a06c-7adf6a3f10e6",
        "body" : "This threw me through a bit of a loop.\r\n\r\n```suggestion\r\n        basic.contact-points = [${contactPoints.mkString(start = \"\\\"\", sep = \"\\\", \\\"\", end = \"\\\"\")}]\r\n```",
        "createdAt" : "2020-03-10T19:31:17Z",
        "updatedAt" : "2020-03-11T06:42:22Z",
        "lastEditedBy" : "daac5cb5-ce57-4037-a06c-7adf6a3f10e6",
        "tags" : [
        ]
      },
      {
        "id" : "225b1117-e669-4f1c-a2c1-373b8079862d",
        "parentId" : "e6a54c58-66ea-4ef1-995c-bb5ea3b7efc4",
        "authorId" : "9500ec63-4ee5-4a4b-820c-121a3523fbda",
        "body" : "What kind of loop? I find the compact notation better.",
        "createdAt" : "2020-03-11T06:38:59Z",
        "updatedAt" : "2020-03-11T06:42:22Z",
        "lastEditedBy" : "9500ec63-4ee5-4a4b-820c-121a3523fbda",
        "tags" : [
        ]
      },
      {
        "id" : "02d1455e-6e41-4fc3-b41c-effb53d10a55",
        "parentId" : "e6a54c58-66ea-4ef1-995c-bb5ea3b7efc4",
        "authorId" : "daac5cb5-ce57-4037-a06c-7adf6a3f10e6",
        "body" : "A cognitive loop ;)  I couldn't figure out if I was looking at one string or 3 until I made the params explicit.",
        "createdAt" : "2020-03-11T11:51:09Z",
        "updatedAt" : "2020-03-11T11:51:10Z",
        "lastEditedBy" : "daac5cb5-ce57-4037-a06c-7adf6a3f10e6",
        "tags" : [
        ]
      }
    ],
    "commit" : "d99c529d2f99b0bbcfa423560c5df7712299bcab",
    "line" : 62,
    "diffHunk" : "@@ -1,1 +60,64 @@    readNodes(config)(system, ec).flatMap { contactPoints =>\n      val driverConfigWithContactPoints = ConfigFactory.parseString(s\"\"\"\n        basic.contact-points = [${contactPoints.mkString(\"\\\"\", \"\\\", \\\"\", \"\\\"\")}]\n        \"\"\").withFallback(CqlSessionProvider.driverConfig(system, config))\n      val driverConfigLoader = DriverConfigLoaderFromConfig.fromConfig(driverConfigWithContactPoints)"
  }
]