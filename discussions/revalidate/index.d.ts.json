[
  {
    "id" : "2159f843-1d7a-425a-bfe6-e5f15b719740",
    "prId" : 14114,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/14114#pullrequestreview-23231391",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a3bb36cb-c286-43dd-a2f6-a4beef6c4d08",
        "parentId" : null,
        "authorId" : "a560992d-0bf6-4fda-9b6d-8efcb6f39f3b",
        "body" : "`ConfigureValidator | any` is the same as saying `any`, it does not provide any more information",
        "createdAt" : "2017-02-21T22:45:45Z",
        "updatedAt" : "2017-02-22T16:55:38Z",
        "lastEditedBy" : "a560992d-0bf6-4fda-9b6d-8efcb6f39f3b",
        "tags" : [
        ]
      },
      {
        "id" : "6fcabf39-677b-4e03-906a-b6717a938a23",
        "parentId" : "a3bb36cb-c286-43dd-a2f6-a4beef6c4d08",
        "authorId" : "dbf8d952-5491-41e6-ad07-c6fb8442f5ca",
        "body" : ":+1:  \r\nBetter to use void.  ",
        "createdAt" : "2017-02-22T14:38:11Z",
        "updatedAt" : "2017-02-22T16:55:38Z",
        "lastEditedBy" : "dbf8d952-5491-41e6-ad07-c6fb8442f5ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "52beaa4290ea19c1f8e064ebad40e08951c19667",
    "line" : 59,
    "diffHunk" : "@@ -1,1 +57,61 @@export function hasLengthLessThan(max: number): ConfigurableValidator;\n\nexport function isAlphabetic(config?: string | Config, value?: any, allValues?: any): ConfiguredValidator | any;\nexport function isAlphaNumeric(config?: string | Config, value?: any, allValues?: any): ConfiguredValidator | any;\nexport function isNumeric(config?: string | Config, value?: any, allValues?: any): ConfiguredValidator | any;"
  },
  {
    "id" : "8918e914-2629-490e-86b2-91e8d4819a48",
    "prId" : 14114,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/14114#pullrequestreview-23092560",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6d422b3a-eb59-436c-a899-4e8fdd4105da",
        "parentId" : null,
        "authorId" : "a560992d-0bf6-4fda-9b6d-8efcb6f39f3b",
        "body" : "`Validator | any` = `any`",
        "createdAt" : "2017-02-21T22:46:14Z",
        "updatedAt" : "2017-02-22T16:55:38Z",
        "lastEditedBy" : "a560992d-0bf6-4fda-9b6d-8efcb6f39f3b",
        "tags" : [
        ]
      }
    ],
    "commit" : "52beaa4290ea19c1f8e064ebad40e08951c19667",
    "line" : 52,
    "diffHunk" : "@@ -1,1 +50,54 @@\nexport function createValidator(curriedDefinition: ValidatorImpl, defaultMessageCreator?: MessageCreator): ConfigurableValidator;\nexport function composeValidators(firstValidator: Validator | any, ...validators: Validator[]): ComposedCurryableValidator;\nexport function combineValidators(validators: any, options?: CombineValidatorsOptions): ConfiguredCombinedValidator;\n"
  },
  {
    "id" : "eca2d96e-c470-4d25-8754-9ecdccd3bbb1",
    "prId" : 14114,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/14114#pullrequestreview-23327005",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dc4f65d8-59d0-4dd8-a049-09561d6cd75e",
        "parentId" : null,
        "authorId" : "dbf8d952-5491-41e6-ad07-c6fb8442f5ca",
        "body" : "According to the modules' [source code](https://github.com/jfairbank/revalidate/blob/master/src/createValidator.js#L64) and [docs](http://revalidate.jeremyfairbank.com/usage/createValidator.html) `createValidator` which \r\nreturns a `function` then has to returns a `string` or `undefined`. \r\nIf we'll call on that return value any methods it will fail at the runtime but silently pass at compilation.\r\nTo avoid this you have to use a `void` or `string` types instead of `any` one respectively.\r\nYou have to rewrite all these @flow types cause they don't fit well into the program API.\r\nI.e. the `ValidatorImpl` type shares the same function that the `ConfiguredCombinedValidator` does so they could be easily combined into a simpler form.",
        "createdAt" : "2017-02-22T20:42:03Z",
        "updatedAt" : "2017-03-11T10:47:20Z",
        "lastEditedBy" : "dbf8d952-5491-41e6-ad07-c6fb8442f5ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "52beaa4290ea19c1f8e064ebad40e08951c19667",
    "line" : 51,
    "diffHunk" : "@@ -1,1 +49,53 @@export type Validator = ConfiguredValidator & UnconfiguredValidator;\n\nexport function createValidator(curriedDefinition: ValidatorImpl, defaultMessageCreator?: MessageCreator): ConfigurableValidator;\nexport function composeValidators(firstValidator: Validator | any, ...validators: Validator[]): ComposedCurryableValidator;\nexport function combineValidators(validators: any, options?: CombineValidatorsOptions): ConfiguredCombinedValidator;"
  },
  {
    "id" : "4629e0e1-e693-40e3-a1a8-1dd25d0ada4e",
    "prId" : 14114,
    "prUrl" : "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/14114#pullrequestreview-23327005",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b784b39a-0f9e-4e3b-a45c-1db2348d4375",
        "parentId" : null,
        "authorId" : "dbf8d952-5491-41e6-ad07-c6fb8442f5ca",
        "body" : "If I understand correctly ``(value: any, allValues?: any)`` the ``value`` and ``allValues`` here are passed by the program and not by user so in this way it seems that the optional arguments here are senseless.",
        "createdAt" : "2017-02-22T20:45:20Z",
        "updatedAt" : "2017-03-11T10:49:07Z",
        "lastEditedBy" : "dbf8d952-5491-41e6-ad07-c6fb8442f5ca",
        "tags" : [
        ]
      }
    ],
    "commit" : "52beaa4290ea19c1f8e064ebad40e08951c19667",
    "line" : 37,
    "diffHunk" : "@@ -1,1 +35,39 @@\nexport type MessageCreator = ((field: any) => any) | string;\nexport type ValidatorImpl = (message: any) => (value: any, allValues?: any) => any;\nexport type Comparer = (a: any, b: any) => boolean;\n"
  }
]