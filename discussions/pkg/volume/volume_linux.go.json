[
  {
    "id" : "c5646162-39c5-4274-87e0-fe30cc85cf46",
    "prId" : 99050,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/99050#pullrequestreview-591807690",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ae113370-ccc5-4cbf-aea4-ed42a50c8fee",
        "parentId" : null,
        "authorId" : "34f61776-88da-4b26-aa20-3c4f92530d05",
        "body" : "Maybe less important but do we also want to pass in migrated info here for consistency? How hard is it to get the migrated field here?",
        "createdAt" : "2021-02-17T02:50:08Z",
        "updatedAt" : "2021-02-17T02:50:12Z",
        "lastEditedBy" : "34f61776-88da-4b26-aa20-3c4f92530d05",
        "tags" : [
        ]
      },
      {
        "id" : "42f6d6c1-bbb3-4c06-9b12-f43275fe36a5",
        "parentId" : "ae113370-ccc5-4cbf-aea4-ed42a50c8fee",
        "authorId" : "d10fef96-5a18-44e7-b23e-735de7561af7",
        "body" : "Hmm, I might be wrong but this seems not to be a migrated operation? That being said, there is no difference in in-tree/CSI for this operation. So by default it will be migrated:false",
        "createdAt" : "2021-02-17T03:21:03Z",
        "updatedAt" : "2021-02-17T03:21:03Z",
        "lastEditedBy" : "d10fef96-5a18-44e7-b23e-735de7561af7",
        "tags" : [
        ]
      }
    ],
    "commit" : "9ec820a91af7e0857d7b613855eb64588cf7885d",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +80,84 @@\t\tcompleteFunc(types.CompleteFuncParam{\n\t\t\tErr: &err,\n\t\t})\n\t}\n\treturn err"
  },
  {
    "id" : "9581a798-5c9a-4055-8932-32355f35f2ce",
    "prId" : 92878,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/92878#pullrequestreview-445555605",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "824e48bb-acc2-4e16-aef6-a9b1151fe71f",
        "parentId" : null,
        "authorId" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "body" : "nit: since you are making change in this file, can you please also fix this spelling issue:\r\n\r\n```suggestion\r\n\t// This code exists for legacy purposes, so as old behavior is entirely preserved when feature gate is disabled\r\n```",
        "createdAt" : "2020-07-07T22:02:27Z",
        "updatedAt" : "2020-07-21T01:47:19Z",
        "lastEditedBy" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "tags" : [
        ]
      },
      {
        "id" : "f76b30c7-0203-4664-8a9a-f43ac21d9bc3",
        "parentId" : "824e48bb-acc2-4e16-aef6-a9b1151fe71f",
        "authorId" : "21b457d2-6f88-4a9f-8d5a-debafbcb6cfe",
        "body" : "I'm not sure that it worth to be fixed BTW: https://ell.stackexchange.com/questions/202548/what-is-the-difference-between-behavior-and-behaviour",
        "createdAt" : "2020-07-08T14:39:11Z",
        "updatedAt" : "2020-07-21T01:47:19Z",
        "lastEditedBy" : "21b457d2-6f88-4a9f-8d5a-debafbcb6cfe",
        "tags" : [
        ]
      },
      {
        "id" : "d570767b-42af-4f57-b7ac-9e127951dca5",
        "parentId" : "824e48bb-acc2-4e16-aef6-a9b1151fe71f",
        "authorId" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "body" : "thanks for the info. Recommended based on VSCode spell checker =) I guess it uses American English than",
        "createdAt" : "2020-07-08T16:58:25Z",
        "updatedAt" : "2020-07-21T01:47:19Z",
        "lastEditedBy" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "tags" : [
        ]
      },
      {
        "id" : "f905b7b9-59e8-4956-86a8-1f45b92fea37",
        "parentId" : "824e48bb-acc2-4e16-aef6-a9b1151fe71f",
        "authorId" : "8aa418db-2a00-402b-960b-e2a9f5656c23",
        "body" : "Ok, marking this as resolved. ",
        "createdAt" : "2020-07-09T12:12:09Z",
        "updatedAt" : "2020-07-21T01:47:19Z",
        "lastEditedBy" : "8aa418db-2a00-402b-960b-e2a9f5656c23",
        "tags" : [
        ]
      }
    ],
    "commit" : "5ebb1c3be231c6c653af33b84a3084662f8f0743",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +53,57 @@\tdefer timer.Stop()\n\n\t// This code exists for legacy purposes, so as old behaviour is entirely preserved when feature gate is disabled\n\t// TODO: remove this when ConfigurableFSGroupPolicy turns GA.\n\tif !fsGroupPolicyEnabled {"
  },
  {
    "id" : "0286f046-ffde-4328-baea-ffa821cf9fa5",
    "prId" : 92878,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/92878#pullrequestreview-451697261",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a1e061e5-18ad-4eca-8f0f-8ed19baa1779",
        "parentId" : null,
        "authorId" : "27315fad-771e-420e-af79-534db73fcb49",
        "body" : "I stand corrected. defer should work as `walkDeep` is executed before returning. meaning defer would only happen after. this lgtm now.",
        "createdAt" : "2020-07-20T15:03:29Z",
        "updatedAt" : "2020-07-21T01:47:19Z",
        "lastEditedBy" : "27315fad-771e-420e-af79-534db73fcb49",
        "tags" : [
        ]
      },
      {
        "id" : "f3cf8589-46c7-411d-8096-0f1e8447d832",
        "parentId" : "a1e061e5-18ad-4eca-8f0f-8ed19baa1779",
        "authorId" : "8aa418db-2a00-402b-960b-e2a9f5656c23",
        "body" : "Thanks! :)",
        "createdAt" : "2020-07-20T15:07:16Z",
        "updatedAt" : "2020-07-21T01:47:19Z",
        "lastEditedBy" : "8aa418db-2a00-402b-960b-e2a9f5656c23",
        "tags" : [
        ]
      }
    ],
    "commit" : "5ebb1c3be231c6c653af33b84a3084662f8f0743",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +51,55 @@\t\tklog.Warningf(\"Setting volume ownership for %s and fsGroup set. If the volume has a lot of files then setting volume ownership could be slow, see https://github.com/kubernetes/kubernetes/issues/69699\", mounter.GetPath())\n\t})\n\tdefer timer.Stop()\n\n\t// This code exists for legacy purposes, so as old behaviour is entirely preserved when feature gate is disabled"
  },
  {
    "id" : "ae213287-d0c7-4b8a-9705-392e0833e567",
    "prId" : 88488,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/88488#pullrequestreview-367300581",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "25f469af-ade8-4b48-90a9-0ba1864b1f89",
        "parentId" : null,
        "authorId" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "body" : "Just to make sure about the logic here, could you give some examples ?",
        "createdAt" : "2020-02-28T00:02:24Z",
        "updatedAt" : "2020-03-05T13:01:00Z",
        "lastEditedBy" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "tags" : [
        ]
      },
      {
        "id" : "563b302e-b05f-44a8-b272-fd28d8c5ae6f",
        "parentId" : "25f469af-ade8-4b48-90a9-0ba1864b1f89",
        "authorId" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "body" : "added an example.",
        "createdAt" : "2020-02-28T20:04:27Z",
        "updatedAt" : "2020-03-05T13:01:00Z",
        "lastEditedBy" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "tags" : [
        ]
      },
      {
        "id" : "4af57765-e9da-44bc-9647-363d61154732",
        "parentId" : "25f469af-ade8-4b48-90a9-0ba1864b1f89",
        "authorId" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "body" : "just want to double check this setgid bit must be set for volume to be accessed by user?",
        "createdAt" : "2020-02-28T21:30:10Z",
        "updatedAt" : "2020-03-05T13:01:00Z",
        "lastEditedBy" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "tags" : [
        ]
      },
      {
        "id" : "58971f7f-a08c-4214-a4ff-23283e6798f7",
        "parentId" : "25f469af-ade8-4b48-90a9-0ba1864b1f89",
        "authorId" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "body" : "Yeah the purpose of setting setgid bit on root directory is, if user is using volume in more than one container(with may be different user_id) then all files/directories created inherit group permissions",
        "createdAt" : "2020-02-28T21:39:31Z",
        "updatedAt" : "2020-03-05T13:01:00Z",
        "lastEditedBy" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "tags" : [
        ]
      },
      {
        "id" : "5e556daa-8a08-4c73-b205-dd152d7fdc22",
        "parentId" : "25f469af-ade8-4b48-90a9-0ba1864b1f89",
        "authorId" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "body" : "Marking this as resolved. @jingxu97 let me know if there is anything else outstanding on this one.",
        "createdAt" : "2020-03-02T15:43:08Z",
        "updatedAt" : "2020-03-05T13:01:00Z",
        "lastEditedBy" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "tags" : [
        ]
      }
    ],
    "commit" : "b13295968757aad1d6908d38907e7ec4ebca6a21",
    "line" : 177,
    "diffHunk" : "@@ -1,1 +169,173 @@\t//     unixPerms: 770, filePerms: 750 : 770&750 = 750 (perms on directory is NOT a superset)\n\t// We also need to check if setgid bits are set in permissions of the directory.\n\tif (unixPerms&filePerm != unixPerms) || (fsInfo.Mode()&os.ModeSetgid == 0) {\n\t\tklog.V(4).Infof(\"performing recursive ownership change on %s because of mismatching mode\", rootDir)\n\t\treturn true"
  },
  {
    "id" : "01036625-c6e6-4fe4-b430-6c3d462352d6",
    "prId" : 88488,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/88488#pullrequestreview-366114561",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "17dcff25-3e0a-427e-9481-c202be097e80",
        "parentId" : null,
        "authorId" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "body" : "which part sorting the files/dirs in previous code?",
        "createdAt" : "2020-02-28T00:09:17Z",
        "updatedAt" : "2020-03-05T13:01:00Z",
        "lastEditedBy" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "tags" : [
        ]
      },
      {
        "id" : "404fc389-7bb6-41dd-9e03-5fef21633257",
        "parentId" : "17dcff25-3e0a-427e-9481-c202be097e80",
        "authorId" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "body" : "`filepath.Walk` internally uses `filepath.readDirNames` which does sorting before returning results.",
        "createdAt" : "2020-02-28T01:40:38Z",
        "updatedAt" : "2020-03-05T13:01:00Z",
        "lastEditedBy" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "tags" : [
        ]
      }
    ],
    "commit" : "b13295968757aad1d6908d38907e7ec4ebca6a21",
    "line" : 203,
    "diffHunk" : "@@ -1,1 +195,199 @@// walkDeep can be used to traverse directories and has two minor differences\n// from filepath.Walk:\n//   - List of files/dirs is not sorted for performance reasons\n//   - callback walkFunc is invoked on root directory after visiting children dirs and files\nfunc walkDeep(root string, walkFunc filepath.WalkFunc) error {"
  },
  {
    "id" : "fd273c5f-098d-4e0a-ab71-bd3c2aa8f139",
    "prId" : 88488,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/88488#pullrequestreview-368869326",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "afb3603c-0c40-4950-a5dc-dbb192bcd706",
        "parentId" : null,
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "In what cases would we get an error but still want to invoke the function?",
        "createdAt" : "2020-03-03T21:20:10Z",
        "updatedAt" : "2020-03-05T13:01:00Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "2a13b3a5-a408-4734-ba01-f83057d49245",
        "parentId" : "afb3603c-0c40-4950-a5dc-dbb192bcd706",
        "authorId" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "body" : "you mean still invoke the entire `SetVolumeOwnership` function? We never continued changing ownership if `Lstat` failed. This code simply preserves old behaviour. `filepath.Walk` on the other hand allows user to specify `SkipError`, but we don't care about that because in our case we do not skip on error. ",
        "createdAt" : "2020-03-03T21:52:01Z",
        "updatedAt" : "2020-03-05T13:01:00Z",
        "lastEditedBy" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "tags" : [
        ]
      },
      {
        "id" : "ae717fc4-787b-490e-8fdf-a5d3ed2cc183",
        "parentId" : "afb3603c-0c40-4950-a5dc-dbb192bcd706",
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "I mean, when would we still want to invoke `walkFunc` on error?",
        "createdAt" : "2020-03-03T23:08:56Z",
        "updatedAt" : "2020-03-05T13:01:00Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "eb966bc7-7958-4665-a03e-c99f4699f46d",
        "parentId" : "afb3603c-0c40-4950-a5dc-dbb192bcd706",
        "authorId" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "body" : "yeah we actually return error from supplied callback function - https://github.com/kubernetes/kubernetes/pull/88488/files#diff-a919838d2c31347e3b15988a848f5036R63 and hence even though we do call `walkFunc`, it just ends up returning an error.\r\n\r\nAgain this is for keeping in-sync with `filepath.Walk` which does the same. \r\n\r\n",
        "createdAt" : "2020-03-04T15:22:08Z",
        "updatedAt" : "2020-03-05T13:01:00Z",
        "lastEditedBy" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "tags" : [
        ]
      }
    ],
    "commit" : "b13295968757aad1d6908d38907e7ec4ebca6a21",
    "line" : 207,
    "diffHunk" : "@@ -1,1 +199,203 @@func walkDeep(root string, walkFunc filepath.WalkFunc) error {\n\tinfo, err := os.Lstat(root)\n\tif err != nil {\n\t\treturn walkFunc(root, nil, err)\n\t}"
  },
  {
    "id" : "f26258ff-f225-467a-a736-adff9e6aab6a",
    "prId" : 88488,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/88488#pullrequestreview-368350900",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "47e03324-4e13-405a-910e-fde22717e319",
        "parentId" : null,
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "Do we have a sense of what the maximum recursion depth is?",
        "createdAt" : "2020-03-03T21:29:19Z",
        "updatedAt" : "2020-03-05T13:01:00Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "c38a6a39-d22c-4886-8d42-bc5c04a8c97c",
        "parentId" : "47e03324-4e13-405a-910e-fde22717e319",
        "authorId" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "body" : "I would say we do not have exact sense of recursion depth. An ext3 filesystem can have 32000 subdirs but ext4 fstype has unlimited. Still one may run out of inodes before they run out of subdir/files creation limits.\r\n\r\nBut this is exactly same as `filepath.Walk`(which is being used by default) implementation except `walkFunc` on supplied `path` is being called last.  I think it should work same as existing code.",
        "createdAt" : "2020-03-03T21:49:54Z",
        "updatedAt" : "2020-03-05T13:01:00Z",
        "lastEditedBy" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "tags" : [
        ]
      }
    ],
    "commit" : "b13295968757aad1d6908d38907e7ec4ebca6a21",
    "line" : 230,
    "diffHunk" : "@@ -1,1 +221,225 @@\t\t\t}\n\t\t} else {\n\t\t\terr = walk(filename, fileInfo, walkFunc)\n\t\t\tif err != nil {\n\t\t\t\treturn err"
  },
  {
    "id" : "df9eab46-6cf0-4822-8c19-b6318792269e",
    "prId" : 73533,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/73533#pullrequestreview-198754116",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "423d6269-54e2-484f-9fb4-8a79b9f8a331",
        "parentId" : null,
        "authorId" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "body" : "Mask is a misnomer here, or there's a bug. If I'm reading it correctly, these permissions are strictly additive with whatever permissions are already on the files?",
        "createdAt" : "2019-01-30T20:41:31Z",
        "updatedAt" : "2019-01-30T20:45:24Z",
        "lastEditedBy" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "tags" : [
        ]
      },
      {
        "id" : "dba89af4-3bdb-4a98-9279-31011ca024f3",
        "parentId" : "423d6269-54e2-484f-9fb4-8a79b9f8a331",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "it's a \"mask\" in that we think of perms as a bitmask not as an AND mask",
        "createdAt" : "2019-01-31T00:56:38Z",
        "updatedAt" : "2019-01-31T00:56:39Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "c05de91b-e621-43a4-b6fd-af887696ed24",
        "parentId" : "423d6269-54e2-484f-9fb4-8a79b9f8a331",
        "authorId" : "fcb5e792-d7a6-4a70-9469-ab0781c704b7",
        "body" : "I just went with the existing names. I can add another commit to change the names, if you have an idea for something more fitting? ",
        "createdAt" : "2019-01-31T09:29:45Z",
        "updatedAt" : "2019-01-31T09:29:46Z",
        "lastEditedBy" : "fcb5e792-d7a6-4a70-9469-ab0781c704b7",
        "tags" : [
        ]
      },
      {
        "id" : "ec06b54b-5ad3-4547-a9aa-47efc9f45354",
        "parentId" : "423d6269-54e2-484f-9fb4-8a79b9f8a331",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "I think you're fine",
        "createdAt" : "2019-01-31T18:48:08Z",
        "updatedAt" : "2019-01-31T18:48:08Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "7a9f21bbb828a0f58e6c51234c1ba0e16efb6727",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +31,35 @@\trwMask   = os.FileMode(0660)\n\troMask   = os.FileMode(0440)\n\texecMask = os.FileMode(0110)\n)\n"
  },
  {
    "id" : "31b2a529-98cc-4bbf-b28d-d0fccd8fe5cb",
    "prId" : 37009,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/37009#pullrequestreview-10587142",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "437b2915-de36-4315-8895-d1e1fa9a6bd1",
        "parentId" : null,
        "authorId" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "body" : "underlying",
        "createdAt" : "2016-11-29T17:35:09Z",
        "updatedAt" : "2016-12-06T20:50:44Z",
        "lastEditedBy" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "tags" : [
        ]
      },
      {
        "id" : "6324ec84-ca99-45af-acab-94f5bb9c2db5",
        "parentId" : "437b2915-de36-4315-8895-d1e1fa9a6bd1",
        "authorId" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "body" : "weird rendering error, disregard",
        "createdAt" : "2016-11-29T17:35:28Z",
        "updatedAt" : "2016-12-06T20:50:44Z",
        "lastEditedBy" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "tags" : [
        ]
      }
    ],
    "commit" : "51ae5a34b999c6232aaa71733ea95f718ab9b92c",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +52,56 @@\t\t}\n\n\t\t// chown and chmod pass through to the underlying file for symlinks.\n\t\t// Symlinks have a mode of 777 but this really doesn't mean anything.\n\t\t// The permissions of the underlying file are what matter."
  }
]