[
  {
    "id" : "a58bbf13-6a5d-4bd6-90fa-d2449eeb8336",
    "prId" : 51113,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/51113#pullrequestreview-57911664",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fdf30548-85d0-4e57-8db9-e202d992071b",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "Ideally the plugin would not have to pass his own name, but each plugin would get a private \"host\" struct with the name and things baked in.",
        "createdAt" : "2017-08-22T21:02:36Z",
        "updatedAt" : "2017-08-22T21:02:36Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "3eb9b9dfeef8f574171f89186a9fa192abc2f81d",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +103,107 @@\t}\n\n\texec := plugin.host.GetExec(plugin.GetPluginName())\n\tif out, err := exec.Run(\"ls\", \"/sbin/mount.quobyte\"); err == nil {\n\t\tglog.V(4).Infof(\"quobyte: can support: %s\", string(out))"
  },
  {
    "id" : "4a944148-dfad-46b1-8a69-692f67669fd6",
    "prId" : 38547,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/38547#pullrequestreview-12341724",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "86b3bc34-b042-4e99-bbd0-4b83a93934ba",
        "parentId" : null,
        "authorId" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "body" : "Same as HostPath perhaps.",
        "createdAt" : "2016-12-10T04:20:27Z",
        "updatedAt" : "2016-12-20T00:41:04Z",
        "lastEditedBy" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "tags" : [
        ]
      }
    ],
    "commit" : "c14d47dffe23c1a2d8042bd9e7b7d541ceb17afa",
    "line" : null,
    "diffHunk" : "@@ -1,1 +289,293 @@// We don't need to unmount on the host because only one mount exists\nfunc (unmounter *quobyteUnmounter) TearDownAt(dir string) error {\n\treturn nil\n}\n"
  },
  {
    "id" : "e19229a5-1dd4-491a-8404-3fd984b6a07a",
    "prId" : 24977,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "eaaab776-594f-4cce-a626-806f4f40b09e",
        "parentId" : null,
        "authorId" : "2b1215ee-94d4-4f04-a67a-accf4895711a",
        "body" : "We check if Quobyte is already mounted if this is true we don't need to check for the binary (which allows us to use the plugin also on CoreOS, Rancher etc). AFAIK there is no containerized mount in Kubernetes?\n",
        "createdAt" : "2016-08-01T14:33:07Z",
        "updatedAt" : "2016-08-18T15:14:11Z",
        "lastEditedBy" : "2b1215ee-94d4-4f04-a67a-accf4895711a",
        "tags" : [
        ]
      },
      {
        "id" : "66156f8f-1b55-42c0-ad0c-f6a776ceb1e9",
        "parentId" : "eaaab776-594f-4cce-a626-806f4f40b09e",
        "authorId" : "a7f673a6-4b23-4df6-aa10-f123fa9dcd5f",
        "body" : "containerized mount is not considered at this time. \n",
        "createdAt" : "2016-08-01T15:11:47Z",
        "updatedAt" : "2016-08-18T15:14:11Z",
        "lastEditedBy" : "a7f673a6-4b23-4df6-aa10-f123fa9dcd5f",
        "tags" : [
        ]
      }
    ],
    "commit" : "eed42380f98439c0776431bc1bd949f530099c62",
    "line" : 86,
    "diffHunk" : "@@ -1,1 +84,88 @@\t} else {\n\t\tglog.V(4).Infof(\"quobyte: Error: %v\", err)\n\t}\n\n\tif out, err := exec.New().Command(\"ls\", \"/sbin/mount.quobyte\").CombinedOutput(); err == nil {"
  },
  {
    "id" : "253f32be-75b3-4bf6-ab28-f16c07cd55ae",
    "prId" : 24977,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "48137f34-ec31-45e3-8d4c-7bce9708182c",
        "parentId" : null,
        "authorId" : "2b1215ee-94d4-4f04-a67a-accf4895711a",
        "body" : "We mount all Quobyte Volumes inside the Quobyte Plugin dir and if the directory is already mounted everything is fine else we mount the Quobyte Volumes.\n",
        "createdAt" : "2016-08-01T14:34:13Z",
        "updatedAt" : "2016-08-18T15:14:11Z",
        "lastEditedBy" : "2b1215ee-94d4-4f04-a67a-accf4895711a",
        "tags" : [
        ]
      }
    ],
    "commit" : "eed42380f98439c0776431bc1bd949f530099c62",
    "line" : 210,
    "diffHunk" : "@@ -1,1 +208,212 @@\t} else if mounted {\n\t\treturn nil\n\t}\n\n\tos.MkdirAll(dir, 0750)"
  },
  {
    "id" : "db2b9cfd-f18c-4510-98a2-8f54e937a5c6",
    "prId" : 24977,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "694ded85-c891-4fe6-bfb1-6991c28f0c32",
        "parentId" : null,
        "authorId" : "2b1215ee-94d4-4f04-a67a-accf4895711a",
        "body" : "We return the Path with the following syntax PluginDir/User#Group@Volume \n- Group is empty if not set\n- User is `root` if not set\n",
        "createdAt" : "2016-08-01T14:36:46Z",
        "updatedAt" : "2016-08-18T15:14:11Z",
        "lastEditedBy" : "2b1215ee-94d4-4f04-a67a-accf4895711a",
        "tags" : [
        ]
      }
    ],
    "commit" : "eed42380f98439c0776431bc1bd949f530099c62",
    "line" : null,
    "diffHunk" : "@@ -1,1 +243,247 @@\n\treturn path.Join(pluginDir, fmt.Sprintf(\"%s@%s\", user, quobyteVolume.volume))\n}\n\ntype quobyteUnmounter struct {"
  },
  {
    "id" : "b01ea987-f319-4edd-8723-3c3d005b0a0a",
    "prId" : 24977,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0dae5437-4878-4278-935a-3f545a670490",
        "parentId" : null,
        "authorId" : "2b1215ee-94d4-4f04-a67a-accf4895711a",
        "body" : "We will never unmount all Quobyte Volumes from the host because this would require some kind of host specific counter which would be more complex to handle than just leave one mount point on the host.\n",
        "createdAt" : "2016-08-01T14:38:11Z",
        "updatedAt" : "2016-08-18T15:14:11Z",
        "lastEditedBy" : "2b1215ee-94d4-4f04-a67a-accf4895711a",
        "tags" : [
        ]
      }
    ],
    "commit" : "eed42380f98439c0776431bc1bd949f530099c62",
    "line" : 259,
    "diffHunk" : "@@ -1,1 +257,261 @@// We don't need to unmount on the host because only one mount exists\nfunc (unmounter *quobyteUnmounter) TearDownAt(dir string) error {\n\treturn nil\n}"
  }
]