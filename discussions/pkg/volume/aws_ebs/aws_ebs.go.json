[
  {
    "id" : "1a7b5c87-f9ea-4d98-bd2e-3af63eb005d2",
    "prId" : 64709,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/64709#pullrequestreview-125765548",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c72a8d5d-c0c1-4fda-a857-c28e3e83851d",
        "parentId" : null,
        "authorId" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "body" : "this is not really an error right? would this work in say local-up-cluster? would be better to pass back `map[string]int64{}, nil` no?",
        "createdAt" : "2018-06-04T19:05:17Z",
        "updatedAt" : "2018-06-04T19:05:17Z",
        "lastEditedBy" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "tags" : [
        ]
      },
      {
        "id" : "a0cfb4a6-f4c9-43e2-ab0e-b4d0ff95ba03",
        "parentId" : "c72a8d5d-c0c1-4fda-a857-c28e3e83851d",
        "authorId" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "body" : "This is not really an error. The caller of this function will just use the returned error to determine that no limit has to be set. Caller could have also used nil value to ascertain that but for logging and messaging purposes, it is best to return an error. ",
        "createdAt" : "2018-06-04T19:11:07Z",
        "updatedAt" : "2018-06-04T19:11:08Z",
        "lastEditedBy" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "tags" : [
        ]
      },
      {
        "id" : "1b4d6637-d12c-4f0a-8bd7-b45c56d33330",
        "parentId" : "c72a8d5d-c0c1-4fda-a857-c28e3e83851d",
        "authorId" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "body" : "@gnufied i don't see a change for setVolumeLimits (from pkg/kubelet/kubelet_node_status.go) in this PR. That's the one that also needs to change right?",
        "createdAt" : "2018-06-04T19:31:44Z",
        "updatedAt" : "2018-06-04T19:31:45Z",
        "lastEditedBy" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "tags" : [
        ]
      },
      {
        "id" : "33a3b414-ce46-428b-acd6-85fea2a7213f",
        "parentId" : "c72a8d5d-c0c1-4fda-a857-c28e3e83851d",
        "authorId" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "body" : "never mind, we just continue looping around there in that method even when there is an error",
        "createdAt" : "2018-06-04T19:36:57Z",
        "updatedAt" : "2018-06-04T19:36:57Z",
        "lastEditedBy" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "tags" : [
        ]
      },
      {
        "id" : "27137afe-012a-43a7-a619-74837252f7b1",
        "parentId" : "c72a8d5d-c0c1-4fda-a857-c28e3e83851d",
        "authorId" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "body" : "In what case, the cloud could be nil?",
        "createdAt" : "2018-06-04T22:00:18Z",
        "updatedAt" : "2018-06-04T22:00:18Z",
        "lastEditedBy" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "tags" : [
        ]
      },
      {
        "id" : "9957e225-941d-4dbf-a40d-fc21ef92da64",
        "parentId" : "c72a8d5d-c0c1-4fda-a857-c28e3e83851d",
        "authorId" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "body" : "almost any bare metal / single node / local-up-cluster.sh scenarios.",
        "createdAt" : "2018-06-04T22:32:56Z",
        "updatedAt" : "2018-06-04T22:32:56Z",
        "lastEditedBy" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "tags" : [
        ]
      },
      {
        "id" : "1c490580-4889-4577-9996-465f843b3b64",
        "parentId" : "c72a8d5d-c0c1-4fda-a857-c28e3e83851d",
        "authorId" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "body" : "( or even when --cloud-provider=external )",
        "createdAt" : "2018-06-04T22:33:21Z",
        "updatedAt" : "2018-06-04T22:33:21Z",
        "lastEditedBy" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "32b69193c63ff54fc5b77225d57616963b31932e",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +109,113 @@\t// override them.\n\tif cloud == nil {\n\t\treturn nil, fmt.Errorf(\"No cloudprovider present\")\n\t}\n"
  },
  {
    "id" : "72b512a5-8fc8-4ca6-a856-c3e90ee70c8b",
    "prId" : 36840,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/36840#pullrequestreview-8719136",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0d221b56-3aa0-46fe-bcf6-31b8b855a6f1",
        "parentId" : null,
        "authorId" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "body" : "This looks right.\n\nIf I'm going to nit-pick, it might be safer to split the string, and then glog.Warning if it doesn't match one of the forms we expect.\n\ni.e. we expect either aws/vol-12345678 or aws/us-east-1b/vol-12345678, but we should log if it doesn't look like that.\n\nBonus: code might be easier to understand also!\n",
        "createdAt" : "2016-11-15T23:15:38Z",
        "updatedAt" : "2016-11-17T19:14:57Z",
        "lastEditedBy" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "tags" : [
        ]
      }
    ],
    "commit" : "1b89c79e557a19b6f824796ff77283722a161f5d",
    "line" : null,
    "diffHunk" : "@@ -1,1 +219,223 @@\t\t}\n\t\tglog.V(4).Infof(\"Convert aws volume name from %q to %q \", volumeID, sourceName)\n\t}\n\n\tawsVolume := &api.Volume{"
  },
  {
    "id" : "729deb8f-31c8-4f4c-a49b-5a63ba0f097e",
    "prId" : 35883,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/35883#pullrequestreview-6648384",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cfa1b793-3f00-4798-9ede-8f9ec54c731a",
        "parentId" : null,
        "authorId" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "body" : "Could we also use the function mapVolumeSpecToAwsID here?\n",
        "createdAt" : "2016-10-31T22:23:38Z",
        "updatedAt" : "2016-11-02T13:43:09Z",
        "lastEditedBy" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "tags" : [
        ]
      },
      {
        "id" : "ede9b4f0-f33a-4bb3-9643-372b18e5ed8a",
        "parentId" : "cfa1b793-3f00-4798-9ede-8f9ec54c731a",
        "authorId" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "body" : "I would like to, but I worry I will break all the existing mounts.\n",
        "createdAt" : "2016-11-01T16:28:10Z",
        "updatedAt" : "2016-11-02T13:43:09Z",
        "lastEditedBy" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "tags" : [
        ]
      },
      {
        "id" : "a342d3ff-d803-4d44-bedf-a507696ca090",
        "parentId" : "cfa1b793-3f00-4798-9ede-8f9ec54c731a",
        "authorId" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "body" : "(is that the case?)\n",
        "createdAt" : "2016-11-01T16:28:18Z",
        "updatedAt" : "2016-11-02T13:43:09Z",
        "lastEditedBy" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "tags" : [
        ]
      }
    ],
    "commit" : "3cdbfc98af5be533dce6545b79593bd8260e0159",
    "line" : 53,
    "diffHunk" : "@@ -1,1 +317,321 @@\t// Clean up the URI to be more fs-friendly\n\tname := string(volumeID)\n\tname = strings.Replace(name, \"://\", \"/\", -1)\n\treturn path.Join(host.GetPluginDir(awsElasticBlockStorePluginName), \"mounts\", name)\n}"
  },
  {
    "id" : "5e6cd530-629e-42cd-84d8-e3ce4fc897b7",
    "prId" : 19502,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "00da5770-5f0b-4ed0-aaaf-5b26e2d0f4e5",
        "parentId" : null,
        "authorId" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "body" : "@thockin I don't think we settled on the impl detail of whether you make this call if fsGroup == 0, thoughts?\n",
        "createdAt" : "2016-01-13T16:42:21Z",
        "updatedAt" : "2016-01-13T16:42:21Z",
        "lastEditedBy" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "tags" : [
        ]
      },
      {
        "id" : "9332ac1a-878c-4afc-a047-3ba4f763e097",
        "parentId" : "00da5770-5f0b-4ed0-aaaf-5b26e2d0f4e5",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "We need to ensure the post-condition.  If it is safe to assume that kubelet's fsgid is 0, then we can elide this call - is that a safe assumption?  I am not sure.\n",
        "createdAt" : "2016-01-13T17:48:20Z",
        "updatedAt" : "2016-01-13T17:48:20Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "c8032df1-cc6a-4483-ad59-948dde33ea66",
        "parentId" : "00da5770-5f0b-4ed0-aaaf-5b26e2d0f4e5",
        "authorId" : null,
        "body" : "I don't quite follow... Why do we need special handling for fsGroup == 0. Please note that fsGroup is an *int64 for which the unset case is fsGroup == nil\n",
        "createdAt" : "2016-01-13T19:30:09Z",
        "updatedAt" : "2016-01-13T19:30:09Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      },
      {
        "id" : "e89f022a-15b2-4f7d-b8bc-1785b93a787d",
        "parentId" : "00da5770-5f0b-4ed0-aaaf-5b26e2d0f4e5",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "My point was that the post-condition is that ownership is set.  If fsGroup is 0, we need to ensure that everything is gid=0.  That _should_ be the default today, but I don't know if it is safe to assume it always will be.\n",
        "createdAt" : "2016-01-14T06:27:36Z",
        "updatedAt" : "2016-01-14T06:27:36Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "8fff0705-3b98-4974-9040-47c8c2799f15",
        "parentId" : "00da5770-5f0b-4ed0-aaaf-5b26e2d0f4e5",
        "authorId" : null,
        "body" : "Ah I see... Yeah I don't know if we can assume that the default ownership will always be 0. In addition (for better or for worse) the ownership management also sets `setgid`, and that is less likely to be the default so we might as well run it. \n",
        "createdAt" : "2016-01-14T15:11:48Z",
        "updatedAt" : "2016-01-14T15:11:48Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      }
    ],
    "commit" : "776769845914b08d775946a24f24105fbeab8b49",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +291,295 @@\t}\n\n\tif !b.readOnly {\n\t\tvolume.SetVolumeOwnership(b, fsGroup)\n\t}"
  },
  {
    "id" : "944b1579-81ca-499b-86b1-6c836f762186",
    "prId" : 19502,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "83b783da-dd33-4ac4-b567-588d03a873a8",
        "parentId" : null,
        "authorId" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "body" : "I don't think we need the `Managed` field of `volume.Attributes` anymore - remove it?\n",
        "createdAt" : "2016-01-20T16:34:29Z",
        "updatedAt" : "2016-01-20T16:34:29Z",
        "lastEditedBy" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "tags" : [
        ]
      }
    ],
    "commit" : "776769845914b08d775946a24f24105fbeab8b49",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +224,228 @@\treturn volume.Attributes{\n\t\tReadOnly:        b.readOnly,\n\t\tManaged:         !b.readOnly,\n\t\tSupportsSELinux: true,\n\t}"
  },
  {
    "id" : "73a9174b-bddd-4cb3-a05b-e1f44c5ce680",
    "prId" : 9870,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f7d5cd0a-73e8-483d-a584-83bca9585b47",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "bugfixes could be pulled to new PRs to make this one easier.\n",
        "createdAt" : "2015-08-24T22:49:55Z",
        "updatedAt" : "2015-09-15T17:28:06Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "bd4705c414a31ed34eb9afa5d965f2494639ff3f",
    "line" : null,
    "diffHunk" : "@@ -1,1 +60,64 @@\nfunc (plugin *awsElasticBlockStorePlugin) CanSupport(spec *volume.Spec) bool {\n\treturn (spec.PersistentVolume != nil && spec.PersistentVolume.Spec.AWSElasticBlockStore != nil) ||\n\t\t(spec.Volume != nil && spec.Volume.AWSElasticBlockStore != nil)\n}"
  },
  {
    "id" : "24d47d00-538e-4451-ac35-34ccca29e9b0",
    "prId" : 7702,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "134394c2-dd3f-41c8-aca7-132a2832f02e",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "At this point there is almost no reason for newBuilderInternal() in most volumes.  We should flatten those and tets through NewBuilder.\n",
        "createdAt" : "2015-05-05T19:59:19Z",
        "updatedAt" : "2015-05-05T19:59:19Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "789fbffa-02da-49ea-a419-73fae53aa112",
        "parentId" : "134394c2-dd3f-41c8-aca7-132a2832f02e",
        "authorId" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "body" : "Good point\n\nOn Tue, May 5, 2015 at 3:59 PM, Tim Hockin notifications@github.com wrote:\n\n> In pkg/volume/aws_ebs/aws_ebs.go\n> https://github.com/GoogleCloudPlatform/kubernetes/pull/7702#discussion_r29706457\n> :\n> \n> > @@ -68,9 +68,9 @@ func (plugin *awsElasticBlockStorePlugin) GetAccessModes() []api.AccessModeType\n> >     }\n> >  }\n> > \n> > -func (plugin *awsElasticBlockStorePlugin) NewBuilder(spec *volume.Spec, podRef *api.ObjectReference, _ volume.VolumeOptions) (volume.Builder, error) {\n> > +func (plugin *awsElasticBlockStorePlugin) NewBuilder(spec *volume.Spec, podRef *api.ObjectReference, _ volume.VolumeOptions, mounter mount.Interface) (volume.Builder, error) {\n> \n> At this point there is almost no reason for newBuilderInternal() in most\n> volumes. We should flatten those and tets through NewBuilder.\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/GoogleCloudPlatform/kubernetes/pull/7702/files#r29706457\n> .\n",
        "createdAt" : "2015-05-05T20:04:38Z",
        "updatedAt" : "2015-05-05T20:04:38Z",
        "lastEditedBy" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "tags" : [
        ]
      }
    ],
    "commit" : "b538642464bcc02c08e8a61e81466ccc2a5bb4ed",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +69,73 @@}\n\nfunc (plugin *awsElasticBlockStorePlugin) NewBuilder(spec *volume.Spec, podRef *api.ObjectReference, _ volume.VolumeOptions, mounter mount.Interface) (volume.Builder, error) {\n\t// Inject real implementations here, test through the internal function.\n\treturn plugin.newBuilderInternal(spec, podRef.UID, &AWSDiskUtil{}, mounter)"
  }
]