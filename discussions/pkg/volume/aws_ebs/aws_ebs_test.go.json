[
  {
    "id" : "8dc53e4f-45cb-4443-9f8d-f82e2d5cc941",
    "prId" : 19502,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "20a6c511-7ecc-4966-b8dc-872f2f43c79f",
        "parentId" : null,
        "authorId" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "body" : "add a check for fsgroup in the unit tests?\n",
        "createdAt" : "2016-01-13T16:00:06Z",
        "updatedAt" : "2016-01-13T16:00:06Z",
        "lastEditedBy" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "tags" : [
        ]
      },
      {
        "id" : "9bc8d7b6-ed5e-4028-9a90-25a3ceecbdba",
        "parentId" : "20a6c511-7ecc-4966-b8dc-872f2f43c79f",
        "authorId" : null,
        "body" : "So it looks like that would not be possible to do. The problem is that you cannot chown as non-root. This can be unit tested though by injecting chmodRunner, chownRunner but I think that should be a separate PR as this one is pretty large already. \n",
        "createdAt" : "2016-01-19T17:49:55Z",
        "updatedAt" : "2016-01-19T17:49:55Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      },
      {
        "id" : "585c9d99-33e5-4093-91ce-388e30e1f76a",
        "parentId" : "20a6c511-7ecc-4966-b8dc-872f2f43c79f",
        "authorId" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "body" : "You're right.\n",
        "createdAt" : "2016-01-20T20:24:21Z",
        "updatedAt" : "2016-01-20T20:24:21Z",
        "lastEditedBy" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "tags" : [
        ]
      }
    ],
    "commit" : "776769845914b08d775946a24f24105fbeab8b49",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +155,159 @@\t}\n\n\tif err := builder.SetUp(nil); err != nil {\n\t\tt.Errorf(\"Expected success, got: %v\", err)\n\t}"
  },
  {
    "id" : "0eb72781-e36f-44ac-960c-df7ef8ec55c5",
    "prId" : 15475,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "aecd118d-5ded-4831-b2f2-b8940e681f49",
        "parentId" : null,
        "authorId" : "e207abea-b610-4808-be75-0ad08ef4a235",
        "body" : "Doesn't require a fix, just FYI:\n\nOn https://github.com/jijun2/kubernetes/blob/fix-cni_test/pkg/kubelet/network/cni/cni_test.go#L172 you split up into chunks. Just be aware you are sometimes doing that and sometimes joining a path with a forward slash'd path.\n",
        "createdAt" : "2015-10-19T14:54:08Z",
        "updatedAt" : "2015-10-19T14:54:08Z",
        "lastEditedBy" : "e207abea-b610-4808-be75-0ad08ef4a235",
        "tags" : [
        ]
      },
      {
        "id" : "1dd1923e-21bd-43fd-8559-ea3c818153be",
        "parentId" : "aecd118d-5ded-4831-b2f2-b8940e681f49",
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "minor nit (doesn't really need a fix either), but a better name for this probably would've been \"expectedPath\".\n",
        "createdAt" : "2015-10-20T01:37:08Z",
        "updatedAt" : "2015-10-20T01:37:08Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      }
    ],
    "commit" : "bf6e8cbff72d5561d2869ee4b6b029911469fecd",
    "line" : 60,
    "diffHunk" : "@@ -1,1 +136,140 @@\t\tt.Errorf(\"Got a nil Builder\")\n\t}\n\tvolPath := path.Join(tmpDir, \"pods/poduid/volumes/kubernetes.io~aws-ebs/vol1\")\n\tpath := builder.GetPath()\n\tif path != volPath {"
  },
  {
    "id" : "1e611036-de90-4c77-8a8a-5da284a2db59",
    "prId" : 8732,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0cd9be20-6e05-4086-b2a6-a290b338bcae",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "this is kind of a mouthful... maybe consider defining & checking on separate lines, for readability?\n",
        "createdAt" : "2015-05-24T03:09:20Z",
        "updatedAt" : "2015-05-24T03:09:20Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "8100ac8a-db37-477a-b2a2-1d768a1e85d5",
        "parentId" : "0cd9be20-6e05-4086-b2a6-a290b338bcae",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "eh... it looks like this file is already this way. I guess it's better to stay consistent.\n",
        "createdAt" : "2015-05-24T03:10:33Z",
        "updatedAt" : "2015-05-24T03:10:33Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "3ad583cf2dd0f4a0b3a11baada649df69a4fc20d",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +41,45 @@\t\tt.Errorf(\"Expected true\")\n\t}\n\tif !plug.CanSupport(&volume.Spec{Name: \"foo\", PersistentVolumeSource: api.PersistentVolumeSource{AWSElasticBlockStore: &api.AWSElasticBlockStoreVolumeSource{}}}) {\n\t\tt.Errorf(\"Expected true\")\n\t}"
  }
]