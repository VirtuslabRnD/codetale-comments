[
  {
    "id" : "d6d6d9f8-bba5-452d-a63c-8cbe506761e2",
    "prId" : 27970,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "324a9532-472b-44aa-b82b-061082e05559",
        "parentId" : null,
        "authorId" : "8e448017-7838-493d-a424-33cada0da657",
        "body" : "Double check that this is correct for Flex\n",
        "createdAt" : "2016-08-06T03:53:21Z",
        "updatedAt" : "2016-08-15T18:29:44Z",
        "lastEditedBy" : "8e448017-7838-493d-a424-33cada0da657",
        "tags" : [
        ]
      },
      {
        "id" : "52cd9b94-14e0-4dee-80f0-82ba18f3d8e6",
        "parentId" : "324a9532-472b-44aa-b82b-061082e05559",
        "authorId" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "body" : "keep it for now because it is used in create UniqueVolumeName\n",
        "createdAt" : "2016-08-12T18:06:08Z",
        "updatedAt" : "2016-08-15T18:29:44Z",
        "lastEditedBy" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "tags" : [
        ]
      }
    ],
    "commit" : "f19a1148db1b7584be6b6b60abaf8c0bd1503ed3",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +185,189 @@\t\tVolumeSource: api.VolumeSource{\n\t\t\tFlexVolume: &api.FlexVolumeSource{\n\t\t\t\tDriver: sourceName,\n\t\t\t},\n\t\t},"
  },
  {
    "id" : "c88f3c5d-55e9-4aab-a0ed-2ea5d6e8d744",
    "prId" : 24797,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "12e5f61d-1f7c-4632-b2a8-247a6b9729c8",
        "parentId" : null,
        "authorId" : "8e448017-7838-493d-a424-33cada0da657",
        "body" : "You do not need to (and should not) lower-case the first letter of logged errors, only returned errors. The reason returned errors are lower-cased is so that the message can be concatenated. Once logged there is no consumer that will attempt to concatenate it.\n",
        "createdAt" : "2016-07-21T02:49:22Z",
        "updatedAt" : "2016-07-21T13:10:19Z",
        "lastEditedBy" : "8e448017-7838-493d-a424-33cada0da657",
        "tags" : [
        ]
      },
      {
        "id" : "8abd0e56-ea55-4f70-ae35-b6696e471541",
        "parentId" : "12e5f61d-1f7c-4632-b2a8-247a6b9729c8",
        "authorId" : "e15ef128-90ac-4a14-8795-b5be15e790ce",
        "body" : "ok, makes sense\n",
        "createdAt" : "2016-07-21T13:09:12Z",
        "updatedAt" : "2016-07-21T13:10:19Z",
        "lastEditedBy" : "e15ef128-90ac-4a14-8795-b5be15e790ce",
        "tags" : [
        ]
      }
    ],
    "commit" : "11d1289afa27d18941bf2fa1a305116a38cdf396",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +295,299 @@\tif err != nil {\n\t\tif !isCmdNotSupportedErr(err) {\n\t\t\tglog.Errorf(\"failed to attach volume: %s\", f.volName)\n\t\t\treturn err\n\t\t}"
  },
  {
    "id" : "099abf8c-486d-430f-aa48-b55462b44137",
    "prId" : 23862,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6d0bfdea-e7cd-4cf0-b4bd-97de53ce11b4",
        "parentId" : null,
        "authorId" : "8e448017-7838-493d-a424-33cada0da657",
        "body" : "Password content is base64 encoded in the secret definition to allow passage of binary data. It makes sense, therefore, for the password to be base64 encoded between this code and the script since it is marshalled to JSON. I realize that would be a breaking change (since flex doesn't do that with existing passwords) though, and could be persuaded it is not a good idea.\n",
        "createdAt" : "2016-04-06T05:26:33Z",
        "updatedAt" : "2016-04-15T09:40:52Z",
        "lastEditedBy" : "8e448017-7838-493d-a424-33cada0da657",
        "tags" : [
        ]
      },
      {
        "id" : "c8d2200b-6a40-43be-af97-7b2048d807d3",
        "parentId" : "6d0bfdea-e7cd-4cf0-b4bd-97de53ce11b4",
        "authorId" : "cb578771-ab57-49a0-afd6-27da11c87c6d",
        "body" : "Sounds good to me. Will put base64 encoding. It is the format we are using elsewhere in Kubernetes, no reason to do it differently.\n",
        "createdAt" : "2016-04-06T06:50:49Z",
        "updatedAt" : "2016-04-15T09:40:52Z",
        "lastEditedBy" : "cb578771-ab57-49a0-afd6-27da11c87c6d",
        "tags" : [
        ]
      }
    ],
    "commit" : "f53bc4ebe076ae082937c88b22f76e3766a7477f",
    "line" : 74,
    "diffHunk" : "@@ -1,1 +304,308 @@\t\t// Extract secret and pass it as options.\n\t\tfor name, secret := range f.secrets {\n\t\t\tf.options[optionKeySecret+\"/\"+name] = secret\n\t\t}\n"
  },
  {
    "id" : "af8b61c6-c555-40aa-99f0-e380ec054132",
    "prId" : 23862,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9f767ea2-1887-46d1-b893-8ba6e5302e16",
        "parentId" : null,
        "authorId" : "8e448017-7838-493d-a424-33cada0da657",
        "body" : "Please update documentation and comments on `SecretRef` in `api/types.go` to reflect the new behavior.\n",
        "createdAt" : "2016-04-06T05:27:59Z",
        "updatedAt" : "2016-04-15T09:40:52Z",
        "lastEditedBy" : "8e448017-7838-493d-a424-33cada0da657",
        "tags" : [
        ]
      },
      {
        "id" : "24c45add-5b33-4e1b-9f23-f339f228f7b8",
        "parentId" : "9f767ea2-1887-46d1-b893-8ba6e5302e16",
        "authorId" : "cb578771-ab57-49a0-afd6-27da11c87c6d",
        "body" : "ACK..\n",
        "createdAt" : "2016-04-06T06:53:06Z",
        "updatedAt" : "2016-04-15T09:40:52Z",
        "lastEditedBy" : "cb578771-ab57-49a0-afd6-27da11c87c6d",
        "tags" : [
        ]
      }
    ],
    "commit" : "f53bc4ebe076ae082937c88b22f76e3766a7477f",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +103,107 @@\n// NewMounter is the mounter routine to build the volume.\nfunc (plugin *flexVolumePlugin) NewMounter(spec *volume.Spec, pod *api.Pod, _ volume.VolumeOptions) (volume.Mounter, error) {\n\tfv := plugin.getVolumeSource(spec)\n\tsecrets := make(map[string]string)"
  },
  {
    "id" : "73525f1c-e36b-47b0-a4e9-52f9af2dc986",
    "prId" : 23862,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "06223a4f-f058-4027-b491-7af93865803f",
        "parentId" : null,
        "authorId" : "8e448017-7838-493d-a424-33cada0da657",
        "body" : "Just verifying, this method doesn't introduce newline characters in the encoded text does it?\n",
        "createdAt" : "2016-04-12T04:36:16Z",
        "updatedAt" : "2016-04-15T09:40:52Z",
        "lastEditedBy" : "8e448017-7838-493d-a424-33cada0da657",
        "tags" : [
        ]
      },
      {
        "id" : "41b06e3f-935e-4b89-9057-814805a2d2b1",
        "parentId" : "06223a4f-f058-4027-b491-7af93865803f",
        "authorId" : "cb578771-ab57-49a0-afd6-27da11c87c6d",
        "body" : "Verified, it doesn't.\n",
        "createdAt" : "2016-04-12T04:58:34Z",
        "updatedAt" : "2016-04-15T09:40:52Z",
        "lastEditedBy" : "cb578771-ab57-49a0-afd6-27da11c87c6d",
        "tags" : [
        ]
      }
    ],
    "commit" : "f53bc4ebe076ae082937c88b22f76e3766a7477f",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +118,122 @@\t\t}\n\t\tfor name, data := range secretName.Data {\n\t\t\tsecrets[name] = base64.StdEncoding.EncodeToString(data)\n\t\t\tglog.V(1).Infof(\"found flex volume secret info: %s\", name)\n\t\t}"
  },
  {
    "id" : "0e56249b-30fe-4533-8c71-72e6af156ad5",
    "prId" : 13840,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3da93e16-d258-47be-851f-212a3ad31ac2",
        "parentId" : null,
        "authorId" : "a7f673a6-4b23-4df6-aa10-f123fa9dcd5f",
        "body" : "need a command in driver so `CanSupport` can call and sanity check.\n",
        "createdAt" : "2015-11-02T21:11:55Z",
        "updatedAt" : "2015-12-23T22:11:57Z",
        "lastEditedBy" : "a7f673a6-4b23-4df6-aa10-f123fa9dcd5f",
        "tags" : [
        ]
      },
      {
        "id" : "2653a4e8-31d5-4d57-8468-dd1347f1edf1",
        "parentId" : "3da93e16-d258-47be-851f-212a3ad31ac2",
        "authorId" : "cb578771-ab57-49a0-afd6-27da11c87c6d",
        "body" : "I thought about this one and left it for future enhancements. Since you asked, let me add this one.\n",
        "createdAt" : "2015-11-04T18:08:57Z",
        "updatedAt" : "2015-12-23T22:11:57Z",
        "lastEditedBy" : "cb578771-ab57-49a0-afd6-27da11c87c6d",
        "tags" : [
        ]
      }
    ],
    "commit" : "fa76de79e5d1670b8e6add30f0159c833534a298",
    "line" : 80,
    "diffHunk" : "@@ -1,1 +78,82 @@\n// CanSupport checks whether the plugin can support the input volume spec.\nfunc (plugin *flexVolumePlugin) CanSupport(spec *volume.Spec) bool {\n\tsource := plugin.getVolumeSource(spec)\n\treturn (source != nil) && (source.Driver == plugin.driverName)"
  },
  {
    "id" : "38eb6d5d-649e-429a-9252-95e4e6887a96",
    "prId" : 13840,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "89d20d17-8075-4713-acf3-1ef01fb0c16f",
        "parentId" : null,
        "authorId" : "a7f673a6-4b23-4df6-aa10-f123fa9dcd5f",
        "body" : "if your driver name collide with existing plugins, confusion may come. \n",
        "createdAt" : "2015-11-02T21:15:34Z",
        "updatedAt" : "2015-12-23T22:11:57Z",
        "lastEditedBy" : "a7f673a6-4b23-4df6-aa10-f123fa9dcd5f",
        "tags" : [
        ]
      },
      {
        "id" : "b14ef273-1732-400e-b840-7c391cdc4915",
        "parentId" : "89d20d17-8075-4713-acf3-1ef01fb0c16f",
        "authorId" : "cb578771-ab57-49a0-afd6-27da11c87c6d",
        "body" : "Interesting...  Driver name is of the format \"Vendor/foo\". We do not expect it to collide with existing plugins. Let me add a test case to verify the behavior if we collide.\n",
        "createdAt" : "2015-11-04T18:14:36Z",
        "updatedAt" : "2015-12-23T22:11:57Z",
        "lastEditedBy" : "cb578771-ab57-49a0-afd6-27da11c87c6d",
        "tags" : [
        ]
      }
    ],
    "commit" : "fa76de79e5d1670b8e6add30f0159c833534a298",
    "line" : 329,
    "diffHunk" : "@@ -1,1 +327,331 @@func (f *flexVolumeDisk) GetPath() string {\n\tname := f.driverName\n\treturn f.plugin.host.GetPodVolumeDir(f.podUID, util.EscapeQualifiedNameForDisk(name), f.volName)\n}\n"
  },
  {
    "id" : "368d18a3-82ae-41e6-8240-266ad1db6717",
    "prId" : 13840,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e19ecfa9-6c6a-49de-bb94-7455def26338",
        "parentId" : null,
        "authorId" : "a7f673a6-4b23-4df6-aa10-f123fa9dcd5f",
        "body" : "Move sanity check to `CanSupport`. Don't change `Init` in other volumes. \n",
        "createdAt" : "2015-11-03T13:35:14Z",
        "updatedAt" : "2015-12-23T22:11:57Z",
        "lastEditedBy" : "a7f673a6-4b23-4df6-aa10-f123fa9dcd5f",
        "tags" : [
        ]
      },
      {
        "id" : "8b7e1738-ac54-42e7-a532-225a7124850b",
        "parentId" : "e19ecfa9-6c6a-49de-bb94-7455def26338",
        "authorId" : "cb578771-ab57-49a0-afd6-27da11c87c6d",
        "body" : "Today, the network driver has 'init' as the callout and checks for error. Changed the signature to conform to that.\nCansupport is interesting and in combination with actual options specified in the volumespec can be used to solve some interesting advanced uses cases. From what I understood, 'init' can be used for initializing the plugin and should not depend on the options provided by the user in the actual VolumeSpec.\n",
        "createdAt" : "2015-11-04T18:24:15Z",
        "updatedAt" : "2015-12-23T22:11:57Z",
        "lastEditedBy" : "cb578771-ab57-49a0-afd6-27da11c87c6d",
        "tags" : [
        ]
      },
      {
        "id" : "c0a74d8b-77d3-44a7-8163-5c32efab21e7",
        "parentId" : "e19ecfa9-6c6a-49de-bb94-7455def26338",
        "authorId" : "8e448017-7838-493d-a424-33cada0da657",
        "body" : "I'm ok with `Init(...)` returning an error.\n",
        "createdAt" : "2015-11-26T01:32:05Z",
        "updatedAt" : "2015-12-23T22:11:57Z",
        "lastEditedBy" : "8e448017-7838-493d-a424-33cada0da657",
        "tags" : [
        ]
      }
    ],
    "commit" : "fa76de79e5d1670b8e6add30f0159c833534a298",
    "line" : 62,
    "diffHunk" : "@@ -1,1 +60,64 @@\n// Init intializes the plugin.\nfunc (plugin *flexVolumePlugin) Init(host volume.VolumeHost) error {\n\tplugin.host = host\n\t// call the init script"
  }
]