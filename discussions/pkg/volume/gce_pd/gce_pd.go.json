[
  {
    "id" : "8b8e23c5-ca3a-42b4-94d7-384aab16fd44",
    "prId" : 21709,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "90e81da7-7f60-4bc1-ba64-654db5d92b00",
        "parentId" : null,
        "authorId" : "a7f673a6-4b23-4df6-aa10-f123fa9dcd5f",
        "body" : "why create and return err?\n",
        "createdAt" : "2016-05-11T14:29:46Z",
        "updatedAt" : "2016-05-22T12:28:46Z",
        "lastEditedBy" : "a7f673a6-4b23-4df6-aa10-f123fa9dcd5f",
        "tags" : [
        ]
      },
      {
        "id" : "667d5558-64d1-439e-afba-d11aa43e8958",
        "parentId" : "90e81da7-7f60-4bc1-ba64-654db5d92b00",
        "authorId" : "a7f673a6-4b23-4df6-aa10-f123fa9dcd5f",
        "body" : "i see, you changed notMnt.\n",
        "createdAt" : "2016-05-11T14:31:17Z",
        "updatedAt" : "2016-05-22T12:28:46Z",
        "lastEditedBy" : "a7f673a6-4b23-4df6-aa10-f123fa9dcd5f",
        "tags" : [
        ]
      }
    ],
    "commit" : "4858d0ab6f612248f356c4cdcd0353b5667fc359",
    "line" : 203,
    "diffHunk" : "@@ -1,1 +307,311 @@\t\treturn os.Remove(dir)\n\t}\n\treturn fmt.Errorf(\"Failed to unmount volume dir\")\n}\n"
  },
  {
    "id" : "624d5210-0190-46b4-824a-989c2c1b892e",
    "prId" : 21709,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b70dd2bb-f21f-492a-b213-2a4609ba659c",
        "parentId" : null,
        "authorId" : "8e448017-7838-493d-a424-33cada0da657",
        "body" : "Not your code. But I'm curious, why not `readOnly = volumeSource.ReadOnly` here?\n",
        "createdAt" : "2016-05-13T21:58:17Z",
        "updatedAt" : "2016-05-22T12:28:46Z",
        "lastEditedBy" : "8e448017-7838-493d-a424-33cada0da657",
        "tags" : [
        ]
      },
      {
        "id" : "b40acc2d-9eb9-476f-a82a-f3e230d9dfe5",
        "parentId" : "b70dd2bb-f21f-492a-b213-2a4609ba659c",
        "authorId" : null,
        "body" : "it is carried over from the pvc specification in the pod definition. The spec here represents the PV which does not know whether readOnly was specified in the pod.\n",
        "createdAt" : "2016-05-13T22:30:32Z",
        "updatedAt" : "2016-05-22T12:28:46Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      },
      {
        "id" : "e7537188-07aa-4bee-a90a-11870c783444",
        "parentId" : "b70dd2bb-f21f-492a-b213-2a4609ba659c",
        "authorId" : "8e448017-7838-493d-a424-33cada0da657",
        "body" : "Ah right because the `PersistentVolumeClaimVolumeSource` defines a `ReadOnly` field that takes precedence. That's pretty confusing, we ignore the `ReadOnly` field on the PV object and let the `ReadOnly` field on the PVC object take precedence. Might be worth revisiting this logic in the future. Thanks.\n",
        "createdAt" : "2016-05-13T22:39:16Z",
        "updatedAt" : "2016-05-22T12:28:46Z",
        "lastEditedBy" : "8e448017-7838-493d-a424-33cada0da657",
        "tags" : [
        ]
      }
    ],
    "commit" : "4858d0ab6f612248f356c4cdcd0353b5667fc359",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +85,89 @@\t} else {\n\t\tvolumeSource = spec.PersistentVolume.Spec.GCEPersistentDisk\n\t\treadOnly = spec.ReadOnly\n\t}\n"
  },
  {
    "id" : "9f133945-0010-49c0-acca-a3cce505f1e0",
    "prId" : 18621,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4458f7db-f52d-424b-a4c6-28771f786fae",
        "parentId" : null,
        "authorId" : "8e448017-7838-493d-a424-33cada0da657",
        "body" : "I think GCE API return GB not GiB\n",
        "createdAt" : "2015-12-15T01:12:54Z",
        "updatedAt" : "2015-12-17T10:25:08Z",
        "lastEditedBy" : "8e448017-7838-493d-a424-33cada0da657",
        "tags" : [
        ]
      },
      {
        "id" : "69ea1611-f5e2-47d0-8ad4-8a6245b2c2c2",
        "parentId" : "4458f7db-f52d-424b-a4c6-28771f786fae",
        "authorId" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "body" : "No, it does not. All disk sizes are in GiB, just the documentation (and GUI and basically everything) says it's GB.\n",
        "createdAt" : "2015-12-15T11:19:59Z",
        "updatedAt" : "2015-12-17T10:25:08Z",
        "lastEditedBy" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "tags" : [
        ]
      },
      {
        "id" : "05184a0d-bf65-4bc1-b2d2-130e80c06e76",
        "parentId" : "4458f7db-f52d-424b-a4c6-28771f786fae",
        "authorId" : "8e448017-7838-493d-a424-33cada0da657",
        "body" : "Nice\n",
        "createdAt" : "2015-12-15T19:32:47Z",
        "updatedAt" : "2015-12-17T10:25:08Z",
        "lastEditedBy" : "8e448017-7838-493d-a424-33cada0da657",
        "tags" : [
        ]
      }
    ],
    "commit" : "d4f6271b219327d2ee4e1c6be6f55e45a864de38",
    "line" : 109,
    "diffHunk" : "@@ -1,1 +374,378 @@\tpv.Spec.PersistentVolumeSource.GCEPersistentDisk.PDName = volumeID\n\tpv.Spec.Capacity = api.ResourceList{\n\t\tapi.ResourceName(api.ResourceStorage): resource.MustParse(fmt.Sprintf(\"%dGi\", sizeGB)),\n\t}\n\treturn nil"
  },
  {
    "id" : "034ad2bb-9f9d-4ceb-afa7-5197aa7181f3",
    "prId" : 18621,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "113c1e04-062e-45cc-8a96-cf57ad762849",
        "parentId" : null,
        "authorId" : "8e448017-7838-493d-a424-33cada0da657",
        "body" : "Why is the helper function needed? Why not just stick this logic in `NewDeleter`? Ditto with `NewProvisioner`.\n",
        "createdAt" : "2015-12-15T01:14:27Z",
        "updatedAt" : "2015-12-17T10:25:08Z",
        "lastEditedBy" : "8e448017-7838-493d-a424-33cada0da657",
        "tags" : [
        ]
      },
      {
        "id" : "31ae977b-f9ea-4281-b1de-26b4926d7c18",
        "parentId" : "113c1e04-062e-45cc-8a96-cf57ad762849",
        "authorId" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "body" : "It's used in testing to inject fake pdManager.\n",
        "createdAt" : "2015-12-15T12:43:53Z",
        "updatedAt" : "2015-12-17T10:25:08Z",
        "lastEditedBy" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "tags" : [
        ]
      },
      {
        "id" : "58de692f-99bd-48b0-bbb8-f9d42193563d",
        "parentId" : "113c1e04-062e-45cc-8a96-cf57ad762849",
        "authorId" : "8e448017-7838-493d-a424-33cada0da657",
        "body" : "Ack.\n",
        "createdAt" : "2015-12-15T19:32:16Z",
        "updatedAt" : "2015-12-17T10:25:08Z",
        "lastEditedBy" : "8e448017-7838-493d-a424-33cada0da657",
        "tags" : [
        ]
      }
    ],
    "commit" : "d4f6271b219327d2ee4e1c6be6f55e45a864de38",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +131,135 @@}\n\nfunc (plugin *gcePersistentDiskPlugin) newDeleterInternal(spec *volume.Spec, manager pdManager) (volume.Deleter, error) {\n\tif spec.PersistentVolume != nil && spec.PersistentVolume.Spec.GCEPersistentDisk == nil {\n\t\treturn nil, fmt.Errorf(\"spec.PersistentVolumeSource.GCEPersistentDisk is nil\")"
  }
]