[
  {
    "id" : "4aa0f82b-7c8b-4140-9fca-d5db36c3614b",
    "prId" : 96021,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/96021#pullrequestreview-579922073",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "60ccd909-c244-46c3-97a7-059cd37c09c5",
        "parentId" : null,
        "authorId" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "body" : "should we do same thing in this file for other places where `saveVolumeData` is being called followed up by `os.RemoveAll`? This applies to `NewBlockVolumeMapper` call.",
        "createdAt" : "2020-11-05T15:48:01Z",
        "updatedAt" : "2021-01-19T21:29:23Z",
        "lastEditedBy" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "tags" : [
        ]
      },
      {
        "id" : "9509de08-c569-4217-af7a-16db06a9573b",
        "parentId" : "60ccd909-c244-46c3-97a7-059cd37c09c5",
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "Is this directory same or different than the one used in MountDevice?",
        "createdAt" : "2021-01-22T21:50:27Z",
        "updatedAt" : "2021-01-22T21:50:28Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "f0976ddb-6f08-41df-81a2-73efc3a35911",
        "parentId" : "60ccd909-c244-46c3-97a7-059cd37c09c5",
        "authorId" : "1a46cba5-dd9b-4c03-b94c-4dbfb64198e4",
        "body" : "As best I can tell from testing with the hostpath driver, these appear to be different directories:\r\n\r\n* `csi_plugin:` created path successfully [/var/lib/kubelet/pods/103bb9c7-0a9f-4958-bb6a-8d05f64420f5/volumes/kubernetes.io~csi/pvc-21228cc8-5669-4c0d-bbdc-d7b4e19dfb79]\r\n* `csi_attacher:` created target path successfully [/var/lib/kubelet/plugins/kubernetes.io/csi/pv/pvc-22c63cbf-4e2c-4ca6-b269-d5e44a1f3718/globalmount]",
        "createdAt" : "2021-01-31T18:39:58Z",
        "updatedAt" : "2021-01-31T18:40:27Z",
        "lastEditedBy" : "1a46cba5-dd9b-4c03-b94c-4dbfb64198e4",
        "tags" : [
        ]
      }
    ],
    "commit" : "15da65d9ae97f068756966be623e01d7377d63c1",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +458,462 @@\tvolData[volDataKey.attachmentID] = attachID\n\n\terr = saveVolumeData(dataDir, volDataFileName, volData)\n\tdefer func() {\n\t\t// Only if there was an error and volume operation was considered"
  },
  {
    "id" : "b64a38d0-9c4f-4c70-8f49-5db69911182d",
    "prId" : 93130,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/93130#pullrequestreview-521281356",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ca5b018c-c086-4e78-b919-5411c433124e",
        "parentId" : null,
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "Should any errors in this function be logged?",
        "createdAt" : "2020-10-30T17:40:14Z",
        "updatedAt" : "2020-11-12T17:26:59Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      },
      {
        "id" : "a5186cd5-8b3b-43bd-bf57-6c2d4046e0c2",
        "parentId" : "ca5b018c-c086-4e78-b919-5411c433124e",
        "authorId" : "f64c354b-61cb-4b89-b58f-f464e7ad4f94",
        "body" : "done",
        "createdAt" : "2020-11-02T00:42:27Z",
        "updatedAt" : "2020-11-12T17:26:59Z",
        "lastEditedBy" : "f64c354b-61cb-4b89-b58f-f464e7ad4f94",
        "tags" : [
        ]
      }
    ],
    "commit" : "d2859cd89b0ec00054219ed9988c6dccff39a0c8",
    "line" : 41,
    "diffHunk" : "@@ -1,1 +341,345 @@}\n\nfunc (p *csiPlugin) RequiresRemount(spec *volume.Spec) bool {\n\tif !utilfeature.DefaultFeatureGate.Enabled(features.CSIServiceAccountToken) {\n\t\treturn false"
  },
  {
    "id" : "aeccb4ac-fbce-424d-a9f1-99e92ac3c4f6",
    "prId" : 92001,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/92001#pullrequestreview-443378772",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5e9758b7-5c9e-4193-8b56-6e98c67ff684",
        "parentId" : null,
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "Hmm I see this being called elsewhere, but I wonder if this is really the right place to wait for the initial sync. It would probably be better to wait during some volumemanager initialization. It may be good to open a separate issue to try to clean this up.",
        "createdAt" : "2020-07-01T22:24:20Z",
        "updatedAt" : "2020-07-12T03:29:51Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "efcc5568-5945-4f5a-a0c3-1fcfc09a3b0b",
        "parentId" : "5e9758b7-5c9e-4193-8b56-6e98c67ff684",
        "authorId" : "1a46cba5-dd9b-4c03-b94c-4dbfb64198e4",
        "body" : "I'm going to leave this section untouched for now, and we can open a separate issue to adjust the csiDriver initialization.",
        "createdAt" : "2020-07-06T20:16:46Z",
        "updatedAt" : "2020-07-12T03:29:51Z",
        "lastEditedBy" : "1a46cba5-dd9b-4c03-b94c-4dbfb64198e4",
        "tags" : [
        ]
      }
    ],
    "commit" : "ade2f83685faf1b1f869fe321c4fd9c8a002d3fc",
    "line" : 40,
    "diffHunk" : "@@ -1,1 +869,873 @@\t\tkletHost, ok := p.host.(volume.KubeletVolumeHost)\n\t\tif ok {\n\t\t\tif err := kletHost.WaitForCacheSync(); err != nil {\n\t\t\t\treturn storage.ReadWriteOnceWithFSTypeFSGroupPolicy, err\n\t\t\t}"
  },
  {
    "id" : "5df378bb-1ddb-48de-9887-17b5272671d7",
    "prId" : 92001,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/92001#pullrequestreview-450794695",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dcc85bbf-5b41-49ae-a76c-ddaa44c28279",
        "parentId" : null,
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "Would be nice to have unit tests for this function (in a followup)",
        "createdAt" : "2020-07-09T20:39:51Z",
        "updatedAt" : "2020-07-12T03:29:51Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "92a8a420-8c44-4721-8886-a0d290c06306",
        "parentId" : "dcc85bbf-5b41-49ae-a76c-ddaa44c28279",
        "authorId" : "1a46cba5-dd9b-4c03-b94c-4dbfb64198e4",
        "body" : "Addressed in https://github.com/kubernetes/kubernetes/pull/93195 ",
        "createdAt" : "2020-07-17T16:26:03Z",
        "updatedAt" : "2020-07-17T16:26:04Z",
        "lastEditedBy" : "1a46cba5-dd9b-4c03-b94c-4dbfb64198e4",
        "tags" : [
        ]
      }
    ],
    "commit" : "ade2f83685faf1b1f869fe321c4fd9c8a002d3fc",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +855,859 @@// getFSGroupPolicy returns if the CSI driver supports a volume in the given mode.\n// An error indicates that it isn't supported and explains why.\nfunc (p *csiPlugin) getFSGroupPolicy(driver string) (storage.FSGroupPolicy, error) {\n\tif !utilfeature.DefaultFeatureGate.Enabled(features.CSIVolumeFSGroupPolicy) {\n\t\t// feature is disabled, default to ReadWriteOnceWithFSTypeFSGroupPolicy"
  },
  {
    "id" : "3738eb7d-3d7a-4148-b813-963bc426e461",
    "prId" : 91307,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/91307#pullrequestreview-512027285",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "67e6c1d0-21df-46b3-9f8c-d1df492b025a",
        "parentId" : null,
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "As part of followup cleanup, I think we should change all of these lister checks to return error if it's not set. It is unexpected for kube-controller-manager to not be able to initialize informers.",
        "createdAt" : "2020-06-10T21:53:37Z",
        "updatedAt" : "2020-06-11T19:21:09Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "c1fbdc5b-a425-432c-8a3e-956970b15a90",
        "parentId" : "67e6c1d0-21df-46b3-9f8c-d1df492b025a",
        "authorId" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "body" : "is this addressed",
        "createdAt" : "2020-10-19T15:25:08Z",
        "updatedAt" : "2020-10-19T15:25:08Z",
        "lastEditedBy" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "tags" : [
        ]
      },
      {
        "id" : "19e83c65-c8e5-4068-9396-48207e481793",
        "parentId" : "67e6c1d0-21df-46b3-9f8c-d1df492b025a",
        "authorId" : "47dfb7ab-db92-411d-a70b-1dc70d2a9420",
        "body" : "@jingxu97 Its not changed yet. Just to understand, did you encounter an issue or a failure with this?",
        "createdAt" : "2020-10-19T17:40:22Z",
        "updatedAt" : "2020-10-19T17:40:22Z",
        "lastEditedBy" : "47dfb7ab-db92-411d-a70b-1dc70d2a9420",
        "tags" : [
        ]
      },
      {
        "id" : "010e37ce-1792-4b78-a4bb-a4956ddf2993",
        "parentId" : "67e6c1d0-21df-46b3-9f8c-d1df492b025a",
        "authorId" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "body" : "no, I just happen to check some changes in this area, and want to verify. ",
        "createdAt" : "2020-10-19T18:03:31Z",
        "updatedAt" : "2020-10-19T18:03:31Z",
        "lastEditedBy" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "tags" : [
        ]
      }
    ],
    "commit" : "2a895776592e674fdb6283e51effe23c23d78797",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +197,201 @@\t\t\tp.volumeAttachmentLister = adcHost.VolumeAttachmentLister()\n\t\t\tif p.volumeAttachmentLister == nil {\n\t\t\t\tklog.Error(log(\"VolumeAttachmentLister not found on AttachDetachVolumeHost\"))\n\t\t\t}\n\t\t}"
  },
  {
    "id" : "92777cc2-5bb3-45ae-b39e-4fecbd58c7a2",
    "prId" : 89589,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/89589#pullrequestreview-383105653",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f9e6f773-99f9-45ac-af32-ea04365e0c39",
        "parentId" : null,
        "authorId" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "body" : "lastErr shouldn't be nil if the node is non-existent :-)",
        "createdAt" : "2020-03-27T18:22:00Z",
        "updatedAt" : "2020-03-30T08:13:05Z",
        "lastEditedBy" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "tags" : [
        ]
      },
      {
        "id" : "027991da-b645-4169-86e1-35aaf94de25b",
        "parentId" : "f9e6f773-99f9-45ac-af32-ea04365e0c39",
        "authorId" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "body" : "you never know :-)",
        "createdAt" : "2020-03-27T18:23:47Z",
        "updatedAt" : "2020-03-30T08:13:05Z",
        "lastEditedBy" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "tags" : [
        ]
      },
      {
        "id" : "a10b601b-5be4-4b06-9487-6f5ef4155c91",
        "parentId" : "f9e6f773-99f9-45ac-af32-ea04365e0c39",
        "authorId" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "body" : "One could ~crash~ break whole cluster by creating a node with nonExistingNodeName.",
        "createdAt" : "2020-03-27T18:24:38Z",
        "updatedAt" : "2020-03-30T08:13:05Z",
        "lastEditedBy" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "tags" : [
        ]
      },
      {
        "id" : "bf20d999-7f03-4312-a480-249473311885",
        "parentId" : "f9e6f773-99f9-45ac-af32-ea04365e0c39",
        "authorId" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "body" : "Since the node may exist, we can give it name such as possiblyExistingNodeName",
        "createdAt" : "2020-03-27T18:28:44Z",
        "updatedAt" : "2020-03-30T08:13:05Z",
        "lastEditedBy" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "8bdbd4d683df36ccdefd4d491e8042f4099fc74b",
    "line" : 104,
    "diffHunk" : "@@ -1,1 +932,936 @@\t\t// https://kubernetes.io/docs/reference/command-line-tools-reference/kubelet-tls-bootstrapping/\n\t\t_, lastErr = client.StorageV1().CSINodes().Get(context.TODO(), string(nodeName), meta.GetOptions{})\n\t\tif lastErr == nil || apierrors.IsNotFound(lastErr) {\n\t\t\t// API server contacted\n\t\t\treturn true, nil"
  },
  {
    "id" : "c2d432df-f371-41b0-bf05-0f4348b19383",
    "prId" : 84533,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/84533#pullrequestreview-315193169",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bb2900a8-fe5f-4af0-b7f3-0d322647dae3",
        "parentId" : null,
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "What happens if a driver supports 2.x and 1.x? In the future, if we have a 2.x, the driver Daemonset could theoretically run with a driver that supports both 1.x and 2.x.",
        "createdAt" : "2019-11-11T19:22:46Z",
        "updatedAt" : "2019-11-11T19:43:18Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "06cab675-dc9c-47ec-b5e7-02e7b31223bb",
        "parentId" : "bb2900a8-fe5f-4af0-b7f3-0d322647dae3",
        "authorId" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "body" : "I think we would have to go in and update the validation code. I think the theory is that `v2.x` will have breaking changes and we wouldn't want to just \"quietly accept\" that version in older versions of k8s. If we do decide that older versions of k8s support `v2.x+` in the future we can always cherry-pick a relaxation in validation.",
        "createdAt" : "2019-11-11T19:27:49Z",
        "updatedAt" : "2019-11-11T19:43:18Z",
        "lastEditedBy" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "tags" : [
        ]
      },
      {
        "id" : "51054888-75de-43cc-bea5-f46583ce439e",
        "parentId" : "bb2900a8-fe5f-4af0-b7f3-0d322647dae3",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "if the driver supports 1.x and 2.x, current versions of kube should allow it and choose to use 1.x, right? does this code do that?",
        "createdAt" : "2019-11-11T19:36:03Z",
        "updatedAt" : "2019-11-11T19:43:18Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "075ddd98-cf99-43af-a38d-0b14e7baedec",
        "parentId" : "bb2900a8-fe5f-4af0-b7f3-0d322647dae3",
        "authorId" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "body" : "oh just understood this - yeah fixing. If v2.0 AND v1.0 are supported we should return the highest v1.0 version. Fixing now",
        "createdAt" : "2019-11-11T19:41:05Z",
        "updatedAt" : "2019-11-11T19:43:18Z",
        "lastEditedBy" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "tags" : [
        ]
      },
      {
        "id" : "7993965a-7ccf-4b89-82bc-23483ab544cf",
        "parentId" : "bb2900a8-fe5f-4af0-b7f3-0d322647dae3",
        "authorId" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "body" : "yep, fixed. In the code above it will skip any >v1 versions as a `highestSupportedVersion` candidate - so if a driver supports v2.0 and v1.5 the `highestSupportedVersion` will be `v1.5`",
        "createdAt" : "2019-11-11T22:24:53Z",
        "updatedAt" : "2019-11-11T22:24:56Z",
        "lastEditedBy" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "tags" : [
        ]
      }
    ],
    "commit" : "802fe12803c71b0ec9195202b77c94fb7a147287",
    "line" : 47,
    "diffHunk" : "@@ -1,1 +912,916 @@\t}\n\n\tif highestSupportedVersion.Major() != 1 {\n\t\t// CSI v0.x is no longer supported as of Kubernetes v1.17 in\n\t\t// accordance with deprecation policy set out in Kubernetes v1.13"
  },
  {
    "id" : "ec502bb7-b95e-4fcf-96af-7f5e17a70b65",
    "prId" : 82972,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/82972#pullrequestreview-292699553",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f8485462-407a-46bb-b4e0-1c7f278207f9",
        "parentId" : null,
        "authorId" : "f8f9446d-82d7-43cf-88d1-cecfb048866d",
        "body" : "@saad-ali do you know why we are skipping major version > 1? Do we want to make it a const?",
        "createdAt" : "2019-09-23T23:29:58Z",
        "updatedAt" : "2019-09-24T20:59:44Z",
        "lastEditedBy" : "f8f9446d-82d7-43cf-88d1-cecfb048866d",
        "tags" : [
        ]
      },
      {
        "id" : "7d490d8a-655a-4a44-bdbc-174b6572893c",
        "parentId" : "f8485462-407a-46bb-b4e0-1c7f278207f9",
        "authorId" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "body" : "If we define a constant, would it be defined in semver.go ?\r\n\r\n@saad-ali \r\nWhat do you think ?",
        "createdAt" : "2019-09-24T20:14:41Z",
        "updatedAt" : "2019-09-24T20:59:44Z",
        "lastEditedBy" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "tags" : [
        ]
      },
      {
        "id" : "9e948e9a-3229-4216-a199-c9187e0b2174",
        "parentId" : "f8485462-407a-46bb-b4e0-1c7f278207f9",
        "authorId" : "8e448017-7838-493d-a424-33cada0da657",
        "body" : "I believe the logic here was that CSI currently only has version 0.x and 1.x (see https://github.com/container-storage-interface/spec/releases). And therefore any driver claiming version 2.x+ is ignored as an unsupported versions. This is ok because future 1.x versions of CSI are supposed to be backwards compatible so this version of Kubernetes will work with any 1.x driver (or 0.x), but it may not work with 2.x drivers (because 2.x does not have to be backwards compatible with 1.x).\r\n\r\nMaking this a const, SGTM. Also, maybe add a comment capturing this, because I'm sure others reading the code will have the same question in the future.",
        "createdAt" : "2019-09-24T20:49:48Z",
        "updatedAt" : "2019-09-24T20:59:44Z",
        "lastEditedBy" : "8e448017-7838-493d-a424-33cada0da657",
        "tags" : [
        ]
      }
    ],
    "commit" : "23c7405fe0c91195060260113523596594209b46",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +900,904 @@\t\t\tcontinue\n\t\t}\n\t\tif currentHighestVer.Major() > 1 {\n\t\t\t// CSI currently only has version 0.x and 1.x (see https://github.com/container-storage-interface/spec/releases).\n\t\t\t// Therefore any driver claiming version 2.x+ is ignored as an unsupported versions."
  },
  {
    "id" : "04324574-e0c3-40ee-bb09-0eb671fd2990",
    "prId" : 80568,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/80568#pullrequestreview-270973564",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6cb63fa4-9823-4555-a1d9-9833af7f197b",
        "parentId" : null,
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "should this check be feature gated on CSIInlineVolume, since the volume mode field is controlled by that feature gate?",
        "createdAt" : "2019-08-02T22:36:01Z",
        "updatedAt" : "2019-08-22T06:59:14Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "1f7e01a9-8904-431b-a77d-cbfd0a037a8f",
        "parentId" : "6cb63fa4-9823-4555-a1d9-9833af7f197b",
        "authorId" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "body" : "That won't change much because the result \"should\" be the same also when the feature is disabled. But to avoid potential mistakes, I short-circuited the logic in `supportsVolumeMode`:\r\n```\r\nfunc (p *csiPlugin) supportsVolumeMode(driver string, volumeMode storage.CSIVolumeMode) error {\r\n\tif !utilfeature.DefaultFeatureGate.Enabled(features.CSIInlineVolume) {\r\n\t\t// Nothing to check, feature disabled.\r\n\t\treturn nil\r\n\t}\r\n```",
        "createdAt" : "2019-08-05T19:56:32Z",
        "updatedAt" : "2019-08-22T06:59:14Z",
        "lastEditedBy" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "tags" : [
        ]
      }
    ],
    "commit" : "8270fe81e4916b599c8a9a83552a5381b434dd7f",
    "line" : 41,
    "diffHunk" : "@@ -1,1 +368,372 @@\t}\n\n\t// Check CSIDriver.Spec.Mode to ensure that the CSI driver\n\t// supports the current volumeLifecycleMode.\n\tif err := p.supportsVolumeLifecycleMode(driverName, volumeLifecycleMode); err != nil {"
  },
  {
    "id" : "ea7c0afd-4908-4782-9061-7eb271550a4b",
    "prId" : 80568,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/80568#pullrequestreview-271303908",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9561be51-1e36-46dc-9757-58e284907eb0",
        "parentId" : null,
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "Should this actually return success only when volumeMode is Persistent?  If a user wants ephemeral mode, but then the cluster gets downgraded to a version where the feature is disabled, we probably don't want to continue mounting the volume as persistent.",
        "createdAt" : "2019-08-05T20:29:27Z",
        "updatedAt" : "2019-08-22T06:59:14Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "090b01b8-14ca-4fbb-afd4-524122071607",
        "parentId" : "9561be51-1e36-46dc-9757-58e284907eb0",
        "authorId" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "body" : "You are right. So I'll revert to the version I had before: `supportsVolumeMode` always has to be called, and depending on the current volume mode and the feature flag it'll decide whether kubelet is meant to go ahead.\r\n",
        "createdAt" : "2019-08-06T07:51:07Z",
        "updatedAt" : "2019-08-22T06:59:14Z",
        "lastEditedBy" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "tags" : [
        ]
      },
      {
        "id" : "08260f8f-327e-4320-8de8-f1899904a1b3",
        "parentId" : "9561be51-1e36-46dc-9757-58e284907eb0",
        "authorId" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "body" : "`supportsVolumeMode` rewritten, please have another look.\r\n",
        "createdAt" : "2019-08-06T12:18:48Z",
        "updatedAt" : "2019-08-22T06:59:14Z",
        "lastEditedBy" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "tags" : [
        ]
      }
    ],
    "commit" : "8270fe81e4916b599c8a9a83552a5381b434dd7f",
    "line" : 153,
    "diffHunk" : "@@ -1,1 +774,778 @@\t\t\treturn fmt.Errorf(\"CSIInlineVolume feature not enabled, %q volumes not supported\", volumeMode)\n\t\t}\n\t\treturn nil\n\t}\n"
  },
  {
    "id" : "7c9c13ed-df76-4358-915e-7ea0205e87af",
    "prId" : 79983,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/79983#pullrequestreview-266094710",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7388266b-5c59-4d94-9da5-cd87db133c2a",
        "parentId" : null,
        "authorId" : "54b8eb75-28dd-421d-a52b-63bf897147a9",
        "body" : "I have missed most recent discussions, is this a new mode being introduced where driver can operate in ether mode ?",
        "createdAt" : "2019-07-22T23:14:25Z",
        "updatedAt" : "2019-07-25T14:46:02Z",
        "lastEditedBy" : "54b8eb75-28dd-421d-a52b-63bf897147a9",
        "tags" : [
        ]
      },
      {
        "id" : "c4af070a-dbb2-41ac-bbe6-7caa968ab96d",
        "parentId" : "7388266b-5c59-4d94-9da5-cd87db133c2a",
        "authorId" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "body" : "Yes, exactly. KEP update is here: https://github.com/kubernetes/enhancements/pull/1129/files\r\n\r\nHostpath already implements that and supports both modes now: https://github.com/kubernetes-csi/csi-driver-host-path/pull/67\r\n",
        "createdAt" : "2019-07-23T07:45:28Z",
        "updatedAt" : "2019-07-25T14:46:02Z",
        "lastEditedBy" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "tags" : [
        ]
      },
      {
        "id" : "a34db4dc-99ce-4e13-bf69-846b13f2026c",
        "parentId" : "7388266b-5c59-4d94-9da5-cd87db133c2a",
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "These consts should be defined in the api. If the API is not there yet, then we should remember to remove these once we add it",
        "createdAt" : "2019-07-24T15:17:31Z",
        "updatedAt" : "2019-07-25T14:46:02Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      }
    ],
    "commit" : "4bc5d065c919fc239e2c8b40e6a96e409ca011fd",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +78,82 @@const persistentDriverMode driverMode = \"persistent\"\nconst ephemeralDriverMode driverMode = \"ephemeral\"\nconst combinedDriverMode driverMode = \"persistent+ephemeral\"\n\ntype csiVolumeMode string"
  },
  {
    "id" : "5c809cc9-84ff-42dd-9a46-2ffc3f1728e4",
    "prId" : 79529,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/79529#pullrequestreview-257210569",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2b64455a-1e7a-4d59-a34e-e06fe20fa927",
        "parentId" : null,
        "authorId" : "156ad04f-2e51-4f89-8894-641967cb026b",
        "body" : "Not sure what is the best default value. If the csiTimeout can be configurable like other csi sidecar do that will be better.",
        "createdAt" : "2019-06-28T16:14:56Z",
        "updatedAt" : "2019-06-28T16:15:41Z",
        "lastEditedBy" : "156ad04f-2e51-4f89-8894-641967cb026b",
        "tags" : [
        ]
      },
      {
        "id" : "6c145d5e-29ab-4ed2-9bd6-ce40de675a6e",
        "parentId" : "2b64455a-1e7a-4d59-a34e-e06fe20fa927",
        "authorId" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "body" : "@hoyho yes, but now I would like cherry-pick this fix to old release from 1.13 to 1.15, 15s is really too small, it makes the timeout a lot. And when user switch to use CSI driver, they won't be happy to  see that timeout issue every time.",
        "createdAt" : "2019-06-28T16:20:40Z",
        "updatedAt" : "2019-06-28T16:20:40Z",
        "lastEditedBy" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "tags" : [
        ]
      },
      {
        "id" : "a201cd39-2ae5-416a-bebb-f930a67f7d3e",
        "parentId" : "2b64455a-1e7a-4d59-a34e-e06fe20fa927",
        "authorId" : "156ad04f-2e51-4f89-8894-641967cb026b",
        "body" : "agree with you. For our CSI driver, 15s is not enough.",
        "createdAt" : "2019-06-28T16:36:17Z",
        "updatedAt" : "2019-06-28T16:36:17Z",
        "lastEditedBy" : "156ad04f-2e51-4f89-8894-641967cb026b",
        "tags" : [
        ]
      },
      {
        "id" : "a0b7b338-9c2c-4e48-a1d2-937670f29bea",
        "parentId" : "2b64455a-1e7a-4d59-a34e-e06fe20fa927",
        "authorId" : "c36d7654-ffec-4c9c-964e-b4b2e70085d0",
        "body" : "I also meet some issues caused by the default time. \r\n\r\nLGTM",
        "createdAt" : "2019-07-03T00:27:14Z",
        "updatedAt" : "2019-07-03T00:28:53Z",
        "lastEditedBy" : "c36d7654-ffec-4c9c-964e-b4b2e70085d0",
        "tags" : [
        ]
      }
    ],
    "commit" : "d8c92f5c0905b72536e6fd5c80b63dc869f13763",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +55,59 @@\t// for consistency.\n\tcsiAddrTemplate = \"/var/lib/kubelet/plugins/%v/csi.sock\"\n\tcsiTimeout      = 2 * time.Minute\n\tvolNameSep      = \"^\"\n\tvolDataFileName = \"vol_data.json\""
  },
  {
    "id" : "46448c23-2e29-4e80-acc1-78e5cfbb4971",
    "prId" : 76151,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/76151#pullrequestreview-223413710",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e865b27e-8d30-4cc0-98d6-7047a7d4c261",
        "parentId" : null,
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "Can we add some unit tests that actually trigger an error?",
        "createdAt" : "2019-04-05T01:27:55Z",
        "updatedAt" : "2019-04-08T20:54:51Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "a1adb1fb-4ba2-46e0-9c0e-6020f921637d",
        "parentId" : "e865b27e-8d30-4cc0-98d6-7047a7d4c261",
        "authorId" : "54b8eb75-28dd-421d-a52b-63bf897147a9",
        "body" : "@msau42 added tests.",
        "createdAt" : "2019-04-05T18:16:47Z",
        "updatedAt" : "2019-04-08T20:54:51Z",
        "lastEditedBy" : "54b8eb75-28dd-421d-a52b-63bf897147a9",
        "tags" : [
        ]
      }
    ],
    "commit" : "cfafde983b1f8e31b5c34180a9824a2c8d75642e",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +585,589 @@\tdriverMode, err := p.getDriverMode(spec)\n\tif err != nil {\n\t\treturn false, err\n\t}\n"
  },
  {
    "id" : "adefad0a-5f4b-447b-bf73-f13814e91347",
    "prId" : 75308,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/75308#pullrequestreview-213699271",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fa590c83-a24b-47fe-bec8-2316dc7920e1",
        "parentId" : null,
        "authorId" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "body" : "i get we want to skip informer init. but do we also want to skip `nodeinfomanager` init? Although we wont be able to use the nodeinfomanager since it just does apiserver stuff anyway, will `nim== nil` cause problems elsewhere?",
        "createdAt" : "2019-03-12T23:17:19Z",
        "updatedAt" : "2019-03-12T23:29:20Z",
        "lastEditedBy" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "tags" : [
        ]
      },
      {
        "id" : "ea9bac41-798e-471e-a008-9d6d2854fb8d",
        "parentId" : "fa590c83-a24b-47fe-bec8-2316dc7920e1",
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "changed to just skip informer initialization. and verified that the rest of plugin code checks for nil informer",
        "createdAt" : "2019-03-12T23:29:44Z",
        "updatedAt" : "2019-03-12T23:29:44Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      }
    ],
    "commit" : "398777f26120d94aae3941e2d785ecc37e6ea6fa",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +208,212 @@\t\tcsiClient := host.GetKubeClient()\n\t\tif csiClient == nil {\n\t\t\tklog.Warning(log(\"kubeclient not set, assuming standalone kubelet\"))\n\t\t} else {\n\t\t\t// Start informer for CSIDrivers."
  },
  {
    "id" : "0b769102-c755-4a01-97bb-147d2d6b6b3b",
    "prId" : 75129,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/75129#pullrequestreview-212587306",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "61ff3bdb-e5c5-467b-8f62-1140de8d2fd5",
        "parentId" : null,
        "authorId" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "body" : "Looks like we don't need this code that gets the KubeClient at all anymore after moving the informers.\r\n\r\nbut also nit: `kubeClient` not `csiClient`\r\n",
        "createdAt" : "2019-03-08T22:15:52Z",
        "updatedAt" : "2019-04-05T19:20:41Z",
        "lastEditedBy" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "tags" : [
        ]
      },
      {
        "id" : "5c356d6a-ae9d-443a-b556-b64ae73b1d2b",
        "parentId" : "61ff3bdb-e5c5-467b-8f62-1140de8d2fd5",
        "authorId" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "body" : "I think this is the part that's breaking standalone kubelet in the gke tests",
        "createdAt" : "2019-03-08T22:16:43Z",
        "updatedAt" : "2019-04-05T19:20:41Z",
        "lastEditedBy" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "tags" : [
        ]
      },
      {
        "id" : "f285bd58-670b-4403-82d3-dfa72c33f4c9",
        "parentId" : "61ff3bdb-e5c5-467b-8f62-1140de8d2fd5",
        "authorId" : "275dd783-53c3-4fed-8434-96ed6a2e0331",
        "body" : "Thanks!  Changed this.",
        "createdAt" : "2019-03-10T04:58:13Z",
        "updatedAt" : "2019-04-05T19:20:41Z",
        "lastEditedBy" : "275dd783-53c3-4fed-8434-96ed6a2e0331",
        "tags" : [
        ]
      }
    ],
    "commit" : "000ab86788d2b32da2d487b6f150b7313fd18be8",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +212,216 @@\tif utilfeature.DefaultFeatureGate.Enabled(features.CSIDriverRegistry) {\n\t\tcsiClient := host.GetKubeClient()\n\t\tif csiClient == nil {\n\t\t\tklog.Warning(log(\"kubeclient not set, assuming standalone kubelet\"))\n\t\t} else {"
  },
  {
    "id" : "5252005c-e41e-4c46-986a-12f6a12febed",
    "prId" : 75129,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/75129#pullrequestreview-215333675",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8307fd8f-993a-414d-b124-ca476da9ff34",
        "parentId" : null,
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "Do we need to store csiDriverLister here, or can we just get it from the volumehost when we need it?",
        "createdAt" : "2019-03-10T19:00:45Z",
        "updatedAt" : "2019-04-05T19:20:41Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "84714991-fb4e-4349-b67b-3f7e96826b6b",
        "parentId" : "8307fd8f-993a-414d-b124-ca476da9ff34",
        "authorId" : "275dd783-53c3-4fed-8434-96ed6a2e0331",
        "body" : "It's more convenient to keep it here, but maybe not required.",
        "createdAt" : "2019-03-11T19:58:33Z",
        "updatedAt" : "2019-04-05T19:20:41Z",
        "lastEditedBy" : "275dd783-53c3-4fed-8434-96ed6a2e0331",
        "tags" : [
        ]
      },
      {
        "id" : "beaf99f0-ce3d-4e2e-8512-6e59b30b01c2",
        "parentId" : "8307fd8f-993a-414d-b124-ca476da9ff34",
        "authorId" : "275dd783-53c3-4fed-8434-96ed6a2e0331",
        "body" : "Removed csiDriverLister from csiPlugin struct.",
        "createdAt" : "2019-03-11T20:41:55Z",
        "updatedAt" : "2019-04-05T19:20:41Z",
        "lastEditedBy" : "275dd783-53c3-4fed-8434-96ed6a2e0331",
        "tags" : [
        ]
      },
      {
        "id" : "8853b4aa-a4a4-475e-b236-8d4fa4a00894",
        "parentId" : "8307fd8f-993a-414d-b124-ca476da9ff34",
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "It's still here, but now I see that we may actually still need it. Because the skipAttach() check runs on both AD controller and kubelet.",
        "createdAt" : "2019-03-17T04:41:18Z",
        "updatedAt" : "2019-04-05T19:20:41Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      }
    ],
    "commit" : "000ab86788d2b32da2d487b6f150b7313fd18be8",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +69,73 @@\thost            volume.VolumeHost\n\tblockEnabled    bool\n\tcsiDriverLister storagelisters.CSIDriverLister\n}\n"
  },
  {
    "id" : "c65a9ea8-e33d-43cb-9929-f95bd288f0cf",
    "prId" : 74835,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/74835#pullrequestreview-210770042",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c6910255-8807-4a38-a8a6-1bf05fdf7c72",
        "parentId" : null,
        "authorId" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "body" : "Where this value comes from? Is the delay expected to grow so quickly? A comment would be nice.",
        "createdAt" : "2019-03-05T16:13:01Z",
        "updatedAt" : "2019-03-08T01:17:26Z",
        "lastEditedBy" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "tags" : [
        ]
      }
    ],
    "commit" : "41b3579345ff761a54ec56e2afc2d2d2ce6f56e5",
    "line" : 73,
    "diffHunk" : "@@ -1,1 +269,273 @@\t\t\tSteps:    6,\n\t\t\tDuration: 15 * time.Millisecond,\n\t\t\tFactor:   6.0,\n\t\t\tJitter:   0.1,\n\t\t}"
  },
  {
    "id" : "37bda026-225d-4011-80d2-88ca8c52cf97",
    "prId" : 74835,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/74835#pullrequestreview-211957606",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5bbfebac-6036-467a-ac65-162206a88982",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "once the migration is complete (in N releases) and all kubelets are assumed to have migration enabled, will we be able to drop this from kubelet startup?",
        "createdAt" : "2019-03-07T05:13:27Z",
        "updatedAt" : "2019-03-08T01:17:26Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "a09d03e8-3576-410e-ab48-ecf4b0922f31",
        "parentId" : "5bbfebac-6036-467a-ac65-162206a88982",
        "authorId" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "body" : "yes we will be able to drop usage of the annotation entirely. The only purpose of this entire PR is to facilitate synchronization between ADC and Kubelet with version/config skew.",
        "createdAt" : "2019-03-07T18:47:49Z",
        "updatedAt" : "2019-03-08T01:17:26Z",
        "lastEditedBy" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "tags" : [
        ]
      },
      {
        "id" : "e1c758dd-ca4c-4d56-a378-bd921c18354d",
        "parentId" : "5bbfebac-6036-467a-ac65-162206a88982",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "ok. it would be helpful to note the plans for this in a comment (e.g. `x releases after migration is permanently enabled, and the apiserver can assume the kubelet is using CSI, this can be dropped from the kubelet`)",
        "createdAt" : "2019-03-07T18:50:27Z",
        "updatedAt" : "2019-03-08T01:17:26Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "41b3579345ff761a54ec56e2afc2d2d2ce6f56e5",
    "line" : 95,
    "diffHunk" : "@@ -1,1 +291,295 @@\t\t\t// code can be dropped from Kubelet.\n\t\t\t// Kill the Kubelet process and allow it to restart to retry initialization\n\t\t\tklog.Fatalf(\"Failed to initialize CSINodeInfo after retrying\")\n\t\t}\n\t}()"
  },
  {
    "id" : "e6cbd7bc-20b0-41e6-8868-c3aa08a01d08",
    "prId" : 74283,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/74283#pullrequestreview-210289010",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "738e4c5f-6fa0-4460-b990-fda29168e1f6",
        "parentId" : null,
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "Now that we're using core APIs, we should be able to use the shared informer instead of creating a new shared informer factory.  I'm ok with refactoring this in a separate pr so that we can get the API published and sidecar dependencies updated.",
        "createdAt" : "2019-03-04T17:57:41Z",
        "updatedAt" : "2019-03-05T00:42:58Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "afe40ede-858c-4fb4-a1ff-858312933fe1",
        "parentId" : "738e4c5f-6fa0-4460-b990-fda29168e1f6",
        "authorId" : "275dd783-53c3-4fed-8434-96ed6a2e0331",
        "body" : "Will do in a separate PR.",
        "createdAt" : "2019-03-04T18:10:22Z",
        "updatedAt" : "2019-03-05T00:42:58Z",
        "lastEditedBy" : "275dd783-53c3-4fed-8434-96ed6a2e0331",
        "tags" : [
        ]
      }
    ],
    "commit" : "d69e0ff3f0547cc1acc6b35af1e6b93b90ed0e45",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +211,215 @@\t\t}\n\t\t// Start informer for CSIDrivers.\n\t\tfactory := csiapiinformer.NewSharedInformerFactory(csiClient, csiResyncPeriod)\n\t\tp.csiDriverInformer = factory.Storage().V1beta1().CSIDrivers()\n\t\tp.csiDriverLister = p.csiDriverInformer.Lister()"
  },
  {
    "id" : "3b52dc9a-be8d-40b1-a4e6-dedec4c83595",
    "prId" : 74086,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/74086#pullrequestreview-211045873",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e89ef558-c226-41f1-982f-6bb87fe6b090",
        "parentId" : null,
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "don't need this return. we can let it fall through like it originally does",
        "createdAt" : "2019-03-02T02:47:19Z",
        "updatedAt" : "2019-03-08T17:42:34Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "457d7d94-af72-492b-8cce-25bc3769df73",
        "parentId" : "e89ef558-c226-41f1-982f-6bb87fe6b090",
        "authorId" : "54b8eb75-28dd-421d-a52b-63bf897147a9",
        "body" : "if return is removed, then `!skipAttached` is returned evaluated to `true`. ",
        "createdAt" : "2019-03-06T05:08:31Z",
        "updatedAt" : "2019-03-08T17:42:34Z",
        "lastEditedBy" : "54b8eb75-28dd-421d-a52b-63bf897147a9",
        "tags" : [
        ]
      }
    ],
    "commit" : "923ad369c8a65c8aac47b22457e7e18bbcc1f335",
    "line" : 219,
    "diffHunk" : "@@ -1,1 +606,610 @@\tif err != nil {\n\t\tklog.Error(log(\"plugin.CanAttach error when calling plugin.skipAttach for driver %s: %s\", driverName, err))\n\t\treturn false\n\t}\n"
  },
  {
    "id" : "584f35f8-99b7-4cac-8177-e89d1716c20c",
    "prId" : 74086,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/74086#pullrequestreview-211422002",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cbfbd731-e864-4639-ac1e-81c112f68369",
        "parentId" : null,
        "authorId" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "body" : "If new kubelet is started with json files produced by old kubelet, then driverMode is going to be empty. It should fall into `persistentDriverMode` below.",
        "createdAt" : "2019-03-06T15:33:35Z",
        "updatedAt" : "2019-03-08T17:42:34Z",
        "lastEditedBy" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "tags" : [
        ]
      },
      {
        "id" : "bb9bec15-6c6d-48f2-a864-376468a10849",
        "parentId" : "cbfbd731-e864-4639-ac1e-81c112f68369",
        "authorId" : "54b8eb75-28dd-421d-a52b-63bf897147a9",
        "body" : "great catch. Thanks.",
        "createdAt" : "2019-03-06T17:41:25Z",
        "updatedAt" : "2019-03-08T17:42:34Z",
        "lastEditedBy" : "54b8eb75-28dd-421d-a52b-63bf897147a9",
        "tags" : [
        ]
      },
      {
        "id" : "021e7e0a-94df-4c86-a559-358db262fb03",
        "parentId" : "cbfbd731-e864-4639-ac1e-81c112f68369",
        "authorId" : "54b8eb75-28dd-421d-a52b-63bf897147a9",
        "body" : " fixed.",
        "createdAt" : "2019-03-06T19:16:33Z",
        "updatedAt" : "2019-03-08T17:42:34Z",
        "lastEditedBy" : "54b8eb75-28dd-421d-a52b-63bf897147a9",
        "tags" : [
        ]
      }
    ],
    "commit" : "923ad369c8a65c8aac47b22457e7e18bbcc1f335",
    "line" : 127,
    "diffHunk" : "@@ -1,1 +482,486 @@\n\tif inlineEnabled {\n\t\tmode := driverMode(volData[volDataKey.driverMode])\n\t\tswitch {\n\t\tcase mode == ephemeralDriverMode:"
  },
  {
    "id" : "1ae392a9-3c4f-4e12-b2d4-1b2f6ff29463",
    "prId" : 74086,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/74086#pullrequestreview-211439605",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9a3bed63-9480-4744-8815-1fa9b15ee6a7",
        "parentId" : null,
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "this can probably be simplified by:\r\n```\r\nif inlineEnabled && ephemeralDriverMode {\r\n  constructVolSource\r\n} else {\r\n  constructPVSource\r\n}\r\n```",
        "createdAt" : "2019-03-06T19:51:45Z",
        "updatedAt" : "2019-03-08T17:42:34Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      }
    ],
    "commit" : "923ad369c8a65c8aac47b22457e7e18bbcc1f335",
    "line" : 126,
    "diffHunk" : "@@ -1,1 +481,485 @@\tinlineEnabled := utilfeature.DefaultFeatureGate.Enabled(features.CSIInlineVolume)\n\n\tif inlineEnabled {\n\t\tmode := driverMode(volData[volDataKey.driverMode])\n\t\tswitch {"
  },
  {
    "id" : "b1e62d13-f01c-4ca5-ac3b-0b59f49fe372",
    "prId" : 74086,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/74086#pullrequestreview-211539922",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5ddfe962-71a5-4f90-bdd3-831f8267e643",
        "parentId" : null,
        "authorId" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "body" : "should this be `volumeHandle:`",
        "createdAt" : "2019-03-07T00:10:22Z",
        "updatedAt" : "2019-03-08T17:42:34Z",
        "lastEditedBy" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "tags" : [
        ]
      }
    ],
    "commit" : "923ad369c8a65c8aac47b22457e7e18bbcc1f335",
    "line" : 91,
    "diffHunk" : "@@ -1,1 +397,401 @@\t\tdriverName:   csiDriverName(driverName),\n\t\tdriverMode:   driverMode,\n\t\tvolumeID:     volumeHandle,\n\t\tspecVolumeID: spec.Name(),\n\t\tcsiClient:    csi,"
  },
  {
    "id" : "a2378577-a366-4f36-b81a-1cbe2ac2e6d6",
    "prId" : 74086,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/74086#pullrequestreview-211845051",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8336d674-6ff0-4fbe-bca7-e44c09368632",
        "parentId" : null,
        "authorId" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "body" : "are we going to have issues adding/dropping fields from the `volData` object between Kubernetes versions? Just modifying the jsons like this will cause data incompatibility (maybe crashes). The answer may be that we don't care since we're probably draining the nodes on upgrades but just want to make sure.\r\n\r\nIf we want to support files produced by old Kubelet in the future we may want to consider using protobuf and use proto best practices to ensure backwards/forwards support\r\n\r\n@msau42 @saad-ali @jsafrane ",
        "createdAt" : "2019-03-07T00:13:07Z",
        "updatedAt" : "2019-03-08T17:42:34Z",
        "lastEditedBy" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "tags" : [
        ]
      },
      {
        "id" : "d6d270b1-211a-4565-96f2-de87f29feaeb",
        "parentId" : "8336d674-6ff0-4fbe-bca7-e44c09368632",
        "authorId" : "54b8eb75-28dd-421d-a52b-63bf897147a9",
        "body" : "It is only an addition of field here (`volData[driverMode]`). Nothing is removed to avoid exactly the issue you stated. Older k8s will not ask for a missing field.",
        "createdAt" : "2019-03-07T15:24:38Z",
        "updatedAt" : "2019-03-08T17:42:34Z",
        "lastEditedBy" : "54b8eb75-28dd-421d-a52b-63bf897147a9",
        "tags" : [
        ]
      }
    ],
    "commit" : "923ad369c8a65c8aac47b22457e7e18bbcc1f335",
    "line" : 110,
    "diffHunk" : "@@ -1,1 +420,424 @@\t\tvolDataKey.driverName: driverName,\n\t\tvolDataKey.nodeName:   node,\n\t\tvolDataKey.driverMode: string(driverMode),\n\t}\n"
  },
  {
    "id" : "2a2b04bd-1f92-4c09-b298-8e7fb70d6a1c",
    "prId" : 74086,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/74086#pullrequestreview-211539922",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c7325387-fa35-463a-8bee-5359ec992b8a",
        "parentId" : null,
        "authorId" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "body" : "nit: TODO format `TODO(#issuenumber): description`",
        "createdAt" : "2019-03-07T00:15:25Z",
        "updatedAt" : "2019-03-08T17:42:34Z",
        "lastEditedBy" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "tags" : [
        ]
      }
    ],
    "commit" : "923ad369c8a65c8aac47b22457e7e18bbcc1f335",
    "line" : 187,
    "diffHunk" : "@@ -1,1 +582,586 @@}\n\n// TODO change CanAttach to return error to propagate ability\n// to support Attachment or an error - see https://github.com/kubernetes/kubernetes/issues/74810\nfunc (p *csiPlugin) CanAttach(spec *volume.Spec) bool {"
  },
  {
    "id" : "f6ef16a6-0665-43c7-b03c-a18a97c233d8",
    "prId" : 74086,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/74086#pullrequestreview-211539922",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "61948baf-d743-4169-a7b6-7f96e039e351",
        "parentId" : null,
        "authorId" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "body" : "Please create an issue and link here",
        "createdAt" : "2019-03-07T00:15:50Z",
        "updatedAt" : "2019-03-08T17:42:34Z",
        "lastEditedBy" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "tags" : [
        ]
      }
    ],
    "commit" : "923ad369c8a65c8aac47b22457e7e18bbcc1f335",
    "line" : 241,
    "diffHunk" : "@@ -1,1 +786,790 @@// See https://github.com/kubernetes/enhancements/blob/master/keps/sig-storage/20190122-csi-inline-volumes.md\nfunc (p *csiPlugin) getDriverMode(spec *volume.Spec) (driverMode, error) {\n\t// TODO (vladimirvivien) ultimately, mode will be retrieved from CSIDriver.Spec.Mode.\n\t// However, in alpha version, mode is determined by the volume source:\n\t// 1) if volume.Spec.Volume.CSI != nil -> mode is ephemeral"
  },
  {
    "id" : "93f85b9a-9646-4f41-91b1-5ea0de51e219",
    "prId" : 74086,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/74086#pullrequestreview-211539922",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7d8c7dd5-06be-4e6e-b872-a1953c3a965d",
        "parentId" : null,
        "authorId" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "body" : "This case is being checked implicitly by logic inside `getSourceFromSpec` and is hard to follow.\r\nI would prefer both `volSrc` and `pvSrc` are returned and checked for nil",
        "createdAt" : "2019-03-07T00:16:30Z",
        "updatedAt" : "2019-03-08T17:42:34Z",
        "lastEditedBy" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "tags" : [
        ]
      }
    ],
    "commit" : "923ad369c8a65c8aac47b22457e7e18bbcc1f335",
    "line" : 244,
    "diffHunk" : "@@ -1,1 +789,793 @@\t// However, in alpha version, mode is determined by the volume source:\n\t// 1) if volume.Spec.Volume.CSI != nil -> mode is ephemeral\n\t// 2) if volume.Spec.PersistentVolume.Spec.CSI != nil -> persistent\n\tvolSrc, _, err := getSourceFromSpec(spec)\n\tif err != nil {"
  },
  {
    "id" : "b0511063-19f3-4e06-8582-c08c2741b5a1",
    "prId" : 74086,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/74086#pullrequestreview-211539922",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ffc8ada7-d41e-4e29-808c-99355dc11b91",
        "parentId" : null,
        "authorId" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "body" : "this statement is not true. If mode cannot be determined (nothing in the spec) the code throws an error. Please update comment or code ",
        "createdAt" : "2019-03-07T00:18:08Z",
        "updatedAt" : "2019-03-08T17:42:34Z",
        "lastEditedBy" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "tags" : [
        ]
      }
    ],
    "commit" : "923ad369c8a65c8aac47b22457e7e18bbcc1f335",
    "line" : 237,
    "diffHunk" : "@@ -1,1 +782,786 @@\n// getDriverMode returns the driver mode for the specified spec: {persistent|ephemeral}.\n// 1) If mode cannot be determined, it will default to \"persistent\".\n// 2) If Mode cannot be resolved to either {persistent | ephemeral}, an error is returned\n// See https://github.com/kubernetes/enhancements/blob/master/keps/sig-storage/20190122-csi-inline-volumes.md"
  },
  {
    "id" : "bb31d968-8281-47ea-bc33-146aaff2598f",
    "prId" : 67898,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/67898#pullrequestreview-150368397",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "403adc83-5931-46a4-a26c-e3628e22aeea",
        "parentId" : null,
        "authorId" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "body" : "I'm looking at the CSI spec and I think that every driver should support `mount_flags`. Of course, a driver may return some error when an invalid flag is set (or even when *any* flag is set), but that's up to system admin to fix.\r\n\r\nI think we don't need the comments around and we can return `true` without any regrets.\r\n",
        "createdAt" : "2018-08-27T15:31:53Z",
        "updatedAt" : "2018-10-12T16:18:59Z",
        "lastEditedBy" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "tags" : [
        ]
      },
      {
        "id" : "33573c5f-0991-48d5-be9d-f3f68c59206e",
        "parentId" : "403adc83-5931-46a4-a26c-e3628e22aeea",
        "authorId" : "61f426fc-ef91-47d4-9d27-f5a1dd2b265b",
        "body" : "Well one could imagine a CSI driver that doesn't support mount options yet, or for which mount options are irrelevant. In those cases, returning false here would allow kubernetes to report an actual useful error message instead of hiding any error messages down in some CSI driver log or silently ignoring mount options.",
        "createdAt" : "2018-08-27T16:05:54Z",
        "updatedAt" : "2018-10-12T16:18:59Z",
        "lastEditedBy" : "61f426fc-ef91-47d4-9d27-f5a1dd2b265b",
        "tags" : [
        ]
      },
      {
        "id" : "037e99c5-739b-4677-bfea-96b53c46986d",
        "parentId" : "403adc83-5931-46a4-a26c-e3628e22aeea",
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "The CSI spec says that the all the volume capabilities must be validated by the driver.  So a properly implemented CSI driver should error on any invalid or unsupported volume capability.\r\n\r\nThe question I have is what happens in the future if a new volume capability is added?  Will plugins have to explicitly upgrade their proto version to see the new field or will it show up as an optional pointer?",
        "createdAt" : "2018-08-27T17:57:19Z",
        "updatedAt" : "2018-10-12T16:18:59Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "27afcdce-0a78-4644-8748-b6968f4cdc6c",
        "parentId" : "403adc83-5931-46a4-a26c-e3628e22aeea",
        "authorId" : "61f426fc-ef91-47d4-9d27-f5a1dd2b265b",
        "body" : "I can't answer the question about future capabilities and how existing drivers can validate them, but I agree with your point about existing validation of mount options. A driver has the ability to reject requests with mount option now, if it doesn't support them. Of course drivers can also silently ignore them, but there's not much we can do about that.",
        "createdAt" : "2018-08-28T15:28:42Z",
        "updatedAt" : "2018-10-12T16:18:59Z",
        "lastEditedBy" : "61f426fc-ef91-47d4-9d27-f5a1dd2b265b",
        "tags" : [
        ]
      },
      {
        "id" : "13bdfc6e-87b9-4ba2-bcd6-aa068c576040",
        "parentId" : "403adc83-5931-46a4-a26c-e3628e22aeea",
        "authorId" : "8e448017-7838-493d-a424-33cada0da657",
        "body" : "> The CSI spec says that the all the volume capabilities must be validated by the driver. So a properly implemented CSI driver should error on any invalid or unsupported volume capability.\r\n> \r\n> The question I have is what happens in the future if a new volume capability is added? Will plugins have to explicitly upgrade their proto version to see the new field or will it show up as an optional pointer?\r\n\r\nGood question. AFAIK proto backwards compat means that it won't show up in the request. Should bring this up in the CSI community meeting.",
        "createdAt" : "2018-08-29T00:47:11Z",
        "updatedAt" : "2018-10-12T16:18:59Z",
        "lastEditedBy" : "8e448017-7838-493d-a424-33cada0da657",
        "tags" : [
        ]
      }
    ],
    "commit" : "85b224856d67611060402ae7e6da047ee9aff35f",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +334,338 @@\t// TODO (vladimirvivien) use CSI VolumeCapability.MountVolume.mount_flags\n\t// to probe for the result for this method\n\t// (bswartz) Until the CSI spec supports probing, our only option is to\n\t// make plugins register their support for mount options or lack thereof\n\t// directly with kubernetes."
  },
  {
    "id" : "083222ba-cee1-4015-848b-1a77ca7fccf7",
    "prId" : 66378,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/66378#pullrequestreview-138921246",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cc8ac21f-ea3e-4e50-9a7b-541c492d35a9",
        "parentId" : null,
        "authorId" : "fa530650-5886-4415-a42f-0dee2e0e9ae3",
        "body" : "haha, looks like someone was using vim ;)",
        "createdAt" : "2018-07-20T03:50:36Z",
        "updatedAt" : "2018-07-20T03:50:36Z",
        "lastEditedBy" : "fa530650-5886-4415-a42f-0dee2e0e9ae3",
        "tags" : [
        ]
      }
    ],
    "commit" : "43f805b7bdda7a5b491d34611f85c249a63d7f97",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +270,274 @@func (p *csiPlugin) SupportsMountOption() bool {\n\t// TODO (vladimirvivien) use CSI VolumeCapability.MountVolume.mount_flags\n\t// to probe for the result for this method\n\treturn false\n}"
  },
  {
    "id" : "3f378274-1ff8-414f-ad39-c5b3d37c6715",
    "prId" : 65456,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/65456#pullrequestreview-133168948",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "72412da5-0228-4972-9064-0f351d7eab11",
        "parentId" : null,
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "Add a unit test",
        "createdAt" : "2018-06-26T00:30:30Z",
        "updatedAt" : "2018-06-29T10:02:21Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "bde3579a-4039-4825-9ba1-72bda664784d",
        "parentId" : "72412da5-0228-4972-9064-0f351d7eab11",
        "authorId" : "0dc4901f-ee41-4b0e-85e8-9f5ec36ce184",
        "body" : "@msau42 Added",
        "createdAt" : "2018-06-29T10:02:54Z",
        "updatedAt" : "2018-06-29T10:02:55Z",
        "lastEditedBy" : "0dc4901f-ee41-4b0e-85e8-9f5ec36ce184",
        "tags" : [
        ]
      }
    ],
    "commit" : "0df13e7d1833955f34695c216f8cefa3601f8ff7",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +249,253 @@\tglog.V(4).Info(log(\"plugin.ConstructVolumeSpec extracted [%#v]\", volData))\n\n\tfsMode := api.PersistentVolumeFilesystem\n\tpv := &api.PersistentVolume{\n\t\tObjectMeta: meta.ObjectMeta{"
  },
  {
    "id" : "dcb33504-e838-4ded-b2db-60aef7c98bef",
    "prId" : 64621,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/64621#pullrequestreview-152913871",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8f220886-eed1-4918-8b0b-ccc94f7d648f",
        "parentId" : null,
        "authorId" : "7b10c627-72bd-4617-bd7a-2296b88861b7",
        "body" : "what's the behavior of deregistion? what's in my mind including direct signal from plugin, or notify of removing socket file of plugin. would like to hear your advise.",
        "createdAt" : "2018-09-06T08:25:00Z",
        "updatedAt" : "2018-09-06T13:35:15Z",
        "lastEditedBy" : "7b10c627-72bd-4617-bd7a-2296b88861b7",
        "tags" : [
        ]
      },
      {
        "id" : "e5b05c65-52bf-428d-84cc-dbc8f9393581",
        "parentId" : "8f220886-eed1-4918-8b0b-ccc94f7d648f",
        "authorId" : "ac146833-f0d6-4680-968a-749269c0d55d",
        "body" : "For CSI this is still in discussion. DeRegistration should be called when a plugin removes its socket.",
        "createdAt" : "2018-09-06T12:53:08Z",
        "updatedAt" : "2018-09-06T13:35:15Z",
        "lastEditedBy" : "ac146833-f0d6-4680-968a-749269c0d55d",
        "tags" : [
        ]
      }
    ],
    "commit" : "8dd1d27c0345a3b288ce3e99cb47b2d00bd219a4",
    "line" : 84,
    "diffHunk" : "@@ -1,1 +151,155 @@// it is no longer available\n// TODO: Handle DeRegistration\nfunc (h *RegistrationHandler) DeRegisterPlugin(pluginName string) {\n}\n"
  },
  {
    "id" : "42c63e97-332e-484e-b1bc-a70a31297ded",
    "prId" : 64560,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/64560#pullrequestreview-125372349",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3d423a35-0eff-404f-83d0-de74638b7bbf",
        "parentId" : null,
        "authorId" : "54b8eb75-28dd-421d-a52b-63bf897147a9",
        "body" : "Curious why you are no longer using the `sync.Map`  type any more.",
        "createdAt" : "2018-06-02T17:02:39Z",
        "updatedAt" : "2018-06-04T20:54:37Z",
        "lastEditedBy" : "54b8eb75-28dd-421d-a52b-63bf897147a9",
        "tags" : [
        ]
      },
      {
        "id" : "f50d754a-0dd9-40c9-bedb-a20420c48f0d",
        "parentId" : "3d423a35-0eff-404f-83d0-de74638b7bbf",
        "authorId" : "6c37c694-3f72-4ff3-ac3a-5fbddf4d5796",
        "body" : "There was a comment about sync.Map suggesting that it is not strong typed. So I switched back to a simple map with mutex.",
        "createdAt" : "2018-06-02T17:47:55Z",
        "updatedAt" : "2018-06-04T20:54:37Z",
        "lastEditedBy" : "6c37c694-3f72-4ff3-ac3a-5fbddf4d5796",
        "tags" : [
        ]
      }
    ],
    "commit" : "ea474cd99cb4eb769bf8d80885edd817e2fe739f",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +69,73 @@\ntype csiDriversStore struct {\n\tdriversMap map[string]csiDriver\n\tsync.RWMutex\n}"
  },
  {
    "id" : "beebe669-eeff-4178-b529-1f298381b21d",
    "prId" : 64560,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/64560#pullrequestreview-125734291",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b34cc5cb-b7b9-4f44-9f50-f5fc7a71c453",
        "parentId" : null,
        "authorId" : "a5ac91f3-1cbc-4fd9-af85-741ee28dd9c8",
        "body" : "Golint arg-order: error should be the last type when returning multiple items. <!-- golint -->",
        "createdAt" : "2018-06-04T20:18:38Z",
        "updatedAt" : "2018-06-04T20:54:37Z",
        "lastEditedBy" : "a5ac91f3-1cbc-4fd9-af85-741ee28dd9c8",
        "tags" : [
        ]
      },
      {
        "id" : "d496424c-808f-43f4-b389-25cc3a5cca20",
        "parentId" : "b34cc5cb-b7b9-4f44-9f50-f5fc7a71c453",
        "authorId" : "6c37c694-3f72-4ff3-ac3a-5fbddf4d5796",
        "body" : "Due to the kubelet's function returning variable in this order.",
        "createdAt" : "2018-06-04T20:40:49Z",
        "updatedAt" : "2018-06-04T20:54:37Z",
        "lastEditedBy" : "6c37c694-3f72-4ff3-ac3a-5fbddf4d5796",
        "tags" : [
        ]
      }
    ],
    "commit" : "ea474cd99cb4eb769bf8d80885edd817e2fe739f",
    "line" : 39,
    "diffHunk" : "@@ -1,1 +81,85 @@// RegistrationCallback is called by kubelet's plugin watcher upon detection\n// of a new registration socket opened by CSI Driver registrar side car.\nfunc RegistrationCallback(pluginName string, endpoint string, versions []string, socketPath string) (error, chan bool) {\n\n\tglog.Infof(log(\"Callback from kubelet with plugin name: %s endpoint: %s versions: %s socket path: %s\","
  },
  {
    "id" : "25150186-ac04-4025-a03e-89cf31127a50",
    "prId" : 64560,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/64560#pullrequestreview-125795791",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2ad6f8d3-12cb-4dbb-aa57-03210575f37d",
        "parentId" : null,
        "authorId" : "51f59c69-efc0-451a-bd8f-d9fa2c281fd3",
        "body" : "may be we should use verbose level like V(4)",
        "createdAt" : "2018-06-05T01:15:29Z",
        "updatedAt" : "2018-06-05T01:15:29Z",
        "lastEditedBy" : "51f59c69-efc0-451a-bd8f-d9fa2c281fd3",
        "tags" : [
        ]
      },
      {
        "id" : "1787afd6-65da-43ed-8e19-e322e0ea14dc",
        "parentId" : "2ad6f8d3-12cb-4dbb-aa57-03210575f37d",
        "authorId" : "6c37c694-3f72-4ff3-ac3a-5fbddf4d5796",
        "body" : "Will change it once the feature becomes more mature/beta. For now we need to see this but without trigger 10 million of other messages.",
        "createdAt" : "2018-06-05T01:44:32Z",
        "updatedAt" : "2018-06-05T01:44:32Z",
        "lastEditedBy" : "6c37c694-3f72-4ff3-ac3a-5fbddf4d5796",
        "tags" : [
        ]
      }
    ],
    "commit" : "ea474cd99cb4eb769bf8d80885edd817e2fe739f",
    "line" : 41,
    "diffHunk" : "@@ -1,1 +83,87 @@func RegistrationCallback(pluginName string, endpoint string, versions []string, socketPath string) (error, chan bool) {\n\n\tglog.Infof(log(\"Callback from kubelet with plugin name: %s endpoint: %s versions: %s socket path: %s\",\n\t\tpluginName, endpoint, strings.Join(versions, \",\"), socketPath))\n"
  },
  {
    "id" : "de68be50-1137-413c-9275-908883742927",
    "prId" : 58762,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/58762#pullrequestreview-97035162",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0127d80a-7ef8-4ea9-bd27-6f51d4b22e5c",
        "parentId" : null,
        "authorId" : "54b8eb75-28dd-421d-a52b-63bf897147a9",
        "body" : "@musse this should already be there, why adding it here?",
        "createdAt" : "2018-02-15T22:41:38Z",
        "updatedAt" : "2018-02-22T12:38:00Z",
        "lastEditedBy" : "54b8eb75-28dd-421d-a52b-63bf897147a9",
        "tags" : [
        ]
      },
      {
        "id" : "eebaa5bd-c603-4b08-b31c-0e2ed3783bd6",
        "parentId" : "0127d80a-7ef8-4ea9-bd27-6f51d4b22e5c",
        "authorId" : "48817c84-2856-4959-b284-9e22a831a231",
        "body" : "I only removed the spaces before the `=` sign.",
        "createdAt" : "2018-02-15T22:49:03Z",
        "updatedAt" : "2018-02-22T12:38:00Z",
        "lastEditedBy" : "48817c84-2856-4959-b284-9e22a831a231",
        "tags" : [
        ]
      }
    ],
    "commit" : "6c16b2c066bb61d61ced56099537e55f6858dde1",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +32,36 @@\nconst (\n\tcsiPluginName = \"kubernetes.io/csi\"\n\n\t// TODO (vladimirvivien) implement a more dynamic way to discover"
  },
  {
    "id" : "ebea5e60-0cbc-4651-9334-d5acfd965902",
    "prId" : 54529,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/54529#pullrequestreview-77393616",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e1ef57d4-01dc-43fb-a8ef-4cca5291ccc3",
        "parentId" : null,
        "authorId" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "body" : "ProbeVolumePlugins is ok for now (with hardcoded socket), but it should be called dynamically when kubelet discovers a new CSI driver on the machine. Some TODO comment would be nice.\r\n\r\nI assume in future there will be multiple instances of `csiPlugin`, one for each driver (following the Flex model).",
        "createdAt" : "2017-11-14T14:46:46Z",
        "updatedAt" : "2017-11-22T01:22:10Z",
        "lastEditedBy" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "tags" : [
        ]
      },
      {
        "id" : "16e5942c-c787-4da0-8a6c-85c2b51928bf",
        "parentId" : "e1ef57d4-01dc-43fb-a8ef-4cca5291ccc3",
        "authorId" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "body" : "> multiple instances of csiPlugin, one for each driver \r\n\r\nWell... this is going to be very interesting. There will be **multiple instances** of csiPlugin, one for each driver **only on nodes**. Controller-manager (provisioner, a/d controller) will have **one** instance of the plugin for all CSI drivers - there is no way how to enumerate drivers on master.\r\n\r\nIt *should* work, however we need to test it carefuly.",
        "createdAt" : "2017-11-14T14:49:08Z",
        "updatedAt" : "2017-11-22T01:22:10Z",
        "lastEditedBy" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "tags" : [
        ]
      },
      {
        "id" : "b485765b-e11f-4664-bc69-902a0ac1ae14",
        "parentId" : "e1ef57d4-01dc-43fb-a8ef-4cca5291ccc3",
        "authorId" : "54b8eb75-28dd-421d-a52b-63bf897147a9",
        "body" : "@jsafrane agreed, will add TODO.  Discovery is still not clear and we definitely need to come back and careful tests.  Solution can be as simple as a known path for socket (a la flexvolume) or resource registry.",
        "createdAt" : "2017-11-17T10:30:19Z",
        "updatedAt" : "2017-11-22T01:22:10Z",
        "lastEditedBy" : "54b8eb75-28dd-421d-a52b-63bf897147a9",
        "tags" : [
        ]
      }
    ],
    "commit" : "e489629895ffa82eb7cd8281f0a2b7e788a29812",
    "line" : 60,
    "diffHunk" : "@@ -1,1 +58,62 @@\n// ProbeVolumePlugins returns implemented plugins\nfunc ProbeVolumePlugins() []volume.VolumePlugin {\n\tp := &csiPlugin{\n\t\thost: nil,"
  }
]