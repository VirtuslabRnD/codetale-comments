[
  {
    "id" : "477e0172-b7a9-419d-82c1-837551088c15",
    "prId" : 99284,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/99284#pullrequestreview-605717275",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d17f449d-0b7d-46ca-9344-7209d6bf7357",
        "parentId" : null,
        "authorId" : "275dd783-53c3-4fed-8434-96ed6a2e0331",
        "body" : "metrics -> stats",
        "createdAt" : "2021-03-06T02:25:32Z",
        "updatedAt" : "2021-03-09T16:17:17Z",
        "lastEditedBy" : "275dd783-53c3-4fed-8434-96ed6a2e0331",
        "tags" : [
        ]
      }
    ],
    "commit" : "edc1c62471d710d246ca0647375fa62cf6f2cdb8",
    "line" : 79,
    "diffHunk" : "@@ -1,1 +708,712 @@func TestVolumeHealthEnable(t *testing.T) {\n\tdefer featuregatetesting.SetFeatureGateDuringTest(t, utilfeature.DefaultFeatureGate, features.CSIVolumeHealth, true)()\n\tspec := volume.NewSpecFromPersistentVolume(makeTestPV(\"test-pv\", 10, \"metrics\", \"test-vol\"), false)\n\ttests := []struct {\n\t\tname               string"
  },
  {
    "id" : "8a259d96-243b-40ed-a603-68881cf2d12f",
    "prId" : 87978,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/87978#pullrequestreview-358099223",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b123a93e-e919-4f72-93c2-acef74fc278b",
        "parentId" : null,
        "authorId" : "5f2c1de8-4266-42c0-b343-ba247af3578f",
        "body" : "Creating a temp dir will prevent this test from interfering with different runs, but should we care about different test cases running in their own directories?\r\n\r\nside note: These tests should be wrapped with `t.Run` in the future.",
        "createdAt" : "2020-02-11T19:53:20Z",
        "updatedAt" : "2020-02-17T09:52:41Z",
        "lastEditedBy" : "5f2c1de8-4266-42c0-b343-ba247af3578f",
        "tags" : [
        ]
      },
      {
        "id" : "0bd5ed9a-cea2-4875-b331-399c47668f90",
        "parentId" : "b123a93e-e919-4f72-93c2-acef74fc278b",
        "authorId" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "body" : "The tests run in series right now, so I would leave it up to the guy who makes them parallel :-). Slightly more complicate refactoring would be needed then, as the target path is part of the test struct before any `t.Run`.",
        "createdAt" : "2020-02-13T10:18:05Z",
        "updatedAt" : "2020-02-17T09:52:41Z",
        "lastEditedBy" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "tags" : [
        ]
      }
    ],
    "commit" : "073d0b234076b91b83f97085656c8b614955a04f",
    "line" : 78,
    "diffHunk" : "@@ -1,1 +387,391 @@\nfunc TestClientNodePublishVolume(t *testing.T) {\n\ttmpDir, err := utiltesting.MkTmpdir(\"csi-test\")\n\tif err != nil {\n\t\tt.Fatalf(\"can't create temp dir: %v\", err)"
  },
  {
    "id" : "267c34a1-0eae-4860-bb74-9acc22848b92",
    "prId" : 54529,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/54529#pullrequestreview-77388323",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6993a721-fa2b-4804-8654-3e20f7d11d12",
        "parentId" : null,
        "authorId" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "body" : "I admit I have troubles reviewing this. The test is correct, just the fake client is \"far away\", i.e. in a different file in a separate directory.\r\n\r\n&lt;pedantic&gt;\r\nIn addition, the fake client does not check that it got correct `NodePublishVolumeRequest` - it checks that the values were filled, but it does not check that the values have expected value.\r\n&lt;/pedantic&gt;\r\n",
        "createdAt" : "2017-11-14T13:47:37Z",
        "updatedAt" : "2017-11-22T01:22:10Z",
        "lastEditedBy" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "tags" : [
        ]
      },
      {
        "id" : "2a60691e-0e90-4b47-8a0a-90f4d1d62464",
        "parentId" : "6993a721-fa2b-4804-8654-3e20f7d11d12",
        "authorId" : "54b8eb75-28dd-421d-a52b-63bf897147a9",
        "body" : "@jsafrane the distance of the fake client was sort of necessary since it is it's own thing with lots of code.  There are some validation rules in the aggregation client type, `csiDriverClient`, which fa√ßades all three grpc clients.  Adding more expectations would make the fake csi driver not so fake.",
        "createdAt" : "2017-11-17T10:10:37Z",
        "updatedAt" : "2017-11-22T01:22:10Z",
        "lastEditedBy" : "54b8eb75-28dd-421d-a52b-63bf897147a9",
        "tags" : [
        ]
      }
    ],
    "commit" : "e489629895ffa82eb7cd8281f0a2b7e788a29812",
    "line" : 77,
    "diffHunk" : "@@ -1,1 +75,79 @@\t\t{name: \"missing volID\", targetPath: \"/test/path\", mustFail: true},\n\t\t{name: \"missing target path\", volID: \"vol-test\", mustFail: true},\n\t\t{name: \"bad fs\", volID: \"vol-test\", targetPath: \"/test/path\", fsType: \"badfs\", mustFail: true},\n\t\t{name: \"grpc error\", volID: \"vol-test\", targetPath: \"/test/path\", mustFail: true, err: errors.New(\"grpc error\")},\n\t}"
  }
]