[
  {
    "id" : "cd19ef1c-11d2-47ba-bdaa-80c2ee909fa0",
    "prId" : 100741,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/100741#pullrequestreview-679152400",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "27e982c7-a062-40ba-a8d9-001c1bdf1f87",
        "parentId" : null,
        "authorId" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "body" : "from the test cases, I see if initAttachErr != nil,  then shouldFail = true, which means err must be !nil at this point. Otherwise, the check will fail above. So I don't see it is very necessary to change here unless you expect to have test case that initAttachErr != nil, and shouldFail = false.\r\n\r\n",
        "createdAt" : "2021-06-08T14:08:16Z",
        "updatedAt" : "2021-06-08T14:08:17Z",
        "lastEditedBy" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "tags" : [
        ]
      },
      {
        "id" : "9192a1ca-d04f-4aa8-aef1-8b0f3c1b49ce",
        "parentId" : "27e982c7-a062-40ba-a8d9-001c1bdf1f87",
        "authorId" : "000895b1-a34f-4e0b-8da3-6f818dfe1aab",
        "body" : "Yes, I didn't notice that the initAttachErr and shouldFail fields were corresponding :  `if initAttachErr != nil, then shouldFail = true`. Thanks !\r\nBut now this is the right change, easier to read the code.",
        "createdAt" : "2021-06-09T02:22:26Z",
        "updatedAt" : "2021-06-09T02:22:26Z",
        "lastEditedBy" : "000895b1-a34f-4e0b-8da3-6f818dfe1aab",
        "tags" : [
        ]
      }
    ],
    "commit" : "1d764952dad743d5ed7afd913218471aef2d3015",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +755,759 @@\t\t\t\tt.Error(\"expecting failure, but err is nil\")\n\t\t\t}\n\t\t\tif tc.initAttachErr != nil && err != nil {\n\t\t\t\tif tc.initAttachErr.Message != err.Error() {\n\t\t\t\t\tt.Errorf(\"expecting error [%v], got [%v]\", tc.initAttachErr.Message, err.Error())"
  },
  {
    "id" : "12f0a5b3-0868-4165-84d8-cf9c9d240c9f",
    "prId" : 94031,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/94031#pullrequestreview-480296975",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "eea9eab6-d22b-496c-aa20-e4cd5d3bc307",
        "parentId" : null,
        "authorId" : "d10fef96-5a18-44e7-b23e-735de7561af7",
        "body" : "Are we planning to fix this in a separate PR? It seems like we could include the fix in this PR. \r\n```\r\nvar wg sync.WaitGroup\r\nwg.Add(1)\r\nwg.Done()\r\nwg.Wait()\r\n```\r\nSame to the other place.",
        "createdAt" : "2020-08-18T23:32:10Z",
        "updatedAt" : "2020-09-03T14:40:12Z",
        "lastEditedBy" : "d10fef96-5a18-44e7-b23e-735de7561af7",
        "tags" : [
        ]
      },
      {
        "id" : "640261da-d312-49d6-9929-744fd19fab89",
        "parentId" : "eea9eab6-d22b-496c-aa20-e4cd5d3bc307",
        "authorId" : "9e6ce3ed-e2f7-40ea-b6d7-b1b04fc48f70",
        "body" : "Some test cases which should fail actually expects timeout, but the default timeout is 2 min https://github.com/kubernetes/kubernetes/blob/3f579d8971fcce96d6b01b968a46c720f10940b8/pkg/volume/csi/csi_plugin.go#L51, maybe we should figure out how to adjust the time `csiAttacher.Attach` should wait for before fixing it. 2 minute might be too long for testing.",
        "createdAt" : "2020-08-19T03:32:24Z",
        "updatedAt" : "2020-09-03T14:40:12Z",
        "lastEditedBy" : "9e6ce3ed-e2f7-40ea-b6d7-b1b04fc48f70",
        "tags" : [
        ]
      },
      {
        "id" : "a248f9c7-397f-49fd-8eff-7ecf96f93b6c",
        "parentId" : "eea9eab6-d22b-496c-aa20-e4cd5d3bc307",
        "authorId" : "9e6ce3ed-e2f7-40ea-b6d7-b1b04fc48f70",
        "body" : "For instance, `TestAttacherAttach/mismatch_vol` and `TestAttacherAttach/mismatch_node` would finish after 2m:\r\n\r\n```\r\n=== RUN   TestAttacherAttach/mismatch_node\r\n    csi_attacher_test.go:203: test case: mismatch node\r\nE0819 14:40:20.168036   58170 csi_plugin.go:199] kubernetes.io/csi: VolumeAttachmentLister not found on AttachDetachVolumeHost\r\n    csi_attacher_test.go:100: stopped waiting for attachment\r\n    csi_attacher_test.go:103: attachment not found for id:csi-70fa8b122628ff5436f098759b79c93487b3894e2bff5637c618405a059b0b47\r\nE0819 14:42:20.185348   58170 csi_attacher.go:500] kubernetes.io/csi: attachdetacher.WaitForDetach timeout after 2m0s [volume=vol02; attachment.ID=csi-cad5d366e9d018c22553557296636318d4a3d2026611b6ebaa5ab7789ebc7\r\ndbb]\r\n```",
        "createdAt" : "2020-08-19T06:43:34Z",
        "updatedAt" : "2020-09-03T14:40:12Z",
        "lastEditedBy" : "9e6ce3ed-e2f7-40ea-b6d7-b1b04fc48f70",
        "tags" : [
        ]
      },
      {
        "id" : "f8cd503c-e9e2-49ab-bf34-e777e23d1e8b",
        "parentId" : "eea9eab6-d22b-496c-aa20-e4cd5d3bc307",
        "authorId" : "9e6ce3ed-e2f7-40ea-b6d7-b1b04fc48f70",
        "body" : "It would be great if the `Attach` method could accept `context.Context` as its argument, but I think that needs to be discussed first.",
        "createdAt" : "2020-08-19T06:52:55Z",
        "updatedAt" : "2020-09-03T14:40:12Z",
        "lastEditedBy" : "9e6ce3ed-e2f7-40ea-b6d7-b1b04fc48f70",
        "tags" : [
        ]
      },
      {
        "id" : "e9144116-ba21-4b0a-bcce-0e2c4c91e66c",
        "parentId" : "eea9eab6-d22b-496c-aa20-e4cd5d3bc307",
        "authorId" : "d10fef96-5a18-44e7-b23e-735de7561af7",
        "body" : "Yeah, that's a good point. But it seems the current test suite does not even function correctly. As it does not wait for the go routine to finish. If you are not intend to fix this in this PR, maybe worth creating a new issue for it?",
        "createdAt" : "2020-08-19T19:26:39Z",
        "updatedAt" : "2020-09-03T14:40:12Z",
        "lastEditedBy" : "d10fef96-5a18-44e7-b23e-735de7561af7",
        "tags" : [
        ]
      },
      {
        "id" : "ae10f3a6-caa2-4d16-ad59-2cb3084eec51",
        "parentId" : "eea9eab6-d22b-496c-aa20-e4cd5d3bc307",
        "authorId" : "5f2c1de8-4266-42c0-b343-ba247af3578f",
        "body" : "I believe we have not observed any flakes on these tests. Possibly they are failing to fail. At least it's not blocking CI tests...",
        "createdAt" : "2020-09-02T02:05:29Z",
        "updatedAt" : "2020-09-03T14:40:12Z",
        "lastEditedBy" : "5f2c1de8-4266-42c0-b343-ba247af3578f",
        "tags" : [
        ]
      }
    ],
    "commit" : "469f59a52a68630fabffc80e842c28473ebed6c8",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +212,216 @@\t\t\tcsiAttacher := attacher.(*csiAttacher)\n\n\t\t\t// FIXME: We need to ensure this goroutine exits in the test.\n\t\t\tgo func(spec *volume.Spec, nodename string, fail bool) {\n\t\t\t\tattachID, err := csiAttacher.Attach(spec, types.NodeName(nodename))"
  },
  {
    "id" : "5de7397d-e734-4515-a7a8-86f08ae49cab",
    "prId" : 94031,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/94031#pullrequestreview-481580181",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "42d69b44-78ce-4108-8eef-54597b107665",
        "parentId" : null,
        "authorId" : "5f2c1de8-4266-42c0-b343-ba247af3578f",
        "body" : "In *theory* this still has a race condition, because you've unblocked line 416 before returning here, and the actual watch is created by the next reactor in the chain.\r\n\r\nHowever, I ran these tests 2000 times with your change and got no failures, so I think it is good enough.",
        "createdAt" : "2020-09-02T02:02:19Z",
        "updatedAt" : "2020-09-03T14:40:12Z",
        "lastEditedBy" : "5f2c1de8-4266-42c0-b343-ba247af3578f",
        "tags" : [
        ]
      },
      {
        "id" : "40628609-de3a-4dd6-a01b-66766f4318fb",
        "parentId" : "42d69b44-78ce-4108-8eef-54597b107665",
        "authorId" : "9e6ce3ed-e2f7-40ea-b6d7-b1b04fc48f70",
        "body" : "> In theory this still has a race condition, because you've unblocked line 416 before returning here, and the actual watch is created by the next reactor in the chain.\r\n\r\nI think you are right, I added a comment in the test to note it is still possible to race.",
        "createdAt" : "2020-09-03T07:47:25Z",
        "updatedAt" : "2020-09-03T14:40:12Z",
        "lastEditedBy" : "9e6ce3ed-e2f7-40ea-b6d7-b1b04fc48f70",
        "tags" : [
        ]
      }
    ],
    "commit" : "469f59a52a68630fabffc80e842c28473ebed6c8",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +372,376 @@\t\t\t\t\tclose(attachmentWatchCreated)\n\t\t\t\t}\n\t\t\t\treturn false, nil, nil\n\t\t\t})\n"
  },
  {
    "id" : "1b9184de-438b-4fd0-b9a7-7c2ff7982bb6",
    "prId" : 79144,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/79144#pullrequestreview-269863998",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "64b3b75d-2c93-48af-be10-59a0dcea90da",
        "parentId" : null,
        "authorId" : "54b8eb75-28dd-421d-a52b-63bf897147a9",
        "body" : "Would it be better to send the entire error instead of just the status ?",
        "createdAt" : "2019-07-31T20:47:47Z",
        "updatedAt" : "2019-07-31T20:47:48Z",
        "lastEditedBy" : "54b8eb75-28dd-421d-a52b-63bf897147a9",
        "tags" : [
        ]
      },
      {
        "id" : "437db135-332c-4bb0-ab10-f277ff0b0c0c",
        "parentId" : "64b3b75d-2c93-48af-be10-59a0dcea90da",
        "authorId" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "body" : "Given\r\n```\r\n\t\t\t\tstatErr := apierrs.NewInternalError(fmt.Errorf(\"we got an error\"))\r\n```\r\nwhen I send the above error, I get compilation error saying that funcs such as GetObjectKind are missing.\r\n\r\nDo you have something else in mind, @vladimirvivien ?",
        "createdAt" : "2019-07-31T21:01:31Z",
        "updatedAt" : "2019-07-31T21:01:31Z",
        "lastEditedBy" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "tags" : [
        ]
      },
      {
        "id" : "de34f5a1-55d0-41c8-a1fe-bba61925983d",
        "parentId" : "64b3b75d-2c93-48af-be10-59a0dcea90da",
        "authorId" : "54b8eb75-28dd-421d-a52b-63bf897147a9",
        "body" : "Ok my apologies, `fakewatcher.Error(..)` takes an api object not an error.  The code is ok as is.",
        "createdAt" : "2019-08-01T20:35:02Z",
        "updatedAt" : "2019-08-01T20:35:24Z",
        "lastEditedBy" : "54b8eb75-28dd-421d-a52b-63bf897147a9",
        "tags" : [
        ]
      }
    ],
    "commit" : "f4fbfcb46a0c2f4f30ea0da66aa2dc9b3797c066",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +223,227 @@\t\t\t\t}\n\t\t\t\terrStatus := apierrs.NewInternalError(fmt.Errorf(\"we got an error\")).Status()\n\t\t\t\tfakeWatcher.Error(&errStatus)\n\t\t\t} else {\n\t\t\t\tstatus.Attached = true"
  },
  {
    "id" : "a118f087-3f30-44b2-aa45-9e70a5c5d46b",
    "prId" : 78132,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/78132#pullrequestreview-240063916",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0dbf6000-a13e-49eb-a5b3-d8df34f57166",
        "parentId" : null,
        "authorId" : "255dd885-bee4-4c1f-baef-ba11f903dc5c",
        "body" : "This can actually be executed before the call to `Add()`, causing a panic.\r\n\r\nEdit: \r\n\r\nhttps://play.golang.org/p/b7XIXrR9ohO\r\n\r\n```\r\n$ while ./test; do :; done\r\nLoop: 36\r\npanic: sync: negative WaitGroup counter\r\n\r\ngoroutine 47 [running]:\r\nsync.(*WaitGroup).Add(0xc00008a020, 0xffffffffffffffff)\r\n\t/home/fjb/.gimme/versions/go1.12.4.linux.amd64/src/sync/waitgroup.go:74 +0x135\r\nsync.(*WaitGroup).Done(...)\r\n\t/home/fjb/.gimme/versions/go1.12.4.linux.amd64/src/sync/waitgroup.go:99\r\nmain.test(0xc00008a020)\r\n\t/tmp/test.go:9 +0x35\r\ncreated by main.main\r\n\t/tmp/test.go:17 +0xec\r\n```\r\nVery unlikely to happen, but it might be worth moving the `Add()` call up.\r\n\r\n",
        "createdAt" : "2019-05-21T08:45:00Z",
        "updatedAt" : "2019-05-21T13:58:02Z",
        "lastEditedBy" : "255dd885-bee4-4c1f-baef-ba11f903dc5c",
        "tags" : [
        ]
      },
      {
        "id" : "1aa23669-76b8-4883-8322-36955dbff699",
        "parentId" : "0dbf6000-a13e-49eb-a5b3-d8df34f57166",
        "authorId" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "body" : "good catch. fixed",
        "createdAt" : "2019-05-21T13:58:08Z",
        "updatedAt" : "2019-05-21T13:58:09Z",
        "lastEditedBy" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "tags" : [
        ]
      }
    ],
    "commit" : "0ab6bdfa368706df83bd72499662ef6704da73de",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +366,370 @@\t\t\tgo func(volSpec *volume.Spec, expectAttach bool) {\n\t\t\t\tattachID, err := csiAttacher.Attach(volSpec, types.NodeName(\"node\"))\n\t\t\t\tdefer wg.Done()\n\n\t\t\t\tif err != nil {"
  },
  {
    "id" : "c652eeef-776c-4cf4-844c-42afbc76f4c8",
    "prId" : 63295,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/63295#pullrequestreview-117929276",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e4216bd5-ec03-428b-9469-f36e86792c98",
        "parentId" : null,
        "authorId" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "body" : "i think im confused here could you help me understand. should a test case for the new functionality you added call `Detach` when the volumattachment object already is deleted? I'm not sure how this reactor works exactly but I can't see how \"forbidding\" deletion of the `volumeattachment` tests the changed functionality.",
        "createdAt" : "2018-05-04T18:23:44Z",
        "updatedAt" : "2018-05-16T12:16:29Z",
        "lastEditedBy" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "tags" : [
        ]
      },
      {
        "id" : "b53dce33-0c56-47c5-b283-9f13ae7c4332",
        "parentId" : "e4216bd5-ec03-428b-9469-f36e86792c98",
        "authorId" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "body" : "You're right, the test does not test NotFound error, I pushed a wrong version. Now it's fixed. It tests that 404 Not Found results in success and 403 Forbidden in an error.",
        "createdAt" : "2018-05-07T09:03:42Z",
        "updatedAt" : "2018-05-16T12:16:29Z",
        "lastEditedBy" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "tags" : [
        ]
      }
    ],
    "commit" : "a884a00d30bf2a4d7aa3f33965c72987eef5f127",
    "line" : 48,
    "diffHunk" : "@@ -1,1 +350,354 @@\t\t\t\treturn false, nil, nil\n\t\t\t},\n\t\t},\n\t}\n"
  },
  {
    "id" : "2322756f-1e06-4af5-9108-84b29bdd16bc",
    "prId" : 63295,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/63295#pullrequestreview-120611948",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f5c3ebef-685f-4996-83fa-6b96ae4d317e",
        "parentId" : null,
        "authorId" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "body" : "how is this test different from the longer one following? They both test when the attachment is not found no? One by just not creating the right attachment, and the other with this reactor. If they are they are the same, I would favor keeping the simpler one",
        "createdAt" : "2018-05-07T17:30:37Z",
        "updatedAt" : "2018-05-16T12:16:29Z",
        "lastEditedBy" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "tags" : [
        ]
      },
      {
        "id" : "c8581369-36fc-4a64-9fb7-3eccaf4f8083",
        "parentId" : "f5c3ebef-685f-4996-83fa-6b96ae4d317e",
        "authorId" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "body" : "The difference is in `shouldFail`\r\n\r\n* \"object not found\" tests that the attachments is not present (and was perhaps deleted before). CSI plugin should be idempotent and return success in this case.\r\n\r\n* \"API error\" tests some other error from API server (403 Forbidden in this case) and this error is propagated to caller.",
        "createdAt" : "2018-05-09T10:22:15Z",
        "updatedAt" : "2018-05-16T12:16:29Z",
        "lastEditedBy" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "tags" : [
        ]
      },
      {
        "id" : "678fe453-b860-49bc-9fe5-96de0bcc414a",
        "parentId" : "f5c3ebef-685f-4996-83fa-6b96ae4d317e",
        "authorId" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "body" : "Sorry, I was referring to this test \"\"volume attachment not found -> success\" and this test \"object not found\" both of which should return success and the tested functionality is a volume attachment that is not found.",
        "createdAt" : "2018-05-09T17:48:56Z",
        "updatedAt" : "2018-05-16T12:16:29Z",
        "lastEditedBy" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "tags" : [
        ]
      },
      {
        "id" : "8ae76e47-9456-40de-8ce0-e2851e10603f",
        "parentId" : "f5c3ebef-685f-4996-83fa-6b96ae4d317e",
        "authorId" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "body" : "I see, I must have been blind... It's fixed now",
        "createdAt" : "2018-05-16T12:16:40Z",
        "updatedAt" : "2018-05-16T12:16:40Z",
        "lastEditedBy" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "tags" : [
        ]
      }
    ],
    "commit" : "a884a00d30bf2a4d7aa3f33965c72987eef5f127",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +337,341 @@\t\t{name: \"normal test\", volID: \"vol-001\", attachID: getAttachmentName(\"vol-001\", testDriver, nodeName)},\n\t\t{name: \"normal test 2\", volID: \"vol-002\", attachID: getAttachmentName(\"vol-002\", testDriver, nodeName)},\n\t\t{name: \"object not found\", volID: \"vol-non-existing\", attachID: getAttachmentName(\"vol-003\", testDriver, nodeName)},\n\t\t{\n\t\t\tname:       \"API error\","
  },
  {
    "id" : "4b4cadb9-7927-4db6-9052-5bb9c56e8143",
    "prId" : 62590,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/62590#pullrequestreview-112967362",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e1e132e9-04fd-48b2-848a-3d6687020f33",
        "parentId" : null,
        "authorId" : "ea65316b-7fdf-4fe0-99b0-2d437bf2580e",
        "body" : "This is a valid situation(`tc.shouldFail` is true and `MountDevice` error isn't `nil`), we should go on to run subsequent tests instead of stopping this function.",
        "createdAt" : "2018-04-15T02:39:34Z",
        "updatedAt" : "2018-04-15T02:39:34Z",
        "lastEditedBy" : "ea65316b-7fdf-4fe0-99b0-2d437bf2580e",
        "tags" : [
        ]
      },
      {
        "id" : "70d1e538-6c75-4c8f-acca-782e788b0a1a",
        "parentId" : "e1e132e9-04fd-48b2-848a-3d6687020f33",
        "authorId" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "body" : "no need for `continue` then.\r\n\r\nHowever, If you want to make this change, then the parts after where it checks whether the staged volume is checked will need to be modified to only be run when there is no error, because if there is an error the volume will not be staged.",
        "createdAt" : "2018-04-16T21:51:01Z",
        "updatedAt" : "2018-04-16T21:55:04Z",
        "lastEditedBy" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "tags" : [
        ]
      },
      {
        "id" : "8da4d260-d5c8-4306-aaaf-9ee3c061a2d9",
        "parentId" : "e1e132e9-04fd-48b2-848a-3d6687020f33",
        "authorId" : "ea65316b-7fdf-4fe0-99b0-2d437bf2580e",
        "body" : "If we just remove the `continue` statement, this test will fail at this [line](https://github.com/kubernetes/kubernetes/blob/28f9356ad1183f8ede3a1c92a0e92ac137fab6c4/pkg/volume/csi/csi_attacher_test.go#L557), as the `MountDevice` operation fails and no volume is staged. So we should add the check of `err` to the assertion:\r\n`if len(staged) != numStaged` -> `if len(staged) != numStaged || err != nil`\r\n`if tc.stageUnstageSet` -> `if tc.stageUnstageSet && err == nil`.\r\n\r\nI'm not sure which fix is better.\r\n",
        "createdAt" : "2018-04-17T02:06:44Z",
        "updatedAt" : "2018-04-17T02:06:44Z",
        "lastEditedBy" : "ea65316b-7fdf-4fe0-99b0-2d437bf2580e",
        "tags" : [
        ]
      },
      {
        "id" : "28bfb5d0-4f3a-4224-a5df-221db0cac1dc",
        "parentId" : "e1e132e9-04fd-48b2-848a-3d6687020f33",
        "authorId" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "body" : "oh I understand now. `continue` is correct. Thanks for the explaination.",
        "createdAt" : "2018-04-17T19:55:25Z",
        "updatedAt" : "2018-04-17T19:55:25Z",
        "lastEditedBy" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "tags" : [
        ]
      }
    ],
    "commit" : "123ba1b429348abca3ed36865ad6febe7ecbcb9a",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +540,544 @@\t\t\t\tt.Errorf(\"test should not fail, but error occurred: %v\", err)\n\t\t\t}\n\t\t\tcontinue\n\t\t}\n\t\tif err == nil && tc.shouldFail {"
  },
  {
    "id" : "fd8836d2-9ef3-4cfd-8f86-f32958e19479",
    "prId" : 62590,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/62590#pullrequestreview-112967404",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9738022b-f8eb-497f-b49c-9a728b0106f2",
        "parentId" : null,
        "authorId" : "ea65316b-7fdf-4fe0-99b0-2d437bf2580e",
        "body" : "Currently `csiAttacher.MountDevice` doesn't use the input parameter `devicePath`, so the it will succeed even if `devicePath` missed.",
        "createdAt" : "2018-04-15T02:41:31Z",
        "updatedAt" : "2018-04-15T02:41:31Z",
        "lastEditedBy" : "ea65316b-7fdf-4fe0-99b0-2d437bf2580e",
        "tags" : [
        ]
      },
      {
        "id" : "d4dd7967-aa48-4e14-8f0e-a09c1c62445e",
        "parentId" : "9738022b-f8eb-497f-b49c-9a728b0106f2",
        "authorId" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "body" : "why doesn't this test case pass for both true and false without change to the test logic? Something must not be working properly. I agree this change is correct but can you fix the test so that the test will fail when `shouldFail` is set to `true`.",
        "createdAt" : "2018-04-16T21:53:32Z",
        "updatedAt" : "2018-04-16T21:55:04Z",
        "lastEditedBy" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "tags" : [
        ]
      },
      {
        "id" : "8d690d2e-7fcc-4ce2-be0c-e3f61f53ee1c",
        "parentId" : "9738022b-f8eb-497f-b49c-9a728b0106f2",
        "authorId" : "ea65316b-7fdf-4fe0-99b0-2d437bf2580e",
        "body" : "Actually this test case can't pass for `shouldFail = true`, but due to existence of the [first bug](https://github.com/kubernetes/kubernetes/blob/28f9356ad1183f8ede3a1c92a0e92ac137fab6c4/pkg/volume/csi/csi_attacher_test.go#L542), the test function is returned too early, so this test case has never been executed.\r\nI encountered this error when I try to fix the first bug, so I fix it in this PR too.",
        "createdAt" : "2018-04-17T02:11:36Z",
        "updatedAt" : "2018-04-17T02:11:36Z",
        "lastEditedBy" : "ea65316b-7fdf-4fe0-99b0-2d437bf2580e",
        "tags" : [
        ]
      },
      {
        "id" : "9417f110-1952-4084-9ada-9ae63cfb1d11",
        "parentId" : "9738022b-f8eb-497f-b49c-9a728b0106f2",
        "authorId" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "body" : "I see, LGTM",
        "createdAt" : "2018-04-17T19:55:33Z",
        "updatedAt" : "2018-04-17T19:55:33Z",
        "lastEditedBy" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "tags" : [
        ]
      }
    ],
    "commit" : "123ba1b429348abca3ed36865ad6febe7ecbcb9a",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +475,479 @@\t\t\tdeviceMountPath: \"path2\",\n\t\t\tstageUnstageSet: true,\n\t\t\tshouldFail:      false,\n\t\t},\n\t\t{"
  },
  {
    "id" : "abb3298f-c151-4ade-8d6b-dfbd0dfcb636",
    "prId" : 57194,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/57194#pullrequestreview-88210042",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "43e1d1ca-a1f5-4d53-a287-a98f2097108f",
        "parentId" : null,
        "authorId" : "54b8eb75-28dd-421d-a52b-63bf897147a9",
        "body" : "This is great!!",
        "createdAt" : "2018-01-11T16:17:13Z",
        "updatedAt" : "2018-02-02T09:41:25Z",
        "lastEditedBy" : "54b8eb75-28dd-421d-a52b-63bf897147a9",
        "tags" : [
        ]
      }
    ],
    "commit" : "ddf4c2d62ca0b005bc115a405ae3fb7c00bc36a9",
    "line" : 238,
    "diffHunk" : "@@ -1,1 +388,392 @@\n// create a plugin mgr to load plugins and setup a fake client\nfunc newTestWatchPlugin(t *testing.T) (*csiPlugin, *watch.FakeWatcher, string) {\n\ttmpDir, err := utiltesting.MkTmpdir(\"csi-test\")\n\tif err != nil {"
  }
]