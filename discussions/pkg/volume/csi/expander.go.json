[
  {
    "id" : "30dcdb20-30d3-4a7e-bf03-e247d8d982fd",
    "prId" : 86968,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/86968#pullrequestreview-342792281",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "49ba3df2-9b09-443d-989f-3c9d3e1dbef2",
        "parentId" : null,
        "authorId" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "body" : "looks like we have 2 things named `resizeOptions` now. This one that has `VolumeSpec` that already exists and the new struct. Is there a way to disambiguate the naming?",
        "createdAt" : "2020-01-13T22:45:33Z",
        "updatedAt" : "2020-07-01T16:21:33Z",
        "lastEditedBy" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "tags" : [
        ]
      },
      {
        "id" : "26cd6b16-01aa-42c8-a8c3-948bf9e22e67",
        "parentId" : "49ba3df2-9b09-443d-989f-3c9d3e1dbef2",
        "authorId" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "body" : "I named csi resize options to be `csiResizeOptions` to disambiguate. Should be enough?",
        "createdAt" : "2020-01-14T19:44:00Z",
        "updatedAt" : "2020-07-01T16:21:33Z",
        "lastEditedBy" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "tags" : [
        ]
      }
    ],
    "commit" : "6342dad709626dcc6da600b33f50a29a33525868",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +95,99 @@\t}\n\n\tpv := resizeOptions.VolumeSpec.PersistentVolume\n\tif pv == nil {\n\t\treturn false, fmt.Errorf(\"Expander.NodeExpand failed to find associated PersistentVolume for plugin %s\", c.GetPluginName())"
  },
  {
    "id" : "8c61d256-4e9b-47f8-8269-44c34c200132",
    "prId" : 86968,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/86968#pullrequestreview-375422216",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0e5d16e0-e92e-4aa3-8499-df0596387d9a",
        "parentId" : null,
        "authorId" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "body" : "why rename `DevicePath` to `VolumePath` here, if they are referring to the same thing should they have the same name?",
        "createdAt" : "2020-01-13T22:46:57Z",
        "updatedAt" : "2020-07-01T16:21:33Z",
        "lastEditedBy" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "tags" : [
        ]
      },
      {
        "id" : "ec8ff16a-617e-46b5-ba6a-751f3c486956",
        "parentId" : "0e5d16e0-e92e-4aa3-8499-df0596387d9a",
        "authorId" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "body" : "This is because this field is called `volume_path` in CSI but internally in k8s we call it `DevicePath` ",
        "createdAt" : "2020-03-16T17:12:51Z",
        "updatedAt" : "2020-07-01T16:21:33Z",
        "lastEditedBy" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "tags" : [
        ]
      }
    ],
    "commit" : "6342dad709626dcc6da600b33f50a29a33525868",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +114,118 @@\t\t// basically same as DevicePath because block devices are not mounted and hence\n\t\t// DeviceMountPath does not get populated in resizeOptions.DeviceMountPath\n\t\topts.volumePath = resizeOptions.DevicePath\n\t\topts.fsType = fsTypeBlockName\n\t}"
  },
  {
    "id" : "229e8ac6-0040-4090-8ec6-afa4362f7499",
    "prId" : 86968,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/86968#pullrequestreview-371537686",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "aba54320-2ff9-484e-9b0e-b0475b416b61",
        "parentId" : null,
        "authorId" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "body" : "What if access modes defined but empty, or multiple access modes specified?",
        "createdAt" : "2020-01-13T22:47:34Z",
        "updatedAt" : "2020-07-01T16:21:33Z",
        "lastEditedBy" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "tags" : [
        ]
      },
      {
        "id" : "46fa2b54-5e69-486a-934f-1994377a6a9c",
        "parentId" : "aba54320-2ff9-484e-9b0e-b0475b416b61",
        "authorId" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "body" : "This is same as `NodeStage` code flow, where you can only pass one access mode. Currently as per CSI spec, capabilities should mostly be used for determining if device is a raw block device or fstype volume and hence accessMode should matter less. But even if a Driver does decide to use this field then it should only matter how the device is staged on *this* node.",
        "createdAt" : "2020-03-09T21:21:05Z",
        "updatedAt" : "2020-07-01T16:21:33Z",
        "lastEditedBy" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "tags" : [
        ]
      }
    ],
    "commit" : "6342dad709626dcc6da600b33f50a29a33525868",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +119,123 @@\n\tif pv.Spec.AccessModes != nil {\n\t\topts.accessMode = pv.Spec.AccessModes[0]\n\t}\n"
  },
  {
    "id" : "c939b6cf-31eb-4a5d-8cb7-e4e66ecae147",
    "prId" : 74863,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/74863#pullrequestreview-210958784",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ce6cbe76-434a-42fa-8915-e269c388ffff",
        "parentId" : null,
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "This is different from how we implement skip attach.  Can we be consistent in how we check a plugin's capability?",
        "createdAt" : "2019-03-04T22:57:55Z",
        "updatedAt" : "2019-03-08T14:23:30Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "366e7aa1-e457-4b9c-bc51-19440cf7b830",
        "parentId" : "ce6cbe76-434a-42fa-8915-e269c388ffff",
        "authorId" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "body" : "But `CanAttach` check depends on CSIDriver field too right? Whereas this check is more static. I do not like changing the behaviour of `FindByXXX` function fwiw depending on feature tags and other dynamic things. ",
        "createdAt" : "2019-03-05T21:37:27Z",
        "updatedAt" : "2019-03-08T14:23:30Z",
        "lastEditedBy" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "tags" : [
        ]
      },
      {
        "id" : "3747c234-d746-4abf-9c69-d472378ff67f",
        "parentId" : "ce6cbe76-434a-42fa-8915-e269c388ffff",
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "maybe we should consider changing skipAttach then (separately) cc @jsafrane ",
        "createdAt" : "2019-03-05T23:13:17Z",
        "updatedAt" : "2019-03-08T14:23:30Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      }
    ],
    "commit" : "1bd9ed06d34efb328ce514551e1a23d708f1e526",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +31,35 @@\nfunc (c *csiPlugin) RequiresFSResize() bool {\n\t// We could check plugin's node capability but we instead are going to rely on\n\t// NodeExpand to do the right thing and return early if plugin does not have\n\t// node expansion capability."
  },
  {
    "id" : "05a080e0-e234-4e4a-9b1a-3bd2799384c1",
    "prId" : 74863,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/74863#pullrequestreview-210931012",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "45438061-e57b-431a-8da4-105f76466da0",
        "parentId" : null,
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "If the volume plugin does support stage, but the phase is node publish, then do we want to still call resize?",
        "createdAt" : "2019-03-04T23:11:51Z",
        "updatedAt" : "2019-03-08T14:23:30Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "eed058a9-dd33-41db-bb06-047585448043",
        "parentId" : "45438061-e57b-431a-8da4-105f76466da0",
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "This function could use some unit tests",
        "createdAt" : "2019-03-04T23:12:25Z",
        "updatedAt" : "2019-03-08T14:23:30Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "d413ebe4-f11c-4458-824a-bf387227e759",
        "parentId" : "45438061-e57b-431a-8da4-105f76466da0",
        "authorId" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "body" : "ideally - if plugin indeed supports stage then call should be made in staging phase. But say when volume is already node staged and node published (and hence in publish phase) then resizing can indeed be done in publish phase too. From CSI specs:\r\n\r\n```\r\nIf plugin has STAGE_UNSTAGE_VOLUME node capability then:\r\n\r\n    NodeExpandVolume MUST be called after successful NodeStageVolume.\r\n    NodeExpandVolume MAY be called before or after NodePublishVolume.\r\n```\r\n\r\n",
        "createdAt" : "2019-03-05T15:30:46Z",
        "updatedAt" : "2019-03-08T14:23:30Z",
        "lastEditedBy" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "tags" : [
        ]
      },
      {
        "id" : "6fd1a589-148f-4c45-a1cd-1bd9959826b1",
        "parentId" : "45438061-e57b-431a-8da4-105f76466da0",
        "authorId" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "body" : "I have added some unit tests.",
        "createdAt" : "2019-03-05T21:34:06Z",
        "updatedAt" : "2019-03-08T14:23:30Z",
        "lastEditedBy" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "tags" : [
        ]
      }
    ],
    "commit" : "1bd9ed06d34efb328ce514551e1a23d708f1e526",
    "line" : 87,
    "diffHunk" : "@@ -1,1 +85,89 @@\t// in which case we should return from here so as volume can be node published\n\t// before we can resize\n\tif !stageUnstageSet && resizeOptions.CSIVolumePhase == volume.CSIVolumeStaged {\n\t\treturn false, nil\n\t}"
  }
]