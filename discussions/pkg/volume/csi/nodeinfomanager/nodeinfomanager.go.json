[
  {
    "id" : "f791d8bc-0ba5-4f11-952f-ba778007255e",
    "prId" : 80935,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/80935#pullrequestreview-271042053",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f80b085a-4e8d-4617-8ac8-93e2a97be490",
        "parentId" : null,
        "authorId" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "body" : "yeah this was an oversight, thanks for catching!",
        "createdAt" : "2019-08-05T22:49:21Z",
        "updatedAt" : "2019-08-05T23:02:15Z",
        "lastEditedBy" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "tags" : [
        ]
      }
    ],
    "commit" : "bd42e728a849a00225b15cc3650bad729f0a40d0",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +418,422 @@\t\t_, err = nim.CreateCSINode()\n\t\treturn err\n\t} else if err != nil {\n\t\treturn err\n\t}"
  },
  {
    "id" : "ff967ad9-04c8-4f2b-8e61-1fbaae8dfebb",
    "prId" : 77595,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/77595#pullrequestreview-235946093",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d0cf2857-5a2e-4bef-b2a7-e159972d7c0c",
        "parentId" : null,
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "It's technically valid from the CSI spec.  Maybe either truncate the limit to the MaxInt32 or keep it as no limit and change the log to a warning with \"Exceeded max supported attach limit value...\"",
        "createdAt" : "2019-05-10T01:04:22Z",
        "updatedAt" : "2019-06-25T14:31:23Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "f6f3b3fd-b5df-4bb3-bd8b-eba052b5b3a6",
        "parentId" : "d0cf2857-5a2e-4bef-b2a7-e159972d7c0c",
        "authorId" : "255dd885-bee4-4c1f-baef-ba11f903dc5c",
        "body" : "Truncated & logged a warning",
        "createdAt" : "2019-05-10T08:38:08Z",
        "updatedAt" : "2019-06-25T14:31:23Z",
        "lastEditedBy" : "255dd885-bee4-4c1f-baef-ba11f903dc5c",
        "tags" : [
        ]
      }
    ],
    "commit" : "6abc04d059b42ffdc1b68f5b847f18e57ac0680d",
    "line" : 91,
    "diffHunk" : "@@ -1,1 +564,568 @@\t\t\tdriverSpec.Allocatable = &storagev1beta1.VolumeNodeResources{Count: &m}\n\t\t} else {\n\t\t\tklog.Errorf(\"Invalid attach limit value %d cannot be added to CSINode object for %q\", maxAttachLimit, driverName)\n\t\t}\n\t}"
  },
  {
    "id" : "35daff7d-013c-4304-b1f5-f1aacecdf78d",
    "prId" : 77595,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/77595#pullrequestreview-238025820",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bf2c3226-949e-436f-8482-7a24f2c76939",
        "parentId" : null,
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "Will these log messages be repeated frequently? If so, maybe we should have a higher log level.  Or should we actually return an error? Will that cause driver registration to fail?",
        "createdAt" : "2019-05-11T01:18:12Z",
        "updatedAt" : "2019-06-25T14:31:23Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "c85e1f5b-5908-44dd-b21c-f5ba1a03913d",
        "parentId" : "bf2c3226-949e-436f-8482-7a24f2c76939",
        "authorId" : "255dd885-bee4-4c1f-baef-ba11f903dc5c",
        "body" : "I don't expect them to repeat frequently, only during the registration of a driver that has an invalid max volumes number.\r\n\r\n> Or should we actually return an error? Will that cause driver registration to fail?\r\n\r\nYeah, the registration would fail...",
        "createdAt" : "2019-05-11T12:36:15Z",
        "updatedAt" : "2019-06-25T14:31:23Z",
        "lastEditedBy" : "255dd885-bee4-4c1f-baef-ba11f903dc5c",
        "tags" : [
        ]
      },
      {
        "id" : "dceeea50-35ab-4645-a349-fc1de99f6004",
        "parentId" : "bf2c3226-949e-436f-8482-7a24f2c76939",
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "Should we fail registration?  The driver is passing us an invalid value.",
        "createdAt" : "2019-05-13T17:23:31Z",
        "updatedAt" : "2019-06-25T14:31:23Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "eafd3ee2-8fd0-4db2-b3fd-9f95e69d9553",
        "parentId" : "bf2c3226-949e-436f-8482-7a24f2c76939",
        "authorId" : "255dd885-bee4-4c1f-baef-ba11f903dc5c",
        "body" : "In this case, the invalid value is simply ignored. I asked this internally and the consensus was that it's not severe enough to fail the registration.\r\n\r\nI don't have a strong opinion on this, but if we choose to fail the registration I think this validation should be done early on in the stack.\r\n\r\n",
        "createdAt" : "2019-05-15T19:46:57Z",
        "updatedAt" : "2019-06-25T14:31:23Z",
        "lastEditedBy" : "255dd885-bee4-4c1f-baef-ba11f903dc5c",
        "tags" : [
        ]
      }
    ],
    "commit" : "6abc04d059b42ffdc1b68f5b847f18e57ac0680d",
    "line" : 91,
    "diffHunk" : "@@ -1,1 +564,568 @@\t\t\tdriverSpec.Allocatable = &storagev1beta1.VolumeNodeResources{Count: &m}\n\t\t} else {\n\t\t\tklog.Errorf(\"Invalid attach limit value %d cannot be added to CSINode object for %q\", maxAttachLimit, driverName)\n\t\t}\n\t}"
  },
  {
    "id" : "7b13fd7b-2c5c-4e7a-a508-826c6ad2b25f",
    "prId" : 74283,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/74283#pullrequestreview-209261982",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1ad4c5c4-03b7-426f-87bb-61e73113c641",
        "parentId" : null,
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "The original logic also [deleted the CSINode](https://github.com/kubernetes/kubernetes/commit/06f3b26012e09318935c248e62864e9349da6cd8#diff-0e13ddc214dda9ec6a0a089c62d372aeL482) object when no drivers remained.  We should add that back. @davidz627 @verult were there any potential races with register/unregister?",
        "createdAt" : "2019-02-28T19:31:50Z",
        "updatedAt" : "2019-03-05T00:42:58Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      }
    ],
    "commit" : "d69e0ff3f0547cc1acc6b35af1e6b93b90ed0e45",
    "line" : 250,
    "diffHunk" : "@@ -1,1 +472,476 @@}\n\nfunc (nim *nodeInfoManager) uninstallDriverFromCSINode(\n\tcsiDriverName string) error {\n"
  },
  {
    "id" : "05a24c46-c4c2-48cf-be35-9694ffa70a04",
    "prId" : 74283,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/74283#pullrequestreview-210372666",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c34c22a4-ff00-413b-bdc2-cb0b8476af09",
        "parentId" : null,
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "Can you also add a test case for this?",
        "createdAt" : "2019-03-04T21:18:57Z",
        "updatedAt" : "2019-03-05T00:42:58Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "fbd6e256-56b6-46de-a8c1-dfc15795904d",
        "parentId" : "c34c22a4-ff00-413b-bdc2-cb0b8476af09",
        "authorId" : "275dd783-53c3-4fed-8434-96ed6a2e0331",
        "body" : "Sure",
        "createdAt" : "2019-03-04T21:20:27Z",
        "updatedAt" : "2019-03-05T00:42:58Z",
        "lastEditedBy" : "275dd783-53c3-4fed-8434-96ed6a2e0331",
        "tags" : [
        ]
      }
    ],
    "commit" : "d69e0ff3f0547cc1acc6b35af1e6b93b90ed0e45",
    "line" : 307,
    "diffHunk" : "@@ -1,1 +515,519 @@\t\t\t// Found a driver with name csiDriverName\n\t\t\t// Set hasModified to true because it will be removed\n\t\t\thasModified = true\n\t\t}\n\t}"
  },
  {
    "id" : "4e9ed855-6f58-4a39-afd7-ff62e02bae46",
    "prId" : 71058,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/71058#pullrequestreview-175635065",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bb86fafe-a431-4c6f-b0dc-0fee7ff69c83",
        "parentId" : null,
        "authorId" : "8e448017-7838-493d-a424-33cada0da657",
        "body" : "Any concern about this blocking for a long time and preventing progress on the caller?",
        "createdAt" : "2018-11-16T00:34:05Z",
        "updatedAt" : "2018-11-16T21:01:30Z",
        "lastEditedBy" : "8e448017-7838-493d-a424-33cada0da657",
        "tags" : [
        ]
      },
      {
        "id" : "6e9fe204-064d-4124-87b1-1e2da5c9aff6",
        "parentId" : "bb86fafe-a431-4c6f-b0dc-0fee7ff69c83",
        "authorId" : "34f61776-88da-4b26-aa20-3c4f92530d05",
        "body" : "The plugin watcher spawns a separate goroutine for each event, so we should be good here",
        "createdAt" : "2018-11-16T02:09:21Z",
        "updatedAt" : "2018-11-16T21:01:30Z",
        "lastEditedBy" : "34f61776-88da-4b26-aa20-3c4f92530d05",
        "tags" : [
        ]
      }
    ],
    "commit" : "b275ebb5a8ed823655f35463d0e4725dcdea251c",
    "line" : 43,
    "diffHunk" : "@@ -1,1 +151,155 @@func (nim *nodeInfoManager) updateNode(updateFuncs ...nodeUpdateFunc) error {\n\tvar updateErrs []error\n\terr := wait.ExponentialBackoff(updateBackoff, func() (bool, error) {\n\t\tif err := nim.tryUpdateNode(updateFuncs...); err != nil {\n\t\t\tupdateErrs = append(updateErrs, err)"
  },
  {
    "id" : "3d288778-479d-4c60-87b8-6d0290d66bfa",
    "prId" : 70540,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/70540#pullrequestreview-171131981",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d841a75b-1a08-4936-b677-6aa9eec189ba",
        "parentId" : null,
        "authorId" : "34f61776-88da-4b26-aa20-3c4f92530d05",
        "body" : "It's not always the node status that gets updated. For example, for labels are added to the Node object for topology.\r\n\r\nDumb question: why wasn't it working before? ",
        "createdAt" : "2018-11-01T18:20:22Z",
        "updatedAt" : "2018-11-02T19:10:49Z",
        "lastEditedBy" : "34f61776-88da-4b26-aa20-3c4f92530d05",
        "tags" : [
        ]
      },
      {
        "id" : "119c19b4-9729-4c24-a4e9-297ee8c969bf",
        "parentId" : "d841a75b-1a08-4936-b677-6aa9eec189ba",
        "authorId" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "body" : "Patching status also updates labels and annotations. \r\n\r\n>Dumb question: why wasn't it working before?\r\n\r\nI am not sure I understand. It never updated attach limits in node's allocatable/capacity. it never worked. The unit tests are not enough to capture this stuff. I am working on e2e to make sure this is covered. \r\n",
        "createdAt" : "2018-11-01T18:26:00Z",
        "updatedAt" : "2018-11-02T19:10:49Z",
        "lastEditedBy" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "tags" : [
        ]
      },
      {
        "id" : "8bf19cab-bf42-4e67-bab1-a9baa48b5a2c",
        "parentId" : "d841a75b-1a08-4936-b677-6aa9eec189ba",
        "authorId" : "34f61776-88da-4b26-aa20-3c4f92530d05",
        "body" : "Previously the fields are updated in the fetched Node object directly, and the object is then passed to `Update()`. So `Update()` still sent the request with updated fields right? Why weren't allocatable/capacity updated?",
        "createdAt" : "2018-11-01T20:43:19Z",
        "updatedAt" : "2018-11-02T19:10:49Z",
        "lastEditedBy" : "34f61776-88da-4b26-aa20-3c4f92530d05",
        "tags" : [
        ]
      },
      {
        "id" : "3db09d00-2966-4856-9f70-0115bbc6926e",
        "parentId" : "d841a75b-1a08-4936-b677-6aa9eec189ba",
        "authorId" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "body" : "We discussed this offline. Hope that answers it. ",
        "createdAt" : "2018-11-01T22:23:57Z",
        "updatedAt" : "2018-11-02T19:10:49Z",
        "lastEditedBy" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "tags" : [
        ]
      },
      {
        "id" : "4b0716be-c9ab-480a-8bb7-880cdb79fa07",
        "parentId" : "d841a75b-1a08-4936-b677-6aa9eec189ba",
        "authorId" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "body" : "Added a note about why we are using `PatchNodeStatus` here. ",
        "createdAt" : "2018-11-02T14:44:44Z",
        "updatedAt" : "2018-11-02T19:10:49Z",
        "lastEditedBy" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "tags" : [
        ]
      }
    ],
    "commit" : "889468b1ab07f2d3b203cfccb66cf86a80ec057b",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +171,175 @@\t\t\t// PatchNodeStatus can update both node's status and labels or annotations\n\t\t\t// Updating status by directly updating node does not work\n\t\t\t_, _, updateErr := nodeutil.PatchNodeStatus(kubeClient.CoreV1(), types.NodeName(node.Name), originalNode, node)\n\t\t\treturn updateErr // do not wrap error\n\t\t}"
  },
  {
    "id" : "897ff5f3-9612-4a3a-8027-82d684fcabb4",
    "prId" : 70515,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/70515#pullrequestreview-172733656",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "23417ade-de6e-4fb4-88eb-106b9f7a7fa4",
        "parentId" : null,
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "It's feels potentially problematic that we are adding and removing drivers one by one imperatively rather then periodically applying this list of drivers that the node currently knows to be installed. What if the nodeinfomanager is working off a cached nodeInfo here? It's possible that the apiserver served the object from cache. Would we ever retry the uninstall or would we lose track of the driver?",
        "createdAt" : "2018-11-07T21:41:38Z",
        "updatedAt" : "2018-11-09T03:45:15Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      },
      {
        "id" : "015e9b95-fd9f-4af3-bb7a-e070721de6e9",
        "parentId" : "23417ade-de6e-4fb4-88eb-106b9f7a7fa4",
        "authorId" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "body" : "I would agree, I believe this issue is tracked here: https://github.com/kubernetes/kubernetes/issues/67972 under the third point. I think for now this issue is out of the scope of this API change",
        "createdAt" : "2018-11-07T22:37:54Z",
        "updatedAt" : "2018-11-09T03:45:15Z",
        "lastEditedBy" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "tags" : [
        ]
      }
    ],
    "commit" : "06f3b26012e09318935c248e62864e9349da6cd8",
    "line" : 247,
    "diffHunk" : "@@ -1,1 +490,494 @@\t\tnodeInfo.Status.Drivers = newDriverStatuses\n\n\t\tif !hasModified {\n\t\t\t// No changes, don't update\n\t\t\treturn nil"
  },
  {
    "id" : "032c0880-8337-4fae-9247-fb629282ba73",
    "prId" : 70515,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/70515#pullrequestreview-172757258",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7cbce27a-874f-4223-9624-621be4e80618",
        "parentId" : null,
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "You might want to use an Informer here. Will anything other than the node ever modify the node info object?",
        "createdAt" : "2018-11-07T21:43:57Z",
        "updatedAt" : "2018-11-09T03:45:15Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      },
      {
        "id" : "a97273de-0f51-4e5a-9059-53896c2c27a9",
        "parentId" : "7cbce27a-874f-4223-9624-621be4e80618",
        "authorId" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "body" : "nothing other than the node will modify the node info object. \r\nhttps://github.com/kubernetes/kubernetes/issues/70773",
        "createdAt" : "2018-11-08T00:04:04Z",
        "updatedAt" : "2018-11-09T03:45:15Z",
        "lastEditedBy" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "tags" : [
        ]
      }
    ],
    "commit" : "06f3b26012e09318935c248e62864e9349da6cd8",
    "line" : 59,
    "diffHunk" : "@@ -1,1 +334,338 @@\n\tretryErr := retry.RetryOnConflict(retry.DefaultRetry, func() error {\n\t\tnodeInfo, err := csiKubeClient.CsiV1alpha1().CSINodeInfos().Get(string(nim.nodeName), metav1.GetOptions{})\n\t\tif nodeInfo == nil || errors.IsNotFound(err) {\n\t\t\tnodeInfo, err = nim.CreateCSINodeInfo()"
  },
  {
    "id" : "42b67acb-f6c4-492c-9064-b80480762b02",
    "prId" : 67684,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/67684#pullrequestreview-150324961",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fea43c3f-19e3-41f0-a697-d1f34635b039",
        "parentId" : null,
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "are there plans to use a shared informer?  If so, we should clone the node object first before modifying it so it doesn't impact other uses that may be sharing the same pointer.",
        "createdAt" : "2018-08-27T22:03:19Z",
        "updatedAt" : "2018-09-08T00:45:59Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "0189bdce-f7fc-40eb-a218-b7bde9380a77",
        "parentId" : "fea43c3f-19e3-41f0-a697-d1f34635b039",
        "authorId" : "34f61776-88da-4b26-aa20-3c4f92530d05",
        "body" : "No I wasn't planning to. Driver registration is fairly infrequent so watching the object doesn't seem worth it",
        "createdAt" : "2018-08-28T21:28:58Z",
        "updatedAt" : "2018-09-08T00:45:59Z",
        "lastEditedBy" : "34f61776-88da-4b26-aa20-3c4f92530d05",
        "tags" : [
        ]
      }
    ],
    "commit" : "94d649b5904bac29fcea9269ce98753604be1258",
    "line" : 147,
    "diffHunk" : "@@ -1,1 +145,149 @@\n\t\tnodeClient := nim.k8s.CoreV1().Nodes()\n\t\tnode, err := nodeClient.Get(string(nim.nodeName), metav1.GetOptions{})\n\t\tif err != nil {\n\t\t\treturn err // do not wrap error"
  },
  {
    "id" : "76c7256a-a67a-423d-b05f-f91569fb0f41",
    "prId" : 67684,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/67684#pullrequestreview-152328888",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3dd6e526-9d56-4b0f-ad80-9cc2204b3cd8",
        "parentId" : null,
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "This works only if the multiple updateFuncs are not conflicting with each other.",
        "createdAt" : "2018-08-27T22:04:09Z",
        "updatedAt" : "2018-09-08T00:45:59Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "6e889d26-aca5-437e-9855-53ff37fbd9b6",
        "parentId" : "3dd6e526-9d56-4b0f-ad80-9cc2204b3cd8",
        "authorId" : "34f61776-88da-4b26-aa20-3c4f92530d05",
        "body" : "I'll make it more explicit in the comments for this function that because updateFuncs are called in order, each updateFunc should consider the effects of previous updateFuncs",
        "createdAt" : "2018-08-28T21:33:28Z",
        "updatedAt" : "2018-09-08T00:45:59Z",
        "lastEditedBy" : "34f61776-88da-4b26-aa20-3c4f92530d05",
        "tags" : [
        ]
      },
      {
        "id" : "f313da9f-bfc3-4fb2-9a61-0ea87c16467e",
        "parentId" : "3dd6e526-9d56-4b0f-ad80-9cc2204b3cd8",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "> each updateFunc should consider the effects of previous updateFuncs\r\n\r\nwhat does that mean?",
        "createdAt" : "2018-08-29T15:19:56Z",
        "updatedAt" : "2018-09-08T00:45:59Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "55a81d59-ea8d-4467-a385-3fd6cf77d951",
        "parentId" : "3dd6e526-9d56-4b0f-ad80-9cc2204b3cd8",
        "authorId" : "34f61776-88da-4b26-aa20-3c4f92530d05",
        "body" : "I added a comment here - does that help or should it be more clear?\r\nhttps://github.com/kubernetes/kubernetes/blob/9c855fb9e62de46f511d9dc0446425c1b5a76499/pkg/volume/csi/nodeinfomanager/nodeinfomanager.go#L119",
        "createdAt" : "2018-08-31T01:06:08Z",
        "updatedAt" : "2018-09-08T00:45:59Z",
        "lastEditedBy" : "34f61776-88da-4b26-aa20-3c4f92530d05",
        "tags" : [
        ]
      },
      {
        "id" : "ad98bee9-e321-40e3-8ce5-3860033cffa9",
        "parentId" : "3dd6e526-9d56-4b0f-ad80-9cc2204b3cd8",
        "authorId" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "body" : "You mean, if two update functions both update same field then last one will win, but caller of this function should try and ensure that - it does not happen in first place?\r\n",
        "createdAt" : "2018-09-04T21:18:42Z",
        "updatedAt" : "2018-09-08T00:45:59Z",
        "lastEditedBy" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "tags" : [
        ]
      },
      {
        "id" : "471c70ec-4f04-420d-b20a-1393291433ea",
        "parentId" : "3dd6e526-9d56-4b0f-ad80-9cc2204b3cd8",
        "authorId" : "34f61776-88da-4b26-aa20-3c4f92530d05",
        "body" : "Well said! Will update the comment",
        "createdAt" : "2018-09-05T04:07:11Z",
        "updatedAt" : "2018-09-08T00:45:59Z",
        "lastEditedBy" : "34f61776-88da-4b26-aa20-3c4f92530d05",
        "tags" : [
        ]
      }
    ],
    "commit" : "94d649b5904bac29fcea9269ce98753604be1258",
    "line" : 154,
    "diffHunk" : "@@ -1,1 +152,156 @@\t\tneedUpdate := false\n\t\tfor _, update := range updateFuncs {\n\t\t\tnewNode, updated, err := update(node)\n\t\t\tif err != nil {\n\t\t\t\treturn err"
  },
  {
    "id" : "60579ba6-e14e-4047-b076-b03b46ab68eb",
    "prId" : 67684,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/67684#pullrequestreview-152322959",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "676097b6-1166-400b-a604-039fb492d3d7",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "cc @mikedanese for expanded self-labeling by kubelets",
        "createdAt" : "2018-09-05T03:19:32Z",
        "updatedAt" : "2018-09-08T00:45:59Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "94d649b5904bac29fcea9269ce98753604be1258",
    "line" : 307,
    "diffHunk" : "@@ -1,1 +305,309 @@\t\t}\n\t\tfor k, v := range topology.Segments {\n\t\t\tnode.Labels[k] = v\n\t\t}\n\t\treturn node, true, nil"
  },
  {
    "id" : "2ec3f356-48d2-4d61-9183-b34b03b389c6",
    "prId" : 67684,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/67684#pullrequestreview-152702413",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4cb3bc0b-87a5-4aeb-b83b-0eeda5c69537",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "I see this adding labels to a node, what removes those labels when the CSI driver reports different labels, is unregistered, or is absent on kubelet startup?\r\n\r\nWhat keeps track of which labels came from csi drivers and ensures stale ones are removed from the node?",
        "createdAt" : "2018-09-05T20:36:39Z",
        "updatedAt" : "2018-09-08T00:45:59Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "8a344f4e-a5f6-4edf-9d33-ea8e0b8ffd68",
        "parentId" : "4cb3bc0b-87a5-4aeb-b83b-0eeda5c69537",
        "authorId" : "34f61776-88da-4b26-aa20-3c4f92530d05",
        "body" : "Labels are never removed, because it could be used by multiple components, not just CSI. \r\n\r\nSee here for more context: https://github.com/kubernetes/community/blob/7302f0a73403d493126f517cb10638f2faffc164/contributors/design-proposals/storage/container-storage-interface.md#topology-representation-in-node-objects\r\n\r\nHere's the full design PR: https://github.com/kubernetes/community/pull/2034",
        "createdAt" : "2018-09-05T21:48:25Z",
        "updatedAt" : "2018-09-08T00:45:59Z",
        "lastEditedBy" : "34f61776-88da-4b26-aa20-3c4f92530d05",
        "tags" : [
        ]
      }
    ],
    "commit" : "94d649b5904bac29fcea9269ce98753604be1258",
    "line" : 311,
    "diffHunk" : "@@ -1,1 +309,313 @@\t\treturn node, true, nil\n\t}\n}\n\nfunc (nim *nodeInfoManager) updateCSINodeInfo("
  }
]