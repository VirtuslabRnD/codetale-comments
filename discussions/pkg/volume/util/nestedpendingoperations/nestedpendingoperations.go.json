[
  {
    "id" : "4d6124ed-bded-40b1-98dd-590fb3b71c48",
    "prId" : 88678,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/88678#pullrequestreview-369196966",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5c4d2d4f-bc8b-4c0b-8cb2-f49acc402c4e",
        "parentId" : null,
        "authorId" : "34f61776-88da-4b26-aa20-3c4f92530d05",
        "body" : "We should be defensive about indexing on a negative number and return if op isn't found. Update coming soon.",
        "createdAt" : "2020-03-04T23:22:08Z",
        "updatedAt" : "2020-03-06T06:22:35Z",
        "lastEditedBy" : "34f61776-88da-4b26-aa20-3c4f92530d05",
        "tags" : [
        ]
      }
    ],
    "commit" : "ef3d66b98bb0d251208ef990895bc944343d1142",
    "line" : 262,
    "diffHunk" : "@@ -1,1 +247,251 @@\t// Assumes lock has been acquired by caller.\n\n\topIndex := -1\n\tfor i, op := range grm.operations {\n\t\tif op.key.volumeName == key.volumeName &&"
  },
  {
    "id" : "4e876783-8c76-4cf9-a135-bde6fa42d7f8",
    "prId" : 88678,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/88678#pullrequestreview-369911959",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2c081531-7d60-4145-a019-ec7f21620d25",
        "parentId" : null,
        "authorId" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "body" : "if volumeNameMatch is false, we could skip it and continue with next loop.",
        "createdAt" : "2020-03-05T18:47:54Z",
        "updatedAt" : "2020-03-06T06:22:35Z",
        "lastEditedBy" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "tags" : [
        ]
      },
      {
        "id" : "6b552469-5425-48ec-ac91-8d7f4137940f",
        "parentId" : "2c081531-7d60-4145-a019-ec7f21620d25",
        "authorId" : "34f61776-88da-4b26-aa20-3c4f92530d05",
        "body" : "The next few conditions evaluations should be pretty fast. For the sake of clarity I have a slight preference for the current form",
        "createdAt" : "2020-03-05T21:03:18Z",
        "updatedAt" : "2020-03-06T06:22:35Z",
        "lastEditedBy" : "34f61776-88da-4b26-aa20-3c4f92530d05",
        "tags" : [
        ]
      }
    ],
    "commit" : "ef3d66b98bb0d251208ef990895bc944343d1142",
    "line" : 209,
    "diffHunk" : "@@ -1,1 +212,216 @@\n\tfor previousOpIndex, previousOp := range grm.operations {\n\t\tvolumeNameMatch := previousOp.key.volumeName == key.volumeName\n\n\t\tpodNameMatch := previousOp.key.podName == EmptyUniquePodName ||"
  },
  {
    "id" : "00e7a482-cdda-4503-8b7c-8b520c4a1e8c",
    "prId" : 88678,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/88678#pullrequestreview-369963266",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "41d564db-c013-430e-8e74-d74a86715005",
        "parentId" : null,
        "authorId" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "body" : "the fix to https://github.com/kubernetes/kubernetes/pull/87258/files is here?\r\njust want to understand how this causes PD leaks. Do you have the workflow of how it happens?",
        "createdAt" : "2020-03-05T19:21:52Z",
        "updatedAt" : "2020-03-06T06:22:35Z",
        "lastEditedBy" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "tags" : [
        ]
      },
      {
        "id" : "3186c72c-8ea8-4a91-86f4-f5f8f7dea700",
        "parentId" : "41d564db-c013-430e-8e74-d74a86715005",
        "authorId" : "34f61776-88da-4b26-aa20-3c4f92530d05",
        "body" : "Added a description here: https://github.com/kubernetes/kubernetes/issues/88355#issuecomment-595480033\r\n\r\nLet me know if anything is unclear, happy to chat in person if you'd like!",
        "createdAt" : "2020-03-05T22:34:12Z",
        "updatedAt" : "2020-03-06T06:22:35Z",
        "lastEditedBy" : "34f61776-88da-4b26-aa20-3c4f92530d05",
        "tags" : [
        ]
      }
    ],
    "commit" : "ef3d66b98bb0d251208ef990895bc944343d1142",
    "line" : 247,
    "diffHunk" : "@@ -1,1 +237,241 @@\t\t\top.key.podName == key.podName &&\n\t\t\top.key.nodeName == key.nodeName {\n\t\t\treturn uint(i), nil\n\t\t}\n\t}"
  },
  {
    "id" : "275b386c-f677-41d7-888e-8af34371b9bc",
    "prId" : 88678,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/88678#pullrequestreview-370088573",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cb4b173e-68c8-46e4-8e0c-48e35f11ae25",
        "parentId" : null,
        "authorId" : "5f2c1de8-4266-42c0-b343-ba247af3578f",
        "body" : "OMG can we include the exponential backoff package in the refactor? I just read why you even need to pass this string in.",
        "createdAt" : "2020-03-06T05:23:34Z",
        "updatedAt" : "2020-03-06T06:22:35Z",
        "lastEditedBy" : "5f2c1de8-4266-42c0-b343-ba247af3578f",
        "tags" : [
        ]
      }
    ],
    "commit" : "ef3d66b98bb0d251208ef990895bc944343d1142",
    "line" : 141,
    "diffHunk" : "@@ -1,1 +152,156 @@\t\t}\n\n\t\tbackOffErr := previousOp.expBackoff.SafeToRetry(fmt.Sprintf(\"%+v\", opKey))\n\t\tif backOffErr != nil {\n\t\t\tif previousOp.operationName == generatedOperations.OperationName {"
  },
  {
    "id" : "c36e6f92-daff-405c-93cd-8445ca0bd0e1",
    "prId" : 77883,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/77883#pullrequestreview-237952851",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "566e5bdb-eefc-4e3d-90ff-477bab4efb77",
        "parentId" : null,
        "authorId" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "body" : "Whole nestedpendingoperations.go  changes look pretty dangerous. What was wrong with the old code?",
        "createdAt" : "2019-05-15T08:48:12Z",
        "updatedAt" : "2019-05-17T01:35:09Z",
        "lastEditedBy" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "tags" : [
        ]
      },
      {
        "id" : "5f977096-f526-4f84-bb0b-7057ed69603e",
        "parentId" : "566e5bdb-eefc-4e3d-90ff-477bab4efb77",
        "authorId" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "body" : "Can you explain why you think it is dangerous? What you mean by old code? The workqueues spawn their own goroutines whereas nestedpendingoperation manages its own goroutines, so we need a way to use operation generator (so as metrics etc are recorded) and yet use workqueues.\r\n\r\n",
        "createdAt" : "2019-05-15T15:57:28Z",
        "updatedAt" : "2019-05-17T01:35:09Z",
        "lastEditedBy" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "tags" : [
        ]
      },
      {
        "id" : "4bafa206-c36f-4d50-bfb7-2ac968c24176",
        "parentId" : "566e5bdb-eefc-4e3d-90ff-477bab4efb77",
        "authorId" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "body" : "I see, you just moved it to `volume/util/types/types.go`. I missed that file.",
        "createdAt" : "2019-05-15T17:02:14Z",
        "updatedAt" : "2019-05-17T01:35:09Z",
        "lastEditedBy" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "tags" : [
        ]
      }
    ],
    "commit" : "4886e8782c82e1484b04b9d14bb589548ebca83e",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +144,148 @@\t\t// Handle completion of and error, if any, from operationFunc()\n\t\tdefer grm.operationComplete(volumeName, podName, &detailedErr)\n\t\treturn generatedOperations.Run()\n\t}()\n"
  },
  {
    "id" : "f3bfb2cb-daea-4ccd-84c7-dc6380d67843",
    "prId" : 75213,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/75213#pullrequestreview-215292922",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8d808a45-30ba-4415-bda8-a35df08c92ac",
        "parentId" : null,
        "authorId" : "34f61776-88da-4b26-aa20-3c4f92530d05",
        "body" : "An AlreadyExists error is returned for the same volumeName and same podName, as long as the previous operation is pending, right?\r\n\r\nIt was unclear to me from the comments whether we allow an operation to proceed when another operation with the same (volumeName, podName, operationName) key is in flight",
        "createdAt" : "2019-03-13T21:45:18Z",
        "updatedAt" : "2019-03-13T21:48:45Z",
        "lastEditedBy" : "34f61776-88da-4b26-aa20-3c4f92530d05",
        "tags" : [
        ]
      },
      {
        "id" : "0d42d799-a0ee-45d0-b24b-c2306ddafc5c",
        "parentId" : "8d808a45-30ba-4415-bda8-a35df08c92ac",
        "authorId" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "body" : "yeah, operations with same volumename and podName aren't allowed to proceed concurrently. If there is a pending operation with same volumenme+podName there `AlreadyExists` error is thrown.",
        "createdAt" : "2019-03-14T00:33:49Z",
        "updatedAt" : "2019-03-14T00:33:49Z",
        "lastEditedBy" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "tags" : [
        ]
      },
      {
        "id" : "b11c8f90-c8f9-4add-9b84-3db490846098",
        "parentId" : "8d808a45-30ba-4415-bda8-a35df08c92ac",
        "authorId" : "34f61776-88da-4b26-aa20-3c4f92530d05",
        "body" : "could you update the comments with that explanation?",
        "createdAt" : "2019-03-16T00:52:44Z",
        "updatedAt" : "2019-03-16T00:52:45Z",
        "lastEditedBy" : "34f61776-88da-4b26-aa20-3c4f92530d05",
        "tags" : [
        ]
      }
    ],
    "commit" : "97ec61561af6bd37f489d3ea71ada66d7e13aae2",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +49,53 @@\t// running operations and spawns a new go routine to execute operationFunc.\n\t// If an operation with the same volumeName, same or empty podName\n\t// and same operationName exits, an AlreadyExists or ExponentialBackoff\n\t// error is returned. If an operation with same volumeName and podName\n\t// has ExponentialBackoff error but operationName is different, exponential"
  },
  {
    "id" : "8991e50a-119e-4396-b1a0-f54947e93931",
    "prId" : 56872,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/56872#pullrequestreview-89242417",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4ca3714b-cac1-402a-b918-7d027eea0a63",
        "parentId" : null,
        "authorId" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "body" : "same as before - I do not see why we are passing address of an interface in those places. @davidz627 can you explain?",
        "createdAt" : "2018-01-16T19:57:50Z",
        "updatedAt" : "2018-01-16T19:57:50Z",
        "lastEditedBy" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "tags" : [
        ]
      },
      {
        "id" : "d9182555-2534-4ad3-b7f2-e3d99b9fa3a9",
        "parentId" : "4ca3714b-cac1-402a-b918-7d027eea0a63",
        "authorId" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "body" : "This was added to address a bug I found while writing this PR. Previously the CompleteFuncs were not logging error at all.\r\n\r\nIn the previous version of the function take a look at the line:\r\ndefer operationCompleteFunc(err)\r\nBecause Go evaluates \"defer\"s variables at runtime, we see that the value of \"err\" will always be nil in this version.\r\n\r\nThe fixed version gives this operationCompleteFunction a pointer to err. Therefore when the OperationFunc completes execution, the RecoverFromPanic function will actually write a value to the location of the err pointer in case of error. Then the CompleteFunc will be able to use this error for logging or its other functions by inspecting the value written at the pointer location.",
        "createdAt" : "2018-01-16T20:13:31Z",
        "updatedAt" : "2018-01-16T20:13:31Z",
        "lastEditedBy" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "tags" : [
        ]
      },
      {
        "id" : "878a9753-d40e-40cb-97bf-8da8e1d9a6d6",
        "parentId" : "4ca3714b-cac1-402a-b918-7d027eea0a63",
        "authorId" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "body" : "Hope that helps! Let me know if there is any flaw in my reasoning.\r\n\r\nI also did some testing to confirm the errors were not being logged previously, and are now being logged successfully after this change.",
        "createdAt" : "2018-01-16T20:14:16Z",
        "updatedAt" : "2018-01-16T20:14:16Z",
        "lastEditedBy" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "tags" : [
        ]
      },
      {
        "id" : "37921105-c210-44d7-b0a1-85f08907e2a1",
        "parentId" : "4ca3714b-cac1-402a-b918-7d027eea0a63",
        "authorId" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "body" : "ack. ",
        "createdAt" : "2018-01-16T20:46:32Z",
        "updatedAt" : "2018-01-16T20:46:32Z",
        "lastEditedBy" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "tags" : [
        ]
      }
    ],
    "commit" : "e3f8f64c1743e261fffa1df6795fa44ea226d3b1",
    "line" : 40,
    "diffHunk" : "@@ -1,1 +140,144 @@\t\t}\n\t\t// Handle panic, if any, from operationFunc()\n\t\tdefer k8sRuntime.RecoverFromPanic(&detailedErr)\n\t\treturn generatedOperations.OperationFunc()\n\t}()"
  }
]