[
  {
    "id" : "17654328-e3a8-4d7f-bc1d-fd58d10e8198",
    "prId" : 89629,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/89629#pullrequestreview-711562031",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f354b3df-3563-43c7-a2a8-416095fc4d7d",
        "parentId" : null,
        "authorId" : "283e6af3-b438-4fa4-947b-236df9d77f62",
        "body" : "in my env, `/proc/self/mountinfo` like this , \r\n```\r\n523 47 253:16 /kubelet/pods/d166411c-ea15-11eb-abc8-525400f80eae/volumes/kubernetes.io~configmap/extra-cfg/..2021_07_21_11_21_39.969349293/extra.ini /data/kubelet/pods/d166411c-ea15-11eb-abc8-525400f80eae/volume-subpaths/extra-cfg/test/0 rw,noatime shared:29 - xfs /dev/vdb rw,attr2,inode64,prjquota\r\n```\r\nmntInfo.Root is `/kubelet/pods/d166411c-ea15-11eb-abc8-525400f80eae/volumes/kubernetes.io~configmap/extra-cfg/..2021_07_21_11_21_39.969349293/extra.ini` \r\n\r\nis always not equal `subpath.Path`  because miss `/data` prefix.   \r\nkubelet root path in `/data`\r\n```\r\n/dev/vdb       1000G   11G  989G   2% /data\r\n```\r\n",
        "createdAt" : "2021-07-21T11:29:46Z",
        "updatedAt" : "2021-07-21T11:31:19Z",
        "lastEditedBy" : "283e6af3-b438-4fa4-947b-236df9d77f62",
        "tags" : [
        ]
      },
      {
        "id" : "fa5233f9-de65-4f07-af7f-44565e9eb35e",
        "parentId" : "f354b3df-3563-43c7-a2a8-416095fc4d7d",
        "authorId" : "283e6af3-b438-4fa4-947b-236df9d77f62",
        "body" : "@fatedier \r\nI tested it . If kubelet mounts an extra data disk, it will cause the missing prefix of `mntInfo.Root`",
        "createdAt" : "2021-07-21T11:49:18Z",
        "updatedAt" : "2021-07-21T12:20:03Z",
        "lastEditedBy" : "283e6af3-b438-4fa4-947b-236df9d77f62",
        "tags" : [
        ]
      }
    ],
    "commit" : "78b5003e88326a67ffd3263edce57832625f06d9",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +115,119 @@\t\t\treturn false, \"\", fmt.Errorf(\"error calling findMountInfo for %s: %s\", bindPathTarget, err)\n\t\t}\n\t\tif mntInfo.Root != subpath.Path {\n\t\t\t// It's already mounted but not what we want, unmount it\n\t\t\tif err = mounter.Unmount(bindPathTarget); err != nil {"
  },
  {
    "id" : "6883c545-d9e2-4040-bfc6-6b541a0eeeb4",
    "prId" : 86277,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/86277#pullrequestreview-332979585",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3967da9f-0e58-4e5c-80dd-d5fe68cf62a9",
        "parentId" : null,
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "Do you know when info is nil?",
        "createdAt" : "2019-12-16T19:15:02Z",
        "updatedAt" : "2019-12-17T01:59:30Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "9f7eb092-ef52-4322-adb3-ca0faf64b8bd",
        "parentId" : "3967da9f-0e58-4e5c-80dd-d5fe68cf62a9",
        "authorId" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "body" : "@msau42 \r\nFrom the kubelet log, it seems the info was nil during volume unmounting.",
        "createdAt" : "2019-12-16T19:18:55Z",
        "updatedAt" : "2019-12-17T01:59:30Z",
        "lastEditedBy" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "tags" : [
        ]
      },
      {
        "id" : "278c93e5-6873-4598-88bd-41be0041c663",
        "parentId" : "3967da9f-0e58-4e5c-80dd-d5fe68cf62a9",
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "Yes but why? File got deleted? Permission error?",
        "createdAt" : "2019-12-16T19:23:05Z",
        "updatedAt" : "2019-12-17T01:59:30Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "c3216fba-948b-43e8-8f41-fc53eb23e933",
        "parentId" : "3967da9f-0e58-4e5c-80dd-d5fe68cf62a9",
        "authorId" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "body" : "The file was deleted by the time this code was executed.",
        "createdAt" : "2019-12-16T19:24:49Z",
        "updatedAt" : "2019-12-17T01:59:30Z",
        "lastEditedBy" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "tags" : [
        ]
      },
      {
        "id" : "22109f2f-3b78-4580-a1ca-8d70c5440f8c",
        "parentId" : "3967da9f-0e58-4e5c-80dd-d5fe68cf62a9",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "should we be checking the incoming `err` parameter instead of this (that's when `info` is nil)",
        "createdAt" : "2019-12-16T21:50:33Z",
        "updatedAt" : "2019-12-17T01:59:30Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "cb03e80d-dc41-47a8-b753-7c41dbbdcaab",
        "parentId" : "3967da9f-0e58-4e5c-80dd-d5fe68cf62a9",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "see https://golang.org/pkg/path/filepath/#WalkFunc",
        "createdAt" : "2019-12-16T21:51:15Z",
        "updatedAt" : "2019-12-17T01:59:30Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "7ac5a112-5348-4707-84f7-03626168d20b",
        "parentId" : "3967da9f-0e58-4e5c-80dd-d5fe68cf62a9",
        "authorId" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "body" : "@liggitt \r\nYour comment has been addressed.",
        "createdAt" : "2019-12-16T21:57:56Z",
        "updatedAt" : "2019-12-17T01:59:30Z",
        "lastEditedBy" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "tags" : [
        ]
      },
      {
        "id" : "9ea4af6b-fe18-4fb5-a0b7-35be3ffba9b8",
        "parentId" : "3967da9f-0e58-4e5c-80dd-d5fe68cf62a9",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "I'm trying to understand the original intent of this comment:\r\n\r\n```\r\n// pass through errors and let doCleanSubPath handle them\r\n```\r\n\r\nthat method intentionally handles not found errors and returns nil...",
        "createdAt" : "2019-12-16T22:32:09Z",
        "updatedAt" : "2019-12-17T01:59:30Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "2b263206-f602-4ca8-bcba-47a2850bb16c",
        "parentId" : "3967da9f-0e58-4e5c-80dd-d5fe68cf62a9",
        "authorId" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "body" : "The error return from doCleanSubPath() overwrites the incoming error.\r\n\r\nNote: the incoming error is not passed to doCleanSubPath()",
        "createdAt" : "2019-12-16T22:39:17Z",
        "updatedAt" : "2019-12-17T01:59:30Z",
        "lastEditedBy" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "tags" : [
        ]
      },
      {
        "id" : "7d2c5c42-f3d9-4256-ac53-9aec9415ba41",
        "parentId" : "3967da9f-0e58-4e5c-80dd-d5fe68cf62a9",
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "This function was changed to `filepath.Walk` in https://github.com/kubernetes/kubernetes/pull/71804 in order to handle teardown of stale/corrupt nfs mounts. That is why we pass through the error.\r\n\r\nIn the case of notfound (and info == nil), I think skipping and continuing is the right thing to do",
        "createdAt" : "2019-12-16T22:41:43Z",
        "updatedAt" : "2019-12-17T01:59:30Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "6f4ee706-967a-4feb-b5a7-ee4194d3076f",
        "parentId" : "3967da9f-0e58-4e5c-80dd-d5fe68cf62a9",
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "https://github.com/kubernetes/kubernetes/pull/82698 is what introduced the panic in 1.17. So we should backport the fix as well",
        "createdAt" : "2019-12-16T22:43:00Z",
        "updatedAt" : "2019-12-17T01:59:30Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "e4bf6fa1-9fdc-4137-9e7c-59dcc7028e49",
        "parentId" : "3967da9f-0e58-4e5c-80dd-d5fe68cf62a9",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "in that case, the original `if info != nil && info.IsDir()` approach might be simplest, but this needs a comment explaining when info is nil",
        "createdAt" : "2019-12-16T22:46:37Z",
        "updatedAt" : "2019-12-17T01:59:30Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "feb856e8-065c-401b-820b-10e26225e6b3",
        "parentId" : "3967da9f-0e58-4e5c-80dd-d5fe68cf62a9",
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "I guess what I'm still wondering though, is what else is deleting the files at this time?  This is not supposed to run until all the pod's containers have already been terminated, so the only thing running should be volume cleanup, and that is supposed to be serialized per volume",
        "createdAt" : "2019-12-16T22:52:11Z",
        "updatedAt" : "2019-12-17T01:59:30Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "36384d24-5f18-4f39-ab09-d3249d6c3235",
        "parentId" : "3967da9f-0e58-4e5c-80dd-d5fe68cf62a9",
        "authorId" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "body" : "I have reverted to the initial fix and added a comment above the check.",
        "createdAt" : "2019-12-16T22:52:15Z",
        "updatedAt" : "2019-12-17T01:59:30Z",
        "lastEditedBy" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "tags" : [
        ]
      },
      {
        "id" : "e2ebddbd-f6b3-4485-85b5-c554088b66a4",
        "parentId" : "3967da9f-0e58-4e5c-80dd-d5fe68cf62a9",
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "I'm going to debug https://github.com/kubernetes/kubernetes/pull/86277#discussion_r358508595 further to figure out what's going on",
        "createdAt" : "2019-12-16T23:11:08Z",
        "updatedAt" : "2019-12-17T01:59:30Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "c442cce6-085b-4a9b-9fc0-cbc784461118",
        "parentId" : "3967da9f-0e58-4e5c-80dd-d5fe68cf62a9",
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "Ok I figured out that cause. It is indeed when you have stale nfs mounts, not file doesn't exist, triggered by this test case: [driver: nfs] subPath should be able to unmount after the subpath directory is deleted.\r\n\r\nThe reason why the test didn't catch the issue is because `doCleanSubPath` successfully unmounts, it's the processing afterwards that panics the goroutine, but the retry will resolve it.\r\n",
        "createdAt" : "2019-12-17T01:32:38Z",
        "updatedAt" : "2019-12-17T01:59:30Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      }
    ],
    "commit" : "62d77728829cb0a3f90fe343487f95bf0fe02ae5",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +242,246 @@\n\t\t\t// We need to check that info is not nil. This may happen when the incoming err is not nil due to stale mounts or permission errors.\n\t\t\tif info != nil && info.IsDir() {\n\t\t\t\t// skip subdirs of the volume: it only matters the first level to unmount, otherwise it would try to unmount subdir of the volume\n\t\t\t\treturn filepath.SkipDir"
  },
  {
    "id" : "fcb7a8d7-fb09-4055-9b7f-0fb38b266c34",
    "prId" : 74393,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/74393#pullrequestreview-208257909",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2c42e05a-bbad-4edc-930f-dd1ce74e73fe",
        "parentId" : null,
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "can you also add this line to each implementation so we can statically check that the interface is implemented?\r\n```\r\nvar _ Interface = &subpath{}\r\n```",
        "createdAt" : "2019-02-26T22:14:40Z",
        "updatedAt" : "2019-02-27T03:00:09Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "4d2a2d94-8fab-42b1-a1bf-31110481beb4",
        "parentId" : "2c42e05a-bbad-4edc-930f-dd1ce74e73fe",
        "authorId" : "56b792dc-dc04-4881-bdb0-21266a20a436",
        "body" : "That's what https://github.com/kubernetes/kubernetes/pull/74393/commits/1da806942d23b0f7a2b351bfe60584f4f9f717ac#diff-8108985484b2fcf3c0170c3e6d32d97fR72 does, no? Just like the original mount code, it only needs to be in `subpath.go`, not each OS specific file, as it will only get picked up when `GOOS` is set correctly.",
        "createdAt" : "2019-02-26T22:21:12Z",
        "updatedAt" : "2019-02-27T03:00:09Z",
        "lastEditedBy" : "56b792dc-dc04-4881-bdb0-21266a20a436",
        "tags" : [
        ]
      },
      {
        "id" : "6d4ffdb8-e196-4b30-91e6-8976bd20cc5e",
        "parentId" : "2c42e05a-bbad-4edc-930f-dd1ce74e73fe",
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "Ah ok, I think nsenter still needs one though since it's also linux.",
        "createdAt" : "2019-02-26T22:48:39Z",
        "updatedAt" : "2019-02-27T03:00:09Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "7ea76e42-b8dc-4166-b59e-279e84c6e853",
        "parentId" : "2c42e05a-bbad-4edc-930f-dd1ce74e73fe",
        "authorId" : "56b792dc-dc04-4881-bdb0-21266a20a436",
        "body" : "Good catch. It does. Will update once I see results of `pull-kubernetes-e2e-gce-csi-serial`",
        "createdAt" : "2019-02-26T23:02:53Z",
        "updatedAt" : "2019-02-27T03:00:09Z",
        "lastEditedBy" : "56b792dc-dc04-4881-bdb0-21266a20a436",
        "tags" : [
        ]
      }
    ],
    "commit" : "2c4d748bed735f33da89c0875fe472539e901209",
    "line" : 47,
    "diffHunk" : "@@ -1,1 +45,49 @@)\n\ntype subpath struct {\n\tmounter mount.Interface\n}"
  }
]