[
  {
    "id" : "1c57dd91-e794-4be8-9473-6cfb9d5e3a6a",
    "prId" : 99050,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/99050#pullrequestreview-591742739",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cf487331-ca20-4ea8-80fc-e32ec84738e8",
        "parentId" : null,
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "Can you enhance https://github.com/kubernetes/kubernetes/blob/7604762805defb056bf5762abd90a3500edf0b60/test/e2e/storage/testsuites/base.go#L758 to also check for the new field in the metric?",
        "createdAt" : "2021-02-16T17:52:50Z",
        "updatedAt" : "2021-02-16T17:54:24Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "cd711423-abd7-4f99-ae50-288d3333c108",
        "parentId" : "cf487331-ca20-4ea8-80fc-e32ec84738e8",
        "authorId" : "d10fef96-5a18-44e7-b23e-735de7561af7",
        "body" : "I checked the implementation of this here, some observation:\r\n1. The idea of migration volume metrics checking is to compare the in-tree plugin metrics has not changed before/after the test execution. => which implies no in-tree operation is invoked.\r\n2. This check does not utilize the corresponding CSI metrics at all. I think the reason might be \r\n    - The test can be execute parallel and it would be hard to compare accurate result. \r\n    - And also per the comments, some negative test cases might not emit any metrics.\r\n\r\n3. This is done using the to-be-deprecated  metric \"storage_operation_status_count\". So we need to replace it with the correct metric.\r\n\r\nAnd it seems that my change of adding a migrated status does not fit in the picture as we are not checking the csi metrics at all. And even if we want to check it will be hard because the observation 2 I mentioned above.",
        "createdAt" : "2021-02-17T00:21:54Z",
        "updatedAt" : "2021-02-17T00:21:54Z",
        "lastEditedBy" : "d10fef96-5a18-44e7-b23e-735de7561af7",
        "tags" : [
        ]
      },
      {
        "id" : "d6ff46d5-4556-4fc2-80bc-e56d3ab0c61d",
        "parentId" : "cf487331-ca20-4ea8-80fc-e32ec84738e8",
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "Ok, maybe we need a todo to try to test this via unit tests.",
        "createdAt" : "2021-02-17T00:39:51Z",
        "updatedAt" : "2021-02-17T00:39:51Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      }
    ],
    "commit" : "9ec820a91af7e0857d7b613855eb64588cf7885d",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +50,54 @@\t\tStabilityLevel: metrics.ALPHA,\n\t},\n\t[]string{\"volume_plugin\", \"operation_name\", \"status\", \"migrated\"},\n)\n"
  },
  {
    "id" : "87d76b77-9ca8-4cf0-a096-722c1562845f",
    "prId" : 98332,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/98332#pullrequestreview-575970983",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cad014e3-96aa-4bcf-b631-85c9c8737a9e",
        "parentId" : null,
        "authorId" : "5d64207d-3933-4932-8517-aace5b6574c0",
        "body" : "It seems that storageOperationEndToEndLatencyMetric suffers from the same problem, where errors don't have an e2e latency (see [RecordMetrics](https://github.com/kubernetes/kubernetes/blob/master/pkg/controller/volume/persistentvolume/metrics/metrics.go#L292)).\r\n\r\nBut that seems to be a different sort of beast so rolling errors into that metric may not be desirable?\r\n",
        "createdAt" : "2021-01-25T17:23:52Z",
        "updatedAt" : "2021-01-25T17:24:17Z",
        "lastEditedBy" : "5d64207d-3933-4932-8517-aace5b6574c0",
        "tags" : [
        ]
      },
      {
        "id" : "d4772788-8669-4fb2-a595-de4cad602bd2",
        "parentId" : "cad014e3-96aa-4bcf-b631-85c9c8737a9e",
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "yeah I think we need to revisit operationendtoend in general (not in this pr). The implementation is complex, and may be better suited to be tracked by an outside observer instead.",
        "createdAt" : "2021-01-25T17:38:09Z",
        "updatedAt" : "2021-01-25T17:40:38Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "8c23fe6e-a4c7-4f32-8d57-74a245bc8572",
        "parentId" : "cad014e3-96aa-4bcf-b631-85c9c8737a9e",
        "authorId" : "5c4757f6-5a7a-438b-b77f-778928cb6979",
        "body" : "so we can merge `volumeOperationErrorsMetric` to `storageOperationEndToEndLatencyMetric`. And as same as this MR, \r\nadd a status to `storageOperationEndToEndLatencyMetric` ?\r\n\r\n@mattcary\r\n@msau42 \r\n\r\n",
        "createdAt" : "2021-01-26T02:35:09Z",
        "updatedAt" : "2021-01-26T02:35:09Z",
        "lastEditedBy" : "5c4757f6-5a7a-438b-b77f-778928cb6979",
        "tags" : [
        ]
      },
      {
        "id" : "db99f3ef-8ba9-4a5e-9765-a76eb53ead10",
        "parentId" : "cad014e3-96aa-4bcf-b631-85c9c8737a9e",
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "No, the end to end metric is much more complicated and I think needs a bit of redesign. I think we should just leave it as it is for now.",
        "createdAt" : "2021-01-26T02:48:48Z",
        "updatedAt" : "2021-01-26T02:48:48Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      }
    ],
    "commit" : "c88cb147776a54b06c21525cbf36cbc515af7426",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +48,52 @@\t\tStabilityLevel: metrics.ALPHA,\n\t},\n\t[]string{\"volume_plugin\", \"operation_name\", \"status\"},\n)\n"
  },
  {
    "id" : "50348f04-330b-4364-a6c9-73a580bdaed1",
    "prId" : 81534,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/81534#pullrequestreview-279914529",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1989af7d-386d-416e-bdcf-1e3b23a2dc45",
        "parentId" : null,
        "authorId" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "body" : "Can we add a comment for people outside sig-instrumentation(or have been close to KEP) to what this is supposed to mean?  ",
        "createdAt" : "2019-08-27T01:15:11Z",
        "updatedAt" : "2019-08-28T18:19:07Z",
        "lastEditedBy" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "tags" : [
        ]
      },
      {
        "id" : "1d8e7f29-61f9-45ee-89ef-35748b3d3cf8",
        "parentId" : "1989af7d-386d-416e-bdcf-1e3b23a2dc45",
        "authorId" : "09e31512-b413-47a1-bc83-20b5a77064ee",
        "body" : "sure thing",
        "createdAt" : "2019-08-27T01:30:57Z",
        "updatedAt" : "2019-08-28T18:19:07Z",
        "lastEditedBy" : "09e31512-b413-47a1-bc83-20b5a77064ee",
        "tags" : [
        ]
      }
    ],
    "commit" : "6f70f781df3b968fff955226bbd80058167d7d21",
    "line" : 90,
    "diffHunk" : "@@ -1,1 +87,91 @@\tlegacyregistry.MustRegister(storageOperationErrorMetric)\n\tlegacyregistry.MustRegister(storageOperationStatusMetric)\n\tlegacyregistry.MustRegister(storageOperationEndToEndLatencyMetric)\n}\n"
  },
  {
    "id" : "219b2def-6835-430d-bcea-9069e694933d",
    "prId" : 56872,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/56872#pullrequestreview-90914603",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e50dd634-2729-4f6a-8988-1124665b75eb",
        "parentId" : null,
        "authorId" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "body" : "Was there any particular reason to change this to address of an interface? ",
        "createdAt" : "2018-01-16T19:57:04Z",
        "updatedAt" : "2018-01-16T19:57:04Z",
        "lastEditedBy" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "tags" : [
        ]
      },
      {
        "id" : "bfd20f7a-14e4-4452-811d-22c49f71d6c4",
        "parentId" : "e50dd634-2729-4f6a-8988-1124665b75eb",
        "authorId" : "133061ea-c6be-49e3-9759-11ae326a7219",
        "body" : "@gnufied pass error as value, will cause the passed err to `operationcomplete` is always `nil`, and metric `storageOperationErrorMetric` doesn't work",
        "createdAt" : "2018-01-23T06:19:17Z",
        "updatedAt" : "2018-01-23T06:19:17Z",
        "lastEditedBy" : "133061ea-c6be-49e3-9759-11ae326a7219",
        "tags" : [
        ]
      },
      {
        "id" : "c45cf8aa-8318-4d8b-8cb5-a3922f7bfe86",
        "parentId" : "e50dd634-2729-4f6a-8988-1124665b75eb",
        "authorId" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "body" : "yep. @davidz627 explaind that below.",
        "createdAt" : "2018-01-23T17:36:34Z",
        "updatedAt" : "2018-01-23T17:36:34Z",
        "lastEditedBy" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "tags" : [
        ]
      }
    ],
    "commit" : "e3f8f64c1743e261fffa1df6795fa44ea226d3b1",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +52,56 @@func OperationCompleteHook(plugin, operationName string) func(*error) {\n\trequestTime := time.Now()\n\topComplete := func(err *error) {\n\t\ttimeTaken := time.Since(requestTime).Seconds()\n\t\t// Create metric with operation name and plugin name"
  }
]