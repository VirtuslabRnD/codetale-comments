[
  {
    "id" : "c27b8c3d-0a31-4874-90c7-b2cf191cfdd3",
    "prId" : 74191,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/74191#pullrequestreview-206681599",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b7bd3cee-6cb2-4a8a-b18c-adddadf3da0b",
        "parentId" : null,
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "Should we also add same timeout to getAllStorageAccounts?",
        "createdAt" : "2019-02-22T07:05:30Z",
        "updatedAt" : "2019-02-22T07:22:22Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      },
      {
        "id" : "e2fdbf23-ff16-422c-9e46-b2bff7dad827",
        "parentId" : "b7bd3cee-6cb2-4a8a-b18c-adddadf3da0b",
        "authorId" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "body" : "@feiskyer fixed.",
        "createdAt" : "2019-02-22T07:25:10Z",
        "updatedAt" : "2019-02-22T07:25:19Z",
        "lastEditedBy" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "tags" : [
        ]
      }
    ],
    "commit" : "8cd09bb143669a3dc21acac9964647d78f283c4e",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +167,171 @@\tif vmSizeList == nil {\n\t\tctx, cancel := context.WithTimeout(context.Background(), 60*time.Second)\n\t\tdefer cancel()\n\t\tresult, err := az.VirtualMachineSizesClient.List(ctx, az.Location)\n\t\tif err != nil || result.Value == nil {"
  },
  {
    "id" : "fb6dd468-4f53-4cf0-a6a3-1fc567621f5d",
    "prId" : 74191,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/74191#pullrequestreview-206680816",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5ef4f4a9-3a54-44f6-8eb0-cbd37683c637",
        "parentId" : null,
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "nit: define a consts for timeout, e.g. `listAPITimeout = 60*time.Second`",
        "createdAt" : "2019-02-22T07:06:47Z",
        "updatedAt" : "2019-02-22T07:22:22Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      }
    ],
    "commit" : "8cd09bb143669a3dc21acac9964647d78f283c4e",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +166,170 @@\n\tif vmSizeList == nil {\n\t\tctx, cancel := context.WithTimeout(context.Background(), 60*time.Second)\n\t\tdefer cancel()\n\t\tresult, err := az.VirtualMachineSizesClient.List(ctx, az.Location)"
  },
  {
    "id" : "19830908-f278-4e65-925a-4cd3dabef192",
    "prId" : 64386,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/64386#pullrequestreview-123840225",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5d68ae73-9632-46de-8491-52ca3e34e4be",
        "parentId" : null,
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "nit: Add a info log here with diskname, oldSize and newSize",
        "createdAt" : "2018-05-28T05:57:20Z",
        "updatedAt" : "2018-06-03T13:56:16Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      },
      {
        "id" : "fbcb4e58-fa43-4ca2-8fca-53dd3e65aa41",
        "parentId" : "5d68ae73-9632-46de-8491-52ca3e34e4be",
        "authorId" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "body" : "I added the logs in `ManagedDiskController.ResizeDisk` func",
        "createdAt" : "2018-05-28T07:22:01Z",
        "updatedAt" : "2018-06-03T13:56:16Z",
        "lastEditedBy" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "tags" : [
        ]
      },
      {
        "id" : "c12a6af6-f60f-4df8-8c71-02704d1268e8",
        "parentId" : "5d68ae73-9632-46de-8491-52ca3e34e4be",
        "authorId" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "body" : "How fast is resize operation on Azure btw? If it is slow and controller crashes while resize is in progress, I am wondering if there is a way to query the volume and find out if resize is in progress with cloudprovider and return early from here rather than calling resize again.\r\n\r\nI know GCE and AWS does not implement this mechanism currently but I am going to change it for AWS at least because resize is pretty slow there. ",
        "createdAt" : "2018-05-28T12:01:14Z",
        "updatedAt" : "2018-06-03T13:56:16Z",
        "lastEditedBy" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "tags" : [
        ]
      },
      {
        "id" : "1e608a6f-ac53-4274-88e2-f0bf73b818b7",
        "parentId" : "5d68ae73-9632-46de-8491-52ca3e34e4be",
        "authorId" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "body" : "@gnufied azure disk resize operation could be completed in a few seconds, while Azure does not support resize when that disk is attached to a running VM, GCE and AWS supports that, right?",
        "createdAt" : "2018-05-28T12:44:02Z",
        "updatedAt" : "2018-06-03T13:56:16Z",
        "lastEditedBy" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "tags" : [
        ]
      },
      {
        "id" : "a13b3e85-ec5c-47bd-8500-b4ea6efa37a0",
        "parentId" : "5d68ae73-9632-46de-8491-52ca3e34e4be",
        "authorId" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "body" : "good point, shouldn't `ResizeDisk` call then check if volume is attached somewhere before allowing volume resize operation? Expand controller does not have any kind of fencing to prevent volumes from being resused when mounted on nodes. ",
        "createdAt" : "2018-05-28T13:51:12Z",
        "updatedAt" : "2018-06-03T13:56:16Z",
        "lastEditedBy" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "tags" : [
        ]
      },
      {
        "id" : "5529d13a-3977-43b5-a1f0-44a0d374b615",
        "parentId" : "5d68ae73-9632-46de-8491-52ca3e34e4be",
        "authorId" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "body" : "@gnufied if that disk is already attached to a running VM, the API call will fail with error, eventually `ResizeDisk` will return error, that's expected case.",
        "createdAt" : "2018-05-28T14:04:08Z",
        "updatedAt" : "2018-06-03T13:56:16Z",
        "lastEditedBy" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "tags" : [
        ]
      },
      {
        "id" : "71be63a3-e691-4b30-9a7c-5dad62e55370",
        "parentId" : "5d68ae73-9632-46de-8491-52ca3e34e4be",
        "authorId" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "body" : "I don't know much about Azure tbh, but I have found that it is less costly to make a `GET` request and return early than make a `POST` request and handle error and return (cloudproviders seem to have different quotas for mutable and immutable API requests).\r\n\r\nAnd as far as I can tell, you are already fetching disk state from cloudprovider - https://github.com/kubernetes/kubernetes/pull/64386/files#diff-db9a5ad5d2cc7740ca2b73ad9d904fa2R144, so if we can ascertain that volume is attached, we should return error before even attempting to call resize.\r\n\r\nThis is not a blocker though, I know very little about Azure - so take my comment with a pinch of salt. :-)\r\n",
        "createdAt" : "2018-05-28T14:22:27Z",
        "updatedAt" : "2018-06-03T13:56:16Z",
        "lastEditedBy" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "tags" : [
        ]
      },
      {
        "id" : "37885ff8-d72b-4b59-962f-3c05ead77732",
        "parentId" : "5d68ae73-9632-46de-8491-52ca3e34e4be",
        "authorId" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "body" : "@gnufied thanks for the check, while according to https://docs.microsoft.com/en-us/rest/api/compute/disks/get, the returned value `DiskProperties.ProvisioningState` is not sufficient to tell whether disk is in `Attached` state or not, we need another `GET` request to get `diskState`. So for this PR, I think it's ok to do resize directly.",
        "createdAt" : "2018-05-29T03:34:00Z",
        "updatedAt" : "2018-06-03T13:56:16Z",
        "lastEditedBy" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "tags" : [
        ]
      }
    ],
    "commit" : "880b7a3bda2df4e5ae837e6086d4267c2ced3186",
    "line" : 47,
    "diffHunk" : "@@ -1,1 +233,237 @@\t}\n\n\treturn diskController.ResizeDisk(spec.PersistentVolume.Spec.AzureDisk.DiskName, oldSize, newSize)\n}\n"
  },
  {
    "id" : "42f835f9-f6c7-4e76-ade1-a2ea6df61fdf",
    "prId" : 64154,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/64154#pullrequestreview-125550953",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e329d4c6-179f-476c-8253-8ce3ec9b48f9",
        "parentId" : null,
        "authorId" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "body" : "Question: @gnufied it looks like I need to write code here to query volume limits according to azure node type , and assign new value to `volumeLimits ` in `azure_dd.go`, right?",
        "createdAt" : "2018-06-04T08:50:13Z",
        "updatedAt" : "2018-06-04T08:50:17Z",
        "lastEditedBy" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "tags" : [
        ]
      },
      {
        "id" : "336abc33-0f87-4107-a9bf-5ac1730477d7",
        "parentId" : "e329d4c6-179f-476c-8253-8ce3ec9b48f9",
        "authorId" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "body" : "yes that is correct. I did not know how we can get those limits for Azure Disk and hence I went with existing defaults.",
        "createdAt" : "2018-06-04T12:29:37Z",
        "updatedAt" : "2018-06-04T12:29:37Z",
        "lastEditedBy" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "tags" : [
        ]
      }
    ],
    "commit" : "1f9404dfc0da20ee74529258e55f9a57f81218c3",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +118,122 @@\t}\n\n\tvolumeLimits := map[string]int64{\n\t\tutil.AzureVolumeLimitKey: 16,\n\t}"
  },
  {
    "id" : "5089f9b4-fc83-43bc-8912-ff46d39778e8",
    "prId" : 29836,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "deb205a5-58eb-4d21-96f5-74777253161e",
        "parentId" : null,
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "Shouldn't this return an error?\n",
        "createdAt" : "2016-08-09T15:35:50Z",
        "updatedAt" : "2016-08-23T13:23:19Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      },
      {
        "id" : "98baf9f9-94d9-44c5-ab01-cdb5a6b3dbfc",
        "parentId" : "deb205a5-58eb-4d21-96f5-74777253161e",
        "authorId" : "a7f673a6-4b23-4df6-aa10-f123fa9dcd5f",
        "body" : "the contract is that if it is a mountpoint, then the volume is already mounted, and no more work to do.\n",
        "createdAt" : "2016-08-16T19:32:03Z",
        "updatedAt" : "2016-08-23T13:23:19Z",
        "lastEditedBy" : "a7f673a6-4b23-4df6-aa10-f123fa9dcd5f",
        "tags" : [
        ]
      }
    ],
    "commit" : "dea4b0226d859a1b86a81163c86ec61cffc1b952",
    "line" : 224,
    "diffHunk" : "@@ -1,1 +222,226 @@\tif !notMnt {\n\t\tglog.V(4).Infof(\"%s is a mount point\", dir)\n\t\treturn nil\n\t}\n"
  }
]