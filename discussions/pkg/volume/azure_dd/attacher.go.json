[
  {
    "id" : "fb0c359a-bfa3-4bb8-8ecc-b7768b46acbc",
    "prId" : 70002,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/70002#pullrequestreview-166526552",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2b106ea0-f448-4655-97a2-512f47af7fed",
        "parentId" : null,
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "Could we add a V(2) log here with device and lun number? It could help for troubleshoooting issues.",
        "createdAt" : "2018-10-19T08:37:56Z",
        "updatedAt" : "2018-10-22T02:24:36Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      },
      {
        "id" : "5c7b1f24-dbc0-4306-94ff-9f520d4914ed",
        "parentId" : "2b106ea0-f448-4655-97a2-512f47af7fed",
        "authorId" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "body" : "already addressed in https://github.com/kubernetes/kubernetes/pull/70012",
        "createdAt" : "2018-10-19T13:38:04Z",
        "updatedAt" : "2018-10-22T02:24:36Z",
        "lastEditedBy" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "tags" : [
        ]
      }
    ],
    "commit" : "f69068753a702028d44e482b6e5f6d6fd7ee3349",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +181,185 @@\t\t}\n\t}\n\n\texec := a.plugin.host.GetExec(a.plugin.GetPluginName())\n"
  },
  {
    "id" : "78b85024-2962-4ea8-be64-72463cc313e9",
    "prId" : 60183,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/60183#pullrequestreview-98449945",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a2422e37-e3bd-427b-829e-c86baa922b2a",
        "parentId" : null,
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "context.TODO() seems like a mistake here? is there a context we can attach to?",
        "createdAt" : "2018-02-22T05:08:25Z",
        "updatedAt" : "2018-02-22T05:08:25Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      },
      {
        "id" : "23900149-7e87-41da-a0d7-473292988508",
        "parentId" : "a2422e37-e3bd-427b-829e-c86baa922b2a",
        "authorId" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "body" : "@brendanburns it's related to https://github.com/kubernetes/kubernetes/pull/59287, there is some future work item for `context.TODO()`",
        "createdAt" : "2018-02-22T05:14:53Z",
        "updatedAt" : "2018-02-22T05:14:53Z",
        "lastEditedBy" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "tags" : [
        ]
      }
    ],
    "commit" : "f3324a6c26a11c8d18007820517bde106a0dc237",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +269,273 @@\t}\n\n\tinstanceid, err := d.cloud.InstanceID(context.TODO(), nodeName)\n\tif err != nil {\n\t\tglog.Warningf(\"no instance id for node %q, skip detaching (%v)\", nodeName, err)"
  },
  {
    "id" : "bca17a85-84b0-4106-becb-90300fb520c8",
    "prId" : 29836,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a13a147e-10cf-45e2-a1bd-de4f6c34367e",
        "parentId" : null,
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "delete\n",
        "createdAt" : "2016-08-01T15:24:11Z",
        "updatedAt" : "2016-08-23T13:23:19Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "dea4b0226d859a1b86a81163c86ec61cffc1b952",
    "line" : null,
    "diffHunk" : "@@ -1,1 +99,103 @@\t\tlun, err = attacher.azureProvider.GetNextDiskLun(instanceid)\n\t\tif err != nil {\n\t\t\tglog.Warningf(\"no LUN available for instance %q\", instanceid)\n\t\t\treturn \"\", fmt.Errorf(\"all LUNs are used, cannot attach volume %q to instance %q\", volumeSource.DiskName, instanceid)\n\t\t}"
  },
  {
    "id" : "b3ff4b1d-aa9a-4e44-8f02-f015640f5100",
    "prId" : 29836,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "db1d4b79-618e-47bd-8284-4b73e8dd9462",
        "parentId" : null,
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "Don't drop the error, just return `err` here.\n",
        "createdAt" : "2016-08-09T15:27:07Z",
        "updatedAt" : "2016-08-23T13:23:19Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "dea4b0226d859a1b86a81163c86ec61cffc1b952",
    "line" : null,
    "diffHunk" : "@@ -1,1 +76,80 @@\tif err != nil {\n\t\tglog.Warningf(\"failed to get azure instance id\")\n\t\treturn \"\", fmt.Errorf(\"failed to get azure instance id for host %q\", hostName)\n\t}\n\tif ind := strings.LastIndex(instanceid, \"/\"); ind >= 0 {"
  },
  {
    "id" : "9eefb84a-0ef4-41ed-9ed7-e4372c74bbde",
    "prId" : 29836,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dc9fbed9-9422-429f-81e3-c5b93f524fc7",
        "parentId" : null,
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "Again, don't drop errors, just return the existing error (or at least include it in the error message)\n",
        "createdAt" : "2016-08-09T15:29:04Z",
        "updatedAt" : "2016-08-23T13:23:19Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "dea4b0226d859a1b86a81163c86ec61cffc1b952",
    "line" : null,
    "diffHunk" : "@@ -1,1 +100,104 @@\t\tif err != nil {\n\t\t\tglog.Warningf(\"no LUN available for instance %q\", instanceid)\n\t\t\treturn \"\", fmt.Errorf(\"all LUNs are used, cannot attach volume %q to instance %q\", volumeSource.DiskName, instanceid)\n\t\t}\n"
  },
  {
    "id" : "2dfa516c-3f0d-4cb1-8861-56f14b367312",
    "prId" : 29836,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "36325bb0-300e-487d-8a8e-2c4b5ba63a1e",
        "parentId" : null,
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "Reverse this:\n\n``` go\nif (err != nil) {\n   return ...\n}\nglog.V(4).Infof(...)\n```\n\nAlso, don't drop the `err`\n",
        "createdAt" : "2016-08-09T15:30:35Z",
        "updatedAt" : "2016-08-23T13:23:19Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "dea4b0226d859a1b86a81163c86ec61cffc1b952",
    "line" : null,
    "diffHunk" : "@@ -1,1 +104,108 @@\n\t\terr = attacher.azureProvider.AttachDisk(volumeSource.DiskName, volumeSource.DataDiskURI, instanceid, lun, compute.CachingTypes(*volumeSource.CachingMode))\n\t\tif err == nil {\n\t\t\tglog.V(4).Infof(\"Attach operation successful: volume %q attached to node %q.\", volumeSource.DataDiskURI, instanceid)\n\t\t} else {"
  },
  {
    "id" : "de2065ab-4874-47c1-ba8c-557c68bdc25a",
    "prId" : 29836,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "38a97c8a-e3e8-47b7-94ae-038d44fd3bc7",
        "parentId" : null,
        "authorId" : "8e448017-7838-493d-a424-33cada0da657",
        "body" : "Why are only `err == cloudprovider.InstanceNotFound` worthy of logging?\n",
        "createdAt" : "2016-08-09T23:16:09Z",
        "updatedAt" : "2016-08-23T13:23:19Z",
        "lastEditedBy" : "8e448017-7838-493d-a424-33cada0da657",
        "tags" : [
        ]
      },
      {
        "id" : "fa23d9e8-2ab6-4677-83ca-9e11ba1d91ed",
        "parentId" : "38a97c8a-e3e8-47b7-94ae-038d44fd3bc7",
        "authorId" : "a7f673a6-4b23-4df6-aa10-f123fa9dcd5f",
        "body" : "It shouldn't happen but if it does, then either the node gets a wrong name or the metadata service has wrong record. In either case, logging this error and stopping attach is safe to go.\n",
        "createdAt" : "2016-08-16T19:34:29Z",
        "updatedAt" : "2016-08-23T13:23:19Z",
        "lastEditedBy" : "a7f673a6-4b23-4df6-aa10-f123fa9dcd5f",
        "tags" : [
        ]
      },
      {
        "id" : "0b7036f7-5498-404c-aed2-6fd444aa2e6b",
        "parentId" : "38a97c8a-e3e8-47b7-94ae-038d44fd3bc7",
        "authorId" : "8e448017-7838-493d-a424-33cada0da657",
        "body" : "Sure. But my point is if `err != nil && err != cloudprovider.InstanceNotFound` then what happens? It's not logged?\n",
        "createdAt" : "2016-08-18T04:31:54Z",
        "updatedAt" : "2016-08-23T13:23:19Z",
        "lastEditedBy" : "8e448017-7838-493d-a424-33cada0da657",
        "tags" : [
        ]
      }
    ],
    "commit" : "dea4b0226d859a1b86a81163c86ec61cffc1b952",
    "line" : null,
    "diffHunk" : "@@ -1,1 +83,87 @@\n\tlun, err := attacher.azureProvider.GetDiskLun(volumeSource.DiskName, volumeSource.DataDiskURI, instanceid)\n\tif err == cloudprovider.InstanceNotFound {\n\t\t// Log error and continue with attach\n\t\tglog.Warningf("
  },
  {
    "id" : "35655abb-f640-48b8-8344-5ddcb562f1bc",
    "prId" : 29836,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b87ca98d-5dc0-4f1b-9808-d1a6db38fcec",
        "parentId" : null,
        "authorId" : "8e448017-7838-493d-a424-33cada0da657",
        "body" : "Per interface contract `Attach()` must return the device path where the device was attached on the node, not the lun number\n",
        "createdAt" : "2016-08-09T23:27:38Z",
        "updatedAt" : "2016-08-23T13:23:19Z",
        "lastEditedBy" : "8e448017-7838-493d-a424-33cada0da657",
        "tags" : [
        ]
      }
    ],
    "commit" : "dea4b0226d859a1b86a81163c86ec61cffc1b952",
    "line" : 114,
    "diffHunk" : "@@ -1,1 +112,116 @@\t}\n\n\treturn strconv.Itoa(int(lun)), err\n}\n"
  },
  {
    "id" : "1d34fdbf-f328-4eef-93c3-e2f820d65da3",
    "prId" : 29836,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "89e30f4c-99df-4ce2-982c-e79795854a87",
        "parentId" : null,
        "authorId" : "8e448017-7838-493d-a424-33cada0da657",
        "body" : "You are violating the interface contract here. The second argument here is `devicePath string` not a lun number.\n",
        "createdAt" : "2016-08-09T23:35:07Z",
        "updatedAt" : "2016-08-23T13:23:19Z",
        "lastEditedBy" : "8e448017-7838-493d-a424-33cada0da657",
        "tags" : [
        ]
      },
      {
        "id" : "c250b800-a2af-43b4-82a3-6823686e6917",
        "parentId" : "89e30f4c-99df-4ce2-982c-e79795854a87",
        "authorId" : "a7f673a6-4b23-4df6-aa10-f123fa9dcd5f",
        "body" : "In this case the controller-master has no way to map the lun to device path. I would consider the contract is to make device a unique yet opaque object. Any interpretation of this object should happen inside plugin's context, comment?\n",
        "createdAt" : "2016-08-09T23:41:16Z",
        "updatedAt" : "2016-08-23T13:23:19Z",
        "lastEditedBy" : "a7f673a6-4b23-4df6-aa10-f123fa9dcd5f",
        "tags" : [
        ]
      },
      {
        "id" : "754dc775-3a7c-4650-a1ca-2d25f39df437",
        "parentId" : "89e30f4c-99df-4ce2-982c-e79795854a87",
        "authorId" : "8e448017-7838-493d-a424-33cada0da657",
        "body" : "It's not an object, it is very specifically a field with specific meaning and used as such. I suggest leave it empty on the Attach if you must, and having WaitForAttach figure it out and return it correctly (which it appears to already do). If the only way the node can figure out what the path is is using the LUN and the LUN is returned on attach, then you will need to first make the bigger change to the underlying infrastructure to allow device path to be an opaque meaningless string.\n",
        "createdAt" : "2016-08-09T23:51:14Z",
        "updatedAt" : "2016-08-23T13:23:19Z",
        "lastEditedBy" : "8e448017-7838-493d-a424-33cada0da657",
        "tags" : [
        ]
      }
    ],
    "commit" : "dea4b0226d859a1b86a81163c86ec61cffc1b952",
    "line" : null,
    "diffHunk" : "@@ -1,1 +116,120 @@\n// WaitForAttach runs on the node to detect if the volume (referenced by LUN) is attached. If attached, the device path is returned\nfunc (attacher *azureDiskAttacher) WaitForAttach(spec *volume.Spec, lunStr string, timeout time.Duration) (string, error) {\n\tvolumeSource, err := getVolumeSource(spec)\n\tif err != nil {"
  },
  {
    "id" : "e74a6057-074b-4db0-9f22-0b0942ad4897",
    "prId" : 29836,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5d4279b5-bb63-47fc-8d9a-82f10313eb3e",
        "parentId" : null,
        "authorId" : "8e448017-7838-493d-a424-33cada0da657",
        "body" : "nit: Add comments to public methods.\n",
        "createdAt" : "2016-08-22T22:55:58Z",
        "updatedAt" : "2016-08-23T13:23:19Z",
        "lastEditedBy" : "8e448017-7838-493d-a424-33cada0da657",
        "tags" : [
        ]
      }
    ],
    "commit" : "dea4b0226d859a1b86a81163c86ec61cffc1b952",
    "line" : null,
    "diffHunk" : "@@ -1,1 +67,71 @@\n// Attach attaches a volume.Spec to a Azure VM referenced by hostname, returning the disk's LUN\nfunc (attacher *azureDiskAttacher) Attach(spec *volume.Spec, hostName string) (string, error) {\n\tvolumeSource, err := getVolumeSource(spec)\n\tif err != nil {"
  }
]