[
  {
    "id" : "73fbd0b1-a87d-4234-a29c-d9cb919c6cc4",
    "prId" : 78979,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/78979#pullrequestreview-249814645",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5ea8007a-8d66-44e3-aeb9-a8ff7719e5d6",
        "parentId" : null,
        "authorId" : "9829b6c0-e54c-401b-8d97-73e5aa4e83c1",
        "body" : "/ok-to-test\r\n/priority backlog\r\n/lgtm",
        "createdAt" : "2019-06-14T02:03:06Z",
        "updatedAt" : "2019-06-14T02:03:06Z",
        "lastEditedBy" : "9829b6c0-e54c-401b-8d97-73e5aa4e83c1",
        "tags" : [
        ]
      },
      {
        "id" : "404528a9-7d8d-4014-9106-5fc5ac5bc966",
        "parentId" : "5ea8007a-8d66-44e3-aeb9-a8ff7719e5d6",
        "authorId" : "9829b6c0-e54c-401b-8d97-73e5aa4e83c1",
        "body" : "/kind cleanup",
        "createdAt" : "2019-06-14T02:03:22Z",
        "updatedAt" : "2019-06-14T02:03:22Z",
        "lastEditedBy" : "9829b6c0-e54c-401b-8d97-73e5aa4e83c1",
        "tags" : [
        ]
      },
      {
        "id" : "a74ecb47-4df9-4e1b-b502-888a8602b239",
        "parentId" : "5ea8007a-8d66-44e3-aeb9-a8ff7719e5d6",
        "authorId" : "da87f5b7-4b83-424a-a1cf-381dc22f03b8",
        "body" : "Hi @draveness, Thank you for these tags. It seems like 'tide' need the label approved to continue. Is this something you could do?",
        "createdAt" : "2019-06-14T08:58:55Z",
        "updatedAt" : "2019-06-14T09:05:04Z",
        "lastEditedBy" : "da87f5b7-4b83-424a-a1cf-381dc22f03b8",
        "tags" : [
        ]
      },
      {
        "id" : "1567ca34-2fcd-4f3d-bb4a-f9e9420bc251",
        "parentId" : "5ea8007a-8d66-44e3-aeb9-a8ff7719e5d6",
        "authorId" : "9829b6c0-e54c-401b-8d97-73e5aa4e83c1",
        "body" : "No, please ping the approver for that",
        "createdAt" : "2019-06-14T09:57:56Z",
        "updatedAt" : "2019-06-14T09:57:56Z",
        "lastEditedBy" : "9829b6c0-e54c-401b-8d97-73e5aa4e83c1",
        "tags" : [
        ]
      }
    ],
    "commit" : "c86b6d1ec571ff870a41c02e9b74019ebb0cfaaf",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +504,508 @@\tklog.V(4).Infof(\"Found volume %s mounted to %s\", c.pdName, dir)\n\n\t// lock the volume (and thus wait for any concurrent SetUpAt to finish)\n\tc.plugin.volumeLocks.LockKey(c.pdName)\n\tdefer c.plugin.volumeLocks.UnlockKey(c.pdName)"
  },
  {
    "id" : "06f983ca-7f57-4c03-9023-261bb635bbc7",
    "prId" : 62668,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/62668#pullrequestreview-112809479",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "07f403a7-9f2b-4e97-99fc-153a7c50bf4f",
        "parentId" : null,
        "authorId" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "body" : "I am not comfortable with this change. Do they even point to the same directory?",
        "createdAt" : "2018-04-16T20:48:38Z",
        "updatedAt" : "2018-04-18T05:42:48Z",
        "lastEditedBy" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "tags" : [
        ]
      },
      {
        "id" : "c2d0b398-a546-4643-81c4-d68d03fbd677",
        "parentId" : "07f403a7-9f2b-4e97-99fc-153a7c50bf4f",
        "authorId" : "0cf405a8-951c-46f8-bbaf-cf214ebb52dd",
        "body" : "if you check that getPath function in rows 82-85 it will do the same thing. It is just common function for all of these getpath calls.",
        "createdAt" : "2018-04-16T21:26:26Z",
        "updatedAt" : "2018-04-18T05:42:48Z",
        "lastEditedBy" : "0cf405a8-951c-46f8-bbaf-cf214ebb52dd",
        "tags" : [
        ]
      },
      {
        "id" : "a1ca5a05-185a-450a-a318-a87542090cfb",
        "parentId" : "07f403a7-9f2b-4e97-99fc-153a7c50bf4f",
        "authorId" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "body" : "cool",
        "createdAt" : "2018-04-17T13:30:23Z",
        "updatedAt" : "2018-04-18T05:42:48Z",
        "lastEditedBy" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "441dc15b53cf85f36ed4d24b9353f6ceab695cd7",
    "line" : 64,
    "diffHunk" : "@@ -1,1 +404,408 @@\nfunc (cd *cinderVolume) GetPath() string {\n\treturn getPath(cd.podUID, cd.volName, cd.plugin.host)\n}\n"
  },
  {
    "id" : "ff8d3e54-bcda-405e-ac11-e5cc71626fa3",
    "prId" : 25888,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "eee1daf3-803b-428f-9cf7-590d0292ed3f",
        "parentId" : null,
        "authorId" : "8e448017-7838-493d-a424-33cada0da657",
        "body" : "Looks like you missed the Cinder `Setup` and `TearDown` functions?\n",
        "createdAt" : "2016-06-07T03:05:47Z",
        "updatedAt" : "2016-06-08T12:56:30Z",
        "lastEditedBy" : "8e448017-7838-493d-a424-33cada0da657",
        "tags" : [
        ]
      },
      {
        "id" : "02b6f57e-07cf-4212-80aa-40ebbab17628",
        "parentId" : "eee1daf3-803b-428f-9cf7-590d0292ed3f",
        "authorId" : "a7f673a6-4b23-4df6-aa10-f123fa9dcd5f",
        "body" : "fixed\n",
        "createdAt" : "2016-06-07T15:40:42Z",
        "updatedAt" : "2016-06-08T12:56:30Z",
        "lastEditedBy" : "a7f673a6-4b23-4df6-aa10-f123fa9dcd5f",
        "tags" : [
        ]
      }
    ],
    "commit" : "d1e0a139243b4bc7826f760ac492e76c4bd209b9",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +179,183 @@\nfunc (plugin *cinderPlugin) getCloudProvider() (CinderProvider, error) {\n\tcloud := plugin.host.GetCloudProvider()\n\tif cloud == nil {\n\t\tglog.Errorf(\"Cloud provider not initialized properly\")"
  },
  {
    "id" : "03c50be4-a512-45e8-8203-c0abedb0f48e",
    "prId" : 25888,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1a224c1b-fa7a-4785-b2ca-90fcba1df327",
        "parentId" : null,
        "authorId" : "58cf89ce-9cc3-4dce-b99b-49ae3682cc9a",
        "body" : "Provided cloudProvider implements CinderProvider, why do we care what specific type it is?\n",
        "createdAt" : "2016-06-10T11:30:25Z",
        "updatedAt" : "2016-06-10T11:30:25Z",
        "lastEditedBy" : "58cf89ce-9cc3-4dce-b99b-49ae3682cc9a",
        "tags" : [
        ]
      }
    ],
    "commit" : "d1e0a139243b4bc7826f760ac492e76c4bd209b9",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +168,172 @@}\n\nfunc getCloudProvider(cloudProvider cloudprovider.Interface) (CinderProvider, error) {\n\tif cloud, ok := cloudProvider.(*rackspace.Rackspace); ok && cloud != nil {\n\t\treturn cloud, nil"
  },
  {
    "id" : "104969c6-0557-4e43-81d6-1ec52e436a20",
    "prId" : 22023,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "172900d2-8c00-4d86-823a-882e8611255b",
        "parentId" : null,
        "authorId" : "bdc500eb-fd23-4d89-81ce-2986aa831dfa",
        "body" : ":+1: \n",
        "createdAt" : "2016-03-15T10:47:57Z",
        "updatedAt" : "2016-04-21T08:32:01Z",
        "lastEditedBy" : "bdc500eb-fd23-4d89-81ce-2986aa831dfa",
        "tags" : [
        ]
      }
    ],
    "commit" : "ba4d74f3c7933c94afcdad0db039655d814b49fb",
    "line" : null,
    "diffHunk" : "@@ -1,1 +48,52 @@\tGetDevicePath(diskId string) string\n\tInstanceID() (string, error)\n}\n\ntype cinderPlugin struct {"
  },
  {
    "id" : "aca411ad-20fc-4f55-af5a-52b41434f629",
    "prId" : 19707,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "148ec077-8923-4029-bbfa-7387026b81c8",
        "parentId" : null,
        "authorId" : "727fc82d-d969-41a4-a614-7fefce94f9a6",
        "body" : "Tim has this same kind of TODO in kubelet's volume code:  https://github.com/kubernetes/kubernetes/blob/master/pkg/kubelet/volumes.go#L216\n\nNot for this PR, of course, but it's worth thinking about a solution.\n",
        "createdAt" : "2016-01-22T13:18:50Z",
        "updatedAt" : "2016-02-02T13:44:43Z",
        "lastEditedBy" : "727fc82d-d969-41a4-a614-7fefce94f9a6",
        "tags" : [
        ]
      },
      {
        "id" : "667a5459-9b30-47e8-b7ba-01d1d1ddba19",
        "parentId" : "148ec077-8923-4029-bbfa-7387026b81c8",
        "authorId" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "body" : "I think kubelet has whole VolumeSpec available when it creates cleaners, so it's fairly simple change. On the other hand, all the volume plugins needs to be updated with new `NewCleaner` signature.\n",
        "createdAt" : "2016-01-22T13:34:57Z",
        "updatedAt" : "2016-02-02T13:44:43Z",
        "lastEditedBy" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "tags" : [
        ]
      }
    ],
    "commit" : "220163f67de05890dd57b2ed6f2b02362f633a78",
    "line" : 101,
    "diffHunk" : "@@ -1,1 +341,345 @@\t// Find Cinder volumeID to lock the right volume\n\t// TODO: refactor VolumePlugin.NewCleaner to get full volume.Spec just like\n\t// NewBuilder. We could then find volumeID there without probing MountRefs.\n\trefs, err := mount.GetMountRefs(c.mounter, dir)\n\tif err != nil {"
  },
  {
    "id" : "d1ca9a10-b49e-4254-8d0c-9d6feb2642ed",
    "prId" : 19707,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d362b80c-2ef1-4cf4-afd3-6ff2d5b7d19c",
        "parentId" : null,
        "authorId" : "727fc82d-d969-41a4-a614-7fefce94f9a6",
        "body" : "if the lock is at the beginning of the function, would you still need to reload the list here?\n",
        "createdAt" : "2016-01-22T13:20:22Z",
        "updatedAt" : "2016-02-02T13:44:43Z",
        "lastEditedBy" : "727fc82d-d969-41a4-a614-7fefce94f9a6",
        "tags" : [
        ]
      },
      {
        "id" : "8b74c424-123d-4b18-b44b-9ba50748a28f",
        "parentId" : "d362b80c-2ef1-4cf4-afd3-6ff2d5b7d19c",
        "authorId" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "body" : "All the code before `LockKey(c.pdName)` is there to actually find `c.pdName`. That's why passing whole `VolumeSpec` to `NewCleaner()` would be **much** nicer - `c.pdName` is actually `VolumeSpec.Cinder.VolumeID`.\n",
        "createdAt" : "2016-01-22T13:35:24Z",
        "updatedAt" : "2016-02-02T13:44:43Z",
        "lastEditedBy" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "tags" : [
        ]
      }
    ],
    "commit" : "220163f67de05890dd57b2ed6f2b02362f633a78",
    "line" : 118,
    "diffHunk" : "@@ -1,1 +358,362 @@\tdefer c.plugin.volumeLocks.UnlockKey(c.pdName)\n\n\t// Reload list of references, there might be SetUpAt finished in the meantime\n\trefs, err = mount.GetMountRefs(c.mounter, dir)\n\tif err != nil {"
  },
  {
    "id" : "e524b810-afcd-4322-a73b-0943e99c341d",
    "prId" : 6689,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "11f0393d-7fa5-4d73-a6a5-cb39f9d64e09",
        "parentId" : null,
        "authorId" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "body" : "Please keep #9139 in mind when you implement new volume plugins.\n",
        "createdAt" : "2015-07-17T14:33:31Z",
        "updatedAt" : "2015-08-25T22:15:22Z",
        "lastEditedBy" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "tags" : [
        ]
      },
      {
        "id" : "f2f13f8f-6444-4a85-b5ef-208f48306ecc",
        "parentId" : "11f0393d-7fa5-4d73-a6a5-cb39f9d64e09",
        "authorId" : "6a794e2e-9efa-46c8-af79-d5016fcccb21",
        "body" : "@pmorie could you please review if #9139 is properly addressed \n",
        "createdAt" : "2015-07-23T16:16:25Z",
        "updatedAt" : "2015-08-25T22:15:22Z",
        "lastEditedBy" : "6a794e2e-9efa-46c8-af79-d5016fcccb21",
        "tags" : [
        ]
      },
      {
        "id" : "6f870241-208f-4615-95ef-4cf8465f2072",
        "parentId" : "11f0393d-7fa5-4d73-a6a5-cb39f9d64e09",
        "authorId" : "727fc82d-d969-41a4-a614-7fefce94f9a6",
        "body" : "the separation of cinderBuilder and cinderCleaner looks good to me, per #9139.\n",
        "createdAt" : "2015-08-15T20:39:36Z",
        "updatedAt" : "2015-08-25T22:15:22Z",
        "lastEditedBy" : "727fc82d-d969-41a4-a614-7fefce94f9a6",
        "tags" : [
        ]
      },
      {
        "id" : "125cfc61-733b-4812-87bc-d1bf13367bda",
        "parentId" : "11f0393d-7fa5-4d73-a6a5-cb39f9d64e09",
        "authorId" : "6a794e2e-9efa-46c8-af79-d5016fcccb21",
        "body" : "@markturansky  Thanks for taking a look at it\n",
        "createdAt" : "2015-08-17T17:06:19Z",
        "updatedAt" : "2015-08-25T22:15:22Z",
        "lastEditedBy" : "6a794e2e-9efa-46c8-af79-d5016fcccb21",
        "tags" : [
        ]
      },
      {
        "id" : "4c468a2f-784c-4ed8-8a88-33983ceb4b1d",
        "parentId" : "11f0393d-7fa5-4d73-a6a5-cb39f9d64e09",
        "authorId" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "body" : "@spothanis Yep, that aspect of it looks fine.\n",
        "createdAt" : "2015-08-26T21:13:44Z",
        "updatedAt" : "2015-08-26T21:13:44Z",
        "lastEditedBy" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "tags" : [
        ]
      }
    ],
    "commit" : "c841a20361c86ea94acf5e5aff9f319aaa629e89",
    "line" : 129,
    "diffHunk" : "@@ -1,1 +127,131 @@// cinderPersistentDisk volumes are disk resources provided by C3\n// that are attached to the kubelet's host machine and exposed to the pod.\ntype cinderVolume struct {\n\tvolName string\n\tpodUID  types.UID"
  },
  {
    "id" : "407b2394-dc63-4fa0-811d-bceff57852bf",
    "prId" : 6689,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8535e0fd-6cc5-4fe0-a23f-416d0a28e09c",
        "parentId" : null,
        "authorId" : "727fc82d-d969-41a4-a614-7fefce94f9a6",
        "body" : "empty lines at the beginning of funcs can all be removed.\n",
        "createdAt" : "2015-08-21T01:43:28Z",
        "updatedAt" : "2015-08-25T22:15:22Z",
        "lastEditedBy" : "727fc82d-d969-41a4-a614-7fefce94f9a6",
        "tags" : [
        ]
      }
    ],
    "commit" : "c841a20361c86ea94acf5e5aff9f319aaa629e89",
    "line" : null,
    "diffHunk" : "@@ -1,1 +68,72 @@\nfunc (plugin *cinderPlugin) newBuilderInternal(spec *volume.Spec, podUID types.UID, manager cdManager, mounter mount.Interface) (volume.Builder, error) {\n\tvar cinder *api.CinderVolumeSource\n\tif spec.VolumeSource.Cinder != nil {\n\t\tcinder = spec.VolumeSource.Cinder"
  },
  {
    "id" : "c724166b-4482-4a8e-98fb-ef23b0e6a267",
    "prId" : 6689,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a754e420-5d55-469e-9096-e08090aa774b",
        "parentId" : null,
        "authorId" : "727fc82d-d969-41a4-a614-7fefce94f9a6",
        "body" : "empty line\n",
        "createdAt" : "2015-08-21T01:43:42Z",
        "updatedAt" : "2015-08-25T22:15:22Z",
        "lastEditedBy" : "727fc82d-d969-41a4-a614-7fefce94f9a6",
        "tags" : [
        ]
      }
    ],
    "commit" : "c841a20361c86ea94acf5e5aff9f319aaa629e89",
    "line" : null,
    "diffHunk" : "@@ -1,1 +98,102 @@\nfunc (plugin *cinderPlugin) newCleanerInternal(volName string, podUID types.UID, manager cdManager, mounter mount.Interface) (volume.Cleaner, error) {\n\treturn &cinderVolumeCleaner{\n\t\t&cinderVolume{\n\t\t\tpodUID:  podUID,"
  },
  {
    "id" : "ae5af085-c08f-4708-a760-b3e7ffdf03bb",
    "prId" : 6689,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cbc37eb5-d049-4bf5-9d75-9c427af5f96d",
        "parentId" : null,
        "authorId" : "727fc82d-d969-41a4-a614-7fefce94f9a6",
        "body" : "all empty lines at top of funcs can go\n",
        "createdAt" : "2015-08-21T01:44:14Z",
        "updatedAt" : "2015-08-25T22:15:22Z",
        "lastEditedBy" : "727fc82d-d969-41a4-a614-7fefce94f9a6",
        "tags" : [
        ]
      }
    ],
    "commit" : "c841a20361c86ea94acf5e5aff9f319aaa629e89",
    "line" : null,
    "diffHunk" : "@@ -1,1 +160,164 @@// SetUp attaches the disk and bind mounts to the volume path.\nfunc (b *cinderVolumeBuilder) SetUpAt(dir string) error {\n\t// TODO: handle failed mounts here.\n\tnotmnt, err := b.mounter.IsLikelyNotMountPoint(dir)\n\tglog.V(4).Infof(\"PersistentDisk set up: %s %v %v\", dir, !notmnt, err)"
  },
  {
    "id" : "c9f10ede-a0a9-475b-9866-940f3052ace3",
    "prId" : 6689,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "49137433-0fca-49ae-8055-8ff6847381fd",
        "parentId" : null,
        "authorId" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "body" : "Better error message please, failed unmount which dir?\n",
        "createdAt" : "2015-08-26T21:20:38Z",
        "updatedAt" : "2015-08-26T21:20:38Z",
        "lastEditedBy" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "tags" : [
        ]
      }
    ],
    "commit" : "c841a20361c86ea94acf5e5aff9f319aaa629e89",
    "line" : 197,
    "diffHunk" : "@@ -1,1 +195,199 @@\t\tif !notmnt {\n\t\t\tif mntErr = b.mounter.Unmount(dir); mntErr != nil {\n\t\t\t\tglog.Errorf(\"Failed to unmount: %v\", mntErr)\n\t\t\t\treturn err\n\t\t\t}"
  },
  {
    "id" : "160ef217-b6fb-4494-8949-a5035dd01585",
    "prId" : 6689,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "45f89d0c-c2d5-4dc6-813e-b966e5d3afa6",
        "parentId" : null,
        "authorId" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "body" : "Again, the directory this is relevant to should be included in the error message.\n",
        "createdAt" : "2015-08-26T21:21:54Z",
        "updatedAt" : "2015-08-26T21:21:54Z",
        "lastEditedBy" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "tags" : [
        ]
      }
    ],
    "commit" : "c841a20361c86ea94acf5e5aff9f319aaa629e89",
    "line" : 202,
    "diffHunk" : "@@ -1,1 +200,204 @@\t\t\tnotmnt, mntErr := b.mounter.IsLikelyNotMountPoint(dir)\n\t\t\tif mntErr != nil {\n\t\t\t\tglog.Errorf(\"IsLikelyNotMountPoint check failed: %v\", mntErr)\n\t\t\t\treturn err\n\t\t\t}"
  }
]