[
  {
    "id" : "de7d2d43-d001-468a-8acb-f30022b1851f",
    "prId" : 80911,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/80911#pullrequestreview-279004296",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5a7e132f-2777-443e-8952-5e06cff1ae5d",
        "parentId" : null,
        "authorId" : "7b403c3c-4a19-4e93-b252-11ae5c611e35",
        "body" : "For Linux OS - before this change, the code was creating directory on deviceMountPath. But now, we seem to be creating directory on devicePath. Could you explain the reason?",
        "createdAt" : "2019-08-22T21:02:39Z",
        "updatedAt" : "2019-08-26T13:44:43Z",
        "lastEditedBy" : "7b403c3c-4a19-4e93-b252-11ae5c611e35",
        "tags" : [
        ]
      },
      {
        "id" : "9e1ce2fa-2651-4928-bf3e-0c6cf8a3b7c0",
        "parentId" : "5a7e132f-2777-443e-8952-5e06cff1ae5d",
        "authorId" : "cb143ff8-4479-4c31-a009-b383d0bdd58d",
        "body" : "I think this might be an oversight, let me confirm",
        "createdAt" : "2019-08-22T21:48:12Z",
        "updatedAt" : "2019-08-26T13:44:43Z",
        "lastEditedBy" : "cb143ff8-4479-4c31-a009-b383d0bdd58d",
        "tags" : [
        ]
      },
      {
        "id" : "cd88f50a-9f90-4aba-94e5-baba9c836e6f",
        "parentId" : "5a7e132f-2777-443e-8952-5e06cff1ae5d",
        "authorId" : "cb143ff8-4479-4c31-a009-b383d0bdd58d",
        "body" : "@SandeepPissay I confirmed that this was just a mistake and fixed the error",
        "createdAt" : "2019-08-23T13:39:06Z",
        "updatedAt" : "2019-08-26T13:44:43Z",
        "lastEditedBy" : "cb143ff8-4479-4c31-a009-b383d0bdd58d",
        "tags" : [
        ]
      }
    ],
    "commit" : "c7c755a0d1cb58f1f4d5796c360c8d7e46c406a0",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +216,220 @@\t\t\t\tdir = filepath.Dir(deviceMountPath)\n\t\t\t}\n\t\t\tif err := os.MkdirAll(dir, 0750); err != nil {\n\t\t\t\tklog.Errorf(\"Failed to create directory at %#v. err: %s\", dir, err)\n\t\t\t\treturn err"
  },
  {
    "id" : "ded203bc-3a55-49e3-90c9-6897c9cda539",
    "prId" : 80911,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/80911#pullrequestreview-280224750",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0750fb6c-1105-4f17-931c-5ee73ba60432",
        "parentId" : null,
        "authorId" : "c13045f9-cfc0-48e5-80df-ee48ddaa9fdc",
        "body" : "later if error occurs for `diskMounter.FormatAndMount`\r\nwe do `os.Remove(deviceMountPath)`, may be for windows you need `os.Remove(filepath.Dir(deviceMountPath))`\r\n",
        "createdAt" : "2019-08-24T02:37:48Z",
        "updatedAt" : "2019-08-26T13:44:43Z",
        "lastEditedBy" : "c13045f9-cfc0-48e5-80df-ee48ddaa9fdc",
        "tags" : [
        ]
      },
      {
        "id" : "d30b36b9-3bdd-4a70-b1a8-d0014f7465ff",
        "parentId" : "0750fb6c-1105-4f17-931c-5ee73ba60432",
        "authorId" : "cb143ff8-4479-4c31-a009-b383d0bdd58d",
        "body" : "There will be a symlink at `deviceMountPath`, I think we want to delete that, the same as on Linux. It looks like on both platforms the directory is left?",
        "createdAt" : "2019-08-26T13:23:48Z",
        "updatedAt" : "2019-08-26T13:44:43Z",
        "lastEditedBy" : "cb143ff8-4479-4c31-a009-b383d0bdd58d",
        "tags" : [
        ]
      },
      {
        "id" : "31f36375-dcec-4d5f-9735-e2a7e57d4d36",
        "parentId" : "0750fb6c-1105-4f17-931c-5ee73ba60432",
        "authorId" : "c13045f9-cfc0-48e5-80df-ee48ddaa9fdc",
        "body" : "In windows `deviceMountPath` symlink will be available after mount is successful, but if mount fails before format, there is no symlink. `os.Remove` will return err which are ignoring.\r\n\r\nIn linux `deviceMountPath` directory is created with `os.MkdirAll`, and later device is mounted in this directory, so if mount fails we delete `deviceMountPath` directory.\r\n\r\nbut I think we are ok, as `os.Remove` returns error, which we are ignoring, and returns mount failure back to the caller.\r\n\r\nCan you clarify if that is not the case?\r\n",
        "createdAt" : "2019-08-27T14:11:02Z",
        "updatedAt" : "2019-08-27T14:11:03Z",
        "lastEditedBy" : "c13045f9-cfc0-48e5-80df-ee48ddaa9fdc",
        "tags" : [
        ]
      }
    ],
    "commit" : "c7c755a0d1cb58f1f4d5796c360c8d7e46c406a0",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +214,218 @@\t\t\tdir := deviceMountPath\n\t\t\tif runtime.GOOS == \"windows\" {\n\t\t\t\tdir = filepath.Dir(deviceMountPath)\n\t\t\t}\n\t\t\tif err := os.MkdirAll(dir, 0750); err != nil {"
  },
  {
    "id" : "9a482219-7e15-4931-99ff-2439e0fd143b",
    "prId" : 52131,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/52131#pullrequestreview-62285252",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fe737931-8ed8-4c31-95dc-772c555d6d0f",
        "parentId" : null,
        "authorId" : "c13045f9-cfc0-48e5-80df-ee48ddaa9fdc",
        "body" : "Can we change warningf to infof?",
        "createdAt" : "2017-09-12T17:50:55Z",
        "updatedAt" : "2017-09-18T19:00:37Z",
        "lastEditedBy" : "c13045f9-cfc0-48e5-80df-ee48ddaa9fdc",
        "tags" : [
        ]
      },
      {
        "id" : "c7ae8aab-5e98-4b09-93a8-ec781c37e855",
        "parentId" : "fe737931-8ed8-4c31-95dc-772c555d6d0f",
        "authorId" : "a52ffc16-075e-4ecb-8ec3-e5096ab48cb5",
        "body" : "No, we want to use BulkVerifyVolumes() API instead of VolumesAreAttached() API. So any invocations on VolumesAreAttached() should be a warning log.",
        "createdAt" : "2017-09-12T22:29:50Z",
        "updatedAt" : "2017-09-18T19:00:37Z",
        "lastEditedBy" : "a52ffc16-075e-4ecb-8ec3-e5096ab48cb5",
        "tags" : [
        ]
      }
    ],
    "commit" : "2ea619902da914e10211c1747de6fa7ea7856b42",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +87,91 @@\nfunc (attacher *vsphereVMDKAttacher) VolumesAreAttached(specs []*volume.Spec, nodeName types.NodeName) (map[*volume.Spec]bool, error) {\n\tglog.Warningf(\"Attacher.VolumesAreAttached called for node %q - Please use BulkVerifyVolumes for vSphere\", nodeName)\n\tvolumeNodeMap := map[types.NodeName][]*volume.Spec{\n\t\tnodeName: specs,"
  },
  {
    "id" : "d0d4dd57-81db-4c76-a2b9-b5a92a78fd36",
    "prId" : 30535,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "239fbec4-f90c-4138-ad7f-df5ea24eed1b",
        "parentId" : null,
        "authorId" : "87633202-0ae3-4a2c-8d60-a7c3854b3b8e",
        "body" : "exported functions need comments\n",
        "createdAt" : "2016-08-18T17:02:09Z",
        "updatedAt" : "2016-08-19T07:29:19Z",
        "lastEditedBy" : "87633202-0ae3-4a2c-8d60-a7c3854b3b8e",
        "tags" : [
        ]
      },
      {
        "id" : "fd58ec71-b32f-4bad-95ec-ff5788fc9051",
        "parentId" : "239fbec4-f90c-4138-ad7f-df5ea24eed1b",
        "authorId" : "cedc873a-e14c-439d-b48f-f7b409610f16",
        "body" : "Good point. I have added comments.\n",
        "createdAt" : "2016-08-19T03:09:53Z",
        "updatedAt" : "2016-08-19T07:29:19Z",
        "lastEditedBy" : "cedc873a-e14c-439d-b48f-f7b409610f16",
        "tags" : [
        ]
      }
    ],
    "commit" : "e89ad04422fad2aa43ab0b2fe730877c81d53e11",
    "line" : null,
    "diffHunk" : "@@ -1,1 +132,136 @@// GetMountDeviceRefs finds all other references to the device referenced\n// by deviceMountPath; returns a list of paths.\nfunc (plugin *vsphereVolumePlugin) GetDeviceMountRefs(deviceMountPath string) ([]string, error) {\n\tmounter := plugin.host.GetMounter()\n\treturn mount.GetMountRefs(mounter, deviceMountPath)"
  },
  {
    "id" : "5e2037db-c91c-430d-a7d5-a4a678a4ee90",
    "prId" : 30535,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7446c269-385a-4b83-b624-69c82547d683",
        "parentId" : null,
        "authorId" : "87633202-0ae3-4a2c-8d60-a7c3854b3b8e",
        "body" : "notMnt - expand words\n",
        "createdAt" : "2016-08-18T17:03:03Z",
        "updatedAt" : "2016-08-19T07:29:19Z",
        "lastEditedBy" : "87633202-0ae3-4a2c-8d60-a7c3854b3b8e",
        "tags" : [
        ]
      },
      {
        "id" : "744a290d-8d38-4ee2-81bb-4721225c6887",
        "parentId" : "7446c269-385a-4b83-b624-69c82547d683",
        "authorId" : "cedc873a-e14c-439d-b48f-f7b409610f16",
        "body" : "Good point. Agree with you but everyone else is using 'notMnt' so I think it to keep it consistent.\n",
        "createdAt" : "2016-08-18T22:57:53Z",
        "updatedAt" : "2016-08-19T07:29:19Z",
        "lastEditedBy" : "cedc873a-e14c-439d-b48f-f7b409610f16",
        "tags" : [
        ]
      }
    ],
    "commit" : "e89ad04422fad2aa43ab0b2fe730877c81d53e11",
    "line" : null,
    "diffHunk" : "@@ -1,1 +140,144 @@func (attacher *vsphereVMDKAttacher) MountDevice(spec *volume.Spec, devicePath string, deviceMountPath string) error {\n\tmounter := attacher.host.GetMounter()\n\tnotMnt, err := mounter.IsLikelyNotMountPoint(deviceMountPath)\n\tif err != nil {\n\t\tif os.IsNotExist(err) {"
  },
  {
    "id" : "de1fd473-ad0e-4889-a5b1-8f90ada75753",
    "prId" : 30535,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "73f06ac7-aaa3-40d1-bd01-f520f04143e2",
        "parentId" : null,
        "authorId" : "87633202-0ae3-4a2c-8d60-a7c3854b3b8e",
        "body" : "log errors\n",
        "createdAt" : "2016-08-18T17:03:36Z",
        "updatedAt" : "2016-08-19T07:29:19Z",
        "lastEditedBy" : "87633202-0ae3-4a2c-8d60-a7c3854b3b8e",
        "tags" : [
        ]
      }
    ],
    "commit" : "e89ad04422fad2aa43ab0b2fe730877c81d53e11",
    "line" : null,
    "diffHunk" : "@@ -1,1 +147,151 @@\t\t\t\treturn err\n\t\t\t}\n\t\t\tnotMnt = true\n\t\t} else {\n\t\t\treturn err"
  }
]