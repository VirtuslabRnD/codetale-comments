[
  {
    "id" : "f9256db0-6a38-4daf-b8fe-61269ffd78dc",
    "prId" : 68761,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/68761#pullrequestreview-169314356",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f83b1a5f-9493-46fa-b5f0-0970be80973f",
        "parentId" : null,
        "authorId" : "54b8eb75-28dd-421d-a52b-63bf897147a9",
        "body" : "Add a log indicating what has happened to Fstype and why.",
        "createdAt" : "2018-10-12T19:14:23Z",
        "updatedAt" : "2018-11-07T20:16:56Z",
        "lastEditedBy" : "54b8eb75-28dd-421d-a52b-63bf897147a9",
        "tags" : [
        ]
      },
      {
        "id" : "2549558a-3951-4eb2-88ce-0097ac4c01c7",
        "parentId" : "f83b1a5f-9493-46fa-b5f0-0970be80973f",
        "authorId" : "1ba29fa9-c74e-4deb-bbb0-a9fac81a9902",
        "body" : "Good, added log here.\r\n`glog.V(5).Infof(\"vSphere block volume should not have any FSType\")`",
        "createdAt" : "2018-10-29T14:01:07Z",
        "updatedAt" : "2018-11-07T20:16:56Z",
        "lastEditedBy" : "1ba29fa9-c74e-4deb-bbb0-a9fac81a9902",
        "tags" : [
        ]
      }
    ],
    "commit" : "dcb3a5fac76de9492252a5f28c58e02d4e19802f",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +375,379 @@\t\t\tglog.V(5).Infof(\"vSphere block volume should not have any FSType\")\n\t\t\tvolSpec.Fstype = \"\"\n\t\t}\n\t}\n"
  },
  {
    "id" : "d10030e7-0072-4f6c-888c-0e98dbc49618",
    "prId" : 68761,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/68761#pullrequestreview-171816415",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c0ed7f55-33a1-444d-bf21-14938e4c487d",
        "parentId" : null,
        "authorId" : "c13045f9-cfc0-48e5-80df-ee48ddaa9fdc",
        "body" : "Do we need to remove following check from ` func (v *vsphereVolumeProvisioner) Provision`? \r\n\r\n```\r\nif util.CheckPersistentVolumeClaimModeBlock(v.options.PVC) {\r\n \t\treturn nil, fmt.Errorf(\"%s does not support block volume provisioning\", v.plugin.GetPluginName())\r\n \t}\r\n```",
        "createdAt" : "2018-11-05T23:12:19Z",
        "updatedAt" : "2018-11-07T20:16:56Z",
        "lastEditedBy" : "c13045f9-cfc0-48e5-80df-ee48ddaa9fdc",
        "tags" : [
        ]
      },
      {
        "id" : "ae50b29d-4d25-4560-9286-e7ff9ec09c29",
        "parentId" : "c0ed7f55-33a1-444d-bf21-14938e4c487d",
        "authorId" : "1ba29fa9-c74e-4deb-bbb0-a9fac81a9902",
        "body" : "Yes, we need to remove it! Good catch!",
        "createdAt" : "2018-11-06T00:00:51Z",
        "updatedAt" : "2018-11-07T20:16:56Z",
        "lastEditedBy" : "1ba29fa9-c74e-4deb-bbb0-a9fac81a9902",
        "tags" : [
        ]
      }
    ],
    "commit" : "dcb3a5fac76de9492252a5f28c58e02d4e19802f",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +369,373 @@\t}\n\n\tvar volumeMode *v1.PersistentVolumeMode\n\tif utilfeature.DefaultFeatureGate.Enabled(features.BlockVolume) {\n\t\tvolumeMode = v.options.PVC.Spec.VolumeMode"
  },
  {
    "id" : "baddc887-89d9-46f4-b89a-34b10ecaa672",
    "prId" : 27970,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7ef664ae-d684-42a1-9073-5ba39dc3ee7e",
        "parentId" : null,
        "authorId" : "8e448017-7838-493d-a424-33cada0da657",
        "body" : "Ditto\n",
        "createdAt" : "2016-08-06T03:57:36Z",
        "updatedAt" : "2016-08-15T18:29:44Z",
        "lastEditedBy" : "8e448017-7838-493d-a424-33cada0da657",
        "tags" : [
        ]
      }
    ],
    "commit" : "f19a1148db1b7584be6b6b60abaf8c0bd1503ed3",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +141,145 @@\t\tVolumeSource: api.VolumeSource{\n\t\t\tVsphereVolume: &api.VsphereVirtualDiskVolumeSource{\n\t\t\t\tVolumePath: volumeName,\n\t\t\t},\n\t\t},"
  },
  {
    "id" : "a172c07f-7bac-46e0-85f7-b5e5b43a8703",
    "prId" : 26658,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1ad0f728-8613-417a-9b66-bb2511cdc381",
        "parentId" : null,
        "authorId" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "body" : "Thanks a lot for adding this.\n",
        "createdAt" : "2016-06-12T22:09:18Z",
        "updatedAt" : "2016-06-14T00:23:32Z",
        "lastEditedBy" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "tags" : [
        ]
      }
    ],
    "commit" : "6a8cec1c5c9f19b2762f6c77b4c7ab11f1113de6",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +285,289 @@\t// volumePath eg: \"[local] xxx.vmdk\" provided to attach/mount\n\t// replacing \\040 with space to match the actual volumePath\n\tmountPath := strings.Replace(path.Base(refs[0]), \"\\\\040\", \" \", -1)\n\tv.volPath = mountPath\n\tglog.V(4).Infof(\"Found volume %s mounted to %s\", v.volPath, dir)"
  },
  {
    "id" : "bbba03e0-c83a-410c-b29e-8a8f3506ae8a",
    "prId" : 24947,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "64b9b22e-f552-4974-a73d-1fbc64c5b70e",
        "parentId" : null,
        "authorId" : "87633202-0ae3-4a2c-8d60-a7c3854b3b8e",
        "body" : "vdVol or vVol.  If we are using the 'vd' convention for the manager we should stick to the same pattern\n",
        "createdAt" : "2016-04-28T22:05:14Z",
        "updatedAt" : "2016-05-21T19:53:34Z",
        "lastEditedBy" : "87633202-0ae3-4a2c-8d60-a7c3854b3b8e",
        "tags" : [
        ]
      }
    ],
    "commit" : "11397654b6e9a8ab3bd4272d37e87163e3cf70b4",
    "line" : null,
    "diffHunk" : "@@ -1,1 +76,80 @@\nfunc (plugin *vsphereVolumePlugin) newMounterInternal(spec *volume.Spec, podUID types.UID, manager vdManager, mounter mount.Interface) (volume.Mounter, error) {\n\tvar vvol *api.VsphereVirtualDiskVolumeSource\n\tif spec.Volume != nil && spec.Volume.VsphereVolume != nil {\n\t\tvvol = spec.Volume.VsphereVolume"
  }
]