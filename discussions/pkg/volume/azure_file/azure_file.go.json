[
  {
    "id" : "d983fb4a-2570-4fce-a2ad-e45e0b19aea8",
    "prId" : 88610,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/88610#pullrequestreview-366154839",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e2705738-27b1-4e2e-a087-582596cd27e0",
        "parentId" : null,
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "do we need to kill the mount process if it has been hung?",
        "createdAt" : "2020-02-28T03:39:50Z",
        "updatedAt" : "2020-02-28T03:39:50Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      },
      {
        "id" : "029b38d8-834d-4cc3-a674-b1ce6590728b",
        "parentId" : "e2705738-27b1-4e2e-a087-582596cd27e0",
        "authorId" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "body" : "point is how to kill it in the mount cifs code?\r\nnow if it's timeout, then it would return error, and then try mount again.\r\nThis is happening on an edge case, not expected to happen frequently.",
        "createdAt" : "2020-02-28T03:46:26Z",
        "updatedAt" : "2020-02-28T03:46:27Z",
        "lastEditedBy" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "tags" : [
        ]
      },
      {
        "id" : "7054f1ff-dd1f-4dde-a205-6156f15db8d9",
        "parentId" : "e2705738-27b1-4e2e-a087-582596cd27e0",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "is it possible to return the process id on mount error? it may need to refactor mount codes I think",
        "createdAt" : "2020-02-28T03:54:44Z",
        "updatedAt" : "2020-02-28T03:54:44Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      },
      {
        "id" : "186c6e8e-39db-48a5-ad84-64c1c9b0a3ed",
        "parentId" : "e2705738-27b1-4e2e-a087-582596cd27e0",
        "authorId" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "body" : "`mounter.Mount` func don't have that info, may need refactor mount codes ",
        "createdAt" : "2020-02-28T04:12:33Z",
        "updatedAt" : "2020-02-28T04:12:34Z",
        "lastEditedBy" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "tags" : [
        ]
      },
      {
        "id" : "1b67bc27-f9cf-44b8-a5df-b5e142fbd3de",
        "parentId" : "e2705738-27b1-4e2e-a087-582596cd27e0",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "I see. Let's add the timeout first",
        "createdAt" : "2020-02-28T04:27:24Z",
        "updatedAt" : "2020-02-28T04:27:30Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      }
    ],
    "commit" : "fb7209486e2226b3015e859018a34299d152ca51",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +298,302 @@\t\treturn true, err\n\t})\n\tif !mountComplete {\n\t\treturn fmt.Errorf(\"volume(%s) mount on %s timeout(10m)\", source, dir)\n\t}"
  },
  {
    "id" : "85c373d2-3506-43de-beda-8a837e3fd063",
    "prId" : 60625,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/60625#pullrequestreview-100338849",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b5f35d9f-5d65-4d85-8ae0-09fbbb79a29c",
        "parentId" : null,
        "authorId" : "dd7ae991-dbbc-4a29-896b-4334bdee748b",
        "body" : "Is this for windows only? consider applying 'if runtime.GOOS == \"windows\" '",
        "createdAt" : "2018-03-01T07:32:12Z",
        "updatedAt" : "2018-03-01T07:46:22Z",
        "lastEditedBy" : "dd7ae991-dbbc-4a29-896b-4334bdee748b",
        "tags" : [
        ]
      },
      {
        "id" : "0fc90ce8-3d4a-4fd2-8111-893f89815e54",
        "parentId" : "b5f35d9f-5d65-4d85-8ae0-09fbbb79a29c",
        "authorId" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "body" : "I would like to make it generic, same logic as azure-disk mount: https://github.com/kubernetes/kubernetes/blob/master/pkg/volume/azure_dd/azure_mounter.go#L88-L100",
        "createdAt" : "2018-03-01T07:47:09Z",
        "updatedAt" : "2018-03-01T07:48:24Z",
        "lastEditedBy" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "tags" : [
        ]
      }
    ],
    "commit" : "dce507ce698d5dbcbcf0acb9f234ceac4032c5c3",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +243,247 @@\t}\n\tif !notMnt {\n\t\t// testing original mount point, make sure the mount link is valid\n\t\tif _, err := ioutil.ReadDir(dir); err == nil {\n\t\t\tglog.V(4).Infof(\"azureFile - already mounted to target %s\", dir)"
  },
  {
    "id" : "e4177fa1-5f61-401b-b795-4d126e77a9a8",
    "prId" : 60625,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/60625#pullrequestreview-100338849",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "349ddd8b-b17d-4122-87bf-cffd9664e2e7",
        "parentId" : null,
        "authorId" : "dd7ae991-dbbc-4a29-896b-4334bdee748b",
        "body" : "this notMnt val is not used later",
        "createdAt" : "2018-03-01T07:38:56Z",
        "updatedAt" : "2018-03-01T07:46:22Z",
        "lastEditedBy" : "dd7ae991-dbbc-4a29-896b-4334bdee748b",
        "tags" : [
        ]
      },
      {
        "id" : "6d04289a-c695-466b-8998-8d91bb7d8139",
        "parentId" : "349ddd8b-b17d-4122-87bf-cffd9664e2e7",
        "authorId" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "body" : "notMnt should set as true since it's not a mounting point after unmount, same logic as azure disk",
        "createdAt" : "2018-03-01T07:48:12Z",
        "updatedAt" : "2018-03-01T07:48:24Z",
        "lastEditedBy" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "tags" : [
        ]
      }
    ],
    "commit" : "dce507ce698d5dbcbcf0acb9f234ceac4032c5c3",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +254,258 @@\t\t\treturn err\n\t\t}\n\t\tnotMnt = true\n\t}\n"
  },
  {
    "id" : "4965afc3-8ff7-40be-a164-f730cc45a1e2",
    "prId" : 57017,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/57017#pullrequestreview-90363001",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e0a4581b-8b0b-4f13-8cf3-c5565da4f663",
        "parentId" : null,
        "authorId" : "dd7ae991-dbbc-4a29-896b-4334bdee748b",
        "body" : "Will not call resize if set to false?\r\n\r\nhttps://github.com/kubernetes/kubernetes/blob/81b43401a9a18e516a2a4de60e0118655d3e8100/pkg/volume/util/operationexecutor/operation_generator.go#L601",
        "createdAt" : "2018-01-22T03:08:56Z",
        "updatedAt" : "2018-01-31T03:02:35Z",
        "lastEditedBy" : "dd7ae991-dbbc-4a29-896b-4334bdee748b",
        "tags" : [
        ]
      },
      {
        "id" : "e2ba11f8-eb61-4b47-a335-b0bf9c82c679",
        "parentId" : "e0a4581b-8b0b-4f13-8cf3-c5565da4f663",
        "authorId" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "body" : "`RequiresFSResize` means require file system resize, azure file don't need this. this value of Azure disk should be true.",
        "createdAt" : "2018-01-22T03:18:13Z",
        "updatedAt" : "2018-01-31T03:02:35Z",
        "lastEditedBy" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "tags" : [
        ]
      }
    ],
    "commit" : "bf0c6d84f57bdb9388d9d29356a6c1a638a48375",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +142,146 @@\nfunc (plugin *azureFilePlugin) RequiresFSResize() bool {\n\treturn false\n}\n"
  },
  {
    "id" : "1433e7ec-9704-41a8-aaed-1aed70311e35",
    "prId" : 55381,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/55381#pullrequestreview-75676151",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "830efb64-6a5c-4453-9566-93f40f245d48",
        "parentId" : null,
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "This was changed in the original, but not here. Why?",
        "createdAt" : "2017-11-09T18:22:58Z",
        "updatedAt" : "2017-11-10T14:37:34Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "60083652-0921-4de8-9e9d-74713702307e",
        "parentId" : "830efb64-6a5c-4453-9566-93f40f245d48",
        "authorId" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "body" : "@msau42 The fix should only contains \"work within different cloud environments\", should not have azure file permission change which will break some user scenarios.",
        "createdAt" : "2017-11-10T07:06:39Z",
        "updatedAt" : "2017-11-10T14:37:34Z",
        "lastEditedBy" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "tags" : [
        ]
      }
    ],
    "commit" : "593653c38413a7f86c7b141a62a8e0b5cda71d9b",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +209,213 @@\t\treturn err\n\t}\n\tos.MkdirAll(dir, 0750)\n\n\tsource := fmt.Sprintf(\"//%s.file.%s/%s\", accountName, getStorageEndpointSuffix(b.plugin.host.GetCloudProvider()), b.shareName)"
  },
  {
    "id" : "718de250-d23e-44a7-abfd-5f4608bc9826",
    "prId" : 55381,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/55381#pullrequestreview-75537483",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "971d619b-d873-4b3a-8e1e-4221ed87db15",
        "parentId" : null,
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "same",
        "createdAt" : "2017-11-09T18:23:04Z",
        "updatedAt" : "2017-11-10T14:37:34Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      }
    ],
    "commit" : "593653c38413a7f86c7b141a62a8e0b5cda71d9b",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +213,217 @@\tsource := fmt.Sprintf(\"//%s.file.%s/%s\", accountName, getStorageEndpointSuffix(b.plugin.host.GetCloudProvider()), b.shareName)\n\t// parameters suggested by https://azure.microsoft.com/en-us/documentation/articles/storage-how-to-use-files-linux/\n\toptions := []string{fmt.Sprintf(\"vers=3.0,username=%s,password=%s,dir_mode=0777,file_mode=0777\", accountName, accountKey)}\n\tif b.readOnly {\n\t\toptions = append(options, \"ro\")"
  },
  {
    "id" : "71bd337b-dc3c-4430-8f28-4aded61d3333",
    "prId" : 54674,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/54674#pullrequestreview-72479818",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b72ca8fc-2c35-4605-a71a-303d9c248a01",
        "parentId" : null,
        "authorId" : "2892af68-16a3-42b4-b41e-1a351380f2cc",
        "body" : "You should use the `dir_mode` value if defined, otherwise defaultFileMode when the root folder is created. ",
        "createdAt" : "2017-10-27T11:25:54Z",
        "updatedAt" : "2017-11-16T07:15:34Z",
        "lastEditedBy" : "2892af68-16a3-42b4-b41e-1a351380f2cc",
        "tags" : [
        ]
      },
      {
        "id" : "79bcfcb6-d591-4101-bcfd-e8a234a88348",
        "parentId" : "b72ca8fc-2c35-4605-a71a-303d9c248a01",
        "authorId" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "body" : "actually here `dir` is the k8s path in the agent node, e.g. `/var/lib/kubelet/plugins/kubernetes.io/azure-disk/mounts/b1246717734`, not the container mount path, k8s would then use volume mapping between `dir` and container mount path. So `dir_mode` is different here, we should not set  `os.MkdirAll(dir, 0700)` as `dir_mode` in `mountOptions`.",
        "createdAt" : "2017-10-27T11:46:12Z",
        "updatedAt" : "2017-11-16T07:15:34Z",
        "lastEditedBy" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "tags" : [
        ]
      }
    ],
    "commit" : "e316bbcdb37429d3364ddb6fddfbbd21e6605c59",
    "line" : 2,
    "diffHunk" : "@@ -1,1 +221,225 @@\t\tmountOptions = []string{fmt.Sprintf(\"AZURE\\\\%s\", accountName), accountKey}\n\t} else {\n\t\tos.MkdirAll(dir, 0700)\n\t\t// parameters suggested by https://azure.microsoft.com/en-us/documentation/articles/storage-how-to-use-files-linux/\n\t\toptions := []string{fmt.Sprintf(\"username=%s,password=%s\", accountName, accountKey)}"
  },
  {
    "id" : "3a542e9e-a899-412b-8e95-42c50ce4f266",
    "prId" : 51252,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/51252#pullrequestreview-58863486",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fb4aee20-f0fb-4d58-8686-dc085b9a422c",
        "parentId" : null,
        "authorId" : "dd7ae991-dbbc-4a29-896b-4334bdee748b",
        "body" : "azure_file change should not be included?",
        "createdAt" : "2017-08-24T08:47:58Z",
        "updatedAt" : "2017-09-12T01:53:29Z",
        "lastEditedBy" : "dd7ae991-dbbc-4a29-896b-4334bdee748b",
        "tags" : [
        ]
      },
      {
        "id" : "256fdabd-91dd-4f19-bd41-75f194bfdf2a",
        "parentId" : "fb4aee20-f0fb-4d58-8686-dc085b9a422c",
        "authorId" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "body" : "It's based on azurefile PR, when it's merged, there should be no this code change",
        "createdAt" : "2017-08-25T03:37:41Z",
        "updatedAt" : "2017-09-12T01:53:29Z",
        "lastEditedBy" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "tags" : [
        ]
      },
      {
        "id" : "78b2f37f-9b46-47f7-9330-78d98022b8aa",
        "parentId" : "fb4aee20-f0fb-4d58-8686-dc085b9a422c",
        "authorId" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "body" : "actually I have changed Mount func in mount_windows.go, which will affect azure_file code, need to change azure_file.go code",
        "createdAt" : "2017-08-28T06:44:50Z",
        "updatedAt" : "2017-09-12T01:53:29Z",
        "lastEditedBy" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "tags" : [
        ]
      }
    ],
    "commit" : "82c909cc992634a8475be215e06d42a78c803a81",
    "line" : 1,
    "diffHunk" : "@@ -1,1 +17,21 @@package azure_file\n\nimport (\n\t\"fmt\"\n\t\"os\""
  },
  {
    "id" : "8c0f013b-c84d-45da-9d31-3f9000b74cff",
    "prId" : 27970,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ee737677-ba80-4add-89c8-0a19ab14f51d",
        "parentId" : null,
        "authorId" : "8e448017-7838-493d-a424-33cada0da657",
        "body" : "I don't think `SecretName`/`ShareName` here are correct. Better to leave them unset\n",
        "createdAt" : "2016-08-06T03:51:50Z",
        "updatedAt" : "2016-08-15T18:29:44Z",
        "lastEditedBy" : "8e448017-7838-493d-a424-33cada0da657",
        "tags" : [
        ]
      },
      {
        "id" : "1d18a15e-b3d1-4532-9808-810fbbf06e3c",
        "parentId" : "ee737677-ba80-4add-89c8-0a19ab14f51d",
        "authorId" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "body" : "keep it for now because it is used in create UniqueVolumeName\n",
        "createdAt" : "2016-08-12T18:05:47Z",
        "updatedAt" : "2016-08-15T18:29:44Z",
        "lastEditedBy" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "tags" : [
        ]
      }
    ],
    "commit" : "f19a1148db1b7584be6b6b60abaf8c0bd1503ed3",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +130,134 @@\t\tVolumeSource: api.VolumeSource{\n\t\t\tAzureFile: &api.AzureFileVolumeSource{\n\t\t\t\tSecretName: volName,\n\t\t\t\tShareName:  volName,\n\t\t\t},"
  },
  {
    "id" : "6705210b-36f7-4218-8815-55bb777a0d09",
    "prId" : 17221,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d2570f07-02a2-448b-9786-30b4a1cef489",
        "parentId" : null,
        "authorId" : null,
        "body" : "You should be able to use this #16950 soon\n",
        "createdAt" : "2015-11-16T19:41:54Z",
        "updatedAt" : "2016-02-09T01:07:22Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      }
    ],
    "commit" : "d7e4b826b91111445bd2de0f71c39d35baa60a06",
    "line" : 58,
    "diffHunk" : "@@ -1,1 +56,60 @@\nfunc (plugin *azureFilePlugin) CanSupport(spec *volume.Spec) bool {\n\t//TODO: check if mount.cifs is there\n\treturn (spec.PersistentVolume != nil && spec.PersistentVolume.Spec.AzureFile != nil) ||\n\t\t(spec.Volume != nil && spec.Volume.AzureFile != nil)"
  },
  {
    "id" : "15b96b70-d21d-4d20-9863-fa7caaa8eb1d",
    "prId" : 17221,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "96223ee1-7ec4-41d1-b063-66775c36cc31",
        "parentId" : null,
        "authorId" : "8e448017-7838-493d-a424-33cada0da657",
        "body" : "Azure supports `CreateShare` and `DeleteShare` so please implement volume `Provisioner` and `Deleter` interfaces.\n",
        "createdAt" : "2016-02-03T01:04:39Z",
        "updatedAt" : "2016-02-09T01:07:22Z",
        "lastEditedBy" : "8e448017-7838-493d-a424-33cada0da657",
        "tags" : [
        ]
      },
      {
        "id" : "e97df12a-cfe1-4f86-839b-51baa891ed06",
        "parentId" : "96223ee1-7ec4-41d1-b063-66775c36cc31",
        "authorId" : "a7f673a6-4b23-4df6-aa10-f123fa9dcd5f",
        "body" : "@saad-ali given that provisioning is WIP by @markturansky , and that Azure storage setup is different from AWS/GCE/OpenStack, I'd wait till provisioner is able to cope with these differences. \n\nThought?\n",
        "createdAt" : "2016-02-03T18:23:39Z",
        "updatedAt" : "2016-02-09T01:07:22Z",
        "lastEditedBy" : "a7f673a6-4b23-4df6-aa10-f123fa9dcd5f",
        "tags" : [
        ]
      },
      {
        "id" : "34db7794-e9cb-4041-9e03-3a324369158d",
        "parentId" : "96223ee1-7ec4-41d1-b063-66775c36cc31",
        "authorId" : "727fc82d-d969-41a4-a614-7fefce94f9a6",
        "body" : "@saad-ali Provisioning Azure is not as straightforward as the other 3.   The ones we have now have a cloud provider and an API and they all work the same way.  Azure requires different authn/authz, needs user secrets, etc.\n\nI think designing and implementing all that is out of scope for 1.2.  We'll need to design the next version of provisioning with this stuff in mind.\n",
        "createdAt" : "2016-02-03T18:49:44Z",
        "updatedAt" : "2016-02-09T01:07:22Z",
        "lastEditedBy" : "727fc82d-d969-41a4-a614-7fefce94f9a6",
        "tags" : [
        ]
      },
      {
        "id" : "2704aca8-8887-4ef1-a583-f80a1371c1c6",
        "parentId" : "96223ee1-7ec4-41d1-b063-66775c36cc31",
        "authorId" : "8e448017-7838-493d-a424-33cada0da657",
        "body" : "Ok, let's leave dynamic provisioning out of this then.\n",
        "createdAt" : "2016-02-03T21:03:51Z",
        "updatedAt" : "2016-02-09T01:07:22Z",
        "lastEditedBy" : "8e448017-7838-493d-a424-33cada0da657",
        "tags" : [
        ]
      },
      {
        "id" : "44861ba0-628d-4503-9b1d-7d6a8e5d2904",
        "parentId" : "96223ee1-7ec4-41d1-b063-66775c36cc31",
        "authorId" : "a7f673a6-4b23-4df6-aa10-f123fa9dcd5f",
        "body" : "cool, @saad-ali. Any more comments? I'll fix and rebase again.\n",
        "createdAt" : "2016-02-03T21:40:37Z",
        "updatedAt" : "2016-02-09T01:07:22Z",
        "lastEditedBy" : "a7f673a6-4b23-4df6-aa10-f123fa9dcd5f",
        "tags" : [
        ]
      }
    ],
    "commit" : "d7e4b826b91111445bd2de0f71c39d35baa60a06",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +16,20 @@\npackage azure_file\n\nimport (\n\t\"fmt\""
  }
]