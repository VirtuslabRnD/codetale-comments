[
  {
    "id" : "c7096d5c-ffe8-4130-b5c9-c07672563b24",
    "prId" : 51530,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/51530#pullrequestreview-76220306",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "695c2ffe-2ee4-4e53-aab2-ab23c71deec7",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "let's change this logic as little as possible, and do any unrelated optimizations as a followup\r\n\r\n```\r\n// Obtain secret for AttachDisk\r\nif pod != nil {\r\n\tsecretName, secretNamespace, err := getISCSISecretNameAndNamespace(spec, pod.Namespace)\r\n\tif err != nil {\r\n\t\treturn nil, err\r\n\t}\r\n\tif len(secretNamespace) > 0 && len(secretName) > 0 {\r\n\t\tkubeClient := host.GetKubeClient()\r\n\t\tif kubeClient == nil {\r\n\t\t\treturn nil, fmt.Errorf(\"cannot get kube client\")\r\n\t\t}\r\n\t\tsecretObj, err := kubeClient.Core().Secrets(secretNamespace).Get(secretName, metav1.GetOptions{})\r\n\t\tif err != nil {\r\n\t\t\treturn nil, fmt.Errorf(\"couldn't get secret %v/%v: %v\", secretNamespace, secretName, err)\r\n\t\t}\r\n\t\tsecret = map[string]string{}\r\n\t\tfor name, data := range secretObj.Data {\r\n\t\t\tsecret[name] = string(data)\r\n\t\t}\r\n\t}\r\n}\r\n```\r\n",
        "createdAt" : "2017-10-17T16:23:07Z",
        "updatedAt" : "2017-11-18T20:05:48Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "c2ea414d-9567-4f29-864b-b15c726baf16",
        "parentId" : "695c2ffe-2ee4-4e53-aab2-ab23c71deec7",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "still outstanding... we weren't failing if chapDiscover or chapSession were set and there was no secretref before",
        "createdAt" : "2017-10-23T05:31:32Z",
        "updatedAt" : "2017-11-18T20:05:48Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "408dda63-8a32-47ad-be03-003cd7454751",
        "parentId" : "695c2ffe-2ee4-4e53-aab2-ab23c71deec7",
        "authorId" : "a7f673a6-4b23-4df6-aa10-f123fa9dcd5f",
        "body" : "the secret is only meaningful if CHAP is enabled either for discovery or session or both. If none of these has enabled CHAP, we shouldn't fail if there is an invalid secret. \r\n\r\nAdmittedly, in validation, the check only tests the case where CHAP is enabled but secret is missing. ",
        "createdAt" : "2017-11-13T19:27:16Z",
        "updatedAt" : "2017-11-18T20:05:49Z",
        "lastEditedBy" : "a7f673a6-4b23-4df6-aa10-f123fa9dcd5f",
        "tags" : [
        ]
      }
    ],
    "commit" : "56ec6e10287c19c1a5fac574659b2809a61c734b",
    "line" : 39,
    "diffHunk" : "@@ -1,1 +165,169 @@\t\treturn nil, err\n\t}\n\tif pod != nil {\n\t\tchapDiscovery, err := getISCSIDiscoveryCHAPInfo(spec)\n\t\tif err != nil {"
  },
  {
    "id" : "76837ae9-c054-4d5b-8ea1-86154697471b",
    "prId" : 50334,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/50334#pullrequestreview-58144307",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "da17ad04-742c-4b30-a97e-778cfb6db419",
        "parentId" : null,
        "authorId" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "body" : "all checks return true?",
        "createdAt" : "2017-08-23T16:28:26Z",
        "updatedAt" : "2017-08-26T21:25:45Z",
        "lastEditedBy" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "tags" : [
        ]
      },
      {
        "id" : "690891f0-1b01-462d-876a-31ea17d5f5b4",
        "parentId" : "da17ad04-742c-4b30-a97e-778cfb6db419",
        "authorId" : "967a712d-9784-41d4-920d-42eaba99fb24",
        "body" : "@jingxu97 \r\nSince iSCSI plugin doesn't have a way to confirm whether the volume is attached or not from outside of the kubelet node, we think this method needs to return true always. This is similar to the FC plugin attacher/detacher implementation.",
        "createdAt" : "2017-08-23T16:50:13Z",
        "updatedAt" : "2017-08-26T21:25:45Z",
        "lastEditedBy" : "967a712d-9784-41d4-920d-42eaba99fb24",
        "tags" : [
        ]
      }
    ],
    "commit" : "e21b68b4caa2881d0021549a4196ed266f9da7dc",
    "line" : 61,
    "diffHunk" : "@@ -1,1 +59,63 @@\tvolumesAttachedCheck := make(map[*volume.Spec]bool)\n\tfor _, spec := range specs {\n\t\tvolumesAttachedCheck[spec] = true\n\t}\n"
  }
]