[
  {
    "id" : "ad25e0db-fd13-4b96-909d-f7942718657f",
    "prId" : 48789,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/48789#pullrequestreview-55546997",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8af1056c-5404-4673-ab00-c2f20d297e14",
        "parentId" : null,
        "authorId" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "body" : "`initiatorName` must start with lowercase",
        "createdAt" : "2017-07-12T07:31:58Z",
        "updatedAt" : "2017-08-21T16:37:43Z",
        "lastEditedBy" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "tags" : [
        ]
      },
      {
        "id" : "fb5e3ff2-08fd-4b7c-a7f4-5dd594d14a36",
        "parentId" : "8af1056c-5404-4673-ab00-c2f20d297e14",
        "authorId" : "967a712d-9784-41d4-920d-42eaba99fb24",
        "body" : "Understand.\r\nSince I didn't use InitiatorName in DetachDisk(), initiatorName should start with lowercase.",
        "createdAt" : "2017-07-12T15:07:40Z",
        "updatedAt" : "2017-08-21T16:37:43Z",
        "lastEditedBy" : "967a712d-9784-41d4-920d-42eaba99fb24",
        "tags" : [
        ]
      },
      {
        "id" : "a419dd15-cd75-4f06-94e9-d6d4e64adbf5",
        "parentId" : "8af1056c-5404-4673-ab00-c2f20d297e14",
        "authorId" : "967a712d-9784-41d4-920d-42eaba99fb24",
        "body" : "done",
        "createdAt" : "2017-07-12T20:10:10Z",
        "updatedAt" : "2017-08-21T16:37:43Z",
        "lastEditedBy" : "967a712d-9784-41d4-920d-42eaba99fb24",
        "tags" : [
        ]
      },
      {
        "id" : "164faf54-e6be-41cd-9e95-0572c81403ec",
        "parentId" : "8af1056c-5404-4673-ab00-c2f20d297e14",
        "authorId" : "967a712d-9784-41d4-920d-42eaba99fb24",
        "body" : "Comment from @rootfs, I've added initiatorname check before deleting iface in DetachDisk().\r\nTherefore, this should start with uppercase(\"InitiatorName\") to store the value into jsonfile.",
        "createdAt" : "2017-07-12T21:31:02Z",
        "updatedAt" : "2017-08-21T16:37:43Z",
        "lastEditedBy" : "967a712d-9784-41d4-920d-42eaba99fb24",
        "tags" : [
        ]
      },
      {
        "id" : "7e04bce9-52e5-4322-b7f1-f775e000f039",
        "parentId" : "8af1056c-5404-4673-ab00-c2f20d297e14",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "where is this struct getting marshaled to json?",
        "createdAt" : "2017-08-10T13:59:57Z",
        "updatedAt" : "2017-08-21T16:37:43Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "78f178d0-ea9f-43e1-945f-ab6635ca9fef",
        "parentId" : "8af1056c-5404-4673-ab00-c2f20d297e14",
        "authorId" : "967a712d-9784-41d4-920d-42eaba99fb24",
        "body" : "@liggitt \r\nThe persistISCSI() save iscsiDisk struct to json file and the loadISCSI() get iscsiDisk struct from json file.\r\n\r\n- persistISCSI()\r\nhttps://github.com/mtanino/kubernetes/blob/e4ff66081037bb970e087722d6cba609ee4b2efb/pkg/volume/iscsi/iscsi_util.go#L164\r\n\r\n- loadISCSI()\r\nhttps://github.com/mtanino/kubernetes/blob/e4ff66081037bb970e087722d6cba609ee4b2efb/pkg/volume/iscsi/iscsi_util.go#L178\r\n\r\nIs this answer for the question?",
        "createdAt" : "2017-08-10T14:31:41Z",
        "updatedAt" : "2017-08-21T16:37:43Z",
        "lastEditedBy" : "967a712d-9784-41d4-920d-42eaba99fb24",
        "tags" : [
        ]
      }
    ],
    "commit" : "b0d4664a27781d73180cd2f63b2b516a8a0e2558",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +205,209 @@\tchap_session   bool\n\tsecret         map[string]string\n\tInitiatorName  string\n\tplugin         *iscsiPlugin\n\t// Utility interface that provides API calls to the provider to attach/detach disks."
  },
  {
    "id" : "6c0a4943-0aaa-447a-b58c-dfeb387f0e3b",
    "prId" : 43396,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/43396#pullrequestreview-29251720",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "002c07e9-4349-40d4-b34c-d13c2acf1690",
        "parentId" : null,
        "authorId" : "3eb39df2-c27a-40ed-9fab-cabae1c6353d",
        "body" : "@rootfs checking secret in pod's namespace is good enough ? or do we need to have an option for specifying a 'namespace' for this secret?",
        "createdAt" : "2017-03-24T06:51:38Z",
        "updatedAt" : "2017-04-07T16:38:36Z",
        "lastEditedBy" : "3eb39df2-c27a-40ed-9fab-cabae1c6353d",
        "tags" : [
        ]
      },
      {
        "id" : "7c147573-4217-4a72-a59d-8d6858e4b845",
        "parentId" : "002c07e9-4349-40d4-b34c-d13c2acf1690",
        "authorId" : "a7f673a6-4b23-4df6-aa10-f123fa9dcd5f",
        "body" : "This uses pod's namespace. Referencing across namespaces is not guaranteed to succeed.",
        "createdAt" : "2017-03-27T17:41:37Z",
        "updatedAt" : "2017-04-07T16:38:36Z",
        "lastEditedBy" : "a7f673a6-4b23-4df6-aa10-f123fa9dcd5f",
        "tags" : [
        ]
      }
    ],
    "commit" : "8eb6d6cfa7a74f27b5bf209fc82d2990e23eb707",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +109,113 @@\t\tif secret, err = ioutil.GetSecretForPod(pod, source.SecretRef.Name, plugin.host.GetKubeClient()); err != nil {\n\t\t\tglog.Errorf(\"Couldn't get secret from %v/%v\", pod.Namespace, source.SecretRef)\n\t\t\treturn nil, err\n\t\t}\n\t}"
  },
  {
    "id" : "69b801e5-652b-4abc-854b-38ae46e15f86",
    "prId" : 27970,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3d838ad7-6681-434a-b4c6-f98081f3e600",
        "parentId" : null,
        "authorId" : "8e448017-7838-493d-a424-33cada0da657",
        "body" : "Ditto\n",
        "createdAt" : "2016-08-06T03:56:17Z",
        "updatedAt" : "2016-08-15T18:29:44Z",
        "lastEditedBy" : "8e448017-7838-493d-a424-33cada0da657",
        "tags" : [
        ]
      }
    ],
    "commit" : "f19a1148db1b7584be6b6b60abaf8c0bd1503ed3",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +153,157 @@\t\t\tISCSI: &api.ISCSIVolumeSource{\n\t\t\t\tTargetPortal: volumeName,\n\t\t\t\tIQN:          volumeName,\n\t\t\t},\n\t\t},"
  },
  {
    "id" : "c7d5dfb4-38af-41b0-89c9-3012602b9cc8",
    "prId" : 16942,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2b62b50c-81f6-4ee7-843c-8e89843bc3c6",
        "parentId" : null,
        "authorId" : "727fc82d-d969-41a4-a614-7fefce94f9a6",
        "body" : "I know I've seen `exec.New()` elsewhere in the code, so a future PR, perhaps, but it's probably better for plugins to obtain an exec interface from the plugin host.\n",
        "createdAt" : "2015-11-12T17:49:12Z",
        "updatedAt" : "2015-12-02T16:16:11Z",
        "lastEditedBy" : "727fc82d-d969-41a4-a614-7fefce94f9a6",
        "tags" : [
        ]
      },
      {
        "id" : "b9befd84-0a38-4403-bf72-c082aaafcac9",
        "parentId" : "2b62b50c-81f6-4ee7-843c-8e89843bc3c6",
        "authorId" : null,
        "body" : "@markturansky Yeah.. this actually will need to be mocked when adding fsck in #14200 so I'll make it an argument to the `newBuilderInternal` and perhaps use the plugin's interface in `NewBuilder`.\n",
        "createdAt" : "2015-11-12T18:42:16Z",
        "updatedAt" : "2015-12-02T16:16:11Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      }
    ],
    "commit" : "66c905d63e146f9478e678fbc8fabc017b6c8bd0",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +109,113 @@\t\tfsType:   iscsi.FSType,\n\t\treadOnly: readOnly,\n\t\tmounter:  &mount.SafeFormatAndMount{mounter, exec.New()},\n\t}, nil\n}"
  },
  {
    "id" : "892bf735-6613-4687-b879-1026ac42c886",
    "prId" : 6809,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "69dd89ca-65cc-4365-9ae9-8f54ce9e1bb3",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "no PVS for iSCSI?\n",
        "createdAt" : "2015-04-14T17:02:16Z",
        "updatedAt" : "2015-04-14T18:25:15Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "3d76dac5-4b5b-4138-8d4c-c4bd47030777",
        "parentId" : "69dd89ca-65cc-4365-9ae9-8f54ce9e1bb3",
        "authorId" : "727fc82d-d969-41a4-a614-7fefce94f9a6",
        "body" : "It is not in the PersistentVolumeSource struct.  I figured adding it would be a different PR, as you've suggested in other PRs in the recent past (the NFS pointer made its way into one).\n",
        "createdAt" : "2015-04-14T17:10:49Z",
        "updatedAt" : "2015-04-14T18:25:15Z",
        "lastEditedBy" : "727fc82d-d969-41a4-a614-7fefce94f9a6",
        "tags" : [
        ]
      },
      {
        "id" : "7b633171-cc06-44e9-8e0f-ce65d9b61a43",
        "parentId" : "69dd89ca-65cc-4365-9ae9-8f54ce9e1bb3",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "Sure, I just thought that had been done.  NP\n",
        "createdAt" : "2015-04-14T17:20:06Z",
        "updatedAt" : "2015-04-14T18:25:15Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "e1481fb9c2c255ee0f3d5dd407f57740308194ee",
    "line" : null,
    "diffHunk" : "@@ -1,1 +54,58 @@\nfunc (plugin *ISCSIPlugin) CanSupport(spec *volume.Spec) bool {\n\tif spec.VolumeSource.ISCSI == nil {\n\t\treturn false\n\t}"
  },
  {
    "id" : "bc7b4ce4-ed1c-49c4-a528-ed775a49e8a5",
    "prId" : 5506,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5dd9d0d0-c21d-4485-ad4f-dda51bea4c4d",
        "parentId" : null,
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "Why fork exec instead of using syscall.Mount() ?\n",
        "createdAt" : "2015-04-02T23:22:47Z",
        "updatedAt" : "2015-04-06T20:20:31Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      },
      {
        "id" : "3afbe248-b0a1-424c-9691-250bbd19c880",
        "parentId" : "5dd9d0d0-c21d-4485-ad4f-dda51bea4c4d",
        "authorId" : "766f642e-1622-4803-803b-05ce306fc30e",
        "body" : "Why is the generic code using syscall.Mount() instead of doing it like this?  It means that the generic mounter function can never work for things like NFSv3 (binary mount options), gluster, ceph, (fuse), cifs (client server) etc.\n\nmount(8) exists as a helper which does a lot more than just call mount(2)....\n",
        "createdAt" : "2015-04-06T14:30:09Z",
        "updatedAt" : "2015-04-06T20:20:31Z",
        "lastEditedBy" : "766f642e-1622-4803-803b-05ce306fc30e",
        "tags" : [
        ]
      },
      {
        "id" : "d3ffd809-df30-4fac-b066-4b497d8b0fbe",
        "parentId" : "5dd9d0d0-c21d-4485-ad4f-dda51bea4c4d",
        "authorId" : "a7f673a6-4b23-4df6-aa10-f123fa9dcd5f",
        "body" : "@eparis nice summary\n@vishh syscall is the last one in the stack, direct calling syscall misses lots mount helper logic.\n",
        "createdAt" : "2015-04-06T14:37:44Z",
        "updatedAt" : "2015-04-06T20:20:31Z",
        "lastEditedBy" : "a7f673a6-4b23-4df6-aa10-f123fa9dcd5f",
        "tags" : [
        ]
      },
      {
        "id" : "112bdd5c-0f18-403d-b978-8e57f678b17a",
        "parentId" : "5dd9d0d0-c21d-4485-ad4f-dda51bea4c4d",
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "Ack\n",
        "createdAt" : "2015-04-06T18:06:39Z",
        "updatedAt" : "2015-04-06T20:20:31Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      }
    ],
    "commit" : "7a82af31de839f70b3e50e71cb52a587e0091b82",
    "line" : 150,
    "diffHunk" : "@@ -1,1 +148,152 @@\t\tmode = \"ro\"\n\t}\n\tiscsi.plugin.execCommand(\"mount\", []string{\"-o\", \"remount,\" + mode, globalPDPath, dir})\n\n\treturn nil"
  }
]