[
  {
    "id" : "7ee3bef4-5cd8-43b7-b802-0140f881b964",
    "prId" : 84747,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/84747#pullrequestreview-317030439",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "08cf3000-a5c9-407d-8b3d-5b96e8e161f5",
        "parentId" : null,
        "authorId" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "body" : "The comment says `SetUpDevice`, while the function is `MapPodDevice`",
        "createdAt" : "2019-11-14T11:31:35Z",
        "updatedAt" : "2019-11-14T22:05:41Z",
        "lastEditedBy" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "tags" : [
        ]
      },
      {
        "id" : "af6720dc-97e0-4307-b65a-6644bdbf52fa",
        "parentId" : "08cf3000-a5c9-407d-8b3d-5b96e8e161f5",
        "authorId" : "9ce7bd1a-5286-4173-88a4-039146bf0d46",
        "body" : "Fixed.",
        "createdAt" : "2019-11-14T15:14:18Z",
        "updatedAt" : "2019-11-14T22:05:41Z",
        "lastEditedBy" : "9ce7bd1a-5286-4173-88a4-039146bf0d46",
        "tags" : [
        ]
      }
    ],
    "commit" : "a275026ad4a30e36aae76d699c747b048cb67c5b",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +621,625 @@\n// MapPodDevice provides physical device path for the local PV.\nfunc (m *localVolumeMapper) MapPodDevice() (string, error) {\n\tglobalPath := util.MakeAbsolutePath(runtime.GOOS, m.globalPath)\n\tklog.V(4).Infof(\"MapPodDevice returning path %s\", globalPath)"
  },
  {
    "id" : "d67747c0-1780-4e5f-9fc3-a09ba51e2180",
    "prId" : 84218,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/84218#pullrequestreview-309863708",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3ba52c28-3359-45ca-8b33-fd8066f4455f",
        "parentId" : null,
        "authorId" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "body" : "Can you please log the reconstructed device, just in case? Level 4 should be ok, I only want to make sure we have all the information we need if something gets wrong.",
        "createdAt" : "2019-10-31T12:53:14Z",
        "updatedAt" : "2019-10-31T13:09:23Z",
        "lastEditedBy" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "tags" : [
        ]
      },
      {
        "id" : "f590faaf-750b-4730-836a-99dc8d1f08f0",
        "parentId" : "3ba52c28-3359-45ca-8b33-fd8066f4455f",
        "authorId" : "e4e7c71f-23b5-4203-b65d-3f5f3c503b64",
        "body" : "done",
        "createdAt" : "2019-10-31T13:09:52Z",
        "updatedAt" : "2019-10-31T13:09:52Z",
        "lastEditedBy" : "e4e7c71f-23b5-4203-b65d-3f5f3c503b64",
        "tags" : [
        ]
      }
    ],
    "commit" : "0fd4cbcac445314956f9040a2b8c2500224a1dba",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +212,216 @@\t\t\t// local PV object if symbolic link is used. However, it's the true\n\t\t\t// source and can be used in reconstructed volume.\n\t\t\tpath, _, err = mount.GetDeviceNameFromMount(mounter, ref)\n\t\t\tif err != nil {\n\t\t\t\treturn nil, err"
  },
  {
    "id" : "70bad070-1566-4039-9324-8e8b9c4b70ec",
    "prId" : 84173,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/84173#pullrequestreview-306259278",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d9c7ec0e-c1cb-48f9-81ec-6db65e930a3d",
        "parentId" : null,
        "authorId" : "e4e7c71f-23b5-4203-b65d-3f5f3c503b64",
        "body" : "- if the reconstructed volume should not be unmapped because the pod is not deleted, the true source of the path from the kube-apiserver can be used\r\n- if the reconstructed volume is needed to clean, this is not required because we don't need to detach local device from the host. all we need to clean is `GlobalMapPath` and `PodDeviceMapPath` which are determined by volume name and the pod UID.",
        "createdAt" : "2019-10-22T06:02:54Z",
        "updatedAt" : "2019-10-23T11:32:26Z",
        "lastEditedBy" : "e4e7c71f-23b5-4203-b65d-3f5f3c503b64",
        "tags" : [
        ]
      },
      {
        "id" : "4a5efe84-66d9-4e16-927b-f3ee0595ece5",
        "parentId" : "d9c7ec0e-c1cb-48f9-81ec-6db65e930a3d",
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "So we are not fixing fs on block reconstruction case?",
        "createdAt" : "2019-10-23T23:20:59Z",
        "updatedAt" : "2019-10-23T23:21:04Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "a67f4842-f83d-4449-a48e-b440bc474878",
        "parentId" : "d9c7ec0e-c1cb-48f9-81ec-6db65e930a3d",
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "ah saw your initial comment. nm",
        "createdAt" : "2019-10-23T23:21:46Z",
        "updatedAt" : "2019-10-23T23:21:47Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "68d656f2-7af5-4c85-9c07-6e0785055f19",
        "parentId" : "d9c7ec0e-c1cb-48f9-81ec-6db65e930a3d",
        "authorId" : "e4e7c71f-23b5-4203-b65d-3f5f3c503b64",
        "body" : "#84218 for block fs reconstruction",
        "createdAt" : "2019-10-24T00:12:51Z",
        "updatedAt" : "2019-10-24T01:21:03Z",
        "lastEditedBy" : "e4e7c71f-23b5-4203-b65d-3f5f3c503b64",
        "tags" : [
        ]
      }
    ],
    "commit" : "46b1e264dcef1f0583233abc5891efe7d1faa6ad",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +219,223 @@\t\t\tPersistentVolumeSource: v1.PersistentVolumeSource{\n\t\t\t\tLocal: &v1.LocalVolumeSource{\n\t\t\t\t\t// Not needed because we don't need to detach local device from the host.\n\t\t\t\t\tPath: \"\",\n\t\t\t\t},"
  },
  {
    "id" : "25c9d551-dbfd-47d7-a105-40ee8474a347",
    "prId" : 68320,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/68320#pullrequestreview-153181876",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9d57e2a4-0b82-441e-8968-342d6b605b33",
        "parentId" : null,
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "can this call `GetPath` instead?",
        "createdAt" : "2018-09-06T16:52:33Z",
        "updatedAt" : "2018-09-06T16:52:33Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "731b9f06-f88b-4766-9f3a-655e7e76cf0e",
        "parentId" : "9d57e2a4-0b82-441e-8968-342d6b605b33",
        "authorId" : "cf088828-7f69-4b6e-8956-1842c94daa02",
        "body" : "`GetPath` is the function called by `localVolume` struct instance, and here, it is the place to construct the `localVolume` struct, so maybe not",
        "createdAt" : "2018-09-07T01:45:05Z",
        "updatedAt" : "2018-09-07T01:46:29Z",
        "lastEditedBy" : "cf088828-7f69-4b6e-8956-1842c94daa02",
        "tags" : [
        ]
      },
      {
        "id" : "280f9f03-1ca2-499c-a7eb-2d143985ae41",
        "parentId" : "9d57e2a4-0b82-441e-8968-342d6b605b33",
        "authorId" : "cf088828-7f69-4b6e-8956-1842c94daa02",
        "body" : "We can create a private function to generate the path which can be called both in `GetPath` and here like other plugins do, but seems not that necessary",
        "createdAt" : "2018-09-07T01:51:16Z",
        "updatedAt" : "2018-09-07T01:51:58Z",
        "lastEditedBy" : "cf088828-7f69-4b6e-8956-1842c94daa02",
        "tags" : [
        ]
      },
      {
        "id" : "90ff3612-9a54-4199-8b82-97062d296550",
        "parentId" : "9d57e2a4-0b82-441e-8968-342d6b605b33",
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "this is fine then. we just have to make sure if this ever changes in the future we update both places",
        "createdAt" : "2018-09-07T01:53:16Z",
        "updatedAt" : "2018-09-07T01:53:17Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "3aeb5627-75d8-4d41-88f4-5825e86c6c46",
        "parentId" : "9d57e2a4-0b82-441e-8968-342d6b605b33",
        "authorId" : "cf088828-7f69-4b6e-8956-1842c94daa02",
        "body" : "yes, i can send a separate PR for all plugins to maintain the consistent behavior after this release period.",
        "createdAt" : "2018-09-07T02:05:24Z",
        "updatedAt" : "2018-09-07T02:05:24Z",
        "lastEditedBy" : "cf088828-7f69-4b6e-8956-1842c94daa02",
        "tags" : [
        ]
      }
    ],
    "commit" : "e03635e02c13e6aae3aeb489a3bbeddba3fee0f4",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +129,133 @@\t\t\tplugin:          plugin,\n\t\t\tglobalPath:      globalLocalPath,\n\t\t\tMetricsProvider: volume.NewMetricsStatFS(plugin.host.GetPodVolumeDir(pod.UID, stringsutil.EscapeQualifiedNameForDisk(localVolumePluginName), spec.Name())),\n\t\t},\n\t\treadOnly: readOnly,"
  },
  {
    "id" : "cc566ae6-e4f8-4e4f-ac12-9460268dc0a8",
    "prId" : 65310,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/65310#pullrequestreview-133165470",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1627a692-1f24-407f-8e46-7c3dc9e6f2aa",
        "parentId" : null,
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "I think CSI volume driver also has the same issue.  Could you update the csi plugin too?\r\n\r\n@saad-ali this is another instance of https://github.com/kubernetes/kubernetes/issues/52820",
        "createdAt" : "2018-06-25T16:36:03Z",
        "updatedAt" : "2018-06-29T09:44:03Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "05da929c-ff3e-4737-a366-23707cd64712",
        "parentId" : "1627a692-1f24-407f-8e46-7c3dc9e6f2aa",
        "authorId" : "0dc4901f-ee41-4b0e-85e8-9f5ec36ce184",
        "body" : "@msau42 Thanks for review this.\r\nCSI plugin also updated: https://github.com/kubernetes/kubernetes/pull/65456\r\n",
        "createdAt" : "2018-06-26T00:25:48Z",
        "updatedAt" : "2018-06-29T09:44:03Z",
        "lastEditedBy" : "0dc4901f-ee41-4b0e-85e8-9f5ec36ce184",
        "tags" : [
        ]
      },
      {
        "id" : "386736a0-965e-40de-b1a5-e8291cc113ee",
        "parentId" : "1627a692-1f24-407f-8e46-7c3dc9e6f2aa",
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "Can you also add a unit test for this?",
        "createdAt" : "2018-06-26T00:29:56Z",
        "updatedAt" : "2018-06-29T09:44:03Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "d4175046-9032-4eab-af8e-9d15a4311562",
        "parentId" : "1627a692-1f24-407f-8e46-7c3dc9e6f2aa",
        "authorId" : "0dc4901f-ee41-4b0e-85e8-9f5ec36ce184",
        "body" : "@msau42 unit test added.",
        "createdAt" : "2018-06-29T09:51:12Z",
        "updatedAt" : "2018-06-29T09:51:13Z",
        "lastEditedBy" : "0dc4901f-ee41-4b0e-85e8-9f5ec36ce184",
        "tags" : [
        ]
      }
    ],
    "commit" : "23722fbdfa910ab664d5750b0a534592f95c5dbf",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +170,174 @@// TODO: check if no path and no topology constraints are ok\nfunc (plugin *localVolumePlugin) ConstructVolumeSpec(volumeName, mountPath string) (*volume.Spec, error) {\n\tfs := v1.PersistentVolumeFilesystem\n\tlocalVolume := &v1.PersistentVolume{\n\t\tObjectMeta: metav1.ObjectMeta{"
  },
  {
    "id" : "19e23cac-4416-49b1-95a1-9cb7e1cbf801",
    "prId" : 63011,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/63011#pullrequestreview-149024594",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a3db7b54-0078-4fca-ad9b-74e0b4dad533",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "Why do we need to make this assumption?  In general Linux can auto-detect filesystems, right?  why not make the default be best-effort auto-detect, and try to avoid encouraging people to make assumptions.\r\n\r\nThis sort of stuff is also hard to ferret out as Windows support becomes more of a Real Thing (@kubernetes/sig-windows-misc )\r\n\r\n```\r\n# cd /tmp\r\n\r\n# dd if=/dev/zero of=loopfile bs=$((1024*1024)) count=64\r\n64+0 records in\r\n64+0 records out\r\n67108864 bytes (67 MB, 64 MiB) copied, 0.0661057 s, 1.0 GB/s\r\n\r\n# mkfs.xfs ./loopfile \r\nmeta-data=./loopfile             isize=512    agcount=4, agsize=4096 blks\r\n         =                       sectsz=512   attr=2, projid32bit=1\r\n         =                       crc=1        finobt=1, sparse=0, rmapbt=0, reflink=0\r\ndata     =                       bsize=4096   blocks=16384, imaxpct=25\r\n         =                       sunit=0      swidth=0 blks\r\nnaming   =version 2              bsize=4096   ascii-ci=0 ftype=1\r\nlog      =internal log           bsize=4096   blocks=855, version=2\r\n         =                       sectsz=512   sunit=0 blks, lazy-count=1\r\nrealtime =none                   extsz=4096   blocks=0, rtextents=0\r\n\r\n# mkdir mnt\r\n\r\n# mount -oloop ./loopfile ./mnt\r\n\r\n# mount | grep loopfile\r\n/tmp/loopfile on /tmp/mnt type xfs (rw,relatime,attr2,inode64,noquota)\r\n\r\n# umount ./mnt\r\n```",
        "createdAt" : "2018-08-23T17:43:12Z",
        "updatedAt" : "2018-09-03T05:37:08Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "8fbcd1dd-23b0-4d97-b005-76a3f6935635",
        "parentId" : "a3db7b54-0078-4fca-ad9b-74e0b4dad533",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "For the case of format-on-demand, (assuming that's what really drives this) perhaps it should be \"whatever the node in question thinks is best\"?  Can we make that something the host defines?  I feel like we've had this conversation before and I lost it then, but I forget why, so I'll happily take another tilt at it..",
        "createdAt" : "2018-08-23T17:45:17Z",
        "updatedAt" : "2018-09-03T05:37:08Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "0a3504eb-7277-4cac-8e81-c9cc7ce6c859",
        "parentId" : "a3db7b54-0078-4fca-ad9b-74e0b4dad533",
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "The primary purpose of this field is for the format-on-demand case, not really for identifying the filesystem type on existing volumes.\r\n\r\nWe could remove the fstype field and just format it with \"whatever the host wants\", but how can we support situations where the user wants something different?",
        "createdAt" : "2018-08-23T17:49:03Z",
        "updatedAt" : "2018-09-03T05:37:08Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      }
    ],
    "commit" : "5bc823f141efde1e086f6696c26a197b78f9cf52",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +40,44 @@\nconst (\n\tdefaultFSType = \"ext4\"\n)\n"
  },
  {
    "id" : "c84be253-013b-4e53-8fa3-25fd5cc96aee",
    "prId" : 62018,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/62018#pullrequestreview-110063380",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8c3859f6-39cd-4e7c-b186-113a164bf1d8",
        "parentId" : null,
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "`SetUpDevice()` also needs to be updated",
        "createdAt" : "2018-04-04T16:11:34Z",
        "updatedAt" : "2018-04-08T03:06:21Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "b7891772-5a48-4fc4-b836-690cb4c5bed5",
        "parentId" : "8c3859f6-39cd-4e7c-b186-113a164bf1d8",
        "authorId" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "body" : "fixed",
        "createdAt" : "2018-04-06T13:31:38Z",
        "updatedAt" : "2018-04-08T03:06:21Z",
        "lastEditedBy" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "tags" : [
        ]
      }
    ],
    "commit" : "f06c01fc83b818c90b8192ec61e7e8cd98818b07",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +312,316 @@\n\tglog.V(4).Infof(\"attempting to mount %s\", dir)\n\tglobalPath := util.MakeAbsolutePath(runtime.GOOS, m.globalPath)\n\terr = m.mounter.Mount(globalPath, dir, \"\", options)\n\tif err != nil {"
  },
  {
    "id" : "9dfa64a8-cbbd-4069-8363-3ccb903fc050",
    "prId" : 59303,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/59303#pullrequestreview-94113464",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "27bd6a0f-bf4f-4b8b-8b11-fc2ef7f78406",
        "parentId" : null,
        "authorId" : "967a712d-9784-41d4-920d-42eaba99fb24",
        "body" : "Seems both ConstructBlockVolumeSpec() and ConstructVolumeSpec() can't construct proper volume spec. Any reason for this?",
        "createdAt" : "2018-02-03T15:39:37Z",
        "updatedAt" : "2018-02-07T02:41:03Z",
        "lastEditedBy" : "967a712d-9784-41d4-920d-42eaba99fb24",
        "tags" : [
        ]
      },
      {
        "id" : "cd44afd0-00d7-451d-bb92-0cf72e6a787b",
        "parentId" : "27bd6a0f-bf4f-4b8b-8b11-fc2ef7f78406",
        "authorId" : "8993c575-dc8b-41bf-8c8f-877348058a9b",
        "body" : "Fixed ConstructBlockVolumeSpec() to specify the device path.  Regarding ConstructVolumeSpec(), @msau42 mentioned that it was not done because the device path was not needed.",
        "createdAt" : "2018-02-05T04:32:06Z",
        "updatedAt" : "2018-02-07T02:41:03Z",
        "lastEditedBy" : "8993c575-dc8b-41bf-8c8f-877348058a9b",
        "tags" : [
        ]
      },
      {
        "id" : "95a764b6-8ccf-445c-82e9-e2a3f366ab7e",
        "parentId" : "27bd6a0f-bf4f-4b8b-8b11-fc2ef7f78406",
        "authorId" : "967a712d-9784-41d4-920d-42eaba99fb24",
        "body" : "@dhirajh \r\n\r\n>>ConstructVolumeSpec(), @msau42 mentioned that it was not done because the device path was not needed.\r\n\r\nCould you let me know the detail? I couldn't find her comment.",
        "createdAt" : "2018-02-05T04:39:28Z",
        "updatedAt" : "2018-02-07T02:41:03Z",
        "lastEditedBy" : "967a712d-9784-41d4-920d-42eaba99fb24",
        "tags" : [
        ]
      },
      {
        "id" : "2f57f6bf-fcc3-491b-962e-b18312c3ef49",
        "parentId" : "27bd6a0f-bf4f-4b8b-8b11-fc2ef7f78406",
        "authorId" : "8993c575-dc8b-41bf-8c8f-877348058a9b",
        "body" : "It was from a chat, that I had a week back.   @msau42 please do correct me if I missed something. The path is not needed for unmounting.  The only thing the local volume plugin does is unmount the kubelet's pod volume bind mount. It leaves the real path unchanged.",
        "createdAt" : "2018-02-05T04:57:22Z",
        "updatedAt" : "2018-02-07T02:41:03Z",
        "lastEditedBy" : "8993c575-dc8b-41bf-8c8f-877348058a9b",
        "tags" : [
        ]
      },
      {
        "id" : "df105b0b-a528-4fe7-8e93-aa4e6cbca8d6",
        "parentId" : "27bd6a0f-bf4f-4b8b-8b11-fc2ef7f78406",
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "@mtanino local volumes are very simple and don't need the underlying path to do teardown.\r\n\r\nFor filesystem volumes: Setup will bind mount the path to the kubelet's volume directory.  Teardown only needs the kubelet's volume directory to unmount it.\r\n\r\nFor block volumes: I think it should be similar.  Setup returns the path.  Kubelet will create the appropriate mappings for it.  For teardown, the plugin doesn't need to do anything, just relies on kubelet to unmap everything.  Maybe one problem here is if the reconstruction also calls setup?  Then we do not have the underlying path to return.  We should probably fail or return an empty path.  Does the new reconstruction design that only does teardown help with this?\r\n\r\n\r\n",
        "createdAt" : "2018-02-05T18:52:54Z",
        "updatedAt" : "2018-02-07T02:41:03Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "c67b67a0-f022-45b7-8e0c-a707f70be1c2",
        "parentId" : "27bd6a0f-bf4f-4b8b-8b11-fc2ef7f78406",
        "authorId" : "967a712d-9784-41d4-920d-42eaba99fb24",
        "body" : "@msau42 \r\n\r\n>> local volumes are very simple and don't need the underlying path to do teardown.\r\n\r\nI see. So during reconstruction, local volume plugin doesn't need to return the `Path` into reconstruct volume spec for both `filesystem` and `block`, right?\r\n\r\n>>Maybe one problem here is if the reconstruction also calls setup? Then we do not have the >>underlying path to return. We should probably fail or return an empty path. Does the new\r\n>>reconstruction design that only does teardown help with this?\r\n\r\nIIUC, volume reconstruction doesn't call setUp(). It calls following methods during reconstruction.\r\n- plugin's constructVolumeSpec()\r\n- kubelet's GenerateUnmountVolumeFunc()\r\n- kubelet's GenerateUnmountDeviceFunc()\r\n   => plugin's TearDown()\r\n\r\n(*) block volume case is similar to above steps.\r\n\r\nIn the new reconstruction design, @jingxu97 is proposing two clean up methods based on reconstruction method support by plugin.\r\n1. reconciler updates volume information using reconstruction into the states and reconciler takes care of volume cleanup\r\n2. reconciler cleans up the mounts directly using tearDown() without reconstruction\r\n\r\nEither way, setUp() isn't called. Which way would you prefer for `local volume plugin`?\r\n",
        "createdAt" : "2018-02-05T19:17:30Z",
        "updatedAt" : "2018-02-07T02:41:03Z",
        "lastEditedBy" : "967a712d-9784-41d4-920d-42eaba99fb24",
        "tags" : [
        ]
      },
      {
        "id" : "64140cb2-3264-4f36-8bfd-2ed08874105b",
        "parentId" : "27bd6a0f-bf4f-4b8b-8b11-fc2ef7f78406",
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "Yeah so if only TearDown is called, then local volume is fine with a blank spec.  Only volume name needs to be correctly populated.  I would prefer having the cleanup down by reconciler so that it can retry if it fails the first time.",
        "createdAt" : "2018-02-05T19:22:50Z",
        "updatedAt" : "2018-02-07T02:41:03Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "8df946c2-b077-462d-af11-07d675ab772c",
        "parentId" : "27bd6a0f-bf4f-4b8b-8b11-fc2ef7f78406",
        "authorId" : "967a712d-9784-41d4-920d-42eaba99fb24",
        "body" : "yes, agree. Added comment on reconstruction design doc.",
        "createdAt" : "2018-02-05T19:30:42Z",
        "updatedAt" : "2018-02-07T02:41:03Z",
        "lastEditedBy" : "967a712d-9784-41d4-920d-42eaba99fb24",
        "tags" : [
        ]
      }
    ],
    "commit" : "f92e13f01eea357e154cb3639d546916858a3b9b",
    "line" : 68,
    "diffHunk" : "@@ -1,1 +198,202 @@\t\t\tPersistentVolumeSource: v1.PersistentVolumeSource{\n\t\t\t\tLocal: &v1.LocalVolumeSource{\n\t\t\t\t\tPath: \"\",\n\t\t\t\t},\n\t\t\t},"
  },
  {
    "id" : "3f6bf06a-55fb-41ed-89cb-a78d7d5bf573",
    "prId" : 49988,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/49988#pullrequestreview-58747581",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "238e91e0-cf4e-4330-86a2-9e54249f96bf",
        "parentId" : null,
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "Do you need to check if s is nil? In case the casting didn't work?",
        "createdAt" : "2017-08-07T22:27:35Z",
        "updatedAt" : "2017-08-24T21:34:22Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "4e698395-77bc-4d3d-a268-7c4a72ed9366",
        "parentId" : "238e91e0-cf4e-4330-86a2-9e54249f96bf",
        "authorId" : "a7f673a6-4b23-4df6-aa10-f123fa9dcd5f",
        "body" : "looks safe from [here](https://golang.org/src/os/stat_unix.go?s=746:786#L20)",
        "createdAt" : "2017-08-08T13:44:34Z",
        "updatedAt" : "2017-08-24T21:34:22Z",
        "lastEditedBy" : "a7f673a6-4b23-4df6-aa10-f123fa9dcd5f",
        "tags" : [
        ]
      },
      {
        "id" : "75decd78-35b2-4cd0-b8f9-f37538c78baa",
        "parentId" : "238e91e0-cf4e-4330-86a2-9e54249f96bf",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "only on some platforms... this whole method needs to be in a platform specific file",
        "createdAt" : "2017-08-25T19:48:08Z",
        "updatedAt" : "2017-08-25T19:50:46Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "1be99dd78e92b72e97c3dcd5568319cfc82b9674",
    "line" : 126,
    "diffHunk" : "@@ -1,1 +304,308 @@\t\treturn false, 0, err\n\t}\n\ts := info.Sys().(*syscall.Stat_t)\n\treturn int(s.Gid) == int(fsGroup), int(s.Gid), nil\n}"
  },
  {
    "id" : "bd966381-8f38-42b5-a0f6-c9fc9a2e8749",
    "prId" : 48402,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/48402#pullrequestreview-48062393",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0fbfde0b-6da8-4c2c-8574-e8b937e3d2cd",
        "parentId" : null,
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "During mount we also call IsLikelyNotMountPoint.  Need to also evaluate if that call needs to be updated too.",
        "createdAt" : "2017-07-04T22:50:47Z",
        "updatedAt" : "2017-07-11T21:24:24Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "b0eeccd3-1018-490a-bd1f-bf880c4f748e",
        "parentId" : "0fbfde0b-6da8-4c2c-8574-e8b937e3d2cd",
        "authorId" : "9f5e3cfe-0c8a-43e2-8374-3cbe3b3568ab",
        "body" : "I modified all references of IsLikelyNotMountPoint to use IsNotMountPoint inside local.go.",
        "createdAt" : "2017-07-05T14:07:09Z",
        "updatedAt" : "2017-07-11T21:24:24Z",
        "lastEditedBy" : "9f5e3cfe-0c8a-43e2-8374-3cbe3b3568ab",
        "tags" : [
        ]
      }
    ],
    "commit" : "2b18d3b6f71a1786c68dee630b0452d20c71f844",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +270,274 @@func (u *localVolumeUnmounter) TearDownAt(dir string) error {\n\tglog.V(4).Infof(\"Unmounting volume %q at path %q\\n\", u.volName, dir)\n\treturn util.UnmountMountPoint(dir, u.mounter, true) /* extensiveMountPointCheck = true */\n}"
  },
  {
    "id" : "68bebff7-758d-48b5-a80f-f7cbd7f6dc66",
    "prId" : 47236,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/47236#pullrequestreview-44694545",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1c090dfb-d7d7-4165-a684-3e908e821b4f",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "should this be validating `m.globalPath` or `dir`?",
        "createdAt" : "2017-06-17T05:43:37Z",
        "updatedAt" : "2017-06-17T06:37:52Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "0da8ddce-07a1-4b13-9c15-c87b713f2bf9",
        "parentId" : "1c090dfb-d7d7-4165-a684-3e908e821b4f",
        "authorId" : "3c1422a0-6358-4857-8f56-961979171514",
        "body" : "validating `m.globalPath`. ",
        "createdAt" : "2017-06-17T06:38:53Z",
        "updatedAt" : "2017-06-17T06:38:53Z",
        "lastEditedBy" : "3c1422a0-6358-4857-8f56-961979171514",
        "tags" : [
        ]
      }
    ],
    "commit" : "aa23ed53c2f285b2f7c74e8344d29008580a9e86",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +194,198 @@\t}\n\n\terr := validation.ValidatePathNoBacksteps(m.globalPath)\n\tif err != nil {\n\t\treturn fmt.Errorf(\"invalid path: %s %v\", m.globalPath, err)"
  }
]