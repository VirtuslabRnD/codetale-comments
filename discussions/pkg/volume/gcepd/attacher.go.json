[
  {
    "id" : "9d2f4826-7120-40de-a619-1935ea259fb6",
    "prId" : 79897,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/79897#pullrequestreview-260334220",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4ef07467-096f-460b-8e15-2df9fbfaa144",
        "parentId" : null,
        "authorId" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "body" : "add some more contextual info here like \"while bulkverifyvolumes-ing\" or something. Also why is this error not bad enough that we would stop processing and instead ignore it",
        "createdAt" : "2019-07-09T22:29:23Z",
        "updatedAt" : "2019-07-19T17:41:59Z",
        "lastEditedBy" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "tags" : [
        ]
      },
      {
        "id" : "96e1cd0a-73cc-42c3-a0bc-1dd0c720c7c7",
        "parentId" : "4ef07467-096f-460b-8e15-2df9fbfaa144",
        "authorId" : "b0cf1b2c-d8eb-4f06-a458-6bb60906f8cf",
        "body" : "I guess with a big cluster, you can for some reason have a malformed volume spec but it shouldn't prevent all the other ok ones from being checked. I can see how that can be an issue though, since if an error is not returned the malformed spec is never dealt with, but I think that is better than not checking any at all.",
        "createdAt" : "2019-07-09T22:56:34Z",
        "updatedAt" : "2019-07-19T17:41:59Z",
        "lastEditedBy" : "b0cf1b2c-d8eb-4f06-a458-6bb60906f8cf",
        "tags" : [
        ]
      },
      {
        "id" : "83d95c3d-a640-4fe2-8e41-cfd01b9d059b",
        "parentId" : "4ef07467-096f-460b-8e15-2df9fbfaa144",
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "I'm unsure if this is a scenario that is possible for users to get into (and pass API validation).",
        "createdAt" : "2019-07-09T23:04:39Z",
        "updatedAt" : "2019-07-19T17:41:59Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "600fb20b-216c-4a20-a88d-148f9be03505",
        "parentId" : "4ef07467-096f-460b-8e15-2df9fbfaa144",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Yeah - I agree with Michelle. But also the error log seems reasonable independently from it.",
        "createdAt" : "2019-07-10T06:59:39Z",
        "updatedAt" : "2019-07-19T17:41:59Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "8317951a-93a5-4e69-a028-6e1479475287",
        "parentId" : "4ef07467-096f-460b-8e15-2df9fbfaa144",
        "authorId" : "b0cf1b2c-d8eb-4f06-a458-6bb60906f8cf",
        "body" : "Do you know who originally wrote this for VolumesAreAttached? Maybe they can have a better explanation for why the log is included or if there is a scenario we're not thinking of. ",
        "createdAt" : "2019-07-10T16:57:35Z",
        "updatedAt" : "2019-07-19T17:41:59Z",
        "lastEditedBy" : "b0cf1b2c-d8eb-4f06-a458-6bb60906f8cf",
        "tags" : [
        ]
      },
      {
        "id" : "27346460-3c8c-4ba2-bef5-81260df2514f",
        "parentId" : "4ef07467-096f-460b-8e15-2df9fbfaa144",
        "authorId" : "b0cf1b2c-d8eb-4f06-a458-6bb60906f8cf",
        "body" : "@jingxu97 ",
        "createdAt" : "2019-07-10T16:59:38Z",
        "updatedAt" : "2019-07-19T17:41:59Z",
        "lastEditedBy" : "b0cf1b2c-d8eb-4f06-a458-6bb60906f8cf",
        "tags" : [
        ]
      },
      {
        "id" : "28c50a52-d554-4b32-8279-4a85b222a905",
        "parentId" : "4ef07467-096f-460b-8e15-2df9fbfaa144",
        "authorId" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "body" : "The volume verification mechanism exists as a fail-safe to correct volumes that would have been incorrectly detached from nodes. So, it is *only* designed to cause attaches and never detaches. \r\n\r\nAnd since it verifies entire cluster it runs less frequently than other volume operations. So, if we come across a volume which we can't verify (like `getVolumeSource` failed!) then it is best to skip it rather than letting the whole operation fail. \r\n",
        "createdAt" : "2019-07-10T19:54:04Z",
        "updatedAt" : "2019-07-19T17:41:59Z",
        "lastEditedBy" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "tags" : [
        ]
      },
      {
        "id" : "e7ef4183-ed50-4939-9e17-fc96118c36fc",
        "parentId" : "4ef07467-096f-460b-8e15-2df9fbfaa144",
        "authorId" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "body" : "@hantaowang I think my thought about it is same as yours. I think if our API validation does its job correctly, the error should never happen. Also, this function is used by other functions such as Attach(), if it returns error, attach will fail and verify function will not be called at all. Unless someone somehow modify the PV and remove its PD name after volume is attached, which would be really strange. ",
        "createdAt" : "2019-07-10T20:21:17Z",
        "updatedAt" : "2019-07-19T17:41:59Z",
        "lastEditedBy" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "tags" : [
        ]
      }
    ],
    "commit" : "7ee5861fb93902cec1a1beeff4f70338ee9bbeaf",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +152,156 @@\t\t\tvolumeSource, _, err := getVolumeSource(spec)\n\t\t\tif err != nil {\n\t\t\t\tklog.Errorf(\"Error getting volume (%q) source : %v\", spec.Name(), err)\n\t\t\t\tcontinue\n\t\t\t}"
  },
  {
    "id" : "1dcaf4e7-c276-4cd5-aa76-010415398db8",
    "prId" : 74612,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/74612#pullrequestreview-209389344",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cbfa1005-6ef5-4510-b543-0120b0478776",
        "parentId" : null,
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "Should this also retry and honor the timeout?",
        "createdAt" : "2019-02-27T00:12:44Z",
        "updatedAt" : "2019-02-28T01:00:51Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "2ef821b8-d37c-4547-b08e-ef3547ce2ebd",
        "parentId" : "cbfa1005-6ef5-4510-b543-0120b0478776",
        "authorId" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "body" : "When I looked at this code, I don't see why we actually need a retry and timeout inside of WaitForAttach function since volume manager reconciler should retry if it fails and also it will have exponential backoff if it constantly fails. It seems better to keep retrying nonstop inside of this function. I will confirm with @saad-ali ",
        "createdAt" : "2019-02-27T19:01:24Z",
        "updatedAt" : "2019-03-01T00:49:54Z",
        "lastEditedBy" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "tags" : [
        ]
      },
      {
        "id" : "23a5fe4b-10d0-4f8a-b978-6b25670c9b4e",
        "parentId" : "cbfa1005-6ef5-4510-b543-0120b0478776",
        "authorId" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "body" : "talked to Saad, and we think this loop should be removed. Open an issue to track this #74765",
        "createdAt" : "2019-03-01T01:05:20Z",
        "updatedAt" : "2019-03-01T01:05:20Z",
        "lastEditedBy" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "tags" : [
        ]
      }
    ],
    "commit" : "5e04d200eee73ce9022b0ccf9e421a0178e12b77",
    "line" : 69,
    "diffHunk" : "@@ -1,1 +198,202 @@\tpdName := volumeSource.PDName\n\n\tif runtime.GOOS == \"windows\" {\n\t\texec := attacher.host.GetExec(gcePersistentDiskPluginName)\n\t\tid, err := getDiskID(pdName, exec)"
  },
  {
    "id" : "a6bf62f1-eeda-497a-9645-7754d0c0670c",
    "prId" : 74612,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/74612#pullrequestreview-208693007",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b8521907-32d6-4c96-b459-c318c47f6c38",
        "parentId" : null,
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "Add a TODO and a bug number for replacing this code with native support from `Get-Disk`. ",
        "createdAt" : "2019-02-27T00:17:56Z",
        "updatedAt" : "2019-02-28T01:00:51Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "698f04d8-65e9-47d4-82b3-1e7a5e0532e9",
        "parentId" : "b8521907-32d6-4c96-b459-c318c47f6c38",
        "authorId" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "body" : "added",
        "createdAt" : "2019-02-27T18:34:51Z",
        "updatedAt" : "2019-02-28T01:00:51Z",
        "lastEditedBy" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "tags" : [
        ]
      }
    ],
    "commit" : "5e04d200eee73ce9022b0ccf9e421a0178e12b77",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +146,150 @@\t// TODO: replace Get-GcePdName with native windows support of Get-Disk, see issue #74674\n\tcmd := `Get-GcePdName | select Name, DeviceId | ConvertTo-Json`\n\toutput, err := exec.Run(\"powershell\", \"/c\", cmd)\n\tif err != nil {\n\t\tklog.Errorf(\"Get-GcePdName failed, error: %v, output: %q\", err, string(output))"
  },
  {
    "id" : "0a284add-d520-4655-b4a0-42fe6fbd28cb",
    "prId" : 74612,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/74612#pullrequestreview-208277978",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9b7b039a-eaf2-4868-8745-4c160809f980",
        "parentId" : null,
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "I assume this is powershell call is fine, but could you do a simple test and invoke this command multiple times to see how heavy the operation is? ",
        "createdAt" : "2019-02-27T00:19:49Z",
        "updatedAt" : "2019-02-28T01:00:51Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "5e04d200eee73ce9022b0ccf9e421a0178e12b77",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +146,150 @@\t// TODO: replace Get-GcePdName with native windows support of Get-Disk, see issue #74674\n\tcmd := `Get-GcePdName | select Name, DeviceId | ConvertTo-Json`\n\toutput, err := exec.Run(\"powershell\", \"/c\", cmd)\n\tif err != nil {\n\t\tklog.Errorf(\"Get-GcePdName failed, error: %v, output: %q\", err, string(output))"
  },
  {
    "id" : "78611fb8-e175-47ca-851f-d48f62a1014d",
    "prId" : 74612,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/74612#pullrequestreview-208695727",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4e76ec04-9ac7-4605-932a-fddefaf99d87",
        "parentId" : null,
        "authorId" : "84643be2-004e-4f49-9ab2-b32a1995bad6",
        "body" : "Is this switch really necessary? The type should either be always string or always int here, right?\r\n\r\nThis seems like future-proofing for a type change that's unlikely to happen.",
        "createdAt" : "2019-02-27T02:01:05Z",
        "updatedAt" : "2019-02-28T01:00:51Z",
        "lastEditedBy" : "84643be2-004e-4f49-9ab2-b32a1995bad6",
        "tags" : [
        ]
      },
      {
        "id" : "2b778232-2351-4824-ac68-6dd26b2852e1",
        "parentId" : "4e76ec04-9ac7-4605-932a-fddefaf99d87",
        "authorId" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "body" : "I see in azure, this value is a float64, so I think it might be safer to do this way?",
        "createdAt" : "2019-02-27T18:40:18Z",
        "updatedAt" : "2019-02-28T01:00:51Z",
        "lastEditedBy" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "tags" : [
        ]
      }
    ],
    "commit" : "5e04d200eee73ce9022b0ccf9e421a0178e12b77",
    "line" : 41,
    "diffHunk" : "@@ -1,1 +165,169 @@\t\t\t\t\tklog.Infof(\"found the disk %q\", name)\n\t\t\t\t\tif diskNum, ok := pd[\"DeviceId\"]; ok {\n\t\t\t\t\t\tswitch v := diskNum.(type) {\n\t\t\t\t\t\tcase int:\n\t\t\t\t\t\t\treturn strconv.Itoa(v), nil"
  },
  {
    "id" : "b3bb773e-46ee-4fa2-b43a-07bcd7558607",
    "prId" : 74612,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/74612#pullrequestreview-208699552",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "27411fec-dda5-424a-949e-fdac2da77a3c",
        "parentId" : null,
        "authorId" : "84643be2-004e-4f49-9ab2-b32a1995bad6",
        "body" : "What is mklink / where does it happen? I only see it in comments in this PR.",
        "createdAt" : "2019-02-27T02:13:21Z",
        "updatedAt" : "2019-02-28T01:00:51Z",
        "lastEditedBy" : "84643be2-004e-4f49-9ab2-b32a1995bad6",
        "tags" : [
        ]
      },
      {
        "id" : "fec3719a-4119-48b1-bb98-376c5750889c",
        "parentId" : "27411fec-dda5-424a-949e-fdac2da77a3c",
        "authorId" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "body" : "It is like bind mounting a directory to another one. It will happen when operator tries to issue Mount function for this disk. For a remote disk, it normally has three phases, attach --> mount device (set up a global mount point) --> mount (bind mount the global mount point to a local pod directory).",
        "createdAt" : "2019-02-27T19:04:40Z",
        "updatedAt" : "2019-03-01T00:49:54Z",
        "lastEditedBy" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "tags" : [
        ]
      }
    ],
    "commit" : "5e04d200eee73ce9022b0ccf9e421a0178e12b77",
    "line" : 89,
    "diffHunk" : "@@ -1,1 +256,260 @@\t\t\tdir := deviceMountPath\n\t\t\tif runtime.GOOS == \"windows\" {\n\t\t\t\t// in windows, as we use mklink, only need to MkdirAll for parent directory\n\t\t\t\tdir = filepath.Dir(deviceMountPath)\n\t\t\t}"
  }
]