[
  {
    "id" : "ef870518-58d3-49e3-a0ff-7c51aa1a212b",
    "prId" : 99750,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/99750#pullrequestreview-604460792",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d7473c08-4bee-48d7-83a1-34658cb6cfea",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "I was actually suggesting going even step further and adding:\r\n```\r\nelse {\r\n  ogNewMeta.Generation = og.OldMeta.Generation\r\n}\r\n```\r\n\r\nBut I would like to hear Jordan`s opinion (if that doesn't violate some conventions, backward compatibility, etc.)",
        "createdAt" : "2021-03-04T08:26:53Z",
        "updatedAt" : "2021-03-04T08:26:54Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "008dd414-17fa-4cbb-bbaa-13c02b785e0e",
        "parentId" : "d7473c08-4bee-48d7-83a1-34658cb6cfea",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "rest.BeforeUpdate already resets generation to the current value before calling strategy.PrepareForUpdate:\r\n\r\nhttps://github.com/kubernetes/kubernetes/blob/c8fe1d9c0699f8d1fd93f47f2a62a4c83ccf5b6f/staging/src/k8s.io/apiserver/pkg/registry/rest/update.go#L105-L113",
        "createdAt" : "2021-03-04T15:21:41Z",
        "updatedAt" : "2021-03-04T15:21:42Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "7d3152e8-ac88-49d6-bf07-7bcb272976a9",
        "parentId" : "d7473c08-4bee-48d7-83a1-34658cb6cfea",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Good point - I missed that thanks.",
        "createdAt" : "2021-03-04T19:14:22Z",
        "updatedAt" : "2021-03-04T19:14:22Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "b1434d1ea3cd7ab2e8984dbe5c388241a40847a2",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +66,70 @@\toldEPS.ObjectMeta = v1.ObjectMeta{}\n\n\tif !apiequality.Semantic.DeepEqual(newEPS, oldEPS) || !apiequality.Semantic.DeepEqual(ogNewMeta.Labels, ogOldMeta.Labels) {\n\t\togNewMeta.Generation = ogOldMeta.Generation + 1\n\t}"
  },
  {
    "id" : "efe3ed44-33d5-43a2-865e-0c57f889edb8",
    "prId" : 96440,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/96440#pullrequestreview-528678337",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7f6dc0db-126b-4e0c-848f-08a64b563cd7",
        "parentId" : null,
        "authorId" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "body" : "I was wondering this question to myself as I was working on the `EndpointSliceTerminatingCondition` feature and I think it might be worthwhile to bring it up now. In v1.20 where most clusters will have both the `EndpointSliceTerminatingCondition` and `EndpointSliceNodeName` gates off, could it be problematic performance-wise that on CREATE and UPDATE we iterate over the entire endpoints list for every EndpointSlice two times to drop disabled fields? Or is this negligible given each EndpointSlice will typically not have more than 100 endpoints?",
        "createdAt" : "2020-11-12T01:19:02Z",
        "updatedAt" : "2020-11-12T20:31:19Z",
        "lastEditedBy" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "tags" : [
        ]
      },
      {
        "id" : "ade8675e-5911-4d80-9cd5-e7f9708ea4d2",
        "parentId" : "7f6dc0db-126b-4e0c-848f-08a64b563cd7",
        "authorId" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "body" : "and even if it's negligible, is it worth optimizing this so we drop disabled fields in one loop?\r\n```go\r\ndropTerminating := !utilfeature.DefaultFeatureGate.Enabled(features.EndpointSliceTerminatingCondition)\r\ndropNodeName := !utilfeature.DefaultFeatureGate.Enabled(features.EndpointSliceNodeName)\r\n\r\nif !dropTerminating && !dropNodeName {\r\n   return\r\n}\r\n\r\nfor i := range endpointSlice.Endpoints {\r\n    if dropTerminating {\r\n        endpointSlice.Endpoints[i].Conditions.Serving = nil\r\n        endpointSlice.Endpoints[i].Conditions.Terminating = nil\r\n    }\r\n\r\n    if dropNodeName {\r\n        endpointSlice.Endpoints[i].NodeName = nil\r\n    }\r\n}\r\n```",
        "createdAt" : "2020-11-12T01:21:07Z",
        "updatedAt" : "2020-11-12T20:31:19Z",
        "lastEditedBy" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "tags" : [
        ]
      },
      {
        "id" : "47640be6-6ce0-4e30-adb2-ed1dfcaf7593",
        "parentId" : "7f6dc0db-126b-4e0c-848f-08a64b563cd7",
        "authorId" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "body" : "same comment for Update",
        "createdAt" : "2020-11-12T01:22:34Z",
        "updatedAt" : "2020-11-12T20:31:19Z",
        "lastEditedBy" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "tags" : [
        ]
      },
      {
        "id" : "d4c09629-6ee7-4b5c-a510-f53a7676e652",
        "parentId" : "7f6dc0db-126b-4e0c-848f-08a64b563cd7",
        "authorId" : "399a0f74-29de-4365-9ae5-f743ae5f278c",
        "body" : "Good call, updated to use that approach now.",
        "createdAt" : "2020-11-12T01:53:01Z",
        "updatedAt" : "2020-11-12T20:31:19Z",
        "lastEditedBy" : "399a0f74-29de-4365-9ae5-f743ae5f278c",
        "tags" : [
        ]
      }
    ],
    "commit" : "84e4b30a3e9076312e3bb6953f1000aaaae20056",
    "line" : 39,
    "diffHunk" : "@@ -1,1 +110,114 @@\n\tif dropNodeName || dropTerminating {\n\t\tfor i := range endpointSlice.Endpoints {\n\t\t\tif dropNodeName {\n\t\t\t\tendpointSlice.Endpoints[i].NodeName = nil"
  },
  {
    "id" : "a963da4d-04a0-4541-a8ee-acf0bb9c4533",
    "prId" : 96440,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/96440#pullrequestreview-528689835",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "167534c8-6c1b-4b4c-92ac-e8739cd4f9f1",
        "parentId" : null,
        "authorId" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "body" : "I think this will drop existing resources with the field already set when the feature gate is off, which I think is not desirable.",
        "createdAt" : "2020-11-12T02:14:29Z",
        "updatedAt" : "2020-11-12T20:31:19Z",
        "lastEditedBy" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "tags" : [
        ]
      },
      {
        "id" : "da934434-2683-4ee3-9776-e66d9dd6a4e2",
        "parentId" : "167534c8-6c1b-4b4c-92ac-e8739cd4f9f1",
        "authorId" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "body" : "nvm ignore me, I misread :) ",
        "createdAt" : "2020-11-12T02:16:17Z",
        "updatedAt" : "2020-11-12T20:31:19Z",
        "lastEditedBy" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "tags" : [
        ]
      },
      {
        "id" : "931c0f14-0595-4c0c-a7b3-db25fa240301",
        "parentId" : "167534c8-6c1b-4b4c-92ac-e8739cd4f9f1",
        "authorId" : "399a0f74-29de-4365-9ae5-f743ae5f278c",
        "body" : "I may not be understanding this comment correctly, but right below this line I set this to false if `NodeName` has been set on any endpoint:\r\n\r\n```\r\n\tif dropNodeName {\r\n\t\tfor _, ep := range oldEPS.Endpoints {\r\n\t\t\tif ep.NodeName != nil {\r\n\t\t\t\tdropNodeName = false\r\n\t\t\t\tbreak\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n```",
        "createdAt" : "2020-11-12T02:24:01Z",
        "updatedAt" : "2020-11-12T20:31:19Z",
        "lastEditedBy" : "399a0f74-29de-4365-9ae5-f743ae5f278c",
        "tags" : [
        ]
      },
      {
        "id" : "b458c651-fe9a-4b51-8cea-a9966906ccc2",
        "parentId" : "167534c8-6c1b-4b4c-92ac-e8739cd4f9f1",
        "authorId" : "399a0f74-29de-4365-9ae5-f743ae5f278c",
        "body" : "I was about to link to the test that covered this and then I realized the gate was accidentally on in the test. That should be updated now and the corrected test does still pass.",
        "createdAt" : "2020-11-12T02:27:17Z",
        "updatedAt" : "2020-11-12T20:31:19Z",
        "lastEditedBy" : "399a0f74-29de-4365-9ae5-f743ae5f278c",
        "tags" : [
        ]
      }
    ],
    "commit" : "84e4b30a3e9076312e3bb6953f1000aaaae20056",
    "line" : 60,
    "diffHunk" : "@@ -1,1 +125,129 @@// been set on the EndpointSlice.\nfunc dropDisabledFieldsOnUpdate(oldEPS, newEPS *discovery.EndpointSlice) {\n\tdropNodeName := !utilfeature.DefaultFeatureGate.Enabled(features.EndpointSliceNodeName)\n\tif dropNodeName {\n\t\tfor _, ep := range oldEPS.Endpoints {"
  }
]