[
  {
    "id" : "6613e005-b8aa-418f-b8ad-a2629e5aa580",
    "prId" : 9739,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f0394a82-5c8b-44a6-b8fd-7fa44870ce88",
        "parentId" : null,
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "We also need to check the metadata fields that I mentioned elsewhere.\n",
        "createdAt" : "2015-06-18T03:17:16Z",
        "updatedAt" : "2015-06-19T21:32:21Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "d8fc146c-7f0f-49cd-9dc5-affa14df259f",
        "parentId" : "f0394a82-5c8b-44a6-b8fd-7fa44870ce88",
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "In principle, at least. I suppose for now deletionTimestamp doesn't do anything for replication controllers, and labels and annotations have no effect, either, so just checking spec is ok.\n",
        "createdAt" : "2015-06-18T03:19:14Z",
        "updatedAt" : "2015-06-19T21:32:21Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      }
    ],
    "commit" : "9ed9bd1c4ffe766acb6720326671feb33af4ef3b",
    "line" : null,
    "diffHunk" : "@@ -1,1 +74,78 @@\t// TODO: Any changes to a part of the object that represents desired state (labels,\n\t// annotations etc) should also increment the generation.\n\tif !reflect.DeepEqual(oldController.Spec, newController.Spec) {\n\t\tnewController.Generation = oldController.Generation + 1\n\t}"
  },
  {
    "id" : "d88e835e-0ea1-4d9d-880a-3766ef712d9c",
    "prId" : 6616,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "634f1581-1fdb-41c2-8f83-54d323ed0fd0",
        "parentId" : null,
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "I would also like to default replicas to 1.\n",
        "createdAt" : "2015-04-09T05:48:54Z",
        "updatedAt" : "2015-04-10T03:52:50Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "9d7a6fec-75cd-4d8c-8e0d-4349a46b666d",
        "parentId" : "634f1581-1fdb-41c2-8f83-54d323ed0fd0",
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "Just saw your comment about replicas=0. Will think about that.\n",
        "createdAt" : "2015-04-09T05:53:09Z",
        "updatedAt" : "2015-04-10T03:52:50Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "28ad422e-d013-40f4-9dfc-f1ddca66bd2f",
        "parentId" : "634f1581-1fdb-41c2-8f83-54d323ed0fd0",
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "GracePeriodSeconds is similar; it was made a pointer:\nhttps://github.com/GoogleCloudPlatform/kubernetes/blob/master/pkg/api/v1beta3/types.go#L1234\n",
        "createdAt" : "2015-04-09T05:55:56Z",
        "updatedAt" : "2015-04-10T03:52:50Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "95e68c42-bf87-49e1-a57e-cd1d2f875484",
        "parentId" : "634f1581-1fdb-41c2-8f83-54d323ed0fd0",
        "authorId" : "88a0ee93-4188-47b5-8881-3624e4a411f2",
        "body" : "@bgrant0607 I don't see any comments about replicas=0. \n",
        "createdAt" : "2015-04-09T16:37:30Z",
        "updatedAt" : "2015-04-10T03:52:50Z",
        "lastEditedBy" : "88a0ee93-4188-47b5-8881-3624e4a411f2",
        "tags" : [
        ]
      },
      {
        "id" : "0de4f75d-fff1-4ea6-a8df-911282790279",
        "parentId" : "634f1581-1fdb-41c2-8f83-54d323ed0fd0",
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "https://github.com/GoogleCloudPlatform/kubernetes/issues/5366#issuecomment-91116236\n",
        "createdAt" : "2015-04-09T19:37:11Z",
        "updatedAt" : "2015-04-10T03:52:50Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      }
    ],
    "commit" : "fded23a777743a7fb9b78aac12d088a07f7bcb57",
    "line" : null,
    "diffHunk" : "@@ -1,1 +48,52 @@\tcontroller := obj.(*api.ReplicationController)\n\tcontroller.Status = api.ReplicationControllerStatus{}\n}\n\n// PrepareForUpdate clears fields that are not allowed to be set by end users on update."
  },
  {
    "id" : "f87de223-007c-496f-9329-079b13940562",
    "prId" : 6163,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ad048568-53ab-4a8b-a787-db7e58560dd7",
        "parentId" : null,
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Nuke the whitespace above this\n",
        "createdAt" : "2015-03-30T21:31:57Z",
        "updatedAt" : "2015-03-30T21:33:15Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "b92ef44a-be84-4435-8b15-4d55d291bc0e",
        "parentId" : "ad048568-53ab-4a8b-a787-db7e58560dd7",
        "authorId" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "body" : "That's from goimports, but ok\n",
        "createdAt" : "2015-03-30T21:32:38Z",
        "updatedAt" : "2015-03-30T21:33:15Z",
        "lastEditedBy" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "tags" : [
        ]
      },
      {
        "id" : "129fa8c8-9b7a-4e2d-a2d1-371cd8671c2b",
        "parentId" : "ad048568-53ab-4a8b-a787-db7e58560dd7",
        "authorId" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "body" : "Fixed\n",
        "createdAt" : "2015-03-30T21:33:17Z",
        "updatedAt" : "2015-03-30T21:33:17Z",
        "lastEditedBy" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "tags" : [
        ]
      }
    ],
    "commit" : "d7c5f427cb9bd507ea0bd58ef624e1557982ba8e",
    "line" : null,
    "diffHunk" : "@@ -1,1 +19,23 @@import (\n\t\"fmt\"\n\t\"strconv\"\n\n\t\"github.com/GoogleCloudPlatform/kubernetes/pkg/api\""
  },
  {
    "id" : "0c05dbd1-cda5-4f55-9d0a-8f95b6794c37",
    "prId" : 5443,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a8322813-9a13-46dc-85fb-0c798b2905a5",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "question: does the rest framework call both Validate and ValidateUpdate? Do you need to call both here?\n",
        "createdAt" : "2015-03-13T19:34:20Z",
        "updatedAt" : "2015-03-13T20:18:00Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "bb101233-275d-49da-a303-1ae7c259baa4",
        "parentId" : "a8322813-9a13-46dc-85fb-0c798b2905a5",
        "authorId" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "body" : "It doesn't call both. Validate does create style validation which is a little repetative given we already know we want. eg: Validate will check for empty name and raise an error, while ValidateUpdate will compare old and new names and raise a similar error. The only notable difference is that Validate will also check a generated name (which from the godoc indicates that the name has a unique suffix), against a given name function. Since ValidateUpdate just disallows changes to the name it doesn't bother doing this. \n\nMerging errors might be difficult if I call both (i.e if an update has no name, do we want \"name doesn't match\", or \"please specify name\"); wdyt?\n",
        "createdAt" : "2015-03-13T19:50:14Z",
        "updatedAt" : "2015-03-13T20:18:00Z",
        "lastEditedBy" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "tags" : [
        ]
      },
      {
        "id" : "f23babd5-7c61-49b2-b809-bd3df1eb514e",
        "parentId" : "a8322813-9a13-46dc-85fb-0c798b2905a5",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "ok, sounds good. As long as the new object is both a valid object and a valid update I am happy.\n",
        "createdAt" : "2015-03-13T20:50:32Z",
        "updatedAt" : "2015-03-13T20:50:32Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "6193608e9b4e789364cfddbb473dd0eb81ab1649",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +64,68 @@// ValidateUpdate is the default update validation for an end user.\nfunc (rcStrategy) ValidateUpdate(obj, old runtime.Object) errors.ValidationErrorList {\n\treturn validation.ValidateReplicationControllerUpdate(old.(*api.ReplicationController), obj.(*api.ReplicationController))\n}\n"
  },
  {
    "id" : "54369ae1-b74b-40f3-8816-ad65a870573c",
    "prId" : 2665,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "53670888-f19b-4c35-a640-708666bcc090",
        "parentId" : null,
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "It might be more appropriate to fillCirrentState here via a filter instead of doing it in the registry.  It's less clear of a case than pod status though, and having the registry do it (or via a wrapper to the registry) is also acceptable.  I guess I'm fine with the inconsistency here for now.\n",
        "createdAt" : "2014-12-01T22:54:27Z",
        "updatedAt" : "2014-12-05T01:15:43Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "1f12f7b2-a005-4091-8b26-df6f7f3212b6",
        "parentId" : "53670888-f19b-4c35-a640-708666bcc090",
        "authorId" : "7116d1ae-39f7-4e5d-81a9-1bcb75ebd909",
        "body" : "I've struggled a little bit, but didn't find a better alternative.  I'm also fine with it for now.\n",
        "createdAt" : "2014-12-02T03:18:36Z",
        "updatedAt" : "2014-12-05T01:15:43Z",
        "lastEditedBy" : "7116d1ae-39f7-4e5d-81a9-1bcb75ebd909",
        "tags" : [
        ]
      }
    ],
    "commit" : "76552423f93b9020554c592ea278bbb13a30b6cb",
    "line" : 39,
    "diffHunk" : "@@ -1,1 +147,151 @@// It implements apiserver.ResourceWatcher.\nfunc (rs *REST) Watch(ctx api.Context, label, field labels.Selector, resourceVersion string) (watch.Interface, error) {\n\treturn rs.registry.WatchControllers(ctx, label, field, resourceVersion)\n}\n"
  },
  {
    "id" : "b8e27e2e-d6d1-4861-994d-5ed2459b88f3",
    "prId" : 1248,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2ac9df22-eb08-4ba2-b3c4-4f09eafeacff",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "O(N \\* M) scaling.\n",
        "createdAt" : "2014-09-09T23:01:41Z",
        "updatedAt" : "2014-09-09T23:19:46Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "d34f6bb8-36db-48ef-b303-54f9b2c91757",
        "parentId" : "2ac9df22-eb08-4ba2-b3c4-4f09eafeacff",
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "Yep, do we care?  This is all pretty local.\n",
        "createdAt" : "2014-09-09T23:14:56Z",
        "updatedAt" : "2014-09-09T23:19:46Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      },
      {
        "id" : "00ce909d-34cb-49a1-97e5-f566056d724b",
        "parentId" : "2ac9df22-eb08-4ba2-b3c4-4f09eafeacff",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "I don't think we care at the moment, but stuff like this will keep us from scaling out of the 100's of pods and rep. controllers.\n",
        "createdAt" : "2014-09-09T23:16:17Z",
        "updatedAt" : "2014-09-09T23:19:46Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "e7625c8d91c7d932edcaf0d93d7a6e9e2fadd58f",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +106,110 @@\tfor _, controller := range controllers.Items {\n\t\tif selector.Matches(labels.Set(controller.Labels)) {\n\t\t\trs.fillCurrentState(&controller)\n\t\t\tfiltered = append(filtered, controller)\n\t\t}"
  },
  {
    "id" : "ba2f27ea-22dd-4c71-ae16-509d210ca85a",
    "prId" : 1248,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7996db4f-99b2-41a7-bba3-d6736519ec74",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Is this pattern where apiserver fills in the current state intended to be permanent? If so, I think we should not store the CurrentState field in etcd. Otherwise, we should have some component that updates the thing that is stored in etcd and apiserver shouldn't do this.\n",
        "createdAt" : "2014-09-09T23:04:54Z",
        "updatedAt" : "2014-09-09T23:19:46Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "e416275b-021f-4d9f-a8eb-d04e47ced7ef",
        "parentId" : "7996db4f-99b2-41a7-bba3-d6736519ec74",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Like, as implemented here you couldn't watch for this. I think it's totally reasonable to want to watch for this data instead of polling for it.\n",
        "createdAt" : "2014-09-09T23:05:52Z",
        "updatedAt" : "2014-09-09T23:19:46Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "1cc9bedc-5a27-46e5-b87b-0384d28f4dd7",
        "parentId" : "7996db4f-99b2-41a7-bba3-d6736519ec74",
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "I really don't want to write transient state into etcd.  If we want to have a background poll which updates this in memory, and then we watch that, I'd be ok with that.\n",
        "createdAt" : "2014-09-09T23:16:00Z",
        "updatedAt" : "2014-09-09T23:19:46Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      },
      {
        "id" : "fd543218-115d-450a-8024-6568b7e0e308",
        "parentId" : "7996db4f-99b2-41a7-bba3-d6736519ec74",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "> I really don't want to write transient state into etcd.\n\nWhy not?\n",
        "createdAt" : "2014-09-09T23:17:28Z",
        "updatedAt" : "2014-09-09T23:19:46Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "83de8a76-077e-4599-8fa2-cc5fda383b20",
        "parentId" : "7996db4f-99b2-41a7-bba3-d6736519ec74",
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "Because it leads to lots of unnecessary write load on the data store, and also, it makes compareAndSwap a lot trickier, because suddenly there are writes you care about, and writes you don't care about, or else you have a bunch of unnecessary conflicts.\n\nI think its better hygiene to keep etcd/persistent store the domain of desired state, and current state is always dynamically obtained from the source (possibly with a caching layer for performance)\n",
        "createdAt" : "2014-09-09T23:22:49Z",
        "updatedAt" : "2014-09-09T23:22:49Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "e7625c8d91c7d932edcaf0d93d7a6e9e2fadd58f",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +180,184 @@\t\treturn err\n\t}\n\tctrl.CurrentState.Replicas = len(list.Items)\n\treturn nil\n}"
  }
]