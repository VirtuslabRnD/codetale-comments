[
  {
    "id" : "6ba1cfca-393d-4cbc-b8b8-81e664770d2f",
    "prId" : 21966,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "18a975a5-f8e7-47db-b559-e041abe07c5f",
        "parentId" : null,
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "@lavalamp FWIW, I find it confusing that \"Patcher\" means the resource supports Get and Put. Do all resources supporting Get and Put also support Patch?\n",
        "createdAt" : "2016-03-03T03:47:43Z",
        "updatedAt" : "2016-03-04T19:02:11Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "bdc4be2d-0f86-4975-a287-a78bec34f227",
        "parentId" : "18a975a5-f8e7-47db-b559-e041abe07c5f",
        "authorId" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "body" : "Not sure if this answers your question, but the comment on Patcher is `// Patcher is a storage object that supports both get and update.` and the interface embeds `Getter` and `Updater`.\n",
        "createdAt" : "2016-03-03T17:16:37Z",
        "updatedAt" : "2016-03-04T19:02:11Z",
        "lastEditedBy" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "tags" : [
        ]
      },
      {
        "id" : "82161973-0476-4d80-afb2-c8f5fd9abec4",
        "parentId" : "18a975a5-f8e7-47db-b559-e041abe07c5f",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "I think the machinery that implements patch just needs something that can Get and Put. You don't need anything special to get patch working on your object, logically it's just an update.\n",
        "createdAt" : "2016-03-04T01:15:22Z",
        "updatedAt" : "2016-03-04T19:02:11Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "9e99f9fa0e45a8f56c399f9cbb8047a4f39dde4e",
    "line" : null,
    "diffHunk" : "@@ -1,1 +189,193 @@\n// ScaleREST implements Patcher\nvar _ = rest.Patcher(&ScaleREST{})\n\n// New creates a new Scale object"
  },
  {
    "id" : "21755878-e149-4efd-a56f-e5b3bde5e3bd",
    "prId" : 21966,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5f5345df-723f-42d5-b949-088535fc9777",
        "parentId" : null,
        "authorId" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "body" : "Is throwing an error the correct thing to do in this case?  We have just successfully updated the deployment with the new scale, but can't convert the deployment back to a scale because the label selectors are invalid on the deployment.  Is the deployment corrupted if the label selector is invalid?\n",
        "createdAt" : "2016-03-03T17:54:15Z",
        "updatedAt" : "2016-03-04T19:02:11Z",
        "lastEditedBy" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "tags" : [
        ]
      },
      {
        "id" : "1c7597dd-5e2f-46f4-b758-be0dceceba42",
        "parentId" : "5f5345df-723f-42d5-b949-088535fc9777",
        "authorId" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "body" : "I think this is the right thing to do. Deployment should be considered corrupted if we can't get the selector.\n",
        "createdAt" : "2016-03-03T18:29:01Z",
        "updatedAt" : "2016-03-04T19:02:11Z",
        "lastEditedBy" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "tags" : [
        ]
      },
      {
        "id" : "20f1189f-8717-4e3f-b6d1-0b371f5feb00",
        "parentId" : "5f5345df-723f-42d5-b949-088535fc9777",
        "authorId" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "body" : "In that case, we could probably return a more informative result indicating that:\n1. The scale was updated on the deployment\n2. There are issues with fields on the persisted deployment\n\nConsider something like `errors.NewInvalid(\"Scale updated, but persisted Deployment has invalid fields: %v\", err)`\n\nSame applies to the `Get` function\n",
        "createdAt" : "2016-03-03T21:37:00Z",
        "updatedAt" : "2016-03-04T19:02:11Z",
        "lastEditedBy" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "tags" : [
        ]
      },
      {
        "id" : "3a0b0f88-a30e-44dd-9bd3-8db4a9218219",
        "parentId" : "5f5345df-723f-42d5-b949-088535fc9777",
        "authorId" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "body" : "Done. See the comment below.\n",
        "createdAt" : "2016-03-04T07:50:38Z",
        "updatedAt" : "2016-03-04T19:02:11Z",
        "lastEditedBy" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "tags" : [
        ]
      }
    ],
    "commit" : "9e99f9fa0e45a8f56c399f9cbb8047a4f39dde4e",
    "line" : 124,
    "diffHunk" : "@@ -1,1 +233,237 @@\tnewScale, err := scaleFromDeployment(deployment)\n\tif err != nil {\n\t\treturn nil, false, errors.NewBadRequest(fmt.Sprintf(\"%v\", err))\n\t}\n\treturn newScale, false, nil"
  },
  {
    "id" : "666c2d8d-f8f9-400c-aa5c-0a7705a9393e",
    "prId" : 21966,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dae1a365-e8a4-40ce-9c0b-3c00a7455992",
        "parentId" : null,
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "Please also copy ResourceVersion.\n",
        "createdAt" : "2016-03-04T00:10:10Z",
        "updatedAt" : "2016-03-04T19:02:11Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "4815caef-98c7-4380-b8ed-0af8440bd11a",
        "parentId" : "dae1a365-e8a4-40ce-9c0b-3c00a7455992",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "+1 very important\n",
        "createdAt" : "2016-03-04T01:15:49Z",
        "updatedAt" : "2016-03-04T19:02:11Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "6e8705fc-7cb7-4eb0-b803-09b3d0def714",
        "parentId" : "dae1a365-e8a4-40ce-9c0b-3c00a7455992",
        "authorId" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "body" : "Done.\n",
        "createdAt" : "2016-03-04T07:50:46Z",
        "updatedAt" : "2016-03-04T19:02:11Z",
        "lastEditedBy" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "tags" : [
        ]
      }
    ],
    "commit" : "9e99f9fa0e45a8f56c399f9cbb8047a4f39dde4e",
    "line" : null,
    "diffHunk" : "@@ -1,1 +225,229 @@\t\treturn nil, false, errors.NewNotFound(autoscaling.Resource(\"deployments/scale\"), scale.Name)\n\t}\n\tdeployment.Spec.Replicas = scale.Spec.Replicas\n\tdeployment.ResourceVersion = scale.ResourceVersion\n\tdeployment, err = r.registry.UpdateDeployment(ctx, deployment)"
  },
  {
    "id" : "2411b6ee-b206-4b71-a0ca-ac4895d3bc70",
    "prId" : 16677,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "14920ee7-09c0-4da8-8e50-426c8ab200a6",
        "parentId" : null,
        "authorId" : "c929c906-4dfb-433b-9bc7-1b4b05c176f8",
        "body" : "The same as for RC: just call ValidateScale here on the new object.\n",
        "createdAt" : "2015-11-18T10:28:08Z",
        "updatedAt" : "2015-11-18T18:54:27Z",
        "lastEditedBy" : "c929c906-4dfb-433b-9bc7-1b4b05c176f8",
        "tags" : [
        ]
      }
    ],
    "commit" : "e5ef9e1406a12811f08139d88a7552e8c9e52e79",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +152,156 @@\t\treturn nil, false, errors.NewBadRequest(fmt.Sprintf(\"wrong object passed to Scale update: %v\", obj))\n\t}\n\n\tif errs := extvalidation.ValidateScale(scale); len(errs) > 0 {\n\t\treturn nil, false, errors.NewInvalid(\"scale\", scale.Name, errs)"
  }
]