[
  {
    "id" : "aa0743e0-ac27-4131-85e0-8a8dcb62bb87",
    "prId" : 21754,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3f0fb7bd-c347-4ef7-a4b4-1829b85f2dea",
        "parentId" : null,
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "Annotations are copied to RSes. A Deployment's labels don't affect what it does. Please omit labels here and add a comment about why we just dump generation on spec and annotation changes.\n",
        "createdAt" : "2016-02-23T15:08:13Z",
        "updatedAt" : "2016-02-23T18:42:44Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "bbd0a309-96ed-45c0-8b10-9526ef16a838",
        "parentId" : "3f0fb7bd-c347-4ef7-a4b4-1829b85f2dea",
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "ok\n",
        "createdAt" : "2016-02-23T16:07:33Z",
        "updatedAt" : "2016-02-23T18:42:44Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      }
    ],
    "commit" : "6506d76f76b89211cf32dea87bada2e924713aac",
    "line" : null,
    "diffHunk" : "@@ -1,1 +78,82 @@\t// because annotations are copied from deployments to their replica sets.\n\tif !reflect.DeepEqual(newDeployment.Spec, oldDeployment.Spec) ||\n\t\t!reflect.DeepEqual(newDeployment.Annotations, oldDeployment.Annotations) {\n\t\tnewDeployment.Generation = oldDeployment.Generation + 1\n\t}"
  },
  {
    "id" : "7231bd38-5808-4572-a5a4-92efe8467394",
    "prId" : 20906,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d9e483c2-3c35-4c1f-b056-ac54a8844e8b",
        "parentId" : null,
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "Do we do this for other APIs? We should be consistent, and document this in api conventions.\n\nDoes the deployment controller use resourceVersion to ensure it doesn't accidentally clobber labels and annotations?\n\nI agree the controller shouldn't be able to update labels, but I could imagine cases where we'd want it to update annotations in the future.\n",
        "createdAt" : "2016-02-09T21:33:49Z",
        "updatedAt" : "2016-02-11T10:33:36Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "e72d1bda-b488-4180-a273-1b71022ab5ed",
        "parentId" : "d9e483c2-3c35-4c1f-b056-ac54a8844e8b",
        "authorId" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "body" : "This strategy is for updating deployment status only (`UpdateStatus`). To update annotations/labels, `Update` should be called instead. \n",
        "createdAt" : "2016-02-10T00:01:35Z",
        "updatedAt" : "2016-02-11T10:33:36Z",
        "lastEditedBy" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "tags" : [
        ]
      },
      {
        "id" : "77d4b8f8-1290-4576-867a-0e852f9ee5f8",
        "parentId" : "d9e483c2-3c35-4c1f-b056-ac54a8844e8b",
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "@bgrant0607 , @janetkuo is right, this is status update. I don't think it happens elsewhere. \n",
        "createdAt" : "2016-02-10T09:21:49Z",
        "updatedAt" : "2016-02-11T10:33:36Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      },
      {
        "id" : "447c03bb-5dc4-4836-aef1-1697228dcd69",
        "parentId" : "d9e483c2-3c35-4c1f-b056-ac54a8844e8b",
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "@kargakis @janetkuo I understand this is status update.\n\nWe support updating annotations via the /binding subresource. There are use cases for controllers to update annotations along with status, though we don't do it now.\n\nI agree that we shouldn't allow labels to be changed via status updates. @kargakis Please file an issue to fix the other status endpoints. It is technically a breaking API change, but one could view it as a vulnerability, so we should fix it.\n",
        "createdAt" : "2016-02-10T16:00:27Z",
        "updatedAt" : "2016-02-11T10:33:36Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "8551509c-8bb2-4467-a140-dd0df146d358",
        "parentId" : "d9e483c2-3c35-4c1f-b056-ac54a8844e8b",
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "opened https://github.com/kubernetes/kubernetes/issues/20978\n",
        "createdAt" : "2016-02-10T16:34:57Z",
        "updatedAt" : "2016-02-11T10:33:36Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      },
      {
        "id" : "70ca7070-2ae1-40d9-96e6-facb581d6519",
        "parentId" : "d9e483c2-3c35-4c1f-b056-ac54a8844e8b",
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "Commented on that issue about why we may want to allow annotation updates.\n",
        "createdAt" : "2016-02-10T19:27:34Z",
        "updatedAt" : "2016-02-11T10:33:36Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      }
    ],
    "commit" : "47a94fd0515772fa9e066c2c9aa957bbce259589",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +93,97 @@\toldDeployment := old.(*extensions.Deployment)\n\tnewDeployment.Spec = oldDeployment.Spec\n\tnewDeployment.Labels = oldDeployment.Labels\n}\n"
  },
  {
    "id" : "7294c175-e3db-4be5-9c8f-511b7a24e58f",
    "prId" : 15809,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3ae7ec5d-3142-4845-be7f-a3c650844ae0",
        "parentId" : null,
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "I see that we do the same thing in PrepareForCreate for other resources.\nEx: pkg/registry/ingress/strategy.go\n",
        "createdAt" : "2015-10-19T18:08:13Z",
        "updatedAt" : "2015-10-26T07:14:06Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      }
    ],
    "commit" : "8acf01d6205166700754d0d744d15b454bc0669f",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +64,68 @@// PrepareForUpdate clears fields that are not allowed to be set by end users on update.\nfunc (deploymentStrategy) PrepareForUpdate(obj, old runtime.Object) {\n\tnewDeployment := obj.(*extensions.Deployment)\n\toldDeployment := old.(*extensions.Deployment)\n\tnewDeployment.Status = oldDeployment.Status"
  },
  {
    "id" : "b039d28f-11ec-47b2-8fb7-82b0a9aaab10",
    "prId" : 13347,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5200b665-b4ca-4fa4-9688-92d06977913f",
        "parentId" : null,
        "authorId" : "f04ec747-f3ff-4334-a66e-6daaf4497091",
        "body" : "Won't this call to `ValidateDeployment` panic if `obj` isn't a `*Deployment`? I'm not sure what the idioms at this layer are right now, but seems like you'd want to check the conversion result and return a strong error rather than panic.\n",
        "createdAt" : "2015-08-31T14:29:18Z",
        "updatedAt" : "2015-08-31T17:47:17Z",
        "lastEditedBy" : "f04ec747-f3ff-4334-a66e-6daaf4497091",
        "tags" : [
        ]
      },
      {
        "id" : "4929b762-fc2d-45d9-85a8-a619bd91afef",
        "parentId" : "5200b665-b4ca-4fa4-9688-92d06977913f",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "yes - it will panic.\nHowever, we'are using the same pattern in other registries, so I don't think it's a big problem for now (we should probably change that at some point in all registries).\n",
        "createdAt" : "2015-08-31T14:50:41Z",
        "updatedAt" : "2015-08-31T17:47:17Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "13ecd8a72c95765edeac21b65f6bce54755ccd55",
    "line" : 53,
    "diffHunk" : "@@ -1,1 +51,55 @@// Validate validates a new deployment.\nfunc (deploymentStrategy) Validate(ctx api.Context, obj runtime.Object) errs.ValidationErrorList {\n\tdeployment := obj.(*expapi.Deployment)\n\treturn validation.ValidateDeployment(deployment)\n}"
  }
]