[
  {
    "id" : "dbf9725c-4caa-419d-a650-592e420f5fad",
    "prId" : 99290,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/99290#pullrequestreview-605900274",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "52890640-439c-418a-b835-8ec2d177bb26",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "this is exciting... would this be caught by the added unit test?",
        "createdAt" : "2021-03-07T21:01:44Z",
        "updatedAt" : "2021-03-09T15:30:52Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "943ba555-95a2-4e8e-9511-44c732dbf639",
        "parentId" : "52890640-439c-418a-b835-8ec2d177bb26",
        "authorId" : "37016922-c330-4fc5-b602-08c675dca4fb",
        "body" : "Yeah, I found this because of the unit test.",
        "createdAt" : "2021-03-07T23:56:21Z",
        "updatedAt" : "2021-03-09T15:30:52Z",
        "lastEditedBy" : "37016922-c330-4fc5-b602-08c675dca4fb",
        "tags" : [
        ]
      }
    ],
    "commit" : "66e722765a216db5288498b0a21bcededf8d9236",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +116,120 @@\t\tapiVersion = schema.GroupVersion{\n\t\t\tGroup:   requestInfo.APIGroup,\n\t\t\tVersion: requestInfo.APIVersion,\n\t\t}\n\t}"
  },
  {
    "id" : "2359871a-2797-488a-be4f-57091d059de5",
    "prId" : 36438,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/36438#pullrequestreview-7651801",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f775134a-1189-4105-9199-b3e12360cc38",
        "parentId" : null,
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "AllowUnconditionalUpdate is used only if the resource version in the UPDATE request is zero:\nhttps://github.com/kubernetes/kubernetes/blob/c41c24fbf300cd7ba504ea1ac2e052c4a1bbed33/pkg/registry/generic/registry/store.go#L377\nHow is this helping?\n",
        "createdAt" : "2016-11-08T15:30:21Z",
        "updatedAt" : "2016-11-08T16:06:38Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      },
      {
        "id" : "3feaf023-a5c7-450c-831f-f89877dd6a2a",
        "parentId" : "f775134a-1189-4105-9199-b3e12360cc38",
        "authorId" : "ab8bc7c5-233d-47c1-b03a-767fb930c021",
        "body" : "https://github.com/kubernetes/kubernetes/blob/c41c24fbf300cd7ba504ea1ac2e052c4a1bbed33/pkg/registry/generic/registry/store.go#L409\n",
        "createdAt" : "2016-11-08T15:34:13Z",
        "updatedAt" : "2016-11-08T16:06:38Z",
        "lastEditedBy" : "ab8bc7c5-233d-47c1-b03a-767fb930c021",
        "tags" : [
        ]
      },
      {
        "id" : "49a5ad67-35da-47fd-a64a-e19ea3258b8f",
        "parentId" : "f775134a-1189-4105-9199-b3e12360cc38",
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "Ok, seems like a small improvement but we already use a resource version in the eviction REST so you would still get an update conflict on a different rv.\n",
        "createdAt" : "2016-11-08T15:38:38Z",
        "updatedAt" : "2016-11-08T16:06:38Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      },
      {
        "id" : "261367f7-ed89-4682-aa2a-977900dc1259",
        "parentId" : "f775134a-1189-4105-9199-b3e12360cc38",
        "authorId" : "ab8bc7c5-233d-47c1-b03a-767fb930c021",
        "body" : "Eviction rest is per pod. When pods are different there is no conflict. \n",
        "createdAt" : "2016-11-08T16:04:58Z",
        "updatedAt" : "2016-11-08T16:06:38Z",
        "lastEditedBy" : "ab8bc7c5-233d-47c1-b03a-767fb930c021",
        "tags" : [
        ]
      },
      {
        "id" : "c4c8241c-263f-49b9-ab62-10193760adc9",
        "parentId" : "f775134a-1189-4105-9199-b3e12360cc38",
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "I wasn't talking about pods but about PDB. Even if AllowUnconditionalUpdate returns true, and the eviciton REST tries to update the status of a PDB with a rv older than what etcd has you will get an update conflict.\n",
        "createdAt" : "2016-11-08T16:10:21Z",
        "updatedAt" : "2016-11-08T16:10:21Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      },
      {
        "id" : "84954f0c-6fc5-4522-8ec4-100dc0bb6c72",
        "parentId" : "f775134a-1189-4105-9199-b3e12360cc38",
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "Note that I am fine with this change but it doesn't solve the issue that is solved by Generation/ObservedGeneration.\n",
        "createdAt" : "2016-11-08T16:12:26Z",
        "updatedAt" : "2016-11-08T16:12:26Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      }
    ],
    "commit" : "ada53fab42f94cedf99f995e92d879c720f8674d",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +92,96 @@}\n\n// AllowUnconditionalUpdate is the default update policy for PodDisruptionBudget objects. Status update should\n// only be allowed if version match.\nfunc (podDisruptionBudgetStrategy) AllowUnconditionalUpdate() bool {"
  }
]