[
  {
    "id" : "ac8f7fb8-12c9-46b6-8169-12830e6b53fe",
    "prId" : 91939,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/91939#pullrequestreview-431848097",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ac5ed5b1-4793-45bc-a5b7-7566fc6433d8",
        "parentId" : null,
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "Anything under status should be dropped",
        "createdAt" : "2020-06-10T22:46:58Z",
        "updatedAt" : "2020-07-03T19:55:18Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "84b17225-b07a-4de5-b343-a7956c77c26c",
        "parentId" : "ac5ed5b1-4793-45bc-a5b7-7566fc6433d8",
        "authorId" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "body" : "When external-provisioner has a new capacity value for which no `CSIStorageCapacity` object exists yet, it should be able to set the value directly when creating that object, instead of first having to create the object without status and then updating the status separately. IMHO it makes no sense to enforce the latter here.\r\n\r\n",
        "createdAt" : "2020-06-12T09:06:19Z",
        "updatedAt" : "2020-07-03T19:55:18Z",
        "lastEditedBy" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "tags" : [
        ]
      },
      {
        "id" : "3957ff3b-d412-404e-9906-d9c480666019",
        "parentId" : "ac5ed5b1-4793-45bc-a5b7-7566fc6433d8",
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "I'm checking with api approvers to see if this is allowed. Everything I've seen drops status on create. The general idea is that spec is user defined, and status is set by the system/controller, so users shouldn't be setting the status. This particular case is odd because the system is the one creating the object too.",
        "createdAt" : "2020-06-16T20:36:15Z",
        "updatedAt" : "2020-07-03T19:55:18Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      }
    ],
    "commit" : "9a66e8e1b5820027c1747cff052d335e29597fc2",
    "line" : 46,
    "diffHunk" : "@@ -1,1 +44,48 @@// PrepareForCreate is currently a NOP.\nfunc (csiStorageCapacityStrategy) PrepareForCreate(ctx context.Context, obj runtime.Object) {\n}\n\nfunc (csiStorageCapacityStrategy) Validate(ctx context.Context, obj runtime.Object) field.ErrorList {"
  },
  {
    "id" : "9e40c22e-80a9-4a9d-9a2e-505721c494d7",
    "prId" : 91939,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/91939#pullrequestreview-431848097",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "409d4fe7-413c-4dad-b048-102995d6e25d",
        "parentId" : null,
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "status needs to be preserved",
        "createdAt" : "2020-06-10T22:57:26Z",
        "updatedAt" : "2020-07-03T19:55:18Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "979a2268-456a-4564-a346-a1ce4e267275",
        "parentId" : "409d4fe7-413c-4dad-b048-102995d6e25d",
        "authorId" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "body" : "As with create, I think allowing status changes during update makes sense. It's better to just update the sub-resource, but I don't think we need to enforce that via the API implementation.\r\n",
        "createdAt" : "2020-06-12T09:12:21Z",
        "updatedAt" : "2020-07-03T19:55:18Z",
        "lastEditedBy" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "tags" : [
        ]
      },
      {
        "id" : "418842e5-f14a-4686-ae2b-e60e742e6b99",
        "parentId" : "409d4fe7-413c-4dad-b048-102995d6e25d",
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "Updating spec and status together is explicitly not allowed by the [api conventions](https://github.com/kubernetes/community/blame/master/contributors/devel/sig-architecture/api-conventions.md#L278). This is to prevent status from being overridden with a stale status if the consumer only intended to update the spec.",
        "createdAt" : "2020-06-16T20:37:48Z",
        "updatedAt" : "2020-07-03T19:55:18Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      }
    ],
    "commit" : "9a66e8e1b5820027c1747cff052d335e29597fc2",
    "line" : 66,
    "diffHunk" : "@@ -1,1 +64,68 @@\n// PrepareForUpdate is currently a NOP.\nfunc (csiStorageCapacityStrategy) PrepareForUpdate(ctx context.Context, obj, old runtime.Object) {\n}\n"
  }
]