[
  {
    "id" : "325e268d-bd8a-423c-a9a9-8aa86c62a4c0",
    "prId" : 33785,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/33785#pullrequestreview-2384712",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b201a0c4-9555-48bb-879f-cbe24269a857",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "@ericchiang This is probably the most controversial change.  Remember that the loopback authorization we use actually inspects to match on the known group name.  This means that we know that `system:masters` group is never escalating its permissions when creating policy resources.  This is useful for allowing bootstrapping to actually use the API server instead of going direct to etcd.  It's always allowed to add roles, even when no roles exist ahead of time.\n",
        "createdAt" : "2016-09-29T20:30:39Z",
        "updatedAt" : "2016-09-30T14:34:37Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "fb00ebe0-b06c-462e-b6dd-e647ca0d536d",
        "parentId" : "b201a0c4-9555-48bb-879f-cbe24269a857",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "@liggitt and I spoke at length about it.  He doesn't think it looks pretty, but couldn't come up with a reason to avoid this and makes the bootstrapping flow very clean in comparison to what we did in openshift.\n",
        "createdAt" : "2016-09-29T20:31:21Z",
        "updatedAt" : "2016-09-30T14:34:37Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "add6b079-0e5c-4767-8f00-2462e924d18e",
        "parentId" : "b201a0c4-9555-48bb-879f-cbe24269a857",
        "authorId" : "0af48e59-4be9-46ce-9275-aa218813b6fd",
        "body" : "This is actually one of the options @erictune and I discussed around bootstrapping when we settled on the \"super-user\" option.\n\nIt sucks that this is going to stick around and be another user facing way to circumvent the escalation checks. Do you and @liggitt see this as being an eventual replacement for the super user flag? Or does this bootstrapping work end with the user not needing to ever utilize this? I guess I'm missing that context.\n",
        "createdAt" : "2016-09-30T17:58:38Z",
        "updatedAt" : "2016-09-30T17:58:38Z",
        "lastEditedBy" : "0af48e59-4be9-46ce-9275-aa218813b6fd",
        "tags" : [
        ]
      },
      {
        "id" : "bb613b32-b91e-4522-a349-b41e67278c11",
        "parentId" : "b201a0c4-9555-48bb-879f-cbe24269a857",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "> It sucks that this is going to stick around and be another user facing way to circumvent the escalation checks. Do you and @liggitt see this as being an eventual replacement for the super user flag? Or does this bootstrapping work end with the user not needing to ever utilize this? I guess I'm missing that context.\n\nI think the super-user flag will go away once we're able to mint a super-user client certificate during startup.  That's something that @dims was looking at as I recall.\n\nI also don't think this ends up being very user-facing, since the primary use of this group is for infrastructure to infrastructure communication.\n",
        "createdAt" : "2016-09-30T18:04:03Z",
        "updatedAt" : "2016-09-30T18:04:04Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "920a9619-61cf-4f2b-a359-64b5cdf97cc0",
        "parentId" : "b201a0c4-9555-48bb-879f-cbe24269a857",
        "authorId" : "0af48e59-4be9-46ce-9275-aa218813b6fd",
        "body" : "> I also don't think this ends up being very user-facing, since the primary use of this group is for infrastructure to infrastructure communication.\n\nEven if it's not user facing we'll still want to warn admins that this is a special group, particularly for those of use who are pulling groups from an outside source.\n",
        "createdAt" : "2016-09-30T19:06:52Z",
        "updatedAt" : "2016-09-30T19:06:52Z",
        "lastEditedBy" : "0af48e59-4be9-46ce-9275-aa218813b6fd",
        "tags" : [
        ]
      }
    ],
    "commit" : "57039cfdfadf26575469f425b029e99309b2d079",
    "line" : null,
    "diffHunk" : "@@ -1,1 +49,53 @@\t\t}\n\n\t\t// system:masters is special because the API server uses it for privileged loopback connections\n\t\t// therefore we know that a member of system:masters can always do anything\n\t\tfor _, group := range u.GetGroups() {"
  }
]