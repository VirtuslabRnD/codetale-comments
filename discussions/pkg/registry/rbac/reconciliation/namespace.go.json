[
  {
    "id" : "9f50c17d-a36a-466c-aee1-8dad0fbd8143",
    "prId" : 70351,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/70351#pullrequestreview-169366016",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "140e9aeb-cecc-4ff1-80c6-2f621fb26a19",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "don't filter `IsForbidden` here, if the namespace couldn't be gotten or created, I'd expect an error to be returned to the caller. The caller can decide to fail, log, or ignore the error (in this case, I think we would either log or ignore a forbidden error?)",
        "createdAt" : "2018-10-29T13:53:37Z",
        "updatedAt" : "2018-10-29T15:31:43Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "8f5b72be-e52a-42ef-a37a-fa4cd1a4fd5e",
        "parentId" : "140e9aeb-cecc-4ff1-80c6-2f621fb26a19",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "alternately, if this method has the possibility to return with no error with the namespace not actually created, change the name of the method to reflect that weaker guarantee",
        "createdAt" : "2018-10-29T13:54:20Z",
        "updatedAt" : "2018-10-29T15:31:43Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "f21d2cf2-4022-4844-9102-a2c433908597",
        "parentId" : "140e9aeb-cecc-4ff1-80c6-2f621fb26a19",
        "authorId" : "e58080d6-2177-419f-a546-b51075d7bcb8",
        "body" : "updated func name and godoc",
        "createdAt" : "2018-10-29T15:32:19Z",
        "updatedAt" : "2018-10-29T15:32:20Z",
        "lastEditedBy" : "e58080d6-2177-419f-a546-b51075d7bcb8",
        "tags" : [
        ]
      }
    ],
    "commit" : "543dcb6de53280f23ead0a1526afaa8c84209dfc",
    "line" : 43,
    "diffHunk" : "@@ -1,1 +41,45 @@\t_, createErr := client.Create(ns)\n\n\treturn utilerrors.FilterOut(createErr, apierrors.IsAlreadyExists, apierrors.IsForbidden)\n}"
  }
]