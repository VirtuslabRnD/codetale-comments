[
  {
    "id" : "a1f150a3-59d6-4964-a548-b137857f4f15",
    "prId" : 44449,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/44449#pullrequestreview-32666457",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "62c09207-be90-418e-b4e7-810f364ade6b",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "type the function please.",
        "createdAt" : "2017-04-13T15:21:09Z",
        "updatedAt" : "2017-04-20T14:53:00Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "810a802b-d157-411b-a3fd-e2241f5394a5",
        "parentId" : "62c09207-be90-418e-b4e7-810f364ade6b",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "can't without adding a package dependency between `pkg/registry/rbac/validation` and `plugin/pkg/auth/authorizer/rbac`, two level interface problem",
        "createdAt" : "2017-04-13T15:41:55Z",
        "updatedAt" : "2017-04-20T14:53:00Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "67360883bc801b0f1334b146e8dce6f282e50e7e",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +43,47 @@\t// VisitRulesFor invokes visitor() with each rule that applies to a given user in a given namespace, and each error encountered resolving those rules.\n\t// If visitor() returns false, visiting is short-circuited.\n\tVisitRulesFor(user user.Info, namespace string, visitor func(rule *rbac.PolicyRule, err error) bool)\n}\n"
  },
  {
    "id" : "57ff46ce-0caa-4837-a593-329db39ee50a",
    "prId" : 44449,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/44449#pullrequestreview-33416894",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "26f150b9-e7f1-4a7d-977c-039fb058383e",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "A word about the `err` argument of the visitor wouldn't harm.",
        "createdAt" : "2017-04-18T07:34:30Z",
        "updatedAt" : "2017-04-20T14:53:00Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "28b53e07-9cf4-49c9-8d8a-216a0eb6b080",
        "parentId" : "26f150b9-e7f1-4a7d-977c-039fb058383e",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "other than it being a resolution error, not sure what else to say",
        "createdAt" : "2017-04-18T18:35:25Z",
        "updatedAt" : "2017-04-20T14:53:00Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "f213eb8c-5d07-4d33-a9fe-10f3c7b21509",
        "parentId" : "26f150b9-e7f1-4a7d-977c-039fb058383e",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "I meant the `rule == nil` case.",
        "createdAt" : "2017-04-19T06:54:46Z",
        "updatedAt" : "2017-04-20T14:53:00Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "67360883bc801b0f1334b146e8dce6f282e50e7e",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +43,47 @@\t// VisitRulesFor invokes visitor() with each rule that applies to a given user in a given namespace, and each error encountered resolving those rules.\n\t// If visitor() returns false, visiting is short-circuited.\n\tVisitRulesFor(user user.Info, namespace string, visitor func(rule *rbac.PolicyRule, err error) bool)\n}\n"
  }
]