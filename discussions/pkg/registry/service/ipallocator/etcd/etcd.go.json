[
  {
    "id" : "88ff8619-2d55-45c5-9893-a1ca87dd4878",
    "prId" : 7704,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1c9ae685-aed2-4fde-911a-bfcd76a75cb3",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "Good enough.  When we get to a port allocator, we can finish whatever is needed to make a second range config here.\n",
        "createdAt" : "2015-05-07T22:21:57Z",
        "updatedAt" : "2015-05-08T20:04:16Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "90044caa-b341-49e1-bdff-c9b17fc089dc",
        "parentId" : "1c9ae685-aed2-4fde-911a-bfcd76a75cb3",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Yeah I'll probably take the hit there too because i have to do UID allocation in OpenShift (which isn't IP based).  So we'll have 3 use cases which should be enough to get the right mix.\n\n----- Original Message -----\n\n> > +// TODO: allow multiple allocations to be tried at once\n> > +// TODO: subdivide the keyspace to reduce conflicts\n> > +// TODO: investigate issuing a CAS without reading first\n> > +type Etcd struct {\n> > -   lock sync.Mutex\n> >   +\n> > -   alloc  ipallocator.Snapshottable\n> > -   helper tools.EtcdHelper\n> > -   last   string\n> >   +}\n> >   +\n> >   +// Etcd implements ipallocator.Interface and service.IPRegistry\n> >   +var _ ipallocator.Interface = &Etcd{}\n> >   +var _ service.IPRegistry = &Etcd{}\n> >   +\n> >   +const baseKey = \"/ranges/serviceips\"\n> \n> Good enough.  When we get to a port allocator, we can finish whatever is\n> needed to make a second range config here.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/GoogleCloudPlatform/kubernetes/pull/7704/files#r29901815\n",
        "createdAt" : "2015-05-07T22:25:09Z",
        "updatedAt" : "2015-05-08T20:04:16Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "8bbb64cd8bb225bc725e8577b66264a867280502",
    "line" : 49,
    "diffHunk" : "@@ -1,1 +47,51 @@var _ service.IPRegistry = &Etcd{}\n\nconst baseKey = \"/ranges/serviceips\"\n\n// NewEtcd returns a service PortalIP ipallocator that is backed by Etcd and can manage"
  }
]