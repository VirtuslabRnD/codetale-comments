[
  {
    "id" : "14f6cae0-2920-419d-bf02-0592e48d6f20",
    "prId" : 22285,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/22285#pullrequestreview-46142877",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "15ad8a17-fd52-49b1-9e13-09c84baf553a",
        "parentId" : null,
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "Why this change?\n",
        "createdAt" : "2016-04-27T11:40:19Z",
        "updatedAt" : "2016-04-27T11:40:19Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      },
      {
        "id" : "d8ce1513-63b6-46ae-a44d-a1b5491fdd33",
        "parentId" : "15ad8a17-fd52-49b1-9e13-09c84baf553a",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "This prevents the exported resource from being created on another cluster, which defeats the purpose of export.\n",
        "createdAt" : "2016-04-28T22:42:12Z",
        "updatedAt" : "2016-04-28T22:42:12Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "193f68ab-ee43-4b2d-b217-1fdadd59e1da",
        "parentId" : "15ad8a17-fd52-49b1-9e13-09c84baf553a",
        "authorId" : "5a764df5-fdf3-4b03-8549-b0e2d9c30dad",
        "body" : "facing issue -  https://github.com/kubernetes/kubernetes/issues/47976, https://github.com/kubernetes/kubernetes/issues/28548",
        "createdAt" : "2017-06-25T10:54:34Z",
        "updatedAt" : "2017-06-25T10:54:34Z",
        "lastEditedBy" : "5a764df5-fdf3-4b03-8549-b0e2d9c30dad",
        "tags" : [
        ]
      }
    ],
    "commit" : "5fdfc4bde38a2eb2721b61e5c59938ca1bc2e061",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +91,95 @@\t}\n\tif t.Spec.ClusterIP != api.ClusterIPNone {\n\t\tt.Spec.ClusterIP = \"<unknown>\"\n\t}\n\tif t.Spec.Type == api.ServiceTypeNodePort {"
  },
  {
    "id" : "fa7e6808-2e9b-4b29-b9a5-f6559601435c",
    "prId" : 19541,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ba79c12c-53fd-49ba-a2f3-7dc97d75a98a",
        "parentId" : null,
        "authorId" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "body" : "please add a TestServiceStatusStrategy in strategy_test that verifies that spec is overwritten\n",
        "createdAt" : "2016-01-13T23:51:30Z",
        "updatedAt" : "2016-01-31T20:40:00Z",
        "lastEditedBy" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "tags" : [
        ]
      }
    ],
    "commit" : "90b4662d8d02d98c2df4ed36e9f0b1e1e016517a",
    "line" : null,
    "diffHunk" : "@@ -1,1 +127,131 @@\n// PrepareForUpdate clears fields that are not allowed to be set by end users on update of status\nfunc (serviceStatusStrategy) PrepareForUpdate(obj, old runtime.Object) {\n\tnewService := obj.(*api.Service)\n\toldService := old.(*api.Service)"
  },
  {
    "id" : "24838b61-70a4-4dc4-ac03-227bfe1e850a",
    "prId" : 19541,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e27d1e0f-6406-4a44-b084-8fdb95b5a1ad",
        "parentId" : null,
        "authorId" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "body" : "please add a godoc for exported variable:\n// StatusStrategy is the default logic invoked when creating and updating Services.\n",
        "createdAt" : "2016-01-13T23:52:26Z",
        "updatedAt" : "2016-01-31T20:40:00Z",
        "lastEditedBy" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "tags" : [
        ]
      }
    ],
    "commit" : "90b4662d8d02d98c2df4ed36e9f0b1e1e016517a",
    "line" : null,
    "diffHunk" : "@@ -1,1 +124,128 @@\n// StatusStrategy is the default logic invoked when updating service status.\nvar StatusStrategy = serviceStatusStrategy{Strategy}\n\n// PrepareForUpdate clears fields that are not allowed to be set by end users on update of status"
  },
  {
    "id" : "3a65947f-47ff-4051-a7ac-0dc487592666",
    "prId" : 16152,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8f205e95-5c7a-49e8-9fe6-35d29b005e27",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Can you move the matching predicate here, too? As in #16495.\n",
        "createdAt" : "2015-10-29T17:43:40Z",
        "updatedAt" : "2015-11-02T11:57:31Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "abf11580-d5e0-47b2-9dd9-d1aa0373ede6",
        "parentId" : "8f205e95-5c7a-49e8-9fe6-35d29b005e27",
        "authorId" : "72935ebf-c497-440a-ac8d-70d86560a131",
        "body" : "Yes, I moved too. please review.\n",
        "createdAt" : "2015-10-30T08:52:03Z",
        "updatedAt" : "2015-11-02T11:57:31Z",
        "lastEditedBy" : "72935ebf-c497-440a-ac8d-70d86560a131",
        "tags" : [
        ]
      }
    ],
    "commit" : "3603b14977531e7dbd6e7f1490b04146726a3a51",
    "line" : 76,
    "diffHunk" : "@@ -1,1 +74,78 @@func (svcStrategy) AllowUnconditionalUpdate() bool {\n\treturn true\n}\n\nfunc MatchServices(label labels.Selector, field fields.Selector) generic.Matcher {"
  }
]