[
  {
    "id" : "93f39e0d-4b61-4583-9a58-b05f7b6d0caf",
    "prId" : 17892,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a64c963e-f567-47ad-97ea-d616130972e6",
        "parentId" : null,
        "authorId" : "109e4fe5-4b7d-49ac-a32f-b25103830bbf",
        "body" : "This won't work. Due to Go's scoping rules for the \"for loop\" vars, the go function will not evaluate \"name\" and \"server\" in the way you want (I believe it'll only get the last entry). See https://play.golang.org/p/yRbY3uRb39 for an example.\n",
        "createdAt" : "2015-12-01T00:19:55Z",
        "updatedAt" : "2015-12-02T01:51:40Z",
        "lastEditedBy" : "109e4fe5-4b7d-49ac-a32f-b25103830bbf",
        "tags" : [
        ]
      },
      {
        "id" : "64bfe3c5-0c0a-43d9-9eba-cf80150f7778",
        "parentId" : "a64c963e-f567-47ad-97ea-d616130972e6",
        "authorId" : "fa03ed6a-9d2a-44b6-8438-e21ee4a2ce4d",
        "body" : "Thanks for pointing out this,fixed.\n",
        "createdAt" : "2015-12-01T02:25:31Z",
        "updatedAt" : "2015-12-02T01:51:40Z",
        "lastEditedBy" : "fa03ed6a-9d2a-44b6-8438-e21ee4a2ce4d",
        "tags" : [
        ]
      }
    ],
    "commit" : "70cce2847ab71164cadd4f185237a3cd0f5c7888",
    "line" : null,
    "diffHunk" : "@@ -1,1 +61,65 @@\t\tgo func(name string, server apiserver.Server) {\n\t\t\tdefer wait.Done()\n\t\t\tstatus := rs.getComponentStatus(name, server)\n\t\t\tstatuses <- *status\n\t\t}(k, v)"
  },
  {
    "id" : "8a95ae78-40ae-4ac0-915e-e545a73a2f98",
    "prId" : 6597,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "076c0c62-db91-43d4-bbba-7ad3bb34f4d3",
        "parentId" : null,
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "Eventually I want the apiserver to be a dumb, CRUDy server. Eventually, a controller would need to implement all the business logic and post status back. \n\nWe'll need a registration mechanism for components. Right now, we sort of have a fixed set of components on one node, but that's about to change Real Soon Now. Already we have \"add ons\" that run on the cluster but which are required, or will be (DNS), and full API plugins are planned. The components are all being converted to static pods as we speak. Others are working on HA, so components will be replicated. Full self-hosting of those components is the eventual goal.\n\nWhat should this return if there are 5 etcd instances, 3 apiservers, 2 schedulers, and 2 controller managers?\n",
        "createdAt" : "2015-04-17T07:18:18Z",
        "updatedAt" : "2015-04-17T19:00:29Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "049bf3f4-6d9e-43fa-a4f5-27924800bb31",
        "parentId" : "076c0c62-db91-43d4-bbba-7ad3bb34f4d3",
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "I'm wishing we had the experimental API prefix discussed in #6363 and elsewhere.\n",
        "createdAt" : "2015-04-17T07:20:18Z",
        "updatedAt" : "2015-04-17T19:00:29Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "7d654768-96e4-49c8-9857-bdda7ef15f09",
        "parentId" : "076c0c62-db91-43d4-bbba-7ad3bb34f4d3",
        "authorId" : "109e4fe5-4b7d-49ac-a32f-b25103830bbf",
        "body" : "\"What should this return if there are 5 etcd instances, 3 apiservers, 2 schedulers, and 2 controller managers?\"\n\nThe call is to the current master api server, which tries it best to return the status of the currently active components. It seems irrelevant to list the \"stand-by\" components. When HA become available, this \"extended\" reporting could be done under an option flag.\n",
        "createdAt" : "2015-04-17T18:29:38Z",
        "updatedAt" : "2015-04-17T19:00:29Z",
        "lastEditedBy" : "109e4fe5-4b7d-49ac-a32f-b25103830bbf",
        "tags" : [
        ]
      }
    ],
    "commit" : "c6ef2ddf8aa8b3b78fa3397476e4184f6f99731e",
    "line" : 55,
    "diffHunk" : "@@ -1,1 +53,57 @@// Note that this call doesn't support labels or selectors.\nfunc (rs *REST) List(ctx api.Context, label labels.Selector, field fields.Selector) (runtime.Object, error) {\n\tservers := rs.GetServersToValidate()\n\n\t// TODO: This should be parallelized."
  }
]