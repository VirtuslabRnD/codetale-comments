[
  {
    "id" : "681a4d49-f75b-471b-92bb-bb3632cb9392",
    "prId" : 93873,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/93873#pullrequestreview-512313101",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f75f34f6-52f7-44ce-8976-65f41a18cc8a",
        "parentId" : null,
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "Same here, can you add a comment saying when ServiceUnavailable is returned?",
        "createdAt" : "2020-10-20T04:08:13Z",
        "updatedAt" : "2020-11-09T23:23:29Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "23f77ce7c62db3761580d06622fbfb1cedaa1293",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +134,138 @@\t\t\t\t\t\t}\n\t\t\t\t\t\t// ServiceUnavailble error is returned when the API server is blocked by storage version updates\n\t\t\t\t\t\tif apierrors.IsServiceUnavailable(err) {\n\t\t\t\t\t\t\tklog.Infof(\"going to retry, unable to create PriorityClass %s: %v\", pc.Name, err)\n\t\t\t\t\t\t\treturn false, nil"
  },
  {
    "id" : "d16f3839-ef89-440f-9975-aa2bb91f0a40",
    "prId" : 71136,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/71136#pullrequestreview-224762896",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ffa1bd1a-e90c-4f4d-aeec-3b5863cc1922",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "these are v1 in https://github.com/kubernetes/kubernetes/pull/73557\r\n\r\nscheduling.SystemPriorityClasses() should probably return versioned objects (and the method might need to move to a different package to be able to do that)",
        "createdAt" : "2019-04-09T18:21:46Z",
        "updatedAt" : "2019-04-09T18:21:47Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "91074bec-f533-4c67-a319-0b4741966a32",
        "parentId" : "ffa1bd1a-e90c-4f4d-aeec-3b5863cc1922",
        "authorId" : "bc182326-9017-48d6-8ee0-4609046c1366",
        "body" : "fixing in this thread https://github.com/kubernetes/kubernetes/pull/76362",
        "createdAt" : "2019-04-10T05:18:06Z",
        "updatedAt" : "2019-04-10T05:18:07Z",
        "lastEditedBy" : "bc182326-9017-48d6-8ee0-4609046c1366",
        "tags" : [
        ]
      }
    ],
    "commit" : "8f601d34131613a4a1245a92fd38a1f6ed680f48",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +108,112 @@\t\t\t\tif err != nil {\n\t\t\t\t\tif apierrors.IsNotFound(err) {\n\t\t\t\t\t\t// TODO: Remove this explicit conversion after scheduling api move to v1\n\t\t\t\t\t\tv1beta1PriorityClass := &schedulingv1beta1.PriorityClass{}\n\t\t\t\t\t\tif err := schedulingapiv1beta1.Convert_scheduling_PriorityClass_To_v1beta1_PriorityClass(pc, v1beta1PriorityClass, nil); err != nil {"
  },
  {
    "id" : "e7219dc3-bf8f-44d3-a770-e169d48e73ed",
    "prId" : 71136,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/71136#pullrequestreview-224762934",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bcbba716-eda6-4386-912f-b2525567f249",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "use the v1 client",
        "createdAt" : "2019-04-09T18:22:03Z",
        "updatedAt" : "2019-04-09T18:22:03Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "905eceb1-9735-4774-ad34-ebedc2ac6e46",
        "parentId" : "bcbba716-eda6-4386-912f-b2525567f249",
        "authorId" : "bc182326-9017-48d6-8ee0-4609046c1366",
        "body" : "> fixing in this thread https://github.com/kubernetes/kubernetes/pull/76362\r\n\r\nditto",
        "createdAt" : "2019-04-10T05:18:18Z",
        "updatedAt" : "2019-04-10T05:18:19Z",
        "lastEditedBy" : "bc182326-9017-48d6-8ee0-4609046c1366",
        "tags" : [
        ]
      }
    ],
    "commit" : "8f601d34131613a4a1245a92fd38a1f6ed680f48",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +32,36 @@\tgenericapiserver \"k8s.io/apiserver/pkg/server\"\n\tserverstorage \"k8s.io/apiserver/pkg/server/storage\"\n\tschedulingclient \"k8s.io/client-go/kubernetes/typed/scheduling/v1beta1\"\n\t\"k8s.io/kubernetes/pkg/api/legacyscheme\"\n\t\"k8s.io/kubernetes/pkg/apis/scheduling\""
  },
  {
    "id" : "14d5a07b-ccf3-4b6f-84bb-c1353cbd58ba",
    "prId" : 60519,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/60519#pullrequestreview-101415220",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c58acc8e-b02d-4bf2-9d47-9955bc2180b4",
        "parentId" : null,
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "can i delete them?  what happens if i do? will they come back only on restart?",
        "createdAt" : "2018-02-28T06:38:12Z",
        "updatedAt" : "2018-03-06T18:07:10Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      },
      {
        "id" : "2f5ad7f9-039f-414f-bae6-9adaed482fa0",
        "parentId" : "c58acc8e-b02d-4bf2-9d47-9955bc2180b4",
        "authorId" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "body" : "If they are deleted, no more new Pods with these priority classes can be created. These PriorityClasses are added back on API server restart.",
        "createdAt" : "2018-02-28T20:15:47Z",
        "updatedAt" : "2018-03-06T18:07:10Z",
        "lastEditedBy" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "tags" : [
        ]
      },
      {
        "id" : "630036b0-58b4-4238-8569-d69c330f87d1",
        "parentId" : "c58acc8e-b02d-4bf2-9d47-9955bc2180b4",
        "authorId" : "38ca4f80-c365-4775-8981-1e56b713b07b",
        "body" : "I think it also means no new critical pods could be created. Can we avoid that? Say something like Delete would return error, if priorityclass name is one of systemclustercritical or systemnodecritical? Not sure if that takes flexibility away from user.",
        "createdAt" : "2018-03-02T03:20:18Z",
        "updatedAt" : "2018-03-06T18:07:11Z",
        "lastEditedBy" : "38ca4f80-c365-4775-8981-1e56b713b07b",
        "tags" : [
        ]
      },
      {
        "id" : "a08ac58f-0603-4b9b-ba98-4bcc16076b44",
        "parentId" : "c58acc8e-b02d-4bf2-9d47-9955bc2180b4",
        "authorId" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "body" : "Looks like we don't have a validation mechanism in our REST layer for delete operations. So, I am not sure if it is possible to prevent deletion of these priority classes. ",
        "createdAt" : "2018-03-02T07:02:28Z",
        "updatedAt" : "2018-03-06T18:07:11Z",
        "lastEditedBy" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "tags" : [
        ]
      },
      {
        "id" : "d1cd979c-edd9-4194-848e-312906517112",
        "parentId" : "c58acc8e-b02d-4bf2-9d47-9955bc2180b4",
        "authorId" : "38ca4f80-c365-4775-8981-1e56b713b07b",
        "body" : "Thanks for the information. I did a quicksearch in the codebase and it seems there are few things like `immortalNamespaces`(basically 'kube-system' and 'defaut' etc), where at the admission plugin level we are prohibiting user to delete them.(https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiserver/pkg/admission/plugin/namespace/lifecycle/admission.go#L77). Wondering if we could do the same thing but I think it can be a different admission controller from priority AdmissionController.",
        "createdAt" : "2018-03-02T15:18:34Z",
        "updatedAt" : "2018-03-06T18:07:11Z",
        "lastEditedBy" : "38ca4f80-c365-4775-8981-1e56b713b07b",
        "tags" : [
        ]
      },
      {
        "id" : "ddf8e1e5-0180-45c2-a451-7e7a0ff63de7",
        "parentId" : "c58acc8e-b02d-4bf2-9d47-9955bc2180b4",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "> Looks like we don't have a validation mechanism in our REST layer for delete operations. So, I am not sure if it is possible to prevent deletion of these priority classes.\r\n\r\nYou can prevent it in the rest handler's Delete function",
        "createdAt" : "2018-03-02T15:31:22Z",
        "updatedAt" : "2018-03-06T18:07:11Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "cc0d2ca2-b335-4523-b8f4-5bc38422ce89",
        "parentId" : "c58acc8e-b02d-4bf2-9d47-9955bc2180b4",
        "authorId" : "38ca4f80-c365-4775-8981-1e56b713b07b",
        "body" : "@liggitt You mean somewhere here? - https://github.com/kubernetes/kubernetes/blob/master/pkg/registry/scheduling/priorityclass/registry.go#L81",
        "createdAt" : "2018-03-02T16:01:01Z",
        "updatedAt" : "2018-03-06T18:07:11Z",
        "lastEditedBy" : "38ca4f80-c365-4775-8981-1e56b713b07b",
        "tags" : [
        ]
      },
      {
        "id" : "c690dbe5-a399-4229-83b7-b5831ae9b42b",
        "parentId" : "c58acc8e-b02d-4bf2-9d47-9955bc2180b4",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "inside the impl of `Delete` (which the priorityclassstorage would need to override, put the guard in, then delegate, like:\r\n\r\n```go\r\nfunc (r *REST) Delete(ctx genericapirequest.Context, name string, options *metav1.DeleteOptions) (runtime.Object, bool, error) {\r\n\t// if name is in set of expected system priority classes, forbid and return\r\n\treturn r.store.Delete(ctx, name, options)\r\n}\r\n```",
        "createdAt" : "2018-03-02T16:11:22Z",
        "updatedAt" : "2018-03-06T18:07:11Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "44e55f60-4dc4-4e8d-a8bf-c28b99b87f56",
        "parentId" : "c58acc8e-b02d-4bf2-9d47-9955bc2180b4",
        "authorId" : "38ca4f80-c365-4775-8981-1e56b713b07b",
        "body" : "Understood. Thanks @liggitt. Unrelated to this change, when do we use this mechanism vs one I mentioned earlier for kube-system(is this mechanism only for top level objects?)",
        "createdAt" : "2018-03-02T16:17:13Z",
        "updatedAt" : "2018-03-06T18:07:11Z",
        "lastEditedBy" : "38ca4f80-c365-4775-8981-1e56b713b07b",
        "tags" : [
        ]
      },
      {
        "id" : "96f68e77-070e-4a72-8208-69adf5eff272",
        "parentId" : "c58acc8e-b02d-4bf2-9d47-9955bc2180b4",
        "authorId" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "body" : "Thanks, @liggitt  and @ravisantoshgudimetla. I added the check.",
        "createdAt" : "2018-03-02T19:24:51Z",
        "updatedAt" : "2018-03-06T18:07:11Z",
        "lastEditedBy" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "tags" : [
        ]
      },
      {
        "id" : "8ae2c689-563f-451f-8d52-a9b05f652374",
        "parentId" : "c58acc8e-b02d-4bf2-9d47-9955bc2180b4",
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "thanks for updating.",
        "createdAt" : "2018-03-06T04:23:18Z",
        "updatedAt" : "2018-03-06T18:07:11Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      }
    ],
    "commit" : "9592a9ecf45d4dddb0009b0c8b2bd90b6c063a65",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +65,69 @@\nfunc (p RESTStorageProvider) PostStartHook() (string, genericapiserver.PostStartHookFunc, error) {\n\treturn PostStartHookName, AddSystemPriorityClasses(), nil\n}\n"
  },
  {
    "id" : "5ae1fb31-d9f2-401e-9076-05b1f6dd4ef2",
    "prId" : 60519,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/60519#pullrequestreview-100689919",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c3b5d9cd-bf6e-467b-8d7f-5b99b22ad7f3",
        "parentId" : null,
        "authorId" : "38ca4f80-c365-4775-8981-1e56b713b07b",
        "body" : "nit: Logging it here might be helpful",
        "createdAt" : "2018-03-02T03:04:14Z",
        "updatedAt" : "2018-03-06T18:07:10Z",
        "lastEditedBy" : "38ca4f80-c365-4775-8981-1e56b713b07b",
        "tags" : [
        ]
      },
      {
        "id" : "7ff311e7-83c6-4e12-abe4-3c93f9a0b966",
        "parentId" : "c3b5d9cd-bf6e-467b-8d7f-5b99b22ad7f3",
        "authorId" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "body" : "sure. ",
        "createdAt" : "2018-03-02T07:10:40Z",
        "updatedAt" : "2018-03-06T18:07:11Z",
        "lastEditedBy" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "tags" : [
        ]
      }
    ],
    "commit" : "9592a9ecf45d4dddb0009b0c8b2bd90b6c063a65",
    "line" : 63,
    "diffHunk" : "@@ -1,1 +90,94 @@\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Unable to get the priority class for reasons other than \"not found\".\n\t\t\t\t\t\tglog.Warningf(\"unable to get PriorityClass %v: %v. Retrying...\", pc.Name, err)\n\t\t\t\t\t\treturn false, err"
  }
]