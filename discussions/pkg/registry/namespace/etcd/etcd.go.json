[
  {
    "id" : "cdd5c524-a0fb-41ec-889c-ad45a0ebd6a1",
    "prId" : 24839,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7eac1082-230b-4bc7-8e11-19cbd14acb86",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Else, check that namespace.UID == options.Preconditions.UID? (i.e., bail early)\n",
        "createdAt" : "2016-04-27T21:47:29Z",
        "updatedAt" : "2016-04-28T15:50:48Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "e7361cb4-d13d-4947-b01e-2d5a09f7e424",
        "parentId" : "7eac1082-230b-4bc7-8e11-19cbd14acb86",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "sure, do we return conflict errors in those cases?\n",
        "createdAt" : "2016-04-27T21:49:35Z",
        "updatedAt" : "2016-04-28T15:50:48Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "61bd7a92-6084-492a-9b41-d8ed749a2980",
        "parentId" : "7eac1082-230b-4bc7-8e11-19cbd14acb86",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Yes, I think that's what @caesarxuchao did in the place I'm thinking of.\n",
        "createdAt" : "2016-04-27T21:54:05Z",
        "updatedAt" : "2016-04-28T15:50:48Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "f2caaa07-3967-4fc6-b044-174373f1a18b",
        "parentId" : "7eac1082-230b-4bc7-8e11-19cbd14acb86",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "done\n",
        "createdAt" : "2016-04-28T15:52:16Z",
        "updatedAt" : "2016-04-28T15:52:16Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "1e5815872e432ae7616e8cc7d0e5d28197464c41",
    "line" : null,
    "diffHunk" : "@@ -1,1 +118,122 @@\t\t)\n\t\treturn nil, err\n\t}\n\n\t// upon first request to delete, we switch the phase to start namespace termination"
  },
  {
    "id" : "04bc47db-9963-446b-a25f-5c6e163cbcff",
    "prId" : 24839,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "af11595b-ebc2-4883-a65f-f7e93ed57792",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Does it get deleted automatically when the last finalizer is removed?\n",
        "createdAt" : "2016-04-27T21:50:07Z",
        "updatedAt" : "2016-04-28T15:50:48Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "56b01d4d-55a7-45a0-8762-88668ac688e2",
        "parentId" : "af11595b-ebc2-4883-a65f-f7e93ed57792",
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "no, the namespace controller sends an additional delete call.\n",
        "createdAt" : "2016-04-27T21:54:28Z",
        "updatedAt" : "2016-04-28T15:50:48Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      },
      {
        "id" : "c819df0d-d14c-4965-9ff6-37cf4b27096a",
        "parentId" : "af11595b-ebc2-4883-a65f-f7e93ed57792",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "yes, the namespace controller handles that:\nhttps://github.com/kubernetes/kubernetes/blob/master/pkg/controller/namespace/namespace_controller_utils.go#L369-L376\n",
        "createdAt" : "2016-04-27T21:56:36Z",
        "updatedAt" : "2016-04-28T15:50:48Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "773b11bd-1962-4190-828d-614dc00d772f",
        "parentId" : "af11595b-ebc2-4883-a65f-f7e93ed57792",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "For garbage collector, we were planning on making the update path auto delete things with a deletion timestamp when the last finalizer is removed. Do you have any objections to changing that?\n",
        "createdAt" : "2016-04-27T23:12:06Z",
        "updatedAt" : "2016-04-28T15:50:48Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "78e7767b-3ff8-4f7b-bc20-3fa42e60f486",
        "parentId" : "af11595b-ebc2-4883-a65f-f7e93ed57792",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "That would work much better if multiple components were removing finalizers, assuming you can craft a reasonable PATCH request that removes a single finalizer.\n",
        "createdAt" : "2016-04-27T23:13:08Z",
        "updatedAt" : "2016-04-28T15:50:48Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "1e5815872e432ae7616e8cc7d0e5d28197464c41",
    "line" : 89,
    "diffHunk" : "@@ -1,1 +166,170 @@\t// prior to final deletion, we must ensure that finalizers is empty\n\tif len(namespace.Spec.Finalizers) != 0 {\n\t\terr = apierrors.NewConflict(api.Resource(\"namespaces\"), namespace.Name, fmt.Errorf(\"The system is ensuring all content is removed from this namespace.  Upon completion, this namespace will automatically be purged by the system.\"))\n\t\treturn nil, err\n\t}"
  },
  {
    "id" : "bf620f97-fe93-4628-a81c-e875d5587a3a",
    "prId" : 24839,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9993a990-57f9-47c6-9457-d4430aeec77c",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "These changes seem good but unrelated-- do they really need to be cherrypicked?\n",
        "createdAt" : "2016-04-27T21:51:18Z",
        "updatedAt" : "2016-04-28T15:50:48Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "64d124a1-15e1-4b59-aaeb-fee562016c90",
        "parentId" : "9993a990-57f9-47c6-9457-d4430aeec77c",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "UID preconditions didn't exist in 1.2, I'll adjust appropriately when I cherry pick\n",
        "createdAt" : "2016-04-28T15:51:53Z",
        "updatedAt" : "2016-04-28T15:51:53Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "1e5815872e432ae7616e8cc7d0e5d28197464c41",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +102,106 @@\tnamespace := nsObj.(*api.Namespace)\n\n\t// Ensure we have a UID precondition\n\tif options == nil {\n\t\toptions = api.NewDeleteOptions(0)"
  },
  {
    "id" : "bec35c1d-b055-4fac-bc52-2e804a8d5f05",
    "prId" : 5554,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d861129e-89e7-4cc7-a8c4-57ba679c131f",
        "parentId" : null,
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "You can invoke the embedded method here.\n",
        "createdAt" : "2015-03-18T03:19:35Z",
        "updatedAt" : "2015-03-24T14:44:45Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "84c9709299c2928d758a028cbab0d513ba739c9d",
    "line" : 86,
    "diffHunk" : "@@ -1,1 +114,118 @@}\n\nfunc (r *FinalizeREST) New() runtime.Object {\n\treturn r.store.New()\n}"
  }
]