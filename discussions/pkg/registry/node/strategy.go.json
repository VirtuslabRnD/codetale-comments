[
  {
    "id" : "4218d8b6-2c40-442d-b098-7cca769d3ca9",
    "prId" : 16153,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "babf5d4e-bb78-4379-826f-acf3c8a0a523",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "hopefully anyone using the API proxy to reach kubelets was not specifying a port... anyone who was specifying 10250 against < 1.1 would now be broken against kubelets with other ports... not much we can do about that, I guess :-/\n",
        "createdAt" : "2015-11-17T14:51:31Z",
        "updatedAt" : "2015-12-02T12:38:30Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "c633216f-13c7-4b36-9270-67a685dfe18b",
        "parentId" : "babf5d4e-bb78-4379-826f-acf3c8a0a523",
        "authorId" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "body" : "Well, we're not changing default port or anything. And if someone is explicitly specifying port, he should not be surprised if changing ports on which Kubelets listens will break his setup. The important thing is that by default all 'old' setups should work exactly as before.\n",
        "createdAt" : "2015-11-17T14:55:25Z",
        "updatedAt" : "2015-12-02T12:38:30Z",
        "lastEditedBy" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "tags" : [
        ]
      },
      {
        "id" : "c4d195c0-6701-466b-b21b-7edcc033a15a",
        "parentId" : "babf5d4e-bb78-4379-826f-acf3c8a0a523",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "Right, just thinking of consumers that are built to fetch things from all kubelets, and don't know to look at the daemon port. Like I said, hopefully they are not specifying a port, rather than hardcoding the old default\n",
        "createdAt" : "2015-11-17T14:59:05Z",
        "updatedAt" : "2015-12-02T12:38:30Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "18eb1ace-fdb4-438c-9d40-450fdd0394d4",
        "parentId" : "babf5d4e-bb78-4379-826f-acf3c8a0a523",
        "authorId" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "body" : "I completely agree.\n",
        "createdAt" : "2015-11-23T14:55:44Z",
        "updatedAt" : "2015-12-02T12:38:30Z",
        "lastEditedBy" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "tags" : [
        ]
      }
    ],
    "commit" : "459131fd9293aa107b18fb312afe2e04c5175d1b",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +171,175 @@\t\tkubeletPort = ports.KubeletPort\n\t}\n\tif portReq == \"\" || strconv.Itoa(kubeletPort) == portReq {\n\t\tscheme, port, kubeletTransport, err := connection.GetConnectionInfo(ctx, node.Name)\n\t\tif err != nil {"
  },
  {
    "id" : "ba6f5b16-d08a-404f-80e5-c22136b7e8b1",
    "prId" : 12919,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e8bce9fb-1176-4372-a3f5-1f24a3d438cd",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "What is the cast to uint64 for? Use FormatInt and don't do the cast. (If you're trying to ensure that it's nonnegative this way, it's definitely wrong--casting doesn't do saturation.)\n",
        "createdAt" : "2015-10-13T21:01:06Z",
        "updatedAt" : "2015-10-21T15:19:43Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "9cc84b09-82e3-4000-8290-96f19f902652",
        "parentId" : "e8bce9fb-1176-4372-a3f5-1f24a3d438cd",
        "authorId" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "body" : "I'm not really sure what I was thinking when writing this. Probably something interesting, but not related to coding;)\n",
        "createdAt" : "2015-10-14T08:59:15Z",
        "updatedAt" : "2015-10-21T15:19:43Z",
        "lastEditedBy" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "tags" : [
        ]
      },
      {
        "id" : "574487f1-15d4-44a4-be52-2d1a2f7b1592",
        "parentId" : "e8bce9fb-1176-4372-a3f5-1f24a3d438cd",
        "authorId" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "body" : "OK, now I remember - port is an `uint` and there's not FormatUint for uint32 type. golang FTW!\n",
        "createdAt" : "2015-10-14T10:17:10Z",
        "updatedAt" : "2015-10-21T15:19:43Z",
        "lastEditedBy" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "tags" : [
        ]
      },
      {
        "id" : "a7eb1cd2-01fc-4ee3-a272-a70797a60853",
        "parentId" : "e8bce9fb-1176-4372-a3f5-1f24a3d438cd",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "oh, gotcha. That makes more sense now, sorry!\n\nOn Wed, Oct 14, 2015 at 3:17 AM, Marek Grabowski notifications@github.com\nwrote:\n\n> In pkg/registry/node/strategy.go\n> https://github.com/kubernetes/kubernetes/pull/12919#discussion_r41976630\n> :\n> \n> > ```\n> >     scheme, port, kubeletTransport, err := connection.GetConnectionInfo(host)\n> >     if err != nil {\n> >         return nil, nil, err\n> >     }\n> > ```\n> > -       var portString string\n> > -       if node.Status.DaemonEndpoints.KubeletEndpoint.Port != 0 {\n> > -           portString = strconv.Itoa(node.Status.DaemonEndpoints.KubeletEndpoint.Port)\n> > -       } else {\n> > -           portString = strconv.FormatUint(uint64(port), 10)\n> \n> OK, now I remember - port is an uint and there's not FormatUint for\n> uint32 type. golang FTW!\n> \n> â€”\n> Reply to this email directly or view it on GitHub\n> https://github.com/kubernetes/kubernetes/pull/12919/files#r41976630.\n",
        "createdAt" : "2015-10-14T16:01:58Z",
        "updatedAt" : "2015-10-21T15:19:43Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "60404a55fc2448476c58cb27385a2f38e517ccb6",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +171,175 @@\t\t\tportString = strconv.Itoa(node.Status.DaemonEndpoints.KubeletEndpoint.Port)\n\t\t} else {\n\t\t\tportString = strconv.FormatUint(uint64(port), 10)\n\t\t}\n\t\treturn &url.URL{"
  },
  {
    "id" : "4bac89b7-cfde-4721-81e2-d629abedce7e",
    "prId" : 12919,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4f0b546d-64fc-47b9-8e19-9bc37c48f76a",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "I think this line is incorrect... `GetConnectionInfo` doesn't return the port specific to this kubelet, does it? Seems like this should be more like this:\n\n```\nkubeletScheme, kubeletPort, kubeletTransport, err := connection.GetConnectionInfo(ctx, name)\nif err != nil {\n  return nil, nil, err\n}\nif portReq == \"\" || strconv.Itoa(kubeletPort) == portReq {\n  ... use the kubeletScheme, host, and kubeletPort to build the URL and return with kubeletTransport\n}\n... use the requested scheme, host, and requested port to build the URL and return with proxyTransport\n```\n",
        "createdAt" : "2015-10-23T05:04:03Z",
        "updatedAt" : "2015-10-23T05:10:10Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "f74c66c3-5166-4c9c-ad0a-543fdf1ed0f7",
        "parentId" : "4f0b546d-64fc-47b9-8e19-9bc37c48f76a",
        "authorId" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "body" : "It does:\n\n```\nreturn scheme, c.Config.Port, c.Client.Transport, nil\n```\n\nWhere `Config` is a KubeletConfig, and Port is populated here:\n\n```\nfs.UintVar(&s.KubeletConfig.Port, \"kubelet-port\", s.KubeletConfig.Port, \"Kubelet port\")\n```\n\nNode that we're deprecating kubelet-port flag in this PR.\n",
        "createdAt" : "2015-10-23T08:54:43Z",
        "updatedAt" : "2015-10-23T08:54:43Z",
        "lastEditedBy" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "tags" : [
        ]
      },
      {
        "id" : "3e99eb1a-26a5-48c3-8f99-8aa974a7dfde",
        "parentId" : "4f0b546d-64fc-47b9-8e19-9bc37c48f76a",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "I think it is confusing to have two things telling us which port to connect to the kubelet on, one of which is incorrect. Don't we construct the ConnectionInfoGetter in one place? Why can't we give it a client Nodes interface to look up the node?\n",
        "createdAt" : "2015-10-23T10:07:38Z",
        "updatedAt" : "2015-10-23T10:07:56Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "31cc3348-8331-4ba7-8e5d-127ef4fd508d",
        "parentId" : "4f0b546d-64fc-47b9-8e19-9bc37c48f76a",
        "authorId" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "body" : "It is, but this is where we end by doing backward compatible changes:/. High level problem is that there are two layers of this connection - cluster-wide (e.g. certificates or sth), and per-kubelet (e.g. port). It's impossible to incorporate per-kubelet into cluster-wide one, and this PR is a one step in moving everything to etcd.\n",
        "createdAt" : "2015-10-23T10:28:00Z",
        "updatedAt" : "2015-10-23T10:28:00Z",
        "lastEditedBy" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "tags" : [
        ]
      },
      {
        "id" : "43b44d38-2835-4e96-bac3-618a61d2638f",
        "parentId" : "4f0b546d-64fc-47b9-8e19-9bc37c48f76a",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "It's clearly possible to stay backwards compatible by doing the specific lookup, then falling back to the cluster default. I'm just asking to contain that lookup and fallback within the connection info getter interface, rather than plumbing a second object responsible for returning ports to all the storage objects. \n",
        "createdAt" : "2015-10-23T11:26:59Z",
        "updatedAt" : "2015-10-23T11:26:59Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "758cfecc-7a4a-47aa-a39e-2eef9fc761cd",
        "parentId" : "4f0b546d-64fc-47b9-8e19-9bc37c48f76a",
        "authorId" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "body" : "I don't understand how you'd like to do it in a way which does not add a dependence on registry to our client library. Maybe KubeletClient shouldn't be there, as it's an 'internal' client, but that's out of scope of this PR.\n",
        "createdAt" : "2015-10-23T12:17:21Z",
        "updatedAt" : "2015-10-23T12:17:21Z",
        "lastEditedBy" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "tags" : [
        ]
      },
      {
        "id" : "043282d7-5378-49d7-8399-953e5f1c3c1f",
        "parentId" : "4f0b546d-64fc-47b9-8e19-9bc37c48f76a",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "Wrap the KubeletClient in an implementation that looks up the node-specific port, then defaults to what the KubeletClient returned. See the last commit at https://github.com/kubernetes/kubernetes/pull/16157\n",
        "createdAt" : "2015-10-23T12:28:57Z",
        "updatedAt" : "2015-10-23T12:28:57Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "60404a55fc2448476c58cb27385a2f38e517ccb6",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +163,167 @@\t}\n\tif portReq == \"\" || strconv.Itoa(defaultKubeletPort) == portReq {\n\t\tscheme, port, kubeletTransport, err := connection.GetConnectionInfo(host)\n\t\tif err != nil {\n\t\t\treturn nil, nil, err"
  }
]