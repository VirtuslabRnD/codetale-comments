[
  {
    "id" : "2e2eb9d2-41b2-40d2-84ef-a726f6b59c7e",
    "prId" : 89232,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/89232#pullrequestreview-417333112",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bb921072-482f-4481-9f2e-7a03e5038816",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "this is delicate enough that this needs a comment explaining what's going on (same for other status strategies)",
        "createdAt" : "2020-03-19T13:10:03Z",
        "updatedAt" : "2020-03-19T16:59:33Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "6976f658-539b-48e9-b582-940ec5707ca5",
        "parentId" : "bb921072-482f-4481-9f2e-7a03e5038816",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "do we have any tests of the request handler pipeline that ensure an update by an API caller cannot mess with managedFields directly (i.e. that the managedFields in the new object at this point is computed by the field manager based on the old object's managedFields and `diff(old,new)`)?",
        "createdAt" : "2020-03-19T13:50:32Z",
        "updatedAt" : "2020-03-19T16:59:33Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "cbf0cc37-28b0-4a06-88b9-42f48c729d1e",
        "parentId" : "bb921072-482f-4481-9f2e-7a03e5038816",
        "authorId" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "body" : "As discussed, we don't, this is a known limitation. We should document that, and also try to provide a fix asap.",
        "createdAt" : "2020-03-19T16:47:14Z",
        "updatedAt" : "2020-03-19T16:59:33Z",
        "lastEditedBy" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "tags" : [
        ]
      },
      {
        "id" : "c55ba4cd-c058-4916-8e12-537c0dcbb1e1",
        "parentId" : "bb921072-482f-4481-9f2e-7a03e5038816",
        "authorId" : "e43db36b-4d97-4af1-b3ab-37904831eff1",
        "body" : "Belated code review - this pattern would be a lot more clear if spelled as `temp := newObject.ObjectMeta.ManagedFields`.",
        "createdAt" : "2020-05-24T07:12:43Z",
        "updatedAt" : "2020-05-24T07:12:44Z",
        "lastEditedBy" : "e43db36b-4d97-4af1-b3ab-37904831eff1",
        "tags" : [
        ]
      }
    ],
    "commit" : "dfe1703ffab9ebd824f560f843a60147cc4de5c5",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +100,104 @@\tmanagedFields := newFlowSchema.ManagedFields\n\tnewFlowSchema.ObjectMeta = oldFlowSchema.ObjectMeta\n\tnewFlowSchema.ManagedFields = managedFields\n\tnewFlowSchema.Spec = oldFlowSchema.Spec\n}"
  },
  {
    "id" : "01e33fd0-5be8-4d6d-809a-a580fe6563f3",
    "prId" : 84708,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/84708#pullrequestreview-317859936",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f18159cb-c3aa-4d68-8e1a-1a89fbb6dd66",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "Also assign `ObjectMeta`.  Those shouldn't be updatable via status.  Past us made some mistakes, but fixed them for CRDs.",
        "createdAt" : "2019-11-06T13:55:43Z",
        "updatedAt" : "2019-11-08T06:27:33Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "0ba4b588-221a-4fde-b269-ad2e8d297d96",
        "parentId" : "f18159cb-c3aa-4d68-8e1a-1a89fbb6dd66",
        "authorId" : "bc182326-9017-48d6-8ee0-4609046c1366",
        "body" : "added object meta assignment for flow-schema and priority-level. \r\n\r\n> Past us made some mistakes, but fixed them for CRDs.\r\n\r\nrequiring developers to reset the object-meta here in the status strategy looks fragile.. isnt the update handler a better place to enforce that?",
        "createdAt" : "2019-11-06T14:38:59Z",
        "updatedAt" : "2019-11-08T06:27:33Z",
        "lastEditedBy" : "bc182326-9017-48d6-8ee0-4609046c1366",
        "tags" : [
        ]
      },
      {
        "id" : "d01f4d0c-3d7f-4a18-9910-d6989398b1f1",
        "parentId" : "f18159cb-c3aa-4d68-8e1a-1a89fbb6dd66",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "I don't personally see the harm in permitting status to update metadata, specifically attributes/labels/owners seem potentially useful. But, I don't really object to doing it this way, either.\r\n\r\nYes, it's brittle and dangerous to do it here (as is incrementing the generation in the main resource), but kind of necessary to not break existing built-ins.",
        "createdAt" : "2019-11-08T22:36:49Z",
        "updatedAt" : "2019-11-08T22:36:49Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "61074d80-dbbb-4533-b378-f12e859271cf",
        "parentId" : "f18159cb-c3aa-4d68-8e1a-1a89fbb6dd66",
        "authorId" : "7a59a326-58b3-4590-b70a-297d2e27daa5",
        "body" : "Interesting.  I asked about this as a generality, months ago on the slack channel.  I was told that new code should allow an update to the status subresource to _only_ affect the status, IIRC, but that there is deliberate maintainence of alternate behavior for some older types because they established their behavior before the current recommendations were well established.",
        "createdAt" : "2019-11-15T18:50:08Z",
        "updatedAt" : "2019-11-15T18:50:08Z",
        "lastEditedBy" : "7a59a326-58b3-4590-b70a-297d2e27daa5",
        "tags" : [
        ]
      },
      {
        "id" : "2379b96d-12e0-4549-8db0-7badbc230d34",
        "parentId" : "f18159cb-c3aa-4d68-8e1a-1a89fbb6dd66",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Yeah, I don't think you got wrong advice previously, I just personally don't see the compelling reason that drives people to think that status updates shouldn't touch metadata.",
        "createdAt" : "2019-11-15T20:45:13Z",
        "updatedAt" : "2019-11-15T20:45:13Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "bbd2e6b48b4d7ca0a82d544c4a228c7b0d70d433",
    "line" : 98,
    "diffHunk" : "@@ -1,1 +96,100 @@\toldFlowSchema := old.(*flowcontrol.FlowSchema)\n\tnewFlowSchema.ObjectMeta = oldFlowSchema.ObjectMeta\n\tnewFlowSchema.Spec = oldFlowSchema.Spec\n}\n"
  },
  {
    "id" : "e5919c14-fb82-42d9-a343-1680a7cfb7f1",
    "prId" : 84708,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/84708#pullrequestreview-312526965",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "33dd7c3d-c9fa-42f7-a4cf-397a3f92e972",
        "parentId" : null,
        "authorId" : "4b705187-d40c-4e59-968b-5be3a91465c5",
        "body" : "comment lacking",
        "createdAt" : "2019-11-06T14:57:07Z",
        "updatedAt" : "2019-11-08T06:27:33Z",
        "lastEditedBy" : "4b705187-d40c-4e59-968b-5be3a91465c5",
        "tags" : [
        ]
      },
      {
        "id" : "cd1670af-fe49-4f13-a9af-812c15b36ac7",
        "parentId" : "33dd7c3d-c9fa-42f7-a4cf-397a3f92e972",
        "authorId" : "bc182326-9017-48d6-8ee0-4609046c1366",
        "body" : "it's on a private struct, so the godoc isnt mandatory",
        "createdAt" : "2019-11-06T15:37:01Z",
        "updatedAt" : "2019-11-08T06:27:33Z",
        "lastEditedBy" : "bc182326-9017-48d6-8ee0-4609046c1366",
        "tags" : [
        ]
      }
    ],
    "commit" : "bbd2e6b48b4d7ca0a82d544c4a228c7b0d70d433",
    "line" : 73,
    "diffHunk" : "@@ -1,1 +71,75 @@}\n\nfunc (flowSchemaStrategy) AllowUnconditionalUpdate() bool {\n\treturn true\n}"
  },
  {
    "id" : "35c1af49-ff55-46bb-ba07-83669418a379",
    "prId" : 84708,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/84708#pullrequestreview-314495337",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9c7c6d9d-8357-4d36-b126-440a93b4c7b7",
        "parentId" : null,
        "authorId" : "7a59a326-58b3-4590-b70a-297d2e27daa5",
        "body" : "Why do we disallow this?",
        "createdAt" : "2019-11-06T18:22:04Z",
        "updatedAt" : "2019-11-08T06:27:33Z",
        "lastEditedBy" : "7a59a326-58b3-4590-b70a-297d2e27daa5",
        "tags" : [
        ]
      },
      {
        "id" : "ef5b82d9-e9eb-4a7f-999e-81d3c36b0a82",
        "parentId" : "9c7c6d9d-8357-4d36-b126-440a93b4c7b7",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "> Why do we disallow this?\r\n\r\nMost resources do.  It adds unneeded complication and this resource doesn't need it.  If I could take it out of the API, I would.",
        "createdAt" : "2019-11-06T18:47:45Z",
        "updatedAt" : "2019-11-08T06:27:33Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "920d3f0a-6e1b-4be1-a042-87de43237a87",
        "parentId" : "9c7c6d9d-8357-4d36-b126-440a93b4c7b7",
        "authorId" : "7a59a326-58b3-4590-b70a-297d2e27daa5",
        "body" : "Thanks for the info.\r\nI have no objection to doing the usual thing here.",
        "createdAt" : "2019-11-06T20:17:50Z",
        "updatedAt" : "2019-11-08T06:27:33Z",
        "lastEditedBy" : "7a59a326-58b3-4590-b70a-297d2e27daa5",
        "tags" : [
        ]
      },
      {
        "id" : "9bab560b-7538-411a-9e06-e2c89dcb9934",
        "parentId" : "9c7c6d9d-8357-4d36-b126-440a93b4c7b7",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "@deads2k For the record, the APPLY code path basically turns this on everywhere no matter the setting here (but it makes the right authz check which I assume is your concern?).",
        "createdAt" : "2019-11-08T22:33:11Z",
        "updatedAt" : "2019-11-08T22:33:11Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "bbd2e6b48b4d7ca0a82d544c4a228c7b0d70d433",
    "line" : 79,
    "diffHunk" : "@@ -1,1 +77,81 @@// AllowCreateOnUpdate is false for flow-schemas; this means a POST is needed to create one.\nfunc (flowSchemaStrategy) AllowCreateOnUpdate() bool {\n\treturn false\n}\n"
  },
  {
    "id" : "77f565b9-96b4-42af-80e8-2d9ff8df22ab",
    "prId" : 80257,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/80257#pullrequestreview-270560989",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a8669356-c4e2-47f9-823f-93fc0b185301",
        "parentId" : null,
        "authorId" : "7a59a326-58b3-4590-b70a-297d2e27daa5",
        "body" : "What about applying spec field defaults?",
        "createdAt" : "2019-08-02T20:38:44Z",
        "updatedAt" : "2019-08-07T04:00:46Z",
        "lastEditedBy" : "7a59a326-58b3-4590-b70a-297d2e27daa5",
        "tags" : [
        ]
      },
      {
        "id" : "501a7a11-e05f-4654-9197-52f48f4e6578",
        "parentId" : "a8669356-c4e2-47f9-823f-93fc0b185301",
        "authorId" : "bc182326-9017-48d6-8ee0-4609046c1366",
        "body" : "ref https://github.com/kubernetes/kubernetes/pull/80257#discussion_r310440447",
        "createdAt" : "2019-08-05T05:17:55Z",
        "updatedAt" : "2019-08-07T04:00:46Z",
        "lastEditedBy" : "bc182326-9017-48d6-8ee0-4609046c1366",
        "tags" : [
        ]
      }
    ],
    "commit" : "d2163ce227e3978a9dc3d051d2148bde47766122",
    "line" : 50,
    "diffHunk" : "@@ -1,1 +48,52 @@\tfl.Status = flowcontrol.FlowSchemaStatus{}\n\tfl.Generation = 1\n}\n\n// PrepareForUpdate clears fields that are not allowed to be set by end users on update."
  },
  {
    "id" : "1385efeb-a152-449f-b7d9-59057c30b611",
    "prId" : 80257,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/80257#pullrequestreview-271684581",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f84c100c-0f68-4cb4-a956-4c6cb561993f",
        "parentId" : null,
        "authorId" : "7a59a326-58b3-4590-b70a-297d2e27daa5",
        "body" : "What about spec field defaults?",
        "createdAt" : "2019-08-02T20:39:55Z",
        "updatedAt" : "2019-08-07T04:00:46Z",
        "lastEditedBy" : "7a59a326-58b3-4590-b70a-297d2e27daa5",
        "tags" : [
        ]
      },
      {
        "id" : "e361616c-d224-43db-9cf6-9eab1b7376f1",
        "parentId" : "f84c100c-0f68-4cb4-a956-4c6cb561993f",
        "authorId" : "bc182326-9017-48d6-8ee0-4609046c1366",
        "body" : "we are not applying default here. it's invoked in codec on deserialization.\r\n\r\nhttps://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/pkg/runtime/serializer/versioning/versioning.go#L122",
        "createdAt" : "2019-08-05T05:14:56Z",
        "updatedAt" : "2019-08-07T04:00:46Z",
        "lastEditedBy" : "bc182326-9017-48d6-8ee0-4609046c1366",
        "tags" : [
        ]
      },
      {
        "id" : "b5f7157a-4b4f-43e4-a5a1-08b7f1995c2c",
        "parentId" : "f84c100c-0f68-4cb4-a956-4c6cb561993f",
        "authorId" : "7a59a326-58b3-4590-b70a-297d2e27daa5",
        "body" : "OK, I learned the code Decoder is the preferred place to do defaulting.",
        "createdAt" : "2019-08-07T00:57:48Z",
        "updatedAt" : "2019-08-07T04:00:46Z",
        "lastEditedBy" : "7a59a326-58b3-4590-b70a-297d2e27daa5",
        "tags" : [
        ]
      }
    ],
    "commit" : "d2163ce227e3978a9dc3d051d2148bde47766122",
    "line" : 62,
    "diffHunk" : "@@ -1,1 +60,64 @@\t}\n\tnewFlowSchema.Status = oldFlowSchema.Status\n}\n\n// Validate validates a new flow-schema."
  }
]