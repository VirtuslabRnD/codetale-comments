[
  {
    "id" : "10a561ca-1424-40c7-8acd-c069bd55ddfd",
    "prId" : 39206,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/39206#pullrequestreview-14345008",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "73c81305-3e54-44e6-a6c8-6e03524918f2",
        "parentId" : null,
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Does this allocate?  Shame if so, although this is sparse enough I don't see anything obvious to fix.",
        "createdAt" : "2016-12-23T17:53:16Z",
        "updatedAt" : "2016-12-27T05:59:40Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "e0db7eb6-01f7-4ce8-8ab2-fd7d47049db3",
        "parentId" : "73c81305-3e54-44e6-a6c8-6e03524918f2",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "It seems to, but big.Int has no 'for each bit' loop.",
        "createdAt" : "2016-12-23T23:30:37Z",
        "updatedAt" : "2016-12-27T05:59:40Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "64f5b050a1defb3ea5b09b8e2582ac51796ca7f2",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +138,142 @@\tdefer r.lock.Unlock()\n\n\twords := r.allocated.Bits()\n\tfor wordIdx, word := range words {\n\t\tbit := 0"
  },
  {
    "id" : "7fcbbf2d-0741-42c9-9fe5-fad9b5f74648",
    "prId" : 39206,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/39206#pullrequestreview-14345096",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "67abf79f-10f8-4073-82a5-4a4199599505",
        "parentId" : null,
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "nit: I vaguely recall us using Each() elsewhere - if so would be good to be consistent.  If not, I don't care.",
        "createdAt" : "2016-12-23T17:54:37Z",
        "updatedAt" : "2016-12-27T05:59:40Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "e1b8bf57-aa94-45bc-b3c5-f626f0f463ca",
        "parentId" : "67abf79f-10f8-4073-82a5-4a4199599505",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "I see no Each() func, but a mishmash of similar names.",
        "createdAt" : "2016-12-23T23:33:54Z",
        "updatedAt" : "2016-12-27T05:59:40Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "64f5b050a1defb3ea5b09b8e2582ac51796ca7f2",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +134,138 @@// ForEach calls the provided function for each allocated bit.  The\n// AllocationBitmap may not be modified while this loop is running.\nfunc (r *AllocationBitmap) ForEach(fn func(int)) {\n\tr.lock.Lock()\n\tdefer r.lock.Unlock()"
  }
]