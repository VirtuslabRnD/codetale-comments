[
  {
    "id" : "ea0aea5f-1cdf-4acb-a74c-251e98de931e",
    "prId" : 103379,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/103379#pullrequestreview-696730670",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "79fe59f1-fb11-44b3-b05e-18ec85d1e541",
        "parentId" : null,
        "authorId" : "0c76e20f-41a5-4725-b3c3-d5b6cae89641",
        "body" : "nit: of this `allocator`.",
        "createdAt" : "2021-06-30T19:53:31Z",
        "updatedAt" : "2021-06-30T22:56:29Z",
        "lastEditedBy" : "0c76e20f-41a5-4725-b3c3-d5b6cae89641",
        "tags" : [
        ]
      },
      {
        "id" : "ba39f95f-7741-4a5c-bf49-7f06b54ca348",
        "parentId" : "79fe59f1-fb11-44b3-b05e-18ec85d1e541",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "akshually...this field is inside `type Range`",
        "createdAt" : "2021-07-01T01:10:50Z",
        "updatedAt" : "2021-07-01T01:10:50Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "2b84b49ea981533730539abf8bfc4e4a05ece3b8",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +76,80 @@\t// max is the maximum size of the usable addresses in the range\n\tmax int\n\t// family is the IP family of this range\n\tfamily api.IPFamily\n"
  },
  {
    "id" : "c0487c90-73b9-438d-85fd-fd3171975b87",
    "prId" : 103379,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/103379#pullrequestreview-696731593",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "94261380-ffcf-4d0c-b1a7-e2150cf5d631",
        "parentId" : null,
        "authorId" : "0c76e20f-41a5-4725-b3c3-d5b6cae89641",
        "body" : "nit: default to `IPv4Protocol`. Set it once if IPv6 below in L94. That way if `else` below is gone we have a good default to work with.",
        "createdAt" : "2021-06-30T19:55:18Z",
        "updatedAt" : "2021-06-30T22:56:29Z",
        "lastEditedBy" : "0c76e20f-41a5-4725-b3c3-d5b6cae89641",
        "tags" : [
        ]
      },
      {
        "id" : "86513138-2bf7-4400-8922-fa6e2f3bf05a",
        "parentId" : "94261380-ffcf-4d0c-b1a7-e2150cf5d631",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "I still have the `max--` line, so I still need the same LOCs.  Given that it seems a little self-documenting to set the family and the family-specific fields together ",
        "createdAt" : "2021-07-01T01:13:21Z",
        "updatedAt" : "2021-07-01T01:13:21Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "2b84b49ea981533730539abf8bfc4e4a05ece3b8",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +87,91 @@\tbase := utilnet.BigForIP(cidr.IP)\n\trangeSpec := cidr.String()\n\tvar family api.IPFamily\n\n\tif utilnet.IsIPv6CIDR(cidr) {"
  },
  {
    "id" : "6bf52111-42b3-4d05-8885-1fa1dd597229",
    "prId" : 52693,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/52693#pullrequestreview-63855499",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "006ddaa9-f6e0-40b6-9f54-8b9ef9f2c471",
        "parentId" : null,
        "authorId" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "body" : "Should this print the provided IP?",
        "createdAt" : "2017-09-19T17:23:19Z",
        "updatedAt" : "2017-09-19T17:23:19Z",
        "lastEditedBy" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "tags" : [
        ]
      },
      {
        "id" : "6e8910c8-b95e-4a19-b256-180a59f6e1d2",
        "parentId" : "006ddaa9-f6e0-40b6-9f54-8b9ef9f2c471",
        "authorId" : "a09f2d48-fec0-4c0d-bd81-6de7378a6ebf",
        "body" : "No, the provided IP is printed outside this error. See the current message:\r\n\r\n```\r\nMessage: \"Invalid value: \\\"127.1.2.3\\\": provided IP is not in the valid range\",\r\n```\r\n\r\nThe PR is expected to provide the valid IP range when we get an error of `provided IP is not in the valid range` for debugging.",
        "createdAt" : "2017-09-20T02:45:23Z",
        "updatedAt" : "2017-09-20T02:47:01Z",
        "lastEditedBy" : "a09f2d48-fec0-4c0d-bd81-6de7378a6ebf",
        "tags" : [
        ]
      },
      {
        "id" : "375fc0ba-c633-4e07-ae13-f4741daf3117",
        "parentId" : "006ddaa9-f6e0-40b6-9f54-8b9ef9f2c471",
        "authorId" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "body" : "Thanks for clarifying, feel free to lgtm. We need to move forward with the reference issue quickly!",
        "createdAt" : "2017-09-20T02:49:19Z",
        "updatedAt" : "2017-09-20T02:49:19Z",
        "lastEditedBy" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "tags" : [
        ]
      }
    ],
    "commit" : "487224cbc474768e23a35ebfe419736d1b939eee",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +50,54 @@\nfunc (e *ErrNotInRange) Error() string {\n\treturn fmt.Sprintf(\"provided IP is not in the valid range. The range of valid IPs is %s\", e.ValidRange)\n}\n"
  },
  {
    "id" : "3c0d6e7b-131f-4322-97fd-90a5fe7f0d08",
    "prId" : 47621,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/47621#pullrequestreview-68701847",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "799328b7-1a2a-495f-8eb8-170034510a3f",
        "parentId" : null,
        "authorId" : "59098d78-f4f5-4a00-90c5-b35bc66e6750",
        "body" : "Should the function signature be changed to return an error indication? This way, you could unit test for failure cases (I don't know how you can UT panics).",
        "createdAt" : "2017-06-19T19:31:34Z",
        "updatedAt" : "2017-10-09T23:23:20Z",
        "lastEditedBy" : "59098d78-f4f5-4a00-90c5-b35bc66e6750",
        "tags" : [
        ]
      },
      {
        "id" : "0e443510-2eac-4031-91d5-258bd1fa4671",
        "parentId" : "799328b7-1a2a-495f-8eb8-170034510a3f",
        "authorId" : "59098d78-f4f5-4a00-90c5-b35bc66e6750",
        "body" : "Alternatively, should the function just return the # networks, 0+, and then the caller can check for validity of the number of the range? Right now, it determines the range of hosts AND checks for exceeding a maximum, but not a minimum. Looks like some callers are doing checking.",
        "createdAt" : "2017-06-19T19:48:19Z",
        "updatedAt" : "2017-10-09T23:23:20Z",
        "lastEditedBy" : "59098d78-f4f5-4a00-90c5-b35bc66e6750",
        "tags" : [
        ]
      },
      {
        "id" : "0d5b0f57-cb81-4278-9e70-05d043e8bac9",
        "parentId" : "799328b7-1a2a-495f-8eb8-170034510a3f",
        "authorId" : "b6f0a138-d8c9-4579-8e5a-45064a09c78c",
        "body" : "I'm open to making the changes. Maybe it's best to implement the changes and the failure case UT's in a follow-on PR? Lets see what @MrHohn has to say.",
        "createdAt" : "2017-06-19T22:49:49Z",
        "updatedAt" : "2017-10-09T23:23:20Z",
        "lastEditedBy" : "b6f0a138-d8c9-4579-8e5a-45064a09c78c",
        "tags" : [
        ]
      },
      {
        "id" : "8d3fefe4-4768-430f-98c9-ebd8f47e7a98",
        "parentId" : "799328b7-1a2a-495f-8eb8-170034510a3f",
        "authorId" : "59098d78-f4f5-4a00-90c5-b35bc66e6750",
        "body" : "My vote would be to address it now, since the submit queue is blocked. BTW the current assignment has @bowei, instead of MrHohn.",
        "createdAt" : "2017-06-21T10:32:52Z",
        "updatedAt" : "2017-10-09T23:23:20Z",
        "lastEditedBy" : "59098d78-f4f5-4a00-90c5-b35bc66e6750",
        "tags" : [
        ]
      },
      {
        "id" : "eaf3865e-7db8-4d48-ba31-dab3ce8bcc10",
        "parentId" : "799328b7-1a2a-495f-8eb8-170034510a3f",
        "authorId" : "b714f738-aa05-4f49-a624-eaaf3e0cbb70",
        "body" : "If possible I would change this function to return an error, we should try to avoid panic() in long running server code.",
        "createdAt" : "2017-07-07T00:30:38Z",
        "updatedAt" : "2017-10-09T23:23:20Z",
        "lastEditedBy" : "b714f738-aa05-4f49-a624-eaaf3e0cbb70",
        "tags" : [
        ]
      },
      {
        "id" : "84aaf112-df2c-41e9-ba38-4fd179861238",
        "parentId" : "799328b7-1a2a-495f-8eb8-170034510a3f",
        "authorId" : "59098d78-f4f5-4a00-90c5-b35bc66e6750",
        "body" : "Looking at the usage of this, the function panics (should be returning error, IMHO), if the subnet is too large, and if not, returns the number of hosts available, and the caller then checks if the subnet is too small. Maybe this should be changed to CheckSubnetSize() and return error if too large or too small, and caller can just check return (error) for non-nil?\r\n",
        "createdAt" : "2017-07-10T11:42:25Z",
        "updatedAt" : "2017-10-09T23:23:20Z",
        "lastEditedBy" : "59098d78-f4f5-4a00-90c5-b35bc66e6750",
        "tags" : [
        ]
      },
      {
        "id" : "cbc2c834-7015-4610-8cf2-02a6845655b0",
        "parentId" : "799328b7-1a2a-495f-8eb8-170034510a3f",
        "authorId" : "b714f738-aa05-4f49-a624-eaaf3e0cbb70",
        "body" : "Looks like it is not too much work to propagate an error instead of panic here. Would be great to fix.",
        "createdAt" : "2017-10-11T17:23:51Z",
        "updatedAt" : "2017-10-11T17:23:51Z",
        "lastEditedBy" : "b714f738-aa05-4f49-a624-eaaf3e0cbb70",
        "tags" : [
        ]
      },
      {
        "id" : "c808ecfe-26c1-4907-becf-14dcaeb45170",
        "parentId" : "799328b7-1a2a-495f-8eb8-170034510a3f",
        "authorId" : "b6f0a138-d8c9-4579-8e5a-45064a09c78c",
        "body" : "@bowei I removed the panic. @thockin asked to return 0 instead of an error/panic.",
        "createdAt" : "2017-10-11T18:14:26Z",
        "updatedAt" : "2017-10-11T18:14:26Z",
        "lastEditedBy" : "b6f0a138-d8c9-4579-8e5a-45064a09c78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "3f293e2fe657b48b96f0839a7426bfafb58f5a62",
    "line" : 2,
    "diffHunk" : "@@ -1,1 +262,266 @@\n// RangeSize returns the size of a range in valid addresses.\nfunc RangeSize(subnet *net.IPNet) int64 {\n\tones, bits := subnet.Mask.Size()\n\tif bits == 32 && (bits-ones) >= 31 || bits == 128 && (bits-ones) >= 63 {"
  },
  {
    "id" : "0d5c77f3-0b10-4c16-91be-c7f824cc0582",
    "prId" : 47621,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/47621#pullrequestreview-68683481",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "126b692a-5f13-4758-b53b-0f9da05450ff",
        "parentId" : null,
        "authorId" : "59098d78-f4f5-4a00-90c5-b35bc66e6750",
        "body" : "As a future clean-up, we should look at making this easier to understand (or supplement it with a comment to indicate that if the network bits are less than 2 for IPv4 or less than 65 for IPv6 it fails. OK for now.",
        "createdAt" : "2017-10-11T17:15:35Z",
        "updatedAt" : "2017-10-11T17:15:50Z",
        "lastEditedBy" : "59098d78-f4f5-4a00-90c5-b35bc66e6750",
        "tags" : [
        ]
      }
    ],
    "commit" : "3f293e2fe657b48b96f0839a7426bfafb58f5a62",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +264,268 @@func RangeSize(subnet *net.IPNet) int64 {\n\tones, bits := subnet.Mask.Size()\n\tif bits == 32 && (bits-ones) >= 31 || bits == 128 && (bits-ones) >= 63 {\n\t\treturn 0\n\t}"
  }
]