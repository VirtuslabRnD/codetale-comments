[
  {
    "id" : "4e20b463-a34e-40f7-97e8-c06453d91397",
    "prId" : 49258,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/49258#pullrequestreview-74647972",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e3d65923-d2c2-4bc6-ae8e-ca4163ed1e55",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "does this cause problems if the same port number is released twice?",
        "createdAt" : "2017-11-07T04:28:57Z",
        "updatedAt" : "2017-11-07T06:32:26Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "247fa127-be04-43d3-8a7e-d1c74cf382d7",
        "parentId" : "e3d65923-d2c2-4bc6-ae8e-ca4163ed1e55",
        "authorId" : "a09f2d48-fec0-4c0d-bd81-6de7378a6ebf",
        "body" : "I don't think this will cause problems. If the same port number is released twice, nothing will happen. Hope the below code I find is the right place.\r\n\r\nhttps://github.com/kubernetes/kubernetes/blob/223ac9f8b0cd70a352731b221a8f835e2d514f05/pkg/registry/core/service/allocator/bitmap.go#L116-L130",
        "createdAt" : "2017-11-07T06:20:58Z",
        "updatedAt" : "2017-11-07T06:32:26Z",
        "lastEditedBy" : "a09f2d48-fec0-4c0d-bd81-6de7378a6ebf",
        "tags" : [
        ]
      }
    ],
    "commit" : "330517a3a06f02e29558d596d48fd052988af044",
    "line" : 104,
    "diffHunk" : "@@ -1,1 +632,636 @@\t\t\tcontinue\n\t\t}\n\t\tnodePortOp.ReleaseDeferred(int(oldNodePortNumber))\n\t}\n"
  },
  {
    "id" : "3130a1f4-29d1-4719-9b63-47a657a6bf66",
    "prId" : 48418,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/48418#pullrequestreview-48504650",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "91e00d20-297f-47fc-898e-31dcfcee30cc",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "can you imply `releaseServiceIP = true` if `err == nil` - i.e. an else clause and a simpler return?",
        "createdAt" : "2017-07-06T21:41:26Z",
        "updatedAt" : "2017-07-07T04:58:57Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "1650b62e-244a-47e3-be1a-de5ae575bf60",
        "parentId" : "91e00d20-297f-47fc-898e-31dcfcee30cc",
        "authorId" : "a09f2d48-fec0-4c0d-bd81-6de7378a6ebf",
        "body" : "I'm afraid not. We can't consider all `err == nil` cases to be with result `releaseServiceIP = true`, because there is an implicit case `service.Spec.ClusterIP == api.ClusterIPNone` which will not allocate ClusterIP but it's also not an error in `initClusterIP`. I think return `releaseServiceIP` explicitly might be clearer than being implied in `err == nil`. @thockin WDYT?",
        "createdAt" : "2017-07-07T01:46:56Z",
        "updatedAt" : "2017-07-07T04:58:57Z",
        "lastEditedBy" : "a09f2d48-fec0-4c0d-bd81-6de7378a6ebf",
        "tags" : [
        ]
      }
    ],
    "commit" : "472e10faf9512b891a8d4cafa77ad42c2f8e72aa",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +98,102 @@\tvar err error\n\tif service.Spec.Type != api.ServiceTypeExternalName {\n\t\tif releaseServiceIP, err = rs.initClusterIP(service); err != nil {\n\t\t\treturn nil, err\n\t\t}"
  },
  {
    "id" : "0138dad7-322e-4683-9dd3-3a228453bbc6",
    "prId" : 46197,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/46197#pullrequestreview-44199831",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9d8ee70d-6b70-411c-97ca-c2dc2aefd16d",
        "parentId" : null,
        "authorId" : "e83108b8-1fb2-416b-9298-d5b70c14f708",
        "body" : "Can we do something similar to `shouldAssignNodePorts`?\r\n\r\nMaybe have a `shouldAssignClucsterIP` function? and then check against oldservice and service. And then decide whether to init or release or do nothing. \r\n\r\nSame for the decision for nodeport. \r\n\r\nKeep the comments. \r\n",
        "createdAt" : "2017-06-14T18:03:25Z",
        "updatedAt" : "2017-06-28T01:33:40Z",
        "lastEditedBy" : "e83108b8-1fb2-416b-9298-d5b70c14f708",
        "tags" : [
        ]
      },
      {
        "id" : "426c7980-0a3e-4920-b678-e27562ec8323",
        "parentId" : "9d8ee70d-6b70-411c-97ca-c2dc2aefd16d",
        "authorId" : "a09f2d48-fec0-4c0d-bd81-6de7378a6ebf",
        "body" : "I'm afraid this might make the logic more complicated. We should check service type in the helper `shouldAssignClucsterIP` thing, and, might need to check some type again here. That's why I didn't invoke the existing helper `shouldAssignNodePorts` in this refactoring. Type to type mapping here seems more straightforward. If there is stronger reason, I will modify as you suggested. @freehan WDYT? Thanks!",
        "createdAt" : "2017-06-15T03:44:38Z",
        "updatedAt" : "2017-06-28T01:33:40Z",
        "lastEditedBy" : "a09f2d48-fec0-4c0d-bd81-6de7378a6ebf",
        "tags" : [
        ]
      }
    ],
    "commit" : "a58232ab418b303fc53a25651ac900da888d0e6c",
    "line" : 50,
    "diffHunk" : "@@ -1,1 +372,376 @@\n\t// Update service from ExternalName to non-ExternalName, should initialize ClusterIP.\n\tif oldService.Spec.Type == api.ServiceTypeExternalName && service.Spec.Type != api.ServiceTypeExternalName {\n\t\tif releaseServiceIP, err = rs.initClusterIP(service); err != nil {\n\t\t\treturn nil, false, err"
  },
  {
    "id" : "2654464f-9f2c-4ad6-b531-248962a4ad23",
    "prId" : 43259,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/43259#pullrequestreview-27579023",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6a4df4c3-c290-478a-b5d9-8f6d8d32f2e3",
        "parentId" : null,
        "authorId" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "body" : "Gah - I should stop doing double-negatives :-(",
        "createdAt" : "2017-03-17T13:09:31Z",
        "updatedAt" : "2017-03-17T13:09:31Z",
        "lastEditedBy" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "tags" : [
        ]
      }
    ],
    "commit" : "cb95c479cbe1d215cf963d6f58caf3b7d2fbd874",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +437,441 @@\t// (there's a hard-limit at 2^16, because they're ports; and even 4 ports would be a lot)\n\tfor _, oldNodePort := range oldNodePorts {\n\t\tif contains(newNodePorts, oldNodePort) {\n\t\t\tcontinue\n\t\t}"
  },
  {
    "id" : "d63748ec-5894-4fd4-ac11-2d872a6afbc9",
    "prId" : 33957,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/33957#pullrequestreview-2603181",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "48874fbb-6392-4c7c-9a83-acbdb745811d",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "what about existing objects which have alpha annotation and not beta?\n",
        "createdAt" : "2016-10-03T20:31:12Z",
        "updatedAt" : "2016-10-19T21:52:11Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "2c6faa4f-958d-4d52-b7b4-f9806ef5914b",
        "parentId" : "48874fbb-6392-4c7c-9a83-acbdb745811d",
        "authorId" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "body" : "I'm copying it over during conversion, so when the apiserver/controller is restarted and gets objects down watch/list whatever they'll get substituted in when they translate to the internal type\n",
        "createdAt" : "2016-10-03T20:52:29Z",
        "updatedAt" : "2016-10-19T21:52:11Z",
        "lastEditedBy" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "tags" : [
        ]
      }
    ],
    "commit" : "5029bb06e97be34c371dead5452968249bebff8f",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +162,166 @@\t\tvar healthCheckNodePort int\n\t\tvar err error\n\t\tif l, ok := service.Annotations[apiservice.BetaAnnotationHealthCheckNodePort]; ok {\n\t\t\thealthCheckNodePort, err = strconv.Atoi(l)\n\t\t\tif err != nil || healthCheckNodePort <= 0 {"
  }
]