[
  {
    "id" : "c1f3bcf1-031c-4aaf-8256-091a1215ec62",
    "prId" : 82820,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/82820#pullrequestreview-348974101",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fa1258ef-5b42-40b2-b406-15addee66ff0",
        "parentId" : null,
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "maybe good to link to a larger tracking issue so we remember to loosen this.",
        "createdAt" : "2020-01-27T21:05:45Z",
        "updatedAt" : "2020-01-27T21:05:45Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      }
    ],
    "commit" : "6e411b6c0a4cb1837a4a3506537eb848adab910c",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +127,131 @@\topts := validation.NodeValidationOptions{\n\t\t// This ensures new nodes have no more than one hugepages resource\n\t\t// TODO: set to false in 1.19; 1.18 servers tolerate multiple hugepages resources on update\n\t\tValidateSingleHugePageResource: true,\n\t}"
  },
  {
    "id" : "8b5ea855-223d-4b45-91e0-ad8e4ddce527",
    "prId" : 72390,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/72390#pullrequestreview-188418340",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "365596fc-82dc-43b7-af5d-78376b8a4e9d",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "also set `node.Status.Config = nil` here\r\n\r\nnode creation allows setting status, which is unusual (and only allowed for backwards compatibility with early resource behavior)",
        "createdAt" : "2018-12-29T05:53:25Z",
        "updatedAt" : "2018-12-29T18:19:59Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "8ca8c0a0-5b82-4f34-97a9-c88cae393c45",
        "parentId" : "365596fc-82dc-43b7-af5d-78376b8a4e9d",
        "authorId" : "6c37c694-3f72-4ff3-ac3a-5fbddf4d5796",
        "body" : "done",
        "createdAt" : "2018-12-29T18:15:24Z",
        "updatedAt" : "2018-12-29T18:19:59Z",
        "lastEditedBy" : "6c37c694-3f72-4ff3-ac3a-5fbddf4d5796",
        "tags" : [
        ]
      }
    ],
    "commit" : "e61b76fb8cce6ea815444765d60b7ebb28a4fcb6",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +69,73 @@\t// Nodes allow *all* fields, including status, to be set on create.\n\tif !utilfeature.DefaultFeatureGate.Enabled(features.DynamicKubeletConfig) {\n\t\tnode.Spec.ConfigSource = nil\n\t\tnode.Status.Config = nil\n\t}"
  },
  {
    "id" : "4c880ebe-3b58-4788-b8cf-d12d79148a69",
    "prId" : 63314,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/63314#pullrequestreview-120305870",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "88bfb76a-21ff-4ac7-80a6-24de0755b779",
        "parentId" : null,
        "authorId" : "d2b16581-e7e9-48b8-9f76-6f6bcb9ec300",
        "body" : "since I am not familiar with the pgk/registry code-base, why is this required?  Same question for addition in PrepareForUpdate.  ",
        "createdAt" : "2018-05-14T23:25:39Z",
        "updatedAt" : "2018-05-15T18:25:25Z",
        "lastEditedBy" : "d2b16581-e7e9-48b8-9f76-6f6bcb9ec300",
        "tags" : [
        ]
      },
      {
        "id" : "b939a108-6871-47e3-842d-993f61a3b46b",
        "parentId" : "88bfb76a-21ff-4ac7-80a6-24de0755b779",
        "authorId" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "body" : "We strip alpha fields when the corresponding feature gate is turned off, so that they can't be written unless the feature gate is turned on. See similar code in `func (nodeStrategy) PrepareForCreate/PrepareForUpdate`, similarly see `DropDisabledAlphaFields` in `pkg/api/pod/util.go`.",
        "createdAt" : "2018-05-15T00:13:43Z",
        "updatedAt" : "2018-05-15T18:25:25Z",
        "lastEditedBy" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "tags" : [
        ]
      },
      {
        "id" : "ff5bffb9-38e1-4e26-ac9d-c9558d6d71b7",
        "parentId" : "88bfb76a-21ff-4ac7-80a6-24de0755b779",
        "authorId" : "d2b16581-e7e9-48b8-9f76-6f6bcb9ec300",
        "body" : "great, thanks",
        "createdAt" : "2018-05-15T16:06:52Z",
        "updatedAt" : "2018-05-15T18:25:25Z",
        "lastEditedBy" : "d2b16581-e7e9-48b8-9f76-6f6bcb9ec300",
        "tags" : [
        ]
      }
    ],
    "commit" : "fcc1f8e7b6f457940f75943638a83a1a26405358",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +131,135 @@\t// Nodes allow *all* fields, including status, to be set on create.\n\n\tif !utilfeature.DefaultFeatureGate.Enabled(features.DynamicKubeletConfig) {\n\t\tnode.Status.Config = nil\n\t}"
  },
  {
    "id" : "87d91b71-1b39-4e56-8132-e01b78785635",
    "prId" : 34474,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/34474#pullrequestreview-4382087",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "577ddb99-ffa4-4db4-9ec2-cf6abd47a79a",
        "parentId" : null,
        "authorId" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "body" : "I guess technically we need to worry about `\"http\" != \"80\"`, but not entirely sure that actually happens.  I do wonder if port in ConnectionInfo should be an integer.\n",
        "createdAt" : "2016-10-15T18:07:15Z",
        "updatedAt" : "2016-10-16T02:16:33Z",
        "lastEditedBy" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "tags" : [
        ]
      },
      {
        "id" : "493aac8e-bf69-4376-aaa8-37155f1fb0b9",
        "parentId" : "577ddb99-ffa4-4db4-9ec2-cf6abd47a79a",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "the port comparison is existing, not looking to change that behavior here (and our default port is `10250`, which doesn't have an IANA-registered service name). `net.JoinHostPort` expects a string, so I think I'd leave `ConnectionInfo.Port` as a string as well\n",
        "createdAt" : "2016-10-16T01:12:04Z",
        "updatedAt" : "2016-10-16T02:16:33Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "a082a2e7493eeb0347eb74a1e1240c374c4e9f57",
    "line" : 53,
    "diffHunk" : "@@ -1,1 +182,186 @@\t// - no port is specified in request (Kubelet's port is default)\n\t// - the requested port matches the kubelet port for this node\n\tif portReq == \"\" || portReq == info.Port {\n\t\treturn &url.URL{\n\t\t\t\tScheme: info.Scheme,"
  }
]