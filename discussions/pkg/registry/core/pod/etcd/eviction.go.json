[
  {
    "id" : "bc72d4a8-db0a-48df-8865-c917bd02783b",
    "prId" : 37668,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/37668#pullrequestreview-11079916",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "826adb34-d70e-4d05-8637-3725b0c4b378",
        "parentId" : null,
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "How long do we expect pathological times for requests? This is 10s.",
        "createdAt" : "2016-12-01T23:29:32Z",
        "updatedAt" : "2016-12-01T23:29:32Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      }
    ],
    "commit" : "ddf624efd67b04d35f2bef4f491ad58070ad779c",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +47,51 @@var EvictionsRetry = wait.Backoff{\n\tSteps:    20,\n\tDuration: 500 * time.Millisecond,\n\tFactor:   1.0,\n\tJitter:   0.1,"
  },
  {
    "id" : "becf15d7-9b30-4fc7-8037-8c86629b717d",
    "prId" : 37668,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/37668#pullrequestreview-11201627",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "53704347-b0cb-47a2-82df-72471bb1a1ac",
        "parentId" : null,
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "This error is not always going to be an api error, right? For example, if `RetryOnConflict` times out it will return a `ErrWaitTimeout`. Also `checkAndDecrement` returns non-api errors.",
        "createdAt" : "2016-12-02T11:12:58Z",
        "updatedAt" : "2016-12-02T11:12:58Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      },
      {
        "id" : "447c01eb-0a7e-47e9-b5bb-af3ff7c86b0f",
        "parentId" : "53704347-b0cb-47a2-82df-72471bb1a1ac",
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "Opened https://github.com/kubernetes/kubernetes/pull/37944",
        "createdAt" : "2016-12-02T14:43:06Z",
        "updatedAt" : "2016-12-02T14:43:06Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      },
      {
        "id" : "1c51d04d-b475-4f1b-8bb3-1af3a92b97dd",
        "parentId" : "53704347-b0cb-47a2-82df-72471bb1a1ac",
        "authorId" : "cdb05f24-d700-4d96-a683-3e4de7effbf5",
        "body" : ">Opened #37944\r\n\r\nThanks.",
        "createdAt" : "2016-12-02T17:13:42Z",
        "updatedAt" : "2016-12-02T17:13:42Z",
        "lastEditedBy" : "cdb05f24-d700-4d96-a683-3e4de7effbf5",
        "tags" : [
        ]
      }
    ],
    "commit" : "ddf624efd67b04d35f2bef4f491ad58070ad779c",
    "line" : 104,
    "diffHunk" : "@@ -1,1 +119,123 @@\t\treturn nil\n\t})\n\tif err != nil {\n\t\treturn nil, err\n\t}"
  },
  {
    "id" : "6633e70b-bcfd-4b3c-8242-cc3ca2004b5a",
    "prId" : 36438,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/36438#pullrequestreview-7797083",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "41c0b797-08fd-46b8-9387-a00a99133afb",
        "parentId" : null,
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "Nothing increments Generation hence this will be always false once the controller observes a PDB for the first time.\n",
        "createdAt" : "2016-11-08T15:28:12Z",
        "updatedAt" : "2016-11-08T17:43:07Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      },
      {
        "id" : "bbb1f0c1-95c8-455d-9883-6e0bb951a2a9",
        "parentId" : "41c0b797-08fd-46b8-9387-a00a99133afb",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "This is a good point. I though that Generation is automatically incremented by our infrastructure on every Spec update, but it seems this has to be done manually. For example RC is doing it here:\nhttps://github.com/kubernetes/kubernetes/blob/master/pkg/registry/core/controller/strategy.go#L81\n\n@mwielgus - this should be added.\n",
        "createdAt" : "2016-11-09T09:10:12Z",
        "updatedAt" : "2016-11-09T09:10:12Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "7be49232-0285-4973-addb-aca1b6028ea2",
        "parentId" : "41c0b797-08fd-46b8-9387-a00a99133afb",
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "It's already there for PDB but I thought the spec is immutable.\nhttps://github.com/kubernetes/kubernetes/blob/87584919e53e96d7ac17110b8ddbddfb298e2d5d/pkg/registry/policy/poddisruptionbudget/strategy.go#L68\n",
        "createdAt" : "2016-11-09T09:26:22Z",
        "updatedAt" : "2016-11-09T09:26:23Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      },
      {
        "id" : "e29fcc39-743f-44dc-b7a7-2be129878208",
        "parentId" : "41c0b797-08fd-46b8-9387-a00a99133afb",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Aah ok, thanks.\nWhy do you say that spec is immutable? Is there some validation rule that disallows updates?\n",
        "createdAt" : "2016-11-09T09:37:00Z",
        "updatedAt" : "2016-11-09T09:37:00Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "ff525fcf-12c8-49dd-8326-ee06d198672b",
        "parentId" : "41c0b797-08fd-46b8-9387-a00a99133afb",
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : ">  Why do you say that spec is immutable? Is there some validation rule that disallows updates?\n\nCurrently yes:\nhttps://github.com/kubernetes/kubernetes/blob/c41c603baa7f0be1bc90d9157d2232f837cac9d0/pkg/apis/policy/validation/validation.go#L42\n",
        "createdAt" : "2016-11-09T11:32:23Z",
        "updatedAt" : "2016-11-09T11:32:23Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      }
    ],
    "commit" : "ada53fab42f94cedf99f995e92d879c720f8674d",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +117,121 @@\nfunc (r *EvictionREST) checkAndDecrement(namespace string, podName string, pdb policy.PodDisruptionBudget) (ok bool, err error) {\n\tif pdb.Status.ObservedGeneration != pdb.Generation {\n\t\treturn false, nil\n\t}"
  },
  {
    "id" : "46646015-0db6-47de-83b8-82a7ca5960f3",
    "prId" : 36196,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/36196#pullrequestreview-7291572",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "582d689c-58e1-4e2d-8951-c76197f38528",
        "parentId" : null,
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "Can you add a comment for why we are capturing the time here? Will be useful for future reviewers.\n",
        "createdAt" : "2016-11-04T16:53:21Z",
        "updatedAt" : "2016-11-06T18:38:07Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      },
      {
        "id" : "984e0db6-7916-4449-a60f-b25d678b1f7e",
        "parentId" : "582d689c-58e1-4e2d-8951-c76197f38528",
        "authorId" : "ab8bc7c5-233d-47c1-b03a-767fb930c021",
        "body" : "Done.\n",
        "createdAt" : "2016-11-04T21:56:42Z",
        "updatedAt" : "2016-11-06T18:38:07Z",
        "lastEditedBy" : "ab8bc7c5-233d-47c1-b03a-767fb930c021",
        "tags" : [
        ]
      }
    ],
    "commit" : "1fee246ca9550e689e6dd21032ceb07fe29462b1",
    "line" : null,
    "diffHunk" : "@@ -1,1 +134,138 @@\t// If the pod is not deleted within a reasonable time limit PDB controller will assume that it won't\n\t// be deleted at all and remove it from DisruptedPod map.\n\tpdb.Status.DisruptedPods[podName] = unversioned.Time{Time: time.Now()}\n\tif _, err := r.podDisruptionBudgetClient.PodDisruptionBudgets(namespace).UpdateStatus(&pdb); err != nil {\n\t\treturn false, err"
  }
]