[
  {
    "id" : "b3e85caa-105c-4a59-8cab-b236184a87df",
    "prId" : 86896,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/86896#pullrequestreview-339593629",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c49caf48-2937-4bae-bf6f-69740891f45a",
        "parentId" : null,
        "authorId" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "body" : "I don't know the difference between these two storage, do you happen to know what this means?",
        "createdAt" : "2020-01-08T00:39:51Z",
        "updatedAt" : "2020-01-23T15:49:07Z",
        "lastEditedBy" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "tags" : [
        ]
      },
      {
        "id" : "2a67e136-b675-4227-b51b-2a280a3d8f6b",
        "parentId" : "c49caf48-2937-4bae-bf6f-69740891f45a",
        "authorId" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "body" : "The error I cited above was due to storage.NewKeyNotFoundError() being used by the newFailDeleteUpdateStorage.\r\n\r\nSince we want the test to pass, normal storage should be used.",
        "createdAt" : "2020-01-08T00:43:45Z",
        "updatedAt" : "2020-01-23T15:49:07Z",
        "lastEditedBy" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "5b49d03b8440fbe531b8ebd978c18e7d3809cd50",
    "line" : 73,
    "diffHunk" : "@@ -1,1 +184,188 @@\t\tt.Run(tc.name, func(t *testing.T) {\n\t\t\ttestContext := genericapirequest.WithNamespace(genericapirequest.NewContext(), metav1.NamespaceDefault)\n\t\t\tstorage, _, _, server := newStorage(t)\n\t\t\tdefer server.Terminate(t)\n\t\t\tdefer storage.Store.DestroyFunc()"
  },
  {
    "id" : "2943f7a1-3d5e-4be7-ba7c-342124178e5f",
    "prId" : 53185,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/53185#pullrequestreview-272336222",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cfe166d8-f6f8-454a-a53e-1f5c2b8ebd6c",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "verify this is the error you expect... the name you specify (\"...badName\") is not a valid name",
        "createdAt" : "2019-08-08T04:19:09Z",
        "updatedAt" : "2019-08-22T03:47:10Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "277150362661cb4363404787352065df371c55dd",
    "line" : 60,
    "diffHunk" : "@@ -1,1 +89,93 @@\t\t\tbadNameInURL: true,\n\t\t\teviction:     &policy.Eviction{ObjectMeta: metav1.ObjectMeta{Name: \"foo\", Namespace: \"default\"}, DeleteOptions: metav1.NewDeleteOptions(0)},\n\t\t\texpectError:  true,\n\t\t},\n\t}"
  }
]