[
  {
    "id" : "a7f2300a-c43a-4336-8a23-4f05b22ef9d1",
    "prId" : 180,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c05c3e95-5d21-4039-a1bd-5cf78a8a0f58",
        "parentId" : null,
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "Isn't there a built in copy function?\n",
        "createdAt" : "2014-06-20T17:45:28Z",
        "updatedAt" : "2014-06-23T20:28:07Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      },
      {
        "id" : "8b1fca78-40d1-4d5e-ba6e-a28727d31999",
        "parentId" : "c05c3e95-5d21-4039-a1bd-5cf78a8a0f58",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Ah, comment is inaccurate-- I'm converting from a map to a slice.\n",
        "createdAt" : "2014-06-20T17:58:02Z",
        "updatedAt" : "2014-06-23T20:28:07Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "c12a3773f51498f1049400b9b197280f8f38b7f2",
    "line" : null,
    "diffHunk" : "@@ -1,1 +73,77 @@\tdefer m.lock.Unlock()\n\t// Convert from map to []string\n\tfor minion := range m.minions {\n\t\tcurrentMinions = append(currentMinions, minion)\n\t}"
  },
  {
    "id" : "49289fdf-fcf5-4c49-b1e9-aee587541388",
    "prId" : 180,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "32f84882-3f41-49b6-a88d-619bd06b82b5",
        "parentId" : null,
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "All of the other types return a first order object:\n\ntype MinionList struct {\n   JSONBase\n   Items: []string\n}\n\nThat way we get cleaner JSON object return.\n",
        "createdAt" : "2014-06-20T17:46:58Z",
        "updatedAt" : "2014-06-23T20:28:07Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "c12a3773f51498f1049400b9b197280f8f38b7f2",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +31,35 @@// Keep track of a set of minions. Safe for concurrent reading/writing.\ntype MinionRegistry interface {\n\tList() (currentMinions []string, err error)\n\tInsert(minion string) error\n\tDelete(minion string) error"
  }
]