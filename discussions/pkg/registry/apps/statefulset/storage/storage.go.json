[
  {
    "id" : "19b8cc2a-efac-4a07-8f64-54e79dea2b85",
    "prId" : 49168,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/49168#pullrequestreview-52734951",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7836d9a3-c024-4b1c-a7f8-a764dc958ff5",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "@directxman12 @deads2k are all scale endpoints returning extensions.Scale{} forever?",
        "createdAt" : "2017-07-22T01:05:46Z",
        "updatedAt" : "2017-08-07T19:18:59Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "8908fbe2-fac5-4024-b748-997fecd782c0",
        "parentId" : "7836d9a3-c024-4b1c-a7f8-a764dc958ff5",
        "authorId" : "a3d6d690-2601-4c58-a5bc-a3eaa025f8e0",
        "body" : "@liggitt From my understanding, as we can only have **at most one** internal version (which is `extensions` for now), the scale subresource can only be created using `extensions.Scale{}`.",
        "createdAt" : "2017-07-22T01:11:13Z",
        "updatedAt" : "2017-08-07T19:18:59Z",
        "lastEditedBy" : "a3d6d690-2601-4c58-a5bc-a3eaa025f8e0",
        "tags" : [
        ]
      },
      {
        "id" : "6f1e0163-8424-4030-86dc-2833329ecf85",
        "parentId" : "7836d9a3-c024-4b1c-a7f8-a764dc958ff5",
        "authorId" : "3a4b4830-dc71-4d7e-a7db-de2453284945",
        "body" : "so, it's kind of even worse that that.  In order to actually work, there has to be an object in the extensions category, so this storage basically doesn't matter.  I'd do what the RC storage does (return `autoscaling.Scale` from \"primary\" group, for use in the future, and then have the extensions storage return `extensions.Scale`)",
        "createdAt" : "2017-07-24T18:43:46Z",
        "updatedAt" : "2017-08-07T19:18:59Z",
        "lastEditedBy" : "3a4b4830-dc71-4d7e-a7db-de2453284945",
        "tags" : [
        ]
      },
      {
        "id" : "9f7d3add-58a6-4dba-9107-18f0d41ec4fe",
        "parentId" : "7836d9a3-c024-4b1c-a7f8-a764dc958ff5",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "> In order to actually work, there has to be an object in the extensions category, so this storage basically doesn't matter.\r\n\r\nThis won't do.  We should not just create another \"dummy\" resource that sits in the extensions group.  That is an indication that the polymorphic nature of the endpoitn has failed.",
        "createdAt" : "2017-07-24T18:46:29Z",
        "updatedAt" : "2017-08-07T19:18:59Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "8e86542f-94fe-4e33-b207-525f1155d173",
        "parentId" : "7836d9a3-c024-4b1c-a7f8-a764dc958ff5",
        "authorId" : "3a4b4830-dc71-4d7e-a7db-de2453284945",
        "body" : "> This won't do. We should not just create another \"dummy\" resource that sits in the extensions group\r\n\r\nOh yeah, totally agree, *but* if you want this to work *now*, that's what you'd have to do.  Otherwise, this actually working with other components will have to wait.",
        "createdAt" : "2017-07-24T21:24:05Z",
        "updatedAt" : "2017-08-07T19:18:59Z",
        "lastEditedBy" : "3a4b4830-dc71-4d7e-a7db-de2453284945",
        "tags" : [
        ]
      },
      {
        "id" : "d5ce1152-6a03-473c-9b77-466a894f29f0",
        "parentId" : "7836d9a3-c024-4b1c-a7f8-a764dc958ff5",
        "authorId" : "97dce74b-9a86-4bd2-812f-a7a70df47473",
        "body" : "Is the dummy object in `extensions` necessary for the actual REST API to work? Or are you just saying it's necessary for the current Scale client to work with it?\r\n\r\nIn other words, if we omit the dummy object, and do a direct `curl` to `/apis/apps/v1beta2/namespaces/default/statefulsets/blah/scale`, would that work?",
        "createdAt" : "2017-07-24T22:02:43Z",
        "updatedAt" : "2017-08-07T19:18:59Z",
        "lastEditedBy" : "97dce74b-9a86-4bd2-812f-a7a70df47473",
        "tags" : [
        ]
      },
      {
        "id" : "079fb44b-e9aa-4ac7-a380-d1992fe6657e",
        "parentId" : "7836d9a3-c024-4b1c-a7f8-a764dc958ff5",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "> Oh yeah, totally agree, but if you want this to work now, that's what you'd have to do. Otherwise, this actually working with other components will have to wait.\r\n\r\nIt's not a valid solution to \"work\" now.  That isn't working and doesn't fulfill the intent of the autoscaler.  If the infrastructure needs additional effort to be made to work, then that's necessary.\r\n\r\nIf we had caught the previous dummy in time, we would have stopped it before it got out the door.",
        "createdAt" : "2017-07-25T13:30:48Z",
        "updatedAt" : "2017-08-07T19:18:59Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "eeab2832-b2f6-4277-b07e-9098805f0145",
        "parentId" : "7836d9a3-c024-4b1c-a7f8-a764dc958ff5",
        "authorId" : "97dce74b-9a86-4bd2-812f-a7a70df47473",
        "body" : "Should this be `apps.Scale` or `autoscaling.Scale`?",
        "createdAt" : "2017-07-27T17:53:57Z",
        "updatedAt" : "2017-08-07T19:18:59Z",
        "lastEditedBy" : "97dce74b-9a86-4bd2-812f-a7a70df47473",
        "tags" : [
        ]
      }
    ],
    "commit" : "91f100b50178e1f46b46df21ea11a2f60e5d04aa",
    "line" : 83,
    "diffHunk" : "@@ -1,1 +125,129 @@// New creates a new Scale object\nfunc (r *ScaleREST) New() runtime.Object {\n\treturn &extensions.Scale{}\n}\n"
  }
]