[
  {
    "id" : "73ae6bc2-e210-4244-ae65-2ccf8dcdde1e",
    "prId" : 98377,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/98377#pullrequestreview-607731666",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fd6edc4a-0be1-4b7a-abc7-7ffec6541036",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Instead of constructing a scale object from the existing deployment, I expected us to construct a deployment object from the new scale object and the existing deployment object, and apply or update that?",
        "createdAt" : "2021-03-09T18:07:23Z",
        "updatedAt" : "2021-04-21T18:29:58Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "991d7520-e368-4c54-9e24-ce674374a7ed",
        "parentId" : "fd6edc4a-0be1-4b7a-abc7-7ffec6541036",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "doesn't the `patch` path have to work in terms of the request object?",
        "createdAt" : "2021-03-09T18:09:57Z",
        "updatedAt" : "2021-04-21T18:29:58Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "84522b26-65f0-45e3-9928-2e022f1ed5a6",
        "parentId" : "fd6edc4a-0be1-4b7a-abc7-7ffec6541036",
        "authorId" : "540c9da6-54d6-4aa0-9866-a6aa2187b553",
        "body" : "This is more or less what's happening. The problem is that in order to get the new scale object we need the \"old scale\" object from the deployment and run it through [UpdatedObject](https://github.com/kubernetes/kubernetes/blob/master/pkg/registry/apps/deployment/storage/storage.go#L378). UpdatedObject will update the managed fields of the scale object and conflict if needed. ",
        "createdAt" : "2021-03-09T18:15:57Z",
        "updatedAt" : "2021-04-21T18:29:58Z",
        "lastEditedBy" : "540c9da6-54d6-4aa0-9866-a6aa2187b553",
        "tags" : [
        ]
      },
      {
        "id" : "1ac27762-955e-4897-a236-00ab8322239e",
        "parentId" : "fd6edc4a-0be1-4b7a-abc7-7ffec6541036",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "I think I am objecting to a large part of the existing codebase here. Antoine attempted to convince me that I have to hold my nose for this. I'll look again.",
        "createdAt" : "2021-03-09T18:30:35Z",
        "updatedAt" : "2021-04-21T18:29:58Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "5b666a61a170f61c7e223085478b24a03612fa99",
    "line" : 63,
    "diffHunk" : "@@ -1,1 +409,413 @@\t)\n\n\t// deployment -> old scale\n\toldScale, err := scaleFromDeployment(deployment)\n\tif err != nil {"
  },
  {
    "id" : "b4c0e867-5597-4a2f-be59-eba9954a0684",
    "prId" : 98377,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/98377#pullrequestreview-635281887",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4b3b82c3-ae44-4531-8f43-3416dc592cf2",
        "parentId" : null,
        "authorId" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "body" : "When would we not have the `requestInfo`?",
        "createdAt" : "2021-04-09T16:30:27Z",
        "updatedAt" : "2021-04-21T18:29:58Z",
        "lastEditedBy" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "tags" : [
        ]
      },
      {
        "id" : "1deea4e8-4334-4bb0-adfe-d2decbb70766",
        "parentId" : "4b3b82c3-ae44-4531-8f43-3416dc592cf2",
        "authorId" : "540c9da6-54d6-4aa0-9866-a6aa2187b553",
        "body" : "FWIW this is what @liggitt linked earlier on: https://github.com/kubernetes/kubernetes/blob/master/pkg/registry/apps/deployment/strategy.go#L53-L56\r\n\r\nI borrow the pattern from there. There are also some tests around different versions (see [here](https://github.com/kubernetes/kubernetes/blob/34909133de6d5ae5786ff8f6e3dd697ddce75e71/pkg/registry/apps/daemonset/strategy_test.go#L43) ).\r\n\r\nIt's probably not exactly the same thing, so I am totally fine in changing the logic here. ",
        "createdAt" : "2021-04-12T13:15:12Z",
        "updatedAt" : "2021-04-21T18:29:58Z",
        "lastEditedBy" : "540c9da6-54d6-4aa0-9866-a6aa2187b553",
        "tags" : [
        ]
      },
      {
        "id" : "d14af9b1-1612-4041-9545-cddf00c71c81",
        "parentId" : "4b3b82c3-ae44-4531-8f43-3416dc592cf2",
        "authorId" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "body" : "That's great, I'm just curious how we would end-up with a `requestInfo` that doesn't know about a version we're serving here. Also I think we should rename `defaultGroupVersion` to merely `groupVersion` since default is a little misleading.",
        "createdAt" : "2021-04-12T23:39:39Z",
        "updatedAt" : "2021-04-21T18:29:58Z",
        "lastEditedBy" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "tags" : [
        ]
      },
      {
        "id" : "f886557b-62c0-491e-ba91-3a2708e5e9f2",
        "parentId" : "4b3b82c3-ae44-4531-8f43-3416dc592cf2",
        "authorId" : "540c9da6-54d6-4aa0-9866-a6aa2187b553",
        "body" : "I have renamed the variable and cleaned up the commit history.",
        "createdAt" : "2021-04-14T07:12:28Z",
        "updatedAt" : "2021-04-21T18:29:58Z",
        "lastEditedBy" : "540c9da6-54d6-4aa0-9866-a6aa2187b553",
        "tags" : [
        ]
      }
    ],
    "commit" : "5b666a61a170f61c7e223085478b24a03612fa99",
    "line" : 48,
    "diffHunk" : "@@ -1,1 +394,398 @@\n\tgroupVersion := schema.GroupVersion{Group: \"apps\", Version: \"v1\"}\n\tif requestInfo, found := genericapirequest.RequestInfoFrom(ctx); found {\n\t\trequestGroupVersion := schema.GroupVersion{Group: requestInfo.APIGroup, Version: requestInfo.APIVersion}\n\t\tif _, ok := replicasPathInDeployment[requestGroupVersion.String()]; ok {"
  },
  {
    "id" : "65731758-462a-4853-87fb-1bb579958065",
    "prId" : 90342,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/90342#pullrequestreview-397654934",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9ff00cc1-80aa-4563-982c-2b8719a48a52",
        "parentId" : null,
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "should the error still begin with lower case here?\r\n(applies to the other object types's storage / storage_test)",
        "createdAt" : "2020-04-21T20:16:16Z",
        "updatedAt" : "2020-04-21T20:36:33Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      },
      {
        "id" : "567eb8bf-e33c-4a65-aa65-fc3f304d4607",
        "parentId" : "9ff00cc1-80aa-4563-982c-2b8719a48a52",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "I matched precondition error message format used elsewhere for consistency",
        "createdAt" : "2020-04-21T20:34:55Z",
        "updatedAt" : "2020-04-21T20:36:33Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "dab2a830da2f6966946b7ab4292f224650c9d4ad",
    "line" : 106,
    "diffHunk" : "@@ -1,1 +398,402 @@\t\t\tapps.Resource(\"deployments/scale\"),\n\t\t\tdeployment.Name,\n\t\t\tfmt.Errorf(\"Precondition failed: UID in precondition: %v, UID in object meta: %v\", scale.UID, deployment.UID),\n\t\t)\n\t}"
  },
  {
    "id" : "5b7ccf40-0c60-44f7-afb2-0e10e8a7ad4c",
    "prId" : 76849,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/76849#pullrequestreview-229129927",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "80264688-2987-48c5-afa8-6fbba1b03fc0",
        "parentId" : null,
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "Good catch. I expected this bug to affect more than the admission chain, but it seemed so.",
        "createdAt" : "2019-04-21T22:22:40Z",
        "updatedAt" : "2019-04-21T22:23:19Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      },
      {
        "id" : "fbfa4d2c-6d23-4075-a3e3-6b10bf4dfa9b",
        "parentId" : "80264688-2987-48c5-afa8-6fbba1b03fc0",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "the integration test caught this as well... name wasn't getting populated in admission attributes so the webhook record step wasn't matching our expectations. turns out testing everything catches things :)",
        "createdAt" : "2019-04-21T22:28:30Z",
        "updatedAt" : "2019-04-21T22:28:31Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "4c1495b6-ca6a-4881-a2d0-d22c43d6dd0c",
        "parentId" : "80264688-2987-48c5-afa8-6fbba1b03fc0",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "Yeah, this test is great!",
        "createdAt" : "2019-04-22T16:24:19Z",
        "updatedAt" : "2019-04-22T16:24:21Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "69042da958525c5e5008baa1d4fa3175c2226764",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +159,163 @@}\n\nvar _ = rest.NamedCreater(&RollbackREST{})\n\nfunc (r *RollbackREST) Create(ctx context.Context, name string, obj runtime.Object, createValidation rest.ValidateObjectFunc, options *metav1.CreateOptions) (runtime.Object, error) {"
  },
  {
    "id" : "8eaf8310-febb-4aa0-a45a-5d279fb68d90",
    "prId" : 63837,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/63837#pullrequestreview-123188864",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7bca9452-a58a-44c3-89d4-b39cf743b089",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "What does nil mean here? Hopefully \"use the default\"?",
        "createdAt" : "2018-05-24T21:04:11Z",
        "updatedAt" : "2018-05-26T00:14:02Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "c36c5f5f-23ac-4174-b554-7e2d8043141b",
        "parentId" : "7bca9452-a58a-44c3-89d4-b39cf743b089",
        "authorId" : "695b6860-569c-4e63-a215-7342e2279a94",
        "body" : "Yes. The returned list gets appended to default media types, so nil means using the default\r\nhttps://github.com/kubernetes/kubernetes/blob/972a74e23805d3d75bc68ddf5bf9c409e8f9b294/staging/src/k8s.io/apiserver/pkg/endpoints/installer.go#L943-L945",
        "createdAt" : "2018-05-24T22:03:18Z",
        "updatedAt" : "2018-05-26T00:14:02Z",
        "lastEditedBy" : "695b6860-569c-4e63-a215-7342e2279a94",
        "tags" : [
        ]
      }
    ],
    "commit" : "5ebcdb33ffdc88032b02660d25c8b690f6741e13",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +142,146 @@// PATCH) can respond with.\nfunc (r *RollbackREST) ProducesMIMETypes(verb string) []string {\n\treturn nil\n}\n"
  }
]