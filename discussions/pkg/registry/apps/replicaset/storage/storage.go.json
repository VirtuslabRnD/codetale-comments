[
  {
    "id" : "a6abcd7e-29ad-4fcf-862f-617284aff18b",
    "prId" : 66041,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/66041#pullrequestreview-150969431",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5da8e1b2-4b04-45fe-a4f5-bddd5f54aef9",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "@liggitt isn't here a race between multiple updating actors?\r\n\r\nAssume:\r\n- the request comes in with scale `resourceVersion=50` (maybe because I am faking the `resourceVersion`)\r\n- L174: r.store.Get returns `resourceVersion=42`\r\n- L203: overrides `rs.resourceVersion=50` which is actually based on `resourceVesion=42`\r\n- meanwhile there were actual updates, reaching the real `resourceVersion=50`\r\n- L204: update succeeds, wiping all changes out since `resourceVersion=42`.",
        "createdAt" : "2018-08-30T11:12:04Z",
        "updatedAt" : "2018-08-30T11:12:04Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "81836e01-393c-409a-9c97-f447bd53c76a",
        "parentId" : "5da8e1b2-4b04-45fe-a4f5-bddd5f54aef9",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "The incoming request faking the resource version and happening to coincide with the actual resourceVersion isn't a scenario we care about. The same issue would exist with any resource.",
        "createdAt" : "2018-08-30T12:12:00Z",
        "updatedAt" : "2018-08-30T12:12:00Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "be200074-baa6-4b9c-898b-e2e08d4cbba9",
        "parentId" : "5da8e1b2-4b04-45fe-a4f5-bddd5f54aef9",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : " A more interesting case is when the scale resource version is not set. Stepping back, I think updating the rs from the incoming scale object should happen inside an updatedObjectInfo implementation, and the rs resourceVersion be left as is if the incoming scale object didn't set it. See a similar approach described at https://github.com/kubernetes/kubernetes/pull/59416#discussion_r213531564",
        "createdAt" : "2018-08-30T12:30:37Z",
        "updatedAt" : "2018-08-30T12:30:37Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "652e2dc02557eff0839da8f31661992be55a3268",
    "line" : 63,
    "diffHunk" : "@@ -1,1 +202,206 @@\trs.Spec.Replicas = scale.Spec.Replicas\n\trs.ResourceVersion = scale.ResourceVersion\n\tobj, _, err = r.store.Update(ctx, rs.Name, rest.DefaultUpdatedObjectInfo(rs), createValidation, updateValidation, false, options)\n\tif err != nil {\n\t\treturn nil, false, err"
  }
]