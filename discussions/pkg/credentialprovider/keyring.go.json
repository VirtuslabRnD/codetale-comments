[
  {
    "id" : "51addcc2-650a-4c86-8ae5-8836d78f6279",
    "prId" : 21286,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bec62da3-7461-4e2e-b97f-775fab6d07e2",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "Previously if I had credentials for `host.name/path` would get a map that included \n\n```\nhost.name: cred\nhost.name/path: cred\n```\n\nIf I'm reading correctly, I now get\n\n```\nhost.name/path: cred\n```\n\nI think that's an intentional change to tighten credential usage.  Please confirm\n",
        "createdAt" : "2016-02-19T17:28:06Z",
        "updatedAt" : "2016-02-19T17:28:06Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "c8a40794-a06b-41f7-9fd0-f4590a744f56",
        "parentId" : "bec62da3-7461-4e2e-b97f-775fab6d07e2",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Previously, /v1/ and /v2/ were being treated as answering to `host.name`, `host.name/v1/` and `host.name/v2/`.  That means that an auth url like \"host.name/v2/some/repo\" would be resolved to matching `host.name`, which is very incorrect (we should never present credentials for that).  This change specifically handles those paths and tightens.\n",
        "createdAt" : "2016-02-19T18:12:08Z",
        "updatedAt" : "2016-02-19T18:12:08Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "8c2731491532dc06f967a89517777c5d4aaf18ca",
    "line" : 37,
    "diffHunk" : "@@ -1,1 +94,98 @@\t\t\tkey = parsed.Host\n\t\t}\n\t\tdk.creds[key] = append(dk.creds[key], creds)\n\t\tdk.index = append(dk.index, key)\n\t}"
  },
  {
    "id" : "b528f592-becc-4f7e-a797-376f3d70288e",
    "prId" : 8863,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "71c2d4b9-ba09-443b-814a-17529635f8aa",
        "parentId" : null,
        "authorId" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "body" : "This code is confusing because the comment gives \"library/ubuntu\" as an example, but len(strings.SplitN(\"library/ubuntu\", \"/\", 2)) == 2 (not 1).  \n",
        "createdAt" : "2015-05-29T15:57:18Z",
        "updatedAt" : "2015-05-30T10:59:27Z",
        "lastEditedBy" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "tags" : [
        ]
      },
      {
        "id" : "4c8cd04b-d0b7-44b3-8532-782c4acd885e",
        "parentId" : "71c2d4b9-ba09-443b-814a-17529635f8aa",
        "authorId" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "body" : "This is because an image reference to 'ubuntu' is resolved internally by docker to 'library/ubuntu', so the SplitN would be against just 'ubuntu'\n",
        "createdAt" : "2015-05-29T15:59:15Z",
        "updatedAt" : "2015-05-30T10:59:27Z",
        "lastEditedBy" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "tags" : [
        ]
      }
    ],
    "commit" : "9a94f7cc3808c46232d3048a088ce434c74f1dd7",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +113,117 @@\tif len(parts) == 1 {\n\t\t// e.g. library/ubuntu\n\t\treturn true\n\t}\n"
  },
  {
    "id" : "4e81cee9-7fc8-44ec-b2a1-5b6efdd319c9",
    "prId" : 8863,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0b70f372-f2bc-408b-9178-c50b4184a1b0",
        "parentId" : null,
        "authorId" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "body" : "could parts be a zero length slice at this point?\n",
        "createdAt" : "2015-05-29T15:58:06Z",
        "updatedAt" : "2015-05-30T10:59:27Z",
        "lastEditedBy" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "tags" : [
        ]
      },
      {
        "id" : "9cc5f8fc-ef10-4abd-8985-31ed8a9cde94",
        "parentId" : "0b70f372-f2bc-408b-9178-c50b4184a1b0",
        "authorId" : "ec801d33-3a38-47a2-a267-f72db1de574b",
        "body" : "if the image is empty yes, I should add test case for that\n",
        "createdAt" : "2015-05-29T16:44:41Z",
        "updatedAt" : "2015-05-30T10:59:27Z",
        "lastEditedBy" : "ec801d33-3a38-47a2-a267-f72db1de574b",
        "tags" : [
        ]
      }
    ],
    "commit" : "9a94f7cc3808c46232d3048a088ce434c74f1dd7",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +116,120 @@\t}\n\n\tif parts[0] == \"docker.io\" || parts[0] == \"index.docker.io\" {\n\t\t// resolve docker.io/image and index.docker.io/image as default registry\n\t\treturn true"
  },
  {
    "id" : "f839d9fe-283e-4030-9d5a-dc09cd34b4c0",
    "prId" : 8438,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "31ebdfe2-8182-45e3-9d3c-0865e09e88a6",
        "parentId" : null,
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "This means the urls don't have to be equal.  Fix this code, or update the docs/name of the function.\n",
        "createdAt" : "2015-05-27T16:50:06Z",
        "updatedAt" : "2015-05-29T18:02:11Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      },
      {
        "id" : "4d64085d-f004-4c5e-8142-d26ca77ef687",
        "parentId" : "31ebdfe2-8182-45e3-9d3c-0865e09e88a6",
        "authorId" : "bbc168c7-378e-41b4-a88b-d224275da099",
        "body" : "Updated the doc.\n",
        "createdAt" : "2015-05-29T16:05:11Z",
        "updatedAt" : "2015-05-29T18:02:11Z",
        "lastEditedBy" : "bbc168c7-378e-41b4-a88b-d224275da099",
        "tags" : [
        ]
      }
    ],
    "commit" : "8b57b6fea6ade081bb4afccc3c705c46cb00f3ff",
    "line" : 68,
    "diffHunk" : "@@ -1,1 +175,179 @@\t\treturn false, nil\n\t}\n\tif !strings.HasPrefix(targetUrl.Path, globUrl.Path) {\n\t\t// the path of the credential must be a prefix\n\t\treturn false, nil"
  },
  {
    "id" : "12d94009-435a-4df0-9d7c-1c403352f0c4",
    "prId" : 8438,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "10d1b2f7-7c8c-4429-a0f9-49021258f506",
        "parentId" : null,
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "as far as I can tell these are vanilla strings, why are you not just using string equality?\n",
        "createdAt" : "2015-05-27T16:51:30Z",
        "updatedAt" : "2015-05-29T18:02:11Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      },
      {
        "id" : "8daedbb9-8d7e-45bc-9f37-25e9e71353a8",
        "parentId" : "10d1b2f7-7c8c-4429-a0f9-49021258f506",
        "authorId" : "bbc168c7-378e-41b4-a88b-d224275da099",
        "body" : "I updated the doc to reflect that we support wild cards in host names.\n",
        "createdAt" : "2015-05-29T16:05:35Z",
        "updatedAt" : "2015-05-29T18:02:11Z",
        "lastEditedBy" : "bbc168c7-378e-41b4-a88b-d224275da099",
        "tags" : [
        ]
      }
    ],
    "commit" : "8b57b6fea6ade081bb4afccc3c705c46cb00f3ff",
    "line" : 74,
    "diffHunk" : "@@ -1,1 +181,185 @@\tfor k, globUrlPart := range globUrlParts {\n\t\ttargetUrlPart := targetUrlParts[k]\n\t\tmatched, err := filepath.Match(globUrlPart, targetUrlPart)\n\t\tif err != nil {\n\t\t\treturn false, err"
  },
  {
    "id" : "287098e6-7b9e-48cb-b4ae-74f68ea6015c",
    "prId" : 7974,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8156d140-fed9-4976-bfba-d6ac784517ec",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "DockerConfig could be private again, right? I should have asked for that in the previous one. Maybe you can fix in a follow-up?\n",
        "createdAt" : "2015-05-18T20:44:15Z",
        "updatedAt" : "2015-05-19T16:41:15Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "f164d53f-0ea0-4bea-8f7d-a4144178c429",
        "parentId" : "8156d140-fed9-4976-bfba-d6ac784517ec",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "I think you meant `DockerConfigEntryWithAuth`.  It's useful for testing since it can serialize all the `auth` field, but find a different way to do that.  I'll open a separate pull.\n",
        "createdAt" : "2015-05-19T12:45:50Z",
        "updatedAt" : "2015-05-19T16:41:15Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "f122ab5a-46b3-49ae-bd53-c60d92dfd417",
        "parentId" : "8156d140-fed9-4976-bfba-d6ac784517ec",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "> I think you meant DockerConfigEntryWithAuth. It's useful for testing since it can serialize all the auth field, but find a different way to do that. I'll open a separate pull.\n\nIt made sense to do in this pull.  I limited the scope of the `DockerConfigEntryWithAuth`.  `DockerConfig` has been public for a long time.\n",
        "createdAt" : "2015-05-19T13:03:25Z",
        "updatedAt" : "2015-05-19T16:41:15Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "7474afde-790e-4fba-979e-ba91cbf2de69",
        "parentId" : "8156d140-fed9-4976-bfba-d6ac784517ec",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "gotcha, thanks\n",
        "createdAt" : "2015-05-19T17:22:45Z",
        "updatedAt" : "2015-05-19T17:22:45Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "72c0709f18cbeff1efef3c2bd601db5f1e117509",
    "line" : 48,
    "diffHunk" : "@@ -1,1 +195,199 @@\tfor _, passedSecret := range passedSecrets {\n\t\tif dockercfgBytes, dockercfgExists := passedSecret.Data[api.DockerConfigKey]; (passedSecret.Type == api.SecretTypeDockercfg) && dockercfgExists && (len(dockercfgBytes) > 0) {\n\t\t\tdockercfg := DockerConfig{}\n\t\t\tif err := json.Unmarshal(dockercfgBytes, &dockercfg); err != nil {\n\t\t\t\treturn nil, err"
  }
]