[
  {
    "id" : "3cce5336-5106-49a1-89d7-4ce68961a433",
    "prId" : 80764,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/80764#pullrequestreview-269334811",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dae26ab4-fee4-4f8e-a3c8-fa5cda3f87b6",
        "parentId" : null,
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "/cc @pjh ",
        "createdAt" : "2019-07-30T22:06:12Z",
        "updatedAt" : "2019-07-30T22:06:12Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "ea4e6554-20f0-446b-8035-567cde80e592",
        "parentId" : "dae26ab4-fee4-4f8e-a3c8-fa5cda3f87b6",
        "authorId" : "84643be2-004e-4f49-9ab2-b32a1995bad6",
        "body" : "I checked with a couple team members and they approved this approach. There's a small chance the result will be different in a shielded VM (with UEFI firmware instead of BIOS) - I'll test it out and will let you know if there's a difference (but don't block merge on this).",
        "createdAt" : "2019-07-31T23:37:30Z",
        "updatedAt" : "2019-07-31T23:37:30Z",
        "lastEditedBy" : "84643be2-004e-4f49-9ab2-b32a1995bad6",
        "tags" : [
        ]
      }
    ],
    "commit" : "a02289a91bf9598a805390703d8333206341f88e",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +121,125 @@\n\tif runtime.GOOS == \"windows\" {\n\t\tdata, err := exec.Command(\"wmic\", \"computersystem\", \"get\", \"model\").Output()\n\t\tif err != nil {\n\t\t\treturn false"
  },
  {
    "id" : "cc0ff96d-7e8c-4313-a748-2e313b21f347",
    "prId" : 58078,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/58078#pullrequestreview-89630116",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "be5c918b-7374-4ea9-95be-879fee3469ac",
        "parentId" : null,
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "I wonder if \"Google\" is used anywhere as I've only seen \"Google Compute Engine\". ",
        "createdAt" : "2018-01-17T18:53:59Z",
        "updatedAt" : "2018-01-17T23:34:12Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "3fa35bc2-c684-4d2d-9172-06581ec0ddc1",
        "parentId" : "be5c918b-7374-4ea9-95be-879fee3469ac",
        "authorId" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "body" : "@yujuhong see the picture of the device and details - https://github.com/kubernetes/kubernetes/issues/57760#issuecomment-356466614",
        "createdAt" : "2018-01-17T19:18:47Z",
        "updatedAt" : "2018-01-17T23:34:12Z",
        "lastEditedBy" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "tags" : [
        ]
      },
      {
        "id" : "b505f389-f4d1-4a56-99ac-f9aea70e4175",
        "parentId" : "be5c918b-7374-4ea9-95be-879fee3469ac",
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "I saw the picture. The question is whether there exists a file where the full product name == \"Google\" :-)",
        "createdAt" : "2018-01-17T19:29:26Z",
        "updatedAt" : "2018-01-17T23:34:12Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "85f0e461-0000-4068-a2b6-751160aa6328",
        "parentId" : "be5c918b-7374-4ea9-95be-879fee3469ac",
        "authorId" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "body" : "Aha. :)",
        "createdAt" : "2018-01-17T23:34:50Z",
        "updatedAt" : "2018-01-17T23:34:50Z",
        "lastEditedBy" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "0f5013b71532560f0ea0417346fb99f8db1f7fde",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +122,126 @@\t}\n\tname := strings.TrimSpace(string(data))\n\treturn name == \"Google\" || name == \"Google Compute Engine\"\n}\n"
  },
  {
    "id" : "4c0181f7-f240-41f3-9e8d-ba0cfe0054f2",
    "prId" : 28871,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9a3bb724-6531-4fd0-8c84-0d0c664eef16",
        "parentId" : null,
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "Should this be a hot loop? Backing off or sleeping seems better.\n",
        "createdAt" : "2016-07-13T01:04:23Z",
        "updatedAt" : "2016-07-15T18:41:10Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "ea1a459a80d36b26592b812daeab19fd81a771a1",
    "line" : null,
    "diffHunk" : "@@ -1,1 +216,220 @@\t\t\tdefaultServiceAccountExists = true\n\t\t\tbreak\n\t\t}\n\t}\n\tif !defaultServiceAccountExists {"
  },
  {
    "id" : "e41c3f3f-e216-4300-a848-1d62dd23f6cf",
    "prId" : 28871,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "42268b96-c4d0-4733-9c26-b99b6aa74be7",
        "parentId" : null,
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "Don't think my previous comment was addressed: this shouldn't run in such a hot loop.\n",
        "createdAt" : "2016-07-13T02:06:27Z",
        "updatedAt" : "2016-07-15T18:41:10Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "9239eb51-4ca9-4247-9884-38eb73f9d85d",
        "parentId" : "42268b96-c4d0-4733-9c26-b99b6aa74be7",
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "Wouldn't `ReadUrl` have an in-built timeout? I don't think this logic will busy wait. I can add a delay if it will be useful.\n",
        "createdAt" : "2016-07-13T17:38:40Z",
        "updatedAt" : "2016-07-15T18:41:10Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      },
      {
        "id" : "439f6562-beb9-4216-9598-2d3e47c4aef5",
        "parentId" : "42268b96-c4d0-4733-9c26-b99b6aa74be7",
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "Even if there is a timeout, trying immediately may not be good. If the metadata server is overwhelmed by requests already, adding a delay will help.\n",
        "createdAt" : "2016-07-13T17:45:19Z",
        "updatedAt" : "2016-07-15T18:41:10Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "ea1a459a80d36b26592b812daeab19fd81a771a1",
    "line" : null,
    "diffHunk" : "@@ -1,1 +215,219 @@\t\tif strings.TrimSpace(sa) == defaultServiceAccount {\n\t\t\tdefaultServiceAccountExists = true\n\t\t\tbreak\n\t\t}\n\t}"
  },
  {
    "id" : "00c41721-e347-4dda-a672-5584666a81dc",
    "prId" : 28871,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7697baa6-ac59-45d1-8fd1-92aa2d4f7e75",
        "parentId" : null,
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "nit: add a comment explaining what the this block of code is doing.\n\n```\n// We expect the service account to return a list of account directories separated by newlines, e.g.,\n//   account-name1/\n//   account-name2/\n// ref: https://cloud.google.com/compute/docs/storing-retrieving-metadata\n```\n",
        "createdAt" : "2016-07-14T23:50:36Z",
        "updatedAt" : "2016-07-15T18:41:10Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "2f68a36a-5e42-402d-8b3f-e6e724e50a3b",
        "parentId" : "7697baa6-ac59-45d1-8fd1-92aa2d4f7e75",
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "Good suggestion. Adding your comments.\n",
        "createdAt" : "2016-07-15T02:15:12Z",
        "updatedAt" : "2016-07-15T18:41:10Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      }
    ],
    "commit" : "ea1a459a80d36b26592b812daeab19fd81a771a1",
    "line" : null,
    "diffHunk" : "@@ -1,1 +211,215 @@\t//   sv-account-name2/\n\t// ref: https://cloud.google.com/compute/docs/storing-retrieving-metadata\n\tdefaultServiceAccountExists := false\n\tfor _, sa := range strings.Split(string(value), \"\\n\") {\n\t\tif strings.TrimSpace(sa) == defaultServiceAccount {"
  },
  {
    "id" : "d515656e-5a59-433d-8fb1-e94dc482bec6",
    "prId" : 28871,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5ac516e7-f946-4f0c-9c38-fbd31a9986ed",
        "parentId" : null,
        "authorId" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "body" : "Is it undocumented but expected to remain stable? Or undocumented as in it may change or break at any point?\n",
        "createdAt" : "2016-07-15T07:37:29Z",
        "updatedAt" : "2016-07-15T18:41:10Z",
        "lastEditedBy" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "tags" : [
        ]
      },
      {
        "id" : "2dfe31a0-de7e-49c5-85c6-0ffc9c561d13",
        "parentId" : "5ac516e7-f946-4f0c-9c38-fbd31a9986ed",
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "https://github.com/google/cadvisor/commit/cf548f1b70cd95321d5cde118e2c5b9f729423a7#commitcomment-18222652\n",
        "createdAt" : "2016-07-15T17:00:37Z",
        "updatedAt" : "2016-07-15T18:41:10Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      }
    ],
    "commit" : "ea1a459a80d36b26592b812daeab19fd81a771a1",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +108,112 @@\n// Returns true if it finds a local GCE VM.\n// Looks at a product file that is an undocumented API.\nfunc onGCEVM() bool {\n\tdata, err := ioutil.ReadFile(gceProductNameFile)"
  },
  {
    "id" : "cabf9579-323e-4fff-ab6d-11b3820b4eac",
    "prId" : 28871,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0046f6ed-3922-4428-a655-f57fe3cf54cf",
        "parentId" : null,
        "authorId" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "body" : "On a VM without a service account, the result is empty (with a 200 response). It looks like the following code will probably be ok with that, but please add it to the docs and test on a VM w/o a service account. \n",
        "createdAt" : "2016-07-15T07:51:32Z",
        "updatedAt" : "2016-07-15T18:41:10Z",
        "lastEditedBy" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "tags" : [
        ]
      },
      {
        "id" : "3d7e0973-bf22-4652-b706-60332534e8ad",
        "parentId" : "0046f6ed-3922-4428-a655-f57fe3cf54cf",
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "The current node e2e instances all don't have service account. If the node e2e test passes, this should have worked. :)\n",
        "createdAt" : "2016-07-15T08:36:45Z",
        "updatedAt" : "2016-07-15T18:41:10Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      },
      {
        "id" : "dd92ef26-c328-457f-8643-133277392f7e",
        "parentId" : "0046f6ed-3922-4428-a655-f57fe3cf54cf",
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "I have explicitly mentioned that in the function description above.\n",
        "createdAt" : "2016-07-15T18:39:20Z",
        "updatedAt" : "2016-07-15T18:41:10Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      }
    ],
    "commit" : "ea1a459a80d36b26592b812daeab19fd81a771a1",
    "line" : null,
    "diffHunk" : "@@ -1,1 +207,211 @@\t\treturn value, err\n\t})\n\t// We expect the service account to return a list of account directories separated by newlines, e.g.,\n\t//   sv-account-name1/\n\t//   sv-account-name2/"
  },
  {
    "id" : "95eb0898-e4f9-419e-ab43-1bc056ae954e",
    "prId" : 102507,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/102507#pullrequestreview-710870485",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3856f1e4-5d6b-4761-baa8-f379f6ebe6e5",
        "parentId" : null,
        "authorId" : "7aca96c2-45d7-4567-99be-0323d7556c55",
        "body" : "Not sure I agree with this ordering. I agree about the relative costs but if we need to enter either switch the system is miconfigured. At the point the cost seems like a non issue. For the good case you need to pass both switched anyway. In this case we may have a misleading error message suggesting you are on GCP. I think it would be better to put back the original order and add a warning you are attempting to use a GCP credential provider on a non GCP VM to the !onGCEVM case.",
        "createdAt" : "2021-07-19T20:08:20Z",
        "updatedAt" : "2021-07-19T20:08:20Z",
        "lastEditedBy" : "7aca96c2-45d7-4567-99be-0323d7556c55",
        "tags" : [
        ]
      },
      {
        "id" : "f0a0075c-18a9-44a9-bc6c-f73babbf9223",
        "parentId" : "3856f1e4-5d6b-4761-baa8-f379f6ebe6e5",
        "authorId" : "5821ed6f-e2e0-442e-9f8e-43ab7b9f2738",
        "body" : "Avoiding the misleading error message was my original thinking, happy to switch it back.\r\n\r\nI'm not sure if the other warning you propose would add much value though: IIUC these credential providers are on by default (thus the need for this PR) so it's not like the user misconfigured something if we're getting this far on a non-GCP VM. The warning would just get logged all the time and wouldn't be actionable.",
        "createdAt" : "2021-07-19T20:17:03Z",
        "updatedAt" : "2021-07-19T20:17:03Z",
        "lastEditedBy" : "5821ed6f-e2e0-442e-9f8e-43ab7b9f2738",
        "tags" : [
        ]
      },
      {
        "id" : "03289a82-8aff-4ba5-95aa-7373963cf372",
        "parentId" : "3856f1e4-5d6b-4761-baa8-f379f6ebe6e5",
        "authorId" : "7aca96c2-45d7-4567-99be-0323d7556c55",
        "body" : "I thought we would only have this on if it was configured. If thats not true, then I think its even more important to switch back. (As you say to avoid the misleading error message)",
        "createdAt" : "2021-07-19T21:53:55Z",
        "updatedAt" : "2021-07-19T21:53:55Z",
        "lastEditedBy" : "7aca96c2-45d7-4567-99be-0323d7556c55",
        "tags" : [
        ]
      },
      {
        "id" : "7f127ccd-b863-4672-aae5-e8ce06948f9c",
        "parentId" : "3856f1e4-5d6b-4761-baa8-f379f6ebe6e5",
        "authorId" : "5821ed6f-e2e0-442e-9f8e-43ab7b9f2738",
        "body" : "Switched this back around.",
        "createdAt" : "2021-07-19T22:18:18Z",
        "updatedAt" : "2021-07-19T22:18:18Z",
        "lastEditedBy" : "5821ed6f-e2e0-442e-9f8e-43ab7b9f2738",
        "tags" : [
        ]
      },
      {
        "id" : "4d795248-9f69-4015-b278-791b3c69da0f",
        "parentId" : "3856f1e4-5d6b-4761-baa8-f379f6ebe6e5",
        "authorId" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "body" : "I'm not following the logic here to switch the order back to run `onGCEVM` first. If the feature gate is enabled (i.e. disabled), then there's no reason to ever call onGCEVM, because the plugin is explicitly disabled. In this case, the warning message makes sense too, because the plugin is disabled anyways. When it is disabled, why bother running  `onGCEVM` which is a relatively expensive operation that reads a file from disk? ",
        "createdAt" : "2021-07-20T16:44:02Z",
        "updatedAt" : "2021-07-20T16:44:05Z",
        "lastEditedBy" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "tags" : [
        ]
      },
      {
        "id" : "fcf4f206-ded9-4cfd-bb00-4f9040175791",
        "parentId" : "3856f1e4-5d6b-4761-baa8-f379f6ebe6e5",
        "authorId" : "5821ed6f-e2e0-442e-9f8e-43ab7b9f2738",
        "body" : "With the in-tree cloud providers, you have to pass `--cloud-provider=foo` to enable them so it makes sense to print a warning if you pass that flag while the feature gate that disables them is turned on, since that's obviously a misconfiguration of either the flag or the feature gate.\r\n\r\nWith the in-tree credential providers OTOH, there's no flag to enable them (as far as I'm aware) -- we just rely on the `onGCEVM` check alone. So if the feature gate is turned on but we're not on a GCP VM, there's no reason to print a warning about the GCP provider being disabled... Nothing is misconfigured in that case, the warning is just confusing and unactionable.",
        "createdAt" : "2021-07-20T17:05:59Z",
        "updatedAt" : "2021-07-20T17:05:59Z",
        "lastEditedBy" : "5821ed6f-e2e0-442e-9f8e-43ab7b9f2738",
        "tags" : [
        ]
      },
      {
        "id" : "c2bb584d-e19c-41db-b047-0f449f73dff9",
        "parentId" : "3856f1e4-5d6b-4761-baa8-f379f6ebe6e5",
        "authorId" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "body" : "Gotcha, thanks for clarifying.",
        "createdAt" : "2021-07-20T17:08:08Z",
        "updatedAt" : "2021-07-20T17:08:08Z",
        "lastEditedBy" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "tags" : [
        ]
      }
    ],
    "commit" : "a947c32783e9027922762d6f76f5c27926f9bc0a",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +150,154 @@\t\treturn false\n\t}\n\tif credentialprovider.AreLegacyCloudCredentialProvidersDisabled() {\n\t\twarnOnce.Do(func() {\n\t\t\tklog.V(4).Infof(\"GCP credential provider is now disabled. Please refer to sig-cloud-provider for guidance on external credential provider integration for GCP\")"
  },
  {
    "id" : "6a7f4603-f508-4288-8b96-7b920ddf5ca9",
    "prId" : 102507,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/102507#pullrequestreview-722441028",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "980cfac8-0603-4f3c-ab36-244ff6a73dc0",
        "parentId" : null,
        "authorId" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "body" : "Cross linking this thread in case it gets lost in the comments https://github.com/kubernetes/kubernetes/pull/102507#discussion_r673290425\r\n\r\nI'm not following the logic here to switch the order back to run onGCEVM first. If the feature gate is enabled (i.e. disabled), then there's no reason to ever call onGCEVM, because the plugin is explicitly disabled. In this case, the warning message makes sense too, because the plugin is disabled anyways. When it is disabled, why bother running onGCEVM which is a relatively expensive operation that reads a file from disk?",
        "createdAt" : "2021-07-20T16:55:09Z",
        "updatedAt" : "2021-07-20T16:55:15Z",
        "lastEditedBy" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "tags" : [
        ]
      },
      {
        "id" : "14fd46bf-27e3-4ab2-a8db-e59ef69e2e81",
        "parentId" : "980cfac8-0603-4f3c-ab36-244ff6a73dc0",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "I think this got resolved below, right? this is to prevent logging GCE-specific messages when we're not even running on GCE, right?",
        "createdAt" : "2021-08-04T13:36:10Z",
        "updatedAt" : "2021-08-04T13:39:50Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "c5c80a50-d950-4be3-bdf8-d065708cd9fc",
        "parentId" : "980cfac8-0603-4f3c-ab36-244ff6a73dc0",
        "authorId" : "7aca96c2-45d7-4567-99be-0323d7556c55",
        "body" : "I believe so yes. The cloud provider plugins are explicitly enabled. However the credential provider plugins are all \"enabled\". So we want to early out of this plugin if we are not on GCE without a warning that this plugin is disabled. The disabled warning only makes sense if you are on GCE.",
        "createdAt" : "2021-08-04T15:37:37Z",
        "updatedAt" : "2021-08-04T15:37:37Z",
        "lastEditedBy" : "7aca96c2-45d7-4567-99be-0323d7556c55",
        "tags" : [
        ]
      }
    ],
    "commit" : "a947c32783e9027922762d6f76f5c27926f9bc0a",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +146,150 @@// Enabled implements DockerConfigProvider for all of the Google implementations.\nfunc (g *MetadataProvider) Enabled() bool {\n\tonGCE := onGCEVM()\n\tif !onGCE {\n\t\treturn false"
  },
  {
    "id" : "66066f0b-cdbd-407c-85f6-2268d78eeb8c",
    "prId" : 102507,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/102507#pullrequestreview-710870485",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "aac7eb74-a6c7-4222-b22f-8d7b3e8a9815",
        "parentId" : null,
        "authorId" : "7aca96c2-45d7-4567-99be-0323d7556c55",
        "body" : "Not sure I agree with this ordering. I agree about the relative costs but if we need to enter either switch the system is miconfigured. At the point the cost seems like a non issue. For the good case you need to pass both switched anyway. In this case we may have a misleading error message suggesting you are on GCP. I think it would be better to put back the original order and add a warning you are attempting to use a GCP credential provider on a non GCP VM to the !onGCEVM case.",
        "createdAt" : "2021-07-19T20:08:20Z",
        "updatedAt" : "2021-07-19T20:08:20Z",
        "lastEditedBy" : "7aca96c2-45d7-4567-99be-0323d7556c55",
        "tags" : [
        ]
      },
      {
        "id" : "e3dfb206-666f-43e1-843a-a6147fb9dcf8",
        "parentId" : "aac7eb74-a6c7-4222-b22f-8d7b3e8a9815",
        "authorId" : "5821ed6f-e2e0-442e-9f8e-43ab7b9f2738",
        "body" : "Avoiding the misleading error message was my original thinking, happy to switch it back.\r\n\r\nI'm not sure if the other warning you propose would add much value though: IIUC these credential providers are on by default (thus the need for this PR) so it's not like the user misconfigured something if we're getting this far on a non-GCP VM. The warning would just get logged all the time and wouldn't be actionable.",
        "createdAt" : "2021-07-19T20:17:03Z",
        "updatedAt" : "2021-07-19T20:17:03Z",
        "lastEditedBy" : "5821ed6f-e2e0-442e-9f8e-43ab7b9f2738",
        "tags" : [
        ]
      },
      {
        "id" : "8c9fbf9a-9204-49a0-9945-0ca6d81b8f4f",
        "parentId" : "aac7eb74-a6c7-4222-b22f-8d7b3e8a9815",
        "authorId" : "7aca96c2-45d7-4567-99be-0323d7556c55",
        "body" : "I thought we would only have this on if it was configured. If thats not true, then I think its even more important to switch back. (As you say to avoid the misleading error message)",
        "createdAt" : "2021-07-19T21:53:55Z",
        "updatedAt" : "2021-07-19T21:53:55Z",
        "lastEditedBy" : "7aca96c2-45d7-4567-99be-0323d7556c55",
        "tags" : [
        ]
      },
      {
        "id" : "3f0c1a60-3b01-4ffa-96ce-f53b4ca55b2a",
        "parentId" : "aac7eb74-a6c7-4222-b22f-8d7b3e8a9815",
        "authorId" : "5821ed6f-e2e0-442e-9f8e-43ab7b9f2738",
        "body" : "Switched this back around.",
        "createdAt" : "2021-07-19T22:18:18Z",
        "updatedAt" : "2021-07-19T22:18:18Z",
        "lastEditedBy" : "5821ed6f-e2e0-442e-9f8e-43ab7b9f2738",
        "tags" : [
        ]
      },
      {
        "id" : "334ac5bb-9500-4f56-8646-1b2197ec317d",
        "parentId" : "aac7eb74-a6c7-4222-b22f-8d7b3e8a9815",
        "authorId" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "body" : "I'm not following the logic here to switch the order back to run `onGCEVM` first. If the feature gate is enabled (i.e. disabled), then there's no reason to ever call onGCEVM, because the plugin is explicitly disabled. In this case, the warning message makes sense too, because the plugin is disabled anyways. When it is disabled, why bother running  `onGCEVM` which is a relatively expensive operation that reads a file from disk? ",
        "createdAt" : "2021-07-20T16:44:02Z",
        "updatedAt" : "2021-07-20T16:44:05Z",
        "lastEditedBy" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "tags" : [
        ]
      },
      {
        "id" : "a5d656b1-8185-4bbe-8ef3-f96b93e6a746",
        "parentId" : "aac7eb74-a6c7-4222-b22f-8d7b3e8a9815",
        "authorId" : "5821ed6f-e2e0-442e-9f8e-43ab7b9f2738",
        "body" : "With the in-tree cloud providers, you have to pass `--cloud-provider=foo` to enable them so it makes sense to print a warning if you pass that flag while the feature gate that disables them is turned on, since that's obviously a misconfiguration of either the flag or the feature gate.\r\n\r\nWith the in-tree credential providers OTOH, there's no flag to enable them (as far as I'm aware) -- we just rely on the `onGCEVM` check alone. So if the feature gate is turned on but we're not on a GCP VM, there's no reason to print a warning about the GCP provider being disabled... Nothing is misconfigured in that case, the warning is just confusing and unactionable.",
        "createdAt" : "2021-07-20T17:05:59Z",
        "updatedAt" : "2021-07-20T17:05:59Z",
        "lastEditedBy" : "5821ed6f-e2e0-442e-9f8e-43ab7b9f2738",
        "tags" : [
        ]
      },
      {
        "id" : "5ff55d38-6d4a-4ed7-98bb-22e27097ba27",
        "parentId" : "aac7eb74-a6c7-4222-b22f-8d7b3e8a9815",
        "authorId" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "body" : "Gotcha, thanks for clarifying.",
        "createdAt" : "2021-07-20T17:08:08Z",
        "updatedAt" : "2021-07-20T17:08:08Z",
        "lastEditedBy" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "tags" : [
        ]
      }
    ],
    "commit" : "a947c32783e9027922762d6f76f5c27926f9bc0a",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +150,154 @@\t\treturn false\n\t}\n\tif credentialprovider.AreLegacyCloudCredentialProvidersDisabled() {\n\t\twarnOnce.Do(func() {\n\t\t\tklog.V(4).Infof(\"GCP credential provider is now disabled. Please refer to sig-cloud-provider for guidance on external credential provider integration for GCP\")"
  },
  {
    "id" : "df98a5c5-24bb-4a59-8225-a72530ef44c7",
    "prId" : 102507,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/102507#pullrequestreview-722441028",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "53778e9e-55d3-45b7-bba0-a649e269bab5",
        "parentId" : null,
        "authorId" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "body" : "Cross linking this thread in case it gets lost in the comments https://github.com/kubernetes/kubernetes/pull/102507#discussion_r673290425\r\n\r\nI'm not following the logic here to switch the order back to run onGCEVM first. If the feature gate is enabled (i.e. disabled), then there's no reason to ever call onGCEVM, because the plugin is explicitly disabled. In this case, the warning message makes sense too, because the plugin is disabled anyways. When it is disabled, why bother running onGCEVM which is a relatively expensive operation that reads a file from disk?",
        "createdAt" : "2021-07-20T16:55:09Z",
        "updatedAt" : "2021-07-20T16:55:15Z",
        "lastEditedBy" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "tags" : [
        ]
      },
      {
        "id" : "b9fde37d-22fb-4f81-a502-8f496d77b172",
        "parentId" : "53778e9e-55d3-45b7-bba0-a649e269bab5",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "I think this got resolved below, right? this is to prevent logging GCE-specific messages when we're not even running on GCE, right?",
        "createdAt" : "2021-08-04T13:36:10Z",
        "updatedAt" : "2021-08-04T13:39:50Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "a5767e8d-fe00-4809-ae4e-24e487bdb62e",
        "parentId" : "53778e9e-55d3-45b7-bba0-a649e269bab5",
        "authorId" : "7aca96c2-45d7-4567-99be-0323d7556c55",
        "body" : "I believe so yes. The cloud provider plugins are explicitly enabled. However the credential provider plugins are all \"enabled\". So we want to early out of this plugin if we are not on GCE without a warning that this plugin is disabled. The disabled warning only makes sense if you are on GCE.",
        "createdAt" : "2021-08-04T15:37:37Z",
        "updatedAt" : "2021-08-04T15:37:37Z",
        "lastEditedBy" : "7aca96c2-45d7-4567-99be-0323d7556c55",
        "tags" : [
        ]
      }
    ],
    "commit" : "a947c32783e9027922762d6f76f5c27926f9bc0a",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +146,150 @@// Enabled implements DockerConfigProvider for all of the Google implementations.\nfunc (g *MetadataProvider) Enabled() bool {\n\tonGCE := onGCEVM()\n\tif !onGCE {\n\t\treturn false"
  }
]