[
  {
    "id" : "405c33e8-1d55-4f5c-956b-38e080c46365",
    "prId" : 78502,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/78502#pullrequestreview-281108746",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ec1a1796-286a-4e29-9f13-02737a4a873f",
        "parentId" : null,
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "return jose.NewSigner. You decorate the error already above.",
        "createdAt" : "2019-08-27T13:54:18Z",
        "updatedAt" : "2019-08-28T21:18:49Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      },
      {
        "id" : "125b8ea7-bb7d-4404-856b-e6c0641e8e0c",
        "parentId" : "ec1a1796-286a-4e29-9f13-02737a4a873f",
        "authorId" : "32ef239d-37ed-4527-bd03-e7d59734944e",
        "body" : "I feel like it's important for debuggability to decorate the errors at the point they enter the kubernetes codebase from our dependencies.\r\n\r\nThat way, someone trying to debug this code doesn't have to try to guess which library call the error they're seeing came out of.",
        "createdAt" : "2019-08-28T21:17:28Z",
        "updatedAt" : "2019-08-28T21:18:49Z",
        "lastEditedBy" : "32ef239d-37ed-4527-bd03-e7d59734944e",
        "tags" : [
        ]
      }
    ],
    "commit" : "b4e99584ce4327324736e98a46ee57a626a3b96f",
    "line" : 169,
    "diffHunk" : "@@ -1,1 +181,185 @@\talg := jose.SignatureAlgorithm(opaqueSigner.Public().Algorithm)\n\n\tsigner, err := jose.NewSigner(\n\t\tjose.SigningKey{\n\t\t\tAlgorithm: alg,"
  },
  {
    "id" : "22c2d62d-7804-4aaa-8a1c-af04a2894540",
    "prId" : 78502,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/78502#pullrequestreview-281108919",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a8b226a6-b9d0-43db-b32a-3f73f082ce19",
        "parentId" : null,
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "return jose.NewSigner",
        "createdAt" : "2019-08-27T13:54:42Z",
        "updatedAt" : "2019-08-28T21:18:49Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      },
      {
        "id" : "cd0cfbff-a88c-49ff-8ea8-515cd358cfd0",
        "parentId" : "a8b226a6-b9d0-43db-b32a-3f73f082ce19",
        "authorId" : "32ef239d-37ed-4527-bd03-e7d59734944e",
        "body" : "I feel like it's important for debuggability to decorate the errors at the point they enter the kubernetes codebase from our dependencies.\r\n\r\nThat way, someone trying to debug this code doesn't have to try to guess which library call the error they're seeing came out of.",
        "createdAt" : "2019-08-28T21:17:51Z",
        "updatedAt" : "2019-08-28T21:18:49Z",
        "lastEditedBy" : "32ef239d-37ed-4527-bd03-e7d59734944e",
        "tags" : [
        ]
      }
    ],
    "commit" : "b4e99584ce4327324736e98a46ee57a626a3b96f",
    "line" : 146,
    "diffHunk" : "@@ -1,1 +164,168 @@\t}\n\n\tsigner, err := jose.NewSigner(\n\t\tjose.SigningKey{\n\t\t\tAlgorithm: alg,"
  },
  {
    "id" : "3d00ee1c-59da-46b2-bf00-612caa8ac904",
    "prId" : 78502,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/78502#pullrequestreview-281698946",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5e9fbf05-c2be-4640-a6cb-6afdf3914fa0",
        "parentId" : null,
        "authorId" : "e58080d6-2177-419f-a546-b51075d7bcb8",
        "body" : "Technically someone could just build the hash from the public key.  But that would be silly to guard against.",
        "createdAt" : "2019-08-29T18:51:44Z",
        "updatedAt" : "2019-08-29T18:51:44Z",
        "lastEditedBy" : "e58080d6-2177-419f-a546-b51075d7bcb8",
        "tags" : [
        ]
      },
      {
        "id" : "34d67638-cfbc-4ef9-9447-079d23b30457",
        "parentId" : "5e9fbf05-c2be-4640-a6cb-6afdf3914fa0",
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "heh, ya. good point. it's just an arbitrary value and the choice doesn't have security implications unless you make a really bad decision. This hash is nice because it's not going to change if the key is not rotated and (most likely) going to change when the key is rotated but that's probably the extent of it.\r\n\r\n",
        "createdAt" : "2019-08-29T20:18:40Z",
        "updatedAt" : "2019-08-29T20:18:41Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      }
    ],
    "commit" : "b4e99584ce4327324736e98a46ee57a626a3b96f",
    "line" : 73,
    "diffHunk" : "@@ -1,1 +91,95 @@// multiple keys.\n//\n// Making the derivation non-reversible makes it impossible for someone to\n// accidentally obtain the real key from the key ID and use it for token\n// validation."
  },
  {
    "id" : "27808080-2826-4d7b-bf22-950a72a0692b",
    "prId" : 70157,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/70157#pullrequestreview-175151605",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6cb2f004-6ad4-495c-9fcc-3082a8f30606",
        "parentId" : null,
        "authorId" : "3cd3a661-80f4-45b3-bae0-5a78fbaedc59",
        "body" : "Should this comment be `// tokens with no audience (legacy tokens) implicitly have the apiserver audience.`",
        "createdAt" : "2018-11-15T01:03:28Z",
        "updatedAt" : "2018-11-15T01:12:56Z",
        "lastEditedBy" : "3cd3a661-80f4-45b3-bae0-5a78fbaedc59",
        "tags" : [
        ]
      }
    ],
    "commit" : "67bbf753cbf5939f03e083adeb55f598f407463f",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +175,179 @@\ttokenAudiences := authenticator.Audiences(public.Audience)\n\tif len(tokenAudiences) == 0 {\n\t\t// only apiserver audiences are allowed for legacy tokens\n\t\ttokenAudiences = j.implicitAuds\n\t}"
  },
  {
    "id" : "e945d5fa-f1df-4d30-ba31-26bad8ae535c",
    "prId" : 70157,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/70157#pullrequestreview-175151605",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fdf15da8-c472-4307-bc68-39b21738a6a0",
        "parentId" : null,
        "authorId" : "3cd3a661-80f4-45b3-bae0-5a78fbaedc59",
        "body" : "`// requests that don't explicitly request an audience are requesting the implicit apiserver audience.`",
        "createdAt" : "2018-11-15T01:04:57Z",
        "updatedAt" : "2018-11-15T01:12:56Z",
        "lastEditedBy" : "3cd3a661-80f4-45b3-bae0-5a78fbaedc59",
        "tags" : [
        ]
      }
    ],
    "commit" : "67bbf753cbf5939f03e083adeb55f598f407463f",
    "line" : 40,
    "diffHunk" : "@@ -1,1 +181,185 @@\trequestedAudiences, ok := authenticator.AudiencesFrom(ctx)\n\tif !ok {\n\t\t// default to apiserver audiences\n\t\trequestedAudiences = j.implicitAuds\n\t}"
  },
  {
    "id" : "3597b29a-37c1-42df-85df-d1056aa355b5",
    "prId" : 70157,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/70157#pullrequestreview-175151605",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "657f7940-88a9-478d-b57b-655b1ee729e7",
        "parentId" : null,
        "authorId" : "3cd3a661-80f4-45b3-bae0-5a78fbaedc59",
        "body" : "`matchingAudiences := ...`? Up to you.",
        "createdAt" : "2018-11-15T01:07:07Z",
        "updatedAt" : "2018-11-15T01:12:56Z",
        "lastEditedBy" : "3cd3a661-80f4-45b3-bae0-5a78fbaedc59",
        "tags" : [
        ]
      }
    ],
    "commit" : "67bbf753cbf5939f03e083adeb55f598f407463f",
    "line" : 44,
    "diffHunk" : "@@ -1,1 +185,189 @@\t}\n\n\tauds := authenticator.Audiences(tokenAudiences).Intersect(requestedAudiences)\n\tif len(auds) == 0 && len(j.implicitAuds) != 0 {\n\t\treturn nil, false, fmt.Errorf(\"token audiences %q is invalid for the target audiences %q\", tokenAudiences, requestedAudiences)"
  },
  {
    "id" : "3d8b93d0-2be2-494e-887e-021f1df88d39",
    "prId" : 69582,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/69582#pullrequestreview-165150816",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "629af78b-81b3-4ac0-ab96-a1b000d5d6c9",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "needs a TODO to verify the token audience and echo in the response if ctx has an audience limitation",
        "createdAt" : "2018-10-16T13:18:54Z",
        "updatedAt" : "2018-10-22T19:11:52Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "0f5a8db5-3571-4f0b-96a7-288b8ad42f65",
        "parentId" : "629af78b-81b3-4ac0-ab96-a1b000d5d6c9",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "I think this (and the other related TODOs) means most of the authenticators will need to know the implicit apiserver audiences at construction time. If the token has no audience (legacy service account token), then we should accept AuthenticateToken requests for the implicit apiserver audiences.",
        "createdAt" : "2018-10-16T13:19:42Z",
        "updatedAt" : "2018-10-22T19:11:52Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "809f278b032103cd24fcbb5ea2196c6c7caa6f63",
    "line" : 39,
    "diffHunk" : "@@ -1,1 +178,182 @@\t}\n\n\treturn &authenticator.Response{User: sa.UserInfo()}, true, nil\n}\n"
  },
  {
    "id" : "ff9334b2-bf5f-472f-9412-6974ec37cda3",
    "prId" : 62420,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/62420#pullrequestreview-148663370",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ff2bfa37-ad23-4a8e-b4f7-69d17d42130f",
        "parentId" : null,
        "authorId" : "e81e699e-eb6c-4380-bfd5-16ab81ac51d6",
        "body" : "`s/privateKey/skey/g` or just rename the argument back to `privateKey`",
        "createdAt" : "2018-08-22T20:44:15Z",
        "updatedAt" : "2018-08-23T19:34:36Z",
        "lastEditedBy" : "e81e699e-eb6c-4380-bfd5-16ab81ac51d6",
        "tags" : [
        ]
      }
    ],
    "commit" : "e68f14a2495ab4dd63fcc10ab23f29500a8452a7",
    "line" : 1,
    "diffHunk" : "@@ -1,1 +52,56 @@}\n\n// JWTTokenGenerator returns a TokenGenerator that generates signed JWT tokens, using the given privateKey.\n// privateKey is a PEM-encoded byte array of a private RSA key.\n// JWTTokenAuthenticator()"
  },
  {
    "id" : "18f2bd45-aaa9-47d4-b27b-34bc2fb4c0af",
    "prId" : 28520,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5d367bb5-807b-459c-9310-3eb3a2014941",
        "parentId" : null,
        "authorId" : "3cd3a661-80f4-45b3-bae0-5a78fbaedc59",
        "body" : "This needs to come after the error check. Otherwise we panic if we ever have a token that isn't a jwt.\n",
        "createdAt" : "2016-07-06T17:43:05Z",
        "updatedAt" : "2016-07-06T17:43:05Z",
        "lastEditedBy" : "3cd3a661-80f4-45b3-bae0-5a78fbaedc59",
        "tags" : [
        ]
      },
      {
        "id" : "7224c162-d680-4ede-b87e-5cd33a2641a5",
        "parentId" : "5d367bb5-807b-459c-9310-3eb3a2014941",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "good catch, missed that. @colemickens, can you open a follow up?\n",
        "createdAt" : "2016-07-06T17:45:21Z",
        "updatedAt" : "2016-07-06T17:45:21Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "e985180e-b98f-4ff6-ac12-43124900ab95",
        "parentId" : "5d367bb5-807b-459c-9310-3eb3a2014941",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "actually, I opened https://github.com/kubernetes/kubernetes/pull/28542 with a test for the invalid token case \n",
        "createdAt" : "2016-07-06T17:51:52Z",
        "updatedAt" : "2016-07-06T17:51:52Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "db006d6e6bae8c1c4f8df58e72a3b2b5cc78dc33",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +136,140 @@\t\t})\n\n\t\tclaims, _ := parsedToken.Claims.(jwt.MapClaims)\n\n\t\tif err != nil {"
  },
  {
    "id" : "f541f8ba-2933-478e-ab85-bb51e5ca1931",
    "prId" : 10041,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b76e16b9-5738-454d-9f80-c894f2232539",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Is this index actually going to be useful in a log message? is the list stored somewhere in a manner where the index matters?\n",
        "createdAt" : "2015-06-19T19:26:45Z",
        "updatedAt" : "2015-06-19T19:43:36Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "357f6ab0-ea12-4cb9-8942-4fbc7d6655ad",
        "parentId" : "b76e16b9-5738-454d-9f80-c894f2232539",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "i.e., would it be better to print the key out?\n",
        "createdAt" : "2015-06-19T19:27:15Z",
        "updatedAt" : "2015-06-19T19:43:36Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "c17d8f1d-272f-475d-82af-2dc3a5b53d14",
        "parentId" : "b76e16b9-5738-454d-9f80-c894f2232539",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "signature verification tries keys in order. if you've rotated the signer, the old signer's public key would get bumped to position 2, and it would be useful to know failures were happening against the first and second public key. I think the index matters more than the key content\n",
        "createdAt" : "2015-06-19T19:41:07Z",
        "updatedAt" : "2015-06-19T19:43:36Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "b233d62f-b4a1-4262-bfb9-854e9547d29c",
        "parentId" : "b76e16b9-5738-454d-9f80-c894f2232539",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "SGTM\n",
        "createdAt" : "2015-06-19T19:43:41Z",
        "updatedAt" : "2015-06-19T19:43:41Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "1ee557814676fcf69c5c7c9e8d77ccb684939009",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +163,167 @@\t\t\t\t\t// Signature error, perhaps one of the other keys will verify the signature\n\t\t\t\t\t// If not, we want to return this error\n\t\t\t\t\tglog.V(4).Infof(\"Signature error (key %d): %v\", i, err)\n\t\t\t\t\tvalidationError = err\n\t\t\t\t\tcontinue"
  }
]