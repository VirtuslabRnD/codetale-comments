[
  {
    "id" : "e4507c17-7e48-48f5-9bba-91aeaaea9ac4",
    "prId" : 229,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4475172e-155a-4e77-8848-ad22236bc312",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Do you want to read the body and pass it in .Body()? Seems like that would let posts and puts work...\n",
        "createdAt" : "2014-06-24T22:18:21Z",
        "updatedAt" : "2014-06-24T22:30:34Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "19dcb637-d0ea-4096-b06a-b913e322e87f",
        "parentId" : "4475172e-155a-4e77-8848-ad22236bc312",
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "Ah, good point.  I had this before the refactor to Client and it got dropped.  Fixed.\n",
        "createdAt" : "2014-06-24T22:21:14Z",
        "updatedAt" : "2014-06-24T22:30:34Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "84e5c37f74e087398e9fb95ac734ec1beb043abc",
    "line" : null,
    "diffHunk" : "@@ -1,1 +64,68 @@func (s *ProxyServer) ServeHTTP(w http.ResponseWriter, r *http.Request) {\n\tresult := s.Client.Verb(r.Method).AbsPath(r.URL.Path).Body(r.Body).Do()\n\tif result.Error() != nil {\n\t\ts.doError(w, result.Error())\n\t\treturn"
  },
  {
    "id" : "a1a4ead4-63c9-4e37-9ff8-3f5afcd759e0",
    "prId" : 217,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8f266717-47eb-4c1a-8553-eab30e6b697b",
        "parentId" : null,
        "authorId" : "6001b825-f0f9-4fc3-b624-34a076b031e1",
        "body" : "you could consider having a function e typthat return an error and implement `ServeHTTP` like this:\nhttps://github.com/GoogleCloudPlatform/appengine-goshorten/blob/master/goshorten.go#L70\nhttps://github.com/GoogleCloudPlatform/appengine-goshorten/blob/master/goshorten.go#L70\n",
        "createdAt" : "2014-06-24T05:22:44Z",
        "updatedAt" : "2014-06-24T18:26:01Z",
        "lastEditedBy" : "6001b825-f0f9-4fc3-b624-34a076b031e1",
        "tags" : [
        ]
      },
      {
        "id" : "e8ef205d-6a0d-469c-99fc-eb2bae3dd200",
        "parentId" : "8f266717-47eb-4c1a-8553-eab30e6b697b",
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "Hrm, I don't see much difference between that and this, since the context is the first argument to the handle function...\n",
        "createdAt" : "2014-06-24T05:34:20Z",
        "updatedAt" : "2014-06-24T18:26:01Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      },
      {
        "id" : "02456c18-a0a6-4aa0-b8a2-4f92b1146ec8",
        "parentId" : "8f266717-47eb-4c1a-8553-eab30e6b697b",
        "authorId" : "6001b825-f0f9-4fc3-b624-34a076b031e1",
        "body" : "So it would look like this\n\n```\ntype handlerWithError  func(w http.ResponseWriter, r *http.Request) error\nfunc (h *handlerWithError) ServeHTTP(w http.ResponseWriter, r *http.Request) {\n    if err := h(w, r); err != nil {\n        w.WriteHeader(http.StatusInternalServerError)\n        //...\n   }\n}\n\nfunc handleFoo(w http.ResponseWriter, r *http.Request) error {\n   if err := shitHappens(); err != nil {\n       return err\n   }\n   //...\n}\n\nfunc init() {\n   http.handle(\"/foo\", handlerWithError(handleFoo))\n}\n```\n\nOf course if you ever have only 1 handler, that's not that useful.\n",
        "createdAt" : "2014-06-24T05:40:33Z",
        "updatedAt" : "2014-06-24T18:26:01Z",
        "lastEditedBy" : "6001b825-f0f9-4fc3-b624-34a076b031e1",
        "tags" : [
        ]
      }
    ],
    "commit" : "8b50e45dccb50056d668e12c41d82b379dd4cffd",
    "line" : null,
    "diffHunk" : "@@ -1,1 +62,66 @@}\n\nfunc (s *ProxyServer) ServeHTTP(w http.ResponseWriter, r *http.Request) {\n\tresult := s.Client.Verb(r.Method).Path(r.URL.Path).Do()\n\tif result.Error() != nil {"
  }
]