[
  {
    "id" : "6598f20b-f4cd-40de-804b-607456b5a0ef",
    "prId" : 36711,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/36711#pullrequestreview-11754684",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c5a3aa63-4aba-47c1-8020-ba7b6797643b",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "shouldn't this be etcd.PathPrefix() ?",
        "createdAt" : "2016-12-06T10:08:59Z",
        "updatedAt" : "2016-12-06T10:10:16Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "fe2b3130-e205-4291-832c-abab3e5df726",
        "parentId" : "c5a3aa63-4aba-47c1-8020-ba7b6797643b",
        "authorId" : "bb4cf218-381a-40ad-ac0c-0c2c66685cd4",
        "body" : "So let me answer all questions here.\r\n\r\nWe have created etcd helper with etcdtest.PathPrefix():\r\n```\r\nhelper := newEtcdHelper(server.Client, testapi.Default.Codec(), etcdtest.PathPrefix())\r\n```\r\n\r\nLater it creates objects using the object name, e.g. \"foo\", \"bar\" as the key:\r\n```\r\nerr := createObj(t, helper, list.Items[i].Name, &list.Items[i], returnedObj, 0)\r\n```\r\n\r\nWhen we call List(), if we use etcdtest.PathPrefix() again, it will be \"etcdtest.PathPrefix()/etcdtest.PathPrefix()\". We should list \"/\" instead, which will be prefixed inside helper.",
        "createdAt" : "2016-12-06T17:24:38Z",
        "updatedAt" : "2016-12-06T17:24:38Z",
        "lastEditedBy" : "bb4cf218-381a-40ad-ac0c-0c2c66685cd4",
        "tags" : [
        ]
      },
      {
        "id" : "8681b4fd-2d38-49e8-8e2a-91f06412f3fd",
        "parentId" : "c5a3aa63-4aba-47c1-8020-ba7b6797643b",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Aaah ok, sure. Thanks for explanation.",
        "createdAt" : "2016-12-07T08:41:50Z",
        "updatedAt" : "2016-12-07T08:41:50Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "14ed02d0dde2fdf58d2a32ea4d43f82009d344f3",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +122,126 @@\t// TODO: a sorted filter function could be applied such implied\n\t// ordering on the returned list doesn't matter.\n\terr := helper.List(context.TODO(), \"/\", \"\", storage.Everything, &got)\n\tif err != nil {\n\t\tt.Errorf(\"Unexpected error %v\", err)"
  },
  {
    "id" : "cee21550-66ca-4659-8035-6c9a9422b988",
    "prId" : 36711,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/36711#pullrequestreview-11555867",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ca6f90a3-eae5-4767-8003-975778d43b05",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "shouldn't this be etcd.PathPrefix() ?",
        "createdAt" : "2016-12-06T10:09:09Z",
        "updatedAt" : "2016-12-06T10:10:16Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "14ed02d0dde2fdf58d2a32ea4d43f82009d344f3",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +165,169 @@\t}\n\tvar got api.PodList\n\terr := helper.List(context.TODO(), \"/\", \"\", p, &got)\n\tif err != nil {\n\t\tt.Errorf(\"Unexpected error %v\", err)"
  },
  {
    "id" : "3f577281-2933-4a9f-9a2c-629383138a05",
    "prId" : 36711,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/36711#pullrequestreview-11555867",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "44177e08-85a0-43dd-86a8-02c183997d8e",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "shouldn't this be etcd.PathPrefix() ?",
        "createdAt" : "2016-12-06T10:09:31Z",
        "updatedAt" : "2016-12-06T10:10:16Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "14ed02d0dde2fdf58d2a32ea4d43f82009d344f3",
    "line" : 68,
    "diffHunk" : "@@ -1,1 +212,216 @@\n\tvar got api.PodList\n\terr := roothelper.List(context.TODO(), \"/\", \"\", storage.Everything, &got)\n\tif err != nil {\n\t\tt.Errorf(\"Unexpected error %v\", err)"
  },
  {
    "id" : "78c9383e-4ec2-4e56-9d6a-a3ddeb95ff95",
    "prId" : 16101,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fbddf936-5d82-4542-afd7-0a6b06a04cbe",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Just curious - isn't the test etcd instance not assigning resource versions? With real etcd it wouldn't be the same, would be?\n",
        "createdAt" : "2015-10-22T15:59:21Z",
        "updatedAt" : "2015-10-23T21:24:16Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "a23d7b6e-bc87-42e7-8dd9-e97d683dd6b5",
        "parentId" : "fbddf936-5d82-4542-afd7-0a6b06a04cbe",
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "Etcd is writing the resource versions.  The createPodList function updates the resource version in the list from the returned object so the [.]Items compare should match.\n",
        "createdAt" : "2015-10-22T17:04:29Z",
        "updatedAt" : "2015-10-23T21:24:16Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      },
      {
        "id" : "08964126-6463-4523-80aa-438e2c5c347e",
        "parentId" : "fbddf936-5d82-4542-afd7-0a6b06a04cbe",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Got it - thanks! SGTM\n",
        "createdAt" : "2015-10-23T10:21:30Z",
        "updatedAt" : "2015-10-23T21:24:16Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "8140974f319533de30bd2d8b5b06573fbd6e6034",
    "line" : 115,
    "diffHunk" : "@@ -1,1 +140,144 @@\t\tt.Errorf(\"Unexpected error %v\", err)\n\t}\n\tif e, a := list.Items, got.Items; !reflect.DeepEqual(e, a) {\n\t\tt.Errorf(\"Expected %#v, got %#v\", e, a)\n\t}"
  },
  {
    "id" : "2c7a4a12-e8f2-4673-8834-89ab79a1a011",
    "prId" : 16101,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "71b21934-58ad-40c1-9dfa-9662b40206a7",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "IIUC, we are explicitly assuming here that etcd is returning objects in alphabetic order within a list. Can you please add a comment about since you're already touching this code?\n",
        "createdAt" : "2015-10-23T10:27:15Z",
        "updatedAt" : "2015-10-23T21:24:16Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "63b85287-2453-44d6-96ce-cc34647dcb92",
        "parentId" : "71b21934-58ad-40c1-9dfa-9662b40206a7",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Or even better, drop a TODO to change it so that order within a list doesn't matter.\n",
        "createdAt" : "2015-10-23T10:28:25Z",
        "updatedAt" : "2015-10-23T21:24:16Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "ea8e90f7-35aa-4182-be57-bf848af26ec0",
        "parentId" : "71b21934-58ad-40c1-9dfa-9662b40206a7",
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "DONE. \n",
        "createdAt" : "2015-10-23T21:14:41Z",
        "updatedAt" : "2015-10-23T21:24:16Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      }
    ],
    "commit" : "8140974f319533de30bd2d8b5b06573fbd6e6034",
    "line" : 116,
    "diffHunk" : "@@ -1,1 +141,145 @@\t}\n\tif e, a := list.Items, got.Items; !reflect.DeepEqual(e, a) {\n\t\tt.Errorf(\"Expected %#v, got %#v\", e, a)\n\t}\n}"
  },
  {
    "id" : "0a4dcd98-b9e7-41ad-af51-c34b457785cd",
    "prId" : 16101,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c2fc7a91-ebb1-415a-9339-6fafdad2db40",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Nice - I like this approach :)\n",
        "createdAt" : "2015-10-23T10:32:32Z",
        "updatedAt" : "2015-10-23T21:24:16Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "0787d132-dc40-4e34-971a-9003823f8f6b",
        "parentId" : "c2fc7a91-ebb1-415a-9339-6fafdad2db40",
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : ";-) \n",
        "createdAt" : "2015-10-23T21:14:51Z",
        "updatedAt" : "2015-10-23T21:24:16Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      }
    ],
    "commit" : "8140974f319533de30bd2d8b5b06573fbd6e6034",
    "line" : 342,
    "diffHunk" : "@@ -1,1 +222,226 @@\t// create the last element in the other directory\n\tcreateObj(t, helper2, list.Items[2].Name, &list.Items[2], returnedObj, 0)\n\tlist.Items[2] = *returnedObj\n\n\tvar got api.PodList"
  }
]