[
  {
    "id" : "b412aca4-2aab-4600-a9d2-a56493155ee5",
    "prId" : 23295,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7d5a29cc-196d-4806-9e1e-e623cbe810ad",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Can you please do the same in etcd_watcher.go file?\n",
        "createdAt" : "2016-03-22T09:13:14Z",
        "updatedAt" : "2016-03-22T15:19:23Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "189ce6e397e1e9db5c3d5151f41afabd4a3a3c25",
    "line" : 83,
    "diffHunk" : "@@ -1,1 +646,650 @@\t\t}\n\t\t_, _, err = h.extractObj(response, err, ptrToType, false, false)\n\t\treturn toStorageErr(err, key, int64(index))\n\t}\n}"
  },
  {
    "id" : "a29c49af-e976-4d6c-9763-2c43e3174ad6",
    "prId" : 22965,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3fbfdba1-6571-4008-864a-a802c8a4235a",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Need to limit this. max 5 tries?\n",
        "createdAt" : "2016-03-17T22:45:38Z",
        "updatedAt" : "2016-03-25T18:21:52Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "b15bb206-7531-444b-b899-8164ed435330",
        "parentId" : "3fbfdba1-6571-4008-864a-a802c8a4235a",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "Practically retries should be rare here. It's very similar to the retries in GuaranteedUpdate, where we don't limit the number of retries: https://github.com/kubernetes/kubernetes/blob/master/pkg/storage/etcd/etcd_helper.go#L560\n",
        "createdAt" : "2016-03-18T22:17:01Z",
        "updatedAt" : "2016-03-25T18:21:52Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      },
      {
        "id" : "ac964446-12e7-4cdb-a8ea-d0b4308913c7",
        "parentId" : "3fbfdba1-6571-4008-864a-a802c8a4235a",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "hm, I'm not sure about that... we do limit the number of times we'll try to apply a patch...\n",
        "createdAt" : "2016-03-18T23:21:29Z",
        "updatedAt" : "2016-03-25T18:21:52Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "eeedc2fb-9896-4207-a6fe-37374798d21f",
        "parentId" : "3fbfdba1-6571-4008-864a-a802c8a4235a",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "(we talked offline, the condition for this never terminating is basically another fast write loop that's making changes to the object and beats the deletion 100% of the time, which doesn't seem realistic. You could add this as a comment if you like.)\n",
        "createdAt" : "2016-03-23T18:14:06Z",
        "updatedAt" : "2016-03-25T18:21:53Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "31b425b3a189fc4ceee377038ff4337a6dca481c",
    "line" : 53,
    "diffHunk" : "@@ -1,1 +332,336 @@\t// Check the preconditions match.\n\tobj := reflect.New(v.Type()).Interface().(runtime.Object)\n\tfor {\n\t\t_, node, res, err := h.bodyAndExtractObj(ctx, key, obj, false)\n\t\tif err != nil {"
  },
  {
    "id" : "0a64f82d-380b-4267-8bea-57ba04b76f3d",
    "prId" : 22965,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "830c8b26-e6fb-4866-9d38-fd615e5c062d",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "can it happen that neither of those things are set? What then?\n",
        "createdAt" : "2016-03-17T22:51:26Z",
        "updatedAt" : "2016-03-25T18:21:52Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "db2d86a3-4fd0-48dc-b8c9-dd6847334922",
        "parentId" : "830c8b26-e6fb-4866-9d38-fd615e5c062d",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "This piece of code is copied from GuaranteedUpdate, and judging from the code there, the index will be 0 only if the key doesn't exist. And because we set the ignoreNotFound=false when we call bodyAndExtractObj several lines ago, this won't happen.\n",
        "createdAt" : "2016-03-17T23:09:07Z",
        "updatedAt" : "2016-03-25T18:21:52Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "31b425b3a189fc4ceee377038ff4337a6dca481c",
    "line" : 66,
    "diffHunk" : "@@ -1,1 +345,349 @@\t\t} else if res != nil {\n\t\t\tindex = res.Index\n\t\t}\n\t\topt := etcd.DeleteOptions{PrevIndex: index}\n\t\tstartTime := time.Now()"
  },
  {
    "id" : "d84dd103-1772-4b35-b2d9-87e8bbb2f25f",
    "prId" : 22965,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ff128948-0015-44ce-a307-d0990a26875b",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "very optional: you could consider moving the body of this if statement into a \"unconditionalDelete\" function.\n",
        "createdAt" : "2016-03-23T18:12:38Z",
        "updatedAt" : "2016-03-25T18:21:53Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "31b425b3a189fc4ceee377038ff4337a6dca481c",
    "line" : 39,
    "diffHunk" : "@@ -1,1 +318,322 @@\n\tif preconditions == nil {\n\t\tstartTime := time.Now()\n\t\tresponse, err := h.etcdKeysAPI.Delete(ctx, key, nil)\n\t\tmetrics.RecordEtcdRequestLatency(\"delete\", getTypeName(out), startTime)"
  },
  {
    "id" : "1f2c462d-a333-42f7-8c88-970476fb7e7b",
    "prId" : 22965,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "65f80358-c34e-44df-b4f0-ed66445f91a1",
        "parentId" : null,
        "authorId" : "bb4cf218-381a-40ad-ac0c-0c2c66685cd4",
        "body" : "@caesarxuchao \nA question here: if it's not NotFound error, why don't we return the error here?\n",
        "createdAt" : "2016-03-26T23:32:11Z",
        "updatedAt" : "2016-03-26T23:32:11Z",
        "lastEditedBy" : "bb4cf218-381a-40ad-ac0c-0c2c66685cd4",
        "tags" : [
        ]
      },
      {
        "id" : "3f6b7c9f-6d3b-4d3f-9f29-0bb356b97e1e",
        "parentId" : "65f80358-c34e-44df-b4f0-ed66445f91a1",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "Because of the comment in the next line? That's the original code, I just copied it.\n",
        "createdAt" : "2016-03-28T17:34:39Z",
        "updatedAt" : "2016-03-28T17:34:39Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "31b425b3a189fc4ceee377038ff4337a6dca481c",
    "line" : 74,
    "diffHunk" : "@@ -1,1 +353,357 @@\t\t\tglog.Infof(\"deletion of %s failed because of a conflict, going to retry\", key)\n\t\t} else {\n\t\t\tif !etcdutil.IsEtcdNotFound(err) {\n\t\t\t\t// if the object that existed prior to the delete is returned by etcd, update the out object.\n\t\t\t\tif err != nil || response.PrevNode != nil {"
  },
  {
    "id" : "b5324dc7-df55-4976-9376-a256c91f0072",
    "prId" : 21535,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ca4e96ee-ce2d-4f70-b91b-d2a2faac323d",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "the line between EtcdConfig and EtcdStorageConfig is unclear... I would expect Prefix in EtcdStorageConfig\n",
        "createdAt" : "2016-03-01T15:40:53Z",
        "updatedAt" : "2016-03-11T16:26:25Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "7228b9b9878feffb001614d91a974463a6dbb362",
    "line" : null,
    "diffHunk" : "@@ -1,1 +65,69 @@// Configuration object for constructing etcd.Config\ntype EtcdConfig struct {\n\tPrefix     string\n\tServerList []string\n\tKeyFile    string"
  },
  {
    "id" : "16c8e9b1-b72d-436c-bfe7-648e67bf4920",
    "prId" : 21535,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2d323127-ea09-4441-befc-34533e683195",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "`info.ClientConfig()` gives no way to set `InsecureSkipVerify` to true.\n\nIn 1.1, if no CA was specified in the etcd client config, `InsecureSkipVerify` defaulted to true (https://github.com/coreos/go-etcd/blob/master/etcd/client.go#L216). I don't really think that's a good default, but do we need some way to accomplish that? If so, that may mean a new field and flag (with validation that doesn't let you set both the CA file and etcd-insecure-skip-verify)\n",
        "createdAt" : "2016-03-11T15:20:50Z",
        "updatedAt" : "2016-03-11T16:26:25Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "7228b9b9878feffb001614d91a974463a6dbb362",
    "line" : 82,
    "diffHunk" : "@@ -1,1 +96,100 @@\t\tCAFile:   c.CAFile,\n\t}\n\tcfg, err := info.ClientConfig()\n\tif err != nil {\n\t\treturn nil, err"
  },
  {
    "id" : "a5fcf2ef-9dd9-461f-97c4-a5de02152c07",
    "prId" : 20897,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9b5036ea-ba6b-4410-96ad-a34ea2104181",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "BTW - Set() method is used only in tests. I'm happy to remove this method from the interface if you agree it's not needed.\n",
        "createdAt" : "2016-02-09T15:11:39Z",
        "updatedAt" : "2016-02-12T08:23:38Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "89202437-c719-4bb5-953a-3e6781b955c1",
        "parentId" : "9b5036ea-ba6b-4410-96ad-a34ea2104181",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Let's open a follow up issue post 1.3 - I don't think we have to remove it now.\n",
        "createdAt" : "2016-02-09T16:17:19Z",
        "updatedAt" : "2016-02-12T08:23:38Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "047570b3-18c5-4240-87e6-5907712ecca7",
        "parentId" : "9b5036ea-ba6b-4410-96ad-a34ea2104181",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Filed https://github.com/kubernetes/kubernetes/issues/20963 for it.\n",
        "createdAt" : "2016-02-10T08:25:36Z",
        "updatedAt" : "2016-02-12T08:23:38Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "2e97793840440a1122fa86289edc08105a76792e",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +193,197 @@\t}\n\n\tversion := uint64(0)\n\tif h.versioner != nil {\n\t\tvar err error"
  },
  {
    "id" : "9633e554-487f-4544-a1fe-817bfcf6e3dc",
    "prId" : 20897,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7374cd41-8de8-4795-845b-14a9daffdc8c",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Is RV the only field like this? How about SelfLink, can we clear that too?\n",
        "createdAt" : "2016-02-09T18:01:03Z",
        "updatedAt" : "2016-02-12T08:23:38Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "b9e4ea68-9530-4ccc-b192-f5b5299fee40",
        "parentId" : "7374cd41-8de8-4795-845b-14a9daffdc8c",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "We can, but then we can't use versioner for it. And since we will need to use meta.Accessor, then there is no need to use versioner at all. WDYT?\n",
        "createdAt" : "2016-02-09T18:07:29Z",
        "updatedAt" : "2016-02-12T08:23:38Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "b66114d3-2dcf-45e1-a8ab-86f8b170c432",
        "parentId" : "7374cd41-8de8-4795-845b-14a9daffdc8c",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "That's a really big change right now....\n",
        "createdAt" : "2016-02-09T20:15:12Z",
        "updatedAt" : "2016-02-12T08:23:38Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "09a2973b-4087-4f7b-8fa9-604eea8392dc",
        "parentId" : "7374cd41-8de8-4795-845b-14a9daffdc8c",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "@smarterclayton - sorry, I'm afraid I don't understand.\nYou suggest leaving as is or changing (to not use versioner and just work on meta.Accessor)?\n",
        "createdAt" : "2016-02-09T20:18:07Z",
        "updatedAt" : "2016-02-12T08:23:38Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "54c4b529-5a57-42cb-bf8c-94228492d21f",
        "parentId" : "7374cd41-8de8-4795-845b-14a9daffdc8c",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "I was suggesting making the smallest change possible for 1.2 - using\nversioner and not resetting self link (I don't think we have evidence\nself link is causing updates to not be no-op, but if we do then yes,\nwe have to fix it)\n",
        "createdAt" : "2016-02-09T20:43:29Z",
        "updatedAt" : "2016-02-12T08:23:38Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "48c80e59-2adf-4492-98cf-9e030a9da88d",
        "parentId" : "7374cd41-8de8-4795-845b-14a9daffdc8c",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "I'm fine with punting on a self link fix. That'd only be a problem with objects available from multiple URLs, and we won't have many for 1.2.\n",
        "createdAt" : "2016-02-11T01:23:29Z",
        "updatedAt" : "2016-02-12T08:23:38Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "2e97793840440a1122fa86289edc08105a76792e",
    "line" : 40,
    "diffHunk" : "@@ -1,1 +579,583 @@\t\t// Since update object may have a resourceVersion set, we need to clear it here.\n\t\tif h.versioner != nil {\n\t\t\tif err := h.versioner.UpdateObject(ret, meta.Expiration, 0); err != nil {\n\t\t\t\treturn errors.New(\"resourceVersion cannot be set on objects store in etcd\")\n\t\t\t}"
  },
  {
    "id" : "eb0f01f6-c43e-43bd-8982-8ca476ddfc35",
    "prId" : 20897,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0fafd876-f1b2-45d2-9b07-122151ea2f3e",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "@smarterclayton - I browsed through the code, and basically there is no easy way to construct etcdHelper with nil versioner (all constructors set it to ApiObjectVersioner{}) and we don't have setters to change it.\nSo what do you think about fixing this TODO in a followup PR now?\n",
        "createdAt" : "2016-02-10T08:41:00Z",
        "updatedAt" : "2016-02-12T08:23:38Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "127450d4-9140-4319-a29c-0cead7469958",
        "parentId" : "0fafd876-f1b2-45d2-9b07-122151ea2f3e",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "That's fine\n",
        "createdAt" : "2016-02-10T10:02:44Z",
        "updatedAt" : "2016-02-12T08:23:38Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "2e97793840440a1122fa86289edc08105a76792e",
    "line" : 47,
    "diffHunk" : "@@ -1,1 +586,590 @@\t\t// in the object and this will be incorrect ResourceVersion. We should fix it by\n\t\t// requiring \"versioner != nil\" at the constructor level for 1.3 milestone.\n\n\t\tdata, err := runtime.Encode(h.codec, ret)\n\t\tif err != nil {"
  },
  {
    "id" : "2257f0eb-69d0-499e-962c-b3c9c2438e07",
    "prId" : 20897,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ca09b734-df2a-48aa-913b-8716a51e3ebe",
        "parentId" : null,
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Ah, yes.   Can you add a test case for this condition so we don't regress?\n",
        "createdAt" : "2016-02-11T15:39:33Z",
        "updatedAt" : "2016-02-12T08:23:38Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "5e558c44-530c-460f-88fe-158b134e9614",
        "parentId" : "ca09b734-df2a-48aa-913b-8716a51e3ebe",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "I can't tell if you added one or not.\n",
        "createdAt" : "2016-02-11T15:39:49Z",
        "updatedAt" : "2016-02-12T08:23:38Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "8eba54ec-15ab-4b70-86f4-71582470801b",
        "parentId" : "ca09b734-df2a-48aa-913b-8716a51e3ebe",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "No I didn't. I will add tomorrow.\n@smarterclayton Are you fine with me self-applying \"lgtm\" label after adding a test?\n",
        "createdAt" : "2016-02-11T15:52:12Z",
        "updatedAt" : "2016-02-12T08:23:38Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "7810ab97-39d0-4fb1-9b6c-16535a1e7434",
        "parentId" : "ca09b734-df2a-48aa-913b-8716a51e3ebe",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Yeah, a test for this would be good--subtle problem.\n",
        "createdAt" : "2016-02-11T18:37:37Z",
        "updatedAt" : "2016-02-12T08:23:38Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "2e97793840440a1122fa86289edc08105a76792e",
    "line" : 56,
    "diffHunk" : "@@ -1,1 +609,613 @@\n\t\tif string(data) == origBody {\n\t\t\t// If we don't send an update, we simply return the currently existing\n\t\t\t// version of the object.\n\t\t\t_, _, err := h.extractObj(res, nil, ptrToType, ignoreNotFound, false)"
  },
  {
    "id" : "7b1cb25c-3be8-41fd-9d6d-c20d9ce03636",
    "prId" : 18635,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2e226f44-f159-4e90-a6a8-d0377fa2a0b7",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Can't we leave transport as it was and leave a TODO to revisit it? It would be safer...\n",
        "createdAt" : "2015-12-14T11:24:53Z",
        "updatedAt" : "2015-12-16T21:57:04Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "f24d4736-9e2a-4dc1-9c10-6ee617220fb3",
        "parentId" : "2e226f44-f159-4e90-a6a8-d0377fa2a0b7",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "+1\n",
        "createdAt" : "2015-12-14T14:39:00Z",
        "updatedAt" : "2015-12-16T21:57:04Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "886308c1-3720-463b-99a3-2eeec211b232",
        "parentId" : "2e226f44-f159-4e90-a6a8-d0377fa2a0b7",
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "Transport depended on a forked go-etcd client Dial class, which seemed like a hack.  IMHO we should ping @xiang90 to determine optimized path vs. maintaining a fork of the deprecated interface. \n",
        "createdAt" : "2015-12-15T15:51:08Z",
        "updatedAt" : "2015-12-16T21:57:04Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      },
      {
        "id" : "3e266e02-c13e-4907-b8ee-73e22c1429db",
        "parentId" : "2e226f44-f159-4e90-a6a8-d0377fa2a0b7",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "agree we should check, but I want to maintain current behavior until that is resolved\n",
        "createdAt" : "2015-12-15T15:54:19Z",
        "updatedAt" : "2015-12-16T21:57:04Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "c505a5d49d35011abcb9c4fa853eb33b7b1efb6e",
    "line" : null,
    "diffHunk" : "@@ -1,1 +58,62 @@\tcfg := etcd.Config{\n\t\tEndpoints: c.ServerList,\n\t\t// TODO: Determine if transport needs optimization\n\t\tTransport: &http.Transport{\n\t\t\tProxy: http.ProxyFromEnvironment,"
  },
  {
    "id" : "007d9130-6b81-4d5f-9674-916bebd30bfd",
    "prId" : 18635,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "976b5bd8-62cf-444c-ba23-71f2bdd791e4",
        "parentId" : null,
        "authorId" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "body" : "why not use `util.SetTransportDefaults` here?\n",
        "createdAt" : "2016-01-01T13:33:17Z",
        "updatedAt" : "2016-01-01T13:33:17Z",
        "lastEditedBy" : "aefa6d0d-0ad0-4062-966c-ddc56e70652b",
        "tags" : [
        ]
      },
      {
        "id" : "0094188c-3519-4f27-b446-321aec7785c6",
        "parentId" : "976b5bd8-62cf-444c-ba23-71f2bdd791e4",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "We are overwriting some things (e.g. MaxIdleConnsPerHost) - it was crucial for performance reasons.\n",
        "createdAt" : "2016-01-01T14:40:04Z",
        "updatedAt" : "2016-01-01T14:40:04Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "7b199d28-99e5-456b-866f-b9696e2294af",
        "parentId" : "976b5bd8-62cf-444c-ba23-71f2bdd791e4",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "You can still do that with SetTransportDefaults… only set MaxIdle… and the defaulting func will set all the other defaults \n",
        "createdAt" : "2016-01-01T15:03:43Z",
        "updatedAt" : "2016-01-01T15:03:43Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "c9fb910a-ad23-4d7a-915b-f074992d23ef",
        "parentId" : "976b5bd8-62cf-444c-ba23-71f2bdd791e4",
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "The defaults are explicitly specified so others will know the values on inspection, vs. hunt and peck. \n",
        "createdAt" : "2016-01-03T20:39:08Z",
        "updatedAt" : "2016-01-03T20:39:08Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      }
    ],
    "commit" : "c505a5d49d35011abcb9c4fa853eb33b7b1efb6e",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +59,63 @@\t\tEndpoints: c.ServerList,\n\t\t// TODO: Determine if transport needs optimization\n\t\tTransport: &http.Transport{\n\t\t\tProxy: http.ProxyFromEnvironment,\n\t\t\tDial: (&net.Dialer{"
  },
  {
    "id" : "5ece4696-c5f4-4d12-b4eb-827121804915",
    "prId" : 15371,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ffb35ec1-8b2d-470c-9d01-657e6f1310a3",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "This is a private method - I'm not sure if we need to check it here too.\n",
        "createdAt" : "2015-10-12T07:30:50Z",
        "updatedAt" : "2015-10-12T14:01:41Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "b77c5d7d-d9ac-4236-b182-99d2955915bf",
        "parentId" : "ffb35ec1-8b2d-470c-9d01-657e6f1310a3",
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "b/c this call uses etcdclient.Get it's a plumbing through.  So I agree that the check is essentially a no-op, but it serves as a marker.  \n",
        "createdAt" : "2015-10-12T13:43:14Z",
        "updatedAt" : "2015-10-12T14:01:41Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      }
    ],
    "commit" : "2a2a2d79ff4531b32e2bebd2afa9107365d272d9",
    "line" : 99,
    "diffHunk" : "@@ -1,1 +224,228 @@// about the response, like the current etcd index and the ttl.\nfunc (h *etcdHelper) bodyAndExtractObj(ctx context.Context, key string, objPtr runtime.Object, ignoreNotFound bool) (body string, node *etcd.Node, res *etcd.Response, err error) {\n\tif ctx == nil {\n\t\tglog.Errorf(\"Context is nil\")\n\t}"
  },
  {
    "id" : "73dffff8-5019-4dc5-9be8-c944357adec6",
    "prId" : 15371,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c1541c79-5142-4d52-bbe0-9ec9fdb6e4fe",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "This is a private method - I'm not sure if we need to check it here too.\n",
        "createdAt" : "2015-10-12T07:31:07Z",
        "updatedAt" : "2015-10-12T14:01:41Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "2dcfdc30-2279-42a9-80ba-b0bff91fcdef",
        "parentId" : "c1541c79-5142-4d52-bbe0-9ec9fdb6e4fe",
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "same comment. \n",
        "createdAt" : "2015-10-12T13:43:22Z",
        "updatedAt" : "2015-10-12T14:01:41Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      }
    ],
    "commit" : "2a2a2d79ff4531b32e2bebd2afa9107365d272d9",
    "line" : 144,
    "diffHunk" : "@@ -1,1 +382,386 @@\nfunc (h *etcdHelper) listEtcdNode(ctx context.Context, key string) ([]*etcd.Node, uint64, error) {\n\tif ctx == nil {\n\t\tglog.Errorf(\"Context is nil\")\n\t}"
  }
]