[
  {
    "id" : "5c90cc2a-7d12-43d8-ab67-ac7f62812bd0",
    "prId" : 22965,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fc7f0d53-3f2e-4f77-b3a5-757b7ae8e53f",
        "parentId" : null,
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "I removed the dependency on pkg/api/errors in this file, but there are many more, so I didn't add the .import-restrictions file. Forked issue https://github.com/kubernetes/kubernetes/issues/23284.\n",
        "createdAt" : "2016-03-21T17:22:13Z",
        "updatedAt" : "2016-03-25T18:21:52Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "31b425b3a189fc4ceee377038ff4337a6dca481c",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +47,51 @@\tversion, err := strconv.ParseUint(resourceVersion, 10, 64)\n\tif err != nil {\n\t\treturn 0, NewInvalidError(field.ErrorList{\n\t\t\t// Validation errors are supposed to return version-specific field\n\t\t\t// paths, but this is probably close enough."
  },
  {
    "id" : "b81d4f9c-b402-4302-bd04-05b945ecd875",
    "prId" : 15975,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f19588c7-52c2-4aa4-9e4b-525adc3112cd",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "All of these can be replaced with pkg/util/validation.IsDNS1123Subdomain(name) (or a local wrapper thereof) and should probably be commented as \"sanity checks\".\n",
        "createdAt" : "2015-10-20T23:27:41Z",
        "updatedAt" : "2015-10-21T18:11:44Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "e5f50ed3-dc01-4833-8021-bf27bc643267",
        "parentId" : "f19588c7-52c2-4aa4-9e4b-525adc3112cd",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "Object strategies should definitely validate names themselves (like most are already doing). This should be the minimal validation needed to ensure the REST and storage layers can address the stored name\n",
        "createdAt" : "2015-10-20T23:31:56Z",
        "updatedAt" : "2015-10-21T18:11:44Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "a4185551-7c7a-4253-9b59-e5c80cc8aa04",
        "parentId" : "f19588c7-52c2-4aa4-9e4b-525adc3112cd",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "My point is that your PathSegmentName is redundant with DNS1123Subdomain, which already exists.  Less code is more better\n",
        "createdAt" : "2015-10-20T23:48:54Z",
        "updatedAt" : "2015-10-21T18:11:44Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "639f87f3-96a3-4380-a77a-3e97ecc886da",
        "parentId" : "f19588c7-52c2-4aa4-9e4b-525adc3112cd",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "DNS1123Subdomain is too strict here. There can be valid addressable object names that are not subdomains\n",
        "createdAt" : "2015-10-20T23:55:06Z",
        "updatedAt" : "2015-10-21T18:11:44Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "18c22bc4-849a-4120-984a-dd63b4171528",
        "parentId" : "f19588c7-52c2-4aa4-9e4b-525adc3112cd",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "hypothetically.  I'm saying I'm OK asserting that any objects we create will be a subdomain or stricter.  But it's not a huge deal, I guess.\n",
        "createdAt" : "2015-10-21T05:16:18Z",
        "updatedAt" : "2015-10-21T18:11:44Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "63fb6c07a565fcb94df7778ad12f810ea1b3cdce",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +60,64 @@\t}\n\tname := meta.Name()\n\tif ok, msg := validation.ValidatePathSegmentName(name, false); !ok {\n\t\treturn \"\", fmt.Errorf(\"invalid name: %v\", msg)\n\t}"
  },
  {
    "id" : "7b5c5093-b26d-438e-b7d8-676efafb5252",
    "prId" : 12477,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "def5a1ee-08b9-4a5f-bc0c-a1867ce74976",
        "parentId" : null,
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Is this a move or a duplication?\n",
        "createdAt" : "2015-08-12T18:02:06Z",
        "updatedAt" : "2015-08-14T07:44:53Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "26bc4b40-bd63-4b31-a7da-b7e9eed69931",
        "parentId" : "def5a1ee-08b9-4a5f-bc0c-a1867ce74976",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "It's neither move nor duplication.\nThere is a similar method under pkg/registry/generic/etcd/etcd.go, but that method is taking data from api.Context. Here we work just on runtime.Object (and we get all the data from there).\n",
        "createdAt" : "2015-08-13T07:23:01Z",
        "updatedAt" : "2015-08-14T07:44:53Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "e424da7d0d89e36f005bbb37ee8119ad187e49ca",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +52,56 @@}\n\nfunc NamespaceKeyFunc(prefix string, obj runtime.Object) (string, error) {\n\tmeta, err := meta.Accessor(obj)\n\tif err != nil {"
  }
]