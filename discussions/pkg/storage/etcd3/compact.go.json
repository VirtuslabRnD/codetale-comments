[
  {
    "id" : "c0044eee-c63f-46c1-a029-60feb2f39762",
    "prId" : 28202,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "74b306ad-31e7-428b-af72-6cb018acdd1a",
        "parentId" : null,
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "What's the reasoning behind the 10 minute interval? \n",
        "createdAt" : "2016-06-29T15:00:13Z",
        "updatedAt" : "2016-07-15T17:25:00Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      },
      {
        "id" : "c82fb26a-3b8b-48a6-af92-859a7258997c",
        "parentId" : "74b306ad-31e7-428b-af72-6cb018acdd1a",
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "Also, how would compaction affect etcd performance when under pressure?  \n",
        "createdAt" : "2016-06-29T15:17:14Z",
        "updatedAt" : "2016-07-15T17:25:00Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      },
      {
        "id" : "b03b1cad-5c7f-44f0-8f71-225ecdfdec05",
        "parentId" : "74b306ad-31e7-428b-af72-6cb018acdd1a",
        "authorId" : "bb4cf218-381a-40ad-ac0c-0c2c66685cd4",
        "body" : "> What's the reasoning behind the 10 minute interval?\n\nThere is already comment in there:\n\"We save the most recent 10 minutes of data which should be enough for slow watcher and to tolerate burst. Ideally, when the storage layer can take advantage of mvcc, we might increase the interval to 12h.\"\n\n> how would compaction affect etcd performance when under pressure?\n\nIt will slightly affect, but won't pause.\n",
        "createdAt" : "2016-06-29T17:04:49Z",
        "updatedAt" : "2016-07-15T17:25:00Z",
        "lastEditedBy" : "bb4cf218-381a-40ad-ac0c-0c2c66685cd4",
        "tags" : [
        ]
      }
    ],
    "commit" : "54025ce8b3aadf27914a84c336a822975a69a158",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +28,32 @@\nconst (\n\tcompactInterval = 10 * time.Minute\n\tcompactRevKey   = \"compact_rev_key\"\n)"
  },
  {
    "id" : "2bfe658f-e9e4-4213-b7f5-3271b5228a23",
    "prId" : 28202,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8f631302-4621-4b44-8378-ef16674f3e2b",
        "parentId" : null,
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "Just so I'm clear, in the case where you had 10 api-servers and 2 somehow raced on this put b/c the compare matched, only 1 would succeed b/c the put is atomic. \n",
        "createdAt" : "2016-07-14T15:52:49Z",
        "updatedAt" : "2016-07-15T17:25:00Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      }
    ],
    "commit" : "54025ce8b3aadf27914a84c336a822975a69a158",
    "line" : 134,
    "diffHunk" : "@@ -1,1 +134,138 @@\t\tclientv3.Compare(clientv3.Version(compactRevKey), \"=\", t),\n\t).Then(\n\t\tclientv3.OpPut(compactRevKey, strconv.FormatInt(rev, 10)), // Expect side effect: increment Version\n\t).Else(\n\t\tclientv3.OpGet(compactRevKey),"
  },
  {
    "id" : "8c6288b9-d1be-4a5a-a07a-29e620cc562e",
    "prId" : 28202,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6fc94d1f-6425-4ecb-806a-6c729b17e0c2",
        "parentId" : null,
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "I still worry that we could be doing random compaction under heavy load scenarios.  Could we outline a TODO for an ideal case where this becomes a low-priority back-ground task when load is low. \n",
        "createdAt" : "2016-07-14T15:55:41Z",
        "updatedAt" : "2016-07-15T17:25:00Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      }
    ],
    "commit" : "54025ce8b3aadf27914a84c336a822975a69a158",
    "line" : 160,
    "diffHunk" : "@@ -1,1 +154,158 @@\t\treturn curTime, curRev, nil\n\t}\n\tif err = client.Compact(ctx, rev); err != nil {\n\t\treturn curTime, curRev, err\n\t}"
  },
  {
    "id" : "f340b517-c2fc-4077-a17d-7136545da7cb",
    "prId" : 25010,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3c42a1fe-202c-4b1e-9268-0fb172ea7980",
        "parentId" : null,
        "authorId" : "55c0e4a8-86f8-4426-a163-752ee421c57e",
        "body" : "explain why this func takes endpoints as argument?\n",
        "createdAt" : "2016-05-03T21:53:24Z",
        "updatedAt" : "2016-05-04T23:01:11Z",
        "lastEditedBy" : "55c0e4a8-86f8-4426-a163-752ee421c57e",
        "tags" : [
        ]
      },
      {
        "id" : "6f7b3f44-841e-4aad-91fc-5abf19b1d89d",
        "parentId" : "3c42a1fe-202c-4b1e-9268-0fb172ea7980",
        "authorId" : "55c0e4a8-86f8-4426-a163-752ee421c57e",
        "body" : "Why not just call client.Endpoints()?\n",
        "createdAt" : "2016-05-03T21:54:06Z",
        "updatedAt" : "2016-05-04T23:01:11Z",
        "lastEditedBy" : "55c0e4a8-86f8-4426-a163-752ee421c57e",
        "tags" : [
        ]
      }
    ],
    "commit" : "3144ebc7fc6a2e069343556b40d6bf2575b72fb7",
    "line" : null,
    "diffHunk" : "@@ -1,1 +37,41 @@}\n\n// StartCompactor starts a compactor in the background in order to compact keys\n// older than fixed time.\n// We need to compact keys because we can't let on disk data grow forever."
  },
  {
    "id" : "e10d7e03-a5e1-4a9a-b2d2-207a7fc46f9c",
    "prId" : 25010,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "03bbb339-bb5b-443e-bf88-7e011ff5454c",
        "parentId" : null,
        "authorId" : "55c0e4a8-86f8-4426-a163-752ee421c57e",
        "body" : "this is wrong. we can only add the endpoint to the map when there is no duplication. or we might add endpoints to the map without starting the compactor due to the return at line 55.\n",
        "createdAt" : "2016-05-04T21:48:45Z",
        "updatedAt" : "2016-05-04T23:01:11Z",
        "lastEditedBy" : "55c0e4a8-86f8-4426-a163-752ee421c57e",
        "tags" : [
        ]
      }
    ],
    "commit" : "3144ebc7fc6a2e069343556b40d6bf2575b72fb7",
    "line" : null,
    "diffHunk" : "@@ -1,1 +57,61 @@\t}\n\tfor _, ep := range client.Endpoints() {\n\t\tendpointsMap[ep] = emptyStruct\n\t}\n"
  },
  {
    "id" : "bdf5093c-dbbc-46a3-a5e3-7d600e4afe6c",
    "prId" : 25010,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "906b0989-834c-4cfa-96b7-156d4f1612c5",
        "parentId" : null,
        "authorId" : "b96e61ce-4ca0-4aad-a5ec-fc085dbcb14a",
        "body" : "why not put row59 behind row56ï¼Ÿ\n",
        "createdAt" : "2016-05-05T07:02:15Z",
        "updatedAt" : "2016-05-05T07:02:15Z",
        "lastEditedBy" : "b96e61ce-4ca0-4aad-a5ec-fc085dbcb14a",
        "tags" : [
        ]
      },
      {
        "id" : "3cedc375-9681-4ecd-b692-b87da168e437",
        "parentId" : "906b0989-834c-4cfa-96b7-156d4f1612c5",
        "authorId" : "55c0e4a8-86f8-4426-a163-752ee421c57e",
        "body" : "it is incorrect to put it under line56. see https://github.com/kubernetes/kubernetes/pull/25010#discussion_r62120714\n",
        "createdAt" : "2016-05-05T13:48:02Z",
        "updatedAt" : "2016-05-05T13:48:02Z",
        "lastEditedBy" : "55c0e4a8-86f8-4426-a163-752ee421c57e",
        "tags" : [
        ]
      },
      {
        "id" : "2cc2499d-4e91-4f41-97ee-2ae505ece227",
        "parentId" : "906b0989-834c-4cfa-96b7-156d4f1612c5",
        "authorId" : "b96e61ce-4ca0-4aad-a5ec-fc085dbcb14a",
        "body" : "ok. i see.\n",
        "createdAt" : "2016-05-06T01:20:17Z",
        "updatedAt" : "2016-05-06T01:20:17Z",
        "lastEditedBy" : "b96e61ce-4ca0-4aad-a5ec-fc085dbcb14a",
        "tags" : [
        ]
      }
    ],
    "commit" : "3144ebc7fc6a2e069343556b40d6bf2575b72fb7",
    "line" : 43,
    "diffHunk" : "@@ -1,1 +57,61 @@\t}\n\tfor _, ep := range client.Endpoints() {\n\t\tendpointsMap[ep] = emptyStruct\n\t}\n"
  }
]