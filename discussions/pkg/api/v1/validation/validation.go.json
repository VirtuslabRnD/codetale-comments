[
  {
    "id" : "cb37d6ed-5cea-4b98-83f6-06419f7ed43c",
    "prId" : 51305,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/51305#pullrequestreview-58590297",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "96bc4565-3c6f-4b23-82e3-54b8c0dfa591",
        "parentId" : null,
        "authorId" : "a09f2d48-fec0-4c0d-bd81-6de7378a6ebf",
        "body" : "In fact, all errors are returned in the above return(s). But here both are ok, return allErrs might be safer.",
        "createdAt" : "2017-08-25T02:55:54Z",
        "updatedAt" : "2017-08-25T02:56:00Z",
        "lastEditedBy" : "a09f2d48-fec0-4c0d-bd81-6de7378a6ebf",
        "tags" : [
        ]
      },
      {
        "id" : "a88f0426-9265-4e2b-9f58-eb9a32513b83",
        "parentId" : "96bc4565-3c6f-4b23-82e3-54b8c0dfa591",
        "authorId" : "c29e1906-5f0b-4d7b-af8b-d664805e8c8e",
        "body" : "yes, by the way, there are many validations, which do not return until all fields are validated.  (https://github.com/kubernetes/kubernetes/blob/master/pkg/api/v1/validation/validation.go#L131) etc.\r\nshould we return err ASAP or after all validated. To improve apiserver performance, I think return err ASAP is better.",
        "createdAt" : "2017-08-25T03:07:05Z",
        "updatedAt" : "2017-08-25T03:07:59Z",
        "lastEditedBy" : "c29e1906-5f0b-4d7b-af8b-d664805e8c8e",
        "tags" : [
        ]
      },
      {
        "id" : "9c8d6a8c-feae-43d1-aaae-23c2a1e81c97",
        "parentId" : "96bc4565-3c6f-4b23-82e3-54b8c0dfa591",
        "authorId" : "cf088828-7f69-4b6e-8956-1842c94daa02",
        "body" : "I do not think all errs are returned.  validateResourceName(...) may return errs but when `if len(strings.Split(value, \"/\")) != 1` , nothing will be returned.  That is not expected.",
        "createdAt" : "2017-08-25T07:25:54Z",
        "updatedAt" : "2017-08-25T07:25:57Z",
        "lastEditedBy" : "cf088828-7f69-4b6e-8956-1842c94daa02",
        "tags" : [
        ]
      },
      {
        "id" : "fc2ddd6e-5b99-419e-9ce1-9e0210ec54e2",
        "parentId" : "96bc4565-3c6f-4b23-82e3-54b8c0dfa591",
        "authorId" : "cf088828-7f69-4b6e-8956-1842c94daa02",
        "body" : "I sent an issue and pr for this before.  But do not consider v1 package.\r\nhttps://github.com/kubernetes/kubernetes/pull/51257\r\nhttps://github.com/kubernetes/kubernetes/issues/51256",
        "createdAt" : "2017-08-25T07:27:18Z",
        "updatedAt" : "2017-08-25T07:27:18Z",
        "lastEditedBy" : "cf088828-7f69-4b6e-8956-1842c94daa02",
        "tags" : [
        ]
      },
      {
        "id" : "377c4403-959b-41c8-b1aa-f04c906be90b",
        "parentId" : "96bc4565-3c6f-4b23-82e3-54b8c0dfa591",
        "authorId" : "c29e1906-5f0b-4d7b-af8b-d664805e8c8e",
        "body" : "original code \r\n```\r\nfunc validateContainerResourceName(value string, fldPath *field.Path) field.ErrorList {\r\n\tallErrs := validateResourceName(value, fldPath)\r\n\tif len(strings.Split(value, \"/\")) == 1 {\r\n\t\tif !helper.IsStandardContainerResourceName(value) {\r\n\t\t\treturn append(allErrs, field.Invalid(fldPath, value, \"must be a standard resource for containers\"))\r\n\t\t}\r\n\t}\r\n\treturn field.ErrorList{}\r\n}\r\n```\r\nas @NickrenREN  say, when ```len(strings.Split(value, \"/\")) != 1```  may return wrong result.",
        "createdAt" : "2017-08-25T07:43:50Z",
        "updatedAt" : "2017-08-25T07:43:50Z",
        "lastEditedBy" : "c29e1906-5f0b-4d7b-af8b-d664805e8c8e",
        "tags" : [
        ]
      },
      {
        "id" : "341b1b86-6137-4598-b2cb-33dfaff8735c",
        "parentId" : "96bc4565-3c6f-4b23-82e3-54b8c0dfa591",
        "authorId" : "a09f2d48-fec0-4c0d-bd81-6de7378a6ebf",
        "body" : "Good point! I misread :)",
        "createdAt" : "2017-08-25T08:00:03Z",
        "updatedAt" : "2017-08-25T08:00:03Z",
        "lastEditedBy" : "a09f2d48-fec0-4c0d-bd81-6de7378a6ebf",
        "tags" : [
        ]
      }
    ],
    "commit" : "2e0156ad83bdc4368b5cedc528eb5808fc97cab2",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +79,83 @@\t\t}\n\t}\n\treturn allErrs\n}\n"
  },
  {
    "id" : "37f19837-6211-44dd-8fe5-915eefa1200d",
    "prId" : 50218,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/50218#pullrequestreview-54753742",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "65042d1f-9d3d-496d-809e-78b28546fd71",
        "parentId" : null,
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "I feel the check under `limits` validation can be merged into this logic.\r\n1. If limits are specified and requests aren't specified, requests will equal limits. The logic here will be hit.\r\n2. If limits aren't specified and request is, then this logic will be hit as well.\r\n3. If neither is specified, we do not care. ",
        "createdAt" : "2017-08-07T19:38:24Z",
        "updatedAt" : "2017-08-17T07:43:21Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      }
    ],
    "commit" : "75258b2763191f0de7a23f2de5075f33ae61e9d5",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +54,58 @@\t\t// Validate resource quantity.\n\t\tallErrs = append(allErrs, ValidateResourceQuantityValue(string(resourceName), quantity, fldPath)...)\n\n\t\t// Check that request <= limit.\n\t\tlimitQuantity, exists := requirements.Limits[resourceName]"
  },
  {
    "id" : "ecfdf1a9-c486-4c18-a2de-77df9cd99938",
    "prId" : 50218,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/50218#pullrequestreview-56849444",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c5b907db-b2a9-4fba-980c-659191442d8e",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "Why does this function exist in 2 places?  @caesarxuchao your fingerprints are on the commit that copied these functions into versioned.  Why?  This is a nightmare for updates like this - who would expect this code to be in two places?",
        "createdAt" : "2017-08-14T19:58:42Z",
        "updatedAt" : "2017-08-17T07:43:21Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "7fe29deb-f39d-4337-afa5-e11df657e1d9",
        "parentId" : "c5b907db-b2a9-4fba-980c-659191442d8e",
        "authorId" : "a09f2d48-fec0-4c0d-bd81-6de7378a6ebf",
        "body" : "+1, there are also other functions which exist in two places. We DO NOT want to maintain things this way.\r\n\r\nSee one example: \r\nhttps://github.com/kubernetes/kubernetes/blob/master/pkg/api/v1/service/util.go\r\nhttps://github.com/kubernetes/kubernetes/blob/master/pkg/api/service/util.go\r\n\r\nThey almost have the same functions. We'd better only keep one copy.",
        "createdAt" : "2017-08-15T03:00:55Z",
        "updatedAt" : "2017-08-17T07:43:21Z",
        "lastEditedBy" : "a09f2d48-fec0-4c0d-bd81-6de7378a6ebf",
        "tags" : [
        ]
      },
      {
        "id" : "9d86c460-b051-451e-bd8f-e0c66e13d53a",
        "parentId" : "c5b907db-b2a9-4fba-980c-659191442d8e",
        "authorId" : "a09f2d48-fec0-4c0d-bd81-6de7378a6ebf",
        "body" : "Tim, I sent an issue to track this. https://github.com/kubernetes/kubernetes/issues/50653",
        "createdAt" : "2017-08-15T03:06:39Z",
        "updatedAt" : "2017-08-17T07:43:21Z",
        "lastEditedBy" : "a09f2d48-fec0-4c0d-bd81-6de7378a6ebf",
        "tags" : [
        ]
      },
      {
        "id" : "eadd004a-ac33-43d1-abcf-739d949c02b2",
        "parentId" : "c5b907db-b2a9-4fba-980c-659191442d8e",
        "authorId" : "a09f2d48-fec0-4c0d-bd81-6de7378a6ebf",
        "body" : "As per https://github.com/kubernetes/kubernetes/issues/50653#issuecomment-322365714 by @liggitt , we should keep them as-is...",
        "createdAt" : "2017-08-15T03:18:53Z",
        "updatedAt" : "2017-08-17T07:43:21Z",
        "lastEditedBy" : "a09f2d48-fec0-4c0d-bd81-6de7378a6ebf",
        "tags" : [
        ]
      },
      {
        "id" : "df715712-430e-4e30-afa5-5f3d9409a058",
        "parentId" : "c5b907db-b2a9-4fba-980c-659191442d8e",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "Agree with liggitt's comment. I'd like to explore if we can make admission controllers operate on versioned objects, because we want to make the life easier for developers of thirdparty admission webhooks.",
        "createdAt" : "2017-08-17T07:56:35Z",
        "updatedAt" : "2017-08-17T07:56:35Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "75258b2763191f0de7a23f2de5075f33ae61e9d5",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +56,60 @@\n\t\t// Check that request <= limit.\n\t\tlimitQuantity, exists := requirements.Limits[resourceName]\n\t\tif exists {\n\t\t\t// For GPUs, not only requests can't exceed limits, they also can't be lower, i.e. must be equal."
  }
]