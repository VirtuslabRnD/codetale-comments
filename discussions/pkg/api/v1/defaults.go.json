[
  {
    "id" : "85f566d0-1d3b-47be-9c7a-cc5b766f5d2d",
    "prId" : 54013,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/54013#pullrequestreview-71532229",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "85e09b7e-452e-4871-9cf8-6f9f4c38747c",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "restore these defaults to both `SetDefaults_ScaleIOVolumeSource` and `SetDefaults_ScaleIOPersistentVolumeSource`?",
        "createdAt" : "2017-10-24T04:33:16Z",
        "updatedAt" : "2017-10-25T20:08:56Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "874512bd-2fe7-4426-8c7c-3a5263b80ab0",
        "parentId" : "85e09b7e-452e-4871-9cf8-6f9f4c38747c",
        "authorId" : "54b8eb75-28dd-421d-a52b-63bf897147a9",
        "body" : "See comment above.   Thanks!",
        "createdAt" : "2017-10-24T14:09:01Z",
        "updatedAt" : "2017-10-25T20:08:56Z",
        "lastEditedBy" : "54b8eb75-28dd-421d-a52b-63bf897147a9",
        "tags" : [
        ]
      }
    ],
    "commit" : "1c9aff8e5855e9dff6ddd3d757f9a626656e261f",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +387,391 @@\tif obj.FSType == \"\" {\n\t\tobj.FSType = \"xfs\"\n\t}\n}\n"
  },
  {
    "id" : "345a68a2-35d3-41d6-8d29-d356844519b0",
    "prId" : 51500,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/51500#pullrequestreview-60048623",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "439863e2-5eaa-4196-9fde-a3e3798b6314",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "also check for ServiceAffinityNone and set `SessionAffinityConfig == nil` ?",
        "createdAt" : "2017-08-31T23:00:14Z",
        "updatedAt" : "2017-09-01T08:21:01Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "a836494c-6fa2-4509-8d6b-da4c2dbc89d4",
        "parentId" : "439863e2-5eaa-4196-9fde-a3e3798b6314",
        "authorId" : "f2d7a78e-606f-4060-903e-a21198d7084e",
        "body" : "Currently, we will ignore `SessionAffinityConfig` when ServiceAffinityNone, but I am fine to check it :)",
        "createdAt" : "2017-09-01T05:20:59Z",
        "updatedAt" : "2017-09-01T08:21:01Z",
        "lastEditedBy" : "f2d7a78e-606f-4060-903e-a21198d7084e",
        "tags" : [
        ]
      }
    ],
    "commit" : "617e6f4fa80ec3b39c22138f34290d48da5eb631",
    "line" : 2,
    "diffHunk" : "@@ -1,1 +100,104 @@func SetDefaults_Service(obj *v1.Service) {\n\tif obj.Spec.SessionAffinity == \"\" {\n\t\tobj.Spec.SessionAffinity = v1.ServiceAffinityNone\n\t}\n\tif obj.Spec.SessionAffinity == v1.ServiceAffinityNone {"
  },
  {
    "id" : "b388f105-f31b-4e99-9e60-bc916efe37a8",
    "prId" : 46597,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/46597#pullrequestreview-58566509",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c6b29190-3cb0-4c2b-a594-39e32afbe043",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "this needs a corresponding default in the fuzzer or we will fail round trip tests",
        "createdAt" : "2017-08-25T04:16:56Z",
        "updatedAt" : "2017-08-25T04:16:56Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "d627feb5-33fa-4b35-8343-b47acf0412be",
        "parentId" : "c6b29190-3cb0-4c2b-a594-39e32afbe043",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "ah, already fixed in #51258... I got very confused rebasing a commit to fix this and it disappeared into a noop... thanks @dixudx",
        "createdAt" : "2017-08-25T04:23:43Z",
        "updatedAt" : "2017-08-25T04:23:43Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "0057305a-2f62-4bc6-908c-b6eae1d02113",
        "parentId" : "c6b29190-3cb0-4c2b-a594-39e32afbe043",
        "authorId" : "3c1422a0-6358-4857-8f56-961979171514",
        "body" : "@liggitt Already included in this PR. See [pkg/api/fuzzer/fuzzer.go#L358-L366](https://github.com/dixudx/kubernetes/blob/5c45db564fb50c06b1658dcc5dc802725cb842c7/pkg/api/fuzzer/fuzzer.go#L358-L366). The bug caused roundtrip failure is related to the generated random path of HostPath by fuzzer can be an empty string.",
        "createdAt" : "2017-08-25T04:28:37Z",
        "updatedAt" : "2017-08-25T04:28:38Z",
        "lastEditedBy" : "3c1422a0-6358-4857-8f56-961979171514",
        "tags" : [
        ]
      }
    ],
    "commit" : "504f89e3aca34a9b9b898619d189097d8ac5957a",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +374,378 @@\ttypeVol := v1.HostPathUnset\n\tif obj.Type == nil {\n\t\tobj.Type = &typeVol\n\t}\n}"
  },
  {
    "id" : "ee594f66-2387-4330-b15c-dfe84cdc2ffd",
    "prId" : 42310,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/42310#pullrequestreview-24634457",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "36b1a781-7a6a-4644-a761-fd60caddbc44",
        "parentId" : null,
        "authorId" : "72156db3-c40b-4455-9838-c12c0c606019",
        "body" : "Can we do this in `SetDefaults_Container`? It seems `SetDefaults_Pod` not necessary :).\r\n\r\nBTW, in beta, InitContainers is set after converting; so we're also ignore this for beta, right.",
        "createdAt" : "2017-03-01T11:42:04Z",
        "updatedAt" : "2017-03-01T11:42:04Z",
        "lastEditedBy" : "72156db3-c40b-4455-9838-c12c0c606019",
        "tags" : [
        ]
      },
      {
        "id" : "923b2ef7-bf0c-42ca-8ef3-3fb883830515",
        "parentId" : "36b1a781-7a6a-4644-a761-fd60caddbc44",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "Read the comment at the top, it is not desired that this be applied to containers inside pod template objects ",
        "createdAt" : "2017-03-01T12:36:12Z",
        "updatedAt" : "2017-03-01T12:36:12Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "ecfabeb5-71bd-4203-9077-745c2d7d7eab",
        "parentId" : "36b1a781-7a6a-4644-a761-fd60caddbc44",
        "authorId" : "72156db3-c40b-4455-9838-c12c0c606019",
        "body" : "Correct! do you know why we did this only for Pod?",
        "createdAt" : "2017-03-01T12:42:15Z",
        "updatedAt" : "2017-03-01T12:42:15Z",
        "lastEditedBy" : "72156db3-c40b-4455-9838-c12c0c606019",
        "tags" : [
        ]
      },
      {
        "id" : "df5f397f-c1c6-4d8a-abcf-e675189ea1c7",
        "parentId" : "36b1a781-7a6a-4644-a761-fd60caddbc44",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "probably to avoid cluttering the pod spec inside objects like replicaset or deployment, when the only time the default matters is in the final pod",
        "createdAt" : "2017-03-01T13:39:12Z",
        "updatedAt" : "2017-03-01T13:39:12Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "874b67ce-a2d6-43de-bcb0-6b9ca02e0deb",
        "parentId" : "36b1a781-7a6a-4644-a761-fd60caddbc44",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "there are some proposals to skip defaulting altogether in pod specs inside objects like that, and keep the content of a deployment or replicaset limited to exactly what the user set",
        "createdAt" : "2017-03-01T13:39:49Z",
        "updatedAt" : "2017-03-01T13:39:50Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "0c84c7b9-d7e7-49a7-93ae-4079bad83cd1",
        "parentId" : "36b1a781-7a6a-4644-a761-fd60caddbc44",
        "authorId" : "72156db3-c40b-4455-9838-c12c0c606019",
        "body" : "Just not sure which \"case/proposal\" ask to do that :). In other word, what may happen if we do it in `pod.spec`?\r\n\r\nnot debt, just want to learn more history & cases :).",
        "createdAt" : "2017-03-01T13:45:19Z",
        "updatedAt" : "2017-03-01T13:45:19Z",
        "lastEditedBy" : "72156db3-c40b-4455-9838-c12c0c606019",
        "tags" : [
        ]
      },
      {
        "id" : "3e61efd7-1b40-4b17-a524-14ab6b213882",
        "parentId" : "36b1a781-7a6a-4644-a761-fd60caddbc44",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "the PodSpec object is reused in lots of objects, the intent of this is to only apply defaulting to one inside a Pod object",
        "createdAt" : "2017-03-01T13:47:28Z",
        "updatedAt" : "2017-03-01T13:47:28Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "dfa437f5-75ad-4a80-bd18-c5a513c1a848",
        "parentId" : "36b1a781-7a6a-4644-a761-fd60caddbc44",
        "authorId" : "72156db3-c40b-4455-9838-c12c0c606019",
        "body" : "Yes, that's current behavior. One case in my mind is that: for the Pod, if request is not set, it is low priority (not defined in QoS??) which maybe killed. So set request for Pod to avoid eviction; it's OK to RC/RS which will start a new Pod.",
        "createdAt" : "2017-03-01T13:58:54Z",
        "updatedAt" : "2017-03-01T13:58:54Z",
        "lastEditedBy" : "72156db3-c40b-4455-9838-c12c0c606019",
        "tags" : [
        ]
      },
      {
        "id" : "a4994539-bffb-4db5-b5a5-d5c303f290c7",
        "parentId" : "36b1a781-7a6a-4644-a761-fd60caddbc44",
        "authorId" : "72156db3-c40b-4455-9838-c12c0c606019",
        "body" : "And if it's the above case, it seems not necessary for initContainer :).",
        "createdAt" : "2017-03-02T01:24:44Z",
        "updatedAt" : "2017-03-02T01:24:44Z",
        "lastEditedBy" : "72156db3-c40b-4455-9838-c12c0c606019",
        "tags" : [
        ]
      }
    ],
    "commit" : "cfb1cd486e9b4d5ba0ee647c6e8888301b760506",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +162,166 @@\t}\n\tfor i := range obj.Spec.InitContainers {\n\t\tif obj.Spec.InitContainers[i].Resources.Limits != nil {\n\t\t\tif obj.Spec.InitContainers[i].Resources.Requests == nil {\n\t\t\t\tobj.Spec.InitContainers[i].Resources.Requests = make(ResourceList)"
  },
  {
    "id" : "a3b5e4d4-92c9-455f-a54b-b6532a31e638",
    "prId" : 24907,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a6abb0df-8b9f-4f57-84e9-073b843a397a",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "@smarterclayton - maybe for consistency we should have the names of those functions in exactly the same way as we have for conversions and deep copies. So that would mean:\nSetDefaults_v1_PodExectOptions\n\n?\n",
        "createdAt" : "2016-04-28T06:25:30Z",
        "updatedAt" : "2016-04-28T16:20:20Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "d4ec79d7-3606-48c7-9ec0-2aa9d893cbdf",
        "parentId" : "a6abb0df-8b9f-4f57-84e9-073b843a397a",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "I had that originally, but there can only be one of these per package, and\nthe extra segment doesn't seem to add anything.\n\nOn Apr 28, 2016, at 2:25 AM, Wojciech Tyczynski notifications@github.com\nwrote:\n\nIn pkg/api/v1/defaults.go\nhttps://github.com/kubernetes/kubernetes/pull/24907#discussion_r61378324:\n\n> -         if util.AllPtrFieldsNil(&obj.VolumeSource) {\n> -             obj.VolumeSource = VolumeSource{\n> -                 EmptyDir: &EmptyDirVolumeSource{},\n> -             }\n> -         }\n> -     },\n> -     func(obj *ContainerPort) {\n> -         if obj.Protocol == \"\" {\n> -             obj.Protocol = ProtocolTCP\n> -         }\n> -     },\n> -     func(obj *Container) {\n> -         if obj.ImagePullPolicy == \"\" {\n> -             // Ignore error and assume it has been validated elsewhere\n> -             _, tag, _ := parsers.ParseImageName(obj.Image)\n> -     SetDefaults_PodExecOptions,\n\n@smarterclayton https://github.com/smarterclayton - maybe for consistency\nwe should have the names of those functions in exactly the same way as we\nhave for conversions and deep copies. So that would mean:\nSetDefaults_v1_PodExectOptions\n\n?\n\n—\nYou are receiving this because you were mentioned.\nReply to this email directly or view it on GitHub\nhttps://github.com/kubernetes/kubernetes/pull/24907/files/7d7f87bbd32813c76ca7e19171b635733d852fc2#r61378324\n",
        "createdAt" : "2016-04-28T13:50:54Z",
        "updatedAt" : "2016-04-28T16:20:20Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "d08dd075-e69a-4099-8489-1a7e78512272",
        "parentId" : "a6abb0df-8b9f-4f57-84e9-073b843a397a",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "I would still prefer consistency, but well - it's not very important.\n",
        "createdAt" : "2016-04-28T13:54:17Z",
        "updatedAt" : "2016-04-28T16:20:20Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "931f352fdfece3e9ecd7e6f50b66fb1b8f97f9d6",
    "line" : 47,
    "diffHunk" : "@@ -1,1 +26,30 @@func addDefaultingFuncs(scheme *runtime.Scheme) {\n\tscheme.AddDefaultingFuncs(\n\t\tSetDefaults_PodExecOptions,\n\t\tSetDefaults_PodAttachOptions,\n\t\tSetDefaults_ReplicationController,"
  },
  {
    "id" : "6f9fe815-4e77-4d63-b0c7-017761900cee",
    "prId" : 12035,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "19d229a2-4e24-40c5-b22c-0ff942407e7f",
        "parentId" : null,
        "authorId" : "b7abca6a-d6be-4008-a014-3b5ca0e90529",
        "body" : "Add a note that this sets the requests to the limit if the request was not specified.\n",
        "createdAt" : "2015-07-30T20:01:02Z",
        "updatedAt" : "2015-08-06T02:02:38Z",
        "lastEditedBy" : "b7abca6a-d6be-4008-a014-3b5ca0e90529",
        "tags" : [
        ]
      },
      {
        "id" : "aa32f9c7-07cc-4641-8e12-412191246fd2",
        "parentId" : "19d229a2-4e24-40c5-b22c-0ff942407e7f",
        "authorId" : "3c734967-9d67-42aa-a243-d401c1524cb6",
        "body" : "Done.\n",
        "createdAt" : "2015-07-31T04:49:47Z",
        "updatedAt" : "2015-08-06T02:02:38Z",
        "lastEditedBy" : "3c734967-9d67-42aa-a243-d401c1524cb6",
        "tags" : [
        ]
      }
    ],
    "commit" : "ef1e576810e0a7d4173a152183c6be5239f2e757",
    "line" : null,
    "diffHunk" : "@@ -1,1 +159,163 @@\t\tfunc(obj *ResourceRequirements) {\n\t\t\t// Set requests to limits if requests are not specified (but limits are).\n\t\t\tif obj.Limits != nil {\n\t\t\t\tif obj.Requests == nil {\n\t\t\t\t\tobj.Requests = make(ResourceList)"
  }
]