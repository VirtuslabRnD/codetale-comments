[
  {
    "id" : "c64364b4-cbc1-46fb-b291-268645697744",
    "prId" : 86102,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/86102#pullrequestreview-330245135",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "78eb4497-4adb-4709-b1dd-d450e65b2642",
        "parentId" : null,
        "authorId" : "d7870cae-47b0-4c8e-8527-be8fc4be86de",
        "body" : "Slightly tangential question from me - it appears there are ~3 separate `ExtractContainerResourceValue` functions that we are updating here. Is there the opportunity to consolidate those into a single function which is reused? It feels less than optimal that we have to add the same 20 lines of code to three different functions.\r\n\r\nVery possible I'm missing an important difference between them though :)",
        "createdAt" : "2019-12-11T01:05:35Z",
        "updatedAt" : "2020-11-10T21:09:27Z",
        "lastEditedBy" : "d7870cae-47b0-4c8e-8527-be8fc4be86de",
        "tags" : [
        ]
      }
    ],
    "commit" : "45bd6cb186c05eb3a6cdb2cc4927bbcb50a8ff74",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +195,199 @@\t\treturn convertResourceEphemeralStorageToString(container.Resources.Requests.StorageEphemeral(), divisor)\n\t}\n\t// handle extended standard resources with dynamic names\n\t// example: requests.hugepages-<pageSize> or limits.hugepages-<pageSize>\n\tif strings.HasPrefix(fs.Resource, \"requests.\") {"
  },
  {
    "id" : "39c3b4a7-2eca-4fa6-af0c-086bbac7773d",
    "prId" : 79247,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/79247#pullrequestreview-272874933",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d40ce067-c929-472f-8e04-932328ab2da9",
        "parentId" : null,
        "authorId" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "body" : "I know there were concerns over checking feature gates in the scheduler - we should verify this isn't in a critical path (I don't think so, but wanted to state it here)",
        "createdAt" : "2019-08-07T22:39:12Z",
        "updatedAt" : "2019-08-20T00:33:59Z",
        "lastEditedBy" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "tags" : [
        ]
      },
      {
        "id" : "00a8d589-a391-4724-a52e-54da10be0925",
        "parentId" : "d40ce067-c929-472f-8e04-932328ab2da9",
        "authorId" : "1ccd067e-9fba-4e11-a385-9b3c638dbd8a",
        "body" : "There were concerns, which surprised me.  We ended up keeping it as is, since it is first checked against the Overhead being a part of the pod.Spec, anyway.  It'd be abnormal to hit this check and have Overhead set and the feature gate not set.",
        "createdAt" : "2019-08-08T22:45:34Z",
        "updatedAt" : "2019-08-20T00:33:59Z",
        "lastEditedBy" : "1ccd067e-9fba-4e11-a385-9b3c638dbd8a",
        "tags" : [
        ]
      }
    ],
    "commit" : "80ee072b85fb8616b5209cfcafc291ccbf868657",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +73,77 @@\t// if PodOverhead feature is supported, add overhead for running a pod\n\t// to the sum of reqeuests and to non-zero limits:\n\tif pod.Spec.Overhead != nil && utilfeature.DefaultFeatureGate.Enabled(features.PodOverhead) {\n\t\taddResourceList(reqs, pod.Spec.Overhead)\n"
  },
  {
    "id" : "911bd525-ed3b-494d-a8da-5848ebc2c2c0",
    "prId" : 79247,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/79247#pullrequestreview-277432489",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5a667418-3e37-44cc-8f52-1753debd73cf",
        "parentId" : null,
        "authorId" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "body" : "Should rQuantity.MilliValue() be used if resourceName is v1.ResourceCPU ?",
        "createdAt" : "2019-08-20T20:51:02Z",
        "updatedAt" : "2019-08-20T20:51:03Z",
        "lastEditedBy" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "80ee072b85fb8616b5209cfcafc291ccbf868657",
    "line" : 79,
    "diffHunk" : "@@ -1,1 +107,111 @@\tfor _, container := range pod.Spec.Containers {\n\t\tif rQuantity, ok := container.Resources.Requests[resourceName]; ok {\n\t\t\trequestQuantity.Add(rQuantity)\n\t\t}\n\t}"
  },
  {
    "id" : "199a5065-a809-421d-a731-da3c9ad93a2c",
    "prId" : 44983,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/44983#pullrequestreview-34998080",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d3c133f1-95dd-4cac-9617-916dd71446f3",
        "parentId" : null,
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "Addressed the comment",
        "createdAt" : "2017-04-27T00:58:14Z",
        "updatedAt" : "2017-04-27T16:44:51Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "958903509c29fdfe216c0bbf0abce1ce0abd59a6",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +118,122 @@// ExtractResourceValueByContainerNameAndNodeAllocatable extracts the value of a resource\n// by providing container name and node allocatable\nfunc ExtractResourceValueByContainerNameAndNodeAllocatable(copier deepCopier, fs *v1.ResourceFieldSelector, pod *v1.Pod, containerName string, nodeAllocatable v1.ResourceList) (string, error) {\n\trealContainer, err := findContainerInPod(pod, containerName)\n\tif err != nil {"
  }
]