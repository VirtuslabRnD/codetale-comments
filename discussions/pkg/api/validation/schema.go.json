[
  {
    "id" : "e5d148d4-bddf-4cea-9d31-e723777e5e54",
    "prId" : 34407,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/34407#pullrequestreview-4794599",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b1f11b76-008c-4154-9f68-cd75da3387be",
        "parentId" : null,
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Unfortunate that you have to hardcode just two fields.  This would be a lot more useful if it traversed all maps.\n",
        "createdAt" : "2016-10-09T05:35:06Z",
        "updatedAt" : "2016-10-14T04:59:43Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "305a41e7-23b1-4454-9d1b-610cc745e3fa",
        "parentId" : "b1f11b76-008c-4154-9f68-cd75da3387be",
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "the trouble is that this is bytes, we could automatically build up a map for every runtime.Object I suppose.  Follow on PR?\n",
        "createdAt" : "2016-10-10T16:58:21Z",
        "updatedAt" : "2016-10-14T04:59:43Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      },
      {
        "id" : "4b06ab49-e8c2-4fe7-922c-3320cb7b3ec3",
        "parentId" : "b1f11b76-008c-4154-9f68-cd75da3387be",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "I can't think of a way to improve it, just noting that we really want a SAX / streaming parser here.\n",
        "createdAt" : "2016-10-19T02:23:21Z",
        "updatedAt" : "2016-10-19T02:23:22Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "d9d06f6680c7a0546c511f69bb345704aa3e5334",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +67,71 @@type NoDoubleKeySchema struct{}\n\nfunc (NoDoubleKeySchema) ValidateBytes(data []byte) error {\n\tvar list []error = nil\n\tif err := validateNoDuplicateKeys(data, \"metadata\", \"labels\"); err != nil {"
  },
  {
    "id" : "497402ea-cc27-482f-8e0c-b479e029f3ec",
    "prId" : 27944,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2247592c-6ba5-4826-bce2-939ce22afc2e",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "@nikhiljindal @pwittrock I think you guys know this file-- is this a good way to fix the problem?\n",
        "createdAt" : "2016-06-29T20:13:48Z",
        "updatedAt" : "2016-06-29T20:13:48Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "3118c937be5cfd290f243dd7217b4d236cd56b2d",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +295,299 @@\n// This matches type name in the swagger spec, such as \"v1.Binding\".\nvar versionRegexp = regexp.MustCompile(`^(v.+|unversioned)\\..*`)\n\nfunc (s *SwaggerSchema) validateField(value interface{}, fieldName, fieldType string, fieldDetails *swagger.ModelProperty) []error {"
  },
  {
    "id" : "580c5551-6c8f-4675-805a-4f897bf9c9bb",
    "prId" : 25709,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1beaec4f-8dde-4e72-9022-f6e6428f9190",
        "parentId" : null,
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "If the aim is just to prevent panic, then we can also return nil here instead of returning an error?\nargs is an optional field so its fine for it to be null?\n",
        "createdAt" : "2016-05-26T21:13:58Z",
        "updatedAt" : "2016-05-30T04:12:38Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      },
      {
        "id" : "bccaec93-f203-4144-bba9-6404a9e9e369",
        "parentId" : "1beaec4f-8dde-4e72-9022-f6e6428f9190",
        "authorId" : "6f0e0b8d-8a92-4746-b4fe-8a3c75407adc",
        "body" : "Hi @nikhiljindal , thanks for the review.\n\nSo I tried returning a success (empty error list) then ran a hacked version of \"blog-logging\". The user gets a rather poor error:\n\n```\n./kubectl.sh create -f ../examples/blog-logging/counter-pod.yaml \nunable to decode \"../examples/blog-logging/counter-pod.yaml\": [pos 94]: json: expect char '\"' but got char 'n'\n```\n\nInstead of the following:\n\n```\n./kubectl.sh create -f ../examples/blog-logging/counter-pod.yaml \nerror validating \"../examples/blog-logging/counter-pod.yaml\": error validating data: unexpected nil value for field spec.containers[0].args[0]; if you choose to ignore these errors, turn validation off with --validate=false\n```\n",
        "createdAt" : "2016-05-30T03:49:01Z",
        "updatedAt" : "2016-05-30T04:12:38Z",
        "lastEditedBy" : "6f0e0b8d-8a92-4746-b4fe-8a3c75407adc",
        "tags" : [
        ]
      }
    ],
    "commit" : "5dcbc7ce5bd828b27405b1ad8b2731ad8d34a51c",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +300,304 @@\tallErrs := []error{}\n\tif reflect.TypeOf(value) == nil {\n\t\treturn append(allErrs, fmt.Errorf(\"unexpected nil value for field %v\", fieldName))\n\t}\n\t// TODO: caesarxuchao: because we have multiple group/versions and objects"
  },
  {
    "id" : "b8e8f0d2-d93f-4667-bbe2-9ac75a6d1ddd",
    "prId" : 14726,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1e4747ef-586f-4d5a-b61d-bb4c5297ae0c",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "This would double validate `List`, right?\n",
        "createdAt" : "2015-09-29T19:44:49Z",
        "updatedAt" : "2015-10-06T13:22:27Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "dc8e073d-b800-4e6c-8d3f-c486710ace0f",
        "parentId" : "1e4747ef-586f-4d5a-b61d-bb4c5297ae0c",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "yeah, and fail like it does today when the model isn't found for that type\n",
        "createdAt" : "2015-09-29T19:46:15Z",
        "updatedAt" : "2015-10-06T13:22:27Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "755d740fed591c8ca1df276dc33591b8cafd33a9",
    "line" : null,
    "diffHunk" : "@@ -1,1 +154,158 @@\t}\n\tversion := apiutil.GetVersion(groupVersion.(string))\n\tallErrs := s.ValidateObject(obj, \"\", version+\".\"+kind.(string))\n\tif len(allErrs) == 1 {\n\t\treturn allErrs[0]"
  },
  {
    "id" : "c4c1cdcd-9c8f-4fe8-8fb8-2e7b4f90790b",
    "prId" : 14726,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "de6db1b3-23d6-493b-91fb-6cfbc2e7a453",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "Any reason to continue after the end of this `if`?\n",
        "createdAt" : "2015-09-29T19:45:07Z",
        "updatedAt" : "2015-10-06T13:22:27Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "755d740fed591c8ca1df276dc33591b8cafd33a9",
    "line" : null,
    "diffHunk" : "@@ -1,1 +152,156 @@\tif strings.HasSuffix(kind.(string), \"List\") {\n\t\treturn errors.NewAggregate(s.validateList(fields))\n\t}\n\tversion := apiutil.GetVersion(groupVersion.(string))\n\tallErrs := s.ValidateObject(obj, \"\", version+\".\"+kind.(string))"
  },
  {
    "id" : "ac2b9cac-dbc9-49bc-ac4f-d5dfe0c7c2f7",
    "prId" : 14156,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "caec73d4-476e-42a8-81cf-dd2fc80f6991",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Please give examples of what this regexp should and shouldn't match. (in a test?)\n",
        "createdAt" : "2015-09-21T21:51:09Z",
        "updatedAt" : "2015-09-24T22:32:19Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "9de51150-1781-4612-bd2a-eee07e04e185",
        "parentId" : "caec73d4-476e-42a8-81cf-dd2fc80f6991",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "And why does the old mechanism no longer work?\n",
        "createdAt" : "2015-09-21T21:51:46Z",
        "updatedAt" : "2015-09-24T22:32:19Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "bc08d273-c8be-475a-9837-2404fe966bb0",
        "parentId" : "caec73d4-476e-42a8-81cf-dd2fc80f6991",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "It's because an experimental type may have a v1 type as a field, so `strings.HasPrefix(fieldType, apiVersion)` returns false when it should return true.\n",
        "createdAt" : "2015-09-21T22:05:56Z",
        "updatedAt" : "2015-09-24T22:32:19Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      },
      {
        "id" : "05f5d432-ae9f-4255-a176-652ccb5f2d5b",
        "parentId" : "caec73d4-476e-42a8-81cf-dd2fc80f6991",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Can you give an example?\n",
        "createdAt" : "2015-09-21T22:10:25Z",
        "updatedAt" : "2015-09-24T22:32:19Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "bc389691-0995-45ab-b77d-8d5de7c76a3a",
        "parentId" : "caec73d4-476e-42a8-81cf-dd2fc80f6991",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "like this https://github.com/kubernetes/kubernetes/blob/master/pkg/apis/experimental/v1/types.go#L205\n\nand during the validation, the old mechanism will check `strings.HasPrefix(v1.PodTemplateSpec, v1alpha1)`, so it will return a false. But we should take this if condition and recursively cal ValidateObject as v1.PodTemplateSpec is a type defined by us.\n\nDo you mean I should give an example in the comments?\n",
        "createdAt" : "2015-09-21T22:32:52Z",
        "updatedAt" : "2015-09-24T22:32:19Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      },
      {
        "id" : "6d276a59-d2bd-44a2-a573-8993d2346819",
        "parentId" : "caec73d4-476e-42a8-81cf-dd2fc80f6991",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "I don't get it-- that field should be called \"template\" by the swagger?\n\nOn Mon, Sep 21, 2015 at 3:33 PM, Chao Xu notifications@github.com wrote:\n\n> In pkg/api/validation/schema.go\n> https://github.com/kubernetes/kubernetes/pull/14156#discussion_r40035221\n> :\n> \n> >  func (s *SwaggerSchema) validateField(value interface{}, apiVersion, fieldName, fieldType string, fieldDetails *swagger.ModelProperty) errs.ValidationErrorList {\n> > -   if strings.HasPrefix(fieldType, apiVersion) {\n> > -   // TODO: caesarxuchao: because we have multiple group/versions and objects\n> > -   // may reference objects in other group, the commented out way of checking\n> > -   // if a filedType is a type defined by us is outdated. We use a hacky way\n> > -   // for now.\n> \n> like this\n> https://github.com/kubernetes/kubernetes/blob/master/pkg/apis/experimental/v1/types.go#L205\n> \n> and during the validation, the old mechanism will check strings.HasPrefix(v1.PodTemplateSpec,\n> v1alpha1), so it will return a false. But we should take this if\n> condition and recursively cal ValidateObject as v1.PodTemplateSpec is a\n> type defined by us.\n> \n> Do you mean I should give an example in the comments?\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/kubernetes/kubernetes/pull/14156/files#r40035221.\n",
        "createdAt" : "2015-09-21T22:39:47Z",
        "updatedAt" : "2015-09-24T22:32:19Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "ae1293418b125b540717e6c695df886fe2ddde64",
    "line" : null,
    "diffHunk" : "@@ -1,1 +157,161 @@\t// may reference objects in other group, the commented out way of checking\n\t// if a filedType is a type defined by us is outdated. We use a hacky way\n\t// for now.\n\t// TODO: the type name in the swagger spec is something like \"v1.Binding\",\n\t// and the \"v1\" is generated from the package name, not the groupVersion of"
  },
  {
    "id" : "9fbdc36a-4e56-469e-884c-81fc5b5c78cf",
    "prId" : 9376,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9fb8d903-24c1-48bf-90ac-3665ac5d2044",
        "parentId" : null,
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "why not use  runtime.UnstructuredJSONScheme.DataVersionAndKind for this?\n",
        "createdAt" : "2015-06-09T03:17:34Z",
        "updatedAt" : "2015-06-09T03:17:34Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      },
      {
        "id" : "607d7697-a974-4c53-87b4-94f230356d57",
        "parentId" : "9fb8d903-24c1-48bf-90ac-3665ac5d2044",
        "authorId" : "72935ebf-c497-440a-ac8d-70d86560a131",
        "body" : "err := json.Unmarshal(data, &obj), this already parses json package, I think we can't add an new unmarshal call, so I don't use runtime.UnstructuredJSONScheme.DataVersionAndKind. what's your point?\n",
        "createdAt" : "2015-06-09T03:31:10Z",
        "updatedAt" : "2015-06-09T03:31:10Z",
        "lastEditedBy" : "72935ebf-c497-440a-ac8d-70d86560a131",
        "tags" : [
        ]
      },
      {
        "id" : "860c52c8-e2c8-40c6-b553-4f4b8a641d9d",
        "parentId" : "9fb8d903-24c1-48bf-90ac-3665ac5d2044",
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "DataVersionAndKind does exactly this. It would be cleaner to use DataVersionAndKind but less efficient. Just entertaining the idea.\n",
        "createdAt" : "2015-06-09T03:37:48Z",
        "updatedAt" : "2015-06-09T03:38:07Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      }
    ],
    "commit" : "37abe11f8af74e34f0e7cee2f2658f659b10595c",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +85,89 @@\tif kind == nil {\n\t\tfmt.Errorf(\"kind not set\")\n\t}\n\treturn s.ValidateObject(obj, apiVersion.(string), \"\", apiVersion.(string)+\".\"+kind.(string))\n}"
  },
  {
    "id" : "7e11a75f-3a10-4427-8a46-1c8f58dcb088",
    "prId" : 3440,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fcb45bbd-51ad-4fb9-a188-1c31c08dd2e2",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "can you switch to\n\n```\nyaml \"gopkg.in/yaml.v2\"\n```\n\nIt makes some tools happier.\n",
        "createdAt" : "2015-01-13T23:49:15Z",
        "updatedAt" : "2015-01-13T23:49:15Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "b87058e9-700d-4234-bbe6-e1b95dae5935",
        "parentId" : "fcb45bbd-51ad-4fb9-a188-1c31c08dd2e2",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "@thockin I seem to recall you wanting this change in a few places but I can't recall why?\n",
        "createdAt" : "2015-01-14T00:11:43Z",
        "updatedAt" : "2015-01-14T00:11:43Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "ec4c1b36-f95e-4e92-bdfc-1524c8832a79",
        "parentId" : "fcb45bbd-51ad-4fb9-a188-1c31c08dd2e2",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "Not me, sorry.\n\nOn Tue, Jan 13, 2015 at 4:12 PM, Daniel Smith notifications@github.com\nwrote:\n\n> In pkg/api/validation/schema.go\n> https://github.com/GoogleCloudPlatform/kubernetes/pull/3440#discussion-diff-22907289\n> :\n> \n> > @@ -24,7 +24,7 @@ import (\n> > \n> > ```\n> > \"github.com/emicklei/go-restful/swagger\"\n> > \"github.com/golang/glog\"\n> > ```\n> > -   \"gopkg.in/v2/yaml\"\n> > -   \"gopkg.in/yaml.v2\"\n> \n> @thockin https://github.com/thockin I seem to recall you wanting this\n> change in a few places but I can't recall why?\n> \n> ## \n> \n> Reply to this email directly or view it on GitHub\n> https://github.com/GoogleCloudPlatform/kubernetes/pull/3440/files#r22907289\n> .\n",
        "createdAt" : "2015-01-14T00:33:59Z",
        "updatedAt" : "2015-01-14T00:33:59Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "7845ab90f899d287159815b4d2234d480540733c",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +25,29 @@\t\"github.com/emicklei/go-restful/swagger\"\n\t\"github.com/golang/glog\"\n\t\"gopkg.in/yaml.v2\"\n)\n"
  },
  {
    "id" : "63f7debc-9c51-435b-8838-d477f6630bf8",
    "prId" : 2517,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "22b3fa1f-51c6-4ff2-a9ae-0920ea28912b",
        "parentId" : null,
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Godoc\n",
        "createdAt" : "2014-11-24T00:45:11Z",
        "updatedAt" : "2014-11-25T06:25:18Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "b119b83d-9b3b-45bd-a395-de93070c4534",
        "parentId" : "22b3fa1f-51c6-4ff2-a9ae-0920ea28912b",
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "done.\n",
        "createdAt" : "2014-11-25T06:18:19Z",
        "updatedAt" : "2014-11-25T06:25:18Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "acf6d828005aaefb11a65d7ba8e971137915aa86",
    "line" : null,
    "diffHunk" : "@@ -1,1 +42,46 @@\n// Schema is an interface that knows how to validate an API object serialized to a byte array.\ntype Schema interface {\n\tValidateBytes(data []byte) error\n}"
  },
  {
    "id" : "9823a608-ae8b-4f5b-8eee-f11b2d364ac0",
    "prId" : 2492,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f2d22f3a-dd6c-4da4-af49-aa25adf4b2a1",
        "parentId" : null,
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "Is this called from anywhere besides the test?\n",
        "createdAt" : "2014-11-21T01:32:25Z",
        "updatedAt" : "2014-11-21T06:16:58Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "de13cdc6-3b35-42ec-974c-898d5c044f21",
        "parentId" : "f2d22f3a-dd6c-4da4-af49-aa25adf4b2a1",
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "Not right now, but it will be called from kubecfg/kubectl.\n",
        "createdAt" : "2014-11-21T04:41:43Z",
        "updatedAt" : "2014-11-21T06:16:58Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "6c53d3b4621631700efd18b0ca1805621391fa08",
    "line" : 56,
    "diffHunk" : "@@ -1,1 +54,58 @@}\n\nfunc (s *Schema) ValidateBytes(data []byte) error {\n\tvar obj interface{}\n\terr := json.Unmarshal(data, &obj)"
  }
]