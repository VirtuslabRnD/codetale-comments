[
  {
    "id" : "9ae44806-742c-40d6-a8dc-b9261dd7971c",
    "prId" : 50757,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/50757#pullrequestreview-58848690",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ff69db91-a8b2-47d4-827e-70e22397c8da",
        "parentId" : null,
        "authorId" : "7116d1ae-39f7-4e5d-81a9-1bcb75ebd909",
        "body" : "Can u reuse `getLocalStorageResourceList` in validation_test.go and admission_test.go ?",
        "createdAt" : "2017-08-28T02:17:30Z",
        "updatedAt" : "2017-08-29T12:55:54Z",
        "lastEditedBy" : "7116d1ae-39f7-4e5d-81a9-1bcb75ebd909",
        "tags" : [
        ]
      },
      {
        "id" : "81352e7e-015b-44eb-a278-f9b4b6b227c8",
        "parentId" : "ff69db91-a8b2-47d4-827e-70e22397c8da",
        "authorId" : "cf088828-7f69-4b6e-8956-1842c94daa02",
        "body" : "I wrote them in two files just like `getStorageResourceList`, and was not sure whether we need to put them into a utility package.",
        "createdAt" : "2017-08-28T03:53:18Z",
        "updatedAt" : "2017-08-29T12:55:54Z",
        "lastEditedBy" : "cf088828-7f69-4b6e-8956-1842c94daa02",
        "tags" : [
        ]
      }
    ],
    "commit" : "370e0becb27fdecd79f962a2c3001e5029fb9c7c",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +8610,8614 @@}\n\nfunc getLocalStorageResourceList(ephemeralStorage string) api.ResourceList {\n\tres := api.ResourceList{}\n\tif ephemeralStorage != \"\" {"
  },
  {
    "id" : "3ecf4244-9da2-45b2-a57b-d61894e87c15",
    "prId" : 47336,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/47336#pullrequestreview-47553427",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "432bf8cb-7412-4698-b28a-6b3c55e56d4a",
        "parentId" : null,
        "authorId" : "59098d78-f4f5-4a00-90c5-b35bc66e6750",
        "body" : "Should you have a test case with port==0 to cover that case?",
        "createdAt" : "2017-06-30T14:58:43Z",
        "updatedAt" : "2017-08-01T07:03:25Z",
        "lastEditedBy" : "59098d78-f4f5-4a00-90c5-b35bc66e6750",
        "tags" : [
        ]
      },
      {
        "id" : "ad655e26-1802-4f6e-a614-5771a5a2789b",
        "parentId" : "432bf8cb-7412-4698-b28a-6b3c55e56d4a",
        "authorId" : "a09f2d48-fec0-4c0d-bd81-6de7378a6ebf",
        "body" : "will remove the port==0 case as per @mengqiy comment.",
        "createdAt" : "2017-07-02T15:59:32Z",
        "updatedAt" : "2017-08-01T07:03:25Z",
        "lastEditedBy" : "a09f2d48-fec0-4c0d-bd81-6de7378a6ebf",
        "tags" : [
        ]
      }
    ],
    "commit" : "3f28074c545eca1b14537b6e534126f30c3e89ec",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +6321,6325 @@\t\t\tnumErrs: 0,\n\t\t},\n\t\t{\n\t\t\tname: \"invalid duplicate targetports (number with same protocol)\",\n\t\t\ttweakSvc: func(s *api.Service) {"
  },
  {
    "id" : "2ede2d51-fec7-4cb7-98aa-40625e305180",
    "prId" : 46317,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/46317#pullrequestreview-56748127",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f83506ff-5967-432b-b02a-d6045d5a6d24",
        "parentId" : null,
        "authorId" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "body" : "OK I think that answers my question from this morning.",
        "createdAt" : "2017-08-16T20:06:56Z",
        "updatedAt" : "2017-08-16T23:38:44Z",
        "lastEditedBy" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "tags" : [
        ]
      }
    ],
    "commit" : "dbc22ad6fda0f6779523549ae5fd9f27481c8305",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +33,37 @@\t\"k8s.io/kubernetes/pkg/api\"\n\t\"k8s.io/kubernetes/pkg/api/helper\"\n\t_ \"k8s.io/kubernetes/pkg/api/testapi\"\n\t\"k8s.io/kubernetes/pkg/capabilities\"\n\t\"k8s.io/kubernetes/pkg/security/apparmor\""
  },
  {
    "id" : "b0c56f36-8c4a-4878-a03b-61cab50044fd",
    "prId" : 36251,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/36251#pullrequestreview-8860319",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2e9a2304-e9b0-4d18-a3a6-3b671764b415",
        "parentId" : null,
        "authorId" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "body" : "Please add a test that updates another (=allowed) annotation - such update should be valid.\n",
        "createdAt" : "2016-11-16T13:01:05Z",
        "updatedAt" : "2016-11-29T21:45:30Z",
        "lastEditedBy" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "tags" : [
        ]
      },
      {
        "id" : "3526b8eb-e6e0-4515-adac-679c5ccdd129",
        "parentId" : "2e9a2304-e9b0-4d18-a3a6-3b671764b415",
        "authorId" : "e15ef128-90ac-4a14-8795-b5be15e790ce",
        "body" : "@jsafrane \n\nI updated the tests - added a valid change to annotation and a test to make sure an annotation could be added\n\n```\n+++ [1116 12:03:37] Running tests without code coverage\nok      k8s.io/kubernetes/pkg/api/validation    0.341s\n```\n",
        "createdAt" : "2016-11-16T17:08:13Z",
        "updatedAt" : "2016-11-29T21:45:30Z",
        "lastEditedBy" : "e15ef128-90ac-4a14-8795-b5be15e790ce",
        "tags" : [
        ]
      }
    ],
    "commit" : "a76854ca97f6e4211e227b97845eaa3efa580129",
    "line" : 117,
    "diffHunk" : "@@ -1,1 +960,964 @@\t\t\tnewClaim:          invalidUpdateClaimAccessModes,\n\t\t},\n\t\t\"invalid-update-change-storage-class-annotation-after-creation\": {\n\t\t\tisExpectedFailure: true,\n\t\t\toldClaim:          validClaimStorageClass,"
  },
  {
    "id" : "a63922c7-b2c8-4958-9001-d44eb193df87",
    "prId" : 30932,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/30932#pullrequestreview-4986227",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f6dd3e8a-fbb6-4693-bde6-20b9116b0e57",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "can you repeat this case in  TestValidateServiceUpdate\n",
        "createdAt" : "2016-10-20T00:20:20Z",
        "updatedAt" : "2016-12-14T19:51:43Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "023bf87c3888cf40683cc93b13ee7ca253293c40",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +5476,5480 @@\t\t},\n\t\t{\n\t\t\tname: \"invalid node port with clusterIP None\",\n\t\t\ttweakSvc: func(s *api.Service) {\n\t\t\t\ts.Spec.Type = api.ServiceTypeNodePort"
  },
  {
    "id" : "fa655171-8a3e-4e92-9ac3-e6c54ceea926",
    "prId" : 28936,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2cdcaaa6-6a04-4c52-9f81-70b46b314514",
        "parentId" : null,
        "authorId" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "body" : "nit: you removed the case for having a projection, but not a mode\n",
        "createdAt" : "2016-08-17T14:33:12Z",
        "updatedAt" : "2016-08-17T18:50:22Z",
        "lastEditedBy" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "tags" : [
        ]
      },
      {
        "id" : "de2d0910-800a-42c3-8182-0a4d9f99bccd",
        "parentId" : "2cdcaaa6-6a04-4c52-9f81-70b46b314514",
        "authorId" : "c06b2845-79d9-4151-8aa6-dc7c6eb52bbf",
        "body" : "No, added this and the case with projection now is with projection and mode. The diff is shown in a tricky way\n",
        "createdAt" : "2016-08-17T14:42:52Z",
        "updatedAt" : "2016-08-17T18:50:22Z",
        "lastEditedBy" : "c06b2845-79d9-4151-8aa6-dc7c6eb52bbf",
        "tags" : [
        ]
      }
    ],
    "commit" : "4e9a14a64f347f72ef282d2b6f675f30683be85b",
    "line" : 44,
    "diffHunk" : "@@ -1,1 +1155,1159 @@\t\t\t},\n\t\t},\n\t\t{\n\t\t\tname: \"valid Secret with projection and mode\",\n\t\t\tvol: api.Volume{"
  },
  {
    "id" : "9c7bac34-1768-4d98-8129-f6f5e43c6c89",
    "prId" : 28936,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8da8dc93-5b8a-4f4c-bce4-beeb26fe165f",
        "parentId" : null,
        "authorId" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "body" : "downward api\n",
        "createdAt" : "2016-08-17T14:35:30Z",
        "updatedAt" : "2016-08-17T18:50:22Z",
        "lastEditedBy" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "tags" : [
        ]
      },
      {
        "id" : "074a4591-0093-45ce-9f06-ff4683fbe847",
        "parentId" : "8da8dc93-5b8a-4f4c-bce4-beeb26fe165f",
        "authorId" : "c06b2845-79d9-4151-8aa6-dc7c6eb52bbf",
        "body" : "All test cases use downapi now.\n",
        "createdAt" : "2016-08-17T14:43:52Z",
        "updatedAt" : "2016-08-17T18:50:22Z",
        "lastEditedBy" : "c06b2845-79d9-4151-8aa6-dc7c6eb52bbf",
        "tags" : [
        ]
      },
      {
        "id" : "c8e791b3-c050-446f-bf6d-2a017a348061",
        "parentId" : "8da8dc93-5b8a-4f4c-bce4-beeb26fe165f",
        "authorId" : "c06b2845-79d9-4151-8aa6-dc7c6eb52bbf",
        "body" : "@pmorie should I keep it like this, then? It is used like this in all those tests IIRC (those tests were re-written)\n",
        "createdAt" : "2016-08-19T13:32:53Z",
        "updatedAt" : "2016-08-19T13:32:53Z",
        "lastEditedBy" : "c06b2845-79d9-4151-8aa6-dc7c6eb52bbf",
        "tags" : [
        ]
      }
    ],
    "commit" : "4e9a14a64f347f72ef282d2b6f675f30683be85b",
    "line" : 162,
    "diffHunk" : "@@ -1,1 +1651,1655 @@\t\t},\n\t\t{\n\t\t\tname: \"downapi valid defaultMode\",\n\t\t\tvol: api.Volume{\n\t\t\t\tName: \"downapi\","
  },
  {
    "id" : "73d602ae-f104-455e-b27c-db505e84017e",
    "prId" : 28690,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9ae1e0b1-cb08-4062-9599-02e130013b94",
        "parentId" : null,
        "authorId" : "727fc82d-d969-41a4-a614-7fefce94f9a6",
        "body" : "This test already effectively tests that only volumeName changes are allowed, since both PVCs are the same except that the 2nd one adds volumeName.\n",
        "createdAt" : "2016-07-08T16:23:42Z",
        "updatedAt" : "2016-07-11T15:51:26Z",
        "lastEditedBy" : "727fc82d-d969-41a4-a614-7fefce94f9a6",
        "tags" : [
        ]
      }
    ],
    "commit" : "3ddb8470b992ec3ff4b4c36818d7d6b5cff0aa6c",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +744,748 @@\t\t\tisExpectedFailure: false,\n\t\t\toldClaim:          validClaim,\n\t\t\tnewClaim:          validUpdateClaim,\n\t\t},\n\t\t\"valid-no-op-update\": {"
  },
  {
    "id" : "7ddf9ba3-1147-48e9-ab94-270d3e388e4f",
    "prId" : 27036,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cb13ab24-3a1d-43e8-956c-d04d2b740bba",
        "parentId" : null,
        "authorId" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "body" : "how about a test for the container annotation without a container name?\n",
        "createdAt" : "2016-06-13T22:27:15Z",
        "updatedAt" : "2016-06-14T12:58:41Z",
        "lastEditedBy" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "tags" : [
        ]
      },
      {
        "id" : "2bd5a149-729c-4828-b5eb-c803480cfc78",
        "parentId" : "cb13ab24-3a1d-43e8-956c-d04d2b740bba",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "fixed.\n",
        "createdAt" : "2016-06-14T06:00:21Z",
        "updatedAt" : "2016-06-14T12:58:41Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "3826d2598ccdda80a4559b32d450239ae3677cf3",
    "line" : 67,
    "diffHunk" : "@@ -1,1 +2768,2772 @@\t\t\t},\n\t\t},\n\t\t\"must be a valid pod seccomp profile\": {\n\t\t\tObjectMeta: api.ObjectMeta{\n\t\t\t\tName:      \"123\","
  },
  {
    "id" : "e863f692-de61-4826-8fba-09e13a023c3f",
    "prId" : 23317,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0c3e1fec-91fb-475d-8e86-92c2480c7c35",
        "parentId" : null,
        "authorId" : "8df86b94-1422-4b8e-9056-b18bfdecd2dd",
        "body" : "Wasn't sure if I should have removed this test so I added a couple of square brackets to force failing\n",
        "createdAt" : "2016-04-11T16:18:26Z",
        "updatedAt" : "2016-04-14T15:20:38Z",
        "lastEditedBy" : "8df86b94-1422-4b8e-9056-b18bfdecd2dd",
        "tags" : [
        ]
      }
    ],
    "commit" : "c1a360b1d57aee883d4c49e88f02109dcaffdd3d",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +4910,4914 @@\t\t\t\tSubsets: []api.EndpointSubset{\n\t\t\t\t\t{\n\t\t\t\t\t\tAddresses: []api.EndpointAddress{{IP: \"[2001:0db8:85a3:0042:1000:8a2e:0370:7334]\"}},\n\t\t\t\t\t\tPorts:     []api.EndpointPort{{Name: \"a\", Port: 93, Protocol: \"TCP\"}},\n\t\t\t\t\t},"
  },
  {
    "id" : "6d131d22-3443-45ed-9a9c-ea84a8b60a8e",
    "prId" : 22985,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0a0d9676-f27c-4fb9-ab91-3534798492f4",
        "parentId" : null,
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "I really do believe we are headed into a difficult to maintain + validate space with a json encoded DSL  vs. some higher order config based language that we could parse.  \n\nFrom a user/administrator perspective. \n/cc @davidopp @quinton-hoole \n",
        "createdAt" : "2016-03-18T18:04:04Z",
        "updatedAt" : "2016-05-06T07:34:41Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      },
      {
        "id" : "dbb04bf0-3c46-46d9-a7b6-23e2ca6f4015",
        "parentId" : "0a0d9676-f27c-4fb9-ab91-3534798492f4",
        "authorId" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "body" : "Just to be clear, affinity being expressed as an annotation is only temporary. It will become a field of PodSpec once we are comfortable with the feature and can move it out of alpha (presumably no later than the 1.4 release). It's certainly true that making it an annotation, even temporarily, is not ideal, but because Pod is already v1, the only way to do an alpha version of affinity is to make it a completely new API resource, or do what we did here (make it an annotation). Making it a completely new API resource has a lot of drawbacks and few benefits.\n\nAs for the format of the struct itself (ignoring annotation vs. field) -- I don't think it qualifies as a DSL. The \"hard\" requirements are really just LabelSelectors (which have been in the system for some time now) paired with the name of a label key (\"TopologyKey\"), and the \"soft\" requirements are just \"hard\" requirements plus a weight. And the hard requirements can only be combined by simple AND (i.e. listing more than one rule implies AND). So it's actually not very expressive IMO.\n",
        "createdAt" : "2016-03-18T18:28:27Z",
        "updatedAt" : "2016-05-06T07:34:41Z",
        "lastEditedBy" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "tags" : [
        ]
      },
      {
        "id" : "7a3f90fe-eb6b-499d-99f1-4157cad7ca0a",
        "parentId" : "0a0d9676-f27c-4fb9-ab91-3534798492f4",
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "I agree it's not very expressive, but I do believe it will be difficult for admins to craft sane constraints, which may be difficult to debug.  I'm trying to wear my admin + user hat before this gets into the wild. \n",
        "createdAt" : "2016-03-18T18:47:05Z",
        "updatedAt" : "2016-05-06T07:34:41Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      }
    ],
    "commit" : "82ba4f077e01bf5be20cfd9cbe74949f8eea611d",
    "line" : null,
    "diffHunk" : "@@ -1,1 +2029,2033 @@\t\t\t\t\tapi.AffinityAnnotationKey: `\n\t\t\t\t\t{\"podAffinity\": {\n\t\t\t\t\t\t\"requiredDuringSchedulingIgnoredDuringExecution\": [{\n\t\t\t\t\t\t\t\"labelSelector\": {\n\t\t\t\t\t\t\t\t\"matchExpressions\": [{"
  },
  {
    "id" : "912ffefb-c384-40ec-8e1d-94e026af9f7f",
    "prId" : 22985,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cbf50248-efb2-4448-892a-85615865e6df",
        "parentId" : null,
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "Please break out these tests separately as their own test case, otherwise we are conflating the unit test cases.   \n",
        "createdAt" : "2016-03-18T18:15:28Z",
        "updatedAt" : "2016-05-06T07:34:41Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      }
    ],
    "commit" : "82ba4f077e01bf5be20cfd9cbe74949f8eea611d",
    "line" : null,
    "diffHunk" : "@@ -1,1 +2009,2013 @@\t\t\t},\n\t\t},\n\t\t{ // Serialized pod affinity in affinity requirements in annotations.\n\t\t\tObjectMeta: api.ObjectMeta{\n\t\t\t\tName:      \"123\","
  },
  {
    "id" : "508d7d3a-beba-42ae-8bfa-a95ec2debf6d",
    "prId" : 20699,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1a16e3ff-c71d-48b4-b405-56023d3d251c",
        "parentId" : null,
        "authorId" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "body" : "where did namespace come from? I don't see that in OwnerReference.\nAlso, once #25567 merges, you should add controller field (it's a bool)\n",
        "createdAt" : "2016-05-28T22:56:15Z",
        "updatedAt" : "2016-07-13T09:13:25Z",
        "lastEditedBy" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "tags" : [
        ]
      }
    ],
    "commit" : "4e91166bc62f2b346eaf394345503caeb62a1fc0",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +4385,4389 @@\t\t\t\t\t\t\t        {\n\t\t\t\t\t\t\t            \"podSignature\": {\n\t\t\t\t\t\t\t                \"podController\": {\n\t\t\t\t\t\t\t                    \"apiVersion\": \"v1\",\n\t\t\t\t\t\t\t                    \"kind\": \"ReplicationController\","
  },
  {
    "id" : "f4762c1e-b2a3-40c4-addd-96f660c6b03a",
    "prId" : 20699,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "874eb957-f5b5-43dc-b487-db392e31fa0a",
        "parentId" : null,
        "authorId" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "body" : "see previous comment\n",
        "createdAt" : "2016-05-28T22:57:00Z",
        "updatedAt" : "2016-07-13T09:13:25Z",
        "lastEditedBy" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "tags" : [
        ]
      }
    ],
    "commit" : "4e91166bc62f2b346eaf394345503caeb62a1fc0",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +4878,4882 @@\t\t\t\t\t\t\t        {\n\t\t\t\t\t\t\t            \"podSignature\": {\n\t\t\t\t\t\t\t                \"podController\": {\n\t\t\t\t\t\t\t                    \"apiVersion\": \"v1\",\n\t\t\t\t\t\t\t                    \"kind\": \"ReplicationController\","
  },
  {
    "id" : "e3835128-f030-413a-9045-49eb5c5a1890",
    "prId" : 18694,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2d3c1071-8a13-4e84-a088-89d399214b04",
        "parentId" : null,
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "The multiple colons in a single sentence still makes me frown. Is this following some tradition?\n",
        "createdAt" : "2015-12-16T07:42:18Z",
        "updatedAt" : "2015-12-18T17:43:40Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      },
      {
        "id" : "9b55de83-81b4-48e5-83ec-eb30936c32cc",
        "parentId" : "2d3c1071-8a13-4e84-a088-89d399214b04",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "It's pretty go-style - add details: at the front.\n\nOn Tue, Dec 15, 2015 at 11:42 PM, Chao Xu notifications@github.com wrote:\n\n> In pkg/api/validation/validation_test.go\n> https://github.com/kubernetes/kubernetes/pull/18694#discussion_r47744682\n> :\n> \n> > @@ -919,7 +919,7 @@ func TestValidateEnv(t *testing.T) {\n> >                     },\n> >                 },\n> >             }},\n> > -           expectedError: \"valueFrom.fieldRef.fieldPath: unsupported value 'status.phase', Details: supported values: metadata.name, metadata.namespace, status.podIP\",\n> > -           expectedError: `valueFrom.fieldRef.fieldPath: Unsupported value: \"status.phase\": supported values: metadata.name, metadata.namespace, status.podIP`,\n> \n> The multiple colons in a single sentence still makes me frown. Is this\n> following some tradition?\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/kubernetes/kubernetes/pull/18694/files#r47744682.\n",
        "createdAt" : "2015-12-16T08:03:14Z",
        "updatedAt" : "2015-12-18T17:43:40Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "0fecf965b4844af057e5eabc6cb2e233dd64ab5c",
    "line" : 158,
    "diffHunk" : "@@ -1,1 +920,924 @@\t\t\t\t},\n\t\t\t}},\n\t\t\texpectedError: `valueFrom.fieldRef.fieldPath: Unsupported value: \"status.phase\": supported values: metadata.name, metadata.namespace, status.podIP`,\n\t\t},\n\t}"
  },
  {
    "id" : "b9dacff8-55f6-4ee9-8484-5a640354f9d0",
    "prId" : 13688,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "156cf82a-4f79-4ad9-a7c8-61a557b81650",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "nit: extra blank line\n",
        "createdAt" : "2015-09-09T21:13:05Z",
        "updatedAt" : "2015-09-09T21:13:05Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "ea919f6d1e716a350d8db9530193574a05370aa6",
    "line" : 294,
    "diffHunk" : "@@ -1,1 +3044,3048 @@\t\t}\n\t}\n\n}\n"
  },
  {
    "id" : "7d58c5ac-d9ab-4354-888b-e703b442fd3d",
    "prId" : 12470,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9e49aa5f-ee93-43de-9674-20d92ec9790a",
        "parentId" : null,
        "authorId" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "body" : "Nit: there should probably be separate cases for hostNetwork and hostIPC\n",
        "createdAt" : "2015-09-18T19:49:47Z",
        "updatedAt" : "2015-09-18T19:49:47Z",
        "lastEditedBy" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "tags" : [
        ]
      }
    ],
    "commit" : "f21d9ac9e40830cc566252a7008fa760192380fd",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +1250,1254 @@\t\t\t},\n\t\t\tHostNetwork:   true,\n\t\t\tHostIPC:       true,\n\t\t\tRestartPolicy: api.RestartPolicyAlways,\n\t\t\tDNSPolicy:     api.DNSClusterFirst,"
  },
  {
    "id" : "78475384-754a-48be-bbdf-84e33947beb9",
    "prId" : 7486,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0525da34-2f7e-449f-8929-43a9e078aa76",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "good catch\n",
        "createdAt" : "2015-04-29T15:08:09Z",
        "updatedAt" : "2015-05-12T07:18:06Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "4bb594b34d0dac1341e1acb5de8fac00ea9473c7",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +1683,1687 @@\t\t\ttweakSvc: func(s *api.Service) {\n\t\t\t\ts.Spec.Ports[0].Name = \"p\"\n\t\t\t\ts.Spec.Ports = append(s.Spec.Ports, api.ServicePort{Name: \"p\", Port: 12345, Protocol: \"TCP\"})\n\t\t\t},\n\t\t\tnumErrs: 1,"
  },
  {
    "id" : "732e5d92-2310-4bf9-bf93-4d03fab743e8",
    "prId" : 7343,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8a3ab152-29e9-4cef-b9da-2c0f3f6a78d8",
        "parentId" : null,
        "authorId" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "body" : "Style points for application of closures :clap: \n",
        "createdAt" : "2015-04-30T21:45:00Z",
        "updatedAt" : "2015-05-05T17:53:02Z",
        "lastEditedBy" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "tags" : [
        ]
      },
      {
        "id" : "ca7a1227-9a1a-4e95-912c-da368ce03ce2",
        "parentId" : "8a3ab152-29e9-4cef-b9da-2c0f3f6a78d8",
        "authorId" : "fb0525d4-54d0-4bfa-8b41-17f8b31b43fd",
        "body" : ":sunglasses: \n",
        "createdAt" : "2015-04-30T21:48:48Z",
        "updatedAt" : "2015-05-05T17:53:02Z",
        "lastEditedBy" : "fb0525d4-54d0-4bfa-8b41-17f8b31b43fd",
        "tags" : [
        ]
      }
    ],
    "commit" : "5e5b904e8c462b2ccf0660a6f0fa7c4d45cd4252",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +3185,3189 @@\tpriv := false\n\tvar runAsUser int64 = 1\n\tfullValidSC := func() *api.SecurityContext {\n\t\treturn &api.SecurityContext{\n\t\t\tPrivileged: &priv,"
  },
  {
    "id" : "5d2730d4-e830-4dc8-a76b-c0bfad4506ad",
    "prId" : 6182,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "528969b7-c2b9-48a5-a7d3-4dc06301b971",
        "parentId" : null,
        "authorId" : "aa0ae875-2718-4d41-836b-db4cfbf596c8",
        "body" : "Hi Tim, I have a issue #5907 related to this part. `newSvc.Spec.PortalIP = \"\"` usually happens when portalIP is not given in the template. Since when creating a service not giving a portalIP means allow kubernetes automatically allocate one, I think we should keep this semantic while updating. That is use the system allocated one. For removing portalIP, if allowed later, we can use something like `portalIP: None` explicitly in the template. What do you think? \n",
        "createdAt" : "2015-04-01T06:45:45Z",
        "updatedAt" : "2015-04-01T07:13:29Z",
        "lastEditedBy" : "aa0ae875-2718-4d41-836b-db4cfbf596c8",
        "tags" : [
        ]
      }
    ],
    "commit" : "e19f4939b1293b8b565a1087dcbb71c1ef46fe47",
    "line" : 480,
    "diffHunk" : "@@ -1,1 +2231,2235 @@\t\t\ttweakSvc: func(oldSvc, newSvc *api.Service) {\n\t\t\t\toldSvc.Spec.PortalIP = \"1.2.3.4\"\n\t\t\t\tnewSvc.Spec.PortalIP = \"\"\n\t\t\t},\n\t\t\tnumErrs: 1,"
  },
  {
    "id" : "82993c07-4d56-44a3-a694-a83e7e4b1502",
    "prId" : 5609,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e3dfa94a-ab54-4874-b960-2acfbe6c5b3e",
        "parentId" : null,
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "All other _failure_ cases here need to have at least one container. Otherwise, they aren't actually catching the failure that they expect. Sometimes it's helpful to check the length of the errors, but that also doesn't cover all the cases here.\n",
        "createdAt" : "2015-03-18T23:29:32Z",
        "updatedAt" : "2015-03-19T11:34:30Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "f1e66f6e-0d0e-4279-b0fd-af8a4e548242",
        "parentId" : "e3dfa94a-ab54-4874-b960-2acfbe6c5b3e",
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "This applies to failure cases in other tests too, which is annoying and tedious to fix :( \n",
        "createdAt" : "2015-03-18T23:30:27Z",
        "updatedAt" : "2015-03-19T11:34:30Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "56feabdb-eb8b-415d-aae1-d5537fe93370",
        "parentId" : "e3dfa94a-ab54-4874-b960-2acfbe6c5b3e",
        "authorId" : "df06b0d6-fd6c-44d1-8008-efeaccd16cd5",
        "body" : "Done.\n",
        "createdAt" : "2015-03-19T09:56:46Z",
        "updatedAt" : "2015-03-19T11:34:30Z",
        "lastEditedBy" : "df06b0d6-fd6c-44d1-8008-efeaccd16cd5",
        "tags" : [
        ]
      }
    ],
    "commit" : "f89f91b7bd364afdf2992dfd507882c94ddb5a57",
    "line" : 2,
    "diffHunk" : "@@ -1,1 +722,726 @@\t\t\"bad volume\": {\n\t\t\tVolumes:       []api.Volume{{}},\n\t\t\tRestartPolicy: api.RestartPolicyAlways,\n\t\t\tDNSPolicy:     api.DNSClusterFirst,\n\t\t\tContainers:    []api.Container{{Name: \"ctr\", Image: \"image\", ImagePullPolicy: \"IfNotPresent\"}},"
  },
  {
    "id" : "5ecab73a-94b0-41e5-bce0-1786dcc62263",
    "prId" : 5506,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "610483d2-5562-4efe-9cad-20cdbde4afe2",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "You should have a test that covers your new function, feeding it invalid values to ensure it fails validation.  That the other volumes don't have tests is an error.\n",
        "createdAt" : "2015-03-16T20:09:47Z",
        "updatedAt" : "2015-04-06T20:20:31Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "e31777b4-aa8b-471b-8a6d-4138f2782cbb",
        "parentId" : "610483d2-5562-4efe-9cad-20cdbde4afe2",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "This does not seem to be addressed\n",
        "createdAt" : "2015-03-27T06:11:19Z",
        "updatedAt" : "2015-04-06T20:20:31Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "29f5ffdf-351f-43fe-a7c1-8dc775aab642",
        "parentId" : "610483d2-5562-4efe-9cad-20cdbde4afe2",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "Still open\n",
        "createdAt" : "2015-04-01T04:39:50Z",
        "updatedAt" : "2015-04-06T20:20:31Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "8f1dc931-5450-42c2-83b6-7b83e591153e",
        "parentId" : "610483d2-5562-4efe-9cad-20cdbde4afe2",
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "@rootfs: Can you add a test?\n",
        "createdAt" : "2015-04-02T22:53:43Z",
        "updatedAt" : "2015-04-06T20:20:31Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      },
      {
        "id" : "f4f0c0ba-1ada-4a52-be2d-a7741583affe",
        "parentId" : "610483d2-5562-4efe-9cad-20cdbde4afe2",
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "Ping\n",
        "createdAt" : "2015-04-06T18:42:58Z",
        "updatedAt" : "2015-04-06T20:20:31Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      },
      {
        "id" : "2f55433f-1f85-4543-8c62-32ca792340af",
        "parentId" : "610483d2-5562-4efe-9cad-20cdbde4afe2",
        "authorId" : "a7f673a6-4b23-4df6-aa10-f123fa9dcd5f",
        "body" : "pong, fixed\n",
        "createdAt" : "2015-04-06T18:50:42Z",
        "updatedAt" : "2015-04-06T20:20:31Z",
        "lastEditedBy" : "a7f673a6-4b23-4df6-aa10-f123fa9dcd5f",
        "tags" : [
        ]
      }
    ],
    "commit" : "7a82af31de839f70b3e50e71cb52a587e0091b82",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +525,529 @@\t\tt.Errorf(\"expected success: %v\", errs)\n\t}\n\tif len(names) != len(successCase) || !names.HasAll(\"abc\", \"123\", \"abc-123\", \"empty\", \"gcepd\", \"gitrepo\", \"secret\", \"iscsidisk\") {\n\t\tt.Errorf(\"wrong names result: %v\", names)\n\t}"
  },
  {
    "id" : "71c8c80e-9049-474d-acca-fb64a21ff203",
    "prId" : 4898,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0ff2d975-f501-4073-a19b-0a95a9eeb62d",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "What about a test case for total value size?\n",
        "createdAt" : "2015-02-27T16:49:31Z",
        "updatedAt" : "2015-03-06T12:21:51Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "4ff11c06-6318-4c3d-909c-cf14f0f8c1a5",
        "parentId" : "0ff2d975-f501-4073-a19b-0a95a9eeb62d",
        "authorId" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "body" : "It's below, I'll rename the variable to make it more obvious.\n",
        "createdAt" : "2015-02-28T08:05:34Z",
        "updatedAt" : "2015-03-06T12:21:51Z",
        "lastEditedBy" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "tags" : [
        ]
      }
    ],
    "commit" : "26b7fbeedfb2602475f98451bd4ace9381bf0db7",
    "line" : null,
    "diffHunk" : "@@ -1,1 +157,161 @@\t\t{strings.Repeat(\"a\", 254): \"bar\"},\n\t}\n\tfor i := range nameErrorCases {\n\t\terrs := ValidateAnnotations(nameErrorCases[i], \"field\")\n\t\tif len(errs) != 1 {"
  },
  {
    "id" : "783e4541-aea0-4c02-8096-ca817903e787",
    "prId" : 1147,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "da968ed1-4d43-49bc-80ef-eacb02fdb3e3",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "Weird line wrapping?  don't try to pakc it.\n",
        "createdAt" : "2014-09-06T05:01:08Z",
        "updatedAt" : "2014-09-09T05:41:50Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "15cab4d0531b5e2e75c3addb0b5e41fb14e44af8",
    "line" : 66,
    "diffHunk" : "@@ -1,1 +355,359 @@\t\t\t\tVersion: \"v1beta1\",\n\t\t\t\tID:      \"abc\",\n\t\t\t\tRestartPolicy: api.RestartPolicy{Always: &api.RestartPolicyAlways{},\n\t\t\t\t\tNever: &api.RestartPolicyNever{}},\n\t\t\t},"
  }
]