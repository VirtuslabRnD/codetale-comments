[
  {
    "id" : "b171a477-25a3-4388-b29a-df21ff613e41",
    "prId" : 2781,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bc4ea365-4359-4a3d-90c3-0d89f457190d",
        "parentId" : null,
        "authorId" : "27deb932-ef03-4f78-88da-2c9e62e10242",
        "body" : "ValidationErrorList only serves as documentation. This was true in this commit and also beforehand. It may be a candidate for removal.  \n",
        "createdAt" : "2014-12-09T02:17:05Z",
        "updatedAt" : "2014-12-12T18:57:48Z",
        "lastEditedBy" : "27deb932-ef03-4f78-88da-2c9e62e10242",
        "tags" : [
        ]
      }
    ],
    "commit" : "5e1fc1f4e0a0490501232cdf4f7602a00ea92486",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +121,125 @@}\n\ntype ValidationErrorList []error\n\n// Prefix adds a prefix to the Field of every ValidationError in the list."
  },
  {
    "id" : "d46982cd-6cad-42a5-9993-4bd3d7029acc",
    "prId" : 1986,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1ea3f9ed-a055-4a49-96e1-1ce8e9edc9f0",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "wait so now external uses of this will be validation.ValidationErrorList? Sounds very redundant to me?\n",
        "createdAt" : "2014-10-24T17:25:33Z",
        "updatedAt" : "2014-10-24T17:25:33Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "f55426d0-472d-45d5-9a25-918ae54c616a",
        "parentId" : "1ea3f9ed-a055-4a49-96e1-1ce8e9edc9f0",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "errors.ValidationErrorList\n\nOn Fri, Oct 24, 2014 at 10:25 AM, Daniel Smith notifications@github.com\nwrote:\n\n> In pkg/api/errors/validation.go:\n> \n> > @@ -113,20 +113,22 @@ func NewFieldNotFound(field string, value interface{}) ValidationError {\n> >     return ValidationError{ValidationErrorTypeNotFound, field, value}\n> >  }\n> > \n> > -// ErrorList is a collection of errors.  This does not implement the error\n> > -// interface to avoid confusion where an empty ErrorList would still be an\n> > -// error (non-nil).  To produce a single error instance from an ErrorList, use\n> > -// the ToError() method, which will return nil for an empty ErrorList.\n> > \n> > ## -type ErrorList util.ErrorList\n> > \n> > -// ToError converts an ErrorList into a \"normal\" error, or nil if the list is empty.\n> > -func (list ErrorList) ToError() error {\n> > +// ValidationErrorList is a collection of ValidationErrors.  This does not\n> > +// implement the error interface to avoid confusion where an empty\n> > +// ValidationErrorList would still be an error (non-nil).  To produce a single\n> > +// error instance from a ValidationErrorList, use the ToError() method, which\n> > +// will return nil for an empty ValidationErrorList.\n> > +type ValidationErrorList util.ErrorList\n> \n> wait so now external uses of this will be validation.ValidationErrorList?\n> Sounds very redundant to me?\n> \n> ## \n> \n> Reply to this email directly or view it on GitHub\n> https://github.com/GoogleCloudPlatform/kubernetes/pull/1986/files#r19351898\n> .\n",
        "createdAt" : "2014-10-24T17:30:41Z",
        "updatedAt" : "2014-10-24T17:30:41Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "ee2705b6-f9c9-4c46-abb6-4c34f07b91fc",
        "parentId" : "1ea3f9ed-a055-4a49-96e1-1ce8e9edc9f0",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "We could say \"ValidationErrors\" instead, but mostly we say FooList when we\nmean a slice of Foo.  We could change it to InputErrorList or something\nshorter\n\nOn Fri, Oct 24, 2014 at 10:30 AM, Tim Hockin thockin@google.com wrote:\n\n> errors.ValidationErrorList\n> \n> On Fri, Oct 24, 2014 at 10:25 AM, Daniel Smith notifications@github.com\n> wrote:\n> \n> > In pkg/api/errors/validation.go:\n> > \n> > > @@ -113,20 +113,22 @@ func NewFieldNotFound(field string, value interface{}) ValidationError {\n> > >    return ValidationError{ValidationErrorTypeNotFound, field, value}\n> > >  }\n> > > \n> > > -// ErrorList is a collection of errors.  This does not implement the error\n> > > -// interface to avoid confusion where an empty ErrorList would still be an\n> > > -// error (non-nil).  To produce a single error instance from an ErrorList, use\n> > > -// the ToError() method, which will return nil for an empty ErrorList.\n> > > \n> > > ## -type ErrorList util.ErrorList\n> > > \n> > > -// ToError converts an ErrorList into a \"normal\" error, or nil if the list is empty.\n> > > -func (list ErrorList) ToError() error {\n> > > +// ValidationErrorList is a collection of ValidationErrors.  This does not\n> > > +// implement the error interface to avoid confusion where an empty\n> > > +// ValidationErrorList would still be an error (non-nil).  To produce a single\n> > > +// error instance from a ValidationErrorList, use the ToError() method, which\n> > > +// will return nil for an empty ValidationErrorList.\n> > > +type ValidationErrorList util.ErrorList\n> > \n> > wait so now external uses of this will be validation.ValidationErrorList?\n> > Sounds very redundant to me?\n> > \n> > ## \n> > \n> > Reply to this email directly or view it on GitHub\n> > https://github.com/GoogleCloudPlatform/kubernetes/pull/1986/files#r19351898\n> > .\n",
        "createdAt" : "2014-10-24T17:31:46Z",
        "updatedAt" : "2014-10-24T17:31:46Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "b92be0f6-0c3e-4d12-bad9-a6a7f43f73e5",
        "parentId" : "1ea3f9ed-a055-4a49-96e1-1ce8e9edc9f0",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Oh, I see, it's not in the validation package. This makes me question our factoring. It's very weird that the validation package has to use a ValidationErrorList from the error package. Not worth fixing at the moment.\n",
        "createdAt" : "2014-10-24T17:39:36Z",
        "updatedAt" : "2014-10-24T17:39:36Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "2626cbf5-7d4a-471d-8b47-2cf5482ef1e4",
        "parentId" : "1ea3f9ed-a055-4a49-96e1-1ce8e9edc9f0",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "The factoring could use some attention, to be sure.\n\nOn Fri, Oct 24, 2014 at 10:39 AM, Daniel Smith notifications@github.com\nwrote:\n\n> In pkg/api/errors/validation.go:\n> \n> > @@ -113,20 +113,22 @@ func NewFieldNotFound(field string, value interface{}) ValidationError {\n> >     return ValidationError{ValidationErrorTypeNotFound, field, value}\n> >  }\n> > \n> > -// ErrorList is a collection of errors.  This does not implement the error\n> > -// interface to avoid confusion where an empty ErrorList would still be an\n> > -// error (non-nil).  To produce a single error instance from an ErrorList, use\n> > -// the ToError() method, which will return nil for an empty ErrorList.\n> > \n> > ## -type ErrorList util.ErrorList\n> > \n> > -// ToError converts an ErrorList into a \"normal\" error, or nil if the list is empty.\n> > -func (list ErrorList) ToError() error {\n> > +// ValidationErrorList is a collection of ValidationErrors.  This does not\n> > +// implement the error interface to avoid confusion where an empty\n> > +// ValidationErrorList would still be an error (non-nil).  To produce a single\n> > +// error instance from a ValidationErrorList, use the ToError() method, which\n> > +// will return nil for an empty ValidationErrorList.\n> > +type ValidationErrorList util.ErrorList\n> \n> Oh, I see, it's not in the validation package. This makes me question our\n> factoring. It's very weird that the validation package has to use a\n> ValidationErrorList from the error package. Not worth fixing at the moment.\n> \n> ## \n> \n> Reply to this email directly or view it on GitHub\n> https://github.com/GoogleCloudPlatform/kubernetes/pull/1986/files#r19352691\n> .\n",
        "createdAt" : "2014-10-24T17:43:44Z",
        "updatedAt" : "2014-10-24T17:43:44Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "d6effe3c6d2bbdd1d7738f84bd42880b64da32b2",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +119,123 @@// error instance from a ValidationErrorList, use the ToError() method, which\n// will return nil for an empty ValidationErrorList.\ntype ValidationErrorList util.ErrorList\n\n// ToError converts a ValidationErrorList into a \"normal\" error, or nil if the"
  },
  {
    "id" : "d0b7bb24-e918-449c-9c24-d1707416c892",
    "prId" : 1791,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fef1e53e-f30d-4b39-9249-fe740c1b45e7",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Isn't it the value that's forbidden, not the field?\n",
        "createdAt" : "2014-10-14T23:25:03Z",
        "updatedAt" : "2014-10-14T23:25:03Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "de0b84ba-93c4-47be-8faf-62fe6b49b7a4",
        "parentId" : "fef1e53e-f30d-4b39-9249-fe740c1b45e7",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Technically all field errors are value errors, until we add authorization and we have to decide whether to elide them or merge them with the existing values.\n",
        "createdAt" : "2014-10-14T23:30:26Z",
        "updatedAt" : "2014-10-14T23:30:26Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "bb5a17488f94e530c484f692e8436a7b5af059b0",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +100,104 @@\n// NewFieldForbidden returns a ValidationError indicating \"forbidden\"\nfunc NewFieldForbidden(field string, value interface{}) ValidationError {\n\treturn ValidationError{ValidationErrorTypeForbidden, field, value}\n}"
  }
]