[
  {
    "id" : "7263f8f0-245d-4f84-87d6-e7120a7b4e31",
    "prId" : 7343,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e44c749a-d052-4ed0-833d-7384ecc4d150",
        "parentId" : null,
        "authorId" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "body" : "A lot of this diff is functions being relocated within the file without actual changes -- did the generator change and begin putting them in a different place?  I'd prefer to keep these functions (`convert_api_ReplicationController_To_v1beta3_ReplicationController` as an example) out of the diff if we can.\n\nThis is one of those things about code generation -- sometimes the generator changes and the whole file is a mess of diffs.  That said it looks like we can cut the diff back here to a great degree.\n",
        "createdAt" : "2015-05-04T21:20:33Z",
        "updatedAt" : "2015-05-05T17:53:02Z",
        "lastEditedBy" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "tags" : [
        ]
      },
      {
        "id" : "51741c1a-d10b-4387-a3ba-e38339dbab24",
        "parentId" : "e44c749a-d052-4ed0-833d-7384ecc4d150",
        "authorId" : "fb0525d4-54d0-4bfa-8b41-17f8b31b43fd",
        "body" : "This was due to the change of removing a field from the internal api while retaining it in the v1beta\\* versions on the Container struct.  The conversion generator would not generate anything that had a field mismatch along with anything that contained the Container struct.  So yes, most of these are straight copies (retaining the naming convention as well).  The only actual meat in this file is the change to the container conversions.  The rest was a byproduct of the conversion utility no longer generating functions.\n\nImportant to note though, is that the functions must be moved.  The unit test for the auto generator uses the comments in the file to determine what to check to ensure that auto generated functions are not manually changed.  That is also why there is now the second call to Register the moved functions rather than leaving them in the RegisterAutoGenerated call.\n",
        "createdAt" : "2015-05-04T23:45:08Z",
        "updatedAt" : "2015-05-05T17:53:02Z",
        "lastEditedBy" : "fb0525d4-54d0-4bfa-8b41-17f8b31b43fd",
        "tags" : [
        ]
      },
      {
        "id" : "04d2cf6f-3f21-46f8-a262-fe1b5dfa6d6d",
        "parentId" : "e44c749a-d052-4ed0-833d-7384ecc4d150",
        "authorId" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "body" : "Ok, got it.\n",
        "createdAt" : "2015-05-05T15:21:57Z",
        "updatedAt" : "2015-05-05T17:53:02Z",
        "lastEditedBy" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "tags" : [
        ]
      }
    ],
    "commit" : "5e5b904e8c462b2ccf0660a6f0fa7c4d45cd4252",
    "line" : 703,
    "diffHunk" : "@@ -1,1 +2747,2751 @@\t}\n}\n\nfunc convert_v1beta3_Pod_To_api_Pod(in *Pod, out *newer.Pod, s conversion.Scope) error {\n\tif err := s.Convert(&in.TypeMeta, &out.TypeMeta, 0); err != nil {"
  },
  {
    "id" : "77866621-4594-42ad-a1fb-78a34ccf3bf6",
    "prId" : 7343,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "697b37ad-b7d7-4750-8687-5a4bdad2d2fc",
        "parentId" : null,
        "authorId" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "body" : "TL;DR this if statement and subsequent `Convert` call consitute 50% of the real content of this diff.\n",
        "createdAt" : "2015-05-04T21:22:01Z",
        "updatedAt" : "2015-05-05T17:53:02Z",
        "lastEditedBy" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "tags" : [
        ]
      }
    ],
    "commit" : "5e5b904e8c462b2ccf0660a6f0fa7c4d45cd4252",
    "line" : 1088,
    "diffHunk" : "@@ -1,1 +3132,3136 @@\tout.TerminationMessagePath = in.TerminationMessagePath\n\tout.ImagePullPolicy = newer.PullPolicy(in.ImagePullPolicy)\n\tif in.SecurityContext != nil {\n\t\tif in.SecurityContext.Capabilities != nil {\n\t\t\tif !reflect.DeepEqual(in.SecurityContext.Capabilities.Add, in.Capabilities.Add) ||"
  },
  {
    "id" : "22444bb9-edf7-4271-a735-22010c8ae320",
    "prId" : 7343,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "150a5d9e-a8ac-47e5-9c08-55672fa6d5ba",
        "parentId" : null,
        "authorId" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "body" : "The other actual change in this diff.\n",
        "createdAt" : "2015-05-04T21:22:23Z",
        "updatedAt" : "2015-05-05T17:53:02Z",
        "lastEditedBy" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "tags" : [
        ]
      }
    ],
    "commit" : "5e5b904e8c462b2ccf0660a6f0fa7c4d45cd4252",
    "line" : 1164,
    "diffHunk" : "@@ -1,1 +3208,3212 @@\t\treturn err\n\t}\n\t// now that we've converted set the container field from security context\n\tif out.SecurityContext != nil && out.SecurityContext.Privileged != nil {\n\t\tout.Privileged = *out.SecurityContext.Privileged"
  },
  {
    "id" : "25da025a-04d5-48b4-bbb3-f493f4ed6386",
    "prId" : 7107,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2c275b97-2cad-4579-a7c2-9cf75105d3c3",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "In a followup PR can you add a test that these haven't been manually edited? Thanks :)\n",
        "createdAt" : "2015-04-25T00:07:37Z",
        "updatedAt" : "2015-04-25T00:07:37Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "7f919a44c234c806582a5997c6b880075e90d52a",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +26,30 @@\nfunc init() {\n\terr := newer.Scheme.AddGeneratedConversionFuncs(\n\t\tfunc(in *EndpointSubset, out *newer.EndpointSubset, s conversion.Scope) error {\n\t\t\tif in.Addresses != nil {"
  },
  {
    "id" : "11e2ea12-2287-4710-8049-7c0fa0a2bb43",
    "prId" : 6739,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8eb890a0-eb2e-45a4-9d62-134d4121dea4",
        "parentId" : null,
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "I'm resigned to the fact that starting with this syntax is the most expedient thing to do. We can reevaluate later.\n\nIn the long run, we should strive to make all field references the same:\n- downward API substitution\n- client-side cross-object field references\n- kubectl -o template\n- field selectors\n- ObjectReference\n- field projection (only return a subset of object fields)\n",
        "createdAt" : "2015-04-23T01:28:38Z",
        "updatedAt" : "2015-04-27T18:42:58Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "465e7938-ca78-4be6-bc63-266a17729d58",
        "parentId" : "8eb890a0-eb2e-45a4-9d62-134d4121dea4",
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "Forget I said anything. :-) I'd like to get this in.\n",
        "createdAt" : "2015-04-23T18:12:16Z",
        "updatedAt" : "2015-04-27T18:42:58Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      }
    ],
    "commit" : "7d30f09ebfac6476eed12a040b3da2ca44882062",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +2733,2737 @@\t\t\tswitch label {\n\t\t\tcase \"metadata.name\",\n\t\t\t\t\"metadata.namespace\",\n\t\t\t\t\"status.phase\",\n\t\t\t\t\"spec.host\":"
  },
  {
    "id" : "23acabc7-fa6a-420f-9c4f-3128e95a52a1",
    "prId" : 6349,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cae0722a-65d5-4503-aa45-658761b779f7",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Reviewers: just name by itself is incorrect. The field labels should match the access you would do to get the field in the object. \"name\" in v1beta3 is stored in .metadata.name. This is an api error.\n",
        "createdAt" : "2015-04-03T18:57:47Z",
        "updatedAt" : "2015-04-03T18:57:47Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "6b089582649b4d0a34a838acc8ce1b8dece15a90",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +43,47 @@\t\tfunc(label, value string) (string, string, error) {\n\t\t\tswitch label {\n\t\t\tcase \"name\":\n\t\t\t\treturn label, value, nil\n\t\t\tdefault:"
  },
  {
    "id" : "ccf4d6d2-6c9d-4e9a-a834-cf0bcbf1c96b",
    "prId" : 4575,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "92c79c2d-4a03-42f0-845d-048acb417830",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Is this converter necessary in v1beta3?\n",
        "createdAt" : "2015-02-26T19:43:42Z",
        "updatedAt" : "2015-02-28T00:11:14Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "518bf2d9-8092-480e-ac64-3c4dda6e72fc",
        "parentId" : "92c79c2d-4a03-42f0-845d-048acb417830",
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "Yes. We need a conversion func from all external versions to internal versions.\n",
        "createdAt" : "2015-02-26T21:53:50Z",
        "updatedAt" : "2015-02-28T00:11:14Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      }
    ],
    "commit" : "48e7945f65999ee43d48947c6589cc02cdc91705",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +25,29 @@func init() {\n\t// Add field conversion funcs.\n\terr := newer.Scheme.AddFieldLabelConversionFunc(\"v1beta3\", \"pods\",\n\t\tfunc(label, value string) (string, string, error) {\n\t\t\tswitch label {"
  }
]