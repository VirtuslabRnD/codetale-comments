[
  {
    "id" : "29ef43eb-d80e-4b88-ae50-7638a0d056d5",
    "prId" : 103420,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/103420#pullrequestreview-701277894",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6e9a637e-da86-4649-b458-31707a526d22",
        "parentId" : null,
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "enabled will change in the t.Run (will be closed over).  I think you need to have:\r\n\r\n```\r\ngateEnabled := enabled\r\nt.Run(... func() {\r\n  defer featuregatetesting.....(gateEnabled)\r\n```\r\n\r\n(the value of enabled will be incorrect when tests are accumulated and then run in parallel)",
        "createdAt" : "2021-07-06T21:09:46Z",
        "updatedAt" : "2021-07-06T21:09:46Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "420cc492-64b7-4435-a42a-be579fe05c60",
        "parentId" : "6e9a637e-da86-4649-b458-31707a526d22",
        "authorId" : "31a2ac00-6c67-4307-a4bc-bfd13f41ef27",
        "body" : "This is copied from how `TestDropAppArmor` does it above, are those tests also wrong?",
        "createdAt" : "2021-07-06T21:16:34Z",
        "updatedAt" : "2021-07-06T21:16:34Z",
        "lastEditedBy" : "31a2ac00-6c67-4307-a4bc-bfd13f41ef27",
        "tags" : [
        ]
      },
      {
        "id" : "324ea5d7-0a2e-477f-9c81-39abe0144f4a",
        "parentId" : "6e9a637e-da86-4649-b458-31707a526d22",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "referencing things outside the closure is fine as long as the test doesn't set t.Parallel() (if it did that, t.Run wouldn't block, and @smarterclayton would be correct... variables outside the closure would change before the subtest completed running)",
        "createdAt" : "2021-07-07T15:06:33Z",
        "updatedAt" : "2021-07-07T15:07:03Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "e335a2f8-f585-4594-97de-53ea9f967421",
        "parentId" : "6e9a637e-da86-4649-b458-31707a526d22",
        "authorId" : "31a2ac00-6c67-4307-a4bc-bfd13f41ef27",
        "body" : "Nothing in this file appears to set `t.Parallel()`, so I think this should be okay?\r\n\r\nAnother example from above: https://github.com/kubernetes/kubernetes/blob/68dadd40d638c814d96977442751eaccd31d98c1/pkg/api/pod/util_test.go#L807-L817",
        "createdAt" : "2021-07-07T15:13:57Z",
        "updatedAt" : "2021-07-07T15:13:57Z",
        "lastEditedBy" : "31a2ac00-6c67-4307-a4bc-bfd13f41ef27",
        "tags" : [
        ]
      },
      {
        "id" : "f125dcc7-8319-4105-bba6-79f15323db20",
        "parentId" : "6e9a637e-da86-4649-b458-31707a526d22",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "I'm fine leaving the subtle bug in here if we expect the test to catch it (since it's unlikely we'll make these parallel in the near term).",
        "createdAt" : "2021-07-07T17:34:50Z",
        "updatedAt" : "2021-07-07T17:34:50Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "68dadd40d638c814d96977442751eaccd31d98c1",
    "line" : 141,
    "diffHunk" : "@@ -1,1 +1202,1206 @@\n\t\t\t\tt.Run(fmt.Sprintf(\"feature enabled=%v, old pod %v, new pod %v\", enabled, oldPodInfo.description, newPodInfo.description), func(t *testing.T) {\n\t\t\t\t\tdefer featuregatetesting.SetFeatureGateDuringTest(t, utilfeature.DefaultFeatureGate, features.ProbeTerminationGracePeriod, enabled)()\n\n\t\t\t\t\tvar oldPodSpec *api.PodSpec"
  },
  {
    "id" : "319a08d5-90d6-4aea-853c-a5d7ad051091",
    "prId" : 88488,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/88488#pullrequestreview-368899376",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7376bcf3-d90f-4622-abb8-e739936ae9fa",
        "parentId" : null,
        "authorId" : "255dd885-bee4-4c1f-baef-ba11f903dc5c",
        "body" : "IMO it'd be much more flexible if we had `newPod` and `oldPod` instead. Then we could use the builder pattern to create custom pods (with different FSGroups and policies). The for loop below would be cleaner as well.\r\n\r\nSince this is API, it's probably worth it to test that many combinations of old and new pods.",
        "createdAt" : "2020-02-27T13:06:40Z",
        "updatedAt" : "2020-03-05T13:01:00Z",
        "lastEditedBy" : "255dd885-bee4-4c1f-baef-ba11f903dc5c",
        "tags" : [
        ]
      },
      {
        "id" : "be8c97f6-ec83-4d83-a167-cec92bcfad98",
        "parentId" : "7376bcf3-d90f-4622-abb8-e739936ae9fa",
        "authorId" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "body" : "so if I understand this correctly, you are saying that test should supply separate newpod and oldpod with some basic attributes and then we can use builder pattern to add stuff to pod as test case demands something? \r\n\r\nIt is probably worth doing but I do not think it will result in any cleaner code in this case. These test cases aren't building pod object progressively.",
        "createdAt" : "2020-02-27T16:26:05Z",
        "updatedAt" : "2020-03-05T13:01:00Z",
        "lastEditedBy" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "tags" : [
        ]
      },
      {
        "id" : "0524ab04-5d89-48cf-a0fd-86289d2b406a",
        "parentId" : "7376bcf3-d90f-4622-abb8-e739936ae9fa",
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "The input doesn't need to supply the entire Pod object, it could just supply the SecurityContext. Then you just need \"newSecurityContext\" and \"expectedSecurityContext\" and can directly compare the two fields.",
        "createdAt" : "2020-03-03T19:57:24Z",
        "updatedAt" : "2020-03-05T13:01:00Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "4a3af2cf-0473-486c-91e3-9b322b46848e",
        "parentId" : "7376bcf3-d90f-4622-abb8-e739936ae9fa",
        "authorId" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "body" : "Not strong opinions about this one. Would you consider this a blocker issue for PR? I am happy to fix this in a follow up.",
        "createdAt" : "2020-03-04T15:49:48Z",
        "updatedAt" : "2020-03-05T13:01:00Z",
        "lastEditedBy" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "tags" : [
        ]
      },
      {
        "id" : "a0bca98e-cecc-4308-9ceb-9b286f1c7b4a",
        "parentId" : "7376bcf3-d90f-4622-abb8-e739936ae9fa",
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "Follow-up is fine",
        "createdAt" : "2020-03-04T15:54:34Z",
        "updatedAt" : "2020-03-05T13:01:00Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      }
    ],
    "commit" : "b13295968757aad1d6908d38907e7ec4ebca6a21",
    "line" : 41,
    "diffHunk" : "@@ -1,1 +473,477 @@\t\tfeatureEnabled               bool\n\t\tnewPodHasFSGroupChangePolicy bool\n\t\tpod                          func() *api.Pod\n\t\texpectPolicyInPod            bool\n\t}{"
  },
  {
    "id" : "e77414f3-ed18-4ef6-ab98-f803f7ded951",
    "prId" : 72714,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/72714#pullrequestreview-191514410",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a3549672-eab5-4052-9f39-bbc36e347832",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "add a second Volume type (like `api.VolumeSource{ConfigMap: &api.ConfigMapVolumeSource{}}`) to ensure nil `Projected` volume sources don't cause panics",
        "createdAt" : "2019-01-10T15:50:18Z",
        "updatedAt" : "2019-01-10T19:20:06Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "e7171785-a334-4cbc-95f6-9fe4bd2b99c0",
        "parentId" : "a3549672-eab5-4052-9f39-bbc36e347832",
        "authorId" : "1c129c56-3102-4f2b-9811-3cdbb8ceb2d6",
        "body" : "Thanks, I have Include this in the PodWithoutProjectedVolumeSource() below. ",
        "createdAt" : "2019-01-11T04:30:59Z",
        "updatedAt" : "2019-01-11T04:31:00Z",
        "lastEditedBy" : "1c129c56-3102-4f2b-9811-3cdbb8ceb2d6",
        "tags" : [
        ]
      }
    ],
    "commit" : "d0b35d1b05bdeacbb5e4f0f42decf7f977d323a1",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +1197,1201 @@\t\treturn &api.Pod{\n\t\t\tSpec: api.PodSpec{\n\t\t\t\tVolumes: []api.Volume{{\n\t\t\t\t\tVolumeSource: api.VolumeSource{\n\t\t\t\t\t\tProjected: &api.ProjectedVolumeSource{"
  },
  {
    "id" : "44648e62-8e23-4bf0-b1ae-95d01a4bf2c8",
    "prId" : 72698,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/72698#pullrequestreview-190573293",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dc7644e4-89e8-4077-8ee3-0e23175bd690",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "> `&[]bool{true}[0]`\r\n\r\nclever...",
        "createdAt" : "2019-01-09T04:55:16Z",
        "updatedAt" : "2019-01-09T04:58:44Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "4e1d4caa8fd8bc2bb34b7f7890bc17e309e9f7e1",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +920,924 @@\t\t\tSpec: api.PodSpec{\n\t\t\t\tSecurityContext: &api.PodSecurityContext{\n\t\t\t\t\tShareProcessNamespace: &[]bool{true}[0],\n\t\t\t\t},\n\t\t\t},"
  },
  {
    "id" : "e919226c-8d34-4364-a3fc-0abee2468c86",
    "prId" : 25678,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "053a7347-300e-440a-917a-426bfb3b7ac5",
        "parentId" : null,
        "authorId" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "body" : "Would you also add a comment that this should fail as well\n",
        "createdAt" : "2016-05-24T21:19:53Z",
        "updatedAt" : "2016-05-26T17:39:58Z",
        "lastEditedBy" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "tags" : [
        ]
      },
      {
        "id" : "c9651a1f-366a-4a22-92ba-efd85c4e1ca6",
        "parentId" : "053a7347-300e-440a-917a-426bfb3b7ac5",
        "authorId" : "01f9c66a-0c4c-469a-8894-56e785a4f677",
        "body" : "done\n",
        "createdAt" : "2016-05-26T17:41:37Z",
        "updatedAt" : "2016-05-26T17:41:37Z",
        "lastEditedBy" : "01f9c66a-0c4c-469a-8894-56e785a4f677",
        "tags" : [
        ]
      }
    ],
    "commit" : "cde9cff66450ee3519a0690bafe3b0d525238c5c",
    "line" : 71,
    "diffHunk" : "@@ -1,1 +159,163 @@\t\t\tport:     intstr.FromString(\"a\"),\n\t\t\texpected: -1,\n\t\t\tpass:     true,\n\t\t\t//this should fail but passes\n\t\t},"
  }
]