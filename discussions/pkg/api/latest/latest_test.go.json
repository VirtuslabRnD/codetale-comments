[
  {
    "id" : "bd0ebc0f-b017-432c-bbd2-02fa24a6e917",
    "prId" : 14397,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "09217709-a507-43c1-9b89-35d40a943b10",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Also add something that behaves like the legacy v1.\n",
        "createdAt" : "2015-09-24T00:55:01Z",
        "updatedAt" : "2015-09-25T00:45:33Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "570c7fc1-9762-4e2e-94a0-110142d319fd",
        "parentId" : "09217709-a507-43c1-9b89-35d40a943b10",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "Yes. Thanks for pointing this out.\n",
        "createdAt" : "2015-09-24T00:56:57Z",
        "updatedAt" : "2015-09-25T00:45:33Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "c449baea469ac1884261b5a9b9c773b849c968ac",
    "line" : null,
    "diffHunk" : "@@ -1,1 +25,29 @@\t}{\n\t\t{\n\t\t\tgroupMetaMap: GroupMetaMap{\n\t\t\t\t\"group1\": &GroupMeta{\n\t\t\t\t\tGroupVersion: \"group1/v1\","
  },
  {
    "id" : "fb1c3694-4d95-45a8-8756-c1f40b6235ad",
    "prId" : 2179,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0b656511-1c8d-465a-b14d-c61237163f10",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Note to self: extract this duplicated code into the apitest package or somewhere else sensible.\n",
        "createdAt" : "2014-11-05T20:49:01Z",
        "updatedAt" : "2014-11-05T22:26:55Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "5e1070d0-f395-4f39-bac6-23a2be80d780",
        "parentId" : "0b656511-1c8d-465a-b14d-c61237163f10",
        "authorId" : "727fc82d-d969-41a4-a614-7fefce94f9a6",
        "body" : "Truly self or are you suggesting I do it?  I don't mind ... :)\n",
        "createdAt" : "2014-11-05T20:54:17Z",
        "updatedAt" : "2014-11-05T22:26:55Z",
        "lastEditedBy" : "727fc82d-d969-41a4-a614-7fefce94f9a6",
        "tags" : [
        ]
      },
      {
        "id" : "2f30393e-4420-4a78-b3c5-4e8a43f2576f",
        "parentId" : "0b656511-1c8d-465a-b14d-c61237163f10",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "nah I won't hold up this PR over this (still reading the rest).\n",
        "createdAt" : "2014-11-05T20:58:17Z",
        "updatedAt" : "2014-11-05T22:26:55Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "119f654a13f1b8d2a11eb275f54f0329389a94a2",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +72,76 @@\t\tj.FieldPath = c.RandString()\n\t},\n\tfunc(j *internal.PodCondition, c fuzz.Continue) {\n\t\tstatuses := []internal.PodCondition{internal.PodPending, internal.PodRunning, internal.PodFailed}\n\t\t*j = statuses[c.Rand.Intn(len(statuses))]"
  },
  {
    "id" : "f6e91b73-e82f-4439-844d-0f2773f57dda",
    "prId" : 1643,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a6544a05-85ea-49f4-98ff-d0dd5776dbbc",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Lose the >>8?\n",
        "createdAt" : "2014-10-07T22:43:56Z",
        "updatedAt" : "2014-10-08T19:57:43Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "dcf72176-13e4-4e3f-a307-a06c4b843cdf",
        "parentId" : "a6544a05-85ea-49f4-98ff-d0dd5776dbbc",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Ah, yes\n",
        "createdAt" : "2014-10-07T22:47:58Z",
        "updatedAt" : "2014-10-08T19:57:43Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "7c7c6743-5878-4dff-8e3b-f4b2fdc288fd",
        "parentId" : "a6544a05-85ea-49f4-98ff-d0dd5776dbbc",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Actually, can't because it has to round trip to JSON as int for v1beta1/2\n",
        "createdAt" : "2014-10-07T22:57:25Z",
        "updatedAt" : "2014-10-08T19:57:43Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "3b9c6840-0512-4802-9c73-8490505a296b",
        "parentId" : "a6544a05-85ea-49f4-98ff-d0dd5776dbbc",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "But it's a string now? Surely JSON dosen't look inside strings to beat the last byte of uint64s?\n",
        "createdAt" : "2014-10-07T23:01:19Z",
        "updatedAt" : "2014-10-08T19:57:43Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "0e2650e4-f00c-4756-b7fc-cb8c789cc4cd",
        "parentId" : "a6544a05-85ea-49f4-98ff-d0dd5776dbbc",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Oh I see it's still an int in v1beta1/2. Argh. Should we change it everywhere?\n",
        "createdAt" : "2014-10-07T23:01:59Z",
        "updatedAt" : "2014-10-08T19:57:43Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "0b5af346-7d9c-4dbb-ac92-6fc719f642e4",
        "parentId" : "a6544a05-85ea-49f4-98ff-d0dd5776dbbc",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "I think we have to just change it everywhere. There's no way we can make our client work with both types? Ugh. That would at least make this PR simpler.\n",
        "createdAt" : "2014-10-07T23:09:13Z",
        "updatedAt" : "2014-10-08T19:57:43Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "76048032-1be0-4217-bf06-e377ff79dfec",
        "parentId" : "a6544a05-85ea-49f4-98ff-d0dd5776dbbc",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "That or we have to have separate ResourceVersioners for v1beta1/2.\n",
        "createdAt" : "2014-10-07T23:26:40Z",
        "updatedAt" : "2014-10-08T19:57:43Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "abd78979-1bee-4791-ba13-1e94c7f087f9",
        "parentId" : "a6544a05-85ea-49f4-98ff-d0dd5776dbbc",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "The client really just treats it as opaque, and a new client gets a number and converts to string, and the old client still gets a number.  ResourceVersioners right now deal with internal always, although in a few cases we might want to have them deal with both.  Just judging by the change I _think_ we can leave old clients as they are without breakage, just because everything internal can handle it (it's a wider subset)\n",
        "createdAt" : "2014-10-07T23:29:35Z",
        "updatedAt" : "2014-10-08T19:57:43Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "1d0b2893-0777-4eab-8056-b70736b4ca03",
        "parentId" : "a6544a05-85ea-49f4-98ff-d0dd5776dbbc",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "I see. hm.\n",
        "createdAt" : "2014-10-07T23:41:24Z",
        "updatedAt" : "2014-10-08T19:57:43Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "094bc3796aeb17b8f9347e8a17b72f21c27be83e",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +43,47 @@\t\t// for uint64's. Somehow the LS *byte* of this is lost, but\n\t\t// only when all 8 bytes are set.\n\t\tj.ResourceVersion = strconv.FormatUint(c.RandUint64()>>8, 10)\n\t\tj.SelfLink = c.RandString()\n"
  }
]