[
  {
    "id" : "f7d89f58-1134-4e10-b5d7-98712b634cbf",
    "prId" : 27269,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "61c42788-7348-4380-b7af-d15571d409af",
        "parentId" : null,
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "If the strategy updates the generation this could potentially bump twice.  I'm not sure we'd want the strategy to bump generation, but something we should all remember in the future.\n",
        "createdAt" : "2016-06-23T16:36:40Z",
        "updatedAt" : "2016-07-01T14:46:06Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "553cee27-ac0e-4ac2-bda1-7b51c5fffc74",
        "parentId" : "61c42788-7348-4380-b7af-d15571d409af",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "@smarterclayton do you foresee the damage caused by bumping generation twice? Controllers will just acknowledge it sees the latest one, so they don't care how many times the generation get bumped.\n",
        "createdAt" : "2016-06-23T22:59:45Z",
        "updatedAt" : "2016-07-01T14:46:06Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      },
      {
        "id" : "39160cc1-5707-4b33-a290-cd6334f98dce",
        "parentId" : "61c42788-7348-4380-b7af-d15571d409af",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Other than tidiness, no.  But I don't anticipate it as a problem here\nand we'll just fix it if so.\n",
        "createdAt" : "2016-06-24T02:06:36Z",
        "updatedAt" : "2016-07-01T14:46:06Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "638f4e1192aea09e6dc9aceb8efe194b4e411425",
    "line" : null,
    "diffHunk" : "@@ -1,1 +97,101 @@\t// Thus we need to bump object's Generation (if set). This handles generation bump during graceful deletion.\n\t// The bump for objects that don't support graceful deletion is handled in pkg/registry/generic/registry/store.go.\n\tif objectMeta.Generation > 0 {\n\t\tobjectMeta.Generation++\n\t}"
  },
  {
    "id" : "e6ed21b8-0f39-421e-a4cc-123129aa8b02",
    "prId" : 22965,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "232f9658-00d3-4f95-8189-3a830016188e",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "This is not sufficient! Another delete/write cycle could happen between this and the actual delete. After checking this, you need to also drive a precondition down into etcd, of either resource version, or entire object body (as read here). If that fails, you then need to do it all over again in a loop (as it may have changed in a way that didn't violate the precondition).\n",
        "createdAt" : "2016-03-15T23:12:24Z",
        "updatedAt" : "2016-03-25T18:21:52Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "ffdd2bfa-fd6f-4182-897f-16b7c703c43f",
        "parentId" : "232f9658-00d3-4f95-8189-3a830016188e",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "Yeah, I realized this during our group sync. Got distracted by another P0 issue before fixing this.\n",
        "createdAt" : "2016-03-15T23:16:10Z",
        "updatedAt" : "2016-03-25T18:21:52Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      },
      {
        "id" : "b9e5d2ae-99e3-4d9c-9475-18d80269d7a5",
        "parentId" : "232f9658-00d3-4f95-8189-3a830016188e",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Now that you've moved the implementation, can you remove the check here?\n",
        "createdAt" : "2016-03-17T22:46:58Z",
        "updatedAt" : "2016-03-25T18:21:52Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "b5450fa6-7304-44a0-839c-cf0a71e8a31c",
        "parentId" : "232f9658-00d3-4f95-8189-3a830016188e",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "The check here will help fail early, so I think we can keep them.\n",
        "createdAt" : "2016-03-17T22:52:52Z",
        "updatedAt" : "2016-03-25T18:21:52Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      },
      {
        "id" : "59ffade1-9b8f-40e8-9b4d-fb49f25375fb",
        "parentId" : "232f9658-00d3-4f95-8189-3a830016188e",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Add a comment to that effect, then.\n\nOn Thu, Mar 17, 2016 at 3:53 PM, Chao Xu notifications@github.com wrote:\n\n> In pkg/api/rest/delete.go\n> https://github.com/kubernetes/kubernetes/pull/22965#discussion_r56591093\n> :\n> \n> > ```\n> > if kerr != nil {\n> >     return false, false, kerr\n> > }\n> > ```\n> > \n> > ## \n> > -   if options.Preconditions.UID != nil && *options.Preconditions.UID != objectMeta.UID {\n> > -       return false, false, errors.NewConflict(unversioned.GroupResource{gvk.Group, gvk.Kind}, objectMeta.Name, fmt.Errorf(\"the UID in the precondition (%s) does not match the UID in record (%s). The object might have been deleted and then recreated\", *options.Preconditions.UID, objectMeta.UID))\n> \n> The check here will help fail early, so I think we can keep them.\n> \n> â€”\n> You are receiving this because you were mentioned.\n> Reply to this email directly or view it on GitHub\n> https://github.com/kubernetes/kubernetes/pull/22965/files/754caf176c23fe105cf47de2eb51aa89753e325a#r56591093\n",
        "createdAt" : "2016-03-18T17:55:23Z",
        "updatedAt" : "2016-03-25T18:21:52Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "31b425b3a189fc4ceee377038ff4337a6dca481c",
    "line" : null,
    "diffHunk" : "@@ -1,1 +53,57 @@\t// Checking the Preconditions here to fail early. They'll be enforced later on when we actually do the deletion, too.\n\tif options.Preconditions != nil && options.Preconditions.UID != nil && *options.Preconditions.UID != objectMeta.UID {\n\t\treturn false, false, errors.NewConflict(unversioned.GroupResource{gvk.Group, gvk.Kind}, objectMeta.Name, fmt.Errorf(\"the UID in the precondition (%s) does not match the UID in record (%s). The object might have been deleted and then recreated\", *options.Preconditions.UID, objectMeta.UID))\n\t}\n\tgracefulStrategy, ok := strategy.(RESTGracefulDeleteStrategy)"
  },
  {
    "id" : "321f1ed4-82b6-4f43-bbd4-54e7edbb30a4",
    "prId" : 9165,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c18a93a7-3913-462d-8700-5de91b68499b",
        "parentId" : null,
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "Do we need to check options.GracePeriodSeconds != nil as we do on line 60?\n",
        "createdAt" : "2015-08-17T19:02:41Z",
        "updatedAt" : "2015-08-18T13:08:12Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      },
      {
        "id" : "5d290ac5-5503-4eaa-9bce-80bcf959a4ab",
        "parentId" : "c18a93a7-3913-462d-8700-5de91b68499b",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "The contract for graceful delete is that options.GracePeriodSeconds must be set.\n",
        "createdAt" : "2015-08-17T19:29:30Z",
        "updatedAt" : "2015-08-18T13:08:12Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "a4573a71-f9e2-4e91-90af-d4ee9a3ae14f",
        "parentId" : "c18a93a7-3913-462d-8700-5de91b68499b",
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "ok. I see now that you are checking options == nil in CheckGracefulDelete().\n",
        "createdAt" : "2015-08-17T19:44:08Z",
        "updatedAt" : "2015-08-18T13:08:12Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      }
    ],
    "commit" : "266e6226e52b55f8a6d5278c1264299d7c713820",
    "line" : 50,
    "diffHunk" : "@@ -1,1 +77,81 @@\t\treturn false, false, nil\n\t}\n\tnow := util.NewTime(util.Now().Add(time.Second * time.Duration(*options.GracePeriodSeconds)))\n\tobjectMeta.DeletionTimestamp = &now\n\tobjectMeta.DeletionGracePeriodSeconds = options.GracePeriodSeconds"
  }
]