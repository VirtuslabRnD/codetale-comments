[
  {
    "id" : "3d03c4f4-72dd-4363-b00c-069008c84529",
    "prId" : 51530,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/51530#pullrequestreview-60055944",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "64083845-c71b-473e-8712-f7dc4f62c2cf",
        "parentId" : null,
        "authorId" : "3eb39df2-c27a-40ed-9fab-cabae1c6353d",
        "body" : "Dont we need to do `visitor` on secretRef's namespace ?",
        "createdAt" : "2017-09-01T06:32:53Z",
        "updatedAt" : "2017-11-18T20:05:48Z",
        "lastEditedBy" : "3eb39df2-c27a-40ed-9fab-cabae1c6353d",
        "tags" : [
        ]
      }
    ],
    "commit" : "56ec6e10287c19c1a5fac574659b2809a61c734b",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +96,100 @@\t\t\t\tns = source.ISCSI.SecretRef.Namespace\n\t\t\t}\n\t\t\tif !visitor(ns, source.ISCSI.SecretRef.Name) {\n\t\t\t\treturn false\n\t\t\t}"
  },
  {
    "id" : "1bfa9f2c-2e5f-46a7-908e-8268424ff0d2",
    "prId" : 46076,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/46076#pullrequestreview-40442385",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "adbcfd65-da03-4cd7-9fc2-6aca1a668ca6",
        "parentId" : null,
        "authorId" : "0af48e59-4be9-46ce-9275-aa218813b6fd",
        "body" : "Why is this a visitor? I don't see any recursive calls.",
        "createdAt" : "2017-05-24T17:23:20Z",
        "updatedAt" : "2017-05-30T20:52:51Z",
        "lastEditedBy" : "0af48e59-4be9-46ce-9275-aa218813b6fd",
        "tags" : [
        ]
      },
      {
        "id" : "75e165d5-84b5-4764-b4ba-9b69e8c6bf3b",
        "parentId" : "adbcfd65-da03-4cd7-9fc2-6aca1a668ca6",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "no allocations of slices to hold secret names",
        "createdAt" : "2017-05-26T04:16:07Z",
        "updatedAt" : "2017-05-30T20:52:51Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "fc8e915a4bcfdd224d1ff625569a7af1a2766690",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +24,28 @@// referenced by the PV spec. If visitor returns false, visiting is short-circuited.\n// Returns true if visiting completed, false if visiting was short-circuited.\nfunc VisitPVSecretNames(pv *api.PersistentVolume, visitor func(string) bool) bool {\n\tsource := &pv.Spec.PersistentVolumeSource\n\tswitch {"
  },
  {
    "id" : "97d70a72-4c7c-4a85-8b9f-9180aa18d7bc",
    "prId" : 46076,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/46076#pullrequestreview-40442785",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "31ba4d93-9397-411a-8aa2-cbc2124269a0",
        "parentId" : null,
        "authorId" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "body" : "nit: I think this would be cleaner:\r\n```go\r\nif len(source.AzureFile.SecretName) > 0 {\r\n  return visitor(source.AzureFile.SecretName)\r\n}\r\n```\r\nOr even:\r\n```go\r\nreturn len(source.AzureFile.SecretName) == 0 || visitor(source.AzureFile.SecretName)\r\n```\r\n\r\nsame below",
        "createdAt" : "2017-05-24T18:07:14Z",
        "updatedAt" : "2017-05-30T20:52:51Z",
        "lastEditedBy" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "tags" : [
        ]
      },
      {
        "id" : "c452b480-a57b-47c2-9bb2-6d913bb1a417",
        "parentId" : "31ba4d93-9397-411a-8aa2-cbc2124269a0",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "this is modeled after the pod method, which has other references to secrets (in containers, etc). if a PV gains those (for example, pv->storageclass->secret), it wouldn't be correct to return after just looking at the volumesource.",
        "createdAt" : "2017-05-26T04:21:38Z",
        "updatedAt" : "2017-05-30T20:52:51Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "fc8e915a4bcfdd224d1ff625569a7af1a2766690",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +29,33 @@\tcase source.AzureFile != nil:\n\t\tif len(source.AzureFile.SecretName) > 0 && !visitor(source.AzureFile.SecretName) {\n\t\t\treturn false\n\t\t}\n\tcase source.CephFS != nil:"
  }
]