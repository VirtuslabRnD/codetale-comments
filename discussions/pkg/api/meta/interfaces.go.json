[
  {
    "id" : "63bcdb2b-a285-4ce9-bd94-db63ecbe3a94",
    "prId" : 37966,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/37966#pullrequestreview-11337400",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "58028fe9-c0c7-4077-9b0f-00b794feb489",
        "parentId" : null,
        "authorId" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "body" : "Otherwise, identifies a preferred resource mapping for the provided version(s).",
        "createdAt" : "2016-12-05T09:01:09Z",
        "updatedAt" : "2016-12-05T19:22:29Z",
        "lastEditedBy" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "tags" : [
        ]
      }
    ],
    "commit" : "5f8e7745171a9585a24142f4cd33faa1a7f25f07",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +179,183 @@\tRESTMapping(gk schema.GroupKind, versions ...string) (*RESTMapping, error)\n\t// RESTMappings returns all resource mappings for the provided group kind if no\n\t// version search is provided. Otherwise identifies a preferred resource mapping for\n\t// the provided version(s).\n\tRESTMappings(gk schema.GroupKind, versions ...string) ([]*RESTMapping, error)"
  },
  {
    "id" : "a44cb5db-094e-4374-9c88-91d0ddb3094d",
    "prId" : 24509,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "527031dd-a55c-4412-8ec9-28b9405eea7b",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "weird place for this assertion. I guess runtime can't import meta?\n",
        "createdAt" : "2016-05-06T22:39:27Z",
        "updatedAt" : "2016-05-17T20:49:00Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "de737f58-ccaf-4435-a92a-621122cb50bb",
        "parentId" : "527031dd-a55c-4412-8ec9-28b9405eea7b",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "Yep.\n",
        "createdAt" : "2016-05-06T22:45:08Z",
        "updatedAt" : "2016-05-17T20:49:00Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "0cda99b8d7942c20e0242d6e5cf7564c30984615",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +63,67 @@}\n\nvar _ Object = &runtime.Unstructured{}\n\ntype ListMetaAccessor interface {"
  },
  {
    "id" : "211b5919-4c44-4377-aad7-f0d76d89f23c",
    "prId" : 18473,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ef30989d-5387-46fd-864b-38f3624b32fd",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "Yay Java? :)\n",
        "createdAt" : "2015-12-11T13:04:53Z",
        "updatedAt" : "2015-12-15T18:36:34Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "5d48b349-d425-496b-b4c1-0fb3e5218c2f",
        "parentId" : "ef30989d-5387-46fd-864b-38f3624b32fd",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Yeah, this is a problem with value types in go.  If you want value\naccessors, you have to name them differently (we have Name defined, we need\nto change to GetName).  Such is life.\n\nOn Fri, Dec 11, 2015 at 8:05 AM, David Eads notifications@github.com\nwrote:\n\n> In pkg/api/meta/interfaces.go\n> https://github.com/kubernetes/kubernetes/pull/18473#discussion_r47352598\n> :\n> \n> > ```\n> > SetNamespace(namespace string)\n> > ```\n> > -   Name() string\n> > -   GetName() string\n> \n> Yay Java? :)\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/kubernetes/kubernetes/pull/18473/files#r47352598.\n",
        "createdAt" : "2015-12-11T19:41:14Z",
        "updatedAt" : "2015-12-15T18:36:34Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "8f203a28f1d17b9371673ff147aa7e8f34f093f5",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +41,45 @@\tGetNamespace() string\n\tSetNamespace(namespace string)\n\tGetName() string\n\tSetName(name string)\n\tGetGenerateName() string"
  },
  {
    "id" : "4a80f470-fefe-4baa-a677-5d496064665b",
    "prId" : 18473,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3d557ac5-95d3-4e06-b1c9-09dfa0c5db41",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "I was expecting this to change.  Why does it still have `apiVersion` and `kind` and not a `GroupVersionKind`?\n",
        "createdAt" : "2015-12-11T13:09:06Z",
        "updatedAt" : "2015-12-15T18:36:34Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "fdaf3de4-92dd-4c2e-8019-cf13cb507e6f",
        "parentId" : "3d557ac5-95d3-4e06-b1c9-09dfa0c5db41",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Don't want to bite it off here - I'll do it after we get the rest of the\nsimplifications in.  I don't think the refactor order is critical.\n\nOn Fri, Dec 11, 2015 at 8:09 AM, David Eads notifications@github.com\nwrote:\n\n> In pkg/api/meta/interfaces.go\n> https://github.com/kubernetes/kubernetes/pull/18473#discussion_r47352912\n> :\n> \n> > ```\n> > SetAnnotations(annotations map[string]string)\n> > ```\n> > \n> >  }\n> > \n> > -// TypeInterface exposes the type and APIVersion of versioned or internal API objects.\n> > -type TypeInterface interface {\n> > -   APIVersion() string\n> >   +// List lets you work with list metadata from any of the versioned or\n> >   +// internal API objects. Attempting to set or retrieve a field on an object that does\n> >   +// not support that field will be a no-op and return a default value.\n> >   +type List interface {\n> > -   GetResourceVersion() string\n> > -   SetResourceVersion(version string)\n> > -   GetSelfLink() string\n> > -   SetSelfLink(selfLink string)\n> >   +}\n> >   +\n> >   +// Type exposes the type and APIVersion of versioned or internal API objects.\n> >   +type Type interface {\n> \n> I was expecting this to change. Why does it still have apiVersion and kind\n> and not a GroupVersionKind?\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/kubernetes/kubernetes/pull/18473/files#r47352912.\n",
        "createdAt" : "2015-12-11T19:41:38Z",
        "updatedAt" : "2015-12-15T18:36:34Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "0a9e51cb-c4f9-4091-aed2-52d11dfe2906",
        "parentId" : "3d557ac5-95d3-4e06-b1c9-09dfa0c5db41",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "> Don't want to bite it off here - I'll do it after we get the rest of the\n> simplifications in.  I don't think the refactor order is critical.\n\nFollowup issue is fine.\n",
        "createdAt" : "2015-12-11T19:44:16Z",
        "updatedAt" : "2015-12-15T18:36:34Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "8f203a28f1d17b9371673ff147aa7e8f34f093f5",
    "line" : 58,
    "diffHunk" : "@@ -1,1 +68,72 @@\n// Type exposes the type and APIVersion of versioned or internal API objects.\ntype Type interface {\n\tGetAPIVersion() string\n\tSetAPIVersion(version string)"
  },
  {
    "id" : "372f09b8-dae3-45c9-8c0d-84b2849fba24",
    "prId" : 12405,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "edef2b0f-b252-4e9b-91b6-59c29a68d59c",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "There should be a comment describing the relationship between groups, resources, versions, and kinds and this seems like a logical place to do it.  These interface methods are all assuming that `resource` identifies version, kind, and group, but that means that resources must be unique across groups.  That would seem to partially defeat the purpose of the groups.\n",
        "createdAt" : "2015-08-12T13:35:49Z",
        "updatedAt" : "2015-08-12T18:29:53Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "17fd8bff-4368-42a4-b1e8-c3c7c7b0dd7e",
        "parentId" : "edef2b0f-b252-4e9b-91b6-59c29a68d59c",
        "authorId" : "271eaec2-9b46-49fe-bdc0-d8b872fb4008",
        "body" : "Done, they are not unique right now, but that is because multiple apigroup support is not complete. Clarified in comments.\n",
        "createdAt" : "2015-08-12T18:20:07Z",
        "updatedAt" : "2015-08-12T18:29:53Z",
        "lastEditedBy" : "271eaec2-9b46-49fe-bdc0-d8b872fb4008",
        "tags" : [
        ]
      }
    ],
    "commit" : "93b14c9a5d580ec3f6d3643c06fa3b6ac29e8df8",
    "line" : null,
    "diffHunk" : "@@ -1,1 +151,155 @@// scoped to groups. See http://issues.k8s.io/12413 and http://issues.k8s.io/10009.\ntype RESTMapper interface {\n\tVersionAndKindForResource(resource string) (defaultVersion, kind string, err error)\n\t// TODO(caesarxuchao): Remove GroupForResource when multi-group support is in (since\n\t// group will be part of the version)."
  },
  {
    "id" : "b54788ac-9e2d-423a-8cb9-5ef28f1dccf8",
    "prId" : 6830,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "32c91725-864d-4817-b963-017a70436135",
        "parentId" : null,
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "I think at this point we should be using api.ObjectMetaFor() instead of metadata.Accessor.  Most of the meta abstraction is unnecessary (and much less efficient).\n",
        "createdAt" : "2015-04-16T03:46:25Z",
        "updatedAt" : "2015-04-16T17:06:39Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "8fdb116d-1258-4fd9-802b-d92e541bb48f",
        "parentId" : "32c91725-864d-4817-b963-017a70436135",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "+1 the accessor made more sense back when I added it; it's pretty heavyweight now.\n",
        "createdAt" : "2015-04-16T04:25:22Z",
        "updatedAt" : "2015-04-16T17:06:39Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "81dcd8c836b586ee20f7ba3b6815fc5344614b2b",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +41,45 @@\tName() string\n\tSetName(name string)\n\tGenerateName() string\n\tSetGenerateName(name string)\n\tUID() types.UID"
  },
  {
    "id" : "c8df79fa-afc1-42de-9c4a-d1800d769cf2",
    "prId" : 3944,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cac95b75-f883-4165-9a1d-5ba74fcea0e7",
        "parentId" : null,
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "You preferred that to \"cluster\"?\n",
        "createdAt" : "2015-01-30T19:35:45Z",
        "updatedAt" : "2015-02-02T16:01:19Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "7abb65fc-5dd7-46ed-a684-cb116a504af4",
        "parentId" : "cac95b75-f883-4165-9a1d-5ba74fcea0e7",
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "My bias at the time was that it should go at the root of a path.\n",
        "createdAt" : "2015-01-30T21:42:17Z",
        "updatedAt" : "2015-02-02T16:01:19Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      }
    ],
    "commit" : "a928be56ba229e4a0456b9d4a0aeb1d4f73a5494",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +99,103 @@const (\n\tRESTScopeNameNamespace RESTScopeName = \"namespace\"\n\tRESTScopeNameRoot      RESTScopeName = \"root\"\n)\n"
  },
  {
    "id" : "d026b722-8b1d-45a8-8077-f733c1309da6",
    "prId" : 3944,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dac19354-c551-47a4-b49f-379af1dbccce",
        "parentId" : null,
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Can you put a TODO here that once v1beta1 and v1beta2 are removed, we should consider removing this flexibility everywhere?\n",
        "createdAt" : "2015-01-30T19:36:31Z",
        "updatedAt" : "2015-02-02T16:01:19Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "a928be56ba229e4a0456b9d4a0aeb1d4f73a5494",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +109,113 @@\tName() RESTScopeName\n\t// ParamName is the optional name of the parameter that should be inserted in the resource url\n\t// If empty, no param will be inserted\n\tParamName() string\n\t// ParamPath is a boolean that controls how the parameter is manifested in resource paths"
  },
  {
    "id" : "44fa6cf3-380e-4483-a82c-04a4b0d0e6da",
    "prId" : 3603,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8024ebd8-e2fe-4b0e-8552-2a5a4f578d64",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "Should this become \"ObjectInterface\" ?\n",
        "createdAt" : "2015-01-20T22:10:49Z",
        "updatedAt" : "2015-01-20T22:37:30Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "c04f3fa8-6574-453b-bf1e-491399bdb778",
        "parentId" : "8024ebd8-e2fe-4b0e-8552-2a5a4f578d64",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Probably, although I think at the time it was added the intent was that you would primarily use Interface on the package, thus following the upstream convention.  But now it's much more ObjectInterface than Interface.\n\n----- Original Message -----\n\n> > @@ -33,16 +33,14 @@ type VersionInterfaces struct {\n> >  // not support that field (Name, UID, Namespace on lists) will be a no-op\n> >  and return\n> >  // a default value.\n> >  type Interface interface {\n> \n> Should this become \"ObjectInterface\" ?\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/GoogleCloudPlatform/kubernetes/pull/3603/files#r23260815\n",
        "createdAt" : "2015-01-20T22:22:38Z",
        "updatedAt" : "2015-01-20T22:37:30Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "a6a6048e-af41-4faa-b998-55a282fd93ac",
        "parentId" : "8024ebd8-e2fe-4b0e-8552-2a5a4f578d64",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "Toss in a TODO to rename it and I'll let you off the hook\n",
        "createdAt" : "2015-01-20T22:31:52Z",
        "updatedAt" : "2015-01-20T22:37:30Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "c416087d-b0bc-4b72-ba86-120ec558e277",
        "parentId" : "8024ebd8-e2fe-4b0e-8552-2a5a4f578d64",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Done\n\n----- Original Message -----\n\n> > @@ -33,16 +33,14 @@ type VersionInterfaces struct {\n> >  // not support that field (Name, UID, Namespace on lists) will be a no-op\n> >  and return\n> >  // a default value.\n> >  type Interface interface {\n> \n> Toss in a TODO to rename it and I'll let you off the hook\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/GoogleCloudPlatform/kubernetes/pull/3603/files#r23262608\n",
        "createdAt" : "2015-01-20T22:47:53Z",
        "updatedAt" : "2015-01-20T22:47:53Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "5f6caaba2e8ff8f7ff5b845e977efa09ea5e2f39",
    "line" : null,
    "diffHunk" : "@@ -1,1 +34,38 @@// a default value.\n// TODO: rename to ObjectInterface when we clear up these interfaces.\ntype Interface interface {\n\tTypeInterface\n"
  },
  {
    "id" : "a5ca4fac-0155-4910-8580-5352b4a8b881",
    "prId" : 2059,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a12f03fd-78cb-4ce1-baa6-3945dc7746d1",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "RESTMeta?\n",
        "createdAt" : "2014-11-03T21:58:19Z",
        "updatedAt" : "2014-11-03T22:36:02Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "4c615ced-0398-408f-958c-9bb4ae48621d",
        "parentId" : "a12f03fd-78cb-4ce1-baa6-3945dc7746d1",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Hrm - if I hadn't called this a Mapper I would be inclined to switch... but since it's a mapper it does feel pretty reasonable to get a Mapping back.\n\n----- Original Message -----\n\n> > +\n> > -   Name(obj runtime.Object) (string, error)\n> > -   SetName(obj runtime.Object, name string) error\n> >   +\n> > -   UID(obj runtime.Object) (string, error)\n> > -   SetUID(obj runtime.Object, uid string) error\n> >   +\n> > -   SelfLink(obj runtime.Object) (string, error)\n> > -   SetSelfLink(obj runtime.Object, selfLink string) error\n> >   +\n> > -   runtime.ResourceVersioner\n> >   +}\n> >   +\n> >   +// RESTMapping contains the information needed to deal with objects of a\n> >   specific\n> >   +// resource and kind in a RESTful manner.\n> >   +type RESTMapping struct {\n> \n> RESTMeta?\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/GoogleCloudPlatform/kubernetes/pull/2059/files#r19769779\n",
        "createdAt" : "2014-11-03T22:11:43Z",
        "updatedAt" : "2014-11-03T22:36:02Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "191c1b975cb9cdc3ad9f110f30973d791bc5451e",
    "line" : 80,
    "diffHunk" : "@@ -1,1 +78,82 @@// RESTMapping contains the information needed to deal with objects of a specific\n// resource and kind in a RESTful manner.\ntype RESTMapping struct {\n\t// Resource is a string representing the name of this resource as a REST client would see it\n\tResource string"
  }
]