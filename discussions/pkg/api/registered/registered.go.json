[
  {
    "id" : "e4355a0f-0a70-4d7a-8e6d-bdcdd7075080",
    "prId" : 18925,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cb028021-a6f3-489f-80d5-2e6823a5c50a",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "In the API Machinery call, we discussed splitting into `registeredVersion`, which is the list of all available group/versions and `enabledVersions`, which seems to be how this is godoced.\n\nCan you make that split here in the variables even if you just update the `enabledVersions` list at the same time.  I think it will help us reason about the stages.\n",
        "createdAt" : "2015-12-21T13:11:07Z",
        "updatedAt" : "2015-12-24T07:21:46Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "52dcfdb6-1406-43c5-a0a9-a5c6a30b5ea0",
        "parentId" : "cb028021-a6f3-489f-80d5-2e6823a5c50a",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "@deads2k sorry about the godoc, I should have updated it after a grep&sed.\n\nI'm thinking probably we don't need the `registeredVersion` we talked about in the call. We used to need it because we compare KUBE_API_VERSIONS with `registeredVersion` to make sure the versions in the env variable makes sense, but we have another mechanism to check that now.\n\nWhat do you think? Why do we need to keep record of the versions that are compiled but not enabled?\n",
        "createdAt" : "2015-12-21T18:57:34Z",
        "updatedAt" : "2015-12-24T07:21:46Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      },
      {
        "id" : "5deb0123-0c53-4046-bee5-c458fcd2d3e2",
        "parentId" : "cb028021-a6f3-489f-80d5-2e6823a5c50a",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "Note in the last commit, I ran a grep/sed to `s/enabled/registered`, so logically all `registeredXXX` variables in this PR represent `enabledXXX`. And there is no variable represent the concept of registered versions in this PR.\n\nSorry for the confusion.\n",
        "createdAt" : "2015-12-21T19:03:56Z",
        "updatedAt" : "2015-12-24T07:21:46Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      },
      {
        "id" : "0ad2a4bd-68ed-4d90-b57d-9f68a6b5c74f",
        "parentId" : "cb028021-a6f3-489f-80d5-2e6823a5c50a",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "> What do you think? Why do we need to keep record of the versions that are compiled but not enabled?\n\nI think we might want to know all the available versions even when a subset is chosen.  It would allow us to do things like look at a whitelist (env var), compare against the available, and tell them which versions are disabled.  There might be other ways to do it, but I think the approach you've laid out in this pull of unconditional registration followed by inspection of enablement will make it easier to reason about the code and debug it after the fact.\n",
        "createdAt" : "2015-12-21T19:06:00Z",
        "updatedAt" : "2015-12-24T07:21:46Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "b4e6b16e-63f4-427b-babb-1c9d6248eb0e",
        "parentId" : "cb028021-a6f3-489f-80d5-2e6823a5c50a",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "I see. I'll add back the `registeredVersiosns` list.\n",
        "createdAt" : "2015-12-21T19:10:54Z",
        "updatedAt" : "2015-12-24T07:21:46Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "ad484c79f7accd94a4f4877e175d7a7c5dad33e0",
    "line" : null,
    "diffHunk" : "@@ -1,1 +30,34 @@\t// registeredVersions represents all registered API versions. Please call\n\t// RegisterVersions() to add registered versions.\n\tregisteredVersions = map[unversioned.GroupVersion]struct{}{}\n\n\t// enabledVersions represents all enabled API versions. It should be a"
  },
  {
    "id" : "ea237848-af82-4a13-9577-6202caeb5114",
    "prId" : 18925,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ebaf447b-3f40-47a3-8b9f-cdc0797fac30",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "So in keeping with `registered` and `enabled`, this would not affect the `registered` list, but it would prevent versions from becoming `enabled`, right?\n",
        "createdAt" : "2015-12-21T13:12:40Z",
        "updatedAt" : "2015-12-24T07:21:46Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "f9a5e51e-aeeb-4562-8654-2da5fe7cb561",
        "parentId" : "ebaf447b-3f40-47a3-8b9f-cdc0797fac30",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "Yes.\n",
        "createdAt" : "2015-12-21T20:09:48Z",
        "updatedAt" : "2015-12-24T07:21:46Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "ad484c79f7accd94a4f4877e175d7a7c5dad33e0",
    "line" : null,
    "diffHunk" : "@@ -1,1 +41,45 @@\t// checks this list before add their versions to the latest package and\n\t// Scheme.\n\tenvRequestedVersions = map[unversioned.GroupVersion]struct{}{}\n)\n"
  },
  {
    "id" : "9a82cb71-9386-4401-be49-5473451adf61",
    "prId" : 18925,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "72865ce6-0850-4d72-8617-5e90869d6569",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "Add a `RegisteredVersionsForGroup` for congruence?\n",
        "createdAt" : "2015-12-21T21:20:56Z",
        "updatedAt" : "2015-12-24T07:21:46Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "ad484c79f7accd94a4f4877e175d7a7c5dad33e0",
    "line" : null,
    "diffHunk" : "@@ -1,1 +123,127 @@\n// EnabledVersionsForGroup returns all enabled versions for a group.\nfunc EnabledVersionsForGroup(group string) (ret []unversioned.GroupVersion) {\n\tfor v := range enabledVersions {\n\t\tif v.Group == group {"
  },
  {
    "id" : "3113f596-d608-418c-8a92-3bfd2c7a1236",
    "prId" : 18925,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "186d40bd-8f2e-41c8-a84e-c6f64cf777b5",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "Add an `IsRegisteredVersion` for congruence and for use in `EnableVersions`?\n",
        "createdAt" : "2015-12-21T21:21:18Z",
        "updatedAt" : "2015-12-24T07:21:46Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "ad484c79f7accd94a4f4877e175d7a7c5dad33e0",
    "line" : null,
    "diffHunk" : "@@ -1,1 +95,99 @@\n// IsEnabledVersion returns if a version is enabled.\nfunc IsEnabledVersion(v unversioned.GroupVersion) bool {\n\t_, found := enabledVersions[v]\n\treturn found"
  },
  {
    "id" : "a75da56f-cc2e-4652-81bf-e158e02598bd",
    "prId" : 13833,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9cc628bf-66e9-4c33-9ba0-a4bfab660bd0",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Add a godoc comment :)\n",
        "createdAt" : "2015-09-12T00:28:57Z",
        "updatedAt" : "2015-09-12T22:51:16Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "ca803fc504d93d31b27c5e7b06e00994bc0f4cdf",
    "line" : null,
    "diffHunk" : "@@ -1,1 +70,74 @@// GroupVersionsForGroup returns the registered versions of a group in the form\n// of \"group/version\".\nfunc GroupVersionsForGroup(group string) []string {\n\tret := []string{}\n\tfor _, v := range RegisteredVersions {"
  }
]