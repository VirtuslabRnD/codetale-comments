[
  {
    "id" : "6c5ca413-15cf-4183-be52-037ab96f4870",
    "prId" : 33164,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/33164#pullrequestreview-938585",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fe60ba52-e65f-44cf-b55f-a48f812bcff9",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "Any idea why it's in this package?  Doesn't have to be this pull, but unless there's a strong reason, I'd like it moved eventually.\n",
        "createdAt" : "2016-09-21T12:08:13Z",
        "updatedAt" : "2016-09-23T10:08:36Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "229365a0-853f-4171-b2e8-92517f332038",
        "parentId" : "fe60ba52-e65f-44cf-b55f-a48f812bcff9",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "Had the same question. Also the `Context` interface looks api independent. Doesn't have to be so deep in the package hierarchy. A good topic for a follow-up PR.\n",
        "createdAt" : "2016-09-21T12:14:37Z",
        "updatedAt" : "2016-09-23T10:08:36Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "0194489c-1c57-421e-b6c8-41a4e47d5bc0",
        "parentId" : "fe60ba52-e65f-44cf-b55f-a48f812bcff9",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "> Had the same question. Also the Context interface looks api independent. Doesn't have to be so deep in the package hierarchy. A good topic for a follow-up PR.\n\nagreed.\n",
        "createdAt" : "2016-09-21T12:22:04Z",
        "updatedAt" : "2016-09-23T10:08:36Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "87356c0623cd759df5879dc753c8a885bce4ef64",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +94,98 @@// WithRequestContext ensures there is a Context object associated with the request before calling the passed handler.\n// After the passed handler runs, the context is cleaned up.\nfunc WithRequestContext(handler http.Handler, mapper RequestContextMapper) http.Handler {\n\trcMap, ok := mapper.(*requestContextMap)\n\tif !ok {"
  },
  {
    "id" : "bc180017-9b62-45da-8ada-a6f2f83eb503",
    "prId" : 4352,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1ff9d888-ba2a-40ac-aeff-6f8df94f2a89",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "And yet, to allow the auth layer to update the context for the request to one with the user value set, something has to let us update the map (but only if it exists, so we can be sure it will get cleaned up?)\n",
        "createdAt" : "2015-02-11T22:20:02Z",
        "updatedAt" : "2015-02-13T01:58:10Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "fca6b036-f2d0-4829-bc64-c3b81a2898e2",
        "parentId" : "1ff9d888-ba2a-40ac-aeff-6f8df94f2a89",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "I think so.\n\n----- Original Message -----\n\n> > +}\n> > +\n> > +func NewRequestContextMapper() RequestContextMapper {\n> > -   return &requestContextMap{\n> > -       contexts: make(map[*http.Request]Context),\n> > -   }\n> >   +}\n> >   +\n> >   +func (c *requestContextMap) Get(req *http.Request) (Context, bool) {\n> > -   c.lock.Lock()\n> > -   defer c.lock.Unlock()\n> > -   context, ok := c.contexts[req]\n> > -   return context, ok\n> >   +}\n> >   +\n> >   +func (c *requestContextMap) Update(req *http.Request, context Context)\n> >   error {\n> \n> And yet, to allow the auth layer to update the context for the request to one\n> with the user value set, something has to let us update the map (but only if\n> it exists, so we can be sure it will get cleaned up?)\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/GoogleCloudPlatform/kubernetes/pull/4352/files#r24539620\n",
        "createdAt" : "2015-02-11T22:22:14Z",
        "updatedAt" : "2015-02-13T01:58:10Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "083ce268e02a4cf22cbb27fe172d42fef88c2d49",
    "line" : null,
    "diffHunk" : "@@ -1,1 +59,63 @@// Update maps the request to the given context.\n// If no context was previously associated with the request, an error is returned and the context is ignored.\nfunc (c *requestContextMap) Update(req *http.Request, context Context) error {\n\tc.lock.Lock()\n\tdefer c.lock.Unlock()"
  },
  {
    "id" : "123a74fd-70c2-4c79-badd-a507a64d6083",
    "prId" : 4352,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5a8b7090-7d30-4e15-87f3-e26508b6350f",
        "parentId" : null,
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Godoc\n",
        "createdAt" : "2015-02-12T01:00:15Z",
        "updatedAt" : "2015-02-13T01:58:10Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "ad188a5d-7bda-4b09-b941-d61c34f79910",
        "parentId" : "5a8b7090-7d30-4e15-87f3-e26508b6350f",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Describe who should be allowed to call update and what the risks are\n",
        "createdAt" : "2015-02-12T01:00:36Z",
        "updatedAt" : "2015-02-13T01:58:10Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "083ce268e02a4cf22cbb27fe172d42fef88c2d49",
    "line" : null,
    "diffHunk" : "@@ -1,1 +24,28 @@\n// RequestContextMapper keeps track of the context associated with a particular request\ntype RequestContextMapper interface {\n\t// Get returns the context associated with the given request (if any), and true if the request has an associated context, and false if it does not.\n\tGet(req *http.Request) (Context, bool)"
  },
  {
    "id" : "fc1e61e2-4bbc-4d11-bf8c-74179d17a011",
    "prId" : 4352,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c3528beb-d472-4534-88f6-406e1cd4cc1a",
        "parentId" : null,
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Passing a nil new context should be an error.  I don't think we need to allow clearing.\n\nEventually, we may want to verify this is a descendant context and fail if not.  Add a TODO (unless that's trivial today)\n",
        "createdAt" : "2015-02-12T01:01:53Z",
        "updatedAt" : "2015-02-13T01:58:10Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "083ce268e02a4cf22cbb27fe172d42fef88c2d49",
    "line" : null,
    "diffHunk" : "@@ -1,1 +62,66 @@\tc.lock.Lock()\n\tdefer c.lock.Unlock()\n\tif _, ok := c.contexts[req]; !ok {\n\t\treturn errors.New(\"No context associated\")\n\t}"
  },
  {
    "id" : "628e21f1-79b9-4c00-b969-c6c0367fda12",
    "prId" : 4352,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d56aec8a-76c9-4b1b-86d7-030e6198c7ce",
        "parentId" : null,
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Godoc style (IsEmpty returns true ...)\n",
        "createdAt" : "2015-02-12T01:02:30Z",
        "updatedAt" : "2015-02-13T01:58:10Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "083ce268e02a4cf22cbb27fe172d42fef88c2d49",
    "line" : null,
    "diffHunk" : "@@ -1,1 +108,112 @@\n// IsEmpty returns true if there are no contexts registered, or an error if it could not be determined. Intended for use by tests.\nfunc IsEmpty(requestsToContexts RequestContextMapper) (bool, error) {\n\tif requestsToContexts, ok := requestsToContexts.(*requestContextMap); ok {\n\t\treturn len(requestsToContexts.contexts) == 0, nil"
  }
]