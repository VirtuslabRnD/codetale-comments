[
  {
    "id" : "6dc42163-8d9d-4516-9ecb-aa99625fff5f",
    "prId" : 95705,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/95705#pullrequestreview-518180553",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a7948cf2-09e3-4d20-93df-33582ab8326f",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "if we do this, why do we need https://github.com/kubernetes/kubernetes/pull/95705/files#diff-97e779171708fff85d7b1ee3fac01336bf351c39066428e12526d0fd7da5c05cR371 ?",
        "createdAt" : "2020-10-23T20:07:51Z",
        "updatedAt" : "2020-11-01T15:22:55Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "e2cd89b7-a27a-4940-8119-1879c355c20e",
        "parentId" : "a7948cf2-09e3-4d20-93df-33582ab8326f",
        "authorId" : "3e6e337f-0beb-4609-abc3-11b8e8cf5688",
        "body" : "We don't need it and I removed it, I originally added it to see if that resolves the ci failure I am running into.",
        "createdAt" : "2020-10-27T21:54:51Z",
        "updatedAt" : "2020-11-01T15:22:55Z",
        "lastEditedBy" : "3e6e337f-0beb-4609-abc3-11b8e8cf5688",
        "tags" : [
        ]
      }
    ],
    "commit" : "2f812c31949d93add51acb70036f4df9862f3d46",
    "line" : 50,
    "diffHunk" : "@@ -1,1 +430,434 @@\t\tret.WebhookTokenAuthnVersion = o.WebHook.Version\n\t\tret.WebhookTokenAuthnCacheTTL = o.WebHook.CacheTTL\n\t\tret.WebhookRetryBackoff = o.WebHook.RetryBackoff\n\n\t\tif len(o.WebHook.ConfigFile) > 0 && o.WebHook.CacheTTL > 0 {"
  },
  {
    "id" : "04602803-8c7a-4d65-ac6a-2473dc2a991e",
    "prId" : 93258,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/93258#pullrequestreview-520117694",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "76df6507-b689-483e-910f-91870c744741",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "I just noticed the \"`\" quotes around the example in the service-account-issuer help make it render weirdly.\r\n\r\nDrop the \"`\" quotes wrapping {service-account-issuer}/.well-known/openid-configuration above",
        "createdAt" : "2020-10-29T21:29:02Z",
        "updatedAt" : "2020-10-30T03:47:09Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "3081df5c-184f-47a0-aa73-77c1aa44363a",
        "parentId" : "76df6507-b689-483e-910f-91870c744741",
        "authorId" : "f64c354b-61cb-4b89-b58f-f464e7ad4f94",
        "body" : "done",
        "createdAt" : "2020-10-29T21:56:38Z",
        "updatedAt" : "2020-10-30T03:47:09Z",
        "lastEditedBy" : "f64c354b-61cb-4b89-b58f-f464e7ad4f94",
        "tags" : [
        ]
      }
    ],
    "commit" : "ff641f6eb229e9d48a439bd98bcb057403838951",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +458,462 @@\tauthInfo.APIAudiences = o.APIAudiences\n\tif o.ServiceAccounts != nil && o.ServiceAccounts.Issuer != \"\" && len(o.APIAudiences) == 0 {\n\t\tauthInfo.APIAudiences = authenticator.Audiences{o.ServiceAccounts.Issuer}\n\t}\n"
  },
  {
    "id" : "6d55bae7-ac3a-407c-9628-f0d22cabcd11",
    "prId" : 80724,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/80724#pullrequestreview-329180028",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "407d171e-591d-48ac-95ab-c97a9e15fcbf",
        "parentId" : null,
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "Why is this configurable? Can we pick a path?",
        "createdAt" : "2019-12-09T19:07:43Z",
        "updatedAt" : "2020-02-12T00:23:58Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      },
      {
        "id" : "0c44ed75-fc7c-4058-855d-cbad3b1cea95",
        "parentId" : "407d171e-591d-48ac-95ab-c97a9e15fcbf",
        "authorId" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "body" : "We'll want to override it if serving cached responses from a bucket, for example, where we'd want the JWKs URI in the discovery doc to point to that bucket. ",
        "createdAt" : "2019-12-09T19:55:57Z",
        "updatedAt" : "2020-02-12T00:23:58Z",
        "lastEditedBy" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "tags" : [
        ]
      }
    ],
    "commit" : "5a176ac77241ff059f22609fc569ac219334238c",
    "line" : 44,
    "diffHunk" : "@@ -1,1 +307,311 @@\t\t\t\"`{service-account-issuer}/.well-known/openid-configuration`.\")\n\n\t\tfs.StringVar(&s.ServiceAccounts.JWKSURI, \"service-account-jwks-uri\", s.ServiceAccounts.JWKSURI, \"\"+\n\t\t\t\"Overrides the URI for the JSON Web Key Set in the discovery doc served at \"+\n\t\t\t\"/.well-known/openid-configuration. This flag is useful if the discovery doc\"+"
  },
  {
    "id" : "75209bec-4ac2-433b-904e-27561e5553b6",
    "prId" : 80724,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/80724#pullrequestreview-330330684",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e5321a86-fd1a-49fe-a194-16628e212351",
        "parentId" : null,
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "We do this here for TokenRequest:\r\n\r\nhttps://github.com/kubernetes/kubernetes/blob/343020101c88ff161526f285e7274ad81793211b/cmd/kube-apiserver/app/options/validation.go#L111-L113\r\n\r\nI think because we need access to ServiceAccountSigningKeyFile. This looks fine, just FYI.",
        "createdAt" : "2019-12-11T22:02:06Z",
        "updatedAt" : "2020-02-12T00:23:58Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      }
    ],
    "commit" : "5a176ac77241ff059f22609fc569ac219334238c",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +202,206 @@\t\t\t}\n\t\t} else if len(s.ServiceAccounts.JWKSURI) > 0 {\n\t\t\tallErrors = append(allErrors, fmt.Errorf(\"service-account-jwks-uri may only be set when the ServiceAccountIssuerDiscovery feature gate is enabled\"))\n\t\t}\n\t}"
  },
  {
    "id" : "a683ad0a-6c35-4d6a-aa04-5cfd78ca5016",
    "prId" : 80724,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/80724#pullrequestreview-331624418",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a82cc3ee-38bb-4af4-af9d-6e2469efe28e",
        "parentId" : null,
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "Validate the the scheme is https.",
        "createdAt" : "2019-12-13T00:29:58Z",
        "updatedAt" : "2020-02-12T00:23:58Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      },
      {
        "id" : "d5fbe5ca-a5e5-4e14-bbf3-9f123a5faedb",
        "parentId" : "a82cc3ee-38bb-4af4-af9d-6e2469efe28e",
        "authorId" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "body" : "Done",
        "createdAt" : "2019-12-13T01:34:37Z",
        "updatedAt" : "2020-02-12T00:23:58Z",
        "lastEditedBy" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "tags" : [
        ]
      }
    ],
    "commit" : "5a176ac77241ff059f22609fc569ac219334238c",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +200,204 @@\t\t\t\t\tallErrors = append(allErrors, fmt.Errorf(\"service-account-jwks-uri requires https scheme, parsed as: %v\", u.String()))\n\t\t\t\t}\n\t\t\t}\n\t\t} else if len(s.ServiceAccounts.JWKSURI) > 0 {\n\t\t\tallErrors = append(allErrors, fmt.Errorf(\"service-account-jwks-uri may only be set when the ServiceAccountIssuerDiscovery feature gate is enabled\"))"
  },
  {
    "id" : "535c3ec2-6107-4341-b579-940fc84e36fb",
    "prId" : 70831,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/70831#pullrequestreview-173639731",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "de1698f7-1c71-446b-9f4d-2810793a7bb1",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "and `--service-account-signing-key-file`, right?",
        "createdAt" : "2018-11-09T20:12:52Z",
        "updatedAt" : "2018-11-12T21:12:00Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "2914b4e2-50dd-4118-9a5e-429d44f0d5c3",
        "parentId" : "de1698f7-1c71-446b-9f4d-2810793a7bb1",
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "Added to the error message, I need to figure out how to coalesce this validation with the validation we do in cmd/kube-apiserver, but this has the intended effect.",
        "createdAt" : "2018-11-10T00:52:18Z",
        "updatedAt" : "2018-11-12T21:12:00Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      }
    ],
    "commit" : "f4ff26679f5d6d60fd449dba7e4e2b505c49c944",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +182,186 @@\t\t\tallErrors = append(allErrors, errors.New(\"service-account-issuer is a required flag when BoundServiceAccountTokenVolume is enabled\"))\n\t\t}\n\t\tif len(s.ServiceAccounts.KeyFiles) == 0 {\n\t\t\tallErrors = append(allErrors, errors.New(\"service-account-key-file is a required flag when BoundServiceAccountTokenVolume is enabled\"))\n\t\t}"
  },
  {
    "id" : "ed1d09b0-a79f-4404-8058-848fbcc264cd",
    "prId" : 70308,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/70308#pullrequestreview-169040873",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "83dea117-0b0e-4e0f-b576-28bb3070eb97",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "try to avoid mutating s, modify the returned config instead?",
        "createdAt" : "2018-10-27T02:45:24Z",
        "updatedAt" : "2018-10-29T23:40:19Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "a13b48de94927c0793588ef22ab7aa07ba86da37",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +333,337 @@\tret.APIAudiences = s.APIAudiences\n\tif s.ServiceAccounts != nil {\n\t\tif s.ServiceAccounts.Issuer != \"\" && len(s.APIAudiences) == 0 {\n\t\t\tret.APIAudiences = authenticator.Audiences{s.ServiceAccounts.Issuer}\n\t\t}"
  },
  {
    "id" : "57ae71af-3f05-422d-9101-90ef1dcf1820",
    "prId" : 59940,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/59940#pullrequestreview-99459761",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "91156bee-aa92-4a27-9235-54deffa84fdd",
        "parentId" : null,
        "authorId" : "0af48e59-4be9-46ce-9275-aa218813b6fd",
        "body" : "Sorry if this was discussed previously, but why multiple audiences?",
        "createdAt" : "2018-02-22T06:52:23Z",
        "updatedAt" : "2018-02-28T01:20:59Z",
        "lastEditedBy" : "0af48e59-4be9-46ce-9275-aa218813b6fd",
        "tags" : [
        ]
      },
      {
        "id" : "ad82cd06-4356-43aa-abcd-5f978d61d769",
        "parentId" : "91156bee-aa92-4a27-9235-54deffa84fdd",
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "This will be nice when:\r\n1) API servers are accessed from multiple URI's (e.g. behind a loadbalancer and directly)\r\n1) Someone wants to change the name of the apiserver (e.g. changing DNS name of LB) which is a special case of 1)\r\n1) If someone wants to have a universal and specific identifier for their cluster API (e.g. https://kubernetes.default.svc and https://cluster-1.dev.example.com)",
        "createdAt" : "2018-02-22T21:00:26Z",
        "updatedAt" : "2018-02-28T01:20:59Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      },
      {
        "id" : "18548b9c-b8dd-42d9-a68a-5430ab5748d3",
        "parentId" : "91156bee-aa92-4a27-9235-54deffa84fdd",
        "authorId" : "0af48e59-4be9-46ce-9275-aa218813b6fd",
        "body" : "> API servers are accessed from multiple URI's (e.g. behind a loadbalancer and directly)\r\n\r\nAll for that. This is one fo the limitations of the OpenID Connect spec that's caused us pain.\r\n\r\nThe JWT validation requires all the audiences to be present in the JWT: https://github.com/square/go-jose/blob/v2.1.3/jwt/validation.go#L73\r\n\r\nIt sounds like we only want to require one audience out of the set.",
        "createdAt" : "2018-02-22T22:32:29Z",
        "updatedAt" : "2018-02-28T01:20:59Z",
        "lastEditedBy" : "0af48e59-4be9-46ce-9275-aa218813b6fd",
        "tags" : [
        ]
      },
      {
        "id" : "ad3b65dd-f2a7-4903-a24d-9bb54a0d10e7",
        "parentId" : "91156bee-aa92-4a27-9235-54deffa84fdd",
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "Fixed.",
        "createdAt" : "2018-02-26T20:44:09Z",
        "updatedAt" : "2018-02-28T01:20:59Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      }
    ],
    "commit" : "024f57affebc137c6166c16e2ea99f67e73699f1",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +250,254 @@\t\t\t\"in \\\"iss\\\" claim of issued tokens. This value is a string or URI.\")\n\n\t\tfs.StringSliceVar(&s.ServiceAccounts.APIAudiences, \"service-account-api-audiences\", s.ServiceAccounts.APIAudiences, \"\"+\n\t\t\t\"Identifiers of the API. The service account token authenticator will validate that \"+\n\t\t\t\"tokens used against the API are bound to at least one of these audiences.\")"
  },
  {
    "id" : "84a3223b-d17c-4d50-a602-f24a5206983c",
    "prId" : 59940,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/59940#pullrequestreview-99474289",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6c6c3a8b-194f-4999-a103-8d717a9d954b",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "did the token generator get updated to set audiences to the apiserver's audiences when none are requested in the TokenRequest? I expected these to be required if you wanted to use TokenRequest (possibly with a default), and to be plumbed to that rest handler",
        "createdAt" : "2018-02-23T16:57:05Z",
        "updatedAt" : "2018-02-28T01:20:59Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "5caa2f28-ecc5-4e8c-a830-302bd3ab2890",
        "parentId" : "6c6c3a8b-194f-4999-a103-8d717a9d954b",
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "Done.",
        "createdAt" : "2018-02-26T21:28:53Z",
        "updatedAt" : "2018-02-28T01:20:59Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      }
    ],
    "commit" : "024f57affebc137c6166c16e2ea99f67e73699f1",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +250,254 @@\t\t\t\"in \\\"iss\\\" claim of issued tokens. This value is a string or URI.\")\n\n\t\tfs.StringSliceVar(&s.ServiceAccounts.APIAudiences, \"service-account-api-audiences\", s.ServiceAccounts.APIAudiences, \"\"+\n\t\t\t\"Identifiers of the API. The service account token authenticator will validate that \"+\n\t\t\t\"tokens used against the API are bound to at least one of these audiences.\")"
  },
  {
    "id" : "3b3d8555-e24a-4180-9fd1-5a618098c100",
    "prId" : 50875,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/50875#pullrequestreview-57224624",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2c47f38d-858f-4ccb-bf47-90299a935ae3",
        "parentId" : null,
        "authorId" : "b944dab3-680e-41da-bab9-f73d198952f9",
        "body" : "Are we just less concerned about collisions for the group claim vs the username claim?",
        "createdAt" : "2017-08-18T14:48:28Z",
        "updatedAt" : "2017-08-18T16:50:28Z",
        "lastEditedBy" : "b944dab3-680e-41da-bab9-f73d198952f9",
        "tags" : [
        ]
      },
      {
        "id" : "62310f1a-4cb0-439c-a580-10a46bf2191e",
        "parentId" : "2c47f38d-858f-4ccb-bf47-90299a935ae3",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "not really, the prefixing wasn't done when group support was added, and this is preserving compatibility with existing behavior",
        "createdAt" : "2017-08-18T14:56:00Z",
        "updatedAt" : "2017-08-18T16:50:28Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "1f8ee7fe13490a8e8e0e7801492770caca9f9b5c",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +228,232 @@\t\tfs.StringVar(&s.OIDC.GroupsPrefix, \"oidc-groups-prefix\", \"\", \"\"+\n\t\t\t\"If provided, all groups will be prefixed with this value to prevent conflicts with \"+\n\t\t\t\"other authentication strategies.\")\n\n\t}"
  },
  {
    "id" : "20295aa2-8022-43cf-a516-cabe25ab4e0b",
    "prId" : 50258,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/50258#pullrequestreview-55429427",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bfee84e3-cd90-467b-8c60-3705f4b88482",
        "parentId" : null,
        "authorId" : "6682fc41-9e62-4c69-b891-a0be20e50c30",
        "body" : "I still think the way this default interacts with the webhook TTL configuration could be confusing.",
        "createdAt" : "2017-08-09T13:11:08Z",
        "updatedAt" : "2017-08-10T03:51:59Z",
        "lastEditedBy" : "6682fc41-9e62-4c69-b891-a0be20e50c30",
        "tags" : [
        ]
      },
      {
        "id" : "c9510ace-fec7-4dc2-a0ff-c2ba0c72f982",
        "parentId" : "bfee84e3-cd90-467b-8c60-3705f4b88482",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "I suppose I can add a warning if webhook TTL is less than the overall success TTL, but we already have distributed use of token authentication that involves secondary caches (extension api servers and kubelets do tokenreviews with short ttl caches)",
        "createdAt" : "2017-08-09T17:55:49Z",
        "updatedAt" : "2017-08-10T03:51:59Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "be1ad21c-ac96-446c-bf81-e4994091c139",
        "parentId" : "bfee84e3-cd90-467b-8c60-3705f4b88482",
        "authorId" : "6682fc41-9e62-4c69-b891-a0be20e50c30",
        "body" : "Thanks for clarifying. A warning works for me, or just something in the docs for `--authentication-token-webhook-cache-ttl`.\r\n\r\nAnother option might be to exclude `webhookTokenAuth` from this new cache (leaving them with their own cache), or even to drop `unionAuthTokenHandler` and use a separate cache for each token authorizer (where `--authentication-token-webhook-cache-ttl` would become a flag that set the TTL on that particular cache).",
        "createdAt" : "2017-08-09T18:41:28Z",
        "updatedAt" : "2017-08-10T03:51:59Z",
        "lastEditedBy" : "6682fc41-9e62-4c69-b891-a0be20e50c30",
        "tags" : [
        ]
      },
      {
        "id" : "dbc5d791-2c3f-4ed2-beb7-5725483c0641",
        "parentId" : "bfee84e3-cd90-467b-8c60-3705f4b88482",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "just added the warning for now, TTL under 10s for webhook isn't recommended anyway",
        "createdAt" : "2017-08-10T03:52:23Z",
        "updatedAt" : "2017-08-10T03:52:48Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "0458fac8c0788de022acf9308721413257392bf9",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +88,92 @@func NewBuiltInAuthenticationOptions() *BuiltInAuthenticationOptions {\n\treturn &BuiltInAuthenticationOptions{\n\t\tTokenSuccessCacheTTL: 10 * time.Second,\n\t\tTokenFailureCacheTTL: 0 * time.Second,\n\t}"
  }
]