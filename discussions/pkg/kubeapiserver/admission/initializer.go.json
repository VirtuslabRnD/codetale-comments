[
  {
    "id" : "87ee02a5-a0bc-4f1d-b46d-9915227f98ab",
    "prId" : 55132,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/55132#pullrequestreview-76303036",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9171d811-7ed4-446f-bfae-695e3c91efb5",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "I think all of these interface types should go in \"k8s.io/apiserver/pkg/admission/options\" or something like that. They're available to all admission plugins, not just webhooks.",
        "createdAt" : "2017-11-14T00:15:45Z",
        "updatedAt" : "2017-11-15T00:00:14Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "5aa5f959-56a7-48db-8c5e-88e2479e33aa",
        "parentId" : "9171d811-7ed4-446f-bfae-695e3c91efb5",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "Done.",
        "createdAt" : "2017-11-14T01:07:40Z",
        "updatedAt" : "2017-11-15T00:00:14Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "1adfacc7eb41da109e970a9c2985fd55b4cbbdfd",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +22,26 @@\t\"k8s.io/apimachinery/pkg/api/meta\"\n\t\"k8s.io/apiserver/pkg/admission\"\n\twebhookconfig \"k8s.io/apiserver/pkg/admission/plugin/webhook/config\"\n\t\"k8s.io/apiserver/pkg/authorization/authorizer\"\n\tclientset \"k8s.io/client-go/kubernetes\""
  },
  {
    "id" : "ca34446f-be78-499c-a326-5a14c663162e",
    "prId" : 55132,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/55132#pullrequestreview-76331483",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d25638cd-c822-48ac-b62e-b6e2b2a3acab",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "I am surprised that these \"WantsX\" interfaces are defined here rather than in the generic layer, but that's a can of worms for some other time.",
        "createdAt" : "2017-11-14T00:18:01Z",
        "updatedAt" : "2017-11-15T00:00:14Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "80394b3d-9454-4c92-810d-fff5a0756bc3",
        "parentId" : "d25638cd-c822-48ac-b62e-b6e2b2a3acab",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "They scatter in both directories.\r\n\r\n```bash\r\n$ git grep \"type Wants.* interface\"\r\npkg/kubeapiserver/admission/initializer.go:35:type WantsInternalKubeClientSet interface {\r\npkg/kubeapiserver/admission/initializer.go:41:type WantsInternalKubeInformerFactory interface {\r\npkg/kubeapiserver/admission/initializer.go:47:type WantsCloudConfig interface {\r\npkg/kubeapiserver/admission/initializer.go:52:type WantsRESTMapper interface {\r\npkg/kubeapiserver/admission/initializer.go:57:type WantsQuotaConfiguration interface {\r\npkg/kubeapiserver/admission/initializer.go:64:type WantsServiceResolver interface {\r\npkg/kubeapiserver/admission/initializer.go:76:type WantsAuthenticationInfoResolverWrapper interface {\r\nstaging/src/k8s.io/apiserver/pkg/admission/initializer/interfaces.go:28:type WantsExternalKubeClientSet interface {\r\nstaging/src/k8s.io/apiserver/pkg/admission/initializer/interfaces.go:34:type WantsExternalKubeInformerFactory interface {\r\nstaging/src/k8s.io/apiserver/pkg/admission/initializer/interfaces.go:40:type WantsAuthorizer interface {\r\nstaging/src/k8s.io/apiserver/pkg/admission/initializer/interfaces.go:46:type WantsScheme interface {\r\n```",
        "createdAt" : "2017-11-14T00:21:25Z",
        "updatedAt" : "2017-11-15T00:00:14Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      },
      {
        "id" : "91f41f94-21ed-4353-ba83-ab572d691019",
        "parentId" : "d25638cd-c822-48ac-b62e-b6e2b2a3acab",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Hm, maybe some of those aren't generic. I think auth info, service resolver, and rest mapper probably are. Don't fix it in this PR :)",
        "createdAt" : "2017-11-14T05:03:00Z",
        "updatedAt" : "2017-11-15T00:00:14Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "1adfacc7eb41da109e970a9c2985fd55b4cbbdfd",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +62,66 @@// WantsServiceResolver defines a fuction that accepts a ServiceResolver for\n// admission plugins that need to make calls to services.\ntype WantsServiceResolver interface {\n\tSetServiceResolver(webhookconfig.ServiceResolver)\n}"
  },
  {
    "id" : "768e5184-142c-45e8-b702-5dcfda40734f",
    "prId" : 53156,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/53156#pullrequestreview-66499654",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "04c0289e-aa9c-45c0-9f2b-adfce2ca029c",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "Seems like these blocks can be removed.",
        "createdAt" : "2017-10-02T13:42:33Z",
        "updatedAt" : "2017-10-02T13:42:33Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "5c8dfdf3-7873-4bdf-876f-80ea45db5c66",
        "parentId" : "04c0289e-aa9c-45c0-9f2b-adfce2ca029c",
        "authorId" : "13c01cb8-6052-4a98-b6fd-20d3acd6332f",
        "body" : "Actually it is more than that. The whole `kubeapiserver. PluginInitializer` deserves a little more attention. I'd like to follow up that.",
        "createdAt" : "2017-10-02T15:36:49Z",
        "updatedAt" : "2017-10-02T15:36:50Z",
        "lastEditedBy" : "13c01cb8-6052-4a98-b6fd-20d3acd6332f",
        "tags" : [
        ]
      },
      {
        "id" : "b2e09abe-9cad-49fd-bd99-edea5c45c9be",
        "parentId" : "04c0289e-aa9c-45c0-9f2b-adfce2ca029c",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "> Actually it is more than that. The whole kubeapiserver. PluginInitializer deserves a little more attention. I'd like to follow up that.\r\n\r\nok",
        "createdAt" : "2017-10-02T15:43:19Z",
        "updatedAt" : "2017-10-02T15:43:19Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "475493ced69f47dd78d72ff98bf2c5853fc5ea19",
    "line" : 75,
    "diffHunk" : "@@ -1,1 +137,141 @@\t}\n\n\tif wants, ok := plugin.(admissioninit.WantsExternalKubeClientSet); ok {\n\t\twants.SetExternalKubeClientSet(i.externalClient)\n\t}"
  },
  {
    "id" : "1d02ff24-949e-450e-9544-a540f6a6187a",
    "prId" : 46672,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/46672#pullrequestreview-41301974",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7f8cb7eb-80ed-43ea-acf8-92c71790b1dd",
        "parentId" : null,
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "cc @lavalamp potential conflict with your PR",
        "createdAt" : "2017-05-31T17:37:05Z",
        "updatedAt" : "2017-06-05T23:12:49Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "772ab8e1b4163c17d285a2789321762a8f2dc9f3",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +39,43 @@\n// WantsExternalKubeClientSet defines a function which sets ClientSet for admission plugins that need it\ntype WantsExternalKubeClientSet interface {\n\tSetExternalKubeClientSet(clientset.Interface)\n\tadmission.Validator"
  },
  {
    "id" : "dd962336-a8ae-4216-81ac-fdaf00d3ee2a",
    "prId" : 46388,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/46388#pullrequestreview-41660616",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d1ebc405-d1ec-431d-9ed2-dbae5029ba79",
        "parentId" : null,
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "I'm going to remove SetWebhookSource. This should be a SetExternalClient, and we should initialize a webhookconfiguration manager in the method, like what Clayton did in https://github.com/kubernetes/kubernetes/pull/46672/commits/b75238f4e5351e0a68e679597cff7342d86fc92e#diff-3551f205184f7273b78e802da8fdc72fR93.",
        "createdAt" : "2017-06-01T23:12:30Z",
        "updatedAt" : "2017-06-01T23:12:30Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "c46e231fc7c085accc19e729069282d7f7287d7b",
    "line" : 106,
    "diffHunk" : "@@ -1,1 +146,150 @@// SetWebhookSource sets the webhook source-- admittedly this is probably\n// specific to the external admission hook plugin.\nfunc (i *PluginInitializer) SetWebhookSource(w WebhookSource) *PluginInitializer {\n\ti.webhookSource = w\n\treturn i"
  },
  {
    "id" : "6c5a7b33-c130-486c-b792-18439d84ec12",
    "prId" : 39104,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/39104#pullrequestreview-14933946",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "734fee2d-626d-418c-9623-71ffb3aff908",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "This has side-effects (`Run`). I would prefer to split that part out as an explicit call to a `Run` method.",
        "createdAt" : "2017-01-02T07:34:00Z",
        "updatedAt" : "2017-01-03T20:50:16Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "0f012013-4ff6-4afe-913c-c69fef7e0421",
        "parentId" : "734fee2d-626d-418c-9623-71ffb3aff908",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "Please add a TODO here if this is fixed in a follow-up.",
        "createdAt" : "2017-01-03T13:55:45Z",
        "updatedAt" : "2017-01-03T20:50:16Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "2861509b6dc4580c1a49c8ce5a1cfab894f18f25",
    "line" : 67,
    "diffHunk" : "@@ -1,1 +65,69 @@func (i pluginInitializer) Initialize(plugin admission.Interface) {\n\tif wants, ok := plugin.(WantsInternalClientSet); ok {\n\t\twants.SetInternalClientSet(i.internalClient)\n\t}\n"
  }
]