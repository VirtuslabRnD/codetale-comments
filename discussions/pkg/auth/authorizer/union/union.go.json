[
  {
    "id" : "5a8c6ca9-d891-4b50-976b-ebcddd508f9c",
    "prId" : 13285,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7b907d99-6edc-4ebb-ae46-e048b74aa0e2",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "document the error handling behavior... e.g. \"returns nil if any authorizer authorizes the attributes, or an aggregate error if no authorizer authorizes the attributes.\"\n",
        "createdAt" : "2015-09-01T02:32:01Z",
        "updatedAt" : "2015-09-04T18:04:58Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "f8d6f13f7c25150cbb76eb7423021060a3f3705a",
    "line" : null,
    "diffHunk" : "@@ -1,1 +31,35 @@\n// Authorizes against a chain of authorizer.Authorizer objects and returns nil if successful and returns error if unsuccessful\nfunc (authzHandler unionAuthzHandler) Authorize(a authorizer.Attributes) error {\n\tvar errlist []error\n\tfor _, currAuthzHandler := range authzHandler {"
  },
  {
    "id" : "647416b3-b506-4904-a7bf-4f6c43c75d61",
    "prId" : 13285,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "efb293d5-db89-49ae-a420-a67e03ac24a4",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "if there are no authorizers, this returns nil, which is treated as an approval... that feels like the wrong default\n",
        "createdAt" : "2015-09-01T02:34:01Z",
        "updatedAt" : "2015-09-04T18:04:58Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "f8d6f13f7c25150cbb76eb7423021060a3f3705a",
    "line" : 44,
    "diffHunk" : "@@ -1,1 +42,46 @@\t}\n\n\treturn errors.NewAggregate(errlist)\n}"
  }
]