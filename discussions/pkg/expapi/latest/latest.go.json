[
  {
    "id" : "cce9ec29-1964-4a37-84a6-26c2822f0c40",
    "prId" : 12001,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b7a92e7f-68f6-44ee-ae7d-db8ebce4a1fb",
        "parentId" : null,
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "There is a lot of code duplication between this and api.Latest.\nIts fine for now, since this is only temporary and we want to get this in quickly to unblock others.\nBut later, we might want to refactor this to share the code.\n",
        "createdAt" : "2015-07-30T01:43:48Z",
        "updatedAt" : "2015-07-31T01:33:01Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      },
      {
        "id" : "df2ea186-48b4-42a9-a711-64eb33c5d2bd",
        "parentId" : "b7a92e7f-68f6-44ee-ae7d-db8ebce4a1fb",
        "authorId" : "271eaec2-9b46-49fe-bdc0-d8b872fb4008",
        "body" : "There is a lot of refactoring that should be done in general and I think that's beyond the scope of this PR.\n",
        "createdAt" : "2015-07-30T02:07:12Z",
        "updatedAt" : "2015-07-31T01:33:01Z",
        "lastEditedBy" : "271eaec2-9b46-49fe-bdc0-d8b872fb4008",
        "tags" : [
        ]
      },
      {
        "id" : "67b25628-e52a-401d-8d20-15384d2ce6de",
        "parentId" : "b7a92e7f-68f6-44ee-ae7d-db8ebce4a1fb",
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "We can start with small refactoring:\n\n```\ninit() {\n  Version, Codec, RestMapper = initAPI(function(oType) boolean shouldSkip {})\n}\n```\n\nboth api/latest and expapi/latest can call the initAPI method.\n",
        "createdAt" : "2015-07-30T05:39:03Z",
        "updatedAt" : "2015-07-31T01:33:01Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      }
    ],
    "commit" : "58a875ac2c2e5cf1990c0b53cfaff4580f14b4ae",
    "line" : null,
    "diffHunk" : "@@ -1,1 +43,47 @@\nfunc init() {\n\tVersion = registered.RegisteredVersions[0]\n\tCodec = runtime.CodecFor(api.Scheme, Version)\n\t// Put the registered versions in Versions in reverse order."
  },
  {
    "id" : "4adf8fa2-4bd7-4411-8c70-cca4df71af26",
    "prId" : 12001,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0f0cfe23-08da-4d31-8e04-e640b3318229",
        "parentId" : null,
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "Why did you choose \"v1\"? That sounds too official. I suggest \"v1alpha1\".\n",
        "createdAt" : "2015-07-30T03:36:41Z",
        "updatedAt" : "2015-07-31T01:33:01Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "ed3d7454-14ca-45d4-b59f-bb2b5fce1ae4",
        "parentId" : "0f0cfe23-08da-4d31-8e04-e640b3318229",
        "authorId" : "271eaec2-9b46-49fe-bdc0-d8b872fb4008",
        "body" : "We have a global registry of versions (pkg/api/registry) and dealing with separate versions for experimental and api is icky enough that I would rather it be changed after we have multiple groups.\n",
        "createdAt" : "2015-07-30T20:50:38Z",
        "updatedAt" : "2015-07-31T01:33:01Z",
        "lastEditedBy" : "271eaec2-9b46-49fe-bdc0-d8b872fb4008",
        "tags" : [
        ]
      },
      {
        "id" : "1f9b591b-9fd4-4257-b2e2-3042572111c2",
        "parentId" : "0f0cfe23-08da-4d31-8e04-e640b3318229",
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "Ok.\n",
        "createdAt" : "2015-07-31T07:47:04Z",
        "updatedAt" : "2015-07-31T07:47:04Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      }
    ],
    "commit" : "58a875ac2c2e5cf1990c0b53cfaff4580f14b4ae",
    "line" : 66,
    "diffHunk" : "@@ -1,1 +64,68 @@func InterfacesFor(version string) (*meta.VersionInterfaces, error) {\n\tswitch version {\n\tcase \"v1\":\n\t\treturn &meta.VersionInterfaces{\n\t\t\tCodec:            v1.Codec,"
  }
]