[
  {
    "id" : "6819108d-4ef9-4090-882f-7c762678ca22",
    "prId" : 780,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ce4899f0-be3b-4671-b206-a479a9d22b82",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "A crash here means the whole process goes down, is that what you want?\n",
        "createdAt" : "2014-08-15T04:26:54Z",
        "updatedAt" : "2014-08-15T18:42:39Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "8f9c04d1-4a59-4e61-9434-e49798751775",
        "parentId" : "ce4899f0-be3b-4671-b206-a479a9d22b82",
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "done.\n",
        "createdAt" : "2014-08-15T04:48:24Z",
        "updatedAt" : "2014-08-15T18:42:39Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "a17acd30eeebcea402863ece5e57b238cd81af78",
    "line" : null,
    "diffHunk" : "@@ -1,1 +50,54 @@}\n\nfunc (e *etcdMasterElector) run(path, id string) {\n\tmasters := make(chan string)\n\terrors := make(chan error)"
  },
  {
    "id" : "03fbdad8-ac10-414b-806f-1f259b0f6874",
    "prId" : 780,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "37d0c335-18bc-4674-924d-db9711d1bf2a",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "I think if master == \"\" it probably makes sense to immediately re-run handleMaster? Or at least there's no reason to wait the entire ttl-- you can imagine running this for things where you want a long lock as well as for things where you want a short lock.\n",
        "createdAt" : "2014-08-15T17:34:55Z",
        "updatedAt" : "2014-08-15T18:42:39Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "dbab1df3-e34f-4a09-9461-71a6dc5c5f35",
        "parentId" : "37d0c335-18bc-4674-924d-db9711d1bf2a",
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "Yeah, I agree. done.\n",
        "createdAt" : "2014-08-15T18:42:38Z",
        "updatedAt" : "2014-08-15T18:42:45Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "a17acd30eeebcea402863ece5e57b238cd81af78",
    "line" : null,
    "diffHunk" : "@@ -1,1 +160,164 @@\t\t\tlastMaster = master\n\t\t\tmasters <- master\n\t\t}\n\t\t// TODO: Add Watch here, skip the polling for faster reactions\n\t\t// If done is closed, break out."
  },
  {
    "id" : "cff48629-e3ea-4e64-ba44-45ce0e7f2381",
    "prId" : 780,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fa4112e6-f38d-47ab-a3f7-9320596f9533",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Thanks for splitting this up, it's MUCH more understandable now.\n\nI feel bad asking for more changes, but it seems like this function and becomeMaster would both be improved by returning a bool and not a string?\n",
        "createdAt" : "2014-08-15T17:35:02Z",
        "updatedAt" : "2014-08-15T18:42:39Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "a2ac5e64-fcd2-4f16-9952-bffdb360cd03",
        "parentId" : "fa4112e6-f38d-47ab-a3f7-9320596f9533",
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "Actually, I had it returning a bool, but then the code looks like:\n\n``` go\nfunc (...) becomeMaster(...) (bool, error) {\n// bunch of if/else here\n}\n\nfunc (...) handleMaster(...) (string, error) {\n master, err := becomeMaster(...)\n if err != nil {\n   ...\n } else if master {\n  ...\n } else {\n  ...\n}\n```\n\nAnd I found that having the big if/else block in the handleMaster function kind of broke it up and made it harder to read, so while it is a little wonky to have becomeMaster return a string instead of a boolean, I actually think it makes the code more readable, since you can simply say:\n\n``` go\nreturn e.becomeMaster(...)\n```\n\nI can change it if you prefer.\n",
        "createdAt" : "2014-08-15T18:42:31Z",
        "updatedAt" : "2014-08-15T18:42:39Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "a17acd30eeebcea402863ece5e57b238cd81af78",
    "line" : 78,
    "diffHunk" : "@@ -1,1 +76,80 @@// returns id, nil if extension succeeded\n// returns \"\", err if an error occurred\nfunc (e *etcdMasterElector) extendMaster(path, id string, ttl uint64, res *etcd.Response) (string, error) {\n\t// If it matches the passed in id, extend the lease by writing a new entry.\n\t// Uses compare and swap, so that if we TTL out in the meantime, the write will fail."
  },
  {
    "id" : "7588685a-0703-4510-a8c4-97b1b5fa2f01",
    "prId" : 780,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "448d960a-1be6-48a2-b213-0f88ab336896",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "document that it's possible to return \"\", nil for some cases?\n",
        "createdAt" : "2014-08-15T17:36:15Z",
        "updatedAt" : "2014-08-15T18:42:39Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "09826d08-6ba2-47f0-859f-1a15a4d30c58",
        "parentId" : "448d960a-1be6-48a2-b213-0f88ab336896",
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "done.\n",
        "createdAt" : "2014-08-15T18:42:28Z",
        "updatedAt" : "2014-08-15T18:42:39Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "a17acd30eeebcea402863ece5e57b238cd81af78",
    "line" : null,
    "diffHunk" : "@@ -1,1 +112,116 @@// in situations where you should try again due to concurrent state changes (e.g. another actor simultaneously acquiring the lock)\n// it returns \"\", nil\nfunc (e *etcdMasterElector) handleMaster(path, id string, ttl uint64) (string, error) {\n\tres, err := e.etcd.Get(path, false, false)\n"
  }
]