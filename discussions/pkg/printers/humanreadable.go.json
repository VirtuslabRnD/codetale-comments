[
  {
    "id" : "fe139fee-9b58-47dc-89de-c7825d6f7ed0",
    "prId" : 71548,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/71548#pullrequestreview-207777183",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "07271d09-d0e8-40bf-9fa6-4a247fa540a6",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "we don't need the column definitions for anything non-display-related?",
        "createdAt" : "2019-02-25T03:04:07Z",
        "updatedAt" : "2019-03-08T18:04:12Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "815f07ab-4fa9-4618-8895-fc8d9cbcfb2b",
        "parentId" : "07271d09-d0e8-40bf-9fa6-4a247fa540a6",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "In the code path that results in a table being created, no.  If you somehow always wired this to true and sent it to the server, `kubectl` would not correctly handle priority.\r\n\r\nHowever, for all non-watch cases getting no headers is assumed you know what you are asking for (tabular data without headers), while in watch cases we define the behavior explicitly.",
        "createdAt" : "2019-02-26T06:19:06Z",
        "updatedAt" : "2019-03-08T18:04:12Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "3230a0b4fd14a6166f8362d4732e199e8779c426",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +512,516 @@\tvar columns []metav1beta1.TableColumnDefinition\n\tif !options.NoHeaders {\n\t\tcolumns = handler.columnDefinitions\n\t\tif !options.Wide {\n\t\t\tcolumns = make([]metav1beta1.TableColumnDefinition, 0, len(handler.columnDefinitions))"
  },
  {
    "id" : "797a4214-f1a8-4304-bb1c-beb306828be2",
    "prId" : 63105,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/63105#pullrequestreview-115714782",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "228b4af8-f7a1-411f-a353-058311572799",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "follow-up - don't gate on nil encoder if we don't need it",
        "createdAt" : "2018-04-26T19:21:47Z",
        "updatedAt" : "2018-04-26T19:21:47Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "b8177bb9af74f2a49942a659269b43e73201837d",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +298,302 @@\t// check if the object is unstructured. If so, let's attempt to convert it to a type we can understand before\n\t// trying to print, since the printers are keyed by type. This is extremely expensive.\n\tif h.encoder != nil && h.decoder != nil {\n\t\tobj, _ = decodeUnknownObject(obj, h.decoder)\n\t}"
  },
  {
    "id" : "30b08e70-0fbe-4177-b81c-b3ad4682d3e6",
    "prId" : 61985,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/61985#pullrequestreview-108508833",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "166ad72a-0302-45cb-9de5-6d51f4e6b171",
        "parentId" : null,
        "authorId" : "3c1422a0-6358-4857-8f56-961979171514",
        "body" : "The string will include non-empty `Group` name as well, right? Do we really want it like this?",
        "createdAt" : "2018-04-01T03:47:27Z",
        "updatedAt" : "2018-04-01T04:24:36Z",
        "lastEditedBy" : "3c1422a0-6358-4857-8f56-961979171514",
        "tags" : [
        ]
      },
      {
        "id" : "49a5c751-3f45-4ba7-914d-b6f9c90ffdd3",
        "parentId" : "166ad72a-0302-45cb-9de5-6d51f4e6b171",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "Yes. That matches the format already used by `-o name`. If the group is non-empty, the kind by itself is ambiguous",
        "createdAt" : "2018-04-01T04:20:33Z",
        "updatedAt" : "2018-04-01T04:24:36Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "3b8a570437d8818091ef17368e253a9efe86b9e9",
    "line" : 61,
    "diffHunk" : "@@ -1,1 +778,782 @@\t}\n\n\treturn strings.ToLower(kind.String()) + \"/\" + name\n}\n"
  },
  {
    "id" : "08b925ab-a0d9-4734-8c30-efcbc529b2bd",
    "prId" : 44222,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/44222#pullrequestreview-32204199",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2f4e8671-b41f-4d01-965a-499f1a9117c8",
        "parentId" : null,
        "authorId" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "body" : "Does this always discover the same fields?  Is the order always the same?",
        "createdAt" : "2017-04-11T18:14:17Z",
        "updatedAt" : "2017-04-17T18:43:18Z",
        "lastEditedBy" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "tags" : [
        ]
      },
      {
        "id" : "ad8e751f-24a6-494f-827c-10951ba9a0de",
        "parentId" : "2f4e8671-b41f-4d01-965a-499f1a9117c8",
        "authorId" : "ad267631-96d1-4bad-b913-e8d6342e65a2",
        "body" : "Yes, here in get the order is always the same so it will always discover the same fields.",
        "createdAt" : "2017-04-11T19:26:23Z",
        "updatedAt" : "2017-04-17T18:43:18Z",
        "lastEditedBy" : "ad267631-96d1-4bad-b913-e8d6342e65a2",
        "tags" : [
        ]
      }
    ],
    "commit" : "b276f17b6db3d58845d3395acc9c5d0031bc9c00",
    "line" : 47,
    "diffHunk" : "@@ -1,1 +229,233 @@\t\tignoreIfDiscovered := []string{\"kind\", \"apiVersion\"} // these are already covered\n\t\tfor field, value := range content {\n\t\t\tif slice.ContainsString(ignoreIfDiscovered, field, nil) {\n\t\t\t\tcontinue\n\t\t\t}"
  },
  {
    "id" : "16b6f1a9-1855-4119-8e93-d8f510a49ab1",
    "prId" : 44222,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/44222#pullrequestreview-32529009",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9b925e04-f817-4236-8708-86bc2ff05f83",
        "parentId" : null,
        "authorId" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "body" : "Is there a test for this?",
        "createdAt" : "2017-04-12T15:11:20Z",
        "updatedAt" : "2017-04-17T18:43:18Z",
        "lastEditedBy" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "tags" : [
        ]
      },
      {
        "id" : "2c58286a-083b-4d82-8145-5476d5f7106c",
        "parentId" : "9b925e04-f817-4236-8708-86bc2ff05f83",
        "authorId" : "ad267631-96d1-4bad-b913-e8d6342e65a2",
        "body" : "Added some in `humanreadable_test.go`.",
        "createdAt" : "2017-04-13T01:15:12Z",
        "updatedAt" : "2017-04-17T18:43:18Z",
        "lastEditedBy" : "ad267631-96d1-4bad-b913-e8d6342e65a2",
        "tags" : [
        ]
      }
    ],
    "commit" : "b276f17b6db3d58845d3395acc9c5d0031bc9c00",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +205,209 @@\n\tif _, err := meta.Accessor(obj); err == nil {\n\t\t// we don't recognize this type, but we can still attempt to print some reasonable information about.\n\t\tunstructured, ok := obj.(runtime.Unstructured)\n\t\tif !ok {"
  },
  {
    "id" : "e3477854-ffd5-4cd3-8329-4c1a9bbe900d",
    "prId" : 41729,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/41729#pullrequestreview-23050371",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "77aac8b0-fe2e-4797-a3c4-e1ec1c6fbaad",
        "parentId" : null,
        "authorId" : "ad267631-96d1-4bad-b913-e8d6342e65a2",
        "body" : "Ha, I had a branch proposing this move to a separate file. It was growing huge. :)",
        "createdAt" : "2017-02-21T19:36:58Z",
        "updatedAt" : "2017-02-23T05:28:37Z",
        "lastEditedBy" : "ad267631-96d1-4bad-b913-e8d6342e65a2",
        "tags" : [
        ]
      }
    ],
    "commit" : "651188d68753d9379f19308f754842e354e789c8",
    "line" : 48,
    "diffHunk" : "@@ -1,1 +46,50 @@// will only be printed if the object type changes. This makes it useful for printing items\n// received from watches.\ntype HumanReadablePrinter struct {\n\thandlerMap   map[reflect.Type]*handlerEntry\n\toptions      PrintOptions"
  }
]