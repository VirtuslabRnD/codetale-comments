[
  {
    "id" : "06bbdf08-002a-45fc-a862-65e8a15cba0c",
    "prId" : 100142,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/100142#pullrequestreview-670239480",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "df2e8232-d6af-477e-9224-f56964d18bbd",
        "parentId" : null,
        "authorId" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "body" : "No need for this condition, `translateTimestampSince` will return `<unknown>` for zero value. ",
        "createdAt" : "2021-05-27T11:39:52Z",
        "updatedAt" : "2021-05-27T11:41:35Z",
        "lastEditedBy" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "tags" : [
        ]
      },
      {
        "id" : "cf0c1529-48be-4f39-b3ff-3efc5e6dc076",
        "parentId" : "df2e8232-d6af-477e-9224-f56964d18bbd",
        "authorId" : "403e8785-0355-46aa-b8d4-e3a5abe7a4da",
        "body" : "Good to know, thank you!",
        "createdAt" : "2021-05-27T14:14:06Z",
        "updatedAt" : "2021-05-27T14:14:07Z",
        "lastEditedBy" : "403e8785-0355-46aa-b8d4-e3a5abe7a4da",
        "tags" : [
        ]
      }
    ],
    "commit" : "9eea445bcce11b17f3d009f0528f0003fd9f5a37",
    "line" : 49,
    "diffHunk" : "@@ -1,1 +840,844 @@\n\trestartsStr := strconv.Itoa(restarts)\n\tif !lastRestartDate.IsZero() {\n\t\trestartsStr = fmt.Sprintf(\"%d (%s ago)\", restarts, translateTimestampSince(lastRestartDate))\n\t}"
  },
  {
    "id" : "c261b4e2-ab2d-4ddb-9ddc-a803a5b3aadb",
    "prId" : 92542,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/92542#pullrequestreview-444514708",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e2993dac-f415-416c-a3be-fbb5850b654e",
        "parentId" : null,
        "authorId" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "body" : "If I'm reading the proposal and code correctly, there's no need to add one here.",
        "createdAt" : "2020-07-07T19:50:25Z",
        "updatedAt" : "2020-07-08T10:12:11Z",
        "lastEditedBy" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "tags" : [
        ]
      },
      {
        "id" : "017fc367-1064-4ef3-a793-36116b63dc64",
        "parentId" : "e2993dac-f415-416c-a3be-fbb5850b654e",
        "authorId" : "411a526b-e74b-4a8d-beca-dc8fb83b6907",
        "body" : "When a series is created for the first time, its [count is set to 1](https://github.com/kubernetes/client-go/blob/v0.19.0-beta.2/tools/events/event_broadcaster.go#L168-L171). However, for a series to be created, there needs to be an isomorphic singleton event created beforehand. This singleton event is not counted in the series count which is why I added one here.",
        "createdAt" : "2020-07-08T08:17:48Z",
        "updatedAt" : "2020-07-08T10:12:11Z",
        "lastEditedBy" : "411a526b-e74b-4a8d-beca-dc8fb83b6907",
        "tags" : [
        ]
      }
    ],
    "commit" : "ceb8c2fbf41c128017c959807484cc4935acd8ba",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +1687,1691 @@\t\t// singleton event created beforehand. This singleton event is not\n\t\t// counted in the series count which is why one is added here.\n\t\tcount = obj.Series.Count + 1\n\t} else if count == 0 {\n\t\t// Singleton events don't have a count set in the new API."
  },
  {
    "id" : "1757f388-124a-4508-b746-d4b793cee4c5",
    "prId" : 92064,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/92064#pullrequestreview-431174171",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4561d66c-aa68-4c19-9ade-52ff7cd071d5",
        "parentId" : null,
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "Can you add a test for the printer?",
        "createdAt" : "2020-06-16T05:41:10Z",
        "updatedAt" : "2020-09-09T02:14:58Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "07506ab3848557d69e25e4dd61fe01064799283f",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +575,579 @@\th.TableHandler(priorityLevelColumnDefinitions, printPriorityLevelConfigurationList)\n\n\tstorageVersionColumnDefinitions := []metav1.TableColumnDefinition{\n\t\t{Name: \"Name\", Type: \"string\", Format: \"name\", Description: metav1.ObjectMeta{}.SwaggerDoc()[\"name\"]},\n\t\t{Name: \"CommonEncodingVersion\", Type: \"string\", Description: apiserverinternalv1alpha1.StorageVersionStatus{}.SwaggerDoc()[\"commonEncodingVersion\"]},"
  },
  {
    "id" : "50e5b7b4-59b6-44f7-b097-3d6a9f92a2ab",
    "prId" : 92064,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/92064#pullrequestreview-465103438",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "90ac00f7-cc0f-427a-bca7-f5dc9a8f757d",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "~~are there no status fields it would be useful to show?~~\r\n\r\nedit: I see CommonEncodingVersion was added, but in the \"test misc\" commit, which is confusing... suggest squashing the test misc commit into the main commit.",
        "createdAt" : "2020-08-11T14:10:04Z",
        "updatedAt" : "2020-09-09T02:14:58Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "07506ab3848557d69e25e4dd61fe01064799283f",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +579,583 @@\t\t{Name: \"CommonEncodingVersion\", Type: \"string\", Description: apiserverinternalv1alpha1.StorageVersionStatus{}.SwaggerDoc()[\"commonEncodingVersion\"]},\n\t\t{Name: \"StorageVersions\", Type: \"string\", Description: apiserverinternalv1alpha1.StorageVersionStatus{}.SwaggerDoc()[\"storageVersions\"]},\n\t\t{Name: \"Age\", Type: \"string\", Description: metav1.ObjectMeta{}.SwaggerDoc()[\"creationTimestamp\"]},\n\t}\n\th.TableHandler(storageVersionColumnDefinitions, printStorageVersion)"
  },
  {
    "id" : "037e0701-b536-4286-8ee6-80127cf15a1b",
    "prId" : 91939,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/91939#pullrequestreview-429518863",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8e59e692-67f2-42ff-8f1d-0650b873083d",
        "parentId" : null,
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "Is this table going to look strange because topology is not there?  (I also don't have any idea of how to display topology)",
        "createdAt" : "2020-06-10T22:42:14Z",
        "updatedAt" : "2020-07-03T19:55:18Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "d3bca4cf-b1b1-4c9f-9420-8d753f2869b6",
        "parentId" : "8e59e692-67f2-42ff-8f1d-0650b873083d",
        "authorId" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "body" : "I'm a bit unsure how this information is used. Adding it was necessary to pass the server-side printing test and I thought that it would be used by \"kubectl get\" - I even think I saw that happening. But when I just tried again, \"kubectl get\" just printed name and creation date:\r\n```\r\n$ cat capacity.yaml\r\napiVersion: storage.k8s.io/v1alpha1\r\nkind: CSIStorageCapacity\r\nmetadata:\r\n  name: foo1\r\nspec:\r\n  driverName: foo\r\n  storageClassName: bar\r\n---\r\napiVersion: storage.k8s.io/v1alpha1\r\nkind: CSIStorageCapacity\r\nmetadata:\r\n  name: foo2\r\nspec:\r\n  driverName: foo\r\n  storageClassName: bar\r\nstatus:\r\n  availableCapacity: 1Gi\r\n$ kubectl create -f capacity.yaml\r\ncsistoragecapacity.storage.k8s.io/foo1 created\r\ncsistoragecapacity.storage.k8s.io/foo2 created\r\n$ kubectl get csistoragecapacity.storage.k8s.io\r\nNAME   CREATED AT\r\nfoo1   2020-06-12T08:05:29Z\r\nfoo2   2020-06-12T08:05:29Z\r\n```\r\n\r\nAs you said, even if all columns were printed, there's no good way to visualize topology in such a table, so the output is not very useful.\r\n\r\nUltimately, `CSIStorageCapacity` is not something that can be consumed by a human. I'm therefore not worried about how much information is printed by \"kubectl get\".\r\n\r\nHaving said that, it would be good to understand better how this table definition and the corresponding code are used and what we want to list here.",
        "createdAt" : "2020-06-12T08:11:01Z",
        "updatedAt" : "2020-07-03T19:55:18Z",
        "lastEditedBy" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "tags" : [
        ]
      }
    ],
    "commit" : "9a66e8e1b5820027c1747cff052d335e29597fc2",
    "line" : 41,
    "diffHunk" : "@@ -1,1 +526,530 @@\th.TableHandler(csiDriverColumnDefinitions, printCSIDriverList)\n\n\tcsiStorageCapacityColumnDefinitions := []metav1.TableColumnDefinition{\n\t\t{Name: \"Name\", Type: \"string\", Format: \"name\", Description: metav1.ObjectMeta{}.SwaggerDoc()[\"name\"]},\n\t\t{Name: \"StorageClassName\", Type: \"string\", Description: storagev1alpha1.CSIStorageCapacity{}.SwaggerDoc()[\"storageClassName\"]},"
  },
  {
    "id" : "94ac369f-600a-4f72-bd70-7bad1d80ec6c",
    "prId" : 91939,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/91939#pullrequestreview-429518863",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bc347b86-fbdb-4a09-8442-3c6b03c8eabc",
        "parentId" : null,
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "Is \"kubectl describe\" also handled by this, or is that elsewhere?",
        "createdAt" : "2020-06-10T23:02:08Z",
        "updatedAt" : "2020-07-03T19:55:18Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "70c90b1f-d346-4d12-845e-3ba33bd879d6",
        "parentId" : "bc347b86-fbdb-4a09-8442-3c6b03c8eabc",
        "authorId" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "body" : "I think it is handled based on the meta data about the type. It works, including the topology:\r\n```\r\n$ cat capacity-with-topology.yaml\r\napiVersion: storage.k8s.io/v1alpha1\r\nkind: CSIStorageCapacity\r\nmetadata:\r\n  name: foo-with-labels\r\nspec:\r\n  driverName: foo\r\n  storageClassName: bar\r\n  nodeTopology:\r\n    nodeSelectorTerms:\r\n    - matchExpressions:\r\n      - key: nodename\r\n        operator: In\r\n        values:\r\n        - node1\r\n$ kubectl create -f capacity-with-topology.yaml\r\ncsistoragecapacity.storage.k8s.io/foo-with-labels created\r\n$ kubectl describe csistoragecapacity.storage.k8s.io/foo-with-labels\r\nName:         foo-with-labels\r\nNamespace:    \r\nLabels:       <none>\r\nAnnotations:  <none>\r\nAPI Version:  storage.k8s.io/v1alpha1\r\nKind:         CSIStorageCapacity\r\nMetadata:\r\n  Creation Timestamp:  2020-06-12T08:15:35Z\r\n  Managed Fields:\r\n    API Version:  storage.k8s.io/v1alpha1\r\n    Fields Type:  FieldsV1\r\n    fieldsV1:\r\n      f:spec:\r\n        f:driverName:\r\n        f:nodeTopology:\r\n          .:\r\n          f:nodeSelectorTerms:\r\n        f:storageClassName:\r\n    Manager:         kubectl\r\n    Operation:       Update\r\n    Time:            2020-06-12T08:15:35Z\r\n  Resource Version:  494\r\n  Self Link:         /apis/storage.k8s.io/v1alpha1/csistoragecapacities/foo-with-labels\r\n  UID:               b20fa64c-c1b0-4513-8549-5ffae8d02f2a\r\nSpec:\r\n  Driver Name:  foo\r\n  Node Topology:\r\n    Node Selector Terms:\r\n      Match Expressions:\r\n        Key:       nodename\r\n        Operator:  In\r\n        Values:\r\n          node1\r\n  Storage Class Name:  bar\r\nStatus:\r\nEvents:  <none>\r\n```",
        "createdAt" : "2020-06-12T08:17:16Z",
        "updatedAt" : "2020-07-03T19:55:18Z",
        "lastEditedBy" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "tags" : [
        ]
      }
    ],
    "commit" : "9a66e8e1b5820027c1747cff052d335e29597fc2",
    "line" : 73,
    "diffHunk" : "@@ -1,1 +1400,1404 @@}\n\nfunc printCSIStorageCapacity(obj *storage.CSIStorageCapacity, options printers.GenerateOptions) ([]metav1.TableRow, error) {\n\trow := metav1.TableRow{\n\t\tObject: runtime.RawExtension{Object: obj},"
  },
  {
    "id" : "a1adc449-22ed-46fc-9a29-5692a58dadaa",
    "prId" : 90691,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/90691#pullrequestreview-439226417",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "30609740-fead-48bc-94cf-6e137e30ab57",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "cc @kubernetes/sig-cli-pr-reviews ",
        "createdAt" : "2020-06-29T15:40:43Z",
        "updatedAt" : "2020-10-21T19:17:39Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "0fec7b0f7e2dfd4b0c6c57e086472546f6c69efa",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +2043,2047 @@\t\t\t\tlist = append(list, fmt.Sprintf(\"%s/%s\", current, target))\n\t\t\t}\n\t\tcase autoscaling.ContainerResourceMetricSourceType:\n\t\t\tif spec.ContainerResource.Target.AverageValue != nil {\n\t\t\t\tcurrent := \"<unknown>\""
  },
  {
    "id" : "89c291f1-c5aa-48c6-a125-9edab781834e",
    "prId" : 85321,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/85321#pullrequestreview-351350725",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0befcd8b-4b3b-442c-8a35-c891e05889a2",
        "parentId" : null,
        "authorId" : "bc182326-9017-48d6-8ee0-4609046c1366",
        "body" : "does it make sense to add(or replace) a `ActualConcurrencyShares`, users may be more curious about the actual shares.",
        "createdAt" : "2020-01-19T14:38:11Z",
        "updatedAt" : "2020-01-31T18:33:36Z",
        "lastEditedBy" : "bc182326-9017-48d6-8ee0-4609046c1366",
        "tags" : [
        ]
      },
      {
        "id" : "4abb8eed-54d7-447f-b14b-399e67a941a6",
        "parentId" : "0befcd8b-4b3b-442c-8a35-c891e05889a2",
        "authorId" : "7a59a326-58b3-4590-b70a-297d2e27daa5",
        "body" : "I can understand the curiosity, but the printer is the wrong party to source that information.\r\n\r\nNow that you mention it, the config controller could put that in status --- every apiserver should be computing the same value, so they should not get in a fight about it.",
        "createdAt" : "2020-01-20T06:18:29Z",
        "updatedAt" : "2020-01-31T18:33:36Z",
        "lastEditedBy" : "7a59a326-58b3-4590-b70a-297d2e27daa5",
        "tags" : [
        ]
      },
      {
        "id" : "1fab9db1-cae7-4479-b224-4a90ba3a1d44",
        "parentId" : "0befcd8b-4b3b-442c-8a35-c891e05889a2",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Yes, that is a great thing for status. We can render it into concurrent requests, not just shares.",
        "createdAt" : "2020-01-31T00:31:02Z",
        "updatedAt" : "2020-01-31T18:33:36Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "1d245315-82d7-4f4e-9ad0-40f0acab6fc9",
        "parentId" : "0befcd8b-4b3b-442c-8a35-c891e05889a2",
        "authorId" : "bc182326-9017-48d6-8ee0-4609046c1366",
        "body" : "we can print the both in one column e.g.:\r\n```\r\nACTUAL/REQUEST\r\n30/100\r\n<unknown>/100            # when the condition is missing\r\n<none>/<none>            # exempt\r\n```",
        "createdAt" : "2020-01-31T08:26:36Z",
        "updatedAt" : "2020-01-31T18:33:36Z",
        "lastEditedBy" : "bc182326-9017-48d6-8ee0-4609046c1366",
        "tags" : [
        ]
      }
    ],
    "commit" : "ff8256de3f1eb57b6570c10a4b41dd320b8ca4d1",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +536,540 @@\t\t{Name: \"Name\", Type: \"string\", Format: \"name\", Description: metav1.ObjectMeta{}.SwaggerDoc()[\"name\"]},\n\t\t{Name: \"Type\", Type: \"string\", Description: flowcontrolv1alpha1.PriorityLevelConfigurationSpec{}.SwaggerDoc()[\"type\"]},\n\t\t{Name: \"AssuredConcurrencyShares\", Type: \"string\", Description: flowcontrolv1alpha1.LimitedPriorityLevelConfiguration{}.SwaggerDoc()[\"assuredConcurrencyShares\"]},\n\t\t{Name: \"Queues\", Type: \"string\", Description: flowcontrolv1alpha1.QueuingConfiguration{}.SwaggerDoc()[\"queues\"]},\n\t\t{Name: \"HandSize\", Type: \"string\", Description: flowcontrolv1alpha1.QueuingConfiguration{}.SwaggerDoc()[\"handSize\"]},"
  },
  {
    "id" : "bef2184f-c85f-4f0c-8bce-2ae14a29e6ba",
    "prId" : 84299,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/84299#pullrequestreview-313416287",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b18d7f7b-65a4-460d-b2cf-ba7cf55d28e5",
        "parentId" : null,
        "authorId" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "body" : "I spoke with storage and they suggested adding also `AllowVolumeExpansion` and `VolumeBindingMode` wdyt?",
        "createdAt" : "2019-11-07T09:55:25Z",
        "updatedAt" : "2019-11-07T15:06:45Z",
        "lastEditedBy" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "tags" : [
        ]
      },
      {
        "id" : "6fcf362d-a8ac-48f7-8fff-926f2c01eb81",
        "parentId" : "b18d7f7b-65a4-460d-b2cf-ba7cf55d28e5",
        "authorId" : "c36d7654-ffec-4c9c-964e-b4b2e70085d0",
        "body" : "Thanks for view, I would  add it. \r\n\r\nI also think it is needed, `get result` of StorageClass is too simple  now, it just contains the name and provisioner.",
        "createdAt" : "2019-11-07T10:02:27Z",
        "updatedAt" : "2019-11-07T15:06:45Z",
        "lastEditedBy" : "c36d7654-ffec-4c9c-964e-b4b2e70085d0",
        "tags" : [
        ]
      },
      {
        "id" : "9013cabb-49b7-4858-ab29-77ea245520d6",
        "parentId" : "b18d7f7b-65a4-460d-b2cf-ba7cf55d28e5",
        "authorId" : "c36d7654-ffec-4c9c-964e-b4b2e70085d0",
        "body" : "@soltysh I have updated the PR",
        "createdAt" : "2019-11-07T15:20:26Z",
        "updatedAt" : "2019-11-07T15:20:26Z",
        "lastEditedBy" : "c36d7654-ffec-4c9c-964e-b4b2e70085d0",
        "tags" : [
        ]
      }
    ],
    "commit" : "1488e1e6ef7cb1a7f8d6bb179907a8548458baf9",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +411,415 @@\t\t{Name: \"Name\", Type: \"string\", Format: \"name\", Description: metav1.ObjectMeta{}.SwaggerDoc()[\"name\"]},\n\t\t{Name: \"Provisioner\", Type: \"string\", Description: storagev1.StorageClass{}.SwaggerDoc()[\"provisioner\"]},\n\t\t{Name: \"ReclaimPolicy\", Type: \"string\", Description: storagev1.StorageClass{}.SwaggerDoc()[\"reclaimPolicy\"]},\n\t\t{Name: \"VolumeBindingMode\", Type: \"string\", Description: storagev1.StorageClass{}.SwaggerDoc()[\"volumeBindingMode\"]},\n\t\t{Name: \"AllowVolumeExpansion\", Type: \"string\", Description: storagev1.StorageClass{}.SwaggerDoc()[\"allowVolumeExpansion\"]},"
  },
  {
    "id" : "707d8013-2971-4d06-8263-40ef71fea467",
    "prId" : 84299,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/84299#pullrequestreview-313417499",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c0fddfea-2bf8-4111-b25f-bff13a7cd10c",
        "parentId" : null,
        "authorId" : "c36d7654-ffec-4c9c-964e-b4b2e70085d0",
        "body" : "According to our docs, \r\ndefault value of ReclaimPolicy is `Delete`\r\nVolumeBindingImmediate is `Immediate`\r\nVolumeBindingImmediate is `false`",
        "createdAt" : "2019-11-07T15:22:01Z",
        "updatedAt" : "2019-11-07T15:22:01Z",
        "lastEditedBy" : "c36d7654-ffec-4c9c-964e-b4b2e70085d0",
        "tags" : [
        ]
      }
    ],
    "commit" : "1488e1e6ef7cb1a7f8d6bb179907a8548458baf9",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +1877,1881 @@\n\trow.Cells = append(row.Cells, name, provtype, reclaimPolicy, volumeBindingMode, allowVolumeExpansion,\n\t\ttranslateTimestampSince(obj.CreationTimestamp))\n\n\treturn []metav1beta1.TableRow{row}, nil"
  },
  {
    "id" : "c08e986d-3fcf-491f-a020-590d43cb89e0",
    "prId" : 73894,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/73894#pullrequestreview-203502225",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "23cf2148-1f24-4220-b22e-e5653fefd9e6",
        "parentId" : null,
        "authorId" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "body" : "I thought \"%s %s\" is more friendly to copy/paste",
        "createdAt" : "2019-02-13T23:26:58Z",
        "updatedAt" : "2019-02-13T23:26:58Z",
        "lastEditedBy" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "25e0a8f56c361dab99e760952cf132dd7f1f7b4a",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +1388,1392 @@\tvar target string\n\tif len(obj.InvolvedObject.Name) > 0 {\n\t\ttarget = fmt.Sprintf(\"%s/%s\", strings.ToLower(obj.InvolvedObject.Kind), obj.InvolvedObject.Name)\n\t} else {\n\t\ttarget = strings.ToLower(obj.InvolvedObject.Kind)"
  },
  {
    "id" : "fb7b283b-ee3c-4e3c-9922-726b48f4d5d0",
    "prId" : 70466,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/70466#pullrequestreview-172807809",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6fa551ba-7ec2-4cc4-af65-a5ce7ec0726b",
        "parentId" : null,
        "authorId" : "fca7b84b-1803-4fd3-ba20-341c32db5623",
        "body" : "Since the idea is to merge `current/desired` to `ready`, I don't think this renaming is worthy.",
        "createdAt" : "2018-11-08T03:10:25Z",
        "updatedAt" : "2018-11-10T02:41:11Z",
        "lastEditedBy" : "fca7b84b-1803-4fd3-ba20-341c32db5623",
        "tags" : [
        ]
      },
      {
        "id" : "05115107-42ab-4cdb-90ae-16bf8df4b97e",
        "parentId" : "6fa551ba-7ec2-4cc4-af65-a5ce7ec0726b",
        "authorId" : "fca7b84b-1803-4fd3-ba20-341c32db5623",
        "body" : "Sorry, but could you explain why to choose `obj.Status.ReadyReplicas` instead of `obj.Status.Replicas` here?",
        "createdAt" : "2018-11-08T03:16:25Z",
        "updatedAt" : "2018-11-10T02:41:11Z",
        "lastEditedBy" : "fca7b84b-1803-4fd3-ba20-341c32db5623",
        "tags" : [
        ]
      },
      {
        "id" : "e287406e-52f4-487c-90e2-96b799f3522e",
        "parentId" : "6fa551ba-7ec2-4cc4-af65-a5ce7ec0726b",
        "authorId" : "01fd6d15-1b8f-4203-9be4-8588255695db",
        "body" : "I think it will make  ambiguous sometimes for users.\r\nsometimes , the pod is not Ready, but the current and desired is equal. the Ready (1/1) will make users think the deployment is available. \r\n```\r\n[root@hpa-vm:/etc/kubernetes]$ kubectl get deploy\r\nNAME               READY   UP-TO-DATE   AVAILABLE   AGE\r\nnginx-deployment   1/1     1           0           45m\r\n```\r\nOR we can using CURRENT instead of READY?\r\nI dont think `Ready `is a good idea to show ` current/desired`",
        "createdAt" : "2018-11-08T04:14:37Z",
        "updatedAt" : "2018-11-10T02:41:11Z",
        "lastEditedBy" : "01fd6d15-1b8f-4203-9be4-8588255695db",
        "tags" : [
        ]
      },
      {
        "id" : "29c78bd9-f6b6-4855-8783-df2ccbb082da",
        "parentId" : "6fa551ba-7ec2-4cc4-af65-a5ce7ec0726b",
        "authorId" : "fca7b84b-1803-4fd3-ba20-341c32db5623",
        "body" : "Thanks, that's making sense now. I'll defer the choice to @kubernetes/sig-cli-feature-requests ",
        "createdAt" : "2018-11-08T05:12:01Z",
        "updatedAt" : "2018-11-10T02:41:11Z",
        "lastEditedBy" : "fca7b84b-1803-4fd3-ba20-341c32db5623",
        "tags" : [
        ]
      }
    ],
    "commit" : "182a66f9b74e38d75422e6242a7793b96ddbd5fa",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +1041,1045 @@\t}\n\tdesiredReplicas := obj.Spec.Replicas\n\treadyReplicas := obj.Status.ReadyReplicas\n\tcreateTime := translateTimestampSince(obj.CreationTimestamp)\n\trow.Cells = append(row.Cells, obj.Name, fmt.Sprintf(\"%d/%d\", int64(readyReplicas), int64(desiredReplicas)), createTime)"
  },
  {
    "id" : "fb827a4f-2679-4364-9ec0-6f8e07ba8410",
    "prId" : 70466,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/70466#pullrequestreview-172791809",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f5aeb8ca-fdc1-4d50-a4cf-a7a3f6ca64a8",
        "parentId" : null,
        "authorId" : "fca7b84b-1803-4fd3-ba20-341c32db5623",
        "body" : "same here ^",
        "createdAt" : "2018-11-08T03:10:46Z",
        "updatedAt" : "2018-11-10T02:41:11Z",
        "lastEditedBy" : "fca7b84b-1803-4fd3-ba20-341c32db5623",
        "tags" : [
        ]
      }
    ],
    "commit" : "182a66f9b74e38d75422e6242a7793b96ddbd5fa",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +1561,1565 @@\tdesiredReplicas := obj.Spec.Replicas\n\tupdatedReplicas := obj.Status.UpdatedReplicas\n\treadyReplicas := obj.Status.ReadyReplicas\n\tavailableReplicas := obj.Status.AvailableReplicas\n\tage := translateTimestampSince(obj.CreationTimestamp)"
  },
  {
    "id" : "826a0dea-86b1-4f49-b773-2fe41b682caf",
    "prId" : 67622,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/67622#pullrequestreview-148106994",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "33e3fb04-09cc-4387-acfd-1011d04ce2f4",
        "parentId" : null,
        "authorId" : "bcebf3b5-032b-4720-ba66-12ac441f6151",
        "body" : "Small comment might be helpful here to describe the reason for the if/else or what you are doing differently.",
        "createdAt" : "2018-08-21T04:06:35Z",
        "updatedAt" : "2018-08-21T15:36:40Z",
        "lastEditedBy" : "bcebf3b5-032b-4720-ba66-12ac441f6151",
        "tags" : [
        ]
      },
      {
        "id" : "c05c2835-28cc-436c-a0d8-d5d6bb3680cd",
        "parentId" : "33e3fb04-09cc-4387-acfd-1011d04ce2f4",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "roger",
        "createdAt" : "2018-08-21T15:35:30Z",
        "updatedAt" : "2018-08-21T15:36:57Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "06b785ca5286c08592d50b4c0a4fe5b63e5040d6",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +483,487 @@\tfor i := range endpoints.Subsets {\n\t\tss := &endpoints.Subsets[i]\n\t\tif len(ss.Ports) == 0 {\n\t\t\t// It's possible to have headless services with no ports.\n\t\t\tfor i := range ss.Addresses {"
  },
  {
    "id" : "53d97ec1-ba0b-4a3e-b19c-0c0bab14d7a2",
    "prId" : 60424,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/60424#pullrequestreview-99404858",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b660607d-4522-43b8-b4a5-b0b23a978823",
        "parentId" : null,
        "authorId" : "3a4b4830-dc71-4d7e-a7db-de2453284945",
        "body" : "need to differentiate between \"value\" and \"average value\"",
        "createdAt" : "2018-02-26T16:02:36Z",
        "updatedAt" : "2018-02-26T17:54:06Z",
        "lastEditedBy" : "3a4b4830-dc71-4d7e-a7db-de2453284945",
        "tags" : [
        ]
      },
      {
        "id" : "5af6b4b2-7263-4e2d-8758-8a8a97c1ca0d",
        "parentId" : "b660607d-4522-43b8-b4a5-b0b23a978823",
        "authorId" : "f9af27d1-0db5-440a-9fbe-25f430076fa5",
        "body" : "Added \"(avg)\" to the average value. I don't think there is room for much more (don't want to stretch the presentation too much)",
        "createdAt" : "2018-02-26T17:56:27Z",
        "updatedAt" : "2018-02-26T17:56:45Z",
        "lastEditedBy" : "f9af27d1-0db5-440a-9fbe-25f430076fa5",
        "tags" : [
        ]
      },
      {
        "id" : "ed6712fc-a1f3-48f2-8e7d-92b87c2703f9",
        "parentId" : "b660607d-4522-43b8-b4a5-b0b23a978823",
        "authorId" : "3a4b4830-dc71-4d7e-a7db-de2453284945",
        "body" : "ack, that's what I was looking for",
        "createdAt" : "2018-02-26T18:04:05Z",
        "updatedAt" : "2018-02-26T18:04:05Z",
        "lastEditedBy" : "3a4b4830-dc71-4d7e-a7db-de2453284945",
        "tags" : [
        ]
      }
    ],
    "commit" : "d003550bd2004953a8d966dcfd5089e9bd5e1a87",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +1504,1508 @@\t\t\t\t\tcurrent = statuses[i].External.CurrentValue.String()\n\t\t\t\t}\n\t\t\t\tlist = append(list, fmt.Sprintf(\"%s/%s\", current, spec.External.TargetValue.String()))\n\t\t\t}\n\t\tcase autoscaling.PodsMetricSourceType:"
  },
  {
    "id" : "234d8131-80df-48a2-809d-8768d9d04bc1",
    "prId" : 51173,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/51173#pullrequestreview-57979288",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4d09f8cc-daf3-451c-8ab1-25f9efefa8b8",
        "parentId" : null,
        "authorId" : "3c1422a0-6358-4857-8f56-961979171514",
        "body" : "Seems we've only got `node-role.kubernetes.io/master` for now.",
        "createdAt" : "2017-08-23T05:30:23Z",
        "updatedAt" : "2017-08-23T13:35:19Z",
        "lastEditedBy" : "3c1422a0-6358-4857-8f56-961979171514",
        "tags" : [
        ]
      },
      {
        "id" : "cd9edce7-d23a-4c6f-8b04-5a7b90b5b187",
        "parentId" : "4d09f8cc-daf3-451c-8ab1-25f9efefa8b8",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "The point of that format was to support multiple roles, and to allow things like this to treat roles generically",
        "createdAt" : "2017-08-23T05:57:13Z",
        "updatedAt" : "2017-08-23T13:35:19Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "10687447cb2d11aab44c5a8845f78285e4190ef8",
    "line" : 67,
    "diffHunk" : "@@ -1,1 +1202,1206 @@// findNodeRoles returns the roles of a given node.\n// The roles are determined by looking for:\n// * a node-role.kubernetes.io/<role>=\"\" label\n// * a kubernetes.io/role=\"<role>\" label\nfunc findNodeRoles(node *api.Node) []string {"
  },
  {
    "id" : "1addfa40-4458-4d4a-9833-68127e2011c1",
    "prId" : 51173,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/51173#pullrequestreview-58079135",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a72bf832-20c1-4882-a67b-43b946847366",
        "parentId" : null,
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "You can remove this now; as this is only the prefix; not the well-known value for the master",
        "createdAt" : "2017-08-23T06:55:50Z",
        "updatedAt" : "2017-08-23T13:35:19Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      },
      {
        "id" : "330bf616-cbd6-4232-b375-2f1163bc24b5",
        "parentId" : "a72bf832-20c1-4882-a67b-43b946847366",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "I'd expect the prefix constant to be made part of the linked PR",
        "createdAt" : "2017-08-23T13:31:28Z",
        "updatedAt" : "2017-08-23T13:35:19Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "10687447cb2d11aab44c5a8845f78285e4190ef8",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +64,68 @@\n\t// labelNodeRolePrefix is a label prefix for node roles\n\t// It's copied over to here until it's merged in core: https://github.com/kubernetes/kubernetes/pull/39112\n\tlabelNodeRolePrefix = \"node-role.kubernetes.io/\"\n"
  },
  {
    "id" : "0b410888-5f25-4c0d-8248-0b0cf5a8b2c7",
    "prId" : 50438,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/50438#pullrequestreview-57093637",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2a6054c8-534b-4289-9969-1396eb8a5a24",
        "parentId" : null,
        "authorId" : "b1ad4056-936e-4ce6-ab7b-55870c4e6024",
        "body" : "Is this a TODO? If so, I would reference this pull request (#50438) and specify exactly what has to happen for the TODO to be executed.",
        "createdAt" : "2017-08-17T15:39:39Z",
        "updatedAt" : "2017-08-17T15:42:34Z",
        "lastEditedBy" : "b1ad4056-936e-4ce6-ab7b-55870c4e6024",
        "tags" : [
        ]
      },
      {
        "id" : "35fc9aa1-2356-4226-b4ae-ce8bd682c847",
        "parentId" : "2a6054c8-534b-4289-9969-1396eb8a5a24",
        "authorId" : "3c1422a0-6358-4857-8f56-961979171514",
        "body" : "Just copy from `cmd/kubeadm/app/apis/kubeadm/well_known_labels.go`. We should not use `cmd` packages in `pkg`.",
        "createdAt" : "2017-08-18T01:09:45Z",
        "updatedAt" : "2017-08-18T01:14:13Z",
        "lastEditedBy" : "3c1422a0-6358-4857-8f56-961979171514",
        "tags" : [
        ]
      },
      {
        "id" : "ca2ee791-d9c2-475b-8fd5-1893b71f0f54",
        "parentId" : "2a6054c8-534b-4289-9969-1396eb8a5a24",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Yes, pkgs in `cmd` can never be referenced from `pkg`.  @deads2k we should make sure there is an import rule for this.",
        "createdAt" : "2017-08-18T01:17:16Z",
        "updatedAt" : "2017-08-18T01:17:16Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "568d809b24a012adeca8dc9c626a8e8be451a833",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +64,68 @@\n\t// LabelNodeRoleMaster specifies that a node is a master\n\t// It's copied over to here until it's merged in core: https://github.com/kubernetes/kubernetes/pull/39112\n\tLabelNodeRoleMaster = \"node-role.kubernetes.io/master\"\n"
  },
  {
    "id" : "5186f934-309e-4d20-a845-f7383bbc9cff",
    "prId" : 50438,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/50438#pullrequestreview-57092877",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "821dc53b-5461-4fe9-9682-645be8a69966",
        "parentId" : null,
        "authorId" : "b1ad4056-936e-4ce6-ab7b-55870c4e6024",
        "body" : "Why `strings.Title`?",
        "createdAt" : "2017-08-17T15:40:20Z",
        "updatedAt" : "2017-08-17T15:42:34Z",
        "lastEditedBy" : "b1ad4056-936e-4ce6-ab7b-55870c4e6024",
        "tags" : [
        ]
      },
      {
        "id" : "213196a1-1aff-4cf2-ac07-91d90096d4b3",
        "parentId" : "821dc53b-5461-4fe9-9682-645be8a69966",
        "authorId" : "3c1422a0-6358-4857-8f56-961979171514",
        "body" : "@alexandercampbell To make first letter of words uppercase, such as \"node\" -> \"Node\".",
        "createdAt" : "2017-08-18T01:08:24Z",
        "updatedAt" : "2017-08-18T01:14:12Z",
        "lastEditedBy" : "3c1422a0-6358-4857-8f56-961979171514",
        "tags" : [
        ]
      }
    ],
    "commit" : "568d809b24a012adeca8dc9c626a8e8be451a833",
    "line" : 48,
    "diffHunk" : "@@ -1,1 +1217,1221 @@\t}\n\tif role := node.Labels[NodeLabelKubeadmAlphaRole]; role != \"\" {\n\t\treturn strings.Title(role)\n\t}\n\treturn \"\""
  },
  {
    "id" : "3c4a11aa-6335-4379-bd17-b9650eddcaf2",
    "prId" : 50438,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/50438#pullrequestreview-57917124",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c75a4699-75ab-4702-9471-20b6b6c9a2ec",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "Is there a doc somewhere else that clarifies why a boolean \"is master\" label (a valueless key) is better than the enum-ish \"role\" label below?",
        "createdAt" : "2017-08-22T15:18:52Z",
        "updatedAt" : "2017-08-22T15:18:52Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "49172401-a916-42ea-9346-97cea10df466",
        "parentId" : "c75a4699-75ab-4702-9471-20b6b6c9a2ec",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "I haven't been part of the discussion here, so I assume it has happened and I just need a catch-up.  why is this not a taint?  I don't like the idea of explicit roles, especially in a self-hosted world.  The \"master\" might be spread around the cluster.",
        "createdAt" : "2017-08-22T15:20:30Z",
        "updatedAt" : "2017-08-22T15:20:30Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "42510383-70c1-489d-894e-be26e7e1d261",
        "parentId" : "c75a4699-75ab-4702-9471-20b6b6c9a2ec",
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "@philips @jbeda  ^\r\n\r\n@thockin has been discussed in various forums, can see if I can dig something up; but basically it gives us the possibility to eventually easily support multiple well-known roles _for the same node_.\r\ni.e. can be both master (`\"node-role.kubernetes.io/master\"`) and whatever else we might come up with.",
        "createdAt" : "2017-08-22T15:21:52Z",
        "updatedAt" : "2017-08-22T15:21:52Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      },
      {
        "id" : "2c5b4ea3-89bd-454a-b737-c73b5c3e1f07",
        "parentId" : "c75a4699-75ab-4702-9471-20b6b6c9a2ec",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "I just scanned #39112 - is it right to move ahead with this priority order while that is left unresolved?",
        "createdAt" : "2017-08-22T15:24:58Z",
        "updatedAt" : "2017-08-22T15:24:58Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "89003463-5d93-4359-97a9-f9c410507e4b",
        "parentId" : "c75a4699-75ab-4702-9471-20b6b6c9a2ec",
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "@thockin It's also used as a taint :)",
        "createdAt" : "2017-08-22T15:25:33Z",
        "updatedAt" : "2017-08-22T15:25:34Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      },
      {
        "id" : "62782dbd-2a0c-458a-808d-b019ec165503",
        "parentId" : "c75a4699-75ab-4702-9471-20b6b6c9a2ec",
        "authorId" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "body" : "Afaik a taint alone cannot guarantee that a pod ends up on a master node. So this is both the label and the taint. 39112 has been agreed, although we probably need the steering committee to get it merged.\r\n\r\nAs for delaying this further, this fixes a regression in kubectl where it does not identify the master. It is an annoying regression, having hit it in the real world.",
        "createdAt" : "2017-08-22T15:37:54Z",
        "updatedAt" : "2017-08-22T15:37:54Z",
        "lastEditedBy" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "tags" : [
        ]
      },
      {
        "id" : "8d17628e-586d-4f1a-adb1-eff19c568a3d",
        "parentId" : "c75a4699-75ab-4702-9471-20b6b6c9a2ec",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "I thought the agreement was on a pattern for role labels, not special-casing one or two roles in kubectl, etc",
        "createdAt" : "2017-08-22T21:24:36Z",
        "updatedAt" : "2017-08-22T21:24:36Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "568d809b24a012adeca8dc9c626a8e8be451a833",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +65,69 @@\t// LabelNodeRoleMaster specifies that a node is a master\n\t// It's copied over to here until it's merged in core: https://github.com/kubernetes/kubernetes/pull/39112\n\tLabelNodeRoleMaster = \"node-role.kubernetes.io/master\"\n\n\t// NodeLabelRole specifies the role of a node"
  },
  {
    "id" : "104b4f36-582f-43b1-bc78-2c1823b3aeb8",
    "prId" : 50438,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/50438#pullrequestreview-57917828",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "054cb797-44dc-4cbd-b6f5-1fac7caed595",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "this seems like exactly the sort of special-casing we should not do, given the discussion in https://github.com/kubernetes/kubernetes/pull/39112 about nodes being able to have multiple roles. Wasn't the purpose of the selected label pattern to allow arbitrary roles, and multiple roles per node?",
        "createdAt" : "2017-08-22T21:22:35Z",
        "updatedAt" : "2017-08-22T21:22:35Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "d044e369-e823-4d3b-b44b-c7bffb2f5827",
        "parentId" : "054cb797-44dc-4cbd-b6f5-1fac7caed595",
        "authorId" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "body" : "I think you're right, but I think here we're still undoing the bad PRs that got us to this regression.",
        "createdAt" : "2017-08-22T21:27:11Z",
        "updatedAt" : "2017-08-22T21:27:11Z",
        "lastEditedBy" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "tags" : [
        ]
      }
    ],
    "commit" : "568d809b24a012adeca8dc9c626a8e8be451a833",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +1209,1213 @@// * a kubernetes.io/role label\n// * a kubeadm.alpha.kubernetes.io/role label\nfunc findNodeRole(node *api.Node) string {\n\tif _, ok := node.Labels[LabelNodeRoleMaster]; ok {\n\t\treturn \"Master\""
  },
  {
    "id" : "698c566f-6b8d-47d2-b38d-2792c7ad16bf",
    "prId" : 50438,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/50438#pullrequestreview-57975976",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6994cd51-7d1e-4312-8f85-86d87a89b566",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "this is inverting the relationship between kubectl/apiserver and kubeadm... our printers don't special-case display of kubeadm labels",
        "createdAt" : "2017-08-22T21:38:37Z",
        "updatedAt" : "2017-08-22T21:38:37Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "920fe346-3629-4dde-a016-b09ff1923ce8",
        "parentId" : "6994cd51-7d1e-4312-8f85-86d87a89b566",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "> \"kubeadm.alpha.kubernetes.io/role\" has been deprecated for a long time and I'll remove it right after this PR merges. It is included here purely for the revert-style behavior of this PR\r\n\r\nlet's not reintroduce it in this PR, then",
        "createdAt" : "2017-08-22T21:42:33Z",
        "updatedAt" : "2017-08-22T21:42:33Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "a1983d21-495f-4c15-abbe-a19a59031eb4",
        "parentId" : "6994cd51-7d1e-4312-8f85-86d87a89b566",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "opened #51173 as a follow-up",
        "createdAt" : "2017-08-23T05:25:49Z",
        "updatedAt" : "2017-08-23T05:25:49Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "568d809b24a012adeca8dc9c626a8e8be451a833",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +72,76 @@\t// NodeLabelKubeadmAlphaRole is a label that kubeadm applies to a Node as a hint that it has a particular purpose.\n\t// Use of NodeLabelRole is preferred.\n\tNodeLabelKubeadmAlphaRole = \"kubeadm.alpha.kubernetes.io/role\"\n)\n"
  },
  {
    "id" : "5349e9bb-71ca-4fc2-b5e9-04276cf97e43",
    "prId" : 48655,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/48655#pullrequestreview-54803049",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9aaec156-0266-451f-9d28-094c2517546a",
        "parentId" : null,
        "authorId" : "b1ad4056-936e-4ce6-ab7b-55870c4e6024",
        "body" : "Would it make sense to print a warning message if duplicates are filtered?",
        "createdAt" : "2017-07-13T21:01:42Z",
        "updatedAt" : "2017-07-29T03:57:00Z",
        "lastEditedBy" : "b1ad4056-936e-4ce6-ab7b-55870c4e6024",
        "tags" : [
        ]
      },
      {
        "id" : "fa762664-c1cf-4918-b033-3fcab0b17c95",
        "parentId" : "9aaec156-0266-451f-9d28-094c2517546a",
        "authorId" : "5fe5bdb9-52d3-4f2d-8554-f12673e65198",
        "body" : "Yes, it can.",
        "createdAt" : "2017-07-14T04:10:38Z",
        "updatedAt" : "2017-07-29T03:57:00Z",
        "lastEditedBy" : "5fe5bdb9-52d3-4f2d-8554-f12673e65198",
        "tags" : [
        ]
      },
      {
        "id" : "7c65f15b-8852-497a-86e4-d6c523299ed5",
        "parentId" : "9aaec156-0266-451f-9d28-094c2517546a",
        "authorId" : "b1ad4056-936e-4ce6-ab7b-55870c4e6024",
        "body" : "Will you add that to this PR?",
        "createdAt" : "2017-08-01T17:37:15Z",
        "updatedAt" : "2017-08-01T17:37:15Z",
        "lastEditedBy" : "b1ad4056-936e-4ce6-ab7b-55870c4e6024",
        "tags" : [
        ]
      },
      {
        "id" : "ffb58ad5-f9d7-489c-8b55-a4e0edef7b9d",
        "parentId" : "9aaec156-0266-451f-9d28-094c2517546a",
        "authorId" : "5fe5bdb9-52d3-4f2d-8554-f12673e65198",
        "body" : "@alexandercampbell Sorry, after checking the code again, the duplicate IPs are passed by ingress, but 'kubectl get' doesn't filter it, my PR adds codes  to filter it and make it simpler to user. So I think that printing a warning message is unnecessary, do you think so? If not, I will add a warning meesage. ",
        "createdAt" : "2017-08-02T01:46:39Z",
        "updatedAt" : "2017-08-02T01:53:32Z",
        "lastEditedBy" : "5fe5bdb9-52d3-4f2d-8554-f12673e65198",
        "tags" : [
        ]
      },
      {
        "id" : "605fb369-b038-4388-8b47-b9356cbe0f1d",
        "parentId" : "9aaec156-0266-451f-9d28-094c2517546a",
        "authorId" : "b1ad4056-936e-4ce6-ab7b-55870c4e6024",
        "body" : "I see. Yep, the way it is looks fine to me. Thanks for following up!",
        "createdAt" : "2017-08-07T23:39:37Z",
        "updatedAt" : "2017-08-07T23:39:37Z",
        "lastEditedBy" : "b1ad4056-936e-4ce6-ab7b-55870c4e6024",
        "tags" : [
        ]
      }
    ],
    "commit" : "11e8f3a88dddcac5f83490eb44ff05a43e1ab113",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +708,712 @@\t\t\tresult.Insert(ingress[i].IP)\n\t\t} else if ingress[i].Hostname != \"\" {\n\t\t\tresult.Insert(ingress[i].Hostname)\n\t\t}\n\t}"
  }
]