[
  {
    "id" : "4c8d2414-4a97-414e-bfd1-d78a8297f684",
    "prId" : 67432,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/67432#pullrequestreview-147084430",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0cc0fd16-e4c1-4de2-9213-fa9325909617",
        "parentId" : null,
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "Can you paste an example of the output?",
        "createdAt" : "2018-08-16T20:50:27Z",
        "updatedAt" : "2018-08-29T02:30:34Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "7a812c88-6a53-42ed-8f70-9848014dcde7",
        "parentId" : "0cc0fd16-e4c1-4de2-9213-fa9325909617",
        "authorId" : "1a75d411-1ce5-48f2-9967-25f88794c451",
        "body" : "![out](https://user-images.githubusercontent.com/12265352/44245103-b7fcbf00-a209-11e8-82ae-1d18c2b0e1af.JPG)\r\n\r\nSimilar to that of node affinity",
        "createdAt" : "2018-08-17T02:47:36Z",
        "updatedAt" : "2018-08-29T02:30:34Z",
        "lastEditedBy" : "1a75d411-1ce5-48f2-9967-25f88794c451",
        "tags" : [
        ]
      }
    ],
    "commit" : "eefd337ba0e89b3c3d74ee57355370ad50f91992",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +3486,3490 @@}\n\nfunc printAllowedTopologies(w PrefixWriter, topologies []api.TopologySelectorTerm) {\n\tw.Write(LEVEL_0, \"AllowedTopologies:\\t\")\n\tif len(topologies) == 0 {"
  },
  {
    "id" : "919a745c-c9e1-49d6-8c94-3663fddeb980",
    "prId" : 65837,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/65837#pullrequestreview-135018878",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "67fc2214-9c23-4bea-a906-d3ffc114ee64",
        "parentId" : null,
        "authorId" : "0385dfd1-e8a7-41a8-8213-eabe697d14cd",
        "body" : "Maybe we should set a limit as part of ListOptions in order to chunk potentially large responses? Don't feel strongly on this though cc @soltysh ",
        "createdAt" : "2018-07-05T21:42:43Z",
        "updatedAt" : "2018-07-06T14:42:20Z",
        "lastEditedBy" : "0385dfd1-e8a7-41a8-8213-eabe697d14cd",
        "tags" : [
        ]
      },
      {
        "id" : "f36d9985-63d6-4385-adad-fa323a08136d",
        "parentId" : "67fc2214-9c23-4bea-a906-d3ffc114ee64",
        "authorId" : "4206e90d-333d-427e-8157-2675812102d7",
        "body" : "I don't see any other usages of limiting `ListOptions` for other describe operations, so I figure that it hasn't been an issue yet. I have no opinion on the matter though. If you think we should set a limit, I will. ",
        "createdAt" : "2018-07-06T03:53:30Z",
        "updatedAt" : "2018-07-06T14:42:20Z",
        "lastEditedBy" : "4206e90d-333d-427e-8157-2675812102d7",
        "tags" : [
        ]
      },
      {
        "id" : "59452402-2621-4027-81e8-3c2fd08de948",
        "parentId" : "67fc2214-9c23-4bea-a906-d3ffc114ee64",
        "authorId" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "body" : "I don't expect that list to be that long, besides `kubectl describe` can and should be verbose. It's in the `kubectl get` where we try to save space with `more...` and similar. ",
        "createdAt" : "2018-07-06T13:42:19Z",
        "updatedAt" : "2018-07-06T14:42:20Z",
        "lastEditedBy" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "tags" : [
        ]
      }
    ],
    "commit" : "d956994857e8e47cbb21ac4765c2db2562640364",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +1305,1309 @@\nfunc getMountPods(c coreclient.PodInterface, pvcName string) ([]api.Pod, error) {\n\tnsPods, err := c.List(metav1.ListOptions{})\n\tif err != nil {\n\t\treturn []api.Pod{}, err"
  },
  {
    "id" : "0ddfcc2e-a8e9-4ae8-8387-8e6b1c16fcd9",
    "prId" : 60195,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/60195#pullrequestreview-129597379",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1d7e60a4-7181-4296-84be-1c6eac8d71b7",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "do you want to  print `nil` for EndpointsNamespace or show the PVC namespace?",
        "createdAt" : "2018-06-05T19:19:12Z",
        "updatedAt" : "2018-11-06T10:23:29Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "31e58653-6f0a-4d9a-a49d-7438b3ce5a0c",
        "parentId" : "1d7e60a4-7181-4296-84be-1c6eac8d71b7",
        "authorId" : "3eb39df2-c27a-40ed-9fab-cabae1c6353d",
        "body" : "I was thinking  that, it can be nil or a namespace which is in the spec. Are you saying its going to be `nil` always ?",
        "createdAt" : "2018-06-17T06:59:05Z",
        "updatedAt" : "2018-11-06T10:23:29Z",
        "lastEditedBy" : "3eb39df2-c27a-40ed-9fab-cabae1c6353d",
        "tags" : [
        ]
      },
      {
        "id" : "b6f260f4-1303-4696-a619-7d95659c49bf",
        "parentId" : "1d7e60a4-7181-4296-84be-1c6eac8d71b7",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "it's nil by default... I guess we don't have the namespace of the pvc here to display in that case",
        "createdAt" : "2018-06-18T14:49:38Z",
        "updatedAt" : "2018-11-06T10:23:29Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "bdb051c72d836af2ab477dd23c4ff3fa06bbc1f4",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +936,940 @@\t\t\"    Path:\\t%v\\n\"+\n\t\t\"    ReadOnly:\\t%v\\n\",\n\t\tglusterfs.EndpointsName, glusterfs.EndpointsNamespace, glusterfs.Path, glusterfs.ReadOnly)\n}\n"
  },
  {
    "id" : "7d390b04-5605-4c46-baa2-0784e3cfc503",
    "prId" : 59701,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/59701#pullrequestreview-101405331",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "db476169-f22c-4dba-ba36-df420f700e8f",
        "parentId" : null,
        "authorId" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "body" : "Have you verified the ouput manually? We don't really set `LastProbeTime` currently but a future version of k8s may start setting it, so it makes sense to display it but we don't want to display incorrect value. ",
        "createdAt" : "2018-03-05T15:31:18Z",
        "updatedAt" : "2018-03-17T07:35:02Z",
        "lastEditedBy" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "tags" : [
        ]
      },
      {
        "id" : "8373db98-c746-4185-b0ef-6c52d0f7d07b",
        "parentId" : "db476169-f22c-4dba-ba36-df420f700e8f",
        "authorId" : "ea65316b-7fdf-4fe0-99b0-2d437bf2580e",
        "body" : "I set `LastProbeTime` to `time.Now()` manually and the output is as below, It looks right:\r\n```\r\nConditions:\r\n  Type                      Status  LastProbeTime                     LastTransitionTime                Reason  Message\r\n  ----                      ------  -----------------                 ------------------                ------  -------\r\n  FileSystemResizePending   True    Tue, 06 Mar 2018 10:54:09 +0800   Tue, 06 Mar 2018 10:53:59 +0800           Waiting for user to (re-)start a pod to finish file system resize of volume on node.\r\n\r\n```",
        "createdAt" : "2018-03-06T02:57:28Z",
        "updatedAt" : "2018-03-17T07:35:02Z",
        "lastEditedBy" : "ea65316b-7fdf-4fe0-99b0-2d437bf2580e",
        "tags" : [
        ]
      }
    ],
    "commit" : "c29728f220e5d973b2faafec66eb7a2ed613d400",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +1273,1277 @@\t\t\t\t\tc.Type,\n\t\t\t\t\tc.Status,\n\t\t\t\t\tc.LastProbeTime.Time.Format(time.RFC1123Z),\n\t\t\t\t\tc.LastTransitionTime.Time.Format(time.RFC1123Z),\n\t\t\t\t\tc.Reason,"
  },
  {
    "id" : "9896ba02-7b1e-4dfa-ba4e-ff840d8ae176",
    "prId" : 59701,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/59701#pullrequestreview-105793493",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "eadc22c8-f2cf-4f96-96c6-8ae668bbdc64",
        "parentId" : null,
        "authorId" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "body" : "We are doing something similar in `describeNode`, would you mind creating a helper function and place it there?",
        "createdAt" : "2018-03-20T13:20:37Z",
        "updatedAt" : "2018-03-20T13:20:44Z",
        "lastEditedBy" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "tags" : [
        ]
      },
      {
        "id" : "c3eaa7d7-c17a-4c9f-8945-0d565e4542a6",
        "parentId" : "eadc22c8-f2cf-4f96-96c6-8ae668bbdc64",
        "authorId" : "ea65316b-7fdf-4fe0-99b0-2d437bf2580e",
        "body" : "I'm not sure which code we can extract as a helper function, `pvc.Status.Conditions`(its type is `[]PersistentVolumeClaimCondition`) has a different type from `node.Status.Conditions`(its type is `[]NodeCondition`). If we really want to do this, we can only extract the print operation(as follows) as a helper function, Is this what you want?\r\n\r\n```go\r\nw.Write(LEVEL_1, \"%v \\t%v \\t%s \\t%s \\t%v \\t%v\\n\",\r\n\tc.Type,\r\n\tc.Status,\r\n\tc.LastProbeTime.Time.Format(time.RFC1123Z),\r\n\tc.LastTransitionTime.Time.Format(time.RFC1123Z),\r\n\tc.Reason,\r\n\tc.Message)\r\n```",
        "createdAt" : "2018-03-21T05:38:07Z",
        "updatedAt" : "2018-03-21T05:38:07Z",
        "lastEditedBy" : "ea65316b-7fdf-4fe0-99b0-2d437bf2580e",
        "tags" : [
        ]
      },
      {
        "id" : "eeebb0d1-d7bd-46f1-98a5-95f1c1c26c17",
        "parentId" : "eadc22c8-f2cf-4f96-96c6-8ae668bbdc64",
        "authorId" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "body" : "Ah, sorry my bad I didn't notice that.",
        "createdAt" : "2018-03-21T16:10:50Z",
        "updatedAt" : "2018-03-21T16:10:50Z",
        "lastEditedBy" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "tags" : [
        ]
      }
    ],
    "commit" : "c29728f220e5d973b2faafec66eb7a2ed613d400",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +1265,1269 @@\t\t\tw.Write(LEVEL_0, \"VolumeMode:\\t%v\\n\", *pvc.Spec.VolumeMode)\n\t\t}\n\t\tif len(pvc.Status.Conditions) > 0 {\n\t\t\tw.Write(LEVEL_0, \"Conditions:\\n\")\n\t\t\tw.Write(LEVEL_1, \"Type\\tStatus\\tLastProbeTime\\tLastTransitionTime\\tReason\\tMessage\\n\")"
  },
  {
    "id" : "ec1fbd0a-973a-4be8-a5d0-91ef5e04026c",
    "prId" : 59309,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/59309#pullrequestreview-94963284",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "661fc10e-0103-47e3-bf2f-3e61c43eac65",
        "parentId" : null,
        "authorId" : "b41ac763-2378-4c8a-a9bf-7a3dd4082826",
        "body" : "Good catch.\r\nWhat about codes from line 2907 to line 2910",
        "createdAt" : "2018-02-04T09:11:48Z",
        "updatedAt" : "2018-02-08T08:10:11Z",
        "lastEditedBy" : "b41ac763-2378-4c8a-a9bf-7a3dd4082826",
        "tags" : [
        ]
      },
      {
        "id" : "65d06e4e-6cd1-4b2c-97d7-4d38b510ac9e",
        "parentId" : "661fc10e-0103-47e3-bf2f-3e61c43eac65",
        "authorId" : "93df2e83-0c3f-4aca-8f83-bac5bb8543ff",
        "body" : "I considered that yesterday. according to my scenario, when set reserved == total, no pod will be scheduled.\r\nso I skip it. I did not trigger it yet =)",
        "createdAt" : "2018-02-04T09:55:12Z",
        "updatedAt" : "2018-02-08T08:10:11Z",
        "lastEditedBy" : "93df2e83-0c3f-4aca-8f83-bac5bb8543ff",
        "tags" : [
        ]
      },
      {
        "id" : "85fe3e82-73de-4c0f-9f16-6c95c242f5c3",
        "parentId" : "661fc10e-0103-47e3-bf2f-3e61c43eac65",
        "authorId" : "b41ac763-2378-4c8a-a9bf-7a3dd4082826",
        "body" : "Seems reasonable for me.",
        "createdAt" : "2018-02-08T05:54:09Z",
        "updatedAt" : "2018-02-08T08:10:11Z",
        "lastEditedBy" : "b41ac763-2378-4c8a-a9bf-7a3dd4082826",
        "tags" : [
        ]
      }
    ],
    "commit" : "ba2404fde0296fc51fe99ec757731490a07192a1",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +2918,2922 @@\treqs, limits := getPodsTotalRequestsAndLimits(nodeNonTerminatedPodsList)\n\tcpuReqs, cpuLimits, memoryReqs, memoryLimits := reqs[api.ResourceCPU], limits[api.ResourceCPU], reqs[api.ResourceMemory], limits[api.ResourceMemory]\n\tfractionCpuReqs := float64(0)\n\tfractionCpuLimits := float64(0)\n\tif allocatable.Cpu().MilliValue() != 0 {"
  },
  {
    "id" : "4f127121-acd0-4f31-bdd7-a768f855b279",
    "prId" : 59169,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/59169#pullrequestreview-93702703",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d8028f4b-394d-42ac-9312-18947d0cb871",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "deletion timestamps don't change.  They're still deleted at a particular time",
        "createdAt" : "2018-02-02T17:57:52Z",
        "updatedAt" : "2018-02-02T17:57:52Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "7364c4c019b7d4d1e3a8dea1a4e9f07ba6349a63",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +637,641 @@\t\tprintAnnotationsMultiline(w, \"Annotations\", pod.Annotations)\n\t\tif pod.DeletionTimestamp != nil {\n\t\t\tw.Write(LEVEL_0, \"Status:\\tTerminating (lasts %s)\\n\", translateTimestamp(*pod.DeletionTimestamp))\n\t\t\tw.Write(LEVEL_0, \"Termination Grace Period:\\t%ds\\n\", *pod.DeletionGracePeriodSeconds)\n\t\t} else {"
  },
  {
    "id" : "4967e2ad-8c59-44a0-931e-0066caafcada",
    "prId" : 58840,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/58840#pullrequestreview-91996250",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "46a63e44-60e2-4d90-9c21-2232653bcef9",
        "parentId" : null,
        "authorId" : "21b457d2-6f88-4a9f-8d5a-debafbcb6cfe",
        "body" : "@liggitt Do you remember, is it possible that this value will be `nil` (when the value of the `DefaultAllowPrivilegeEscalation` is used)?",
        "createdAt" : "2018-01-26T23:14:56Z",
        "updatedAt" : "2018-01-26T23:14:57Z",
        "lastEditedBy" : "21b457d2-6f88-4a9f-8d5a-debafbcb6cfe",
        "tags" : [
        ]
      }
    ],
    "commit" : "723c1ecb7899f63c0ec3f1ff003fea3e88386286",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +3393,3397 @@\n\t\tw.Write(LEVEL_1, \"Allow Privileged:\\t%t\\n\", psp.Spec.Privileged)\n\t\tw.Write(LEVEL_1, \"Allow Privilege Escalation:\\t%v\\n\", psp.Spec.AllowPrivilegeEscalation)\n\t\tw.Write(LEVEL_1, \"Default Add Capabilities:\\t%v\\n\", capsToString(psp.Spec.DefaultAddCapabilities))\n\t\tw.Write(LEVEL_1, \"Required Drop Capabilities:\\t%s\\n\", capsToString(psp.Spec.RequiredDropCapabilities))"
  },
  {
    "id" : "0f526df2-de64-4409-8231-12efbd9d35f4",
    "prId" : 56460,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/56460#pullrequestreview-79611025",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6446c62e-0dcf-4099-9987-2d589e409f53",
        "parentId" : null,
        "authorId" : "a7f673a6-4b23-4df6-aa10-f123fa9dcd5f",
        "body" : "interesting, there is never a unit test for flex",
        "createdAt" : "2017-11-28T14:34:52Z",
        "updatedAt" : "2017-12-15T05:53:35Z",
        "lastEditedBy" : "a7f673a6-4b23-4df6-aa10-f123fa9dcd5f",
        "tags" : [
        ]
      },
      {
        "id" : "6af4ad0a-ed9d-463a-b098-c09b68390c33",
        "parentId" : "6446c62e-0dcf-4099-9987-2d589e409f53",
        "authorId" : "34f61776-88da-4b26-aa20-3c4f92530d05",
        "body" : "and secrets injection is not tested anywhere",
        "createdAt" : "2017-11-28T19:31:38Z",
        "updatedAt" : "2017-12-15T05:53:35Z",
        "lastEditedBy" : "34f61776-88da-4b26-aa20-3c4f92530d05",
        "tags" : [
        ]
      }
    ],
    "commit" : "61369863b244a267725f1e75803819d68eea0e0e",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +1077,1081 @@}\n\nfunc printFlexPersistentVolumeSource(flex *api.FlexPersistentVolumeSource, w PrefixWriter) {\n\tw.Write(LEVEL_2, \"Type:\\tFlexVolume (a generic volume resource that is provisioned/attached using an exec based plugin)\\n\"+\n\t\t\"    Driver:\\t%v\\n\"+"
  },
  {
    "id" : "3423d886-4f63-47c2-9ffd-e6f9dfb28ff1",
    "prId" : 56460,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/56460#pullrequestreview-84429649",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d39d4a42-b15d-4d3e-b0e5-feb9ce61ab4e",
        "parentId" : null,
        "authorId" : "34f61776-88da-4b26-aa20-3c4f92530d05",
        "body" : "\\+",
        "createdAt" : "2017-11-28T18:37:08Z",
        "updatedAt" : "2017-12-15T05:53:35Z",
        "lastEditedBy" : "34f61776-88da-4b26-aa20-3c4f92530d05",
        "tags" : [
        ]
      },
      {
        "id" : "dabd4d80-b6f4-489b-81e1-4e4255fbaabb",
        "parentId" : "d39d4a42-b15d-4d3e-b0e5-feb9ce61ab4e",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "?",
        "createdAt" : "2017-11-28T19:37:22Z",
        "updatedAt" : "2017-12-15T05:53:35Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "42277e58-2db2-479a-8768-81308aef8437",
        "parentId" : "d39d4a42-b15d-4d3e-b0e5-feb9ce61ab4e",
        "authorId" : "34f61776-88da-4b26-aa20-3c4f92530d05",
        "body" : "Did you mean to have a '+' at the end instead of ','?",
        "createdAt" : "2017-11-28T20:10:58Z",
        "updatedAt" : "2017-12-15T05:53:35Z",
        "lastEditedBy" : "34f61776-88da-4b26-aa20-3c4f92530d05",
        "tags" : [
        ]
      },
      {
        "id" : "128d19d5-c90d-45e3-ace1-8f6f9947177d",
        "parentId" : "d39d4a42-b15d-4d3e-b0e5-feb9ce61ab4e",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "this was a copy/paste of the existing `printFlexVolumeSource` function with no changes other than the arg type",
        "createdAt" : "2017-11-28T20:13:13Z",
        "updatedAt" : "2017-12-15T05:53:35Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "f12a05ad-9363-4b9b-96a6-4c86286afe17",
        "parentId" : "d39d4a42-b15d-4d3e-b0e5-feb9ce61ab4e",
        "authorId" : "cb578771-ab57-49a0-afd6-27da11c87c6d",
        "body" : "Nice..",
        "createdAt" : "2017-11-28T22:09:54Z",
        "updatedAt" : "2017-12-15T05:53:35Z",
        "lastEditedBy" : "cb578771-ab57-49a0-afd6-27da11c87c6d",
        "tags" : [
        ]
      },
      {
        "id" : "317967dd-a137-497e-bb2a-7fbe36577015",
        "parentId" : "d39d4a42-b15d-4d3e-b0e5-feb9ce61ab4e",
        "authorId" : "21b457d2-6f88-4a9f-8d5a-debafbcb6cfe",
        "body" : "BTW it's already fixed: https://github.com/kubernetes/kubernetes/pull/57202",
        "createdAt" : "2017-12-19T12:12:05Z",
        "updatedAt" : "2017-12-19T12:12:05Z",
        "lastEditedBy" : "21b457d2-6f88-4a9f-8d5a-debafbcb6cfe",
        "tags" : [
        ]
      },
      {
        "id" : "1a651a38-c94e-40c6-9fb1-dd00951370af",
        "parentId" : "d39d4a42-b15d-4d3e-b0e5-feb9ce61ab4e",
        "authorId" : "21b457d2-6f88-4a9f-8d5a-debafbcb6cfe",
        "body" : "I've submitted another one to fix this particular case: https://github.com/kubernetes/kubernetes/pull/57399",
        "createdAt" : "2017-12-19T12:20:29Z",
        "updatedAt" : "2017-12-19T12:20:29Z",
        "lastEditedBy" : "21b457d2-6f88-4a9f-8d5a-debafbcb6cfe",
        "tags" : [
        ]
      }
    ],
    "commit" : "61369863b244a267725f1e75803819d68eea0e0e",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +1082,1086 @@\t\t\"    FSType:\\t%v\\n\"+\n\t\t\"    SecretRef:\\t%v\\n\"+\n\t\t\"    ReadOnly:\\t%v\\n\",\n\t\t\"    Options:\\t%v\\n\",\n\t\tflex.Driver, flex.FSType, flex.SecretRef, flex.ReadOnly, flex.Options)"
  },
  {
    "id" : "ee6a0b59-d79e-47c9-86de-76ded02484bf",
    "prId" : 54628,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/54628#pullrequestreview-72166070",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5780c291-5755-4bd6-ade5-87e59cad94d4",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "Our `List` method is sorted",
        "createdAt" : "2017-10-26T12:00:16Z",
        "updatedAt" : "2017-10-26T12:00:16Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "322c6b58486edafd2886cf6dddbce26fdd857827",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +2274,2278 @@\t\t\ttokenHeader: tokenSecretNames,\n\t\t}\n\t\tfor _, header := range sets.StringKeySet(types).List() {\n\t\t\tnames := types[header]\n\t\t\tif len(names) == 0 {"
  },
  {
    "id" : "eb345a2b-dd6c-4aa7-8cd7-2a8a004b6b94",
    "prId" : 51530,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/51530#pullrequestreview-77531271",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e63ba6bc-4d4d-4245-82f3-ebe83c1b2e49",
        "parentId" : null,
        "authorId" : "967a712d-9784-41d4-920d-42eaba99fb24",
        "body" : "@rootfs \r\nCan you show item name like this? Also namespace first would be good.\r\n\"SecretRef:\\tNamespace:%v, Name:%v\\n\"+\"\r\n\r\nCurrently, SecretRef is shown like this but adding item name is easy to read.\r\nSecretRef:          &{chap-secret default}",
        "createdAt" : "2017-11-17T18:54:14Z",
        "updatedAt" : "2017-11-18T20:05:49Z",
        "lastEditedBy" : "967a712d-9784-41d4-920d-42eaba99fb24",
        "tags" : [
        ]
      },
      {
        "id" : "03cf1fc8-25a4-499b-9e7f-388a26876e9a",
        "parentId" : "e63ba6bc-4d4d-4245-82f3-ebe83c1b2e49",
        "authorId" : "967a712d-9784-41d4-920d-42eaba99fb24",
        "body" : "Actually, adding item name to right side wasn't good idea. I withdraw above comment.\r\n```\r\n    Type:               ISCSI (an ISCSI Disk resource that is attached to a kubelet's host machine and then exposed to the pod)\r\n    TargetPortal:       x.x.x.x:3260\r\n    IQN:                iqn.2017-05.com.example:rhel7\r\n    Lun:                0\r\n    ISCSIInterface      default\r\n    FSType:             ext4\r\n    ReadOnly:           true\r\n    Portals:            [x.x.x.x:3260]\r\n    DiscoveryCHAPAuth:  false\r\n    SessionCHAPAuth:    true\r\n    SecretRef:          Namespace:default, Name:chap-secret\r\n    InitiatorName:      <none>\r\n```",
        "createdAt" : "2017-11-17T19:04:23Z",
        "updatedAt" : "2017-11-18T20:05:49Z",
        "lastEditedBy" : "967a712d-9784-41d4-920d-42eaba99fb24",
        "tags" : [
        ]
      }
    ],
    "commit" : "56ec6e10287c19c1a5fac574659b2809a61c734b",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +872,876 @@\t\t\"    DiscoveryCHAPAuth:\\t%v\\n\"+\n\t\t\"    SessionCHAPAuth:\\t%v\\n\"+\n\t\t\"    SecretRef:\\t%v\\n\"+\n\t\t\"    InitiatorName:\\t%v\\n\",\n\t\tiscsi.TargetPortal, iscsi.IQN, iscsi.Lun, iscsi.ISCSIInterface, iscsi.FSType, iscsi.ReadOnly, iscsi.Portals, iscsi.DiscoveryCHAPAuth, iscsi.SessionCHAPAuth, iscsi.SecretRef, initiatorName)"
  },
  {
    "id" : "53faec75-0b9d-4cb9-bfa2-5a3abf2d279d",
    "prId" : 48807,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/48807#pullrequestreview-49807844",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9325d47f-0c4d-4d8e-b880-cf2623203632",
        "parentId" : null,
        "authorId" : "a09f2d48-fec0-4c0d-bd81-6de7378a6ebf",
        "body" : "why do we need this conversion?",
        "createdAt" : "2017-07-12T17:38:45Z",
        "updatedAt" : "2017-07-12T17:39:20Z",
        "lastEditedBy" : "a09f2d48-fec0-4c0d-bd81-6de7378a6ebf",
        "tags" : [
        ]
      },
      {
        "id" : "89e6234a-65fe-46d9-8753-38779caa2511",
        "parentId" : "9325d47f-0c4d-4d8e-b880-cf2623203632",
        "authorId" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "body" : "not sure which conversion do you mean here...\r\n\r\n`fc.Lun` is `int32` and `Itoa` needs `int`. And all this code is there to protect the printer from `fc.Lun==nil`. Simple `w.Write(*fc.Lun)` looks too dangerous to me.",
        "createdAt" : "2017-07-13T08:30:15Z",
        "updatedAt" : "2017-07-13T08:30:16Z",
        "lastEditedBy" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "tags" : [
        ]
      },
      {
        "id" : "0178ffd9-2c14-4191-a5df-0167d071cae4",
        "parentId" : "9325d47f-0c4d-4d8e-b880-cf2623203632",
        "authorId" : "a09f2d48-fec0-4c0d-bd81-6de7378a6ebf",
        "body" : "I meant strconv.Itoa. The protection from `fc.Lun==nil` lgtm:)",
        "createdAt" : "2017-07-13T13:58:24Z",
        "updatedAt" : "2017-07-13T13:58:24Z",
        "lastEditedBy" : "a09f2d48-fec0-4c0d-bd81-6de7378a6ebf",
        "tags" : [
        ]
      },
      {
        "id" : "2390369b-9839-4802-8dc5-ab8488968378",
        "parentId" : "9325d47f-0c4d-4d8e-b880-cf2623203632",
        "authorId" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "body" : "I want to print something that's not an integer when `fc.Lun==nil`. Thats why I pre-fill `lun = \"none\"` and that's a string.",
        "createdAt" : "2017-07-13T14:27:36Z",
        "updatedAt" : "2017-07-13T14:27:36Z",
        "lastEditedBy" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "tags" : [
        ]
      },
      {
        "id" : "7f3fe8d8-60e0-4968-a75a-21564c2ae264",
        "parentId" : "9325d47f-0c4d-4d8e-b880-cf2623203632",
        "authorId" : "a09f2d48-fec0-4c0d-bd81-6de7378a6ebf",
        "body" : "sgtm:)",
        "createdAt" : "2017-07-13T15:04:27Z",
        "updatedAt" : "2017-07-13T15:04:27Z",
        "lastEditedBy" : "a09f2d48-fec0-4c0d-bd81-6de7378a6ebf",
        "tags" : [
        ]
      }
    ],
    "commit" : "09e241294f154d8c8bc5ca1e234dfe7889a4c511",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +967,971 @@\tlun := \"<none>\"\n\tif fc.Lun != nil {\n\t\tlun = strconv.Itoa(int(*fc.Lun))\n\t}\n\tw.Write(LEVEL_2, \"Type:\\tFC (a Fibre Channel disk)\\n\"+"
  },
  {
    "id" : "4424f60e-5996-4c0e-af11-8cdb2634330a",
    "prId" : 47573,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/47573#pullrequestreview-44252413",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9c9cdc9b-4d60-4466-b72f-d705e26994c6",
        "parentId" : null,
        "authorId" : "55c0e4a8-86f8-4426-a163-752ee421c57e",
        "body" : "a better way is to change %s to %v.",
        "createdAt" : "2017-06-15T05:27:07Z",
        "updatedAt" : "2017-06-15T05:27:07Z",
        "lastEditedBy" : "55c0e4a8-86f8-4426-a163-752ee421c57e",
        "tags" : [
        ]
      },
      {
        "id" : "db31dac2-ec72-4dd7-a9f4-8a38cca61889",
        "parentId" : "9c9cdc9b-4d60-4466-b72f-d705e26994c6",
        "authorId" : "72156db3-c40b-4455-9838-c12c0c606019",
        "body" : "`%v` will not work :(. Here's the output of `%v`:\r\n\r\n```\r\n  Capacity:\t{{1073741824 0} {<nil>} 1Gi BinarySI}\r\n```\r\n\r\nWhen we print an object by `%s` in go, it'll call object's `String()`; but `Quantity.String()` is using pointer (for caching string), we have to call it explicitly.\r\n\r\nShould be `func (q Quantity) String() string` not `func (q *Quantity) String() string` at https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/pkg/api/resource/quantity.go#L608 .",
        "createdAt" : "2017-06-15T06:31:32Z",
        "updatedAt" : "2017-06-15T06:31:32Z",
        "lastEditedBy" : "72156db3-c40b-4455-9838-c12c0c606019",
        "tags" : [
        ]
      },
      {
        "id" : "05369772-0928-4155-b2dc-a521c1aacd28",
        "parentId" : "9c9cdc9b-4d60-4466-b72f-d705e26994c6",
        "authorId" : "55c0e4a8-86f8-4426-a163-752ee421c57e",
        "body" : "you are right. probably worth fix the stringer interface thing. it just looks strange to explicitly call x.String()",
        "createdAt" : "2017-06-15T06:37:17Z",
        "updatedAt" : "2017-06-15T06:37:17Z",
        "lastEditedBy" : "55c0e4a8-86f8-4426-a163-752ee421c57e",
        "tags" : [
        ]
      },
      {
        "id" : "e4baac72-8c5f-46fd-8105-8afe6bdcead0",
        "parentId" : "9c9cdc9b-4d60-4466-b72f-d705e26994c6",
        "authorId" : "72156db3-c40b-4455-9838-c12c0c606019",
        "body" : "Agree. According to the comments, it use `(q *Quantity) String() ` for caching string, not sure the performance impact (e.g. build string every time); prefer to open an issue to trace it :).",
        "createdAt" : "2017-06-15T06:50:39Z",
        "updatedAt" : "2017-06-15T06:50:39Z",
        "lastEditedBy" : "72156db3-c40b-4455-9838-c12c0c606019",
        "tags" : [
        ]
      },
      {
        "id" : "0572dd9c-5de3-4d48-8936-4e31dd7da694",
        "parentId" : "9c9cdc9b-4d60-4466-b72f-d705e26994c6",
        "authorId" : "55c0e4a8-86f8-4426-a163-752ee421c57e",
        "body" : "sgtm",
        "createdAt" : "2017-06-15T06:55:49Z",
        "updatedAt" : "2017-06-15T06:55:49Z",
        "lastEditedBy" : "55c0e4a8-86f8-4426-a163-752ee421c57e",
        "tags" : [
        ]
      },
      {
        "id" : "18c21be7-c4c1-4b72-ab37-abfc12308a47",
        "parentId" : "9c9cdc9b-4d60-4466-b72f-d705e26994c6",
        "authorId" : "72156db3-c40b-4455-9838-c12c0c606019",
        "body" : "#47585 to trace the discussion.",
        "createdAt" : "2017-06-15T09:43:53Z",
        "updatedAt" : "2017-06-15T09:43:53Z",
        "lastEditedBy" : "72156db3-c40b-4455-9838-c12c0c606019",
        "tags" : [
        ]
      }
    ],
    "commit" : "d3efbfcd335630f649f68d1063b334844ef967c5",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +1383,1387 @@\t\tprintLabelsMultilineWithIndent(w, \"  \", \"Annotations\", \"\\t\", pvc.Annotations, sets.NewString())\n\t\tif capacity, ok := pvc.Spec.Resources.Requests[api.ResourceStorage]; ok {\n\t\t\tw.Write(LEVEL_1, \"Capacity:\\t%s\\n\", capacity.String())\n\t\t} else {\n\t\t\tw.Write(LEVEL_1, \"Capacity:\\t%s\\n\", \"<default>\")"
  },
  {
    "id" : "1edc81e9-fe60-4ea4-a698-9faf495c067c",
    "prId" : 46176,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/46176#pullrequestreview-39587955",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "496830ef-38a7-47c2-9a67-7020187a189b",
        "parentId" : null,
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "Do you want to print out the storage policy id too?",
        "createdAt" : "2017-05-22T20:22:35Z",
        "updatedAt" : "2017-05-23T02:45:39Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "377d25e9-dd0f-4d24-b489-b757dff5edd9",
        "parentId" : "496830ef-38a7-47c2-9a67-7020187a189b",
        "authorId" : "a52ffc16-075e-4ecb-8ec3-e5096ab48cb5",
        "body" : "No, we only want the storage policy name to be printed.",
        "createdAt" : "2017-05-22T21:14:29Z",
        "updatedAt" : "2017-05-23T02:45:39Z",
        "lastEditedBy" : "a52ffc16-075e-4ecb-8ec3-e5096ab48cb5",
        "tags" : [
        ]
      }
    ],
    "commit" : "eb3cf509e5d4a637bdb139ecc337d22e05dce019",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +882,886 @@\t\t\"    VolumePath:\\t%v\\n\"+\n\t\t\"    FSType:\\t%v\\n\",\n\t\t\"    StoragePolicyName:\\t%v\\n\",\n\t\tvsphere.VolumePath, vsphere.FSType, vsphere.StoragePolicyName)\n}"
  },
  {
    "id" : "0dc1d4cf-2091-4529-8e04-300b379b29b7",
    "prId" : 46124,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/46124#pullrequestreview-39493880",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b7174dd1-99ae-4e2a-9512-bc8f5cac2523",
        "parentId" : null,
        "authorId" : "a09f2d48-fec0-4c0d-bd81-6de7378a6ebf",
        "body" : "Also need to add `printCephFSVolumeSource` in `describePersistentVolume`. And I sent a PR #46210 to add other volume sources.",
        "createdAt" : "2017-05-22T11:43:08Z",
        "updatedAt" : "2017-05-23T15:05:07Z",
        "lastEditedBy" : "a09f2d48-fec0-4c0d-bd81-6de7378a6ebf",
        "tags" : [
        ]
      },
      {
        "id" : "0bbc59d2-ea80-48a2-ab91-3f07ffc9e4e6",
        "parentId" : "b7174dd1-99ae-4e2a-9512-bc8f5cac2523",
        "authorId" : "a7f673a6-4b23-4df6-aa10-f123fa9dcd5f",
        "body" : "good catch @xiangpengzhao ",
        "createdAt" : "2017-05-22T13:08:40Z",
        "updatedAt" : "2017-05-23T15:05:07Z",
        "lastEditedBy" : "a7f673a6-4b23-4df6-aa10-f123fa9dcd5f",
        "tags" : [
        ]
      },
      {
        "id" : "55f13ece-b09b-408b-bab1-5a6e7284deb1",
        "parentId" : "b7174dd1-99ae-4e2a-9512-bc8f5cac2523",
        "authorId" : "3eb39df2-c27a-40ed-9fab-cabae1c6353d",
        "body" : "Thanks @xiangpengzhao . I added to pv describe as well.",
        "createdAt" : "2017-05-22T14:36:31Z",
        "updatedAt" : "2017-05-23T15:05:07Z",
        "lastEditedBy" : "3eb39df2-c27a-40ed-9fab-cabae1c6353d",
        "tags" : [
        ]
      }
    ],
    "commit" : "8700776d261944b20db40e66f73567f90cc3ce5c",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +737,741 @@\t\t\tprintScaleIOVolumeSource(volume.VolumeSource.ScaleIO, w)\n\t\tcase volume.VolumeSource.CephFS != nil:\n\t\t\tprintCephFSVolumeSource(volume.VolumeSource.CephFS, w)\n\t\tdefault:\n\t\t\tw.Write(LEVEL_1, \"<unknown>\\n\")"
  },
  {
    "id" : "60d474c2-e51d-4486-9114-deb302a70fc8",
    "prId" : 45813,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/45813#pullrequestreview-39096960",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6b03b330-326d-4e86-8190-195fd62f0fd7",
        "parentId" : null,
        "authorId" : "21b457d2-6f88-4a9f-8d5a-debafbcb6cfe",
        "body" : "Out of curiosity: why do we need to a trailing tab in some cased? Would it work without it?",
        "createdAt" : "2017-05-18T10:48:32Z",
        "updatedAt" : "2017-07-28T09:06:43Z",
        "lastEditedBy" : "21b457d2-6f88-4a9f-8d5a-debafbcb6cfe",
        "tags" : [
        ]
      },
      {
        "id" : "1073e79e-cb18-4001-a0c0-dab78d2a45a5",
        "parentId" : "6b03b330-326d-4e86-8190-195fd62f0fd7",
        "authorId" : "9c76f9d4-eaaa-4ca5-ab15-871535509602",
        "body" : "the tab added for readability. it can make the values be away from the headers. ",
        "createdAt" : "2017-05-19T02:17:00Z",
        "updatedAt" : "2017-07-28T09:06:43Z",
        "lastEditedBy" : "9c76f9d4-eaaa-4ca5-ab15-871535509602",
        "tags" : [
        ]
      }
    ],
    "commit" : "190b5f289c93d74f54aaaa13633d1e3b20d7a4fd",
    "line" : 58,
    "diffHunk" : "@@ -1,1 +3223,3227 @@\t\tw.Write(LEVEL_2, \"Level:\\t%s\\n\", stringOrNone(level))\n\n\t\tw.Write(LEVEL_1, \"Run As User Strategy: %s\\t\\n\", string(psp.Spec.RunAsUser.Rule))\n\t\tw.Write(LEVEL_2, \"Ranges:\\t%s\\n\", userIDRangeToString(psp.Spec.RunAsUser.Ranges))\n"
  },
  {
    "id" : "61567119-b08a-4430-b55b-8b601312a0d6",
    "prId" : 43239,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/43239#pullrequestreview-27464348",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f79fa95f-f5f2-452e-86f9-accd2b8a100f",
        "parentId" : null,
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "False negative for 1.6 clusters but I am ok with that. Or we can add back the logic for cleaning up this annotation in the deployment controller.",
        "createdAt" : "2017-03-16T20:07:40Z",
        "updatedAt" : "2017-03-16T21:52:52Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      },
      {
        "id" : "595b778a-87f6-431e-b7e8-3f91821e24b1",
        "parentId" : "f79fa95f-f5f2-452e-86f9-accd2b8a100f",
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "We can do it atomically in https://github.com/kubernetes/kubernetes/blob/0ed150f3af2b240fd48642e3f0a3a458783b7806/pkg/controller/deployment/sync.go#L262-L275",
        "createdAt" : "2017-03-16T20:14:05Z",
        "updatedAt" : "2017-03-16T21:52:52Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      },
      {
        "id" : "0aa07107-d9f1-467a-9d2b-a468e52b3cb0",
        "parentId" : "f79fa95f-f5f2-452e-86f9-accd2b8a100f",
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "Meaning if a deployment with the annotation exists, simply remove the annotation.",
        "createdAt" : "2017-03-16T20:16:15Z",
        "updatedAt" : "2017-03-16T21:52:52Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      },
      {
        "id" : "98fba229-913e-4006-a764-69ed468dad5b",
        "parentId" : "f79fa95f-f5f2-452e-86f9-accd2b8a100f",
        "authorId" : "97dce74b-9a86-4bd2-812f-a7a70df47473",
        "body" : "Why not remove it in `syncDeployment()` where we used to call [handleOverlap()](https://github.com/kubernetes/kubernetes/pull/42175/commits/92d75cbb2338c27a1404a556a2c3b92f52041941#diff-f88c99835d4b2acda532e36123761825L515)? It seems easier to prove that that will do the same thing as the old code would if the selectors no longer overlap.",
        "createdAt" : "2017-03-16T21:28:41Z",
        "updatedAt" : "2017-03-16T21:52:52Z",
        "lastEditedBy" : "97dce74b-9a86-4bd2-812f-a7a70df47473",
        "tags" : [
        ]
      }
    ],
    "commit" : "de92f90f12dbc17c8ecdc1b54121d976e17dcd15",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +2444,2448 @@\t\toverlapWith := d.Annotations[deploymentutil.OverlapAnnotation]\n\t\tif len(overlapWith) > 0 {\n\t\t\tw.Write(LEVEL_0, \"!!!WARNING!!! This deployment has overlapping label selector with deployment %q and won't behave as expected. Please fix it before continuing.\\n\", overlapWith)\n\t\t}\n\t\tif describerSettings.ShowEvents {"
  },
  {
    "id" : "218db9c9-b134-419a-aa76-83d2c31c5b65",
    "prId" : 42849,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/42849#pullrequestreview-32486288",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4f6d809f-8ad7-48de-836d-6b330557f655",
        "parentId" : null,
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "I am wondering if created-by is used for anything else that the controller ref cannot. Can you spawn a separate issue to deprecate it and start removing it from places we can while keeping backwards compatibility?",
        "createdAt" : "2017-04-12T11:07:12Z",
        "updatedAt" : "2017-04-12T11:07:12Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      },
      {
        "id" : "0ff6c011-c9f2-4e89-bfe2-5e325b062e07",
        "parentId" : "4f6d809f-8ad7-48de-836d-6b330557f655",
        "authorId" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "body" : "Sure",
        "createdAt" : "2017-04-12T20:30:00Z",
        "updatedAt" : "2017-04-12T20:30:00Z",
        "lastEditedBy" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "tags" : [
        ]
      },
      {
        "id" : "bf80ecd1-b558-4aa6-969b-58443d0abb33",
        "parentId" : "4f6d809f-8ad7-48de-836d-6b330557f655",
        "authorId" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "body" : "Filed #44407",
        "createdAt" : "2017-04-12T20:33:40Z",
        "updatedAt" : "2017-04-12T20:33:40Z",
        "lastEditedBy" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "tags" : [
        ]
      }
    ],
    "commit" : "b29135ea8fe4b10c74a675110ec5f778828f0632",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +597,601 @@}\n\nfunc printCreator(annotation map[string]string) string {\n\tvalue, ok := annotation[api.CreatedByAnnotation]\n\tif ok {"
  },
  {
    "id" : "4e049a43-df22-4e92-b6a8-63a8a9f03576",
    "prId" : 42843,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/42843#pullrequestreview-26227851",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "df8ef76e-ca9f-440b-b56c-f8e69d6b94c7",
        "parentId" : null,
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Wow these are really verbose and I never noticed.  ",
        "createdAt" : "2017-03-10T01:58:06Z",
        "updatedAt" : "2017-03-10T01:58:06Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "06649ae9-2f2d-4a22-aaaa-c16ebe5a771c",
        "parentId" : "df8ef76e-ca9f-440b-b56c-f8e69d6b94c7",
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "Yeah, Number is redundant and generally I would prefer to keep these consistent with the D/RC/RS status but it got out of hand...",
        "createdAt" : "2017-03-10T08:37:16Z",
        "updatedAt" : "2017-03-10T08:37:16Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      }
    ],
    "commit" : "39857f486511bd8db81868185674e8b674b1aeb9",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +1536,1540 @@\t\tw.Write(LEVEL_0, \"Desired Number of Nodes Scheduled: %d\\n\", daemon.Status.DesiredNumberScheduled)\n\t\tw.Write(LEVEL_0, \"Current Number of Nodes Scheduled: %d\\n\", daemon.Status.CurrentNumberScheduled)\n\t\tw.Write(LEVEL_0, \"Number of Nodes Scheduled with Up-to-date Pods: %d\\n\", daemon.Status.UpdatedNumberScheduled)\n\t\tw.Write(LEVEL_0, \"Number of Nodes Scheduled with Available Pods: %d\\n\", daemon.Status.NumberAvailable)\n\t\tw.Write(LEVEL_0, \"Number of Nodes Misscheduled: %d\\n\", daemon.Status.NumberMisscheduled)"
  },
  {
    "id" : "b5b58899-e61d-46c9-9430-ff37b58a230f",
    "prId" : 42162,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/42162#pullrequestreview-24001102",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "06cd6aeb-d564-4f0f-a1f8-dd1cc97e922b",
        "parentId" : null,
        "authorId" : "6252ac4b-6b9e-4dee-8931-ca3b934d52fc",
        "body" : "Why not just print value of tolerationSeconds without `for`?",
        "createdAt" : "2017-02-27T14:34:27Z",
        "updatedAt" : "2017-02-27T14:34:28Z",
        "lastEditedBy" : "6252ac4b-6b9e-4dee-8931-ca3b934d52fc",
        "tags" : [
        ]
      },
      {
        "id" : "85a986c9-3f7e-4f2a-8f1d-ac2818d41533",
        "parentId" : "06cd6aeb-d564-4f0f-a1f8-dd1cc97e922b",
        "authorId" : "70ba63ce-18c5-43f6-a9fb-1acd33329390",
        "body" : "Comes from the sentence we usually describe a toleration --\"tolerate taint key3=value3:NoExecute for 300s\".",
        "createdAt" : "2017-02-27T14:47:08Z",
        "updatedAt" : "2017-02-27T14:47:08Z",
        "lastEditedBy" : "70ba63ce-18c5-43f6-a9fb-1acd33329390",
        "tags" : [
        ]
      }
    ],
    "commit" : "49072c810a3725a7419e45d81d4503c775ecbdcb",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +2896,2900 @@\t\t\t\tif toleration.TolerationSeconds != nil {\n\t\t\t\t\tw.Write(LEVEL_0, \" for %ds\", *toleration.TolerationSeconds)\n\t\t\t\t}\n\t\t\t\tw.Write(LEVEL_0, \"\\n\")\n\t\t\t\ti++"
  }
]