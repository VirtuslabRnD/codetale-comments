[
  {
    "id" : "e6e07c44-3908-4e8f-9feb-2b6f9782cc8e",
    "prId" : 83802,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/83802#pullrequestreview-302278346",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d1ef2490-2164-42d1-8952-151f0895f305",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "The printer-based tests verify both headers and columns (if either headers or columns change unexpectedly, the tests tell us). Is there anything in the new unit tests that checks headers? (applies to all new table-row-based tests)",
        "createdAt" : "2019-10-15T17:01:51Z",
        "updatedAt" : "2019-10-16T01:13:13Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "eade35e7-b007-4dd6-ac42-a8878d7d8ab7",
        "parentId" : "d1ef2490-2164-42d1-8952-151f0895f305",
        "authorId" : "d995a87c-4064-4495-9753-d0cf8a45072f",
        "body" : "The headers are created and tested in `tableprinter.go` and `tableprinter_test.go`. Since none the `print` tests create headers, I don't believe we should test them here. ",
        "createdAt" : "2019-10-16T01:15:24Z",
        "updatedAt" : "2019-10-16T01:15:25Z",
        "lastEditedBy" : "d995a87c-4064-4495-9753-d0cf8a45072f",
        "tags" : [
        ]
      },
      {
        "id" : "ea029e9d-6e1f-4206-8b57-95d78db3acd2",
        "parentId" : "d1ef2490-2164-42d1-8952-151f0895f305",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "Ok",
        "createdAt" : "2019-10-16T01:22:19Z",
        "updatedAt" : "2019-10-16T01:22:19Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "30d8a9376816e3d143f4b3b89d45ece9eef551a3",
    "line" : 153,
    "diffHunk" : "@@ -1,1 +89,93 @@\t\t\t},\n\t\t\toptions: printers.GenerateOptions{},\n\t\t\t// Columns: Last Seen, Type, Reason, Object, Message\n\t\t\texpected: []metav1beta1.TableRow{{Cells: []interface{}{\"2d\", \"Normal\", \"Event Reason\", \"pod/Pod Name\", \"Message Data\"}}},\n\t\t},"
  },
  {
    "id" : "81b8113c-a144-455c-ac79-c90848a6f56a",
    "prId" : 78713,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/78713#pullrequestreview-246509789",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ec1b9be0-617e-4cd0-a83e-50cc32d46819",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "independent?",
        "createdAt" : "2019-06-06T11:22:12Z",
        "updatedAt" : "2019-06-06T13:18:26Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "9e2f725c-7c39-4d0e-b5e2-232e65a1786b",
        "parentId" : "ec1b9be0-617e-4cd0-a83e-50cc32d46819",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "fixing the bug in versioning.codec that was skipping defaulting made this test fail… the expected object was missing defaults that were present in the decoded object ",
        "createdAt" : "2019-06-06T11:26:24Z",
        "updatedAt" : "2019-06-06T13:18:26Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "a3bb81ff327bc4daa7bc7c9819d9ab18343d69a7",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +237,241 @@\t}\n\t// our decoder defaults, so we should default our expected object as well\n\tlegacyscheme.Scheme.Default(obj)\n\tbuf.Reset()\n\tprinter.PrintObj(obj, buf)"
  },
  {
    "id" : "383ff34e-a658-4e35-af6d-79fc56b5a872",
    "prId" : 69627,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/69627#pullrequestreview-163796680",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "34a21dd3-33f6-490d-be61-9919b7e433cb",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "what changed here in the type?",
        "createdAt" : "2018-10-11T12:16:35Z",
        "updatedAt" : "2018-10-11T14:14:47Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "e7eb42ae-1fa7-4297-8580-1fa4b0ab3f77",
        "parentId" : "34a21dd3-33f6-490d-be61-9919b7e433cb",
        "authorId" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "body" : "`func Unmarshal(y []byte, o interface{}, opts ...JSONOpt) error` is the new method signature. please see vendor/github.com/ghodss/yaml/yaml.go",
        "createdAt" : "2018-10-11T12:48:04Z",
        "updatedAt" : "2018-10-11T14:14:47Z",
        "lastEditedBy" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "6b8f23820516bbcd8c49fbe84c5fa027f003dd58",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +259,263 @@\nfunc yamlUnmarshal(data []byte, v interface{}) error {\n\treturn yaml.Unmarshal(data, v)\n}\n"
  },
  {
    "id" : "525a02ec-434b-4fc0-b0a8-025878dbd21b",
    "prId" : 66643,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/66643#pullrequestreview-146635037",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "07046d8e-91f5-4471-ae95-6c7757377978",
        "parentId" : null,
        "authorId" : "1a6dc4d0-357a-4861-9ee4-a2fb4f56250b",
        "body" : "Should this not be \"60m\" instead of \"100m\" ? :)",
        "createdAt" : "2018-08-15T20:53:32Z",
        "updatedAt" : "2018-08-15T20:53:32Z",
        "lastEditedBy" : "1a6dc4d0-357a-4861-9ee4-a2fb4f56250b",
        "tags" : [
        ]
      },
      {
        "id" : "18e9a271-2f7e-4e19-b160-9d71c5879153",
        "parentId" : "07046d8e-91f5-4471-ae95-6c7757377978",
        "authorId" : "0385dfd1-e8a7-41a8-8213-eabe697d14cd",
        "body" : "I think the textual representation gets \"truncated\" down",
        "createdAt" : "2018-08-15T21:53:38Z",
        "updatedAt" : "2018-08-15T21:53:39Z",
        "lastEditedBy" : "0385dfd1-e8a7-41a8-8213-eabe697d14cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "2f275b72b2248bb7c522327115acb17223b8387b",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +1928,1932 @@\t\t{\"30 seconds ago\", translateTimestampSince(metav1.Time{Time: time.Now().Add(-3e10)}), \"30s\"},\n\t\t{\"5 minutes ago\", translateTimestampSince(metav1.Time{Time: time.Now().Add(-3e11)}), \"5m\"},\n\t\t{\"an hour ago\", translateTimestampSince(metav1.Time{Time: time.Now().Add(-6e12)}), \"100m\"},\n\t\t{\"2 days ago\", translateTimestampSince(metav1.Time{Time: time.Now().UTC().AddDate(0, 0, -2)}), \"2d\"},\n\t\t{\"months ago\", translateTimestampSince(metav1.Time{Time: time.Now().UTC().AddDate(0, 0, -90)}), \"90d\"},"
  },
  {
    "id" : "588f0c58-b675-4aa4-aba0-9e34f9d54de7",
    "prId" : 63402,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/63402#pullrequestreview-121881002",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5a4592bf-9d98-4ea3-879b-5d147e46376d",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "this highlighting unit tests in the wrong spot.  followup to fix the debt.",
        "createdAt" : "2018-05-21T17:31:40Z",
        "updatedAt" : "2018-05-21T18:59:51Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "d1603c9560389a66312d4a743d22cb5159c63036",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +51,55 @@\t\"k8s.io/kubernetes/pkg/apis/policy\"\n\t\"k8s.io/kubernetes/pkg/apis/storage\"\n\t\"k8s.io/kubernetes/pkg/kubectl/genericclioptions\"\n\tgenericprinters \"k8s.io/kubernetes/pkg/kubectl/genericclioptions/printers\"\n\t\"k8s.io/kubernetes/pkg/printers\""
  },
  {
    "id" : "da0fe244-05b9-46a8-8213-ec7dc202236a",
    "prId" : 61985,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/61985#pullrequestreview-108508866",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d43bd1b9-b800-426e-a9f2-4aea4e808b28",
        "parentId" : null,
        "authorId" : "3c1422a0-6358-4857-8f56-961979171514",
        "body" : "What if the group name is non-empty.",
        "createdAt" : "2018-04-01T03:48:19Z",
        "updatedAt" : "2018-04-01T04:24:36Z",
        "lastEditedBy" : "3c1422a0-6358-4857-8f56-961979171514",
        "tags" : [
        ]
      },
      {
        "id" : "e6b00e72-967d-4688-8a1c-6367ed4e2627",
        "parentId" : "d43bd1b9-b800-426e-a9f2-4aea4e808b28",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "added a test to cover that case",
        "createdAt" : "2018-04-01T04:24:42Z",
        "updatedAt" : "2018-04-01T04:24:46Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "3b8a570437d8818091ef17368e253a9efe86b9e9",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +382,386 @@\t\t{schema.GroupKind{}, \"\", \"\"},\n\t\t{schema.GroupKind{}, \"name\", \"name\"},\n\t\t{schema.GroupKind{Kind: \"Kind\"}, \"\", \"kind/\"}, // should not happen in practice\n\t\t{schema.GroupKind{Kind: \"Kind\"}, \"name\", \"kind/name\"},\n\t\t{schema.GroupKind{Group: \"group\", Kind: \"Kind\"}, \"name\", \"kind.group/name\"},"
  },
  {
    "id" : "7c5615f0-eb82-429c-9e98-f9d271431e90",
    "prId" : 57623,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/57623#pullrequestreview-89662460",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5dc3552b-86c7-40fa-b88e-53d068543420",
        "parentId" : null,
        "authorId" : "cdb05f24-d700-4d96-a683-3e4de7effbf5",
        "body" : "What happens when there are 2 internal IPs?",
        "createdAt" : "2018-01-04T19:52:18Z",
        "updatedAt" : "2018-03-23T05:59:38Z",
        "lastEditedBy" : "cdb05f24-d700-4d96-a683-3e4de7effbf5",
        "tags" : [
        ]
      },
      {
        "id" : "d00340f6-b21e-48a0-aa27-0f31e80ba801",
        "parentId" : "5dc3552b-86c7-40fa-b88e-53d068543420",
        "authorId" : "3c1422a0-6358-4857-8f56-961979171514",
        "body" : "@mengqiy Only the first occurrence will be counted.",
        "createdAt" : "2018-01-11T14:51:22Z",
        "updatedAt" : "2018-03-23T05:59:38Z",
        "lastEditedBy" : "3c1422a0-6358-4857-8f56-961979171514",
        "tags" : [
        ]
      },
      {
        "id" : "6a3bdeac-acfb-443c-945b-78e51b349cd1",
        "parentId" : "5dc3552b-86c7-40fa-b88e-53d068543420",
        "authorId" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "body" : "I don't think that's a good approach. This will hide the information from a user that there are other IPs. In case of multiple we should inform user there are more, eg. `(+X more)` added after the first one. Not necessarily the one you print will be the one user expects to see, and not seeing others or at least information about them will make him confused. ",
        "createdAt" : "2018-01-17T16:31:42Z",
        "updatedAt" : "2018-03-23T05:59:38Z",
        "lastEditedBy" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "tags" : [
        ]
      },
      {
        "id" : "ea4a8bc1-ec8f-4aad-b6a8-ef28bab9a10d",
        "parentId" : "5dc3552b-86c7-40fa-b88e-53d068543420",
        "authorId" : "3c1422a0-6358-4857-8f56-961979171514",
        "body" : "Make sense.\r\n\r\n@soltysh Updated. PTAL. Thanks. ",
        "createdAt" : "2018-01-18T03:14:31Z",
        "updatedAt" : "2018-03-23T05:59:38Z",
        "lastEditedBy" : "3c1422a0-6358-4857-8f56-961979171514",
        "tags" : [
        ]
      }
    ],
    "commit" : "a6b567e8b2a4f27c8bb5d8670106de41c0147657",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +1148,1152 @@\t\t\t\t\t{Type: api.NodeInternalIP, Address: \"2.2.2.2\"},\n\t\t\t\t\t{Type: api.NodeExternalIP, Address: \"3.3.3.3\"},\n\t\t\t\t\t{Type: api.NodeInternalIP, Address: \"4.4.4.4\"},\n\t\t\t\t}},\n\t\t\t},"
  },
  {
    "id" : "074ed474-8eb5-4e42-b0c8-93e2834370c3",
    "prId" : 56952,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/56952#pullrequestreview-82500763",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7d7b9d72-8658-4ba0-8e17-6246b084e6a2",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "I don't like this. The code is autogenerated. Generation does not work for _test files. That's why we had the testing dir. ",
        "createdAt" : "2017-12-11T14:09:39Z",
        "updatedAt" : "2018-01-03T01:40:31Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "071200128f55776379690adef917392bebcf0d13",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +75,79 @@}\n\nfunc (in *TestStruct) DeepCopyObject() runtime.Object {\n\tpanic(\"never called\")\n}"
  },
  {
    "id" : "4a751b4c-d9ca-4ff0-aff2-3bcafb54957e",
    "prId" : 56952,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/56952#pullrequestreview-83739049",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5213a762-a8f2-480b-97c8-1d05e50660f0",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "👍 ",
        "createdAt" : "2017-12-15T08:15:53Z",
        "updatedAt" : "2018-01-03T01:40:31Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "071200128f55776379690adef917392bebcf0d13",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +76,80 @@\nfunc (in *TestStruct) DeepCopyObject() runtime.Object {\n\tpanic(\"never called\")\n}\n"
  },
  {
    "id" : "fb45d48d-dc4e-4ac1-b067-c5123b2cfda3",
    "prId" : 50438,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/50438#pullrequestreview-57145759",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c1a82e49-ee00-4a1e-9e5a-c5b62306b130",
        "parentId" : null,
        "authorId" : "b1ad4056-936e-4ce6-ab7b-55870c4e6024",
        "body" : "Does specifying `[\"node-role.kubernetes.io/master\"] = \"\"` mean the Node is a master? If so, why is the string left blank? I would expect to see \"true\" or similar.",
        "createdAt" : "2017-08-17T15:42:25Z",
        "updatedAt" : "2017-08-17T15:42:34Z",
        "lastEditedBy" : "b1ad4056-936e-4ce6-ab7b-55870c4e6024",
        "tags" : [
        ]
      },
      {
        "id" : "d676d183-18b7-4db2-b3e2-c03eba765b81",
        "parentId" : "c1a82e49-ee00-4a1e-9e5a-c5b62306b130",
        "authorId" : "3c1422a0-6358-4857-8f56-961979171514",
        "body" : "I have the same confusion. PTAL [markmaster_test.go#L52](https://github.com/kubernetes/kubernetes/blob/master/cmd/kubeadm/app/phases/markmaster/markmaster_test.go#L52). Such annotation is not the only one.\r\n\r\nI just follow this convention here.",
        "createdAt" : "2017-08-18T01:14:00Z",
        "updatedAt" : "2017-08-18T01:14:13Z",
        "lastEditedBy" : "3c1422a0-6358-4857-8f56-961979171514",
        "tags" : [
        ]
      },
      {
        "id" : "a3511c01-d0b3-4c78-8b55-c6c9a5a8d8a2",
        "parentId" : "c1a82e49-ee00-4a1e-9e5a-c5b62306b130",
        "authorId" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "body" : "You can have labels with empty values, and the value doesn't matter here (\"reserved for future usage\" perhaps?)",
        "createdAt" : "2017-08-18T08:56:32Z",
        "updatedAt" : "2017-08-18T08:56:44Z",
        "lastEditedBy" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "tags" : [
        ]
      }
    ],
    "commit" : "568d809b24a012adeca8dc9c626a8e8be451a833",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +830,834 @@\t\t\t\tObjectMeta: metav1.ObjectMeta{\n\t\t\t\t\tName:   \"foo10\",\n\t\t\t\t\tLabels: map[string]string{\"node-role.kubernetes.io/master\": \"\", \"kubernetes.io/role\": \"node\", \"kubeadm.alpha.kubernetes.io/role\": \"node\"},\n\t\t\t\t},\n\t\t\t},"
  }
]