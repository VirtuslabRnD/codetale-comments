[
  {
    "id" : "e5cf129c-19a3-4b2b-b74d-6e3a9d8305b0",
    "prId" : 50858,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/50858#pullrequestreview-57298253",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "612b06a5-6bf1-41bd-9ea4-c1a3c985b0f8",
        "parentId" : null,
        "authorId" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "body" : "Not a huge fan of having both `GetZoneByProviderID` and `GetZoneByNodeName`, but this is following a pattern in other cloud provider interfaces. Aside from having to maintain/support the methods, it does give external cloud providers flexibility in terms of how they would like to fetch node data (by id or name).",
        "createdAt" : "2017-08-17T19:25:34Z",
        "updatedAt" : "2017-08-25T01:08:01Z",
        "lastEditedBy" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "tags" : [
        ]
      },
      {
        "id" : "75ca58f8-9c98-4129-a2ec-1c47677bb07f",
        "parentId" : "612b06a5-6bf1-41bd-9ea4-c1a3c985b0f8",
        "authorId" : "ae819fef-700f-45ca-aa42-0afbedcadc19",
        "body" : "@andrewsykim This is indeed not an ideal pattern, but like you mentioned it gives us the flexibility of choosing how we obtain zones from the cloud provider., either by name or id. We need both, simply because there are some nodes whose providerID may not be filled in - this scenario can occur on upgrades from older versions. ",
        "createdAt" : "2017-08-18T19:58:01Z",
        "updatedAt" : "2017-08-25T01:08:01Z",
        "lastEditedBy" : "ae819fef-700f-45ca-aa42-0afbedcadc19",
        "tags" : [
        ]
      }
    ],
    "commit" : "bd3cc8311056be47156b029e7ee44ad558589b64",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +198,202 @@\t// This method is particularly used in the context of external cloud providers where node initialization must be down\n\t// outside the kubelets.\n\tGetZoneByNodeName(nodeName types.NodeName) (Zone, error)\n}"
  },
  {
    "id" : "22487fb6-3c06-4f28-a92b-b106eda90b4d",
    "prId" : 28821,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8eb84095-711a-488b-a7b6-44b55fb94961",
        "parentId" : null,
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "Document the new parameter please.\n",
        "createdAt" : "2016-07-12T15:15:08Z",
        "updatedAt" : "2016-07-26T21:50:39Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      },
      {
        "id" : "982aabbd-d4e4-4152-96bf-6fbbb9e1000d",
        "parentId" : "8eb84095-711a-488b-a7b6-44b55fb94961",
        "authorId" : "b516a0b6-a0cd-4503-a269-18f3909fa05d",
        "body" : "I did document it on each method on the Interface, github just didn't notice properly here.\n",
        "createdAt" : "2016-07-15T21:54:07Z",
        "updatedAt" : "2016-07-26T21:50:39Z",
        "lastEditedBy" : "b516a0b6-a0cd-4503-a269-18f3909fa05d",
        "tags" : [
        ]
      }
    ],
    "commit" : "2ebffb431d31d422b7a9e0b0b91b8eb22d5149b8",
    "line" : 3,
    "diffHunk" : "@@ -1,1 +81,85 @@\t// GetLoadBalancer returns whether the specified load balancer exists, and\n\t// if so, what its status is.\n\t// Implementations must treat the *api.Service parameter as read-only and not modify it.\n\t// Parameter 'clusterName' is the name of the cluster as presented to kube-controller-manager\n\tGetLoadBalancer(clusterName string, service *api.Service) (status *api.LoadBalancerStatus, exists bool, err error)"
  },
  {
    "id" : "b88e30bb-4971-4b57-93de-8dd29855dd04",
    "prId" : 28821,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "666362ce-a6ad-435b-8a4d-3ad5353c8df5",
        "parentId" : null,
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "Yet more change to the cloudprovider interface required to accommodate new clouds which indicates that it was poorly designed. cc @davidopp @bgrant0607 \n",
        "createdAt" : "2016-07-15T17:45:07Z",
        "updatedAt" : "2016-07-26T21:50:39Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      },
      {
        "id" : "28fbab1c-1533-4e04-bc9c-a8448e2aaeb5",
        "parentId" : "666362ce-a6ad-435b-8a4d-3ad5353c8df5",
        "authorId" : "b516a0b6-a0cd-4503-a269-18f3909fa05d",
        "body" : "Somewhat related, my comment here:  https://github.com/kubernetes/kubernetes/issues/24343#issuecomment-233022889\n",
        "createdAt" : "2016-07-15T17:58:39Z",
        "updatedAt" : "2016-07-26T21:50:39Z",
        "lastEditedBy" : "b516a0b6-a0cd-4503-a269-18f3909fa05d",
        "tags" : [
        ]
      }
    ],
    "commit" : "2ebffb431d31d422b7a9e0b0b91b8eb22d5149b8",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +100,104 @@\t// Implementations must treat the *api.Service parameter as read-only and not modify it.\n\t// Parameter 'clusterName' is the name of the cluster as presented to kube-controller-manager\n\tEnsureLoadBalancerDeleted(clusterName string, service *api.Service) error\n}\n"
  },
  {
    "id" : "7943afd0-7b75-4431-820d-375e3fb3f1fe",
    "prId" : 21431,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7980396b-90d1-4bd1-8c42-1b04ea31eb5c",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "What is the value of this type?  It literally adds nothing...\n",
        "createdAt" : "2016-02-22T19:33:31Z",
        "updatedAt" : "2016-02-22T19:33:31Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "ce63672e-18d3-4631-8873-b8434939efdb",
        "parentId" : "7980396b-90d1-4bd1-8c42-1b04ea31eb5c",
        "authorId" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "body" : "To retrieve annotation values (GetValue etc). It's more useful with >1 annotation obviously. If we move the annotation to a field, or rename it, we won't have to update the code. \n",
        "createdAt" : "2016-02-22T19:46:14Z",
        "updatedAt" : "2016-02-22T19:46:14Z",
        "lastEditedBy" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "tags" : [
        ]
      }
    ],
    "commit" : "7ffb123abebb93c2483ff500863b30f139ca2fbe",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +162,166 @@}\n\ntype ServiceAnnotation map[string]string\n\nfunc (s ServiceAnnotation) GetValue(key string) (string, bool) {"
  },
  {
    "id" : "88979075-8156-4ac8-8a14-902360dd7909",
    "prId" : 21378,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3d86ec0f-18dc-4363-a71c-681076975233",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Make it clear in the comments that the implementing functions are _not_ allowed to change the service. (Or, if they do, they should not expect those changes to be persisted.)\n",
        "createdAt" : "2016-02-18T18:58:52Z",
        "updatedAt" : "2016-03-23T10:48:24Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "7a08200c-e1ca-4cc4-bff7-e325b6a4835b",
        "parentId" : "3d86ec0f-18dc-4363-a71c-681076975233",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "My kingdom for a const pointer.\n\nOn Thu, Feb 18, 2016 at 10:59 AM, Daniel Smith notifications@github.com\nwrote:\n\n> In pkg/cloudprovider/cloud.go\n> https://github.com/kubernetes/kubernetes/pull/21378#discussion_r53363515\n> :\n> \n> > @@ -82,18 +80,18 @@ type LoadBalancer interface {\n> >     // TODO: Break this up into different interfaces (LB, etc) when we have more than one type of service\n> >     // GetLoadBalancer returns whether the specified load balancer exists, and\n> >     // if so, what its status is.\n> \n> Make it clear in the comments that the implementing functions are _not_\n> allowed to change the service. (Or, if they do, they should not expect\n> those changes to be persisted.)\n> \n> â€”\n> Reply to this email directly or view it on GitHub\n> https://github.com/kubernetes/kubernetes/pull/21378/files#r53363515.\n",
        "createdAt" : "2016-02-20T22:45:52Z",
        "updatedAt" : "2016-03-23T10:48:24Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "adf4ef2c-47d5-4336-8272-9a5c1f6e2b93",
        "parentId" : "3d86ec0f-18dc-4363-a71c-681076975233",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "I think this may actually be my only comment.\n",
        "createdAt" : "2016-03-18T21:44:02Z",
        "updatedAt" : "2016-03-23T10:48:24Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "be9ce3089779c4aa32b0744e8443f169a2d6bf19",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +80,84 @@\t// TODO: Break this up into different interfaces (LB, etc) when we have more than one type of service\n\t// GetLoadBalancer returns whether the specified load balancer exists, and\n\t// if so, what its status is.\n\t// Implementations must treat the *api.Service parameter as read-only and not modify it.\n\tGetLoadBalancer(service *api.Service) (status *api.LoadBalancerStatus, exists bool, err error)"
  },
  {
    "id" : "42df82ff-e045-4ed6-8596-c47210560bea",
    "prId" : 7669,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "24a7a471-af2c-4609-ba23-1ca5ccac306b",
        "parentId" : null,
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "I don't like the \"or\" part of this.  Can we make this a struct that has both hostname and ip and fill in one (or both) as appropriate?  Also make the IP address a net.IPAddress.\n\nWe've already had pain from hostname vs. ip confusion in other part so of the stack that we had to iron out.\n",
        "createdAt" : "2015-05-04T14:42:20Z",
        "updatedAt" : "2015-05-04T14:42:20Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      },
      {
        "id" : "d7314b25-ad89-4996-b3f1-f6dd7a759e27",
        "parentId" : "24a7a471-af2c-4609-ba23-1ca5ccac306b",
        "authorId" : "7766e039-aa4c-4476-9091-5cc8763fa8d6",
        "body" : "We could make the change locally to this interface, but that leads to a cascade of other things that'll also have to be changed - CreateTCPLoadBalancer, the service controller, the API itself (since publicIPs has been hacked to include the DNS address for AWS ELBs), and kube-proxy, at the very least.\n\nIf you think it's worth our time at this point, go ahead and file an issue or reopen #5224 - although you were the one that merged the PR introducing the overlap (#5228).\n",
        "createdAt" : "2015-05-04T21:20:59Z",
        "updatedAt" : "2015-05-04T21:20:59Z",
        "lastEditedBy" : "7766e039-aa4c-4476-9091-5cc8763fa8d6",
        "tags" : [
        ]
      }
    ],
    "commit" : "a047250b53180e416bea901cd788cf08a0d72951",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +61,65 @@\t// TODO: Break this up into different interfaces (LB, etc) when we have more than one type of service\n\t// GetTCPLoadBalancer returns whether the specified load balancer exists, and\n\t// if so, what its IP address or hostname is.\n\tGetTCPLoadBalancer(name, region string) (endpoint string, exists bool, err error)\n\t// CreateTCPLoadBalancer creates a new tcp load balancer. Returns the IP address or hostname of the balancer"
  },
  {
    "id" : "1fe25418-3080-4477-abda-65b07f1523d7",
    "prId" : 3031,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "37b57335-31f0-4181-a3c8-e8bd31c10b9f",
        "parentId" : null,
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "I don't think affinity is actual necessary here, since you are actually essentiall double balancing:  external balancer -> service proxy -> pod.\n\nAs long as the service-proxy has affinity, I don't think that the external balancer needs to have affinity.\n",
        "createdAt" : "2014-12-18T18:20:50Z",
        "updatedAt" : "2014-12-18T23:46:34Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      },
      {
        "id" : "5a4475a4-130a-4c91-b6f5-a4aa1447953d",
        "parentId" : "37b57335-31f0-4181-a3c8-e8bd31c10b9f",
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "Although, I guess I don't see any harm in it either.\n",
        "createdAt" : "2014-12-18T18:21:21Z",
        "updatedAt" : "2014-12-18T23:46:34Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      },
      {
        "id" : "1775b8b3-6f86-4b81-9eba-9e94231efe4e",
        "parentId" : "37b57335-31f0-4181-a3c8-e8bd31c10b9f",
        "authorId" : "bb0813b4-3730-423f-9f69-f2e03bcc818f",
        "body" : "This is needed because the affinity hash map is not synced up between each service node so if the external LB sends the first request to node one, the next request will hit the service proxy on node 2 which does not have the hash map to know this request needs to be serviced by POD 1.  I had originally planned to sync up the hash map between each service, but I don't think that will work because the browser will send multiple requests at the same time so if there is a lag in syncing up the maps each service proxy will create their own affinity map for this client IP.\n\nLet me know if I'm missing something here or if there is a way to better handle this.  I would love to be able to remove this additional requirement.\n",
        "createdAt" : "2014-12-18T18:38:44Z",
        "updatedAt" : "2014-12-18T23:46:34Z",
        "lastEditedBy" : "bb0813b4-3730-423f-9f69-f2e03bcc818f",
        "tags" : [
        ]
      }
    ],
    "commit" : "c4e94efe1623df1af72ef9baf02e6f009e948af4",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +49,53 @@\tTCPLoadBalancerExists(name, region string) (bool, error)\n\t// CreateTCPLoadBalancer creates a new tcp load balancer. Returns the IP address of the balancer\n\tCreateTCPLoadBalancer(name, region string, externalIP net.IP, port int, hosts []string, affinityType api.AffinityType) (net.IP, error)\n\t// UpdateTCPLoadBalancer updates hosts under the specified load balancer.\n\tUpdateTCPLoadBalancer(name, region string, hosts []string) error"
  },
  {
    "id" : "b355e586-67d5-4d7e-97e7-7a4cd26920a4",
    "prId" : 765,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "34e4ffd3-3597-4a1a-8c6b-c8075ecaef42",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Godoc comment.\n",
        "createdAt" : "2014-08-05T05:03:56Z",
        "updatedAt" : "2014-08-05T18:38:41Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "2d674ae6-e6d9-4524-9367-4561cac2e7b7",
        "parentId" : "34e4ffd3-3597-4a1a-8c6b-c8075ecaef42",
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "done.\n",
        "createdAt" : "2014-08-05T18:21:19Z",
        "updatedAt" : "2014-08-05T18:38:41Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "c27ab184814d0f979283eb2f88230f337dca7786",
    "line" : null,
    "diffHunk" : "@@ -1,1 +53,57 @@\n// Zone represents the location of a particular machine\ntype Zone struct {\n\tFailureDomain string\n\tRegion        string"
  }
]