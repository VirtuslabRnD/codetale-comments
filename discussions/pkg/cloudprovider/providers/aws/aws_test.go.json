[
  {
    "id" : "7b42ddc1-1e58-4754-aa17-c913d307ca4a",
    "prId" : 72245,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/72245#pullrequestreview-187673471",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "72c0355a-fcd1-4ecc-9be8-1152e9b8f1a9",
        "parentId" : null,
        "authorId" : "c63e1ceb-64bd-4726-b8ef-e647d73dae0c",
        "body" : "```go\r\n{\r\n\tname: \"No overrides in config\",\r\n\treader: strings.NewReader(\"[global]\\nServiceOverrides=s3|sregion, https://s3.foo.bar, sregion\"),\r\n},\r\n```\r\n\r\nalthough it may seem longer to specify struct fields, it is easier to read. Positional indexing is useful where there are  2 or 3 fields set. With 6, it starts to get confusing what is what.",
        "createdAt" : "2018-12-24T13:33:17Z",
        "updatedAt" : "2019-01-29T14:45:14Z",
        "lastEditedBy" : "c63e1ceb-64bd-4726-b8ef-e647d73dae0c",
        "tags" : [
        ]
      }
    ],
    "commit" : "5daa004105b124248045971ec5414d13271251f6",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +205,209 @@\t\tservicesOverridden []ServiceDescriptor\n\t}{\n\t\t{\n\t\t\t\"No overrides\",\n\t\t\tstrings.NewReader(`"
  },
  {
    "id" : "9a39ba46-6748-4a8f-b474-757e8bf4bae7",
    "prId" : 59668,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/59668#pullrequestreview-96974260",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1fbea2eb-19cd-4147-9f14-e583ca23375d",
        "parentId" : null,
        "authorId" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "body" : "This makes me happy :-)",
        "createdAt" : "2018-02-15T19:33:49Z",
        "updatedAt" : "2018-02-16T05:16:21Z",
        "lastEditedBy" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "tags" : [
        ]
      }
    ],
    "commit" : "3b99e1b4879f760613f9f2d955f23e33cd45b593",
    "line" : 48,
    "diffHunk" : "@@ -1,1 +397,401 @@func TestFindVPCID(t *testing.T) {\n\tawsServices := newMockedFakeAWSServices(TestClusterId)\n\tc, err := newAWSCloud(CloudConfig{}, awsServices)\n\tif err != nil {\n\t\tt.Errorf(\"Error building aws cloud: %v\", err)"
  },
  {
    "id" : "dd4d76db-0cd1-45e4-b16b-9028ca1ee189",
    "prId" : 47516,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/47516#pullrequestreview-44050406",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4904a12a-cf9e-4afc-b3b7-9c04f61a3286",
        "parentId" : null,
        "authorId" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "body" : "Ah - I suppose this has (some) coverage of the partition logic.",
        "createdAt" : "2017-06-14T15:00:50Z",
        "updatedAt" : "2017-06-14T15:01:00Z",
        "lastEditedBy" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "tags" : [
        ]
      },
      {
        "id" : "1eb7e625-2fb4-49e7-8ed9-15da31bdb63d",
        "parentId" : "4904a12a-cf9e-4afc-b3b7-9c04f61a3286",
        "authorId" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "body" : "Yeah \"some\", :-) . Because we still don't test if partitioning correctly splits the results too.   I can extract this into a separate function easily enough. Will open a github issue for myself. ",
        "createdAt" : "2017-06-14T15:11:05Z",
        "updatedAt" : "2017-06-14T15:11:05Z",
        "lastEditedBy" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "tags" : [
        ]
      }
    ],
    "commit" : "ffa622f9c78ed2d9256fd9c8eed307e8c9e0687e",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +1084,1088 @@\ttags := []*ec2.Tag{&tag}\n\tnodeNames := []string{}\n\tfor i := 0; i < 200; i++ {\n\t\tnodeName := fmt.Sprintf(\"ip-171-20-42-%d.ec2.internal\", i)\n\t\tnodeNames = append(nodeNames, nodeName)"
  },
  {
    "id" : "566f18ac-da35-4706-bcaa-9a20adf11e6d",
    "prId" : 20378,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2dd500a6-f066-4c4d-a881-b5dffe332613",
        "parentId" : null,
        "authorId" : "0a790a9e-0f93-4562-9a2c-2e678e5408ad",
        "body" : "Have to use this instance id so that it matches in the test fake DescribeInstances call and `getSelfAWSInstance` doesn't return an error.\n",
        "createdAt" : "2016-01-31T03:09:21Z",
        "updatedAt" : "2016-02-03T21:48:59Z",
        "lastEditedBy" : "0a790a9e-0f93-4562-9a2c-2e678e5408ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "0a36db19bf227c0d7bfb64683bb53bf1047d1090",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +593,597 @@\n\t//0\n\tinstance0.InstanceId = aws.String(\"i-self\")\n\tinstance0.PrivateDnsName = aws.String(\"instance-same.ec2.internal\")\n\tinstance0.PrivateIpAddress = aws.String(\"192.168.0.1\")"
  },
  {
    "id" : "e4f239e9-1bbb-45e3-9faf-1eddebd32c07",
    "prId" : 20378,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "648a8608-78ca-44b5-ac70-5cc61f38ee5e",
        "parentId" : null,
        "authorId" : "0a790a9e-0f93-4562-9a2c-2e678e5408ad",
        "body" : "Had to add this new instance because of the way the tests are setup so that it reaches the code in `NodeAddresses` when the instance name that is searched is different from the current instance node name.\n\nThe `NodeAddresses` tries to do too much imho and has a lot of dead code which made updating the tests much more complicated than it should be. I'll open a different issue for that but I think we should refactor `NodeAddresses` on the model of the `gce` one. I didn't do the refactoring here because I didn't want to \"muddy\" the PR.\n",
        "createdAt" : "2016-01-31T03:12:09Z",
        "updatedAt" : "2016-02-03T21:48:59Z",
        "lastEditedBy" : "0a790a9e-0f93-4562-9a2c-2e678e5408ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "0a36db19bf227c0d7bfb64683bb53bf1047d1090",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +614,618 @@\n\t//2\n\tinstance2.InstanceId = aws.String(\"i-self\")\n\tinstance2.PrivateDnsName = aws.String(\"instance-other.ec2.internal\")\n\tinstance2.PrivateIpAddress = aws.String(\"192.168.0.1\")"
  }
]