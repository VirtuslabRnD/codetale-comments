[
  {
    "id" : "99e141fb-143f-409c-8fb0-0ef451315ff0",
    "prId" : 73491,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/73491#pullrequestreview-198245037",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d478c6c0-a8a6-4a0f-a73c-66bd297f82cf",
        "parentId" : null,
        "authorId" : "7aca96c2-45d7-4567-99be-0323d7556c55",
        "body" : "Something I'm not understanding here. The file references cloudprovider. So if the import wasn't already aliasing cloud-provider to cloudprovider how was it compiling before your change? I would like to understand that to make sure we don't have a deeper issue.",
        "createdAt" : "2019-01-30T18:20:31Z",
        "updatedAt" : "2019-01-30T18:20:31Z",
        "lastEditedBy" : "7aca96c2-45d7-4567-99be-0323d7556c55",
        "tags" : [
        ]
      },
      {
        "id" : "51e007cf-e1b8-4009-9b92-ff3244817edf",
        "parentId" : "d478c6c0-a8a6-4a0f-a73c-66bd297f82cf",
        "authorId" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "body" : "I learned this the other day, but apparently Go will ignore imports with `-`, so `k8s.io/cloud-provider` automatically becomes `cloudprovider`. ",
        "createdAt" : "2019-01-30T18:37:21Z",
        "updatedAt" : "2019-01-30T18:37:21Z",
        "lastEditedBy" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "tags" : [
        ]
      },
      {
        "id" : "e0d56f1a-f54a-4c7a-a4bc-ebb245ece77d",
        "parentId" : "d478c6c0-a8a6-4a0f-a73c-66bd297f82cf",
        "authorId" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "body" : "oh no, it's actually because the package name is `cloudprovider` https://github.com/kubernetes/cloud-provider/blob/master/cloud.go#L17. And the package name does not have to match the directory name :) ",
        "createdAt" : "2019-01-30T18:49:17Z",
        "updatedAt" : "2019-01-30T18:51:19Z",
        "lastEditedBy" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "tags" : [
        ]
      }
    ],
    "commit" : "40d2bd82b29059b0ab3d418d49a6edc53a0a9ebf",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +57,61 @@\tv1core \"k8s.io/client-go/kubernetes/typed/core/v1\"\n\t\"k8s.io/client-go/tools/record\"\n\tcloudprovider \"k8s.io/cloud-provider\"\n\tcloudnode \"k8s.io/cloud-provider/node\"\n\t\"k8s.io/kubernetes/pkg/api/v1/service\""
  },
  {
    "id" : "74915e01-80d4-4c97-9316-9b9ead98733d",
    "prId" : 72245,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/72245#pullrequestreview-196638787",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "45820bd8-fcb7-4433-9cde-74308da1458c",
        "parentId" : null,
        "authorId" : "ee440732-7dd1-4a2c-b440-de4b66a84d9d",
        "body" : "Can you add `SigningMethod` and pass that to [`endpoints.ResolvedEndpoint.SigningMethod`](https://docs.aws.amazon.com/sdk-for-go/api/aws/endpoints/#ResolvedEndpoint)?",
        "createdAt" : "2019-01-24T19:18:35Z",
        "updatedAt" : "2019-01-29T14:45:14Z",
        "lastEditedBy" : "ee440732-7dd1-4a2c-b440-de4b66a84d9d",
        "tags" : [
        ]
      },
      {
        "id" : "076eb09d-170b-4dcd-b602-1f74d10d55fb",
        "parentId" : "45820bd8-fcb7-4433-9cde-74308da1458c",
        "authorId" : "3a9ed360-cb51-442a-a9c5-ebf4b65e0fb3",
        "body" : "Can this be optional? In our testing, we did not set this and everything worked. Does it default to something sensible in us-east-1? That is where we were testing. In air gapped, maybe the default will be wrong?",
        "createdAt" : "2019-01-25T13:35:21Z",
        "updatedAt" : "2019-01-29T14:45:14Z",
        "lastEditedBy" : "3a9ed360-cb51-442a-a9c5-ebf4b65e0fb3",
        "tags" : [
        ]
      },
      {
        "id" : "2f61b20f-3960-4bb9-af53-a9060d30efa2",
        "parentId" : "45820bd8-fcb7-4433-9cde-74308da1458c",
        "authorId" : "ee440732-7dd1-4a2c-b440-de4b66a84d9d",
        "body" : "You're right that it will work without being set, as an empty value or unspecified it defaults to `v4`. Adding this field will help AWS with testing",
        "createdAt" : "2019-01-25T17:33:13Z",
        "updatedAt" : "2019-01-29T14:45:14Z",
        "lastEditedBy" : "ee440732-7dd1-4a2c-b440-de4b66a84d9d",
        "tags" : [
        ]
      },
      {
        "id" : "d7cdaa07-3f9a-495c-895f-4445f091be91",
        "parentId" : "45820bd8-fcb7-4433-9cde-74308da1458c",
        "authorId" : "3a9ed360-cb51-442a-a9c5-ebf4b65e0fb3",
        "body" : "so use it as is, but do not validate it (check for empty)?",
        "createdAt" : "2019-01-25T18:15:04Z",
        "updatedAt" : "2019-01-29T14:45:14Z",
        "lastEditedBy" : "3a9ed360-cb51-442a-a9c5-ebf4b65e0fb3",
        "tags" : [
        ]
      }
    ],
    "commit" : "5daa004105b124248045971ec5414d13271251f6",
    "line" : 47,
    "diffHunk" : "@@ -1,1 +589,593 @@\t\tRegion        string\n\t\tURL           string\n\t\tSigningRegion string\n\t\tSigningMethod string\n\t\tSigningName   string"
  },
  {
    "id" : "7a868e93-5ad9-4e75-a50e-037323e8fe57",
    "prId" : 72245,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/72245#pullrequestreview-196639364",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "077e3db9-0bd2-4072-af4e-3cb50dbe2543",
        "parentId" : null,
        "authorId" : "ee440732-7dd1-4a2c-b440-de4b66a84d9d",
        "body" : "Is the TrimSpace necessary? Doesn't gcfg do this?",
        "createdAt" : "2019-01-24T19:19:55Z",
        "updatedAt" : "2019-01-29T14:45:14Z",
        "lastEditedBy" : "ee440732-7dd1-4a2c-b440-de4b66a84d9d",
        "tags" : [
        ]
      },
      {
        "id" : "bc93aea4-f53d-49c2-a779-e45a30b38781",
        "parentId" : "077e3db9-0bd2-4072-af4e-3cb50dbe2543",
        "authorId" : "3a9ed360-cb51-442a-a9c5-ebf4b65e0fb3",
        "body" : "Just added a test. No gcfg does not do this. That means I will have to add string trim to the comparisons when ranging over the map. Can I alter the map when validating? That seems preferable to trimming on every lookup.",
        "createdAt" : "2019-01-25T13:05:12Z",
        "updatedAt" : "2019-01-29T14:45:14Z",
        "lastEditedBy" : "3a9ed360-cb51-442a-a9c5-ebf4b65e0fb3",
        "tags" : [
        ]
      },
      {
        "id" : "7d205205-8bdc-4b4b-a87e-89032de10742",
        "parentId" : "077e3db9-0bd2-4072-af4e-3cb50dbe2543",
        "authorId" : "ee440732-7dd1-4a2c-b440-de4b66a84d9d",
        "body" : "By my testing it looks like gcfg does trim extra space:\r\n\r\n```go\r\npackage main\r\n\r\nimport (\r\n\t\"fmt\"\r\n\r\n\t\"gopkg.in/gcfg.v1\"\r\n)\r\n\r\ntype CloudConfig struct {\r\n\tServiceOverride map[string]*struct {\r\n\t\tRegion        string\r\n\t\tURL           string\r\n\t\tSigningRegion string\r\n\t\tService       string\r\n\t\tSigningMethod string\r\n\t}\r\n}\r\n\r\nfunc main() {\r\n\tcfgStr := `\r\n[serviceoverride \"ec2_us-west-2\"]\r\nURL=https://ec2.foo.bar\r\nSigningRegion=custom-signing-region\r\nRegion=us-west-2\r\nService=ec2\r\n\r\n[serviceoverride \"ec2_us-east-1\"]\r\nURL = https://ec2.foo.bar\r\nSigningRegion = custom-signing-region\r\nRegion = us-east-1\r\nService = ec2\r\n`\r\n\t// change the CloudConfig type to have the \"ServiceOverride\" map\r\n\tcfg := &CloudConfig{}\r\n\terr := gcfg.ReadStringInto(cfg, cfgStr)\r\n\tif err != nil {\r\n\t\tpanic(fmt.Errorf(\"Failed to parse gcfg data: %s\", err))\r\n\t}\r\n\tfor _, override := range cfg.ServiceOverride {\r\n\t\tfmt.Printf(\"Region: '%s'\\n\", override.Region)\r\n\t\tfmt.Printf(\"URL: '%s'\\n\", override.URL)\r\n\t\tfmt.Printf(\"SigningRegion: '%s'\\n\", override.SigningRegion)\r\n\t\tfmt.Printf(\"Service: '%s'\\n\", override.Service)\r\n\t}\r\n}\r\n```\r\n\r\nspits out:\r\n\r\n```\r\nRegion: 'us-west-2'\r\nURL: 'https://ec2.foo.bar'\r\nSigningRegion: 'custom-signing-region'\r\nService: 'ec2'\r\nRegion: 'us-east-1'\r\nURL: 'https://ec2.foo.bar'\r\nSigningRegion: 'custom-signing-region'\r\nService: 'ec2'\r\n```",
        "createdAt" : "2019-01-25T17:40:43Z",
        "updatedAt" : "2019-01-29T14:45:14Z",
        "lastEditedBy" : "ee440732-7dd1-4a2c-b440-de4b66a84d9d",
        "tags" : [
        ]
      },
      {
        "id" : "3a4315c3-a95b-40a0-89d1-04bd2cc94ec2",
        "parentId" : "077e3db9-0bd2-4072-af4e-3cb50dbe2543",
        "authorId" : "3a9ed360-cb51-442a-a9c5-ebf4b65e0fb3",
        "body" : "to add spaces in INI, you have to quote the string",
        "createdAt" : "2019-01-25T18:13:49Z",
        "updatedAt" : "2019-01-29T14:45:14Z",
        "lastEditedBy" : "3a9ed360-cb51-442a-a9c5-ebf4b65e0fb3",
        "tags" : [
        ]
      },
      {
        "id" : "cd2dc6d6-0b46-415e-9a2a-e7867184c427",
        "parentId" : "077e3db9-0bd2-4072-af4e-3cb50dbe2543",
        "authorId" : "3a9ed360-cb51-442a-a9c5-ebf4b65e0fb3",
        "body" : "`{\r\n\t\t\t\"Active Overrides\",\r\n\t\t\tstrings.NewReader(`\r\n                [Global]\r\n\r\n               [ServiceOverride \"1\"]\r\n                Service = \"s3      \"\r\n                Region = sregion\r\n                URL = https://s3.foo.bar\r\n                SigningRegion = sregion\r\n                SigningMethod = sign\r\n                `),\r\n\t\t\tnil,\r\n\t\t\tfalse, true,\r\n\t\t\t[]ServiceDescriptor{{name: \"s3\", region: \"sregion\"}},\r\n\t\t},\r\nThis failed without trims`",
        "createdAt" : "2019-01-25T18:16:27Z",
        "updatedAt" : "2019-01-29T14:45:14Z",
        "lastEditedBy" : "3a9ed360-cb51-442a-a9c5-ebf4b65e0fb3",
        "tags" : [
        ]
      }
    ],
    "commit" : "5daa004105b124248045971ec5414d13271251f6",
    "line" : 60,
    "diffHunk" : "@@ -1,1 +602,606 @@\tfor onum, ovrd := range cfg.ServiceOverride {\n\t\t// Note: gcfg does not space trim, so we have to when comparing to empty string \"\"\n\t\tname := strings.TrimSpace(ovrd.Service)\n\t\tif name == \"\" {\n\t\t\treturn fmt.Errorf(\"service name is missing [Service is \\\"\\\"] in override %s\", onum)"
  },
  {
    "id" : "434ea0ce-adf7-4d9e-af83-2819b93de7bd",
    "prId" : 72245,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/72245#pullrequestreview-196618711",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "88efe2a0-d37a-4bc4-ba8f-a93d26e52b69",
        "parentId" : null,
        "authorId" : "ee440732-7dd1-4a2c-b440-de4b66a84d9d",
        "body" : "How about \r\n```go\r\nresponse := endpoints.DefaultResolver().EndpointFor(service, region, optFns...)\r\nif len(cfg.ServiceOverride) == 0 {\r\n    return response\r\n}\r\n```",
        "createdAt" : "2019-01-24T19:30:47Z",
        "updatedAt" : "2019-01-29T14:45:14Z",
        "lastEditedBy" : "ee440732-7dd1-4a2c-b440-de4b66a84d9d",
        "tags" : [
        ]
      },
      {
        "id" : "50fc0fc4-1f4e-4a84-9df9-f472f6861fec",
        "parentId" : "88efe2a0-d37a-4bc4-ba8f-a93d26e52b69",
        "authorId" : "3a9ed360-cb51-442a-a9c5-ebf4b65e0fb3",
        "body" : "That is the complexity of functions returning functions.  endpoints.DefaultResolver().EndpointFor(service, region, optFns...) is what is executed, we have to wrap it to make it a func for return.",
        "createdAt" : "2019-01-25T13:10:15Z",
        "updatedAt" : "2019-01-29T14:45:14Z",
        "lastEditedBy" : "3a9ed360-cb51-442a-a9c5-ebf4b65e0fb3",
        "tags" : [
        ]
      },
      {
        "id" : "63ade3f8-37ad-4d12-86dd-39738d87f930",
        "parentId" : "88efe2a0-d37a-4bc4-ba8f-a93d26e52b69",
        "authorId" : "ee440732-7dd1-4a2c-b440-de4b66a84d9d",
        "body" : "ah you're right",
        "createdAt" : "2019-01-25T17:41:05Z",
        "updatedAt" : "2019-01-29T14:45:14Z",
        "lastEditedBy" : "ee440732-7dd1-4a2c-b440-de4b66a84d9d",
        "tags" : [
        ]
      }
    ],
    "commit" : "5daa004105b124248045971ec5414d13271251f6",
    "line" : 98,
    "diffHunk" : "@@ -1,1 +640,644 @@\t}\n\tif len(cfg.ServiceOverride) == 0 {\n\t\treturn defaultResolverFn\n\t}\n"
  },
  {
    "id" : "b573145e-f982-4820-b51c-b98d26324f29",
    "prId" : 72245,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/72245#pullrequestreview-197589166",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d945f6cb-ca47-45fe-8398-6cd137c3e266",
        "parentId" : null,
        "authorId" : "ee440732-7dd1-4a2c-b440-de4b66a84d9d",
        "body" : "One more request before this goes, in, could you add `SigningName string` field?  It doesn't need to be a documented field, but it will really help AWS out with testing. An [empty string is value is fine](https://github.com/aws/aws-sdk-go/blob/173fcf0a78d6bc6c1668a416cdef0032c2a0efab/private/model/api/api.go#L318-L322), the SDK will just use the correct default. ",
        "createdAt" : "2019-01-28T22:02:56Z",
        "updatedAt" : "2019-01-29T14:45:14Z",
        "lastEditedBy" : "ee440732-7dd1-4a2c-b440-de4b66a84d9d",
        "tags" : [
        ]
      },
      {
        "id" : "5baaa973-fd26-4dc5-bc50-93915c042f3f",
        "parentId" : "d945f6cb-ca47-45fe-8398-6cd137c3e266",
        "authorId" : "3a9ed360-cb51-442a-a9c5-ebf4b65e0fb3",
        "body" : "done",
        "createdAt" : "2019-01-29T14:45:26Z",
        "updatedAt" : "2019-01-29T14:45:26Z",
        "lastEditedBy" : "3a9ed360-cb51-442a-a9c5-ebf4b65e0fb3",
        "tags" : [
        ]
      }
    ],
    "commit" : "5daa004105b124248045971ec5414d13271251f6",
    "line" : 48,
    "diffHunk" : "@@ -1,1 +590,594 @@\t\tURL           string\n\t\tSigningRegion string\n\t\tSigningMethod string\n\t\tSigningName   string\n\t}"
  },
  {
    "id" : "146deea1-269d-4b27-828f-f3aeed0a8e11",
    "prId" : 69708,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/69708#pullrequestreview-169832480",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1918fd4b-4589-455c-a278-ef5ac1ca2f8a",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "group with non-stdlib, non-k8s imports (remove empty line 46)",
        "createdAt" : "2018-10-30T14:47:56Z",
        "updatedAt" : "2018-10-30T15:19:12Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "866dc71d-3d27-4c9f-8973-0881e13d3d11",
        "parentId" : "1918fd4b-4589-455c-a278-ef5ac1ca2f8a",
        "authorId" : "4db268bc-8c08-4dfd-b61f-0c35b28567bd",
        "body" : "Done",
        "createdAt" : "2018-10-30T15:19:25Z",
        "updatedAt" : "2018-10-30T15:19:25Z",
        "lastEditedBy" : "4db268bc-8c08-4dfd-b61f-0c35b28567bd",
        "tags" : [
        ]
      }
    ],
    "commit" : "49df100af929c7cff85661046b517973cc807b44",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +44,48 @@\t\"github.com/aws/aws-sdk-go/service/sts\"\n\t\"github.com/golang/glog\"\n\tgcfg \"gopkg.in/gcfg.v1\"\n\n\t\"k8s.io/api/core/v1\""
  },
  {
    "id" : "fa923ffa-e151-4842-9d58-bcc0b70143b5",
    "prId" : 65649,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/65649#pullrequestreview-134761658",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d4c1aa3d-cee3-418d-b653-0313747f4941",
        "parentId" : null,
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "`VolumeId` is a `*string`, so this seems good.\r\n\r\n/cc @justinsb\r\n/cc @kubernetes/sig-cloud-provider-pr-reviews \r\n",
        "createdAt" : "2018-07-05T03:49:09Z",
        "updatedAt" : "2018-07-10T21:10:46Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      },
      {
        "id" : "802609e9-075a-40c0-9122-de186799617f",
        "parentId" : "d4c1aa3d-cee3-418d-b653-0313747f4941",
        "authorId" : "ddc05ecb-1a86-4393-8e22-f1bb528c2d50",
        "body" : "Agreed, \r\n```\r\ntype Volume struct {\r\n...\r\n    // The ID of the volume.\r\n    VolumeId *string `locationName:\"volumeId\" type:\"string\"`\r\n...\r\n}\r\n```\r\nfrom https://docs.aws.amazon.com/sdk-for-go/api/service/ec2/#Volume",
        "createdAt" : "2018-07-05T18:11:32Z",
        "updatedAt" : "2018-07-10T21:10:46Z",
        "lastEditedBy" : "ddc05ecb-1a86-4393-8e22-f1bb528c2d50",
        "tags" : [
        ]
      }
    ],
    "commit" : "2bd91dda64b857ed2f45542a7aae42f855e931d1",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +2359,2363 @@\taz := aws.StringValue(info.AvailabilityZone)\n\tif az == \"\" {\n\t\treturn nil, fmt.Errorf(\"volume did not have AZ information: %q\", aws.StringValue(info.VolumeId))\n\t}\n"
  },
  {
    "id" : "ebbeae1b-ad0a-4397-8642-3bda694aecc7",
    "prId" : 56118,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/56118#pullrequestreview-78114832",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "29fddf2d-c0f4-4562-adbe-7169166117e2",
        "parentId" : null,
        "authorId" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "body" : "Any reason to bother creating descErr, vs `return oldSize, fmt.Errorf...`",
        "createdAt" : "2017-11-21T11:31:09Z",
        "updatedAt" : "2017-11-23T02:39:01Z",
        "lastEditedBy" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "tags" : [
        ]
      },
      {
        "id" : "fd0eb3e7-6da4-4baf-b198-0eb1a6552fca",
        "parentId" : "29fddf2d-c0f4-4562-adbe-7169166117e2",
        "authorId" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "body" : "No strong reason. I just don't like it when certain code line becomes too wide and starts to become wrapped in the code editor. ",
        "createdAt" : "2017-11-21T13:47:39Z",
        "updatedAt" : "2017-11-23T02:39:01Z",
        "lastEditedBy" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "tags" : [
        ]
      }
    ],
    "commit" : "8c49d1db022f2feaf14e3dc255ba0e9f418aa47e",
    "line" : 148,
    "diffHunk" : "@@ -1,1 +2431,2435 @@\tif err != nil {\n\t\tdescErr := fmt.Errorf(\"AWS.ResizeDisk Error describing volume %s with %v\", diskName, err)\n\t\treturn oldSize, descErr\n\t}\n\trequestBytes := newSize.Value()"
  },
  {
    "id" : "a126c960-d5e0-4aed-ad24-3e44e0e5defc",
    "prId" : 56118,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/56118#pullrequestreview-78597022",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7ed4511c-d823-4768-9a9a-702b695124f3",
        "parentId" : null,
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Isn’t everything resize supposed to be behind a feature gate?",
        "createdAt" : "2017-11-22T22:44:24Z",
        "updatedAt" : "2017-11-23T02:39:01Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "41697e8f-3d2c-44af-a2fc-f0973c4bb717",
        "parentId" : "7ed4511c-d823-4768-9a9a-702b695124f3",
        "authorId" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "body" : "Yes but call of this function itself is beind a feature gate. The expand controller will not start unless feature gate is enabled. In addition to that, kube admin must explicitly enable `allowVolumeExpansion:true` on storage class for volume to be resizable.",
        "createdAt" : "2017-11-22T22:47:23Z",
        "updatedAt" : "2017-11-23T02:39:01Z",
        "lastEditedBy" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "tags" : [
        ]
      }
    ],
    "commit" : "8c49d1db022f2feaf14e3dc255ba0e9f418aa47e",
    "line" : 150,
    "diffHunk" : "@@ -1,1 +2433,2437 @@\t\treturn oldSize, descErr\n\t}\n\trequestBytes := newSize.Value()\n\t// AWS resizes in chunks of GiB (not GB)\n\trequestGiB := volume.RoundUpSize(requestBytes, 1024*1024*1024)"
  },
  {
    "id" : "f157ab8a-4d3e-44c6-b3b5-713f74e1ad34",
    "prId" : 55893,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/55893#pullrequestreview-77320928",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2493f4f7-ba75-4678-828f-bba2f3e0ade3",
        "parentId" : null,
        "authorId" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "body" : "even if the instance no longer exist in cloud provider, DetachVolume request can still work?",
        "createdAt" : "2017-11-16T23:29:27Z",
        "updatedAt" : "2017-11-23T16:02:17Z",
        "lastEditedBy" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "tags" : [
        ]
      },
      {
        "id" : "72462912-838b-4387-816f-062838bd66ec",
        "parentId" : "2493f4f7-ba75-4678-828f-bba2f3e0ade3",
        "authorId" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "body" : "The instance doe exist in AWS. It is just that our filtering rules we apply exclude `stopped` instances. https://github.com/kubernetes/kubernetes/blob/master/pkg/cloudprovider/providers/aws/aws.go#L3613 ",
        "createdAt" : "2017-11-17T01:53:20Z",
        "updatedAt" : "2017-11-23T16:02:17Z",
        "lastEditedBy" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "tags" : [
        ]
      }
    ],
    "commit" : "ac2c68ad8f29e004f2330e590fe0a61f57965038",
    "line" : 50,
    "diffHunk" : "@@ -1,1 +2056,2060 @@\tresponse, err := c.ec2.DetachVolume(&request)\n\tif err != nil {\n\t\treturn \"\", fmt.Errorf(\"error detaching EBS volume %q from %q: %q\", diskInfo.disk.awsID, awsInstance.awsID, err)\n\t}\n"
  },
  {
    "id" : "2663ea28-fd97-4901-8897-e85322fcfb8f",
    "prId" : 55558,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/55558#pullrequestreview-80888273",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a4b27d68-0134-4db5-a349-029b3d72d833",
        "parentId" : null,
        "authorId" : "e45395cd-3c20-445c-b404-a2b9ffe5efab",
        "body" : "`AddOrUpdateTaintOnNode` immediately calls [`get`](https://github.com/kubernetes/kubernetes/blob/d6325933e1b5ac8a2c0a5a65ab8bd690015f4697/pkg/controller/controller_utils.go#L905) for the node, so this is causing 2x the calls. You could check for not found error below to accomplish the same log w/ less API calls. ",
        "createdAt" : "2017-12-02T05:17:04Z",
        "updatedAt" : "2017-12-02T05:17:04Z",
        "lastEditedBy" : "e45395cd-3c20-445c-b404-a2b9ffe5efab",
        "tags" : [
        ]
      },
      {
        "id" : "3be7dd3d-fa28-467d-9cd6-c31ece7cb2ae",
        "parentId" : "a4b27d68-0134-4db5-a349-029b3d72d833",
        "authorId" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "body" : "We still need the node object below to create event that is emitted in next line. ",
        "createdAt" : "2017-12-04T15:54:59Z",
        "updatedAt" : "2017-12-04T15:54:59Z",
        "lastEditedBy" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "tags" : [
        ]
      }
    ],
    "commit" : "063cd2dfa53d5bfeef0b209d319d3984f3209c74",
    "line" : 67,
    "diffHunk" : "@@ -1,1 +1552,1556 @@// if node has become unusable because of volumes getting stuck in attaching state.\nfunc (c *Cloud) applyUnSchedulableTaint(nodeName types.NodeName, reason string) {\n\tnode, fetchErr := c.kubeClient.CoreV1().Nodes().Get(string(nodeName), metav1.GetOptions{})\n\tif fetchErr != nil {\n\t\tglog.Errorf(\"Error fetching node %s with %v\", nodeName, fetchErr)"
  },
  {
    "id" : "e7fa871b-709e-4309-98b1-7dce2b0ea05a",
    "prId" : 55491,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/55491#pullrequestreview-77300226",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ac06856e-97ef-47fd-9165-4354fa91acfb",
        "parentId" : null,
        "authorId" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "body" : "Maybe `glog.Errorf(\"error checking if volume available: %v\", err)`",
        "createdAt" : "2017-11-16T23:36:33Z",
        "updatedAt" : "2017-11-17T00:58:08Z",
        "lastEditedBy" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "tags" : [
        ]
      }
    ],
    "commit" : "5297c146c1f4f03e71a0914077ca7a2b234966fb",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +1719,1723 @@\t\tavailable, err := c.checkIfAvailable(disk, \"attaching\", awsInstance.awsID)\n\t\tif err != nil {\n\t\t\tglog.Error(err)\n\t\t}\n"
  },
  {
    "id" : "0cde1825-a4d8-46b1-b252-23640b814b1d",
    "prId" : 53400,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/53400#pullrequestreview-75835213",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fd1169fa-cf29-4873-a3ab-96748ebdbd28",
        "parentId" : null,
        "authorId" : "573de559-f8f4-465b-b31c-7f9553076073",
        "body" : "Deleting a target group while it is associated with a load balancer listener will fail. Consider deleting the listeners first, or the load balancer first (which implicitly deletes the listeners), then the target groups.",
        "createdAt" : "2017-10-18T17:01:08Z",
        "updatedAt" : "2017-11-20T13:53:10Z",
        "lastEditedBy" : "573de559-f8f4-465b-b31c-7f9553076073",
        "tags" : [
        ]
      },
      {
        "id" : "e8b3a528-4742-445a-945f-9d4071bbf6d4",
        "parentId" : "fd1169fa-cf29-4873-a3ab-96748ebdbd28",
        "authorId" : "ee440732-7dd1-4a2c-b440-de4b66a84d9d",
        "body" : "Thanks! will do",
        "createdAt" : "2017-10-25T14:22:04Z",
        "updatedAt" : "2017-11-20T13:53:10Z",
        "lastEditedBy" : "ee440732-7dd1-4a2c-b440-de4b66a84d9d",
        "tags" : [
        ]
      },
      {
        "id" : "3287aa87-9108-4a7d-97ba-40ec05ba3310",
        "parentId" : "fd1169fa-cf29-4873-a3ab-96748ebdbd28",
        "authorId" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "body" : "We might need a comment then that - in theory - we might leak target groups here, if we fail after deleting the load balancer but before deleting all the target groups.",
        "createdAt" : "2017-11-10T03:17:12Z",
        "updatedAt" : "2017-11-20T13:53:10Z",
        "lastEditedBy" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "tags" : [
        ]
      },
      {
        "id" : "1f39ffee-3eee-4c19-9d8d-70e0210c16c9",
        "parentId" : "fd1169fa-cf29-4873-a3ab-96748ebdbd28",
        "authorId" : "ee440732-7dd1-4a2c-b440-de4b66a84d9d",
        "body" : "Done",
        "createdAt" : "2017-11-10T17:56:47Z",
        "updatedAt" : "2017-11-20T13:53:10Z",
        "lastEditedBy" : "ee440732-7dd1-4a2c-b440-de4b66a84d9d",
        "tags" : [
        ]
      }
    ],
    "commit" : "502e8f8c293ac10b7715ebed71667817c959aa5a",
    "line" : 372,
    "diffHunk" : "@@ -1,1 +3720,3724 @@\t\t\tfor _, group := range targetGroups.TargetGroups {\n\t\t\t\t_, err := c.elbv2.DeleteTargetGroup(\n\t\t\t\t\t&elbv2.DeleteTargetGroupInput{TargetGroupArn: group.TargetGroupArn},\n\t\t\t\t)\n\t\t\t\tif err != nil {"
  },
  {
    "id" : "4646d2cf-134b-4709-98c1-0127f438575b",
    "prId" : 53400,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/53400#pullrequestreview-75654038",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8f257f4d-466e-4ff9-ac51-2c5da9f50346",
        "parentId" : null,
        "authorId" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "body" : "It might be nice to allow someone to explicitly specify \"elb\" in future, but not a big deal",
        "createdAt" : "2017-11-10T03:07:45Z",
        "updatedAt" : "2017-11-20T13:53:10Z",
        "lastEditedBy" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "tags" : [
        ]
      }
    ],
    "commit" : "502e8f8c293ac10b7715ebed71667817c959aa5a",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +92,96 @@// ServiceAnnotationLoadBalancerType is the annotation used on the service\n// to indicate what type of Load Balancer we want. Right now, the only accepted\n// value is \"nlb\"\nconst ServiceAnnotationLoadBalancerType = \"service.beta.kubernetes.io/aws-load-balancer-type\"\n"
  },
  {
    "id" : "6e7fa9be-88b7-40f5-9fb1-fdea140138d9",
    "prId" : 52169,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/52169#pullrequestreview-61545304",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "423ced86-c0a5-4b26-b257-1f877c7ae448",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "Can't this panic if the cloud is non conformant? Only two cloud impls implement this",
        "createdAt" : "2017-09-08T13:49:28Z",
        "updatedAt" : "2017-09-08T19:26:10Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "7d6ac476-b009-47b2-9b1d-7d5af46e6fa5",
        "parentId" : "423ced86-c0a5-4b26-b257-1f877c7ae448",
        "authorId" : "aee8926e-0646-4183-b0d7-65633cf782b0",
        "body" : "Unless I'm mistaken, this will only call the aws.GetVolumeLabels, which should be fine.",
        "createdAt" : "2017-09-08T15:15:22Z",
        "updatedAt" : "2017-09-08T19:26:10Z",
        "lastEditedBy" : "aee8926e-0646-4183-b0d7-65633cf782b0",
        "tags" : [
        ]
      },
      {
        "id" : "0befbdc4-edbf-4b78-95e9-d106a7740936",
        "parentId" : "423ced86-c0a5-4b26-b257-1f877c7ae448",
        "authorId" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "body" : "y, the GetLabelsForVolume for aws will only call the aws.GetVolumeLabels",
        "createdAt" : "2017-09-08T15:45:01Z",
        "updatedAt" : "2017-09-08T19:26:10Z",
        "lastEditedBy" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "d47bd26c4b6866644a5f0dd7fb8b3f4756ce4b0b",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +1933,1937 @@\n\tspec := KubernetesVolumeID(pv.Spec.AWSElasticBlockStore.VolumeID)\n\tlabels, err := c.GetVolumeLabels(spec)\n\tif err != nil {\n\t\treturn nil, err"
  },
  {
    "id" : "ef03e9ac-dc75-46bc-b71f-73e5d2983799",
    "prId" : 51087,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/51087#pullrequestreview-58753771",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8ef2a7b0-3b63-4933-9039-6dd929dcf490",
        "parentId" : null,
        "authorId" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "body" : "Don't think it hurts to add comments from the cloud interface here for visibility\r\n```\r\nIf false is returned with no error, the instance will be immediately deleted.\r\n```",
        "createdAt" : "2017-08-25T19:23:59Z",
        "updatedAt" : "2017-08-25T22:04:18Z",
        "lastEditedBy" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "tags" : [
        ]
      },
      {
        "id" : "e7d94fb3-e307-40f5-9459-01eb0a3b6dff",
        "parentId" : "8ef2a7b0-3b63-4933-9039-6dd929dcf490",
        "authorId" : "e45395cd-3c20-445c-b404-a2b9ffe5efab",
        "body" : "updated",
        "createdAt" : "2017-08-25T20:18:08Z",
        "updatedAt" : "2017-08-25T22:04:18Z",
        "lastEditedBy" : "e45395cd-3c20-445c-b404-a2b9ffe5efab",
        "tags" : [
        ]
      }
    ],
    "commit" : "cf75c4988304ff8eab4d0223fa63095e626faaeb",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +1102,1106 @@}\n\n// InstanceExistsByProviderID returns true if the instance with the given provider id still exists and is running.\n// If false is returned with no error, the instance will be immediately deleted by the cloud controller manager.\nfunc (c *Cloud) InstanceExistsByProviderID(providerID string) (bool, error) {"
  },
  {
    "id" : "a4ecfbe8-d38d-4cea-8a8f-f1e21d543547",
    "prId" : 50858,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/50858#pullrequestreview-58766620",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5eb171db-55c0-47c3-a0d4-ccd7671c2ee0",
        "parentId" : null,
        "authorId" : "7aca96c2-45d7-4567-99be-0323d7556c55",
        "body" : "implemented",
        "createdAt" : "2017-08-25T21:21:38Z",
        "updatedAt" : "2017-08-25T21:21:38Z",
        "lastEditedBy" : "7aca96c2-45d7-4567-99be-0323d7556c55",
        "tags" : [
        ]
      }
    ],
    "commit" : "bd3cc8311056be47156b029e7ee44ad558589b64",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +1213,1217 @@// does not initialize node data.\nfunc (c *Cloud) GetZoneByNodeName(nodeName types.NodeName) (cloudprovider.Zone, error) {\n\treturn cloudprovider.Zone{}, errors.New(\"GetZoneByNodeName not imeplemented\")\n}\n"
  },
  {
    "id" : "f54707f7-180b-45c8-9248-21d7930b161f",
    "prId" : 50255,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/50255#pullrequestreview-54675334",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8c3b2e09-fb55-4ac5-81ea-db5e5c7aeafe",
        "parentId" : null,
        "authorId" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "body" : "I think we'll end up glog.Warningf twice here",
        "createdAt" : "2017-08-07T14:36:23Z",
        "updatedAt" : "2017-08-07T14:42:39Z",
        "lastEditedBy" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "tags" : [
        ]
      },
      {
        "id" : "d8c1401d-8d59-4f4c-ab53-7864bbe47291",
        "parentId" : "8c3b2e09-fb55-4ac5-81ea-db5e5c7aeafe",
        "authorId" : "33eeeb26-bf7f-4a89-b145-fa10ce70ec73",
        "body" : "Should have had a continue inside the if block.  The log statements differ in which one it is choosing.  Updated.",
        "createdAt" : "2017-08-07T14:44:17Z",
        "updatedAt" : "2017-08-07T14:44:17Z",
        "lastEditedBy" : "33eeeb26-bf7f-4a89-b145-fa10ce70ec73",
        "tags" : [
        ]
      }
    ],
    "commit" : "10794e7f6e3a35639c4de5f15788304b9eea9f3d",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +2471,2475 @@\t\t// TODO: Should this be an error.\n\t\tif strings.Compare(*existing.SubnetId, *subnet.SubnetId) > 0 {\n\t\t\tglog.Warningf(\"Found multiple subnets in AZ %q; choosing %q between subnets %q and %q\", az, *subnet.SubnetId, *existing.SubnetId, *subnet.SubnetId)\n\t\t\tsubnetsByAZ[az] = subnet\n\t\t\tcontinue"
  },
  {
    "id" : "7ac5e55d-5d61-4391-9d42-524c2d33f6ff",
    "prId" : 47516,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/47516#pullrequestreview-44045269",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "68b22927-d9c8-44e6-89f9-16fa8ee41fec",
        "parentId" : null,
        "authorId" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "body" : "Sounds good.  If nothing else, it leaves us room for our own additional filters.",
        "createdAt" : "2017-06-14T14:56:17Z",
        "updatedAt" : "2017-06-14T15:01:00Z",
        "lastEditedBy" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "tags" : [
        ]
      }
    ],
    "commit" : "ffa622f9c78ed2d9256fd9c8eed307e8c9e0687e",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +160,164 @@\n\t// Number of node names that can be added to a filter. The AWS limit is 200\n\t// but we are using a lower limit on purpose\n\tfilterNodeLimit = 150\n)"
  },
  {
    "id" : "0261cfa4-0bed-4e5e-aeee-ec11f3a95bc7",
    "prId" : 47516,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/47516#pullrequestreview-44045269",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "77b2af42-e97d-4710-88b5-711d68391283",
        "parentId" : null,
        "authorId" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "body" : "Might be worth splitting this into a `partition` function, just because it is tricky and it would be great to have a unit test on it.  I am surprised there isn't one already, but maybe I'm looking in the wrong place.",
        "createdAt" : "2017-06-14T14:57:50Z",
        "updatedAt" : "2017-06-14T15:01:00Z",
        "lastEditedBy" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "tags" : [
        ]
      }
    ],
    "commit" : "ffa622f9c78ed2d9256fd9c8eed307e8c9e0687e",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +3390,3394 @@\tec2Instances := []*ec2.Instance{}\n\n\tfor i := 0; i < len(names); i += filterNodeLimit {\n\t\tend := i + filterNodeLimit\n\t\tif end > len(names) {"
  },
  {
    "id" : "989f5cfa-200d-449f-ac3a-f21495a2ea5f",
    "prId" : 46463,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/46463#pullrequestreview-40811141",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1a6d9097-3a7b-4294-8e3d-5aa79b69a409",
        "parentId" : null,
        "authorId" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "body" : "Can we not do it like - \r\n\r\n```if len(states) == 0 { // default to running }```\r\n\r\nso as other call sites need not change?\r\n",
        "createdAt" : "2017-05-25T21:18:26Z",
        "updatedAt" : "2017-05-25T21:18:26Z",
        "lastEditedBy" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "tags" : [
        ]
      },
      {
        "id" : "c6e90631-d1bc-4733-b43a-1ae0d7348918",
        "parentId" : "1a6d9097-3a7b-4294-8e3d-5aa79b69a409",
        "authorId" : "241ab19e-f85a-4d22-92e2-88f2b6287d14",
        "body" : "I only looked at gce but, since gce does not filter by \"state\" in their equivalent-ish `getInstancesByNames` IMO it's plain wrong for `getinstancesByNodeNames` to default to only getting \"running\" instances. I think it's better if we change all the other call sites and force everyone in the future using this function to decide if they want to filter node instances by states",
        "createdAt" : "2017-05-25T21:24:20Z",
        "updatedAt" : "2017-05-25T21:24:20Z",
        "lastEditedBy" : "241ab19e-f85a-4d22-92e2-88f2b6287d14",
        "tags" : [
        ]
      },
      {
        "id" : "bb6c845f-c764-42f7-a2bb-090f8a46c903",
        "parentId" : "1a6d9097-3a7b-4294-8e3d-5aa79b69a409",
        "authorId" : "241ab19e-f85a-4d22-92e2-88f2b6287d14",
        "body" : "basically imo the function shoudl do what it says, getInstancesByNodeNames, not getRunningInstancesByNodeNames",
        "createdAt" : "2017-05-25T21:25:39Z",
        "updatedAt" : "2017-05-25T21:25:39Z",
        "lastEditedBy" : "241ab19e-f85a-4d22-92e2-88f2b6287d14",
        "tags" : [
        ]
      },
      {
        "id" : "2a9af16c-48aa-4d0f-8ed7-2f9fe11dc275",
        "parentId" : "1a6d9097-3a7b-4294-8e3d-5aa79b69a409",
        "authorId" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "body" : "@justinsb - is there any reason we don't include `stopped` instances in this code? should we consider changing the function interface?\r\n",
        "createdAt" : "2017-05-25T21:36:11Z",
        "updatedAt" : "2017-05-25T21:36:42Z",
        "lastEditedBy" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "tags" : [
        ]
      },
      {
        "id" : "f77fb8b1-d723-400c-aa6a-f756306174b1",
        "parentId" : "1a6d9097-3a7b-4294-8e3d-5aa79b69a409",
        "authorId" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "body" : "I think there's a separate issue open for that discussion.",
        "createdAt" : "2017-05-29T17:53:06Z",
        "updatedAt" : "2017-05-29T17:58:16Z",
        "lastEditedBy" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "tags" : [
        ]
      }
    ],
    "commit" : "319c608fddeb3a2b25438f6ee8bc1eeb2c01b0fe",
    "line" : 47,
    "diffHunk" : "@@ -1,1 +3262,3266 @@\nfunc (c *Cloud) getInstancesByNodeNames(nodeNames []string, states ...string) ([]*ec2.Instance, error) {\n\tnames := aws.StringSlice(nodeNames)\n\n\tnodeNameFilter := &ec2.Filter{"
  },
  {
    "id" : "d9eec8f4-1abd-419a-862d-e562f9b271d7",
    "prId" : 46463,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/46463#pullrequestreview-40811141",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8f040eae-9389-4bc4-a161-1254bee4815a",
        "parentId" : null,
        "authorId" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "body" : "Just as a tip for the future... If we change the signature, it's better IMO to make it incompatible.  It helps the coder find all the places, in means the reviewer doesn't need to check that all the callsites have been changed.  But more than that... There are other PRs or people's work in flight, and we don't want to _silently_ break them.  So in this case it would be `states []string`.",
        "createdAt" : "2017-05-29T17:55:09Z",
        "updatedAt" : "2017-05-29T17:58:16Z",
        "lastEditedBy" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "tags" : [
        ]
      }
    ],
    "commit" : "319c608fddeb3a2b25438f6ee8bc1eeb2c01b0fe",
    "line" : 46,
    "diffHunk" : "@@ -1,1 +3261,3265 @@}\n\nfunc (c *Cloud) getInstancesByNodeNames(nodeNames []string, states ...string) ([]*ec2.Instance, error) {\n\tnames := aws.StringSlice(nodeNames)\n"
  },
  {
    "id" : "252d3111-2262-41f8-884f-5676e8aec91c",
    "prId" : 44452,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/44452#pullrequestreview-33020407",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "62a83c86-9e85-47d2-8b28-962d094154ff",
        "parentId" : null,
        "authorId" : "241ab19e-f85a-4d22-92e2-88f2b6287d14",
        "body" : "last line of this func's comment should be fixed",
        "createdAt" : "2017-04-17T15:21:17Z",
        "updatedAt" : "2017-04-19T20:53:07Z",
        "lastEditedBy" : "241ab19e-f85a-4d22-92e2-88f2b6287d14",
        "tags" : [
        ]
      }
    ],
    "commit" : "a16ee2f514f50888fb04e586163c64db7ec141ea",
    "line" : 0,
    "diffHunk" : "@@ -1,1 +1227,1231 @@// If the volume is already assigned, this will return the existing mountDevice with alreadyAttached=true.\n// Otherwise the mountDevice is assigned by finding the first available mountDevice, and it is returned with alreadyAttached=false.\nfunc (c *Cloud) getMountDevice(\n\ti *awsInstance,\n\tinfo *ec2.Instance,"
  },
  {
    "id" : "9b29def0-616f-49e3-a047-56d5be270731",
    "prId" : 41702,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/41702#pullrequestreview-24440003",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "73c2f0c7-6fdd-4cff-bf2e-b3c16ee9b9d9",
        "parentId" : null,
        "authorId" : "3f681241-1a29-4fbf-bddc-1df89a871240",
        "body" : "which of them is more standard? `kubernetes.io` or `k8s.io`?",
        "createdAt" : "2017-03-01T10:04:54Z",
        "updatedAt" : "2017-03-01T10:04:54Z",
        "lastEditedBy" : "3f681241-1a29-4fbf-bddc-1df89a871240",
        "tags" : [
        ]
      }
    ],
    "commit" : "b1079f881363acc6bc5fc3b9bb816a41ec172ae0",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +160,164 @@// awsTagNameMasterRoles is a set of well-known AWS tag names that indicate the instance is a master\n// The major consequence is that it is then not considered for AWS zone discovery for dynamic volume creation.\nvar awsTagNameMasterRoles = sets.NewString(\"kubernetes.io/role/master\", \"k8s.io/role/master\")\n\n// Maps from backend protocol to ELB protocol"
  },
  {
    "id" : "7566cf71-d043-4663-ad58-b797b3471ac1",
    "prId" : 39996,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/39996#pullrequestreview-24041658",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "aef50f1a-9caa-43b2-adfd-39c5bf256268",
        "parentId" : null,
        "authorId" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "body" : "You still also want to set `awsCloud.vpcID`, I believe, otherwise ELBs will fail",
        "createdAt" : "2017-02-27T15:20:53Z",
        "updatedAt" : "2017-03-01T17:02:59Z",
        "lastEditedBy" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "tags" : [
        ]
      },
      {
        "id" : "160ae53a-39b1-4496-822b-26f6a47ad500",
        "parentId" : "aef50f1a-9caa-43b2-adfd-39c5bf256268",
        "authorId" : "25e24482-f5fe-4c2b-9763-3c606dc21a47",
        "body" : "I add the `awsCloud.vpcID`",
        "createdAt" : "2017-02-27T17:16:05Z",
        "updatedAt" : "2017-03-01T17:02:59Z",
        "lastEditedBy" : "25e24482-f5fe-4c2b-9763-3c606dc21a47",
        "tags" : [
        ]
      }
    ],
    "commit" : "0be5e6041b426ad92f21005b4fbd390b8776ee77",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +825,829 @@\t\t\tnodeName: \"master-dummy\",\n\t\t\tvpcID:    cfg.Global.VPC,\n\t\t}\n\t\tawsCloud.vpcID = cfg.Global.VPC\n\t} else {"
  },
  {
    "id" : "4345fa1e-eb47-495f-ab76-34cb364671c6",
    "prId" : 38766,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/38766#pullrequestreview-15051092",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1a681142-36e4-4336-80ae-8ddad23fad9d",
        "parentId" : null,
        "authorId" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "body" : "Why do we still need this when `ExponentialBackoff` function already only attempts the supplied function only X number of times? May be so as we don't lose AWS error? ",
        "createdAt" : "2016-12-19T19:25:24Z",
        "updatedAt" : "2016-12-19T19:26:14Z",
        "lastEditedBy" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "tags" : [
        ]
      },
      {
        "id" : "61aa6a1a-8dd2-480c-aa58-3c9dc082a283",
        "parentId" : "1a681142-36e4-4336-80ae-8ddad23fad9d",
        "authorId" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "body" : "I wanted to keep the spirit of original code:\r\n* we want to ignore few describeVolume() errors\r\n* we want to report an error when describeVolume() fails consistently\r\n\r\nI am not sure why this logic was there, someone had a bad experience with failing describeVolume.",
        "createdAt" : "2016-12-20T07:58:16Z",
        "updatedAt" : "2016-12-20T07:58:36Z",
        "lastEditedBy" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "tags" : [
        ]
      },
      {
        "id" : "afc6b93c-006b-4f45-8ca6-96c96238cc49",
        "parentId" : "1a681142-36e4-4336-80ae-8ddad23fad9d",
        "authorId" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "body" : "re- \"we want to ignore few describeVolume() errors\" - but if we return `false` and `nil` from the backoff function - won't it automatically ignore the error N number of times? Also to report the error - we can probably do same thing that you did in `createTags` ? ",
        "createdAt" : "2016-12-21T02:46:00Z",
        "updatedAt" : "2016-12-21T02:46:00Z",
        "lastEditedBy" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "tags" : [
        ]
      },
      {
        "id" : "cc55cf46-2cd1-4a2c-90c8-7a9300af90d9",
        "parentId" : "1a681142-36e4-4336-80ae-8ddad23fad9d",
        "authorId" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "body" : "'N' is different in the cases you describe. We want to ignore `volumeAttachmentStatusConsecutiveErrorLimit` (=10) failed attempts and then stop trying. This should be relatively quick (3.4 minutes?). If the code returned `false, nil`, it would try `volumeAttachmentStatusConsecutiveErrorLimit` (=21) times, which takes 30 minutes.",
        "createdAt" : "2017-01-02T14:28:56Z",
        "updatedAt" : "2017-01-02T14:28:56Z",
        "lastEditedBy" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "tags" : [
        ]
      },
      {
        "id" : "6e6afcb7-6f27-4855-94f0-4949dc3388dd",
        "parentId" : "1a681142-36e4-4336-80ae-8ddad23fad9d",
        "authorId" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "body" : "The bad experience: It's rate limiting.  It's always rate limiting.\r\n\r\n> // Because of rate limiting, we often see errors from describeVolume\r\n> // So we tolerate a limited number of failures.\r\n> // But once we see more than 10 errors in a row, we return the error",
        "createdAt" : "2017-01-04T02:55:36Z",
        "updatedAt" : "2017-01-04T02:56:56Z",
        "lastEditedBy" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "tags" : [
        ]
      }
    ],
    "commit" : "be3fcd43835b1a4aa6426a78b45d07fb80c46936",
    "line" : 66,
    "diffHunk" : "@@ -1,1 +1330,1334 @@\t\tif err != nil {\n\t\t\tdescribeErrorCount++\n\t\t\tif describeErrorCount > volumeAttachmentStatusConsecutiveErrorLimit {\n\t\t\t\t// report the error\n\t\t\t\treturn false, err"
  },
  {
    "id" : "55aff70d-882e-4ed6-bf61-b508908918ce",
    "prId" : 38505,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/38505#pullrequestreview-26523718",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "184b0d88-fda4-49b7-abfb-8dfc1578157f",
        "parentId" : null,
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "Do you need these two booleans?  Can you just infer from if the string is empty?",
        "createdAt" : "2017-03-10T00:32:30Z",
        "updatedAt" : "2017-05-24T08:48:32Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "f2a9033a-e921-4aae-9ff7-b71feacb4b03",
        "parentId" : "184b0d88-fda4-49b7-abfb-8dfc1578157f",
        "authorId" : "f6e2d6c7-c24e-4a4e-ae28-44e89053e54a",
        "body" : "IMHO, I can approach it using one of the below ways:\r\n\r\nA, riskier: infer from the empty string `AvailabilityZone` or `AvailabilityZones` that the optional parameter `zone` or `zones` wasn't present. As the Persistent Volume Claim parameters are provided as `map[string]string` the values `\"zone\": \"\"` or `\"zones\": \"\"` are perfectly valid values in Go lang even though K8s yaml file parsing shall never provide such values. So in case I relay on the K8s yaml file parsing I can use the `AvailabilityZone` or `AvailabilityZones` empty string values as an indication that the `zone` or `zones` parameter were not specified in a Persistent Volume Claim. However, if my code is \"fed\" with unexpected input the incorrect input value `\"zone\": \"\"` or `\"zones\": \"\"` will remain undetected.\r\n\r\nB, defensive: use a dedicated booleans to indicate whether the `zone` or `zones` optional parameters were present or not.\r\n\r\nI chose the defensive approach.",
        "createdAt" : "2017-03-10T14:32:17Z",
        "updatedAt" : "2017-05-24T08:48:32Z",
        "lastEditedBy" : "f6e2d6c7-c24e-4a4e-ae28-44e89053e54a",
        "tags" : [
        ]
      },
      {
        "id" : "914db787-8ff8-4103-8ccb-6d239a414295",
        "parentId" : "184b0d88-fda4-49b7-abfb-8dfc1578157f",
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "So if I understand correctly, zone or zones == \"\" is invalid, and should return an error, while zone && zones == nil is valid.  Can you add unit tests for all these permutations of zone/zones == nil, \"\", and value?",
        "createdAt" : "2017-03-10T19:06:59Z",
        "updatedAt" : "2017-05-24T08:48:32Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "43492703-d744-448f-952f-c192d950d404",
        "parentId" : "184b0d88-fda4-49b7-abfb-8dfc1578157f",
        "authorId" : "f6e2d6c7-c24e-4a4e-ae28-44e89053e54a",
        "body" : "The check for `zones == \"\"` was already present in the `func ZonesToSet`.\r\n\r\nI added `func ValidateZone` to check for `zone == \"\"`.\r\n",
        "createdAt" : "2017-03-13T11:07:00Z",
        "updatedAt" : "2017-05-24T08:48:32Z",
        "lastEditedBy" : "f6e2d6c7-c24e-4a4e-ae28-44e89053e54a",
        "tags" : [
        ]
      }
    ],
    "commit" : "9eb912e62fd7a8f9fd7d6347b412e5b80ae98ab3",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +292,296 @@\tPVCName           string\n\tVolumeType        string\n\tZonePresent       bool\n\tZonesPresent      bool\n\tAvailabilityZone  string"
  },
  {
    "id" : "d7040080-f399-442d-acc1-215a1344ac9f",
    "prId" : 34859,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/34859#pullrequestreview-6175328",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "39a95342-aad2-4956-8e98-8767b0ff1922",
        "parentId" : null,
        "authorId" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "body" : "I worry this isn't going to be quite right...  I think a diskname normally looks like `aws:///vol-abcdef`\n",
        "createdAt" : "2016-10-26T18:42:21Z",
        "updatedAt" : "2016-10-28T16:25:23Z",
        "lastEditedBy" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "tags" : [
        ]
      },
      {
        "id" : "9d810c84-fdcc-49d4-aacd-3f4b6a1a899b",
        "parentId" : "39a95342-aad2-4956-8e98-8767b0ff1922",
        "authorId" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "body" : "But I follow the same logic in existing DiskIsAttached function? Is that function fine?\n",
        "createdAt" : "2016-10-26T18:45:31Z",
        "updatedAt" : "2016-10-28T16:25:23Z",
        "lastEditedBy" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "tags" : [
        ]
      },
      {
        "id" : "b619f814-34f4-454c-9ea5-3300cf43e6b1",
        "parentId" : "39a95342-aad2-4956-8e98-8767b0ff1922",
        "authorId" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "body" : "I believe not, unless I am missing something.\n\nSome background here: https://github.com/kubernetes/kubernetes/blob/master/pkg/cloudprovider/providers/aws/aws.go#L1277-L1312\n\nA volumeid from AWS is going to look like `vol-abcdef0` (or longer).  A volumeid in the volume spec could look like that, or could be `aws:///vol-abcdef0`.  We are supposed to normalize before comparing to raw API ids, but it looks like I missed that check.\n",
        "createdAt" : "2016-10-26T19:11:28Z",
        "updatedAt" : "2016-10-28T16:25:23Z",
        "lastEditedBy" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "tags" : [
        ]
      },
      {
        "id" : "6827ac12-e3eb-4d13-94fc-5d08739c0e9b",
        "parentId" : "39a95342-aad2-4956-8e98-8767b0ff1922",
        "authorId" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "body" : "If you want, we can merge this as is, and then I might do the same thing I did with `types.NodeName`, with `aws.VolumeNameSpec` or something, so I can catch any more of these.\n\nI don't think we gate on AWS e2e failures?\n",
        "createdAt" : "2016-10-26T19:28:11Z",
        "updatedAt" : "2016-10-28T16:25:23Z",
        "lastEditedBy" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "tags" : [
        ]
      },
      {
        "id" : "c099a694-2a22-4520-8e30-8537cb9963a3",
        "parentId" : "39a95342-aad2-4956-8e98-8767b0ff1922",
        "authorId" : "8e448017-7838-493d-a424-33cada0da657",
        "body" : "Let's do it in a follow-up. Created issue https://github.com/kubernetes/kubernetes/issues/35746 to followup\n",
        "createdAt" : "2016-10-28T01:32:35Z",
        "updatedAt" : "2016-10-28T16:25:23Z",
        "lastEditedBy" : "8e448017-7838-493d-a424-33cada0da657",
        "tags" : [
        ]
      }
    ],
    "commit" : "abbde4337485d0286ab51bbebff54ff02eb33694",
    "line" : 39,
    "diffHunk" : "@@ -1,1 +1803,1807 @@\t\tvolumeId := aws.StringValue(blockDevice.Ebs.VolumeId)\n\t\tfor _, diskName := range diskNames {\n\t\t\tif volumeId == diskName {\n\t\t\t\t// Disk is still attached to node\n\t\t\t\tattached[diskName] = true"
  },
  {
    "id" : "adc6c440-c0ab-42a5-8df2-8622eaeeb878",
    "prId" : 32636,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/32636#pullrequestreview-437676",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d2ac9e7a-a6af-4c67-b78d-ac2ad7e81093",
        "parentId" : null,
        "authorId" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "body" : "I am wondering whether 20 second might be bit of long for retrying? Because of this, attach/detach will be pending for at least 20 second if it gets error for checking the status.\n",
        "createdAt" : "2016-09-16T22:29:04Z",
        "updatedAt" : "2016-09-16T22:32:43Z",
        "lastEditedBy" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "tags" : [
        ]
      }
    ],
    "commit" : "3688dc4a72bdb1fa4946d11dadf2f76741295d92",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +144,148 @@\t// volumeAttachmentErrorDelay is the amount of time we wait before retrying after encountering an error,\n\t// while waiting for a volume attach/detach to complete\n\tvolumeAttachmentStatusErrorDelay = 20 * time.Second\n\t// volumeAttachmentStatusPollInterval is the interval at which we poll the volume,\n\t// while waiting for a volume attach/detach to complete"
  },
  {
    "id" : "c3fa0cb3-2aae-4d98-bf42-3de4cac2d6b0",
    "prId" : 32636,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/32636#pullrequestreview-553942",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b89461a7-b193-43d2-97a9-b3c3516f411e",
        "parentId" : null,
        "authorId" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "body" : "Similar to the above comment, I am wondering what is a good interval for retry, not too long, not too short...\n",
        "createdAt" : "2016-09-16T22:29:50Z",
        "updatedAt" : "2016-09-16T22:32:43Z",
        "lastEditedBy" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "tags" : [
        ]
      },
      {
        "id" : "aa0efa1f-372d-4f76-9aa3-b3df5aff2880",
        "parentId" : "b89461a7-b193-43d2-97a9-b3c3516f411e",
        "authorId" : "a7f673a6-4b23-4df6-aa10-f123fa9dcd5f",
        "body" : "GCE has a fixed calls/second quota, while AWS doesn't.\n",
        "createdAt" : "2016-09-19T13:55:35Z",
        "updatedAt" : "2016-09-19T13:55:35Z",
        "lastEditedBy" : "a7f673a6-4b23-4df6-aa10-f123fa9dcd5f",
        "tags" : [
        ]
      }
    ],
    "commit" : "3688dc4a72bdb1fa4946d11dadf2f76741295d92",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +147,151 @@\t// volumeAttachmentStatusPollInterval is the interval at which we poll the volume,\n\t// while waiting for a volume attach/detach to complete\n\tvolumeAttachmentStatusPollInterval = 10 * time.Second\n)\n"
  },
  {
    "id" : "8badba18-e392-4ea8-899a-01775c2ad7c0",
    "prId" : 32636,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/32636#pullrequestreview-437676",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "edc21fd2-380e-4597-9f96-17ae8c062d87",
        "parentId" : null,
        "authorId" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "body" : "This timeout will prevent further attach/detach retry for quite long time. \n",
        "createdAt" : "2016-09-16T22:30:59Z",
        "updatedAt" : "2016-09-16T22:32:43Z",
        "lastEditedBy" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "tags" : [
        ]
      }
    ],
    "commit" : "3688dc4a72bdb1fa4946d11dadf2f76741295d92",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +139,143 @@const (\n\t// volumeAttachmentStatusTimeout is the maximum time to wait for a volume attach/detach to complete\n\tvolumeAttachmentStatusTimeout = 30 * time.Minute\n\t// volumeAttachmentConsecutiveErrorLimit is the number of consecutive errors we will ignore when waiting for a volume to attach/detach\n\tvolumeAttachmentStatusConsecutiveErrorLimit = 10"
  },
  {
    "id" : "dfabf6e6-7521-495d-aaa0-9ad66a200aeb",
    "prId" : 31115,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8cdad077-88b1-4515-9d04-b55cc4b83566",
        "parentId" : null,
        "authorId" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "body" : "I checked the EBS link, but I see the numbers are different for SSD and HDD drivers. Are we only considering SSD?\n",
        "createdAt" : "2016-08-22T17:12:23Z",
        "updatedAt" : "2016-08-24T13:17:42Z",
        "lastEditedBy" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "tags" : [
        ]
      },
      {
        "id" : "681f8359-7ec2-4d7e-bae4-4add0ee66080",
        "parentId" : "8cdad077-88b1-4515-9d04-b55cc4b83566",
        "authorId" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "body" : "IOPS can be set by user only for `io1` volumes, IOPS for the rest of volumes is preset by AWS.\n",
        "createdAt" : "2016-08-23T07:33:02Z",
        "updatedAt" : "2016-08-24T13:17:42Z",
        "lastEditedBy" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "tags" : [
        ]
      },
      {
        "id" : "ddedd883-0f0a-4928-9e1b-68457ed0e078",
        "parentId" : "8cdad077-88b1-4515-9d04-b55cc4b83566",
        "authorId" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "body" : "ack\n",
        "createdAt" : "2016-08-23T15:42:14Z",
        "updatedAt" : "2016-08-24T13:17:42Z",
        "lastEditedBy" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "tags" : [
        ]
      }
    ],
    "commit" : "a596668de7c3995d1f0af758511926987d1e8fb4",
    "line" : null,
    "diffHunk" : "@@ -1,1 +226,230 @@const (\n\tMinTotalIOPS = 100\n\tMaxTotalIOPS = 20000\n)\n"
  },
  {
    "id" : "1e4114f4-14fd-4cfe-babb-debff476b298",
    "prId" : 31115,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7c208483-6fc0-4cb7-98b8-3d69d151d5ab",
        "parentId" : null,
        "authorId" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "body" : "Is it better to return error message instead of silently capping it?\n",
        "createdAt" : "2016-08-22T17:13:20Z",
        "updatedAt" : "2016-08-24T13:17:42Z",
        "lastEditedBy" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "tags" : [
        ]
      },
      {
        "id" : "fec811b8-af6c-44df-a376-1af9331bf410",
        "parentId" : "7c208483-6fc0-4cb7-98b8-3d69d151d5ab",
        "authorId" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "body" : "No. If someone has IOPSPerGB = 50, i.e. wants the fastest volume, it would imply that only volumes up 400 GB can be created, for the rest an error would be returned. With this capping, the user gets the fastest possible volume for any size.\n",
        "createdAt" : "2016-08-23T07:35:58Z",
        "updatedAt" : "2016-08-24T13:17:42Z",
        "lastEditedBy" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "tags" : [
        ]
      },
      {
        "id" : "cfc7621b-29a3-455b-8fa7-968ae937b23d",
        "parentId" : "7c208483-6fc0-4cb7-98b8-3d69d151d5ab",
        "authorId" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "body" : "ack\n",
        "createdAt" : "2016-08-23T15:38:35Z",
        "updatedAt" : "2016-08-24T13:17:42Z",
        "lastEditedBy" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "tags" : [
        ]
      }
    ],
    "commit" : "a596668de7c3995d1f0af758511926987d1e8fb4",
    "line" : null,
    "diffHunk" : "@@ -1,1 +1525,1529 @@\t\t// low/high.\n\t\tif iops < MinTotalIOPS {\n\t\t\tiops = MinTotalIOPS\n\t\t}\n\t\tif iops > MaxTotalIOPS {"
  },
  {
    "id" : "77f8829c-7f58-40a3-9191-7168673a6e2b",
    "prId" : 31090,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bfcde074-f5fb-42de-b81b-21899ed49b79",
        "parentId" : null,
        "authorId" : "8e448017-7838-493d-a424-33cada0da657",
        "body" : "This adds a volume to the map. It is removed in `endAttaching()`. This method is called on line 1398 in `AttachDisk()` _before_ `endAttaching()` is called on line 1414 inside a defer. It is unlikely, but that means that if there is an error between these two points, a volume could be added and never removed from the map. Maybe the defer wrapping `endAttaching` can be executed before this method?\n",
        "createdAt" : "2016-08-25T03:48:36Z",
        "updatedAt" : "2016-08-26T02:52:26Z",
        "lastEditedBy" : "8e448017-7838-493d-a424-33cada0da657",
        "tags" : [
        ]
      },
      {
        "id" : "7bbf41dd-be4f-46db-b774-b4b53e2750a5",
        "parentId" : "bfcde074-f5fb-42de-b81b-21899ed49b79",
        "authorId" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "body" : "Moved the code per your suggestion.\n",
        "createdAt" : "2016-09-01T04:18:11Z",
        "updatedAt" : "2016-09-01T04:18:11Z",
        "lastEditedBy" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "tags" : [
        ]
      }
    ],
    "commit" : "7e5c6877d7b75e9f8db67109451f1474c755626a",
    "line" : 101,
    "diffHunk" : "@@ -1,1 +1179,1183 @@\t\tc.attaching[i.nodeName] = attaching\n\t}\n\tattaching[chosen] = volumeID\n\tglog.V(2).Infof(\"Assigned mount device %s -> volume %s\", chosen, volumeID)\n"
  },
  {
    "id" : "0036a528-fa3a-4bba-a090-4cd627ba8a8f",
    "prId" : 31090,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a84d74ef-6118-459b-8709-3efbf629d351",
        "parentId" : null,
        "authorId" : "8e448017-7838-493d-a424-33cada0da657",
        "body" : "`DetachDisk(...)` has the same issue: `getMountDevice(...)` is called then a bunch of things happen and then `endAttaching(...)` is called. Meaning a volume could get added to the map but not removed.\n",
        "createdAt" : "2016-08-30T00:50:43Z",
        "updatedAt" : "2016-08-30T00:50:43Z",
        "lastEditedBy" : "8e448017-7838-493d-a424-33cada0da657",
        "tags" : [
        ]
      },
      {
        "id" : "6defd2cd-b6be-410e-96c0-fd9c5b979b6c",
        "parentId" : "a84d74ef-6118-459b-8709-3efbf629d351",
        "authorId" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "body" : "When we call getMountDevice, we pass false, meaning we will never _add_ to the attaching list.  But if there was an in-process attach operation and we ended up detaching the disk, we believe that means that an in-flight attach operation has been cancelled.  So we call endAttaching, but we do not normally expect it to have been in the list.  Maybe it should now just be an error if there was a concurrent attach operation, or maybe the volume controller can now provide some sort of mutex guarantee?\n",
        "createdAt" : "2016-09-01T04:16:33Z",
        "updatedAt" : "2016-09-01T04:16:33Z",
        "lastEditedBy" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "tags" : [
        ]
      },
      {
        "id" : "8af9d25e-1c0c-4fce-8d14-1d372fb4b9c2",
        "parentId" : "a84d74ef-6118-459b-8709-3efbf629d351",
        "authorId" : "8e448017-7838-493d-a424-33cada0da657",
        "body" : "Got it, thanks for the clarification.\n",
        "createdAt" : "2016-09-02T21:05:14Z",
        "updatedAt" : "2016-09-02T21:05:14Z",
        "lastEditedBy" : "8e448017-7838-493d-a424-33cada0da657",
        "tags" : [
        ]
      }
    ],
    "commit" : "7e5c6877d7b75e9f8db67109451f1474c755626a",
    "line" : 305,
    "diffHunk" : "@@ -1,1 +1519,1523 @@\n\tif mountDevice != \"\" {\n\t\tc.endAttaching(awsInstance, disk.awsID, mountDevice)\n\t\t// We don't check the return value - we don't really expect the attachment to have been\n\t\t// in progress, though it might have been"
  },
  {
    "id" : "c821ab90-8de1-45cf-8081-f9947fc56bae",
    "prId" : 31090,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "abf35ad3-859d-4083-8dc3-66b35db00ace",
        "parentId" : null,
        "authorId" : "8e448017-7838-493d-a424-33cada0da657",
        "body" : "nit: The naming of this is confusing since it is used to keep track of both in-flight attach and detach operations.\n",
        "createdAt" : "2016-08-30T00:51:33Z",
        "updatedAt" : "2016-08-30T00:51:33Z",
        "lastEditedBy" : "8e448017-7838-493d-a424-33cada0da657",
        "tags" : [
        ]
      },
      {
        "id" : "cf89a212-3b6c-4d65-b61f-803d864bf89b",
        "parentId" : "abf35ad3-859d-4083-8dc3-66b35db00ace",
        "authorId" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "body" : "Actually it is just attach operations.  When called in detach, it is called with false so we won't add a map entry.  The confusion is that a Detach operation will cancel an in-flight Attach operation.\n",
        "createdAt" : "2016-09-01T04:19:08Z",
        "updatedAt" : "2016-09-01T04:19:08Z",
        "lastEditedBy" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "tags" : [
        ]
      },
      {
        "id" : "676200eb-f461-4e97-b256-df9a4ff4e164",
        "parentId" : "abf35ad3-859d-4083-8dc3-66b35db00ace",
        "authorId" : "8e448017-7838-493d-a424-33cada0da657",
        "body" : "Ack.\n",
        "createdAt" : "2016-09-02T21:04:41Z",
        "updatedAt" : "2016-09-02T21:04:41Z",
        "lastEditedBy" : "8e448017-7838-493d-a424-33cada0da657",
        "tags" : [
        ]
      }
    ],
    "commit" : "7e5c6877d7b75e9f8db67109451f1474c755626a",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +304,308 @@\t// and then get a second request before we attach the volume\n\tattachingMutex sync.Mutex\n\tattaching      map[ /*nodeName*/ string]map[mountDevice]string\n}\n"
  },
  {
    "id" : "d2627df5-5ce8-40a5-af75-d17d48088cdd",
    "prId" : 30880,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "17525b64-ca60-4950-8901-e227f0d1f3d1",
        "parentId" : null,
        "authorId" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "body" : "I tend to prefer the `aws.String(s)` help function now that it is available (and Bool, Int64 etc friends).  But just my personal preference.\n\nHave we tested this without a KmsKeyId?  Not all AWS APIs like being passed \"\" (which is why we have to do the whole crazy pointer dance in the first place!)\n",
        "createdAt" : "2016-08-19T15:14:40Z",
        "updatedAt" : "2016-08-19T15:14:40Z",
        "lastEditedBy" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "tags" : [
        ]
      }
    ],
    "commit" : "9a2645aa5e206b9ba9afc8118811ea7ac4b23cc2",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +1537,1541 @@\trequest.VolumeType = &createType\n\trequest.Encrypted = &volumeOptions.Encrypted\n\trequest.KmsKeyId = &volumeOptions.KmsKeyId\n\tif len(*request.KmsKeyId) > 0 {\n\t\tb := true"
  },
  {
    "id" : "7991d441-c3f5-4d3c-a8e9-90705a484820",
    "prId" : 30880,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a8641049-8f90-4d59-a5e8-c68f62f95493",
        "parentId" : null,
        "authorId" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "body" : "Nit: I would probably go to the source here - i.e. `if len(volumeOptions.KmsKeyId) > 0`.  (Not sure why we do that rather than check != \"\", but it is our style).\n",
        "createdAt" : "2016-08-19T15:15:36Z",
        "updatedAt" : "2016-08-19T15:15:36Z",
        "lastEditedBy" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "tags" : [
        ]
      }
    ],
    "commit" : "9a2645aa5e206b9ba9afc8118811ea7ac4b23cc2",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +1538,1542 @@\trequest.Encrypted = &volumeOptions.Encrypted\n\trequest.KmsKeyId = &volumeOptions.KmsKeyId\n\tif len(*request.KmsKeyId) > 0 {\n\t\tb := true\n\t\trequest.Encrypted = &b"
  },
  {
    "id" : "15839887-03f2-4b80-ac29-19482a637f17",
    "prId" : 30880,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "50c6e2fb-fdd1-43a1-af53-93ae605e2d5c",
        "parentId" : null,
        "authorId" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "body" : "Nit: `aws.Bool(true)` is definitely a win in _this_ case :-)\n",
        "createdAt" : "2016-08-19T15:15:55Z",
        "updatedAt" : "2016-08-19T15:15:55Z",
        "lastEditedBy" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "tags" : [
        ]
      }
    ],
    "commit" : "9a2645aa5e206b9ba9afc8118811ea7ac4b23cc2",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +1540,1544 @@\tif len(*request.KmsKeyId) > 0 {\n\t\tb := true\n\t\trequest.Encrypted = &b\n\t}\n\tif iops > 0 {"
  },
  {
    "id" : "754bf3c6-00be-4ff8-885c-f82409b92b83",
    "prId" : 29485,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "40060bd4-59cb-48c6-a10b-159d4d4fa04d",
        "parentId" : null,
        "authorId" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "body" : "Yes, we have to be really careful with when we return InstanceNotFound.  According to the comments on cloudprovider.Instances, we must return InstanceNotFound, but actually that's wrong and it only applies to ExternalID (AFAICT), and you didn't wrap it there.  I'll put in a separate PR to fix the comments.\n\nTo (try to) be clear: But what you're done here is right,  though it would be wrong if the docs were right.  At least I think so!\n",
        "createdAt" : "2016-07-23T01:16:03Z",
        "updatedAt" : "2016-07-23T05:07:50Z",
        "lastEditedBy" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "tags" : [
        ]
      }
    ],
    "commit" : "89fd358c52ae612a713753af426bbadef69dbe6d",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +870,874 @@\tinst, err := c.getInstanceByNodeName(name)\n\tif err != nil {\n\t\treturn \"\", fmt.Errorf(\"getInstanceByNodeName failed for %q with %v\", name, err)\n\t}\n\treturn \"/\" + orEmpty(inst.Placement.AvailabilityZone) + \"/\" + orEmpty(inst.InstanceId), nil"
  },
  {
    "id" : "2a4b0886-d246-4181-aa09-f4902b618904",
    "prId" : 29048,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "07acc089-2e19-4e42-bcca-699f31742637",
        "parentId" : null,
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "Can we remove the input hostname?\n",
        "createdAt" : "2016-07-20T22:14:08Z",
        "updatedAt" : "2016-09-27T14:48:09Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      },
      {
        "id" : "52e9b209-ca1c-4188-ab8a-7fa2c031736e",
        "parentId" : "07acc089-2e19-4e42-bcca-699f31742637",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "Nvm, obviously it's implementing an interface..\n",
        "createdAt" : "2016-07-20T22:16:13Z",
        "updatedAt" : "2016-09-27T14:48:09Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      },
      {
        "id" : "fbdcbed6-4f5f-46a4-a82d-a0bc2de126a3",
        "parentId" : "07acc089-2e19-4e42-bcca-699f31742637",
        "authorId" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "body" : "pedantic nit: i would be cool with more interface checks for the interfaces `Cloud` implements\n",
        "createdAt" : "2016-07-21T00:20:50Z",
        "updatedAt" : "2016-09-27T14:48:09Z",
        "lastEditedBy" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "tags" : [
        ]
      },
      {
        "id" : "91d8c72e-068e-4e44-be0b-fd84101c6bf4",
        "parentId" : "07acc089-2e19-4e42-bcca-699f31742637",
        "authorId" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "body" : "@pmorie by that do you mean `var _ Interface = &Impl{}` or something else.  I'm inclined to agree with you, though not necessarily in this PR!\n\nI think the original reasoning behind not just using checked casting was that in theory another object might implement one of the cloud provider interfaces.  I don't think anyone actually does that though.\n",
        "createdAt" : "2016-07-21T02:23:09Z",
        "updatedAt" : "2016-09-27T14:48:09Z",
        "lastEditedBy" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "tags" : [
        ]
      }
    ],
    "commit" : "54195d590f03a544d78b4449b2fbafaa258fd6df",
    "line" : 46,
    "diffHunk" : "@@ -1,1 +538,542 @@\n// CurrentNodeName returns the name of the current node\nfunc (c *Cloud) CurrentNodeName(hostname string) (types.NodeName, error) {\n\treturn c.selfAWSInstance.nodeName, nil\n}"
  },
  {
    "id" : "53beabdc-a8b2-4db8-b2d4-5c486fa292d6",
    "prId" : 29006,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c275cfb6-f5d6-4022-b344-5b9dfbd4c1f7",
        "parentId" : null,
        "authorId" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "body" : "comment what each of these is, plz\n",
        "createdAt" : "2016-07-20T14:56:06Z",
        "updatedAt" : "2016-08-18T10:50:16Z",
        "lastEditedBy" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "tags" : [
        ]
      }
    ],
    "commit" : "bb5d562f37ab029d2b562e23bd23e906ee099a45",
    "line" : null,
    "diffHunk" : "@@ -1,1 +211,215 @@\n// AWS volume types\nconst (\n\t// Provisioned IOPS SSD\n\tVolumeTypeIO1 = \"io1\""
  },
  {
    "id" : "64f62681-4f57-491d-a7c9-758a61e7a2de",
    "prId" : 29006,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "66142234-b76e-493c-a12d-c0a3f8ceb428",
        "parentId" : null,
        "authorId" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "body" : "Is there any reason to make users do math here ;-)  i.e. why not just specify iops?\n",
        "createdAt" : "2016-08-18T15:47:35Z",
        "updatedAt" : "2016-08-18T15:47:35Z",
        "lastEditedBy" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "tags" : [
        ]
      },
      {
        "id" : "529c685e-82e4-4b78-8847-0a459a5f316c",
        "parentId" : "66142234-b76e-493c-a12d-c0a3f8ceb428",
        "authorId" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "body" : "@justinsb If iops was fixed in the storage class it would not scale with PVC sizes. If say 1000 IOPS was configured, it would be really slow volume for someone who wants 500 GB disk and quite a fast one for  1GB disk.\n\nWith IOPSPerGB, admin can create a \"fast\" class, which is fast for everybody, regardless of PVC size.\n",
        "createdAt" : "2016-08-18T16:47:03Z",
        "updatedAt" : "2016-08-18T16:47:04Z",
        "lastEditedBy" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "tags" : [
        ]
      },
      {
        "id" : "016ca689-f681-4588-8d39-9410f8be6ee3",
        "parentId" : "66142234-b76e-493c-a12d-c0a3f8ceb428",
        "authorId" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "body" : "That makes a ton of sense - missed that this isn't per volume.  It's totally worth doing division for that - nice design :-)\n",
        "createdAt" : "2016-08-18T16:53:08Z",
        "updatedAt" : "2016-08-18T16:53:08Z",
        "lastEditedBy" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "tags" : [
        ]
      }
    ],
    "commit" : "bb5d562f37ab029d2b562e23bd23e906ee099a45",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +232,236 @@\t// IOPSPerGB must be bigger than zero and smaller or equal to 30.\n\t// Calculated total IOPS will be capped at 20000 IOPS.\n\tIOPSPerGB int\n}\n"
  },
  {
    "id" : "a641d43a-551b-4419-a97e-62250dee6e74",
    "prId" : 29006,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d77aa67e-0e33-43a9-9c95-61183b02c6d5",
        "parentId" : null,
        "authorId" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "body" : "gp2 can also have provisioned iops.  Although I don't know why you would... I think it's just legacy, from before the io1 era.\n",
        "createdAt" : "2016-08-18T15:49:07Z",
        "updatedAt" : "2016-08-18T15:49:25Z",
        "lastEditedBy" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "tags" : [
        ]
      },
      {
        "id" : "2372fd38-f865-49ed-bd6b-a5f04dcd2d76",
        "parentId" : "d77aa67e-0e33-43a9-9c95-61183b02c6d5",
        "authorId" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "body" : "Actually, I'm just wrong.  Sorry!\n",
        "createdAt" : "2016-08-18T15:50:24Z",
        "updatedAt" : "2016-08-18T15:50:24Z",
        "lastEditedBy" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "tags" : [
        ]
      }
    ],
    "commit" : "bb5d562f37ab029d2b562e23bd23e906ee099a45",
    "line" : 47,
    "diffHunk" : "@@ -1,1 +1503,1507 @@\tswitch volumeOptions.VolumeType {\n\tcase VolumeTypeGP2, VolumeTypeSC1, VolumeTypeST1:\n\t\tcreateType = volumeOptions.VolumeType\n\n\tcase VolumeTypeIO1:"
  },
  {
    "id" : "ce96583c-734a-47e1-a725-fdabe13469dc",
    "prId" : 29006,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ab26cc15-cb71-49f5-a5f0-b2ef38c64627",
        "parentId" : null,
        "authorId" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "body" : "why those numbers are hardcoded? Isn't it better to put constants somewhere?\nWhat if they change in the future?\n",
        "createdAt" : "2016-08-19T18:17:54Z",
        "updatedAt" : "2016-08-19T18:17:54Z",
        "lastEditedBy" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "tags" : [
        ]
      },
      {
        "id" : "d2103fcf-021a-4851-8833-df3141cf6d6e",
        "parentId" : "ab26cc15-cb71-49f5-a5f0-b2ef38c64627",
        "authorId" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "body" : "Actually, they already changed :-)\n\nFilled https://github.com/kubernetes/kubernetes/pull/31115 with constants + a link to AWS docs.\n",
        "createdAt" : "2016-08-22T13:50:02Z",
        "updatedAt" : "2016-08-22T13:50:02Z",
        "lastEditedBy" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "tags" : [
        ]
      }
    ],
    "commit" : "bb5d562f37ab029d2b562e23bd23e906ee099a45",
    "line" : 60,
    "diffHunk" : "@@ -1,1 +1516,1520 @@\t\t}\n\t\tif iops > 20000 {\n\t\t\tiops = 20000\n\t\t}\n"
  },
  {
    "id" : "4a947643-848d-4b0b-a600-566f8e6e14e8",
    "prId" : 27553,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ac390731-2425-4616-b66b-f83eacef8d6e",
        "parentId" : null,
        "authorId" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "body" : "how bad is this in large clusters in terms of delay? are we doing it per pvc, I'm guessing its not bad enough in terms of qps to put us into backoff? \n",
        "createdAt" : "2016-06-19T22:28:46Z",
        "updatedAt" : "2016-06-21T19:23:57Z",
        "lastEditedBy" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "tags" : [
        ]
      },
      {
        "id" : "81310eef-9570-4c3c-a71d-5a82f7bb61b3",
        "parentId" : "ac390731-2425-4616-b66b-f83eacef8d6e",
        "authorId" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "body" : "I don't think creating PDs is a terribly common operation.  We used to list all instances every 10 seconds (but we no longer do that) so I think we should be OK.  Originally I did try caching, but now that we no longer poll Instances List, that becomes much harder.\n\nI propose that we run this as-is for now, and then if/when we identify it as a problem we can add time-based caching.\n\nIdeally the cloudprovider should have access to a watched set of Nodes, in which case this would be a trivial operation. This actually comes up in a number of places (e.g. LoadBalancer).  Maybe we do that in 1.4?\n",
        "createdAt" : "2016-06-20T01:28:57Z",
        "updatedAt" : "2016-06-21T19:23:57Z",
        "lastEditedBy" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "tags" : [
        ]
      },
      {
        "id" : "80c7a2cb-45e4-4a8e-8bc2-12e06e7af47c",
        "parentId" : "ac390731-2425-4616-b66b-f83eacef8d6e",
        "authorId" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "body" : "SG\n",
        "createdAt" : "2016-06-20T01:30:35Z",
        "updatedAt" : "2016-06-21T19:23:57Z",
        "lastEditedBy" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "tags" : [
        ]
      }
    ],
    "commit" : "dd949976199b4cb741ef0175353c2601dd9a8c90",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +918,922 @@\n// getAllZones retrieves  a list of all the zones in which nodes are running\n// It currently involves querying all instances\nfunc (c *AWSCloud) getAllZones() (sets.String, error) {\n\t// We don't currently cache this; it is currently used only in volume"
  },
  {
    "id" : "e2b9845f-8747-445d-bd78-2f7f6f93a727",
    "prId" : 26976,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e93378e8-084b-4f22-a05f-98638943580d",
        "parentId" : null,
        "authorId" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "body" : "Nit: we tend to avoid the named-retval style.  But I'm just repeating what I've been told!\n",
        "createdAt" : "2016-06-09T13:53:08Z",
        "updatedAt" : "2016-06-09T13:53:08Z",
        "lastEditedBy" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "tags" : [
        ]
      }
    ],
    "commit" : "4ff9e9319f6f98265b38dd53a23ad42662764a5e",
    "line" : 39,
    "diffHunk" : "@@ -1,1 +2110,2114 @@// that the comma-separated string describes. If the input is empty or equal to\n// \"*\", a nil pointer is returned.\nfunc getPortSets(annotation string) (ports *portSets) {\n\tif annotation != \"\" && annotation != \"*\" {\n\t\tports = &portSets{"
  },
  {
    "id" : "61909584-4a3c-4d7c-8fee-a02c34ccd73a",
    "prId" : 26976,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c114dbbe-d2a7-4941-96ee-58fea8972942",
        "parentId" : null,
        "authorId" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "body" : "Nit: we could probably move this to a method on portSets (and also avoid the nil check by returning a special value), and also pass in api.ServicePort.  But probably for 1.4...\n",
        "createdAt" : "2016-06-09T13:55:03Z",
        "updatedAt" : "2016-06-09T13:55:03Z",
        "lastEditedBy" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "tags" : [
        ]
      }
    ],
    "commit" : "4ff9e9319f6f98265b38dd53a23ad42662764a5e",
    "line" : 72,
    "diffHunk" : "@@ -1,1 +2142,2146 @@\tlistener.LoadBalancerPort = &loadBalancerPort\n\tcertID := annotations[ServiceAnnotationLoadBalancerCertificate]\n\tif certID != \"\" && (sslPorts == nil || sslPorts.numbers.Has(loadBalancerPort) || sslPorts.names.Has(portName)) {\n\t\tinstanceProtocol = annotations[ServiceAnnotationLoadBalancerBEProtocol]\n\t\tif instanceProtocol == \"\" {"
  },
  {
    "id" : "afc9bbfa-5769-4f36-bd1e-ae295fca6356",
    "prId" : 25888,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e7cd058a-46a4-4175-bb0b-3327031cc3e7",
        "parentId" : null,
        "authorId" : "8e448017-7838-493d-a424-33cada0da657",
        "body" : "The method `func (self *awsInstance) getMountDevice(...)` in this file appears to compute the location the device path for `AttachDisk()` calls. It looks at the local file system to figure this out. If Attach is being called from controller, i.e. different machine than where it is being attached, this will be broken right?\n",
        "createdAt" : "2016-06-02T03:21:34Z",
        "updatedAt" : "2016-06-08T12:56:30Z",
        "lastEditedBy" : "8e448017-7838-493d-a424-33cada0da657",
        "tags" : [
        ]
      },
      {
        "id" : "9515ddf1-1cd7-4394-82ab-9bb684b2ee93",
        "parentId" : "e7cd058a-46a4-4175-bb0b-3327031cc3e7",
        "authorId" : "a7f673a6-4b23-4df6-aa10-f123fa9dcd5f",
        "body" : "My code reading says `getMountDevice()` gets the device path by querying compute instance's disk mapping info from cloud provider. It doesn't need to look at the local filesystem. @saad-ali \n",
        "createdAt" : "2016-06-02T13:22:28Z",
        "updatedAt" : "2016-06-08T12:56:30Z",
        "lastEditedBy" : "a7f673a6-4b23-4df6-aa10-f123fa9dcd5f",
        "tags" : [
        ]
      },
      {
        "id" : "d4414285-4d86-4303-883c-2a71165d8b9f",
        "parentId" : "e7cd058a-46a4-4175-bb0b-3327031cc3e7",
        "authorId" : "8e448017-7838-493d-a424-33cada0da657",
        "body" : "Ah, excellent.\n",
        "createdAt" : "2016-06-02T18:11:49Z",
        "updatedAt" : "2016-06-08T12:56:30Z",
        "lastEditedBy" : "8e448017-7838-493d-a424-33cada0da657",
        "tags" : [
        ]
      }
    ],
    "commit" : "d1e0a139243b4bc7826f760ac492e76c4bd209b9",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +1461,1465 @@\treturn labels, nil\n}\n\n// Implement Volumes.GetDiskPath\nfunc (c *AWSCloud) GetDiskPath(volumeName string) (string, error) {"
  },
  {
    "id" : "3094034e-7e42-4705-97ee-3fc6ab75e9d1",
    "prId" : 24569,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9b22ba19-db5a-49de-b8e5-d196f1aaeb31",
        "parentId" : null,
        "authorId" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "body" : "Yeah... probably time we did this, or thought about creating a structure for the values.  This is good anyway :-)\n",
        "createdAt" : "2016-04-24T21:46:51Z",
        "updatedAt" : "2016-05-31T15:33:55Z",
        "lastEditedBy" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "tags" : [
        ]
      }
    ],
    "commit" : "01d9cddda5aa50a055b8f337afe777a4d0484ebe",
    "line" : null,
    "diffHunk" : "@@ -1,1 +2248,2252 @@\n\t// Build the load balancer itself\n\tloadBalancer, err := s.ensureLoadBalancer(\n\t\tserviceName,\n\t\tloadBalancerName,"
  },
  {
    "id" : "9046b7ba-a2b1-4725-ad2d-9aa58e07719f",
    "prId" : 24369,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "521d5fcc-aaba-4a46-8c61-47eaa56cf9b3",
        "parentId" : null,
        "authorId" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "body" : "This is a confusing alias (I would have guessed \"github.com/aws/aws-sdk-go/aws/credentials\"), but I can't think of a better one that isn't 30 characters long.\n",
        "createdAt" : "2016-05-12T13:42:22Z",
        "updatedAt" : "2016-05-12T13:42:29Z",
        "lastEditedBy" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "tags" : [
        ]
      },
      {
        "id" : "2da12cc1-777d-4cbc-8765-5c180a553e94",
        "parentId" : "521d5fcc-aaba-4a46-8c61-47eaa56cf9b3",
        "authorId" : "c06b2845-79d9-4151-8aa6-dc7c6eb52bbf",
        "body" : "aws_cred_provider?\n",
        "createdAt" : "2016-05-12T14:45:17Z",
        "updatedAt" : "2016-05-12T14:45:17Z",
        "lastEditedBy" : "c06b2845-79d9-4151-8aa6-dc7c6eb52bbf",
        "tags" : [
        ]
      }
    ],
    "commit" : "684517f74ffc4cdd9c33a196525f5cd1dc10aa25",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +43,47 @@\t\"k8s.io/kubernetes/pkg/api\"\n\t\"k8s.io/kubernetes/pkg/cloudprovider\"\n\taws_credentials \"k8s.io/kubernetes/pkg/credentialprovider/aws\"\n\t\"k8s.io/kubernetes/pkg/types\"\n"
  },
  {
    "id" : "98e76ad6-c6f0-4ffe-88bc-b6a0c33999a1",
    "prId" : 23495,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a522b945-b41d-466f-8cf2-65bdf76f2037",
        "parentId" : null,
        "authorId" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "body" : "Wondering if we should warn/error in the case when the user specifies an invalid annotation (i.e. not found in map, vs not found).  But that can be a separate PR - I want to get this one merged!\n",
        "createdAt" : "2016-05-12T13:16:55Z",
        "updatedAt" : "2016-05-12T13:16:55Z",
        "lastEditedBy" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "tags" : [
        ]
      },
      {
        "id" : "c9d9f1dd-17c9-4ce4-90fd-e395bd2d7e1e",
        "parentId" : "a522b945-b41d-466f-8cf2-65bdf76f2037",
        "authorId" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "body" : "Edit: never mind... I need more coffee\n",
        "createdAt" : "2016-05-12T13:17:24Z",
        "updatedAt" : "2016-05-12T13:17:25Z",
        "lastEditedBy" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "tags" : [
        ]
      }
    ],
    "commit" : "59334408a6ff48c358e83e77fe5f8e132239da25",
    "line" : 45,
    "diffHunk" : "@@ -1,1 +2134,2138 @@\t\tinstanceProtocol = annotations[ServiceAnnotationLoadBalancerBEProtocol]\n\t\tif instanceProtocol == \"\" {\n\t\t\tprotocol = \"ssl\"\n\t\t\tinstanceProtocol = \"tcp\"\n\t\t} else {"
  },
  {
    "id" : "a6e5ea72-5839-4bfa-9370-b18b6214fad8",
    "prId" : 22942,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "090ef84c-ba71-4d32-b6e6-bbf3db9cf0b1",
        "parentId" : null,
        "authorId" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "body" : "Yes, I think I do like the idea of having the scheduler restrict this.  I don't mind if you want to keep this here and raise a warning if we exceed 39 volumes... I expect that will save us a lot of time debugging :-)\n",
        "createdAt" : "2016-03-15T14:52:23Z",
        "updatedAt" : "2016-03-15T16:29:12Z",
        "lastEditedBy" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "tags" : [
        ]
      }
    ],
    "commit" : "f270cb1b9bc46d86ea1a2a97a2bb95d5a1a32369",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +84,88 @@// and at least one of those is for the system root volume.\n// See http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/volume_limits.html#linux-specific-volume-limits\nconst DefaultMaxEBSVolumes = 39\n\n// Used to call aws_credentials.Init() just once"
  },
  {
    "id" : "dafd2ae7-6eaa-4f06-8739-785cb326f24c",
    "prId" : 22019,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5fb07c9e-b633-42ad-9d6c-493a254647db",
        "parentId" : null,
        "authorId" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "body" : "Not sure why you moved this one?  Shouldn't we skip over non-public subnets before we warn about having to make an arbitrary choice between subnets?\n",
        "createdAt" : "2016-02-25T22:32:47Z",
        "updatedAt" : "2016-02-25T22:52:35Z",
        "lastEditedBy" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "tags" : [
        ]
      },
      {
        "id" : "9896b62b-0de6-489d-849e-fbf8c00aff25",
        "parentId" : "5fb07c9e-b633-42ad-9d6c-493a254647db",
        "authorId" : "c135d2c5-f879-4989-b899-96610cfb9026",
        "body" : "Yes you're right. I did that initially because I was originally making extra ec2 calls in `isSubnetPublic` and want to prevent it if possible.\n",
        "createdAt" : "2016-02-25T22:39:05Z",
        "updatedAt" : "2016-02-25T22:52:35Z",
        "lastEditedBy" : "c135d2c5-f879-4989-b899-96610cfb9026",
        "tags" : [
        ]
      }
    ],
    "commit" : "f568b6511a08495cf3778733c4f7a3dbc9c88129",
    "line" : null,
    "diffHunk" : "@@ -1,1 +1881,1885 @@\t\tid := orEmpty(subnet.SubnetId)\n\n\t\tisPublic, err := isSubnetPublic(rt, id)\n\t\tif err != nil {\n\t\t\treturn nil, err"
  },
  {
    "id" : "e8848b04-caa4-4fd7-b6b7-9cceae215a31",
    "prId" : 21987,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fe2487c8-d5ee-49f7-9644-04e3eb2e3294",
        "parentId" : null,
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "Considering there is a limit on number of rules per security group (100 or something) should we be regrouping?\n",
        "createdAt" : "2016-03-03T19:07:17Z",
        "updatedAt" : "2016-03-03T23:56:09Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      },
      {
        "id" : "1292b3c1-2e97-4625-8621-3bd2e3cc5114",
        "parentId" : "fe2487c8-d5ee-49f7-9644-04e3eb2e3294",
        "authorId" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "body" : "Probably yes... but:\n\n(1) this is only used on the ELB security group currently so it would require someone setting (ports \\* CIDRs) must be > 100.\n(2) it isn't clear to me exactly what calls we would have to make to remove a single permission from a compound rule, and I worry about accidentally opening more than intended if I get it wrong.\n\nHow about I add a TODO here to address this properly in future (maybe we see if anyone hits the issue!)\n",
        "createdAt" : "2016-03-03T19:14:16Z",
        "updatedAt" : "2016-03-03T23:56:09Z",
        "lastEditedBy" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "tags" : [
        ]
      }
    ],
    "commit" : "62e34da1258560474d2a8800ee3a8c0d32a81019",
    "line" : 64,
    "diffHunk" : "@@ -1,1 +1657,1661 @@\t\trequest := &ec2.RevokeSecurityGroupIngressInput{}\n\t\trequest.GroupId = &securityGroupId\n\t\trequest.IpPermissions = remove.List()\n\t\t_, err = s.ec2.RevokeSecurityGroupIngress(request)\n\t\tif err != nil {"
  },
  {
    "id" : "05ae3a6a-4ec1-44ef-8342-d1ce3e78e6f2",
    "prId" : 21399,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2a0be8f4-a78e-4f2e-9cb5-2ad469e6ad36",
        "parentId" : null,
        "authorId" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "body" : "Can we have a comment about what this is for please.  The comment in the PR is great (or an abridged version of it)\n",
        "createdAt" : "2016-02-23T14:15:08Z",
        "updatedAt" : "2016-02-23T15:24:59Z",
        "lastEditedBy" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "tags" : [
        ]
      }
    ],
    "commit" : "9f62e81be59fe5b5e15ee06a4178e689d8a0a02e",
    "line" : null,
    "diffHunk" : "@@ -1,1 +227,231 @@\t\t//has setup a rule that allows inbound traffic on kubelet ports from the\n\t\t//local VPC subnet (so load balancers can access it). E.g. 10.82.0.0/16 30000-32000.\n\t\tDisableSecurityGroupIngress bool\n\t}\n}"
  },
  {
    "id" : "cee9f245-880a-4c28-8070-2239b8a22664",
    "prId" : 20909,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a7049036-b4e5-45b2-ab38-fecf951e1c0e",
        "parentId" : null,
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "Could this use metadata.GetMetadata?\n",
        "createdAt" : "2016-02-11T03:04:41Z",
        "updatedAt" : "2016-02-12T20:02:08Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "a3390a62-0b90-4d4d-ba30-aa30f6f1a8a2",
        "parentId" : "a7049036-b4e5-45b2-ab38-fecf951e1c0e",
        "authorId" : "11725e10-43c9-4a8c-96d0-5118a3e67a6a",
        "body" : "I'm following the pattern from other functions, such as InstanceID(). They all let you call them from either the node itself or from another (e.g. a controller). metadata.GetMetadata() is local only.\n",
        "createdAt" : "2016-02-11T15:29:13Z",
        "updatedAt" : "2016-02-12T20:02:08Z",
        "lastEditedBy" : "11725e10-43c9-4a8c-96d0-5118a3e67a6a",
        "tags" : [
        ]
      }
    ],
    "commit" : "b3863eae82b48603d2623c43d3b7d5ff5f837a65",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +758,762 @@// InstanceType returns the type of the specified instance.\nfunc (aws *AWSCloud) InstanceType(name string) (string, error) {\n\tawsInstance, err := aws.getSelfAWSInstance()\n\tif err != nil {\n\t\treturn \"\", err"
  },
  {
    "id" : "7c3f6d5b-a163-42e9-bd90-14725677d40e",
    "prId" : 20909,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "875cd8ee-d54d-4698-92ef-7d813e95a645",
        "parentId" : null,
        "authorId" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "body" : "FYI, you can use aws.StringValue instead of orEmpty (I wasn't aware of this when I wrote orEmpty, or it wasn't originally available).  No need to change though, just for future reference\n",
        "createdAt" : "2016-02-12T20:47:49Z",
        "updatedAt" : "2016-02-13T00:28:29Z",
        "lastEditedBy" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "tags" : [
        ]
      }
    ],
    "commit" : "b3863eae82b48603d2623c43d3b7d5ff5f837a65",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +770,774 @@\t\t\treturn \"\", err\n\t\t}\n\t\treturn orEmpty(inst.InstanceType), nil\n\t}\n}"
  },
  {
    "id" : "fdd0761f-d550-470c-b90d-08757b1e8f1a",
    "prId" : 20378,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "eea6d9a5-f575-441f-bd9a-f9b40f69b172",
        "parentId" : null,
        "authorId" : "0a790a9e-0f93-4562-9a2c-2e678e5408ad",
        "body" : "Only had to add this because of the tests.\n",
        "createdAt" : "2016-01-31T03:07:56Z",
        "updatedAt" : "2016-02-03T21:48:59Z",
        "lastEditedBy" : "0a790a9e-0f93-4562-9a2c-2e678e5408ad",
        "tags" : [
        ]
      },
      {
        "id" : "03df1a6a-9fd0-4626-bb38-45dfb0d96343",
        "parentId" : "eea6d9a5-f575-441f-bd9a-f9b40f69b172",
        "authorId" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "body" : "I would rather not do this, because this then is returned to clients via the API, and we are trying to remove NodeLegacyHostIP.  How hard would it be to change the tests?\n",
        "createdAt" : "2016-02-03T20:57:18Z",
        "updatedAt" : "2016-02-03T21:48:59Z",
        "lastEditedBy" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "tags" : [
        ]
      },
      {
        "id" : "f6e0dcdd-3388-4c30-975b-fd00d6bf3ce7",
        "parentId" : "eea6d9a5-f575-441f-bd9a-f9b40f69b172",
        "authorId" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "body" : "Actually, on second thoughts I think I am wrong here.  The special case here should match the normal case below, so your change is good.\n",
        "createdAt" : "2016-02-03T21:12:07Z",
        "updatedAt" : "2016-02-03T21:48:59Z",
        "lastEditedBy" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "tags" : [
        ]
      }
    ],
    "commit" : "0a36db19bf227c0d7bfb64683bb53bf1047d1090",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +655,659 @@\t\treturn []api.NodeAddress{\n\t\t\t{Type: api.NodeInternalIP, Address: internalIP},\n\t\t\t{Type: api.NodeLegacyHostIP, Address: internalIP},\n\t\t\t{Type: api.NodeExternalIP, Address: externalIP},\n\t\t}, nil"
  },
  {
    "id" : "12f7826d-3686-4501-b703-c05f2749c2f8",
    "prId" : 20378,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7aa2baf1-f616-4460-b625-1eed938c9d48",
        "parentId" : null,
        "authorId" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "body" : "Maybe leave the above line (but commented out), and explain why we have to do this in a comment?\n",
        "createdAt" : "2016-02-03T20:53:06Z",
        "updatedAt" : "2016-02-03T21:48:59Z",
        "lastEditedBy" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "tags" : [
        ]
      }
    ],
    "commit" : "0a36db19bf227c0d7bfb64683bb53bf1047d1090",
    "line" : null,
    "diffHunk" : "@@ -1,1 +1121,1125 @@\t\t// privateDnsName, err := s.metadata.GetMetadata(\"local-hostname\")\n\t\t// See #11543 - need to use ec2 API to get the privateDnsName in case of private dns zone e.g. mydomain.io\n\t\tinstance, err := s.getInstanceByID(instanceId)\n\t\tif err != nil {\n\t\t\treturn nil, fmt.Errorf(\"error finding instance %s: %v\", instanceId, err)"
  },
  {
    "id" : "ede99be6-f183-441e-b463-64991df6e32a",
    "prId" : 20153,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "19a546aa-a8a9-4b93-8ca3-181a6f8e6254",
        "parentId" : null,
        "authorId" : "11725e10-43c9-4a8c-96d0-5118a3e67a6a",
        "body" : "I think this was and still is broken if the instance has a security group with a bunch of preexisting ranges. When called from `updateInstanceSecurityGroupsForLoadBalancer`, which doesn't set an IpRange, len(new) is 0, but len (existing) isn't. somewhere else we create an IpPermission with one range.\n\nSo perhaps this check should go away (or be replaced with `len(new) > len(existing)` for short-circuiting) and the loop below should check that the ranges in `newPermission` are all in `existing`.\n",
        "createdAt" : "2016-02-04T23:08:11Z",
        "updatedAt" : "2016-02-04T23:08:11Z",
        "lastEditedBy" : "11725e10-43c9-4a8c-96d0-5118a3e67a6a",
        "tags" : [
        ]
      },
      {
        "id" : "1bfff4b5-d592-42b1-9c9c-42103c9073cd",
        "parentId" : "19a546aa-a8a9-4b93-8ca3-181a6f8e6254",
        "authorId" : "11725e10-43c9-4a8c-96d0-5118a3e67a6a",
        "body" : "cc @justinsb as he wrote the original code\n",
        "createdAt" : "2016-02-05T14:54:47Z",
        "updatedAt" : "2016-02-05T14:54:47Z",
        "lastEditedBy" : "11725e10-43c9-4a8c-96d0-5118a3e67a6a",
        "tags" : [
        ]
      },
      {
        "id" : "96ae646e-4f64-41c4-8b01-36e4263c907d",
        "parentId" : "19a546aa-a8a9-4b93-8ca3-181a6f8e6254",
        "authorId" : "c135d2c5-f879-4989-b899-96610cfb9026",
        "body" : "Makes sense, as this method now checks containment rather than equality. I didn't run into any problems with this though - I never saw ip ranges being set by kubernetes in my own testing. If justinsb is okay with it, I can update it, or we can do in a separate PR.\n",
        "createdAt" : "2016-02-06T20:20:25Z",
        "updatedAt" : "2016-02-06T20:20:25Z",
        "lastEditedBy" : "c135d2c5-f879-4989-b899-96610cfb9026",
        "tags" : [
        ]
      },
      {
        "id" : "39a50a5d-3535-4e91-bdfc-0c4ea83f27e5",
        "parentId" : "19a546aa-a8a9-4b93-8ca3-181a6f8e6254",
        "authorId" : "11725e10-43c9-4a8c-96d0-5118a3e67a6a",
        "body" : "I can do it. It shows up if you run in an existing VPC with a bunch of gateways, etc. (because RDS).\n",
        "createdAt" : "2016-02-06T21:47:33Z",
        "updatedAt" : "2016-02-06T21:47:33Z",
        "lastEditedBy" : "11725e10-43c9-4a8c-96d0-5118a3e67a6a",
        "tags" : [
        ]
      }
    ],
    "commit" : "c3383b34221bc43d952d61950ed57eeb45c14067",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +1440,1444 @@\t\treturn false\n\t}\n\tif len(newPermission.IpRanges) != len(existing.IpRanges) {\n\t\treturn false\n\t}"
  },
  {
    "id" : "5a15e645-a92c-46d4-95ba-c0f7df122233",
    "prId" : 19390,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4105bad8-6402-400c-8138-d1b41dac3580",
        "parentId" : null,
        "authorId" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "body" : "I don't think you can assume we're requesting the local instance.  Instead, you need to get the local instance with getSelfAWSInstance, check if the name matches, and if so return immediately.  Otherwise proceed with the method as it used to be..\n",
        "createdAt" : "2016-01-13T06:45:48Z",
        "updatedAt" : "2016-01-14T04:37:18Z",
        "lastEditedBy" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "tags" : [
        ]
      }
    ],
    "commit" : "12cbc9ff89851c68e6b8af71ae00fdd3c1523bd9",
    "line" : null,
    "diffHunk" : "@@ -1,1 +694,698 @@// ExternalID returns the cloud provider ID of the specified instance (deprecated).\nfunc (aws *AWSCloud) ExternalID(name string) (string, error) {\n\tawsInstance, err := aws.getSelfAWSInstance()\n\tif err != nil {\n\t\treturn \"\", err"
  },
  {
    "id" : "105c8c6b-8206-44ae-afb8-de13bc5c1555",
    "prId" : 19390,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bee302f7-5a80-466b-b8c0-324962a55b50",
        "parentId" : null,
        "authorId" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "body" : "Same comment as ExternalID: we should probably keep the ability to query by name\n",
        "createdAt" : "2016-01-13T06:46:11Z",
        "updatedAt" : "2016-01-14T04:37:18Z",
        "lastEditedBy" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "tags" : [
        ]
      },
      {
        "id" : "ce9190f2-f8d8-4db1-ab11-0cd514df7f67",
        "parentId" : "bee302f7-5a80-466b-b8c0-324962a55b50",
        "authorId" : "9bde785d-a732-446e-99fa-48c52d074fb1",
        "body" : "i'm stupid... its gonna get fixed right now :+1: \n",
        "createdAt" : "2016-01-13T18:24:27Z",
        "updatedAt" : "2016-01-14T04:37:18Z",
        "lastEditedBy" : "9bde785d-a732-446e-99fa-48c52d074fb1",
        "tags" : [
        ]
      }
    ],
    "commit" : "12cbc9ff89851c68e6b8af71ae00fdd3c1523bd9",
    "line" : 37,
    "diffHunk" : "@@ -1,1 +718,722 @@// InstanceID returns the cloud provider ID of the specified instance.\nfunc (aws *AWSCloud) InstanceID(name string) (string, error) {\n\tawsInstance, err := aws.getSelfAWSInstance()\n\tif err != nil {\n\t\treturn \"\", err"
  },
  {
    "id" : "7cb3948d-0703-4a46-987f-6fc9bf821c82",
    "prId" : 19337,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e444e5cd-4af3-40ba-9942-d50cc7e8e395",
        "parentId" : null,
        "authorId" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "body" : "I think you mentioned this somewhere, but did you find documentation on limits on the number of instances we can pass here?  I don't think it will be a problem in practice, but I'd like to be sure!\n",
        "createdAt" : "2016-01-07T02:32:08Z",
        "updatedAt" : "2016-01-07T19:33:07Z",
        "lastEditedBy" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "tags" : [
        ]
      },
      {
        "id" : "9c4ae6cb-8123-4c4f-8ab0-b4ca270d27fe",
        "parentId" : "e444e5cd-4af3-40ba-9942-d50cc7e8e395",
        "authorId" : "9bde785d-a732-446e-99fa-48c52d074fb1",
        "body" : "1000 instances.  Can kubernetes handle that many minions? I seem to remember something about 256 minion limit\n",
        "createdAt" : "2016-01-07T03:43:51Z",
        "updatedAt" : "2016-01-07T19:33:07Z",
        "lastEditedBy" : "9bde785d-a732-446e-99fa-48c52d074fb1",
        "tags" : [
        ]
      },
      {
        "id" : "c323f3e1-caea-44eb-99eb-b6453e0b01e7",
        "parentId" : "e444e5cd-4af3-40ba-9942-d50cc7e8e395",
        "authorId" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "body" : "Do you have a link for this?  Just want to double-check the error handling semantics around it (in particular, to make sure it doesn't interact badly with paging).\n\nI don't think it's a problem for us, but ideally we would put a link to the docs in there, and we check that an error is returned and we don't e.g. get into a loop repeatedly calling AWS!\n",
        "createdAt" : "2016-01-07T16:51:25Z",
        "updatedAt" : "2016-01-07T19:33:07Z",
        "lastEditedBy" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "tags" : [
        ]
      }
    ],
    "commit" : "24c44e7a8eec0806c25967ba712c8c80828fa853",
    "line" : null,
    "diffHunk" : "@@ -1,1 +2132,2136 @@\t}\n\n\tinstances, err := a.ec2.DescribeInstances(request)\n\tif err != nil {\n\t\treturn nil, err"
  },
  {
    "id" : "08e618af-e86b-4af0-a9fb-4c1d9911a616",
    "prId" : 17913,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "864f7b13-89a5-4a0a-a548-35194b644564",
        "parentId" : null,
        "authorId" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "body" : "Can we filter using `association.subnet-id`?  I'd like to get this into 1.2 though, so I'm also fine with just a TODO comment here.\n",
        "createdAt" : "2016-02-16T02:16:29Z",
        "updatedAt" : "2016-02-16T12:17:41Z",
        "lastEditedBy" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "tags" : [
        ]
      },
      {
        "id" : "8d745f2a-8f18-4694-9932-2817b1e93240",
        "parentId" : "864f7b13-89a5-4a0a-a548-35194b644564",
        "authorId" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "body" : "Actually, on second thoughts, it probably doesn't matter much because we're applying the cluster filter anyway\n",
        "createdAt" : "2016-02-16T02:19:13Z",
        "updatedAt" : "2016-02-16T12:17:41Z",
        "lastEditedBy" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "tags" : [
        ]
      }
    ],
    "commit" : "62a8b3d44cbfc4eba5c6cdda6ebebab48533a8c4",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +1799,1803 @@\n\trRequest := &ec2.DescribeRouteTablesInput{}\n\trRequest.Filters = filters\n\n\trt, err := s.ec2.DescribeRouteTables(rRequest)"
  },
  {
    "id" : "4fc0105e-19ca-4981-88cb-c6534a0a3c3a",
    "prId" : 16633,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e2cde42a-59ca-422d-beaf-e3c467c909e0",
        "parentId" : null,
        "authorId" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "body" : "Why are we only sometimes using the local metadata server? Are there cases when it doesn't exist?\n",
        "createdAt" : "2015-10-31T04:00:07Z",
        "updatedAt" : "2015-11-12T23:15:11Z",
        "lastEditedBy" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "tags" : [
        ]
      },
      {
        "id" : "ce654ab7-9472-466d-b122-79477f3ea93e",
        "parentId" : "e2cde42a-59ca-422d-beaf-e3c467c909e0",
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "`NodeAddresses` is more general than for the current node.  In theory, you can ask for the addresses of other nodes via this interface.\n",
        "createdAt" : "2015-11-12T06:09:06Z",
        "updatedAt" : "2015-11-12T23:15:11Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "64aa189bd2e9a34b84068184ae66e43bfc05dacb",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +629,633 @@\t\treturn nil, err\n\t}\n\tif self.nodeName == name || len(name) == 0 {\n\t\tinternalIP, err := aws.metadata.GetMetadata(\"local-ipv4\")\n\t\tif err != nil {"
  },
  {
    "id" : "8feb78f0-1dea-444a-aadd-b5c6070606fc",
    "prId" : 14255,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1de993b6-e919-4cf9-9730-37ad6f8055f8",
        "parentId" : null,
        "authorId" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "body" : "Rather than ignoring region, I'd be happier if we had a check like\n\n```\nif region != s.region {\n   return nil, fmt.Errorf(\"region specified was unexpected: %s vs %s\", region, s.region)\n}\n```\n",
        "createdAt" : "2015-09-21T14:15:17Z",
        "updatedAt" : "2015-09-21T19:38:15Z",
        "lastEditedBy" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "tags" : [
        ]
      },
      {
        "id" : "c01aed8c-4879-47f1-83be-ada37dbd0b72",
        "parentId" : "1de993b6-e919-4cf9-9730-37ad6f8055f8",
        "authorId" : "5cc2d21b-da13-4bab-9c87-0a9287fa2f5b",
        "body" : "Good idea. I'll update with this change. :)\n",
        "createdAt" : "2015-09-21T18:17:26Z",
        "updatedAt" : "2015-09-21T19:38:15Z",
        "lastEditedBy" : "5cc2d21b-da13-4bab-9c87-0a9287fa2f5b",
        "tags" : [
        ]
      }
    ],
    "commit" : "1a7f8dc30c16b53a4518b44c7915da16642b6cd7",
    "line" : 107,
    "diffHunk" : "@@ -1,1 +1594,1598 @@// TODO(justinsb) It is weird that these take a region.  I suspect it won't work cross-region anwyay.\nfunc (s *AWSCloud) EnsureTCPLoadBalancer(name, region string, publicIP net.IP, ports []*api.ServicePort, hosts []string, affinity api.ServiceAffinity) (*api.LoadBalancerStatus, error) {\n\tglog.V(2).Infof(\"EnsureTCPLoadBalancer(%v, %v, %v, %v, %v)\", name, region, publicIP, ports, hosts)\n\n\tif region != s.region {"
  },
  {
    "id" : "7c255208-d30d-44e9-86d6-a3a367977893",
    "prId" : 14255,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "98e25668-a76a-489d-a0ab-d23fc739fdd5",
        "parentId" : null,
        "authorId" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "body" : "Having the same check here would also make me happy!\n",
        "createdAt" : "2015-09-21T14:15:38Z",
        "updatedAt" : "2015-09-21T19:38:15Z",
        "lastEditedBy" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "tags" : [
        ]
      }
    ],
    "commit" : "1a7f8dc30c16b53a4518b44c7915da16642b6cd7",
    "line" : 157,
    "diffHunk" : "@@ -1,1 +1897,1901 @@\n// EnsureTCPLoadBalancerDeleted implements TCPLoadBalancer.EnsureTCPLoadBalancerDeleted.\nfunc (s *AWSCloud) EnsureTCPLoadBalancerDeleted(name, region string) error {\n\tif region != s.region {\n\t\treturn fmt.Errorf(\"requested load balancer region '%s' does not match cluster region '%s'\", region, s.region)"
  },
  {
    "id" : "1232ce0c-54ea-44d0-92dc-dd2471d4d033",
    "prId" : 13467,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "67924f50-d56c-4f18-8ea0-2090604b8e89",
        "parentId" : null,
        "authorId" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "body" : "I think you do need to check err here.\n",
        "createdAt" : "2015-09-02T13:36:03Z",
        "updatedAt" : "2015-09-02T15:29:09Z",
        "lastEditedBy" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "tags" : [
        ]
      }
    ],
    "commit" : "1bfba8a5902fb14d1727e6e042d521b55f37ee39",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +1312,1316 @@\n\t// find by vpcID from metadata\n\tvpcID, err := self.findVPCID()\n\tif err != nil {\n\t\treturn nil, err"
  }
]