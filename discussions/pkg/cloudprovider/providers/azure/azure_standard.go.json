[
  {
    "id" : "8d77b015-3925-4a13-a523-aa9deed026df",
    "prId" : 74882,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/74882#pullrequestreview-210135715",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e574acac-b7b8-4790-a53b-59b689d40b76",
        "parentId" : null,
        "authorId" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "body" : "what about write like this:\r\n```\r\nreturn convertResourceGroupNameToLower(*machine.ID)\r\n```",
        "createdAt" : "2019-03-04T12:34:45Z",
        "updatedAt" : "2019-03-05T03:22:38Z",
        "lastEditedBy" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "tags" : [
        ]
      },
      {
        "id" : "b27b05cf-6355-40fa-8d14-d0fa038a204f",
        "parentId" : "e574acac-b7b8-4790-a53b-59b689d40b76",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "let's add a log here for clear",
        "createdAt" : "2019-03-04T13:24:58Z",
        "updatedAt" : "2019-03-05T03:22:38Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      }
    ],
    "commit" : "1d61d8d4a49c6e8378508e23fe54bb73fd1ccf7c",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +341,345 @@\t}\n\n\tresourceID := *machine.ID\n\tconvertedResourceID, err := convertResourceGroupNameToLower(resourceID)\n\tif err != nil {"
  },
  {
    "id" : "843b88d6-33dc-4975-a91a-0a39c5dd1dad",
    "prId" : 74882,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/74882#pullrequestreview-210135498",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b4ecf8fb-7734-4d01-868a-9ed53554909d",
        "parentId" : null,
        "authorId" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "body" : "what about the below function, are you going to convert to lower case?\r\n```\r\nfunc (az *Cloud) getAvailabilitySetID(resourceGroup, availabilitySetName string) string {\r\n\treturn fmt.Sprintf(\r\n\t\tavailabilitySetIDTemplate,\r\n\t\taz.SubscriptionID,\r\n\t\tresourceGroup,\r\n\t\tavailabilitySetName)\r\n}\r\n```",
        "createdAt" : "2019-03-04T12:41:17Z",
        "updatedAt" : "2019-03-05T03:22:38Z",
        "lastEditedBy" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "tags" : [
        ]
      },
      {
        "id" : "b1411939-fdc6-4bc2-9cd2-9ab3d86a961c",
        "parentId" : "b4ecf8fb-7734-4d01-868a-9ed53554909d",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "Conversion is not needed for other IDs, only providerID should be handled.",
        "createdAt" : "2019-03-04T13:24:22Z",
        "updatedAt" : "2019-03-05T03:22:38Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      }
    ],
    "commit" : "1d61d8d4a49c6e8378508e23fe54bb73fd1ccf7c",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +71,75 @@\t\tmachineIDTemplate,\n\t\taz.SubscriptionID,\n\t\tstrings.ToLower(resourceGroup),\n\t\tmachineName)\n}"
  },
  {
    "id" : "46cb4f9e-6021-4657-a1c9-6b2d3b504355",
    "prId" : 71484,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/71484#pullrequestreview-179625370",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "527be5bd-afe9-49da-a756-ee33a1b1248f",
        "parentId" : null,
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "sourceAddrPrefix is default to \"Internet\" by default, so why is this required?",
        "createdAt" : "2018-11-28T09:44:50Z",
        "updatedAt" : "2018-12-03T08:40:58Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      },
      {
        "id" : "82584c5d-4870-46dc-846d-070420ea7668",
        "parentId" : "527be5bd-afe9-49da-a756-ee33a1b1248f",
        "authorId" : "5d31f34e-f4db-4593-83b9-c8606802efb4",
        "body" : "https://github.com/kubernetes/kubernetes/blob/ec4b3a231cfa19b8cfc5c5b8fbf7fac048914f87/pkg/cloudprovider/providers/azure/azure_loadbalancer.go#L1021-L1030\r\n\r\nThe logic for security rule name is changed such that if it's a shared rule, we append `Internet` or the sourceAddressPrefix, for example:`shared-PROTOCOL-PORT-Internet` and `shared-PROTOCOL-PORT-SOURCE-SourceRangePublicIP` respectively. If it's a not shared rule, then we do not append anything, for example: `UUID-PROTOCOL-PORT` since UUID is unique and we don't want to create a different rule name for each sourceAddressPrefix.\r\n",
        "createdAt" : "2018-11-28T18:42:04Z",
        "updatedAt" : "2018-12-03T08:40:58Z",
        "lastEditedBy" : "5d31f34e-f4db-4593-83b9-c8606802efb4",
        "tags" : [
        ]
      },
      {
        "id" : "e4d49694-4807-4a39-b305-0dd213d41f6a",
        "parentId" : "527be5bd-afe9-49da-a756-ee33a1b1248f",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "could we keep it same as before? so that if the cluster is upgraded from old versions, old rules could still be recognized.",
        "createdAt" : "2018-11-29T02:46:37Z",
        "updatedAt" : "2018-12-03T08:40:58Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      },
      {
        "id" : "ce13e2fd-f26f-4908-939a-72c3c002faf6",
        "parentId" : "527be5bd-afe9-49da-a756-ee33a1b1248f",
        "authorId" : "5d31f34e-f4db-4593-83b9-c8606802efb4",
        "body" : "If we keep the rule name the same as before, then we cannot collapse the rules into one as the name includes the source range as part of it. Do you have any suggestions?",
        "createdAt" : "2018-11-29T04:31:35Z",
        "updatedAt" : "2018-12-03T08:40:58Z",
        "lastEditedBy" : "5d31f34e-f4db-4593-83b9-c8606802efb4",
        "tags" : [
        ]
      }
    ],
    "commit" : "61fbba74e55b2fb5405096ad18442e3a7cfa0676",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +237,241 @@\t\treturn fmt.Sprintf(\"shared-%s-%d-%s\", port.Protocol, port.Port, safePrefix)\n\t}\n\tif sourceAddrPrefix == \"\" {\n\t\trulePrefix := az.getRulePrefix(service)\n\t\treturn fmt.Sprintf(\"%s-%s-%d\", rulePrefix, port.Protocol, port.Port)"
  },
  {
    "id" : "88d07809-923f-4a98-a1c3-45a631650a0a",
    "prId" : 66242,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/66242#pullrequestreview-138090995",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d571faaa-0fa4-43f0-aa8b-ba725eb98a8e",
        "parentId" : null,
        "authorId" : "0c76e20f-41a5-4725-b3c3-d5b6cae89641",
        "body" : "Why don't we use instance metadata for this as well similar to `vmss`?",
        "createdAt" : "2018-07-18T03:11:30Z",
        "updatedAt" : "2018-07-18T03:13:50Z",
        "lastEditedBy" : "0c76e20f-41a5-4725-b3c3-d5b6cae89641",
        "tags" : [
        ]
      },
      {
        "id" : "fb7b8cd6-df96-4168-b6fd-e11091291741",
        "parentId" : "d571faaa-0fa4-43f0-aa8b-ba725eb98a8e",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "there're two ways actually should be supported:\r\n\r\n- if cloud-controller-manager is used, then GetZoneByProviderID is used, which calls GetZoneByNodeName internally. Metadata won't work for this way because cloud-controller-manager is a master component.\r\n- If kube-controller-manager is used, then GetZone() is used, which calls  instance metadata to fetch zone.",
        "createdAt" : "2018-07-18T03:17:43Z",
        "updatedAt" : "2018-07-18T05:46:15Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      }
    ],
    "commit" : "e593fb99a6c4058cea2d23bc41a67d8bd168015e",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +412,416 @@// with availability zone, then it returns fault domain.\nfunc (as *availabilitySet) GetZoneByNodeName(name string) (cloudprovider.Zone, error) {\n\tvm, err := as.getVirtualMachine(types.NodeName(name))\n\tif err != nil {\n\t\treturn cloudprovider.Zone{}, err"
  },
  {
    "id" : "91b500e5-ae4b-4906-b82a-cd70adb8a539",
    "prId" : 65412,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/65412#pullrequestreview-133098834",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "59759e44-1904-4d06-8b5f-56a1f1c3a4ed",
        "parentId" : null,
        "authorId" : "e2ca6907-6765-444e-8bf6-1452233150d6",
        "body" : "@feiskyer - added this const as it is only used here. We might want to move provisioning const if it is being used somewhere else.",
        "createdAt" : "2018-06-28T21:26:45Z",
        "updatedAt" : "2018-06-28T21:26:50Z",
        "lastEditedBy" : "e2ca6907-6765-444e-8bf6-1452233150d6",
        "tags" : [
        ]
      },
      {
        "id" : "3837819e-f991-4d21-98f8-36bba60dec14",
        "parentId" : "59759e44-1904-4d06-8b5f-56a1f1c3a4ed",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "lgtm",
        "createdAt" : "2018-06-29T05:04:47Z",
        "updatedAt" : "2018-06-29T05:04:48Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      }
    ],
    "commit" : "957b6be80d3181714b4b2d91a66284e6e0118311",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +54,58 @@\t// nodeLabelRole specifies the role of a node\n\tnodeLabelRole  = \"kubernetes.io/role\"\n\tnicFailedState = \"Failed\"\n\n\tstorageAccountNameMaxLength = 24"
  },
  {
    "id" : "0cfa2d81-eda0-404c-b4f2-1167a88da42c",
    "prId" : 61884,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/61884#pullrequestreview-108257692",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3648d550-0b83-41b2-96d5-119ae67bf897",
        "parentId" : null,
        "authorId" : "dd7ae991-dbbc-4a29-896b-4334bdee748b",
        "body" : "It is possible to pull master nodes into the pool, if it only has public/internal LB.",
        "createdAt" : "2018-03-30T03:13:36Z",
        "updatedAt" : "2018-03-30T08:52:56Z",
        "lastEditedBy" : "dd7ae991-dbbc-4a29-896b-4334bdee748b",
        "tags" : [
        ]
      },
      {
        "id" : "3eadb44c-6614-48ea-9529-501d613a5080",
        "parentId" : "3648d550-0b83-41b2-96d5-119ae67bf897",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "Added a check before calling ensureHostInPool",
        "createdAt" : "2018-03-30T03:34:56Z",
        "updatedAt" : "2018-03-30T08:52:56Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      }
    ],
    "commit" : "7ec0315c39ff7a412ef7ff51c8bdd6b98efe767d",
    "line" : 52,
    "diffHunk" : "@@ -1,1 +640,644 @@\t\t\tif len(matches) == 2 {\n\t\t\t\tlbName := matches[1]\n\t\t\t\tif strings.HasSuffix(lbName, InternalLoadBalancerNameSuffix) == isInternal {\n\t\t\t\t\tglog.V(4).Infof(\"Node %q has already been added to LB %q, omit adding it to a new one\", nodeName, lbName)\n\t\t\t\t\treturn nil"
  },
  {
    "id" : "71fc929e-3ed2-44f8-8e23-e4eb2df482b2",
    "prId" : 61884,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/61884#pullrequestreview-108272444",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "26f460df-314e-4bcc-b831-e0cc1ecd5c02",
        "parentId" : null,
        "authorId" : "dd7ae991-dbbc-4a29-896b-4334bdee748b",
        "body" : "Anywhere to add hint that selectLoadBalancer does not work for StandardLoadBalancer?",
        "createdAt" : "2018-03-30T05:40:49Z",
        "updatedAt" : "2018-03-30T08:52:56Z",
        "lastEditedBy" : "dd7ae991-dbbc-4a29-896b-4334bdee748b",
        "tags" : [
        ]
      },
      {
        "id" : "5d74f668-cb04-42b2-9f9b-07412ba34585",
        "parentId" : "26f460df-314e-4bcc-b831-e0cc1ecd5c02",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "Good catch, will add this check in getLoadBalancer()",
        "createdAt" : "2018-03-30T06:39:24Z",
        "updatedAt" : "2018-03-30T08:52:56Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      }
    ],
    "commit" : "7ec0315c39ff7a412ef7ff51c8bdd6b98efe767d",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +131,135 @@func (az *Cloud) getLoadBalancerName(clusterName string, vmSetName string, isInternal bool) string {\n\tlbNamePrefix := vmSetName\n\tif strings.EqualFold(vmSetName, az.vmSet.GetPrimaryVMSetName()) || az.useStandardLoadBalancer() {\n\t\tlbNamePrefix = clusterName\n\t}"
  },
  {
    "id" : "4abaac73-6916-436e-aa3b-5c74ff0ff9c3",
    "prId" : 58676,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/58676#pullrequestreview-90750982",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b92cde05-122e-4935-beff-0f47ce742d84",
        "parentId" : null,
        "authorId" : "e2ca6907-6765-444e-8bf6-1452233150d6",
        "body" : "@feiskyer - out of curiosity, do we know why this happens ? No IP config for the network interface of the node ?",
        "createdAt" : "2018-01-23T09:11:33Z",
        "updatedAt" : "2018-01-23T09:11:38Z",
        "lastEditedBy" : "e2ca6907-6765-444e-8bf6-1452233150d6",
        "tags" : [
        ]
      },
      {
        "id" : "40c850d9-2fd7-428e-ad71-f5bcff22392e",
        "parentId" : "b92cde05-122e-4935-beff-0f47ce742d84",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "@yastij Yep, this is because some virtualmachines and network interfaces are removing",
        "createdAt" : "2018-01-23T09:14:04Z",
        "updatedAt" : "2018-01-23T09:14:04Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      },
      {
        "id" : "258bf3bf-a29d-41da-8faa-40cb7de7cabe",
        "parentId" : "b92cde05-122e-4935-beff-0f47ce742d84",
        "authorId" : "e2ca6907-6765-444e-8bf6-1452233150d6",
        "body" : "ok LGTM",
        "createdAt" : "2018-01-23T09:15:40Z",
        "updatedAt" : "2018-01-23T09:15:40Z",
        "lastEditedBy" : "e2ca6907-6765-444e-8bf6-1452233150d6",
        "tags" : [
        ]
      }
    ],
    "commit" : "c0e62963774a1e9391cdf15201e49b2811a47cce",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +222,226 @@\nfunc getPrimaryIPConfig(nic network.Interface) (*network.InterfaceIPConfiguration, error) {\n\tif nic.IPConfigurations == nil {\n\t\treturn nil, fmt.Errorf(\"nic.IPConfigurations for nic (nicname=%q) is nil\", *nic.Name)\n\t}"
  }
]