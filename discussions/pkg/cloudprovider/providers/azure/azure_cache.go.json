[
  {
    "id" : "30ff1370-36eb-47dc-95c3-93f71b58dc2f",
    "prId" : 59520,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/59520#pullrequestreview-95288564",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c581155d-62a1-42c9-b3d6-671e640b0f82",
        "parentId" : null,
        "authorId" : "0c76e20f-41a5-4725-b3c3-d5b6cae89641",
        "body" : "Can we move `lock()` to first like with defer `unlock()`",
        "createdAt" : "2018-02-08T17:26:30Z",
        "updatedAt" : "2018-02-09T12:41:55Z",
        "lastEditedBy" : "0c76e20f-41a5-4725-b3c3-d5b6cae89641",
        "tags" : [
        ]
      },
      {
        "id" : "691a08c9-ce69-40c6-95db-02e9247ccd49",
        "parentId" : "c581155d-62a1-42c9-b3d6-671e640b0f82",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "Move to first means we will lock the entire cache while getting any keys. It is not required when the data has already been in the cache and hasn't expired yet. So here tries to get first, and only locks the cache when the key does not exist. ",
        "createdAt" : "2018-02-09T01:04:05Z",
        "updatedAt" : "2018-02-09T12:41:55Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      }
    ],
    "commit" : "7634eacb4fbb70996bab322c91ba5edcf839dee5",
    "line" : 71,
    "diffHunk" : "@@ -1,1 +72,76 @@\t}\n\n\tt.lock.Lock()\n\tdefer t.lock.Unlock()\n\tentry, exists, err = t.store.GetByKey(key)"
  },
  {
    "id" : "9b678eaa-59db-4aee-b7c5-5d69371cb027",
    "prId" : 59520,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/59520#pullrequestreview-95287572",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0a57a19c-ae56-46c8-9ae7-9a9a5f62052d",
        "parentId" : null,
        "authorId" : "0c76e20f-41a5-4725-b3c3-d5b6cae89641",
        "body" : "`lock()` .. `unlock()`",
        "createdAt" : "2018-02-08T17:27:28Z",
        "updatedAt" : "2018-02-09T12:41:55Z",
        "lastEditedBy" : "0c76e20f-41a5-4725-b3c3-d5b6cae89641",
        "tags" : [
        ]
      },
      {
        "id" : "349fda50-95e1-420f-9023-e7027d2ae45c",
        "parentId" : "0a57a19c-ae56-46c8-9ae7-9a9a5f62052d",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "ack, good cache",
        "createdAt" : "2018-02-09T00:58:07Z",
        "updatedAt" : "2018-02-09T12:41:55Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      }
    ],
    "commit" : "7634eacb4fbb70996bab322c91ba5edcf839dee5",
    "line" : 127,
    "diffHunk" : "@@ -1,1 +119,123 @@// Delete removes an item from the cache.\nfunc (t *timedCache) Delete(key string) error {\n\treturn t.store.Delete(&cacheEntry{\n\t\tkey: key,\n\t})"
  },
  {
    "id" : "97b94a1e-d17b-4dad-a202-ce3e538df927",
    "prId" : 59520,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/59520#pullrequestreview-95348453",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "04780438-c8d3-4a5b-96d8-094c7e27c090",
        "parentId" : null,
        "authorId" : "dd7ae991-dbbc-4a29-896b-4334bdee748b",
        "body" : "double check entry.data == nil here",
        "createdAt" : "2018-02-09T06:01:32Z",
        "updatedAt" : "2018-02-09T12:41:55Z",
        "lastEditedBy" : "dd7ae991-dbbc-4a29-896b-4334bdee748b",
        "tags" : [
        ]
      },
      {
        "id" : "36250e3a-47d3-473a-9d65-87fbf09f80e1",
        "parentId" : "04780438-c8d3-4a5b-96d8-094c7e27c090",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "good catch",
        "createdAt" : "2018-02-09T08:48:51Z",
        "updatedAt" : "2018-02-09T12:41:55Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      }
    ],
    "commit" : "7634eacb4fbb70996bab322c91ba5edcf839dee5",
    "line" : 109,
    "diffHunk" : "@@ -1,1 +103,107 @@\t\tentry.lock.Lock()\n\t\tdefer entry.lock.Unlock()\n\n\t\tif entry.data == nil {\n\t\t\tdata, err := t.getter(key)"
  },
  {
    "id" : "36c9187c-801f-4e8e-88e3-a499b087bd69",
    "prId" : 59520,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/59520#pullrequestreview-95640273",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "27f938a3-8f24-4b7f-b98a-a24564cc8a76",
        "parentId" : null,
        "authorId" : "dd7ae991-dbbc-4a29-896b-4334bdee748b",
        "body" : "Can consider having some improvement here, this could be in separate PR:\r\nDo we consider caching error responses? So that a failing request to some resource would also be cached.\r\n\r\nFor example if a resource does not exist yet, a number of calls (to be failed) in short period would all be sent out.",
        "createdAt" : "2018-02-11T02:10:43Z",
        "updatedAt" : "2018-02-11T02:13:25Z",
        "lastEditedBy" : "dd7ae991-dbbc-4a29-896b-4334bdee748b",
        "tags" : [
        ]
      },
      {
        "id" : "02a79e9a-1d34-4a33-a194-9d486e8b65ae",
        "parentId" : "27f938a3-8f24-4b7f-b98a-a24564cc8a76",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "That's what I'm thinking of caching a nil object originally, which could ensure one API call for each TTL period.\r\n\r\n@khenidak suggested reporting an error for such cases.\r\n\r\nWe are not sure how often would this happen, let's revisit this later.",
        "createdAt" : "2018-02-11T03:10:07Z",
        "updatedAt" : "2018-02-11T03:10:07Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      }
    ],
    "commit" : "7634eacb4fbb70996bab322c91ba5edcf839dee5",
    "line" : 113,
    "diffHunk" : "@@ -1,1 +107,111 @@\t\t\tdata, err := t.getter(key)\n\t\t\tif err != nil {\n\t\t\t\treturn nil, err\n\t\t\t}\n"
  }
]