[
  {
    "id" : "074bbec6-6ca4-41ee-a386-db0cae6f9b62",
    "prId" : 55740,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/55740#pullrequestreview-77238083",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bd3224a9-ef09-4fff-a735-9add1dd93911",
        "parentId" : null,
        "authorId" : "e2b32365-51e9-430e-af40-4a95aa1db7f0",
        "body" : "It would be good to document what is being mapped here.  From elsewhere in the code it seems like it is resourceGroupName -> map<lbName, lbObject>?\r\n\r\nIdeally we could use a custom type here with meaningful names, rather than a map, but I guess the lack of generics torpedoes that idea?",
        "createdAt" : "2017-11-15T22:17:40Z",
        "updatedAt" : "2017-11-20T17:53:43Z",
        "lastEditedBy" : "e2b32365-51e9-430e-af40-4a95aa1db7f0",
        "tags" : [
        ]
      },
      {
        "id" : "4211cae3-6444-4ce4-adb9-3d41897e41aa",
        "parentId" : "bd3224a9-ef09-4fff-a735-9add1dd93911",
        "authorId" : "876b0099-6291-418f-9ce1-0747c268613c",
        "body" : "I always prefer less type definitions, especially custom types. \r\nHowever, that is just my personal preference. Feel free to change it though",
        "createdAt" : "2017-11-16T19:37:28Z",
        "updatedAt" : "2017-11-20T17:53:43Z",
        "lastEditedBy" : "876b0099-6291-418f-9ce1-0747c268613c",
        "tags" : [
        ]
      }
    ],
    "commit" : "35964d4a80e7f931e51860109fd0741b4c93be53",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +34,38 @@type fakeAzureLBClient struct {\n\tmutex     *sync.Mutex\n\tFakeStore map[string]map[string]network.LoadBalancer\n}\n"
  },
  {
    "id" : "ff006aaa-21d8-4279-ae1c-68e9ed55d93e",
    "prId" : 55740,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/55740#pullrequestreview-77235223",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a497bc35-c64e-4a52-b066-6599655e9438",
        "parentId" : null,
        "authorId" : "e2b32365-51e9-430e-af40-4a95aa1db7f0",
        "body" : "Why does this refer to itself as \"Azure\" subnets when other fakes don't mention \"Azure\"?  Is there a naming conflict otherwise?",
        "createdAt" : "2017-11-15T22:28:06Z",
        "updatedAt" : "2017-11-20T17:53:43Z",
        "lastEditedBy" : "e2b32365-51e9-430e-af40-4a95aa1db7f0",
        "tags" : [
        ]
      },
      {
        "id" : "a6f26d5f-0320-4a2e-a5c7-e0079ffbdf01",
        "parentId" : "a497bc35-c64e-4a52-b066-6599655e9438",
        "authorId" : "876b0099-6291-418f-9ce1-0747c268613c",
        "body" : "fixed the convention, we should always has \"Azure\" in the name.",
        "createdAt" : "2017-11-16T19:28:07Z",
        "updatedAt" : "2017-11-20T17:53:43Z",
        "lastEditedBy" : "876b0099-6291-418f-9ce1-0747c268613c",
        "tags" : [
        ]
      }
    ],
    "commit" : "35964d4a80e7f931e51860109fd0741b4c93be53",
    "line" : 415,
    "diffHunk" : "@@ -1,1 +413,417 @@}\n\ntype fakeAzureSubnetsClient struct {\n\tmutex     *sync.Mutex\n\tFakeStore map[string]map[string]network.Subnet"
  },
  {
    "id" : "65396abd-753f-42e5-aa9f-df7c90d5205f",
    "prId" : 55740,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/55740#pullrequestreview-77284544",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "297c7a7e-36e3-41c0-845c-27df3b7c9f18",
        "parentId" : null,
        "authorId" : "e2b32365-51e9-430e-af40-4a95aa1db7f0",
        "body" : "Maybe name this variable to make it clearer it's a synthetic key.  Also consider using a join character that's illegal in resource names.",
        "createdAt" : "2017-11-15T22:30:21Z",
        "updatedAt" : "2017-11-20T17:53:43Z",
        "lastEditedBy" : "e2b32365-51e9-430e-af40-4a95aa1db7f0",
        "tags" : [
        ]
      },
      {
        "id" : "17d66306-9f4a-4c9c-930a-81a0aeaf442d",
        "parentId" : "297c7a7e-36e3-41c0-845c-27df3b7c9f18",
        "authorId" : "876b0099-6291-418f-9ce1-0747c268613c",
        "body" : "Any suggestion?",
        "createdAt" : "2017-11-16T22:24:27Z",
        "updatedAt" : "2017-11-20T17:53:43Z",
        "lastEditedBy" : "876b0099-6291-418f-9ce1-0747c268613c",
        "tags" : [
        ]
      }
    ],
    "commit" : "35964d4a80e7f931e51860109fd0741b4c93be53",
    "line" : 440,
    "diffHunk" : "@@ -1,1 +438,442 @@\t\tclose(errChan)\n\t}()\n\trgVnet := strings.Join([]string{resourceGroupName, virtualNetworkName}, \"AND\")\n\tif _, ok := fASC.FakeStore[rgVnet]; !ok {\n\t\tfASC.FakeStore[rgVnet] = make(map[string]network.Subnet)"
  },
  {
    "id" : "4180e2f7-d8e8-4714-9862-a3cf8f7ba636",
    "prId" : 55740,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/55740#pullrequestreview-76947123",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1f09a8ce-a9b4-4806-ab2e-280acf79cb22",
        "parentId" : null,
        "authorId" : "e2b32365-51e9-430e-af40-4a95aa1db7f0",
        "body" : "It feels like there is a lot of boilerplate in the faking code.  I'm not sure if this can be reduced given how anaemic the Go language is (and I'm sure we don't have time now), but it would be good to consider for the future.  In the longer term we should also look at fault injection (service errors, timeouts, etc.).  That said it's fantastic to have this infrastructure so we can deepen our testing before going to integration testing in the cloud!",
        "createdAt" : "2017-11-15T22:37:09Z",
        "updatedAt" : "2017-11-20T17:53:43Z",
        "lastEditedBy" : "e2b32365-51e9-430e-af40-4a95aa1db7f0",
        "tags" : [
        ]
      }
    ],
    "commit" : "35964d4a80e7f931e51860109fd0741b4c93be53",
    "line" : 144,
    "diffHunk" : "@@ -1,1 +616,620 @@\tresult.Value = &value\n\treturn result, nil\n}\n\nfunc getRandomIPPtr() *string {"
  }
]