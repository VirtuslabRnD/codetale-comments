[
  {
    "id" : "b9ffcc20-a2fb-4ed6-8436-767f2fe783d6",
    "prId" : 59716,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/59716#pullrequestreview-96351181",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b47c20ad-a502-43bd-90b1-b40f0cfa255b",
        "parentId" : null,
        "authorId" : "0c76e20f-41a5-4725-b3c3-d5b6cae89641",
        "body" : "That is not correct status code such as 403 are terminal in **all cases**.  The will occur if the service principal expired, or principal/MSI/EMSI don't have proper permission   ",
        "createdAt" : "2018-02-12T01:49:33Z",
        "updatedAt" : "2018-02-14T00:39:02Z",
        "lastEditedBy" : "0c76e20f-41a5-4725-b3c3-d5b6cae89641",
        "tags" : [
        ]
      },
      {
        "id" : "de063232-d761-443b-b4f0-d8feb00c38e0",
        "parentId" : "b47c20ad-a502-43bd-90b1-b40f0cfa255b",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "If principal expired, we should surely retry the API call. Isn't this expected?",
        "createdAt" : "2018-02-12T02:45:52Z",
        "updatedAt" : "2018-02-14T00:39:02Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      },
      {
        "id" : "6877a74e-3fac-4639-9dd9-109f8978c1c1",
        "parentId" : "b47c20ad-a502-43bd-90b1-b40f0cfa255b",
        "authorId" : "a7f673a6-4b23-4df6-aa10-f123fa9dcd5f",
        "body" : "if retry will exhaust API quota quicker, then we need to be more frugal. ",
        "createdAt" : "2018-02-13T19:42:00Z",
        "updatedAt" : "2018-02-14T00:39:02Z",
        "lastEditedBy" : "a7f673a6-4b23-4df6-aa10-f123fa9dcd5f",
        "tags" : [
        ]
      },
      {
        "id" : "eb302be9-4071-4723-82b1-f65e42f8299c",
        "parentId" : "b47c20ad-a502-43bd-90b1-b40f0cfa255b",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "The logic here is same with shouldRetryAPIRequest, just with a different param (http.Response instead of autorest.Response). It doesn't change existing retry logic.",
        "createdAt" : "2018-02-14T00:26:13Z",
        "updatedAt" : "2018-02-14T00:39:02Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      }
    ],
    "commit" : "fbc871be3204425f10b4789b1f1ed73972159a89",
    "line" : 47,
    "diffHunk" : "@@ -1,1 +402,406 @@\tif resp != nil {\n\t\t// HTTP 4xx or 5xx suggests we should retry\n\t\tif 399 < resp.StatusCode && resp.StatusCode < 600 {\n\t\t\treturn true\n\t\t}"
  },
  {
    "id" : "abaa0b2e-b7da-436e-9568-cb61a7d2e7b1",
    "prId" : 59520,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/59520#pullrequestreview-95354703",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d6f7fa57-2278-426b-9d85-1fa62ba163b3",
        "parentId" : null,
        "authorId" : "dd7ae991-dbbc-4a29-896b-4334bdee748b",
        "body" : "What about CreateOrUpdateVMWithRetry,CreateOrUpdateRouteTableWithRetry in this file, also need to invalidate?",
        "createdAt" : "2018-02-09T05:47:54Z",
        "updatedAt" : "2018-02-09T12:41:55Z",
        "lastEditedBy" : "dd7ae991-dbbc-4a29-896b-4334bdee748b",
        "tags" : [
        ]
      },
      {
        "id" : "814a9461-7e81-462b-b874-04f8cd3fd366",
        "parentId" : "d6f7fa57-2278-426b-9d85-1fa62ba163b3",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "they are not required because the cache is invalidated after calling them",
        "createdAt" : "2018-02-09T08:48:35Z",
        "updatedAt" : "2018-02-09T12:41:55Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      },
      {
        "id" : "a2208e7d-bc63-4bd1-a4dc-83f1ab50cb0d",
        "parentId" : "d6f7fa57-2278-426b-9d85-1fa62ba163b3",
        "authorId" : "dd7ae991-dbbc-4a29-896b-4334bdee748b",
        "body" : "Seems following should be combined to single function and we'd put cache invalidation there:\r\n\r\nVirtualMachinesClient.CreateOrUpdate & CreateOrUpdateVMWithRetry\r\nRouteTablesClient.CreateOrUpdate & CreateOrUpdateRouteTableWithRetry\r\n\r\nBut that can be in separate PR",
        "createdAt" : "2018-02-09T09:14:16Z",
        "updatedAt" : "2018-02-11T02:13:25Z",
        "lastEditedBy" : "dd7ae991-dbbc-4a29-896b-4334bdee748b",
        "tags" : [
        ]
      }
    ],
    "commit" : "7634eacb4fbb70996bab322c91ba5edcf839dee5",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +296,300 @@\t\tdone, err := processRetryResponse(resp, err)\n\t\tif done && err == nil {\n\t\t\t// Invalidate the cache right after deleting\n\t\t\taz.lbCache.Delete(lbName)\n\t\t}"
  },
  {
    "id" : "877f5cd5-b7a3-4540-b305-b222f4863248",
    "prId" : 58134,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/58134#pullrequestreview-88186772",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d949abef-4f59-4b83-8b30-9b365776606d",
        "parentId" : null,
        "authorId" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "body" : "@brendandburns is there any explaination for this? bug fix?",
        "createdAt" : "2018-01-11T06:22:07Z",
        "updatedAt" : "2018-01-23T04:49:14Z",
        "lastEditedBy" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "tags" : [
        ]
      },
      {
        "id" : "2f5350b8-23a4-436e-96b6-8f1c85dbe622",
        "parentId" : "d949abef-4f59-4b83-8b30-9b365776606d",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "@andyzhangx Yep a bug fix. Retry cases have been processed by `shouldRetryAPIRequest`, here should just stop backoff.",
        "createdAt" : "2018-01-11T14:35:25Z",
        "updatedAt" : "2018-01-23T04:49:14Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      }
    ],
    "commit" : "1217395b5adc99a028e5cc8472ffd96b9887a2ca",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +343,347 @@\t}\n\t// Fall-through: stop periodic backoff\n\treturn true, nil\n}\n"
  },
  {
    "id" : "f002f188-1981-4f09-957d-79b130b4006f",
    "prId" : 58046,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/58046#pullrequestreview-87738525",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "60ff2cc1-243f-45d3-8970-3fe425ec6b25",
        "parentId" : null,
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "Verbose logs for channel response are still kept because we need to log when the operation is really finished.",
        "createdAt" : "2018-01-10T05:59:00Z",
        "updatedAt" : "2018-01-10T09:19:50Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      }
    ],
    "commit" : "c3a885353b0443ffb8ef8a906116b0f9be752247",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +130,134 @@\t\trespChan, errChan := az.SecurityGroupsClient.CreateOrUpdate(az.ResourceGroup, *sg.Name, sg, nil)\n\t\tresp := <-respChan\n\t\terr := <-errChan\n\t\tglog.V(10).Infof(\"SecurityGroupsClient.CreateOrUpdate(%s): end\", *sg.Name)\n\t\treturn processRetryResponse(resp.Response, err)"
  },
  {
    "id" : "5860e942-d2ec-402f-9237-18ecb47ae021",
    "prId" : 57777,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/57777#pullrequestreview-86607145",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "16c007ae-0bdc-4fa5-ba3b-76f3d6a05738",
        "parentId" : null,
        "authorId" : "e2ca6907-6765-444e-8bf6-1452233150d6",
        "body" : "I'm fine with this.",
        "createdAt" : "2018-01-04T11:11:00Z",
        "updatedAt" : "2018-01-04T11:11:31Z",
        "lastEditedBy" : "e2ca6907-6765-444e-8bf6-1452233150d6",
        "tags" : [
        ]
      }
    ],
    "commit" : "1836e567a9899d3f8ab4060317aa18d6155c62fd",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +58,62 @@\t\terr = retryErr\n\t}\n\n\treturn machine, err\n}"
  },
  {
    "id" : "4f8e0564-6eec-4188-932c-534fcdbe30f0",
    "prId" : 55740,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/55740#pullrequestreview-76883878",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3b23939f-2b91-4add-9739-a291716a4772",
        "parentId" : null,
        "authorId" : "0c76e20f-41a5-4725-b3c3-d5b6cae89641",
        "body" : "To my understanding the back off object is always there, maybe with zeros as values but it will be there. The first check will always result in true..",
        "createdAt" : "2017-11-15T18:20:53Z",
        "updatedAt" : "2017-11-20T17:53:43Z",
        "lastEditedBy" : "0c76e20f-41a5-4725-b3c3-d5b6cae89641",
        "tags" : [
        ]
      },
      {
        "id" : "0f5986d1-04fb-403f-8d97-cfe1cd78b1ab",
        "parentId" : "3b23939f-2b91-4add-9739-a291716a4772",
        "authorId" : "a45eba83-b117-4d73-a001-325b189fec2a",
        "body" : "The  az.CloudProviderBackoff is actually a bool that is a config and not a real Backoff object, it is set based on config provided through Azure.json",
        "createdAt" : "2017-11-15T18:26:34Z",
        "updatedAt" : "2017-11-20T17:53:43Z",
        "lastEditedBy" : "a45eba83-b117-4d73-a001-325b189fec2a",
        "tags" : [
        ]
      },
      {
        "id" : "7d5ca40e-599a-41e0-9b20-2f39f6abe5d3",
        "parentId" : "3b23939f-2b91-4add-9739-a291716a4772",
        "authorId" : "a45eba83-b117-4d73-a001-325b189fec2a",
        "body" : "The az.CloudProviderBackoff is actually a bool that is a config and not a real Backoff object, it is set based on config provided through Azure.json",
        "createdAt" : "2017-11-15T18:27:39Z",
        "updatedAt" : "2017-11-20T17:53:43Z",
        "lastEditedBy" : "a45eba83-b117-4d73-a001-325b189fec2a",
        "tags" : [
        ]
      },
      {
        "id" : "e65332c5-cef1-422c-a705-eaad3d0dc509",
        "parentId" : "3b23939f-2b91-4add-9739-a291716a4772",
        "authorId" : "876b0099-6291-418f-9ce1-0747c268613c",
        "body" : "`az.CloudProviderBackoff ` is a boolean object. \r\n\r\nIf it is true, the az.resourceRequestBackoff will always be >= 1, \r\nWe make it to 1 when az.CloudProviderBackoff is false. So we will execute at least once.\r\n\r\nThe first check could be false.",
        "createdAt" : "2017-11-15T18:29:26Z",
        "updatedAt" : "2017-11-20T17:53:43Z",
        "lastEditedBy" : "876b0099-6291-418f-9ce1-0747c268613c",
        "tags" : [
        ]
      }
    ],
    "commit" : "35964d4a80e7f931e51860109fd0741b4c93be53",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +41,45 @@\treturn resourceRequestBackoff\n}\n\n// GetVirtualMachineWithRetry invokes az.getVirtualMachine with exponential backoff retry\nfunc (az *Cloud) GetVirtualMachineWithRetry(name types.NodeName) (compute.VirtualMachine, bool, error) {"
  },
  {
    "id" : "99f4ac42-fe3d-4ace-b9e8-a4ec2ed6c814",
    "prId" : 53557,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/53557#pullrequestreview-70898872",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "98ea61b8-789c-48a0-9bf9-1dc3f850c996",
        "parentId" : null,
        "authorId" : "e2b32365-51e9-430e-af40-4a95aa1db7f0",
        "body" : "There's a minor style inconsistency - in CreateOrUpdate this is called `resourceGroup`, here `pipResourceGroup`.  (I think I slightly prefer the latter but don't feel strongly as long as they're consistent.)",
        "createdAt" : "2017-10-20T16:35:34Z",
        "updatedAt" : "2017-12-17T19:46:02Z",
        "lastEditedBy" : "e2b32365-51e9-430e-af40-4a95aa1db7f0",
        "tags" : [
        ]
      }
    ],
    "commit" : "9c83e800fbb71ba540331763667f00f3939ad071",
    "line" : 82,
    "diffHunk" : "@@ -1,1 +326,330 @@\n// DeletePublicIPWithRetry invokes az.PublicIPAddressesClient.Delete with exponential backoff retry\nfunc (az *Cloud) DeletePublicIPWithRetry(pipResourceGroup string, pipName string) error {\n\treturn wait.ExponentialBackoff(az.requestBackoff(), func() (bool, error) {\n\t\taz.operationPollRateLimiter.Accept()"
  },
  {
    "id" : "1c804c78-76d6-45cd-99d7-7bffcca5249a",
    "prId" : 48967,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/48967#pullrequestreview-50174720",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e28778dc-4c81-493b-a83b-dfbe65dfb2d6",
        "parentId" : null,
        "authorId" : "b516a0b6-a0cd-4503-a269-18f3909fa05d",
        "body" : "nit: maybe a little lower, we don't log much at all at 2 elsewhere.",
        "createdAt" : "2017-07-14T23:17:40Z",
        "updatedAt" : "2017-07-15T00:13:50Z",
        "lastEditedBy" : "b516a0b6-a0cd-4503-a269-18f3909fa05d",
        "tags" : [
        ]
      },
      {
        "id" : "24313cfb-902b-4440-aa4c-ae6242b0fe87",
        "parentId" : "e28778dc-4c81-493b-a83b-dfbe65dfb2d6",
        "authorId" : "aa111d77-fac6-440e-b034-3710cc9b43f3",
        "body" : "Ha! You mean I have to bust out the `--v` tool?",
        "createdAt" : "2017-07-15T00:01:27Z",
        "updatedAt" : "2017-07-15T00:13:50Z",
        "lastEditedBy" : "aa111d77-fac6-440e-b034-3710cc9b43f3",
        "tags" : [
        ]
      }
    ],
    "commit" : "f76ef29512146b60a5afb6b69f2321c328432c17",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +54,58 @@\t\t\treturn false, nil\n\t\t}\n\t\tglog.V(2).Infof(\"backoff: success\")\n\t\treturn true, nil\n\t})"
  },
  {
    "id" : "6536bf18-a586-444b-9106-6d4e72ff8d48",
    "prId" : 46660,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/46660#pullrequestreview-42713720",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5ba1b2a2-2c1c-4c9b-ae3b-0cff0366e99d",
        "parentId" : null,
        "authorId" : "405e6d07-e29d-4d39-a352-7a5b887f25b5",
        "body" : "400 is not a retry-able error in Azure, I think should only retry status code == 429 or status code > 500",
        "createdAt" : "2017-06-07T19:14:38Z",
        "updatedAt" : "2017-06-07T19:26:03Z",
        "lastEditedBy" : "405e6d07-e29d-4d39-a352-7a5b887f25b5",
        "tags" : [
        ]
      },
      {
        "id" : "67cb078b-29fa-489b-bc89-8e87fb59116e",
        "parentId" : "5ba1b2a2-2c1c-4c9b-ae3b-0cff0366e99d",
        "authorId" : "aa111d77-fac6-440e-b034-3710cc9b43f3",
        "body" : "@brendandburns I'm happy to incorporate this feedback if you're willing to go through the lgtm approval obstacle course all over agin. @yangl900 the other two remarks I believe we can justify tackling later on as part of a more holistic effort to pair k8s cloudprovider code with specific API idioms",
        "createdAt" : "2017-06-07T19:44:12Z",
        "updatedAt" : "2017-06-07T19:44:12Z",
        "lastEditedBy" : "aa111d77-fac6-440e-b034-3710cc9b43f3",
        "tags" : [
        ]
      }
    ],
    "commit" : "acb65170f3cf3169090af68532e968fc5f8e30e3",
    "line" : 157,
    "diffHunk" : "@@ -1,1 +155,159 @@\t}\n\t// HTTP 4xx or 5xx suggests we should retry\n\tif 399 < resp.StatusCode && resp.StatusCode < 600 {\n\t\treturn true\n\t}"
  },
  {
    "id" : "1b72d9f2-d22b-4153-8ca9-d1098d47cfcb",
    "prId" : 46660,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/46660#pullrequestreview-42706457",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f3fd46a7-5eb5-4fe3-b60e-327189d5c051",
        "parentId" : null,
        "authorId" : "405e6d07-e29d-4d39-a352-7a5b887f25b5",
        "body" : "there is a Retry-After header returned from 429 requests, probably helpful if we trace that.",
        "createdAt" : "2017-06-07T19:25:06Z",
        "updatedAt" : "2017-06-07T19:26:03Z",
        "lastEditedBy" : "405e6d07-e29d-4d39-a352-7a5b887f25b5",
        "tags" : [
        ]
      }
    ],
    "commit" : "acb65170f3cf3169090af68532e968fc5f8e30e3",
    "line" : 37,
    "diffHunk" : "@@ -1,1 +35,39 @@\t\tmachine, exists, retryErr = az.getVirtualMachine(name)\n\t\tif retryErr != nil {\n\t\t\tglog.Errorf(\"backoff: failure, will retry,err=%v\", retryErr)\n\t\t\treturn false, nil\n\t\t}"
  }
]