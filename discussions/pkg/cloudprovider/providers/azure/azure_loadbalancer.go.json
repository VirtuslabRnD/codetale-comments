[
  {
    "id" : "9aa1a384-4894-4c8e-b98f-22e325145e60",
    "prId" : 74498,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/74498#pullrequestreview-207746827",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e82f6f58-39ce-4da2-8a96-1883f5fa9864",
        "parentId" : null,
        "authorId" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "body" : "if it returns pointer to \"\", code will jump to following, and then still return error:\r\nhttps://github.com/kubernetes/kubernetes/blob/8d0c5d9727d458da51e40810387a3d9e2030fd68/pkg/cloudprovider/providers/azure/azure_loadbalancer.go#L532",
        "createdAt" : "2019-02-26T03:06:09Z",
        "updatedAt" : "2019-02-26T03:06:10Z",
        "lastEditedBy" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "tags" : [
        ]
      },
      {
        "id" : "c20158f1-bd20-4ce0-8099-f1f4df34532e",
        "parentId" : "e82f6f58-39ce-4da2-8a96-1883f5fa9864",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "it won't error if this case, because `nil` would be returned.",
        "createdAt" : "2019-02-26T03:32:02Z",
        "updatedAt" : "2019-02-26T03:32:02Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      }
    ],
    "commit" : "8d0c5d9727d458da51e40810387a3d9e2030fd68",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +1539,1543 @@func subnet(service *v1.Service) *string {\n\tif requiresInternalLoadBalancer(service) {\n\t\tif l, found := service.Annotations[ServiceAnnotationLoadBalancerInternalSubnet]; found && strings.TrimSpace(l) != \"\" {\n\t\t\treturn &l\n\t\t}"
  },
  {
    "id" : "48ff58ee-68b0-4df0-bbbd-7418d59fe230",
    "prId" : 66589,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/66589#pullrequestreview-142696480",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "da4a7a1d-2624-4287-b5f5-53bf3bcfa2ea",
        "parentId" : null,
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "Azure part LGTM. Thanks.",
        "createdAt" : "2018-08-02T08:43:53Z",
        "updatedAt" : "2018-08-04T04:37:27Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      }
    ],
    "commit" : "6ecec23690afaebecb88bd2bebb666ab0665c39e",
    "line" : 1,
    "diffHunk" : "@@ -1,1 +25,29 @@\t\"strings\"\n\n\t\"k8s.io/api/core/v1\"\n\t\"k8s.io/apimachinery/pkg/util/sets\"\n\tserviceapi \"k8s.io/kubernetes/pkg/api/v1/service\""
  },
  {
    "id" : "c347d872-6683-4357-a595-40c14adc053e",
    "prId" : 66045,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/66045#pullrequestreview-136479622",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "46b1e019-3298-422b-9e37-fcb088e5736a",
        "parentId" : null,
        "authorId" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "body" : "so what if there is no `service.beta.kubernetes.io/azure-load-balancer-idle-timeout` setting, it will `return nil, nil`, are we going to handle that? And what if it's a negative?",
        "createdAt" : "2018-07-11T03:54:22Z",
        "updatedAt" : "2018-07-12T17:41:43Z",
        "lastEditedBy" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "tags" : [
        ]
      },
      {
        "id" : "b082573d-ca3d-42ae-a5ee-a1efb3667bb5",
        "parentId" : "46b1e019-3298-422b-9e37-fcb088e5736a",
        "authorId" : "4d80a8e5-cdb0-46e4-80e8-923843e08a90",
        "body" : "We want `nil, nil` in this case as this will set the LB timeout to the default value. I will add a check here to see if the key even exists and only return nil when it does not, and a separate error case for when it does exist but the value is empty.",
        "createdAt" : "2018-07-11T17:28:31Z",
        "updatedAt" : "2018-07-12T17:41:43Z",
        "lastEditedBy" : "4d80a8e5-cdb0-46e4-80e8-923843e08a90",
        "tags" : [
        ]
      },
      {
        "id" : "606ae564-35ae-48aa-9472-32d282ff5403",
        "parentId" : "46b1e019-3298-422b-9e37-fcb088e5736a",
        "authorId" : "4d80a8e5-cdb0-46e4-80e8-923843e08a90",
        "body" : "For validation of the value beyond if it converts to an int... I didn't want to do too much validation here as I expect the backend to deal with this, but I do see value in validating here since they are fairly hard values that are well documented (or at least were easy for me to find), which saves us a failed request.",
        "createdAt" : "2018-07-11T17:30:05Z",
        "updatedAt" : "2018-07-12T17:41:43Z",
        "lastEditedBy" : "4d80a8e5-cdb0-46e4-80e8-923843e08a90",
        "tags" : [
        ]
      },
      {
        "id" : "cd4578c5-76cf-4002-8db7-d6c5af5d867f",
        "parentId" : "46b1e019-3298-422b-9e37-fcb088e5736a",
        "authorId" : "4d80a8e5-cdb0-46e4-80e8-923843e08a90",
        "body" : "This is all updated",
        "createdAt" : "2018-07-11T21:31:52Z",
        "updatedAt" : "2018-07-12T17:41:43Z",
        "lastEditedBy" : "4d80a8e5-cdb0-46e4-80e8-923843e08a90",
        "tags" : [
        ]
      },
      {
        "id" : "cf01f94a-ce6e-405d-ba2b-d6c60a8271f5",
        "parentId" : "46b1e019-3298-422b-9e37-fcb088e5736a",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "Thanks. The range is [4,30]",
        "createdAt" : "2018-07-12T01:57:57Z",
        "updatedAt" : "2018-07-12T17:41:43Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      }
    ],
    "commit" : "55569494d64dd93777ca42437055884d6a99c46d",
    "line" : 47,
    "diffHunk" : "@@ -1,1 +517,521 @@\tlbBackendPoolID := az.getBackendPoolID(lbName, lbBackendPoolName)\n\n\tlbIdleTimeout, err := getIdleTimeout(service)\n\tif err != nil {\n\t\treturn nil, err"
  },
  {
    "id" : "dca88521-f932-45ec-86af-a04532286306",
    "prId" : 65649,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/65649#pullrequestreview-134497939",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8ff25e42-a2e6-4b23-8a5b-18de05db1239",
        "parentId" : null,
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "seems good in the context of this PR.\r\nif the load balancer name is _really_ wanted here it would need a small refactor.\r\n\r\n/cc @justaugustus\r\n/cc @kubernetes/sig-cloud-provider-pr-reviews \r\n",
        "createdAt" : "2018-07-05T03:32:55Z",
        "updatedAt" : "2018-07-10T21:10:46Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      }
    ],
    "commit" : "2bd91dda64b857ed2f45542a7aae42f855e931d1",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +843,847 @@func (az *Cloud) reconcileSecurityGroup(clusterName string, service *v1.Service, lbIP *string, wantLb bool) (*network.SecurityGroup, error) {\n\tserviceName := getServiceName(service)\n\tglog.V(5).Infof(\"reconcileSecurityGroup(%s): START clusterName=%q\", serviceName, clusterName)\n\n\tports := service.Spec.Ports"
  },
  {
    "id" : "501b1b45-898c-4a8f-8bce-f67c8af2adf5",
    "prId" : 61467,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/61467#pullrequestreview-106355602",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8429ce86-223c-4ee7-b4cf-8f0bf31c305c",
        "parentId" : null,
        "authorId" : "772f23ac-180c-446c-8cfe-e5c2686f4673",
        "body" : "`AzureTrafficManager`, `Storage` and `Sql` are still not available in all azure clouds (e.g Germany). If the user would use one of those 3 serviceTag, where would they be provided the error message ?\r\n\r\n",
        "createdAt" : "2018-03-21T11:44:54Z",
        "updatedAt" : "2018-03-22T07:36:24Z",
        "lastEditedBy" : "772f23ac-180c-446c-8cfe-e5c2686f4673",
        "tags" : [
        ]
      },
      {
        "id" : "aa331ff2-e32e-4589-bdb8-c69ad5a1a86c",
        "parentId" : "8429ce86-223c-4ee7-b4cf-8f0bf31c305c",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "@djsly Augmented rules for NSGs has been GA: https://azure.microsoft.com/en-us/updates/agumented-rules-ga-nsg/",
        "createdAt" : "2018-03-22T07:29:11Z",
        "updatedAt" : "2018-03-22T07:36:24Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      },
      {
        "id" : "043ac28a-6fa1-44cc-a648-1c12fd5b5797",
        "parentId" : "8429ce86-223c-4ee7-b4cf-8f0bf31c305c",
        "authorId" : "772f23ac-180c-446c-8cfe-e5c2686f4673",
        "body" : "Thanks, I guess since it is GA it is fine to keep them listed, I was jsut wondering what will happen on Clouds that do not yet support them. (e.g. Germany -- see below)\r\n<img width=\"570\" alt=\"screen shot 2018-03-22 at 07 43 30\" src=\"https://user-images.githubusercontent.com/4981802/37768664-ce92df08-2da4-11e8-8c6c-5938e7ffb616.png\">\r\n",
        "createdAt" : "2018-03-22T11:44:21Z",
        "updatedAt" : "2018-03-22T11:44:21Z",
        "lastEditedBy" : "772f23ac-180c-446c-8cfe-e5c2686f4673",
        "tags" : [
        ]
      },
      {
        "id" : "2786c52d-38a7-4f45-bcbb-6e85e6ef1fb3",
        "parentId" : "8429ce86-223c-4ee7-b4cf-8f0bf31c305c",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "Azure ARM call will report errors on such case, and users could find the error message in service events (e.g. by kubectl describe service)",
        "createdAt" : "2018-03-23T01:29:18Z",
        "updatedAt" : "2018-03-23T01:29:18Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      },
      {
        "id" : "94d3ab7f-4832-47ea-99f2-c8f24b9672e9",
        "parentId" : "8429ce86-223c-4ee7-b4cf-8f0bf31c305c",
        "authorId" : "772f23ac-180c-446c-8cfe-e5c2686f4673",
        "body" : "thanks üëç \r\n",
        "createdAt" : "2018-03-23T01:30:43Z",
        "updatedAt" : "2018-03-23T01:30:44Z",
        "lastEditedBy" : "772f23ac-180c-446c-8cfe-e5c2686f4673",
        "tags" : [
        ]
      }
    ],
    "commit" : "b7813b15a1b8c40f0b034982b91bf13251127bb9",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +80,84 @@\t// Refer https://docs.microsoft.com/en-us/azure/virtual-network/security-overview#service-tags for more information.\n\tsupportedServiceTags = sets.NewString(\"VirtualNetwork\", \"VIRTUAL_NETWORK\", \"AzureLoadBalancer\", \"AZURE_LOADBALANCER\",\n\t\t\"Internet\", \"INTERNET\", \"AzureTrafficManager\", \"Storage\", \"Sql\")\n)\n"
  },
  {
    "id" : "c4413700-7eb5-4f93-bb45-c278fc17850e",
    "prId" : 61467,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/61467#pullrequestreview-106779031",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "88d6d6df-101e-47ce-b75c-0125b20f8f8c",
        "parentId" : null,
        "authorId" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "body" : "is there any possiblity that `sourceRanges != nil` and `len(serviceTags) == 0` ?",
        "createdAt" : "2018-03-26T05:23:32Z",
        "updatedAt" : "2018-03-26T05:25:10Z",
        "lastEditedBy" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "tags" : [
        ]
      },
      {
        "id" : "301b29a2-c8b8-40c3-983a-053ef6aaefb7",
        "parentId" : "88d6d6df-101e-47ce-b75c-0125b20f8f8c",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "Yep, this is expected to do actions in `else` block",
        "createdAt" : "2018-03-26T05:51:29Z",
        "updatedAt" : "2018-03-26T05:51:30Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      }
    ],
    "commit" : "b7813b15a1b8c40f0b034982b91bf13251127bb9",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +855,859 @@\t}\n\tvar sourceAddressPrefixes []string\n\tif (sourceRanges == nil || serviceapi.IsAllowAll(sourceRanges)) && len(serviceTags) == 0 {\n\t\tif !requiresInternalLoadBalancer(service) {\n\t\t\tsourceAddressPrefixes = []string{\"Internet\"}"
  },
  {
    "id" : "b1f52a7c-d2c2-4beb-ad4f-f3e4532d84a9",
    "prId" : 55752,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/55752#pullrequestreview-76913685",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b959772d-2128-4aed-872e-c4b3adec4171",
        "parentId" : null,
        "authorId" : "a7f673a6-4b23-4df6-aa10-f123fa9dcd5f",
        "body" : "would `reflect.DeepEqual()` help?",
        "createdAt" : "2017-11-15T19:58:45Z",
        "updatedAt" : "2017-11-21T20:44:26Z",
        "lastEditedBy" : "a7f673a6-4b23-4df6-aa10-f123fa9dcd5f",
        "tags" : [
        ]
      },
      {
        "id" : "26211762-e42d-4763-bd3d-e9bf3c91b09a",
        "parentId" : "b959772d-2128-4aed-872e-c4b3adec4171",
        "authorId" : "3adf4a87-2905-4905-8f21-148b7924ea75",
        "body" : "I don't think DeepEqual() is helpful here as we are comparing two strings?\r\n`Other values - numbers, bools, strings, and channels - are deeply equal if they are equal using Go's == operator.`",
        "createdAt" : "2017-11-15T20:01:44Z",
        "updatedAt" : "2017-11-21T20:44:26Z",
        "lastEditedBy" : "3adf4a87-2905-4905-8f21-148b7924ea75",
        "tags" : [
        ]
      },
      {
        "id" : "fc1d61c9-ca8b-4e05-8b12-6f2de6d9e62f",
        "parentId" : "b959772d-2128-4aed-872e-c4b3adec4171",
        "authorId" : "3adf4a87-2905-4905-8f21-148b7924ea75",
        "body" : "so in fact probably `EqualFold` is better- `EqualFold reports whether s and t, interpreted as UTF-8 strings, are equal under Unicode case-folding.`",
        "createdAt" : "2017-11-15T20:02:17Z",
        "updatedAt" : "2017-11-21T20:44:26Z",
        "lastEditedBy" : "3adf4a87-2905-4905-8f21-148b7924ea75",
        "tags" : [
        ]
      },
      {
        "id" : "101882cf-e9b1-4dab-94cc-87f5c1945215",
        "parentId" : "b959772d-2128-4aed-872e-c4b3adec4171",
        "authorId" : "b516a0b6-a0cd-4503-a269-18f3909fa05d",
        "body" : "I think DeepEqual is overkill. There are things that don't need to specified and really *can't* be reconciled, like the rule priority. I'll forgo comment on whether other fields should be included. Since we don't set them, I'm inclined to suggest that they can be added to the comparison in the future, just as is being done with this PR as a followup to the initial fix for sourceAddressPrefix.",
        "createdAt" : "2017-11-15T20:02:24Z",
        "updatedAt" : "2017-11-21T20:44:26Z",
        "lastEditedBy" : "b516a0b6-a0cd-4503-a269-18f3909fa05d",
        "tags" : [
        ]
      },
      {
        "id" : "4c9ae8c3-7c96-430c-95dd-cf1e0fe93242",
        "parentId" : "b959772d-2128-4aed-872e-c4b3adec4171",
        "authorId" : "3adf4a87-2905-4905-8f21-148b7924ea75",
        "body" : "I agree. This PR should focus on finding correct differences based on what we already set in security rule. ",
        "createdAt" : "2017-11-15T20:07:01Z",
        "updatedAt" : "2017-11-21T20:44:26Z",
        "lastEditedBy" : "3adf4a87-2905-4905-8f21-148b7924ea75",
        "tags" : [
        ]
      }
    ],
    "commit" : "8514537759455d99b7e5dcb2946df52639649e3f",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +1212,1216 @@func findSecurityRule(rules []network.SecurityRule, rule network.SecurityRule) bool {\n\tfor _, existingRule := range rules {\n\t\tif !strings.EqualFold(*existingRule.Name, *rule.Name) {\n\t\t\tcontinue\n\t\t}"
  },
  {
    "id" : "5a6a119d-5faf-4c46-883a-336330460c56",
    "prId" : 55752,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/55752#pullrequestreview-77282995",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0bb08034-34af-4315-a31f-0e2eebc0f2f7",
        "parentId" : null,
        "authorId" : "e2b32365-51e9-430e-af40-4a95aa1db7f0",
        "body" : "Some Azure regions support \"augmented security rules\" which permit more than one destination address in a rule (https://azure.microsoft.com/en-au/updates/public-preview-features-for-nsgs/).  This is part of the 11.x Azure SDK, which is in master as of https://github.com/kubernetes/kubernetes/commit/14e134cec33960abc87dfe452ac0836804f91ec0.  It might be a good idea to check `rule.DestinationAddressPrefixes` as well as `DestinationAddressPrefix` - we won't hit this with unmodified rules in current master but it could happen if someone modifies a rule through the portal, and it will be used within Kubernetes if #55658 is accepted.",
        "createdAt" : "2017-11-16T03:28:30Z",
        "updatedAt" : "2017-11-21T20:44:26Z",
        "lastEditedBy" : "e2b32365-51e9-430e-af40-4a95aa1db7f0",
        "tags" : [
        ]
      },
      {
        "id" : "cc2fdf88-915e-4415-85aa-804b296dbcd0",
        "parentId" : "0bb08034-34af-4315-a31f-0e2eebc0f2f7",
        "authorId" : "3adf4a87-2905-4905-8f21-148b7924ea75",
        "body" : "hmm I think that additional check can be done in follow-up PR? As for this PR, I think if makes sense to do the check on only controlled properties that are explicitly set while generating security rules. (at least for this branch). ",
        "createdAt" : "2017-11-16T22:18:51Z",
        "updatedAt" : "2017-11-21T20:44:26Z",
        "lastEditedBy" : "3adf4a87-2905-4905-8f21-148b7924ea75",
        "tags" : [
        ]
      }
    ],
    "commit" : "8514537759455d99b7e5dcb2946df52639649e3f",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +1236,1240 @@\t\t}\n\t\tif existingRule.Direction != rule.Direction {\n\t\t\tcontinue\n\t\t}\n\t\treturn true"
  },
  {
    "id" : "acd911f1-4c63-446d-b452-0c8918347714",
    "prId" : 55740,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/55740#pullrequestreview-77012175",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d239502a-ac08-4801-ba94-ea7d1c152524",
        "parentId" : null,
        "authorId" : "e2b32365-51e9-430e-af40-4a95aa1db7f0",
        "body" : "What are the modes other than `__auto__`?",
        "createdAt" : "2017-11-15T22:40:54Z",
        "updatedAt" : "2017-11-20T17:53:43Z",
        "lastEditedBy" : "e2b32365-51e9-430e-af40-4a95aa1db7f0",
        "tags" : [
        ]
      },
      {
        "id" : "b7ba20cd-1e63-4e61-8927-7cf350e0c83a",
        "parentId" : "d239502a-ac08-4801-ba94-ea7d1c152524",
        "authorId" : "a45eba83-b117-4d73-a001-325b189fec2a",
        "body" : "There is the __auto__ mode or the value can be as1,as2,... This has been documented in the MD ",
        "createdAt" : "2017-11-16T05:03:03Z",
        "updatedAt" : "2017-11-20T17:53:43Z",
        "lastEditedBy" : "a45eba83-b117-4d73-a001-325b189fec2a",
        "tags" : [
        ]
      },
      {
        "id" : "5f18c439-ff3a-42ca-ba30-d169bb348a62",
        "parentId" : "d239502a-ac08-4801-ba94-ea7d1c152524",
        "authorId" : "a45eba83-b117-4d73-a001-325b189fec2a",
        "body" : "adding comment",
        "createdAt" : "2017-11-16T05:24:01Z",
        "updatedAt" : "2017-11-20T17:53:43Z",
        "lastEditedBy" : "a45eba83-b117-4d73-a001-325b189fec2a",
        "tags" : [
        ]
      }
    ],
    "commit" : "35964d4a80e7f931e51860109fd0741b4c93be53",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +43,47 @@\n// ServiceAnnotationLoadBalancerMode is the annotation used on the service to specify the\n// Azure load balancer selection based on availability sets\n// There are currently three possible load balancer selection modes :\n// 1. Default mode - service has no annotation (\"service.beta.kubernetes.io/azure-load-balancer-mode\")"
  },
  {
    "id" : "67584708-735e-4ba0-9974-f6bbb725cfb3",
    "prId" : 54177,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/54177#pullrequestreview-73033463",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "153f984d-b77b-487e-a27a-b563486564b7",
        "parentId" : null,
        "authorId" : "bd08c3b9-3856-46d9-8281-ade3f892fb09",
        "body" : "Does locking down to the lbIP affect the delivery of the external IP to the node?  The LB is set to \"enableFloatingIP\": true, and I believe this drops the external IP address on the box.",
        "createdAt" : "2017-10-19T14:37:10Z",
        "updatedAt" : "2017-10-31T01:32:07Z",
        "lastEditedBy" : "bd08c3b9-3856-46d9-8281-ade3f892fb09",
        "tags" : [
        ]
      },
      {
        "id" : "62a505b1-f92a-4dc7-a9d3-91f16ce9d172",
        "parentId" : "153f984d-b77b-487e-a27a-b563486564b7",
        "authorId" : "e2b32365-51e9-430e-af40-4a95aa1db7f0",
        "body" : "I've tested the following scenarios:\r\n\r\n* Single node so the request is guaranteed to land on the right node\r\n* Multiple nodes so kubeproxy has to forward the request to the right node\r\n* Initiating a request from within the cluster to exercise the Node->LB->Node route\r\n\r\nAll of these are working, though I've only tested interactively.",
        "createdAt" : "2017-10-19T18:43:51Z",
        "updatedAt" : "2017-10-31T01:32:07Z",
        "lastEditedBy" : "e2b32365-51e9-430e-af40-4a95aa1db7f0",
        "tags" : [
        ]
      },
      {
        "id" : "703ca2ce-6e96-497e-b878-0cdc8e3fdd15",
        "parentId" : "153f984d-b77b-487e-a27a-b563486564b7",
        "authorId" : "e2b32365-51e9-430e-af40-4a95aa1db7f0",
        "body" : "From our conversation I think this addresses the routing cases that you wanted to check - let me know if I'm still not covering the bases!",
        "createdAt" : "2017-10-19T18:44:47Z",
        "updatedAt" : "2017-10-31T01:32:07Z",
        "lastEditedBy" : "e2b32365-51e9-430e-af40-4a95aa1db7f0",
        "tags" : [
        ]
      },
      {
        "id" : "9f1b4ad1-8c3a-498f-beaa-ab85b603272e",
        "parentId" : "153f984d-b77b-487e-a27a-b563486564b7",
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "Can you also check to ensure that the source IP preservation still works with this:\r\n\r\nhttps://kubernetes.io/docs/tutorials/services/source-ip/\r\n\r\nThanks!",
        "createdAt" : "2017-10-24T22:58:10Z",
        "updatedAt" : "2017-10-31T01:32:07Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      },
      {
        "id" : "6a4b7d4e-55a1-460e-91bf-707f1e7178db",
        "parentId" : "153f984d-b77b-487e-a27a-b563486564b7",
        "authorId" : "e2b32365-51e9-430e-af40-4a95aa1db7f0",
        "body" : "I ran a test using the `source-ip-app` tool from the page you linked.  Without the `externalTrafficPolicy: Local` setting, the tool reported `client_address=10.244.0.1`.  With the `externalTrafficPolicy: Local` setting, the tool reported `client_address=167.220.242.83`.  So I think source IP preservation is still okay.  Thanks for flagging it!\r\n\r\n(I'm still not sure how to automate this testing though.  It feels like our testing matrix is getting more complex by the day and ad hoc hand testing won't cut it forever...)",
        "createdAt" : "2017-10-31T01:23:29Z",
        "updatedAt" : "2017-10-31T01:32:07Z",
        "lastEditedBy" : "e2b32365-51e9-430e-af40-4a95aa1db7f0",
        "tags" : [
        ]
      }
    ],
    "commit" : "ea1c5a4b383465f88962ad92cec549168330ddbd",
    "line" : 66,
    "diffHunk" : "@@ -1,1 +241,245 @@\t\treturn nil, err\n\t}\n\tsg, sgNeedsUpdate, err := az.reconcileSecurityGroup(sg, clusterName, service, lbIP, true /* wantLb */)\n\tif err != nil {\n\t\treturn nil, err"
  },
  {
    "id" : "a77647cc-9177-49d2-9bc3-6b676d59ccba",
    "prId" : 51757,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/51757#pullrequestreview-60801175",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "254ab3ae-5bfd-4b7a-850b-72f5fe9fd300",
        "parentId" : null,
        "authorId" : "dd7ae991-dbbc-4a29-896b-4334bdee748b",
        "body" : "Should only make use of '`ServiceAnnotationLoadBalancerInternalSubnet`, when isInternal is true?\r\n\r\nIf user expects external loadbalancer, but also specifies `ServiceAnnotationLoadBalancerInternalSubnet`, we should ignore the annotation since it does not make sense, or just leave a warning.",
        "createdAt" : "2017-09-05T05:26:07Z",
        "updatedAt" : "2017-09-08T00:04:04Z",
        "lastEditedBy" : "dd7ae991-dbbc-4a29-896b-4334bdee748b",
        "tags" : [
        ]
      },
      {
        "id" : "f0449612-758e-41be-b812-b85015b77dba",
        "parentId" : "254ab3ae-5bfd-4b7a-850b-72f5fe9fd300",
        "authorId" : "e2b32365-51e9-430e-af40-4a95aa1db7f0",
        "body" : "Fixed by making `subnet` check that the `Internal` annotation is also present.",
        "createdAt" : "2017-09-06T04:41:52Z",
        "updatedAt" : "2017-09-08T00:04:04Z",
        "lastEditedBy" : "e2b32365-51e9-430e-af40-4a95aa1db7f0",
        "tags" : [
        ]
      }
    ],
    "commit" : "125a05479059bde504c948f774d171b7991bcaa8",
    "line" : 47,
    "diffHunk" : "@@ -1,1 +532,536 @@\tlbName := getLoadBalancerName(clusterName, isInternal)\n\tserviceName := getServiceName(service)\n\tlbFrontendIPConfigName := getFrontendIPConfigName(service, subnet(service))\n\tlbFrontendIPConfigID := az.getFrontendIPConfigID(lbName, lbFrontendIPConfigName)\n\tlbBackendPoolName := getBackendPoolName(clusterName)"
  },
  {
    "id" : "e1576edf-84e4-4812-9813-3f8b2147cb3f",
    "prId" : 51757,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/51757#pullrequestreview-60496956",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f8b341e2-1998-4565-a866-46a898a9c383",
        "parentId" : null,
        "authorId" : "dd7ae991-dbbc-4a29-896b-4334bdee748b",
        "body" : "This is for 'if !wantLb {' section in 'https://github.com/kubernetes/kubernetes/pull/51757/files#diff-c901394068476b4ccb003a6c6efad57cR579', since github doesn't allow comment on unmodified code.\r\n\r\n`strings.EqualFold(*config.Name, lbFrontendIPConfigName)` also needs update to 'serviceOwnsFrontEndIP'.\r\n\r\nFor a corner case:\r\nSwitching from 'internal LB with subnetA' to 'external LB with subnetB', the frontendIP won't get deleted.\r\n\r\nThough this does not sound a good user input, but we need to ensure previous created frontendIP entry get deleted.\r\n",
        "createdAt" : "2017-09-05T05:42:10Z",
        "updatedAt" : "2017-09-08T00:04:04Z",
        "lastEditedBy" : "dd7ae991-dbbc-4a29-896b-4334bdee748b",
        "tags" : [
        ]
      }
    ],
    "commit" : "125a05479059bde504c948f774d171b7991bcaa8",
    "line" : 60,
    "diffHunk" : "@@ -1,1 +581,585 @@\t\t\t\tnewConfigs = append(newConfigs[:i], newConfigs[i+1:]...)\n\t\t\t\tdirtyConfigs = true\n\t\t\t}\n\t\t}\n\t} else {"
  },
  {
    "id" : "d33366ad-28e2-43cb-b99c-43e42b2d735a",
    "prId" : 43510,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/43510#pullrequestreview-28880852",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "30dc71ed-2676-43d7-ae8c-9f9a46baa5f5",
        "parentId" : null,
        "authorId" : "b58d042e-6399-4396-8b57-817a4be25310",
        "body" : "Would it be better to move the added portion to a new func?  This one is getting so much longer with this.   ",
        "createdAt" : "2017-03-24T08:55:12Z",
        "updatedAt" : "2017-04-07T06:44:37Z",
        "lastEditedBy" : "b58d042e-6399-4396-8b57-817a4be25310",
        "tags" : [
        ]
      },
      {
        "id" : "47649628-1042-4534-b612-5c8f1ec38590",
        "parentId" : "30dc71ed-2676-43d7-ae8c-9f9a46baa5f5",
        "authorId" : "dd7ae991-dbbc-4a29-896b-4334bdee748b",
        "body" : "Yeah, the function gets a bit long. But we'll also need to pass down the external parameters to the spited func.\r\n\r\nI've got a try for the change: https://github.com/karataliu/kubernetes/commit/3848fb498be410ef84ac8347d495ba0571e3e511 , and could be evaluated later.",
        "createdAt" : "2017-03-24T11:22:50Z",
        "updatedAt" : "2017-04-07T06:44:37Z",
        "lastEditedBy" : "dd7ae991-dbbc-4a29-896b-4334bdee748b",
        "tags" : [
        ]
      }
    ],
    "commit" : "f20e9bf66d324908e7afa041a90bc68c3af48e64",
    "line" : 119,
    "diffHunk" : "@@ -1,1 +168,172 @@\t}\n\n\tvar lbIP *string\n\tvar fipConfigurationProperties *network.FrontendIPConfigurationPropertiesFormat\n"
  },
  {
    "id" : "96ee0d22-58ad-4df0-9b49-e8e44907db86",
    "prId" : 43510,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/43510#pullrequestreview-28874045",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "77fc6aed-0689-431b-bcc5-3646993cd635",
        "parentId" : null,
        "authorId" : "b58d042e-6399-4396-8b57-817a4be25310",
        "body" : "So sourceAddressPrefixes is nil for the internal case?",
        "createdAt" : "2017-03-24T09:40:31Z",
        "updatedAt" : "2017-04-07T06:44:37Z",
        "lastEditedBy" : "b58d042e-6399-4396-8b57-817a4be25310",
        "tags" : [
        ]
      },
      {
        "id" : "9f5f84cf-374c-4ec2-b9d7-d60452a36406",
        "parentId" : "77fc6aed-0689-431b-bcc5-3646993cd635",
        "authorId" : "dd7ae991-dbbc-4a29-896b-4334bdee748b",
        "body" : "Yes, and it would function like an empty array.\r\nTraffics from vnet is allowed by default rule, thus there is no need to add an explicit one.",
        "createdAt" : "2017-03-24T10:44:08Z",
        "updatedAt" : "2017-04-07T06:44:37Z",
        "lastEditedBy" : "dd7ae991-dbbc-4a29-896b-4334bdee748b",
        "tags" : [
        ]
      }
    ],
    "commit" : "f20e9bf66d324908e7afa041a90bc68c3af48e64",
    "line" : 375,
    "diffHunk" : "@@ -1,1 +660,664 @@\tvar sourceAddressPrefixes []string\n\tif sourceRanges == nil || serviceapi.IsAllowAll(sourceRanges) {\n\t\tif !requiresInternalLoadBalancer(service) {\n\t\t\tsourceAddressPrefixes = []string{\"Internet\"}\n\t\t}"
  },
  {
    "id" : "33928bef-26c5-4afe-a1a8-01471856cb0a",
    "prId" : 43510,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/43510#pullrequestreview-34771252",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9278e36c-c404-49fe-900c-1c49c527e8b1",
        "parentId" : null,
        "authorId" : "37135b41-542a-4b5d-a7b2-65cb83bdad00",
        "body" : "Hey guys, just a quick question regarding this.\r\n\r\nDoes the subnet need to be in the same resource group (in Azure) as the cluster?\r\nThis should not be the case given we can create the kubernetes cluster with an existing VNet in different resource groups.\r\n\r\nGetting the following error (the subnet (internal-network/kube-machines) is in a different resource group, it is the same subnet that the agent machines are on):\r\n`Error creating load balancer (will retry): Failed to create load balancer for service default/rabbitmq: ensure(default/rabbitmq): lb(XXXXXX-internal) - failed to get subnet: internal-network/kube-machines`",
        "createdAt" : "2017-04-26T05:32:36Z",
        "updatedAt" : "2017-04-26T05:32:36Z",
        "lastEditedBy" : "37135b41-542a-4b5d-a7b2-65cb83bdad00",
        "tags" : [
        ]
      },
      {
        "id" : "d119cb25-580c-4c64-81a4-8e9b42373597",
        "parentId" : "9278e36c-c404-49fe-900c-1c49c527e8b1",
        "authorId" : "b516a0b6-a0cd-4503-a269-18f3909fa05d",
        "body" : "The cloudprovider really isn't setup well to handle multi-resource-group things right now unfortunately. There's a larger task to revamp and use resource IDs everywhere instead of resource \"names\" that are assumed to be under a single RG.",
        "createdAt" : "2017-04-26T08:08:33Z",
        "updatedAt" : "2017-04-26T08:08:33Z",
        "lastEditedBy" : "b516a0b6-a0cd-4503-a269-18f3909fa05d",
        "tags" : [
        ]
      }
    ],
    "commit" : "f20e9bf66d324908e7afa041a90bc68c3af48e64",
    "line" : 123,
    "diffHunk" : "@@ -1,1 +172,176 @@\n\tif isInternal {\n\t\tsubnet, existsSubnet, err := az.getSubnet(az.VnetName, az.SubnetName)\n\t\tif err != nil {\n\t\t\treturn nil, err"
  },
  {
    "id" : "115a01b8-3a1e-4bd7-a8fd-283e36d97c63",
    "prId" : 42034,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/42034#pullrequestreview-23679180",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "82c2e255-d3ff-4331-a4db-3148068ccfc4",
        "parentId" : null,
        "authorId" : "b516a0b6-a0cd-4503-a269-18f3909fa05d",
        "body" : "Are we sure we should we limit this to the existing RG?",
        "createdAt" : "2017-02-24T06:40:27Z",
        "updatedAt" : "2017-03-15T03:37:22Z",
        "lastEditedBy" : "b516a0b6-a0cd-4503-a269-18f3909fa05d",
        "tags" : [
        ]
      },
      {
        "id" : "2aa734ab-39b7-4158-b72f-2026fcbb6048",
        "parentId" : "82c2e255-d3ff-4331-a4db-3148068ccfc4",
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "lifted to all IP addresses in the subscription.",
        "createdAt" : "2017-02-24T06:58:49Z",
        "updatedAt" : "2017-03-15T03:37:22Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      },
      {
        "id" : "eea490aa-f198-4811-859e-e9e8b94f7a2f",
        "parentId" : "82c2e255-d3ff-4331-a4db-3148068ccfc4",
        "authorId" : "b516a0b6-a0cd-4503-a269-18f3909fa05d",
        "body" : "I forgot how much this is oriented around \"the\" resource group. This returns the public ip name, and all of the code that looks at the public ip looks for it in the current resource group. I think you have to revert the last change or make a larger change to refactor `getPublicIPName` to `getPublicIP`.",
        "createdAt" : "2017-02-24T09:43:22Z",
        "updatedAt" : "2017-03-15T03:37:22Z",
        "lastEditedBy" : "b516a0b6-a0cd-4503-a269-18f3909fa05d",
        "tags" : [
        ]
      }
    ],
    "commit" : "ea23cabfa05e8a1ae5badb9dafae326510d318cf",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +73,77 @@\t}\n\n\tlist, err := az.PublicIPAddressesClient.List(az.ResourceGroup)\n\tif err != nil {\n\t\treturn \"\", err"
  },
  {
    "id" : "0531bc31-a160-41c8-844c-1850bd6fcfe1",
    "prId" : 42034,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/42034#pullrequestreview-23657395",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b05139bf-71c4-4181-aafd-4fadf5691810",
        "parentId" : null,
        "authorId" : "66c52afc-e574-435b-90fe-db07a8594bf2",
        "body" : "Would this change mean the user always has to bring his own IP? If so, it would probably be a breaking change.",
        "createdAt" : "2017-02-24T06:46:54Z",
        "updatedAt" : "2017-03-15T03:37:22Z",
        "lastEditedBy" : "66c52afc-e574-435b-90fe-db07a8594bf2",
        "tags" : [
        ]
      },
      {
        "id" : "03f64bb4-e63a-479b-93ba-e60be49ab2ef",
        "parentId" : "b05139bf-71c4-4181-aafd-4fadf5691810",
        "authorId" : "66c52afc-e574-435b-90fe-db07a8594bf2",
        "body" : "Ah, nvm.",
        "createdAt" : "2017-02-24T06:49:59Z",
        "updatedAt" : "2017-03-15T03:37:22Z",
        "lastEditedBy" : "66c52afc-e574-435b-90fe-db07a8594bf2",
        "tags" : [
        ]
      }
    ],
    "commit" : "ea23cabfa05e8a1ae5badb9dafae326510d318cf",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +68,72 @@\nfunc (az *Cloud) getPublicIPName(clusterName string, service *v1.Service) (string, error) {\n\tloadBalancerIP := service.Spec.LoadBalancerIP\n\tif len(loadBalancerIP) == 0 {\n\t\treturn fmt.Sprintf(\"%s-%s\", clusterName, cloudprovider.GetLoadBalancerName(service)), nil"
  },
  {
    "id" : "7a27e7b3-9c13-44c2-9539-06b425a17ef7",
    "prId" : 36557,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/36557#pullrequestreview-8067845",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "116a3636-11e6-4e79-b528-6998564fee0f",
        "parentId" : null,
        "authorId" : "b516a0b6-a0cd-4503-a269-18f3909fa05d",
        "body" : "Is there any assumptions about this probe port/path? Particularly, is the contract for this say \"the pod presence probe must be HTTP, not HTTPS\"? I only ask because I know our probes don't support HTTPS.\n",
        "createdAt" : "2016-11-10T17:53:39Z",
        "updatedAt" : "2016-11-10T18:05:28Z",
        "lastEditedBy" : "b516a0b6-a0cd-4503-a269-18f3909fa05d",
        "tags" : [
        ]
      },
      {
        "id" : "c71a80d2-8512-4f8e-aaa0-bcbc409cd2b0",
        "parentId" : "116a3636-11e6-4e79-b528-6998564fee0f",
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "I think it's HTTP for now, so I think we're ok...\n",
        "createdAt" : "2016-11-10T18:22:55Z",
        "updatedAt" : "2016-11-10T18:22:55Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "8b9348e17697251f873e27588d8a9c4617810c32",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +348,352 @@\t\t\t\tProperties: &network.ProbePropertiesFormat{\n\t\t\t\t\tRequestPath:       to.StringPtr(podPresencePath),\n\t\t\t\t\tProtocol:          network.ProbeProtocolHTTP,\n\t\t\t\t\tPort:              to.Int32Ptr(podPresencePort),\n\t\t\t\t\tIntervalInSeconds: to.Int32Ptr(5),"
  },
  {
    "id" : "065eae26-df7a-455b-bfe1-fe513af563f9",
    "prId" : 28821,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "149e29aa-cdc2-4296-beba-47e32596fd45",
        "parentId" : null,
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "same here for extracting a method.\n",
        "createdAt" : "2016-07-20T23:27:29Z",
        "updatedAt" : "2016-07-26T21:50:39Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "2ebffb431d31d422b7a9e0b0b91b8eb22d5149b8",
    "line" : 417,
    "diffHunk" : "@@ -1,1 +415,419 @@\t}\n\t// update rules: remove unwanted\n\tfor i := len(updatedRules) - 1; i >= 0; i-- {\n\t\texistingRule := updatedRules[i]\n\t\tif serviceOwnsRule(service, *existingRule.Name) {"
  }
]