[
  {
    "id" : "3febf3ab-9334-4fe5-806c-98a8330e6be0",
    "prId" : 58300,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/58300#pullrequestreview-89119892",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dd2cf79f-f01f-461e-a7bf-eeba17b3ec25",
        "parentId" : null,
        "authorId" : "3c1422a0-6358-4857-8f56-961979171514",
        "body" : "Does this mean we still have to read the config from env, even a config file is specified.\r\n\r\nAnd if the config is not specified, should not we read the config from environment?",
        "createdAt" : "2018-01-16T14:45:42Z",
        "updatedAt" : "2018-01-18T14:50:50Z",
        "lastEditedBy" : "3c1422a0-6358-4857-8f56-961979171514",
        "tags" : [
        ]
      },
      {
        "id" : "1562b343-5afd-4bf5-beae-42f5a74b7f91",
        "parentId" : "dd2cf79f-f01f-461e-a7bf-eeba17b3ec25",
        "authorId" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "body" : "@dixudx yes, the idea is to pre-populate the data structure what is in environment variables AND then overwrite the data present in the config file.\r\n\r\nSo if the config is not specified, we still read from environment",
        "createdAt" : "2018-01-16T14:47:46Z",
        "updatedAt" : "2018-01-18T14:50:50Z",
        "lastEditedBy" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "f8aef8b911221ff76ff07520b51c5058553185dd",
    "line" : 56,
    "diffHunk" : "@@ -1,1 +225,229 @@\t}\n\n\tcfg, _ := configFromEnv()\n\n\t// Set default values for config params"
  },
  {
    "id" : "1d05d7cb-99d6-4d88-8acd-438212ef3c7b",
    "prId" : 56846,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/56846#pullrequestreview-87041188",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "701daad7-77d5-4756-af6c-faeacc57515f",
        "parentId" : null,
        "authorId" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "body" : "In the interested of being backward compatible and keeping the diff small, `showOnlyActive` should default to true.  It is tricky to default a go boolean variable to true, so may be we can flip the variable name - `showAll`. What you think?",
        "createdAt" : "2018-01-05T22:26:20Z",
        "updatedAt" : "2018-01-10T17:09:47Z",
        "lastEditedBy" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "tags" : [
        ]
      },
      {
        "id" : "1d520223-6829-4106-941f-8be623c3ef5d",
        "parentId" : "701daad7-77d5-4756-af6c-faeacc57515f",
        "authorId" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "body" : "On second thoughts, it doesn't matter much. so I am going to lgtm. ",
        "createdAt" : "2018-01-05T22:30:16Z",
        "updatedAt" : "2018-01-10T17:09:47Z",
        "lastEditedBy" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "tags" : [
        ]
      }
    ],
    "commit" : "4e1b5c6a3299327ff856d05443af8fa20ee760e7",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +367,371 @@\t\tName: fmt.Sprintf(\"^%s$\", regexp.QuoteMeta(mapNodeNameToServerName(name))),\n\t}\n\tif showOnlyActive {\n\t\topts.Status = \"ACTIVE\"\n\t}"
  },
  {
    "id" : "c7d4be21-62e6-41e1-bd14-321219079de4",
    "prId" : 51317,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/51317#pullrequestreview-58799042",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6982b037-d8de-46a0-9dfe-51bb94d0a078",
        "parentId" : null,
        "authorId" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "body" : "can we return `nil, err`?",
        "createdAt" : "2017-08-26T10:28:06Z",
        "updatedAt" : "2017-08-26T10:28:06Z",
        "lastEditedBy" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "tags" : [
        ]
      },
      {
        "id" : "3f007696-dfa4-43d0-b5db-12b3b1793dfa",
        "parentId" : "6982b037-d8de-46a0-9dfe-51bb94d0a078",
        "authorId" : "5fe5bdb9-52d3-4f2d-8554-f12673e65198",
        "body" : "No, nil is incorrect, we cannot use nil as type cloudprovider.Zone in return argument. The \"cloudprovider.Zone{}\" is ok.",
        "createdAt" : "2017-08-26T10:44:55Z",
        "updatedAt" : "2017-08-26T10:44:55Z",
        "lastEditedBy" : "5fe5bdb9-52d3-4f2d-8554-f12673e65198",
        "tags" : [
        ]
      },
      {
        "id" : "01316b98-bd36-4383-8268-0467dc2ea9b7",
        "parentId" : "6982b037-d8de-46a0-9dfe-51bb94d0a078",
        "authorId" : "5fe5bdb9-52d3-4f2d-8554-f12673e65198",
        "body" : "The return argument is not a point type, it is a object, nil is incorrect.",
        "createdAt" : "2017-08-26T10:47:57Z",
        "updatedAt" : "2017-08-26T10:47:57Z",
        "lastEditedBy" : "5fe5bdb9-52d3-4f2d-8554-f12673e65198",
        "tags" : [
        ]
      }
    ],
    "commit" : "79d2b1dd4e30e59c5ab559992e0046a672880c0f",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +560,564 @@\tinstanceID, err := instanceIDFromProviderID(providerID)\n\tif err != nil {\n\t\treturn cloudprovider.Zone{}, err\n\t}\n"
  },
  {
    "id" : "002fb25c-bf13-4209-b53b-5dbf9df5e2e9",
    "prId" : 51317,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/51317#pullrequestreview-58798798",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1c6c8865-66f8-4cc2-b519-e83f1835fb0e",
        "parentId" : null,
        "authorId" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "body" : "same here",
        "createdAt" : "2017-08-26T10:28:13Z",
        "updatedAt" : "2017-08-26T10:28:13Z",
        "lastEditedBy" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "79d2b1dd4e30e59c5ab559992e0046a672880c0f",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +565,569 @@\tcompute, err := os.NewComputeV2()\n\tif err != nil {\n\t\treturn cloudprovider.Zone{}, err\n\t}\n"
  },
  {
    "id" : "70ec4e8a-7e85-47f7-ac36-977844fe4e6c",
    "prId" : 51317,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/51317#pullrequestreview-58798799",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "53f30120-0657-449d-9c2e-132af5748ea2",
        "parentId" : null,
        "authorId" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "body" : "same here",
        "createdAt" : "2017-08-26T10:28:21Z",
        "updatedAt" : "2017-08-26T10:28:21Z",
        "lastEditedBy" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "79d2b1dd4e30e59c5ab559992e0046a672880c0f",
    "line" : 37,
    "diffHunk" : "@@ -1,1 +570,574 @@\tsrv, err := servers.Get(compute, instanceID).Extract()\n\tif err != nil {\n\t\treturn cloudprovider.Zone{}, err\n\t}\n"
  },
  {
    "id" : "98c18e15-90c2-4409-8ae4-fbbd3bba8649",
    "prId" : 51317,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/51317#pullrequestreview-58798801",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d994e3b0-0633-4a9d-9dbe-87ea74477963",
        "parentId" : null,
        "authorId" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "body" : "same here",
        "createdAt" : "2017-08-26T10:28:32Z",
        "updatedAt" : "2017-08-26T10:28:32Z",
        "lastEditedBy" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "79d2b1dd4e30e59c5ab559992e0046a672880c0f",
    "line" : 56,
    "diffHunk" : "@@ -1,1 +588,592 @@\tcompute, err := os.NewComputeV2()\n\tif err != nil {\n\t\treturn cloudprovider.Zone{}, err\n\t}\n"
  },
  {
    "id" : "57d0c949-8d56-4969-bab7-79e2f92abe74",
    "prId" : 51317,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/51317#pullrequestreview-58798804",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "39ca5105-122b-478e-b8c9-d772b33150a3",
        "parentId" : null,
        "authorId" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "body" : "same here",
        "createdAt" : "2017-08-26T10:28:38Z",
        "updatedAt" : "2017-08-26T10:28:39Z",
        "lastEditedBy" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "79d2b1dd4e30e59c5ab559992e0046a672880c0f",
    "line" : 62,
    "diffHunk" : "@@ -1,1 +594,598 @@\tif err != nil {\n\t\tif err == ErrNotFound {\n\t\t\treturn cloudprovider.Zone{}, cloudprovider.InstanceNotFound\n\t\t}\n\t\treturn cloudprovider.Zone{}, err"
  },
  {
    "id" : "e090bcf9-dc16-4c89-9ab3-75aebe51929c",
    "prId" : 40423,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/40423#pullrequestreview-26494822",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ea9af9e9-0fbb-4f27-bcbe-a28a90aedc76",
        "parentId" : null,
        "authorId" : "9f3bef7b-adf1-46e5-9257-cbafa43ec222",
        "body" : "Would naming this `Version` (and `gcfg:\"version\"`) cause ambiguity? The prefix seems redundant when it's a field in a `struct` named `BlockStorageOpts`.",
        "createdAt" : "2017-03-07T00:26:08Z",
        "updatedAt" : "2017-03-21T18:48:07Z",
        "lastEditedBy" : "9f3bef7b-adf1-46e5-9257-cbafa43ec222",
        "tags" : [
        ]
      },
      {
        "id" : "0c199cea-89d8-4ed8-8e4d-1da9bc9ae336",
        "parentId" : "ea9af9e9-0fbb-4f27-bcbe-a28a90aedc76",
        "authorId" : "80c31010-de28-4a07-9078-d9f4780d371e",
        "body" : "This was done to match already existing code. See loadbalancer's LoadBalancerOpts",
        "createdAt" : "2017-03-13T08:28:30Z",
        "updatedAt" : "2017-03-21T18:48:07Z",
        "lastEditedBy" : "80c31010-de28-4a07-9078-d9f4780d371e",
        "tags" : [
        ]
      }
    ],
    "commit" : "89f596f408d26b8866b7edd4ec0230895abb0b1b",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +92,96 @@\ntype BlockStorageOpts struct {\n\tBSVersion       string `gcfg:\"bs-version\"`        // overrides autodetection. v1 or v2. Defaults to auto\n\tTrustDevicePath bool   `gcfg:\"trust-device-path\"` // See Issue #33128\n}"
  },
  {
    "id" : "143a9eb9-49a3-469b-a0a0-724245c3d19f",
    "prId" : 40423,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/40423#pullrequestreview-25304965",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a5cd71be-f681-4db6-a291-e20938dd4a84",
        "parentId" : null,
        "authorId" : "a7f673a6-4b23-4df6-aa10-f123fa9dcd5f",
        "body" : "This return is suspicious. If v1 API is not enabled, we should keep trying v2.",
        "createdAt" : "2017-03-08T15:35:30Z",
        "updatedAt" : "2017-03-21T18:48:07Z",
        "lastEditedBy" : "a7f673a6-4b23-4df6-aa10-f123fa9dcd5f",
        "tags" : [
        ]
      },
      {
        "id" : "be09c68d-29ac-4227-a937-880b8f1869ae",
        "parentId" : "a5cd71be-f681-4db6-a291-e20938dd4a84",
        "authorId" : "80c31010-de28-4a07-9078-d9f4780d371e",
        "body" : "And we will, creating a ServiceClient doesn't depend on supported blockstorage api versions",
        "createdAt" : "2017-03-10T19:00:49Z",
        "updatedAt" : "2017-03-21T18:48:07Z",
        "lastEditedBy" : "80c31010-de28-4a07-9078-d9f4780d371e",
        "tags" : [
        ]
      },
      {
        "id" : "cc2fc1f0-1159-408f-a72b-b455cf4d270b",
        "parentId" : "a5cd71be-f681-4db6-a291-e20938dd4a84",
        "authorId" : "9f3bef7b-adf1-46e5-9257-cbafa43ec222",
        "body" : "This seems fine: either the user explicitly set \"v1\" in their config (in which case it should error) or it was determined that \"v1\" was current.",
        "createdAt" : "2017-03-13T04:36:35Z",
        "updatedAt" : "2017-03-21T18:48:07Z",
        "lastEditedBy" : "9f3bef7b-adf1-46e5-9257-cbafa43ec222",
        "tags" : [
        ]
      }
    ],
    "commit" : "89f596f408d26b8866b7edd4ec0230895abb0b1b",
    "line" : 95,
    "diffHunk" : "@@ -1,1 +617,621 @@\t\tif err != nil || sClient == nil {\n\t\t\tglog.Errorf(\"Unable to initialize cinder client for region: %s\", os.region)\n\t\t\treturn nil, err\n\t\t}\n\t\tavailableApiVersions := []apiversions_v1.APIVersion{}"
  },
  {
    "id" : "70edee93-a716-46c9-bc25-605faf94f991",
    "prId" : 32111,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1bda5e00-8b77-4960-9824-8362924fae20",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "don't we also need to populate AuthOptions.TokenID if you want to use passwordless TrustId? Just looking through AuthenticateV3Trust/trustv3auth in the godeps\n",
        "createdAt" : "2016-09-07T02:41:09Z",
        "updatedAt" : "2016-10-14T12:54:36Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "b40adab5-4eff-4d85-b784-e3a2e2f9443b",
        "parentId" : "1bda5e00-8b77-4960-9824-8362924fae20",
        "authorId" : "7a7a5f6b-c86f-47ed-8758-ebe808f5a1d3",
        "body" : "Actually using a token here would defeat the main use case of trusts : if we just want to delegate rights for a small time window passing a token would be enough. However in the OpenStack driver use case Kubernetes is a long living service and its lifetime is way higher than the token lifetime (usually a day). In this case the trust feature allows to delegate user rights to another user, that would have been created specifically for the Kubernetes cluster. Hence we do not leak the user credentials, only the creds of the user specifically created, which we don't care. And we can specify the lifetime we want for the trust when creating it (can be unlimited).\n",
        "createdAt" : "2016-09-07T09:52:02Z",
        "updatedAt" : "2016-10-14T12:54:36Z",
        "lastEditedBy" : "7a7a5f6b-c86f-47ed-8758-ebe808f5a1d3",
        "tags" : [
        ]
      },
      {
        "id" : "2cce4119-f3d5-434d-9faa-a0fea47aee13",
        "parentId" : "1bda5e00-8b77-4960-9824-8362924fae20",
        "authorId" : "7a7a5f6b-c86f-47ed-8758-ebe808f5a1d3",
        "body" : "Regarding the code, indeed it is using a first token to get a new token scoped with the trust delegation, but this first token is automatically created from the full creds if specified.\n",
        "createdAt" : "2016-09-07T09:56:04Z",
        "updatedAt" : "2016-10-14T12:54:36Z",
        "lastEditedBy" : "7a7a5f6b-c86f-47ed-8758-ebe808f5a1d3",
        "tags" : [
        ]
      },
      {
        "id" : "380e3966-16a0-43a9-a1c9-c8fecf8bc1f6",
        "parentId" : "1bda5e00-8b77-4960-9824-8362924fae20",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "> this first token is automatically created from the full creds if specified\n\nif the token is not specified and the username/password is? just making sure I'm understanding\n",
        "createdAt" : "2016-09-07T13:53:09Z",
        "updatedAt" : "2016-10-14T12:54:36Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "d8bd5be3-4da1-4aef-a23e-11ad657b0ea6",
        "parentId" : "1bda5e00-8b77-4960-9824-8362924fae20",
        "authorId" : "7a7a5f6b-c86f-47ed-8758-ebe808f5a1d3",
        "body" : "exactly.\n",
        "createdAt" : "2016-09-07T14:48:50Z",
        "updatedAt" : "2016-10-14T12:54:36Z",
        "lastEditedBy" : "7a7a5f6b-c86f-47ed-8758-ebe808f5a1d3",
        "tags" : [
        ]
      },
      {
        "id" : "0caf1ddb-dcd9-4203-a780-420dc8527fcc",
        "parentId" : "1bda5e00-8b77-4960-9824-8362924fae20",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "so how does this \"avoid passing the user credentials in clear inside the config file\"? it looks like we still have to have those\n",
        "createdAt" : "2016-09-07T14:50:57Z",
        "updatedAt" : "2016-10-14T12:54:36Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "0bd890f8-edc7-4fa0-a0a0-a22c5ec6e607",
        "parentId" : "1bda5e00-8b77-4960-9824-8362924fae20",
        "authorId" : "7a7a5f6b-c86f-47ed-8758-ebe808f5a1d3",
        "body" : "you need to create a specific Kubernetes user, you will leak the specific user creds but we don't care since it was created for this on purpose, and you can revoke the trust delegation between the specific user and yourself whenever you want : in this case the specific user become powerless.\nhttp://blogs.rdoproject.org/5858/role-delegation-in-keystone-trusts\n",
        "createdAt" : "2016-09-07T15:03:52Z",
        "updatedAt" : "2016-10-14T12:54:36Z",
        "lastEditedBy" : "7a7a5f6b-c86f-47ed-8758-ebe808f5a1d3",
        "tags" : [
        ]
      }
    ],
    "commit" : "c1b3100ba27ee48c97e7203fa77cdff2fcc61939",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +105,109 @@\t\tTenantId   string `gcfg:\"tenant-id\"`\n\t\tTenantName string `gcfg:\"tenant-name\"`\n\t\tTrustId    string `gcfg:\"trust-id\"`\n\t\tDomainId   string `gcfg:\"domain-id\"`\n\t\tDomainName string `gcfg:\"domain-name\"`"
  },
  {
    "id" : "cb9b62a4-eb0c-4064-9108-255a8c4d8523",
    "prId" : 32111,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/32111#pullrequestreview-539190",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5f5cd2d2-3228-45a8-81e9-c612adb85fb1",
        "parentId" : null,
        "authorId" : "7bd16269-c1b5-42b3-803e-5e5920541002",
        "body" : "Thanks for your work!\nI have a small comment,\nIf there is an error in new client and cfg.Global.TrustId is not empty then provider(which is not set and probably an error) will be passed to AuthenticateV3Trust or Authenticate function.\n\"\"\"\nThis might be required:\n    if err != nil {\nreturn nil, err\n         }\n\"\"\"\n(and instead of doing that i write a separate func for that : https://github.com/kubernetes/kubernetes/pull/26037/files#diff-694c675fe77b09923cc453e7228f8fa8R245), please check if it is a valid point.\n",
        "createdAt" : "2016-09-19T11:28:49Z",
        "updatedAt" : "2016-10-14T12:54:36Z",
        "lastEditedBy" : "7bd16269-c1b5-42b3-803e-5e5920541002",
        "tags" : [
        ]
      },
      {
        "id" : "f76f3f6e-bc6e-487e-9a76-26ca6ed6db5d",
        "parentId" : "5f5cd2d2-3228-45a8-81e9-c612adb85fb1",
        "authorId" : "7a7a5f6b-c86f-47ed-8758-ebe808f5a1d3",
        "body" : "Indeed. For the new function vs actual what do you prefer reviewers ? I don't care on my side, I saw a previous point from @liggitt in the other review regarding the fact that the function is exported, but we can just not export it.\n",
        "createdAt" : "2016-09-19T11:52:53Z",
        "updatedAt" : "2016-10-14T12:54:36Z",
        "lastEditedBy" : "7a7a5f6b-c86f-47ed-8758-ebe808f5a1d3",
        "tags" : [
        ]
      },
      {
        "id" : "3c7960d2-9b79-4a8d-867f-989c5b5c85e8",
        "parentId" : "5f5cd2d2-3228-45a8-81e9-c612adb85fb1",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "For now, just add an additional `if err != nil ...` check right after line 223\n",
        "createdAt" : "2016-09-19T12:31:08Z",
        "updatedAt" : "2016-10-14T12:54:36Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "c1b3100ba27ee48c97e7203fa77cdff2fcc61939",
    "line" : null,
    "diffHunk" : "@@ -1,1 +178,182 @@\t\treturn nil, err\n\t}\n\tif cfg.Global.TrustId != \"\" {\n\t\tauthOptionsExt := trust.AuthOptionsExt{\n\t\t\tTrustID:     cfg.Global.TrustId,"
  },
  {
    "id" : "0bfc0019-1333-499a-80b9-483482594e39",
    "prId" : 25888,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "61c6de86-89ba-437d-87b4-0a4dc729c7a5",
        "parentId" : null,
        "authorId" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "body" : "Is this reliable? In our OS1 I can see that my volume should be attached as /dev/vdc, but in the VM I can see it as /dev/vdb. IMO the device in OSP API is just \"recommended\" name, not the actual name.\n",
        "createdAt" : "2016-05-20T13:43:31Z",
        "updatedAt" : "2016-06-08T12:56:30Z",
        "lastEditedBy" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "tags" : [
        ]
      },
      {
        "id" : "7536cf75-b94d-4514-baad-84b1d884767b",
        "parentId" : "61c6de86-89ba-437d-87b4-0a4dc729c7a5",
        "authorId" : "a7f673a6-4b23-4df6-aa10-f123fa9dcd5f",
        "body" : "works for me, but let me try a manual attach and see\n",
        "createdAt" : "2016-05-20T13:57:42Z",
        "updatedAt" : "2016-06-08T12:56:30Z",
        "lastEditedBy" : "a7f673a6-4b23-4df6-aa10-f123fa9dcd5f",
        "tags" : [
        ]
      },
      {
        "id" : "c127d6d7-2df7-4bed-bb0b-cb950def03f1",
        "parentId" : "61c6de86-89ba-437d-87b4-0a4dc729c7a5",
        "authorId" : "a7f673a6-4b23-4df6-aa10-f123fa9dcd5f",
        "body" : "here is what i've found.\n- `nova volume-attach instance_name volume_id` (i.e. not specifying device), then the device path from `nova volume-attachments instance_name` matches that in the VM\n- `nova volume-attach instance_name volume_id /dev/vdz` (`vdz` is a random device path), then the device path from `nova volume-attachments instance_name` doesn't match that in the VM\n\nIn openstack provider code, the volume attach doesn't take a device name as input, so it works for me.\n",
        "createdAt" : "2016-05-20T14:28:12Z",
        "updatedAt" : "2016-06-08T12:56:30Z",
        "lastEditedBy" : "a7f673a6-4b23-4df6-aa10-f123fa9dcd5f",
        "tags" : [
        ]
      },
      {
        "id" : "f34962ff-5afd-403d-9ea6-567627230885",
        "parentId" : "61c6de86-89ba-437d-87b4-0a4dc729c7a5",
        "authorId" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "body" : "ok, let's hope it will be stable in future OSP releases\n",
        "createdAt" : "2016-05-20T14:30:23Z",
        "updatedAt" : "2016-06-08T12:56:30Z",
        "lastEditedBy" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "tags" : [
        ]
      }
    ],
    "commit" : "d1e0a139243b4bc7826f760ac492e76c4bd209b9",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +1135,1139 @@\t\t\t// Attachment[0][\"device\"] points to the device path\n\t\t\t// see http://developer.openstack.org/api-ref-blockstorage-v1.html\n\t\t\treturn disk.Attachments[0][\"device\"].(string), nil\n\t\t} else {\n\t\t\terrMsg := fmt.Sprintf(\"Disk %q is attached to a different compute: %q, should be detached before proceeding\", diskName, disk.Attachments[0][\"server_id\"])"
  },
  {
    "id" : "77dc3a0d-6e27-4e74-a6bd-f4a419ce396e",
    "prId" : 22023,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "00886a4b-5566-49dc-8503-6c9eec662923",
        "parentId" : null,
        "authorId" : "cbc6f9be-438f-48a0-9b4c-f20d83ad78f7",
        "body" : "The usage of the specific device path `/dev/disk/by-id/virtio-<UUID>` makes a couple of assumptions:\n1. That the device in question is from a pure/upstream OpenStack install, and not a Rackspace Public Cloud block device, as Rackspace presents block devices under the path schema `/dev/disk/by-uuid/<UUID>`\n2. And that the block device in question was formatted with a fs type after its creation\n   - By default a new block device in OpenStack or Rackspace comes clean **without** a fs on it where the path is `/dev/vd*` on OpenStack and `/dev/xvd*` on Rackspace.\n   - Not having a fs on the device at creation, but rather after a user specifically performs `mkfs.ext*` on it, means that the device will not exist in `/dev/disk/by-uuid/<UUID>` until _after_ its been formatted with a fs\n\nI confirmed this today on fresh installs of Ubuntu 15.10, as well as a CoreOS 835.9.0, on the Rackspace Public Cloud.\n\n`GetDevicePath` would have to be altered to accommodate for this difference in environment.\n\nAlso, see: https://ask.openstack.org/en/question/50882/are-devdiskby-id-symlinks-unreliable/\n",
        "createdAt" : "2016-03-15T01:06:49Z",
        "updatedAt" : "2016-04-21T08:32:01Z",
        "lastEditedBy" : "cbc6f9be-438f-48a0-9b4c-f20d83ad78f7",
        "tags" : [
        ]
      },
      {
        "id" : "4f73c020-7fa4-4eba-bb16-f0efdd0e9b62",
        "parentId" : "00886a4b-5566-49dc-8503-6c9eec662923",
        "authorId" : "6cddbb4e-f796-46b5-b12a-8f5715b68fba",
        "body" : "@metral: thanks for looking at this, `GetDevicePath` is actually specific to vanilla OpenStack (`os *OpenStack`). It was part of the Cinder volume plugin, which I generalized to make it work with Rackspace as well: https://github.com/kubernetes/kubernetes/pull/22023/files#diff-dcc20522f7683cc42d2cd40a27c2c155L92\n\nFor Rackspace I did not find a way to deduct the device via volume-id from the device tree at all, so I am querying the Cinder API for the device, which works fine: https://github.com/kubernetes/kubernetes/pull/22023/files#diff-dcc20522f7683cc42d2cd40a27c2c155L92\n",
        "createdAt" : "2016-03-15T08:26:51Z",
        "updatedAt" : "2016-04-21T08:32:01Z",
        "lastEditedBy" : "6cddbb4e-f796-46b5-b12a-8f5715b68fba",
        "tags" : [
        ]
      },
      {
        "id" : "dc0e56d9-66c2-4d9f-aa08-28bd6a29ad11",
        "parentId" : "00886a4b-5566-49dc-8503-6c9eec662923",
        "authorId" : "58cf89ce-9cc3-4dce-b99b-49ae3682cc9a",
        "body" : "For generic openstack: I think it's fine to stick with the same existing code in this change, but I share @metral's concerns about finding unformatted volumes by-uuid.  I like the `CinderProvider.GetDevicePath` structure you've added to this change, and we should use that in a later change to replace the generic OpenStack logic with something that also uses the cinder API to find the device name (looks like this is `GetVolume(diskId).attachments[i].device`, where `attachments[i].server_id==our_server_id` in cinder v2 API).\n\nIt's probably feasible to try cinder API v2 or v1 depending on what appears to be available, and therefore combine the rackspace+openstack code again.  I'm not fussed about whether we do that in this change or not (there are so many other places where the rackspace+openstack providers could share code, that it seems like that's a reasonable project in itself).\n",
        "createdAt" : "2016-03-22T06:00:06Z",
        "updatedAt" : "2016-04-21T08:32:01Z",
        "lastEditedBy" : "58cf89ce-9cc3-4dce-b99b-49ae3682cc9a",
        "tags" : [
        ]
      }
    ],
    "commit" : "ba4d74f3c7933c94afcdad0db039655d814b49fb",
    "line" : null,
    "diffHunk" : "@@ -1,1 +1095,1099 @@// GetDevicePath returns the path of an attached block storage volume, specified by its id.\nfunc (os *OpenStack) GetDevicePath(diskId string) string {\n\tfiles, _ := ioutil.ReadDir(\"/dev/disk/by-id/\")\n\tfor _, f := range files {\n\t\tif strings.Contains(f.Name(), \"virtio-\") {"
  },
  {
    "id" : "0fb817fc-3dfc-4b4b-9db0-2517ed305998",
    "prId" : 22023,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "156012e8-b28b-4b2d-9892-de75d2e92eaf",
        "parentId" : null,
        "authorId" : "8e448017-7838-493d-a424-33cada0da657",
        "body" : "Add a GoDoc comment\n",
        "createdAt" : "2016-04-14T03:32:22Z",
        "updatedAt" : "2016-04-21T08:32:01Z",
        "lastEditedBy" : "8e448017-7838-493d-a424-33cada0da657",
        "tags" : [
        ]
      }
    ],
    "commit" : "ba4d74f3c7933c94afcdad0db039655d814b49fb",
    "line" : null,
    "diffHunk" : "@@ -1,1 +1094,1098 @@\n// GetDevicePath returns the path of an attached block storage volume, specified by its id.\nfunc (os *OpenStack) GetDevicePath(diskId string) string {\n\tfiles, _ := ioutil.ReadDir(\"/dev/disk/by-id/\")\n\tfor _, f := range files {"
  },
  {
    "id" : "c1ae187b-6a39-40f8-9d25-4e00e4310f1a",
    "prId" : 15537,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d82c5e06-7f6b-405e-adbf-46827f7b39c7",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "check `resp.StatusCode` is as expected? err can be nil for non-200 responses\n",
        "createdAt" : "2015-11-09T16:42:19Z",
        "updatedAt" : "2015-11-18T15:15:56Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "967b81f4-abd9-4584-8f28-c24653147d2b",
        "parentId" : "d82c5e06-7f6b-405e-adbf-46827f7b39c7",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "and maybe content-type? (I don't know the API well enough to know what is expected)\n",
        "createdAt" : "2015-11-09T16:42:42Z",
        "updatedAt" : "2015-11-18T15:15:56Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "d539b149-2a00-4b01-9619-0258bcbd79ba",
        "parentId" : "d82c5e06-7f6b-405e-adbf-46827f7b39c7",
        "authorId" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "body" : "I added some checks\n",
        "createdAt" : "2015-11-09T18:08:01Z",
        "updatedAt" : "2015-11-18T15:15:56Z",
        "lastEditedBy" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "tags" : [
        ]
      }
    ],
    "commit" : "7fc8bcae60b14cb59f803a53868172218fc6b034",
    "line" : null,
    "diffHunk" : "@@ -1,1 +198,202 @@\t\treturn \"\", err\n\t}\n\n\tdefer resp.Body.Close()\n\tbodyBytes, err := ioutil.ReadAll(resp.Body)"
  },
  {
    "id" : "fab441af-06e0-4c70-9669-33ce7d617b7b",
    "prId" : 15537,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "25ff00bf-87aa-4dab-bb75-67e3eafa44ad",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "currently, `readInstanceID` can return empty strings... either return errors in that case, or check for empty instance id here\n",
        "createdAt" : "2015-11-09T16:44:31Z",
        "updatedAt" : "2015-11-18T15:15:56Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "84400bd9-76a9-4607-87e0-6879644b4c5d",
        "parentId" : "25ff00bf-87aa-4dab-bb75-67e3eafa44ad",
        "authorId" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "body" : "Ok\n",
        "createdAt" : "2015-11-09T18:08:10Z",
        "updatedAt" : "2015-11-18T15:15:56Z",
        "lastEditedBy" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "tags" : [
        ]
      }
    ],
    "commit" : "7fc8bcae60b14cb59f803a53868172218fc6b034",
    "line" : 112,
    "diffHunk" : "@@ -1,1 +221,225 @@\t}\n\n\tid, err := readInstanceID()\n\tif err != nil {\n\t\treturn nil, err"
  },
  {
    "id" : "a7fd5ebb-26cc-41fe-b349-25977b814aaf",
    "prId" : 15537,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "62eefe0b-3e90-40e6-81dc-bb10dfd5c0ae",
        "parentId" : null,
        "authorId" : "58cf89ce-9cc3-4dce-b99b-49ae3682cc9a",
        "body" : "Many openstack installs don't offer metadata service and use config drive instead.  If you'd like to support that as well (without cloud-init), I have some (untested) code in https://github.com/kubernetes/kubernetes/pull/17041/files#diff-9223cd6a0f3d50c7e3bd990b85d1c09fR50\n",
        "createdAt" : "2015-11-10T06:46:08Z",
        "updatedAt" : "2015-11-18T15:15:56Z",
        "lastEditedBy" : "58cf89ce-9cc3-4dce-b99b-49ae3682cc9a",
        "tags" : [
        ]
      },
      {
        "id" : "14d3a082-e048-4749-89aa-d0a6bc8df13f",
        "parentId" : "62eefe0b-3e90-40e6-81dc-bb10dfd5c0ae",
        "authorId" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "body" : "@anguslees Are you interested in doing a follow-up to add that?\n",
        "createdAt" : "2015-11-23T15:59:28Z",
        "updatedAt" : "2015-11-23T15:59:28Z",
        "lastEditedBy" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "tags" : [
        ]
      }
    ],
    "commit" : "7fc8bcae60b14cb59f803a53868172218fc6b034",
    "line" : 75,
    "diffHunk" : "@@ -1,1 +184,188 @@\t\t// Fall through with empty instanceID and try metadata server.\n\t}\n\tglog.V(5).Infof(\"Cannot read %s: '%v', trying metadata server\", instanceIDFile, err)\n\n\t// Try to get JSON from metdata server."
  },
  {
    "id" : "1252fcb7-ba8e-449f-bbe4-5048d48139c4",
    "prId" : 14431,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "af9357a9-8a78-4a54-ab8f-df39f4a61e5c",
        "parentId" : null,
        "authorId" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "body" : "if we have a client/recorder lying around close by, can we conver this to an event? If you don't want to do it in this pr I'll take just a todo. Allowing something through validation and then silently failing (a log line is silent enough) is weird. If this is actually surfaced in some other way than a simple log line already, ignore this comment.\n",
        "createdAt" : "2015-11-10T00:22:03Z",
        "updatedAt" : "2016-01-05T20:51:59Z",
        "lastEditedBy" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "tags" : [
        ]
      },
      {
        "id" : "e41c1c72-9be8-4c1c-b8f4-b3a175ac1b16",
        "parentId" : "af9357a9-8a78-4a54-ab8f-df39f4a61e5c",
        "authorId" : "537fd325-3646-446a-b1d0-2c1c5569384f",
        "body" : "So, this just mimics the way in which other errors were being returned.  I think if sending an event is preferred, it should be changed throughout (in another PR) to make everything consistent\n",
        "createdAt" : "2015-11-10T02:17:35Z",
        "updatedAt" : "2016-01-05T20:51:59Z",
        "lastEditedBy" : "537fd325-3646-446a-b1d0-2c1c5569384f",
        "tags" : [
        ]
      },
      {
        "id" : "ce21a0b0-4a46-4488-8189-c00a6b280521",
        "parentId" : "af9357a9-8a78-4a54-ab8f-df39f4a61e5c",
        "authorId" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "body" : "yep, another pr is ok\n",
        "createdAt" : "2015-11-10T03:17:31Z",
        "updatedAt" : "2016-01-05T20:51:59Z",
        "lastEditedBy" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "tags" : [
        ]
      }
    ],
    "commit" : "9e6c45c395b4cda611c6b325aa70c8475d446047",
    "line" : null,
    "diffHunk" : "@@ -1,1 +663,667 @@\t// TODO: Convert all error messages to use an event recorder\n\tif ports[0].Protocol != api.ProtocolTCP {\n\t\treturn nil, fmt.Errorf(\"Only TCP LoadBalancer is supported for openstack load balancers\")\n\t}\n"
  },
  {
    "id" : "840344a8-fd97-4bd1-9bae-73dd168b7a9d",
    "prId" : 13367,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "01fe4c7b-13d9-4287-ad06-8a1354cc66f9",
        "parentId" : null,
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "`\"github.com/rackspace/gophercloud/openstack/blockstorage/v1/volumes\"` is linking golang \"testing\" flags into all of our binaries. Not sure what to do with it, because it appears the fix will need to be made upstream. cc @lavalamp \n",
        "createdAt" : "2015-09-04T19:56:42Z",
        "updatedAt" : "2015-09-04T19:59:04Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      },
      {
        "id" : "8cf441c1-5a3f-4883-89d7-c2887af5a483",
        "parentId" : "01fe4c7b-13d9-4287-ad06-8a1354cc66f9",
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "oops already discussion on this. above ^^^\n",
        "createdAt" : "2015-09-04T20:05:45Z",
        "updatedAt" : "2015-09-04T20:05:45Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      },
      {
        "id" : "6d5682ed-4f0e-4797-a07e-dee0f61d501e",
        "parentId" : "01fe4c7b-13d9-4287-ad06-8a1354cc66f9",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "We should add a test to hack/test-cmd.sh that verifies that testing flags are not linked in to any of our binaries, since apparently keeping them out is one of the Hard Problems.\n",
        "createdAt" : "2015-09-04T21:14:49Z",
        "updatedAt" : "2015-09-04T21:14:49Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "f5da6b34ce45c12b6b1d59413391bb3c9d8645e5",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +32,36 @@\t\"github.com/rackspace/gophercloud/openstack\"\n\t\"github.com/rackspace/gophercloud/openstack/blockstorage/v1/volumes\"\n\t\"github.com/rackspace/gophercloud/openstack/compute/v2/extensions/volumeattach\"\n\t\"github.com/rackspace/gophercloud/openstack/compute/v2/flavors\"\n\t\"github.com/rackspace/gophercloud/openstack/compute/v2/servers\""
  },
  {
    "id" : "94009212-c793-4f7d-af9f-037bed3a7c1a",
    "prId" : 6689,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "817b4926-6251-43c7-ace4-124a6b61f1f8",
        "parentId" : null,
        "authorId" : "8e448017-7838-493d-a424-33cada0da657",
        "body" : "Is the `volumeattach.Delete(...)` call synchronous?\n\nIf so, keep in mind that `DetachDisk(...)` is called by the kubelet sync loop and any delays will block the loop.\n\nIf not, consider the case where a disk is rapidly attached/detached (dealt with that recently with the GCE PD plugin).\n",
        "createdAt" : "2015-08-20T00:28:37Z",
        "updatedAt" : "2015-08-25T22:15:22Z",
        "lastEditedBy" : "8e448017-7838-493d-a424-33cada0da657",
        "tags" : [
        ]
      },
      {
        "id" : "8a843325-cdf9-4a3e-8249-fd7a6200eddf",
        "parentId" : "817b4926-6251-43c7-ace4-124a6b61f1f8",
        "authorId" : "6a794e2e-9efa-46c8-af79-d5016fcccb21",
        "body" : "The call is synchronous, in my tests so far it has not been more than a couple of seconds. \nI could do it a separate routine with a time-out, but it I not really sure if that is required.\n",
        "createdAt" : "2015-08-20T00:43:32Z",
        "updatedAt" : "2015-08-25T22:15:22Z",
        "lastEditedBy" : "6a794e2e-9efa-46c8-af79-d5016fcccb21",
        "tags" : [
        ]
      },
      {
        "id" : "44528c10-de30-4fec-b9f7-720d22774978",
        "parentId" : "817b4926-6251-43c7-ace4-124a6b61f1f8",
        "authorId" : "8e448017-7838-493d-a424-33cada0da657",
        "body" : "We can leave it as is (maybe put a comment to indicate for future debuggers), if it becomes an issue, we can revisit it.\n",
        "createdAt" : "2015-08-20T17:30:40Z",
        "updatedAt" : "2015-08-25T22:15:22Z",
        "lastEditedBy" : "8e448017-7838-493d-a424-33cada0da657",
        "tags" : [
        ]
      },
      {
        "id" : "36d8e253-7445-47aa-8f48-10c0c76a884b",
        "parentId" : "817b4926-6251-43c7-ace4-124a6b61f1f8",
        "authorId" : "6a794e2e-9efa-46c8-af79-d5016fcccb21",
        "body" : "Sure will do...\n",
        "createdAt" : "2015-08-20T17:37:47Z",
        "updatedAt" : "2015-08-25T22:15:22Z",
        "lastEditedBy" : "6a794e2e-9efa-46c8-af79-d5016fcccb21",
        "tags" : [
        ]
      }
    ],
    "commit" : "c841a20361c86ea94acf5e5aff9f319aaa629e89",
    "line" : null,
    "diffHunk" : "@@ -1,1 +831,835 @@\t\t// This is a blocking call and effects kubelet's performance directly.\n\t\t// We should consider kicking it out into a separate routine, if it is bad.\n\t\terr = volumeattach.Delete(cClient, compute_id, disk.ID).ExtractErr()\n\t\tif err != nil {\n\t\t\tglog.Errorf(\"Failed to delete volume %s from compute %s attached %v\", disk.ID, compute_id, err)"
  },
  {
    "id" : "135d0eab-a5dc-4c98-b017-372089d488eb",
    "prId" : 6689,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "870b063e-494e-4b90-86a3-8eb1f1ee867e",
        "parentId" : null,
        "authorId" : "8e448017-7838-493d-a424-33cada0da657",
        "body" : "nit: add empty line between functions.\nnit: Add godoc comments to public methods.\n",
        "createdAt" : "2015-08-20T00:30:16Z",
        "updatedAt" : "2015-08-25T22:15:22Z",
        "lastEditedBy" : "8e448017-7838-493d-a424-33cada0da657",
        "tags" : [
        ]
      }
    ],
    "commit" : "c841a20361c86ea94acf5e5aff9f319aaa629e89",
    "line" : null,
    "diffHunk" : "@@ -1,1 +770,774 @@\n// Attaches given cinder volume to the compute running kubelet\nfunc (os *OpenStack) AttachDisk(diskName string) (string, error) {\n\tdisk, err := os.getVolume(diskName)\n\tif err != nil {"
  },
  {
    "id" : "140af2ef-35b0-4e8a-8489-a98e12580ac3",
    "prId" : 6689,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0c5ff7cb-b9b8-4908-b1f5-8b76dc339250",
        "parentId" : null,
        "authorId" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "body" : "Nit: computeID\n",
        "createdAt" : "2015-08-26T21:05:24Z",
        "updatedAt" : "2015-08-26T21:05:24Z",
        "lastEditedBy" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "tags" : [
        ]
      }
    ],
    "commit" : "c841a20361c86ea94acf5e5aff9f319aaa629e89",
    "line" : 76,
    "diffHunk" : "@@ -1,1 +823,827 @@\t\treturn err\n\t}\n\tcompute_id, err := os.getComputeIDbyHostname(cClient)\n\tif err != nil || len(compute_id) == 0 {\n\t\tglog.Errorf(\"Unable to get compute id while detaching disk\")"
  },
  {
    "id" : "9029f4b2-c066-469e-9dca-939d9a85c8cb",
    "prId" : 6689,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b58f9a3a-3bb5-4e0d-b264-b5169bffbb10",
        "parentId" : null,
        "authorId" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "body" : "This alias for the os package has tripped me up multiple times reading this file.  Just a nit, and you don't have to do it, but please consider using 'o' for the receiver parameter on `OpenStack` functions and not aliasing the `os` package.\n",
        "createdAt" : "2015-08-26T21:07:30Z",
        "updatedAt" : "2015-08-26T21:07:30Z",
        "lastEditedBy" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "tags" : [
        ]
      },
      {
        "id" : "3c449579-2e24-4bba-a5da-354c0da63415",
        "parentId" : "b58f9a3a-3bb5-4e0d-b264-b5169bffbb10",
        "authorId" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "body" : "Alternately, perhaps `cloud` or `c`\n",
        "createdAt" : "2015-08-26T21:09:56Z",
        "updatedAt" : "2015-08-26T21:09:56Z",
        "lastEditedBy" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "tags" : [
        ]
      }
    ],
    "commit" : "c841a20361c86ea94acf5e5aff9f319aaa629e89",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +23,27 @@\t\"net\"\n\t\"net/http\"\n\tossys \"os\"\n\t\"regexp\"\n\t\"strings\""
  },
  {
    "id" : "dc4ab0e4-cc85-4c0b-984a-4bd108c4bdf8",
    "prId" : 6689,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fade169b-c7be-44cb-96e9-ad1fc275b649",
        "parentId" : null,
        "authorId" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "body" : "Nit: computeID\n",
        "createdAt" : "2015-08-26T21:07:48Z",
        "updatedAt" : "2015-08-26T21:07:48Z",
        "lastEditedBy" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "tags" : [
        ]
      }
    ],
    "commit" : "c841a20361c86ea94acf5e5aff9f319aaa629e89",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +782,786 @@\t\treturn \"\", err\n\t}\n\tcompute_id, err := os.getComputeIDbyHostname(cClient)\n\tif err != nil || len(compute_id) == 0 {\n\t\tglog.Errorf(\"Unable to get minion's id by minion's hostname\")"
  },
  {
    "id" : "cd39ad6c-434d-4f4c-bbb3-0634298ce530",
    "prId" : 6689,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2bf999e1-213b-4313-89da-5152e00e9479",
        "parentId" : null,
        "authorId" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "body" : "Should this error message have the host name in it?\n",
        "createdAt" : "2015-08-26T21:08:27Z",
        "updatedAt" : "2015-08-26T21:08:27Z",
        "lastEditedBy" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "tags" : [
        ]
      }
    ],
    "commit" : "c841a20361c86ea94acf5e5aff9f319aaa629e89",
    "line" : 37,
    "diffHunk" : "@@ -1,1 +784,788 @@\tcompute_id, err := os.getComputeIDbyHostname(cClient)\n\tif err != nil || len(compute_id) == 0 {\n\t\tglog.Errorf(\"Unable to get minion's id by minion's hostname\")\n\t\treturn \"\", err\n\t}"
  },
  {
    "id" : "57774c87-be12-464e-9e03-32b18da2cf80",
    "prId" : 6689,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ba06cf8b-acc4-4afd-9f7c-657f326245a5",
        "parentId" : null,
        "authorId" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "body" : "I feel like `\"server_id\"` should be a const in this file.\n",
        "createdAt" : "2015-08-26T21:09:14Z",
        "updatedAt" : "2015-08-26T21:09:14Z",
        "lastEditedBy" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "tags" : [
        ]
      }
    ],
    "commit" : "c841a20361c86ea94acf5e5aff9f319aaa629e89",
    "line" : 81,
    "diffHunk" : "@@ -1,1 +828,832 @@\t\treturn err\n\t}\n\tif len(disk.Attachments) > 0 && disk.Attachments[0][\"server_id\"] != nil && compute_id == disk.Attachments[0][\"server_id\"] {\n\t\t// This is a blocking call and effects kubelet's performance directly.\n\t\t// We should consider kicking it out into a separate routine, if it is bad."
  },
  {
    "id" : "12850ed0-1770-49c4-aff7-6a8a57193610",
    "prId" : 6689,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2c9d424a-7e42-412a-bd8e-3a864fa8c763",
        "parentId" : null,
        "authorId" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "body" : "Seems like this should be V(3) -- @saad-ali any opinion?\n",
        "createdAt" : "2015-08-26T21:10:19Z",
        "updatedAt" : "2015-08-26T21:10:19Z",
        "lastEditedBy" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "tags" : [
        ]
      },
      {
        "id" : "472d2e8f-1910-4f5f-9bda-b989339e07cd",
        "parentId" : "2c9d424a-7e42-412a-bd8e-3a864fa8c763",
        "authorId" : "8e448017-7838-493d-a424-33cada0da657",
        "body" : "We should be consistent across plugins where possible. GCE PD is V(1) and I think successful attach and detach should be V(1). It makes it much easier to debug when we hit issues in the wild. And it doesn't happens often enough to clutter the logs. But, I don't feel strongly either way. \n",
        "createdAt" : "2015-08-26T21:48:47Z",
        "updatedAt" : "2015-08-26T21:48:47Z",
        "lastEditedBy" : "8e448017-7838-493d-a424-33cada0da657",
        "tags" : [
        ]
      }
    ],
    "commit" : "c841a20361c86ea94acf5e5aff9f319aaa629e89",
    "line" : 59,
    "diffHunk" : "@@ -1,1 +806,810 @@\t\treturn \"\", err\n\t}\n\tglog.V(2).Infof(\"Successfully attached %s volume to %s compute\", diskName, compute_id)\n\treturn disk.ID, nil\n}"
  },
  {
    "id" : "d2180ab2-0b5f-4476-9810-b85ba09f288c",
    "prId" : 6689,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "735a044f-e570-43c1-ab99-eec1c1675768",
        "parentId" : null,
        "authorId" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "body" : "Better log message please, it's not going to be clear what this refers to at all.\n",
        "createdAt" : "2015-08-26T21:10:49Z",
        "updatedAt" : "2015-08-26T21:10:49Z",
        "lastEditedBy" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "tags" : [
        ]
      }
    ],
    "commit" : "c841a20361c86ea94acf5e5aff9f319aaa629e89",
    "line" : 117,
    "diffHunk" : "@@ -1,1 +864,868 @@\t\t} else {\n\t\t\tfor _, v := range vols {\n\t\t\t\tglog.V(4).Infof(\"%s %s %v\", v.ID, v.Name, v.Attachments)\n\t\t\t\tif v.Name == diskName || strings.Contains(v.ID, diskName) {\n\t\t\t\t\tvolume = v"
  },
  {
    "id" : "907e71e3-574a-4761-9f79-d5b215c3fc21",
    "prId" : 6689,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3d544241-c72b-4c8f-9645-7bd0b37418ff",
        "parentId" : null,
        "authorId" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "body" : "`fmt.Errorf` ?\n",
        "createdAt" : "2015-08-26T21:11:17Z",
        "updatedAt" : "2015-08-26T21:11:17Z",
        "lastEditedBy" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "tags" : [
        ]
      }
    ],
    "commit" : "c841a20361c86ea94acf5e5aff9f319aaa629e89",
    "line" : 126,
    "diffHunk" : "@@ -1,1 +873,877 @@\t\t// if it reached here then no disk with the given name was found.\n\t\terrmsg := fmt.Sprintf(\"Unable to find disk: %s in region %s\", diskName, os.region)\n\t\treturn false, errors.New(errmsg)\n\t})\n\tif err != nil {"
  },
  {
    "id" : "d41410af-68b3-46e6-ab6c-029e830e66a2",
    "prId" : 6689,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d44a651c-ac5a-4695-82e4-80b885d540d4",
        "parentId" : null,
        "authorId" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "body" : "\"Unable to get OpenStack instances\" would be more helpful here.\n",
        "createdAt" : "2015-08-26T21:11:58Z",
        "updatedAt" : "2015-08-26T21:11:58Z",
        "lastEditedBy" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "tags" : [
        ]
      }
    ],
    "commit" : "c841a20361c86ea94acf5e5aff9f319aaa629e89",
    "line" : 146,
    "diffHunk" : "@@ -1,1 +893,897 @@\ti, ok := os.Instances()\n\tif !ok {\n\t\tglog.Errorf(\"Unable to get instances\")\n\t\treturn \"\", errors.New(\"Unable to get instances\")\n\t}"
  },
  {
    "id" : "99d42cac-6c7f-4c32-bc42-dea8f619fe95",
    "prId" : 6689,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "622c717a-cd9b-4e0f-9082-05011ab8fc8c",
        "parentId" : null,
        "authorId" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "body" : "Suggestion: `\"Failed to list servers for OpenStack instances %v: %v\"`\n",
        "createdAt" : "2015-08-26T21:12:48Z",
        "updatedAt" : "2015-08-26T21:12:48Z",
        "lastEditedBy" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "tags" : [
        ]
      }
    ],
    "commit" : "c841a20361c86ea94acf5e5aff9f319aaa629e89",
    "line" : 152,
    "diffHunk" : "@@ -1,1 +899,903 @@\tsrvs, err := i.List(\".\")\n\tif err != nil {\n\t\tglog.Errorf(\"Failed to list servers: %v\", err)\n\t\treturn \"\", err\n\t}"
  },
  {
    "id" : "09bbfc9b-e4b1-4694-8f04-12cc6ec5c141",
    "prId" : 6689,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4c051b72-72c0-457c-b682-665419f64f0a",
        "parentId" : null,
        "authorId" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "body" : "Nit: capitalize message in logs\n",
        "createdAt" : "2015-08-26T21:13:07Z",
        "updatedAt" : "2015-08-26T21:13:07Z",
        "lastEditedBy" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "tags" : [
        ]
      }
    ],
    "commit" : "c841a20361c86ea94acf5e5aff9f319aaa629e89",
    "line" : 168,
    "diffHunk" : "@@ -1,1 +915,919 @@\t\t} else {\n\t\t\tif (server.Metadata[\"hostname\"] != nil && server.Metadata[\"hostname\"] == hostname) || (len(server.Name) > 0 && server.Name == hostname) {\n\t\t\t\tglog.V(4).Infof(\"found server: %s with host :%s\", server.Name, hostname)\n\t\t\t\treturn server.ID, nil\n\t\t\t}"
  }
]