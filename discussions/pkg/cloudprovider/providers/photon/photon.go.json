[
  {
    "id" : "90538e83-ef2b-4578-b4a0-47fa6a19cfd3",
    "prId" : 72847,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/72847#pullrequestreview-192226659",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d23bf547-4da8-459f-a729-265d7f0bbf80",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "simplify to this?\r\n```\r\nif err != nil {\r\n  klog.Errorf(\"Photon Cloud Provider: getInstanceID failed for InstanceID. Error[%v]\", err)\r\n}\r\nreturn ID, err\r\n```",
        "createdAt" : "2019-01-14T14:50:49Z",
        "updatedAt" : "2019-01-14T16:02:08Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "5289435f-80be-4a6c-868d-8751166b293b",
        "parentId" : "d23bf547-4da8-459f-a729-265d7f0bbf80",
        "authorId" : "3eb39df2-c27a-40ed-9fab-cabae1c6353d",
        "body" : "sgtm. Done.",
        "createdAt" : "2019-01-14T16:02:57Z",
        "updatedAt" : "2019-01-14T16:02:57Z",
        "lastEditedBy" : "3eb39df2-c27a-40ed-9fab-cabae1c6353d",
        "tags" : [
        ]
      }
    ],
    "commit" : "46db6ad29430001eaa97416584988c8988f4a202",
    "line" : 59,
    "diffHunk" : "@@ -1,1 +478,482 @@\t// We assume only master need to get InstanceID of a node other than itself\n\tid, err := getInstanceID(pc, name)\n\tif err != nil {\n\t\tklog.Errorf(\"Photon Cloud Provider: getInstanceID failed for InstanceID. Error[%v]\", err)\n\t}"
  },
  {
    "id" : "addbbdf8-d189-42f0-bd5d-e313d0256c9a",
    "prId" : 36133,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/36133#pullrequestreview-7122748",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6d617b02-40ec-4198-8a74-fb91095a6b74",
        "parentId" : null,
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "Does this mean it is insecure?  Please comment on what this means (and make sure it's in the docs too)\n",
        "createdAt" : "2016-11-03T23:17:13Z",
        "updatedAt" : "2016-11-08T17:58:19Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "20b9fc6905b11b8b59656f934371c4211192ccfb",
    "line" : null,
    "diffHunk" : "@@ -1,1 +224,228 @@\n\t// Currently we support Photon Controller endpoint with authentication disabled.\n\toptions := &photon.ClientOptions{\n\t\tIgnoreCertificate: cfg.Global.IgnoreCertificate,\n\t}"
  },
  {
    "id" : "f34745a9-8645-4ff5-8f78-e5c9b3cb71ac",
    "prId" : 36133,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/36133#pullrequestreview-7122748",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cf2a1fae-4275-43e9-8863-33f903ac8553",
        "parentId" : null,
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "Use kubernetes/pkg/util/exec instead so that exec can be injected in testing.\n",
        "createdAt" : "2016-11-03T23:18:15Z",
        "updatedAt" : "2016-11-08T17:58:20Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "20b9fc6905b11b8b59656f934371c4211192ccfb",
    "line" : null,
    "diffHunk" : "@@ -1,1 +244,248 @@\n\t// Get local hostname for localInstanceID\n\tcmd := exec.Command(\"bash\", \"-c\", `echo $HOSTNAME`)\n\tout, err := cmd.CombinedOutput()\n\tif err != nil {"
  },
  {
    "id" : "bf0299e4-8cd9-46c2-a52a-d5942fa3cdf6",
    "prId" : 36133,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/36133#pullrequestreview-7122748",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b925f867-cd29-45a7-8fae-b1874d8cd243",
        "parentId" : null,
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "why not just `==`\n",
        "createdAt" : "2016-11-03T23:22:18Z",
        "updatedAt" : "2016-11-08T17:58:20Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "20b9fc6905b11b8b59656f934371c4211192ccfb",
    "line" : null,
    "diffHunk" : "@@ -1,1 +514,518 @@\n\tfor _, vm := range disk.VMs {\n\t\tif strings.Compare(vm, vmID) == 0 {\n\t\t\treturn true, nil\n\t\t}"
  }
]