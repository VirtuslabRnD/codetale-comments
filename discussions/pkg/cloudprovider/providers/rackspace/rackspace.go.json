[
  {
    "id" : "b01cfca5-2de4-4d22-a316-81c921fdb543",
    "prId" : 41785,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/41785#pullrequestreview-37014024",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "abce8e8a-b7eb-48d6-89c4-c71659608ad0",
        "parentId" : null,
        "authorId" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "body" : "`volume.ID` is logged in all other cases, is there a reason for `volume.Name`?",
        "createdAt" : "2017-05-09T11:57:04Z",
        "updatedAt" : "2017-05-24T10:59:26Z",
        "lastEditedBy" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "tags" : [
        ]
      },
      {
        "id" : "7cd4dfa4-60af-4915-ae04-5134bbc52920",
        "parentId" : "abce8e8a-b7eb-48d6-89c4-c71659608ad0",
        "authorId" : "bdc500eb-fd23-4d89-81ce-2986aa831dfa",
        "body" : "Probably not, but it was already there. This PR was just concerned with clarifying how UUIDs are used in function signatures.",
        "createdAt" : "2017-05-09T12:25:30Z",
        "updatedAt" : "2017-05-24T10:59:26Z",
        "lastEditedBy" : "bdc500eb-fd23-4d89-81ce-2986aa831dfa",
        "tags" : [
        ]
      }
    ],
    "commit" : "4bd71a3b772016e3e49f02fd1607bebae28a0524",
    "line" : 184,
    "diffHunk" : "@@ -1,1 +624,628 @@\t\tglog.V(2).Infof(\"Successfully detached volume: %s from compute: %s\", volume.ID, instanceID)\n\t} else {\n\t\terrMsg := fmt.Sprintf(\"Disk: %s has no attachments or is not attached to compute: %s\", volume.Name, instanceID)\n\t\tglog.Errorf(errMsg)\n\t\treturn errors.New(errMsg)"
  },
  {
    "id" : "dd8ac0fc-564b-461f-ae67-0435c72a555d",
    "prId" : 36095,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/36095#pullrequestreview-7286229",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "848d8edd-70d3-4b04-b088-eb674613460f",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "parse to string once, assign multiple times\n",
        "createdAt" : "2016-11-04T21:00:28Z",
        "updatedAt" : "2016-11-04T22:44:35Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "4aa59f46-5d9e-4769-b1f8-7fe9195a79e5",
        "parentId" : "848d8edd-70d3-4b04-b088-eb674613460f",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "Done. Thanks.\n",
        "createdAt" : "2016-11-04T21:16:58Z",
        "updatedAt" : "2016-11-04T22:44:35Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "783af943dbf5f57f739feb683c3ae3c2cddbc3e0",
    "line" : 3,
    "diffHunk" : "@@ -1,1 +408,412 @@\tglog.V(2).Infof(\"NodeAddresses(%v) => %v\", serverName, ip)\n\n\t// net.ParseIP().String() is to maintain compatibility with the old code\n\tparsedIP := net.ParseIP(ip).String()\n\treturn []api.NodeAddress{"
  },
  {
    "id" : "c80d394d-9526-41cd-85df-24842fc6a7a5",
    "prId" : 22023,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3182ada3-6feb-4a7d-953b-7c55db4b08d2",
        "parentId" : null,
        "authorId" : "9f3bef7b-adf1-46e5-9257-cbafa43ec222",
        "body" : "This conditional can be appended to the one above it.\n",
        "createdAt" : "2016-03-17T08:21:52Z",
        "updatedAt" : "2016-04-21T08:32:01Z",
        "lastEditedBy" : "9f3bef7b-adf1-46e5-9257-cbafa43ec222",
        "tags" : [
        ]
      }
    ],
    "commit" : "ba4d74f3c7933c94afcdad0db039655d814b49fb",
    "line" : null,
    "diffHunk" : "@@ -1,1 +496,500 @@\n\tif len(disk.Attachments) > 0 {\n\t\tif instanceID == disk.Attachments[0][\"server_id\"] {\n\t\t\tglog.V(4).Infof(\"Disk: %q is already attached to compute: %q\", diskName, instanceID)\n\t\t\treturn disk.ID, nil"
  },
  {
    "id" : "d6897fd8-c4e9-4dd9-ba4b-30d1574f39a3",
    "prId" : 22023,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3139db98-d705-4fee-b550-35db2cd61ad4",
        "parentId" : null,
        "authorId" : "9f3bef7b-adf1-46e5-9257-cbafa43ec222",
        "body" : "Similar to a comment above, you can return `client, err` and remove the return in the above `if` block.\n",
        "createdAt" : "2016-03-17T08:27:37Z",
        "updatedAt" : "2016-04-21T08:32:01Z",
        "lastEditedBy" : "9f3bef7b-adf1-46e5-9257-cbafa43ec222",
        "tags" : [
        ]
      }
    ],
    "commit" : "ba4d74f3c7933c94afcdad0db039655d814b49fb",
    "line" : null,
    "diffHunk" : "@@ -1,1 +575,579 @@\t\tglog.Errorf(\"Unable to initialize nova client for region: %s\", rs.region)\n\t}\n\treturn client, nil\n}\n"
  },
  {
    "id" : "682f5671-f9c9-4947-abdc-84d8c05f2ce0",
    "prId" : 22023,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4542f86c-db38-4cd0-a82b-222eda546e6b",
        "parentId" : null,
        "authorId" : "58cf89ce-9cc3-4dce-b99b-49ae3682cc9a",
        "body" : "This value never changes over the lifetime of the process, yet I believe this function will be called numerous times.  I suggest caching the value.\n",
        "createdAt" : "2016-03-22T06:03:22Z",
        "updatedAt" : "2016-04-21T08:32:01Z",
        "lastEditedBy" : "58cf89ce-9cc3-4dce-b99b-49ae3682cc9a",
        "tags" : [
        ]
      }
    ],
    "commit" : "ba4d74f3c7933c94afcdad0db039655d814b49fb",
    "line" : 105,
    "diffHunk" : "@@ -1,1 +157,161 @@\t}\n\n\treturn parseMetaData(file)\n}\n"
  },
  {
    "id" : "3f0729ab-4b37-401b-bcb9-78ab685dd90d",
    "prId" : 22023,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1ebb7117-8769-4b99-b904-ab01cf9161c5",
        "parentId" : null,
        "authorId" : "58cf89ce-9cc3-4dce-b99b-49ae3682cc9a",
        "body" : "Just fwiw, in the generic openstack provider plugin we use the cloud-init provided value in `/var/lib/cloud/data/instance-id` first (it's cheap to test for and also allows the user to put a value here some other way if they want to).  You might not want to bother, given that reading `/media/configdrive/openstack/latest/meta_data.json` is cheap too (much cheaper than looking up the metadata URL, which is what we do next in the generic openstack code).\n\nhttps://github.com/kubernetes/kubernetes/blob/master/pkg/cloudprovider/providers/openstack/openstack.go#L179\n",
        "createdAt" : "2016-03-22T06:10:08Z",
        "updatedAt" : "2016-04-21T08:32:01Z",
        "lastEditedBy" : "58cf89ce-9cc3-4dce-b99b-49ae3682cc9a",
        "tags" : [
        ]
      }
    ],
    "commit" : "ba4d74f3c7933c94afcdad0db039655d814b49fb",
    "line" : 100,
    "diffHunk" : "@@ -1,1 +152,156 @@\nfunc readInstanceID() (string, error) {\n\tfile, err := os.Open(metaDataPath)\n\tif err != nil {\n\t\treturn \"\", fmt.Errorf(\"Cannot open %s: %v\", metaDataPath, err)"
  },
  {
    "id" : "84f0c5bc-807f-4245-8c30-36905a388981",
    "prId" : 22023,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0ae90c16-10ae-4ea7-b36c-b867df22577e",
        "parentId" : null,
        "authorId" : "58cf89ce-9cc3-4dce-b99b-49ae3682cc9a",
        "body" : "I'd just remove this client-side check and let the later `volumeattach.Create` fail if attaching is inappropriate.  It's probably just fine on rackspace, but some of the wider openstack cinder drivers support \"multiattach\".\n",
        "createdAt" : "2016-03-22T06:16:17Z",
        "updatedAt" : "2016-04-21T08:32:01Z",
        "lastEditedBy" : "58cf89ce-9cc3-4dce-b99b-49ae3682cc9a",
        "tags" : [
        ]
      }
    ],
    "commit" : "ba4d74f3c7933c94afcdad0db039655d814b49fb",
    "line" : 220,
    "diffHunk" : "@@ -1,1 +495,499 @@\t}\n\n\tif len(disk.Attachments) > 0 {\n\t\tif instanceID == disk.Attachments[0][\"server_id\"] {\n\t\t\tglog.V(4).Infof(\"Disk: %q is already attached to compute: %q\", diskName, instanceID)"
  },
  {
    "id" : "282eb2ad-83db-4c4f-8c49-c6c00eb06e2f",
    "prId" : 22023,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "327a8663-a5f5-48d3-b104-e75a126744a2",
        "parentId" : null,
        "authorId" : "8e448017-7838-493d-a424-33cada0da657",
        "body" : "> \"some of the wider openstack cinder drivers support \"multiattach\".\n\nIf @anguslees's comment above is correct, then this code can't assume that there should only be 1 attachment and look only at `Attachments[0]`.\n",
        "createdAt" : "2016-04-14T04:11:00Z",
        "updatedAt" : "2016-04-21T08:32:01Z",
        "lastEditedBy" : "8e448017-7838-493d-a424-33cada0da657",
        "tags" : [
        ]
      },
      {
        "id" : "6679b3b7-3ae2-47b4-aa96-3bb1f08db246",
        "parentId" : "327a8663-a5f5-48d3-b104-e75a126744a2",
        "authorId" : "6cddbb4e-f796-46b5-b12a-8f5715b68fba",
        "body" : "I have objections about this: Rackspace's Public Cloud does not support \"multiattach\" (also see: https://developer.rackspace.com/docs/cloud-block-storage/v1/developer-guide/#document-general-api-info/cbsv1-methods-vs-cinderv2-methods)\n\n```\n$ export SERVER_A_ID=e6278a84-d1fe-4f65-b6e2-22cc391ae177\n$ jq -n --arg volid $VOLUME_ID '{volumeAttachment:{device:\"/dev/xvdb\", volumeId: $volid}}' | http POST $COMPUTE_ENDPOINT/servers/$SERVER_A_ID/os-volume_attachments \"X-Auth-Token: $TOKEN\"\nHTTP/1.1 200 OK\nContent-Length: 195\nContent-Type: application/json\nDate: Thu, 14 Apr 2016 14:16:53 GMT\nDate: Thu, 14 Apr 2016 14:16:54 GMT\nServer: Jetty(9.2.z-SNAPSHOT)\nVia: 1.1 Repose (Repose/7.1.3.0)\nX-Compute-Request-Id: req-9a66ba75-9ffc-4299-9476-d3bdc735185a\nx-trans-id: 852ab59d-f908-4e1e-b6f8-0492f7ba5dd9\n\n{\n    \"volumeAttachment\": {\n        \"device\": \"/dev/xvdb\", \n        \"id\": \"ae1c751d-efff-4bcc-bf16-a89493858c14\", \n        \"serverId\": \"e6278a84-d1fe-4f65-b6e2-22cc391ae177\", \n        \"volumeId\": \"ae1c751d-efff-4bcc-bf16-a89493858c14\"\n    }\n}\n```\n\n```\n$ export SERVER_B_ID=7faa4f6a-4029-44ce-b6e8-e9ef28e2b9c5\n$ jq -n --arg volid $VOLUME_ID '{volumeAttachment:{device:\"/dev/xvdb\", volumeId: $volid}}' | http POST $COMPUTE_ENDPOINT/servers/$SERVER_B_ID/os-volume_attachments \"X-Auth-Token: $TOKEN\"\nHTTP/1.1 400 Bad Request\nContent-Length: 155\nContent-Type: application/json; charset=UTF-8\nDate: Thu, 14 Apr 2016 14:20:45 GMT\nDate: Thu, 14 Apr 2016 14:20:45 GMT\nServer: Jetty(9.2.z-SNAPSHOT)\nVia: 1.1 Repose (Repose/7.1.3.0)\nX-Compute-Request-Id: req-0b464867-9c13-4f5c-86d0-e294951edf92\nx-trans-id: a6430fc0-dcef-4809-9e86-fdfe8aea41f0\n\n{\n    \"badRequest\": {\n        \"code\": 400, \n        \"message\": \"Invalid volume: volume 'ae1c751d-efff-4bcc-bf16-a89493858c14' status must be 'available'. Currently in 'in-use'\"\n    }\n}\n```\n\nFurthermore I think there is an implicit assumption by k8s that volume mounts are exclusive, AFAIK the only supported file systems for those volumes are currently ext3/4. When there's shared block-storage over nodes, you'll run into problems. I don't think this should be in the domain of k8s, this is why there are glusterfs/ceph volume plugins.\n\nIf we want to be defensive/forward-compatible about this, we could bail out with an error when a volume has > 1 attachements (still, currently the Rackspace API does not allow it).\n\nMakes sense?\n",
        "createdAt" : "2016-04-14T14:33:08Z",
        "updatedAt" : "2016-04-21T08:32:01Z",
        "lastEditedBy" : "6cddbb4e-f796-46b5-b12a-8f5715b68fba",
        "tags" : [
        ]
      },
      {
        "id" : "eeea6e47-7032-4712-8a44-50bb11086a77",
        "parentId" : "327a8663-a5f5-48d3-b104-e75a126744a2",
        "authorId" : "8e448017-7838-493d-a424-33cada0da657",
        "body" : "Agreed. It appears Rackspace does not support multiattach. So attachments should never be > 1.\n\n> If we want to be defensive/forward-compatible about this, we could bail out with an error when a volume has > 1 attachements (still, currently the Rackspace API does not allow it).\n\nI am a fan of defensive programming, meaning even if we don't expect something to happen we should handle it. So I'd love to see the attachments > 1 cases handled explicitly.\n",
        "createdAt" : "2016-04-14T20:38:03Z",
        "updatedAt" : "2016-04-21T08:32:01Z",
        "lastEditedBy" : "8e448017-7838-493d-a424-33cada0da657",
        "tags" : [
        ]
      }
    ],
    "commit" : "ba4d74f3c7933c94afcdad0db039655d814b49fb",
    "line" : null,
    "diffHunk" : "@@ -1,1 +596,600 @@\t}\n\n\tif len(disk.Attachments) > 0 && instanceID == disk.Attachments[0][\"server_id\"] {\n\t\t// This is a blocking call and effects kubelet's performance directly.\n\t\t// We should consider kicking it out into a separate routine, if it is bad."
  },
  {
    "id" : "7302a58d-10b3-411b-b99b-5f608547746c",
    "prId" : 22023,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d8804d51-5534-4190-951a-c7dce515d4ae",
        "parentId" : null,
        "authorId" : "8e448017-7838-493d-a424-33cada0da657",
        "body" : "line 482: The node (instanceID) to attach/detach to should be passed into the attach/detach methods, instead of computed on the fly. The reason being, the attach/detach logic is going to be moved off the kubelet on to a new controller run on master. This controller should be able to specify what node to attach/detach which disk.\n",
        "createdAt" : "2016-04-14T04:17:00Z",
        "updatedAt" : "2016-04-21T08:32:01Z",
        "lastEditedBy" : "8e448017-7838-493d-a424-33cada0da657",
        "tags" : [
        ]
      },
      {
        "id" : "37a78cdc-dabe-4046-a5af-de69a64e84c0",
        "parentId" : "d8804d51-5534-4190-951a-c7dce515d4ae",
        "authorId" : "6cddbb4e-f796-46b5-b12a-8f5715b68fba",
        "body" : "This makes sense, but i'd defer that into a separate PR, since it would also involve refactoring of the OpenStack provider, which shares the Cinder volume plugin (while both have different means detecting `instanceID`).\n",
        "createdAt" : "2016-04-15T12:47:33Z",
        "updatedAt" : "2016-04-21T08:32:01Z",
        "lastEditedBy" : "6cddbb4e-f796-46b5-b12a-8f5715b68fba",
        "tags" : [
        ]
      },
      {
        "id" : "973cc6f9-ed99-499d-ad59-ed1971757152",
        "parentId" : "d8804d51-5534-4190-951a-c7dce515d4ae",
        "authorId" : "8e448017-7838-493d-a424-33cada0da657",
        "body" : "That should be fine.\n",
        "createdAt" : "2016-04-15T23:34:09Z",
        "updatedAt" : "2016-04-21T08:32:01Z",
        "lastEditedBy" : "8e448017-7838-493d-a424-33cada0da657",
        "tags" : [
        ]
      },
      {
        "id" : "b0564c36-4b0a-4865-979d-b926fb191b20",
        "parentId" : "d8804d51-5534-4190-951a-c7dce515d4ae",
        "authorId" : "6cddbb4e-f796-46b5-b12a-8f5715b68fba",
        "body" : "Alright, I changed the signature of the Attach/Detach, made `InstanceID()` part of the `CinderProvider` Interface, and have the cinder plugin retrieve the instance id before calling Attach/Detach. That should reduce the effort when moving things to the master.\n",
        "createdAt" : "2016-04-17T12:08:10Z",
        "updatedAt" : "2016-04-21T08:32:01Z",
        "lastEditedBy" : "6cddbb4e-f796-46b5-b12a-8f5715b68fba",
        "tags" : [
        ]
      },
      {
        "id" : "a4e72310-50b1-4925-b1f6-bd86baee86bb",
        "parentId" : "d8804d51-5534-4190-951a-c7dce515d4ae",
        "authorId" : "8e448017-7838-493d-a424-33cada0da657",
        "body" : "Nice, thanks.\n",
        "createdAt" : "2016-04-18T21:00:44Z",
        "updatedAt" : "2016-04-21T08:32:01Z",
        "lastEditedBy" : "8e448017-7838-493d-a424-33cada0da657",
        "tags" : [
        ]
      }
    ],
    "commit" : "ba4d74f3c7933c94afcdad0db039655d814b49fb",
    "line" : 215,
    "diffHunk" : "@@ -1,1 +490,494 @@\t}\n\n\tcompute, err := rs.getComputeClient()\n\tif err != nil {\n\t\treturn \"\", err"
  }
]