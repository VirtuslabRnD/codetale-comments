[
  {
    "id" : "35e75006-f96a-44f1-a163-9f045dcaa263",
    "prId" : 73358,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/73358#pullrequestreview-196838068",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fde4995f-b40a-44ac-9859-6bf62c841e0d",
        "parentId" : null,
        "authorId" : "35af9edb-a79d-4501-a0f5-88841e1d372d",
        "body" : "Can just ignore this error `_ := ...` since the file is only opened for reading.",
        "createdAt" : "2019-01-27T17:52:04Z",
        "updatedAt" : "2019-01-27T17:57:19Z",
        "lastEditedBy" : "35af9edb-a79d-4501-a0f5-88841e1d372d",
        "tags" : [
        ]
      }
    ],
    "commit" : "37426c511a479dafa2ca772d139251d384fc9461",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +74,78 @@\t}\n\tdefer func() {\n\t\tif err := confFile.Close(); err != nil {\n\t\t\tklog.Errorf(\"failed to close config file: %v\", err)\n\t\t}"
  },
  {
    "id" : "53338ca6-4c7a-43d1-8269-7476c3437914",
    "prId" : 72731,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/72731#pullrequestreview-202639528",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bdc636c2-2eda-4ec0-9ddb-90dca3c32ce2",
        "parentId" : null,
        "authorId" : "7b403c3c-4a19-4e93-b252-11ae5c611e35",
        "body" : "I do not expect the zone to datastores mapping to change at all once configured correctly. If we compute and cache zones for every datastore in Virtual Center in a map, this method can just compute the datastores in selectedZones very quickly. Don't you agree?",
        "createdAt" : "2019-02-10T04:16:16Z",
        "updatedAt" : "2019-02-18T06:11:35Z",
        "lastEditedBy" : "7b403c3c-4a19-4e93-b252-11ae5c611e35",
        "tags" : [
        ]
      },
      {
        "id" : "52830ac0-e7c3-4ffc-b323-3dd6b52ac5fb",
        "parentId" : "bdc636c2-2eda-4ec0-9ddb-90dca3c32ce2",
        "authorId" : "ab57419c-34f1-4825-866b-5e8c80a97b98",
        "body" : "Agree. And since this being a performance improvement, hope its fine to be taken as a separate work item under this issue - https://github.com/kubernetes/kubernetes/issues/73955",
        "createdAt" : "2019-02-12T12:29:49Z",
        "updatedAt" : "2019-02-18T06:11:35Z",
        "lastEditedBy" : "ab57419c-34f1-4825-866b-5e8c80a97b98",
        "tags" : [
        ]
      }
    ],
    "commit" : "a309d8a6c1430b4d1f0108dac3cd32e08ae69d2b",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +251,255 @@}\n\nfunc getDatastoresForZone(ctx context.Context, dc *vclib.Datacenter, nodeManager *NodeManager, selectedZones []string) ([]*vclib.DatastoreInfo, error) {\n\n\tvar sharedDatastores []*vclib.DatastoreInfo"
  },
  {
    "id" : "fa1f585d-c235-416e-bfe4-296eed7ef854",
    "prId" : 72731,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/72731#pullrequestreview-205337707",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bfa07835-cc93-45b3-a6fc-4f33abcd2011",
        "parentId" : null,
        "authorId" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "body" : "What's the effect of this call (I don't see assignment) ?",
        "createdAt" : "2019-02-18T16:28:07Z",
        "updatedAt" : "2019-02-18T16:33:30Z",
        "lastEditedBy" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "tags" : [
        ]
      },
      {
        "id" : "20453e78-88e1-4044-8506-a9af8bf0f689",
        "parentId" : "bfa07835-cc93-45b3-a6fc-4f33abcd2011",
        "authorId" : "ab57419c-34f1-4825-866b-5e8c80a97b98",
        "body" : "The last parameter in the this method call is an OUT parameter which will be set and that's how hostSystemMo gets assigned. However, this method returns error which is not processed in this step. I have fixed that now in the PR mentioned above.",
        "createdAt" : "2019-02-19T17:05:33Z",
        "updatedAt" : "2019-02-19T17:05:34Z",
        "lastEditedBy" : "ab57419c-34f1-4825-866b-5e8c80a97b98",
        "tags" : [
        ]
      }
    ],
    "commit" : "a309d8a6c1430b4d1f0108dac3cd32e08ae69d2b",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +265,269 @@\t\tfor _, host := range hosts {\n\t\t\tvar hostSystemMo mo.HostSystem\n\t\t\thost.Properties(ctx, host.Reference(), []string{\"datastore\"}, &hostSystemMo)\n\n\t\t\tklog.V(4).Infof(\"Datastores mounted on host %s : %s\", host, hostSystemMo.Datastore)"
  },
  {
    "id" : "92910f31-5d8c-4e8d-a960-8b90089818da",
    "prId" : 62919,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/62919#pullrequestreview-148312140",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a6440522-0877-4d52-b0e5-81345092765e",
        "parentId" : null,
        "authorId" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "body" : "@divyenpatel @abrarshivani This change seems problematic, could we have not done this in a different way? Such as if - we can't find node using `ProviderID` then we could use `SystemUUID`? Some kubernetes distributions such as Openshift do not necessarily match kubernetes versioning schemes and hence the fix will not work for them.",
        "createdAt" : "2018-08-21T14:15:57Z",
        "updatedAt" : "2018-08-21T14:15:58Z",
        "lastEditedBy" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "tags" : [
        ]
      },
      {
        "id" : "db0600f0-3394-43e0-983c-6b597a9f4b41",
        "parentId" : "a6440522-0877-4d52-b0e5-81345092765e",
        "authorId" : "c13045f9-cfc0-48e5-80df-ee48ddaa9fdc",
        "body" : "@gnufied in that case `IsUUIDSupportedNode()` is returning error?\r\nIf that is the case, then we need to correct `func GetNodeUUID(node *v1.Node) (string, error)` function.\r\n\r\nCan you provide Openshift versioning schemes? \r\n\r\nÂ \r\n\r\n",
        "createdAt" : "2018-08-21T23:27:17Z",
        "updatedAt" : "2018-08-21T23:31:13Z",
        "lastEditedBy" : "c13045f9-cfc0-48e5-80df-ee48ddaa9fdc",
        "tags" : [
        ]
      },
      {
        "id" : "4c3bf120-8b6c-414c-bf1e-06c99c78456f",
        "parentId" : "a6440522-0877-4d52-b0e5-81345092765e",
        "authorId" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "body" : "@divyenpatel no `IsUUIDSupportedNode` will always return `true` in Kubernetes distributions which do not necessarily track kube's version naming. Basically - openshift-3.9 == kube-1.9 but after initial release openshift does not follow release pattern of kubernetes and hence openshift-3.9.40 will still report kube-1.9.0..\r\n\r\n",
        "createdAt" : "2018-08-22T02:05:49Z",
        "updatedAt" : "2018-08-22T02:05:49Z",
        "lastEditedBy" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "tags" : [
        ]
      }
    ],
    "commit" : "c15336e97aef45e05e8027a9e2858d36ce451df6",
    "line" : 37,
    "diffHunk" : "@@ -1,1 +551,555 @@\nfunc IsUUIDSupportedNode(node *v1.Node) (bool, error) {\n\tnewVersion, err := version.ParseSemantic(\"v1.9.4\")\n\tif err != nil {\n\t\tglog.Errorf(\"Failed to determine whether node %+v is old with error %v\", node, err)"
  },
  {
    "id" : "bbba766f-d7cc-4029-a553-4d99e0aa60d2",
    "prId" : 57258,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/57258#pullrequestreview-85503106",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "01cd6d54-b0e1-4935-ae68-29ae5d280946",
        "parentId" : null,
        "authorId" : "65c676d6-aec8-4761-943f-80e1f66d400b",
        "body" : "Is there a need to check `err` here? If not then consider using `_`.",
        "createdAt" : "2017-12-21T01:12:26Z",
        "updatedAt" : "2018-01-18T23:29:27Z",
        "lastEditedBy" : "65c676d6-aec8-4761-943f-80e1f66d400b",
        "tags" : [
        ]
      },
      {
        "id" : "748efa4d-3fa7-489d-956f-72e861c3f81c",
        "parentId" : "01cd6d54-b0e1-4935-ae68-29ae5d280946",
        "authorId" : "cedc873a-e14c-439d-b48f-f7b409610f16",
        "body" : "Good Catch! Added code to check error.",
        "createdAt" : "2017-12-26T02:34:15Z",
        "updatedAt" : "2018-01-18T23:29:27Z",
        "lastEditedBy" : "cedc873a-e14c-439d-b48f-f7b409610f16",
        "tags" : [
        ]
      }
    ],
    "commit" : "4683a9471f40cb716331e4b6d44f70fd9d75ea42",
    "line" : 145,
    "diffHunk" : "@@ -1,1 +492,496 @@\t}\n\n\tvmFolder, err := dc.GetFolderByPath(ctx, vs.cfg.Workspace.Folder)\n\tif err != nil {\n\t\treturn isDummyVMPresent, err"
  },
  {
    "id" : "67b83abe-4652-4ee2-9806-c861614d7392",
    "prId" : 46176,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/46176#pullrequestreview-39383674",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6eacf195-d413-43a4-b5e1-001f63352e4c",
        "parentId" : null,
        "authorId" : "c13045f9-cfc0-48e5-80df-ee48ddaa9fdc",
        "body" : "we should return err",
        "createdAt" : "2017-05-22T02:25:17Z",
        "updatedAt" : "2017-05-23T02:45:39Z",
        "lastEditedBy" : "c13045f9-cfc0-48e5-80df-ee48ddaa9fdc",
        "tags" : [
        ]
      },
      {
        "id" : "536be0ab-03bc-4505-acb8-09d7083cd43c",
        "parentId" : "6eacf195-d413-43a4-b5e1-001f63352e4c",
        "authorId" : "a52ffc16-075e-4ecb-8ec3-e5096ab48cb5",
        "body" : "No, GetNonCompatibleDatastoresMo returns datastore list if there are any, otherwise nil.  Check the return type.",
        "createdAt" : "2017-05-22T04:30:02Z",
        "updatedAt" : "2017-05-23T02:45:39Z",
        "lastEditedBy" : "a52ffc16-075e-4ecb-8ec3-e5096ab48cb5",
        "tags" : [
        ]
      }
    ],
    "commit" : "eb3cf509e5d4a637bdb139ecc337d22e05dce019",
    "line" : 123,
    "diffHunk" : "@@ -1,1 +171,175 @@\tdsMoList, err := vs.getDatastoreMo(ctx, nonCompatibleHubs)\n\tif err != nil {\n\t\treturn nil\n\t}\n\treturn dsMoList"
  },
  {
    "id" : "89e7df0d-aee9-410a-9dba-0f855632de38",
    "prId" : 46176,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/46176#pullrequestreview-39588313",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "80cef00f-28c6-4c5f-9dab-13e75e54963e",
        "parentId" : null,
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "Should this be checked after iterating through all the vms?",
        "createdAt" : "2017-05-22T21:03:55Z",
        "updatedAt" : "2017-05-23T02:45:39Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "a577548d-66ae-4620-a27e-ee075e0c74a0",
        "parentId" : "80cef00f-28c6-4c5f-9dab-13e75e54963e",
        "authorId" : "a52ffc16-075e-4ecb-8ec3-e5096ab48cb5",
        "body" : "No, if the intersect of 2 lists is 0. Then we should return immediately as further intersects would always result in 0 values.",
        "createdAt" : "2017-05-22T21:16:20Z",
        "updatedAt" : "2017-05-23T02:45:39Z",
        "lastEditedBy" : "a52ffc16-075e-4ecb-8ec3-e5096ab48cb5",
        "tags" : [
        ]
      }
    ],
    "commit" : "eb3cf509e5d4a637bdb139ecc337d22e05dce019",
    "line" : 172,
    "diffHunk" : "@@ -1,1 +220,224 @@\t\t\t} else {\n\t\t\t\tsharedDs = intersect(sharedDs, accessibleDatastores)\n\t\t\t\tif len(sharedDs) == 0 {\n\t\t\t\t\treturn nil, fmt.Errorf(\"No shared datastores found in the Kubernetes cluster\")\n\t\t\t\t}"
  },
  {
    "id" : "1283270d-bf25-4163-8401-a17b358d11b9",
    "prId" : 46176,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/46176#pullrequestreview-39588516",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a918d56d-f093-4241-8273-f8b143ca909b",
        "parentId" : null,
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "How big do you expect this list to be?  You could potentially do this is O(n) instead of O(n^2) time.",
        "createdAt" : "2017-05-22T21:07:58Z",
        "updatedAt" : "2017-05-23T02:45:39Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "fe33dbe0-0c20-4747-964e-36c61bf1993e",
        "parentId" : "a918d56d-f093-4241-8273-f8b143ca909b",
        "authorId" : "a52ffc16-075e-4ecb-8ec3-e5096ab48cb5",
        "body" : "This list is very very small. So, the existing check should be ok.",
        "createdAt" : "2017-05-22T21:17:13Z",
        "updatedAt" : "2017-05-23T02:45:39Z",
        "lastEditedBy" : "a52ffc16-075e-4ecb-8ec3-e5096ab48cb5",
        "tags" : [
        ]
      }
    ],
    "commit" : "eb3cf509e5d4a637bdb139ecc337d22e05dce019",
    "line" : 191,
    "diffHunk" : "@@ -1,1 +239,243 @@func intersect(list1 []string, list2 []string) []string {\n\tvar sharedList []string\n\tfor _, val1 := range list1 {\n\t\t// Check if val1 is found in list2\n\t\tfor _, val2 := range list2 {"
  }
]