[
  {
    "id" : "2f3e5173-7f97-4205-bbf2-71346e071141",
    "prId" : 73721,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/73721#pullrequestreview-200329625",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ee2dc756-30d2-48a9-86fd-f3fa311f1cec",
        "parentId" : null,
        "authorId" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "body" : "We should leave a link to any public docs in case we need to reference the list of OUIs in the future. ",
        "createdAt" : "2019-02-04T23:07:10Z",
        "updatedAt" : "2019-02-05T22:44:48Z",
        "lastEditedBy" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "tags" : [
        ]
      },
      {
        "id" : "76902cb9-7641-4626-96f2-ab97b43cdc4e",
        "parentId" : "ee2dc756-30d2-48a9-86fd-f3fa311f1cec",
        "authorId" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "body" : "As mentioned by @joshrosso and maybe for a future discussion, should this check be removed altogether? Seems like we removed it for the out-of-tree provider so might be worth considering removing the check here as well. ",
        "createdAt" : "2019-02-04T23:09:18Z",
        "updatedAt" : "2019-02-05T22:44:48Z",
        "lastEditedBy" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "tags" : [
        ]
      },
      {
        "id" : "818bc951-3a1c-4d9b-8d4f-db68732bbe16",
        "parentId" : "ee2dc756-30d2-48a9-86fd-f3fa311f1cec",
        "authorId" : "c25296a8-1904-4ce4-a6b8-0aba60805ca5",
        "body" : "@BaluDontu @SandeepPissay can you folks elaborate on this check? looks like it could be removed.",
        "createdAt" : "2019-02-04T23:10:38Z",
        "updatedAt" : "2019-02-05T22:44:48Z",
        "lastEditedBy" : "c25296a8-1904-4ce4-a6b8-0aba60805ca5",
        "tags" : [
        ]
      },
      {
        "id" : "632d99ff-10e9-4a54-9045-55c09f88acad",
        "parentId" : "ee2dc756-30d2-48a9-86fd-f3fa311f1cec",
        "authorId" : "22521c27-dbd5-4bc5-8894-20e996f549f3",
        "body" : "(saying more of the same ^)\r\n\r\nI'll be back-porting a patch and would highly prefer removing this validation altogether. Even with a non-conformant mac address, I feel the IPs should still propagate.\r\n\r\n",
        "createdAt" : "2019-02-05T02:27:16Z",
        "updatedAt" : "2019-02-05T22:44:48Z",
        "lastEditedBy" : "22521c27-dbd5-4bc5-8894-20e996f549f3",
        "tags" : [
        ]
      },
      {
        "id" : "002e357c-8d5e-47b4-af4c-543366d83cfb",
        "parentId" : "ee2dc756-30d2-48a9-86fd-f3fa311f1cec",
        "authorId" : "c25296a8-1904-4ce4-a6b8-0aba60805ca5",
        "body" : "resolving this based on @joshrosso comment in the main thread",
        "createdAt" : "2019-02-05T22:11:33Z",
        "updatedAt" : "2019-02-05T22:44:48Z",
        "lastEditedBy" : "c25296a8-1904-4ce4-a6b8-0aba60805ca5",
        "tags" : [
        ]
      }
    ],
    "commit" : "dbeb5f02b57de3b00b50a06fa75c1531245459ce",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +532,536 @@\nfunc getLocalIP() ([]v1.NodeAddress, error) {\n\t// hashtable with VMware-allocated OUIs for MAC filtering\n\t// List of official OUIs: http://standards-oui.ieee.org/oui.txt\n\tvmwareOUI := map[string]bool{"
  },
  {
    "id" : "326dfc53-dcc2-4614-bb40-cba19e6f8cb5",
    "prId" : 73358,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/73358#pullrequestreview-196847983",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b6f635f5-4308-499f-a352-f28848dcd646",
        "parentId" : null,
        "authorId" : "35af9edb-a79d-4501-a0f5-88841e1d372d",
        "body" : "Note that `RegisterNode` always returns nil, as does `UnRegisterNode`.  Looks like those methods could be changed to have no return value, instead of unused `error`.",
        "createdAt" : "2019-01-27T17:55:47Z",
        "updatedAt" : "2019-01-27T17:57:19Z",
        "lastEditedBy" : "35af9edb-a79d-4501-a0f5-88841e1d372d",
        "tags" : [
        ]
      },
      {
        "id" : "18df5685-6ebd-4f1c-bf64-7086554c9b59",
        "parentId" : "b6f635f5-4308-499f-a352-f28848dcd646",
        "authorId" : "29b82984-f003-46e0-b583-e6a4392093af",
        "body" : "Initially that was true, but `RegisterNode` calls `DiscoverNode` and that does return an error which has been ignored so far. I've changed that above.",
        "createdAt" : "2019-01-27T22:13:45Z",
        "updatedAt" : "2019-01-27T22:15:10Z",
        "lastEditedBy" : "29b82984-f003-46e0-b583-e6a4392093af",
        "tags" : [
        ]
      }
    ],
    "commit" : "37426c511a479dafa2ca772d139251d384fc9461",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +1289,1293 @@\n\tklog.V(4).Infof(\"Node added: %+v\", node)\n\tif err := vs.nodeManager.RegisterNode(node); err != nil {\n\t\tklog.Errorf(\"failed to add node %+v: %v\", node, err)\n\t}"
  },
  {
    "id" : "47ede6e5-f237-474e-a3f7-bc6c9434c06d",
    "prId" : 72731,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/72731#pullrequestreview-193689246",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "38b74f44-e84e-435d-b0b5-cc8741d8205b",
        "parentId" : null,
        "authorId" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "body" : "How exhaustive is our e2es to cover this? I think we ought to add some more tests unit/intgeration/e2e that exercise this code path before this change can be merged.",
        "createdAt" : "2019-01-11T16:48:36Z",
        "updatedAt" : "2019-02-18T06:11:35Z",
        "lastEditedBy" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "tags" : [
        ]
      },
      {
        "id" : "c0d470d1-ef40-4f99-8e94-50d5ad7da1f1",
        "parentId" : "38b74f44-e84e-435d-b0b5-cc8741d8205b",
        "authorId" : "ab57419c-34f1-4825-866b-5e8c80a97b98",
        "body" : "Yes. All the cases handled in the above section are code are covered under e2e tests. The PR for tests is this: https://github.com/kubernetes/kubernetes/pull/72732",
        "createdAt" : "2019-01-17T15:39:37Z",
        "updatedAt" : "2019-02-18T06:11:35Z",
        "lastEditedBy" : "ab57419c-34f1-4825-866b-5e8c80a97b98",
        "tags" : [
        ]
      }
    ],
    "commit" : "a309d8a6c1430b4d1f0108dac3cd32e08ae69d2b",
    "line" : 134,
    "diffHunk" : "@@ -1,1 +1307,1311 @@\t\t\t\tif !found {\n\t\t\t\t\tklog.Error(err)\n\t\t\t\t\treturn \"\", err\n\t\t\t\t}\n\t\t\t}"
  },
  {
    "id" : "375ff34c-aedf-4956-a789-f30604186bbd",
    "prId" : 72731,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/72731#pullrequestreview-205337263",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2918d8a3-fe4d-4072-8065-1887d9a1d3bc",
        "parentId" : null,
        "authorId" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "body" : "Shouldn't this be ahead of the if block starting at line 1260 ?",
        "createdAt" : "2019-02-18T16:23:23Z",
        "updatedAt" : "2019-02-18T16:33:30Z",
        "lastEditedBy" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "tags" : [
        ]
      },
      {
        "id" : "63a78a83-852b-461c-83bc-f7c3666c7ae5",
        "parentId" : "2918d8a3-fe4d-4072-8065-1887d9a1d3bc",
        "authorId" : "ab57419c-34f1-4825-866b-5e8c80a97b98",
        "body" : "Yes. That's correct. Thanks for pointing out. The current sequence makes this check a no-op. Fixed it. Have created a PR for this - https://github.com/kubernetes/kubernetes/pull/74263",
        "createdAt" : "2019-02-19T17:04:47Z",
        "updatedAt" : "2019-02-19T17:04:48Z",
        "lastEditedBy" : "ab57419c-34f1-4825-866b-5e8c80a97b98",
        "tags" : [
        ]
      }
    ],
    "commit" : "a309d8a6c1430b4d1f0108dac3cd32e08ae69d2b",
    "line" : 91,
    "diffHunk" : "@@ -1,1 +1264,1268 @@\t\t\t\t}\n\n\t\t\t\tif err != nil {\n\t\t\t\t\treturn \"\", err\n\t\t\t\t}"
  },
  {
    "id" : "83806a03-0a67-4fa9-b055-bc5cc6087a96",
    "prId" : 72687,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/72687#pullrequestreview-201887573",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bda7f3d7-d43e-4b38-8819-f716403f1549",
        "parentId" : null,
        "authorId" : "7b403c3c-4a19-4e93-b252-11ae5c611e35",
        "body" : "Which datastore is available in which zone/region is going to be static. Any specific reasons for computing this information for every volume on the datastore?\r\n\r\nCould you briefly explain how the region and zones is computed for a datastore?",
        "createdAt" : "2019-01-11T00:04:16Z",
        "updatedAt" : "2019-02-15T09:36:37Z",
        "lastEditedBy" : "7b403c3c-4a19-4e93-b252-11ae5c611e35",
        "tags" : [
        ]
      },
      {
        "id" : "695a4874-d874-4689-ba87-a2e6fdae5552",
        "parentId" : "bda7f3d7-d43e-4b38-8819-f716403f1549",
        "authorId" : "4cac4e76-849d-4c46-9199-70b3f1905f6c",
        "body" : "When creating a volume it is the admission controller that labels the volume with the zone information. The admission controller runs in the api-server and creates a new instance of a cloudprovider to fetch the zone information each time. So the cloudprovider cannot cache the zone information for a datastore.\r\n\r\nA datastore is said to belong a zone if it is mounted on all ESX hosts of that zone. By that definition a datastore can belong to multiple zones. To calculate the zones of a datastore we do the following:\r\n1. Compute the map of zone to all hosts in that zone. This is done across all ESX hosts in VC.\r\n2. Find all the hosts to which the given datastore is mounted.\r\n3. For each zone, if all the hosts in that zone are contained in the list of (2) - meaning the datastore is mounted on all hosts in that zone, then the zone is included.\r\n",
        "createdAt" : "2019-01-11T09:53:58Z",
        "updatedAt" : "2019-02-15T09:36:37Z",
        "lastEditedBy" : "4cac4e76-849d-4c46-9199-70b3f1905f6c",
        "tags" : [
        ]
      },
      {
        "id" : "b2259976-62aa-4816-b168-9e3ad6faf191",
        "parentId" : "bda7f3d7-d43e-4b38-8819-f716403f1549",
        "authorId" : "7b403c3c-4a19-4e93-b252-11ae5c611e35",
        "body" : "> creates a new instance of a cloudprovider to fetch the zone information each time. So the cloudprovider cannot cache the zone information for a datastore.\r\n\r\nWe can avoid recomputing the zone info per datastore by caching this in global variable(a map?) if you are getting new instance of a cloud provider every time. \r\n\r\nAnother concern I have is that the GetVolumeLabels is a heavy weight operation that does multiple remote calls to VC.  If zones feature is not used, it looks like this method is invoked irrespective of whether the zones is enabled or not. Am I right? If that is the case, could we optimize it such that if zones functionality is not enabled, then skip computing volume labels?",
        "createdAt" : "2019-02-10T03:57:38Z",
        "updatedAt" : "2019-02-15T09:36:37Z",
        "lastEditedBy" : "7b403c3c-4a19-4e93-b252-11ae5c611e35",
        "tags" : [
        ]
      }
    ],
    "commit" : "ba9a9cf7c3fc9c4c0e7c39dffc01e3f00b9c9b6a",
    "line" : 109,
    "diffHunk" : "@@ -1,1 +1464,1468 @@\n// GetVolumeLabels returns the well known zone and region labels for given volume\nfunc (vs *VSphere) GetVolumeLabels(volumePath string) (map[string]string, error) {\n\t// Create context\n\tctx, cancel := context.WithCancel(context.Background())"
  },
  {
    "id" : "54112953-74df-4a2e-be6a-16a55bbc559c",
    "prId" : 72687,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/72687#pullrequestreview-195880971",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d8afc446-115b-4211-89b4-b8569f844686",
        "parentId" : null,
        "authorId" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "body" : "Should use `GetLabelsForVolume` as per https://github.com/kubernetes/cloud-provider/blob/master/cloud.go#L232-L235. Other providers will do the same once https://github.com/kubernetes/kubernetes/pull/73102 is merged ",
        "createdAt" : "2019-01-23T19:23:33Z",
        "updatedAt" : "2019-02-15T09:36:37Z",
        "lastEditedBy" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "tags" : [
        ]
      },
      {
        "id" : "9955d0bb-247a-4fca-9ee2-5dc89c6dcfda",
        "parentId" : "d8afc446-115b-4211-89b4-b8569f844686",
        "authorId" : "4cac4e76-849d-4c46-9199-70b3f1905f6c",
        "body" : "Done.",
        "createdAt" : "2019-01-24T07:09:51Z",
        "updatedAt" : "2019-02-15T09:36:37Z",
        "lastEditedBy" : "4cac4e76-849d-4c46-9199-70b3f1905f6c",
        "tags" : [
        ]
      }
    ],
    "commit" : "ba9a9cf7c3fc9c4c0e7c39dffc01e3f00b9c9b6a",
    "line" : 109,
    "diffHunk" : "@@ -1,1 +1464,1468 @@\n// GetVolumeLabels returns the well known zone and region labels for given volume\nfunc (vs *VSphere) GetVolumeLabels(volumePath string) (map[string]string, error) {\n\t// Create context\n\tctx, cancel := context.WithCancel(context.Background())"
  },
  {
    "id" : "8e06a6bc-2908-4ae5-a3c8-4b99fb31fe64",
    "prId" : 72687,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/72687#pullrequestreview-197924447",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "826f1d02-2408-4ae3-b67f-28ff6585081e",
        "parentId" : null,
        "authorId" : "54b8eb75-28dd-421d-a52b-63bf897147a9",
        "body" : "@subramanian-neelakantan \r\nThere is a lot going on here.  I would feel better if this was unit tested.",
        "createdAt" : "2019-01-25T14:34:03Z",
        "updatedAt" : "2019-02-15T09:36:37Z",
        "lastEditedBy" : "54b8eb75-28dd-421d-a52b-63bf897147a9",
        "tags" : [
        ]
      },
      {
        "id" : "e59e81fd-b22b-4add-b616-f9fb4c436d15",
        "parentId" : "826f1d02-2408-4ae3-b67f-28ff6585081e",
        "authorId" : "4cac4e76-849d-4c46-9199-70b3f1905f6c",
        "body" : "I have added unit tests to cover this now. Can you kindly take another look?",
        "createdAt" : "2019-01-30T06:48:51Z",
        "updatedAt" : "2019-02-15T09:36:37Z",
        "lastEditedBy" : "4cac4e76-849d-4c46-9199-70b3f1905f6c",
        "tags" : [
        ]
      }
    ],
    "commit" : "ba9a9cf7c3fc9c4c0e7c39dffc01e3f00b9c9b6a",
    "line" : 210,
    "diffHunk" : "@@ -1,1 +1565,1569 @@\n// GetZoneToHosts returns a map of 'zone' -> 'list of hosts in that zone' in given VC\nfunc (vs *VSphere) GetZoneToHosts(ctx context.Context, vsi *VSphereInstance) (map[cloudprovider.Zone][]vmwaretypes.ManagedObjectReference, error) {\n\t// Approach is to find tags with the category of 'vs.cfg.Labels.Zone'\n\tzoneToHosts := make(map[cloudprovider.Zone][]vmwaretypes.ManagedObjectReference)"
  },
  {
    "id" : "5b6e7c58-c432-4ff3-9f11-ff8804010fab",
    "prId" : 72687,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/72687#pullrequestreview-204389981",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "77793d82-d81e-42b9-9cc6-2abf05cd759f",
        "parentId" : null,
        "authorId" : "7b403c3c-4a19-4e93-b252-11ae5c611e35",
        "body" : "Move this code to after zones check as this is redundant if zones is not enabled.",
        "createdAt" : "2019-02-15T18:59:33Z",
        "updatedAt" : "2019-02-15T18:59:48Z",
        "lastEditedBy" : "7b403c3c-4a19-4e93-b252-11ae5c611e35",
        "tags" : [
        ]
      }
    ],
    "commit" : "ba9a9cf7c3fc9c4c0e7c39dffc01e3f00b9c9b6a",
    "line" : 111,
    "diffHunk" : "@@ -1,1 +1466,1470 @@func (vs *VSphere) GetVolumeLabels(volumePath string) (map[string]string, error) {\n\t// Create context\n\tctx, cancel := context.WithCancel(context.Background())\n\tdefer cancel()\n"
  },
  {
    "id" : "82e551bb-d344-451a-9fe1-6935efb871f0",
    "prId" : 66795,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/66795#pullrequestreview-141732502",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "269741cd-7548-42bb-a329-40e826b6c24a",
        "parentId" : null,
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "[1]",
        "createdAt" : "2018-07-30T21:57:27Z",
        "updatedAt" : "2018-08-06T22:21:10Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      }
    ],
    "commit" : "af5084ea75ed5273a33b9512dd8b970824109333",
    "line" : 104,
    "diffHunk" : "@@ -1,1 +1375,1379 @@\t\t\tcase category.Name == vs.cfg.Labels.Zone:\n\t\t\t\tzone.FailureDomain = tag.Name\n\n\t\t\tcase category.Name == vs.cfg.Labels.Region:\n\t\t\t\tzone.Region = tag.Name"
  },
  {
    "id" : "18293dee-a75c-4419-a9b1-85b6c889c7c3",
    "prId" : 66795,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/66795#pullrequestreview-141732502",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "45823b15-93cf-4f16-a4fc-102039c43ca0",
        "parentId" : null,
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "[1]",
        "createdAt" : "2018-07-30T21:57:32Z",
        "updatedAt" : "2018-08-06T22:21:10Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      }
    ],
    "commit" : "af5084ea75ed5273a33b9512dd8b970824109333",
    "line" : 107,
    "diffHunk" : "@@ -1,1 +1378,1382 @@\t\t\tcase category.Name == vs.cfg.Labels.Region:\n\t\t\t\tzone.Region = tag.Name\n\n\t\t\tdefault:\n\t\t\t\tzone.FailureDomain = \"\""
  },
  {
    "id" : "ec31ccfc-d655-4732-8c27-967061a646ed",
    "prId" : 66795,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/66795#pullrequestreview-141732502",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9b5c8469-ee7c-4f41-871e-20bf60b4b320",
        "parentId" : null,
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "return `fmt.Errorf()` instead?\r\n",
        "createdAt" : "2018-07-30T21:58:02Z",
        "updatedAt" : "2018-08-06T22:21:10Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      }
    ],
    "commit" : "af5084ea75ed5273a33b9512dd8b970824109333",
    "line" : 131,
    "diffHunk" : "@@ -1,1 +1402,1406 @@\tif err != nil {\n\t\tglog.Errorf(\"Get zone for node %s error\", nodeName)\n\t\treturn cloudprovider.Zone{}, err\n\t}\n\treturn zone, nil"
  },
  {
    "id" : "2523981b-82d8-4063-a76e-090a90be8dc6",
    "prId" : 66795,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/66795#pullrequestreview-141732502",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1eb3fb5d-86f7-4d61-ba34-7b6942229687",
        "parentId" : null,
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "[2]",
        "createdAt" : "2018-07-30T22:00:02Z",
        "updatedAt" : "2018-08-06T22:21:10Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      }
    ],
    "commit" : "af5084ea75ed5273a33b9512dd8b970824109333",
    "line" : 64,
    "diffHunk" : "@@ -1,1 +1335,1339 @@\tif err != nil {\n\t\tglog.Errorf(\"Cannot get node name.\")\n\t\treturn cloudprovider.Zone{}, err\n\t}\n\tzone := cloudprovider.Zone{}"
  },
  {
    "id" : "ce44b7e1-0cb9-40e3-8f43-852815297ce7",
    "prId" : 66795,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/66795#pullrequestreview-141732502",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "85252a10-6c33-4dda-a128-f4f9a1a4d4a2",
        "parentId" : null,
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "[2]",
        "createdAt" : "2018-07-30T22:01:07Z",
        "updatedAt" : "2018-08-06T22:21:10Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      }
    ],
    "commit" : "af5084ea75ed5273a33b9512dd8b970824109333",
    "line" : 93,
    "diffHunk" : "@@ -1,1 +1364,1368 @@\t\t\tif err != nil {\n\t\t\t\tglog.Errorf(\"Get tag %s error\", value)\n\t\t\t\treturn err\n\t\t\t}\n\t\t\tcategory, err := client.GetCategory(ctx, tag.CategoryID)"
  },
  {
    "id" : "cb0e54a2-77ce-46a1-ba93-45d05f68bde5",
    "prId" : 66795,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/66795#pullrequestreview-141732502",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3b433deb-0935-4177-9e4d-58076691b209",
        "parentId" : null,
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "[2]",
        "createdAt" : "2018-07-30T22:01:13Z",
        "updatedAt" : "2018-08-06T22:21:10Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      }
    ],
    "commit" : "af5084ea75ed5273a33b9512dd8b970824109333",
    "line" : 98,
    "diffHunk" : "@@ -1,1 +1369,1373 @@\t\t\tif err != nil {\n\t\t\t\tglog.Errorf(\"Get category %s error\", value)\n\t\t\t\treturn err\n\t\t\t}\n\t\t\tswitch {"
  },
  {
    "id" : "24f3e4c8-98c3-4e17-8608-84f49eb716b3",
    "prId" : 66795,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/66795#pullrequestreview-143328787",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9ffbb060-4ac3-451f-b233-118ae9a9e3dd",
        "parentId" : null,
        "authorId" : "9df64fa3-0a5c-4488-b8c7-8fca4ef36432",
        "body" : "Changed to one line arguments ",
        "createdAt" : "2018-08-03T20:42:05Z",
        "updatedAt" : "2018-08-06T22:21:10Z",
        "lastEditedBy" : "9df64fa3-0a5c-4488-b8c7-8fca4ef36432",
        "tags" : [
        ]
      },
      {
        "id" : "b81e9e24-49dc-4916-a9b1-fc827e316e73",
        "parentId" : "9ffbb060-4ac3-451f-b233-118ae9a9e3dd",
        "authorId" : "9df64fa3-0a5c-4488-b8c7-8fca4ef36432",
        "body" : "And removed all not necessary blank lines, fixed problems in the above conversations. \r\n@dougm ",
        "createdAt" : "2018-08-03T20:44:17Z",
        "updatedAt" : "2018-08-06T22:21:10Z",
        "lastEditedBy" : "9df64fa3-0a5c-4488-b8c7-8fca4ef36432",
        "tags" : [
        ]
      }
    ],
    "commit" : "af5084ea75ed5273a33b9512dd8b970824109333",
    "line" : 85,
    "diffHunk" : "@@ -1,1 +1356,1360 @@\terr = withTagsClient(ctx, client, func(client *tags.RestClient) error {\n\t\ttags, err := client.ListAttachedTags(ctx, vmHost)\n\t\tif err != nil {\n\t\t\tglog.Errorf(\"Cannot list attached tags. Get zone for node %s error\", nodeName)\n\t\t\treturn err"
  },
  {
    "id" : "3b7c8bc6-1a0f-437e-831d-f267343ba6f4",
    "prId" : 65152,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/65152#pullrequestreview-129375418",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5aed45aa-f729-4f78-967b-e9c726bf2fbd",
        "parentId" : null,
        "authorId" : "cedc873a-e14c-439d-b48f-f7b409610f16",
        "body" : "I think we will need release note since the field was deprecated. ",
        "createdAt" : "2018-06-16T23:43:21Z",
        "updatedAt" : "2018-06-17T09:56:35Z",
        "lastEditedBy" : "cedc873a-e14c-439d-b48f-f7b409610f16",
        "tags" : [
        ]
      }
    ],
    "commit" : "81e25c37bebc5ab44b3a9f1d1f762e159a6c32df",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +135,139 @@\t\t// Soap round tripper count (retries = RoundTripper - 1)\n\t\tRoundTripperCount uint `gcfg:\"soap-roundtrip-count\"`\n\t\t// Is required on the controller-manager if it does not run on a VMware machine\n\t\t// VMUUID is the VM Instance UUID of virtual machine which can be retrieved from instanceUuid\n\t\t// property in VmConfigInfo, or also set as vc.uuid in VMX file."
  },
  {
    "id" : "29cafa15-70c3-45c1-b699-23e68e82d68d",
    "prId" : 55845,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/55845#pullrequestreview-77576316",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2b7da3f2-7cb5-44c7-a721-d89278be0a6c",
        "parentId" : null,
        "authorId" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "body" : "what is hostName, could you add comments?",
        "createdAt" : "2017-11-17T18:35:07Z",
        "updatedAt" : "2017-11-17T22:51:36Z",
        "lastEditedBy" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "tags" : [
        ]
      },
      {
        "id" : "7a47ce2d-f6a3-4618-b7cc-1b6b9f8da572",
        "parentId" : "2b7da3f2-7cb5-44c7-a721-d89278be0a6c",
        "authorId" : "6b5decf9-6290-41db-8baf-621f127bd536",
        "body" : "hostName is the OS hostName that vsphere cloud provider will report.",
        "createdAt" : "2017-11-17T18:36:30Z",
        "updatedAt" : "2017-11-17T22:51:36Z",
        "lastEditedBy" : "6b5decf9-6290-41db-8baf-621f127bd536",
        "tags" : [
        ]
      },
      {
        "id" : "5549eced-7c7f-46c0-a024-6ef5578cbd48",
        "parentId" : "2b7da3f2-7cb5-44c7-a721-d89278be0a6c",
        "authorId" : "6b5decf9-6290-41db-8baf-621f127bd536",
        "body" : "hostName is verbose enough name. Comment will just say something like \"hostName is OS host name\"",
        "createdAt" : "2017-11-17T18:39:11Z",
        "updatedAt" : "2017-11-17T22:51:36Z",
        "lastEditedBy" : "6b5decf9-6290-41db-8baf-621f127bd536",
        "tags" : [
        ]
      },
      {
        "id" : "a2b2eb3c-7be0-452c-8fee-4ccd59825cc9",
        "parentId" : "2b7da3f2-7cb5-44c7-a721-d89278be0a6c",
        "authorId" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "body" : "that's fine then. I just wondered why adding this new field",
        "createdAt" : "2017-11-17T21:43:15Z",
        "updatedAt" : "2017-11-17T22:51:36Z",
        "lastEditedBy" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "tags" : [
        ]
      },
      {
        "id" : "75715060-ae9e-42f6-bf73-d345a645e077",
        "parentId" : "2b7da3f2-7cb5-44c7-a721-d89278be0a6c",
        "authorId" : "6b5decf9-6290-41db-8baf-621f127bd536",
        "body" : "Earlier instanceID was used as variable name. Now hostName is used as variable name.",
        "createdAt" : "2017-11-17T22:13:24Z",
        "updatedAt" : "2017-11-17T22:51:36Z",
        "lastEditedBy" : "6b5decf9-6290-41db-8baf-621f127bd536",
        "tags" : [
        ]
      }
    ],
    "commit" : "79e1da68d2f93f8becc903f84f4da515989eaa69",
    "line" : 37,
    "diffHunk" : "@@ -1,1 +68,72 @@type VSphere struct {\n\tcfg      *VSphereConfig\n\thostName string\n\t// Maps the VSphere IP address to VSphereInstance\n\tvsphereInstanceMap map[string]*VSphereInstance"
  },
  {
    "id" : "d5b39268-2f8e-4cbb-a582-35e2e8b2a84d",
    "prId" : 55845,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/55845#pullrequestreview-77524076",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0c5ce01b-696f-4509-8c5f-66e5f89d2953",
        "parentId" : null,
        "authorId" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "body" : "would it cause any backward compatibility issue? ",
        "createdAt" : "2017-11-17T18:37:12Z",
        "updatedAt" : "2017-11-17T22:51:36Z",
        "lastEditedBy" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "tags" : [
        ]
      },
      {
        "id" : "fd4e02e4-7238-48ad-b0d9-81eb7ed1706e",
        "parentId" : "0c5ce01b-696f-4509-8c5f-66e5f89d2953",
        "authorId" : "6b5decf9-6290-41db-8baf-621f127bd536",
        "body" : "Nop. If user specifies VirtualCenter here, it will be honored.\r\nWe have tested vSphere cloud provider with old config file format.",
        "createdAt" : "2017-11-17T18:38:18Z",
        "updatedAt" : "2017-11-17T22:51:36Z",
        "lastEditedBy" : "6b5decf9-6290-41db-8baf-621f127bd536",
        "tags" : [
        ]
      }
    ],
    "commit" : "79e1da68d2f93f8becc903f84f4da515989eaa69",
    "line" : 77,
    "diffHunk" : "@@ -1,1 +104,108 @@\t\t// vCenter password in clear text.\n\t\tPassword string `gcfg:\"password\"`\n\t\t// Deprecated. Use VirtualCenter to specify multiple vCenter Servers.\n\t\t// vCenter IP.\n\t\tVCenterIP string `gcfg:\"server\"`"
  },
  {
    "id" : "008531d4-5801-469f-a99e-986c1c7ba6b5",
    "prId" : 55845,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/55845#pullrequestreview-77868522",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f9a6cf05-9538-4137-b99c-5c10e1ec4a20",
        "parentId" : null,
        "authorId" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "body" : "do you have some estimate how much overhead caused by DisksAreAttached? Does it increase with the number of nodes, or disks?",
        "createdAt" : "2017-11-20T07:54:44Z",
        "updatedAt" : "2017-11-20T07:54:45Z",
        "lastEditedBy" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "tags" : [
        ]
      },
      {
        "id" : "251e1153-bc59-4137-9f67-0f64cb0766ba",
        "parentId" : "f9a6cf05-9538-4137-b99c-5c10e1ec4a20",
        "authorId" : "6b5decf9-6290-41db-8baf-621f127bd536",
        "body" : "Hi Jing,\r\n\r\nNew logic should be the same if not faster.\r\nAccording to new logic (NodeManager), VCP now caches VM ManagedObjects in the NodeManager cache. If for some reason VM Managed Objects is not valid anymore (VM migrated to another Datacenters /  vCenter)  only then finder will be used; else cached VM managed object will be used. VM migration doesn't happen frequently. It is a rare case.\r\n\r\nEarlier (1.8.x code base) everytime finder was used. Time taken by finder was linearly increasing with more number VMs in the vCenter.\r\n\r\n\r\nThus, bottom line is, unless VM migrates to another vSphere entity (ESXi cluster, Datacenter, vCeneter) new logic is faster than old logic. In rare cases when VM migrates, time taken is comparable to old logic.\r\n\r\n",
        "createdAt" : "2017-11-20T17:54:24Z",
        "updatedAt" : "2017-11-20T19:54:03Z",
        "lastEditedBy" : "6b5decf9-6290-41db-8baf-621f127bd536",
        "tags" : [
        ]
      }
    ],
    "commit" : "79e1da68d2f93f8becc903f84f4da515989eaa69",
    "line" : 834,
    "diffHunk" : "@@ -1,1 +871,875 @@func (vs *VSphere) DisksAreAttached(nodeVolumes map[k8stypes.NodeName][]string) (map[k8stypes.NodeName]map[string]bool, error) {\n\tdisksAreAttachedInternal := func(nodeVolumes map[k8stypes.NodeName][]string) (map[k8stypes.NodeName]map[string]bool, error) {\n\n\t\t// disksAreAttach checks whether disks are attached to the nodes.\n\t\t// Returns nodes that need to be retried if retry is true"
  },
  {
    "id" : "023ff379-ad3d-4973-ae80-e9630534f9b6",
    "prId" : 55845,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/55845#pullrequestreview-77959656",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "75cda772-93ad-4d43-8980-4dca9713f355",
        "parentId" : null,
        "authorId" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "body" : "do you need retry here and retry in DisksAreAttached? ",
        "createdAt" : "2017-11-20T23:01:21Z",
        "updatedAt" : "2017-11-20T23:01:21Z",
        "lastEditedBy" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "tags" : [
        ]
      },
      {
        "id" : "f78b857e-aee8-42f6-9f7e-3f7f4060c011",
        "parentId" : "75cda772-93ad-4d43-8980-4dca9713f355",
        "authorId" : "6b5decf9-6290-41db-8baf-621f127bd536",
        "body" : "Yes. What if VM migrates after InstanceID was called?\r\nVCP needs to try and discover anytime any VM object access returns \"ManagedObjectNotFound\".\r\n",
        "createdAt" : "2017-11-20T23:40:12Z",
        "updatedAt" : "2017-11-20T23:40:12Z",
        "lastEditedBy" : "6b5decf9-6290-41db-8baf-621f127bd536",
        "tags" : [
        ]
      }
    ],
    "commit" : "79e1da68d2f93f8becc903f84f4da515989eaa69",
    "line" : 615,
    "diffHunk" : "@@ -1,1 +640,644 @@\tinstanceID, err := instanceIDInternal()\n\tif err != nil {\n\t\tisManagedObjectNotFoundError, err := vs.retry(nodeName, err)\n\t\tif isManagedObjectNotFoundError {\n\t\t\tif err == nil {"
  },
  {
    "id" : "f49bcd5d-19d6-4715-8ccc-6c74b3771b76",
    "prId" : 54802,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/54802#pullrequestreview-73790607",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0972f7d0-3dc7-4078-adc4-8d357cd399e7",
        "parentId" : null,
        "authorId" : "c45d7214-ac4b-46eb-9b49-46c42c75b8b4",
        "body" : "I prefer to use a new variable name here to prevent any confusion.",
        "createdAt" : "2017-11-02T13:42:06Z",
        "updatedAt" : "2017-11-02T13:42:06Z",
        "lastEditedBy" : "c45d7214-ac4b-46eb-9b49-46c42c75b8b4",
        "tags" : [
        ]
      }
    ],
    "commit" : "e081d5ba21e2ed308457d86cb666e836779a1690",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +594,598 @@\t\tfor nodeName, volPaths := range nodeVolumes {\n\t\t\tfor i, volPath := range volPaths {\n\t\t\t\tvolPath = vclib.RemoveClusterFromVDiskPath(volPath)\n\t\t\t\t// Get the canonical volume path for volPath.\n\t\t\t\tcanonicalVolumePath, err := getcanonicalVolumePath(ctx, dc, volPath)"
  },
  {
    "id" : "bd908b52-faac-4305-976b-60a482f241e1",
    "prId" : 52131,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/52131#pullrequestreview-62841132",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f7ebe00f-77d3-414a-8863-95726f9a4fa3",
        "parentId" : null,
        "authorId" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "body" : "We just have to be careful and make sure we handle cases of paginating the results if single query can't return all the results. \r\n\r\nOn AWS at least, I noticed we had to paginate the bulkverify request for correctly fetching the results.",
        "createdAt" : "2017-09-08T21:05:04Z",
        "updatedAt" : "2017-09-18T19:00:37Z",
        "lastEditedBy" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "tags" : [
        ]
      },
      {
        "id" : "01faafa7-0874-4a67-800e-c66064209eb7",
        "parentId" : "f7ebe00f-77d3-414a-8863-95726f9a4fa3",
        "authorId" : "a52ffc16-075e-4ecb-8ec3-e5096ab48cb5",
        "body" : "In case of vSphere, we will be able to retrieve all the results in one call. ",
        "createdAt" : "2017-09-14T18:16:48Z",
        "updatedAt" : "2017-09-18T19:00:37Z",
        "lastEditedBy" : "a52ffc16-075e-4ecb-8ec3-e5096ab48cb5",
        "tags" : [
        ]
      }
    ],
    "commit" : "2ea619902da914e10211c1747de6fa7ea7856b42",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +572,576 @@\n// DisksAreAttached returns if disks are attached to the VM using controllers supported by the plugin.\nfunc (vs *VSphere) DisksAreAttached(nodeVolumes map[k8stypes.NodeName][]string) (map[k8stypes.NodeName]map[string]bool, error) {\n\tdisksAreAttachedInternal := func(nodeVolumes map[k8stypes.NodeName][]string) (map[k8stypes.NodeName]map[string]bool, error) {\n\t\tattached := make(map[k8stypes.NodeName]map[string]bool)"
  },
  {
    "id" : "c6682e97-3108-4bd9-8587-75fedb1ba300",
    "prId" : 52131,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/52131#pullrequestreview-62903849",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "596864c2-cb1c-48d0-8682-573c6d75d412",
        "parentId" : null,
        "authorId" : "c13045f9-cfc0-48e5-80df-ee48ddaa9fdc",
        "body" : "@BaluDontu \r\nWe are now returning canonicalVolumePath from this function. We have some E2E test cases (https://github.com/kubernetes/kubernetes/blob/master/test/e2e/storage/vsphere_volume_placement.go), which is using this function and building PV spec from the returned path. Have you verified that the tests are passing with this change?",
        "createdAt" : "2017-09-12T17:41:33Z",
        "updatedAt" : "2017-09-18T19:00:37Z",
        "lastEditedBy" : "c13045f9-cfc0-48e5-80df-ee48ddaa9fdc",
        "tags" : [
        ]
      },
      {
        "id" : "1ee815c0-da46-4919-a128-6a6445197dfe",
        "parentId" : "596864c2-cb1c-48d0-8682-573c6d75d412",
        "authorId" : "a52ffc16-075e-4ecb-8ec3-e5096ab48cb5",
        "body" : "Yes @divyenpatel . I have verified it and all the tests pass.",
        "createdAt" : "2017-09-14T22:22:47Z",
        "updatedAt" : "2017-09-18T19:00:37Z",
        "lastEditedBy" : "a52ffc16-075e-4ecb-8ec3-e5096ab48cb5",
        "tags" : [
        ]
      }
    ],
    "commit" : "2ea619902da914e10211c1747de6fa7ea7856b42",
    "line" : 164,
    "diffHunk" : "@@ -1,1 +716,720 @@\tvclib.RecordCreateVolumeMetric(volumeOptions, requestTime, err)\n\tglog.V(1).Infof(\"The canonical volume path for the newly created vSphere volume is %q\", canonicalVolumePath)\n\treturn canonicalVolumePath, err\n}\n"
  },
  {
    "id" : "4bc1ba23-0662-46fe-8495-a6c8bda3a2a4",
    "prId" : 48829,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/48829#pullrequestreview-49595538",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0c9fdf4e-c80e-45ca-ae59-90b1141ec23b",
        "parentId" : null,
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "you need to return an nil error as well: `return vs.NodeAddresses(vmNameToNodeName(vmName)), nil`",
        "createdAt" : "2017-07-12T19:30:33Z",
        "updatedAt" : "2017-07-12T19:31:02Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      },
      {
        "id" : "2bbf76f5-3dc8-43b6-8b3b-2d62e83a3beb",
        "parentId" : "0c9fdf4e-c80e-45ca-ae59-90b1141ec23b",
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "ah, well, ignore that comment. Didn't look correctly at the `.NodeAddresses()` function before commenting.\r\nLGTM",
        "createdAt" : "2017-07-12T19:32:08Z",
        "updatedAt" : "2017-07-12T19:32:19Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      }
    ],
    "commit" : "d327ac6c76371a10a650eca4afb80653284b7e13",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +582,586 @@func (vs *VSphere) NodeAddressesByProviderID(providerID string) ([]v1.NodeAddress, error) {\n\tvmName := path.Base(providerID)\n\treturn vs.NodeAddresses(vmNameToNodeName(vmName))\n}\n"
  },
  {
    "id" : "aea65370-e91b-4714-8aa6-af97fd5cc46d",
    "prId" : 45569,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/45569#pullrequestreview-37374086",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c7e7cf97-6e34-48a4-b9cf-b26ce9785af9",
        "parentId" : null,
        "authorId" : "5d1f7040-18ac-4dc2-aadb-f39c5601803e",
        "body" : "Do we have similar concern when checkDiskAttached is called inside \"DiskIsAttached\" function?\r\nSeems if err is not nil, it will always return false. And according to [the detach function here](https://github.com/kubernetes/kubernetes/blob/19795ea7c3d55f9eac453c212c74c537e4710902/pkg/volume/vsphere_volume/attacher.go#L240), even error is not nil, it will continue and mark this volume as already detached, which is also the same problem as resolved by this fix.",
        "createdAt" : "2017-05-10T00:58:48Z",
        "updatedAt" : "2017-05-10T17:18:54Z",
        "lastEditedBy" : "5d1f7040-18ac-4dc2-aadb-f39c5601803e",
        "tags" : [
        ]
      },
      {
        "id" : "308612b8-9119-4773-ae63-0efd96abe4e2",
        "parentId" : "c7e7cf97-6e34-48a4-b9cf-b26ce9785af9",
        "authorId" : "c13045f9-cfc0-48e5-80df-ee48ddaa9fdc",
        "body" : "For DiskIsAttached, we are returning error, so should be ok. \r\nhttps://github.com/kubernetes/kubernetes/blob/master/pkg/cloudprovider/providers/vsphere/vsphere.go#L1000\r\n\r\n\r\nBut in AttachDisk I missed to handle error. Added error check.\r\n\r\nhttps://github.com/kubernetes/kubernetes/blob/master/pkg/cloudprovider/providers/vsphere/vsphere.go#L769\r\n\r\nAlso Verified attacher.go -> Detach() is properly handling returned err. When DiskIsAttached is retuning error with false, we log the error and retry detach operation. If retry fails, we return error. \r\nOnly when error is nil and returned value is true Kubernetes mark the detach as successful.\r\n\r\nhttps://github.com/kubernetes/kubernetes/blob/master/pkg/volume/vsphere_volume/attacher.go#L229\r\n",
        "createdAt" : "2017-05-10T17:19:59Z",
        "updatedAt" : "2017-05-10T17:19:59Z",
        "lastEditedBy" : "c13045f9-cfc0-48e5-80df-ee48ddaa9fdc",
        "tags" : [
        ]
      },
      {
        "id" : "b789698a-dedf-4efa-aaf7-97937029b1f0",
        "parentId" : "c7e7cf97-6e34-48a4-b9cf-b26ce9785af9",
        "authorId" : "5d1f7040-18ac-4dc2-aadb-f39c5601803e",
        "body" : "Cool! I missed the err == nil check in Detach().\r\nLooks good to me now :)",
        "createdAt" : "2017-05-10T17:30:19Z",
        "updatedAt" : "2017-05-10T17:30:19Z",
        "lastEditedBy" : "5d1f7040-18ac-4dc2-aadb-f39c5601803e",
        "tags" : [
        ]
      }
    ],
    "commit" : "9f89b57b74ae43fc72f7a8b3403799a3d7ff9f55",
    "line" : 58,
    "diffHunk" : "@@ -1,1 +1050,1054 @@\tattached := make(map[string]bool)\n\tfor _, volPath := range volPaths {\n\t\tresult, err := checkDiskAttached(volPath, vmDevices, dc, vs.client)\n\t\tif err == nil {\n\t\t\tif result {"
  },
  {
    "id" : "bff7c0d3-fc15-439a-9acb-a7dde936ed06",
    "prId" : 44124,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/44124#pullrequestreview-32005796",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4df403fc-6f95-4053-a533-bd383695816c",
        "parentId" : null,
        "authorId" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "body" : "this dependency on exact error message is quite fragile. Is it the only way? Can you get a specific `Error` type from `vs.createVirtualDiskWithPolicy`?",
        "createdAt" : "2017-04-06T07:47:56Z",
        "updatedAt" : "2017-04-26T20:33:26Z",
        "lastEditedBy" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "tags" : [
        ]
      },
      {
        "id" : "71e1b426-86a1-47bc-bf5e-4f0ea51d8ac5",
        "parentId" : "4df403fc-6f95-4053-a533-bd383695816c",
        "authorId" : "a52ffc16-075e-4ecb-8ec3-e5096ab48cb5",
        "body" : "Right now we have to rely on this error message only.",
        "createdAt" : "2017-04-11T03:15:33Z",
        "updatedAt" : "2017-04-26T20:33:26Z",
        "lastEditedBy" : "a52ffc16-075e-4ecb-8ec3-e5096ab48cb5",
        "tags" : [
        ]
      }
    ],
    "commit" : "6228765b431db48d44bee9829e762c7bad9ecaf1",
    "line" : 135,
    "diffHunk" : "@@ -1,1 +1296,1300 @@\t\tif err != nil {\n\t\t\tvmDiskPath = filepath.Clean(ds.Path(VolDir)) + \"/\" + volumeOptions.Name + \".vmdk\"\n\t\t\terrorMessage := fmt.Sprintf(\"Cannot complete the operation because the file or folder %s already exists\", vmDiskPath)\n\t\t\tif errorMessage == err.Error() {\n\t\t\t\t//Skip error and continue to detach the disk as the disk was already created on the datastore."
  },
  {
    "id" : "f54360f1-5cb2-49d8-ae4e-feab46c7da1e",
    "prId" : 44124,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/44124#pullrequestreview-33898847",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4a01e789-b572-4a2b-8e01-6be18653d247",
        "parentId" : null,
        "authorId" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "body" : "I may be too paranoid, but what prevents `cleanUpDummyVMs()` to delete a dummy VM at this point, i.e. `createDummyVM` finished but `createVirtualDiskWithPolicy` did not start yet or is somewhere in the middle?",
        "createdAt" : "2017-04-12T09:54:46Z",
        "updatedAt" : "2017-04-26T20:33:26Z",
        "lastEditedBy" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "tags" : [
        ]
      },
      {
        "id" : "24d8335d-a88c-401c-91d0-7cc41d73467f",
        "parentId" : "4a01e789-b572-4a2b-8e01-6be18653d247",
        "authorId" : "a52ffc16-075e-4ecb-8ec3-e5096ab48cb5",
        "body" : "In this case the PVC creation would fail, and PVC controller would retry it the next time and it would succeed.",
        "createdAt" : "2017-04-12T22:47:44Z",
        "updatedAt" : "2017-04-26T20:33:26Z",
        "lastEditedBy" : "a52ffc16-075e-4ecb-8ec3-e5096ab48cb5",
        "tags" : [
        ]
      },
      {
        "id" : "366b19c1-51b5-447a-8483-eadd7e79a738",
        "parentId" : "4a01e789-b572-4a2b-8e01-6be18653d247",
        "authorId" : "adff302a-1aaa-4bbc-8346-84be7e533116",
        "body" : ">In this case the PVC creation would fail\r\n\r\nThat's bad. You need some synchronization between garbage collector (cleanupDummyVMs) and PV provisioning code. cleanupDummyVMs should wait for  in-flight operations to finish and Provisioning code should wait if Cleanup is already in process. This is must fix, IMO.",
        "createdAt" : "2017-04-13T00:26:32Z",
        "updatedAt" : "2017-04-26T20:33:26Z",
        "lastEditedBy" : "adff302a-1aaa-4bbc-8346-84be7e533116",
        "tags" : [
        ]
      },
      {
        "id" : "0c58c9e7-ec8b-41fa-aff7-7ba0d0a390b5",
        "parentId" : "4a01e789-b572-4a2b-8e01-6be18653d247",
        "authorId" : "a52ffc16-075e-4ecb-8ec3-e5096ab48cb5",
        "body" : "Used a read write lock to over come this situation. cleanupDummyVMs routine will wait if there any incoming PVC requests and will execute only if there are none of PVC requests. \r\nThe PVC requests wait if cleanupDummyVMs routine is being executed. ",
        "createdAt" : "2017-04-20T22:10:58Z",
        "updatedAt" : "2017-04-26T20:33:26Z",
        "lastEditedBy" : "a52ffc16-075e-4ecb-8ec3-e5096ab48cb5",
        "tags" : [
        ]
      }
    ],
    "commit" : "6228765b431db48d44bee9829e762c7bad9ecaf1",
    "line" : 129,
    "diffHunk" : "@@ -1,1 +1292,1296 @@\n\t\t// 2. Reconfigure the VM to attach the disk with the VSAN policy configured.\n\t\tvmDiskPath, err := vs.createVirtualDiskWithPolicy(ctx, dc, ds, dummyVM, volumeOptions)\n\t\tfileAlreadyExist := false\n\t\tif err != nil {"
  },
  {
    "id" : "2d6bb0b4-ddaa-4bee-8154-6d375afb8ccd",
    "prId" : 44124,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/44124#pullrequestreview-34954839",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "47d21ff0-8a6a-4bd0-9bca-1ad14f5512c2",
        "parentId" : null,
        "authorId" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "body" : "Can you add `defer cleanUpDummyVMLock.RUnlock()` here so you don't need to care about `Unlock` in all the error paths below? \r\n",
        "createdAt" : "2017-04-26T10:19:32Z",
        "updatedAt" : "2017-04-26T20:33:26Z",
        "lastEditedBy" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "tags" : [
        ]
      },
      {
        "id" : "08660eb4-6ffc-44bf-b8d3-c419b72c23f1",
        "parentId" : "47d21ff0-8a6a-4bd0-9bca-1ad14f5512c2",
        "authorId" : "a52ffc16-075e-4ecb-8ec3-e5096ab48cb5",
        "body" : "Fixed it.",
        "createdAt" : "2017-04-26T20:33:39Z",
        "updatedAt" : "2017-04-26T20:33:39Z",
        "lastEditedBy" : "a52ffc16-075e-4ecb-8ec3-e5096ab48cb5",
        "tags" : [
        ]
      }
    ],
    "commit" : "6228765b431db48d44bee9829e762c7bad9ecaf1",
    "line" : 100,
    "diffHunk" : "@@ -1,1 +1266,1270 @@\n\t\t// Acquire a read lock to ensure multiple PVC requests can be processed simultaneously.\n\t\tcleanUpDummyVMLock.RLock()\n\t\tdefer cleanUpDummyVMLock.RUnlock()\n"
  },
  {
    "id" : "c296af5f-6fec-4869-8d97-28a392042e30",
    "prId" : 42974,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/42974#pullrequestreview-28801009",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "92ea2aee-d16f-44c6-a832-57ebd2c09f68",
        "parentId" : null,
        "authorId" : "e34ad8b0-d0aa-44f2-b180-dce0e1449f6d",
        "body" : "Is a race condition possible if 2 volumes are being created for the same VM name? Should the name by dynamically generated?",
        "createdAt" : "2017-03-22T23:04:34Z",
        "updatedAt" : "2017-03-27T19:43:17Z",
        "lastEditedBy" : "e34ad8b0-d0aa-44f2-b180-dce0e1449f6d",
        "tags" : [
        ]
      },
      {
        "id" : "e7c222f7-1ad6-4b9e-bfa0-4a85f27156ca",
        "parentId" : "92ea2aee-d16f-44c6-a832-57ebd2c09f68",
        "authorId" : "a52ffc16-075e-4ecb-8ec3-e5096ab48cb5",
        "body" : "We are keeping this Dummy VM around for all the create disk operations. \r\nIf 2 requests for createDisk come at same time, the VC would serialize these operations.",
        "createdAt" : "2017-03-23T01:14:23Z",
        "updatedAt" : "2017-03-27T19:43:18Z",
        "lastEditedBy" : "a52ffc16-075e-4ecb-8ec3-e5096ab48cb5",
        "tags" : [
        ]
      },
      {
        "id" : "cc333e0d-0e63-44c1-a08c-2e96d0b73b99",
        "parentId" : "92ea2aee-d16f-44c6-a832-57ebd2c09f68",
        "authorId" : "e34ad8b0-d0aa-44f2-b180-dce0e1449f6d",
        "body" : "Does the second create disk succeed or fail since create vm fails?",
        "createdAt" : "2017-03-23T08:23:37Z",
        "updatedAt" : "2017-03-27T19:43:18Z",
        "lastEditedBy" : "e34ad8b0-d0aa-44f2-b180-dce0e1449f6d",
        "tags" : [
        ]
      },
      {
        "id" : "07ce0e06-d4c1-4c16-bf02-41fb4a03038b",
        "parentId" : "92ea2aee-d16f-44c6-a832-57ebd2c09f68",
        "authorId" : "a52ffc16-075e-4ecb-8ec3-e5096ab48cb5",
        "body" : "First time when VM create fails it will return back and kubernetes would try again that it when it finds existing dummyVM and will create a disk successfully.",
        "createdAt" : "2017-03-23T21:34:28Z",
        "updatedAt" : "2017-03-27T19:43:18Z",
        "lastEditedBy" : "a52ffc16-075e-4ecb-8ec3-e5096ab48cb5",
        "tags" : [
        ]
      },
      {
        "id" : "a78bf3db-f5ee-4e14-a2e1-cc49943397f7",
        "parentId" : "92ea2aee-d16f-44c6-a832-57ebd2c09f68",
        "authorId" : "e34ad8b0-d0aa-44f2-b180-dce0e1449f6d",
        "body" : "Ok. I guess since the VM is not deleted this is true only for the first and second volume creation race.",
        "createdAt" : "2017-03-23T23:20:02Z",
        "updatedAt" : "2017-03-27T19:43:18Z",
        "lastEditedBy" : "e34ad8b0-d0aa-44f2-b180-dce0e1449f6d",
        "tags" : [
        ]
      }
    ],
    "commit" : "dbe94833ebb78bccb34b062ffac88828585ab764",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +67,71 @@\tVolDir                    = \"kubevols\"\n\tRoundTripperDefaultCount  = 3\n\tDummyVMName               = \"kubernetes-helper-vm\"\n\tVSANDatastoreType         = \"vsan\"\n)"
  },
  {
    "id" : "1b3a01c1-b97c-4e5f-9551-50da3f479ac9",
    "prId" : 42974,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/42974#pullrequestreview-28550293",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c0f466bb-61a7-4023-97b0-912b37c659a9",
        "parentId" : null,
        "authorId" : "e34ad8b0-d0aa-44f2-b180-dce0e1449f6d",
        "body" : "Move the code into it's own private function will keep attach disk function readable.",
        "createdAt" : "2017-03-22T23:09:16Z",
        "updatedAt" : "2017-03-27T19:43:17Z",
        "lastEditedBy" : "e34ad8b0-d0aa-44f2-b180-dce0e1449f6d",
        "tags" : [
        ]
      },
      {
        "id" : "0338ee16-5d4b-4ed1-9269-ed6054a146e0",
        "parentId" : "c0f466bb-61a7-4023-97b0-912b37c659a9",
        "authorId" : "a52ffc16-075e-4ecb-8ec3-e5096ab48cb5",
        "body" : "I just wanted to keep it there as it would easy to read all the steps if storageProfileData is not null. \r\nThe code seems to be minimum as well.",
        "createdAt" : "2017-03-23T01:15:10Z",
        "updatedAt" : "2017-03-27T19:43:18Z",
        "lastEditedBy" : "a52ffc16-075e-4ecb-8ec3-e5096ab48cb5",
        "tags" : [
        ]
      }
    ],
    "commit" : "dbe94833ebb78bccb34b062ffac88828585ab764",
    "line" : 131,
    "diffHunk" : "@@ -1,1 +1230,1234 @@\t// 3. Detach the new disk from the dummy VM.\n\tif volumeOptions.StorageProfileData != \"\" {\n\t\t// Check if the datastore is VSAN if any capability requirements are specified.\n\t\t// VSphere cloud provider now only supports VSAN capabilities requirements\n\t\tok, err := checkIfDatastoreTypeIsVSAN(vs.client, ds)"
  },
  {
    "id" : "02e3a05d-cb19-4abd-976d-3d923278977e",
    "prId" : 42974,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/42974#pullrequestreview-28999679",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9bc091e7-67bd-408c-9b54-99c65dd73b44",
        "parentId" : null,
        "authorId" : "e34ad8b0-d0aa-44f2-b180-dce0e1449f6d",
        "body" : "Check the serialization logic within the controller manager. It might be possible to have 2 requests try to create the same VM. Using a new VM name that is specific for a POD might work around the serialization problem or we might have to check on error to see if VM is created.",
        "createdAt" : "2017-03-22T23:11:21Z",
        "updatedAt" : "2017-03-27T19:43:17Z",
        "lastEditedBy" : "e34ad8b0-d0aa-44f2-b180-dce0e1449f6d",
        "tags" : [
        ]
      },
      {
        "id" : "054d717c-95e6-4baf-9484-ced240659a3a",
        "parentId" : "9bc091e7-67bd-408c-9b54-99c65dd73b44",
        "authorId" : "a52ffc16-075e-4ecb-8ec3-e5096ab48cb5",
        "body" : "If 2 requests come to create the same VM at exactly same time, the 1st operations would succeed and 2nd would fail. If 2nd fails, kubernetes attempts to try again and it would eventually find the already created VM and would create a volume on that disk.\r\n\r\nAll PVC creations are retried by kubernetes. It assumes as if these are recoverable errors.",
        "createdAt" : "2017-03-23T01:17:06Z",
        "updatedAt" : "2017-03-27T19:43:18Z",
        "lastEditedBy" : "a52ffc16-075e-4ecb-8ec3-e5096ab48cb5",
        "tags" : [
        ]
      },
      {
        "id" : "edace166-ef10-4247-b8b6-bbcf1b2e1953",
        "parentId" : "9bc091e7-67bd-408c-9b54-99c65dd73b44",
        "authorId" : "a52ffc16-075e-4ecb-8ec3-e5096ab48cb5",
        "body" : "This is clarified to you after our discussion and hence not needed anymore.",
        "createdAt" : "2017-03-24T20:10:41Z",
        "updatedAt" : "2017-03-27T19:43:18Z",
        "lastEditedBy" : "a52ffc16-075e-4ecb-8ec3-e5096ab48cb5",
        "tags" : [
        ]
      }
    ],
    "commit" : "dbe94833ebb78bccb34b062ffac88828585ab764",
    "line" : 149,
    "diffHunk" : "@@ -1,1 +1246,1250 @@\t\t// The kubernetes cluster folder - vs.cfg.Global.WorkingDir is where all the nodes in the kubernetes cluster are created.\n\t\tvmRegex := vs.cfg.Global.WorkingDir + DummyVMName\n\t\tdummyVM, err := f.VirtualMachine(ctx, vmRegex)\n\t\tif err != nil {\n\t\t\t// 1. Create dummy VM and return the VM reference."
  },
  {
    "id" : "387565d2-9dcc-4c18-9f49-17625ee97628",
    "prId" : 42974,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/42974#pullrequestreview-28802812",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bd82dc86-7543-4a0b-867f-725fcea75f11",
        "parentId" : null,
        "authorId" : "e34ad8b0-d0aa-44f2-b180-dce0e1449f6d",
        "body" : "NIT: not a blocker but would be nice to reason about the whole find a scsi controller to attach a disk. It is there twice here would be nice to have a clean function where the disk itself is passed in and the rest of the SCSI device manipulation is common.",
        "createdAt" : "2017-03-23T23:32:57Z",
        "updatedAt" : "2017-03-27T19:43:18Z",
        "lastEditedBy" : "e34ad8b0-d0aa-44f2-b180-dce0e1449f6d",
        "tags" : [
        ]
      }
    ],
    "commit" : "dbe94833ebb78bccb34b062ffac88828585ab764",
    "line" : 275,
    "diffHunk" : "@@ -1,1 +1420,1424 @@\tvar diskControllerType = vs.cfg.Disk.SCSIControllerType\n\t// find SCSI controller of particular type from VM devices\n\tscsiControllersOfRequiredType := getSCSIControllersOfType(vmDevices, diskControllerType)\n\tscsiController := getAvailableSCSIController(scsiControllersOfRequiredType)\n\tvar newSCSIController types.BaseVirtualDevice"
  },
  {
    "id" : "f3fff8cb-ae6b-476e-8ad9-ae51b7bc4999",
    "prId" : 42974,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/42974#pullrequestreview-29290448",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "20ec24e0-6b09-49f9-89a9-a9d0f64b6ffd",
        "parentId" : null,
        "authorId" : "5d1f7040-18ac-4dc2-aadb-f39c5601803e",
        "body" : "Better to just glog.Errorf([THE NEW ERROR MESSAGE\") and then return \"\", err\r\nLike how it's handled at: https://github.com/kubernetes/kubernetes/pull/42974/files#diff-7c3b2ad0beb4382e2278c779808949b5R1251",
        "createdAt" : "2017-03-23T23:49:39Z",
        "updatedAt" : "2017-03-27T19:43:18Z",
        "lastEditedBy" : "5d1f7040-18ac-4dc2-aadb-f39c5601803e",
        "tags" : [
        ]
      },
      {
        "id" : "5df76214-a644-4003-898e-87fa03a1612f",
        "parentId" : "20ec24e0-6b09-49f9-89a9-a9d0f64b6ffd",
        "authorId" : "a52ffc16-075e-4ecb-8ec3-e5096ab48cb5",
        "body" : "Rather than giving an error which is unknown to user, I felt is better to show something reasonable to the user.",
        "createdAt" : "2017-03-24T23:28:54Z",
        "updatedAt" : "2017-03-27T19:43:18Z",
        "lastEditedBy" : "a52ffc16-075e-4ecb-8ec3-e5096ab48cb5",
        "tags" : [
        ]
      },
      {
        "id" : "94b50e67-c8c4-4177-a623-bc84653dfefd",
        "parentId" : "20ec24e0-6b09-49f9-89a9-a9d0f64b6ffd",
        "authorId" : "5d1f7040-18ac-4dc2-aadb-f39c5601803e",
        "body" : "That's why you need to log it. This is a general error return logics in kubernetes. But this is not a block for this PR. I am fine with this one but next time it might be better to be consistent with k8s error return logic.",
        "createdAt" : "2017-03-27T20:18:14Z",
        "updatedAt" : "2017-03-27T20:18:14Z",
        "lastEditedBy" : "5d1f7040-18ac-4dc2-aadb-f39c5601803e",
        "tags" : [
        ]
      }
    ],
    "commit" : "dbe94833ebb78bccb34b062ffac88828585ab764",
    "line" : 193,
    "diffHunk" : "@@ -1,1 +1274,1278 @@\t\tdestVolPath, err = createVirtualDisk(ctx, vs.client, dc, ds, volumeOptions)\n\t\tif err != nil {\n\t\t\treturn \"\", fmt.Errorf(\"Failed to create the virtual disk having name: %+q with err: %+v\", destVolPath, err)\n\t\t}\n\t}"
  },
  {
    "id" : "fa586bfc-921f-4c68-b28f-10ec18776ca3",
    "prId" : 42422,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/42422#pullrequestreview-24823890",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c7cba8fc-9d28-4e5f-ab70-69c0c1377165",
        "parentId" : null,
        "authorId" : "c13045f9-cfc0-48e5-80df-ee48ddaa9fdc",
        "body" : "L:757-762 ->  not needed.",
        "createdAt" : "2017-03-02T18:12:32Z",
        "updatedAt" : "2017-03-02T20:20:19Z",
        "lastEditedBy" : "c13045f9-cfc0-48e5-80df-ee48ddaa9fdc",
        "tags" : [
        ]
      },
      {
        "id" : "93f9500a-eb8d-4c47-be4e-d6c9a04a2f0e",
        "parentId" : "c7cba8fc-9d28-4e5f-ab70-69c0c1377165",
        "authorId" : "e34ad8b0-d0aa-44f2-b180-dce0e1449f6d",
        "body" : "It is needed vmDevices get written over in line 751 and needs to be reset to all devices.",
        "createdAt" : "2017-03-02T19:37:40Z",
        "updatedAt" : "2017-03-02T20:20:19Z",
        "lastEditedBy" : "e34ad8b0-d0aa-44f2-b180-dce0e1449f6d",
        "tags" : [
        ]
      }
    ],
    "commit" : "383a42a4b4f3f3a74fd3664707693ac806790ead",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +763,767 @@\n\t\t// Get VM device list\n\t\t_, vmDevices, _, err := getVirtualMachineDevices(ctx, vs.cfg, vs.client, vSphereInstance)\n\t\tif err != nil {\n\t\t\tglog.Errorf(\"cannot get vmDevices for VM err=%s\", err)"
  },
  {
    "id" : "c5e12f52-e4c7-469f-ba6c-8ba99cd7169c",
    "prId" : 41113,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/41113#pullrequestreview-22626941",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a25b2517-2610-4101-9bfa-275e445a5ac8",
        "parentId" : null,
        "authorId" : "c13045f9-cfc0-48e5-80df-ee48ddaa9fdc",
        "body" : "For named return, go allows to use just return.  This will return the assigned return values or their defaults.",
        "createdAt" : "2017-02-13T17:35:28Z",
        "updatedAt" : "2017-02-21T19:04:48Z",
        "lastEditedBy" : "c13045f9-cfc0-48e5-80df-ee48ddaa9fdc",
        "tags" : [
        ]
      },
      {
        "id" : "9687ec2b-cc8a-4f61-a38e-3579a3fcc758",
        "parentId" : "a25b2517-2610-4101-9bfa-275e445a5ac8",
        "authorId" : "a52ffc16-075e-4ecb-8ec3-e5096ab48cb5",
        "body" : "Not needed for now.",
        "createdAt" : "2017-02-18T02:13:22Z",
        "updatedAt" : "2017-02-21T19:04:48Z",
        "lastEditedBy" : "a52ffc16-075e-4ecb-8ec3-e5096ab48cb5",
        "tags" : [
        ]
      }
    ],
    "commit" : "12f75f0b86063bc0e66545b7fd38493bf8aa275c",
    "line" : 43,
    "diffHunk" : "@@ -1,1 +661,665 @@\tvmDevices, err := vm.Device(ctx)\n\tif err != nil {\n\t\treturn nil, nil, nil, err\n\t}\n\treturn vm, vmDevices, dc, nil"
  },
  {
    "id" : "d15aab07-c8d0-4dc0-be6e-ef487cdbf288",
    "prId" : 40892,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/40892#pullrequestreview-20203073",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c8532dc7-0548-460e-ad5a-b3415acb40ed",
        "parentId" : null,
        "authorId" : "e34ad8b0-d0aa-44f2-b180-dce0e1449f6d",
        "body" : "This path can be made configurable and defaulted to this value. This way any distro specific concerns can be addressed by an optional item in the config passed in.",
        "createdAt" : "2017-02-06T06:47:37Z",
        "updatedAt" : "2017-02-10T06:55:53Z",
        "lastEditedBy" : "e34ad8b0-d0aa-44f2-b180-dce0e1449f6d",
        "tags" : [
        ]
      }
    ],
    "commit" : "53a009302abed06b53ff9cee4be54cd04b762bab",
    "line" : 44,
    "diffHunk" : "@@ -1,1 +217,221 @@\t} else {\n\t\t// This needs root privileges on the host, and will fail otherwise.\n\t\tvmUUIDbytes, err := ioutil.ReadFile(\"/sys/devices/virtual/dmi/id/product_uuid\")\n\t\tif err != nil {\n\t\t\treturn \"\", err"
  },
  {
    "id" : "3d0e274f-1992-43ab-92e2-e1ee64a42a64",
    "prId" : 39750,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/39750#pullrequestreview-16228652",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "be52fa52-f8d1-4fae-9673-1e1735b1f2e0",
        "parentId" : null,
        "authorId" : "7a0b62d8-3c8d-4616-b9ec-08686f12dfa9",
        "body" : "should not it be `if u == nil  {return nil}` ?",
        "createdAt" : "2017-01-11T20:18:32Z",
        "updatedAt" : "2017-01-11T20:18:32Z",
        "lastEditedBy" : "7a0b62d8-3c8d-4616-b9ec-08686f12dfa9",
        "tags" : [
        ]
      },
      {
        "id" : "9c0568b1-81f9-4e47-958d-ea8d73bdf448",
        "parentId" : "be52fa52-f8d1-4fae-9673-1e1735b1f2e0",
        "authorId" : "e34ad8b0-d0aa-44f2-b180-dce0e1449f6d",
        "body" : "You can refer to the original PR for relevant discussion as well as looking at the API usage.\r\nWe should clean up this code but that should not be part of a cherry pick.",
        "createdAt" : "2017-01-11T20:30:56Z",
        "updatedAt" : "2017-01-11T20:30:56Z",
        "lastEditedBy" : "e34ad8b0-d0aa-44f2-b180-dce0e1449f6d",
        "tags" : [
        ]
      }
    ],
    "commit" : "fc1d0bb167e77970185571b1526452ca5e998825",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +366,370 @@\t}\n\tif u != nil {\n\t\treturn nil\n\t}\n"
  },
  {
    "id" : "9166eb13-7643-4050-93c1-f31c018f5c2f",
    "prId" : 34892,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/34892#pullrequestreview-4745487",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a9713947-f840-4843-b310-8f4bf46f3d22",
        "parentId" : null,
        "authorId" : "cedc873a-e14c-439d-b48f-f7b409610f16",
        "body" : "log error here\n",
        "createdAt" : "2016-10-18T19:43:55Z",
        "updatedAt" : "2016-10-20T00:04:33Z",
        "lastEditedBy" : "cedc873a-e14c-439d-b48f-f7b409610f16",
        "tags" : [
        ]
      }
    ],
    "commit" : "4805e6e6f6a1a2162748ad0a07cdead8c20dd226",
    "line" : null,
    "diffHunk" : "@@ -1,1 +1103,1107 @@\tif err != nil {\n\t\tglog.Errorf(\"Failed to login into vCenter - %v\", err)\n\t\treturn err\n\t}\n"
  },
  {
    "id" : "b82468c9-9d68-4d1b-8cfb-ed96b96fa4d0",
    "prId" : 34892,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/34892#pullrequestreview-4745487",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8ba931ee-26c5-41e4-b633-f34fccdcaabc",
        "parentId" : null,
        "authorId" : "cedc873a-e14c-439d-b48f-f7b409610f16",
        "body" : "log error here\n",
        "createdAt" : "2016-10-18T19:44:56Z",
        "updatedAt" : "2016-10-20T00:04:33Z",
        "lastEditedBy" : "cedc873a-e14c-439d-b48f-f7b409610f16",
        "tags" : [
        ]
      }
    ],
    "commit" : "4805e6e6f6a1a2162748ad0a07cdead8c20dd226",
    "line" : null,
    "diffHunk" : "@@ -1,1 +1243,1247 @@\tif err != nil {\n\t\tglog.Errorf(\"Failed to login into vCenter - %v\", err)\n\t\treturn err\n\t}\n"
  },
  {
    "id" : "46830b9d-af57-40b1-a572-fd79d5764fdc",
    "prId" : 30935,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8704f539-67c0-4d88-8d62-705b680caf0a",
        "parentId" : null,
        "authorId" : "793eaa44-5d1e-4294-a276-c53ab31b5911",
        "body" : "We may want to glog the errors in this block.  The errors may typically be meaningless since we don't always expect the vm to be in a cluster, but its possible for a more meaningful error to occur here.\n",
        "createdAt" : "2016-08-18T22:27:42Z",
        "updatedAt" : "2016-08-25T22:37:50Z",
        "lastEditedBy" : "793eaa44-5d1e-4294-a276-c53ab31b5911",
        "tags" : [
        ]
      },
      {
        "id" : "a92bc17c-7a9f-48cd-bd90-a01d2a4af108",
        "parentId" : "8704f539-67c0-4d88-8d62-705b680caf0a",
        "authorId" : "0325c728-9fe5-4c50-af65-f20ede9019ee",
        "body" : "Done.\n",
        "createdAt" : "2016-08-25T22:21:43Z",
        "updatedAt" : "2016-08-25T22:37:50Z",
        "lastEditedBy" : "0325c728-9fe5-4c50-af65-f20ede9019ee",
        "tags" : [
        ]
      }
    ],
    "commit" : "808f18439d9231cfd1ef06575ae41670ead4ca2d",
    "line" : 79,
    "diffHunk" : "@@ -1,1 +192,196 @@\t\t// Extract the Cluster Name if VM belongs to a ResourcePool\n\t\tvar rp mo.ResourcePool\n\t\terr = s.Properties(ctx, *vm.ResourcePool, []string{\"parent\"}, &rp)\n\t\tif err == nil {\n\t\t\tvar ccr mo.ClusterComputeResource"
  },
  {
    "id" : "2a8daed8-51e7-4b4f-ace9-f34cf38a52be",
    "prId" : 30535,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ea568b74-84bf-4a0f-aceb-0a59f8e2eae3",
        "parentId" : null,
        "authorId" : "adff302a-1aaa-4bbc-8346-84be7e533116",
        "body" : "Please add function header comment\n",
        "createdAt" : "2016-08-12T19:58:09Z",
        "updatedAt" : "2016-08-19T07:29:19Z",
        "lastEditedBy" : "adff302a-1aaa-4bbc-8346-84be7e533116",
        "tags" : [
        ]
      }
    ],
    "commit" : "e89ad04422fad2aa43ab0b2fe730877c81d53e11",
    "line" : null,
    "diffHunk" : "@@ -1,1 +799,803 @@\n// DiskIsAttached returns if disk is attached to the VM using controllers supported by the plugin.\nfunc (vs *VSphere) DiskIsAttached(volPath string, nodeName string) (bool, error) {\n\tctx, cancel := context.WithCancel(context.Background())\n\tdefer cancel()"
  },
  {
    "id" : "78bf89ac-09a5-4c68-82ae-ea3c2c3d8f09",
    "prId" : 30535,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1fbbd057-e5c2-4fb9-b569-9f860a222e05",
        "parentId" : null,
        "authorId" : "adff302a-1aaa-4bbc-8346-84be7e533116",
        "body" : "Log error?\n",
        "createdAt" : "2016-08-12T19:59:54Z",
        "updatedAt" : "2016-08-19T07:29:19Z",
        "lastEditedBy" : "adff302a-1aaa-4bbc-8346-84be7e533116",
        "tags" : [
        ]
      }
    ],
    "commit" : "e89ad04422fad2aa43ab0b2fe730877c81d53e11",
    "line" : null,
    "diffHunk" : "@@ -1,1 +838,842 @@\tif err != nil {\n\t\tglog.Errorf(\"Failed to get VM devices for VM %#q. err: %s\", vSphereInstance, err)\n\t\treturn false, err\n\t}\n"
  },
  {
    "id" : "eb5898e4-b7e7-48cb-b991-bb2f804195ae",
    "prId" : 30535,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9b2ad57d-9fae-4835-97f8-dd99467c4536",
        "parentId" : null,
        "authorId" : "8e448017-7838-493d-a424-33cada0da657",
        "body" : "Please modify `DetachDisk()` so that it does _not_ fail if the specified `nodeName` does not exist. e.g. PR https://github.com/kubernetes/kubernetes/pull/29485\n",
        "createdAt" : "2016-08-18T04:17:50Z",
        "updatedAt" : "2016-08-19T07:29:19Z",
        "lastEditedBy" : "8e448017-7838-493d-a424-33cada0da657",
        "tags" : [
        ]
      },
      {
        "id" : "165a05c3-9a08-4f81-a0c1-3e3ec8208c96",
        "parentId" : "9b2ad57d-9fae-4835-97f8-dd99467c4536",
        "authorId" : "cedc873a-e14c-439d-b48f-f7b409610f16",
        "body" : "Thanks for mentioning about this. I have made changes to methods DetachDisk() and DiskIsAttached() so it doesn't fail if node doesn't exist.\n",
        "createdAt" : "2016-08-19T03:17:14Z",
        "updatedAt" : "2016-08-19T07:29:19Z",
        "lastEditedBy" : "cedc873a-e14c-439d-b48f-f7b409610f16",
        "tags" : [
        ]
      }
    ],
    "commit" : "e89ad04422fad2aa43ab0b2fe730877c81d53e11",
    "line" : null,
    "diffHunk" : "@@ -1,1 +114,118 @@\t// is used when nodeName is empty string.\n\t// Assumption: If node doesn't exist, disk is already detached from node.\n\tDetachDisk(volPath string, nodeName string) error\n\n\t// DiskIsAttached checks if a disk is attached to the given node."
  },
  {
    "id" : "cb2f8102-698d-4f63-aa10-1afcbd6a61a6",
    "prId" : 30535,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ed76e772-40d4-4545-ba8b-2c39b7649f5f",
        "parentId" : null,
        "authorId" : "8e448017-7838-493d-a424-33cada0da657",
        "body" : "ditto: Please modify `DiskIsAttached()` so that it does _not_ fail if the specified `nodeName` does not exist. e.g. PR https://github.com/kubernetes/kubernetes/pull/29485\n",
        "createdAt" : "2016-08-18T04:18:42Z",
        "updatedAt" : "2016-08-19T07:29:19Z",
        "lastEditedBy" : "8e448017-7838-493d-a424-33cada0da657",
        "tags" : [
        ]
      }
    ],
    "commit" : "e89ad04422fad2aa43ab0b2fe730877c81d53e11",
    "line" : null,
    "diffHunk" : "@@ -1,1 +118,122 @@\t// DiskIsAttached checks if a disk is attached to the given node.\n\t// Assumption: If node doesn't exist, disk is not attached to the node.\n\tDiskIsAttached(volPath, nodeName string) (bool, error)\n\n\t// CreateVolume creates a new vmdk with specified parameters."
  },
  {
    "id" : "9f24deaf-53b8-4273-8e3b-bd2c374f6bf7",
    "prId" : 30535,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5e742983-4ad6-4b41-963c-d6b3e7d52020",
        "parentId" : null,
        "authorId" : "87633202-0ae3-4a2c-8d60-a7c3854b3b8e",
        "body" : "log error here\n",
        "createdAt" : "2016-08-18T15:51:28Z",
        "updatedAt" : "2016-08-19T07:29:19Z",
        "lastEditedBy" : "87633202-0ae3-4a2c-8d60-a7c3854b3b8e",
        "tags" : [
        ]
      }
    ],
    "commit" : "e89ad04422fad2aa43ab0b2fe730877c81d53e11",
    "line" : null,
    "diffHunk" : "@@ -1,1 +852,856 @@\t\t}\n\t\tglog.Errorf(\"Failed to check whether disk is attached. err: %s\", err)\n\t\treturn false, err\n\t}\n\tfor _, controllerType := range supportedSCSIControllerType {"
  },
  {
    "id" : "aff91d1a-9ba7-4c08-9b39-b044aa85c230",
    "prId" : 30535,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f3d01176-dedc-47b0-a676-f4d0678b8a0d",
        "parentId" : null,
        "authorId" : "87633202-0ae3-4a2c-8d60-a7c3854b3b8e",
        "body" : "nit:  add a comment in each non-exported function describing the purpose of helper function\n",
        "createdAt" : "2016-08-18T15:53:38Z",
        "updatedAt" : "2016-08-19T07:29:19Z",
        "lastEditedBy" : "87633202-0ae3-4a2c-8d60-a7c3854b3b8e",
        "tags" : [
        ]
      }
    ],
    "commit" : "e89ad04422fad2aa43ab0b2fe730877c81d53e11",
    "line" : null,
    "diffHunk" : "@@ -1,1 +866,870 @@// Returns the object key that denotes the controller object to which vmdk is attached.\nfunc getVirtualDiskControllerKey(volPath string, vmDevices object.VirtualDeviceList, dc *object.Datacenter, client *govmomi.Client) (int32, error) {\n\tvolumeUUID, err := getVirtualDiskUUIDByPath(volPath, dc, client)\n\n\tif err != nil {"
  },
  {
    "id" : "f2283c22-770e-4052-a99a-37e6633ef541",
    "prId" : 30535,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d7a3622d-8f63-4a73-b4d9-01ad7e55c720",
        "parentId" : null,
        "authorId" : "87633202-0ae3-4a2c-8d60-a7c3854b3b8e",
        "body" : "log error\n",
        "createdAt" : "2016-08-18T16:12:44Z",
        "updatedAt" : "2016-08-19T07:29:19Z",
        "lastEditedBy" : "87633202-0ae3-4a2c-8d60-a7c3854b3b8e",
        "tags" : [
        ]
      }
    ],
    "commit" : "e89ad04422fad2aa43ab0b2fe730877c81d53e11",
    "line" : null,
    "diffHunk" : "@@ -1,1 +807,811 @@\tif err != nil {\n\t\tglog.Errorf(\"Failed to create vSphere client. err: %s\", err)\n\t\treturn false, err\n\t}\n\tdefer c.Logout(ctx)"
  },
  {
    "id" : "4b302385-1637-4d38-8bf7-fa42893f8afe",
    "prId" : 29172,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b3bab6a8-3584-43fb-a776-8df9ecc260c0",
        "parentId" : null,
        "authorId" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "body" : "Godoc?  In general I think it's a good idea for this type of method, which deals with things that are not obvious to someone who knows the kube code but not the vsphere API, to get godoc so that people doing refactors understand the significance of the method.\n",
        "createdAt" : "2016-07-27T17:04:41Z",
        "updatedAt" : "2016-08-03T23:39:35Z",
        "lastEditedBy" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "tags" : [
        ]
      }
    ],
    "commit" : "87e7535e94f203ff462e3c0e96a16e22c0879c74",
    "line" : null,
    "diffHunk" : "@@ -1,1 +818,822 @@\n// Returns a device id which is internal vSphere API identifier for the attached virtual disk.\nfunc getVirtualDiskID(volPath string, vmDevices object.VirtualDeviceList, dc *object.Datacenter, client *govmomi.Client) (string, error) {\n\tvolumeUUID, err := getVirtualDiskUUIDByPath(volPath, dc, client)\n"
  },
  {
    "id" : "b963da26-d291-4035-97c3-02a09fc8a9a3",
    "prId" : 27496,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "afc4222f-ba5b-4716-83cc-41e775226187",
        "parentId" : null,
        "authorId" : "a7f673a6-4b23-4df6-aa10-f123fa9dcd5f",
        "body" : "I'd love to see a vSphere doc why other scsi controllers don't support hot plug. \n",
        "createdAt" : "2016-06-16T18:56:09Z",
        "updatedAt" : "2016-06-20T16:56:18Z",
        "lastEditedBy" : "a7f673a6-4b23-4df6-aa10-f123fa9dcd5f",
        "tags" : [
        ]
      },
      {
        "id" : "de54be50-0040-49d2-a1aa-0bc455915fab",
        "parentId" : "afc4222f-ba5b-4716-83cc-41e775226187",
        "authorId" : "69937de3-2ddb-47e1-a5a3-f89875ba29d4",
        "body" : "the problem is when you detach the device from the controller(of type lsilogic) the removal from the /dev path is not happening as expected. thats the reason why I added the driver type filter.\n",
        "createdAt" : "2016-06-16T20:27:27Z",
        "updatedAt" : "2016-06-20T16:56:18Z",
        "lastEditedBy" : "69937de3-2ddb-47e1-a5a3-f89875ba29d4",
        "tags" : [
        ]
      },
      {
        "id" : "8ea5cdfc-ab79-49dc-85d7-142b0b5e0544",
        "parentId" : "afc4222f-ba5b-4716-83cc-41e775226187",
        "authorId" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "body" : "The information about how to mitigate this error should be returned to the user.  Users typically have very poor visibility into logs.\n",
        "createdAt" : "2016-06-17T19:09:54Z",
        "updatedAt" : "2016-06-20T16:56:18Z",
        "lastEditedBy" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "tags" : [
        ]
      },
      {
        "id" : "9a3020ac-4b8c-46ef-8039-8d61834eb799",
        "parentId" : "afc4222f-ba5b-4716-83cc-41e775226187",
        "authorId" : "69937de3-2ddb-47e1-a5a3-f89875ba29d4",
        "body" : "added it to the returned error. \n",
        "createdAt" : "2016-06-17T19:23:57Z",
        "updatedAt" : "2016-06-20T16:56:18Z",
        "lastEditedBy" : "69937de3-2ddb-47e1-a5a3-f89875ba29d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "4a5ade213c0e24a41b6d8f5e8bd05b6f3b12c745",
    "line" : 40,
    "diffHunk" : "@@ -1,1 +157,161 @@\t\tcfg.Disk.SCSIControllerType = DefaultSCSIControllerType\n\t} else if !checkControllerSupported(cfg.Disk.SCSIControllerType) {\n\t\tglog.Errorf(\"%v is not a supported SCSI Controller type. Please configure 'lsilogic-sas' OR 'pvscsi'\", cfg.Disk.SCSIControllerType)\n\t\treturn nil, errors.New(\"Controller type not supported. Please configure 'lsilogic-sas' OR 'pvscsi'\")\n\t}"
  },
  {
    "id" : "4b751733-a20b-46c0-8861-b704feb33378",
    "prId" : 27496,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "52aefd81-b100-4529-bbb6-2d83a0ecc071",
        "parentId" : null,
        "authorId" : "a7f673a6-4b23-4df6-aa10-f123fa9dcd5f",
        "body" : "why not calling `FindDiskController`?\n",
        "createdAt" : "2016-06-16T18:59:40Z",
        "updatedAt" : "2016-06-20T16:56:18Z",
        "lastEditedBy" : "a7f673a6-4b23-4df6-aa10-f123fa9dcd5f",
        "tags" : [
        ]
      },
      {
        "id" : "49c821f3-554b-4cb0-825d-527ce9f6a6a1",
        "parentId" : "52aefd81-b100-4529-bbb6-2d83a0ecc071",
        "authorId" : "69937de3-2ddb-47e1-a5a3-f89875ba29d4",
        "body" : "FindDiskController can only find based on the controller( either scsi or ide). there is no govmomi api call to get scsi based on its driver type. so I have to add getSCSIController() to filter VM devices based on the particular scsi driver type.\n",
        "createdAt" : "2016-06-16T20:31:36Z",
        "updatedAt" : "2016-06-20T16:56:18Z",
        "lastEditedBy" : "69937de3-2ddb-47e1-a5a3-f89875ba29d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "4a5ade213c0e24a41b6d8f5e8bd05b6f3b12c745",
    "line" : 78,
    "diffHunk" : "@@ -1,1 +537,541 @@\tvar diskControllerType = vs.cfg.Disk.SCSIControllerType\n\t// find SCSI controller of particular type from VM devices\n\tvar diskController = getSCSIController(vmDevices, diskControllerType)\n\n\tvar newSCSICreated = false"
  },
  {
    "id" : "8918b8bf-1071-445c-9b9e-10d6eed19ebc",
    "prId" : 27496,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5bf86fe1-1f06-4738-b02a-8b3c6808b28b",
        "parentId" : null,
        "authorId" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "body" : "The context for the error (`Cannot create new SCSI controller`) needs to be returned in the error.\n",
        "createdAt" : "2016-06-17T19:12:11Z",
        "updatedAt" : "2016-06-20T16:56:18Z",
        "lastEditedBy" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "tags" : [
        ]
      },
      {
        "id" : "2e4c50a7-936c-4425-9e0f-e8efb662d7c5",
        "parentId" : "5bf86fe1-1f06-4738-b02a-8b3c6808b28b",
        "authorId" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "body" : "Also, `util.HandleError` will take care of logging and creating an error to return.\n",
        "createdAt" : "2016-06-17T19:12:39Z",
        "updatedAt" : "2016-06-20T16:56:18Z",
        "lastEditedBy" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "tags" : [
        ]
      }
    ],
    "commit" : "4a5ade213c0e24a41b6d8f5e8bd05b6f3b12c745",
    "line" : null,
    "diffHunk" : "@@ -1,1 +547,551 @@\t\tif err != nil {\n\t\t\truntime.HandleError(fmt.Errorf(\"error creating new SCSI controller: %v\", err))\n\t\t\treturn \"\", \"\", err\n\t\t}\n\t\tconfigNewSCSIController := newSCSIController.(types.BaseVirtualSCSIController).GetVirtualSCSIController()"
  },
  {
    "id" : "f632cf8e-ad3b-477b-ab0a-a165dae26934",
    "prId" : 24947,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "53454b63-3b33-428e-84d6-6ae938e4530a",
        "parentId" : null,
        "authorId" : "a7f673a6-4b23-4df6-aa10-f123fa9dcd5f",
        "body" : "fail if `len(devices) < 1`\n",
        "createdAt" : "2016-05-17T20:02:39Z",
        "updatedAt" : "2016-05-21T19:53:34Z",
        "lastEditedBy" : "a7f673a6-4b23-4df6-aa10-f123fa9dcd5f",
        "tags" : [
        ]
      },
      {
        "id" : "62863e5c-48c6-4090-b697-4ba1dc54b05f",
        "parentId" : "53454b63-3b33-428e-84d6-6ae938e4530a",
        "authorId" : "69937de3-2ddb-47e1-a5a3-f89875ba29d4",
        "body" : "done\n",
        "createdAt" : "2016-05-18T22:03:18Z",
        "updatedAt" : "2016-05-21T19:53:34Z",
        "lastEditedBy" : "69937de3-2ddb-47e1-a5a3-f89875ba29d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "11397654b6e9a8ab3bd4272d37e87163e3cf70b4",
    "line" : null,
    "diffHunk" : "@@ -1,1 +591,595 @@\n\t// get new disk id\n\tnewDevice := devices[len(devices)-1]\n\tdeviceName := devices.Name(newDevice)\n"
  },
  {
    "id" : "e5ea6094-8a52-4085-a913-78132c1db5df",
    "prId" : 24947,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1557f57b-f070-4bbb-b848-6d7ef50a3413",
        "parentId" : null,
        "authorId" : "a7f673a6-4b23-4df6-aa10-f123fa9dcd5f",
        "body" : "remove scsi controller if necessary, and also for the next error returns\n",
        "createdAt" : "2016-05-19T16:45:31Z",
        "updatedAt" : "2016-05-21T19:53:34Z",
        "lastEditedBy" : "a7f673a6-4b23-4df6-aa10-f123fa9dcd5f",
        "tags" : [
        ]
      }
    ],
    "commit" : "11397654b6e9a8ab3bd4272d37e87163e3cf70b4",
    "line" : null,
    "diffHunk" : "@@ -1,1 +549,553 @@\t\tif err != nil {\n\t\t\t//cannot cleanup if there is no device list\n\t\t\treturn \"\", \"\", err\n\t\t}\n\t\tif diskController, err = vmDevices.FindDiskController(vs.cfg.Disk.DiskController); err != nil {"
  },
  {
    "id" : "bef4853d-9a23-4b37-8c93-7363402804ec",
    "prId" : 24947,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c2953f3e-1f6e-4c17-b44f-44b5d8fa4e4b",
        "parentId" : null,
        "authorId" : "a7f673a6-4b23-4df6-aa10-f123fa9dcd5f",
        "body" : "cleanupController if it is created, and do so for the next `if err != nil {` cases\n",
        "createdAt" : "2016-05-20T16:29:04Z",
        "updatedAt" : "2016-05-21T19:53:34Z",
        "lastEditedBy" : "a7f673a6-4b23-4df6-aa10-f123fa9dcd5f",
        "tags" : [
        ]
      }
    ],
    "commit" : "11397654b6e9a8ab3bd4272d37e87163e3cf70b4",
    "line" : null,
    "diffHunk" : "@@ -1,1 +572,576 @@\t\t\tcleanUpController(newSCSIController, vmDevices, vm, ctx)\n\t\t}\n\t\treturn \"\", \"\", err\n\t}\n"
  }
]