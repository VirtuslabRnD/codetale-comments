[
  {
    "id" : "f05e0eaa-f7dc-4788-a94f-1abe0e0060e6",
    "prId" : 57879,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/57879#pullrequestreview-87334674",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f241ceca-dc7f-4e29-ae84-456b685a4d0a",
        "parentId" : null,
        "authorId" : "7aca96c2-45d7-4567-99be-0323d7556c55",
        "body" : "Where do we maintain the mapping/docs from GCE concepts (ForwardingRules) or K8S concepts (LoadBalancer)?",
        "createdAt" : "2018-01-08T19:10:32Z",
        "updatedAt" : "2018-01-10T07:09:21Z",
        "lastEditedBy" : "7aca96c2-45d7-4567-99be-0323d7556c55",
        "tags" : [
        ]
      },
      {
        "id" : "aaa77f0e-fb67-4813-9ae8-f53d03bdd5f5",
        "parentId" : "f241ceca-dc7f-4e29-ae84-456b685a4d0a",
        "authorId" : "b714f738-aa05-4f49-a624-eaaf3e0cbb70",
        "body" : "That is a TODO that needs to be done (but probably can't be addressed here...)",
        "createdAt" : "2018-01-08T20:49:11Z",
        "updatedAt" : "2018-01-10T07:09:21Z",
        "lastEditedBy" : "b714f738-aa05-4f49-a624-eaaf3e0cbb70",
        "tags" : [
        ]
      }
    ],
    "commit" : "3cde2613fff06d1b35739831a1cee62640d80d0e",
    "line" : 52,
    "diffHunk" : "@@ -1,1 +50,54 @@\tAlphaRegionDisks() AlphaRegionDisks\n\tFirewalls() Firewalls\n\tForwardingRules() ForwardingRules\n\tAlphaForwardingRules() AlphaForwardingRules\n\tGlobalForwardingRules() GlobalForwardingRules"
  },
  {
    "id" : "16140e89-6c94-4f73-8954-4aa96fb335cd",
    "prId" : 57879,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/57879#pullrequestreview-87333503",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e07aeb63-e641-4a6b-9d76-e144736cc591",
        "parentId" : null,
        "authorId" : "7aca96c2-45d7-4567-99be-0323d7556c55",
        "body" : "Would be nice to use Converter.Convert for this. However we may want to do that in a follow up PR.",
        "createdAt" : "2018-01-08T20:44:18Z",
        "updatedAt" : "2018-01-10T07:09:21Z",
        "lastEditedBy" : "7aca96c2-45d7-4567-99be-0323d7556c55",
        "tags" : [
        ]
      }
    ],
    "commit" : "3cde2613fff06d1b35739831a1cee62640d80d0e",
    "line" : 590,
    "diffHunk" : "@@ -1,1 +588,592 @@\t// Convert the object via JSON copying to the type that was requested.\n\tret := &alpha.Address{}\n\tif err := copyViaJSON(ret, m.Obj); err != nil {\n\t\tglog.Errorf(\"Could not convert %T to *alpha.Address via JSON: %v\", m.Obj, err)\n\t}"
  },
  {
    "id" : "edb2cd13-cbe8-4527-b6dc-e5d9f1509905",
    "prId" : 57879,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/57879#pullrequestreview-87421960",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6999e339-8eab-445f-9908-f1a98b0f0a50",
        "parentId" : null,
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "Just a thought, maybe it's worth always adding \"regional/region\" or \"zonal/zone\" in the function names for consistency (at the cost of slightly longer names). It makes the function names more self-contained by themselves (and not relying on extra knowledge of the GCE resources)\r\n\r\n  ",
        "createdAt" : "2018-01-08T20:58:39Z",
        "updatedAt" : "2018-01-10T07:09:21Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "185fbf25-22dd-4073-8c5c-ade81b28482a",
        "parentId" : "6999e339-8eab-445f-9908-f1a98b0f0a50",
        "authorId" : "b714f738-aa05-4f49-a624-eaaf3e0cbb70",
        "body" : "Not sure about this -- as the compute API already adds \"Global\", \"Region\" in inconsistent ways so it'll look even more strange (GlobalAddresses, RegionDisk, ...)",
        "createdAt" : "2018-01-09T06:21:16Z",
        "updatedAt" : "2018-01-10T07:09:21Z",
        "lastEditedBy" : "b714f738-aa05-4f49-a624-eaaf3e0cbb70",
        "tags" : [
        ]
      }
    ],
    "commit" : "3cde2613fff06d1b35739831a1cee62640d80d0e",
    "line" : 41,
    "diffHunk" : "@@ -1,1 +39,43 @@// Cloud is an interface for the GCE compute API.\ntype Cloud interface {\n\tAddresses() Addresses\n\tAlphaAddresses() AlphaAddresses\n\tBetaAddresses() BetaAddresses"
  },
  {
    "id" : "33afdecb-c12e-4ec1-952a-681fda778e06",
    "prId" : 57879,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/57879#pullrequestreview-87371358",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "af5a6b07-485c-4fa8-abb1-546f4d96e305",
        "parentId" : null,
        "authorId" : "c6405f0b-1a36-4282-8e21-0eee7d600a7e",
        "body" : "nit: s/ga/GA/  ?",
        "createdAt" : "2018-01-08T23:19:32Z",
        "updatedAt" : "2018-01-10T07:09:21Z",
        "lastEditedBy" : "c6405f0b-1a36-4282-8e21-0eee7d600a7e",
        "tags" : [
        ]
      }
    ],
    "commit" : "3cde2613fff06d1b35739831a1cee62640d80d0e",
    "line" : 153,
    "diffHunk" : "@@ -1,1 +151,155 @@}\n\n// Addresses returns the interface for the ga Addresses.\nfunc (gce *GCE) Addresses() Addresses {\n\treturn gce.gceAddresses"
  }
]