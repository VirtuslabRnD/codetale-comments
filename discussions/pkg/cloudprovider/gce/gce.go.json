[
  {
    "id" : "199655b3-a488-46ac-a69a-3397eabd146e",
    "prId" : 12373,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "01339982-65ea-4808-940d-edc873a01074",
        "parentId" : null,
        "authorId" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "body" : "Is looking for a slash enough to be convinced that you should use the global config value? A stronger check would be to look for the https://www.googleapis.com/ prefix (since this is in the gce package that should be safe). \n",
        "createdAt" : "2015-08-07T03:04:47Z",
        "updatedAt" : "2015-08-07T22:22:07Z",
        "lastEditedBy" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "tags" : [
        ]
      },
      {
        "id" : "b1e07292-5b48-4841-81c0-f02c04d19963",
        "parentId" : "01339982-65ea-4808-940d-edc873a01074",
        "authorId" : "3cd3a661-80f4-45b3-bae0-5a78fbaedc59",
        "body" : "It should be fine. Just splitting up the universe of possible inputs in different ways.\n\nAn invalid cfg.Global.NetworkName is going to cause things to break down the line whether we treat is as a name or a full URL.\n",
        "createdAt" : "2015-08-10T20:32:56Z",
        "updatedAt" : "2015-08-10T20:32:56Z",
        "lastEditedBy" : "3cd3a661-80f4-45b3-bae0-5a78fbaedc59",
        "tags" : [
        ]
      }
    ],
    "commit" : "5882c35e45e9ca55dd9347b9401b602b65894b9b",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +179,183 @@\t\t}\n\t\tif cfg.Global.NetworkName != \"\" {\n\t\t\tif strings.Contains(cfg.Global.NetworkName, \"/\") {\n\t\t\t\tnetworkURL = cfg.Global.NetworkName\n\t\t\t} else {"
  },
  {
    "id" : "2994c745-514b-4fc9-bd6b-472f29f4e43d",
    "prId" : 11349,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4df10406-211b-4498-9e12-3660bb88d1de",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "Can you comment on why we're testing this particular edge case, why we don't try to fix it, and what has to happen for it to get fixed?\n",
        "createdAt" : "2015-07-16T04:12:32Z",
        "updatedAt" : "2015-07-17T19:02:05Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "0a583090-5177-4c36-bc83-a9f4d4d89307",
        "parentId" : "4df10406-211b-4498-9e12-3660bb88d1de",
        "authorId" : "7766e039-aa4c-4476-9091-5cc8763fa8d6",
        "body" : "I think this may be a case of being more cautious than we need about a bug that we think has been fixed, but @brendandburns is pretty strongly in favor of making the logging here to make bug detection and debugging significantly easier in case there are any other issues in the logic.\n",
        "createdAt" : "2015-07-16T21:01:01Z",
        "updatedAt" : "2015-07-17T19:02:05Z",
        "lastEditedBy" : "7766e039-aa4c-4476-9091-5cc8763fa8d6",
        "tags" : [
        ]
      },
      {
        "id" : "2f1756f5-6360-46e5-b5bc-258b7dfcbd58",
        "parentId" : "4df10406-211b-4498-9e12-3660bb88d1de",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "I meant to add a comment :)\n",
        "createdAt" : "2015-07-17T15:33:39Z",
        "updatedAt" : "2015-07-17T19:02:05Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "b0351ff266e5995111ef650b8fe93a3de4cb11e9",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +481,485 @@\t}\n\n\t// Try to verify that the correct number of nodes are now in the target pool.\n\t// We've been bitten by a bug here before (#11327) where all nodes were\n\t// accidentally removed and want to make similar problems easier to notice."
  },
  {
    "id" : "fe8d948a-775c-4686-937b-1a6d838e5f6a",
    "prId" : 11329,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "13d2277c-0421-4ec6-b8d1-41126d7e13bc",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "for future, this is a great place to use typedefs (I don't know what Go actuallys calls them) to annotate the contents and semantics of a string value.\n",
        "createdAt" : "2015-07-15T21:27:58Z",
        "updatedAt" : "2015-07-15T21:27:58Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "e943c47e68119293ffdaeaae16fc7deab30874e6",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +231,235 @@}\n\nfunc hostURLToComparablePath(hostURL string) string {\n\tidx := strings.Index(hostURL, \"/zones/\")\n\tif idx < 0 {"
  },
  {
    "id" : "4af58c56-26a5-41ef-bbdd-493ff71b8129",
    "prId" : 10974,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fc74d024-8ac8-4b2c-a79b-f4b1efb75f8d",
        "parentId" : null,
        "authorId" : "7766e039-aa4c-4476-9091-5cc8763fa8d6",
        "body" : "Is that part of a real API guarantee of how many characters that will be added? We could reuse the logic from [our config file](https://github.com/GoogleCloudPlatform/kubernetes/blob/ffb846a284fd0fd125e331fb01b26a8d4650ea9c/cluster/gce/config-default.sh#L41), perhaps?\n\nIt also adds an expectation that users will actually add tags to the VMs if they try assembling a cluster themselves, although I'm less sympathetic to this sort of breakage.\n",
        "createdAt" : "2015-07-09T21:52:45Z",
        "updatedAt" : "2015-07-10T21:36:10Z",
        "lastEditedBy" : "7766e039-aa4c-4476-9091-5cc8763fa8d6",
        "tags" : [
        ]
      },
      {
        "id" : "ca881f95-23db-4ac0-acbe-b72223a43493",
        "parentId" : "fc74d024-8ac8-4b2c-a79b-f4b1efb75f8d",
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "Well, they can always manually add firewalls.\n",
        "createdAt" : "2015-07-09T23:08:19Z",
        "updatedAt" : "2015-07-10T21:36:10Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "a8f02e54721f4f22abb38c1056dcb620282839d3",
    "line" : 50,
    "diffHunk" : "@@ -1,1 +419,423 @@// to the base name.\nfunc (gce *GCECloud) computeHostTag(host string) string {\n\treturn host[:len(host)-5]\n}\n"
  },
  {
    "id" : "5947894a-bab5-4843-97c4-a2897fc826c0",
    "prId" : 10974,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fa222c49-ee39-4572-ad60-31f9b2307d7a",
        "parentId" : null,
        "authorId" : "7766e039-aa4c-4476-9091-5cc8763fa8d6",
        "body" : "You don't have to change this, but why did this go between forwarding rules and target pools? Reversing the order from create seems most natural.\n",
        "createdAt" : "2015-07-09T21:55:39Z",
        "updatedAt" : "2015-07-10T21:36:10Z",
        "lastEditedBy" : "7766e039-aa4c-4476-9091-5cc8763fa8d6",
        "tags" : [
        ]
      },
      {
        "id" : "569b6793-9b95-4d58-b204-33069f976ddf",
        "parentId" : "fa222c49-ee39-4572-ad60-31f9b2307d7a",
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "no reason. changed as you suggest.\n",
        "createdAt" : "2015-07-09T23:12:18Z",
        "updatedAt" : "2015-07-10T21:36:10Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      },
      {
        "id" : "07ec96a2-31db-4835-ac8d-32b9690d5bf2",
        "parentId" : "fa222c49-ee39-4572-ad60-31f9b2307d7a",
        "authorId" : "7766e039-aa4c-4476-9091-5cc8763fa8d6",
        "body" : "Reversing would have meant deleting the firewall first, but don't worry about it\n",
        "createdAt" : "2015-07-09T23:19:52Z",
        "updatedAt" : "2015-07-10T21:36:10Z",
        "lastEditedBy" : "7766e039-aa4c-4476-9091-5cc8763fa8d6",
        "tags" : [
        ]
      }
    ],
    "commit" : "a8f02e54721f4f22abb38c1056dcb620282839d3",
    "line" : null,
    "diffHunk" : "@@ -1,1 +494,498 @@\t\tglog.Warningf(\"Failed waiting for Target Pool %s to be deleted: got error %s.\", name, err.Error())\n\t}\n\tfwName := makeFirewallName(name)\n\top, err = gce.service.Firewalls.Delete(gce.projectID, fwName).Do()\n\tif err != nil && isHTTPErrorCode(err, http.StatusNotFound) {"
  },
  {
    "id" : "5be3bd17-d18e-43a0-bbcb-56678ea4ee09",
    "prId" : 9155,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d610fe50-e3f7-40c5-a1f9-ea1e8f4007d1",
        "parentId" : null,
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "internal IP\n",
        "createdAt" : "2015-06-03T00:22:53Z",
        "updatedAt" : "2015-06-03T03:02:14Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "b40e99e8-9a08-4419-ba18-0d975bc37adb",
        "parentId" : "d610fe50-e3f7-40c5-a1f9-ea1e8f4007d1",
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "And I'd put this above the externalIP code, to be consistent with the ordering everywhere else.\n",
        "createdAt" : "2015-06-03T00:27:11Z",
        "updatedAt" : "2015-06-03T03:02:14Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "366c4a57-912e-4270-b957-71e760971868",
        "parentId" : "d610fe50-e3f7-40c5-a1f9-ea1e8f4007d1",
        "authorId" : "3cd3a661-80f4-45b3-bae0-5a78fbaedc59",
        "body" : "Done.\n",
        "createdAt" : "2015-06-03T03:03:00Z",
        "updatedAt" : "2015-06-03T03:03:00Z",
        "lastEditedBy" : "3cd3a661-80f4-45b3-bae0-5a78fbaedc59",
        "tags" : [
        ]
      }
    ],
    "commit" : "4e5d0da83953c16d5670b83df4c5aaa3ec7117cc",
    "line" : null,
    "diffHunk" : "@@ -1,1 +485,489 @@\texternalIP, err := gce.metadataAccess(EXTERNAL_IP_METADATA_URL)\n\tif err != nil {\n\t\treturn nil, fmt.Errorf(\"couldn't get external IP: %v\", err)\n\t}\n\treturn []api.NodeAddress{"
  },
  {
    "id" : "41786dac-eae3-437c-a42f-5e94e88acaea",
    "prId" : 9155,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2c5e06fc-6bf8-45c2-ac31-0f822083879c",
        "parentId" : null,
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "For clarity, I'd put these in the priority order expected by GetNodeHostIP: InternalIP should go first.\n",
        "createdAt" : "2015-06-03T00:26:36Z",
        "updatedAt" : "2015-06-03T03:02:14Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "7fbc5821-1ed6-421a-b36b-eff29ae635ff",
        "parentId" : "2c5e06fc-6bf8-45c2-ac31-0f822083879c",
        "authorId" : "3cd3a661-80f4-45b3-bae0-5a78fbaedc59",
        "body" : "Done.\n",
        "createdAt" : "2015-06-03T03:02:34Z",
        "updatedAt" : "2015-06-03T03:02:34Z",
        "lastEditedBy" : "3cd3a661-80f4-45b3-bae0-5a78fbaedc59",
        "tags" : [
        ]
      }
    ],
    "commit" : "4e5d0da83953c16d5670b83df4c5aaa3ec7117cc",
    "line" : null,
    "diffHunk" : "@@ -1,1 +488,492 @@\t}\n\treturn []api.NodeAddress{\n\t\t{Type: api.NodeInternalIP, Address: internalIP},\n\t\t{Type: api.NodeExternalIP, Address: externalIP},\n\t}, nil"
  },
  {
    "id" : "5403f150-4115-476c-96e0-76893e0c2d13",
    "prId" : 8899,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d7019d91-6dad-4302-b0eb-19c58aa055fc",
        "parentId" : null,
        "authorId" : "3cd3a661-80f4-45b3-bae0-5a78fbaedc59",
        "body" : "Can you add a TODO to rename/redefine this function across the implementations of the interface to make it clear that it is getting the current instance's Addresses.\n",
        "createdAt" : "2015-05-28T00:02:26Z",
        "updatedAt" : "2015-05-28T00:42:00Z",
        "lastEditedBy" : "3cd3a661-80f4-45b3-bae0-5a78fbaedc59",
        "tags" : [
        ]
      },
      {
        "id" : "b2ca775f-ce26-4f82-aad9-752b532eb132",
        "parentId" : "d7019d91-6dad-4302-b0eb-19c58aa055fc",
        "authorId" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "body" : "I've added the TODO to the cloud provider interface file rather than here. \n",
        "createdAt" : "2015-05-28T00:41:06Z",
        "updatedAt" : "2015-05-28T00:42:00Z",
        "lastEditedBy" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "tags" : [
        ]
      }
    ],
    "commit" : "1dfaa93ccdc55eecd2912150c1f389b2ac598a95",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +469,473 @@\n// NodeAddresses is an implementation of Instances.NodeAddresses.\nfunc (gce *GCECloud) NodeAddresses(_ string) ([]api.NodeAddress, error) {\n\texternalIP, err := gce.metadataAccess(EXTERNAL_IP_METADATA_URL)\n\tif err != nil {"
  },
  {
    "id" : "3f27f34a-ebfd-47df-ad22-ead74255443e",
    "prId" : 7609,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cdbe8ff2-c7b9-4645-9a87-3765c348aec3",
        "parentId" : null,
        "authorId" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "body" : "nit: can just do [:6] here\n",
        "createdAt" : "2015-05-01T05:51:35Z",
        "updatedAt" : "2015-05-01T05:51:35Z",
        "lastEditedBy" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "tags" : [
        ]
      }
    ],
    "commit" : "40549dc083ed31be959a4d252461aa989d943139",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +278,282 @@\thash := md5.Sum([]byte(name))\n\ttruncated := name[0 : LOAD_BALANCER_NAME_MAX_LENGTH-6]\n\tshortHash := hash[0:6]\n\treturn fmt.Sprintf(\"%s%s\", truncated, string(shortHash))\n}"
  },
  {
    "id" : "7514f5da-7633-45b3-b2b0-559690d2ceb0",
    "prId" : 6300,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4e6f0c6b-6929-4df9-a771-3c821d9bd85b",
        "parentId" : null,
        "authorId" : "7766e039-aa4c-4476-9091-5cc8763fa8d6",
        "body" : "Minor, but if you're going to split out some of the token source stuff into a separate file, this logic would seemingly belong there too.\n\nedit: On second thought, maybe not. It's fine like this.\n",
        "createdAt" : "2015-04-01T18:41:29Z",
        "updatedAt" : "2015-04-02T00:52:41Z",
        "lastEditedBy" : "7766e039-aa4c-4476-9091-5cc8763fa8d6",
        "tags" : [
        ]
      }
    ],
    "commit" : "5e6e67ba597f8798ec4ec4f62c8bc02fe3a8888c",
    "line" : 40,
    "diffHunk" : "@@ -1,1 +125,129 @@\t}\n\ttokenSource := google.ComputeTokenSource(\"\")\n\tif config != nil {\n\t\tvar cfg Config\n\t\tif err := gcfg.ReadInto(&cfg, config); err != nil {"
  },
  {
    "id" : "aa818eb1-e6cd-4027-88c8-f102d910f2dd",
    "prId" : 5900,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f703e38f-84f7-4aa3-8155-5140bc79ce69",
        "parentId" : null,
        "authorId" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "body" : "Was getMetadata unused before?\n",
        "createdAt" : "2015-03-25T05:31:23Z",
        "updatedAt" : "2015-03-25T05:31:23Z",
        "lastEditedBy" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "tags" : [
        ]
      },
      {
        "id" : "a3dc601c-8b30-4643-a640-4d10d0d94404",
        "parentId" : "f703e38f-84f7-4aa3-8155-5140bc79ce69",
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "yes, it appears so.\n",
        "createdAt" : "2015-03-25T17:10:49Z",
        "updatedAt" : "2015-03-25T17:10:49Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "bfceb210076cd00604c7384f73450024953c7567",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +131,135 @@\t\tzone:             zone,\n\t\tinstanceID:       instanceID,\n\t\tmetadataAccess:   getMetadata,\n\t}, nil\n}"
  },
  {
    "id" : "6f27fe0d-fc7e-4628-859b-7a70d42caf97",
    "prId" : 5900,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5a51cb0d-a486-4387-9011-6a37c413656e",
        "parentId" : null,
        "authorId" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "body" : "It seems like every URL passed into getMetadata will have the same prefix. It looks like this is the first one, but we will want to extract the common prefix out once we are making other requests to the metadata server. \n",
        "createdAt" : "2015-03-25T05:32:22Z",
        "updatedAt" : "2015-03-25T05:32:22Z",
        "lastEditedBy" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "tags" : [
        ]
      },
      {
        "id" : "c5a9b869-9e4b-44f6-8891-0ac5d7a8e006",
        "parentId" : "5a51cb0d-a486-4387-9011-6a37c413656e",
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "Can we do this when there is a second URL?\n",
        "createdAt" : "2015-03-25T17:11:22Z",
        "updatedAt" : "2015-03-25T17:11:22Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      },
      {
        "id" : "4a80d963-7d2f-46d6-9553-190798f60fa5",
        "parentId" : "5a51cb0d-a486-4387-9011-6a37c413656e",
        "authorId" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "body" : "Yes. \n",
        "createdAt" : "2015-03-25T17:16:24Z",
        "updatedAt" : "2015-03-25T17:16:24Z",
        "lastEditedBy" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "tags" : [
        ]
      }
    ],
    "commit" : "bfceb210076cd00604c7384f73450024953c7567",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +42,46 @@)\n\nconst EXTERNAL_IP_METADATA_URL = \"http://169.254.169.254/computeMetadata/v1/instance/network-interfaces/0/access-configs/0/external-ip\"\n\n// GCECloud is an implementation of Interface, TCPLoadBalancer and Instances for Google Compute Engine."
  },
  {
    "id" : "edb84d0d-a38f-4797-84e4-8a21558a1d09",
    "prId" : 3031,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fbb1d6a6-e08f-42bf-912f-0194c5b891d8",
        "parentId" : null,
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "glog.Errorf(\"unexpected affinity type: %v\", ...)\n",
        "createdAt" : "2014-12-18T18:21:50Z",
        "updatedAt" : "2014-12-18T23:46:34Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "c4e94efe1623df1af72ef9baf02e6f009e948af4",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +212,216 @@\tcase api.AffinityTypeNone:\n\t\treturn GCEAffinityTypeNone\n\tdefault:\n\t\tglog.Errorf(\"unexpected affinity type: %v\", affinityType)\n\t\treturn GCEAffinityTypeNone"
  },
  {
    "id" : "02ad9489-e389-477b-8e83-09bd46bb1607",
    "prId" : 2355,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8352b20c-ee4a-4798-8e38-7e4be9afc53c",
        "parentId" : null,
        "authorId" : "a6409368-42e0-44a9-bf79-9d3042ac3b65",
        "body" : "Hardcoded this with k8s for master hostname, shouldn't it introduce potential breakage work with e2e test-suite once kubelet starts to use this method?\n",
        "createdAt" : "2014-11-14T19:01:58Z",
        "updatedAt" : "2014-11-14T19:01:58Z",
        "lastEditedBy" : "a6409368-42e0-44a9-bf79-9d3042ac3b65",
        "tags" : [
        ]
      },
      {
        "id" : "f5d615f9-ceef-4c4d-b663-528e0ad5feb2",
        "parentId" : "8352b20c-ee4a-4798-8e38-7e4be9afc53c",
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "For now, this only works for hosted GKE, so I think it's ok to hard code.\n",
        "createdAt" : "2014-11-14T19:08:20Z",
        "updatedAt" : "2014-11-14T19:08:20Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "d3e48c9525c13d75574d3b405fc08d61090127e3",
    "line" : 70,
    "diffHunk" : "@@ -1,1 +411,415 @@\nfunc (gce *GCECloud) Master(clusterName string) (string, error) {\n\treturn \"k8s-\" + clusterName + \"-master.internal\", nil\n}"
  }
]