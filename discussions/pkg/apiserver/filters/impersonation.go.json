[
  {
    "id" : "84b03337-6123-4efe-b4aa-56865da51c1d",
    "prId" : 38699,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/38699#pullrequestreview-12912326",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1437d398-7379-4a35-96fd-7c7d540a63ac",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "what are typical reasons here? ",
        "createdAt" : "2016-12-13T14:54:00Z",
        "updatedAt" : "2016-12-14T14:53:58Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "060c8285-fb7e-4d79-8d16-54a5d6d37f53",
        "parentId" : "1437d398-7379-4a35-96fd-7c7d540a63ac",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "> what are typical reasons here?\r\n\r\nBad bindings, bad request from impersonation, whatever a webhook wants to say.",
        "createdAt" : "2016-12-14T14:06:01Z",
        "updatedAt" : "2016-12-14T14:53:58Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "f6829bbde76b343cd1222ed3c0bfcfc0db3c9166",
    "line" : 47,
    "diffHunk" : "@@ -1,1 +110,114 @@\t\t\tif err != nil || !allowed {\n\t\t\t\tglog.V(4).Infof(\"Forbidden: %#v, Reason: %s, Error: %v\", req.RequestURI, reason, err)\n\t\t\t\tforbidden(actingAsAttributes, w, req, reason)\n\t\t\t\treturn\n\t\t\t}"
  },
  {
    "id" : "972927e7-f777-46ba-b443-eb82708147ed",
    "prId" : 36769,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/36769#pullrequestreview-9376886",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4b94496f-ee47-48dd-baf4-c59f2877d6a9",
        "parentId" : null,
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "What about when it is a different header?\nRef https://github.com/kubernetes/kubernetes/pull/36816/ that adds a flag to customize the header.\n",
        "createdAt" : "2016-11-19T00:59:55Z",
        "updatedAt" : "2016-11-19T00:59:55Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      },
      {
        "id" : "e084ed84-13ef-42ba-b513-f3090a0e51a4",
        "parentId" : "4b94496f-ee47-48dd-baf4-c59f2877d6a9",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "Front proxy isn't the same as impersonation. The impersonation headers should not change, or we'll be unable to write clients (like kubectl) that can confidently ask to do something as someone else. \n\nI would not expect the client cert used by a front proxy that is verified in order to accept user info from headers to have any API permissions associated with it. \n",
        "createdAt" : "2016-11-19T01:06:24Z",
        "updatedAt" : "2016-11-19T01:06:25Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "c4aa7ed8-b30b-42b2-8773-9455e58b5cd3",
        "parentId" : "4b94496f-ee47-48dd-baf4-c59f2877d6a9",
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "I understand and totally agree with your first part, but am sorry I didnt understand the second part.\n\nIsnt front proxy just a user of the generic \"impersonation framework\"?\n",
        "createdAt" : "2016-11-19T01:17:03Z",
        "updatedAt" : "2016-11-19T01:17:03Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      },
      {
        "id" : "6bfde98b-6856-4a51-934b-8b202877f065",
        "parentId" : "4b94496f-ee47-48dd-baf4-c59f2877d6a9",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "> Isnt front proxy just a user of the generic \"impersonation framework\"?\r\n\r\nThe front proxy uses a different mechanism.  The proxy is assured of being able to specify any user, so no additional authentication check is performed.  In addition, you can use the front proxy to identify the user on the request and that user can ask to impersonate someone else.  The features are similar and certainly complementary, but not identical.\r\n\r\nHaving gone through the process of creating an API proxy that terminates authentication, I think we want to use the auth-proxy mechanism instead of impersonation like I first thought.",
        "createdAt" : "2016-11-20T23:48:20Z",
        "updatedAt" : "2016-11-20T23:48:20Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "e69d0d84a4d0bd14dd5ef1e496cff1be3313228e",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +125,129 @@\n\t\t// clear all the impersonation headers from the request\n\t\treq.Header.Del(authenticationapi.ImpersonateUserHeader)\n\t\treq.Header.Del(authenticationapi.ImpersonateGroupHeader)\n\t\tfor headerName := range req.Header {"
  }
]