[
  {
    "id" : "d309f692-0f0e-4501-bb3d-759c5bb290e9",
    "prId" : 16400,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d30031ed-29be-4bbc-bd21-5aecfe43e194",
        "parentId" : null,
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "@liggitt I added a comment here. Do you think it's appropriate?\n",
        "createdAt" : "2015-11-18T19:13:26Z",
        "updatedAt" : "2015-11-20T17:57:54Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      },
      {
        "id" : "0b68eb77-1c70-41c2-884c-45d1275cbcc6",
        "parentId" : "d30031ed-29be-4bbc-bd21-5aecfe43e194",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "sure\n",
        "createdAt" : "2015-11-18T19:39:16Z",
        "updatedAt" : "2015-11-20T17:57:54Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "32f2ec71a8b854d070df11a78070fe96939829e4",
    "line" : 206,
    "diffHunk" : "@@ -1,1 +222,226 @@\t\titem.reqHeaders.Add(\"Host\", server.Listener.Addr().String())\n\n\t\t// We directly write to the connection to bypass the Go library's manipulation of the Request.Header.\n\t\t// Write the request headers\n\t\tpost := fmt.Sprintf(\"POST /%s/%s/%s/proxy/namespaces/default/foo/id/some/dir HTTP/1.1\\r\\n\", prefix, newGroupVersion.Group, newGroupVersion.Version)"
  },
  {
    "id" : "0056503b-e43a-43a8-923a-035368778ce1",
    "prId" : 6048,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3a19e4b6-5094-4722-9ea8-20a6b6c7304b",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Can you add a comment here to the effect that the default client follows the redirect, which is why this test works? Took me a minute to figure it out. :)\n",
        "createdAt" : "2015-03-27T21:19:28Z",
        "updatedAt" : "2015-03-27T21:29:37Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "86f79ab8-8489-4561-8ea3-1fecb0d3c72a",
        "parentId" : "3a19e4b6-5094-4722-9ea8-20a6b6c7304b",
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "Done.\n",
        "createdAt" : "2015-03-27T21:29:45Z",
        "updatedAt" : "2015-03-27T21:29:45Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      }
    ],
    "commit" : "2fff606a6f16e69b05310a7f774acfb8235b2b7b",
    "line" : null,
    "diffHunk" : "@@ -1,1 +414,418 @@\t\t}\n\t\t// Note: We are using a default client here, that follows redirects.\n\t\tresp, err := http.DefaultClient.Do(req)\n\t\tif err != nil {\n\t\t\tt.Errorf(\"unexpected error %v\", err)"
  },
  {
    "id" : "75db4fcd-2115-4c03-8851-4e347a41effc",
    "prId" : 2813,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "743db062-ad46-4c87-8b07-e3ff27d37793",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Suggestion: I think it'd be clearer if you took these paths and put them directly in the table above (doubling the size of the table). That'd make it easier to test the \"all\" namespace, which seems to be untested.\n",
        "createdAt" : "2014-12-10T21:29:04Z",
        "updatedAt" : "2014-12-18T20:27:39Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "25f80a08-57f4-4c5c-85aa-81d634e9979d",
        "parentId" : "743db062-ad46-4c87-8b07-e3ff27d37793",
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "Sure, but per my previous comment, you are not able to proxy to a \"all\" namespace case.\n1. GET /prefix/version/proxy/foo/some/other/dir \n2. GET /prefix/version/proxy/foo\n3. POST /prefix/version/proxy/foo \n\nCase 1: will result in proxy believing kind=foo, name=some, rest=/other/dir, namespace=default\nCase 2: will result in an error, since it has kind=foo, name=undefined, namespace=all, and proxy errors since name is needed to fulfill redirector request\nCase 3: will result in an error, since it has kind=foo, name=undefined, namespace=default, and proxy errors since name is needed to fullfill redirector request.\n\nI agree we are currently missing a test case for error cases in proxy.go for those scenarios.\n",
        "createdAt" : "2014-12-10T21:47:25Z",
        "updatedAt" : "2014-12-18T20:27:39Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      },
      {
        "id" : "95e05209-6b30-40aa-aca2-a937bb56741b",
        "parentId" : "743db062-ad46-4c87-8b07-e3ff27d37793",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Yeah, I was confused, thanks for clarifying. :)\n",
        "createdAt" : "2014-12-10T22:01:57Z",
        "updatedAt" : "2014-12-18T20:27:39Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "4ca6546f-97c3-4809-b50c-ca792872a40e",
        "parentId" : "743db062-ad46-4c87-8b07-e3ff27d37793",
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "I was confused when porting this on how proxy.go actually worked, so at least my learning it was not for naught.\n",
        "createdAt" : "2014-12-10T22:06:54Z",
        "updatedAt" : "2014-12-18T20:27:39Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      },
      {
        "id" : "a68ebc2d-8229-432a-b179-0883dd502cd0",
        "parentId" : "743db062-ad46-4c87-8b07-e3ff27d37793",
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "Maybe put the explanation in a comment?\n",
        "createdAt" : "2014-12-13T04:54:59Z",
        "updatedAt" : "2014-12-18T20:27:39Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      }
    ],
    "commit" : "cbbe61d115011acd2cf428e8ee170a7e40010fa0",
    "line" : 39,
    "diffHunk" : "@@ -1,1 +176,180 @@\t\tproxyTestPatterns := []string{\n\t\t\t\"/prefix/version/proxy/foo/id\" + item.path + \"?namespace=\" + item.reqNamespace,\n\t\t\t\"/prefix/version/proxy/ns/\" + item.reqNamespace + \"/foo/id\" + item.path,\n\t\t}\n\t\tfor _, proxyTestPattern := range proxyTestPatterns {"
  },
  {
    "id" : "3eb68363-2eb1-4e86-90a0-99016deb5b3d",
    "prId" : 2813,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "df7d9055-db58-426b-82e4-9a278ec296ff",
        "parentId" : null,
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "This indicates that any namespace can access the path, not just the default namespace?\n",
        "createdAt" : "2014-12-11T16:42:36Z",
        "updatedAt" : "2014-12-18T20:27:39Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "e7da2ff6-5673-4b17-871b-c6ee87b34ae1",
        "parentId" : "df7d9055-db58-426b-82e4-9a278ec296ff",
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "No. I think this may be touching upon the same confusion that @lavalamp encountered, and is a good rationale for combining `table` and `proxyTestPatterns` into a single table to improve readability of this test.  \n\nThis test verifies that the following urls both return \"answer\" and are in \"other\" namespace:\n1. `/prefix/version/proxy/ns/other/foo/id/some/dir/id`\n2. `/prefix/version/proxy/foo/id/some/dir/id?namespace=other`\n",
        "createdAt" : "2014-12-11T18:33:37Z",
        "updatedAt" : "2014-12-18T20:27:39Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      }
    ],
    "commit" : "cbbe61d115011acd2cf428e8ee170a7e40010fa0",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +143,147 @@\t\t{\"PUT\", \"/some/dir/id\", \"different question\", \"answer\", \"default\"},\n\t\t{\"DELETE\", \"/some/dir/id\", \"\", \"ok\", \"default\"},\n\t\t{\"GET\", \"/some/dir/id\", \"\", \"answer\", \"other\"},\n\t}\n"
  },
  {
    "id" : "9401d86a-5bd5-4410-89d6-1d94df3a0aa3",
    "prId" : 1105,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ae3bf001-c0cc-45d2-8ea7-41e94b9ae26f",
        "parentId" : null,
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "nit: pull this struct out into it's own local definition, I find this hard to read.\n",
        "createdAt" : "2014-09-03T03:59:15Z",
        "updatedAt" : "2014-09-05T20:33:40Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      },
      {
        "id" : "2f8d3aeb-c06e-441b-9e2c-21f9ce772bd2",
        "parentId" : "ae3bf001-c0cc-45d2-8ea7-41e94b9ae26f",
        "authorId" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "body" : "This is actually the common idiom for defining table driven tests. You'll get used to reading it. :)\n",
        "createdAt" : "2014-09-03T14:26:07Z",
        "updatedAt" : "2014-09-05T20:33:40Z",
        "lastEditedBy" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "tags" : [
        ]
      },
      {
        "id" : "a8b1741f-38b3-4d78-98ad-088750485182",
        "parentId" : "ae3bf001-c0cc-45d2-8ea7-41e94b9ae26f",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Yeah, it ends up being easier to read afterwards because it forces you to initialize without specifying a type in your nested objects and forces you to use a for loop correctly\n",
        "createdAt" : "2014-09-03T15:51:51Z",
        "updatedAt" : "2014-09-05T20:33:40Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "02d62928-df0d-4d55-b15e-525469bdac08",
        "parentId" : "ae3bf001-c0cc-45d2-8ea7-41e94b9ae26f",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "It'll grow on you. Or not, but still can't change it, too many places use this.\n",
        "createdAt" : "2014-09-04T00:09:53Z",
        "updatedAt" : "2014-09-05T20:33:40Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "b6f1f84875344475d477a83f068833ef7a8a83d2",
    "line" : 134,
    "diffHunk" : "@@ -1,1 +132,136 @@\nfunc TestProxy(t *testing.T) {\n\ttable := []struct {\n\t\tmethod   string\n\t\tpath     string"
  }
]