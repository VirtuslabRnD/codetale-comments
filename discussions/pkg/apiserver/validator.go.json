[
  {
    "id" : "87f1925d-efdd-4470-8ae5-6f78c76bccb4",
    "prId" : 1302,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d5d9c099-e836-43bf-9320-5588e1a498e4",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Not sure about this... it's making it harder to replicate apiserver. What do you think about pushing down into etcd: having the components check in with their addresses periodically, and storing that in etcd with a ttl?\n",
        "createdAt" : "2014-09-12T21:59:53Z",
        "updatedAt" : "2014-09-16T20:37:13Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "8fea6e21-03d9-4c7f-bfb9-ccad058eaf56",
        "parentId" : "d5d9c099-e836-43bf-9320-5588e1a498e4",
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "Not sure why this makes it harder to replica the apiserver.  This is a\nstateless validation layer, intended for cluster debugging, it should work\nfrom any apiserver no matter how many there are.\n\n--brendan\n\nOn Fri, Sep 12, 2014 at 3:00 PM, Daniel Smith notifications@github.com\nwrote:\n\n> In pkg/apiserver/validator.go:\n> \n> > +)\n> > +\n> > +// TODO: this basic interface is duplicated in N places.  consolidate?\n> > +type httpGet interface {\n> > -   Get(url string) (*http.Response, error)\n> >   +}\n> >   +\n> >   +type server struct {\n> > -   addr string\n> > -   port int\n> >   +}\n> >   +\n> >   +// validator is responsible for validating the cluster and serving\n> >   +type validator struct {\n> > -   // a list of servers to health check\n> > -   servers map[string]server\n> \n> Not sure about this... it's making it harder to replicate apiserver. What\n> do you think about pushing down into etcd: having the components check in\n> with their addresses periodically, and storing that in etcd with a ttl?\n> \n> â€”\n> Reply to this email directly or view it on GitHub\n> https://github.com/GoogleCloudPlatform/kubernetes/pull/1302/files#r17505006\n> .\n",
        "createdAt" : "2014-09-12T23:10:18Z",
        "updatedAt" : "2014-09-16T20:37:13Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "f8844ce69e78f5d16f395470b21d23d7cd84f1c9",
    "line" : 44,
    "diffHunk" : "@@ -1,1 +42,46 @@type validator struct {\n\t// a list of servers to health check\n\tservers map[string]server\n\tclient  httpGet\n}"
  },
  {
    "id" : "8b08fd6d-8a8b-4d21-9c55-7425d4d30963",
    "prId" : 1302,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "38ee92da-2734-4a0d-8c9f-835f7fdf741d",
        "parentId" : null,
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Possibel to reuse existing health checker code here?\n",
        "createdAt" : "2014-09-13T02:49:57Z",
        "updatedAt" : "2014-09-16T20:37:13Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "7fa38a5a-a9b4-4d92-a4ed-9ea285b745ba",
        "parentId" : "38ee92da-2734-4a0d-8c9f-835f7fdf741d",
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "I thought about it, but the existing health checker code is very much about checking the health of pods, the signature is:\n\n``` go\nHealthCheck(podFullName string, currentState api.PodState, container api.Container) (Status, error)\n```\n\nWe could probably re-factor to have a generic HTTP health checker, but I'm actually not sure it would save that much.  Also, in this case I'm treating non-200 as \"unhealthy\" whereas the health checker as a broader policy.\n",
        "createdAt" : "2014-09-13T04:15:55Z",
        "updatedAt" : "2014-09-16T20:37:13Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      },
      {
        "id" : "81b346c1-5b99-4ac1-a663-e3ccbfa28442",
        "parentId" : "38ee92da-2734-4a0d-8c9f-835f7fdf741d",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Not asking for a change, but I think it's weird and confusing to have different policies about what counts as healthy.\n",
        "createdAt" : "2014-09-16T05:15:06Z",
        "updatedAt" : "2014-09-16T20:37:13Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "f8844ce69e78f5d16f395470b21d23d7cd84f1c9",
    "line" : 49,
    "diffHunk" : "@@ -1,1 +47,51 @@\nfunc (s *server) check(client httpGet) (health.Status, string, error) {\n\tresp, err := client.Get(\"http://\" + net.JoinHostPort(s.addr, strconv.Itoa(s.port)) + \"/healthz\")\n\tif err != nil {\n\t\treturn health.Unknown, \"\", err"
  },
  {
    "id" : "2c51df86-439f-4535-8f9b-20a2b685aa55",
    "prId" : 1302,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7e7b1264-73b2-4077-9e3a-c08842abd064",
        "parentId" : null,
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Left a log statement in here\n",
        "createdAt" : "2014-10-20T20:57:49Z",
        "updatedAt" : "2014-10-20T20:57:49Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "f8844ce69e78f5d16f395470b21d23d7cd84f1c9",
    "line" : 86,
    "diffHunk" : "@@ -1,1 +84,88 @@\t}\n\tdata, err := json.Marshal(reply)\n\tlog.Printf(\"FOO: %s\", string(data))\n\tif err != nil {\n\t\tw.WriteHeader(http.StatusInternalServerError)"
  }
]