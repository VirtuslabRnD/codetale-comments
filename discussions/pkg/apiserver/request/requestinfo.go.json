[
  {
    "id" : "21b4ac69-945f-4073-b1e2-275f45aeedcc",
    "prId" : 36070,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/36070#pullrequestreview-6847687",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a1b2e84d-4c24-40cc-abac-70f51e57a573",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "this is pretty bad... I could inject special params and values for watch...\n",
        "createdAt" : "2016-11-02T16:02:00Z",
        "updatedAt" : "2016-11-02T16:02:00Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "3294b1df18d0e50c107c290be8cd7447bd4dd77b",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +199,203 @@\tif len(requestInfo.Name) == 0 && requestInfo.Verb == \"get\" {\n\t\t// Assumes v1.ListOptions\n\t\t// Duplicates logic of Convert_Slice_string_To_bool\n\t\tswitch strings.ToLower(req.URL.Query().Get(\"watch\")) {\n\t\tcase \"false\", \"0\", \"\":"
  },
  {
    "id" : "804a6123-2e0c-4596-a3f7-26b57d7d5526",
    "prId" : 33490,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/33490#pullrequestreview-1685992",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "01112aa4-bd0d-42e8-9aa8-98a7e2ba7697",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "I wasn't sure if this would conflict with the `iota` definition of another int typedef used as a key... I guess it doesn't, but it definitely gave me pause\n",
        "createdAt" : "2016-09-26T18:40:00Z",
        "updatedAt" : "2016-09-28T16:51:41Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "9827a304-7aa4-40b9-861f-fff8b981e986",
        "parentId" : "01112aa4-bd0d-42e8-9aa8-98a7e2ba7697",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "It's what the go context package suggests: https://github.com/golang/net/blob/master/context/context.go#L100\n",
        "createdAt" : "2016-09-27T08:23:15Z",
        "updatedAt" : "2016-09-28T16:51:41Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "2dc63337-a418-4294-9a77-773c9386bee9",
        "parentId" : "01112aa4-bd0d-42e8-9aa8-98a7e2ba7697",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "That's why I was asking on irc yesterday about moving `Context` out of `pkg/api`. But keys are interfaces and interfaces are equal if the type and the value are equal. So this private type idea actually works.\n\nWill add a comment.\n",
        "createdAt" : "2016-09-27T08:30:01Z",
        "updatedAt" : "2016-09-28T16:51:41Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "6c75e922f31b9b3963fd5f1466b9ebc6f9c4b8d2",
    "line" : null,
    "diffHunk" : "@@ -1,1 +213,217 @@// keys are interfaces and interfaces are equal when the type and the value is equal, this\n// does not conflict with the keys defined in pkg/api.\nconst requestInfoKey requestInfoKeyType = iota\n\n// WithRequestInfo returns a copy of parent in which the request info value is set"
  }
]