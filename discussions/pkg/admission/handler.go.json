[
  {
    "id" : "0db61b69-82db-4206-9d03-624a5bbad75b",
    "prId" : 29634,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "902ba0e1-3a55-4d7c-8bc5-128485fbff39",
        "parentId" : null,
        "authorId" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "body" : "Instead of polling, what if `readyFunc` returned a `chan struct{}` that you could select on?\n",
        "createdAt" : "2016-07-28T12:24:23Z",
        "updatedAt" : "2016-08-01T17:54:28Z",
        "lastEditedBy" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "tags" : [
        ]
      },
      {
        "id" : "4e91b1e9-7425-4242-a1cb-45b546ceabef",
        "parentId" : "902ba0e1-3a55-4d7c-8bc5-128485fbff39",
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "this is largely done this way to be consistent with origin.  i am not sure how fancy we need to be.\n",
        "createdAt" : "2016-07-28T15:16:27Z",
        "updatedAt" : "2016-08-01T17:54:28Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      },
      {
        "id" : "514cc329-aef4-47a3-9baf-7a6ec57dcebf",
        "parentId" : "902ba0e1-3a55-4d7c-8bc5-128485fbff39",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "> this is largely done this way to be consistent with origin. i am not sure how fancy we need to be.\n\nI'm fine with the naive impl for now.\n",
        "createdAt" : "2016-07-28T18:45:34Z",
        "updatedAt" : "2016-08-01T17:54:28Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "0339ef7961051b7d7775dd2bf27ecb301fb6ba76",
    "line" : 50,
    "diffHunk" : "@@ -1,1 +75,79 @@\t\treturn true\n\t}\n\tfor !h.readyFunc() {\n\t\tselect {\n\t\tcase <-time.After(100 * time.Millisecond):"
  },
  {
    "id" : "476fd8a5-758e-4e23-a78c-235325010a3d",
    "prId" : 29634,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "968edde7-ed81-4bb1-9cd0-b6f095509022",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "We have places that rely on multiple caches.  You want them unioned separately or would you be ok make this `AddReadyFunc` and waiting for all of them?\n",
        "createdAt" : "2016-07-28T18:44:57Z",
        "updatedAt" : "2016-08-01T17:54:28Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "55880666-b4b2-44fd-95c7-d5006b31681b",
        "parentId" : "968edde7-ed81-4bb1-9cd0-b6f095509022",
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "i am fine either way.\n",
        "createdAt" : "2016-08-01T17:45:01Z",
        "updatedAt" : "2016-08-01T17:54:28Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      }
    ],
    "commit" : "0339ef7961051b7d7775dd2bf27ecb301fb6ba76",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +57,61 @@\n// SetReadyFunc allows late registration of a ReadyFunc to know if the handler is ready to process requests.\nfunc (h *Handler) SetReadyFunc(readyFunc ReadyFunc) {\n\th.readyFunc = readyFunc\n}"
  }
]