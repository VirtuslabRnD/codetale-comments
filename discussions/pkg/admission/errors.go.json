[
  {
    "id" : "5bb6b929-ef53-4274-8986-257b3103c228",
    "prId" : 14012,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f4d43839-6453-4f55-a944-1c80e602565c",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "A godoc line would be nice :)\n",
        "createdAt" : "2015-09-16T01:06:31Z",
        "updatedAt" : "2015-09-16T20:17:39Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "1fba05ed-31a5-48e1-a010-31a69bf61baa",
        "parentId" : "f4d43839-6453-4f55-a944-1c80e602565c",
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "There is a lot of common code between this and NewForbidden to determine the name for a resource.  Can you make a utility and share it between the functions?\n",
        "createdAt" : "2015-09-16T13:33:32Z",
        "updatedAt" : "2015-09-16T20:17:39Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      },
      {
        "id" : "f52e3602-d590-49ac-8357-71d93e47b2d5",
        "parentId" : "f4d43839-6453-4f55-a944-1c80e602565c",
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "done and done.\n",
        "createdAt" : "2015-09-16T20:17:56Z",
        "updatedAt" : "2015-09-16T20:17:56Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "58e7cc4106ddd61613b8bc7efbe6a5e3c5d54e72",
    "line" : null,
    "diffHunk" : "@@ -1,1 +57,61 @@\n// NewNotFound is a utility function to return a well-formatted admission control error response\nfunc NewNotFound(a Attributes) error {\n\tname, kind, err := extractKindName(a)\n\tif err != nil {"
  },
  {
    "id" : "8195c990-12f3-40f8-9307-520b4bfe7ccd",
    "prId" : 6830,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "38404053-bd7a-4628-bfc9-240d98098d39",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "I recommend checking the type of internalError; specifically, if it's already an apierror of type Forbidden, don't double wrap it.\n",
        "createdAt" : "2015-04-16T04:31:27Z",
        "updatedAt" : "2015-04-16T17:06:39Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "a84e0499-6e5d-4fe3-bb1c-9f815b4e48be",
        "parentId" : "38404053-bd7a-4628-bfc9-240d98098d39",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "(if there was an easy way to tell if you were running in a test I'd ask for it to panic in that case, but that's hard)\n",
        "createdAt" : "2015-04-16T04:32:13Z",
        "updatedAt" : "2015-04-16T17:06:39Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "81dcd8c836b586ee20f7ba3b6815fc5344614b2b",
    "line" : null,
    "diffHunk" : "@@ -1,1 +23,27 @@\n// NewForbidden is a utility function to return a well-formatted admission control error response\nfunc NewForbidden(a Attributes, internalError error) error {\n\t// do not double wrap an error of same type\n\tif apierrors.IsForbidden(internalError) {"
  }
]