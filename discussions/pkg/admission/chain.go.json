[
  {
    "id" : "8be0cc73-600f-48f9-be02-fca8e768f412",
    "prId" : 26709,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8d0bb5ed-5bd7-4aaa-bfd3-2719397095af",
        "parentId" : null,
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Can you split this change specifically into its own commit - this appears to be the only API change here, and it's better it be separate.\n",
        "createdAt" : "2016-06-06T15:45:34Z",
        "updatedAt" : "2016-07-21T12:05:15Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "037d116add1f4a59db2767d21aa6189a4c9cabb0",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +24,28 @@// NewFromPlugins returns an admission.Interface that will enforce admission control decisions of all\n// the given plugins.\nfunc NewFromPlugins(client clientset.Interface, pluginNames []string, configFilePath string, plugInit PluginInitializer) (Interface, error) {\n\tplugins := []Interface{}\n\tfor _, pluginName := range pluginNames {"
  },
  {
    "id" : "0fc22e91-240f-4846-be29-cbbb2c9ecbba",
    "prId" : 8233,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "877017d8-990c-4966-9d05-56996675f8af",
        "parentId" : null,
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "I know we don't have one now, but we should have one.  Please add a test for the chainAdmissionHandler that takes a set of mock admission handlers, and ensure that it respects the handles method for the objects it delegates.\n",
        "createdAt" : "2015-05-20T02:02:30Z",
        "updatedAt" : "2015-05-21T18:00:10Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      }
    ],
    "commit" : "e95d9c416df0101c8ecd03f27254b34ea3fb0d46",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +45,49 @@func (admissionHandler chainAdmissionHandler) Admit(a Attributes) error {\n\tfor _, handler := range admissionHandler {\n\t\tif !handler.Handles(a.GetOperation()) {\n\t\t\tcontinue\n\t\t}"
  }
]