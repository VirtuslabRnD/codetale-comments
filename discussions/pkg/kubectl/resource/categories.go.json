[
  {
    "id" : "35a604b2-3621-41a9-aa03-7083e61f6a86",
    "prId" : 51829,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/51829#pullrequestreview-60637081",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9ca62021-abc5-4cfc-b364-18084e939dc5",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "if it's coder error, why not panic?",
        "createdAt" : "2017-09-05T15:21:19Z",
        "updatedAt" : "2017-09-05T20:35:33Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "81407cef49e970b227d83a208ca8686b6e4f3733",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +44,48 @@// means we're at a cluster prior to categories support, fallback to the expander provided.\nfunc NewDiscoveryCategoryExpander(fallbackExpander CategoryExpander, client discovery.DiscoveryInterface) (discoveryCategoryExpander, error) {\n\tif client == nil {\n\t\tpanic(\"Please provide discovery client to shortcut expander\")\n\t}"
  },
  {
    "id" : "9cd44e79-29b2-494d-be2e-e71ccffc6d8d",
    "prId" : 51829,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/51829#pullrequestreview-60697019",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4f54594e-87c1-4137-9170-7f9938fdbc3d",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "this particular error is bad, I would return an error instead of falling back.",
        "createdAt" : "2017-09-05T15:23:25Z",
        "updatedAt" : "2017-09-05T20:35:33Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "b94d68ed-4c45-469b-82ff-b2a6ce7fe501",
        "parentId" : "4f54594e-87c1-4137-9170-7f9938fdbc3d",
        "authorId" : "ad267631-96d1-4bad-b913-e8d6342e65a2",
        "body" : "@deads2k should we change the `CategoryExpander` interface signature? No error returned in `Expand` ATM.",
        "createdAt" : "2017-09-05T18:22:45Z",
        "updatedAt" : "2017-09-05T20:35:33Z",
        "lastEditedBy" : "ad267631-96d1-4bad-b913-e8d6342e65a2",
        "tags" : [
        ]
      },
      {
        "id" : "b9192848-d8bb-4579-8526-2a8b4c43374e",
        "parentId" : "4f54594e-87c1-4137-9170-7f9938fdbc3d",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "> @deads2k should we change the CategoryExpander interface signature? No error returned in Expand ATM.\r\n\r\nhmmm... ok.  I can deal with a fallback for 1.8 to avoid too many ripples at this stage.",
        "createdAt" : "2017-09-05T18:27:07Z",
        "updatedAt" : "2017-09-05T20:35:33Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "81407cef49e970b227d83a208ca8686b6e4f3733",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +60,64 @@\tfor _, apiResourceList := range apiResourceLists {\n\t\tgv, err := schema.ParseGroupVersion(apiResourceList.GroupVersion)\n\t\tif err != nil {\n\t\t\treturn e.fallbackExpander.Expand(category)\n\t\t}"
  },
  {
    "id" : "151c2036-7168-40f5-8ecc-709693d38d9b",
    "prId" : 51829,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/51829#pullrequestreview-60637835",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2eb573be-8b69-4170-9aa8-68e6fcd0bf24",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "This looks good.",
        "createdAt" : "2017-09-05T15:23:42Z",
        "updatedAt" : "2017-09-05T20:35:33Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "81407cef49e970b227d83a208ca8686b6e4f3733",
    "line" : 55,
    "diffHunk" : "@@ -1,1 +77,81 @@\t}\n\n\tif len(discoveredExpansions) == 0 {\n\t\t// We don't know if the server really don't have any resource with categories,\n\t\t// or we're on a cluster version prior to categories support. Anyways, fallback."
  }
]