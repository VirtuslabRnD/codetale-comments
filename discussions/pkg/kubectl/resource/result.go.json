[
  {
    "id" : "428a0354-4553-4163-80b0-0207eddac75d",
    "prId" : 54024,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/54024#pullrequestreview-70050581",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2d88a48f-9095-4fd4-a71d-6dde5d40d7e9",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "needs godoc update (and sweeping callers to catch casts/tests for api.List instead of ListInterface/ListMetaAccessor)\r\n\r\n> // Otherwise, the returned resources will be part of an\r\n> // api.List. The ResourceVersion of the api.List will be set only if it is identical\r\n> // api.List",
        "createdAt" : "2017-10-17T20:59:51Z",
        "updatedAt" : "2017-10-18T16:31:00Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "554a4113-fa4c-4030-a7d2-2316517d459f",
        "parentId" : "2d88a48f-9095-4fd4-a71d-6dde5d40d7e9",
        "authorId" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "body" : "I checked for callers of the function and did a rough analysis of how each is using it.  Updated the PR description with each caller of the function, and how they use the result.",
        "createdAt" : "2017-10-17T22:26:22Z",
        "updatedAt" : "2017-10-18T16:31:00Z",
        "lastEditedBy" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "tags" : [
        ]
      }
    ],
    "commit" : "fd169a621870551d3e14f357de83a7d0f1edd3a5",
    "line" : 44,
    "diffHunk" : "@@ -1,1 +176,180 @@\t\traw = append(raw, runtime.RawExtension{Object: o})\n\t}\n\treturn &v1.List{\n\t\tListMeta: metav1.ListMeta{\n\t\t\tResourceVersion: version,"
  },
  {
    "id" : "0dfa72be-fcd3-40ca-8a25-05f984fc4b64",
    "prId" : 54024,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/54024#pullrequestreview-71040213",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0e34d485-168e-44de-9d1d-ff8e51a3e6d2",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "This is still resulting in a v1.List containing internal objects. Is there a reason not to use `info.VersionedObject` if available above when building the `objects` array? I'm concerned that v1.List will bypass conversion to external versions of nested objects. ",
        "createdAt" : "2017-10-20T17:48:51Z",
        "updatedAt" : "2017-10-20T17:50:09Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "f804a435-b241-486c-913b-a3cefc116853",
        "parentId" : "0e34d485-168e-44de-9d1d-ff8e51a3e6d2",
        "authorId" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "body" : "What is the impact of the change you suggest?  It seems much more invasive than this PR.  How does it impact `get` and `rollingupdate` which are currently using the internal version?  I read @smarterclayton 's response as doing it this way is fine, and a step in the right direction.\r\n\r\n",
        "createdAt" : "2017-10-20T17:56:11Z",
        "updatedAt" : "2017-10-20T18:01:48Z",
        "lastEditedBy" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "tags" : [
        ]
      },
      {
        "id" : "7a16266f-670f-4771-8632-79ae3b74aa3e",
        "parentId" : "0e34d485-168e-44de-9d1d-ff8e51a3e6d2",
        "authorId" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "body" : "@liggitt FWIW, what you are suggesting may be perfectly safe, I just don't know enough about the area.",
        "createdAt" : "2017-10-20T18:38:17Z",
        "updatedAt" : "2017-10-20T18:38:17Z",
        "lastEditedBy" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "tags" : [
        ]
      },
      {
        "id" : "0eb4babc-dc46-47ae-a611-3d38ba56e031",
        "parentId" : "0e34d485-168e-44de-9d1d-ff8e51a3e6d2",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "> What is the impact of the change you suggest? \r\n\r\nI'm not sure yet\r\n\r\n> I read @smarterclayton's response as doing it this way is fine, and a step in the right direction.\r\n\r\nI read \"v1.List should work with external objects (internal.List can also have external objects)\" to mean that we shouldn't put internal objects in a v1.List, but it's possible I misunderstood.\r\n\r\nI *think* wrapping internal objects in an external list is incorrect, and am concerned it is introducing bugs in reserialization. I pulled down this branch to hit the obvious cases and couldn't find any issues, so I'm tentatively ok with proceeding to unblock consumers of the resource package, but I think it's worthwhile to switch to versioned in an immediate follow up and chase the ripples through the kubectl commands that require internal.",
        "createdAt" : "2017-10-20T19:02:46Z",
        "updatedAt" : "2017-10-20T19:02:46Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "815e6c26-a4d3-4524-bbcd-db750d1b9550",
        "parentId" : "0e34d485-168e-44de-9d1d-ff8e51a3e6d2",
        "authorId" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "body" : "@liggit Thx.  I will follow up this week.  You may be right about @smarterclayton's comment, reading it a second time I am less certain.",
        "createdAt" : "2017-10-22T17:55:56Z",
        "updatedAt" : "2017-10-22T17:55:56Z",
        "lastEditedBy" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "tags" : [
        ]
      }
    ],
    "commit" : "fd169a621870551d3e14f357de83a7d0f1edd3a5",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +162,166 @@\t}\n\n\treturn toV1List(objects, version), err\n}\n"
  },
  {
    "id" : "c6fca636-0b39-4c66-ba3b-1db0500afbb2",
    "prId" : 6942,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c20d11ee-09e7-46e8-be61-147a55ad65d9",
        "parentId" : null,
        "authorId" : "8076e56f-768c-4f89-90e6-045ef34e1525",
        "body" : "It looks like this function allowed to return a list of disparate objects. If that's true, wouldn't the conversion fail?\n",
        "createdAt" : "2015-04-17T23:35:13Z",
        "updatedAt" : "2015-04-20T19:00:38Z",
        "lastEditedBy" : "8076e56f-768c-4f89-90e6-045ef34e1525",
        "tags" : [
        ]
      },
      {
        "id" : "d69c998b-abdc-4402-a48a-0e5b57f88cc5",
        "parentId" : "c20d11ee-09e7-46e8-be61-147a55ad65d9",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "No, because we converted any outside the scheme into json (above) and any remaining objects are in the scheme.  The default mixed object scenario will ignore objects already in a version (if you go internal to v1beta3, an object in v1beta1 won't be converted).\n\n> On Apr 17, 2015, at 7:35 PM, Jeff Lowdermilk notifications@github.com wrote:\n> \n> In pkg/kubectl/resource/result.go:\n> \n> > -       }\n> >   +\n> > -       converted, err := tryConvert(info.Mapping.ObjectConvertor, info.Object, version, info.Mapping.APIVersion)\n> > -       if err != nil {\n> > -           return nil, err\n> > -       }\n> > -       objects = append(objects, converted)\n> > -   }\n> >   +\n> > -   var object runtime.Object\n> > -   if len(objects) == 1 {\n> > -       object = objects[0]\n> > -   } else {\n> > -       object = &api.List{Items: objects}\n> > -       converted, err := tryConvert(api.Scheme, object, version, latest.Version)\n> > -       if err != nil {\n> >   It looks like this function allowed to return a list of disparate objects. If that's true, wouldn't the conversion fail?\n> \n> â€”\n> Reply to this email directly or view it on GitHub.\n",
        "createdAt" : "2015-04-18T00:33:18Z",
        "updatedAt" : "2015-04-20T19:00:38Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "04afe698-bbcc-463e-9d11-e3f3425b5998",
        "parentId" : "c20d11ee-09e7-46e8-be61-147a55ad65d9",
        "authorId" : "8076e56f-768c-4f89-90e6-045ef34e1525",
        "body" : "Ack. Thanks for explanation.\n",
        "createdAt" : "2015-04-20T18:02:03Z",
        "updatedAt" : "2015-04-20T19:00:38Z",
        "lastEditedBy" : "8076e56f-768c-4f89-90e6-045ef34e1525",
        "tags" : [
        ]
      }
    ],
    "commit" : "a34a38395b03c991b6a94e5a6f8fe35a4eb4ff95",
    "line" : 51,
    "diffHunk" : "@@ -1,1 +241,245 @@\t\tobject = &api.List{Items: objects}\n\t\tconverted, err := tryConvert(api.Scheme, object, version, latest.Version)\n\t\tif err != nil {\n\t\t\treturn nil, err\n\t\t}"
  }
]