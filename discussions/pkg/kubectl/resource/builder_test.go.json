[
  {
    "id" : "f3ed49c1-7cfb-4cba-aaa0-e99ac962e2ef",
    "prId" : 54024,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/54024#pullrequestreview-70279951",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e2717e07-248d-4705-b14f-52ecf5aabbb0",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "these pods are internal Pod objects... I didn't think it was expected to have internal objects in a v1.List",
        "createdAt" : "2017-10-17T20:56:25Z",
        "updatedAt" : "2017-10-18T16:31:00Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "1903e24a-3d25-4211-9403-3bd0e138c674",
        "parentId" : "e2717e07-248d-4705-b14f-52ecf5aabbb0",
        "authorId" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "body" : "Do you know what are the side effects of doing so?  The test seems to behave as expected.",
        "createdAt" : "2017-10-17T22:34:12Z",
        "updatedAt" : "2017-10-18T16:31:00Z",
        "lastEditedBy" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "tags" : [
        ]
      },
      {
        "id" : "43b3d8da-c2c8-41eb-9c0c-3ce59993d8ec",
        "parentId" : "e2717e07-248d-4705-b14f-52ecf5aabbb0",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "if the expectation is that `Object()` returns something you could pass to serialization without needing to do conversion, then we should be dealing in external objects",
        "createdAt" : "2017-10-17T22:40:31Z",
        "updatedAt" : "2017-10-18T16:31:00Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "7c2f140b-6cd8-43f3-b985-ba82cac5f284",
        "parentId" : "e2717e07-248d-4705-b14f-52ecf5aabbb0",
        "authorId" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "body" : "Ah I see, if the Object is serialized directly, something will need to convert the internal objects it contains.  If the mapper is doing the conversions, perhaps it could provide an interface that takes a list of objects and puts them in the correct list - either an internal list for internal objects, and an external list for external objects?  I am guessing we want the internal/external-ness of the list to be consistent with its Items.",
        "createdAt" : "2017-10-18T00:47:23Z",
        "updatedAt" : "2017-10-18T16:31:00Z",
        "lastEditedBy" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "tags" : [
        ]
      },
      {
        "id" : "f4262f10-25d0-481c-9706-b1e7841ca158",
        "parentId" : "e2717e07-248d-4705-b14f-52ecf5aabbb0",
        "authorId" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "body" : "Or rather the Decoder.",
        "createdAt" : "2017-10-18T00:48:00Z",
        "updatedAt" : "2017-10-18T16:31:00Z",
        "lastEditedBy" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "tags" : [
        ]
      },
      {
        "id" : "885c07f9-e72a-4c0b-856e-6597cd2b0bf4",
        "parentId" : "e2717e07-248d-4705-b14f-52ecf5aabbb0",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "> I am guessing we want the internal/external-ness of the list to be consistent with its Items.\r\n\r\nThat was my thought, but I hadn't chased it down to know. Switching the list to external while leaving the objects internal definitely seems like the type of change that could break assumptions about whether conversion was needed elsewhere. ",
        "createdAt" : "2017-10-18T01:09:38Z",
        "updatedAt" : "2017-10-18T16:31:00Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "93d1a650-0c36-4c47-8308-858340aa534b",
        "parentId" : "e2717e07-248d-4705-b14f-52ecf5aabbb0",
        "authorId" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "body" : "Sounds like this is resolved to - putting internal objects in an external list is preferred over internal objects in an internal list.",
        "createdAt" : "2017-10-18T16:34:38Z",
        "updatedAt" : "2017-10-18T16:34:39Z",
        "lastEditedBy" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "tags" : [
        ]
      },
      {
        "id" : "95f28603-f4c4-4057-afa9-0a96f4d250e7",
        "parentId" : "e2717e07-248d-4705-b14f-52ecf5aabbb0",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "> Sounds like this is resolved to - putting internal objects in an external list is preferred over internal objects in an internal list.\r\n\r\nI don't see how that follows from this:\r\n\r\n> v1.List should work with external objects (internal.List can also have external objects)\r\n\r\ninternal list can contain external objects (since serialization walks all items making sure they are converted to external if needed an no-ops on already-external ones)\r\n\r\nv1.List should work with external objects",
        "createdAt" : "2017-10-18T16:44:54Z",
        "updatedAt" : "2017-10-18T16:44:54Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "fd169a621870551d3e14f357de83a7d0f1edd3a5",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +902,906 @@\texpected := &v1.List{\n\t\tItems: []runtime.RawExtension{\n\t\t\t{Object: &pods.Items[0]},\n\t\t\t{Object: &pods.Items[1]},\n\t\t\t{Object: &svc.Items[0]},"
  },
  {
    "id" : "13d6b7b4-2d81-46ea-877d-bb93a52f4de2",
    "prId" : 30713,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "66e42213-dae3-450c-9cf7-f3c3cd8ab02a",
        "parentId" : null,
        "authorId" : "ad267631-96d1-4bad-b913-e8d6342e65a2",
        "body" : "You can get `unexpected response: nil` here, maybe specifically checking for nil after `Visit` and erroring \"unexpected non-error\" would be better.\n",
        "createdAt" : "2016-08-18T20:16:47Z",
        "updatedAt" : "2016-08-18T20:16:47Z",
        "lastEditedBy" : "ad267631-96d1-4bad-b913-e8d6342e65a2",
        "tags" : [
        ]
      },
      {
        "id" : "72f9e717-70e4-4102-8ea5-63b7147f0dac",
        "parentId" : "66e42213-dae3-450c-9cf7-f3c3cd8ab02a",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "I prefer to check for simpler conditions - if I got an error here, i'd usually just go to the test and reproduce it.  Having extra conditions makes the test harder to read, rather than easier to debug.\n",
        "createdAt" : "2016-08-19T14:17:12Z",
        "updatedAt" : "2016-08-19T14:17:12Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "7469da2e-b969-4d06-bdfb-84d249544e22",
        "parentId" : "66e42213-dae3-450c-9cf7-f3c3cd8ab02a",
        "authorId" : "ad267631-96d1-4bad-b913-e8d6342e65a2",
        "body" : "np, works for me.\n",
        "createdAt" : "2016-08-19T15:00:56Z",
        "updatedAt" : "2016-08-19T15:00:56Z",
        "lastEditedBy" : "ad267631-96d1-4bad-b913-e8d6342e65a2",
        "tags" : [
        ]
      }
    ],
    "commit" : "994e9e3c629c9d29b4985bd516c658900c4e2f3e",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +645,649 @@\terr := b.Do().Visit(test.Handle)\n\tif err == nil || !strings.Contains(err.Error(), \"must be RESOURCE/NAME\") {\n\t\tt.Fatalf(\"unexpected response: %v\", err)\n\t}\n}"
  },
  {
    "id" : "d05bd6d8-5b0d-4ac4-9d08-298383074350",
    "prId" : 18165,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2b84b896-dba6-4f12-93fa-32a0c467d80e",
        "parentId" : null,
        "authorId" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "body" : "add `\"\"` and invalid test cases such as `\"rc/foo\", \"bar\"`\n",
        "createdAt" : "2015-12-17T05:56:27Z",
        "updatedAt" : "2015-12-17T20:36:19Z",
        "lastEditedBy" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "tags" : [
        ]
      },
      {
        "id" : "f4aea08a-7106-499a-bc64-61a14dd50201",
        "parentId" : "2b84b896-dba6-4f12-93fa-32a0c467d80e",
        "authorId" : "ad267631-96d1-4bad-b913-e8d6342e65a2",
        "body" : "Added\n",
        "createdAt" : "2015-12-17T21:14:19Z",
        "updatedAt" : "2015-12-17T21:14:19Z",
        "lastEditedBy" : "ad267631-96d1-4bad-b913-e8d6342e65a2",
        "tags" : [
        ]
      }
    ],
    "commit" : "717896eae3ac85dd8efc68c1f6add094dd4d37b5",
    "line" : null,
    "diffHunk" : "@@ -1,1 +1051,1055 @@\t\t\texpectedError:   fmt.Errorf(\"when passing arguments in resource/name form, all arguments must include the resource\"),\n\t\t},\n\t}\n\tfor _, test := range tests {\n\t\thasNames, err := HasNames(test.args)"
  },
  {
    "id" : "f5dcf82c-5c34-4989-8aa4-3ddb4483ed1e",
    "prId" : 14461,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "641b5980-9433-4496-a3eb-381018323dd3",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "what about \"group/resource/name,group2/resource2\"?\n",
        "createdAt" : "2015-09-25T18:10:52Z",
        "updatedAt" : "2015-10-06T20:12:51Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "cf3fd92e-1920-4b73-b3a6-204b427a4b45",
        "parentId" : "641b5980-9433-4496-a3eb-381018323dd3",
        "authorId" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "body" : "Added\n",
        "createdAt" : "2015-09-25T19:12:27Z",
        "updatedAt" : "2015-10-06T20:12:51Z",
        "lastEditedBy" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "tags" : [
        ]
      }
    ],
    "commit" : "57388f9f9436e9154b068e01a414be14035e699d",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +591,595 @@\t\t\texpected: true,\n\t\t},\n\t\t\"group/resource/name\": {\n\t\t\targs:     []string{\"experimental/deployments/foo\"},\n\t\t\texpected: true,"
  },
  {
    "id" : "58249c2a-c82b-4b60-8ac1-dd98b25e6511",
    "prId" : 14461,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cfd3b529-3aac-4aaa-86f8-f1529e720953",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "False? but the first arg has a name?\n",
        "createdAt" : "2015-09-25T22:05:36Z",
        "updatedAt" : "2015-10-06T20:12:51Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "e829724c-02f2-489e-b48a-755ff14e79a3",
        "parentId" : "cfd3b529-3aac-4aaa-86f8-f1529e720953",
        "authorId" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "body" : "Users can only use comma to separate types (but not names) so it returns false in `hasNamesArg`. In the end this input will be interpreted by kubectl as a `group/resource` named `name,group2/resource2` (and will throw an error message saying this resource isn't found). \n",
        "createdAt" : "2015-09-25T22:25:57Z",
        "updatedAt" : "2015-10-06T20:12:51Z",
        "lastEditedBy" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "tags" : [
        ]
      },
      {
        "id" : "1f6c824d-1273-41cb-83e1-c38d303aa9e4",
        "parentId" : "cfd3b529-3aac-4aaa-86f8-f1529e720953",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "OK\n",
        "createdAt" : "2015-09-29T19:51:41Z",
        "updatedAt" : "2015-10-06T20:12:51Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "57388f9f9436e9154b068e01a414be14035e699d",
    "line" : 43,
    "diffHunk" : "@@ -1,1 +605,609 @@\t\t\"group/resource/name,group2/resource2\": {\n\t\t\targs:     []string{\"experimental/deployments/foo,controller/deamonset\"},\n\t\t\texpected: false,\n\t\t},\n\t}"
  },
  {
    "id" : "42775a83-ad40-4085-86bc-351b030e03d7",
    "prId" : 3451,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "64903dca-c631-4836-b987-43ebfd7d1b1e",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "nit: these usually go after the k8s packages\n",
        "createdAt" : "2015-01-14T07:26:01Z",
        "updatedAt" : "2015-01-14T07:26:01Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "ec803cb809981c117f9652c5d2cfb6a6793e49d5",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +26,30 @@\t\"testing\"\n\n\t\"github.com/ghodss/yaml\"\n\n\t\"github.com/GoogleCloudPlatform/kubernetes/pkg/api\""
  }
]