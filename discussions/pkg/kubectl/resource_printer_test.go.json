[
  {
    "id" : "1a733465-9ec5-4301-a3f4-c6c457cb0443",
    "prId" : 27379,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b685e4ff-2ebd-48dd-b510-6a81926eebf9",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "Wow.  It might be time to re-assess life choices..... :)\n",
        "createdAt" : "2016-06-14T18:15:59Z",
        "updatedAt" : "2016-07-01T17:30:29Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "69a7f267-9acf-4abc-b798-a3f70fddef5b",
        "parentId" : "b685e4ff-2ebd-48dd-b510-6a81926eebf9",
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "There are 7 false values, is there something you don't understand?\n",
        "createdAt" : "2016-07-01T21:21:26Z",
        "updatedAt" : "2016-07-01T21:21:26Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      }
    ],
    "commit" : "7df60d6b640c263996e60286ff5497a2a0b3d33b",
    "line" : 72,
    "diffHunk" : "@@ -1,1 +1202,1206 @@\tbuf := bytes.NewBuffer([]byte{})\n\tfor _, test := range tests {\n\t\tprintPod(&test.pod, buf, PrintOptions{false, false, false, false, false, false, false, \"\", []string{}})\n\t\t// We ignore time\n\t\tif !strings.HasPrefix(buf.String(), test.expect) {"
  },
  {
    "id" : "ee747912-3416-4a67-be59-e6d77e80e6fa",
    "prId" : 12112,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "06e1eda0-d294-4fb7-adfb-194559f17fd6",
        "parentId" : null,
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "Add a test with all = true?\n",
        "createdAt" : "2015-08-03T22:02:57Z",
        "updatedAt" : "2015-08-18T20:47:50Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      },
      {
        "id" : "59e208c2-4ef1-43a4-84b7-7aaae1e1d997",
        "parentId" : "06e1eda0-d294-4fb7-adfb-194559f17fd6",
        "authorId" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "body" : "Done. Added in `TestPrintPod`. \n",
        "createdAt" : "2015-08-07T18:35:07Z",
        "updatedAt" : "2015-08-18T20:47:50Z",
        "lastEditedBy" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "tags" : [
        ]
      }
    ],
    "commit" : "44a7a52a946fd349ef0f1dc4d42af831fde97b55",
    "line" : 203,
    "diffHunk" : "@@ -1,1 +1183,1187 @@\tbuf := bytes.NewBuffer([]byte{})\n\tfor _, test := range tests {\n\t\tprintPod(&test.pod, buf, false, false, false, test.labelColumns)\n\t\t// We ignore time\n\t\tif !strings.HasPrefix(buf.String(), test.startsWith) || !strings.HasSuffix(buf.String(), test.endsWith) {"
  },
  {
    "id" : "ebd5f9e4-085f-4c30-b630-15042c54a72d",
    "prId" : 5939,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6b6258fa-e279-4e65-b0b7-0ca05bf3abe2",
        "parentId" : null,
        "authorId" : "9d07de69-76c2-43bd-9590-55d9aded200d",
        "body" : "It can wait until a later PR but it would be goo to test the \"more\" case.\n",
        "createdAt" : "2015-03-26T17:56:18Z",
        "updatedAt" : "2015-03-27T19:36:49Z",
        "lastEditedBy" : "9d07de69-76c2-43bd-9590-55d9aded200d",
        "tags" : [
        ]
      }
    ],
    "commit" : "8ae203825b3b28c45ac7d23f3d107c66df9dad7c",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +474,478 @@\t\t\t\tAddresses: []api.EndpointAddress{{IP: \"127.0.0.1\"}, {IP: \"localhost\"}},\n\t\t\t\tPorts:     []api.EndpointPort{{Port: 8080}},\n\t\t\t}}},\n\t}\n\t// map of printer name to set of objects it should fail on."
  },
  {
    "id" : "bb97b0f8-b6f7-4ce0-b939-e55ef0f46480",
    "prId" : 3004,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "179a2c3f-d8f4-4fe6-a189-a109d5b6d1de",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "I deliberately made printers take the version to prevent the case where people wrote unversioned stuff out, this test was supposed to test that.\n",
        "createdAt" : "2015-01-13T23:00:10Z",
        "updatedAt" : "2015-01-13T23:00:10Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "2edeb9f4-f304-4b05-9d4d-1b88b299665d",
        "parentId" : "179a2c3f-d8f4-4fe6-a189-a109d5b6d1de",
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "In general, I find our code dangerously under-commented. It's difficult to tell the intent and/or assumptions unless one understands all of the code, which few of us do.\n",
        "createdAt" : "2015-01-13T23:15:04Z",
        "updatedAt" : "2015-01-13T23:15:04Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      }
    ],
    "commit" : "2151afe33439a84a1eca1eadd7b0a05ae3e3d462",
    "line" : 160,
    "diffHunk" : "@@ -1,1 +285,289 @@func TestTemplateEmitsVersionedObjects(t *testing.T) {\n\t// kind is always blank in memory and set on the wire\n\tprinter, err := NewTemplatePrinter([]byte(`{{.kind}}`))\n\tif err != nil {\n\t\tt.Fatalf(\"tmpl fail: %v\", err)"
  },
  {
    "id" : "55396de2-321b-4826-8c5a-af6c66a19a7a",
    "prId" : 3004,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f568c1ec-cc03-4ddf-8a02-b0ad97251cab",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "The problem is that nothing forces people to use a printer correctly by doing this conversion step.\n",
        "createdAt" : "2015-01-13T23:00:44Z",
        "updatedAt" : "2015-01-13T23:00:44Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "d4692de5-9499-45c0-9896-906493312c1f",
        "parentId" : "f568c1ec-cc03-4ddf-8a02-b0ad97251cab",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Maybe we should make external objects conform to a different interface\n",
        "createdAt" : "2015-01-14T00:51:27Z",
        "updatedAt" : "2015-01-14T00:51:27Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "d430b342-0070-4722-8f3a-3eaa80b4c0db",
        "parentId" : "f568c1ec-cc03-4ddf-8a02-b0ad97251cab",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Like\n\n```\ntype ExternalObject interface {\n  runtime.Object\n  VersionAndKind() (string, string)\n}\n```\n",
        "createdAt" : "2015-01-14T00:52:51Z",
        "updatedAt" : "2015-01-14T00:52:51Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "2d381ffb-f560-462b-b783-5e8c368c6599",
        "parentId" : "f568c1ec-cc03-4ddf-8a02-b0ad97251cab",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "The underlying problem was that a printer had to deal with objects of different api versions, so no single printer that only accepted a single printer would work.\n",
        "createdAt" : "2015-01-14T00:54:24Z",
        "updatedAt" : "2015-01-14T00:54:24Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "b47fe276-63bf-4aba-b00e-723eeb65e48b",
        "parentId" : "f568c1ec-cc03-4ddf-8a02-b0ad97251cab",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Single version.\n",
        "createdAt" : "2015-01-14T00:54:53Z",
        "updatedAt" : "2015-01-14T00:54:53Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "2151afe33439a84a1eca1eadd7b0a05ae3e3d462",
    "line" : 164,
    "diffHunk" : "@@ -1,1 +289,293 @@\t\tt.Fatalf(\"tmpl fail: %v\", err)\n\t}\n\tobj, err := api.Scheme.ConvertToVersion(&api.Pod{}, \"v1beta1\")\n\tif err != nil {\n\t\tt.Fatalf(\"unexpected error: %v\", err)"
  }
]