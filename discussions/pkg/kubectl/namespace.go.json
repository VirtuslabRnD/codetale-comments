[
  {
    "id" : "632b5109-c475-4842-9d0c-c5afa64f2721",
    "prId" : 16028,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d8a04d48-1292-49c5-ae96-e7ef04b56941",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "Is this strictly required?  I'd rather try to remove the use of this old interface.\n",
        "createdAt" : "2015-12-11T14:14:58Z",
        "updatedAt" : "2015-12-14T18:43:52Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "655b7b74-4a1a-473a-a032-1f455d55b028",
        "parentId" : "d8a04d48-1292-49c5-ae96-e7ef04b56941",
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "If the idea is to support the re-use of config generation in other commands (https://github.com/kubernetes/kubernetes/pull/14918), then I want to make sure I don't invent a method of config generation that loses that ability.  This is the tacit compromise I was making in this PR where a generator can now be used with either constructor options or parameter injection.\n",
        "createdAt" : "2015-12-11T15:14:10Z",
        "updatedAt" : "2015-12-14T18:43:52Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      }
    ],
    "commit" : "5e0948586c35e7e7f4f7ccc39411d2726c8e767a",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +31,35 @@\n// Ensure it supports the generator pattern that uses parameter injection\nvar _ Generator = &NamespaceGeneratorV1{}\n\n// Ensure it supports the generator pattern that uses parameters specified during construction"
  }
]