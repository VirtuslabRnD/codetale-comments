[
  {
    "id" : "52364301-3f82-4bee-b8dd-0d3b5c5a70e1",
    "prId" : 46798,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/46798#pullrequestreview-48463137",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "22650150-12e1-4483-bbeb-eefffdc937ed",
        "parentId" : null,
        "authorId" : "cdb05f24-d700-4d96-a683-3e4de7effbf5",
        "body" : "Why change `Service` to `Pod` here and below? Did I miss something?",
        "createdAt" : "2017-07-06T20:50:43Z",
        "updatedAt" : "2017-07-06T20:51:08Z",
        "lastEditedBy" : "cdb05f24-d700-4d96-a683-3e4de7effbf5",
        "tags" : [
        ]
      },
      {
        "id" : "e1a23a6e-6acd-4cdc-a68d-cddc55f982d9",
        "parentId" : "22650150-12e1-4483-bbeb-eefffdc937ed",
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "ReaperFor will return nil for service now (since there is no explicit Service reaper). Hence updated the test to use Kind Pod instead of Kind Service.",
        "createdAt" : "2017-07-06T21:04:16Z",
        "updatedAt" : "2017-07-06T21:04:16Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      },
      {
        "id" : "07673f4c-29cf-4f37-b9b3-26f1812ba742",
        "parentId" : "22650150-12e1-4483-bbeb-eefffdc937ed",
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "Test will fail without this change",
        "createdAt" : "2017-07-06T21:04:46Z",
        "updatedAt" : "2017-07-06T21:04:46Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      }
    ],
    "commit" : "340e8b18527a0dc16cb5bae65974f773c6fce667",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +559,563 @@}\n\ntype noDeletePod struct {\n\tcoreclient.PodInterface\n}"
  },
  {
    "id" : "e9328719-5650-41c5-b905-d3eb6c47f07e",
    "prId" : 46798,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/46798#pullrequestreview-48498540",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3eac7142-e2cc-4002-9113-b5b0c37217c0",
        "parentId" : null,
        "authorId" : "cdb05f24-d700-4d96-a683-3e4de7effbf5",
        "body" : "What case we try to mock here? Why a pod can not be deleted?\r\n",
        "createdAt" : "2017-07-06T22:02:13Z",
        "updatedAt" : "2017-07-06T22:03:10Z",
        "lastEditedBy" : "cdb05f24-d700-4d96-a683-3e4de7effbf5",
        "tags" : [
        ]
      },
      {
        "id" : "e72db009-aa57-424f-bfc5-2eb0c4d8355e",
        "parentId" : "3eac7142-e2cc-4002-9113-b5b0c37217c0",
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "This mocks when apiserver returns success on GET, but returns an error on DELETE request.\r\nThe error can be due to many reasons. Some examples:\r\n* invalid request (due to kubectl and apiserver version skew).\r\n* Object deleted by someone else after GET returned but before DELETE request is sent by kubectl.\r\n* Internal server error on the server due to a bug in DELETE logic.",
        "createdAt" : "2017-07-07T00:41:43Z",
        "updatedAt" : "2017-07-07T00:41:43Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      }
    ],
    "commit" : "340e8b18527a0dc16cb5bae65974f773c6fce667",
    "line" : 98,
    "diffHunk" : "@@ -1,1 +636,640 @@\t\t\t},\n\t\t\texpectError: true,\n\t\t\ttest:        \"stop pod fails, can't delete\",\n\t\t},\n\t}"
  },
  {
    "id" : "8738e860-8f8b-4e1f-8aa1-24e2872e1471",
    "prId" : 12645,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9b500de5-001f-4415-a087-a8acebabb5ea",
        "parentId" : null,
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "Add a `continue` here\n",
        "createdAt" : "2015-08-24T06:39:15Z",
        "updatedAt" : "2015-08-25T08:05:34Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      }
    ],
    "commit" : "8e4d74988aecc8dd053b59d6bf82128627341386",
    "line" : null,
    "diffHunk" : "@@ -1,1 +248,252 @@\t\ts, err := reaper.Stop(ns, name, 0, nil)\n\t\tif !reflect.DeepEqual(err, test.StopError) {\n\t\t\tt.Errorf(\"%s unexpected error: %v\", test.Name, err)\n\t\t\tcontinue\n\t\t}"
  },
  {
    "id" : "3245969c-11ce-41ef-a97e-df21ad8e725c",
    "prId" : 12645,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "36929e38-66bb-48ea-be72-196031a4db2a",
        "parentId" : null,
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "Add a `continue` here\n",
        "createdAt" : "2015-08-24T06:39:20Z",
        "updatedAt" : "2015-08-25T08:05:34Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      }
    ],
    "commit" : "8e4d74988aecc8dd053b59d6bf82128627341386",
    "line" : null,
    "diffHunk" : "@@ -1,1 +253,257 @@\n\t\tif s != test.StopMessage {\n\t\t\tt.Errorf(\"%s expected '%s', got '%s'\", test.Name, test.StopMessage, s)\n\t\t\tcontinue\n\t\t}"
  },
  {
    "id" : "f550b058-fd57-49ed-8fd8-d5cf458d76c2",
    "prId" : 12645,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ca7e4777-e116-44fc-9182-74d1192ecfe8",
        "parentId" : null,
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "Add a `continue` here\n",
        "createdAt" : "2015-08-24T06:39:25Z",
        "updatedAt" : "2015-08-25T08:05:34Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      },
      {
        "id" : "499fb7a6-c2d3-4693-88fb-bbed6733d771",
        "parentId" : "ca7e4777-e116-44fc-9182-74d1192ecfe8",
        "authorId" : "9f5dc2fc-1039-44a5-863f-115658f282e7",
        "body" : "@kargakis right thanks.\n",
        "createdAt" : "2015-08-24T06:56:07Z",
        "updatedAt" : "2015-08-25T08:05:34Z",
        "lastEditedBy" : "9f5dc2fc-1039-44a5-863f-115658f282e7",
        "tags" : [
        ]
      }
    ],
    "commit" : "8e4d74988aecc8dd053b59d6bf82128627341386",
    "line" : null,
    "diffHunk" : "@@ -1,1 +258,262 @@\t\tactions := fake.Actions()\n\t\tif len(actions) != len(test.ExpectedActions) {\n\t\t\tt.Errorf(\"%s unexpected actions: %v, expected %d actions got %d\", test.Name, actions, len(test.ExpectedActions), len(actions))\n\t\t\tcontinue\n\t\t}"
  }
]