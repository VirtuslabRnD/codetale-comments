[
  {
    "id" : "dbcd2111-1cb5-4b3d-8559-f812b569d6f4",
    "prId" : 28111,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ab17f1ea-b0d2-416f-9f10-fc31b29c15d3",
        "parentId" : null,
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "This doesn't need to be a field in the rolling updater. Make it a global variable (I know... I hate those)\n",
        "createdAt" : "2016-06-28T16:43:51Z",
        "updatedAt" : "2016-06-30T11:13:12Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      },
      {
        "id" : "2fc71deb-37c4-450a-80f6-9926b9f4e81c",
        "parentId" : "ab17f1ea-b0d2-416f-9f10-fc31b29c15d3",
        "authorId" : "ec801d33-3a38-47a2-a267-f72db1de574b",
        "body" : "I will rather prefer to keep it as the unexported field for updater, so I don't override it globally for every updater in testing. Also it is unexported, so should cause no harm.\n",
        "createdAt" : "2016-06-29T08:32:10Z",
        "updatedAt" : "2016-06-30T11:13:12Z",
        "lastEditedBy" : "ec801d33-3a38-47a2-a267-f72db1de574b",
        "tags" : [
        ]
      }
    ],
    "commit" : "7ea28e42c0eae22c2f0d3e17f07565f65da4af04",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +124,128 @@\tgetReadyPods func(oldRc, newRc *api.ReplicationController, minReadySeconds int32) (int32, int32, error)\n\t// nowFn returns the current time used to calculate the minReadySeconds\n\tnowFn func() unversioned.Time\n}\n"
  },
  {
    "id" : "fc2300b8-6f68-4f98-8071-152311cafc64",
    "prId" : 21273,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b9888acf-de49-478c-bc4e-5eb4905edfaf",
        "parentId" : null,
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "This is better. Good catch.\n",
        "createdAt" : "2016-02-16T21:35:58Z",
        "updatedAt" : "2016-02-19T14:42:10Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      }
    ],
    "commit" : "35fab99af760f1cea72680f435b4322764652f91",
    "line" : 65,
    "diffHunk" : "@@ -1,1 +366,370 @@// If a pod is observed as being ready, it's considered ready even\n// if it later becomes notReady.\nfunc (r *RollingUpdater) readyPods(oldRc, newRc *api.ReplicationController) (int, int, error) {\n\tcontrollers := []*api.ReplicationController{oldRc, newRc}\n\toldReady := 0"
  },
  {
    "id" : "71cf64bc-5511-4038-81c2-9784ca80aea6",
    "prId" : 19366,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5c3109c0-1a08-4a52-82f3-f0945a52cf28",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "I would have expect this to be equal to `max(spec.replicas, status.replicas)`.  I thought the `originalReplicasAnnotation` tracked previous state.\n",
        "createdAt" : "2016-01-11T13:33:09Z",
        "updatedAt" : "2016-01-20T14:21:23Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "251339b1-374d-4369-9da6-98643cf979df",
        "parentId" : "5c3109c0-1a08-4a52-82f3-f0945a52cf28",
        "authorId" : "f04ec747-f3ff-4334-a66e-6daaf4497091",
        "body" : "I think you're right.\n",
        "createdAt" : "2016-01-11T14:34:07Z",
        "updatedAt" : "2016-01-20T14:21:23Z",
        "lastEditedBy" : "f04ec747-f3ff-4334-a66e-6daaf4497091",
        "tags" : [
        ]
      },
      {
        "id" : "bbf784a0-05a3-49a6-aa9f-cc60020f9938",
        "parentId" : "5c3109c0-1a08-4a52-82f3-f0945a52cf28",
        "authorId" : "f04ec747-f3ff-4334-a66e-6daaf4497091",
        "body" : "Fixed\n",
        "createdAt" : "2016-01-11T14:38:41Z",
        "updatedAt" : "2016-01-20T14:21:23Z",
        "lastEditedBy" : "f04ec747-f3ff-4334-a66e-6daaf4497091",
        "tags" : [
        ]
      }
    ],
    "commit" : "eb778217ad1e2a9588caeaaf9644f2c5483d3493",
    "line" : null,
    "diffHunk" : "@@ -1,1 +220,224 @@\t// (equivalent to 100% maxUnavailable).\n\tif desired == 0 {\n\t\tmaxUnavailable = original\n\t\tminAvailable = 0\n\t}"
  },
  {
    "id" : "028b4ba3-5c99-45bf-8416-080eca50bf97",
    "prId" : 18075,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cfe66fb3-02ab-4d5a-b9cc-0368781fea72",
        "parentId" : null,
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "Out of curiosity, did you automate this kind of changes? If so, how did you do that?\n",
        "createdAt" : "2015-12-03T02:13:51Z",
        "updatedAt" : "2015-12-03T08:54:22Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      },
      {
        "id" : "937b8f7e-ad5d-48de-a115-053080abdc40",
        "parentId" : "cfe66fb3-02ab-4d5a-b9cc-0368781fea72",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "No - I did it manually.\n[It was easy to fix it with sed when both selectors was Everything() - all other changes I did manually].\n",
        "createdAt" : "2015-12-03T07:24:03Z",
        "updatedAt" : "2015-12-03T08:54:22Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "6dcb689d4ee581a043d10dc8fb6a74b32018b12b",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +681,685 @@\t// doesn't see the update to its pod template and creates a new pod with the old labels after\n\t// we've finished re-adopting existing pods to the rc.\n\tselector = labels.SelectorFromSet(selectorCopy)\n\toptions = unversioned.ListOptions{LabelSelector: unversioned.LabelSelector{selector}}\n\tpodList, err = client.Pods(namespace).List(options)"
  },
  {
    "id" : "55ad2892-38f3-4c7a-86ff-c402d3bf4a90",
    "prId" : 14670,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2e0d2e5c-b29e-4473-bf70-5711b6acf6fb",
        "parentId" : null,
        "authorId" : "f04ec747-f3ff-4334-a66e-6daaf4497091",
        "body" : "Minor: while you're at it, can you update these to use godoc conventions (starting the sentence with the type name)? e.g. \"MaxUnavailable is the maximum number of pods [...]\"\n",
        "createdAt" : "2015-09-28T19:08:23Z",
        "updatedAt" : "2015-09-28T21:51:41Z",
        "lastEditedBy" : "f04ec747-f3ff-4334-a66e-6daaf4497091",
        "tags" : [
        ]
      },
      {
        "id" : "4baff863-fbf5-4a47-b6ca-344c252d43c9",
        "parentId" : "2e0d2e5c-b29e-4473-bf70-5711b6acf6fb",
        "authorId" : "f04ec747-f3ff-4334-a66e-6daaf4497091",
        "body" : "Aside from that, lgtm.\n",
        "createdAt" : "2015-09-28T19:08:53Z",
        "updatedAt" : "2015-09-28T21:51:41Z",
        "lastEditedBy" : "f04ec747-f3ff-4334-a66e-6daaf4497091",
        "tags" : [
        ]
      },
      {
        "id" : "6dfbf637-9f08-4e49-a800-ec97f7784050",
        "parentId" : "2e0d2e5c-b29e-4473-bf70-5711b6acf6fb",
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "Done\n",
        "createdAt" : "2015-09-28T19:57:11Z",
        "updatedAt" : "2015-09-28T21:51:41Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      }
    ],
    "commit" : "c651c1ae305bc3bb0952a88198b05b67315f9eff",
    "line" : null,
    "diffHunk" : "@@ -1,1 +62,66 @@\tCleanupPolicy RollingUpdaterCleanupPolicy\n\t// MaxUnavailable is the maximum number of pods that can be unavailable during the update.\n\t// Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%).\n\t// Absolute number is calculated from percentage by rounding up.\n\t// This can not be 0 if MaxSurge is 0."
  },
  {
    "id" : "99bd85f3-8187-40a4-863f-4ee438852760",
    "prId" : 12259,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a0144952-70aa-42b8-9a80-9979813a196a",
        "parentId" : null,
        "authorId" : "8076e56f-768c-4f89-90e6-045ef34e1525",
        "body" : "This should not be hard coded. [RollingUpdaterConfig](https://github.com/alex-mohr/kubernetes/blob/kubectl/pkg/kubectl/rolling_updater.go#L66) defines a timeout to use when updating controllers. We should be using that.\n",
        "createdAt" : "2015-08-05T16:41:39Z",
        "updatedAt" : "2015-08-05T16:41:39Z",
        "lastEditedBy" : "8076e56f-768c-4f89-90e6-045ef34e1525",
        "tags" : [
        ]
      },
      {
        "id" : "922f7102-7c4f-44b9-9190-9a95f9506063",
        "parentId" : "a0144952-70aa-42b8-9a80-9979813a196a",
        "authorId" : "edc2bb46-795f-4aea-9ce4-1822d9e81d73",
        "body" : "Okay.  Figuring out how to pass that around looks like it'd require more time than I have time for atm -- have to get to other high pri stuff, so either close this PR or merge until you (or whoever snuck that in) gets a chance to do the real fix?\n",
        "createdAt" : "2015-08-05T17:48:32Z",
        "updatedAt" : "2015-08-05T17:48:32Z",
        "lastEditedBy" : "edc2bb46-795f-4aea-9ce4-1822d9e81d73",
        "tags" : [
        ]
      },
      {
        "id" : "f7709130-114b-4f0a-a47f-90cf4e3688d1",
        "parentId" : "a0144952-70aa-42b8-9a80-9979813a196a",
        "authorId" : "8076e56f-768c-4f89-90e6-045ef34e1525",
        "body" : "Since it's hardcoded now, fine to put a TODO in to pass the timeout thru and merge as is.\n",
        "createdAt" : "2015-08-05T17:50:06Z",
        "updatedAt" : "2015-08-05T17:50:06Z",
        "lastEditedBy" : "8076e56f-768c-4f89-90e6-045ef34e1525",
        "tags" : [
        ]
      }
    ],
    "commit" : "37418afe8fbce36a426e07221fa8f6dfac3f73b2",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +315,319 @@\tvar err error\n\toldRc := rc\n\terr = wait.Poll(10*time.Millisecond, 1*time.Minute, func() (bool, error) {\n\t\t// Apply the update, then attempt to push it to the apiserver.\n\t\tapplyUpdate(rc)"
  },
  {
    "id" : "7e75c015-bcf2-44ed-bc45-bdffa80ac044",
    "prId" : 11942,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f3abc905-f43f-41d5-bc02-48a965f1ceab",
        "parentId" : null,
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "I'm not in love with this but for now it makes this more testable.  \n",
        "createdAt" : "2015-07-28T20:49:57Z",
        "updatedAt" : "2015-09-01T16:54:11Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "da5e4d7bd52d8babfccebf4da2b78de8a27d30a6",
    "line" : 101,
    "diffHunk" : "@@ -1,1 +124,128 @@\t}\n\t// Inject real implementations.\n\tupdater.scaleAndWait = updater.scaleAndWaitWithScaler\n\tupdater.getOrCreateTargetController = updater.getOrCreateTargetControllerWithClient\n\tupdater.waitForReadyPods = updater.pollForReadyPods"
  },
  {
    "id" : "ca625b55-a650-469f-a788-a83b2a30d442",
    "prId" : 11942,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a7f9190c-0e0c-42bb-8314-a09af490a19a",
        "parentId" : null,
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "comment and function name dont match.\nI think you wanted to rename the function waitForAvailablePods?\n",
        "createdAt" : "2015-08-05T00:56:25Z",
        "updatedAt" : "2015-09-01T16:54:11Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      }
    ],
    "commit" : "da5e4d7bd52d8babfccebf4da2b78de8a27d30a6",
    "line" : null,
    "diffHunk" : "@@ -1,1 +114,118 @@\t// the old and new controllers, and should return the amount of old and new\n\t// ready.\n\twaitForReadyPods func(interval, timeout time.Duration, oldRc, newRc *api.ReplicationController) (int, int, error)\n}\n"
  },
  {
    "id" : "3f97940b-efa4-48b5-8d14-469a7a3d2079",
    "prId" : 11942,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "62846b0e-951b-4884-bcc4-67f91c46192d",
        "parentId" : null,
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "So we decided to keep this?\n",
        "createdAt" : "2015-08-06T07:40:09Z",
        "updatedAt" : "2015-09-01T16:54:11Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      },
      {
        "id" : "126fdaef-513b-4598-962f-f8b417219cec",
        "parentId" : "62846b0e-951b-4884-bcc4-67f91c46192d",
        "authorId" : "f04ec747-f3ff-4334-a66e-6daaf4497091",
        "body" : "Discussed in https://github.com/openshift/origin/pull/3908#discussion_r35654620\n",
        "createdAt" : "2015-08-06T13:40:37Z",
        "updatedAt" : "2015-09-01T16:54:11Z",
        "lastEditedBy" : "f04ec747-f3ff-4334-a66e-6daaf4497091",
        "tags" : [
        ]
      },
      {
        "id" : "93fb7d9f-660b-4df1-8271-c730b7a667cf",
        "parentId" : "62846b0e-951b-4884-bcc4-67f91c46192d",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "This is required, yes\n\nOn Thu, Aug 6, 2015 at 3:40 AM, Michail Kargakis notifications@github.com\nwrote:\n\n> In pkg/kubectl/rolling_updater.go\n> https://github.com/GoogleCloudPlatform/kubernetes/pull/11942#discussion_r36388371\n> :\n> \n> > -           newRc = scaledRc\n> > -           scaleUpFirst = false\n> > -       } // Otherwise, scale down/up.\n> >   +\n> > -       // Scale down as much as possible while maintaining the minimum available\n> > -       // amount. The scale-down informs us as to how much we can safely scale up\n> > -       // next interval.\n> > -       scaledRc, newIncrement, err := r.scaleDown(newRc, oldRc, desired, maxIncrement, minAvailable, config)\n> > -       if err != nil {\n> > -           return err\n> > -       }\n> > -       oldRc = scaledRc\n> > -       increment = newIncrement\n> >   +\n> > -       // Wait between down/up.\n> > -       time.Sleep(config.UpdatePeriod)\n> \n> So we decided to keep this?\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/GoogleCloudPlatform/kubernetes/pull/11942/files#r36388371\n> .\n\n## \n\nClayton Coleman | Lead Engineer, OpenShift\n",
        "createdAt" : "2015-08-06T14:05:42Z",
        "updatedAt" : "2015-09-01T16:54:11Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "da5e4d7bd52d8babfccebf4da2b78de8a27d30a6",
    "line" : null,
    "diffHunk" : "@@ -1,1 +234,238 @@\n\t\t// Wait between scaling operations for things to settle.\n\t\ttime.Sleep(config.UpdatePeriod)\n\n\t\t// Scale down as much as possible."
  },
  {
    "id" : "b4886b6d-af7d-4a9e-81fc-1981a148b8e3",
    "prId" : 11942,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c893ba19-3b92-464a-99de-4d47d53e05b1",
        "parentId" : null,
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "How does the user specify that the value should be interpreted as a percentage or an absolute number?\n",
        "createdAt" : "2015-08-17T18:21:00Z",
        "updatedAt" : "2015-09-01T16:54:11Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      },
      {
        "id" : "7e6e5003-6220-4307-8b8a-9978877b0ae4",
        "parentId" : "c893ba19-3b92-464a-99de-4d47d53e05b1",
        "authorId" : "f04ec747-f3ff-4334-a66e-6daaf4497091",
        "body" : "They don't, yet. I need to introduce IntOrString. Comment was copy/pasted from the proposal.\n",
        "createdAt" : "2015-08-17T18:23:49Z",
        "updatedAt" : "2015-09-01T16:54:11Z",
        "lastEditedBy" : "f04ec747-f3ff-4334-a66e-6daaf4497091",
        "tags" : [
        ]
      }
    ],
    "commit" : "da5e4d7bd52d8babfccebf4da2b78de8a27d30a6",
    "line" : 46,
    "diffHunk" : "@@ -1,1 +62,66 @@\tCleanupPolicy RollingUpdaterCleanupPolicy\n\t// The maximum number of pods that can be unavailable during the update.\n\t// Value can be an absolute number (ex: 5) or a percentage of total pods at\n\t// the start of update (ex: 10%). Absolute number is calculated from\n\t// percentage by rounding up. This can not be 0 if MaxSurge is 0. By"
  },
  {
    "id" : "99ff8368-3fdf-4983-9a14-5b0f5dcf757b",
    "prId" : 10062,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "90d23a83-9142-4a5c-a2ab-cf437d3e9afd",
        "parentId" : null,
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "Shouldn't we `time.Sleep(updatePeriod)` after this scale-up?\n",
        "createdAt" : "2015-07-18T11:39:48Z",
        "updatedAt" : "2015-07-24T12:54:43Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      },
      {
        "id" : "a096f502-949d-4ffc-b55f-8fdaea26fd38",
        "parentId" : "90d23a83-9142-4a5c-a2ab-cf437d3e9afd",
        "authorId" : "f04ec747-f3ff-4334-a66e-6daaf4497091",
        "body" : "I preserved the existing sleep behavior:\n\nhttps://github.com/GoogleCloudPlatform/kubernetes/blob/master/pkg/kubectl/rolling_updater.go#L357\n",
        "createdAt" : "2015-07-20T13:13:14Z",
        "updatedAt" : "2015-07-24T12:54:43Z",
        "lastEditedBy" : "f04ec747-f3ff-4334-a66e-6daaf4497091",
        "tags" : [
        ]
      }
    ],
    "commit" : "d044208b38f9516eba3ee5657d42bedfdef5d3ec",
    "line" : 203,
    "diffHunk" : "@@ -1,1 +453,457 @@\t\t\treturn err\n\t\t}\n\t\tnewRc = scaledRc\n\t}\n"
  },
  {
    "id" : "254c9473-0a5b-437d-a652-9c88d952013d",
    "prId" : 3061,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d9176d26-40bf-4306-b6d0-a52c07963770",
        "parentId" : null,
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "Is it possible to use this to perform a rollback of a partly completed rollout? If not, please add a TODO.\n",
        "createdAt" : "2015-01-06T21:03:00Z",
        "updatedAt" : "2015-01-07T01:29:24Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "3f1de0c3-c76a-4672-9d12-cdef43060338",
        "parentId" : "d9176d26-40bf-4306-b6d0-a52c07963770",
        "authorId" : "8076e56f-768c-4f89-90e6-045ef34e1525",
        "body" : "TODO added. Shouldn't be hard, but requires a bit of thought and I'd like to get this checked in.\n",
        "createdAt" : "2015-01-06T23:43:45Z",
        "updatedAt" : "2015-01-07T01:29:24Z",
        "lastEditedBy" : "8076e56f-768c-4f89-90e6-045ef34e1525",
        "tags" : [
        ]
      }
    ],
    "commit" : "0ab39df66b1ae95489bdf935fbd7b7e9f8d0d7a8",
    "line" : 55,
    "diffHunk" : "@@ -1,1 +53,57 @@// with 0 replicas, and synchronously resizing oldRc,newRc by 1 until oldRc has 0 replicas\n// and newRc has the original # of desired replicas. oldRc is then deleted.\n// If an update from newRc to oldRc is already in progress, we attempt to drive it to completion.\n// If an error occurs at any step of the update, the error will be returned.\n//  'out' writer for progress output"
  },
  {
    "id" : "107f0b38-bc91-4278-83ab-918242829a8a",
    "prId" : 3061,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "58a0238e-3b98-4444-91c6-e8182b60ee74",
        "parentId" : null,
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "This isn't going to prevent all replicas from being down simultaneously, since we don't actually ensure that they are running and ready to serve. We should add a rate limit.\n",
        "createdAt" : "2015-01-06T21:12:46Z",
        "updatedAt" : "2015-01-07T01:29:24Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "55706e2d-a99d-4c99-b6cd-55f0164fc6ba",
        "parentId" : "58a0238e-3b98-4444-91c6-e8182b60ee74",
        "authorId" : "8076e56f-768c-4f89-90e6-045ef34e1525",
        "body" : "Added update-period flag with 1min default (same as for kubecfg's rollingupdate). Can run with `--update-period=0s` to disable rate limit.\n",
        "createdAt" : "2015-01-06T23:45:56Z",
        "updatedAt" : "2015-01-07T01:29:24Z",
        "lastEditedBy" : "8076e56f-768c-4f89-90e6-045ef34e1525",
        "tags" : [
        ]
      }
    ],
    "commit" : "0ab39df66b1ae95489bdf935fbd7b7e9f8d0d7a8",
    "line" : 111,
    "diffHunk" : "@@ -1,1 +109,113 @@\t\t\tnewName, newRc.Spec.Replicas)\n\n\t\tnewRc, err = r.updateAndWait(newRc, interval, timeout)\n\t\tif err != nil {\n\t\t\treturn err"
  }
]