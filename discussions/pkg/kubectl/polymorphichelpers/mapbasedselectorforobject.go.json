[
  {
    "id" : "cbd7c89d-29fe-4d7e-a03f-4110fd38afd9",
    "prId" : 70395,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/70395#pullrequestreview-169959213",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "61fed6f5-060e-4844-a037-5162a944a6e0",
        "parentId" : null,
        "authorId" : "0385dfd1-e8a7-41a8-8213-eabe697d14cd",
        "body" : "We could prob combine these two branches `if t.Spec.Selector != nil && len(t.Spec.Selector.MatchLabels) > 0 {`",
        "createdAt" : "2018-10-30T17:34:26Z",
        "updatedAt" : "2018-10-31T02:27:48Z",
        "lastEditedBy" : "0385dfd1-e8a7-41a8-8213-eabe697d14cd",
        "tags" : [
        ]
      },
      {
        "id" : "539e4f2f-08c9-45cb-a007-44c7d3a84c45",
        "parentId" : "61fed6f5-060e-4844-a037-5162a944a6e0",
        "authorId" : "d995a87c-4064-4495-9753-d0cf8a45072f",
        "body" : "I don't think I can combine those two statements, since assigning to `labels` is different than returning the error.",
        "createdAt" : "2018-10-30T19:30:08Z",
        "updatedAt" : "2018-10-31T02:27:48Z",
        "lastEditedBy" : "d995a87c-4064-4495-9753-d0cf8a45072f",
        "tags" : [
        ]
      }
    ],
    "commit" : "d5865240c5bd8b9a05918d3c490426268e9dd38d",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +53,57 @@\t\t// \"extensions\" deployments use pod template labels if selector is not set.\n\t\tvar labels map[string]string\n\t\tif t.Spec.Selector != nil {\n\t\t\t// TODO(madhusudancs): Make this smarter by admitting MatchExpressions with Equals\n\t\t\t// operator, DoubleEquals operator and In operator with only one element in the set."
  },
  {
    "id" : "633c7412-99b6-481a-89e2-9e39b8478a1c",
    "prId" : 70395,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/70395#pullrequestreview-170457021",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "de3c7b53-5505-4863-861e-c7af70fa9404",
        "parentId" : null,
        "authorId" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "body" : "All the `apps` cases are the same. Combine them into one?\r\n```go \r\ncase *appsv1.Deployment, *appsv1beta2.Deployment, *appsv1beta1.Deployment:\r\n```",
        "createdAt" : "2018-10-31T18:28:03Z",
        "updatedAt" : "2018-10-31T18:33:48Z",
        "lastEditedBy" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "tags" : [
        ]
      },
      {
        "id" : "c250b618-1d77-4c4b-a261-9abcecb7a405",
        "parentId" : "de3c7b53-5505-4863-861e-c7af70fa9404",
        "authorId" : "d995a87c-4064-4495-9753-d0cf8a45072f",
        "body" : "It appears that type switches can not be combined if the type is used in the case statement; it will not compile. The compilation error is:\r\n\r\n`t.Spec undefined (type \"k8s.io/kubernetes/vendor/k8s.io/apimachinery/pkg/runtime\".Object has no field or method Spec)`\r\n\r\nThe compiler can not disambiguate the \"t.Spec\", since \"t\" is three different types.",
        "createdAt" : "2018-10-31T19:44:50Z",
        "updatedAt" : "2018-10-31T19:45:18Z",
        "lastEditedBy" : "d995a87c-4064-4495-9753-d0cf8a45072f",
        "tags" : [
        ]
      },
      {
        "id" : "c6c028c2-43e8-4ca6-ab60-85a3f6726815",
        "parentId" : "de3c7b53-5505-4863-861e-c7af70fa9404",
        "authorId" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "body" : "Ah, right. This is good then. ",
        "createdAt" : "2018-10-31T20:27:42Z",
        "updatedAt" : "2018-10-31T20:27:42Z",
        "lastEditedBy" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "tags" : [
        ]
      }
    ],
    "commit" : "d5865240c5bd8b9a05918d3c490426268e9dd38d",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +68,72 @@\t\treturn generate.MakeLabels(labels), nil\n\n\tcase *appsv1.Deployment:\n\t\t// \"apps\" deployments must have the selector set.\n\t\tif t.Spec.Selector == nil || len(t.Spec.Selector.MatchLabels) == 0 {"
  }
]