[
  {
    "id" : "ae63172a-026e-405c-8d8b-b1488fb97c3b",
    "prId" : 80183,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/80183#pullrequestreview-262302978",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c5dbd088-e711-4128-9782-227f700788d1",
        "parentId" : null,
        "authorId" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "body" : "What sort of errors does that return? How bad would it be to actually print the error rather than just skip? Something like:\r\n```\r\nif err != nil {\r\n      w.Write(LEVEL_0, \"Selector:\\tFailed to get selector: %s\\n\", err)\r\n}\r\n```",
        "createdAt" : "2019-07-16T09:47:55Z",
        "updatedAt" : "2019-07-16T09:56:48Z",
        "lastEditedBy" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "tags" : [
        ]
      }
    ],
    "commit" : "801f703add50d2a1865ff6d6fb0addc19e78b8cc",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +2071,2075 @@\t\tw.Write(LEVEL_0, \"Name:\\t%s\\n\", job.Name)\n\t\tw.Write(LEVEL_0, \"Namespace:\\t%s\\n\", job.Namespace)\n\t\tif selector, err := metav1.LabelSelectorAsSelector(job.Spec.Selector); err == nil {\n\t\t\tw.Write(LEVEL_0, \"Selector:\\t%s\\n\", selector)\n\t\t} else {"
  },
  {
    "id" : "1876476c-80e3-4ee3-ad44-67f43c814dea",
    "prId" : 79725,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/79725#pullrequestreview-258168520",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "408f7fa1-11bb-4bdf-a9d0-77e45e52631e",
        "parentId" : null,
        "authorId" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "body" : "`<unset>` +1 :)",
        "createdAt" : "2019-07-04T20:54:22Z",
        "updatedAt" : "2019-07-04T20:54:22Z",
        "lastEditedBy" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "ee72142730c71b66f211930c75cf7f0083fce968",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +3869,3873 @@\t\t\tw.Write(LEVEL_1, \"Allow Privilege Escalation:\\t%t\\n\", *psp.Spec.AllowPrivilegeEscalation)\n\t\t} else {\n\t\t\tw.Write(LEVEL_1, \"Allow Privilege Escalation:\\t<unset>\\n\")\n\t\t}\n\t\tw.Write(LEVEL_1, \"Default Add Capabilities:\\t%v\\n\", capsToString(psp.Spec.DefaultAddCapabilities))"
  },
  {
    "id" : "d7911e9d-db52-436f-98a2-6553c7a8aa3e",
    "prId" : 77347,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/77347#pullrequestreview-233757697",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "aa4f13fc-5a69-4d84-8c24-58d6b6971b3d",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "check if this is null before dereferencing",
        "createdAt" : "2019-05-03T02:43:09Z",
        "updatedAt" : "2019-05-03T02:43:09Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "a56813f0-e20c-444a-a890-08f89e9896dc",
        "parentId" : "aa4f13fc-5a69-4d84-8c24-58d6b6971b3d",
        "authorId" : "a472aa4a-c4f7-4692-bc21-708257a1dacc",
        "body" : "hi @liggitt , is the above check `if cronJob.Spec.SuccessfulJobsHistoryLimit != nil` not enough ?",
        "createdAt" : "2019-05-05T02:17:06Z",
        "updatedAt" : "2019-05-05T02:17:06Z",
        "lastEditedBy" : "a472aa4a-c4f7-4692-bc21-708257a1dacc",
        "tags" : [
        ]
      },
      {
        "id" : "6eb25a94-1ee5-4501-a134-8ea6d722bf19",
        "parentId" : "aa4f13fc-5a69-4d84-8c24-58d6b6971b3d",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "oops, missed that :)",
        "createdAt" : "2019-05-05T02:20:45Z",
        "updatedAt" : "2019-05-05T02:20:45Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "7e4dbbac40096c228e5d215fb483e13b408297e3",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +2121,2125 @@\t\tw.Write(LEVEL_0, \"Suspend:\\t%s\\n\", printBoolPtr(cronJob.Spec.Suspend))\n\t\tif cronJob.Spec.SuccessfulJobsHistoryLimit != nil {\n\t\t\tw.Write(LEVEL_0, \"Successful Job History Limit:\\t%d\\n\", *cronJob.Spec.SuccessfulJobsHistoryLimit)\n\t\t} else {\n\t\t\tw.Write(LEVEL_0, \"Successful Job History Limit:\\t<unset>\\n\")"
  },
  {
    "id" : "cf267e2e-241c-43c6-9cc7-3bd76172384a",
    "prId" : 75513,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/75513#pullrequestreview-219475973",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0137ac47-fa52-460a-86b8-281a37d98d23",
        "parentId" : null,
        "authorId" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "body" : "Next time do:\r\n```\r\nreadOnly := csi.ReadOnly != nil && *csi.ReadOnly\r\n```\r\nless typing :wink: ",
        "createdAt" : "2019-03-27T13:39:47Z",
        "updatedAt" : "2019-03-27T13:41:32Z",
        "lastEditedBy" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "tags" : [
        ]
      },
      {
        "id" : "0e4ea1d9-50b8-49a5-b17a-87dc34fa4706",
        "parentId" : "0137ac47-fa52-460a-86b8-281a37d98d23",
        "authorId" : "c36d7654-ffec-4c9c-964e-b4b2e70085d0",
        "body" : "Thanks",
        "createdAt" : "2019-03-27T13:56:37Z",
        "updatedAt" : "2019-03-27T13:56:37Z",
        "lastEditedBy" : "c36d7654-ffec-4c9c-964e-b4b2e70085d0",
        "tags" : [
        ]
      }
    ],
    "commit" : "af5d6518ff52de22a5303c9d5c1e9e3b791a20f0",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +1214,1218 @@\tvar readOnly bool\n\tvar fsType string\n\tif csi.ReadOnly != nil && *csi.ReadOnly {\n\t\treadOnly = true\n\t}"
  },
  {
    "id" : "c18cfa2d-e105-4cd1-ac4b-3ec89067d6b7",
    "prId" : 75483,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/75483#pullrequestreview-217085740",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "31678f49-6cb2-464c-b00f-25934a467daf",
        "parentId" : null,
        "authorId" : "6746e0cc-0c52-4344-889b-945a672c83e3",
        "body" : "Any particular reason to not use regex here instead?\r\n\r\n```go\r\nre := regexp.MustCompile(`[0-9\\.`]\r\nif re.MatchString(field) {\r\n    return field\r\n}\r\n```\r\n\r\nI'm also not sure that we need to exclude `_` from the smart labeling, since it looks like it handles `_` below.",
        "createdAt" : "2019-03-19T19:10:26Z",
        "updatedAt" : "2019-03-29T17:32:53Z",
        "lastEditedBy" : "6746e0cc-0c52-4344-889b-945a672c83e3",
        "tags" : [
        ]
      },
      {
        "id" : "e18133e0-7dd4-4986-881a-5c207a65e746",
        "parentId" : "31678f49-6cb2-464c-b00f-25934a467daf",
        "authorId" : "12ff0029-d24c-418b-9d8b-b5064cf73df0",
        "body" : "I did a comparison of time taken by regex vs strings index func as in the PR and found that the regex was taking about 60% more time compared to the string index function.\r\n\r\nRegex used:\r\n\r\n**re := regexp.MustCompile(`[~!@#.$%^&*()\\[\\]0-9/_+=,:;{}|]+`)**\r\n\r\nI excluded '-' from the check to skip smart labels. If a field has name like: 'tag-name', a smart label will still be created as: 'Tag - Name'.",
        "createdAt" : "2019-03-20T09:31:06Z",
        "updatedAt" : "2019-03-29T17:32:53Z",
        "lastEditedBy" : "12ff0029-d24c-418b-9d8b-b5064cf73df0",
        "tags" : [
        ]
      },
      {
        "id" : "6cb34f32-27d7-4dd8-8641-8ae336c9171c",
        "parentId" : "31678f49-6cb2-464c-b00f-25934a467daf",
        "authorId" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "body" : "Your regex is greedy, that probably doesn't help. Aren't you trying to match one of the character? why do you need the + at the end?\r\n\r\nAlso, I don't understand why we have this feature in the first place ... but sure.",
        "createdAt" : "2019-03-20T17:58:58Z",
        "updatedAt" : "2019-03-29T17:32:53Z",
        "lastEditedBy" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "tags" : [
        ]
      },
      {
        "id" : "f62baa03-1b44-4bf5-9165-3c7fc4e6c652",
        "parentId" : "31678f49-6cb2-464c-b00f-25934a467daf",
        "authorId" : "12ff0029-d24c-418b-9d8b-b5064cf73df0",
        "body" : "I ran the comparison test with the non greedy single line regular expression:\r\n\r\n`re := regexp.MustCompile(`(?Us)[~!@#.$%^&*()\\[\\]0-9/_+=,:;{}|]`)`\r\n\r\nEach test runs the match for 1000 iterations. The string index function is still the faster option:\r\n\r\n```\r\n> time stringfunc\r\nreal\t0m0.006s\r\nuser\t0m0.002s\r\nsys\t0m0.003s\r\n\r\n> time regexp\r\nreal\t0m0.010s\r\nuser\t0m0.006s\r\nsys\t0m0.003s\r\n```\r\n\r\nThe smart label feature tries to make the unstructured content output more user friendly:\r\n\r\nWith smart label:\r\n```\r\n        Controlplane:\r\n          Id:  sg-0fxxxxxxxxxx\r\n          Ingress Rule:\r\n            Cidr Blocks:\r\n              0.0.0.0/0\r\n            Description:                Kubernetes API\r\n            From Port:                  6443\r\n            Protocol:                   tcp\r\n            Source Security Group Ids:  <nil>\r\n            To Port:                    6443\r\n            Cidr Blocks:                <nil>\r\n            Description:                SSH\r\n```\r\n\r\nWithout smart label:\r\n```\r\n       controlplane:\r\n          id:  sg-0fxxxxxxxxxx\r\n          ingressRule:\r\n            cidrBlocks:\r\n              0.0.0.0/0\r\n            description:             Kubernetes API\r\n            fromPort:                6443\r\n            protocol:                tcp\r\n            sourceSecurityGroupIds:  <nil>\r\n            toPort:                  6443\r\n            cidrBlocks:              <nil>\r\n            description:             SSH\r\n```\r\n",
        "createdAt" : "2019-03-21T06:00:08Z",
        "updatedAt" : "2019-03-29T17:32:53Z",
        "lastEditedBy" : "12ff0029-d24c-418b-9d8b-b5064cf73df0",
        "tags" : [
        ]
      }
    ],
    "commit" : "029582d3396323ee9e22d285e9995332cfb6319c",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +310,314 @@\t}) != -1 {\n\t\treturn field\n\t}\n\n\tcommonAcronyms := []string{\"API\", \"URL\", \"UID\", \"OSB\", \"GUID\"}"
  },
  {
    "id" : "ff75f81b-02a3-406f-9f67-dce8580c7ae9",
    "prId" : 75176,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/75176#pullrequestreview-212544450",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ad79da3e-a139-4c3a-9be8-294767caf75d",
        "parentId" : null,
        "authorId" : "bc182326-9017-48d6-8ee0-4609046c1366",
        "body" : "> \"Target CPU utilization:\\t%d%%\\n\", \r\n\r\n`%d` or `%s`?",
        "createdAt" : "2019-03-08T16:13:07Z",
        "updatedAt" : "2019-03-08T16:13:07Z",
        "lastEditedBy" : "bc182326-9017-48d6-8ee0-4609046c1366",
        "tags" : [
        ]
      },
      {
        "id" : "e462ac72-6df9-495c-a9e8-5310e053506b",
        "parentId" : "ad79da3e-a139-4c3a-9be8-294767caf75d",
        "authorId" : "4b705187-d40c-4e59-968b-5be3a91465c5",
        "body" : "current is string, you can see the definition above this. `current := \"<unknown>\"`",
        "createdAt" : "2019-03-09T03:01:10Z",
        "updatedAt" : "2019-03-09T03:01:10Z",
        "lastEditedBy" : "4b705187-d40c-4e59-968b-5be3a91465c5",
        "tags" : [
        ]
      }
    ],
    "commit" : "814e1ca73f673c16818ec7ca29f2bac4604f80c3",
    "line" : 70,
    "diffHunk" : "@@ -1,1 +3219,3223 @@\t\t\t\tcurrent = fmt.Sprintf(\"%d\", *hpa.Status.CurrentCPUUtilizationPercentage)\n\t\t\t}\n\t\t\tw.Write(LEVEL_0, \"Current CPU utilization:\\t%s%%\\n\", current)\n\t\t}\n"
  },
  {
    "id" : "10ae06c3-d99a-4643-b415-27db328ac5b9",
    "prId" : 75176,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/75176#pullrequestreview-212645777",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "28fa8690-221c-4676-806c-fb11c4799e00",
        "parentId" : null,
        "authorId" : "bc182326-9017-48d6-8ee0-4609046c1366",
        "body" : "nits: fold the explicit declaration into `:=`",
        "createdAt" : "2019-03-08T16:13:53Z",
        "updatedAt" : "2019-03-08T16:14:58Z",
        "lastEditedBy" : "bc182326-9017-48d6-8ee0-4609046c1366",
        "tags" : [
        ]
      },
      {
        "id" : "8d9f255a-cd95-49b6-9fe5-50609c35da43",
        "parentId" : "28fa8690-221c-4676-806c-fb11c4799e00",
        "authorId" : "4b705187-d40c-4e59-968b-5be3a91465c5",
        "body" : "I think this might be more friendly to a code reader.",
        "createdAt" : "2019-03-11T02:52:53Z",
        "updatedAt" : "2019-03-11T02:52:53Z",
        "lastEditedBy" : "4b705187-d40c-4e59-968b-5be3a91465c5",
        "tags" : [
        ]
      }
    ],
    "commit" : "814e1ca73f673c16818ec7ca29f2bac4604f80c3",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +3076,3080 @@\nfunc (d *HorizontalPodAutoscalerDescriber) Describe(namespace, name string, describerSettings describe.DescriberSettings) (string, error) {\n\tvar events *corev1.EventList\n\n\t// autoscaling/v2beta2 is introduced since v1.12 and autoscaling/v1 does not have full backward compatibility"
  },
  {
    "id" : "829eacc2-e480-4f9e-88de-029be9e7114c",
    "prId" : 75176,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/75176#pullrequestreview-212356829",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6e233c41-0964-4c4a-b7ee-4da0512a22a6",
        "parentId" : null,
        "authorId" : "bc182326-9017-48d6-8ee0-4609046c1366",
        "body" : "nits: hold it into the following line",
        "createdAt" : "2019-03-08T16:15:15Z",
        "updatedAt" : "2019-03-08T16:15:15Z",
        "lastEditedBy" : "bc182326-9017-48d6-8ee0-4609046c1366",
        "tags" : [
        ]
      }
    ],
    "commit" : "814e1ca73f673c16818ec7ca29f2bac4604f80c3",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +3089,3093 @@\t}\n\n\thpaV1, err := d.client.AutoscalingV1().HorizontalPodAutoscalers(namespace).Get(name, metav1.GetOptions{})\n\tif err == nil {\n\t\tif describerSettings.ShowEvents {"
  },
  {
    "id" : "90164e94-0fc6-4526-8bbf-1f19969891cf",
    "prId" : 75176,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/75176#pullrequestreview-212645615",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "69861aa7-82e3-407a-96c6-f8ee8fbc4066",
        "parentId" : null,
        "authorId" : "bc182326-9017-48d6-8ee0-4609046c1366",
        "body" : "> nits: hold it into the following line\r\n\r\nsame here",
        "createdAt" : "2019-03-08T16:15:27Z",
        "updatedAt" : "2019-03-08T16:15:27Z",
        "lastEditedBy" : "bc182326-9017-48d6-8ee0-4609046c1366",
        "tags" : [
        ]
      },
      {
        "id" : "61aca131-c830-4775-ab30-a11a3d18ee2a",
        "parentId" : "69861aa7-82e3-407a-96c6-f8ee8fbc4066",
        "authorId" : "4b705187-d40c-4e59-968b-5be3a91465c5",
        "body" : "**err** has to be used in last, so we can not fold it...",
        "createdAt" : "2019-03-11T02:51:44Z",
        "updatedAt" : "2019-03-11T02:51:45Z",
        "lastEditedBy" : "4b705187-d40c-4e59-968b-5be3a91465c5",
        "tags" : [
        ]
      }
    ],
    "commit" : "814e1ca73f673c16818ec7ca29f2bac4604f80c3",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +3081,3085 @@\t// with autoscaling/v2beta2, so describer will try to get and describe hpa v2beta2 object firstly, if it fails,\n\t// describer will fall back to do with hpa v1 object\n\thpaV2beta2, err := d.client.AutoscalingV2beta2().HorizontalPodAutoscalers(namespace).Get(name, metav1.GetOptions{})\n\tif err == nil {\n\t\tif describerSettings.ShowEvents {"
  },
  {
    "id" : "541fddfe-07db-4309-90ff-f7a6beaf5e22",
    "prId" : 74156,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/74156#pullrequestreview-204505866",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a4d94a40-201b-49d8-bca0-df3eac565009",
        "parentId" : null,
        "authorId" : "9eb1241d-3dca-4a34-a85d-a880ba615f8c",
        "body" : "```\r\nif _, isMirrorPod := pod.Annotations[corev1.MirrorPodAnnotationKey]; isMirrorPod {\r\n\tref.UID = types.UID(pod.Annotations[corev1.MirrorPodAnnotationKey])\r\n}\r\n```\r\nI would suggest to use corev1 types",
        "createdAt" : "2019-02-16T04:14:11Z",
        "updatedAt" : "2019-02-16T05:01:27Z",
        "lastEditedBy" : "9eb1241d-3dca-4a34-a85d-a880ba615f8c",
        "tags" : [
        ]
      },
      {
        "id" : "a1912065-2fef-4eb2-9c4f-68d75629c792",
        "parentId" : "a4d94a40-201b-49d8-bca0-df3eac565009",
        "authorId" : "b3df7daa-d323-438c-89a4-583f939bcfae",
        "body" : "thanks! done, PTAL",
        "createdAt" : "2019-02-16T05:04:20Z",
        "updatedAt" : "2019-02-16T05:04:20Z",
        "lastEditedBy" : "b3df7daa-d323-438c-89a4-583f939bcfae",
        "tags" : [
        ]
      }
    ],
    "commit" : "5efbdb02bffad0c904e4037e58c33fcbf3be51a2",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +645,649 @@\t\t\tif _, isMirrorPod := pod.Annotations[corev1.MirrorPodAnnotationKey]; isMirrorPod {\n\t\t\t\tref.UID = types.UID(pod.Annotations[corev1.MirrorPodAnnotationKey])\n\t\t\t}\n\t\t\tevents, _ = d.Core().Events(namespace).Search(scheme.Scheme, ref)\n\t\t}"
  },
  {
    "id" : "d12320cc-d5dc-4329-8f75-9ccb4520d527",
    "prId" : 72781,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/72781#pullrequestreview-191549881",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "38025b88-27a1-452f-b982-968dea8179af",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "what happens if this is nil?",
        "createdAt" : "2019-01-10T21:28:06Z",
        "updatedAt" : "2019-01-10T21:28:07Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "83c74408-ba40-43d2-8860-ba68ca11d579",
        "parentId" : "38025b88-27a1-452f-b982-968dea8179af",
        "authorId" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "body" : "Good point ...",
        "createdAt" : "2019-01-10T22:02:52Z",
        "updatedAt" : "2019-01-10T22:02:53Z",
        "lastEditedBy" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "tags" : [
        ]
      },
      {
        "id" : "bdf6bd88-8e1f-415a-ba7c-642bb2c3617e",
        "parentId" : "38025b88-27a1-452f-b982-968dea8179af",
        "authorId" : "a8cf11c4-beee-49f4-82fe-783a21e32f7b",
        "body" : "The StatefulSetSpec says that Replicas defaults to 1 if unspecified. I assume this means that it is never nil.\r\n\r\nhttps://github.com/kubernetes/kubernetes/blob/dad6741530b0c69587a71a6c08544b4c9412fa01/staging/src/k8s.io/api/apps/v1beta1/types.go#L155-L161",
        "createdAt" : "2019-01-11T08:07:30Z",
        "updatedAt" : "2019-01-11T08:07:30Z",
        "lastEditedBy" : "a8cf11c4-beee-49f4-82fe-783a21e32f7b",
        "tags" : [
        ]
      }
    ],
    "commit" : "1bcab05f7d2b315d861e3a24fc814709c4ec2a21",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +2960,2964 @@\t\tprintLabelsMultiline(w, \"Labels\", ps.Labels)\n\t\tprintAnnotationsMultiline(w, \"Annotations\", ps.Annotations)\n\t\tw.Write(LEVEL_0, \"Replicas:\\t%d desired | %d total\\n\", *ps.Spec.Replicas, ps.Status.Replicas)\n\t\tw.Write(LEVEL_0, \"Update Strategy:\\t%s\\n\", ps.Spec.UpdateStrategy.Type)\n\t\tif ps.Spec.UpdateStrategy.RollingUpdate != nil {"
  },
  {
    "id" : "4e899c93-a26e-4048-8dad-902b0d13b51a",
    "prId" : 71553,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/71553#pullrequestreview-180355467",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9c799aba-0472-47f3-b1f9-2214dd9cce4a",
        "parentId" : null,
        "authorId" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "body" : "Do we need to worry about ExpirationSeconds being nil?",
        "createdAt" : "2018-11-30T15:42:50Z",
        "updatedAt" : "2018-11-30T15:42:56Z",
        "lastEditedBy" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "tags" : [
        ]
      },
      {
        "id" : "1d3c0711-05d1-474f-b1c9-a6a297685e02",
        "parentId" : "9c799aba-0472-47f3-b1f9-2214dd9cce4a",
        "authorId" : "bc182326-9017-48d6-8ee0-4609046c1366",
        "body" : "[https://github.com/kubernetes/kubernetes/blob/3156df3e806cb8bf468845b37eec939dee52a1d8/pkg/apis/core/v1/defaults.go#L239-L241](https://github.com/kubernetes/kubernetes/blob/3156df3e806cb8bf468845b37eec939dee52a1d8/pkg/apis/core/v1/defaults.go#L239-L241)\r\n\r\n@justinsb if it's properly decoded from the apimachinery stack, no. \r\n\r\n",
        "createdAt" : "2018-11-30T16:54:47Z",
        "updatedAt" : "2018-11-30T16:54:47Z",
        "lastEditedBy" : "bc182326-9017-48d6-8ee0-4609046c1366",
        "tags" : [
        ]
      }
    ],
    "commit" : "a8639e5b93a0d70027392a8a48a8b85e11361f13",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +883,887 @@\t\t} else if source.ServiceAccountToken != nil {\n\t\t\tw.Write(LEVEL_2, \"TokenExpirationSeconds:\\t%d\\n\",\n\t\t\t\t*source.ServiceAccountToken.ExpirationSeconds)\n\t\t}\n\t}"
  },
  {
    "id" : "64e82920-2faa-40c9-99a1-e8bf1d435436",
    "prId" : 70950,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/70950#pullrequestreview-175534670",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "72bb421f-28cb-44bd-87ef-e5412890438b",
        "parentId" : null,
        "authorId" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "body" : "Move this to `pkg/kubectl/describe` instead of here. It reads weird and might cause cycles.",
        "createdAt" : "2018-11-14T22:37:00Z",
        "updatedAt" : "2018-11-15T16:11:27Z",
        "lastEditedBy" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "tags" : [
        ]
      },
      {
        "id" : "355bf774-0c08-4009-b48c-73f44225a544",
        "parentId" : "72bb421f-28cb-44bd-87ef-e5412890438b",
        "authorId" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "body" : "This comment isn't still addressed. ",
        "createdAt" : "2018-11-15T20:10:02Z",
        "updatedAt" : "2018-11-15T20:14:19Z",
        "lastEditedBy" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "tags" : [
        ]
      }
    ],
    "commit" : "da9387131e64bf9ffecd33c5044d4e96ab310311",
    "line" : 80,
    "diffHunk" : "@@ -1,1 +85,89 @@\n// DescriberFn gives a way to easily override the function for unit testing if needed\nvar DescriberFn describe.DescriberFunc = Describer\n\n// Describer returns a Describer for displaying the specified RESTMapping type or an error."
  }
]