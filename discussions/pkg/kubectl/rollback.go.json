[
  {
    "id" : "aaba0b62-3aad-456f-b9e7-7c9651d97afb",
    "prId" : 70039,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/70039#pullrequestreview-168037138",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b5246365-fe78-408f-9799-e85e375a2392",
        "parentId" : null,
        "authorId" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "body" : "We need to do an update instead of a patch. A rollback should change the template back to a previous revision, instead of merging changes. \r\n\r\nWe also need to handle some special logic such as not copying pod-template-hash labels, not copying template annotations, and reset deployment annotations. Basically this:\r\nhttps://github.com/kubernetes/kubernetes/blob/553a169d256154f7e601a40c1f617d1d2f219cf0/pkg/controller/deployment/rollback.go#L79-L91",
        "createdAt" : "2018-10-24T17:42:40Z",
        "updatedAt" : "2018-10-27T03:51:18Z",
        "lastEditedBy" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "tags" : [
        ]
      },
      {
        "id" : "1d261cd6-a261-42fc-b5d5-93e363767d5e",
        "parentId" : "b5246365-fe78-408f-9799-e85e375a2392",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "> A rollback should change the template back to a previous revision, instead of merging changes.\r\n\r\nthis is replacing, not merging (the generated patch is doing a replace operation on the template)\r\n\r\n> We also need to handle some special logic such as not copying pod-template-hash labels, not copying template annotations, and reset deployment annotations.\r\n\r\nwill update",
        "createdAt" : "2018-10-24T17:47:12Z",
        "updatedAt" : "2018-10-27T03:51:18Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "57df11bc0f2605701e46a96d7fd4a33fce600dd2",
    "line" : 119,
    "diffHunk" : "@@ -1,1 +154,158 @@\n\t// Restore revision\n\tif _, err = r.c.AppsV1().Deployments(namespace).Patch(name, patchType, patch); err != nil {\n\t\treturn \"\", fmt.Errorf(\"failed restoring revision %d: %v\", toRevision, err)\n\t}"
  },
  {
    "id" : "37ca1046-0fb9-4657-93a4-ee7d7f8fc4f1",
    "prId" : 69543,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/69543#pullrequestreview-162706798",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7056e2aa-3f06-4e1f-bfed-76df48e829ec",
        "parentId" : null,
        "authorId" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "body" : "drop empty line?",
        "createdAt" : "2018-10-09T03:38:44Z",
        "updatedAt" : "2018-10-09T03:44:06Z",
        "lastEditedBy" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "tags" : [
        ]
      },
      {
        "id" : "d7efc818-e797-4365-aea2-617cb89b401b",
        "parentId" : "7056e2aa-3f06-4e1f-bfed-76df48e829ec",
        "authorId" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "body" : "Or maybe not ...",
        "createdAt" : "2018-10-09T03:38:59Z",
        "updatedAt" : "2018-10-09T03:44:06Z",
        "lastEditedBy" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "tags" : [
        ]
      }
    ],
    "commit" : "20a54b312cab9cb0ffc98182f1f0ea0a1235d897",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +40,44 @@\t\"k8s.io/kubernetes/pkg/kubectl/scheme\"\n\tsliceutil \"k8s.io/kubernetes/pkg/kubectl/util/slice\"\n\n\t// kubectl should not be taking dependencies on logic in the controllers\n\tdeploymentutil \"k8s.io/kubernetes/pkg/controller/deployment/util\""
  },
  {
    "id" : "78bc413f-6dd4-407c-ab4f-c803bedbfbf1",
    "prId" : 69413,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/69413#pullrequestreview-161740444",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "78f1d0e0-ab6e-44e9-8ff1-a316cd49c04b",
        "parentId" : null,
        "authorId" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "body" : "We should switch to `AppsV1` since extensions is deprecated.",
        "createdAt" : "2018-10-04T16:34:53Z",
        "updatedAt" : "2018-10-04T20:13:45Z",
        "lastEditedBy" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "tags" : [
        ]
      },
      {
        "id" : "5f5a6b18-230d-4e42-8af6-33fec5737edc",
        "parentId" : "78f1d0e0-ab6e-44e9-8ff1-a316cd49c04b",
        "authorId" : "d995a87c-4064-4495-9753-d0cf8a45072f",
        "body" : "AppsV1 does not have the method \"Rollback\". Deployment rollback is implemented very differently from DaemonSets and StatefulSets for some reason. I'm going to add a TODO to update the entire Deployment rollback process. But for now, I think we should keep this change as small as possible.",
        "createdAt" : "2018-10-04T18:04:26Z",
        "updatedAt" : "2018-10-04T20:13:45Z",
        "lastEditedBy" : "d995a87c-4064-4495-9753-d0cf8a45072f",
        "tags" : [
        ]
      }
    ],
    "commit" : "95ec1f79b9c68f361e6b59284d198843df9dcb81",
    "line" : 77,
    "diffHunk" : "@@ -1,1 +148,152 @@\t// patching using history (ControllerRevision data). Deployments should probably also implement\n\t// rollback using a patch.\n\tif err := r.c.ExtensionsV1beta1().Deployments(namespace).Rollback(deploymentRollback); err != nil {\n\t\treturn result, err\n\t}"
  },
  {
    "id" : "408bbad2-c407-445a-8bb4-f9d2acdfaa03",
    "prId" : 63177,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/63177#pullrequestreview-116421225",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2460b93e-d073-48f3-9024-4e7f4a7b56e7",
        "parentId" : null,
        "authorId" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "body" : "I'd treat it as a TODO. ",
        "createdAt" : "2018-04-30T20:14:19Z",
        "updatedAt" : "2018-04-30T20:17:51Z",
        "lastEditedBy" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "tags" : [
        ]
      }
    ],
    "commit" : "1a1e8344a510f5287b07677a1fafd39352c18feb",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +45,49 @@\tprintersinternal \"k8s.io/kubernetes/pkg/printers/internalversion\"\n\t// kubectl should not be taking dependencies on logic in the controllers\n\tdeploymentutil \"k8s.io/kubernetes/pkg/controller/deployment/util\"\n)\n"
  },
  {
    "id" : "9b957227-708d-4da8-87d9-ddc3234ed5c9",
    "prId" : 55557,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/55557#pullrequestreview-78525301",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b1f72226-626b-4fa0-931c-14d4f4e98164",
        "parentId" : null,
        "authorId" : "cdb05f24-d700-4d96-a683-3e4de7effbf5",
        "body" : "I don't think Pod support rollback",
        "createdAt" : "2017-11-15T02:40:17Z",
        "updatedAt" : "2017-11-22T06:17:35Z",
        "lastEditedBy" : "cdb05f24-d700-4d96-a683-3e4de7effbf5",
        "tags" : [
        ]
      },
      {
        "id" : "c1e19371-d024-43e8-8ec4-1596feb85f5c",
        "parentId" : "b1f72226-626b-4fa0-931c-14d4f4e98164",
        "authorId" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "body" : "This is the downside of using visitor pattern, as I mentioned in\r\nhttps://github.com/kubernetes/kubernetes/pull/55257#discussion_r149764557 -- visitors are forced to implement all the `VisitXxxx` functions, even for the resources the visitor doesn't/won't support. `VisitPod` here is just a dummy function for that purpose",
        "createdAt" : "2017-11-21T22:58:12Z",
        "updatedAt" : "2017-11-22T06:17:35Z",
        "lastEditedBy" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "tags" : [
        ]
      },
      {
        "id" : "969c18ef-da63-4e76-8fb8-8aa45412e37d",
        "parentId" : "b1f72226-626b-4fa0-931c-14d4f4e98164",
        "authorId" : "cdb05f24-d700-4d96-a683-3e4de7effbf5",
        "body" : "Make sense. Thanks for recalling this.",
        "createdAt" : "2017-11-22T17:30:00Z",
        "updatedAt" : "2017-11-22T17:30:00Z",
        "lastEditedBy" : "cdb05f24-d700-4d96-a683-3e4de7effbf5",
        "tags" : [
        ]
      },
      {
        "id" : "937acd39-89e5-420a-9f5d-bce7d2b041d6",
        "parentId" : "b1f72226-626b-4fa0-931c-14d4f4e98164",
        "authorId" : "cdb05f24-d700-4d96-a683-3e4de7effbf5",
        "body" : "cc: @pwittrock ",
        "createdAt" : "2017-11-22T17:30:34Z",
        "updatedAt" : "2017-11-22T17:30:34Z",
        "lastEditedBy" : "cdb05f24-d700-4d96-a683-3e4de7effbf5",
        "tags" : [
        ]
      }
    ],
    "commit" : "18ef4beb84840c7d69d655ea4408a4ce24addc1a",
    "line" : 37,
    "diffHunk" : "@@ -1,1 +75,79 @@\nfunc (v *RollbackVisitor) VisitJob(kind kapps.GroupKindElement)                   {}\nfunc (v *RollbackVisitor) VisitPod(kind kapps.GroupKindElement)                   {}\nfunc (v *RollbackVisitor) VisitReplicaSet(kind kapps.GroupKindElement)            {}\nfunc (v *RollbackVisitor) VisitReplicationController(kind kapps.GroupKindElement) {}"
  },
  {
    "id" : "8ab2f732-537e-4225-a74c-dd7ca5b4c433",
    "prId" : 55557,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/55557#pullrequestreview-78287294",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a9426031-7a3b-48e2-9c0a-f614cf15e0cf",
        "parentId" : null,
        "authorId" : "cdb05f24-d700-4d96-a683-3e4de7effbf5",
        "body" : "@janetkuo Should we do this for RS and RC?",
        "createdAt" : "2017-11-15T22:35:58Z",
        "updatedAt" : "2017-11-22T06:17:35Z",
        "lastEditedBy" : "cdb05f24-d700-4d96-a683-3e4de7effbf5",
        "tags" : [
        ]
      },
      {
        "id" : "200706a2-a31a-47b2-b0ff-d5ec6aedc4cc",
        "parentId" : "a9426031-7a3b-48e2-9c0a-f614cf15e0cf",
        "authorId" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "body" : "As mentioned above, even though RC/RS don't support rollback, we can't avoid implementing visit functions for them ",
        "createdAt" : "2017-11-21T22:59:05Z",
        "updatedAt" : "2017-11-22T06:17:35Z",
        "lastEditedBy" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "tags" : [
        ]
      }
    ],
    "commit" : "18ef4beb84840c7d69d655ea4408a4ce24addc1a",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +76,80 @@func (v *RollbackVisitor) VisitJob(kind kapps.GroupKindElement)                   {}\nfunc (v *RollbackVisitor) VisitPod(kind kapps.GroupKindElement)                   {}\nfunc (v *RollbackVisitor) VisitReplicaSet(kind kapps.GroupKindElement)            {}\nfunc (v *RollbackVisitor) VisitReplicationController(kind kapps.GroupKindElement) {}\nfunc (v *RollbackVisitor) VisitCronJob(kind kapps.GroupKindElement)               {}"
  },
  {
    "id" : "601ca887-0248-4753-95ab-eb5e9df91340",
    "prId" : 53679,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/53679#pullrequestreview-68792686",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ce47103f-4c26-4d73-9ead-d25ba983ca64",
        "parentId" : null,
        "authorId" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "body" : "We probably don't need ic here either",
        "createdAt" : "2017-10-12T01:04:13Z",
        "updatedAt" : "2017-11-03T17:17:04Z",
        "lastEditedBy" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "tags" : [
        ]
      }
    ],
    "commit" : "5590c1fb94e09f9a2b7a09c9776e8d6535b18304",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +56,60 @@\tRollback(obj runtime.Object, updatedAnnotations map[string]string, toRevision int64, dryRun bool) (string, error)\n}\n\nfunc RollbackerFor(kind schema.GroupKind, c kubernetes.Interface) (Rollbacker, error) {\n\tswitch kind {"
  },
  {
    "id" : "36ca60c7-be70-4d3b-99f6-e1ccea5375f0",
    "prId" : 49674,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/49674#pullrequestreview-57597435",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d51aa868-608a-44ff-a80e-2e32ee4a5fa8",
        "parentId" : null,
        "authorId" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "body" : "Lots of code duplication with `(r *DaemonSetRollbacker) Rollback`. Would you de-duplicate it (or at least part of it)?",
        "createdAt" : "2017-08-21T20:02:04Z",
        "updatedAt" : "2017-08-24T23:43:50Z",
        "lastEditedBy" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "tags" : [
        ]
      },
      {
        "id" : "5015af73-84c9-466d-a882-27485b5a06cc",
        "parentId" : "d51aa868-608a-44ff-a80e-2e32ee4a5fa8",
        "authorId" : "a3d6d690-2601-4c58-a5bc-a3eaa025f8e0",
        "body" : "Sure! i will carry out the de-duplication using polymorphism `runtime.Object`.",
        "createdAt" : "2017-08-21T20:08:37Z",
        "updatedAt" : "2017-08-24T23:43:50Z",
        "lastEditedBy" : "a3d6d690-2601-4c58-a5bc-a3eaa025f8e0",
        "tags" : [
        ]
      }
    ],
    "commit" : "ebdbafd2c509fde48935a97a812b4c1c394b3561",
    "line" : 82,
    "diffHunk" : "@@ -1,1 +275,279 @@\n// toRevision is a non-negative integer, with 0 being reserved to indicate rolling back to previous configuration\nfunc (r *StatefulSetRollbacker) Rollback(obj runtime.Object, updatedAnnotations map[string]string, toRevision int64, dryRun bool) (string, error) {\n\tif toRevision < 0 {\n\t\treturn \"\", revisionNotFoundErr(toRevision)"
  },
  {
    "id" : "b481fbed-5f25-4096-9ca4-e38b198402e6",
    "prId" : 49674,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/49674#pullrequestreview-58536589",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e3e8fda5-f724-450b-8a49-f15e654a1570",
        "parentId" : null,
        "authorId" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "body" : "Since this is now a function, you should return an error when `len(allHistory) <= 1`. The callers already checked it, but it's safer to check it again, so that future callers won't cause a panic (`index out of range`). ",
        "createdAt" : "2017-08-24T20:13:16Z",
        "updatedAt" : "2017-08-24T23:43:50Z",
        "lastEditedBy" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "tags" : [
        ]
      },
      {
        "id" : "455fb3db-41e4-47de-a7ed-17cddf3f0cec",
        "parentId" : "e3e8fda5-f724-450b-8a49-f15e654a1570",
        "authorId" : "a3d6d690-2601-4c58-a5bc-a3eaa025f8e0",
        "body" : "For `len(allHistory) == 0`, we should return `nil`.\r\nFor `len(allHistory) == 1`, we should return `allHistory[0]`.",
        "createdAt" : "2017-08-24T22:43:00Z",
        "updatedAt" : "2017-08-24T23:43:50Z",
        "lastEditedBy" : "a3d6d690-2601-4c58-a5bc-a3eaa025f8e0",
        "tags" : [
        ]
      },
      {
        "id" : "c41b084c-579c-49fe-979a-651e37b67db7",
        "parentId" : "e3e8fda5-f724-450b-8a49-f15e654a1570",
        "authorId" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "body" : "No, you have to return `nil` for both cases. `findHistory` finds the history of a specific revision number. If there's only one history (let's say it's rv 5), and I asked for rv 10, you should return me `nil` instead of blindly return me whatever history you have. \r\n\r\nPlease add godoc for `findHistory` as well. ",
        "createdAt" : "2017-08-24T23:01:35Z",
        "updatedAt" : "2017-08-24T23:43:50Z",
        "lastEditedBy" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "tags" : [
        ]
      },
      {
        "id" : "1376ae4a-dcc8-45ef-afc0-9be0895882e6",
        "parentId" : "e3e8fda5-f724-450b-8a49-f15e654a1570",
        "authorId" : "a3d6d690-2601-4c58-a5bc-a3eaa025f8e0",
        "body" : "SGTM",
        "createdAt" : "2017-08-24T23:17:37Z",
        "updatedAt" : "2017-08-24T23:43:50Z",
        "lastEditedBy" : "a3d6d690-2601-4c58-a5bc-a3eaa025f8e0",
        "tags" : [
        ]
      },
      {
        "id" : "d5b3a6d6-4aff-41e2-9c63-673d97df76ef",
        "parentId" : "e3e8fda5-f724-450b-8a49-f15e654a1570",
        "authorId" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "body" : "Or you can check `if allHistory[0].Revision == toRevision` when the length is 1. ",
        "createdAt" : "2017-08-24T23:18:47Z",
        "updatedAt" : "2017-08-24T23:43:50Z",
        "lastEditedBy" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "tags" : [
        ]
      },
      {
        "id" : "3fde7664-46cf-497d-946f-ea0f5af94772",
        "parentId" : "e3e8fda5-f724-450b-8a49-f15e654a1570",
        "authorId" : "a3d6d690-2601-4c58-a5bc-a3eaa025f8e0",
        "body" : "i thought about this, but the original check is shorter:\r\n```\r\nif toRevision == 0 && len(allHistory) <= 1 {\r\n```",
        "createdAt" : "2017-08-24T23:21:16Z",
        "updatedAt" : "2017-08-24T23:43:50Z",
        "lastEditedBy" : "a3d6d690-2601-4c58-a5bc-a3eaa025f8e0",
        "tags" : [
        ]
      }
    ],
    "commit" : "ebdbafd2c509fde48935a97a812b4c1c394b3561",
    "line" : 150,
    "diffHunk" : "@@ -1,1 +343,347 @@\t\t// If toRevision == 0, find the latest revision (2nd max)\n\t\tsort.Sort(historiesByRevision(allHistory))\n\t\ttoHistory = allHistory[len(allHistory)-2]\n\t} else {\n\t\tfor _, h := range allHistory {"
  },
  {
    "id" : "21501c09-4548-4728-a787-12853496bc40",
    "prId" : 47075,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/47075#pullrequestreview-43501209",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9129d063-28e1-4c05-9851-7d606b3c46a7",
        "parentId" : null,
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "Do we plan to have versioned describers at some point?",
        "createdAt" : "2017-06-11T10:27:42Z",
        "updatedAt" : "2017-06-11T10:27:42Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      },
      {
        "id" : "0aff38c2-39f5-4c4b-b29b-2077d82bfbbe",
        "parentId" : "9129d063-28e1-4c05-9851-7d606b3c46a7",
        "authorId" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "body" : "I believe so. ",
        "createdAt" : "2017-06-12T17:06:44Z",
        "updatedAt" : "2017-06-12T17:06:44Z",
        "lastEditedBy" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "tags" : [
        ]
      }
    ],
    "commit" : "2b8f91e549f73bef04ea3f76335fd94b40596a10",
    "line" : 52,
    "diffHunk" : "@@ -1,1 +261,265 @@\t\t\treturn \"\", fmt.Errorf(\"failed to convert podtemplate while printing: %v\", err)\n\t\t}\n\t\tprintersinternal.DescribePodTemplate(internalTemplate, w)\n\t\treturn fmt.Sprintf(\"will roll back to %s\", content.String()), nil\n\t}"
  },
  {
    "id" : "5ef158dd-029c-46d7-b9a8-10b99e8b57fd",
    "prId" : 46144,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/46144#pullrequestreview-41419064",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9444d628-6164-448b-bd18-71bebafe0ce5",
        "parentId" : null,
        "authorId" : "cdb05f24-d700-4d96-a683-3e4de7effbf5",
        "body" : "Maybe we should use versioned template.",
        "createdAt" : "2017-06-01T00:42:01Z",
        "updatedAt" : "2017-06-04T00:11:19Z",
        "lastEditedBy" : "cdb05f24-d700-4d96-a683-3e4de7effbf5",
        "tags" : [
        ]
      },
      {
        "id" : "ec3c2de1-bb7e-47db-95a1-3e20247b3137",
        "parentId" : "9444d628-6164-448b-bd18-71bebafe0ce5",
        "authorId" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "body" : "Need unversioned template for describe printer ",
        "createdAt" : "2017-06-01T05:46:15Z",
        "updatedAt" : "2017-06-04T00:11:19Z",
        "lastEditedBy" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "tags" : [
        ]
      }
    ],
    "commit" : "edabdac094b4b3b3cb29b03af75256e54b5cfca2",
    "line" : 149,
    "diffHunk" : "@@ -1,1 +289,293 @@}\n\nfunc getInternalTemplate(toHistory *appsv1beta1.ControllerRevision) (*api.PodTemplateSpec, error) {\n\ttemplate, err := daemon.DecodeHistory(toHistory)\n\tif err != nil {"
  },
  {
    "id" : "991bac72-e34e-4e95-a98e-6b56175e7d3e",
    "prId" : 46144,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/46144#pullrequestreview-41656809",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "997fcd60-a379-4e58-b28c-6aa6f1856b9b",
        "parentId" : null,
        "authorId" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "body" : "Should this Update be made conditional on the  resource version being the same as before, in case there is a race between Get and Update?",
        "createdAt" : "2017-06-01T21:59:24Z",
        "updatedAt" : "2017-06-04T00:11:19Z",
        "lastEditedBy" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "tags" : [
        ]
      },
      {
        "id" : "897be505-1059-4ecd-ade9-b60622b6f2fb",
        "parentId" : "997fcd60-a379-4e58-b28c-6aa6f1856b9b",
        "authorId" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "body" : "Unlikely, so no need to fix in this PR.",
        "createdAt" : "2017-06-01T22:03:37Z",
        "updatedAt" : "2017-06-04T00:11:19Z",
        "lastEditedBy" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "tags" : [
        ]
      },
      {
        "id" : "6f89a61e-0094-422a-b918-35121e9f9449",
        "parentId" : "997fcd60-a379-4e58-b28c-6aa6f1856b9b",
        "authorId" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "body" : "If the resource version isn't the same, `Update` will fail (return conflict error)",
        "createdAt" : "2017-06-01T22:03:42Z",
        "updatedAt" : "2017-06-04T00:11:19Z",
        "lastEditedBy" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "tags" : [
        ]
      },
      {
        "id" : "9ff4bf70-0760-47f0-bd07-4d44e1b863f2",
        "parentId" : "997fcd60-a379-4e58-b28c-6aa6f1856b9b",
        "authorId" : "cdb05f24-d700-4d96-a683-3e4de7effbf5",
        "body" : "Optimistic locking which is used by Update(PUT) should take care of that.",
        "createdAt" : "2017-06-01T22:45:34Z",
        "updatedAt" : "2017-06-04T00:11:19Z",
        "lastEditedBy" : "cdb05f24-d700-4d96-a683-3e4de7effbf5",
        "tags" : [
        ]
      }
    ],
    "commit" : "edabdac094b4b3b3cb29b03af75256e54b5cfca2",
    "line" : 136,
    "diffHunk" : "@@ -1,1 +276,280 @@\t\t}\n\t\tds.Spec.Template = *toTemplate\n\t\t_, err = r.c.Extensions().DaemonSets(ds.Namespace).Update(ds)\n\t\treturn err\n\t})"
  },
  {
    "id" : "95c05ad8-3ac9-49ee-bb2b-8d32372c90b6",
    "prId" : 31110,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b4b4bd39-99f0-4dd0-80d9-e7f0b98e664d",
        "parentId" : null,
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "Move this above the Paused check so you won't need to add !dryRun there.\n",
        "createdAt" : "2016-08-22T13:14:38Z",
        "updatedAt" : "2016-09-08T00:02:23Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      },
      {
        "id" : "11fd3e24-e591-47e8-b012-672ab63eef4d",
        "parentId" : "b4b4bd39-99f0-4dd0-80d9-e7f0b98e664d",
        "authorId" : "9eb1241d-3dca-4a34-a85d-a880ba615f8c",
        "body" : "Done.\n",
        "createdAt" : "2016-08-23T02:42:31Z",
        "updatedAt" : "2016-09-08T00:02:23Z",
        "lastEditedBy" : "9eb1241d-3dca-4a34-a85d-a880ba615f8c",
        "tags" : [
        ]
      }
    ],
    "commit" : "6a68dbdac4920976bf98f4fefcd216749947f338",
    "line" : null,
    "diffHunk" : "@@ -1,1 +56,60 @@\t\treturn \"\", fmt.Errorf(\"passed object is not a Deployment: %#v\", obj)\n\t}\n\tif dryRun {\n\t\treturn simpleDryRun(d, r.c, toRevision)\n\t}"
  },
  {
    "id" : "b96d6913-2f34-4de0-a4d1-f63cdeafbf1e",
    "prId" : 19835,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1066b9e3-d547-4905-bf96-853b1d200cc4",
        "parentId" : null,
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "We also need to return here right? \n",
        "createdAt" : "2016-02-02T09:14:05Z",
        "updatedAt" : "2016-02-02T22:20:17Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      },
      {
        "id" : "a3477b8a-b050-4c7d-8fe9-f2c75a795595",
        "parentId" : "1066b9e3-d547-4905-bf96-853b1d200cc4",
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "Ah, next iteration we will return because of !ok, that's fine\n",
        "createdAt" : "2016-02-02T09:14:47Z",
        "updatedAt" : "2016-02-02T22:20:17Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      }
    ],
    "commit" : "442c75045ab0d9558d185b83e906f6123b25781b",
    "line" : 100,
    "diffHunk" : "@@ -1,1 +98,102 @@\t\t\t}\n\t\tcase <-signals:\n\t\t\tw.Stop()\n\t\t}\n\t}"
  },
  {
    "id" : "fc9ba6a9-468f-462e-b84a-376d783cbd21",
    "prId" : 19835,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "43990efe-fcad-4d6f-8274-bc3be41638d4",
        "parentId" : null,
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "Why do we need the list above? Actually, why do you need to specify the resource version here?\n",
        "createdAt" : "2016-02-02T20:41:28Z",
        "updatedAt" : "2016-02-02T22:20:17Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      },
      {
        "id" : "2e228354-ba2e-4f31-8fce-a7a9bd3ca2cb",
        "parentId" : "43990efe-fcad-4d6f-8274-bc3be41638d4",
        "authorId" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "body" : "If we don't List first and get `ResourceRevision` to set in Watch, Watch will return all events back, not just the latest ones. (i.e. we don't know what events are added/updated after the call to Rollback)\n",
        "createdAt" : "2016-02-02T22:06:04Z",
        "updatedAt" : "2016-02-02T22:20:17Z",
        "lastEditedBy" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "tags" : [
        ]
      }
    ],
    "commit" : "442c75045ab0d9558d185b83e906f6123b25781b",
    "line" : 71,
    "diffHunk" : "@@ -1,1 +69,73 @@\t}\n\t// Watch for the changes of events\n\twatch, err := r.c.Events(namespace).Watch(api.ListOptions{Watch: true, ResourceVersion: events.ResourceVersion})\n\tif err != nil {\n\t\treturn result, err"
  }
]