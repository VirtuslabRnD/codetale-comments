[
  {
    "id" : "d5707003-3551-481d-afa2-cd719f25a3cd",
    "prId" : 42948,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/42948#pullrequestreview-26775323",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "79aed2a8-72ec-43f7-b523-c44561e4bf42",
        "parentId" : null,
        "authorId" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "body" : "Nice catch.",
        "createdAt" : "2017-03-14T10:57:58Z",
        "updatedAt" : "2017-03-14T10:57:58Z",
        "lastEditedBy" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "tags" : [
        ]
      }
    ],
    "commit" : "b2f530d75643e61ac398c05a3a57f37b3ab4f3f8",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +67,71 @@\t\tfromLiteralArray, isArray := fromLiteralStrings.([]string)\n\t\tif !isArray {\n\t\t\treturn nil, fmt.Errorf(\"expected []string, found :%v\", fromLiteralStrings)\n\t\t}\n\t\tdelegate.LiteralSources = fromLiteralArray"
  },
  {
    "id" : "3a6cc109-cf41-40df-b1c9-43f458f25a18",
    "prId" : 38882,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/38882#pullrequestreview-22638205",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "09b71ee6-c865-43d9-be40-de7a433b0882",
        "parentId" : null,
        "authorId" : "ad267631-96d1-4bad-b913-e8d6342e65a2",
        "body" : "\"from-env-file must point to a file, not directory\"",
        "createdAt" : "2017-02-17T17:02:02Z",
        "updatedAt" : "2017-03-08T15:59:00Z",
        "lastEditedBy" : "ad267631-96d1-4bad-b913-e8d6342e65a2",
        "tags" : [
        ]
      },
      {
        "id" : "99cad37c-1005-444f-8573-acca87f61f05",
        "parentId" : "09b71ee6-c865-43d9-be40-de7a433b0882",
        "authorId" : "6314844c-5310-477a-96a1-0fc838ec485f",
        "body" : "Right, if its a directory, we error saying it needs to be a file.",
        "createdAt" : "2017-02-18T13:49:04Z",
        "updatedAt" : "2017-03-08T15:59:00Z",
        "lastEditedBy" : "6314844c-5310-477a-96a1-0fc838ec485f",
        "tags" : [
        ]
      }
    ],
    "commit" : "f2815156b0854ccebce8062f5dd5c5dd5c1a962f",
    "line" : 72,
    "diffHunk" : "@@ -1,1 +220,224 @@\t}\n\tif info.IsDir() {\n\t\treturn fmt.Errorf(\"must be a file\")\n\t}\n"
  },
  {
    "id" : "b4fcb6ff-0895-4900-be3f-5ca499ef8bb4",
    "prId" : 20777,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4d4ce6c7-46d8-47e3-bca8-d99fe36864df",
        "parentId" : null,
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "more godoc nit\n",
        "createdAt" : "2016-02-18T21:44:14Z",
        "updatedAt" : "2016-02-19T03:48:49Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      }
    ],
    "commit" : "7a243cb61514b4c3e94ae32312ecb4fb117dbf84",
    "line" : null,
    "diffHunk" : "@@ -1,1 +143,147 @@// handleConfigMapFromFileSources adds the specified file source information\n// into the provided configMap\nfunc handleConfigMapFromFileSources(configMap *api.ConfigMap, fileSources []string) error {\n\tfor _, fileSource := range fileSources {\n\t\tkeyName, filePath, err := parseFileSource(fileSource)"
  },
  {
    "id" : "fa3caf52-474c-46cc-9897-38500dc02f63",
    "prId" : 20777,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8ccb7549-c0bf-4a7f-9362-60fe72e31718",
        "parentId" : null,
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "do we share the same validation?  maybe we should have a specific method for config map?\n",
        "createdAt" : "2016-02-18T21:44:46Z",
        "updatedAt" : "2016-02-19T03:48:49Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      },
      {
        "id" : "be47ce71-77bc-4e34-9095-521e83570787",
        "parentId" : "8ccb7549-c0bf-4a7f-9362-60fe72e31718",
        "authorId" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "body" : "@derekwaynecarr Secret and ConfigMap have the same validation requirements for keys\n",
        "createdAt" : "2016-02-18T21:58:50Z",
        "updatedAt" : "2016-02-19T03:48:49Z",
        "lastEditedBy" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "tags" : [
        ]
      }
    ],
    "commit" : "7a243cb61514b4c3e94ae32312ecb4fb117dbf84",
    "line" : null,
    "diffHunk" : "@@ -1,1 +202,206 @@\t// Note, the rules for ConfigMap keys are the exact same as the ones for SecretKeys\n\t// to be consistent; validation.IsSecretKey is used here intentionally.\n\tif !validation.IsSecretKey(keyName) {\n\t\treturn fmt.Errorf(\"%v is not a valid key name for a configMap\", keyName)\n\t}"
  }
]