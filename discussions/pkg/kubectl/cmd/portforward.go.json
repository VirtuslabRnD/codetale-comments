[
  {
    "id" : "557b8522-414f-469d-b54e-fd857929b64d",
    "prId" : 59809,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/59809#pullrequestreview-96720415",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e805db6f-b06b-493e-93f7-9edbcb56cf82",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "Just realized that if the user does `:443` and the service port 443 has a target port of 8443, the user will still expect 443 locally, so we should translate that to `443:8443`",
        "createdAt" : "2018-02-15T01:37:21Z",
        "updatedAt" : "2018-02-15T01:37:21Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "cde8337d-2d8e-48e4-acbf-660d814438fd",
        "parentId" : "e805db6f-b06b-493e-93f7-9edbcb56cf82",
        "authorId" : "71637569-db5d-47fd-8e7d-f6258c025362",
        "body" : "The usage for port-forward is to generate a random port if the local port (the part of string before :) is omitted, so passing :443 means to attach remote port 443 (or what it gets translated into) to a randomly picked local port.  I can add the following test case if that helps people understand the behavior better.\r\n\r\n```\r\n                {\r\n                        name: \"test success (local port omitted)\",\r\n                        svc: api.Service{\r\n                                Spec: api.ServiceSpec{\r\n                                        Ports: []api.ServicePort{\r\n                                                {\r\n                                                        Port: 443,\r\n                                                        TargetPort: intstr.FromString(\"https\"),\r\n                                                },\r\n                                        },\r\n                                },\r\n                        },\r\n                        pod: api.Pod{\r\n                                Spec: api.PodSpec{\r\n                                        Containers: []api.Container{\r\n                                                {\r\n                                                        Ports: []api.ContainerPort{\r\n                                                                {\r\n                                                                        Name:          \"https\",\r\n                                                                        ContainerPort: int32(8443)},\r\n                                                        },\r\n                                                },\r\n                                        },\r\n                                },\r\n                        },\r\n                        ports:      []string{\":443\"},\r\n                        translated: []string{\":8443\"},\r\n                        err:        false,\r\n                },\r\n```",
        "createdAt" : "2018-02-15T01:52:24Z",
        "updatedAt" : "2018-02-15T01:52:25Z",
        "lastEditedBy" : "71637569-db5d-47fd-8e7d-f6258c025362",
        "tags" : [
        ]
      },
      {
        "id" : "63a19951-2386-4f0d-86bc-00c8ed4397fc",
        "parentId" : "e805db6f-b06b-493e-93f7-9edbcb56cf82",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "Oh, you're rightâ€¦ I misread the examples",
        "createdAt" : "2018-02-15T02:01:23Z",
        "updatedAt" : "2018-02-15T02:01:23Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "4a0bbf2363a5ac93d674647ecaf46388c0732881",
    "line" : 43,
    "diffHunk" : "@@ -1,1 +157,161 @@\t\t\treturn nil, err\n\t\t} else {\n\t\t\tif int32(portnum) != containerPort {\n\t\t\t\ttranslated = append(translated, fmt.Sprintf(\"%s:%d\", parts[0], containerPort))\n\t\t\t} else {"
  },
  {
    "id" : "b0738799-b7a0-4e04-ba3f-9a4b195451ed",
    "prId" : 30222,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d2e238ba-58ab-433c-95d9-141e6d58f2ca",
        "parentId" : null,
        "authorId" : "8076e56f-768c-4f89-90e6-045ef34e1525",
        "body" : "This struct should only store flag values that are set from command line. `Config`, `Client`, `PortForwarder`, `StopChannel`, `ReadyChannel` can all be instantiated as local variables inside `ForwardPorts` without changing any params.\n",
        "createdAt" : "2016-08-08T17:18:45Z",
        "updatedAt" : "2016-08-12T13:46:22Z",
        "lastEditedBy" : "8076e56f-768c-4f89-90e6-045ef34e1525",
        "tags" : [
        ]
      },
      {
        "id" : "db9b4f71-563e-4901-b0e4-da9987bab6d5",
        "parentId" : "d2e238ba-58ab-433c-95d9-141e6d58f2ca",
        "authorId" : "1c29cbe8-a6a5-454b-9a40-847af1688c43",
        "body" : "@jlowdermilk  By the specification `<CommandName>Config` struct (here `PortForwardOptions`) should contain all variables required for the command to run (to ease testing). Building this I was also inspired by the `LogsOptions` struct https://github.com/kubernetes/kubernetes/blob/master/pkg/kubectl/cmd/logs.go#L56 used as example.\n",
        "createdAt" : "2016-08-09T08:31:25Z",
        "updatedAt" : "2016-08-12T13:46:22Z",
        "lastEditedBy" : "1c29cbe8-a6a5-454b-9a40-847af1688c43",
        "tags" : [
        ]
      }
    ],
    "commit" : "c5babe239614fa96e5458af7c87fd54e98ac01a2",
    "line" : null,
    "diffHunk" : "@@ -1,1 +35,39 @@\n// PortForwardOptions contains all the options for running the port-forward cli command.\ntype PortForwardOptions struct {\n\tNamespace     string\n\tPodName       string"
  },
  {
    "id" : "46f11c95-34d9-4c73-a7fb-c108cbfdc83a",
    "prId" : 11138,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "377f9bcc-a6b2-4f3e-ba35-38a9305f3595",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "Doesn't it make sense to just move this check after the if/else below?  That way you're only testing `len(podName)`.\n",
        "createdAt" : "2015-07-23T17:36:07Z",
        "updatedAt" : "2015-08-07T09:25:27Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "e76e92ff-aa63-447c-8591-23951e190636",
        "parentId" : "377f9bcc-a6b2-4f3e-ba35-38a9305f3595",
        "authorId" : "72935ebf-c497-440a-ac8d-70d86560a131",
        "body" : "No,  it doestn't. We should check len(podName) and len(args) firstly, the other way to check is: \n\n``` go\nif len(podName) != 0 {\n    printDeprecationWarning(\"port-forward POD\", \"-p POD\")\n} else if  len(args) == 0 {\n    return cmdutil.UsageError(cmd, \"POD is required for port-forward\")\n} else {\n    podName = args[0]\n    args = args[1:]\n}\n```\n\nBut I don't think this is better than the original one, so I keep the original one\n",
        "createdAt" : "2015-07-31T06:02:28Z",
        "updatedAt" : "2015-08-07T09:25:27Z",
        "lastEditedBy" : "72935ebf-c497-440a-ac8d-70d86560a131",
        "tags" : [
        ]
      }
    ],
    "commit" : "90f4c79bb9d7fae99c4f78e43b56423ca2774679",
    "line" : 41,
    "diffHunk" : "@@ -1,1 +76,80 @@func RunPortForward(f *cmdutil.Factory, cmd *cobra.Command, args []string, fw portForwarder) error {\n\tpodName := cmdutil.GetFlagString(cmd, \"pod\")\n\tif len(podName) == 0 && len(args) == 0 {\n\t\treturn cmdutil.UsageError(cmd, \"POD is required for port-forward\")\n\t}"
  }
]