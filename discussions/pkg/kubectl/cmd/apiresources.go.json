[
  {
    "id" : "f663ae40-127a-4f9d-a78e-f0e2b629d740",
    "prId" : 63254,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/63254#pullrequestreview-116085890",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b74bb0fb-75e3-4f97-bacd-4f043793e153",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "Interesting use of name.  I can buy it.",
        "createdAt" : "2018-04-27T21:16:06Z",
        "updatedAt" : "2018-04-27T21:16:06Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "deeb6b2a99d884d29bcb46f3c381a0fdeacd8a57",
    "line" : 54,
    "diffHunk" : "@@ -1,1 +179,183 @@\tfor _, r := range resources {\n\t\tswitch o.Output {\n\t\tcase \"name\":\n\t\t\tname := r.APIResource.Name\n\t\t\tif len(r.APIGroup) > 0 {"
  },
  {
    "id" : "3f701927-1438-4944-aec3-16319335240f",
    "prId" : 42873,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/42873#pullrequestreview-60495139",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "efde8d78-a11a-4ee4-8f29-ebfa7b9f93ef",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "sorting by group, then resource, would put related resources together, which is likely to produce a more coherent list",
        "createdAt" : "2017-09-05T02:41:02Z",
        "updatedAt" : "2018-03-09T09:48:08Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "415cdc6c-fe5c-4042-8eba-85c33445e987",
        "parentId" : "efde8d78-a11a-4ee4-8f29-ebfa7b9f93ef",
        "authorId" : "3c1422a0-6358-4857-8f56-961979171514",
        "body" : "Since `sortableGroupResource` is private and only used for sorting, why not to make it concise as below to replace `sort.Stable(sortableGroupResource(resources))`.\r\n\r\n```\r\nsort.Slice(resources, func(i, j int) bool {\r\n    ....\r\n})\r\n```",
        "createdAt" : "2017-09-05T04:50:09Z",
        "updatedAt" : "2018-03-09T09:48:08Z",
        "lastEditedBy" : "3c1422a0-6358-4857-8f56-961979171514",
        "tags" : [
        ]
      }
    ],
    "commit" : "110641b34c9e220171f319af6e4f48464cc7a3d6",
    "line" : 206,
    "diffHunk" : "@@ -1,1 +204,208 @@func (s sortableGroupResource) Len() int      { return len(s) }\nfunc (s sortableGroupResource) Swap(i, j int) { s[i], s[j] = s[j], s[i] }\nfunc (s sortableGroupResource) Less(i, j int) bool {\n\tret := strings.Compare(s[i].APIGroup, s[j].APIGroup)\n\tif ret > 0 {"
  },
  {
    "id" : "fe455948-83e6-47cb-a8fa-a54f59778a82",
    "prId" : 42873,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/42873#pullrequestreview-60485767",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "98973e97-2628-4245-8128-2e1683f7bd30",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "f.DiscoveryClient() uses cached data. Since the point of this command is to fetch available resources, we always want fresh data, so do this before calling `ServerPreferredResources`:\r\n\r\n```\r\n// Always request fresh data from the server\r\ndiscoveryclient.Invalidate()\r\n```",
        "createdAt" : "2017-09-05T02:44:49Z",
        "updatedAt" : "2018-03-09T09:48:08Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "110641b34c9e220171f319af6e4f48464cc7a3d6",
    "line" : 120,
    "diffHunk" : "@@ -1,1 +118,122 @@\t\treturn err\n\t}\n\n\t// Always request fresh data from the server\n\tdiscoveryclient.Invalidate()"
  }
]