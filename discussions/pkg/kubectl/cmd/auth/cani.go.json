[
  {
    "id" : "fa10c055-9690-48ac-a31d-2c894883c574",
    "prId" : 76014,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/76014#pullrequestreview-224387707",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4575dfff-9bf5-47aa-89cb-d8e5202880a3",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "short-circuit if the resource they are checking is `*`",
        "createdAt" : "2019-04-09T13:03:58Z",
        "updatedAt" : "2019-04-10T05:14:15Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "7fbd71835e9334446368461209d34173e5b6641b",
    "line" : 58,
    "diffHunk" : "@@ -1,1 +377,381 @@\t\treturn true, nil\n\t}\n\tapiResourceList, err := discoveryClient.ServerResourcesForGroupVersion(schema.GroupVersion{\n\t\tGroup: gvr.Group, Version: gvr.Version,\n\t}.String())"
  },
  {
    "id" : "9b93c690-9334-4b11-83a5-1f00ea1306a7",
    "prId" : 64820,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/64820#pullrequestreview-202883483",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "000090d8-483b-4e7e-8020-56d8db70026a",
        "parentId" : null,
        "authorId" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "body" : "this can't be set w/o list flag, yet you're not checking its value so how do you know it wasn't set?",
        "createdAt" : "2019-01-24T17:09:36Z",
        "updatedAt" : "2019-01-24T17:10:59Z",
        "lastEditedBy" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "tags" : [
        ]
      },
      {
        "id" : "c8206c48-9d0d-4d65-82ae-4876241b433d",
        "parentId" : "000090d8-483b-4e7e-8020-56d8db70026a",
        "authorId" : "451e6d32-0495-410e-a53b-943e3dd34a71",
        "body" : "@soltysh I checked List flag in Line 185",
        "createdAt" : "2019-01-25T04:47:06Z",
        "updatedAt" : "2019-01-25T04:47:06Z",
        "lastEditedBy" : "451e6d32-0495-410e-a53b-943e3dd34a71",
        "tags" : [
        ]
      },
      {
        "id" : "f81a1516-715b-46e6-a9f9-d1885729ded6",
        "parentId" : "000090d8-483b-4e7e-8020-56d8db70026a",
        "authorId" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "body" : "Right, sorry I missed the `return nil` after the internal condition. ",
        "createdAt" : "2019-02-12T20:11:44Z",
        "updatedAt" : "2019-02-12T20:12:00Z",
        "lastEditedBy" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "tags" : [
        ]
      }
    ],
    "commit" : "d4f5228b81eb6769fdde197d4f40cfcdb2c4bca0",
    "line" : 171,
    "diffHunk" : "@@ -1,1 +199,203 @@\t}\n\n\tif o.NoHeaders {\n\t\treturn fmt.Errorf(\"--no-headers cannot be set without --list specified\")\n\t}"
  },
  {
    "id" : "43e33a6b-0bb9-49db-8d20-71465fdfb870",
    "prId" : 52761,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/52761#pullrequestreview-64016938",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a165baf7-f072-4a9e-a82c-79439a103e70",
        "parentId" : null,
        "authorId" : "54f3e5e9-1cb7-407a-b12d-39bb41fa5e9e",
        "body" : "https://github.com/golang/go/wiki/CodeReviewComments#error-strings",
        "createdAt" : "2017-09-20T05:16:22Z",
        "updatedAt" : "2017-09-21T01:58:10Z",
        "lastEditedBy" : "54f3e5e9-1cb7-407a-b12d-39bb41fa5e9e",
        "tags" : [
        ]
      },
      {
        "id" : "65321e07-661a-43b9-8d94-b437d2278074",
        "parentId" : "a165baf7-f072-4a9e-a82c-79439a103e70",
        "authorId" : "1b5a940a-2f98-4b21-a0fe-2e30fb957eb5",
        "body" : "got it. I will revert from NonResourceURL to nonResourceURL",
        "createdAt" : "2017-09-20T06:29:06Z",
        "updatedAt" : "2017-09-21T01:58:10Z",
        "lastEditedBy" : "1b5a940a-2f98-4b21-a0fe-2e30fb957eb5",
        "tags" : [
        ]
      },
      {
        "id" : "35ff1d15-4ad8-4e97-a1fb-a72996ee914e",
        "parentId" : "a165baf7-f072-4a9e-a82c-79439a103e70",
        "authorId" : "a09f2d48-fec0-4c0d-bd81-6de7378a6ebf",
        "body" : "@shiywang I think we still should use `NonResourceURL` here. As is mentioned in the link you provided, `NonResourceURL` is the \"proper noun\"\r\n```\r\nError strings should not be capitalized (unless beginning with proper nouns or acronyms) or end with punctuation, since they are usually printed following other context.\r\n```",
        "createdAt" : "2017-09-20T06:34:48Z",
        "updatedAt" : "2017-09-21T01:58:10Z",
        "lastEditedBy" : "a09f2d48-fec0-4c0d-bd81-6de7378a6ebf",
        "tags" : [
        ]
      },
      {
        "id" : "c5efbaed-b3fd-4cbe-b021-9009c639e8d1",
        "parentId" : "a165baf7-f072-4a9e-a82c-79439a103e70",
        "authorId" : "54f3e5e9-1cb7-407a-b12d-39bb41fa5e9e",
        "body" : "all right, you win",
        "createdAt" : "2017-09-20T07:40:01Z",
        "updatedAt" : "2017-09-21T01:58:10Z",
        "lastEditedBy" : "54f3e5e9-1cb7-407a-b12d-39bb41fa5e9e",
        "tags" : [
        ]
      },
      {
        "id" : "d3ddf8c2-8bfd-428e-ae77-1918a1046bed",
        "parentId" : "a165baf7-f072-4a9e-a82c-79439a103e70",
        "authorId" : "a09f2d48-fec0-4c0d-bd81-6de7378a6ebf",
        "body" : "@shiywang :smile: ",
        "createdAt" : "2017-09-20T15:29:26Z",
        "updatedAt" : "2017-09-21T01:58:10Z",
        "lastEditedBy" : "a09f2d48-fec0-4c0d-bd81-6de7378a6ebf",
        "tags" : [
        ]
      }
    ],
    "commit" : "142c2dd67bf21b1ca3a1d5e32925a8576dde0ff5",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +160,164 @@\t\t}\n\t\tif o.Resource != (schema.GroupVersionResource{}) || o.ResourceName != \"\" {\n\t\t\treturn fmt.Errorf(\"NonResourceURL and ResourceName can not specified together\")\n\t\t}\n\t}"
  },
  {
    "id" : "7003bc31-cfeb-4ccb-9681-65211c63dcba",
    "prId" : 41077,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/41077#pullrequestreview-22485926",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c27d8ac5-3bea-4b4a-96dc-70726f08cc90",
        "parentId" : null,
        "authorId" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "body" : "IIUC, this will only work for core-apiservers and can't use user-apiservers directly.  Is that fine?",
        "createdAt" : "2017-02-16T21:09:18Z",
        "updatedAt" : "2017-02-23T14:12:38Z",
        "lastEditedBy" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "tags" : [
        ]
      },
      {
        "id" : "a286704b-bb37-4152-b64b-86684166173a",
        "parentId" : "c27d8ac5-3bea-4b4a-96dc-70726f08cc90",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "Nothing stops user apiservers from including SAR and not registering it to be aggregated. In fact, I would encourage that",
        "createdAt" : "2017-02-17T00:48:49Z",
        "updatedAt" : "2017-02-23T14:12:38Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "4671300f-32c8-4ca1-a213-3c7988552d83",
        "parentId" : "c27d8ac5-3bea-4b4a-96dc-70726f08cc90",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "> IIUC, this will only work for core-apiservers and can't use user-apiservers directly. Is that fine?\r\n\r\nConsider cases like a someone evaluating a new API server before turning it one.  He'll proxy to the service and then do things to check functionality and permissions.",
        "createdAt" : "2017-02-17T12:34:37Z",
        "updatedAt" : "2017-02-23T14:12:38Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "5b4a611fd7921028144c30df195c2e66a5ba75ea",
    "line" : 121,
    "diffHunk" : "@@ -1,1 +119,123 @@\n\tvar err error\n\tclient, err := f.ClientSet()\n\tif err != nil {\n\t\treturn err"
  },
  {
    "id" : "688572cf-bbdd-42c6-b0ec-82afa570e9d4",
    "prId" : 41077,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/41077#pullrequestreview-23386207",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5d053637-3ed8-458e-9fc8-2413af303d54",
        "parentId" : null,
        "authorId" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "body" : "Is this standard syntax to have kind.group?  Do we do group.kind anywhere?",
        "createdAt" : "2017-02-22T16:47:24Z",
        "updatedAt" : "2017-02-23T14:12:38Z",
        "lastEditedBy" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "tags" : [
        ]
      },
      {
        "id" : "c3ef53d8-2d6a-42c9-9e6c-d11e00d4cb79",
        "parentId" : "5d053637-3ed8-458e-9fc8-2413af303d54",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "> Is this standard syntax to have kind.group? Do we do group.kind anywhere?\r\n\r\n`kubectl get, patch, update, delete, apply` and everywhere that uses a resource builder uses `resource.group` that matches this help.",
        "createdAt" : "2017-02-22T17:49:44Z",
        "updatedAt" : "2017-02-23T14:12:38Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "9e00001e-0173-42b2-9efc-57515b8adb9c",
        "parentId" : "5d053637-3ed8-458e-9fc8-2413af303d54",
        "authorId" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "body" : "Very interesting.  This is the first time I have noticed it in the help documentation.",
        "createdAt" : "2017-02-23T02:24:12Z",
        "updatedAt" : "2017-02-23T14:12:38Z",
        "lastEditedBy" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "tags" : [
        ]
      }
    ],
    "commit" : "5b4a611fd7921028144c30df195c2e66a5ba75ea",
    "line" : 67,
    "diffHunk" : "@@ -1,1 +65,69 @@\n\t\t# Check to see if I can list deployments in my current namespace\n\t\tkubectl auth can-i list deployments.extensions\n\n\t\t# Check to see if I can get the job named \"bar\" in namespace \"foo\""
  },
  {
    "id" : "c91c9649-175b-4f88-b71f-7c31217fa172",
    "prId" : 41077,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/41077#pullrequestreview-23474590",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "af57f16d-1dc1-42cf-8481-2f2368a1ab36",
        "parentId" : null,
        "authorId" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "body" : "nit: Should we provide a user friendly message in the event the api is not enabled?",
        "createdAt" : "2017-02-23T02:29:17Z",
        "updatedAt" : "2017-02-23T14:12:38Z",
        "lastEditedBy" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "tags" : [
        ]
      },
      {
        "id" : "1f1d655a-4cfe-4724-9ead-335928e0a9e0",
        "parentId" : "af57f16d-1dc1-42cf-8481-2f2368a1ab36",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "> nit: Should we provide a user friendly message in the event the api is not enabled?\r\n\r\nThis would return our 404, which gets processed through our normal `checkerr` path and should come back looking reasonable to a user.  A general prereq discovery pattern for kubectl would be neat though.  Especially as we get more API servers.",
        "createdAt" : "2017-02-23T13:28:06Z",
        "updatedAt" : "2017-02-23T14:12:38Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "5b4a611fd7921028144c30df195c2e66a5ba75ea",
    "line" : 160,
    "diffHunk" : "@@ -1,1 +158,162 @@\t}\n\n\tresponse, err := o.SelfSARClient.SelfSubjectAccessReviews().Create(sar)\n\tif err != nil {\n\t\treturn false, err"
  }
]