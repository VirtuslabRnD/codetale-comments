[
  {
    "id" : "8204ec11-e801-44ad-b2ff-252589de6dff",
    "prId" : 63984,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/63984#pullrequestreview-121524454",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6e177a61-3903-4a68-9fc9-80c5fdc04e0f",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "don't do it like this next time.  Update the function to the polymorphic helper type, track a RESTClientGetter, and use them together.",
        "createdAt" : "2018-05-18T18:23:27Z",
        "updatedAt" : "2018-05-18T18:23:28Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "f3a46cf626fc39cb889c577034440c53e92ad342",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +111,115 @@\n\to.BuilderArgs = args\n\to.StatusViewer = func(mapping *meta.RESTMapping) (kubectl.StatusViewer, error) {\n\t\treturn polymorphichelpers.StatusViewerFn(f, mapping)\n\t}"
  },
  {
    "id" : "9bbe47a4-aadb-432a-aa9f-0e6d27f184a4",
    "prId" : 19946,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1e05bef5-f5d4-4254-a71f-c74b4f21655e",
        "parentId" : null,
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "defer this immediately after using Watch\n",
        "createdAt" : "2016-05-09T13:46:06Z",
        "updatedAt" : "2016-05-10T20:49:44Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      },
      {
        "id" : "104d9a82-379a-4783-90e0-9a27021bb282",
        "parentId" : "1e05bef5-f5d4-4254-a71f-c74b4f21655e",
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "You should remove this though since now it's globally deferred. Also the defer above should be after the error check.\n",
        "createdAt" : "2016-05-10T08:33:18Z",
        "updatedAt" : "2016-05-10T20:49:44Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      },
      {
        "id" : "ace6ba0d-32bf-4ee6-8167-dce0b62047d2",
        "parentId" : "1e05bef5-f5d4-4254-a71f-c74b4f21655e",
        "authorId" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "body" : "Because we're in a watch loop, without this line users will be stuck in this loop even when the rollout is done. I'd like to stop watching after it's done. \n\nI have another question, if we're doing `w.Stop()` when the rollout is done, and in WatchLoop `w.Stop()` is called either when error happens or the interrupt signal is received. Do we still need the `defer w.Stop()`?\n",
        "createdAt" : "2016-05-10T17:39:55Z",
        "updatedAt" : "2016-05-10T20:49:44Z",
        "lastEditedBy" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "tags" : [
        ]
      },
      {
        "id" : "1310ebe7-04c7-452c-82b7-e3f829811137",
        "parentId" : "1e05bef5-f5d4-4254-a71f-c74b4f21655e",
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "Oh I see. No, you don't need the `defer w.Stop` above even though in the unlikely event we error out before the watchloop the watch will be leaked. So I would suggest you to move `w, err := r.Watch(rv)` just before the watchloop since you dont use it before and you are good to go.\n",
        "createdAt" : "2016-05-10T18:17:53Z",
        "updatedAt" : "2016-05-10T20:49:44Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      },
      {
        "id" : "74322ac7-2024-4468-b4f9-d91151e5bc5f",
        "parentId" : "1e05bef5-f5d4-4254-a71f-c74b4f21655e",
        "authorId" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "body" : "Oh, right! It's fixed now. Thanks!\n",
        "createdAt" : "2016-05-10T20:49:17Z",
        "updatedAt" : "2016-05-10T20:49:44Z",
        "lastEditedBy" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "tags" : [
        ]
      }
    ],
    "commit" : "67becccda00e17621a83fe0f9a1441ee07f2deb6",
    "line" : 137,
    "diffHunk" : "@@ -1,1 +135,139 @@\t\t// Quit waiting if the rollout is done\n\t\tif done {\n\t\t\tw.Stop()\n\t\t}\n\t\treturn nil"
  }
]