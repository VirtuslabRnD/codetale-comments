[
  {
    "id" : "c4ceafda-26f3-45db-a916-8867cbe221b0",
    "prId" : 43171,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/43171#pullrequestreview-30609210",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7f97b95d-a504-4cd5-ade1-9502ab659c94",
        "parentId" : null,
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "Again this whole f(n) belongs elsewhere.  ",
        "createdAt" : "2017-04-03T13:26:13Z",
        "updatedAt" : "2017-04-17T16:57:46Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      },
      {
        "id" : "052b7953-0d31-485c-a58f-88be186f6cd6",
        "parentId" : "7f97b95d-a504-4cd5-ade1-9502ab659c94",
        "authorId" : "38ca4f80-c365-4775-8981-1e56b713b07b",
        "body" : "You mean somewhere in one of scheduler's packages or api packages? Most of the functions for getting taints are in api/helpers.go. If you want I can move those functions to helpers but I guess those pre-dates my changes.",
        "createdAt" : "2017-04-03T14:13:54Z",
        "updatedAt" : "2017-04-17T16:57:46Z",
        "lastEditedBy" : "38ca4f80-c365-4775-8981-1e56b713b07b",
        "tags" : [
        ]
      },
      {
        "id" : "6dada302-a6de-4ecd-9475-75d0c5f26b97",
        "parentId" : "7f97b95d-a504-4cd5-ade1-9502ab659c94",
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "So this should honestly be a topic of conversation for the sig today.  Taints are probably the best example I can think of that has logic sprawl.  \r\n\r\nThere are changes in api, admission, node, scheduler, controllers, kubectl and TBH it needs to be centralized.  A change in one area will affect another, in it's current implementation I almost consider it a bug-factory. \r\n\r\n/cc @davidopp @gmarek ",
        "createdAt" : "2017-04-03T15:44:15Z",
        "updatedAt" : "2017-04-17T16:57:46Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      },
      {
        "id" : "843c6578-34c0-4171-99fa-a479585dbef2",
        "parentId" : "7f97b95d-a504-4cd5-ade1-9502ab659c94",
        "authorId" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "body" : "Agree. We may create a completely separate TaintController controller directory, and move most of the logic there.",
        "createdAt" : "2017-04-03T19:12:43Z",
        "updatedAt" : "2017-04-17T16:57:46Z",
        "lastEditedBy" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "tags" : [
        ]
      },
      {
        "id" : "6332f1cf-dce9-4900-9569-38b48c9a72f5",
        "parentId" : "7f97b95d-a504-4cd5-ade1-9502ab659c94",
        "authorId" : "38ca4f80-c365-4775-8981-1e56b713b07b",
        "body" : "Agreed. There are few predicates and priorities in scheduler especially the ones that are coming from nodeSpec or PodSpec that are difficult to develop as they sprawl different components. Till we have a plan to centralize, we need to create a developer document which tells what all files to touch. If not, it becomes difficult for new developers coming in as they have to look at older PR's to find what files have to be modified.",
        "createdAt" : "2017-04-03T19:23:13Z",
        "updatedAt" : "2017-04-17T16:57:46Z",
        "lastEditedBy" : "38ca4f80-c365-4775-8981-1e56b713b07b",
        "tags" : [
        ]
      }
    ],
    "commit" : "5bdf79baf2a94d92ea8354fb180b4ee9ba62fa74",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +121,125 @@// reorganizeTaints returns the updated set of taints, taking into account old taints that were not updated,\n// old taints that were updated, old taints that were deleted, and new taints.\nfunc reorganizeTaints(node *v1.Node, overwrite bool, taintsToAdd []v1.Taint, taintsToRemove []v1.Taint) (string, []v1.Taint, error) {\n\tnewTaints := append([]v1.Taint{}, taintsToAdd...)\n\toldTaints := node.Spec.Taints"
  },
  {
    "id" : "e0ce4532-4afc-48cb-8ff9-39f6ae46fc18",
    "prId" : 35647,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/35647#pullrequestreview-8290847",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "62010cc8-a93d-47b8-9dd0-5e846bb23e14",
        "parentId" : null,
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "You cannot error and exit here - servers that don't export /version (for security reasons) are now broken.  All uses of this method must ignore errors.  This is a blocker for 1.5 @saad-ali\n",
        "createdAt" : "2016-11-12T02:20:02Z",
        "updatedAt" : "2016-11-12T02:20:02Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "34891ad9f628f831fad9eacc25860841c68464a5",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +322,326 @@\t}\n\n\tsmPatchVersion, err := cmdutil.GetServerSupportedSMPatchVersionFromFactory(o.f)\n\tif err != nil {\n\t\treturn err"
  },
  {
    "id" : "3b305805-825f-4fff-bf51-e51a9164d3cb",
    "prId" : 24134,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "04750413-b96e-4941-8646-abd3829b41a7",
        "parentId" : null,
        "authorId" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "body" : "Add a comment to this function, something like \"Return the updated set of taints, taking into account old taints that were not updated, old taints that were updated, old taints that were deleted, and new taints.\"\n",
        "createdAt" : "2016-05-15T02:19:17Z",
        "updatedAt" : "2016-05-18T15:08:30Z",
        "lastEditedBy" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "tags" : [
        ]
      }
    ],
    "commit" : "52fb89ff7326b3570e9c42a435081dab559f610b",
    "line" : null,
    "diffHunk" : "@@ -1,1 +123,127 @@// reorganizeTaints returns the updated set of taints, taking into account old taints that were not updated,\n// old taints that were updated, old taints that were deleted, and new taints.\nfunc reorganizeTaints(accessor meta.Object, overwrite bool, taintsToAdd []api.Taint, removeKeys []string) ([]api.Taint, error) {\n\tnewTaints := append([]api.Taint{}, taintsToAdd...)\n"
  },
  {
    "id" : "c1350c39-d106-4564-821e-17dfad416f7f",
    "prId" : 24134,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8e745b95-2cde-4afb-bf71-57323d226fe8",
        "parentId" : null,
        "authorId" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "body" : "neither nodes nor taints have namespaces, so I don't think this is necessary. But I don't know the kubectl code very well, so I'm not sure what happens...\n",
        "createdAt" : "2016-05-15T02:27:00Z",
        "updatedAt" : "2016-05-18T15:08:30Z",
        "lastEditedBy" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "tags" : [
        ]
      },
      {
        "id" : "1a10dea3-f117-4a19-87d0-a37998e0ca92",
        "parentId" : "8e745b95-2cde-4afb-bf71-57323d226fe8",
        "authorId" : "70ba63ce-18c5-43f6-a9fb-1acd33329390",
        "body" : "The name here is the node name, the namespace is empty string since nodes don't have namespaces.\nI debugged this part, it looks working fine.\n",
        "createdAt" : "2016-05-15T14:20:01Z",
        "updatedAt" : "2016-05-18T15:08:30Z",
        "lastEditedBy" : "70ba63ce-18c5-43f6-a9fb-1acd33329390",
        "tags" : [
        ]
      }
    ],
    "commit" : "52fb89ff7326b3570e9c42a435081dab559f610b",
    "line" : null,
    "diffHunk" : "@@ -1,1 +294,298 @@\t\t\treturn err\n\t\t}\n\t\tname, namespace := info.Name, info.Namespace\n\t\toldData, err := json.Marshal(obj)\n\t\tif err != nil {"
  },
  {
    "id" : "3f56d91d-b399-4ce0-980c-8a48a94c3887",
    "prId" : 24134,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2d17a3e5-57db-4535-a2c2-90c96cc038db",
        "parentId" : null,
        "authorId" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "body" : "I guess you can put \"break\" after this line?\n",
        "createdAt" : "2016-05-15T02:38:50Z",
        "updatedAt" : "2016-05-18T15:08:30Z",
        "lastEditedBy" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "tags" : [
        ]
      }
    ],
    "commit" : "52fb89ff7326b3570e9c42a435081dab559f610b",
    "line" : null,
    "diffHunk" : "@@ -1,1 +358,362 @@\t\tfor _, oldTaint := range oldTaints {\n\t\t\tif taint.Key == oldTaint.Key {\n\t\t\t\tallErrs = append(allErrs, fmt.Errorf(\"Node '%s' already has a taint (%+v), and --overwrite is false\", accessor.GetName(), taint))\n\t\t\t\tbreak\n\t\t\t}"
  }
]