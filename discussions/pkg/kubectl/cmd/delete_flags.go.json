[
  {
    "id" : "93b61aee-b10f-4e89-b3d7-fa68b5bdffef",
    "prId" : 64034,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/64034#pullrequestreview-122105732",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "836fe3dd-5036-46b9-9850-e936343a373d",
        "parentId" : null,
        "authorId" : "fbb90de5-459e-43f3-969b-110ed8a91f5c",
        "body" : "So passing `dynamicClient` here is really only necessary for the other commands that use deletion (`apply`, `replace`), normal `delete` command will initialize its `DeleteOptions.DynamicClient` field in the `Complete()` method...\r\n",
        "createdAt" : "2018-05-22T03:01:03Z",
        "updatedAt" : "2018-05-22T12:47:48Z",
        "lastEditedBy" : "fbb90de5-459e-43f3-969b-110ed8a91f5c",
        "tags" : [
        ]
      },
      {
        "id" : "fbbde658-4527-462c-855b-f9e1680b1082",
        "parentId" : "836fe3dd-5036-46b9-9850-e936343a373d",
        "authorId" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "body" : "Yes, but we're doing this so that other places in the code re-use and not create their own versions of wait. ",
        "createdAt" : "2018-05-22T10:24:31Z",
        "updatedAt" : "2018-05-22T12:47:48Z",
        "lastEditedBy" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "tags" : [
        ]
      }
    ],
    "commit" : "49258593c34c377592865e2adfb3c01cd4c34bbd",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +74,78 @@}\n\nfunc (f *DeleteFlags) ToOptions(dynamicClient dynamic.Interface, streams genericclioptions.IOStreams) *DeleteOptions {\n\toptions := &DeleteOptions{\n\t\tDynamicClient: dynamicClient,"
  },
  {
    "id" : "b0189314-ca66-45a6-b8b8-d97a801ef4c3",
    "prId" : 60717,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/60717#pullrequestreview-115044856",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "77c2170a-a451-409a-81e4-481e5ea4d207",
        "parentId" : null,
        "authorId" : "3c1422a0-6358-4857-8f56-961979171514",
        "body" : "Can use `cmd.Flags().StringVar()` here for missing shorthand letter.",
        "createdAt" : "2018-04-25T06:05:44Z",
        "updatedAt" : "2018-04-25T06:08:30Z",
        "lastEditedBy" : "3c1422a0-6358-4857-8f56-961979171514",
        "tags" : [
        ]
      }
    ],
    "commit" : "8a3125bb99a5acaacb231052020d1b4bc90fc646",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +126,130 @@\t}\n\tif f.FieldSelector != nil {\n\t\tcmd.Flags().StringVarP(f.FieldSelector, \"field-selector\", \"\", *f.FieldSelector, \"Selector (field query) to filter on, supports '=', '==', and '!='.(e.g. --field-selector key1=value1,key2=value2). The server only supports a limited number of field queries per type.\")\n\t}\n\tif f.All != nil {"
  }
]