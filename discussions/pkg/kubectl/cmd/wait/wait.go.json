[
  {
    "id" : "81334ce8-5918-4c81-a9d0-d573d7461a57",
    "prId" : 79123,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/79123#pullrequestreview-290950193",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "52f872db-d385-47b8-aa1f-af3f493ee94a",
        "parentId" : null,
        "authorId" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "body" : "Yeah, I don't think this really makes a difference since the variable would be initialized to false anyway. Expliciit initialization doesn't hurt.",
        "createdAt" : "2019-06-19T16:18:38Z",
        "updatedAt" : "2019-06-19T16:18:38Z",
        "lastEditedBy" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "tags" : [
        ]
      },
      {
        "id" : "83f4c49d-ed6a-440f-b21f-b775d8c49334",
        "parentId" : "52f872db-d385-47b8-aa1f-af3f493ee94a",
        "authorId" : "4b7cd600-f291-4546-97df-3349f60651dc",
        "body" : "@apelisse The `--local` flag of `kubectl wait` appeared in v1.16.0 due to initializing the variable.\r\n\r\n```\r\n$ kubectl version --client\r\nClient Version: version.Info{Major:\"1\", Minor:\"16\", GitVersion:\"v1.16.0\", GitCommit:\"2bd9643cee5b3b3a5ecbd3af49d09018f0773c77\", GitTreeState:\"clean\", BuildDate:\"2019-09-18T14:36:53Z\", GoVersion:\"go1.12.9\", Compiler:\"gc\", Platform:\"darwin/amd64\"}\r\n$ kubectl wait -h | grep local\r\n\t--local=false: If true, annotation will NOT contact api-server but run locally.\r\n```\r\n\r\nHow does the flag work in `kubectl wait`? If it have no effects, the variable should not be initialized.\r\n",
        "createdAt" : "2019-09-20T04:33:49Z",
        "updatedAt" : "2019-09-20T04:33:50Z",
        "lastEditedBy" : "4b7cd600-f291-4546-97df-3349f60651dc",
        "tags" : [
        ]
      }
    ],
    "commit" : "df08310d6b67b5ce36cca5ae2cd2cfc9798d051a",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +94,98 @@\t\t\tWithAll(false).\n\t\t\tWithAllNamespaces(false).\n\t\t\tWithLocal(false).\n\t\t\tWithLatest(),\n"
  },
  {
    "id" : "21304e0d-5635-4a59-9775-ee2e6c55ab7f",
    "prId" : 69389,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/69389#pullrequestreview-167710587",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7c67c7a5-eb07-4c37-97ee-4644f8d6693f",
        "parentId" : null,
        "authorId" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "body" : "Can you rename the function to `isDeletedOrError` currently the name and the code don't express the same thing. ",
        "createdAt" : "2018-10-11T10:14:15Z",
        "updatedAt" : "2018-10-16T16:55:31Z",
        "lastEditedBy" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "tags" : [
        ]
      },
      {
        "id" : "24ec1180-51c5-404d-b400-d603f98aa2a8",
        "parentId" : "7c67c7a5-eb07-4c37-97ee-4644f8d6693f",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "This only returns true on deleted.",
        "createdAt" : "2018-10-24T02:38:40Z",
        "updatedAt" : "2018-10-24T02:38:40Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "5a8afa073f6b8cbb8b09f997f6db747c39dffb6e",
    "line" : 56,
    "diffHunk" : "@@ -1,1 +309,313 @@// IsDeleted returns true if the object is deleted. It prints any errors it encounters.\nfunc (w Wait) IsDeleted(event watch.Event) (bool, error) {\n\tswitch event.Type {\n\tcase watch.Error:\n\t\t// keep waiting in the event we see an error - we expect the watch to be closed by"
  },
  {
    "id" : "d6137a50-7fd5-4b2f-942d-e036e8dc3846",
    "prId" : 69389,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/69389#pullrequestreview-163743793",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ece9f78b-b782-4d9a-8e50-853540f8f597",
        "parentId" : null,
        "authorId" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "body" : "Same here. ",
        "createdAt" : "2018-10-11T10:15:56Z",
        "updatedAt" : "2018-10-16T16:55:31Z",
        "lastEditedBy" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "tags" : [
        ]
      }
    ],
    "commit" : "5a8afa073f6b8cbb8b09f997f6db747c39dffb6e",
    "line" : 83,
    "diffHunk" : "@@ -1,1 +411,415 @@\nfunc (w ConditionalWait) isConditionMet(event watch.Event) (bool, error) {\n\tif event.Type == watch.Error {\n\t\t// keep waiting in the event we see an error - we expect the watch to be closed by\n\t\t// the server"
  },
  {
    "id" : "f08c4770-86bc-4c26-933c-2003a2afa95b",
    "prId" : 69389,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/69389#pullrequestreview-167710559",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "35472758-55ee-4abd-ad96-7335f11706c5",
        "parentId" : null,
        "authorId" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "body" : "David also meant this condition to look similar to the other one in `isConditionMet`.",
        "createdAt" : "2018-10-17T11:59:11Z",
        "updatedAt" : "2018-10-17T11:59:18Z",
        "lastEditedBy" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "tags" : [
        ]
      },
      {
        "id" : "7c8d4289-4f85-4afa-a4ba-a189503acd15",
        "parentId" : "35472758-55ee-4abd-ad96-7335f11706c5",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "It does?",
        "createdAt" : "2018-10-17T14:37:15Z",
        "updatedAt" : "2018-10-17T14:37:15Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "0e815d4c-3f01-4fb4-ab2b-864519d5d3ee",
        "parentId" : "35472758-55ee-4abd-ad96-7335f11706c5",
        "authorId" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "body" : "How is this different than the other if not?",
        "createdAt" : "2018-10-18T13:48:44Z",
        "updatedAt" : "2018-10-18T13:48:45Z",
        "lastEditedBy" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "tags" : [
        ]
      },
      {
        "id" : "aadb1e28-1da4-4740-ae5f-b46fbb07eeaa",
        "parentId" : "35472758-55ee-4abd-ad96-7335f11706c5",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "The other one calls checkCondition.",
        "createdAt" : "2018-10-24T02:38:25Z",
        "updatedAt" : "2018-10-24T02:38:25Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "5a8afa073f6b8cbb8b09f997f6db747c39dffb6e",
    "line" : 57,
    "diffHunk" : "@@ -1,1 +310,314 @@func (w Wait) IsDeleted(event watch.Event) (bool, error) {\n\tswitch event.Type {\n\tcase watch.Error:\n\t\t// keep waiting in the event we see an error - we expect the watch to be closed by\n\t\t// the server if the error is unrecoverable."
  },
  {
    "id" : "2e16082f-b342-4fd4-b24e-edc6b0339a03",
    "prId" : 64034,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/64034#pullrequestreview-121570784",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "506a644e-1307-410a-b197-073543edeaec",
        "parentId" : null,
        "authorId" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "body" : "I'm not sure if I want to have indefinite wait. Why not cap it at some max, currently `kubectl` uses 5 min heavily, if you look for `kubectl.Timeout`. ",
        "createdAt" : "2018-05-18T20:59:07Z",
        "updatedAt" : "2018-05-22T12:47:48Z",
        "lastEditedBy" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "tags" : [
        ]
      },
      {
        "id" : "faec72e9-220d-4d33-bda5-881bc485c701",
        "parentId" : "506a644e-1307-410a-b197-073543edeaec",
        "authorId" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "body" : "Here or eventually in the delete command itself. ",
        "createdAt" : "2018-05-18T21:08:27Z",
        "updatedAt" : "2018-05-22T12:47:48Z",
        "lastEditedBy" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "tags" : [
        ]
      }
    ],
    "commit" : "49258593c34c377592865e2adfb3c01cd4c34bbd",
    "line" : 187,
    "diffHunk" : "@@ -1,1 +185,189 @@// IsDeleted is a condition func for waiting for something to be deleted\nfunc IsDeleted(info *resource.Info, o *WaitOptions) (runtime.Object, bool, error) {\n\tendTime := time.Now().Add(o.Timeout)\n\tfor {\n\t\tgottenObj, err := o.DynamicClient.Resource(info.Mapping.Resource).Namespace(info.Namespace).Get(info.Name, metav1.GetOptions{})"
  },
  {
    "id" : "454252b1-ddec-4c78-a47c-24ad587a5ecf",
    "prId" : 64034,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/64034#pullrequestreview-121820130",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "812124ec-4a5b-4baa-99ca-acd84c0b7675",
        "parentId" : null,
        "authorId" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "body" : "We need a quiet option, either by not specifying printer or explicitly setting `Quiet` flag in `WaitOptions`. It's needed for `kubectl run` command. ",
        "createdAt" : "2018-05-18T21:07:02Z",
        "updatedAt" : "2018-05-22T12:47:48Z",
        "lastEditedBy" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "tags" : [
        ]
      },
      {
        "id" : "b68f53b1-e43b-4cc3-b4fc-496fbe935a23",
        "parentId" : "812124ec-4a5b-4baa-99ca-acd84c0b7675",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "> We need a quiet option, either by not specifying printer or explicitly setting Quiet flag in WaitOptions. It's needed for kubectl run command.\r\n\r\nPass a discarding printer.  Created in this pull.",
        "createdAt" : "2018-05-21T14:36:32Z",
        "updatedAt" : "2018-05-22T12:47:48Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "49258593c34c377592865e2adfb3c01cd4c34bbd",
    "line" : 175,
    "diffHunk" : "@@ -1,1 +173,177 @@\t\tfinalObject, success, err := o.ConditionFn(info, o)\n\t\tif success {\n\t\t\to.Printer.PrintObj(finalObject, o.Out)\n\t\t\treturn nil\n\t\t}"
  },
  {
    "id" : "372fd151-2364-401a-9d7d-3892dd537da4",
    "prId" : 64034,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/64034#pullrequestreview-121617809",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "26e1099a-e74e-486e-9e4a-1f59ab7e73f0",
        "parentId" : null,
        "authorId" : "fbb90de5-459e-43f3-969b-110ed8a91f5c",
        "body" : "There is a chance that there will be a delete event between `Get` and `Watch`? i.e. we might miss the delete event and timeout, if the delete event was after we checked that the object is still there, but before we started a watch.\r\nWe should probably setup watch before running `Get` - then we can guarantee that we won't miss a delete event that occurs after we check with `Get`?",
        "createdAt" : "2018-05-19T08:32:53Z",
        "updatedAt" : "2018-05-22T12:47:48Z",
        "lastEditedBy" : "fbb90de5-459e-43f3-969b-110ed8a91f5c",
        "tags" : [
        ]
      },
      {
        "id" : "2f7ca8fe-b997-470b-94d7-bbc25359e134",
        "parentId" : "26e1099a-e74e-486e-9e4a-1f59ab7e73f0",
        "authorId" : "fbb90de5-459e-43f3-969b-110ed8a91f5c",
        "body" : "What happens if we try to subscribe for events on an object that already doesn't exist? Will there be an error? If so, then the code is fine.",
        "createdAt" : "2018-05-19T08:36:53Z",
        "updatedAt" : "2018-05-22T12:47:48Z",
        "lastEditedBy" : "fbb90de5-459e-43f3-969b-110ed8a91f5c",
        "tags" : [
        ]
      },
      {
        "id" : "ba558a7b-c1f8-4895-bdef-1da5ee0f07c4",
        "parentId" : "26e1099a-e74e-486e-9e4a-1f59ab7e73f0",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "Watching from a resource version avoids the risk of missing the delete.  It will send us the delete.\r\n\r\nIf you watch a thing that doesn't exist, it just waits until it does.  The condition wait does this",
        "createdAt" : "2018-05-19T12:26:47Z",
        "updatedAt" : "2018-05-22T12:47:48Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "49258593c34c377592865e2adfb3c01cd4c34bbd",
    "line" : 201,
    "diffHunk" : "@@ -1,1 +199,203 @@\t\twatchOptions.FieldSelector = \"metadata.name=\" + info.Name\n\t\twatchOptions.ResourceVersion = gottenObj.GetResourceVersion()\n\t\tobjWatch, err := o.DynamicClient.Resource(info.Mapping.Resource).Namespace(info.Namespace).Watch(watchOptions)\n\t\tif err != nil {\n\t\t\treturn gottenObj, false, err"
  }
]