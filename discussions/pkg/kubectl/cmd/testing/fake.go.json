[
  {
    "id" : "47ee0a5b-07fe-4d7e-a7d3-a6b286a0d34d",
    "prId" : 64233,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/64233#pullrequestreview-123009615",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c60930c4-7a7c-46bc-8836-d7db30a5eed2",
        "parentId" : null,
        "authorId" : "0385dfd1-e8a7-41a8-8213-eabe697d14cd",
        "body" : "@deads2k wiring the restconfig here. The nil pointer panic was being caused because the testFactory's `ToRESTMapper` method returns whatever value is stored here, not the restconfig value from the embedded configFlags",
        "createdAt" : "2018-05-24T14:08:52Z",
        "updatedAt" : "2018-05-24T14:56:16Z",
        "lastEditedBy" : "0385dfd1-e8a7-41a8-8213-eabe697d14cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "34167b64403c287d9a439157cfa834950f0a2a05",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +280,284 @@\t\ttempConfigFile:    tmpFile,\n\n\t\tClientConfigVal: restConfig,\n\t}\n}"
  },
  {
    "id" : "92226791-ce72-495c-9a2b-886248c5db50",
    "prId" : 63550,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/63550#pullrequestreview-119531163",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "73a973c3-a556-4f27-a32e-0120b1456ba1",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "FWIW, this looks nuts as a mock.",
        "createdAt" : "2018-05-11T18:14:57Z",
        "updatedAt" : "2018-05-15T14:38:10Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "57f308ae60875e90004dca592d47cbf6bce390ba",
    "line" : 3,
    "diffHunk" : "@@ -1,1 +418,422 @@\nfunc (f *TestFactory) DiscoveryClient() (discovery.CachedDiscoveryInterface, error) {\n\tfakeClient := f.Client.(*fake.RESTClient)\n\n\tcacheDir := filepath.Join(\"\", \".kube\", \"cache\", \"discovery\")"
  },
  {
    "id" : "63589e08-2e08-4d8c-9475-fff1bbefc511",
    "prId" : 60218,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/60218#pullrequestreview-98654027",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b4c23fb1-bbe0-4bf2-8175-f8676fcc45de",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "The meat is in this file. Everything else is ripples",
        "createdAt" : "2018-02-22T17:17:22Z",
        "updatedAt" : "2018-02-23T13:17:48Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "6047ead2e50b991016997fe6c79d081390787406",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +231,235 @@}\n\ntype TestFactory struct {\n\tcmdutil.Factory\n"
  },
  {
    "id" : "53ffc9ea-5870-43bc-90ff-30db85912721",
    "prId" : 55092,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/55092#pullrequestreview-74969459",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f5189fa1-3848-42c9-ab9b-b7756e92f7fa",
        "parentId" : null,
        "authorId" : "273a1fe2-2c42-473d-a40f-7ed06da98d90",
        "body" : "The code body is identical to `func (f *fakeAPIFactory) NewUnstructuredBuilder()`, other than the receiving type.\r\n\r\nIt also matches most of the code in `func (f *ring2Factory) NewUnstructuredBuilder()`\r\n\r\nIs there any way to use the same code from one func?\r\n",
        "createdAt" : "2017-11-07T23:45:00Z",
        "updatedAt" : "2017-11-08T04:16:39Z",
        "lastEditedBy" : "273a1fe2-2c42-473d-a40f-7ed06da98d90",
        "tags" : [
        ]
      },
      {
        "id" : "8e6ad4ae-6e08-49a2-b60f-de27a2ab120f",
        "parentId" : "f5189fa1-3848-42c9-ab9b-b7756e92f7fa",
        "authorId" : "cdb05f24-d700-4d96-a683-3e4de7effbf5",
        "body" : "Reusing the code from `func (f *ring2Factory) NewUnstructuredBuilder()`: No. They are calling different functions underneath.\r\n\r\nReusing the code from `func (f *fakeAPIFactory) NewUnstructuredBuilder()`: That's possible. But it require refactoring the 2 separate implementations of `Factory` interface completely. I don't want to do it at least for now :/\r\n",
        "createdAt" : "2017-11-08T01:47:03Z",
        "updatedAt" : "2017-11-08T04:16:39Z",
        "lastEditedBy" : "cdb05f24-d700-4d96-a683-3e4de7effbf5",
        "tags" : [
        ]
      }
    ],
    "commit" : "06c5be98028d6c045ae438498b46262ea1035b9c",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +483,487 @@}\n\nfunc (f *FakeFactory) NewUnstructuredBuilder() *resource.Builder {\n\tmapper, typer, err := f.UnstructuredObject()\n\tif err != nil {"
  },
  {
    "id" : "77a1d712-60a2-4b1d-8049-70b4f055273c",
    "prId" : 34683,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/34683#pullrequestreview-4729642",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "03ac063e-b5f2-4ed4-bd58-9ac626f9fded",
        "parentId" : null,
        "authorId" : "ad267631-96d1-4bad-b913-e8d6342e65a2",
        "body" : "Same here, make all these vars exported?\n",
        "createdAt" : "2016-10-18T18:20:04Z",
        "updatedAt" : "2016-10-18T22:54:10Z",
        "lastEditedBy" : "ad267631-96d1-4bad-b913-e8d6342e65a2",
        "tags" : [
        ]
      }
    ],
    "commit" : "d58554a6479fc6e9978bdb09f5acc45a0a00e7b5",
    "line" : null,
    "diffHunk" : "@@ -1,1 +105,109 @@var ValidVersion = registered.GroupOrDie(api.GroupName).GroupVersion.Version\nvar InternalGV = unversioned.GroupVersion{Group: \"apitest\", Version: runtime.APIVersionInternal}\nvar UnlikelyGV = unversioned.GroupVersion{Group: \"apitest\", Version: \"unlikelyversion\"}\nvar ValidVersionGV = unversioned.GroupVersion{Group: \"apitest\", Version: ValidVersion}\n"
  }
]