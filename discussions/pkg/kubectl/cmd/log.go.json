[
  {
    "id" : "8d4301c3-0555-4a83-8585-f71476d53ea2",
    "prId" : 15232,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a02cd19d-1781-45ce-a677-93b2254cc116",
        "parentId" : null,
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "`PodName` needs to be specified. \n",
        "createdAt" : "2015-10-07T15:39:15Z",
        "updatedAt" : "2015-10-14T17:23:01Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      },
      {
        "id" : "4605b9ac-ae51-4bf0-99ec-93ce80703aae",
        "parentId" : "a02cd19d-1781-45ce-a677-93b2254cc116",
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "Also `LimitBytes` shouldn't be negative and `Tail` shouldn't be less than -1\n",
        "createdAt" : "2015-10-07T15:44:05Z",
        "updatedAt" : "2015-10-14T17:23:01Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      },
      {
        "id" : "eebb63c9-b069-4283-a39c-f7c4d9567724",
        "parentId" : "a02cd19d-1781-45ce-a677-93b2254cc116",
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "Might as well parse `SinceTime` while here\n",
        "createdAt" : "2015-10-07T15:45:18Z",
        "updatedAt" : "2015-10-14T17:23:01Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      },
      {
        "id" : "aa24e14a-fa19-4d70-a3ca-e1f1488426a6",
        "parentId" : "a02cd19d-1781-45ce-a677-93b2254cc116",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "> Might as well parse SinceTime while here\n\nAll three done. Moved the parse to `Complete` which makes more sense and helps a composer use the `LogsOptions` correctly.\n",
        "createdAt" : "2015-10-07T19:08:07Z",
        "updatedAt" : "2015-10-14T17:23:01Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "f0aa606632c25952294f192d4b3f058264d5a58b",
    "line" : null,
    "diffHunk" : "@@ -1,1 +159,163 @@\t\treturn errors.New(\"only one of --since, --since-time may be specified\")\n\t}\n\n\treturn nil\n}"
  },
  {
    "id" : "fa0237b7-2ee3-4009-a177-8e899416b29e",
    "prId" : 15232,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7204c1ff-ef8a-4d82-810b-198f7c979689",
        "parentId" : null,
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "Is this for backwards comp?\n",
        "createdAt" : "2015-10-07T15:40:50Z",
        "updatedAt" : "2015-10-14T17:23:01Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      },
      {
        "id" : "c0ec9164-cc33-4a57-859d-12f3ad9bc502",
        "parentId" : "7204c1ff-ef8a-4d82-810b-198f7c979689",
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "No, this is the way that it always is (and should be) specifying a container is optional.\n",
        "createdAt" : "2015-10-07T18:31:57Z",
        "updatedAt" : "2015-10-14T17:23:01Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      },
      {
        "id" : "91b16c72-a438-4105-8df0-e15927219064",
        "parentId" : "7204c1ff-ef8a-4d82-810b-198f7c979689",
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "> No, this is the way that it always is (and should be) specifying a container is optional.\n\nI thought we were specifying containers with `-c` now.\n",
        "createdAt" : "2015-10-07T20:46:51Z",
        "updatedAt" : "2015-10-14T17:23:01Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      },
      {
        "id" : "8c6bce51-d82d-4e8a-8bb5-4e84d8b57302",
        "parentId" : "7204c1ff-ef8a-4d82-810b-198f7c979689",
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "https://github.com/kubernetes/kubernetes/pull/10519#issuecomment-117030079\n\nI guess this indeed is for backwards comp\n",
        "createdAt" : "2015-10-08T12:46:18Z",
        "updatedAt" : "2015-10-14T17:23:01Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      }
    ],
    "commit" : "f0aa606632c25952294f192d4b3f058264d5a58b",
    "line" : null,
    "diffHunk" : "@@ -1,1 +118,122 @@\t\t}\n\t\to.PodName = args[0]\n\t\to.ContainerName = args[1]\n\n\tdefault:"
  },
  {
    "id" : "219803b0-dfe1-4569-9776-3f00c6adba85",
    "prId" : 15232,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "12426345-b5e5-4389-a2a5-7889a9bc8c7a",
        "parentId" : null,
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "inline the `err != nil` (here and below)\n",
        "createdAt" : "2015-10-07T18:32:22Z",
        "updatedAt" : "2015-10-14T17:23:01Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      },
      {
        "id" : "0cb0ff83-9867-4a73-99f0-f126fe3d4c2f",
        "parentId" : "12426345-b5e5-4389-a2a5-7889a9bc8c7a",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "> inline the err != nil (here and below)\n\n``` go\nif o.PodNamespace, _, err := f.DefaultNamespace(); err != nil {\n```\n\ndoesn't compile because `o.PodNamespace` already exists.\n",
        "createdAt" : "2015-10-07T18:45:30Z",
        "updatedAt" : "2015-10-14T17:23:01Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "b890d1bd-4ade-4dae-862f-ac5c53ec7a32",
        "parentId" : "12426345-b5e5-4389-a2a5-7889a9bc8c7a",
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "Don't use `:=`\n",
        "createdAt" : "2015-10-07T20:48:54Z",
        "updatedAt" : "2015-10-14T17:23:01Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      },
      {
        "id" : "b8ee0e4d-5d59-4e79-be8f-db0302b29d94",
        "parentId" : "12426345-b5e5-4389-a2a5-7889a9bc8c7a",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "> Don't use :=\n\nThen the `err` has to be declared ahead of time (second values aren't automatically created) and it defeats the purpose of inlining.  In fact, it makes the inlining deceptive, since it reads as in-lined, but leaks values across scope.\n",
        "createdAt" : "2015-10-07T23:49:55Z",
        "updatedAt" : "2015-10-14T17:23:01Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "27db7589-785e-4af5-88df-e2fa7ca856df",
        "parentId" : "12426345-b5e5-4389-a2a5-7889a9bc8c7a",
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "> it defeats the purpose of inlining\n\nThis is true but since you already have created err and pass to options fields, save a couple of lines for the greater good:)\n",
        "createdAt" : "2015-10-07T23:59:36Z",
        "updatedAt" : "2015-10-14T17:23:01Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      },
      {
        "id" : "824b9ddc-7e42-4d21-8592-3e14b1eb80d6",
        "parentId" : "12426345-b5e5-4389-a2a5-7889a9bc8c7a",
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "this is ok\n",
        "createdAt" : "2015-10-08T12:47:40Z",
        "updatedAt" : "2015-10-14T17:23:01Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      }
    ],
    "commit" : "f0aa606632c25952294f192d4b3f058264d5a58b",
    "line" : 144,
    "diffHunk" : "@@ -1,1 +125,129 @@\n\tvar err error\n\to.PodNamespace, _, err = f.DefaultNamespace()\n\tif err != nil {\n\t\treturn err"
  },
  {
    "id" : "44206fc4-74d3-4ea9-8d20-ca195aef3910",
    "prId" : 15232,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "02440686-b69b-4210-9e95-d8f13ee68506",
        "parentId" : null,
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "Can we use the resource builder with pod resources defaulted?\n",
        "createdAt" : "2015-10-07T20:51:43Z",
        "updatedAt" : "2015-10-14T17:23:01Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      },
      {
        "id" : "83ed380f-7c8e-4569-8710-abb67cf8730f",
        "parentId" : "02440686-b69b-4210-9e95-d8f13ee68506",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "> Can we use the resource builder with pod resources defaulted?\n\nI don't think I want to do it here.  In fact, I'm not certain its the right abstraction for what we want here.  In writing https://github.com/openshift/origin/pull/4997, I realized that we don't actually want to retrieve the referenced resource in all cases.  In some cases, we simply use it for referential lookups of the resources we're interested in.  \n",
        "createdAt" : "2015-10-07T23:51:47Z",
        "updatedAt" : "2015-10-14T17:23:01Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "dd9d50d3-0995-40be-8f47-199c273c8788",
        "parentId" : "02440686-b69b-4210-9e95-d8f13ee68506",
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "logs will need to support jobs, daemons, deployments, amongst other resources, and I cannot think of a painless way to do this without a resource builder.\n",
        "createdAt" : "2015-10-08T00:03:49Z",
        "updatedAt" : "2015-10-14T17:23:01Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      },
      {
        "id" : "f7710cfa-1d5f-41c6-88dd-d2f0095576e4",
        "parentId" : "02440686-b69b-4210-9e95-d8f13ee68506",
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "btw, with pods defaulted in the resource builder we support both `logs POD` and `logs pods/POD` \n",
        "createdAt" : "2015-10-08T00:05:07Z",
        "updatedAt" : "2015-10-14T17:23:01Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      },
      {
        "id" : "c55aa249-1395-425b-b4c4-5b6ed395b341",
        "parentId" : "02440686-b69b-4210-9e95-d8f13ee68506",
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "> I realized that we don't actually want to retrieve the referenced resource in all cases. In some cases, we simply use it for referential lookups of the resources we're interested in.\n\nOk, nevermind my previous comments. Even though I still believe the resource builder would be helpful.\n",
        "createdAt" : "2015-10-08T00:07:02Z",
        "updatedAt" : "2015-10-14T17:23:01Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      }
    ],
    "commit" : "f0aa606632c25952294f192d4b3f058264d5a58b",
    "line" : null,
    "diffHunk" : "@@ -1,1 +165,169 @@// RunLog retrieves a pod log\nfunc (o *LogsOptions) RunLog() error {\n\tpod, err := o.Client.Pods(o.PodNamespace).Get(o.PodName)\n\tif err != nil {\n\t\treturn err"
  },
  {
    "id" : "3a92c7b3-a5d2-4c17-9f48-3bd52c4537d8",
    "prId" : 15232,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a08b8ac7-b577-4d5b-8d5d-9c09a7fd8805",
        "parentId" : null,
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "Remove the flag as well?\n",
        "createdAt" : "2015-10-07T20:52:36Z",
        "updatedAt" : "2015-10-14T17:23:01Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      },
      {
        "id" : "f1ced41d-abad-4193-a051-2ab361bc5452",
        "parentId" : "a08b8ac7-b577-4d5b-8d5d-9c09a7fd8805",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "> Remove the flag as well?\n\nNo.  That would break scripts that are setting it to false.  \n",
        "createdAt" : "2015-10-07T23:12:02Z",
        "updatedAt" : "2015-10-14T17:23:01Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "e3bbea57-5338-484d-89f2-ce3a09d7ea16",
        "parentId" : "a08b8ac7-b577-4d5b-8d5d-9c09a7fd8805",
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "> No. That would break scripts that are setting it to false.\n\nThe flag is non-functional anyway, truth is hard:) At the very least, add a deprecation message.\n",
        "createdAt" : "2015-10-07T23:41:24Z",
        "updatedAt" : "2015-10-14T17:23:01Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      },
      {
        "id" : "12decbf5-6e3e-49f7-9b96-08fac0f557a4",
        "parentId" : "a08b8ac7-b577-4d5b-8d5d-9c09a7fd8805",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "> The flag is non-functional anyway, truth is hard:) At the very least, add a deprecation message.\n\nSee the next line: https://github.com/kubernetes/kubernetes/pull/15232/files#diff-f8bdb334f93a2f74fd5faa9c3181b4bfR95\n",
        "createdAt" : "2015-10-07T23:48:35Z",
        "updatedAt" : "2015-10-14T17:23:01Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "af21047b-8c9e-4303-ab66-f5f09eef5f9a",
        "parentId" : "a08b8ac7-b577-4d5b-8d5d-9c09a7fd8805",
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "Sup\n",
        "createdAt" : "2015-10-07T23:51:15Z",
        "updatedAt" : "2015-10-14T17:23:01Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      }
    ],
    "commit" : "f0aa606632c25952294f192d4b3f058264d5a58b",
    "line" : 93,
    "diffHunk" : "@@ -1,1 +95,99 @@\tcmd.Flags().BoolVarP(&o.Follow, \"follow\", \"f\", o.Follow, \"Specify if the logs should be streamed.\")\n\tcmd.Flags().BoolVar(&o.Timestamps, \"timestamps\", o.Timestamps, \"Include timestamps on each line in the log output\")\n\tcmd.Flags().Bool(\"interactive\", true, \"If true, prompt the user for input when required. Default true.\")\n\tcmd.Flags().MarkDeprecated(\"interactive\", \"This flag is no longer respected and there is no replacement.\")\n\tcmd.Flags().IntVar(&o.LimitBytes, \"limit-bytes\", o.LimitBytes, \"Maximum bytes of logs to return. Defaults to no limit.\")"
  },
  {
    "id" : "5377e6d5-af13-46d5-8ac5-b72f8efe17d3",
    "prId" : 13780,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7c31e08d-80eb-4e34-9d29-65a348f1bfda",
        "parentId" : null,
        "authorId" : "3a60a43e-3e3d-40f9-b82d-24959d7af0d3",
        "body" : "technically should be converting to int64 from the flag... pflag does have a GetInt64 method... a new method can be added to cmdutil to call it.\n",
        "createdAt" : "2015-09-14T14:26:05Z",
        "updatedAt" : "2015-09-21T19:37:48Z",
        "lastEditedBy" : "3a60a43e-3e3d-40f9-b82d-24959d7af0d3",
        "tags" : [
        ]
      }
    ],
    "commit" : "c2e90cd1549dff87db7941544ce15f4c8ad0ba4c",
    "line" : null,
    "diffHunk" : "@@ -1,1 +172,176 @@\t\tlogOptions.SinceTime = &t\n\t}\n\tif limitBytes := cmdutil.GetFlagInt(cmd, \"limit-bytes\"); limitBytes != 0 {\n\t\ti := int64(limitBytes)\n\t\tlogOptions.LimitBytes = &i"
  },
  {
    "id" : "3cea9f47-eccb-4dc7-8fd7-b11d1390ddf6",
    "prId" : 13780,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "525dc5e2-39d8-42ea-bf37-168e15d4f49b",
        "parentId" : null,
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "Add a couple of examples that exercise the new flags and while you are here, please fix the existing examples to use `-c` for specifying the container. Also changing the pod names to something more readable than 123456-7890 would be nice.\n",
        "createdAt" : "2015-09-15T08:29:28Z",
        "updatedAt" : "2015-09-21T19:37:48Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      }
    ],
    "commit" : "c2e90cd1549dff87db7941544ce15f4c8ad0ba4c",
    "line" : 49,
    "diffHunk" : "@@ -1,1 +95,99 @@\tcmd.Flags().Bool(\"interactive\", true, \"If true, prompt the user for input when required. Default true.\")\n\tcmd.Flags().BoolP(\"previous\", \"p\", false, \"If true, print the logs for the previous instance of the container in a pod if it exists.\")\n\tcmd.Flags().Int(\"limit-bytes\", 0, \"Maximum bytes of logs to return. Defaults to no limit.\")\n\tcmd.Flags().Int(\"tail\", -1, \"Lines of recent log file to display. Defaults to -1, showing all log lines.\")\n\tcmd.Flags().String(\"since-time\", \"\", \"Only return logs after a specific date (RFC3339). Defaults to all logs. Only one of since-time / since may be used.\")"
  },
  {
    "id" : "685d0652-974b-4f8b-9b9c-c8e8b28f3109",
    "prId" : 10707,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c8046c9c-4c93-48ca-9021-7ee3ad0e427e",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "You could create a `PodLogOptions` object, bind it to these flags, and then add it to `LogsOptions`\n",
        "createdAt" : "2015-10-20T14:38:02Z",
        "updatedAt" : "2015-11-05T13:55:05Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "9f58b367-fc39-4908-b4b6-3d0631da4d58",
        "parentId" : "c8046c9c-4c93-48ca-9021-7ee3ad0e427e",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "Split the flags that are bound to the `PodLogOptions` into a separate call that takes the FlagSet and returns the `PodLogOptions` ref.\n",
        "createdAt" : "2015-10-20T14:46:22Z",
        "updatedAt" : "2015-11-05T13:55:05Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "efea84ee-3b8b-496d-ac87-82e91cde084e",
        "parentId" : "c8046c9c-4c93-48ca-9021-7ee3ad0e427e",
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "Added `PodLogOptionsFromLogs` for this. Makes `Complete` much cleaner.\n",
        "createdAt" : "2015-10-21T12:28:20Z",
        "updatedAt" : "2015-11-05T13:55:05Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      }
    ],
    "commit" : "4fdb6d1331998011d30f8a9765653f6594992c9e",
    "line" : null,
    "diffHunk" : "@@ -1,1 +90,94 @@\t\tAliases: []string{\"log\"},\n\t}\n\tcmd.Flags().BoolP(\"follow\", \"f\", false, \"Specify if the logs should be streamed.\")\n\tcmd.Flags().Bool(\"timestamps\", false, \"Include timestamps on each line in the log output\")\n\tcmd.Flags().Int64(\"limit-bytes\", 0, \"Maximum bytes of logs to return. Defaults to no limit.\")"
  },
  {
    "id" : "19614d00-f0dd-48a9-ba90-02a53ab72e4b",
    "prId" : 8634,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "34a396fa-4474-4257-bee6-08e79b573cff",
        "parentId" : null,
        "authorId" : "8076e56f-768c-4f89-90e6-045ef34e1525",
        "body" : "With command renames, we've been keeping the old one as an alias (with a deprecation warning) to avoid breaking existing uses. See [rollingupdate.go](https://github.com/GoogleCloudPlatform/kubernetes/blob/master/pkg/kubectl/cmd/rollingupdate.go#L63) for an example that does this.\n",
        "createdAt" : "2015-05-21T20:42:47Z",
        "updatedAt" : "2015-05-26T12:28:29Z",
        "lastEditedBy" : "8076e56f-768c-4f89-90e6-045ef34e1525",
        "tags" : [
        ]
      },
      {
        "id" : "855165d1-7101-488a-b803-a7f8f3445f89",
        "parentId" : "34a396fa-4474-4257-bee6-08e79b573cff",
        "authorId" : "3a60a43e-3e3d-40f9-b82d-24959d7af0d3",
        "body" : "Fixed\n",
        "createdAt" : "2015-05-21T21:01:08Z",
        "updatedAt" : "2015-05-26T12:28:29Z",
        "lastEditedBy" : "3a60a43e-3e3d-40f9-b82d-24959d7af0d3",
        "tags" : [
        ]
      }
    ],
    "commit" : "cb872e92432d3925ae0e762310709fee9275cdb1",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +65,69 @@func NewCmdLog(f *cmdutil.Factory, out io.Writer) *cobra.Command {\n\tcmd := &cobra.Command{\n\t\tUse:     \"logs [-f] [-p] POD [CONTAINER]\",\n\t\tShort:   \"Print the logs for a container in a pod.\",\n\t\tLong:    \"Print the logs for a container in a pod. If the pod has only one container, the container name is optional.\","
  },
  {
    "id" : "78085c3b-2e0c-4e97-8c15-af2c073f198d",
    "prId" : 2871,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "961dbad2-3209-4624-95e5-8f9cb64c0d34",
        "parentId" : null,
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "Also check > 2\n",
        "createdAt" : "2014-12-12T01:06:20Z",
        "updatedAt" : "2014-12-12T01:49:49Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      }
    ],
    "commit" : "ba5c18816ebbc041fb2ed1555cc0da74f8fd897a",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +29,33 @@\t\tLong:  \"Print the logs for a container in a pod. If the pod has only one container, the container name is optional.\",\n\t\tRun: func(cmd *cobra.Command, args []string) {\n\t\t\tif len(args) == 0 {\n\t\t\t\tusageError(cmd, \"<pod> is required for log\")\n\t\t\t}"
  },
  {
    "id" : "084362b2-c81d-452f-9f59-b199239f4d36",
    "prId" : 2871,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f90398c8-f341-4915-b1dc-22bb7df40bc2",
        "parentId" : null,
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Invert this condition and remove the else - usageError terminates execution\n",
        "createdAt" : "2014-12-12T01:08:06Z",
        "updatedAt" : "2014-12-12T01:49:49Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "ba5c18816ebbc041fb2ed1555cc0da74f8fd897a",
    "line" : null,
    "diffHunk" : "@@ -1,1 +49,53 @@\t\t\tif len(args) == 1 {\n\t\t\t\tif len(pod.Spec.Containers) != 1 {\n\t\t\t\t\tusageError(cmd, \"<container> is required for pods with multiple containers\")\n\t\t\t\t}\n"
  }
]