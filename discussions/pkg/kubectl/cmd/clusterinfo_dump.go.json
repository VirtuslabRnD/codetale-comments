[
  {
    "id" : "e1e55fcb-e219-4084-b1a9-cf5f7909460c",
    "prId" : 66927,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/66927#pullrequestreview-143006405",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1707a46a-4f51-4a62-b099-f3884ee91900",
        "parentId" : null,
        "authorId" : "0385dfd1-e8a7-41a8-8213-eabe697d14cd",
        "body" : "nit: clientset",
        "createdAt" : "2018-08-02T22:58:25Z",
        "updatedAt" : "2018-08-02T22:58:25Z",
        "lastEditedBy" : "0385dfd1-e8a7-41a8-8213-eabe697d14cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "7923a9fd9925d3c7c5e7d27ad5e04509bc652042",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +28,32 @@\tcorev1 \"k8s.io/api/core/v1\"\n\tmetav1 \"k8s.io/apimachinery/pkg/apis/meta/v1\"\n\t\"k8s.io/client-go/kubernetes\"\n\tapi \"k8s.io/kubernetes/pkg/apis/core\"\n\t\"k8s.io/kubernetes/pkg/kubectl/cmd/templates\""
  },
  {
    "id" : "4848000a-155d-4928-88b1-f9d131c6e2c4",
    "prId" : 63927,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/63927#pullrequestreview-120983289",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e586e333-22c9-4559-964c-2c65ef62d784",
        "parentId" : null,
        "authorId" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "body" : "completed *from* kubeconfigflag struct",
        "createdAt" : "2018-05-17T10:32:44Z",
        "updatedAt" : "2018-05-17T12:55:36Z",
        "lastEditedBy" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "tags" : [
        ]
      }
    ],
    "commit" : "eabfcfaa2b739f53667602927680e312634c4fd6",
    "line" : 52,
    "diffHunk" : "@@ -1,1 +139,143 @@\t\treturn err\n\t}\n\t// TODO this should eventually just be the completed kubeconfigflag struct\n\to.RESTClientGetter = f\n\to.LogsForObject = polymorphichelpers.LogsForObjectFn"
  },
  {
    "id" : "e03ee7df-6dd4-4a2e-adbc-718aadabe96f",
    "prId" : 20672,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c5514b7b-5b49-45aa-9274-508a67425d5f",
        "parentId" : null,
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "How often are the controllers important? We're adding lots of new controllers...\n",
        "createdAt" : "2016-02-05T03:23:59Z",
        "updatedAt" : "2016-05-17T17:24:41Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "e7661b31-b979-486d-aa5d-d39dfb90d38e",
        "parentId" : "c5514b7b-5b49-45aa-9274-508a67425d5f",
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "ReplicaSet, Deployment, DaemonSet, and Job will be enabled by default in 1.2.\n",
        "createdAt" : "2016-02-17T23:38:49Z",
        "updatedAt" : "2016-05-17T17:24:41Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "2db0447e-5bb3-403d-95cf-2b090d6ca92a",
        "parentId" : "c5514b7b-5b49-45aa-9274-508a67425d5f",
        "authorId" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "body" : "If we want to support version skewed use cases, we'll need to first get the supported resources back:\n\n``` go\nresourcesList, err := client.Discovery().ServerResources()\n```\n\nand then check if each resource is supported before getting it, for example,  \n\n``` go\nif contains(resourcesList, v1beta1.SchemeGroupVersion.WithResource(\"deployments\")) {\n  // Then we can get deployments \n}\n```\n\nRef https://github.com/kubernetes/kubernetes/blob/master/pkg/kubectl/cmd/run.go#L157-L176\n",
        "createdAt" : "2016-05-09T23:13:26Z",
        "updatedAt" : "2016-05-17T17:24:41Z",
        "lastEditedBy" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "tags" : [
        ]
      }
    ],
    "commit" : "178b5f76381fe532dc024e006f6d786582fa662e",
    "line" : null,
    "diffHunk" : "@@ -1,1 +139,143 @@\t\t}\n\n\t\trcs, err := c.ReplicationControllers(namespace).List(api.ListOptions{})\n\t\tif err != nil {\n\t\t\treturn err"
  },
  {
    "id" : "7d38ea96-ed4d-4dc1-a285-2a4eaf4cedca",
    "prId" : 20672,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "67e4e133-aeec-4e2a-a462-8b9dc2a1ea51",
        "parentId" : null,
        "authorId" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "body" : "Should this be public?\n",
        "createdAt" : "2016-05-09T22:55:38Z",
        "updatedAt" : "2016-05-17T17:24:41Z",
        "lastEditedBy" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "tags" : [
        ]
      },
      {
        "id" : "dbfc7fce-2f5e-45fc-9332-8295890024ad",
        "parentId" : "67e4e133-aeec-4e2a-a462-8b9dc2a1ea51",
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "I'd rather leave it private until someone needs it somewhere else.\n",
        "createdAt" : "2016-05-11T18:18:57Z",
        "updatedAt" : "2016-05-17T17:24:41Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "178b5f76381fe532dc024e006f6d786582fa662e",
    "line" : 88,
    "diffHunk" : "@@ -1,1 +86,90 @@}\n\nfunc dumpClusterInfo(f *cmdutil.Factory, cmd *cobra.Command, args []string, out io.Writer) error {\n\tvar c *unversioned.Client\n\tvar err error"
  },
  {
    "id" : "e2cd05fe-96bf-4427-85ca-8ad25bf7cd7b",
    "prId" : 20672,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b6331231-0218-40ba-9284-204042d14f5b",
        "parentId" : null,
        "authorId" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "body" : "Suggest using yaml printer by default and (optionally) provides a flag for json format. \n",
        "createdAt" : "2016-05-09T22:59:40Z",
        "updatedAt" : "2016-05-17T17:24:41Z",
        "lastEditedBy" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "tags" : [
        ]
      },
      {
        "id" : "50c92720-0f99-4d0c-a9bd-4417bcf2b0a5",
        "parentId" : "b6331231-0218-40ba-9284-204042d14f5b",
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "I'd prefer JSON as it is less ambigous since whitespace isn't important.  This is mostly intended for machine consumption anyway.\n",
        "createdAt" : "2016-05-11T18:19:32Z",
        "updatedAt" : "2016-05-17T17:24:41Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "178b5f76381fe532dc024e006f6d786582fa662e",
    "line" : 94,
    "diffHunk" : "@@ -1,1 +92,96 @@\t\treturn err\n\t}\n\tprinter, _, err := kubectl.GetPrinter(\"json\", \"\")\n\tif err != nil {\n\t\treturn err"
  },
  {
    "id" : "c8bcdb95-3ec8-4aeb-91f7-b18e999ed8c3",
    "prId" : 20672,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "90b4126e-a108-480b-8bf5-996e31c2e848",
        "parentId" : null,
        "authorId" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "body" : "Do we need to dump something even if it's empty?\n",
        "createdAt" : "2016-05-09T23:17:34Z",
        "updatedAt" : "2016-05-17T17:24:41Z",
        "lastEditedBy" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "tags" : [
        ]
      },
      {
        "id" : "de9281e5-c060-4715-bab1-fc50cd265900",
        "parentId" : "90b4126e-a108-480b-8bf5-996e31c2e848",
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "Yes, I would like to, so that we can distinguish between empty and errors\n",
        "createdAt" : "2016-05-11T18:19:48Z",
        "updatedAt" : "2016-05-17T17:24:41Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "178b5f76381fe532dc024e006f6d786582fa662e",
    "line" : 133,
    "diffHunk" : "@@ -1,1 +131,135 @@\t\t// TODO: this is repetitive in the extreme.  Use reflection or\n\t\t// something to make this a for loop.\n\t\tevents, err := c.Events(namespace).List(api.ListOptions{})\n\t\tif err != nil {\n\t\t\treturn err"
  }
]