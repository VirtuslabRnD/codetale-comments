[
  {
    "id" : "b20b0244-3bc9-4e2b-b770-8799a28fca0f",
    "prId" : 60363,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/60363#pullrequestreview-100650375",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1e0d853e-231c-42b2-baee-e36732e7155b",
        "parentId" : null,
        "authorId" : "4daa8ff7-7a54-4106-96c8-653eec151574",
        "body" : "I tried `kubectl config view` and `kubectl config view --raw`, it runs well. What's the problem? :dizzy_face: ",
        "createdAt" : "2018-03-01T08:04:02Z",
        "updatedAt" : "2018-03-01T08:04:02Z",
        "lastEditedBy" : "4daa8ff7-7a54-4106-96c8-653eec151574",
        "tags" : [
        ]
      },
      {
        "id" : "ee302a10-f94e-4803-88f0-f24f9a57870b",
        "parentId" : "1e0d853e-231c-42b2-baee-e36732e7155b",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "> I tried kubectl config view and kubectl config view --raw, it runs well. What's the problem?\r\n\r\nI have a detailed explanation here: https://github.com/kubernetes/kubernetes/pull/60621#issuecomment-369589621, but binding to structs in an composeable way makes it possible to write more reliable unit tests with predictable defaulting behavior and for other flags (not this flag in particular) allows for later composition.\r\n\r\nI think the burden runs the other way around.  We should not choose build our code with multiple stages of defaulting without a clear benefit.  Momentum does not meet that bar, especially with contributors willing to help scrub the code so that we can later reap the benefits.\r\n\r\n@charrywanganthony I'm not familiar with the face. What are the dead eyes for?  This pull addresses a real need in our codebase and was made and reviewed in good faith.",
        "createdAt" : "2018-03-01T14:08:23Z",
        "updatedAt" : "2018-03-01T14:08:23Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "81aca624-d13d-4513-9d89-6859152ab1e6",
        "parentId" : "1e0d853e-231c-42b2-baee-e36732e7155b",
        "authorId" : "4daa8ff7-7a54-4106-96c8-653eec151574",
        "body" : "It's a dizzy face. thx for your time.",
        "createdAt" : "2018-03-02T01:07:45Z",
        "updatedAt" : "2018-03-02T01:07:45Z",
        "lastEditedBy" : "4daa8ff7-7a54-4106-96c8-653eec151574",
        "tags" : [
        ]
      }
    ],
    "commit" : "33b3fb9bedc32277e1f876c7e859a715c6355a34",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +94,98 @@\tmergeFlag := cmd.Flags().VarPF(&options.Merge, \"merge\", \"\", \"Merge the full hierarchy of kubeconfig files\")\n\tmergeFlag.NoOptDefVal = \"true\"\n\tcmd.Flags().BoolVar(&options.RawByteData, \"raw\", options.RawByteData, \"Display raw byte data\")\n\tcmd.Flags().BoolVar(&options.Flatten, \"flatten\", options.Flatten, \"Flatten the resulting kubeconfig file into self-contained output (useful for creating portable kubeconfig files)\")\n\tcmd.Flags().BoolVar(&options.Minify, \"minify\", options.Minify, \"Remove all information not used by current-context from the output\")"
  },
  {
    "id" : "d174d9ca-8064-4080-8f16-cd4b014982e7",
    "prId" : 3275,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d0a555ea-6d8d-4df6-b815-eb18fbd1d7e4",
        "parentId" : null,
        "authorId" : "8076e56f-768c-4f89-90e6-045ef34e1525",
        "body" : "s/specified/current/, since the user isn't telling us what .kubeconfig is currently in use.\n",
        "createdAt" : "2015-01-09T01:11:36Z",
        "updatedAt" : "2015-01-13T21:30:57Z",
        "lastEditedBy" : "8076e56f-768c-4f89-90e6-045ef34e1525",
        "tags" : [
        ]
      }
    ],
    "commit" : "b51a717f6ebc931b8eddd7ed7ee2673819a6a80e",
    "line" : 40,
    "diffHunk" : "@@ -1,1 +38,42 @@\tcmd := &cobra.Command{\n\t\tUse:   \"view\",\n\t\tShort: \"displays the specified .kubeconfig file or a merged result\",\n\t\tLong:  `displays the specified .kubeconfig file or a merged result`,\n\t\tRun: func(cmd *cobra.Command, args []string) {"
  }
]