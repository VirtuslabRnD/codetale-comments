[
  {
    "id" : "4957cbe6-a36c-4e5e-b1ed-0355e40c8830",
    "prId" : 65128,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/65128#pullrequestreview-129971240",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "17619a9b-49ec-4c71-b079-39fd786bf708",
        "parentId" : null,
        "authorId" : "3c1422a0-6358-4857-8f56-961979171514",
        "body" : "Is `key:` a prefix? If so, using `strings.TrimPrefix` is better?\r\nOr we can use `regex` to handle this.\r\nIMO using hard-coded `ix+5:` is not safe.",
        "createdAt" : "2018-06-15T05:26:09Z",
        "updatedAt" : "2018-06-15T05:26:18Z",
        "lastEditedBy" : "3c1422a0-6358-4857-8f56-961979171514",
        "tags" : [
        ]
      },
      {
        "id" : "cf053cf9-d9a1-40e5-a055-62f222703a2f",
        "parentId" : "17619a9b-49ec-4c71-b079-39fd786bf708",
        "authorId" : "21b457d2-6f88-4a9f-8d5a-debafbcb6cfe",
        "body" : "> Is `key:` a prefix?\r\n\r\nAs far I can see, based on the original issue, it's something like a separator between useless part and needed one:\r\n\r\n> error: jsonpatch replace operation does not apply: **doc is missing key**: /spec/template/spec/containers/0/image\r\n\r\n> If so, using `strings.TrimPrefix` is better?\r\n\r\nI don't think so, given that the prefix will be long and could change over time.",
        "createdAt" : "2018-06-19T13:28:11Z",
        "updatedAt" : "2018-06-19T13:28:12Z",
        "lastEditedBy" : "21b457d2-6f88-4a9f-8d5a-debafbcb6cfe",
        "tags" : [
        ]
      }
    ],
    "commit" : "e3d2242388c26ebac8ddb81786da4234c1e3f414",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +312,316 @@\t\t\tmsg := err.Error()\n\t\t\tix := strings.Index(msg, \"key:\")\n\t\t\tkey := msg[ix+5:]\n\t\t\treturn bytes, fmt.Errorf(\"Object to be patched is missing field (%s)\", key)\n\t\t}"
  },
  {
    "id" : "be74f4cd-41a5-48ee-bdbf-5b006f41f00b",
    "prId" : 65128,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/65128#pullrequestreview-129972657",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9c782534-18b3-47d2-b11b-39fdfa1a44cd",
        "parentId" : null,
        "authorId" : "21b457d2-6f88-4a9f-8d5a-debafbcb6cfe",
        "body" : "Possible tiny improvement:\r\n`msg` variable could be moved out of `if`, so we'll be able to use it inside of `strings.Contains()`.",
        "createdAt" : "2018-06-19T13:31:33Z",
        "updatedAt" : "2018-06-19T13:31:33Z",
        "lastEditedBy" : "21b457d2-6f88-4a9f-8d5a-debafbcb6cfe",
        "tags" : [
        ]
      }
    ],
    "commit" : "e3d2242388c26ebac8ddb81786da4234c1e3f414",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +310,314 @@\t\t// TODO: This is pretty hacky, we need a better structured error from the json-patch\n\t\tif err != nil && strings.Contains(err.Error(), \"doc is missing key\") {\n\t\t\tmsg := err.Error()\n\t\t\tix := strings.Index(msg, \"key:\")\n\t\t\tkey := msg[ix+5:]"
  },
  {
    "id" : "fbcd6904-01e3-4594-be3b-dcc376e71142",
    "prId" : 65128,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/65128#pullrequestreview-129974373",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0f8c75a7-4e7b-479f-8437-4515562e2540",
        "parentId" : null,
        "authorId" : "21b457d2-6f88-4a9f-8d5a-debafbcb6cfe",
        "body" : "Perhaps, it will better if we would search for `doc is missing key:` (with a trailing colon).",
        "createdAt" : "2018-06-19T13:35:21Z",
        "updatedAt" : "2018-06-19T13:35:22Z",
        "lastEditedBy" : "21b457d2-6f88-4a9f-8d5a-debafbcb6cfe",
        "tags" : [
        ]
      }
    ],
    "commit" : "e3d2242388c26ebac8ddb81786da4234c1e3f414",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +309,313 @@\t\tbytes, err := patchObj.Apply(originalJS)\n\t\t// TODO: This is pretty hacky, we need a better structured error from the json-patch\n\t\tif err != nil && strings.Contains(err.Error(), \"doc is missing key\") {\n\t\t\tmsg := err.Error()\n\t\t\tix := strings.Index(msg, \"key:\")"
  },
  {
    "id" : "b33fc352-e59e-4980-9b74-3d45e1c73948",
    "prId" : 40260,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/40260#pullrequestreview-18637241",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "99afbab2-525a-463a-bc48-f3528d1cadb9",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "What does a strategic merge patch `--local` on an unknown resource do?  I expect it to fail (obviously), but I'd like a reasonable message and test to make sure it doesn't result in insanity.",
        "createdAt" : "2017-01-26T14:55:22Z",
        "updatedAt" : "2017-01-27T01:01:57Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "17168aaacc574a870bb02cb5ae60bc91c074b197",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +148,152 @@\t}\n\n\tmapper, typer, err := f.UnstructuredObject()\n\tif err != nil {\n\t\treturn err"
  },
  {
    "id" : "cafa22b6-3cf2-43bd-9ab6-a26bc9df8d9e",
    "prId" : 40260,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/40260#pullrequestreview-18637763",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d6e91f44-2b2c-4159-b2f2-062f996ae1f7",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "heh, look at that.  Great minds.",
        "createdAt" : "2017-01-26T14:55:45Z",
        "updatedAt" : "2017-01-27T01:01:57Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "5d749cc5-bc9b-4b73-887d-03429568be76",
        "parentId" : "d6e91f44-2b2c-4159-b2f2-062f996ae1f7",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : ":)",
        "createdAt" : "2017-01-26T14:57:28Z",
        "updatedAt" : "2017-01-27T01:01:57Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "17168aaacc574a870bb02cb5ae60bc91c074b197",
    "line" : 108,
    "diffHunk" : "@@ -1,1 +269,273 @@\t\tobj, err := creater.New(gvk)\n\t\tif err != nil {\n\t\t\treturn nil, fmt.Errorf(\"cannot apply strategic merge patch for %s locally, try --type merge\", gvk.String())\n\t\t}\n\t\treturn strategicpatch.StrategicMergePatch(originalJS, patchJS, obj)"
  },
  {
    "id" : "d7aa1b3e-b209-4253-8ca6-9a7044e7d63f",
    "prId" : 21174,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "89c5bed7-6232-4f2d-b399-d861b6a2c29f",
        "parentId" : null,
        "authorId" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "body" : "How about \n\n``` go\nif ...; err != nil {\n  break\n}\n// Then do the replace here\n```\n",
        "createdAt" : "2016-02-17T21:21:36Z",
        "updatedAt" : "2016-02-19T19:28:25Z",
        "lastEditedBy" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "tags" : [
        ]
      },
      {
        "id" : "8151b04b-105d-4bbf-b112-965ec5a244ab",
        "parentId" : "89c5bed7-6232-4f2d-b399-d861b6a2c29f",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "This isn't in a loop or a separate method to do a `return` in.  I think this is the tightest representation.\n",
        "createdAt" : "2016-02-17T21:31:22Z",
        "updatedAt" : "2016-02-19T19:28:25Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "730f512d-5127-442a-a301-198ad8d15e40",
        "parentId" : "89c5bed7-6232-4f2d-b399-d861b6a2c29f",
        "authorId" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "body" : "Oh, you're right. Please ignore this. \n",
        "createdAt" : "2016-02-17T21:38:38Z",
        "updatedAt" : "2016-02-19T19:28:25Z",
        "lastEditedBy" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "tags" : [
        ]
      }
    ],
    "commit" : "11da9a7638e393f84eb34fcf54c1962b3cdc115c",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +145,149 @@\t}\n\tif cmdutil.ShouldRecord(cmd, info) {\n\t\tif err := cmdutil.RecordChangeCause(patchedObject, f.Command()); err == nil {\n\t\t\t// don't return an error on failure.  The patch itself succeeded, its only the hint for that change that failed\n\t\t\t// don't bother checking for failures of this replace, because a failure to indicate the hint doesn't fail the command"
  }
]