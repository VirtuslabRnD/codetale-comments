[
  {
    "id" : "f3bca6b1-7bd1-46a0-90f6-fecfb32d062b",
    "prId" : 51762,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/51762#pullrequestreview-60232420",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bae09acf-6563-4f57-929f-9dde71630834",
        "parentId" : null,
        "authorId" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "body" : "I'm not super excited about this interface change. We're going from a well structured argument to a arbitrarily selected formatting of multiple strings. I would have loved a `group, version, kind string` list of argument much more.\r\nAnd changed `ParseGroupVersionKind` to return `group, version, kind string` so that it could still be fed directly as a parameter to that interface. ",
        "createdAt" : "2017-09-01T20:15:00Z",
        "updatedAt" : "2017-09-05T01:20:50Z",
        "lastEditedBy" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "tags" : [
        ]
      }
    ],
    "commit" : "93be3f7735bae6594d9980829ab83b2992ef5878",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +221,225 @@}\n\nfunc (f FakeResources) LookupResource(s string) openapi.Schema {\n\treturn f.resources[s]\n}"
  },
  {
    "id" : "f0d0b2e2-a6c5-4ca8-bb7b-2d923ced8a61",
    "prId" : 51727,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/51727#pullrequestreview-63173822",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "89378f31-0517-4443-813f-15349af56865",
        "parentId" : null,
        "authorId" : "cdb05f24-d700-4d96-a683-3e4de7effbf5",
        "body" : "Don't panic in the test, use `t.Fatal` or `t.Error`.",
        "createdAt" : "2017-09-15T22:05:55Z",
        "updatedAt" : "2017-09-18T17:48:54Z",
        "lastEditedBy" : "cdb05f24-d700-4d96-a683-3e4de7effbf5",
        "tags" : [
        ]
      }
    ],
    "commit" : "59645cbdf580a25e1c09d17c86ef15233ee092b1",
    "line" : 53,
    "diffHunk" : "@@ -1,1 +625,629 @@\t\tdata, err := runtime.Encode(api.Codecs.LegacyCodec(schema.GroupVersion{Version: \"v1\"}), obj)\n\t\tif err != nil {\n\t\t\tpanic(err)\n\t\t}\n\t\tout := &unstructured.Unstructured{Object: make(map[string]interface{})}"
  },
  {
    "id" : "e1042e35-fa35-4b43-abbe-3e00365138a9",
    "prId" : 51727,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/51727#pullrequestreview-63173822",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d5b9bd26-1a0d-4e26-bb6d-f8c8a7ce274d",
        "parentId" : null,
        "authorId" : "cdb05f24-d700-4d96-a683-3e4de7effbf5",
        "body" : "Don't panic in the test, use `t.Fatal` or `t.Error`.",
        "createdAt" : "2017-09-15T22:06:00Z",
        "updatedAt" : "2017-09-18T17:48:54Z",
        "lastEditedBy" : "cdb05f24-d700-4d96-a683-3e4de7effbf5",
        "tags" : [
        ]
      }
    ],
    "commit" : "59645cbdf580a25e1c09d17c86ef15233ee092b1",
    "line" : 57,
    "diffHunk" : "@@ -1,1 +629,633 @@\t\tout := &unstructured.Unstructured{Object: make(map[string]interface{})}\n\t\tif err := encjson.Unmarshal(data, &out.Object); err != nil {\n\t\t\tpanic(err)\n\t\t}\n\t\treturn *out"
  },
  {
    "id" : "1f1b89aa-cd68-44ec-842c-43d07f83b47e",
    "prId" : 49146,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/49146#pullrequestreview-51593145",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4644f529-e6a1-4eb4-86ed-9ebef5b3d27d",
        "parentId" : null,
        "authorId" : "cdb05f24-d700-4d96-a683-3e4de7effbf5",
        "body" : "Is it better to move this to `pkg/kubectl/cmd/testing/fake.go`?",
        "createdAt" : "2017-07-21T19:50:16Z",
        "updatedAt" : "2017-07-25T18:45:37Z",
        "lastEditedBy" : "cdb05f24-d700-4d96-a683-3e4de7effbf5",
        "tags" : [
        ]
      },
      {
        "id" : "53e47559-b8e5-44b1-967c-5dfe4a89de4a",
        "parentId" : "4644f529-e6a1-4eb4-86ed-9ebef5b3d27d",
        "authorId" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "body" : "I don't know yet if this is going to be useful outside the scope of this test.",
        "createdAt" : "2017-07-21T20:28:02Z",
        "updatedAt" : "2017-07-25T18:45:37Z",
        "lastEditedBy" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "tags" : [
        ]
      },
      {
        "id" : "b47f54f4-861b-4087-bc8f-4d5bc0d0464c",
        "parentId" : "4644f529-e6a1-4eb4-86ed-9ebef5b3d27d",
        "authorId" : "cdb05f24-d700-4d96-a683-3e4de7effbf5",
        "body" : "I'm OK with leaving it as is.",
        "createdAt" : "2017-07-21T21:48:13Z",
        "updatedAt" : "2017-07-25T18:45:37Z",
        "lastEditedBy" : "cdb05f24-d700-4d96-a683-3e4de7effbf5",
        "tags" : [
        ]
      }
    ],
    "commit" : "064f80642489d7eeb82d4d43d6c7a2163c2736bb",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +217,221 @@}\n\ntype FakeResources struct {\n\tresources map[schema.GroupVersionKind]openapi.Schema\n}"
  },
  {
    "id" : "d23b317c-6b71-4cb0-81d9-4082ad7953e0",
    "prId" : 36085,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/36085#pullrequestreview-7060467",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "76542934-2612-4225-b819-db616774fc1c",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "encodes the unstructured (or whatever) and then decodes that back into internal for the comparison which this package is using.\n",
        "createdAt" : "2016-11-03T17:27:48Z",
        "updatedAt" : "2016-11-04T13:05:00Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "61673c4b39606fc7e1de9a3cdd4ff5aaaebc0f31",
    "line" : 226,
    "diffHunk" : "@@ -1,1 +261,265 @@\t}\n\tfor i, obj := range actual {\n\t\tactualObj, err := runtime.Decode(\n\t\t\tapi.Codecs.UniversalDecoder(),\n\t\t\t[]byte(runtime.EncodeOrDie(api.Codecs.LegacyCodec(), obj)))"
  },
  {
    "id" : "20807c92-fbf1-498a-bd04-ce5958c61311",
    "prId" : 27392,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "092c9633-7655-4e22-92e0-620ec33649e8",
        "parentId" : null,
        "authorId" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "body" : "This won't give useful information for debugging: \n\n```\n--- FAIL: TestWatchSelector (0.00s)\n    get_test.go:787: unexpected object:\n        Expected: []runtime.Object{(*api.PodList)(0xc8203e3320), (*api.Pod)(0xc8200f2780), (*api.Pod)(0xc8200f2a00)}\n\n        Got: []runtime.Object{(*api.PodList)(0xc8203e3ec0), (*api.Pod)(0xc820390280), (*api.Pod)(0xc820390500)}\n```\n\nChange it to something more helpful?\n",
        "createdAt" : "2016-08-01T19:05:46Z",
        "updatedAt" : "2016-08-02T15:28:24Z",
        "lastEditedBy" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "tags" : [
        ]
      },
      {
        "id" : "3554289e-cc4c-415f-8a4d-679f887d6522",
        "parentId" : "092c9633-7655-4e22-92e0-620ec33649e8",
        "authorId" : "8e9f49fc-1050-4601-b81c-83bf660c5eb8",
        "body" : "This actually just changes this case to match the others (see  `TestWatchResource` and `TestWatchResourceIdentifiedByFile`). The information it conveys is basically a mismatch in the lengths of actual vs expected.  Dumping the actual structures not very useful either as the huge output is not diffable with tools.\n",
        "createdAt" : "2016-08-01T19:41:12Z",
        "updatedAt" : "2016-08-02T15:28:24Z",
        "lastEditedBy" : "8e9f49fc-1050-4601-b81c-83bf660c5eb8",
        "tags" : [
        ]
      }
    ],
    "commit" : "461faae3672c68e7c5065a1bd1f2b5fdeba6ec81",
    "line" : 80,
    "diffHunk" : "@@ -1,1 +782,786 @@\tactual := tf.Printer.(*testPrinter).Objects\n\tif !reflect.DeepEqual(expected, actual) {\n\t\tt.Errorf(\"unexpected object:\\nExpected: %#v\\n\\nGot: %#v\\n\\n\", expected, actual)\n\t}\n\tif len(buf.String()) == 0 {"
  }
]