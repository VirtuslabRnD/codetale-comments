[
  {
    "id" : "57ae6ede-1f69-4c83-8d45-f0a8d9211d24",
    "prId" : 55092,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/55092#pullrequestreview-76324948",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0ae92c65-0c25-46db-8469-1c73644e8d9c",
        "parentId" : null,
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "We removed this in a previous PR because a builder needs to be aware of both typed and unstructured content.  I'm going to revert this particular change in my PR because we want to move to a model where a single builder can deal with all types.",
        "createdAt" : "2017-11-14T03:41:14Z",
        "updatedAt" : "2017-11-14T03:41:14Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "eb929aea-dd5f-4815-8f5a-5577eb9b4b4e",
        "parentId" : "0ae92c65-0c25-46db-8469-1c73644e8d9c",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "90d76adb4bf1180782528b10852d2a12ce35022d was where Juan backed this out the first time because we don't want two separate builders, we want one builder that can deal with versioned, internal, and unstructured types.\r\n\r\nSee https://github.com/kubernetes/kubernetes/pull/55660/commits/11913e6356187964a5ffab5f935b89ee7c04fb3b in #55660 for a simpler reduction.",
        "createdAt" : "2017-11-14T03:55:54Z",
        "updatedAt" : "2017-11-14T04:05:51Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "06c5be98028d6c045ae438498b46262ea1035b9c",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +189,193 @@\t}\n\n\tr := f.NewUnstructuredBuilder().\n\t\tSchema(schema).\n\t\tContinueOnError()."
  },
  {
    "id" : "a93c3516-edb1-4c9b-8b77-00f218a789f6",
    "prId" : 54245,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/54245#pullrequestreview-70731406",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6ed9660b-c136-4e13-b9b4-ebc952ba293b",
        "parentId" : null,
        "authorId" : "ad267631-96d1-4bad-b913-e8d6342e65a2",
        "body" : "How does the error look like if we have an invalid URI here (e.g. a full URL, non-existent URI)? User-friendly enough to expose it directly?",
        "createdAt" : "2017-10-20T02:20:54Z",
        "updatedAt" : "2017-10-23T16:50:54Z",
        "lastEditedBy" : "ad267631-96d1-4bad-b913-e8d6342e65a2",
        "tags" : [
        ]
      },
      {
        "id" : "4e765cb0-0963-4900-98be-15df2d8e1e96",
        "parentId" : "6ed9660b-c136-4e13-b9b4-ebc952ba293b",
        "authorId" : "3c1422a0-6358-4857-8f56-961979171514",
        "body" : "Agree here.\r\n\r\nIf we have an invalid URI here, panic will occur instead of error.",
        "createdAt" : "2017-10-20T02:26:12Z",
        "updatedAt" : "2017-10-23T16:50:54Z",
        "lastEditedBy" : "3c1422a0-6358-4857-8f56-961979171514",
        "tags" : [
        ]
      },
      {
        "id" : "9b83a7ac-6a38-47bf-ab99-ae33f08dd430",
        "parentId" : "6ed9660b-c136-4e13-b9b4-ebc952ba293b",
        "authorId" : "ad267631-96d1-4bad-b913-e8d6342e65a2",
        "body" : "Do we need to make it clear somewhere (e.g. the flag description) that the output when using `--raw` is always JSON? Does it make it mutually exclusive with `--output` and other printer flags?",
        "createdAt" : "2017-10-20T02:32:16Z",
        "updatedAt" : "2017-10-23T16:50:54Z",
        "lastEditedBy" : "ad267631-96d1-4bad-b913-e8d6342e65a2",
        "tags" : [
        ]
      }
    ],
    "commit" : "58f39a15de457b49d8277939e6599105effc2733",
    "line" : 98,
    "diffHunk" : "@@ -1,1 +162,166 @@\t\t}\n\t\t// TODO post content with stream.  Right now it ignores body content\n\t\tbytes, err := restClient.Post().RequestURI(options.Raw).Body(data).DoRaw()\n\t\tif err != nil {\n\t\t\treturn err"
  },
  {
    "id" : "78f8e53b-d640-4573-940d-018eec104968",
    "prId" : 33250,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/33250#pullrequestreview-5343486",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9fea1d6c-0da3-4d29-b776-612067c2a039",
        "parentId" : null,
        "authorId" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "body" : "Perhaps we can print warnings to stderr when these three flags are specified without --edit?\n",
        "createdAt" : "2016-10-14T21:32:28Z",
        "updatedAt" : "2016-10-24T16:57:04Z",
        "lastEditedBy" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "tags" : [
        ]
      },
      {
        "id" : "5c77f529-2a5e-4279-bf35-d8a1864b3d63",
        "parentId" : "9fea1d6c-0da3-4d29-b776-612067c2a039",
        "authorId" : "cdb05f24-d700-4d96-a683-3e4de7effbf5",
        "body" : "> Perhaps we can print warnings to stderr when these three flags are specified without --edit?\n\nIt is not reasonable to check these flags for `--edit`, since `--dray-run` is using these flags, too.\n",
        "createdAt" : "2016-10-22T05:06:27Z",
        "updatedAt" : "2016-10-24T16:57:04Z",
        "lastEditedBy" : "cdb05f24-d700-4d96-a683-3e4de7effbf5",
        "tags" : [
        ]
      }
    ],
    "commit" : "c641834bb3a31ee45be77bbe5609e640e0a7016d",
    "line" : null,
    "diffHunk" : "@@ -1,1 +73,77 @@\tcmdutil.AddPrinterFlags(cmd)\n\tcmd.Flags().Bool(\"edit\", false, \"Edit the API resource before creating\")\n\tcmd.Flags().Bool(\"windows-line-endings\", gruntime.GOOS == \"windows\", \"Only relevant if --edit=true. Use Windows line-endings (default Unix line-endings)\")\n\tcmdutil.AddApplyAnnotationFlags(cmd)\n\tcmdutil.AddRecordFlag(cmd)"
  },
  {
    "id" : "43e12e1a-29b8-4dde-8075-27fc290134fa",
    "prId" : 16028,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "151a4f16-722d-4ab0-96d0-1010e754a0e0",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "Is it possible to reasonable delegate from this point to `create` to ensure consistent behavior?\n\n@jlowdermilk This is an example where `CreateOptions.RunCreate()` that doesn't rely upon the cobra command would allow cleaner composition.\n",
        "createdAt" : "2015-12-11T19:00:48Z",
        "updatedAt" : "2015-12-14T18:43:52Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "11479f92-1149-495a-b86a-7dba5a2258b9",
        "parentId" : "151a4f16-722d-4ab0-96d0-1010e754a0e0",
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "I struggled with that, but did not see a clean way given how the `Visit` piece worked.\n",
        "createdAt" : "2015-12-11T20:00:44Z",
        "updatedAt" : "2015-12-14T18:43:52Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      }
    ],
    "commit" : "5e0948586c35e7e7f4f7ccc39411d2726c8e767a",
    "line" : 76,
    "diffHunk" : "@@ -1,1 +224,228 @@\t}\n\tresourceMapper := &resource.Mapper{ObjectTyper: typer, RESTMapper: mapper, ClientMapper: f.ClientMapperForCommand()}\n\tinfo, err := resourceMapper.InfoForObject(obj)\n\tif err != nil {\n\t\treturn err"
  },
  {
    "id" : "b5a4adba-694c-431f-b1a5-ae82e5a33960",
    "prId" : 16028,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0278f301-55e5-4d62-ac44-fcba81f5fe6e",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "If I specify `--dry-run` I think I expect to see json or yaml as output, don't I?\n\nI guess I should say, I thought that was your intent based on the help.  I think that behavior would be inconsistent with `kubectl create`.\n",
        "createdAt" : "2015-12-11T19:08:30Z",
        "updatedAt" : "2015-12-14T18:43:52Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "bf07378c-88e1-479b-9061-8e7268190e00",
        "parentId" : "0278f301-55e5-4d62-ac44-fcba81f5fe6e",
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "good catch, missed this in the refactor last night.  I do want `--dry-run` to let me output the json/yaml.  will resolve.\n",
        "createdAt" : "2015-12-11T20:04:40Z",
        "updatedAt" : "2015-12-14T18:43:52Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      }
    ],
    "commit" : "5e0948586c35e7e7f4f7ccc39411d2726c8e767a",
    "line" : 83,
    "diffHunk" : "@@ -1,1 +231,235 @@\t\treturn err\n\t}\n\tif !options.DryRun {\n\t\tobj, err = resource.NewHelper(client, mapping).Create(namespace, false, info.Object)\n\t\tif err != nil {"
  },
  {
    "id" : "0918077b-8c31-42e9-87c9-fa10ef2870b6",
    "prId" : 11254,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3c8c4d69-54c2-40bd-949a-00c32296bf21",
        "parentId" : null,
        "authorId" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "body" : "Nit: since this is kubectl, it feels like we can confirm and tell them one way or another (not expecting it in this pr).\n",
        "createdAt" : "2015-07-14T20:12:20Z",
        "updatedAt" : "2015-07-15T04:08:03Z",
        "lastEditedBy" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "tags" : [
        ]
      },
      {
        "id" : "f270b768-e894-4562-a059-f34a94971f48",
        "parentId" : "3c8c4d69-54c2-40bd-949a-00c32296bf21",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "Ai gree we could, but we pretty much need that to come from the\ncloud-provider, which means from the master.\n\n#11259\n\nOn Tue, Jul 14, 2015 at 1:12 PM, Prashanth B notifications@github.com\nwrote:\n\n> In pkg/kubectl/cmd/create.go\n> https://github.com/GoogleCloudPlatform/kubernetes/pull/11254#discussion_r34613478\n> :\n> \n> > ```\n> >         out.Write([]byte(msg))\n> >     }\n> >     if obj.Spec.Type == api.ServiceTypeNodePort {\n> > ```\n> > -           msg := fmt.Sprintf(`\n> > -               You have exposed your service on an external port on all nodes in your cluster.\n> > -               If you want to expose this service to the external internet, you may need to set up\n> > \n> > ## \\-               firewall rules for the service port(s) (%s) to serve traffic.\n> > -               See https://github.com/GoogleCloudPlatform/kubernetes/tree/master/docs/services-firewalls.md for more details.\n> > -               `, makePortsString(obj.Spec.Ports, true))\n> > -           msg := fmt.Sprintf(\n> > -               `You have exposed your service on an external port on all nodes in your\n> >   +cluster.  If you want to expose this service to the external internet, you may\n> >   +need to set up firewall rules for the service port(s) (%s) to serve traffic.\n> >   +\n> >   +See http://releases.k8s.io/HEAD/docs/services-firewalls.md for more details.\n> \n> Nit: since this is kubectl, it feels like we can confirm and tell them one\n> way or another (not expecting it in this pr).\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/GoogleCloudPlatform/kubernetes/pull/11254/files#r34613478\n> .\n",
        "createdAt" : "2015-07-14T20:45:31Z",
        "updatedAt" : "2015-07-15T04:08:03Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "fe89298c09fe652ad72d5a51311e2fdbf81978e1",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +128,132 @@need to set up firewall rules for the service port(s) (%s) to serve traffic.\n\nSee http://releases.k8s.io/HEAD/docs/services-firewalls.md for more details.\n`,\n\t\t\t\tmakePortsString(obj.Spec.Ports, true))"
  },
  {
    "id" : "97d83048-8486-4560-892e-2faa26aa99fe",
    "prId" : 10134,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "88a9b280-40e6-4706-acf5-387311c4411b",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "An ugly side effect of using back-quotes here is that all the whitespace at the front of lines is preserved.  Can we undent that?\n",
        "createdAt" : "2015-06-19T22:43:34Z",
        "updatedAt" : "2015-06-19T22:43:34Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "f0ff1927f12e56b6d95e056a6f3bb69761b2ea7e",
    "line" : 1,
    "diffHunk" : "@@ -1,1 +124,128 @@\t\tif obj.Spec.Type == api.ServiceTypeLoadBalancer {\n\t\t\tmsg := fmt.Sprintf(`\n\t\t\tAn external load-balanced service was created.  On many platforms (e.g. Google Compute Engine),\n\t\t\tyou will also need to explicitly open a Firewall rule for the service port(s) (%s) to serve traffic.\n"
  },
  {
    "id" : "2136bcec-aada-4fac-bc25-ca1d6a7e118e",
    "prId" : 9302,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9e245a88-9aaf-43c2-bdd0-b5dbf213cc30",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "Also NodePort, although that probably should say \"you might want to ...\"\n",
        "createdAt" : "2015-06-05T04:57:25Z",
        "updatedAt" : "2015-06-05T05:33:06Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "054ba2b3-b0d5-4ffb-b4aa-ef111fef91a2",
        "parentId" : "9e245a88-9aaf-43c2-bdd0-b5dbf213cc30",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "Where do we document the overly-loose GCE firewall problem?  Should we stick it in a .md and link it here?\n",
        "createdAt" : "2015-06-05T04:57:55Z",
        "updatedAt" : "2015-06-05T05:33:06Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "6d42cf52-d66a-49e3-8c61-520a03f67735",
        "parentId" : "9e245a88-9aaf-43c2-bdd0-b5dbf213cc30",
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "done and done.\n",
        "createdAt" : "2015-06-05T05:33:25Z",
        "updatedAt" : "2015-06-05T05:33:25Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "380790a8e2fb769b3004fc091f61d2e4a147de3a",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +122,126 @@\tswitch obj := obj.(type) {\n\tcase *api.Service:\n\t\tif obj.Spec.Type == api.ServiceTypeLoadBalancer {\n\t\t\tmsg := fmt.Sprintf(`\n\t\t\tAn external load-balanced service was created.  On many platforms (e.g. Google Compute Engine),"
  },
  {
    "id" : "4a53b5ca-2749-4e96-9f36-cd8f056df95c",
    "prId" : 9302,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6df7cb35-f6e0-417c-92a7-f7c2f4150f17",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "what about Updates?\n",
        "createdAt" : "2015-06-05T04:59:38Z",
        "updatedAt" : "2015-06-05T05:33:06Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "2bca2888-dccc-45e5-9f0b-bd9c70c9a2c8",
        "parentId" : "6df7cb35-f6e0-417c-92a7-f7c2f4150f17",
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "done.\n",
        "createdAt" : "2015-06-05T05:33:15Z",
        "updatedAt" : "2015-06-05T05:33:15Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "380790a8e2fb769b3004fc091f61d2e4a147de3a",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +106,110 @@\t\tcount++\n\t\tinfo.Refresh(obj, true)\n\t\tprintObjectSpecificMessage(info.Object, out)\n\t\tfmt.Fprintf(out, \"%s/%s\\n\", info.Mapping.Resource, info.Name)\n\t\treturn nil"
  },
  {
    "id" : "9de4da9a-4bf7-47af-ba52-e53c353ac407",
    "prId" : 9302,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f4a0d085-edda-4bff-a67f-73e22a49a574",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "Can we use the docs.k8s.io short URL here?\n",
        "createdAt" : "2015-06-05T05:38:37Z",
        "updatedAt" : "2015-06-05T05:38:37Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "380790a8e2fb769b3004fc091f61d2e4a147de3a",
    "line" : 37,
    "diffHunk" : "@@ -1,1 +127,131 @@\t\t\tyou will also need to explicitly open a Firewall rule for the service port(s) (%s) to serve traffic.\n\n\t\t\tSee https://github.com/GoogleCloudPlatform/kubernetes/tree/master/docs/services-firewall.md for more details.\n\t\t\t`, makePortsString(obj.Spec.Ports))\n\t\t\tout.Write([]byte(msg))"
  },
  {
    "id" : "4377e68f-74de-40df-95ff-86c9cdc09ab1",
    "prId" : 9302,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8b533223-3494-42f0-bb6a-95b132bfe991",
        "parentId" : null,
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "It seems a user needs a firewall rule to allow traffic to the nodePort, not the service port, doesn't it? @thockin @brendandburns \n",
        "createdAt" : "2015-06-12T19:08:37Z",
        "updatedAt" : "2015-06-12T19:08:37Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "380790a8e2fb769b3004fc091f61d2e4a147de3a",
    "line" : 48,
    "diffHunk" : "@@ -1,1 +138,142 @@\t\t\t\t\n\t\t\t\tSee https://github.com/GoogleCloudPlatform/kubernetes/tree/master/docs/services-firewall.md for more details.\n\t\t\t\t`, makePortsString(obj.Spec.Ports))\n\t\t\tout.Write([]byte(msg))\n\t\t}"
  },
  {
    "id" : "5b3e580f-4488-45e2-8b4f-787373bb73c7",
    "prId" : 2000,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cd02bc3c-7f9b-41d0-8345-1599673c0d61",
        "parentId" : null,
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "Why are these routines printing out the names now? Similar pattern to docker CLI of printing container ids? Perhaps we should be printing fully qualified names (e.g., URLs containing namespace, etc.) instead?\n",
        "createdAt" : "2014-11-04T00:09:34Z",
        "updatedAt" : "2014-11-04T15:48:12Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "62cbd741-b36e-4935-9d69-9d51b046d683",
        "parentId" : "cd02bc3c-7f9b-41d0-8345-1599673c0d61",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "They did so before, I just carried it over.  Agree it's not fully thought through.\n\n> On Nov 3, 2014, at 7:09 PM, bgrant0607 notifications@github.com wrote:\n> \n> In pkg/kubectl/cmd/create.go:\n> \n> > ```\n> >         checkErr(err)\n> > ```\n> > -           fmt.Fprintf(out, \"%s\\n\", name)\n> >   Why are these routines printing out the names now? Similar pattern to docker CLI of printing container ids? Perhaps we should be printing fully qualified names (e.g., URLs containing namespace, etc.) instead?\n> \n> —\n> Reply to this email directly or view it on GitHub.\n",
        "createdAt" : "2014-11-04T00:25:38Z",
        "updatedAt" : "2014-11-04T15:48:12Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "cff29278-a73d-4b04-8bbd-fc0ea7d40d87",
        "parentId" : "cd02bc3c-7f9b-41d0-8345-1599673c0d61",
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "Ah, from Modify. Ok.\n",
        "createdAt" : "2014-11-04T00:48:53Z",
        "updatedAt" : "2014-11-04T15:48:12Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      }
    ],
    "commit" : "6026c8b56a4460c997fc9210e9b31ba5b04b8d3c",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +50,54 @@\t\t\terr = kubectl.NewRESTHelper(client, mapping).Create(namespace, true, data)\n\t\t\tcheckErr(err)\n\t\t\tfmt.Fprintf(out, \"%s\\n\", name)\n\t\t},\n\t}"
  }
]