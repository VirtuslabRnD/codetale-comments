[
  {
    "id" : "f7df3e64-a55a-4681-b6b0-b5dba10fd9ba",
    "prId" : 63105,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/63105#pullrequestreview-115710150",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "92a86396-57cf-4fce-8771-37a1b4c96f61",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "follow up to make this a more reasonable error if you give this something other than a replication controller",
        "createdAt" : "2018-04-26T19:06:51Z",
        "updatedAt" : "2018-04-26T19:06:51Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "b8177bb9af74f2a49942a659269b43e73201837d",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +219,223 @@\n\t\tuncastVersionedObj, err := legacyscheme.Scheme.ConvertToVersion(infos[0].Object, v1.SchemeGroupVersion)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}"
  },
  {
    "id" : "3fc4e98a-3e71-4fff-9f4a-ed287ec9e754",
    "prId" : 61285,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/61285#pullrequestreview-113727009",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "91811a57-df53-4b2e-8506-37fda29013c8",
        "parentId" : null,
        "authorId" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "body" : "nit: quote \"rollout\"",
        "createdAt" : "2018-04-19T18:35:30Z",
        "updatedAt" : "2018-04-25T11:09:21Z",
        "lastEditedBy" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "tags" : [
        ]
      }
    ],
    "commit" : "8237e1a0344a5d824934e3b0faa64ef413ad6822",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +82,86 @@\t\tUse: \"rolling-update OLD_CONTROLLER_NAME ([NEW_CONTROLLER_NAME] --image=NEW_CONTAINER_IMAGE | -f NEW_CONTROLLER_SPEC)\",\n\t\tDisableFlagsInUseLine: true,\n\t\tShort:      \"Perform a rolling update. This command is deprecated, use rollout instead.\",\n\t\tLong:       rollingUpdateLong,\n\t\tExample:    rollingUpdateExample,"
  },
  {
    "id" : "752e911c-79c6-4b7f-9eb6-a88046f976de",
    "prId" : 24645,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c0857f28-83d4-4c7f-a66f-0379cc28a276",
        "parentId" : null,
        "authorId" : "948c8bee-49af-46ed-93a8-309275b51d61",
        "body" : "maybe give a comment here on why adding this?\n",
        "createdAt" : "2016-04-23T07:43:49Z",
        "updatedAt" : "2016-04-25T20:39:05Z",
        "lastEditedBy" : "948c8bee-49af-46ed-93a8-309275b51d61",
        "tags" : [
        ]
      },
      {
        "id" : "d11e3266-a480-4ec7-88b9-b1be2b7fdc16",
        "parentId" : "c0857f28-83d4-4c7f-a66f-0379cc28a276",
        "authorId" : "8076e56f-768c-4f89-90e6-045ef34e1525",
        "body" : "Done.\n",
        "createdAt" : "2016-04-25T16:20:38Z",
        "updatedAt" : "2016-04-25T20:39:05Z",
        "lastEditedBy" : "8076e56f-768c-4f89-90e6-045ef34e1525",
        "tags" : [
        ]
      }
    ],
    "commit" : "9b91750284fcc290c365d3d490e722265d87e74c",
    "line" : null,
    "diffHunk" : "@@ -1,1 +277,281 @@\t\t}\n\t\t// If new image is same as old, the hash may not be distinct, so add a suffix.\n\t\toldHash += \"-orig\"\n\t\toldRc, err = kubectl.UpdateExistingReplicationController(client, oldRc, cmdNamespace, newRc.Name, deploymentKey, oldHash, out)\n\t\tif err != nil {"
  },
  {
    "id" : "79428bcc-afd7-442d-baef-22ab2e6b9367",
    "prId" : 13445,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "824a3471-7795-4b61-9c4d-238a4d27fe09",
        "parentId" : null,
        "authorId" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "body" : "check the `err` returned here\n",
        "createdAt" : "2015-09-02T21:38:36Z",
        "updatedAt" : "2015-09-03T12:33:39Z",
        "lastEditedBy" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "tags" : [
        ]
      }
    ],
    "commit" : "65bfd3541f4fce8eaafa323d33bcb3f0893d6684",
    "line" : null,
    "diffHunk" : "@@ -1,1 +311,315 @@\t\tmessage = fmt.Sprintf(\"rolling updated to %q\", newRc.Name)\n\t}\n\tnewRc, err = client.ReplicationControllers(cmdNamespace).Get(newRc.Name)\n\tif err != nil {\n\t\treturn err"
  },
  {
    "id" : "fd2bd42e-2f6d-420e-9222-0ac50f88f667",
    "prId" : 10234,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c40ba57e-5e6d-4f3c-8a3c-713ae6bc33f5",
        "parentId" : null,
        "authorId" : "8076e56f-768c-4f89-90e6-045ef34e1525",
        "body" : "I still don't think you need a VersionedObject. If the return case is the same for v1beta3 and v1, why not just\n\n```\nif rc, ok := info.Object.(api.ReplicationController); ok {\n            return rc.Spec.Replicas == nil\n}\n```\n\nIs there another reason for adding a VersionedObject besides this particular use?\n",
        "createdAt" : "2015-06-24T17:38:55Z",
        "updatedAt" : "2015-06-25T19:29:30Z",
        "lastEditedBy" : "8076e56f-768c-4f89-90e6-045ef34e1525",
        "tags" : [
        ]
      },
      {
        "id" : "5ae8a017-f5f0-4e91-86a8-e0b4406c21fc",
        "parentId" : "c40ba57e-5e6d-4f3c-8a3c-713ae6bc33f5",
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "The reason we need a versioned object here is because at this point info.Object has already been defaulted. If that field wasn't provided, it will either have 0 replicas per v1beta3 defaults or 1 replica per v1 defaults. It would also impossible to tell whether those values were provided or added by defaults.\n",
        "createdAt" : "2015-06-24T17:43:40Z",
        "updatedAt" : "2015-06-25T19:29:30Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      },
      {
        "id" : "1f8fe926-a011-491a-b1da-98f69596bcaa",
        "parentId" : "c40ba57e-5e6d-4f3c-8a3c-713ae6bc33f5",
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "It's nasty. If there is a better way I haven't figured it out. #3955, #4874\n",
        "createdAt" : "2015-06-24T17:47:57Z",
        "updatedAt" : "2015-06-25T19:29:30Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      },
      {
        "id" : "367635c8-1893-441c-a9a0-d528247758e5",
        "parentId" : "c40ba57e-5e6d-4f3c-8a3c-713ae6bc33f5",
        "authorId" : "8076e56f-768c-4f89-90e6-045ef34e1525",
        "body" : "Understood, thanks for explanation.\n",
        "createdAt" : "2015-06-24T17:49:53Z",
        "updatedAt" : "2015-06-25T19:29:30Z",
        "lastEditedBy" : "8076e56f-768c-4f89-90e6-045ef34e1525",
        "tags" : [
        ]
      }
    ],
    "commit" : "dd07df00ae0724a27cc96217d00307368ce950dc",
    "line" : 67,
    "diffHunk" : "@@ -1,1 +301,305 @@\tswitch info.Mapping.APIVersion {\n\tcase \"v1\":\n\t\tif rc, ok := info.VersionedObject.(*v1.ReplicationController); ok {\n\t\t\treturn rc.Spec.Replicas == nil\n\t\t}"
  },
  {
    "id" : "041196e9-b99a-450f-987a-072af76da5b3",
    "prId" : 8173,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ad7463f9-ec23-4119-b324-37c2a57dcb71",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "wait, shouldn't this detail be printed before the return or is only useful if you can't determine type?\n",
        "createdAt" : "2015-05-13T17:07:31Z",
        "updatedAt" : "2015-05-13T17:07:31Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "0df3060e-69e0-443a-99be-eadc33d842ed",
        "parentId" : "ad7463f9-ec23-4119-b324-37c2a57dcb71",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "I guess it doesn't really matter.  It's the exception case of the exceptional case.\n",
        "createdAt" : "2015-05-13T17:08:18Z",
        "updatedAt" : "2015-05-13T17:08:18Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "7e1952ee-3d59-41c0-adee-b13bb5132d4b",
        "parentId" : "ad7463f9-ec23-4119-b324-37c2a57dcb71",
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "Right, if we can figure out what Type the object is, we don't really need that verbose printer, it's the error handler in case we can't actually figure out what the type is, at least we get something.\n",
        "createdAt" : "2015-05-14T10:10:32Z",
        "updatedAt" : "2015-05-14T10:10:32Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "ea3852ec692ba05b6d53ea92471a862d8c2e66b2",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +167,171 @@\t\t\t\treturn cmdutil.UsageError(cmd, \"%s contains a %s not a ReplicationController\", filename, kind)\n\t\t\t}\n\t\t\tglog.V(4).Infof(\"Object %#v is not a ReplicationController\", obj)\n\t\t\treturn cmdutil.UsageError(cmd, \"%s does not specify a valid ReplicationController\", filename)\n\t\t}"
  },
  {
    "id" : "7322de4e-7524-4eff-a623-6ac2987705a8",
    "prId" : 7321,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6a32b378-e588-4a42-994f-3abcc5b09048",
        "parentId" : null,
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "How do you imagine we could be left with orphans? The addition of the deployment label failed above, despite retries?\n",
        "createdAt" : "2015-04-25T00:58:47Z",
        "updatedAt" : "2015-04-25T00:58:47Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "5dba5679-e6ee-42aa-b239-d29b14f6ef6e",
        "parentId" : "6a32b378-e588-4a42-994f-3abcc5b09048",
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "The race is caused by the fact that despite updating the RC in the API server, we have no guarantees that the controller-manager has actually picked up the changed RC, when we subsequently list the existing pods.\n\nThe race goes like this:\n- We update the RC, but it is not yet picked up by the controller-manager.\n- We list the existing pods\n- One of those existing pods is deleted\n- The controller manager, which hasn't picked up the updated RC, sees the missing Pod and creates a new Pod using the old template.  Because we've already listed the pods, it's not in the list of pods to update\n- The controller manager picks up the new RC definition.\n- This newly created pod is orphaned.\n\nI agree that it is a pretty unlikely race, but it's definitely possible.\n",
        "createdAt" : "2015-04-25T03:34:01Z",
        "updatedAt" : "2015-04-25T03:34:01Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      },
      {
        "id" : "eff5254e-dbc0-435e-ba2c-e90d902f372f",
        "parentId" : "6a32b378-e588-4a42-994f-3abcc5b09048",
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "Thanks. Probably we should have controllers report the last resourceVersion they have seen. \n",
        "createdAt" : "2015-04-25T04:58:13Z",
        "updatedAt" : "2015-04-25T04:58:13Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      }
    ],
    "commit" : "f40c793b3753a64287964cf60c83245c8701390c",
    "line" : 41,
    "diffHunk" : "@@ -1,1 +307,311 @@\t}\n\n\tpodList, err = client.Pods(namespace).List(labels.SelectorFromSet(selectorCopy), fields.Everything())\n\tfor ix := range podList.Items {\n\t\tpod := &podList.Items[ix]"
  },
  {
    "id" : "9b0c7550-cb1b-4316-9cd5-6bc9aff87976",
    "prId" : 7279,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "36c6aaf7-613a-4869-af59-3763bb522ecf",
        "parentId" : null,
        "authorId" : "8076e56f-768c-4f89-90e6-045ef34e1525",
        "body" : "The usage string (line [61](https://github.com/GoogleCloudPlatform/kubernetes/pull/7279/files#diff-57b5708f59a1279bfe3c9e55adaef5a1R61)) needs to be updated for the new syntax options.\n",
        "createdAt" : "2015-04-27T18:41:39Z",
        "updatedAt" : "2015-04-28T03:43:54Z",
        "lastEditedBy" : "8076e56f-768c-4f89-90e6-045ef34e1525",
        "tags" : [
        ]
      },
      {
        "id" : "8bf192cb-515f-4694-b958-9263657740a2",
        "parentId" : "36c6aaf7-613a-4869-af59-3763bb522ecf",
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "done.\n",
        "createdAt" : "2015-04-27T21:53:36Z",
        "updatedAt" : "2015-04-28T03:43:54Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      },
      {
        "id" : "de5972b7-f16e-423a-9c48-6a683637a715",
        "parentId" : "36c6aaf7-613a-4869-af59-3763bb522ecf",
        "authorId" : "8076e56f-768c-4f89-90e6-045ef34e1525",
        "body" : "Updating examples good too, but I was referring specifically to this\n\n```\n        Use: \"rolling-update OLD_CONTROLLER_NAME -f NEW_CONTROLLER_SPEC\",\n```\n\nIt should be updated to\n\n```\n        Use: \"rolling-update OLD_RC_NAME ([NEW_RC_NAME] --image=IMAGE | -f NEW_RC_FILENAME)\",\n```\n",
        "createdAt" : "2015-04-27T22:04:32Z",
        "updatedAt" : "2015-04-28T03:43:54Z",
        "lastEditedBy" : "8076e56f-768c-4f89-90e6-045ef34e1525",
        "tags" : [
        ]
      },
      {
        "id" : "10210299-84ae-405b-8c2c-a41d057f4378",
        "parentId" : "36c6aaf7-613a-4869-af59-3763bb522ecf",
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "done.\n",
        "createdAt" : "2015-04-27T22:50:29Z",
        "updatedAt" : "2015-04-28T03:43:54Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "591d98b6b2f334a9dc221e04f3cc61a905979473",
    "line" : 52,
    "diffHunk" : "@@ -1,1 +175,179 @@\t\t\treturn err\n\t\t}\n\n\t\tvar newName string\n\t\tif len(args) >= 2 {"
  },
  {
    "id" : "a947ec2d-0cca-468c-b20e-935fc1b006ea",
    "prId" : 7268,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b41aebbe-3e9c-4fbe-a0d4-8051c9e6349f",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "Can you pull the static validation into a separate method?\n",
        "createdAt" : "2015-04-24T11:46:43Z",
        "updatedAt" : "2015-04-24T22:19:24Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "b6e58d1a-aed4-45db-a0f9-c5117c14a6e8",
        "parentId" : "b41aebbe-3e9c-4fbe-a0d4-8051c9e6349f",
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "done.\n",
        "createdAt" : "2015-04-24T18:26:14Z",
        "updatedAt" : "2015-04-24T22:19:24Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "217e6ff0d0a9fc644278c773ce8aafd76d4b0579",
    "line" : null,
    "diffHunk" : "@@ -1,1 +89,93 @@\t\treturn \"\", \"\", \"\", \"\", cmdutil.UsageError(cmd, \"--deployment-label-key can not be empty\")\n\t}\n\tif len(filename) == 0 && len(image) == 0 {\n\t\treturn \"\", \"\", \"\", \"\", cmdutil.UsageError(cmd, \"Must specify --filename or --image for new controller\")\n\t}"
  },
  {
    "id" : "b1e8d5f1-ea9f-4bfe-859f-6c8ee4ef5b74",
    "prId" : 7268,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bbc60e9c-5939-46f2-8056-f060763dbeed",
        "parentId" : null,
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "Ideally, this would use the label update command, which we'd factor out into a library package, at least for the pod updates. We also need to update the selector on the RC, but there's not currently a generic way to do that (though I suspect we'll need one), so I'm more sympathetic to custom code for that.\n",
        "createdAt" : "2015-04-24T21:44:18Z",
        "updatedAt" : "2015-04-24T22:19:24Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "fcc902d7-0c09-4940-8a67-09239c5c327d",
        "parentId" : "bbc60e9c-5939-46f2-8056-f060763dbeed",
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "TODO'd\n",
        "createdAt" : "2015-04-24T22:19:51Z",
        "updatedAt" : "2015-04-24T22:19:51Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "217e6ff0d0a9fc644278c773ce8aafd76d4b0579",
    "line" : null,
    "diffHunk" : "@@ -1,1 +254,258 @@\t// Update all labels to include the new hash, so they are correctly adopted\n\t// TODO: extract the code from the label command and re-use it here.\n\tpodList, err := client.Pods(namespace).List(labels.SelectorFromSet(oldRc.Spec.Selector), fields.Everything())\n\tif err != nil {\n\t\treturn err"
  },
  {
    "id" : "c1691e1b-3998-4695-8030-7fa4e10d634b",
    "prId" : 7268,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8c85473f-69e6-485a-ab46-d2f134dee5b6",
        "parentId" : null,
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "This is racy. Really, the RC needs to be updated first to add the label to its template, then the pods need to be updated, then the selector needs to be changed. Or, delete the RC before updating pods and recreate it after.\n",
        "createdAt" : "2015-04-24T21:45:48Z",
        "updatedAt" : "2015-04-24T22:19:24Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "56e89608-ff40-4108-9aa9-4de009688c02",
        "parentId" : "8c85473f-69e6-485a-ab46-d2f134dee5b6",
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "What you propose is actually worse, because the minute you update the RC, it orphans the old pods, which causes it to notice that all pods are missing, freak out and creates N pods, so you end up with N orphans, and N new pods.  Even if you delete the orphans, it's going to cause a bunch of restart churn in your system.\n\nPro-actively labeling, updating the pods, and then deleting any orphans that might sneak in, is the best you can do, I think.\n",
        "createdAt" : "2015-04-24T22:12:23Z",
        "updatedAt" : "2015-04-24T22:19:24Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      },
      {
        "id" : "15897af4-5afc-486c-8ca1-5611d7d38abb",
        "parentId" : "8c85473f-69e6-485a-ab46-d2f134dee5b6",
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "No, adding a new label key to the template doesn't orphan pods. That's why the selector update should be a separate step.\n",
        "createdAt" : "2015-04-24T23:07:38Z",
        "updatedAt" : "2015-04-24T23:07:38Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "0d4deb75-7a41-4fc3-a314-4a79bfd6ec95",
        "parentId" : "8c85473f-69e6-485a-ab46-d2f134dee5b6",
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "ah, I see your point wrt to splitting the updates.  Will send a PR to do that.\n\n--brendan\n",
        "createdAt" : "2015-04-24T23:15:55Z",
        "updatedAt" : "2015-04-24T23:15:55Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "217e6ff0d0a9fc644278c773ce8aafd76d4b0579",
    "line" : 270,
    "diffHunk" : "@@ -1,1 +292,296 @@\toldRc.Spec.Template.Labels[deploymentKey] = oldHash\n\n\tif _, err := client.ReplicationControllers(namespace).Update(oldRc); err != nil {\n\t\treturn err\n\t}"
  },
  {
    "id" : "47a07dd6-b3c9-405a-9eab-066b4c54b36d",
    "prId" : 7268,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "877adcd2-fe13-4c38-b250-3660f21baae5",
        "parentId" : null,
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "It will orphan pods, which doesn't seem good.\n",
        "createdAt" : "2015-04-24T21:46:34Z",
        "updatedAt" : "2015-04-24T22:19:24Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "67f4d45b-5d48-4d5f-a66a-d7345e1e9052",
        "parentId" : "877adcd2-fe13-4c38-b250-3660f21baae5",
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "Yep, I will address this in a follow on PR, we need to go through and delete the orphans.\n",
        "createdAt" : "2015-04-24T22:12:44Z",
        "updatedAt" : "2015-04-24T22:19:24Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "217e6ff0d0a9fc644278c773ce8aafd76d4b0579",
    "line" : 273,
    "diffHunk" : "@@ -1,1 +295,299 @@\t\treturn err\n\t}\n\t// Note there is still a race here, if a pod was created during the update phase.\n\t// It's unlikely, but it could happen, and if it does, we'll create extra pods.\n\t// TODO: Clean up orphaned pods here."
  },
  {
    "id" : "a55dcc64-4ac1-4c39-b9a6-55207d96f7be",
    "prId" : 4518,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4b4611c3-92e4-4223-ac00-f52d3f6bafe7",
        "parentId" : null,
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Hrm - this is not a decision this code should make.  Was there a config file with an empty namespace in the call path?\n",
        "createdAt" : "2015-02-18T04:36:53Z",
        "updatedAt" : "2015-02-18T04:36:53Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "6f015941-7403-4183-aa13-90e48df2a53d",
        "parentId" : "4b4611c3-92e4-4223-ac00-f52d3f6bafe7",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "\"Should have to make\"\n",
        "createdAt" : "2015-02-18T04:37:12Z",
        "updatedAt" : "2015-02-18T04:37:12Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "62c4187e783c96d671cf3ce5a6092720972436b3",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +92,96 @@\n\t\t\tif len(namespace) == 0 {\n\t\t\t\tnamespace = api.NamespaceDefault\n\t\t\t}\n\t\t\tupdater := kubectl.NewRollingUpdater(namespace, client)"
  },
  {
    "id" : "3dd82384-c486-4729-83e6-1df0f37e839d",
    "prId" : 3061,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1d7e4792-8ac4-49ae-82ce-b4747c79b191",
        "parentId" : null,
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "Add a TODO to deal with resizes during rolling update.\n",
        "createdAt" : "2015-01-06T21:22:52Z",
        "updatedAt" : "2015-01-07T01:29:24Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "98b32b72-54a2-446a-be14-f8acc57e2ea7",
        "parentId" : "1d7e4792-8ac4-49ae-82ce-b4747c79b191",
        "authorId" : "8076e56f-768c-4f89-90e6-045ef34e1525",
        "body" : "Done\n",
        "createdAt" : "2015-01-06T23:46:24Z",
        "updatedAt" : "2015-01-07T01:29:24Z",
        "lastEditedBy" : "8076e56f-768c-4f89-90e6-045ef34e1525",
        "tags" : [
        ]
      }
    ],
    "commit" : "0ab39df66b1ae95489bdf935fbd7b7e9f8d0d7a8",
    "line" : null,
    "diffHunk" : "@@ -1,1 +93,97 @@\t\t\t}\n\t\t\t// TODO: handle resizes during rolling update\n\t\t\tif newRc.Spec.Replicas == 0 {\n\t\t\t\tnewRc.Spec.Replicas = oldRc.Spec.Replicas\n\t\t\t}"
  }
]