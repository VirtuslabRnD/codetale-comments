[
  {
    "id" : "f924106e-dbef-4ac5-bdfb-8f674a2c2b23",
    "prId" : 30237,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fc8799ad-db87-4631-9ae4-dac6a6a784e8",
        "parentId" : null,
        "authorId" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "body" : "Add an example\n",
        "createdAt" : "2016-08-13T00:32:49Z",
        "updatedAt" : "2016-11-08T14:34:01Z",
        "lastEditedBy" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "tags" : [
        ]
      }
    ],
    "commit" : "98e6d2c1e552120f20d7d726c5779ecfcb7145e5",
    "line" : null,
    "diffHunk" : "@@ -1,1 +34,38 @@\t\tUse:   \"certificate SUBCOMMAND\",\n\t\tShort: \"Modify certificate resources.\",\n\t\tRun: func(cmd *cobra.Command, args []string) {\n\t\t\tcmd.Help()\n\t\t},"
  },
  {
    "id" : "065a9c1d-9c8d-4437-b0e4-305a45f964e8",
    "prId" : 30237,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/30237#pullrequestreview-1453293",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7c77f632-98c0-4a0c-bdee-ac6bbd4775a7",
        "parentId" : null,
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "It's strange that a client command is updating the status of the csr directly. Shouldn't this be handled by the controller?\n",
        "createdAt" : "2016-09-18T20:54:09Z",
        "updatedAt" : "2016-11-08T14:34:01Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      },
      {
        "id" : "82d83b93-2026-4931-8d16-8b47952ae71b",
        "parentId" : "7c77f632-98c0-4a0c-bdee-ac6bbd4775a7",
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "Yes it is. This causes the controller to issue a certificate for the CSR. The design talked about a an approval process (basically a separate controller) that lives outside k8s and approves CSRs that are then signed by the signing controller which lives in the controller manager. This command enables the \"human approval controller\".\n",
        "createdAt" : "2016-09-20T14:22:28Z",
        "updatedAt" : "2016-11-08T14:34:01Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      },
      {
        "id" : "41ce27eb-4f8e-47e2-839d-ada37c1f2db0",
        "parentId" : "7c77f632-98c0-4a0c-bdee-ac6bbd4775a7",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "I think of this as an admin command (like node operations).  We have other actions already that are quasi controller behavior (drain) that humans also run.\n\nIn the long description I would recommend explaining how to use this command in a real (at least quasi real) workflow.\n",
        "createdAt" : "2016-09-25T14:05:49Z",
        "updatedAt" : "2016-11-08T14:34:01Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "98e6d2c1e552120f20d7d726c5779ecfcb7145e5",
    "line" : 106,
    "diffHunk" : "@@ -1,1 +104,108 @@\t\t\treturn csr, \"approved\"\n\t\t}\n\t\tcsr.Status.Conditions = append(csr.Status.Conditions, certificates.CertificateSigningRequestCondition{\n\t\t\tType:           certificates.CertificateApproved,\n\t\t\tReason:         \"KubectlApprove\","
  }
]