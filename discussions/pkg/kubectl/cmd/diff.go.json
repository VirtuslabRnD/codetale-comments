[
  {
    "id" : "654712bf-573c-40b3-b0bb-7cf24b554726",
    "prId" : 69162,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/69162#pullrequestreview-159597635",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "55dd64aa-ebd2-4dbc-a3ee-62fdc680daaa",
        "parentId" : null,
        "authorId" : "d995a87c-4064-4495-9753-d0cf8a45072f",
        "body" : "Should there be documentation for this exported function?",
        "createdAt" : "2018-09-27T19:15:14Z",
        "updatedAt" : "2018-09-27T20:06:25Z",
        "lastEditedBy" : "d995a87c-4064-4495-9753-d0cf8a45072f",
        "tags" : [
        ]
      }
    ],
    "commit" : "2d3f7795c86c96d52451c3090ab203d1e0ec2284",
    "line" : 117,
    "diffHunk" : "@@ -1,1 +241,245 @@// Returns the \"merged\" object, as it would look like if applied or\n// created.\nfunc (obj InfoObject) Merged() (runtime.Object, error) {\n\t// Build the patcher, and then apply the patch with dry-run, unless the object doesn't exist, in which case we need to create it.\n\tif obj.Live() == nil {"
  },
  {
    "id" : "0882d636-6564-4826-aad0-1fb0c159fa3d",
    "prId" : 69162,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/69162#pullrequestreview-159597635",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "edd32c89-1ea5-4a21-b2cb-3ba50538a089",
        "parentId" : null,
        "authorId" : "d995a87c-4064-4495-9753-d0cf8a45072f",
        "body" : "Should we add a quick comment that this is from \"apply\"?",
        "createdAt" : "2018-09-27T19:50:24Z",
        "updatedAt" : "2018-09-27T20:06:25Z",
        "lastEditedBy" : "d995a87c-4064-4495-9753-d0cf8a45072f",
        "tags" : [
        ]
      }
    ],
    "commit" : "2d3f7795c86c96d52451c3090ab203d1e0ec2284",
    "line" : 138,
    "diffHunk" : "@@ -1,1 +260,264 @@\t// This is using the patcher from apply, to keep the same behavior.\n\t// We plan on replacing this with server-side apply when it becomes available.\n\tpatcher := &patcher{\n\t\tmapping:       obj.Info.Mapping,\n\t\thelper:        resource.NewHelper(obj.Info.Client, obj.Info.Mapping),"
  },
  {
    "id" : "202e9c9a-ac81-4174-b7f2-6ae2c3439962",
    "prId" : 68525,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/68525#pullrequestreview-159184868",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b5393b7a-bcc9-4897-a723-53215ca29b4e",
        "parentId" : null,
        "authorId" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "body" : "In the next iteration please update this command to follow the patterns used in other commands. Such as having a dedicated `*Options` struct and 3 methods `Complete`, `Validate` and `Run` working on that struct.  ",
        "createdAt" : "2018-09-26T20:30:29Z",
        "updatedAt" : "2018-09-26T20:31:47Z",
        "lastEditedBy" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "tags" : [
        ]
      }
    ],
    "commit" : "0db62497401fe98106135b783288d30dc6780cab",
    "line" : 86,
    "diffHunk" : "@@ -1,1 +85,89 @@\t\tExample: diffExample,\n\t\tRun: func(cmd *cobra.Command, args []string) {\n\t\t\tcmdutil.CheckErr(checkDiffArgs(cmd, args))\n\t\t\tcmdutil.CheckErr(RunDiff(f, &diff, &options))\n\t\t},"
  },
  {
    "id" : "81530afb-bccb-46f9-a2cc-2fe9a86c50c2",
    "prId" : 61227,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/61227#pullrequestreview-120734048",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ab315c9a-1048-4c02-a2ad-7c9849b46f3b",
        "parentId" : null,
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "@deads2k is any of this impacted by your mapper changes?",
        "createdAt" : "2018-05-16T16:38:34Z",
        "updatedAt" : "2018-05-16T17:28:21Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "537a2c3f-1df0-4f0d-b8a2-40344f6b6674",
        "parentId" : "ab315c9a-1048-4c02-a2ad-7c9849b46f3b",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "> @deads2k is any of this impacted by your mapper changes?\r\n\r\nThis should be ok.  The way this is used you always end up with a GVK.",
        "createdAt" : "2018-05-16T17:06:12Z",
        "updatedAt" : "2018-05-16T17:28:21Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "f2b48a90dfeb73c673a700c945bdd75cefed5880",
    "line" : 79,
    "diffHunk" : "@@ -1,1 +414,418 @@\nfunc (d *Downloader) Download(info *resource.Info) (*unstructured.Unstructured, error) {\n\tgvk := info.Object.GetObjectKind().GroupVersionKind()\n\tmapping, err := d.mapper.RESTMapping(gvk.GroupKind(), gvk.Version)\n\tif err != nil {"
  },
  {
    "id" : "c289bfca-b5a9-4987-b8c1-c563af5e84ec",
    "prId" : 53920,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/53920#pullrequestreview-92908555",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0842b878-bd24-456c-a687-0561711573f7",
        "parentId" : null,
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "@apelisse this assumption that VersionedObject is \"local\" seems questionable.  Can you explain why you're treating it this way?  Are you setting VersionedObject to represent something different than what most builders are assuming?",
        "createdAt" : "2017-11-09T15:18:37Z",
        "updatedAt" : "2017-11-09T15:18:38Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "f77f7b4a-981f-4d78-b963-c93d196435b0",
        "parentId" : "0842b878-bd24-456c-a687-0561711573f7",
        "authorId" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "body" : "Someone told me that might do what I want, but I have no idea what I'm doing. Feedback is welcome :-) \r\n",
        "createdAt" : "2017-11-09T17:18:51Z",
        "updatedAt" : "2017-11-09T17:18:51Z",
        "lastEditedBy" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "tags" : [
        ]
      },
      {
        "id" : "b80489ca-6512-48d4-ab96-aac1396f5a88",
        "parentId" : "0842b878-bd24-456c-a687-0561711573f7",
        "authorId" : "3f681241-1a29-4fbf-bddc-1df89a871240",
        "body" : "@smarterclayton , @apatil , I dont know if was broken from the beginning or this proposed change broke it, but in 1.9.2 kubectl diff command shows nothing. Quick check finds that LOCAL and LIVE files written by differ are byte-to-byte the same, which is not surprising that currently `obj.Local()` and `obj.Live()` serialize very same `obj.Info.Object`.\r\n\r\nBefore https://github.com/kubernetes/kubernetes/pull/55660 (== in this original PR) `Local()` was serializing `obj.Info.VersionedObject` , which doesn't look very local to me either, but I have no idea about these internals.\r\n\r\nHere is how I call diff during my tests:\r\n```\r\nkubectl -n kube-system apply -f  manifests/kube-dns-deployment.yaml\r\nvim manifests/kube-dns-deployment.yaml (add label)\r\nkubectl -n kube-system alpha diff -f manifests/kube-dns-deployment.yaml\r\n```",
        "createdAt" : "2018-01-31T12:28:00Z",
        "updatedAt" : "2018-01-31T12:28:00Z",
        "lastEditedBy" : "3f681241-1a29-4fbf-bddc-1df89a871240",
        "tags" : [
        ]
      },
      {
        "id" : "4e423ac9-dd2d-4751-8553-c675f934a280",
        "parentId" : "0842b878-bd24-456c-a687-0561711573f7",
        "authorId" : "3f681241-1a29-4fbf-bddc-1df89a871240",
        "body" : "Can original (local version) of `info.Object` be retrieved after `info.Get()` is called? Doesn't seem so. \r\n\r\n Looking at current apply code, it uses `info.Object` before calling `info.Get()` to calculate desired state (== local version), then calls `info.Get()` to retrieve current state of `info.Object` from the server. This reuse of variable for two completely different purposes is super confusing by the way :(\r\n\r\nSo to make diff work again, we should deep clone `info.Object` to save it's local state, then call `info.Get()` , then pass 2 versions of objects to differ, right?",
        "createdAt" : "2018-01-31T12:47:59Z",
        "updatedAt" : "2018-01-31T12:47:59Z",
        "lastEditedBy" : "3f681241-1a29-4fbf-bddc-1df89a871240",
        "tags" : [
        ]
      }
    ],
    "commit" : "14ec200e4e7172db0bd35f155c4befaf6d9261b0",
    "line" : 282,
    "diffHunk" : "@@ -1,1 +280,284 @@}\n\nfunc (obj InfoObject) Local() (map[string]interface{}, error) {\n\tdata, err := runtime.Encode(obj.Encoder, obj.Info.VersionedObject)\n\tif err != nil {"
  }
]