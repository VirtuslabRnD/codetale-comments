[
  {
    "id" : "c2d1c2f2-b8bc-4698-aee4-09c1c23c0793",
    "prId" : 31276,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c111b519-ebda-4576-ba31-c8e8d62b678b",
        "parentId" : null,
        "authorId" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "body" : "Not sure if this is here the last time I reviewed, but we should keep the old behavior \n",
        "createdAt" : "2016-09-13T22:57:01Z",
        "updatedAt" : "2016-09-15T14:11:39Z",
        "lastEditedBy" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "tags" : [
        ]
      },
      {
        "id" : "fbb37453-4622-4a05-beeb-c0ea694867a7",
        "parentId" : "c111b519-ebda-4576-ba31-c8e8d62b678b",
        "authorId" : "0385dfd1-e8a7-41a8-8213-eabe697d14cd",
        "body" : "Hm, old behavior prints the resource that was exposed no matter what the specified `--output` was; this one keeps that behvavior when an `--output` other than the standard one is specified, but outputs  `<resource_kind> \"<resource>\" exposed (DRY RUN)` otherwise, in order to provide a clearer output. This will match the rest of the `dry-run` outputs\n",
        "createdAt" : "2016-09-14T15:42:38Z",
        "updatedAt" : "2016-09-15T14:11:39Z",
        "lastEditedBy" : "0385dfd1-e8a7-41a8-8213-eabe697d14cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "52fc8efa5589e4d1aacf7900e6a88b7d5b2312e2",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +265,269 @@\t\t\t\treturn f.PrintObject(cmd, mapper, object, out)\n\t\t\t}\n\t\t\tcmdutil.PrintSuccess(mapper, false, out, info.Mapping.Resource, info.Name, true, \"exposed\")\n\t\t\treturn nil\n\t\t}"
  },
  {
    "id" : "ec0fd9bb-0798-412f-a5b9-a377157d6343",
    "prId" : 19840,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7c6ea3be-4639-4b28-9010-0604ef5a8c1c",
        "parentId" : null,
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "What's the difference between `MapBasedSelectorForObject` and `PodSelectorForObject`? Do we need both?\n",
        "createdAt" : "2016-02-10T09:38:06Z",
        "updatedAt" : "2016-02-10T09:38:06Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      },
      {
        "id" : "72e66a97-42d0-4dd3-bba2-9634653ce80e",
        "parentId" : "7c6ea3be-4639-4b28-9010-0604ef5a8c1c",
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "Just saw the discussion in https://github.com/kubernetes/kubernetes/pull/19840/files#r52379928\n\n@madhusudancs I think you can safely collapse both methods into one as expose is the only place they are used.\n",
        "createdAt" : "2016-02-10T09:43:02Z",
        "updatedAt" : "2016-02-10T09:43:02Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      },
      {
        "id" : "25bff685-d092-46ef-bf3a-db7c66e5afc1",
        "parentId" : "7c6ea3be-4639-4b28-9010-0604ef5a8c1c",
        "authorId" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "body" : "@kargakis Since this is in pkg/kubectl/... and an exported function, we weren't sure who else outside Kubernetes was using this, particularly OpenStack. So we left the existing function as is. If you are certain that OpenStack doesn't use the factory, we can probably eliminate one of the two functions.\n\ncc @bgrant0607 \n",
        "createdAt" : "2016-02-10T22:49:04Z",
        "updatedAt" : "2016-02-10T22:49:04Z",
        "lastEditedBy" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "tags" : [
        ]
      },
      {
        "id" : "79441a89-39e4-47db-af2f-7e35de1a8258",
        "parentId" : "7c6ea3be-4639-4b28-9010-0604ef5a8c1c",
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "We are using the old method but the signatures are the same and we can repurpose factory methods however we like. That being said, let's keep it around and once we rebase and make use of the new method then I'll submit a fix to remove the old one.\n",
        "createdAt" : "2016-02-10T22:56:29Z",
        "updatedAt" : "2016-02-10T22:56:29Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      },
      {
        "id" : "ac9fcaf0-fadc-490c-8684-932b682459af",
        "parentId" : "7c6ea3be-4639-4b28-9010-0604ef5a8c1c",
        "authorId" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "body" : "Sure, thanks. We did not want to surprise.\n",
        "createdAt" : "2016-02-10T23:38:37Z",
        "updatedAt" : "2016-02-10T23:38:37Z",
        "lastEditedBy" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "tags" : [
        ]
      }
    ],
    "commit" : "e7a9f309361787679f2210ea4714b79420fc3cba",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +150,154 @@\t// didn't explicitly specify one via --selector\n\tif s, found := params[\"selector\"]; found && kubectl.IsZero(s) {\n\t\ts, err := f.MapBasedSelectorForObject(inputObject)\n\t\tif err != nil {\n\t\t\treturn cmdutil.UsageError(cmd, fmt.Sprintf(\"couldn't retrieve selectors via --selector flag or introspection: %s\", err))"
  },
  {
    "id" : "cd80bad6-0caf-4860-a33b-121fdf6aaedc",
    "prId" : 15461,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "906fa530-bb13-4b2d-a4dc-96d8fcf1f86e",
        "parentId" : null,
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "This makes it sound as if --port must be specified in the case that the resource has only one port. Is that true?\n",
        "createdAt" : "2015-10-14T14:59:48Z",
        "updatedAt" : "2015-10-19T09:25:23Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "0c92fdf8-fb68-476a-83cc-70588807ba27",
        "parentId" : "906fa530-bb13-4b2d-a4dc-96d8fcf1f86e",
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "No, we can have either one port, or multiple ports, or --port. --port\nstomps inheriting, but if it's unspecified and the exposed object has\nmultiple ports, the new service will inherit all of them.\n\nOn Wed, Oct 14, 2015 at 5:00 PM, Brian Grant notifications@github.com\nwrote:\n\n> In pkg/kubectl/cmd/expose.go\n> https://github.com/kubernetes/kubernetes/pull/15461#discussion_r42004816\n> :\n> \n> > -Looks up a replication controller, service or pod by name and uses the selector for that resource as the\n> > -selector for a new Service on the specified port. If no labels are specified, the new service will\n> > -re-use the labels from the resource it exposes.`\n> > +Looks up a replication controller, service, or pod by name and uses the selector for that resource as the\n> > +selector for a new service on the specified port. Note that if no port is specified via --port and the\n> > +exposed resource has multiple ports, all will be re-used by the new service. Also if no labels are specified,\n> \n> This makes it sound as if --port must be specified in the case that the\n> resource has only one port. Is that true?\n> \n> â€”\n> Reply to this email directly or view it on GitHub\n> https://github.com/kubernetes/kubernetes/pull/15461/files#r42004816.\n",
        "createdAt" : "2015-10-14T15:04:54Z",
        "updatedAt" : "2015-10-19T09:25:23Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      }
    ],
    "commit" : "7d0e691520488d81c800b8c83a3dd9c9b749a7dc",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +41,45 @@Looks up a replication controller, service, or pod by name and uses the selector for that resource as the\nselector for a new service on the specified port. Note that if no port is specified via --port and the \nexposed resource has multiple ports, all will be re-used by the new service. Also if no labels are specified,\nthe new service will re-use the labels from the resource it exposes.`\n"
  },
  {
    "id" : "4b740fcb-d154-446b-9b3c-a1e80141126b",
    "prId" : 15061,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "23e16947-83b8-4e59-90e2-963a8b3d272d",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "Since you're in here, the `Options` object exists.  Why not go ahead and move this one in there?\n",
        "createdAt" : "2015-10-07T12:13:07Z",
        "updatedAt" : "2015-10-10T14:16:49Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "596e2a5e-b444-4ee8-95ca-9e56de7fef41",
        "parentId" : "23e16947-83b8-4e59-90e2-963a8b3d272d",
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "The `Options` object should accommodate most if not all of the flags. This is better left for another PR.\n",
        "createdAt" : "2015-10-07T13:40:20Z",
        "updatedAt" : "2015-10-10T14:16:49Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      }
    ],
    "commit" : "4b23bf602dcbf39e160f06828afd5f5ca80a6400",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +74,78 @@\tcmd.Flags().String(\"generator\", \"service/v2\", \"The name of the API generator to use. There are 2 generators: 'service/v1' and 'service/v2'. The only difference between them is that service port in v1 is named 'default', while it is left unnamed in v2. Default is 'service/v2'.\")\n\tcmd.Flags().String(\"protocol\", \"TCP\", \"The network protocol for the service to be created. Default is 'tcp'.\")\n\tcmd.Flags().String(\"port\", \"\", \"The port that the service should serve on. Copied from the resource being exposed, if unspecified\")\n\tcmd.Flags().String(\"type\", \"\", \"Type for this service: ClusterIP, NodePort, or LoadBalancer. Default is 'ClusterIP'.\")\n\t// TODO: remove create-external-load-balancer in code on or after Aug 25, 2016."
  },
  {
    "id" : "529697fc-7e20-41ea-ba35-13afccd3d7af",
    "prId" : 14728,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "97961468-89a7-4e00-8982-a23908b48ddf",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "I would prefer adding a hash instead of simply truncating.\n",
        "createdAt" : "2015-09-29T12:23:02Z",
        "updatedAt" : "2015-10-05T08:39:50Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "0df39e8c-d199-427c-b411-5d0eaf0b24be",
        "parentId" : "97961468-89a7-4e00-8982-a23908b48ddf",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Hrm - we don't do that in other places, and the hash really isn't useful\nfor users.  If you run expose on the same service twice, having the second\none fail because \"already exists\" is what you want, rather than it\nsucceeding.  That's why we have --name.\n\nOn Tue, Sep 29, 2015 at 2:23 PM, David Eads notifications@github.com\nwrote:\n\n> In pkg/kubectl/cmd/expose.go\n> https://github.com/kubernetes/kubernetes/pull/14728#discussion_r40663984\n> :\n> \n> > @@ -133,7 +134,11 @@ func RunExpose(f *cmdutil.Factory, out io.Writer, cmd *cobra.Command, args []str\n> >     }\n> >     names := generator.ParamNames()\n> >     params := kubectl.MakeParams(cmd, names)\n> > -   params[\"default-name\"] = info.Name\n> > -   name := info.Name\n> > -   if len(name) > validation.DNS952LabelMaxLength {\n> > -       name = name[:validation.DNS952LabelMaxLength]\n> \n> I would prefer adding a hash instead of simply truncating.\n> \n> â€”\n> Reply to this email directly or view it on GitHub\n> https://github.com/kubernetes/kubernetes/pull/14728/files#r40663984.\n",
        "createdAt" : "2015-09-29T13:47:19Z",
        "updatedAt" : "2015-10-05T08:39:50Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "57dbc5bf-e63d-4138-b3a2-26a24387db33",
        "parentId" : "97961468-89a7-4e00-8982-a23908b48ddf",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "agree.  Auto-unique is not what they asked for.\n",
        "createdAt" : "2015-09-29T15:58:48Z",
        "updatedAt" : "2015-10-05T08:39:50Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "ff0b5108-c804-4275-a929-36963cc00e85",
        "parentId" : "97961468-89a7-4e00-8982-a23908b48ddf",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "We should only truncate a default name, not a user specified name (if you explicitly set one that is too long we should fail).  Can you add that logic and a distinct test case for it?\n",
        "createdAt" : "2015-10-02T07:31:49Z",
        "updatedAt" : "2015-10-05T08:39:50Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "f0044706-e592-4b55-9802-8a35a6782855",
        "parentId" : "97961468-89a7-4e00-8982-a23908b48ddf",
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "I think the logic is already there, since we pass --name as a separate\nparameter so validation will take care of it once we try to create. I'll\nadd a separate test case.\n\nOn Fri, Oct 2, 2015 at 9:32 AM, Clayton Coleman notifications@github.com\nwrote:\n\n> In pkg/kubectl/cmd/expose.go\n> https://github.com/kubernetes/kubernetes/pull/14728#discussion_r40997045\n> :\n> \n> > @@ -133,7 +134,11 @@ func RunExpose(f *cmdutil.Factory, out io.Writer, cmd *cobra.Command, args []str\n> >     }\n> >     names := generator.ParamNames()\n> >     params := kubectl.MakeParams(cmd, names)\n> > -   params[\"default-name\"] = info.Name\n> > -   name := info.Name\n> > -   if len(name) > validation.DNS952LabelMaxLength {\n> > -       name = name[:validation.DNS952LabelMaxLength]\n> \n> We should only truncate a default name, not a user specified name (if you\n> explicitly set one that is too long we should fail). Can you add that logic\n> and a distinct test case for it?\n> \n> â€”\n> Reply to this email directly or view it on GitHub\n> https://github.com/kubernetes/kubernetes/pull/14728/files#r40997045.\n",
        "createdAt" : "2015-10-02T07:37:30Z",
        "updatedAt" : "2015-10-05T08:39:50Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      },
      {
        "id" : "afdc25db-5d04-4d8b-8a98-9c20358be234",
        "parentId" : "97961468-89a7-4e00-8982-a23908b48ddf",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "Alternatively, maybe we can expand this name spec?  We've talked about it\nfor a long time but not done it - it's delicate.\n\nOn Fri, Oct 2, 2015 at 12:32 AM, Clayton Coleman notifications@github.com\nwrote:\n\n> In pkg/kubectl/cmd/expose.go\n> https://github.com/kubernetes/kubernetes/pull/14728#discussion_r40997045\n> :\n> \n> > @@ -133,7 +134,11 @@ func RunExpose(f *cmdutil.Factory, out io.Writer, cmd *cobra.Command, args []str\n> >     }\n> >     names := generator.ParamNames()\n> >     params := kubectl.MakeParams(cmd, names)\n> > -   params[\"default-name\"] = info.Name\n> > -   name := info.Name\n> > -   if len(name) > validation.DNS952LabelMaxLength {\n> > -       name = name[:validation.DNS952LabelMaxLength]\n> \n> We should only truncate a default name, not a user specified name (if you\n> explicitly set one that is too long we should fail). Can you add that logic\n> and a distinct test case for it?\n> \n> â€”\n> Reply to this email directly or view it on GitHub\n> https://github.com/kubernetes/kubernetes/pull/14728/files#r40997045.\n",
        "createdAt" : "2015-10-02T19:54:05Z",
        "updatedAt" : "2015-10-05T08:39:50Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "41f58336-9651-47ca-b895-9fe8f4e5925a",
        "parentId" : "97961468-89a7-4e00-8982-a23908b48ddf",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Maybe after 1.1? :)\n\nOn Oct 2, 2015, at 3:54 PM, Tim Hockin notifications@github.com wrote:\n\nIn pkg/kubectl/cmd/expose.go\nhttps://github.com/kubernetes/kubernetes/pull/14728#discussion_r41061001:\n\n> @@ -133,7 +134,11 @@ func RunExpose(f *cmdutil.Factory, out io.Writer, cmd *cobra.Command, args []str\n>   }\n>   names := generator.ParamNames()\n>   params := kubectl.MakeParams(cmd, names)\n> - params[\"default-name\"] = info.Name\n> - name := info.Name\n> - if len(name) > validation.DNS952LabelMaxLength {\n> -     name = name[:validation.DNS952LabelMaxLength]\n\nAlternatively, maybe we can expand this name spec? We've talked about it\nfor a long time but not done it - it's delicate.\nâ€¦ <#>\nOn Fri, Oct 2, 2015 at 12:32 AM, Clayton Coleman notifications@github.com\nwrote: In pkg/kubectl/cmd/expose.go <\nhttps://github.com/kubernetes/kubernetes/pull/14728#discussion_r40997045> :\n\n> @@ -133,7 +134,11 @@ func RunExpose(f *cmdutil.Factory, out io.Writer,\n> cmd *cobra.Command, args []str > } > names := generator.ParamNames() >\n> params := kubectl.MakeParams(cmd, names) > - params[\"default-name\"] =\n> info.Name > + name := info.Name > + if len(name) >\n> validation.DNS952LabelMaxLength { > + name =\n> name[:validation.DNS952LabelMaxLength] We should only truncate a default\n> name, not a user specified name (if you explicitly set one that is too long\n> we should fail). Can you add that logic and a distinct test case for it? â€”\n> Reply to this email directly or view it on GitHub <\n> https://github.com/kubernetes/kubernetes/pull/14728/files#r40997045>.\n\nâ€”\nReply to this email directly or view it on GitHub\nhttps://github.com/kubernetes/kubernetes/pull/14728/files#r41061001.\n",
        "createdAt" : "2015-10-02T20:10:30Z",
        "updatedAt" : "2015-10-05T08:39:50Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "989806d9ec50a038de7efeac0bd51cb3c3169ba5",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +137,141 @@\tname := info.Name\n\tif len(name) > validation.DNS952LabelMaxLength {\n\t\tname = name[:validation.DNS952LabelMaxLength]\n\t}\n\tparams[\"default-name\"] = name"
  },
  {
    "id" : "a3342ec3-2d06-4712-ac98-2e9a1a0507ed",
    "prId" : 13187,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "786e1710-1408-4c28-84a2-6adbf9d7d3b1",
        "parentId" : null,
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Invert this condition so that the return statement is in the if and then drop the else\n",
        "createdAt" : "2015-09-01T00:01:58Z",
        "updatedAt" : "2015-09-07T07:15:35Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "8efc62bccec3c999499739e5a2b18db9a78043af",
    "line" : null,
    "diffHunk" : "@@ -1,1 +212,216 @@\toutputFormat := cmdutil.GetFlagString(cmd, \"output\")\n\tif outputFormat != \"\" {\n\t\treturn f.PrintObject(cmd, object, out)\n\t}\n\tcmdutil.PrintSuccess(mapper, false, out, info.Mapping.Resource, info.Name, \"exposed\")"
  },
  {
    "id" : "d1fd62e4-1749-4241-b5c9-887571472231",
    "prId" : 13005,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "381dc118-ec35-49c2-a07e-961c1107c625",
        "parentId" : null,
        "authorId" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "body" : "How about: kubectl expose --type=loadbalancer --ip=123.22? instead of --load-balancer-ip again\n",
        "createdAt" : "2015-08-21T02:05:24Z",
        "updatedAt" : "2015-09-11T04:05:24Z",
        "lastEditedBy" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "tags" : [
        ]
      },
      {
        "id" : "c220a3ec-cf95-461f-aed8-94b16bd4848a",
        "parentId" : "381dc118-ec35-49c2-a07e-961c1107c625",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "--ip is pretty ambiguous.  we could do similar to new template flags and say something like \n\n`--type=LoadBalancer=ip:1.2.3.4`\n\nNow that I wrote it out, I hate it.  I think --ip is too ambiguous.\n",
        "createdAt" : "2015-08-22T21:00:45Z",
        "updatedAt" : "2015-09-11T04:05:24Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "44ce4aa423fca40dc392c625b83d1ccc635c4248",
    "line" : null,
    "diffHunk" : "@@ -1,1 +76,80 @@\tcmd.Flags().Bool(\"create-external-load-balancer\", false, \"If true, create an external load balancer for this service (trumped by --type). Implementation is cloud provider dependent. Default is 'false'.\")\n\tcmd.Flags().MarkDeprecated(\"create-external-load-balancer\", \"use --type=\\\"LoadBalancer\\\" instead\")\n\tcmd.Flags().String(\"load-balancer-ip\", \"\", \"IP to assign to to the Load Balancer. If empty, an ephemeral IP will be created and used(cloud-provider specific).\")\n\tcmd.Flags().String(\"selector\", \"\", \"A label selector to use for this service. If empty (the default) infer the selector from the replication controller.\")\n\tcmd.Flags().StringP(\"labels\", \"l\", \"\", \"Labels to apply to the service created by this call.\")"
  },
  {
    "id" : "5b27a8e0-eabb-46a3-bf63-7136f5ad314f",
    "prId" : 6312,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fb7b124c-c70e-41b5-be6c-600adaba9989",
        "parentId" : null,
        "authorId" : "8076e56f-768c-4f89-90e6-045ef34e1525",
        "body" : "This means expose will introspect and select the port of the first container in the case of a multi-container pod. If that is the intended behavior, it should be documented in the help string, though tbh, I think you should fail here if there is more than one port, as we don't know what the user actually intends.\n",
        "createdAt" : "2015-04-02T19:04:42Z",
        "updatedAt" : "2015-04-02T20:08:27Z",
        "lastEditedBy" : "8076e56f-768c-4f89-90e6-045ef34e1525",
        "tags" : [
        ]
      },
      {
        "id" : "81ec70a2-12f5-453d-bb2a-975d39fbf32d",
        "parentId" : "fb7b124c-c70e-41b5-be6c-600adaba9989",
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "done.\n",
        "createdAt" : "2015-04-02T20:10:58Z",
        "updatedAt" : "2015-04-02T20:10:58Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "674efe6de8c9c7019b964e20b6f44517bf79b03b",
    "line" : null,
    "diffHunk" : "@@ -1,1 +129,133 @@\t\t\t\treturn util.UsageError(cmd, \"more than one port to choose from, please explicitly specify a port using the --port flag.\")\n\t\t\t}\n\t\t\tparams[\"port\"] = ports[0]\n\t\t}\n\t}"
  },
  {
    "id" : "1a9c78b0-058f-47af-a5ee-f13e814bb065",
    "prId" : 5977,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "77313d92-0e3d-469f-99dc-54a4ceb4156b",
        "parentId" : null,
        "authorId" : "8076e56f-768c-4f89-90e6-045ef34e1525",
        "body" : "Nit: seems like if/else would be cleaner\n",
        "createdAt" : "2015-03-26T18:44:15Z",
        "updatedAt" : "2015-03-26T18:44:15Z",
        "lastEditedBy" : "8076e56f-768c-4f89-90e6-045ef34e1525",
        "tags" : [
        ]
      }
    ],
    "commit" : "64f91f7daccb76d7e4ecf5956e56e8ffcae67e26",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +74,78 @@\tcase l == 2:\n\t\tresource, name = args[0], args[1]\n\tdefault:\n\t\treturn util.UsageError(cmd, \"the type and name of a resource to expose are required arguments\")\n\t}"
  }
]