[
  {
    "id" : "2b74dbc8-6958-4c5a-ba6c-0665e153a994",
    "prId" : 61288,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/61288#pullrequestreview-110789843",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e8f9a5f2-9d82-415a-9a7c-aafb4c0c7adc",
        "parentId" : null,
        "authorId" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "body" : "Make `cmdutil.DeploymentBasicAppsV1GeneratorName` the default generator. ",
        "createdAt" : "2018-04-10T11:13:21Z",
        "updatedAt" : "2018-04-10T19:14:40Z",
        "lastEditedBy" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "tags" : [
        ]
      }
    ],
    "commit" : "a8c63b61adb079191b8bb764db7a03fa3c6babb6",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +56,60 @@\tcmdutil.AddValidateFlags(cmd)\n\tcmdutil.AddPrinterFlags(cmd)\n\tcmdutil.AddGeneratorFlags(cmd, \"\")\n\tcmd.Flags().StringSlice(\"image\", []string{}, \"Image name to run.\")\n\tcmd.MarkFlagRequired(\"image\")"
  },
  {
    "id" : "9d5ed30e-c55f-4d96-94fe-756d2cbc17a3",
    "prId" : 61288,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/61288#pullrequestreview-110789843",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2e43e3bd-3087-4a14-8402-264c977d82e8",
        "parentId" : null,
        "authorId" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "body" : "The previous logic was sufficient, if you set the default generator to `cmdutil.DeploymentBasicAppsV1GeneratorName`. ",
        "createdAt" : "2018-04-10T11:14:39Z",
        "updatedAt" : "2018-04-10T19:14:40Z",
        "lastEditedBy" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "tags" : [
        ]
      },
      {
        "id" : "491fe074-0f28-4b35-bca4-bb6f59e0effd",
        "parentId" : "2e43e3bd-3087-4a14-8402-264c977d82e8",
        "authorId" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "body" : "Besides, like I said elsewhere we always need to check the fallback. ",
        "createdAt" : "2018-04-10T11:20:14Z",
        "updatedAt" : "2018-04-10T19:14:40Z",
        "lastEditedBy" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "tags" : [
        ]
      }
    ],
    "commit" : "a8c63b61adb079191b8bb764db7a03fa3c6babb6",
    "line" : 43,
    "diffHunk" : "@@ -1,1 +122,126 @@\tgeneratorName := cmdutil.GetFlagString(cmd, \"generator\")\n\n\tif len(generatorName) == 0 {\n\t\tgeneratorName = cmdutil.DeploymentBasicAppsV1GeneratorName\n\t\tgeneratorNameTemp, err := cmdutil.FallbackGeneratorNameIfNecessary(generatorName, clientset.Discovery(), cmdErr)"
  },
  {
    "id" : "dd57315f-480c-4cc9-b1d0-b3fffd782c03",
    "prId" : 47675,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/47675#pullrequestreview-46046046",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "720fa431-a60a-4cc2-b8cc-99730b462bae",
        "parentId" : null,
        "authorId" : "54f3e5e9-1cb7-407a-b12d-39bb41fa5e9e",
        "body" : "why return true/false here instead of error, also if there's only one invoke here, I don't think it's needed to abstract those logic for function `generatorFromName` here. ",
        "createdAt" : "2017-06-22T15:10:55Z",
        "updatedAt" : "2017-06-26T18:22:20Z",
        "lastEditedBy" : "54f3e5e9-1cb7-407a-b12d-39bb41fa5e9e",
        "tags" : [
        ]
      },
      {
        "id" : "c5d1e676-9bc4-4ada-b259-bb4cb0889736",
        "parentId" : "720fa431-a60a-4cc2-b8cc-99730b462bae",
        "authorId" : "b1ad4056-936e-4ce6-ab7b-55870c4e6024",
        "body" : "I use `true/false` here to match Go convention seen in maps and typecasts. There's only two possible states that can occur: either the generator was successfully parsed from the name or it was not. I like this pattern because the binary-ness of the result is clearly expressed.\r\n\r\nDo you think it is clear? I will change it back if not. Thanks!",
        "createdAt" : "2017-06-22T15:19:27Z",
        "updatedAt" : "2017-06-26T18:22:20Z",
        "lastEditedBy" : "b1ad4056-936e-4ce6-ab7b-55870c4e6024",
        "tags" : [
        ]
      },
      {
        "id" : "1e064ec6-5296-4901-8499-c605bbb5c0c0",
        "parentId" : "720fa431-a60a-4cc2-b8cc-99730b462bae",
        "authorId" : "b1ad4056-936e-4ce6-ab7b-55870c4e6024",
        "body" : "> also if there's only one invoke here, I don't think it's needed to abstract those logic for function generatorFromName here.\r\n\r\nImagine you were writing unit tests for the original function (on master). In order to test that the correct generator is chosen from a given name, you have to make a series of test cases that stub or mock these things:\r\n * `cmdutil.Factory`\r\n * `cobra.Command`\r\n * two `io.Writer`s *and*\r\n * the final process of `RunCreateSubcommand`, which involves\r\n   * a fake REST client\r\n   * a fake `APIFactory`\r\n   * a `restclient.Config{}`\r\n\r\nThat's too much mocking and stubbing. It's painful. In fact, it's so painful that [nobody has written test code for it](https://github.com/kubernetes/kubernetes/blob/584b1139592787638eaba23670354287fe21fe31/pkg/kubectl/cmd/create_deployment_test.go).\r\n\r\nImagine you were writing unit tests for this function on my refactor branch. You can easily verify that the correct generator is chosen from a given name. Just make up three variables (primitives, no less), pass them to `generatorFromName`, and see if the generator is what you expect. There are no side effects or HTTP calls. There's no mocking. Your test becomes a simple correctness check that will never fail unless `generatorFromName` is doing the wrong thing.\r\n\r\nLet me know if there's something I've missed. Thanks!",
        "createdAt" : "2017-06-22T15:42:14Z",
        "updatedAt" : "2017-06-26T18:22:20Z",
        "lastEditedBy" : "b1ad4056-936e-4ce6-ab7b-55870c4e6024",
        "tags" : [
        ]
      },
      {
        "id" : "cd432a88-8caf-48a7-b223-ac8d5df6fe2d",
        "parentId" : "720fa431-a60a-4cc2-b8cc-99730b462bae",
        "authorId" : "54f3e5e9-1cb7-407a-b12d-39bb41fa5e9e",
        "body" : "ok, make sense, thanks for explain it. so would you like to add unit test to those new functions ?",
        "createdAt" : "2017-06-23T04:59:27Z",
        "updatedAt" : "2017-06-26T18:22:20Z",
        "lastEditedBy" : "54f3e5e9-1cb7-407a-b12d-39bb41fa5e9e",
        "tags" : [
        ]
      },
      {
        "id" : "a77c2453-7bbf-406f-9982-e74cb7f748c7",
        "parentId" : "720fa431-a60a-4cc2-b8cc-99730b462bae",
        "authorId" : "b1ad4056-936e-4ce6-ab7b-55870c4e6024",
        "body" : "Haha, good call. Wrote a test.",
        "createdAt" : "2017-06-23T17:31:54Z",
        "updatedAt" : "2017-06-26T18:22:20Z",
        "lastEditedBy" : "b1ad4056-936e-4ce6-ab7b-55870c4e6024",
        "tags" : [
        ]
      }
    ],
    "commit" : "14fc8782f51c89239eea83561124f26c3f8d5db7",
    "line" : 121,
    "diffHunk" : "@@ -1,1 +148,152 @@\n\timageNames := cmdutil.GetFlagStringSlice(cmd, \"image\")\n\tgenerator, ok := generatorFromName(generatorName, imageNames, deploymentName)\n\tif !ok {\n\t\treturn errUnsupportedGenerator(cmd, generatorName)"
  },
  {
    "id" : "bb8c4b30-981a-4bde-9a54-77f4b16db556",
    "prId" : 27109,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8603e6cf-914a-431a-a562-61b36a3c093a",
        "parentId" : null,
        "authorId" : "ad267631-96d1-4bad-b913-e8d6342e65a2",
        "body" : "This flag is always required, right? Do `cmd.MarkFlagRequired` for completions.\n",
        "createdAt" : "2016-08-04T18:33:23Z",
        "updatedAt" : "2016-08-08T03:41:45Z",
        "lastEditedBy" : "ad267631-96d1-4bad-b913-e8d6342e65a2",
        "tags" : [
        ]
      },
      {
        "id" : "fbb212df-aa86-41b8-94bc-e63eadecc380",
        "parentId" : "8603e6cf-914a-431a-a562-61b36a3c093a",
        "authorId" : "6f0e0b8d-8a92-4746-b4fe-8a3c75407adc",
        "body" : "I'll add the flag.\n",
        "createdAt" : "2016-08-08T03:26:02Z",
        "updatedAt" : "2016-08-08T03:41:45Z",
        "lastEditedBy" : "6f0e0b8d-8a92-4746-b4fe-8a3c75407adc",
        "tags" : [
        ]
      }
    ],
    "commit" : "bd0b7528b5b34174bf9864f9e9a70a90ce734352",
    "line" : 56,
    "diffHunk" : "@@ -1,1 +54,58 @@\tcmdutil.AddPrinterFlags(cmd)\n\tcmdutil.AddGeneratorFlags(cmd, cmdutil.DeploymentBasicV1Beta1GeneratorName)\n\tcmd.Flags().StringSlice(\"image\", []string{}, \"Image name to run.\")\n\tcmd.MarkFlagRequired(\"image\")\n\treturn cmd"
  },
  {
    "id" : "9607faa0-9138-4334-a094-b2d7f51f7e11",
    "prId" : 27109,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1e080c0c-1e57-42fa-ba4c-b93cbdf958ff",
        "parentId" : null,
        "authorId" : "ad267631-96d1-4bad-b913-e8d6342e65a2",
        "body" : "If `--image` is always required, you need to validate that. [Here's an example](https://github.com/kubernetes/kubernetes/blob/master/pkg/kubectl/cmd/create_secret.go#L238-L243).\n",
        "createdAt" : "2016-08-04T18:46:19Z",
        "updatedAt" : "2016-08-08T03:41:45Z",
        "lastEditedBy" : "ad267631-96d1-4bad-b913-e8d6342e65a2",
        "tags" : [
        ]
      },
      {
        "id" : "3d1add2a-fbb0-4810-9ffd-b70493158cd4",
        "parentId" : "1e080c0c-1e57-42fa-ba4c-b93cbdf958ff",
        "authorId" : "6f0e0b8d-8a92-4746-b4fe-8a3c75407adc",
        "body" : "OK, I did it a different way - not stressed which one is preferred.\n",
        "createdAt" : "2016-08-04T23:34:13Z",
        "updatedAt" : "2016-08-08T03:41:45Z",
        "lastEditedBy" : "6f0e0b8d-8a92-4746-b4fe-8a3c75407adc",
        "tags" : [
        ]
      },
      {
        "id" : "dd895737-4ffd-4d6d-820e-8bfbc3a2df8d",
        "parentId" : "1e080c0c-1e57-42fa-ba4c-b93cbdf958ff",
        "authorId" : "ad267631-96d1-4bad-b913-e8d6342e65a2",
        "body" : "With `ParamNames` works for me, tks.\n",
        "createdAt" : "2016-08-05T17:30:06Z",
        "updatedAt" : "2016-08-08T03:41:45Z",
        "lastEditedBy" : "ad267631-96d1-4bad-b913-e8d6342e65a2",
        "tags" : [
        ]
      },
      {
        "id" : "f9f29a64-00fc-48be-b272-86640ec32b19",
        "parentId" : "1e080c0c-1e57-42fa-ba4c-b93cbdf958ff",
        "authorId" : "ad267631-96d1-4bad-b913-e8d6342e65a2",
        "body" : "Even though you validate with generator params, I think you still need `cmd.MarkFlagRequired` for command line completions. [Example](https://github.com/kubernetes/kubernetes/blob/master/pkg/kubectl/cmd/create_secret.go#L157).\n",
        "createdAt" : "2016-08-05T17:39:34Z",
        "updatedAt" : "2016-08-08T03:41:45Z",
        "lastEditedBy" : "ad267631-96d1-4bad-b913-e8d6342e65a2",
        "tags" : [
        ]
      }
    ],
    "commit" : "bd0b7528b5b34174bf9864f9e9a70a90ce734352",
    "line" : 62,
    "diffHunk" : "@@ -1,1 +60,64 @@\n// CreateDeployment implements the behavior to run the create deployment command\nfunc CreateDeployment(f *cmdutil.Factory, cmdOut io.Writer, cmd *cobra.Command, args []string) error {\n\tname, err := NameFromCommandArgs(cmd, args)\n\tif err != nil {"
  }
]