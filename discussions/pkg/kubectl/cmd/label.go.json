[
  {
    "id" : "1dc0ffb0-545d-4db0-8d1b-7e5c4c7a5829",
    "prId" : 34199,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/34199#pullrequestreview-3289539",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "eddb6dd3-4d3d-485b-ac7c-433a6e745eb4",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "In the end state, we'd like the options struct's `Run` to stand on their own, completely divorced from cobra for re-use and delegation as well as testing.  Something to keep in mind.\n\nIssue ref: https://github.com/kubernetes/kubernetes/issues/7311\n",
        "createdAt" : "2016-10-07T12:10:29Z",
        "updatedAt" : "2016-10-07T12:10:30Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "4a09ded01d6e56ecea986693814a0890b1e70307",
    "line" : 175,
    "diffHunk" : "@@ -1,1 +167,171 @@\n// RunLabel does the work\nfunc (o *LabelOptions) RunLabel(f *cmdutil.Factory, cmd *cobra.Command) error {\n\tcmdNamespace, enforceNamespace, err := f.DefaultNamespace()\n\tif err != nil {"
  },
  {
    "id" : "fad133de-b9b6-49bf-8855-967aa29cb877",
    "prId" : 8556,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6252ab4c-a54a-43ac-92dc-df1d9d2af957",
        "parentId" : null,
        "authorId" : "8076e56f-768c-4f89-90e6-045ef34e1525",
        "body" : "I know it's preexisting, but invalid user input should return [`UsageError`](https://github.com/GoogleCloudPlatform/kubernetes/blob/master/pkg/kubectl/cmd/util/helpers.go#L163). Do you mind fixing references in this file?\n",
        "createdAt" : "2015-05-22T23:43:04Z",
        "updatedAt" : "2015-05-28T08:47:42Z",
        "lastEditedBy" : "8076e56f-768c-4f89-90e6-045ef34e1525",
        "tags" : [
        ]
      },
      {
        "id" : "b169829d-30dc-47c3-a899-702a8b414138",
        "parentId" : "6252ab4c-a54a-43ac-92dc-df1d9d2af957",
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "Added this in the main RunLabel function.\n",
        "createdAt" : "2015-05-25T08:35:24Z",
        "updatedAt" : "2015-05-28T08:47:42Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      }
    ],
    "commit" : "fb63ab63bb9da27ac8d577e0addea162a5087e49",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +107,111 @@\t\t\tparts := strings.Split(labelSpec, \"=\")\n\t\t\tif len(parts) != 2 || len(parts[1]) == 0 || !util.IsValidLabelValue(parts[1]) {\n\t\t\t\treturn nil, nil, fmt.Errorf(\"invalid label spec: %v\", labelSpec)\n\t\t\t}\n\t\t\tlabels[parts[0]] = parts[1]"
  },
  {
    "id" : "1f2a2c13-4067-473b-bd4a-51dccc0a8386",
    "prId" : 4237,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a25ccf54-7e5a-4830-9c97-54e40d4ae23d",
        "parentId" : null,
        "authorId" : "8076e56f-768c-4f89-90e6-045ef34e1525",
        "body" : "A thought for using this to clear labels as well; make the labels to apply a flag and add a flag to clear labels. E.g.\n\n```\nlabel [--overwrite] <resource> <name> --labels=<key-1>=<val-1>... --clear-labels=<key-2>,<key-3>\n```\n",
        "createdAt" : "2015-02-07T18:46:20Z",
        "updatedAt" : "2015-02-10T04:09:08Z",
        "lastEditedBy" : "8076e56f-768c-4f89-90e6-045ef34e1525",
        "tags" : [
        ]
      },
      {
        "id" : "149c6f66-dd0a-432f-a81b-757c13289865",
        "parentId" : "a25ccf54-7e5a-4830-9c97-54e40d4ae23d",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "What's the most common action?  Adding/overwriting, then clearing?  If adding is sufficiently more prevalent that clearing, it's an argument to make the common action use the arguments.\n\n> On Feb 7, 2015, at 1:46 PM, Jeff Lowdermilk notifications@github.com wrote:\n> \n> In pkg/kubectl/cmd/label.go:\n> \n> > +import (\n> > -   \"fmt\"\n> > -   \"io\"\n> > -   \"strings\"\n> >   +\n> > -   \"github.com/GoogleCloudPlatform/kubernetes/pkg/api\"\n> > -   \"github.com/GoogleCloudPlatform/kubernetes/pkg/api/meta\"\n> > -   \"github.com/GoogleCloudPlatform/kubernetes/pkg/kubectl/cmd/util\"\n> > -   \"github.com/GoogleCloudPlatform/kubernetes/pkg/kubectl/resource\"\n> > -   \"github.com/GoogleCloudPlatform/kubernetes/pkg/runtime\"\n> > -   \"github.com/spf13/cobra\"\n> >   +)\n> >   +\n> >   +func (f *Factory) NewCmdLabel(out io.Writer) *cobra.Command {\n> > -   cmd := &cobra.Command{\n> > -       Use:   \"label [--overwrite] <resource> <name> <key-1>=<val-1> ... <key-n>=<val-n> [--resource-version=<version>]\",\n> >   A thought for using this to clear labels as well; make the labels to apply a flag and add a flag to clear labels. E.g.\n> \n> label [--overwrite] <resource> <name> --labels=<key-1>=<val-1>... --clear-labels=<key-2>,<key-3>\n> â€”\n> Reply to this email directly or view it on GitHub.\n",
        "createdAt" : "2015-02-07T20:12:26Z",
        "updatedAt" : "2015-02-10T04:09:08Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "86997c67-0d1a-431f-8c5f-84edd195d1fa",
        "parentId" : "a25ccf54-7e5a-4830-9c97-54e40d4ae23d",
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "Adding a label or changing a value is most common.\n",
        "createdAt" : "2015-02-08T02:48:35Z",
        "updatedAt" : "2015-02-10T04:09:08Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "f16f2ba7-3f0d-448a-9e96-8a4417e45bf0",
        "parentId" : "a25ccf54-7e5a-4830-9c97-54e40d4ae23d",
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "I could imagine a flag to remove labels by key.\n",
        "createdAt" : "2015-02-08T02:53:31Z",
        "updatedAt" : "2015-02-10T04:09:08Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "13f3a617-b35b-4f97-8fe3-5c4c94f24634",
        "parentId" : "a25ccf54-7e5a-4830-9c97-54e40d4ae23d",
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "addressed elsewhere.\n",
        "createdAt" : "2015-02-09T18:11:13Z",
        "updatedAt" : "2015-02-10T04:09:08Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      },
      {
        "id" : "99f7cea3-a3d8-4dff-8423-200c23920089",
        "parentId" : "a25ccf54-7e5a-4830-9c97-54e40d4ae23d",
        "authorId" : "8076e56f-768c-4f89-90e6-045ef34e1525",
        "body" : "Add remove label arg to usage string.\n",
        "createdAt" : "2015-02-09T21:25:10Z",
        "updatedAt" : "2015-02-10T04:09:08Z",
        "lastEditedBy" : "8076e56f-768c-4f89-90e6-045ef34e1525",
        "tags" : [
        ]
      }
    ],
    "commit" : "ac35aa5e32dff2276a0af02ebef3bf017f7f9330",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +32,36 @@func (f *Factory) NewCmdLabel(out io.Writer) *cobra.Command {\n\tcmd := &cobra.Command{\n\t\tUse:   \"label [--overwrite] <resource> <name> <key-1>=<val-1> ... <key-n>=<val-n> [--resource-version=<version>]\",\n\t\tShort: \"Update the labels on a resource\",\n\t\tLong: `Update the labels on a resource."
  },
  {
    "id" : "ece87048-6c70-4a3a-9cb8-c8c8faea462b",
    "prId" : 4237,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9ae44d3a-442b-47e7-844e-aa4facc4ca45",
        "parentId" : null,
        "authorId" : "8076e56f-768c-4f89-90e6-045ef34e1525",
        "body" : "Add remove label example.\n",
        "createdAt" : "2015-02-09T21:25:31Z",
        "updatedAt" : "2015-02-10T04:09:08Z",
        "lastEditedBy" : "8076e56f-768c-4f89-90e6-045ef34e1525",
        "tags" : [
        ]
      }
    ],
    "commit" : "ac35aa5e32dff2276a0af02ebef3bf017f7f9330",
    "line" : 41,
    "diffHunk" : "@@ -1,1 +39,43 @@If --resource-version is specified, then updates will use this resource version, otherwise the existing resource-version will be used.\n\nExamples:\n  $ kubectl label pods foo unhealthy=true\n  <update a pod with the label 'unhealthy' and the value 'true'>"
  },
  {
    "id" : "69380f28-158e-4b70-9245-a87aeb1478b9",
    "prId" : 4237,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "165a33bd-4e23-4ca8-8ee1-a8487ae09f34",
        "parentId" : null,
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "I didn't see a response to the bulk-update issue.\n\nExample is here:\nhttps://github.com/GoogleCloudPlatform/kubernetes/blob/master/pkg/kubectl/cmd/update.go#L57\n\nObviously, a resource-version precondition would be incompatible with a bulk update.\n",
        "createdAt" : "2015-02-10T03:37:58Z",
        "updatedAt" : "2015-02-10T04:09:08Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "d9b08a1c-0623-4bf4-a50c-ca64208bdf0b",
        "parentId" : "165a33bd-4e23-4ca8-8ee1-a8487ae09f34",
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "Ok, comment didn't show in file view, but saw it in email. I'm fine with a separate PR.\n",
        "createdAt" : "2015-02-10T03:42:17Z",
        "updatedAt" : "2015-02-10T04:09:08Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      }
    ],
    "commit" : "ac35aa5e32dff2276a0af02ebef3bf017f7f9330",
    "line" : 74,
    "diffHunk" : "@@ -1,1 +72,76 @@\t\t\tresourceVersion := util.GetFlagString(cmd, \"resource-version\")\n\n\t\t\tobj, err := updateObject(client, mapping, namespace, name, func(obj runtime.Object) runtime.Object {\n\t\t\t\toutObj, err := labelFunc(obj, overwrite, resourceVersion, labels, remove)\n\t\t\t\tcheckErr(err)"
  }
]