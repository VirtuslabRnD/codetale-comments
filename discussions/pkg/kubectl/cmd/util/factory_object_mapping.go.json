[
  {
    "id" : "c7045ce5-6276-40b5-85f3-c3170d6a9c7c",
    "prId" : 58293,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/58293#pullrequestreview-89089780",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "de932e4a-4a53-45d5-9989-78be2d6137d9",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "How does this look like in kubectl? The error is printed as a warning?",
        "createdAt" : "2018-01-16T06:35:10Z",
        "updatedAt" : "2018-01-16T21:02:16Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "889860bb-9c32-4f50-87a3-422069f32c32",
        "parentId" : "de932e4a-4a53-45d5-9989-78be2d6137d9",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "> How does this look like in kubectl? The error is printed as a warning?\r\n\r\nThe only way we've managed to do it is with an invalid user which also fails when building any other client, so this just fails it a little earlier.",
        "createdAt" : "2018-01-16T13:11:59Z",
        "updatedAt" : "2018-01-16T21:02:16Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "49f12fa70faf52e49138d846bbae6764f425c714",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +83,87 @@\tdiscoveryClient, err := f.clientAccessFactory.DiscoveryClient()\n\tif err != nil {\n\t\tunstructuredMapper := discovery.NewRESTMapper(nil, meta.InterfacesForUnstructured)\n\t\tunstructuredTyper := discovery.NewUnstructuredObjectTyper(nil)\n\t\treturn unstructuredMapper, unstructuredTyper, err"
  },
  {
    "id" : "2925c010-cbde-406c-bb7c-248608db635c",
    "prId" : 57843,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/57843#pullrequestreview-86850888",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4a3ebb50-2e29-4636-85e4-3634db562dcb",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "I suspect we want a factory method that gives back the `scalesGetter`",
        "createdAt" : "2018-01-04T18:30:51Z",
        "updatedAt" : "2018-01-12T08:23:06Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "3b3f4219-2553-4802-96de-dc3ad18d5308",
        "parentId" : "4a3ebb50-2e29-4636-85e4-3634db562dcb",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "> I suspect we want a factory method that gives back the scalesGetter\r\n\r\nI'm willing to wait until we hit it down in the reapers.",
        "createdAt" : "2018-01-04T18:31:03Z",
        "updatedAt" : "2018-01-12T08:23:06Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "caf01678-5935-47e1-916c-4b188ac6223a",
        "parentId" : "4a3ebb50-2e29-4636-85e4-3634db562dcb",
        "authorId" : "13c01cb8-6052-4a98-b6fd-20d3acd6332f",
        "body" : "alright, thanks.",
        "createdAt" : "2018-01-05T09:14:25Z",
        "updatedAt" : "2018-01-12T08:23:06Z",
        "lastEditedBy" : "13c01cb8-6052-4a98-b6fd-20d3acd6332f",
        "tags" : [
        ]
      }
    ],
    "commit" : "dd9de90b0ad1aa78c2a8dd7d5238d8f769ffe771",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +302,306 @@\tresolver := scaleclient.NewDiscoveryScaleKindResolver(discoClient)\n\tscalesGetter := scaleclient.New(restClient, mapper, dynamic.LegacyAPIPathResolverFunc, resolver)\n\tgvk := mapping.GroupVersionKind.GroupVersion().WithResource(mapping.Resource)\n\n\treturn kubectl.ScalerFor(mapping.GroupVersionKind.GroupKind(), clientset, scalesGetter, gvk.GroupResource())"
  },
  {
    "id" : "fe7422a9-7ac0-414c-9df5-9fda0dc3f2bb",
    "prId" : 56045,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/56045#pullrequestreview-110030701",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0cd57673-2b45-4ac6-b67d-587460381a8d",
        "parentId" : null,
        "authorId" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "body" : "Add this to `func AttachablePodForObject` too?",
        "createdAt" : "2018-03-14T22:47:46Z",
        "updatedAt" : "2018-04-06T11:32:11Z",
        "lastEditedBy" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "tags" : [
        ]
      },
      {
        "id" : "32a295b1-908c-42e2-994a-9189d4f344b5",
        "parentId" : "0cd57673-2b45-4ac6-b67d-587460381a8d",
        "authorId" : "ec801d33-3a38-47a2-a267-f72db1de574b",
        "body" : "done, good catch",
        "createdAt" : "2018-04-06T11:32:12Z",
        "updatedAt" : "2018-04-06T11:32:12Z",
        "lastEditedBy" : "ec801d33-3a38-47a2-a267-f72db1de574b",
        "tags" : [
        ]
      }
    ],
    "commit" : "40d8a4bf604e4dfea0b25f173d58cf98be48baef",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +255,259 @@\t\t\treturn nil, fmt.Errorf(\"invalid label selector: %v\", err)\n\t\t}\n\n\tcase *batch.Job:\n\t\tnamespace = t.Namespace"
  },
  {
    "id" : "5428a2f3-59df-471f-b082-2fb687f67563",
    "prId" : 54493,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/54493#pullrequestreview-71886865",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "45d00b5b-3578-4fdd-9747-fcbf5639a5fa",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : ":+1:",
        "createdAt" : "2017-10-25T14:40:34Z",
        "updatedAt" : "2017-11-08T17:42:58Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "456df2c74ed46f6c454cb388a816ac05cc326a92",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +331,335 @@\nfunc (f *ring1Factory) StatusViewer(mapping *meta.RESTMapping) (kubectl.StatusViewer, error) {\n\tclientset, err := f.clientAccessFactory.KubernetesClientSet()\n\tif err != nil {\n\t\treturn nil, err"
  },
  {
    "id" : "1a31961d-e4ff-4d84-98ad-62ed25e2b4d8",
    "prId" : 44531,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/44531#pullrequestreview-34045449",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "52a84143-7572-4d2e-a89c-6d72e8f84731",
        "parentId" : null,
        "authorId" : "ad267631-96d1-4bad-b913-e8d6342e65a2",
        "body" : "@deads2k ring level looks good?",
        "createdAt" : "2017-04-18T18:15:25Z",
        "updatedAt" : "2017-04-25T17:46:29Z",
        "lastEditedBy" : "ad267631-96d1-4bad-b913-e8d6342e65a2",
        "tags" : [
        ]
      },
      {
        "id" : "8f8a18c5-a02e-4bd4-b849-15916b56cab4",
        "parentId" : "52a84143-7572-4d2e-a89c-6d72e8f84731",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "> @deads2k ring level looks good?\r\n\r\nYes.  It looks correct.",
        "createdAt" : "2017-04-21T14:57:14Z",
        "updatedAt" : "2017-04-25T17:46:29Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "21e239fb82e7e81dfed9bfddc4e95ff8201c52fa",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +58,62 @@\n\t// openAPIGetter loads and caches openapi specs\n\topenAPIGetter openAPIGetter\n}\n"
  },
  {
    "id" : "e42f8355-2dff-4794-bd81-5d5e448e1aa2",
    "prId" : 44531,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/44531#pullrequestreview-34044739",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ac53638d-8376-4c29-9515-15cda94c0f62",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "please avoid the anonymous inclusion in the struct.  It makes the code below harder to read.",
        "createdAt" : "2017-04-21T14:54:50Z",
        "updatedAt" : "2017-04-25T17:46:29Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "21e239fb82e7e81dfed9bfddc4e95ff8201c52fa",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +61,65 @@}\n\ntype openAPIGetter struct {\n\tonce   sync.Once\n\tgetter openapi.Getter"
  },
  {
    "id" : "0c1f0fc8-c89c-4568-9396-d71f3129193e",
    "prId" : 40927,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/40927#pullrequestreview-22930278",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a390eeec-e5c5-4dc6-9c29-c8d5a7adfc0c",
        "parentId" : null,
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "We really need to make the timeout configurable. Spawn an issue?",
        "createdAt" : "2017-02-21T10:55:12Z",
        "updatedAt" : "2017-02-27T12:17:52Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      },
      {
        "id" : "c89daedd-54f6-4461-b2b4-e859f1e167ec",
        "parentId" : "a390eeec-e5c5-4dc6-9c29-c8d5a7adfc0c",
        "authorId" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "body" : "The same applies for `AttachablePodForObject`, I've created https://github.com/kubernetes/kubernetes/issues/41786 to track it.",
        "createdAt" : "2017-02-21T11:08:34Z",
        "updatedAt" : "2017-02-27T12:17:52Z",
        "lastEditedBy" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "tags" : [
        ]
      }
    ],
    "commit" : "5472a5e0a591d49c14c28a69ed97200d7c3eacae",
    "line" : 85,
    "diffHunk" : "@@ -1,1 +266,270 @@\n\tsortBy := func(pods []*v1.Pod) sort.Interface { return controller.ByLogging(pods) }\n\tpod, numPods, err := GetFirstPod(clientset.Core(), namespace, selector, 20*time.Second, sortBy)\n\tif err != nil {\n\t\treturn nil, err"
  }
]