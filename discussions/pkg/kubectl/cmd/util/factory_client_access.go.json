[
  {
    "id" : "f5783f31-d9ea-4e30-a9f3-f76351adec60",
    "prId" : 63373,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/63373#pullrequestreview-117578688",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bce28fa6-f1b0-48ce-803e-85ad3ce9e95d",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "I'm only going to take this because it's a coding error to pass this.  In general, a construct like this is ugly.",
        "createdAt" : "2018-05-04T12:02:32Z",
        "updatedAt" : "2018-05-04T21:02:28Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "3ca222b2d951b95deb825c7f62f6c1a446acf908",
    "line" : 72,
    "diffHunk" : "@@ -1,1 +78,82 @@func NewClientAccessFactory(clientGetter RESTClientGetter) ClientAccessFactory {\n\tif clientGetter == nil {\n\t\tpanic(\"attempt to instantiate client_access_factory with nil clientGetter\")\n\t}\n"
  },
  {
    "id" : "c959e77e-d0f2-42c2-80ed-d25764806b1e",
    "prId" : 60201,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/60201#pullrequestreview-110632076",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3c5965b5-8238-42f9-9e26-95e81f37091a",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "This needs some doc.  Falling back to a JSON encoder could let us serialize an internal object to invalid json, right?",
        "createdAt" : "2018-04-09T21:58:47Z",
        "updatedAt" : "2018-04-09T21:58:47Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "0fdd3d04d2251343b9998bb691e459dc3ca89111",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +665,669 @@func InternalVersionJSONEncoder() runtime.Encoder {\n\tencoder := legacyscheme.Codecs.LegacyCodec(legacyscheme.Registry.EnabledVersions()...)\n\treturn unstructured.JSONFallbackEncoder{Encoder: encoder}\n}"
  },
  {
    "id" : "c9c8b302-6971-46f7-ae04-ee95cdaa8970",
    "prId" : 54554,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/54554#pullrequestreview-75830812",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7930291c-6fe8-4dce-a231-01f3f4b33e36",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "The number of objects and the number of versions reveals the unsustainability of this approach (especially as the workload API objects are getting promoted to new API versions - @kow3ns). This is ok for now, but you should add a reflective unit test that will fail if a compiled-in versioned type containing a pod spec is added and not handled here. Long-term, we need to find a way for kubectl to discover and extract pod spec fields from arbitrary objects that are not compiled in.",
        "createdAt" : "2017-10-25T13:23:39Z",
        "updatedAt" : "2017-11-10T18:36:28Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "47c6e9d4-cbf2-43dd-ad4f-819f76f3a19f",
        "parentId" : "7930291c-6fe8-4dce-a231-01f3f4b33e36",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "missing appsv1.Deployment, appsv1.StatefulSet, appsv1beta1.ReplicaSet, appsv1.ReplicaSet",
        "createdAt" : "2017-11-09T13:55:47Z",
        "updatedAt" : "2017-11-10T18:36:28Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "9b7db55a-4281-41fb-a9bb-886fe142cb98",
        "parentId" : "7930291c-6fe8-4dce-a231-01f3f4b33e36",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "this is constantly going to drift as new versions of types are added",
        "createdAt" : "2017-11-09T14:23:59Z",
        "updatedAt" : "2017-11-10T18:36:28Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "2c335ebf-0c1d-4575-a719-f2566ecacfd2",
        "parentId" : "7930291c-6fe8-4dce-a231-01f3f4b33e36",
        "authorId" : "b636cffe-e356-4628-b016-7e9b414c5367",
        "body" : "thanks you ï½ž addding it now. is it possible can have accessor return v1.podtemplate?\r\n```\r\ntype ObjectMetaAccessor interface {\r\n\tGetObjectMeta() Object\r\n}\r\n\r\n// Object lets you work with object metadata from any of the versioned or\r\n// internal API objects. Attempting to set or retrieve a field on an object that does\r\n// not support that field (Name, UID, Namespace on lists) will be a no-op and return\r\n// a default value.\r\ntype Object interface {\r\n\tGetNamespace() string\r\n\tSetNamespace(namespace string)\r\n\tGetName() string\r\n\tSetName(name string)\r\n\tGetGenerateName() string\r\n\tSetGenerateName(name string)\r\n\tGetUID() types.UID\r\n\tSetUID(uid types.UID)\r\n\tGetResourceVersion() string\r\n\tSetResourceVersion(version string)\r\n\tGetGeneration() int64\r\n\tSetGeneration(generation int64)\r\n\tGetSelfLink() string\r\n\tSetSelfLink(selfLink string)\r\n\tGetCreationTimestamp() Time\r\n\tSetCreationTimestamp(timestamp Time)\r\n\tGetDeletionTimestamp() *Time\r\n\tSetDeletionTimestamp(timestamp *Time)\r\n\tGetDeletionGracePeriodSeconds() *int64\r\n\tSetDeletionGracePeriodSeconds(*int64)\r\n\tGetLabels() map[string]string\r\n\tSetLabels(labels map[string]string)\r\n\tGetAnnotations() map[string]string\r\n\tSetAnnotations(annotations map[string]string)\r\n\tGetInitializers() *Initializers\r\n\tSetInitializers(initializers *Initializers)\r\n\tGetFinalizers() []string\r\n\tSetFinalizers(finalizers []string)\r\n\tGetOwnerReferences() []OwnerReference\r\n\tSetOwnerReferences([]OwnerReference)\r\n\tGetClusterName() string\r\n\tSetClusterName(clusterName string)\r\n}\r\n```",
        "createdAt" : "2017-11-10T17:04:04Z",
        "updatedAt" : "2017-11-10T18:36:28Z",
        "lastEditedBy" : "b636cffe-e356-4628-b016-7e9b414c5367",
        "tags" : [
        ]
      },
      {
        "id" : "f7855172-d03d-43a0-9fbe-87da0dd6f47b",
        "parentId" : "7930291c-6fe8-4dce-a231-01f3f4b33e36",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "> is it possible can have accessor return v1.podtemplate?\r\n\r\nno, ObjectMetaAccessor only returns things that are part of metadata that all objects have",
        "createdAt" : "2017-11-10T17:38:00Z",
        "updatedAt" : "2017-11-10T18:36:28Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "dc312142ab05ddf5738d44ebfd7784a89c273e0e",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +234,238 @@func (f *ring0Factory) UpdatePodSpecForObject(obj runtime.Object, fn func(*v1.PodSpec) error) (bool, error) {\n\t// TODO: replace with a swagger schema based approach (identify pod template via schema introspection)\n\tswitch t := obj.(type) {\n\tcase *v1.Pod:\n\t\treturn true, fn(&t.Spec)"
  },
  {
    "id" : "31f1fd49-08ba-42ad-82f4-b3a0ee186dd6",
    "prId" : 41729,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/41729#pullrequestreview-22978311",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "52dcc023-460d-4ada-915b-9096f59f450e",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "I'm reading top to bottom, so maybe this becomes clear, but I'm really surprised to find some of registration happening inside a factory method that could be called multiple times.",
        "createdAt" : "2017-02-21T13:27:52Z",
        "updatedAt" : "2017-02-23T05:28:37Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "0311918a-f38d-4de0-b2cd-de15cf05dc1c",
        "parentId" : "52dcc023-460d-4ada-915b-9096f59f450e",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "It registers it into the new object that it returns.",
        "createdAt" : "2017-02-21T15:08:19Z",
        "updatedAt" : "2017-02-23T05:28:37Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "651188d68753d9379f19308f754842e354e789c8",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +397,401 @@func (f *ring0Factory) Printer(mapping *meta.RESTMapping, options printers.PrintOptions) (printers.ResourcePrinter, error) {\n\tp := printers.NewHumanReadablePrinter(options)\n\tprintersinternal.AddHandlers(p)\n\treturn p, nil\n}"
  }
]