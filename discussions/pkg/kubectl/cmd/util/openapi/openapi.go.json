[
  {
    "id" : "cec26c6c-56b5-4905-9b44-24e21526e357",
    "prId" : 54181,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/54181#pullrequestreview-70737643",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0aed1cde-0010-4082-a9c0-9f6b72375074",
        "parentId" : null,
        "authorId" : "cdb05f24-d700-4d96-a683-3e4de7effbf5",
        "body" : "Why panic instead of error?",
        "createdAt" : "2017-10-19T22:11:43Z",
        "updatedAt" : "2017-10-20T16:21:13Z",
        "lastEditedBy" : "cdb05f24-d700-4d96-a683-3e4de7effbf5",
        "tags" : [
        ]
      },
      {
        "id" : "c65d458c-0f11-479e-8b9c-9751e159e60f",
        "parentId" : "0aed1cde-0010-4082-a9c0-9f6b72375074",
        "authorId" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "body" : "Because it's really really not supposed to happen. \r\n\r\nEDIT: All the models listed by `ListModels()` must exist, or something is wrong, and no error message could help the user.",
        "createdAt" : "2017-10-20T03:33:46Z",
        "updatedAt" : "2017-10-20T16:21:13Z",
        "lastEditedBy" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "tags" : [
        ]
      }
    ],
    "commit" : "3ed58475c4fd99c56bba63059ca75891f417e55a",
    "line" : 124,
    "diffHunk" : "@@ -1,1 +55,59 @@\t\tmodel := models.LookupModel(modelName)\n\t\tif model == nil {\n\t\t\tpanic(\"ListModels returns a model that can't be looked-up.\")\n\t\t}\n\t\tgvk := parseGroupVersionKind(model)"
  },
  {
    "id" : "20f2ed76-8295-4262-ac69-cc262e17cf87",
    "prId" : 50160,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/50160#pullrequestreview-55661055",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "91fb078c-1afd-4840-a769-51397a5df2af",
        "parentId" : null,
        "authorId" : "cdb05f24-d700-4d96-a683-3e4de7effbf5",
        "body" : "Don't want `.` any more? Why?",
        "createdAt" : "2017-08-10T18:56:27Z",
        "updatedAt" : "2017-08-12T00:02:40Z",
        "lastEditedBy" : "cdb05f24-d700-4d96-a683-3e4de7effbf5",
        "tags" : [
        ]
      },
      {
        "id" : "48f2b7ff-ed59-46da-b672-1b577f9037f1",
        "parentId" : "91fb078c-1afd-4840-a769-51397a5df2af",
        "authorId" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "body" : "We used to append raw keys to the Path, now we use [`FieldPath`](https://github.com/kubernetes/kubernetes/pull/50160/files#diff-a26f1a64464c16ea39d47654abbcdb26R111) that automatically adds the `.`",
        "createdAt" : "2017-08-10T19:52:56Z",
        "updatedAt" : "2017-08-12T00:02:40Z",
        "lastEditedBy" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "tags" : [
        ]
      },
      {
        "id" : "3122dccd-c32e-41fa-a966-373303f46df9",
        "parentId" : "91fb078c-1afd-4840-a769-51397a5df2af",
        "authorId" : "cdb05f24-d700-4d96-a683-3e4de7effbf5",
        "body" : "Ack",
        "createdAt" : "2017-08-10T20:50:44Z",
        "updatedAt" : "2017-08-12T00:02:40Z",
        "lastEditedBy" : "cdb05f24-d700-4d96-a683-3e4de7effbf5",
        "tags" : [
        ]
      }
    ],
    "commit" : "ba11c7370f0d123372edd1092194ee6924d13138",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +97,101 @@\nfunc (p *Path) String() string {\n\treturn strings.Join(p.Get(), \"\")\n}\n"
  },
  {
    "id" : "9b9962d9-02f4-4c7c-bd07-32b761c54125",
    "prId" : 46803,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/46803#pullrequestreview-41830701",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "222487c8-407f-41e5-a4ed-2783b8e1e5f5",
        "parentId" : null,
        "authorId" : "cdb05f24-d700-4d96-a683-3e4de7effbf5",
        "body" : "Update the comment.",
        "createdAt" : "2017-06-02T03:38:09Z",
        "updatedAt" : "2017-06-27T21:08:19Z",
        "lastEditedBy" : "cdb05f24-d700-4d96-a683-3e4de7effbf5",
        "tags" : [
        ]
      },
      {
        "id" : "33cfe8d7-3dc3-446d-9e75-e92b90868116",
        "parentId" : "222487c8-407f-41e5-a4ed-2783b8e1e5f5",
        "authorId" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "body" : "Should I?",
        "createdAt" : "2017-06-02T15:46:32Z",
        "updatedAt" : "2017-06-27T21:08:19Z",
        "lastEditedBy" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "tags" : [
        ]
      },
      {
        "id" : "08acd8a7-2b29-4e18-aee9-5122f8836e1a",
        "parentId" : "222487c8-407f-41e5-a4ed-2783b8e1e5f5",
        "authorId" : "cdb05f24-d700-4d96-a683-3e4de7effbf5",
        "body" : "Maybe not. They are the same the type under the cover.",
        "createdAt" : "2017-06-02T17:04:41Z",
        "updatedAt" : "2017-06-27T21:08:19Z",
        "lastEditedBy" : "cdb05f24-d700-4d96-a683-3e4de7effbf5",
        "tags" : [
        ]
      }
    ],
    "commit" : "224dba9a136e3e4014d88b3c2546418066bac026",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +100,104 @@\tPrimitiveType string\n\n\t// Extensions are openapi extensions for the object definition.\n\tExtensions map[string]interface{}\n"
  },
  {
    "id" : "d72e8956-f310-41bb-93a7-e0fe096cf719",
    "prId" : 46803,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/46803#pullrequestreview-41812193",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cd988ed0-8842-433f-8edc-e1e489a790d4",
        "parentId" : null,
        "authorId" : "cdb05f24-d700-4d96-a683-3e4de7effbf5",
        "body" : "You can `values := map[string]interface{}{}`\r\nand then remove\r\n```\r\nif values == nil {\r\n  values = make(map[string]interface{})\r\n}\r\n```",
        "createdAt" : "2017-06-02T03:43:58Z",
        "updatedAt" : "2017-06-27T21:08:19Z",
        "lastEditedBy" : "cdb05f24-d700-4d96-a683-3e4de7effbf5",
        "tags" : [
        ]
      },
      {
        "id" : "04aa1695-0b74-45ba-975f-00674f1f2489",
        "parentId" : "cd988ed0-8842-433f-8edc-e1e489a790d4",
        "authorId" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "body" : "Yeah, that's exactly what I had done initially. Problem is that it broke many tests. Many tests build an expected `Kind`/`Type` with the default Extension value `nil`. Problem is, this function will always initialize `Extension` with an  *empty* Extension, which doesn't compare as equal to `nil` in `reflect.DeepEqual`. \r\n\r\nIOW, the goal of this `if` is to return a `nil` map rather than an empty map, so that the tests don't have to worry about initializing an empty map ...",
        "createdAt" : "2017-06-02T15:58:27Z",
        "updatedAt" : "2017-06-27T21:08:19Z",
        "lastEditedBy" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "tags" : [
        ]
      }
    ],
    "commit" : "224dba9a136e3e4014d88b3c2546418066bac026",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +137,141 @@\nfunc vendorExtensionToMap(e []*openapi_v2.NamedAny) map[string]interface{} {\n\tvar values map[string]interface{}\n\n\tfor _, na := range e {"
  },
  {
    "id" : "4cdbb3b5-8e10-421c-baca-5c646495ba8b",
    "prId" : 46803,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/46803#pullrequestreview-41812193",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "56059a64-d609-4da3-a3c6-c8952532bfd4",
        "parentId" : null,
        "authorId" : "cdb05f24-d700-4d96-a683-3e4de7effbf5",
        "body" : "Is it guaranteed to have at least one item?",
        "createdAt" : "2017-06-02T04:06:43Z",
        "updatedAt" : "2017-06-27T21:08:19Z",
        "lastEditedBy" : "cdb05f24-d700-4d96-a683-3e4de7effbf5",
        "tags" : [
        ]
      },
      {
        "id" : "5d36f2d1-0323-4ffc-8ebc-16b799f9a716",
        "parentId" : "56059a64-d609-4da3-a3c6-c8952532bfd4",
        "authorId" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "body" : "Good point, but I think it falls under the same logic as above: \"we assume we have tested this code against the swagger file before\".",
        "createdAt" : "2017-06-02T15:49:28Z",
        "updatedAt" : "2017-06-27T21:08:19Z",
        "lastEditedBy" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "tags" : [
        ]
      }
    ],
    "commit" : "224dba9a136e3e4014d88b3c2546418066bac026",
    "line" : 168,
    "diffHunk" : "@@ -1,1 +307,311 @@\t// Recurse if type is array\n\tif o.isArray(s) {\n\t\treturn fmt.Sprintf(\"%s array\", o.getTypeNameForField(s.GetItems().GetSchema()[0]))\n\t}\n\tif o.isMap(s) {"
  },
  {
    "id" : "a22a9b7b-0e0d-422b-873c-5d1f987771a4",
    "prId" : 46803,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/46803#pullrequestreview-41686122",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "41461191-eb46-4840-a99d-cd5837ce66c6",
        "parentId" : null,
        "authorId" : "cdb05f24-d700-4d96-a683-3e4de7effbf5",
        "body" : "Same question here. Should we check the length of the schema slice?",
        "createdAt" : "2017-06-02T04:13:48Z",
        "updatedAt" : "2017-06-27T21:08:19Z",
        "lastEditedBy" : "cdb05f24-d700-4d96-a683-3e4de7effbf5",
        "tags" : [
        ]
      }
    ],
    "commit" : "224dba9a136e3e4014d88b3c2546418066bac026",
    "line" : 213,
    "diffHunk" : "@@ -1,1 +342,346 @@\t\treturn &openapi_v2.Schema{}, fmt.Errorf(\"%v is not an array type\", o.getTypeNameForField(s))\n\t}\n\treturn s.GetItems().GetSchema()[0], nil\n}\n"
  },
  {
    "id" : "e62e223b-4321-454c-9e11-cdc142679859",
    "prId" : 46803,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/46803#pullrequestreview-41812193",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ed1ae6c5-3fdc-4f69-9b7f-7f735c1483ae",
        "parentId" : null,
        "authorId" : "cdb05f24-d700-4d96-a683-3e4de7effbf5",
        "body" : "Interesting. It is not a `map[string]interface{}` any more?",
        "createdAt" : "2017-06-02T04:19:50Z",
        "updatedAt" : "2017-06-27T21:08:19Z",
        "lastEditedBy" : "cdb05f24-d700-4d96-a683-3e4de7effbf5",
        "tags" : [
        ]
      },
      {
        "id" : "0bff5cc8-9e44-48ba-9acf-3097479bbe7f",
        "parentId" : "ed1ae6c5-3fdc-4f69-9b7f-7f735c1483ae",
        "authorId" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "body" : "Yeah, seems like the new type uses a different format. ",
        "createdAt" : "2017-06-02T16:29:25Z",
        "updatedAt" : "2017-06-27T21:08:19Z",
        "lastEditedBy" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "tags" : [
        ]
      }
    ],
    "commit" : "224dba9a136e3e4014d88b3c2546418066bac026",
    "line" : 274,
    "diffHunk" : "@@ -1,1 +393,397 @@\n\t// Expect a empty of a map with 3 entries\n\tgvkMap, ok := gvk.(map[interface{}]interface{})\n\tif !ok {\n\t\treturn empty, fmt.Errorf(\"%s extension has unexpected type %T in %s\", groupVersionKindExtensionKey, gvk, extList)"
  },
  {
    "id" : "5d153571-d7c0-4044-adcc-4668fe1c6216",
    "prId" : 46235,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/46235#pullrequestreview-41308879",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5b8b2bb8-83b8-47e9-b3a7-75fbfbea9b43",
        "parentId" : null,
        "authorId" : "cdb05f24-d700-4d96-a683-3e4de7effbf5",
        "body" : "Why change this?",
        "createdAt" : "2017-05-31T17:37:49Z",
        "updatedAt" : "2017-06-06T20:37:54Z",
        "lastEditedBy" : "cdb05f24-d700-4d96-a683-3e4de7effbf5",
        "tags" : [
        ]
      },
      {
        "id" : "db71f559-80bd-4816-8445-b685e0e93daf",
        "parentId" : "5b8b2bb8-83b8-47e9-b3a7-75fbfbea9b43",
        "authorId" : "d4643e80-cc45-428b-8128-5004c4c603ff",
        "body" : "During testing I discovered for some types, GVK metadata is not defined, so emit this error on stdout which is bad. So didn't have an option but to bump it to higher verbosity.",
        "createdAt" : "2017-05-31T18:01:24Z",
        "updatedAt" : "2017-06-06T20:37:54Z",
        "lastEditedBy" : "d4643e80-cc45-428b-8128-5004c4c603ff",
        "tags" : [
        ]
      }
    ],
    "commit" : "f768a63fb03aeda184311338a5ad4ee3a1c3b097",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +195,199 @@\t}\n\tif err != nil {\n\t\tglog.V(2).Info(err)\n\t}\n"
  }
]