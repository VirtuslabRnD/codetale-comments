[
  {
    "id" : "95a804ca-dd2e-47ac-ba4f-d664fe5d6234",
    "prId" : 57229,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/57229#pullrequestreview-87395021",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "957d1e96-abd5-44df-932a-0d544f3e377e",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "keep the `TODO: this needs to be abstracted behind the factory like ValidResourceTypeList and use discovery`... this change removes duplicate code, but using a statically compiled-in list is still wrong",
        "createdAt" : "2018-01-05T16:03:35Z",
        "updatedAt" : "2018-01-09T01:59:37Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "605852e9-db04-49bd-86fc-fa96f8bc0845",
        "parentId" : "957d1e96-abd5-44df-932a-0d544f3e377e",
        "authorId" : "3e884f92-f997-4a44-9b8e-68978569c821",
        "body" : "thanks @liggitt , will add the TODO back soon! ",
        "createdAt" : "2018-01-09T01:50:25Z",
        "updatedAt" : "2018-01-09T01:59:37Z",
        "lastEditedBy" : "3e884f92-f997-4a44-9b8e-68978569c821",
        "tags" : [
        ]
      }
    ],
    "commit" : "c3d77eea54011aed255d43fe48583ddb7b432e19",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +225,229 @@}\n\n// Retrieve a list of handled resources from printer as valid args\n// TODO: This function implementation should be replaced with a real implementation from the\n//   discovery service."
  },
  {
    "id" : "85063644-824c-4611-81ac-ccd4da7a9ac6",
    "prId" : 54881,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/54881#pullrequestreview-81292929",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "59aa9140-eb3a-4d54-9ffe-534391ad1792",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "entangling adding handlers and wrapping in this single function doesn't allow adding additional handlers in a calling factory. @smarterclayton, thoughts on the sorting wrapper being added this way?",
        "createdAt" : "2017-11-20T17:39:46Z",
        "updatedAt" : "2017-12-05T18:40:15Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "6704e641-d701-40d1-a384-f1ad64a6cd15",
        "parentId" : "59aa9140-eb3a-4d54-9ffe-534391ad1792",
        "authorId" : "0385dfd1-e8a7-41a8-8213-eabe697d14cd",
        "body" : "@liggitt will leave this line as-is for now. There is a [proposal for discussing how to address adding handlers to a printer](https://docs.google.com/a/redhat.com/document/d/1SBhkK34UNObC3KLva9aaolonoFGRzqZ6YSeZMU8AZQc/edit?usp=sharing), however a goal would be to eliminate printer handlers altogether [in favor of server-side printers](https://github.com/kubernetes/kubernetes/pull/55637).\r\n\r\nping @smarterclayton ",
        "createdAt" : "2017-12-05T18:43:58Z",
        "updatedAt" : "2017-12-05T18:43:58Z",
        "lastEditedBy" : "0385dfd1-e8a7-41a8-8213-eabe697d14cd",
        "tags" : [
        ]
      }
    ],
    "commit" : "8c9c2ee2d87303d408cf237591d478bbdfbbd3de",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +94,98 @@\t// we execute AddHandlers() here before maybeWrapSortingPrinter so that we don't\n\t// need to convert to delegatePrinter again then invoke AddHandlers()\n\tif humanReadablePrinter, ok := printer.(printers.PrintHandler); ok {\n\t\tprintersinternal.AddHandlers(humanReadablePrinter)\n\t}"
  },
  {
    "id" : "c6963065-c249-4ced-94ca-c8edd7e8264b",
    "prId" : 49134,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/49134#pullrequestreview-50701761",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2dcda0b0-1a80-433c-848b-172b5db14524",
        "parentId" : null,
        "authorId" : "ad267631-96d1-4bad-b913-e8d6342e65a2",
        "body" : "Should \"output\" above do the same?",
        "createdAt" : "2017-07-18T18:20:44Z",
        "updatedAt" : "2017-07-18T18:20:44Z",
        "lastEditedBy" : "ad267631-96d1-4bad-b913-e8d6342e65a2",
        "tags" : [
        ]
      },
      {
        "id" : "6a1932de-b8fa-412b-8882-1a4ebb2b36b3",
        "parentId" : "2dcda0b0-1a80-433c-848b-172b5db14524",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "> Should \"output\" above do the same?\r\n\r\nThat seems more fundamental.  I'd almost say `--template` is optional for printing.",
        "createdAt" : "2017-07-18T18:28:44Z",
        "updatedAt" : "2017-07-18T18:28:44Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "a67255c170fa23b87267bb9644ed10d38d13baec",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +162,166 @@\tvar templateFile string\n\tif flag := flags.Lookup(\"template\"); flag != nil {\n\t\tif flag.Value.Type() == \"string\" {\n\t\t\ttemplateFile = GetFlagString(cmd, \"template\")\n\t\t}"
  },
  {
    "id" : "72f9eae7-9432-4208-95cb-e09fe5d0a4c0",
    "prId" : 46235,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/46235#pullrequestreview-41307496",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6f13c0ba-514d-498d-91ec-c8eeb87df1ab",
        "parentId" : null,
        "authorId" : "cdb05f24-d700-4d96-a683-3e4de7effbf5",
        "body" : "Is `Lookup` necessary?\r\nI think if we have flag `output`, lookup it should always be non-nil, even unspecified.",
        "createdAt" : "2017-05-31T17:41:03Z",
        "updatedAt" : "2017-06-06T20:37:54Z",
        "lastEditedBy" : "cdb05f24-d700-4d96-a683-3e4de7effbf5",
        "tags" : [
        ]
      },
      {
        "id" : "fd342df4-7661-47e1-857c-6644b1609f0c",
        "parentId" : "6f13c0ba-514d-498d-91ec-c8eeb87df1ab",
        "authorId" : "d4643e80-cc45-428b-8128-5004c4c603ff",
        "body" : "Yes, I was being more defensive here, so taking it out. PTAL",
        "createdAt" : "2017-05-31T17:56:57Z",
        "updatedAt" : "2017-06-06T20:37:54Z",
        "lastEditedBy" : "d4643e80-cc45-428b-8128-5004c4c603ff",
        "tags" : [
        ]
      }
    ],
    "commit" : "f768a63fb03aeda184311338a5ad4ee3a1c3b097",
    "line" : 74,
    "diffHunk" : "@@ -1,1 +149,153 @@\n\tvar outputFormat string\n\tif flags.Lookup(\"output\") != nil {\n\t\toutputFormat = GetFlagString(cmd, \"output\")\n\t}"
  },
  {
    "id" : "10c83f5e-fd72-4326-859f-08b8f00499c4",
    "prId" : 46235,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/46235#pullrequestreview-41309509",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "78eec16d-bd4a-4453-8921-2627ae479f69",
        "parentId" : null,
        "authorId" : "cdb05f24-d700-4d96-a683-3e4de7effbf5",
        "body" : "Same question here.",
        "createdAt" : "2017-05-31T17:41:16Z",
        "updatedAt" : "2017-06-06T20:37:54Z",
        "lastEditedBy" : "cdb05f24-d700-4d96-a683-3e4de7effbf5",
        "tags" : [
        ]
      },
      {
        "id" : "2efb853f-38cd-4220-9f82-1578d21ad95b",
        "parentId" : "78eec16d-bd4a-4453-8921-2627ae479f69",
        "authorId" : "d4643e80-cc45-428b-8128-5004c4c603ff",
        "body" : "I did a refactor of this code, so kept this code as is to avoid any surprises :) ",
        "createdAt" : "2017-05-31T18:03:35Z",
        "updatedAt" : "2017-06-06T20:37:54Z",
        "lastEditedBy" : "d4643e80-cc45-428b-8128-5004c4c603ff",
        "tags" : [
        ]
      }
    ],
    "commit" : "f768a63fb03aeda184311338a5ad4ee3a1c3b097",
    "line" : 81,
    "diffHunk" : "@@ -1,1 +156,160 @@\t// TODO once https://github.com/kubernetes/kubernetes/issues/12668 is fixed, this should fall back to GetFlagString\n\tvar templateFile string\n\tif flags.Lookup(\"template\") != nil {\n\t\ttemplateFile = GetFlagString(cmd, \"template\")\n\t}"
  },
  {
    "id" : "498b9c58-8284-4bfc-ba2d-0d84fb00cf66",
    "prId" : 13031,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "009a4be8-239f-49c5-8f2c-067d8505a6ad",
        "parentId" : null,
        "authorId" : "8076e56f-768c-4f89-90e6-045ef34e1525",
        "body" : "This flag can be removed now, since you're retrieving the template string by splitting output flag on `=`.\n",
        "createdAt" : "2015-08-31T16:42:40Z",
        "updatedAt" : "2015-09-05T14:33:41Z",
        "lastEditedBy" : "8076e56f-768c-4f89-90e6-045ef34e1525",
        "tags" : [
        ]
      }
    ],
    "commit" : "2e2ef3e8309f7c46ab75147b27daa72294eafe4c",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +35,39 @@\t// template shorthand -t is deprecated to support -t for --tty\n\t// TODO: remove template flag shorthand -t\n\tcmd.Flags().StringP(\"template\", \"t\", \"\", \"Template string or path to template file to use when -o=go-template, -o=go-template-file. The template format is golang templates [http://golang.org/pkg/text/template/#pkg-overview].\")\n\tcmd.Flags().MarkShorthandDeprecated(\"template\", \"please use --template instead\")\n\tcmd.Flags().String(\"sort-by\", \"\", \"If non-empty, sort list types using this field specification.  The field specification is expressed as a JSONPath expression (e.g. 'ObjectMeta.Name'). The field in the API resource specified by this JSONPath expression must be an integer or a string.\")"
  },
  {
    "id" : "5342e6d1-618c-4533-a447-0d7a275b91b3",
    "prId" : 10652,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c419a730-6732-4af9-ad55-c26927075339",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "Optional: helper method to inspect the flag for the expected value.  It seems a little strange that commands call this to register a flag, but there's not a corresponding test for flag in this package.  I don't feel strongly though.\n",
        "createdAt" : "2015-07-10T11:42:45Z",
        "updatedAt" : "2015-07-27T21:07:23Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "e85d0526-742d-478e-8165-8ed2f70ac3d3",
        "parentId" : "c419a730-6732-4af9-ad55-c26927075339",
        "authorId" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "body" : "ValidateOutputArgs() in line 63 checks the -o flag args (can only be \"\" or \"name\"). Is this what you mean?\n",
        "createdAt" : "2015-07-10T22:16:26Z",
        "updatedAt" : "2015-07-27T21:07:23Z",
        "lastEditedBy" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "tags" : [
        ]
      }
    ],
    "commit" : "0e42d0699a14eb8c26a271e7019966679d89c120",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +37,41 @@// AddOutputFlagsForMutation adds output related flags to a command. Used by mutations only.\nfunc AddOutputFlagsForMutation(cmd *cobra.Command) {\n\tcmd.Flags().StringP(\"output\", \"o\", \"\", \"Output mode. Use \\\"-o name\\\" for shorter output (resource/name).\")\n}\n"
  }
]