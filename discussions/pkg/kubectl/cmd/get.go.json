[
  {
    "id" : "cd1f40d4-93c0-482a-b61c-ca5ee571df7d",
    "prId" : 53768,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/53768#pullrequestreview-68948472",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ce787118-0045-4184-8347-e3da0b4e758e",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "why not `Limit()` or `LimitParam()`?",
        "createdAt" : "2017-10-12T04:17:54Z",
        "updatedAt" : "2017-10-27T21:23:44Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "54bab7fc-b170-4d98-851d-89dcc260cb02",
        "parentId" : "ce787118-0045-4184-8347-e3da0b4e758e",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "I didn't want to expose that yet, Limit itself is only of partial utility.  I was focused on \"i want to do what i did before, but in chunks\".",
        "createdAt" : "2017-10-12T14:40:07Z",
        "updatedAt" : "2017-10-27T21:23:44Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "4780ad02978e7aea80f3b50ec20c9abeec13ce69",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +226,230 @@\t\t\tSelectorParam(selector).\n\t\t\tExportParam(export).\n\t\t\tRequestChunksOf(options.ChunkSize).\n\t\t\tIncludeUninitialized(includeUninitialized).\n\t\t\tResourceTypeOrNameArgs(true, args...)."
  },
  {
    "id" : "e640ae56-c56c-4965-8425-005c277cc51a",
    "prId" : 52051,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/52051#pullrequestreview-62576829",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "21b7d87b-925b-47d6-a596-f7fb89c2b701",
        "parentId" : null,
        "authorId" : "0af48e59-4be9-46ce-9275-aa218813b6fd",
        "body" : "Why not just return an error here or use glog.Errorf?",
        "createdAt" : "2017-09-06T22:37:41Z",
        "updatedAt" : "2017-09-06T22:37:41Z",
        "lastEditedBy" : "0af48e59-4be9-46ce-9275-aa218813b6fd",
        "tags" : [
        ]
      },
      {
        "id" : "7c084b70-7437-4c74-a42f-ed6cb3f55dac",
        "parentId" : "21b7d87b-925b-47d6-a596-f7fb89c2b701",
        "authorId" : "0385dfd1-e8a7-41a8-8213-eabe697d14cd",
        "body" : "Took this from the existing filter [here](https://github.com/kubernetes/kubernetes/blob/master/pkg/kubectl/cmd/get.go#L407), but can switch to `glog.Errorf` if that works better. Returning an error will terminate early, potentially not printing any remaining resources (or a filter error for each of them)",
        "createdAt" : "2017-09-07T13:59:43Z",
        "updatedAt" : "2017-09-07T13:59:43Z",
        "lastEditedBy" : "0385dfd1-e8a7-41a8-8213-eabe697d14cd",
        "tags" : [
        ]
      },
      {
        "id" : "621ccd00-a47c-447b-9a7d-f37e73ce8369",
        "parentId" : "21b7d87b-925b-47d6-a596-f7fb89c2b701",
        "authorId" : "0af48e59-4be9-46ce-9275-aa218813b6fd",
        "body" : "As long as there's precedence, that works for me. ",
        "createdAt" : "2017-09-07T16:54:23Z",
        "updatedAt" : "2017-09-07T16:54:23Z",
        "lastEditedBy" : "0af48e59-4be9-46ce-9275-aa218813b6fd",
        "tags" : [
        ]
      },
      {
        "id" : "7798661a-751e-4934-b6ea-e6908165e7a5",
        "parentId" : "21b7d87b-925b-47d6-a596-f7fb89c2b701",
        "authorId" : "ad267631-96d1-4bad-b913-e8d6342e65a2",
        "body" : "We don't use `glog` in the CLI for anything other that leveled logging (`glog.V(n)...`) .",
        "createdAt" : "2017-09-13T21:05:44Z",
        "updatedAt" : "2017-09-13T21:05:44Z",
        "lastEditedBy" : "ad267631-96d1-4bad-b913-e8d6342e65a2",
        "tags" : [
        ]
      }
    ],
    "commit" : "dda7e2758f696877a1817879df205a93c600996a",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +281,285 @@\t\t\t\tif isFiltered, err := filterFuncs.Filter(objToPrint, filterOpts); !isFiltered {\n\t\t\t\t\tif err != nil {\n\t\t\t\t\t\tglog.V(2).Infof(\"Unable to filter resource: %v\", err)\n\t\t\t\t\t} else if err := printer.PrintObj(objToPrint, writer); err != nil {\n\t\t\t\t\t\treturn fmt.Errorf(\"unable to output the provided object: %v\", err)"
  },
  {
    "id" : "3dc5c6b5-b43c-40a5-9c00-3641ce5c6b19",
    "prId" : 50497,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/50497#pullrequestreview-56850125",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c6b7a137-ffa5-449b-baae-09546236ad4b",
        "parentId" : null,
        "authorId" : "cdb05f24-d700-4d96-a683-3e4de7effbf5",
        "body" : "This is affecting WATCH verb. @caesarxuchao It's not clear to me what the behavior should be.",
        "createdAt" : "2017-08-17T06:45:19Z",
        "updatedAt" : "2017-09-01T07:05:20Z",
        "lastEditedBy" : "cdb05f24-d700-4d96-a683-3e4de7effbf5",
        "tags" : [
        ]
      },
      {
        "id" : "098c305b-2019-488b-a812-f05f1168923e",
        "parentId" : "c6b7a137-ffa5-449b-baae-09546236ad4b",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "`kubectl get -w pods foo` should include the events of uninitialized `foo`. \r\n`kubectl get -w pods` doesn't include uninitialized pods unless `--include-uninitialized=true`.",
        "createdAt" : "2017-08-17T07:59:54Z",
        "updatedAt" : "2017-09-01T07:05:20Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "d80ff0f60c7d903305c740a6271616297f1570f7",
    "line" : 40,
    "diffHunk" : "@@ -1,1 +224,228 @@\t\t\tSelectorParam(selector).\n\t\t\tExportParam(export).\n\t\t\tIncludeUninitialized(includeUninitialized).\n\t\t\tResourceTypeOrNameArgs(true, args...).\n\t\t\tSingleResourceType()."
  },
  {
    "id" : "6ada0583-959e-4ae2-8bfe-cab993949fae",
    "prId" : 46265,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/46265#pullrequestreview-39861108",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5a0f2aa7-55ed-4d48-b466-c0cf6e72c80b",
        "parentId" : null,
        "authorId" : "b1ad4056-936e-4ce6-ab7b-55870c4e6024",
        "body" : "+1 to this change",
        "createdAt" : "2017-05-23T20:35:46Z",
        "updatedAt" : "2017-05-31T07:32:56Z",
        "lastEditedBy" : "b1ad4056-936e-4ce6-ab7b-55870c4e6024",
        "tags" : [
        ]
      }
    ],
    "commit" : "8442a118ea91c1ccb6a4b2d1505359732608b5cf",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +517,521 @@func shouldGetNewPrinterForMapping(printer printers.ResourcePrinter, lastMapping, mapping *meta.RESTMapping) bool {\n\treturn printer == nil || lastMapping == nil || mapping == nil || mapping.Resource != lastMapping.Resource\n}"
  },
  {
    "id" : "2774f0fb-4f73-4b33-8e8f-d0b74de06ae0",
    "prId" : 42369,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/42369#pullrequestreview-24857259",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2a18083a-8917-4905-9607-16012b95dc97",
        "parentId" : null,
        "authorId" : "ad267631-96d1-4bad-b913-e8d6342e65a2",
        "body" : "Will `filteredResourceCount` ever be different than zero?",
        "createdAt" : "2017-03-02T21:10:21Z",
        "updatedAt" : "2017-03-02T21:10:21Z",
        "lastEditedBy" : "ad267631-96d1-4bad-b913-e8d6342e65a2",
        "tags" : [
        ]
      },
      {
        "id" : "7c3723f0-83c1-4b64-b278-12a165bca421",
        "parentId" : "2a18083a-8917-4905-9607-16012b95dc97",
        "authorId" : "ad267631-96d1-4bad-b913-e8d6342e65a2",
        "body" : "Ah just saw line 454.",
        "createdAt" : "2017-03-02T21:12:43Z",
        "updatedAt" : "2017-03-02T21:12:43Z",
        "lastEditedBy" : "ad267631-96d1-4bad-b913-e8d6342e65a2",
        "tags" : [
        ]
      },
      {
        "id" : "7c3b6fb1-1d9b-48ba-a46b-6c1f17cf1f4e",
        "parentId" : "2a18083a-8917-4905-9607-16012b95dc97",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Yes, in this block the for loop above increments it.",
        "createdAt" : "2017-03-02T22:10:31Z",
        "updatedAt" : "2017-03-02T22:10:31Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "34e4337e574e6fe3caa461e36328921f5042f8f4",
    "line" : 145,
    "diffHunk" : "@@ -1,1 +497,501 @@\t}\n\tw.Flush()\n\tcmdutil.PrintFilterCount(errOut, len(objs), filteredResourceCount, len(allErrs), \"\", filterOpts, options.IgnoreNotFound)\n\treturn utilerrors.NewAggregate(allErrs)\n}"
  },
  {
    "id" : "74557a5d-3fc7-4e55-9f0a-3c5d507e7cbb",
    "prId" : 42216,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/42216#pullrequestreview-24251495",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "323f77c0-1c11-431f-8edf-1ae7010084dc",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "If I'm reading correctly, doesn't this remove the filter if I run `kubectl get svc/foo pods`?",
        "createdAt" : "2017-02-28T14:32:42Z",
        "updatedAt" : "2017-03-01T00:19:40Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "ea451e78-e551-4623-af50-068c443624b5",
        "parentId" : "323f77c0-1c11-431f-8edf-1ae7010084dc",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "It does, but that's not allowed.",
        "createdAt" : "2017-02-28T14:36:13Z",
        "updatedAt" : "2017-03-01T00:19:40Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "bace93743812338c8f7ba92a690cc14b63e8d7cc",
    "line" : 61,
    "diffHunk" : "@@ -1,1 +307,311 @@\t\treturn err\n\t}\n\tif r.TargetsSingleItems() {\n\t\tfilterFuncs = nil\n\t}"
  },
  {
    "id" : "c9281cf0-1edd-44cb-86d4-863b17d2d3b1",
    "prId" : 36085,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/36085#pullrequestreview-7083037",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "37cf3606-76f8-4edc-9566-55bf35bb6991",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "This looks nasty, but it serializes correctly and `v1.List` does not serialize correctly.  :(\n",
        "createdAt" : "2016-11-02T19:28:11Z",
        "updatedAt" : "2016-11-04T13:05:00Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "ca2262c9-270b-449b-a7fc-07b1298b3f23",
        "parentId" : "37cf3606-76f8-4edc-9566-55bf35bb6991",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Doesn't this lose resourceVersion?\n",
        "createdAt" : "2016-11-03T17:44:54Z",
        "updatedAt" : "2016-11-04T13:05:00Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "b71ffc34-5c1c-4651-a28a-f3a1908fb13f",
        "parentId" : "37cf3606-76f8-4edc-9566-55bf35bb6991",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "> Doesn't this lose resourceVersion?\n\nWill fix.\n",
        "createdAt" : "2016-11-03T18:20:20Z",
        "updatedAt" : "2016-11-04T13:05:00Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "18e76e44-5393-46ad-a32c-6ded2198ddc1",
        "parentId" : "37cf3606-76f8-4edc-9566-55bf35bb6991",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "Actually, turns out HEAD doesn't preserve the resourceversion.\n",
        "createdAt" : "2016-11-03T19:16:18Z",
        "updatedAt" : "2016-11-04T13:05:00Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "8d13348f-0347-4863-9bbf-a53efd7d1792",
        "parentId" : "37cf3606-76f8-4edc-9566-55bf35bb6991",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "or selflink\n",
        "createdAt" : "2016-11-03T19:16:25Z",
        "updatedAt" : "2016-11-04T13:05:00Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "61673c4b39606fc7e1de9a3cdd4ff5aaaebc0f31",
    "line" : null,
    "diffHunk" : "@@ -1,1 +355,359 @@\t\t\t// take the filtered items and create a new list for display\n\t\t\tlist := &runtime.UnstructuredList{\n\t\t\t\tObject: map[string]interface{}{\n\t\t\t\t\t\"kind\":       \"List\",\n\t\t\t\t\t\"apiVersion\": \"v1\","
  },
  {
    "id" : "e733c52e-c9cc-4633-920f-c4f88f75591f",
    "prId" : 33942,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/33942#pullrequestreview-2543283",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8cf581e6-fac9-4595-8402-2f971abdecf7",
        "parentId" : null,
        "authorId" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "body" : "Do you want to add a 2nd commit to return the result of this call instead of nil, as you suggested in the previous PR?\n",
        "createdAt" : "2016-10-03T15:23:02Z",
        "updatedAt" : "2016-10-03T16:55:03Z",
        "lastEditedBy" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "tags" : [
        ]
      }
    ],
    "commit" : "40b7fabaf25858bbef6bc492ab0e5a472784d8da",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +269,273 @@\t\tfilteredResourceCount = 0\n\t\tintr := interrupt.New(nil, w.Stop)\n\t\tintr.Run(func() error {\n\t\t\t_, err := watch.Until(0, w, func(e watch.Event) (bool, error) {\n\t\t\t\tif !isList && first {"
  },
  {
    "id" : "6baef8eb-5af7-4599-8625-655ce46e2715",
    "prId" : 27392,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "841d1e3c-e20f-41f0-af0e-fc910fd31090",
        "parentId" : null,
        "authorId" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "body" : "Clarify what watching from rv 0 means and what problem it solves?\n",
        "createdAt" : "2016-08-01T18:53:08Z",
        "updatedAt" : "2016-08-02T15:28:24Z",
        "lastEditedBy" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "tags" : [
        ]
      }
    ],
    "commit" : "461faae3672c68e7c5065a1bd1f2b5fdeba6ec81",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +184,188 @@\t\t}\n\n\t\t// watching from resourceVersion 0, starts the watch at ~now and\n\t\t// will return an initial watch event.  Starting form ~now, rather\n\t\t// the rv of the object will insure that we start the watch from"
  },
  {
    "id" : "227df486-e3f1-4f65-ae41-eb1fdfb47a05",
    "prId" : 26686,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6eae8a5a-4bc7-400e-ac5a-32146f294cd4",
        "parentId" : null,
        "authorId" : "cbc6f9be-438f-48a0-9b4c-f20d83ad78f7",
        "body" : "@smarterclayton \n\n> Printing out allErrs as a series of error lines would be consistent with what we do with Create.\n\nBy returning an `Aggregate` of the errors to `cmdUtil.CheckErr` after `RunGet` is done, `cmdUtil.CheckErr` ends up printing the series of errors in separate lines  per [MultipleErrors()](https://github.com/kubernetes/kubernetes/blob/master/pkg/kubectl/cmd/util/helpers.go#L139-L145)\n\nAm I missing something?\n",
        "createdAt" : "2016-06-02T20:49:04Z",
        "updatedAt" : "2016-06-03T04:46:26Z",
        "lastEditedBy" : "cbc6f9be-438f-48a0-9b4c-f20d83ad78f7",
        "tags" : [
        ]
      },
      {
        "id" : "cee41885-b751-46f0-801c-078f79b5b03e",
        "parentId" : "6eae8a5a-4bc7-400e-ac5a-32146f294cd4",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "You split the code into two chunks (one that uses Visit, and one that doesn't).  The previous code captured errors - nothing prevents them from being printed out without changing the block above to use Visit().\n",
        "createdAt" : "2016-06-02T20:53:36Z",
        "updatedAt" : "2016-06-03T04:46:26Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "e47bd76e-a08b-44e3-bd6f-bcaf9244a8f1",
        "parentId" : "6eae8a5a-4bc7-400e-ac5a-32146f294cd4",
        "authorId" : "cbc6f9be-438f-48a0-9b4c-f20d83ad78f7",
        "body" : "The split you're referring to of using Visit and non-Visit was for the handling of the `generic` output case - I've since changed that in my most recent push so that they both make use of `Infos()`.\n\nIf I'm understanding you correctly, you're referring to the block of code _after_ the generic case, and how that should be altered to use Visit() to handle the printing correctly. Did I get that right?\n",
        "createdAt" : "2016-06-02T21:23:15Z",
        "updatedAt" : "2016-06-03T04:46:26Z",
        "lastEditedBy" : "cbc6f9be-438f-48a0-9b4c-f20d83ad78f7",
        "tags" : [
        ]
      },
      {
        "id" : "ea5e302a-5316-4ea8-be75-841cd2ca05c0",
        "parentId" : "6eae8a5a-4bc7-400e-ac5a-32146f294cd4",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Ok, so looking at the latest my concern is that this is harder to understand than the previous code - all that is different is the IntoSingular(), and you could use a block at the end to check whether this was singular before returning.  I think collapsing them back down into one would be clearer.\n\nLooking at this more,  I just noticed that you were keying on Recursive - but Recursive should be a detail inside of resource builder, and specifying recursive should automatically set singular to false (inside of the resource.Builder code).  The intent of singular was to resolve all the inputs down into \"did the user give us a single object or not\" and passing recursive is a definite \"not\".\n",
        "createdAt" : "2016-06-02T21:31:29Z",
        "updatedAt" : "2016-06-03T04:46:26Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "4409eed57f77cb4559567cd7a11e994106b9d170",
    "line" : 55,
    "diffHunk" : "@@ -1,1 +324,328 @@\t\t}\n\t}\n\treturn utilerrors.NewAggregate(allErrs)\n}"
  },
  {
    "id" : "bd53a7e5-b2d8-4429-8d56-723e1a5e3471",
    "prId" : 25181,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3a07d4fd-6f14-4e50-ae57-b683c78d0651",
        "parentId" : null,
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "@smarterclayton you had opinions on list\n",
        "createdAt" : "2016-05-06T15:06:53Z",
        "updatedAt" : "2016-05-06T15:06:53Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      },
      {
        "id" : "056669e0-e1cc-427e-8ee7-2908f3b5f724",
        "parentId" : "3a07d4fd-6f14-4e50-ae57-b683c78d0651",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "It's fine for now.  Merge away.\n",
        "createdAt" : "2016-05-06T22:45:12Z",
        "updatedAt" : "2016-05-06T22:45:12Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "181627e36c85b31549a276ddf93df48888ab39d4",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +93,97 @@\t\t\tcmdutil.CheckErr(err)\n\t\t},\n\t\tSuggestFor: []string{\"list\", \"ps\"},\n\t\tValidArgs:  validArgs,\n\t\tArgAliases: argAliases,"
  },
  {
    "id" : "90168da2-231a-43cd-8a4a-064a99986be9",
    "prId" : 23673,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "15d024eb-0897-4f04-b2e3-241c3c8cf20a",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "This command changed to update error handling?\n",
        "createdAt" : "2016-04-27T16:24:44Z",
        "updatedAt" : "2016-05-02T03:27:57Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "cd00b5c1-9018-48af-9b62-5a17c1db9049",
        "parentId" : "15d024eb-0897-4f04-b2e3-241c3c8cf20a",
        "authorId" : "cbc6f9be-438f-48a0-9b4c-f20d83ad78f7",
        "body" : "Yes, that is correct. `kubectl get` was refactored to use `Visit()` rather than `Infos()`, so that we can aggregate the errors when processing a dir recursively.\n",
        "createdAt" : "2016-04-27T19:23:00Z",
        "updatedAt" : "2016-05-02T03:27:57Z",
        "lastEditedBy" : "cbc6f9be-438f-48a0-9b4c-f20d83ad78f7",
        "tags" : [
        ]
      }
    ],
    "commit" : "999c8e211e15aedfd7f6fd6e2460cde4a02dbfff",
    "line" : 80,
    "diffHunk" : "@@ -1,1 +276,280 @@\t\t\tobjs[ix], err = infos[ix].Mapping.ConvertToVersion(infos[ix].Object, version.String())\n\t\t\tif err != nil {\n\t\t\t\tallErrs = append(allErrs, err)\n\t\t\t\tcontinue\n\t\t\t}"
  },
  {
    "id" : "60dcabdf-7d44-4021-9009-9aff8ee9cefe",
    "prId" : 21694,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "12bdacef-c4c2-4ddf-b226-bb07b119aa2d",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "at first glance, rather than converting into versions objects, here, I _think_ would expect to pass the output version to `SortObjects`... it is taking a fieldInput, which is not really meaningful unless paired with a group version. In `SortObjects`, can we decode to the specified groupversion? I'd like @smarterclayton's take on that as well...\n",
        "createdAt" : "2016-02-22T18:37:00Z",
        "updatedAt" : "2016-03-04T21:15:47Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "b3631c43-e4c1-423e-b5e7-be603050ee4c",
        "parentId" : "12bdacef-c4c2-4ddf-b226-bb07b119aa2d",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "I would expect us to be sorting based on the JSON and the field path\nqualifier only, or at minimum on the map[string]interface{}.  It's a\nriskier change though.\n\nOn Mon, Feb 22, 2016 at 1:37 PM, Jordan Liggitt notifications@github.com\nwrote:\n\n> In pkg/kubectl/cmd/get.go\n> https://github.com/kubernetes/kubernetes/pull/21694#discussion_r53669745\n> :\n> \n> > +\n> > -       clientConfig, err := f.ClientConfig()\n> > -       if err != nil {\n> > -           return err\n> > -       }\n> >   +\n> > -       version, err := cmdutil.OutputVersion(cmd, clientConfig.GroupVersion)\n> > -       if err != nil {\n> > -           return err\n> > -       }\n> >   +\n> > -       objs, err = resource.AsVersionedObjects(infos, version.String(), f.JSONEncoder())\n> > -       if err != nil {\n> > -           return err\n> > -       }\n> >   +\n> >       // TODO: questionable\n> >       if sorter, err = kubectl.SortObjects(f.Decoder(true), objs, sorting); err != nil {\n> \n> at first glance, rather than converting into versions objects, here, I\n> _think_ would expect to pass the output version to SortObjects... it is\n> taking a fieldInput, which is not really meaningful unless paired with a\n> group version. In SortObjects, can we decode to the specified\n> groupversion? I'd like @smarterclayton https://github.com/smarterclayton's\n> take on that as well...\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/kubernetes/kubernetes/pull/21694/files#r53669745.\n",
        "createdAt" : "2016-02-23T02:06:51Z",
        "updatedAt" : "2016-03-04T21:15:47Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "a04dfc3b-8d17-4f99-98a0-f2aa3e779dae",
        "parentId" : "12bdacef-c4c2-4ddf-b226-bb07b119aa2d",
        "authorId" : "6252ac4b-6b9e-4dee-8931-ca3b934d52fc",
        "body" : "@liggitt I am looking into what you suggested and i think it should be possible. The only issue with that I see is that once we decode objects into specified groupversion inside SortObjects, after sorting, any caller of sort-by would have converted versioned objects and it would require handling printing of those objects in the similar way as it is done currently in kubectl get. Because as I understand, it is not possible to print versioned objects directly but only internal types objects.\n",
        "createdAt" : "2016-02-23T15:36:38Z",
        "updatedAt" : "2016-03-04T21:15:47Z",
        "lastEditedBy" : "6252ac4b-6b9e-4dee-8931-ca3b934d52fc",
        "tags" : [
        ]
      },
      {
        "id" : "619ec4ed-b324-48ef-bd04-0550d816cc96",
        "parentId" : "12bdacef-c4c2-4ddf-b226-bb07b119aa2d",
        "authorId" : "6252ac4b-6b9e-4dee-8931-ca3b934d52fc",
        "body" : "Or another way might be to convert sorted and decoded obejcts back to their internal types and then return them. Although I am not sure how to handle this,  \n",
        "createdAt" : "2016-02-23T15:39:21Z",
        "updatedAt" : "2016-03-04T21:15:47Z",
        "lastEditedBy" : "6252ac4b-6b9e-4dee-8931-ca3b934d52fc",
        "tags" : [
        ]
      }
    ],
    "commit" : "be06003e6bab079f3b5cf8e5da5e44def16b99be",
    "line" : null,
    "diffHunk" : "@@ -1,1 +267,271 @@\n\t\t// TODO: questionable\n\t\tif sorter, err = kubectl.SortObjects(f.Decoder(true), objs, sorting); err != nil {\n\t\t\treturn err\n\t\t}"
  },
  {
    "id" : "a2c140e0-0615-4fbe-9c44-a8c510365153",
    "prId" : 21694,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7fd92a1d-a7b4-4766-9dc7-481e2b94faca",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Is this still needed? Don't you want to print out a versioned object anyway?\n",
        "createdAt" : "2016-03-01T00:31:06Z",
        "updatedAt" : "2016-03-04T21:15:47Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "9fb8f6b0-8183-46f2-9c82-4596b9964244",
        "parentId" : "7fd92a1d-a7b4-4766-9dc7-481e2b94faca",
        "authorId" : "6252ac4b-6b9e-4dee-8931-ca3b934d52fc",
        "body" : "How to print versioned objects? Whenever I try to print versioned objects, for example v1, I get \n\n```\nerror: unknown type &v1.Pod{TypeMeta:unversioned.TypeMeta{Kind:\"Pod\", APIVersion:\"v1\"},....\n```\n\nComplete error is here: http://fpaste.org/331443/67944711/\n",
        "createdAt" : "2016-03-01T01:09:07Z",
        "updatedAt" : "2016-03-04T21:15:47Z",
        "lastEditedBy" : "6252ac4b-6b9e-4dee-8931-ca3b934d52fc",
        "tags" : [
        ]
      },
      {
        "id" : "8dd161e8-39f6-4fd2-9e4b-87aca3aa157e",
        "parentId" : "7fd92a1d-a7b4-4766-9dc7-481e2b94faca",
        "authorId" : "6252ac4b-6b9e-4dee-8931-ca3b934d52fc",
        "body" : "And the reason seems to be that all object printers in pkg/kubectl/resource_printer.c seem to be operating on internal types unless I am missing something.\n",
        "createdAt" : "2016-03-01T01:10:40Z",
        "updatedAt" : "2016-03-04T21:15:47Z",
        "lastEditedBy" : "6252ac4b-6b9e-4dee-8931-ca3b934d52fc",
        "tags" : [
        ]
      },
      {
        "id" : "86ff6fa4-8037-4275-9338-196be96bc1fa",
        "parentId" : "7fd92a1d-a7b4-4766-9dc7-481e2b94faca",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "@lavalamp all the registered column printers and describers work from internal types. \n",
        "createdAt" : "2016-03-01T01:13:59Z",
        "updatedAt" : "2016-03-04T21:15:47Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "e0babd81-7530-43ee-8711-e8d8e0d3720b",
        "parentId" : "7fd92a1d-a7b4-4766-9dc7-481e2b94faca",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "OK\n",
        "createdAt" : "2016-03-01T01:57:25Z",
        "updatedAt" : "2016-03-04T21:15:47Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "be06003e6bab079f3b5cf8e5da5e44def16b99be",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +280,284 @@\tfor ix := range objs {\n\t\tvar mapping *meta.RESTMapping\n\t\tvar original runtime.Object\n\t\tif sorter != nil {\n\t\t\tmapping = infos[sorter.OriginalPosition(ix)].Mapping"
  },
  {
    "id" : "afb5fcd6-f88c-4a91-9542-eef391cabbf2",
    "prId" : 15499,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "205a692a-bf58-4ab2-a9d3-19f4ebf2042b",
        "parentId" : null,
        "authorId" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "body" : "Why do you pass the TabWriter if it's a HumanReadablePrinter vs out if it's not?\n",
        "createdAt" : "2015-10-14T17:19:28Z",
        "updatedAt" : "2015-10-14T17:19:28Z",
        "lastEditedBy" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "tags" : [
        ]
      },
      {
        "id" : "68279f0b-a410-4b06-a72b-56b27be47d24",
        "parentId" : "205a692a-bf58-4ab2-a9d3-19f4ebf2042b",
        "authorId" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "body" : "In what situations would it not be a HumanReadablePrinter?\n",
        "createdAt" : "2015-10-14T17:24:49Z",
        "updatedAt" : "2015-10-14T17:24:49Z",
        "lastEditedBy" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "tags" : [
        ]
      },
      {
        "id" : "9790205c-95af-4175-b383-c869192d4413",
        "parentId" : "205a692a-bf58-4ab2-a9d3-19f4ebf2042b",
        "authorId" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "body" : "There are lots of other printers, such as YAMLPrinter, JSONPrinter, etc. See https://github.com/kubernetes/kubernetes/blob/master/pkg/kubectl/resource_printer.go#L61. Only HumanReadablePrinter needs a tabwriter to align its table output. \n",
        "createdAt" : "2015-10-14T17:54:10Z",
        "updatedAt" : "2015-10-14T17:54:10Z",
        "lastEditedBy" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "tags" : [
        ]
      },
      {
        "id" : "4b0a3d1e-e7c9-4161-a8fc-b06ac257a7f3",
        "parentId" : "205a692a-bf58-4ab2-a9d3-19f4ebf2042b",
        "authorId" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "body" : "Cool, thanks!\n",
        "createdAt" : "2015-10-14T17:55:36Z",
        "updatedAt" : "2015-10-14T17:55:36Z",
        "lastEditedBy" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "tags" : [
        ]
      },
      {
        "id" : "c6286446-da4e-415a-a0d3-c347fd1a6c3d",
        "parentId" : "205a692a-bf58-4ab2-a9d3-19f4ebf2042b",
        "authorId" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "body" : "Users use `-o` or `--output` to specify different output format (use different printers). \n",
        "createdAt" : "2015-10-14T17:56:09Z",
        "updatedAt" : "2015-10-14T17:56:09Z",
        "lastEditedBy" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "tags" : [
        ]
      }
    ],
    "commit" : "b9c8b76b6b2355001dc1a925263043b84b3c4586",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +238,242 @@\t\t}\n\t\tif _, found := printer.(*kubectl.HumanReadablePrinter); found {\n\t\t\treturn printer.PrintObj(r.Object, w)\n\t\t}\n\t\treturn printer.PrintObj(r.Object, out)"
  },
  {
    "id" : "b79c8ef5-5618-4b5a-bd6b-fb4251e42ac2",
    "prId" : 12511,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bc175799-a69e-4567-b60f-0ab580c61f7a",
        "parentId" : null,
        "authorId" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "body" : "Check the length of `infos` first. \n",
        "createdAt" : "2015-08-11T18:53:56Z",
        "updatedAt" : "2015-08-13T06:16:44Z",
        "lastEditedBy" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "tags" : [
        ]
      },
      {
        "id" : "96cab2e9-6805-4644-aed3-5cb37556439a",
        "parentId" : "bc175799-a69e-4567-b60f-0ab580c61f7a",
        "authorId" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "body" : "Actually, why not use the old way of retrieving `mapping`?\n",
        "createdAt" : "2015-08-11T21:09:01Z",
        "updatedAt" : "2015-08-13T06:16:44Z",
        "lastEditedBy" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "tags" : [
        ]
      },
      {
        "id" : "52ad0603-a58e-4526-b46d-b447fd560e26",
        "parentId" : "bc175799-a69e-4567-b60f-0ab580c61f7a",
        "authorId" : "72935ebf-c497-440a-ac8d-70d86560a131",
        "body" : "Because Using the old way of retrieving mapping returned an error \"a resource mapping could not be loaded from *resource.FileVisitor\". I think we don't need to check the length of infos firstly, the precondition is  \"length of infos is bigger than 0\". Such as, \"patch.go\" and \"func (r *Result) Watch(resourceVersion string) (watch.Interface, error)\" don't check the length of infos too. What's your point?\n",
        "createdAt" : "2015-08-12T09:31:26Z",
        "updatedAt" : "2015-08-13T06:16:44Z",
        "lastEditedBy" : "72935ebf-c497-440a-ac8d-70d86560a131",
        "tags" : [
        ]
      },
      {
        "id" : "e7b49952-2b85-4954-acc1-43d4cf9666aa",
        "parentId" : "bc175799-a69e-4567-b60f-0ab580c61f7a",
        "authorId" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "body" : "Since it expects a single resource, we can first make sure length doesn't exceed `1`, like what we did here:  https://github.com/kubernetes/kubernetes/blob/master/pkg/kubectl/cmd/expose.go#L105\n",
        "createdAt" : "2015-08-12T20:24:17Z",
        "updatedAt" : "2015-08-13T06:16:44Z",
        "lastEditedBy" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "tags" : [
        ]
      },
      {
        "id" : "0380d0e6-9cbb-4cc0-894c-e2d64415544e",
        "parentId" : "bc175799-a69e-4567-b60f-0ab580c61f7a",
        "authorId" : "72935ebf-c497-440a-ac8d-70d86560a131",
        "body" : "I found the length is checked in https://github.com/kubernetes/kubernetes/blob/master/pkg/kubectl/resource/result.go#L197  \nBut I add the check here too, let the error be returned quickly. What do you think?\n",
        "createdAt" : "2015-08-13T06:48:54Z",
        "updatedAt" : "2015-08-13T06:48:54Z",
        "lastEditedBy" : "72935ebf-c497-440a-ac8d-70d86560a131",
        "tags" : [
        ]
      }
    ],
    "commit" : "18a140092822df55ab5e2aefa5bb5e3ec20c5293",
    "line" : null,
    "diffHunk" : "@@ -1,1 +133,137 @@\t\t\treturn fmt.Errorf(\"watch is only supported on a single resource - %d resources were found\", len(infos))\n\t\t}\n\t\tinfo := infos[0]\n\t\tmapping := info.ResourceMapping()\n\t\tprinter, err := f.PrinterForMapping(cmd, mapping, allNamespaces)"
  },
  {
    "id" : "71be810c-3d46-499f-822f-45f9defeb42f",
    "prId" : 12511,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4e35130f-0501-406b-ab5f-9217c153153b",
        "parentId" : null,
        "authorId" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "body" : "Why do we need `Latest()` here?\n",
        "createdAt" : "2015-08-11T18:56:30Z",
        "updatedAt" : "2015-08-13T06:16:44Z",
        "lastEditedBy" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "tags" : [
        ]
      },
      {
        "id" : "93de7535-8df6-4a43-8679-5f4a018faf59",
        "parentId" : "4e35130f-0501-406b-ab5f-9217c153153b",
        "authorId" : "72935ebf-c497-440a-ac8d-70d86560a131",
        "body" : "If we don't using Latest() and using file here, the runtime.Object is decoded from the file, not from a server. so using Latest() here to get runtime.Object from a server. What's your advice?\n",
        "createdAt" : "2015-08-12T09:45:07Z",
        "updatedAt" : "2015-08-13T06:16:44Z",
        "lastEditedBy" : "72935ebf-c497-440a-ac8d-70d86560a131",
        "tags" : [
        ]
      },
      {
        "id" : "80517227-c9a8-4191-99e7-c5090217a29e",
        "parentId" : "4e35130f-0501-406b-ab5f-9217c153153b",
        "authorId" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "body" : "I see. Thanks.\n",
        "createdAt" : "2015-08-12T20:24:48Z",
        "updatedAt" : "2015-08-13T06:16:44Z",
        "lastEditedBy" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "tags" : [
        ]
      }
    ],
    "commit" : "18a140092822df55ab5e2aefa5bb5e3ec20c5293",
    "line" : 58,
    "diffHunk" : "@@ -1,1 +121,125 @@\t\t\tResourceTypeOrNameArgs(true, args...).\n\t\t\tSingleResourceType().\n\t\t\tLatest().\n\t\t\tDo()\n\t\tif err != nil {"
  },
  {
    "id" : "29fc7246-8f80-4fd6-a994-8d52bce5f602",
    "prId" : 10491,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4330c9ae-542d-4a02-9fdb-6fc1b49d0ab3",
        "parentId" : null,
        "authorId" : "8076e56f-768c-4f89-90e6-045ef34e1525",
        "body" : "Can you add an example of wide output to `get_example`?\n",
        "createdAt" : "2015-06-30T00:32:36Z",
        "updatedAt" : "2015-06-30T21:07:19Z",
        "lastEditedBy" : "8076e56f-768c-4f89-90e6-045ef34e1525",
        "tags" : [
        ]
      }
    ],
    "commit" : "682734bcc776a473a31b14920cc55f34c671a91e",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +73,77 @@\t\tShort:   \"Display one or many resources\",\n\t\tLong:    get_long,\n\t\tExample: get_example,\n\t\tRun: func(cmd *cobra.Command, args []string) {\n\t\t\terr := RunGet(f, out, cmd, args)"
  },
  {
    "id" : "a4652a5a-6c04-40e7-8075-3ad6c9ae2d1c",
    "prId" : 9522,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d5e32808-b401-4c79-a491-7edd965da75a",
        "parentId" : null,
        "authorId" : "aa0ae875-2718-4d41-836b-db4cfbf596c8",
        "body" : "(aka 'svc')\n",
        "createdAt" : "2015-06-11T02:48:11Z",
        "updatedAt" : "2015-06-11T02:48:11Z",
        "lastEditedBy" : "aa0ae875-2718-4d41-836b-db4cfbf596c8",
        "tags" : [
        ]
      },
      {
        "id" : "79cdccd7-6fcc-4b9c-afb8-419fe7aaf53c",
        "parentId" : "d5e32808-b401-4c79-a491-7edd965da75a",
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "this is marked as 'deprecated will remove before 1.0' in https://github.com/GoogleCloudPlatform/kubernetes/blob/5520386b180d3ddc4fa7b7dfe6f52642cc0c25f3/pkg/kubectl/kubectl.go#L115 so I didn't include it\n",
        "createdAt" : "2015-06-11T03:07:24Z",
        "updatedAt" : "2015-06-11T03:07:24Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      },
      {
        "id" : "33c13c1b-2b49-4922-9ceb-c168dae16a91",
        "parentId" : "d5e32808-b401-4c79-a491-7edd965da75a",
        "authorId" : "aa0ae875-2718-4d41-836b-db4cfbf596c8",
        "body" : "Oh, I thought the deprecation was only for 'se'\n",
        "createdAt" : "2015-06-11T03:11:52Z",
        "updatedAt" : "2015-06-11T03:11:52Z",
        "lastEditedBy" : "aa0ae875-2718-4d41-836b-db4cfbf596c8",
        "tags" : [
        ]
      },
      {
        "id" : "a5f2866f-f4ed-402d-8c31-79cfdb595c07",
        "parentId" : "d5e32808-b401-4c79-a491-7edd965da75a",
        "authorId" : "ac5c0aff-8751-4cd3-be1e-90ff876786a7",
        "body" : "@hurf yeah, looking at the commit where the comment was added (https://github.com/GoogleCloudPlatform/kubernetes/commit/09dcec57fb6a2956b815efbd448afea75529a29a), it seems like that was the intent\n",
        "createdAt" : "2015-06-16T20:24:02Z",
        "updatedAt" : "2015-06-16T20:24:02Z",
        "lastEditedBy" : "ac5c0aff-8751-4cd3-be1e-90ff876786a7",
        "tags" : [
        ]
      }
    ],
    "commit" : "b259c873b76cb82df1df8d5679b744c702ef53e5",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +101,105 @@   * pods (aka 'po')\n   * replicationcontrollers (aka 'rc')\n   * services\n   * nodes (aka 'no')\n   * events (aka 'ev')"
  },
  {
    "id" : "379de570-eecd-49f0-9231-e55ae17a125a",
    "prId" : 6791,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8b116583-1d79-4efc-baf9-0ef6f8837f4d",
        "parentId" : null,
        "authorId" : "8076e56f-768c-4f89-90e6-045ef34e1525",
        "body" : "This seems fine for bash completions, but it's not a complete list, as it doesn't include 'RESOURCE/NAME' args. Not a problem as they aren't used for validation, but we might want to note that in a comment, in case validation is added later.\n",
        "createdAt" : "2015-04-14T17:08:17Z",
        "updatedAt" : "2015-04-14T17:08:17Z",
        "lastEditedBy" : "8076e56f-768c-4f89-90e6-045ef34e1525",
        "tags" : [
        ]
      },
      {
        "id" : "27b0a6be-23e6-48ea-8fb0-01d6a67b6810",
        "parentId" : "8b116583-1d79-4efc-baf9-0ef6f8837f4d",
        "authorId" : "766f642e-1622-4803-803b-05ce306fc30e",
        "body" : "maybe instead of validArgs, i should have called it suggestedArgs, in cobra?\n",
        "createdAt" : "2015-04-14T17:13:06Z",
        "updatedAt" : "2015-04-14T17:13:06Z",
        "lastEditedBy" : "766f642e-1622-4803-803b-05ce306fc30e",
        "tags" : [
        ]
      },
      {
        "id" : "9e2e3593-3aaa-46a1-820f-ccda55c8ea88",
        "parentId" : "8b116583-1d79-4efc-baf9-0ef6f8837f4d",
        "authorId" : "8076e56f-768c-4f89-90e6-045ef34e1525",
        "body" : "Maybe, if the primary use is suggesting completions. I think this is fine, just the wording of the [comment](https://github.com/spf13/cobra/blob/master/command.go#L47) on ValidArgs made me think this was expected to be a complete list.\n",
        "createdAt" : "2015-04-14T17:24:09Z",
        "updatedAt" : "2015-04-14T17:24:09Z",
        "lastEditedBy" : "8076e56f-768c-4f89-90e6-045ef34e1525",
        "tags" : [
        ]
      },
      {
        "id" : "273a8861-d8ad-45e2-9721-cecfc47ca07c",
        "parentId" : "8b116583-1d79-4efc-baf9-0ef6f8837f4d",
        "authorId" : "766f642e-1622-4803-803b-05ce306fc30e",
        "body" : "There was definitely thought, in the back of my mind, of making cobra enforce validity one day...\n\nThese completions will suggest `kubectl get pods $NAME`, not `kubectl get pods/$NAME`.  Do you think I should switch from a space separator to a / separator in my completions.\n\nThere is obviously no way to know, at compile time, all of the resource/name options...   So maybe the potential someday cobra validOptions validator would have to be a prefix validator, or an over writable validator function...\n",
        "createdAt" : "2015-04-14T17:37:06Z",
        "updatedAt" : "2015-04-14T17:37:06Z",
        "lastEditedBy" : "766f642e-1622-4803-803b-05ce306fc30e",
        "tags" : [
        ]
      },
      {
        "id" : "4ff302a5-7ece-45e2-b12d-fd75c45453ff",
        "parentId" : "8b116583-1d79-4efc-baf9-0ef6f8837f4d",
        "authorId" : "8076e56f-768c-4f89-90e6-045ef34e1525",
        "body" : "IIRC `pods/$NAME` format was added for xargs support, so it's mainly for power-users/scripting anyway. Having bash completions suggest the `kubectl get pods $NAME` format sg. If/when cobra enforces validity, we can revisit this.\n",
        "createdAt" : "2015-04-14T19:10:34Z",
        "updatedAt" : "2015-04-14T19:10:54Z",
        "lastEditedBy" : "8076e56f-768c-4f89-90e6-045ef34e1525",
        "tags" : [
        ]
      }
    ],
    "commit" : "c75ecbd8e3fba23ba0c79a1851f3fbf835b334ee",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +73,77 @@\t\t\tcmdutil.CheckErr(err)\n\t\t},\n\t\tValidArgs: validArgs,\n\t}\n\tcmdutil.AddPrinterFlags(cmd)"
  },
  {
    "id" : "8f37fef4-9f45-47f9-9ad4-11af5342a331",
    "prId" : 6377,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "461b3f9d-65f3-4f5f-af9d-56b54b3d460e",
        "parentId" : null,
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "Please convert the example to v1beta3. .status.phase.\n",
        "createdAt" : "2015-04-03T22:45:05Z",
        "updatedAt" : "2015-04-03T22:45:05Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      }
    ],
    "commit" : "f2b72931fc55cbd4ce767e64a8645193767ea788",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +49,53 @@\n// Return only the status value of the specified pod.\n$ kubectl get -o template web-pod-13je7 --template={{.currentState.status}} --api-version=v1beta1\n\n// List all replication controllers and services together in ps output format."
  },
  {
    "id" : "fa6fb5f5-0bbc-4b89-9897-e4161de5249d",
    "prId" : 3004,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "614b7f9b-1fdd-4361-8bbd-81d70e9d7e0c",
        "parentId" : null,
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "FYI: I'd eventually like it to be possible to invoke all of the business logic of kubectl via library call, not just through the command line. That will facilitate programmatic use of Kubernetes, such as to manage dataflow pipelines, CI pipelines, background worker pools, sophisticated rollouts, etc.\n\nCommand-line processing obviously has to be coupled to cobra and the kubectl command. Input/output should be less coupled. All the actual processing and client calls should be completely independently callable.\n\nThis particular batch of PRs don't need to be changed, but please keep this in mind as we evolve kubectl functionality.\n",
        "createdAt" : "2015-01-09T17:29:33Z",
        "updatedAt" : "2015-01-09T18:30:20Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "6827d62c-7ac9-497e-ba83-ce5cb27c036e",
        "parentId" : "614b7f9b-1fdd-4361-8bbd-81d70e9d7e0c",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Yeah, builder has two types of arguments `*Arg/*Param` which indicates it comes from a command line argument (so different failure rules apply), and programmatic \"*\" calls.  The error messages on Do() and Visit() should eventually distinguish between those cases, so you get a different error message when you specify `FilenameParam(...)` vs `ResourceTypeOrArgs` vs `URL` or `Stream`.\n",
        "createdAt" : "2015-01-09T18:25:11Z",
        "updatedAt" : "2015-01-09T18:30:20Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "2151afe33439a84a1eca1eadd7b0a05ae3e3d462",
    "line" : null,
    "diffHunk" : "@@ -1,1 +137,141 @@\n\t// use the default printer for each object\n\terr = b.Do().Visit(func(r *resource.Info) error {\n\t\tprinter, err := printerForMapping(f, cmd, r.Mapping)\n\t\tif err != nil {"
  },
  {
    "id" : "ddd61f2b-4225-4ea1-9a62-0d3021d4d5cb",
    "prId" : 3004,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4f744eaf-28d0-4185-8aba-57a9e2bdb18c",
        "parentId" : null,
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "@lavalamp note I moved versioning to a wrapped printer so that I could precisely control versioning here.  You may want to take a look at the watch behavior and see whether it still makes sense.\n",
        "createdAt" : "2015-01-09T18:28:45Z",
        "updatedAt" : "2015-01-09T18:30:20Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "b5195bb2-57bf-49a9-9a9b-cf4f6e00c94f",
        "parentId" : "4f744eaf-28d0-4185-8aba-57a9e2bdb18c",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Sorry I didn't see this mention of me. This breaks the template uses in cluster/kube-validate.sh. I'm still trying to figure out what happened here.\n",
        "createdAt" : "2015-01-13T22:47:01Z",
        "updatedAt" : "2015-01-13T22:47:01Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "921eba3a-2d76-4971-a987-dd9e9ce14d12",
        "parentId" : "4f744eaf-28d0-4185-8aba-57a9e2bdb18c",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Which ones?\n\n> On Jan 13, 2015, at 5:47 PM, Daniel Smith notifications@github.com wrote:\n> \n> In pkg/kubectl/cmd/get.go:\n> \n> > -   templateFile := GetFlagString(cmd, \"template\")\n> > -   if len(outputFormat) == 0 && len(templateFile) != 0 {\n> > -       outputFormat = \"template\"\n> > -   }\n> >   +\n> > -   return kubectl.GetPrinter(outputFormat, templateFile)\n> >   +}\n> >   +\n> >   +// printerForMapping returns a printer suitable for displaying the provided resource type.\n> >   +func printerForMapping(f *Factory, cmd *cobra.Command, mapping *meta.RESTMapping) (kubectl.ResourcePrinter, error) {\n> > -   printer, ok, err := printerForCommand(cmd)\n> > -   if err != nil {\n> > -       return nil, err\n> > -   }\n> > -   if ok {\n> > -       printer = kubectl.NewVersionedPrinter(printer, mapping.ObjectConvertor, outputVersion(cmd))\n> >   Sorry I didn't see this mention of me. This breaks the template uses in cluster/kube-validate.sh. I'm still trying to figure out what happened here.\n> \n> —\n> Reply to this email directly or view it on GitHub.\n",
        "createdAt" : "2015-01-13T22:49:37Z",
        "updatedAt" : "2015-01-13T22:49:37Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "acadfd76-6540-4298-97e0-2358c1fd2883",
        "parentId" : "4f744eaf-28d0-4185-8aba-57a9e2bdb18c",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "At least the first one. It's giving either internal structs or v1beta3 structs, not sure yet\n",
        "createdAt" : "2015-01-13T22:51:44Z",
        "updatedAt" : "2015-01-13T22:51:44Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "6ce02624-8164-4877-8b2e-0c6c1d49f7cd",
        "parentId" : "4f744eaf-28d0-4185-8aba-57a9e2bdb18c",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Will be back at my desk in a few minutes\n\n> On Jan 13, 2015, at 5:51 PM, Daniel Smith notifications@github.com wrote:\n> \n> In pkg/kubectl/cmd/get.go:\n> \n> > -   templateFile := GetFlagString(cmd, \"template\")\n> > -   if len(outputFormat) == 0 && len(templateFile) != 0 {\n> > -       outputFormat = \"template\"\n> > -   }\n> >   +\n> > -   return kubectl.GetPrinter(outputFormat, templateFile)\n> >   +}\n> >   +\n> >   +// printerForMapping returns a printer suitable for displaying the provided resource type.\n> >   +func printerForMapping(f *Factory, cmd *cobra.Command, mapping *meta.RESTMapping) (kubectl.ResourcePrinter, error) {\n> > -   printer, ok, err := printerForCommand(cmd)\n> > -   if err != nil {\n> > -       return nil, err\n> > -   }\n> > -   if ok {\n> > -       printer = kubectl.NewVersionedPrinter(printer, mapping.ObjectConvertor, outputVersion(cmd))\n> >   At least the first one. It's giving either internal structs or v1beta3 structs, not sure yet\n> \n> —\n> Reply to this email directly or view it on GitHub.\n",
        "createdAt" : "2015-01-13T22:52:47Z",
        "updatedAt" : "2015-01-13T22:52:47Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "2151afe33439a84a1eca1eadd7b0a05ae3e3d462",
    "line" : 195,
    "diffHunk" : "@@ -1,1 +174,178 @@\t}\n\tif ok {\n\t\tprinter = kubectl.NewVersionedPrinter(printer, mapping.ObjectConvertor, outputVersion(cmd))\n\t} else {\n\t\tprinter, err = f.Printer(cmd, mapping, GetFlagBool(cmd, \"no-headers\"))"
  },
  {
    "id" : "0e316085-7e9a-4da9-9e6d-64e3e39cafc3",
    "prId" : 2447,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "69f14a69-42ae-4334-bbc5-7197f039d404",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Do we need both outputVersion and the mapping? It's ok if we do, but it'd be nice to not need both. Getting to be a lot of parameters.\n",
        "createdAt" : "2014-11-19T02:01:45Z",
        "updatedAt" : "2014-11-19T02:14:43Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "8b794c13-88dc-4711-96b3-dfc12380afa6",
        "parentId" : "69f14a69-42ae-4334-bbc5-7197f039d404",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "We could curry the ObjectConvertor into a single method - would make this method slightly harder to read though.\n",
        "createdAt" : "2014-11-19T02:13:04Z",
        "updatedAt" : "2014-11-19T02:14:43Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "487e5cd061bc61637daa7da02ef17c10fb02a373",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +68,72 @@\t\t\t}\n\n\t\t\tprinter, err := kubectl.GetPrinter(outputFormat, templateFile, outputVersion, mapping.ObjectConvertor, defaultPrinter)\n\t\t\tcheckErr(err)\n"
  }
]