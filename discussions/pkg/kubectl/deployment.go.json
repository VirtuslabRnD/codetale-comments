[
  {
    "id" : "d60d807d-7c01-49a8-a8ad-fc8c749a2eff",
    "prId" : 48950,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/48950#pullrequestreview-50988731",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ca4b1492-c296-4973-8aee-7a1f7d49aecd",
        "parentId" : null,
        "authorId" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "body" : "nit: should the previous format string use \"%T\" instead of \"%v\"?  It is saying it expected some type, but then prints out the value it saw, not the type.",
        "createdAt" : "2017-07-19T00:05:07Z",
        "updatedAt" : "2017-07-19T00:05:07Z",
        "lastEditedBy" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "tags" : [
        ]
      },
      {
        "id" : "8319facb-4a4f-4ea0-b0f4-f22c7e75a1f1",
        "parentId" : "ca4b1492-c296-4973-8aee-7a1f7d49aecd",
        "authorId" : "b1ad4056-936e-4ce6-ab7b-55870c4e6024",
        "body" : "I assumed %T will print `interface{}`.",
        "createdAt" : "2017-07-19T17:54:58Z",
        "updatedAt" : "2017-07-19T17:54:58Z",
        "lastEditedBy" : "b1ad4056-936e-4ce6-ab7b-55870c4e6024",
        "tags" : [
        ]
      }
    ],
    "commit" : "a7c79711d52040c98b8f05843f3310880cde5ee2",
    "line" : 57,
    "diffHunk" : "@@ -1,1 +75,79 @@\t\treturn nil, fmt.Errorf(\"expected []string, found :%v\", imageStrings)\n\t}\n\treturn &BaseDeploymentGenerator{\n\t\tName:   name,\n\t\tImages: imageStrings,"
  },
  {
    "id" : "0c23eb32-d7d4-4de9-a6b0-b96336077b6d",
    "prId" : 48950,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/48950#pullrequestreview-50968619",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ea318c1a-9767-49fc-aef0-f34bcccb7798",
        "parentId" : null,
        "authorId" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "body" : "fyi, I expect the args to this function to grow a lot since most of the flags driven values will be for things in the podspec.  Consider making a function of `BaseDeploymentGenerator` and access the fields directly.",
        "createdAt" : "2017-07-19T00:09:01Z",
        "updatedAt" : "2017-07-19T00:09:01Z",
        "lastEditedBy" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "tags" : [
        ]
      },
      {
        "id" : "2d0d503d-1c3e-4bc3-a7ee-b0dcef123c3c",
        "parentId" : "ea318c1a-9767-49fc-aef0-f34bcccb7798",
        "authorId" : "b1ad4056-936e-4ce6-ab7b-55870c4e6024",
        "body" : "Good idea. I will do that in my next branch. Thanks for the feedback!",
        "createdAt" : "2017-07-19T16:42:54Z",
        "updatedAt" : "2017-07-19T16:42:55Z",
        "lastEditedBy" : "b1ad4056-936e-4ce6-ab7b-55870c4e6024",
        "tags" : [
        ]
      }
    ],
    "commit" : "a7c79711d52040c98b8f05843f3310880cde5ee2",
    "line" : 89,
    "diffHunk" : "@@ -1,1 +103,107 @@// buildPodSpec: parse the image strings and assemble them into the Containers\n// of a PodSpec. This is all you need to create the PodSpec for a deployment.\nfunc buildPodSpec(images []string) v1.PodSpec {\n\tpodSpec := v1.PodSpec{Containers: []v1.Container{}}\n\tfor _, imageString := range images {"
  },
  {
    "id" : "a3f60ce6-c912-4397-bf87-ce9544fd09a6",
    "prId" : 48950,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/48950#pullrequestreview-50988655",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "eacaa00b-b821-424d-ba70-60c1242b07f9",
        "parentId" : null,
        "authorId" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "body" : "What does this code to strip do?  It doesn't seem to actually strip this from the image AFAICT:\r\n\r\n` kubectl create deployment nginx --image pwittroc@gcr.io/nginx:1 -o yaml --dry-run `\r\n\r\n```\r\napiVersion: extensions/v1beta1\r\nkind: Deployment\r\nmetadata:\r\n  creationTimestamp: null\r\n  labels:\r\n    app: nginx\r\n  name: nginx\r\nspec:\r\n  replicas: 1\r\n  selector:\r\n    matchLabels:\r\n      app: nginx\r\n  strategy: {}\r\n  template:\r\n    metadata:\r\n      creationTimestamp: null\r\n      labels:\r\n        app: nginx\r\n    spec:\r\n      containers:\r\n      - image: pwittroc@gcr.io/nginx:1\r\n        name: nginx\r\n        resources: {}\r\nstatus: {}\r\n```",
        "createdAt" : "2017-07-19T00:30:23Z",
        "updatedAt" : "2017-07-19T00:30:23Z",
        "lastEditedBy" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "tags" : [
        ]
      },
      {
        "id" : "ce834ce2-2477-4714-8802-8b63dc5d23e4",
        "parentId" : "eacaa00b-b821-424d-ba70-60c1242b07f9",
        "authorId" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "body" : "Ah nevermind, figured it out.  This is just for the name.  While you are here, consider pulling this into a function: `getContainerName(image string) string`.  Also, we should check that there are not 2 instance of the same container image running.  I would expect this to be rare, but it would result in weird things.  Maybe keep a set of names we have seen and throw an error?",
        "createdAt" : "2017-07-19T00:34:07Z",
        "updatedAt" : "2017-07-19T00:34:07Z",
        "lastEditedBy" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "tags" : [
        ]
      },
      {
        "id" : "0fb9b188-a0b4-488c-abcb-c1b63d8fca42",
        "parentId" : "eacaa00b-b821-424d-ba70-60c1242b07f9",
        "authorId" : "b1ad4056-936e-4ce6-ab7b-55870c4e6024",
        "body" : "I have updated my new branch to include a `getContainerName(imageName string) string` function.\r\n\r\nI don't understand the question about the duplicated container image running. Is it invalid to run the same container image multiple times in one Pod?",
        "createdAt" : "2017-07-19T17:54:42Z",
        "updatedAt" : "2017-07-19T17:54:42Z",
        "lastEditedBy" : "b1ad4056-936e-4ce6-ab7b-55870c4e6024",
        "tags" : [
        ]
      }
    ],
    "commit" : "a7c79711d52040c98b8f05843f3310880cde5ee2",
    "line" : 92,
    "diffHunk" : "@@ -1,1 +105,109 @@func buildPodSpec(images []string) v1.PodSpec {\n\tpodSpec := v1.PodSpec{Containers: []v1.Container{}}\n\tfor _, imageString := range images {\n\t\t// Retain just the image name\n\t\timageSplit := strings.Split(imageString, \"/\")"
  },
  {
    "id" : "17a2a692-fc1e-4fb7-89aa-3554944398fe",
    "prId" : 48950,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/48950#pullrequestreview-51002710",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5e6943af-7346-489c-962c-5a97073f9e27",
        "parentId" : null,
        "authorId" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "body" : "Optional: follow go comment style everywhere, e.g. \r\n \r\n```go \r\n// BaseDeploymentGenerator implements ...\r\n```\r\n\r\nhttps://github.com/golang/go/wiki/CodeReviewComments#comment-sentences",
        "createdAt" : "2017-07-19T00:53:34Z",
        "updatedAt" : "2017-07-19T02:04:00Z",
        "lastEditedBy" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "tags" : [
        ]
      },
      {
        "id" : "fb1528b3-bfad-438d-b74c-196010156541",
        "parentId" : "5e6943af-7346-489c-962c-5a97073f9e27",
        "authorId" : "b1ad4056-936e-4ce6-ab7b-55870c4e6024",
        "body" : "I chose this pattern because I'm used to writing docstrings in the imperative mood (like commit messages) and `golint` approves it. I like it a lot, but I'm willing to change it. Thoughts?",
        "createdAt" : "2017-07-19T16:40:48Z",
        "updatedAt" : "2017-07-19T16:40:48Z",
        "lastEditedBy" : "b1ad4056-936e-4ce6-ab7b-55870c4e6024",
        "tags" : [
        ]
      },
      {
        "id" : "877f2911-143a-41f8-a948-30f2ef90aff5",
        "parentId" : "5e6943af-7346-489c-962c-5a97073f9e27",
        "authorId" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "body" : "I don't feel strongly about it (that's why I said it's optional). I didn't see this pattern anywhere else in the codebase so it just caught my eye. ",
        "createdAt" : "2017-07-19T18:41:44Z",
        "updatedAt" : "2017-07-19T18:41:44Z",
        "lastEditedBy" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "tags" : [
        ]
      }
    ],
    "commit" : "a7c79711d52040c98b8f05843f3310880cde5ee2",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +28,32 @@)\n\n// BaseDeploymentGenerator: implement the common functionality of\n// DeploymentBasicGeneratorV1 and DeploymentBasicAppsGeneratorV1. To reduce\n// confusion, it's best to keep this struct in the same file as those"
  },
  {
    "id" : "37deeb7c-c819-4c48-b780-309e33b83141",
    "prId" : 27109,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "78ffcaa3-f0bc-47d3-b89e-955daf9488af",
        "parentId" : null,
        "authorId" : "6f0e0b8d-8a92-4746-b4fe-8a3c75407adc",
        "body" : "This ^ \"true\" makes the param required. see: https://github.com/kubernetes/kubernetes/blob/master/pkg/kubectl/generate.go#L60-L71\n",
        "createdAt" : "2016-08-04T23:33:01Z",
        "updatedAt" : "2016-08-08T03:41:45Z",
        "lastEditedBy" : "6f0e0b8d-8a92-4746-b4fe-8a3c75407adc",
        "tags" : [
        ]
      }
    ],
    "commit" : "bd0b7528b5b34174bf9864f9e9a70a90ce734352",
    "line" : 41,
    "diffHunk" : "@@ -1,1 +39,43 @@\treturn []GeneratorParam{\n\t\t{\"name\", true},\n\t\t{\"image\", true},\n\t}\n}"
  }
]