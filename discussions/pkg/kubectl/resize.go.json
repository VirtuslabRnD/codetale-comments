[
  {
    "id" : "20182b11-9efa-46ec-b60f-aa4873de90a0",
    "prId" : 7771,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "767790ea-9b3b-4975-9ba4-e94fe78c0c1b",
        "parentId" : null,
        "authorId" : "df06b0d6-fd6c-44d1-8008-efeaccd16cd5",
        "body" : "Is it needed? Calling this function is similarly long to just creating struct.\n",
        "createdAt" : "2015-05-11T14:24:43Z",
        "updatedAt" : "2015-05-11T14:41:16Z",
        "lastEditedBy" : "df06b0d6-fd6c-44d1-8008-efeaccd16cd5",
        "tags" : [
        ]
      },
      {
        "id" : "95c62e10-ab36-46e0-b9fc-eea77512879f",
        "parentId" : "767790ea-9b3b-4975-9ba4-e94fe78c0c1b",
        "authorId" : "a6ca7669-677e-4e8d-80cf-83cbff3b4216",
        "body" : "As we discussed it seems to be.\n",
        "createdAt" : "2015-05-11T14:33:32Z",
        "updatedAt" : "2015-05-11T14:41:16Z",
        "lastEditedBy" : "a6ca7669-677e-4e8d-80cf-83cbff3b4216",
        "tags" : [
        ]
      }
    ],
    "commit" : "aa116e20335ff22067325c095e9b6a5f99000105",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +106,110 @@}\n\nfunc NewRetryParams(interval, timeout time.Duration) *RetryParams {\n\treturn &RetryParams{interval, timeout}\n}"
  },
  {
    "id" : "eebbae15-e000-4cdb-b8a0-9183577ecadd",
    "prId" : 6871,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fc4216b0-2b68-4eba-bd34-51af4a71ee80",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "FTR I think this is a pattern we should apply more.\n\nEdit: specifically defining local-ish interfaces that implement JUST what we need in the local module.\n",
        "createdAt" : "2015-04-15T18:44:56Z",
        "updatedAt" : "2015-04-15T20:50:12Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "657280ff-4c23-4c86-b110-bd78f1c4088f",
        "parentId" : "fc4216b0-2b68-4eba-bd34-51af4a71ee80",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Agreed, let's drop the hammer on anyone who even looks at *client.Client funny\n",
        "createdAt" : "2015-04-15T20:39:02Z",
        "updatedAt" : "2015-04-15T20:50:12Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "7d444c09-0f34-4e6a-8e93-12865d335403",
        "parentId" : "fc4216b0-2b68-4eba-bd34-51af4a71ee80",
        "authorId" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "body" : ":hammer: \n",
        "createdAt" : "2015-04-15T20:52:29Z",
        "updatedAt" : "2015-04-15T20:52:29Z",
        "lastEditedBy" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "tags" : [
        ]
      }
    ],
    "commit" : "bd7b719944ca8c9f5d2f54b51b760f49a81abc91",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +90,94 @@}\n\nfunc ResizerFor(kind string, c ResizerClient) (Resizer, error) {\n\tswitch kind {\n\tcase \"ReplicationController\":"
  },
  {
    "id" : "94d11ed4-8e09-4de8-8407-215d72441ef1",
    "prId" : 6694,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "22d68969-eb7c-4754-a914-7a15396d3e93",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "since this is public, perhaps a godoc line explaining it and what the two members do?\n",
        "createdAt" : "2015-05-12T04:06:56Z",
        "updatedAt" : "2015-05-16T00:30:30Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "4200033c0afd05b03a03b9f3a5443441e756f130",
    "line" : null,
    "diffHunk" : "@@ -1,1 +103,107 @@\n// RetryParams encapsulates the retry parameters used by kubectl's resizer.\ntype RetryParams struct {\n\tInterval, Timeout time.Duration\n}"
  },
  {
    "id" : "abfcb0ed-83dc-4a3a-b423-f6cf5192ed26",
    "prId" : 4946,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a72e0e33-8132-47a2-9ba8-09c8979bdd74",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "This is one of the things go's type system is good at.\n\n``` go\n\ntype ControllerResizeErrorType int\n\nconst (\n    ControllerResizeGetFailure ControllerResizeErrorType = iota\n    ControllerResizeUpdateFailure\n)\n```\n\nUnfortunately this package has too much stuff in it and therefore we probably should make the name long enough to not collide.\n",
        "createdAt" : "2015-03-03T03:45:29Z",
        "updatedAt" : "2015-03-03T04:31:26Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "d25c28d4-c7e0-49d8-8b47-35694d4b2926",
        "parentId" : "a72e0e33-8132-47a2-9ba8-09c8979bdd74",
        "authorId" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "body" : "I'd considered using iota but wanted to avoid forcing people to look it up should they enter this code. I'll update, since this feels more idiomatic. \n",
        "createdAt" : "2015-03-03T03:50:14Z",
        "updatedAt" : "2015-03-03T04:31:26Z",
        "lastEditedBy" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "tags" : [
        ]
      },
      {
        "id" : "b62e1b23-cbb6-4313-bd32-92428a7cd1e7",
        "parentId" : "a72e0e33-8132-47a2-9ba8-09c8979bdd74",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Yeah the iota bit is optional, do whatever you want--but making a type for enums is pretty important (IMO). :)\n",
        "createdAt" : "2015-03-03T03:52:54Z",
        "updatedAt" : "2015-03-03T04:31:26Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "d8b654c1-6f36-43f5-ad19-9cfc827d2030",
        "parentId" : "a72e0e33-8132-47a2-9ba8-09c8979bdd74",
        "authorId" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "body" : "Yeah no iota make sense, especially since you've recommended it (it's just new to me, but so is go so that's not saying much).\n",
        "createdAt" : "2015-03-03T03:54:43Z",
        "updatedAt" : "2015-03-03T04:31:26Z",
        "lastEditedBy" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "tags" : [
        ]
      }
    ],
    "commit" : "1970c2d2012d7391d3471a035ce88acf94d8aeeb",
    "line" : null,
    "diffHunk" : "@@ -1,1 +49,53 @@type ControllerResizeErrorType int\n\nconst (\n\tControllerResizeGetFailure ControllerResizeErrorType = iota\n\tControllerResizeUpdateFailure"
  },
  {
    "id" : "7563c501-766b-4a37-bcb1-bd522168cd5c",
    "prId" : 4946,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4dd43a8f-a327-4048-829c-4012ccb23bf6",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Ideas for another PR: It would be good to error out if you get something other than a conflict error. Like, if you're getting this error because validation failed trying again won't change that.\n",
        "createdAt" : "2015-03-03T03:50:14Z",
        "updatedAt" : "2015-03-03T04:31:26Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "52155b10-1440-4a5d-b2b6-c32d6e9f7e4c",
        "parentId" : "4dd43a8f-a327-4048-829c-4012ccb23bf6",
        "authorId" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "body" : "I thought about this but decided to punt because there was no nice way to classify the errors coming out of client/request \n",
        "createdAt" : "2015-03-03T03:58:34Z",
        "updatedAt" : "2015-03-03T04:31:26Z",
        "lastEditedBy" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "tags" : [
        ]
      }
    ],
    "commit" : "1970c2d2012d7391d3471a035ce88acf94d8aeeb",
    "line" : null,
    "diffHunk" : "@@ -1,1 +104,108 @@\t\tcase ControllerResizeError:\n\t\t\tif e.FailureType == ControllerResizeUpdateFailure {\n\t\t\t\treturn false, nil\n\t\t\t}\n\t\t}"
  },
  {
    "id" : "c8afb56f-afbb-4a5f-af1b-dd2177cb6186",
    "prId" : 3377,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "849c3d17-f5aa-408d-bfbc-a278576d8eb9",
        "parentId" : null,
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "We should figure out what would be the most useful output for scriptability. For example, Docker commands return the UIDs of the objects (successfully) affected, which is useful for creation and for multi-object operations. We can't do operations yet, so maybe selflinks would be the moral equivalent. Right now, [create prints the name](https://github.com/GoogleCloudPlatform/kubernetes/blob/master/pkg/kubectl/cmd/create.go).\n\nFor programmatic usage, resourceVersion would be important, as well, but we can punt on that for now.\n",
        "createdAt" : "2015-01-10T01:48:51Z",
        "updatedAt" : "2015-01-15T05:36:19Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "720ff3d1-4056-44b0-8769-7e0e440ca57f",
        "parentId" : "849c3d17-f5aa-408d-bfbc-a278576d8eb9",
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "Yeah, I TODO'd this.  We should really accept the same set of flags (e.g. `-o yaml`) etc for printing in all of these places.\n",
        "createdAt" : "2015-01-12T20:36:41Z",
        "updatedAt" : "2015-01-15T05:36:19Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      },
      {
        "id" : "a2a3c3d7-e3d8-4600-b8c5-eb3625d5724a",
        "parentId" : "849c3d17-f5aa-408d-bfbc-a278576d8eb9",
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "Where did you put the TODO?\n",
        "createdAt" : "2015-01-12T20:56:49Z",
        "updatedAt" : "2015-01-15T05:36:19Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "0e668567-8753-4e41-b747-af0eb2620606",
        "parentId" : "849c3d17-f5aa-408d-bfbc-a278576d8eb9",
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "oops, sorry, forgot to push.\n\n--brendan\n\nOn Mon, Jan 12, 2015 at 12:57 PM, bgrant0607 notifications@github.com\nwrote:\n\n> In pkg/kubectl/resize.go\n> https://github.com/GoogleCloudPlatform/kubernetes/pull/3377#discussion-diff-22821481\n> :\n> \n> > -   controller, err := rc.Get(item)\n> > -   if err != nil {\n> > -       return \"\", err\n> > -   }\n> >   +\n> > -   if preconditions != nil {\n> > -       if err := preconditions.Validate(controller); err != nil {\n> > -           return \"\", err\n> > -       }\n> > -   }\n> >   +\n> > -   controller.Spec.Replicas = int(newSize)\n> > -   if _, err := rc.Update(controller); err != nil {\n> > -       return \"\", err\n> > -   }\n> > -   return \"resized\", nil\n> \n> Where did you put the TODO?\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/GoogleCloudPlatform/kubernetes/pull/3377/files#r22821481\n> .\n",
        "createdAt" : "2015-01-12T21:42:55Z",
        "updatedAt" : "2015-01-15T05:36:19Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "d3a07adb38848184ddfbf0235600b276f6187890",
    "line" : null,
    "diffHunk" : "@@ -1,1 +90,94 @@\t}\n\t// TODO: do a better job of printing objects here.\n\treturn \"resized\", nil\n}"
  },
  {
    "id" : "ada90be1-8d65-4372-9167-2bfca516552e",
    "prId" : 3377,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e2e091c4-407d-459a-8996-7537eb135dfc",
        "parentId" : null,
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "Due to races, this operation could still fail due to a resource version conflict on the server. I don't think 2 different types of errors should be reported. \n\nBoth of these preconditions should eventually be implemented on the server. Right now, the resource version precondition could be just checked by the server. We could potentially retry the size precondition if the operation failed due to resource version conflict.\n",
        "createdAt" : "2015-01-10T01:55:33Z",
        "updatedAt" : "2015-01-15T05:36:19Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "09fef087-29de-468d-8730-ee921a7a762a",
        "parentId" : "e2e091c4-407d-459a-8996-7537eb135dfc",
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "Hrm, I actually think that there are two cases, there are two conditions.\n\n1) first being that the user's external constraints were violated, this is permanent in the absence of interaction with the user.\n\n2) a transient race between read and write, and the user can immediately retry the same command and believe that it may succeed (or they'll get an error of type #1)\n",
        "createdAt" : "2015-01-12T20:39:54Z",
        "updatedAt" : "2015-01-15T05:36:19Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      },
      {
        "id" : "61e28e30-09c1-45f7-ad86-fa8640cfdd1a",
        "parentId" : "e2e091c4-407d-459a-8996-7537eb135dfc",
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "Ok, good point.\n\nEventually I'd like to automatically retry the second case.\n",
        "createdAt" : "2015-01-12T20:56:01Z",
        "updatedAt" : "2015-01-15T05:36:19Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "57e2e68d-3cf9-46cf-af71-db5f80dca109",
        "parentId" : "e2e091c4-407d-459a-8996-7537eb135dfc",
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "TODO'd the retry.\n",
        "createdAt" : "2015-01-13T05:03:54Z",
        "updatedAt" : "2015-01-15T05:36:19Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "d3a07adb38848184ddfbf0235600b276f6187890",
    "line" : 51,
    "diffHunk" : "@@ -1,1 +49,53 @@\t\treturn &PreconditionError{\"replicas\", strconv.Itoa(precondition.Size), strconv.Itoa(controller.Spec.Replicas)}\n\t}\n\tif precondition.ResourceVersion != \"\" && controller.ResourceVersion != precondition.ResourceVersion {\n\t\treturn &PreconditionError{\"resource version\", precondition.ResourceVersion, controller.ResourceVersion}\n\t}"
  }
]