[
  {
    "id" : "fd8e7f6f-548f-4de8-ab5d-d20fde9d4d6a",
    "prId" : 23741,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8682d799-4769-4eb0-a068-56dde9efc2dd",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "This throws away every index except 0? Is that useful?\n",
        "createdAt" : "2016-04-04T18:44:31Z",
        "updatedAt" : "2016-04-05T00:10:29Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "1d2436db-629e-4513-838e-f81ebb9becc6",
        "parentId" : "8682d799-4769-4eb0-a068-56dde9efc2dd",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "I added returning error for lists with 1+ elems.\n",
        "createdAt" : "2016-04-04T18:49:38Z",
        "updatedAt" : "2016-04-05T00:10:29Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "49d3c3962c7f114af4fbd8dfacb262788e947f6b",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +47,51 @@}\n\nfunc Convert_Slice_string_To_string(input *[]string, out *string, s conversion.Scope) error {\n\tif len(*input) == 0 {\n\t\t*out = \"\""
  },
  {
    "id" : "42ce0c0a-c5c2-4fc4-850a-739b1da45e44",
    "prId" : 7541,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e3489ecb-fc57-4df5-9f6a-367a13f4ae7f",
        "parentId" : null,
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Should probably omit the `case \"true\", \"1\"` now - this is confusing at first sight.  Add a comment that only false and 0 resolve to false, all other non-zero length values are true.\n",
        "createdAt" : "2015-04-30T04:36:34Z",
        "updatedAt" : "2015-04-30T13:26:45Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "f72ee1f72b6c75515c27f01b5fc0724b13185530",
    "line" : null,
    "diffHunk" : "@@ -1,1 +80,84 @@\t\t*out = false\n\tdefault:\n\t\t*out = true\n\t}\n\treturn nil"
  },
  {
    "id" : "3a114627-4fe1-4604-bed6-a9974d8d4782",
    "prId" : 5763,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5261601a-a63a-43c4-b1e4-eb21e51859d7",
        "parentId" : null,
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "File-level comment? What is the purpose of this file?\n",
        "createdAt" : "2015-03-25T02:05:24Z",
        "updatedAt" : "2015-03-27T19:04:23Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      }
    ],
    "commit" : "870da687d0c2477dc7be1c659a379cfa35a2e850",
    "line" : null,
    "diffHunk" : "@@ -1,1 +14,18 @@limitations under the License.\n*/\n\n// Defines conversions between generic types and structs to map query strings\n// to struct objects."
  }
]