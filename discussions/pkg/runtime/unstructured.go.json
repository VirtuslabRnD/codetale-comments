[
  {
    "id" : "fd735b6a-b3f5-4399-87ae-746dc328eb1e",
    "prId" : 25540,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "393a2058-bb1e-418b-835b-78db950e635f",
        "parentId" : null,
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "For now this is fine, I have a todo to make the conversion guarantees much more explicit, and I'll handle the implications if any here.\n",
        "createdAt" : "2016-05-12T20:11:20Z",
        "updatedAt" : "2016-05-18T04:02:52Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "925003b4bc943a43d1418bb43967fd88acba6b02",
    "line" : 49,
    "diffHunk" : "@@ -1,1 +171,175 @@\t// guaranteeed to not mutate the input. Or maybe set the input\n\t// object to nil.\n\tunstructOut.Object = unstructIn.Object\n\treturn nil\n}"
  },
  {
    "id" : "c0ae7537-f375-41ea-a98c-cc35a1343242",
    "prId" : 25540,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5a3282b6-e8f6-4bbf-97dc-ae4381c12f19",
        "parentId" : null,
        "authorId" : "ad0a3561-db60-47a9-b82f-ac613199f968",
        "body" : "This line changed in the rebase.\n",
        "createdAt" : "2016-05-14T00:09:30Z",
        "updatedAt" : "2016-05-18T04:02:52Z",
        "lastEditedBy" : "ad0a3561-db60-47a9-b82f-ac613199f968",
        "tags" : [
        ]
      }
    ],
    "commit" : "925003b4bc943a43d1418bb43967fd88acba6b02",
    "line" : 54,
    "diffHunk" : "@@ -1,1 +176,180 @@\nfunc (UnstructuredObjectConverter) ConvertToVersion(in Object, outVersion unversioned.GroupVersion) (Object, error) {\n\tif gvk := in.GetObjectKind().GroupVersionKind(); gvk.GroupVersion() != outVersion {\n\t\treturn nil, errors.New(\"unstructured converter cannot convert versions\")\n\t}"
  },
  {
    "id" : "1b2b0118-dee2-4dc5-8cff-8aed3c30f0b2",
    "prId" : 23038,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ace63d4f-8776-48e9-965a-1ff593c0bffe",
        "parentId" : null,
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Add a TODO here that unstructured needs to deal with Content-Type.\n",
        "createdAt" : "2016-03-16T15:40:07Z",
        "updatedAt" : "2016-03-16T15:44:24Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "86e57f84-019a-48ed-8772-87cf52f2a91a",
        "parentId" : "ace63d4f-8776-48e9-965a-1ff593c0bffe",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Done.\n",
        "createdAt" : "2016-03-16T15:44:32Z",
        "updatedAt" : "2016-03-16T15:44:32Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "218d3e5923d0b1e35dd275321342ad24242d41dd",
    "line" : null,
    "diffHunk" : "@@ -1,1 +69,73 @@\tcase *Unknown:\n\t\t// TODO: Unstructured needs to deal with ContentType.\n\t\t_, err := w.Write(t.Raw)\n\t\treturn err\n\tdefault:"
  },
  {
    "id" : "79471dc9-ed35-41c4-952d-90066de04043",
    "prId" : 20487,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c1bb2993-6c31-41eb-8c48-1633ce3be060",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Shouldn't this be called a \"Serializer\" now, not a Codec?\n",
        "createdAt" : "2016-02-06T00:46:09Z",
        "updatedAt" : "2016-02-06T00:46:09Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "c9edd7ae-5c9e-4a97-a4c1-10584087863c",
        "parentId" : "c1bb2993-6c31-41eb-8c48-1633ce3be060",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Also, \"Scheme\" is a confusing part of the name since we have a scheme and this is not much like it.\n",
        "createdAt" : "2016-02-06T00:46:47Z",
        "updatedAt" : "2016-02-06T00:46:47Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "067ecb4b6023fcaa4252fbaaef62d7351fab331d",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +27,31 @@// type, which can be used for generic access to objects without a predefined scheme.\n// TODO: move into serializer/json.\nvar UnstructuredJSONScheme Codec = unstructuredJSONScheme{}\n\ntype unstructuredJSONScheme struct{}"
  },
  {
    "id" : "8692e499-d7ad-4dc2-b4be-f099b465ad7f",
    "prId" : 20351,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "41eb2bf4-a4e8-4536-a839-d98803cab27d",
        "parentId" : null,
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "You should be using the \"kind\" and \"apiVersion\" fields out of the decoded object if you didn't call decodeInto\n",
        "createdAt" : "2016-02-09T00:08:49Z",
        "updatedAt" : "2016-02-12T19:49:55Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "e0344320-5182-471b-8c91-eb30ee677030",
        "parentId" : "41eb2bf4-a4e8-4536-a839-d98803cab27d",
        "authorId" : "ad0a3561-db60-47a9-b82f-ac613199f968",
        "body" : "I am. s.decode assigns in to obj.\n",
        "createdAt" : "2016-02-09T01:11:40Z",
        "updatedAt" : "2016-02-12T19:49:55Z",
        "lastEditedBy" : "ad0a3561-db60-47a9-b82f-ac613199f968",
        "tags" : [
        ]
      }
    ],
    "commit" : "4c58302b5b77071f1c798483fc7c44ae8b58378a",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +43,47 @@\t}\n\n\tgvk := obj.GetObjectKind().GroupVersionKind()\n\tif len(gvk.Kind) == 0 {\n\t\treturn nil, gvk, NewMissingKindErr(string(data))"
  }
]