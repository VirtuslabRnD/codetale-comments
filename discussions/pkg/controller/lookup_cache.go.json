[
  {
    "id" : "9ffa5675-92b9-4549-847d-297e2dd29ebd",
    "prId" : 19043,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a2443eb3-7118-4fa7-a628-a180058e5288",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "I'm fine with this name. But maybe @lavalamp will have a better idea ...\n",
        "createdAt" : "2016-02-23T15:31:20Z",
        "updatedAt" : "2016-02-24T09:43:37Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "d9a35a25d76211e44934e2f75353f78ddfe6a535",
    "line" : null,
    "diffHunk" : "@@ -1,1 +50,54 @@\n// MatchingCache save label and selector matching relationship\ntype MatchingCache struct {\n\tmutex sync.RWMutex\n\tcache *lru.Cache"
  },
  {
    "id" : "d2bdde7f-f478-47ef-b246-9dd21c36a537",
    "prId" : 19043,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2eb17c67-1641-4ee0-97fa-54ccf976af71",
        "parentId" : null,
        "authorId" : "fa03ed6a-9d2a-44b6-8438-e21ee4a2ce4d",
        "body" : "@wojtek-t How about adding objectWithSelector and objectWithLabel interface instead\n",
        "createdAt" : "2016-02-23T15:53:25Z",
        "updatedAt" : "2016-02-24T09:43:37Z",
        "lastEditedBy" : "fa03ed6a-9d2a-44b6-8438-e21ee4a2ce4d",
        "tags" : [
        ]
      },
      {
        "id" : "f04af5e8-0fbc-4355-a235-58b31d7c014f",
        "parentId" : "2eb17c67-1641-4ee0-97fa-54ccf976af71",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "SGTM\n",
        "createdAt" : "2016-02-23T16:32:33Z",
        "updatedAt" : "2016-02-24T09:43:37Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "2b36163e-7dd4-4a96-ab6e-c3b8840eb348",
        "parentId" : "2eb17c67-1641-4ee0-97fa-54ccf976af71",
        "authorId" : "fa03ed6a-9d2a-44b6-8438-e21ee4a2ce4d",
        "body" : "Unfortunately, Selector is not in meta, so we have no \"getSelector\" method. \n",
        "createdAt" : "2016-02-24T07:33:28Z",
        "updatedAt" : "2016-02-24T09:43:37Z",
        "lastEditedBy" : "fa03ed6a-9d2a-44b6-8438-e21ee4a2ce4d",
        "tags" : [
        ]
      },
      {
        "id" : "ac55d5e7-a6de-4d3d-80c9-48a0bb341b80",
        "parentId" : "2eb17c67-1641-4ee0-97fa-54ccf976af71",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "hmm - let's leave as is - you can add a TODO to maybe change it in the future. WDYT?\n",
        "createdAt" : "2016-02-24T07:39:19Z",
        "updatedAt" : "2016-02-24T09:43:37Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "d9a35a25d76211e44934e2f75353f78ddfe6a535",
    "line" : 65,
    "diffHunk" : "@@ -1,1 +63,67 @@\n// Add will add matching information to the cache.\nfunc (c *MatchingCache) Add(labelObj objectWithMeta, selectorObj objectWithMeta) {\n\tkey := keyFunc(labelObj)\n\tc.mutex.Lock()"
  }
]