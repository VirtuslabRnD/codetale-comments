[
  {
    "id" : "218ef90b-666a-407c-8d9f-33ac0d39ef7d",
    "prId" : 44258,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/44258#pullrequestreview-34616792",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e038e8d4-b4fa-47f9-bee0-4e016dd8992b",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "This whole function duplicates a lot of the above logic - can we extract and reuse?",
        "createdAt" : "2017-04-20T20:48:33Z",
        "updatedAt" : "2017-05-05T23:52:58Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "42d4ca1d-f63d-4edb-a30e-bd39a0d6a527",
        "parentId" : "e038e8d4-b4fa-47f9-bee0-4e016dd8992b",
        "authorId" : "ae819fef-700f-45ca-aa42-0afbedcadc19",
        "body" : "done.",
        "createdAt" : "2017-04-25T16:28:46Z",
        "updatedAt" : "2017-05-05T23:52:58Z",
        "lastEditedBy" : "ae819fef-700f-45ca-aa42-0afbedcadc19",
        "tags" : [
        ]
      }
    ],
    "commit" : "8666eaac539312131735933752254151522e8db2",
    "line" : 314,
    "diffHunk" : "@@ -1,1 +284,288 @@\t\t}\n\n\t\tnodeAddresses, err := getNodeAddressesByProviderIDOrName(instances, curNode)\n\t\tif err != nil {\n\t\t\tglog.Errorf(\"%v\", err)"
  },
  {
    "id" : "0ab28618-cedb-4618-9884-2c5589ee3231",
    "prId" : 44258,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/44258#pullrequestreview-35427562",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "70f7c92f-725c-4b4f-9f2b-c8f80189231f",
        "parentId" : null,
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "where are all the unit tests for these functions below ;)?\r\nThe main motivation for splitting them up is making them testable...",
        "createdAt" : "2017-04-28T13:21:22Z",
        "updatedAt" : "2017-05-05T23:52:58Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      },
      {
        "id" : "14bffd14-00a2-411b-9787-b35c0b616467",
        "parentId" : "70f7c92f-725c-4b4f-9f2b-c8f80189231f",
        "authorId" : "ae819fef-700f-45ca-aa42-0afbedcadc19",
        "body" : "The functions are covered by the tests sufficiently. \r\n\r\ngo test -cover -race -coverprofile=c.out k8s.io/kubernetes/pkg/controller/cloud\r\ngo tool cover -func=c.out\r\n\r\nEsp. the function highlighted has 100% coverage - \r\n```\r\nk8s.io/kubernetes/pkg/controller/cloud/nodecontroller.go:338:   getCloudTaint                           100.0%\r\n```\r\n\r\nThe motivation for splitting them up is to prevent code duplication, improve reuse, and make the code manageable. \r\n\r\nI can improve the coverage with more functional unit tests, but I don't see how adding a specific test for a getter like this makes a significant difference, especially since it is already fully covered.",
        "createdAt" : "2017-04-28T18:16:54Z",
        "updatedAt" : "2017-05-05T23:52:58Z",
        "lastEditedBy" : "ae819fef-700f-45ca-aa42-0afbedcadc19",
        "tags" : [
        ]
      }
    ],
    "commit" : "8666eaac539312131735933752254151522e8db2",
    "line" : 382,
    "diffHunk" : "@@ -1,1 +352,356 @@}\n\nfunc getCloudTaint(taints []v1.Taint) *v1.Taint {\n\tfor _, taint := range taints {\n\t\tif taint.Key == metav1.TaintExternalCloudProvider {"
  },
  {
    "id" : "47ef5e0a-4af7-44a3-8357-912c6f6fbc6d",
    "prId" : 44258,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/44258#pullrequestreview-35512187",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f749d4ae-5d89-4d13-af4c-21c4fd9a3efc",
        "parentId" : null,
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "https://github.com/kubernetes/kubernetes/issues/45156",
        "createdAt" : "2017-04-30T08:33:34Z",
        "updatedAt" : "2017-05-05T23:52:58Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      }
    ],
    "commit" : "8666eaac539312131735933752254151522e8db2",
    "line" : 99,
    "diffHunk" : "@@ -1,1 +122,126 @@// UpdateNodeStatus updates the node status, such as node addresses\nfunc (cnc *CloudNodeController) UpdateNodeStatus() {\n\tinstances, ok := cnc.cloud.Instances()\n\tif !ok {\n\t\tutilruntime.HandleError(fmt.Errorf(\"failed to get instances from cloud provider\"))"
  },
  {
    "id" : "f7fdcc05-4852-4bee-a9f6-1c450dd8daf7",
    "prId" : 44258,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/44258#pullrequestreview-35613243",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4a4b4e7d-a720-4fcc-a234-112105480c5a",
        "parentId" : null,
        "authorId" : "57f729dd-988a-4d1a-83bf-ee70bf637c64",
        "body" : "Why not combine these two conditions? eg if condition != nil && condition.status != true",
        "createdAt" : "2017-05-01T18:12:02Z",
        "updatedAt" : "2017-05-05T23:52:58Z",
        "lastEditedBy" : "57f729dd-988a-4d1a-83bf-ee70bf637c64",
        "tags" : [
        ]
      }
    ],
    "commit" : "8666eaac539312131735933752254151522e8db2",
    "line" : 241,
    "diffHunk" : "@@ -1,1 +234,238 @@\t\t// from the cloud provider. If node cannot be found in cloudprovider, then delete the node immediately\n\t\tif currentReadyCondition != nil {\n\t\t\tif currentReadyCondition.Status != v1.ConditionTrue {\n\t\t\t\t// Check with the cloud provider to see if the node still exists. If it\n\t\t\t\t// doesn't, delete the node immediately."
  },
  {
    "id" : "4bcbfb1b-99af-44b6-a590-681bf9c42b75",
    "prId" : 44258,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/44258#pullrequestreview-35613243",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c1dd4dac-4683-4bbc-ac99-657c99b4ea51",
        "parentId" : null,
        "authorId" : "57f729dd-988a-4d1a-83bf-ee70bf637c64",
        "body" : "initializes",
        "createdAt" : "2017-05-01T18:12:55Z",
        "updatedAt" : "2017-05-05T23:52:58Z",
        "lastEditedBy" : "57f729dd-988a-4d1a-83bf-ee70bf637c64",
        "tags" : [
        ]
      }
    ],
    "commit" : "8666eaac539312131735933752254151522e8db2",
    "line" : 292,
    "diffHunk" : "@@ -1,1 +262,266 @@}\n\n// This processes nodes that were added into the cluster, and cloud initializea them if appropriate\nfunc (cnc *CloudNodeController) AddCloudNode(obj interface{}) {\n\tnode := obj.(*v1.Node)"
  },
  {
    "id" : "7f5c193c-feda-4fc0-bb74-e8efd80f482f",
    "prId" : 44258,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/44258#pullrequestreview-39121478",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6393e966-2756-4e0c-9028-2903146c67da",
        "parentId" : null,
        "authorId" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "body" : "Ref. #45118 - we probably should make some decision on expected semantics of listing instances.",
        "createdAt" : "2017-05-19T07:03:04Z",
        "updatedAt" : "2017-05-19T07:03:05Z",
        "lastEditedBy" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "tags" : [
        ]
      }
    ],
    "commit" : "8666eaac539312131735933752254151522e8db2",
    "line" : 99,
    "diffHunk" : "@@ -1,1 +122,126 @@// UpdateNodeStatus updates the node status, such as node addresses\nfunc (cnc *CloudNodeController) UpdateNodeStatus() {\n\tinstances, ok := cnc.cloud.Instances()\n\tif !ok {\n\t\tutilruntime.HandleError(fmt.Errorf(\"failed to get instances from cloud provider\"))"
  },
  {
    "id" : "6e0114b5-d38e-4be5-8213-2aed52cb75ba",
    "prId" : 34273,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/34273#pullrequestreview-13449726",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b15cd8bd-16f0-4209-978d-c9b8caabb2f6",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "rather than forking this, which means we'll have to constantly sync between them, maybe we can use the same code in both controllers?",
        "createdAt" : "2016-12-13T07:28:14Z",
        "updatedAt" : "2016-12-22T23:16:25Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "d2a6b412-c4c0-4ec2-9a23-0f95c9a77055",
        "parentId" : "b15cd8bd-16f0-4209-978d-c9b8caabb2f6",
        "authorId" : "ae819fef-700f-45ca-aa42-0afbedcadc19",
        "body" : "@thockin this would be a good idea in general. In this case however the logic on the CloudNodeController side is so minimal and in order to share code, I'd have to break down the existing NodeController logic into smaller pieces and glue them together. I'd rather not touch NodeController. ",
        "createdAt" : "2016-12-17T17:23:00Z",
        "updatedAt" : "2016-12-22T23:16:25Z",
        "lastEditedBy" : "ae819fef-700f-45ca-aa42-0afbedcadc19",
        "tags" : [
        ]
      }
    ],
    "commit" : "75da31075743fcbc88ab133bcabdc9cc53392ead",
    "line" : 37,
    "diffHunk" : "@@ -1,1 +35,39 @@)\n\ntype CloudNodeController struct {\n\tnodeInformer informers.NodeInformer\n\tkubeClient   clientset.Interface"
  }
]