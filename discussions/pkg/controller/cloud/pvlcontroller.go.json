[
  {
    "id" : "b5393a67-d4c8-47b9-831f-9946346fbd20",
    "prId" : 72972,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/72972#pullrequestreview-195789867",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "685e1153-c384-4519-9df4-0ae48a14bb53",
        "parentId" : null,
        "authorId" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "body" : "Just a note for reference: this should ideally be done for v1.14 (in a future PR though)",
        "createdAt" : "2019-01-23T23:10:50Z",
        "updatedAt" : "2019-01-23T23:10:50Z",
        "lastEditedBy" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "tags" : [
        ]
      }
    ],
    "commit" : "1a15d809672175aa730b6eda059a2d81f3c41695",
    "line" : 82,
    "diffHunk" : "@@ -1,1 +289,293 @@// needsInitialization checks whether or not the PVL is the next pending initializer.\nfunc needsInitialization(vol *v1.PersistentVolume) bool {\n\t// TODO: determine whether initialization is required based on a different attribute,\n\t// since initializers are not being promoted past alpha, or convert to an admission plugin\n\treturn false"
  },
  {
    "id" : "a55e09d0-53fa-47b8-8c96-1fecad4be031",
    "prId" : 67421,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/67421#pullrequestreview-146328381",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e02b420d-0df9-4b50-bfa3-58b97d728f9b",
        "parentId" : null,
        "authorId" : "fa530650-5886-4415-a42f-0dee2e0e9ae3",
        "body" : ":+1: thanks!",
        "createdAt" : "2018-08-15T04:39:13Z",
        "updatedAt" : "2018-08-15T04:39:13Z",
        "lastEditedBy" : "fa530650-5886-4415-a42f-0dee2e0e9ae3",
        "tags" : [
        ]
      }
    ],
    "commit" : "c702a24182502ec9f14c1ecf76dadae6f132f022",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +289,293 @@\tglog.V(4).Infof(\"updated PersistentVolume %s\", volName)\n\n\treturn nil\n}\n"
  },
  {
    "id" : "30d7c941-e273-4f8c-a215-1ca2262213a9",
    "prId" : 44680,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/44680#pullrequestreview-59637366",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5042b412-7ae2-40f2-86f9-f17d3ce6c625",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "followup issue to at least use a RW mutex.  You're only trying this until you succeed once.",
        "createdAt" : "2017-08-30T14:04:13Z",
        "updatedAt" : "2017-08-30T18:21:15Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "d9f3984e-799d-4b0e-9352-47dcec444a46",
        "parentId" : "5042b412-7ae2-40f2-86f9-f17d3ce6c625",
        "authorId" : "aee8926e-0646-4183-b0d7-65633cf782b0",
        "body" : "Created issue #51640",
        "createdAt" : "2017-08-30T17:40:40Z",
        "updatedAt" : "2017-08-30T18:21:15Z",
        "lastEditedBy" : "aee8926e-0646-4183-b0d7-65633cf782b0",
        "tags" : [
        ]
      }
    ],
    "commit" : "53856420e861ab29587bc1e49c9fcb641f25f8fc",
    "line" : 241,
    "diffHunk" : "@@ -1,1 +239,243 @@// getEBSVolumes returns the AWS Volumes interface for ebs\nfunc (pvlc *PersistentVolumeLabelController) getEBSVolumes() (aws.Volumes, error) {\n\tpvlc.mutex.Lock()\n\tdefer pvlc.mutex.Unlock()\n"
  },
  {
    "id" : "828c9443-4584-4270-b32b-9fe478380bac",
    "prId" : 44680,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/44680#pullrequestreview-59944450",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4e29900e-75ac-4a82-8329-e7ae61c5b5d2",
        "parentId" : null,
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "@rrati How long is this call going to take? We might enforce a global timeout on all initializers.",
        "createdAt" : "2017-08-30T20:27:58Z",
        "updatedAt" : "2017-08-30T20:27:58Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      },
      {
        "id" : "a25d9d47-ccce-4745-87ef-bbbc8c1a0c95",
        "parentId" : "4e29900e-75ac-4a82-8329-e7ae61c5b5d2",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "@rrati I put the `do-not-merge` label on the PR for this question because it might affect the evolving of initializers.",
        "createdAt" : "2017-08-30T20:52:17Z",
        "updatedAt" : "2017-08-30T20:52:18Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      },
      {
        "id" : "49015f1c-b2de-49a1-83dd-84741e37f9a0",
        "parentId" : "4e29900e-75ac-4a82-8329-e7ae61c5b5d2",
        "authorId" : "aee8926e-0646-4183-b0d7-65633cf782b0",
        "body" : "This is the same logic that is in the admission plugin.  It will be going away in a future revision of this controller.  The call is very fast in my testing, but I haven't hit any instances where the API won't respond.",
        "createdAt" : "2017-08-31T11:37:33Z",
        "updatedAt" : "2017-08-31T11:37:33Z",
        "lastEditedBy" : "aee8926e-0646-4183-b0d7-65633cf782b0",
        "tags" : [
        ]
      },
      {
        "id" : "c57f59ac-afe3-4a61-a894-e88dc758c2a7",
        "parentId" : "4e29900e-75ac-4a82-8329-e7ae61c5b5d2",
        "authorId" : "ae819fef-700f-45ca-aa42-0afbedcadc19",
        "body" : "@caesarxuchao what happens if this initializer times out? Is the object considered uninitializable? ",
        "createdAt" : "2017-08-31T13:33:25Z",
        "updatedAt" : "2017-08-31T13:33:26Z",
        "lastEditedBy" : "ae819fef-700f-45ca-aa42-0afbedcadc19",
        "tags" : [
        ]
      },
      {
        "id" : "196c7ebf-6767-4132-99c3-9adc14469974",
        "parentId" : "4e29900e-75ac-4a82-8329-e7ae61c5b5d2",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "We perhaps will let the apiserver or garbage collector delete the object.\r\n\r\n> The call is very fast in my testing\r\n\r\nHow fast is the API call? Less than 1s? Could you do caching?",
        "createdAt" : "2017-08-31T17:07:04Z",
        "updatedAt" : "2017-08-31T17:07:04Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      },
      {
        "id" : "bcb964e2-e009-46d0-846a-7df365dae6b3",
        "parentId" : "4e29900e-75ac-4a82-8329-e7ae61c5b5d2",
        "authorId" : "aee8926e-0646-4183-b0d7-65633cf782b0",
        "body" : "The API call itself is <<1s in my testing.  However, that number could go up if the cloud provider is having issues, and I don't have any numbers for that.  I never ran into a case where that occurred.",
        "createdAt" : "2017-08-31T17:35:11Z",
        "updatedAt" : "2017-08-31T17:35:11Z",
        "lastEditedBy" : "aee8926e-0646-4183-b0d7-65633cf782b0",
        "tags" : [
        ]
      },
      {
        "id" : "ba5f880e-5e7a-43de-b62b-86302a30bf18",
        "parentId" : "4e29900e-75ac-4a82-8329-e7ae61c5b5d2",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "<<1s sounds good. Thanks.",
        "createdAt" : "2017-08-31T18:10:30Z",
        "updatedAt" : "2017-08-31T18:10:30Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "53856420e861ab29587bc1e49c9fcb641f25f8fc",
    "line" : 199,
    "diffHunk" : "@@ -1,1 +197,201 @@\tif needsInitialization(vol.Initializers, initializerName) {\n\t\tif vol.Spec.AWSElasticBlockStore != nil {\n\t\t\tlabels, err := pvlc.findAWSEBSLabels(vol)\n\t\t\tif err != nil {\n\t\t\t\treturn fmt.Errorf(\"error querying AWS EBS volume %s: %v\", vol.Spec.AWSElasticBlockStore.VolumeID, err)"
  },
  {
    "id" : "3a7733d9-ba69-451a-8bc8-371c4ba8e3ca",
    "prId" : 44680,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/44680#pullrequestreview-59933734",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2a92a776-910f-44f1-b859-b587f9a39981",
        "parentId" : null,
        "authorId" : "7aca96c2-45d7-4567-99be-0323d7556c55",
        "body" : "Do we have an idea of how to get this block out of here and in to the AWS specific cloud provider section?\r\nIt seems as though we should add a GetVolumeLabel method to the cloud provider interface.",
        "createdAt" : "2017-08-31T17:58:01Z",
        "updatedAt" : "2017-08-31T18:04:29Z",
        "lastEditedBy" : "7aca96c2-45d7-4567-99be-0323d7556c55",
        "tags" : [
        ]
      }
    ],
    "commit" : "53856420e861ab29587bc1e49c9fcb641f25f8fc",
    "line" : 198,
    "diffHunk" : "@@ -1,1 +196,200 @@\t// Only add labels if in the list of initializers\n\tif needsInitialization(vol.Initializers, initializerName) {\n\t\tif vol.Spec.AWSElasticBlockStore != nil {\n\t\t\tlabels, err := pvlc.findAWSEBSLabels(vol)\n\t\t\tif err != nil {"
  },
  {
    "id" : "6c2ec0da-8e38-4420-b84f-c885e084ffff",
    "prId" : 44680,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/44680#pullrequestreview-59933734",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0fa3aad3-dfb8-4056-8745-b8a8a5705351",
        "parentId" : null,
        "authorId" : "7aca96c2-45d7-4567-99be-0323d7556c55",
        "body" : "Ditto can we work out how to move this into the gce provider section?",
        "createdAt" : "2017-08-31T17:59:38Z",
        "updatedAt" : "2017-08-31T18:04:29Z",
        "lastEditedBy" : "7aca96c2-45d7-4567-99be-0323d7556c55",
        "tags" : [
        ]
      }
    ],
    "commit" : "53856420e861ab29587bc1e49c9fcb641f25f8fc",
    "line" : 205,
    "diffHunk" : "@@ -1,1 +203,207 @@\t\t\tvolumeLabels = labels\n\t\t}\n\t\tif vol.Spec.GCEPersistentDisk != nil {\n\t\t\tlabels, err := pvlc.findGCEPDLabels(vol)\n\t\t\tif err != nil {"
  }
]