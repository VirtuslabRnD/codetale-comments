[
  {
    "id" : "f7cc0ce3-100f-4223-a95c-c24478dfab67",
    "prId" : 101154,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/101154#pullrequestreview-637184283",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2ccadcbb-27b7-4584-b44c-af5a31ea7568",
        "parentId" : null,
        "authorId" : "b4c6bfe1-e01e-4c5b-8a69-780cd7c03249",
        "body" : "If we can, we should check the node.Spec being set correctly.",
        "createdAt" : "2021-04-15T21:10:55Z",
        "updatedAt" : "2021-05-10T22:58:38Z",
        "lastEditedBy" : "b4c6bfe1-e01e-4c5b-8a69-780cd7c03249",
        "tags" : [
        ]
      },
      {
        "id" : "d00a5f8a-f936-4dbb-97f0-2a857a715ca7",
        "parentId" : "2ccadcbb-27b7-4584-b44c-af5a31ea7568",
        "authorId" : "cc053b27-c569-47a9-93f5-96fb2e43b36d",
        "body" : "I wanted to add unit tests for updateCIDRAllocation but I couldn't find a straightforward way to mock ca.cloud.AliasRangesByProviderID() as it not implemented as an interface that can be mocked or stubbed.",
        "createdAt" : "2021-04-15T22:43:56Z",
        "updatedAt" : "2021-05-10T22:58:38Z",
        "lastEditedBy" : "cc053b27-c569-47a9-93f5-96fb2e43b36d",
        "tags" : [
        ]
      }
    ],
    "commit" : "a013c6a2db54c59b78de974b181586723e088246",
    "line" : 104,
    "diffHunk" : "@@ -1,1 +177,181 @@\t\t}\n\n\t\tt.Run(tc.desc, func(t *testing.T) {\n\t\t\tgot, err := needPodCIDRsUpdate(&node, netCIDRs)\n\t\t\tif tc.wantErr == (err == nil) {"
  },
  {
    "id" : "a46e0e6b-214e-41e6-8c22-07d6a0a317c7",
    "prId" : 101154,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/101154#pullrequestreview-659277928",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "453573a0-7b82-48e5-b98b-04c2de9dd4bf",
        "parentId" : null,
        "authorId" : "b714f738-aa05-4f49-a624-eaaf3e0cbb70",
        "body" : "if there is an error, don't check got? (if .. else if)",
        "createdAt" : "2021-05-13T19:30:11Z",
        "updatedAt" : "2021-05-13T19:30:11Z",
        "lastEditedBy" : "b714f738-aa05-4f49-a624-eaaf3e0cbb70",
        "tags" : [
        ]
      },
      {
        "id" : "978bb53e-88da-4990-8003-65beca0b7bd6",
        "parentId" : "453573a0-7b82-48e5-b98b-04c2de9dd4bf",
        "authorId" : "cc053b27-c569-47a9-93f5-96fb2e43b36d",
        "body" : "Done. \r\nAdded ' if err == nil && got != tc.want { ' to check got only when err == nil.",
        "createdAt" : "2021-05-13T20:31:57Z",
        "updatedAt" : "2021-05-13T20:31:57Z",
        "lastEditedBy" : "cc053b27-c569-47a9-93f5-96fb2e43b36d",
        "tags" : [
        ]
      }
    ],
    "commit" : "a013c6a2db54c59b78de974b181586723e088246",
    "line" : 108,
    "diffHunk" : "@@ -1,1 +181,185 @@\t\t\tif tc.wantErr == (err == nil) {\n\t\t\t\tt.Errorf(\"err: %v, wantErr: %v\", err, tc.wantErr)\n\t\t\t}\n\t\t\tif err == nil && got != tc.want {\n\t\t\t\tt.Errorf(\"got: %v, want: %v\", got, tc.want)"
  }
]