[
  {
    "id" : "21a129d1-ec8d-4e99-a9e8-dd21f6a9db75",
    "prId" : 84123,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/84123#pullrequestreview-311034576",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f6bd844b-c1be-47e8-87a0-7c8d203aa635",
        "parentId" : null,
        "authorId" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "body" : "Nit: this could be placed next to `!apierrs.IsAlreadyExists(err)`",
        "createdAt" : "2019-11-04T12:23:46Z",
        "updatedAt" : "2019-11-04T12:26:30Z",
        "lastEditedBy" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "tags" : [
        ]
      }
    ],
    "commit" : "bd9260711fa09bfdfe95a94c27ab14b95a95cb8a",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +215,219 @@\t\tif _, err := c.client.CoreV1().ServiceAccounts(ns.Name).Create(&sa); err != nil && !apierrs.IsAlreadyExists(err) {\n\t\t\t// we can safely ignore terminating namespace errors\n\t\t\tif !apierrs.HasStatusCause(err, v1.NamespaceTerminatingCause) {\n\t\t\t\tcreateFailures = append(createFailures, err)\n\t\t\t}"
  },
  {
    "id" : "c01d783b-7edc-4981-af48-e1e4a81c9e42",
    "prId" : 35230,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/35230#pullrequestreview-5352264",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ee2570d4-814e-41b1-908c-ef9ce40d8de2",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "do we need to tolerate NotFound here? should we add nsSynced to the WaitForCacheSync on startup?\n",
        "createdAt" : "2016-10-22T02:26:44Z",
        "updatedAt" : "2016-10-27T19:44:50Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "56830a3e-d594-481c-a0b2-26b7b459125d",
        "parentId" : "ee2570d4-814e-41b1-908c-ef9ce40d8de2",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "> do we need to tolerate NotFound here?\n\ntolerate no. Special handling to skip. sure.\n\n> should we add nsSynced to the WaitForCacheSync on startup?\n\nI don't see a reason to.  It's what we're making primary choices based on.\n",
        "createdAt" : "2016-10-22T16:33:16Z",
        "updatedAt" : "2016-10-27T19:44:50Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "df4ed892c447b471754e3e8e2a6497be9815768b",
    "line" : null,
    "diffHunk" : "@@ -1,1 +197,201 @@\t}\n\tif err != nil {\n\t\treturn err\n\t}\n\tif ns.Status.Phase != api.NamespaceActive {"
  },
  {
    "id" : "724c8bb1-0171-4310-9143-7f2480662807",
    "prId" : 35230,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/35230#pullrequestreview-5341516",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "81c4b32f-58e6-43a8-802d-416d4b05c1f7",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "yeah, scary looking\n",
        "createdAt" : "2016-10-22T02:34:28Z",
        "updatedAt" : "2016-10-27T19:44:50Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "df4ed892c447b471754e3e8e2a6497be9815768b",
    "line" : 291,
    "diffHunk" : "@@ -1,1 +216,220 @@\t\t// this is only safe because we never read it and we always write it\n\t\t// TODO eliminate this once the fake client can handle creation without NS\n\t\tsa.Namespace = ns.Name\n\n\t\tif _, err := c.client.Core().ServiceAccounts(ns.Name).Create(&sa); err != nil && !apierrs.IsAlreadyExists(err) {"
  }
]