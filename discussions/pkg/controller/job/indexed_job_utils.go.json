[
  {
    "id" : "2ede45fb-eb2b-41a3-9301-a2b84ad03ccb",
    "prId" : 101601,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/101601#pullrequestreview-662631008",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "06949333-bee0-455c-9230-cb1afcbf0b3b",
        "parentId" : null,
        "authorId" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "body" : "I'd squash these two lines. ",
        "createdAt" : "2021-05-11T13:49:21Z",
        "updatedAt" : "2021-05-11T13:52:15Z",
        "lastEditedBy" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "tags" : [
        ]
      },
      {
        "id" : "36fce33c-cd87-4216-a067-265bea9f3c7d",
        "parentId" : "06949333-bee0-455c-9230-cb1afcbf0b3b",
        "authorId" : "df1239cd-0c05-4df2-8edb-2a21070d1cf0",
        "body" : "I can't figure out how to make it simpler. Any code suggestions about it?",
        "createdAt" : "2021-05-13T16:02:47Z",
        "updatedAt" : "2021-05-13T16:02:47Z",
        "lastEditedBy" : "df1239cd-0c05-4df2-8edb-2a21070d1cf0",
        "tags" : [
        ]
      },
      {
        "id" : "24151dfe-aba9-4228-981e-485711845992",
        "parentId" : "06949333-bee0-455c-9230-cb1afcbf0b3b",
        "authorId" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "body" : "```golang\r\nrateNamePrefix := jobName +  \"-\" + strconv.Itoa(index) + \"-\"\r\n```\r\n:wink: ",
        "createdAt" : "2021-05-18T19:48:38Z",
        "updatedAt" : "2021-05-18T19:48:44Z",
        "lastEditedBy" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "tags" : [
        ]
      },
      {
        "id" : "784222c3-24d0-4e38-8ce2-3c90c4621526",
        "parentId" : "06949333-bee0-455c-9230-cb1afcbf0b3b",
        "authorId" : "df1239cd-0c05-4df2-8edb-2a21070d1cf0",
        "body" : "If change to https://github.com/kubernetes/kubernetes/pull/101601#discussion_r634699571, then `appendIndex` in the following `if` block will be more complicated to represent.\r\nI'd keep the current code.",
        "createdAt" : "2021-05-18T22:26:48Z",
        "updatedAt" : "2021-05-18T22:26:48Z",
        "lastEditedBy" : "df1239cd-0c05-4df2-8edb-2a21070d1cf0",
        "tags" : [
        ]
      }
    ],
    "commit" : "e64e34e0298d27d4099b632f5b7c1ba38fc66561",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +220,224 @@func podGenerateNameWithIndex(jobName string, index int) string {\n\tappendIndex := \"-\" + strconv.Itoa(index) + \"-\"\n\tgenerateNamePrefix := jobName + appendIndex\n\tif len(generateNamePrefix) > names.MaxGeneratedNameLength {\n\t\tgenerateNamePrefix = generateNamePrefix[:names.MaxGeneratedNameLength-len(appendIndex)] + appendIndex"
  },
  {
    "id" : "33344772-7738-47c3-b28d-4b4b2f5ee102",
    "prId" : 98812,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/98812#pullrequestreview-585843953",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "99063a53-7412-46e8-88a2-340fa615adbc",
        "parentId" : null,
        "authorId" : "521b6fc2-4b36-4594-8b5b-9d1e5bcc8759",
        "body" : "assuming duplicated indexes << len(pods), I feel like this could be simplified a lot (in code and performance) by keeping a map of seen indexes -- just curious if you considered that approach before landing at this?",
        "createdAt" : "2021-02-08T12:42:08Z",
        "updatedAt" : "2021-03-03T22:46:14Z",
        "lastEditedBy" : "521b6fc2-4b36-4594-8b5b-9d1e5bcc8759",
        "tags" : [
        ]
      },
      {
        "id" : "f00c1962-4d2e-456e-9eb8-9cd2cc7808d0",
        "parentId" : "99063a53-7412-46e8-88a2-340fa615adbc",
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "I did consider it, but I'm not convinced that a map would be more efficient than in-place sorting.\r\nIn general, there would only be one pod per index, so `appendPodsWithSameIndexForRemovalAndRemaining` is basically a noop.",
        "createdAt" : "2021-02-08T19:35:01Z",
        "updatedAt" : "2021-03-03T22:46:14Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      }
    ],
    "commit" : "8812531b8caa50c656f2b4db274845ac77f99f2b",
    "line" : 122,
    "diffHunk" : "@@ -1,1 +120,124 @@// while the remaining pods are appended to `left`.\n// All pods that don't have a completion index are appended to `rm`.\nfunc appendDuplicatedIndexPodsForRemoval(rm, left, pods []*v1.Pod) ([]*v1.Pod, []*v1.Pod) {\n\tsort.Sort(byCompletionIndex(pods))\n\tlastIndex := unknownCompletionIndex"
  },
  {
    "id" : "17c9fad2-81bc-42ca-8dae-440f0f560923",
    "prId" : 98812,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/98812#pullrequestreview-589034596",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0cfd36b1-2e55-4ef0-ac43-fc5af2a10d14",
        "parentId" : null,
        "authorId" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "body" : "add a comment explaining the semantics of each returned slice. Also s/`rm`/`duplicates`?",
        "createdAt" : "2021-02-11T21:02:04Z",
        "updatedAt" : "2021-03-03T22:46:14Z",
        "lastEditedBy" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "tags" : [
        ]
      },
      {
        "id" : "9a852064-e310-4e27-adca-4c6340dfb691",
        "parentId" : "0cfd36b1-2e55-4ef0-ac43-fc5af2a10d14",
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "Done. Leaving `rm` as is.",
        "createdAt" : "2021-02-11T22:17:52Z",
        "updatedAt" : "2021-03-03T22:46:15Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      }
    ],
    "commit" : "8812531b8caa50c656f2b4db274845ac77f99f2b",
    "line" : 122,
    "diffHunk" : "@@ -1,1 +120,124 @@// while the remaining pods are appended to `left`.\n// All pods that don't have a completion index are appended to `rm`.\nfunc appendDuplicatedIndexPodsForRemoval(rm, left, pods []*v1.Pod) ([]*v1.Pod, []*v1.Pod) {\n\tsort.Sort(byCompletionIndex(pods))\n\tlastIndex := unknownCompletionIndex"
  },
  {
    "id" : "a885d141-c899-4b27-8713-3194da7a8085",
    "prId" : 98812,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/98812#pullrequestreview-593748026",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b8189589-e6c5-475f-9470-2b62665e9a03",
        "parentId" : null,
        "authorId" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "body" : "Any particular reason for another file, since we have `utils.go` in this package already which has barely a single function there? ",
        "createdAt" : "2021-02-18T20:27:05Z",
        "updatedAt" : "2021-03-03T22:46:15Z",
        "lastEditedBy" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "tags" : [
        ]
      },
      {
        "id" : "f8e408b3-bd66-40c2-8a76-c9f4d43cc3b9",
        "parentId" : "b8189589-e6c5-475f-9470-2b62665e9a03",
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "I prefer a more specialized file. Makes the codebase easier to navigate.\r\n\r\nAs for the existing `utils.go` file, I feel like it deserves it's own package. https://github.com/kubernetes/kubernetes/tree/master/staging/src/k8s.io/component-helpers would be a good location for it, although only one binary uses it (but different controllers).",
        "createdAt" : "2021-02-18T23:50:03Z",
        "updatedAt" : "2021-03-03T22:46:15Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      }
    ],
    "commit" : "8812531b8caa50c656f2b4db274845ac77f99f2b",
    "line" : 1,
    "diffHunk" : "@@ -1,1 +-1,3 @@/*\nCopyright 2021 The Kubernetes Authors.\n"
  },
  {
    "id" : "d49c8b81-f697-4d21-a06b-5c1eecd0fd73",
    "prId" : 98812,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/98812#pullrequestreview-596683844",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3a5ecea9-4abf-45f6-9571-d231c8f79221",
        "parentId" : null,
        "authorId" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "body" : "Seems like you could write this simpler by replacing both for-loops with just a single:\r\n```golang\r\n\tfor ; candidate < completions && len(result) < cnt; candidate++ {\r\n\t\tif nonPending.Has(candidate) {\r\n\t\t\tcontinue\r\n\t\t}\r\n\t\tresult = append(result, candidate)\r\n\t}\r\n\treturn result\r\n```\r\nIt's easier to read and understand, also since you're already using int set, it's cheaper to check particular indexes since that's a key check in a map, rather than creating a list which copies values from the map. ",
        "createdAt" : "2021-02-18T20:50:01Z",
        "updatedAt" : "2021-03-03T22:46:15Z",
        "lastEditedBy" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "tags" : [
        ]
      },
      {
        "id" : "fa64f4f0-df15-41cb-b7a5-33fb195935b6",
        "parentId" : "3a5ecea9-4abf-45f6-9571-d231c8f79221",
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "That is a good suggestion that is indeed better in memory usage. However, the complexity is `O(c*log(c))` where `c` is completions.\r\n\r\nThis implementation is `O(np*lg(np) + p)` where `np` is the number of non pending pods and `p` is parallelism.\r\n\r\nNote that `p` is bounded by the API to 10^5, whereas `c` is unbounded.\r\n\r\nThat said, today `c` is effectively bounded by the garbage collection threshold. But that will no longer be the case with the status tracking with finalizers proposed in the other KEP. Once that is implemented, and we can reliably keep track of completed pods in the job status in the compressed format, I'm going to replace the `nonPending` set with a set of intervals, instead of individual numbers, built from `status.completedIndexes` and updated with running pods. I guess I could do that now. WDYT?",
        "createdAt" : "2021-02-18T23:57:59Z",
        "updatedAt" : "2021-03-03T22:46:15Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      },
      {
        "id" : "d29fc9d0-2813-46d9-b24a-3fd401df6d7a",
        "parentId" : "3a5ecea9-4abf-45f6-9571-d231c8f79221",
        "authorId" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "body" : "Seems reasonable, can you add a comment as to why this was chose, while squashing.  ",
        "createdAt" : "2021-02-23T18:22:01Z",
        "updatedAt" : "2021-03-03T22:46:15Z",
        "lastEditedBy" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "tags" : [
        ]
      },
      {
        "id" : "52a2a267-69b8-47b8-927c-8b13d8581fb0",
        "parentId" : "3a5ecea9-4abf-45f6-9571-d231c8f79221",
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "done. Opened #99368 for tracking.",
        "createdAt" : "2021-02-23T18:48:17Z",
        "updatedAt" : "2021-03-03T22:46:15Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      }
    ],
    "commit" : "8812531b8caa50c656f2b4db274845ac77f99f2b",
    "line" : 113,
    "diffHunk" : "@@ -1,1 +111,115 @@\tfor ; candidate < completions && len(result) < count; candidate++ {\n\t\tresult = append(result, candidate)\n\t}\n\treturn result\n}"
  },
  {
    "id" : "05c9f1c4-dffc-4b96-a675-8e4c87ad4a55",
    "prId" : 98238,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/98238#pullrequestreview-654641132",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "06207595-81f5-457f-a8bc-a4a82d0a2a03",
        "parentId" : null,
        "authorId" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "body" : "error rather than info?",
        "createdAt" : "2021-04-30T17:04:07Z",
        "updatedAt" : "2021-05-10T18:49:08Z",
        "lastEditedBy" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "tags" : [
        ]
      },
      {
        "id" : "77bee8c2-b4e5-4912-ae14-6974cb5c654e",
        "parentId" : "06207595-81f5-457f-a8bc-a4a82d0a2a03",
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "Not sure. This would only fail if some other controller overwrote the same field with garbage.\r\n\r\nInfoS with an err field is recommended for known/acceptable errors.",
        "createdAt" : "2021-05-03T20:28:06Z",
        "updatedAt" : "2021-05-10T18:49:08Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      },
      {
        "id" : "d964f8ef-09ce-418c-9494-01dfc1e5f9b8",
        "parentId" : "06207595-81f5-457f-a8bc-a4a82d0a2a03",
        "authorId" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "body" : "sg",
        "createdAt" : "2021-05-07T16:02:09Z",
        "updatedAt" : "2021-05-10T18:49:08Z",
        "lastEditedBy" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "tags" : [
        ]
      }
    ],
    "commit" : "2dd262218816877ce33f303ab3cd31992ed7b08a",
    "line" : 179,
    "diffHunk" : "@@ -1,1 +166,170 @@\t\tinter.First, err = strconv.Atoi(limitsStr[0])\n\t\tif err != nil {\n\t\t\tklog.InfoS(\"Corrupted completed indexes interval, ignoring\", \"job\", klog.KObj(job), \"interval\", intervalStr, \"err\", err)\n\t\t\tcontinue\n\t\t}"
  },
  {
    "id" : "cdcd5891-a878-456b-92a6-c98b95611057",
    "prId" : 98238,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/98238#pullrequestreview-650688796",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "20d22dc6-2290-4a91-95bd-ebbc0c6b4dfe",
        "parentId" : null,
        "authorId" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "body" : "add a comment that `List` returns an ordered slice.",
        "createdAt" : "2021-04-30T18:04:09Z",
        "updatedAt" : "2021-05-10T18:49:08Z",
        "lastEditedBy" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "tags" : [
        ]
      },
      {
        "id" : "5b61258f-fa72-479b-a526-b35db4deb545",
        "parentId" : "20d22dc6-2290-4a91-95bd-ebbc0c6b4dfe",
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "Done",
        "createdAt" : "2021-05-03T20:25:39Z",
        "updatedAt" : "2021-05-10T18:49:08Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      }
    ],
    "commit" : "2dd262218816877ce33f303ab3cd31992ed7b08a",
    "line" : 60,
    "diffHunk" : "@@ -1,1 +68,72 @@\t}\n\t// List returns the items of the set in order.\n\tresult := prevIntervals.withOrderedIndexes(newSucceeded.List())\n\treturn prevIntervals, result\n}"
  },
  {
    "id" : "95fb4782-a262-47f5-9422-43bbd87078a6",
    "prId" : 98238,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/98238#pullrequestreview-694303623",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "81efe14b-d8d2-487b-a496-597fbb618c3c",
        "parentId" : null,
        "authorId" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "body" : "Nit: godoc explaining what total is. ",
        "createdAt" : "2021-06-28T18:44:49Z",
        "updatedAt" : "2021-06-28T19:05:45Z",
        "lastEditedBy" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "tags" : [
        ]
      },
      {
        "id" : "3d4f7ba0-0926-44c8-879d-fb15209cf538",
        "parentId" : "81efe14b-d8d2-487b-a496-597fbb618c3c",
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "Done",
        "createdAt" : "2021-06-28T19:11:02Z",
        "updatedAt" : "2021-06-28T19:17:49Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      }
    ],
    "commit" : "2dd262218816877ce33f303ab3cd31992ed7b08a",
    "line" : 116,
    "diffHunk" : "@@ -1,1 +108,112 @@\n// total returns number of indexes contained in the intervals.\nfunc (oi orderedIntervals) total() int {\n\tvar count int\n\tfor _, iv := range oi {"
  },
  {
    "id" : "d87721ae-4a6d-4727-a6f0-42405a466305",
    "prId" : 98238,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/98238#pullrequestreview-695537105",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bb78f98f-02bb-40ae-aa0a-876f42b6cd5d",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "is there a way to isolate this change so the existing logic is used if the feature is disabled? it's hard to reason about the safety of this change for existing jobs when the new feature is off",
        "createdAt" : "2021-06-29T21:25:53Z",
        "updatedAt" : "2021-06-29T21:25:53Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "6464ddb3-9e54-4576-ac9d-8c067bd2d807",
        "parentId" : "bb78f98f-02bb-40ae-aa0a-876f42b6cd5d",
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "the way would be to revert all the changes and add alternate implementations. I could do that, but we will probably miss the code freeze deadline. I added a lot of coverage for this.",
        "createdAt" : "2021-06-29T21:58:31Z",
        "updatedAt" : "2021-06-29T21:58:31Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      }
    ],
    "commit" : "2dd262218816877ce33f303ab3cd31992ed7b08a",
    "line" : 40,
    "diffHunk" : "@@ -1,1 +52,56 @@// empty list if this Job is not tracked with finalizers. The new list includes\n// the indexes that succeeded since the last sync.\nfunc calculateSucceededIndexes(job *batch.Job, pods []*v1.Pod) (orderedIntervals, orderedIntervals) {\n\tvar prevIntervals orderedIntervals\n\twithFinalizers := trackingUncountedPods(job)"
  }
]