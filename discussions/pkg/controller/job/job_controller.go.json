[
  {
    "id" : "a26ab445-b5ef-4dc1-8f76-582579160d16",
    "prId" : 102022,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/102022#pullrequestreview-675620374",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "582e091c-09fd-4f80-85cb-e0bc5530071d",
        "parentId" : null,
        "authorId" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "body" : "add a comment indicating that we either delete or add pods in a cycle, and deleting pods takes precedence.",
        "createdAt" : "2021-05-14T21:10:49Z",
        "updatedAt" : "2021-05-14T21:15:34Z",
        "lastEditedBy" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "tags" : [
        ]
      },
      {
        "id" : "8053399f-89f4-4035-9c1e-fd966c506d69",
        "parentId" : "582e091c-09fd-4f80-85cb-e0bc5530071d",
        "authorId" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "body" : "this wasn't addressed",
        "createdAt" : "2021-06-03T02:30:51Z",
        "updatedAt" : "2021-06-03T02:30:51Z",
        "lastEditedBy" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "tags" : [
        ]
      },
      {
        "id" : "52b84561-cdf4-4fb5-a3bd-cbaf867d87ae",
        "parentId" : "582e091c-09fd-4f80-85cb-e0bc5530071d",
        "authorId" : "521b6fc2-4b36-4594-8b5b-9d1e5bcc8759",
        "body" : "ah, must have missed it. done.",
        "createdAt" : "2021-06-03T18:46:54Z",
        "updatedAt" : "2021-06-03T18:46:54Z",
        "lastEditedBy" : "521b6fc2-4b36-4594-8b5b-9d1e5bcc8759",
        "tags" : [
        ]
      }
    ],
    "commit" : "ba708e5fc9ed46c0afe6f60d6baf18bc1f5ffe0f",
    "line" : 64,
    "diffHunk" : "@@ -1,1 +818,822 @@\t\t// restrict ourselves to either just pod deletion or pod creation in any\n\t\t// given sync cycle. Of these two, pod deletion takes precedence.\n\t\treturn active, metrics.JobSyncActionPodsDeleted, err\n\t}\n"
  },
  {
    "id" : "b1073dab-63de-42e4-a340-2ef48d6d5a67",
    "prId" : 101601,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/101601#pullrequestreview-653926623",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "742099f1-5138-4365-9dbd-3d8e07e1bcbf",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "is this valid for all combinations of valid job names and valid completionIndex?",
        "createdAt" : "2021-05-04T20:39:04Z",
        "updatedAt" : "2021-05-04T20:39:04Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "3703f751-5e3d-4c59-9c31-94caff9710b3",
        "parentId" : "742099f1-5138-4365-9dbd-3d8e07e1bcbf",
        "authorId" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "body" : "We don't currently validate that the job name is a valid dns name, we should do that for jobs with `CompletionMode= IndexedCompletion`. @alculquicondor is there a maximum index? we should subtract the length from the max allowed DNs subdomain length like we do for cron job: https://github.com/kubernetes/kubernetes/blob/aa450787bff54c96b4588e7ddbfdf9bda89a882a/pkg/apis/batch/validation/validation.go#L208.",
        "createdAt" : "2021-05-04T20:57:13Z",
        "updatedAt" : "2021-05-04T20:57:13Z",
        "lastEditedBy" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "tags" : [
        ]
      },
      {
        "id" : "63eb4844-a46b-45df-805a-98ecf7a35245",
        "parentId" : "742099f1-5138-4365-9dbd-3d8e07e1bcbf",
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "The completions field is an `int32`, so 10 would be the max number of digits.\r\n\r\n@liggitt can we tighten the validation for an alpha feature?",
        "createdAt" : "2021-05-04T21:00:07Z",
        "updatedAt" : "2021-05-04T21:00:07Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      },
      {
        "id" : "24815a80-21bc-415e-9342-4d76d1e8e772",
        "parentId" : "742099f1-5138-4365-9dbd-3d8e07e1bcbf",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "10 + 1 for the dash, right?\r\n\r\nyou can do the validation when creating an indexed job, and when updating a non-indexed job to an indexed job",
        "createdAt" : "2021-05-04T21:03:30Z",
        "updatedAt" : "2021-05-04T21:03:31Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "75cf5734-39e4-4dfc-944b-0e3487d98848",
        "parentId" : "742099f1-5138-4365-9dbd-3d8e07e1bcbf",
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "completionMode is immutable :)",
        "createdAt" : "2021-05-04T21:05:01Z",
        "updatedAt" : "2021-05-04T21:05:01Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      },
      {
        "id" : "c433bd0c-0ee4-4d2b-a6eb-89d4fb00fc71",
        "parentId" : "742099f1-5138-4365-9dbd-3d8e07e1bcbf",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "even better! validating on creation for indexed jobs sgtm.",
        "createdAt" : "2021-05-04T21:26:51Z",
        "updatedAt" : "2021-05-04T21:27:06Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "05ca09ab-d931-42d2-b4b5-f025532760b4",
        "parentId" : "742099f1-5138-4365-9dbd-3d8e07e1bcbf",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "validation added in https://github.com/kubernetes/kubernetes/pull/101292",
        "createdAt" : "2021-05-06T21:53:30Z",
        "updatedAt" : "2021-05-06T21:53:30Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "e64e34e0298d27d4099b632f5b7c1ba38fc66561",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +872,876 @@\t\t\t\t\t\ttemplate = podTemplate.DeepCopy()\n\t\t\t\t\t\taddCompletionIndexAnnotation(template, completionIndex)\n\t\t\t\t\t\ttemplate.Spec.Hostname = fmt.Sprintf(\"%s-%d\", job.Name, completionIndex)\n\t\t\t\t\t}\n\t\t\t\t\tdefer wait.Done()"
  },
  {
    "id" : "f92ea645-b280-4012-b2d2-b1adfb219112",
    "prId" : 101601,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/101601#pullrequestreview-654603241",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "554cdcd8-6ecd-4aed-bb9e-d511e3b4a508",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "on line 837 above, won't that cause an out of bounds panic if `indexesToAdd = indexesToAdd[1:]` truncates `indexesToAdd` to `[]` and the loop runs another time? shouldn't that be `if len(indexesToAdd) > 0 {`?",
        "createdAt" : "2021-05-06T22:03:42Z",
        "updatedAt" : "2021-05-06T22:03:42Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "02dadb08-5f4c-4fb5-b554-5238ff86f552",
        "parentId" : "554cdcd8-6ecd-4aed-bb9e-d511e3b4a508",
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "In line 815, `diff = len(indexesToAdd)`, so that wouldn't happen. The check for `nil` is to distinguish non-indexed jobs.",
        "createdAt" : "2021-05-07T13:40:58Z",
        "updatedAt" : "2021-05-07T13:40:58Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      },
      {
        "id" : "ccf1fd50-b872-4df4-a8e0-7d617611ace0",
        "parentId" : "554cdcd8-6ecd-4aed-bb9e-d511e3b4a508",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "those are pretty separated, it's easy to imagine that logic changing. if the zero-length check is correct, it seems more robust",
        "createdAt" : "2021-05-07T15:14:58Z",
        "updatedAt" : "2021-05-07T15:14:58Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "e364bb5b-ff60-4e88-a9e6-24bd0179b677",
        "parentId" : "554cdcd8-6ecd-4aed-bb9e-d511e3b4a508",
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "sounds good, will change in #98238",
        "createdAt" : "2021-05-07T15:26:36Z",
        "updatedAt" : "2021-05-07T15:26:37Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      }
    ],
    "commit" : "e64e34e0298d27d4099b632f5b7c1ba38fc66561",
    "line" : 1,
    "diffHunk" : "@@ -1,1 +869,873 @@\t\t\t\tgo func() {\n\t\t\t\t\ttemplate := podTemplate\n\t\t\t\t\tif completionIndex != unknownCompletionIndex {\n\t\t\t\t\t\ttemplate = podTemplate.DeepCopy()\n\t\t\t\t\t\taddCompletionIndexAnnotation(template, completionIndex)"
  },
  {
    "id" : "50994235-6d44-45cd-8d59-a41444e596bd",
    "prId" : 101292,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/101292#pullrequestreview-644811490",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d503bbc6-ebfc-4465-b5cf-15ff5e0acbad",
        "parentId" : null,
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "better crop the array podsToDelete.",
        "createdAt" : "2021-04-26T15:04:07Z",
        "updatedAt" : "2021-05-05T17:04:06Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      },
      {
        "id" : "db249f05-47bc-45ff-b9be-7558006d2da7",
        "parentId" : "d503bbc6-ebfc-4465-b5cf-15ff5e0acbad",
        "authorId" : "df1239cd-0c05-4df2-8edb-2a21070d1cf0",
        "body" : "but modify rmAtLeast before entering activePodForRemoval may reduce calculate operations in that function, why better crop podsToDelete?",
        "createdAt" : "2021-04-26T15:08:37Z",
        "updatedAt" : "2021-05-05T17:04:06Z",
        "lastEditedBy" : "df1239cd-0c05-4df2-8edb-2a21070d1cf0",
        "tags" : [
        ]
      },
      {
        "id" : "62a9be17-4da8-4a22-aad4-12674f2379ac",
        "parentId" : "d503bbc6-ebfc-4465-b5cf-15ff5e0acbad",
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "because activePodsForRemoval might return more than `rmAtLeast`.",
        "createdAt" : "2021-04-26T15:12:19Z",
        "updatedAt" : "2021-05-05T17:04:06Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      },
      {
        "id" : "0e32c586-4147-4792-8cbb-05a918fea93e",
        "parentId" : "d503bbc6-ebfc-4465-b5cf-15ff5e0acbad",
        "authorId" : "df1239cd-0c05-4df2-8edb-2a21070d1cf0",
        "body" : "ah yes, you're right. Thanks for pointing out.",
        "createdAt" : "2021-04-26T15:26:39Z",
        "updatedAt" : "2021-05-05T17:04:06Z",
        "lastEditedBy" : "df1239cd-0c05-4df2-8edb-2a21070d1cf0",
        "tags" : [
        ]
      }
    ],
    "commit" : "0c99f29f98f3c58957bbf8edef27c939bfdbfe3b",
    "line" : 86,
    "diffHunk" : "@@ -1,1 +804,808 @@\t\trmAtLeast = 0\n\t}\n\tpodsToDelete := activePodsForRemoval(job, activePods, int(rmAtLeast))\n\tif len(podsToDelete) > maxPodCreateDeletePerSync {\n\t\tpodsToDelete = podsToDelete[:maxPodCreateDeletePerSync]"
  },
  {
    "id" : "948006b7-4e60-47a7-8a80-aa1c6c0bbcc9",
    "prId" : 98812,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/98812#pullrequestreview-589034596",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "023a921e-90c6-4683-982a-d22d31e25b85",
        "parentId" : null,
        "authorId" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "body" : "I didn't check if this is actually problematic, but [this comment](https://github.com/kubernetes/kubernetes/pull/98812/commits/90f2524d22a2eed2e8b601e4dd6fa9fec2a03b59?file-filters%5B%5D=.go#diff-a7577a7dede7864ff38c631319033714fdd0bed91108d976282e1099507e6ff0R704) warns against modifying the slice, and here `left` could be referencing that slice...",
        "createdAt" : "2021-02-11T20:21:50Z",
        "updatedAt" : "2021-03-03T22:46:14Z",
        "lastEditedBy" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "tags" : [
        ]
      },
      {
        "id" : "1e137586-4e94-4f5a-ae50-3b290313b00d",
        "parentId" : "023a921e-90c6-4683-982a-d22d31e25b85",
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "discussed offline. Comment was just saying that manageJob does not keep the slice in sync with pod additions/deletions done to kubeapiserver",
        "createdAt" : "2021-02-11T22:39:01Z",
        "updatedAt" : "2021-03-03T22:46:15Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      }
    ],
    "commit" : "8812531b8caa50c656f2b4db274845ac77f99f2b",
    "line" : 329,
    "diffHunk" : "@@ -1,1 +848,852 @@\n\tif len(rm) < rmAtLeast {\n\t\tsort.Sort(controller.ActivePods(left))\n\t\trm = append(rm, left[:rmAtLeast-len(rm)]...)\n\t}"
  },
  {
    "id" : "93ccacdc-99df-4ee6-907c-4c875cc87ad8",
    "prId" : 98812,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/98812#pullrequestreview-596656576",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "338c7f18-d8f4-4cd6-b482-9c2d3bd43221",
        "parentId" : null,
        "authorId" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "body" : "Shouldn't that also be exposed in `.status.conditions` too?",
        "createdAt" : "2021-02-18T19:32:30Z",
        "updatedAt" : "2021-03-03T22:46:15Z",
        "lastEditedBy" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "tags" : [
        ]
      },
      {
        "id" : "27ecab70-9a8d-460c-9b14-ddf438c1009a",
        "parentId" : "338c7f18-d8f4-4cd6-b482-9c2d3bd43221",
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "Good question.\r\nI say no, because conditions are part of the API that we have to permanently maintain. A disabled feature gate is just temporary (for a few releases). And most people won't disable it after enabling it. So a condition would be an overkill.",
        "createdAt" : "2021-02-18T23:55:05Z",
        "updatedAt" : "2021-03-03T22:46:15Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      },
      {
        "id" : "bd44d66f-240e-4089-9ec6-b98dd4433411",
        "parentId" : "338c7f18-d8f4-4cd6-b482-9c2d3bd43221",
        "authorId" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "body" : "Good point.",
        "createdAt" : "2021-02-23T18:16:38Z",
        "updatedAt" : "2021-03-03T22:46:15Z",
        "lastEditedBy" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "tags" : [
        ]
      }
    ],
    "commit" : "8812531b8caa50c656f2b4db274845ac77f99f2b",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +472,476 @@\t// Cannot create Pods if this is an Indexed Job and the feature is disabled.\n\tif !utilfeature.DefaultFeatureGate.Enabled(features.IndexedJob) && job.Spec.CompletionMode == batch.IndexedCompletion {\n\t\tjm.recorder.Event(&job, v1.EventTypeWarning, \"IndexedJobDisabled\", \"Skipped Indexed Job sync because feature is disabled.\")\n\t\treturn false, nil\n\t}"
  },
  {
    "id" : "b4de71cc-6d01-4e55-b390-0698dc4645a2",
    "prId" : 98727,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/98727#pullrequestreview-605658551",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d31e8b9d-6908-40aa-97e0-fd363dfbe7af",
        "parentId" : null,
        "authorId" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "body" : ":+1: ",
        "createdAt" : "2021-03-05T22:26:59Z",
        "updatedAt" : "2021-03-08T20:08:43Z",
        "lastEditedBy" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "tags" : [
        ]
      }
    ],
    "commit" : "a0844da8f799e6f360193ecfd02c84d61a62958b",
    "line" : 73,
    "diffHunk" : "@@ -1,1 +602,606 @@\t\t\t\t\t// Job is continuously active.)\n\t\t\t\t\tnow := metav1.Now()\n\t\t\t\t\tjob.Status.StartTime = &now\n\t\t\t\t}\n\t\t\t}"
  },
  {
    "id" : "90601b97-feda-4029-a42a-01b2dcd4f64a",
    "prId" : 98238,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/98238#pullrequestreview-650688796",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7bc7c06c-6ca0-4e5e-843d-b40bbeb03ca9",
        "parentId" : null,
        "authorId" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "body" : "add a comment that this will patch newly claimed pods with ownerRef and finalizers.",
        "createdAt" : "2021-04-30T19:51:39Z",
        "updatedAt" : "2021-05-10T18:49:08Z",
        "lastEditedBy" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "tags" : [
        ]
      },
      {
        "id" : "02908475-9f37-402d-8c6f-68dc040d37b9",
        "parentId" : "7bc7c06c-6ca0-4e5e-843d-b40bbeb03ca9",
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "Done",
        "createdAt" : "2021-05-03T20:41:28Z",
        "updatedAt" : "2021-05-10T18:49:08Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      }
    ],
    "commit" : "2dd262218816877ce33f303ab3cd31992ed7b08a",
    "line" : 205,
    "diffHunk" : "@@ -1,1 +528,532 @@\tcm := controller.NewPodControllerRefManager(jm.podControl, j, selector, controllerKind, canAdoptFunc, finalizers...)\n\t// When adopting Pods, this operation adds an ownerRef and finalizers.\n\tpods, err = cm.ClaimPods(pods)\n\tif err != nil || !withFinalizers {\n\t\treturn pods, err"
  },
  {
    "id" : "c71ffcee-c4d2-44b0-9bfc-97e97ca5cd4c",
    "prId" : 98238,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/98238#pullrequestreview-650688796",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9e4427a4-4dd1-44ea-9f52-d8985d7cf418",
        "parentId" : null,
        "authorId" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "body" : "can we change ClaimPods to update the pods in their state after patching instead of doing another iteration here to adding the finalizers?",
        "createdAt" : "2021-04-30T19:55:16Z",
        "updatedAt" : "2021-05-10T18:49:08Z",
        "lastEditedBy" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "tags" : [
        ]
      },
      {
        "id" : "75655d80-395e-4b1a-a880-f311aa5e093d",
        "parentId" : "9e4427a4-4dd1-44ea-9f52-d8985d7cf418",
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "I tried, but the changes in the manager were too many. Maybe I could revisit in a follow up.",
        "createdAt" : "2021-05-03T20:42:55Z",
        "updatedAt" : "2021-05-10T18:49:08Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      }
    ],
    "commit" : "2dd262218816877ce33f303ab3cd31992ed7b08a",
    "line" : 210,
    "diffHunk" : "@@ -1,1 +533,537 @@\t}\n\t// Set finalizer on adopted pods for the remaining calculations.\n\tfor i, p := range pods {\n\t\tadopted := true\n\t\tfor _, r := range p.OwnerReferences {"
  },
  {
    "id" : "87c04dd3-a28a-46c0-91f0-1fe9a2d5b956",
    "prId" : 98238,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/98238#pullrequestreview-657925926",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e9cb2e64-6b5b-478c-9273-fd0fb1b90bd2",
        "parentId" : null,
        "authorId" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "body" : "What will DeletePod return when deleting a pod with a finalizer?",
        "createdAt" : "2021-05-03T16:41:12Z",
        "updatedAt" : "2021-05-10T18:49:08Z",
        "lastEditedBy" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "tags" : [
        ]
      },
      {
        "id" : "5be9e762-6f98-4de3-ac4f-57313e5327bf",
        "parentId" : "e9cb2e64-6b5b-478c-9273-fd0fb1b90bd2",
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "the request returns 200 :)",
        "createdAt" : "2021-05-03T20:55:30Z",
        "updatedAt" : "2021-05-10T18:49:08Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      },
      {
        "id" : "0de05fd5-ccee-4f7c-91a8-25f5015026a0",
        "parentId" : "e9cb2e64-6b5b-478c-9273-fd0fb1b90bd2",
        "authorId" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "body" : "it will set the deletion timestamp, right?",
        "createdAt" : "2021-05-12T13:49:42Z",
        "updatedAt" : "2021-05-12T13:49:42Z",
        "lastEditedBy" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "tags" : [
        ]
      },
      {
        "id" : "2b7bb2cf-b334-40ec-b4cd-ea599206bf5a",
        "parentId" : "e9cb2e64-6b5b-478c-9273-fd0fb1b90bd2",
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "Yes, updated the method's comment.",
        "createdAt" : "2021-05-12T14:01:53Z",
        "updatedAt" : "2021-05-12T14:03:03Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      }
    ],
    "commit" : "2dd262218816877ce33f303ab3cd31992ed7b08a",
    "line" : 469,
    "diffHunk" : "@@ -1,1 +811,815 @@\t\tgo func(pod *v1.Pod) {\n\t\t\tdefer wg.Done()\n\t\t\tif err := jm.podControl.DeletePod(job.Namespace, pod.Name, job); err != nil && !apierrors.IsNotFound(err) {\n\t\t\t\tatomic.AddInt32(&successfulDeletes, -1)\n\t\t\t\terrCh <- err"
  },
  {
    "id" : "fbcb2b17-7905-4f94-b760-a6a8be230b82",
    "prId" : 98238,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/98238#pullrequestreview-672512214",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "101bab78-6619-4a95-994e-9ca4acfeff31",
        "parentId" : null,
        "authorId" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "body" : "so the list will end up with a mix of pods from the informer cache (and so could change underneath us) and cloned ones. Do you see a problem with that?",
        "createdAt" : "2021-05-07T16:38:46Z",
        "updatedAt" : "2021-05-10T18:49:08Z",
        "lastEditedBy" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "tags" : [
        ]
      },
      {
        "id" : "6a549fb6-cedc-480d-867e-faf30cd48778",
        "parentId" : "101bab78-6619-4a95-994e-9ca4acfeff31",
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "We don't really modify pods. This is just masking the apiserver-side addition of finalizers that happens on adoption. Since pod adoption is not the usual path, in most cases we wouldn't clone any pods.\r\nSo I argue that we are not introducing any instability that didn't already exist.\r\n\r\nAlthough a safer approach would be to clone all the pods at this point as some kind of snapshot. @soltysh wdyt? Is it worth the extra memory?",
        "createdAt" : "2021-05-10T18:30:40Z",
        "updatedAt" : "2021-05-10T18:49:59Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      },
      {
        "id" : "5b0f1715-9689-49cd-86da-b1052353cf6b",
        "parentId" : "101bab78-6619-4a95-994e-9ca4acfeff31",
        "authorId" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "body" : "As I'm thinking through it, I think I'm ok with the mixed list. The only problem will be when a cloned pod will get updated underneath us, but we'll eventually reconcile that status. I'm not sure if cloning the entire list is worth that cost. At least I'd go with this for starters and we can always re-visit. ",
        "createdAt" : "2021-05-24T19:56:48Z",
        "updatedAt" : "2021-05-24T20:02:52Z",
        "lastEditedBy" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "tags" : [
        ]
      },
      {
        "id" : "c58681da-0492-4c4f-8e65-2fff2ad05c9b",
        "parentId" : "101bab78-6619-4a95-994e-9ca4acfeff31",
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "sgtm",
        "createdAt" : "2021-05-31T19:41:50Z",
        "updatedAt" : "2021-05-31T19:58:28Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      }
    ],
    "commit" : "2dd262218816877ce33f303ab3cd31992ed7b08a",
    "line" : 219,
    "diffHunk" : "@@ -1,1 +542,546 @@\t\t}\n\t\tif adopted && !hasJobTrackingFinalizer(p) {\n\t\t\tpods[i] = p.DeepCopy()\n\t\t\tpods[i].Finalizers = append(p.Finalizers, batch.JobTrackingFinalizer)\n\t\t}"
  },
  {
    "id" : "fb755d4d-b066-457e-9e7a-b50db2f6c53b",
    "prId" : 98238,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/98238#pullrequestreview-672512214",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bacc2964-8f0e-45de-9ca0-2c4a83b123ad",
        "parentId" : null,
        "authorId" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "body" : "Previously this field was counting pod failures, which are mostly related to the user logic, now this is counting something more. The API describes the Failed status field as \"The number of pods which reached phase Failed.\", should we update the comment to say \"the number of pods that didn't succeed\"? ",
        "createdAt" : "2021-05-07T16:48:45Z",
        "updatedAt" : "2021-05-10T18:49:08Z",
        "lastEditedBy" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "tags" : [
        ]
      },
      {
        "id" : "4ccfd357-b95e-4475-a94b-9c3823cfc816",
        "parentId" : "bacc2964-8f0e-45de-9ca0-2c4a83b123ad",
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "Added a comment on why I'm counting them as failures. This is also part of the KEP https://github.com/kubernetes/enhancements/tree/master/keps/sig-apps/2307-job-tracking-without-lingering-pods#deleted-pods\r\n\r\n@smarterclayton should we change the field description as @ahg-g suggests?",
        "createdAt" : "2021-05-10T18:42:12Z",
        "updatedAt" : "2021-05-10T18:49:59Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      },
      {
        "id" : "8da5924d-0e58-4c05-8643-11d9a5344249",
        "parentId" : "bacc2964-8f0e-45de-9ca0-2c4a83b123ad",
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "ping @smarterclayton ",
        "createdAt" : "2021-05-12T14:02:20Z",
        "updatedAt" : "2021-05-12T14:03:03Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      },
      {
        "id" : "3f47df20-aa5e-4a2f-94ad-2cfd76eefe59",
        "parentId" : "bacc2964-8f0e-45de-9ca0-2c4a83b123ad",
        "authorId" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "body" : "I think we should be good on this front. ",
        "createdAt" : "2021-05-24T19:48:23Z",
        "updatedAt" : "2021-05-24T20:02:52Z",
        "lastEditedBy" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "tags" : [
        ]
      },
      {
        "id" : "612d32c6-604a-458f-8276-f88efe753a0b",
        "parentId" : "bacc2964-8f0e-45de-9ca0-2c4a83b123ad",
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "Ack",
        "createdAt" : "2021-05-31T19:43:10Z",
        "updatedAt" : "2021-05-31T19:58:28Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      }
    ],
    "commit" : "2dd262218816877ce33f303ab3cd31992ed7b08a",
    "line" : 782,
    "diffHunk" : "@@ -1,1 +1146,1150 @@\t\t// Counting deleted Pods as failures to account for orphan Pods that never\n\t\t// have a chance to reach the Failed phase.\n\t\treturn p.Status.Phase == v1.PodFailed || (p.DeletionTimestamp != nil && p.Status.Phase != v1.PodSucceeded)\n\t}))\n\treturn succeeded, failed"
  },
  {
    "id" : "13418b7d-718e-4fd1-821c-c2db03e3bc15",
    "prId" : 91008,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/91008#pullrequestreview-423479905",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "232f61dc-1570-47a8-962d-32ca2281e41f",
        "parentId" : null,
        "authorId" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "body" : "Similarly, pls squash these ifs. ",
        "createdAt" : "2020-06-03T11:58:53Z",
        "updatedAt" : "2020-06-04T08:45:34Z",
        "lastEditedBy" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "tags" : [
        ]
      }
    ],
    "commit" : "884f94ad92e5710c1f2384c3e1fd7d431e24175f",
    "line" : 41,
    "diffHunk" : "@@ -1,1 +718,722 @@\t\t\t\t\t// Decrement the expected number of deletes because the informer won't observe this deletion\n\t\t\t\t\tjm.expectations.DeletionObserved(jobKey)\n\t\t\t\t\tif !apierrors.IsNotFound(err) {\n\t\t\t\t\t\tklog.V(2).Infof(\"Failed to delete %v, decremented expectations for job %q/%q\", activePods[ix].Name, job.Namespace, job.Name)\n\t\t\t\t\t\tactiveLock.Lock()"
  },
  {
    "id" : "7188a51d-b785-422e-a47a-e3bbaeb2dc9a",
    "prId" : 80263,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/80263#pullrequestreview-263311984",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ca0a9dbb-e721-4b89-85e3-b708e2ed67cc",
        "parentId" : null,
        "authorId" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "body" : "We need to return when `diff == 0` case too ",
        "createdAt" : "2019-07-17T20:56:23Z",
        "updatedAt" : "2019-07-17T21:03:29Z",
        "lastEditedBy" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "tags" : [
        ]
      }
    ],
    "commit" : "898f09934628fbb8880cbe9dae9f86128340ded3",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +748,752 @@\t\t}\n\t\tif diff == 0 {\n\t\t\treturn active, nil\n\t\t}\n\t\tjm.expectations.ExpectCreations(jobKey, int(diff))"
  },
  {
    "id" : "65c8afbd-75df-44fa-9118-65b150e7ad11",
    "prId" : 60985,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/60985#pullrequestreview-103759320",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "60bc0325-16a6-40e6-a19b-c9d4284ca332",
        "parentId" : null,
        "authorId" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "body" : "Just to confirm, this will cause `backoff == time.Duration(0)`, right?",
        "createdAt" : "2018-03-13T00:09:53Z",
        "updatedAt" : "2018-03-14T10:49:51Z",
        "lastEditedBy" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "tags" : [
        ]
      },
      {
        "id" : "9d6cf25f-d1e4-494f-a195-75fc0e39e93d",
        "parentId" : "60bc0325-16a6-40e6-a19b-c9d4284ca332",
        "authorId" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "body" : "Yes, this will remove the key from the queue which will result in a fresh add with a zero backoff. ",
        "createdAt" : "2018-03-14T10:21:06Z",
        "updatedAt" : "2018-03-14T10:49:51Z",
        "lastEditedBy" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "tags" : [
        ]
      }
    ],
    "commit" : "1266252dc2cd38da51d0697de83e8e020503c2e8",
    "line" : 110,
    "diffHunk" : "@@ -1,1 +359,363 @@\n\tif immediate {\n\t\tjm.queue.Forget(key)\n\t}\n\tbackoff := getBackoff(jm.queue, key)"
  },
  {
    "id" : "269a69b9-8b32-43f1-95a4-1cc2625d20bb",
    "prId" : 58972,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/58972#pullrequestreview-113607721",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "01f90206-9294-4b0b-a084-bb2394cf88f2",
        "parentId" : null,
        "authorId" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "body" : "Should we check the pods' restart policy?",
        "createdAt" : "2018-04-18T22:43:09Z",
        "updatedAt" : "2018-04-18T22:56:18Z",
        "lastEditedBy" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "tags" : [
        ]
      },
      {
        "id" : "9a413ef3-1b19-4735-957e-f7fd377a2073",
        "parentId" : "01f90206-9294-4b0b-a084-bb2394cf88f2",
        "authorId" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "body" : "I don't think that's needed. I can't think of a reasonable way they will differ, (other than hacky) :wink: ",
        "createdAt" : "2018-04-19T13:38:51Z",
        "updatedAt" : "2018-04-19T13:38:51Z",
        "lastEditedBy" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "tags" : [
        ]
      }
    ],
    "commit" : "5ff7e977bcff604763cf67b249713c0442bddadc",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +621,625 @@// this method applies only to pods with restartPolicy == OnFailure\nfunc pastBackoffLimitOnFailure(job *batch.Job, pods []*v1.Pod) bool {\n\tif job.Spec.Template.Spec.RestartPolicy != v1.RestartPolicyOnFailure {\n\t\treturn false\n\t}"
  },
  {
    "id" : "68f59ddc-ead3-4d93-8223-26b650f7680e",
    "prId" : 58972,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/58972#pullrequestreview-113609501",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d84f2312-ad17-491a-a834-16611cf19e02",
        "parentId" : null,
        "authorId" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "body" : "Shouldn't it be \r\n```go\r\nif exceedsBackoffLimit || (jobHaveNewFailure && pastBackoffLimitOnFailure(&job, pods)) \r\n```\r\n?\r\n\r\nBecause you only check the pod restarts/job retries  when the job fails?\r\n\r\nIf so, please add a test for this case too. ",
        "createdAt" : "2018-04-18T22:55:28Z",
        "updatedAt" : "2018-04-18T22:56:18Z",
        "lastEditedBy" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "tags" : [
        ]
      },
      {
        "id" : "9db85731-4595-4e30-b740-08d8ede40ecd",
        "parentId" : "d84f2312-ad17-491a-a834-16611cf19e02",
        "authorId" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "body" : "No, the current check is needed. `jobHaveNewFailure` verifies actual pod failures, which for `OnFailure` restart policy won't happen (unless the kubelet will kill the pod). So we always need to check these numbers as is. ",
        "createdAt" : "2018-04-19T13:42:40Z",
        "updatedAt" : "2018-04-19T13:42:41Z",
        "lastEditedBy" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "tags" : [
        ]
      },
      {
        "id" : "b2208598-b944-43c3-aa00-27f2a0ad3c48",
        "parentId" : "d84f2312-ad17-491a-a834-16611cf19e02",
        "authorId" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "body" : "I think the test case I've added in this PR nicely covers it. ",
        "createdAt" : "2018-04-19T13:43:06Z",
        "updatedAt" : "2018-04-19T13:43:06Z",
        "lastEditedBy" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "tags" : [
        ]
      }
    ],
    "commit" : "5ff7e977bcff604763cf67b249713c0442bddadc",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +499,503 @@\texceedsBackoffLimit := jobHaveNewFailure && (int32(previousRetry)+1 > *job.Spec.BackoffLimit)\n\n\tif exceedsBackoffLimit || pastBackoffLimitOnFailure(&job, pods) {\n\t\t// check if the number of pod restart exceeds backoff (for restart OnFailure only)\n\t\t// OR if the number of failed jobs increased since the last syncJob"
  },
  {
    "id" : "01890af1-7741-4254-8deb-c8ab7424be1d",
    "prId" : 13259,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c7aa2123-0681-464c-b493-03cd0177cc5d",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "Dereferencing without a nil check worries me.  Is everyone else satisfied with knowing that if the object is created via conversion from a serialized type and if no one ever clears the field, this works?  It worries me that this code depends on a particular path of building its objects.\n",
        "createdAt" : "2015-09-17T14:10:38Z",
        "updatedAt" : "2015-09-17T14:10:38Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "999ff004-e822-4814-b2cc-18f90e9b7d94",
        "parentId" : "c7aa2123-0681-464c-b493-03cd0177cc5d",
        "authorId" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "body" : "seems okay to me to skip nil checks in private methods.\n",
        "createdAt" : "2015-09-17T17:02:49Z",
        "updatedAt" : "2015-09-17T17:02:49Z",
        "lastEditedBy" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "tags" : [
        ]
      }
    ],
    "commit" : "8cefa2ee5554cdc015e1ad63e88b3ce7c65de973",
    "line" : 369,
    "diffHunk" : "@@ -1,1 +367,371 @@func (jm *JobManager) manageJob(activePods []*api.Pod, successful, unsuccessful int, job *experimental.Job) int {\n\tactive := len(activePods)\n\tparallelism := *job.Spec.Parallelism\n\tjobKey, err := controller.KeyFunc(job)\n\tif err != nil {"
  },
  {
    "id" : "7cc0931a-43fe-4e48-ba40-c94adec1f771",
    "prId" : 13259,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6116c274-1655-4040-9d63-d5773f76a5e2",
        "parentId" : null,
        "authorId" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "body" : "In a follow-up PR, consider factoring below inline function to a named function.\n",
        "createdAt" : "2015-09-17T17:14:21Z",
        "updatedAt" : "2015-09-17T17:14:21Z",
        "lastEditedBy" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "tags" : [
        ]
      }
    ],
    "commit" : "8cefa2ee5554cdc015e1ad63e88b3ce7c65de973",
    "line" : 96,
    "diffHunk" : "@@ -1,1 +94,98 @@\t\t&experimental.Job{},\n\t\treplicationcontroller.FullControllerResyncPeriod,\n\t\tframework.ResourceEventHandlerFuncs{\n\t\t\tAddFunc: jm.enqueueController,\n\t\t\tUpdateFunc: func(old, cur interface{}) {"
  },
  {
    "id" : "0178ecea-183d-48cd-ad81-bad1975e1edd",
    "prId" : 13259,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bc30ba62-88a9-4ab1-935b-42ae8c7e7c98",
        "parentId" : null,
        "authorId" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "body" : "In a follow-up PR, consider a comment explaining why completed job changes are ignored.\n",
        "createdAt" : "2015-09-17T17:14:49Z",
        "updatedAt" : "2015-09-17T17:14:49Z",
        "lastEditedBy" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "tags" : [
        ]
      }
    ],
    "commit" : "8cefa2ee5554cdc015e1ad63e88b3ce7c65de973",
    "line" : 100,
    "diffHunk" : "@@ -1,1 +98,102 @@\t\t\tUpdateFunc: func(old, cur interface{}) {\n\t\t\t\tjob := cur.(*experimental.Job)\n\t\t\t\tfor _, c := range job.Status.Conditions {\n\t\t\t\t\tif c.Type == experimental.JobComplete && c.Status == api.ConditionTrue {\n\t\t\t\t\t\treturn"
  },
  {
    "id" : "cd6d4221-2327-4c80-a87b-83c9be440981",
    "prId" : 13259,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1c8104c1-e06c-4f2e-8e15-bedea2db475e",
        "parentId" : null,
        "authorId" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "body" : "I think people will want a way to allow for a variable but finite number of failures, and a fixed number of successes.    So, I think we may want to revisit this logic before this graduates from experimental to v1 API.\n",
        "createdAt" : "2015-09-17T18:53:30Z",
        "updatedAt" : "2015-09-17T18:53:30Z",
        "lastEditedBy" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "tags" : [
        ]
      }
    ],
    "commit" : "8cefa2ee5554cdc015e1ad63e88b3ce7c65de973",
    "line" : 406,
    "diffHunk" : "@@ -1,1 +404,408 @@\t\tdiff := *job.Spec.Completions - successful\n\t\t// for RestartPolicyNever we need to count unsuccessful pods as well\n\t\tif job.Spec.Template.Spec.RestartPolicy == api.RestartPolicyNever {\n\t\t\tdiff -= unsuccessful\n\t\t}"
  },
  {
    "id" : "11b663f5-fca3-471a-8f67-680ca532b2a9",
    "prId" : 13259,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cd1e9b4b-6778-4210-90ea-28f0c2427264",
        "parentId" : null,
        "authorId" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "body" : "I think this differs from the API docs.   Fix the API docs in a separate PR?\n",
        "createdAt" : "2015-09-17T19:05:23Z",
        "updatedAt" : "2015-09-17T19:05:23Z",
        "lastEditedBy" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "tags" : [
        ]
      },
      {
        "id" : "ad543fbb-db21-4cd9-abbe-c2d22b6ed979",
        "parentId" : "cd1e9b4b-6778-4210-90ea-28f0c2427264",
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "Or make this match the doc and the design, and we can revisit adding failed completion after further design discussion.\n",
        "createdAt" : "2015-09-17T19:59:23Z",
        "updatedAt" : "2015-09-17T19:59:23Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      }
    ],
    "commit" : "8cefa2ee5554cdc015e1ad63e88b3ce7c65de973",
    "line" : 407,
    "diffHunk" : "@@ -1,1 +405,409 @@\t\t// for RestartPolicyNever we need to count unsuccessful pods as well\n\t\tif job.Spec.Template.Spec.RestartPolicy == api.RestartPolicyNever {\n\t\t\tdiff -= unsuccessful\n\t\t}\n\t\t// limit to parallelism and count active pods as well"
  },
  {
    "id" : "16439c2a-f06e-41de-bb3b-aa26741d6289",
    "prId" : 13259,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9425f105-ae49-49b5-a91f-120c7108e6ce",
        "parentId" : null,
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "If there are more than one jobs for a pod, this is non-deterministic. This needs a sort by creation time stamp. It's a user/configuration error but this also needs a log statement.\n",
        "createdAt" : "2015-09-17T19:57:03Z",
        "updatedAt" : "2015-09-17T19:57:03Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      }
    ],
    "commit" : "8cefa2ee5554cdc015e1ad63e88b3ce7c65de973",
    "line" : 156,
    "diffHunk" : "@@ -1,1 +154,158 @@\t}\n\t// TODO: add sorting and rethink the overlaping controllers, internally and with RCs\n\treturn &jobs[0]\n}\n"
  },
  {
    "id" : "e544341d-26af-40a2-b3c6-bcb90da930a5",
    "prId" : 13259,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b3aa1322-320c-4569-96c2-b948fc06e1f9",
        "parentId" : null,
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "This should be called JobController\n",
        "createdAt" : "2015-09-18T02:23:25Z",
        "updatedAt" : "2015-09-18T02:23:25Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      }
    ],
    "commit" : "8cefa2ee5554cdc015e1ad63e88b3ce7c65de973",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +40,44 @@)\n\ntype JobManager struct {\n\tkubeClient client.Interface\n\tpodControl controller.PodControlInterface"
  },
  {
    "id" : "39b39e7c-5c42-4ba1-a597-b9a2ba3fd782",
    "prId" : 13259,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "32e75810-6de0-403a-a6ca-a044efd266a4",
        "parentId" : null,
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "This is not threadsafe.\n",
        "createdAt" : "2015-09-18T02:23:46Z",
        "updatedAt" : "2015-09-18T02:23:46Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      }
    ],
    "commit" : "8cefa2ee5554cdc015e1ad63e88b3ce7c65de973",
    "line" : 396,
    "diffHunk" : "@@ -1,1 +394,398 @@\t\t\t\t\tjm.expectations.DeletionObserved(jobKey)\n\t\t\t\t\tutil.HandleError(err)\n\t\t\t\t\tactive++\n\t\t\t\t}\n\t\t\t}(i)"
  },
  {
    "id" : "9181c6fe-553b-402f-a7d7-8f96291c0544",
    "prId" : 13259,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6c7f7584-ca3f-4f7f-bd46-c9eb64a0cae7",
        "parentId" : null,
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "Again, not threadsafe.\n",
        "createdAt" : "2015-09-18T02:25:25Z",
        "updatedAt" : "2015-09-18T02:25:25Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      },
      {
        "id" : "67acd408-1525-4fcd-bde1-e1f7648b2906",
        "parentId" : "6c7f7584-ca3f-4f7f-bd46-c9eb64a0cae7",
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "Why do we decrement active when we fail to delete a pod? It's not really obvious what is going on here.\n",
        "createdAt" : "2015-09-18T02:56:33Z",
        "updatedAt" : "2015-09-18T03:00:44Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      }
    ],
    "commit" : "8cefa2ee5554cdc015e1ad63e88b3ce7c65de973",
    "line" : 428,
    "diffHunk" : "@@ -1,1 +426,430 @@\t\t\t\t\tjm.expectations.CreationObserved(jobKey)\n\t\t\t\t\tutil.HandleError(err)\n\t\t\t\t\tactive--\n\t\t\t\t}\n\t\t\t}()"
  },
  {
    "id" : "19c6383d-6792-4c06-aa3b-5838847bde24",
    "prId" : 13259,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a7fa24b0-4c29-4009-8cc7-32ac6372dec8",
        "parentId" : null,
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "What is this supposed to do in tests and in production?\n",
        "createdAt" : "2015-09-18T02:36:08Z",
        "updatedAt" : "2015-09-18T02:36:08Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      }
    ],
    "commit" : "8cefa2ee5554cdc015e1ad63e88b3ce7c65de973",
    "line" : 427,
    "diffHunk" : "@@ -1,1 +425,429 @@\t\t\t\t\tglog.V(2).Infof(\"Failed creation, decrementing expectations for controller %q\", jobKey)\n\t\t\t\t\tjm.expectations.CreationObserved(jobKey)\n\t\t\t\t\tutil.HandleError(err)\n\t\t\t\t\tactive--\n\t\t\t\t}"
  },
  {
    "id" : "979a2814-8caf-4d3a-b635-ecafab0d06b6",
    "prId" : 13259,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5292a491-8874-48f9-9088-981f63ebe50e",
        "parentId" : null,
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "Debug log, should be 4 or higher\n",
        "createdAt" : "2015-09-18T02:41:30Z",
        "updatedAt" : "2015-09-18T02:41:30Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      }
    ],
    "commit" : "8cefa2ee5554cdc015e1ad63e88b3ce7c65de973",
    "line" : 379,
    "diffHunk" : "@@ -1,1 +377,381 @@\t\tdiff := active - parallelism\n\t\tjm.expectations.ExpectDeletions(jobKey, diff)\n\t\tglog.V(2).Infof(\"Too many pods running job %q, need %d, deleting %d\", jobKey, parallelism, diff)\n\t\t// Sort the pods in the order such that not-ready < ready, unscheduled\n\t\t// < scheduled, and pending < running. This ensures that we delete pods"
  },
  {
    "id" : "3dd0cda1-b9d5-4e07-bb22-b3a32b18df44",
    "prId" : 13259,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "454cfdc6-32e1-4f55-a265-4d2e6c1ed498",
        "parentId" : null,
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "glog.Errorf\n",
        "createdAt" : "2015-09-18T02:41:39Z",
        "updatedAt" : "2015-09-18T02:41:39Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      }
    ],
    "commit" : "8cefa2ee5554cdc015e1ad63e88b3ce7c65de973",
    "line" : 393,
    "diffHunk" : "@@ -1,1 +391,395 @@\t\t\t\tif err := jm.podControl.DeletePod(job.Namespace, activePods[ix].Name); err != nil {\n\t\t\t\t\t// Decrement the expected number of deletes because the informer won't observe this deletion\n\t\t\t\t\tglog.V(2).Infof(\"Failed deletion, decrementing expectations for controller %q\", jobKey)\n\t\t\t\t\tjm.expectations.DeletionObserved(jobKey)\n\t\t\t\t\tutil.HandleError(err)"
  },
  {
    "id" : "efdd1220-418b-4b7d-9cd2-e10a61875db1",
    "prId" : 13259,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2863c183-44af-4e23-afa6-1052b47e72ce",
        "parentId" : null,
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "Debug log, should be 4 or higher\n",
        "createdAt" : "2015-09-18T02:41:52Z",
        "updatedAt" : "2015-09-18T02:41:52Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      }
    ],
    "commit" : "8cefa2ee5554cdc015e1ad63e88b3ce7c65de973",
    "line" : 415,
    "diffHunk" : "@@ -1,1 +413,417 @@\t\tdiff -= active\n\t\tjm.expectations.ExpectCreations(jobKey, diff)\n\t\tglog.V(2).Infof(\"Too few pods running job %q, need %d, creating %d\", jobKey, parallelism, diff)\n\n\t\tactive += diff"
  },
  {
    "id" : "3417d954-12e3-4ff7-85a8-82fb64865c4e",
    "prId" : 13259,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "52f94f3b-7e76-405b-a66e-5eb376c28c31",
        "parentId" : null,
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "Error log\n",
        "createdAt" : "2015-09-18T02:43:03Z",
        "updatedAt" : "2015-09-18T02:43:03Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      }
    ],
    "commit" : "8cefa2ee5554cdc015e1ad63e88b3ce7c65de973",
    "line" : 293,
    "diffHunk" : "@@ -1,1 +291,295 @@\t}\n\tif err != nil {\n\t\tglog.Infof(\"Unable to retrieve job %v from store: %v\", key, err)\n\t\tjm.queue.Add(key)\n\t\treturn err"
  },
  {
    "id" : "5ec9effc-25fa-4281-b093-4396989cac5c",
    "prId" : 13259,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "04719778-27f5-49f7-91a9-7ab6ca8c4408",
        "parentId" : null,
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "Pods can be failed even if they have restart policy never e.g. node failure.\n",
        "createdAt" : "2015-09-18T02:46:54Z",
        "updatedAt" : "2015-09-18T02:46:54Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      }
    ],
    "commit" : "8cefa2ee5554cdc015e1ad63e88b3ce7c65de973",
    "line" : 361,
    "diffHunk" : "@@ -1,1 +359,363 @@func getStatus(jobKey string, restartPolicy api.RestartPolicy, pods []api.Pod) (successful, unsuccessful int) {\n\tsuccessful = filterPods(pods, api.PodSucceeded)\n\tif restartPolicy == api.RestartPolicyNever {\n\t\tunsuccessful = filterPods(pods, api.PodFailed)\n\t}"
  },
  {
    "id" : "e6d66542-6e35-4988-975b-5c32215d03f5",
    "prId" : 13259,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2dc4769b-51fb-4c06-9994-249bb56c261c",
        "parentId" : null,
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "jobKey is unused, why is it an argument to this?\n",
        "createdAt" : "2015-09-18T02:47:52Z",
        "updatedAt" : "2015-09-18T02:47:52Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      }
    ],
    "commit" : "8cefa2ee5554cdc015e1ad63e88b3ce7c65de973",
    "line" : 359,
    "diffHunk" : "@@ -1,1 +357,361 @@}\n\nfunc getStatus(jobKey string, restartPolicy api.RestartPolicy, pods []api.Pod) (successful, unsuccessful int) {\n\tsuccessful = filterPods(pods, api.PodSucceeded)\n\tif restartPolicy == api.RestartPolicyNever {"
  },
  {
    "id" : "f7fd0cc6-6be4-49c4-8b13-e611954accc5",
    "prId" : 13259,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ff13b0ad-bff1-4a5f-889b-3110f84ad22e",
        "parentId" : null,
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "Deletion observerd after we failed to delete?\n",
        "createdAt" : "2015-09-18T02:54:48Z",
        "updatedAt" : "2015-09-18T02:54:48Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      }
    ],
    "commit" : "8cefa2ee5554cdc015e1ad63e88b3ce7c65de973",
    "line" : 394,
    "diffHunk" : "@@ -1,1 +392,396 @@\t\t\t\t\t// Decrement the expected number of deletes because the informer won't observe this deletion\n\t\t\t\t\tglog.V(2).Infof(\"Failed deletion, decrementing expectations for controller %q\", jobKey)\n\t\t\t\t\tjm.expectations.DeletionObserved(jobKey)\n\t\t\t\t\tutil.HandleError(err)\n\t\t\t\t\tactive++"
  },
  {
    "id" : "9f913157-a855-4cd5-9d3b-3fa783c22dd6",
    "prId" : 13259,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1fcc712a-a7d3-48a9-84bd-97c70daf8094",
        "parentId" : null,
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "Creation observed after we failed to create?\n",
        "createdAt" : "2015-09-18T02:55:02Z",
        "updatedAt" : "2015-09-18T02:55:02Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      }
    ],
    "commit" : "8cefa2ee5554cdc015e1ad63e88b3ce7c65de973",
    "line" : 426,
    "diffHunk" : "@@ -1,1 +424,428 @@\t\t\t\t\t// Decrement the expected number of creates because the informer won't observe this pod\n\t\t\t\t\tglog.V(2).Infof(\"Failed creation, decrementing expectations for controller %q\", jobKey)\n\t\t\t\t\tjm.expectations.CreationObserved(jobKey)\n\t\t\t\t\tutil.HandleError(err)\n\t\t\t\t\tactive--"
  }
]