[
  {
    "id" : "ce3fb147-80d8-4b18-b233-2e7e7204e4e8",
    "prId" : 41661,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/41661#pullrequestreview-22788549",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "54d5ba23-4f94-499c-be0a-4ecf3b917801",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "blech.  Mostly for GKE, right?  We should start requiring that API to be on.",
        "createdAt" : "2017-02-20T15:10:23Z",
        "updatedAt" : "2017-02-20T15:10:24Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "6f64abf0-428a-4fdc-9c76-d04eb3c87105",
        "parentId" : "54d5ba23-4f94-499c-be0a-4ecf3b917801",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "yes. @cjcullen, status on this?",
        "createdAt" : "2017-02-20T15:12:03Z",
        "updatedAt" : "2017-02-20T15:12:04Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "107060da-560c-49e1-90fd-6321d25b63ef",
        "parentId" : "54d5ba23-4f94-499c-be0a-4ecf3b917801",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "@pwittrock just hit this too.  Delegated authentication works on other platforms, so a aggregated apiserver pod author would end up trying to target platforms. GKE should enable the endpoint.",
        "createdAt" : "2017-02-20T15:30:36Z",
        "updatedAt" : "2017-02-20T15:30:37Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "5ea82e71-3cdb-43b6-b82d-da7160970791",
        "parentId" : "54d5ba23-4f94-499c-be0a-4ecf3b917801",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "don't disagree, but I still want the fallback here",
        "createdAt" : "2017-02-20T15:44:54Z",
        "updatedAt" : "2017-02-20T15:44:54Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "b83e6f7d919544c6ce1d2a4908242ff455d2b5e2",
    "line" : 145,
    "diffHunk" : "@@ -1,1 +236,240 @@\n\t// If we couldn't run the token review, the API might be disabled or we might not have permission.\n\t// Try to make a request to /apis with the token. If we get a 401 we should consider the token invalid.\n\tclientConfigCopy := *clientConfig\n\tclientConfigCopy.NegotiatedSerializer = api.Codecs"
  },
  {
    "id" : "9ec1e4ad-7e63-4975-a561-7b4651418e03",
    "prId" : 33310,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/33310#pullrequestreview-2909520",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c5234814-bf95-4aa7-9b81-1a120a797e1d",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "need to ensure the namespace exists as well\n",
        "createdAt" : "2016-10-05T13:22:14Z",
        "updatedAt" : "2016-10-05T17:15:21Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "8ea2acc6a3acec9ae84120b6cc99b95bbee4c5f5",
    "line" : null,
    "diffHunk" : "@@ -1,1 +103,107 @@\t\t}\n\n\t\tsa, err = b.CoreClient.ServiceAccounts(b.Namespace).Create(\n\t\t\t&api.ServiceAccount{ObjectMeta: api.ObjectMeta{Namespace: b.Namespace, Name: name}})\n\t\tif err != nil {"
  },
  {
    "id" : "e510ed9c-2ab6-479f-a86a-07f1c2b0eee6",
    "prId" : 33310,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/33310#pullrequestreview-2909520",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e5b2da71-9460-4feb-b19f-57c4f4c41f0c",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "with high write loads, we could exceed the watch window before we get a token. add a TODO to ListWatchUntil to handle re-establishment, and include the watch error we encountered in the returned error message\n",
        "createdAt" : "2016-10-05T13:23:25Z",
        "updatedAt" : "2016-10-05T17:15:21Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "8ea2acc6a3acec9ae84120b6cc99b95bbee4c5f5",
    "line" : 128,
    "diffHunk" : "@@ -1,1 +126,130 @@\t\t\t\treturn false, nil\n\t\t\tcase watch.Error:\n\t\t\t\treturn false, fmt.Errorf(\"error watching\")\n\n\t\t\tcase watch.Added, watch.Modified:"
  },
  {
    "id" : "b436c990-ee0c-45e2-979a-b95953083421",
    "prId" : 33310,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/33310#pullrequestreview-2909520",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "77264f4a-67bf-4a27-86e2-b95ca5295ea3",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "`serviceaccount.IsServiceAccountToken(secret, sa)` will do the type/name/uid checks for you\n",
        "createdAt" : "2016-10-05T13:24:42Z",
        "updatedAt" : "2016-10-05T17:15:21Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "8ea2acc6a3acec9ae84120b6cc99b95bbee4c5f5",
    "line" : null,
    "diffHunk" : "@@ -1,1 +129,133 @@\n\t\t\tcase watch.Added, watch.Modified:\n\t\t\t\tsecret := event.Object.(*api.Secret)\n\t\t\t\tif !serviceaccount.IsServiceAccountToken(secret, sa) ||\n\t\t\t\t\tlen(secret.Data[api.ServiceAccountTokenKey]) == 0 {"
  },
  {
    "id" : "aa9360ad-aec8-4952-a8d5-f4df9b6d880e",
    "prId" : 33310,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/33310#pullrequestreview-2909520",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "051f98c7-8125-421c-ab49-5cb88a91a347",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "`restclient.AddUserAgent(&clientConfig, serviceaccount.MakeUsername(b.Namespace, name))`\n",
        "createdAt" : "2016-10-05T13:32:54Z",
        "updatedAt" : "2016-10-05T17:15:21Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "9d5c4d07-c9d3-4833-994c-1153acd2785c",
        "parentId" : "051f98c7-8125-421c-ab49-5cb88a91a347",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "TODO or follow-up issue to verify the token is valid? c.f. https://github.com/openshift/origin/issues/3498\n",
        "createdAt" : "2016-10-05T13:37:51Z",
        "updatedAt" : "2016-10-05T17:15:21Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "8ea2acc6a3acec9ae84120b6cc99b95bbee4c5f5",
    "line" : null,
    "diffHunk" : "@@ -1,1 +135,139 @@\t\t\t\t}\n\t\t\t\t// TODO maybe verify the token is valid\n\t\t\t\tclientConfig.BearerToken = string(secret.Data[api.ServiceAccountTokenKey])\n\t\t\t\trestclient.AddUserAgent(clientConfig, serviceaccount.MakeUsername(b.Namespace, name))\n\t\t\t\treturn true, nil"
  }
]