[
  {
    "id" : "525cb1ec-2f4e-4cc7-a07d-2491c2ddfe78",
    "prId" : 94730,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/94730#pullrequestreview-488883629",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "59497ef7-4169-4832-b1ec-9f03e930f9f0",
        "parentId" : null,
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "why not filtering all \"not owned\" slices in `reconcile`?",
        "createdAt" : "2020-09-14T11:09:27Z",
        "updatedAt" : "2020-09-16T04:37:35Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      },
      {
        "id" : "e8202618-f9cb-4ebf-8d0e-7f3c08f44d9e",
        "parentId" : "59497ef7-4169-4832-b1ec-9f03e930f9f0",
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "Do you think that `syncService` should be a better place? so `reconcile()` and `finalize()` does not have to deal with \"undesired\" slices?",
        "createdAt" : "2020-09-14T11:13:54Z",
        "updatedAt" : "2020-09-16T04:37:35Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      },
      {
        "id" : "7899205b-85f8-48a1-be65-cd3eb5d61b56",
        "parentId" : "59497ef7-4169-4832-b1ec-9f03e930f9f0",
        "authorId" : "399a0f74-29de-4365-9ae5-f743ae5f278c",
        "body" : "That's a good idea, I'd thought about it as well but everything I tried ended up being messier/more complex than this change. Part of it is that syncService is intentionally small in scope and adding a check like this there ended up increasing the scope/complexity more than expected. Related to that, the majority of existing test coverage is focused on reconciler functions, so adding key functionality outside of that requires a larger investment in new testing.",
        "createdAt" : "2020-09-14T21:17:45Z",
        "updatedAt" : "2020-09-16T04:37:35Z",
        "lastEditedBy" : "399a0f74-29de-4365-9ae5-f743ae5f278c",
        "tags" : [
        ]
      },
      {
        "id" : "b56c2b1a-65a0-4a61-bf1e-7be7fdc4add0",
        "parentId" : "59497ef7-4169-4832-b1ec-9f03e930f9f0",
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "fair enough, I was thinking more in how endpoint slices consumers should implement this, and trying to come up with a \"recommended\" way of listing slices that belong to a service, based on this issue it seems that Listing based on label only is not enough.\r\n\r\n\r\n```go\r\n\tesLabelSelector := labels.Set(map[string]string{\r\n\t\tdiscovery.LabelServiceName: service.Name,\r\n\t\tdiscovery.LabelManagedBy:   controllerName,\r\n\t}).AsSelectorPreValidated()\r\n\tendpointSlices, err := c.endpointSliceLister.EndpointSlices(service.Namespace).List(esLabelSelector)\r\n```\r\n\r\nUnrelated to this PR based on your comments but ... maybe we should offer some helper function that returns the slices that belong to a current service?\r\n",
        "createdAt" : "2020-09-15T07:20:06Z",
        "updatedAt" : "2020-09-16T04:37:35Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      },
      {
        "id" : "5407c446-bb21-4d3d-b7d3-cb774f8fc677",
        "parentId" : "59497ef7-4169-4832-b1ec-9f03e930f9f0",
        "authorId" : "399a0f74-29de-4365-9ae5-f743ae5f278c",
        "body" : "That's a great point. I think listing slices based on label has to be sufficient simply because we don't and can't control all the ways EndpointSlices can be created. An owner ref is technically optional for producers here - in the case of EndpointSlice mirroring the owner ref refers to the Endpoints resource, not the Service.\r\n\r\nI think for this to be a noticeable issue, a Service would have to be recreated with the same name in the same namespace with an entirely different selector while there are still EndpointSlices waiting for garbage collection. Even if that were to happen, this controller fix should resolve any potential issues within seconds. \r\n\r\nI think this is more of a problem for producers to ensure they clean up old resources than for consumers. If/when this is approved, I'll have to make a very similar PR for the EndpointSliceMirroring controller.",
        "createdAt" : "2020-09-15T16:57:57Z",
        "updatedAt" : "2020-09-16T04:37:35Z",
        "lastEditedBy" : "399a0f74-29de-4365-9ae5-f743ae5f278c",
        "tags" : [
        ]
      }
    ],
    "commit" : "de02323a9d7be668ab1aca1e8edb8d2f68492030",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +196,200 @@\t\t// chance EndpointSlices with an IP AddressType would otherwise be\n\t\t// updated to IPv4 or IPv6 without this check.\n\t\tif sliceToDelete.AddressType == slice.AddressType && ownedBy(sliceToDelete, service) {\n\t\t\tslice.Name = sliceToDelete.Name\n\t\t\tslicesToCreate = slicesToCreate[:len(slicesToCreate)-1]"
  },
  {
    "id" : "fdb146f6-422a-4f94-ae3a-49f29cf884f7",
    "prId" : 94443,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/94443#pullrequestreview-501310655",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9a278a57-7362-46c1-9d24-c54c78c0a7db",
        "parentId" : null,
        "authorId" : "e83108b8-1fb2-416b-9298-d5b70c14f708",
        "body" : "consider moving this line to below `setEndpointSliceLabels ` is called",
        "createdAt" : "2020-10-01T18:22:38Z",
        "updatedAt" : "2020-10-01T18:23:09Z",
        "lastEditedBy" : "e83108b8-1fb2-416b-9298-d5b70c14f708",
        "tags" : [
        ]
      },
      {
        "id" : "2de7dff0-4451-4c2a-bd62-be19f1decf18",
        "parentId" : "9a278a57-7362-46c1-9d24-c54c78c0a7db",
        "authorId" : "e83108b8-1fb2-416b-9298-d5b70c14f708",
        "body" : "this is to prevent other cases were added and people forgot to add the labels.",
        "createdAt" : "2020-10-01T18:23:03Z",
        "updatedAt" : "2020-10-01T18:23:09Z",
        "lastEditedBy" : "e83108b8-1fb2-416b-9298-d5b70c14f708",
        "tags" : [
        ]
      },
      {
        "id" : "c282e29e-e7fe-4eaa-8db8-7dd536aa15a8",
        "parentId" : "9a278a57-7362-46c1-9d24-c54c78c0a7db",
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "don' t know if I fully understand the comment, but I think that will mutate the current slice ... and IIIRC there was a bug about that, alsodsome of the tests check if the slices are mutated",
        "createdAt" : "2020-10-01T18:46:25Z",
        "updatedAt" : "2020-10-01T18:46:25Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      },
      {
        "id" : "2d569c8b-7f78-419e-a637-28ce8fa3afd5",
        "parentId" : "9a278a57-7362-46c1-9d24-c54c78c0a7db",
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "@freehan doing that change several test fails beause of the object mutation\r\n\r\n`endpointslice_controller_test.go:872: Cached object was unexpectedly mutated. Original`\r\n\r\n```\r\n=== RUN   TestReconcileEndpointSlicesUpdatePacking\r\n    /home/aojea/go/src/k8s.io/kubernetes/pkg/controller/endpointslice/endpointslice_controller_test.go:872: Cached object was unexpectedly mutated. Original: &EndpointSlice{ObjectMeta:{foo.1  test    0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[] map[] [] []  []},Endpoints:[]Endpoint{Endpoint{Addresses:[1.2.3.4],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod0,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.5],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod1,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.6],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod2,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.7],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod3,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.8],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod4,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.9],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod5,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.10],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod6,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.11],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod7,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.12],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod8,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.13],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod9,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.14],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod10,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.15],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod11,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.16],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod12,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.17],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod13,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.18],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod14,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.19],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod15,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.20],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod16,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.21],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod17,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.22],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod18,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.23],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod19,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.24],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod20,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.25],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod21,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.26],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod22,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.27],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod23,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.28],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod24,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.29],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod25,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.30],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod26,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.31],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod27,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.32],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod28,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.33],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod29,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.34],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod30,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.35],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod31,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.36],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod32,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.37],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod33,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.38],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod34,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.39],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod35,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.40],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod36,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.41],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod37,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.42],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod38,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.43],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod39,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.44],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod40,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.45],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod41,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.46],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod42,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.47],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod43,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.48],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod44,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.49],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod45,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.50],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod46,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.51],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod47,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.52],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod48,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.53],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod49,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.54],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod50,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.55],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod51,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.56],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod52,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.57],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod53,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.58],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod54,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.59],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod55,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.60],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod56,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.61],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod57,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.62],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod58,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.63],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod59,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.64],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod60,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.65],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod61,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.66],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod62,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.67],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod63,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.68],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod64,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.69],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod65,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.70],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod66,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.71],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod67,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.72],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod68,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.73],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod69,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.74],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod70,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.75],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod71,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.76],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod72,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.77],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod73,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.78],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod74,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.79],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod75,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.80],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod76,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.81],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod77,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.82],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod78,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.83],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod79,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},},Ports:[]EndpointPort{EndpointPort{Name:*foo,Protocol:*TCP,Port:*80,AppProtocol:nil,},},AddressType:IPv4,}, Mutated: &EndpointSlice{ObjectMeta:{foo.1  test    0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[endpointslice.kubernetes.io/managed-by:endpointslice-controller.k8s.io kubernetes.io/service-name:foo service.kubernetes.io/headless:] map[] [] []  []},Endpoints:[]Endpoint{Endpoint{Addresses:[1.2.3.4],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod0,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.5],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod1,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.6],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod2,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.7],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod3,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.8],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod4,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.9],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod5,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.10],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod6,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.11],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod7,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.12],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod8,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.13],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod9,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.14],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod10,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.15],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod11,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.16],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod12,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.17],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod13,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.18],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod14,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.19],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod15,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.20],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod16,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.21],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod17,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.22],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod18,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.23],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod19,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.24],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod20,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.25],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod21,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.26],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod22,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.27],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod23,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.28],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod24,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.29],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod25,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.30],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod26,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.31],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod27,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.32],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod28,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.33],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod29,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.34],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod30,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.35],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod31,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.36],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod32,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.37],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod33,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.38],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod34,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.39],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod35,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.40],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod36,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.41],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod37,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.42],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod38,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.43],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod39,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.44],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod40,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.45],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod41,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.46],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod42,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.47],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod43,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.48],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod44,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.49],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod45,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.50],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod46,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.51],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod47,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.52],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod48,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.53],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod49,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.54],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod50,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.55],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod51,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.56],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod52,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.57],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod53,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.58],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod54,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.59],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod55,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.60],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod56,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.61],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod57,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.62],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod58,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.63],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod59,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.64],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod60,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.65],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod61,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.66],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod62,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.67],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod63,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.68],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod64,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.69],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod65,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.70],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod66,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.71],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod67,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.72],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod68,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.73],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod69,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.74],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod70,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.75],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod71,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.76],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod72,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.77],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod73,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.78],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod74,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.79],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod75,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.80],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod76,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.81],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod77,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.82],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod78,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.83],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod79,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},},Ports:[]EndpointPort{EndpointPort{Name:*foo,Protocol:*TCP,Port:*80,AppProtocol:nil,},},AddressType:IPv4,}\r\n    /home/aojea/go/src/k8s.io/kubernetes/pkg/controller/endpointslice/endpointslice_controller_test.go:872: Cached object was unexpectedly mutated. Original: &EndpointSlice{ObjectMeta:{foo.2  test    0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[] map[] [] []  []},Endpoints:[]Endpoint{Endpoint{Addresses:[1.2.3.104],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod100,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.105],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod101,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.106],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod102,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.107],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod103,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.108],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod104,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.109],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod105,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.110],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod106,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.111],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod107,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.112],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod108,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.113],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod109,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.114],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod110,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.115],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod111,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.116],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod112,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.117],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod113,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.118],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod114,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.119],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod115,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.120],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod116,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.121],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod117,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.122],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod118,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.123],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod119,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},},Ports:[]EndpointPort{EndpointPort{Name:*foo,Protocol:*TCP,Port:*80,AppProtocol:nil,},},AddressType:IPv4,}, Mutated: &EndpointSlice{ObjectMeta:{foo.2  test    0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[endpointslice.kubernetes.io/managed-by:endpointslice-controller.k8s.io kubernetes.io/service-name:foo service.kubernetes.io/headless:] map[] [] []  []},Endpoints:[]Endpoint{Endpoint{Addresses:[1.2.3.104],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod100,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.105],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod101,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.106],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod102,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.107],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod103,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.108],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod104,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.109],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod105,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.110],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod106,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.111],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod107,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.112],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod108,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.113],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod109,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.114],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod110,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.115],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod111,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.116],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod112,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.117],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod113,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.118],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod114,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.119],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod115,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.120],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod116,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.121],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod117,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.122],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod118,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},Endpoint{Addresses:[1.2.3.123],Conditions:EndpointConditions{Ready:*true,},Hostname:nil,TargetRef:&v1.ObjectReference{Kind:Pod,Namespace:test,Name:pod119,UID:,APIVersion:,ResourceVersion:,FieldPath:,},Topology:map[string]string{kubernetes.io/hostname: node-1,},},},Ports:[]EndpointPort{EndpointPort{Name:*foo,Protocol:*TCP,Port:*80,AppProtocol:nil,},},AddressType:IPv4,}\r\n--- FAIL: TestReconcileEndpointSlicesUpdatePacking (0.01s)\r\n```",
        "createdAt" : "2020-10-02T08:29:12Z",
        "updatedAt" : "2020-10-02T08:30:01Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      },
      {
        "id" : "db1cc15d-3a7d-433a-8c84-1d55449639de",
        "parentId" : "9a278a57-7362-46c1-9d24-c54c78c0a7db",
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "I think that the case will covered with `labelsChanged`, since it will detect that some of the labels does not match and will update the slice, for creation and deletion we don't have to worry.",
        "createdAt" : "2020-10-02T08:32:06Z",
        "updatedAt" : "2020-10-02T08:32:06Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      },
      {
        "id" : "03774921-8bea-490e-a7a7-102240ed898c",
        "parentId" : "9a278a57-7362-46c1-9d24-c54c78c0a7db",
        "authorId" : "e83108b8-1fb2-416b-9298-d5b70c14f708",
        "body" : "okay. Fair enough if there are tests around this. ",
        "createdAt" : "2020-10-02T17:15:29Z",
        "updatedAt" : "2020-10-02T17:15:29Z",
        "lastEditedBy" : "e83108b8-1fb2-416b-9298-d5b70c14f708",
        "tags" : [
        ]
      }
    ],
    "commit" : "b7d8045b8136a9f0e021a5603dffa83b9e59ffd6",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +305,309 @@\t\t\t\tepSlice := existingSlice.DeepCopy()\n\t\t\t\tepSlice.Endpoints = newEndpoints\n\t\t\t\tepSlice.Labels = labels\n\t\t\t\tslicesByName[existingSlice.Name] = epSlice\n\t\t\t\tsliceNamesToUpdate.Insert(epSlice.Name)"
  },
  {
    "id" : "5374d136-38ec-4573-beef-1154515c542a",
    "prId" : 93908,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/93908#pullrequestreview-466300514",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6d302a0b-f969-4203-9106-1e165e1f060c",
        "parentId" : null,
        "authorId" : "b714f738-aa05-4f49-a624-eaaf3e0cbb70",
        "body" : "do we track errors as a metric? (can be in follow PR)",
        "createdAt" : "2020-08-12T21:47:33Z",
        "updatedAt" : "2020-08-12T21:47:34Z",
        "lastEditedBy" : "b714f738-aa05-4f49-a624-eaaf3e0cbb70",
        "tags" : [
        ]
      }
    ],
    "commit" : "4cfe4403b4b0ba5da887c04d585ed5f04ebc1467",
    "line" : 40,
    "diffHunk" : "@@ -1,1 +227,231 @@\t\tupdatedSlice, err := r.client.DiscoveryV1beta1().EndpointSlices(service.Namespace).Update(context.TODO(), endpointSlice, metav1.UpdateOptions{})\n\t\tif err != nil {\n\t\t\treturn fmt.Errorf(\"failed to update %s EndpointSlice for Service %s/%s: %v\", endpointSlice.Name, service.Namespace, service.Name, err)\n\t\t}\n\t\tr.endpointSliceTracker.Update(updatedSlice)"
  },
  {
    "id" : "7604b029-fd94-46ae-9a45-8419a836bc66",
    "prId" : 81048,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/81048#pullrequestreview-278576892",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b9b380a5-3e3e-4fb0-b757-982d81b01c4a",
        "parentId" : null,
        "authorId" : "e83108b8-1fb2-416b-9298-d5b70c14f708",
        "body" : "Not sure if this makes it better\r\n\r\n```\r\ntype endpointSliceTracker struct {\r\n\tendpointSliceMap map[string]*discovery.endpointSlice\r\n\r\n\t// sorted list of endpointSlice name by endpointCount\r\n\tendpointCountTracker []*discovery.endpointSlice\r\n\r\n\tneedUpdate sets.String\r\n\tneedDelete sets.String\r\n\tunchanged sets.String\r\n}\r\n\r\nfunc (*endpointSliceTracker t) Insert(object) {\r\n\t// insert endpointSliceMap\r\n\t// insert endpointCountTracker sequence?\r\n}\r\n\r\nfunc (*endpointSliceTracker t) Update(object) {\r\n\t// update endpointSliceMap\r\n\t// update endpointCountTracker sequence?\r\n}\r\n\r\nfunc (*endpointSliceTracker t) Delete(name)\r\nfunc (*endpointSliceTracker t) Get(name)\r\n\r\nfunc (*endpointSliceTracker t)  MarkForDelete(name string) error {\r\n\tif t.needUpdate.Has(name) || t.unchanged.Has(name) {\r\n\t\treturn fmt.Errorf....\r\n\t}\r\n\tif not found  {\r\n\t\treturn fmt.Errorf...\r\n\t}\r\n\tt.needDelete.Insert(name)\r\n}\r\nfunc (*endpointSliceTracker t)  MarkForUpdate(name string) error\r\nfunc (*endpointSliceTracker t)  MarkUnchanged(name string) error\r\n\r\nfunc (*endpointSliceTracker t)  ListNamesForUpdate(name string) error\r\nfunc (*endpointSliceTracker t)  ListNamesForDelete(name string) error\r\nfunc (*endpointSliceTracker t)  ListNamesForDelete(name string) error\r\n\r\ntype candidateFilter int \r\n\r\nconst (\r\n\tall = iota\r\n\tupdated = iota\r\n)\r\n\r\n\r\nfunc (*endpointSliceTracker t) FindInsertCandidate(numToInsert int, toleratePartialFit bool, filter candidateFilter) (object, found bool) {\r\n\r\n\t// sort the existing endpointSlice by fullness\r\n\t// filter and traverse the ednpointSlice from full to empty\r\n\tfor es {\r\n\t\tif toleratePartialFit {\r\n\t\t\tif es still has capacity left {\r\n\t\t\t\treturn es, true\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\t\t\tif es can fit numToInsert {\r\n\t\t\t\treturn es, true\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn nil, false\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nin the reconcile :\r\n\r\n\r\n// try to fit in the desiredSet with endpointSlice marked for update\r\nfor desiredSet.Len() > 0 {\r\n\tcandidate, ok := tracker.FindInsertCandidate(desiredSet, true, updated)\r\n\tif ok {\r\n\t        // fill endpoints into candidate \r\n         \ttracker.update(candidate)\r\n\t} else {\r\n                // try to fit in the desiredSet with all endpointSlice\r\n\t        candidate, ok := tracker.FindInsertCandidate(desiredSet, false, all)\t\r\n         \tif ok {\r\n\t        \t// fill endpoints into candidate \r\n\t\t       tracker.update(candidate)\t\r\n\t        } else {\r\n\t\t         create new endpoint slice\r\n\t          } \r\n        }\r\n\r\n\r\n}\r\n```",
        "createdAt" : "2019-08-22T20:36:41Z",
        "updatedAt" : "2019-08-29T04:13:56Z",
        "lastEditedBy" : "e83108b8-1fb2-416b-9298-d5b70c14f708",
        "tags" : [
        ]
      }
    ],
    "commit" : "75f6c249235b40b24e9ea1efdb1ff81dd76a8d68",
    "line" : 233,
    "diffHunk" : "@@ -1,1 +231,235 @@\t\t}\n\t}\n\n\t// 2. If we still have desired endpoints to add and slices marked for update,\n\t//    iterate through the slices and fill them up with the desired endpoints."
  },
  {
    "id" : "616af351-7656-4559-b5bf-1c56106fe3d1",
    "prId" : 81048,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/81048#pullrequestreview-279754242",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a10ca035-fee2-45ed-8281-676739f776e9",
        "parentId" : null,
        "authorId" : "0c76e20f-41a5-4725-b3c3-d5b6cae89641",
        "body" : "The below will work.\r\n\r\nMy concern is `fragmentation` and `lack of compaction`. Do we want to favor `large # of slices with small # of endpoints` or `small # of slices with large # of endpoints`? in a scenario where the # of pods fronted by the same service grows multiple orders of magnitude then back down the below will leave behind many endpoint slices with very little utilization each.",
        "createdAt" : "2019-08-23T21:40:37Z",
        "updatedAt" : "2019-08-29T04:13:56Z",
        "lastEditedBy" : "0c76e20f-41a5-4725-b3c3-d5b6cae89641",
        "tags" : [
        ]
      },
      {
        "id" : "916f9cee-365d-44d0-9d28-f237d18fc382",
        "parentId" : "a10ca035-fee2-45ed-8281-676739f776e9",
        "authorId" : "e83108b8-1fb2-416b-9298-d5b70c14f708",
        "body" : "We want to have `small # of slices with large # of endpoints. \r\n\r\nYes. What you say can happen since the algorithm does not have active rebalancing. But one rolling update of the backends will automatically repack the endpoints. ",
        "createdAt" : "2019-08-23T23:54:26Z",
        "updatedAt" : "2019-08-29T04:13:56Z",
        "lastEditedBy" : "e83108b8-1fb2-416b-9298-d5b70c14f708",
        "tags" : [
        ]
      },
      {
        "id" : "672dae31-ba07-4458-a32a-348aaa60ec2a",
        "parentId" : "a10ca035-fee2-45ed-8281-676739f776e9",
        "authorId" : "0c76e20f-41a5-4725-b3c3-d5b6cae89641",
        "body" : "I am not sure how a rolling update will rebalance the slices. However the time between scale-down and a rolling update can be too long to carry forward with fragmented slices. ",
        "createdAt" : "2019-08-24T02:22:26Z",
        "updatedAt" : "2019-08-29T04:13:56Z",
        "lastEditedBy" : "0c76e20f-41a5-4725-b3c3-d5b6cae89641",
        "tags" : [
        ]
      },
      {
        "id" : "12e40a01-fa36-4eff-bdf1-54235a637a6f",
        "parentId" : "a10ca035-fee2-45ed-8281-676739f776e9",
        "authorId" : "399a0f74-29de-4365-9ae5-f743ae5f278c",
        "body" : "The working theory is that by always adding new endpoints to slices that will end up closest to full, the smallest slices will eventually drop off naturally, especially if there's a rolling update where no old endpoint will be left behind. Definitely plan on some more thorough testing of this algorithm at scale, and likely some adjustments. The main goal for this alpha was to have something simple and reliable that was reasonably performant.",
        "createdAt" : "2019-08-25T19:39:55Z",
        "updatedAt" : "2019-08-29T04:13:56Z",
        "lastEditedBy" : "399a0f74-29de-4365-9ae5-f743ae5f278c",
        "tags" : [
        ]
      },
      {
        "id" : "5ed357b8-b17a-4975-909f-6ae51db0d477",
        "parentId" : "a10ca035-fee2-45ed-8281-676739f776e9",
        "authorId" : "0c76e20f-41a5-4725-b3c3-d5b6cae89641",
        "body" : "Thank you. \r\n\r\nI have been thinking about this specially in context of `scale to zero` approach offered by meshes and such. I do agree, what we have now maybe enough. But definitely we need to think about scale as we move from alpha to beta. Probably with some tests to validate the theories in place.",
        "createdAt" : "2019-08-26T18:22:18Z",
        "updatedAt" : "2019-08-29T04:13:56Z",
        "lastEditedBy" : "0c76e20f-41a5-4725-b3c3-d5b6cae89641",
        "tags" : [
        ]
      }
    ],
    "commit" : "75f6c249235b40b24e9ea1efdb1ff81dd76a8d68",
    "line" : 53,
    "diffHunk" : "@@ -1,1 +51,55 @@// slices for the given service. It creates, updates, or deletes endpoint slices\n// to ensure the desired set of pods are represented by endpoint slices.\nfunc (r *reconciler) reconcile(service *corev1.Service, pods []*corev1.Pod, existingSlices []*discovery.EndpointSlice, triggerTime time.Time) error {\n\t// Build data structures for existing state.\n\texistingSlicesByPortMap := map[portMapKey][]*discovery.EndpointSlice{}"
  }
]