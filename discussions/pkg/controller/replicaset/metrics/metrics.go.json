[
  {
    "id" : "2cb6e259-dcab-46ad-b2ee-3ed055be7d84",
    "prId" : 101767,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/101767#pullrequestreview-694253880",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e2a19a47-bada-41aa-8136-383b0be59604",
        "parentId" : null,
        "authorId" : "411a526b-e74b-4a8d-beca-dc8fb83b6907",
        "body" : "Do you really want to use the default buckets for your use case? They are meant for web services latency, so I don't think they should be a good fit for your use case.",
        "createdAt" : "2021-06-25T14:15:11Z",
        "updatedAt" : "2021-06-25T14:40:27Z",
        "lastEditedBy" : "411a526b-e74b-4a8d-beca-dc8fb83b6907",
        "tags" : [
        ]
      },
      {
        "id" : "07a4ef36-eaa8-42b0-a26d-fd6134b2dabe",
        "parentId" : "e2a19a47-bada-41aa-8136-383b0be59604",
        "authorId" : "0e2b7889-1224-444e-a36d-475f9edd0703",
        "body" : "Good point, should I just manually define these buckets then as something like `[0.0, 2.0]`? If we are trying to measure the amount under `2`, does that make sense? I'm just not clear on the code syntax for defining these buckets, and couldn't find any good docs on it",
        "createdAt" : "2021-06-25T17:33:08Z",
        "updatedAt" : "2021-06-25T17:33:08Z",
        "lastEditedBy" : "0e2b7889-1224-444e-a36d-475f9edd0703",
        "tags" : [
        ]
      },
      {
        "id" : "117103e7-ee6d-4daa-b3b6-2eae9d548123",
        "parentId" : "e2a19a47-bada-41aa-8136-383b0be59604",
        "authorId" : "411a526b-e74b-4a8d-beca-dc8fb83b6907",
        "body" : "If the sole purpose of this metric is to measure all the operations done in less than 2s, then I don't think a histogram is the best fit. The best option for this case would be to use a counter accounting for all the operations that were completed in under 2 seconds. However, if you need more granularity on the duration of the operation, then a histogram will be a good fit.\r\n\r\nAs for defining custom buckets, you will need to think about the different time ranges that are meaningful to be collected for your use case.  For instance, the apiserver admission controller/webhook latency metrics are using these [custom buckets](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiserver/pkg/admission/metrics/metrics.go#L48-L49).",
        "createdAt" : "2021-06-28T08:48:15Z",
        "updatedAt" : "2021-06-28T08:48:15Z",
        "lastEditedBy" : "411a526b-e74b-4a8d-beca-dc8fb83b6907",
        "tags" : [
        ]
      },
      {
        "id" : "5511e8e1-5458-4602-8792-3702418ee945",
        "parentId" : "e2a19a47-bada-41aa-8136-383b0be59604",
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "The metric is about checking how far from 2s we get. Then, the range should be something like `[0, 8]`.",
        "createdAt" : "2021-06-28T12:50:24Z",
        "updatedAt" : "2021-06-28T12:50:25Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      },
      {
        "id" : "1b141745-111e-4714-a708-54fc2f5fec4b",
        "parentId" : "e2a19a47-bada-41aa-8136-383b0be59604",
        "authorId" : "0e2b7889-1224-444e-a36d-475f9edd0703",
        "body" : "So do we want several buckets on either side of 2? Like `[0, 0.5, 1, 1.5, 2, 2.5, 3, 4, 6, 8]`?",
        "createdAt" : "2021-06-28T13:00:02Z",
        "updatedAt" : "2021-06-28T13:00:02Z",
        "lastEditedBy" : "0e2b7889-1224-444e-a36d-475f9edd0703",
        "tags" : [
        ]
      },
      {
        "id" : "52c98480-392e-4cfa-8b1c-0e87961cc451",
        "parentId" : "e2a19a47-bada-41aa-8136-383b0be59604",
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "Can we use exponential buckets? I would start at 0.25 with a factor of 2.",
        "createdAt" : "2021-06-28T13:20:06Z",
        "updatedAt" : "2021-06-28T13:20:06Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      },
      {
        "id" : "5e1d3fdc-4cc0-4abd-a39d-c1755e8ae2d2",
        "parentId" : "e2a19a47-bada-41aa-8136-383b0be59604",
        "authorId" : "411a526b-e74b-4a8d-beca-dc8fb83b6907",
        "body" : "Yes, from an instrumentation perspective, I think it would make sense to have [exponential buckets](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/component-base/metrics/histogram.go#L33-L36) here. Starting from 0.25 with a factor of 2, until you reach 8, so you will have a count of 6 and end up with the following buckets `[0.25, 0.5, 1, 2, 4, 8]`.",
        "createdAt" : "2021-06-28T13:29:59Z",
        "updatedAt" : "2021-06-28T13:29:59Z",
        "lastEditedBy" : "411a526b-e74b-4a8d-beca-dc8fb83b6907",
        "tags" : [
        ]
      },
      {
        "id" : "4015eff4-dc58-4b5a-bbcf-303fbc462077",
        "parentId" : "e2a19a47-bada-41aa-8136-383b0be59604",
        "authorId" : "0e2b7889-1224-444e-a36d-475f9edd0703",
        "body" : "Ok, thanks for the help everyone. I have pushed with the new buckets",
        "createdAt" : "2021-06-28T18:09:56Z",
        "updatedAt" : "2021-06-28T18:09:57Z",
        "lastEditedBy" : "0e2b7889-1224-444e-a36d-475f9edd0703",
        "tags" : [
        ]
      }
    ],
    "commit" : "4b9230ed27f433c87d2ce93124905e403692be71",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +24,28 @@\nvar SortingDeletionAgeRatio = metrics.NewHistogram(\n\t&metrics.HistogramOpts{\n\t\tSubsystem: ReplicaSetControllerSubsystem,\n\t\tName:      \"sorting_deletion_age_ratio\","
  },
  {
    "id" : "ea46a1d9-a067-49a0-b8c0-b7d8010f70db",
    "prId" : 101767,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/101767#pullrequestreview-696070208",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fc1a6d47-838c-4069-ae4b-ebf6ccae632e",
        "parentId" : null,
        "authorId" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "body" : "@damemi would be good to update the KEP with this change. ",
        "createdAt" : "2021-06-30T11:16:11Z",
        "updatedAt" : "2021-06-30T11:25:14Z",
        "lastEditedBy" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "tags" : [
        ]
      },
      {
        "id" : "2f4587b9-f50c-4b7d-ac70-ab6e88ee93e9",
        "parentId" : "fc1a6d47-838c-4069-ae4b-ebf6ccae632e",
        "authorId" : "0e2b7889-1224-444e-a36d-475f9edd0703",
        "body" : "Opened here: https://github.com/kubernetes/enhancements/pull/2805",
        "createdAt" : "2021-06-30T12:12:08Z",
        "updatedAt" : "2021-06-30T12:12:09Z",
        "lastEditedBy" : "0e2b7889-1224-444e-a36d-475f9edd0703",
        "tags" : [
        ]
      }
    ],
    "commit" : "4b9230ed27f433c87d2ce93124905e403692be71",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +26,30 @@\t&metrics.HistogramOpts{\n\t\tSubsystem: ReplicaSetControllerSubsystem,\n\t\tName:      \"sorting_deletion_age_ratio\",\n\t\tHelp: \"The ratio of chosen deleted pod's ages to the current youngest pod's age (at the time). Should be <2.\" +\n\t\t\t\"The intent of this metric is to measure the rough efficacy of the LogarithmicScaleDown feature gate's effect on\" +"
  },
  {
    "id" : "18bbff1f-1c97-41c8-8582-72a455e6ff06",
    "prId" : 101767,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/101767#pullrequestreview-698957181",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ca53eb16-6949-4157-be9d-325f554091fc",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Mention that we only take into account ready pods.",
        "createdAt" : "2021-07-05T09:04:51Z",
        "updatedAt" : "2021-07-05T09:06:15Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "4b9230ed27f433c87d2ce93124905e403692be71",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +27,31 @@\t\tSubsystem: ReplicaSetControllerSubsystem,\n\t\tName:      \"sorting_deletion_age_ratio\",\n\t\tHelp: \"The ratio of chosen deleted pod's ages to the current youngest pod's age (at the time). Should be <2.\" +\n\t\t\t\"The intent of this metric is to measure the rough efficacy of the LogarithmicScaleDown feature gate's effect on\" +\n\t\t\t\"the sorting (and deletion) of pods when a replicaset scales down. This only considers Ready pods when calculating and reporting.\","
  }
]