[
  {
    "id" : "73c2a803-c8a4-495f-ad7a-e0a64781e671",
    "prId" : 32117,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/32117#pullrequestreview-1690182",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "958200cd-c5e9-4e2b-8931-4df510faa904",
        "parentId" : null,
        "authorId" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "body" : "nit: please either add continue or remove continue from both cases that we want to behave in a similar manner (case errUnhealthyPet and case nil)\n",
        "createdAt" : "2016-09-26T15:45:56Z",
        "updatedAt" : "2016-09-27T08:58:38Z",
        "lastEditedBy" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "tags" : [
        ]
      },
      {
        "id" : "bbfd1adc-2014-481f-a418-cd6563302b06",
        "parentId" : "958200cd-c5e9-4e2b-8931-4df510faa904",
        "authorId" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "body" : "slightly prefer continue since it's more explicit, and we can't end up adding some code at the end of the for loop that we execute by mistake in one case and not the other\n",
        "createdAt" : "2016-09-26T15:53:38Z",
        "updatedAt" : "2016-09-27T08:58:38Z",
        "lastEditedBy" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "tags" : [
        ]
      },
      {
        "id" : "47fe2274-2a2c-4fbc-a727-e383a44a3bd7",
        "parentId" : "958200cd-c5e9-4e2b-8931-4df510faa904",
        "authorId" : "f1b8dbef-1f61-40c9-a116-2e7319f9c36f",
        "body" : "Makes sense. Done\n",
        "createdAt" : "2016-09-27T08:57:10Z",
        "updatedAt" : "2016-09-27T08:58:38Z",
        "lastEditedBy" : "f1b8dbef-1f61-40c9-a116-2e7319f9c36f",
        "tags" : [
        ]
      }
    ],
    "commit" : "0bec58820249d2e49d76a1761e6ecd375bbf9297",
    "line" : null,
    "diffHunk" : "@@ -1,1 +355,359 @@\t\t\tcontinue\n\t\tcase nil:\n\t\t\tcontinue\n\t\tdefault:\n\t\t\tit.errs = append(it.errs, err)"
  },
  {
    "id" : "44394108-0c9e-4b48-9830-ea6fbd344bfe",
    "prId" : 24912,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9f9e23a3-131b-4175-9785-0eaca9b7d704",
        "parentId" : null,
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Maybe I missed this, but I thought we had a cleaner way to solve this.  Or in multi-store controllers we don't?\n",
        "createdAt" : "2016-04-29T03:12:27Z",
        "updatedAt" : "2016-05-05T01:39:30Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "c1b11c71-ccc2-434c-bca6-2e2e31661b53",
        "parentId" : "9f9e23a3-131b-4175-9785-0eaca9b7d704",
        "authorId" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "body" : "Don't think so. I think you're thinking of the time we re-listed all pods in a hot loop on controller-manager restart. We're not doing that anymore. How would you abstract this? we still need to hang the controller till pods are in the store. \n\nOh, this is using the informer's hassynced method, it's just a field for mocking out. \n",
        "createdAt" : "2016-04-30T02:50:28Z",
        "updatedAt" : "2016-05-05T01:39:30Z",
        "lastEditedBy" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "tags" : [
        ]
      }
    ],
    "commit" : "6bc3052551550aa2bd7306daed44c8b293221ff0",
    "line" : null,
    "diffHunk" : "@@ -1,1 +279,283 @@\t}()\n\n\tif !psc.podStoreSynced() {\n\t\t// Sleep so we give the pod reflector goroutine a chance to run.\n\t\ttime.Sleep(PodStoreSyncedPollPeriod)"
  },
  {
    "id" : "6f842222-2a6e-4215-9e1d-998260cc7d9d",
    "prId" : 24912,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "37059a56-94bf-4676-95fc-3163e732707f",
        "parentId" : null,
        "authorId" : "bb4cf218-381a-40ad-ac0c-0c2c66685cd4",
        "body" : "Sleeping doesn't guarantee reflector will run.\n",
        "createdAt" : "2016-04-29T06:09:55Z",
        "updatedAt" : "2016-05-05T01:39:30Z",
        "lastEditedBy" : "bb4cf218-381a-40ad-ac0c-0c2c66685cd4",
        "tags" : [
        ]
      },
      {
        "id" : "2ff4eedc-c353-407f-8b96-960f2aa196c9",
        "parentId" : "37059a56-94bf-4676-95fc-3163e732707f",
        "authorId" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "body" : "obviously, it's the pattern we follow in other controllers and fits the purpose, insted of overengineering a yield in there.\nhttps://github.com/kubernetes/kubernetes/blob/master/pkg/controller/replicaset/replica_set.go#L506\n",
        "createdAt" : "2016-04-29T06:12:26Z",
        "updatedAt" : "2016-05-05T01:39:30Z",
        "lastEditedBy" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "tags" : [
        ]
      }
    ],
    "commit" : "6bc3052551550aa2bd7306daed44c8b293221ff0",
    "line" : 283,
    "diffHunk" : "@@ -1,1 +281,285 @@\tif !psc.podStoreSynced() {\n\t\t// Sleep so we give the pod reflector goroutine a chance to run.\n\t\ttime.Sleep(PodStoreSyncedPollPeriod)\n\t\treturn []error{fmt.Errorf(\"waiting for pods controller to sync\")}\n\t}"
  },
  {
    "id" : "303583a7-196f-4f4e-96b2-a43db8a274c4",
    "prId" : 24912,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "80d37c26-f81f-459c-bbd9-65cf02e6cd07",
        "parentId" : null,
        "authorId" : "bb4cf218-381a-40ad-ac0c-0c2c66685cd4",
        "body" : "Can you provide more docs on what this function does?\n",
        "createdAt" : "2016-04-29T06:24:57Z",
        "updatedAt" : "2016-05-05T01:39:30Z",
        "lastEditedBy" : "bb4cf218-381a-40ad-ac0c-0c2c66685cd4",
        "tags" : [
        ]
      },
      {
        "id" : "9bf9d079-12c4-4725-b145-f4ac9a0c710b",
        "parentId" : "80d37c26-f81f-459c-bbd9-65cf02e6cd07",
        "authorId" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "body" : "it's the sync function of a controller loop, all control loops have the same generic structure. no point writing a thesis for this one alone. a sync function is intentioally losely defined so there's freedom to do what's needed to \"sync\" (drive actual to desired state)\n",
        "createdAt" : "2016-04-29T06:28:59Z",
        "updatedAt" : "2016-05-05T01:39:30Z",
        "lastEditedBy" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "tags" : [
        ]
      },
      {
        "id" : "892b335d-2fbb-4372-8feb-4b3aa02ccc30",
        "parentId" : "80d37c26-f81f-459c-bbd9-65cf02e6cd07",
        "authorId" : "bb4cf218-381a-40ad-ac0c-0c2c66685cd4",
        "body" : "Can you tell more about in this context what's happening for \"actual to desired state\"?\n",
        "createdAt" : "2016-04-29T06:39:08Z",
        "updatedAt" : "2016-05-05T01:39:30Z",
        "lastEditedBy" : "bb4cf218-381a-40ad-ac0c-0c2c66685cd4",
        "tags" : [
        ]
      },
      {
        "id" : "fdcaa434-8c4e-4e82-b969-6d11eed8d779",
        "parentId" : "80d37c26-f81f-459c-bbd9-65cf02e6cd07",
        "authorId" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "body" : "the spec gets satisfied (all the elements of the spec must match reality)\n",
        "createdAt" : "2016-04-29T06:43:02Z",
        "updatedAt" : "2016-05-05T01:39:30Z",
        "lastEditedBy" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "tags" : [
        ]
      },
      {
        "id" : "fea7de94-d9b7-4f0b-84c3-45b65538b488",
        "parentId" : "80d37c26-f81f-459c-bbd9-65cf02e6cd07",
        "authorId" : "bb4cf218-381a-40ad-ac0c-0c2c66685cd4",
        "body" : "OK. I see :)\n",
        "createdAt" : "2016-04-29T06:46:08Z",
        "updatedAt" : "2016-05-05T01:39:30Z",
        "lastEditedBy" : "bb4cf218-381a-40ad-ac0c-0c2c66685cd4",
        "tags" : [
        ]
      }
    ],
    "commit" : "6bc3052551550aa2bd7306daed44c8b293221ff0",
    "line" : 316,
    "diffHunk" : "@@ -1,1 +314,318 @@\n// syncPetSet syncs a tuple of (petset, pets).\nfunc (psc *PetSetController) syncPetSet(ps *apps.PetSet, pets []*api.Pod) (int, []error) {\n\tglog.Infof(\"Syncing PetSet %v/%v with %d pets\", ps.Namespace, ps.Name, len(pets))\n"
  },
  {
    "id" : "8b87e9ad-36d6-42e8-8de4-eb3713908453",
    "prId" : 24912,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0531a221-9d9a-4b55-9252-64cfcbe5d41e",
        "parentId" : null,
        "authorId" : "bb4cf218-381a-40ad-ac0c-0c2c66685cd4",
        "body" : "Sorry for bothering again.\nI still think this is metrics. What's the reason behind making it as logging?\n",
        "createdAt" : "2016-04-30T23:32:56Z",
        "updatedAt" : "2016-05-05T01:39:30Z",
        "lastEditedBy" : "bb4cf218-381a-40ad-ac0c-0c2c66685cd4",
        "tags" : [
        ]
      },
      {
        "id" : "be433f36-f14f-4a22-8d21-41bda5f2e565",
        "parentId" : "0531a221-9d9a-4b55-9252-64cfcbe5d41e",
        "authorId" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "body" : "this isn't a metric, it's to tell you which controller in kcm is syncing when. I'd lgtm a pr that bumps all such lines to V(5) but we can't remove it for as long as we run multiple controllers in kcm. \n",
        "createdAt" : "2016-05-02T16:58:10Z",
        "updatedAt" : "2016-05-05T01:39:30Z",
        "lastEditedBy" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "tags" : [
        ]
      }
    ],
    "commit" : "6bc3052551550aa2bd7306daed44c8b293221ff0",
    "line" : 278,
    "diffHunk" : "@@ -1,1 +276,280 @@\tstartTime := time.Now()\n\tdefer func() {\n\t\tglog.V(4).Infof(\"Finished syncing pet set %q (%v)\", key, time.Now().Sub(startTime))\n\t}()\n"
  }
]