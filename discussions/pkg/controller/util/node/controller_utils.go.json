[
  {
    "id" : "5f95ee19-365e-4959-80b6-28da74189744",
    "prId" : 87537,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/87537#pullrequestreview-368272955",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "87a1237a-ce26-4ae1-877a-ec5b44023b28",
        "parentId" : null,
        "authorId" : "d7870cae-47b0-4c8e-8527-be8fc4be86de",
        "body" : "I'm not an expert on the k8s api versioning... but just want to check there isn't a risk that the `APIVersion` will increase but we will forget to update this hard coded reference? Is there a constant we can refer to, or method call we can use which will guarantee this value stays up to date?",
        "createdAt" : "2020-01-25T16:33:48Z",
        "updatedAt" : "2020-01-28T17:24:20Z",
        "lastEditedBy" : "d7870cae-47b0-4c8e-8527-be8fc4be86de",
        "tags" : [
        ]
      },
      {
        "id" : "6de32b8b-5ad1-43b4-a1e8-dd2b6b5a38b3",
        "parentId" : "87a1237a-ce26-4ae1-877a-ec5b44023b28",
        "authorId" : "1741ac08-3695-4a64-8378-77b7c15e6bd6",
        "body" : "I searched over the codebase and I see that often APIVersion is omitted.",
        "createdAt" : "2020-01-26T02:31:17Z",
        "updatedAt" : "2020-01-28T17:24:20Z",
        "lastEditedBy" : "1741ac08-3695-4a64-8378-77b7c15e6bd6",
        "tags" : [
        ]
      },
      {
        "id" : "d3640b33-f3c4-4aad-a4ee-b617bad2e00a",
        "parentId" : "87a1237a-ce26-4ae1-877a-ec5b44023b28",
        "authorId" : "3eccedfc-5c53-4555-94cb-69f2b56e485c",
        "body" : "This is sorta related to the nodeRef not being a real node object in the Kubelet. I think this patch is ok, but it definitely should be refactored at some point.\r\n\r\nhttps://github.com/kubernetes/kubernetes/blob/master/pkg/kubelet/kubelet.go#L531-L533",
        "createdAt" : "2020-03-03T19:46:25Z",
        "updatedAt" : "2020-03-03T19:46:26Z",
        "lastEditedBy" : "3eccedfc-5c53-4555-94cb-69f2b56e485c",
        "tags" : [
        ]
      }
    ],
    "commit" : "427f0f9463645ae81500eb17ef325c809941f0b2",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +160,164 @@func RecordNodeEvent(recorder record.EventRecorder, nodeName, nodeUID, eventtype, reason, event string) {\n\tref := &v1.ObjectReference{\n\t\tAPIVersion: \"v1\",\n\t\tKind:       \"Node\",\n\t\tName:       nodeName,"
  },
  {
    "id" : "b934af0e-9fc0-4d92-9d17-02fec310c0e2",
    "prId" : 83320,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/83320#pullrequestreview-296217310",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3ae5b6b5-063e-43ec-81ae-07c54b789ed4",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Also, change MarkPodsReady function in this PR too.",
        "createdAt" : "2019-10-01T08:19:23Z",
        "updatedAt" : "2019-10-02T12:58:16Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "58af18e5-6e06-4a67-83d5-64f091937dfd",
        "parentId" : "3ae5b6b5-063e-43ec-81ae-07c54b789ed4",
        "authorId" : "e25d86e1-9b84-46f1-8d7f-a44328cd9bb4",
        "body" : "Done.",
        "createdAt" : "2019-10-02T12:58:35Z",
        "updatedAt" : "2019-10-02T12:58:36Z",
        "lastEditedBy" : "e25d86e1-9b84-46f1-8d7f-a44328cd9bb4",
        "tags" : [
        ]
      }
    ],
    "commit" : "a07a3a687897b6792a43918e683bc2145de80d30",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +43,47 @@// and return true if any pods were deleted, or were found pending\n// deletion.\nfunc DeletePods(kubeClient clientset.Interface, pods []v1.Pod, recorder record.EventRecorder, nodeName, nodeUID string, daemonStore appsv1listers.DaemonSetLister) (bool, error) {\n\tremaining := false\n\tvar updateErrList []error"
  },
  {
    "id" : "16ba7213-0b95-49be-93d8-aa83bb37d97c",
    "prId" : 81167,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/81167#pullrequestreview-301884060",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "423e082e-baf5-42ba-a5a8-7e006217e133",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Shouldn't we also ignore NotFound errors ?",
        "createdAt" : "2019-10-14T13:43:40Z",
        "updatedAt" : "2019-11-07T11:02:54Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "e5d304fd-6298-4e82-aaa0-94508dcdf258",
        "parentId" : "423e082e-baf5-42ba-a5a8-7e006217e133",
        "authorId" : "e25d86e1-9b84-46f1-8d7f-a44328cd9bb4",
        "body" : "IMHO if we are marking pod not-ready, we assume it should exist.",
        "createdAt" : "2019-10-15T12:49:38Z",
        "updatedAt" : "2019-11-07T11:02:55Z",
        "lastEditedBy" : "e25d86e1-9b84-46f1-8d7f-a44328cd9bb4",
        "tags" : [
        ]
      },
      {
        "id" : "666d6861-e22b-4477-9715-b211c0955187",
        "parentId" : "423e082e-baf5-42ba-a5a8-7e006217e133",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "In the meantime user could manually delete it for example.",
        "createdAt" : "2019-10-15T13:27:36Z",
        "updatedAt" : "2019-11-07T11:02:55Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "9406e5bf2aa82b27754ccbadf2048a60030d89ec",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +144,148 @@\t\t\t\t\t\tcontinue\n\t\t\t\t\t}\n\t\t\t\t\tklog.Warningf(\"Failed to update status for pod %q: %v\", format.Pod(pod), err)\n\t\t\t\t\terrMsg = append(errMsg, fmt.Sprintf(\"%v\", err))\n\t\t\t\t}"
  },
  {
    "id" : "6959f875-2498-47cd-b989-6dd843782135",
    "prId" : 78104,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/78104#pullrequestreview-240423435",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "71428532-a405-4d66-8cde-2cd82a44b413",
        "parentId" : null,
        "authorId" : "d7870cae-47b0-4c8e-8527-be8fc4be86de",
        "body" : "Just confirming that we can be confident that `pod.Status.Conditions` will only contain one `condition` for which `Type = v1.PodReady`? Or alternatively, if there are multiple, we only want to examine one of them?\r\n\r\n\r\nConfirming my understanding... we can break here because if `UpdatePodCondition` returns false, it means no update is necessary for this condition... and we can be confident that `pod.Status.Condition",
        "createdAt" : "2019-05-21T13:53:01Z",
        "updatedAt" : "2019-05-21T13:53:47Z",
        "lastEditedBy" : "d7870cae-47b0-4c8e-8527-be8fc4be86de",
        "tags" : [
        ]
      },
      {
        "id" : "8ff6ca5e-139e-43f1-ab80-1e9fd757f602",
        "parentId" : "71428532-a405-4d66-8cde-2cd82a44b413",
        "authorId" : "01fd6d15-1b8f-4203-9be4-8588255695db",
        "body" : "yeah, only one PodReady condition",
        "createdAt" : "2019-05-22T06:06:02Z",
        "updatedAt" : "2019-05-22T06:06:02Z",
        "lastEditedBy" : "01fd6d15-1b8f-4203-9be4-8588255695db",
        "tags" : [
        ]
      }
    ],
    "commit" : "0a8d7aadc0e756c19e98f3f30b9ef76e496cdbcb",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +140,144 @@\t\t\t\tcond.Status = v1.ConditionFalse\n\t\t\t\tif !utilpod.UpdatePodCondition(&pod.Status, &cond) {\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t\tklog.V(2).Infof(\"Updating ready status of pod %v to false\", pod.Name)"
  }
]