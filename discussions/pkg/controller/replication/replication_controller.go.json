[
  {
    "id" : "0cbc1d66-d115-4fa5-bcc8-94062006f542",
    "prId" : 42659,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/42659#pullrequestreview-27058216",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3d6c2967-8d31-4c3a-8965-ac29c225ea51",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "check deletionTimestamp too.",
        "createdAt" : "2017-03-15T12:19:35Z",
        "updatedAt" : "2017-03-20T16:10:22Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "c74aab649fc32680bc0afecbe238ff45148e9bdb",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +194,198 @@\t\t// ControllerRef points to.\n\t\treturn nil\n\t}\n\treturn rc\n}"
  },
  {
    "id" : "c55a7910-192a-45a1-81e8-35bee378ad89",
    "prId" : 27600,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dd249ae4-5ba3-47d5-94be-9f08e21e0191",
        "parentId" : null,
        "authorId" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "body" : "going to assume all this is just copied from above into a new func\n",
        "createdAt" : "2016-07-07T01:11:46Z",
        "updatedAt" : "2016-07-15T02:59:40Z",
        "lastEditedBy" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "tags" : [
        ]
      },
      {
        "id" : "4fe9b5e8-4712-488a-bed6-ebeb70f3f18c",
        "parentId" : "dd249ae4-5ba3-47d5-94be-9f08e21e0191",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "Yes, it's just copy-paste now.\n",
        "createdAt" : "2016-07-08T02:30:24Z",
        "updatedAt" : "2016-07-15T02:59:40Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "11a341de67012fb2ac544e0dca59a5c3e08e0029",
    "line" : null,
    "diffHunk" : "@@ -1,1 +321,325 @@\t\trm.lookupCache.InvalidateAll()\n\t}\n\n\t// You might imagine that we only really need to enqueue the\n\t// controller when Spec changes, but it is safer to sync any"
  },
  {
    "id" : "e91bb547-cd0e-48f3-89b8-809472bf5f3f",
    "prId" : 27600,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4e19ec75-b0fb-479d-91a8-272ca753f12a",
        "parentId" : null,
        "authorId" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "body" : "why not just filterActivePods in both cases, and just add controllerref if gc is enabled? makes it clearer, and isolates the responsibilities of the OwnerRef adding/removing functions \n",
        "createdAt" : "2016-07-12T18:31:33Z",
        "updatedAt" : "2016-07-15T02:59:40Z",
        "lastEditedBy" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "tags" : [
        ]
      },
      {
        "id" : "67be364a-6ab8-4e90-a2da-9017056fe2f4",
        "parentId" : "4e19ec75-b0fb-479d-91a8-272ca753f12a",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "I'm trying to iterate through the podList as few times as possible.\n",
        "createdAt" : "2016-07-12T19:00:08Z",
        "updatedAt" : "2016-07-15T02:59:40Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      },
      {
        "id" : "68722da0-78a3-4d6a-a913-61249b0e49cf",
        "parentId" : "4e19ec75-b0fb-479d-91a8-272ca753f12a",
        "authorId" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "body" : "don't you need to get active pods anyway? i was suggesting passing that list in. \n",
        "createdAt" : "2016-07-12T19:04:15Z",
        "updatedAt" : "2016-07-15T02:59:40Z",
        "lastEditedBy" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "tags" : [
        ]
      },
      {
        "id" : "0cabe007-bb22-47d0-b309-52259b2f3438",
        "parentId" : "4e19ec75-b0fb-479d-91a8-272ca753f12a",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "I took the pattern suggested by lavalamp. I'll ping you guys when I push the commit.\n",
        "createdAt" : "2016-07-13T00:21:51Z",
        "updatedAt" : "2016-07-15T02:59:40Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "11a341de67012fb2ac544e0dca59a5c3e08e0029",
    "line" : 304,
    "diffHunk" : "@@ -1,1 +672,676 @@\t\t\treturn err\n\t\t}\n\t\tfilteredPods = controller.FilterActivePods(podList.Items)\n\t}\n"
  },
  {
    "id" : "5f278e82-fba0-4249-a99d-a83339dfb8b1",
    "prId" : 27600,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b5b5713e-9497-4de0-bccd-467b4e7f6a2f",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "why remove \"Internal\"?\n",
        "createdAt" : "2016-07-12T21:04:30Z",
        "updatedAt" : "2016-07-15T02:59:40Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "03e0b75e-e718-4e76-8a36-def943b71b63",
        "parentId" : "b5b5713e-9497-4de0-bccd-467b4e7f6a2f",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "Function name starting with lower case already suggests its an internal function. @bprashanth suggested this.\n",
        "createdAt" : "2016-07-13T06:07:54Z",
        "updatedAt" : "2016-07-15T02:59:40Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      },
      {
        "id" : "08f8c7b0-6027-4d2a-af22-fb2d58588c4f",
        "parentId" : "b5b5713e-9497-4de0-bccd-467b4e7f6a2f",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "sure, it's an improvement, but it's also noise in a PR this size :) (but\ndon't change it back)\n\nOn Tue, Jul 12, 2016 at 11:08 PM, Chao Xu notifications@github.com wrote:\n\n> In pkg/controller/replication/replication_controller.go\n> https://github.com/kubernetes/kubernetes/pull/27600#discussion_r70568476\n> :\n> \n> >  }\n> > \n> > -// newReplicationManagerInternal configures a replication manager with the specified event recorder\n> > -func newReplicationManagerInternal(eventRecorder record.EventRecorder, podInformer framework.SharedIndexInformer, kubeClient clientset.Interface, resyncPeriod controller.ResyncPeriodFunc, burstReplicas int, lookupCacheSize int) *ReplicationManager {\n> > +// newReplicationManager configures a replication manager with the specified event recorder\n> \n> Function name starting with lower case already suggests its an internal\n> function. @bprashanth https://github.com/bprashanth suggested this.\n> \n> â€”\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> https://github.com/kubernetes/kubernetes/pull/27600/files/198f8ecb531c17a17ba0bfbfb0b843c7f73cdb38#r70568476,\n> or mute the thread\n> https://github.com/notifications/unsubscribe/AAnglrgdfOvWmp7zPPTYKd4ZQ9skxIqIks5qVIDDgaJpZM4I4CdG\n> .\n",
        "createdAt" : "2016-07-13T06:36:51Z",
        "updatedAt" : "2016-07-15T02:59:40Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "11a341de67012fb2ac544e0dca59a5c3e08e0029",
    "line" : 54,
    "diffHunk" : "@@ -1,1 +130,134 @@}\n\n// newReplicationManager configures a replication manager with the specified event recorder\nfunc newReplicationManager(eventRecorder record.EventRecorder, podInformer framework.SharedIndexInformer, kubeClient clientset.Interface, resyncPeriod controller.ResyncPeriodFunc, burstReplicas int, lookupCacheSize int, garbageCollectorEnabled bool) *ReplicationManager {\n\tif kubeClient != nil && kubeClient.Core().GetRESTClient().GetRateLimiter() != nil {"
  },
  {
    "id" : "c6db7f86-f124-4195-9ec5-253b561fce00",
    "prId" : 27600,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "50f7b404-ff31-4587-a5f7-fa6f019f721b",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "How often does this happen? I suspect this is going to break the scalability tests. I think you need to modify the store to keep a pod-to-controller map.\n",
        "createdAt" : "2016-07-12T21:27:26Z",
        "updatedAt" : "2016-07-15T02:59:40Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "5b2c8974-8884-4891-8222-ceb7de1868a8",
        "parentId" : "50f7b404-ff31-4587-a5f7-fa6f019f721b",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "Per offline discussion, it's no worse than it currently is.\n",
        "createdAt" : "2016-07-13T00:13:21Z",
        "updatedAt" : "2016-07-15T02:59:40Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "11a341de67012fb2ac544e0dca59a5c3e08e0029",
    "line" : 260,
    "diffHunk" : "@@ -1,1 +628,632 @@\t\t// list all pods to include the pods that don't match the rc's selector\n\t\t// anymore but has the stale controller ref.\n\t\tpodList, err := rm.podStore.Pods(rc.Namespace).List(labels.Everything())\n\t\tif err != nil {\n\t\t\tglog.Errorf(\"Error getting pods for rc %q: %v\", key, err)"
  },
  {
    "id" : "b486184f-24b9-4f90-a83e-b0f703b87c2c",
    "prId" : 27600,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b404250a-24c0-4997-95c9-c837d1bb1360",
        "parentId" : null,
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "This is a copy-paste for easy testing.\n",
        "createdAt" : "2016-07-13T17:22:13Z",
        "updatedAt" : "2016-07-15T02:59:40Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "11a341de67012fb2ac544e0dca59a5c3e08e0029",
    "line" : 154,
    "diffHunk" : "@@ -1,1 +303,307 @@\n// callback when RC is updated\nfunc (rm *ReplicationManager) updateRC(old, cur interface{}) {\n\toldRC := old.(*api.ReplicationController)\n\tcurRC := cur.(*api.ReplicationController)"
  },
  {
    "id" : "ee2d2501-89fd-4e13-b856-bc8a1f47691d",
    "prId" : 25414,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "67ad9d61-2506-4278-91f2-38259dc6f01b",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "Pretty sure this is called by mesos somewhere too, though I guess I don't really mind.\n",
        "createdAt" : "2016-05-10T17:31:55Z",
        "updatedAt" : "2016-05-10T23:51:18Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "c151fde1-0d85-4ddf-ae8c-6d3b35aa9202",
        "parentId" : "67ad9d61-2506-4278-91f2-38259dc6f01b",
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "this is a new function, not sure how mesos would be calling it.\n",
        "createdAt" : "2016-05-10T17:58:26Z",
        "updatedAt" : "2016-05-10T23:51:18Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      }
    ],
    "commit" : "fc3e71894dde85fc64c099286f84efaf388cd1a5",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +206,210 @@\n// NewReplicationManagerFromClientForIntegration creates a new ReplicationManager that runs its own informer.  It disables event recording for use in integration tests.\nfunc NewReplicationManagerFromClientForIntegration(kubeClient clientset.Interface, resyncPeriod controller.ResyncPeriodFunc, burstReplicas int, lookupCacheSize int) *ReplicationManager {\n\tpodInformer := informers.CreateSharedPodIndexInformer(kubeClient, resyncPeriod())\n\trm := newReplicationManagerInternal(&record.FakeRecorder{}, podInformer, kubeClient, resyncPeriod, burstReplicas, lookupCacheSize)"
  },
  {
    "id" : "a688c338-34f2-4a7b-ab1c-722788d0baa1",
    "prId" : 23575,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "41022165-0bf0-4024-bc8c-02fe34f6f42f",
        "parentId" : null,
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "I like the concept of this shared informer.  It would really help in quota controller by not having the duplicate watches.  What I am not sure about is if we should have a convention to denote the scope of the backing list/watch for the informer or if our assumed convention of list/watch everything is safe enough.\n",
        "createdAt" : "2016-03-31T19:02:53Z",
        "updatedAt" : "2016-04-18T12:51:59Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      },
      {
        "id" : "02160461-0c56-427f-8019-ddb469550aa2",
        "parentId" : "41022165-0bf0-4024-bc8c-02fe34f6f42f",
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "For example, some of our informers have varying resync periods (although ideally we could move away from those completely)\n",
        "createdAt" : "2016-03-31T19:09:37Z",
        "updatedAt" : "2016-04-18T12:51:59Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      },
      {
        "id" : "3d215c3b-eff3-476a-a61d-d625b14445da",
        "parentId" : "41022165-0bf0-4024-bc8c-02fe34f6f42f",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "@derekwaynecarr - regarding different resync periods:\n- we are going to split the resync and relist - see: #23394\n- once this is done, relist is just an implementation detail, and it should be possible to do resync idependently for different handlers (I would suggest ResourceEventHandlerFunc taking \"resyncPeriod\" as a parameter too, which I think shouldn't be difficult to add).\n  I'm not sure if relist is your only concern though.\n",
        "createdAt" : "2016-04-11T08:58:18Z",
        "updatedAt" : "2016-04-18T12:51:59Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "f0c33d65b6fea84d791059d96c93a15e4b3de4ec",
    "line" : null,
    "diffHunk" : "@@ -1,1 +175,179 @@\t)\n\n\tpodInformer.AddEventHandler(framework.ResourceEventHandlerFuncs{\n\t\tAddFunc: rm.addPod,\n\t\t// This invokes the rc for every pod change, eg: host assignment. Though this might seem like overkill"
  },
  {
    "id" : "2dac5748-1bfd-422a-84b1-455c98179868",
    "prId" : 19043,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "611de1db-a26b-4865-b1de-d724780239f3",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "The same comments I had for the sibling file - thanks!\n",
        "createdAt" : "2016-02-23T15:41:02Z",
        "updatedAt" : "2016-02-24T09:43:37Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "d9a35a25d76211e44934e2f75353f78ddfe6a535",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +126,130 @@\t\t\tAddFunc: rm.enqueueController,\n\t\t\tUpdateFunc: func(old, cur interface{}) {\n\t\t\t\toldRC := old.(*api.ReplicationController)\n\t\t\t\tcurRC := cur.(*api.ReplicationController)\n"
  }
]