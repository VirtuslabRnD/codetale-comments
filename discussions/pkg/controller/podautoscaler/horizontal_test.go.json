[
  {
    "id" : "19a5b85a-44b2-4aa6-9d34-c3f28690b790",
    "prId" : 95647,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/95647#pullrequestreview-514561866",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9f9de829-1caf-4672-be2a-e386a78069b5",
        "parentId" : null,
        "authorId" : "35b74c0f-1e37-4ee0-81db-f5e9449774bc",
        "body" : "The name of this function should be `TestCalculateScaleDownLimitWithScalingRules` like in the other function.",
        "createdAt" : "2020-10-22T09:59:15Z",
        "updatedAt" : "2020-10-22T10:01:49Z",
        "lastEditedBy" : "35b74c0f-1e37-4ee0-81db-f5e9449774bc",
        "tags" : [
        ]
      },
      {
        "id" : "4a9da345-e859-423e-9b3d-47a516fe16c5",
        "parentId" : "9f9de829-1caf-4672-be2a-e386a78069b5",
        "authorId" : "5b62f986-975a-45d9-b72d-c1e9c5436aee",
        "body" : "It has been modified, thanks",
        "createdAt" : "2020-10-22T10:03:25Z",
        "updatedAt" : "2020-10-22T10:03:25Z",
        "lastEditedBy" : "5b62f986-975a-45d9-b72d-c1e9c5436aee",
        "tags" : [
        ]
      }
    ],
    "commit" : "b19a115f422a876c6d4d5557298bafc1d427fd5e",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +3016,3020 @@}\n\nfunc TestCalculateScaleDownLimitWithBehaviors(t *testing.T) {\n\tpolicy := autoscalingv2.MinPolicySelect\n"
  },
  {
    "id" : "f02e574e-0859-416b-81d5-2e3cf0ec0111",
    "prId" : 76455,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/76455#pullrequestreview-228150414",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "12997135-9ff4-4e30-8f9d-af6f99e9e3e3",
        "parentId" : null,
        "authorId" : "7d9aba44-f03a-4059-8095-4da9c4210817",
        "body" : "You need to apply this same fix to `legacy_horizontal_test.go` as well.\r\n\r\nLooks like we were racing to fix the same race condition!  https://github.com/kubernetes/kubernetes/pull/76026/files\r\n\r\nFYI: You can reliably reproduce this deadlock with `export GOMAXPROCS=1` and `go test ./pkg/controller/podautoscaler/... -timeout 60s -count 1`.  This PR fails on `legacy_horizontal_test.go`, but it fixes `horizontal_test.go` nicely!",
        "createdAt" : "2019-04-17T09:41:48Z",
        "updatedAt" : "2019-04-17T14:10:58Z",
        "lastEditedBy" : "7d9aba44-f03a-4059-8095-4da9c4210817",
        "tags" : [
        ]
      },
      {
        "id" : "5a899f45-4cbe-4195-b0da-359295b74864",
        "parentId" : "12997135-9ff4-4e30-8f9d-af6f99e9e3e3",
        "authorId" : "7d9aba44-f03a-4059-8095-4da9c4210817",
        "body" : "Shall we proceed with your pull request or mine?  Either way is fine.",
        "createdAt" : "2019-04-17T09:45:36Z",
        "updatedAt" : "2019-04-17T14:10:58Z",
        "lastEditedBy" : "7d9aba44-f03a-4059-8095-4da9c4210817",
        "tags" : [
        ]
      },
      {
        "id" : "d5f9450e-7f76-4a1f-be00-1542141103ef",
        "parentId" : "12997135-9ff4-4e30-8f9d-af6f99e9e3e3",
        "authorId" : "cebc811c-e565-44d5-bbb6-3b767a712327",
        "body" : "Thanks, I added the legacy test fix as well.\r\n\r\nIf it's all the same to you, I'd like to keep this PR going just because I merged a similar PR in OpenShift and referenced this PR. Our tooling that coordinates with this repo will be waiting for this PR to come through in a future OpenShift rebase so it can drop that patch.",
        "createdAt" : "2019-04-17T13:19:22Z",
        "updatedAt" : "2019-04-17T14:10:58Z",
        "lastEditedBy" : "cebc811c-e565-44d5-bbb6-3b767a712327",
        "tags" : [
        ]
      },
      {
        "id" : "9e210c53-415c-4c5e-9305-7548b6fbcd1d",
        "parentId" : "12997135-9ff4-4e30-8f9d-af6f99e9e3e3",
        "authorId" : "7d9aba44-f03a-4059-8095-4da9c4210817",
        "body" : "No problem.  Thanks for the additional fix in the legacy tests.  Passes now with GOMAXPROCS=1.",
        "createdAt" : "2019-04-18T08:08:24Z",
        "updatedAt" : "2019-04-18T08:08:25Z",
        "lastEditedBy" : "7d9aba44-f03a-4059-8095-4da9c4210817",
        "tags" : [
        ]
      }
    ],
    "commit" : "f50696adda97e01b25cca56029ff663cf208a5e8",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +331,335 @@\n\tfakeClient.AddReactor(\"update\", \"horizontalpodautoscalers\", func(action core.Action) (handled bool, ret runtime.Object, err error) {\n\t\thandled, obj, err := func() (handled bool, ret *autoscalingv1.HorizontalPodAutoscaler, err error) {\n\t\t\ttc.Lock()\n\t\t\tdefer tc.Unlock()"
  },
  {
    "id" : "78229208-8f8a-47ac-ae9a-179615f9e583",
    "prId" : 42715,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/42715#pullrequestreview-25767899",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ac478f11-9504-411f-a33e-a47efe957e7d",
        "parentId" : null,
        "authorId" : "c929c906-4dfb-433b-9bc7-1b4b05c176f8",
        "body" : "I'm wondering how complicated it will be to add an extensive unit test that checks if the newly added rate limiting works correctly.",
        "createdAt" : "2017-03-08T13:11:31Z",
        "updatedAt" : "2017-03-09T21:32:11Z",
        "lastEditedBy" : "c929c906-4dfb-433b-9bc7-1b4b05c176f8",
        "tags" : [
        ]
      }
    ],
    "commit" : "8337031bf59fdce045999829385daaa8838beab8",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +492,496 @@\teventClient := &clientfake.Clientset{}\n\teventClient.AddReactor(\"create\", \"events\", func(action core.Action) (handled bool, ret runtime.Object, err error) {\n\t\ttc.Lock()\n\t\tdefer tc.Unlock()\n"
  },
  {
    "id" : "2de92dc9-253e-44e4-bd9b-539bfd60d72f",
    "prId" : 33593,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/33593#pullrequestreview-2738131",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0689a936-579c-4aa7-9f08-d880eadddc82",
        "parentId" : null,
        "authorId" : "c929c906-4dfb-433b-9bc7-1b4b05c176f8",
        "body" : "please, add a case when threre are unready pods and scale down is triggered\n",
        "createdAt" : "2016-10-04T09:20:35Z",
        "updatedAt" : "2016-11-08T05:57:50Z",
        "lastEditedBy" : "c929c906-4dfb-433b-9bc7-1b4b05c176f8",
        "tags" : [
        ]
      },
      {
        "id" : "04a5d86e-a0c7-4208-b152-5bd02648639a",
        "parentId" : "0689a936-579c-4aa7-9f08-d880eadddc82",
        "authorId" : "3a4b4830-dc71-4d7e-a7db-de2453284945",
        "body" : "✔️ \n",
        "createdAt" : "2016-10-04T15:28:13Z",
        "updatedAt" : "2016-11-08T05:57:50Z",
        "lastEditedBy" : "3a4b4830-dc71-4d7e-a7db-de2453284945",
        "tags" : [
        ]
      }
    ],
    "commit" : "2c66d47786465b132f9b5d1d731c4eb9f6c9d686",
    "line" : 212,
    "diffHunk" : "@@ -1,1 +597,601 @@\ttc.runTest(t)\n}\n\nfunc TestScaleUpDeployment(t *testing.T) {\n\ttc := testCase{"
  },
  {
    "id" : "b67cb76d-812c-44fa-8a92-34164c29dbc0",
    "prId" : 24537,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "62493546-b7ad-48fb-81b3-57b974db61ae",
        "parentId" : null,
        "authorId" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "body" : "I hate githube. Please add a comment by `computeCPUCurrent` that it needs to be called under the lock.\n",
        "createdAt" : "2016-04-20T20:02:11Z",
        "updatedAt" : "2016-04-20T20:29:18Z",
        "lastEditedBy" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "tags" : [
        ]
      }
    ],
    "commit" : "c5a64c1f44826a0ba9b8af0826c4c1b9c50263bf",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +116,120 @@\t}\n\n\ttc.Lock()\n\n\ttc.scaleUpdated = false"
  },
  {
    "id" : "6c4843a4-fe44-4efe-8a7d-5e1c32426f38",
    "prId" : 22426,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7709f854-ae70-4b8e-84b6-c59af039fde3",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "I would prefer you do this in a loop or something, this looks like it will make it flaky?\n",
        "createdAt" : "2016-03-04T00:27:28Z",
        "updatedAt" : "2016-03-25T12:03:23Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "52d2248e-ea8d-4040-acdc-651ecef8fa2a",
        "parentId" : "7709f854-ae70-4b8e-84b6-c59af039fde3",
        "authorId" : "a6ca7669-677e-4e8d-80cf-83cbff3b4216",
        "body" : "@mwielgus please fix\n",
        "createdAt" : "2016-03-04T12:01:54Z",
        "updatedAt" : "2016-03-25T12:03:23Z",
        "lastEditedBy" : "a6ca7669-677e-4e8d-80cf-83cbff3b4216",
        "tags" : [
        ]
      },
      {
        "id" : "6d21f56b-a27f-4230-a99d-addb2a4aabdb",
        "parentId" : "7709f854-ae70-4b8e-84b6-c59af039fde3",
        "authorId" : "ab8bc7c5-233d-47c1-b03a-767fb930c021",
        "body" : "I think that doing it super right would require broadcaster refactoring. I would rather not do. This change should not make this test any more flaky.\n",
        "createdAt" : "2016-03-04T13:19:18Z",
        "updatedAt" : "2016-03-25T12:03:23Z",
        "lastEditedBy" : "ab8bc7c5-233d-47c1-b03a-767fb930c021",
        "tags" : [
        ]
      },
      {
        "id" : "2f94b482-c1c5-4e5e-963a-0f0c806845ae",
        "parentId" : "7709f854-ae70-4b8e-84b6-c59af039fde3",
        "authorId" : "a6ca7669-677e-4e8d-80cf-83cbff3b4216",
        "body" : "I believe what @lavalamp means here is to check whether events were created in a loop with timeout.\n",
        "createdAt" : "2016-03-04T13:23:48Z",
        "updatedAt" : "2016-03-25T12:03:23Z",
        "lastEditedBy" : "a6ca7669-677e-4e8d-80cf-83cbff3b4216",
        "tags" : [
        ]
      },
      {
        "id" : "a2727ac9-f0fc-43b0-a230-86b8f857791d",
        "parentId" : "7709f854-ae70-4b8e-84b6-c59af039fde3",
        "authorId" : "ab8bc7c5-233d-47c1-b03a-767fb930c021",
        "body" : "The problem is that sometimes we want an event to be NOT created. Removing initial sleep will cause false positives. \n",
        "createdAt" : "2016-03-04T13:47:13Z",
        "updatedAt" : "2016-03-25T12:03:23Z",
        "lastEditedBy" : "ab8bc7c5-233d-47c1-b03a-767fb930c021",
        "tags" : [
        ]
      },
      {
        "id" : "2c86a556-b927-4b2f-9bd5-c2c202f718e7",
        "parentId" : "7709f854-ae70-4b8e-84b6-c59af039fde3",
        "authorId" : "a6ca7669-677e-4e8d-80cf-83cbff3b4216",
        "body" : "OK\n",
        "createdAt" : "2016-03-04T13:49:17Z",
        "updatedAt" : "2016-03-25T12:03:23Z",
        "lastEditedBy" : "a6ca7669-677e-4e8d-80cf-83cbff3b4216",
        "tags" : [
        ]
      },
      {
        "id" : "53e58800-b167-461e-93c6-4cb5581306ca",
        "parentId" : "7709f854-ae70-4b8e-84b6-c59af039fde3",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "I still maintain that this is flaky, but I guess you're not making it worse.\n",
        "createdAt" : "2016-03-04T23:37:25Z",
        "updatedAt" : "2016-03-25T12:03:23Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "c640256917ff56f45a53a63a8b1e3333a274a351",
    "line" : null,
    "diffHunk" : "@@ -1,1 +354,358 @@\tif tc.verifyEvents {\n\t\t// We need to wait for events to be broadcasted (sleep for longer than record.sleepDuration).\n\t\ttime.Sleep(2 * time.Second)\n\t}\n\t// Wait for HPA to be processed."
  },
  {
    "id" : "ca32aa53-acd6-4eed-adb5-b909bd3cf110",
    "prId" : 21743,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ad7e5da5-543f-4ef0-841c-1ce7eecb6945",
        "parentId" : null,
        "authorId" : "ab8bc7c5-233d-47c1-b03a-767fb930c021",
        "body" : "Please add a test that checks that current replicas is updated on error.\n",
        "createdAt" : "2016-02-23T13:14:03Z",
        "updatedAt" : "2016-02-23T13:31:35Z",
        "lastEditedBy" : "ab8bc7c5-233d-47c1-b03a-767fb930c021",
        "tags" : [
        ]
      },
      {
        "id" : "b35f9cd5-323c-40bd-8def-30fbd04efd59",
        "parentId" : "ad7e5da5-543f-4ef0-841c-1ce7eecb6945",
        "authorId" : "a6ca7669-677e-4e8d-80cf-83cbff3b4216",
        "body" : "Done\n",
        "createdAt" : "2016-02-23T13:31:46Z",
        "updatedAt" : "2016-02-23T13:31:46Z",
        "lastEditedBy" : "a6ca7669-677e-4e8d-80cf-83cbff3b4216",
        "tags" : [
        ]
      }
    ],
    "commit" : "0dfeb81390b994236a818fc530a8de6888863983",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +100,104 @@\t\t\t\t\t\tMinReplicas: &tc.minReplicas,\n\t\t\t\t\t\tMaxReplicas: tc.maxReplicas,\n\t\t\t\t\t},\n\t\t\t\t\tStatus: extensions.HorizontalPodAutoscalerStatus{\n\t\t\t\t\t\tCurrentReplicas: tc.initialReplicas,"
  },
  {
    "id" : "95b018e0-3d7f-4fea-ab1d-8b888846a74f",
    "prId" : 18315,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "29868cfa-78c9-4e4f-bf58-2ac35c603675",
        "parentId" : null,
        "authorId" : "a5be0b3b-3db2-4c99-a598-55f8708db5df",
        "body" : "@jszczepkowski  1-tolerance works as well.  it just changes the sign, which is a no-op since we're absolute-valuing.  I've updated it from `tolerance-1` to `1-tolerance` here, any way... (i like your idea it makes the equation a little more readable i think, probably is more accurate to)\n",
        "createdAt" : "2015-12-09T17:39:58Z",
        "updatedAt" : "2015-12-10T15:59:37Z",
        "lastEditedBy" : "a5be0b3b-3db2-4c99-a598-55f8708db5df",
        "tags" : [
        ]
      }
    ],
    "commit" : "5161d169baa5716c39be7fc7c9b070b3ec43933a",
    "line" : 54,
    "diffHunk" : "@@ -1,1 +383,387 @@\n\t// Force a minimal scaling event by satisfying  (tolerance < 1 - resourcesUsedRatio).\n\ttarget := math.Abs(1/(requestedToUsed*(1-tolerance))) + .01\n\tfinalCpuPercentTarget := int(target * 100)\n\tresourcesUsedRatio := float64(totalUsedCPUOfAllPods) / float64(float64(totalRequestedCPUOfAllPods)*target)"
  }
]