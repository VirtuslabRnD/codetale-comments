[
  {
    "id" : "dddeff70-d539-42a3-aeaa-550581ad26be",
    "prId" : 20061,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "20e28942-fe67-40a0-a8af-ee21e8efe269",
        "parentId" : null,
        "authorId" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "body" : "Same thing here, put another pod on the node at the beginning, but a small one so the daemon does schedule.\n(And change the comment to \"sufficient free resources\" instead of \"sufficient capacity\")\n",
        "createdAt" : "2016-01-28T09:13:40Z",
        "updatedAt" : "2016-01-28T21:26:24Z",
        "lastEditedBy" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "tags" : [
        ]
      }
    ],
    "commit" : "e2fecf36b9848abaf39102144d3c2ee6af5dd6a0",
    "line" : null,
    "diffHunk" : "@@ -1,1 +243,247 @@\n// DaemonSets should place onto nodes with sufficient free resource\nfunc TestSufficentCapacityNodeDaemonLaunchesPod(t *testing.T) {\n\tpodSpec := api.PodSpec{\n\t\tNodeName: \"not-too-much-mem\","
  },
  {
    "id" : "5669f56d-48e9-4aea-bc91-0b161135d4a8",
    "prId" : 14156,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c535179d-7b49-43ed-8202-1068cdd668ac",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "I'm surprised this works-- isn't the daemon controller in experimental?\n",
        "createdAt" : "2015-09-21T21:59:25Z",
        "updatedAt" : "2015-09-24T22:32:19Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "ed638db2-cc9e-4ebc-9b95-29860e2f31e2",
        "parentId" : "c535179d-7b49-43ed-8202-1068cdd668ac",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "The client here contains both v1 client and experimental client (https://github.com/kubernetes/kubernetes/blob/master/pkg/client/unversioned/client.go#L125)\nthe `Version` here is used to config the version of the v1 client. And deeper in this NewOrDie function, it will modify the config to set the default version for experimental client. (https://github.com/kubernetes/kubernetes/pull/14156/files#diff-ee5f86f66628c16b5c04e3a653c118efR138)\n\nCurrently this `client.NewOrDie` does not support a way to specify the version of the experimental client. It doesn't really hurt so far because we only have one version for the experimental group, and we can always default to that. IMO, we should fix it in another PR.\n",
        "createdAt" : "2015-09-21T22:27:35Z",
        "updatedAt" : "2015-09-24T22:32:19Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      },
      {
        "id" : "800fbf14-9ca6-4cdd-ad27-89d44e3be130",
        "parentId" : "c535179d-7b49-43ed-8202-1068cdd668ac",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "OK\n\nOn Mon, Sep 21, 2015 at 3:27 PM, Chao Xu notifications@github.com wrote:\n\n> In pkg/controller/daemon/controller_test.go\n> https://github.com/kubernetes/kubernetes/pull/14156#discussion_r40034732\n> :\n> \n> > @@ -158,7 +158,7 @@ func addPods(podStore cache.Store, nodeName string, label map[string]string, num\n> >  }\n> > \n> >  func newTestController() (*DaemonSetsController, *FakePodControl) {\n> > -   client := client.NewOrDie(&client.Config{Host: \"\", Version: testapi.Experimental.Version()})\n> > -   client := client.NewOrDie(&client.Config{Host: \"\", Version: testapi.Default.GroupAndVersion()})\n> \n> The client here contains both v1 client and experimental client (\n> https://github.com/kubernetes/kubernetes/blob/master/pkg/client/unversioned/client.go#L125\n> )\n> the Version here is used to config the version of the v1 client. And\n> deeper in this NewOrDie function, it will modify the config to set the\n> default version for experimental client. (\n> https://github.com/kubernetes/kubernetes/pull/14156/files#diff-ee5f86f66628c16b5c04e3a653c118efR138\n> )\n> \n> Currently this client.NewOrDie does not support a way to specify the\n> version of the experimental client. It doesn't really hurt so far because\n> we only have one version for the experimental group, and we can always\n> default to that. IMO, we should fix it in another PR.\n> \n> â€”\n> Reply to this email directly or view it on GitHub\n> https://github.com/kubernetes/kubernetes/pull/14156/files#r40034732.\n",
        "createdAt" : "2015-09-21T22:38:20Z",
        "updatedAt" : "2015-09-24T22:32:19Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "ae1293418b125b540717e6c695df886fe2ddde64",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +159,163 @@\nfunc newTestController() (*DaemonSetsController, *FakePodControl) {\n\tclient := client.NewOrDie(&client.Config{Host: \"\", Version: testapi.Default.GroupAndVersion()})\n\tmanager := NewDaemonSetsController(client)\n\tpodControl := &FakePodControl{}"
  }
]