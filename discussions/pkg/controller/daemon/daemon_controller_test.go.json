[
  {
    "id" : "d326092c-014a-4688-b977-98ff0c27a467",
    "prId" : 93617,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/93617#pullrequestreview-461902251",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "98727e0a-3e6a-46e5-9882-bd7738a7ef92",
        "parentId" : null,
        "authorId" : "443f9b92-20b0-45c2-a13f-20c6f64f89eb",
        "body" : "Wonder if we need the wait, it gets some chance at catching potential error (but we are only oscillating between 0 and 1) but would't the same be seen with `go test -count=100 -parallel=100`? Although the cost isn't high.",
        "createdAt" : "2020-08-05T17:53:58Z",
        "updatedAt" : "2020-08-05T18:03:32Z",
        "lastEditedBy" : "443f9b92-20b0-45c2-a13f-20c6f64f89eb",
        "tags" : [
        ]
      },
      {
        "id" : "65f2b700-6620-4d3b-8bc5-e7aad7f8ce7a",
        "parentId" : "98727e0a-3e6a-46e5-9882-bd7738a7ef92",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "I'm mostly trying to avoid hotlooping the CPU",
        "createdAt" : "2020-08-05T18:04:33Z",
        "updatedAt" : "2020-08-05T18:04:33Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "8e6a8669c09753531fb29355793267b72c5a4e9c",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +476,480 @@\t\t\t\tt.Fatalf(\"expected queue len to remain at %d, got %d\", expected, actual)\n\t\t\t}\n\t\t\ttime.Sleep(10 * time.Millisecond)\n\t\t}\n\t}"
  },
  {
    "id" : "d3679b27-874f-421e-94bd-b93a69ee6dc0",
    "prId" : 93617,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/93617#pullrequestreview-462582000",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2651b6d1-bc38-401c-adcb-f5a26d1c7094",
        "parentId" : null,
        "authorId" : "443f9b92-20b0-45c2-a13f-20c6f64f89eb",
        "body" : "might be better just to\r\n```\r\ndsc.queue.Get()\r\ndsc.queue.Done(key)\r\n```\r\nto avoid possible side effects of sync, although those should be constant on second run",
        "createdAt" : "2020-08-05T17:55:43Z",
        "updatedAt" : "2020-08-05T18:03:32Z",
        "lastEditedBy" : "443f9b92-20b0-45c2-a13f-20c6f64f89eb",
        "tags" : [
        ]
      },
      {
        "id" : "b91d57e7-df9d-4b91-9c38-f9787b426409",
        "parentId" : "2651b6d1-bc38-401c-adcb-f5a26d1c7094",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "> to avoid possible side effects of sync, although those should be constant on second run\r\n\r\nI actually wanted to exercise that and verify a requeue doesn't occur, since a second sync is really what happens",
        "createdAt" : "2020-08-05T18:05:07Z",
        "updatedAt" : "2020-08-05T18:05:24Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "2f8cb6d0-7801-4669-bae8-27923a6d3d2e",
        "parentId" : "2651b6d1-bc38-401c-adcb-f5a26d1c7094",
        "authorId" : "443f9b92-20b0-45c2-a13f-20c6f64f89eb",
        "body" : "I suppose I prefer a separate test case but it's fine",
        "createdAt" : "2020-08-06T14:36:56Z",
        "updatedAt" : "2020-08-06T14:36:57Z",
        "lastEditedBy" : "443f9b92-20b0-45c2-a13f-20c6f64f89eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "8e6a8669c09753531fb29355793267b72c5a4e9c",
    "line" : 83,
    "diffHunk" : "@@ -1,1 +572,576 @@\t// process updates DS, update adds to queue\n\twaitForQueueLength(1, \"updated DS\")\n\tok = dsc.processNextWorkItem()\n\tif !ok {\n\t\tt.Fatal(\"queue is shutting down\")"
  },
  {
    "id" : "da11f60e-d95a-4190-8b1a-aff628246ec8",
    "prId" : 69566,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/69566#pullrequestreview-164547589",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ed258c53-c56a-4630-9e2e-023835bd5eaa",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "A comment why this version is the default would be helpful",
        "createdAt" : "2018-10-15T04:37:42Z",
        "updatedAt" : "2018-10-16T02:31:38Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "73d252d0064277f13df2b43b6cbbd1a0b15974f7",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +176,180 @@\t// and other features do not require kubelet's version.\n\t// Refer to https://github.com/kubernetes/kubernetes/issues/69346 for more detail.\n\taddNodesWithVersion(nodeStore, startIndex, numNodes, label, \"v1.11.0\")\n}\n"
  },
  {
    "id" : "0ffa03aa-cd70-44b7-b5fe-635a8ce8c3fa",
    "prId" : 67899,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/67899#pullrequestreview-151503062",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bbcb4055-e42c-4d3d-ab45-98660591f2ac",
        "parentId" : null,
        "authorId" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "body" : "Some other tests in this file need to pass both when ScheduleDaemonSetPods is enabled and disabled. Would you add that too?",
        "createdAt" : "2018-08-31T19:56:32Z",
        "updatedAt" : "2018-09-12T18:20:00Z",
        "lastEditedBy" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "tags" : [
        ]
      }
    ],
    "commit" : "b2e92f1ba219573b791b0680e9049b509a3fbc58",
    "line" : 83,
    "diffHunk" : "@@ -1,1 +468,472 @@}\n\n// When ScheduleDaemonSetPods is enabled, DaemonSets without node selectors should\n// launch pods on every node by NodeAffinity.\nfunc TestSimpleDaemonSetScheduleDaemonSetPodsLaunchesPods(t *testing.T) {"
  },
  {
    "id" : "d4b8df03-f13d-458b-b1af-081e6168992e",
    "prId" : 67899,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/67899#pullrequestreview-151824784",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a82663b2-da2d-403f-a91a-2c96d786441a",
        "parentId" : null,
        "authorId" : "38ca4f80-c365-4775-8981-1e56b713b07b",
        "body" : "I added a note here.",
        "createdAt" : "2018-09-03T14:52:05Z",
        "updatedAt" : "2018-09-12T18:20:00Z",
        "lastEditedBy" : "38ca4f80-c365-4775-8981-1e56b713b07b",
        "tags" : [
        ]
      }
    ],
    "commit" : "b2e92f1ba219573b791b0680e9049b509a3fbc58",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +54,58 @@)\n\n// IMPORTANT NOTE: Some tests in file need to pass irrespective of ScheduleDaemonSetPods feature is enabled. For rest\n// of the tests, an explicit comment is mentioned whether we are testing codepath specific to ScheduleDaemonSetPods or\n// without that feature."
  },
  {
    "id" : "47543a8e-2a6b-4eec-b0df-b80e04b6f414",
    "prId" : 67899,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/67899#pullrequestreview-152591969",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "45ef91c0-50db-4645-91fe-7f7d529685e5",
        "parentId" : null,
        "authorId" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "body" : "Please use something like this to make sure all tests still pass when the `ScheduleDaemonSetPods` feature is enabled and disabled (except for the tests that only pass when the feature is enabled or disabled):\r\nhttps://github.com/kubernetes/kubernetes/blob/be11540775e36b1f1acdd6cb43500c1717af0ad4/test/integration/daemonset/daemonset_test.go#L482-L496",
        "createdAt" : "2018-09-05T01:20:28Z",
        "updatedAt" : "2018-09-12T18:20:00Z",
        "lastEditedBy" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "tags" : [
        ]
      },
      {
        "id" : "e85ed1fb-2747-474b-99cb-3b33dc76d218",
        "parentId" : "45ef91c0-50db-4645-91fe-7f7d529685e5",
        "authorId" : "38ca4f80-c365-4775-8981-1e56b713b07b",
        "body" : "So, the tests would have failed similar to the ones that failed here https://github.com/kubernetes/kubernetes/pull/67790 , if ScheduleDSPods was enabled(I mean they are running even now, after we enable the feature). But I understand your concern, I will add something similar to what we have in integration tests.",
        "createdAt" : "2018-09-05T16:52:27Z",
        "updatedAt" : "2018-09-12T18:20:00Z",
        "lastEditedBy" : "38ca4f80-c365-4775-8981-1e56b713b07b",
        "tags" : [
        ]
      }
    ],
    "commit" : "b2e92f1ba219573b791b0680e9049b509a3fbc58",
    "line" : 85,
    "diffHunk" : "@@ -1,1 +470,474 @@// When ScheduleDaemonSetPods is enabled, DaemonSets without node selectors should\n// launch pods on every node by NodeAffinity.\nfunc TestSimpleDaemonSetScheduleDaemonSetPodsLaunchesPods(t *testing.T) {\n\tenabled := utilfeature.DefaultFeatureGate.Enabled(features.ScheduleDaemonSetPods)\n\t// Rollback feature gate."
  },
  {
    "id" : "d98592f7-9227-4b29-9a08-c49f216602dd",
    "prId" : 67899,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/67899#pullrequestreview-154762290",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ae11bb07-0e5d-44da-b5a8-f47e79afb8dc",
        "parentId" : null,
        "authorId" : "443f9b92-20b0-45c2-a13f-20c6f64f89eb",
        "body" : "With the new DS scheduling I don't see a value in this branch. Scheduler is the one to decide resources and we create the pod no matter the capacity.",
        "createdAt" : "2018-09-12T11:06:39Z",
        "updatedAt" : "2018-09-12T18:20:00Z",
        "lastEditedBy" : "443f9b92-20b0-45c2-a13f-20c6f64f89eb",
        "tags" : [
        ]
      },
      {
        "id" : "0a983aec-f8c6-4957-a8c1-3fc47b505719",
        "parentId" : "ae11bb07-0e5d-44da-b5a8-f47e79afb8dc",
        "authorId" : "38ca4f80-c365-4775-8981-1e56b713b07b",
        "body" : "Depending on DS Scheduling enabled or not, the number of events would vary, create in this case is varying because previously, we stopped even creating pod after delete when there were no sufficient resources. Now, as you suggested we are creating pod irrespective of resource crunch, that is why we need this branch. Without this, we have to refactor the `syncAndValidateDaemonSets` fn",
        "createdAt" : "2018-09-12T17:32:51Z",
        "updatedAt" : "2018-09-12T18:20:00Z",
        "lastEditedBy" : "38ca4f80-c365-4775-8981-1e56b713b07b",
        "tags" : [
        ]
      }
    ],
    "commit" : "b2e92f1ba219573b791b0680e9049b509a3fbc58",
    "line" : 407,
    "diffHunk" : "@@ -1,1 +775,779 @@\t\t\t\t\tsyncAndValidateDaemonSets(t, manager, ds, podControl, 0, 0, 2)\n\t\t\t\t} else {\n\t\t\t\t\tsyncAndValidateDaemonSets(t, manager, ds, podControl, 1, 0, 0)\n\t\t\t\t}\n\t\t\tcase apps.RollingUpdateDaemonSetStrategyType:"
  },
  {
    "id" : "76c3bf8f-5da4-4361-a97b-02c20ab5ea77",
    "prId" : 67899,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/67899#pullrequestreview-154759295",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c1a47ad7-e3a2-482e-a7f7-7bb292683a6a",
        "parentId" : null,
        "authorId" : "443f9b92-20b0-45c2-a13f-20c6f64f89eb",
        "body" : "should be using `setFeatureGate`",
        "createdAt" : "2018-09-12T11:08:49Z",
        "updatedAt" : "2018-09-12T18:20:00Z",
        "lastEditedBy" : "443f9b92-20b0-45c2-a13f-20c6f64f89eb",
        "tags" : [
        ]
      },
      {
        "id" : "8991d8c4-fb4f-4c10-94f1-36cb63338d16",
        "parentId" : "c1a47ad7-e3a2-482e-a7f7-7bb292683a6a",
        "authorId" : "38ca4f80-c365-4775-8981-1e56b713b07b",
        "body" : "Yeah, probably a nit, I can handle that in a separate PR, given that we have past code freeze",
        "createdAt" : "2018-09-12T17:25:43Z",
        "updatedAt" : "2018-09-12T18:20:00Z",
        "lastEditedBy" : "38ca4f80-c365-4775-8981-1e56b713b07b",
        "tags" : [
        ]
      }
    ],
    "commit" : "b2e92f1ba219573b791b0680e9049b509a3fbc58",
    "line" : 362,
    "diffHunk" : "@@ -1,1 +711,715 @@\tdefer func() {\n\t\tif enabled {\n\t\t\terr := utilfeature.DefaultFeatureGate.Set(\"ScheduleDaemonSetPods=true\")\n\t\t\tif err != nil {\n\t\t\t\tt.Fatalf(\"Failed to enable feature gate for ScheduleDaemonSetPods: %v\", err)"
  },
  {
    "id" : "44a5e4d1-e9cc-47d0-926e-e2673ac0379f",
    "prId" : 67899,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/67899#pullrequestreview-154762972",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bf6705cf-d49d-45b4-bc11-1d4760c04b43",
        "parentId" : null,
        "authorId" : "443f9b92-20b0-45c2-a13f-20c6f64f89eb",
        "body" : "this whole lambda could be extracted to a helper leading to \r\n```golang\r\ndefer rollbackFetureGate(enabled)\r\n```",
        "createdAt" : "2018-09-12T11:10:40Z",
        "updatedAt" : "2018-09-12T18:20:00Z",
        "lastEditedBy" : "443f9b92-20b0-45c2-a13f-20c6f64f89eb",
        "tags" : [
        ]
      },
      {
        "id" : "47d5b489-148c-490d-b479-051a6c262cb0",
        "parentId" : "bf6705cf-d49d-45b4-bc11-1d4760c04b43",
        "authorId" : "38ca4f80-c365-4775-8981-1e56b713b07b",
        "body" : "Sure, as I told earlier, there are few places, where we can refactor, I don't want to do everything in this PR as the PR has grown from 139 lines to 1300 lines.",
        "createdAt" : "2018-09-12T17:34:30Z",
        "updatedAt" : "2018-09-12T18:20:00Z",
        "lastEditedBy" : "38ca4f80-c365-4775-8981-1e56b713b07b",
        "tags" : [
        ]
      }
    ],
    "commit" : "b2e92f1ba219573b791b0680e9049b509a3fbc58",
    "line" : 493,
    "diffHunk" : "@@ -1,1 +823,827 @@\t// Rollback feature gate.\n\tdefer func() {\n\t\tif enabled {\n\t\t\tsetFeatureGate(t, features.ScheduleDaemonSetPods, true)\n\t\t}"
  },
  {
    "id" : "2c6bde06-12f3-4100-be80-e98c9a69cc20",
    "prId" : 67899,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/67899#pullrequestreview-154768434",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2a6eddcc-5c33-4959-907f-8f6b5caf4bf8",
        "parentId" : null,
        "authorId" : "443f9b92-20b0-45c2-a13f-20c6f64f89eb",
        "body" : "I don't see this tested for both cases of the feature gate enabled/disabled",
        "createdAt" : "2018-09-12T15:28:48Z",
        "updatedAt" : "2018-09-12T18:20:00Z",
        "lastEditedBy" : "443f9b92-20b0-45c2-a13f-20c6f64f89eb",
        "tags" : [
        ]
      },
      {
        "id" : "ee391fca-0032-4947-a9c8-340da515c414",
        "parentId" : "2a6eddcc-5c33-4959-907f-8f6b5caf4bf8",
        "authorId" : "38ca4f80-c365-4775-8981-1e56b713b07b",
        "body" : "Yup. I missed it. Thanks for catching.",
        "createdAt" : "2018-09-12T17:48:18Z",
        "updatedAt" : "2018-09-12T18:20:00Z",
        "lastEditedBy" : "38ca4f80-c365-4775-8981-1e56b713b07b",
        "tags" : [
        ]
      }
    ],
    "commit" : "b2e92f1ba219573b791b0680e9049b509a3fbc58",
    "line" : 1950,
    "diffHunk" : "@@ -1,1 +1908,1912 @@}\n\nfunc TestNodeShouldRunDaemonPod(t *testing.T) {\n\tfor _, f := range []bool{true, false} {\n\t\tsetFeatureGate(t, features.ScheduleDaemonSetPods, f)"
  },
  {
    "id" : "33132e1f-949a-45d5-9e93-f908ecbb41b1",
    "prId" : 67899,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/67899#pullrequestreview-154794805",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "81ae0ddb-baab-4b6c-8018-88b098632446",
        "parentId" : null,
        "authorId" : "443f9b92-20b0-45c2-a13f-20c6f64f89eb",
        "body" : "if we are setting a global value we should set it back to what it was before running this subtest (applies globally)",
        "createdAt" : "2018-09-12T16:39:32Z",
        "updatedAt" : "2018-09-12T18:20:00Z",
        "lastEditedBy" : "443f9b92-20b0-45c2-a13f-20c6f64f89eb",
        "tags" : [
        ]
      },
      {
        "id" : "ae6de936-d930-496f-8aa0-540c307406f1",
        "parentId" : "81ae0ddb-baab-4b6c-8018-88b098632446",
        "authorId" : "38ca4f80-c365-4775-8981-1e56b713b07b",
        "body" : "So, if we are running the tests when the global value is enabled and disabled, I think it doesn't matter.",
        "createdAt" : "2018-09-12T17:45:47Z",
        "updatedAt" : "2018-09-12T18:20:00Z",
        "lastEditedBy" : "38ca4f80-c365-4775-8981-1e56b713b07b",
        "tags" : [
        ]
      },
      {
        "id" : "e978a0cb-1549-4cae-bad1-da4e405b3256",
        "parentId" : "81ae0ddb-baab-4b6c-8018-88b098632446",
        "authorId" : "443f9b92-20b0-45c2-a13f-20c6f64f89eb",
        "body" : "I though some of the tests depend on the value being set initially, if one of the test changes that it has side effects. Why would you do the rollback in those other tests?",
        "createdAt" : "2018-09-12T17:56:22Z",
        "updatedAt" : "2018-09-12T18:20:00Z",
        "lastEditedBy" : "443f9b92-20b0-45c2-a13f-20c6f64f89eb",
        "tags" : [
        ]
      },
      {
        "id" : "e53612f7-ca09-4bb7-9e01-3b84ac9fe7c8",
        "parentId" : "81ae0ddb-baab-4b6c-8018-88b098632446",
        "authorId" : "38ca4f80-c365-4775-8981-1e56b713b07b",
        "body" : "You are right but say if one test has modified the flag it responsible for unsetting it. For example, `TestSimpleDaemonSetScheduleDaemonSetPodsLaunchesPods`, sets and unsets it. For rest of the tests, we are testing when the flag is enabled as well as disabled.",
        "createdAt" : "2018-09-12T18:11:27Z",
        "updatedAt" : "2018-09-12T18:20:00Z",
        "lastEditedBy" : "38ca4f80-c365-4775-8981-1e56b713b07b",
        "tags" : [
        ]
      },
      {
        "id" : "09b3cd7f-841e-4eab-9f27-8b70948e322d",
        "parentId" : "81ae0ddb-baab-4b6c-8018-88b098632446",
        "authorId" : "443f9b92-20b0-45c2-a13f-20c6f64f89eb",
        "body" : "if a test setting enable and disable runs before a test that ask what the default value of that feature is, you have lost it",
        "createdAt" : "2018-09-12T18:24:14Z",
        "updatedAt" : "2018-09-12T18:24:15Z",
        "lastEditedBy" : "443f9b92-20b0-45c2-a13f-20c6f64f89eb",
        "tags" : [
        ]
      },
      {
        "id" : "c1fe54cb-6fb2-4ee4-ba36-8cf92e599f50",
        "parentId" : "81ae0ddb-baab-4b6c-8018-88b098632446",
        "authorId" : "38ca4f80-c365-4775-8981-1e56b713b07b",
        "body" : "I think, in all the tests, we check the value(I believe you are calling this as default value). We set it or unset it explicitly. I don't mind adding rollback logic for every function.",
        "createdAt" : "2018-09-12T18:51:40Z",
        "updatedAt" : "2018-09-12T18:51:40Z",
        "lastEditedBy" : "38ca4f80-c365-4775-8981-1e56b713b07b",
        "tags" : [
        ]
      },
      {
        "id" : "f7d1b253-8673-4f1e-b123-91a098df061c",
        "parentId" : "81ae0ddb-baab-4b6c-8018-88b098632446",
        "authorId" : "443f9b92-20b0-45c2-a13f-20c6f64f89eb",
        "body" : "I guess we should either do the rollback in all the places or in none. Given it doesn't have a side effect in the unit tests I won't block the PR.\r\n/hold cancel\r\n/lgtm",
        "createdAt" : "2018-09-12T18:54:12Z",
        "updatedAt" : "2018-09-12T18:55:10Z",
        "lastEditedBy" : "443f9b92-20b0-45c2-a13f-20c6f64f89eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "b2e92f1ba219573b791b0680e9049b509a3fbc58",
    "line" : 2922,
    "diffHunk" : "@@ -1,1 +2612,2616 @@func TestAddNode(t *testing.T) {\n\tfor _, f := range []bool{true, false} {\n\t\tsetFeatureGate(t, features.ScheduleDaemonSetPods, f)\n\t\tmanager, _, _, err := newTestController()\n\t\tif err != nil {"
  },
  {
    "id" : "e5b06cc9-0d74-4c6f-a5c1-b3283a6638d5",
    "prId" : 65309,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/65309#pullrequestreview-131626251",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5e9d0142-e853-4b58-9a53-0d23fdf36b01",
        "parentId" : null,
        "authorId" : "443f9b92-20b0-45c2-a13f-20c6f64f89eb",
        "body" : "Just switching to a subtest, the diff got messed up",
        "createdAt" : "2018-06-25T14:12:25Z",
        "updatedAt" : "2018-08-15T14:04:01Z",
        "lastEditedBy" : "443f9b92-20b0-45c2-a13f-20c6f64f89eb",
        "tags" : [
        ]
      }
    ],
    "commit" : "b0b1629e8d6a95399ab945537ac95fd5d5ee4e35",
    "line" : 55,
    "diffHunk" : "@@ -1,1 +1320,1324 @@\n\tfor _, test := range tests {\n\t\tt.Run(test.test, func(t *testing.T) {\n\t\t\tfor _, strategy := range updateStrategies() {\n\t\t\t\tds := newDaemonSet(\"foo\")"
  },
  {
    "id" : "dd705099-13b6-4f28-9612-04c0dfeb92ee",
    "prId" : 59862,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/59862#pullrequestreview-102115546",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "33b28e6e-1dbb-4829-b0a7-3acffd130c77",
        "parentId" : null,
        "authorId" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "body" : "~nit: `CreatePodsWithControllRef` should clear the pod's `nodeName` field.~\r\n\r\nEdit: Somehow I thought nodeName is getting cleared, but it's actually the template.metadata.name that's getting cleared ",
        "createdAt" : "2018-03-08T01:20:17Z",
        "updatedAt" : "2018-03-08T09:37:12Z",
        "lastEditedBy" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "tags" : [
        ]
      }
    ],
    "commit" : "5adb2bad4534b25c567220a21a242d2745e6cbf0",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +289,293 @@\t\treturn fmt.Errorf(\"unable to convert pod template: %v\", err)\n\t}\n\n\tf.podStore.Update(pod)\n\tf.podIDMap[pod.Name] = pod"
  },
  {
    "id" : "c023c06f-d47b-4e2d-ab3b-6c228f2108b3",
    "prId" : 51279,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/51279#pullrequestreview-58728848",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "75f809c4-a8a2-4fd8-91f2-96186609b0e5",
        "parentId" : null,
        "authorId" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "body" : "comment needs to be updated ",
        "createdAt" : "2017-08-25T18:24:06Z",
        "updatedAt" : "2017-08-31T17:29:25Z",
        "lastEditedBy" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "tags" : [
        ]
      }
    ],
    "commit" : "8ad18bf2ecd76c9a50f990bf6ae6b4b179f22d3d",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +1221,1225 @@}\n\n// DaemonSet should launch a pod on a not ready node with taint notReady:NoExecute.\nfunc TestDaemonSetRespectsTermination(t *testing.T) {\n\tfor _, strategy := range updateStrategies() {"
  },
  {
    "id" : "45085048-72a2-4224-bcf9-e66494a3393e",
    "prId" : 50595,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/50595#pullrequestreview-56520392",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bc5754ff-10d6-489c-a58a-32c987fa6563",
        "parentId" : null,
        "authorId" : "93df2e83-0c3f-4aca-8f83-bac5bb8543ff",
        "body" : "This is func TestNodeShouldRunDaemonPod(t *testing.T) {(t *testing.T) \r\nShould its name be changed?\r\nThe test case is TestNodeShouldNotRunDaemonPod(t *testing.T) \r\n",
        "createdAt" : "2017-08-14T08:07:24Z",
        "updatedAt" : "2017-08-25T11:13:50Z",
        "lastEditedBy" : "93df2e83-0c3f-4aca-8f83-bac5bb8543ff",
        "tags" : [
        ]
      },
      {
        "id" : "53279a36-e7c9-436a-b63b-5c46455dfc2c",
        "parentId" : "bc5754ff-10d6-489c-a58a-32c987fa6563",
        "authorId" : "72156db3-c40b-4455-9838-c12c0c606019",
        "body" : "nop; we're testing `nodeShouldRunDaemonPod` in this test :)",
        "createdAt" : "2017-08-16T03:02:38Z",
        "updatedAt" : "2017-08-25T11:13:50Z",
        "lastEditedBy" : "72156db3-c40b-4455-9838-c12c0c606019",
        "tags" : [
        ]
      }
    ],
    "commit" : "e4c58a3c029476fb874976c163f5d768a7b67001",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +1436,1440 @@\t\t},\n\t\t{\n\t\t\tds: &extensions.DaemonSet{\n\t\t\t\tSpec: extensions.DaemonSetSpec{\n\t\t\t\t\tSelector: &metav1.LabelSelector{MatchLabels: simpleDaemonSetLabel},"
  }
]