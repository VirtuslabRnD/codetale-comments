[
  {
    "id" : "a307b030-84e9-46ba-bb3e-68d4c0def034",
    "prId" : 55706,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/55706#pullrequestreview-77808228",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0e26d129-d3e1-400e-8768-85c8c33b5056",
        "parentId" : null,
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "shouldn't something be logged here?",
        "createdAt" : "2017-11-14T16:06:48Z",
        "updatedAt" : "2018-01-12T03:50:32Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      },
      {
        "id" : "4394e071-b4a6-4875-9bc7-abdea98b4cfa",
        "parentId" : "0e26d129-d3e1-400e-8768-85c8c33b5056",
        "authorId" : "f71497cc-dd85-47eb-bbed-996bde0d13a4",
        "body" : "@luxas Actually only if  `stopCh` is closed it will return, that is all controller is closed. I follow other controller forms and do not log here.If actually need, I can add this.",
        "createdAt" : "2017-11-15T02:25:13Z",
        "updatedAt" : "2018-01-12T03:50:32Z",
        "lastEditedBy" : "f71497cc-dd85-47eb-bbed-996bde0d13a4",
        "tags" : [
        ]
      },
      {
        "id" : "112b54ed-42e1-4271-b30c-7f7c735d4f76",
        "parentId" : "0e26d129-d3e1-400e-8768-85c8c33b5056",
        "authorId" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "body" : "Logging is done by `controller.WaitForCacheSync`.",
        "createdAt" : "2017-11-20T14:55:58Z",
        "updatedAt" : "2018-01-12T03:50:32Z",
        "lastEditedBy" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "tags" : [
        ]
      }
    ],
    "commit" : "0ae647bf333f5123bb470c3866084b699ecaafb0",
    "line" : 171,
    "diffHunk" : "@@ -1,1 +160,164 @@\n\tif !controller.WaitForCacheSync(\"bootstrap_signer\", stopCh, e.configMapSynced, e.secretSynced) {\n\t\treturn\n\t}\n"
  },
  {
    "id" : "d99e606e-7069-4393-84bb-3d53f300fdd9",
    "prId" : 55706,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/55706#pullrequestreview-88066101",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bbcbd4a4-a946-4b81-879e-a004dd6baa70",
        "parentId" : null,
        "authorId" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "body" : "Do you need to add checks to make sure the required fields in `options` have values?",
        "createdAt" : "2018-01-10T15:14:16Z",
        "updatedAt" : "2018-01-12T03:50:32Z",
        "lastEditedBy" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "tags" : [
        ]
      },
      {
        "id" : "95f758f5-12a6-4d64-8d2a-d4c68e89fac1",
        "parentId" : "bbcbd4a4-a946-4b81-879e-a004dd6baa70",
        "authorId" : "f71497cc-dd85-47eb-bbed-996bde0d13a4",
        "body" : "I think it is not necessary, It is just called by `startBootstrapSignerController` and the parameter is the default parameter `bootstrap.DefaultBootstrapSignerOptions()`, we just keep as the original",
        "createdAt" : "2018-01-11T06:21:31Z",
        "updatedAt" : "2018-01-12T03:50:32Z",
        "lastEditedBy" : "f71497cc-dd85-47eb-bbed-996bde0d13a4",
        "tags" : [
        ]
      }
    ],
    "commit" : "0ae647bf333f5123bb470c3866084b699ecaafb0",
    "line" : 68,
    "diffHunk" : "@@ -1,1 +92,96 @@\n// NewBootstrapSigner returns a new *BootstrapSigner.\nfunc NewBootstrapSigner(cl clientset.Interface, secrets informers.SecretInformer, configMaps informers.ConfigMapInformer, options BootstrapSignerOptions) (*BootstrapSigner, error) {\n\te := &BootstrapSigner{\n\t\tclient:             cl,"
  },
  {
    "id" : "d168a93d-175c-4df5-92cd-fa6b78f685eb",
    "prId" : 55706,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/55706#pullrequestreview-88066141",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dd9f0f39-6162-44b0-98e7-d29368bb0e6e",
        "parentId" : null,
        "authorId" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "body" : "I think the previous code would return error=nil and exists=false if the ConfigMap didn't exist. In that case, it wouldn't call `utilruntime.HandleError` because err is nil.\r\n\r\nThe new code will return a NotFound error if it doesn't exist. Do you want to check for that and return nil without calling HandleError in that case?",
        "createdAt" : "2018-01-10T15:20:47Z",
        "updatedAt" : "2018-01-12T03:50:32Z",
        "lastEditedBy" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "tags" : [
        ]
      },
      {
        "id" : "69612047-fb53-4aa3-90ea-439a78e97441",
        "parentId" : "dd9f0f39-6162-44b0-98e7-d29368bb0e6e",
        "authorId" : "f71497cc-dd85-47eb-bbed-996bde0d13a4",
        "body" : "Greatï¼Œ updated",
        "createdAt" : "2018-01-11T06:21:52Z",
        "updatedAt" : "2018-01-12T03:50:32Z",
        "lastEditedBy" : "f71497cc-dd85-47eb-bbed-996bde0d13a4",
        "tags" : [
        ]
      }
    ],
    "commit" : "0ae647bf333f5123bb470c3866084b699ecaafb0",
    "line" : 188,
    "diffHunk" : "@@ -1,1 +253,257 @@\tconfigMap, err := e.configMapLister.ConfigMaps(e.configMapNamespace).Get(e.configMapName)\n\n\t// If we can't get the configmap just return nil. The resync will eventually\n\t// sync things up.\n\tif err != nil {"
  },
  {
    "id" : "dfd85264-e4f8-480d-b7bb-f3cba9d2bcb4",
    "prId" : 55706,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/55706#pullrequestreview-88204763",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "80f01962-6ec0-4c42-bb92-4f5d2c3afa90",
        "parentId" : null,
        "authorId" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "body" : "Is this ok? It means that `getTokens` gets no secrets, which means that `signConfigMap` gets no tokens. Is that alright, or does the error need to be propagated up?",
        "createdAt" : "2018-01-10T15:27:04Z",
        "updatedAt" : "2018-01-12T03:50:32Z",
        "lastEditedBy" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "tags" : [
        ]
      },
      {
        "id" : "e07f82d5-1f33-4a84-b378-8d6ad882312b",
        "parentId" : "80f01962-6ec0-4c42-bb92-4f5d2c3afa90",
        "authorId" : "f71497cc-dd85-47eb-bbed-996bde0d13a4",
        "body" : "Yes, we need just as `getConfigMap` when there has an error, It is also keep as the original logic ",
        "createdAt" : "2018-01-11T06:36:44Z",
        "updatedAt" : "2018-01-12T03:50:32Z",
        "lastEditedBy" : "f71497cc-dd85-47eb-bbed-996bde0d13a4",
        "tags" : [
        ]
      },
      {
        "id" : "4c3e5b19-f88f-4b3d-8f65-bd3128add06d",
        "parentId" : "80f01962-6ec0-4c42-bb92-4f5d2c3afa90",
        "authorId" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "body" : "There is a difference, though, between the old code and this PR. Before, it was impossible for `e.secrets.List()` to return an error. Now, when using `secretLister`, you may get an error. Just wanted to point that out.",
        "createdAt" : "2018-01-11T15:48:55Z",
        "updatedAt" : "2018-01-12T03:50:32Z",
        "lastEditedBy" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "tags" : [
        ]
      }
    ],
    "commit" : "0ae647bf333f5123bb470c3866084b699ecaafb0",
    "line" : 210,
    "diffHunk" : "@@ -1,1 +269,273 @@\tif err != nil {\n\t\tutilruntime.HandleError(err)\n\t\treturn nil\n\t}\n"
  },
  {
    "id" : "e5293385-3e22-43bf-bf65-135b2fa98657",
    "prId" : 36101,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/36101#pullrequestreview-12590648",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4fe31558-2900-4a28-88bb-c04eabaf0a04",
        "parentId" : null,
        "authorId" : "4815d47d-9abd-4b5d-8074-030539047224",
        "body" : "Why do we monitor the config map itself? I would have expected monitoring secrets and then eventually API servers, and assumed that when a change was detected the config map is considered \"ours\" to be completely re-synced.\n",
        "createdAt" : "2016-11-03T12:21:38Z",
        "updatedAt" : "2017-02-10T20:49:51Z",
        "lastEditedBy" : "4815d47d-9abd-4b5d-8074-030539047224",
        "tags" : [
        ]
      },
      {
        "id" : "0fe31bcd-5907-41a7-a98e-bacc71e17154",
        "parentId" : "4fe31558-2900-4a28-88bb-c04eabaf0a04",
        "authorId" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "body" : "There is no way to monitor \"API servers\".  At some point we may have a way to update this directly but we aren' there yet.  To start with this config map will be written as part of set up and rarely changed.  As we move to HA we can update it as the HA set changes and this controller will automatically react and sign.",
        "createdAt" : "2016-12-13T01:44:48Z",
        "updatedAt" : "2017-02-10T20:49:51Z",
        "lastEditedBy" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "tags" : [
        ]
      }
    ],
    "commit" : "415e20877ef8585996965af8149c7239da1b1b4a",
    "line" : 113,
    "diffHunk" : "@@ -1,1 +111,115 @@\tconfigMapSelector := fields.SelectorFromSet(map[string]string{api.ObjectNameField: options.ConfigMapName})\n\te.configMaps, e.configMapsController = cache.NewInformer(\n\t\t&cache.ListWatch{\n\t\t\tListFunc: func(lo metav1.ListOptions) (runtime.Object, error) {\n\t\t\t\tlo.FieldSelector = configMapSelector.String()"
  },
  {
    "id" : "6c98aa1d-768a-4712-b85c-a655cc48aa03",
    "prId" : 36101,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/36101#pullrequestreview-12590648",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "963a2b11-c902-4318-8c3c-fa5ae94676eb",
        "parentId" : null,
        "authorId" : "4815d47d-9abd-4b5d-8074-030539047224",
        "body" : "I'm creating these as prefix-tokenID so hopefully it won't be possible for a duplicate ID to appear here.\n",
        "createdAt" : "2016-11-03T12:24:29Z",
        "updatedAt" : "2017-02-10T20:49:51Z",
        "lastEditedBy" : "4815d47d-9abd-4b5d-8074-030539047224",
        "tags" : [
        ]
      },
      {
        "id" : "2a93f7a6-ca14-4f64-b4f0-d2471e8f0efe",
        "parentId" : "963a2b11-c902-4318-8c3c-fa5ae94676eb",
        "authorId" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "body" : "The name doesn't matter here as we are keying off of the secret type.",
        "createdAt" : "2016-12-13T21:20:49Z",
        "updatedAt" : "2017-02-10T20:49:51Z",
        "lastEditedBy" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "tags" : [
        ]
      }
    ],
    "commit" : "415e20877ef8585996965af8149c7239da1b1b4a",
    "line" : 288,
    "diffHunk" : "@@ -1,1 +286,290 @@\t\t\tglog.V(3).Infof(\"Duplicate bootstrap tokens found for id %s, ignoring on in %s/%s\", tokenID, secret.Namespace, secret.Name)\n\t\t\tcontinue\n\t\t}\n\n\t\t// This secret looks good, add it to the list."
  },
  {
    "id" : "396a02ad-42f3-4471-9280-dd722e035106",
    "prId" : 36101,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/36101#pullrequestreview-13866948",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "440f7fa5-f3e2-43d0-9bef-559487b614d0",
        "parentId" : null,
        "authorId" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "body" : "We'll want to switch to using the generated shared informers as part of the overall cut over to use them",
        "createdAt" : "2016-12-20T14:13:48Z",
        "updatedAt" : "2017-02-10T20:49:51Z",
        "lastEditedBy" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "tags" : [
        ]
      },
      {
        "id" : "ecac28a0-7c38-4aed-b9b7-6ac6180b1ae5",
        "parentId" : "440f7fa5-f3e2-43d0-9bef-559487b614d0",
        "authorId" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "body" : "*sigh* The longer this PR is outstanding the more updates are required. I'll try to get this done today.",
        "createdAt" : "2016-12-20T15:44:28Z",
        "updatedAt" : "2017-02-10T20:49:51Z",
        "lastEditedBy" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "tags" : [
        ]
      },
      {
        "id" : "6dadf976-3e9a-476c-bcda-df156400a1d9",
        "parentId" : "440f7fa5-f3e2-43d0-9bef-559487b614d0",
        "authorId" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "body" : "We actually haven't switched to using the new informers everywhere yet. I'd say this could be done in a follow-up. Just add a TODO for now?",
        "createdAt" : "2016-12-20T15:52:12Z",
        "updatedAt" : "2017-02-10T20:49:51Z",
        "lastEditedBy" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "tags" : [
        ]
      },
      {
        "id" : "92aae282-af16-4a4c-b5e6-96850cb8696d",
        "parentId" : "440f7fa5-f3e2-43d0-9bef-559487b614d0",
        "authorId" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "body" : "Will do -- thanks.",
        "createdAt" : "2016-12-20T22:41:45Z",
        "updatedAt" : "2017-02-10T20:49:51Z",
        "lastEditedBy" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "tags" : [
        ]
      }
    ],
    "commit" : "415e20877ef8585996965af8149c7239da1b1b4a",
    "line" : 112,
    "diffHunk" : "@@ -1,1 +110,114 @@\t}\n\tconfigMapSelector := fields.SelectorFromSet(map[string]string{api.ObjectNameField: options.ConfigMapName})\n\te.configMaps, e.configMapsController = cache.NewInformer(\n\t\t&cache.ListWatch{\n\t\t\tListFunc: func(lo metav1.ListOptions) (runtime.Object, error) {"
  },
  {
    "id" : "390a033a-3d35-4a59-8558-c30259eece0c",
    "prId" : 36101,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/36101#pullrequestreview-20434783",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1fb5ed59-65b7-448c-9833-95c765e6d422",
        "parentId" : null,
        "authorId" : "d37d9758-bdf5-4c23-a40e-a85099689a0c",
        "body" : "I don't really know, but should we use `SecretList` instead, or is that more for external use, like over the wire?",
        "createdAt" : "2017-02-06T15:36:47Z",
        "updatedAt" : "2017-02-10T20:49:51Z",
        "lastEditedBy" : "d37d9758-bdf5-4c23-a40e-a85099689a0c",
        "tags" : [
        ]
      },
      {
        "id" : "a54fafcb-f96c-4ca7-89f0-5b0b85b4f916",
        "parentId" : "1fb5ed59-65b7-448c-9833-95c765e6d422",
        "authorId" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "body" : "It isn't exiting this module so there is no need to deal with the complexity of a wrapper around an array of secrets.  SecretList is really intended for over the wire.",
        "createdAt" : "2017-02-07T05:56:36Z",
        "updatedAt" : "2017-02-10T20:49:51Z",
        "lastEditedBy" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "tags" : [
        ]
      }
    ],
    "commit" : "415e20877ef8585996965af8149c7239da1b1b4a",
    "line" : 263,
    "diffHunk" : "@@ -1,1 +261,265 @@}\n\nfunc (e *BootstrapSigner) listSecrets() []*v1.Secret {\n\tsecrets := e.secrets.List()\n"
  },
  {
    "id" : "2466a484-6d27-4300-8487-5c8271a69da0",
    "prId" : 36101,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/36101#pullrequestreview-20536764",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cf020c0c-b025-4a72-a545-4d9f0347c98c",
        "parentId" : null,
        "authorId" : "d37d9758-bdf5-4c23-a40e-a85099689a0c",
        "body" : "What happens to invalid tokens and where do they really come from?",
        "createdAt" : "2017-02-06T15:38:02Z",
        "updatedAt" : "2017-02-10T20:49:51Z",
        "lastEditedBy" : "d37d9758-bdf5-4c23-a40e-a85099689a0c",
        "tags" : [
        ]
      },
      {
        "id" : "ece886a5-df2d-409f-bc98-2c8512b87b34",
        "parentId" : "cf020c0c-b025-4a72-a545-4d9f0347c98c",
        "authorId" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "body" : "It could be that it has expired but the token cleaner hasn't gotten it yet.  Or it could be corrupt (someone messed with it behind our back). Or it may not be marked as usable for signing.  The reasons are in validateSecretForSigning.  If we find an invalid token we just ignore it.  For the expired case the token cleaner will get it.",
        "createdAt" : "2017-02-07T05:59:15Z",
        "updatedAt" : "2017-02-10T20:49:51Z",
        "lastEditedBy" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "tags" : [
        ]
      },
      {
        "id" : "fb3d0242-018f-4316-8a64-0f01fb71749d",
        "parentId" : "cf020c0c-b025-4a72-a545-4d9f0347c98c",
        "authorId" : "d37d9758-bdf5-4c23-a40e-a85099689a0c",
        "body" : "May be add this as a comment?",
        "createdAt" : "2017-02-07T15:35:59Z",
        "updatedAt" : "2017-02-10T20:49:51Z",
        "lastEditedBy" : "d37d9758-bdf5-4c23-a40e-a85099689a0c",
        "tags" : [
        ]
      }
    ],
    "commit" : "415e20877ef8585996965af8149c7239da1b1b4a",
    "line" : 273,
    "diffHunk" : "@@ -1,1 +271,275 @@}\n\n// getTokens returns a map of tokenID->tokenSecret. It ensures the token is\n// valid for signing.\nfunc (e *BootstrapSigner) getTokens() map[string]string {"
  },
  {
    "id" : "e45c3b09-93cf-410f-9117-92407f770a8e",
    "prId" : 36101,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/36101#pullrequestreview-20435089",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "876ac1e4-ca23-41dd-b429-6dc19cf0b174",
        "parentId" : null,
        "authorId" : "d37d9758-bdf5-4c23-a40e-a85099689a0c",
        "body" : "Should this be a warning instead?",
        "createdAt" : "2017-02-06T15:39:45Z",
        "updatedAt" : "2017-02-10T20:49:51Z",
        "lastEditedBy" : "d37d9758-bdf5-4c23-a40e-a85099689a0c",
        "tags" : [
        ]
      },
      {
        "id" : "1262cfe3-5a72-40d4-b6ee-fbddc2a4f6d8",
        "parentId" : "876ac1e4-ca23-41dd-b429-6dc19cf0b174",
        "authorId" : "d37d9758-bdf5-4c23-a40e-a85099689a0c",
        "body" : "I guess this is really just an edge case that we have to handle due to underlying storage schema and it rather should not occur, right?",
        "createdAt" : "2017-02-06T15:40:39Z",
        "updatedAt" : "2017-02-10T20:49:51Z",
        "lastEditedBy" : "d37d9758-bdf5-4c23-a40e-a85099689a0c",
        "tags" : [
        ]
      },
      {
        "id" : "9f0d5285-f50c-481e-a7ff-0e8e8dde0796",
        "parentId" : "876ac1e4-ca23-41dd-b429-6dc19cf0b174",
        "authorId" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "body" : "Yeah -- this really shouldn't occur.  If someone writes in two secrets for tokens with the same ID they'll get defined behavior. ",
        "createdAt" : "2017-02-07T06:00:26Z",
        "updatedAt" : "2017-02-10T20:49:51Z",
        "lastEditedBy" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "tags" : [
        ]
      }
    ],
    "commit" : "415e20877ef8585996965af8149c7239da1b1b4a",
    "line" : 286,
    "diffHunk" : "@@ -1,1 +284,288 @@\t\t// Check and warn for duplicate secrets. Behavior here will be undefined.\n\t\tif _, ok := ret[tokenID]; ok {\n\t\t\tglog.V(3).Infof(\"Duplicate bootstrap tokens found for id %s, ignoring on in %s/%s\", tokenID, secret.Namespace, secret.Name)\n\t\t\tcontinue\n\t\t}"
  },
  {
    "id" : "0ee3534c-75dc-4d79-b418-52d339068eb8",
    "prId" : 36101,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/36101#pullrequestreview-20434667",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dc76ba98-21df-4014-aae3-c87b1a6adc1a",
        "parentId" : null,
        "authorId" : "d37d9758-bdf5-4c23-a40e-a85099689a0c",
        "body" : "Am I understanding correct that these aren't yet exposed to the user?",
        "createdAt" : "2017-02-06T15:45:29Z",
        "updatedAt" : "2017-02-10T20:49:51Z",
        "lastEditedBy" : "d37d9758-bdf5-4c23-a40e-a85099689a0c",
        "tags" : [
        ]
      },
      {
        "id" : "3f1bba5b-0667-4fd1-90b7-9beddedf5411",
        "parentId" : "dc76ba98-21df-4014-aae3-c87b1a6adc1a",
        "authorId" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "body" : "This is just the pattern that is used for passing arguments into controllers.  I'm basing this on the patterns of other controllers in the KCM.",
        "createdAt" : "2017-02-07T05:55:24Z",
        "updatedAt" : "2017-02-10T20:49:51Z",
        "lastEditedBy" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "tags" : [
        ]
      }
    ],
    "commit" : "415e20877ef8585996965af8149c7239da1b1b4a",
    "line" : 48,
    "diffHunk" : "@@ -1,1 +46,50 @@\n// BootstrapSignerOptions contains options for the BootstrapSigner\ntype BootstrapSignerOptions struct {\n\n\t// ConfigMapNamespace is the namespace of the ConfigMap"
  }
]