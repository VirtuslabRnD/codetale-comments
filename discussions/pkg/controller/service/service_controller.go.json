[
  {
    "id" : "84ee1f2e-261d-4941-8e91-aa18e58102a9",
    "prId" : 83934,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/83934#pullrequestreview-303661370",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f1b840b1-aaa9-4f47-a24c-ac6ea2c615a9",
        "parentId" : null,
        "authorId" : "26bd3fa6-ac8d-4cb0-b746-a30dc1dc2931",
        "body" : "Seems like we don't need to check nil?\r\n```golang\r\n\txPorts := getPortsForLB(x)\r\n\tyPorts := getPortsForLB(y)\r\n\treturn portSlicesEqualForLB(xPorts, yPorts)\r\n```",
        "createdAt" : "2019-10-18T04:25:26Z",
        "updatedAt" : "2019-10-18T05:32:23Z",
        "lastEditedBy" : "26bd3fa6-ac8d-4cb0-b746-a30dc1dc2931",
        "tags" : [
        ]
      },
      {
        "id" : "6ed3674d-e586-49cb-8ac9-2f66378b1125",
        "parentId" : "f1b840b1-aaa9-4f47-a24c-ac6ea2c615a9",
        "authorId" : "846a8f13-c912-4f13-aa1d-9e9530925436",
        "body" : "yeah~",
        "createdAt" : "2019-10-18T04:36:20Z",
        "updatedAt" : "2019-10-18T05:32:23Z",
        "lastEditedBy" : "846a8f13-c912-4f13-aa1d-9e9530925436",
        "tags" : [
        ]
      }
    ],
    "commit" : "18cf49e3df4fafe541d38935778609e223a86670",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +559,563 @@\nfunc portsEqualForLB(x, y *v1.Service) bool {\n\txPorts := getPortsForLB(x)\n\tyPorts := getPortsForLB(y)\n\treturn portSlicesEqualForLB(xPorts, yPorts)"
  },
  {
    "id" : "0c0d5bf4-a22d-4d54-b0a8-bd590505c952",
    "prId" : 81844,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/81844#pullrequestreview-280097908",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cfbb65f5-26af-4a83-bc8f-ba1d80f8acf2",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "this could be simplified to the following, including the special-case nil/0-length bit:\r\n```\r\nfunc removeString(slice []string, s string) []string {\r\n  var newSlice []string\r\n  for _, item := range slice {\r\n    if item != s {\r\n      newSlice = append(newSlice, item)\r\n    }\r\n  }\r\n  return newSlice\r\n}\r\n```\r\n\r\nhttps://play.golang.org/p/lF748-hq1yR",
        "createdAt" : "2019-08-26T19:55:03Z",
        "updatedAt" : "2019-08-27T10:26:25Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "8bbe499c-48a2-4ea4-bec1-2b14ad05726b",
        "parentId" : "cfbb65f5-26af-4a83-bc8f-ba1d80f8acf2",
        "authorId" : "e2ca6907-6765-444e-8bf6-1452233150d6",
        "body" : "nice catch !",
        "createdAt" : "2019-08-27T10:24:15Z",
        "updatedAt" : "2019-08-27T10:26:25Z",
        "lastEditedBy" : "e2ca6907-6765-444e-8bf6-1452233150d6",
        "tags" : [
        ]
      }
    ],
    "commit" : "6ad40ba51fc4704038307102e45948d21fba0826",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +835,839 @@\t}\n\treturn newSlice\n}\n\n// patchStatus patches the service with the given LoadBalancerStatus."
  },
  {
    "id" : "e50b05f1-ce94-4569-9830-ea53dff8cdca",
    "prId" : 80660,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/80660#pullrequestreview-270329865",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c333d5ee-fad3-4d07-8d92-e82b9da1af0c",
        "parentId" : null,
        "authorId" : "b714f738-aa05-4f49-a624-eaaf3e0cbb70",
        "body" : "Don't you need the comment above as well.",
        "createdAt" : "2019-08-02T18:17:50Z",
        "updatedAt" : "2019-08-02T18:25:00Z",
        "lastEditedBy" : "b714f738-aa05-4f49-a624-eaaf3e0cbb70",
        "tags" : [
        ]
      },
      {
        "id" : "f1034cf8-6d23-4e3c-94e4-3ebeeb0ab244",
        "parentId" : "c333d5ee-fad3-4d07-8d92-e82b9da1af0c",
        "authorId" : "c1166017-761f-41df-8ad7-07e3dd792799",
        "body" : "done",
        "createdAt" : "2019-08-02T18:25:09Z",
        "updatedAt" : "2019-08-02T18:25:09Z",
        "lastEditedBy" : "c1166017-761f-41df-8ad7-07e3dd792799",
        "tags" : [
        ]
      }
    ],
    "commit" : "ecad65a3f8622fdf1be556a6c1cd8e19007f3949",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +712,716 @@\t}\n\tif err == cloudprovider.ImplementedElsewhere {\n\t\t// ImplementedElsewhere indicates that the UpdateLoadBalancer is a nop and the\n\t\t// functionality is implemented by a different controller.  In this case, we\n\t\t// return immediately without doing anything."
  },
  {
    "id" : "974abb4d-54e0-4cc4-9086-8320f8d76f55",
    "prId" : 78262,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/78262#pullrequestreview-242425396",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f0257176-bfe7-433d-b4bd-7f10691c4c81",
        "parentId" : null,
        "authorId" : "26bd3fa6-ac8d-4cb0-b746-a30dc1dc2931",
        "body" : "The updated handler essentially leads to this workflow:\r\n\r\n* AddFunc/UpdateFunc\r\n\t* Ensure service is in cache, then\r\n\t\t* Create/resync service with type=LoadBalancer OR Load balancer needs essential update\r\n\t\t\t* (If enable) Ensure finalizer is added\r\n\t\t\t* Create/update load balancer if needed\r\n\t\t\t* Update service status if needed\r\n\t\t* Update/resync service that is deleted with finalizer OR Service changed to non-LB type\r\n\t\t\t* Delete load balancer\r\n\t\t\t* Ensure finalizer is removed\r\n\t\t\t* Update service status\r\n\t\t\t* Remove service from cache\r\n* DeleteFunc\r\n\t* Check if service is in cache\r\n\t\t* Service that is deleted without finalizer\r\n\t\t\t* Delete load balancer\r\n\t\t\t* Remove service from cache",
        "createdAt" : "2019-05-28T02:29:09Z",
        "updatedAt" : "2019-05-31T04:09:53Z",
        "lastEditedBy" : "26bd3fa6-ac8d-4cb0-b746-a30dc1dc2931",
        "tags" : [
        ]
      }
    ],
    "commit" : "64198a43e780b30ef14d3e4e9d9fa8aedc03446e",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +159,163 @@\t\t\t\t}\n\t\t\t\ts.enqueueService(old)\n\t\t\t},\n\t\t},\n\t\tserviceSyncPeriod,"
  },
  {
    "id" : "55224e6b-6e65-481b-897e-3bf9147af81c",
    "prId" : 78262,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/78262#pullrequestreview-243427792",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8871bb7a-683e-402a-b353-19f64825da76",
        "parentId" : null,
        "authorId" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "body" : "Question out of curiosity: can this cache be replaced with a lister once finailzer is enabled by default? Maybe worth adding a TODO comment somewhere so we don't forget",
        "createdAt" : "2019-05-29T14:43:34Z",
        "updatedAt" : "2019-05-31T04:09:53Z",
        "lastEditedBy" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "tags" : [
        ]
      },
      {
        "id" : "3a8fd4e0-fbff-4fa1-8ec8-e32b41a7be45",
        "parentId" : "8871bb7a-683e-402a-b353-19f64825da76",
        "authorId" : "26bd3fa6-ac8d-4cb0-b746-a30dc1dc2931",
        "body" : "Yes, we should be able to remove this cache once we get rid of the non-finalizer deletion path. Added a TODO for this.",
        "createdAt" : "2019-05-29T18:03:24Z",
        "updatedAt" : "2019-05-31T04:09:53Z",
        "lastEditedBy" : "26bd3fa6-ac8d-4cb0-b746-a30dc1dc2931",
        "tags" : [
        ]
      }
    ],
    "commit" : "64198a43e780b30ef14d3e4e9d9fa8aedc03446e",
    "line" : 72,
    "diffHunk" : "@@ -1,1 +256,260 @@\t// TODO(@MrHohn): Remove the cache once we get rid of the non-finalizer deletion\n\t// path. Ref https://github.com/kubernetes/enhancements/issues/980.\n\tcachedService := s.cache.getOrCreate(key)\n\tif cachedService.state != nil && cachedService.state.UID != service.UID {\n\t\t// This happens only when a service is deleted and re-created"
  },
  {
    "id" : "72d9a3ea-eea9-428f-b616-8117aafcddc5",
    "prId" : 78262,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/78262#pullrequestreview-244078912",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d50ee47e-440e-45f8-8adc-2cf46bc3da66",
        "parentId" : null,
        "authorId" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "body" : "It seems EnsureLoadBalancer should be written as ensureLoadBalancer",
        "createdAt" : "2019-05-30T23:17:29Z",
        "updatedAt" : "2019-05-31T04:09:53Z",
        "lastEditedBy" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "tags" : [
        ]
      },
      {
        "id" : "fb964fb3-61ac-4f55-b142-c5b4ff35d2de",
        "parentId" : "d50ee47e-440e-45f8-8adc-2cf46bc3da66",
        "authorId" : "26bd3fa6-ac8d-4cb0-b746-a30dc1dc2931",
        "body" : "Thanks for the input. So this is a pretty old comment and I think it was referring to `s.balancer.EnsureLoadBalancer()`. But yeah I think we should later do a cleanup on the comment that no longer stands/fits.",
        "createdAt" : "2019-05-30T23:37:11Z",
        "updatedAt" : "2019-05-31T04:09:53Z",
        "lastEditedBy" : "26bd3fa6-ac8d-4cb0-b746-a30dc1dc2931",
        "tags" : [
        ]
      }
    ],
    "commit" : "64198a43e780b30ef14d3e4e9d9fa8aedc03446e",
    "line" : 124,
    "diffHunk" : "@@ -1,1 +292,296 @@// doesn't want a loadbalancer no more. Returns whatever error occurred.\nfunc (s *ServiceController) syncLoadBalancerIfNeeded(service *v1.Service, key string) (loadBalancerOperation, error) {\n\t// Note: It is safe to just call EnsureLoadBalancer.  But, on some clouds that requires a delete & create,\n\t// which may involve service interruption.  Also, we would like user-friendly events.\n"
  },
  {
    "id" : "57f3b20f-486d-4211-91fe-01455d6a1ea6",
    "prId" : 55336,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/55336#pullrequestreview-75318041",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3acaf0c1-96e3-4e76-906a-c1e14e8c8d71",
        "parentId" : null,
        "authorId" : "ae819fef-700f-45ca-aa42-0afbedcadc19",
        "body" : ":+1: ",
        "createdAt" : "2017-11-09T02:53:44Z",
        "updatedAt" : "2017-11-09T02:58:08Z",
        "lastEditedBy" : "ae819fef-700f-45ca-aa42-0afbedcadc19",
        "tags" : [
        ]
      }
    ],
    "commit" : "26f9dd7b3e66f10b47163f88eac00ebc33ae0957",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +450,454 @@\n// needsUpdate checks to see if there were any changes between the old and new service that would require a load balancer update.\n// This method does not and should not check if the hosts have changed.\nfunc (s *ServiceController) needsUpdate(oldService *v1.Service, newService *v1.Service) bool {\n\tif !wantsLoadBalancer(oldService) && !wantsLoadBalancer(newService) {"
  },
  {
    "id" : "48f1e460-17e8-4a0d-85e0-984c5a2c7033",
    "prId" : 55336,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/55336#pullrequestreview-79697363",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "553e2e57-56fa-48a5-8a41-0d826373a525",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "Inferring source from state seems a little odd… does doing host updates when needsUpdate returns false mean this controller will do work on every service even when it should be in steady state?",
        "createdAt" : "2017-11-11T16:01:34Z",
        "updatedAt" : "2017-11-11T16:03:10Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "97ac4753-48a6-498b-a1c1-5959767057ab",
        "parentId" : "553e2e57-56fa-48a5-8a41-0d826373a525",
        "authorId" : "e45395cd-3c20-445c-b404-a2b9ffe5efab",
        "body" : "Services are only added to the queue under three conditions:\r\n1. The service requires an update. That's determined by `needsUpdate` which is checked in the informer OnUpdate.\r\n2. The node sync loop determined that hosts change from the last sync.\r\n3. An error occurred so retry.\r\n\r\nThe `UpdateLoadBalancer` method is supposed to be cheap for cloud providers. It was added so that cloud providers could have a method that handled _only_ updating load balancer hosts. \r\n\r\nThis approach should not (and doesn't from what I tell in my tests) add any extra calls from before. \r\n\r\n\r\n",
        "createdAt" : "2017-11-11T17:28:27Z",
        "updatedAt" : "2017-11-11T17:28:27Z",
        "lastEditedBy" : "e45395cd-3c20-445c-b404-a2b9ffe5efab",
        "tags" : [
        ]
      },
      {
        "id" : "d9ce033b-eb44-4b61-bbab-da67c2f7b549",
        "parentId" : "553e2e57-56fa-48a5-8a41-0d826373a525",
        "authorId" : "26bd3fa6-ac8d-4cb0-b746-a30dc1dc2931",
        "body" : "From https://github.com/kubernetes/kubernetes/issues/56443. I think the logic here is too hacky and may not cover all corner cases. What we really want here is to distinguish \"service update\" and \"nodeSync update\". The condition `!s.needsUpdate(cachedService.state, service)` is too broad that it includes also the retry case of \"service update\" (given how we cache service).\r\n\r\nBesides, putting \"nodeSync update\" into the same work queue as \"service update\" might introduce another problem that one update could override the other. Ref https://github.com/kubernetes/kubernetes/issues/52495#issuecomment-330670308, within the working queue we don't save duplicate key, if both \"nodeSync update\" and  \"service update\" come in before anyone leaves the queue, it will end up with only one update (depends on how we decide what update it is). It seems to me that the working queue mechanism also needs to be adjusted before we can put in \"nodeSync update\".\r\n\r\ncc @bowei ",
        "createdAt" : "2017-11-28T23:16:05Z",
        "updatedAt" : "2017-11-28T23:16:06Z",
        "lastEditedBy" : "26bd3fa6-ac8d-4cb0-b746-a30dc1dc2931",
        "tags" : [
        ]
      },
      {
        "id" : "72329795-1008-466d-9672-56444875b606",
        "parentId" : "553e2e57-56fa-48a5-8a41-0d826373a525",
        "authorId" : "e45395cd-3c20-445c-b404-a2b9ffe5efab",
        "body" : "> Besides, putting \"nodeSync update\" into the same work queue as \"service update\" might introduce another problem that one update could override the other\r\n\r\nOne update won't override the other because the sync checks if the service needs an update. Both cloud provider calls (`EnsureLoadBalancer` and `UpdateLoadBalancer`) will update the hosts, so if both happen it will go with `EnsureLoadBalancer` which is what we want. ",
        "createdAt" : "2017-11-28T23:21:18Z",
        "updatedAt" : "2017-11-28T23:21:29Z",
        "lastEditedBy" : "e45395cd-3c20-445c-b404-a2b9ffe5efab",
        "tags" : [
        ]
      },
      {
        "id" : "d51406d6-13ea-4e66-bbf1-44611edd0c62",
        "parentId" : "553e2e57-56fa-48a5-8a41-0d826373a525",
        "authorId" : "e45395cd-3c20-445c-b404-a2b9ffe5efab",
        "body" : "As I mentioned in the other PR https://github.com/kubernetes/kubernetes/pull/56448#discussion_r153508837, the finalizer support will clean this all up and I think we should revert this until the finalizer PR cleans up all the cache/delete logic. ",
        "createdAt" : "2017-11-28T23:29:37Z",
        "updatedAt" : "2017-11-28T23:29:37Z",
        "lastEditedBy" : "e45395cd-3c20-445c-b404-a2b9ffe5efab",
        "tags" : [
        ]
      },
      {
        "id" : "97d7903f-e13f-427a-910e-9052da908fbd",
        "parentId" : "553e2e57-56fa-48a5-8a41-0d826373a525",
        "authorId" : "26bd3fa6-ac8d-4cb0-b746-a30dc1dc2931",
        "body" : "> Both cloud provider calls (EnsureLoadBalancer and UpdateLoadBalancer) will update the hosts, so if both happen it will go with EnsureLoadBalancer\r\n\r\nI think this assumption is inaccurate, ref the LoadBalancer interface, it doesn't explicitly define `EnsureLoadBalancer()` should update the hosts:\r\nhttps://github.com/kubernetes/kubernetes/blob/e5aec8645d740123dfc8f1400b66bca05673b833/pkg/cloudprovider/cloud.go#L100-L109\r\n\r\nAnd in fact, `EnsureLoadBalancer()` in GCE cloudprovider doesn't update hosts. Hence for GCE this is the case where \"service update\" overrides \"nodeSync update\".",
        "createdAt" : "2017-11-28T23:32:11Z",
        "updatedAt" : "2017-11-28T23:32:11Z",
        "lastEditedBy" : "26bd3fa6-ac8d-4cb0-b746-a30dc1dc2931",
        "tags" : [
        ]
      },
      {
        "id" : "6f9c64ec-7efa-4fb2-8876-9026c5d99549",
        "parentId" : "553e2e57-56fa-48a5-8a41-0d826373a525",
        "authorId" : "e45395cd-3c20-445c-b404-a2b9ffe5efab",
        "body" : "> creates a new load balancer 'name', or updates the existing one\r\n\r\nShould include the backends (nodes). Why would it partially update the load balancer?",
        "createdAt" : "2017-11-28T23:34:28Z",
        "updatedAt" : "2017-11-28T23:34:28Z",
        "lastEditedBy" : "e45395cd-3c20-445c-b404-a2b9ffe5efab",
        "tags" : [
        ]
      },
      {
        "id" : "f93e2a44-2c32-4d3f-b4cf-b637cc919e42",
        "parentId" : "553e2e57-56fa-48a5-8a41-0d826373a525",
        "authorId" : "e45395cd-3c20-445c-b404-a2b9ffe5efab",
        "body" : "@MrHohn from what I see GCE does make sure that backends are up-to-date on EnsureLoadBalancer calls via [this method](https://github.com/kubernetes/kubernetes/blob/e57accbd03b1265340fdd266d0afe2b7a8e1c171/pkg/cloudprovider/providers/gce/gce_loadbalancer_internal.go#L408), which is called by [`ensureInternalLoadBalancer`](https://github.com/kubernetes/kubernetes/blob/e57accbd03b1265340fdd266d0afe2b7a8e1c171/pkg/cloudprovider/providers/gce/gce_loadbalancer_internal.go#L37)\r\n",
        "createdAt" : "2017-11-28T23:42:48Z",
        "updatedAt" : "2017-11-28T23:57:34Z",
        "lastEditedBy" : "e45395cd-3c20-445c-b404-a2b9ffe5efab",
        "tags" : [
        ]
      },
      {
        "id" : "a03874e3-01b5-4910-9099-e01f9699924d",
        "parentId" : "553e2e57-56fa-48a5-8a41-0d826373a525",
        "authorId" : "26bd3fa6-ac8d-4cb0-b746-a30dc1dc2931",
        "body" : "Thanks for gathering the links, I didn't look into the internal one before, seems like it does check for hosts update. Though ATM the external one doesn't check for hosts update.\r\nhttps://github.com/kubernetes/kubernetes/blob/e57accbd03b1265340fdd266d0afe2b7a8e1c171/pkg/cloudprovider/providers/gce/gce_loadbalancer_external.go#L675-L676",
        "createdAt" : "2017-11-28T23:49:20Z",
        "updatedAt" : "2017-11-28T23:49:20Z",
        "lastEditedBy" : "26bd3fa6-ac8d-4cb0-b746-a30dc1dc2931",
        "tags" : [
        ]
      },
      {
        "id" : "0f901b0e-7f73-4b53-b0dd-d58b4a5f464b",
        "parentId" : "553e2e57-56fa-48a5-8a41-0d826373a525",
        "authorId" : "e45395cd-3c20-445c-b404-a2b9ffe5efab",
        "body" : "Ah, missed that comment. The external one is definitely more complex than the internal one 👼 \r\n\r\nIt sounds like we should definitely revert this then and we need to come to an agreement on what `EnsureLoadBalancer` and `UpdateLoadBalancer` should do for each cloud provider. It was my understanding that `EnsureLoadBalancer` should completely update the load balancer, which is how AWS, Azure, Oracle & DigitalOcean handle it (only ones i checked). cc @wlan0 @luxas \r\n\r\nI'll open a PR to revert this for 1.9 @MrHohn ",
        "createdAt" : "2017-11-28T23:52:27Z",
        "updatedAt" : "2017-11-28T23:52:27Z",
        "lastEditedBy" : "e45395cd-3c20-445c-b404-a2b9ffe5efab",
        "tags" : [
        ]
      }
    ],
    "commit" : "26f9dd7b3e66f10b47163f88eac00ebc33ae0957",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +246,250 @@\t\t\t// The service does not require an update which means it was placed on the work queue\n\t\t\t// by the node sync loop and indicates that the hosts need to be updated.\n\t\t\terr := s.updateLoadBalancerHosts(service)\n\t\t\tif err != nil {\n\t\t\t\treturn err, cachedService.nextRetryDelay()"
  },
  {
    "id" : "b6818857-c7ee-4862-9c30-ed63a16fee0f",
    "prId" : 53458,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/53458#pullrequestreview-69405192",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "21c62cc1-34c9-4e19-8c09-b54bb78195d9",
        "parentId" : null,
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "I don't think this label should live here. Please move it back as a constant (duplicated until we have a \"real\" place for it) to `cmd/kubeadm/app/constants` _as well_. I don't want `cmd/kubeadm` to depend on `pkg/controller/service` just for this.\r\n\r\n@dims OK for you? Can you please fix up?",
        "createdAt" : "2017-10-14T17:42:44Z",
        "updatedAt" : "2017-10-14T17:42:51Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      },
      {
        "id" : "dc38cd9a-9505-4ff6-83a3-20785c2f9d86",
        "parentId" : "21c62cc1-34c9-4e19-8c09-b54bb78195d9",
        "authorId" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "body" : "@luxas Done. Please see https://github.com/kubernetes/kubernetes/pull/53937",
        "createdAt" : "2017-10-15T00:11:35Z",
        "updatedAt" : "2017-10-15T00:11:35Z",
        "lastEditedBy" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "eda7fbd16a882998839d5d7c6fbf12330e5ce4fb",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +66,70 @@\t// LabelNodeRoleMaster specifies that a node is a master\n\t// It's copied over to kubeadm until it's merged in core: https://github.com/kubernetes/kubernetes/pull/39112\n\tLabelNodeRoleMaster = \"node-role.kubernetes.io/master\"\n\n\t// LabelNodeRoleExcludeBalancer specifies that the node should be"
  },
  {
    "id" : "471b32a0-c4a3-439d-98c7-aaf088f203f3",
    "prId" : 53146,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/53146#pullrequestreview-66822901",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2fd0b516-dbf6-4b00-a4dd-d5e7a0507f4a",
        "parentId" : null,
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "I just opened #53341. We shouldn't depend on cmd/kubeadm from core controllers.",
        "createdAt" : "2017-10-02T18:06:01Z",
        "updatedAt" : "2017-10-02T18:06:01Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      },
      {
        "id" : "141aa16d-d7f3-4aea-9774-f1f8be03548b",
        "parentId" : "2fd0b516-dbf6-4b00-a4dd-d5e7a0507f4a",
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "I can fix this if food have a better location for these annotations",
        "createdAt" : "2017-10-03T16:30:17Z",
        "updatedAt" : "2017-10-03T16:30:17Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      },
      {
        "id" : "ca9fe69b-30cd-4c0a-8c2c-b98a3e919a4d",
        "parentId" : "2fd0b516-dbf6-4b00-a4dd-d5e7a0507f4a",
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "Erm s/food/folks/",
        "createdAt" : "2017-10-03T16:31:21Z",
        "updatedAt" : "2017-10-03T16:31:21Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      },
      {
        "id" : "87fa5da7-d75f-468d-9d1d-17598e23c17b",
        "parentId" : "2fd0b516-dbf6-4b00-a4dd-d5e7a0507f4a",
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "We can fix this later I think.",
        "createdAt" : "2017-10-03T16:51:27Z",
        "updatedAt" : "2017-10-03T16:51:27Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      }
    ],
    "commit" : "422f5e37b9b45706cac1575fad648e96ba0ce2e7",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +599,603 @@\t\t}\n\n\t\tif _, hasExcludeBalancerLabel := node.Labels[constants.LabelNodeRoleExcludeBalancer]; hasExcludeBalancerLabel {\n\t\t\treturn false\n\t\t}"
  }
]