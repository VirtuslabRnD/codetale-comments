[
  {
    "id" : "4765bacb-ebee-4fe5-acea-99048323b3c8",
    "prId" : 46373,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/46373#pullrequestreview-40119001",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "655c455f-27fa-47a8-a3d9-a45ef8f68023",
        "parentId" : null,
        "authorId" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "body" : "I don't know that we need to fix it in this PR, but it seems odd that we type assert to a `*v1.Namespace` above where we set up the shared informer event handler funcs, but `enqueueNamespace` takes an `interface{}` so you're having to re-assert.",
        "createdAt" : "2017-05-24T18:54:17Z",
        "updatedAt" : "2017-05-24T18:54:17Z",
        "lastEditedBy" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "tags" : [
        ]
      }
    ],
    "commit" : "ba5a1113e6df062280b6408055c32eb65b652158",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +109,113 @@\t}\n\n\tnamespace := obj.(*v1.Namespace)\n\t// don't queue if we aren't deleted\n\tif namespace.DeletionTimestamp == nil || namespace.DeletionTimestamp.IsZero() {"
  },
  {
    "id" : "09cb7f94-fe4d-4ec4-88aa-cbc2483a1ab6",
    "prId" : 41652,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/41652#pullrequestreview-23219247",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c3cf0697-449d-41c0-ab69-d7f85c1d90fb",
        "parentId" : null,
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "This won't print which controller timed out - what are the odds a single controller fails like this?",
        "createdAt" : "2017-02-22T00:56:47Z",
        "updatedAt" : "2017-02-22T00:56:47Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "43eb4b13-b13d-440b-a099-649ad4c22f85",
        "parentId" : "c3cf0697-449d-41c0-ab69-d7f85c1d90fb",
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "doesnt this wait forever at this point?  won't it also mean that literally every controller that watches namespaces will have same problem?",
        "createdAt" : "2017-02-22T02:23:59Z",
        "updatedAt" : "2017-02-22T02:24:35Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      },
      {
        "id" : "059bd8f3-4463-4c2d-a786-387b837eb9b1",
        "parentId" : "c3cf0697-449d-41c0-ab69-d7f85c1d90fb",
        "authorId" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "body" : "It is an infinite wait, yes. You will only see the message logged if stopCh is closed.\r\n\r\nThis pattern is consistent with the rest of the controllers. If we want to change it, we can, but I'd like to make the change wholesale instead of holding up this PR. Does that work for you guys?",
        "createdAt" : "2017-02-22T13:45:15Z",
        "updatedAt" : "2017-02-22T13:45:15Z",
        "lastEditedBy" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "tags" : [
        ]
      }
    ],
    "commit" : "99313cc3943ba30e04220273c5493bc204d6d096",
    "line" : 120,
    "diffHunk" : "@@ -1,1 +190,194 @@\n\tif !cache.WaitForCacheSync(stopCh, nm.listerSynced) {\n\t\tutilruntime.HandleError(fmt.Errorf(\"timed out waiting for caches to sync\"))\n\t\treturn\n\t}"
  },
  {
    "id" : "6bb645ed-ba6e-4c75-963f-62ed6e03a732",
    "prId" : 41652,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/41652#pullrequestreview-23259474",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5c8b0c01-cbc2-48ba-aa87-9aaff339f088",
        "parentId" : null,
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "do we need to wrap the error here?  it looks like the calling function also calls HandleError in response to the error?",
        "createdAt" : "2017-02-22T02:22:52Z",
        "updatedAt" : "2017-02-22T02:24:35Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      },
      {
        "id" : "c26c7b36-18cf-4e29-bc4a-620ff9a9fdfc",
        "parentId" : "5c8b0c01-cbc2-48ba-aa87-9aaff339f088",
        "authorId" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "body" : "Good catch, although this is the current behavior. My PR isn't changing anything other than switching from `glog.Errorf` to `utilruntime.HandleError`. Do you want me to change it in this PR?",
        "createdAt" : "2017-02-22T13:47:46Z",
        "updatedAt" : "2017-02-22T13:47:46Z",
        "lastEditedBy" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "tags" : [
        ]
      },
      {
        "id" : "dd35e235-4fae-4d41-8a67-bb07c1748a52",
        "parentId" : "5c8b0c01-cbc2-48ba-aa87-9aaff339f088",
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "i am fine doing this later.",
        "createdAt" : "2017-02-22T16:14:12Z",
        "updatedAt" : "2017-02-22T16:14:12Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      }
    ],
    "commit" : "99313cc3943ba30e04220273c5493bc204d6d096",
    "line" : 104,
    "diffHunk" : "@@ -1,1 +176,180 @@\t}\n\tif err != nil {\n\t\tutilruntime.HandleError(fmt.Errorf(\"Unable to retrieve namespace %v from store: %v\", key, err))\n\t\treturn err\n\t}"
  },
  {
    "id" : "b0e388fc-d31a-484f-9070-8f09ec0296c2",
    "prId" : 37431,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/37431#pullrequestreview-10470679",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "065ce2c2-6379-4a46-a325-f44d4f2f84e6",
        "parentId" : null,
        "authorId" : "8f672b1e-0513-4363-b383-ad8d8de0cdb9",
        "body" : "Does this mean that I create a namespace, we cannot create resource before the `namespaceDeletionGracePeriod` ?",
        "createdAt" : "2016-11-29T05:24:36Z",
        "updatedAt" : "2016-11-29T05:24:36Z",
        "lastEditedBy" : "8f672b1e-0513-4363-b383-ad8d8de0cdb9",
        "tags" : [
        ]
      },
      {
        "id" : "8bac19ed-4e52-4022-8b81-f6825553d011",
        "parentId" : "065ce2c2-6379-4a46-a325-f44d4f2f84e6",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "No. this controller only participates in namespace deletion and cleanup",
        "createdAt" : "2016-11-29T05:26:42Z",
        "updatedAt" : "2016-11-29T05:26:42Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "79ec8ae6546a1c774372f1f0689a55066429b81e",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +145,149 @@\t// delay processing namespace events to allow HA api servers to observe namespace deletion,\n\t// and HA etcd servers to observe last minute object creations inside the namespace\n\tnm.queue.AddAfter(key, namespaceDeletionGracePeriod)\n}\n"
  },
  {
    "id" : "2d2fb0fe-ca72-4085-95ca-db84fb96e545",
    "prId" : 36909,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/36909#pullrequestreview-11158565",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a8c9a260-97ce-4d3a-adf9-154472330060",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "A filter method in discovery seems to be in order.  Thought I saw one in a previous iteration of this pull.  Accept the list in the same format as the otehr filter so we can chain them all together.  I anticipate this being reasonably common and a filter chain is doable.",
        "createdAt" : "2016-11-30T13:33:22Z",
        "updatedAt" : "2016-12-05T11:42:45Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "149b2f6d-d336-4bfd-bc34-f7ac578294a3",
        "parentId" : "a8c9a260-97ce-4d3a-adf9-154472330060",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "done",
        "createdAt" : "2016-12-01T14:02:10Z",
        "updatedAt" : "2016-12-05T11:42:45Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "7bd86949-417f-46ea-a364-1498c0368ef6",
        "parentId" : "a8c9a260-97ce-4d3a-adf9-154472330060",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "Why not use the filter func you made?",
        "createdAt" : "2016-12-02T13:15:12Z",
        "updatedAt" : "2016-12-05T11:42:45Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "2dff13f332bef6cddff2613023eced01518c5c02",
    "line" : 71,
    "diffHunk" : "@@ -1,1 +99,103 @@\t\t\tverbs := sets.NewString([]string(r.Verbs)...)\n\n\t\t\tif !verbs.Has(\"delete\") {\n\t\t\t\tglog.V(6).Infof(\"Skipping resource %v because it cannot be deleted.\", gvr)\n\t\t\t}"
  },
  {
    "id" : "4b19920e-d754-4b67-a664-b4fc35edfbdf",
    "prId" : 22067,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ab7df33f-72b3-403f-a6b6-5515c66f5b18",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Actually wait (I mean not wait with this PR, it's correct, but wait with  #22045).\n\nNow I think, it that was something different, because even if we don't readd it here, we will sec the namespace every resync period, which is now 5 minutes:\nhttps://github.com/kubernetes/kubernetes/blob/master/cmd/kube-controller-manager/app/options/options.go#L61\n\nIf that's the case, if we didn't remove the namespace for 1h30m (which was the case in that issue), this would mean that we had errors that we didn't handled correctly ~100 times, which seems quite non-realistic.\n@derekwaynecarr - am I missing something?\n",
        "createdAt" : "2016-02-26T19:20:54Z",
        "updatedAt" : "2016-02-26T19:20:54Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "9c11102b-7844-4f3e-8b54-7b7bbc121d02",
        "parentId" : "ab7df33f-72b3-403f-a6b6-5515c66f5b18",
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "I was hoping the logging would have shown the underlying cause of 22045, but I am fine removing the fixes until we have that logging.\n",
        "createdAt" : "2016-02-26T20:15:42Z",
        "updatedAt" : "2016-02-26T20:15:42Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      },
      {
        "id" : "c36a97e6-d675-49ef-8741-cebff979fbcd",
        "parentId" : "ab7df33f-72b3-403f-a6b6-5515c66f5b18",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Thanks - I thought that I missed something. \n",
        "createdAt" : "2016-02-26T21:11:41Z",
        "updatedAt" : "2016-02-26T21:11:41Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "a301a2565e67a74a458ac8ba6cc17d3908fb8bb2",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +121,125 @@\t\t\t\t} else {\n\t\t\t\t\t// rather than wait for a full resync, re-add the namespace to the queue to be processed\n\t\t\t\t\tnm.queue.Add(key)\n\t\t\t\t\tutilruntime.HandleError(err)\n\t\t\t\t}"
  },
  {
    "id" : "0e7683a0-3a6a-4061-aaf5-ded19cceb246",
    "prId" : 20076,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7c33dbf4-954a-473d-902e-56ec4257a62e",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "glog.Infof(...)\n",
        "createdAt" : "2016-02-05T09:49:51Z",
        "updatedAt" : "2016-02-09T21:39:23Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "dcbf9699-9292-462c-9dd1-1109090f31a7",
        "parentId" : "7c33dbf4-954a-473d-902e-56ec4257a62e",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Also, can you please indent \"return nil\" below by one less tab?\n",
        "createdAt" : "2016-02-05T09:50:21Z",
        "updatedAt" : "2016-02-09T21:39:23Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "106693d9b332eddadc274d35f20f868e68824fa0",
    "line" : 328,
    "diffHunk" : "@@ -1,1 +131,135 @@\tobj, exists, err := nm.store.GetByKey(key)\n\tif !exists {\n\t\tglog.Infof(\"Namespace has been deleted %v\", key)\n\t\treturn nil\n\t}"
  },
  {
    "id" : "7208c10e-26c8-4271-a45d-555e9116d304",
    "prId" : 14459,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ed52322a-8775-47ea-b803-e3834e441755",
        "parentId" : null,
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "Since we don't yet have a flag, do not return an error if you get a 404\n",
        "createdAt" : "2015-09-29T00:34:58Z",
        "updatedAt" : "2015-09-30T01:54:04Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      },
      {
        "id" : "ca0df6a0-c4d4-404e-886e-88f20e7aaf94",
        "parentId" : "ed52322a-8775-47ea-b803-e3834e441755",
        "authorId" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "body" : "Hmm, it's either all or nothing, i mean the apiserver either has all experimental resources (exp=true) or doesn't. We're only in trouble if the controller manager is started with one of the exp flags and the apiserver isn't, in which case the autoscaler itself will fail. We have disjoint sets of flags that denote the same thing. \n",
        "createdAt" : "2015-09-29T00:44:08Z",
        "updatedAt" : "2015-09-30T01:54:04Z",
        "lastEditedBy" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "tags" : [
        ]
      },
      {
        "id" : "5ab6a6ba-220f-4cee-99cd-5ad2caedfd41",
        "parentId" : "ed52322a-8775-47ea-b803-e3834e441755",
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "Sorry, this is fine.   I couldn't tell easily on phone if this was in the\nexperimental if block.  Thanks!\n\nOn Monday, September 28, 2015, Prashanth B notifications@github.com wrote:\n\n> In pkg/controller/namespace/namespace_controller.go\n> https://github.com/kubernetes/kubernetes/pull/14459#discussion_r40623670\n> :\n> \n> > @@ -478,3 +482,17 @@ func deleteDeployments(expClient client.ExperimentalInterface, ns string) error\n> >     }\n> >     return nil\n> >  }\n> > +\n> > +func deleteIngress(expClient client.ExperimentalInterface, ns string) error {\n> > -   items, err := expClient.Ingress(ns).List(labels.Everything(), fields.Everything())\n> > -   if err != nil {\n> > -       return err\n> \n> Hmm, it's either all or nothing, i mean the apiserver either has all\n> experimental resources (exp=true) or doesn't. We're only in trouble if the\n> controller manager is started with one of the exp flags and the apiserver\n> isn't, in which case the autoscaler itself will fail. We have disjoint sets\n> of flags that denote the same thing.\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/kubernetes/kubernetes/pull/14459/files#r40623670.\n",
        "createdAt" : "2015-09-29T02:19:20Z",
        "updatedAt" : "2015-09-30T01:54:04Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      }
    ],
    "commit" : "c148332772adb5d7e6b0e9eb653c1445e44c7e9e",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +505,509 @@\titems, err := expClient.Ingress(ns).List(labels.Everything(), fields.Everything())\n\tif err != nil {\n\t\treturn err\n\t}\n\tfor i := range items.Items {"
  },
  {
    "id" : "44152977-ee3d-4a22-937c-19f1ec55dfff",
    "prId" : 14297,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c23bbff3-5cc8-46f7-bead-2c1a1b049977",
        "parentId" : null,
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "I think I'd prefer slightly to return from inside the loop rather than have the method scoped variables set multiple times here.\n",
        "createdAt" : "2015-09-21T20:18:40Z",
        "updatedAt" : "2015-09-24T14:53:14Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "c1841b8b-f0b7-4d6b-a88b-e1eb320de046",
        "parentId" : "c23bbff3-5cc8-46f7-bead-2c1a1b049977",
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "You still need to return something outside the for true loop, i think with the break, this is pretty clean.\n",
        "createdAt" : "2015-09-21T21:19:41Z",
        "updatedAt" : "2015-09-24T14:53:14Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      }
    ],
    "commit" : "f92755acab8795ede2fcecd08e08680f1b46e540",
    "line" : null,
    "diffHunk" : "@@ -1,1 +219,223 @@\tfor {\n\t\tresult, err = fn(kubeClient, latestNamespace)\n\t\tif err == nil {\n\t\t\treturn result, nil\n\t\t}"
  },
  {
    "id" : "ef6a6b93-61f1-43c8-93b2-2187b23c1ddb",
    "prId" : 14297,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "25de3dd8-f09f-4e51-b971-1855f322f521",
        "parentId" : null,
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "This won't mutate the namespace passed in?\n",
        "createdAt" : "2015-09-21T21:25:44Z",
        "updatedAt" : "2015-09-24T14:53:14Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "ea46d849-ca64-49c4-9b5e-f9e2587c16e4",
        "parentId" : "25de3dd8-f09f-4e51-b971-1855f322f521",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Is that intentional?\n",
        "createdAt" : "2015-09-21T21:26:09Z",
        "updatedAt" : "2015-09-24T14:53:14Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "63e6e637-1278-4ec3-a425-1a9508bd056a",
        "parentId" : "25de3dd8-f09f-4e51-b971-1855f322f521",
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "Yeah, I thought of it like append so it will return a new pointer rather than modify the incoming object.  I didn't want to modify the incoming object because its ultimately derived from the backing cache.DeltaFifo which is supposed to have read-only objects.\n",
        "createdAt" : "2015-09-22T13:25:05Z",
        "updatedAt" : "2015-09-24T14:53:14Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      }
    ],
    "commit" : "f92755acab8795ede2fcecd08e08680f1b46e540",
    "line" : null,
    "diffHunk" : "@@ -1,1 +254,258 @@\t// ensure that the status is up to date on the namespace\n\t// if we get a not found error, we assume the namespace is truly gone\n\tnamespace, err = retryOnConflictError(kubeClient, namespace, updateNamespaceStatusFunc)\n\tif err != nil {\n\t\tif errors.IsNotFound(err) {"
  },
  {
    "id" : "18d8fa0d-ad4e-4492-8eeb-47078b6fcd5d",
    "prId" : 12406,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cf8e701b-e2d5-49b4-9ea0-98dd3191af9c",
        "parentId" : null,
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "If the remaining content is going to take 10 secs to delete, then why not wait 10 secs? Why wait just 6 secs?\n",
        "createdAt" : "2015-08-10T07:20:56Z",
        "updatedAt" : "2015-08-10T15:20:01Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      },
      {
        "id" : "7d2f0ef1-3f3c-48c3-a1a6-cf7d314ef984",
        "parentId" : "cf8e701b-e2d5-49b4-9ea0-98dd3191af9c",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "The estimate is the maximum, most things will terminate fast and a few will\ngo longer.  I _believe_ the distribution will be binomial with a strong\npeak around a few seconds, but our default is 30 seconds for pods.   So I\ndidn't want to wait 30, and /2 felt like a good compromise.  +1 was to\nensure that we wouldn't wait 0 in scale up cases.  Will add a comment.\n\nOn Mon, Aug 10, 2015 at 3:21 AM, Nikhil Jindal notifications@github.com\nwrote:\n\n> In pkg/controller/namespace/namespace_controller.go\n> https://github.com/GoogleCloudPlatform/kubernetes/pull/12406#discussion_r36606759\n> :\n> \n> > @@ -55,16 +57,36 @@ func NewNamespaceController(kubeClient client.Interface, resyncPeriod time.Durat\n> >         framework.ResourceEventHandlerFuncs{\n> >             AddFunc: func(obj interface{}) {\n> >                 namespace := obj.(*api.Namespace)\n> > -               err := syncNamespace(kubeClient, *namespace)\n> > -               if err != nil {\n> > -                   glog.Error(err)\n> > -               if err := syncNamespace(kubeClient, *namespace); err != nil {\n> > -                   if estimate, ok := err.(*contentRemainingError); ok {\n> > -                       go func() {\n> > -                           t := estimate.Estimate/2 + 1\n> \n> If the remaining content is going to take 10 secs to delete, then why not\n> wait 10 secs? Why wait just 6 secs?\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/GoogleCloudPlatform/kubernetes/pull/12406/files#r36606759\n> .\n\n## \n\nClayton Coleman | Lead Engineer, OpenShift\n",
        "createdAt" : "2015-08-10T15:16:36Z",
        "updatedAt" : "2015-08-10T15:20:01Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "f51950c7-21a7-4915-b763-c0ff53bb133e",
        "parentId" : "cf8e701b-e2d5-49b4-9ea0-98dd3191af9c",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Comment to that effect added.\n\nOn Mon, Aug 10, 2015 at 11:16 AM, Clayton Coleman ccoleman@redhat.com\nwrote:\n\n> The estimate is the maximum, most things will terminate fast and a few\n> will go longer.  I _believe_ the distribution will be binomial with a\n> strong peak around a few seconds, but our default is 30 seconds for pods.\n> So I didn't want to wait 30, and /2 felt like a good compromise.  +1 was to\n> ensure that we wouldn't wait 0 in scale up cases.  Will add a comment.\n> \n> On Mon, Aug 10, 2015 at 3:21 AM, Nikhil Jindal notifications@github.com\n> wrote:\n> \n> > In pkg/controller/namespace/namespace_controller.go\n> > https://github.com/GoogleCloudPlatform/kubernetes/pull/12406#discussion_r36606759\n> > :\n> > \n> > > @@ -55,16 +57,36 @@ func NewNamespaceController(kubeClient client.Interface, resyncPeriod time.Durat\n> > >        framework.ResourceEventHandlerFuncs{\n> > >            AddFunc: func(obj interface{}) {\n> > >                namespace := obj.(*api.Namespace)\n> > > -              err := syncNamespace(kubeClient, *namespace)\n> > > -              if err != nil {\n> > > -                  glog.Error(err)\n> > > -              if err := syncNamespace(kubeClient, *namespace); err != nil {\n> > > -                  if estimate, ok := err.(*contentRemainingError); ok {\n> > > -                      go func() {\n> > > -                          t := estimate.Estimate/2 + 1\n> > \n> > If the remaining content is going to take 10 secs to delete, then why not\n> > wait 10 secs? Why wait just 6 secs?\n> > \n> > —\n> > Reply to this email directly or view it on GitHub\n> > https://github.com/GoogleCloudPlatform/kubernetes/pull/12406/files#r36606759\n> > .\n> \n> ## \n> \n> Clayton Coleman | Lead Engineer, OpenShift\n\n## \n\nClayton Coleman | Lead Engineer, OpenShift\n",
        "createdAt" : "2015-08-10T15:20:21Z",
        "updatedAt" : "2015-08-10T15:20:21Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "62b6ca1643ff019b9b6deb5cbb30dd5ef044f1b2",
    "line" : 53,
    "diffHunk" : "@@ -1,1 +66,70 @@\t\t\t\t\t\t\t// duration when in many cases things complete more quickly. The extra second added is to\n\t\t\t\t\t\t\t// ensure we never wait 0 seconds.\n\t\t\t\t\t\t\tt := estimate.Estimate/2 + 1\n\t\t\t\t\t\t\tglog.V(4).Infof(\"Content remaining in namespace %s, waiting %d seconds\", namespace.Name, t)\n\t\t\t\t\t\t\ttime.Sleep(time.Duration(t) * time.Second)"
  },
  {
    "id" : "2ddbdf3f-f6a0-4164-93d3-9db7cbd4868f",
    "prId" : 12406,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c2c9ab74-4779-4392-9957-f503753673b7",
        "parentId" : null,
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "This should not be required?\n",
        "createdAt" : "2015-08-10T07:21:06Z",
        "updatedAt" : "2015-08-10T15:20:01Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      },
      {
        "id" : "16a1d2e8-ccd9-4b1f-b9d2-91d82d722f9e",
        "parentId" : "c2c9ab74-4779-4392-9957-f503753673b7",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "We need controller as a variable to use from the requeue mechanism (line 66)\n",
        "createdAt" : "2015-08-10T15:17:32Z",
        "updatedAt" : "2015-08-10T15:20:01Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "62b6ca1643ff019b9b6deb5cbb30dd5ef044f1b2",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +43,47 @@// NewNamespaceController creates a new NamespaceController\nfunc NewNamespaceController(kubeClient client.Interface, resyncPeriod time.Duration) *NamespaceController {\n\tvar controller *framework.Controller\n\t_, controller = framework.NewInformer(\n\t\t&cache.ListWatch{"
  }
]