[
  {
    "id" : "679f1e99-961c-48b0-aee3-53a721b600c3",
    "prId" : 36248,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/36248#pullrequestreview-7253914",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d7c63738-d1f8-4a3c-a22a-821bda8a15ec",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "use a RWLock, the first namespace deleted will populate this map and we'll never write to it again\n",
        "createdAt" : "2016-11-04T17:58:35Z",
        "updatedAt" : "2016-11-04T18:11:59Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "4855917bc3b4c763722d16b2b962f5469a5fbe61",
    "line" : null,
    "diffHunk" : "@@ -1,1 +71,75 @@\to.lock.RLock()\n\tdefer o.lock.RUnlock()\n\treturn !o.m[key]\n}\n"
  },
  {
    "id" : "297b3ab5-c5ff-4561-9eea-468dec79fe80",
    "prId" : 34298,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/34298#pullrequestreview-5692641",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2da06809-df0d-409e-a88c-0cc6afe694cb",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "this could happen if the retrieved namespace is the new one, or if the retrieved namespace is the old one... without interpreting resourceVersion, there's no way to know which it is. If we return an error here, does the cleanup get retried later?\n",
        "createdAt" : "2016-10-10T13:14:15Z",
        "updatedAt" : "2016-10-25T17:51:47Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "770ec52b-eb96-427f-a0b9-f05e64e05323",
        "parentId" : "2da06809-df0d-409e-a88c-0cc6afe694cb",
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "the intent is to no longer retry on this iteration of the synch loop.  the error would cause the related namespace to get requeued and re-processed as desired.\n",
        "createdAt" : "2016-10-25T16:44:23Z",
        "updatedAt" : "2016-10-25T17:51:47Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      }
    ],
    "commit" : "e634312de4ae71009764485dcc2be5fb8f8eca23",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +89,93 @@\t\t\treturn nil, err\n\t\t}\n\t\tif prevNamespace.UID != latestNamespace.UID {\n\t\t\treturn nil, fmt.Errorf(\"namespace uid has changed across retries\")\n\t\t}"
  },
  {
    "id" : "22fc467a-beb4-4a56-8c73-b9ff7be03c35",
    "prId" : 34298,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/34298#pullrequestreview-5982936",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "510aee92-bd96-424f-baba-d0e0360b77a1",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "shouldn't this move above the retryOnConflict error?\n",
        "createdAt" : "2016-10-10T13:16:13Z",
        "updatedAt" : "2016-10-25T17:51:47Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "fd823da2-72e8-4798-a165-c5a52d9689ae",
        "parentId" : "510aee92-bd96-424f-baba-d0e0360b77a1",
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "given the current code structure, we do the following:\n\nsync loop:\n1. get latest view of a namespace\n2. update the status if deletion timestamp is non-zero, else do nothing\n3. if the do-nothing flow happened, then we need to check for a deletion timestamp here...\n\nso i think this should stay in the current spot for now.\n",
        "createdAt" : "2016-10-25T17:43:00Z",
        "updatedAt" : "2016-10-25T17:51:47Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      },
      {
        "id" : "9411b108-60ca-4927-bf28-713b6fbf247d",
        "parentId" : "510aee92-bd96-424f-baba-d0e0360b77a1",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "ah, updateNamespaceStatusFunc already checks namespace.DeletionTimestamp.IsZero() and short-circuits\n",
        "createdAt" : "2016-10-27T02:34:50Z",
        "updatedAt" : "2016-10-27T02:34:50Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "e634312de4ae71009764485dcc2be5fb8f8eca23",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +392,396 @@\n\t// the latest view of the namespace asserts that namespace is no longer deleting..\n\tif namespace.DeletionTimestamp.IsZero() {\n\t\treturn nil\n\t}"
  },
  {
    "id" : "dfa1fb72-2875-4c65-8bce-db960c6bf651",
    "prId" : 32524,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5864aed7-bec9-4ee2-b487-44e8ae59efac",
        "parentId" : null,
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "I'm not super familiar with this code. Shall you return `finalizerEstimateSeconds` as long as the original `estimate` is smaller than 15s (instead of `estimate == int64(0)`)?\n",
        "createdAt" : "2016-09-12T21:40:34Z",
        "updatedAt" : "2016-09-12T21:40:34Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      },
      {
        "id" : "97f76880-15e2-4121-be99-fd5d3a93aa6e",
        "parentId" : "5864aed7-bec9-4ee2-b487-44e8ae59efac",
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "estimate is 0 here always per the normal graceperiod estimate calculation.\n",
        "createdAt" : "2016-09-12T21:44:04Z",
        "updatedAt" : "2016-09-12T21:44:04Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      },
      {
        "id" : "d8980159-4c7d-498a-a7a9-eac663fa1301",
        "parentId" : "5864aed7-bec9-4ee2-b487-44e8ae59efac",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "I misunderstood. The code is correct.\n",
        "createdAt" : "2016-09-12T22:00:42Z",
        "updatedAt" : "2016-09-12T22:00:42Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "80d8c330e601937993ac2b737873d25b0ecae4d1",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +312,316 @@\t\t\tif len(item.GetFinalizers()) > 0 {\n\t\t\t\tglog.V(5).Infof(\"namespace controller - deleteAllContentForGroupVersionResource - items remaining with finalizers - namespace: %s, gvr: %v, finalizers: %v\", namespace, gvr, item.GetFinalizers())\n\t\t\t\treturn finalizerEstimateSeconds, nil\n\t\t\t}\n\t\t}"
  },
  {
    "id" : "aea1bdb7-1e5e-40ab-a80a-80ec067be9da",
    "prId" : 32524,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e3048d5b-486d-466f-a954-be84715558c6",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Huh. @caesarxuchao Does delete collection enforce finalizers at all? Something to look into as a follow-up.\n",
        "createdAt" : "2016-09-12T21:49:03Z",
        "updatedAt" : "2016-09-12T21:49:03Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "30d03aa8-9688-4d0a-b461-e3383f93b9bd",
        "parentId" : "e3048d5b-486d-466f-a954-be84715558c6",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "DeleteCollection delegates to the ordinary Delete call:\nhttps://github.com/kubernetes/kubernetes/blob/master/pkg/registry/generic/registry/store.go#L788\n\nSo it should work as expected.\n",
        "createdAt" : "2016-09-12T21:56:25Z",
        "updatedAt" : "2016-09-12T21:56:25Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "80d8c330e601937993ac2b737873d25b0ecae4d1",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +162,166 @@\t// namespace itself.\n\torphanDependents := false\n\terr := dynamicClient.Resource(&apiResource, namespace).DeleteCollection(&v1.DeleteOptions{OrphanDependents: &orphanDependents}, &v1.ListOptions{})\n\n\tif err == nil {"
  },
  {
    "id" : "76dcfac0-5218-40d2-b8b5-1eea78c7510a",
    "prId" : 31917,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f2122b74-690b-4e72-b7d3-4229e9c1a717",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "if there were multiple \"pods\" resources in the list, then this comparison broken. But there should only be one, so I guess it's OK. A test might be good?\n",
        "createdAt" : "2016-09-01T21:39:30Z",
        "updatedAt" : "2016-09-01T21:39:30Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "f5c67066-cc59-4f1c-9bec-2811e0b1f937",
        "parentId" : "f2122b74-690b-4e72-b7d3-4229e9c1a717",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Assuming that we don't have different versions of the same group and pods being registered in all those versions.\nThis is currently not the case, but I agree with @lavalamp that we probably need a test for it.\n",
        "createdAt" : "2016-09-02T06:30:38Z",
        "updatedAt" : "2016-09-02T06:30:38Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "698e151229e50849d906fbdbc0bcc9e71efe6af2",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +472,476 @@\nfunc (list sortableGroupVersionResources) Less(i, j int) bool {\n\treturn list[j].Group == \"\" && list[j].Resource == \"pods\"\n}"
  },
  {
    "id" : "c03d9f81-10e1-4add-8d28-67eabeedb4d8",
    "prId" : 23985,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "04812719-9b73-4c5f-8092-2500620586b2",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "I'd prefer for you to make a \"GetPreferredVersion\" function somewhere for reuse.\n",
        "createdAt" : "2016-04-07T18:15:26Z",
        "updatedAt" : "2016-04-13T20:18:39Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "0d2433e2-d3a7-45d6-bd20-7c838c7fc820",
        "parentId" : "04812719-9b73-4c5f-8092-2500620586b2",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "Done, extracted to a function in the discovery package. PTAL, thank you.\n",
        "createdAt" : "2016-04-07T21:13:45Z",
        "updatedAt" : "2016-04-13T20:18:39Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "31cd4c124d357e431f4aae11c72c2ec98b2bd025",
    "line" : null,
    "diffHunk" : "@@ -1,1 +464,468 @@\tallErrs := []error{}\n\tfor _, apiGroup := range serverGroupList.Groups {\n\t\tpreferredVersion := apiGroup.PreferredVersion\n\t\tapiResourceList, err := discoveryClient.ServerResourcesForGroupVersion(preferredVersion.GroupVersion)\n\t\tif err != nil {"
  },
  {
    "id" : "62afe3f2-ddbb-4409-ade6-f06214cb6e92",
    "prId" : 22067,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b551b21e-1b25-4f56-8ceb-8bc595046060",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "I'm not convinved about this - if we return \"not found\" error, it doesn't meen that it finished succefully - there might still be objects to remove. Or am I missing something?\n",
        "createdAt" : "2016-02-26T18:37:41Z",
        "updatedAt" : "2016-02-26T19:08:38Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "f2154f1f-2916-4db1-aa77-aaa135f349bd",
        "parentId" : "b551b21e-1b25-4f56-8ceb-8bc595046060",
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "It's not possible for a namespace to be deleted when its list of finalizers is non-empty.\n\nsee: https://github.com/kubernetes/kubernetes/blob/master/pkg/registry/namespace/etcd/etcd.go#L110\n\nSo if we ever got a not found error here, the namespace is gone, and all content should be gone.  I worried about the error here in cases where a cluster found itself running two instances of controllermanager inadvertently.\n",
        "createdAt" : "2016-02-26T18:48:17Z",
        "updatedAt" : "2016-02-26T19:08:38Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      },
      {
        "id" : "bb056209-90d3-4f29-8f52-4d6b53e3d413",
        "parentId" : "b551b21e-1b25-4f56-8ceb-8bc595046060",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Oh yeah - sure, sorry. Somehow I though it's doing \"deleteContent\" here, not \"finalizing\".\nYes - it looks ok. Thanks for explanation.\n\nMaybe it's wort adding a comment, that it's mostly about protecting from two controllers doing their work?\n",
        "createdAt" : "2016-02-26T19:01:13Z",
        "updatedAt" : "2016-02-26T19:08:38Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "a301a2565e67a74a458ac8ba6cc17d3908fb8bb2",
    "line" : null,
    "diffHunk" : "@@ -1,1 +248,252 @@\t\t// two controllers to do namespace deletion that share a common finalizer token it's\n\t\t// possible that a not found could occur since the other controller would have finished the delete.\n\t\tif errors.IsNotFound(err) {\n\t\t\treturn nil\n\t\t}"
  },
  {
    "id" : "f578a375-2c23-40b1-acc0-7d9123758c19",
    "prId" : 21400,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "77199bab-22bd-41fc-b89c-ea86e2ed5119",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Is this looking for subresources?\n",
        "createdAt" : "2016-02-29T19:29:34Z",
        "updatedAt" : "2016-03-03T04:42:41Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "c2e1e01a-0b10-4371-b6f2-d6ec39cac550",
        "parentId" : "77199bab-22bd-41fc-b89c-ea86e2ed5119",
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "this was intended to filter out subresources...\n",
        "createdAt" : "2016-02-29T22:14:22Z",
        "updatedAt" : "2016-03-03T04:42:41Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      },
      {
        "id" : "5843acb8-7cb5-4845-add2-94185876af6c",
        "parentId" : "77199bab-22bd-41fc-b89c-ea86e2ed5119",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Did we put subresources in that list? I thought that was still a todo...\n",
        "createdAt" : "2016-02-29T22:26:07Z",
        "updatedAt" : "2016-03-03T04:42:41Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "0a26be76-8cf8-4fba-89a9-dc6bbdab8d0f",
        "parentId" : "77199bab-22bd-41fc-b89c-ea86e2ed5119",
        "authorId" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "body" : "Someone must have implemented it - subs are in\n",
        "createdAt" : "2016-03-02T15:05:59Z",
        "updatedAt" : "2016-03-03T04:42:41Z",
        "lastEditedBy" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "tags" : [
        ]
      }
    ],
    "commit" : "beace2dbad7bd590f41c6839b1ad46b2caeec8b3",
    "line" : 548,
    "diffHunk" : "@@ -1,1 +471,475 @@\t\t\t\tcontinue\n\t\t\t}\n\t\t\tif strings.Contains(apiResource.Name, \"/\") {\n\t\t\t\tcontinue\n\t\t\t}"
  },
  {
    "id" : "ec92c0ce-e5ca-4e84-90a5-5a5f7314d660",
    "prId" : 21400,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "729781fc-5db9-4400-8e97-f973889148db",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Is this new in this PR? Is it correct?\n",
        "createdAt" : "2016-02-29T21:08:46Z",
        "updatedAt" : "2016-03-03T04:42:41Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "ad66187d-ae5d-40f6-8663-bc910bed4a13",
        "parentId" : "729781fc-5db9-4400-8e97-f973889148db",
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "this is new in this PR and was intended to fix:\nhttps://github.com/kubernetes/kubernetes/issues/21701\n\nIf a pod is in a terminal state, there is no needed to unnecessarily wait for graceful deletion of that pod because its already terminated.\n",
        "createdAt" : "2016-02-29T22:15:27Z",
        "updatedAt" : "2016-03-03T04:42:41Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      }
    ],
    "commit" : "beace2dbad7bd590f41c6839b1ad46b2caeec8b3",
    "line" : null,
    "diffHunk" : "@@ -1,1 +438,442 @@\t}\n\tfor i := range items.Items {\n\t\t// filter out terminal pods\n\t\tphase := items.Items[i].Status.Phase\n\t\tif api.PodSucceeded == phase || api.PodFailed == phase {"
  },
  {
    "id" : "86792dab-332e-41d0-8bfc-ae72430f8e43",
    "prId" : 21400,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6ced45e3-ec5a-44d0-9654-829b8735551a",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Document that \"true\" == \"not supported\"?\n",
        "createdAt" : "2016-02-29T21:19:29Z",
        "updatedAt" : "2016-03-03T04:42:41Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "beace2dbad7bd590f41c6839b1ad46b2caeec8b3",
    "line" : 37,
    "diffHunk" : "@@ -1,1 +58,62 @@}\n\n// operationNotSupportedCache is a simple cache to remember if an operation is not supported for a resource.\n// if the operationKey maps to true, it means the operation is not supported.\ntype operationNotSupportedCache map[operationKey]bool"
  },
  {
    "id" : "fd078657-d1ea-4d66-9458-94078f3ed18b",
    "prId" : 21400,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c59f6f02-ff6e-41dd-a3d9-93c0f92ea5f5",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "So, rather than this special case here, you may want to special case just this and keep it out of the resource list entirely. That path only exists to mount a subresource. We won't ever make anything like it again.\n",
        "createdAt" : "2016-03-03T21:45:29Z",
        "updatedAt" : "2016-03-03T21:45:29Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "beace2dbad7bd590f41c6839b1ad46b2caeec8b3",
    "line" : 127,
    "diffHunk" : "@@ -1,1 +165,169 @@\t// TODO: https://github.com/kubernetes/kubernetes/issues/22413\n\t// we have a resource returned in the discovery API that supports no top-level verbs:\n\t//  /apis/extensions/v1beta1/namespaces/default/replicationcontrollers\n\t// when working with this resource type, we will get a literal not found error rather than expected method not supported\n\t// remember next time that this resource does not support delete collection..."
  },
  {
    "id" : "be63e0b5-05d0-499c-bff8-373c3b407d57",
    "prId" : 21400,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "de98dcdc-5672-42d2-a14e-8060b1c88ebc",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "I hate myself for slowing this down even more, but I feel compelled to mention that making an object to store some of these parameters and making some of these functions methods on the object would probably be cleaner. But feel free to ignore this pedantry.\n",
        "createdAt" : "2016-03-03T22:40:15Z",
        "updatedAt" : "2016-03-03T22:40:15Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "b17e3403-1b4e-4434-a962-a2bc556f5470",
        "parentId" : "de98dcdc-5672-42d2-a14e-8060b1c88ebc",
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "No disagreement, I think in some cases, the code is a reflection of the problems I encountered when doing generic client work, and ideally, I would have never needed this opCache, etc.  The proliferation of arguments came as a response to the iterative process.  A follow-up should be fine I think.\n",
        "createdAt" : "2016-03-03T23:03:13Z",
        "updatedAt" : "2016-03-03T23:03:13Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      }
    ],
    "commit" : "beace2dbad7bd590f41c6839b1ad46b2caeec8b3",
    "line" : 149,
    "diffHunk" : "@@ -1,1 +186,190 @@\tdynamicClient *dynamic.Client,\n\topCache operationNotSupportedCache,\n\tgvr unversioned.GroupVersionResource,\n\tnamespace string,\n) (*runtime.UnstructuredList, bool, error) {"
  },
  {
    "id" : "616f4b1f-146b-45b0-812f-79f014adf539",
    "prId" : 21400,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2555fca4-324a-45fa-a7e9-f428563d164b",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "How does an int64 map to time? (why not time.Duration?)\n",
        "createdAt" : "2016-03-03T22:48:04Z",
        "updatedAt" : "2016-03-03T22:48:04Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "32a2fab9-a292-4551-9b87-e1781fe7b280",
        "parentId" : "2555fca4-324a-45fa-a7e9-f428563d164b",
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "I kept the type consistent with gracefulTermination which is seconds.\n",
        "createdAt" : "2016-03-03T23:03:57Z",
        "updatedAt" : "2016-03-03T23:03:57Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      }
    ],
    "commit" : "beace2dbad7bd590f41c6839b1ad46b2caeec8b3",
    "line" : 290,
    "diffHunk" : "@@ -1,1 +313,317 @@\tnamespace string,\n\tnamespaceDeletedAt unversioned.Time,\n) (int64, error) {\n\testimate := int64(0)\n\tglog.V(4).Infof(\"namespace controller - deleteAllContent - namespace: %s, gvrs: %v\", namespace, groupVersionResources)"
  },
  {
    "id" : "0d42d8f2-f624-431f-b624-8f29c6641d37",
    "prId" : 21400,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1d74dac5-eaa2-4ce3-a5ed-bbd50474117b",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "should this be `return 0, err`?\n",
        "createdAt" : "2016-03-03T22:48:40Z",
        "updatedAt" : "2016-03-03T22:48:40Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "aa1b2db6-6350-4ce9-a8bc-3cb66da5c448",
        "parentId" : "1d74dac5-eaa2-4ce3-a5ed-bbd50474117b",
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "It will ignore the estimate and only look at the err.\n",
        "createdAt" : "2016-03-03T23:05:07Z",
        "updatedAt" : "2016-03-03T23:05:07Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      }
    ],
    "commit" : "beace2dbad7bd590f41c6839b1ad46b2caeec8b3",
    "line" : 297,
    "diffHunk" : "@@ -1,1 +320,324 @@\t\tgvrEstimate, err := deleteAllContentForGroupVersionResource(kubeClient, clientPool, opCache, gvr, namespace, namespaceDeletedAt)\n\t\tif err != nil {\n\t\t\treturn estimate, err\n\t\t}\n\t\tif gvrEstimate > estimate {"
  },
  {
    "id" : "1f937230-7d6d-4dae-a341-8ca3498fb4e2",
    "prId" : 21055,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6edb39ca-6a2a-44c9-b0fc-6ac8e284d2a2",
        "parentId" : null,
        "authorId" : "fa03ed6a-9d2a-44b6-8438-e21ee4a2ce4d",
        "body" : "This if statement will return false so `deleteReplicaSets` will never run, have no idea what's going wrong.\n",
        "createdAt" : "2016-02-11T15:30:56Z",
        "updatedAt" : "2016-02-11T16:22:10Z",
        "lastEditedBy" : "fa03ed6a-9d2a-44b6-8438-e21ee4a2ce4d",
        "tags" : [
        ]
      },
      {
        "id" : "7da808d2-726b-40a9-93c1-25f510d268e8",
        "parentId" : "6edb39ca-6a2a-44c9-b0fc-6ac8e284d2a2",
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "Are you referring to the test case or when running the actual code?\n\nThe test case is mocked up, so you need to add your resource:\nhttps://github.com/kubernetes/kubernetes/blob/master/pkg/controller/namespace/namespace_controller_test.go#L151\n",
        "createdAt" : "2016-02-11T16:01:31Z",
        "updatedAt" : "2016-02-11T16:22:10Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      }
    ],
    "commit" : "4f24ea65f23c85d2a60a053877cabe01f7556364",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +185,189 @@\t\t\t}\n\t\t}\n\t\tif containsResource(resources, \"replicasets\") {\n\t\t\terr = deleteReplicaSets(kubeClient.Extensions(), namespace)\n\t\t\tif err != nil {"
  }
]