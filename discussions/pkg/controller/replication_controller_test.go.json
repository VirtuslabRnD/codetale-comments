[
  {
    "id" : "fa2d43c9-163f-44c2-b8ac-2b47c828fd73",
    "prId" : 6866,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "62b7ac26-3dc0-4b6e-8315-c60a27947e43",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "nit: extra blank line\n",
        "createdAt" : "2015-04-24T23:16:56Z",
        "updatedAt" : "2015-04-28T20:45:49Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "b5393a87-1cf5-4cf0-81ab-190dd87572a6",
        "parentId" : "62b7ac26-3dc0-4b6e-8315-c60a27947e43",
        "authorId" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "body" : "removed\n",
        "createdAt" : "2015-04-27T17:24:21Z",
        "updatedAt" : "2015-04-28T20:45:49Z",
        "lastEditedBy" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "tags" : [
        ]
      }
    ],
    "commit" : "7592dabeba854da7b3b4045dbb9b19e848f17271",
    "line" : null,
    "diffHunk" : "@@ -1,1 +679,683 @@\t// send it into the syncHandler.\n\tmanager.syncHandler = func(key string) error {\n\n\t\tobj, exists, err := manager.controllerStore.Store.GetByKey(key)\n\t\tif !exists || err != nil {"
  },
  {
    "id" : "943a6d21-1342-4b61-aa97-54801bca83c3",
    "prId" : 6866,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fff7b36f-7e26-4912-86c6-a5ebc3f4f31f",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "You mean you're simulating that?\n\nAlso, it doesn't make any sense to expect both creations and deletions at the same time, does it?\n",
        "createdAt" : "2015-04-24T23:27:50Z",
        "updatedAt" : "2015-04-28T20:45:49Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "3d776d64-6b90-45cf-9c40-c2d30b47f2a0",
        "parentId" : "fff7b36f-7e26-4912-86c6-a5ebc3f4f31f",
        "authorId" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "body" : "Yes i meant simulating, as a way to document what happens in production. Yes currently we can't really set both to a positive value unless there's a race since we go to sleep after setting one and wake up when it's either expired or < 0. if a bunch of kubectl adds/deletes happen the counters would go negative. But I wanted to leave the expectations implementation open ended, in case I need it in other controllers. I should probably flag that case in the logs.\n",
        "createdAt" : "2015-04-24T23:34:06Z",
        "updatedAt" : "2015-04-28T20:45:49Z",
        "lastEditedBy" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "tags" : [
        ]
      },
      {
        "id" : "4dfd942a-ffb2-417f-9bee-dedc05ca8d5d",
        "parentId" : "fff7b36f-7e26-4912-86c6-a5ebc3f4f31f",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Yeah it's fine in a test, but worth mentioning that you're testing it that way for convenience only.\n",
        "createdAt" : "2015-04-25T00:00:40Z",
        "updatedAt" : "2015-04-28T20:45:49Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "7592dabeba854da7b3b4045dbb9b19e848f17271",
    "line" : null,
    "diffHunk" : "@@ -1,1 +457,461 @@\trc := newReplicationController(1)\n\n\t// RC fires off adds and deletes at apiserver, then sets expectations\n\te.setExpectations(rc, adds, dels)\n\tvar wg sync.WaitGroup"
  },
  {
    "id" : "e468c68e-a1c2-4afb-9cb4-0127f16d0bd2",
    "prId" : 805,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4f27711a-f2ad-4f26-b643-06b4d421d35b",
        "parentId" : null,
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Test for at least one field or selector handling with WatchControllers?\n",
        "createdAt" : "2014-08-07T14:20:02Z",
        "updatedAt" : "2014-08-08T21:09:35Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "7dcec847-acfa-4104-8ab4-a316442e228b",
        "parentId" : "4f27711a-f2ad-4f26-b643-06b4d421d35b",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "I don't understand this request-- no field selectors are supported yet, and replication controller doesn't have a reason to set any label selector. A test for label selector working should go in registry anyway, no?\n",
        "createdAt" : "2014-08-08T20:42:20Z",
        "updatedAt" : "2014-08-08T21:09:35Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "47d15f74-d0c0-4d7f-b4d1-bae5d09b15d8",
        "parentId" : "4f27711a-f2ad-4f26-b643-06b4d421d35b",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Fair, was just looking for something that would test enough of the flow through controller/client so that we'd know that label selectors are properly passed through.  Fine for now.\n",
        "createdAt" : "2014-08-08T20:58:13Z",
        "updatedAt" : "2014-08-08T21:09:35Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "5dd130a350388f8c3a9aaefe3508905752870d15",
    "line" : 53,
    "diffHunk" : "@@ -1,1 +345,349 @@\t// Test normal case\n\ttestControllerSpec.ID = \"foo\"\n\tclient.w.Add(&testControllerSpec)\n\n\tselect {"
  }
]