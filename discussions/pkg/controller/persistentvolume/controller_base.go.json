[
  {
    "id" : "d41feab0-b663-4293-981d-a4b5a111fbce",
    "prId" : 28108,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a02c32c5-95a3-45d9-be7b-3772ad6fef73",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "If you get this error, you continue to use clone right below?\n",
        "createdAt" : "2016-06-27T16:35:46Z",
        "updatedAt" : "2016-06-27T16:35:46Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "169076e7da8bf1edcb03a4435f5e5032f61726b0",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +152,156 @@\t\t\tclone, err := conversion.NewCloner().DeepCopy(&volume)\n\t\t\tif err != nil {\n\t\t\t\tglog.Errorf(\"error cloning volume %q: %v\", volume.Name, err)\n\t\t\t}\n\t\t\tvolumeClone := clone.(*api.PersistentVolume)"
  },
  {
    "id" : "3c1331a7-a8a9-41cd-9902-be29ff51e270",
    "prId" : 28108,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f2bfa3cf-7da9-4edc-be6c-9d98cd50e327",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "same\n",
        "createdAt" : "2016-06-27T16:35:57Z",
        "updatedAt" : "2016-06-27T16:35:57Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "169076e7da8bf1edcb03a4435f5e5032f61726b0",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +172,176 @@\t\tclone, err := conversion.NewCloner().DeepCopy(&claim)\n\t\tif err != nil {\n\t\t\tglog.Errorf(\"error cloning claim %q: %v\", claimToClaimKey(&claim), err)\n\t\t}\n\t\tclaimClone := clone.(*api.PersistentVolumeClaim)"
  },
  {
    "id" : "6cf8b2af-a18e-4072-a972-d5908c96df15",
    "prId" : 28108,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dcd1e9d9-a16e-4e49-9f13-fb90dd7f15bf",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "+1 for strongly typed functions like this, thanks\n",
        "createdAt" : "2016-06-27T16:37:11Z",
        "updatedAt" : "2016-06-27T16:37:11Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "169076e7da8bf1edcb03a4435f5e5032f61726b0",
    "line" : 37,
    "diffHunk" : "@@ -1,1 +180,184 @@}\n\nfunc (ctrl *PersistentVolumeController) storeVolumeUpdate(volume *api.PersistentVolume) (bool, error) {\n\treturn storeObjectUpdate(ctrl.volumes.store, volume, \"volume\")\n}"
  },
  {
    "id" : "1d0cd080-3753-4351-a1ed-367b39bb57db",
    "prId" : 25881,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d6abab58-f63f-4e40-b963-073176c3446d",
        "parentId" : null,
        "authorId" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "body" : "I think it would be a little clearer to wrap this with `storeClaimUpdate` and `storeVolumeUpdate`\n",
        "createdAt" : "2016-05-23T17:18:48Z",
        "updatedAt" : "2016-05-23T17:18:48Z",
        "lastEditedBy" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "tags" : [
        ]
      }
    ],
    "commit" : "02792323606b80a846e8ea7a24733393acafe6e2",
    "line" : 131,
    "diffHunk" : "@@ -1,1 +438,442 @@}\n\n// storeObjectUpdate updates given cache with a new object version from Informer\n// callback (i.e. with events from etcd) or with an object modified by the\n// controller itself. Returns \"true\", if the cache was updated, false if the"
  },
  {
    "id" : "64e4e252-bdf4-447c-a07d-6632fad06c64",
    "prId" : 25865,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "29146a9b-bcfa-4b44-bfea-6c87eccf9875",
        "parentId" : null,
        "authorId" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "body" : "It's worth thinking about how future versions are going to deal with this.\n",
        "createdAt" : "2016-06-03T15:43:37Z",
        "updatedAt" : "2016-06-03T15:43:37Z",
        "lastEditedBy" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "tags" : [
        ]
      }
    ],
    "commit" : "27b11c53426c2f8324a34063ebc48486bc35af54",
    "line" : 89,
    "diffHunk" : "@@ -1,1 +429,433 @@// It returns true if the volume was deleted.\n// TODO: remove this function when upgrade from 1.2 becomes unsupported.\nfunc (ctrl *PersistentVolumeController) upgradeVolumeFrom1_2(volume *api.PersistentVolume) bool {\n\tannValue, found := volume.Annotations[pvProvisioningRequiredAnnotationKey]\n\tif !found {"
  },
  {
    "id" : "39c5f072-ed36-426c-81a7-9dd4c01cb6bc",
    "prId" : 24331,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cc56f772-2f19-40ca-a79c-485365f4e803",
        "parentId" : null,
        "authorId" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "body" : "the log message is for the wrong method :(\n",
        "createdAt" : "2016-05-18T19:15:52Z",
        "updatedAt" : "2016-05-18T19:15:52Z",
        "lastEditedBy" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "tags" : [
        ]
      },
      {
        "id" : "936943fd-c385-4900-bbb9-f26ce0bd6eca",
        "parentId" : "cc56f772-2f19-40ca-a79c-485365f4e803",
        "authorId" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "body" : "I would take a fix for this in a follow-up\n",
        "createdAt" : "2016-05-18T19:16:04Z",
        "updatedAt" : "2016-05-18T19:16:04Z",
        "lastEditedBy" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "tags" : [
        ]
      }
    ],
    "commit" : "01b20d8e77776dda3b7ec3389bd200ed80716d46",
    "line" : 207,
    "diffHunk" : "@@ -1,1 +205,209 @@\t\t\t\t\t// Version conflict error happens quite often and the\n\t\t\t\t\t// controller recovers from it easily.\n\t\t\t\t\tglog.V(3).Infof(\"PersistentVolumeController could not update volume %q from deleteClaim handler: %+v\", claimToClaimKey(claim), err)\n\t\t\t\t} else {\n\t\t\t\t\tglog.Errorf(\"PersistentVolumeController could not update volume %q from deleteClaim handler: %+v\", claimToClaimKey(claim), err)"
  }
]