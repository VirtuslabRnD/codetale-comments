[
  {
    "id" : "d2979d8c-7ee8-432c-a6fe-a3fdcc43ba16",
    "prId" : 90191,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/90191#pullrequestreview-420273300",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6da4c977-9155-45a2-b987-5ec562125420",
        "parentId" : null,
        "authorId" : "c5a78ad1-2727-48a6-8217-285a102b94de",
        "body" : "Despite this being quite simple, might be worth including a unit test here given there's already plumbing for it? https://github.com/kubernetes/kubernetes/blob/dcabb7e6a81e7e60a43a82a380bf01fd0604b8f7/pkg/controller/certificates/cleaner/cleaner_test.go\r\n\r\nUnless there's an integration test I've missed ðŸ˜„ ",
        "createdAt" : "2020-05-28T15:53:02Z",
        "updatedAt" : "2020-05-28T20:53:43Z",
        "lastEditedBy" : "c5a78ad1-2727-48a6-8217-285a102b94de",
        "tags" : [
        ]
      },
      {
        "id" : "9c5b4933-568f-4611-972d-65ced242116a",
        "parentId" : "6da4c977-9155-45a2-b987-5ec562125420",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "added a unit test",
        "createdAt" : "2020-05-28T16:11:16Z",
        "updatedAt" : "2020-05-28T20:53:43Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "7049149181189eae304246cc49de78d08eef4f80",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +163,167 @@// creation time of the CSR is passed the deadline that pending requests are\n// maintained for.\nfunc isFailedPastDeadline(csr *capi.CertificateSigningRequest) bool {\n\tfor _, c := range csr.Status.Conditions {\n\t\tif c.Type == capi.CertificateFailed && isOlderThan(c.LastUpdateTime, deniedExpiration) {"
  },
  {
    "id" : "44b44649-2864-4a93-8692-0bf8f69b7ba5",
    "prId" : 51840,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/51840#pullrequestreview-69122763",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e7c1e8aa-6ded-4162-a753-660ac7d37070",
        "parentId" : null,
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "This needs a resync interval < the max interval otherwise you won't get called often enough.",
        "createdAt" : "2017-10-02T20:54:43Z",
        "updatedAt" : "2017-10-04T21:45:41Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "dd3da673-d7aa-455a-a2e3-c3df425a21e1",
        "parentId" : "e7c1e8aa-6ded-4162-a753-660ac7d37070",
        "authorId" : "b8d9ba23-8a1c-44a6-afe2-8ac9498838bb",
        "body" : "Are you referring to the values set for `pollingInterval`, `approvedExpiration`, `deniedExpiration`, `pendingExpiration`?",
        "createdAt" : "2017-10-04T21:48:58Z",
        "updatedAt" : "2017-10-04T21:48:58Z",
        "lastEditedBy" : "b8d9ba23-8a1c-44a6-afe2-8ac9498838bb",
        "tags" : [
        ]
      },
      {
        "id" : "b1a39781-f134-4c74-82dd-506c07a5f060",
        "parentId" : "e7c1e8aa-6ded-4162-a753-660ac7d37070",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Oh, you're using pollingInterval as a lister.  Hrm.  I guess that's ok... feels a bit mucky.  But it's fine for now.",
        "createdAt" : "2017-10-13T04:19:16Z",
        "updatedAt" : "2017-10-13T04:19:16Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "2a6099b8f9dff383f815fb02ead980e3a9e0a5ab",
    "line" : 67,
    "diffHunk" : "@@ -1,1 +65,69 @@\n// NewCSRCleanerController creates a new CSRCleanerController.\nfunc NewCSRCleanerController(\n\tcsrClient csrclient.CertificateSigningRequestInterface,\n\tcsrInformer certificatesinformers.CertificateSigningRequestInformer,"
  },
  {
    "id" : "100e372a-26ce-46a8-95d4-545b83848f46",
    "prId" : 51840,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/51840#pullrequestreview-68117396",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9552475a-a61b-4874-ade8-6c95e7e27763",
        "parentId" : null,
        "authorId" : "0af48e59-4be9-46ce-9275-aa218813b6fd",
        "body" : "What's the point of calling `wait.Until` multiple times if there's no jitter?",
        "createdAt" : "2017-10-09T21:38:40Z",
        "updatedAt" : "2017-10-09T21:47:09Z",
        "lastEditedBy" : "0af48e59-4be9-46ce-9275-aa218813b6fd",
        "tags" : [
        ]
      },
      {
        "id" : "73ea6bde-3432-41a5-84c6-0f35569dc0ef",
        "parentId" : "9552475a-a61b-4874-ade8-6c95e7e27763",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "Catches panic and restarts worker ",
        "createdAt" : "2017-10-09T21:49:26Z",
        "updatedAt" : "2017-10-09T21:49:26Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "2a6099b8f9dff383f815fb02ead980e3a9e0a5ab",
    "line" : 85,
    "diffHunk" : "@@ -1,1 +83,87 @@\n\tfor i := 0; i < workers; i++ {\n\t\tgo wait.Until(ccc.worker, pollingInterval, stopCh)\n\t}\n"
  }
]