[
  {
    "id" : "f09608cf-808e-4fc9-81e4-d4161883581f",
    "prId" : 90822,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/90822#pullrequestreview-407467040",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8a47b166-bfe5-4d66-882e-9c22163bd04a",
        "parentId" : null,
        "authorId" : "c5a78ad1-2727-48a6-8217-285a102b94de",
        "body" : "Do we intend/want to support having a distinct CA for kube-apiserver-client and kube-apiserver-client-kubelet? Presumably these would be reasonably expected to be two intermediaries from a common root (once there is better support for intermediaries too).\n\nUnless it’s possible to specify multiple root CAs used to validate apiserver client certificates?",
        "createdAt" : "2020-05-06T20:20:43Z",
        "updatedAt" : "2020-07-09T12:15:25Z",
        "lastEditedBy" : "c5a78ad1-2727-48a6-8217-285a102b94de",
        "tags" : [
        ]
      },
      {
        "id" : "da14ffb6-6c3c-47be-9aa7-0d8984b7bf01",
        "parentId" : "8a47b166-bfe5-4d66-882e-9c22163bd04a",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "> Unless it’s possible to specify multiple root CAs used to validate apiserver client certificates?\r\n\r\nIt is.  In fact openshift does this today.\r\n\r\n\r\n\r\n> Do we intend/want to support having a distinct CA for kube-apiserver-client and kube-apiserver-client-kubelet?\r\n\r\nYes.  The kubelets have well defined and well behaved rotation capabilities that are managed, not external.  These properties mean that having comparatively short lived signers is possible.  In general, apiserver clients don't have these properties.",
        "createdAt" : "2020-05-07T13:24:34Z",
        "updatedAt" : "2020-07-09T12:15:25Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "1233a6f63ede98085e83daad67945067e04d911a",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +33,37 @@\tKubeletServingSignerConfiguration CSRSigningConfiguration\n\t// kubeletClientSignerConfiguration holds the certificate and key used to issue certificates for the kubernetes.io/kube-apiserver-client-kubelet\n\tKubeletClientSignerConfiguration CSRSigningConfiguration\n\t// kubeAPIServerClientSignerConfiguration holds the certificate and key used to issue certificates for the kubernetes.io/kube-apiserver-client\n\tKubeAPIServerClientSignerConfiguration CSRSigningConfiguration"
  },
  {
    "id" : "9af393e9-9115-4569-aba1-c226b4483622",
    "prId" : 90822,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/90822#pullrequestreview-407469875",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7c1580c9-82b6-4c65-b97a-84712381302a",
        "parentId" : null,
        "authorId" : "c5a78ad1-2727-48a6-8217-285a102b94de",
        "body" : "What formats are supported here? PKCS#8? What about PKCS#1/whatever the equivalent of 1 is for ECDSA?",
        "createdAt" : "2020-05-06T20:21:55Z",
        "updatedAt" : "2020-07-09T12:15:25Z",
        "lastEditedBy" : "c5a78ad1-2727-48a6-8217-285a102b94de",
        "tags" : [
        ]
      },
      {
        "id" : "20d57c6e-18cb-4f4d-999c-d14ee537fc1d",
        "parentId" : "7c1580c9-82b6-4c65-b97a-84712381302a",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "> What formats are supported here? PKCS#8? What about PKCS#1/whatever the equivalent of 1 is for ECDSA?\r\n\r\nThis is equivalent to the doc on the existing field.  I'll admit to cargo-culting.",
        "createdAt" : "2020-05-07T13:27:46Z",
        "updatedAt" : "2020-07-09T12:15:25Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "1233a6f63ede98085e83daad67945067e04d911a",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +50,54 @@\tCertFile string\n\t// keyFile is the filename containing a PEM-encoded\n\t// RSA or ECDSA private key used to issue certificates\n\tKeyFile string\n}"
  }
]