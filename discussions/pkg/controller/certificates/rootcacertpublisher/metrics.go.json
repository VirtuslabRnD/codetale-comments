[
  {
    "id" : "21b65b28-8e1c-4a0c-96ef-8db99e528545",
    "prId" : 98731,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/98731#pullrequestreview-592701675",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "314e8aa5-cb70-4510-850f-e06f153c6617",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "@logicalhan label per namespace has cardinality issues, right?",
        "createdAt" : "2021-02-03T21:26:32Z",
        "updatedAt" : "2021-02-17T05:56:58Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "49b9ef4e-6b58-4d69-ab76-93b77774598d",
        "parentId" : "314e8aa5-cb70-4510-850f-e06f153c6617",
        "authorId" : "09e31512-b413-47a1-bc83-20b5a77064ee",
        "body" : "Yes it's essentially like 'resources' in the request metrics. But this tends to be problematic only in aggregate. We won't be able to promote this one to STABLE status until we have the mechanism for latching an explicit expected valueset on metric labels. @YoyinZyc has agreed to take that feature on sometime in the near future: https://github.com/kubernetes/kubernetes/issues/76302 for tracking.",
        "createdAt" : "2021-02-03T21:41:20Z",
        "updatedAt" : "2021-02-17T05:56:58Z",
        "lastEditedBy" : "09e31512-b413-47a1-bc83-20b5a77064ee",
        "tags" : [
        ]
      },
      {
        "id" : "cad62d00-d288-4ec2-b0d7-830c531a5fa2",
        "parentId" : "314e8aa5-cb70-4510-850f-e06f153c6617",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "> Yes it's essentially like 'resources' in the request metrics. But this tends to be problematic only in aggregate. We won't be able to promote this one to STABLE status until we have the mechanism for latching an explicit expected valueset on metric labels.\r\n\r\nI can't tell if you're saying this is problematic and should be dropped, or is ok for now because https://github.com/kubernetes/kubernetes/issues/76302 will do something to improve things in the future?",
        "createdAt" : "2021-02-17T22:34:47Z",
        "updatedAt" : "2021-02-17T22:34:48Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "31f8840d-523b-4f61-a579-75d9a5ae158b",
        "parentId" : "314e8aa5-cb70-4510-850f-e06f153c6617",
        "authorId" : "09e31512-b413-47a1-bc83-20b5a77064ee",
        "body" : "It is problematic, but we have worse offenders currently, which means that if this becomes problematic, then other metrics (with considerable operational significance) will be suffering as well. I guess what I'm trying to say is that it's probably safe to wave this in, because if this is a problem, then we have other really big problems already committed to k8s. \r\n\r\nhttps://github.com/kubernetes/kubernetes/issues/76302 will improve this front in the future and provide an escape hatch. ",
        "createdAt" : "2021-02-17T22:46:49Z",
        "updatedAt" : "2021-02-17T22:46:49Z",
        "lastEditedBy" : "09e31512-b413-47a1-bc83-20b5a77064ee",
        "tags" : [
        ]
      },
      {
        "id" : "4b07bbaa-1d5b-43f7-8f49-e6df64c44259",
        "parentId" : "314e8aa5-cb70-4510-850f-e06f153c6617",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "which is a better approach:\r\n* adding a namespace dimension here to start and hoping #76302 gets resolved before we want to promote this metric to stable?\r\n* starting with just `code` which can be monitored/aggregated to indicate an issue, and adding `namespace` later before promoting to stable if #76302 looks to be resolved",
        "createdAt" : "2021-02-17T22:50:04Z",
        "updatedAt" : "2021-02-17T22:50:13Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "50b3fba1-ef21-4b92-852a-69d8a93c556c",
        "parentId" : "314e8aa5-cb70-4510-850f-e06f153c6617",
        "authorId" : "09e31512-b413-47a1-bc83-20b5a77064ee",
        "body" : "I'd opt for 1, for simplicity. We're introducing two escape hatches: the first (targeted in this release) allows us to shunt a metric off completely, while the second will allow us to explicitly bind values for a label to an expected set of label values (that will probably land in the following release). ",
        "createdAt" : "2021-02-17T22:57:48Z",
        "updatedAt" : "2021-02-17T22:57:48Z",
        "lastEditedBy" : "09e31512-b413-47a1-bc83-20b5a77064ee",
        "tags" : [
        ]
      },
      {
        "id" : "d52d4b02-8a1e-4c69-8556-1316e2836011",
        "parentId" : "314e8aa5-cb70-4510-850f-e06f153c6617",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "ok",
        "createdAt" : "2021-02-17T22:58:54Z",
        "updatedAt" : "2021-02-17T22:58:54Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "bbce0468d416989cc0904c9826b2fc491366a5a9",
    "line" : 40,
    "diffHunk" : "@@ -1,1 +38,42 @@\t\t\tStabilityLevel: metrics.ALPHA,\n\t\t},\n\t\t[]string{\"namespace\", \"code\"},\n\t)\n\tsyncLatency = metrics.NewHistogramVec("
  },
  {
    "id" : "43a28923-e1b8-42a8-87be-ae6dcdda5528",
    "prId" : 98731,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/98731#pullrequestreview-582816423",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "eec1c758-ea45-4a8a-981a-6ec31fbadf0d",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "cc @kubernetes/sig-instrumentation-pr-reviews ",
        "createdAt" : "2021-02-03T21:27:28Z",
        "updatedAt" : "2021-02-17T05:56:58Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "bbce0468d416989cc0904c9826b2fc491366a5a9",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +30,34 @@const RootCACertPublisher = \"root_ca_cert_publisher\"\n\nvar (\n\tsyncCounter = metrics.NewCounterVec(\n\t\t&metrics.CounterOpts{"
  },
  {
    "id" : "3f1cbb1b-e278-45c4-be80-38dae0c69c9d",
    "prId" : 98731,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/98731#pullrequestreview-582932549",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6ecc69f5-0967-4719-a0b6-62c44999c174",
        "parentId" : null,
        "authorId" : "31a2ac00-6c67-4307-a4bc-bfd13f41ef27",
        "body" : "How/why is this metric useful? Is there an expected \"good\" range/rate for the values? I'm not sure why a root CA cert publisher would be doing namespace syncs (seems like an implementation detail I wouldn't care about until it breaks :smile:) so it would be nice to either update the help text or add a comment.",
        "createdAt" : "2021-02-03T23:31:15Z",
        "updatedAt" : "2021-02-17T05:56:58Z",
        "lastEditedBy" : "31a2ac00-6c67-4307-a4bc-bfd13f41ef27",
        "tags" : [
        ]
      },
      {
        "id" : "5d6d1292-ee64-4853-9c93-1b3c8e4b4af9",
        "parentId" : "6ecc69f5-0967-4719-a0b6-62c44999c174",
        "authorId" : "f64c354b-61cb-4b89-b58f-f464e7ad4f94",
        "body" : "this is essential for BoundServiceAccountTokenTolume, which can help us troubleshoot without looking into the logs. we hope it can be near 100% :) ",
        "createdAt" : "2021-02-03T23:49:53Z",
        "updatedAt" : "2021-02-17T05:56:58Z",
        "lastEditedBy" : "f64c354b-61cb-4b89-b58f-f464e7ad4f94",
        "tags" : [
        ]
      },
      {
        "id" : "fcc3d5ed-e696-44b3-9a14-e6711aa969d1",
        "parentId" : "6ecc69f5-0967-4719-a0b6-62c44999c174",
        "authorId" : "31a2ac00-6c67-4307-a4bc-bfd13f41ef27",
        "body" : "This is a total counter, split out by label, so how would one derive %? Would that be `metric{code=bad} / sum{metric}`?",
        "createdAt" : "2021-02-04T00:03:41Z",
        "updatedAt" : "2021-02-17T05:56:58Z",
        "lastEditedBy" : "31a2ac00-6c67-4307-a4bc-bfd13f41ef27",
        "tags" : [
        ]
      },
      {
        "id" : "dbff13ff-0120-4f48-aa12-81cd7589ef2a",
        "parentId" : "6ecc69f5-0967-4719-a0b6-62c44999c174",
        "authorId" : "f64c354b-61cb-4b89-b58f-f464e7ad4f94",
        "body" : "yes, success ratio: `metric[code=200]/sum`",
        "createdAt" : "2021-02-04T00:22:12Z",
        "updatedAt" : "2021-02-17T05:56:58Z",
        "lastEditedBy" : "f64c354b-61cb-4b89-b58f-f464e7ad4f94",
        "tags" : [
        ]
      }
    ],
    "commit" : "bbce0468d416989cc0904c9826b2fc491366a5a9",
    "line" : 37,
    "diffHunk" : "@@ -1,1 +35,39 @@\t\t\tSubsystem:      RootCACertPublisher,\n\t\t\tName:           \"sync_total\",\n\t\t\tHelp:           \"Number of namespace syncs happened in root ca cert publisher.\",\n\t\t\tStabilityLevel: metrics.ALPHA,\n\t\t},"
  },
  {
    "id" : "e95a64de-c47a-4d70-9dd6-3edf6f18fe52",
    "prId" : 98731,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/98731#pullrequestreview-591859391",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fa37eaa7-6554-4282-8093-564175fa53cb",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "if this ends up being 0, should it be reset to 500?",
        "createdAt" : "2021-02-16T16:21:30Z",
        "updatedAt" : "2021-02-17T05:56:58Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "d8e8f7f3-9b35-4704-b7bf-fbfd3f4bd963",
        "parentId" : "fa37eaa7-6554-4282-8093-564175fa53cb",
        "authorId" : "f64c354b-61cb-4b89-b58f-f464e7ad4f94",
        "body" : "done",
        "createdAt" : "2021-02-17T05:57:07Z",
        "updatedAt" : "2021-02-17T05:57:08Z",
        "lastEditedBy" : "f64c354b-61cb-4b89-b58f-f464e7ad4f94",
        "tags" : [
        ]
      }
    ],
    "commit" : "bbce0468d416989cc0904c9826b2fc491366a5a9",
    "line" : 59,
    "diffHunk" : "@@ -1,1 +57,61 @@\t\tcode = \"200\"\n\t} else if se, ok := err.(*apierrors.StatusError); ok && se.Status().Code != 0 {\n\t\tcode = strconv.Itoa(int(se.Status().Code))\n\t}\n\tsyncLatency.WithLabelValues(ns, code).Observe(time.Since(start).Seconds())"
  }
]