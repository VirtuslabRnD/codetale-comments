[
  {
    "id" : "402b5680-c0bf-4366-9bb6-65f0a95261d0",
    "prId" : 79933,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/79933#pullrequestreview-259481229",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6f0c5914-d3c7-476f-abbd-02a46f1b7ff6",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "append(f.objects, d, rs1, rs2, objects...)",
        "createdAt" : "2019-07-09T12:50:58Z",
        "updatedAt" : "2019-07-09T13:01:07Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "caeb0726-6d4d-4fa6-b5f7-e4e0bc3dd6ef",
        "parentId" : "6f0c5914-d3c7-476f-abbd-02a46f1b7ff6",
        "authorId" : "efa0987e-7d25-471d-9dea-9daaf77c2120",
        "body" : "I've tried, but it doesn't compile. I guess it's because rs1,rs2 has different type than objects.",
        "createdAt" : "2019-07-09T12:58:22Z",
        "updatedAt" : "2019-07-09T13:01:07Z",
        "lastEditedBy" : "efa0987e-7d25-471d-9dea-9daaf77c2120",
        "tags" : [
        ]
      }
    ],
    "commit" : "3e363c5c4681d8cc0a9303b4d9d7bfe952132f5e",
    "line" : 50,
    "diffHunk" : "@@ -1,1 +980,984 @@\tf.rsLister = append(f.rsLister, rs1, rs2)\n\tf.podLister = append(f.podLister, pods...)\n\tf.objects = append(f.objects, d, rs1, rs2)\n\tf.objects = append(f.objects, objects...)\n"
  },
  {
    "id" : "4cb3adbb-a3f5-4c9c-a8c3-83d7c43eaab1",
    "prId" : 79933,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/79933#pullrequestreview-259481229",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ef6aeef0-4ef5-4112-8adc-1347e81e20c5",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "please add b.ResetTimer()",
        "createdAt" : "2019-07-09T12:52:44Z",
        "updatedAt" : "2019-07-09T13:01:07Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "67c6c615-cbf7-48f6-b680-00e0d54abb7b",
        "parentId" : "ef6aeef0-4ef5-4112-8adc-1347e81e20c5",
        "authorId" : "efa0987e-7d25-471d-9dea-9daaf77c2120",
        "body" : "Done",
        "createdAt" : "2019-07-09T12:57:31Z",
        "updatedAt" : "2019-07-09T13:01:07Z",
        "lastEditedBy" : "efa0987e-7d25-471d-9dea-9daaf77c2120",
        "tags" : [
        ]
      }
    ],
    "commit" : "3e363c5c4681d8cc0a9303b4d9d7bfe952132f5e",
    "line" : 62,
    "diffHunk" : "@@ -1,1 +992,996 @@\tinformers.Start(stopCh)\n\n\tb.ReportAllocs()\n\tb.ResetTimer()\n\tfor n := 0; n < b.N; n++ {"
  },
  {
    "id" : "63dae56f-6947-4840-9716-43a04e09fdec",
    "prId" : 44324,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/44324#pullrequestreview-32108108",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "be86134e-b4bf-4b2c-a5e6-362aa983593a",
        "parentId" : null,
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "Can you also print the subresources in the error message?",
        "createdAt" : "2017-04-11T11:44:37Z",
        "updatedAt" : "2017-04-11T11:44:37Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      },
      {
        "id" : "abc23def-bcc8-45df-b2a4-135e9214c363",
        "parentId" : "be86134e-b4bf-4b2c-a5e6-362aa983593a",
        "authorId" : "54f3e5e9-1cb7-407a-b12d-39bb41fa5e9e",
        "body" : "I think the next line already printed, \r\n```console\r\n\tdeployment_controller_test.go:230: Expected\r\n\t\t\ttesting.UpdateActionImpl{ActionImpl:testing.ActionImpl{Namespace:\"default\", Verb:\"update\", Resource:schema.GroupVersionResource{Group:\"\", Version:\"\", Resource:\"deployments\"}, Subresource:\"\"}, Object:(*v1beta1.Deployment)(0xc4205cc000)}\r\n\t\tgot\r\n\t\t\ttesting.UpdateActionImpl{ActionImpl:testing.ActionImpl{Namespace:\"default\", Verb:\"update\", Resource:schema.GroupVersionResource{Group:\"extensions\", Version:\"v1beta1\", Resource:\"deployments\"}, Subresource:\"status\"}, Object:(*v1beta1.Deployment)(0xc42006f400)}\r\n```\r\nis this what you want ?",
        "createdAt" : "2017-04-11T13:27:22Z",
        "updatedAt" : "2017-04-11T13:27:34Z",
        "lastEditedBy" : "54f3e5e9-1cb7-407a-b12d-39bb41fa5e9e",
        "tags" : [
        ]
      },
      {
        "id" : "9de86730-0ca5-4c2f-be7f-6ae410ebc8e9",
        "parentId" : "be86134e-b4bf-4b2c-a5e6-362aa983593a",
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "Oh, that's fine. Thanks",
        "createdAt" : "2017-04-11T13:40:59Z",
        "updatedAt" : "2017-04-11T13:40:59Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      }
    ],
    "commit" : "b3f48f736f0d7e22f57253c333ec0381a3aa27ee",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +228,232 @@\t\texpectedAction := f.actions[i]\n\t\tif !(expectedAction.Matches(action.GetVerb(), action.GetResource().Resource) && action.GetSubresource() == expectedAction.GetSubresource()) {\n\t\t\tf.t.Errorf(\"Expected\\n\\t%#v\\ngot\\n\\t%#v\", expectedAction, action)\n\t\t\tcontinue\n\t\t}"
  },
  {
    "id" : "5de30c35-8ea6-43db-97ee-28700f55ce08",
    "prId" : 42938,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/42938#pullrequestreview-27699322",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4e25a1e4-d429-4c65-a23e-2ad24ee59bcd",
        "parentId" : null,
        "authorId" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "body" : "By convention we don't use `_` in the function name, right?",
        "createdAt" : "2017-03-17T21:43:36Z",
        "updatedAt" : "2017-03-17T22:39:37Z",
        "lastEditedBy" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "tags" : [
        ]
      },
      {
        "id" : "1616c96b-a0e5-4c20-b68d-ce8392c2e873",
        "parentId" : "4e25a1e4-d429-4c65-a23e-2ad24ee59bcd",
        "authorId" : "97dce74b-9a86-4bd2-812f-a7a70df47473",
        "body" : "Go style does not use `_` for separating words, but sometimes it is used as a prefix or suffix to indicate \"this is an internal implementation detail and you shouldn't usually access it directly\". Since this is just a test, I didn't think it was worth trying to figure out a meaningful name to give `run_()`. I just needed to move it out of the way of the `run()` function that doesn't have the extra `bool`.",
        "createdAt" : "2017-03-17T22:16:00Z",
        "updatedAt" : "2017-03-17T22:39:37Z",
        "lastEditedBy" : "97dce74b-9a86-4bd2-812f-a7a70df47473",
        "tags" : [
        ]
      }
    ],
    "commit" : "b4b8fdbca32211fd193ca5475294b861371b3956",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +204,208 @@}\n\nfunc (f *fixture) run_(deploymentName string, expectError bool) {\n\tc, informers := f.newController()\n\tstopCh := make(chan struct{})"
  },
  {
    "id" : "029444ed-418f-49d9-bd8f-2c9913a4d423",
    "prId" : 42938,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/42938#pullrequestreview-27700883",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "335f81a8-c33d-4b86-b5a0-a6b847fc50cc",
        "parentId" : null,
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "I use the words \"being Deleted\" to mean deletionTimestamp!=nil and \"deleted\" to mean the object is not visible via REST API anymore.",
        "createdAt" : "2017-03-17T22:15:05Z",
        "updatedAt" : "2017-03-17T22:39:37Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      },
      {
        "id" : "5f69edf2-c832-4012-9204-d882459913b9",
        "parentId" : "335f81a8-c33d-4b86-b5a0-a6b847fc50cc",
        "authorId" : "97dce74b-9a86-4bd2-812f-a7a70df47473",
        "body" : "I think both interpretations of \"deleted\" have merit. My interpretation is that some client already issued the DELETE request and it succeeded. Almost everything should consider a controller with non-nil DeletionTimestamp as not existing anymore, so calling it \"deleted\" in the past tense reinforces that.",
        "createdAt" : "2017-03-17T22:29:07Z",
        "updatedAt" : "2017-03-17T22:39:37Z",
        "lastEditedBy" : "97dce74b-9a86-4bd2-812f-a7a70df47473",
        "tags" : [
        ]
      }
    ],
    "commit" : "b4b8fdbca32211fd193ca5475294b861371b3956",
    "line" : 50,
    "diffHunk" : "@@ -1,1 +290,294 @@\t// Lister (cache) says NOT deleted.\n\tf.dLister = append(f.dLister, d)\n\t// Bare client says it IS deleted. This should be presumed more up-to-date.\n\tnow := metav1.Now()\n\td2.DeletionTimestamp = &now"
  },
  {
    "id" : "eac27ea8-5b6f-44ff-9761-172d3afddf4d",
    "prId" : 39088,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/39088#pullrequestreview-15121904",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "26fdddbd-da24-4bde-9f6c-adc9ac7926d7",
        "parentId" : null,
        "authorId" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "body" : "Should we use `SelectorUpdateAnnotation` instead of `CreationTimestamp`? (We can keep CreationTimestamp in this test, but make the older one's selector updated last)",
        "createdAt" : "2017-01-03T22:10:37Z",
        "updatedAt" : "2017-01-10T11:57:55Z",
        "lastEditedBy" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "tags" : [
        ]
      },
      {
        "id" : "5cb959ab-88e0-425b-9055-d919654d98f4",
        "parentId" : "26fdddbd-da24-4bde-9f6c-adc9ac7926d7",
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "`SelectorUpdateAnnotation` should be tested in the util package but it seems we have no unit tests there? I will add one there.",
        "createdAt" : "2017-01-04T14:39:36Z",
        "updatedAt" : "2017-01-10T11:57:55Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      }
    ],
    "commit" : "43159a48f322b0fe6fce7c1e8aa4da46cac3578a",
    "line" : null,
    "diffHunk" : "@@ -1,1 +304,308 @@\tfoo.CreationTimestamp = now\n\tbar := newDeployment(\"bar\", 1, nil, nil, nil, map[string]string{\"foo\": \"bar\", \"app\": \"baz\"})\n\tbar.CreationTimestamp = later\n\n\tf.dLister = append(f.dLister, foo, bar)"
  },
  {
    "id" : "9ef4178c-1de8-4ada-957d-e044a7ab0021",
    "prId" : 39088,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/39088#pullrequestreview-14999480",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d862f7db-9f88-4b7f-9a93-ee902a6efa38",
        "parentId" : null,
        "authorId" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "body" : "Same suggestions here regarding selectors and CreationTimestamp ",
        "createdAt" : "2017-01-03T22:15:00Z",
        "updatedAt" : "2017-01-10T11:57:55Z",
        "lastEditedBy" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "tags" : [
        ]
      },
      {
        "id" : "8bf3eb12-18a4-4dcc-bcf7-ddaed3c6991c",
        "parentId" : "d862f7db-9f88-4b7f-9a93-ee902a6efa38",
        "authorId" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "body" : "If this is changed, comments need to be updated as well ",
        "createdAt" : "2017-01-03T22:17:20Z",
        "updatedAt" : "2017-01-10T11:57:55Z",
        "lastEditedBy" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "tags" : [
        ]
      }
    ],
    "commit" : "43159a48f322b0fe6fce7c1e8aa4da46cac3578a",
    "line" : null,
    "diffHunk" : "@@ -1,1 +331,335 @@\tfoo.CreationTimestamp = now\n\tbar := newDeployment(\"bar\", 1, nil, nil, nil, map[string]string{\"foo\": \"bar\", \"app\": \"baz\"})\n\tbar.CreationTimestamp = later\n\n\tf.dLister = append(f.dLister, foo, bar)"
  },
  {
    "id" : "986c532f-596b-43e4-8fa1-38d0e870bc3d",
    "prId" : 39088,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/39088#pullrequestreview-15289985",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "175d30ae-f14a-4f8f-a412-f4835f72803d",
        "parentId" : null,
        "authorId" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "body" : "Remove this and just do `filterInformerActions` on `f.client.Actions()`?",
        "createdAt" : "2017-01-03T22:32:06Z",
        "updatedAt" : "2017-01-10T11:57:55Z",
        "lastEditedBy" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "tags" : [
        ]
      },
      {
        "id" : "e1cb3df0-00e3-4cdd-80b7-9a71d29b6ff7",
        "parentId" : "175d30ae-f14a-4f8f-a412-f4835f72803d",
        "authorId" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "body" : "Remove this and just do `filterInformerActions` on `f.client.Actions()`. After it's filtered, there should be only update actions. Then you can just check d.Name and d.Annotations.",
        "createdAt" : "2017-01-04T19:24:08Z",
        "updatedAt" : "2017-01-10T11:57:55Z",
        "lastEditedBy" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "tags" : [
        ]
      },
      {
        "id" : "42c83aa6-f08e-4645-bb52-2ef2a838df52",
        "parentId" : "175d30ae-f14a-4f8f-a412-f4835f72803d",
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "I am not gaining really anything by doing this. I still have a slice of actions that I need to traverse, cast to UpdateAction, get the object, and check the annotation.",
        "createdAt" : "2017-01-05T11:48:47Z",
        "updatedAt" : "2017-01-10T11:57:55Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      }
    ],
    "commit" : "43159a48f322b0fe6fce7c1e8aa4da46cac3578a",
    "line" : null,
    "diffHunk" : "@@ -1,1 +414,418 @@\n\tfor _, a := range filterInformerActions(f.client.Actions()) {\n\t\taction, ok := a.(core.UpdateAction)\n\t\tif !ok {\n\t\t\tcontinue"
  },
  {
    "id" : "1bc90a69-1cd2-4905-a003-3dac638ba25d",
    "prId" : 39088,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/39088#pullrequestreview-15182725",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b300b7b2-8ce9-470d-9b8e-48a06441e054",
        "parentId" : null,
        "authorId" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "body" : "Optional: pass something like `DeploymentOptions` to `newDeployment` instead of 6 parameters.",
        "createdAt" : "2017-01-03T22:57:37Z",
        "updatedAt" : "2017-01-10T11:57:55Z",
        "lastEditedBy" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "tags" : [
        ]
      },
      {
        "id" : "0819cf76-9ada-427d-b870-9e24869c9150",
        "parentId" : "b300b7b2-8ce9-470d-9b8e-48a06441e054",
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "This is a significant test refactor that I wasn't planning on undertaking here.",
        "createdAt" : "2017-01-04T14:34:21Z",
        "updatedAt" : "2017-01-10T11:57:55Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      },
      {
        "id" : "190c99fc-bc88-4353-b510-87738956ed70",
        "parentId" : "b300b7b2-8ce9-470d-9b8e-48a06441e054",
        "authorId" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "body" : "agree",
        "createdAt" : "2017-01-04T19:41:41Z",
        "updatedAt" : "2017-01-10T11:57:55Z",
        "lastEditedBy" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "tags" : [
        ]
      }
    ],
    "commit" : "43159a48f322b0fe6fce7c1e8aa4da46cac3578a",
    "line" : 94,
    "diffHunk" : "@@ -1,1 +301,305 @@\tlater := metav1.Time{Time: now.Add(time.Minute)}\n\n\tfoo := newDeployment(\"foo\", 1, nil, nil, nil, map[string]string{\"foo\": \"bar\"})\n\tfoo.CreationTimestamp = now\n\tbar := newDeployment(\"bar\", 1, nil, nil, nil, map[string]string{\"foo\": \"bar\", \"app\": \"baz\"})"
  },
  {
    "id" : "f58c9037-cd8e-4584-ba19-5fc074592008",
    "prId" : 36748,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/36748#pullrequestreview-12635101",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "714055e7-36ca-4c5e-b95a-3553e51378cf",
        "parentId" : null,
        "authorId" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "body" : "What's this test for? Its name implies \"don't do anything\", but we update deployment status",
        "createdAt" : "2016-12-12T22:28:01Z",
        "updatedAt" : "2016-12-15T18:55:26Z",
        "lastEditedBy" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "tags" : [
        ]
      },
      {
        "id" : "ed6869c3-6459-4436-9534-0140eb7f134c",
        "parentId" : "714055e7-36ca-4c5e-b95a-3553e51378cf",
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "We update the status of the Deployment and there was a mutation in sync.go#L585 that was blocking this update (we were mutating both the old and the new version of the status hence there was no difference and nothing was updated).",
        "createdAt" : "2016-12-13T09:28:26Z",
        "updatedAt" : "2016-12-15T18:55:26Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      }
    ],
    "commit" : "c87e627b9b72fca8ecb6936a3cb2cd03dd998b80",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +234,238 @@\tf.objects = append(f.objects, d)\n\n\tf.expectUpdateDeploymentStatusAction(d)\n\tf.run(getKey(d, t))\n}"
  },
  {
    "id" : "57b6c400-ba53-4f1d-b30e-6dde129ce50f",
    "prId" : 34552,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/34552#pullrequestreview-3749613",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "142f9bcf-f9b6-4513-b293-293e64a2e07a",
        "parentId" : null,
        "authorId" : "63ae7701-0f8c-4ae2-9295-07a4434026ce",
        "body" : "informerActions will be always 0 now. I think you can remove `informerActions` now. It will make it more readable.\n",
        "createdAt" : "2016-10-11T19:42:54Z",
        "updatedAt" : "2016-10-11T19:43:19Z",
        "lastEditedBy" : "63ae7701-0f8c-4ae2-9295-07a4434026ce",
        "tags" : [
        ]
      }
    ],
    "commit" : "2ad0fbd99ab3ca0dcf6d100a12f8936325700b47",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +197,201 @@\tinformerActions := 0\n\tfor i, action := range actions {\n\t\tif len(f.actions)+informerActions < i+1 {\n\t\t\tf.t.Errorf(\"%d unexpected actions: %+v\", len(actions)-len(f.actions), actions[i:])\n\t\t\tbreak"
  },
  {
    "id" : "71b65c7f-156d-4ed9-94a5-c3a2bb6ae8c1",
    "prId" : 26680,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7dd5251a-ad74-4b2f-9957-6d5b21e0f3c9",
        "parentId" : null,
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "This is a nice catch. For a moment I thought the old test was correct, but after some debugging I realized you are right. cc @janetkuo (for she maintains the deployment API).\n\nThis is a good example of why a minimum registry in the fake clientset is useful, because _i)_syncDeployment() has multiple interactions with the API server and its behavior is driven by the states stored in the API server, and _ii)_ we want to verify the sequence of the client requests, which currently cannot be done in an integration test.\n\nAn alternative solution is running this as an integration test, and add a wrapper around a real clientset to record all the requests sent. cc @lavalamp.\n",
        "createdAt" : "2016-06-06T21:09:58Z",
        "updatedAt" : "2016-06-28T19:31:35Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      },
      {
        "id" : "6ff2ee7e-436f-4ce3-b8ff-777fa5c99f6e",
        "parentId" : "7dd5251a-ad74-4b2f-9957-6d5b21e0f3c9",
        "authorId" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "body" : "Thanks, this is correct. \nThe controller first syncs the deployment and then creates an rs with 1 replica immediately (`expectCreateRSAction`), update the deployment's revision (`expectUpdateDeploymentAction`), and then list pods to calculate deployment status (`expectListPodAction`). \n",
        "createdAt" : "2016-06-07T18:28:06Z",
        "updatedAt" : "2016-06-28T19:31:35Z",
        "lastEditedBy" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "tags" : [
        ]
      }
    ],
    "commit" : "a58b4cf59df732d432ae10a39647f843e26b6d9b",
    "line" : null,
    "diffHunk" : "@@ -1,1 +1049,1053 @@\tf.expectUpdateDeploymentAction(d)\n\tf.expectUpdateDeploymentStatusAction(d)\n\n\tf.run(getKey(d, t))\n}"
  },
  {
    "id" : "2f7422d9-68b0-4f2b-be4e-26341b151c6b",
    "prId" : 23467,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8250f493-53b3-41d2-a86e-d11fd2a171d4",
        "parentId" : null,
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "On master this test fails with:\n\n```\n=== RUN TestDeploymentController_dontSyncDeploymentsWithEmptyPodSelector\n--- FAIL: TestDeploymentController_dontSyncDeploymentsWithEmptyPodSelector (0.00s)\n        deployment_controller_test.go:810: unexpected action: core.CreateActionImpl{ActionImpl:core.ActionImpl{Namespace:\"default\", Verb:\"create\", Resource:\"replicasets\", Subresource:\"\"}, Object:(*extensions.ReplicaSet)(0xc2081238c0)}\n        deployment_controller_test.go:810: unexpected action: core.UpdateActionImpl{ActionImpl:core.ActionImpl{Namespace:\"default\", Verb:\"update\", Resource:\"deployments\", Subresource:\"\"}, Object:(*extensions.Deployment)(0xc208081b80)}\n        deployment_controller_test.go:810: unexpected action: core.UpdateActionImpl{ActionImpl:core.ActionImpl{Namespace:\"\", Verb:\"update\", Resource:\"replicasets\", Subresource:\"\"}, Object:(*extensions.ReplicaSet)(0xc208123b00)}\n        deployment_controller_test.go:810: unexpected action: core.ListActionImpl{ActionImpl:core.ActionImpl{Namespace:\"\", Verb:\"list\", Resource:\"pods\", Subresource:\"\"}, ListRestrictions:core.ListRestrictions{Labels:labels.nothingSelector{}, Fields:fields.andTerm{}}}\n        deployment_controller_test.go:810: unexpected action: core.UpdateActionImpl{ActionImpl:core.ActionImpl{Namespace:\"default\", Verb:\"update\", Resource:\"deployments\", Subresource:\"status\"}, Object:(*extensions.Deployment)(0xc2081b6500)}\n        deployment_controller_test.go:812: expected deployment controller to not take action\nFAIL\n```\n",
        "createdAt" : "2016-03-25T18:03:16Z",
        "updatedAt" : "2016-03-28T17:13:28Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      },
      {
        "id" : "8b801f63-db71-4b4b-9ada-050bc2d95489",
        "parentId" : "8250f493-53b3-41d2-a86e-d11fd2a171d4",
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "Clarification: WIthout the controller change, this test fails, as expected.\n",
        "createdAt" : "2016-03-28T17:12:39Z",
        "updatedAt" : "2016-03-28T17:13:28Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      }
    ],
    "commit" : "c4305762b2a98d509032da202880353ad90eadf1",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +813,817 @@\t\tt.Logf(\"unexpected action: %#v\", action)\n\t}\n\tt.Errorf(\"expected deployment controller to not take action\")\n}"
  },
  {
    "id" : "c6ca0544-e82d-4d5f-8cb7-a26dac7f8a01",
    "prId" : 22223,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0bfbf1b6-5933-49a0-9256-845724fb796b",
        "parentId" : null,
        "authorId" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "body" : "Just to confirm - you didn't change code in L37 - 131 other than adding `newRSWithStatus` and moving other function up, correct?\n",
        "createdAt" : "2016-03-01T00:58:59Z",
        "updatedAt" : "2016-03-01T00:58:59Z",
        "lastEditedBy" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "tags" : [
        ]
      },
      {
        "id" : "36043028-160c-414e-82f0-390c0accdaa6",
        "parentId" : "0bfbf1b6-5933-49a0-9256-845724fb796b",
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "Yes\n",
        "createdAt" : "2016-03-01T01:01:35Z",
        "updatedAt" : "2016-03-01T01:01:35Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      }
    ],
    "commit" : "2019d18e9a4af3f2de6a95c81645342503b1c5b1",
    "line" : 99,
    "diffHunk" : "@@ -1,1 +130,134 @@\treturn api.ListOptions{}\n}\n\nfunc TestDeploymentController_reconcileNewReplicaSet(t *testing.T) {\n\ttests := []struct {"
  },
  {
    "id" : "5196fc56-950a-426d-aa6c-b43742f42ae1",
    "prId" : 20368,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2e0ddab3-4409-45ed-93e7-be0a84f4cc9a",
        "parentId" : null,
        "authorId" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "body" : "Maybe keep the test for `reconcileOldRCs`, and add tests for `scaleDownOldRCsForRollingUpdate` and `cleanupUnhealthyReplicas`?\n",
        "createdAt" : "2016-02-04T19:09:23Z",
        "updatedAt" : "2016-02-08T23:44:50Z",
        "lastEditedBy" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "tags" : [
        ]
      }
    ],
    "commit" : "86aea1d59c42de15afbff5e2388e4b764bd134fc",
    "line" : null,
    "diffHunk" : "@@ -1,1 +387,391 @@}\n\nfunc TestDeploymentController_scaleDownOldRCsForRollingUpdate(t *testing.T) {\n\ttests := []struct {\n\t\tdeploymentReplicas  int"
  },
  {
    "id" : "e10bad48-5dbb-435f-b641-eb899dceae7b",
    "prId" : 17398,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b50af107-4893-4254-bc6f-c8ab7ae4b51c",
        "parentId" : null,
        "authorId" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "body" : "@wojtek-t @nikhiljindal In test, I use controller.NoResyncPeriodFunc\n",
        "createdAt" : "2015-11-19T21:13:02Z",
        "updatedAt" : "2015-12-18T03:59:03Z",
        "lastEditedBy" : "01c14569-b640-48af-98cc-aa9dd12da7b6",
        "tags" : [
        ]
      }
    ],
    "commit" : "bd1200ba66f29b4816836dd8d6f2fdc23126bb77",
    "line" : 130,
    "diffHunk" : "@@ -1,1 +365,369 @@func (f *fixture) run(deploymentName string) {\n\tf.client = testclient.NewSimpleFake(f.objects)\n\tc := NewDeploymentController(f.client, controller.NoResyncPeriodFunc)\n\tc.rcStoreSynced = alwaysReady\n\tc.podStoreSynced = alwaysReady"
  }
]