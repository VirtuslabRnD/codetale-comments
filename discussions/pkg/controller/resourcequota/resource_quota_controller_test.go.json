[
  {
    "id" : "f1ff7d8d-774d-43c4-8b50-f5932d403409",
    "prId" : 74747,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/74747#pullrequestreview-214247461",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "30210808-50e7-4645-9265-5facd036fe85",
        "parentId" : null,
        "authorId" : "093f4806-3f92-4191-a80b-4e6cf3d6ffc0",
        "body" : "what about check expectSyncBlocked(...)?",
        "createdAt" : "2019-03-13T22:41:50Z",
        "updatedAt" : "2019-03-27T03:16:17Z",
        "lastEditedBy" : "093f4806-3f92-4191-a80b-4e6cf3d6ffc0",
        "tags" : [
        ]
      }
    ],
    "commit" : "bef996d0a4e7a8ca887f1a6aa8165daf200fa016",
    "line" : 281,
    "diffHunk" : "@@ -1,1 +1091,1095 @@\t// Wait until sync discovers the change\n\ttime.Sleep(1 * time.Second)\n\n\t// Remove the error from being returned and see if the quota sync is still working\n\tfakeDiscoveryClient.setPreferredResources(serverResources)"
  },
  {
    "id" : "56bac3e8-c6ee-4991-8f35-bc6e5c2ad6f9",
    "prId" : 74747,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/74747#pullrequestreview-216481213",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b340d7fe-b47c-457c-94c4-067e7e8e36e8",
        "parentId" : null,
        "authorId" : "093f4806-3f92-4191-a80b-4e6cf3d6ffc0",
        "body" : "similarly check expectSyncBlocked(...)",
        "createdAt" : "2019-03-13T22:43:07Z",
        "updatedAt" : "2019-03-27T03:16:17Z",
        "lastEditedBy" : "093f4806-3f92-4191-a80b-4e6cf3d6ffc0",
        "tags" : [
        ]
      },
      {
        "id" : "2f6c2d6f-e741-46ad-b3c3-856231d38d64",
        "parentId" : "b340d7fe-b47c-457c-94c4-067e7e8e36e8",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "won't that flake?  of course, time can flake.",
        "createdAt" : "2019-03-14T15:30:00Z",
        "updatedAt" : "2019-03-27T03:16:17Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "eed481e2-617a-4f28-b715-5da46801a41f",
        "parentId" : "b340d7fe-b47c-457c-94c4-067e7e8e36e8",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "the point of this PR is that sync won't block...",
        "createdAt" : "2019-03-20T00:24:11Z",
        "updatedAt" : "2019-03-27T03:16:17Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "bef996d0a4e7a8ca887f1a6aa8165daf200fa016",
    "line" : 297,
    "diffHunk" : "@@ -1,1 +1107,1111 @@\t// Wait until sync discovers the change\n\ttime.Sleep(1 * time.Second)\n\n\t// Put the resources back to normal and ensure quota sync recovers\n\tfakeDiscoveryClient.setPreferredResources(serverResources)"
  },
  {
    "id" : "352c24b3-0a68-4a04-9a12-d0dd67f0939c",
    "prId" : 66351,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/66351#pullrequestreview-142459936",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "46ec989b-2d0c-40e5-9507-1420fbd6bdfc",
        "parentId" : null,
        "authorId" : "8e9f49fc-1050-4601-b81c-83bf660c5eb8",
        "body" : "i'm not seeing the difference between this test case and the previous one.",
        "createdAt" : "2018-07-31T19:52:30Z",
        "updatedAt" : "2018-08-03T05:36:42Z",
        "lastEditedBy" : "8e9f49fc-1050-4601-b81c-83bf660c5eb8",
        "tags" : [
        ]
      },
      {
        "id" : "307747fa-a052-4158-96c5-2f690a51a9cf",
        "parentId" : "46ec989b-2d0c-40e5-9507-1420fbd6bdfc",
        "authorId" : "51f59c69-efc0-451a-bd8f-d9fa2c281fd3",
        "body" : "@sjenning  Assuming \"this test case and the previous one\" refering to `newBestEffortTestPods()` and `newTestPods()`, this utility function has two best effort pods while in previous one there is no best effort pods. This utility fucntion is added to test `ResourceQuotaScopeBestEffort`. \r\n",
        "createdAt" : "2018-08-01T03:15:45Z",
        "updatedAt" : "2018-08-03T05:36:42Z",
        "lastEditedBy" : "51f59c69-efc0-451a-bd8f-d9fa2c281fd3",
        "tags" : [
        ]
      },
      {
        "id" : "f10337d8-39dc-49f6-8fc1-14d7f474698d",
        "parentId" : "46ec989b-2d0c-40e5-9507-1420fbd6bdfc",
        "authorId" : "8e9f49fc-1050-4601-b81c-83bf660c5eb8",
        "body" : "yeah, nevermind",
        "createdAt" : "2018-08-01T16:29:54Z",
        "updatedAt" : "2018-08-03T05:36:42Z",
        "lastEditedBy" : "8e9f49fc-1050-4601-b81c-83bf660c5eb8",
        "tags" : [
        ]
      }
    ],
    "commit" : "c83f18a897cd7c5ba46b9aa8b7d46704345b7c96",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +148,152 @@\t\t},\n\t\t&v1.Pod{\n\t\t\tObjectMeta: metav1.ObjectMeta{Name: \"pod-running-2\", Namespace: \"testing\"},\n\t\t\tStatus:     v1.PodStatus{Phase: v1.PodRunning},\n\t\t\tSpec: v1.PodSpec{"
  },
  {
    "id" : "98b41aec-5894-433f-ae7f-add5616910b8",
    "prId" : 57302,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/57302#pullrequestreview-89330590",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "41097b4d-9a8b-4ade-b3b2-db87d31add85",
        "parentId" : null,
        "authorId" : "611b3189-700b-4eda-8a2a-2c4280218d7c",
        "body" : "Do we want to add a similar test case for \"requests.foobars.example.com\" but with \"expectedPriority: true\"?",
        "createdAt" : "2018-01-17T02:02:50Z",
        "updatedAt" : "2018-01-30T01:30:15Z",
        "lastEditedBy" : "611b3189-700b-4eda-8a2a-2c4280218d7c",
        "tags" : [
        ]
      },
      {
        "id" : "5ebad4f4-fd42-42f1-b000-da4534612cc3",
        "parentId" : "41097b4d-9a8b-4ade-b3b2-db87d31add85",
        "authorId" : "1a75d411-1ce5-48f2-9967-25f88794c451",
        "body" : "That makes sense, would add one",
        "createdAt" : "2018-01-17T02:34:35Z",
        "updatedAt" : "2018-01-30T01:30:15Z",
        "lastEditedBy" : "1a75d411-1ce5-48f2-9967-25f88794c451",
        "tags" : [
        ]
      },
      {
        "id" : "cfbf8c5d-d93d-4875-b9bc-b7d43f2b5fd7",
        "parentId" : "41097b4d-9a8b-4ade-b3b2-db87d31add85",
        "authorId" : "1a75d411-1ce5-48f2-9967-25f88794c451",
        "body" : "Case added",
        "createdAt" : "2018-01-17T05:18:33Z",
        "updatedAt" : "2018-01-30T01:30:15Z",
        "lastEditedBy" : "1a75d411-1ce5-48f2-9967-25f88794c451",
        "tags" : [
        ]
      }
    ],
    "commit" : "9ea565e352c6cd2c60a05a7435385ac9b3ad261f",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +396,400 @@\t\t\t\tStatus: v1.ResourceQuotaStatus{\n\t\t\t\t\tHard: v1.ResourceList{\n\t\t\t\t\t\t\"foobars.example.com\": resource.MustParse(\"4\"),\n\t\t\t\t\t},\n\t\t\t\t},"
  },
  {
    "id" : "c4317be2-ec96-4ed9-b228-894401b76e61",
    "prId" : 13754,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ccc392a4-b6f2-45b3-9d23-e2d8351332e7",
        "parentId" : null,
        "authorId" : "f50aedb9-6509-4cca-8da9-d43fc61a9cb0",
        "body" : "It looks like this line caused the CI failure for `verify-flags-underscore.py`. Should I add it to `known-flags.txt` like the error message says?\n\ne: taking a closer look, it seems the python script is looking for invocations of functions ending in `String`. Because of the name change to `NewString`, this function is now triggering the script. What's the preferred fix here? Maybe these regexes should start with a backslash? (ie `\\.String` instead of `.String`)\n",
        "createdAt" : "2015-09-10T17:44:00Z",
        "updatedAt" : "2015-09-10T19:07:50Z",
        "lastEditedBy" : "f50aedb9-6509-4cca-8da9-d43fc61a9cb0",
        "tags" : [
        ]
      },
      {
        "id" : "fc4e45ab-3178-4740-ba40-eb700c2a40e2",
        "parentId" : "ccc392a4-b6f2-45b3-9d23-e2d8351332e7",
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "I think it's safe to add... cc @eparis\n",
        "createdAt" : "2015-09-10T17:55:23Z",
        "updatedAt" : "2015-09-10T19:07:50Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      },
      {
        "id" : "8fe7c8bc-0644-45e4-bfc8-a01861d019f9",
        "parentId" : "ccc392a4-b6f2-45b3-9d23-e2d8351332e7",
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "yes, safe to add...\n",
        "createdAt" : "2015-09-10T19:01:51Z",
        "updatedAt" : "2015-09-10T19:07:50Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      },
      {
        "id" : "dee9801f-3a04-401a-84e1-9c2e3378f620",
        "parentId" : "ccc392a4-b6f2-45b3-9d23-e2d8351332e7",
        "authorId" : "766f642e-1622-4803-803b-05ce306fc30e",
        "body" : "@tummychow I will update that regex in a different PR. Good idea.\n",
        "createdAt" : "2015-09-10T19:12:45Z",
        "updatedAt" : "2015-09-10T19:12:45Z",
        "lastEditedBy" : "766f642e-1622-4803-803b-05ce306fc30e",
        "tags" : [
        ]
      }
    ],
    "commit" : "78ce5da9888c7c7dbd5a6f5e2bfb25ca3be76acb",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +104,108 @@\t\t},\n\t}\n\texpectedResults := sets.NewString(\"pod-running\",\n\t\t\"pod-pending\", \"pod-unknown\", \"pod-failed-with-restart-always\",\n\t\t\"pod-failed-with-restart-on-failure\")"
  }
]