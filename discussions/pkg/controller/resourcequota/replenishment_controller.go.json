[
  {
    "id" : "d6bc443f-626a-49ad-80e2-ef5f4182257d",
    "prId" : 36673,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/36673#pullrequestreview-9569687",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2b09ef90-3826-43a6-a070-e4634bf2b77b",
        "parentId" : null,
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "ah, i see that you use the v1 pod method here... is it possible to update this to convert to internal form so we don't duplicate logic?",
        "createdAt" : "2016-11-21T22:30:43Z",
        "updatedAt" : "2016-11-23T23:56:50Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      },
      {
        "id" : "5a2ff079-1f73-41b9-96b1-1b91ebfa320a",
        "parentId" : "2b09ef90-3826-43a6-a070-e4634bf2b77b",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "I can do the type switch in core.QuotaPod if you think that's cleaner. Calling conversion on the entire Pod seems to be too expensive.",
        "createdAt" : "2016-11-21T23:52:41Z",
        "updatedAt" : "2016-11-23T23:56:50Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "80ca2985774befd33fcbaaa0e29335769f063eeb",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +59,63 @@\t\toldPod := oldObj.(*v1.Pod)\n\t\tnewPod := newObj.(*v1.Pod)\n\t\tif core.QuotaV1Pod(oldPod) && !core.QuotaV1Pod(newPod) {\n\t\t\toptions.ReplenishmentFunc(options.GroupKind, newPod.Namespace, oldPod)\n\t\t}"
  },
  {
    "id" : "47f4d0df-2806-4d74-b79e-8e1ff23d57f0",
    "prId" : 24470,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "88b7f7e5-228d-4f56-a36c-1add6249d335",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "@derekwaynecarr creating at point of use if one doesn't already exist.  Is this factory supposed to be threadsafe, because clearly this is not.\n",
        "createdAt" : "2016-04-19T14:51:34Z",
        "updatedAt" : "2016-04-21T12:20:44Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "0717cb14-648f-4641-a9ea-dd4b411d4751",
        "parentId" : "88b7f7e5-228d-4f56-a36c-1add6249d335",
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "it is not intended to be thread-safe.\n",
        "createdAt" : "2016-04-19T16:10:05Z",
        "updatedAt" : "2016-04-21T12:20:44Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      }
    ],
    "commit" : "60fe17d338e6f70cfb2598553c845f12156c4909",
    "line" : 70,
    "diffHunk" : "@@ -1,1 +125,129 @@\t\t}\n\n\t\tr.podInformer = informers.CreateSharedPodInformer(r.kubeClient, options.ResyncPeriod())\n\t\tresult = r.podInformer\n"
  },
  {
    "id" : "f8e4e5b2-7aa8-4b1b-8f36-a4aa89b2d41b",
    "prId" : 24470,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a7993100-2919-4560-b1b5-4afe15a629a4",
        "parentId" : null,
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "i assume the plan is to continue this for other object types?\n\nat what point can we bite the bullet and have a informer registry tied to a particular type of resource so we can avoid passing in multiple informers in this operation?\n",
        "createdAt" : "2016-04-19T16:09:18Z",
        "updatedAt" : "2016-04-21T12:20:44Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      },
      {
        "id" : "3eb4356e-df79-493a-8dfb-2e0048fd4a6b",
        "parentId" : "a7993100-2919-4560-b1b5-4afe15a629a4",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "> at what point can we bite the bullet and have a informer registry tied to a particular type of resource so we can avoid passing in multiple informers in this operation?\n\nProbably two.\n",
        "createdAt" : "2016-04-19T17:09:34Z",
        "updatedAt" : "2016-04-21T12:20:44Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "571e2dfd-3911-457a-afa2-e3fcf2093458",
        "parentId" : "a7993100-2919-4560-b1b5-4afe15a629a4",
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "Ok,will hold you to that :-)\n\nOn Tuesday, April 19, 2016, David Eads notifications@github.com wrote:\n\n> In pkg/controller/resourcequota/replenishment_controller.go\n> https://github.com/kubernetes/kubernetes/pull/24470#discussion_r60270619\n> :\n> \n> >  }\n> > \n> >  // NewReplenishmentControllerFactory returns a factory that knows how to build controllers\n> >  // to replenish resources when updated or deleted\n> > -func NewReplenishmentControllerFactory(kubeClient clientset.Interface) ReplenishmentControllerFactory {\n> > +func NewReplenishmentControllerFactory(podInformer framework.SharedInformer, kubeClient clientset.Interface) ReplenishmentControllerFactory {\n> \n> at what point can we bite the bullet and have a informer registry tied to\n> a particular type of resource so we can avoid passing in multiple informers\n> in this operation?\n> \n> Probably two.\n> \n> â€”\n> You are receiving this because you were mentioned.\n> Reply to this email directly or view it on GitHub\n> https://github.com/kubernetes/kubernetes/pull/24470/files/1bf310124e5d41b602cef6110cf70942036c5140#r60270619\n",
        "createdAt" : "2016-04-19T19:34:02Z",
        "updatedAt" : "2016-04-21T12:20:44Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      }
    ],
    "commit" : "60fe17d338e6f70cfb2598553c845f12156c4909",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +101,105 @@// NewReplenishmentControllerFactory returns a factory that knows how to build controllers\n// to replenish resources when updated or deleted\nfunc NewReplenishmentControllerFactory(podInformer framework.SharedInformer, kubeClient clientset.Interface) ReplenishmentControllerFactory {\n\treturn &replenishmentControllerFactory{\n\t\tkubeClient:  kubeClient,"
  }
]