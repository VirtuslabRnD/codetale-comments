[
  {
    "id" : "3f9fcaa0-e824-4a80-90d9-0bbf61bc8478",
    "prId" : 80004,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/80004#pullrequestreview-290145831",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "504240b5-f46c-4e91-bdcb-3a7cdc445d76",
        "parentId" : null,
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "This isn't really what I want to see for a sort test.  Create a table driven test with input scenarios in a concise form (helpers to generate each entry) and have each test check various edge cases.\r\n\r\nSort is a very easy thing to get wrong and random permutations don't build confidence, reviewable use cases do.",
        "createdAt" : "2019-09-17T02:14:58Z",
        "updatedAt" : "2019-10-17T15:53:09Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "8a8f1d3f-45aa-47ac-82be-db617c1510f4",
        "parentId" : "504240b5-f46c-4e91-bdcb-3a7cdc445d76",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Actually it's even better if you just test Less and have your table test do an initial setup, then test both forwards and backwards calls with Less (and they should either be equal or reversed).  I.e.:\r\n\r\n```\r\ntest {\r\n  a: something,\r\n  b: something_else,\r\n  val: true,\r\n}\r\n\r\nfor ... {\r\n   set := ActivePodsWithRanks{items: []...{test.a, test.b}}\r\n   if set.Less(0, 1) != test.value {\r\n      // error\r\n   }\r\n   if set.Less(1, 0) == test.value {\r\n     // error\r\n   }\r\n}\r\n```\r\n\r\nthat confines the test even more and demonstrates Less satisfies the sort interface (it's really easy in these complicated Less() functions to accidentally miss a reversible case which makes your sort unstable)",
        "createdAt" : "2019-09-18T00:49:49Z",
        "updatedAt" : "2019-10-17T15:53:09Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "ddc9335d-2ac9-47f9-9d0c-6ec7d3996966",
        "parentId" : "504240b5-f46c-4e91-bdcb-3a7cdc445d76",
        "authorId" : "b3da6e51-33c0-47c8-b02f-5822b5139f82",
        "body" : "I've now changed `TestSortingActivePodsWithRanks` to a table-driven test similar to what you describe.  I omitted `val` and instead defined each test case in terms of a lesser value and a greater value—I hope I didn't miss some nuance there, and I hope I covered enough edge cases.",
        "createdAt" : "2019-09-18T17:54:13Z",
        "updatedAt" : "2019-10-17T15:53:09Z",
        "lastEditedBy" : "b3da6e51-33c0-47c8-b02f-5822b5139f82",
        "tags" : [
        ]
      },
      {
        "id" : "733f139f-db8c-4921-b84d-3fbfff1b4132",
        "parentId" : "504240b5-f46c-4e91-bdcb-3a7cdc445d76",
        "authorId" : "b3da6e51-33c0-47c8-b02f-5822b5139f82",
        "body" : "Oh, I misunderstood what you meant about \"reversible cases\", but I think I understand now—I have added some test cases to make sure that `Less` returns false given two equal pods.",
        "createdAt" : "2019-09-18T19:19:56Z",
        "updatedAt" : "2019-10-17T15:53:09Z",
        "lastEditedBy" : "b3da6e51-33c0-47c8-b02f-5822b5139f82",
        "tags" : [
        ]
      }
    ],
    "commit" : "980b6406b24b41bc0ef061624385f1f420708819",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +430,434 @@}\n\nfunc TestSortingActivePodsWithRanks(t *testing.T) {\n\tnow := metav1.Now()\n\tthen := metav1.Time{Time: now.AddDate(0, -1, 0)}"
  },
  {
    "id" : "c1574280-fe29-4497-95d3-3fe304f256a0",
    "prId" : 49524,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/49524#pullrequestreview-54509309",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ad217513-9b1f-468b-9763-26a09fce273c",
        "parentId" : null,
        "authorId" : "72156db3-c40b-4455-9838-c12c0c606019",
        "body" : "@gmarek , do you think we should also pass *v1.Node to reduce api call?",
        "createdAt" : "2017-08-05T06:11:45Z",
        "updatedAt" : "2017-08-07T11:29:58Z",
        "lastEditedBy" : "72156db3-c40b-4455-9838-c12c0c606019",
        "tags" : [
        ]
      }
    ],
    "commit" : "18ae1ba813f6ba8ff7b80ede4f6471d4c8b46a3b",
    "line" : 232,
    "diffHunk" : "@@ -1,1 +754,758 @@\t\t\t\t{Key: \"key2\", Value: \"value2\", Effect: \"NoExecute\"},\n\t\t\t},\n\t\t\trequestCount: 3,\n\t\t},\n\t\t{"
  }
]