[
  {
    "id" : "5cb8dbab-20f9-41fa-a1f0-06aabb504fa1",
    "prId" : 40355,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/40355#pullrequestreview-18936332",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "772d7807-7d1c-4d8b-8d7d-2d7d02c25a7c",
        "parentId" : null,
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "HA! ",
        "createdAt" : "2017-01-30T17:34:19Z",
        "updatedAt" : "2017-02-10T01:14:06Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      }
    ],
    "commit" : "004552f8a43e0bfd138c166f586bb4686fac559c",
    "line" : 61,
    "diffHunk" : "@@ -1,1 +59,63 @@}\n\n// copy of 'computeTaintDifference' - long live lack of generics...\nfunc computeTolerationDifference(left []v1.Toleration, right []v1.Toleration) []v1.Toleration {\n\tresult := []v1.Toleration{}"
  },
  {
    "id" : "85af092c-e931-4644-a266-e9321fe58d14",
    "prId" : 40355,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/40355#pullrequestreview-20233289",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "40aec491-b759-466f-a620-c3ed3dd62aaf",
        "parentId" : null,
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "If it's always now, why does it get passed in?",
        "createdAt" : "2017-01-31T02:39:33Z",
        "updatedAt" : "2017-02-10T01:14:06Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      },
      {
        "id" : "6469bd71-a29d-4cd8-8f0a-fabe182db0f1",
        "parentId" : "40aec491-b759-466f-a620-c3ed3dd62aaf",
        "authorId" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "body" : "So that in a Node gets tainted all Pods will have the same 'AddedAt' time. I think it's more natural, but I can get rid of it if you want.",
        "createdAt" : "2017-02-06T10:22:23Z",
        "updatedAt" : "2017-02-10T01:14:06Z",
        "lastEditedBy" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "tags" : [
        ]
      }
    ],
    "commit" : "004552f8a43e0bfd138c166f586bb4686fac559c",
    "line" : 326,
    "diffHunk" : "@@ -1,1 +324,328 @@\ttolerations []v1.Toleration,\n\ttaints []v1.Taint,\n\tnow time.Time,\n) {\n\tallTolerated, usedTolerations := v1.GetMatchingTolerations(taints, tolerations)"
  },
  {
    "id" : "dbc7d050-ae2a-4871-bd1d-fe72cf531db7",
    "prId" : 40355,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/40355#pullrequestreview-21465488",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "77618327-1f10-47b8-bbb4-31fde0a67798",
        "parentId" : null,
        "authorId" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "body" : "why Non? getNoExecuteTaints would be better\r\n",
        "createdAt" : "2017-02-12T01:51:46Z",
        "updatedAt" : "2017-02-12T06:19:09Z",
        "lastEditedBy" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "tags" : [
        ]
      },
      {
        "id" : "081446f5-158f-4fc1-943c-ce3e36c0eb27",
        "parentId" : "77618327-1f10-47b8-bbb4-31fde0a67798",
        "authorId" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "body" : "Done.",
        "createdAt" : "2017-02-13T09:26:34Z",
        "updatedAt" : "2017-02-13T09:26:34Z",
        "lastEditedBy" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "tags" : [
        ]
      }
    ],
    "commit" : "004552f8a43e0bfd138c166f586bb4686fac559c",
    "line" : 127,
    "diffHunk" : "@@ -1,1 +125,129 @@}\n\nfunc getNonExecuteTaints(taints []v1.Taint) []v1.Taint {\n\tresult := []v1.Taint{}\n\tfor i := range taints {"
  },
  {
    "id" : "dc64edd9-6a6e-421e-8def-5ea82816e79b",
    "prId" : 40355,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/40355#pullrequestreview-21467462",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b23d3e4c-9135-4881-88e3-b3f6deabb3cf",
        "parentId" : null,
        "authorId" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "body" : "If `tolerations` is empty then this returns -1, which means \"evict immediately\" not \"infinite toleration.\" If you're only calling this from contexts where `tolerations` is non-empty, then that's fine, but document the fact in the comment.\r\n\r\nAlso, IIUC if you have (say) a one-element `tolerations` with TolerationSeconds==-500 then minTolerationTime is -500, which is bogus. If validation ensures that TolerationSeconds >= 0 always (I didn't check) then that's fine, but in that case I don't understand why you have \"if tolerationSeconds < 0\" clause.",
        "createdAt" : "2017-02-12T02:06:32Z",
        "updatedAt" : "2017-02-12T06:19:09Z",
        "lastEditedBy" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "tags" : [
        ]
      },
      {
        "id" : "84280d62-00e9-44b1-a1d8-456a9e7352a2",
        "parentId" : "b23d3e4c-9135-4881-88e3-b3f6deabb3cf",
        "authorId" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "body" : "Done.",
        "createdAt" : "2017-02-13T09:37:36Z",
        "updatedAt" : "2017-02-13T09:37:36Z",
        "lastEditedBy" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "tags" : [
        ]
      }
    ],
    "commit" : "004552f8a43e0bfd138c166f586bb4686fac559c",
    "line" : 157,
    "diffHunk" : "@@ -1,1 +155,159 @@\n// Returns minimal toleration time from the given slice, or -1 if it's infinite.\nfunc getMinTolerationTime(tolerations []v1.Toleration) time.Duration {\n\tminTolerationTime := int64(-1)\n\tfor i := range tolerations {"
  },
  {
    "id" : "c619bb9e-07f8-43ca-8b46-a00ccdd9a248",
    "prId" : 40355,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/40355#pullrequestreview-21467650",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "50de83fd-bb67-451a-ba61-f3944df7209d",
        "parentId" : null,
        "authorId" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "body" : "Stupid go question: the two goroutines and this code here all read from the same stopCh, but you seem to be assuming that whatever is put into stopCh will be read by all three places -- does that work?",
        "createdAt" : "2017-02-12T02:19:28Z",
        "updatedAt" : "2017-02-12T06:19:09Z",
        "lastEditedBy" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "tags" : [
        ]
      },
      {
        "id" : "755b9775-8781-4c43-ac7d-e4494734cc9a",
        "parentId" : "50de83fd-bb67-451a-ba61-f3944df7209d",
        "authorId" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "body" : "stopCh is closed to signal everything to exit, and close is broadcasted to everyone.",
        "createdAt" : "2017-02-13T09:38:40Z",
        "updatedAt" : "2017-02-13T09:38:40Z",
        "lastEditedBy" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "tags" : [
        ]
      }
    ],
    "commit" : "004552f8a43e0bfd138c166f586bb4686fac559c",
    "line" : 233,
    "diffHunk" : "@@ -1,1 +231,235 @@\tfor {\n\t\tselect {\n\t\tcase <-stopCh:\n\t\t\tbreak\n\t\tcase nodeUpdate := <-tc.nodeUpdateChannel:"
  },
  {
    "id" : "c66b77cd-43ac-4e4a-9721-6753b7c65117",
    "prId" : 40355,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/40355#pullrequestreview-21467987",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6b997580-aec1-4aa1-a6f8-bba1e2dc1637",
        "parentId" : null,
        "authorId" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "body" : "did you mean \"update\" instead of \"upgrade\"?",
        "createdAt" : "2017-02-12T02:42:44Z",
        "updatedAt" : "2017-02-12T06:19:09Z",
        "lastEditedBy" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "tags" : [
        ]
      },
      {
        "id" : "f7727f1e-3f53-4515-b347-826595006cf0",
        "parentId" : "6b997580-aec1-4aa1-a6f8-bba1e2dc1637",
        "authorId" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "body" : "Yup.",
        "createdAt" : "2017-02-13T09:40:29Z",
        "updatedAt" : "2017-02-13T09:40:29Z",
        "lastEditedBy" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "tags" : [
        ]
      }
    ],
    "commit" : "004552f8a43e0bfd138c166f586bb4686fac559c",
    "line" : 330,
    "diffHunk" : "@@ -1,1 +328,332 @@\tallTolerated, usedTolerations := v1.GetMatchingTolerations(taints, tolerations)\n\tif !allTolerated {\n\t\tglog.V(2).Infof(\"Not all taints are tolerated after upgrade for Pod %v on %v\", podNamespacedName.String(), nodeName)\n\t\t// We're canceling scheduled work (if any), as we're going to delete the Pod right away.\n\t\ttc.taintEvictionQueue.CancelWork(podNamespacedName.String())"
  },
  {
    "id" : "307b0b85-304b-43c2-a836-502f7914d449",
    "prId" : 40355,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/40355#pullrequestreview-21397638",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "49a9c7f0-8f59-4c49-847f-4980af6f7355",
        "parentId" : null,
        "authorId" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "body" : "Please add comments explaining the expected behavior in these circumstances (and referring to the code that handles the cases)\r\n* eviction that has not yet started gets moved sooner (e.g. eviction is added to the eviction queue, then pod is updated with smaller tolerationSeconds for its soonest toleration) -- IIUC we do want to move the eviction sooner in that case?\r\n* eviction has started (Delete to API server has been issued and pod is in graceful termination) and then its eviction time gets moved sooner -- IIUC we don't want to send another Delete, but how do we prevent this?\r\n* eviction that has not yet started gets moved later or canceled (e.g. eviction is added to the eviction queue, then pod is updated with larger tolerationSeconds for its soonest toleration, or all taints are removed from node) -- IIUC we do want to move the eviction later (or cancel it if removing all taints) in that case?\r\n* eviction has started (Delete to API server has been issued and pod is in graceful termination) and then its eviction time gets moved later\r\n\r\nI see an e2e test for third one, maybe you could add an e2e test for the first one? (Second and fourth probably don't need e2e test as long as you have a convincing argument why the code does the right thing. But comments for all four cases would be very useful regardless.)",
        "createdAt" : "2017-02-12T03:27:10Z",
        "updatedAt" : "2017-02-12T06:19:09Z",
        "lastEditedBy" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "tags" : [
        ]
      }
    ],
    "commit" : "004552f8a43e0bfd138c166f586bb4686fac559c",
    "line" : 346,
    "diffHunk" : "@@ -1,1 +344,348 @@\ttriggerTime := startTime.Add(minTolerationTime)\n\tscheduledEviction := tc.taintEvictionQueue.GetWorkerUnsafe(podNamespacedName.String())\n\tif scheduledEviction != nil {\n\t\tstartTime = scheduledEviction.CreatedAt\n\t\tif startTime.Add(minTolerationTime).Before(triggerTime) {"
  },
  {
    "id" : "7548fdf1-d43f-4ba9-b89f-ab42220a37cd",
    "prId" : 40355,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/40355#pullrequestreview-21468535",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f8182b2e-71c5-4ede-8f02-882cf3577273",
        "parentId" : null,
        "authorId" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "body" : "maybe write that !ok is expected if node was deleted before pods?\r\n",
        "createdAt" : "2017-02-12T05:03:26Z",
        "updatedAt" : "2017-02-12T06:19:09Z",
        "lastEditedBy" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "tags" : [
        ]
      },
      {
        "id" : "5033f198-86a7-4258-8203-9b7dbde65749",
        "parentId" : "f8182b2e-71c5-4ede-8f02-882cf3577273",
        "authorId" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "body" : "That, or it's not tainted at all.",
        "createdAt" : "2017-02-13T09:43:29Z",
        "updatedAt" : "2017-02-13T09:43:29Z",
        "lastEditedBy" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "tags" : [
        ]
      }
    ],
    "commit" : "004552f8a43e0bfd138c166f586bb4686fac559c",
    "line" : 377,
    "diffHunk" : "@@ -1,1 +375,379 @@\t\ttc.taintedNodesLock.Lock()\n\t\tdefer tc.taintedNodesLock.Unlock()\n\t\ttaints, ok := tc.taintedNodes[nodeName]\n\t\treturn taints, ok\n\t}()"
  },
  {
    "id" : "af864086-5d85-4917-aadb-a9c1524a6f08",
    "prId" : 40355,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/40355#pullrequestreview-21468752",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "80cc5df4-d18f-4622-9932-e2117aa67ad2",
        "parentId" : null,
        "authorId" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "body" : "put the node name in the error message",
        "createdAt" : "2017-02-12T05:05:55Z",
        "updatedAt" : "2017-02-12T06:19:09Z",
        "lastEditedBy" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "tags" : [
        ]
      },
      {
        "id" : "5fd5085a-78d6-4057-bf12-ad491dbf813e",
        "parentId" : "80cc5df4-d18f-4622-9932-e2117aa67ad2",
        "authorId" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "body" : "Done.",
        "createdAt" : "2017-02-13T09:44:37Z",
        "updatedAt" : "2017-02-13T09:44:37Z",
        "lastEditedBy" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "tags" : [
        ]
      }
    ],
    "commit" : "004552f8a43e0bfd138c166f586bb4686fac559c",
    "line" : 414,
    "diffHunk" : "@@ -1,1 +412,416 @@\t}\n\tif len(taints) == 0 {\n\t\tglog.V(4).Infof(\"All taints were removed from the Node. Cancelling all evictions...\")\n\t\tfor i := range pods {\n\t\t\ttc.taintEvictionQueue.CancelWork(types.NamespacedName{Namespace: pods[i].Namespace, Name: pods[i].Name}.String())"
  },
  {
    "id" : "4f9e38c6-1a8a-420e-9958-3367a8418cfa",
    "prId" : 40355,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/40355#pullrequestreview-21468702",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9abb9d5c-3f28-4732-b374-39990bfaa14b",
        "parentId" : null,
        "authorId" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "body" : "IIUC this is just an optimization? i.e. processPodsOnNode() would end up doing this in the absence of this block? if so, add a comment.",
        "createdAt" : "2017-02-12T05:11:38Z",
        "updatedAt" : "2017-02-12T06:19:09Z",
        "lastEditedBy" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "tags" : [
        ]
      },
      {
        "id" : "16c10fcf-11db-4385-8948-b033dd259b5f",
        "parentId" : "9abb9d5c-3f28-4732-b374-39990bfaa14b",
        "authorId" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "body" : "Done.",
        "createdAt" : "2017-02-13T09:44:18Z",
        "updatedAt" : "2017-02-13T09:44:18Z",
        "lastEditedBy" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "tags" : [
        ]
      }
    ],
    "commit" : "004552f8a43e0bfd138c166f586bb4686fac559c",
    "line" : 413,
    "diffHunk" : "@@ -1,1 +411,415 @@\t\treturn\n\t}\n\tif len(taints) == 0 {\n\t\tglog.V(4).Infof(\"All taints were removed from the Node. Cancelling all evictions...\")\n\t\tfor i := range pods {"
  },
  {
    "id" : "9c28a875-0b69-4e73-8826-e46ac6eab9f8",
    "prId" : 40355,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/40355#pullrequestreview-21479530",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5675ffbc-5864-47f3-b4f2-610b4a5d3f3c",
        "parentId" : null,
        "authorId" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "body" : "Also add an event here?\r\n",
        "createdAt" : "2017-02-12T06:58:16Z",
        "updatedAt" : "2017-02-12T06:58:16Z",
        "lastEditedBy" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "tags" : [
        ]
      },
      {
        "id" : "a1334eab-5776-4838-b30b-7369222505ed",
        "parentId" : "5675ffbc-5864-47f3-b4f2-610b4a5d3f3c",
        "authorId" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "body" : "Done.",
        "createdAt" : "2017-02-13T10:41:11Z",
        "updatedAt" : "2017-02-13T10:41:11Z",
        "lastEditedBy" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "tags" : [
        ]
      }
    ],
    "commit" : "004552f8a43e0bfd138c166f586bb4686fac559c",
    "line" : 114,
    "diffHunk" : "@@ -1,1 +112,116 @@\t\tns := args.NamespacedName.Namespace\n\t\tname := args.NamespacedName.Name\n\t\tglog.V(0).Infof(\"NoExecuteTaintManager is deleting Pod: %v\", args.NamespacedName.String())\n\t\tvar err error\n\t\tfor i := 0; i < retries; i++ {"
  }
]