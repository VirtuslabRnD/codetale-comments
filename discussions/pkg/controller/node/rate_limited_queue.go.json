[
  {
    "id" : "6808decc-91d1-4049-ada5-fb02e7b43c36",
    "prId" : 29437,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c6799231-76b1-48fd-8dc7-e698577b9e76",
        "parentId" : null,
        "authorId" : "f82d7198-a2cf-4e46-87ea-0dfb9a1e353a",
        "body" : "Comment above might need clarification whether \"same value\" is by value or by uid.\nI see UniqueQueue does `if q.set.Has(value.Value) { return false }` where `.set` is a set of strings, so by value.\nBut then it's unclear what exactly \"anything that can identify the value\" means.\nAlso consider tests with non-1:1 correspondence of values and uids.\n",
        "createdAt" : "2016-07-24T13:34:03Z",
        "updatedAt" : "2016-08-15T07:02:58Z",
        "lastEditedBy" : "f82d7198-a2cf-4e46-87ea-0dfb9a1e353a",
        "tags" : [
        ]
      }
    ],
    "commit" : "b2ab4c6d9b1eee04b4d4ca380d648f33949292ba",
    "line" : null,
    "diffHunk" : "@@ -1,1 +205,209 @@// Adds value to the queue to be processed. Won't add the same value(comparsion by value) a second time\n// if it was already added and not removed.\nfunc (q *RateLimitedTimedQueue) Add(value string, uid interface{}) bool {\n\tnow := now()\n\treturn q.queue.Add(TimedValue{"
  },
  {
    "id" : "df48a8ca-9be6-43d9-bf85-a625543a2498",
    "prId" : 28882,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6a882b42-2764-44b8-912d-3103c63e0a49",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Well, in case of all limitters have Burst=1 it doesn't matter, but I still think that this method of saturation is bad.\nCan you please at least add a TODO to consider changing it to be more numer-of-calls-oriented (as I described previously?).\n",
        "createdAt" : "2016-07-14T11:15:51Z",
        "updatedAt" : "2016-07-14T13:38:24Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "f6b1c316e9b2e0c6347e5bd3dd32eaba38fb53af",
    "line" : null,
    "diffHunk" : "@@ -1,1 +240,244 @@\t// - number of available tokens\n\t// - something else\n\tfor q.limiter.Saturation() > newLimiter.Saturation() {\n\t\t// Check if we're not using fake limiter\n\t\tpreviousSaturation := newLimiter.Saturation()"
  },
  {
    "id" : "4d3da9a7-afa2-44d4-99af-ac37c19cb7f3",
    "prId" : 9165,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5b6a1a5d-1f40-49fd-ab41-9fe7c44de009",
        "parentId" : null,
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "I'd guess we'll need this in a number of places in the future. Maybe just move it to a util library now?\n\ncc @davidopp \n",
        "createdAt" : "2015-08-11T21:01:29Z",
        "updatedAt" : "2015-08-18T13:08:12Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "4ca7c7fa-9778-41a6-bcdd-e789f406baaa",
        "parentId" : "5b6a1a5d-1f40-49fd-ab41-9fe7c44de009",
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "To clarify: I don't want to block this PR on this. I'm fine if it gets moved in another PR.\n",
        "createdAt" : "2015-08-11T21:04:39Z",
        "updatedAt" : "2015-08-18T13:08:12Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      }
    ],
    "commit" : "266e6226e52b55f8a6d5278c1264299d7c713820",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +15,19 @@*/\n\npackage nodecontroller\n\nimport ("
  }
]