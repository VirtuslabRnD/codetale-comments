[
  {
    "id" : "f122f41b-ca91-4085-ac51-7abfd021a727",
    "prId" : 49257,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/49257#pullrequestreview-55926932",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3f86d17e-1168-44a9-8d69-e69ec7a3723d",
        "parentId" : null,
        "authorId" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "body" : "Why not do this similarly to other tests and define it inline in test case definition?",
        "createdAt" : "2017-08-11T11:30:52Z",
        "updatedAt" : "2017-08-11T11:30:52Z",
        "lastEditedBy" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "tags" : [
        ]
      },
      {
        "id" : "83b2c679-f169-4b61-b71a-bcac5aecdcc5",
        "parentId" : "3f86d17e-1168-44a9-8d69-e69ec7a3723d",
        "authorId" : "72156db3-c40b-4455-9838-c12c0c606019",
        "body" : "In this test, it only care about the update of one node status; it's not necessary to build `fakeNodeHandler` with different existing nodes :).",
        "createdAt" : "2017-08-11T23:37:52Z",
        "updatedAt" : "2017-08-11T23:37:52Z",
        "lastEditedBy" : "72156db3-c40b-4455-9838-c12c0c606019",
        "tags" : [
        ]
      }
    ],
    "commit" : "55fa10c1828e85d14640072cb9e7da6a7305010b",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +2067,2071 @@\tevictionTimeout := 10 * time.Minute\n\n\tfakeNodeHandler := &testutil.FakeNodeHandler{\n\t\tExisting: []*v1.Node{\n\t\t\t{"
  },
  {
    "id" : "d8cd6dd6-48fd-4324-b329-8786df884b56",
    "prId" : 47087,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/47087#pullrequestreview-49987198",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "45b86b5c-fc7d-476c-95a9-04e1b0c62aeb",
        "parentId" : null,
        "authorId" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "body" : "not needed",
        "createdAt" : "2017-07-14T08:07:19Z",
        "updatedAt" : "2017-07-14T08:07:19Z",
        "lastEditedBy" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "tags" : [
        ]
      }
    ],
    "commit" : "1ecc864f876ac171a94c14e2c84fff087160af0d",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +1271,1275 @@\t\t\t}\n\t\t}\n\t\tvar podEvicted bool\n\t\tstart := time.Now()\n\t\t// Infinite loop, used for retrying in case ratelimiter fails to reload for Try function."
  },
  {
    "id" : "816a1f69-0470-4505-b53f-b7f37e383257",
    "prId" : 47087,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/47087#pullrequestreview-50253479",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1ae0fee6-f587-46e3-b92f-63524cc9cbaa",
        "parentId" : null,
        "authorId" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "body" : "`if podEvicted := nodeController.doEviction(fakeNodeHandler); podEvicted == item.expectedEvictPods || time.Since(start) > 1*time.Minute {",
        "createdAt" : "2017-07-14T08:09:29Z",
        "updatedAt" : "2017-07-14T08:09:29Z",
        "lastEditedBy" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "tags" : [
        ]
      },
      {
        "id" : "4fbd170c-0a64-4af5-a5e1-208c5347e0b0",
        "parentId" : "1ae0fee6-f587-46e3-b92f-63524cc9cbaa",
        "authorId" : "38ca4f80-c365-4775-8981-1e56b713b07b",
        "body" : "So, we need to use podEvicted again in https://github.com/ravisantoshgudimetla/kubernetes/blob/node_controller_flake/pkg/controller/node/nodecontroller_test.go#L1285-L1286. That was the reason, I declared it separately.",
        "createdAt" : "2017-07-14T12:36:54Z",
        "updatedAt" : "2017-07-14T12:36:54Z",
        "lastEditedBy" : "38ca4f80-c365-4775-8981-1e56b713b07b",
        "tags" : [
        ]
      },
      {
        "id" : "af94ef88-874e-48ed-bf92-31f3ea6b224c",
        "parentId" : "1ae0fee6-f587-46e3-b92f-63524cc9cbaa",
        "authorId" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "body" : "Oh, sorry - it got folded so I didn't notice.",
        "createdAt" : "2017-07-17T07:58:08Z",
        "updatedAt" : "2017-07-17T07:58:08Z",
        "lastEditedBy" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "tags" : [
        ]
      }
    ],
    "commit" : "1ecc864f876ac171a94c14e2c84fff087160af0d",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +1278,1282 @@\t\tfor {\n\t\t\tpodEvicted = nodeController.doEviction(fakeNodeHandler)\n\t\t\tif podEvicted == item.expectedEvictPods || time.Since(start) > 1*time.Minute {\n\t\t\t\tbreak\n\t\t\t}"
  },
  {
    "id" : "be0b594c-3a42-45f2-8bdf-701da11c023e",
    "prId" : 28897,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d81f9038-18ad-4cae-b31d-8b9d9116e463",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "I think you should remove it and use table.timeToPass instead.\n",
        "createdAt" : "2016-08-02T07:51:06Z",
        "updatedAt" : "2016-08-02T12:22:10Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "5261cf6b-5d3d-42d8-94a2-697a3eb9d189",
        "parentId" : "d81f9038-18ad-4cae-b31d-8b9d9116e463",
        "authorId" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "body" : "Right.\n",
        "createdAt" : "2016-08-02T09:59:37Z",
        "updatedAt" : "2016-08-02T12:22:10Z",
        "lastEditedBy" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "tags" : [
        ]
      }
    ],
    "commit" : "66224ce0bd9310deda7aa8a696310a89cc927747",
    "line" : 66,
    "diffHunk" : "@@ -1,1 +511,515 @@\tfakeNow := unversioned.Date(2015, 1, 1, 12, 0, 0, 0, time.UTC)\n\tevictionTimeout := 10 * time.Minute\n\ttimeToPass := 60 * time.Minute\n\n\t// Because of the logic that prevents NC from evicting anything when all Nodes are NotReady"
  },
  {
    "id" : "56102fde-4e36-4d2d-a641-167caec8684b",
    "prId" : 28897,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "69c34fa6-e86a-4370-92c8-956155d54205",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Are we using both values to detect zone? Maybe we should leave \"region1\" and only change \"zone1\" to \"zone2\" in this case?\n",
        "createdAt" : "2016-08-02T07:54:42Z",
        "updatedAt" : "2016-08-02T12:22:10Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "d252ccf8-1cfd-4ec9-a9af-2ae182191a1e",
        "parentId" : "69c34fa6-e86a-4370-92c8-956155d54205",
        "authorId" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "body" : "Sure.\n",
        "createdAt" : "2016-08-02T10:00:08Z",
        "updatedAt" : "2016-08-02T12:22:10Z",
        "lastEditedBy" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "tags" : [
        ]
      }
    ],
    "commit" : "66224ce0bd9310deda7aa8a696310a89cc927747",
    "line" : 219,
    "diffHunk" : "@@ -1,1 +694,698 @@\t\t\t\t\t\tLabels: map[string]string{\n\t\t\t\t\t\t\tunversioned.LabelZoneRegion:        \"region1\",\n\t\t\t\t\t\t\tunversioned.LabelZoneFailureDomain: \"zone2\",\n\t\t\t\t\t\t},\n\t\t\t\t\t},"
  },
  {
    "id" : "50b84711-7c26-4b10-9f32-bea6f99c8163",
    "prId" : 28897,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b2466848-9bc7-4aa0-9838-3538a7f8325d",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Since you already have this one, maybe you should create \"unhealthyNodeNewStatus\" too and use it everywhere below? This would make this tests easier to read :)\n",
        "createdAt" : "2016-08-02T07:56:33Z",
        "updatedAt" : "2016-08-02T12:22:10Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "c246c1ca-9a42-4ee9-93bb-c8a40641ada7",
        "parentId" : "b2466848-9bc7-4aa0-9838-3538a7f8325d",
        "authorId" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "body" : "Done.\n",
        "createdAt" : "2016-08-02T10:34:37Z",
        "updatedAt" : "2016-08-02T12:22:10Z",
        "lastEditedBy" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "tags" : [
        ]
      }
    ],
    "commit" : "66224ce0bd9310deda7aa8a696310a89cc927747",
    "line" : 80,
    "diffHunk" : "@@ -1,1 +525,529 @@\t\t\t},\n\t\t},\n\t}\n\tunhealthyNodeNewStatus := api.NodeStatus{\n\t\tConditions: []api.NodeCondition{"
  },
  {
    "id" : "1113be21-7bf7-46fc-b245-e8a025ae9e40",
    "prId" : 28897,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e23a7f42-ee67-4599-b347-0c9128ea1796",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Do we really need it? What in rate-limiter need to be reloaded?\n",
        "createdAt" : "2016-08-02T08:00:52Z",
        "updatedAt" : "2016-08-02T12:22:10Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "77e00a24-aaad-4d25-b715-b70355b89592",
        "parentId" : "e23a7f42-ee67-4599-b347-0c9128ea1796",
        "authorId" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "body" : "When we swap the rate limiter it's drained at the begining, so we need to wait for it to regain a token.\n",
        "createdAt" : "2016-08-02T10:01:01Z",
        "updatedAt" : "2016-08-02T12:22:10Z",
        "lastEditedBy" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "tags" : [
        ]
      }
    ],
    "commit" : "66224ce0bd9310deda7aa8a696310a89cc927747",
    "line" : 671,
    "diffHunk" : "@@ -1,1 +1005,1009 @@\t\t}\n\t\t// Give some time for rate-limiter to reload\n\t\ttime.Sleep(50 * time.Millisecond)\n\n\t\tfor zone, state := range item.expectedFollowingStates {"
  },
  {
    "id" : "401104ba-b1d8-4f08-ab4f-ddb491660e41",
    "prId" : 19567,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "03d90f01-8077-4ab5-8584-c12d04073fd7",
        "parentId" : null,
        "authorId" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "body" : "Can you populate the testclient.Fake (that's embedded in the FakeNodeHandler) with the DaemonSet, so that \"ds\" is automatically populated into the nodeController.daemonSetStore the way nodes and pods get populated into the nodeController.{nodeStore,podStore} via the testclient.Fake? If you do it I think\nhttps://github.com/mml/kubernetes/blob/forgive-me-not/pkg/controller/node/nodecontroller.go#L210\nshould return the DaemonSet. Inserting it manually seems a little hacky. (If it's too hard to do it the way I described then I'm fine with what you did but it would be good to try to do it the same way the other objects are handled.)\n",
        "createdAt" : "2016-01-14T07:25:48Z",
        "updatedAt" : "2016-01-28T19:09:04Z",
        "lastEditedBy" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "tags" : [
        ]
      },
      {
        "id" : "65f21e90-49d9-4176-b2ba-c156497c42ee",
        "parentId" : "03d90f01-8077-4ab5-8584-c12d04073fd7",
        "authorId" : "d324e241-a7f0-4ace-bda2-4174b07bdb18",
        "body" : "I started out doing it that way, but the caches never get populated during the test because we never call the method that fires up those goroutines.  If you look down to TestCheckPod, you'll see we're doing the same thing there with nodes, and it's presumably for the same reason.\n",
        "createdAt" : "2016-01-14T18:38:49Z",
        "updatedAt" : "2016-01-28T19:09:04Z",
        "lastEditedBy" : "d324e241-a7f0-4ace-bda2-4174b07bdb18",
        "tags" : [
        ]
      }
    ],
    "commit" : "0ba1b49b42e517dea09a3908edc26da64a462c57",
    "line" : 133,
    "diffHunk" : "@@ -1,1 +400,404 @@\t\t\ttestNodeStartupGracePeriod, testNodeMonitorPeriod, nil, false)\n\t\tnodeController.now = func() unversioned.Time { return fakeNow }\n\t\tfor _, ds := range item.daemonSets {\n\t\t\tnodeController.daemonSetStore.Add(&ds)\n\t\t}"
  }
]