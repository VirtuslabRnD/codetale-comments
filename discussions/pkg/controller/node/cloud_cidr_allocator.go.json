[
  {
    "id" : "62319ca4-be47-4eb5-b537-4a3ee7ac96a3",
    "prId" : 42147,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/42147#pullrequestreview-24145336",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "49411842-5dad-4f48-8732-888457383536",
        "parentId" : null,
        "authorId" : "a09f2d48-fec0-4c0d-bd81-6de7378a6ebf",
        "body" : "Should here return error? According to the error info, it seems yes. \r\n\r\nBut according to the logic below, the PodCIDR should update to CIDR assigned by cloud provider. So IMO here may need to be modified to something like:\r\n\r\n```\r\n\tglog.V(3).Infof(\"PodCIDR will be reassigned, node %v spec has %v, but cloud provider has assigned %v\",\r\n\t\tnode.Name, node.Spec.PodCIDR, podCIDR)\r\n```",
        "createdAt" : "2017-02-27T12:23:13Z",
        "updatedAt" : "2017-04-11T21:08:10Z",
        "lastEditedBy" : "a09f2d48-fec0-4c0d-bd81-6de7378a6ebf",
        "tags" : [
        ]
      },
      {
        "id" : "dc687f6f-eef6-46a7-aca7-f308bcc40113",
        "parentId" : "49411842-5dad-4f48-8732-888457383536",
        "authorId" : "b714f738-aa05-4f49-a624-eaaf3e0cbb70",
        "body" : "We do not support reassignment of PodCIDRs once they have been assigned.",
        "createdAt" : "2017-02-27T17:55:58Z",
        "updatedAt" : "2017-04-11T21:08:10Z",
        "lastEditedBy" : "b714f738-aa05-4f49-a624-eaaf3e0cbb70",
        "tags" : [
        ]
      },
      {
        "id" : "617ee8ba-4aae-492c-b59c-1ba49f7e3749",
        "parentId" : "49411842-5dad-4f48-8732-888457383536",
        "authorId" : "a09f2d48-fec0-4c0d-bd81-6de7378a6ebf",
        "body" : "Then we should return error here, otherwise PodCIDR will be reassigned to `cidr[0]` in line #L110, right? Hopefully I understand correctly:) ",
        "createdAt" : "2017-02-28T01:08:28Z",
        "updatedAt" : "2017-04-11T21:08:10Z",
        "lastEditedBy" : "a09f2d48-fec0-4c0d-bd81-6de7378a6ebf",
        "tags" : [
        ]
      },
      {
        "id" : "c98a3926-2738-45a8-8e38-879bef027ff2",
        "parentId" : "49411842-5dad-4f48-8732-888457383536",
        "authorId" : "b714f738-aa05-4f49-a624-eaaf3e0cbb70",
        "body" : "The `range_allocator.go` code logs an error, but continues with setting the node spec. This basically copies the current behavior, I'll add a comment to be more clear. This is somewhat of a unhandled state for the system, as the underlying layers will ignore the CIDR update.",
        "createdAt" : "2017-02-28T01:31:51Z",
        "updatedAt" : "2017-04-11T21:08:10Z",
        "lastEditedBy" : "b714f738-aa05-4f49-a624-eaaf3e0cbb70",
        "tags" : [
        ]
      },
      {
        "id" : "5429902a-82fb-4f7d-94b5-a99b613face3",
        "parentId" : "49411842-5dad-4f48-8732-888457383536",
        "authorId" : "a09f2d48-fec0-4c0d-bd81-6de7378a6ebf",
        "body" : "Thanks for the explanation! ",
        "createdAt" : "2017-02-28T02:11:36Z",
        "updatedAt" : "2017-04-11T21:08:10Z",
        "lastEditedBy" : "a09f2d48-fec0-4c0d-bd81-6de7378a6ebf",
        "tags" : [
        ]
      }
    ],
    "commit" : "091e46ef21bb82e4ec0cdaed65a8b745e3c81c4e",
    "line" : 106,
    "diffHunk" : "@@ -1,1 +104,108 @@\t\t\treturn nil\n\t\t}\n\t\tglog.Errorf(\"PodCIDR cannot be reassigned, node %v spec has %v, but cloud provider has assigned %v\",\n\t\t\tnode.Name, node.Spec.PodCIDR, podCIDR)\n\t\t// We fall through and set the CIDR despite this error. This"
  }
]