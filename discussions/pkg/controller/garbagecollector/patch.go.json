[
  {
    "id" : "601616c0-c247-43de-a263-ef50467461d5",
    "prId" : 81158,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/81158#pullrequestreview-274704742",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "156afc59-4031-4af5-984e-97529b7a77f3",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "consider using a typed struct with json annotations to avoid map allocation. see the objectForFinalizersPatch type and use in this package as an example",
        "createdAt" : "2019-08-13T21:23:11Z",
        "updatedAt" : "2019-10-10T01:45:48Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "21f6dff8-c473-4589-8bee-28e14939b610",
        "parentId" : "156afc59-4031-4af5-984e-97529b7a77f3",
        "authorId" : "dfd76e41-2089-43f2-b91d-5ac73825e4fb",
        "body" : "done",
        "createdAt" : "2019-08-14T07:17:23Z",
        "updatedAt" : "2019-10-10T01:45:48Z",
        "lastEditedBy" : "dfd76e41-2089-43f2-b91d-5ac73825e4fb",
        "tags" : [
        ]
      }
    ],
    "commit" : "a864fd210025934f63cd68bad5d74bfe5d9064ec",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +38,42 @@}\n\nfunc deleteOwnerRefStrategicMergePatch(dependentUID types.UID, ownerUIDs ...types.UID) []byte {\n\tvar pieces []map[string]string\n\tfor _, ownerUID := range ownerUIDs {"
  },
  {
    "id" : "8df2b35c-74d3-4c05-9b74-ca93df0ae518",
    "prId" : 78742,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/78742#pullrequestreview-259745396",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f8b78861-289e-4208-9b6f-5ffc77dbd6f0",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "clever",
        "createdAt" : "2019-07-09T19:40:53Z",
        "updatedAt" : "2019-07-11T16:19:02Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "44ed796a-758c-4be9-bdb4-e1013718b11d",
        "parentId" : "f8b78861-289e-4208-9b6f-5ffc77dbd6f0",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "I read this as both positive and negative, as I am sure it was intended.",
        "createdAt" : "2019-07-09T20:36:37Z",
        "updatedAt" : "2019-07-11T16:19:02Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "d631f9b7e9e9bec131d171a7a859455498fdeb49",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +72,76 @@}\n\ntype objectForFinalizersPatch struct {\n\tObjectMetaForFinalizersPatch `json:\"metadata\"`\n}"
  },
  {
    "id" : "599d63f5-dedf-422d-a31b-f7a2df8d28be",
    "prId" : 63386,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/63386#pullrequestreview-125341331",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "06658228-d0d3-4eed-84f5-c727101effe0",
        "parentId" : null,
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "Set the UID as well, to prevent patching a deleted-then-recreated object.",
        "createdAt" : "2018-06-01T21:43:56Z",
        "updatedAt" : "2018-06-01T23:50:19Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      },
      {
        "id" : "81b18e77-93cd-43c8-b759-177b6fa94f18",
        "parentId" : "06658228-d0d3-4eed-84f5-c727101effe0",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "that's not needed, resource version is stricter than uid... a recreated object would have a different version",
        "createdAt" : "2018-06-01T22:12:37Z",
        "updatedAt" : "2018-06-01T23:50:19Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "c37e1e0f-6d29-4df9-b693-76f6ca37193e",
        "parentId" : "06658228-d0d3-4eed-84f5-c727101effe0",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "relying only on RV would work but it also makes assumptions about the storage system that I don't think we document. E.g. what if RV were per-object and started at 1 with every POST? Do we document that every {name, RV} pair is single-use?",
        "createdAt" : "2018-06-01T22:25:52Z",
        "updatedAt" : "2018-06-01T23:50:19Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "caa3e56e-8b15-4acf-ad7b-c48674cf8a59",
        "parentId" : "06658228-d0d3-4eed-84f5-c727101effe0",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "it has to be unique per resource type, right? since we start list/watches on collections of resources based on resourceVersion",
        "createdAt" : "2018-06-01T22:31:25Z",
        "updatedAt" : "2018-06-01T23:50:19Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "3c384b46-3aee-4e79-8ada-23392d8972f4",
        "parentId" : "06658228-d0d3-4eed-84f5-c727101effe0",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "if we want to add uid here as well, it doesn't bother me, but I do think we are safe with just resourceVersion",
        "createdAt" : "2018-06-01T22:32:10Z",
        "updatedAt" : "2018-06-01T23:50:19Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "82316fc1-5674-487b-af16-cd3badfcf326",
        "parentId" : "06658228-d0d3-4eed-84f5-c727101effe0",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Yeah to make that work the store would have to have list versions come from different places than the object's RV... Pretty contrived. It's probably fine to just rely on the RV. (I think there's another place in the GC where we PATCH without an RV, and that should continue to use a UID precondition.)",
        "createdAt" : "2018-06-01T22:45:55Z",
        "updatedAt" : "2018-06-01T23:50:19Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "e79a30ce-fd53-44f2-a7dd-3fd4264c3bb5",
        "parentId" : "06658228-d0d3-4eed-84f5-c727101effe0",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "Actually this doesn't matter, since the ResourceVersion is set.\r\n\r\n(update) I typed the above comment without refreshing the tab.\r\n\r\n> I think there's another place in the GC where we PATCH without an RV, and that should continue to use a UID precondition.\r\n\r\nThe SMP patch still needs UID because the RV is not there.",
        "createdAt" : "2018-06-01T23:20:41Z",
        "updatedAt" : "2018-06-01T23:50:19Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "29d72a71345d535e270cee59e31e8b5788910bb9",
    "line" : 94,
    "diffHunk" : "@@ -1,1 +154,158 @@\t}\n\texpectedObjectMeta := ObjectMetaForPatch{}\n\texpectedObjectMeta.ResourceVersion = accessor.GetResourceVersion()\n\tvar expectedOwners []metav1.OwnerReference\n\tfalseVar := false"
  },
  {
    "id" : "dc70dde8-1d53-4a3e-b965-ebd93c6cd861",
    "prId" : 63386,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/63386#pullrequestreview-125331089",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ef165fbd-a0f0-401b-b422-5f1dea685106",
        "parentId" : null,
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "Set the UID as well, to prevent patching a deleted-then-recreated object.",
        "createdAt" : "2018-06-01T21:50:10Z",
        "updatedAt" : "2018-06-01T23:50:19Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      },
      {
        "id" : "f8f24453-2271-4e03-857e-817ab0cd87d6",
        "parentId" : "ef165fbd-a0f0-401b-b422-5f1dea685106",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "resource version is stricter, I don't think we need uid",
        "createdAt" : "2018-06-01T22:12:51Z",
        "updatedAt" : "2018-06-01T23:50:19Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "29d72a71345d535e270cee59e31e8b5788910bb9",
    "line" : 94,
    "diffHunk" : "@@ -1,1 +111,115 @@\t}\n\texpectedObjectMeta := ObjectMetaForPatch{}\n\texpectedObjectMeta.ResourceVersion = accessor.GetResourceVersion()\n\trefs := accessor.GetOwnerReferences()\n\tfor _, ref := range refs {"
  }
]