[
  {
    "id" : "d3d8941e-5bb4-45b3-bcc1-c1b23710e1f4",
    "prId" : 32565,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9d1544a1-8c9a-4360-b8bf-d65b81df64e3",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "we will have to think about this if/when any of the built-in drivers become external provisioners..\n",
        "createdAt" : "2016-09-13T15:50:17Z",
        "updatedAt" : "2016-09-13T15:50:17Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "3eae8c902270ea479f4857e7bfb18d87d28a68a4",
    "line" : 125,
    "diffHunk" : "@@ -1,1 +1467,1471 @@\t\t\tplugin, err := ctrl.volumePluginMgr.FindDeletablePluginByName(provisionPluginName)\n\t\t\tif err != nil {\n\t\t\t\tif !strings.HasPrefix(provisionPluginName, \"kubernetes.io/\") {\n\t\t\t\t\t// External provisioner is requested, do not report error\n\t\t\t\t\treturn nil, nil"
  },
  {
    "id" : "db019268-eb0b-46bd-bdde-17554ad392f4",
    "prId" : 32077,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a10e046e-92a9-4a8b-bdb5-d02e8fb99f0b",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "I don't know that this warrants an event, but I am OK with it.\n",
        "createdAt" : "2016-09-06T05:36:44Z",
        "updatedAt" : "2016-09-07T07:13:19Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "3a2f4e52a8ef5be6abdc378588d47ad60faa9c17",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +1242,1246 @@\t\tif storageClass != nil {\n\t\t\tmsg := fmt.Sprintf(\"cannot find provisioner %q, expecting that a volume for the claim is provisioned either manually or via external software\", storageClass.Provisioner)\n\t\t\tctrl.eventRecorder.Event(claim, api.EventTypeNormal, \"ExternalProvisioning\", msg)\n\t\t\tglog.V(3).Infof(\"provisioning claim %q: %s\", claimToClaimKey(claim), msg)\n\t\t} else {"
  },
  {
    "id" : "dbf0cbca-a887-4645-9843-4bcf17b2751a",
    "prId" : 29982,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "817514fc-a7f4-467a-b459-6eb9cd4ff4a0",
        "parentId" : null,
        "authorId" : "8e448017-7838-493d-a424-33cada0da657",
        "body" : "As far as I can tell `updateClaimStatus(...)` is called with `volume *api.PersistentVolume` set to `nil` everywhere except by `updateClaimStatusWithEvent(...). And`updateClaimStatusWithEvent(...) is called with `volume *api.PersistentVolume` nil everywhere. So is volume ever not nil?\n",
        "createdAt" : "2016-08-03T20:24:41Z",
        "updatedAt" : "2016-08-08T08:45:57Z",
        "lastEditedBy" : "8e448017-7838-493d-a424-33cada0da657",
        "tags" : [
        ]
      },
      {
        "id" : "aca4faa5-47a4-4dc3-9a7d-d349a8184f13",
        "parentId" : "817514fc-a7f4-467a-b459-6eb9cd4ff4a0",
        "authorId" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "body" : "`bind()` calls `updateClaimStatus` with non-nil volume.\n\nI agree that `updateClaimStatusWithEvent` is always called with `nil`, however I'd prefer to keep the volume explicitly there for sake of consistency.\n",
        "createdAt" : "2016-08-04T08:24:19Z",
        "updatedAt" : "2016-08-08T08:45:57Z",
        "lastEditedBy" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "tags" : [
        ]
      },
      {
        "id" : "c75da25b-6f83-4b8a-bafc-5f1bd433857a",
        "parentId" : "817514fc-a7f4-467a-b459-6eb9cd4ff4a0",
        "authorId" : "8e448017-7838-493d-a424-33cada0da657",
        "body" : "Ack\n",
        "createdAt" : "2016-08-05T23:44:27Z",
        "updatedAt" : "2016-08-08T08:45:57Z",
        "lastEditedBy" : "8e448017-7838-493d-a424-33cada0da657",
        "tags" : [
        ]
      }
    ],
    "commit" : "3c5364954b8a4277990f0469b57720531bdaf0bd",
    "line" : null,
    "diffHunk" : "@@ -1,1 +524,528 @@//  phasephase - phase to set\n//  volume - volume which Capacity is set into claim.Status.Capacity\nfunc (ctrl *PersistentVolumeController) updateClaimStatus(claim *api.PersistentVolumeClaim, phase api.PersistentVolumeClaimPhase, volume *api.PersistentVolume) (*api.PersistentVolumeClaim, error) {\n\tglog.V(4).Infof(\"updating PersistentVolumeClaim[%s] status: set phase %s\", claimToClaimKey(claim), phase)\n"
  },
  {
    "id" : "1a9d8f2e-ff1e-4dfb-a99d-81f0cb70655d",
    "prId" : 29006,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "efdffe67-7f52-4a3c-9aeb-27d635e3db0f",
        "parentId" : null,
        "authorId" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "body" : "So, we expect this to fail for older volumes that were provisioned by the alpha version of this feature, right?\n",
        "createdAt" : "2016-07-22T03:11:56Z",
        "updatedAt" : "2016-08-18T10:50:16Z",
        "lastEditedBy" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "tags" : [
        ]
      },
      {
        "id" : "58a28953-9c50-4dfe-ac2d-1835af5abc4c",
        "parentId" : "efdffe67-7f52-4a3c-9aeb-27d635e3db0f",
        "authorId" : "8d7e3035-146d-4d3c-86b9-e61987a0f17b",
        "body" : "Yes, I changed the annotation from alpha-->beta (left a reference to alpha).  The binder will ignore binding or provisioning alpha DP requests.  \n",
        "createdAt" : "2016-07-26T20:16:51Z",
        "updatedAt" : "2016-08-18T10:50:16Z",
        "lastEditedBy" : "8d7e3035-146d-4d3c-86b9-e61987a0f17b",
        "tags" : [
        ]
      }
    ],
    "commit" : "bb5d562f37ab029d2b562e23bd23e906ee099a45",
    "line" : 102,
    "diffHunk" : "@@ -1,1 +1142,1146 @@\tvar err error\n\n\t// Find a plugin. Try to find the same plugin that provisioned the volume\n\tvar plugin vol.DeletableVolumePlugin\n\tif hasAnnotation(volume.ObjectMeta, annDynamicallyProvisioned) {"
  }
]