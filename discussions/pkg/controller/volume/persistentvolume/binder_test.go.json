[
  {
    "id" : "86da7623-d937-4430-99d2-624ce9f8a786",
    "prId" : 68673,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/68673#pullrequestreview-156652783",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4cd02e1e-c41f-4912-8410-10a38dcdbc25",
        "parentId" : null,
        "authorId" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "body" : "I see you change all tests to use `VolumeAvailable`. Can you please add a test with `VolumePending` to see it's really skipped?",
        "createdAt" : "2018-09-17T13:12:23Z",
        "updatedAt" : "2018-09-19T05:14:03Z",
        "lastEditedBy" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "tags" : [
        ]
      },
      {
        "id" : "289f391e-439f-4738-bdc0-c9a60c276143",
        "parentId" : "4cd02e1e-c41f-4912-8410-10a38dcdbc25",
        "authorId" : "e4e7c71f-23b5-4203-b65d-3f5f3c503b64",
        "body" : "This has been added in this new commit: https://github.com/kubernetes/kubernetes/commit/1f8b4b1e1444529d6a536180d48c775e0aac7109",
        "createdAt" : "2018-09-18T03:07:33Z",
        "updatedAt" : "2018-09-19T05:14:03Z",
        "lastEditedBy" : "e4e7c71f-23b5-4203-b65d-3f5f3c503b64",
        "tags" : [
        ]
      },
      {
        "id" : "55d5310a-4a4c-4e16-a7df-a9ca5f9eddc1",
        "parentId" : "4cd02e1e-c41f-4912-8410-10a38dcdbc25",
        "authorId" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "body" : "I meant a test in `binder_test.go`, as it goes through whole syncClaim. Just in case.",
        "createdAt" : "2018-09-18T11:08:27Z",
        "updatedAt" : "2018-09-19T05:14:03Z",
        "lastEditedBy" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "tags" : [
        ]
      },
      {
        "id" : "2a02928c-e637-432d-9707-549ccaaf0236",
        "parentId" : "4cd02e1e-c41f-4912-8410-10a38dcdbc25",
        "authorId" : "e4e7c71f-23b5-4203-b65d-3f5f3c503b64",
        "body" : "Added a test case in `TestSync`, please check https://github.com/kubernetes/kubernetes/pull/68673/commits/1e27a28dca346149e8278ee6b6b05c34bc6beb4c#diff-1e6b1611f17f082fe07eac7bc9116f73R227.",
        "createdAt" : "2018-09-19T04:28:40Z",
        "updatedAt" : "2018-09-19T05:14:16Z",
        "lastEditedBy" : "e4e7c71f-23b5-4203-b65d-3f5f3c503b64",
        "tags" : [
        ]
      }
    ],
    "commit" : "1e27a28dca346149e8278ee6b6b05c34bc6beb4c",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +46,50 @@\t\t\t// syncClaim binds to a matching unbound volume.\n\t\t\t\"1-1 - successful bind\",\n\t\t\tnewVolumeArray(\"volume1-1\", \"1Gi\", \"\", \"\", v1.VolumeAvailable, v1.PersistentVolumeReclaimRetain, classEmpty),\n\t\t\tnewVolumeArray(\"volume1-1\", \"1Gi\", \"uid1-1\", \"claim1-1\", v1.VolumeBound, v1.PersistentVolumeReclaimRetain, classEmpty, annBoundByController),\n\t\t\tnewClaimArray(\"claim1-1\", \"uid1-1\", \"1Gi\", \"\", v1.ClaimPending, nil),"
  },
  {
    "id" : "1094e6b0-6ece-439f-9b86-ef7796a044ae",
    "prId" : 59947,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/59947#pullrequestreview-109388381",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e95c8169-603d-4359-83e6-1d337cca8601",
        "parentId" : null,
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "I think we don't want the annBoundByController annotations set",
        "createdAt" : "2018-04-04T00:24:58Z",
        "updatedAt" : "2018-04-16T19:25:30Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "c98d0fac-bb8d-420b-8eaa-1d69f2e9db09",
        "parentId" : "e95c8169-603d-4359-83e6-1d337cca8601",
        "authorId" : "9ce7bd1a-5286-4173-88a4-039146bf0d46",
        "body" : "Thank you for your comment. I checked the codes again for annotations for dynamic provision case. \r\n\r\n- Internal provisioner case:\r\n  annBoundByController and annDynamicallyProvisioned are set in below code.\r\n    https://github.com/kubernetes/kubernetes/blob/master/pkg/controller/volume/persistentvolume/pv_controller.go#L1433\r\n    https://github.com/kubernetes/kubernetes/blob/master/pkg/controller/volume/persistentvolume/pv_controller.go#L1434\r\n\r\n- External provisioner case:\r\n  annDynamicallyProvisioned is set in below code.\r\n    https://github.com/kubernetes-incubator/external-storage/blob/master/lib/controller/controller.go#L905\r\n\r\n\r\nWith above in mind, do you think that it's better to just remove annBoundByController for all the cases or add some cases that have different set of annotations. (In the latter case, annDynamicallyProvisioned might also need to be added.)\r\n\r\nAbove annotations doesn't affect any behaviours in the current codes.\r\nTherefore, I'm inclined to agree to just remove it, however let me confirm it just to be sure.\r\n\r\n\r\n",
        "createdAt" : "2018-04-04T15:28:31Z",
        "updatedAt" : "2018-04-16T19:25:30Z",
        "lastEditedBy" : "9ce7bd1a-5286-4173-88a4-039146bf0d46",
        "tags" : [
        ]
      },
      {
        "id" : "09c35c5f-3967-4cb6-921d-cd90acd99126",
        "parentId" : "e95c8169-603d-4359-83e6-1d337cca8601",
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "Oh nevermind, I got the ordering wrong.  They are put on the PV after dynamic provisioning, and the new event generated here is after that point.  So this is correct.",
        "createdAt" : "2018-04-04T15:48:27Z",
        "updatedAt" : "2018-04-16T19:25:30Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      }
    ],
    "commit" : "0ee71f0cc2380854e22c7027f13f1bb41c139c41",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +771,775 @@\t\t\t// syncVolume output warning when pv is prebound to pvc with mismatching volumeMode\n\t\t\t\"14-13 - output warning when pv is prebound to pvc with different volumeModes\",\n\t\t\twithVolumeVolumeMode(&modeFile, newVolumeArray(\"volume14-13\", \"10Gi\", \"uid14-13\", \"claim14-13\", v1.VolumePending, v1.PersistentVolumeReclaimRetain, classEmpty, annBoundByController)),\n\t\t\twithVolumeVolumeMode(&modeFile, newVolumeArray(\"volume14-13\", \"10Gi\", \"uid14-13\", \"claim14-13\", v1.VolumePending, v1.PersistentVolumeReclaimRetain, classEmpty, annBoundByController)),\n\t\t\twithClaimVolumeMode(&modeBlock, newClaimArray(\"claim14-13\", \"uid14-13\", \"10Gi\", \"\", v1.ClaimPending, nil)),"
  },
  {
    "id" : "8a725b9e-4cb4-4891-b5a8-cb7126b51279",
    "prId" : 53385,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/53385#pullrequestreview-67776741",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "923f4e20-e2b3-4d15-a591-3bd93c9f9d0e",
        "parentId" : null,
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "also pvc is prebound but mismatching volumeModes",
        "createdAt" : "2017-10-06T02:01:56Z",
        "updatedAt" : "2017-11-20T20:18:33Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "a2188364-5293-4be8-b057-6b0b7dbad520",
        "parentId" : "923f4e20-e2b3-4d15-a591-3bd93c9f9d0e",
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "also prebound, matching volumeModes, but mismatched storageclass",
        "createdAt" : "2017-10-06T02:03:27Z",
        "updatedAt" : "2017-11-20T20:18:33Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "503cfd35-c85c-4448-94ea-8840d2fd4fb0",
        "parentId" : "923f4e20-e2b3-4d15-a591-3bd93c9f9d0e",
        "authorId" : "e15ef128-90ac-4a14-8795-b5be15e790ce",
        "body" : "doesn't 14-8 cover pvc is prebound but mismatching volumeModes?\r\n\r\nAdding 14-5-2 for prebound pvc with matching modes but mismatched class",
        "createdAt" : "2017-10-06T18:40:12Z",
        "updatedAt" : "2017-11-20T20:18:33Z",
        "lastEditedBy" : "e15ef128-90ac-4a14-8795-b5be15e790ce",
        "tags" : [
        ]
      },
      {
        "id" : "ffc7b84b-4142-4d3f-b405-8fc2751185a5",
        "parentId" : "923f4e20-e2b3-4d15-a591-3bd93c9f9d0e",
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "sorry, i mean prebound pv with mismatching volume modes",
        "createdAt" : "2017-10-06T18:47:48Z",
        "updatedAt" : "2017-11-20T20:18:33Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "c76a1ef6-e7dc-49c6-b1cb-99cd5f3851b3",
        "parentId" : "923f4e20-e2b3-4d15-a591-3bd93c9f9d0e",
        "authorId" : "e15ef128-90ac-4a14-8795-b5be15e790ce",
        "body" : "ah, adding 14-8-1 test",
        "createdAt" : "2017-10-06T19:53:40Z",
        "updatedAt" : "2017-11-20T20:18:33Z",
        "lastEditedBy" : "e15ef128-90ac-4a14-8795-b5be15e790ce",
        "tags" : [
        ]
      }
    ],
    "commit" : "86742a2c927e3bf7eace16c5a9955833e4befb86",
    "line" : 179,
    "diffHunk" : "@@ -1,1 +679,683 @@\t\t},\n\t\t{\n\t\t\t// syncVolume binds when pvc is prebound to pv with matching volumeModes block\n\t\t\t\"14-9 - bind when pvc is prebound to pv with matching volumeModes block\",\n\t\t\twithVolumeVolumeMode(&modeBlock, newVolumeArray(\"volume14-9\", \"10Gi\", \"\", \"\", v1.VolumePending, v1.PersistentVolumeReclaimRetain, classEmpty)),"
  }
]