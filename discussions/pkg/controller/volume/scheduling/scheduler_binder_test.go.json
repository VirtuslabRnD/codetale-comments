[
  {
    "id" : "3f626e69-2f54-4aa6-88ef-20e07826ab34",
    "prId" : 98912,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/98912#pullrequestreview-601068211",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "57cbbe93-25da-4425-888e-3b2889d68254",
        "parentId" : null,
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "Do we need `t.Parallel()` here and at the top of the Test function? I see the other test cases don't have the call here, and most examples I see have the parallel call inside the `t.Run()`",
        "createdAt" : "2021-02-28T22:23:59Z",
        "updatedAt" : "2021-03-01T03:57:53Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "0c6aa36e-01b1-45e8-9095-fdac1259ba61",
        "parentId" : "57cbbe93-25da-4425-888e-3b2889d68254",
        "authorId" : "32b8d25c-f21a-4ff1-a275-7dbf7672c31a",
        "body" : "Since this test function takes a minute here, add `t.Parallel()` to `t.Run()` to make all cases in the parallel.",
        "createdAt" : "2021-03-01T03:57:51Z",
        "updatedAt" : "2021-03-01T04:02:20Z",
        "lastEditedBy" : "32b8d25c-f21a-4ff1-a275-7dbf7672c31a",
        "tags" : [
        ]
      },
      {
        "id" : "de84f244-2a12-45d6-a911-01efd07a6cb2",
        "parentId" : "57cbbe93-25da-4425-888e-3b2889d68254",
        "authorId" : "32b8d25c-f21a-4ff1-a275-7dbf7672c31a",
        "body" : "Found that `scenario` is a shared state.\r\n``` golang\r\nfor name, scenario := range scenarios {\r\n      scenario := scenario\r\n      t.Run(name, func(t *testing.T) {\r\n\t      t.Parallel()\r\n\t      run(t, scenario)\r\n      })\r\n}\r\n```",
        "createdAt" : "2021-03-01T04:04:51Z",
        "updatedAt" : "2021-03-01T04:51:09Z",
        "lastEditedBy" : "32b8d25c-f21a-4ff1-a275-7dbf7672c31a",
        "tags" : [
        ]
      },
      {
        "id" : "0a378f9a-de78-4d99-a7d9-b915c7420714",
        "parentId" : "57cbbe93-25da-4425-888e-3b2889d68254",
        "authorId" : "32b8d25c-f21a-4ff1-a275-7dbf7672c31a",
        "body" : "Thanks, Updated.",
        "createdAt" : "2021-03-01T04:05:05Z",
        "updatedAt" : "2021-03-01T04:05:05Z",
        "lastEditedBy" : "32b8d25c-f21a-4ff1-a275-7dbf7672c31a",
        "tags" : [
        ]
      },
      {
        "id" : "4ff5b0a7-daec-431b-a25a-8a06a9feb405",
        "parentId" : "57cbbe93-25da-4425-888e-3b2889d68254",
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "Great find! Thanks!",
        "createdAt" : "2021-03-01T19:02:07Z",
        "updatedAt" : "2021-03-01T19:02:07Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      }
    ],
    "commit" : "67e4ba07972310dbae9976439d39e25c221b4d1d",
    "line" : 61,
    "diffHunk" : "@@ -1,1 +2066,2070 @@\t\tscenario := scenario\n\t\tt.Run(name, func(t *testing.T) {\n\t\t\tt.Parallel()\n\t\t\trun(t, scenario)\n\t\t})"
  },
  {
    "id" : "9a198af7-7d41-4a6c-9fdf-6311b4515a83",
    "prId" : 93892,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/93892#pullrequestreview-465516774",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4d36f537-347d-4ef2-ab10-3fffcb207a46",
        "parentId" : null,
        "authorId" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "body" : "ditto,@cofyc can you double check if the change to this test case is expected?",
        "createdAt" : "2020-08-11T17:29:30Z",
        "updatedAt" : "2020-08-11T17:29:44Z",
        "lastEditedBy" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "tags" : [
        ]
      },
      {
        "id" : "84e6b718-2a12-4f6c-85b4-d8c1e0f93da4",
        "parentId" : "4d36f537-347d-4ef2-ab10-3fffcb207a46",
        "authorId" : "e4e7c71f-23b5-4203-b65d-3f5f3c503b64",
        "body" : "yes",
        "createdAt" : "2020-08-12T00:35:26Z",
        "updatedAt" : "2020-08-12T00:35:34Z",
        "lastEditedBy" : "e4e7c71f-23b5-4203-b65d-3f5f3c503b64",
        "tags" : [
        ]
      }
    ],
    "commit" : "d9f532029e8955fb08394c2be3e316b9ed2cfe2e",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +850,854 @@\t\t\treasons: ConflictReasons{ErrReasonBindConflict},\n\t\t},\n\t\t\"one-prebound,one-unbound\": {\n\t\t\tpodPVCs: []*v1.PersistentVolumeClaim{unboundPVC, preboundPVC},\n\t\t\tpvs:     []*v1.PersistentVolume{pvNode1a, pvNode1b},"
  },
  {
    "id" : "12861239-73df-48d7-91fe-259dd807898f",
    "prId" : 92387,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/92387#pullrequestreview-436558126",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b15b6d76-5eb8-4413-86ca-452f9c9aaef7",
        "parentId" : null,
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "Do we want to validate Pod cache in the success case?",
        "createdAt" : "2020-06-23T23:47:26Z",
        "updatedAt" : "2020-07-08T06:02:58Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "f97b2d6d-9d20-44f0-b05e-cf69e8f1be9b",
        "parentId" : "b15b6d76-5eb8-4413-86ca-452f9c9aaef7",
        "authorId" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "body" : "I guess it's useful as an additional check, so I've added it (for both positive and negative cases).\r\n",
        "createdAt" : "2020-06-25T06:41:49Z",
        "updatedAt" : "2020-07-08T06:02:58Z",
        "lastEditedBy" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "tags" : [
        ]
      }
    ],
    "commit" : "30f93802a70f988bee901a6d272883e20eafad57",
    "line" : 415,
    "diffHunk" : "@@ -1,1 +2227,2231 @@\t\t\tt.Error(\"returned success but expected error\")\n\t\t}\n\t\tcheckReasons(t, reasons, scenario.reasons)\n\t\tprovisions := scenario.pvcs\n\t\tif len(reasons) > 0 {"
  },
  {
    "id" : "813fd412-ef14-419e-9b5a-38f2fed3e63a",
    "prId" : 92387,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/92387#pullrequestreview-436558126",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4edc14b0-cd0c-4de1-a9f4-5830fd680b5e",
        "parentId" : null,
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "Can you also add some integration test cases so we test the full interaction with etcd?\r\n\r\nhttps://github.com/kubernetes/kubernetes/blob/master/test/integration/volumescheduling/volume_binding_test.go",
        "createdAt" : "2020-06-23T23:52:54Z",
        "updatedAt" : "2020-07-08T06:02:58Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "0176a38e-cb62-4568-9099-63a7268609c3",
        "parentId" : "4edc14b0-cd0c-4de1-a9f4-5830fd680b5e",
        "authorId" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "body" : "Okay, done.\r\n",
        "createdAt" : "2020-06-25T09:08:15Z",
        "updatedAt" : "2020-07-08T06:02:58Z",
        "lastEditedBy" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "tags" : [
        ]
      }
    ],
    "commit" : "30f93802a70f988bee901a6d272883e20eafad57",
    "line" : 308,
    "diffHunk" : "@@ -1,1 +2120,2124 @@// TestCapacity covers different scenarios involving CSIStorageCapacity objects.\n// Scenarios without those are covered by TestFindPodVolumesWithProvisioning.\nfunc TestCapacity(t *testing.T) {\n\ttype scenarioType struct {\n\t\t// Inputs"
  },
  {
    "id" : "4cc7f22a-cbd1-48a1-a286-973d559063a1",
    "prId" : 91705,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/91705#pullrequestreview-433903952",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c70c7015-3cf3-4b56-81e8-31b1e76d8ef0",
        "parentId" : null,
        "authorId" : "e1ba72c9-3be8-432b-b345-ac2d180a8eab",
        "body" : "We have to pass scenario.bindings and scenario.provisionedPVCs because scenario.expectedBindings, and scenario.expectedProvisionings are empty when scenario.shouldFail is true.  If these are empty, nothing is checked in validateFailedAssume.",
        "createdAt" : "2020-06-19T08:38:04Z",
        "updatedAt" : "2020-06-19T08:39:54Z",
        "lastEditedBy" : "e1ba72c9-3be8-432b-b345-ac2d180a8eab",
        "tags" : [
        ]
      }
    ],
    "commit" : "79ab958996f4a1d1ebcd20b695624a73d664883f",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +1227,1231 @@\t\t}\n\t\tif scenario.shouldFail {\n\t\t\ttestEnv.validateCacheRestored(t, pod, scenario.bindings, scenario.provisionedPVCs)\n\t\t} else {\n\t\t\ttestEnv.validateAssume(t, pod, scenario.expectedBindings, scenario.expectedProvisionings)"
  },
  {
    "id" : "602a3089-7b6a-4447-995d-d41f5a993d16",
    "prId" : 87642,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/87642#pullrequestreview-355352615",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8b39d0fa-7f50-4ccb-a5d0-8a8df14ebcfd",
        "parentId" : null,
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "I don't see this used in other unit tests. Is this necessary?",
        "createdAt" : "2020-02-01T02:01:41Z",
        "updatedAt" : "2020-02-01T02:01:41Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "15f17869-6338-402e-8550-d34e1ddf400b",
        "parentId" : "8b39d0fa-7f50-4ccb-a5d0-8a8df14ebcfd",
        "authorId" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "body" : "Without it, one cannot enable log output when running the test manually. The default log level is unchanged, so nothing changes for the Prow CI, but when running manually one can now do:\r\n```\r\ngo test -v ./pkg/controller/volume/scheduling -args -v 5\r\n```\r\n\r\nNote the `-v 5`.\r\n\r\nWhen the test was written, glog flags where always enabled. That changed when moving to klog.\r\n",
        "createdAt" : "2020-02-03T06:25:36Z",
        "updatedAt" : "2020-02-03T06:25:37Z",
        "lastEditedBy" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "tags" : [
        ]
      },
      {
        "id" : "722f6c55-6c38-44cd-9a4a-0de55068fb03",
        "parentId" : "8b39d0fa-7f50-4ccb-a5d0-8a8df14ebcfd",
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "This is fine for this particular test, but we should probably make the change in all tests? I'm not sure if there's an easier way to update every test.",
        "createdAt" : "2020-02-04T02:31:44Z",
        "updatedAt" : "2020-02-04T02:31:44Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "4d7b1e5b-847b-400d-94f5-2590809c4760",
        "parentId" : "8b39d0fa-7f50-4ccb-a5d0-8a8df14ebcfd",
        "authorId" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "body" : "Yes, it may be worthwhile to do it in all tests at once instead of on demand. Some other developers might not realize that they can get additional logging when trying to debug something.\r\n\r\nI don't think there's a way to do this in just one file. We could limit it to a one-line change in each test with a helper package that contains the init function, but that may be overkill:\r\n\r\n`test/util/klog/klog.go:`\r\n```\r\nimport k8s.io/klog\r\npackage klog\r\n\r\nfunc init () {\r\n    klog.InitFlags(nil)\r\n}\r\n```\r\n\r\nThen in a test, import that package instead of `k8s.io/klog`. Do you prefer that or explicit `init` functions?\r\n",
        "createdAt" : "2020-02-04T06:26:22Z",
        "updatedAt" : "2020-02-04T06:26:22Z",
        "lastEditedBy" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "tags" : [
        ]
      },
      {
        "id" : "d3a0ec72-1a3d-4d18-9dae-e915586abbb0",
        "parentId" : "8b39d0fa-7f50-4ccb-a5d0-8a8df14ebcfd",
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "cc @kubernetes/k8s-infra-team for suggestions",
        "createdAt" : "2020-02-04T17:39:04Z",
        "updatedAt" : "2020-02-04T17:39:04Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "3d61bfca-2b8a-4220-8529-ea725ad83e52",
        "parentId" : "8b39d0fa-7f50-4ccb-a5d0-8a8df14ebcfd",
        "authorId" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "body" : "I didn't even know this was an alias but apparently it CCs me :upside_down_face: \r\nThis is probably a question for #testing-commons on slack.",
        "createdAt" : "2020-02-04T18:20:18Z",
        "updatedAt" : "2020-02-04T18:20:18Z",
        "lastEditedBy" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "tags" : [
        ]
      },
      {
        "id" : "240966fd-6c98-44d2-85cb-82ca71c7d112",
        "parentId" : "8b39d0fa-7f50-4ccb-a5d0-8a8df14ebcfd",
        "authorId" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "body" : "The comment on #testing-commons was that separate init functions are preferred over import magic.",
        "createdAt" : "2020-02-07T18:32:49Z",
        "updatedAt" : "2020-02-07T18:32:49Z",
        "lastEditedBy" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "tags" : [
        ]
      }
    ],
    "commit" : "a3c434510d9a3d6346fbb1d70a3475232f7ac093",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +115,119 @@\nfunc init() {\n\tklog.InitFlags(nil)\n}\n"
  }
]