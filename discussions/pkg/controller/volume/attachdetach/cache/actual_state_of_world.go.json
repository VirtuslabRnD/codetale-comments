[
  {
    "id" : "1a49761b-32dd-47c0-b4d7-3503a3ce26ed",
    "prId" : 94599,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/94599#pullrequestreview-518343296",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7cf27220-5185-47d7-872f-07f22fd11ebd",
        "parentId" : null,
        "authorId" : "5c4757f6-5a7a-438b-b77f-778928cb6979",
        "body" : "Can we add some logs? For user, they can locate the error conveniently.",
        "createdAt" : "2020-09-11T11:09:48Z",
        "updatedAt" : "2020-10-29T20:26:17Z",
        "lastEditedBy" : "5c4757f6-5a7a-438b-b77f-778928cb6979",
        "tags" : [
        ]
      },
      {
        "id" : "fe196a45-c76f-492a-9d00-d66f46dbddf9",
        "parentId" : "7cf27220-5185-47d7-872f-07f22fd11ebd",
        "authorId" : "34f61776-88da-4b26-aa20-3c4f92530d05",
        "body" : "I'm a bit hesitant to add logging into data structure operations, but I added logging to all callers",
        "createdAt" : "2020-10-28T05:56:41Z",
        "updatedAt" : "2020-10-29T20:26:18Z",
        "lastEditedBy" : "34f61776-88da-4b26-aa20-3c4f92530d05",
        "tags" : [
        ]
      }
    ],
    "commit" : "d9a629fe3a5c812883a8c22744d3571facaceb44",
    "line" : 66,
    "diffHunk" : "@@ -1,1 +568,572 @@\t\tif node, nodeExists := volumeObj.nodesAttachedTo[nodeName]; nodeExists {\n\t\t\tif node.attachedConfirmed {\n\t\t\t\treturn AttachStateAttached\n\t\t\t}\n\t\t\treturn AttachStateUncertain"
  },
  {
    "id" : "97b37bba-cd28-4ec9-977d-92b1e799c51d",
    "prId" : 94599,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/94599#pullrequestreview-524711129",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ccb80dbe-a918-41b6-af26-0821b39de5b2",
        "parentId" : null,
        "authorId" : "8e448017-7838-493d-a424-33cada0da657",
        "body" : "Why introduce a new more complicated struct here? As far as I can tell callers only use 2 states and none of them appear to be using the new `AttachStateUncertain` state?",
        "createdAt" : "2020-11-05T07:36:24Z",
        "updatedAt" : "2020-11-05T07:36:28Z",
        "lastEditedBy" : "8e448017-7838-493d-a424-33cada0da657",
        "tags" : [
        ]
      },
      {
        "id" : "c3e3891c-90a9-4dbb-9abb-71ea58ab410d",
        "parentId" : "ccb80dbe-a918-41b6-af26-0821b39de5b2",
        "authorId" : "34f61776-88da-4b26-aa20-3c4f92530d05",
        "body" : "Between the two call sites, [one of them](https://github.com/kubernetes/kubernetes/pull/94599/commits/d9a629fe3a5c812883a8c22744d3571facaceb44#diff-359fd18b3708873b0dc50ba24ba0b056f9401e66d73351bea46ee30f95b5b4b9R465)  matches exactly on attach while [the other](https://github.com/kubernetes/kubernetes/pull/94599/commits/d9a629fe3a5c812883a8c22744d3571facaceb44#diff-e76cff1d139f1df6d8c37cea61b19aa8caea6b103d64e58a084f2d81c5bad149R173) matches exactly on detach. Uncertain is not an acceptable state for either caller. Before, \"uncertain\" and \"detached\" states are both \"false\"\r\n\r\nA type with 3 values is IMO more explicit than a type with 2 values, and simplifies [this logic](https://github.com/kubernetes/kubernetes/pull/94599/commits/d9a629fe3a5c812883a8c22744d3571facaceb44#diff-e76cff1d139f1df6d8c37cea61b19aa8caea6b103d64e58a084f2d81c5bad149L172). But strictly speaking it's not necessary functionally",
        "createdAt" : "2020-11-05T22:08:24Z",
        "updatedAt" : "2020-11-05T22:08:24Z",
        "lastEditedBy" : "34f61776-88da-4b26-aa20-3c4f92530d05",
        "tags" : [
        ]
      }
    ],
    "commit" : "d9a629fe3a5c812883a8c22744d3571facaceb44",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +103,107 @@\t// specified node, AttachStateDetached if the combo does not exist, or\n\t// AttachStateUncertain if the attached state is marked as uncertain.\n\tGetAttachState(volumeName v1.UniqueVolumeName, nodeName types.NodeName) AttachState\n\n\t// GetAttachedVolumes generates and returns a list of volumes/node pairs"
  },
  {
    "id" : "3537079d-07a0-4a7c-ba01-ead4d41118bd",
    "prId" : 71276,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/71276#pullrequestreview-192960254",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3af277aa-0beb-43bf-b0ca-957f482fd0fb",
        "parentId" : null,
        "authorId" : "8e448017-7838-493d-a424-33cada0da657",
        "body" : "nit:\r\n`This function is currently used by attach_detach_controller to process VolumeInUse` <- why does that need to be added?\r\n",
        "createdAt" : "2019-01-16T03:21:52Z",
        "updatedAt" : "2019-01-16T03:27:55Z",
        "lastEditedBy" : "8e448017-7838-493d-a424-33cada0da657",
        "tags" : [
        ]
      }
    ],
    "commit" : "7bac6ca73ad6fa1b0b637e801a524d6a1df663ea",
    "line" : 47,
    "diffHunk" : "@@ -1,1 +111,115 @@\t// the specified node reflecting which volumes are/or might be attached to that node\n\t// based on the current actual state of the world. This function is currently used by\n\t// attach_detach_controller to process VolumeInUse\n\tGetAttachedVolumesForNode(nodeName types.NodeName) []AttachedVolume\n"
  },
  {
    "id" : "f94cab88-d28c-431e-b921-542b3033bd14",
    "prId" : 71276,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/71276#pullrequestreview-192960254",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "563fef92-7fc4-445a-9258-9bfafaf37472",
        "parentId" : null,
        "authorId" : "8e448017-7838-493d-a424-33cada0da657",
        "body" : "nit: Change wording for clarity to:\r\n\r\n```\r\nThe attached value indicates the specified volume was confirmed to be attached to the specified node. If an attach operation succeeds this value should be true. If an attach operation fails, and it is unclear if the volume is attached or not attached, this value should be false.\r\n```",
        "createdAt" : "2019-01-16T03:26:12Z",
        "updatedAt" : "2019-01-16T03:27:55Z",
        "lastEditedBy" : "8e448017-7838-493d-a424-33cada0da657",
        "tags" : [
        ]
      }
    ],
    "commit" : "7bac6ca73ad6fa1b0b637e801a524d6a1df663ea",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +51,55 @@\t// If attached is set to true, it indicates the specified volume is already\n\t// attached to the specified node. If attached set to false, it means that\n\t// the volume is not confirmed to be attached to the node yet.\n\t// A unique volume name is generated from the volumeSpec and returned on\n\t// success."
  },
  {
    "id" : "d4c71697-de4e-4117-8dd3-daf67e1cd92c",
    "prId" : 39732,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/39732#pullrequestreview-28648235",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "92bf741d-6968-49f7-8f87-7e0281af7b49",
        "parentId" : null,
        "authorId" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "body" : "So when `volumeSpec` is nil - we are adding `nil` spec to `asw.attachedVolumes` right? What I mean is:\r\n\r\n```\r\nvolumeObj = attachedVolume{\r\n\t\t\tvolumeName:      volumeName,\r\n\t\t\tspec:            volumeSpec,\r\n\t\t\tnodesAttachedTo: make(map[types.NodeName]nodeAttachedTo),\r\n\t\t\tdevicePath:      devicePath,\r\n\t\t}\r\n```\r\n\r\nIn this struct - spec will be clearly `nil`. Are you sure that this won't cause problems in other parts of the code that don't expect spec to be nil? \r\n\r\nI see that you have handled some cases where `nil` spec might cause problems in operation_generator. But not all the cases. Take https://github.com/kubernetes/kubernetes/blob/master/pkg/controller/volume/attachdetach/reconciler/reconciler.go#L123 code for example, which undeneath uses those specs to extract plugins to verify if volumes are attached.\r\n\r\nI am thinking that - this will throw panic errors, no? cc @jingxu97 ",
        "createdAt" : "2017-03-23T02:50:12Z",
        "updatedAt" : "2017-04-20T11:05:10Z",
        "lastEditedBy" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "tags" : [
        ]
      },
      {
        "id" : "cd43db7f-7587-49bf-9382-2316bbf0fa5a",
        "parentId" : "92bf741d-6968-49f7-8f87-7e0281af7b49",
        "authorId" : "d0f794d1-a9d4-4c31-aacc-fb35543cf586",
        "body" : "Yes. This is the most dangerous part of the patch, I agree. The particular case you pointed out should be safe: the syncStates() method is being called only after the reconcile() and therefore there should exist no volumes with nil Spec in the ASW: the volume with nil spec is only present in ASW and therefore removed from the list of attached nodes immediately during the first reconcile() run -- syncStates() should never encounter it. But you made me to look at the tests again and I will add more nil pointer tests into them.",
        "createdAt" : "2017-03-23T13:13:57Z",
        "updatedAt" : "2017-04-20T11:05:10Z",
        "lastEditedBy" : "d0f794d1-a9d4-4c31-aacc-fb35543cf586",
        "tags" : [
        ]
      }
    ],
    "commit" : "852c44ae598e5d9f0dd936d8f8b3c7a2d41827d5",
    "line" : 81,
    "diffHunk" : "@@ -1,1 +286,290 @@\t\t// status; if the pods using the volume have been removed and are unreachable\n\t\t// the volumes should be detached immediately and the spec is not needed\n\t\tvolumeName = uniqueName\n\t}\n"
  },
  {
    "id" : "e57bd5a5-816e-413a-bebe-a9a182e6c076",
    "prId" : 39732,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/39732#pullrequestreview-33676059",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d1104a16-2bf7-4128-aea3-40a320243015",
        "parentId" : null,
        "authorId" : "241ab19e-f85a-4d22-92e2-88f2b6287d14",
        "body" : "function's comment should be amended to include the new forceUnmount parameter. since the comment pretends atm that there's only one bool",
        "createdAt" : "2017-04-19T19:20:13Z",
        "updatedAt" : "2017-04-20T11:05:10Z",
        "lastEditedBy" : "241ab19e-f85a-4d22-92e2-88f2b6287d14",
        "tags" : [
        ]
      },
      {
        "id" : "4e7cb1ef-2846-4328-94ab-7f57c71c664c",
        "parentId" : "d1104a16-2bf7-4128-aea3-40a320243015",
        "authorId" : "8e448017-7838-493d-a424-33cada0da657",
        "body" : "+1",
        "createdAt" : "2017-04-20T05:50:28Z",
        "updatedAt" : "2017-04-20T11:05:10Z",
        "lastEditedBy" : "8e448017-7838-493d-a424-33cada0da657",
        "tags" : [
        ]
      }
    ],
    "commit" : "852c44ae598e5d9f0dd936d8f8b3c7a2d41827d5",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +69,73 @@\t// If no node with the name nodeName exists in list of attached nodes for\n\t// the specified volume, an error is returned.\n\tSetVolumeMountedByNode(volumeName v1.UniqueVolumeName, nodeName types.NodeName, mounted bool, forceUnmount bool) error\n\n\t// SetNodeStatusUpdateNeeded sets statusUpdateNeeded for the specified"
  },
  {
    "id" : "c25670cb-661f-492b-a76f-b57cad01d16c",
    "prId" : 37727,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/37727#pullrequestreview-13885033",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3af8d451-013d-4ba1-8b69-822dd4db76bf",
        "parentId" : null,
        "authorId" : "8e448017-7838-493d-a424-33cada0da657",
        "body" : "nit: Errors should not be silently swallowed, consumers should decide if they want to swallow the error. So I'd suggest modifying this chain to bubble the error up the caller and let the caller decide to ignore it.",
        "createdAt" : "2016-12-01T02:03:35Z",
        "updatedAt" : "2016-12-01T05:12:42Z",
        "lastEditedBy" : "8e448017-7838-493d-a424-33cada0da657",
        "tags" : [
        ]
      },
      {
        "id" : "36c97505-cfd3-4e15-8bba-081e5f3c4a9f",
        "parentId" : "3af8d451-013d-4ba1-8b69-822dd4db76bf",
        "authorId" : "3493bb4b-b4bb-4e5d-b6dc-7c87de7da51b",
        "body" : "I agree and I wanted to change it back to `return fmt.Errorf()` as it previously was. However that would involve changing the return type of the function and everywhere where it is being called (twice in this case) which might also affect some tests.\r\nIt might make sense to not touch production code that has been tested before. Also this would involve an additional overhead on the intended fix of this PR. \r\nI can definitely create a separate issue and PR to refactor this code and spend some time with the changes that it would potentially affect.",
        "createdAt" : "2016-12-01T03:14:45Z",
        "updatedAt" : "2016-12-01T05:12:42Z",
        "lastEditedBy" : "3493bb4b-b4bb-4e5d-b6dc-7c87de7da51b",
        "tags" : [
        ]
      },
      {
        "id" : "cae33289-a4a9-4301-b76e-2360f45577b3",
        "parentId" : "3af8d451-013d-4ba1-8b69-822dd4db76bf",
        "authorId" : "8e448017-7838-493d-a424-33cada0da657",
        "body" : "Ack. We can do this during normal 1.6 development.",
        "createdAt" : "2016-12-01T04:39:41Z",
        "updatedAt" : "2016-12-01T05:12:42Z",
        "lastEditedBy" : "8e448017-7838-493d-a424-33cada0da657",
        "tags" : [
        ]
      },
      {
        "id" : "494fb4d2-fca2-406b-83ad-4d443873dfbb",
        "parentId" : "3af8d451-013d-4ba1-8b69-822dd4db76bf",
        "authorId" : "3493bb4b-b4bb-4e5d-b6dc-7c87de7da51b",
        "body" : "Created https://github.com/kubernetes/kubernetes/issues/39056",
        "createdAt" : "2016-12-21T01:25:58Z",
        "updatedAt" : "2016-12-21T01:25:58Z",
        "lastEditedBy" : "3493bb4b-b4bb-4e5d-b6dc-7c87de7da51b",
        "tags" : [
        ]
      }
    ],
    "commit" : "638ef1b97703407505d22ef510118faad67260fd",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +461,465 @@\t\t\tneeded,\n\t\t\tnodeName)\n\t\treturn\n\t}\n"
  },
  {
    "id" : "ddc44ba8-dd6b-412b-bb0a-d00a0ce8874d",
    "prId" : 33796,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/33796#pullrequestreview-2566038",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6b1575ff-1759-4ee0-9226-383f5c262c93",
        "parentId" : null,
        "authorId" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "body" : "Do you think we should glog.Info or glog.V(2).Info, so we can have some indication in the logs?\n",
        "createdAt" : "2016-09-30T23:42:27Z",
        "updatedAt" : "2016-10-04T00:14:41Z",
        "lastEditedBy" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "tags" : [
        ]
      },
      {
        "id" : "cb6f533c-5ae3-4ed3-aacd-6fec5e9918dd",
        "parentId" : "6b1575ff-1759-4ee0-9226-383f5c262c93",
        "authorId" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "body" : "added the log\n",
        "createdAt" : "2016-10-03T17:25:38Z",
        "updatedAt" : "2016-10-04T00:14:41Z",
        "lastEditedBy" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "tags" : [
        ]
      }
    ],
    "commit" : "9e8edf6baf06cdbf662dab3399c61fb5da6861ca",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +281,285 @@\t\t}\n\t} else {\n\t\t// If volume object already exists, it indicates that the information would be out of date.\n\t\t// Update the fields for volume object except the nodes attached to the volumes.\n\t\tvolumeObj.devicePath = devicePath"
  },
  {
    "id" : "d7ed59be-0a55-418d-926a-2a5b76ca939c",
    "prId" : 32242,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d3ef410b-48c8-4d9a-b11a-c0ffc97c5245",
        "parentId" : null,
        "authorId" : "8e448017-7838-493d-a424-33cada0da657",
        "body" : "Update the comments on the `AddVolumeNode(...)` interface method and `DetachRequestedTime` field (old comment said this method will reset the detach time which is no longer the case). \n",
        "createdAt" : "2016-09-12T19:09:19Z",
        "updatedAt" : "2016-09-12T20:51:35Z",
        "lastEditedBy" : "8e448017-7838-493d-a424-33cada0da657",
        "tags" : [
        ]
      },
      {
        "id" : "aa77c21a-e81c-400d-b9b5-0d155f38516e",
        "parentId" : "d3ef410b-48c8-4d9a-b11a-c0ffc97c5245",
        "authorId" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "body" : "fixed\n",
        "createdAt" : "2016-09-12T19:34:01Z",
        "updatedAt" : "2016-09-12T20:51:35Z",
        "lastEditedBy" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "tags" : [
        ]
      }
    ],
    "commit" : "efaceb28cce760e6be3f7d0b9abf880e92a5bf82",
    "line" : 80,
    "diffHunk" : "@@ -1,1 +249,253 @@}\n\nfunc (asw *actualStateOfWorld) AddVolumeNode(\n\tvolumeSpec *volume.Spec, nodeName string, devicePath string) (api.UniqueVolumeName, error) {\n\tasw.Lock()"
  }
]