[
  {
    "id" : "a22163eb-1cb2-4e80-9da7-af4b3cdfa4d3",
    "prId" : 37727,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/37727#pullrequestreview-10895536",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fc211756-b66c-48d1-9efc-518547eeacdf",
        "parentId" : null,
        "authorId" : "8e448017-7838-493d-a424-33cada0da657",
        "body" : "Write a comment before the test summarizing what it is testing (expected behavior).\r\n\r\nThen inside the test I like to break it down in to three sections:\r\n``` GO\r\n// Arrange\r\n// Act\r\n// Assert\r\n```\r\nThis makes it easier to follow the test. Basically you setup, do something, then verify it. Up to you if you want to follow this pattern.",
        "createdAt" : "2016-12-01T02:05:59Z",
        "updatedAt" : "2016-12-01T05:12:42Z",
        "lastEditedBy" : "8e448017-7838-493d-a424-33cada0da657",
        "tags" : [
        ]
      },
      {
        "id" : "135f854d-522c-405b-87b3-e7315b46b6e3",
        "parentId" : "fc211756-b66c-48d1-9efc-518547eeacdf",
        "authorId" : "3493bb4b-b4bb-4e5d-b6dc-7c87de7da51b",
        "body" : "Ack",
        "createdAt" : "2016-12-01T03:15:20Z",
        "updatedAt" : "2016-12-01T05:12:42Z",
        "lastEditedBy" : "3493bb4b-b4bb-4e5d-b6dc-7c87de7da51b",
        "tags" : [
        ]
      }
    ],
    "commit" : "638ef1b97703407505d22ef510118faad67260fd",
    "line" : null,
    "diffHunk" : "@@ -1,1 +1098,1102 @@// to be empty if the SetNodeStatusUpdateNeeded is called on a node that\n// does not exist in the actual state of the world\nfunc Test_SetNodeStatusUpdateNeededError(t *testing.T) {\n\t// Arrange\n\tvolumePluginMgr, _ := volumetesting.GetTestVolumePluginMgr(t)"
  },
  {
    "id" : "f8533cb6-c0b0-4fd2-9f7f-eaac5477a286",
    "prId" : 33796,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/33796#pullrequestreview-2619379",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "38d7a077-0a71-4b4a-94de-7a1b169148cf",
        "parentId" : null,
        "authorId" : "8e448017-7838-493d-a424-33cada0da657",
        "body" : "nit: move this up after the last `Test_...` so all tests are grouped together.\n",
        "createdAt" : "2016-10-03T22:40:03Z",
        "updatedAt" : "2016-10-04T00:14:41Z",
        "lastEditedBy" : "8e448017-7838-493d-a424-33cada0da657",
        "tags" : [
        ]
      }
    ],
    "commit" : "9e8edf6baf06cdbf662dab3399c61fb5da6861ca",
    "line" : 228,
    "diffHunk" : "@@ -1,1 +1058,1062 @@}\n\nfunc Test_OneVolumeTwoNodes_TwoDevicePaths(t *testing.T) {\n\t// Arrange\n\tvolumePluginMgr, _ := volumetesting.GetTestVolumePluginMgr(t)"
  },
  {
    "id" : "f5a4fc7c-d78b-46dc-a8a5-7e168c12c394",
    "prId" : 32242,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6f5d28b9-e06b-413b-9eee-c542951eb5c5",
        "parentId" : null,
        "authorId" : "8e448017-7838-493d-a424-33cada0da657",
        "body" : "Since you only wait `maxWaitTime` here, `etime` could end up being exactly equal to `maxWaitTime` which would cause this test to fail. Maybe wait 2 \\* `maxWaitTime`? Or change the check below to `if etime <= maxWaitTime {`\n",
        "createdAt" : "2016-09-12T19:18:47Z",
        "updatedAt" : "2016-09-12T20:51:35Z",
        "lastEditedBy" : "8e448017-7838-493d-a424-33cada0da657",
        "tags" : [
        ]
      },
      {
        "id" : "4c816f44-b3f4-492b-bc44-e1ffb5fcabaa",
        "parentId" : "6f5d28b9-e06b-413b-9eee-c542951eb5c5",
        "authorId" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "body" : "After the sleep, the check is below, to verify the etime should be equal to larger than maxWaitTime. There are two checks of the etime. The previous check is before sleep\nif etime < maxWaitTime {\n//fail\n}\n",
        "createdAt" : "2016-09-12T19:23:15Z",
        "updatedAt" : "2016-09-12T20:51:35Z",
        "lastEditedBy" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "tags" : [
        ]
      }
    ],
    "commit" : "efaceb28cce760e6be3f7d0b9abf880e92a5bf82",
    "line" : null,
    "diffHunk" : "@@ -1,1 +940,944 @@\t}\n\t// Sleep and call SetDetachRequestTime again\n\ttime.Sleep(maxWaitTime)\n\tetime, err = asw.SetDetachRequestTime(generatedVolumeName, nodeName)\n\tif err != nil {"
  }
]