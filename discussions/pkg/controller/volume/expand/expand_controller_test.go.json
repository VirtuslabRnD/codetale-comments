[
  {
    "id" : "4087061c-747c-405e-b44e-f7df94756ba6",
    "prId" : 77994,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/77994#pullrequestreview-242255589",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "895a8b9a-be81-4175-a88a-755b0ac78321",
        "parentId" : null,
        "authorId" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "body" : "Please also check for `err == nil && test.hasError` - test expected an error but got success.",
        "createdAt" : "2019-05-27T13:13:58Z",
        "updatedAt" : "2019-05-29T15:02:17Z",
        "lastEditedBy" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "tags" : [
        ]
      }
    ],
    "commit" : "7563b4d01b5e5dde148f746ccb1ff47c5b5b9272",
    "line" : 160,
    "diffHunk" : "@@ -1,1 +158,162 @@\n\t\terr = expController.syncHandler(test.pvcKey)\n\t\tif err != nil && !test.hasError {\n\t\t\tt.Fatalf(\"for: %s; unexpected error while running handler : %v\", test.name, err)\n\t\t}"
  },
  {
    "id" : "68fa94b5-b3cf-49be-b30d-36d4668be234",
    "prId" : 77994,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/77994#pullrequestreview-242255589",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f5375461-056b-473c-99cd-a2aa956d863d",
        "parentId" : null,
        "authorId" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "body" : "This code path is IMO not executed. It would be nice to have test for a generic CSI (non-migrated) volume too.",
        "createdAt" : "2019-05-27T13:17:36Z",
        "updatedAt" : "2019-05-29T15:02:17Z",
        "lastEditedBy" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "tags" : [
        ]
      }
    ],
    "commit" : "7563b4d01b5e5dde148f746ccb1ff47c5b5b9272",
    "line" : 208,
    "diffHunk" : "@@ -1,1 +206,210 @@\n\tif matched, _ := regexp.MatchString(`csi`, pluginName); matched {\n\t\tpv.Spec.PersistentVolumeSource.CSI = &v1.CSIPersistentVolumeSource{\n\t\t\tDriver:       pluginName,\n\t\t\tVolumeHandle: volumeName,"
  },
  {
    "id" : "98aca304-084e-4feb-8fa5-897159837f63",
    "prId" : 77994,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/77994#pullrequestreview-242255589",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d5cb8f21-e134-4e1d-b003-bea53c8348e1",
        "parentId" : null,
        "authorId" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "body" : "Please add check that the external resizer annotation is added / not added.",
        "createdAt" : "2019-05-27T13:18:32Z",
        "updatedAt" : "2019-05-29T15:02:17Z",
        "lastEditedBy" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "tags" : [
        ]
      }
    ],
    "commit" : "7563b4d01b5e5dde148f746ccb1ff47c5b5b9272",
    "line" : 167,
    "diffHunk" : "@@ -1,1 +165,169 @@\t\t\tt.Fatalf(\"for: %s; unexpected success\", test.name)\n\t\t}\n\t\tif expansionCalled != test.expansionCalled {\n\t\t\tt.Fatalf(\"for: %s; expected expansionCalled to be %v but was %v\", test.name, test.expansionCalled, expansionCalled)\n\t\t}"
  },
  {
    "id" : "d7c6ac6e-8300-4121-9561-f2810e2920d0",
    "prId" : 77994,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/77994#pullrequestreview-242913450",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "42ad8e4c-4cec-4320-8033-8d840cbb896b",
        "parentId" : null,
        "authorId" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "body" : "disable gates explicitly when `!test.csiMigrationEnabled`. when migraion on by default we don't want these tests to fail",
        "createdAt" : "2019-05-28T20:52:27Z",
        "updatedAt" : "2019-05-29T15:02:17Z",
        "lastEditedBy" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "tags" : [
        ]
      }
    ],
    "commit" : "7563b4d01b5e5dde148f746ccb1ff47c5b5b9272",
    "line" : 132,
    "diffHunk" : "@@ -1,1 +130,134 @@\n\t\tif test.csiMigrationEnabled {\n\t\t\tdefer featuregatetesting.SetFeatureGateDuringTest(t, utilfeature.DefaultFeatureGate, features.CSIMigration, true)()\n\t\t\tdefer featuregatetesting.SetFeatureGateDuringTest(t, utilfeature.DefaultFeatureGate, features.CSIMigrationAWS, true)()\n\t\t} else {"
  }
]