[
  {
    "id" : "02f11174-9a37-40aa-b733-053947445fdc",
    "prId" : 28751,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "788081a1-0145-423a-b190-05249dd024f9",
        "parentId" : null,
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "Could you check the error type and only retry on conflict? (using pkg/api/errors.IsConflict)\n",
        "createdAt" : "2016-07-11T18:03:20Z",
        "updatedAt" : "2016-07-12T17:30:49Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      },
      {
        "id" : "cb236db8-d68e-4c6a-b05e-d77d3d38c366",
        "parentId" : "788081a1-0145-423a-b190-05249dd024f9",
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "ACK.\n",
        "createdAt" : "2016-07-11T18:36:53Z",
        "updatedAt" : "2016-07-12T17:30:49Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      }
    ],
    "commit" : "59ea5c088b622078bcb6f6480465589084b82dbc",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +168,172 @@\tvar err error\n\tfor i := 0; i < updateNodeStatusMaxRetries; i++ {\n\t\t// Patch could also fail, even though the chance is very slim. So we still do\n\t\t// patch in the retry loop.\n\t\tcurrentTime := unversioned.Now()"
  },
  {
    "id" : "693f3bc3-3c15-40a8-89d5-6480413077eb",
    "prId" : 26415,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e262aa40-69b0-4c16-984a-240a4610ff49",
        "parentId" : null,
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "https://github.com/kubernetes/node-problem-detector/issues/9\n",
        "createdAt" : "2016-05-27T16:56:03Z",
        "updatedAt" : "2016-05-27T17:33:13Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "30784e3d-cd24-40f5-ba5a-74dc6c18e504",
        "parentId" : "e262aa40-69b0-4c16-984a-240a4610ff49",
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "https://github.com/kubernetes/kubernetes/pull/26381\n",
        "createdAt" : "2016-05-27T16:56:56Z",
        "updatedAt" : "2016-05-27T17:33:13Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "c32e1993-4b5b-4fd3-8987-68fad3f4159a",
        "parentId" : "e262aa40-69b0-4c16-984a-240a4610ff49",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Added a TODO to fix that.\n",
        "createdAt" : "2016-05-27T17:32:20Z",
        "updatedAt" : "2016-05-27T17:33:13Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "be1b57100d05ef3431e3095aab9b339b8dafa3e5",
    "line" : null,
    "diffHunk" : "@@ -1,1 +210,214 @@\t\t// TODO: Use Patch instead once #26381 is merged.\n\t\t// See kubernetes/node-problem-detector#9 for details.\n\t\tif _, err = rc.kubeClient.Core().Nodes().UpdateStatus(node); err == nil {\n\t\t\treturn nil\n\t\t}"
  },
  {
    "id" : "63eaaab7-3f03-4b69-8fd8-074528ea903e",
    "prId" : 26263,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e1db5134-9f38-4f44-a216-f598614c6803",
        "parentId" : null,
        "authorId" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "body" : "This is an extant issue, but #26267 will at least cause it to be NotReady until the route is programmed, right?\n",
        "createdAt" : "2016-05-25T15:38:08Z",
        "updatedAt" : "2016-05-26T11:01:11Z",
        "lastEditedBy" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "tags" : [
        ]
      },
      {
        "id" : "ec4835fe-5476-4b58-b25a-c63bf3f38fee",
        "parentId" : "e1db5134-9f38-4f44-a216-f598614c6803",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Yes - this is a long standing issue (it's nothing new). I will send a PR for it, but that won't be trivial change, so I'm not sure if it will land in 1.3.\nBut yeah - #26267 would makes nodes to be not ready in such case.\n",
        "createdAt" : "2016-05-25T16:07:05Z",
        "updatedAt" : "2016-05-26T11:01:11Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "65acb4e2-4c6c-4f0d-bdf0-13f7f070b0d2",
        "parentId" : "e1db5134-9f38-4f44-a216-f598614c6803",
        "authorId" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "body" : "I would file an issue and we can triage it. If it's long standing, nothing huge to worry about. One thing is that \"new node\" in the large cluster sense is kind of gradual, though - basically everything in the first half hour looks like a new node, so that resync period could be a little relevant. One question I had is whether the reconcile loop works like `{ reconcile(); sleep(constant); }` or if it's `{ reconcile(); sleep( to-meet-five-minutes )`. (Was a question I keep meaning to answer.)\n",
        "createdAt" : "2016-05-25T16:22:26Z",
        "updatedAt" : "2016-05-26T11:01:11Z",
        "lastEditedBy" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "tags" : [
        ]
      },
      {
        "id" : "a4be67d5-2402-4f9b-8c5d-a714b2d5246e",
        "parentId" : "e1db5134-9f38-4f44-a216-f598614c6803",
        "authorId" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "body" : "Huh. Unless I'm misreading `JitterUntil` badly, it's the former and not the latter.\n",
        "createdAt" : "2016-05-25T16:29:42Z",
        "updatedAt" : "2016-05-26T11:01:11Z",
        "lastEditedBy" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "tags" : [
        ]
      },
      {
        "id" : "19e6969f-1dca-4f20-b1b2-a64e125cbe30",
        "parentId" : "e1db5134-9f38-4f44-a216-f598614c6803",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "the former. i can file an issue but it's hard with kid on hands :)\n",
        "createdAt" : "2016-05-25T16:46:39Z",
        "updatedAt" : "2016-05-26T11:01:11Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "95499c36-b89a-4e5b-b84e-72ecb3870854",
        "parentId" : "e1db5134-9f38-4f44-a216-f598614c6803",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Actually - he is eating now.\nhttps://github.com/kubernetes/kubernetes/issues/26274 filed for this.\n",
        "createdAt" : "2016-05-25T16:59:27Z",
        "updatedAt" : "2016-05-26T11:01:11Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "aa65a7974a6e6b10d68d75c8da32952a8880c02e",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +63,67 @@\t// creating a route for it. This is bad.\n\t// We should have a watch on node and if we observe a new node (with CIDR?)\n\t// trigger reconciliation for that node.\n\tgo wait.NonSlidingUntil(func() {\n\t\tif err := rc.reconcileNodeRoutes(); err != nil {"
  },
  {
    "id" : "9a8caaea-0a64-4320-b27c-d6e04ef22f4b",
    "prId" : 26263,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d1650866-530c-48c4-b74f-fa153fe67c25",
        "parentId" : null,
        "authorId" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "body" : "Can you collect the time here, e.g. `apistartTime` and then on line 118 use it to log the rate-limited and real time?\n",
        "createdAt" : "2016-05-25T15:52:21Z",
        "updatedAt" : "2016-05-26T11:01:11Z",
        "lastEditedBy" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "tags" : [
        ]
      },
      {
        "id" : "e6e11e74-4d2c-47ab-b69a-3d2ab21744d8",
        "parentId" : "d1650866-530c-48c4-b74f-fa153fe67c25",
        "authorId" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "body" : "And you might want to just collect startTime at the top of the retry loop rather than as a closed variable of the gofunc given this new structure.\n",
        "createdAt" : "2016-05-25T16:01:51Z",
        "updatedAt" : "2016-05-26T11:01:11Z",
        "lastEditedBy" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "tags" : [
        ]
      },
      {
        "id" : "faf45353-3c5c-4da3-b3e3-5ddfd2ec8dfc",
        "parentId" : "d1650866-530c-48c4-b74f-fa153fe67c25",
        "authorId" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "body" : "I don't think this one is done yet?\n",
        "createdAt" : "2016-05-25T16:23:48Z",
        "updatedAt" : "2016-05-26T11:01:11Z",
        "lastEditedBy" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "tags" : [
        ]
      },
      {
        "id" : "0daf7848-eecb-4afb-aeb1-a77768053b76",
        "parentId" : "d1650866-530c-48c4-b74f-fa153fe67c25",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Oops sorry - I missed it from emails.\nI will do it in an hour or two (once my kid is in bed).\n",
        "createdAt" : "2016-05-25T16:52:50Z",
        "updatedAt" : "2016-05-26T11:01:11Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "aa65a7974a6e6b10d68d75c8da32952a8880c02e",
    "line" : null,
    "diffHunk" : "@@ -1,1 +119,123 @@\t\t\t\t\t// Ensure that we don't have more than maxConcurrentRouteCreations\n\t\t\t\t\t// CreateRoute calls in flight.\n\t\t\t\t\trateLimiter <- struct{}{}\n\t\t\t\t\terr := rc.routes.CreateRoute(rc.clusterName, nameHint, route)\n\t\t\t\t\t<-rateLimiter"
  },
  {
    "id" : "afdfd621-7b47-41e4-8f36-ad04eaa80d73",
    "prId" : 26263,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2dd6a2e7-dd5a-4c7b-8301-b2902f50164e",
        "parentId" : null,
        "authorId" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "body" : "I can add the additional logging here after we get it in, it's not a big deal. This looks fine.\n",
        "createdAt" : "2016-05-25T17:13:30Z",
        "updatedAt" : "2016-05-26T11:01:11Z",
        "lastEditedBy" : "a92f8f9e-31fd-4510-b4d9-3553f7025485",
        "tags" : [
        ]
      }
    ],
    "commit" : "aa65a7974a6e6b10d68d75c8da32952a8880c02e",
    "line" : 53,
    "diffHunk" : "@@ -1,1 +119,123 @@\t\t\t\t\t// Ensure that we don't have more than maxConcurrentRouteCreations\n\t\t\t\t\t// CreateRoute calls in flight.\n\t\t\t\t\trateLimiter <- struct{}{}\n\t\t\t\t\terr := rc.routes.CreateRoute(rc.clusterName, nameHint, route)\n\t\t\t\t\t<-rateLimiter"
  }
]