[
  {
    "id" : "8f2dc7aa-0060-4d99-a51c-8de62e0fb57f",
    "prId" : 91474,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/91474#pullrequestreview-512249349",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dfa49dbc-83bd-4ee3-a88a-b450e8b19d6e",
        "parentId" : null,
        "authorId" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "body" : "Where is the dynamic client builder being used? Can it also move to `k8s.io/controller-manager`?  ",
        "createdAt" : "2020-10-19T21:21:46Z",
        "updatedAt" : "2020-10-19T21:48:48Z",
        "lastEditedBy" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "tags" : [
        ]
      },
      {
        "id" : "31049833-902f-4d04-a0bb-ac1f6a518e4d",
        "parentId" : "dfa49dbc-83bd-4ee3-a88a-b450e8b19d6e",
        "authorId" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "body" : "Ah, I see it's used in kube-controller-manger only. Non-blocking comment in that case but still wondering if it should move there.",
        "createdAt" : "2020-10-19T21:23:36Z",
        "updatedAt" : "2020-10-19T21:48:48Z",
        "lastEditedBy" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "tags" : [
        ]
      },
      {
        "id" : "c04cd8bb-1c57-450f-a5db-c5c3b70c9e00",
        "parentId" : "dfa49dbc-83bd-4ee3-a88a-b450e8b19d6e",
        "authorId" : "70bad77d-dd09-4ce9-a4ae-89ec23225e81",
        "body" : "I am not sure if it is a good move since we also have k8s.io/kube-controller-manager for kube-controller-manager specific staff. Anyway the move might not happen in this PR :)",
        "createdAt" : "2020-10-19T21:34:18Z",
        "updatedAt" : "2020-10-19T21:48:48Z",
        "lastEditedBy" : "70bad77d-dd09-4ce9-a4ae-89ec23225e81",
        "tags" : [
        ]
      },
      {
        "id" : "ea838494-a544-4569-8775-4d348cad01d8",
        "parentId" : "dfa49dbc-83bd-4ee3-a88a-b450e8b19d6e",
        "authorId" : "7aca96c2-45d7-4567-99be-0323d7556c55",
        "body" : "+1. I think we will eventually have to move it over. I believe this is for service account token creation. Eventually a cloud provider is going to want to separate that functionality out from the KCM. Not exactly urgent but I'd be up for seeing it moved preemptively.",
        "createdAt" : "2020-10-19T21:38:07Z",
        "updatedAt" : "2020-10-19T21:48:48Z",
        "lastEditedBy" : "7aca96c2-45d7-4567-99be-0323d7556c55",
        "tags" : [
        ]
      },
      {
        "id" : "1e80b47e-0492-4da8-902b-fffecfcf1466",
        "parentId" : "dfa49dbc-83bd-4ee3-a88a-b450e8b19d6e",
        "authorId" : "70bad77d-dd09-4ce9-a4ae-89ec23225e81",
        "body" : "I could take this up after this PR merged. :)",
        "createdAt" : "2020-10-19T21:51:05Z",
        "updatedAt" : "2020-10-19T21:51:05Z",
        "lastEditedBy" : "70bad77d-dd09-4ce9-a4ae-89ec23225e81",
        "tags" : [
        ]
      },
      {
        "id" : "df6fcbf8-baa2-4216-89e0-1117974da5d6",
        "parentId" : "dfa49dbc-83bd-4ee3-a88a-b450e8b19d6e",
        "authorId" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "body" : "sgtm, thanks :) ",
        "createdAt" : "2020-10-20T00:29:08Z",
        "updatedAt" : "2020-10-20T00:29:08Z",
        "lastEditedBy" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "tags" : [
        ]
      }
    ],
    "commit" : "95acec5a3b4c07afba17b526e5cb031f8bb88630",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +74,78 @@}\n\nfunc NewDynamicClientBuilder(clientConfig *restclient.Config, coreClient v1core.CoreV1Interface, ns string) clientbuilder.ControllerClientBuilder {\n\tbuilder := &DynamicControllerClientBuilder{\n\t\tClientConfig:        clientConfig,"
  },
  {
    "id" : "fc2007f7-578d-409c-a8e0-4db5d630eeb6",
    "prId" : 72179,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/72179#pullrequestreview-207094319",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a405b692-6714-47f1-b226-ca3788588429",
        "parentId" : null,
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "Much of this duplication with SAControllerClientBuilder could be removed with a shared partial implementation and embedded struct, but we don't have to get into that here.",
        "createdAt" : "2019-02-23T04:17:30Z",
        "updatedAt" : "2019-03-25T06:54:55Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      }
    ],
    "commit" : "244b244f9d84c56ad3a5af255b70c793f6bfd39c",
    "line" : 131,
    "diffHunk" : "@@ -1,1 +129,133 @@}\n\nfunc (t *DynamicControllerClientBuilder) ConfigOrDie(name string) *restclient.Config {\n\tclientConfig, err := t.Config(name)\n\tif err != nil {"
  },
  {
    "id" : "91ca6113-79bc-4ce5-a02e-2ba7be9c8596",
    "prId" : 72179,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/72179#pullrequestreview-211036718",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3a83a210-24ba-4a48-84d5-9170a3de9fb0",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "this is creating a token that is only bound to the service account object, so the only way to revoke it is to delete the service account. should this check that the service account still exists and recreate it if required?",
        "createdAt" : "2019-03-05T06:53:01Z",
        "updatedAt" : "2019-03-25T06:54:55Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "a7c89ed9-d971-47c4-bc5b-2d5fe63e32aa",
        "parentId" : "3a83a210-24ba-4a48-84d5-9170a3de9fb0",
        "authorId" : "451e6d32-0495-410e-a53b-943e3dd34a71",
        "body" : "I don't think we should do this:\r\n\r\n- This `Token() `function should only take care about token generate. It should consider service account missing as an unexpected situation.\r\n\r\n- This function has no context to know when it is required to recreate a serviceaccount\r\n\r\n- In legacy client builder, it would not try recover the serviceaccount neither.",
        "createdAt" : "2019-03-06T04:01:14Z",
        "updatedAt" : "2019-03-25T06:54:55Z",
        "lastEditedBy" : "451e6d32-0495-410e-a53b-943e3dd34a71",
        "tags" : [
        ]
      },
      {
        "id" : "b798edf6-a740-4faa-b2dc-7cc66f56b62e",
        "parentId" : "3a83a210-24ba-4a48-84d5-9170a3de9fb0",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "The client builder is creating the service account at init time, and the Token() function will permanently fail if the service account is missing at token renew time. What are the pros and cons of having it rebuild the service account object?\r\n\r\n> This function has no context to know when it is required to recreate a serviceaccount\r\n\r\nA NotFound error followed by a check of the service account also returning NotFound is a pretty good hint :)\r\n\r\n> In legacy client builder, it would not try recover the serviceaccount neither.\r\n\r\nThe clients produced by the legacy client builder were not resilient to key rotations or token revocations. I think we can do better here.",
        "createdAt" : "2019-03-06T04:10:36Z",
        "updatedAt" : "2019-03-25T06:54:55Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "244b244f9d84c56ad3a5af255b70c793f6bfd39c",
    "line" : 177,
    "diffHunk" : "@@ -1,1 +175,179 @@\t\t}\n\n\t\ttr, inErr := ts.coreClient.ServiceAccounts(ts.namespace).CreateToken(ts.serviceAccountName, &v1authenticationapi.TokenRequest{\n\t\t\tSpec: v1authenticationapi.TokenRequestSpec{\n\t\t\t\tExpirationSeconds: utilpointer.Int64Ptr(ts.expirationSeconds),"
  }
]