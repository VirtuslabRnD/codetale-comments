[
  {
    "id" : "32dc7a2e-efb1-4947-905d-765f984dd39a",
    "prId" : 101316,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/101316#pullrequestreview-673089544",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e529602c-d682-4dc9-942a-270843a37b40",
        "parentId" : null,
        "authorId" : "0b8a340d-147f-4dd4-8384-35edecd298a1",
        "body" : "so if I understand correctly, this is to get the update faster than the one triggered by the pod?",
        "createdAt" : "2021-05-31T16:13:29Z",
        "updatedAt" : "2021-05-31T17:06:06Z",
        "lastEditedBy" : "0b8a340d-147f-4dd4-8384-35edecd298a1",
        "tags" : [
        ]
      },
      {
        "id" : "0226448a-d54a-440c-8dd8-fbb28cf1ff0c",
        "parentId" : "e529602c-d682-4dc9-942a-270843a37b40",
        "authorId" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "body" : "@atiratree - correct, normally controller only responds to \"events\" from informers such as creation, modification or deletion of resources (here we look at pods and statefulsets). So we need to ensure that the controller checks this controller at the time when `MinReadySeconds` expires and applies correct action. ",
        "createdAt" : "2021-06-01T13:43:03Z",
        "updatedAt" : "2021-06-01T16:16:07Z",
        "lastEditedBy" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "tags" : [
        ]
      }
    ],
    "commit" : "ceb1dbd2f1f38df16eb5e15452ea35c04e7f9105",
    "line" : 74,
    "diffHunk" : "@@ -1,1 +477,481 @@\tklog.V(4).Infof(\"Successfully synced StatefulSet %s/%s successful\", set.Namespace, set.Name)\n\t// One more sync to handle the clock skew. This is also helping in requeuing right after status update\n\tif utilfeature.DefaultFeatureGate.Enabled(features.StatefulSetMinReadySeconds) && set.Spec.MinReadySeconds > 0 && status != nil && status.AvailableReplicas != *set.Spec.Replicas {\n\t\tssc.enqueueSSAfter(set, time.Duration(set.Spec.MinReadySeconds)*time.Second)\n\t}"
  },
  {
    "id" : "9f2a853f-fb59-4eb1-bbf8-2f44d6994ac2",
    "prId" : 84984,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/84984#pullrequestreview-358716299",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fe1ba0a6-5f4d-4bca-b2f0-cc6bf6601b0e",
        "parentId" : null,
        "authorId" : "e4e7c71f-23b5-4203-b65d-3f5f3c503b64",
        "body" : "StatefulSet does not use `ControllerRevisionControllerRefManager` [like DaemonSet](https://github.com/kubernetes/kubernetes/blob/59aa8fd99e2e0c566310492185658d51f6343782/pkg/controller/daemon/update.go#L253-L267) to manage controller revisions, so this is quick fix without chaning too much.\r\n\r\nMaybe we can migrate to use ControllerRevisionControllerRefManager in the future?",
        "createdAt" : "2019-11-08T12:06:59Z",
        "updatedAt" : "2020-02-10T12:58:51Z",
        "lastEditedBy" : "e4e7c71f-23b5-4203-b65d-3f5f3c503b64",
        "tags" : [
        ]
      },
      {
        "id" : "bcfef433-ac6b-45cb-b652-79997ae6df58",
        "parentId" : "fe1ba0a6-5f4d-4bca-b2f0-cc6bf6601b0e",
        "authorId" : "37016922-c330-4fc5-b602-08c675dca4fb",
        "body" : "That sounds like a good idea. Can you create an issue on this?",
        "createdAt" : "2020-02-14T05:10:09Z",
        "updatedAt" : "2020-02-14T05:11:35Z",
        "lastEditedBy" : "37016922-c330-4fc5-b602-08c675dca4fb",
        "tags" : [
        ]
      },
      {
        "id" : "10f9396c-d20f-440a-93fa-f95d5eb5dae4",
        "parentId" : "fe1ba0a6-5f4d-4bca-b2f0-cc6bf6601b0e",
        "authorId" : "e4e7c71f-23b5-4203-b65d-3f5f3c503b64",
        "body" : "sure, https://github.com/kubernetes/kubernetes/issues/88150",
        "createdAt" : "2020-02-14T05:15:16Z",
        "updatedAt" : "2020-02-14T05:15:17Z",
        "lastEditedBy" : "e4e7c71f-23b5-4203-b65d-3f5f3c503b64",
        "tags" : [
        ]
      }
    ],
    "commit" : "bb2b50f3db8e27f769a5378751e3452764bb2cec",
    "line" : 49,
    "diffHunk" : "@@ -1,1 +324,328 @@\t\tcanAdoptErr := ssc.canAdoptFunc(set)()\n\t\tif canAdoptErr != nil {\n\t\t\treturn fmt.Errorf(\"can't adopt ControllerRevisions: %v\", canAdoptErr)\n\t\t}\n\t\treturn ssc.control.AdoptOrphanRevisions(set, orphanRevisions)"
  },
  {
    "id" : "bb8ba24c-4253-462b-8721-06c75780efe2",
    "prId" : 46669,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/46669#pullrequestreview-41290526",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8d4ec1df-d361-4a8f-9401-d22a1528d0b8",
        "parentId" : null,
        "authorId" : "224e1088-78fe-4bdd-99d1-31be3e464996",
        "body" : "is this listing of revisions based on the label on those revisions ?",
        "createdAt" : "2017-05-31T04:16:47Z",
        "updatedAt" : "2017-06-06T20:47:39Z",
        "lastEditedBy" : "224e1088-78fe-4bdd-99d1-31be3e464996",
        "tags" : [
        ]
      },
      {
        "id" : "d9bd4718-86e4-4b2b-a4a4-cc3b011d0316",
        "parentId" : "8d4ec1df-d361-4a8f-9401-d22a1528d0b8",
        "authorId" : "6935d5b2-c3de-4596-9c98-055bd55df973",
        "body" : "Yes the revisions are constructed with the StatefulSet's selector",
        "createdAt" : "2017-05-31T17:07:29Z",
        "updatedAt" : "2017-06-06T20:47:39Z",
        "lastEditedBy" : "6935d5b2-c3de-4596-9c98-055bd55df973",
        "tags" : [
        ]
      }
    ],
    "commit" : "1a784ef86ff94994e984753d885ffeff6e1772ac",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +311,315 @@// adoptOrphanRevisions adopts any orphaned ControllerRevisions matched by set's Selector.\nfunc (ssc *StatefulSetController) adoptOrphanRevisions(set *apps.StatefulSet) error {\n\trevisions, err := ssc.control.ListRevisions(set)\n\tif err != nil {\n\t\treturn err"
  },
  {
    "id" : "0f12da5a-64c4-4b76-8ed5-4e82def8d8f7",
    "prId" : 46669,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/46669#pullrequestreview-41407070",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "083f8a93-d5a5-4104-af99-6478eb009a6f",
        "parentId" : null,
        "authorId" : "224e1088-78fe-4bdd-99d1-31be3e464996",
        "body" : "curious why cant we use the set.UID instead of querying again ?",
        "createdAt" : "2017-05-31T04:17:35Z",
        "updatedAt" : "2017-06-06T20:47:39Z",
        "lastEditedBy" : "224e1088-78fe-4bdd-99d1-31be3e464996",
        "tags" : [
        ]
      },
      {
        "id" : "312d331c-611b-4e01-b09f-ae2329e21110",
        "parentId" : "083f8a93-d5a5-4104-af99-6478eb009a6f",
        "authorId" : "6935d5b2-c3de-4596-9c98-055bd55df973",
        "body" : "We have to refresh the Object to ensure that it hasn't been deleted ensure that we don't patch a ControllerRevision to be owned by a cached deleted/(deleted and recreated) StatefulSet.",
        "createdAt" : "2017-05-31T17:09:21Z",
        "updatedAt" : "2017-06-06T20:47:39Z",
        "lastEditedBy" : "6935d5b2-c3de-4596-9c98-055bd55df973",
        "tags" : [
        ]
      },
      {
        "id" : "30f1fa8d-df2f-4377-b5fa-e1fb009d85c3",
        "parentId" : "083f8a93-d5a5-4104-af99-6478eb009a6f",
        "authorId" : "224e1088-78fe-4bdd-99d1-31be3e464996",
        "body" : "hmm how can you be sure of that ?What if its gets deleted after your query ?",
        "createdAt" : "2017-06-01T01:59:51Z",
        "updatedAt" : "2017-06-06T20:47:39Z",
        "lastEditedBy" : "224e1088-78fe-4bdd-99d1-31be3e464996",
        "tags" : [
        ]
      },
      {
        "id" : "8203be15-ce28-43b0-8562-324c1ea8c4fb",
        "parentId" : "083f8a93-d5a5-4104-af99-6478eb009a6f",
        "authorId" : "6935d5b2-c3de-4596-9c98-055bd55df973",
        "body" : "I suppose in theory it could. In practice we have seen issues where a stale cache causes invalid adoption. This pattern is used in all controllers for orphan Pods.",
        "createdAt" : "2017-06-01T03:11:28Z",
        "updatedAt" : "2017-06-06T20:47:39Z",
        "lastEditedBy" : "6935d5b2-c3de-4596-9c98-055bd55df973",
        "tags" : [
        ]
      }
    ],
    "commit" : "1a784ef86ff94994e984753d885ffeff6e1772ac",
    "line" : 46,
    "diffHunk" : "@@ -1,1 +323,327 @@\t}\n\tif hasOrphans {\n\t\tfresh, err := ssc.kubeClient.AppsV1beta1().StatefulSets(set.Namespace).Get(set.Name, metav1.GetOptions{})\n\t\tif err != nil {\n\t\t\treturn err"
  },
  {
    "id" : "22491981-1b67-4cd7-9151-aa7e8524e494",
    "prId" : 46669,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/46669#pullrequestreview-42252797",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c0e400ad-dc02-40d8-b61d-2b5fdf7eefc6",
        "parentId" : null,
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "Since you are using the controllerRevision cache to list CRs, you should wait for it to be synced before starting the sts controller. Means you need a crListerSynced field which you then pass in controller.WaitForCacheSync (L150).",
        "createdAt" : "2017-06-06T09:20:57Z",
        "updatedAt" : "2017-06-06T20:47:39Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      }
    ],
    "commit" : "1a784ef86ff94994e984753d885ffeff6e1772ac",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +102,106 @@\t\t\thistory.NewHistory(kubeClient, revInformer.Lister()),\n\t\t),\n\t\tpvcListerSynced: pvcInformer.Informer().HasSynced,\n\t\tqueue:           workqueue.NewNamedRateLimitingQueue(workqueue.DefaultControllerRateLimiter(), \"statefulset\"),\n\t\tpodControl:      controller.RealPodControl{KubeClient: kubeClient, Recorder: recorder},"
  },
  {
    "id" : "0bf4663d-5920-4fcf-8954-a4152c30e690",
    "prId" : 42080,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/42080#pullrequestreview-25064345",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "af73667f-89ef-47ca-bd63-5ae79fc6e03b",
        "parentId" : null,
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "We should only care for pods owned by stateful sets",
        "createdAt" : "2017-03-03T10:34:56Z",
        "updatedAt" : "2017-03-06T18:40:43Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      },
      {
        "id" : "831138ea-bc95-48f9-9873-767a3994726d",
        "parentId" : "af73667f-89ef-47ca-bd63-5ae79fc6e03b",
        "authorId" : "97dce74b-9a86-4bd2-812f-a7a70df47473",
        "body" : "That check is done inside `deletePod()`. Is there a benefit to doing it before as well?",
        "createdAt" : "2017-03-03T18:59:22Z",
        "updatedAt" : "2017-03-06T18:40:43Z",
        "lastEditedBy" : "97dce74b-9a86-4bd2-812f-a7a70df47473",
        "tags" : [
        ]
      },
      {
        "id" : "e32cadd6-3bf5-431e-9161-12a2bdca5c88",
        "parentId" : "af73667f-89ef-47ca-bd63-5ae79fc6e03b",
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "Nvmd, it's fine.",
        "createdAt" : "2017-03-03T20:33:42Z",
        "updatedAt" : "2017-03-06T18:40:43Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      }
    ],
    "commit" : "399c19a2ad551df4440e725266637d332bbbcd26",
    "line" : 51,
    "diffHunk" : "@@ -1,1 +164,168 @@\t\t// on a restart of the controller manager, it's possible a new pod shows up in a state that\n\t\t// is already pending deletion. Prevent the pod from being a creation observation.\n\t\tssc.deletePod(pod)\n\t\treturn\n\t}"
  },
  {
    "id" : "09597a28-aa6d-49e5-8cf4-a763e0fb9f04",
    "prId" : 41482,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/41482#pullrequestreview-22046760",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0ba264e4-3376-486f-bd7c-26a7f5dafff2",
        "parentId" : null,
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "We should be able to switch to the default resync period but probably not before adding a pvc cache ... Add a TODO",
        "createdAt" : "2017-02-15T16:20:22Z",
        "updatedAt" : "2017-02-22T14:06:03Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      },
      {
        "id" : "5910e3b3-720a-48c3-b092-e5cf3c52a0b7",
        "parentId" : "0ba264e4-3376-486f-bd7c-26a7f5dafff2",
        "authorId" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "body" : "@kargakis do you want me to plumb in using a PVC informer now?",
        "createdAt" : "2017-02-15T16:23:31Z",
        "updatedAt" : "2017-02-22T14:06:03Z",
        "lastEditedBy" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "tags" : [
        ]
      },
      {
        "id" : "e4d6c809-af33-4cc1-954f-e6baab1b6319",
        "parentId" : "0ba264e4-3376-486f-bd7c-26a7f5dafff2",
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "Not necessary I think but an issue to extend the resync period and also add the PVC informer would be nice. ",
        "createdAt" : "2017-02-15T16:39:29Z",
        "updatedAt" : "2017-02-22T14:06:03Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      }
    ],
    "commit" : "f6a186b1e1e952009fde9e500823cd51da7d3545",
    "line" : 107,
    "diffHunk" : "@@ -1,1 +110,114 @@\t\t\tDeleteFunc: ssc.enqueueStatefulSet,\n\t\t},\n\t\tstatefulSetResyncPeriod,\n\t)\n\tssc.setLister = setInformer.Lister()"
  },
  {
    "id" : "fb2e8c4a-f427-43d7-92bf-61256fdfbc68",
    "prId" : 40838,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/40838#pullrequestreview-20148350",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "51381fa8-1a12-468b-8dda-0741841a47c8",
        "parentId" : null,
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "THis shouldn't be possible to happen if we use the naming convention in GetPodStatefulSets, right?",
        "createdAt" : "2017-02-04T13:18:57Z",
        "updatedAt" : "2017-02-09T16:45:02Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      }
    ],
    "commit" : "4d99b4d825a74f7f22f1709e580574b70fe796d9",
    "line" : 268,
    "diffHunk" : "@@ -1,1 +216,220 @@\t\treturn nil\n\t}\n\t// More than one set is selecting the same Pod\n\tif len(sets) > 1 {\n\t\tutilruntime.HandleError("
  },
  {
    "id" : "3bc4143f-bf9b-42d2-bcd6-a3609e9d2ecb",
    "prId" : 40838,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/40838#pullrequestreview-20987992",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "03faf506-8647-4350-857a-8e9466a58306",
        "parentId" : null,
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "I have worked a lot with special-cased interfaces and ended up realizing that they only offer additional complexity on top of our existing client. My .2c",
        "createdAt" : "2017-02-09T11:11:28Z",
        "updatedAt" : "2017-02-09T16:45:02Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      },
      {
        "id" : "d10684c3-b6b3-42ad-ab3f-f882622e24a2",
        "parentId" : "03faf506-8647-4350-857a-8e9466a58306",
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "The reason behind the \"additional complexity\" is that as a future maintainer when I come across a client wrapper, it's really hard to reason about it w/o looking at the actual code. Bare clients are much easier to maintain. Not something that you need to remove from your code now but something to think about as we move forward.",
        "createdAt" : "2017-02-09T11:36:08Z",
        "updatedAt" : "2017-02-09T16:45:02Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      }
    ],
    "commit" : "4d99b4d825a74f7f22f1709e580574b70fe796d9",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +58,62 @@\t// newSyncer returns an interface capable of syncing a single pet.\n\t// Abstracted out for testing.\n\tcontrol StatefulSetControlInterface\n\t// podStore is a cache of watched pods.\n\tpodStore listers.StoreToPodLister"
  }
]