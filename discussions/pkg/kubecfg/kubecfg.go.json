[
  {
    "id" : "20493ac7-2c98-4eba-8708-c052f34ad8ec",
    "prId" : 2270,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ab0d881d-3fdd-4322-91eb-e04d727b534d",
        "parentId" : null,
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Hrm - seems like that's a flaw in the logic here.  Should there be a separate boolean to indicate unable to read from file?\n",
        "createdAt" : "2014-11-13T16:06:21Z",
        "updatedAt" : "2014-11-14T22:15:41Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "fbbd79ba-f197-4e5e-8601-935b8a5d9ff2",
        "parentId" : "ab0d881d-3fdd-4322-91eb-e04d727b534d",
        "authorId" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "body" : "Maybe.  I'm just trying to do a behavior-neutral refactor here.\n",
        "createdAt" : "2014-11-13T16:35:37Z",
        "updatedAt" : "2014-11-14T22:15:41Z",
        "lastEditedBy" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "tags" : [
        ]
      }
    ],
    "commit" : "c770e704956e469fe33e7fc64f44ecfda63c96c6",
    "line" : null,
    "diffHunk" : "@@ -1,1 +58,62 @@\n// LoadClientAuthInfoOrPrompt parses a clientauth.Info object from a file path. It prompts user and creates file if it doesn't exist.\n// Oddly, it returns a clientauth.Info even if there is an error.\nfunc LoadClientAuthInfoOrPrompt(path string, r io.Reader) (*clientauth.Info, error) {\n\tvar auth clientauth.Info"
  },
  {
    "id" : "eec75268-1bca-4ca3-bc66-07a8a8280fb2",
    "prId" : 2270,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "76ed5dd5-9474-4dd7-aafb-6da135c630b9",
        "parentId" : null,
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Can we nuke the kubecfg methods here and have kubecfg reference those instead?  This duplication seems redundant, and we're not _that_ close to nuking kubecfg.\n",
        "createdAt" : "2014-11-13T16:09:27Z",
        "updatedAt" : "2014-11-14T22:15:41Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "946b05dc-fb51-488f-8d68-6402925db411",
        "parentId" : "76ed5dd5-9474-4dd7-aafb-6da135c630b9",
        "authorId" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "body" : "Not sure which methods. you are referring to.\n",
        "createdAt" : "2014-11-13T16:33:11Z",
        "updatedAt" : "2014-11-14T22:15:41Z",
        "lastEditedBy" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "tags" : [
        ]
      },
      {
        "id" : "92254c49-8d33-47c5-9bda-927cfb13ff48",
        "parentId" : "76ed5dd5-9474-4dd7-aafb-6da135c630b9",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "The LoadAuthFile and such\n",
        "createdAt" : "2014-11-14T20:12:44Z",
        "updatedAt" : "2014-11-14T22:15:41Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "c770e704956e469fe33e7fc64f44ecfda63c96c6",
    "line" : null,
    "diffHunk" : "@@ -1,1 +26,30 @@\t\"strings\"\n\t\"time\"\n\n\t\"github.com/GoogleCloudPlatform/kubernetes/pkg/api\"\n\t\"github.com/GoogleCloudPlatform/kubernetes/pkg/client\""
  },
  {
    "id" : "042c17d9-8f3f-41ef-8240-74f0d8dde8df",
    "prId" : 1142,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "238fc75c-676d-41df-8dec-99493ac4fd82",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "If the replication controller did a diff like it should, then I think that this is not going to do what people expect.\n",
        "createdAt" : "2014-09-02T22:06:58Z",
        "updatedAt" : "2014-09-04T20:25:43Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "b460a673-354c-4c4e-ab8b-b345f133560c",
        "parentId" : "238fc75c-676d-41df-8dec-99493ac4fd82",
        "authorId" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "body" : "How so?  We are just setting a new image into the template for the first container in the pod.  If kubecfg were a more functional tool (supporting reading templates from disk) it's be more clear what should happen.\n",
        "createdAt" : "2014-09-02T22:18:50Z",
        "updatedAt" : "2014-09-04T20:25:43Z",
        "lastEditedBy" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "tags" : [
        ]
      },
      {
        "id" : "4cd53169-fa74-45ed-8e9f-bdd954ba3f8a",
        "parentId" : "238fc75c-676d-41df-8dec-99493ac4fd82",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "if it did a diff (running pods vs desired pods) instead of comparing the number, it would immediately restart all the containers. The point of this function is to restart them slowly. Basically if we \"fix\" that about the replication controller, this operation becomes impossible...\n",
        "createdAt" : "2014-09-02T22:22:08Z",
        "updatedAt" : "2014-09-04T20:25:43Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "aa4219eb-75f1-4205-b960-bbba7d2e55f8",
        "parentId" : "238fc75c-676d-41df-8dec-99493ac4fd82",
        "authorId" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "body" : "The replication controller isn't supposed to do a diff on that state.  It is defined to just look at number of running pods that meet the label query.  We never defined the replication controller to look deeper into the pod.\n\nIn other words, not doing a diff is what is intended.  Because we _don't_ want it to have to restart everything at once.  I would support an enhanced feature of having it report which of the pods under the query are \"out of spec\".\n",
        "createdAt" : "2014-09-02T22:28:36Z",
        "updatedAt" : "2014-09-04T20:25:43Z",
        "lastEditedBy" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "tags" : [
        ]
      },
      {
        "id" : "46f43b9d-387f-4ae5-8622-5d19fe7e9366",
        "parentId" : "238fc75c-676d-41df-8dec-99493ac4fd82",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Ah, I see. Well, I'll debate whether that's a feature or a bug elsewhere, then. :)\n",
        "createdAt" : "2014-09-02T22:31:49Z",
        "updatedAt" : "2014-09-04T20:25:43Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "a26afca5-b8f3-48a3-af2a-2e7d0c8b05d7",
        "parentId" : "238fc75c-676d-41df-8dec-99493ac4fd82",
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "ReplicationController should never, ever validate whether the pods it controls are out of spec or not. That would radically reduce the flexibility of replication controller and push rolling update functionality into it. Let's not go there. It's a composable building block. \n",
        "createdAt" : "2014-09-03T04:36:51Z",
        "updatedAt" : "2014-09-04T20:25:43Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      }
    ],
    "commit" : "e5fe8270a1b81dce029326589bf462b6c9b298b6",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +91,95 @@\tif len(imageName) != 0 {\n\t\tcontroller.DesiredState.PodTemplate.DesiredState.Manifest.Containers[0].Image = imageName\n\t\tcontroller, err = client.UpdateReplicationController(controller)\n\t\tif err != nil {\n\t\t\treturn err"
  },
  {
    "id" : "e31813b0-67a5-4f82-ae4f-4a4e98c58106",
    "prId" : 1142,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2a7b2ea4-8887-49b5-82f4-533b784cf3c6",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Doesn't the replication controller already add a replicationController label?\n",
        "createdAt" : "2014-09-03T22:41:04Z",
        "updatedAt" : "2014-09-04T20:25:43Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "308bdfb8-ea84-4222-a6d9-8db47f90372c",
        "parentId" : "2a7b2ea4-8887-49b5-82f4-533b784cf3c6",
        "authorId" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "body" : "Yes!  It does.  But I can't submit a replicationController that refers to a label that isn't on the pod template.  So I add it here even though it'll get clobbered when the replication controller runs.\n",
        "createdAt" : "2014-09-04T18:25:42Z",
        "updatedAt" : "2014-09-04T20:25:43Z",
        "lastEditedBy" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "tags" : [
        ]
      }
    ],
    "commit" : "e5fe8270a1b81dce029326589bf462b6c9b298b6",
    "line" : 40,
    "diffHunk" : "@@ -1,1 +198,202 @@\t\t\t\t},\n\t\t\t\tLabels: map[string]string{\n\t\t\t\t\t\"replicationController\": name,\n\t\t\t\t},\n\t\t\t},"
  },
  {
    "id" : "5527bb64-5453-41d8-a470-829f06c07c45",
    "prId" : 1142,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "776a42a2-f1bb-483c-b010-6acb99c0a67e",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Hm. Is this a pattern we want to encourage people to use?\n",
        "createdAt" : "2014-09-03T22:42:37Z",
        "updatedAt" : "2014-09-04T20:25:43Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "635704ab-a893-4bbf-b69e-e03381992dce",
        "parentId" : "776a42a2-f1bb-483c-b010-6acb99c0a67e",
        "authorId" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "body" : "I wasn't sure what other label to use.  I'm open to suggestions here.  Using the replicationController label here is a reasonable pattern, I think.\n",
        "createdAt" : "2014-09-04T18:28:05Z",
        "updatedAt" : "2014-09-04T20:25:43Z",
        "lastEditedBy" : "e19009d8-ed5c-45bb-b5ce-4f8d956c6c45",
        "tags" : [
        ]
      },
      {
        "id" : "3073b3a9-6029-4cd2-807d-71474f2a1a5e",
        "parentId" : "776a42a2-f1bb-483c-b010-6acb99c0a67e",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "I suppose this is better than the way with \"pod\" appended on the name. People will be doing this all the time, so we should have a best practice. I think the \"name\" label was better, but I'm OK with changing it until we get our story straight with IDs vs names.\n",
        "createdAt" : "2014-09-05T17:04:58Z",
        "updatedAt" : "2014-09-05T17:04:58Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "e5fe8270a1b81dce029326589bf462b6c9b298b6",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +182,186 @@\t\t\tReplicas: replicas,\n\t\t\tReplicaSelector: map[string]string{\n\t\t\t\t\"replicationController\": name,\n\t\t\t},\n\t\t\tPodTemplate: api.PodTemplate{"
  }
]