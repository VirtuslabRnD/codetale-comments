[
  {
    "id" : "72e4f157-0e60-4e22-9e99-dc429a0f2b9a",
    "prId" : 51404,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/51404#pullrequestreview-59106544",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2286e94f-5645-4873-80f2-f1f6de3c0ff9",
        "parentId" : null,
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "The following `if` is not needed, because it must be docker.",
        "createdAt" : "2017-08-28T17:06:34Z",
        "updatedAt" : "2017-08-29T00:48:41Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      },
      {
        "id" : "1cb9d319-eaea-4786-b2dd-1c225e6d0e04",
        "parentId" : "2286e94f-5645-4873-80f2-f1f6de3c0ff9",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "good catch",
        "createdAt" : "2017-08-29T00:47:21Z",
        "updatedAt" : "2017-08-29T00:48:41Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      }
    ],
    "commit" : "fc8736fd97efcb4a456bfbad29a143ff61be54c6",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +189,193 @@\n\t// Always admit runtimes except docker.\n\tif a.Runtime.Type() != kubetypes.DockerContainerRuntime {\n\t\treturn PodAdmitResult{Admit: true}\n\t}"
  },
  {
    "id" : "c702bf7f-1099-407c-933a-07c3d0607673",
    "prId" : 51347,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/51347#pullrequestreview-59003397",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bae00896-ad33-4279-a6c8-67c851c7d317",
        "parentId" : null,
        "authorId" : "0c918241-248f-4c64-a884-728ee30e9a3e",
        "body" : "@Random-Liu  Seems still not to fix this issue. \r\n`a.Runtime.Type()` is not a constant value for all of the remote runtime,  It's get from remote API, ref codes:\r\nhttps://github.com/kubernetes/kubernetes/blob/65da3ce2466d88f50e138051d26ded166348e55f/pkg/kubelet/kuberuntime/kuberuntime_manager.go#L152-L167",
        "createdAt" : "2017-08-26T02:13:40Z",
        "updatedAt" : "2017-08-26T02:14:23Z",
        "lastEditedBy" : "0c918241-248f-4c64-a884-728ee30e9a3e",
        "tags" : [
        ]
      },
      {
        "id" : "0b075ad4-2d51-4701-906a-df2fecdd7fd2",
        "parentId" : "bae00896-ad33-4279-a6c8-67c851c7d317",
        "authorId" : "0c918241-248f-4c64-a884-728ee30e9a3e",
        "body" : "In my test, The error print contains the following content:\r\n```\r\nCannot enforce NoNewPrivs: containerd runtime not supported\r\n```\r\nThat to say, the value of `a.Runtime.Type()` is `containerd` for cri-containerd but not `remote`.\r\n\r\nIs my analysis correct? : )",
        "createdAt" : "2017-08-26T02:29:50Z",
        "updatedAt" : "2017-08-26T02:29:50Z",
        "lastEditedBy" : "0c918241-248f-4c64-a884-728ee30e9a3e",
        "tags" : [
        ]
      },
      {
        "id" : "351e3906-c12b-4dcd-b20b-60ee82b798f8",
        "parentId" : "bae00896-ad33-4279-a6c8-67c851c7d317",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "@miaoyq You are right, `Runtime.Type()` is the actually runtime name instead of `remote`.",
        "createdAt" : "2017-08-26T12:20:47Z",
        "updatedAt" : "2017-08-26T12:20:47Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      },
      {
        "id" : "5ac9545e-ca5b-4af4-be13-ef6eec055e31",
        "parentId" : "bae00896-ad33-4279-a6c8-67c851c7d317",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "Filed #51404 for fixing it.",
        "createdAt" : "2017-08-26T12:30:07Z",
        "updatedAt" : "2017-08-26T12:30:07Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      },
      {
        "id" : "a2df7154-68ad-421f-af0b-6c981a78a1d1",
        "parentId" : "bae00896-ad33-4279-a6c8-67c851c7d317",
        "authorId" : "0c918241-248f-4c64-a884-728ee30e9a3e",
        "body" : "Thanks @feiskyer ",
        "createdAt" : "2017-08-27T01:37:53Z",
        "updatedAt" : "2017-08-27T01:37:53Z",
        "lastEditedBy" : "0c918241-248f-4c64-a884-728ee30e9a3e",
        "tags" : [
        ]
      },
      {
        "id" : "068122ab-efb8-4d11-9063-3e4429871c80",
        "parentId" : "bae00896-ad33-4279-a6c8-67c851c7d317",
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "@miaoyq Thanks for catching this. This is really confusing, we sometimes use the runtime names from flag to do admission check, which are \"remote\"/\"docker\". Sometimes using the runtime names got through CRI, which are \"docker\"/\"containerd\"/\"cri-o\".",
        "createdAt" : "2017-08-28T17:05:51Z",
        "updatedAt" : "2017-08-28T17:05:53Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      }
    ],
    "commit" : "b760fa95e5832b983b8fc331c6c7032a71b9e3ca",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +189,193 @@\n\t// Always admit for remote runtime.\n\tif a.Runtime.Type() == kubetypes.RemoteContainerRuntime {\n\t\treturn PodAdmitResult{Admit: true}\n\t}"
  },
  {
    "id" : "4821e7bf-1255-40d8-91ca-3f2ed839b149",
    "prId" : 47019,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/47019#pullrequestreview-51560112",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "db7c2f22-27c9-479e-a2a8-1f92dc8e68b2",
        "parentId" : null,
        "authorId" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "body" : "@yujuhong - It would be nice to incorporate this type of logic into the CRI. What if there was something like \"GetSupportedFeatures\", which would return a list of optional features (known constants) that the CRI runtime supported?",
        "createdAt" : "2017-07-21T19:03:44Z",
        "updatedAt" : "2017-07-24T17:57:11Z",
        "lastEditedBy" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "tags" : [
        ]
      }
    ],
    "commit" : "a5e4c6f6ed0d441d8fd17a18416556f7621eeb56",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +189,193 @@\n\t// Make sure it is either docker or rkt runtimes.\n\tif a.Runtime.Type() != kubetypes.DockerContainerRuntime && a.Runtime.Type() != kubetypes.RktContainerRuntime {\n\t\treturn PodAdmitResult{\n\t\t\tAdmit:   false,"
  },
  {
    "id" : "4f8f0b00-bcb7-409c-b5b5-49bbbd285af9",
    "prId" : 47019,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/47019#pullrequestreview-51849307",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "47eae646-1fcc-40e1-bf52-a78a10acd32e",
        "parentId" : null,
        "authorId" : "a5ac91f3-1cbc-4fd9-af85-741ee28dd9c8",
        "body" : "Golint comments: exported function NewNoNewPrivsAdmitHandler should have comment or be unexported. [More info](https://golang.org/wiki/CodeReviewComments#doc-comments). <!-- golint -->",
        "createdAt" : "2017-07-24T18:01:20Z",
        "updatedAt" : "2017-07-24T18:01:21Z",
        "lastEditedBy" : "a5ac91f3-1cbc-4fd9-af85-741ee28dd9c8",
        "tags" : [
        ]
      }
    ],
    "commit" : "a5e4c6f6ed0d441d8fd17a18416556f7621eeb56",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +167,171 @@}\n\nfunc NewNoNewPrivsAdmitHandler(runtime kubecontainer.Runtime) PodAdmitHandler {\n\treturn &noNewPrivsAdmitHandler{\n\t\tRuntime: runtime,"
  },
  {
    "id" : "4fd531a4-dafe-405d-8d8c-b91b11b83158",
    "prId" : 47019,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/47019#pullrequestreview-59272772",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "87ec991d-560f-4203-b281-1a9160552f7f",
        "parentId" : null,
        "authorId" : "21b457d2-6f88-4a9f-8d5a-debafbcb6cfe",
        "body" : "@jessfraz Should we handle `InitContainers` here too? Looks like, yes, we should.",
        "createdAt" : "2017-08-29T14:19:06Z",
        "updatedAt" : "2017-08-29T14:19:06Z",
        "lastEditedBy" : "21b457d2-6f88-4a9f-8d5a-debafbcb6cfe",
        "tags" : [
        ]
      },
      {
        "id" : "1b924fec-02eb-4663-bbe3-a71fc4027ba1",
        "parentId" : "87ec991d-560f-4203-b281-1a9160552f7f",
        "authorId" : "ffc157a5-b8d0-4a06-b942-f8e5150e4215",
        "body" : "Are init containers handled differently that should probably be documented somewhere so it's not overlooked unless I missed it",
        "createdAt" : "2017-08-29T14:37:01Z",
        "updatedAt" : "2017-08-29T14:37:01Z",
        "lastEditedBy" : "ffc157a5-b8d0-4a06-b942-f8e5150e4215",
        "tags" : [
        ]
      },
      {
        "id" : "4f5e48d7-cc17-4f04-af72-70f393dbe371",
        "parentId" : "87ec991d-560f-4203-b281-1a9160552f7f",
        "authorId" : "21b457d2-6f88-4a9f-8d5a-debafbcb6cfe",
        "body" : "As far I understand, the most of the code from this PR is handling initContainers correctly because it works only with securityContext. The existing infrastructure is aware about containers/initContainers and executes validation on their SecurityContexts.\r\n\r\nBut when we're manually inspecting PodSpec we obligated to take care about initContainers. In this particular case, I see that `noNewPrivsRequired()` will return `false` for a pod that has initContainers with allowPrivielegeEscalation=false. I'm not sure what will be the consequence of this, perhaps `allowPrivielegeEscalation=false` won't work for a pod?",
        "createdAt" : "2017-08-29T15:02:16Z",
        "updatedAt" : "2017-08-29T15:02:17Z",
        "lastEditedBy" : "21b457d2-6f88-4a9f-8d5a-debafbcb6cfe",
        "tags" : [
        ]
      }
    ],
    "commit" : "a5e4c6f6ed0d441d8fd17a18416556f7621eeb56",
    "line" : 66,
    "diffHunk" : "@@ -1,1 +228,232 @@}\n\nfunc noNewPrivsRequired(pod *v1.Pod) bool {\n\t// Iterate over pod containers and check if we added no-new-privs.\n\tfor _, c := range pod.Spec.Containers {"
  },
  {
    "id" : "753cc784-5531-406e-b0e1-9b0ef8c362b0",
    "prId" : 25681,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "55b0116b-2d54-4096-84eb-2fd9c80d06d5",
        "parentId" : null,
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "You probably want to return an empty string here\n",
        "createdAt" : "2016-05-22T20:25:52Z",
        "updatedAt" : "2016-05-24T18:13:06Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      },
      {
        "id" : "f08a7143-b86f-4924-930b-925dbf71d9ba",
        "parentId" : "55b0116b-2d54-4096-84eb-2fd9c80d06d5",
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "Yeah. Good catch. I added a test just in case. \n",
        "createdAt" : "2016-05-23T16:52:02Z",
        "updatedAt" : "2016-05-24T18:13:06Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      },
      {
        "id" : "ff1318fe-f168-4ecd-9fe5-5e1c8a3e8e42",
        "parentId" : "55b0116b-2d54-4096-84eb-2fd9c80d06d5",
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "Uh...where is the test?\n",
        "createdAt" : "2016-05-23T17:17:10Z",
        "updatedAt" : "2016-05-24T18:13:06Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "b253b221-fc5d-4d40-a721-e06e2f001d92",
        "parentId" : "55b0116b-2d54-4096-84eb-2fd9c80d06d5",
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "https://github.com/kubernetes/kubernetes/pull/25681/files#diff-64b1f0563027020695afd90a96ecdea8R189\n",
        "createdAt" : "2016-05-23T19:00:01Z",
        "updatedAt" : "2016-05-24T18:13:06Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      }
    ],
    "commit" : "e7721ea8cf4c3402e7a4322a81146a9fd1dfe96a",
    "line" : null,
    "diffHunk" : "@@ -1,1 +139,143 @@\tdefer resp.Body.Close()\n\tif bytes, err := ioutil.ReadAll(resp.Body); err == nil {\n\t\treturn string(bytes)\n\t}\n\treturn \"\""
  },
  {
    "id" : "c01ea0a4-c28c-47ee-8054-119ee8437d76",
    "prId" : 25681,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "86f07325-032e-4175-a5cd-a2dc9e3b4ea2",
        "parentId" : null,
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "Kill this line and group std libraries together\n",
        "createdAt" : "2016-05-22T20:27:22Z",
        "updatedAt" : "2016-05-24T18:13:06Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      },
      {
        "id" : "fb5b54ca-65aa-40f6-a751-79c7a7d0905a",
        "parentId" : "86f07325-032e-4175-a5cd-a2dc9e3b4ea2",
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "Done\n",
        "createdAt" : "2016-05-23T16:52:52Z",
        "updatedAt" : "2016-05-24T18:13:06Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      }
    ],
    "commit" : "e7721ea8cf4c3402e7a4322a81146a9fd1dfe96a",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +24,28 @@\t\"net/http\"\n\t\"strconv\"\n\n\t\"github.com/golang/glog\"\n\t\"k8s.io/kubernetes/pkg/api\""
  }
]