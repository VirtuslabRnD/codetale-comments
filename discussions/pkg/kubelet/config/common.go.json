[
  {
    "id" : "54eb323d-f40c-477c-b8d6-46289875fc45",
    "prId" : 100002,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/100002#pullrequestreview-608171769",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "63eb59e2-41b3-492f-b247-ed6acd483d1d",
        "parentId" : null,
        "authorId" : "a08a031e-c5d0-4521-a805-73ac0bc08c9a",
        "body" : "Why are we logging the full object here?",
        "createdAt" : "2021-03-09T12:14:11Z",
        "updatedAt" : "2021-03-11T11:33:07Z",
        "lastEditedBy" : "a08a031e-c5d0-4521-a805-73ac0bc08c9a",
        "tags" : [
        ]
      },
      {
        "id" : "d7808f52-40bd-4198-8f9d-494a299f90e5",
        "parentId" : "63eb59e2-41b3-492f-b247-ed6acd483d1d",
        "authorId" : "75b96c95-34ba-4c4f-8a8d-4d2b80f24465",
        "body" : "In the [KEP](https://github.com/kubernetes/community/blob/master/contributors/devel/sig-instrumentation/migration-to-structured-logging.md#use-klogkobj-and-klogkref-for-kubernetes-objects) guide said we should reference Kubernetes objects.\r\n",
        "createdAt" : "2021-03-09T12:57:05Z",
        "updatedAt" : "2021-03-11T11:33:07Z",
        "lastEditedBy" : "75b96c95-34ba-4c4f-8a8d-4d2b80f24465",
        "tags" : [
        ]
      },
      {
        "id" : "32651dbc-58e2-4d82-b6a5-b0eee554e286",
        "parentId" : "63eb59e2-41b3-492f-b247-ed6acd483d1d",
        "authorId" : "6ea93d56-a0ec-4969-ac42-11a78c2085e6",
        "body" : "`klog.KObj` doesn't log whole object, just a reference in standard format `<namespace>/<name>`. Main reason for using it is it both supports `text` and `json` format.",
        "createdAt" : "2021-03-09T22:33:57Z",
        "updatedAt" : "2021-03-11T11:33:07Z",
        "lastEditedBy" : "6ea93d56-a0ec-4969-ac42-11a78c2085e6",
        "tags" : [
        ]
      }
    ],
    "commit" : "27a99045e560e32a3744f1e08b19ef7fc1bb9d2c",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +79,83 @@\t}\n\tklog.V(5).InfoS(\"Set namespace for pod\", \"pod\", klog.KObj(pod), \"source\", source)\n\n\t// Set the Host field to indicate this pod is scheduled on the current node.\n\tpod.Spec.NodeName = string(nodeName)"
  },
  {
    "id" : "b9ee9933-546a-4eba-80a2-b83f2aef3f22",
    "prId" : 99144,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/99144#pullrequestreview-696300084",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "82bc141b-491f-4dbc-9a33-876da1e6e975",
        "parentId" : null,
        "authorId" : "31a2ac00-6c67-4307-a4bc-bfd13f41ef27",
        "body" : "Is there anything else passing options to `ValidatePodCreate`? Can we remove this argument entirely? This isn't how I've normally seen feature flags used in the kubelet.",
        "createdAt" : "2021-05-14T17:48:06Z",
        "updatedAt" : "2021-05-14T17:48:46Z",
        "lastEditedBy" : "31a2ac00-6c67-4307-a4bc-bfd13f41ef27",
        "tags" : [
        ]
      },
      {
        "id" : "a1e94a70-c028-496b-8bf1-6bbe6c957b11",
        "parentId" : "82bc141b-491f-4dbc-9a33-876da1e6e975",
        "authorId" : "f46daf11-7000-4650-ae5b-dd25c29b4e29",
        "body" : "Yes, there are other gated features that use PodValidationOptions, e.g. AllowDownwardAPIHugePages, AllowIndivisibleHugePagesValues etc. We can't remove it.",
        "createdAt" : "2021-05-17T08:17:27Z",
        "updatedAt" : "2021-05-17T08:17:27Z",
        "lastEditedBy" : "f46daf11-7000-4650-ae5b-dd25c29b4e29",
        "tags" : [
        ]
      },
      {
        "id" : "890c6bd8-2d10-42f9-be35-0b6a12eaf5db",
        "parentId" : "82bc141b-491f-4dbc-9a33-876da1e6e975",
        "authorId" : "31a2ac00-6c67-4307-a4bc-bfd13f41ef27",
        "body" : "Confirmed: https://github.com/kubernetes/kubernetes/blob/31f6cca256a21b9bbd561965dd321f518c88c944/pkg/apis/core/validation/validation_test.go#L4287",
        "createdAt" : "2021-05-26T21:44:14Z",
        "updatedAt" : "2021-05-26T21:44:14Z",
        "lastEditedBy" : "31a2ac00-6c67-4307-a4bc-bfd13f41ef27",
        "tags" : [
        ]
      },
      {
        "id" : "2730e325-5aa5-4bbb-a173-1f263bb51d38",
        "parentId" : "82bc141b-491f-4dbc-9a33-876da1e6e975",
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "yeah, this has been a useful pattern for injection validation options for similar changes to pod spec evolution.",
        "createdAt" : "2021-06-30T15:17:13Z",
        "updatedAt" : "2021-06-30T15:17:58Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      }
    ],
    "commit" : "c12aa0f6b7539c1a7bab8731ed68209b0f339907",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +136,140 @@\t\treturn true, pod, err\n\t}\n\tif errs := validation.ValidatePodCreate(newPod, validation.PodValidationOptions{}); len(errs) > 0 {\n\t\treturn true, pod, fmt.Errorf(\"invalid pod: %v\", errs)\n\t}"
  },
  {
    "id" : "ad2a69a1-6ee5-4a44-a054-7629382fb6dc",
    "prId" : 43116,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/43116#pullrequestreview-27475724",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4f9c000b-fc00-472c-9e06-8a2aed10927a",
        "parentId" : null,
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "Don't we want to add this for the http source as well?",
        "createdAt" : "2017-03-15T22:51:24Z",
        "updatedAt" : "2017-03-17T21:07:28Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "1f81de33-f1d9-43a0-b396-58c5a347c802",
        "parentId" : "4f9c000b-fc00-472c-9e06-8a2aed10927a",
        "authorId" : "a6409368-42e0-44a9-bf79-9d3042ac3b65",
        "body" : "This is a cautious decision not introducing this to http source. Honestly, I don't know the use case of http-based pods, and it is arguable that they have their own controller outside the node. ",
        "createdAt" : "2017-03-16T22:28:46Z",
        "updatedAt" : "2017-03-17T21:07:28Z",
        "lastEditedBy" : "a6409368-42e0-44a9-bf79-9d3042ac3b65",
        "tags" : [
        ]
      }
    ],
    "commit" : "d419efbe7186a2c0fcb6c4a056794a7b137cde5d",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +74,78 @@\tpod.Annotations[kubetypes.ConfigHashAnnotationKey] = string(pod.UID)\n\n\tif isFile {\n\t\t// Applying the default Taint tolerations to static pods,\n\t\t// so they are not evicted when there are node problems."
  },
  {
    "id" : "9d026483-213a-4403-9fd7-db2909b7f4f7",
    "prId" : 43116,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/43116#pullrequestreview-27633923",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0d674e53-532e-4a5a-b761-2bdd17a3769d",
        "parentId" : null,
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "I am a little bit unsure about this -- does this mean that we'll need to expand the list whenever new taints are added? ",
        "createdAt" : "2017-03-16T23:02:04Z",
        "updatedAt" : "2017-03-17T21:07:28Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "104fa6ce-55fe-4f5d-9eb4-ab6287d7f53f",
        "parentId" : "0d674e53-532e-4a5a-b761-2bdd17a3769d",
        "authorId" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "body" : "Good point. Probably the better thing to do here is\r\n\r\n```\r\n&api.Toleration{\r\n   Operator: \"Exists\",\r\n   Effect: api.TaintEffectNoExecute,\r\n})\r\n```\r\n\r\nThis will tolerate all NoExecute taints that are added in the future, which is presumably what we want for static pods.\r\n\r\nI'm going to remove LGTM so @dchen1107 can make this change.",
        "createdAt" : "2017-03-17T01:32:35Z",
        "updatedAt" : "2017-03-17T21:07:28Z",
        "lastEditedBy" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "tags" : [
        ]
      },
      {
        "id" : "ea126269-eec6-4b7b-b0ec-aefd9c5cca9e",
        "parentId" : "0d674e53-532e-4a5a-b761-2bdd17a3769d",
        "authorId" : "a6409368-42e0-44a9-bf79-9d3042ac3b65",
        "body" : "I thought about this, but still choose to make a cautious decision to hardcoded all NoExecute taints. But I think you guys are right on this. ",
        "createdAt" : "2017-03-17T16:48:41Z",
        "updatedAt" : "2017-03-17T21:07:28Z",
        "lastEditedBy" : "a6409368-42e0-44a9-bf79-9d3042ac3b65",
        "tags" : [
        ]
      }
    ],
    "commit" : "d419efbe7186a2c0fcb6c4a056794a7b137cde5d",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +76,80 @@\tif isFile {\n\t\t// Applying the default Taint tolerations to static pods,\n\t\t// so they are not evicted when there are node problems.\n\t\tapi.AddOrUpdateTolerationInPod(pod, &api.Toleration{\n\t\t\tOperator: \"Exists\","
  }
]