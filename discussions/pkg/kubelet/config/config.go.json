[
  {
    "id" : "0c1c56f0-85dc-4d95-83d2-e7a951cc9c31",
    "prId" : 63553,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/63553#pullrequestreview-118920319",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0ed7bf9c-8f48-4f87-abc6-d2c7986df948",
        "parentId" : null,
        "authorId" : "fa37bbb4-59dd-42f0-8202-52d5717aff5e",
        "body" : "Not the issue for this commit, but can you do it like this (to remove the intent)? \r\n```golang\r\nif c.checkpointManager != nil {\r\n  return nil\r\n}\r\n\r\nc.checkpointManager, err := checkpointmanager.NewCheckpointManager(path)\r\nif err != nil {\r\n  return err\r\n}\r\n\r\npods, err := checkpoint.LoadPods(c.checkpointManager)\r\nif err != nil {\r\n  return err\r\n}\r\n\r\nupdates <- kubetypes.PodUpdate{Pods: pods, Op: kubetypes.RESTORE, Source: kubetypes.ApiserverSource}\r\nreturn nil\r\n```",
        "createdAt" : "2018-05-09T22:01:22Z",
        "updatedAt" : "2018-05-21T21:17:59Z",
        "lastEditedBy" : "fa37bbb4-59dd-42f0-8202-52d5717aff5e",
        "tags" : [
        ]
      }
    ],
    "commit" : "6469c8e333c01b2cccd7d8f918453db8abfd35b8",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +117,121 @@\t\treturn nil\n\t}\n\tvar err error\n\tc.checkpointManager, err = checkpointmanager.NewCheckpointManager(path)\n\tif err != nil {"
  },
  {
    "id" : "67534e17-b417-43ca-b60e-35f5850031fc",
    "prId" : 63553,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/63553#pullrequestreview-121937223",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "af43c15e-80d8-470d-b637-1a85168c79cb",
        "parentId" : null,
        "authorId" : "3eccedfc-5c53-4555-94cb-69f2b56e485c",
        "body" : "had to add this because restores were not propogated through to the updates channel",
        "createdAt" : "2018-05-10T20:18:19Z",
        "updatedAt" : "2018-05-21T21:17:59Z",
        "lastEditedBy" : "3eccedfc-5c53-4555-94cb-69f2b56e485c",
        "tags" : [
        ]
      },
      {
        "id" : "0f88cab3-4cb2-40b1-8d64-2a6be050324f",
        "parentId" : "af43c15e-80d8-470d-b637-1a85168c79cb",
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "make sense",
        "createdAt" : "2018-05-21T20:32:51Z",
        "updatedAt" : "2018-05-21T21:17:59Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      }
    ],
    "commit" : "6469c8e333c01b2cccd7d8f918453db8abfd35b8",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +315,319 @@\tcase kubetypes.RESTORE:\n\t\tglog.V(4).Infof(\"Restoring pods for source %s\", source)\n\t\tfor _, value := range update.Pods {\n\t\t\trestorePods = append(restorePods, value)\n\t\t}"
  },
  {
    "id" : "6dd728a2-f10a-44b8-9347-5945f7cd41ea",
    "prId" : 50984,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/50984#pullrequestreview-72716516",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1ff84905-5d9f-4aba-a3db-7fa03a4a514a",
        "parentId" : null,
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "@yujuhong - From your example this section was confusing.  ",
        "createdAt" : "2017-10-30T00:08:03Z",
        "updatedAt" : "2017-11-21T04:24:51Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      }
    ],
    "commit" : "763122ae4bc86a055e9c0cca5a3ac987caef23e2",
    "line" : 81,
    "diffHunk" : "@@ -1,1 +308,312 @@\t\t}\n\tcase kubetypes.RESTORE:\n\t\tglog.V(4).Infof(\"Restoring pods for source %s\", source)\n\n\tdefault:"
  },
  {
    "id" : "19840ee3-3aa0-4ec4-8f43-8c8487d7317a",
    "prId" : 47828,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/47828#pullrequestreview-51938664",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "42727199-dcd9-407a-9b75-d0e090179ffe",
        "parentId" : null,
        "authorId" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "body" : "@yujuhong should we skip the pod or start returning an error here? What should we do for other functions in this file (e.g. `MergedState`) that have the same pattern?",
        "createdAt" : "2017-06-21T21:00:44Z",
        "updatedAt" : "2017-08-01T01:30:23Z",
        "lastEditedBy" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "tags" : [
        ]
      },
      {
        "id" : "50e93274-f80f-4e2b-a461-c60d30e8d79b",
        "parentId" : "42727199-dcd9-407a-9b75-d0e090179ffe",
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "`continue` should be fine. We shouldn't block everything if one pod copying fails -- but when will the deep copy fail? ",
        "createdAt" : "2017-06-21T23:04:30Z",
        "updatedAt" : "2017-08-01T01:30:23Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "3f6be805-129b-414f-b35f-d7c12b24ced0",
        "parentId" : "42727199-dcd9-407a-9b75-d0e090179ffe",
        "authorId" : "6c275934-6f60-4568-9c08-6813f4e68199",
        "body" : "@yujuhong @mtaufen  If the err return value is not nil, the type conversion will be panic. I think this is a very serious error. We can not guarantee that err is always nil, must do err processing.",
        "createdAt" : "2017-06-22T01:26:29Z",
        "updatedAt" : "2017-08-01T01:30:23Z",
        "lastEditedBy" : "6c275934-6f60-4568-9c08-6813f4e68199",
        "tags" : [
        ]
      },
      {
        "id" : "7b7b676e-9ed4-4fb0-9e13-89eb9cc04948",
        "parentId" : "42727199-dcd9-407a-9b75-d0e090179ffe",
        "authorId" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "body" : "Yes, I agree. Please apply the same fix to other places you see this pattern in this file. We should probably also try the type conversion and log and `continue` if that fails, rather than risk a panic.",
        "createdAt" : "2017-06-22T13:32:18Z",
        "updatedAt" : "2017-08-01T01:30:23Z",
        "lastEditedBy" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "tags" : [
        ]
      },
      {
        "id" : "17e7a038-da0b-43f6-8cbd-15c13095288a",
        "parentId" : "42727199-dcd9-407a-9b75-d0e090179ffe",
        "authorId" : "6c275934-6f60-4568-9c08-6813f4e68199",
        "body" : "This file seems to have nothing else, is it possible to run the test?",
        "createdAt" : "2017-06-23T05:50:58Z",
        "updatedAt" : "2017-08-01T01:30:23Z",
        "lastEditedBy" : "6c275934-6f60-4568-9c08-6813f4e68199",
        "tags" : [
        ]
      },
      {
        "id" : "3b44bc8e-1c01-4a02-be1d-12544e0694d3",
        "parentId" : "42727199-dcd9-407a-9b75-d0e090179ffe",
        "authorId" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "body" : "What about in `MergedState()`?",
        "createdAt" : "2017-07-24T23:48:07Z",
        "updatedAt" : "2017-08-01T01:30:23Z",
        "lastEditedBy" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "tags" : [
        ]
      },
      {
        "id" : "fbb21e94-c496-47af-b1ca-9bb4afc468ca",
        "parentId" : "42727199-dcd9-407a-9b75-d0e090179ffe",
        "authorId" : "6c275934-6f60-4568-9c08-6813f4e68199",
        "body" : "Thank you,has been added.",
        "createdAt" : "2017-07-25T01:12:00Z",
        "updatedAt" : "2017-08-01T01:30:23Z",
        "lastEditedBy" : "6c275934-6f60-4568-9c08-6813f4e68199",
        "tags" : [
        ]
      }
    ],
    "commit" : "96c0fe9b1132f19c6560ac92ecc67c1ee4b73a37",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +521,525 @@\t\tif err != nil {\n\t\t\tglog.Errorf(\"unable to copy pod: %v\", err)\n\t\t\tcontinue\n\t\t}\n\t\tpods = append(pods, pod.(*v1.Pod))"
  },
  {
    "id" : "dcb469e2-a5a2-4f28-b928-3a566a66a930",
    "prId" : 37569,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/37569#pullrequestreview-10421007",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3ee9794c-5ef2-46e8-ae20-8933008c2905",
        "parentId" : null,
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "This block of code should probably be moved to line 237 so that we perform the comparison *after* setting the proper status. \r\n\r\nAlso /cc @Random-Liu, who last touched the code AFAIK for a sanity check.",
        "createdAt" : "2016-11-28T20:42:17Z",
        "updatedAt" : "2016-11-28T20:42:17Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "7666f727-b58c-444b-ba27-1e7abb920d5b",
        "parentId" : "3ee9794c-5ef2-46e8-ae20-8933008c2905",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "It is called before updatePodFunc() gets called, so should be ok.",
        "createdAt" : "2016-11-28T21:11:09Z",
        "updatedAt" : "2016-11-28T21:11:09Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      },
      {
        "id" : "2ddc52d8-f5fa-4e51-ac41-e5c13fcad265",
        "parentId" : "3ee9794c-5ef2-46e8-ae20-8933008c2905",
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "It should be fine to put the code here. :)",
        "createdAt" : "2016-11-28T21:38:37Z",
        "updatedAt" : "2016-11-28T21:38:40Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      }
    ],
    "commit" : "8554d8e0db0702d3fdf4e19b11791549b03c478e",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +256,260 @@\n\tupdate := change.(kubetypes.PodUpdate)\n\t// The InitContainers and InitContainerStatuses fields are lost during\n\t// serialization and deserialization. They are conveyed via Annotations.\n\t// Setting these fields here so that kubelet doesn't have to check for"
  },
  {
    "id" : "dde248b5-419a-4bc0-aebb-af00420f9fa9",
    "prId" : 23141,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d94c8f6b-53ba-4a18-85f8-2886717ff7e0",
        "parentId" : null,
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "@yujuhong nit: maybe add a TODO or file an issue about the original issue of pod rejection?\n",
        "createdAt" : "2016-03-17T21:17:38Z",
        "updatedAt" : "2016-03-17T21:55:38Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      },
      {
        "id" : "39b4938c-7fa6-4a69-b2d7-7a7ad84936c8",
        "parentId" : "d94c8f6b-53ba-4a18-85f8-2886717ff7e0",
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "done.\n",
        "createdAt" : "2016-03-17T21:24:52Z",
        "updatedAt" : "2016-03-17T21:24:52Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "d68f97df-7e52-4037-80a2-8de46778c923",
        "parentId" : "d94c8f6b-53ba-4a18-85f8-2886717ff7e0",
        "authorId" : "a6409368-42e0-44a9-bf79-9d3042ac3b65",
        "body" : "Based on your old comment, with this change, some existing pods might be rejected by admission process if there is over-commitment? \n",
        "createdAt" : "2016-03-17T22:53:07Z",
        "updatedAt" : "2016-03-17T22:53:07Z",
        "lastEditedBy" : "a6409368-42e0-44a9-bf79-9d3042ac3b65",
        "tags" : [
        ]
      },
      {
        "id" : "050785a9-4f1f-4604-b83f-d80f750bb5d1",
        "parentId" : "d94c8f6b-53ba-4a18-85f8-2886717ff7e0",
        "authorId" : "a6409368-42e0-44a9-bf79-9d3042ac3b65",
        "body" : "Ahh, I saw your comment below. But I am not 100% convinced  the change is safe here. \n",
        "createdAt" : "2016-03-17T22:53:47Z",
        "updatedAt" : "2016-03-17T22:54:23Z",
        "lastEditedBy" : "a6409368-42e0-44a9-bf79-9d3042ac3b65",
        "tags" : [
        ]
      },
      {
        "id" : "97c1ee36-3c8a-4dde-8d81-274ce41dbb01",
        "parentId" : "d94c8f6b-53ba-4a18-85f8-2886717ff7e0",
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "@dchen1107 FYI, This part of code is introduced in https://github.com/kubernetes/kubernetes/pull/18546\n",
        "createdAt" : "2016-03-18T00:35:19Z",
        "updatedAt" : "2016-03-18T00:39:13Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      },
      {
        "id" : "16a4c6fb-1f22-49e0-b85f-01db6676a6a8",
        "parentId" : "d94c8f6b-53ba-4a18-85f8-2886717ff7e0",
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "@dchen1107 In fact, the original pod rejection bug was there for a while. Yuju tried to fix it with #18546, but introduced one of the issues in #23104. This PR just recover the old behavior.\n\nIf you think we should still fix the old bug, maybe we could try some other ways like: https://github.com/kubernetes/kubernetes/pull/18546#issuecomment-163806972\n",
        "createdAt" : "2016-03-18T00:40:35Z",
        "updatedAt" : "2016-03-18T00:42:16Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      }
    ],
    "commit" : "deafa44d61865c1420d4fc2a55b46ccf0f5520a4",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +239,243 @@\t\t\trecordFirstSeenTime(ref)\n\t\t\tpods[name] = ref\n\t\t\taddPods = append(addPods, ref)\n\t\t}\n\t}"
  },
  {
    "id" : "23844553-08ae-4852-8edd-c533c9c4ac1b",
    "prId" : 18518,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f8705c56-f471-4803-b50a-8caa18f04674",
        "parentId" : null,
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "If I'm not mistaken, MergedState() can call this function as well.\n",
        "createdAt" : "2015-12-10T19:05:48Z",
        "updatedAt" : "2015-12-10T19:05:48Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "7eb1b3d0-908e-47be-abe6-15167c16a036",
        "parentId" : "f8705c56-f471-4803-b50a-8caa18f04674",
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "Sure. In fact I learned how to do deep copy from `MergedState()`. I should modify it, too. :)\n",
        "createdAt" : "2015-12-10T19:10:50Z",
        "updatedAt" : "2015-12-10T19:10:50Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      },
      {
        "id" : "03c3b8fb-acdf-4b0d-8c1c-5486b604fa2a",
        "parentId" : "f8705c56-f471-4803-b50a-8caa18f04674",
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "Ha...Maybe not...`MergedState()` copies pods map instead of slice.\n",
        "createdAt" : "2015-12-10T19:12:31Z",
        "updatedAt" : "2015-12-10T19:12:31Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      }
    ],
    "commit" : "eb551f388caaa41827b57967d908ac57e76c6e16",
    "line" : 82,
    "diffHunk" : "@@ -1,1 +474,478 @@}\n\nfunc copyPods(sourcePods []*api.Pod) []*api.Pod {\n\tpods := []*api.Pod{}\n\tfor _, source := range sourcePods {"
  },
  {
    "id" : "d443d457-887c-43a5-ad26-0326a72d6c9e",
    "prId" : 18410,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5bd182ea-3948-468c-babe-d879d991db55",
        "parentId" : null,
        "authorId" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "body" : "(nit) 4 returns seems likes a lot. Consider either wrapping this in a `struct{adds, updates, deletes, reconciles}`, or returning a `map[kubetypes.PodOperation]kubetypes.PodUpdate`\n",
        "createdAt" : "2016-01-04T22:29:32Z",
        "updatedAt" : "2016-01-10T09:35:25Z",
        "lastEditedBy" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "tags" : [
        ]
      },
      {
        "id" : "fa53a4a0-fe87-43ab-ae33-2b6389aac8b6",
        "parentId" : "5bd182ea-3948-468c-babe-d879d991db55",
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "For now, I think I'll just keep this to keep it simple. :) Thanks.\n",
        "createdAt" : "2016-01-05T07:10:26Z",
        "updatedAt" : "2016-01-10T09:35:25Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      }
    ],
    "commit" : "5b4a210d49c58e4e517738912330c294a32377b4",
    "line" : 86,
    "diffHunk" : "@@ -1,1 +303,307 @@\treconciles = &kubetypes.PodUpdate{Op: kubetypes.RECONCILE, Pods: copyPods(reconcilePods), Source: source}\n\n\treturn adds, updates, deletes, reconciles\n}\n"
  },
  {
    "id" : "2231924c-0afe-4cdf-b4f8-291a03918317",
    "prId" : 18410,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fe6c74dd-8cfc-42b5-826c-02b6d93535c5",
        "parentId" : null,
        "authorId" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "body" : "Does the order that updates are sent matter? (e.g. would behavior change if reconciles were sent before deletes?)\n",
        "createdAt" : "2016-01-04T22:31:06Z",
        "updatedAt" : "2016-01-10T09:35:25Z",
        "lastEditedBy" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "tags" : [
        ]
      },
      {
        "id" : "1e4f98ed-379f-43d5-aa56-fc3ea9896022",
        "parentId" : "fe6c74dd-8cfc-42b5-826c-02b6d93535c5",
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "I think each pod should only belong to one set (adds, updates, deletes, or reconciles), so the orders should not matter. We don't guarantee the order across pods anyway. \n",
        "createdAt" : "2016-01-05T20:35:21Z",
        "updatedAt" : "2016-01-10T09:35:25Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "5b4a210d49c58e4e517738912330c294a32377b4",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +171,175 @@\t\tif len(reconciles.Pods) > 0 {\n\t\t\ts.updates <- *reconciles\n\t\t}\n\n\tcase PodConfigNotificationSnapshotAndUpdates:"
  },
  {
    "id" : "253440de-4304-4482-9f37-5eb6170f6649",
    "prId" : 9457,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "547da63e-07f7-4324-bdb3-2a4b2d471519",
        "parentId" : null,
        "authorId" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "body" : "you don't need this and start time right (if we decide to set startime as watch received time)? Can't you just set it on the pod when it's added and everything will just work (https://github.com/GoogleCloudPlatform/kubernetes/pull/10066 shouldn't overwrite it)\n",
        "createdAt" : "2015-06-19T18:37:45Z",
        "updatedAt" : "2015-06-19T19:08:08Z",
        "lastEditedBy" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "tags" : [
        ]
      },
      {
        "id" : "b838a723-e05f-4963-bc24-e92401ebb517",
        "parentId" : "547da63e-07f7-4324-bdb3-2a4b2d471519",
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "Yes, if we go with that, I can set the StartTime here, and probably get rid of the annotation completely. I _think_ that should work. I went for the annotation only because I didn't want to add any additional field to the pod. \n",
        "createdAt" : "2015-06-19T18:57:51Z",
        "updatedAt" : "2015-06-19T19:08:08Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "fdee4acd-9542-48ec-8155-79c010896ab9",
        "parentId" : "547da63e-07f7-4324-bdb3-2a4b2d471519",
        "authorId" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "body" : "Would be surprised if it didnt ;)\n",
        "createdAt" : "2015-06-19T18:59:13Z",
        "updatedAt" : "2015-06-19T19:08:08Z",
        "lastEditedBy" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "tags" : [
        ]
      }
    ],
    "commit" : "f96a8d09357b7ff23ead829739b44fb2c534c16d",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +273,277 @@\t\t\t}\n\t\t\tref.Annotations[kubelet.ConfigSourceAnnotationKey] = source\n\t\t\trecordFirstSeenTime(ref)\n\t\t\tpods[name] = ref\n\t\t\tadds.Pods = append(adds.Pods, ref)"
  },
  {
    "id" : "893d416c-1b4e-4527-8f69-1c70127cedbe",
    "prId" : 9165,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6d7eda8e-b534-449c-96c1-1f5ecb6a65c1",
        "parentId" : null,
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "Is this going to cause all containers to be flapped when upgrading a live cluster from 1.0 to 1.1?\n",
        "createdAt" : "2015-08-14T20:15:06Z",
        "updatedAt" : "2015-08-18T13:08:12Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "03930900-3d50-4ebc-8e6d-a2275481e3a5",
        "parentId" : "6d7eda8e-b534-449c-96c1-1f5ecb6a65c1",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "There should be no objects with deletion timestamp and deletion grace period seconds set at all (both pointers).\n",
        "createdAt" : "2015-08-14T22:41:56Z",
        "updatedAt" : "2015-08-18T13:08:12Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "266e6226e52b55f8a6d5278c1264299d7c713820",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +341,345 @@\tif reflect.DeepEqual(existing.Spec, ref.Spec) &&\n\t\treflect.DeepEqual(existing.DeletionTimestamp, ref.DeletionTimestamp) &&\n\t\treflect.DeepEqual(existing.DeletionGracePeriodSeconds, ref.DeletionGracePeriodSeconds) {\n\t\treturn false\n\t}"
  },
  {
    "id" : "a56c2450-55ac-4a27-9606-e3a191abe831",
    "prId" : 8641,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "738eddf9-5176-4cf5-946a-72a429e94f5f",
        "parentId" : null,
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "FYI, see #8683\n",
        "createdAt" : "2015-05-23T03:38:31Z",
        "updatedAt" : "2015-06-01T23:24:09Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "a0e00da5-43e1-4f62-bd12-b215787519a6",
        "parentId" : "738eddf9-5176-4cf5-946a-72a429e94f5f",
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "The workaround for #8642 was to explicitly set all default fields in the static pods, so you'll need to update fluentd with the default terminationGracePeriod as was done for cpu in #8657.\n",
        "createdAt" : "2015-05-27T18:20:42Z",
        "updatedAt" : "2015-06-01T23:24:09Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "cc35fe5a-5ee7-48df-9e06-c7a35b03d4f3",
        "parentId" : "738eddf9-5176-4cf5-946a-72a429e94f5f",
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "Ping.\n",
        "createdAt" : "2015-05-30T01:06:20Z",
        "updatedAt" : "2015-06-01T23:24:09Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "a7cc6947-40b0-4f02-af99-d6c8d55ce1a5",
        "parentId" : "738eddf9-5176-4cf5-946a-72a429e94f5f",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Oh, missed that.  Will address\n",
        "createdAt" : "2015-05-30T01:41:13Z",
        "updatedAt" : "2015-06-01T23:24:09Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "f12a68cd60ccfe2f0926386df771805c0993d783",
    "line" : null,
    "diffHunk" : "@@ -1,1 +326,330 @@// checkAndUpdatePod updates existing if ref makes a meaningful change and returns true, or\n// returns false if there was no update.\nfunc checkAndUpdatePod(existing, ref *api.Pod) bool {\n\t// TODO: it would be better to update the whole object and only preserve certain things\n\t//       like the source annotation or the UID (to ensure safety)"
  },
  {
    "id" : "27c52cc7-2fa1-47cb-985d-6e6b2f153541",
    "prId" : 8641,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "16965de5-95be-4205-84c6-b649b930965c",
        "parentId" : null,
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "What about DeletionGracePeriodSeconds?\n",
        "createdAt" : "2015-06-01T20:11:00Z",
        "updatedAt" : "2015-06-01T23:24:09Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      }
    ],
    "commit" : "f12a68cd60ccfe2f0926386df771805c0993d783",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +336,340 @@\t// this is an update\n\texisting.Spec = ref.Spec\n\texisting.DeletionTimestamp = ref.DeletionTimestamp\n\texisting.DeletionGracePeriodSeconds = ref.DeletionGracePeriodSeconds\n\treturn true"
  },
  {
    "id" : "8084532d-3360-471e-94c3-1ef219c15a62",
    "prId" : 5433,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0cc53020-df87-459b-a355-86302b548cde",
        "parentId" : null,
        "authorId" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "body" : "Are there are any checks that are being added here as a result of this change, which might cause problems for e.g. ContainerVM? \n",
        "createdAt" : "2015-03-16T13:59:44Z",
        "updatedAt" : "2015-03-16T18:17:33Z",
        "lastEditedBy" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "tags" : [
        ]
      },
      {
        "id" : "adb1602d-e587-461d-9365-df8ddb03d4f8",
        "parentId" : "0cc53020-df87-459b-a355-86302b548cde",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "ValidatePod (at least currently) is validating only:\n- \"meta\" field (which I believe is fine)\n- ValidatePodSpec - this call is exactly the same inside both ValidatePod and ValidateBoundPod\n  So I think this change is fine.\n",
        "createdAt" : "2015-03-16T14:10:17Z",
        "updatedAt" : "2015-03-16T18:17:33Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "5d95e9e6712d9bf2d8c93a0f5cd253e3e9be184f",
    "line" : 62,
    "diffHunk" : "@@ -1,1 +304,308 @@\t\tpod := &pods[i]\n\t\tvar errlist []error\n\t\tif errs := validation.ValidatePod(pod); len(errs) != 0 {\n\t\t\terrlist = append(errlist, errs...)\n\t\t\t// If validation fails, don't trust it any further -"
  },
  {
    "id" : "310bc4e3-58d7-4376-8ade-45d9978d9bd9",
    "prId" : 3455,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "05ad4bce-1a36-4696-a7f0-9fd72a1b8ca7",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "If we're fixing nits... please add a godoc comment, since this is a public function :)\n",
        "createdAt" : "2015-01-14T07:27:12Z",
        "updatedAt" : "2015-01-14T07:34:59Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "6e439ac0-db77-4f26-8b35-de2102b1e8e6",
        "parentId" : "05ad4bce-1a36-4696-a7f0-9fd72a1b8ca7",
        "authorId" : "8e448017-7838-493d-a424-33cada0da657",
        "body" : "Done.\n",
        "createdAt" : "2015-01-14T07:40:16Z",
        "updatedAt" : "2015-01-14T07:40:16Z",
        "lastEditedBy" : "8e448017-7838-493d-a424-33cada0da657",
        "tags" : [
        ]
      }
    ],
    "commit" : "826b61c76d35ce0e611d70950cf99c292e87afd0",
    "line" : null,
    "diffHunk" : "@@ -1,1 +79,83 @@// IsSourceSeen returns true if the specified source string has previously\n// been marked as seen.\nfunc (c *PodConfig) IsSourceSeen(source string) bool {\n\tif c.pods == nil {\n\t\treturn false"
  },
  {
    "id" : "c0410901-03f3-42f9-bb03-97a56906666d",
    "prId" : 3423,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2678d7d9-8e07-43fb-bf36-b13330d70fcd",
        "parentId" : null,
        "authorId" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "body" : "Is this log line still correct, or should it be like:\n`glog.V(6).Infof(\"Just saw %v, previously saw %v\", source, c.pods.sourcesSeen)\n",
        "createdAt" : "2015-01-13T22:31:31Z",
        "updatedAt" : "2015-01-13T22:31:31Z",
        "lastEditedBy" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "tags" : [
        ]
      },
      {
        "id" : "2b7bd2fd-28f8-424c-b329-e2df6c74cd25",
        "parentId" : "2678d7d9-8e07-43fb-bf36-b13330d70fcd",
        "authorId" : "8e448017-7838-493d-a424-33cada0da657",
        "body" : "No, I think it's correct the way it is: this method is checking if the specified source has previously been seen (hence `Looking for <source>, have seen <previouslySeenSources>`).\n\n`Just saw <source>...` would indicate that this method is marking the specified source as seen which is not the case (that is done by the `markSourceSet(...)` method).\n",
        "createdAt" : "2015-01-13T22:38:44Z",
        "updatedAt" : "2015-01-13T22:38:44Z",
        "lastEditedBy" : "8e448017-7838-493d-a424-33cada0da657",
        "tags" : [
        ]
      },
      {
        "id" : "7cef5597-e0a6-4b14-a1de-08215c46bc11",
        "parentId" : "2678d7d9-8e07-43fb-bf36-b13330d70fcd",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "If I understand, this function is testing whether a source has been seen, not asserting that it has.  Maybe rename to IsSourceSeen() \n",
        "createdAt" : "2015-01-13T22:42:03Z",
        "updatedAt" : "2015-01-13T22:42:03Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "110ab6f1bd54e10d9e323fdb4534638d0c1c637c",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +81,85 @@\t\treturn false\n\t}\n\tglog.V(6).Infof(\"Looking for %v, have seen %v\", source, c.pods.sourcesSeen)\n\treturn c.pods.seenSources(source)\n}"
  },
  {
    "id" : "7dcaae32-a3e4-4410-ae91-ee6874b10124",
    "prId" : 356,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "aaa62963-39df-446c-9019-c276a3d885c6",
        "parentId" : null,
        "authorId" : "55c0e4a8-86f8-4426-a163-752ee421c57e",
        "body" : "How about\n\n``` go\nswitch p,found := pods[name]; found {\ntrue:\n// maybeUpdate\nfalse:\n//add\n}\n```\n",
        "createdAt" : "2014-07-18T18:10:29Z",
        "updatedAt" : "2014-07-22T01:29:51Z",
        "lastEditedBy" : "55c0e4a8-86f8-4426-a163-752ee421c57e",
        "tags" : [
        ]
      },
      {
        "id" : "551d849d-6a28-42e5-ac46-f28010179e8a",
        "parentId" : "aaa62963-39df-446c-9019-c276a3d885c6",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Hrm - switching on a boolean always feels suspect to me.\n",
        "createdAt" : "2014-07-18T20:12:17Z",
        "updatedAt" : "2014-07-22T01:29:51Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "bc81e8f2-53be-48e1-b288-703f30e469b9",
        "parentId" : "aaa62963-39df-446c-9019-c276a3d885c6",
        "authorId" : "55c0e4a8-86f8-4426-a163-752ee421c57e",
        "body" : "I do not think we need to comments like \"// this is a no-op\", \"// this is an add\" if the logic is clear.\n",
        "createdAt" : "2014-07-18T20:17:11Z",
        "updatedAt" : "2014-07-22T01:29:51Z",
        "lastEditedBy" : "55c0e4a8-86f8-4426-a163-752ee421c57e",
        "tags" : [
        ]
      },
      {
        "id" : "cf32a521-1902-4a77-896b-5248af4c570c",
        "parentId" : "aaa62963-39df-446c-9019-c276a3d885c6",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "It didn't seem as clear as it should due to the depths of the nesting.  I'm open to changing if readability isn't improved.\n",
        "createdAt" : "2014-07-18T20:30:59Z",
        "updatedAt" : "2014-07-22T01:29:51Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "7767c2a2ace79f55d1f8e4cb75eb1e3bd48d2db9",
    "line" : 193,
    "diffHunk" : "@@ -1,1 +191,195 @@\t\tfor _, ref := range filtered {\n\t\t\tname := ref.Name\n\t\t\tif existing, found := pods[name]; found {\n\t\t\t\tif !reflect.DeepEqual(existing.Manifest, ref.Manifest) {\n\t\t\t\t\t// this is an update"
  },
  {
    "id" : "acea6f01-0c94-4650-917c-dab5dadb26d5",
    "prId" : 356,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7f20a536-2440-4b7f-85e1-5f6513f2fee0",
        "parentId" : null,
        "authorId" : "55c0e4a8-86f8-4426-a163-752ee421c57e",
        "body" : "if we remove the pod from oldPods here, we do not need to check it again at lin186?\n",
        "createdAt" : "2014-07-18T18:17:40Z",
        "updatedAt" : "2014-07-22T01:29:51Z",
        "lastEditedBy" : "55c0e4a8-86f8-4426-a163-752ee421c57e",
        "tags" : [
        ]
      },
      {
        "id" : "501c13f7-a818-4f70-9942-185cbb1847b9",
        "parentId" : "7f20a536-2440-4b7f-85e1-5f6513f2fee0",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "We could - what's easier to understand for someone reading it?  Seems like the remove would need a comment because it's not obvious, but I'm open to changing it.\n",
        "createdAt" : "2014-07-18T20:13:50Z",
        "updatedAt" : "2014-07-22T01:29:51Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "2c466bc9-19dd-42e8-b6cd-b5e9e3455eaa",
        "parentId" : "7f20a536-2440-4b7f-85e1-5f6513f2fee0",
        "authorId" : "55c0e4a8-86f8-4426-a163-752ee421c57e",
        "body" : "i feel it is obvious to put it here.\nDelete is handled, Set is handled. \nWhy we need a check after all these have been handled?\n",
        "createdAt" : "2014-07-18T20:25:48Z",
        "updatedAt" : "2014-07-22T01:29:51Z",
        "lastEditedBy" : "55c0e4a8-86f8-4426-a163-752ee421c57e",
        "tags" : [
        ]
      },
      {
        "id" : "cb9f92f9-6b71-4ee2-95b5-6918538c6c69",
        "parentId" : "7f20a536-2440-4b7f-85e1-5f6513f2fee0",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "You have to check for things that weren't in the update that also need to be deleted.  So you always have to have the loop at the end.\n",
        "createdAt" : "2014-07-18T20:30:16Z",
        "updatedAt" : "2014-07-22T01:29:51Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "7767c2a2ace79f55d1f8e4cb75eb1e3bd48d2db9",
    "line" : 201,
    "diffHunk" : "@@ -1,1 +238,242 @@\t\t\t\t}\n\t\t\t\t// this is a no-op\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\tref.Namespace = source"
  },
  {
    "id" : "762ee0f9-8ea0-434f-91a3-1ae8d25f87e2",
    "prId" : 356,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "34461986-14cd-476b-80eb-c19a4c63e39b",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "comments\n",
        "createdAt" : "2014-07-19T20:48:15Z",
        "updatedAt" : "2014-07-22T01:29:51Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "7767c2a2ace79f55d1f8e4cb75eb1e3bd48d2db9",
    "line" : null,
    "diffHunk" : "@@ -1,1 +37,41 @@\n// ListenerFunc implements the PodConfigListener interface\ntype ListenerFunc func(update kubelet.PodUpdate)\n\nfunc (h ListenerFunc) OnUpdate(update kubelet.PodUpdate) {"
  },
  {
    "id" : "f2c5690d-05e0-404f-83bf-7026b7e570f8",
    "prId" : 356,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "250fb58b-c08c-419d-8e09-175f5932ea8a",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "comments\n",
        "createdAt" : "2014-07-19T20:48:21Z",
        "updatedAt" : "2014-07-22T01:29:51Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "7767c2a2ace79f55d1f8e4cb75eb1e3bd48d2db9",
    "line" : null,
    "diffHunk" : "@@ -1,1 +30,34 @@\n// PodConfigListener receives notifications for changes to a configuration.\ntype PodConfigListener interface {\n\t// OnUpdate is invoked when the kubelet.Pod configuration has been changed by one of\n\t// the sources. The update is properly normalized to remove duplicates."
  },
  {
    "id" : "743e85c2-1ee1-4f07-9ea3-40328ebf8075",
    "prId" : 356,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "60a5da9f-08f8-408f-9e50-1d48dbf34da0",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "\"via a state machine\"? Or I'm not sure what it means to merge configurations into a state machine.\n",
        "createdAt" : "2014-07-21T18:16:43Z",
        "updatedAt" : "2014-07-22T01:29:51Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "1da53f31-c49e-4fd6-81e2-9cbc4236665e",
        "parentId" : "60a5da9f-08f8-408f-9e50-1d48dbf34da0",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Apply updates to a state machine representing the current config?\n",
        "createdAt" : "2014-07-21T20:05:50Z",
        "updatedAt" : "2014-07-22T01:29:51Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "0a84fafd-5674-462f-a54c-e4e4d7809f91",
        "parentId" : "60a5da9f-08f8-408f-9e50-1d48dbf34da0",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "I'll just remove the reference to state machine.  \n",
        "createdAt" : "2014-07-21T20:06:30Z",
        "updatedAt" : "2014-07-22T01:29:51Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "7767c2a2ace79f55d1f8e4cb75eb1e3bd48d2db9",
    "line" : 59,
    "diffHunk" : "@@ -1,1 +57,61 @@)\n\n// PodConfig is a configuration mux that merges many sources of pod configuration into a single\n// consistent structure, and then delivers incremental change notifications to listeners\n// in order."
  },
  {
    "id" : "1dc17828-a6ea-41ad-8f09-16fbd26e7886",
    "prId" : 356,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "68433077-12ea-42c7-a7ec-6a39fa735f71",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "It seems like the `mode` ought to be a function of the listener, not of the storage, unless I misunderstand. Doesn't matter now if there's only one listener, of course. But perhaps a TODO would be good.\n",
        "createdAt" : "2014-07-21T18:23:39Z",
        "updatedAt" : "2014-07-22T01:29:51Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "0eadff6d-991d-4cbf-8c87-8df61d4d2a49",
        "parentId" : "68433077-12ea-42c7-a7ec-6a39fa735f71",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "I'll make a note.  To properly distribute to multiple listeners you'd want to ensure they don't block, which then raises the issue of some listeners taking longer than others (sync loop can take up to minutes to complete today) which would complicate the algorithm.\n",
        "createdAt" : "2014-07-21T20:12:12Z",
        "updatedAt" : "2014-07-22T01:29:51Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "431cee36-4b8c-4a5b-911a-7f14688e5000",
        "parentId" : "68433077-12ea-42c7-a7ec-6a39fa735f71",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Yeah, agreed, that makes it very complicated-- don't fix it in this PR :)\n",
        "createdAt" : "2014-07-21T20:20:24Z",
        "updatedAt" : "2014-07-22T01:29:51Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "7767c2a2ace79f55d1f8e4cb75eb1e3bd48d2db9",
    "line" : null,
    "diffHunk" : "@@ -1,1 +116,120 @@// in the future, especially with multiple listeners.\n// TODO: allow initialization of the current state of the store with snapshotted version.\nfunc newPodStorage(updates chan<- kubelet.PodUpdate, mode PodConfigNotificationMode) *podStorage {\n\treturn &podStorage{\n\t\tpods:    make(map[string]map[string]*kubelet.Pod),"
  },
  {
    "id" : "d2d156e1-1723-4d36-86af-04a7583be901",
    "prId" : 356,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4d1b3f6f-8484-4878-9ffb-0d4083fb73eb",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Don't you want to set s.pods[source] to the new map? This will create a new map every time?\n",
        "createdAt" : "2014-07-21T18:26:04Z",
        "updatedAt" : "2014-07-22T01:29:51Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "b659682a-1e23-4c4e-a858-b12554127329",
        "parentId" : "4d1b3f6f-8484-4878-9ffb-0d4083fb73eb",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "s.pods[source] = pods is set at the end because of the SET case.\n",
        "createdAt" : "2014-07-21T20:15:58Z",
        "updatedAt" : "2014-07-22T01:29:51Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "130976e6-f986-4528-a212-dd22d83863c4",
        "parentId" : "4d1b3f6f-8484-4878-9ffb-0d4083fb73eb",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "ah, SGTM.\n",
        "createdAt" : "2014-07-21T20:19:44Z",
        "updatedAt" : "2014-07-22T01:29:51Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "7767c2a2ace79f55d1f8e4cb75eb1e3bd48d2db9",
    "line" : null,
    "diffHunk" : "@@ -1,1 +176,180 @@\tpods := s.pods[source]\n\tif pods == nil {\n\t\tpods = make(map[string]*kubelet.Pod)\n\t}\n"
  },
  {
    "id" : "42dd1bf9-2843-419e-837a-a6c3b519ad2c",
    "prId" : 356,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5add2e16-1f32-48e5-bcbd-69e175fd8215",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "bug: ref is a pointer and a counter variable?\n",
        "createdAt" : "2014-07-21T18:30:32Z",
        "updatedAt" : "2014-07-22T01:29:51Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "ce8f55aa-7561-4c7f-b624-7cd8a357c148",
        "parentId" : "5add2e16-1f32-48e5-bcbd-69e175fd8215",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Actually, I think it's ok, nvm.\n",
        "createdAt" : "2014-07-21T18:33:34Z",
        "updatedAt" : "2014-07-22T01:29:51Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "7767c2a2ace79f55d1f8e4cb75eb1e3bd48d2db9",
    "line" : 205,
    "diffHunk" : "@@ -1,1 +203,207 @@\t\t\t// this is an add\n\t\t\tref.Namespace = source\n\t\t\tpods[name] = ref\n\t\t\tadds.Pods = append(adds.Pods, *ref)\n\t\t}"
  },
  {
    "id" : "fac6a569-b949-4eb1-90dd-ba3b58d208ab",
    "prId" : 356,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6ccffc41-ea07-43cc-8c5a-cc5d64f8b205",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "I'm pretty sure you need to clear errors here (or make it scoped inside the loop), or you'll reject all pods following an invalid one?\n",
        "createdAt" : "2014-07-21T18:38:48Z",
        "updatedAt" : "2014-07-22T01:29:51Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "7767c2a2ace79f55d1f8e4cb75eb1e3bd48d2db9",
    "line" : 276,
    "diffHunk" : "@@ -1,1 +274,278 @@\t\t}\n\t\tif len(errors) > 0 {\n\t\t\tglog.Warningf(\"Pod %d from %s failed validation, ignoring: %v\", i+1, source, errors)\n\t\t\tcontinue\n\t\t}"
  }
]