[
  {
    "id" : "31d5ad55-86a3-4626-822d-0c169b6fc277",
    "prId" : 4271,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a181ac05-dbf9-4f3e-8f51-d4b2612ad93b",
        "parentId" : null,
        "authorId" : "e7e1d709-e9c3-47a5-91f2-ed86958679e2",
        "body" : "Might a more specific error message be appropriate / more helpful here? Does this mean it can't talk to etcd at all?\n",
        "createdAt" : "2015-02-10T04:10:19Z",
        "updatedAt" : "2015-02-10T20:10:14Z",
        "lastEditedBy" : "e7e1d709-e9c3-47a5-91f2-ed86958679e2",
        "tags" : [
        ]
      },
      {
        "id" : "9d502969-fa58-4d70-a5b6-f5d8ec2af797",
        "parentId" : "a181ac05-dbf9-4f3e-8f51-d4b2612ad93b",
        "authorId" : "0970b119-085d-41b4-8f33-e10409965eba",
        "body" : "It means that the key is not present in etcd.\nSince this is not really an error, we are reducing the verbosity to Info instead of it being Error.\n",
        "createdAt" : "2015-02-10T19:23:05Z",
        "updatedAt" : "2015-02-10T20:10:14Z",
        "lastEditedBy" : "0970b119-085d-41b4-8f33-e10409965eba",
        "tags" : [
        ]
      },
      {
        "id" : "954dfe79-4cb3-4f36-9a98-23bc71f71a67",
        "parentId" : "a181ac05-dbf9-4f3e-8f51-d4b2612ad93b",
        "authorId" : "e7e1d709-e9c3-47a5-91f2-ed86958679e2",
        "body" : "May be overkill, but I would pull out into a msg:\n\n``` go\nmsg := fmt.Sprintf(\"etcd failed to retrieve the value for the key %q. Error: %v\", s.key, err)\nif tools.IsEtcdNotFound(err) {\n  glog.V(4).Infof(msg)\n  return\n}\nglog.Errorf(msg)\nreturn\n```\n\nThen again, I'm unsure if minute refactoring like this is used or frowned upon for this codebase. \n",
        "createdAt" : "2015-02-10T19:48:32Z",
        "updatedAt" : "2015-02-10T20:10:14Z",
        "lastEditedBy" : "e7e1d709-e9c3-47a5-91f2-ed86958679e2",
        "tags" : [
        ]
      }
    ],
    "commit" : "febf8c9b2caee511bac0dac17d3996046380450f",
    "line" : null,
    "diffHunk" : "@@ -1,1 +63,67 @@\tif err != nil {\n\t\tif tools.IsEtcdNotFound(err) {\n\t\t\tglog.V(4).Infof(\"etcd failed to retrieve the value for the key %q. Error: %v\", s.key, err)\n\t\t\treturn\n\t\t}"
  },
  {
    "id" : "010855ec-1965-4126-a3e5-263750f9a822",
    "prId" : 943,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ab9b49b7-4320-44c0-b72c-c3710438b4e5",
        "parentId" : null,
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "document this behavior in the comment?\n",
        "createdAt" : "2014-08-20T21:25:05Z",
        "updatedAt" : "2014-08-20T22:46:42Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "baaabcaf112f5e5771334b97a8c551554f6ec22b",
    "line" : null,
    "diffHunk" : "@@ -1,1 +131,135 @@func stopChannel(until time.Duration) chan bool {\n\tstop := make(chan bool)\n\tif until == 0 {\n\t\treturn stop\n\t}"
  },
  {
    "id" : "7d310ac8-1303-4ce2-bf70-ee1462bfecf4",
    "prId" : 356,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bed2ea31-a8f8-4cad-b760-9ca2f5ab4032",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "There's something tricky going on here - putting the before the forever loop - but I can't quite divine why.  Comment?\n",
        "createdAt" : "2014-07-20T04:21:59Z",
        "updatedAt" : "2014-07-22T01:29:51Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "cef5fc75-c903-4a15-8181-c7d8621d2716",
        "parentId" : "bed2ea31-a8f8-4cad-b760-9ca2f5ab4032",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Yeah - index is state for the loop since we want to watch on an index to not miss updates.  Will add comment.\n",
        "createdAt" : "2014-07-20T13:46:02Z",
        "updatedAt" : "2014-07-22T01:29:51Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "7767c2a2ace79f55d1f8e4cb75eb1e3bd48d2db9",
    "line" : null,
    "diffHunk" : "@@ -1,1 +61,65 @@// run loops forever looking for changes to a key in etcd\nfunc (s *SourceEtcd) run() {\n\tindex := uint64(0)\n\tfor {\n\t\tlastIndex, err := s.fetchNextState(index)"
  },
  {
    "id" : "9f2d98cb-b6a1-46fb-9acd-f02f2f1bc196",
    "prId" : 356,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8833520f-579a-4d48-a4c2-b5e440e0a2b8",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Why start and stop periodically as opposed to just letting the watch go on indefinitely?\n",
        "createdAt" : "2014-07-21T19:42:19Z",
        "updatedAt" : "2014-07-22T01:29:51Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "7a0cfb42-7a72-4843-9ee9-7f43115bc98b",
        "parentId" : "8833520f-579a-4d48-a4c2-b5e440e0a2b8",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Carried over from existing code.  Also, I _think_ it defends against a hung etcd listener or a TCP stream without a ReadDeadline set.  Can remove or leave, don't care either way.\n",
        "createdAt" : "2014-07-21T20:29:20Z",
        "updatedAt" : "2014-07-22T01:29:51Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "7767c2a2ace79f55d1f8e4cb75eb1e3bd48d2db9",
    "line" : null,
    "diffHunk" : "@@ -1,1 +75,79 @@\n// fetchNextState fetches the key (or waits for a change to a key) and then returns\n// the index read.  It will watch no longer than s.waitDuration and then return\nfunc (s *SourceEtcd) fetchNextState(fromIndex uint64) (lastIndex uint64, err error) {\n\tvar response *etcd.Response"
  },
  {
    "id" : "d98ba5b4-eddb-4f06-a582-1d95c3292f9e",
    "prId" : 356,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fab281dc-fb7f-41c5-84ca-3d0b8bde34e9",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "I don't think there's actually a need to close the channel, not that it matters (despite the name, close doesn't actually do any cleanup or anything).\n",
        "createdAt" : "2014-07-21T19:45:19Z",
        "updatedAt" : "2014-07-22T01:29:51Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "d233e65a-b5cd-4149-b36c-3a1a430fd06d",
        "parentId" : "fab281dc-fb7f-41c5-84ca-3d0b8bde34e9",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Defends against someone using the channel code someplace else which isn't dependent on the peculiarities of etcd I guess.\n",
        "createdAt" : "2014-07-21T20:30:47Z",
        "updatedAt" : "2014-07-22T01:29:51Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "7767c2a2ace79f55d1f8e4cb75eb1e3bd48d2db9",
    "line" : 136,
    "diffHunk" : "@@ -1,1 +134,138 @@\t\t}\n\t\tstop <- true\n\t\tclose(stop)\n\t}()\n\treturn stop"
  },
  {
    "id" : "e4cf9a10-6394-4dd4-8d01-e3fbbcb32022",
    "prId" : 356,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c938bae4-955b-46eb-a2ba-d1c15a7a927c",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Does this need to be public?\n",
        "createdAt" : "2014-07-21T19:47:41Z",
        "updatedAt" : "2014-07-22T01:29:51Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "5d6cab40-8c54-4135-be21-ea9d88a0f758",
        "parentId" : "c938bae4-955b-46eb-a2ba-d1c15a7a927c",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Yes, it's the simple abstraction for both cmd/kubelet/kubelet.go and cmd/integration/integration.go\n",
        "createdAt" : "2014-07-21T20:32:23Z",
        "updatedAt" : "2014-07-22T01:29:51Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "7767c2a2ace79f55d1f8e4cb75eb1e3bd48d2db9",
    "line" : null,
    "diffHunk" : "@@ -1,1 +32,36 @@)\n\nfunc EtcdKeyForHost(hostname string) string {\n\treturn path.Join(\"/\", \"registry\", \"hosts\", hostname, \"kubelet\")\n}"
  }
]