[
  {
    "id" : "d12e8918-7c9c-4ee4-be74-50089b05b878",
    "prId" : 54316,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/54316#pullrequestreview-76653111",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a47ea9a9-a966-4462-baba-85a3e323d811",
        "parentId" : null,
        "authorId" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "body" : "What's this empty string in the resource list for?",
        "createdAt" : "2017-11-15T01:32:18Z",
        "updatedAt" : "2017-11-21T18:21:44Z",
        "lastEditedBy" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "tags" : [
        ]
      },
      {
        "id" : "eb18c73a-f8df-4f03-99fa-39f033e0b49d",
        "parentId" : "a47ea9a9-a966-4462-baba-85a3e323d811",
        "authorId" : "d2b16581-e7e9-48b8-9f76-6f6bcb9ec300",
        "body" : "disk requests",
        "createdAt" : "2017-11-15T01:33:49Z",
        "updatedAt" : "2017-11-21T18:21:44Z",
        "lastEditedBy" : "d2b16581-e7e9-48b8-9f76-6f6bcb9ec300",
        "tags" : [
        ]
      }
    ],
    "commit" : "8b3bd5ae6033ffa7ff6b81b534031a6710bb8557",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +190,194 @@\tsummaryStatsMaker := makeMemoryStats\n\tpodsToMake := []podToMake{\n\t\t{name: \"guaranteed-low-priority-high-usage\", priority: lowPriority, requests: newResourceList(\"100m\", \"1Gi\", \"\"), limits: newResourceList(\"100m\", \"1Gi\", \"\"), memoryWorkingSet: \"900Mi\"},\n\t\t{name: \"burstable-below-requests\", priority: defaultPriority, requests: newResourceList(\"100m\", \"100Mi\", \"\"), limits: newResourceList(\"200m\", \"1Gi\", \"\"), memoryWorkingSet: \"50Mi\"},\n\t\t{name: \"burstable-above-requests\", priority: defaultPriority, requests: newResourceList(\"100m\", \"100Mi\", \"\"), limits: newResourceList(\"200m\", \"1Gi\", \"\"), memoryWorkingSet: \"400Mi\"},"
  },
  {
    "id" : "0c9fdd88-9e71-4467-9aa7-4c68b6c31829",
    "prId" : 42204,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/42204#pullrequestreview-24641389",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "063594ab-6926-4e3f-a28b-046ad09d8fa4",
        "parentId" : null,
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "nit: I'd name it a fake. with mocks u get to control function invocations",
        "createdAt" : "2017-03-02T02:28:41Z",
        "updatedAt" : "2017-03-02T15:36:53Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      }
    ],
    "commit" : "ac612eab8ec9fb466f135a3501079657e1aa2350",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +60,64 @@}\n\nfunc newMockNodeProvider(allocatableCapacity v1.ResourceList) *mockNodeProvider {\n\treturn &mockNodeProvider{\n\t\tnode: v1.Node{"
  },
  {
    "id" : "38242be9-5f83-45e6-8276-e6bb84a7bfc8",
    "prId" : 38836,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/38836#pullrequestreview-13255900",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3e56abaa-6f8b-4d3d-b753-55c39dec8b9e",
        "parentId" : null,
        "authorId" : "a6409368-42e0-44a9-bf79-9d3042ac3b65",
        "body" : "Can you enhance the unittest here to make sure we really test what you want here?\r\n1) all three different pods are admitted: BestEffort, Burstable, and CriticalBestEffort: introduced by your pr\r\n2) then the node has memory pressure, BestEffort should be evicted: covered by the existing test case.\r\n3) Still memory pressure on the node, Burstable should be evicted: this is the new scenario we should cover here\r\n4) memory pressure is gone, everything back to normal: covered by the existing test. ",
        "createdAt" : "2016-12-16T01:13:36Z",
        "updatedAt" : "2016-12-16T03:01:28Z",
        "lastEditedBy" : "a6409368-42e0-44a9-bf79-9d3042ac3b65",
        "tags" : [
        ]
      }
    ],
    "commit" : "b7409e00380b349ec971d089363ad7ff22b37c76",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +224,228 @@\n\t// try to admit our pods (they should succeed)\n\texpected := []bool{true, true, true}\n\tfor i, pod := range []*v1.Pod{bestEffortPodToAdmit, burstablePodToAdmit, criticalBestEffortPodToAdmit} {\n\t\tif result := manager.Admit(&lifecycle.PodAdmitAttributes{Pod: pod}); expected[i] != result.Admit {"
  },
  {
    "id" : "dcf69f0c-b433-4452-9d55-0abe2cccbbcb",
    "prId" : 34818,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/34818#pullrequestreview-4614264",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bb8f44bf-5458-40de-9979-7b39f78e7b51",
        "parentId" : null,
        "authorId" : "8b309230-89cb-4a04-bf89-29a323dad0d8",
        "body" : "Here and elsewhere, why not just call `makePodWithMemoryStats` below instead of creating this alias?\n",
        "createdAt" : "2016-10-17T16:13:51Z",
        "updatedAt" : "2016-11-02T09:32:26Z",
        "lastEditedBy" : "8b309230-89cb-4a04-bf89-29a323dad0d8",
        "tags" : [
        ]
      },
      {
        "id" : "2048824f-723c-4a28-bf37-64a1f5b27bfb",
        "parentId" : "bb8f44bf-5458-40de-9979-7b39f78e7b51",
        "authorId" : "f1b8dbef-1f61-40c9-a116-2e7319f9c36f",
        "body" : "It would make sense, but most of the tests in this file start with defining podMaker and summaryStatsMaker, I didn't want to break this convention. Thanks for the review!\n",
        "createdAt" : "2016-10-18T07:34:05Z",
        "updatedAt" : "2016-11-02T09:32:26Z",
        "lastEditedBy" : "f1b8dbef-1f61-40c9-a116-2e7319f9c36f",
        "tags" : [
        ]
      }
    ],
    "commit" : "3b5064740ed8bdb276dfec87009915e8a33c194d",
    "line" : 111,
    "diffHunk" : "@@ -1,1 +146,150 @@// TestMemoryPressure\nfunc TestMemoryPressure(t *testing.T) {\n\tpodMaker := makePodWithMemoryStats\n\tsummaryStatsMaker := makeMemoryStats\n\tpodsToMake := []podToMake{"
  },
  {
    "id" : "52c76ad5-61f7-4188-82cf-d22c5226144a",
    "prId" : 27199,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "70e629cc-23bf-4c45-afa5-afde7169f4b6",
        "parentId" : null,
        "authorId" : "4a6c4c9f-42c7-4b89-b4ff-53e56b69cd54",
        "body" : "Please also add a test for disk pressure.\n",
        "createdAt" : "2016-07-19T05:28:57Z",
        "updatedAt" : "2016-07-28T20:20:20Z",
        "lastEditedBy" : "4a6c4c9f-42c7-4b89-b4ff-53e56b69cd54",
        "tags" : [
        ]
      },
      {
        "id" : "4ec4b83d-3f10-45e2-b023-0f166ce94782",
        "parentId" : "70e629cc-23bf-4c45-afa5-afde7169f4b6",
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "will do.\n",
        "createdAt" : "2016-07-20T19:23:39Z",
        "updatedAt" : "2016-07-28T20:20:20Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      }
    ],
    "commit" : "d37710f87b7a2497d918d8c5e51323e352dcce98",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +57,61 @@// TestMemoryPressure\nfunc TestMemoryPressure(t *testing.T) {\n\tpodMaker := func(name string, requests api.ResourceList, limits api.ResourceList, memoryWorkingSet string) (*api.Pod, statsapi.PodStats) {\n\t\tpod := newPod(name, []api.Container{\n\t\t\tnewContainer(name, requests, limits),"
  }
]