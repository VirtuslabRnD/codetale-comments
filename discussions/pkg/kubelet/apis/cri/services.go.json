[
  {
    "id" : "0cef3999-d7a0-413e-8fe0-b88cf935dbbc",
    "prId" : 46105,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/46105#pullrequestreview-53045636",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2a2d5a2c-9c77-4bcc-a8bc-c2a5bcc0d300",
        "parentId" : null,
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "> UpdateContainerResources updates the cgroup resources for the container.\r\n\r\nSo only cgroup resources are targeted here? ",
        "createdAt" : "2017-07-28T14:19:14Z",
        "updatedAt" : "2017-08-01T01:48:08Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      },
      {
        "id" : "34e7885a-e58a-4629-9f9e-53aecd2edcbe",
        "parentId" : "2a2d5a2c-9c77-4bcc-a8bc-c2a5bcc0d300",
        "authorId" : "8e9f49fc-1050-4601-b81c-83bf660c5eb8",
        "body" : "yes, since those are the resources supported in the docker engine API.  The supported resources are here https://github.com/kubernetes/kubernetes/pull/46105/files#diff-c7dd39479fd733354254e70845075db5R408",
        "createdAt" : "2017-07-28T15:03:57Z",
        "updatedAt" : "2017-08-01T01:48:08Z",
        "lastEditedBy" : "8e9f49fc-1050-4601-b81c-83bf660c5eb8",
        "tags" : [
        ]
      },
      {
        "id" : "c4403301-c902-4ea0-b416-75395aeb4c13",
        "parentId" : "2a2d5a2c-9c77-4bcc-a8bc-c2a5bcc0d300",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "@sjenning ok, thanks. It's better to keep the comments same between ContainerManager Interface and CRI. ",
        "createdAt" : "2017-07-28T21:39:20Z",
        "updatedAt" : "2017-08-01T01:48:08Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      }
    ],
    "commit" : "9fbf8f57ddff6507f5819cbc6715d12bec0fc45a",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +44,48 @@\t// ContainerStatus returns the status of the container.\n\tContainerStatus(containerID string) (*runtimeapi.ContainerStatus, error)\n\t// UpdateContainerResources updates the cgroup resources for the container.\n\tUpdateContainerResources(containerID string, resources *runtimeapi.LinuxContainerResources) error\n\t// ExecSync executes a command in the container, and returns the stdout output."
  },
  {
    "id" : "329f6d62-8bed-4f57-9cf7-eaad8cc494b9",
    "prId" : 46105,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/46105#pullrequestreview-55930606",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f14c648c-76da-402c-975b-5e69f49852ff",
        "parentId" : null,
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "Why have an Update method just for Resources? Why not name it UpdateContainer and have a whitelist of fields that can be updated?",
        "createdAt" : "2017-08-10T19:53:20Z",
        "updatedAt" : "2017-08-10T19:53:20Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      },
      {
        "id" : "e674aadd-442e-4334-9f07-a03dbd9257fe",
        "parentId" : "f14c648c-76da-402c-975b-5e69f49852ff",
        "authorId" : "8e9f49fc-1050-4601-b81c-83bf660c5eb8",
        "body" : "`LinuxContainerResources` are really the only API object that makes sense here.  The function name mirrors that resource.  What else about the container would you want to be able to change while the container was running?  Knowing that the runtime would need to support any such update as well.",
        "createdAt" : "2017-08-10T20:06:21Z",
        "updatedAt" : "2017-08-10T20:06:21Z",
        "lastEditedBy" : "8e9f49fc-1050-4601-b81c-83bf660c5eb8",
        "tags" : [
        ]
      },
      {
        "id" : "0002e2f6-d1ac-4f87-928a-1e6a9ea273cb",
        "parentId" : "f14c648c-76da-402c-975b-5e69f49852ff",
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "If in the future we end up updating any other properties of containers, we will have to introduce a new top level API. I was wondering if we can make this API generic and control what features can be updated via input options.",
        "createdAt" : "2017-08-11T23:23:19Z",
        "updatedAt" : "2017-08-11T23:23:19Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      },
      {
        "id" : "b9336849-db97-4ef5-821f-cb9c73a32727",
        "parentId" : "f14c648c-76da-402c-975b-5e69f49852ff",
        "authorId" : "8b309230-89cb-4a04-bf89-29a323dad0d8",
        "body" : "Another option is to mirror the protobuf message and define a new struct like ContainerUpdate which for now has only a LinuxContainerResources member. Or just reuse the generated protobuf type.\r\n\r\nNote: this merged already.",
        "createdAt" : "2017-08-12T00:32:53Z",
        "updatedAt" : "2017-08-12T00:32:53Z",
        "lastEditedBy" : "8b309230-89cb-4a04-bf89-29a323dad0d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "9fbf8f57ddff6507f5819cbc6715d12bec0fc45a",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +45,49 @@\tContainerStatus(containerID string) (*runtimeapi.ContainerStatus, error)\n\t// UpdateContainerResources updates the cgroup resources for the container.\n\tUpdateContainerResources(containerID string, resources *runtimeapi.LinuxContainerResources) error\n\t// ExecSync executes a command in the container, and returns the stdout output.\n\t// If command exits with a non-zero exit code, an error is returned."
  }
]