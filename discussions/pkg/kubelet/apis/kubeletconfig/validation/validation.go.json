[
  {
    "id" : "be521a76-77c3-4fd3-ad13-3340e2315f99",
    "prId" : 65523,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/65523#pullrequestreview-132327442",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e4d5a2f5-45f8-4c18-97a0-7d4c49db2334",
        "parentId" : null,
        "authorId" : "fa530650-5886-4415-a42f-0dee2e0e9ae3",
        "body" : ":+1: ",
        "createdAt" : "2018-06-27T08:18:38Z",
        "updatedAt" : "2018-06-27T08:18:39Z",
        "lastEditedBy" : "fa530650-5886-4415-a42f-0dee2e0e9ae3",
        "tags" : [
        ]
      }
    ],
    "commit" : "d5513c6d140deece2837fecf2af33faf4ae06e04",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +111,115 @@\t\tdefault:\n\t\t\tallErrors = append(allErrors, fmt.Errorf(\"invalid configuration: option %q specified for EnforceNodeAllocatable (--enforce-node-allocatable). Valid options are %q, %q, %q, or %q\",\n\t\t\t\tval, kubetypes.NodeAllocatableEnforcementKey, kubetypes.SystemReservedEnforcementKey, kubetypes.KubeReservedEnforcementKey, kubetypes.NodeAllocatableNoneKey))\n\t\t}\n\t}"
  },
  {
    "id" : "f5d85245-b3f7-4458-b50d-1e21d4528044",
    "prId" : 63409,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/63409#pullrequestreview-121506057",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e2366c46-6028-4df7-92f2-84648df25674",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "~~why are we starting with a copy of the global gates? wouldn't kc.FeatureGates be the merged args+config at this point?~~\r\n\r\nedit: hmm, because we don't want to overwrite the global here, and don't have a good way to construct a new default one from scratch",
        "createdAt" : "2018-05-18T16:47:29Z",
        "updatedAt" : "2018-05-20T20:16:27Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "3ded7edf-f586-4acd-9a50-d4b272657a0b",
        "parentId" : "e2366c46-6028-4df7-92f2-84648df25674",
        "authorId" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "body" : "yup, exactly",
        "createdAt" : "2018-05-18T17:27:32Z",
        "updatedAt" : "2018-05-20T20:16:27Z",
        "lastEditedBy" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "tags" : [
        ]
      }
    ],
    "commit" : "647e90341ca08640ab8fb3d49edb8027faf4836f",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +34,38 @@\t// Make a local copy of the global feature gates and combine it with the gates set by this configuration.\n\t// This allows us to validate the config against the set of gates it will actually run against.\n\tlocalFeatureGate := utilfeature.DefaultFeatureGate.DeepCopy()\n\tlocalFeatureGate.SetFromMap(kc.FeatureGates)\n"
  },
  {
    "id" : "486af963-42e3-4a02-ae09-db6782adc1d0",
    "prId" : 62352,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/62352#pullrequestreview-112488030",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "212da7f3-3ab1-42b0-9396-bffcff7ca38b",
        "parentId" : null,
        "authorId" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "body" : "Is it acceptable to fail validation based on feature enablement? It makes the rollback procedure more complex.",
        "createdAt" : "2018-04-13T19:20:33Z",
        "updatedAt" : "2018-04-16T16:20:32Z",
        "lastEditedBy" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "tags" : [
        ]
      },
      {
        "id" : "66809e22-7340-4c60-b938-400051355e98",
        "parentId" : "212da7f3-3ab1-42b0-9396-bffcff7ca38b",
        "authorId" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "body" : "Yes. This is how we prevent people from configuring features that are turned off. Not clear how this complicates rollback?",
        "createdAt" : "2018-04-13T23:27:27Z",
        "updatedAt" : "2018-04-16T16:20:32Z",
        "lastEditedBy" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "tags" : [
        ]
      },
      {
        "id" : "00118cb5-9af1-48f8-9a78-5e239e10c48f",
        "parentId" : "212da7f3-3ab1-42b0-9396-bffcff7ca38b",
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "We do this elsewhere. I'm ok with either pattern as long as we are consistent.",
        "createdAt" : "2018-04-16T16:19:28Z",
        "updatedAt" : "2018-04-16T16:20:32Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      }
    ],
    "commit" : "54f5f6752aa198e50e1e7ad6f1381be1f571f327",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +89,93 @@\t\tallErrors = append(allErrors, fmt.Errorf(\"invalid configuration: RegistryPullQPS (--registry-qps) %v must not be a negative number\", kc.RegistryPullQPS))\n\t}\n\tif kc.ServerTLSBootstrap && !utilfeature.DefaultFeatureGate.Enabled(features.RotateKubeletServerCertificate) {\n\t\tallErrors = append(allErrors, fmt.Errorf(\"invalid configuration: ServerTLSBootstrap %v requires feature gate RotateKubeletServerCertificate\", kc.ServerTLSBootstrap))\n\t}"
  }
]