[
  {
    "id" : "c632e9b5-9f1d-4398-a361-c49d3d1e3f55",
    "prId" : 102823,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/102823#pullrequestreview-694433088",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "988d66d2-7101-4fe4-80bc-192252035555",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "if the feature gate is not enabled, should trying to set config fields for the feature produce a validation error?",
        "createdAt" : "2021-06-28T21:14:28Z",
        "updatedAt" : "2021-06-28T21:16:04Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "6365673e-965c-4b07-b590-5cd798386a92",
        "parentId" : "988d66d2-7101-4fe4-80bc-192252035555",
        "authorId" : "31a2ac00-6c67-4307-a4bc-bfd13f41ef27",
        "body" : "I'm not sure of the API convention here, should it?",
        "createdAt" : "2021-06-28T21:33:06Z",
        "updatedAt" : "2021-06-28T21:33:06Z",
        "lastEditedBy" : "31a2ac00-6c67-4307-a4bc-bfd13f41ef27",
        "tags" : [
        ]
      },
      {
        "id" : "a714a035-e928-49bf-8a05-4fc52453a132",
        "parentId" : "988d66d2-7101-4fe4-80bc-192252035555",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "for config, we try to fail fast/loudly when someone passes flags or configuration that is ineffective or doesn't make sense",
        "createdAt" : "2021-06-28T21:40:51Z",
        "updatedAt" : "2021-06-28T21:40:51Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "7e9f711b-0343-4675-a5b9-b9c5ec3d4fcf",
        "parentId" : "988d66d2-7101-4fe4-80bc-192252035555",
        "authorId" : "31a2ac00-6c67-4307-a4bc-bfd13f41ef27",
        "body" : "I see CPU Manager doing this as well, will add validation.",
        "createdAt" : "2021-06-28T21:57:42Z",
        "updatedAt" : "2021-06-28T21:57:42Z",
        "lastEditedBy" : "31a2ac00-6c67-4307-a4bc-bfd13f41ef27",
        "tags" : [
        ]
      },
      {
        "id" : "4688d7fd-5be4-4073-8366-e44fdfef7cd9",
        "parentId" : "988d66d2-7101-4fe4-80bc-192252035555",
        "authorId" : "31a2ac00-6c67-4307-a4bc-bfd13f41ef27",
        "body" : "e8afdbfceb23398fccf8665535b133ddd118f87d",
        "createdAt" : "2021-06-28T22:08:10Z",
        "updatedAt" : "2021-06-28T22:08:10Z",
        "lastEditedBy" : "31a2ac00-6c67-4307-a4bc-bfd13f41ef27",
        "tags" : [
        ]
      }
    ],
    "commit" : "558472560582a48826a118b1795fc072957412b5",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +160,164 @@\t\t\tallErrors = append(allErrors, fmt.Errorf(\"invalid configuration: MemorySwap.SwapBehavior %v must be one of: LimitedSwap, UnlimitedSwap\", kc.MemorySwap.SwapBehavior))\n\t\t}\n\t}\n\tif !localFeatureGate.Enabled(features.NodeSwapEnabled) && kc.MemorySwap != (kubeletconfig.MemorySwapConfiguration{}) {\n\t\tallErrors = append(allErrors, fmt.Errorf(\"invalid configuration: MemorySwap.SwapBehavior cannot be set when NodeSwapEnabled feature flag is disabled\"))"
  },
  {
    "id" : "0e735d20-4d74-47dd-9fca-032992b0b53f",
    "prId" : 92967,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/92967#pullrequestreview-524329595",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2d8a93da-4f14-4a39-b730-e49d267f611e",
        "parentId" : null,
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "shouldn't we have validation that checks for allowable values?\r\n\r\nit appears this PR only throws an error at runtime if there is an unsupported value.",
        "createdAt" : "2020-11-02T17:56:02Z",
        "updatedAt" : "2020-11-12T11:26:46Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      },
      {
        "id" : "28a0a9c0-8cb4-4d79-859e-c57332de7d0b",
        "parentId" : "2d8a93da-4f14-4a39-b730-e49d267f611e",
        "authorId" : "a1d73c29-275d-437e-b673-7957d6a4d943",
        "body" : "We have two points of validation. I will describe them below:\r\n\r\n**1) Passing the _--topology-manager-scope_ flag while _--feature-gates=\"TopologyManager=false\"_ is specified**\r\n---\r\nThere are two defined values for scopes:\r\n- `kubeletconfig.ContainerTopologyManagerScope`  <---- default, will be set if flag `--topology-manager-scope` is not specified\r\n- `kubeletconfig.PodTopologyManagerScope`\r\n\r\nAnd this is the check: https://github.com/kubernetes/kubernetes/blob/3aea58766267aaa9440014c7721f56f8446d9f53/pkg/kubelet/apis/config/validation/validation.go#L128-L130\r\n\r\nAnd basically, there are three scenarios:\r\n1) scope flag not specified + `--feature-gates=\"TopologyManage=false\"` = no error\r\n2) `--topology-manager-scope=container` + `--feature-gates=\"TopologyManage=false\"` = no error, because we can't differentiate 1) and 2) here, because of default value \r\n3) `--topology-manager-scope=pod/anything` + `--feature-gates=\"TopologyManage=false\"` = error\r\n\r\n\r\n**2) Validate for supported and unsupported values**\r\n---\r\n\"allowable values\" are already validated in the following code (the same is with Topology Manager policies): https://github.com/kubernetes/kubernetes/blob/9022b352ac460ba3280ba135fc5cebd7ac9382a8/pkg/kubelet/cm/topologymanager/topology_manager.go#L150-L161",
        "createdAt" : "2020-11-03T12:48:24Z",
        "updatedAt" : "2020-11-12T11:26:46Z",
        "lastEditedBy" : "a1d73c29-275d-437e-b673-7957d6a4d943",
        "tags" : [
        ]
      },
      {
        "id" : "f4a36e0b-3123-4a77-b11e-eaa62f90d896",
        "parentId" : "2d8a93da-4f14-4a39-b730-e49d267f611e",
        "authorId" : "a1d73c29-275d-437e-b673-7957d6a4d943",
        "body" : "@derekwaynecarr \r\n> shouldn't we have validation that checks for allowable values?\r\n\r\nIs this question for something different than I described above?",
        "createdAt" : "2020-11-03T12:50:34Z",
        "updatedAt" : "2020-11-12T11:26:46Z",
        "lastEditedBy" : "a1d73c29-275d-437e-b673-7957d6a4d943",
        "tags" : [
        ]
      },
      {
        "id" : "c5531289-848d-4fdd-8efc-e42afd94f815",
        "parentId" : "2d8a93da-4f14-4a39-b730-e49d267f611e",
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "my comment was that in case number 3 you outlined, it seemed a better experience for the user to validate that the topology-manager-scope was a valid value when we validate the config so the error can be tied to the field in question rather than what this PR appears to do which is validate the policy token later at runtime which means the error is not tied back to the command line flag that was misconfigured.",
        "createdAt" : "2020-11-03T17:51:27Z",
        "updatedAt" : "2020-11-12T11:26:46Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      },
      {
        "id" : "8159e7da-a66a-4e53-b8be-2ca77599b41f",
        "parentId" : "2d8a93da-4f14-4a39-b730-e49d267f611e",
        "authorId" : "a1d73c29-275d-437e-b673-7957d6a4d943",
        "body" : "sure, I understand now. I pushed two commits, one for scope validation and one for policy validation, to be consistent. ",
        "createdAt" : "2020-11-04T14:06:33Z",
        "updatedAt" : "2020-11-12T11:26:46Z",
        "lastEditedBy" : "a1d73c29-275d-437e-b673-7957d6a4d943",
        "tags" : [
        ]
      },
      {
        "id" : "5e97ae04-fb70-4118-974f-014ca3978097",
        "parentId" : "2d8a93da-4f14-4a39-b730-e49d267f611e",
        "authorId" : "a1d73c29-275d-437e-b673-7957d6a4d943",
        "body" : "@derekwaynecarr, you can see checks below:\r\nhttps://github.com/kubernetes/kubernetes/blob/65933f04447f30aab47a4ae18938fc96a5b3bc7f/pkg/kubelet/apis/config/validation/validation.go#L125-L141",
        "createdAt" : "2020-11-05T14:42:31Z",
        "updatedAt" : "2020-11-12T11:26:46Z",
        "lastEditedBy" : "a1d73c29-275d-437e-b673-7957d6a4d943",
        "tags" : [
        ]
      }
    ],
    "commit" : "b7714918db923523d98e6dd834f53b57a407acd0",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +134,138 @@\t\tallErrors = append(allErrors, fmt.Errorf(\"invalid configuration: topologyManagerPolicy non-allowable value: %v\", kc.TopologyManagerPolicy))\n\t}\n\tif kc.TopologyManagerScope != kubeletconfig.ContainerTopologyManagerScope && !localFeatureGate.Enabled(features.TopologyManager) {\n\t\tallErrors = append(allErrors, fmt.Errorf(\"invalid configuration: topologyManagerScope %v requires feature gate TopologyManager\", kc.TopologyManagerScope))\n\t}"
  },
  {
    "id" : "b4024219-fa47-4bd0-bcca-388d7c0b38b7",
    "prId" : 83592,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/83592#pullrequestreview-310441207",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "502619a9-ff28-4c8e-a214-c1f449fde393",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "does this parse not catch the invalid characters checked for above?",
        "createdAt" : "2019-10-30T14:32:18Z",
        "updatedAt" : "2019-11-06T12:37:36Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "13417678-1e07-4af5-9483-e2e4e0ee276c",
        "parentId" : "502619a9-ff28-4c8e-a214-c1f449fde393",
        "authorId" : "ee2e11d3-eec2-40c5-837f-b7bd6985d0e9",
        "body" : "> does this parse not catch the invalid characters checked for above?\r\n\r\nthis might be extra to prevent something like 2-1.",
        "createdAt" : "2019-10-30T15:20:43Z",
        "updatedAt" : "2019-11-06T12:37:36Z",
        "lastEditedBy" : "ee2e11d3-eec2-40c5-837f-b7bd6985d0e9",
        "tags" : [
        ]
      },
      {
        "id" : "183db578-70fc-48ee-906d-f26be4210ba6",
        "parentId" : "502619a9-ff28-4c8e-a214-c1f449fde393",
        "authorId" : "ee2e11d3-eec2-40c5-837f-b7bd6985d0e9",
        "body" : "yeah so this check is extra as similar check exists in server.go:652. will take this check off. thanks",
        "createdAt" : "2019-10-30T15:29:05Z",
        "updatedAt" : "2019-11-06T12:37:36Z",
        "lastEditedBy" : "ee2e11d3-eec2-40c5-837f-b7bd6985d0e9",
        "tags" : [
        ]
      },
      {
        "id" : "d7a7a642-ea4c-4ead-b916-ca96cf03731f",
        "parentId" : "502619a9-ff28-4c8e-a214-c1f449fde393",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "I think the parse in validation is good, I was expecting it to catch everything the regex check above would have caught, so we could remove the regex check",
        "createdAt" : "2019-10-30T15:31:35Z",
        "updatedAt" : "2019-11-06T12:37:36Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "46d6b399-4cb5-4f19-9354-5b985be21dc1",
        "parentId" : "502619a9-ff28-4c8e-a214-c1f449fde393",
        "authorId" : "ee2e11d3-eec2-40c5-837f-b7bd6985d0e9",
        "body" : "consolidated the validation into one place. pls check again. ",
        "createdAt" : "2019-10-30T20:23:54Z",
        "updatedAt" : "2019-11-06T12:37:36Z",
        "lastEditedBy" : "ee2e11d3-eec2-40c5-837f-b7bd6985d0e9",
        "tags" : [
        ]
      },
      {
        "id" : "54b0d5c5-059b-476f-abfb-1a52ea820c0d",
        "parentId" : "502619a9-ff28-4c8e-a214-c1f449fde393",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "if you're only going to do the validation in one place, checking for well-formed options is better to do in validation.go, so that we can validate a config without actually starting a kubelet",
        "createdAt" : "2019-10-31T12:53:57Z",
        "updatedAt" : "2019-11-06T12:37:36Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "f6567e10-db04-4365-8d07-048cd6f9c7df",
        "parentId" : "502619a9-ff28-4c8e-a214-c1f449fde393",
        "authorId" : "ee2e11d3-eec2-40c5-837f-b7bd6985d0e9",
        "body" : "updated as we discussed.",
        "createdAt" : "2019-11-01T13:06:15Z",
        "updatedAt" : "2019-11-06T12:37:36Z",
        "lastEditedBy" : "ee2e11d3-eec2-40c5-837f-b7bd6985d0e9",
        "tags" : [
        ]
      }
    ],
    "commit" : "89dfd244838f21ecaf9bc9bf28662a7cccdd8425",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +149,153 @@\t\t\tallErrors = append(allErrors, fmt.Errorf(\"can't use --reserved-cpus with --system-reserved-cgroup or --kube-reserved-cgroup\"))\n\t\t}\n\t\tif _, err := cpuset.Parse(kc.ReservedSystemCPUs); err != nil {\n\t\t\tallErrors = append(allErrors, fmt.Errorf(\"unable to parse --reserved-cpus, error: %v\", err))\n\t\t}"
  }
]