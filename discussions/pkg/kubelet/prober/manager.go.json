[
  {
    "id" : "ca8b6370-0dc5-4f30-a545-fbbdd51fd1f5",
    "prId" : 23567,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a9982b42-5eae-4881-8c5b-920457a69dc8",
        "parentId" : null,
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "Since readiness check is not allowed for init containers, why do we want the prober to update the readiness for them?\n",
        "createdAt" : "2016-05-05T18:34:23Z",
        "updatedAt" : "2016-05-17T04:30:20Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "dc670434-1758-4487-8b65-d47f9af03d66",
        "parentId" : "a9982b42-5eae-4881-8c5b-920457a69dc8",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "I definitely wanted to set the expectation they would not be invoked,\nbut I want to enable them over time.  For alpha, having them disabled\nvia the API and validations didn't seem unreasonable.\n",
        "createdAt" : "2016-05-05T18:36:52Z",
        "updatedAt" : "2016-05-17T04:30:20Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "7c13ac89-a273-47b6-b193-35b8a922443e",
        "parentId" : "a9982b42-5eae-4881-8c5b-920457a69dc8",
        "authorId" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "body" : "Remove dead code? Or is it actually required for something higher up the stack to not barf, if so  suggest a TODO. \n\nIt looks like the proposal leaves readiness as an open question, so leaving it in is confusing, especially if it needs to be preserved across a refactor.\n",
        "createdAt" : "2016-05-05T18:46:21Z",
        "updatedAt" : "2016-05-17T04:30:20Z",
        "lastEditedBy" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "tags" : [
        ]
      },
      {
        "id" : "63d97a39-6698-422e-b6e2-529dd7f84c6c",
        "parentId" : "a9982b42-5eae-4881-8c5b-920457a69dc8",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "My concern is more that drift between the two types of containers is really\nhard unless everything in the kubelet is identical (shared code is >>> not\nshared code).  Since the API enforces those fields to be unset, I think\nhaving two paths in a lot of places in the kubelet is going to be worse.\n\nOn Thu, May 5, 2016 at 2:46 PM, Prashanth B notifications@github.com\nwrote:\n\n> In pkg/kubelet/prober/manager.go\n> https://github.com/kubernetes/kubernetes/pull/23567#discussion_r62234597\n> :\n> \n> > @@ -207,6 +207,23 @@ func (m *manager) UpdatePodStatus(podUID types.UID, podStatus *api.PodStatus) {\n> >         }\n> >         podStatus.ContainerStatuses[i].Ready = ready\n> >     }\n> > -   // init containers are ready if they have exited with success or if a readiness probe has\n> > -   // succeeded.\n> > -   for i, c := range podStatus.InitContainerStatuses {\n> \n> Remove dead code? Or is it actually required for something higher up the\n> stack to not barf, if so suggest a TODO.\n> \n> It looks like the proposal leaves readiness as an open question, so\n> leaving it in is confusing, especially if it needs to be preserved across a\n> refactor.\n> \n> â€”\n> You are receiving this because you were mentioned.\n> Reply to this email directly or view it on GitHub\n> https://github.com/kubernetes/kubernetes/pull/23567/files/9813a4db58c159c5ad4f74de7e9e4fd3c0002957#r62234597\n",
        "createdAt" : "2016-05-05T18:58:43Z",
        "updatedAt" : "2016-05-17T04:30:20Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "4a072ab3-0eed-47d2-9039-4a0eb85539ae",
        "parentId" : "a9982b42-5eae-4881-8c5b-920457a69dc8",
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "If we are not going to use/test this code path, my gut feeling is that it'll probably get outdated sooner or later. The fact that \"ready\" means differently for init containers is also slightly misleading. Why can't we just check the terminated exitcode when needed?\n",
        "createdAt" : "2016-05-05T19:20:00Z",
        "updatedAt" : "2016-05-17T04:30:20Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "9d06904e-8b37-4949-8f66-e5d41307fd07",
        "parentId" : "a9982b42-5eae-4881-8c5b-920457a69dc8",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Ok, updated.\n",
        "createdAt" : "2016-05-05T20:02:56Z",
        "updatedAt" : "2016-05-17T04:30:20Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "2a53330700ac39ee61109c748fe665cf38581a5d",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +210,214 @@\t// init containers are ready if they have exited with success or if a readiness probe has\n\t// succeeded.\n\tfor i, c := range podStatus.InitContainerStatuses {\n\t\tvar ready bool\n\t\tif c.State.Terminated != nil && c.State.Terminated.ExitCode == 0 {"
  },
  {
    "id" : "146020db-88e2-4d4c-a34a-02850945cb86",
    "prId" : 15275,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c8bd24c9-fdfa-480f-af89-1f253360b12e",
        "parentId" : null,
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "nit: I understand bool is more economical here, but using int seems more extensible and safer (e.g.,  accidentally used in an if-else condition)\n\n```\nconst (\n    liveness probeType = iota // 0\n    readiness                 // 1\n)\n```\n",
        "createdAt" : "2015-10-09T19:06:55Z",
        "updatedAt" : "2015-10-19T22:16:22Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "26586b26-4c22-4f66-894f-93bfc1c39d3d",
        "parentId" : "c8bd24c9-fdfa-480f-af89-1f253360b12e",
        "authorId" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "body" : "Done. Good point about the if-else.\n",
        "createdAt" : "2015-10-09T23:07:12Z",
        "updatedAt" : "2015-10-19T22:16:22Z",
        "lastEditedBy" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "tags" : [
        ]
      }
    ],
    "commit" : "a263c77b65e7e8847633e4643cb93bd854162dad",
    "line" : null,
    "diffHunk" : "@@ -1,1 +106,110 @@type probeType int\n\nconst (\n\tliveness probeType = iota\n\treadiness"
  },
  {
    "id" : "87fec313-2c4c-45a0-9d19-33f48f4a3387",
    "prId" : 14221,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3fa7f717-bff1-48ee-935f-1182113cfdac",
        "parentId" : null,
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "I see you only call this function in generatePodStatus, i.e., prober would not voluntarily update the pod status when readiness changes. Do you plan to add that feature or is that considered not required? :-)\n",
        "createdAt" : "2015-09-22T00:55:28Z",
        "updatedAt" : "2015-10-02T22:37:21Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "b5ca95b9-85bf-4e2e-9ce1-1ad488ae768e",
        "parentId" : "3fa7f717-bff1-48ee-935f-1182113cfdac",
        "authorId" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "body" : "Yes, in the interest of keeping this PR size down, I opted to address this in a follow up change. The two options for how to address this are to update the status manager directly (by adding a SetReadiness method on the status manager), or to provide a \"statusSync\" channel which triggers a status update on readiness changes. The former might be prefered for readiness, while the latter might be better for liveness.\n",
        "createdAt" : "2015-09-22T20:24:54Z",
        "updatedAt" : "2015-10-02T22:37:21Z",
        "lastEditedBy" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "tags" : [
        ]
      },
      {
        "id" : "f1d99ac9-699c-4072-9946-a0f49b8ad55c",
        "parentId" : "3fa7f717-bff1-48ee-935f-1182113cfdac",
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "No objection from me to have a separate PR :)\n",
        "createdAt" : "2015-09-23T22:21:27Z",
        "updatedAt" : "2015-10-02T22:37:21Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "52ece0c34e8666f74c99906a73472b44fc9af4c0",
    "line" : 139,
    "diffHunk" : "@@ -1,1 +137,141 @@}\n\nfunc (m *manager) UpdatePodStatus(podUID types.UID, podStatus *api.PodStatus) {\n\tfor i, c := range podStatus.ContainerStatuses {\n\t\tvar ready bool"
  },
  {
    "id" : "95cea06d-b3e8-4b66-9a6d-ee5a6b26ccc0",
    "prId" : 14221,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ec4b82ad-6c93-4c91-b2ac-daa57cef89f3",
        "parentId" : null,
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "nit: Might worth adding a comment mentioning that probing parameters cannot be updated (which I believe we don't support in the api as well, but it might change in the future).\n",
        "createdAt" : "2015-09-22T17:14:53Z",
        "updatedAt" : "2015-10-02T22:37:21Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "46fb96ed-a06b-4f0d-a506-c92360225900",
        "parentId" : "ec4b82ad-6c93-4c91-b2ac-daa57cef89f3",
        "authorId" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "body" : "Done.\n",
        "createdAt" : "2015-09-22T23:07:21Z",
        "updatedAt" : "2015-10-02T22:37:21Z",
        "lastEditedBy" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "tags" : [
        ]
      }
    ],
    "commit" : "52ece0c34e8666f74c99906a73472b44fc9af4c0",
    "line" : null,
    "diffHunk" : "@@ -1,1 +33,37 @@// manager usse the cached probe results to set the appropriate Ready state in the PodStatus when\n// requested (UpdatePodStatus). Updating probe parameters is not currently supported.\n// TODO: Move liveness probing out of the runtime, to here.\ntype Manager interface {\n\t// AddPod creates new probe workers for every container probe. This should be called for every"
  }
]