[
  {
    "id" : "dd23ee8e-ba73-4393-961f-d5b8e901dfec",
    "prId" : 99830,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/99830#pullrequestreview-605723766",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "12ca85db-319f-49f5-b41d-467feacd8821",
        "parentId" : null,
        "authorId" : "ac20bfc0-048b-4f7c-8f40-c004ff5299e1",
        "body" : "That 's will be result in\r\n```\r\nI0102 15:04:05.067890    1234 prober_manager.go:956] \"Liveness probe already exists for container\"\r\n```\r\nbeacuse err == nil will result in [this](https://github.com/kubernetes/klog/blob/110d443dcd6b29c2941cabd9ab9d211063658a21/klog.go#L809)",
        "createdAt" : "2021-03-05T11:08:50Z",
        "updatedAt" : "2021-03-05T15:59:22Z",
        "lastEditedBy" : "ac20bfc0-048b-4f7c-8f40-c004ff5299e1",
        "tags" : [
        ]
      },
      {
        "id" : "6f3bcfe7-9d85-447e-bb95-b02125ab3a57",
        "parentId" : "12ca85db-319f-49f5-b41d-467feacd8821",
        "authorId" : "6ea93d56-a0ec-4969-ac42-11a78c2085e6",
        "body" : "@yuzhiquan Problem you are mentioning should be fixed separately to migration. Let's continue with migration as described in migration guide. ",
        "createdAt" : "2021-03-05T12:57:05Z",
        "updatedAt" : "2021-03-05T15:59:22Z",
        "lastEditedBy" : "6ea93d56-a0ec-4969-ac42-11a78c2085e6",
        "tags" : [
        ]
      },
      {
        "id" : "6eebe6aa-b214-4fbe-848b-5891c2ce0824",
        "parentId" : "12ca85db-319f-49f5-b41d-467feacd8821",
        "authorId" : "ac20bfc0-048b-4f7c-8f40-c004ff5299e1",
        "body" : "> @yuzhiquan Problem you are mentioning should be fixed separately to migration. Let's continue with migration as described in migration guide.\r\n\r\nSure.",
        "createdAt" : "2021-03-06T03:36:27Z",
        "updatedAt" : "2021-03-06T03:36:28Z",
        "lastEditedBy" : "ac20bfc0-048b-4f7c-8f40-c004ff5299e1",
        "tags" : [
        ]
      }
    ],
    "commit" : "86b0efcd77bcb6bca2b391ca5f3fe5fddfe765c5",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +193,197 @@\t\t\tkey.probeType = liveness\n\t\t\tif _, ok := m.workers[key]; ok {\n\t\t\t\tklog.ErrorS(nil, \"Liveness probe already exists for container\",\n\t\t\t\t\t\"pod\", klog.KObj(pod), \"containerName\", c.Name)\n\t\t\t\treturn"
  },
  {
    "id" : "40c5734e-b7d4-4f60-9bbc-9471812e7af5",
    "prId" : 98376,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/98376#pullrequestreview-576517441",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d50cbbf4-e72a-4110-a2a3-b1cdcd86b46e",
        "parentId" : null,
        "authorId" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "body" : "add logging that we failed to manually trigger the update?",
        "createdAt" : "2021-01-25T23:56:16Z",
        "updatedAt" : "2021-03-06T13:43:53Z",
        "lastEditedBy" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "tags" : [
        ]
      },
      {
        "id" : "a378beb5-4bac-421b-b6c5-ddd3cee32e70",
        "parentId" : "d50cbbf4-e72a-4110-a2a3-b1cdcd86b46e",
        "authorId" : "4da24861-03eb-421f-b365-cf63f3c423b3",
        "body" : "I don't know... does it work putting a log under `default`?",
        "createdAt" : "2021-01-26T12:49:22Z",
        "updatedAt" : "2021-03-06T13:43:53Z",
        "lastEditedBy" : "4da24861-03eb-421f-b365-cf63f3c423b3",
        "tags" : [
        ]
      },
      {
        "id" : "5440a10b-ee1d-44fd-b2ba-24b7a98a4813",
        "parentId" : "d50cbbf4-e72a-4110-a2a3-b1cdcd86b46e",
        "authorId" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "body" : "Hard to test, but it does: https://gobyexample.com/non-blocking-channel-operations#non-blocking-channel-operations:~:text=Therefore%20the%20default%20case%20is%20selected.",
        "createdAt" : "2021-01-26T16:16:33Z",
        "updatedAt" : "2021-03-06T13:43:53Z",
        "lastEditedBy" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "tags" : [
        ]
      }
    ],
    "commit" : "b203fb0565607f37f907cc89e2d257e93ae4e9b8",
    "line" : 77,
    "diffHunk" : "@@ -1,1 +253,257 @@\t\t\t\t\tselect {\n\t\t\t\t\tcase w.manualTriggerCh <- struct{}{}:\n\t\t\t\t\tdefault: // Non-blocking.\n\t\t\t\t\t\tklog.Warningf(\"Failed to trigger a manual run of %s probe\", w.probeType.String())\n\t\t\t\t\t}"
  },
  {
    "id" : "c83c08f8-f235-4cac-96e2-5d7ecf35535e",
    "prId" : 92196,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/92196#pullrequestreview-432052376",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c33aa4a9-0bf1-4086-9e71-0a3a883f4172",
        "parentId" : null,
        "authorId" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "body" : "If there is no way container can be ready, but not started, perhaps the status can be stored in a single variable instead of two independent flags? ",
        "createdAt" : "2020-06-16T21:13:09Z",
        "updatedAt" : "2020-06-17T04:57:01Z",
        "lastEditedBy" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "tags" : [
        ]
      },
      {
        "id" : "9ce54b29-4afd-46f5-94a3-79cb2a0ea86b",
        "parentId" : "c33aa4a9-0bf1-4086-9e71-0a3a883f4172",
        "authorId" : "4da24861-03eb-421f-b365-cf63f3c423b3",
        "body" : "No, there are more ramifications... I think it's clearer to keep both even just for the sake of explanation and ease of testing.",
        "createdAt" : "2020-06-16T21:19:32Z",
        "updatedAt" : "2020-06-17T04:57:01Z",
        "lastEditedBy" : "4da24861-03eb-421f-b365-cf63f3c423b3",
        "tags" : [
        ]
      },
      {
        "id" : "779275bf-bfe8-493e-b9a9-c99dde590e4a",
        "parentId" : "c33aa4a9-0bf1-4086-9e71-0a3a883f4172",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "Do you mean in the API or in this function?\r\n\r\nThe API has shipped, we don't want to change that.\r\n\r\nThis commit was designed to be surgical - move the code block, add an `if`.  Further cleanup may be possible, but it seems low-value to me - this code is pretty simple to read?",
        "createdAt" : "2020-06-16T23:56:14Z",
        "updatedAt" : "2020-06-17T04:57:01Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "df35784e-650f-4d00-b27a-041f3e76d52d",
        "parentId" : "c33aa4a9-0bf1-4086-9e71-0a3a883f4172",
        "authorId" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "body" : "I meant API =). I commented before looked into it and understand it's seems to be hard to change. The only benefit is guaranteed consistency of the status. This method is ok. But there are more. For instance, this: https://github.com/kubernetes/kubernetes/blob/323f34858de18b862d43c40b2cced65ad8e24052/pkg/kubelet/status/status_manager.go#L241 where `Ready` and `Started` are set seemingly independently. ",
        "createdAt" : "2020-06-17T04:27:22Z",
        "updatedAt" : "2020-06-17T04:57:01Z",
        "lastEditedBy" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "tags" : [
        ]
      },
      {
        "id" : "7faaf6d5-d99c-4d82-8fae-3a0d9359d6b4",
        "parentId" : "c33aa4a9-0bf1-4086-9e71-0a3a883f4172",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "That case (I think) is after readiness has been considered at a lower level, but I admit I am not 100% confident in this code area any more :(",
        "createdAt" : "2020-06-17T04:36:57Z",
        "updatedAt" : "2020-06-17T04:57:01Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "64d42542174d22968c424ba4b976b5e1055647cd",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +251,255 @@\t\tpodStatus.ContainerStatuses[i].Started = &started\n\n\t\tif started {\n\t\t\tvar ready bool\n\t\t\tif c.State.Running == nil {"
  },
  {
    "id" : "e69bff74-704c-4dbe-89a7-f5137dfc4dc0",
    "prId" : 77807,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/77807#pullrequestreview-281661759",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2f58d3a0-511a-481f-8fa5-a8a3e666eed9",
        "parentId" : null,
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "Add comment about why this is safe when the startup feature is disabled, e.g. `started  ==  !running` when startup probe is disabled.",
        "createdAt" : "2019-08-19T17:28:43Z",
        "updatedAt" : "2019-08-29T22:42:23Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      },
      {
        "id" : "546297fe-4dbc-464c-8e9e-d36c1596e321",
        "parentId" : "2f58d3a0-511a-481f-8fa5-a8a3e666eed9",
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "And do we want to always set `started = true` when the feature is disabled? That seems safer to me. The current PR still changes some workflow when the feature is disabled.",
        "createdAt" : "2019-08-19T17:39:25Z",
        "updatedAt" : "2019-08-29T22:42:23Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      },
      {
        "id" : "e0676ce2-4481-4de5-9f0a-d4bed4ffa214",
        "parentId" : "2f58d3a0-511a-481f-8fa5-a8a3e666eed9",
        "authorId" : "4da24861-03eb-421f-b365-cf63f3c423b3",
        "body" : "Ok, so you want me to add the feature flag here too, and set `started = true` in that case?",
        "createdAt" : "2019-08-21T21:10:24Z",
        "updatedAt" : "2019-08-29T22:42:23Z",
        "lastEditedBy" : "4da24861-03eb-421f-b365-cf63f3c423b3",
        "tags" : [
        ]
      },
      {
        "id" : "3c1648a8-3051-4316-98d1-d434ad601c62",
        "parentId" : "2f58d3a0-511a-481f-8fa5-a8a3e666eed9",
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "@matthyx That seems safer to me. WDYT?",
        "createdAt" : "2019-08-22T01:12:47Z",
        "updatedAt" : "2019-08-29T22:42:23Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      },
      {
        "id" : "3b199f7f-c1c8-427a-82c7-8f93da136dd2",
        "parentId" : "2f58d3a0-511a-481f-8fa5-a8a3e666eed9",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "A server or kubelet with the feature disabled should behave as much as possible as if the API field does not exist. I would expect the field to be left nil when the feature is disabled.",
        "createdAt" : "2019-08-29T14:04:38Z",
        "updatedAt" : "2019-08-29T22:42:23Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "51aa7635-d4e9-400f-98c4-7f496afdfd7a",
        "parentId" : "2f58d3a0-511a-481f-8fa5-a8a3e666eed9",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "Setting the field to `true` when the feature is disabled makes it effectively useless from an API client's perspective. A `true` value would mean one of:\r\n1. the feature is disabled and the container may or may not be started\r\n2. the feature is enabled and the container is running and there's no startup check\r\n3. the feature is enabled and the container is running and there's a startup check and it passed\r\n\r\n2 and 3 are reasonable, but 1 is unexpected to me. thoughts, @thockin?",
        "createdAt" : "2019-08-29T14:07:27Z",
        "updatedAt" : "2019-08-29T22:42:23Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "f91f4516-5a31-4ee8-b1b7-108858259e0c",
        "parentId" : "2f58d3a0-511a-481f-8fa5-a8a3e666eed9",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "> I would expect the field to be left nil when the feature is disabled.\r\n\r\nor set it as if there was no startupProbe, e.g. based on whether the container was running or not",
        "createdAt" : "2019-08-29T19:01:59Z",
        "updatedAt" : "2019-08-29T22:42:23Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "a042a4b0ee3e0fc27b0a4711202d66743af246e1",
    "line" : 110,
    "diffHunk" : "@@ -1,1 +248,252 @@\t\t}\n\t\tpodStatus.ContainerStatuses[i].Ready = ready\n\n\t\tvar started bool\n\t\tif c.State.Running == nil {"
  },
  {
    "id" : "a9ea5ed3-d78f-468b-bd99-7a69cab4e398",
    "prId" : 61369,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/61369#pullrequestreview-105777536",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dad13edc-0f70-49dc-aa9e-e4a02c9f0a7b",
        "parentId" : null,
        "authorId" : "5b1d97bd-de49-4ef5-bcbf-0d8dfead7b61",
        "body" : "not sure if we need both pod_uid and namespace+pod_name each of this should uniquely identify pod.",
        "createdAt" : "2018-03-21T11:08:27Z",
        "updatedAt" : "2018-03-30T18:08:50Z",
        "lastEditedBy" : "5b1d97bd-de49-4ef5-bcbf-0d8dfead7b61",
        "tags" : [
        ]
      },
      {
        "id" : "f3d29679-525f-47b4-8054-4c4532439d1a",
        "parentId" : "dad13edc-0f70-49dc-aa9e-e4a02c9f0a7b",
        "authorId" : "bcebf3b5-032b-4720-ba66-12ac441f6151",
        "body" : "I think in #58827 we decided that it would be good to have both?",
        "createdAt" : "2018-03-21T15:37:04Z",
        "updatedAt" : "2018-03-30T18:08:50Z",
        "lastEditedBy" : "bcebf3b5-032b-4720-ba66-12ac441f6151",
        "tags" : [
        ]
      }
    ],
    "commit" : "c0c5566c25aa1e118d77e1f1bce7489cd53b9016",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +40,44 @@\t\tHelp:      \"The result of a liveness or readiness probe for a container.\",\n\t},\n\t[]string{\"probe_type\", \"container_name\", \"pod_name\", \"namespace\", \"pod_uid\"},\n)\n"
  },
  {
    "id" : "3a184a2b-d378-4567-818d-b1a4b132222e",
    "prId" : 61369,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/61369#pullrequestreview-108409647",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2075ab17-9445-4e3f-bcd8-c8629ef0af08",
        "parentId" : null,
        "authorId" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "body" : "Should this set a namespace?",
        "createdAt" : "2018-03-30T18:52:48Z",
        "updatedAt" : "2018-03-30T18:55:16Z",
        "lastEditedBy" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "tags" : [
        ]
      },
      {
        "id" : "01db3775-2d11-4d71-921b-6a5adcaf614e",
        "parentId" : "2075ab17-9445-4e3f-bcd8-c8629ef0af08",
        "authorId" : "bcebf3b5-032b-4720-ba66-12ac441f6151",
        "body" : "I don't think any of the metrics declared in pkg/kubelet set the namespace so to be consistent I don't think I should here.",
        "createdAt" : "2018-03-30T19:16:08Z",
        "updatedAt" : "2018-03-30T19:16:25Z",
        "lastEditedBy" : "bcebf3b5-032b-4720-ba66-12ac441f6151",
        "tags" : [
        ]
      }
    ],
    "commit" : "c0c5566c25aa1e118d77e1f1bce7489cd53b9016",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +35,39 @@// ProberResults stores the results of a probe as prometheus metrics.\nvar ProberResults = prometheus.NewGaugeVec(\n\tprometheus.GaugeOpts{\n\t\tSubsystem: \"prober\",\n\t\tName:      \"probe_result\","
  }
]