[
  {
    "id" : "f53c94f0-ae7a-4f11-9cc7-82d9b689c97a",
    "prId" : 14700,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b6da9019-c2e1-4a35-ba28-515b04cda6c5",
        "parentId" : null,
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "I wish we could reuse bits of apiserver here to write status.\n",
        "createdAt" : "2015-10-05T18:18:42Z",
        "updatedAt" : "2015-10-09T07:11:10Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "c3823800-0180-46c5-9815-8d4a6d0976a7",
        "parentId" : "b6da9019-c2e1-4a35-ba28-515b04cda6c5",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Is there a reason _not_ to use ErrorJSON here from apiserver?\n",
        "createdAt" : "2015-10-05T18:19:04Z",
        "updatedAt" : "2015-10-09T07:11:10Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "48fd86e4-66fd-4173-83b6-ac8cb3ea183b",
        "parentId" : "b6da9019-c2e1-4a35-ba28-515b04cda6c5",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "probably not... wasn't exported and nothing else from the kubelet is returning API errors... didn't really want to refactor that bit in this PR\n",
        "createdAt" : "2015-10-05T18:36:14Z",
        "updatedAt" : "2015-10-09T07:11:10Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "9d6b52881d835cd76aa5fe2ce92cf578dd5900c9",
    "line" : null,
    "diffHunk" : "@@ -1,1 +184,188 @@\t\t}\n\t\tif !ok {\n\t\t\tresp.WriteErrorString(http.StatusUnauthorized, \"Unauthorized\")\n\t\t\treturn\n\t\t}"
  },
  {
    "id" : "c2e68023-7c0a-4109-a206-84148366fedd",
    "prId" : 12811,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dbadcd1c-7f2c-44bf-a379-bb51f569c04d",
        "parentId" : null,
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "Why override the query here?\n",
        "createdAt" : "2015-08-17T18:30:40Z",
        "updatedAt" : "2015-08-18T18:28:37Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      },
      {
        "id" : "6c48cba5-7885-418b-bdab-119be47d577e",
        "parentId" : "dbadcd1c-7f2c-44bf-a379-bb51f569c04d",
        "authorId" : "e17c0720-a868-4134-a8e1-a3896b8caa8b",
        "body" : "I didn't add this, it's in master.\n",
        "createdAt" : "2015-08-17T18:32:40Z",
        "updatedAt" : "2015-08-18T18:28:37Z",
        "lastEditedBy" : "e17c0720-a868-4134-a8e1-a3896b8caa8b",
        "tags" : [
        ]
      },
      {
        "id" : "0d90e6e6-5e04-4e32-8139-80e6918a15b5",
        "parentId" : "dbadcd1c-7f2c-44bf-a379-bb51f569c04d",
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "Previously, NumStats was set to be the initial limit before updating it based on the user request. Now IIUC, you are overriding user request. So essentially we should set it only if the NumStats is not set by the user.\n",
        "createdAt" : "2015-08-17T18:52:47Z",
        "updatedAt" : "2015-08-18T18:28:37Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      },
      {
        "id" : "c4311e27-2044-4c41-81c3-c496abda7305",
        "parentId" : "dbadcd1c-7f2c-44bf-a379-bb51f569c04d",
        "authorId" : "e17c0720-a868-4134-a8e1-a3896b8caa8b",
        "body" : "Whoops, you are right! Nice catch.\n",
        "createdAt" : "2015-08-17T19:39:30Z",
        "updatedAt" : "2015-08-18T18:28:37Z",
        "lastEditedBy" : "e17c0720-a868-4134-a8e1-a3896b8caa8b",
        "tags" : [
        ]
      }
    ],
    "commit" : "7862ed3656521536c7d09fc5da730fa1a225441d",
    "line" : null,
    "diffHunk" : "@@ -1,1 +740,744 @@\tvar err error\n\tvar query StatsRequest\n\tquery.NumStats = 60\n\n\terr = json.NewDecoder(req.Body).Decode(&query)"
  },
  {
    "id" : "a65fa92f-6d66-4f75-87ab-556d43114c26",
    "prId" : 12283,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "85040efe-69ab-439c-a057-18b6417e4410",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "`err == nil && complete`\n",
        "createdAt" : "2015-09-25T13:51:23Z",
        "updatedAt" : "2015-10-01T00:03:59Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "f458b6de-e74a-4762-9c1e-f5d60abe4c55",
        "parentId" : "85040efe-69ab-439c-a057-18b6417e4410",
        "authorId" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "body" : "I'm going to add in error handling - just haven't done it yet.\n",
        "createdAt" : "2015-09-25T13:52:58Z",
        "updatedAt" : "2015-10-01T00:03:59Z",
        "lastEditedBy" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "tags" : [
        ]
      },
      {
        "id" : "aa6c8fcc-c3ec-4a83-8285-440a71aaf51e",
        "parentId" : "85040efe-69ab-439c-a057-18b6417e4410",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "k\n",
        "createdAt" : "2015-09-25T13:55:31Z",
        "updatedAt" : "2015-10-01T00:03:59Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "ed021fed4c38b5c82696fea84b3173e98bc16922",
    "line" : null,
    "diffHunk" : "@@ -1,1 +822,826 @@\t\t\t\tgo h.monitorStreamPair(p, time.After(h.streamCreationTimeout))\n\t\t\t}\n\t\t\tif complete, err := p.add(stream); err != nil {\n\t\t\t\tmsg := fmt.Sprintf(\"error processing stream for request %s: %v\", requestID, err)\n\t\t\t\tutil.HandleError(errors.New(msg))"
  },
  {
    "id" : "5d4f6968-c9e2-487c-ae79-b24e515e8372",
    "prId" : 12283,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "43ad5cec-dbe2-4e34-bcc7-92c0c8c38741",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "error on unknown types\n",
        "createdAt" : "2015-09-25T14:16:22Z",
        "updatedAt" : "2015-10-01T00:03:59Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "3b34e708-ac98-4e05-b7c6-013ef51ef74d",
        "parentId" : "43ad5cec-dbe2-4e34-bcc7-92c0c8c38741",
        "authorId" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "body" : "Not needed. See `portForwardStreamReceived`\n",
        "createdAt" : "2015-09-25T14:18:18Z",
        "updatedAt" : "2015-10-01T00:03:59Z",
        "lastEditedBy" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "tags" : [
        ]
      }
    ],
    "commit" : "ed021fed4c38b5c82696fea84b3173e98bc16922",
    "line" : null,
    "diffHunk" : "@@ -1,1 +890,894 @@\t\t}\n\t\tp.dataStream = stream\n\t}\n\n\tcomplete := p.errorStream != nil && p.dataStream != nil"
  },
  {
    "id" : "fa0080aa-1adb-445d-981e-675c499df570",
    "prId" : 11918,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6d34db17-44ec-45c5-8df6-2161f16e6df2",
        "parentId" : null,
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "That's a long list of return types :)\n",
        "createdAt" : "2015-07-28T22:20:18Z",
        "updatedAt" : "2015-07-28T22:20:18Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      }
    ],
    "commit" : "64be76c14d278c289e4b4efa15c03bcbe42392ac",
    "line" : 87,
    "diffHunk" : "@@ -1,1 +465,469 @@}\n\nfunc (s *Server) createStreams(w http.ResponseWriter, req *http.Request) (io.Reader, io.WriteCloser, io.WriteCloser, io.WriteCloser, httpstream.Connection, bool, bool) {\n\treq.ParseForm()\n\t// start at 1 for error stream"
  },
  {
    "id" : "1450afc2-b01b-4123-9659-86c3bc64c8a4",
    "prId" : 10313,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5207e5b5-5bf5-4876-94cf-662719f8e14f",
        "parentId" : null,
        "authorId" : null,
        "body" : "This is mostly a cut 'n paste of the above function.  Please factor out the common code.\n",
        "createdAt" : "2015-06-26T00:02:58Z",
        "updatedAt" : "2015-07-01T23:25:08Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      }
    ],
    "commit" : "a10a6a296e4efa90483febce5f6147b620e84e7b",
    "line" : null,
    "diffHunk" : "@@ -1,1 +309,313 @@// provided by the container runtime, and is different from the list returned\n// by handlePods, which is a set of desired pods to run.\nfunc (s *Server) handleRunningPods(w http.ResponseWriter, req *http.Request) {\n\tpods, err := s.host.GetRunningPods()\n\tif err != nil {"
  },
  {
    "id" : "61251005-cbee-4370-aad7-8347fc6f39d3",
    "prId" : 10313,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4354bf93-9ece-4af1-a758-258e6c6a9c9c",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "nit: maybe \"runningPods\" instead (i.e. \"P\" instead of \"p\" in pods)\n",
        "createdAt" : "2015-06-26T07:13:13Z",
        "updatedAt" : "2015-07-01T23:25:08Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "55eb43bb-48a1-4f65-9298-54716b62e2a8",
        "parentId" : "4354bf93-9ece-4af1-a758-258e6c6a9c9c",
        "authorId" : null,
        "body" : "I think that one could argue this one either way.  I guess that we should at least be consistent one way or the other, which we're not currently.  See \"syncloop\" vs \"containerLogs\" and \"portForward\".\n",
        "createdAt" : "2015-06-26T18:40:17Z",
        "updatedAt" : "2015-07-01T23:25:08Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      },
      {
        "id" : "12cc0a0a-6f4c-442a-9a5e-a1776cc90db0",
        "parentId" : "4354bf93-9ece-4af1-a758-258e6c6a9c9c",
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "Hmm...I missed this comment. I could do a follow-up PR to make the names consistent, whichever format we decide to use. What do you think? \n",
        "createdAt" : "2015-06-30T01:10:13Z",
        "updatedAt" : "2015-07-01T23:25:08Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "e6e23368-0705-49b0-ae03-ec134e9f323c",
        "parentId" : "4354bf93-9ece-4af1-a758-258e6c6a9c9c",
        "authorId" : null,
        "body" : "Yes, that's totally fine.\n",
        "createdAt" : "2015-06-30T02:26:14Z",
        "updatedAt" : "2015-07-01T23:25:08Z",
        "lastEditedBy" : null,
        "tags" : [
        ]
      }
    ],
    "commit" : "a10a6a296e4efa90483febce5f6147b620e84e7b",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +151,155 @@\ts.mux.Handle(\"/metrics\", prometheus.Handler())\n\t// The /runningpods endpoint is used for testing only.\n\ts.mux.HandleFunc(\"/runningpods\", s.handleRunningPods)\n\n\ts.mux.HandleFunc(\"/debug/pprof/\", pprof.Index)"
  },
  {
    "id" : "0dd08d59-3b2e-4185-825a-6465d9b61f75",
    "prId" : 10004,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f1ad2c29-e9ae-4304-9749-59ca6ee51fd9",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "2 missed loops is not a lot when the resync interval is short; we need to track sync loop duration and make sure that this timeout is long enough to accommodate the longest sane operation that the sync loop might do. \n",
        "createdAt" : "2015-06-19T18:27:43Z",
        "updatedAt" : "2015-06-20T01:14:14Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "35569931794322924d61e59406d220c32e8634b6",
    "line" : 41,
    "diffHunk" : "@@ -1,1 +199,203 @@// Checks if kubelet's sync loop  that updates containers is working.\nfunc (s *Server) syncLoopHealthCheck(req *http.Request) error {\n\tduration := s.host.ResyncInterval() * 2\n\tminDuration := time.Minute * 5\n\tif duration < minDuration {"
  },
  {
    "id" : "8c922b16-c6b8-4a62-aef2-48e037f1557a",
    "prId" : 6592,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "79b5b6e0-d606-4d8c-8b5b-03313685eb4d",
        "parentId" : null,
        "authorId" : "a6409368-42e0-44a9-bf79-9d3042ac3b65",
        "body" : "Shouldn't this by default on for kubelet since our default verbose level is 2?\n",
        "createdAt" : "2015-04-08T21:05:35Z",
        "updatedAt" : "2015-04-08T21:05:35Z",
        "lastEditedBy" : "a6409368-42e0-44a9-bf79-9d3042ac3b65",
        "tags" : [
        ]
      },
      {
        "id" : "f56ea1a1-b088-438f-bbc9-615cde480e81",
        "parentId" : "79b5b6e0-d606-4d8c-8b5b-03313685eb4d",
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "I don't see vlog being set everywhere. For example hack/test-cmd.sh does not set vlog.\n",
        "createdAt" : "2015-04-08T21:24:02Z",
        "updatedAt" : "2015-04-08T21:24:02Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      }
    ],
    "commit" : "2b5cad6acf86a0bac367ae5f8b93eb60e92dc720",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +61,65 @@// ListenAndServeKubeletServer initializes a server to respond to HTTP network requests on the Kubelet.\nfunc ListenAndServeKubeletServer(host HostInterface, address net.IP, port uint, tlsOptions *TLSOptions, enableDebuggingHandlers bool) {\n\tglog.Infof(\"Starting to listen on %s:%d\", address, port)\n\thandler := NewServer(host, enableDebuggingHandlers)\n\ts := &http.Server{"
  },
  {
    "id" : "5af17dfa-531b-4a35-a5e4-da9f559307f4",
    "prId" : 1667,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "950f3e1a-5d74-4c48-a2b3-300533f68e72",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Ah, I think /container and /containers aren't actually debugging handlers. Hm, looks like there's no way to disable them while leaving the info server running. Maybe you can add a TODO here so that future readers don't think they're for debugging.\n",
        "createdAt" : "2014-10-09T17:26:25Z",
        "updatedAt" : "2014-10-09T23:49:46Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "c0bf974871ef66cf047c0509746753c9cccf4c85",
    "line" : null,
    "diffHunk" : "@@ -1,1 +99,103 @@\t// ToDo: /container, /run, and /containers aren't debugging options, should probably be handled separately\n\ts.mux.HandleFunc(\"/container\", s.handleContainer)\n\ts.mux.HandleFunc(\"/containers\", s.handleContainers)\n\ts.mux.HandleFunc(\"/run/\", s.handleRun)\n"
  },
  {
    "id" : "49cc9328-93d6-4b1d-8bd6-ca91f419e2f2",
    "prId" : 1318,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "48847758-021c-43cb-a49b-b439077cdde2",
        "parentId" : null,
        "authorId" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "body" : "Is the runtime cast necessary?  It seems like there is only one possible type for w, and that type can be cast to Flusher.  So, get rid of else case?\n",
        "createdAt" : "2014-09-15T20:48:16Z",
        "updatedAt" : "2014-09-21T20:28:34Z",
        "lastEditedBy" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "tags" : [
        ]
      },
      {
        "id" : "d583ce5f-73d3-4656-9342-84c44c12df3f",
        "parentId" : "48847758-021c-43cb-a49b-b439077cdde2",
        "authorId" : "69d174e6-f279-43f1-9cd9-a6651c313348",
        "body" : "Agree on that.\n",
        "createdAt" : "2014-09-15T21:10:25Z",
        "updatedAt" : "2014-09-21T20:28:34Z",
        "lastEditedBy" : "69d174e6-f279-43f1-9cd9-a6651c313348",
        "tags" : [
        ]
      },
      {
        "id" : "0adca713-1f7c-4a2d-aa90-0dbf7e1033a4",
        "parentId" : "48847758-021c-43cb-a49b-b439077cdde2",
        "authorId" : "69d174e6-f279-43f1-9cd9-a6651c313348",
        "body" : "Updated in second commit https://github.com/jhadvig/kubernetes/commit/6da2653b4a1f70cec89d34b7a1872a595b7ded0e\n",
        "createdAt" : "2014-09-16T13:48:53Z",
        "updatedAt" : "2014-09-21T20:28:34Z",
        "lastEditedBy" : "69d174e6-f279-43f1-9cd9-a6651c313348",
        "tags" : [
        ]
      }
    ],
    "commit" : "960f1b2693c09fa4ca2d4a983b7a47fcf8fed02f",
    "line" : null,
    "diffHunk" : "@@ -1,1 +181,185 @@\n\tfw := FlushWriter{writer: w}\n\tif flusher, ok := w.(http.Flusher); ok {\n\t\tfw.flusher = flusher\n\t}"
  },
  {
    "id" : "6a9f2ca1-2373-48a3-9b25-4624d7294b54",
    "prId" : 1318,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8c7f64bb-e9d9-4451-af4e-8abde292235e",
        "parentId" : null,
        "authorId" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "body" : "I'm not very familiar with the threading/goroutine model of kubelet/server.  Is it able to stream logs while handling other requests?  \n",
        "createdAt" : "2014-09-15T20:49:45Z",
        "updatedAt" : "2014-09-21T20:28:34Z",
        "lastEditedBy" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "tags" : [
        ]
      },
      {
        "id" : "a617be9c-b54f-4e95-aaef-653965138abe",
        "parentId" : "8c7f64bb-e9d9-4451-af4e-8abde292235e",
        "authorId" : "69d174e6-f279-43f1-9cd9-a6651c313348",
        "body" : "You mean like to call this whole function like a goroutine ?\nI think it's doable but better test it.\n",
        "createdAt" : "2014-09-15T21:05:54Z",
        "updatedAt" : "2014-09-21T20:28:34Z",
        "lastEditedBy" : "69d174e6-f279-43f1-9cd9-a6651c313348",
        "tags" : [
        ]
      },
      {
        "id" : "f84dfea4-962f-44b9-96fa-94ebb3314704",
        "parentId" : "8c7f64bb-e9d9-4451-af4e-8abde292235e",
        "authorId" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "body" : "I'm not suggesting a specific implementation yet.  I'm just asking what you expect to happen when:\n- user 1 tries to GetKubeletContainerLogs(...) with opts.Follow = true\n- user 2 tries to do something else.\n",
        "createdAt" : "2014-09-15T21:11:06Z",
        "updatedAt" : "2014-09-21T20:28:34Z",
        "lastEditedBy" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "tags" : [
        ]
      },
      {
        "id" : "c8ecd311-20e3-4d1d-a213-b410fccfdc38",
        "parentId" : "8c7f64bb-e9d9-4451-af4e-8abde292235e",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "----- Original Message -----\n\n> > @@ -143,7 +145,45 @@ func (s *Server) handleContainers(w\n> > http.ResponseWriter, req *http.Request) {\n> > \n> >  }\n> > \n> > -// handlePodInfo handles podInfo requests against the Kubelet.\n> > +// handleContainerLogs handles containerLogs request againts the Kubelet\n> > +func (s *Server) handleContainerLogs(w http.ResponseWriter, req\n> > *http.Request) {\n> \n> I'm not suggesting a specific implementation yet.  I'm just asking what you\n> expect to happen when:\n> - user 1 tries to GetKubeletContainerLogs(...) with opts.Follow = true\n> - user 2 tries to do something else.\n\nEach http request is its own goroutine - at some point we may want to limit log retrievals via some rate limit / high water mark, with maximum timeouts, but we can _probably_ layer that.\n",
        "createdAt" : "2014-09-15T21:52:00Z",
        "updatedAt" : "2014-09-21T20:28:34Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "fb3e5c12-c10e-4970-875c-2ac52780b5a7",
        "parentId" : "8c7f64bb-e9d9-4451-af4e-8abde292235e",
        "authorId" : "69d174e6-f279-43f1-9cd9-a6651c313348",
        "body" : "You mean user 2 tries to retrieve the logs from the same container ?\nWhat I had tested, is to sent several concurrent request for the same container logs with `opts.Follow = true` and each of the stream was streaming without problem.\nWhat is your concern ?\nOr are you referring to some other use-case ?\n",
        "createdAt" : "2014-09-15T22:09:03Z",
        "updatedAt" : "2014-09-21T20:28:34Z",
        "lastEditedBy" : "69d174e6-f279-43f1-9cd9-a6651c313348",
        "tags" : [
        ]
      },
      {
        "id" : "ecb47b27-68c5-49bc-8e5c-339a5f48a9eb",
        "parentId" : "8c7f64bb-e9d9-4451-af4e-8abde292235e",
        "authorId" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "body" : "my concern is resolved.\n",
        "createdAt" : "2014-09-15T22:32:06Z",
        "updatedAt" : "2014-09-21T20:28:34Z",
        "lastEditedBy" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "tags" : [
        ]
      }
    ],
    "commit" : "960f1b2693c09fa4ca2d4a983b7a47fcf8fed02f",
    "line" : null,
    "diffHunk" : "@@ -1,1 +147,151 @@\n// handleContainerLogs handles containerLogs request against the Kubelet\nfunc (s *Server) handleContainerLogs(w http.ResponseWriter, req *http.Request) {\n\tdefer req.Body.Close()\n\tu, err := url.ParseRequestURI(req.RequestURI)"
  },
  {
    "id" : "82448ef4-5e06-4e79-9299-a334204b3ce4",
    "prId" : 1199,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4d370697-8837-487f-ad47-4f09b41f5b72",
        "parentId" : null,
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Add test case that exercises this path.\n",
        "createdAt" : "2014-09-06T16:45:40Z",
        "updatedAt" : "2014-09-08T21:24:29Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "8b15b41c-6669-4c47-8c92-f8da762bd200",
        "parentId" : "4d370697-8837-487f-ad47-4f09b41f5b72",
        "authorId" : "a6409368-42e0-44a9-bf79-9d3042ac3b65",
        "body" : "Add a test case for this.\n",
        "createdAt" : "2014-09-08T20:43:09Z",
        "updatedAt" : "2014-09-08T21:24:29Z",
        "lastEditedBy" : "a6409368-42e0-44a9-bf79-9d3042ac3b65",
        "tags" : [
        ]
      }
    ],
    "commit" : "7ace5a3e8326ac31e0a9175f19ff87e64ffb40d9",
    "line" : 39,
    "diffHunk" : "@@ -1,1 +215,219 @@\tvar podID, uuid, container string\n\tif len(parts) == 4 {\n\t\tpodID = parts[2]\n\t\tcontainer = parts[3]\n\t} else if len(parts) == 5 {"
  },
  {
    "id" : "1795e981-bee9-4526-8419-bbeadd82d542",
    "prId" : 356,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e1af7ed1-2991-406c-b8d8-2b3284b74ac1",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "// TODO: Split into \"NewServer\" and \"ListenAndServe\" methods?\n",
        "createdAt" : "2014-07-21T20:08:08Z",
        "updatedAt" : "2014-07-22T01:29:51Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "9c8c54ec-2b73-4ed9-a5f0-2c5bb14c933b",
        "parentId" : "e1af7ed1-2991-406c-b8d8-2b3284b74ac1",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "I think the refactor would be valuable if there were a context in which you'd use the server separately from having it listen - possibly by adding these methods to another handlerMux.\n\nAlso - would it be an obvious refactor if someone needed it?  Not opposed to the comment, just want to understand the intent.  Be more idiomatic?\n",
        "createdAt" : "2014-07-21T20:50:12Z",
        "updatedAt" : "2014-07-22T01:29:51Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "7767c2a2ace79f55d1f8e4cb75eb1e3bd48d2db9",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +45,49 @@}\n\nfunc ListenAndServeKubeletServer(host HostInterface, updates chan<- interface{}, delegate http.Handler, address string, port uint) {\n\tglog.Infof(\"Starting to listen on %s:%d\", address, port)\n\thandler := Server{"
  }
]