[
  {
    "id" : "9c2aca12-3f21-4006-a9ca-4761ad20968d",
    "prId" : 102268,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/102268#pullrequestreview-669359837",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f8f31c8d-3b7e-43ee-b1e5-fcc2b86fdc17",
        "parentId" : null,
        "authorId" : "c5cbab8f-2eaf-48d9-a433-0b0fd4a2806d",
        "body" : "Could you tell me why you change \"error\" to \"err\" in this line? Thanks. This string will output to user direct. \"error\" is more friendly to user,isn't it?",
        "createdAt" : "2021-05-25T02:03:42Z",
        "updatedAt" : "2021-05-25T02:03:49Z",
        "lastEditedBy" : "c5cbab8f-2eaf-48d9-a433-0b0fd4a2806d",
        "tags" : [
        ]
      },
      {
        "id" : "e2a27340-83fd-433a-b025-315435fd0136",
        "parentId" : "f8f31c8d-3b7e-43ee-b1e5-fcc2b86fdc17",
        "authorId" : "621f09f6-2f51-411e-b3a2-2730c8cfb0cf",
        "body" : "@wangyysde according to the guide:\r\n[name-arguments](https://github.com/kubernetes/community/blob/master/contributors/devel/sig-instrumentation/migration-to-structured-logging.md#name-arguments)\r\n\r\n>Examples of good keys (strongly suggested, will be extended when pattern emerge, no standard schema yet):\r\n>\r\n>cacheKey\r\n>cacheValue\r\n>CIDR\r\n> ...\r\n>dockerVersion\r\n>duration\r\n>err\r\n>job",
        "createdAt" : "2021-05-25T02:14:23Z",
        "updatedAt" : "2021-05-25T02:14:23Z",
        "lastEditedBy" : "621f09f6-2f51-411e-b3a2-2730c8cfb0cf",
        "tags" : [
        ]
      },
      {
        "id" : "f45e018e-a037-4337-a520-530bcada13d7",
        "parentId" : "f8f31c8d-3b7e-43ee-b1e5-fcc2b86fdc17",
        "authorId" : "c2702f95-b5ab-4472-9b9b-a3e60465f10f",
        "body" : "Do use err rather than error to match the key used by klog.ErrorS",
        "createdAt" : "2021-05-25T02:57:01Z",
        "updatedAt" : "2021-05-25T02:57:01Z",
        "lastEditedBy" : "c2702f95-b5ab-4472-9b9b-a3e60465f10f",
        "tags" : [
        ]
      },
      {
        "id" : "37b2c096-f101-4ee7-9bdb-788d09c16f50",
        "parentId" : "f8f31c8d-3b7e-43ee-b1e5-fcc2b86fdc17",
        "authorId" : "31a2ac00-6c67-4307-a4bc-bfd13f41ef27",
        "body" : "It's correct to use `err` per the guide.",
        "createdAt" : "2021-05-26T17:39:45Z",
        "updatedAt" : "2021-05-26T17:39:45Z",
        "lastEditedBy" : "31a2ac00-6c67-4307-a4bc-bfd13f41ef27",
        "tags" : [
        ]
      }
    ],
    "commit" : "9e257ec194f24f00de58a77f5d1968a7feaf1428",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +567,571 @@\t\t\t\"podUID\", uid,\n\t\t\t\"pod\", klog.KRef(status.podNamespace, status.podName),\n\t\t\t\"err\", err)\n\t\treturn\n\t}"
  },
  {
    "id" : "c0f7bc65-1db9-4337-939a-09e544bfba88",
    "prId" : 99836,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/99836#pullrequestreview-605086987",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6d43e2ce-275f-4281-9b5e-2b50757b0a83",
        "parentId" : null,
        "authorId" : "6ea93d56-a0ec-4969-ac42-11a78c2085e6",
        "body" : "```suggestion\r\n\t\t\t\"podUID\", pod.UID,\r\n\t\t\t\"pod\", klog.KObj(pod),\r\n```\r\nWe should prefer using `pod` over `podUID`. In cases where we log `podUID` and pod object is also available we should log both.",
        "createdAt" : "2021-03-05T12:24:50Z",
        "updatedAt" : "2021-03-05T15:29:00Z",
        "lastEditedBy" : "6ea93d56-a0ec-4969-ac42-11a78c2085e6",
        "tags" : [
        ]
      }
    ],
    "commit" : "dbe5476a2a1baa0508efe2a07dac9c5a504ab51a",
    "line" : 158,
    "diffHunk" : "@@ -1,1 +451,455 @@\t\tklog.V(5).InfoS(\"Status Manager: adding pod with new status to podStatusChannel\",\n\t\t\t\"pod\", klog.KObj(pod),\n\t\t\t\"podUID\", pod.UID,\n\t\t\t\"statusVersion\", newStatus.version,\n\t\t\t\"status\", newStatus.status)"
  },
  {
    "id" : "1e60824b-ea7f-4d39-acd1-7fef898d624d",
    "prId" : 88708,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/88708#pullrequestreview-369973489",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "78fcd647-112e-41a1-b99d-2203f493b72e",
        "parentId" : null,
        "authorId" : "e58080d6-2177-419f-a546-b51075d7bcb8",
        "body" : "nit: would it be easier to just deref `deleteOptions` here?",
        "createdAt" : "2020-03-05T20:42:43Z",
        "updatedAt" : "2020-03-05T23:00:15Z",
        "lastEditedBy" : "e58080d6-2177-419f-a546-b51075d7bcb8",
        "tags" : [
        ]
      },
      {
        "id" : "0404dbad-cdab-4f27-9442-36653b4d7293",
        "parentId" : "78fcd647-112e-41a1-b99d-2203f493b72e",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "alternately make the NewDeleteOptions helper return a non-pointer since that is what is needed everywhere now",
        "createdAt" : "2020-03-05T21:01:08Z",
        "updatedAt" : "2020-03-05T23:00:15Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "5a6393c2-e607-4f94-a965-ff1482f48bae",
        "parentId" : "78fcd647-112e-41a1-b99d-2203f493b72e",
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "I tried to avoid cleanup back and forths from pointer to value but keep the refactoring to a minimum.",
        "createdAt" : "2020-03-05T22:57:23Z",
        "updatedAt" : "2020-03-05T23:00:15Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      }
    ],
    "commit" : "76f85943787a5901a34a314a935712177edd2db0",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +590,594 @@\t\t\tPreconditions: metav1.NewUIDPreconditions(string(pod.UID)),\n\t\t}\n\t\terr = m.kubeClient.CoreV1().Pods(pod.Namespace).Delete(context.TODO(), pod.Name, deleteOptions)\n\t\tif err != nil {\n\t\t\tklog.Warningf(\"Failed to delete status for pod %q: %v\", format.Pod(pod), err)"
  },
  {
    "id" : "887fb92d-eb66-41b4-bb11-3224f5aa0c0e",
    "prId" : 88440,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/88440#pullrequestreview-365860648",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ad0a9e72-7729-44ec-97d8-f68755b9052c",
        "parentId" : null,
        "authorId" : "8e9f49fc-1050-4601-b81c-83bf660c5eb8",
        "body" : "for anyone wondering about this https://github.com/kubernetes/kubernetes/pull/88440#issuecomment-591468035",
        "createdAt" : "2020-02-27T17:34:56Z",
        "updatedAt" : "2020-03-04T18:34:41Z",
        "lastEditedBy" : "8e9f49fc-1050-4601-b81c-83bf660c5eb8",
        "tags" : [
        ]
      }
    ],
    "commit" : "8bc5cb01a9c1e7698ddd641963da08d09410dcfc",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +161,165 @@\t// syncPod and syncBatch share the same go routine to avoid sync races.\n\tgo wait.Forever(func() {\n\t\tfor {\n\t\t\tselect {\n\t\t\tcase syncRequest := <-m.podStatusChannel:"
  },
  {
    "id" : "0b78233f-790f-404a-90fc-048e25280844",
    "prId" : 62306,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/62306#pullrequestreview-122346355",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "17e5399a-3ceb-4483-b754-c0d043966b06",
        "parentId" : null,
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "Could you add a check in `SetPodStatus` to verify that kubelet doesn't populate conditions that are not owned by itself, and log an error if it does?",
        "createdAt" : "2018-05-22T19:43:03Z",
        "updatedAt" : "2018-05-30T18:34:10Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "9185ddab-05d0-4f5d-81c8-2ec6e035fb81",
        "parentId" : "17e5399a-3ceb-4483-b754-c0d043966b06",
        "authorId" : "e83108b8-1fb2-416b-9298-d5b70c14f708",
        "body" : "Added",
        "createdAt" : "2018-05-22T20:47:11Z",
        "updatedAt" : "2018-05-30T18:34:10Z",
        "lastEditedBy" : "e83108b8-1fb2-416b-9298-d5b70c14f708",
        "tags" : [
        ]
      }
    ],
    "commit" : "85e0d05ac76b943acb208ea70c6b806649706ea5",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +127,131 @@// This method normalizes the status before comparing so as to make sure that meaningless\n// changes will be ignored.\nfunc isPodStatusByKubeletEqual(oldStatus, status *v1.PodStatus) bool {\n\toldCopy := oldStatus.DeepCopy()\n\tfor _, c := range status.Conditions {"
  },
  {
    "id" : "cf7bf246-f582-4156-8403-9f25f5fa696b",
    "prId" : 62306,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/62306#pullrequestreview-124174479",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5a13d081-e380-4723-8ec3-0853e94271ed",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "This name makes me think it's literally merging.  Non-blocking, but maybe a better name?  Comment could use an example to clarify.",
        "createdAt" : "2018-05-29T21:11:46Z",
        "updatedAt" : "2018-05-30T18:34:10Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "85e0d05ac76b943acb208ea70c6b806649706ea5",
    "line" : 96,
    "diffHunk" : "@@ -1,1 +637,641 @@// mergePodStatus merges oldPodStatus and newPodStatus where pod conditions\n// not owned by kubelet is preserved from oldPodStatus\nfunc mergePodStatus(oldPodStatus, newPodStatus v1.PodStatus) v1.PodStatus {\n\tpodConditions := []v1.PodCondition{}\n\tfor _, c := range oldPodStatus.Conditions {"
  },
  {
    "id" : "a80863bb-35b7-463e-8af9-485aa2c9a2c5",
    "prId" : 41456,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/41456#pullrequestreview-22089478",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5327a1a7-2e9c-478c-9a63-69164771c580",
        "parentId" : null,
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "https://github.com/kubernetes/kubernetes/issues/41507 might be relevant here. ",
        "createdAt" : "2017-02-15T19:32:54Z",
        "updatedAt" : "2017-02-15T19:32:54Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      }
    ],
    "commit" : "1d38818326e5e98598833e21a08eb9bd1d258c3b",
    "line" : 69,
    "diffHunk" : "@@ -1,1 +479,483 @@\t\treturn false\n\t}\n\treturn !kubepod.IsMirrorPod(pod) && m.podDeletionSafety.OkToDeletePod(pod)\n}\n"
  },
  {
    "id" : "1b377bd5-81f2-4587-b0d7-d25d5bb901f4",
    "prId" : 32232,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3fe45aa1-f98a-4d39-9d0b-cc6bcc29e245",
        "parentId" : null,
        "authorId" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "body" : "nit: follow the same format used for logging elsewhere: https://github.com/kubernetes/kubernetes/blob/7c27a2686ff70a11bda20c27c9cc8dc154183357/pkg/kubelet/util/format/pod.go#L34\n\nBetter yet, add a helper function in that package that takes a the name, namespace, and UID.\n",
        "createdAt" : "2016-09-08T01:06:50Z",
        "updatedAt" : "2016-09-08T01:06:50Z",
        "lastEditedBy" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "tags" : [
        ]
      },
      {
        "id" : "e8233d50-15a6-4d5b-8f3d-d21230b40ffe",
        "parentId" : "3fe45aa1-f98a-4d39-9d0b-cc6bcc29e245",
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "ACK.\n",
        "createdAt" : "2016-09-08T17:44:14Z",
        "updatedAt" : "2016-09-08T17:44:14Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      }
    ],
    "commit" : "1b1f2766ed29015622c91ba1e094e0b9f8f86bf4",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +374,378 @@\t\t\tif mirrorUID, ok := podToMirror[uid]; ok {\n\t\t\t\tif mirrorUID == \"\" {\n\t\t\t\t\tglog.V(5).Infof(\"Static pod %q (%s/%s) does not have a corresponding mirror pod; skipping\", uid, status.podName, status.podNamespace)\n\t\t\t\t\tcontinue\n\t\t\t\t}"
  }
]