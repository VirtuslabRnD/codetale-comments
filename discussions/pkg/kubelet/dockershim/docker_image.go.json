[
  {
    "id" : "ac33e02f-6e09-4d4a-8b23-93905757bf95",
    "prId" : 70647,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/70647#pullrequestreview-208839728",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e928f54b-410b-4326-81e6-67582647273b",
        "parentId" : null,
        "authorId" : "3f681241-1a29-4fbf-bddc-1df89a871240",
        "body" : "wouldn't it start returning image not found error after all tags are deleted?",
        "createdAt" : "2019-02-28T00:32:40Z",
        "updatedAt" : "2019-02-28T00:32:40Z",
        "lastEditedBy" : "3f681241-1a29-4fbf-bddc-1df89a871240",
        "tags" : [
        ]
      }
    ],
    "commit" : "9e8df0f82a1538c5d39e317b0834fe1eea6f3669",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +138,142 @@\tfor _, image := range images {\n\t\tif _, err := ds.client.RemoveImage(image, dockertypes.ImageRemoveOptions{PruneChildren: true}); err != nil && !libdocker.IsImageNotFoundError(err) {\n\t\t\treturn nil, err\n\t\t}\n\t}"
  },
  {
    "id" : "a7fa54d8-ee29-4f9e-aebf-eaa9e3ddf843",
    "prId" : 54125,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/54125#pullrequestreview-70721491",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "803f7c57-e918-4705-91e2-915b12015bb1",
        "parentId" : null,
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "Why do we need to call this now, but not before? Is this a bug as well?",
        "createdAt" : "2017-10-19T15:54:49Z",
        "updatedAt" : "2017-10-19T15:54:49Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "d3691230-4967-4eb4-8799-627f59c6f0ee",
        "parentId" : "803f7c57-e918-4705-91e2-915b12015bb1",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "I think so, dockershim will panic without this.",
        "createdAt" : "2017-10-20T00:50:43Z",
        "updatedAt" : "2017-10-20T00:51:47Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      }
    ],
    "commit" : "77ed72f583a70229f68153009d3208f2d202bccb",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +36,40 @@\tif filter != nil {\n\t\tif filter.GetImage().GetImage() != \"\" {\n\t\t\topts.Filters = dockerfilters.NewArgs()\n\t\t\topts.Filters.Add(\"reference\", filter.GetImage().GetImage())\n\t\t}"
  },
  {
    "id" : "7ef7e0e5-7c74-448f-9b30-eeb2be0b46a0",
    "prId" : 48308,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/48308#pullrequestreview-49858504",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c59b0920-fa94-4c26-93d2-94929b933ad1",
        "parentId" : null,
        "authorId" : "ed12fa4b-7790-4e88-b7d8-5d6a06b0b9f3",
        "body" : "Followed the implementation at https://github.com/moby/moby/blob/master/client/image_list.go#L21-L23. I guess we want to add a test for filter in ListImage in a separate PR?",
        "createdAt" : "2017-06-30T16:57:48Z",
        "updatedAt" : "2017-07-13T21:31:31Z",
        "lastEditedBy" : "ed12fa4b-7790-4e88-b7d8-5d6a06b0b9f3",
        "tags" : [
        ]
      },
      {
        "id" : "f3fd3eab-f9d7-4c0e-b0c6-d2b7929940ef",
        "parentId" : "c59b0920-fa94-4c26-93d2-94929b933ad1",
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "SGTM",
        "createdAt" : "2017-07-13T18:02:06Z",
        "updatedAt" : "2017-07-13T21:31:31Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "020a03b862eef062ed5515aa477a61f458dfa5c3",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +35,39 @@\tif filter != nil {\n\t\tif imgSpec := filter.GetImage(); imgSpec != nil {\n\t\t\topts.Filters.Add(\"reference\", imgSpec.Image)\n\t\t}\n\t}"
  },
  {
    "id" : "b2684236-d088-4149-b61b-98779e0b432c",
    "prId" : 34380,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/34380#pullrequestreview-3906709",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2383e908-92d6-4fb0-897d-6597b4d090ad",
        "parentId" : null,
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "s/doesn't/is not\n",
        "createdAt" : "2016-10-12T15:50:36Z",
        "updatedAt" : "2016-10-12T16:21:23Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "b57b264a-14c7-49ca-8f97-95eb53f6290a",
        "parentId" : "2383e908-92d6-4fb0-897d-6597b4d090ad",
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "ACK\n",
        "createdAt" : "2016-10-12T16:07:22Z",
        "updatedAt" : "2016-10-12T16:21:23Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      }
    ],
    "commit" : "afa3414779f9699314cefe8e004ee4c833e0ec0c",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +51,55 @@}\n\n// ImageStatus returns the status of the image, returns nil if the image doesn't present.\nfunc (ds *dockerService) ImageStatus(image *runtimeApi.ImageSpec) (*runtimeApi.Image, error) {\n\timageInspect, err := ds.client.InspectImageByRef(image.GetImage())"
  },
  {
    "id" : "45820d35-6268-4925-b2c9-4b1b2389d4db",
    "prId" : 34380,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/34380#pullrequestreview-3906804",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "87b7fc30-fdcd-4373-b422-1f91bd581852",
        "parentId" : null,
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "Is the assumption necessary?\nIf we want to make the assumption, maybe we should switch to using `ImageRef`.\n",
        "createdAt" : "2016-10-12T15:53:16Z",
        "updatedAt" : "2016-10-12T16:21:23Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "905f913a-466b-4f9e-9fa8-49cd172dc3f4",
        "parentId" : "87b7fc30-fdcd-4373-b422-1f91bd581852",
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "> Is the assumption necessary?\n\nNo, the comment is only for this PR. I'll send another PR to change the API a bit.\n\n> If we want to make the assumption, maybe we should switch to using ImageRef.\n\nYeah, I think so.\n",
        "createdAt" : "2016-10-12T16:07:47Z",
        "updatedAt" : "2016-10-12T16:21:23Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      }
    ],
    "commit" : "afa3414779f9699314cefe8e004ee4c833e0ec0c",
    "line" : 50,
    "diffHunk" : "@@ -1,1 +80,84 @@func (ds *dockerService) RemoveImage(image *runtimeApi.ImageSpec) error {\n\t// If the image has multiple tags, we need to remove all the tags\n\t// TODO: We assume image.Image is image ID here, which is true in the current implementation\n\t// of kubelet, but we should still clarify this in CRI.\n\timageInspect, err := ds.client.InspectImageByID(image.GetImage())"
  }
]