[
  {
    "id" : "4a28d387-8af7-471c-bae2-b13acef8a8b1",
    "prId" : 78323,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/78323#pullrequestreview-242005206",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "adcbcb4b-5b71-410c-8a89-922e9375cc40",
        "parentId" : null,
        "authorId" : "d7870cae-47b0-4c8e-8527-be8fc4be86de",
        "body" : "```suggestion\r\n                runtimeHandlerEmpty := r.GetRuntimeHandler() == \"\"\r\n                runtimeHandlerIsDocker := r.GetRuntimeHandler() == runtimeName\r\n\t\tif !runtimeHandlerEmpty && !runtimeHandlerIsDocker {\r\n```\r\n\r\nsmall nit, but could this be slightly more readable with a descriptive variable name?",
        "createdAt" : "2019-05-25T14:43:54Z",
        "updatedAt" : "2019-05-25T14:44:21Z",
        "lastEditedBy" : "d7870cae-47b0-4c8e-8527-be8fc4be86de",
        "tags" : [
        ]
      }
    ],
    "commit" : "19a588eeda50ffb452c15d3017d4872b12f0d916",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +97,101 @@\n\t// Step 2: Create the sandbox container.\n\tif r.GetRuntimeHandler() != \"\" && r.GetRuntimeHandler() != runtimeName {\n\t\treturn nil, fmt.Errorf(\"RuntimeHandler %q not supported\", r.GetRuntimeHandler())\n\t}"
  },
  {
    "id" : "e3e48990-30c2-4b25-813e-4c23356f6dee",
    "prId" : 58751,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/58751#pullrequestreview-91590933",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fcd4ad01-4e9d-4aa6-9245-3206216056ef",
        "parentId" : null,
        "authorId" : "0e5e4fe2-e8e1-46de-a4a0-78e4e94047d6",
        "body" : "Do we need apply the isolation specific config to sandbox? For Windows Hyper-V container, the POD infra container is not used and needs to be minimal, and therefore process container is sufficient. ",
        "createdAt" : "2018-01-24T23:24:21Z",
        "updatedAt" : "2018-01-30T05:00:21Z",
        "lastEditedBy" : "0e5e4fe2-e8e1-46de-a4a0-78e4e94047d6",
        "tags" : [
        ]
      },
      {
        "id" : "6d497887-a330-4d98-9a83-d5e3fb1406b6",
        "parentId" : "fcd4ad01-4e9d-4aa6-9245-3206216056ef",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "It is not used now, but not future. I think we'd better keep sandbox same with containers, WDYT?",
        "createdAt" : "2018-01-25T05:46:26Z",
        "updatedAt" : "2018-01-30T05:00:21Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      },
      {
        "id" : "6393276c-fc9d-4ed2-be5a-0a073cc15924",
        "parentId" : "fcd4ad01-4e9d-4aa6-9245-3206216056ef",
        "authorId" : "0e5e4fe2-e8e1-46de-a4a0-78e4e94047d6",
        "body" : "That's fine with me. We can reserve it as place holder.",
        "createdAt" : "2018-01-25T16:47:45Z",
        "updatedAt" : "2018-01-30T05:00:21Z",
        "lastEditedBy" : "0e5e4fe2-e8e1-46de-a4a0-78e4e94047d6",
        "tags" : [
        ]
      }
    ],
    "commit" : "a6d0cd0f01ff9cb84efe355e9c893e9deca16cc2",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +589,593 @@\thc.SecurityOpt = append(hc.SecurityOpt, securityOpts...)\n\n\tapplyExperimentalCreateConfig(createConfig, c.Annotations)\n\treturn createConfig, nil\n}"
  },
  {
    "id" : "fdcc0cde-14e5-4435-bf7f-2fd2516d5748",
    "prId" : 46744,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/46744#pullrequestreview-41912877",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a8fb8db0-4c18-4929-9b30-74fe0c7ecf87",
        "parentId" : null,
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "By returning only the IP, windows won't be able to error out. Should be ok for now as a workaround.",
        "createdAt" : "2017-06-02T17:53:27Z",
        "updatedAt" : "2017-06-02T17:53:27Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "9295b482-560c-46b8-a6a9-66245533fede",
        "parentId" : "a8fb8db0-4c18-4929-9b30-74fe0c7ecf87",
        "authorId" : "dd7ae991-dbbc-4a29-896b-4334bdee748b",
        "body" : "agree, and we don't need this method if we turn to use sandbox.",
        "createdAt" : "2017-06-03T04:32:16Z",
        "updatedAt" : "2017-06-03T04:32:16Z",
        "lastEditedBy" : "dd7ae991-dbbc-4a29-896b-4334bdee748b",
        "tags" : [
        ]
      }
    ],
    "commit" : "5936e81b2e0d4b2d2090c763160da96cd82eb649",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +322,326 @@\t// TODO: Remove this when sandbox is available on windows\n\t// This is a workaround for windows, where sandbox is not in use, and pod IP is determined through containers belonging to the Pod.\n\tif IP = ds.determinePodIPBySandboxID(podSandboxID); IP == \"\" {\n\t\tIP, err = ds.getIP(r)\n\t\tif err != nil {"
  },
  {
    "id" : "2209093f-ddca-401d-8f8d-a057c41d9828",
    "prId" : 43940,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/43940#pullrequestreview-30591820",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fa895317-1ead-48ac-b6bc-ea4b2ac63991",
        "parentId" : null,
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "This doesn't cleanup the log symlink (see https://github.com/kubernetes/kubernetes/blob/master/pkg/kubelet/dockershim/docker_container.go#L296-L309).\r\n\r\nAnd I'm not sure whether this will introduce more problem when contianer remove logic become more complex in the future.\r\n\r\nCould we reuse `ListContainers` and `RemoveContainer` in dockershim? @yujuhong ",
        "createdAt" : "2017-04-03T18:11:48Z",
        "updatedAt" : "2017-04-05T05:37:17Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      }
    ],
    "commit" : "b9c1d6c7c8d7755a1966f9386c02d73b3b5f3979",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +217,221 @@func (ds *dockerService) RemovePodSandbox(podSandboxID string) error {\n\tvar errs []error\n\topts := dockertypes.ContainerListOptions{All: true}\n\n\topts.Filter = dockerfilters.NewArgs()"
  },
  {
    "id" : "c7dc7351-ce38-493a-b3b3-e03c897609e3",
    "prId" : 43940,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/43940#pullrequestreview-30959962",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "621a9fdd-e0eb-42b6-a05a-296eb6cea65b",
        "parentId" : null,
        "authorId" : "9a0adb95-53bd-4ddc-b5fe-11ad6bdfe165",
        "body" : "@Random-Liu Use `ds.RemoveContainer()` here instead of `ds.client.RemoveContainer()` to use contianer remove logic.",
        "createdAt" : "2017-04-05T05:40:22Z",
        "updatedAt" : "2017-04-05T05:40:22Z",
        "lastEditedBy" : "9a0adb95-53bd-4ddc-b5fe-11ad6bdfe165",
        "tags" : [
        ]
      }
    ],
    "commit" : "b9c1d6c7c8d7755a1966f9386c02d73b3b5f3979",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +230,234 @@\t// Remove all containers in the sandbox.\n\tfor i := range containers {\n\t\tif err := ds.RemoveContainer(containers[i].ID); err != nil && !dockertools.IsContainerNotFoundError(err) {\n\t\t\terrs = append(errs, err)\n\t\t}"
  },
  {
    "id" : "d44b2624-7d79-4356-92e2-8431829f0096",
    "prId" : 43879,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/43879#pullrequestreview-40434724",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ef449153-be82-4c18-86ef-3e4c2e744bfd",
        "parentId" : null,
        "authorId" : "e83108b8-1fb2-416b-9298-d5b70c14f708",
        "body" : "Correct me if I am wrong, there is still a race here right? ListPodSandbox may see the sandbox container but getNetworkReady returns unknown.\r\n",
        "createdAt" : "2017-05-24T20:48:45Z",
        "updatedAt" : "2017-05-24T21:13:15Z",
        "lastEditedBy" : "e83108b8-1fb2-416b-9298-d5b70c14f708",
        "tags" : [
        ]
      },
      {
        "id" : "5d79af8e-26c0-4b64-9486-ae054e50f530",
        "parentId" : "ef449153-be82-4c18-86ef-3e4c2e744bfd",
        "authorId" : "e83108b8-1fb2-416b-9298-d5b70c14f708",
        "body" : "I cannot think of a better way to address this. Not much options:\r\n\r\n1. kubelet needs to know the RunPodSandbox has not finish. Do not call PodSandboxStatus (Not possible since sandbox ID is unknown to kubelet)\r\n2. dockershim needs to know RunPodSandbox has not finish. Skip getting ip from network plugin. \r\n\r\nI am willing to settle with the current solution.\r\n\r\n",
        "createdAt" : "2017-05-24T21:07:43Z",
        "updatedAt" : "2017-05-24T21:13:15Z",
        "lastEditedBy" : "e83108b8-1fb2-416b-9298-d5b70c14f708",
        "tags" : [
        ]
      },
      {
        "id" : "8d62c1cf-e73e-4e03-90f5-888228e25f28",
        "parentId" : "ef449153-be82-4c18-86ef-3e4c2e744bfd",
        "authorId" : "57f729dd-988a-4d1a-83bf-ee70bf637c64",
        "body" : "@freehan Yes, still a small race.  But IMHO SetUpPod is what takes the longest time, and that's what was causing the race.  We can't really address that unless we can use name/namespace as the networkReady key, and we can't do that unless we can add that to the checkpoint.\r\n\r\nOne option I toyed with was adding docker container labels with the name/namespace, which we could get from ListContainers().  What do you think?  We already use labels int he Checkpoint code, and the rkt runtime does something similar.  However, I'd like to do that as a follow-up PR if that seems workable...",
        "createdAt" : "2017-05-26T02:31:22Z",
        "updatedAt" : "2017-05-26T02:31:29Z",
        "lastEditedBy" : "57f729dd-988a-4d1a-83bf-ee70bf637c64",
        "tags" : [
        ]
      }
    ],
    "commit" : "02200ba7521ad9fda33c0878c9d6db5f7ed8e33f",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +103,107 @@\t}\n\n\tds.setNetworkReady(createResp.ID, false)\n\n\t// Step 3: Create Sandbox Checkpoint."
  },
  {
    "id" : "b52f8bb6-e2b2-4c95-a9b1-b68ed8210de8",
    "prId" : 43879,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/43879#pullrequestreview-40434870",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "319c53af-2abf-4ee6-a24f-15c49ea807ad",
        "parentId" : null,
        "authorId" : "e83108b8-1fb2-416b-9298-d5b70c14f708",
        "body" : "no warning?",
        "createdAt" : "2017-05-24T20:55:08Z",
        "updatedAt" : "2017-05-24T21:13:15Z",
        "lastEditedBy" : "e83108b8-1fb2-416b-9298-d5b70c14f708",
        "tags" : [
        ]
      },
      {
        "id" : "58f02be9-1154-4593-82cf-340e29490093",
        "parentId" : "319c53af-2abf-4ee6-a24f-15c49ea807ad",
        "authorId" : "57f729dd-988a-4d1a-83bf-ee70bf637c64",
        "body" : "@freehan no, that's mostly the point of this PR.  We don't want to warn in *this* function, but we want to pass the warning up to higher levels, eg the caller of PodSandboxStatus() so it can do whatever it wants with that information, whether it's warn or ignore.",
        "createdAt" : "2017-05-26T02:32:58Z",
        "updatedAt" : "2017-05-26T02:32:58Z",
        "lastEditedBy" : "57f729dd-988a-4d1a-83bf-ee70bf637c64",
        "tags" : [
        ]
      }
    ],
    "commit" : "02200ba7521ad9fda33c0878c9d6db5f7ed8e33f",
    "line" : 117,
    "diffHunk" : "@@ -1,1 +318,322 @@\n\tip, err := ds.getIPFromPlugin(sandbox)\n\tif err == nil {\n\t\treturn ip, nil\n\t}"
  },
  {
    "id" : "1de6a8a9-253a-4435-9270-89c5d065beae",
    "prId" : 43368,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/43368#pullrequestreview-28030556",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "16c2d9bd-6f74-42c7-9f0e-036d3ff9d39b",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "s/resolf/resolv",
        "createdAt" : "2017-03-20T19:12:36Z",
        "updatedAt" : "2017-03-20T19:13:56Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "2c3ba5fd-fdbf-4134-8206-6076e41b7f6e",
        "parentId" : "16c2d9bd-6f74-42c7-9f0e-036d3ff9d39b",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "Ack. Will open another pr to fix this.",
        "createdAt" : "2017-03-21T06:21:02Z",
        "updatedAt" : "2017-03-21T06:21:02Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      }
    ],
    "commit" : "95c3782043337e3d3e03c139c9dd0a8d0534b9fb",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +107,111 @@\n\t\tif err := dockertools.RewriteResolvFile(containerInfo.ResolvConfPath, dnsConfig.Servers, dnsConfig.Searches, len(dnsConfig.Options) > 0); err != nil {\n\t\t\treturn createResp.ID, fmt.Errorf(\"rewrite resolf.conf faield for pod %q: %v\", config.Metadata.Name, err)\n\t\t}\n\t}"
  },
  {
    "id" : "aa9218f4-e822-4d45-8b73-2ca99c88bb48",
    "prId" : 41434,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/41434#pullrequestreview-22129978",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "284a393c-3a8b-4f07-bb6c-20b10f7c055a",
        "parentId" : null,
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "What happens if the sandbox container no longer exists?",
        "createdAt" : "2017-02-15T22:23:01Z",
        "updatedAt" : "2017-02-15T22:23:01Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "46ce75f3-0b66-4e59-95ad-588303f33481",
        "parentId" : "284a393c-3a8b-4f07-bb6c-20b10f7c055a",
        "authorId" : "e83108b8-1fb2-416b-9298-d5b70c14f708",
        "body" : "It will try to retrieve sandbox checkpoint instead.\r\n\r\nIf both container and checkpoint does not exist (This actually happens when kubelet internal cache still has the sandbox but GC already clean it up.), then we only has sandbox ID. We can still proceed to teardown with only the ID, there is no network namespace either, then CNI bridge plugin will just try to do best effort clean up.",
        "createdAt" : "2017-02-15T22:33:13Z",
        "updatedAt" : "2017-02-15T22:33:13Z",
        "lastEditedBy" : "e83108b8-1fb2-416b-9298-d5b70c14f708",
        "tags" : [
        ]
      },
      {
        "id" : "2669f45a-07e2-406a-a9f4-21a6d1dff11f",
        "parentId" : "284a393c-3a8b-4f07-bb6c-20b10f7c055a",
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "ack",
        "createdAt" : "2017-02-15T22:39:19Z",
        "updatedAt" : "2017-02-15T22:39:19Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "4ca2642dd3a29cfb61b558792ba323888dbc2e1f",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +119,123 @@\tneedNetworkTearDown := false\n\n\t// Try to retrieve sandbox information from docker daemon or sandbox checkpoint\n\tstatus, statusErr := ds.PodSandboxStatus(podSandboxID)\n\tif statusErr == nil {"
  },
  {
    "id" : "f075aeb0-cfca-434f-9101-40a98b956333",
    "prId" : 40448,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/40448#pullrequestreview-18507841",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "35af5004-3e37-4982-a117-82f83e4088d6",
        "parentId" : null,
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "Should we do this for regular container creation as well?",
        "createdAt" : "2017-01-25T21:24:58Z",
        "updatedAt" : "2017-01-25T22:15:48Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "f20ca70e-eacd-4c68-b5a9-363b10f8795c",
        "parentId" : "35af5004-3e37-4982-a117-82f83e4088d6",
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "I think so.",
        "createdAt" : "2017-01-25T21:32:57Z",
        "updatedAt" : "2017-01-25T22:15:48Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      }
    ],
    "commit" : "90e91a8989012f0948f512826db35df61559ee35",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +71,75 @@\tcreateResp, err := ds.client.CreateContainer(*createConfig)\n\tif err != nil {\n\t\tcreateResp, err = recoverFromCreationConflictIfNeeded(ds.client, *createConfig, err)\n\t}\n"
  },
  {
    "id" : "e2786fad-ac77-4db0-97ba-3e02a1774a0b",
    "prId" : 35490,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/35490#pullrequestreview-6497766",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "50235398-355b-4ff3-954c-e810e333cfab",
        "parentId" : null,
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "To make the implementation consistent with the TODO comment, you need to return the error here. \n",
        "createdAt" : "2016-10-31T17:47:40Z",
        "updatedAt" : "2016-11-01T01:24:36Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "4fa01b64-f62e-4a95-85b6-6397bb346e89",
        "parentId" : "50235398-355b-4ff3-954c-e810e333cfab",
        "authorId" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "body" : "We're eating the error for the specified reason. we _want_ to return the error thereby forcing a retry, but can't because of the \"when it doesn't find eth0\" case. \n",
        "createdAt" : "2016-10-31T18:32:44Z",
        "updatedAt" : "2016-11-01T01:24:36Z",
        "lastEditedBy" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "tags" : [
        ]
      }
    ],
    "commit" : "2941aea88e80e94f2698241a4ac9925145664470",
    "line" : 61,
    "diffHunk" : "@@ -1,1 +116,120 @@\t\t\t// conf changed etc). In theory, it should teardown everything else\n\t\t\t// so there's no need to retry.\n\t\t\tglog.Errorf(\"Failed to teardown sandbox %v for pod %v/%v: %v\", m.GetNamespace(), m.GetName(), podSandboxID, err)\n\t\t}\n\t}"
  },
  {
    "id" : "c0746ab6-b340-4c54-9692-e6ea0d30aab7",
    "prId" : 29700,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8d8b35ee-7517-41dd-8823-55b8978e6642",
        "parentId" : null,
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "I think the sandbox container should be removed if starting failed. \n",
        "createdAt" : "2016-07-29T23:44:58Z",
        "updatedAt" : "2016-08-02T22:24:57Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      },
      {
        "id" : "befc06a0-16c2-44eb-9882-7e8a98c1366f",
        "parentId" : "8d8b35ee-7517-41dd-8823-55b8978e6642",
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "I think it's ok to rely on the GC component to remove it.\n",
        "createdAt" : "2016-08-01T21:36:48Z",
        "updatedAt" : "2016-08-02T22:24:57Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "5960d87d2142055cd29ebbce0243652c4adc5742",
    "line" : null,
    "diffHunk" : "@@ -1,1 +62,66 @@\t// Assume kubelet's garbage collector would remove the sandbox later, if\n\t// startContainer failed.\n\terr = ds.StartContainer(createResp.ID)\n\treturn createResp.ID, err\n}"
  },
  {
    "id" : "3c47b364-6e6d-4006-9fb7-993d4f131374",
    "prId" : 29700,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "15688a10-7451-46ee-b071-5e75489e25a9",
        "parentId" : null,
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "Just curious, will we really use these values as default values in the future? How did we get the default value?\n",
        "createdAt" : "2016-08-02T17:51:26Z",
        "updatedAt" : "2016-08-02T22:24:57Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      },
      {
        "id" : "a26fe039-6f92-416a-a03f-9607b8228ffc",
        "parentId" : "15688a10-7451-46ee-b071-5e75489e25a9",
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "I think we'll continue using them since they are implementation details of docker.\n\nGood question. I am not sure how we got the default, but I think as long as the sandbox container doesn't consume much resource, the values should be ok.\n",
        "createdAt" : "2016-08-02T18:26:25Z",
        "updatedAt" : "2016-08-02T22:24:57Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "548d3265-4625-4228-b12f-aa599681b028",
        "parentId" : "15688a10-7451-46ee-b071-5e75489e25a9",
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "Do we already have these default values somewhere in our current code, or they are added in this PR? I couldn't find them in our code, maybe I missed something. :)\n",
        "createdAt" : "2016-08-02T18:29:43Z",
        "updatedAt" : "2016-08-02T22:24:57Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      },
      {
        "id" : "a765e7a6-bf23-43f8-938c-18c6d71cb2be",
        "parentId" : "15688a10-7451-46ee-b071-5e75489e25a9",
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "oom score: https://github.com/kubernetes/kubernetes/blob/ef0c9f0c5b8efbba948a0be2c98d9d2e32e0b68c/pkg/kubelet/qos/policy.go#L24\n\ncpu share: https://github.com/kubernetes/kubernetes/blob/59ca5986dd8cba39c4933160c11896c401e58a4f/pkg/kubelet/dockertools/docker.go#L373\n\nbut you're right, there are no default values for cpu quota and period:\nhttps://github.com/kubernetes/kubernetes/blob/59ca5986dd8cba39c4933160c11896c401e58a4f/pkg/kubelet/dockertools/docker.go#L350\nI'll fix them.\n",
        "createdAt" : "2016-08-02T18:46:46Z",
        "updatedAt" : "2016-08-02T22:24:57Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "e32839c3-1234-41ca-b480-9b071456996d",
        "parentId" : "15688a10-7451-46ee-b071-5e75489e25a9",
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "Ha, I see, thanks a lot for explaining.\n",
        "createdAt" : "2016-08-02T21:01:59Z",
        "updatedAt" : "2016-08-02T22:24:57Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      }
    ],
    "commit" : "5960d87d2142055cd29ebbce0243652c4adc5742",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +30,34 @@\tdefaultSandboxImage = \"gcr.io/google_containers/pause-amd64:3.0\"\n\n\t// Various default sandbox resources requests/limits.\n\tdefaultSandboxCPUshares int64 = 2\n\tdefaultSandboxOOMScore  int   = -999"
  },
  {
    "id" : "cbbd9de7-f8d4-46c2-b0d7-b28d8fce3677",
    "prId" : 29700,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9f1d9481-58c7-4eb5-a907-9a63ae2b19e1",
        "parentId" : null,
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "Same question again, should we handle the host network logic at higher level or here.\n\nCurrently, we only set hostname, dns, dnssearch when the pod is not using host network.\nWe can handle this in either higher level or at specific runtime level.\n- If we handle it at higher level, what should be passed here, empty value?\n- If we handle it at this level, what should be passed here, pod hostname?\n",
        "createdAt" : "2016-08-02T18:23:50Z",
        "updatedAt" : "2016-08-02T22:24:57Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      },
      {
        "id" : "be0959a1-aba4-4e5f-8f2d-a3aeb8e4dcf6",
        "parentId" : "9f1d9481-58c7-4eb5-a907-9a63ae2b19e1",
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "The logic should be common across runtimes, so it belongs in kubelet itself.\n",
        "createdAt" : "2016-08-02T21:11:58Z",
        "updatedAt" : "2016-08-02T22:24:57Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "53b7d264-f299-4f3e-b394-646ad601f43e",
        "parentId" : "9f1d9481-58c7-4eb5-a907-9a63ae2b19e1",
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "ACK~\n",
        "createdAt" : "2016-08-02T21:33:50Z",
        "updatedAt" : "2016-08-02T22:24:57Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      }
    ],
    "commit" : "5960d87d2142055cd29ebbce0243652c4adc5742",
    "line" : 186,
    "diffHunk" : "@@ -1,1 +196,200 @@\t\tName: c.GetName(),\n\t\tConfig: &dockercontainer.Config{\n\t\t\tHostname: c.GetHostname(),\n\t\t\t// TODO: Handle environment variables.\n\t\t\tImage:  image,"
  },
  {
    "id" : "a96a67c8-ad37-44f0-93e1-190f7e00f675",
    "prId" : 29700,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e58e3d59-9fbd-43bf-91d1-aa57c3f580f5",
        "parentId" : null,
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "According to the comment, we should stop the other containers. :)\nWe should either change the comment, change the code here or add a TODO.\n",
        "createdAt" : "2016-08-02T18:49:22Z",
        "updatedAt" : "2016-08-02T22:24:57Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      },
      {
        "id" : "14910c51-0131-4e51-ada0-f37be059e938",
        "parentId" : "e58e3d59-9fbd-43bf-91d1-aa57c3f580f5",
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "Good catch. Added a TODO. I think in most cases, kubelet will only want to stop the sandbox when all containers are gone.\n",
        "createdAt" : "2016-08-02T21:13:37Z",
        "updatedAt" : "2016-08-02T22:24:57Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "99dd4312-9bdb-4beb-a865-76f56d14b371",
        "parentId" : "e58e3d59-9fbd-43bf-91d1-aa57c3f580f5",
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "@yujuhong Yeah, I think the code added won't be used in most cases. But we've explicitly defined the behaviour in runtime interface, we may want to conform with it. :)\n",
        "createdAt" : "2016-08-02T21:29:44Z",
        "updatedAt" : "2016-08-02T22:24:57Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      }
    ],
    "commit" : "5960d87d2142055cd29ebbce0243652c4adc5742",
    "line" : 55,
    "diffHunk" : "@@ -1,1 +69,73 @@// sandbox, they should be force terminated.\nfunc (ds *dockerService) StopPodSandbox(podSandboxID string) error {\n\treturn ds.client.StopContainer(podSandboxID, defaultSandboxGracePeriod)\n\t// TODO: Stop all running containers in the sandbox.\n}"
  },
  {
    "id" : "3c15e187-0da2-4ad6-b54c-e906fea9e22e",
    "prId" : 29700,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "28e54ec8-cd30-4e99-bc14-2c5f0a59c13d",
        "parentId" : null,
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "ditto.\n",
        "createdAt" : "2016-08-02T18:49:27Z",
        "updatedAt" : "2016-08-02T22:24:57Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      },
      {
        "id" : "966f3ada-6c0f-4262-8528-04f302366e12",
        "parentId" : "28e54ec8-cd30-4e99-bc14-2c5f0a59c13d",
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "added a TODO\n",
        "createdAt" : "2016-08-02T21:14:14Z",
        "updatedAt" : "2016-08-02T22:24:57Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "5960d87d2142055cd29ebbce0243652c4adc5742",
    "line" : 63,
    "diffHunk" : "@@ -1,1 +76,80 @@// sandbox, they should be forcibly deleted.\nfunc (ds *dockerService) DeletePodSandbox(podSandboxID string) error {\n\treturn ds.client.RemoveContainer(podSandboxID, dockertypes.ContainerRemoveOptions{RemoveVolumes: true})\n\t// TODO: remove all containers in the sandbox.\n}"
  },
  {
    "id" : "0301099d-65d7-46d3-b13f-870093e467fc",
    "prId" : 29700,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "03edd9e4-e053-4abc-aa42-75e25e69373c",
        "parentId" : null,
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "What about the `Options`? We can populate it with `HostConfig`, do we need to do that?\n",
        "createdAt" : "2016-08-02T21:11:41Z",
        "updatedAt" : "2016-08-02T22:24:57Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      },
      {
        "id" : "8d4ff5f8-e8db-4219-99b4-9939b2c08b2a",
        "parentId" : "03edd9e4-e053-4abc-aa42-75e25e69373c",
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "What `Options`? \n",
        "createdAt" : "2016-08-02T21:15:38Z",
        "updatedAt" : "2016-08-02T22:24:57Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "2df80aa3-6e94-4dd8-b264-f00343456f4a",
        "parentId" : "03edd9e4-e053-4abc-aa42-75e25e69373c",
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "This one: https://github.com/kubernetes/kubernetes/blob/master/pkg/kubelet/api/v1alpha1/runtime/api.pb.go#L768\n",
        "createdAt" : "2016-08-02T21:30:56Z",
        "updatedAt" : "2016-08-02T22:24:57Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      },
      {
        "id" : "0ae06a68-4608-471a-b344-8152ee66e73b",
        "parentId" : "03edd9e4-e053-4abc-aa42-75e25e69373c",
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "That's only valid for container creation. I think it's an artifact from reusing the same type here. \n\n/cc @feiskyer \n",
        "createdAt" : "2016-08-02T21:39:43Z",
        "updatedAt" : "2016-08-02T22:24:57Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "ec89044e-fc51-4d70-a962-edac2884d339",
        "parentId" : "03edd9e4-e053-4abc-aa42-75e25e69373c",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "Right, only for creation.\n",
        "createdAt" : "2016-08-02T23:10:20Z",
        "updatedAt" : "2016-08-02T23:10:20Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      }
    ],
    "commit" : "5960d87d2142055cd29ebbce0243652c4adc5742",
    "line" : null,
    "diffHunk" : "@@ -1,1 +128,132 @@\t\tLabels:  r.Config.Labels,\n\t\tNetwork: network,\n\t\tLinux:   &runtimeApi.LinuxPodSandboxStatus{Namespaces: &runtimeApi.Namespace{Network: &netNS}},\n\t}, nil\n}"
  },
  {
    "id" : "241acaa9-fc13-45de-9763-7f9bfa721554",
    "prId" : 29700,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b0e21ba5-deae-4e74-bcc2-831436a51057",
        "parentId" : null,
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "Question: Do we need to filter out docker specific labels before returning it to the higher layer?\n",
        "createdAt" : "2016-08-02T21:23:33Z",
        "updatedAt" : "2016-08-02T22:24:57Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      },
      {
        "id" : "23da23de-c30a-41f9-a831-e32fe4ea6bb4",
        "parentId" : "b0e21ba5-deae-4e74-bcc2-831436a51057",
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "Yes, amended the TODO for this.\n",
        "createdAt" : "2016-08-02T21:36:37Z",
        "updatedAt" : "2016-08-02T22:24:57Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "5960d87d2142055cd29ebbce0243652c4adc5742",
    "line" : null,
    "diffHunk" : "@@ -1,1 +126,130 @@\t\t// these annotations will be read back as labels. Need to fix this.\n\t\t// Also filter out labels only relevant to this shim.\n\t\tLabels:  r.Config.Labels,\n\t\tNetwork: network,\n\t\tLinux:   &runtimeApi.LinuxPodSandboxStatus{Namespaces: &runtimeApi.Namespace{Network: &netNS}},"
  }
]