[
  {
    "id" : "7a797cb6-a544-4d17-8870-84668943c8eb",
    "prId" : 100200,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/100200#pullrequestreview-628013816",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "25119cf7-9a21-40a7-91a8-3f11ddc46773",
        "parentId" : null,
        "authorId" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "body" : "Why is this line needed?",
        "createdAt" : "2021-04-05T15:23:16Z",
        "updatedAt" : "2021-04-07T19:38:42Z",
        "lastEditedBy" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "tags" : [
        ]
      },
      {
        "id" : "22c554a0-98bc-473c-b477-356f2a65aa72",
        "parentId" : "25119cf7-9a21-40a7-91a8-3f11ddc46773",
        "authorId" : "aa111d77-fac6-440e-b034-3710cc9b43f3",
        "body" : "It has to do with the closure provided by the enumeration (`tc` is closed over inside the `testcases` slice) and how the invocation of test.Parallel() can produce variable reference collisions.\r\n\r\nThis public gist is a nice explanation: https://gist.github.com/posener/92a55c4cd441fc5e5e85f27bca008721#what-happened\r\n\r\nHowever! We're not actually invoking `.Parallel()` :/\r\n\r\nShould we run these tests concurrently? If so, I'll add the `.Parallel()` foo, otherwise, yeah, I'll remove that `tc := tc` (it's probably just a habit from writing parallel golang UT).",
        "createdAt" : "2021-04-05T16:08:32Z",
        "updatedAt" : "2021-04-07T19:38:42Z",
        "lastEditedBy" : "aa111d77-fac6-440e-b034-3710cc9b43f3",
        "tags" : [
        ]
      },
      {
        "id" : "ce2e0a30-e8d0-40e6-8ad7-d5324cba88be",
        "parentId" : "25119cf7-9a21-40a7-91a8-3f11ddc46773",
        "authorId" : "aa111d77-fac6-440e-b034-3710cc9b43f3",
        "body" : "I went ahead and enabled parallelization after doing a cursory audit of the UT landscape. As you'd expect in k/k, there are a million different patterns in the codebase, but I saw enough of these that I felt that the way we're introducing parallelization here is not without precedent. E.g.:\r\n\r\n- https://github.com/kubernetes/kubernetes/blob/master/pkg/security/podsecuritypolicy/util/util_test.go#L462\r\n- https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/pkg/runtime/converter_test.go#L586\r\n- https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/client-go/tools/watch/retrywatcher_test.go#L514\r\n\r\n(etc)",
        "createdAt" : "2021-04-05T17:29:02Z",
        "updatedAt" : "2021-04-07T19:38:42Z",
        "lastEditedBy" : "aa111d77-fac6-440e-b034-3710cc9b43f3",
        "tags" : [
        ]
      }
    ],
    "commit" : "5a43067915c7aaccbbdeddd6552028959a8a88c2",
    "line" : 89,
    "diffHunk" : "@@ -1,1 +144,148 @@\n\tfor _, tc := range testcases {\n\t\ttc := tc\n\t\tt.Run(tc.description, func(t *testing.T) {\n\t\t\tt.Parallel()"
  }
]