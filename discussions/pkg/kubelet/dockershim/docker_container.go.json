[
  {
    "id" : "7f16465c-b1b6-40e9-a0e9-a0d2347c09e6",
    "prId" : 99585,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/99585#pullrequestreview-604725680",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "eaef2081-8560-4109-9f2a-472370f71bdd",
        "parentId" : null,
        "authorId" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "body" : "would the better fix be to change the defaults in `getContainerTimestamps`? This way if docker returns bad times, kubernetes will report the same",
        "createdAt" : "2021-03-04T21:01:38Z",
        "updatedAt" : "2021-03-04T21:01:39Z",
        "lastEditedBy" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "tags" : [
        ]
      },
      {
        "id" : "5d1e4c9c-8496-4e71-9e27-29aa46c30eb3",
        "parentId" : "eaef2081-8560-4109-9f2a-472370f71bdd",
        "authorId" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "body" : "hm, never mind. I got it. I wonder what docker returns as a Finish time that is converted to `-6795364578871345152`?",
        "createdAt" : "2021-03-04T21:03:15Z",
        "updatedAt" : "2021-03-04T21:03:16Z",
        "lastEditedBy" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "tags" : [
        ]
      },
      {
        "id" : "3f66b000-ee2f-4cf1-828d-5063ebc3f22c",
        "parentId" : "eaef2081-8560-4109-9f2a-472370f71bdd",
        "authorId" : "a0802bb6-1def-46b8-a314-6c7995df1ef6",
        "body" : "docker returns as a Finished time that is converted to `0`(`0001-01-01T00:00:00Z`)",
        "createdAt" : "2021-03-05T01:40:00Z",
        "updatedAt" : "2021-03-05T01:40:00Z",
        "lastEditedBy" : "a0802bb6-1def-46b8-a314-6c7995df1ef6",
        "tags" : [
        ]
      }
    ],
    "commit" : "aff9df2cf692fefc3c3c9036c99f728ac663a212",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +391,395 @@\tvar state runtimeapi.ContainerState\n\tvar reason, message string\n\tct, st, ft := createdAt.UnixNano(), int64(0), int64(0)\n\tif r.State.Running {\n\t\t// Container is running."
  },
  {
    "id" : "b9454853-0d1c-4e64-bd42-4d91a6fb25af",
    "prId" : 88348,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/88348#pullrequestreview-361984301",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a85c3eb1-4881-4f89-94bb-a6bf6c4c7e3d",
        "parentId" : null,
        "authorId" : "d7870cae-47b0-4c8e-8527-be8fc4be86de",
        "body" : "Just to confirm... we need this check because `ir` can legitimately be `nil` when the image isn't found (as a result of the behavior on line 349)?",
        "createdAt" : "2020-02-20T14:47:53Z",
        "updatedAt" : "2020-02-20T14:48:37Z",
        "lastEditedBy" : "d7870cae-47b0-4c8e-8527-be8fc4be86de",
        "tags" : [
        ]
      },
      {
        "id" : "7ac88b85-8b25-42ab-a4a6-178779c8719e",
        "parentId" : "a85c3eb1-4881-4f89-94bb-a6bf6c4c7e3d",
        "authorId" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "body" : "Yes. When image is absent, ir would be nil.",
        "createdAt" : "2020-02-20T15:14:42Z",
        "updatedAt" : "2020-02-20T15:14:43Z",
        "lastEditedBy" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "884e5ee3d4a98313ddfbacef0c3ed74d1f44c771",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +416,420 @@\tlabels, annotations := extractLabels(r.Config.Labels)\n\timageName := r.Config.Image\n\tif ir != nil && len(ir.RepoTags) > 0 {\n\t\timageName = ir.RepoTags[0]\n\t}"
  },
  {
    "id" : "db5ffc83-2b63-4a52-a4cd-4cd0bb93f234",
    "prId" : 84401,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/84401#pullrequestreview-307527877",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "201b8b41-9096-4461-9b14-3a7133ab5951",
        "parentId" : null,
        "authorId" : "d7870cae-47b0-4c8e-8527-be8fc4be86de",
        "body" : "Could one possible option be checking that an image with the `id` exists? If not, we could return without error.",
        "createdAt" : "2019-10-26T14:17:58Z",
        "updatedAt" : "2019-10-27T15:03:17Z",
        "lastEditedBy" : "d7870cae-47b0-4c8e-8527-be8fc4be86de",
        "tags" : [
        ]
      }
    ],
    "commit" : "fdbf5ef0b8b72101cc759703b96a3b0b40dcdf45",
    "line" : 2,
    "diffHunk" : "@@ -1,1 +346,350 @@\n\t// Convert the image id to a pullable id.\n\tir, err := ds.client.InspectImageByID(r.Image)\n\tif err != nil {\n\t\tif !libdocker.IsImageNotFoundError(err) {"
  },
  {
    "id" : "21aef793-c2a2-4ada-97a0-42e97716f977",
    "prId" : 80320,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/80320#pullrequestreview-279792934",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dc4b0f02-3de6-4685-979f-46544dbbe4ee",
        "parentId" : null,
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "Shouldn't you call performPlatformSpecificContainerCleanup instead?\r\n\r\nOr do you intentionally want to log the error?",
        "createdAt" : "2019-08-23T18:18:23Z",
        "updatedAt" : "2019-08-23T18:18:59Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      },
      {
        "id" : "7b82e5ae-c947-40cf-9146-3719fb32a547",
        "parentId" : "dc4b0f02-3de6-4685-979f-46544dbbe4ee",
        "authorId" : "01246cf1-b4e0-4cdd-818b-da86865d11bd",
        "body" : "Yes, that's to log any errors that might occur; it seems better to do it here as `performPlatformSpecificContainerCleanup` lives in platform-specific files, so logging here centralizes it for all platforms.",
        "createdAt" : "2019-08-26T19:37:32Z",
        "updatedAt" : "2019-08-26T19:37:33Z",
        "lastEditedBy" : "01246cf1-b4e0-4cdd-818b-da86865d11bd",
        "tags" : [
        ]
      }
    ],
    "commit" : "4d4edcb27b63f764ad91cc6da0ad23638824f158",
    "line" : 61,
    "diffHunk" : "@@ -1,1 +458,462 @@func (ds *dockerService) performPlatformSpecificContainerForContainer(containerID string) (errors []error) {\n\tif cleanupInfo, present := ds.containerCleanupInfos[containerID]; present {\n\t\terrors = ds.performPlatformSpecificContainerCleanupAndLogErrors(containerID, cleanupInfo)\n\n\t\tif len(errors) == 0 {"
  },
  {
    "id" : "a15063e6-2828-4a12-9112-634bfb051861",
    "prId" : 74737,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/74737#pullrequestreview-209846398",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fcb34045-6d4f-4653-89a6-db6db9030ec8",
        "parentId" : null,
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "previously this would have always been called in the defer, but now its not.  this seems awkwardly structured and/or confusing.  i need to see what this actually was cleaning up.",
        "createdAt" : "2019-02-28T23:24:31Z",
        "updatedAt" : "2019-03-02T01:57:50Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      },
      {
        "id" : "34dcc198-0ab3-4089-b43b-b23384e1c3b2",
        "parentId" : "fcb34045-6d4f-4653-89a6-db6db9030ec8",
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "actually, nevermind, i think this makes sense.",
        "createdAt" : "2019-02-28T23:26:32Z",
        "updatedAt" : "2019-03-02T01:57:50Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      },
      {
        "id" : "957f18f0-a84a-466f-9c69-0303e3b9b449",
        "parentId" : "fcb34045-6d4f-4653-89a6-db6db9030ec8",
        "authorId" : "01246cf1-b4e0-4cdd-818b-da86865d11bd",
        "body" : "@derekwaynecarr : better suggestions welcome :)\r\n\r\nThis is meant to handle any clean up that might be needed after a container creation - which as of now only is registry keys used to pass down registry keys down to Docker (see previous PR).\r\n\r\nIt used to be in a defer here, and so performed right after the container's creation; turned out that wasn't good enough, as Docker needs these reg keys to be present when it starts the container instead; so this clean up needs to happen after that.",
        "createdAt" : "2019-02-28T23:30:57Z",
        "updatedAt" : "2019-03-02T01:57:50Z",
        "lastEditedBy" : "01246cf1-b4e0-4cdd-818b-da86865d11bd",
        "tags" : [
        ]
      },
      {
        "id" : "3fb0f4c5-3a7c-4600-a9b1-c643493cc913",
        "parentId" : "fcb34045-6d4f-4653-89a6-db6db9030ec8",
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "@wk8 could you make it clear in the comment that the key is needed for starting the container? ",
        "createdAt" : "2019-03-01T22:50:22Z",
        "updatedAt" : "2019-03-02T01:57:50Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "a46c5e96-e77c-4a59-8bdb-8170047cd055",
        "parentId" : "fcb34045-6d4f-4653-89a6-db6db9030ec8",
        "authorId" : "01246cf1-b4e0-4cdd-818b-da86865d11bd",
        "body" : "@yujuhong : tried to make that clear at https://github.com/kubernetes/kubernetes/pull/74737/files#diff-c7dd39479fd733354254e70845075db5R180 ; please let me know if you think that's okay.",
        "createdAt" : "2019-03-02T01:59:19Z",
        "updatedAt" : "2019-03-02T01:59:20Z",
        "lastEditedBy" : "01246cf1-b4e0-4cdd-818b-da86865d11bd",
        "tags" : [
        ]
      }
    ],
    "commit" : "5e3f3b35e0b46bc3a3d35c4986220f36777431c2",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +188,192 @@\n\t// the creation failed, let's clean up right away\n\tds.performPlatformSpecificContainerCleanupAndLogErrors(containerName, cleanupInfo)\n\n\treturn nil, createErr"
  },
  {
    "id" : "c1da6c1d-7ac7-45ec-9890-f60932e04989",
    "prId" : 73726,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/73726#pullrequestreview-204522399",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d8172633-0b31-4607-8f41-74694417b26d",
        "parentId" : null,
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "Do we want to perform cleanup in all cases? We could just `defer` the cleanup function before this line.",
        "createdAt" : "2019-02-15T18:30:48Z",
        "updatedAt" : "2019-02-26T03:02:16Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "9aa593ee-d28e-475b-b417-8eb4e4c55acb",
        "parentId" : "d8172633-0b31-4607-8f41-74694417b26d",
        "authorId" : "01246cf1-b4e0-4cdd-818b-da86865d11bd",
        "body" : "Since for now there's no cleanup error that would warrant erroring out, that's a good point :)",
        "createdAt" : "2019-02-16T15:00:05Z",
        "updatedAt" : "2019-02-26T03:02:16Z",
        "lastEditedBy" : "01246cf1-b4e0-4cdd-818b-da86865d11bd",
        "tags" : [
        ]
      }
    ],
    "commit" : "0d392ffcef42ccf4f975f97e6a5e65a9ea99fa11",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +164,168 @@\thc.SecurityOpt = append(hc.SecurityOpt, securityOpts...)\n\n\tcleanupInfo, err := ds.applyPlatformSpecificDockerConfig(r, &createConfig)\n\tif err != nil {\n\t\treturn nil, err"
  },
  {
    "id" : "34f7b50c-a34c-4054-b3a7-b6f1c6f6508e",
    "prId" : 50796,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/50796#pullrequestreview-82631848",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "64d4379f-9f6c-455d-8c69-b299f9ced7e0",
        "parentId" : null,
        "authorId" : "8d33264d-15b7-484c-89c7-9c09a5e2b30c",
        "body" : "fwiw, this causes lots of warnings in docker log like: \r\n\r\nDec 11 08:50:29 HOSTNAME dockerd[14450]: time=\"2017-12-11T08:50:29.993217562+01:00\" level=warning msg=\"Unknown healthcheck type 'NONE' (expected 'CMD') in container XXXXX\"\r\n\r\nis this really the cleanest way to tell docker to not use the healthcheck?",
        "createdAt" : "2017-12-11T09:09:02Z",
        "updatedAt" : "2017-12-11T09:09:17Z",
        "lastEditedBy" : "8d33264d-15b7-484c-89c7-9c09a5e2b30c",
        "tags" : [
        ]
      },
      {
        "id" : "df152b6e-c8be-48ed-87e1-59a01d061d71",
        "parentId" : "64d4379f-9f6c-455d-8c69-b299f9ced7e0",
        "authorId" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "body" : "@asacbp - that's what they are recommending, https://github.com/docker/engine-api/blob/master/types/container/config.go#L16 So maybe worth asking on the docker github issues?",
        "createdAt" : "2017-12-11T12:15:38Z",
        "updatedAt" : "2017-12-11T12:15:38Z",
        "lastEditedBy" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "tags" : [
        ]
      },
      {
        "id" : "24e834a2-4f2c-4b80-83be-5bcbbdd9734c",
        "parentId" : "64d4379f-9f6c-455d-8c69-b299f9ced7e0",
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "This has just been fixed in docker, but hasn't been included in any release yet. \r\nhttps://github.com/moby/moby/pull/35533",
        "createdAt" : "2017-12-11T20:44:40Z",
        "updatedAt" : "2017-12-11T20:44:40Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "fe06c7ec645b86ce7c1235923a4585e44cb868c7",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +136,140 @@\t\t\tHealthcheck: &dockercontainer.HealthConfig{\n\t\t\t\tTest: []string{\"NONE\"},\n\t\t\t},\n\t\t},\n\t\tHostConfig: &dockercontainer.HostConfig{"
  },
  {
    "id" : "fbb97628-244b-4956-bf78-97fc6b1af267",
    "prId" : 39298,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/39298#pullrequestreview-14750852",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "df154073-e315-44da-ab5c-6bcf780e8e0c",
        "parentId" : null,
        "authorId" : "7dd504ec-7e63-45b3-98f8-6eb1c683e9c2",
        "body" : "What's the value of `ir.RepoTags[0]`? Is it meaningful enough for a field in status?",
        "createdAt" : "2016-12-30T08:11:14Z",
        "updatedAt" : "2016-12-31T00:37:11Z",
        "lastEditedBy" : "7dd504ec-7e63-45b3-98f8-6eb1c683e9c2",
        "tags" : [
        ]
      },
      {
        "id" : "80e6b2bd-095f-448a-9bfb-963136d7fc9b",
        "parentId" : "df154073-e315-44da-ab5c-6bcf780e8e0c",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "e.g. \"nginx:latest\" for nginx image. It is the image repo (including name) with tags.",
        "createdAt" : "2016-12-30T08:17:51Z",
        "updatedAt" : "2016-12-31T00:37:11Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      },
      {
        "id" : "97c3e2de-939e-421f-922c-423e7a216cec",
        "parentId" : "df154073-e315-44da-ab5c-6bcf780e8e0c",
        "authorId" : "7dd504ec-7e63-45b3-98f8-6eb1c683e9c2",
        "body" : "ok, that would be enough",
        "createdAt" : "2016-12-30T11:15:10Z",
        "updatedAt" : "2016-12-31T00:37:11Z",
        "lastEditedBy" : "7dd504ec-7e63-45b3-98f8-6eb1c683e9c2",
        "tags" : [
        ]
      }
    ],
    "commit" : "67a5bf8454bb839ee80a4245e9e09fc8f700fa84",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +372,376 @@\t\tId:          &r.ID,\n\t\tMetadata:    metadata,\n\t\tImage:       &runtimeapi.ImageSpec{Image: &imageName},\n\t\tImageRef:    &imageID,\n\t\tMounts:      mounts,"
  },
  {
    "id" : "67ec8cd2-8fb4-48d1-b734-9a4983fcccbd",
    "prId" : 38457,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/38457#pullrequestreview-12390147",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8fc79bb7-486d-4aa5-9084-18eaf535a67d",
        "parentId" : null,
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "nit: Why not combine with previous if clause",
        "createdAt" : "2016-12-12T03:38:44Z",
        "updatedAt" : "2016-12-12T03:38:44Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      },
      {
        "id" : "ac9ecf5b-0c40-4ac4-b633-764653258fba",
        "parentId" : "8fc79bb7-486d-4aa5-9084-18eaf535a67d",
        "authorId" : "7dd504ec-7e63-45b3-98f8-6eb1c683e9c2",
        "body" : "The previous if clause is `ContainerConfig.GetLinux()` but this part is` sandboxConfig.GetLinux()`, can we really combine them together? (i.e. those two need to be checked at same time?) ",
        "createdAt" : "2016-12-12T04:26:42Z",
        "updatedAt" : "2016-12-12T04:26:42Z",
        "lastEditedBy" : "7dd504ec-7e63-45b3-98f8-6eb1c683e9c2",
        "tags" : [
        ]
      }
    ],
    "commit" : "9170e94e2d7053b6c4dd3e52500f3be3542ca483",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +148,152 @@\n\t// Apply cgroupsParent derived from the sandbox config.\n\tif lc := sandboxConfig.GetLinux(); lc != nil {\n\t\t// Apply Cgroup options.\n\t\t// TODO: Check if this works with per-pod cgroups."
  },
  {
    "id" : "eb433d48-1fdd-4402-9451-dee3d3e290d9",
    "prId" : 33386,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/33386#pullrequestreview-1411117",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "03c6b984-a572-454c-8060-02750289931c",
        "parentId" : null,
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "The if-else is wrong to me:\n\n``` go\nif !finishedAt.IsZero() {\n} else if !finishedAt.IsZero() && r.State.ExitCode != 0 { // Doesn't this a subset of !finished.IsZero()\n} else {\n}\n```\n",
        "createdAt" : "2016-09-23T20:59:51Z",
        "updatedAt" : "2016-09-23T21:49:39Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      },
      {
        "id" : "a5a42360-18c1-4ec5-b21b-02ccfd7a6391",
        "parentId" : "03c6b984-a572-454c-8060-02750289931c",
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "This should be:\n\n``` go\nif !finishedAt.IsZero() {\n} else if r.State.ExitCode {\n} else {\n}\n```\n",
        "createdAt" : "2016-09-23T21:03:31Z",
        "updatedAt" : "2016-09-23T21:49:39Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      },
      {
        "id" : "764c0710-9f46-48b3-ac6a-08b6cf73360a",
        "parentId" : "03c6b984-a572-454c-8060-02750289931c",
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "Oops..done.\n",
        "createdAt" : "2016-09-23T21:50:44Z",
        "updatedAt" : "2016-09-23T21:50:44Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "737769954af06aac93cd976a2a058d7a478e85b7",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +262,266 @@\t\t\t\treason = \"Completed\"\n\t\t\tdefault:\n\t\t\t\treason = \"Error\"\n\t\t\t}\n\t\t} else if r.State.ExitCode != 0 { // Case 2"
  },
  {
    "id" : "0c778761-b677-4b1b-b3e9-b18532495eb8",
    "prId" : 29553,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3fa8efaa-5cea-4106-9cff-76411015a9f6",
        "parentId" : null,
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "In this way, it is impossible to get annotations back. Maybe save all annotations inside one label, e.g. `io.kubernetes.container.annotations`?\n",
        "createdAt" : "2016-07-26T01:59:55Z",
        "updatedAt" : "2016-07-28T01:30:32Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      },
      {
        "id" : "46e08069-375a-4d43-ad3f-eb9d4f8f9f53",
        "parentId" : "3fa8efaa-5cea-4106-9cff-76411015a9f6",
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "Yes, I have a TODO for that. \n",
        "createdAt" : "2016-07-26T02:02:35Z",
        "updatedAt" : "2016-07-28T01:30:32Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "e55b3424-956e-43b3-bee0-b049231be120",
        "parentId" : "3fa8efaa-5cea-4106-9cff-76411015a9f6",
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "Use a prefix to distinguish labels and annotations. Or else when get container status how do we know which is label, which is annotation? :)\n",
        "createdAt" : "2016-07-27T22:38:13Z",
        "updatedAt" : "2016-07-28T01:30:32Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      },
      {
        "id" : "82eb66f2-6e3d-4e79-9260-dd3a9762eb56",
        "parentId" : "3fa8efaa-5cea-4106-9cff-76411015a9f6",
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "Added a TODO for that. \n",
        "createdAt" : "2016-07-27T23:08:02Z",
        "updatedAt" : "2016-07-28T01:30:32Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "03d11bcf4e5fce9acc5a9de1d00edb0a734d4871",
    "line" : 86,
    "diffHunk" : "@@ -1,1 +84,88 @@\t\tif _, ok := labels[k]; !ok {\n\t\t\t// Only write to labels if the key doesn't exist.\n\t\t\tlabels[k] = v\n\t\t}\n\t}"
  },
  {
    "id" : "abd601b6-f2e0-475f-a669-549f7e89d846",
    "prId" : 29553,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9fe3e081-d54d-4d5e-9a80-5440f129200d",
        "parentId" : null,
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "We should add (\"label\", \"k=v\") here.\n",
        "createdAt" : "2016-07-27T22:31:51Z",
        "updatedAt" : "2016-07-28T01:30:32Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      },
      {
        "id" : "d2729e49-5018-4cc7-8e4d-735d403cdf5e",
        "parentId" : "9fe3e081-d54d-4d5e-9a80-5440f129200d",
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "You're right. I saw the documentation but forgot to correct it. Done. \n\nI need to find a good way to test this code.\n",
        "createdAt" : "2016-07-27T23:06:01Z",
        "updatedAt" : "2016-07-28T01:30:32Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "03d11bcf4e5fce9acc5a9de1d00edb0a734d4871",
    "line" : 50,
    "diffHunk" : "@@ -1,1 +48,52 @@\n\t\tif filter.LabelSelector != nil {\n\t\t\tfor k, v := range filter.LabelSelector {\n\t\t\t\topts.Filter.Add(\"label\", fmt.Sprintf(\"%s=%s\", k, v))\n\t\t\t}"
  },
  {
    "id" : "ccab8f2a-7735-46a2-b203-bf384c125dce",
    "prId" : 29553,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4d270236-bca1-4db5-a2ab-a3a352569539",
        "parentId" : null,
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "It seems that capability is missing. Intended?\n",
        "createdAt" : "2016-07-27T22:54:55Z",
        "updatedAt" : "2016-07-28T01:30:32Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      },
      {
        "id" : "f2df069f-e7f3-490f-ae9f-330413b60e51",
        "parentId" : "4d270236-bca1-4db5-a2ab-a3a352569539",
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "I can't find where we implement that in `dockertools`, hence I skipped it. Added a TODO to check later.\n",
        "createdAt" : "2016-07-27T23:11:49Z",
        "updatedAt" : "2016-07-28T01:30:32Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "0370c0dc-1060-49ee-8fbe-fc41554881d2",
        "parentId" : "4d270236-bca1-4db5-a2ab-a3a352569539",
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "We do it in the SecurityContext package.\nhttps://github.com/kubernetes/kubernetes/blob/master/pkg/kubelet/dockertools/docker_manager.go#L693-L694\nBecause we already have capability in `LinuxContainerConfig` now, we just need to apply according to the config here.\nhttps://github.com/kubernetes/kubernetes/blob/master/pkg/kubelet/api/v1alpha1/runtime/api.pb.go#L1218\n",
        "createdAt" : "2016-07-27T23:16:12Z",
        "updatedAt" : "2016-07-28T01:30:32Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      }
    ],
    "commit" : "03d11bcf4e5fce9acc5a9de1d00edb0a734d4871",
    "line" : null,
    "diffHunk" : "@@ -1,1 +166,170 @@\thc.SecurityOpt = []string{fmt.Sprintf(\"%s=%s\", \"seccomp\", defaultSeccompProfile)}\n\t// TODO: Add or drop capabilities.\n\n\tcreateConfig.HostConfig = hc\n\tcreateResp, err := ds.client.CreateContainer(createConfig)"
  },
  {
    "id" : "60a76721-c8ae-4ddd-8055-43244e9d07e9",
    "prId" : 29553,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "24401501-ef17-4b94-9ba3-176a100b6952",
        "parentId" : null,
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "According to the comment, apply `Force` here? Do we really want that? :)\n",
        "createdAt" : "2016-07-27T22:59:48Z",
        "updatedAt" : "2016-07-28T01:30:32Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      },
      {
        "id" : "c9a551e8-87d7-4af3-b658-573d5ceb7f8a",
        "parentId" : "24401501-ef17-4b94-9ba3-176a100b6952",
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "Hm....I don't think we need that. I copied the comment from @feiskyer's PR. I'll add a new comment.\n",
        "createdAt" : "2016-07-27T23:14:08Z",
        "updatedAt" : "2016-07-28T01:30:32Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "03d11bcf4e5fce9acc5a9de1d00edb0a734d4871",
    "line" : null,
    "diffHunk" : "@@ -1,1 +188,192 @@// TODO: If a container is still running, should we forcibly remove it?\nfunc (ds *dockerService) RemoveContainer(rawContainerID string) error {\n\treturn ds.client.RemoveContainer(rawContainerID, dockertypes.ContainerRemoveOptions{RemoveVolumes: true})\n}\n"
  },
  {
    "id" : "8c765a20-0370-4d4d-9042-5d55e9e0022f",
    "prId" : 29553,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "76ca24ae-1441-4e14-a7ca-e27256aef4af",
        "parentId" : null,
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "In fact I removed the previous comment, because it turned out that `GetImage().GetImage()` is safe.\n\nHowever, since you have made the change, I think this is more straightforward. Thanks! :)\n",
        "createdAt" : "2016-07-27T23:54:37Z",
        "updatedAt" : "2016-07-28T01:30:32Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      }
    ],
    "commit" : "03d11bcf4e5fce9acc5a9de1d00edb0a734d4871",
    "line" : null,
    "diffHunk" : "@@ -1,1 +91,95 @@\tif iSpec := config.GetImage(); iSpec != nil {\n\t\timage = iSpec.GetImage()\n\t}\n\tcreateConfig := dockertypes.ContainerCreateConfig{\n\t\tName: config.GetName(),"
  }
]