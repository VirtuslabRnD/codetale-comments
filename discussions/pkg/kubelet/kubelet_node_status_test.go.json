[
  {
    "id" : "090c90f8-1afe-48dd-98f4-2de34586ad3a",
    "prId" : 69753,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/69753#pullrequestreview-197147827",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "046a7d61-5d03-44c1-9f8f-0870f2dea28b",
        "parentId" : null,
        "authorId" : "224e1088-78fe-4bdd-99d1-31be3e464996",
        "body" : "can we add a UT for a condition getting removed. So original has 2 or 3 and current node status has less or removed ?",
        "createdAt" : "2019-01-28T08:40:25Z",
        "updatedAt" : "2019-01-28T08:40:25Z",
        "lastEditedBy" : "224e1088-78fe-4bdd-99d1-31be3e464996",
        "tags" : [
        ]
      },
      {
        "id" : "75a4dc89-41ec-4a66-b395-4d5f2f16b1e2",
        "parentId" : "046a7d61-5d03-44c1-9f8f-0870f2dea28b",
        "authorId" : "4186ed58-9575-4126-b730-073268bc67cb",
        "body" : "Sure. Do you want to add one? I can help review. :)",
        "createdAt" : "2019-01-28T16:59:03Z",
        "updatedAt" : "2019-01-28T16:59:10Z",
        "lastEditedBy" : "4186ed58-9575-4126-b730-073268bc67cb",
        "tags" : [
        ]
      }
    ],
    "commit" : "98fc4a107a8e6da008669b2792044a154f4a75a7",
    "line" : 381,
    "diffHunk" : "@@ -1,1 +1893,1897 @@\t\t\tstatus: &v1.NodeStatus{\n\t\t\t\tConditions: []v1.NodeCondition{readyCondition, memoryPressureCondition},\n\t\t\t},\n\t\t\texpectChange: true,\n\t\t},"
  },
  {
    "id" : "a8ca774e-3735-4372-9e01-667c7527abd2",
    "prId" : 65226,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/65226#pullrequestreview-135452111",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a53dca66-5633-4964-a5a9-a22fc73f0bd5",
        "parentId" : null,
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "i think we can update this in the future from 10s to 1m, 5m, 10m, etc.\r\n\r\nan issue or // todo to track it would be good.",
        "createdAt" : "2018-07-09T15:05:10Z",
        "updatedAt" : "2018-07-09T15:06:02Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      }
    ],
    "commit" : "9d9fb4de2929bdeba897c9cd79aea616a75c9521",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +261,265 @@\t\t}\n\t\tkubelet.cloud = fakeCloud\n\t\tkubelet.cloudResourceSyncManager = NewCloudResourceSyncManager(kubelet.cloud, kubelet.nodeName, kubelet.nodeStatusUpdateFrequency)\n\t\tstopCh := make(chan struct{})\n\t\tgo kubelet.cloudResourceSyncManager.Run(stopCh)"
  },
  {
    "id" : "fe5b9eb3-3e3b-4e58-b162-f9209bbbaae8",
    "prId" : 64784,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/64784#pullrequestreview-126179094",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e24502d9-279b-4336-b7a2-91c4362d6d11",
        "parentId" : null,
        "authorId" : "ac146833-f0d6-4680-968a-749269c0d55d",
        "body" : "Should this test check Allocatable?",
        "createdAt" : "2018-06-05T22:35:07Z",
        "updatedAt" : "2018-06-05T22:37:39Z",
        "lastEditedBy" : "ac146833-f0d6-4680-968a-749269c0d55d",
        "tags" : [
        ]
      },
      {
        "id" : "3272b136-f3e3-45e8-b49c-f499e577e8a3",
        "parentId" : "e24502d9-279b-4336-b7a2-91c4362d6d11",
        "authorId" : "611b3189-700b-4eda-8a2a-2c4280218d7c",
        "body" : "Ah my bad. I did extend the test to check allocatable but forgot to push the change.",
        "createdAt" : "2018-06-05T22:38:02Z",
        "updatedAt" : "2018-06-05T22:38:02Z",
        "lastEditedBy" : "611b3189-700b-4eda-8a2a-2c4280218d7c",
        "tags" : [
        ]
      },
      {
        "id" : "bbbfbe6b-7df3-4fe8-885d-47b42cf0cd22",
        "parentId" : "e24502d9-279b-4336-b7a2-91c4362d6d11",
        "authorId" : "ac146833-f0d6-4680-968a-749269c0d55d",
        "body" : "Ah you just updated it!",
        "createdAt" : "2018-06-05T22:38:06Z",
        "updatedAt" : "2018-06-05T22:38:07Z",
        "lastEditedBy" : "ac146833-f0d6-4680-968a-749269c0d55d",
        "tags" : [
        ]
      }
    ],
    "commit" : "35efc4f96a0fafe50307b3eee13611358f2878a2",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +1542,1546 @@\t\t\tname: \"no update needed without extended resource\",\n\t\t\texistingNode: &v1.Node{\n\t\t\t\tStatus: v1.NodeStatus{\n\t\t\t\t\tCapacity: v1.ResourceList{\n\t\t\t\t\t\tv1.ResourceCPU:              *resource.NewMilliQuantity(2000, resource.DecimalSI),"
  },
  {
    "id" : "f39d81b2-edd4-4cd7-9fdd-59f9a32a0654",
    "prId" : 64709,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/64709#pullrequestreview-125713681",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ed5e97c6-f10d-4715-aa6e-193da4775d3a",
        "parentId" : null,
        "authorId" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "body" : "How is this specific key picked up when cloud provider is set to empty?",
        "createdAt" : "2018-06-04T18:33:03Z",
        "updatedAt" : "2018-06-04T18:50:30Z",
        "lastEditedBy" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "tags" : [
        ]
      },
      {
        "id" : "dc5ddf83-1192-4cfc-b086-4fb1060f837f",
        "parentId" : "ed5e97c6-f10d-4715-aa6e-193da4775d3a",
        "authorId" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "body" : "We could have tested any cloudprovider. I just chose to test Azure.",
        "createdAt" : "2018-06-04T18:53:10Z",
        "updatedAt" : "2018-06-04T18:53:10Z",
        "lastEditedBy" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "tags" : [
        ]
      },
      {
        "id" : "fd576a46-6103-43c1-abed-e20eeb1a7125",
        "parentId" : "ed5e97c6-f10d-4715-aa6e-193da4775d3a",
        "authorId" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "body" : "also there's a loop in setVolumeLimits that goes through all the plugins so we are just picking one to test here.",
        "createdAt" : "2018-06-04T19:37:54Z",
        "updatedAt" : "2018-06-04T19:37:54Z",
        "lastEditedBy" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "32b69193c63ff54fc5b77225d57616963b31932e",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +1652,1656 @@\t\t\tname:              \"when no cloudprovider is present\",\n\t\t\tcloudProviderName: \"\",\n\t\t\texpectedVolumeKey: util.AzureVolumeLimitKey,\n\t\t\texpectedLimit:     -1,\n\t\t},"
  },
  {
    "id" : "b22ab197-d95c-430e-a2bb-17143aa933ce",
    "prId" : 64170,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/64170#pullrequestreview-123080574",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9425fe7b-fa6b-488e-96be-ac1949a3f66a",
        "parentId" : null,
        "authorId" : "a6409368-42e0-44a9-bf79-9d3042ac3b65",
        "body" : "Can you add one more test case with node-status-max-images=0? ",
        "createdAt" : "2018-05-23T17:44:58Z",
        "updatedAt" : "2018-05-30T19:55:00Z",
        "lastEditedBy" : "a6409368-42e0-44a9-bf79-9d3042ac3b65",
        "tags" : [
        ]
      },
      {
        "id" : "6cd31f79-58cb-4c1e-9512-1a0e5ab8b9dd",
        "parentId" : "9425fe7b-fa6b-488e-96be-ac1949a3f66a",
        "authorId" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "body" : "added in TestUpdateNewNodeStatus",
        "createdAt" : "2018-05-24T16:47:25Z",
        "updatedAt" : "2018-05-30T19:55:00Z",
        "lastEditedBy" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "tags" : [
        ]
      }
    ],
    "commit" : "0539086ff3f4a93c2283b1328e4a8fe64bfe174d",
    "line" : 386,
    "diffHunk" : "@@ -1,1 +1248,1252 @@}\n\nfunc TestUpdateNewNodeStatusTooLargeReservation(t *testing.T) {\n\tconst nodeStatusMaxImages = 5\n"
  },
  {
    "id" : "f10eec3e-8605-41f8-b57e-a35b674d8294",
    "prId" : 63955,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/63955#pullrequestreview-123602817",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d9ec89d4-c1ed-4909-a1b6-af22c04aa112",
        "parentId" : null,
        "authorId" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "body" : "Sorry for the confusion, I didn't mean these specific methods so much as all the test setup boilerplate. Especilally the mock cAdvisor, which is unrelated to the function being tested.",
        "createdAt" : "2018-05-25T18:51:48Z",
        "updatedAt" : "2018-07-23T04:52:22Z",
        "lastEditedBy" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "tags" : [
        ]
      },
      {
        "id" : "03fd6659-923f-435e-937f-203f88373adc",
        "parentId" : "d9ec89d4-c1ed-4909-a1b6-af22c04aa112",
        "authorId" : "72156db3-c40b-4455-9838-c12c0c606019",
        "body" : "Can we handle this in a separate PR? The `ImagesFSInfo` and `RootFSInfo` are different; it takes some time to go through all case to have a helper func for it.",
        "createdAt" : "2018-05-28T01:10:18Z",
        "updatedAt" : "2018-07-23T04:52:22Z",
        "lastEditedBy" : "72156db3-c40b-4455-9838-c12c0c606019",
        "tags" : [
        ]
      }
    ],
    "commit" : "aac9f1cbaad3741688a8e3a221d420c63017d3d4",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +141,145 @@\n\tkubeClient.AddReactor(\"*\", \"*\", notImplemented)\n}\n\ntype localCM struct {"
  },
  {
    "id" : "7727c725-2a9b-4903-a5f2-3858b83f30b9",
    "prId" : 63955,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/63955#pullrequestreview-132230933",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "98c46e51-4cbf-4f80-8b18-2390e196051e",
        "parentId" : null,
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "spellcheck: Implated",
        "createdAt" : "2018-06-26T22:41:04Z",
        "updatedAt" : "2018-07-23T04:52:22Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      }
    ],
    "commit" : "aac9f1cbaad3741688a8e3a221d420c63017d3d4",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +135,139 @@}\n\nfunc addNotImplatedReaction(kubeClient *fake.Clientset) {\n\tif kubeClient == nil {\n\t\treturn"
  },
  {
    "id" : "0a4d409d-df2a-47d0-89ae-904d4362119f",
    "prId" : 62306,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/62306#pullrequestreview-121936137",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e7d50758-dadf-49b8-a32d-98420b85661a",
        "parentId" : null,
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "?",
        "createdAt" : "2018-05-18T23:00:25Z",
        "updatedAt" : "2018-05-30T18:34:10Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "e4ec46a3-b444-4a21-bce0-260c3a13b87c",
        "parentId" : "e7d50758-dadf-49b8-a32d-98420b85661a",
        "authorId" : "e83108b8-1fb2-416b-9298-d5b70c14f708",
        "body" : "The same as the other unit tests fixes. This test used to write its own Patch in `applyNodeStatusPatch`. ",
        "createdAt" : "2018-05-21T20:29:18Z",
        "updatedAt" : "2018-05-30T18:34:10Z",
        "lastEditedBy" : "e83108b8-1fb2-416b-9298-d5b70c14f708",
        "tags" : [
        ]
      }
    ],
    "commit" : "85e0d05ac76b943acb208ea70c6b806649706ea5",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +880,884 @@\t\trequire.Equal(t, actions[1].GetSubresource(), \"status\")\n\n\t\tupdatedNode, err := kubeClient.CoreV1().Nodes().Get(testKubeletHostname, metav1.GetOptions{})\n\t\trequire.NoError(t, err, \"can't apply node status patch\")\n"
  },
  {
    "id" : "dc8ed941-d5db-40bc-8c3f-9742ea49f892",
    "prId" : 49202,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/49202#pullrequestreview-61096245",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "93e3b304-1d60-4ffe-af08-b612ce24d544",
        "parentId" : null,
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "I looked at `validateNodeIP()` and there is nothing to prevent it from being a standalone function. I think that'd make testing much easier.",
        "createdAt" : "2017-09-07T01:50:00Z",
        "updatedAt" : "2017-09-07T01:50:00Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "2b2a5c65007dfec38e31c3b64ad1c1a53412f593",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +141,145 @@\t}\n\n\t// TODO : is it possible to mock kubelet.validateNodeIP() to avoid relying on the host interface addresses ?\n\taddrs, err := net.InterfaceAddrs()\n\tassert.NoError(t, err)"
  },
  {
    "id" : "f64e0b9e-d558-4d10-ae62-58dda12994a8",
    "prId" : 46903,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/46903#pullrequestreview-47291371",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b66e7bb9-800c-4422-925d-68f944dccce9",
        "parentId" : null,
        "authorId" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "body" : "It would be good to have 1 test case that actually checks a valid IP. UNfortunately theres no way to mock golang `net.InterfaceAddrs`, so choices are to either pick an address to use in the unit test, or change the validateNodeIP() method to take a list of host interface addrs.",
        "createdAt" : "2017-06-28T20:53:39Z",
        "updatedAt" : "2018-04-09T04:02:36Z",
        "lastEditedBy" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "tags" : [
        ]
      },
      {
        "id" : "8e522dc7-fedc-48d4-98d9-88bcae0915cf",
        "parentId" : "b66e7bb9-800c-4422-925d-68f944dccce9",
        "authorId" : "6d4deb17-efc4-4037-a2a9-162659c11ad7",
        "body" : "Seems mock golang `net.InterfaceAddrs` maybe better as this can make the caller simple. But I found that many places calling `net.InterfaceAddrs()` does not have such a unit test, how about file another issue to handle this?",
        "createdAt" : "2017-06-29T03:39:51Z",
        "updatedAt" : "2018-04-09T04:02:36Z",
        "lastEditedBy" : "6d4deb17-efc4-4037-a2a9-162659c11ad7",
        "tags" : [
        ]
      },
      {
        "id" : "27584bd0-5575-4867-8b22-7440439192e7",
        "parentId" : "b66e7bb9-800c-4422-925d-68f944dccce9",
        "authorId" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "body" : "Sure. It worries me that all tests (even the e2e's ??) passed with the fallthrough issue though.",
        "createdAt" : "2017-06-29T21:05:18Z",
        "updatedAt" : "2018-04-09T04:02:36Z",
        "lastEditedBy" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "tags" : [
        ]
      },
      {
        "id" : "69b75d78-a756-406f-bf45-bbe9ad0b8916",
        "parentId" : "b66e7bb9-800c-4422-925d-68f944dccce9",
        "authorId" : "6d4deb17-efc4-4037-a2a9-162659c11ad7",
        "body" : "Yes, I filed an issue https://github.com/kubernetes/kubernetes/issues/48315 here to trace ",
        "createdAt" : "2017-06-30T01:42:00Z",
        "updatedAt" : "2018-04-09T04:02:36Z",
        "lastEditedBy" : "6d4deb17-efc4-4037-a2a9-162659c11ad7",
        "tags" : [
        ]
      }
    ],
    "commit" : "8d92814bd0dbd9763d3a63c275031bc79f22ee1f",
    "line" : 61,
    "diffHunk" : "@@ -1,1 +1474,1478 @@\t\t\tsuccess:  false,\n\t\t\ttestName: \"IPv4 address that doesn't belong to host\",\n\t\t},\n\t}\n\taddrs, err := net.InterfaceAddrs()"
  },
  {
    "id" : "da49e1c0-ec53-48ea-bd79-6a9db8de1223",
    "prId" : 45551,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/45551#pullrequestreview-67359066",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ef5eecda-cd9e-4245-b6d8-826b28258fe0",
        "parentId" : null,
        "authorId" : "8df86b94-1422-4b8e-9056-b18bfdecd2dd",
        "body" : "You could have an interface with `ValidateNodeIP` that would be implemented by your mocker and `Kubelet`",
        "createdAt" : "2017-10-05T12:40:32Z",
        "updatedAt" : "2017-11-10T23:15:09Z",
        "lastEditedBy" : "8df86b94-1422-4b8e-9056-b18bfdecd2dd",
        "tags" : [
        ]
      }
    ],
    "commit" : "7ac6fe9c5dae02a543e9b84444cc74fef8501444",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +145,149 @@\t}\n\n\t// TODO : is it possible to mock validateNodeIP() to avoid relying on the host interface addresses ?\n\taddrs, err := net.InterfaceAddrs()\n\tassert.NoError(t, err)"
  }
]