[
  {
    "id" : "10e13a78-cf79-48bf-8935-4135cf1f378a",
    "prId" : 98993,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/98993#pullrequestreview-603531421",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "891eed68-566e-4735-be86-02f31e3b98ce",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "are the keys selected for messages like these considered a stable API log consumers can write extraction/monitoring around?",
        "createdAt" : "2021-03-03T15:34:48Z",
        "updatedAt" : "2021-03-03T15:34:49Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "233c9937-db0c-4528-8005-bb6547e51d69",
        "parentId" : "891eed68-566e-4735-be86-02f31e3b98ce",
        "authorId" : "31a2ac00-6c67-4307-a4bc-bfd13f41ef27",
        "body" : "Not as of beta but we're moving in that direction for GA. Right now we're trying to figure out a good (loose, non-enforced) schema that we can later enforce.",
        "createdAt" : "2021-03-04T00:29:02Z",
        "updatedAt" : "2021-03-04T00:29:03Z",
        "lastEditedBy" : "31a2ac00-6c67-4307-a4bc-bfd13f41ef27",
        "tags" : [
        ]
      }
    ],
    "commit" : "c88ef90b1e93cbb9d23ab3c76d55fb26024ece3d",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +110,114 @@\t\t\t\t\t\tos.Exit(1)\n\t\t\t\t\t} else {\n\t\t\t\t\t\tklog.ErrorS(nil, \"No valid client certificate is found but the server is not responsive. A restart may be necessary to retrieve new initial credentials.\", \"lastCertificateAvailabilityTime\", lastCertAvailable, \"shutdownThreshold\", exitAfter)\n\t\t\t\t\t}\n\t\t\t\t}"
  },
  {
    "id" : "58fdc748-f351-42a4-9dde-101b3c3008cc",
    "prId" : 98993,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/98993#pullrequestreview-604450342",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2dc22029-a2f9-4770-bcf7-9037e17e1b56",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "passing a nil error to ErrorS seems strange... should this do something like `klog.ErrorS(errors.New(\"The currently active client...\"))` instead? (same question for several places above as well)",
        "createdAt" : "2021-03-03T15:36:31Z",
        "updatedAt" : "2021-03-03T15:37:21Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "67e2919e-c757-465a-83f6-d0441069240f",
        "parentId" : "2dc22029-a2f9-4770-bcf7-9037e17e1b56",
        "authorId" : "31a2ac00-6c67-4307-a4bc-bfd13f41ef27",
        "body" : "Docs on calling `ErrorS` with `nil`: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-instrumentation/migration-to-structured-logging.md#using-errors\r\n\r\n> Calling ErrorS with nil as error is semi-acceptable if there is error condition that deserves a stack trace at this origin point. For expected errors (errors that can happen during routine operations) please consider using klog.InfoS and pass error in err key instead.\r\n\r\nI think this is an unexpected error so this is ok?",
        "createdAt" : "2021-03-04T00:30:30Z",
        "updatedAt" : "2021-03-04T00:30:30Z",
        "lastEditedBy" : "31a2ac00-6c67-4307-a4bc-bfd13f41ef27",
        "tags" : [
        ]
      },
      {
        "id" : "d6faca19-a521-4d0c-b770-734b14844ae6",
        "parentId" : "2dc22029-a2f9-4770-bcf7-9037e17e1b56",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "it looks like the klog implementation gracefully omits the err=nil from the output:\r\n\r\nhttps://github.com/kubernetes/kubernetes/blob/c8fe1d9c0699f8d1fd93f47f2a62a4c83ccf5b6f/vendor/k8s.io/klog/v2/klog.go#L803-L806\r\n\r\nbut the structured logger always includes an err param, even if nil:\r\n\r\nhttps://github.com/kubernetes/kubernetes/blob/c8fe1d9c0699f8d1fd93f47f2a62a4c83ccf5b6f/staging/src/k8s.io/component-base/logs/json/json.go#L171-L173\r\n\r\nis that expected by structured log consumers?",
        "createdAt" : "2021-03-04T15:00:15Z",
        "updatedAt" : "2021-03-04T15:00:15Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "62e07abb-6623-42cb-9452-3d2f234153e6",
        "parentId" : "2dc22029-a2f9-4770-bcf7-9037e17e1b56",
        "authorId" : "31a2ac00-6c67-4307-a4bc-bfd13f41ef27",
        "body" : "Yes, that's right. We just get the log message with no named error, so it's equivalent to the current behaviour.",
        "createdAt" : "2021-03-04T19:01:28Z",
        "updatedAt" : "2021-03-04T19:01:28Z",
        "lastEditedBy" : "31a2ac00-6c67-4307-a4bc-bfd13f41ef27",
        "tags" : [
        ]
      }
    ],
    "commit" : "c88ef90b1e93cbb9d23ab3c76d55fb26024ece3d",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +120,124 @@\t\t\t\t\t\tos.Exit(1)\n\t\t\t\t\t} else {\n\t\t\t\t\t\tklog.ErrorS(nil, \"The currently active client certificate has expired, but the server is not responsive. A restart may be necessary to retrieve new initial credentials.\")\n\t\t\t\t\t}\n\t\t\t\t}"
  },
  {
    "id" : "64898acf-faf6-4f5a-b287-256226f38539",
    "prId" : 63492,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/63492#pullrequestreview-118072756",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bafacbb4-c874-42b7-b766-1e78334a12e3",
        "parentId" : null,
        "authorId" : "e81e699e-eb6c-4380-bfd5-16ab81ac51d6",
        "body" : "Document the new return value in func comment",
        "createdAt" : "2018-05-07T16:39:07Z",
        "updatedAt" : "2018-05-07T19:07:12Z",
        "lastEditedBy" : "e81e699e-eb6c-4380-bfd5-16ab81ac51d6",
        "tags" : [
        ]
      },
      {
        "id" : "9f15da89-7dd7-4aa8-a3dd-e861c8bd6063",
        "parentId" : "bafacbb4-c874-42b7-b766-1e78334a12e3",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "done",
        "createdAt" : "2018-05-07T17:10:40Z",
        "updatedAt" : "2018-05-07T19:07:12Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "814b065928f86bb27f5e8ad973e4c0cfe8343d4a",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +54,58 @@// stopCh should be used to indicate when the transport is unused and doesn't need\n// to continue checking the manager.\nfunc UpdateTransport(stopCh <-chan struct{}, clientConfig *restclient.Config, clientCertificateManager certificate.Manager, exitAfter time.Duration) (func(), error) {\n\treturn updateTransport(stopCh, 10*time.Second, clientConfig, clientCertificateManager, exitAfter)\n}"
  },
  {
    "id" : "791d5909-0d3f-45d0-86ef-6f0c0d79bee0",
    "prId" : 59316,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/59316#pullrequestreview-95633146",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3c59be9b-9a47-4a64-a51a-83b0a7339dd4",
        "parentId" : null,
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "I don't like the use of sentinel value 0 here. Can we validate exitAfter > 0 early in updateTransport, and assume it's > 0 when we get here?",
        "createdAt" : "2018-02-08T05:48:50Z",
        "updatedAt" : "2018-02-08T06:45:58Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      },
      {
        "id" : "8e8f8dfb-b997-4818-a2ae-46c8218a663d",
        "parentId" : "3c59be9b-9a47-4a64-a51a-83b0a7339dd4",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "exitAfter was optional before.  The alternative would be to refactor this entire loop to have two different code paths.  0 means \"don't exit\", what structure would you prefer?",
        "createdAt" : "2018-02-10T20:54:36Z",
        "updatedAt" : "2018-02-10T20:54:37Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "b81f4745546340f08abd3f877c585aac9581d0f0",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +89,93 @@\t\tcurr := clientCertificateManager.Current()\n\n\t\tif exitAfter > 0 {\n\t\t\tnow := time.Now()\n\t\t\tif curr == nil {"
  },
  {
    "id" : "bde36735-5b22-45de-ab29-723e1b0f73f1",
    "prId" : 59316,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/59316#pullrequestreview-97632507",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "321a18c4-ab73-4522-8847-ad4117a9bc3d",
        "parentId" : null,
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "Is this the same without the if nesting? \r\n```golang\r\nif !clientCertificateManager.ServerHealthy() {\r\n  glog.Errorf(\"server down, trying again\")\r\n  return\r\n}\r\nif curr != nil {\r\n  lastCertAvailable = now\r\n}\r\nif now.After(lastCertAvailable.Add(exitAfter)) {\r\n  glog.Fatalf(\"It has been %s since a valid client cert was found and the server is responsive, exiting.\", exitAfter)\r\n}\r\nif now.After(curr.Leaf.NotAfter) {\r\n  glog.Fatalf(\"The currently active client certificate has expired and the server is responsive, exiting.\")\r\n}\r\n``` ",
        "createdAt" : "2018-02-08T06:40:11Z",
        "updatedAt" : "2018-02-08T06:44:49Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      },
      {
        "id" : "e5053eb1-89fb-412e-bb08-7cfb89104ffc",
        "parentId" : "321a18c4-ab73-4522-8847-ad4117a9bc3d",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Not 100%, although it may just be better if this is easier to reason about than if the exact message is precise.",
        "createdAt" : "2018-02-12T17:50:01Z",
        "updatedAt" : "2018-02-12T17:50:01Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "260f495e-a877-4c97-ad51-683ed8f91805",
        "parentId" : "321a18c4-ab73-4522-8847-ad4117a9bc3d",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "I'm somewhat hesitant to change the logic to look simpler but give worse messages.  I agree this particular loop is ugly.",
        "createdAt" : "2018-02-19T18:53:11Z",
        "updatedAt" : "2018-02-19T18:53:11Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "b81f4745546340f08abd3f877c585aac9581d0f0",
    "line" : 40,
    "diffHunk" : "@@ -1,1 +91,95 @@\t\tif exitAfter > 0 {\n\t\t\tnow := time.Now()\n\t\t\tif curr == nil {\n\t\t\t\t// the certificate has been deleted from disk or is otherwise corrupt\n\t\t\t\tif now.After(lastCertAvailable.Add(exitAfter)) {"
  },
  {
    "id" : "02567a56-5286-4839-b412-d8dea111e515",
    "prId" : 49899,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/49899#pullrequestreview-53337694",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "96488bf1-2801-4a7a-aa37-572794a59fb7",
        "parentId" : null,
        "authorId" : "0af48e59-4be9-46ce-9275-aa218813b6fd",
        "body" : "note: the previous updateTransport did not zero the Insecure option.",
        "createdAt" : "2017-07-31T20:54:00Z",
        "updatedAt" : "2017-08-01T23:34:25Z",
        "lastEditedBy" : "0af48e59-4be9-46ce-9275-aa218813b6fd",
        "tags" : [
        ]
      }
    ],
    "commit" : "98795b32de55caaa10ba7d6cc92abbaa9fcf001f",
    "line" : 111,
    "diffHunk" : "@@ -1,1 +109,113 @@\tclientConfig.CAData = nil\n\tclientConfig.CAFile = \"\"\n\tclientConfig.Insecure = false\n\treturn nil\n}"
  },
  {
    "id" : "11d6dd07-b5d4-4425-a064-10f68bcfc043",
    "prId" : 49899,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/49899#pullrequestreview-53337858",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ea38dd6b-2f97-4d2c-81a0-60082ef6a353",
        "parentId" : null,
        "authorId" : "0af48e59-4be9-46ce-9275-aa218813b6fd",
        "body" : "Another strategy might be to build hooks into the manager, but this seemed like a less intrusive fix. Am open to either.",
        "createdAt" : "2017-07-31T20:54:40Z",
        "updatedAt" : "2017-08-01T23:34:25Z",
        "lastEditedBy" : "0af48e59-4be9-46ce-9275-aa218813b6fd",
        "tags" : [
        ]
      }
    ],
    "commit" : "98795b32de55caaa10ba7d6cc92abbaa9fcf001f",
    "line" : 51,
    "diffHunk" : "@@ -1,1 +49,53 @@}\n\n// updateTransport is an internal method that exposes how often this method checks that the\n// client cert has changed. Intended for testing.\nfunc updateTransport(stopCh <-chan struct{}, period time.Duration, clientConfig *restclient.Config, clientCertificateManager Manager) error {"
  },
  {
    "id" : "5123273c-5062-42ec-8f3e-c04bdfc1cf06",
    "prId" : 49899,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/49899#pullrequestreview-53666976",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "18d8306d-0fb8-4de0-b7fa-d3a736948bbd",
        "parentId" : null,
        "authorId" : "0af48e59-4be9-46ce-9275-aa218813b6fd",
        "body" : "@mikedanese let me know if this looks better.",
        "createdAt" : "2017-08-01T23:43:57Z",
        "updatedAt" : "2017-08-01T23:43:57Z",
        "lastEditedBy" : "0af48e59-4be9-46ce-9275-aa218813b6fd",
        "tags" : [
        ]
      }
    ],
    "commit" : "98795b32de55caaa10ba7d6cc92abbaa9fcf001f",
    "line" : 120,
    "diffHunk" : "@@ -1,1 +118,122 @@\n\tmu    sync.Mutex\n\tconns map[*closableConn]struct{}\n}\n"
  }
]