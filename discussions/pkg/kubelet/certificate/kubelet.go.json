[
  {
    "id" : "1c608cf1-ad83-4923-97aa-ec8ce753f21c",
    "prId" : 84614,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/84614#pullrequestreview-326307810",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dc85ae57-1c1a-4287-a84f-cdeca6f76424",
        "parentId" : null,
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "This assumes that this function will only be called once which is not obvious... but I guess that's how we do thinks. I'd probably prefer moving both of these to package level, but won't block this change.",
        "createdAt" : "2019-12-03T17:10:26Z",
        "updatedAt" : "2019-12-03T17:10:26Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      }
    ],
    "commit" : "8e50c55e6bf715d9067376a9e7f136ffacb0a3ee",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +62,66 @@\t)\n\tlegacyregistry.MustRegister(certificateExpiration)\n\tvar certificateRenewFailure = compbasemetrics.NewCounter(\n\t\t&compbasemetrics.CounterOpts{\n\t\t\tSubsystem:      metrics.KubeletSubsystem,"
  },
  {
    "id" : "d31238f6-7600-4178-a4f6-e7b8d7436ee4",
    "prId" : 84534,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/84534#pullrequestreview-309880969",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b520feac-f0d6-43cf-820a-028597d6667e",
        "parentId" : null,
        "authorId" : "d7870cae-47b0-4c8e-8527-be8fc4be86de",
        "body" : "The `server_expiration_seconds` above has a `StabilityLevel` field. Should the new `server_rotation_seconds` have that as well?",
        "createdAt" : "2019-10-30T13:55:00Z",
        "updatedAt" : "2019-11-01T20:33:10Z",
        "lastEditedBy" : "d7870cae-47b0-4c8e-8527-be8fc4be86de",
        "tags" : [
        ]
      },
      {
        "id" : "5c3d3624-a142-4885-9539-408acb499cf4",
        "parentId" : "b520feac-f0d6-43cf-820a-028597d6667e",
        "authorId" : "b8626c03-9a5f-42c6-abcb-6855fc266a5c",
        "body" : "Good catch. Added",
        "createdAt" : "2019-10-30T21:39:51Z",
        "updatedAt" : "2019-11-01T20:33:10Z",
        "lastEditedBy" : "b8626c03-9a5f-42c6-abcb-6855fc266a5c",
        "tags" : [
        ]
      },
      {
        "id" : "e7b607c1-132f-48f0-83a5-d96b0b2acfcf",
        "parentId" : "b520feac-f0d6-43cf-820a-028597d6667e",
        "authorId" : "d7870cae-47b0-4c8e-8527-be8fc4be86de",
        "body" : ":+1: ",
        "createdAt" : "2019-10-31T13:36:37Z",
        "updatedAt" : "2019-11-01T20:33:10Z",
        "lastEditedBy" : "d7870cae-47b0-4c8e-8527-be8fc4be86de",
        "tags" : [
        ]
      }
    ],
    "commit" : "3e817d17a5eb7e6a5b35a0e5622177884abbc196",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +64,68 @@\n\tcertificateRotationAge := compbasemetrics.NewHistogram(\n\t\t&compbasemetrics.HistogramOpts{\n\t\t\tSubsystem: metrics.KubeletSubsystem,\n\t\t\tName:      \"certificate_manager_server_rotation_seconds\","
  },
  {
    "id" : "f48491d9-5685-479c-9f79-084b145edc71",
    "prId" : 81534,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/81534#pullrequestreview-279741893",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ad3a6713-4084-4785-9327-ac9b5972718b",
        "parentId" : null,
        "authorId" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "body" : "Does this change the user-facing metric at all?",
        "createdAt" : "2019-08-26T17:51:45Z",
        "updatedAt" : "2019-08-28T18:19:07Z",
        "lastEditedBy" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "tags" : [
        ]
      },
      {
        "id" : "06f56160-4c18-4717-8ef9-2ee10440c96a",
        "parentId" : "ad3a6713-4084-4785-9327-ac9b5972718b",
        "authorId" : "09e31512-b413-47a1-bc83-20b5a77064ee",
        "body" : "The help becomes annotated with the metrics stability level. This serves to inform the consumer of the metric that the metric does not currently come with any backwards compatibility guarantees and as such can be modified in backwards incompatible ways (adding/deleting labels or even wholesale deletion). ",
        "createdAt" : "2019-08-26T17:59:21Z",
        "updatedAt" : "2019-08-28T18:19:07Z",
        "lastEditedBy" : "09e31512-b413-47a1-bc83-20b5a77064ee",
        "tags" : [
        ]
      }
    ],
    "commit" : "6f70f781df3b968fff955226bbd80058167d7d21",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +59,63 @@\t\t\tName:           \"server_expiration_seconds\",\n\t\t\tHelp:           \"Gauge of the lifetime of a certificate. The value is the date the certificate will expire in seconds since January 1, 1970 UTC.\",\n\t\t\tStabilityLevel: compbasemetrics.ALPHA,\n\t\t},\n\t)"
  },
  {
    "id" : "7d10c780-3b59-4f68-96be-a5063cb05b83",
    "prId" : 65594,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/65594#pullrequestreview-133070581",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2c4fc3e2-a54a-46d7-82d4-eddc7e12e91e",
        "parentId" : null,
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Hrm.  Is there any scenario where the node hostname can like an IP, but is not actually an IP and would not be appropriate to interpret as an IP?",
        "createdAt" : "2018-06-29T00:30:08Z",
        "updatedAt" : "2018-07-10T18:34:26Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "d8e6550e-0686-4656-bdd2-bee7a9864198",
        "parentId" : "2c4fc3e2-a54a-46d7-82d4-eddc7e12e91e",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "> Is there any scenario where the node hostname can like an IP, but is not actually an IP and would not be appropriate to interpret as an IP?\r\n\r\nNo? A hostname that parses as an IP *is* an IP... SNI wouldn't treat it as a DNS name, cert verification would require an IP SAN (c.f. https://golang.org/src/crypto/x509/verify.go?s=28297:28349#L914)",
        "createdAt" : "2018-06-29T01:02:03Z",
        "updatedAt" : "2018-07-10T18:34:26Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "7af8c6acc446b9870860c1ec6cc8786348249062",
    "line" : 66,
    "diffHunk" : "@@ -1,1 +114,118 @@\t\tswitch address.Type {\n\t\tcase v1.NodeHostName:\n\t\t\tif ip := net.ParseIP(address.Address); ip != nil {\n\t\t\t\tseenIPs[address.Address] = true\n\t\t\t} else {"
  }
]