[
  {
    "id" : "757d8305-f141-4ccf-adf7-cde1b11c3f4c",
    "prId" : 91360,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/91360#pullrequestreview-420950120",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "63b35efd-fca5-415a-b125-9a5f65624e13",
        "parentId" : null,
        "authorId" : "4aab55a0-5299-4d58-b630-6d54a352dba8",
        "body" : "You've validated that this will work correctly if ephemeralStorageLimit is nil?",
        "createdAt" : "2020-05-23T14:41:16Z",
        "updatedAt" : "2020-05-23T14:41:24Z",
        "lastEditedBy" : "4aab55a0-5299-4d58-b630-6d54a352dba8",
        "tags" : [
        ]
      },
      {
        "id" : "8a1c823c-654d-4850-9dfe-08ac4e5dd8b4",
        "parentId" : "63b35efd-fca5-415a-b125-9a5f65624e13",
        "authorId" : "3e6193cc-73c8-4ba1-9ba0-392a4e4e1fe0",
        "body" : "yes, I have validated and you can see test case.",
        "createdAt" : "2020-05-23T14:43:36Z",
        "updatedAt" : "2020-05-23T14:43:36Z",
        "lastEditedBy" : "3e6193cc-73c8-4ba1-9ba0-392a4e4e1fe0",
        "tags" : [
        ]
      },
      {
        "id" : "28995eee-0a02-401e-bbd6-64f5762f959f",
        "parentId" : "63b35efd-fca5-415a-b125-9a5f65624e13",
        "authorId" : "3e6193cc-73c8-4ba1-9ba0-392a4e4e1fe0",
        "body" : "@RobertKrawitz Hi, do you think there is any problem?",
        "createdAt" : "2020-05-29T03:10:27Z",
        "updatedAt" : "2020-05-29T03:10:27Z",
        "lastEditedBy" : "3e6193cc-73c8-4ba1-9ba0-392a4e4e1fe0",
        "tags" : [
        ]
      },
      {
        "id" : "083f579b-02a7-405f-a326-e95e500a7b9a",
        "parentId" : "63b35efd-fca5-415a-b125-9a5f65624e13",
        "authorId" : "4aab55a0-5299-4d58-b630-6d54a352dba8",
        "body" : "/lgtm\r\n\r\nI'm good with it.",
        "createdAt" : "2020-05-29T13:28:53Z",
        "updatedAt" : "2020-05-29T13:28:53Z",
        "lastEditedBy" : "4aab55a0-5299-4d58-b630-6d54a352dba8",
        "tags" : [
        ]
      }
    ],
    "commit" : "2367569f138ddb35385aed5e7e485eed425c73a9",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +264,268 @@\t\t\t\t\tvolumeSpec.Volume.EmptyDir.SizeLimit != nil &&\n\t\t\t\t\tvolumeSpec.Volume.EmptyDir.SizeLimit.Value() > 0 &&\n\t\t\t\t\t(sizeLimit.Value() == 0 || volumeSpec.Volume.EmptyDir.SizeLimit.Value() < sizeLimit.Value()) {\n\t\t\t\t\tsizeLimit = resource.NewQuantity(volumeSpec.Volume.EmptyDir.SizeLimit.Value(), resource.BinarySI)\n\t\t\t\t}"
  },
  {
    "id" : "1d6e35cc-6362-40fd-a1cb-7be653fc511d",
    "prId" : 80369,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/80369#pullrequestreview-270614003",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "69cd2ad6-645e-4d07-ad5e-9b5d78f853a3",
        "parentId" : null,
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "how big can this get?  is it possible for this to grow unbounded ?",
        "createdAt" : "2019-08-02T20:00:00Z",
        "updatedAt" : "2019-08-05T08:08:51Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      },
      {
        "id" : "18dc29b1-a4fc-4631-954c-f2d97dc1c889",
        "parentId" : "69cd2ad6-645e-4d07-ad5e-9b5d78f853a3",
        "authorId" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "body" : "Good question, errors are stored in `sets.String`, so it *can* grow if every error has a different text. I added a limit of 10, just in case there is a bug in the populator.",
        "createdAt" : "2019-08-05T08:09:22Z",
        "updatedAt" : "2019-08-05T08:09:22Z",
        "lastEditedBy" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "tags" : [
        ]
      }
    ],
    "commit" : "c744385804a7e51fdb15cc86894b30ff69bdcd70",
    "line" : 74,
    "diffHunk" : "@@ -1,1 +438,442 @@}\n\nfunc (dsw *desiredStateOfWorld) AddErrorToPod(podName types.UniquePodName, err string) {\n\tdsw.Lock()\n\tdefer dsw.Unlock()"
  },
  {
    "id" : "1917a0ae-f834-4c9d-af9a-640a7a12d774",
    "prId" : 66928,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/66928#pullrequestreview-240257116",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2f64fb94-0530-4c2e-aa14-14b40eb5dd9c",
        "parentId" : null,
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "i understand this is an upper-bound for container writable layer, logs, and empyDir.\r\n\r\nif an emptyDir specifies a local size limit, i guess it would have had to been lower than the cumulative pod limit, and since this is tracking, but not enforcing it doesn't matter?\r\n\r\n/cc @jingxu97 ",
        "createdAt" : "2019-05-21T18:06:59Z",
        "updatedAt" : "2019-05-29T19:23:15Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      },
      {
        "id" : "9724d762-2e6d-40a3-bbaf-07f439fdffea",
        "parentId" : "2f64fb94-0530-4c2e-aa14-14b40eb5dd9c",
        "authorId" : "4aab55a0-5299-4d58-b630-6d54a352dba8",
        "body" : "Correct.  When we turn on enforcement we'll have to decide how to handle it.",
        "createdAt" : "2019-05-21T18:47:05Z",
        "updatedAt" : "2019-05-29T19:23:15Z",
        "lastEditedBy" : "4aab55a0-5299-4d58-b630-6d54a352dba8",
        "tags" : [
        ]
      },
      {
        "id" : "87f9fd64-0be2-4e06-bac5-5efff45c127e",
        "parentId" : "2f64fb94-0530-4c2e-aa14-14b40eb5dd9c",
        "authorId" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "body" : "Yes, emptyDir has a sizeLimit too. It is used to set the upper limit of emptyDir, user should normally set it lower than the sum of pod limits. I think here you can get sizeLimit from emptyDir too if it exists, and user the smaller value.",
        "createdAt" : "2019-05-21T19:36:17Z",
        "updatedAt" : "2019-05-29T19:23:15Z",
        "lastEditedBy" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "tags" : [
        ]
      }
    ],
    "commit" : "38753efcc758e16cb501906b9a1aabb7308a0246",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +238,242 @@\t\t\t\t_, podLimits := apiv1resource.PodRequestsAndLimits(pod)\n\t\t\t\tephemeralStorageLimit := podLimits[v1.ResourceEphemeralStorage]\n\t\t\t\tsizeLimit = resource.NewQuantity(ephemeralStorageLimit.Value(), resource.BinarySI)\n\t\t\t\tif volumeSpec.Volume.EmptyDir != nil &&\n\t\t\t\t\tvolumeSpec.Volume.EmptyDir.SizeLimit != nil &&"
  },
  {
    "id" : "77008efc-dd54-4d0e-9acc-76ad715ca48c",
    "prId" : 66928,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/66928#pullrequestreview-244030495",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "73624af7-019e-4e87-a22b-7f77ffa7aba2",
        "parentId" : null,
        "authorId" : "8e448017-7838-493d-a424-33cada0da657",
        "body" : "Do we not have SizeLimits for other \"ephermeral volume types\", e.g. for `SecretVolume`, `ConfigMapVolume`, etc.?",
        "createdAt" : "2019-05-30T18:15:49Z",
        "updatedAt" : "2019-05-30T20:13:00Z",
        "lastEditedBy" : "8e448017-7838-493d-a424-33cada0da657",
        "tags" : [
        ]
      },
      {
        "id" : "d07800cb-faf9-424d-ac21-2e6a05464a55",
        "parentId" : "73624af7-019e-4e87-a22b-7f77ffa7aba2",
        "authorId" : "4aab55a0-5299-4d58-b630-6d54a352dba8",
        "body" : "This project only applies to EmptyDir volumes (and potentially anything else covered by local ephemeral storage, but there are no plans to cover other volume types under that umbrella).\r\n\r\nLocal ephemeral storage is defined to be EmptyDir volumes, writable layers, and logs.  Writable layers and logs aren't volumes and would have to be covered through cadvisor.  Secrets and configmaps are not defined to be local ephemeral storage.",
        "createdAt" : "2019-05-30T21:07:22Z",
        "updatedAt" : "2019-05-30T21:10:45Z",
        "lastEditedBy" : "4aab55a0-5299-4d58-b630-6d54a352dba8",
        "tags" : [
        ]
      }
    ],
    "commit" : "38753efcc758e16cb501906b9a1aabb7308a0246",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +242,246 @@\t\t\t\t\tvolumeSpec.Volume.EmptyDir.SizeLimit != nil &&\n\t\t\t\t\tvolumeSpec.Volume.EmptyDir.SizeLimit.Value() > 0 &&\n\t\t\t\t\tvolumeSpec.Volume.EmptyDir.SizeLimit.Value() < sizeLimit.Value() {\n\t\t\t\t\tsizeLimit = resource.NewQuantity(volumeSpec.Volume.EmptyDir.SizeLimit.Value(), resource.BinarySI)\n\t\t\t\t}"
  },
  {
    "id" : "737d8cfc-462e-4c91-bcd4-700c4bd5d684",
    "prId" : 29673,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "003f125f-8ff5-4ad6-b14a-29fc25a1a4da",
        "parentId" : null,
        "authorId" : "9680f0db-1c00-49c9-968a-be3d5084d153",
        "body" : "@pmorie @saad-ali It might make sense to update the error to highlight that this is an attachable volume where we are failing. Just a nit.\n",
        "createdAt" : "2016-07-27T17:19:49Z",
        "updatedAt" : "2016-07-27T21:54:10Z",
        "lastEditedBy" : "9680f0db-1c00-49c9-968a-be3d5084d153",
        "tags" : [
        ]
      },
      {
        "id" : "393a1d1c-5cb5-4507-a712-7d631cc00d24",
        "parentId" : "003f125f-8ff5-4ad6-b14a-29fc25a1a4da",
        "authorId" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "body" : "@matchstick I think that clarification would probably only help those who would already know that if GetUniqueVolumeNameFromSpec was being called, it's necessarily an attachable volume.\n",
        "createdAt" : "2016-07-27T21:15:18Z",
        "updatedAt" : "2016-07-27T21:54:10Z",
        "lastEditedBy" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "tags" : [
        ]
      }
    ],
    "commit" : "f15684e0c4aace9fac7e1dbf0ed3ce3d32c3eb8a",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +196,200 @@\t\tif err != nil {\n\t\t\treturn \"\", fmt.Errorf(\n\t\t\t\t\"failed to GetUniqueVolumeNameFromSpec for volumeSpec %q using volume plugin %q err=%v\",\n\t\t\t\tvolumeSpec.Name(),\n\t\t\t\tvolumePlugin.GetPluginName(),"
  },
  {
    "id" : "45849f9e-cb44-4b95-8aa9-f36776fa0105",
    "prId" : 27970,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0b02a482-f622-4d79-b611-606b5c906fc0",
        "parentId" : null,
        "authorId" : "8e448017-7838-493d-a424-33cada0da657",
        "body" : "nit: Double check this is a required change. Maybe we can pass in a dummy outerVolumeSpecName (same as volumeSpec.Name())?\n",
        "createdAt" : "2016-08-05T21:11:52Z",
        "updatedAt" : "2016-08-15T18:29:44Z",
        "lastEditedBy" : "8e448017-7838-493d-a424-33cada0da657",
        "tags" : [
        ]
      },
      {
        "id" : "a26186ff-40e8-4604-bf16-2ae8ce636b48",
        "parentId" : "0b02a482-f622-4d79-b611-606b5c906fc0",
        "authorId" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "body" : "After we change the logic to only use pod uid to check whether the desired or actual states contains the information about pod volume, using outerVolumeSpecName should also ok. But using outerVolumeSpecName is kind of confusing. It seems to me more clear to pass volumeSpec instead of a specific type of name in this function. \n",
        "createdAt" : "2016-08-09T18:49:55Z",
        "updatedAt" : "2016-08-15T18:29:44Z",
        "lastEditedBy" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "tags" : [
        ]
      },
      {
        "id" : "90cc9dad-7d26-4368-822a-ef6294b64097",
        "parentId" : "0b02a482-f622-4d79-b611-606b5c906fc0",
        "authorId" : "8e448017-7838-493d-a424-33cada0da657",
        "body" : "Ack\n",
        "createdAt" : "2016-08-10T03:42:05Z",
        "updatedAt" : "2016-08-15T18:29:44Z",
        "lastEditedBy" : "8e448017-7838-493d-a424-33cada0da657",
        "tags" : [
        ]
      }
    ],
    "commit" : "f19a1148db1b7584be6b6b60abaf8c0bd1503ed3",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +210,214 @@\t\t// For non-attachable volumes, generate a unique name based on the pod\n\t\t// namespace and name and the name of the volume within the pod.\n\t\tvolumeName = volumehelper.GetUniqueVolumeNameForNonAttachableVolume(podName, volumePlugin, volumeSpec)\n\t}\n"
  }
]