[
  {
    "id" : "c8508e1f-c3ea-4a49-b461-118399eedd8b",
    "prId" : 100183,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/100183#pullrequestreview-678911663",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7f419562-d609-4058-be20-c00aaaabe505",
        "parentId" : null,
        "authorId" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "body" : "Why is this state `VolumeMounted`? shouldn't this be `VolumeNotMounted`? ",
        "createdAt" : "2021-06-08T18:50:42Z",
        "updatedAt" : "2021-06-08T19:08:10Z",
        "lastEditedBy" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "tags" : [
        ]
      },
      {
        "id" : "6896aa59-50fd-41a9-8c3c-438f56cfc860",
        "parentId" : "7f419562-d609-4058-be20-c00aaaabe505",
        "authorId" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "body" : "reading this again - so basically we are saying if a volume is uncertain or mounted - then it is *not* removed from pod in the kubelet and hence can be removed from DSOW.  \r\n\r\nPreviously we prevented removal of uncertain volumes from DSOW, but since we now stop deletion of pods with uncertain volumes - it should be fine. ",
        "createdAt" : "2021-06-08T19:14:44Z",
        "updatedAt" : "2021-06-08T19:25:17Z",
        "lastEditedBy" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "tags" : [
        ]
      }
    ],
    "commit" : "d5da73032f7882afe180af77a5fcc8f441d36807",
    "line" : 48,
    "diffHunk" : "@@ -1,1 +712,716 @@\t\t\treturn false\n\t\t}\n\t\tif podObj.volumeMountStateForPod == operationexecutor.VolumeMounted {\n\t\t\treturn false\n\t\t}"
  },
  {
    "id" : "1602f4b0-891e-4223-8e69-d65acc936f10",
    "prId" : 100183,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/100183#pullrequestreview-687361285",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1f65ce3f-3e8a-47d1-8203-277e4eb0db22",
        "parentId" : null,
        "authorId" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "body" : "typo in - \"given pod does not exist\"?\r\n\r\nI would perhaps also add the context that - \r\n\r\n> If a volume is fully mounted or is in uncertain mount state for a pod, it is considered that pod still exists in volume manager's actual state of the world.   ",
        "createdAt" : "2021-06-08T19:22:24Z",
        "updatedAt" : "2021-06-08T19:22:25Z",
        "lastEditedBy" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "tags" : [
        ]
      },
      {
        "id" : "155d5556-a687-4a23-97a5-677dffa9d0cb",
        "parentId" : "1f65ce3f-3e8a-47d1-8203-277e4eb0db22",
        "authorId" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "body" : "Rephrased a bit, using your suggestion.\r\n\r\n```\r\n\t// PodRemovedFromVolume returns true if the given pod does not exist in the list of\r\n\t// mountedPods for the given volume in the cache, indicating that the pod has\r\n\t// fully unmounted it or it was never mounted the volume.\r\n\t// If the volume is fully mounted or is in uncertain mount state for the pod, it is\r\n\t// considered that the pod still exists in volume manager's actual state of the world\r\n\t// and false is returned.\r\n```",
        "createdAt" : "2021-06-09T11:09:52Z",
        "updatedAt" : "2021-06-09T11:09:52Z",
        "lastEditedBy" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "tags" : [
        ]
      },
      {
        "id" : "bd9aedfb-32f9-4a91-8025-5c420b3d6d44",
        "parentId" : "1f65ce3f-3e8a-47d1-8203-277e4eb0db22",
        "authorId" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "body" : "how about name the function PodVolumeNotExist?",
        "createdAt" : "2021-06-09T16:25:15Z",
        "updatedAt" : "2021-06-09T16:25:15Z",
        "lastEditedBy" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "tags" : [
        ]
      },
      {
        "id" : "5f75e0c0-f4a8-480b-a279-fe5c87e84281",
        "parentId" : "1f65ce3f-3e8a-47d1-8203-277e4eb0db22",
        "authorId" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "body" : "I think it would be confusing with `PodExistsInVolume` - these two methods are not simple negation of each other. I intentionally chose a different name.",
        "createdAt" : "2021-06-18T12:38:19Z",
        "updatedAt" : "2021-06-18T12:38:19Z",
        "lastEditedBy" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "tags" : [
        ]
      }
    ],
    "commit" : "d5da73032f7882afe180af77a5fcc8f441d36807",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +117,121 @@\t// considered that the pod still exists in volume manager's actual state of the world\n\t// and false is returned.\n\tPodRemovedFromVolume(podName volumetypes.UniquePodName, volumeName v1.UniqueVolumeName) bool\n\n\t// VolumeExistsWithSpecName returns true if the given volume specified with the"
  },
  {
    "id" : "c489e6bd-d9be-4985-be76-0f07bce28f41",
    "prId" : 82492,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/82492#pullrequestreview-285866595",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d15e152d-5bd4-44c7-a4c4-d63864c5b7c0",
        "parentId" : null,
        "authorId" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "body" : "This line https://github.com/kubernetes/kubernetes/pull/82492/files#diff-450e811a4953f760ff1594ede8b2037eR753 already set the state to uncertain. Why need to set it up here too?",
        "createdAt" : "2019-09-09T22:19:50Z",
        "updatedAt" : "2019-12-12T03:10:37Z",
        "lastEditedBy" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "tags" : [
        ]
      },
      {
        "id" : "c7db6191-40a8-48ee-b956-199cca662331",
        "parentId" : "d15e152d-5bd4-44c7-a4c4-d63864c5b7c0",
        "authorId" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "body" : "My thinking is - this is to safeguard against callers who may not be setting this correctly. The function is called `MarkVolumeMountAsUncertain`, so caller may expect that volume will be marked uncertain without explicitly specifying the state. ",
        "createdAt" : "2019-09-10T01:39:30Z",
        "updatedAt" : "2019-12-12T03:10:37Z",
        "lastEditedBy" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "tags" : [
        ]
      }
    ],
    "commit" : "ca532c6fb2c08f859eca13e0557f3b2aec9a18e0",
    "line" : 135,
    "diffHunk" : "@@ -1,1 +361,365 @@\nfunc (asw *actualStateOfWorld) MarkVolumeMountAsUncertain(markVolumeOpts operationexecutor.MarkVolumeOpts) error {\n\tmarkVolumeOpts.VolumeMountState = operationexecutor.VolumeMountUncertain\n\treturn asw.AddPodToVolume(markVolumeOpts)\n}"
  },
  {
    "id" : "8a811c0f-255f-43bb-8e0f-23d072a42751",
    "prId" : 82492,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/82492#pullrequestreview-286709874",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1d2dab12-ac69-45ca-9888-7ef3f4b789e4",
        "parentId" : null,
        "authorId" : "3eb39df2-c27a-40ed-9fab-cabae1c6353d",
        "body" : "mounted or not ? instead of `mounted or is not` ?",
        "createdAt" : "2019-09-11T10:58:43Z",
        "updatedAt" : "2019-12-12T03:10:37Z",
        "lastEditedBy" : "3eb39df2-c27a-40ed-9fab-cabae1c6353d",
        "tags" : [
        ]
      }
    ],
    "commit" : "ca532c6fb2c08f859eca13e0557f3b2aec9a18e0",
    "line" : 56,
    "diffHunk" : "@@ -1,1 +170,174 @@\toperationexecutor.AttachedVolume\n\n\t// DeviceMountState indicates if device has been globally mounted or is not.\n\tDeviceMountState operationexecutor.DeviceMountState\n}"
  },
  {
    "id" : "247ed071-094d-4283-99b4-fcc6292f8409",
    "prId" : 82492,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/82492#pullrequestreview-330971855",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9e330c43-4965-4c90-9bf5-ef1c01444e50",
        "parentId" : null,
        "authorId" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "body" : "I think that `volumeMountStateForPod` should be set also when the `podObj` exists, i.e. outside this `if` - it may have changed from Uncertain to Mounted.",
        "createdAt" : "2019-12-06T12:51:14Z",
        "updatedAt" : "2019-12-12T03:10:37Z",
        "lastEditedBy" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "tags" : [
        ]
      },
      {
        "id" : "775ee272-c9b6-46b5-847f-9655b92a6053",
        "parentId" : "9e330c43-4965-4c90-9bf5-ef1c01444e50",
        "authorId" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "body" : "fixed",
        "createdAt" : "2019-12-12T03:10:39Z",
        "updatedAt" : "2019-12-12T03:10:39Z",
        "lastEditedBy" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "tags" : [
        ]
      }
    ],
    "commit" : "ca532c6fb2c08f859eca13e0557f3b2aec9a18e0",
    "line" : 226,
    "diffHunk" : "@@ -1,1 +485,489 @@\t\t\tvolumeGidValue:         volumeGidValue,\n\t\t\tvolumeSpec:             volumeSpec,\n\t\t\tvolumeMountStateForPod: markVolumeOpts.VolumeMountState,\n\t\t}\n\t}"
  },
  {
    "id" : "a8c35106-8c06-48c2-84a4-e58162b165e7",
    "prId" : 71074,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/71074#pullrequestreview-213556773",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c08f7fe1-3d64-4961-88ad-324ac85dba7c",
        "parentId" : null,
        "authorId" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "body" : "Do we really need this? If we prevent concurrent operation on same volume - won't a pod that uses same volume will pretty much cause another `MountDevice` operation?",
        "createdAt" : "2018-11-15T21:00:52Z",
        "updatedAt" : "2018-11-16T16:52:20Z",
        "lastEditedBy" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "tags" : [
        ]
      },
      {
        "id" : "5adf47a2-6b11-4f74-87a7-2d1c34d18fef",
        "parentId" : "c08f7fe1-3d64-4961-88ad-324ac85dba7c",
        "authorId" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "body" : "Yes, we need it. Consider UnmountDevice is in progress and a new pod arrives.\r\n\r\n1. UnmountDevice finishes. This calls `MarkDeviceAsUnmounted` which clears the devicePath, i.e. calls `SetVolumeGloballyMounted(..., devicePath=\"\", ...)`\r\n2. New MountDevice (WaitForAttach) starts and sees empty devicePath -> problems.",
        "createdAt" : "2018-11-16T08:56:34Z",
        "updatedAt" : "2018-11-16T16:52:20Z",
        "lastEditedBy" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "tags" : [
        ]
      },
      {
        "id" : "39d3e99e-8eab-4a53-b5dc-cd3128f950ac",
        "parentId" : "c08f7fe1-3d64-4961-88ad-324ac85dba7c",
        "authorId" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "body" : "sorry to put a comment this late. very good catch of this bug. I think to avoid such bugs, it is better to not reuse SetVolumeGloballyMounted for both MarkDeviceAsMounted and MarkDeviceAsUnmounted (this function just to set the bool globallyMounted to false so no need to pass devicePath or deviceMountPath)",
        "createdAt" : "2019-03-12T17:57:02Z",
        "updatedAt" : "2019-03-12T17:57:02Z",
        "lastEditedBy" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "tags" : [
        ]
      }
    ],
    "commit" : "52835374019faa5e0e6892402aa0904f918f002c",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +570,574 @@\tif devicePath != \"\" {\n\t\tvolumeObj.devicePath = devicePath\n\t}\n\tasw.attachedVolumes[volumeName] = volumeObj\n\treturn nil"
  },
  {
    "id" : "4790e499-0adc-4a92-975f-e85a14975aeb",
    "prId" : 61549,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/61549#pullrequestreview-108212396",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a3c237f3-399f-4f1b-8606-f0384af53da9",
        "parentId" : null,
        "authorId" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "body" : "Should we cover this with some simple unit tests? Such that - when someone adds 2 pods with same PD-name then returned mounted volumes should have correct values?",
        "createdAt" : "2018-03-29T19:58:55Z",
        "updatedAt" : "2018-03-30T19:08:04Z",
        "lastEditedBy" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "tags" : [
        ]
      },
      {
        "id" : "96d5c716-e3ae-4edb-b13c-2c21a6e0abf6",
        "parentId" : "a3c237f3-399f-4f1b-8606-f0384af53da9",
        "authorId" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "body" : "I added unit test for this. PTAL. Thanks!",
        "createdAt" : "2018-03-29T21:36:12Z",
        "updatedAt" : "2018-03-30T19:08:04Z",
        "lastEditedBy" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "tags" : [
        ]
      }
    ],
    "commit" : "264e4ed38c064efb586ddb475db1d8f50b6adc70",
    "line" : 103,
    "diffHunk" : "@@ -1,1 +732,736 @@\t\t\tBlockVolumeMapper:   mountedPod.blockVolumeMapper,\n\t\t\tVolumeGidValue:      mountedPod.volumeGidValue,\n\t\t\tVolumeSpec:          mountedPod.volumeSpec,\n\t\t\tDeviceMountPath:     attachedVolume.deviceMountPath}}\n}"
  },
  {
    "id" : "5671a69b-a06a-4e48-806e-bfa4bb8b65ba",
    "prId" : 61549,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/61549#pullrequestreview-110142704",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6eb38d77-8736-449d-90d7-f7b13bf18597",
        "parentId" : null,
        "authorId" : "8e448017-7838-493d-a424-33cada0da657",
        "body" : "Let's remove `spec *volume.Spec` from `type attachedVolume struct` as well.",
        "createdAt" : "2018-04-03T18:19:54Z",
        "updatedAt" : "2018-04-03T18:20:22Z",
        "lastEditedBy" : "8e448017-7838-493d-a424-33cada0da657",
        "tags" : [
        ]
      },
      {
        "id" : "3e1a4ff0-7623-426f-af99-439ea72f0ac4",
        "parentId" : "6eb38d77-8736-449d-90d7-f7b13bf18597",
        "authorId" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "body" : "yeah, I would prefer that - but there is a minor catch. For attachable volume types, I think volume entry is removed from `podVolumes` after volume is unmounted. We need a place where volume spec can still be found for device to be unmounted.  ",
        "createdAt" : "2018-04-03T18:34:12Z",
        "updatedAt" : "2018-04-03T18:34:12Z",
        "lastEditedBy" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "tags" : [
        ]
      },
      {
        "id" : "e2b9a046-6477-4012-9cf3-fb3c633cce7b",
        "parentId" : "6eb38d77-8736-449d-90d7-f7b13bf18597",
        "authorId" : "8e448017-7838-493d-a424-33cada0da657",
        "body" : "Each `attachedVolume` has a list of `mountedPods` and each mounted pod should have a spec right?",
        "createdAt" : "2018-04-04T05:02:46Z",
        "updatedAt" : "2018-04-04T05:02:46Z",
        "lastEditedBy" : "8e448017-7838-493d-a424-33cada0da657",
        "tags" : [
        ]
      },
      {
        "id" : "dbc128de-5ebb-4778-ae46-61696939942d",
        "parentId" : "6eb38d77-8736-449d-90d7-f7b13bf18597",
        "authorId" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "body" : "Sorry I used wrong field name. I meant that mountedPod entry is removed from `attachedVolume.mountedPods` entry after unmounting volume - https://github.com/kubernetes/kubernetes/blob/master/pkg/kubelet/volumemanager/cache/actual_state_of_world.go#L326\r\n\r\nBut we still have to unmount the device and that call will not have access to volume spec anymore. ",
        "createdAt" : "2018-04-04T16:18:20Z",
        "updatedAt" : "2018-04-04T16:18:20Z",
        "lastEditedBy" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "tags" : [
        ]
      },
      {
        "id" : "3dabb298-61af-4859-9718-ff0a837f051a",
        "parentId" : "6eb38d77-8736-449d-90d7-f7b13bf18597",
        "authorId" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "body" : "@gnufied actually I think after the changes I made https://github.com/kubernetes/kubernetes/pull/58177, unmountdevice or unmapdevice will not need volume spec anymore.\r\n\r\nBut we still have problem because kubelet might need to detach volume locally. If we don't have volume spec in attachedVolume, after pods are unmounted, we don't have a spec anymore and will fail to detach volume in current design. ",
        "createdAt" : "2018-04-04T20:17:48Z",
        "updatedAt" : "2018-04-04T20:41:25Z",
        "lastEditedBy" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "tags" : [
        ]
      },
      {
        "id" : "cfbb9fef-684b-46d1-b07b-b09338be307a",
        "parentId" : "6eb38d77-8736-449d-90d7-f7b13bf18597",
        "authorId" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "body" : "I am not sure if that is true. #58177 only touches `VolumeUnmount` functions - it does not yet make any modifications to `UnmountDevice` functions. \r\n\r\nAnd if you see first line of `UnmountDevice` function - https://github.com/kubernetes/kubernetes/blob/master/pkg/volume/util/operationexecutor/operation_executor.go#L782 , it relies on `volume.Spec` present in `attachedVolume` struct. So if we remove the spec from `attachedVolume` and also `mountedPod` entry is removed because of previously successful `UnmountVolume` then how is this function going to get `volume.Spec` ? \r\n",
        "createdAt" : "2018-04-04T22:03:18Z",
        "updatedAt" : "2018-04-04T22:03:18Z",
        "lastEditedBy" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "tags" : [
        ]
      },
      {
        "id" : "4bccefad-f5c3-4e04-8c37-ecf07f36b3ca",
        "parentId" : "6eb38d77-8736-449d-90d7-f7b13bf18597",
        "authorId" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "body" : "@gnufied yes, I missed that part. Based on this and also attach/detach issue, I think it would be better to file a follow up issue and let this merge first. \r\n@saad-ali are you ok with it?",
        "createdAt" : "2018-04-05T00:12:14Z",
        "updatedAt" : "2018-04-05T00:12:15Z",
        "lastEditedBy" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "tags" : [
        ]
      },
      {
        "id" : "b2f72df5-5a3a-4630-8290-ba0cae83cb60",
        "parentId" : "6eb38d77-8736-449d-90d7-f7b13bf18597",
        "authorId" : "8e448017-7838-493d-a424-33cada0da657",
        "body" : "> @gnufied yes, I missed that part. Based on this and also attach/detach issue, I think it would be better to file a follow up issue and let this merge first.\r\n> @saad-ali are you ok with it?\r\n\r\nYes that is fine. But we really need to come back and clean all of this up. Having a `volume.Spec` in `attachedVolume` does not make sense because multiple pods could reference the same volume and therefore which `volumeSpec` goes inside the shared `attachedVolume` object.",
        "createdAt" : "2018-04-06T17:20:10Z",
        "updatedAt" : "2018-04-06T17:20:11Z",
        "lastEditedBy" : "8e448017-7838-493d-a424-33cada0da657",
        "tags" : [
        ]
      }
    ],
    "commit" : "264e4ed38c064efb586ddb475db1d8f50b6adc70",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +267,271 @@\n\t// mapper used to block volumes support\n\tblockVolumeMapper volume.BlockVolumeMapper\n\n\t// spec is the volume spec containing the specification for this volume."
  },
  {
    "id" : "3d76e5ce-2fd9-4f99-a14a-c23d71652850",
    "prId" : 33796,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/33796#pullrequestreview-2627366",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "839384aa-b0a3-4ace-a396-38308d356db1",
        "parentId" : null,
        "authorId" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "body" : "And here as well I guess?\n",
        "createdAt" : "2016-09-30T23:47:50Z",
        "updatedAt" : "2016-10-04T00:14:41Z",
        "lastEditedBy" : "8fc8f958-3c0e-47dd-a0fb-b8cc483b4efb",
        "tags" : [
        ]
      },
      {
        "id" : "7fdb26ce-4714-4db7-b222-d3777fef84b2",
        "parentId" : "839384aa-b0a3-4ace-a396-38308d356db1",
        "authorId" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "body" : "added the log\n",
        "createdAt" : "2016-10-03T23:43:52Z",
        "updatedAt" : "2016-10-04T00:14:41Z",
        "lastEditedBy" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "tags" : [
        ]
      }
    ],
    "commit" : "9e8edf6baf06cdbf662dab3399c61fb5da6861ca",
    "line" : null,
    "diffHunk" : "@@ -1,1 +368,372 @@\t\t}\n\t} else {\n\t\t// If volume object already exists, update the fields such as device path\n\t\tvolumeObj.devicePath = devicePath\n\t\tvolumeObj.spec = volumeSpec"
  },
  {
    "id" : "e2a1cf45-d8c0-437d-bfaa-4dde92a0f520",
    "prId" : 33796,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/33796#pullrequestreview-2566075",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "629bcd92-511a-48bc-8041-55ddaff150a5",
        "parentId" : null,
        "authorId" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "body" : "added the log\n",
        "createdAt" : "2016-10-03T17:25:54Z",
        "updatedAt" : "2016-10-04T00:14:41Z",
        "lastEditedBy" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "tags" : [
        ]
      }
    ],
    "commit" : "9e8edf6baf06cdbf662dab3399c61fb5da6861ca",
    "line" : null,
    "diffHunk" : "@@ -1,1 +368,372 @@\t\t}\n\t} else {\n\t\t// If volume object already exists, update the fields such as device path\n\t\tvolumeObj.devicePath = devicePath\n\t\tvolumeObj.spec = volumeSpec"
  },
  {
    "id" : "bacb6bc6-c954-4a44-ba47-cad3ae23aa69",
    "prId" : 33796,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/33796#pullrequestreview-2630342",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a1fe41ae-7cd7-4712-92e7-757c7ba50a69",
        "parentId" : null,
        "authorId" : "8e448017-7838-493d-a424-33cada0da657",
        "body" : "This will not update the `devicePath`/`volumeSpec` for `asw.attachedVolumes[volumeName]`. It only updates the temporary `volumeObj` object. To update the value in the map, you have to write the temp object back:\n\n``` GO\n        asw.attachedVolumes[volumeName] = volumeObj\n```\n",
        "createdAt" : "2016-10-03T22:34:41Z",
        "updatedAt" : "2016-10-04T00:14:41Z",
        "lastEditedBy" : "8e448017-7838-493d-a424-33cada0da657",
        "tags" : [
        ]
      },
      {
        "id" : "d83eaf73-7ab4-46ea-9b32-eed61cdb52d6",
        "parentId" : "a1fe41ae-7cd7-4712-92e7-757c7ba50a69",
        "authorId" : "8e448017-7838-493d-a424-33cada0da657",
        "body" : "nit: also add a unit test verifying new behavior please.\n",
        "createdAt" : "2016-10-03T22:56:15Z",
        "updatedAt" : "2016-10-04T00:14:41Z",
        "lastEditedBy" : "8e448017-7838-493d-a424-33cada0da657",
        "tags" : [
        ]
      },
      {
        "id" : "bf231196-af6d-4055-9704-9a309f1945d8",
        "parentId" : "a1fe41ae-7cd7-4712-92e7-757c7ba50a69",
        "authorId" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "body" : "I tried to add the unit test, but this device path stored in attachedVolumes does not used anywhere. So right now there is no public API to retrieve this piece of information. If we want to test it, it requires to add a new API which we don't really need right now.\n\nI changed this part of code mainly for consistency.\n",
        "createdAt" : "2016-10-04T00:12:41Z",
        "updatedAt" : "2016-10-04T00:14:41Z",
        "lastEditedBy" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "tags" : [
        ]
      }
    ],
    "commit" : "9e8edf6baf06cdbf662dab3399c61fb5da6861ca",
    "line" : null,
    "diffHunk" : "@@ -1,1 +370,374 @@\t\t// If volume object already exists, update the fields such as device path\n\t\tvolumeObj.devicePath = devicePath\n\t\tvolumeObj.spec = volumeSpec\n\t\tglog.V(2).Infof(\"Volume %q is already added to attachedVolume list, update device path %q\",\n\t\t\tvolumeName,"
  }
]