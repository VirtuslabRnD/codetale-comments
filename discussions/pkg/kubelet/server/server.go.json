[
  {
    "id" : "a7e26822-f4fb-49c0-84fd-12b71cd4d71e",
    "prId" : 99838,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/99838#pullrequestreview-605082467",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "14bf290b-d580-4610-94e0-0d7333b0b775",
        "parentId" : null,
        "authorId" : "6ea93d56-a0ec-4969-ac42-11a78c2085e6",
        "body" : "When replacing `Fatalf`  we should add `os.Exit(1)` to maintain exit. Same as you did above when replacing `Fatal` ",
        "createdAt" : "2021-03-05T12:18:49Z",
        "updatedAt" : "2021-03-05T12:26:08Z",
        "lastEditedBy" : "6ea93d56-a0ec-4969-ac42-11a78c2085e6",
        "tags" : [
        ]
      }
    ],
    "commit" : "5af10e98287fa9b6ac5cfb8ae988a8a8b7b8746f",
    "line" : 43,
    "diffHunk" : "@@ -1,1 +195,199 @@\tl, err := util.CreateListener(socket)\n\tif err != nil {\n\t\tklog.ErrorS(err, \"Failed to create listener for podResources endpoint\")\n\t\tos.Exit(1)\n\t}"
  },
  {
    "id" : "9fd96c99-7f10-4b2d-ab0f-7cf12e44f118",
    "prId" : 89412,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/89412#pullrequestreview-381676304",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e538f93b-fa5c-4032-a45b-9466e8e1ad78",
        "parentId" : null,
        "authorId" : "09e31512-b413-47a1-bc83-20b5a77064ee",
        "body" : "nit: I'd prefer `getKnownMetricMethodOrDefault`",
        "createdAt" : "2020-03-24T23:44:28Z",
        "updatedAt" : "2020-04-02T09:15:27Z",
        "lastEditedBy" : "09e31512-b413-47a1-bc83-20b5a77064ee",
        "tags" : [
        ]
      },
      {
        "id" : "df2b245d-a102-41a1-9c44-afe3bd0d6deb",
        "parentId" : "e538f93b-fa5c-4032-a45b-9466e8e1ad78",
        "authorId" : "7aca96c2-45d7-4567-99be-0323d7556c55",
        "body" : "I think we should keep this method name consistent with `getMetricBucket`. Either name is fine by me but I would like us to be consistent on naming similar functions in the same way.",
        "createdAt" : "2020-03-25T22:48:58Z",
        "updatedAt" : "2020-04-02T09:15:27Z",
        "lastEditedBy" : "7aca96c2-45d7-4567-99be-0323d7556c55",
        "tags" : [
        ]
      },
      {
        "id" : "0672cf7d-c001-4ba4-bd64-ce48001c3707",
        "parentId" : "e538f93b-fa5c-4032-a45b-9466e8e1ad78",
        "authorId" : "fefa207d-2c87-4d8c-9852-388c075106b9",
        "body" : "I'm inclined to leave them since the default values are still a bucket in the end.",
        "createdAt" : "2020-03-26T03:15:46Z",
        "updatedAt" : "2020-04-02T09:15:27Z",
        "lastEditedBy" : "fefa207d-2c87-4d8c-9852-388c075106b9",
        "tags" : [
        ]
      }
    ],
    "commit" : "14969831e9a2ff40e1ee71ce5afdc504f7536a59",
    "line" : 48,
    "diffHunk" : "@@ -1,1 +302,306 @@\n// getMetricMethodBucket checks for unknown or invalid HTTP verbs\nfunc (s *Server) getMetricMethodBucket(method string) string {\n\tif s.metricsMethodBuckets.Has(method) {\n\t\treturn method"
  },
  {
    "id" : "7aede7b8-d93a-4585-91f7-d87d5f9c0de0",
    "prId" : 87913,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/87913#pullrequestreview-355502454",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c5ae2572-77e4-441e-983a-a521bb8738be",
        "parentId" : null,
        "authorId" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "body" : "nit: prefer\r\n```suggestion\r\n\tif s.metricsBuckets[root] {\r\n```",
        "createdAt" : "2020-02-07T23:56:43Z",
        "updatedAt" : "2020-02-07T23:59:29Z",
        "lastEditedBy" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "tags" : [
        ]
      }
    ],
    "commit" : "9802bfcec0580169cffce2a3d468689a407fa7dc",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +292,296 @@func (s *Server) getMetricBucket(path string) string {\n\troot := getURLRootPath(path)\n\tif s.metricsBuckets[root] == true {\n\t\treturn root\n\t}"
  },
  {
    "id" : "92ce6099-dde3-43bc-8a62-39e8f8a6b583",
    "prId" : 77287,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/77287#pullrequestreview-233040139",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2b886dde-bb95-4de4-a6a9-027ef3ac43e5",
        "parentId" : null,
        "authorId" : "d7870cae-47b0-4c8e-8527-be8fc4be86de",
        "body" : "Nit: Can we keep this variable local to `isLongRunningRequest`? We can promote it to package visible later if we have a good reason to.",
        "createdAt" : "2019-05-01T14:37:05Z",
        "updatedAt" : "2019-05-01T14:37:05Z",
        "lastEditedBy" : "d7870cae-47b0-4c8e-8527-be8fc4be86de",
        "tags" : [
        ]
      },
      {
        "id" : "56c8a783-ecf6-4247-acbb-b0b756efe760",
        "parentId" : "2b886dde-bb95-4de4-a6a9-027ef3ac43e5",
        "authorId" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "body" : "The intention is not to compose the map every time isLongRunningRequest is called.",
        "createdAt" : "2019-05-01T14:51:18Z",
        "updatedAt" : "2019-05-01T14:51:19Z",
        "lastEditedBy" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "tags" : [
        ]
      },
      {
        "id" : "9c930a8e-da6f-4e46-9d53-430b7adc8560",
        "parentId" : "2b886dde-bb95-4de4-a6a9-027ef3ac43e5",
        "authorId" : "d7870cae-47b0-4c8e-8527-be8fc4be86de",
        "body" : "Ah yes great point :)",
        "createdAt" : "2019-05-02T14:27:14Z",
        "updatedAt" : "2019-05-02T14:27:15Z",
        "lastEditedBy" : "d7870cae-47b0-4c8e-8527-be8fc4be86de",
        "tags" : [
        ]
      }
    ],
    "commit" : "fe6e50df3d6cd4458aa09caf88fe64a9814dd687",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +825,829 @@}\n\nvar longRunningRequestPathMap = map[string]bool{\n\t\"exec\":        true,\n\t\"attach\":      true,"
  },
  {
    "id" : "5e30376d-59b6-47ab-bf52-a91fcdf8a374",
    "prId" : 75228,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/75228#pullrequestreview-223945936",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e4522e3c-8242-43cc-95b1-504cd62a79fb",
        "parentId" : null,
        "authorId" : "d2b16581-e7e9-48b8-9f76-6f6bcb9ec300",
        "body" : "we might want to list these in the help-text of the long running metric",
        "createdAt" : "2019-04-05T23:15:11Z",
        "updatedAt" : "2019-04-11T21:17:15Z",
        "lastEditedBy" : "d2b16581-e7e9-48b8-9f76-6f6bcb9ec300",
        "tags" : [
        ]
      },
      {
        "id" : "e0b8e34c-7fdf-4228-9bbe-0c6c3151a658",
        "parentId" : "e4522e3c-8242-43cc-95b1-504cd62a79fb",
        "authorId" : "ad5a6fa4-f2e7-44c8-969f-5aef2d8704df",
        "body" : "Good point! Will fix it!",
        "createdAt" : "2019-04-08T16:12:55Z",
        "updatedAt" : "2019-04-11T21:17:15Z",
        "lastEditedBy" : "ad5a6fa4-f2e7-44c8-969f-5aef2d8704df",
        "tags" : [
        ]
      }
    ],
    "commit" : "538cd87864ee18fa0ae31b20b39728ada6f2f9ba",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +827,831 @@// isLongRunningRequest determines whether the request is long-running or not.\nfunc isLongRunningRequest(path string) bool {\n\tlongRunningRequestPaths := []string{\"exec\", \"attach\", \"portforward\", \"debug\"}\n\tfor _, p := range longRunningRequestPaths {\n\t\tif p == path {"
  },
  {
    "id" : "70a7f0aa-f157-44bb-a8aa-fcba7db603d6",
    "prId" : 64006,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/64006#pullrequestreview-125346610",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a29cf010-6e91-4a54-a5c2-e0413b3fc8f1",
        "parentId" : null,
        "authorId" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "body" : "set MaxBytesPerSec, or at least put a TODO",
        "createdAt" : "2018-06-01T01:17:00Z",
        "updatedAt" : "2018-06-01T01:24:56Z",
        "lastEditedBy" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "tags" : [
        ]
      },
      {
        "id" : "bb0f7cce-eb5a-4570-a9c0-a1a7e46aba05",
        "parentId" : "a29cf010-6e91-4a54-a5c2-e0413b3fc8f1",
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "Will do.",
        "createdAt" : "2018-06-01T08:28:20Z",
        "updatedAt" : "2018-06-01T08:28:20Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      },
      {
        "id" : "861034af-66f2-4b74-91e3-1a38de3b2326",
        "parentId" : "a29cf010-6e91-4a54-a5c2-e0413b3fc8f1",
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "Done.",
        "createdAt" : "2018-06-02T00:15:01Z",
        "updatedAt" : "2018-06-02T00:15:01Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      }
    ],
    "commit" : "746c32db4cf47a0245ef1c1aa053df49fcf51c13",
    "line" : 140,
    "diffHunk" : "@@ -1,1 +658,662 @@\t\treturn\n\t}\n\thandler := proxy.NewUpgradeAwareHandler(url, nil /*transport*/, false /*wrapTransport*/, false /*upgradeRequired*/, &responder{})\n\thandler.ServeHTTP(response.ResponseWriter, request.Request)\n}"
  },
  {
    "id" : "3833be8d-cb47-41e7-acfb-93b043955d3a",
    "prId" : 64006,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/64006#pullrequestreview-125346877",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2e9081d0-2903-45bb-bdaf-1bc28e038168",
        "parentId" : null,
        "authorId" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "body" : "nit: refactor this to function, so we can be sure to use the same options for exec, attach & pf",
        "createdAt" : "2018-06-01T01:17:51Z",
        "updatedAt" : "2018-06-01T01:24:56Z",
        "lastEditedBy" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "tags" : [
        ]
      },
      {
        "id" : "5a480769-eae3-4073-b480-42acd2b65b2e",
        "parentId" : "2e9081d0-2903-45bb-bdaf-1bc28e038168",
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "Will do.",
        "createdAt" : "2018-06-01T08:28:25Z",
        "updatedAt" : "2018-06-01T08:28:25Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      },
      {
        "id" : "4585e0bf-e903-4a99-8511-ebf45afe11f5",
        "parentId" : "2e9081d0-2903-45bb-bdaf-1bc28e038168",
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "Done",
        "createdAt" : "2018-06-02T00:18:19Z",
        "updatedAt" : "2018-06-02T00:18:20Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      }
    ],
    "commit" : "746c32db4cf47a0245ef1c1aa053df49fcf51c13",
    "line" : 141,
    "diffHunk" : "@@ -1,1 +659,663 @@\t}\n\thandler := proxy.NewUpgradeAwareHandler(url, nil /*transport*/, false /*wrapTransport*/, false /*upgradeRequired*/, &responder{})\n\thandler.ServeHTTP(response.ResponseWriter, request.Request)\n}\n"
  },
  {
    "id" : "26d96136-d0b7-4ffc-a852-5d62e67ed43b",
    "prId" : 64006,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/64006#pullrequestreview-125346885",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d3597770-ac07-44a1-94b5-98da289d29f2",
        "parentId" : null,
        "authorId" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "body" : "It looks like the apiserver [sets upgradeRequired](https://github.com/kubernetes/kubernetes/blob/master/pkg/registry/core/pod/rest/subresources.go#L106) for exec, attach & PF requests, so I think we should do the same.",
        "createdAt" : "2018-06-01T01:20:34Z",
        "updatedAt" : "2018-06-01T01:24:56Z",
        "lastEditedBy" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "tags" : [
        ]
      },
      {
        "id" : "b5d34244-8ee5-449f-8e15-91cf82609427",
        "parentId" : "d3597770-ac07-44a1-94b5-98da289d29f2",
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "Will do.",
        "createdAt" : "2018-06-01T08:28:46Z",
        "updatedAt" : "2018-06-01T08:28:46Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      },
      {
        "id" : "c98566e6-6390-4f11-bbb8-0104d4f96da5",
        "parentId" : "d3597770-ac07-44a1-94b5-98da289d29f2",
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "Done.",
        "createdAt" : "2018-06-02T00:18:25Z",
        "updatedAt" : "2018-06-02T00:18:26Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      }
    ],
    "commit" : "746c32db4cf47a0245ef1c1aa053df49fcf51c13",
    "line" : 140,
    "diffHunk" : "@@ -1,1 +658,662 @@\t\treturn\n\t}\n\thandler := proxy.NewUpgradeAwareHandler(url, nil /*transport*/, false /*wrapTransport*/, false /*upgradeRequired*/, &responder{})\n\thandler.ServeHTTP(response.ResponseWriter, request.Request)\n}"
  },
  {
    "id" : "b1b7cdb9-64e9-4c3e-8b5b-a9bc534c866f",
    "prId" : 63406,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/63406#pullrequestreview-118842503",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ba502492-da5a-4c57-afd2-58ebe944ac64",
        "parentId" : null,
        "authorId" : "4108cff4-d61c-4717-862b-6c3be3b73be2",
        "body" : "I've considered this a couple of times, but wasn't sure if it would be too breaking: technically this is the only place where the instrumentation guidelines are broken, these should be \"pod\", \"namespace\" and \"container\". There is actually common friction that this is not the case, but I as I said I wonder if it's too breaking and since we want to remove cAdvisor whether it's worth doing at this point. cc @DirectXMan12 ",
        "createdAt" : "2018-05-06T17:19:30Z",
        "updatedAt" : "2018-05-07T18:51:35Z",
        "lastEditedBy" : "4108cff4-d61c-4717-862b-6c3be3b73be2",
        "tags" : [
        ]
      },
      {
        "id" : "458b4a8a-12a2-4009-a232-8610ba659473",
        "parentId" : "ba502492-da5a-4c57-afd2-58ebe944ac64",
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "this just keeps the existing naming extended to pod cgroups.   We can change or discuss label names in a follow-on",
        "createdAt" : "2018-05-07T22:01:32Z",
        "updatedAt" : "2018-05-07T22:01:32Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      },
      {
        "id" : "75eb8e76-4603-4cad-a72e-925745a4b73b",
        "parentId" : "ba502492-da5a-4c57-afd2-58ebe944ac64",
        "authorId" : "3a4b4830-dc71-4d7e-a7db-de2453284945",
        "body" : "yeah, I'd like to change it at some point, but let's keep it as is in this PR.",
        "createdAt" : "2018-05-09T14:21:12Z",
        "updatedAt" : "2018-05-09T14:27:35Z",
        "lastEditedBy" : "3a4b4830-dc71-4d7e-a7db-de2453284945",
        "tags" : [
        ]
      },
      {
        "id" : "872eb7de-ea26-4566-92b5-fb2dabacf0e8",
        "parentId" : "ba502492-da5a-4c57-afd2-58ebe944ac64",
        "authorId" : "4108cff4-d61c-4717-862b-6c3be3b73be2",
        "body" : "sounds reasonable to me",
        "createdAt" : "2018-05-09T17:59:25Z",
        "updatedAt" : "2018-05-09T17:59:25Z",
        "lastEditedBy" : "4108cff4-d61c-4717-862b-6c3be3b73be2",
        "tags" : [
        ]
      }
    ],
    "commit" : "a09990cd43d9a42f3013ff4df113a02263612459",
    "line" : 68,
    "diffHunk" : "@@ -1,1 +856,860 @@\t\t\tmetrics.LabelName:  name,\n\t\t\tmetrics.LabelImage: image,\n\t\t\t\"pod_name\":         podName,\n\t\t\t\"namespace\":        namespace,\n\t\t\t\"container_name\":   containerName,"
  },
  {
    "id" : "96a27db0-ff19-43b5-8cac-197ada7fa83b",
    "prId" : 41543,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/41543#pullrequestreview-32507146",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "362e4c6d-f22e-4539-a81f-c369ae476227",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "I guess I would have expected remotecommand/server, remotecommand/client, and maybe remotecommand/consts (or /public), none of those being under the kubelet package. Not asking for a change in this PR, just noting.",
        "createdAt" : "2017-04-12T22:19:43Z",
        "updatedAt" : "2017-04-13T12:58:40Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "f50480c714c012dfb996a4385f48fe2750230910",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +56,60 @@\tkubecontainer \"k8s.io/kubernetes/pkg/kubelet/container\"\n\t\"k8s.io/kubernetes/pkg/kubelet/server/portforward\"\n\tremotecommandserver \"k8s.io/kubernetes/pkg/kubelet/server/remotecommand\"\n\t\"k8s.io/kubernetes/pkg/kubelet/server/stats\"\n\t\"k8s.io/kubernetes/pkg/kubelet/server/streaming\""
  },
  {
    "id" : "6171e9e7-2d68-4f17-b0a2-ec210faeb823",
    "prId" : 36253,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/36253#pullrequestreview-7336248",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "16ab037c-6daf-4ba9-a8d9-80c808f74c86",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "Including it in the runtime interface would be cleaner than plumbing this through all these functions \n",
        "createdAt" : "2016-11-05T01:03:55Z",
        "updatedAt" : "2016-11-08T18:59:02Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "dd3d40c2-010e-4a8e-86e1-c365ed8ba143",
        "parentId" : "16ab037c-6daf-4ba9-a8d9-80c808f74c86",
        "authorId" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "body" : "I disagree. This is very specific to the in-process docker runtime shim, and doesn't apply for any of the other runtimes. Adding it to the runtime interface would mean adding a no-op (return a nil handler) or respond with a 404 to all the other runtimes. We could add a getter to the host interface, but I'm indifferent about which is cleaner...\n",
        "createdAt" : "2016-11-05T19:40:59Z",
        "updatedAt" : "2016-11-08T18:59:02Z",
        "lastEditedBy" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "tags" : [
        ]
      },
      {
        "id" : "a98d4f48-f0e6-4010-86fe-4848e8095f77",
        "parentId" : "16ab037c-6daf-4ba9-a8d9-80c808f74c86",
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "This is a workaround for the in-process docker CRI shim to reuse the same 10250 port. We will eventually need to handle serving requests on a different port and decouple the logic here. \nWhatever has the smallest footprint and affects other runtimes the least would be my choice.\n",
        "createdAt" : "2016-11-06T16:56:27Z",
        "updatedAt" : "2016-11-08T18:59:02Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "7badc1d226624320ac1a13179d13baf868ad5fa4",
    "line" : 46,
    "diffHunk" : "@@ -1,1 +285,289 @@\n// InstallDeguggingHandlers registers the HTTP request patterns that serve logs or run commands/containers\nfunc (s *Server) InstallDebuggingHandlers(criHandler http.Handler) {\n\tvar ws *restful.WebService\n"
  },
  {
    "id" : "f4ea89cb-837a-473d-a811-8e21d46544e9",
    "prId" : 36253,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/36253#pullrequestreview-7320618",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "09cfe053-b24b-4f1c-8455-501fc0843296",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "Any reason not to install this as a web service?\n",
        "createdAt" : "2016-11-05T01:31:58Z",
        "updatedAt" : "2016-11-08T18:59:02Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "f3b1243b-c787-45ab-90df-197ca939d877",
        "parentId" : "09cfe053-b24b-4f1c-8455-501fc0843296",
        "authorId" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "body" : "What are the advantages to using a webservice for this? It's already implemented as a webservice in the streaming server ([here](https://github.com/kubernetes/kubernetes/blob/0f57858a147f599595aa3e807860f588f39c7b3c/pkg/kubelet/server/streaming/server.go#L99)), and I wasn't sure how nested webservices would interact with eachother.\n",
        "createdAt" : "2016-11-05T19:43:56Z",
        "updatedAt" : "2016-11-08T18:59:02Z",
        "lastEditedBy" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "tags" : [
        ]
      }
    ],
    "commit" : "7badc1d226624320ac1a13179d13baf868ad5fa4",
    "line" : 63,
    "diffHunk" : "@@ -1,1 +398,402 @@\n\tif criHandler != nil {\n\t\ts.restfulCont.Handle(\"/cri/\", criHandler)\n\t}\n}"
  },
  {
    "id" : "6bf5b26c-ef8b-49ed-b0b0-31ae1521c9f5",
    "prId" : 23595,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9e542f27-5403-4239-8876-8f083e080bd4",
        "parentId" : null,
        "authorId" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "body" : "Can you just expose `GetRuntime` in the HostInterface instead?\n",
        "createdAt" : "2016-03-31T23:07:59Z",
        "updatedAt" : "2016-04-25T23:00:54Z",
        "lastEditedBy" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "tags" : [
        ]
      },
      {
        "id" : "f4f73423-92e8-4b62-8bc0-786360ea8495",
        "parentId" : "9e542f27-5403-4239-8876-8f083e080bd4",
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "I'd like to inject dependencies explicitly instead of passing in an opaque\nobject. I dislike the way we currently handle dependencies.\n\nOn Thu, Mar 31, 2016 at 4:08 PM, Tim St. Clair notifications@github.com\nwrote:\n\n> In pkg/kubelet/server/server.go\n> https://github.com/kubernetes/kubernetes/pull/23595#discussion_r58142448\n> :\n> \n> > @@ -105,9 +106,17 @@ func (a *filteringContainer) RegisteredHandlePaths() []string {\n> >  }\n> > \n> >  // ListenAndServeKubeletServer initializes a server to respond to HTTP network requests on the Kubelet.\n> > -func ListenAndServeKubeletServer(host HostInterface, resourceAnalyzer stats.ResourceAnalyzer, address net.IP, port uint, tlsOptions *TLSOptions, auth AuthInterface, enableDebuggingHandlers bool) {\n> > +func ListenAndServeKubeletServer(\n> > -   host HostInterface,\n> > -   resourceAnalyzer stats.ResourceAnalyzer,\n> > -   address net.IP,\n> > -   port uint,\n> > -   tlsOptions *TLSOptions,\n> > -   auth AuthInterface,\n> > -   enableDebuggingHandlers bool,\n> > -   runtime kubecontainer.Runtime) {\n> \n> Can you just expose GetRuntime in the HostInterface instead?\n> \n> —\n> You are receiving this because you authored the thread.\n> Reply to this email directly or view it on GitHub\n> https://github.com/kubernetes/kubernetes/pull/23595/files/008b5221cfcb0f0297b3ff83a5f3fb27714b9eb2#r58142448\n",
        "createdAt" : "2016-03-31T23:12:25Z",
        "updatedAt" : "2016-04-25T23:00:54Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      }
    ],
    "commit" : "e566948a754bfe9f81189e7333fc62fd123e34e3",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +114,118 @@\tauth AuthInterface,\n\tenableDebuggingHandlers bool,\n\truntime kubecontainer.Runtime) {\n\tglog.Infof(\"Starting to listen on %s:%d\", address, port)\n\thandler := NewServer(host, resourceAnalyzer, auth, enableDebuggingHandlers, runtime)"
  }
]