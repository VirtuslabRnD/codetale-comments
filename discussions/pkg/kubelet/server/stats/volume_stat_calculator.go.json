[
  {
    "id" : "7e2e537f-9d1e-47c5-8acb-01e76102605d",
    "prId" : 97972,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/97972#pullrequestreview-581596833",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "667b937b-15ee-4932-ac0c-2da84b24dfa6",
        "parentId" : null,
        "authorId" : "ffc1d568-c5ed-4932-82f4-3ae9d3bee69a",
        "body" : "Is there a way to have volumes (and no block volumes) or vice versa? It seems if that was the case then no metrics would be calculated based on this condition.",
        "createdAt" : "2021-02-01T22:28:26Z",
        "updatedAt" : "2021-04-22T16:23:03Z",
        "lastEditedBy" : "ffc1d568-c5ed-4932-82f4-3ae9d3bee69a",
        "tags" : [
        ]
      },
      {
        "id" : "d88a4a9a-c38c-4b41-aee2-1faaf9b0f93f",
        "parentId" : "667b937b-15ee-4932-ac0c-2da84b24dfa6",
        "authorId" : "1f54c5d1-c5cf-41c1-b046-4894d8619116",
        "body" : "Yes, you can have none, either, or both filesystem-volumes and block-volumes. In case there are `no filesystem-volumes` **and** `no block-volumes`, stats do not need to get gathered. In case some filesystem-volumes or block-volumes exist, stats will get gathered.",
        "createdAt" : "2021-02-02T07:43:31Z",
        "updatedAt" : "2021-04-22T16:23:03Z",
        "lastEditedBy" : "1f54c5d1-c5cf-41c1-b046-4894d8619116",
        "tags" : [
        ]
      },
      {
        "id" : "e5fb1c71-8552-4473-a090-cc896ac48bbc",
        "parentId" : "667b937b-15ee-4932-ac0c-2da84b24dfa6",
        "authorId" : "ffc1d568-c5ed-4932-82f4-3ae9d3bee69a",
        "body" : "I think I misread this. This makes sense, thank you for clarifying.",
        "createdAt" : "2021-02-02T17:29:53Z",
        "updatedAt" : "2021-04-22T16:23:03Z",
        "lastEditedBy" : "ffc1d568-c5ed-4932-82f4-3ae9d3bee69a",
        "tags" : [
        ]
      }
    ],
    "commit" : "fb703b4cc1a9a7f3c56660a2b665a429dcc11fa4",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +98,102 @@\tvolumes, found := s.statsProvider.ListVolumesForPod(s.pod.UID)\n\tblockVolumes, bvFound := s.statsProvider.ListBlockVolumesForPod(s.pod.UID)\n\tif !found && !bvFound {\n\t\treturn\n\t}"
  },
  {
    "id" : "392129df-4e26-43d9-87f9-231469f0f58f",
    "prId" : 78648,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/78648#pullrequestreview-494415951",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "221c91fd-d45d-4747-affe-8f2025851d65",
        "parentId" : null,
        "authorId" : "d7870cae-47b0-4c8e-8527-be8fc4be86de",
        "body" : "At a high level, is there a difference between an \"ephemeral\" volume and a \"local ephemeral\" volume? Or is this just a naming distinction?",
        "createdAt" : "2019-06-03T13:33:43Z",
        "updatedAt" : "2021-03-05T05:49:39Z",
        "lastEditedBy" : "d7870cae-47b0-4c8e-8527-be8fc4be86de",
        "tags" : [
        ]
      },
      {
        "id" : "fe6a2063-31af-4d4c-8fc1-a17975caed0d",
        "parentId" : "221c91fd-d45d-4747-affe-8f2025851d65",
        "authorId" : "e1ba72c9-3be8-432b-b345-ac2d180a8eab",
        "body" : "I think it is just a naming distinction, but I'm not confident.",
        "createdAt" : "2019-06-03T14:10:48Z",
        "updatedAt" : "2021-03-05T05:49:39Z",
        "lastEditedBy" : "e1ba72c9-3be8-432b-b345-ac2d180a8eab",
        "tags" : [
        ]
      },
      {
        "id" : "67bf1093-1255-4217-83fd-8b80905852ed",
        "parentId" : "221c91fd-d45d-4747-affe-8f2025851d65",
        "authorId" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "body" : "For persistent, we could have local or remote. But for ephemeral, we only have local ephemeral.",
        "createdAt" : "2020-02-26T00:39:19Z",
        "updatedAt" : "2021-03-05T05:49:39Z",
        "lastEditedBy" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "tags" : [
        ]
      },
      {
        "id" : "ebb823f8-448d-48d4-a8cd-15d8f749eb71",
        "parentId" : "221c91fd-d45d-4747-affe-8f2025851d65",
        "authorId" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "body" : "I disagree. A \"CSI ephemeral inline\" volume could also be remote, if that is how the CSI driver implements the volume. The upcoming \"generic ephemeral inline volumes\" will use a normal PVC for provisioning, and then the \"local\" part no longer applies at all.\r\n\r\n I would rename \"IsLocalEphemeralVolume\" to \"IsEphemeralVolume\".\r\n\r\nDoes it matter anywhere whether the volume is local or remote?\r\n\r\n\r\n",
        "createdAt" : "2020-06-02T13:53:51Z",
        "updatedAt" : "2021-03-05T05:49:39Z",
        "lastEditedBy" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "tags" : [
        ]
      },
      {
        "id" : "64347356-f87a-4e87-9e6c-4442076438f1",
        "parentId" : "221c91fd-d45d-4747-affe-8f2025851d65",
        "authorId" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "body" : "We clarified this in the definition of IsLocalEphemeralVolume: that the volume is local (= managed by kubelet) does matter.\r\n",
        "createdAt" : "2020-09-23T08:22:13Z",
        "updatedAt" : "2021-03-05T05:49:39Z",
        "lastEditedBy" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "tags" : [
        ]
      }
    ],
    "commit" : "fe7a862c2d14bf6f9aff92f11338ede0d3e1a9a1",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +124,128 @@\t\t}\n\t\tvolumeStats := s.parsePodVolumeStats(name, pvcRef, metric, volSpec)\n\t\tif util.IsLocalEphemeralVolume(volSpec) {\n\t\t\tephemeralStats = append(ephemeralStats, volumeStats)\n\t\t} else {"
  },
  {
    "id" : "3207cbb3-8784-4897-b9fd-1fd87156a179",
    "prId" : 78222,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/78222#pullrequestreview-248470797",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "252187b8-e1ed-4197-aaad-180222b0fcd3",
        "parentId" : null,
        "authorId" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "body" : "alternatively, you could make a helper function:\r\n```\r\nfunc getMetricValue(r *resource.Quantity) uint64 {\r\n  if r != nil {\r\n    return uint64(r.Value())\r\n  }\r\n  return 0\r\n```",
        "createdAt" : "2019-06-11T22:32:28Z",
        "updatedAt" : "2019-06-11T22:32:39Z",
        "lastEditedBy" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "tags" : [
        ]
      }
    ],
    "commit" : "cada0270fe195f1664bda43befc9547e454c7817",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +143,147 @@\tif metric.Available != nil {\n\t\tavailable = uint64(metric.Available.Value())\n\t}\n\tif metric.Capacity != nil {\n\t\tcapacity = uint64(metric.Capacity.Value())"
  },
  {
    "id" : "1fca79f8-933a-4e74-9529-e3d30eb11d46",
    "prId" : 55447,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/55447#pullrequestreview-77868883",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5cc0d1a8-9950-46e4-900a-f1bc36176944",
        "parentId" : null,
        "authorId" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "body" : "If all you need is the `FSType`, why not just pass in the `FSType`, instead of the whole volume spec?",
        "createdAt" : "2017-11-10T19:31:46Z",
        "updatedAt" : "2017-11-21T00:32:49Z",
        "lastEditedBy" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "tags" : [
        ]
      },
      {
        "id" : "aa72b42a-b47a-453f-ab81-7e30071b57a1",
        "parentId" : "5cc0d1a8-9950-46e4-900a-f1bc36176944",
        "authorId" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "body" : "fixed",
        "createdAt" : "2017-11-20T17:55:42Z",
        "updatedAt" : "2017-11-21T00:32:49Z",
        "lastEditedBy" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "tags" : [
        ]
      }
    ],
    "commit" : "75ef18c4d33e862ce97ad1a475bf71787003eb67",
    "line" : 58,
    "diffHunk" : "@@ -1,1 +141,145 @@\n// parsePodVolumeStats converts (internal) volume.Metrics to (external) stats.VolumeStats structures\nfunc (s *volumeStatCalculator) parsePodVolumeStats(podName string, pvcRef *stats.PVCReference, metric *volume.Metrics, volSpec v1.Volume) stats.VolumeStats {\n\tavailable := uint64(metric.Available.Value())\n\tcapacity := uint64(metric.Capacity.Value())"
  },
  {
    "id" : "b8cbc10c-8d7e-4f6a-843d-9474f4b2291d",
    "prId" : 55447,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/55447#pullrequestreview-77961382",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "386d2064-541e-4fda-92bd-b7b7dc5e4b91",
        "parentId" : null,
        "authorId" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "body" : "What about downward API? Also need to check for projected volumes with a configmap source.",
        "createdAt" : "2017-11-20T22:49:41Z",
        "updatedAt" : "2017-11-21T00:32:49Z",
        "lastEditedBy" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "tags" : [
        ]
      },
      {
        "id" : "7ab44ff3-8f6f-4457-920a-d49dc7fd9177",
        "parentId" : "386d2064-541e-4fda-92bd-b7b7dc5e4b91",
        "authorId" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "body" : "both downwardAPI and projected volume use strorageMemory medium, so it does not use disk.",
        "createdAt" : "2017-11-20T23:50:20Z",
        "updatedAt" : "2017-11-21T00:32:49Z",
        "lastEditedBy" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "tags" : [
        ]
      }
    ],
    "commit" : "75ef18c4d33e862ce97ad1a475bf71787003eb67",
    "line" : 75,
    "diffHunk" : "@@ -1,1 +159,163 @@func isVolumeEphemeral(volume v1.Volume) bool {\n\tif (volume.EmptyDir != nil && volume.EmptyDir.Medium == v1.StorageMediumDefault) ||\n\t\tvolume.ConfigMap != nil || volume.GitRepo != nil {\n\t\treturn true\n\t}"
  },
  {
    "id" : "896b3f6a-a430-4e39-a74f-cf071756055e",
    "prId" : 51448,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/51448#pullrequestreview-59338246",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7f5ff1c1-b518-4aa6-a550-75b4e2290775",
        "parentId" : null,
        "authorId" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "body" : "I am thinking to check pvcRef is nil or not here. If it is nil, return stats.VolumeStats without PVCRef field",
        "createdAt" : "2017-08-29T17:46:54Z",
        "updatedAt" : "2017-08-30T06:12:34Z",
        "lastEditedBy" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "tags" : [
        ]
      },
      {
        "id" : "487f53fd-f3f4-4095-992b-b9fadcd653f5",
        "parentId" : "7f5ff1c1-b518-4aa6-a550-75b4e2290775",
        "authorId" : "241ab19e-f85a-4d22-92e2-88f2b6287d14",
        "body" : "the result will be the same since PVCRef will default to nil whether we explicitly set `PVCRef: nil,` or not at all",
        "createdAt" : "2017-08-29T17:52:01Z",
        "updatedAt" : "2017-08-30T06:12:34Z",
        "lastEditedBy" : "241ab19e-f85a-4d22-92e2-88f2b6287d14",
        "tags" : [
        ]
      },
      {
        "id" : "0b581d0b-b23b-4158-bbd5-95ca2bee08d4",
        "parentId" : "7f5ff1c1-b518-4aa6-a550-75b4e2290775",
        "authorId" : "2b98e6a9-f85b-438b-b665-84ba7dd0d9d2",
        "body" : "Is this needed - the behavior would be the same i.e VolumeStats.PVCRef will be nil in both cases?",
        "createdAt" : "2017-08-29T17:52:38Z",
        "updatedAt" : "2017-08-30T06:12:34Z",
        "lastEditedBy" : "2b98e6a9-f85b-438b-b665-84ba7dd0d9d2",
        "tags" : [
        ]
      },
      {
        "id" : "5f30759d-0756-4fce-a1b1-5101e31c1d57",
        "parentId" : "7f5ff1c1-b518-4aa6-a550-75b4e2290775",
        "authorId" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "body" : "ok, I am hoping if PVCRef is nil, the printed result of volumestat will not show this field, instead of showing PVCRef: nil?",
        "createdAt" : "2017-08-29T18:20:54Z",
        "updatedAt" : "2017-08-30T06:12:34Z",
        "lastEditedBy" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "tags" : [
        ]
      },
      {
        "id" : "8c28a8c0-8237-4af0-b39a-2f63ba483903",
        "parentId" : "7f5ff1c1-b518-4aa6-a550-75b4e2290775",
        "authorId" : "2b98e6a9-f85b-438b-b665-84ba7dd0d9d2",
        "body" : "👍 - it won't. It's tagged optional/omit-empty.",
        "createdAt" : "2017-08-29T18:29:50Z",
        "updatedAt" : "2017-08-30T06:12:34Z",
        "lastEditedBy" : "2b98e6a9-f85b-438b-b665-84ba7dd0d9d2",
        "tags" : [
        ]
      }
    ],
    "commit" : "1ac56d8cbbdb72e75fb9b083f3f76afd4010e71e",
    "line" : 51,
    "diffHunk" : "@@ -1,1 +137,141 @@\treturn stats.VolumeStats{\n\t\tName:   podName,\n\t\tPVCRef: pvcRef,\n\t\tFsStats: stats.FsStats{Time: metric.Time, AvailableBytes: &available, CapacityBytes: &capacity,\n\t\t\tUsedBytes: &used, Inodes: &inodes, InodesFree: &inodesFree, InodesUsed: &inodesUsed},"
  },
  {
    "id" : "88fdeda0-fc9b-466c-bf04-01df6ca8f752",
    "prId" : 42435,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/42435#pullrequestreview-24879250",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2e3c9a5a-9e46-4355-86f9-1fbb540575ec",
        "parentId" : null,
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "nit: One field per line.",
        "createdAt" : "2017-03-03T00:23:46Z",
        "updatedAt" : "2017-03-03T00:23:47Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      }
    ],
    "commit" : "a90c7951d4a235eab09465e3a23d70d7e006e770",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +121,125 @@\treturn stats.VolumeStats{\n\t\tName: podName,\n\t\tFsStats: stats.FsStats{Time: metric.Time, AvailableBytes: &available, CapacityBytes: &capacity,\n\t\t\tUsedBytes: &used, Inodes: &inodes, InodesFree: &inodesFree, InodesUsed: &inodesUsed},\n\t}"
  }
]