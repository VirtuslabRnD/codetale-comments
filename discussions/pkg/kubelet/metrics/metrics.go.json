[
  {
    "id" : "7022c245-ef45-43a1-885d-cde8492d70cd",
    "prId" : 99000,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/99000#pullrequestreview-594463090",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0b0c20cc-dac8-4a1e-88db-79fad647ede1",
        "parentId" : null,
        "authorId" : "31a2ac00-6c67-4307-a4bc-bfd13f41ef27",
        "body" : "/cc @lilic \r\n\r\nthese metrics are currently provided by KSM but I think it would also be useful to be able to compare them to the kubelet-level view",
        "createdAt" : "2021-02-19T18:46:32Z",
        "updatedAt" : "2021-04-13T12:14:13Z",
        "lastEditedBy" : "31a2ac00-6c67-4307-a4bc-bfd13f41ef27",
        "tags" : [
        ]
      }
    ],
    "commit" : "30d2ad576ac9d29e8f18bc0adf6bfa1a23a968e2",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +446,450 @@\t\t[]string{\"container_state\"},\n\t)\n\t// StartedPodsTotal is a counter that tracks pod sandbox creation operations\n\tStartedPodsTotal = metrics.NewCounter(\n\t\t&metrics.CounterOpts{"
  },
  {
    "id" : "2347c830-536f-4f99-b281-b77ca0171629",
    "prId" : 99000,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/99000#pullrequestreview-609738334",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0c023b7c-f3b1-4a35-9c8d-d02420ae5b94",
        "parentId" : null,
        "authorId" : "a531e2c7-8431-4d2a-aa6f-1fdc4b357779",
        "body" : "We have kube_pod_start_time and kube_pod_info in kube-state-metrics, which can be summed into the total started pods. Note we have actual drill down of pod name. I guess if folks don't use KSM this can be useful and its not too much cardinality.\r\n\r\nhttps://github.com/kubernetes/kube-state-metrics/blob/master/docs/pod-metrics.md",
        "createdAt" : "2021-03-11T13:06:51Z",
        "updatedAt" : "2021-04-13T12:14:13Z",
        "lastEditedBy" : "a531e2c7-8431-4d2a-aa6f-1fdc4b357779",
        "tags" : [
        ]
      }
    ],
    "commit" : "30d2ad576ac9d29e8f18bc0adf6bfa1a23a968e2",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +86,90 @@\n\t// Metrics to keep track of total number of Pods and Containers started\n\tStartedPodsTotalKey             = \"started_pods_total\"\n\tStartedPodsErrorsTotalKey       = \"started_pods_errors_total\"\n\tStartedContainersTotalKey       = \"started_containers_total\""
  },
  {
    "id" : "b895c6ce-e4d2-4e69-a093-37575e74955a",
    "prId" : 99000,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/99000#pullrequestreview-631312696",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6d17956e-3a7e-4c4f-b417-e440279c1f72",
        "parentId" : null,
        "authorId" : "a531e2c7-8431-4d2a-aa6f-1fdc4b357779",
        "body" : "Same as above we have containers and init containers. Do you plan on adding init containers metrics as well?",
        "createdAt" : "2021-03-11T13:07:32Z",
        "updatedAt" : "2021-04-13T12:14:13Z",
        "lastEditedBy" : "a531e2c7-8431-4d2a-aa6f-1fdc4b357779",
        "tags" : [
        ]
      },
      {
        "id" : "6bfe9297-df11-4f23-bd07-04b6be6909a8",
        "parentId" : "6d17956e-3a7e-4c4f-b417-e440279c1f72",
        "authorId" : "a82a6b5c-7a5e-4ea3-bc82-c4f922ea88b1",
        "body" : "Yes, the type of container is stored using the label `container_type` rather than a separate metric.",
        "createdAt" : "2021-04-08T12:25:01Z",
        "updatedAt" : "2021-04-13T12:14:13Z",
        "lastEditedBy" : "a82a6b5c-7a5e-4ea3-bc82-c4f922ea88b1",
        "tags" : [
        ]
      }
    ],
    "commit" : "30d2ad576ac9d29e8f18bc0adf6bfa1a23a968e2",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +88,92 @@\tStartedPodsTotalKey             = \"started_pods_total\"\n\tStartedPodsErrorsTotalKey       = \"started_pods_errors_total\"\n\tStartedContainersTotalKey       = \"started_containers_total\"\n\tStartedContainersErrorsTotalKey = \"started_containers_errors_total\"\n"
  },
  {
    "id" : "109c75ae-8294-459f-b92b-7cc9cfa2b3a8",
    "prId" : 99000,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/99000#pullrequestreview-691162664",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3d4f3f98-5f18-48b2-9830-daf28e201117",
        "parentId" : null,
        "authorId" : "31a2ac00-6c67-4307-a4bc-bfd13f41ef27",
        "body" : "Note to self: this one is `NewCounter` but the rest of these new metrics are `NewCounterVec` because this one doesn't have any additional labels (e.g. container type, error).",
        "createdAt" : "2021-06-23T21:32:07Z",
        "updatedAt" : "2021-06-23T21:35:52Z",
        "lastEditedBy" : "31a2ac00-6c67-4307-a4bc-bfd13f41ef27",
        "tags" : [
        ]
      }
    ],
    "commit" : "30d2ad576ac9d29e8f18bc0adf6bfa1a23a968e2",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +447,451 @@\t)\n\t// StartedPodsTotal is a counter that tracks pod sandbox creation operations\n\tStartedPodsTotal = metrics.NewCounter(\n\t\t&metrics.CounterOpts{\n\t\t\tSubsystem:      KubeletSubsystem,"
  },
  {
    "id" : "e42ab9d6-dc77-4bbe-ab06-c87deeaec4e3",
    "prId" : 92407,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/92407#pullrequestreview-436013464",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c037dadc-b354-4bad-8462-548728d0b6eb",
        "parentId" : null,
        "authorId" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "body" : "not critical at all. This name change changes from `pod` (singular) to `pods` (plural) so maybe the same rename can be done for the variable name. ",
        "createdAt" : "2020-06-23T15:55:41Z",
        "updatedAt" : "2020-06-23T15:55:41Z",
        "lastEditedBy" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "tags" : [
        ]
      },
      {
        "id" : "93c981c7-1064-4bcd-b9cc-2fc619d9efb3",
        "parentId" : "c037dadc-b354-4bad-8462-548728d0b6eb",
        "authorId" : "ae15cfb8-5436-4398-94e0-d443e413b257",
        "body" : "Thanks for reminding, I never thought about the variable names, just focusing the metrics...But I guess it's optional.",
        "createdAt" : "2020-06-23T17:42:36Z",
        "updatedAt" : "2020-06-23T17:42:37Z",
        "lastEditedBy" : "ae15cfb8-5436-4398-94e0-d443e413b257",
        "tags" : [
        ]
      }
    ],
    "commit" : "168c695e1ad1546f16c55cfc6a7fb339405c4785",
    "line" : 1,
    "diffHunk" : "@@ -1,1 +347,351 @@\n\t// RunningPodCount is a gauge that tracks the number of Pods currently running\n\tRunningPodCount = metrics.NewGauge(\n\t\t&metrics.GaugeOpts{\n\t\t\tSubsystem:      KubeletSubsystem,"
  },
  {
    "id" : "9c5fe48d-8efd-4d9a-840c-6e860e72a5b1",
    "prId" : 92165,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/92165#pullrequestreview-526669534",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5301790d-c162-44e1-a662-e8feac4a0fde",
        "parentId" : null,
        "authorId" : "0c5a8fe3-d7c6-4fc1-9a85-a0a659bef1d4",
        "body" : "nit only:\r\n```suggestion\r\n\t\t\tHelp:           \"Cumulative number of requests to the PodResource endpoint. Broken down by server API version.\",\r\n```",
        "createdAt" : "2020-11-09T21:29:54Z",
        "updatedAt" : "2020-11-09T21:29:55Z",
        "lastEditedBy" : "0c5a8fe3-d7c6-4fc1-9a85-a0a659bef1d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "969e45f49f1886d2e974cdd5345b6ded8fa82e15",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +286,290 @@\t\t\tSubsystem:      KubeletSubsystem,\n\t\t\tName:           PodResourcesEndpointRequestsTotalKey,\n\t\t\tHelp:           \"Cumulative number of requests to the PodResource endpoint. Broken down by server api version.\",\n\t\t\tStabilityLevel: metrics.ALPHA,\n\t\t},"
  },
  {
    "id" : "a9cb4a3d-b339-4157-b336-8ba5a7479181",
    "prId" : 86251,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/86251#pullrequestreview-338013488",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d6cda9f8-ef94-4872-8e9e-05243f6faedf",
        "parentId" : null,
        "authorId" : "d2b16581-e7e9-48b8-9f76-6f6bcb9ec300",
        "body" : "It is generally preferable to report the time _at which_ an event occurred, rather than the time _since_ the event occurred.  This makes it easier to deal with latency in monitoring pipelines, since the time at which an event occurs is always correct.  The time since an event occurs is always outdated.\r\n\r\nIt also deals much better with bad kubelet health.  If the kubelet stops responding to metric scrapes, prometheus will continue to use the previously reported value for some time (usually a few minutes).  Sending the time at which an event occurred allows prometheus to alert on such cases as well.",
        "createdAt" : "2019-12-16T19:08:20Z",
        "updatedAt" : "2020-01-03T10:02:24Z",
        "lastEditedBy" : "d2b16581-e7e9-48b8-9f76-6f6bcb9ec300",
        "tags" : [
        ]
      },
      {
        "id" : "3dc8960d-2d9d-47fb-ad5b-70211ff60bd4",
        "parentId" : "d6cda9f8-ef94-4872-8e9e-05243f6faedf",
        "authorId" : "d2b16581-e7e9-48b8-9f76-6f6bcb9ec300",
        "body" : "See https://github.com/google/cadvisor/issues/2305 for an example of where cAdvisor does this.",
        "createdAt" : "2019-12-16T19:09:30Z",
        "updatedAt" : "2020-01-03T10:02:24Z",
        "lastEditedBy" : "d2b16581-e7e9-48b8-9f76-6f6bcb9ec300",
        "tags" : [
        ]
      },
      {
        "id" : "ea1e709c-250e-4ece-b92a-f1624f2e3707",
        "parentId" : "d6cda9f8-ef94-4872-8e9e-05243f6faedf",
        "authorId" : "d7870cae-47b0-4c8e-8527-be8fc4be86de",
        "body" : "Oooo interesting! Thank you - today I learned :)",
        "createdAt" : "2019-12-17T12:41:37Z",
        "updatedAt" : "2020-01-03T10:02:24Z",
        "lastEditedBy" : "d7870cae-47b0-4c8e-8527-be8fc4be86de",
        "tags" : [
        ]
      },
      {
        "id" : "983116c5-3e03-406c-9ea0-0c5df581546d",
        "parentId" : "d6cda9f8-ef94-4872-8e9e-05243f6faedf",
        "authorId" : "a1478705-4cd0-46fe-a843-060cf4cf0442",
        "body" : "I have updated the code as you suggested.\r\nI considered for a while whether the metric update should move to where `relistTime` is set but decided against it as my objective is to provide a metric that will give the same answer as Kubelet uses when deciding to go unhealthy.\r\nThe name remains _last_seen_ rather than, say, `last_relist`, to emphasise this.",
        "createdAt" : "2020-01-03T10:05:02Z",
        "updatedAt" : "2020-01-03T10:05:03Z",
        "lastEditedBy" : "a1478705-4cd0-46fe-a843-060cf4cf0442",
        "tags" : [
        ]
      }
    ],
    "commit" : "cc0b3e82eb81d5ab0a311a309112ad579d92f0ce",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +191,195 @@\t// PLEGLastSeen is a Gauge giving the Unix timestamp when the Kubelet's\n\t// Pod Lifecycle Event Generator (PLEG) was last seen active.\n\tPLEGLastSeen = metrics.NewGauge(\n\t\t&metrics.GaugeOpts{\n\t\t\tSubsystem:      KubeletSubsystem,"
  },
  {
    "id" : "9cb87181-f358-4ca4-b714-cc1d35972139",
    "prId" : 86167,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/86167#pullrequestreview-331855045",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "04b3a039-6d9d-4f5a-ae9d-6ee43b44cad2",
        "parentId" : null,
        "authorId" : "d7870cae-47b0-4c8e-8527-be8fc4be86de",
        "body" : "Do we need to go through some form of deprecation process to change the type of this metric? I.e. would this change not cause breakages for anyone who currently consumes `PLEGDiscardEvents`?\r\n\r\nDoes the `StabilityLevel: metrics.ALPHA` designation have any impact on my question above?",
        "createdAt" : "2019-12-12T12:24:01Z",
        "updatedAt" : "2019-12-12T12:24:44Z",
        "lastEditedBy" : "d7870cae-47b0-4c8e-8527-be8fc4be86de",
        "tags" : [
        ]
      },
      {
        "id" : "4f7d724d-5964-48a4-8ee8-e3bb507b6519",
        "parentId" : "04b3a039-6d9d-4f5a-ae9d-6ee43b44cad2",
        "authorId" : "7af0054e-b779-41e6-9250-c1a8994bbc4a",
        "body" : "ALPHA metrics have no stability guarantees，and it just use in PLEG relist() function, so no impact for other one",
        "createdAt" : "2019-12-12T14:23:34Z",
        "updatedAt" : "2019-12-12T14:23:34Z",
        "lastEditedBy" : "7af0054e-b779-41e6-9250-c1a8994bbc4a",
        "tags" : [
        ]
      },
      {
        "id" : "1f9fd910-870c-49bf-81c2-956cdbe284ce",
        "parentId" : "04b3a039-6d9d-4f5a-ae9d-6ee43b44cad2",
        "authorId" : "d7870cae-47b0-4c8e-8527-be8fc4be86de",
        "body" : ":+1: ",
        "createdAt" : "2019-12-13T13:02:21Z",
        "updatedAt" : "2019-12-13T13:02:43Z",
        "lastEditedBy" : "d7870cae-47b0-4c8e-8527-be8fc4be86de",
        "tags" : [
        ]
      }
    ],
    "commit" : "0f410d625a168cc176d9f7e7da86c86e738e02c6",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +167,171 @@\t)\n\t// PLEGDiscardEvents is a Counter that tracks the number of discarding events in the Kubelet's Pod Lifecycle Event Generator (PLEG).\n\tPLEGDiscardEvents = metrics.NewCounter(\n\t\t&metrics.CounterOpts{\n\t\t\tSubsystem:      KubeletSubsystem,"
  },
  {
    "id" : "e264fbe4-149c-41be-8775-44f07604e80b",
    "prId" : 81377,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/81377#pullrequestreview-274859055",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5cd606c3-2f1d-49e3-85ba-6001726499c2",
        "parentId" : null,
        "authorId" : "d7870cae-47b0-4c8e-8527-be8fc4be86de",
        "body" : "+1 to being interested in the cardinality of evictions_signal here.",
        "createdAt" : "2019-08-14T12:43:58Z",
        "updatedAt" : "2019-08-14T12:45:44Z",
        "lastEditedBy" : "d7870cae-47b0-4c8e-8527-be8fc4be86de",
        "tags" : [
        ]
      }
    ],
    "commit" : "23b69cf02d6b0541d2d24b97b0698200c34931c8",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +208,212 @@\t)\n\t// Evictions is a Counter that tracks the cumulative number of pod evictions initiated by the kubelet.\n\t// Broken down by eviction signal.\n\tEvictions = prometheus.NewCounterVec(\n\t\tprometheus.CounterOpts{"
  },
  {
    "id" : "4fd6c496-a7a6-4451-9fe1-50cee6548be6",
    "prId" : 9457,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3451260c-4c07-49e3-b9e8-5e82bc7223d0",
        "parentId" : null,
        "authorId" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "body" : "Optional nit: bucketing per pod would make debugging a lot easier. If you really want an aggregate that's different.\n\n``` go\n    StartPodWorkerLatency = prometheus.NewSummaryVec(\n        prometheus.SummaryOpts{\n            Subsystem: kubeletSubsystem,\n            Name:      \"start_pod_worker_latency_microseconds\",\n            Help:      \"Latency in microseconds from seeing a pod to starting a worker.\",\n        },\n        []string{\"pod_name\"}\n    )\n```\n",
        "createdAt" : "2015-06-09T16:27:34Z",
        "updatedAt" : "2015-06-19T19:08:08Z",
        "lastEditedBy" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "tags" : [
        ]
      },
      {
        "id" : "7e1b8366-b8ce-448d-9aa1-85537fe3f093",
        "parentId" : "3451260c-4c07-49e3-b9e8-5e82bc7223d0",
        "authorId" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "body" : "The reason an aggregate isn't very helpful is because we don't care as much about the starting 30 pods case as we do about the starting 1 pod after 30 case. The former is known to be slow for various reasons (probably not in this pipeline though).\n",
        "createdAt" : "2015-06-09T16:29:19Z",
        "updatedAt" : "2015-06-19T19:08:08Z",
        "lastEditedBy" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "tags" : [
        ]
      }
    ],
    "commit" : "f96a8d09357b7ff23ead829739b44fb2c534c16d",
    "line" : null,
    "diffHunk" : "@@ -1,1 +88,92 @@\t\t\tName:      PodWorkerStartLatencyKey,\n\t\t\tHelp:      \"Latency in microseconds from seeing a pod to starting a worker.\",\n\t\t},\n\t)\n\tDockerOperationsLatency = prometheus.NewSummaryVec("
  },
  {
    "id" : "5677ff02-110f-4d49-a230-b825393123fb",
    "prId" : 4905,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2fc53581-e9a1-40e7-95ec-075685601226",
        "parentId" : null,
        "authorId" : "88a0ee93-4188-47b5-8881-3624e4a411f2",
        "body" : "Is there a way to normalize it by number of pods?\n",
        "createdAt" : "2015-02-27T18:53:14Z",
        "updatedAt" : "2015-02-27T19:12:03Z",
        "lastEditedBy" : "88a0ee93-4188-47b5-8881-3624e4a411f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "a9301b1996955874c2254c66b68ccfdf5260211e",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +50,54 @@\t\t\tSubsystem: kubeletSubsystem,\n\t\t\tName:      \"sync_pods_latency_microseconds\",\n\t\t\tHelp:      \"Latency in microseconds to sync all pods.\",\n\t\t},\n\t)"
  },
  {
    "id" : "53493d64-86a9-4675-9e63-f38ffc5665e2",
    "prId" : 4818,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e57d00ea-3a9f-4511-b00b-e9d0ddb7b65b",
        "parentId" : null,
        "authorId" : "88a0ee93-4188-47b5-8881-3624e4a411f2",
        "body" : "+1\n",
        "createdAt" : "2015-02-25T22:27:27Z",
        "updatedAt" : "2015-02-26T19:13:24Z",
        "lastEditedBy" : "88a0ee93-4188-47b5-8881-3624e4a411f2",
        "tags" : [
        ]
      }
    ],
    "commit" : "744f33d886a509ae714b5312a3d2f71b340481c9",
    "line" : null,
    "diffHunk" : "@@ -1,1 +37,41 @@\t\t},\n\t)\n\t// TODO(vmarmol): Break down by number of containers in pod?\n\tSyncPodLatency = prometheus.NewSummaryVec(\n\t\tprometheus.SummaryOpts{"
  },
  {
    "id" : "3de87a6e-6694-4208-924a-56010d1325a8",
    "prId" : 4818,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ea05ba85-d914-4b21-afa9-590777c23264",
        "parentId" : null,
        "authorId" : "88a0ee93-4188-47b5-8881-3624e4a411f2",
        "body" : "what else do we need to do for SyncPods?\n",
        "createdAt" : "2015-02-25T22:28:09Z",
        "updatedAt" : "2015-02-26T19:13:24Z",
        "lastEditedBy" : "88a0ee93-4188-47b5-8881-3624e4a411f2",
        "tags" : [
        ]
      },
      {
        "id" : "d3fd6fab-05c2-4f5d-b341-a01c2c935185",
        "parentId" : "ea05ba85-d914-4b21-afa9-590777c23264",
        "authorId" : "b7abca6a-d6be-4008-a014-3b5ca0e90529",
        "body" : "Nothing much, it should just be a new definition and defer call. Will probably be in a followup PR :)\n",
        "createdAt" : "2015-02-25T23:45:44Z",
        "updatedAt" : "2015-02-26T19:13:24Z",
        "lastEditedBy" : "b7abca6a-d6be-4008-a014-3b5ca0e90529",
        "tags" : [
        ]
      }
    ],
    "commit" : "744f33d886a509ae714b5312a3d2f71b340481c9",
    "line" : null,
    "diffHunk" : "@@ -1,1 +47,51 @@\t)\n\t// TODO(vmarmol): Containers per pod\n\t// TODO(vmarmol): Latency of SyncPods\n)\n"
  },
  {
    "id" : "a04efa96-404e-455f-9939-c2fa5d2e594c",
    "prId" : 4792,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e2bbdb0f-9ae1-4ecb-9912-6bf70b340e93",
        "parentId" : null,
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "what do you mean by source here?\n",
        "createdAt" : "2015-02-25T18:18:12Z",
        "updatedAt" : "2015-02-25T20:19:16Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      },
      {
        "id" : "0e3740cd-0192-4ccf-bfcc-6ea96bb38af7",
        "parentId" : "e2bbdb0f-9ae1-4ecb-9912-6bf70b340e93",
        "authorId" : "b7abca6a-d6be-4008-a014-3b5ca0e90529",
        "body" : "THe 4 Kubelet sources: http,file,etcd,(4th I forgot)\n",
        "createdAt" : "2015-02-25T18:20:24Z",
        "updatedAt" : "2015-02-25T20:19:16Z",
        "lastEditedBy" : "b7abca6a-d6be-4008-a014-3b5ca0e90529",
        "tags" : [
        ]
      },
      {
        "id" : "436ce505-1ba1-4222-8ec0-0260c229a3d7",
        "parentId" : "e2bbdb0f-9ae1-4ecb-9912-6bf70b340e93",
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "ok :+1: \n",
        "createdAt" : "2015-02-25T18:22:56Z",
        "updatedAt" : "2015-02-25T20:19:16Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      }
    ],
    "commit" : "95464349d59b9403ff0a3b61b9ef4e52bda0069f",
    "line" : 64,
    "diffHunk" : "@@ -1,1 +64,68 @@}\n\n// TODO(vmarmol): Split by source?\nvar (\n\trunningPodCountDesc = prometheus.NewDesc("
  },
  {
    "id" : "30758407-f513-4953-9b04-7a23b2030231",
    "prId" : 4792,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4bfb9944-fd07-429d-8856-734bdf374190",
        "parentId" : null,
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "Why does the cache not return pods instead of containers?\n",
        "createdAt" : "2015-02-25T18:19:53Z",
        "updatedAt" : "2015-02-25T20:19:16Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      },
      {
        "id" : "10cd7a53-eb84-4aed-b5a9-4c42032a3365",
        "parentId" : "4bfb9944-fd07-429d-8856-734bdf374190",
        "authorId" : "b7abca6a-d6be-4008-a014-3b5ca0e90529",
        "body" : "This is equivalent to \"docker ps\"\n",
        "createdAt" : "2015-02-25T18:20:44Z",
        "updatedAt" : "2015-02-25T20:19:16Z",
        "lastEditedBy" : "b7abca6a-d6be-4008-a014-3b5ca0e90529",
        "tags" : [
        ]
      },
      {
        "id" : "431befca-0eeb-4a1f-a85d-a4a1dd23d04e",
        "parentId" : "4bfb9944-fd07-429d-8856-734bdf374190",
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "Ok. Is it not possible to have a wrapper around this in kubelet core that provides pods instead of containers. As of now, I see quite a bit of duplicated code in kubelet around docker containers handling. This is not required for this PR, but having one API for getting pods might help in the long run.\n",
        "createdAt" : "2015-02-25T18:22:29Z",
        "updatedAt" : "2015-02-25T20:19:16Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      },
      {
        "id" : "981d5d07-4082-45d9-9b59-edfe0158d721",
        "parentId" : "4bfb9944-fd07-429d-8856-734bdf374190",
        "authorId" : "b7abca6a-d6be-4008-a014-3b5ca0e90529",
        "body" : "That's interesting I'll take a look. A lot of the Kubelet does special things like checking if the containers are not associated with a known pod so it may or may not work to go that route. I'll take a look.\n",
        "createdAt" : "2015-02-25T18:24:45Z",
        "updatedAt" : "2015-02-25T20:19:16Z",
        "lastEditedBy" : "b7abca6a-d6be-4008-a014-3b5ca0e90529",
        "tags" : [
        ]
      }
    ],
    "commit" : "95464349d59b9403ff0a3b61b9ef4e52bda0069f",
    "line" : 82,
    "diffHunk" : "@@ -1,1 +82,86 @@\nfunc (self *podAndContainerCollector) Collect(ch chan<- prometheus.Metric) {\n\trunningContainers, err := self.containerCache.RunningContainers()\n\tif err != nil {\n\t\tglog.Warning(\"Failed to get running container information while collecting metrics: %v\", err)"
  },
  {
    "id" : "b4df7f41-e154-4327-aa58-d289a579bacb",
    "prId" : 4792,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "503f4f4a-8011-4dc0-bcb5-4a14e23e913a",
        "parentId" : null,
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "Is it possible to get containers that do not belong to a pod or does the cache handle filtering containers.\n",
        "createdAt" : "2015-02-25T18:24:38Z",
        "updatedAt" : "2015-02-25T20:19:16Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      },
      {
        "id" : "d43aa9a8-b5a1-47e3-829e-01ec2b142df0",
        "parentId" : "503f4f4a-8011-4dc0-bcb5-4a14e23e913a",
        "authorId" : "b7abca6a-d6be-4008-a014-3b5ca0e90529",
        "body" : "The cache filters the containers before we receive them.\n",
        "createdAt" : "2015-02-25T18:28:17Z",
        "updatedAt" : "2015-02-25T20:19:16Z",
        "lastEditedBy" : "b7abca6a-d6be-4008-a014-3b5ca0e90529",
        "tags" : [
        ]
      }
    ],
    "commit" : "95464349d59b9403ff0a3b61b9ef4e52bda0069f",
    "line" : null,
    "diffHunk" : "@@ -1,1 +91,95 @@\tpodToContainerCount := make(map[types.UID]struct{})\n\tfor _, cont := range runningContainers {\n\t\t_, uid, _, _ := dockertools.ParseDockerName(cont.Names[0])\n\t\tpodToContainerCount[uid] = struct{}{}\n\t}"
  },
  {
    "id" : "d53e78e1-df7e-4596-adfc-808d005f3287",
    "prId" : 4753,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cc2a3fbe-2f43-4fb3-8cda-cf106c60f1f4",
        "parentId" : null,
        "authorId" : "88a0ee93-4188-47b5-8881-3624e4a411f2",
        "body" : "Ah, client registration tripped me. Looks like this is just for adding a new collector type.\n",
        "createdAt" : "2015-02-24T00:38:51Z",
        "updatedAt" : "2015-02-24T00:38:51Z",
        "lastEditedBy" : "88a0ee93-4188-47b5-8881-3624e4a411f2",
        "tags" : [
        ]
      },
      {
        "id" : "22066016-d0c1-445d-ba2c-6dfce1990181",
        "parentId" : "cc2a3fbe-2f43-4fb3-8cda-cf106c60f1f4",
        "authorId" : "b7abca6a-d6be-4008-a014-3b5ca0e90529",
        "body" : "Yep :)\n",
        "createdAt" : "2015-02-24T00:40:28Z",
        "updatedAt" : "2015-02-24T00:40:28Z",
        "lastEditedBy" : "b7abca6a-d6be-4008-a014-3b5ca0e90529",
        "tags" : [
        ]
      }
    ],
    "commit" : "c40a60e9452438ef637bf214959835562568d980",
    "line" : 58,
    "diffHunk" : "@@ -1,1 +56,60 @@func init() {\n\t// Register the metrics.\n\tprometheus.MustRegister(ImagePullLatency)\n}"
  }
]