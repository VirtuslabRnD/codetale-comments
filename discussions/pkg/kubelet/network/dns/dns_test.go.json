[
  {
    "id" : "0c5fa01e-8f3f-4afa-8d61-c700e38724fb",
    "prId" : 100651,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/100651#pullrequestreview-628789705",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8166304d-0c00-43d7-b3ee-65a8a94047e0",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "You can't use the gate like this in a test - you need to run the test cases both with and without it",
        "createdAt" : "2021-04-05T22:43:24Z",
        "updatedAt" : "2021-05-10T18:30:26Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "571fafeb-8afd-46cc-84f5-4812dd761da9",
        "parentId" : "8166304d-0c00-43d7-b3ee-65a8a94047e0",
        "authorId" : "d201d1ca-4170-481e-8e0a-c6e9991f353a",
        "body" : "Done",
        "createdAt" : "2021-04-06T09:59:28Z",
        "updatedAt" : "2021-05-10T18:30:26Z",
        "lastEditedBy" : "d201d1ca-4170-481e-8e0a-c6e9991f353a",
        "tags" : [
        ]
      }
    ],
    "commit" : "d9681d72669d86023e6124cbe63b38c675b59213",
    "line" : 194,
    "diffHunk" : "@@ -1,1 +545,549 @@\n\tmaxDNSSearchPaths := validation.MaxDNSSearchPathsLegacy\n\tif utilfeature.DefaultFeatureGate.Enabled(features.ExpandedDNSConfig) {\n\t\tmaxDNSSearchPaths = validation.MaxDNSSearchPathsExpanded\n\t}"
  },
  {
    "id" : "515d7d29-defe-445f-b683-fe9288e3915c",
    "prId" : 100651,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/100651#pullrequestreview-666631634",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b32365f5-b4d6-4d71-ab09-2ad72152352e",
        "parentId" : null,
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "can we add one with the offender in the middle of the list instead of being the last one?",
        "createdAt" : "2021-05-24T07:39:46Z",
        "updatedAt" : "2021-05-24T07:39:46Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      },
      {
        "id" : "7defe3fd-94d2-4156-bf05-017092a83357",
        "parentId" : "b32365f5-b4d6-4d71-ab09-2ad72152352e",
        "authorId" : "d201d1ca-4170-481e-8e0a-c6e9991f353a",
        "body" : "I think the case already has a long search path in the middle of the list.\r\nLet me know if I miss something.",
        "createdAt" : "2021-05-24T07:58:25Z",
        "updatedAt" : "2021-05-24T07:58:25Z",
        "lastEditedBy" : "d201d1ca-4170-481e-8e0a-c6e9991f353a",
        "tags" : [
        ]
      },
      {
        "id" : "ee87b9ab-e939-461f-a3fa-bc4d96e32b4c",
        "parentId" : "b32365f5-b4d6-4d71-ab09-2ad72152352e",
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "```\r\n               hostNames:    []string{\"testNS.svc.TEST\", strings.Repeat(\"B\", 256), \"BBB\",\"svc.TEST\", \"TEST\", \"AAA\", },\t\r\n\t\tresultSearch: []string{\"testNS.svc.TEST\", \"svc.TEST\", \"TEST\", \"AAA\", \"BBB\"},\r\n```",
        "createdAt" : "2021-05-24T08:05:47Z",
        "updatedAt" : "2021-05-24T08:06:00Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      },
      {
        "id" : "ca3b9469-d3ce-4fa0-bcc7-b62a54a9dd4a",
        "parentId" : "b32365f5-b4d6-4d71-ab09-2ad72152352e",
        "authorId" : "d201d1ca-4170-481e-8e0a-c6e9991f353a",
        "body" : "I am not sure what you said...\r\nI think only `strings.Repeat(\"B\", 256)` should be filtered out and it already is the one in the middle of the list(before the \"BBB\").",
        "createdAt" : "2021-05-24T10:41:22Z",
        "updatedAt" : "2021-05-24T10:44:15Z",
        "lastEditedBy" : "d201d1ca-4170-481e-8e0a-c6e9991f353a",
        "tags" : [
        ]
      },
      {
        "id" : "88d2472f-cda8-497d-8275-c0de79939b13",
        "parentId" : "b32365f5-b4d6-4d71-ab09-2ad72152352e",
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "ahhh sorry, I totally missed that last \"BBB\", my apologies",
        "createdAt" : "2021-05-24T11:06:03Z",
        "updatedAt" : "2021-05-24T11:06:04Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      }
    ],
    "commit" : "d9681d72669d86023e6124cbe63b38c675b59213",
    "line" : 75,
    "diffHunk" : "@@ -1,1 +171,175 @@\t\t\tresultSearch: []string{\"testNS.svc.TEST\", \"svc.TEST\", \"TEST\", \"AAA\", \"BBB\"},\n\t\t\tevents:       []string{\"Search Line limits were exceeded, some search paths have been omitted, the applied search line is: testNS.svc.TEST svc.TEST TEST AAA BBB\"},\n\t\t},\n\n\t\t{"
  },
  {
    "id" : "7e431a0d-257e-4b81-9f75-baad13e66d6e",
    "prId" : 68116,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/68116#pullrequestreview-156114915",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dedae752-bdb4-4f77-a7d3-10d14e8ab5b1",
        "parentId" : null,
        "authorId" : "b714f738-aa05-4f49-a624-eaaf3e0cbb70",
        "body" : "since you are changing this part, it would be preferable to change all cases to use field names so that nil values (such as `[]string{}, false` can be omitted. The test cases will be much more readable.",
        "createdAt" : "2018-09-16T07:13:43Z",
        "updatedAt" : "2018-09-25T04:02:01Z",
        "lastEditedBy" : "b714f738-aa05-4f49-a624-eaaf3e0cbb70",
        "tags" : [
        ]
      },
      {
        "id" : "1576db2e-ca0b-4c06-a647-f45e1d325ee7",
        "parentId" : "dedae752-bdb4-4f77-a7d3-10d14e8ab5b1",
        "authorId" : "224e1088-78fe-4bdd-99d1-31be3e464996",
        "body" : "@bowei  `[]string{}` is empty not nil.  If I omit the fieldnames for those, they become nil and start failing.",
        "createdAt" : "2018-09-17T04:59:06Z",
        "updatedAt" : "2018-09-25T04:02:01Z",
        "lastEditedBy" : "224e1088-78fe-4bdd-99d1-31be3e464996",
        "tags" : [
        ]
      },
      {
        "id" : "1a5c04d5-2300-4d7b-a8db-fb9d8791a893",
        "parentId" : "dedae752-bdb4-4f77-a7d3-10d14e8ab5b1",
        "authorId" : "224e1088-78fe-4bdd-99d1-31be3e464996",
        "body" : "The only ones we can avoid are the bool and string variable. Let me know if you still think its worth it ?",
        "createdAt" : "2018-09-17T05:00:15Z",
        "updatedAt" : "2018-09-25T04:02:01Z",
        "lastEditedBy" : "224e1088-78fe-4bdd-99d1-31be3e464996",
        "tags" : [
        ]
      },
      {
        "id" : "ef773a41-5424-4641-a14b-44e2e2a1e610",
        "parentId" : "dedae752-bdb4-4f77-a7d3-10d14e8ab5b1",
        "authorId" : "b714f738-aa05-4f49-a624-eaaf3e0cbb70",
        "body" : "What does not work? Is it checking for nil value explicitly rather than iterating through the slice?\r\n\r\nhttps://tour.golang.org/moretypes/12",
        "createdAt" : "2018-09-17T06:08:30Z",
        "updatedAt" : "2018-09-25T04:02:01Z",
        "lastEditedBy" : "b714f738-aa05-4f49-a624-eaaf3e0cbb70",
        "tags" : [
        ]
      },
      {
        "id" : "ca31d112-1657-4f27-bbf7-b2ecb328de04",
        "parentId" : "dedae752-bdb4-4f77-a7d3-10d14e8ab5b1",
        "authorId" : "224e1088-78fe-4bdd-99d1-31be3e464996",
        "body" : "the function `parseResolvConf` returns empty slices not nil, so if i changed my  first two tests from \r\n```\r\n  {\"\", []string{}, []string{}, []string{}, false},\r\n  {\" \", []string{}, []string{}, []string{}, false},\r\n```\r\nto \r\n```\r\n{},\r\n{data: \" \"},\r\n```\r\nit fails, because missing fields are interpreted as nil, while the function parseResolvConf is returning empty slices. I can change the function to return nil here that would require more changes. Let me know if understood your comment correctly ?\r\n\r\n",
        "createdAt" : "2018-09-17T07:17:56Z",
        "updatedAt" : "2018-09-25T04:02:01Z",
        "lastEditedBy" : "224e1088-78fe-4bdd-99d1-31be3e464996",
        "tags" : [
        ]
      },
      {
        "id" : "3aab416c-2d04-4e64-a103-9bf0221504a5",
        "parentId" : "dedae752-bdb4-4f77-a7d3-10d14e8ab5b1",
        "authorId" : "b714f738-aa05-4f49-a624-eaaf3e0cbb70",
        "body" : "Hmm.. this looks to be a limitation of testify EqualValues, as a nil value slice should be treated as equal:\r\n```\r\n\tvar a []string\r\n\tb := []string{}\r\n\tfor i := range a {\r\n\t\tif b[i] != a[i] {\r\n\t\t\tt.Errorf(\"not equal\")\r\n\t\t}\r\n\t}\r\n```",
        "createdAt" : "2018-09-17T20:55:30Z",
        "updatedAt" : "2018-09-25T04:02:01Z",
        "lastEditedBy" : "b714f738-aa05-4f49-a624-eaaf3e0cbb70",
        "tags" : [
        ]
      }
    ],
    "commit" : "ef976f1f707274465c9be8d267d96ae1f82a5fe7",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +56,60 @@\t\tisErr       bool\n\t}{\n\t\t{\"\", []string{}, []string{}, []string{}, false},\n\t\t{\" \", []string{}, []string{}, []string{}, false},\n\t\t{\"\\n\", []string{}, []string{}, []string{}, false},"
  }
]