[
  {
    "id" : "b37dc0ab-7379-4582-ad71-1e6f72ac5c77",
    "prId" : 43474,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/43474#pullrequestreview-28445877",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a1dddc39-e9fe-4b40-91f9-18351547570c",
        "parentId" : null,
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "How frequently is this called? Can we just add checkInitialized and not move this? What's the point?",
        "createdAt" : "2017-03-21T22:51:07Z",
        "updatedAt" : "2017-03-21T22:51:07Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      },
      {
        "id" : "80fdd6f4-f74d-4c7b-b293-2453d11f57c6",
        "parentId" : "a1dddc39-e9fe-4b40-91f9-18351547570c",
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "This is called every 5 sec or so and is included when kubelet reports the node status. It's good to have consistent behavior for both kubenet and cniNetworkPlugin.",
        "createdAt" : "2017-03-22T00:02:04Z",
        "updatedAt" : "2017-03-22T00:02:04Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "75b0795a-4005-46ac-a4d6-8235295e3154",
        "parentId" : "a1dddc39-e9fe-4b40-91f9-18351547570c",
        "authorId" : "57f729dd-988a-4d1a-83bf-ee70bf637c64",
        "body" : "@mikedanese every 30s from kubelet's node sync loop.  But if that's getting called periodically, then we don't need the 10s forever loop.  Why have two loops when one will do?",
        "createdAt" : "2017-03-22T00:35:45Z",
        "updatedAt" : "2017-03-22T00:35:45Z",
        "lastEditedBy" : "57f729dd-988a-4d1a-83bf-ee70bf637c64",
        "tags" : [
        ]
      },
      {
        "id" : "34b9f2f3-6ba4-4375-9f0a-3811187dd1a4",
        "parentId" : "a1dddc39-e9fe-4b40-91f9-18351547570c",
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "SGTM, thanks for the explanation.",
        "createdAt" : "2017-03-22T16:58:19Z",
        "updatedAt" : "2017-03-22T16:58:19Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      }
    ],
    "commit" : "193abffdbe678afa6b09d32b090d26e53b4d96d4",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +184,188 @@}\n\nfunc (plugin *cniNetworkPlugin) Status() error {\n\t// sync network config from pluginDir periodically to detect network config updates\n\tplugin.syncNetworkConfig()"
  },
  {
    "id" : "422ddb3d-cce5-40e3-803d-271a1919068d",
    "prId" : 42202,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/42202#pullrequestreview-34078339",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a12de304-c55a-4458-810e-7130445f8a10",
        "parentId" : null,
        "authorId" : "e83108b8-1fb2-416b-9298-d5b70c14f708",
        "body" : "I assume this will stuck the port-mapping config into all plugins that  list the capability, right?",
        "createdAt" : "2017-04-11T22:40:11Z",
        "updatedAt" : "2017-04-18T12:24:40Z",
        "lastEditedBy" : "e83108b8-1fb2-416b-9298-d5b70c14f708",
        "tags" : [
        ]
      },
      {
        "id" : "02c46718-3c2f-4141-a372-5a62ae120c0d",
        "parentId" : "a12de304-c55a-4458-810e-7130445f8a10",
        "authorId" : "5f3d0da0-11c3-49d0-9aa9-f897fad1c961",
        "body" : "That's correct!",
        "createdAt" : "2017-04-12T10:22:58Z",
        "updatedAt" : "2017-04-18T12:24:40Z",
        "lastEditedBy" : "5f3d0da0-11c3-49d0-9aa9-f897fad1c961",
        "tags" : [
        ]
      },
      {
        "id" : "fd57b4cd-9e6f-4394-8a33-4c4fa495a3c0",
        "parentId" : "a12de304-c55a-4458-810e-7130445f8a10",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "It seems there is no official plugins (e.g. bridge) support port-mappings yet, is it right?",
        "createdAt" : "2017-04-18T15:00:35Z",
        "updatedAt" : "2017-04-18T15:00:35Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      },
      {
        "id" : "496806c5-c567-4464-9154-daeffeb46874",
        "parentId" : "a12de304-c55a-4458-810e-7130445f8a10",
        "authorId" : "57f729dd-988a-4d1a-83bf-ee70bf637c64",
        "body" : "@feiskyer we don't intend to put that capability into the main plugins.  Instead, you would create a CNI ConfigList that includes the CNI \"portmap\" plugin here https://github.com/containernetworking/plugins/pull/1.  When the Kube CNI driver calls AddNetworkList(), libcni will execute each plugin in the list sequentially, passing the results from each plugin along to the next.  The \"portmap\" plugin consumes that result and sets up the mapings as required.\r\n\r\nFor example, you'd put the following JSON into /etc/cni/net.d/my-network.conflist:\r\nhttps://github.com/containernetworking/plugins/pull/1/commits/32c527d72d14b5fba96cfea91d9531960e521a3e#diff-f6ee9b32ca4cfb6c2075e1ee55dadd07R19",
        "createdAt" : "2017-04-21T17:18:14Z",
        "updatedAt" : "2017-04-21T17:19:25Z",
        "lastEditedBy" : "57f729dd-988a-4d1a-83bf-ee70bf637c64",
        "tags" : [
        ]
      }
    ],
    "commit" : "e4eaad3d24720f3f9b3d8e4fe95a9252455c3c06",
    "line" : 203,
    "diffHunk" : "@@ -1,1 +342,346 @@\t\t})\n\t}\n\trt.CapabilityArgs = map[string]interface{}{\n\t\t\"portMappings\": portMappingsParam,\n\t}"
  },
  {
    "id" : "01de9a12-2604-4f63-b62d-27573be12fed",
    "prId" : 42202,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/42202#pullrequestreview-33269419",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f6861a64-7a49-4cbb-8ee8-2efc6652ae5d",
        "parentId" : null,
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "Should we search vendor CNI dir for all plugin types, e.g. networks may have different type in `confList.Plugins`",
        "createdAt" : "2017-04-18T14:56:30Z",
        "updatedAt" : "2017-04-18T14:56:30Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      },
      {
        "id" : "12cb274e-dc26-477f-ae5c-e67f674d029e",
        "parentId" : "f6861a64-7a49-4cbb-8ee8-2efc6652ae5d",
        "authorId" : "5f3d0da0-11c3-49d0-9aa9-f897fad1c961",
        "body" : "Maybe, but that is changing behavior. The aim of this PR is only to enable config lists.",
        "createdAt" : "2017-04-18T15:39:53Z",
        "updatedAt" : "2017-04-18T15:39:53Z",
        "lastEditedBy" : "5f3d0da0-11c3-49d0-9aa9-f897fad1c961",
        "tags" : [
        ]
      },
      {
        "id" : "3184b94c-4e67-4d40-97a8-394cfc6ee4f1",
        "parentId" : "f6861a64-7a49-4cbb-8ee8-2efc6652ae5d",
        "authorId" : "5f3d0da0-11c3-49d0-9aa9-f897fad1c961",
        "body" : "There is a lot of cleaning up that can be done with how k8s uses CNI but this PR is not the place for it, IMHO. Just trying to get the version bump out now.",
        "createdAt" : "2017-04-18T15:40:46Z",
        "updatedAt" : "2017-04-18T15:40:46Z",
        "lastEditedBy" : "5f3d0da0-11c3-49d0-9aa9-f897fad1c961",
        "tags" : [
        ]
      }
    ],
    "commit" : "e4eaad3d24720f3f9b3d8e4fe95a9252455c3c06",
    "line" : 72,
    "diffHunk" : "@@ -1,1 +133,137 @@\n\t\t// Search for vendor-specific plugins as well as default plugins in the CNI codebase.\n\t\tvendorDir := vendorCNIDir(vendorCNIDirPrefix, confType)\n\t\tcninet := &libcni.CNIConfig{\n\t\t\tPath: []string{binDir, vendorDir},"
  },
  {
    "id" : "7a87f328-2183-4726-a336-1b1de3fc389a",
    "prId" : 29310,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ce8d7d90-29ce-4d51-ae15-3a68dce4d5eb",
        "parentId" : null,
        "authorId" : "227eb550-8b08-4420-9a78-279f840bd8de",
        "body" : "nit: would the error be caused by other things like oom? Though it should be pretty rare.\n",
        "createdAt" : "2016-07-22T21:07:02Z",
        "updatedAt" : "2016-07-22T21:40:53Z",
        "lastEditedBy" : "227eb550-8b08-4420-9a78-279f840bd8de",
        "tags" : [
        ]
      },
      {
        "id" : "3f25534c-61fd-47a3-b61a-ac5600cce591",
        "parentId" : "ce8d7d90-29ce-4d51-ae15-3a68dce4d5eb",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "OOm should not manifest as an error ever.\n",
        "createdAt" : "2016-07-24T18:10:58Z",
        "updatedAt" : "2016-07-24T18:10:58Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "6aed2a0b1dfa50cc24f1729fe146307ea20bbb89",
    "line" : 51,
    "diffHunk" : "@@ -1,1 +110,114 @@  \"type\": \"loopback\"\n}`))\n\tif err != nil {\n\t\t// The hardcoded config above should always be valid and unit tests will\n\t\t// catch this"
  },
  {
    "id" : "219e177a-4151-450f-b82c-ef0f57922387",
    "prId" : 28178,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9d421de8-1830-43c1-9120-46ef6f573fc1",
        "parentId" : null,
        "authorId" : "e83108b8-1fb2-416b-9298-d5b70c14f708",
        "body" : "move this back\n",
        "createdAt" : "2016-06-28T20:17:59Z",
        "updatedAt" : "2016-07-27T17:09:34Z",
        "lastEditedBy" : "e83108b8-1fb2-416b-9298-d5b70c14f708",
        "tags" : [
        ]
      }
    ],
    "commit" : "792868c743318ad94b1ae108ac115cc2ea69d652",
    "line" : null,
    "diffHunk" : "@@ -1,1 +99,103 @@\t\t\tcontinue\n\t\t}\n\t\t// Search for vendor-specific plugins as well as default plugins in the CNI codebase.\n\t\tvendorDir := vendorCNIDir(vendorCNIDirPrefix, conf.Network.Type)\n\t\tcninet := &libcni.CNIConfig{"
  },
  {
    "id" : "28075e2e-34fd-4ceb-9d56-07cb306160fa",
    "prId" : 28178,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a30b55d2-b446-4226-91a8-424b0cbab600",
        "parentId" : null,
        "authorId" : "e83108b8-1fb2-416b-9298-d5b70c14f708",
        "body" : "add some comments like:\n\nsync network config from pluginDir periodically to detect network config updates. \n",
        "createdAt" : "2016-06-28T20:18:03Z",
        "updatedAt" : "2016-07-27T17:09:34Z",
        "lastEditedBy" : "e83108b8-1fb2-416b-9298-d5b70c14f708",
        "tags" : [
        ]
      },
      {
        "id" : "19e0e241-da26-4214-84b6-293a32da56e9",
        "parentId" : "a30b55d2-b446-4226-91a8-424b0cbab600",
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "Done.\n",
        "createdAt" : "2016-06-28T22:04:53Z",
        "updatedAt" : "2016-07-27T17:09:34Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      }
    ],
    "commit" : "792868c743318ad94b1ae108ac115cc2ea69d652",
    "line" : null,
    "diffHunk" : "@@ -1,1 +66,70 @@\t\texecer:         utilexec.New(),\n\t}\n\n\tplugin.syncNetworkConfig(pluginDir, vendorCNIDirPrefix)\n\t// sync network config from pluginDir periodically to detect network config updates"
  },
  {
    "id" : "bd4f64b7-87be-421e-afd5-f83f57fb73a3",
    "prId" : 28178,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "02922a19-e1e0-4c03-b81e-0bedbba57cc7",
        "parentId" : null,
        "authorId" : "b04ab4f5-5d69-4d32-9c1b-fecc0eb76d11",
        "body" : "Accidentally deleted previous comment, but at a glance this looks like it could result in nil pointer errors in calls to the NetworkPlugin methods. So maybe just validating this assumption is safe via tests, or maybe a nullPlugin which logs/returns errors on those same calls until a real plugin config is picked up (or my reading of this is off).\n",
        "createdAt" : "2016-06-28T21:53:54Z",
        "updatedAt" : "2016-07-27T17:09:34Z",
        "lastEditedBy" : "b04ab4f5-5d69-4d32-9c1b-fecc0eb76d11",
        "tags" : [
        ]
      },
      {
        "id" : "3ab6ebc8-c9b0-4db3-9117-27ad9c6a531c",
        "parentId" : "02922a19-e1e0-4c03-b81e-0bedbba57cc7",
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "Ya... I think this problem exists in the master code. If getDefaultCNINetwork fails on the initial configuration (if the cni config isn't present on disk), it will be nil. In theory, network plugin users should be calling Status() before they use the network plugin but before this PR status always returns true so that cause will cause a nil ptr. @freehan what do you think?\n",
        "createdAt" : "2016-06-28T22:04:41Z",
        "updatedAt" : "2016-07-27T17:09:34Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      },
      {
        "id" : "d1796696-ca10-45bf-8f56-ad3c2d66e3ae",
        "parentId" : "02922a19-e1e0-4c03-b81e-0bedbba57cc7",
        "authorId" : "e83108b8-1fb2-416b-9298-d5b70c14f708",
        "body" : "kubelet will block sync pod if plugin Status returns error. We should double check Status in Setup/TearDown to add additional safeguard.\n",
        "createdAt" : "2016-06-28T22:07:22Z",
        "updatedAt" : "2016-07-27T17:09:34Z",
        "lastEditedBy" : "e83108b8-1fb2-416b-9298-d5b70c14f708",
        "tags" : [
        ]
      },
      {
        "id" : "ef28792e-06b6-49e9-820e-3854a7bb3e8d",
        "parentId" : "02922a19-e1e0-4c03-b81e-0bedbba57cc7",
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "Done.\n",
        "createdAt" : "2016-06-28T22:40:04Z",
        "updatedAt" : "2016-07-27T17:09:34Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      },
      {
        "id" : "02585717-bb9f-4455-814e-e40391dc11f3",
        "parentId" : "02922a19-e1e0-4c03-b81e-0bedbba57cc7",
        "authorId" : "b04ab4f5-5d69-4d32-9c1b-fecc0eb76d11",
        "body" : "Hmm. Wouldn't blocking sync pod defeat the goal of https://github.com/kubernetes/kubernetes-anywhere/issues/151 \n",
        "createdAt" : "2016-06-28T22:43:42Z",
        "updatedAt" : "2016-07-27T17:09:34Z",
        "lastEditedBy" : "b04ab4f5-5d69-4d32-9c1b-fecc0eb76d11",
        "tags" : [
        ]
      },
      {
        "id" : "d9742ee2-c46d-494a-a057-e64d7c9ca4e5",
        "parentId" : "02922a19-e1e0-4c03-b81e-0bedbba57cc7",
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "No, I think this is correct. Creating a pod on the pod network should fail until cni is configured. However pods on the host network shouldn't be affected by this status check. Network daemons should run in the host network namespace.\n",
        "createdAt" : "2016-06-28T23:03:32Z",
        "updatedAt" : "2016-07-27T17:09:34Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      },
      {
        "id" : "d290bea6-d4f0-4225-9a7e-31d2f016cb31",
        "parentId" : "02922a19-e1e0-4c03-b81e-0bedbba57cc7",
        "authorId" : "e83108b8-1fb2-416b-9298-d5b70c14f708",
        "body" : "Hmm... True... \n\nWe can still block on Setup/TearDown and let sync pod starts. \n",
        "createdAt" : "2016-06-28T23:05:41Z",
        "updatedAt" : "2016-07-27T17:09:34Z",
        "lastEditedBy" : "e83108b8-1fb2-416b-9298-d5b70c14f708",
        "tags" : [
        ]
      },
      {
        "id" : "1d72c3ad-8b10-4ab3-8a5b-606e96af0a93",
        "parentId" : "02922a19-e1e0-4c03-b81e-0bedbba57cc7",
        "authorId" : "b04ab4f5-5d69-4d32-9c1b-fecc0eb76d11",
        "body" : "@mikedanese I agree regarding podnetwork pods should fail until cni is configured -- and the network plugin daemonsets should use host-networking to skip this restriction.\n\nHowever, I may be missing something, so if this works -- ignore me: \n\nIn: \nhttps://github.com/kubernetes/kubernetes/blob/master/pkg/kubelet/kubelet.go#L2470 \nwouldn't this always error (and skip pod sync) due to: https://github.com/kubernetes/kubernetes/blob/master/pkg/kubelet/kubelet.go#L2920\n",
        "createdAt" : "2016-06-28T23:35:49Z",
        "updatedAt" : "2016-07-27T17:09:34Z",
        "lastEditedBy" : "b04ab4f5-5d69-4d32-9c1b-fecc0eb76d11",
        "tags" : [
        ]
      },
      {
        "id" : "afbda09a-58ec-4ba1-aa39-928fbc0e031d",
        "parentId" : "02922a19-e1e0-4c03-b81e-0bedbba57cc7",
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "Ya.... thanks for pointing that out.\n",
        "createdAt" : "2016-06-29T00:16:27Z",
        "updatedAt" : "2016-07-27T17:09:34Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      },
      {
        "id" : "fe4b9685-e9b3-43ba-a537-235c9fee8548",
        "parentId" : "02922a19-e1e0-4c03-b81e-0bedbba57cc7",
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "Ok, I no longer check initialization in the status. That should fix this issue I believe. The longterm fix is to decouple pod network and node network readiness in the runtime status check.\n",
        "createdAt" : "2016-07-11T22:04:18Z",
        "updatedAt" : "2016-07-27T17:09:34Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      }
    ],
    "commit" : "792868c743318ad94b1ae108ac115cc2ea69d652",
    "line" : 51,
    "diffHunk" : "@@ -1,1 +62,66 @@func probeNetworkPluginsWithVendorCNIDirPrefix(pluginDir, vendorCNIDirPrefix string) []network.NetworkPlugin {\n\tplugin := &cniNetworkPlugin{\n\t\tdefaultNetwork: nil,\n\t\tloNetwork:      getLoNetwork(vendorCNIDirPrefix),\n\t\texecer:         utilexec.New(),"
  },
  {
    "id" : "af81cc63-329f-4b08-94dd-1b2e023a799b",
    "prId" : 28178,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "73c9655a-924e-4e6a-b627-dd5f50aadb06",
        "parentId" : null,
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "nit: Do we have some common place to store loop intervals and timeouts?\nThen this could be moved there... but that's not something that have to be done in this PR.\n",
        "createdAt" : "2016-07-22T17:42:40Z",
        "updatedAt" : "2016-07-27T17:09:34Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      }
    ],
    "commit" : "792868c743318ad94b1ae108ac115cc2ea69d652",
    "line" : 61,
    "diffHunk" : "@@ -1,1 +71,75 @@\tgo wait.Forever(func() {\n\t\tplugin.syncNetworkConfig(pluginDir, vendorCNIDirPrefix)\n\t}, 10*time.Second)\n\n\treturn []network.NetworkPlugin{plugin}"
  },
  {
    "id" : "b7289e41-3384-4240-8eb6-893d63d833a9",
    "prId" : 27878,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "48e77f6b-4346-4619-92b7-bf36fa5c9937",
        "parentId" : null,
        "authorId" : "227eb550-8b08-4420-9a78-279f840bd8de",
        "body" : "Can we do the same in the kubenet?\n",
        "createdAt" : "2016-06-22T16:55:22Z",
        "updatedAt" : "2016-06-22T19:26:38Z",
        "lastEditedBy" : "227eb550-8b08-4420-9a78-279f840bd8de",
        "tags" : [
        ]
      },
      {
        "id" : "2d7ebf92-df0e-4f0f-acdc-56d7d290b7d1",
        "parentId" : "48e77f6b-4346-4619-92b7-bf36fa5c9937",
        "authorId" : "57f729dd-988a-4d1a-83bf-ee70bf637c64",
        "body" : "Yeah, I can make that happen.\n",
        "createdAt" : "2016-06-22T18:27:52Z",
        "updatedAt" : "2016-06-22T19:26:38Z",
        "lastEditedBy" : "57f729dd-988a-4d1a-83bf-ee70bf637c64",
        "tags" : [
        ]
      }
    ],
    "commit" : "e47d020cb6025c181d2c4a519cad9766b2096c16",
    "line" : 44,
    "diffHunk" : "@@ -1,1 +99,103 @@\nfunc (plugin *cniNetworkPlugin) Init(host network.Host, hairpinMode componentconfig.HairpinMode, nonMasqueradeCIDR string) error {\n\tvar err error\n\tplugin.nsenterPath, err = plugin.execer.LookPath(\"nsenter\")\n\tif err != nil {"
  },
  {
    "id" : "13d8d805-edf5-46d9-84cf-cdffcd49a5c6",
    "prId" : 13766,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e339c03c-1d86-4596-9fec-4f060131eef7",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "Can you give an example of this in use and why we care about it?\n\ne.g. if I have a network called \"FooBar\", you're going to look in /opt/FooBar/bin for more CNI plugins?  why?  Not saying it's not useful, just want a plausible example.\n",
        "createdAt" : "2015-09-18T05:48:51Z",
        "updatedAt" : "2015-09-23T16:19:31Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "08d43fc4-b9c3-43f0-a776-5e8a27406e2d",
        "parentId" : "e339c03c-1d86-4596-9fec-4f060131eef7",
        "authorId" : "2d5f1a80-3428-48c7-a34c-8614a0196779",
        "body" : "I added this in my original prototype to mirror the vendored plugin directories allowed by the exec-plugin. There was some discussion in the design doc that this would be desirable, though I don't think anyone said they absolutely needed it.\n\nI'm happy to ditch this and just look for plugins in /opt/cni/bin to keep things simple; I don't think we're ever going to have a large number of plugins, so name clashes should be rare and easy to work around.\n",
        "createdAt" : "2015-09-21T17:28:07Z",
        "updatedAt" : "2015-09-23T16:19:31Z",
        "lastEditedBy" : "2d5f1a80-3428-48c7-a34c-8614a0196779",
        "tags" : [
        ]
      },
      {
        "id" : "2a77ee9f-a606-4033-9e4e-6b5eac1b9dbb",
        "parentId" : "e339c03c-1d86-4596-9fec-4f060131eef7",
        "authorId" : "9c668715-22fc-4e1d-a673-80ba46f7bd46",
        "body" : "I think it is useful. The executable names may be clashing as @Symmetric pointed out, but also there could be a bunch of other files as dependencies. It will be wise to keep a directory per vendor as an option.\n",
        "createdAt" : "2015-09-21T17:34:10Z",
        "updatedAt" : "2015-09-23T16:19:31Z",
        "lastEditedBy" : "9c668715-22fc-4e1d-a673-80ba46f7bd46",
        "tags" : [
        ]
      },
      {
        "id" : "5c93f953-1cd7-4530-a14d-14b2cfec6b96",
        "parentId" : "e339c03c-1d86-4596-9fec-4f060131eef7",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "But should the dir be named after the plugin or after the network?  I could see `/opt/cni/FooBar/FooBar` being considered a peer of `/opt/cni/TopLevel`, but naming by network name feels weird to me.\n\nAnd I am sort of against hypotheticals.  Having a dir to group files resonates, but does that need to be reflected here, or can this just be a symlink to a bin in another dir?\n",
        "createdAt" : "2015-09-21T19:26:08Z",
        "updatedAt" : "2015-09-23T16:19:31Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "3d69b46c-8be1-4571-ac45-f504fa503007",
        "parentId" : "e339c03c-1d86-4596-9fec-4f060131eef7",
        "authorId" : "9c668715-22fc-4e1d-a673-80ba46f7bd46",
        "body" : "It should be named after the 'type' as @dcbw pointed out. Will fix in the next revision.\n",
        "createdAt" : "2015-09-21T21:10:06Z",
        "updatedAt" : "2015-09-23T16:19:31Z",
        "lastEditedBy" : "9c668715-22fc-4e1d-a673-80ba46f7bd46",
        "tags" : [
        ]
      }
    ],
    "commit" : "fef621a2541080cb9ab8f381394204c60d22daa6",
    "line" : 79,
    "diffHunk" : "@@ -1,1 +77,81 @@\t\t\tcontinue\n\t\t}\n\t\t// Search for vendor-specific plugins as well as default plugins in the CNI codebase.\n\t\tvendorCNIDir := fmt.Sprintf(VendorCNIDirTemplate, conf.Network.Type)\n\t\tcninet := &libcni.CNIConfig{"
  },
  {
    "id" : "9c226e3f-f6d0-40b7-8663-1fc257bf6b1c",
    "prId" : 13766,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2eb3368b-383c-44fd-ae0c-43fe96aac2a0",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "This is a point of contention.  If we provide this to all plugins, we're encouraging coupling.  But we need to provide SOMETHING and I don't have a better answer.\n",
        "createdAt" : "2015-09-18T06:08:42Z",
        "updatedAt" : "2015-09-23T16:19:31Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "fef621a2541080cb9ab8f381394204c60d22daa6",
    "line" : null,
    "diffHunk" : "@@ -1,1 +191,195 @@\t\tIfName:      DefaultInterfaceName,\n\t\tArgs: [][2]string{\n\t\t\t{\"K8S_POD_NAMESPACE\", podNs},\n\t\t\t{\"K8S_POD_NAME\", podName},\n\t\t\t{\"K8S_POD_INFRA_CONTAINER_ID\", podInfraContainerID},"
  },
  {
    "id" : "bd112f25-f5b4-4346-bad9-98356725f0bb",
    "prId" : 13766,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "08661f34-f0f9-4019-ae9a-1517007bf67f",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "Add a comment in the code that creates the infra container to set --net=none if we're managing networking.  Or you could specifically test for network-plugin == \"cni\" and set it now, I guess.\n",
        "createdAt" : "2015-09-19T04:37:20Z",
        "updatedAt" : "2015-09-23T16:19:31Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "6fdcb11c-9cb2-4671-82c2-f41252bc5f44",
        "parentId" : "08661f34-f0f9-4019-ae9a-1517007bf67f",
        "authorId" : "08acaafd-5c56-47ca-80df-44deff0b4490",
        "body" : "rkt also has a need for this special IP. The way it deals with it is by assuming it's the one from a network called \"default\". If not given by the user, it creates it by default (type `ptp`).\n\nI think it is important to enumerate what this \"main\" IP is used for and what assumptions are in place around it. For example, is the assumption that it provides a way to reach the host network stack (i.e. routed to the host) because it's used to set up iptables on the host? If there are assumptions like that and the network is not somehow auto-added by kubernetes, the user has to consciously mark it as \"main\", at least to acknowledge that it fulfills the needed requirements.\n",
        "createdAt" : "2015-09-22T18:19:06Z",
        "updatedAt" : "2015-09-23T16:19:31Z",
        "lastEditedBy" : "08acaafd-5c56-47ca-80df-44deff0b4490",
        "tags" : [
        ]
      }
    ],
    "commit" : "fef621a2541080cb9ab8f381394204c60d22daa6",
    "line" : 99,
    "diffHunk" : "@@ -1,1 +97,101 @@}\n\nfunc (plugin *cniNetworkPlugin) SetUpPod(namespace string, name string, id kubeletTypes.DockerID) error {\n\truntime, ok := plugin.host.GetRuntime().(*dockertools.DockerManager)\n\tif !ok {"
  },
  {
    "id" : "f7be3159-bad4-496c-b8dd-c89c8f49e686",
    "prId" : 13766,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "46c56382-11f0-44ca-8c3a-c8d5ae8e6025",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "Something to thnk about - it would be nice if we only called this in case of a pod with an unknown IP (meaning we lost it).  OK to proceed, but think about it.  We've been burned by over-using 'docker exec' - once burned, twice shy...\n",
        "createdAt" : "2015-09-21T23:38:53Z",
        "updatedAt" : "2015-09-23T16:19:31Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "59f49182-725d-49d2-98d8-97927f6aaea7",
        "parentId" : "46c56382-11f0-44ca-8c3a-c8d5ae8e6025",
        "authorId" : "9c668715-22fc-4e1d-a673-80ba46f7bd46",
        "body" : "Agree. I am testing this whole thing with a real plugin, and thus far the setting it up from pod.Status.IP has been flaky.. let me find out statistics on the failure and will put up a PR to call nsenter only when we have lost it.\n\nMeanwhile, @eyakubovich any opinion on having a Status hook in CNI?\n",
        "createdAt" : "2015-09-21T23:46:50Z",
        "updatedAt" : "2015-09-23T16:19:31Z",
        "lastEditedBy" : "9c668715-22fc-4e1d-a673-80ba46f7bd46",
        "tags" : [
        ]
      },
      {
        "id" : "987bd413-4dff-49fe-a397-5f75f97f8bf9",
        "parentId" : "46c56382-11f0-44ca-8c3a-c8d5ae8e6025",
        "authorId" : "08acaafd-5c56-47ca-80df-44deff0b4490",
        "body" : "I think it would be OK to add a STATUS command to CNI. However it should not be done just to get the IP. I'd like understand why kubernetes (or rkt) storing the information it got from ADD cannot be reliably persisted. If CNI plugin is not allowed to change the IP of the running container then STATUS will always return the same IP (seems wasteful). And modifying CNI to allow changing the IP in flight would open up a can of worms -- we would need to build the plumbing to notify the container runtime of the change!\n\nI think it would be valuable for STATUS to return some operational info about the network (e.g. carrier-up, tx/rx stats, etc) but my concern is that a fork/exec is quite heavy to do on a periodic interval but maybe it's not a big concern. Also, we would need to work out what information is valuable to return.\n",
        "createdAt" : "2015-09-22T18:08:01Z",
        "updatedAt" : "2015-09-23T16:19:31Z",
        "lastEditedBy" : "08acaafd-5c56-47ca-80df-44deff0b4490",
        "tags" : [
        ]
      }
    ],
    "commit" : "fef621a2541080cb9ab8f381394204c60d22daa6",
    "line" : 138,
    "diffHunk" : "@@ -1,1 +136,140 @@\t\treturn nil, fmt.Errorf(\"CNI execution called on non-docker runtime\")\n\t}\n\tipStr, err := runtime.GetContainerIP(string(id), DefaultInterfaceName)\n\tif err != nil {\n\t\treturn nil, err"
  }
]