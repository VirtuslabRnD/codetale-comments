[
  {
    "id" : "82796435-6e4a-4cdb-a7f4-f671cff8c833",
    "prId" : 58714,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/58714#pullrequestreview-100510809",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cd56f8bf-4697-4f4f-9d15-1add1bb4391e",
        "parentId" : null,
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "Not related to the changes in this PR specifically, but why does kubenet *always* searches the default directory? The description of the flag `--cni-bin-dir` does not indicate that the list of directories are *in addition to* the default...",
        "createdAt" : "2018-02-28T21:29:50Z",
        "updatedAt" : "2018-03-01T17:00:50Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "d8518e74-4267-4408-8460-dcf2569e7f75",
        "parentId" : "cd56f8bf-4697-4f4f-9d15-1add1bb4391e",
        "authorId" : "57f729dd-988a-4d1a-83bf-ee70bf637c64",
        "body" : "@yujuhong good question, filed https://github.com/kubernetes/kubernetes/issues/60656 to track it in any case.",
        "createdAt" : "2018-03-01T16:58:45Z",
        "updatedAt" : "2018-03-01T17:00:50Z",
        "lastEditedBy" : "57f729dd-988a-4d1a-83bf-ee70bf637c64",
        "tags" : [
        ]
      }
    ],
    "commit" : "8778e50083b02c3ba0286221f9c8097593266bee",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +93,97 @@\tebtables        utilebtables.Interface\n\t// binDirs is passed by kubelet cni-bin-dir parameter.\n\t// kubenet will search for CNI binaries in DefaultCNIDir first, then continue to binDirs.\n\tbinDirs           []string\n\tnonMasqueradeCIDR string"
  },
  {
    "id" : "6446e7bf-262f-42e1-aaae-acc8a265a637",
    "prId" : 55247,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/55247#pullrequestreview-74799850",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a852e79c-a497-4fbf-a0e1-6f0883297cfa",
        "parentId" : null,
        "authorId" : "9cd12d42-ba38-4d33-b922-51e6f29f48e7",
        "body" : "I'd link to the issue here.",
        "createdAt" : "2017-11-07T15:51:00Z",
        "updatedAt" : "2017-11-07T16:42:18Z",
        "lastEditedBy" : "9cd12d42-ba38-4d33-b922-51e6f29f48e7",
        "tags" : [
        ]
      }
    ],
    "commit" : "23f4afc463f4dc278d59ce550fc88ea33caf4769",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +828,832 @@\n// disableContainerDAD disables duplicate address detection in the container.\n// DAD has a negative affect on pod creation latency, since we have to wait\n// a second or more for the addresses to leave the \"tentative\" state. Since\n// we're sure there won't be an address conflict (since we manage them manually),"
  },
  {
    "id" : "faeaee8f-5a56-487b-b0ca-a31ab538e06e",
    "prId" : 55247,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/55247#pullrequestreview-75194578",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4cc88eda-a5d3-4a80-8c34-43f29e026164",
        "parentId" : null,
        "authorId" : "b6f0a138-d8c9-4579-8e5a-45064a09c78c",
        "body" : "It's my understanding that a pod will not get an IPv6 address if hairpin and dad are enabled. If that is the case, should a check be implemented and have setup return an error if disableContainerDAD returns an error?",
        "createdAt" : "2017-11-07T19:24:56Z",
        "updatedAt" : "2017-11-07T19:24:56Z",
        "lastEditedBy" : "b6f0a138-d8c9-4579-8e5a-45064a09c78c",
        "tags" : [
        ]
      },
      {
        "id" : "d479caa3-e1e5-4db6-a29c-726d3bf874c9",
        "parentId" : "4cc88eda-a5d3-4a80-8c34-43f29e026164",
        "authorId" : "5f3d0da0-11c3-49d0-9aa9-f897fad1c961",
        "body" : "The CNI bridge plugin correctly handles this case - but it's a bit more subtle. It tries to use enhanced_dad, which all recent kernels have. That includes a nonce so hairpin is correctly detected.",
        "createdAt" : "2017-11-08T09:07:12Z",
        "updatedAt" : "2017-11-08T09:07:12Z",
        "lastEditedBy" : "5f3d0da0-11c3-49d0-9aa9-f897fad1c961",
        "tags" : [
        ]
      },
      {
        "id" : "d48b14fa-4f9f-42d7-961c-d25e20b6eabc",
        "parentId" : "4cc88eda-a5d3-4a80-8c34-43f29e026164",
        "authorId" : "b6f0a138-d8c9-4579-8e5a-45064a09c78c",
        "body" : "Understood. I looked at the bridge plugin code and saw exactly what you describe. I am fine with kubenet not supporting enhanced_dad. However, I still think it makes sense to throw an error instead of a log message if hairpin is enabled and `disableContainerDAD` returns an error. Otherwise, the pod will not get an IP address. Do you agree?",
        "createdAt" : "2017-11-08T16:15:46Z",
        "updatedAt" : "2017-11-08T16:15:46Z",
        "lastEditedBy" : "b6f0a138-d8c9-4579-8e5a-45064a09c78c",
        "tags" : [
        ]
      },
      {
        "id" : "32d6574f-08c1-4655-87c2-f7411b9cd9dc",
        "parentId" : "4cc88eda-a5d3-4a80-8c34-43f29e026164",
        "authorId" : "5f3d0da0-11c3-49d0-9aa9-f897fad1c961",
        "body" : "Whether or not this particular line succeeds or fails won't affect the plugin, which will raise errors appropriately. So, I don't think this needs to fail here, which is a minor performance tweak.",
        "createdAt" : "2017-11-08T16:36:36Z",
        "updatedAt" : "2017-11-08T16:36:36Z",
        "lastEditedBy" : "5f3d0da0-11c3-49d0-9aa9-f897fad1c961",
        "tags" : [
        ]
      },
      {
        "id" : "060b872f-7344-4cb9-9b16-644d38349ce7",
        "parentId" : "4cc88eda-a5d3-4a80-8c34-43f29e026164",
        "authorId" : "b6f0a138-d8c9-4579-8e5a-45064a09c78c",
        "body" : "Ah... now it makes sense. kubenet is essentially backed by the bridge/local-ipam plugins. I got it.",
        "createdAt" : "2017-11-08T18:08:17Z",
        "updatedAt" : "2017-11-08T18:08:17Z",
        "lastEditedBy" : "b6f0a138-d8c9-4579-8e5a-45064a09c78c",
        "tags" : [
        ]
      }
    ],
    "commit" : "23f4afc463f4dc278d59ce550fc88ea33caf4769",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +307,311 @@\t// Disable DAD so we skip the kernel delay on bringing up new interfaces.\n\tif err := plugin.disableContainerDAD(id); err != nil {\n\t\tglog.V(3).Infof(\"Failed to disable DAD in container: %v\", err)\n\t}\n"
  },
  {
    "id" : "11f32948-be3d-4910-9992-d46e0a1cda10",
    "prId" : 42202,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/42202#pullrequestreview-24806893",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "29e06a1d-61a6-47cc-a83a-dd12da361a2b",
        "parentId" : null,
        "authorId" : "e83108b8-1fb2-416b-9298-d5b70c14f708",
        "body" : "I assume this is backward compatible, right?",
        "createdAt" : "2017-03-02T18:17:45Z",
        "updatedAt" : "2017-04-18T12:24:40Z",
        "lastEditedBy" : "e83108b8-1fb2-416b-9298-d5b70c14f708",
        "tags" : [
        ]
      },
      {
        "id" : "d519152c-ec08-411e-97d1-8a37ed6cdcd5",
        "parentId" : "29e06a1d-61a6-47cc-a83a-dd12da361a2b",
        "authorId" : "5f3d0da0-11c3-49d0-9aa9-f897fad1c961",
        "body" : "Correct - this converts the result in to the 0.2.0 format, which is what kubenet already expects.",
        "createdAt" : "2017-03-02T18:31:44Z",
        "updatedAt" : "2017-04-18T12:24:40Z",
        "lastEditedBy" : "5f3d0da0-11c3-49d0-9aa9-f897fad1c961",
        "tags" : [
        ]
      }
    ],
    "commit" : "e4eaad3d24720f3f9b3d8e4fe95a9252455c3c06",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +321,325 @@\t}\n\t// Coerce the CNI result version\n\tres, err := cnitypes020.GetResult(resT)\n\tif err != nil {\n\t\treturn fmt.Errorf(\"unable to understand network config: %v\", err)"
  },
  {
    "id" : "36e4daa8-ef58-49fb-8302-ab0a8e5ec21b",
    "prId" : 40948,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/40948#pullrequestreview-20410033",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "565578cb-cd0e-4f52-8123-e6a685338b29",
        "parentId" : null,
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "Need to update the comment in `LegacyHost` to clarify what \"supporting legacy features\" means. ",
        "createdAt" : "2017-02-06T21:42:59Z",
        "updatedAt" : "2017-02-08T17:36:17Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "947f0553-2206-4b6a-8a09-b0f11686065d",
        "parentId" : "565578cb-cd0e-4f52-8123-e6a685338b29",
        "authorId" : "e83108b8-1fb2-416b-9298-d5b70c14f708",
        "body" : "Done",
        "createdAt" : "2017-02-07T01:10:40Z",
        "updatedAt" : "2017-02-08T17:36:17Z",
        "lastEditedBy" : "e83108b8-1fb2-416b-9298-d5b70c14f708",
        "tags" : [
        ]
      }
    ],
    "commit" : "be9eca6b510c67a74f1dad5a39dd044d2b697b50",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +362,366 @@\t// The host can choose to not support \"legacy\" features. The remote\n\t// shim doesn't support it (#35457), but the kubelet does.\n\tif plugin.host.SupportsLegacyFeatures() {\n\t\t// The first SetUpPod call creates the bridge; get a shaper for the sake of\n\t\t// initialization"
  },
  {
    "id" : "2c276b67-22a2-4e99-813e-2314885ac27c",
    "prId" : 40948,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/40948#pullrequestreview-20602937",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a5820816-ce9d-49e1-bf37-eb0f017d846f",
        "parentId" : null,
        "authorId" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "body" : "I suppose it would be bad to break hostport support for all old runtimes that rely on synchostports, but do we have a deprecation plan for this? can you please put that into a TODO (maybe something like \"when we've moved hostport support into CNI ...\")",
        "createdAt" : "2017-02-07T01:13:18Z",
        "updatedAt" : "2017-02-08T17:36:17Z",
        "lastEditedBy" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "tags" : [
        ]
      },
      {
        "id" : "58e889ef-5617-40d1-9827-74cc55d02a49",
        "parentId" : "a5820816-ce9d-49e1-bf37-eb0f017d846f",
        "authorId" : "e83108b8-1fb2-416b-9298-d5b70c14f708",
        "body" : "I can also check the hostport chains using the previous hashing method. And remove it in 1.7.\r\n\r\nObviously, this assumes there will not be collisions. ",
        "createdAt" : "2017-02-07T01:40:57Z",
        "updatedAt" : "2017-02-08T17:36:17Z",
        "lastEditedBy" : "e83108b8-1fb2-416b-9298-d5b70c14f708",
        "tags" : [
        ]
      },
      {
        "id" : "f953085d-0394-432e-a9d3-a6b6adce60f0",
        "parentId" : "a5820816-ce9d-49e1-bf37-eb0f017d846f",
        "authorId" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "body" : "probability of sha256 collision is remote enough, assuming that's what you mean. ",
        "createdAt" : "2017-02-07T01:46:48Z",
        "updatedAt" : "2017-02-08T17:36:17Z",
        "lastEditedBy" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "tags" : [
        ]
      },
      {
        "id" : "10cfbe8d-608b-44f6-bc02-283e8b5d8f1b",
        "parentId" : "a5820816-ce9d-49e1-bf37-eb0f017d846f",
        "authorId" : "e83108b8-1fb2-416b-9298-d5b70c14f708",
        "body" : "The latest patch also check the legacy hostport chains created by HostportSyncer for removal. Added TODO to remove the check in 1.7",
        "createdAt" : "2017-02-07T19:51:01Z",
        "updatedAt" : "2017-02-08T17:36:17Z",
        "lastEditedBy" : "e83108b8-1fb2-416b-9298-d5b70c14f708",
        "tags" : [
        ]
      }
    ],
    "commit" : "be9eca6b510c67a74f1dad5a39dd044d2b697b50",
    "line" : 110,
    "diffHunk" : "@@ -1,1 +489,493 @@\t\tactivePodPortMapping, err := plugin.getPodPortMapping()\n\t\tif err == nil {\n\t\t\terr = plugin.hostportSyncer.SyncHostports(BridgeName, activePodPortMapping)\n\t\t}\n\t\tif err != nil {"
  },
  {
    "id" : "209ead22-4f69-47f0-8287-34f5552d614c",
    "prId" : 35572,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/35572#pullrequestreview-5961174",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d396a6d9-607a-443f-b5ad-b316270d419a",
        "parentId" : null,
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "What if the infra container has already terminated? You probably want to check the container state before inserting. \n",
        "createdAt" : "2016-10-26T17:03:21Z",
        "updatedAt" : "2016-10-28T05:15:50Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "ca092749-10ee-4824-bf05-fc6f79e8dbd3",
        "parentId" : "d396a6d9-607a-443f-b5ad-b316270d419a",
        "authorId" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "body" : "this is a race we can't easily avoid. If it exits after getNonExitedPods and this line, assume we get a teardown.  It's more important that we detect the gargabe in the ip dir.\n",
        "createdAt" : "2016-10-26T20:37:33Z",
        "updatedAt" : "2016-10-28T05:15:50Z",
        "lastEditedBy" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "tags" : [
        ]
      },
      {
        "id" : "34b61dcb-989d-45e6-b68e-333a23bf877d",
        "parentId" : "d396a6d9-607a-443f-b5ad-b316270d419a",
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "My comment wasn't about the race condition. `getNonExitedPods` returns pods with at least one running container, which may include a pod with a running user container and a dead infra container. I don't see the state of the infra container being checked anywhere.\n",
        "createdAt" : "2016-10-26T22:15:43Z",
        "updatedAt" : "2016-10-28T05:15:50Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "ea57d680-9337-4406-8eaf-01b7c5f8a568",
        "parentId" : "d396a6d9-607a-443f-b5ad-b316270d419a",
        "authorId" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "body" : "is that a problem?\n",
        "createdAt" : "2016-10-26T22:18:18Z",
        "updatedAt" : "2016-10-28T05:15:50Z",
        "lastEditedBy" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "tags" : [
        ]
      },
      {
        "id" : "0c39ef29-8e71-4368-a33a-ef1a33cdc487",
        "parentId" : "d396a6d9-607a-443f-b5ad-b316270d419a",
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "Other than the IP used by those infra containers wouldn't be recycled, there is no problem. \n",
        "createdAt" : "2016-10-26T22:21:12Z",
        "updatedAt" : "2016-10-28T05:15:50Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "5ea37777-4458-47a3-a1f4-1423eb5df18c",
        "parentId" : "d396a6d9-607a-443f-b5ad-b316270d419a",
        "authorId" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "body" : "And that pod will get cleaned up the normal way (teardown)? there's no way we restarted an old container because we must've tried the infra container first and failed, so this must be a crashing infra container of a current user pods that will at some point in the future naturally die. no? \n",
        "createdAt" : "2016-10-26T22:24:21Z",
        "updatedAt" : "2016-10-28T05:15:50Z",
        "lastEditedBy" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "tags" : [
        ]
      }
    ],
    "commit" : "37bc34c567665f5c2a8e8478830acd1d0b3bba37",
    "line" : null,
    "diffHunk" : "@@ -1,1 +681,685 @@\t\t}\n\n\t\trunningContainerIDs.Insert(strings.TrimSpace(containerID.ID))\n\t}\n"
  },
  {
    "id" : "6b4b96df-b29d-43c9-8c15-95ce22220192",
    "prId" : 31931,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "eaf70a76-3de4-442d-a8f5-7b63c0fdeacf",
        "parentId" : null,
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "nit: seems like this function can just return the error in line 539\n",
        "createdAt" : "2016-09-02T00:14:33Z",
        "updatedAt" : "2016-09-02T00:16:15Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "20ed879faaef16036713b24518d3665db2286926",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +543,547 @@\n// checkCNIPlugin returns if all kubenet required cni plugins can be found at /opt/cni/bin or user specifed NetworkPluginDir.\nfunc (plugin *kubenetNetworkPlugin) checkCNIPlugin() bool {\n\tif plugin.checkCNIPluginInDir(DefaultCNIDir) || plugin.checkCNIPluginInDir(plugin.vendorDir) {\n\t\treturn true"
  },
  {
    "id" : "0d0dd504-1c6f-4d2c-a1b4-e7dac01e181d",
    "prId" : 31931,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6976d7fb-b145-485a-9f55-47c1b2f3c65a",
        "parentId" : null,
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "Argh, no more `exec`ing should be allowed :)\nPlease rewite this with native go tools in the future.\n\nThis is a much better and readable approach for example: http://stackoverflow.com/a/14668907\n",
        "createdAt" : "2016-09-02T22:05:11Z",
        "updatedAt" : "2016-09-02T22:05:11Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      },
      {
        "id" : "39e549e1-757c-40f6-8620-4ee81001c589",
        "parentId" : "6976d7fb-b145-485a-9f55-47c1b2f3c65a",
        "authorId" : "e83108b8-1fb2-416b-9298-d5b70c14f708",
        "body" : "I poked around yesterday for a better util for this. Will submit a patch while I am still on it. \n",
        "createdAt" : "2016-09-02T22:09:41Z",
        "updatedAt" : "2016-09-02T22:09:41Z",
        "lastEditedBy" : "e83108b8-1fb2-416b-9298-d5b70c14f708",
        "tags" : [
        ]
      }
    ],
    "commit" : "20ed879faaef16036713b24518d3665db2286926",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +552,556 @@// checkCNIPluginInDir returns if all required cni plugins are placed in dir\nfunc (plugin *kubenetNetworkPlugin) checkCNIPluginInDir(dir string) bool {\n\toutput, err := plugin.execer.Command(\"ls\", dir).CombinedOutput()\n\tif err != nil {\n\t\treturn false"
  },
  {
    "id" : "1b7925d1-68d9-481a-b4b4-8a65f3096341",
    "prId" : 31388,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/31388#pullrequestreview-445937",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f6bf5b5a-080d-4d76-97ba-5ebe1bbea8d5",
        "parentId" : null,
        "authorId" : "e83108b8-1fb2-416b-9298-d5b70c14f708",
        "body" : "looking at the logic inside, if one of the containers exited, then return true. \ndoes not match with the comment\n",
        "createdAt" : "2016-08-30T22:12:38Z",
        "updatedAt" : "2016-09-17T00:30:26Z",
        "lastEditedBy" : "e83108b8-1fb2-416b-9298-d5b70c14f708",
        "tags" : [
        ]
      },
      {
        "id" : "668b3661-4e31-4ee4-8e75-08d5ece35b61",
        "parentId" : "f6bf5b5a-080d-4d76-97ba-5ebe1bbea8d5",
        "authorId" : "227eb550-8b08-4420-9a78-279f840bd8de",
        "body" : "@freehan Thanks for catching. Update the code, also tests the pod sanboxes (which contains the infra container).\nOnly if all containers exites, it returns true.\n",
        "createdAt" : "2016-09-17T00:31:25Z",
        "updatedAt" : "2016-09-17T00:31:26Z",
        "lastEditedBy" : "227eb550-8b08-4420-9a78-279f840bd8de",
        "tags" : [
        ]
      }
    ],
    "commit" : "5389a74388388fa48471a12a611a86461add9e31",
    "line" : 81,
    "diffHunk" : "@@ -1,1 +609,613 @@}\n\n// podIsExited returns true if the pod is exited (all containers inside are exited).\nfunc podIsExited(p *kubecontainer.Pod) bool {\n\tfor _, c := range p.Containers {"
  },
  {
    "id" : "22f947b0-62a2-4c12-a172-fa38580b7021",
    "prId" : 28717,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "744dce77-6e6d-45e7-9549-f4a34628a5b7",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "says who?  Is there a spec you can cite?\n",
        "createdAt" : "2016-08-19T23:10:25Z",
        "updatedAt" : "2016-08-24T17:57:47Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "a4c4ee86-20a4-4c05-9ae2-4572aef1fb5e",
        "parentId" : "744dce77-6e6d-45e7-9549-f4a34628a5b7",
        "authorId" : "d36c6e2e-68ff-4beb-99ef-11c76f6929ce",
        "body" : "Ethernet OUI assignments http://standards-oui.ieee.org/oui.txt\n\nEthernet OUIs are supposed to be 6 nibbles though.\n",
        "createdAt" : "2016-08-19T23:49:47Z",
        "updatedAt" : "2016-08-24T17:57:47Z",
        "lastEditedBy" : "d36c6e2e-68ff-4beb-99ef-11c76f6929ce",
        "tags" : [
        ]
      },
      {
        "id" : "3637fcd7-7476-4ab2-9d2a-203a84c8718b",
        "parentId" : "744dce77-6e6d-45e7-9549-f4a34628a5b7",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "my point was that a comment is needed :)\n\nOn Fri, Aug 19, 2016 at 4:50 PM, Girish Kalele notifications@github.com\nwrote:\n\n> In pkg/kubelet/network/kubenet/kubenet_linux.go\n> https://github.com/kubernetes/kubernetes/pull/28717#discussion_r75566276\n> :\n> \n> > @@ -53,6 +54,9 @@ const (\n> >     DefaultCNIDir     = \"/opt/cni/bin\"\n> > \n> > ```\n> > sysctlBridgeCallIptables = \"net/bridge/bridge-nf-call-iptables\"\n> > ```\n> > \n> > +\n> > -   // private mac prefix safe to use\n> \n> Ethernet OUI assignments http://standards-oui.ieee.org/oui.txt\n> \n> Ethernet OUIs are supposed to be 6 nibbles though.\n> \n> —\n> You are receiving this because you were assigned.\n> Reply to this email directly, view it on GitHub\n> https://github.com/kubernetes/kubernetes/pull/28717/files/c8992c0a2bcfb216c073c03ff6cc551915f99003#r75566276,\n> or mute the thread\n> https://github.com/notifications/unsubscribe-auth/AFVgVMk6o95cEhsl1X3DEEnpu2Ukbn-Zks5qhkFOgaJpZM4JIcoW\n> .\n",
        "createdAt" : "2016-08-20T00:02:24Z",
        "updatedAt" : "2016-08-24T17:57:47Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "06b4f996-8802-402f-a68f-29c2869d9a39",
        "parentId" : "744dce77-6e6d-45e7-9549-f4a34628a5b7",
        "authorId" : "e83108b8-1fb2-416b-9298-d5b70c14f708",
        "body" : "There is a bit to set universally administered addresses or locally administered addresses. \nhttps://en.wikipedia.org/wiki/MAC_address\n",
        "createdAt" : "2016-08-20T00:04:10Z",
        "updatedAt" : "2016-08-24T17:57:47Z",
        "lastEditedBy" : "e83108b8-1fb2-416b-9298-d5b70c14f708",
        "tags" : [
        ]
      },
      {
        "id" : "52b02146-92ad-4a07-ab32-3b6bcf9abc13",
        "parentId" : "744dce77-6e6d-45e7-9549-f4a34628a5b7",
        "authorId" : "e83108b8-1fb2-416b-9298-d5b70c14f708",
        "body" : "The second-least-significant bit of the first octet of the address. 1 stands for locally administered address\n",
        "createdAt" : "2016-08-20T00:04:56Z",
        "updatedAt" : "2016-08-24T17:57:47Z",
        "lastEditedBy" : "e83108b8-1fb2-416b-9298-d5b70c14f708",
        "tags" : [
        ]
      },
      {
        "id" : "56f382a8-67b1-4eac-932b-a6aece2eb201",
        "parentId" : "744dce77-6e6d-45e7-9549-f4a34628a5b7",
        "authorId" : "d36c6e2e-68ff-4beb-99ef-11c76f6929ce",
        "body" : "Is this considered a bugfix or a feature ? Should we use the alpha\ngate/feature flags for this one too ?\n\nOn Fri, Aug 19, 2016 at 5:05 PM, Minhan Xia notifications@github.com\nwrote:\n\n> In pkg/kubelet/network/kubenet/kubenet_linux.go\n> https://github.com/kubernetes/kubernetes/pull/28717#discussion_r75567126\n> :\n> \n> > @@ -53,6 +54,9 @@ const (\n> >     DefaultCNIDir     = \"/opt/cni/bin\"\n> > \n> > ```\n> > sysctlBridgeCallIptables = \"net/bridge/bridge-nf-call-iptables\"\n> > ```\n> > \n> > +\n> > -   // private mac prefix safe to use\n> \n> There is a bit to set universally administered addresses or locally\n> administered addresses.\n> https://en.wikipedia.org/wiki/MAC_address\n> \n> —\n> You are receiving this because you were assigned.\n> Reply to this email directly, view it on GitHub\n> https://github.com/kubernetes/kubernetes/pull/28717/files/c8992c0a2bcfb216c073c03ff6cc551915f99003#r75567126,\n> or mute the thread\n> https://github.com/notifications/unsubscribe-auth/ARrr7bOfawobwMAJucrj7N1VlUwu9OgVks5qhkSsgaJpZM4JIcoW\n> .\n",
        "createdAt" : "2016-08-20T00:06:22Z",
        "updatedAt" : "2016-08-24T17:57:47Z",
        "lastEditedBy" : "d36c6e2e-68ff-4beb-99ef-11c76f6929ce",
        "tags" : [
        ]
      },
      {
        "id" : "1d2edd10-7d29-4e5e-9eff-f5bc696e7766",
        "parentId" : "744dce77-6e6d-45e7-9549-f4a34628a5b7",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "I think this is a bugfix\n\nOn Fri, Aug 19, 2016 at 5:07 PM, Girish Kalele notifications@github.com\nwrote:\n\n> In pkg/kubelet/network/kubenet/kubenet_linux.go\n> https://github.com/kubernetes/kubernetes/pull/28717#discussion_r75567289\n> :\n> \n> > @@ -53,6 +54,9 @@ const (\n> >     DefaultCNIDir     = \"/opt/cni/bin\"\n> > \n> > ```\n> > sysctlBridgeCallIptables = \"net/bridge/bridge-nf-call-iptables\"\n> > ```\n> > \n> > +\n> > -   // private mac prefix safe to use\n> \n> Is this considered a bugfix or a feature ? Should we use the alpha\n> gate/feature flags for this one too ?\n> … <#m_5523835148537522559_>\n> On Fri, Aug 19, 2016 at 5:05 PM, Minhan Xia **_@**_.***> wrote: In\n> pkg/kubelet/network/kubenet/kubenet_linux.go <#28717 (comment)\n> https://github.com/kubernetes/kubernetes/pull/28717#discussion_r75567126>\n> : > @@ -53,6 +54,9 @@ const ( > DefaultCNIDir = \"/opt/cni/bin\" > >\n> sysctlBridgeCallIptables = \"net/bridge/bridge-nf-call-iptables\" > + > +\n> // private mac prefix safe to use There is a bit to set universally\n> administered addresses or locally administered addresses.\n> https://en.wikipedia.org/wiki/MAC_address — You are receiving this\n> because you were assigned. Reply to this email directly, view it on GitHub <\n> https://github.com/kubernetes/kubernetes/pull/28717/files/\n> c8992c0a2bcfb216c073c03ff6cc551915f99003#r75567126>, or mute the thread <\n> https://github.com/notifications/unsubscribe-auth/\n> ARrr7bOfawobwMAJucrj7N1VlUwu9OgVks5qhkSsgaJpZM4JIcoW> .\n> \n> —\n> You are receiving this because you were assigned.\n> Reply to this email directly, view it on GitHub\n> https://github.com/kubernetes/kubernetes/pull/28717/files/c8992c0a2bcfb216c073c03ff6cc551915f99003#r75567289,\n> or mute the thread\n> https://github.com/notifications/unsubscribe-auth/AFVgVJZ3dTIewyCwBcvivgvqjIAh50VWks5qhkUygaJpZM4JIcoW\n> .\n",
        "createdAt" : "2016-08-20T00:24:42Z",
        "updatedAt" : "2016-08-24T17:57:47Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "3ed5c7a8d761727d87c6f4c5ea02a1e93a74706b",
    "line" : null,
    "diffHunk" : "@@ -1,1 +60,64 @@\tfallbackMTU = 1460\n\n\t// private mac prefix safe to use\n\t// Universally administered and locally administered addresses are distinguished by setting the second-least-significant\n\t// bit of the first octet of the address. If it is 1, the address is locally administered. For example, for address 0a:00:00:00:00:00,"
  },
  {
    "id" : "dc101d8d-94c9-4eeb-8df7-01809f8c028c",
    "prId" : 27905,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "baf2124c-8406-44d8-8f0f-fec3583c765b",
        "parentId" : null,
        "authorId" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "body" : "so the pod cidr changes? or is there something else going on here\n",
        "createdAt" : "2016-06-22T23:56:28Z",
        "updatedAt" : "2016-06-22T23:56:28Z",
        "lastEditedBy" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "tags" : [
        ]
      },
      {
        "id" : "d1d8d544-728b-42a3-b3bb-f58e16e0bda7",
        "parentId" : "baf2124c-8406-44d8-8f0f-fec3583c765b",
        "authorId" : "e83108b8-1fb2-416b-9298-d5b70c14f708",
        "body" : "It is just the string mismatch. \n`10.180.2.1/24` vs `10.180.2.0/24`\n",
        "createdAt" : "2016-06-23T00:18:57Z",
        "updatedAt" : "2016-06-23T00:18:57Z",
        "lastEditedBy" : "e83108b8-1fb2-416b-9298-d5b70c14f708",
        "tags" : [
        ]
      }
    ],
    "commit" : "48169ce736995c9b06b7c7d23841c2e0cdc19433",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +251,255 @@\n\tfor _, addr := range addrs {\n\t\tif !utilnet.IPNetEqual(addr.IPNet, keep) {\n\t\t\tglog.V(2).Infof(\"Removing old address %s from %s\", addr.IPNet.String(), BridgeName)\n\t\t\tnetlink.AddrDel(bridge, &addr)"
  },
  {
    "id" : "f2cb7731-a67a-48b4-8def-e32ac044fb03",
    "prId" : 27905,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "88af58fd-0240-4248-b18a-af7a155eee82",
        "parentId" : null,
        "authorId" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "body" : "Freehan, \nWas this a conscious change as well? log level from 5 to 2? (or just for debugging?)\n",
        "createdAt" : "2016-06-23T01:22:07Z",
        "updatedAt" : "2016-06-23T01:22:07Z",
        "lastEditedBy" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "tags" : [
        ]
      },
      {
        "id" : "04945a64-c001-4df5-91e5-83299de88a82",
        "parentId" : "88af58fd-0240-4248-b18a-af7a155eee82",
        "authorId" : "a6409368-42e0-44a9-bf79-9d3042ac3b65",
        "body" : "The log is only generated one line upon the change when kubelet restart, right? In that case, it should be ok, and also can help further debugging. \n",
        "createdAt" : "2016-06-23T05:18:31Z",
        "updatedAt" : "2016-06-23T05:18:31Z",
        "lastEditedBy" : "a6409368-42e0-44a9-bf79-9d3042ac3b65",
        "tags" : [
        ]
      },
      {
        "id" : "e1413f19-9fc4-4411-84e8-a6e1b6279294",
        "parentId" : "88af58fd-0240-4248-b18a-af7a155eee82",
        "authorId" : "e83108b8-1fb2-416b-9298-d5b70c14f708",
        "body" : "Yes. This only happens during kubelet initialization. The following line will take an important action. I feel like the log level should be V(2). \n",
        "createdAt" : "2016-06-23T17:37:03Z",
        "updatedAt" : "2016-06-23T17:37:03Z",
        "lastEditedBy" : "e83108b8-1fb2-416b-9298-d5b70c14f708",
        "tags" : [
        ]
      }
    ],
    "commit" : "48169ce736995c9b06b7c7d23841c2e0cdc19433",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +252,256 @@\tfor _, addr := range addrs {\n\t\tif !utilnet.IPNetEqual(addr.IPNet, keep) {\n\t\t\tglog.V(2).Infof(\"Removing old address %s from %s\", addr.IPNet.String(), BridgeName)\n\t\t\tnetlink.AddrDel(bridge, &addr)\n\t\t}"
  },
  {
    "id" : "e75eae38-97f6-4911-ae21-c0eae8fb7bb0",
    "prId" : 27132,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "de5dc5e0-c3a7-4081-a216-ddee507019e5",
        "parentId" : null,
        "authorId" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "body" : "being able to route to pod ips is a requirement for kube anyway, was there a reason we set this to begin with? \n",
        "createdAt" : "2016-06-09T17:42:31Z",
        "updatedAt" : "2016-06-10T01:43:44Z",
        "lastEditedBy" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "tags" : [
        ]
      },
      {
        "id" : "0c9c76cb-b574-4b0e-827e-5f3f1e9d599b",
        "parentId" : "de5dc5e0-c3a7-4081-a216-ddee507019e5",
        "authorId" : "e83108b8-1fb2-416b-9298-d5b70c14f708",
        "body" : "I think it has been there since the initial commit. Great catch BTW!\n",
        "createdAt" : "2016-06-09T17:46:01Z",
        "updatedAt" : "2016-06-10T01:43:44Z",
        "lastEditedBy" : "e83108b8-1fb2-416b-9298-d5b70c14f708",
        "tags" : [
        ]
      }
    ],
    "commit" : "1276a91638249f9d4bede446cc9ca3379fc9a871",
    "line" : 64,
    "diffHunk" : "@@ -1,1 +187,191 @@  \"addIf\": \"%s\",\n  \"isGateway\": true,\n  \"ipMasq\": false,\n  \"ipam\": {\n    \"type\": \"host-local\","
  },
  {
    "id" : "a152a92c-4baa-421c-9f84-5e73a9a4c348",
    "prId" : 27132,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ba5a99f7-a4b8-4a7c-aa98-9f8cf75a69b5",
        "parentId" : null,
        "authorId" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "body" : "I'm assuming this won't keep appending rules? \n",
        "createdAt" : "2016-06-10T00:44:54Z",
        "updatedAt" : "2016-06-10T01:43:44Z",
        "lastEditedBy" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "tags" : [
        ]
      },
      {
        "id" : "5d99ac6b-734f-4e00-8a23-937693ce1789",
        "parentId" : "ba5a99f7-a4b8-4a7c-aa98-9f8cf75a69b5",
        "authorId" : "e83108b8-1fb2-416b-9298-d5b70c14f708",
        "body" : "I am pretty sure it does not. Or kube-proxy will explode by now. \n",
        "createdAt" : "2016-06-10T00:46:38Z",
        "updatedAt" : "2016-06-10T01:43:44Z",
        "lastEditedBy" : "e83108b8-1fb2-416b-9298-d5b70c14f708",
        "tags" : [
        ]
      }
    ],
    "commit" : "1276a91638249f9d4bede446cc9ca3379fc9a871",
    "line" : 49,
    "diffHunk" : "@@ -1,1 +145,149 @@// TODO: move thic logic into cni bridge plugin and remove this from kubenet\nfunc (plugin *kubenetNetworkPlugin) ensureMasqRule() error {\n\tif _, err := plugin.iptables.EnsureRule(utiliptables.Append, utiliptables.TableNAT, utiliptables.ChainPostrouting,\n\t\t\"-m\", \"comment\", \"--comment\", \"kubenet: SNAT for outbound traffic from cluster\",\n\t\t\"-m\", \"addrtype\", \"!\", \"--dst-type\", \"LOCAL\","
  },
  {
    "id" : "cf270b68-ed1c-445a-8c22-bbad39cd986d",
    "prId" : 27132,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "44bdd613-b474-4f23-b2de-fb0c29103a38",
        "parentId" : null,
        "authorId" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "body" : "Why did you leave out TearDown :)\n",
        "createdAt" : "2016-06-10T00:46:02Z",
        "updatedAt" : "2016-06-10T01:43:44Z",
        "lastEditedBy" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "tags" : [
        ]
      },
      {
        "id" : "cfc8e18b-cb98-44a3-acbc-1410a119449d",
        "parentId" : "44bdd613-b474-4f23-b2de-fb0c29103a38",
        "authorId" : "e83108b8-1fb2-416b-9298-d5b70c14f708",
        "body" : "Maybe I should?\n",
        "createdAt" : "2016-06-10T00:47:22Z",
        "updatedAt" : "2016-06-10T01:43:44Z",
        "lastEditedBy" : "e83108b8-1fb2-416b-9298-d5b70c14f708",
        "tags" : [
        ]
      }
    ],
    "commit" : "1276a91638249f9d4bede446cc9ca3379fc9a871",
    "line" : null,
    "diffHunk" : "@@ -1,1 +376,380 @@\n\t// Need to SNAT outbound traffic from cluster\n\tif err = plugin.ensureMasqRule(); err != nil {\n\t\tglog.Errorf(\"Failed to ensure MASQ rule: %v\", err)\n\t}"
  },
  {
    "id" : "f0ec9bce-b052-4cbf-b784-a74d0919a87f",
    "prId" : 26934,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "40e22b20-c0c6-4d7b-82c4-3f82847e6d41",
        "parentId" : null,
        "authorId" : "e83108b8-1fb2-416b-9298-d5b70c14f708",
        "body" : "Add a comment here for something like \"Assuming pod specs yield by runtime.GetPods include name and ID of containers in pod\"\n",
        "createdAt" : "2016-06-15T21:13:26Z",
        "updatedAt" : "2016-06-16T18:53:55Z",
        "lastEditedBy" : "e83108b8-1fb2-416b-9298-d5b70c14f708",
        "tags" : [
        ]
      }
    ],
    "commit" : "a519e8a403f4a9106bfe729ab685e84daea26c11",
    "line" : 269,
    "diffHunk" : "@@ -1,1 +506,510 @@\tfor _, p := range pods {\n\t\tfor _, c := range p.Containers {\n\t\t\tif c.Name != dockertools.PodInfraContainerName {\n\t\t\t\tcontinue\n\t\t\t}"
  },
  {
    "id" : "acdd043a-6a13-430e-8a48-0351ae515670",
    "prId" : 25604,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ca3963c0-b895-46cb-a9a4-f11e5ca6a448",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "isn't `hash[:]` equivalent to `hash` ?\n",
        "createdAt" : "2016-05-14T04:12:57Z",
        "updatedAt" : "2016-05-23T05:19:19Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "680b5154-c128-4f29-9354-72031ef77a0f",
        "parentId" : "ca3963c0-b895-46cb-a9a4-f11e5ca6a448",
        "authorId" : "e83108b8-1fb2-416b-9298-d5b70c14f708",
        "body" : "hash is type [32]byte and the input is expecting []byte\n",
        "createdAt" : "2016-05-16T23:49:42Z",
        "updatedAt" : "2016-05-23T05:19:19Z",
        "lastEditedBy" : "e83108b8-1fb2-416b-9298-d5b70c14f708",
        "tags" : [
        ]
      }
    ],
    "commit" : "6a3ad1d66d7ed3110fd679790dce296e887bf0f4",
    "line" : null,
    "diffHunk" : "@@ -1,1 +612,616 @@func hostportChainName(cp api.ContainerPort, podFullName string) utiliptables.Chain {\n\thash := sha256.Sum256([]byte(string(cp.HostPort) + string(cp.Protocol) + podFullName))\n\tencoded := base32.StdEncoding.EncodeToString(hash[:])\n\treturn utiliptables.Chain(kubenetHostportChainPrefix + encoded[:16])\n}"
  },
  {
    "id" : "f7c59dc9-25f1-49b8-821a-65fce0b630c3",
    "prId" : 25604,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5780970f-47a1-4b77-89a6-fa7e4f03a31c",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "I was going to ask why a whole chain just for this, but the answer, clearly, is stats.  Comment that?\n",
        "createdAt" : "2016-05-14T04:34:54Z",
        "updatedAt" : "2016-05-23T05:19:19Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "6a3ad1d66d7ed3110fd679790dce296e887bf0f4",
    "line" : null,
    "diffHunk" : "@@ -1,1 +719,723 @@\t\twriteLine(natRules, args...)\n\n\t\t// Create hostport chain to DNAT traffic to final destination\n\t\t// Iptables will maintained the stats for this chain\n\t\targs = []string{"
  },
  {
    "id" : "36db54ab-17f2-48b6-8a72-ff86b76fe24e",
    "prId" : 25604,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4da6cb39-c34c-490a-97ac-e1ede39ac760",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "I don't think you can do this here.  You have to re-assert this in-line with the iptables creation.  You don't want to set an iptables rule for a port unless you are SURE that you were able to lock it.\n",
        "createdAt" : "2016-05-18T16:28:31Z",
        "updatedAt" : "2016-05-23T05:19:19Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "6a3ad1d66d7ed3110fd679790dce296e887bf0f4",
    "line" : null,
    "diffHunk" : "@@ -1,1 +290,294 @@\t}\n\t// try to open pod host port if specified\n\thostportMap, err := plugin.openPodHostports(pod)\n\tif err != nil {\n\t\treturn err"
  },
  {
    "id" : "11eda418-3bb7-4394-8199-4159ebc42c6c",
    "prId" : 24107,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d3d618fd-9d1f-4758-847e-c455fa249449",
        "parentId" : null,
        "authorId" : "2fa5a4c6-e0a7-4dbe-a80e-7770a5dc92a1",
        "body" : "Stylistic nit, I like explicit `_, _` assignment + comment when errors are being ignored. Doesn't have to change though.\n",
        "createdAt" : "2016-04-14T21:12:06Z",
        "updatedAt" : "2016-04-15T01:43:28Z",
        "lastEditedBy" : "2fa5a4c6-e0a7-4dbe-a80e-7770a5dc92a1",
        "tags" : [
        ]
      }
    ],
    "commit" : "02c0f41c8811b9f63c54a39a6317f7197fba87a7",
    "line" : null,
    "diffHunk" : "@@ -1,1 +83,87 @@\t// was built-in, we simply ignore the error here. A better thing to do is\n\t// to check the kernel version in the future.\n\tutilexec.New().Command(\"modprobe\", \"br-netfilter\").CombinedOutput()\n\tif err := utilsysctl.SetSysctl(sysctlBridgeCallIptables, 1); err != nil {\n\t\tglog.Warningf(\"can't set sysctl %s: %v\", sysctlBridgeCallIptables, err)"
  },
  {
    "id" : "7b21797e-2866-44b2-bee5-acf06d6d7dc7",
    "prId" : 23704,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4595b0b5-f7df-4693-8b42-e20b5b3b968a",
        "parentId" : null,
        "authorId" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "body" : "Do you want to print out the entire json blob at V(2) on every event? \nI guess right now there's only 1 event, sugges printing the event type at V(2) and the whole json at V(4). \n",
        "createdAt" : "2016-04-02T01:11:54Z",
        "updatedAt" : "2016-04-02T01:11:54Z",
        "lastEditedBy" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "tags" : [
        ]
      },
      {
        "id" : "8db735be-103f-46c6-af07-8bdfb902306a",
        "parentId" : "4595b0b5-f7df-4693-8b42-e20b5b3b968a",
        "authorId" : "e83108b8-1fb2-416b-9298-d5b70c14f708",
        "body" : "Typically, this log only output once when PodCIDR is set. It will not happened repeatedly. See line 120 of this file. And it makes folks life much easier to debug CNI stuff, given it is already tough. \n",
        "createdAt" : "2016-04-04T17:53:24Z",
        "updatedAt" : "2016-04-04T17:53:44Z",
        "lastEditedBy" : "e83108b8-1fb2-416b-9298-d5b70c14f708",
        "tags" : [
        ]
      },
      {
        "id" : "bc1a3b19-8c71-4f5a-822e-5054f65843fb",
        "parentId" : "4595b0b5-f7df-4693-8b42-e20b5b3b968a",
        "authorId" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "body" : "This happens on every Event, it so happens that the only event today is pod cidr. Upto you we can always dumb it down later. Unsure if a customer is going to care about the details of pod networking, though. \n",
        "createdAt" : "2016-04-04T20:12:01Z",
        "updatedAt" : "2016-04-04T20:12:01Z",
        "lastEditedBy" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "tags" : [
        ]
      },
      {
        "id" : "c330ca60-b9ff-49b1-9c5e-16dd1d6903af",
        "parentId" : "4595b0b5-f7df-4693-8b42-e20b5b3b968a",
        "authorId" : "e83108b8-1fb2-416b-9298-d5b70c14f708",
        "body" : "Check this: https://github.com/kubernetes/kubernetes/blob/master/pkg/kubelet/network/kubenet/kubenet_linux.go#L122\nIt only process podCIDR change event. This is not a good code structure tough. But can be fix later.\n",
        "createdAt" : "2016-04-04T20:21:12Z",
        "updatedAt" : "2016-04-04T20:36:37Z",
        "lastEditedBy" : "e83108b8-1fb2-416b-9298-d5b70c14f708",
        "tags" : [
        ]
      },
      {
        "id" : "a8643c0f-cdcd-4022-9742-b8f00117431e",
        "parentId" : "4595b0b5-f7df-4693-8b42-e20b5b3b968a",
        "authorId" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "body" : "Hah. Suggest either renaming the function, or allowing generic events. And logging when a !POD_CIDR_CHANGE is observed at Warningf.\n",
        "createdAt" : "2016-04-04T20:24:34Z",
        "updatedAt" : "2016-04-04T20:24:34Z",
        "lastEditedBy" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "tags" : [
        ]
      }
    ],
    "commit" : "d026d7ecbcde494a5d033ffe5816a77eb7d3a044",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +140,144 @@\n\t\tjson := fmt.Sprintf(NET_CONFIG_TEMPLATE, BridgeName, plugin.MTU, network.DefaultInterfaceName, podCIDR, cidr.IP.String())\n\t\tglog.V(2).Infof(\"CNI network config set to %v\", json)\n\t\tplugin.netConfig, err = libcni.ConfFromBytes([]byte(json))\n\t\tif err == nil {"
  },
  {
    "id" : "84d552c9-3041-4bb2-b23a-e95b5ab3feaa",
    "prId" : 22827,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "561a0fde-85ca-43c9-8216-4dd1d027042c",
        "parentId" : null,
        "authorId" : "e83108b8-1fb2-416b-9298-d5b70c14f708",
        "body" : "It looks to me that kubenet already support shaping\nhttps://github.com/kubernetes/kubernetes/blob/master/pkg/kubelet/network/kubenet/kubenet_linux.go#L211\n\nJust include NET_PLUGIN_CAPABILITY_SHAPING for kubenet would work\n",
        "createdAt" : "2016-03-30T21:32:42Z",
        "updatedAt" : "2016-03-30T21:32:42Z",
        "lastEditedBy" : "e83108b8-1fb2-416b-9298-d5b70c14f708",
        "tags" : [
        ]
      },
      {
        "id" : "8cd7bb7d-b259-4b9c-8fe3-569cdf02126e",
        "parentId" : "561a0fde-85ca-43c9-8216-4dd1d027042c",
        "authorId" : "e83108b8-1fb2-416b-9298-d5b70c14f708",
        "body" : "Please ignore my comment above. The shaper in kubenet is not complete. Ingress/egress for pod has not been covered.\n",
        "createdAt" : "2016-03-30T21:57:58Z",
        "updatedAt" : "2016-03-30T21:57:58Z",
        "lastEditedBy" : "e83108b8-1fb2-416b-9298-d5b70c14f708",
        "tags" : [
        ]
      }
    ],
    "commit" : "fb97b8cdaa9ac073384a8e2b5258f40e63e5be64",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +42,46 @@\ntype kubenetNetworkPlugin struct {\n\tnetwork.NoopNetworkPlugin\n\n\thost      network.Host"
  }
]