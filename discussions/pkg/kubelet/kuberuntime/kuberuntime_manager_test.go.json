[
  {
    "id" : "9cc1ec07-bbbf-46ce-a8d1-8dfd159aa648",
    "prId" : 98933,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/98933#pullrequestreview-588156874",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7f2e9c82-4152-4377-9143-cd36de49d705",
        "parentId" : null,
        "authorId" : "31a2ac00-6c67-4307-a4bc-bfd13f41ef27",
        "body" : ":+1: ",
        "createdAt" : "2021-02-10T23:41:27Z",
        "updatedAt" : "2021-02-18T17:22:23Z",
        "lastEditedBy" : "31a2ac00-6c67-4307-a4bc-bfd13f41ef27",
        "tags" : [
        ]
      }
    ],
    "commit" : "f989adaa189679d32517bf9b437659974bc309ba",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +1400,1404 @@\t// GetPodStatus and the following SyncPod will not return errors in the\n\t// case where the pod has been deleted. We are not adding any pods into\n\t// the fakePodProvider so they are 'deleted'.\n\tpodStatus, err := m.GetPodStatus(pod.UID, pod.Name, pod.Namespace)\n\tassert.NoError(t, err)"
  },
  {
    "id" : "9fab3774-c71b-4d78-97a8-2e2ccaf44768",
    "prId" : 84279,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/84279#pullrequestreview-316029975",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b5019106-622e-45cf-a6ef-c5710ef4eeab",
        "parentId" : null,
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "Can we `createTestRuntimeManager` inside the loop? So that we don't need to reset the status.",
        "createdAt" : "2019-11-12T23:24:23Z",
        "updatedAt" : "2019-11-13T07:13:20Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      },
      {
        "id" : "6b438603-bd55-47ce-97e1-57406d7f8b3d",
        "parentId" : "b5019106-622e-45cf-a6ef-c5710ef4eeab",
        "authorId" : "4da24861-03eb-421f-b365-cf63f3c423b3",
        "body" : "Makes sense... maybe it could go into another PR?",
        "createdAt" : "2019-11-13T06:51:34Z",
        "updatedAt" : "2019-11-13T07:13:20Z",
        "lastEditedBy" : "4da24861-03eb-421f-b365-cf63f3c423b3",
        "tags" : [
        ]
      }
    ],
    "commit" : "66595d54a0b68cfe7b55f8ff17167b291fa4cf03",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +734,738 @@\t\tmutateStatusFn func(*kubecontainer.PodStatus)\n\t\tactions        podActions\n\t\tresetStatusFn  func(*kubecontainer.PodStatus)\n\t}{\n\t\t\"everying is good; do nothing\": {"
  },
  {
    "id" : "cce166c3-a59d-4f18-83be-bac83a5d37d2",
    "prId" : 83123,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/83123#pullrequestreview-295745310",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "49bf9d5c-d0e0-4e2f-ad5c-ca5637a474c4",
        "parentId" : null,
        "authorId" : "0c76e20f-41a5-4725-b3c3-d5b6cae89641",
        "body" : "I think we need to have tests with PodIPs as well across the entire container start logic..",
        "createdAt" : "2019-10-01T17:06:06Z",
        "updatedAt" : "2019-10-25T16:19:02Z",
        "lastEditedBy" : "0c76e20f-41a5-4725-b3c3-d5b6cae89641",
        "tags" : [
        ]
      }
    ],
    "commit" : "af4d18ccf9330a8dd7354c5441ccd841d469cee5",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +157,161 @@\tassert.NoError(t, err, \"generatePodSandboxConfig for container template %+v\", template)\n\n\tcontainerConfig, _, err := m.generateContainerConfig(template.container, template.pod, template.attempt, \"\", template.container.Image, []string{})\n\tassert.NoError(t, err, \"generateContainerConfig for container template %+v\", template)\n"
  },
  {
    "id" : "918c69d2-dc76-41ff-9956-5c13a9494226",
    "prId" : 47599,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/47599#pullrequestreview-45807887",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b7eca2c8-e75f-47fd-92d4-4fbc553326a0",
        "parentId" : null,
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "@smarterclayton @dchen1107, please read the description of the test cases and make sure they meet your expectation. Thanks!",
        "createdAt" : "2017-06-22T18:30:31Z",
        "updatedAt" : "2017-08-16T22:27:39Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "152d8b9d96627ef2d8f440bda01104fc621ff69c",
    "line" : 224,
    "diffHunk" : "@@ -1,1 +954,958 @@\t\tmutateStatusFn func(*kubecontainer.PodStatus)\n\t\tactions        podActions\n\t}{\n\t\t\"initialization completed; start all containers\": {\n\t\t\tactions: podActions{"
  },
  {
    "id" : "77f0752d-b772-491d-b161-134714ea43ed",
    "prId" : 31847,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d4a896de-ab1a-4c84-ba90-f95cba1d8ee3",
        "parentId" : null,
        "authorId" : "227eb550-8b08-4420-9a78-279f840bd8de",
        "body" : "nit: To test `GetPodStatus`, we actually should check more fields, like the state, created,..\n\nBut it's fine we leave it to follow up PRs if we have a TODO here.\n",
        "createdAt" : "2016-09-07T01:22:00Z",
        "updatedAt" : "2016-09-15T15:32:52Z",
        "lastEditedBy" : "227eb550-8b08-4420-9a78-279f840bd8de",
        "tags" : [
        ]
      },
      {
        "id" : "38f55fd0-bd94-4cd5-96bb-7b35f8986fe1",
        "parentId" : "d4a896de-ab1a-4c84-ba90-f95cba1d8ee3",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "Will do. Testing is not fully accomplished. I mean to add more testing after those dependencies are merged (for easy rebasing). \n",
        "createdAt" : "2016-09-07T02:16:59Z",
        "updatedAt" : "2016-09-15T15:32:52Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      }
    ],
    "commit" : "d65309399a228bd0c085f5e0d1ce93d558aebfaa",
    "line" : null,
    "diffHunk" : "@@ -1,1 +214,218 @@\tassert.Equal(t, pod.Name, podStatus.Name)\n\tassert.Equal(t, pod.Namespace, podStatus.Namespace)\n\tassert.Equal(t, apitest.FakePodSandboxIP, podStatus.IP)\n}\n"
  },
  {
    "id" : "a220dc30-e111-4fb2-a858-c3f93fe38ee5",
    "prId" : 31847,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d5d7a5f6-d33a-45cc-9659-1dda5d7f59ed",
        "parentId" : null,
        "authorId" : "227eb550-8b08-4420-9a78-279f840bd8de",
        "body" : "nit: This makes think maybe we should have more states..\n",
        "createdAt" : "2016-09-07T01:44:26Z",
        "updatedAt" : "2016-09-15T15:32:52Z",
        "lastEditedBy" : "227eb550-8b08-4420-9a78-279f840bd8de",
        "tags" : [
        ]
      },
      {
        "id" : "6b477b36-106e-4e0c-8572-803acc6e9b90",
        "parentId" : "d5d7a5f6-d33a-45cc-9659-1dda5d7f59ed",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "We have two state for sandbox today: ready and notready. What extra states do you mean?\n",
        "createdAt" : "2016-09-07T02:18:33Z",
        "updatedAt" : "2016-09-15T15:32:52Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      },
      {
        "id" : "99c650ab-d213-48b7-97f1-90075224ba9d",
        "parentId" : "d5d7a5f6-d33a-45cc-9659-1dda5d7f59ed",
        "authorId" : "227eb550-8b08-4420-9a78-279f840bd8de",
        "body" : "@feiskyer nvm, I thought pod sandbox could be in `created`, `running`, `exited` state, but I checked there's only `CreatePodSandbox` API. So `created` and `running` is combined into `ready`.\n\nBut I feel like the name `CreatePodSandbox` doesn't reflect that the sandbox is `running` after this API succeeds. Especially we have `CreateContainer` + `StartContainer` which does creation + launch individually. But `CreatePodSandbox` does both without any clarification docs in the API definition. Might be confusing to runtime developers... \n\nShould be another issue though..\n",
        "createdAt" : "2016-09-07T07:26:36Z",
        "updatedAt" : "2016-09-15T15:32:52Z",
        "lastEditedBy" : "227eb550-8b08-4420-9a78-279f840bd8de",
        "tags" : [
        ]
      },
      {
        "id" : "a895c92b-69ec-43e1-a83a-a25a5422035d",
        "parentId" : "d5d7a5f6-d33a-45cc-9659-1dda5d7f59ed",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "@yifan-gu Good point, we should rename it to `RunPodSandbox`, and document clearly the sandbox is expected at running state. I will open another PR to address this.\n",
        "createdAt" : "2016-09-07T13:37:27Z",
        "updatedAt" : "2016-09-15T15:32:52Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      }
    ],
    "commit" : "d65309399a228bd0c085f5e0d1ce93d558aebfaa",
    "line" : null,
    "diffHunk" : "@@ -1,1 +438,442 @@\tassert.Equal(t, 1, len(fakeRuntime.Sandboxes))\n\tfor _, sandbox := range fakeRuntime.Sandboxes {\n\t\tassert.Equal(t, runtimeApi.PodSandBoxState_NOTREADY, sandbox.GetState())\n\t}\n\tfor _, c := range fakeRuntime.Containers {"
  }
]