[
  {
    "id" : "b1745451-ff3c-42eb-993f-53c5283efa0f",
    "prId" : 35348,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/35348#pullrequestreview-5969294",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "df094300-3910-4423-b0c4-b47ead09889a",
        "parentId" : null,
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Add a benchmark test too - the amount of memory allocated in this function and the behavior of logs will eventually be something we will tune.\n",
        "createdAt" : "2016-10-25T01:09:43Z",
        "updatedAt" : "2016-10-27T00:38:36Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "97667e66-6331-4e6e-8313-16cd92540c5f",
        "parentId" : "df094300-3910-4423-b0c4-b47ead09889a",
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "Will do. BTW, I think the function should not use too much memory, because we are always using the same buffer - `buf := make([]byte, blockSize)`. It should be much better than docker's implementation, which reads all logs into the memory https://github.com/docker/docker/blob/master/pkg/tailfile/tailfile.go#L20.\n",
        "createdAt" : "2016-10-25T02:35:38Z",
        "updatedAt" : "2016-10-27T00:38:36Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      },
      {
        "id" : "b00f19f5-6ad0-42f0-afd2-6a2f0739eee1",
        "parentId" : "df094300-3910-4423-b0c4-b47ead09889a",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Unmarshal I think will be 5-6 allocations per line which can be very expensive (due to json parse)\n",
        "createdAt" : "2016-10-25T02:51:26Z",
        "updatedAt" : "2016-10-27T00:38:36Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "b8dd9a10-21d0-4b4b-aff2-82abda5b314c",
        "parentId" : "df094300-3910-4423-b0c4-b47ead09889a",
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "@smarterclayton Ha, I see. I thought you were concerning about the performance of `tail`.\n",
        "createdAt" : "2016-10-25T03:06:30Z",
        "updatedAt" : "2016-10-27T00:38:36Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      },
      {
        "id" : "caa2a4a4-0e3b-4715-8572-9f0e5e5044ca",
        "parentId" : "df094300-3910-4423-b0c4-b47ead09889a",
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "@smarterclayton The PR is already relatively big. I think the benchmark unit test won't block the PR itself that much. Are you ok with that I send another PR to add the benchmark test shortly?\n",
        "createdAt" : "2016-10-26T23:34:12Z",
        "updatedAt" : "2016-10-27T00:38:36Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      }
    ],
    "commit" : "e403ccef75509b3116f50ec4dceb2f9c103c4179",
    "line" : 246,
    "diffHunk" : "@@ -1,1 +244,248 @@}\n\nfunc TestTail(t *testing.T) {\n\tline := strings.Repeat(\"a\", blockSize)\n\ttestBytes := []byte(line + \"\\n\" +"
  }
]