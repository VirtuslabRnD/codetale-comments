[
  {
    "id" : "cc98637d-6bf6-4518-b3f1-699697aae0c1",
    "prId" : 92355,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/92355#pullrequestreview-446063611",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8a4c7ab7-24db-40b5-a19e-fa5726d3d147",
        "parentId" : null,
        "authorId" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "body" : "linux version of this method will return nil here. Meaning that if `WindowsOptions.RunAsUserName` was set to a value that is not root, it will OK that independently from values of `uid ` and `username `. Why is this one different?",
        "createdAt" : "2020-07-09T19:41:03Z",
        "updatedAt" : "2020-07-24T12:01:17Z",
        "lastEditedBy" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "tags" : [
        ]
      },
      {
        "id" : "a1f9b259-f853-43a2-af77-7b9f07c22c0b",
        "parentId" : "8a4c7ab7-24db-40b5-a19e-fa5726d3d147",
        "authorId" : "c666776f-f3a4-4854-9679-2638da5217ce",
        "body" : "Already fixed\r\nThe logic of linux container is to judge by the security context of pod and container first, if the user does not input, judge by mirror metadata. Windows reuses this logic",
        "createdAt" : "2020-07-10T01:14:45Z",
        "updatedAt" : "2020-07-24T12:01:17Z",
        "lastEditedBy" : "c666776f-f3a4-4854-9679-2638da5217ce",
        "tags" : [
        ]
      }
    ],
    "commit" : "ccde63b9c16241780f42d25550c200aa38e53989",
    "line" : 59,
    "diffHunk" : "@@ -1,1 +57,61 @@\t\t\t}\n\t\t\treturn nil\n\t\t}\n\t}\n\tif len(username) > 0 && username == windowsRootUserName {"
  },
  {
    "id" : "ca3d1a44-e2ce-41c6-8dc0-7ce7d1d11dd9",
    "prId" : 92355,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/92355#pullrequestreview-446063067",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e4c61b72-b3e8-4767-bb80-2f92965b8144",
        "parentId" : null,
        "authorId" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "body" : "Do you want to report a warning or error if `*effectiveSc.RunAsUser` was set to some (any) value? This configuration may indicate an intent to configure security that cannot be satisfied on windows",
        "createdAt" : "2020-07-09T19:42:58Z",
        "updatedAt" : "2020-07-24T12:01:17Z",
        "lastEditedBy" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "tags" : [
        ]
      },
      {
        "id" : "22491b99-5567-4272-a143-53e3e697c851",
        "parentId" : "e4c61b72-b3e8-4767-bb80-2f92965b8144",
        "authorId" : "c666776f-f3a4-4854-9679-2638da5217ce",
        "body" : "Adding this warning message is indeed friendly for windows",
        "createdAt" : "2020-07-10T01:12:44Z",
        "updatedAt" : "2020-07-24T12:01:17Z",
        "lastEditedBy" : "c666776f-f3a4-4854-9679-2638da5217ce",
        "tags" : [
        ]
      }
    ],
    "commit" : "ccde63b9c16241780f42d25550c200aa38e53989",
    "line" : 63,
    "diffHunk" : "@@ -1,1 +61,65 @@\tif len(username) > 0 && username == windowsRootUserName {\n\t\treturn fmt.Errorf(\"container's runAsUser (%s) which will be regarded as root identity and will break non-root policy\", username)\n\t}\n\treturn nil\n}"
  },
  {
    "id" : "53b94122-c440-4d75-a953-7f1a8cba2949",
    "prId" : 92355,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/92355#pullrequestreview-487952853",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b7e7aab5-136b-482a-9f1b-7bd57e7e0c29",
        "parentId" : null,
        "authorId" : "d2b16581-e7e9-48b8-9f76-6f6bcb9ec300",
        "body" : "This is a big deal, right?  Someone thinks they are running with security options that we aren't applying.  Should this fail more loudly?\r\n\r\nIf i'm interpreting this correctly, I would suggest emiting an event, or even returning an error here.  Same comment for other unsupported options.",
        "createdAt" : "2020-09-11T16:58:41Z",
        "updatedAt" : "2020-09-11T16:59:20Z",
        "lastEditedBy" : "d2b16581-e7e9-48b8-9f76-6f6bcb9ec300",
        "tags" : [
        ]
      },
      {
        "id" : "96a430d0-c65e-4fba-8e19-4ad0a8c6ea03",
        "parentId" : "b7e7aab5-136b-482a-9f1b-7bd57e7e0c29",
        "authorId" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "body" : "I think the argumentation here is that these settings were likely set by some plugin. See https://github.com/kubernetes/kubernetes/pull/93475#discussion_r486666465\r\n\r\nThis is why warning was good enough from my perspective, but I'd like somebody from windows sig to confirm",
        "createdAt" : "2020-09-11T17:38:15Z",
        "updatedAt" : "2020-09-11T17:38:15Z",
        "lastEditedBy" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "tags" : [
        ]
      },
      {
        "id" : "f5b77c72-028a-456d-98c5-80474d8cbdf4",
        "parentId" : "b7e7aab5-136b-482a-9f1b-7bd57e7e0c29",
        "authorId" : "3966b9fe-a8de-4641-9e7e-947bf0585613",
        "body" : "Maybe we should add a check to https://github.com/kubernetes/kubernetes/blob/360659102c8ae94a5bee6e9cbbc3d1160db58428/pkg/apis/core/validation/validation.go#L3769 that verifies only one of SecurityContext.SELinuxOptions or SecurityContext.WindowsOptions are set.\r\n\r\nFrom my perspective we should encourage plugin/automation authors to use node selectors if they are going to blanket apply security policy to pods rather than working around that assumption in the kubelet.\r\n@jsturtevant thoughts?",
        "createdAt" : "2020-09-11T18:22:11Z",
        "updatedAt" : "2020-09-11T18:23:24Z",
        "lastEditedBy" : "3966b9fe-a8de-4641-9e7e-947bf0585613",
        "tags" : [
        ]
      },
      {
        "id" : "923c893e-b602-4363-a3ae-16275adb01ba",
        "parentId" : "b7e7aab5-136b-482a-9f1b-7bd57e7e0c29",
        "authorId" : "c666776f-f3a4-4854-9679-2638da5217ce",
        "body" : "Because these do not cause cri errors, it is just that the features of linux container on windows container cannot take effect, and vice versa. If kubelet fails more loudly, it will affect existing applications (adding wrong WindowsOptions or LinuxOptions). So I think the warning level log may be a way to make sense (may need to be more detailed)",
        "createdAt" : "2020-09-14T01:50:33Z",
        "updatedAt" : "2020-09-14T01:50:33Z",
        "lastEditedBy" : "c666776f-f3a4-4854-9679-2638da5217ce",
        "tags" : [
        ]
      },
      {
        "id" : "709f8b35-7585-42fc-a4f4-6978b81b57bc",
        "parentId" : "b7e7aab5-136b-482a-9f1b-7bd57e7e0c29",
        "authorId" : "c666776f-f3a4-4854-9679-2638da5217ce",
        "body" : "@marosset \r\n\r\nI think this is a very good idea. When apiserver pre-verification, if the user explicitly sets `SecurityContext.SELinuxOptions` or `SecurityContext.WindowsOptions` for verification, if the discussion passes, I can try to open another A pr. \r\nBut kubelet is really responsible for calling cri to create pod logic. Should it also have its own necessary verification logic?",
        "createdAt" : "2020-09-14T02:06:28Z",
        "updatedAt" : "2020-09-14T02:08:09Z",
        "lastEditedBy" : "c666776f-f3a4-4854-9679-2638da5217ce",
        "tags" : [
        ]
      },
      {
        "id" : "d0ceab2a-6eca-441c-9670-df4fed3ea4dc",
        "parentId" : "b7e7aab5-136b-482a-9f1b-7bd57e7e0c29",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "> Maybe we should add a check to https://github.com/kubernetes/kubernetes/blob/360659102c8ae94a5bee6e9cbbc3d1160db58428/pkg/apis/core/validation/validation.go#L3769 that verifies only one of SecurityContext.SELinuxOptions or SecurityContext.WindowsOptions are set.\r\n\r\nTightening API validation is not generally possible (see https://github.com/kubernetes/kubernetes/issues/64841). If that combination of settings is never legitimate (is a multi-OS image possible?), we could add that to the list of things we want to warn about (https://github.com/kubernetes/kubernetes/issues/94626)",
        "createdAt" : "2020-09-14T13:21:10Z",
        "updatedAt" : "2020-09-14T13:21:11Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "11b142d1-75a7-4cf5-9ddc-afae3f1fff7f",
        "parentId" : "b7e7aab5-136b-482a-9f1b-7bd57e7e0c29",
        "authorId" : "d2b16581-e7e9-48b8-9f76-6f6bcb9ec300",
        "body" : "Thanks @liggitt, that addresses my concern.",
        "createdAt" : "2020-09-14T16:04:29Z",
        "updatedAt" : "2020-09-14T16:04:29Z",
        "lastEditedBy" : "d2b16581-e7e9-48b8-9f76-6f6bcb9ec300",
        "tags" : [
        ]
      },
      {
        "id" : "bec68916-3dbe-44fc-a94d-ca9e182c0b86",
        "parentId" : "b7e7aab5-136b-482a-9f1b-7bd57e7e0c29",
        "authorId" : "3966b9fe-a8de-4641-9e7e-947bf0585613",
        "body" : "This also addresses my concerns as well and I agree a warming would be more appropriate here.",
        "createdAt" : "2020-09-14T16:37:27Z",
        "updatedAt" : "2020-09-14T16:40:32Z",
        "lastEditedBy" : "3966b9fe-a8de-4641-9e7e-947bf0585613",
        "tags" : [
        ]
      }
    ],
    "commit" : "ccde63b9c16241780f42d25550c200aa38e53989",
    "line" : 48,
    "diffHunk" : "@@ -1,1 +46,50 @@\t}\n\tif effectiveSc.SELinuxOptions != nil {\n\t\tklog.Warningf(\"Windows container does not support SecurityContext.SELinuxOptions, please use SecurityContext.WindowsOptions\")\n\t}\n\tif effectiveSc.RunAsGroup != nil {"
  }
]