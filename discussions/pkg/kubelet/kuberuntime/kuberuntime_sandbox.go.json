[
  {
    "id" : "a1cff064-d928-4056-bfac-72c7a671e3cb",
    "prId" : 99576,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/99576#pullrequestreview-606825432",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b5a38501-f9b2-40f9-81d7-a07b327247d9",
        "parentId" : null,
        "authorId" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "body" : "should this only be done when feature flag is set?",
        "createdAt" : "2021-03-05T17:38:13Z",
        "updatedAt" : "2021-05-04T23:16:43Z",
        "lastEditedBy" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "tags" : [
        ]
      },
      {
        "id" : "117766bf-1c24-47e1-9b26-3fb1f9148a9a",
        "parentId" : "b5a38501-f9b2-40f9-81d7-a07b327247d9",
        "authorId" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "body" : "or passing the `CredentialSpec` and `RunAsUsername` is needed in any case? Interesting, that it will be passed twice - once with linux config and once with Windows. Interesting how this will get resolved by runtime.",
        "createdAt" : "2021-03-05T17:48:31Z",
        "updatedAt" : "2021-05-04T23:16:43Z",
        "lastEditedBy" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "tags" : [
        ]
      },
      {
        "id" : "9d015a28-e98a-4d15-bdff-7134a4ac41c0",
        "parentId" : "b5a38501-f9b2-40f9-81d7-a07b327247d9",
        "authorId" : "3966b9fe-a8de-4641-9e7e-947bf0585613",
        "body" : "I don't think so.\r\nWe want to set `CredentialSpec` and `RunAsUsername` even when the `WindowsHostProcessContainers` feature flag is not set (These features went GA/stable in v1.18)\r\n\r\nFor some time containerD will be looking for the fields under both LinuxOptions and WindowsOptions (preferring WindowsOptions if they exist). We're still working out the timelines for that tho...",
        "createdAt" : "2021-03-05T18:38:10Z",
        "updatedAt" : "2021-05-04T23:16:43Z",
        "lastEditedBy" : "3966b9fe-a8de-4641-9e7e-947bf0585613",
        "tags" : [
        ]
      },
      {
        "id" : "2ae46ab5-3129-403b-9cf0-ab6c373aa190",
        "parentId" : "b5a38501-f9b2-40f9-81d7-a07b327247d9",
        "authorId" : "df90aa6f-4328-4d27-92eb-8f98c90bd8b0",
        "body" : "Is this related to https://github.com/kubernetes/kubernetes/issues/93580?",
        "createdAt" : "2021-03-08T18:30:46Z",
        "updatedAt" : "2021-05-04T23:16:43Z",
        "lastEditedBy" : "df90aa6f-4328-4d27-92eb-8f98c90bd8b0",
        "tags" : [
        ]
      },
      {
        "id" : "a70b29a8-1153-44e5-a966-6998fb596015",
        "parentId" : "b5a38501-f9b2-40f9-81d7-a07b327247d9",
        "authorId" : "3966b9fe-a8de-4641-9e7e-947bf0585613",
        "body" : "Actually this is more related to https://github.com/kubernetes/kubernetes/issues/92963 than #93580 but it will help with that one too. These CRI updates were discussed in the KEP https://github.com/kubernetes/enhancements/tree/master/keps/sig-windows/1981-windows-privileged-container-support#cri-implementation-details",
        "createdAt" : "2021-03-09T00:18:08Z",
        "updatedAt" : "2021-05-04T23:16:43Z",
        "lastEditedBy" : "3966b9fe-a8de-4641-9e7e-947bf0585613",
        "tags" : [
        ]
      }
    ],
    "commit" : "ae424160bde1a2db4be91c002944d8a3e2165a0e",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +141,145 @@\tpodSandboxConfig.Linux = lc\n\n\tif runtime.GOOS == \"windows\" {\n\t\twc, err := m.generatePodSandboxWindowsConfig(pod)\n\t\tif err != nil {"
  },
  {
    "id" : "55d5fa4f-c6dd-4df1-bc74-24814ea4d09c",
    "prId" : 93475,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/93475#pullrequestreview-458585566",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cbb6543d-9ea8-403d-a1de-443a493a405b",
        "parentId" : null,
        "authorId" : "98986d5f-c846-4478-8363-8a016e3d6b89",
        "body" : "Good point - it seems there is no point in calling `generatePodSandboxLinuxConfig` for Windows and therefore the `runtime.GOOS != \"windows\"` checks below can be moved [up](https://github.com/kubernetes/kubernetes/blob/428b500c5a93daded135f347428724334163859a/pkg/kubelet/kuberuntime/kuberuntime_sandbox.go#L140) to the caller? Note that in case of Windows, the relevant security context details (covering GMSA credspec details and runAsUsername) is passed as part of the [container security context]( https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/cri-api/pkg/apis/runtime/v1alpha2/api.proto#L789 ) (rather than pod/sandbox level context)",
        "createdAt" : "2020-07-30T09:06:08Z",
        "updatedAt" : "2020-08-04T03:44:06Z",
        "lastEditedBy" : "98986d5f-c846-4478-8363-8a016e3d6b89",
        "tags" : [
        ]
      },
      {
        "id" : "c73e10b0-2117-4033-8d8b-e627430857a8",
        "parentId" : "cbb6543d-9ea8-403d-a1de-443a493a405b",
        "authorId" : "38ca4f80-c365-4775-8981-1e56b713b07b",
        "body" : "I started with that approach and realized the pod is having networking issues on the Windows node when we don't call `generatePodSandboxLinuxConfig`. The error that I was getting is cni specific:\r\n\r\n```\r\nFailed to create pod sandbox: rpc error: code = Unknown desc = failed to set up sandbox container \"d05be344b4f748823f3df9bf9f69af0c86524007b529dd3ccbee046cc3edb907\" network for pod \"win-webserver-6795dbc9b7-d75cs\": networkPlugin cni failed to set up pod \"win-webserver-6795dbc9b7-d75cs_test-win\" network: error while ProvisionEndpoint(d05be344b4f748823f3df9bf9f69af0c86524007b529dd3ccbee046cc3edb907_OVNKubernetesHybridOverlayNetwork,C4B14A0D-5666-4F1B-8804-6D13A114F80C,d05be344b4f748823f3df9bf9f69af0c86524007b529dd3ccbee046cc3edb907): failed to find HNSEndpoint d05be344b4f748823f3df9bf9f69af0c86524007b529dd3ccbee046cc3edb907_OVNKubernetesHybridOverlayNetwork: Endpoint d05be344b4f748823f3df9bf9f69af0c86524007b529dd3ccbee046cc3edb907_OVNKubernetesHybridOverlayNetwork not found\r\n```\r\n\r\nSo, I think there is some dependency on the linux config which I am not able to figure out.\r\n",
        "createdAt" : "2020-07-30T13:49:29Z",
        "updatedAt" : "2020-08-04T03:44:06Z",
        "lastEditedBy" : "38ca4f80-c365-4775-8981-1e56b713b07b",
        "tags" : [
        ]
      },
      {
        "id" : "48ebeff8-1574-4a89-9dac-ba8b2e35abbe",
        "parentId" : "cbb6543d-9ea8-403d-a1de-443a493a405b",
        "authorId" : "98986d5f-c846-4478-8363-8a016e3d6b89",
        "body" : "Got it. I have filed https://github.com/kubernetes/kubernetes/issues/93580 to keep track of the followup around this. Can be addressed later in a separate PR.",
        "createdAt" : "2020-07-30T16:43:09Z",
        "updatedAt" : "2020-08-04T03:44:06Z",
        "lastEditedBy" : "98986d5f-c846-4478-8363-8a016e3d6b89",
        "tags" : [
        ]
      },
      {
        "id" : "c1a35475-10e1-4d26-aa6b-6e2005e714c7",
        "parentId" : "cbb6543d-9ea8-403d-a1de-443a493a405b",
        "authorId" : "38ca4f80-c365-4775-8981-1e56b713b07b",
        "body" : "Thank you,",
        "createdAt" : "2020-07-30T16:54:16Z",
        "updatedAt" : "2020-08-04T03:44:06Z",
        "lastEditedBy" : "38ca4f80-c365-4775-8981-1e56b713b07b",
        "tags" : [
        ]
      }
    ],
    "commit" : "cd8686bc57fe2a1e5fcf4b1c0bb82419125ab4d1",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +145,149 @@\n// generatePodSandboxLinuxConfig generates LinuxPodSandboxConfig from v1.Pod.\n// We've to call PodSandboxLinuxConfig always irrespective of the underlying OS as securityContext is not part of\n// podSandboxConfig. It is currently part of LinuxPodSandboxConfig. In future, if we have securityContext pulled out\n// in podSandboxConfig we should be able to use it."
  },
  {
    "id" : "a7a3d675-0fb1-4304-80e4-39e2f91c541a",
    "prId" : 93475,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/93475#pullrequestreview-486351793",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f990116d-dfd8-4222-adb1-e3abaf13390f",
        "parentId" : null,
        "authorId" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "body" : "it looks like misconfiguration if windows pod configured like this. Should this `if` has else to report this misconfiguration as a warning?",
        "createdAt" : "2020-09-10T20:46:16Z",
        "updatedAt" : "2020-09-10T20:46:17Z",
        "lastEditedBy" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "tags" : [
        ]
      },
      {
        "id" : "7f19874f-edc0-4e02-8d3c-4005946afef1",
        "parentId" : "f990116d-dfd8-4222-adb1-e3abaf13390f",
        "authorId" : "df90aa6f-4328-4d27-92eb-8f98c90bd8b0",
        "body" : "we discussed this a bit as well at sig-windows, my understanding is the use case where users are running into this is when there was automation that assigns security contexts to all pods.  The expectation from the windows perspective since these fields are marked as not supported on windows they would be ignored. @ravisantoshgudimetla can confirm",
        "createdAt" : "2020-09-10T22:22:46Z",
        "updatedAt" : "2020-09-10T22:22:46Z",
        "lastEditedBy" : "df90aa6f-4328-4d27-92eb-8f98c90bd8b0",
        "tags" : [
        ]
      }
    ],
    "commit" : "cd8686bc57fe2a1e5fcf4b1c0bb82419125ab4d1",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +174,178 @@\tif pod.Spec.SecurityContext != nil {\n\t\tsc := pod.Spec.SecurityContext\n\t\tif sc.RunAsUser != nil && runtime.GOOS != \"windows\" {\n\t\t\tlc.SecurityContext.RunAsUser = &runtimeapi.Int64Value{Value: int64(*sc.RunAsUser)}\n\t\t}"
  },
  {
    "id" : "e19fbc27-f918-4337-a0b1-df82723d8736",
    "prId" : 92817,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/92817#pullrequestreview-445134177",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cf0f5340-69d6-4223-b5aa-2955d834bb54",
        "parentId" : null,
        "authorId" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "body" : "comment got lost:\r\n\r\ncomment says the error is ignored, but the statement below actually returns an error. Is it intentional and I'm missing something in this comment?",
        "createdAt" : "2020-07-08T04:27:20Z",
        "updatedAt" : "2020-07-22T21:12:49Z",
        "lastEditedBy" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "tags" : [
        ]
      },
      {
        "id" : "5738f9a1-d0e2-493e-a301-a3deb3dcc11f",
        "parentId" : "cf0f5340-69d6-4223-b5aa-2955d834bb54",
        "authorId" : "af81f9c4-a75e-4ffc-8796-b6a575aa6a95",
        "body" : "error from stopsandbox called as part of killpod function is ignored and hence we are calling stopsandbox again as part of delete sandbox.",
        "createdAt" : "2020-07-08T06:40:09Z",
        "updatedAt" : "2020-07-22T21:12:49Z",
        "lastEditedBy" : "af81f9c4-a75e-4ffc-8796-b6a575aa6a95",
        "tags" : [
        ]
      },
      {
        "id" : "5a4a45a2-d6a9-4640-8839-620b2cc4ca34",
        "parentId" : "cf0f5340-69d6-4223-b5aa-2955d834bb54",
        "authorId" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "body" : "I understand this comment now. Thank you!",
        "createdAt" : "2020-07-08T21:14:45Z",
        "updatedAt" : "2020-07-22T21:12:49Z",
        "lastEditedBy" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "tags" : [
        ]
      }
    ],
    "commit" : "acac15c20e5effb079502f8cb047be5871853f80",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +309,313 @@func (m *kubeGenericRuntimeManager) DeleteSandbox(sandboxID string) error {\n\tklog.V(4).Infof(\"Removing sandbox %q\", sandboxID)\n\t// stop sandbox is called as part of kill pod function but the error is ignored. So,\n\t// we have to call stop sandbox again to make sure that all the resources like network\n\t// are cleaned by runtime."
  },
  {
    "id" : "264eca74-db4b-4e41-a165-3a068d1fd5c6",
    "prId" : 38348,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/38348#pullrequestreview-12593672",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "212a1d36-28f9-464a-b1d7-96401f994aef",
        "parentId" : null,
        "authorId" : "227eb550-8b08-4420-9a78-279f840bd8de",
        "body" : "Just to point out that Instead of returning nil, this now will return an empty `LinuxPodSandboxConfig`.\r\nBut that won't affect anything.",
        "createdAt" : "2016-12-13T01:56:48Z",
        "updatedAt" : "2016-12-13T01:56:48Z",
        "lastEditedBy" : "227eb550-8b08-4420-9a78-279f840bd8de",
        "tags" : [
        ]
      },
      {
        "id" : "bee2f89f-42ba-490d-9f9d-c63f44451d18",
        "parentId" : "212a1d36-28f9-464a-b1d7-96401f994aef",
        "authorId" : "2fa5a4c6-e0a7-4dbe-a80e-7770a5dc92a1",
        "body" : "The code is cleaner and it should not have any behavioural difference. I think it's worth doing it this way just for the sake of more readable code.\r\n\r\nIf you have a suggestion for something equally readable that retains the nil, happy to hear",
        "createdAt" : "2016-12-13T02:02:43Z",
        "updatedAt" : "2016-12-13T02:02:43Z",
        "lastEditedBy" : "2fa5a4c6-e0a7-4dbe-a80e-7770a5dc92a1",
        "tags" : [
        ]
      }
    ],
    "commit" : "bcd939cb080922d648b6e3a2f7e0406061f4ef5c",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +131,135 @@// generatePodSandboxLinuxConfig generates LinuxPodSandboxConfig from v1.Pod.\nfunc (m *kubeGenericRuntimeManager) generatePodSandboxLinuxConfig(pod *v1.Pod, cgroupParent string) *runtimeapi.LinuxPodSandboxConfig {\n\tlc := &runtimeapi.LinuxPodSandboxConfig{\n\t\tSecurityContext: &runtimeapi.LinuxSandboxSecurityContext{},\n\t}"
  },
  {
    "id" : "63f593a2-8009-43a8-99b3-1c5c3c92aeaa",
    "prId" : 34811,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/34811#pullrequestreview-7352840",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ad0055c8-ce29-4908-a94c-837f44a03798",
        "parentId" : null,
        "authorId" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "body" : "Missed FSGroup here, if I'm not mistaken.\n",
        "createdAt" : "2016-11-06T23:07:29Z",
        "updatedAt" : "2016-11-07T03:41:32Z",
        "lastEditedBy" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "tags" : [
        ]
      },
      {
        "id" : "defb9e86-4f1c-493e-90c4-c0c028608769",
        "parentId" : "ad0055c8-ce29-4908-a94c-837f44a03798",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "ack\n",
        "createdAt" : "2016-11-07T03:26:12Z",
        "updatedAt" : "2016-11-07T03:41:32Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      }
    ],
    "commit" : "f8e5f81fedd5243b9d7f690a9c0738794db15899",
    "line" : null,
    "diffHunk" : "@@ -1,1 +153,157 @@\t\t\tlc.SecurityContext.SupplementalGroups = append(lc.SecurityContext.SupplementalGroups, *sc.FSGroup)\n\t\t}\n\t\tif groups := m.runtimeHelper.GetExtraSupplementalGroupsForPod(pod); len(groups) > 0 {\n\t\t\tlc.SecurityContext.SupplementalGroups = append(lc.SecurityContext.SupplementalGroups, groups...)\n\t\t}"
  },
  {
    "id" : "3a301efc-c1a0-4306-a8bc-131ec1570eaf",
    "prId" : 31847,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/31847#pullrequestreview-73959",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1f71c20f-d34b-4139-9db8-17e5b81a3b12",
        "parentId" : null,
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "IIUC, `GenerateRunContainerOptions` does a lot of things, but the only thing useful here is generating port name. https://github.com/kubernetes/kubernetes/blob/master/pkg/kubelet/kubelet.go#L1294-L1321\n\nI think we should use a separate function to do this in the future, so that this will be less misleading.\n\n@yujuhong BTW, I found that the port name we passed to runtime is also a composed name `container.Name-p.Name` or `container.Name-p.Protocol-p.ContainerPort`, we may want to do something special to parse the name if we are going to use it in the future.\n",
        "createdAt" : "2016-09-14T18:26:03Z",
        "updatedAt" : "2016-09-15T15:32:52Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      },
      {
        "id" : "7daeef59-6c6b-4014-9fa7-63902b12db33",
        "parentId" : "1f71c20f-d34b-4139-9db8-17e5b81a3b12",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "will add a todo for this. Do we deal the port name somewhere in today's docker runtime?\n",
        "createdAt" : "2016-09-15T00:13:43Z",
        "updatedAt" : "2016-09-15T15:32:52Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      }
    ],
    "commit" : "d65309399a228bd0c085f5e0d1ce93d558aebfaa",
    "line" : null,
    "diffHunk" : "@@ -1,1 +86,90 @@\tfor _, c := range pod.Spec.Containers {\n\t\t// TODO: use a separate interface to only generate portmappings\n\t\topts, err := m.runtimeHelper.GenerateRunContainerOptions(pod, &c, \"\")\n\t\tif err != nil {\n\t\t\treturn nil, err"
  },
  {
    "id" : "eea8ae8c-178d-42c8-a662-f1956f8f3f09",
    "prId" : 30121,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4980881a-392e-4ddc-903b-dd46f21b3cf7",
        "parentId" : null,
        "authorId" : "0d2d9977-2328-4ade-b6a6-ba60c2dd5bd5",
        "body" : "not sure what's the intention here, only one cgroupParent is being used while others are being overwritten\n",
        "createdAt" : "2016-08-10T08:56:43Z",
        "updatedAt" : "2016-08-22T03:01:09Z",
        "lastEditedBy" : "0d2d9977-2328-4ade-b6a6-ba60c2dd5bd5",
        "tags" : [
        ]
      },
      {
        "id" : "2fdf3fa4-cd2f-4105-9e66-b5169d4bc5d6",
        "parentId" : "4980881a-392e-4ddc-903b-dd46f21b3cf7",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "@tmrts  Thanks. This commit is part of #30083, already added a todo to refactor this to pod-level in #30083.\n",
        "createdAt" : "2016-08-10T09:21:28Z",
        "updatedAt" : "2016-08-22T03:01:09Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      }
    ],
    "commit" : "e3e10ddf8a972076bf5b62d3c333bc7a4ce826bb",
    "line" : null,
    "diffHunk" : "@@ -1,1 +75,79 @@\n\t\t// TODO: refactor kubelet to get cgroup parent for pod instead of containers\n\t\tcgroupParent = opts.CgroupParent\n\t}\n\tpodSandboxConfig.Linux = generatePodSandboxLinuxConfig(pod, cgroupParent)"
  },
  {
    "id" : "b4b19aea-943d-433e-a0a2-0ba203462774",
    "prId" : 30083,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8babac0a-8f3a-41df-a3b1-230a109e2316",
        "parentId" : null,
        "authorId" : "2fa5a4c6-e0a7-4dbe-a80e-7770a5dc92a1",
        "body" : "`cgroupParent` really is a pod-level attribute, not container level. It probably shouldn't come from `GenerateRunContainerOptions` at all.\n",
        "createdAt" : "2016-08-10T00:17:50Z",
        "updatedAt" : "2016-08-12T04:22:41Z",
        "lastEditedBy" : "2fa5a4c6-e0a7-4dbe-a80e-7770a5dc92a1",
        "tags" : [
        ]
      },
      {
        "id" : "ce0352aa-8906-41e1-920c-2387855b24bc",
        "parentId" : "8babac0a-8f3a-41df-a3b1-230a109e2316",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "Y, leaved a todo for this.\n",
        "createdAt" : "2016-08-10T02:44:21Z",
        "updatedAt" : "2016-08-12T04:22:41Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      }
    ],
    "commit" : "3512975c31f410aec6ecea8734046bff1aa5a136",
    "line" : null,
    "diffHunk" : "@@ -1,1 +74,78 @@\n\t\t// TODO: refactor kubelet to get cgroup parent for pod instead of containers\n\t\tcgroupParent = opts.CgroupParent\n\t}\n\tpodSandboxConfig.Linux = generatePodSandboxLinuxConfig(pod, cgroupParent)"
  },
  {
    "id" : "790f37d5-738e-47a9-b164-444c30566e6e",
    "prId" : 30083,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "72db0f7f-597f-401d-84a0-3c832752c03e",
        "parentId" : null,
        "authorId" : "2fa5a4c6-e0a7-4dbe-a80e-7770a5dc92a1",
        "body" : "HostIp and Name need to be copied, right?\n",
        "createdAt" : "2016-08-10T00:49:16Z",
        "updatedAt" : "2016-08-12T04:22:41Z",
        "lastEditedBy" : "2fa5a4c6-e0a7-4dbe-a80e-7770a5dc92a1",
        "tags" : [
        ]
      },
      {
        "id" : "986bc487-6d1c-459b-8541-b26bffba84db",
        "parentId" : "72db0f7f-597f-401d-84a0-3c832752c03e",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "Thanks. Fixed.\n",
        "createdAt" : "2016-08-10T02:46:05Z",
        "updatedAt" : "2016-08-12T04:22:41Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      }
    ],
    "commit" : "3512975c31f410aec6ecea8734046bff1aa5a136",
    "line" : 67,
    "diffHunk" : "@@ -1,1 +65,69 @@\t\t\tprotocol := toRuntimeProtocol(port.Protocol)\n\t\t\tportMappings = append(portMappings, &runtimeApi.PortMapping{\n\t\t\t\tHostIp:        &port.HostIP,\n\t\t\t\tHostPort:      &hostPort,\n\t\t\t\tContainerPort: &containerPort,"
  },
  {
    "id" : "690b6628-6344-487b-a077-7ba453f3e300",
    "prId" : 30083,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "39d732e8-40da-49ef-bcce-ed556b97530a",
        "parentId" : null,
        "authorId" : "227eb550-8b08-4420-9a78-279f840bd8de",
        "body" : "Same question as the container name construction above.\n",
        "createdAt" : "2016-08-10T23:44:43Z",
        "updatedAt" : "2016-08-12T04:22:41Z",
        "lastEditedBy" : "227eb550-8b08-4420-9a78-279f840bd8de",
        "tags" : [
        ]
      }
    ],
    "commit" : "3512975c31f410aec6ecea8734046bff1aa5a136",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +25,29 @@// generatePodSandboxConfig generates pod sandbox config from api.Pod.\nfunc (m *kubeGenericRuntimeManager) generatePodSandboxConfig(pod *api.Pod, podIP string) (*runtimeApi.PodSandboxConfig, error) {\n\tsandboxName := buildSandboxName(pod)\n\t// TODO: deprecating podsandbox resource requirements in favor of the pod level cgroup\n\t// Refer https://github.com/kubernetes/kubernetes/issues/29871"
  }
]