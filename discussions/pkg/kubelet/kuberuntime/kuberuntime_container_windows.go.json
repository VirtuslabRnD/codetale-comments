[
  {
    "id" : "185f9f2b-5074-401d-9535-3137adfd8541",
    "prId" : 93475,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/93475#pullrequestreview-458418018",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9fba2833-49dd-4b31-a899-5986dd048322",
        "parentId" : null,
        "authorId" : "98986d5f-c846-4478-8363-8a016e3d6b89",
        "body" : "I don't get why the stripping of the fields from `effectiveSc` below is necessary. The Windows container config, `wc` (returned by this function, `generateWindowsContainerConfig`) does not get populated with the fields that are being stripped below from `effectiveSc`. The only two fields that `wc` gets populated with from `effectiveSc` is [CredentialSpec](https://github.com/kubernetes/kubernetes/blob/master/pkg/kubelet/kuberuntime/kuberuntime_container_windows.go#L138) and [RunAsUsername](https://github.com/kubernetes/kubernetes/blob/master/pkg/kubelet/kuberuntime/kuberuntime_container_windows.go#L143). So does it matter what the fields other than `WindowsOptions` in `effectiveSc` is?",
        "createdAt" : "2020-07-30T07:58:19Z",
        "updatedAt" : "2020-08-04T03:44:06Z",
        "lastEditedBy" : "98986d5f-c846-4478-8363-8a016e3d6b89",
        "tags" : [
        ]
      },
      {
        "id" : "256873ac-f6dd-4e91-b0db-cec936e4e345",
        "parentId" : "9fba2833-49dd-4b31-a899-5986dd048322",
        "authorId" : "38ca4f80-c365-4775-8981-1e56b713b07b",
        "body" : "You're right. The only fields we need are `CredentialSpec` and `RunAsUserName` but when I was testing locally, I noticed that we're having guards to return for [example](https://github.com/kubernetes/kubernetes/pull/93475/files#diff-4d8e81d13b02ca9a4b8919ef8cf8b6f9L130), so I thought it was pattern I need to follow and instead of returning, I am setting every value to `nil`.",
        "createdAt" : "2020-07-30T13:56:10Z",
        "updatedAt" : "2020-08-04T03:44:06Z",
        "lastEditedBy" : "38ca4f80-c365-4775-8981-1e56b713b07b",
        "tags" : [
        ]
      }
    ],
    "commit" : "cd8686bc57fe2a1e5fcf4b1c0bb82419125ab4d1",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +125,129 @@\t// setup security context\n\teffectiveSc := securitycontext.DetermineEffectiveSecurityContext(pod, container)\n\n\tif username != \"\" {\n\t\twc.SecurityContext.RunAsUsername = username"
  },
  {
    "id" : "ab61be92-4b6a-454b-9ac3-0e991def20ff",
    "prId" : 86101,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/86101#pullrequestreview-352587046",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "764361bc-c4b7-4fa5-9716-2cc8906cb1df",
        "parentId" : null,
        "authorId" : "c666776f-f3a4-4854-9679-2638da5217ce",
        "body" : "The actual situation `NanoCpus` should have nothing to do with the number of` cpu`, its correct calculation method should be like this `NanoCpus  = cpuLimit.MilliValue() * (1e9 / 10000)`\r\n\r\nI have a question is, does it seem that `CpuMaximum` means the same as` NanoCpus`?\r\nThe moby code :\r\nhttps://github.com/moby/moby/blob/2d467dc8d00790da8f4f8d1c0ab3ed7811b7958f/daemon/oci_windows.go#L413-L432\r\n\r\n`NanoCpus` in docker is an unprocessed raw value, not` CpuMaximum` after calculation here\r\ndocker and containerd do not handle this parameter in the same way",
        "createdAt" : "2019-12-11T03:03:15Z",
        "updatedAt" : "2020-02-24T19:53:40Z",
        "lastEditedBy" : "c666776f-f3a4-4854-9679-2638da5217ce",
        "tags" : [
        ]
      },
      {
        "id" : "d8dd5988-4a01-4b5d-a390-322c911520a2",
        "parentId" : "764361bc-c4b7-4fa5-9716-2cc8906cb1df",
        "authorId" : "a1a1c8af-e8d1-473f-b2b9-b14426320bcb",
        "body" : "Good catch! I should have read my own comments again.\r\n\r\nThe original container limit isn't available in Dockershim, just the CRI representation (CpuMaximum). This will be a good discussion point with @jterry75 and @Random-Liu on if CRI-API should be using units that are relative to the node's core count (CpuMaximum), or absolute (NanoCPUs).\r\n\r\nI think it would be good to clean this up and only support 1 unit of CPU time. CPU Cores may still be needed later for Hyper-V so I'm hesitant to remove that.",
        "createdAt" : "2019-12-11T20:03:43Z",
        "updatedAt" : "2020-02-24T19:53:40Z",
        "lastEditedBy" : "a1a1c8af-e8d1-473f-b2b9-b14426320bcb",
        "tags" : [
        ]
      },
      {
        "id" : "0b71677f-8822-4b04-af50-655681f52a4b",
        "parentId" : "764361bc-c4b7-4fa5-9716-2cc8906cb1df",
        "authorId" : "cb15d1b0-1d9f-432b-81d8-e7a613c4a3b2",
        "body" : "Not sure I understand. CRI very clearly defines this as \"count\". So its full cpu's relative to the nodes core count. What is CRI doing wrong?",
        "createdAt" : "2019-12-11T20:19:46Z",
        "updatedAt" : "2020-02-24T19:53:40Z",
        "lastEditedBy" : "cb15d1b0-1d9f-432b-81d8-e7a613c4a3b2",
        "tags" : [
        ]
      },
      {
        "id" : "7f81013c-7229-4a9a-be51-92c540d8c903",
        "parentId" : "764361bc-c4b7-4fa5-9716-2cc8906cb1df",
        "authorId" : "c666776f-f3a4-4854-9679-2638da5217ce",
        "body" : "@jterry75 cpucount cannot precisely control cpulimit, it can only be limited to an integer number of cpu",
        "createdAt" : "2019-12-11T22:44:34Z",
        "updatedAt" : "2020-02-24T19:53:40Z",
        "lastEditedBy" : "c666776f-f3a4-4854-9679-2638da5217ce",
        "tags" : [
        ]
      },
      {
        "id" : "fca2fed6-3eae-41ff-80c0-0327e99d642c",
        "parentId" : "764361bc-c4b7-4fa5-9716-2cc8906cb1df",
        "authorId" : "c666776f-f3a4-4854-9679-2638da5217ce",
        "body" : "I also have a question, if the `NanoCPUs` passed to Dockershim after this calculation is a corrected value instead of the original value.",
        "createdAt" : "2019-12-11T22:55:47Z",
        "updatedAt" : "2020-02-24T19:53:40Z",
        "lastEditedBy" : "c666776f-f3a4-4854-9679-2638da5217ce",
        "tags" : [
        ]
      },
      {
        "id" : "76e453f6-d0d4-4756-843d-5a7f410fae21",
        "parentId" : "764361bc-c4b7-4fa5-9716-2cc8906cb1df",
        "authorId" : "a1a1c8af-e8d1-473f-b2b9-b14426320bcb",
        "body" : "CpuCount = full cores\r\nCpuMaximum = 1/10000th of the total cores in the node.\r\nNanoCPUs = 1e-9 of a single core",
        "createdAt" : "2019-12-11T23:34:58Z",
        "updatedAt" : "2020-02-24T19:53:40Z",
        "lastEditedBy" : "a1a1c8af-e8d1-473f-b2b9-b14426320bcb",
        "tags" : [
        ]
      },
      {
        "id" : "2a9b74b2-a26e-48c4-a0b7-25d603905cf5",
        "parentId" : "764361bc-c4b7-4fa5-9716-2cc8906cb1df",
        "authorId" : "c666776f-f3a4-4854-9679-2638da5217ce",
        "body" : "This implementation is simpler and more consistent than modifying the CRI 👍 ",
        "createdAt" : "2019-12-11T23:41:31Z",
        "updatedAt" : "2020-02-24T19:53:40Z",
        "lastEditedBy" : "c666776f-f3a4-4854-9679-2638da5217ce",
        "tags" : [
        ]
      },
      {
        "id" : "2521f9e1-c027-4616-95cb-c6c56cbeb253",
        "parentId" : "764361bc-c4b7-4fa5-9716-2cc8906cb1df",
        "authorId" : "cb15d1b0-1d9f-432b-81d8-e7a613c4a3b2",
        "body" : "~@PatrickLang - I think this case is wrong. The hypervisor \"Maximum\" is based on the vCPU scheduler. So for a request of say .5 -> 1 vCPU Limit 50% but a request of 1.25 -> 2 vCPU Limit 62.5%.~\r\n\r\nSorry. I thought this was for the sandbox activation. For the container you need to scale based on sandbox cpu's but otherwise the logic is the same.",
        "createdAt" : "2019-12-12T19:37:45Z",
        "updatedAt" : "2020-02-24T19:53:40Z",
        "lastEditedBy" : "cb15d1b0-1d9f-432b-81d8-e7a613c4a3b2",
        "tags" : [
        ]
      },
      {
        "id" : "3d51638a-afe9-4abd-b507-48c1b4265e64",
        "parentId" : "764361bc-c4b7-4fa5-9716-2cc8906cb1df",
        "authorId" : "a1a1c8af-e8d1-473f-b2b9-b14426320bcb",
        "body" : "Alright - I'm keeping this as-is and added tests.",
        "createdAt" : "2020-01-14T05:05:54Z",
        "updatedAt" : "2020-02-24T19:53:40Z",
        "lastEditedBy" : "a1a1c8af-e8d1-473f-b2b9-b14426320bcb",
        "tags" : [
        ]
      },
      {
        "id" : "07f00ab2-2f28-4ee8-a899-45484bb823c9",
        "parentId" : "764361bc-c4b7-4fa5-9716-2cc8906cb1df",
        "authorId" : "093f4806-3f92-4191-a80b-4e6cf3d6ffc0",
        "body" : "trying to make sure i understand it, so CpuShares is not used anymore (removed), CpuCount is used for HyperV (not for process isolation), CpuMaximum is used for both HyperV and process isolation.\r\n\r\none question: since these three are mutually exclusive, then for hyperV case, what is the point of setting both CpuCount and CpuMaximum?",
        "createdAt" : "2020-01-31T23:20:01Z",
        "updatedAt" : "2020-02-24T19:53:40Z",
        "lastEditedBy" : "093f4806-3f92-4191-a80b-4e6cf3d6ffc0",
        "tags" : [
        ]
      },
      {
        "id" : "0ce2a2f8-1472-4fbf-b232-1463bb1227e6",
        "parentId" : "764361bc-c4b7-4fa5-9716-2cc8906cb1df",
        "authorId" : "a1a1c8af-e8d1-473f-b2b9-b14426320bcb",
        "body" : "Hyper-V still needs a CPU count because it could for example give 2 cores, but throttle each to 50%.\r\n\r\nHyper-V support in k8s needs a redesign - this code is not covered in automated tests and I don't think it works. I'll probably delete it in a separate PR as I'm trying to keep this one narrowly-scoped so it can be backported.",
        "createdAt" : "2020-02-03T21:48:43Z",
        "updatedAt" : "2020-02-24T19:53:40Z",
        "lastEditedBy" : "a1a1c8af-e8d1-473f-b2b9-b14426320bcb",
        "tags" : [
        ]
      }
    ],
    "commit" : "886214f48c6141fa220a248149e51837c8fa2fa5",
    "line" : 45,
    "diffHunk" : "@@ -1,1 +105,109 @@\t\t}\n\n\t\twc.Resources.CpuMaximum = cpuMaximum\n\t}\n"
  },
  {
    "id" : "1a051dc8-e8d7-471b-8726-988c6356544f",
    "prId" : 85856,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/85856#pullrequestreview-353985419",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "52205b6e-d2bb-4ce1-9482-fb31557a95f7",
        "parentId" : null,
        "authorId" : "cb15d1b0-1d9f-432b-81d8-e7a613c4a3b2",
        "body" : "NIT: extra line",
        "createdAt" : "2019-12-03T18:01:35Z",
        "updatedAt" : "2019-12-04T17:32:45Z",
        "lastEditedBy" : "cb15d1b0-1d9f-432b-81d8-e7a613c4a3b2",
        "tags" : [
        ]
      },
      {
        "id" : "e5e872ff-d143-4248-b828-4fdb935893de",
        "parentId" : "52205b6e-d2bb-4ce1-9482-fb31557a95f7",
        "authorId" : "58bc75e8-3e3a-4886-9e21-1ba7d55d97ca",
        "body" : "Done",
        "createdAt" : "2019-12-04T17:32:37Z",
        "updatedAt" : "2019-12-04T17:32:45Z",
        "lastEditedBy" : "58bc75e8-3e3a-4886-9e21-1ba7d55d97ca",
        "tags" : [
        ]
      },
      {
        "id" : "ad219306-e08b-45bd-bd18-9e0721e5fdba",
        "parentId" : "52205b6e-d2bb-4ce1-9482-fb31557a95f7",
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "It seems that this is not addressed.",
        "createdAt" : "2020-02-05T19:34:33Z",
        "updatedAt" : "2020-02-05T19:34:35Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      }
    ],
    "commit" : "bc7d254317cf64b64d29c05862c88d0da6c84474",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +103,107 @@\t\t\t\tklog.Warningf(\"Mutually exclusive options: CPUShares priority > CPUMaximum priority on Windows Server Containers. CPUMaximum should be ignored\")\n\t\t\t}\n\n\t\t}\n\t}"
  },
  {
    "id" : "fa0996d4-bf75-4fc7-bc8a-b8e015245597",
    "prId" : 73726,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/73726#pullrequestreview-200127058",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d613986c-83e1-43ad-874c-27b90eac00c1",
        "parentId" : null,
        "authorId" : "98986d5f-c846-4478-8363-8a016e3d6b89",
        "body" : "Is the `delete` needed here because `config` may be reused and it's better to be safe?",
        "createdAt" : "2019-02-05T02:39:15Z",
        "updatedAt" : "2019-02-26T03:02:16Z",
        "lastEditedBy" : "98986d5f-c846-4478-8363-8a016e3d6b89",
        "tags" : [
        ]
      },
      {
        "id" : "ae484f74-31a7-48cd-85dc-11805b185985",
        "parentId" : "d613986c-83e1-43ad-874c-27b90eac00c1",
        "authorId" : "01246cf1-b4e0-4cdd-818b-da86865d11bd",
        "body" : "Yes. Adding a comment to this effect.",
        "createdAt" : "2019-02-05T17:10:43Z",
        "updatedAt" : "2019-02-26T03:02:16Z",
        "lastEditedBy" : "01246cf1-b4e0-4cdd-818b-da86865d11bd",
        "tags" : [
        ]
      }
    ],
    "commit" : "0d392ffcef42ccf4f975f97e6a5e65a9ea99fa11",
    "line" : 58,
    "diffHunk" : "@@ -1,1 +138,142 @@\t\t// the annotation shouldn't be present, but let's err on the side of caution:\n\t\t// it should only be set here and nowhere else\n\t\tdelete(config.Annotations, GMSASpecContainerAnnotationKey)\n\t}\n}"
  }
]