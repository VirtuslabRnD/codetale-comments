[
  {
    "id" : "6026f786-9056-4c1d-80f4-2bd398fa2270",
    "prId" : 100196,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/100196#pullrequestreview-612578847",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e2275838-c1d7-4813-a554-e5e4016da900",
        "parentId" : null,
        "authorId" : "c4fff1f4-0021-4f1f-a538-7ada97206ed5",
        "body" : "```suggestion\r\n\t\t\t\tklog.ErrorS(err, \"Failed to remove pod logs directory\", \"path\", filepath.Join(podLogsRootDirectory, name))\r\n```",
        "createdAt" : "2021-03-15T07:16:15Z",
        "updatedAt" : "2021-03-15T19:40:00Z",
        "lastEditedBy" : "c4fff1f4-0021-4f1f-a538-7ada97206ed5",
        "tags" : [
        ]
      },
      {
        "id" : "cc8f0355-1201-4252-838b-189f22183fd8",
        "parentId" : "e2275838-c1d7-4813-a554-e5e4016da900",
        "authorId" : "c4fff1f4-0021-4f1f-a538-7ada97206ed5",
        "body" : "not required to change given the scope of this PR, but just a suggestion to log abs path",
        "createdAt" : "2021-03-15T07:25:03Z",
        "updatedAt" : "2021-03-15T19:40:00Z",
        "lastEditedBy" : "c4fff1f4-0021-4f1f-a538-7ada97206ed5",
        "tags" : [
        ]
      },
      {
        "id" : "eaa8f2fd-6348-4eba-a1bc-7b1414aa65cf",
        "parentId" : "e2275838-c1d7-4813-a554-e5e4016da900",
        "authorId" : "31a2ac00-6c67-4307-a4bc-bfd13f41ef27",
        "body" : "It's possible the `err` is due to that call failing? So I don't know that we should do that, but we could add a keypair with the root directory in the future.",
        "createdAt" : "2021-03-15T19:41:09Z",
        "updatedAt" : "2021-03-15T19:41:09Z",
        "lastEditedBy" : "31a2ac00-6c67-4307-a4bc-bfd13f41ef27",
        "tags" : [
        ]
      }
    ],
    "commit" : "ee0bcac1d2b5a21a19da7f93de513214cdc51cd3",
    "line" : 40,
    "diffHunk" : "@@ -1,1 +343,347 @@\t\t\terr := osInterface.RemoveAll(filepath.Join(podLogsRootDirectory, name))\n\t\t\tif err != nil {\n\t\t\t\tklog.ErrorS(err, \"Failed to remove pod logs directory\", \"path\", name)\n\t\t\t}\n\t\t}"
  },
  {
    "id" : "f1bcb72e-2445-47af-b52c-191ee3abd430",
    "prId" : 89160,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/89160#pullrequestreview-393325465",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "81bd2c7a-6283-43a0-8124-e23ae68a49fa",
        "parentId" : null,
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "It is my bad, sorry. Feel free to change back to `ContainerStatus`, which is cleaner here.",
        "createdAt" : "2020-04-14T22:00:02Z",
        "updatedAt" : "2020-04-21T19:31:06Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      }
    ],
    "commit" : "18e9f33fc64814d393d1fc97dfaf5b1d0babf443",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +357,361 @@\tfor _, logSymlink := range logSymlinks {\n\t\tif _, err := osInterface.Stat(logSymlink); os.IsNotExist(err) {\n\t\t\tif containerID, err := getContainerIDFromLegacyLogSymlink(logSymlink); err == nil {\n\t\t\t\tstatus, err := cgc.manager.runtimeService.ContainerStatus(containerID)\n\t\t\t\tif err != nil {"
  },
  {
    "id" : "806e8072-20c4-4139-be06-b1043772d6f5",
    "prId" : 89160,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/89160#pullrequestreview-397605683",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b51a6bc6-ac58-4ffa-b624-d6d9115ef92f",
        "parentId" : null,
        "authorId" : "d2b16581-e7e9-48b8-9f76-6f6bcb9ec300",
        "body" : "nit: This is fairly deeply nested.  You should consider reducing this by replacing:\r\n```golang\r\nif err := ...; err == nil {\r\n        // do things\r\n} else {\r\n        klog\r\n}\r\n```\r\nwith \r\n```golang\r\nerr := ...\r\nif err != nil {\r\n        klog\r\n        continue\r\n}\r\n// do things\r\n```\r\n\r\nHere and below.  It also moves error handling closer to the call that generates the error",
        "createdAt" : "2020-04-21T18:53:47Z",
        "updatedAt" : "2020-04-21T19:31:06Z",
        "lastEditedBy" : "d2b16581-e7e9-48b8-9f76-6f6bcb9ec300",
        "tags" : [
        ]
      },
      {
        "id" : "6de8fc01-7401-4f3f-8c17-6294dd7b5662",
        "parentId" : "b51a6bc6-ac58-4ffa-b624-d6d9115ef92f",
        "authorId" : "d2b16581-e7e9-48b8-9f76-6f6bcb9ec300",
        "body" : "Looks like you did it below, but not on this line.",
        "createdAt" : "2020-04-21T19:12:41Z",
        "updatedAt" : "2020-04-21T19:31:06Z",
        "lastEditedBy" : "d2b16581-e7e9-48b8-9f76-6f6bcb9ec300",
        "tags" : [
        ]
      },
      {
        "id" : "8a377161-d060-4413-b16f-84fbacb187e3",
        "parentId" : "b51a6bc6-ac58-4ffa-b624-d6d9115ef92f",
        "authorId" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "body" : "It would be very rare that log filename for container cannot be parsed (I have relaxed the length for container Id requirement by 64-6 = 58 characters).\r\nIf short container Id cannot be obtained, the file should be allowed to be GC'ed.\r\nSo switching the if / else wouldn't yield change in indentation.",
        "createdAt" : "2020-04-21T19:22:27Z",
        "updatedAt" : "2020-04-21T19:31:06Z",
        "lastEditedBy" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "18e9f33fc64814d393d1fc97dfaf5b1d0babf443",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +357,361 @@\tfor _, logSymlink := range logSymlinks {\n\t\tif _, err := osInterface.Stat(logSymlink); os.IsNotExist(err) {\n\t\t\tif containerID, err := getContainerIDFromLegacyLogSymlink(logSymlink); err == nil {\n\t\t\t\tstatus, err := cgc.manager.runtimeService.ContainerStatus(containerID)\n\t\t\t\tif err != nil {"
  },
  {
    "id" : "2a6e1b0c-362f-4d00-b6ef-d92f4641885f",
    "prId" : 89160,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/89160#pullrequestreview-397611864",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a32323d9-1059-4088-a012-76dd354ae56f",
        "parentId" : null,
        "authorId" : "d2b16581-e7e9-48b8-9f76-6f6bcb9ec300",
        "body" : "This means if we can't get the container status (e.g. container runtime is down), then we remove the symlink.  Does this re-introduce the bug you were trying to fix?",
        "createdAt" : "2020-04-21T19:12:29Z",
        "updatedAt" : "2020-04-21T19:31:06Z",
        "lastEditedBy" : "d2b16581-e7e9-48b8-9f76-6f6bcb9ec300",
        "tags" : [
        ]
      },
      {
        "id" : "1154e902-854c-48af-ad08-90a6f53cfeb1",
        "parentId" : "a32323d9-1059-4088-a012-76dd354ae56f",
        "authorId" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "body" : "runtimeService.ContainerStatus() returning error, in most cases, means that the container is gone.\r\nWe should treat such error the same as State == runtimeapi.ContainerState_CONTAINER_EXITED.",
        "createdAt" : "2020-04-21T19:18:24Z",
        "updatedAt" : "2020-04-21T19:31:06Z",
        "lastEditedBy" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "tags" : [
        ]
      },
      {
        "id" : "255885a8-60c7-4809-9f89-4592afbb91f5",
        "parentId" : "a32323d9-1059-4088-a012-76dd354ae56f",
        "authorId" : "d2b16581-e7e9-48b8-9f76-6f6bcb9ec300",
        "body" : "Ah, right.  Can you add a TODO saying that we should handle container not found (i.e. container was deleted) differently from other errors once we have https://github.com/kubernetes/kubernetes/issues/63336",
        "createdAt" : "2020-04-21T19:26:51Z",
        "updatedAt" : "2020-04-21T19:31:06Z",
        "lastEditedBy" : "d2b16581-e7e9-48b8-9f76-6f6bcb9ec300",
        "tags" : [
        ]
      },
      {
        "id" : "bf0f08e0-d8c9-41ea-8a12-6a04796f8c96",
        "parentId" : "a32323d9-1059-4088-a012-76dd354ae56f",
        "authorId" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "body" : "@dashpole \r\nI have added the TODO",
        "createdAt" : "2020-04-21T19:31:21Z",
        "updatedAt" : "2020-04-21T19:31:21Z",
        "lastEditedBy" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "18e9f33fc64814d393d1fc97dfaf5b1d0babf443",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +362,366 @@\t\t\t\t\t// TODO: we should handle container not found (i.e. container was deleted) case differently\n\t\t\t\t\t// once https://github.com/kubernetes/kubernetes/issues/63336 is resolved\n\t\t\t\t\tklog.Infof(\"Error getting ContainerStatus for containerID %q: %v\", containerID, err)\n\t\t\t\t} else if status.State != runtimeapi.ContainerState_CONTAINER_EXITED {\n\t\t\t\t\t// Here is how container log rotation works (see containerLogManager#rotateLatestLog):"
  },
  {
    "id" : "2004ebab-3773-4862-8363-1086184cc366",
    "prId" : 89160,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/89160#pullrequestreview-401933399",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0f821701-cdc6-47c3-90e7-ebcbb568fde7",
        "parentId" : null,
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "%q",
        "createdAt" : "2020-04-28T15:08:05Z",
        "updatedAt" : "2020-04-28T15:09:43Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      }
    ],
    "commit" : "18e9f33fc64814d393d1fc97dfaf5b1d0babf443",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +385,389 @@\t\t\t\tklog.Errorf(\"Failed to remove container log dead symlink %q: %v\", logSymlink, err)\n\t\t\t} else {\n\t\t\t\tklog.V(4).Infof(\"removed symlink %s\", logSymlink)\n\t\t\t}\n\t\t}"
  },
  {
    "id" : "ea13ae58-e861-4d47-82e5-8bd6e4507a1f",
    "prId" : 74220,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/74220#pullrequestreview-223045695",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "36d62afa-13af-4ab1-a942-59a04a539367",
        "parentId" : null,
        "authorId" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "body" : "nit: prefer `var errors []error`, since it doesn't allocate a slice when there aren't anymore errors (not sure if the go compiler is smart enough to optimize this away yet)",
        "createdAt" : "2019-04-04T23:21:17Z",
        "updatedAt" : "2019-04-04T23:21:45Z",
        "lastEditedBy" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "tags" : [
        ]
      }
    ],
    "commit" : "dae6950f04b1aa4ef670e8af8a4b7e18387325ea",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +377,381 @@// * removes evictable sandboxes.\nfunc (cgc *containerGC) GarbageCollect(gcPolicy kubecontainer.ContainerGCPolicy, allSourcesReady bool, evictTerminatedPods bool) error {\n\terrors := []error{}\n\t// Remove evictable containers\n\tif err := cgc.evictContainers(gcPolicy, allSourcesReady, evictTerminatedPods); err != nil {"
  },
  {
    "id" : "808bed04-e461-4e5f-a65b-2582bb891709",
    "prId" : 43053,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/43053#pullrequestreview-35944888",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5ed215f3-f722-445d-8436-ce29022ef466",
        "parentId" : null,
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "Is this `oldest to newest`? Seems to be newest to oldest...\r\n\r\nAnd also the same question for the container remove function.",
        "createdAt" : "2017-05-03T05:47:25Z",
        "updatedAt" : "2017-05-03T06:29:32Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      },
      {
        "id" : "2bb1b2e4-b205-4062-9d3f-f53edcc2951a",
        "parentId" : "5ed215f3-f722-445d-8436-ce29022ef466",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "ACK. Would fix this.",
        "createdAt" : "2017-05-03T06:14:08Z",
        "updatedAt" : "2017-05-03T06:29:32Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      }
    ],
    "commit" : "1c593bd62caf9f8e67be0c4790913c66f7a06f80",
    "line" : 76,
    "diffHunk" : "@@ -1,1 +136,140 @@// returns the resulting slice.\nfunc (cgc *containerGC) removeOldestNSandboxes(sandboxes []sandboxGCInfo, toRemove int) {\n\t// Remove from oldest to newest (last to first).\n\tnumToKeep := len(sandboxes) - toRemove\n\tfor i := len(sandboxes) - 1; i >= numToKeep; i-- {"
  },
  {
    "id" : "00f77c29-78b6-4171-9632-1bd2c120e122",
    "prId" : 36112,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/36112#pullrequestreview-7114783",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ce448b61-4311-4abe-b562-70dc1d96e1cf",
        "parentId" : null,
        "authorId" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "body" : "suggest providing an example of when exactly this might be required, so it doesn't sound like we're just throwing calls in to be doubly and triply sure\n",
        "createdAt" : "2016-11-03T02:00:26Z",
        "updatedAt" : "2016-11-03T21:11:27Z",
        "lastEditedBy" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "tags" : [
        ]
      },
      {
        "id" : "5e4aa297-50fb-40ce-b4f6-5f31a6430152",
        "parentId" : "ce448b61-4311-4abe-b562-70dc1d96e1cf",
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "I expanded the explanation, but didn't provide a concrete example on purpose. I think the concrete examples involves too much runtime implementation details (which is not universal), the inner workings of kubernetes (which can change anytime). \n",
        "createdAt" : "2016-11-03T19:21:54Z",
        "updatedAt" : "2016-11-03T21:11:27Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "ad003566-dc7c-43d4-bdc6-eee757f87ffe",
        "parentId" : "ce448b61-4311-4abe-b562-70dc1d96e1cf",
        "authorId" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "body" : "how often do we gc by default? \n",
        "createdAt" : "2016-11-03T21:15:57Z",
        "updatedAt" : "2016-11-03T21:15:57Z",
        "lastEditedBy" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "tags" : [
        ]
      },
      {
        "id" : "a4b48c7b-f626-4bbc-8603-b243fd60568b",
        "parentId" : "ce448b61-4311-4abe-b562-70dc1d96e1cf",
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "1 min https://github.com/kubernetes/kubernetes/blob/master/pkg/kubelet/kubelet.go#L143\n",
        "createdAt" : "2016-11-03T22:12:26Z",
        "updatedAt" : "2016-11-03T22:12:45Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      }
    ],
    "commit" : "faae51a14a317873939ebe3cf56285361818689f",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +133,137 @@\tglog.V(4).Infof(\"Removing sandbox %q\", sandboxID)\n\t// In normal cases, kubelet should've already called StopPodSandbox before\n\t// GC kicks in. To guard against the rare cases where this is not true, try\n\t// stopping the sandbox before removing it.\n\tif err := cgc.client.StopPodSandbox(sandboxID); err != nil {"
  },
  {
    "id" : "66f636a9-8032-4dfc-8cbf-1a02cde92b68",
    "prId" : 35018,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/35018#pullrequestreview-4801329",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e3d664eb-fa3b-4ba8-bab7-b8957a08a0e0",
        "parentId" : null,
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "calls `evictContainers` here?\n",
        "createdAt" : "2016-10-18T08:37:58Z",
        "updatedAt" : "2016-10-24T07:04:19Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      },
      {
        "id" : "77130041-c9d2-4086-9060-98635d90e5ff",
        "parentId" : "e3d664eb-fa3b-4ba8-bab7-b8957a08a0e0",
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "ACK.\n",
        "createdAt" : "2016-10-19T04:17:05Z",
        "updatedAt" : "2016-10-24T07:04:19Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      }
    ],
    "commit" : "0655ae56bb7dd3af38f22609dc8ab83c9772cb2b",
    "line" : null,
    "diffHunk" : "@@ -1,1 +330,334 @@// * removes evictable sandboxes.\nfunc (cgc *containerGC) GarbageCollect(gcPolicy kubecontainer.ContainerGCPolicy, allSourcesReady bool) error {\n\t// Remove evictable containers\n\tif err := cgc.evictContainers(gcPolicy, allSourcesReady); err != nil {\n\t\treturn err"
  },
  {
    "id" : "24c7212a-3c51-4ddf-8406-0af7f7337274",
    "prId" : 34287,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/34287#pullrequestreview-3270491",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "95b9f783-5f4c-4902-b8a5-19368c9d4c31",
        "parentId" : null,
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "How `30 seconds` is got from? It's better to make `SandboxMinGCAge` be part of `kubecontainer.ContainerGCPolicy`, in case some runtimes indeeds takes longer time.\n",
        "createdAt" : "2016-10-07T09:12:17Z",
        "updatedAt" : "2016-10-07T21:10:36Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      },
      {
        "id" : "aaf058d6-3d72-409d-9618-c1b03d3fd3a1",
        "parentId" : "95b9f783-5f4c-4902-b8a5-19368c9d4c31",
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "I'm not sure whether we want to make it configurable for now.\n30*seconds = 1/2 \\* [`ContainerGCPeriod`](https://github.com/kubernetes/kubernetes/blob/master/pkg/kubelet/kubelet.go#L141)\n",
        "createdAt" : "2016-10-07T09:30:46Z",
        "updatedAt" : "2016-10-07T21:10:36Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      }
    ],
    "commit" : "08aedca12ea07d745e2b1150437af30e7f2c9978",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +40,44 @@//     gc     gc     gc    gc\n//      oooooo|oooxxx|xxxxxx|  <--- MinAge = 1/2 GC Perod\nconst sandboxMinGCAge time.Duration = 30 * time.Second\n\n// containerGC is the manager of garbage collection."
  },
  {
    "id" : "2b2863ce-ae99-48eb-9b1b-eeff0fcaa3f6",
    "prId" : 31326,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8febd8b1-0ad5-4d15-8acd-93559fdc36d0",
        "parentId" : null,
        "authorId" : "0d2d9977-2328-4ade-b6a6-ba60c2dd5bd5",
        "body" : "use time.Sub\n",
        "createdAt" : "2016-08-31T14:10:45Z",
        "updatedAt" : "2016-09-14T01:10:00Z",
        "lastEditedBy" : "0d2d9977-2328-4ade-b6a6-ba60c2dd5bd5",
        "tags" : [
        ]
      },
      {
        "id" : "1590e6f1-efbc-41af-9df2-68f3f9a663e8",
        "parentId" : "8febd8b1-0ad5-4d15-8acd-93559fdc36d0",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "`time.Sub` returns `Duration`, while `time.Time` is expected.\n",
        "createdAt" : "2016-08-31T15:12:52Z",
        "updatedAt" : "2016-09-14T01:10:00Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      }
    ],
    "commit" : "f774a68d52da6aeb79cc2a888e2e8bcaa5fc0379",
    "line" : null,
    "diffHunk" : "@@ -1,1 +135,139 @@\n\tevictUnits := make(containersByEvictUnit)\n\tnewestGCTime := time.Now().Add(-minAge)\n\tfor _, container := range containers {\n\t\t// Prune out running containers."
  },
  {
    "id" : "3505b13a-8a66-42ef-a52d-8c33fa5feac1",
    "prId" : 31326,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "73e8398b-50fd-4b90-a396-6764aaa9799f",
        "parentId" : null,
        "authorId" : "227eb550-8b08-4420-9a78-279f840bd8de",
        "body" : "godoc convention: `evictUnit is ....`\n",
        "createdAt" : "2016-09-12T19:05:27Z",
        "updatedAt" : "2016-09-14T01:10:00Z",
        "lastEditedBy" : "227eb550-8b08-4420-9a78-279f840bd8de",
        "tags" : [
        ]
      }
    ],
    "commit" : "f774a68d52da6aeb79cc2a888e2e8bcaa5fc0379",
    "line" : null,
    "diffHunk" : "@@ -1,1 +57,61 @@\n// evictUnit is considered for eviction as units of (UID, container name) pair.\ntype evictUnit struct {\n\t// UID of the pod.\n\tuid types.UID"
  }
]