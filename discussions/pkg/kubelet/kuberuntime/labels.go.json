[
  {
    "id" : "38f17499-2570-4b22-b8ca-333a744188fe",
    "prId" : 99576,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/99576#pullrequestreview-606818637",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2765f951-a9a6-4350-860e-cd47a261daa7",
        "parentId" : null,
        "authorId" : "df90aa6f-4328-4d27-92eb-8f98c90bd8b0",
        "body" : "is formatting off here?",
        "createdAt" : "2021-03-08T19:13:01Z",
        "updatedAt" : "2021-05-04T23:16:43Z",
        "lastEditedBy" : "df90aa6f-4328-4d27-92eb-8f98c90bd8b0",
        "tags" : [
        ]
      },
      {
        "id" : "3824be93-04ed-4be6-bc40-99e80b30cc75",
        "parentId" : "2765f951-a9a6-4350-860e-cd47a261daa7",
        "authorId" : "3966b9fe-a8de-4641-9e7e-947bf0585613",
        "body" : "Nope - I think because I separated this new label with a blank line (similar to lines able this snippet) it resets the justrification.",
        "createdAt" : "2021-03-09T00:01:23Z",
        "updatedAt" : "2021-05-04T23:16:43Z",
        "lastEditedBy" : "3966b9fe-a8de-4641-9e7e-947bf0585613",
        "tags" : [
        ]
      },
      {
        "id" : "9b7d11c5-8ce0-4c61-9851-13b869f6ace3",
        "parentId" : "2765f951-a9a6-4350-860e-cd47a261daa7",
        "authorId" : "3966b9fe-a8de-4641-9e7e-947bf0585613",
        "body" : "Even before my changes the two conts starting with pod were has different spacing.",
        "createdAt" : "2021-03-09T00:02:21Z",
        "updatedAt" : "2021-05-04T23:16:43Z",
        "lastEditedBy" : "3966b9fe-a8de-4641-9e7e-947bf0585613",
        "tags" : [
        ]
      }
    ],
    "commit" : "ae424160bde1a2db4be91c002944d8a3e2165a0e",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +48,52 @@\t// Currently, ContainerD on Windows does not yet fully support HostProcess containers\n\t// but will pass annotations to hcsshim which does have support.\n\twindowsHostProcessContainer = \"microsoft.com/hostprocess-container\"\n)\n"
  },
  {
    "id" : "399337b2-6e18-4ee9-a5d7-7645d1863bfb",
    "prId" : 99576,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/99576#pullrequestreview-663509053",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "edc3acf5-309f-4114-99f8-888558783376",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "a vendor label domain here is surprising... is this the source of this label or is this driving existing behavior elsewhere?",
        "createdAt" : "2021-05-14T14:37:00Z",
        "updatedAt" : "2021-05-14T14:42:55Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "f286eabb-6224-4542-bfbe-5c60313a6410",
        "parentId" : "edc3acf5-309f-4114-99f8-888558783376",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "the comments indicate this is only expected while the feature is in alpha? what's the plan to transition this from an annotation to a field?",
        "createdAt" : "2021-05-14T14:38:06Z",
        "updatedAt" : "2021-05-14T14:42:55Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "eb0b64b1-c331-4b6c-ab8a-f88219c34583",
        "parentId" : "edc3acf5-309f-4114-99f8-888558783376",
        "authorId" : "df90aa6f-4328-4d27-92eb-8f98c90bd8b0",
        "body" : "> a vendor label domain here is surprising... is this the source of this label or is this driving existing behavior elsewhere?\r\n\r\nThe label is used by hcsshim: https://github.com/microsoft/hcsshim/blob/407147a8825c21b2f1f1ef4e53b24b27fb8632fb/internal/oci/uvm.go#L94  \r\n\r\n@dcantah might be able to shed more light on the source\r\n\r\n> the comments indicate this is only expected while the feature is in alpha? what's the plan to transition this from an annotation to a field?\r\n\r\nYes the plan is to integrate this directly into containerd instead of using the annotation.  ",
        "createdAt" : "2021-05-14T22:15:40Z",
        "updatedAt" : "2021-05-14T22:15:40Z",
        "lastEditedBy" : "df90aa6f-4328-4d27-92eb-8f98c90bd8b0",
        "tags" : [
        ]
      },
      {
        "id" : "333d055f-0864-4610-acfe-cfba7612b66f",
        "parentId" : "edc3acf5-309f-4114-99f8-888558783376",
        "authorId" : "5e5598cd-8721-47bb-b4f8-2345b050275c",
        "body" : "I'm not really sure if this is the right place for the annotation/to be setting it. For some background, the plan was if everything went smoothly and we were able to get a mirroring field on the OCI runtime spec for this, to translate the field added in this PR to the new OCI spec field. If the OCI changes fall through, ideally we'd check if the HostProcess field is set on the cri spec and set this annotation in the cri plugin/containerd. \r\n\r\nI think we can probably remove this ",
        "createdAt" : "2021-05-14T22:56:23Z",
        "updatedAt" : "2021-05-14T22:56:23Z",
        "lastEditedBy" : "5e5598cd-8721-47bb-b4f8-2345b050275c",
        "tags" : [
        ]
      },
      {
        "id" : "eac72ba5-cbd2-4f3f-a5c1-9f1bbfe0914c",
        "parentId" : "edc3acf5-309f-4114-99f8-888558783376",
        "authorId" : "5e5598cd-8721-47bb-b4f8-2345b050275c",
        "body" : "Although for Alpha just in case there's any challenges/pushback with adding a change to set these annotations in the cri plugin (I can't see how but just to be safe) I guess it would be alright to keep this, but obviously I'm not the last say here. ",
        "createdAt" : "2021-05-14T23:27:44Z",
        "updatedAt" : "2021-05-17T02:40:38Z",
        "lastEditedBy" : "5e5598cd-8721-47bb-b4f8-2345b050275c",
        "tags" : [
        ]
      },
      {
        "id" : "d92173f2-8fbb-4027-8cd0-c901ed13ccaa",
        "parentId" : "edc3acf5-309f-4114-99f8-888558783376",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "> The label is used by hcsshim: https://github.com/microsoft/hcsshim/blob/407147a8825c21b2f1f1ef4e53b24b27fb8632fb/internal/oci/uvm.go#L94\r\n\r\nIs the kubelet wired directly to hcsshim on windows? if not, setting a label specifically for that runtime is weirdly coupling\r\n\r\n> > what's the plan to transition this from an annotation to a field?\r\n> \r\n> Yes the plan is to integrate this directly into containerd instead of using the annotation.\r\n\r\nI more meant what protects against this code persisting beyond the alpha phase?",
        "createdAt" : "2021-05-19T15:00:45Z",
        "updatedAt" : "2021-05-19T15:00:45Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "f9f10b4e-4cb0-4abc-8448-728740c3b1ca",
        "parentId" : "edc3acf5-309f-4114-99f8-888558783376",
        "authorId" : "df90aa6f-4328-4d27-92eb-8f98c90bd8b0",
        "body" : "> Is the kubelet wired directly to hcsshim on windows? \r\n\r\nNot for containerd, dockershim uses hcsshim directly in some cases but not for starting containers.\r\n\r\n> I more meant what protects against this code persisting beyond the alpha phase?\r\n\r\nThe plan is to remove it when moving to beta.  I don't know exactly the best way to protect against persistence.  Would making it a requirement to remove it for graduation to Beta work?\r\n\r\nOtherwise I agree this is a strange coupling and we could remove the annotations here.  This will require updates to containerd to parse the CRI fields before it could be used (where as with the annotations it is usable with no changes to containerd). Containerd will read from the CRI field and move the value to  the OCI annotations while we are waiting for https://github.com/opencontainers/runtime-spec/pull/1098 to be accepted in the OCI spec.\r\n\r\n",
        "createdAt" : "2021-05-19T15:56:50Z",
        "updatedAt" : "2021-05-19T15:56:50Z",
        "lastEditedBy" : "df90aa6f-4328-4d27-92eb-8f98c90bd8b0",
        "tags" : [
        ]
      },
      {
        "id" : "9ac9a851-8231-4a5f-876c-30a0de9a0820",
        "parentId" : "edc3acf5-309f-4114-99f8-888558783376",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "> Would making it a requirement to remove it for graduation to Beta work?\r\n\r\nyeah, that seems reasonable",
        "createdAt" : "2021-05-19T16:13:37Z",
        "updatedAt" : "2021-05-19T16:13:38Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "a5932b1c-5223-4704-8cf0-0f3be5adfd43",
        "parentId" : "edc3acf5-309f-4114-99f8-888558783376",
        "authorId" : "df90aa6f-4328-4d27-92eb-8f98c90bd8b0",
        "body" : "I've updated the KEP to reflect this: https://github.com/kubernetes/enhancements/pull/2755",
        "createdAt" : "2021-05-19T17:59:18Z",
        "updatedAt" : "2021-05-19T17:59:19Z",
        "lastEditedBy" : "df90aa6f-4328-4d27-92eb-8f98c90bd8b0",
        "tags" : [
        ]
      }
    ],
    "commit" : "ae424160bde1a2db4be91c002944d8a3e2165a0e",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +48,52 @@\t// Currently, ContainerD on Windows does not yet fully support HostProcess containers\n\t// but will pass annotations to hcsshim which does have support.\n\twindowsHostProcessContainer = \"microsoft.com/hostprocess-container\"\n)\n"
  },
  {
    "id" : "eb0ee443-a964-4f3f-b42e-aab7d5d9d1a8",
    "prId" : 99576,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/99576#pullrequestreview-663715039",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "91dd22b4-bbda-4491-b863-98e7bfeb9479",
        "parentId" : null,
        "authorId" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "body" : "I see the discussion that this is temporary label. I think the comment in code will help to highlight this.",
        "createdAt" : "2021-05-19T19:13:06Z",
        "updatedAt" : "2021-05-19T19:13:07Z",
        "lastEditedBy" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "tags" : [
        ]
      },
      {
        "id" : "c5747cb6-d5be-4d58-9eff-a29102131863",
        "parentId" : "91dd22b4-bbda-4491-b863-98e7bfeb9479",
        "authorId" : "df90aa6f-4328-4d27-92eb-8f98c90bd8b0",
        "body" : "added comment",
        "createdAt" : "2021-05-19T22:36:29Z",
        "updatedAt" : "2021-05-19T22:36:29Z",
        "lastEditedBy" : "df90aa6f-4328-4d27-92eb-8f98c90bd8b0",
        "tags" : [
        ]
      }
    ],
    "commit" : "ae424160bde1a2db4be91c002944d8a3e2165a0e",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +48,52 @@\t// Currently, ContainerD on Windows does not yet fully support HostProcess containers\n\t// but will pass annotations to hcsshim which does have support.\n\twindowsHostProcessContainer = \"microsoft.com/hostprocess-container\"\n)\n"
  },
  {
    "id" : "439a1b34-3414-4532-9eb4-346ddb86fbd8",
    "prId" : 45442,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/45442#pullrequestreview-91157857",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7eb2c290-2890-48d6-8491-1bd859db385d",
        "parentId" : null,
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "Do you plan to use the container type as a filter to select containers?\r\nIf not, you could also consider writing it as an annotation.",
        "createdAt" : "2018-01-23T23:04:29Z",
        "updatedAt" : "2018-01-23T23:04:29Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "7335b1af-2ad7-434b-9339-0bc974a6f198",
        "parentId" : "7eb2c290-2890-48d6-8491-1bd859db385d",
        "authorId" : "a82a6b5c-7a5e-4ea3-bc82-c4f922ea88b1",
        "body" : "My plan was to add a ContainerType field to kubecontainer.ContainerStatus since most of the places where I need to reference the type I already have the kubecontainer.PodStatus with its list of ContainerStatuses.\r\n\r\nI won't need to filter by type unless you think we should avoid the new field in kubecontainer.ContainerStatus. I chose a label of annotation because it \"felt\" like a more \"label-y\" thing that someone might want to filter, but it was an arbitrary choice and I'm happy to switch to annotation if you think that's a better fit.",
        "createdAt" : "2018-01-24T12:24:47Z",
        "updatedAt" : "2018-01-24T12:24:47Z",
        "lastEditedBy" : "a82a6b5c-7a5e-4ea3-bc82-c4f922ea88b1",
        "tags" : [
        ]
      }
    ],
    "commit" : "ba6f31a6c60e9bead6947c01e3cddfa6148523c5",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +98,102 @@\n// newContainerLabels creates container labels from v1.Container and v1.Pod.\nfunc newContainerLabels(container *v1.Container, pod *v1.Pod, containerType kubecontainer.ContainerType) map[string]string {\n\tlabels := map[string]string{}\n\tlabels[types.KubernetesPodNameLabel] = pod.Name"
  },
  {
    "id" : "7545df01-74cd-4db4-a854-2e05c1588f9f",
    "prId" : 30049,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ac817223-98cc-41a2-be79-b0e62fdf4fe2",
        "parentId" : null,
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "nit: I regret that I named the variables so long. Feel free to shorten them if you prefer. :)\n",
        "createdAt" : "2016-08-05T18:19:32Z",
        "updatedAt" : "2016-08-09T02:02:00Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      },
      {
        "id" : "219f85da-1ecd-40f8-ae2b-87f625ff161a",
        "parentId" : "ac817223-98cc-41a2-be79-b0e62fdf4fe2",
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "I think we can remove the \"kubernetes\" prefix for sure :)\n",
        "createdAt" : "2016-08-05T21:46:30Z",
        "updatedAt" : "2016-08-09T02:02:00Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "cf695ca3-fb48-4562-8ae5-59052b734bbb",
        "parentId" : "ac817223-98cc-41a2-be79-b0e62fdf4fe2",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "done.\n",
        "createdAt" : "2016-08-06T00:22:23Z",
        "updatedAt" : "2016-08-09T02:02:00Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      }
    ],
    "commit" : "e8fcafc92538af41ba139838ee5824a3aa544f51",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +29,33 @@)\n\nconst (\n\t// TODO: move those label definitions to kubelet/types/labels.go\n\t// TODO: change those label names to follow kubernetes's format"
  },
  {
    "id" : "ebc5575e-4647-4631-aea5-c6acc67fb9cd",
    "prId" : 30049,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "89c9a3f3-76e7-4d91-9b15-35af86139995",
        "parentId" : null,
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "Maybe a little odd, but we need to put `api.Container.Ports` into the container annotation for now.\n\nOne reason why we need some of these labels is that in some corner cases, `api.Pod` may be deleted before kubelet kills the pod, e.g. pod is deleted on apiserver side when kubelet is temporarily down. When that happens, we want kubelet to behave properly (kill pod gracefully, invoke prestop handler, dump termination message etc.). To achieve that, we need to recover necessary information from the container labels.\n\nThe necessary information is:\n- DeletionGracePeriod and TerminationGracePeriod: to know how long we should wait before forcibly killing containers.\n- TerminationMessagePath: to know where to retrieve container termination message log.\n- PreStopHandler: to know what to run before stopping the container\n- **ContainerPorts**: to know which port to run [`HTTPGetAction`](https://github.com/kubernetes/kubernetes/blob/master/pkg/api/types.go#L880-L892) and [`TCPSocketAction`](https://github.com/kubernetes/kubernetes/blob/master/pkg/api/types.go#L905-L908) against. We can get the port from the prestop handler easily if the port is specified as port number. However, we also support specifying port name in prestop handler, in that case we have to [map port name to port number in kubelet](https://github.com/kubernetes/kubernetes/blob/master/pkg/kubelet/lifecycle/handlers.go#L99-L103). Currently we can only get it from `api.Pod` unless we checkpoint it in container label. That's why we need `ContainerPorts` in the label. We didn't add it in current code, because we are still relying on the \"whole pod label\" - [`io.kubernetes.pod.data`](https://github.com/kubernetes/kubernetes/blob/master/pkg/kubelet/dockertools/labels.go#L47) added long time ago to run prestop handler when `api.Pod` is gone.\n",
        "createdAt" : "2016-08-05T18:46:37Z",
        "updatedAt" : "2016-08-09T02:02:00Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      },
      {
        "id" : "90c583cd-76a0-4446-816d-478ec359428a",
        "parentId" : "89c9a3f3-76e7-4d91-9b15-35af86139995",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "done.\n",
        "createdAt" : "2016-08-06T00:22:20Z",
        "updatedAt" : "2016-08-09T02:02:00Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      }
    ],
    "commit" : "e8fcafc92538af41ba139838ee5824a3aa544f51",
    "line" : null,
    "diffHunk" : "@@ -1,1 +70,74 @@\tPreStopHandler            *api.Handler\n\tContainerPorts            []api.ContainerPort\n}\n\n// newPodLabels creates pod labels from api.Pod."
  },
  {
    "id" : "eb5048e6-003c-4bf9-adc2-804ed506532c",
    "prId" : 30049,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8f80b65f-2dba-4ea9-b1b2-1a5b6f89c190",
        "parentId" : null,
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "should we move all these labels to kubelet/types/labels.go?\n\nAdding a TODO might be enough, since other packages are not using these at the moment.\n",
        "createdAt" : "2016-08-05T22:06:06Z",
        "updatedAt" : "2016-08-09T02:02:00Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "ca0a73ee-f85f-418a-95e5-75d04d22b238",
        "parentId" : "8f80b65f-2dba-4ea9-b1b2-1a5b6f89c190",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "done.\n",
        "createdAt" : "2016-08-06T00:22:08Z",
        "updatedAt" : "2016-08-09T02:02:00Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      }
    ],
    "commit" : "e8fcafc92538af41ba139838ee5824a3aa544f51",
    "line" : null,
    "diffHunk" : "@@ -1,1 +40,44 @@\tcontainerPreStopHandlerLabel         = \"io.kubernetes.container.preStopHandler\"\n\tcontainerPortsLabel                  = \"io.kubernetes.container.ports\"\n)\n\ntype labeledPodSandboxInfo struct {"
  },
  {
    "id" : "bda57884-8c9a-492d-ba0c-624dbe30db94",
    "prId" : 30049,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c288ac04-18d7-46a7-9fd5-90ab3248d032",
        "parentId" : null,
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "Just one more nit.\nBecause we are making breaking change already. Maybe we can also change  the label name here to follow DNS convention here (see https://github.com/kubernetes/kubernetes/issues/23706)\n@yujuhong WDYT?\n",
        "createdAt" : "2016-08-06T01:05:45Z",
        "updatedAt" : "2016-08-09T02:02:00Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      },
      {
        "id" : "d399697f-a9eb-4d1e-b82f-e4eae9e06bf3",
        "parentId" : "c288ac04-18d7-46a7-9fd5-90ab3248d032",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "@yujuhong WDYT?\n",
        "createdAt" : "2016-08-07T12:53:26Z",
        "updatedAt" : "2016-08-09T02:02:00Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      },
      {
        "id" : "ae83dc0f-3b91-4172-9457-43a4dee7112b",
        "parentId" : "c288ac04-18d7-46a7-9fd5-90ab3248d032",
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "~~Sure. Let's do that. /cc @dchen1107, this will require draining pods from the node before upgrading to using CRI.~~\n",
        "createdAt" : "2016-08-08T20:30:29Z",
        "updatedAt" : "2016-08-09T02:02:00Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "95d24410-364e-4afc-9dea-24982ac90b2e",
        "parentId" : "c288ac04-18d7-46a7-9fd5-90ab3248d032",
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "Discussed with @dchen1107, let's not _intentionally_ cause any upgrade issues for now, in case we have to ensure backward compatibility in the future. Add a TODO here linking to the issue and move on. \n",
        "createdAt" : "2016-08-08T20:53:43Z",
        "updatedAt" : "2016-08-09T02:02:00Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "518b5810-4865-4b12-87eb-c407e423953b",
        "parentId" : "c288ac04-18d7-46a7-9fd5-90ab3248d032",
        "authorId" : "a6409368-42e0-44a9-bf79-9d3042ac3b65",
        "body" : "Discussed with @yujuhong offline on this very topic. My stand (I could be very wrong) on this is that \n- We should change those labels to follow Kubernetes's format in general.\n- This kind of labels should be the implementation detail to Kubelet, not the API defining between Kubelet and CRIs. In today's docker / rkt support, we are using some of those labels in our system, but the logic is all in kubelet side. \n- If above statement is true and the detail of label format is encapsulated at Kubelet side, we can change them later.\n- Let's mark this as TODO, and reiterate this before we switch Kubelet to use the new CRI.\n\nWDYT? \n",
        "createdAt" : "2016-08-08T20:58:43Z",
        "updatedAt" : "2016-08-09T02:02:00Z",
        "lastEditedBy" : "a6409368-42e0-44a9-bf79-9d3042ac3b65",
        "tags" : [
        ]
      },
      {
        "id" : "4be54d1a-0376-4ce5-b375-d5a36a225951",
        "parentId" : "c288ac04-18d7-46a7-9fd5-90ab3248d032",
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "Yes, let's handle this separately.\n",
        "createdAt" : "2016-08-08T22:18:48Z",
        "updatedAt" : "2016-08-09T02:02:00Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "5b27bc6a-340d-41cf-a011-81fe6a6bd353",
        "parentId" : "c288ac04-18d7-46a7-9fd5-90ab3248d032",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "Added a todo for this.\n",
        "createdAt" : "2016-08-09T00:34:03Z",
        "updatedAt" : "2016-08-09T02:02:00Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      },
      {
        "id" : "d822134f-03f9-483d-8309-d775e2a7fec2",
        "parentId" : "c288ac04-18d7-46a7-9fd5-90ab3248d032",
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "Almost all the labels in this PR are added before 1.2, so there shouldn't be compatibility problem when we switch to this new implementation.\nThe only exception is that we are adding a new label `io.kubernetes.container.ports` in this PR, if we don't add it in the current docker label code, we'll have a little problem in the future.\nOffline discussed with @yujuhong, we'll also add container ports label in current code to make sure we have this label at least in 1.4.\n",
        "createdAt" : "2016-08-09T01:08:23Z",
        "updatedAt" : "2016-08-09T02:02:00Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      }
    ],
    "commit" : "e8fcafc92538af41ba139838ee5824a3aa544f51",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +30,34 @@\nconst (\n\t// TODO: move those label definitions to kubelet/types/labels.go\n\t// TODO: change those label names to follow kubernetes's format\n\tpodDeletionGracePeriodLabel    = \"io.kubernetes.pod.deletionGracePeriod\""
  }
]