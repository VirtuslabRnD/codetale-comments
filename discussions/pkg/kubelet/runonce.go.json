[
  {
    "id" : "9c666c17-cfb4-43f3-884e-52b361b23fe6",
    "prId" : 98850,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/98850#pullrequestreview-585349290",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "664db8d0-6e99-4014-9f39-a2ca9637b3b4",
        "parentId" : null,
        "authorId" : "6ea93d56-a0ec-4969-ac42-11a78c2085e6",
        "body" : "```suggestion\r\n\t\t\tfailedPods = append(failedPods, klog.KObj(res.Pod))\r\n```",
        "createdAt" : "2021-02-08T10:29:45Z",
        "updatedAt" : "2021-03-17T00:59:36Z",
        "lastEditedBy" : "6ea93d56-a0ec-4969-ac42-11a78c2085e6",
        "tags" : [
        ]
      }
    ],
    "commit" : "01a4e4facebda8a643383625d3cece724efe2a66",
    "line" : 39,
    "diffHunk" : "@@ -1,1 +98,102 @@\t\t\t\tklog.InfoS(\"Unable to start pod because container failed\", \"pod\", klog.KObj(res.Pod), \"containerName\", failedContainerName)\n\t\t\t}\n\t\t\tfailedPods = append(failedPods, format.Pod(res.Pod))\n\t\t} else {\n\t\t\tklog.InfoS(\"Started pod\", \"pod\", klog.KObj(res.Pod))"
  },
  {
    "id" : "35745272-b5bd-4968-a008-697572bcacb2",
    "prId" : 18027,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "60b7ebb7-b67d-4ee1-be2c-ff05c1df3546",
        "parentId" : null,
        "authorId" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "body" : "This is pasted from elsewhere in kubelet.go, extract method please?  In a separate PR if this has merged by the time you see this -- I won't rob you of LGTM.\n",
        "createdAt" : "2015-12-03T07:17:59Z",
        "updatedAt" : "2015-12-03T07:17:59Z",
        "lastEditedBy" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "tags" : [
        ]
      }
    ],
    "commit" : "81b9097a801cded4762bb2dedb531c9d74477751",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +48,52 @@\t}\n\n\t// If the container logs directory does not exist, create it.\n\tif _, err := os.Stat(containerLogsDir); err != nil {\n\t\tif err := kl.os.Mkdir(containerLogsDir, 0755); err != nil {"
  },
  {
    "id" : "01f92eb2-6f28-4b73-bc50-e29465ea3a11",
    "prId" : 1534,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a9ca8b09-41da-4257-86cb-27f0b8f0b6bb",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "I feel like there's some overlap with the main path - can it be avoided?  or is it just not enough to worry about?  I'm concerned that we will fix bugs in the main path and not this, since this has no e2e test (ahem)\n",
        "createdAt" : "2014-10-03T17:43:53Z",
        "updatedAt" : "2014-10-04T01:02:34Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "b8c83fbb-c25f-48fc-b9d8-f94ee3529b86",
        "parentId" : "a9ca8b09-41da-4257-86cb-27f0b8f0b6bb",
        "authorId" : "6001b825-f0f9-4fc3-b624-34a076b031e1",
        "body" : "So this is actually reusing most of the element of the main path: it's just a retry loop around `syncPod`.\n\nThe only difference is that it calls `GetKubeletDockerContainers` for each pod, instead of having a syncLoop for all the pod like the main path.\n",
        "createdAt" : "2014-10-03T18:07:47Z",
        "updatedAt" : "2014-10-04T01:02:34Z",
        "lastEditedBy" : "6001b825-f0f9-4fc3-b624-34a076b031e1",
        "tags" : [
        ]
      },
      {
        "id" : "650fc683-f135-4ec7-980c-375750591293",
        "parentId" : "a9ca8b09-41da-4257-86cb-27f0b8f0b6bb",
        "authorId" : "6001b825-f0f9-4fc3-b624-34a076b031e1",
        "body" : "But agreed this need some tests, I'm currently fighting with `kubelet_test.go` to figure out what I can reuse.\n",
        "createdAt" : "2014-10-03T18:12:57Z",
        "updatedAt" : "2014-10-04T01:02:34Z",
        "lastEditedBy" : "6001b825-f0f9-4fc3-b624-34a076b031e1",
        "tags" : [
        ]
      }
    ],
    "commit" : "fa1dcd0a8bbe02d7eb82d3afac2b83ba547f51c7",
    "line" : 90,
    "diffHunk" : "@@ -1,1 +88,92 @@// Run a single pod and wait until all containers are running.\nfunc (kl *Kubelet) runPod(pod Pod) (api.PodInfo, error) {\n\tdockerContainers, err := dockertools.GetKubeletDockerContainers(kl.dockerClient, false)\n\tif err != nil {\n\t\treturn nil, fmt.Errorf(\"failed to get kubelet docker containers: %v\", err)"
  }
]