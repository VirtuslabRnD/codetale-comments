[
  {
    "id" : "a75b3c6e-d455-4090-afc7-52bd21d9bee5",
    "prId" : 12182,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e9fcd50d-d077-454b-a132-4da6f2f3fc32",
        "parentId" : null,
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "Please add unit tests for this.\n",
        "createdAt" : "2015-08-04T04:46:56Z",
        "updatedAt" : "2015-08-07T18:18:46Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      },
      {
        "id" : "1d35f2d7-7f02-4c4d-bb19-ff1e4e129bc1",
        "parentId" : "e9fcd50d-d077-454b-a132-4da6f2f3fc32",
        "authorId" : "3c734967-9d67-42aa-a243-d401c1524cb6",
        "body" : "I added unit tests for isMemoryGuaranteed and isMemoryBestEffort (which essentially tests the first 2 cases below). I didn't add tests for Burstable containers because the precise formula might be in flux, but I can add them if you think I should!\n",
        "createdAt" : "2015-08-06T17:16:10Z",
        "updatedAt" : "2015-08-07T18:18:46Z",
        "lastEditedBy" : "3c734967-9d67-42aa-a243-d401c1524cb6",
        "tags" : [
        ]
      },
      {
        "id" : "b7cc573f-2d89-445e-99b6-526700b4cca3",
        "parentId" : "e9fcd50d-d077-454b-a132-4da6f2f3fc32",
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "+1 for unit tests. The main reason is to guard against any changes in the future, that might break this functionality.\n",
        "createdAt" : "2015-08-06T20:15:11Z",
        "updatedAt" : "2015-08-07T18:18:46Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      },
      {
        "id" : "5dfa9817-1d61-4877-87fa-642051d639b1",
        "parentId" : "e9fcd50d-d077-454b-a132-4da6f2f3fc32",
        "authorId" : "3c734967-9d67-42aa-a243-d401c1524cb6",
        "body" : "Added.\n",
        "createdAt" : "2015-08-07T07:26:17Z",
        "updatedAt" : "2015-08-07T18:18:46Z",
        "lastEditedBy" : "3c734967-9d67-42aa-a243-d401c1524cb6",
        "tags" : [
        ]
      }
    ],
    "commit" : "6ef3de1d5f1d4b19c154ba15f2bd4686b6036f0c",
    "line" : null,
    "diffHunk" : "@@ -1,1 +48,52 @@// and 1000. Containers with higher OOM scores are killed if the system runs out of memory.\n// See https://lwn.net/Articles/391222/ for more information.\nfunc GetContainerOomScoreAdjust(container *api.Container, memoryCapacity int64) int {\n\tif isMemoryGuaranteed(container) {\n\t\t// Memory guaranteed containers should be the last to get killed."
  },
  {
    "id" : "ed6967f0-7b3b-4ddc-bb24-884946767120",
    "prId" : 12182,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "34eb48b5-7185-4f93-901e-b6844c8d9bdd",
        "parentId" : null,
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "Can you post a pointer to the kernel oom score calculation algorithm here? Maybe this: https://lwn.net/Articles/317814/?\n",
        "createdAt" : "2015-08-06T20:17:26Z",
        "updatedAt" : "2015-08-07T18:18:46Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      },
      {
        "id" : "ecab3d37-6932-4159-bc7d-98d0984a1670",
        "parentId" : "34eb48b5-7185-4f93-901e-b6844c8d9bdd",
        "authorId" : "3c734967-9d67-42aa-a243-d401c1524cb6",
        "body" : "Great point, added pointer to https://lwn.net/Articles/391222/ which has the updated (in 2010) algorithm.\n",
        "createdAt" : "2015-08-07T08:07:37Z",
        "updatedAt" : "2015-08-07T18:18:46Z",
        "lastEditedBy" : "3c734967-9d67-42aa-a243-d401c1524cb6",
        "tags" : [
        ]
      }
    ],
    "commit" : "6ef3de1d5f1d4b19c154ba15f2bd4686b6036f0c",
    "line" : 48,
    "diffHunk" : "@@ -1,1 +46,50 @@// container should be adjusted. The OOM score of a process is the percentage of memory it consumes\n// multiplied by 100 (barring exceptional cases) + a configurable quantity which is between -1000\n// and 1000. Containers with higher OOM scores are killed if the system runs out of memory.\n// See https://lwn.net/Articles/391222/ for more information.\nfunc GetContainerOomScoreAdjust(container *api.Container, memoryCapacity int64) int {"
  }
]