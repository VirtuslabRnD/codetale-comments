[
  {
    "id" : "01371d3c-6224-4043-91ea-d51b60129b51",
    "prId" : 78110,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/78110#pullrequestreview-273253445",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bacc1cb4-c95d-4727-ab41-6b1264729ce6",
        "parentId" : null,
        "authorId" : "0de88c3b-1f1a-401f-9fd1-cd63adc590fd",
        "body" : "~Can you add a comment for this const as well?~",
        "createdAt" : "2019-08-09T16:57:03Z",
        "updatedAt" : "2019-08-09T16:57:58Z",
        "lastEditedBy" : "0de88c3b-1f1a-401f-9fd1-cd63adc590fd",
        "tags" : [
        ]
      }
    ],
    "commit" : "e58b4d4324acb82ef3f08e23892a39837c5b5ced",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +28,32 @@\t// without a process.\n\t// TODO: Handle infra container oom score adj in a runtime agnostic way.\n\tPodInfraOOMAdj int = -998\n\t// KubeletOOMScoreAdj is the OOM score adjustment for Kubelet\n\tKubeletOOMScoreAdj int = -999"
  },
  {
    "id" : "2e1edb19-7e8c-4b5b-8ea2-437df2cd28d9",
    "prId" : 39306,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/39306#pullrequestreview-15113968",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f27988a8-307c-4e4d-b8ac-a09bc6b0cb52",
        "parentId" : null,
        "authorId" : "7dd504ec-7e63-45b3-98f8-6eb1c683e9c2",
        "body" : "Could you please add a unit test to verify this?",
        "createdAt" : "2017-01-04T08:47:33Z",
        "updatedAt" : "2017-01-04T08:48:10Z",
        "lastEditedBy" : "7dd504ec-7e63-45b3-98f8-6eb1c683e9c2",
        "tags" : [
        ]
      },
      {
        "id" : "a424b7dd-aab2-4b2f-89e1-64595d677347",
        "parentId" : "f27988a8-307c-4e4d-b8ac-a09bc6b0cb52",
        "authorId" : "df8dc16d-08c7-457c-8593-619395912000",
        "body" : "Thanks for the review! `besteffortOOMScoreAdj` is a const value, however it needs to change its value to add a bad test case. So I do not addd test case for it, is it OK?",
        "createdAt" : "2017-01-04T10:13:59Z",
        "updatedAt" : "2017-01-04T10:13:59Z",
        "lastEditedBy" : "df8dc16d-08c7-457c-8593-619395912000",
        "tags" : [
        ]
      },
      {
        "id" : "ba2b90bc-6d78-476d-888c-97aa702e4903",
        "parentId" : "f27988a8-307c-4e4d-b8ac-a09bc6b0cb52",
        "authorId" : "7dd504ec-7e63-45b3-98f8-6eb1c683e9c2",
        "body" : "Em ... if besteffortOOMScoreAdj is unchangeable, why we modify the logic here?",
        "createdAt" : "2017-01-04T12:48:31Z",
        "updatedAt" : "2017-01-04T12:48:31Z",
        "lastEditedBy" : "7dd504ec-7e63-45b3-98f8-6eb1c683e9c2",
        "tags" : [
        ]
      },
      {
        "id" : "91a1e1b3-3925-4668-9aab-752cb186c4c0",
        "parentId" : "f27988a8-307c-4e4d-b8ac-a09bc6b0cb52",
        "authorId" : "df8dc16d-08c7-457c-8593-619395912000",
        "body" : "Just a small improve. I think `int(oomScoreAdjust) >= besteffortOOMScoreAdj` is more understandable than `int(oomScoreAdjust) == besteffortOOMScoreAdj`. If `besteffortOOMScoreAdj` is changed to another value(e.g. 996, any value less than 1000), `int(oomScoreAdjust) >= besteffortOOMScoreAdj` will still be OK to handle the case.",
        "createdAt" : "2017-01-04T13:54:31Z",
        "updatedAt" : "2017-01-04T13:54:31Z",
        "lastEditedBy" : "df8dc16d-08c7-457c-8593-619395912000",
        "tags" : [
        ]
      }
    ],
    "commit" : "e417fd2faa7f6173a93e0ae4798a39e6fe86a409",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +74,78 @@\t// Give burstable pods a higher chance of survival over besteffort pods.\n\tif int(oomScoreAdjust) >= besteffortOOMScoreAdj {\n\t\treturn int(besteffortOOMScoreAdj - 1)\n\t}\n\treturn int(oomScoreAdjust)"
  },
  {
    "id" : "81d1c8e7-ce62-4906-8c15-c17970dfde1e",
    "prId" : 14943,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c2f3463e-e852-46d6-8c3f-b2a2225cbbf0",
        "parentId" : null,
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "ignore my comments above, :100: to this change!\n",
        "createdAt" : "2016-05-06T15:58:09Z",
        "updatedAt" : "2016-05-20T22:03:35Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      }
    ],
    "commit" : "a64fe6572abbdfc945952e35b47c36a1b3293ae9",
    "line" : 40,
    "diffHunk" : "@@ -1,1 +38,42 @@func GetContainerOOMScoreAdjust(pod *api.Pod, container *api.Container, memoryCapacity int64) int {\n\tswitch util.GetPodQos(pod) {\n\tcase util.Guaranteed:\n\t\t// Guaranteed containers should be the last to get killed.\n\t\treturn guaranteedOOMScoreAdj"
  }
]