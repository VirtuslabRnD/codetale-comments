[
  {
    "id" : "2f4d1d3e-c236-4c41-a032-cac5f946b971",
    "prId" : 71679,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/71679#pullrequestreview-224019532",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f03bc908-37aa-4416-8876-b56ba0adb5f4",
        "parentId" : null,
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "this is cleaner than the past logic, should this be in a defer further up?",
        "createdAt" : "2019-04-08T15:24:09Z",
        "updatedAt" : "2019-04-08T15:24:09Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      },
      {
        "id" : "8d72202d-89f3-4c00-ac15-705065b7ba66",
        "parentId" : "f03bc908-37aa-4416-8876-b56ba0adb5f4",
        "authorId" : "4aab55a0-5299-4d58-b630-6d54a352dba8",
        "body" : "No.  Only if there is no error then we want to clear out the logReduction record.  If there was an error, we need to hold onto it.\r\n",
        "createdAt" : "2019-04-08T18:39:53Z",
        "updatedAt" : "2019-04-08T18:39:54Z",
        "lastEditedBy" : "4aab55a0-5299-4d58-b630-6d54a352dba8",
        "tags" : [
        ]
      }
    ],
    "commit" : "022f7c2cd75f984ef0a3a3a7a826ef723a65b555",
    "line" : 124,
    "diffHunk" : "@@ -1,1 +478,482 @@\t\treturn nil, err\n\t}\n\tr.logReduction.ClearID(containerID)\n\n\treturn resp.GetStats(), nil"
  },
  {
    "id" : "bae26ec3-6323-4f7f-abe5-9e93ab4f6088",
    "prId" : 52635,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/52635#pullrequestreview-63413049",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "962f7984-e47d-44c1-88c1-f07d0c9a82c8",
        "parentId" : null,
        "authorId" : "ed12fa4b-7790-4e88-b7d8-5d6a06b0b9f3",
        "body" : "I think this should be defined in CRI.",
        "createdAt" : "2017-09-18T16:39:22Z",
        "updatedAt" : "2017-09-18T16:39:23Z",
        "lastEditedBy" : "ed12fa4b-7790-4e88-b7d8-5d6a06b0b9f3",
        "tags" : [
        ]
      }
    ],
    "commit" : "d387eab8176645ab8b3e3aa104ae79802ba310ab",
    "line" : 44,
    "diffHunk" : "@@ -1,1 +463,467 @@func (r *RemoteRuntimeService) ListContainerStats(filter *runtimeapi.ContainerStatsFilter) ([]*runtimeapi.ContainerStats, error) {\n\t// Do not set timeout, because writable layer stats collection takes time.\n\t// TODO(random-liu): Should we assume runtime should cache the result, and set timeout here?\n\tctx, cancel := getContextWithCancel()\n\tdefer cancel()"
  },
  {
    "id" : "bcd78b9b-279c-4edd-862f-9f3785acef95",
    "prId" : 35661,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/35661#pullrequestreview-6333958",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2131ec08-6f9b-41ba-9c44-3bf2cd347ef1",
        "parentId" : null,
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "nit:\nwrap the error to `utilexec.ExitError`, e.g.\n\n``` go\n        if exitErr, ok := err.(*exec.ExitError); ok {\n        return &utilexec.ExitErrorWrapper{ExitError: exitErr}\n    }\n```\n",
        "createdAt" : "2016-10-27T02:26:54Z",
        "updatedAt" : "2016-10-28T18:32:45Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      },
      {
        "id" : "c5d43ccd-5e41-4114-bbf2-1833aa1667d9",
        "parentId" : "2131ec08-6f9b-41ba-9c44-3bf2cd347ef1",
        "authorId" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "body" : "This is the error returned by the RPC client, so I'm pretty sure it would never be an instance of `exec.ExitError`. It will be the server implementation's responsibility to convert exit errors into an appropriate response.\n",
        "createdAt" : "2016-10-27T19:21:50Z",
        "updatedAt" : "2016-10-28T18:32:45Z",
        "lastEditedBy" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "tags" : [
        ]
      },
      {
        "id" : "39f864fa-6165-48a3-b4ad-8a4debecb7ba",
        "parentId" : "2131ec08-6f9b-41ba-9c44-3bf2cd347ef1",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "I'm concerned how to extract the exit code correctly. It's easy to get the exit code from ExecSync, but not easy to add it to streaming Exec without extracting from error.\n",
        "createdAt" : "2016-10-28T03:05:03Z",
        "updatedAt" : "2016-10-28T18:32:45Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      },
      {
        "id" : "a6abe630-8ac0-498d-87c8-83876d4c3bd6",
        "parentId" : "2131ec08-6f9b-41ba-9c44-3bf2cd347ef1",
        "authorId" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "body" : "If an error is returned here, it means that the exec either did not start or terminate, so there is no exit code. What is the usecase for getting the exit code from the streaming exec?\n",
        "createdAt" : "2016-10-28T17:35:30Z",
        "updatedAt" : "2016-10-28T18:32:45Z",
        "lastEditedBy" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "tags" : [
        ]
      },
      {
        "id" : "a8730213-cb38-4daf-8496-59ade6303bb1",
        "parentId" : "2131ec08-6f9b-41ba-9c44-3bf2cd347ef1",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "> What is the usecase for getting the exit code from the streaming exec?\n\nUsers also expect an exit code while the command exec failed. There is already an [test](https://github.com/kubernetes/kubernetes/blob/master/test/e2e/kubectl.go#L422) about this, so let's check in next PR of wiring everything togather.\n",
        "createdAt" : "2016-10-28T23:28:27Z",
        "updatedAt" : "2016-10-28T23:28:27Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      }
    ],
    "commit" : "c60db9953645f16de9ea922a3e62f84a371039f4",
    "line" : 39,
    "diffHunk" : "@@ -1,1 +262,266 @@\t}\n\tresp, err := r.runtimeClient.ExecSync(ctx, req)\n\tif err != nil {\n\t\tglog.Errorf(\"ExecSync %s '%s' from runtime service failed: %v\", containerID, strings.Join(cmd, \" \"), err)\n\t\treturn nil, nil, err"
  },
  {
    "id" : "066876a2-d5af-4c3b-87d3-78b3f5205c24",
    "prId" : 35661,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/35661#pullrequestreview-6116761",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "545dfd08-8f30-4074-b0f6-f6c7ca2ab6c4",
        "parentId" : null,
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "maybe also wrap to `utilexec.ExitError` here\n",
        "createdAt" : "2016-10-27T02:30:44Z",
        "updatedAt" : "2016-10-28T18:32:45Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      },
      {
        "id" : "0212d7eb-f1c3-400a-b90c-bbbfdae5c551",
        "parentId" : "545dfd08-8f30-4074-b0f6-f6c7ca2ab6c4",
        "authorId" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "body" : "Ditto.\n",
        "createdAt" : "2016-10-27T19:26:34Z",
        "updatedAt" : "2016-10-28T18:32:45Z",
        "lastEditedBy" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "tags" : [
        ]
      }
    ],
    "commit" : "c60db9953645f16de9ea922a3e62f84a371039f4",
    "line" : 76,
    "diffHunk" : "@@ -1,1 +299,303 @@\tresp, err := r.runtimeClient.Attach(ctx, req)\n\tif err != nil {\n\t\tglog.Errorf(\"Attach %s from runtime service failed: %v\", req.GetContainerId(), err)\n\t\treturn nil, err\n\t}"
  },
  {
    "id" : "e5fa76c8-9a5a-4492-8667-41864773fd16",
    "prId" : 29623,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1b2b66c1-277b-44ca-b4d1-e32204255ae1",
        "parentId" : null,
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "Does this mean `nsenter` and `socat` aren't required (aka `exec.Command(\"<binary-in-PATH>\")`)) with this approach?\nIf so, +100\n",
        "createdAt" : "2016-08-02T09:18:37Z",
        "updatedAt" : "2016-08-02T23:22:20Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      },
      {
        "id" : "203ab5e1-f430-4ad9-8e88-f83cda55566d",
        "parentId" : "1b2b66c1-277b-44ca-b4d1-e32204255ae1",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "@luxas Here doesn't require `nsenter` or `socat`, it just calls the `Exec()` API of remote runtime. But it doesn't ensure remote runtimes not requiring `nsenter`. It depends on the specific implementation of remote runtime.\n",
        "createdAt" : "2016-08-02T09:32:36Z",
        "updatedAt" : "2016-08-02T23:22:20Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      },
      {
        "id" : "a1fee64c-16a0-42c2-afaf-140b68d26420",
        "parentId" : "1b2b66c1-277b-44ca-b4d1-e32204255ae1",
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "The runtime has to support this, whether it uses `nsenter` internally or not.\n",
        "createdAt" : "2016-08-02T18:33:36Z",
        "updatedAt" : "2016-08-02T23:22:20Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "b3b6bd8b-77be-4763-8c43-50dbd3d7c3a9",
        "parentId" : "1b2b66c1-277b-44ca-b4d1-e32204255ae1",
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "[ref](https://github.com/kubernetes/kubernetes/blob/b829d4d4ef68e64b9b7ae42b46877ee75bb2bfd9/docs/design/command_execution_port_forwarding.md)\n\nOkay, I just wanted to make sure socat won't be required for streaming this `Exec()` solution (as you're using gRPC)\n",
        "createdAt" : "2016-08-03T07:44:38Z",
        "updatedAt" : "2016-08-03T07:44:38Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      }
    ],
    "commit" : "f8c51adbe13fe739c60f1303b40245ed62218042",
    "line" : 251,
    "diffHunk" : "@@ -1,1 +249,253 @@// Exec executes a command in the container.\n// TODO: support terminal resizing for exec, refer https://github.com/kubernetes/kubernetes/issues/29579.\nfunc (r *RemoteRuntimeService) Exec(rawContainerID string, cmd []string, tty bool, stdin io.Reader, stdout, stderr io.WriteCloser) error {\n\treturn fmt.Errorf(\"Not implemented\")\n}"
  },
  {
    "id" : "fd044cad-9082-4cec-b381-ff2068948a32",
    "prId" : 29623,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9b325955-f3e9-4783-aeb6-2ea746cc38ef",
        "parentId" : null,
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "Supporting terminal resizing may need more work. Should we just mark this method \"not implemented\" for now?\n",
        "createdAt" : "2016-08-02T18:35:10Z",
        "updatedAt" : "2016-08-02T23:22:20Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "c5f9d9de-0129-4fcd-a5d8-4f11ad2d9fae",
        "parentId" : "9b325955-f3e9-4783-aeb6-2ea746cc38ef",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "OK.\n",
        "createdAt" : "2016-08-02T23:20:08Z",
        "updatedAt" : "2016-08-02T23:22:20Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      }
    ],
    "commit" : "f8c51adbe13fe739c60f1303b40245ed62218042",
    "line" : 250,
    "diffHunk" : "@@ -1,1 +248,252 @@\n// Exec executes a command in the container.\n// TODO: support terminal resizing for exec, refer https://github.com/kubernetes/kubernetes/issues/29579.\nfunc (r *RemoteRuntimeService) Exec(rawContainerID string, cmd []string, tty bool, stdin io.Reader, stdout, stderr io.WriteCloser) error {\n\treturn fmt.Errorf(\"Not implemented\")"
  }
]