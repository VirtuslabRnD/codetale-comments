[
  {
    "id" : "db7bf2e3-faf6-4702-9ad5-9db35feccc75",
    "prId" : 87283,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/87283#pullrequestreview-344045672",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "420d8f63-48aa-442f-81f8-7d38aa46a347",
        "parentId" : null,
        "authorId" : "d7870cae-47b0-4c8e-8527-be8fc4be86de",
        "body" : "To confirm my understanding.... is this diff basically printing in groups of 2 until it hits all 0s, and then it stops?\r\n\r\nTo you know if this type of handling of printing bitmasks is common?",
        "createdAt" : "2020-01-16T15:22:04Z",
        "updatedAt" : "2020-01-16T16:29:12Z",
        "lastEditedBy" : "d7870cae-47b0-4c8e-8527-be8fc4be86de",
        "tags" : [
        ]
      },
      {
        "id" : "f7cd1650-e302-403d-804f-c01edbcf93ab",
        "parentId" : "420d8f63-48aa-442f-81f8-7d38aa46a347",
        "authorId" : "8eff55b7-2f52-4dd6-b8a6-b75a1c427179",
        "body" : "It's not printing in groups of 2, per se. It's limiting the total number of bits displayed, based on the value `*s`(which is a 64 bit integer).\r\n\r\nUnrolled It is equivalent to:\r\n```\r\nif *s > (1 << 62)\r\n    return fmt.Sprintf(\"%064b\", *s)\r\nif *s > (1 << 60)\r\n    return fmt.Sprintf(\"%062b\", *s)\r\nif *s > (1 << 58)\r\n    return fmt.Sprintf(\"%060b\", *s)\r\n...\r\nif *s > (1 << 4)\r\n    return fmt.Sprintf(\"%006b\", *s)\r\nif *s > (1 << 2)\r\n    return fmt.Sprintf(\"%004b\", *s)\r\nreturn fmt.Sprintf(\"%002b\", *s)\r\n```\r\n\r\nSo you may see:\r\n```\r\n01\r\n10\r\n0100\r\n1000\r\n```\r\nbut you will never see:\r\n```\r\n0\r\n1\r\n0001\r\n100\r\n```",
        "createdAt" : "2020-01-16T16:27:51Z",
        "updatedAt" : "2020-01-16T16:29:12Z",
        "lastEditedBy" : "8eff55b7-2f52-4dd6-b8a6-b75a1c427179",
        "tags" : [
        ]
      }
    ],
    "commit" : "708278098af1e1b43f05cc8093116b80f9c96530",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +142,146 @@// String converts mask to string\nfunc (s *bitMask) String() string {\n\tgrouping := 2\n\tfor shift := 64 - grouping; shift > 0; shift -= grouping {\n\t\tif *s > (1 << uint(shift)) {"
  }
]