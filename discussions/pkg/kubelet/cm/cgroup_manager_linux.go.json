[
  {
    "id" : "d1c1fc70-5d71-41f3-92f0-fc67c58c33e8",
    "prId" : 102218,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/102218#pullrequestreview-667716108",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4e5cfd6a-8a2c-46f8-a0ed-9a9cfe28fdb8",
        "parentId" : null,
        "authorId" : "b7c04289-77b0-4d05-90b7-3bde23e2b0bf",
        "body" : "Do you know of a test signal that can verify this change works as expected?",
        "createdAt" : "2021-05-22T07:49:18Z",
        "updatedAt" : "2021-05-22T07:49:18Z",
        "lastEditedBy" : "b7c04289-77b0-4d05-90b7-3bde23e2b0bf",
        "tags" : [
        ]
      },
      {
        "id" : "0e9443c6-162a-4b19-b802-05a5c39f25d9",
        "parentId" : "4e5cfd6a-8a2c-46f8-a0ed-9a9cfe28fdb8",
        "authorId" : "b7ef7200-9e1a-419d-ac6a-a400c6c2164c",
        "body" : "The code that is using this was added by #41149, and later moved out of experimental in #62509. Neither comes with any tests, but maybe @sjenning can shed more light on it (he should review this anyway).",
        "createdAt" : "2021-05-24T03:53:20Z",
        "updatedAt" : "2021-05-24T03:53:20Z",
        "lastEditedBy" : "b7ef7200-9e1a-419d-ac6a-a400c6c2164c",
        "tags" : [
        ]
      },
      {
        "id" : "d35b624c-7941-4290-b207-9af2aba91fa8",
        "parentId" : "4e5cfd6a-8a2c-46f8-a0ed-9a9cfe28fdb8",
        "authorId" : "154a8533-a24d-4af9-81fb-0e2db0a9acf3",
        "body" : "/cc @sjenning \r\nat least according to github UI it seems he was not assigned (just mentioned)",
        "createdAt" : "2021-05-25T11:37:13Z",
        "updatedAt" : "2021-05-25T11:37:13Z",
        "lastEditedBy" : "154a8533-a24d-4af9-81fb-0e2db0a9acf3",
        "tags" : [
        ]
      }
    ],
    "commit" : "f1aee7e049619f47cfec6e62fb15a2d0de7e1e67",
    "line" : 143,
    "diffHunk" : "@@ -1,1 +604,608 @@// MemoryUsage returns the current memory usage of the specified cgroup,\n// as read from cgroupfs.\nfunc (m *cgroupManagerImpl) MemoryUsage(name CgroupName) (int64, error) {\n\tvar path, file string\n\tif libcontainercgroups.IsCgroup2UnifiedMode() {"
  },
  {
    "id" : "9d37907d-ce82-477d-8a99-b84fddb44879",
    "prId" : 94111,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/94111#pullrequestreview-472972128",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "812b7221-4fd5-4281-b5e8-3fd3a5f5c3a3",
        "parentId" : null,
        "authorId" : "224e1088-78fe-4bdd-99d1-31be3e464996",
        "body" : "does this require a UT ?",
        "createdAt" : "2020-08-23T01:23:16Z",
        "updatedAt" : "2020-08-23T01:23:16Z",
        "lastEditedBy" : "224e1088-78fe-4bdd-99d1-31be3e464996",
        "tags" : [
        ]
      }
    ],
    "commit" : "49cbf91fce7b17f53f442424dc5ea679dc8e3ae2",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +319,323 @@\t\tupdateSystemdCgroupInfo(libcontainerCgroupConfig, cgroupConfig.Name)\n\t} else {\n\t\tlibcontainerCgroupConfig.Path = cgroupConfig.Name.ToCgroupfs()\n\t}\n"
  },
  {
    "id" : "8a0aed48-a397-48cd-9710-c69fee90ecbb",
    "prId" : 89897,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/89897#pullrequestreview-389014739",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7528c4e5-ab6b-4250-a8a9-a6bf640e63ce",
        "parentId" : null,
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "this eliminates verification on particular controllers being present and available on a cgroupv2 host.\r\n\r\nwas that intentional?",
        "createdAt" : "2020-04-06T17:22:14Z",
        "updatedAt" : "2020-04-09T14:18:45Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      },
      {
        "id" : "b0a881b3-0b5c-40e4-b9a2-0d2ac7b15369",
        "parentId" : "7528c4e5-ab6b-4250-a8a9-a6bf640e63ce",
        "authorId" : "b3fe9735-08f4-4c07-a325-0279623e8b9b",
        "body" : "it was intentional as on cgroup v2 the cgroup existence depend only on the cgroup directory being created.  Should I change the test to also verify if the controllers we need are enabled?",
        "createdAt" : "2020-04-06T19:40:33Z",
        "updatedAt" : "2020-04-09T14:18:45Z",
        "lastEditedBy" : "b3fe9735-08f4-4c07-a325-0279623e8b9b",
        "tags" : [
        ]
      },
      {
        "id" : "72b0c8d3-64b7-4f41-ba8f-795dadf3259e",
        "parentId" : "7528c4e5-ab6b-4250-a8a9-a6bf640e63ce",
        "authorId" : "b3fe9735-08f4-4c07-a325-0279623e8b9b",
        "body" : "I've changed the implementation to also check if the controllers we need are enabled.",
        "createdAt" : "2020-04-07T11:12:17Z",
        "updatedAt" : "2020-04-09T14:18:45Z",
        "lastEditedBy" : "b3fe9735-08f4-4c07-a325-0279623e8b9b",
        "tags" : [
        ]
      }
    ],
    "commit" : "26d94ad628691a61de52b67a05902eff4cf1753d",
    "line" : 44,
    "diffHunk" : "@@ -1,1 +257,261 @@// Exists checks if all subsystem cgroups already exist\nfunc (m *cgroupManagerImpl) Exists(name CgroupName) bool {\n\tif libcontainercgroups.IsCgroup2UnifiedMode() {\n\t\tcgroupPath := m.buildCgroupUnifiedPath(name)\n\t\tneededControllers := getSupportedUnifiedControllers()"
  },
  {
    "id" : "04e56509-eb09-401f-8805-79171f4769fe",
    "prId" : 89897,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/89897#pullrequestreview-389014813",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "54ab17fc-18c9-4b10-be16-3fe3982e242f",
        "parentId" : null,
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "this appears to blindly take all the root controllers that were enabled on the system and propagates it to the children.  shouldn't we only propagate the controllers that are supported by k8s itself?  this feels like the place we should continue to maintain a whitelist of supported controllers.",
        "createdAt" : "2020-04-06T17:27:50Z",
        "updatedAt" : "2020-04-09T14:18:45Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      },
      {
        "id" : "aa735f75-5481-4d1a-bed3-3bd53779bc72",
        "parentId" : "54ab17fc-18c9-4b10-be16-3fe3982e242f",
        "authorId" : "b3fe9735-08f4-4c07-a325-0279623e8b9b",
        "body" : "good idea.  I will change the test to only enable the controllers we need.\r\n\r\nShould `pids` be behind the feature gate?",
        "createdAt" : "2020-04-06T19:40:14Z",
        "updatedAt" : "2020-04-09T14:18:45Z",
        "lastEditedBy" : "b3fe9735-08f4-4c07-a325-0279623e8b9b",
        "tags" : [
        ]
      },
      {
        "id" : "07abbf1c-a96a-45e2-90ca-ce1343812111",
        "parentId" : "54ab17fc-18c9-4b10-be16-3fe3982e242f",
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "yes - pids need to be behind feature gate.",
        "createdAt" : "2020-04-06T20:40:54Z",
        "updatedAt" : "2020-04-09T14:18:45Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      },
      {
        "id" : "b3b843e9-562a-4ac0-bfc5-6244e08c93a4",
        "parentId" : "54ab17fc-18c9-4b10-be16-3fe3982e242f",
        "authorId" : "b3fe9735-08f4-4c07-a325-0279623e8b9b",
        "body" : "thanks, done",
        "createdAt" : "2020-04-07T11:12:23Z",
        "updatedAt" : "2020-04-09T14:18:45Z",
        "lastEditedBy" : "b3fe9735-08f4-4c07-a325-0279623e8b9b",
        "tags" : [
        ]
      }
    ],
    "commit" : "26d94ad628691a61de52b67a05902eff4cf1753d",
    "line" : 132,
    "diffHunk" : "@@ -1,1 +462,466 @@\tsupportedControllers := getSupportedUnifiedControllers()\n\n\t// The retrieved content looks like: \"cpuset cpu io memory hugetlb pids\".  Prepend each of the controllers\n\t// with '+', so we have something like \"+cpuset +cpu +io +memory +hugetlb +pids\"\n\tcontrollers := \"\""
  },
  {
    "id" : "0da0d804-021b-4a29-89dc-88ebd41863b7",
    "prId" : 85218,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/85218#pullrequestreview-382104060",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7e79eaa8-956c-46c5-83cd-fca7421ffb41",
        "parentId" : null,
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "does this manager work on v1 and v2 hosts?",
        "createdAt" : "2020-03-12T14:51:33Z",
        "updatedAt" : "2020-03-12T14:53:35Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      },
      {
        "id" : "fb1570dd-9916-408c-b6af-60f2bd041a3c",
        "parentId" : "7e79eaa8-956c-46c5-83cd-fca7421ffb41",
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "i need to check the runc code, but is this abstracing legacy from unified manager?",
        "createdAt" : "2020-03-12T14:52:09Z",
        "updatedAt" : "2020-03-12T14:53:35Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      },
      {
        "id" : "32c5cc3d-27ed-4967-ae20-235a47c3eb98",
        "parentId" : "7e79eaa8-956c-46c5-83cd-fca7421ffb41",
        "authorId" : "b3fe9735-08f4-4c07-a325-0279623e8b9b",
        "body" : "yes, `NewSystemdCgroupsManager()` checks for the cgroup version used:\r\n\r\nhttps://github.com/opencontainers/runc/blob/master/libcontainer/cgroups/systemd/apply_systemd.go#L118-L136\r\n\r\nIf we are running on cgroup v1, it will use `cgroupsystemd.LegacyManager`",
        "createdAt" : "2020-03-12T14:56:11Z",
        "updatedAt" : "2020-03-12T14:56:11Z",
        "lastEditedBy" : "b3fe9735-08f4-4c07-a325-0279623e8b9b",
        "tags" : [
        ]
      },
      {
        "id" : "2671e581-c4dd-40d1-80d5-97da6075edf4",
        "parentId" : "7e79eaa8-956c-46c5-83cd-fca7421ffb41",
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "thanks for pointer, and noting that i confirmed this is in the vendored version.",
        "createdAt" : "2020-03-26T15:07:40Z",
        "updatedAt" : "2020-03-26T15:07:40Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      }
    ],
    "commit" : "bb5ed1b79709c865d9aa86008048f19331530041",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +155,159 @@\t\t\tpanic(\"systemd cgroup manager not available\")\n\t\t}\n\t\tf, err := cgroupsystemd.NewSystemdCgroupsManager()\n\t\tif err != nil {\n\t\t\treturn nil, err"
  },
  {
    "id" : "7978c3f0-1180-499f-92f5-d518a592fbc4",
    "prId" : 85218,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/85218#pullrequestreview-382677201",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ce12da36-3be5-4b1b-965a-2fca00cb75d1",
        "parentId" : null,
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "minor nit: may be useful to move this conversion into a helper that we can then unit test in a follow-on.",
        "createdAt" : "2020-03-26T15:08:46Z",
        "updatedAt" : "2020-03-26T15:08:47Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      },
      {
        "id" : "daa62a1a-19f6-4242-86fc-322325438f9d",
        "parentId" : "ce12da36-3be5-4b1b-965a-2fca00cb75d1",
        "authorId" : "b3fe9735-08f4-4c07-a325-0279623e8b9b",
        "body" : "PR here: https://github.com/kubernetes/kubernetes/pull/89567",
        "createdAt" : "2020-03-27T08:59:45Z",
        "updatedAt" : "2020-03-27T08:59:45Z",
        "lastEditedBy" : "b3fe9735-08f4-4c07-a325-0279623e8b9b",
        "tags" : [
        ]
      }
    ],
    "commit" : "bb5ed1b79709c865d9aa86008048f19331530041",
    "line" : 47,
    "diffHunk" : "@@ -1,1 +376,380 @@\t\tif resourceConfig.CpuShares != nil {\n\t\t\t// Convert from the range [2-262144] to [1-10000]\n\t\t\tresources.CpuWeight = (1 + ((*resourceConfig.CpuShares-2)*9999)/262142)\n\t\t}\n"
  },
  {
    "id" : "2266156b-edfc-43b0-9987-536d2fcaa7f9",
    "prId" : 84154,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/84154#pullrequestreview-349478119",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e415a096-8055-4a6d-ad12-deada4b7f449",
        "parentId" : null,
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "if the page size was wrong, it would error on the runc side as well.\r\n\r\nthis warning seems primarily useful for developer debugging.  the api server validation should prevent this error case from ever happening, so this is fine.",
        "createdAt" : "2020-01-28T15:42:04Z",
        "updatedAt" : "2020-01-28T15:42:05Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      }
    ],
    "commit" : "463442aa2907268f18c488ecac7ff6ab7ed48c2d",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +389,393 @@\tfor pageSize, limit := range resourceConfig.HugePageLimit {\n\t\tsizeString, err := v1helper.HugePageUnitSizeFromByteSize(pageSize)\n\t\tif err != nil {\n\t\t\tklog.Warningf(\"pageSize is invalid: %v\", err)\n\t\t\tcontinue"
  },
  {
    "id" : "bbb3d515-f3a4-4c6a-9a4d-3d07527a0199",
    "prId" : 83527,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/83527#pullrequestreview-298342344",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d4b92536-da29-4c19-a793-386bfc26f96e",
        "parentId" : null,
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "yay for cgroupsv2 coming soon.",
        "createdAt" : "2019-10-07T18:58:44Z",
        "updatedAt" : "2019-10-07T18:58:45Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      }
    ],
    "commit" : "42d1238962e3aa75be1b9a55152f90cb30d4e6d5",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +154,158 @@\t\t\tpanic(\"systemd cgroup manager not available\")\n\t\t}\n\t\treturn &cgroupsystemd.LegacyManager{\n\t\t\tCgroups: cgroups,\n\t\t\tPaths:   paths,"
  },
  {
    "id" : "8da8b000-57d6-44b7-8f96-2756bc8a451b",
    "prId" : 70678,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/70678#pullrequestreview-172304757",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5b9152c6-d520-4114-9629-bf5a2759caa2",
        "parentId" : null,
        "authorId" : "fd5eb1fb-f30a-4735-908c-944e87d99845",
        "body" : "nitpick: I wonder if this would be slightly better/more readable:\r\n\r\n```golang\r\nreturn CgroupName(append(append([]string{}, base...), components...))\r\n```\r\n\r\nIt does the copy implicitly rather than explicitly...",
        "createdAt" : "2018-11-06T23:12:02Z",
        "updatedAt" : "2018-11-06T23:13:56Z",
        "lastEditedBy" : "fd5eb1fb-f30a-4735-908c-944e87d99845",
        "tags" : [
        ]
      },
      {
        "id" : "2689e2ca-ea81-4516-92bf-9b4b2b160c38",
        "parentId" : "5b9152c6-d520-4114-9629-bf5a2759caa2",
        "authorId" : "d2b16581-e7e9-48b8-9f76-6f6bcb9ec300",
        "body" : "I think I prefer the explicit copy...",
        "createdAt" : "2018-11-06T23:25:00Z",
        "updatedAt" : "2018-11-06T23:25:00Z",
        "lastEditedBy" : "d2b16581-e7e9-48b8-9f76-6f6bcb9ec300",
        "tags" : [
        ]
      },
      {
        "id" : "934023cf-2c9d-4e03-a2d3-6a5425aa4b1d",
        "parentId" : "5b9152c6-d520-4114-9629-bf5a2759caa2",
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "+1 for explicit copy",
        "createdAt" : "2018-11-07T01:03:57Z",
        "updatedAt" : "2018-11-07T01:03:58Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "d4f6ae36151e7619345b90cda7e776f015052dac",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +71,75 @@\tbaseCopy := make([]string, len(base))\n\tcopy(baseCopy, base)\n\treturn CgroupName(append(baseCopy, components...))\n}\n"
  },
  {
    "id" : "b90d4119-8233-473d-91ab-494891b1a26d",
    "prId" : 55969,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/55969#pullrequestreview-78499675",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e68a53df-9da2-42af-9525-e0be1af7a1ea",
        "parentId" : null,
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "the typical convention in past has been outside of the cm package, users always worked with `CgroupName` as it was the abstract name, and any attempt to compare it to something in the cgroupfs required going through the adapter and getting the concrete form.",
        "createdAt" : "2017-11-22T16:13:06Z",
        "updatedAt" : "2017-11-22T17:25:39Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      }
    ],
    "commit" : "a66ee2eb3f3cb63d7a1f7ca4fa4ecb0ce0c1c802",
    "line" : 52,
    "diffHunk" : "@@ -1,1 +164,168 @@}\n\nfunc RevertFromSystemdToCgroupStyleName(name string) string {\n\tdriverName, err := ConvertCgroupFsNameToSystemd(name)\n\tif err != nil {"
  },
  {
    "id" : "c7db2a19-e86d-4162-bd42-8d4e4852a196",
    "prId" : 55969,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/55969#pullrequestreview-78506173",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "52390803-d3f1-49e3-9d42-fa0845524531",
        "parentId" : null,
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "nit: should we just have a /kubelet/cm/systemd subpackage in future and move this there?  it will be odd when _windows is having to implement this.",
        "createdAt" : "2017-11-22T16:31:24Z",
        "updatedAt" : "2017-11-22T17:25:39Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      }
    ],
    "commit" : "a66ee2eb3f3cb63d7a1f7ca4fa4ecb0ce0c1c802",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +117,121 @@}\n\nfunc IsSystemdStyleName(name string) bool {\n\tif strings.HasSuffix(name, systemdSuffix) {\n\t\treturn true"
  },
  {
    "id" : "4bf4d907-5672-43d3-9d17-b40edc75f097",
    "prId" : 41149,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/41149#pullrequestreview-24646433",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "990ce8ee-9b4a-4a52-8197-0e21e1ce3479",
        "parentId" : null,
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "cAdvisor Interface is available to the container manager. Why not use that instead for stats?\r\nIs this to get on-demand stats? If so, it might be helpful to move it to the cadvisor package since other modules can also make use of it like eviction_manager for example.",
        "createdAt" : "2017-02-24T08:44:44Z",
        "updatedAt" : "2017-03-02T21:04:24Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      },
      {
        "id" : "427fc2f8-af05-4709-b1b8-7f6f4df87ad0",
        "parentId" : "990ce8ee-9b4a-4a52-8197-0e21e1ce3479",
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "ideally, in the future we can move this or delegate to what ever we do for on-demand usage stat collection.",
        "createdAt" : "2017-03-02T03:25:18Z",
        "updatedAt" : "2017-03-02T21:04:24Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      }
    ],
    "commit" : "cc50aa9dfb2bf5c897bb3c4fee98c07886c30301",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +469,473 @@}\n\nfunc getStatsSupportedSubsytems(cgroupPaths map[string]string) (*libcontainercgroups.Stats, error) {\n\tstats := libcontainercgroups.NewStats()\n\tfor _, sys := range supportedSubsystems {"
  },
  {
    "id" : "cb2f64ff-ecf2-47d1-aea6-0538677b3f66",
    "prId" : 31546,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/31546#pullrequestreview-4533042",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "51faf178-6679-442b-b813-cb312ce07564",
        "parentId" : null,
        "authorId" : "2fa5a4c6-e0a7-4dbe-a80e-7770a5dc92a1",
        "body" : "Error is never returned, is it a TODO to validate that it was actually in the right form?\n",
        "createdAt" : "2016-10-11T20:36:07Z",
        "updatedAt" : "2016-11-02T12:07:19Z",
        "lastEditedBy" : "2fa5a4c6-e0a7-4dbe-a80e-7770a5dc92a1",
        "tags" : [
        ]
      },
      {
        "id" : "4389acfc-6748-4eb3-8086-c4b80c53773d",
        "parentId" : "51faf178-6679-442b-b813-cb312ce07564",
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "Added error checking for valid systemd unit types (service, slice, mount, etc.)\n",
        "createdAt" : "2016-10-17T18:41:08Z",
        "updatedAt" : "2016-11-02T12:07:19Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      }
    ],
    "commit" : "42289c27580ab7d7f5b8593600c86c7eb0845b34",
    "line" : null,
    "diffHunk" : "@@ -1,1 +85,89 @@// NOTE: this is public right now to allow its usage in dockermanager and dockershim, ideally both those\n// code areas could use something from libcontainer if we get this style function upstream.\nfunc ConvertCgroupFsNameToSystemd(cgroupfsName string) (string, error) {\n\t// TODO: see if libcontainer systemd implementation could use something similar, and if so, move\n\t// this function up to that library.  At that time, it would most likely do validation specific to systemd"
  },
  {
    "id" : "0b020707-0d09-43b3-ba97-dd2bad1f08c1",
    "prId" : 31546,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/31546#pullrequestreview-4534104",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "95af9013-9ddb-4159-b315-8f8a513c0c41",
        "parentId" : null,
        "authorId" : "2fa5a4c6-e0a7-4dbe-a80e-7770a5dc92a1",
        "body" : "let's get rid of the type conversion and just change the argument type. We can nix the managerType variable then too. Callers should probably also use the consts, rather than passing in strings.\n",
        "createdAt" : "2016-10-11T20:41:10Z",
        "updatedAt" : "2016-11-02T12:07:19Z",
        "lastEditedBy" : "2fa5a4c6-e0a7-4dbe-a80e-7770a5dc92a1",
        "tags" : [
        ]
      },
      {
        "id" : "f1343d86-dfc8-498e-b632-b0c7ed1b25b3",
        "parentId" : "95af9013-9ddb-4159-b315-8f8a513c0c41",
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "i am going to keep the input argument as is.  the idea is that this interface keeps you from needing to expose libcontainer concepts too much.  we can revisit it later if it proves problematic.  basically, i do not want to expose libcontainerCgroupAdapterType all the way up to cm.NodeConfig.CgroupDriver, so a conversion is needed somewhere.\n",
        "createdAt" : "2016-10-17T18:46:41Z",
        "updatedAt" : "2016-11-02T12:07:19Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      }
    ],
    "commit" : "42289c27580ab7d7f5b8593600c86c7eb0845b34",
    "line" : 153,
    "diffHunk" : "@@ -1,1 +179,183 @@func NewCgroupManager(cs *CgroupSubsystems, cgroupDriver string) CgroupManager {\n\tmanagerType := libcontainerCgroupfs\n\tif cgroupDriver == string(libcontainerSystemd) {\n\t\tmanagerType = libcontainerSystemd\n\t}"
  }
]