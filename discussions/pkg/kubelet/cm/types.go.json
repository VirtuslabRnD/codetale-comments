[
  {
    "id" : "3b6540dc-65a8-4e8f-bf37-67dea4052f6d",
    "prId" : 102218,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/102218#pullrequestreview-670024402",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ffbce4b5-f878-4ea9-a7d9-3e00c34d63f4",
        "parentId" : null,
        "authorId" : "b7c04289-77b0-4d05-90b7-3bde23e2b0bf",
        "body" : "Maybe specify that it is in bytes and not pages/kB/MB?",
        "createdAt" : "2021-05-22T07:54:26Z",
        "updatedAt" : "2021-05-22T07:54:26Z",
        "lastEditedBy" : "b7c04289-77b0-4d05-90b7-3bde23e2b0bf",
        "tags" : [
        ]
      },
      {
        "id" : "308bd734-e9fb-4a76-9e89-99c6b0a9f137",
        "parentId" : "ffbce4b5-f878-4ea9-a7d9-3e00c34d63f4",
        "authorId" : "b7ef7200-9e1a-419d-ac6a-a400c6c2164c",
        "body" : "Done. I have also removed that the value is read from cgroupfs as this is kind of obvious.",
        "createdAt" : "2021-05-24T03:55:08Z",
        "updatedAt" : "2021-05-24T03:55:08Z",
        "lastEditedBy" : "b7ef7200-9e1a-419d-ac6a-a400c6c2164c",
        "tags" : [
        ]
      },
      {
        "id" : "8a476251-2b27-4196-9d7b-dd443fcbcb5b",
        "parentId" : "ffbce4b5-f878-4ea9-a7d9-3e00c34d63f4",
        "authorId" : "b7c04289-77b0-4d05-90b7-3bde23e2b0bf",
        "body" : "This still reads `MemoryUsage returns current memory usage of the specified cgroup, as read from the cgroupfs.` tho.",
        "createdAt" : "2021-05-27T10:42:58Z",
        "updatedAt" : "2021-05-27T10:43:04Z",
        "lastEditedBy" : "b7c04289-77b0-4d05-90b7-3bde23e2b0bf",
        "tags" : [
        ]
      }
    ],
    "commit" : "f1aee7e049619f47cfec6e62fb15a2d0de7e1e67",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +79,83 @@\t// ReduceCPULimits reduces the CPU CFS values to the minimum amount of shares.\n\tReduceCPULimits(cgroupName CgroupName) error\n\t// MemoryUsage returns current memory usage of the specified cgroup, as read from the cgroupfs.\n\tMemoryUsage(name CgroupName) (int64, error)\n}"
  },
  {
    "id" : "2fe93c08-c176-4418-940c-64b98bc3d4b8",
    "prId" : 27853,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6e105d81-7897-415b-9a6e-4d09b6acaee6",
        "parentId" : null,
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "Question: Why is this required?\n",
        "createdAt" : "2016-06-23T22:58:46Z",
        "updatedAt" : "2016-07-15T17:02:57Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      },
      {
        "id" : "2b71fa48-d06b-4a23-b6db-949b43ad2e45",
        "parentId" : "6e105d81-7897-415b-9a6e-4d09b6acaee6",
        "authorId" : "3793cc73-3064-4ef2-a6f3-54e97eed898e",
        "body" : "I thought that this would be good have. Once the top level QOS containers are created they won't change. So we can store there names in the cm and it can be used for getting the absolute names of the pod containers. \n",
        "createdAt" : "2016-06-23T23:22:28Z",
        "updatedAt" : "2016-07-15T17:02:57Z",
        "lastEditedBy" : "3793cc73-3064-4ef2-a6f3-54e97eed898e",
        "tags" : [
        ]
      }
    ],
    "commit" : "5000e74664b58e278bfbfa28098dabc03fb7ae9b",
    "line" : null,
    "diffHunk" : "@@ -1,1 +59,63 @@\n// QOSContainersInfo hold the names of containers per qos\ntype QOSContainersInfo struct {\n\tGuaranteed string\n\tBestEffort string"
  },
  {
    "id" : "bb48c4ce-b438-4207-b990-54e50a12a6f9",
    "prId" : 27853,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7c6e93f0-263d-48a7-b676-dca1629e49da",
        "parentId" : null,
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "@vishh - we should think about returning summary stats per qos tier in kubelet summary api\n",
        "createdAt" : "2016-07-08T21:34:33Z",
        "updatedAt" : "2016-07-15T17:02:57Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      },
      {
        "id" : "18972fc6-a0d2-484e-b77e-14ba56c9e1f8",
        "parentId" : "7c6e93f0-263d-48a7-b676-dca1629e49da",
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "+1\n\nOn Fri, Jul 8, 2016 at 2:35 PM, Derek Carr notifications@github.com wrote:\n\n> In pkg/kubelet/cm/types.go\n> https://github.com/kubernetes/kubernetes/pull/27853#discussion_r70144463\n> :\n> \n> > @@ -54,3 +54,10 @@ type CgroupManager interface {\n> >     // Update cgroup configuration.\n> >     Update(*CgroupConfig) error\n> >  }\n> > +\n> > +// QOSContainersInfo hold the names of containers per qos\n> > +type QOSContainersInfo struct {\n> \n> @vishh https://github.com/vishh - we should think about returning\n> summary stats per qos tier in kubelet summary api\n> \n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> https://github.com/kubernetes/kubernetes/pull/27853/files/8134b9de63922520d329b09348c13f5cc110507e#r70144463,\n> or mute the thread\n> https://github.com/notifications/unsubscribe/AGvIKLZsWf-mnBjVGJQIJJ8scuzqTv5Dks5qTsKMgaJpZM4I7o6F\n> .\n",
        "createdAt" : "2016-07-08T22:17:24Z",
        "updatedAt" : "2016-07-15T17:02:57Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      }
    ],
    "commit" : "5000e74664b58e278bfbfa28098dabc03fb7ae9b",
    "line" : null,
    "diffHunk" : "@@ -1,1 +59,63 @@\n// QOSContainersInfo hold the names of containers per qos\ntype QOSContainersInfo struct {\n\tGuaranteed string\n\tBestEffort string"
  },
  {
    "id" : "3a5bf77b-7753-49c8-a164-f78e55d0aec5",
    "prId" : 27755,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "94280363-dd28-43a1-ac05-156211ec95d8",
        "parentId" : null,
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "I'd expect `CgroupManager` to be a global utility for creating and deleting multiple cgroups. \n",
        "createdAt" : "2016-06-21T17:47:07Z",
        "updatedAt" : "2016-06-26T22:42:00Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      },
      {
        "id" : "acd39e0b-1dee-4902-924c-1a5422273ae6",
        "parentId" : "94280363-dd28-43a1-ac05-156211ec95d8",
        "authorId" : "3793cc73-3064-4ef2-a6f3-54e97eed898e",
        "body" : "Okay. I thought we will have one manager per cgroup. Thats why no cgroupConfig in Create(). I will go ahead and make changes. \n",
        "createdAt" : "2016-06-21T18:13:43Z",
        "updatedAt" : "2016-06-26T22:42:00Z",
        "lastEditedBy" : "3793cc73-3064-4ef2-a6f3-54e97eed898e",
        "tags" : [
        ]
      }
    ],
    "commit" : "a5ead79d4362f9bc248fd95cdeef6beee96fb6a5",
    "line" : null,
    "diffHunk" : "@@ -1,1 +45,49 @@// CgroupManager allows for cgroup management.\n// Supports Cgroup Creation ,Deletion and Updates.\ntype CgroupManager interface {\n\t// Create creates and applies the cgroup configurations on the cgroup.\n\t// It just creates the leaf cgroups."
  },
  {
    "id" : "21f3687c-0c29-4740-b8cf-9dc1d0e0baac",
    "prId" : 27755,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7cdf4fd9-8db0-42cc-8953-30d7e98bd83e",
        "parentId" : null,
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "As part of the interface will you just create the leaf cgroups or the whole tree?\n",
        "createdAt" : "2016-06-23T22:56:12Z",
        "updatedAt" : "2016-06-26T22:42:00Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      },
      {
        "id" : "5babc01d-f111-4c28-9dba-d046d3ade643",
        "parentId" : "7cdf4fd9-8db0-42cc-8953-30d7e98bd83e",
        "authorId" : "3793cc73-3064-4ef2-a6f3-54e97eed898e",
        "body" : "I was thinking of just creating the leaf cgroups. I assume that we wont be passing paths where the parent directory doesn't already exist. Does that sound good?\n",
        "createdAt" : "2016-06-23T23:15:59Z",
        "updatedAt" : "2016-06-26T22:42:00Z",
        "lastEditedBy" : "3793cc73-3064-4ef2-a6f3-54e97eed898e",
        "tags" : [
        ]
      },
      {
        "id" : "a252ecc1-0eeb-47a6-bdba-cf2ef06ef5be",
        "parentId" : "7cdf4fd9-8db0-42cc-8953-30d7e98bd83e",
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "Yeah. That's fine. But mention that behavior explicitly.\n\nOn Thu, Jun 23, 2016 at 4:16 PM, Buddha Prakash notifications@github.com\nwrote:\n\n> In pkg/kubelet/cm/types.go\n> https://github.com/kubernetes/kubernetes/pull/27755#discussion_r68331833\n> :\n> \n> > -   // CPU hardcap limit (in usecs). Allowed cpu time in a given period.\n> > -   CpuQuota *int64\n> >   +}\n> >   +\n> >   +// CgroupConfig holds the cgroup configuration information.\n> >   +// This is common object which is used to specify\n> >   +// cgroup information to both systemd and raw cgroup fs\n> >   +// implementation of the Cgroup Manager interface.\n> >   +type CgroupConfig struct {\n> > -   // We would expect systemd implementation to make appropriate\n> > -   // name conversion. For example, if we pass /foo/bar\n> > -   // then systemd should convert the name to something like\n> > -   // foo.slice/foo-bar.slice\n> >   +\n> > -   // Fully qualified name\n> > -   Name string\n> \n> I was thinking of just creating the leaf cgroups. I assume that we wont be\n> passing paths where the parent directory doesn't already exist. Does that\n> sound good?\n> \n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> https://github.com/kubernetes/kubernetes/pull/27755/files/9b264a0fe89b04d775a58996df07e135b030cec6..773b7e7144cb41cbb65d45b4e902e3888636af17#r68331833,\n> or mute the thread\n> https://github.com/notifications/unsubscribe/AGvIKBRx1w6L7n3xpS-YdLs-QlqCMBqRks5qOxPTgaJpZM4I6XXz\n> .\n",
        "createdAt" : "2016-06-23T23:20:47Z",
        "updatedAt" : "2016-06-26T22:42:00Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      },
      {
        "id" : "c79d2278-0a67-4f4e-ab9e-7cf18158125c",
        "parentId" : "7cdf4fd9-8db0-42cc-8953-30d7e98bd83e",
        "authorId" : "3793cc73-3064-4ef2-a6f3-54e97eed898e",
        "body" : "Ack! Thanks.\n",
        "createdAt" : "2016-06-23T23:29:45Z",
        "updatedAt" : "2016-06-26T22:42:00Z",
        "lastEditedBy" : "3793cc73-3064-4ef2-a6f3-54e97eed898e",
        "tags" : [
        ]
      }
    ],
    "commit" : "a5ead79d4362f9bc248fd95cdeef6beee96fb6a5",
    "line" : 40,
    "diffHunk" : "@@ -1,1 +38,42 @@\n\t// Fully qualified name\n\tName string\n\t// ResourceParameters contains various cgroups settings to apply.\n\tResourceParameters *ResourceConfig"
  }
]