[
  {
    "id" : "ed8fdc62-8c68-40a8-a309-e3dec77316a3",
    "prId" : 101893,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/101893#pullrequestreview-664086643",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e9851326-66e4-42ec-b5da-44de6a5543e7",
        "parentId" : null,
        "authorId" : "154a8533-a24d-4af9-81fb-0e2db0a9acf3",
        "body" : "Not a fan of this: in general we should always test public interfaces (and fix the interface accordingly if it is too hard), but in this case it makes sense.\r\n",
        "createdAt" : "2021-05-18T12:13:40Z",
        "updatedAt" : "2021-05-18T12:13:41Z",
        "lastEditedBy" : "154a8533-a24d-4af9-81fb-0e2db0a9acf3",
        "tags" : [
        ]
      },
      {
        "id" : "46258bc7-00a5-4b3d-8930-496781b7987d",
        "parentId" : "e9851326-66e4-42ec-b5da-44de6a5543e7",
        "authorId" : "f8ff358e-6e82-4c4a-8e8d-1762e3e64388",
        "body" : "aha, I think we can do this by extending code in TestPodContainerDeviceAllocation, let me try",
        "createdAt" : "2021-05-18T13:25:15Z",
        "updatedAt" : "2021-05-18T13:26:08Z",
        "lastEditedBy" : "f8ff358e-6e82-4c4a-8e8d-1762e3e64388",
        "tags" : [
        ]
      },
      {
        "id" : "4d7825bb-7fa7-40eb-8bd1-40bbcb0dbcce",
        "parentId" : "e9851326-66e4-42ec-b5da-44de6a5543e7",
        "authorId" : "154a8533-a24d-4af9-81fb-0e2db0a9acf3",
        "body" : "If you have the chance please do. Reusing/extending existing testing infra (which should also something @klueska suggested IIUC) and testing against the public interface is something that almost always is a good direction.",
        "createdAt" : "2021-05-18T13:29:49Z",
        "updatedAt" : "2021-05-18T13:29:49Z",
        "lastEditedBy" : "154a8533-a24d-4af9-81fb-0e2db0a9acf3",
        "tags" : [
        ]
      },
      {
        "id" : "02ec7301-8120-45bd-b915-05e8ea786d1b",
        "parentId" : "e9851326-66e4-42ec-b5da-44de6a5543e7",
        "authorId" : "f8ff358e-6e82-4c4a-8e8d-1762e3e64388",
        "body" : "@fromanirh  I tried but found it too hard to reproduce the problem steadily by testing the public `Allocate()`interface  like in `TestPodContainerDeviceAllocation()`, the problem is that we are using sets.String{} to store the filter results, and the sequence produced by a loop of sets.String{} is random:\r\n\r\nhttps://github.com/kubernetes/kubernetes/blob/7ccd90e7d7c6d727a7497c901c45776592ec5e45/pkg/kubelet/cm/devicemanager/manager.go#L675-L685\r\n\r\nalso`devicesToAllocate()` will collect devices from all the filter results: aligned, unaligned, noAffinity: \r\n\r\nhttps://github.com/kubernetes/kubernetes/blob/7ccd90e7d7c6d727a7497c901c45776592ec5e45/pkg/kubelet/cm/devicemanager/manager.go#L706-L750\r\n\r\nso the result is nondeterministic: I got 74 failed results when I run the single test for 1024 times. In another way, making `filterByAffinity()` a public interface does not seems like a good idea, any better suggestion?",
        "createdAt" : "2021-05-18T15:08:58Z",
        "updatedAt" : "2021-05-18T15:10:15Z",
        "lastEditedBy" : "f8ff358e-6e82-4c4a-8e8d-1762e3e64388",
        "tags" : [
        ]
      },
      {
        "id" : "2cb81b35-83dc-4a28-a45d-576ee4d0efe7",
        "parentId" : "e9851326-66e4-42ec-b5da-44de6a5543e7",
        "authorId" : "154a8533-a24d-4af9-81fb-0e2db0a9acf3",
        "body" : "in this case testing the private method, lacking better approaches, is OK with me.\r\nIn general I'd like to review later on if we need to use `sets.String` or if a simple ordered `[]string` could suffice and enable better testing. Not blocking for this PR anyway.",
        "createdAt" : "2021-05-20T08:23:14Z",
        "updatedAt" : "2021-05-20T08:36:52Z",
        "lastEditedBy" : "154a8533-a24d-4af9-81fb-0e2db0a9acf3",
        "tags" : [
        ]
      }
    ],
    "commit" : "c0a7939cbb2a5d4987778e9d478db8f47b164a28",
    "line" : 97,
    "diffHunk" : "@@ -1,1 +753,757 @@\n\tfor _, testCase := range testCases {\n\t\tfromAffinity, notFromAffinity, withoutTopology := testManager.filterByAffinity(\"\", \"\", \"res1\", testCase.available)\n\t\tas.Truef(fromAffinity.Equal(testCase.fromAffinityExpected), \"expect devices from affinity to be %v but got %v\", testCase.fromAffinityExpected, fromAffinity)\n\t\tas.Truef(notFromAffinity.Equal(testCase.notFromAffinityExpected), \"expect devices not from affinity to be %v but got %v\", testCase.notFromAffinityExpected, notFromAffinity)"
  },
  {
    "id" : "ace318be-b441-4302-8159-fb14ee7b0eb9",
    "prId" : 101893,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/101893#pullrequestreview-664086643",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "42339cac-f61a-4db1-9d35-b3fe472047f9",
        "parentId" : null,
        "authorId" : "154a8533-a24d-4af9-81fb-0e2db0a9acf3",
        "body" : "not sure we need the logs, but won't hurt either",
        "createdAt" : "2021-05-20T08:28:45Z",
        "updatedAt" : "2021-05-20T08:36:52Z",
        "lastEditedBy" : "154a8533-a24d-4af9-81fb-0e2db0a9acf3",
        "tags" : [
        ]
      }
    ],
    "commit" : "c0a7939cbb2a5d4987778e9d478db8f47b164a28",
    "line" : 112,
    "diffHunk" : "@@ -1,1 +768,772 @@func NewFakeTopologyManagerWithHint(t *testing.T, hint *topologymanager.TopologyHint) topologymanager.Manager {\n\treturn &fakeTopologyManagerWithHint{\n\t\tt:    t,\n\t\thint: hint,\n\t}"
  },
  {
    "id" : "74448fcb-0f9a-4b42-9d18-9e4b6fdc2d61",
    "prId" : 97193,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/97193#pullrequestreview-553847699",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "02ee2397-c906-42d5-8846-5224c9ffcfc7",
        "parentId" : null,
        "authorId" : "8eff55b7-2f52-4dd6-b8a6-b75a1c427179",
        "body" : "This change seems OK -- just curious if you know exactly why the order matters here.",
        "createdAt" : "2020-12-16T13:43:59Z",
        "updatedAt" : "2020-12-16T13:45:58Z",
        "lastEditedBy" : "8eff55b7-2f52-4dd6-b8a6-b75a1c427179",
        "tags" : [
        ]
      },
      {
        "id" : "5754ad15-07f5-40a1-808a-4df4b9e151f2",
        "parentId" : "02ee2397-c906-42d5-8846-5224c9ffcfc7",
        "authorId" : "5c4757f6-5a7a-438b-b77f-778928cb6979",
        "body" : "See the explain before.  Previous order may cause  device-plugin.sock add twice.  \r\n\r\none is from \r\nhttps://github.com/kubernetes/kubernetes/blob/970b532379b2b1d0b1352f960fd7f88f0726123e/pkg/kubelet/pluginmanager/pluginwatcher/plugin_watcher.go#L71-L80\r\n\r\nanother is from\r\nhttps://github.com/kubernetes/kubernetes/blob/970b532379b2b1d0b1352f960fd7f88f0726123e/pkg/kubelet/pluginmanager/pluginwatcher/plugin_watcher.go#L119-L145",
        "createdAt" : "2020-12-16T14:07:54Z",
        "updatedAt" : "2020-12-16T14:07:54Z",
        "lastEditedBy" : "5c4757f6-5a7a-438b-b77f-778928cb6979",
        "tags" : [
        ]
      },
      {
        "id" : "1ac35474-3475-41cc-96b1-e4faf2411ba4",
        "parentId" : "02ee2397-c906-42d5-8846-5224c9ffcfc7",
        "authorId" : "8eff55b7-2f52-4dd6-b8a6-b75a1c427179",
        "body" : "Makes sense. Thanks for clarifying",
        "createdAt" : "2020-12-16T16:12:47Z",
        "updatedAt" : "2020-12-16T16:12:48Z",
        "lastEditedBy" : "8eff55b7-2f52-4dd6-b8a6-b75a1c427179",
        "tags" : [
        ]
      }
    ],
    "commit" : "93606f8ba3f6c83fad5a4d56562e80d0c41e919b",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +284,288 @@\tm, updateChan := setupDeviceManager(t, devs, callback, socketName)\n\tp := setupDevicePlugin(t, devs, pluginSocketName)\n\tpm := setupPluginManager(t, pluginSocketName, m)\n\treturn m, updateChan, p, pm\n}"
  },
  {
    "id" : "464309cd-595e-4219-bbc1-51da383df2b0",
    "prId" : 60034,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/60034#pullrequestreview-116362355",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4a396d12-9505-489f-862b-28dcc33d0a2f",
        "parentId" : null,
        "authorId" : "611b3189-700b-4eda-8a2a-2c4280218d7c",
        "body" : "Why do we need to call cleanup(t, m, p) twice here?",
        "createdAt" : "2018-04-30T17:09:46Z",
        "updatedAt" : "2018-04-30T17:11:03Z",
        "lastEditedBy" : "611b3189-700b-4eda-8a2a-2c4280218d7c",
        "tags" : [
        ]
      }
    ],
    "commit" : "fcbb64b93dfb633f880bad9ed1771201843b8e7e",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +71,75 @@\tcleanup(t, m, p)\n\t// Stop should tolerate being called more than once.\n\tcleanup(t, m, p)\n}\n"
  },
  {
    "id" : "037c7c11-6996-4529-b313-daa86fb0dea3",
    "prId" : 59489,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/59489#pullrequestreview-95420046",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1d92f008-9bd2-458a-8c89-d7926df47b89",
        "parentId" : null,
        "authorId" : "51f59c69-efc0-451a-bd8f-d9fa2c281fd3",
        "body" : "Would it be better to get a unique directory here using timestamp based suffix.\r\n```golang\r\ntmpDir, err := ioutil.TempDir(\"\", \"device_plugin\"+fmt.Sprintf(\"%d\", time.Now().Unix()))\r\n```\r\nAnd then use this in the setup(). Since there can be several setup() invocations in parallel and setup() calls `m.Start()` which eventually invokes removeContents, setup() should pass unique socket directory to the NewManagerImpl(). \r\n\r\nI was also getting hit by this issue in one of my recent PRs, so had to fix it to get pass CI. \r\nPTAL: https://github.com/kubernetes/kubernetes/pull/58282/files#diff-43065351e4d615ab85a172e2f819a8d0R217",
        "createdAt" : "2018-02-09T09:00:26Z",
        "updatedAt" : "2018-02-09T19:52:36Z",
        "lastEditedBy" : "51f59c69-efc0-451a-bd8f-d9fa2c281fd3",
        "tags" : [
        ]
      },
      {
        "id" : "0af2a2e6-a353-41ea-aa03-98dd49ffc59a",
        "parentId" : "1d92f008-9bd2-458a-8c89-d7926df47b89",
        "authorId" : "ac146833-f0d6-4680-968a-749269c0d55d",
        "body" : "**Tempdir:**\r\nTempDir creates a new temporary directory in the directory dir with a name beginning with prefix and returns the path of the new directory. If dir is the empty string, TempDir uses the default directory for temporary files (see os.TempDir). Multiple programs calling TempDir simultaneously will not choose the same directory. It is the caller's responsibility to remove the directory when no longer needed.\r\n\r\n",
        "createdAt" : "2018-02-09T13:34:18Z",
        "updatedAt" : "2018-02-09T19:52:36Z",
        "lastEditedBy" : "ac146833-f0d6-4680-968a-749269c0d55d",
        "tags" : [
        ]
      }
    ],
    "commit" : "0d828e061b5600082ccbb6bee04f064d37bc695b",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +46,50 @@\nfunc tmpSocketDir() (socketDir, socketName, pluginSocketName string, err error) {\n\tsocketDir, err = ioutil.TempDir(\"\", \"device_plugin\")\n\tif err != nil {\n\t\treturn"
  },
  {
    "id" : "90ec2522-c28e-4aec-93dd-4f875c6cc80a",
    "prId" : 59489,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/59489#pullrequestreview-95466850",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "11f07c71-f843-4e5e-9e5a-97b60f21d3dc",
        "parentId" : null,
        "authorId" : "51f59c69-efc0-451a-bd8f-d9fa2c281fd3",
        "body" : "same as above",
        "createdAt" : "2018-02-09T11:32:43Z",
        "updatedAt" : "2018-02-09T19:52:36Z",
        "lastEditedBy" : "51f59c69-efc0-451a-bd8f-d9fa2c281fd3",
        "tags" : [
        ]
      },
      {
        "id" : "847335d9-ee58-4b2c-b203-66dec08d36a5",
        "parentId" : "11f07c71-f843-4e5e-9e5a-97b60f21d3dc",
        "authorId" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "body" : "Is this comment perhaps attached to the wrong line? If it was related to \".TestDevicePluginReRegistration.third\", then I fixed that.\r\n\r\nIf the comment really was about the setup() line, then I don't understand what I should change here.",
        "createdAt" : "2018-02-09T12:57:42Z",
        "updatedAt" : "2018-02-09T19:52:36Z",
        "lastEditedBy" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "tags" : [
        ]
      },
      {
        "id" : "b6f846a8-3c59-4cda-91f5-304676a7555c",
        "parentId" : "11f07c71-f843-4e5e-9e5a-97b60f21d3dc",
        "authorId" : "51f59c69-efc0-451a-bd8f-d9fa2c281fd3",
        "body" : "you got it right. comment on wrong line.",
        "createdAt" : "2018-02-09T15:55:13Z",
        "updatedAt" : "2018-02-09T19:52:36Z",
        "lastEditedBy" : "51f59c69-efc0-451a-bd8f-d9fa2c281fd3",
        "tags" : [
        ]
      }
    ],
    "commit" : "0d828e061b5600082ccbb6bee04f064d37bc695b",
    "line" : 111,
    "diffHunk" : "@@ -1,1 +148,152 @@}\n\nfunc setup(t *testing.T, devs []*pluginapi.Device, callback monitorCallback, socketName string, pluginSocketName string) (Manager, *Stub) {\n\tm, err := newManagerImpl(socketName)\n\trequire.NoError(t, err)"
  },
  {
    "id" : "5580db39-c55d-4efe-b654-b635367d7659",
    "prId" : 59489,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/59489#pullrequestreview-95391413",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5453383a-7528-4ada-a51c-b72b8e64bec8",
        "parentId" : null,
        "authorId" : "51f59c69-efc0-451a-bd8f-d9fa2c281fd3",
        "body" : "Hope you wont mind adding couple of another minor changes as well. Can you please replace all `<-callbackChan` with : \r\n```golang\r\n\tselect {\r\n \tcase <-callbackChan:\r\n \t\tbreak\r\n \tcase <-time.After(time.Second):\r\n \t\tt.FailNow()\r\n }\r\n```\r\n```",
        "createdAt" : "2018-02-09T11:37:08Z",
        "updatedAt" : "2018-02-09T19:52:36Z",
        "lastEditedBy" : "51f59c69-efc0-451a-bd8f-d9fa2c281fd3",
        "tags" : [
        ]
      }
    ],
    "commit" : "0d828e061b5600082ccbb6bee04f064d37bc695b",
    "line" : 73,
    "diffHunk" : "@@ -1,1 +108,112 @@\t}\n\tdevices := m.Devices()\n\trequire.Equal(t, 2, len(devices[testResourceName]), \"Devices are not updated.\")\n\n\tp2 := NewDevicePluginStub(devs, pluginSocketName+\".new\")"
  },
  {
    "id" : "b206a89b-beac-44c5-93e5-b60d1caefd1d",
    "prId" : 59489,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/59489#pullrequestreview-95539935",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0e1ef68e-ca97-4197-a34e-141081788576",
        "parentId" : null,
        "authorId" : "ac146833-f0d6-4680-968a-749269c0d55d",
        "body" : "Wondering if we should have a [TestMain](http://cs-guy.com/blog/2015/01/test-main/) function here.\r\nThat would prevent writing this setup and teardown code each time.\r\n\r\nWhat do you think?",
        "createdAt" : "2018-02-09T16:54:49Z",
        "updatedAt" : "2018-02-09T19:52:36Z",
        "lastEditedBy" : "ac146833-f0d6-4680-968a-749269c0d55d",
        "tags" : [
        ]
      },
      {
        "id" : "410e85d5-fba3-436d-83a1-142145bc9cd2",
        "parentId" : "0e1ef68e-ca97-4197-a34e-141081788576",
        "authorId" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "body" : "The problem in issue #59488 seemed to be that different tests in the same test program share the same socket dir and somehow interfere with each other. I am all ears if someone can explain why that happens, because it has not become clear to me.\r\n\r\nIf we use TestMain, we end up in the same situation and issue #59488 will probably occur again.\r\n\r\nIf it wasn't for that I'd agree with you, TestMain would be more suitable than the per-test boiler plate code.",
        "createdAt" : "2018-02-09T19:44:04Z",
        "updatedAt" : "2018-02-09T19:52:36Z",
        "lastEditedBy" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "tags" : [
        ]
      }
    ],
    "commit" : "0d828e061b5600082ccbb6bee04f064d37bc695b",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +56,60 @@\nfunc TestNewManagerImpl(t *testing.T) {\n\tsocketDir, socketName, _, err := tmpSocketDir()\n\trequire.NoError(t, err)\n\tdefer os.RemoveAll(socketDir)"
  },
  {
    "id" : "9ce61cc3-3e97-40f6-83c7-ecdb96e818a7",
    "prId" : 58755,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/58755#pullrequestreview-130823146",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "07ffcd8a-9404-4a2c-b49c-620bde1a1062",
        "parentId" : null,
        "authorId" : "ac146833-f0d6-4680-968a-749269c0d55d",
        "body" : "Do you mind using Fatal rather than Failnow?\r\nFailnow only marks the test as failed without printing a backtrace.",
        "createdAt" : "2018-06-30T16:22:49Z",
        "updatedAt" : "2018-07-17T08:03:57Z",
        "lastEditedBy" : "ac146833-f0d6-4680-968a-749269c0d55d",
        "tags" : [
        ]
      }
    ],
    "commit" : "a5842503eb6932f72c3e14f6bf47c6bc65a0a87f",
    "line" : 146,
    "diffHunk" : "@@ -1,1 +195,199 @@\t\tbreak\n\tcase <-time.After(time.Second):\n\t\tt.FailNow()\n\t}\n\tdevices := m.Devices()"
  },
  {
    "id" : "c2e75d4a-166e-436e-8392-bb0e534a1a67",
    "prId" : 58282,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/58282#pullrequestreview-97780362",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "edcc59d9-6845-483e-991d-4ea761eda958",
        "parentId" : null,
        "authorId" : "ac146833-f0d6-4680-968a-749269c0d55d",
        "body" : "Use t.Fatal(). FailNow doesn't display the line where the test failed and doesn't allow to specify a failure message.",
        "createdAt" : "2018-02-19T13:33:47Z",
        "updatedAt" : "2018-02-21T06:26:38Z",
        "lastEditedBy" : "ac146833-f0d6-4680-968a-749269c0d55d",
        "tags" : [
        ]
      },
      {
        "id" : "7784f299-d63e-442c-a25d-1c72c2866991",
        "parentId" : "edcc59d9-6845-483e-991d-4ea761eda958",
        "authorId" : "51f59c69-efc0-451a-bd8f-d9fa2c281fd3",
        "body" : "This part is not being newly added in this PR. Such improvements we can do in individual PRs.",
        "createdAt" : "2018-02-19T17:19:38Z",
        "updatedAt" : "2018-02-21T06:26:38Z",
        "lastEditedBy" : "51f59c69-efc0-451a-bd8f-d9fa2c281fd3",
        "tags" : [
        ]
      },
      {
        "id" : "bb0a08f0-c7dc-45d8-b05f-c00d61ad1e90",
        "parentId" : "edcc59d9-6845-483e-991d-4ea761eda958",
        "authorId" : "ac146833-f0d6-4680-968a-749269c0d55d",
        "body" : "However the 5 FailNow() (4 existing one added) of this file are being affected by this PR.\r\nCan you change them?",
        "createdAt" : "2018-02-19T22:41:26Z",
        "updatedAt" : "2018-02-21T06:26:38Z",
        "lastEditedBy" : "ac146833-f0d6-4680-968a-749269c0d55d",
        "tags" : [
        ]
      },
      {
        "id" : "02fe177e-a10f-424a-a4f0-c12f2753f0c2",
        "parentId" : "edcc59d9-6845-483e-991d-4ea761eda958",
        "authorId" : "51f59c69-efc0-451a-bd8f-d9fa2c281fd3",
        "body" : "I can count 4 FailNow() in existing file:\r\nhttps://github.com/kubernetes/kubernetes/blob/master/pkg/kubelet/cm/devicemanager/manager_test.go\r\n\r\nAdditionally, I would prefer test cases to continue to run and get a list of all unit test failures at end in one iteration. \r\n",
        "createdAt" : "2018-02-20T03:11:45Z",
        "updatedAt" : "2018-02-21T06:26:38Z",
        "lastEditedBy" : "51f59c69-efc0-451a-bd8f-d9fa2c281fd3",
        "tags" : [
        ]
      },
      {
        "id" : "32ef8093-12f1-4440-afaa-7bb95d5656fe",
        "parentId" : "edcc59d9-6845-483e-991d-4ea761eda958",
        "authorId" : "ac146833-f0d6-4680-968a-749269c0d55d",
        "body" : "> I can count 4 FailNow() in existing file:\r\n\r\nBecause you are adding the 5th one.\r\n\r\n> Additionally, I would prefer test cases to continue to run and get a list of all unit test failures at end in one iteration.\r\n\r\nThe point of the FailNow() here is that the test is stuck waiting for a channel. If you don't FailNow your test will never finish.\r\nThe problem we have right now witht FailNow() is that it doesn't print a backtrace or an error it just exits the test.\r\nCan you replace the FailNow() your PR is affecting by a t.Fatal()?",
        "createdAt" : "2018-02-20T10:53:11Z",
        "updatedAt" : "2018-02-21T06:26:38Z",
        "lastEditedBy" : "ac146833-f0d6-4680-968a-749269c0d55d",
        "tags" : [
        ]
      }
    ],
    "commit" : "e64517cd7410166b01642efeb4a8d0374e236153",
    "line" : 48,
    "diffHunk" : "@@ -1,1 +107,111 @@\t\t\tbreak\n\t\tcase <-time.After(time.Second):\n\t\t\tt.FailNow()\n\t\t}\n\t\tdevices := m.Devices()"
  },
  {
    "id" : "a3f3b6b6-4e5b-4e57-a239-863f573b1da6",
    "prId" : 58282,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/58282#pullrequestreview-95239262",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6534e1d9-2a92-499e-b5b2-2408253b67b6",
        "parentId" : null,
        "authorId" : "ac146833-f0d6-4680-968a-749269c0d55d",
        "body" : "You should also check the length of initializedDevs",
        "createdAt" : "2018-02-19T14:04:01Z",
        "updatedAt" : "2018-02-21T06:26:38Z",
        "lastEditedBy" : "ac146833-f0d6-4680-968a-749269c0d55d",
        "tags" : [
        ]
      }
    ],
    "commit" : "e64517cd7410166b01642efeb4a8d0374e236153",
    "line" : 322,
    "diffHunk" : "@@ -1,1 +771,775 @@\t}\n\n\tas.Contains(initializedDevs, \"dev1\")\n\tas.Contains(initializedDevs, \"dev2\")\n\tas.Equal(len(initializedDevs), len(res1.devs))"
  }
]