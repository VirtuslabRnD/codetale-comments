[
  {
    "id" : "e3747d9a-890c-4c53-b7e5-e9cd4df0e2cf",
    "prId" : 91366,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/91366#pullrequestreview-436382664",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d4959957-6b51-4e00-9da3-276d05b6d963",
        "parentId" : null,
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "this isnt clear to me.",
        "createdAt" : "2020-06-16T20:10:56Z",
        "updatedAt" : "2020-06-24T16:40:09Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      },
      {
        "id" : "23d47dd4-d80c-4620-a768-60f476fae114",
        "parentId" : "d4959957-6b51-4e00-9da3-276d05b6d963",
        "authorId" : "b3fe9735-08f4-4c07-a325-0279623e8b9b",
        "body" : "this change is required for re-vendoring cAdvisor.  It won't collect any fs stats if there is no `cadvisormetrics.DiskUsageMetrics` specified.\r\n\r\nThis behaviour was changed with https://github.com/google/cadvisor/commit/e3affc1b79faa2901d7210948e92a5416166eb28",
        "createdAt" : "2020-06-16T20:24:38Z",
        "updatedAt" : "2020-06-24T16:40:09Z",
        "lastEditedBy" : "b3fe9735-08f4-4c07-a325-0279623e8b9b",
        "tags" : [
        ]
      },
      {
        "id" : "34474c4d-258c-40b3-99e7-c444b48c0a90",
        "parentId" : "d4959957-6b51-4e00-9da3-276d05b6d963",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "this feature is on by default... this effectively makes the default cadvisor config always include disk usage metrics. is that expected?",
        "createdAt" : "2020-06-24T04:23:00Z",
        "updatedAt" : "2020-06-24T16:40:09Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "e02cbc61-fa94-4bbf-a76a-27c9ab98e01f",
        "parentId" : "d4959957-6b51-4e00-9da3-276d05b6d963",
        "authorId" : "b3fe9735-08f4-4c07-a325-0279623e8b9b",
        "body" : "without this change, cAdvisor won't collect any fs stats: https://github.com/google/cadvisor/commit/e3affc1b79faa2901d7210948e92a5416166eb28#diff-061d1d5fc291bd4b18893f2ea01457ccR191-R194\r\n\r\nThat is expected given the change of behaviour in cAdvisor but it would be probably better to fix it in cAdvisor and have a way to retrieve only the global fs info.",
        "createdAt" : "2020-06-24T07:14:46Z",
        "updatedAt" : "2020-06-24T16:40:09Z",
        "lastEditedBy" : "b3fe9735-08f4-4c07-a325-0279623e8b9b",
        "tags" : [
        ]
      }
    ],
    "commit" : "5d6dc8d19ce9209fa1e21e587996626f784ebc6a",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +99,103 @@\t\tcadvisormetrics.ProcessMetrics:          struct{}{},\n\t}\n\tif usingLegacyStats || utilfeature.DefaultFeatureGate.Enabled(kubefeatures.LocalStorageCapacityIsolation) {\n\t\tincludedMetrics[cadvisormetrics.DiskUsageMetrics] = struct{}{}\n\t}"
  },
  {
    "id" : "1fcfe426-015e-43ab-b235-63002a2d96a0",
    "prId" : 84331,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/84331#pullrequestreview-307229454",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5c0eea99-2163-494b-a088-3cdd34830cb9",
        "parentId" : null,
        "authorId" : "d7870cae-47b0-4c8e-8527-be8fc4be86de",
        "body" : "Out of curiosity, do you know why these weren't included before? Did we just forget?",
        "createdAt" : "2019-10-25T14:08:35Z",
        "updatedAt" : "2019-10-25T14:10:59Z",
        "lastEditedBy" : "d7870cae-47b0-4c8e-8527-be8fc4be86de",
        "tags" : [
        ]
      }
    ],
    "commit" : "cc35d588a74af08f41a328e55ccb7a10ff3fcbc2",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +95,99 @@\t\tcadvisormetrics.AcceleratorUsageMetrics: struct{}{},\n\t\tcadvisormetrics.AppMetrics:              struct{}{},\n\t\tcadvisormetrics.ProcessMetrics:          struct{}{},\n\t}\n\tif usingLegacyStats {"
  },
  {
    "id" : "0adb2a43-e7aa-4170-9261-cd5894bd7b21",
    "prId" : 84331,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/84331#pullrequestreview-314534585",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8124ae05-e4f7-4b90-9b26-27aedbdd974b",
        "parentId" : null,
        "authorId" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "body" : "What about PerCpuUsageMetrics ?\r\nI wonder if it should be added as well.",
        "createdAt" : "2019-11-09T02:10:11Z",
        "updatedAt" : "2019-11-09T02:10:11Z",
        "lastEditedBy" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "cc35d588a74af08f41a328e55ccb7a10ff3fcbc2",
    "line" : 3,
    "diffHunk" : "@@ -1,1 +94,98 @@\t\tcadvisormetrics.NetworkUsageMetrics:     struct{}{},\n\t\tcadvisormetrics.AcceleratorUsageMetrics: struct{}{},\n\t\tcadvisormetrics.AppMetrics:              struct{}{},\n\t\tcadvisormetrics.ProcessMetrics:          struct{}{},\n\t}"
  },
  {
    "id" : "a87ffa43-0b1b-4448-b683-f6f5d4652acf",
    "prId" : 50712,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/50712#pullrequestreview-56523076",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "82484068-4da2-4f98-9951-1e705225069f",
        "parentId" : null,
        "authorId" : "3c1422a0-6358-4857-8f56-961979171514",
        "body" : "@dims Refer to comment in [#50709](https://github.com/kubernetes/kubernetes/issues/50709#issuecomment-322646497).",
        "createdAt" : "2017-08-16T02:25:58Z",
        "updatedAt" : "2017-08-20T00:41:45Z",
        "lastEditedBy" : "3c1422a0-6358-4857-8f56-961979171514",
        "tags" : [
        ]
      },
      {
        "id" : "6b8254ac-3aaa-43f3-8d23-ac8347caff5e",
        "parentId" : "82484068-4da2-4f98-9951-1e705225069f",
        "authorId" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "body" : "@dixudx replied there, i'd prefer not to remove the \"extra\" MkdirAll ",
        "createdAt" : "2017-08-16T03:33:09Z",
        "updatedAt" : "2017-08-20T00:41:45Z",
        "lastEditedBy" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "ca2d5178aa60ad20f230fa545f0fa156f5d37bd6",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +110,114 @@\tif _, err := os.Stat(rootPath); err != nil {\n\t\tif os.IsNotExist(err) {\n\t\t\tif err := os.MkdirAll(path.Clean(rootPath), 0750); err != nil {\n\t\t\t\treturn nil, fmt.Errorf(\"error creating root directory %q: %v\", rootPath, err)\n\t\t\t}"
  },
  {
    "id" : "ddf4b7dd-42d9-40e9-ae54-1615a7060376",
    "prId" : 48123,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/48123#pullrequestreview-46692951",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d0692fc0-b592-4fdd-9a60-85782b544962",
        "parentId" : null,
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "I am ok with this for now, but for the record, this would need to move back to a higher level package (again) once we let the runtime report imagefs info through CRI. ",
        "createdAt" : "2017-06-27T22:21:47Z",
        "updatedAt" : "2017-06-28T01:45:26Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "82f782006604f3eec8c59204df5c54178037f38a",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +228,232 @@\n// HasDedicatedImageFs returns true if the imagefs has a dedicated device.\nfunc (cc *cadvisorClient) HasDedicatedImageFs() (bool, error) {\n\timageFsInfo, err := cc.ImagesFsInfo()\n\tif err != nil {"
  },
  {
    "id" : "26a7bc50-68ee-4753-908b-1ea6ba370691",
    "prId" : 44068,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/44068#pullrequestreview-31365512",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5e275792-4e37-4359-a8cb-b7b2fb3b85e0",
        "parentId" : null,
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "Why removing the error check?",
        "createdAt" : "2017-04-06T00:54:59Z",
        "updatedAt" : "2017-04-27T16:47:44Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "afe4861c-9afc-4215-aee3-3f8e7e7d4fc5",
        "parentId" : "5e275792-4e37-4359-a8cb-b7b2fb3b85e0",
        "authorId" : "5a764df5-fdf3-4b03-8549-b0e2d9c30dad",
        "body" : "that's because in recent version there is change in NewRealSysFS function, check this out for more information - https://github.com/google/cadvisor/pull/1578",
        "createdAt" : "2017-04-06T06:01:32Z",
        "updatedAt" : "2017-04-27T16:47:44Z",
        "lastEditedBy" : "5a764df5-fdf3-4b03-8549-b0e2d9c30dad",
        "tags" : [
        ]
      },
      {
        "id" : "8f51d538-b26a-4c9d-998b-09473aec3324",
        "parentId" : "5e275792-4e37-4359-a8cb-b7b2fb3b85e0",
        "authorId" : "98677041-8dd3-472f-8583-94ee9e37145c",
        "body" : "Gotta love empty structs :-)\r\n ",
        "createdAt" : "2017-04-06T13:02:18Z",
        "updatedAt" : "2017-04-27T16:47:44Z",
        "lastEditedBy" : "98677041-8dd3-472f-8583-94ee9e37145c",
        "tags" : [
        ]
      },
      {
        "id" : "c36a3b61-7f23-401a-829e-c1e14564e61b",
        "parentId" : "5e275792-4e37-4359-a8cb-b7b2fb3b85e0",
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "Ah I see. I reviewed only the second commit, hence the question. ",
        "createdAt" : "2017-04-06T16:33:44Z",
        "updatedAt" : "2017-04-27T16:47:44Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "1df3bb25dcfec67a8699a4507e808101a71d557d",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +96,100 @@// New creates a cAdvisor and exports its API on the specified port if port > 0.\nfunc New(port uint, runtime string, rootPath string) (Interface, error) {\n\tsysFs := sysfs.NewRealSysFs()\n\n\t// Create and start the cAdvisor container manager."
  },
  {
    "id" : "fc51e1f1-9e49-4b56-bf94-726829998636",
    "prId" : 31064,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c7aeb4ad-f8b1-467b-b36c-009aa3aefc32",
        "parentId" : null,
        "authorId" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "body" : "Any reason for not including `KubernetesPodUIDLabel`?\n",
        "createdAt" : "2016-08-22T21:47:35Z",
        "updatedAt" : "2016-08-22T23:44:37Z",
        "lastEditedBy" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "tags" : [
        ]
      },
      {
        "id" : "06257cac-0a99-48bf-8386-4284c5761596",
        "parentId" : "c7aeb4ad-f8b1-467b-b36c-009aa3aefc32",
        "authorId" : "899255b8-f4b6-40d8-86f5-3cb2e624310b",
        "body" : "I've mentioned this in the PR description. Every additional label makes it a bit harder to work with the metrics. As id and pod_name are already unique, I didn't see the benefit of adding yet another label for the same purpose. Additionally, the pod UID is also part of the name label.\n\nMore explanation on [Target Labels should be Minimal](http://www.robustperception.io/target-labels-are-for-life-not-just-for-christmas/).\n",
        "createdAt" : "2016-08-22T22:20:14Z",
        "updatedAt" : "2016-08-22T23:44:37Z",
        "lastEditedBy" : "899255b8-f4b6-40d8-86f5-3cb2e624310b",
        "tags" : [
        ]
      },
      {
        "id" : "65be88e7-284b-48e3-a66a-8e471183fbc1",
        "parentId" : "c7aeb4ad-f8b1-467b-b36c-009aa3aefc32",
        "authorId" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "body" : "Sorry I missed that. These reasons SGTM.\n",
        "createdAt" : "2016-08-22T22:38:38Z",
        "updatedAt" : "2016-08-22T23:44:37Z",
        "lastEditedBy" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "tags" : [
        ]
      }
    ],
    "commit" : "12c248315f8191396574085591e1d749ab0fe670",
    "line" : null,
    "diffHunk" : "@@ -1,1 +83,87 @@\tif v, ok := c.Spec.Labels[types.KubernetesPodNameLabel]; ok {\n\t\tset[\"pod_name\"] = v\n\t}\n\tif v, ok := c.Spec.Labels[types.KubernetesPodNamespaceLabel]; ok {\n\t\tset[\"namespace\"] = v"
  },
  {
    "id" : "f010df0f-8c02-40ae-9aea-e3529719a481",
    "prId" : 19374,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "faebc75e-be7e-4ad5-aa84-ea6b8e43594b",
        "parentId" : null,
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "Can we pass this parameter through cAdvisor.Manager's interface instead?\n",
        "createdAt" : "2016-01-08T19:02:58Z",
        "updatedAt" : "2016-01-08T19:02:58Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      },
      {
        "id" : "fcd1ad4f-28da-4548-ac89-7b10becfea54",
        "parentId" : "faebc75e-be7e-4ad5-aa84-ea6b8e43594b",
        "authorId" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "body" : "If we want `--help` to show the correct default, then updating the flag like this in an `init()` function is the only way to do it. However, we could move this code to a method in cAdvisor that does the same thing, and call that from here. Is that what you're suggesting?\n",
        "createdAt" : "2016-01-08T20:09:03Z",
        "updatedAt" : "2016-01-08T20:09:03Z",
        "lastEditedBy" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "tags" : [
        ]
      },
      {
        "id" : "19114376-2821-49df-8aab-e54727f091ff",
        "parentId" : "faebc75e-be7e-4ad5-aa84-ea6b8e43594b",
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "I guess I'm suggesting that we should have a kubelet flag instead of a cAdvisor flag for this and inject the value in the kubelet flag into cadvisor manager.\n",
        "createdAt" : "2016-01-08T20:32:58Z",
        "updatedAt" : "2016-01-08T20:32:58Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      },
      {
        "id" : "621daec2-e112-424b-b2bd-b9512c671ebc",
        "parentId" : "faebc75e-be7e-4ad5-aa84-ea6b8e43594b",
        "authorId" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "body" : "The problem with that is the way the code is currently set up there is no way to remove flags. If we add a kubelet flag, the cAdvisor flag will still be there (which is confusing). It would be a fairly large refactoring to consolidate all the cAdvisor flags so they're only added in the standalone version, and not the library version.\n",
        "createdAt" : "2016-01-08T21:13:18Z",
        "updatedAt" : "2016-01-08T21:13:18Z",
        "lastEditedBy" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "tags" : [
        ]
      },
      {
        "id" : "a702fbeb-9278-470a-880d-89b58522946d",
        "parentId" : "faebc75e-be7e-4ad5-aa84-ea6b8e43594b",
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "Would it be OK to say that users should not change cAdvisor flags directly?\nWe do want to hide cAdvisor flags completely in the future right?\n\nOn Fri, Jan 8, 2016 at 1:13 PM, Tim St. Clair notifications@github.com\nwrote:\n\n> In pkg/kubelet/cadvisor/cadvisor_linux.go\n> https://github.com/kubernetes/kubernetes/pull/19374#discussion_r49238715\n> :\n> \n> >  const allowDynamicHousekeeping = true\n> > \n> > +func init() {\n> > -   // Override the default cAdvisor housekeeping interval.\n> > -   if f := flag.Lookup(\"housekeeping_interval\"); f != nil {\n> \n> The problem with that is the way the code is currently set up there is no\n> way to remove flags. If we add a kubelet flag, the cAdvisor flag will still\n> be there (which is confusing). It would be a fairly large refactoring to\n> consolidate all the cAdvisor flags so they're only added in the standalone\n> version, and not the library version.\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/kubernetes/kubernetes/pull/19374/files#r49238715.\n",
        "createdAt" : "2016-01-08T21:29:17Z",
        "updatedAt" : "2016-01-08T21:29:17Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      },
      {
        "id" : "5f21e882-49b1-4780-b2ca-55297784ccc8",
        "parentId" : "faebc75e-be7e-4ad5-aa84-ea6b8e43594b",
        "authorId" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "body" : "This probably needs a bigger discussion, as it would not be a backwards-compatible change. We'd probably need to clone all the flags into kubelet and mark them as depricated for a long time.\n",
        "createdAt" : "2016-01-08T21:43:35Z",
        "updatedAt" : "2016-01-08T21:43:35Z",
        "lastEditedBy" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "tags" : [
        ]
      },
      {
        "id" : "d942865c-4f24-4012-8e06-c500ec157a40",
        "parentId" : "faebc75e-be7e-4ad5-aa84-ea6b8e43594b",
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "I chatted with @timstclair offline. This PR will go in as-is. We will announce to the community that cAdvisor flags will be deprecated, and then proceed with refactoring of flags and hiding them from Kubelet.\n",
        "createdAt" : "2016-01-08T22:21:24Z",
        "updatedAt" : "2016-01-08T22:21:24Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      },
      {
        "id" : "c2067d0a-57d0-453a-9ca1-0bd7fa940365",
        "parentId" : "faebc75e-be7e-4ad5-aa84-ea6b8e43594b",
        "authorId" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "body" : "FYI, I filed https://github.com/kubernetes/kubernetes/issues/19432 for this.\n",
        "createdAt" : "2016-01-08T22:51:54Z",
        "updatedAt" : "2016-01-08T22:51:54Z",
        "lastEditedBy" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "tags" : [
        ]
      },
      {
        "id" : "d703796f-3a2b-4bcb-8796-bce716b1b703",
        "parentId" : "faebc75e-be7e-4ad5-aa84-ea6b8e43594b",
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "Thanks!\n\nOn Fri, Jan 8, 2016 at 2:52 PM, Tim St. Clair notifications@github.com\nwrote:\n\n> In pkg/kubelet/cadvisor/cadvisor_linux.go\n> https://github.com/kubernetes/kubernetes/pull/19374#discussion_r49248554\n> :\n> \n> >  const allowDynamicHousekeeping = true\n> > \n> > +func init() {\n> > -   // Override the default cAdvisor housekeeping interval.\n> > -   if f := flag.Lookup(\"housekeeping_interval\"); f != nil {\n> \n> FYI, I filed #19432\n> https://github.com/kubernetes/kubernetes/issues/19432 for this.\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/kubernetes/kubernetes/pull/19374/files#r49248554.\n",
        "createdAt" : "2016-01-08T23:00:21Z",
        "updatedAt" : "2016-01-08T23:00:21Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      }
    ],
    "commit" : "1fd72a78714bddac2e6cc36d909bd53ac507fc1b",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +53,57 @@func init() {\n\t// Override the default cAdvisor housekeeping interval.\n\tif f := flag.Lookup(\"housekeeping_interval\"); f != nil {\n\t\tf.DefValue = defaultHousekeepingInterval.String()\n\t\tf.Value.Set(f.DefValue)"
  },
  {
    "id" : "00f607df-0d6e-4778-8a13-23b892455bec",
    "prId" : 5308,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "09bafe33-4c47-4721-af9b-db7aad29fe99",
        "parentId" : null,
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "Can this be time duration instead of a number? Since we have dynamic housekeeping, a time duration make more sense. This is probably a comment for cadvisor in general.\n",
        "createdAt" : "2015-03-11T18:22:36Z",
        "updatedAt" : "2015-03-13T23:07:02Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      },
      {
        "id" : "4cdbf718-4778-4131-b1df-cfd39bd80320",
        "parentId" : "09bafe33-4c47-4721-af9b-db7aad29fe99",
        "authorId" : "b7abca6a-d6be-4008-a014-3b5ca0e90529",
        "body" : "+1 this has been a cAdvisor request for some time.\n",
        "createdAt" : "2015-03-11T18:52:29Z",
        "updatedAt" : "2015-03-13T23:07:02Z",
        "lastEditedBy" : "b7abca6a-d6be-4008-a014-3b5ca0e90529",
        "tags" : [
        ]
      }
    ],
    "commit" : "1a7f7245e7117d5cecd6dc12a57845ea8fe83b31",
    "line" : 43,
    "diffHunk" : "@@ -1,1 +41,45 @@// TODO(vmarmol): Make configurable.\n// The number of stats to keep in memory.\nconst statsToCache = 60\n\n// Creates a cAdvisor and exports its API on the specified port if port > 0."
  },
  {
    "id" : "6dbcc15b-53a9-4e04-a657-e1cbf49e413a",
    "prId" : 5308,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4066809e-b9f7-40c4-bd18-e3d39832f391",
        "parentId" : null,
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "Should we keep retrying indefinitely? Why not declare error at some point?\n",
        "createdAt" : "2015-03-11T18:25:35Z",
        "updatedAt" : "2015-03-13T23:07:02Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      },
      {
        "id" : "9d7af22c-fb5a-4c37-a960-9559e0a881ea",
        "parentId" : "4066809e-b9f7-40c4-bd18-e3d39832f391",
        "authorId" : "b7abca6a-d6be-4008-a014-3b5ca0e90529",
        "body" : "It's unclear how long it will take for this to resolve. There is not harm in retrying forever.\n",
        "createdAt" : "2015-03-11T18:52:31Z",
        "updatedAt" : "2015-03-13T23:07:02Z",
        "lastEditedBy" : "b7abca6a-d6be-4008-a014-3b5ca0e90529",
        "tags" : [
        ]
      }
    ],
    "commit" : "1a7f7245e7117d5cecd6dc12a57845ea8fe83b31",
    "line" : 99,
    "diffHunk" : "@@ -1,1 +97,101 @@\t\t\tglog.Infof(\"Failed to register cAdvisor on port %d, retrying. Error: %v\", port, err)\n\t\t\ttime.Sleep(time.Minute)\n\t\t\terr = serv.ListenAndServe()\n\t\t}\n\t}()"
  }
]