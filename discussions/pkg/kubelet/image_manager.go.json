[
  {
    "id" : "dab9a74d-30c6-445c-9f91-44a28ef2ac4c",
    "prId" : 29388,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c17ae707-2cac-455f-ba7a-1cda93ae6fed",
        "parentId" : null,
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "Remove `and all the RepoTags and RepoDigests.`\n",
        "createdAt" : "2016-07-26T00:53:31Z",
        "updatedAt" : "2016-07-27T17:32:58Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      },
      {
        "id" : "89956c6a-7235-4006-a05b-d353778d796f",
        "parentId" : "c17ae707-2cac-455f-ba7a-1cda93ae6fed",
        "authorId" : "4a6c4c9f-42c7-4b89-b4ff-53e56b69cd54",
        "body" : "done\n",
        "createdAt" : "2016-07-26T00:56:45Z",
        "updatedAt" : "2016-07-27T17:32:58Z",
        "lastEditedBy" : "4a6c4c9f-42c7-4b89-b4ff-53e56b69cd54",
        "tags" : [
        ]
      }
    ],
    "commit" : "64981aaf46bb372695a9ae742df30ea0427796e2",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +343,347 @@func isImageUsed(image container.Image, imagesInUse sets.String) bool {\n\t// Check the image ID.\n\tif _, ok := imagesInUse[image.ID]; ok {\n\t\treturn true\n\t}"
  },
  {
    "id" : "147651e5-8d7d-4b9d-be78-e1e96ca6f18e",
    "prId" : 18073,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e586133e-3f03-4552-93dc-d883fc183b0d",
        "parentId" : null,
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "Should we disallow being equal as well?\n",
        "createdAt" : "2015-12-11T00:54:51Z",
        "updatedAt" : "2015-12-11T00:54:51Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      }
    ],
    "commit" : "9590b23264b65f2f89a06b39b5abbaa2c8dece23",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +102,106 @@\t\treturn nil, fmt.Errorf(\"invalid LowThresholdPercent %d, must be in range [0-100]\", policy.LowThresholdPercent)\n\t}\n\tif policy.LowThresholdPercent > policy.HighThresholdPercent {\n\t\treturn nil, fmt.Errorf(\"LowThresholdPercent %d can not be higher than HighThresholdPercent %d\", policy.LowThresholdPercent, policy.HighThresholdPercent)\n\t}"
  },
  {
    "id" : "2db5797e-13e5-4ac6-895a-d509c10f7bba",
    "prId" : 5512,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6a2bc23d-6af9-4f43-ae4b-644b90263919",
        "parentId" : null,
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "Can you at least TODO making this a true error that you can introspect on?\n",
        "createdAt" : "2015-03-17T14:37:15Z",
        "updatedAt" : "2015-03-17T16:19:16Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      },
      {
        "id" : "867588e6-db89-4244-9470-78f8a942b021",
        "parentId" : "6a2bc23d-6af9-4f43-ae4b-644b90263919",
        "authorId" : "b7abca6a-d6be-4008-a014-3b5ca0e90529",
        "body" : "Ah, good point we should surface an event. Will add the TODO for now.\n",
        "createdAt" : "2015-03-17T16:19:18Z",
        "updatedAt" : "2015-03-17T16:19:18Z",
        "lastEditedBy" : "b7abca6a-d6be-4008-a014-3b5ca0e90529",
        "tags" : [
        ]
      }
    ],
    "commit" : "6bcbf12a3d5ea8c43252ae48561a88f1c4574e11",
    "line" : null,
    "diffHunk" : "@@ -1,1 +192,196 @@\t\tif freed < amountToFree {\n\t\t\t// TODO(vmarmol): Surface event.\n\t\t\treturn fmt.Errorf(\"failed to garbage collect required amount of images. Wanted to free %d, but freed %d\", amountToFree, freed)\n\t\t}\n\t}"
  }
]