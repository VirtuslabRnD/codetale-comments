[
  {
    "id" : "bc735081-7012-4501-ba59-caf347e9d799",
    "prId" : 97374,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/97374#pullrequestreview-558265312",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5b8f1e61-9e14-43b7-8182-5630af1f7f3d",
        "parentId" : null,
        "authorId" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "body" : "nit: make it consistent?\r\n\r\n```suggestion\r\n\t// SET: is the current pod configuration.\r\n```",
        "createdAt" : "2020-12-23T23:01:33Z",
        "updatedAt" : "2020-12-24T03:22:30Z",
        "lastEditedBy" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "tags" : [
        ]
      }
    ],
    "commit" : "2414bce4c3827f1d9c519ba1a2eb016072cbe570",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +38,42 @@// These constants identify the PodOperations that can be made on a pod configuration.\nconst (\n\t// SET is the current pod configuration.\n\tSET PodOperation = iota\n\t// ADD signifies pods that are new to this source."
  },
  {
    "id" : "0d1d65d8-17fd-4a9e-9326-1a8ce56e3ef1",
    "prId" : 83325,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/83325#pullrequestreview-295795440",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b7d0a1fc-a5f7-4380-ae59-3b84f9986d08",
        "parentId" : null,
        "authorId" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "body" : "nit: Could you please move this function next to `IsStaticPod`? These two are closely related.",
        "createdAt" : "2019-10-01T18:03:08Z",
        "updatedAt" : "2019-10-01T18:12:40Z",
        "lastEditedBy" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "tags" : [
        ]
      },
      {
        "id" : "d95f2cf9-6ae0-48f5-9a1d-f8964c09caf2",
        "parentId" : "b7d0a1fc-a5f7-4380-ae59-3b84f9986d08",
        "authorId" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "body" : "@bsalamat \r\nCan you give /lgtm again ?",
        "createdAt" : "2019-10-01T18:14:04Z",
        "updatedAt" : "2019-10-01T18:14:04Z",
        "lastEditedBy" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "0939f9010381fb5ce56ee0543109c2554681dacb",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +139,143 @@\n// IsMirrorPod returns true if the passed Pod is a Mirror Pod.\nfunc IsMirrorPod(pod *v1.Pod) bool {\n\t_, ok := pod.Annotations[ConfigMirrorAnnotationKey]\n\treturn ok"
  },
  {
    "id" : "5d3dc76a-b94c-4d4a-866f-dfcc5f471b76",
    "prId" : 66082,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/66082#pullrequestreview-137651747",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f4d1fa97-34ef-4ba1-8b5d-4c490ce2d821",
        "parentId" : null,
        "authorId" : "72156db3-c40b-4455-9838-c12c0c606019",
        "body" : "We did not check priority feature gate before :) @dashpole , any background to share?",
        "createdAt" : "2018-07-13T12:58:23Z",
        "updatedAt" : "2018-07-13T12:58:23Z",
        "lastEditedBy" : "72156db3-c40b-4455-9838-c12c0c606019",
        "tags" : [
        ]
      },
      {
        "id" : "bc24e18d-4aca-4b06-be38-4246cbafa518",
        "parentId" : "f4d1fa97-34ef-4ba1-8b5d-4c490ce2d821",
        "authorId" : "d2b16581-e7e9-48b8-9f76-6f6bcb9ec300",
        "body" : "Looks like that was an oversight when we added IsCriticalPodBasedOnPriority.  We should add it here.  ",
        "createdAt" : "2018-07-13T20:30:45Z",
        "updatedAt" : "2018-07-13T20:30:46Z",
        "lastEditedBy" : "d2b16581-e7e9-48b8-9f76-6f6bcb9ec300",
        "tags" : [
        ]
      },
      {
        "id" : "26403d6b-59f3-4df0-9d1e-bea696bc73fb",
        "parentId" : "f4d1fa97-34ef-4ba1-8b5d-4c490ce2d821",
        "authorId" : "72156db3-c40b-4455-9838-c12c0c606019",
        "body" : "That's great ! \r\n\r\nLGTM then :)",
        "createdAt" : "2018-07-17T01:35:22Z",
        "updatedAt" : "2018-07-17T01:35:22Z",
        "lastEditedBy" : "72156db3-c40b-4455-9838-c12c0c606019",
        "tags" : [
        ]
      }
    ],
    "commit" : "f2a765497849be606df8860a6e906a5e02170fd7",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +147,151 @@// to make admission and scheduling decisions.\nfunc IsCriticalPod(pod *v1.Pod) bool {\n\tif utilfeature.DefaultFeatureGate.Enabled(features.PodPriority) {\n\t\tif pod.Spec.Priority != nil && IsCriticalPodBasedOnPriority(*pod.Spec.Priority) {\n\t\t\treturn true"
  },
  {
    "id" : "e8cc4459-ff67-46bb-8287-b838d9c9cab4",
    "prId" : 64592,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/64592#pullrequestreview-125746895",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9683b856-fff1-476b-a82a-0bce0da6ce76",
        "parentId" : null,
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "Comment should be fixed since rescheduler is no longer deprecated.",
        "createdAt" : "2018-06-04T20:58:25Z",
        "updatedAt" : "2018-06-04T21:01:39Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "6ae9241d-10c8-4cd8-977f-9713a0db6db3",
        "parentId" : "9683b856-fff1-476b-a82a-0bce0da6ce76",
        "authorId" : "38ca4f80-c365-4775-8981-1e56b713b07b",
        "body" : "So, I think the statement is still valid just that we will delete rescheduler in next release. This is a stop gap solution.",
        "createdAt" : "2018-06-04T21:06:00Z",
        "updatedAt" : "2018-06-04T21:06:00Z",
        "lastEditedBy" : "38ca4f80-c365-4775-8981-1e56b713b07b",
        "tags" : [
        ]
      },
      {
        "id" : "1f203099-1f04-4e22-8a20-df4474024e3e",
        "parentId" : "9683b856-fff1-476b-a82a-0bce0da6ce76",
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "What's the long term fix (and if we rely on a deprecated feature, is it really deprecated?)",
        "createdAt" : "2018-06-04T21:12:19Z",
        "updatedAt" : "2018-06-04T21:12:19Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "01be5e2d-9611-41f2-a3f2-771c0d804dc5",
        "parentId" : "9683b856-fff1-476b-a82a-0bce0da6ce76",
        "authorId" : "38ca4f80-c365-4775-8981-1e56b713b07b",
        "body" : "Please find my comments below(https://github.com/kubernetes/kubernetes/pull/64592#issuecomment-394501196). While I am not familiar with deprecation policies and this may not sound like exact reason, last release had rescheduler deprecated too but we relied on it for DS pods.",
        "createdAt" : "2018-06-04T21:19:08Z",
        "updatedAt" : "2018-06-04T21:20:01Z",
        "lastEditedBy" : "38ca4f80-c365-4775-8981-1e56b713b07b",
        "tags" : [
        ]
      }
    ],
    "commit" : "872addf9e365eb88d48b799a737ee155b4c8fae0",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +142,146 @@\n// IsCriticalPod returns true if the pod bears the critical pod annotation key or if pod's priority is greater than\n// or equal to SystemCriticalPriority. Both the rescheduler(deprecated in 1.10) and the kubelet use this function\n// to make admission and scheduling decisions.\nfunc IsCriticalPod(pod *v1.Pod) bool {"
  },
  {
    "id" : "aef0a422-079a-4a5e-9632-46a059889f04",
    "prId" : 60519,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/60519#pullrequestreview-100254197",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "882de1fc-b54b-4d72-8d39-9a56d812086b",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "unrelated to this PR, but critical pods based on priority should not be limited to the kube-system namespace... that namespace should not have any special significance as far as the API is concerned.",
        "createdAt" : "2018-02-28T03:03:56Z",
        "updatedAt" : "2018-03-06T18:07:10Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "d39c103c-d945-4608-9bbf-4da08373d933",
        "parentId" : "882de1fc-b54b-4d72-8d39-9a56d812086b",
        "authorId" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "body" : "As you said, that's unrelated this to PR, but [K8s docs clearly state](https://kubernetes.io/docs/tasks/administer-cluster/guaranteed-scheduling-critical-addon-pods/#marking-pod-as-critical-when-using-rescheduler) that critical pods can only exist in system namespace only.",
        "createdAt" : "2018-02-28T20:19:37Z",
        "updatedAt" : "2018-03-06T18:07:10Z",
        "lastEditedBy" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "tags" : [
        ]
      },
      {
        "id" : "462a6226-6165-4ef8-8f5a-114ac1a025b3",
        "parentId" : "882de1fc-b54b-4d72-8d39-9a56d812086b",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "> K8s docs clearly state that critical pods can only exist in system namespace only\r\n\r\nthat is left over from critical pods being determined from the uncontrollable pod annotation. that limitation should not apply to the priority field",
        "createdAt" : "2018-02-28T20:24:21Z",
        "updatedAt" : "2018-03-06T18:07:10Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "8b94b123-5dcc-42d7-b5c8-2caa895d98ff",
        "parentId" : "882de1fc-b54b-4d72-8d39-9a56d812086b",
        "authorId" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "body" : "I will file a separate issue for this.",
        "createdAt" : "2018-02-28T21:13:12Z",
        "updatedAt" : "2018-03-06T18:07:10Z",
        "lastEditedBy" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "tags" : [
        ]
      },
      {
        "id" : "717918e8-87ea-4aa5-a2ce-a2d87e162052",
        "parentId" : "882de1fc-b54b-4d72-8d39-9a56d812086b",
        "authorId" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "body" : "filed: https://github.com/kubernetes/kubernetes/issues/60596",
        "createdAt" : "2018-02-28T22:27:38Z",
        "updatedAt" : "2018-03-06T18:07:10Z",
        "lastEditedBy" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "tags" : [
        ]
      }
    ],
    "commit" : "9592a9ecf45d4dddb0009b0c8b2bd90b6c063a65",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +166,170 @@func IsCriticalPodBasedOnPriority(ns string, priority int32) bool {\n\t// Critical pods are restricted to \"kube-system\" namespace as of now.\n\tif ns != kubeapi.NamespaceSystem {\n\t\treturn false\n\t}"
  },
  {
    "id" : "05e20cd1-8d66-4999-9370-91699828c42a",
    "prId" : 58835,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/58835#pullrequestreview-98972965",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b1343f30-cca9-4198-b529-5ca29bcb64d1",
        "parentId" : null,
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "I think the IsCriticalPod check should still gate respecting the annotation by enabling the ExperimentalCriticalPodAnnotation feature.\r\n\r\nThis check right now would make any pod or workload API pod template that had this annotation in a cluster that did not enable this feature prior suddenly elevate the priority of the workload.  I think this is a mistake and would represent a surprise during upgrades (since prior clusters that did not enable this feature never respected the annotation).",
        "createdAt" : "2018-02-21T23:46:16Z",
        "updatedAt" : "2018-02-22T01:53:41Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      },
      {
        "id" : "3675d9b3-b7e8-40d1-a7a8-8c92ef873621",
        "parentId" : "b1343f30-cca9-4198-b529-5ca29bcb64d1",
        "authorId" : "38ca4f80-c365-4775-8981-1e56b713b07b",
        "body" : "IsCriticalPod fn predates my changes, I did a quick search in the codebase where this fn is being called from and in every place there is featuregate enabled for ExperimentalCriticalPodAnnotation except for https://github.com/kubernetes/kubernetes/blob/master/pkg/kubelet/preemption/preemption.go#L233. I need to look further why the featuregating is not needed there. While the approach may not be elegant, it still does the job of gate respecting.\r\n\r\nBut the point you raised is valid from priority admission controller standpoint, where we are calling IsCritical fn. I have updated the PR to include a check for ExperimentalCriticalPodAnnotation, PTAL.",
        "createdAt" : "2018-02-22T01:54:33Z",
        "updatedAt" : "2018-02-22T01:56:37Z",
        "lastEditedBy" : "38ca4f80-c365-4775-8981-1e56b713b07b",
        "tags" : [
        ]
      },
      {
        "id" : "c30d27bf-5b51-455f-80f5-0c4c400b746d",
        "parentId" : "b1343f30-cca9-4198-b529-5ca29bcb64d1",
        "authorId" : "d2b16581-e7e9-48b8-9f76-6f6bcb9ec300",
        "body" : "The feature gate is also checked there, just at the entry point function for the package: https://github.com/kubernetes/kubernetes/blob/master/pkg/kubelet/preemption/preemption.go#L67.  The call will always exit if the feature gate is disabled.",
        "createdAt" : "2018-02-22T16:24:19Z",
        "updatedAt" : "2018-02-22T16:24:19Z",
        "lastEditedBy" : "d2b16581-e7e9-48b8-9f76-6f6bcb9ec300",
        "tags" : [
        ]
      },
      {
        "id" : "8c33998a-8db9-4aa5-9f28-c5417fdbde5e",
        "parentId" : "b1343f30-cca9-4198-b529-5ca29bcb64d1",
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "thank you for the clarification.  its a public method so i had thought centralizing the feature gate would have been preferred here as well.",
        "createdAt" : "2018-02-23T16:38:40Z",
        "updatedAt" : "2018-02-23T16:38:40Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      }
    ],
    "commit" : "7da5a2e4dd6a2752d2a2d45189656d5536d9258e",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +145,149 @@// to make admission and scheduling decisions.\nfunc IsCriticalPod(pod *v1.Pod) bool {\n\treturn IsCritical(pod.Namespace, pod.Annotations) || (pod.Spec.Priority != nil && IsCriticalPodBasedOnPriority(pod.Namespace, *pod.Spec.Priority))\n}\n"
  },
  {
    "id" : "77366544-eec9-4cf8-87c8-c9bddb37fd42",
    "prId" : 38836,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/38836#pullrequestreview-13253646",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6aa954e2-dfbb-4879-8465-d8b8d19fd190",
        "parentId" : null,
        "authorId" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "body" : "I don't see any adjustments to OOM score based on criticality in this PR, where is that taking place?",
        "createdAt" : "2016-12-16T00:34:18Z",
        "updatedAt" : "2016-12-16T03:01:28Z",
        "lastEditedBy" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "tags" : [
        ]
      },
      {
        "id" : "9104e138-60af-446b-b52a-5dac1f270ee5",
        "parentId" : "6aa954e2-dfbb-4879-8465-d8b8d19fd190",
        "authorId" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "body" : "not in this pr",
        "createdAt" : "2016-12-16T00:50:31Z",
        "updatedAt" : "2016-12-16T03:01:28Z",
        "lastEditedBy" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "tags" : [
        ]
      }
    ],
    "commit" : "b7409e00380b349ec971d089363ad7ff22b37c76",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +33,37 @@// 1. Resource related admission checks will prioritize the admission of\n//    pods bearing the key, over pods without the key, regardless of QoS.\n// 2. The OOM score of pods bearing the key will be <= pods without\n//    the key (where the <= part is determied by QoS).\nconst CriticalPodAnnotationKey = \"scheduler.alpha.kubernetes.io/critical-pod\""
  },
  {
    "id" : "c8b26770-3f7b-4dfa-be7f-be9f64150053",
    "prId" : 25065,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "890a3add-da05-4df3-a0e8-d107671eef5c",
        "parentId" : null,
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "caveat: pod workers don't rely on the SyncPodType to do any real work in syncPod at all, except for the new `SyncPodKill`. Might warrant a comment here.\n",
        "createdAt" : "2016-05-06T23:55:04Z",
        "updatedAt" : "2016-05-12T23:17:17Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "a47d28db-8497-44c0-a71b-408b7f24bb8d",
        "parentId" : "890a3add-da05-4df3-a0e8-d107671eef5c",
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "added a comment.\n",
        "createdAt" : "2016-05-09T18:56:49Z",
        "updatedAt" : "2016-05-12T23:17:17Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      }
    ],
    "commit" : "6fefb428c1242b76b7c66e2d261d6c4cdfc4804b",
    "line" : null,
    "diffHunk" : "@@ -1,1 +113,117 @@\t// SyncPodKill is when the pod is killed based on a trigger internal to the kubelet for eviction.\n\t// If a SyncPodKill request is made to pod workers, the request is never dropped, and will always be processed.\n\tSyncPodKill\n)\n"
  }
]