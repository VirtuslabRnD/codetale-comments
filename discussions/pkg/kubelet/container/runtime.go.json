[
  {
    "id" : "2fc44872-0e4b-43f1-9410-c7c3b7ede634",
    "prId" : 90061,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/90061#pullrequestreview-401465652",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a9b173f1-cd03-4dd1-9af8-d530b1566771",
        "parentId" : null,
        "authorId" : "e8581d00-53ef-499d-a527-896b82cfc816",
        "body" : "This seems like another case where we could remove the `ID` field as it is duplicated in `Spec`.",
        "createdAt" : "2020-04-27T23:15:09Z",
        "updatedAt" : "2020-04-27T23:15:10Z",
        "lastEditedBy" : "e8581d00-53ef-499d-a527-896b82cfc816",
        "tags" : [
        ]
      },
      {
        "id" : "51272882-8a06-475f-81b0-dd1098e8eba5",
        "parentId" : "a9b173f1-cd03-4dd1-9af8-d530b1566771",
        "authorId" : "e8581d00-53ef-499d-a527-896b82cfc816",
        "body" : "Discussed here: https://github.com/kubernetes/kubernetes/pull/90061#discussion_r416217160",
        "createdAt" : "2020-04-28T03:03:28Z",
        "updatedAt" : "2020-04-28T03:03:29Z",
        "lastEditedBy" : "e8581d00-53ef-499d-a527-896b82cfc816",
        "tags" : [
        ]
      }
    ],
    "commit" : "90367729a3b56bab1f95ad4c8c5569826d779053",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +355,359 @@\tSize int64\n\t// ImageSpec for the image which include annotations.\n\tSpec ImageSpec\n}\n"
  },
  {
    "id" : "807b542f-c689-4046-a517-a9374507de11",
    "prId" : 64006,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/64006#pullrequestreview-121618597",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "91d67b88-9233-433d-9c31-253dc6f4ed70",
        "parentId" : null,
        "authorId" : "98677041-8dd3-472f-8583-94ee9e37145c",
        "body" : "Should make a comment here about DirectStreamingRuntime and IndirectStreamingRuntime being end of life at least for the time being. Maybe with a link to the pr that removed them.",
        "createdAt" : "2018-05-18T16:17:59Z",
        "updatedAt" : "2018-05-31T22:26:42Z",
        "lastEditedBy" : "98677041-8dd3-472f-8583-94ee9e37145c",
        "tags" : [
        ]
      },
      {
        "id" : "4f63319b-42e6-4834-8be9-84d7ef4c2dc4",
        "parentId" : "91d67b88-9233-433d-9c31-253dc6f4ed70",
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "I think this is just kubelet implementation detail. I don't think anyone will come back and cleanup if we put such a comment here.\r\n\r\nLike when we remove `rkt` and `dockershim` package, we won't leave a comment saying dockershim was removed.",
        "createdAt" : "2018-05-18T23:12:46Z",
        "updatedAt" : "2018-05-31T22:26:42Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      },
      {
        "id" : "d18419b9-573b-4ce2-96c2-93946f7cd6d2",
        "parentId" : "91d67b88-9233-433d-9c31-253dc6f4ed70",
        "authorId" : "98677041-8dd3-472f-8583-94ee9e37145c",
        "body" : "True.. I saw the upper case first char.. and since we may have a future implementation with a switch, I figured a link to the past. But as you say the link is in github.",
        "createdAt" : "2018-05-19T13:04:01Z",
        "updatedAt" : "2018-05-31T22:26:42Z",
        "lastEditedBy" : "98677041-8dd3-472f-8583-94ee9e37145c",
        "tags" : [
        ]
      }
    ],
    "commit" : "746c32db4cf47a0245ef1c1aa053df49fcf51c13",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +125,129 @@}\n\n// StreamingRuntime is the interface implemented by runtimes that handle the serving of the\n// streaming calls (exec/attach/port-forward) themselves. In this case, Kubelet should redirect to\n// the runtime server."
  },
  {
    "id" : "fe94f48e-0778-477f-9c7b-d9c26ef2e78a",
    "prId" : 60574,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/60574#pullrequestreview-100686955",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6a39fc0e-d16a-4080-b32e-b63179d91086",
        "parentId" : null,
        "authorId" : "fa530650-5886-4415-a42f-0dee2e0e9ae3",
        "body" : "We have a spell check script - https://github.com/kubernetes/kubernetes/blob/master/hack/verify-spelling.sh.\r\n\r\nWondering why this wasn't caught by it...any ideas, @dixudx?",
        "createdAt" : "2018-03-02T06:45:37Z",
        "updatedAt" : "2018-03-02T06:45:37Z",
        "lastEditedBy" : "fa530650-5886-4415-a42f-0dee2e0e9ae3",
        "tags" : [
        ]
      }
    ],
    "commit" : "7815ab33dd9b84c26b75e9d4f9c8e589a5bf8f6c",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +96,100 @@\tKillPod(pod *v1.Pod, runningPod Pod, gracePeriodOverride *int64) error\n\t// GetPodStatus retrieves the status of the pod, including the\n\t// information of all containers in the pod that are visible in Runtime.\n\tGetPodStatus(uid types.UID, name, namespace string) (*PodStatus, error)\n\t// Returns the filesystem path of the pod's network namespace; if the"
  },
  {
    "id" : "ab03b1e3-2a64-4655-af1d-48c08ce3f3b4",
    "prId" : 58172,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/58172#pullrequestreview-89544256",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b4648211-89bf-4d95-b5c5-3c422a431194",
        "parentId" : null,
        "authorId" : "7dd504ec-7e63-45b3-98f8-6eb1c683e9c2",
        "body" : "Mind to explain a little bit who is expected to add these annotations and who is expect to consume them? Sorry for silly question if you've already clarified somewhere else.",
        "createdAt" : "2018-01-11T21:50:00Z",
        "updatedAt" : "2018-02-03T18:53:58Z",
        "lastEditedBy" : "7dd504ec-7e63-45b3-98f8-6eb1c683e9c2",
        "tags" : [
        ]
      },
      {
        "id" : "bd7bd950-c7b4-4be7-a0f2-09189302cd30",
        "parentId" : "b4648211-89bf-4d95-b5c5-3c422a431194",
        "authorId" : "ac146833-f0d6-4680-968a-749269c0d55d",
        "body" : "No worries :)\r\n\r\nThe annotations are expected to be added by device plugins only (i.e: here the NVIDIA device plugin adding an annotation the containers explicitly mentioning GPU usage).\r\nCRI-O is expected to [consume these annotations](https://github.com/kubernetes-incubator/cri-o/blob/master/hooks.md).\r\n\r\nCurrently, the only NVIDIA supported way to add GPUs to containers is to run docker with the nvidia runtime as your default runtime (runc + a call to the nvidia OCI pre-start hook).\r\n\r\nAdding annotations would allow us to use CRI-O without requesting users to setup the default runtime to NVIDIA.\r\n",
        "createdAt" : "2018-01-11T22:05:10Z",
        "updatedAt" : "2018-09-11T13:39:50Z",
        "lastEditedBy" : "ac146833-f0d6-4680-968a-749269c0d55d",
        "tags" : [
        ]
      },
      {
        "id" : "acc61ffd-335a-413a-81f0-16a7b86aee2a",
        "parentId" : "b4648211-89bf-4d95-b5c5-3c422a431194",
        "authorId" : "7dd504ec-7e63-45b3-98f8-6eb1c683e9c2",
        "body" : "Thanks! It's useful for review. cc @Random-Liu for cri-containerd.",
        "createdAt" : "2018-01-11T23:11:48Z",
        "updatedAt" : "2018-02-03T18:53:58Z",
        "lastEditedBy" : "7dd504ec-7e63-45b3-98f8-6eb1c683e9c2",
        "tags" : [
        ]
      },
      {
        "id" : "7e04a06c-a7db-445b-95ef-caa6a8ab1d2d",
        "parentId" : "b4648211-89bf-4d95-b5c5-3c422a431194",
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "@RenaudWasTaken I understand why you are doing this, and I think it's good to enable people experimenting new ideas via Annotations. :)\r\n\r\nBut please note that annotation-based api/feature is usually considered unstable, because there is no api guarantee, and can be broken easily. It's good to experiment new things via annotation, but you may still want to eventually standardize the api and graduate from annotation.\r\n\r\nAs for the Device Plugin side, I think @jiayingz has more ideas about this.\r\n\r\nBut for the CRI side, please bring up the pre-start hook discussion in sig-node sometime, so that we can see whether we should support prestart hook in Kubernetes api, or support prestart hook in CRI, or at least standardize the prestart hook annotation format for alpha support.\r\n/cc @dchen1107 @yujuhong @kubernetes/sig-node-api-reviews ",
        "createdAt" : "2018-01-13T02:07:28Z",
        "updatedAt" : "2018-02-03T18:53:58Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      },
      {
        "id" : "28d03adb-9d98-48fd-87fa-ca4e9a144d40",
        "parentId" : "b4648211-89bf-4d95-b5c5-3c422a431194",
        "authorId" : "ac146833-f0d6-4680-968a-749269c0d55d",
        "body" : "That's great to hear!\r\n\r\nWith @3XX0 and @flx42 we wanted to wait after the device plugin beta to propose a standardized way to support pre-start hooks in CRI.",
        "createdAt" : "2018-01-13T02:15:48Z",
        "updatedAt" : "2018-02-03T18:53:58Z",
        "lastEditedBy" : "ac146833-f0d6-4680-968a-749269c0d55d",
        "tags" : [
        ]
      },
      {
        "id" : "ac85b4a3-2f6f-43ac-884d-abb8c90b7091",
        "parentId" : "b4648211-89bf-4d95-b5c5-3c422a431194",
        "authorId" : "7dd504ec-7e63-45b3-98f8-6eb1c683e9c2",
        "body" : "+1 for @Random-Liu , pre-start hook is what I always want to discuss with you but forgotten. We currently injected extra information to container spec before CRI `CreateContainer` to enable NVLink for ML training. I really hope pre-start hook can help out. like: `./my-hook-binary <annotations>`",
        "createdAt" : "2018-01-13T04:32:53Z",
        "updatedAt" : "2018-02-03T18:53:58Z",
        "lastEditedBy" : "7dd504ec-7e63-45b3-98f8-6eb1c683e9c2",
        "tags" : [
        ]
      },
      {
        "id" : "2866abaf-6435-43f5-9549-8e1613bf3ed3",
        "parentId" : "b4648211-89bf-4d95-b5c5-3c422a431194",
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "Prestart hook is certainly a feature that we'd consider to add in kubernetes. It was mentioned in the [initial CRI proposal](https://github.com/kubernetes/community/blob/master/contributors/design-proposals/node/container-runtime-interface-v1.md#container-lifecycle-hooks). Theoretically, CRI can support such hooks without any API change, but in reality, this needs to be called out and discussed since it's not something kubernetes already supports. +1 to what @Random-Liu suggested -- bringing up this discussion via a issue or in a sig-node meeting.\r\n\r\nIt's also worth mentioning that docker would not be able to support this out of the box AFAIK. I am not sure whether we can hack around it.",
        "createdAt" : "2018-01-17T01:53:59Z",
        "updatedAt" : "2018-02-03T18:53:58Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "ebaf30c1-a406-459a-af76-cfc66c284df8",
        "parentId" : "b4648211-89bf-4d95-b5c5-3c422a431194",
        "authorId" : "7dd504ec-7e63-45b3-98f8-6eb1c683e9c2",
        "body" : "@yujuhong We are not using docker but I also think it can be better implemented in other CRI shims like containerd",
        "createdAt" : "2018-01-17T18:30:45Z",
        "updatedAt" : "2018-02-03T18:53:58Z",
        "lastEditedBy" : "7dd504ec-7e63-45b3-98f8-6eb1c683e9c2",
        "tags" : [
        ]
      }
    ],
    "commit" : "db537e5954c6517f168a59c3f97b1bd3c80f80df",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +383,387 @@}\n\ntype Annotation struct {\n\tName  string\n\tValue string"
  },
  {
    "id" : "b7071fe5-dee6-471d-b66c-c61c714e333c",
    "prId" : 36020,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/36020#pullrequestreview-6864884",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "acd50a43-e220-4c3c-b5d3-c1e57d73d14c",
        "parentId" : null,
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "Where is `port`? Is it handled somewhere else?\n",
        "createdAt" : "2016-11-02T03:58:14Z",
        "updatedAt" : "2016-11-03T20:26:44Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      },
      {
        "id" : "403c55e1-ee00-432e-a102-310dd6f399e4",
        "parentId" : "acd50a43-e220-4c3c-b5d3-c1e57d73d14c",
        "authorId" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "body" : "Unfortunately the ports aren't included in the initial request, so without some changes to the client API we don't have that information here. I left a TODO [here](https://github.com/kubernetes/kubernetes/pull/36020/files/b97fc5c794374cb6c83a04b4fd7d89ab2a3762fe#diff-0170c1534446e377b025a1c54ab478e2R234) to deal with it later.\n",
        "createdAt" : "2016-11-02T17:16:02Z",
        "updatedAt" : "2016-11-03T20:26:44Z",
        "lastEditedBy" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "tags" : [
        ]
      }
    ],
    "commit" : "86d849e3749ee86fc1a485ad7085d31adcff0148",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +141,145 @@\tGetExec(id ContainerID, cmd []string, stdin, stdout, stderr, tty bool) (*url.URL, error)\n\tGetAttach(id ContainerID, stdin, stdout, stderr bool) (*url.URL, error)\n\tGetPortForward(podName, podNamespace string, podUID types.UID) (*url.URL, error)\n}\n"
  },
  {
    "id" : "a3a2f2d1-ec2a-4e04-9215-ffe9d68292d8",
    "prId" : 29509,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d7af4e58-7006-4aa5-ac53-43f1b0eee613",
        "parentId" : null,
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "What is the format? Do we define cgroup devices elsewhere?\n",
        "createdAt" : "2016-08-01T18:16:06Z",
        "updatedAt" : "2016-10-10T05:47:53Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      },
      {
        "id" : "4bddf390-b775-4f59-b7d7-45229ea967e2",
        "parentId" : "d7af4e58-7006-4aa5-ac53-43f1b0eee613",
        "authorId" : "b9cd3bbd-5e27-418d-850f-9875159d4e01",
        "body" : "I didn't find we define cgroup devices elsewhere. And regarding the struct I defined, it is same as `github.com/docker/engine-api/types/container.DeviceMapping`, it's used in docker_manager.go\n\n``` go\nResources: dockercontainer.Resources{\n            Memory:     memoryLimit,\n            MemorySwap: -1,\n            CPUShares:  cpuShares,\n            Devices:    devices,\n        },\n```\n\nBut I want to put it here for both Docker and RKT, so they both could support more devices in the future. Also the current devices type `[]string` is not suit for Docker. It always need a host/container path mapping.\n",
        "createdAt" : "2016-08-02T05:21:19Z",
        "updatedAt" : "2016-10-10T05:47:53Z",
        "lastEditedBy" : "b9cd3bbd-5e27-418d-850f-9875159d4e01",
        "tags" : [
        ]
      },
      {
        "id" : "3308ef6c-49d0-4ee4-bb06-6949926414d5",
        "parentId" : "d7af4e58-7006-4aa5-ac53-43f1b0eee613",
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "Apologies. I confused this with CRI. BTW I don't think we can make arbitrary changes to the Runtime interface since Kubelet is introducing a remote client API for runtimes. This change might have to be reflected there as well.  Look [here](https://github.com/kubernetes/kubernetes/blob/master/pkg/kubelet/api/v1alpha1/runtime/api.proto) for the new API.\n",
        "createdAt" : "2016-08-08T21:06:37Z",
        "updatedAt" : "2016-10-10T05:47:53Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      },
      {
        "id" : "218113a6-8a1e-46c9-bc4e-ceffea767449",
        "parentId" : "d7af4e58-7006-4aa5-ac53-43f1b0eee613",
        "authorId" : "b9cd3bbd-5e27-418d-850f-9875159d4e01",
        "body" : "@vishh I'm aware of that we have mount struct for the volume, and I think maybe we can have another struct for device mapped to container, like the GPU devices, because this is also an important information in container, or we only need the number of GPU mapped to container? I'm working on be familiar with the new API now.\n",
        "createdAt" : "2016-08-12T09:45:34Z",
        "updatedAt" : "2016-10-10T05:47:53Z",
        "lastEditedBy" : "b9cd3bbd-5e27-418d-850f-9875159d4e01",
        "tags" : [
        ]
      }
    ],
    "commit" : "d977adbb0ff046c76fa2cb864dad5deb4582cb8d",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +388,392 @@\tPathInContainer string\n\t// Cgroup permissions\n\tPermissions string\n}\n"
  },
  {
    "id" : "4905fb07-6775-4fb4-a0ac-a11df6f1f54a",
    "prId" : 29509,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/29509#pullrequestreview-3793161",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "877a112f-9e06-4ba1-834a-9c956efe9779",
        "parentId" : null,
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "@Hui-Zhi how to populate `DeviceInfo` for GPU devices? does api.PodSpec needing changes for this?\n",
        "createdAt" : "2016-10-11T03:13:40Z",
        "updatedAt" : "2016-10-11T03:13:40Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      },
      {
        "id" : "10671ac6-0b0f-46ef-ad2b-40204d4292a9",
        "parentId" : "877a112f-9e06-4ba1-834a-9c956efe9779",
        "authorId" : "b9cd3bbd-5e27-418d-850f-9875159d4e01",
        "body" : "So far, it doesn't need api.PodSpec change for this. This is a general devices mapping, GPU is an example of these devices, but we can consider it when enable GPU in kubernetes.  Regarding the implementation, you can see it in #28216 , also there is a PR for GPU, #30756\n",
        "createdAt" : "2016-10-11T12:31:28Z",
        "updatedAt" : "2016-10-11T12:31:28Z",
        "lastEditedBy" : "b9cd3bbd-5e27-418d-850f-9875159d4e01",
        "tags" : [
        ]
      },
      {
        "id" : "27f17bc9-c137-4ed5-a754-11a7666408fa",
        "parentId" : "877a112f-9e06-4ba1-834a-9c956efe9779",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "Y, thanks.\n",
        "createdAt" : "2016-10-12T00:58:55Z",
        "updatedAt" : "2016-10-12T00:58:55Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      }
    ],
    "commit" : "d977adbb0ff046c76fa2cb864dad5deb4582cb8d",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +398,402 @@\tMounts []Mount\n\t// The host devices mapped into the containers.\n\tDevices []DeviceInfo\n\t// The port mappings for the containers.\n\tPortMappings []PortMapping"
  },
  {
    "id" : "87c1edd7-c006-4042-950f-1172a552d2fb",
    "prId" : 25062,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "20c7cdd3-79cc-4376-87d1-32a3fb507bf2",
        "parentId" : null,
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "Is it essential for adding `GetNetNS()` to `Runtime` interface? Not all container runtimes (e.g., HyperContainer, which is a hypervisor-based container runtime) run containers inside network namespace.\n",
        "createdAt" : "2016-05-03T09:53:42Z",
        "updatedAt" : "2016-05-18T16:28:14Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      },
      {
        "id" : "3573202d-9dab-4153-b1e7-3e1c58bfd83a",
        "parentId" : "20c7cdd3-79cc-4376-87d1-32a3fb507bf2",
        "authorId" : "57f729dd-988a-4d1a-83bf-ee70bf637c64",
        "body" : "> Is it essential for adding GetNetNS() to Runtime interface? Not all container runtimes (e.g., HyperContainer, which is a hypervisor-based container runtime) run containers inside network namespace.\n\n@feiskyer Good point, though I'd like to reduce the usage of casting in the network plugins and potentially make them usable for more runtimes.  What if we specified in the Runtime interface that a Runtime was not required to return a valid netns path if that runtime does not do namespace creation?  Network plugins would then get an error and exit, indicating this plugin was not compatible with the runtime.\n",
        "createdAt" : "2016-05-03T14:34:04Z",
        "updatedAt" : "2016-05-18T16:28:14Z",
        "lastEditedBy" : "57f729dd-988a-4d1a-83bf-ee70bf637c64",
        "tags" : [
        ]
      },
      {
        "id" : "7ac2448c-fca7-459c-a785-0f037494026a",
        "parentId" : "20c7cdd3-79cc-4376-87d1-32a3fb507bf2",
        "authorId" : "2fa5a4c6-e0a7-4dbe-a80e-7770a5dc92a1",
        "body" : "I think it's cleaner to have a `NetworkPluggableRuntime` (name?) interface which just has `GetNetNS` since that's the only method needed, and then docker & rkt can implement it and you can cast to that, rather than a concrete implementation.\nIf some runtimes will stub out the method, it's not really part of a container runtime.\n",
        "createdAt" : "2016-05-03T18:07:39Z",
        "updatedAt" : "2016-05-18T16:28:14Z",
        "lastEditedBy" : "2fa5a4c6-e0a7-4dbe-a80e-7770a5dc92a1",
        "tags" : [
        ]
      },
      {
        "id" : "fdb6a932-ffc3-4937-b071-59ac69a00d1a",
        "parentId" : "20c7cdd3-79cc-4376-87d1-32a3fb507bf2",
        "authorId" : "57f729dd-988a-4d1a-83bf-ee70bf637c64",
        "body" : "I don't really see the difference right now between GetNetNS() and a NetworkPluggableRuntime.  If we add more methods that runtimes won't implement, then sure, maybe we re-evaluate.\n\nAlso note that the only reason there _is_ a GetRuntime() is for GetNetNS(); CNI uses it for Status() too but I think that's bogus and it should follow the same model as kubenet does, but that's another PR.  I think we can probably get rid of GetRuntime() in favor of some other interface that the runtime actually implements.  Even better, since the runtimes themselves are calling the functions, we should just pass an interface into them (or nil) instead of having a roundable GetRuntime().\n\nIn summary, I'd like to go with GetNetNS() for now, and rework GetRuntime() in a further PR if that's OK?  With the understanding that yes, not all runtimes support returning a netns path now or in the future.\n",
        "createdAt" : "2016-05-03T19:30:21Z",
        "updatedAt" : "2016-05-18T16:28:14Z",
        "lastEditedBy" : "57f729dd-988a-4d1a-83bf-ee70bf637c64",
        "tags" : [
        ]
      },
      {
        "id" : "bdeb823b-9099-4e85-9d60-4321dbef50bf",
        "parentId" : "20c7cdd3-79cc-4376-87d1-32a3fb507bf2",
        "authorId" : "2fa5a4c6-e0a7-4dbe-a80e-7770a5dc92a1",
        "body" : "The difference is indeed just conceptual/academic right now, not practical, so I'm fine with this for now with the hope of an even better solution later. Thanks for the explanation as well.\n",
        "createdAt" : "2016-05-03T20:13:02Z",
        "updatedAt" : "2016-05-18T16:28:14Z",
        "lastEditedBy" : "2fa5a4c6-e0a7-4dbe-a80e-7770a5dc92a1",
        "tags" : [
        ]
      }
    ],
    "commit" : "552b648caffb5be5ae86e237157fdad234caf4a4",
    "line" : null,
    "diffHunk" : "@@ -1,1 +103,107 @@\t// TODO: Change ContainerID to a Pod ID since the namespace is shared\n\t// by all containers in the pod.\n\tGetNetNS(containerID ContainerID) (string, error)\n\t// TODO(vmarmol): Unify pod and containerID args.\n\t// GetContainerLogs returns logs of a specific container. By"
  },
  {
    "id" : "14b37d61-86ee-493a-a5df-b1b889449b64",
    "prId" : 25062,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5c2ade29-f072-4ff8-8370-d222a1bf12b6",
        "parentId" : null,
        "authorId" : "227eb550-8b08-4420-9a78-279f840bd8de",
        "body" : "nits: Can we add a TODO here to say we want to revisit this and change ContainerID to pod UID in the future?\n",
        "createdAt" : "2016-05-17T22:20:35Z",
        "updatedAt" : "2016-05-18T16:28:14Z",
        "lastEditedBy" : "227eb550-8b08-4420-9a78-279f840bd8de",
        "tags" : [
        ]
      },
      {
        "id" : "69f348a2-0a48-4df9-be0f-932691d93144",
        "parentId" : "5c2ade29-f072-4ff8-8370-d222a1bf12b6",
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "TODO sounds good. We'll probably include this via the pod sandbox interface in the future, so container id is not needed.\n",
        "createdAt" : "2016-05-19T01:37:18Z",
        "updatedAt" : "2016-05-19T01:37:18Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "552b648caffb5be5ae86e237157fdad234caf4a4",
    "line" : null,
    "diffHunk" : "@@ -1,1 +103,107 @@\t// TODO: Change ContainerID to a Pod ID since the namespace is shared\n\t// by all containers in the pod.\n\tGetNetNS(containerID ContainerID) (string, error)\n\t// TODO(vmarmol): Unify pod and containerID args.\n\t// GetContainerLogs returns logs of a specific container. By"
  },
  {
    "id" : "12949936-ee6d-455b-8369-20ef1de41323",
    "prId" : 24843,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0870599c-8d86-4ea1-9762-a2ed33c30abb",
        "parentId" : null,
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "nit: Why not a `*time.Duration` instead of `*int64`?\n",
        "createdAt" : "2016-04-29T23:44:48Z",
        "updatedAt" : "2016-05-06T16:14:52Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      },
      {
        "id" : "d55901b5-8cfa-4397-953a-cf83dac49ee6",
        "parentId" : "0870599c-8d86-4ea1-9762-a2ed33c30abb",
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "ping @derekwaynecarr ^^\n",
        "createdAt" : "2016-05-02T18:30:39Z",
        "updatedAt" : "2016-05-06T16:14:52Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      },
      {
        "id" : "abe001db-7430-4032-92a1-874222ef9e48",
        "parentId" : "0870599c-8d86-4ea1-9762-a2ed33c30abb",
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "I went with int for the following reasons:\n-  it was consistent with pod termination grace period seconds (int64)\n  - https://github.com/kubernetes/kubernetes/blob/master/pkg/api/types.go#L1208\n- it was consistent with docker client StopContainer timeout in seconds (int)\n  - https://github.com/kubernetes/kubernetes/blob/master/pkg/kubelet/dockertools/docker.go#L64\n- it was consistent with systemd `TimeoutStopSec`\n  - https://www.freedesktop.org/software/systemd/man/systemd.service.html\n\nso basically, taking a duration means we have to remember to convert to second precision which seemed more complicated/error prone\n",
        "createdAt" : "2016-05-05T18:37:02Z",
        "updatedAt" : "2016-05-06T16:14:52Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      }
    ],
    "commit" : "7bab6999d408a120f962841f4ca1dd37b80f2490",
    "line" : null,
    "diffHunk" : "@@ -1,1 +83,87 @@\t// only hard kill paths are allowed to specify a gracePeriodOverride in the kubelet in order to not corrupt user data.\n\t// it is useful when doing SIGKILL for hard eviction scenarios, or max grace period during soft eviction scenarios.\n\tKillPod(pod *api.Pod, runningPod Pod, gracePeriodOverride *int64) error\n\t// GetPodStatus retrieves the status of the pod, including the\n\t// information of all containers in the pod that are visble in Runtime."
  },
  {
    "id" : "3c24cbf6-c872-4e58-a8fa-32763024f2fe",
    "prId" : 22467,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f2d60797-9cc3-4e50-882e-091a18e04cf2",
        "parentId" : null,
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "IMO, we should fold APIVersion in to Version in the future.\n",
        "createdAt" : "2016-03-04T19:13:27Z",
        "updatedAt" : "2016-03-05T05:26:55Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "7b09cd51-eba0-485c-8f59-43f1c04ac3f1",
        "parentId" : "f2d60797-9cc3-4e50-882e-091a18e04cf2",
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "Yeah, agree. I'll add a TODO here.\n",
        "createdAt" : "2016-03-04T19:33:29Z",
        "updatedAt" : "2016-03-05T05:26:55Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      }
    ],
    "commit" : "07b21c50facc9ca365fd1a3c31e737b83f8ee4de",
    "line" : null,
    "diffHunk" : "@@ -1,1 +59,63 @@\t// runtime. This may be different from the runtime engine's version.\n\t// TODO(random-liu): We should fold this into Version()\n\tAPIVersion() (Version, error)\n\t// Status returns error if the runtime is unhealthy; nil otherwise.\n\tStatus() error"
  },
  {
    "id" : "cda272f7-6b56-47d4-aec4-44be04177db0",
    "prId" : 20782,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c213212b-e6bb-4172-a965-d04c2351f7b0",
        "parentId" : null,
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "cc @yifan-gu \n",
        "createdAt" : "2016-02-08T18:40:08Z",
        "updatedAt" : "2016-02-14T05:40:28Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      }
    ],
    "commit" : "5d511aeb549dabe0f6d41f334c08e92f589d2f82",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +356,360 @@\tCgroupParent string\n\t// The type of container rootfs\n\tReadOnly bool\n}\n"
  },
  {
    "id" : "0f670df3-9506-41bd-b628-add3888b07eb",
    "prId" : 17259,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6cdee2d9-8896-4573-8086-202022b415f4",
        "parentId" : null,
        "authorId" : "a6409368-42e0-44a9-bf79-9d3042ac3b65",
        "body" : "Please add comment that this is going to be deprecated, and instead the GetRawPodStatus is the one to use for all runtime implementations. \n",
        "createdAt" : "2015-11-18T00:29:12Z",
        "updatedAt" : "2015-11-18T01:04:11Z",
        "lastEditedBy" : "a6409368-42e0-44a9-bf79-9d3042ac3b65",
        "tags" : [
        ]
      }
    ],
    "commit" : "760309f34975fa5f70fcca1e0d9804883d2ddee3",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +92,96 @@\t// all containers in the pod. Clients of this interface assume the\n\t// containers' statuses in a pod always have a deterministic ordering\n\t// (e.g., sorted by name).\n\t// TODO: Rename this to GetAPIPodStatus, and eventually deprecate the\n\t// function in favor of GetRawPodStatus."
  },
  {
    "id" : "aaaf8d7c-c09d-4a80-846d-98813048ad7a",
    "prId" : 17259,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "61e99219-d721-497b-a952-73a65ce26a9a",
        "parentId" : null,
        "authorId" : "a6409368-42e0-44a9-bf79-9d3042ac3b65",
        "body" : "Please comment this method is going to be rename to GetPodStatus along with deprecating previous GetPodStatus defined above. \n",
        "createdAt" : "2015-11-18T00:30:06Z",
        "updatedAt" : "2015-11-18T01:04:11Z",
        "lastEditedBy" : "a6409368-42e0-44a9-bf79-9d3042ac3b65",
        "tags" : [
        ]
      }
    ],
    "commit" : "760309f34975fa5f70fcca1e0d9804883d2ddee3",
    "line" : null,
    "diffHunk" : "@@ -1,1 +99,103 @@\t// information of all containers in the pod that are visble in Runtime.\n\t// TODO: Rename this to GetPodStatus to replace the original function.\n\tGetRawPodStatus(uid types.UID, name, namespace string) (*RawPodStatus, error)\n\t// ConvertRawToPodStatus converts the RawPodStatus object to api.PodStatus.\n\t// This function is needed because Docker generates some high-level and/or"
  },
  {
    "id" : "89a07a80-f2d5-4a2d-a2ae-dd352d63df40",
    "prId" : 17259,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6a2a4d19-b953-45b5-83dd-35d3ddfe384a",
        "parentId" : null,
        "authorId" : "a6409368-42e0-44a9-bf79-9d3042ac3b65",
        "body" : "Comment this one is to-be-deprecated.\n",
        "createdAt" : "2015-11-18T00:30:32Z",
        "updatedAt" : "2015-11-18T01:04:11Z",
        "lastEditedBy" : "a6409368-42e0-44a9-bf79-9d3042ac3b65",
        "tags" : [
        ]
      }
    ],
    "commit" : "760309f34975fa5f70fcca1e0d9804883d2ddee3",
    "line" : null,
    "diffHunk" : "@@ -1,1 +106,110 @@\t// TODO: Deprecate this function once we generalize the logic for all\n\t// container runtimes in kubelet.\n\tConvertRawToPodStatus(*api.Pod, *RawPodStatus) (*api.PodStatus, error)\n\t// PullImage pulls an image from the network to local storage using the supplied\n\t// secrets if necessary."
  },
  {
    "id" : "bef5d1bf-7c96-4a60-8f7c-bb1f209c30a0",
    "prId" : 10313,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ebac0ffa-4518-45d9-aab9-3b4221ab0353",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "ugh, ideally we would keep api.Pod and kubelet/container.Pod close enough that pkg/conversion could do this automatically :/\n\nNot asking for a change.\n",
        "createdAt" : "2015-07-01T23:18:04Z",
        "updatedAt" : "2015-07-01T23:25:08Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "d8cef98e-752e-4249-a80e-65f68d5a0428",
        "parentId" : "ebac0ffa-4518-45d9-aab9-3b4221ab0353",
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "In the current stage, they are far from close. I am not sure if the plan is to make them close, or to grow them differently. @dchen1107 would know more...\n",
        "createdAt" : "2015-07-01T23:28:12Z",
        "updatedAt" : "2015-07-01T23:28:12Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "a10a6a296e4efa90483febce5f6147b620e84e7b",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +289,293 @@func (p *Pod) ToAPIPod() *api.Pod {\n\tvar pod api.Pod\n\tpod.UID = p.ID\n\tpod.Name = p.Name\n\tpod.Namespace = p.Namespace"
  },
  {
    "id" : "9bb5d297-87ad-4a65-9f52-9fbe1186e8fc",
    "prId" : 7974,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "39d70336-dc7f-439f-b1bf-1c5cf167eca9",
        "parentId" : null,
        "authorId" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "body" : "Do we really need this interface method, @vmarmol?\n",
        "createdAt" : "2015-05-18T21:22:10Z",
        "updatedAt" : "2015-05-19T16:41:15Z",
        "lastEditedBy" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "tags" : [
        ]
      },
      {
        "id" : "fb45ad2c-ab02-428b-a5f6-980145d42be1",
        "parentId" : "39d70336-dc7f-439f-b1bf-1c5cf167eca9",
        "authorId" : "b7abca6a-d6be-4008-a014-3b5ca0e90529",
        "body" : "Not really as we have the implementations today. We had it and left it around in case we needed it in the future. I'm fine removing if that makes things simpler.\n",
        "createdAt" : "2015-05-18T21:43:43Z",
        "updatedAt" : "2015-05-19T16:41:15Z",
        "lastEditedBy" : "b7abca6a-d6be-4008-a014-3b5ca0e90529",
        "tags" : [
        ]
      },
      {
        "id" : "5eb17134-5175-4009-96d0-70b84a025130",
        "parentId" : "39d70336-dc7f-439f-b1bf-1c5cf167eca9",
        "authorId" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "body" : "It doesn't need to be removed now, but maybe we should make an issue to assess what else can go.\n",
        "createdAt" : "2015-05-18T22:06:10Z",
        "updatedAt" : "2015-05-19T16:41:15Z",
        "lastEditedBy" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "tags" : [
        ]
      }
    ],
    "commit" : "72c0709f18cbeff1efef3c2bd601db5f1e117509",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +61,65 @@\t// PullImage pulls an image from the network to local storage using the supplied\n\t// secrets if necessary.\n\tPullImage(image ImageSpec, pullSecrets []api.Secret) error\n\t// IsImagePresent checks whether the container image is already in the local storage.\n\tIsImagePresent(image ImageSpec) (bool, error)"
  },
  {
    "id" : "86d16494-60a0-4b5f-8185-74301ce29c9a",
    "prId" : 7603,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3ed82703-29f8-4c7e-8262-e51f73e763b2",
        "parentId" : null,
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "`runningPod Pod` seems redundant to me since the container runtime can find the pod by itself. \n",
        "createdAt" : "2015-05-01T00:01:13Z",
        "updatedAt" : "2015-05-01T07:32:45Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "c7ada03d-c9bc-4f31-804d-8e895941544e",
        "parentId" : "3ed82703-29f8-4c7e-8262-e51f73e763b2",
        "authorId" : "b7abca6a-d6be-4008-a014-3b5ca0e90529",
        "body" : "Good point, removed runningPod.\n",
        "createdAt" : "2015-05-01T00:23:05Z",
        "updatedAt" : "2015-05-01T07:32:45Z",
        "lastEditedBy" : "b7abca6a-d6be-4008-a014-3b5ca0e90529",
        "tags" : [
        ]
      },
      {
        "id" : "737b4bce-da45-451c-83cf-76b4c1efedc9",
        "parentId" : "3ed82703-29f8-4c7e-8262-e51f73e763b2",
        "authorId" : "227eb550-8b08-4420-9a78-279f840bd8de",
        "body" : "I think we should pass runningPod to SyncPod. The running pod is from pod workers. We might want to refactor that, but for now it's efficient to pass the running pod to SyncPod I think?\n@vmarmol @yujuhong \n",
        "createdAt" : "2015-05-01T01:09:44Z",
        "updatedAt" : "2015-05-01T07:32:45Z",
        "lastEditedBy" : "227eb550-8b08-4420-9a78-279f840bd8de",
        "tags" : [
        ]
      },
      {
        "id" : "51b370aa-33b5-4601-adfd-abdcbe1e4241",
        "parentId" : "3ed82703-29f8-4c7e-8262-e51f73e763b2",
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "@yifan-gu, why is it more efficient to pass `runningPod` to `SyncPod`? Were you talking about the runtime cache? I am skeptical that we need to have the runtime cache in pod_workers.go, as opposed to in the separate container runtime. `GetPods` is relatively more expensive for docker, but that doesn't mean it's the same for rkt or other container runtimes. It seems that it makes more sense for each container runtime to optimize their operations individually.\n\nI agree that it might be less disruptive to keep `runningPod` for now though. @vmarmol, what's your opinion on this?\n",
        "createdAt" : "2015-05-01T03:53:29Z",
        "updatedAt" : "2015-05-01T07:32:45Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "e6d085b6-cb84-4fd7-bba6-d4f7195cd2e3",
        "parentId" : "3ed82703-29f8-4c7e-8262-e51f73e763b2",
        "authorId" : "227eb550-8b08-4420-9a78-279f840bd8de",
        "body" : "@yujuhong I mean since it's there, let's use it for now. I totally agree we should refactor that part :)\n",
        "createdAt" : "2015-05-01T05:13:24Z",
        "updatedAt" : "2015-05-01T07:32:45Z",
        "lastEditedBy" : "227eb550-8b08-4420-9a78-279f840bd8de",
        "tags" : [
        ]
      }
    ],
    "commit" : "6316b485ad38ae847c5e47715c89ea79d0399e3f",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +48,52 @@\tRunPod(*api.Pod, map[string]volume.Volume) error\n\t// Syncs the running pod into the desired pod.\n\tSyncPod(pod *api.Pod, runningPod Pod, podStatus api.PodStatus) error\n\t// KillPod kills all the containers of a pod.\n\tKillPod(pod Pod) error"
  },
  {
    "id" : "6850d460-697a-42a0-9322-1fcc1a4d809a",
    "prId" : 7277,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3f7e9aaf-f935-4d50-bd1e-8e5c574953bf",
        "parentId" : null,
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "cc @yifan-gu \n",
        "createdAt" : "2015-04-24T01:36:56Z",
        "updatedAt" : "2015-04-30T17:42:35Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      },
      {
        "id" : "771d0e56-a40f-4f62-a738-5f539b998ebb",
        "parentId" : "3f7e9aaf-f935-4d50-bd1e-8e5c574953bf",
        "authorId" : "227eb550-8b08-4420-9a78-279f840bd8de",
        "body" : "I am OK with this. But seems we need to change the comment to remove 'Docker'. My understanding is you don't want other container runtime to escape the cgroup as well, right? @guenter \n",
        "createdAt" : "2015-04-24T02:18:20Z",
        "updatedAt" : "2015-04-30T17:42:35Z",
        "lastEditedBy" : "227eb550-8b08-4420-9a78-279f840bd8de",
        "tags" : [
        ]
      },
      {
        "id" : "f81fd991-e6cc-4f1c-8f87-a3dd613395d4",
        "parentId" : "3f7e9aaf-f935-4d50-bd1e-8e5c574953bf",
        "authorId" : "4caaea84-5487-49da-9802-d8039e22a66d",
        "body" : "Hi Yifan! :) Sounds good, let's make this runtime-agnostic.\n",
        "createdAt" : "2015-04-24T02:33:49Z",
        "updatedAt" : "2015-04-30T17:42:35Z",
        "lastEditedBy" : "4caaea84-5487-49da-9802-d8039e22a66d",
        "tags" : [
        ]
      },
      {
        "id" : "956e6d2f-3e28-4c0c-a104-7e255c2390c6",
        "parentId" : "3f7e9aaf-f935-4d50-bd1e-8e5c574953bf",
        "authorId" : "227eb550-8b08-4420-9a78-279f840bd8de",
        "body" : "Hi Tobi! :) SGTM!\n",
        "createdAt" : "2015-04-24T02:53:13Z",
        "updatedAt" : "2015-04-30T17:42:35Z",
        "lastEditedBy" : "227eb550-8b08-4420-9a78-279f840bd8de",
        "tags" : [
        ]
      },
      {
        "id" : "7a132281-6747-445e-b570-83892ae5bdb5",
        "parentId" : "3f7e9aaf-f935-4d50-bd1e-8e5c574953bf",
        "authorId" : "4caaea84-5487-49da-9802-d8039e22a66d",
        "body" : "@vmarmol @vishh updated!\n",
        "createdAt" : "2015-04-30T00:09:50Z",
        "updatedAt" : "2015-04-30T17:42:35Z",
        "lastEditedBy" : "4caaea84-5487-49da-9802-d8039e22a66d",
        "tags" : [
        ]
      }
    ],
    "commit" : "b96c4046a8db538f0a341ff01126c814a8da3783",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +203,207 @@\tIpcMode string\n\t// The parent cgroup to pass to Docker\n\tCgroupParent string\n}\n"
  },
  {
    "id" : "4e9081af-86ae-499c-a722-4d7b8a113249",
    "prId" : 7241,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1bae6c85-90f2-4f1b-9326-67dcaa3d84dd",
        "parentId" : null,
        "authorId" : "a6409368-42e0-44a9-bf79-9d3042ac3b65",
        "body" : "string or internal struct defined for image here? \n",
        "createdAt" : "2015-04-23T19:40:36Z",
        "updatedAt" : "2015-04-23T19:40:36Z",
        "lastEditedBy" : "a6409368-42e0-44a9-bf79-9d3042ac3b65",
        "tags" : [
        ]
      },
      {
        "id" : "e90a92dd-f809-4eb7-96c8-0d4c1fde4e0e",
        "parentId" : "1bae6c85-90f2-4f1b-9326-67dcaa3d84dd",
        "authorId" : "b7abca6a-d6be-4008-a014-3b5ca0e90529",
        "body" : "String is fine I think, it's what we have in the API and doing better is #7203\n",
        "createdAt" : "2015-04-23T20:26:25Z",
        "updatedAt" : "2015-04-23T20:26:25Z",
        "lastEditedBy" : "b7abca6a-d6be-4008-a014-3b5ca0e90529",
        "tags" : [
        ]
      },
      {
        "id" : "2eb1f7e9-5288-4680-acae-6bdfda53b3b4",
        "parentId" : "1bae6c85-90f2-4f1b-9326-67dcaa3d84dd",
        "authorId" : "a6409368-42e0-44a9-bf79-9d3042ac3b65",
        "body" : "SGTM.\n",
        "createdAt" : "2015-04-23T20:39:24Z",
        "updatedAt" : "2015-04-23T20:39:24Z",
        "lastEditedBy" : "a6409368-42e0-44a9-bf79-9d3042ac3b65",
        "tags" : [
        ]
      }
    ],
    "commit" : "de6e81fb4a4ba41f49f00ebf84f4ccd546f97224",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +68,72 @@\tExecInContainer(container api.Container, pod *api.Pod, stdin io.Reader, stdout, stderr io.WriteCloser, tty bool)\n\t// Pull pulls an image from the network to local storage.\n\tPull(image string)\n\t// IsImagePresent checks whether the container image is already in the local storage.\n\tIsImagePresent(image string) (bool, error)"
  },
  {
    "id" : "fa7603e1-1416-4643-bc3a-18b4978a2998",
    "prId" : 6100,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "15349edd-8996-4018-b870-20f87c69b128",
        "parentId" : null,
        "authorId" : "b7abca6a-d6be-4008-a014-3b5ca0e90529",
        "body" : "Why not have this be part of Runtime above? I worry about having an interface per function call.\n",
        "createdAt" : "2015-03-27T23:27:01Z",
        "updatedAt" : "2015-03-31T16:32:07Z",
        "lastEditedBy" : "b7abca6a-d6be-4008-a014-3b5ca0e90529",
        "tags" : [
        ]
      },
      {
        "id" : "1a489d45-065b-4890-9a2a-3d9fe55cad9b",
        "parentId" : "15349edd-8996-4018-b870-20f87c69b128",
        "authorId" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "body" : "@vmarmol I was considering that but I couldn't find an object that implemented the interface or a usage of the interface anywhere. Did I miss something?\n",
        "createdAt" : "2015-03-28T01:41:32Z",
        "updatedAt" : "2015-03-31T16:32:07Z",
        "lastEditedBy" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "tags" : [
        ]
      },
      {
        "id" : "2d89b558-219f-46bc-919b-2f48018d8625",
        "parentId" : "15349edd-8996-4018-b870-20f87c69b128",
        "authorId" : "227eb550-8b08-4420-9a78-279f840bd8de",
        "body" : "@pmorie It's planned to be implemented by docker and rocket. I did a rocket implementation using these interfaces. Now I am trying to refactoring the docker code to make it close to these interfaces. The interface is not stable yet, it's meant to be modified.\n",
        "createdAt" : "2015-03-28T03:03:04Z",
        "updatedAt" : "2015-03-31T16:32:07Z",
        "lastEditedBy" : "227eb550-8b08-4420-9a78-279f840bd8de",
        "tags" : [
        ]
      },
      {
        "id" : "1c58ea24-0428-4ce8-962d-fb9944fee83a",
        "parentId" : "15349edd-8996-4018-b870-20f87c69b128",
        "authorId" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "body" : "@yifan-gu @vmarmol Eventually this method should be in the `container.Runtime` interface.  I can add it in this change, if you want, but I would like a narrow interface so we can easily consume this in the kubelet via that narrow interface until we're ready to switch to `container.Runtime`.\n",
        "createdAt" : "2015-03-28T18:43:19Z",
        "updatedAt" : "2015-03-31T16:32:07Z",
        "lastEditedBy" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "tags" : [
        ]
      },
      {
        "id" : "05c703d5-eb9a-4594-ad9a-db87dd2166ad",
        "parentId" : "15349edd-8996-4018-b870-20f87c69b128",
        "authorId" : "b7abca6a-d6be-4008-a014-3b5ca0e90529",
        "body" : "SGTM, let's put a TODO so we don't forget :)\n",
        "createdAt" : "2015-03-28T23:34:45Z",
        "updatedAt" : "2015-03-31T16:32:07Z",
        "lastEditedBy" : "b7abca6a-d6be-4008-a014-3b5ca0e90529",
        "tags" : [
        ]
      },
      {
        "id" : "9fd01c2f-9df0-41e7-8662-5658ab921faf",
        "parentId" : "15349edd-8996-4018-b870-20f87c69b128",
        "authorId" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "body" : "@vmarmol ack\n",
        "createdAt" : "2015-03-30T14:46:25Z",
        "updatedAt" : "2015-03-31T16:32:07Z",
        "lastEditedBy" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "tags" : [
        ]
      }
    ],
    "commit" : "7628b37d7824d371929ab01636f1c8ec71848435",
    "line" : null,
    "diffHunk" : "@@ -1,1 +57,61 @@//\n// TODO: eventually include this interface in Runtime\ntype ContainerRunner interface {\n\tRunContainer(pod *api.Pod, container *api.Container, opts *RunContainerOptions) (string, error)\n}"
  },
  {
    "id" : "d6091ccb-8ed3-4adb-862f-89b221f50b7c",
    "prId" : 5572,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2ee37698-8639-4f83-8430-8a6a97311267",
        "parentId" : null,
        "authorId" : "a6409368-42e0-44a9-bf79-9d3042ac3b65",
        "body" : "We need GetPodStatus-like method from rumtime abstraction too. \n",
        "createdAt" : "2015-03-18T20:32:33Z",
        "updatedAt" : "2015-03-20T20:15:24Z",
        "lastEditedBy" : "a6409368-42e0-44a9-bf79-9d3042ac3b65",
        "tags" : [
        ]
      },
      {
        "id" : "f4761b00-43d5-440e-9879-bf59906b9bed",
        "parentId" : "2ee37698-8639-4f83-8430-8a6a97311267",
        "authorId" : "227eb550-8b08-4420-9a78-279f840bd8de",
        "body" : "My idea is `GetPodStatus()` is automatically done during `ListPods()`. So we don't need call it multiple times. \n\nWe can have that in the interface, I am open to that, but I think we still need a GetPodStatus in kubelet, because it needs to read the podstatus cache and needs to set the readiness.\nhttps://github.com/GoogleCloudPlatform/kubernetes/blob/master/pkg/kubelet/kubelet.go#L1982\nhttps://github.com/GoogleCloudPlatform/kubernetes/blob/master/pkg/kubelet/kubelet.go#L2018\n",
        "createdAt" : "2015-03-18T21:03:54Z",
        "updatedAt" : "2015-03-20T20:15:24Z",
        "lastEditedBy" : "227eb550-8b08-4420-9a78-279f840bd8de",
        "tags" : [
        ]
      },
      {
        "id" : "36d690be-0866-40c3-916e-e51e9325366b",
        "parentId" : "2ee37698-8639-4f83-8430-8a6a97311267",
        "authorId" : "a6409368-42e0-44a9-bf79-9d3042ac3b65",
        "body" : "Yes, ListPods serves the same purpose. \n\nGetPodStatus in kubelet to correct Pod phase and update readiness is a separate issue, and should handle separately. \n",
        "createdAt" : "2015-03-18T21:28:21Z",
        "updatedAt" : "2015-03-20T20:15:24Z",
        "lastEditedBy" : "a6409368-42e0-44a9-bf79-9d3042ac3b65",
        "tags" : [
        ]
      },
      {
        "id" : "cfd54298-470c-41ff-8d1a-d6f2e5047c3a",
        "parentId" : "2ee37698-8639-4f83-8430-8a6a97311267",
        "authorId" : "227eb550-8b08-4420-9a78-279f840bd8de",
        "body" : "@dchen1107 I added `GetPodStatus()` , as well as the definition for pod and containers with minimum things we need AFAICS. Would like to hear your opinions :)\n",
        "createdAt" : "2015-03-18T23:26:17Z",
        "updatedAt" : "2015-03-20T20:15:24Z",
        "lastEditedBy" : "227eb550-8b08-4420-9a78-279f840bd8de",
        "tags" : [
        ]
      }
    ],
    "commit" : "487d34e409a96639e29b8977928c8bd2d4b47ec8",
    "line" : 41,
    "diffHunk" : "@@ -1,1 +39,43 @@\tRunContainerInPod(api.Container, *api.Pod, map[string]volume.Interface) error\n\t// KillContainerInPod kills a container in the pod.\n\tKillContainerInPod(api.Container, *api.Pod) error\n\t// GetPodStatus retrieves the status of the pod, including the information of\n\t// all containers in the pod."
  },
  {
    "id" : "d8c31345-7714-4b10-8e62-2463873253d1",
    "prId" : 5572,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "761951ed-4935-4478-a635-06cf47260f5c",
        "parentId" : null,
        "authorId" : "b7abca6a-d6be-4008-a014-3b5ca0e90529",
        "body" : "Only thing that worries me with Status in Pod is that for Docker we'll need to inspect every container after we list. This will be a bit expensive. Lets go with this and see how it goes. The abstraction does make it much nicer to use.\n",
        "createdAt" : "2015-03-19T16:20:43Z",
        "updatedAt" : "2015-03-20T20:15:24Z",
        "lastEditedBy" : "b7abca6a-d6be-4008-a014-3b5ca0e90529",
        "tags" : [
        ]
      },
      {
        "id" : "82610089-ef13-45d9-bd9f-989f536ea09a",
        "parentId" : "761951ed-4935-4478-a635-06cf47260f5c",
        "authorId" : "227eb550-8b08-4420-9a78-279f840bd8de",
        "body" : "@vmarmol Yes, I have thought about that. I think it might make more sense to let each syncPod() routine inspect its containers in the pod. Let me add a TODO to revisit this here, thank you!\n",
        "createdAt" : "2015-03-19T16:45:58Z",
        "updatedAt" : "2015-03-20T20:15:24Z",
        "lastEditedBy" : "227eb550-8b08-4420-9a78-279f840bd8de",
        "tags" : [
        ]
      }
    ],
    "commit" : "487d34e409a96639e29b8977928c8bd2d4b47ec8",
    "line" : null,
    "diffHunk" : "@@ -1,1 +65,69 @@\t// maybe we want to get one pod's status at a time (e.g. GetPodStatus()\n\t// for the particular pod after we GetPods()).\n\tStatus api.PodStatus\n}\n"
  },
  {
    "id" : "5a08446d-8f70-4b2f-871b-89c4992c25b8",
    "prId" : 5572,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "80999520-9e59-4b38-891b-a6e2770bc9e0",
        "parentId" : null,
        "authorId" : "b7abca6a-d6be-4008-a014-3b5ca0e90529",
        "body" : "We will also need a GetKubeletContainers() something that returns all containers that should be tracked by Kubelet. There are a few cases where they may not be associated with a pod (for example, we just switched the format of metadata and it made some containers appear to not be part of a pod).\n",
        "createdAt" : "2015-03-19T16:21:53Z",
        "updatedAt" : "2015-03-20T20:15:24Z",
        "lastEditedBy" : "b7abca6a-d6be-4008-a014-3b5ca0e90529",
        "tags" : [
        ]
      },
      {
        "id" : "59f002a0-2a67-4536-b31e-5a7562d7bfa2",
        "parentId" : "80999520-9e59-4b38-891b-a6e2770bc9e0",
        "authorId" : "227eb550-8b08-4420-9a78-279f840bd8de",
        "body" : "@vmarmol Oh I see. So in the example, are those containers still 'semantically' belong to a pod? Is it just because of the update of kubelet so that we cannot identify them? If so, can we keep backward-compatibility in the container runtime's implementation of `ListPods`?\n\nI made the assumption that every container belongs to a pod semantically. Will there be other cases violating this?\n",
        "createdAt" : "2015-03-19T17:15:11Z",
        "updatedAt" : "2015-03-20T20:15:24Z",
        "lastEditedBy" : "227eb550-8b08-4420-9a78-279f840bd8de",
        "tags" : [
        ]
      },
      {
        "id" : "37898692-c66f-49fa-bbba-011ecf2bafcd",
        "parentId" : "80999520-9e59-4b38-891b-a6e2770bc9e0",
        "authorId" : "a6409368-42e0-44a9-bf79-9d3042ac3b65",
        "body" : "Are you referring to name-schema change here? Yeah, I wish that is one-time thing, but who knows... Instead of GetKubeletContainers(), I would rather to have GetContainers() which returns running  or all containers on a node. Eventually we are going to manage the user's node, we need to reason about what is going on on that node related to other containers not managed by kubelet. \n",
        "createdAt" : "2015-03-19T17:19:03Z",
        "updatedAt" : "2015-03-20T20:15:24Z",
        "lastEditedBy" : "a6409368-42e0-44a9-bf79-9d3042ac3b65",
        "tags" : [
        ]
      },
      {
        "id" : "d8770903-9492-436f-aa78-a09874803b65",
        "parentId" : "80999520-9e59-4b38-891b-a6e2770bc9e0",
        "authorId" : "227eb550-8b08-4420-9a78-279f840bd8de",
        "body" : "@dchen1107 OK that makes sense. I think we might want more fields in the returned containers... But just leave it with very simple stuffs for now.\n",
        "createdAt" : "2015-03-19T17:45:57Z",
        "updatedAt" : "2015-03-20T20:15:24Z",
        "lastEditedBy" : "227eb550-8b08-4420-9a78-279f840bd8de",
        "tags" : [
        ]
      }
    ],
    "commit" : "487d34e409a96639e29b8977928c8bd2d4b47ec8",
    "line" : null,
    "diffHunk" : "@@ -1,1 +47,51 @@\t// are returned.\n\tGetContainers(all bool) ([]*Container, error)\n\t// TODO(yifan): Pull/Remove images\n}\n"
  }
]