[
  {
    "id" : "019d9f58-92a3-4365-b4d9-5579c99a4b07",
    "prId" : 95662,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/95662#pullrequestreview-517888303",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3245d578-24df-4329-9d3b-1463c8f059e3",
        "parentId" : null,
        "authorId" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "body" : "I THINK it should NOT record the event if the object is `nil`. ",
        "createdAt" : "2020-10-16T21:21:07Z",
        "updatedAt" : "2020-10-16T21:21:07Z",
        "lastEditedBy" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "tags" : [
        ]
      },
      {
        "id" : "6990f73e-f45d-4258-9ffe-648fbbcd29f5",
        "parentId" : "3245d578-24df-4329-9d3b-1463c8f059e3",
        "authorId" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "body" : "it is similar to the behavior that seems to be expected before. But worth paying attention to when reviewing this change",
        "createdAt" : "2020-10-16T21:21:48Z",
        "updatedAt" : "2020-10-16T21:21:48Z",
        "lastEditedBy" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "tags" : [
        ]
      },
      {
        "id" : "58d64e7a-71fc-4d62-820a-2ca5c28369a6",
        "parentId" : "3245d578-24df-4329-9d3b-1463c8f059e3",
        "authorId" : "a6409368-42e0-44a9-bf79-9d3042ac3b65",
        "body" : "+1",
        "createdAt" : "2020-10-27T16:13:40Z",
        "updatedAt" : "2020-10-27T16:13:40Z",
        "lastEditedBy" : "a6409368-42e0-44a9-bf79-9d3042ac3b65",
        "tags" : [
        ]
      }
    ],
    "commit" : "6c2556c5c42c23209e5327f0fabd79d65ff69f9f",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +195,199 @@\t\t// this check is needed AFTER the cast. See https://github.com/kubernetes/kubernetes/issues/95552\n\t\tif ref == nil {\n\t\t\treturn nil, false\n\t\t}\n\t\tif !strings.HasPrefix(ref.FieldPath, ImplicitContainerPrefix) {"
  },
  {
    "id" : "d28cb4f4-292d-4cde-9f46-fb573f65c266",
    "prId" : 94494,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/94494#pullrequestreview-491024475",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0f628971-7900-4b43-b89a-16cdf73e0116",
        "parentId" : null,
        "authorId" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "body" : "@thockin this name now does not leave the function. Only used inside this func to deduplicate entries",
        "createdAt" : "2020-09-17T22:12:28Z",
        "updatedAt" : "2020-09-17T22:12:28Z",
        "lastEditedBy" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "tags" : [
        ]
      }
    ],
    "commit" : "1c379b12818870bafe66b09760279e3f927a3beb",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +336,340 @@\t\tvar name string = p.Name\n\t\tif name == \"\" {\n\t\t\tname = fmt.Sprintf(\"%s-%s-%s:%d:%d\", family, p.Protocol, p.HostIP, p.ContainerPort, p.HostPort)\n\t\t}\n"
  },
  {
    "id" : "3ce28929-d472-402c-b146-b6e9f82e3bd5",
    "prId" : 83123,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/83123#pullrequestreview-303450990",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ee3be010-af53-404a-9688-adbd54141879",
        "parentId" : null,
        "authorId" : "0c76e20f-41a5-4725-b3c3-d5b6cae89641",
        "body" : "please restore to original value.",
        "createdAt" : "2019-10-17T17:48:33Z",
        "updatedAt" : "2019-10-25T16:19:02Z",
        "lastEditedBy" : "0c76e20f-41a5-4725-b3c3-d5b6cae89641",
        "tags" : [
        ]
      },
      {
        "id" : "a281ca7e-b4ea-48fb-944b-9c84e2b22536",
        "parentId" : "ee3be010-af53-404a-9688-adbd54141879",
        "authorId" : "62eb404a-5fe6-4b29-afab-583b57ce8f19",
        "body" : "done!",
        "createdAt" : "2019-10-17T18:15:17Z",
        "updatedAt" : "2019-10-25T16:19:02Z",
        "lastEditedBy" : "62eb404a-5fe6-4b29-afab-583b57ce8f19",
        "tags" : [
        ]
      }
    ],
    "commit" : "af4d18ccf9330a8dd7354c5441ccd841d469cee5",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +25,29 @@\t\"k8s.io/klog\"\n\n\tv1 \"k8s.io/api/core/v1\"\n\tmetav1 \"k8s.io/apimachinery/pkg/apis/meta/v1\"\n\t\"k8s.io/apimachinery/pkg/runtime\""
  },
  {
    "id" : "6bc0806f-dc66-4db4-98ec-17670f35e92f",
    "prId" : 83123,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/83123#pullrequestreview-317361617",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fe263840-969a-4a2f-81c9-d4f76a0feb57",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "nit: isn't `podIP` always `podIPs[0]` ?  We should not need both.  Ok for followup.",
        "createdAt" : "2019-11-15T00:41:54Z",
        "updatedAt" : "2019-11-15T01:13:41Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "ed9793cd-fba6-4319-9d20-4c34633b924e",
        "parentId" : "fe263840-969a-4a2f-81c9-d4f76a0feb57",
        "authorId" : "62eb404a-5fe6-4b29-afab-583b57ce8f19",
        "body" : "@thockin correct, podIP is always podsIPs[0]. Will do a followup PR. Thank you for the review.",
        "createdAt" : "2019-11-15T01:19:13Z",
        "updatedAt" : "2019-11-15T01:19:13Z",
        "lastEditedBy" : "62eb404a-5fe6-4b29-afab-583b57ce8f19",
        "tags" : [
        ]
      }
    ],
    "commit" : "af4d18ccf9330a8dd7354c5441ccd841d469cee5",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +46,50 @@// able to get necessary informations like the RunContainerOptions, DNS settings, Host IP.\ntype RuntimeHelper interface {\n\tGenerateRunContainerOptions(pod *v1.Pod, container *v1.Container, podIP string, podIPs []string) (contOpts *RunContainerOptions, cleanupAction func(), err error)\n\tGetPodDNS(pod *v1.Pod) (dnsConfig *runtimeapi.DNSConfig, err error)\n\t// GetPodCgroupParent returns the CgroupName identifier, and its literal cgroupfs form on the host"
  },
  {
    "id" : "512447db-b1f0-48b9-aedb-1c3b298cca13",
    "prId" : 71351,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/71351#pullrequestreview-204512055",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c9eee03d-52fb-4a0d-a3f1-7559f1cb2001",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "rather than doing regex parsing ourselves, would it be simpler to track missing keys in the mapping function, like this?\r\n\r\n```\r\nfunc ExpandContainerVolumeMounts(mount v1.VolumeMount, envs []EnvVar) (string, error) {\r\n  envmap := EnvVarsToMap(envs)\r\n  missingKeys := sets.NewString()\r\n  expanded := expansion.Expand(mount.SubPathExpr, func(key string) string{\r\n    value, ok := envmap[key]\r\n    if !ok || len(value) == 0 {\r\n      missingKeys.Insert(key)\r\n    }\r\n    return value\r\n  })\r\n  if len(missingKeys) > 0 {\r\n    return \"\", fmt.Errorf(\"missing value for %s\",strings.Join(missingKeys.List(), \", \"))\r\n  }\r\n  return expanded, nil\r\n}\r\n```",
        "createdAt" : "2019-02-15T17:18:34Z",
        "updatedAt" : "2019-02-20T01:37:45Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "9726d52e-2eb3-4394-9bc9-856b6aa4b434",
        "parentId" : "c9eee03d-52fb-4a0d-a3f1-7559f1cb2001",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "that would also let us return the missing envvars in the error, which is nice",
        "createdAt" : "2019-02-15T17:18:53Z",
        "updatedAt" : "2019-02-20T01:37:45Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "260946de-d22c-4c8c-b6d8-0405da097a3c",
        "parentId" : "c9eee03d-52fb-4a0d-a3f1-7559f1cb2001",
        "authorId" : "0d43352d-b6ae-4016-9e7f-921f64611474",
        "body" : "Not sure I understand this construction `value, ok := envmap[input]` - what does `input` refer to?",
        "createdAt" : "2019-02-15T18:21:22Z",
        "updatedAt" : "2019-02-20T01:37:45Z",
        "lastEditedBy" : "0d43352d-b6ae-4016-9e7f-921f64611474",
        "tags" : [
        ]
      },
      {
        "id" : "023b2341-8545-4c87-bd4d-8656a72d5760",
        "parentId" : "c9eee03d-52fb-4a0d-a3f1-7559f1cb2001",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "sorry... changed my variable name halfway through writing it... I mean `key`",
        "createdAt" : "2019-02-15T18:30:32Z",
        "updatedAt" : "2019-02-20T01:37:45Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "e04e0e80-9e95-4080-b6b2-f212583e6f97",
        "parentId" : "c9eee03d-52fb-4a0d-a3f1-7559f1cb2001",
        "authorId" : "0d43352d-b6ae-4016-9e7f-921f64611474",
        "body" : "It also doesn't seem to fulfil all the test cases which include `foo/$(ODD_NAME)/$(POD_NAME)` which seems to just return POD_NAME on first testing of this code",
        "createdAt" : "2019-02-15T18:35:24Z",
        "updatedAt" : "2019-02-20T01:37:45Z",
        "lastEditedBy" : "0d43352d-b6ae-4016-9e7f-921f64611474",
        "tags" : [
        ]
      },
      {
        "id" : "0886038a-72b9-4ec0-859e-7acffc454147",
        "parentId" : "c9eee03d-52fb-4a0d-a3f1-7559f1cb2001",
        "authorId" : "0d43352d-b6ae-4016-9e7f-921f64611474",
        "body" : "And this one doesn't behave either `$(POD_NAME$(ANNOTATION))` - this is why I use the regex to split all the cases at the boundaries of the envvars",
        "createdAt" : "2019-02-15T18:38:02Z",
        "updatedAt" : "2019-02-20T01:37:45Z",
        "lastEditedBy" : "0d43352d-b6ae-4016-9e7f-921f64611474",
        "tags" : [
        ]
      },
      {
        "id" : "7b24be95-e1f0-4526-8b50-b03540c9ae1b",
        "parentId" : "c9eee03d-52fb-4a0d-a3f1-7559f1cb2001",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "expansion.Expand already splits tokens for you, we shouldn't need to reimplement that...\r\n\r\nyour mapping function determines what values to replace the specified keys with, and can record missing values, which cause ExpandContainerVolumeMounts to return an error",
        "createdAt" : "2019-02-15T18:41:02Z",
        "updatedAt" : "2019-02-20T01:37:45Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "054a8d77-53ce-43c3-952c-48b8a4e9a307",
        "parentId" : "c9eee03d-52fb-4a0d-a3f1-7559f1cb2001",
        "authorId" : "0d43352d-b6ae-4016-9e7f-921f64611474",
        "body" : "Unless I am missing something I cant see this handle the case when the subpath expression contains multiple values which might not be in the environment variable list",
        "createdAt" : "2019-02-15T20:44:17Z",
        "updatedAt" : "2019-02-20T01:37:45Z",
        "lastEditedBy" : "0d43352d-b6ae-4016-9e7f-921f64611474",
        "tags" : [
        ]
      },
      {
        "id" : "c5dd2d1d-4f1d-40ec-a279-45f40121cb76",
        "parentId" : "c9eee03d-52fb-4a0d-a3f1-7559f1cb2001",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "the unit test should look like this:\r\n\r\n```go\r\nfor _, tc := range cases {\r\n\tactualSubPath, err := ExpandContainerVolumeMounts(tc.container.VolumeMounts[0], tc.envs)\r\n\tok := err == nil\r\n\tif e, a := tc.expectedOk, ok; !reflect.DeepEqual(e, a) {\r\n\t\tt.Errorf(\"%v: unexpected validation failure of subpath; expected %v, got %v\", tc.name, e, a)\r\n\t}\r\n\tif !ok {\r\n\t\t// if ExpandContainerVolumeMounts returns an error, we don't care what the actualSubPath value is\r\n\t\tcontinue\r\n\t}\r\n\tif e, a := tc.expectedSubPath, actualSubPath; !reflect.DeepEqual(e, a) {\r\n\t\tt.Errorf(\"%v: unexpected subpath; expected %v, got %v\", tc.name, e, a)\r\n\t}\r\n\tif e, a := tc.expectedMountPath, tc.container.VolumeMounts[0].MountPath; !reflect.DeepEqual(e, a) {\r\n\t\tt.Errorf(\"%v: unexpected mountpath; expected %v, got %v\", tc.name, e, a)\r\n\t}\r\n}\r\n```",
        "createdAt" : "2019-02-15T21:40:23Z",
        "updatedAt" : "2019-02-20T01:37:45Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "07b73a4e-e2c4-4bc0-8f4e-73249a4b7b67",
        "parentId" : "c9eee03d-52fb-4a0d-a3f1-7559f1cb2001",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "that verifies that all the `expectedOk:true` cases pass successfully, and all the `expectedOk:false` cases get an error as expected.\r\n\r\nwhen we get an error, we don't care what the resolved value is:\r\n\r\n```go\r\nsubPath, err = kubecontainer.ExpandContainerVolumeMounts(mount, expandEnvs)\r\n\r\nif err != nil {\r\n\treturn nil, cleanupAction, fmt.Errorf(\"volume subpath expansion failed: %v\", err)\r\n}\r\n```",
        "createdAt" : "2019-02-15T21:42:18Z",
        "updatedAt" : "2019-02-20T01:37:45Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "cadd7fae-5277-40d6-9b60-9572e4831bc1",
        "parentId" : "c9eee03d-52fb-4a0d-a3f1-7559f1cb2001",
        "authorId" : "0d43352d-b6ae-4016-9e7f-921f64611474",
        "body" : "Sorry, I wasnt clear. I have made all the test cases run but there are some that wont work with this code suggestion. So if the subpath is set to something like $(ODD_NAME)/$(POD_NAME) and ODD_NAME is not defined in the env list then it wont get parsed ",
        "createdAt" : "2019-02-15T23:23:02Z",
        "updatedAt" : "2019-02-20T01:37:45Z",
        "lastEditedBy" : "0d43352d-b6ae-4016-9e7f-921f64611474",
        "tags" : [
        ]
      },
      {
        "id" : "39306434-0b77-45e4-9f8c-ece7f691d0b7",
        "parentId" : "c9eee03d-52fb-4a0d-a3f1-7559f1cb2001",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "> if the subpath is set to something like $(ODD_NAME)/$(POD_NAME) and ODD_NAME is not defined in the env list then it wont get parsed\r\n\r\nis this the test case you mean?\r\n```\r\n{\r\n\tname: \"subpaths with missing env variables\",\r\n\tcontainer: &v1.Container{\r\n\t\tVolumeMounts: []v1.VolumeMount{{SubPathExpr: \"$(ODD_NAME)/$(POD_NAME)\"}},\r\n\t},\r\n\tenvs: []EnvVar{\r\n\t\t{\r\n\t\t\tName:  \"POD_NAME\",\r\n\t\t\tValue: \"bar\",\r\n\t\t},\r\n\t},\r\n\texpectedSubPath:   \"\",\r\n\texpectedMountPath: \"\",\r\n\texpectedOk:        false,\r\n},\r\n```\r\n\r\nthat fails as I'd expect it to",
        "createdAt" : "2019-02-16T02:13:43Z",
        "updatedAt" : "2019-02-20T01:37:45Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "eda9e896-adfc-4ab2-87e2-7d6bec834324",
        "parentId" : "c9eee03d-52fb-4a0d-a3f1-7559f1cb2001",
        "authorId" : "0d43352d-b6ae-4016-9e7f-921f64611474",
        "body" : "Thanks. I revisited the test cases and checked the results. These do seem okay, I misinterpreted the error condition being returned in one of the cases. I have pushed this change up",
        "createdAt" : "2019-02-16T08:45:31Z",
        "updatedAt" : "2019-02-20T01:37:45Z",
        "lastEditedBy" : "0d43352d-b6ae-4016-9e7f-921f64611474",
        "tags" : [
        ]
      }
    ],
    "commit" : "a64b854137b5fc6c60724cbe349122e3bda8b09e",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +133,137 @@\nfunc ExpandContainerVolumeMounts(mount v1.VolumeMount, envs []EnvVar) (string, error) {\n\n\tenvmap := EnvVarsToMap(envs)\n\tmissingKeys := sets.NewString()"
  },
  {
    "id" : "98b3b22b-bf0c-461d-a2ee-c9beac9f5bdd",
    "prId" : 55093,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/55093#pullrequestreview-74514176",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "649e59f2-26d3-41f3-a2a6-6d1a0309f428",
        "parentId" : null,
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "Update the comment to reflect the change.",
        "createdAt" : "2017-11-06T18:12:47Z",
        "updatedAt" : "2017-11-06T18:17:09Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "147f2299-ff3c-4d9b-af6b-aadef696846b",
        "parentId" : "649e59f2-26d3-41f3-a2a6-6d1a0309f428",
        "authorId" : "26bd3fa6-ac8d-4cb0-b746-a30dc1dc2931",
        "body" : "Thanks for the quick review. This comments seems correct to me, as `GetClusterDNS()` will still return DNS settings :)",
        "createdAt" : "2017-11-06T18:26:30Z",
        "updatedAt" : "2017-11-06T18:26:30Z",
        "lastEditedBy" : "26bd3fa6-ac8d-4cb0-b746-a30dc1dc2931",
        "tags" : [
        ]
      },
      {
        "id" : "320c2464-a235-43ee-be89-e7447d360292",
        "parentId" : "649e59f2-26d3-41f3-a2a6-6d1a0309f428",
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "Oops... you're right.. didn't notice the comment was for the entire `RuntimeHelper`. ",
        "createdAt" : "2017-11-06T18:30:16Z",
        "updatedAt" : "2017-11-06T18:30:16Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "c1a959c6602a710a8b12d6ff00e4df375a3a876c",
    "line" : 2,
    "diffHunk" : "@@ -1,1 +45,49 @@\n// RuntimeHelper wraps kubelet to make container runtime\n// able to get necessary informations like the RunContainerOptions, DNS settings, Host IP.\ntype RuntimeHelper interface {\n\tGenerateRunContainerOptions(pod *v1.Pod, container *v1.Container, podIP string) (contOpts *RunContainerOptions, err error)"
  },
  {
    "id" : "d67df084-0930-4aae-9086-0770fb7475f0",
    "prId" : 29119,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8fb42f31-8253-40a2-b889-22042cd59061",
        "parentId" : null,
        "authorId" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "body" : "I don't think this needs to be in the runtime helper interface -- why not just a utility function?\n",
        "createdAt" : "2016-07-19T18:27:49Z",
        "updatedAt" : "2016-07-22T21:44:37Z",
        "lastEditedBy" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "tags" : [
        ]
      },
      {
        "id" : "6d1116d4-81d6-40c1-8f72-115eeeaaeef4",
        "parentId" : "8fb42f31-8253-40a2-b889-22042cd59061",
        "authorId" : "241ab19e-f85a-4d22-92e2-88f2b6287d14",
        "body" : "Wasn't sure where to put this, where would I make the utility function? (before, the volumemanager was passed to the runtime but I changed it because now volumemanager itself needs an initialized runtime)\n",
        "createdAt" : "2016-07-19T18:36:59Z",
        "updatedAt" : "2016-07-22T21:44:37Z",
        "lastEditedBy" : "241ab19e-f85a-4d22-92e2-88f2b6287d14",
        "tags" : [
        ]
      },
      {
        "id" : "5e92e71b-438f-404b-b2bc-3346d69b47fe",
        "parentId" : "8fb42f31-8253-40a2-b889-22042cd59061",
        "authorId" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "body" : "Nevermind, I get why this is in there.  Be patient with me while I spin my brain back up.\n",
        "createdAt" : "2016-07-19T18:46:58Z",
        "updatedAt" : "2016-07-22T21:44:37Z",
        "lastEditedBy" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "tags" : [
        ]
      },
      {
        "id" : "4aefd7a0-62bf-4f6a-8c95-5417d6b4bbba",
        "parentId" : "8fb42f31-8253-40a2-b889-22042cd59061",
        "authorId" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "body" : "Might as well put a doc comment on this declaration.\n",
        "createdAt" : "2016-07-19T19:39:46Z",
        "updatedAt" : "2016-07-22T21:44:37Z",
        "lastEditedBy" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "tags" : [
        ]
      }
    ],
    "commit" : "ae1575b5cc8e697c69a911720caaf22bdacca3c1",
    "line" : null,
    "diffHunk" : "@@ -1,1 +48,52 @@\t// supplemental groups for the Pod. These extra supplemental groups come\n\t// from annotations on persistent volumes that the pod depends on.\n\tGetExtraSupplementalGroupsForPod(pod *api.Pod) []int64\n}\n"
  },
  {
    "id" : "6f1e43b3-f5b0-49d0-8546-65d7cf608c99",
    "prId" : 22607,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "82c7deb0-2a2d-45f4-bfc1-a8e3873152e6",
        "parentId" : null,
        "authorId" : "6252ac4b-6b9e-4dee-8931-ca3b934d52fc",
        "body" : "shouldn't this check be after restart policy checks?\n",
        "createdAt" : "2016-03-07T16:12:15Z",
        "updatedAt" : "2016-03-07T16:12:15Z",
        "lastEditedBy" : "6252ac4b-6b9e-4dee-8931-ca3b934d52fc",
        "tags" : [
        ]
      },
      {
        "id" : "0e5d22f0-4222-4dbe-bc2e-8494f6a90c8a",
        "parentId" : "82c7deb0-2a2d-45f4-bfc1-a8e3873152e6",
        "authorId" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "body" : "No. If you do it after the restart policy checks, then the restart policy is honored, which isn't what we want here.\n",
        "createdAt" : "2016-03-07T16:14:00Z",
        "updatedAt" : "2016-03-07T16:14:00Z",
        "lastEditedBy" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "tags" : [
        ]
      }
    ],
    "commit" : "45064d7a1e7374d2c20ded7a17848551460d75e5",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +61,65 @@\tif status.State == ContainerStateUnknown {\n\t\treturn true\n\t}\n\t// Check RestartPolicy for dead container\n\tif pod.Spec.RestartPolicy == api.RestartPolicyNever {"
  },
  {
    "id" : "1cc700e5-d2e6-4b91-86fc-dd7d45f85170",
    "prId" : 16272,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "069bc85f-686d-45c5-9fa1-48fbe6374898",
        "parentId" : null,
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "The code block from line 124 to 128 repeats in every method. Suggest creating a method to reduce duplication.\n",
        "createdAt" : "2015-11-03T22:19:35Z",
        "updatedAt" : "2015-11-04T09:12:57Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "39858db29e4ea5713b78e16b18ed81a585759c45",
    "line" : null,
    "diffHunk" : "@@ -1,1 +126,130 @@\t}\n\tif ref, ok := object.(*api.ObjectReference); ok {\n\t\tif !strings.HasPrefix(ref.FieldPath, ImplicitContainerPrefix) {\n\t\t\treturn ref, true\n\t\t}"
  },
  {
    "id" : "36ab96e1-0cef-4ad6-95df-6dec22b129b1",
    "prId" : 16272,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cb2cd094-969e-4b7e-9f53-54e8a2fba3f1",
        "parentId" : null,
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "`dockertools/manager.go` is full of if statement like this:\n\n```\nif ref != nil {\n     dm.recorder.Eventf(ref, \"Failed\", \"Failed to create docker container with error: %v\", err)\n}\n```\n\nSince you check whether the object is nil, can we also remove all the `if ref != nil` code?\n",
        "createdAt" : "2015-11-03T22:26:13Z",
        "updatedAt" : "2015-11-04T09:12:57Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "39858db29e4ea5713b78e16b18ed81a585759c45",
    "line" : null,
    "diffHunk" : "@@ -1,1 +122,126 @@\nfunc (irecorder *innerEventRecorder) shouldRecordEvent(object runtime.Object) (*api.ObjectReference, bool) {\n\tif object == nil {\n\t\treturn nil, false\n\t}"
  }
]