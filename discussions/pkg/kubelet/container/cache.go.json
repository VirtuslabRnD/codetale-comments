[
  {
    "id" : "e070ba3a-d327-4575-b6ba-7d78f5e06d0f",
    "prId" : 17700,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "582dfed8-f290-4d85-9c16-ff7843b34da2",
        "parentId" : null,
        "authorId" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "body" : "How does this relate to `status.Manager`? Which will be the source of truth? (e.g. for probe workers).\n",
        "createdAt" : "2016-01-05T19:55:21Z",
        "updatedAt" : "2016-01-13T18:20:05Z",
        "lastEditedBy" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "tags" : [
        ]
      },
      {
        "id" : "51b7d177-36b1-4b29-b666-5e9e3fed51c1",
        "parentId" : "582dfed8-f290-4d85-9c16-ff7843b34da2",
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "`status.Manger` is the source of truth of `api.PodStatus`, while `Cache` the source of truth of the internal `PodStatus`. It depends on whether or not prober relies on information only available in `api.PodStatus`. \n",
        "createdAt" : "2016-01-06T00:10:04Z",
        "updatedAt" : "2016-01-13T18:20:05Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "b5002645-c779-42b9-913b-5667930ba359",
        "parentId" : "582dfed8-f290-4d85-9c16-ff7843b34da2",
        "authorId" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "body" : "Ah, sorry, I missed that this was a different `PodStatus` type. That makes more sense.\n\nThe probe worker needs the ContainerID, start time, and whether the container is terminated. All that is available in the `kubecontainer.PodStatus`, so will this be the prefered method for retrieving that?\n",
        "createdAt" : "2016-01-06T00:29:22Z",
        "updatedAt" : "2016-01-13T18:20:05Z",
        "lastEditedBy" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "tags" : [
        ]
      }
    ],
    "commit" : "b56ed1a8c22263a1760aaeecee8c0768ac165dce",
    "line" : null,
    "diffHunk" : "@@ -1,1 +35,39 @@// populating the cache is expected to call Delete() to explicitly free the\n// cache entries.\ntype Cache interface {\n\tGet(types.UID) (*PodStatus, error)\n\tSet(types.UID, *PodStatus, error, time.Time)"
  },
  {
    "id" : "440215ab-d03a-4995-936c-51cc03a6e412",
    "prId" : 17700,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d0795bb8-53a6-4461-af57-847d10df5864",
        "parentId" : null,
        "authorId" : "227eb550-8b08-4420-9a78-279f840bd8de",
        "body" : "why will there be concurrent multiple subscribers for a pod?\n",
        "createdAt" : "2016-01-06T22:26:08Z",
        "updatedAt" : "2016-01-13T18:20:05Z",
        "lastEditedBy" : "227eb550-8b08-4420-9a78-279f840bd8de",
        "tags" : [
        ]
      },
      {
        "id" : "a2b10662-f7a3-48a9-9a40-5adac6a1693d",
        "parentId" : "d0795bb8-53a6-4461-af57-847d10df5864",
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "For now, we don't have multiple subscribers. However, it seems dumb to have a GetPodIfNewer() method in a cache that can not support multiple callers for a single pod.\n",
        "createdAt" : "2016-01-08T02:35:15Z",
        "updatedAt" : "2016-01-13T18:20:05Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "8894b190-1c01-42be-92c0-5b66e8ec8f4c",
        "parentId" : "d0795bb8-53a6-4461-af57-847d10df5864",
        "authorId" : "227eb550-8b08-4420-9a78-279f840bd8de",
        "body" : "ok\n",
        "createdAt" : "2016-01-10T06:10:45Z",
        "updatedAt" : "2016-01-13T18:20:05Z",
        "lastEditedBy" : "227eb550-8b08-4420-9a78-279f840bd8de",
        "tags" : [
        ]
      }
    ],
    "commit" : "b56ed1a8c22263a1760aaeecee8c0768ac165dce",
    "line" : null,
    "diffHunk" : "@@ -1,1 +195,199 @@\t}\n\t// Add the subscription record.\n\tc.subscribers[id] = append(c.subscribers[id], &subRecord{time: timestamp, ch: ch})\n\treturn ch\n}"
  },
  {
    "id" : "041ba2c1-49a7-4584-84a2-b8b9ec4a2c63",
    "prId" : 17700,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "285b8658-84b1-40cc-bef8-25a67b169323",
        "parentId" : null,
        "authorId" : "227eb550-8b08-4420-9a78-279f840bd8de",
        "body" : "Hmm, I still feel a little bit raw about this function name is not reflecting that the subscribers are being notified.\n",
        "createdAt" : "2016-01-12T20:02:17Z",
        "updatedAt" : "2016-01-13T18:20:05Z",
        "lastEditedBy" : "227eb550-8b08-4420-9a78-279f840bd8de",
        "tags" : [
        ]
      },
      {
        "id" : "a20d23b2-e1cd-462a-8538-96f97b2ca38a",
        "parentId" : "285b8658-84b1-40cc-bef8-25a67b169323",
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "Notifying the subscriber is part of the =internal implementation of this cache. The interface doesn't mention anything about subscriptions at all. I don't think we should expose the details through the function name.\n",
        "createdAt" : "2016-01-12T21:29:18Z",
        "updatedAt" : "2016-01-13T18:20:05Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "b56ed1a8c22263a1760aaeecee8c0768ac165dce",
    "line" : 113,
    "diffHunk" : "@@ -1,1 +111,115 @@//  UpdateTime modifies the global timestamp of the cache and notify\n//  subscribers if needed.\nfunc (c *cache) UpdateTime(timestamp time.Time) {\n\tc.lock.Lock()\n\tdefer c.lock.Unlock()"
  },
  {
    "id" : "7832201f-50ce-4e98-9637-44c1817e6d29",
    "prId" : 17700,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "50d85ebe-da7e-4b08-81cf-71bf48190e1e",
        "parentId" : null,
        "authorId" : "227eb550-8b08-4420-9a78-279f840bd8de",
        "body" : "How about\n\n``` go\nif !ok && c.timestamp != nil && c.timestamp.After(minTime) {\n    return makeDefaultData(id)\n}\nif ok && d.modified.After(minTime) || c.timestamp.After(minTime) {\n    return d\n}\nreturn nil\n```\n",
        "createdAt" : "2016-01-12T20:22:22Z",
        "updatedAt" : "2016-01-13T18:20:05Z",
        "lastEditedBy" : "227eb550-8b08-4420-9a78-279f840bd8de",
        "tags" : [
        ]
      },
      {
        "id" : "73305f84-ccf8-4d59-9637-65606542c607",
        "parentId" : "50d85ebe-da7e-4b08-81cf-71bf48190e1e",
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "Done.\n",
        "createdAt" : "2016-01-12T21:57:06Z",
        "updatedAt" : "2016-01-13T18:20:05Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "b56ed1a8c22263a1760aaeecee8c0768ac165dce",
    "line" : null,
    "diffHunk" : "@@ -1,1 +157,161 @@\t// The pod status is not ready.\n\treturn nil\n}\n\n// notify sends notifications for pod with the given id, if the requirements"
  }
]