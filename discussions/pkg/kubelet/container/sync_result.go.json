[
  {
    "id" : "22bdcd1b-bea6-4095-9ca9-2338242f2ab1",
    "prId" : 18172,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "42407bce-3475-424f-b1fc-0c671865dc5e",
        "parentId" : null,
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "Not relevant to this PR, but if we want to use these errors, maybe we should create custom a custom error type that stores the error key and the reason. Returning an error and a reason is a pain.\n",
        "createdAt" : "2016-01-15T00:17:43Z",
        "updatedAt" : "2016-01-17T08:43:08Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "f080f201-68b2-4f5c-b281-32003cac3250",
        "parentId" : "42407bce-3475-424f-b1fc-0c671865dc5e",
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "The error keys are predefined, and the message is arbitrary? It's a good idea!\nI think we could do that **IF**:\n- The error key can help self-introspection of kubelet, which means that kubelet should handle different kinds of errors with different actions.\n- The error key can improve the user experience to make it easier to debug Kubelet.\n\nIf either is true, I think we should do it in spite of adding a little complexity in runtime. :)\n",
        "createdAt" : "2016-01-15T02:20:00Z",
        "updatedAt" : "2016-01-17T08:43:08Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      }
    ],
    "commit" : "0e612afa98402c9ef33dcf4b9cb27d0990276443",
    "line" : 55,
    "diffHunk" : "@@ -1,1 +53,57 @@\tErrRunContainer  = errors.New(\"RunContainerError\")\n\tErrKillContainer = errors.New(\"KillContainerError\")\n\tErrVerifyNonRoot = errors.New(\"VerifyNonRootError\")\n)\n"
  }
]