[
  {
    "id" : "c182c385-e9d6-46ed-9f1b-c83546f38ff3",
    "prId" : 75129,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/75129#pullrequestreview-215217641",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dda91c56-42b5-4789-a922-dcd8467af871",
        "parentId" : null,
        "authorId" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "body" : "this doesn't seem right, shouldn't it be something >0?",
        "createdAt" : "2019-03-14T22:05:18Z",
        "updatedAt" : "2019-04-05T19:20:41Z",
        "lastEditedBy" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "tags" : [
        ]
      },
      {
        "id" : "c462dad4-8fb9-4bd0-8a93-b87a4528eb8d",
        "parentId" : "dda91c56-42b5-4789-a922-dcd8467af871",
        "authorId" : "275dd783-53c3-4fed-8434-96ed6a2e0331",
        "body" : "I searched for what value resyncPeriod is set to in other places, I saw it was set to 10 min in some places.  I'm not sure what is the reason behind it.  Setting to 10 min now.  Let me know if you have other suggestions.",
        "createdAt" : "2019-03-15T19:41:26Z",
        "updatedAt" : "2019-04-05T19:20:41Z",
        "lastEditedBy" : "275dd783-53c3-4fed-8434-96ed6a2e0331",
        "tags" : [
        ]
      }
    ],
    "commit" : "000ab86788d2b32da2d487b6f150b7313fd18be8",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +65,69 @@\tvar csiDriverLister storagelisters.CSIDriverLister\n\tvar csiDriversSynced cache.InformerSynced\n\tconst resyncPeriod = 0\n\tif utilfeature.DefaultFeatureGate.Enabled(features.CSIDriverRegistry) {\n\t\t// Don't initialize if kubeClient is nil"
  },
  {
    "id" : "71c53067-f8f1-4857-88e4-d35519519b0f",
    "prId" : 75129,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/75129#pullrequestreview-215217712",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4f1f6866-3053-48bf-9e13-d3367bbc3c5c",
        "parentId" : null,
        "authorId" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "body" : "log a warning if `kubeClient == nil`",
        "createdAt" : "2019-03-14T22:05:40Z",
        "updatedAt" : "2019-04-05T19:20:41Z",
        "lastEditedBy" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "tags" : [
        ]
      },
      {
        "id" : "772c407a-5e3d-413a-8029-2cf1e894a83e",
        "parentId" : "4f1f6866-3053-48bf-9e13-d3367bbc3c5c",
        "authorId" : "275dd783-53c3-4fed-8434-96ed6a2e0331",
        "body" : "Done",
        "createdAt" : "2019-03-15T19:41:38Z",
        "updatedAt" : "2019-04-05T19:20:41Z",
        "lastEditedBy" : "275dd783-53c3-4fed-8434-96ed6a2e0331",
        "tags" : [
        ]
      }
    ],
    "commit" : "000ab86788d2b32da2d487b6f150b7313fd18be8",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +68,72 @@\tif utilfeature.DefaultFeatureGate.Enabled(features.CSIDriverRegistry) {\n\t\t// Don't initialize if kubeClient is nil\n\t\tif kubelet.kubeClient != nil {\n\t\t\tinformerFactory = informers.NewSharedInformerFactory(kubelet.kubeClient, resyncPeriod)\n\t\t\tcsiDriverInformer := informerFactory.Storage().V1beta1().CSIDrivers()"
  },
  {
    "id" : "a1c1c6ee-9373-4d0a-b0d9-c4995bab6e3a",
    "prId" : 74835,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/74835#pullrequestreview-211599862",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "299a31eb-3ddc-4132-bdc4-72b51d06e8e8",
        "parentId" : null,
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "I think with your change, we now expect `runtimeState` in kubelet to be initialized before `NewInitializedVolumePluginMgr` is called.\r\n\r\nWe should add a comment to emphasize that to avoid panic in the future when people move code around. It is not obvious from the code.",
        "createdAt" : "2019-03-06T23:48:41Z",
        "updatedAt" : "2019-03-08T01:17:26Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      },
      {
        "id" : "0e81c9df-d9e5-4986-826b-a85b3a777783",
        "parentId" : "299a31eb-3ddc-4132-bdc4-72b51d06e8e8",
        "authorId" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "body" : "I think `runtimeState` in Kubelet for `storageErr` is populated *during* `NewInitializedVolumePluginMgr`. Could you clarify what kind of comment you're looking for and where? What is the unexpected event/state here",
        "createdAt" : "2019-03-06T23:50:40Z",
        "updatedAt" : "2019-03-08T01:17:26Z",
        "lastEditedBy" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "tags" : [
        ]
      },
      {
        "id" : "0ec29825-ed9d-4f70-9696-ebc7a7c3eb7b",
        "parentId" : "299a31eb-3ddc-4132-bdc4-72b51d06e8e8",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "> We should add a comment to emphasize that to avoid panic in the future when people move code around. It is not obvious from the code.\r\n\r\nis there a reason not to populate runtimeState as part of the kubelet struct creation:\r\n\r\n```\r\nklet := &Kubelet{\r\n  ...\r\n  runtimeState: newRuntimeState(maxWaitForContainerRuntime),\r\n  ...\r\n}\r\n```\r\n\r\nthat would ensure SetKubeletError couldn't be called on the kubelet struct before runtimeState was set",
        "createdAt" : "2019-03-07T04:57:19Z",
        "updatedAt" : "2019-03-08T01:17:26Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "41b3579345ff761a54ec56e2afc2d2d2ce6f56e5",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +81,85 @@// Compile-time check to ensure kubeletVolumeHost implements the VolumeHost interface\nvar _ volume.VolumeHost = &kubeletVolumeHost{}\nvar _ volume.KubeletVolumeHost = &kubeletVolumeHost{}\n\nfunc (kvh *kubeletVolumeHost) GetPluginDir(pluginName string) string {"
  },
  {
    "id" : "c5a12411-8d7a-46ab-b339-99047663f604",
    "prId" : 46458,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/46458#pullrequestreview-55160541",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "62b1b3e0-c169-4264-8321-8290b3bf1f0e",
        "parentId" : null,
        "authorId" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "body" : "You plan to use the pluginName in later PR?",
        "createdAt" : "2017-08-08T19:04:45Z",
        "updatedAt" : "2017-08-14T11:16:16Z",
        "lastEditedBy" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "tags" : [
        ]
      },
      {
        "id" : "6432cb66-ddbd-40e1-b7ca-274f8c34c418",
        "parentId" : "62b1b3e0-c169-4264-8321-8290b3bf1f0e",
        "authorId" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "body" : "Yes, see https://github.com/kubernetes/community/pull/589",
        "createdAt" : "2017-08-09T08:04:59Z",
        "updatedAt" : "2017-08-14T11:16:16Z",
        "lastEditedBy" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "tags" : [
        ]
      }
    ],
    "commit" : "0e547bae225b8d019d31054c4cf66670abf9ec17",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +118,122 @@}\n\nfunc (kvh *kubeletVolumeHost) GetMounter(pluginName string) mount.Interface {\n\treturn kvh.kubelet.mounter\n}"
  }
]