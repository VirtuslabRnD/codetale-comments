[
  {
    "id" : "7c3b7cfd-5af1-4590-90c2-a2ee5d2e973e",
    "prId" : 6182,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8fe4a5a0-0ae6-4a30-a8e0-8112d8d28b5a",
        "parentId" : null,
        "authorId" : "58cf89ce-9cc3-4dce-b99b-49ae3682cc9a",
        "body" : "I'm no expert here, but my understanding was that this was always a bug with the link variables created by k8s.  I believe the variable _names_ should use `TargetPort`, and the variable _values_ use `Port`.  The idea is that the port numbers declared by containers are \"well known\", and you want to find out (eg) \"where has mysql:3306 been made available in this particular setup?\"\n\nI assumed it would be too disruptive to change the existing k8s behaviour and so never raised the bug - but perhaps it could be fixed as part of this?  (Assuming others agree with my understanding of link variables)\n",
        "createdAt" : "2015-03-30T23:45:10Z",
        "updatedAt" : "2015-03-31T18:14:05Z",
        "lastEditedBy" : "58cf89ce-9cc3-4dce-b99b-49ae3682cc9a",
        "tags" : [
        ]
      },
      {
        "id" : "ee4155c2-c706-42b5-9a66-e5f417bf4b96",
        "parentId" : "8fe4a5a0-0ae6-4a30-a8e0-8112d8d28b5a",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "I tried to convince myself of that, but could not get docker to do anything\nbut the obvious thing.  But it should not matter for us - there is only the\nwell-known service port - there is no \"real\" port.\n\nOn Mon, Mar 30, 2015 at 4:45 PM, Angus Lees notifications@github.com\nwrote:\n\n> In pkg/kubelet/envvars/envvars.go\n> https://github.com/GoogleCloudPlatform/kubernetes/pull/6182#discussion_r27442718\n> :\n> \n> > -   all := []api.EnvVar{}\n> > -   for i := range service.Spec.Ports {\n> > -       sp := &service.Spec.Ports[i]\n> >   +\n> > -       protocol := string(api.ProtocolTCP)\n> > -       if sp.Protocol != \"\" {\n> > -           protocol = string(sp.Protocol)\n> > -       }\n> > -       if i == 0 {\n> > -           // Docker special-cases the first port.\n> > -           all = append(all, api.EnvVar{\n> > -               Name:  prefix + \"_PORT\",\n> > -               Value: fmt.Sprintf(\"%s://%s:%d\", strings.ToLower(protocol), service.Spec.PortalIP, sp.Port),\n> > -           })\n> > -       }\n> > -       portPrefix := fmt.Sprintf(\"%s_PORT_%d_%s\", prefix, sp.Port, strings.ToUpper(protocol))\n> \n> I'm no expert here, but my understanding was that this was always a bug\n> with the link variables created by k8s. I believe the variable _names_\n> should use TargetPort, and the variable _values_ use Port. The idea is\n> that the port numbers declared by containers are \"well known\", and you want\n> to find out (eg) \"where has mysql:3306 been made available in this\n> particular setup?\"\n> \n> I assumed it would be too disruptive to change the existing k8s behaviour\n> and so never raised the bug - but perhaps it could be fixed as part of\n> this? (Assuming others agree with my understanding of link variables)\n> \n> â€”\n> Reply to this email directly or view it on GitHub\n> https://github.com/GoogleCloudPlatform/kubernetes/pull/6182/files#r27442718\n> .\n",
        "createdAt" : "2015-03-30T23:49:03Z",
        "updatedAt" : "2015-03-31T18:14:05Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "1841c5d4-74c6-4d23-a5ac-c6699f71847b",
        "parentId" : "8fe4a5a0-0ae6-4a30-a8e0-8112d8d28b5a",
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "The names should not use TargetPort. The premise in Kubernetes is that the service object defines the interface to clients, not the pods/containers that implement the service.\n",
        "createdAt" : "2015-03-31T00:08:55Z",
        "updatedAt" : "2015-03-31T18:14:05Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "f0e2ce8b-baf3-4758-8c37-817c25433e86",
        "parentId" : "8fe4a5a0-0ae6-4a30-a8e0-8112d8d28b5a",
        "authorId" : "58cf89ce-9cc3-4dce-b99b-49ae3682cc9a",
        "body" : "Indeed, I was entirely wrong and I withdraw my comment.\n\nThe docker env vars always contain the same port in both name and value:\nhttps://github.com/docker/docker/blob/f49fb253753fa472e934935960c5818b443ee697/links/links.go#L99\n\nI note with curiosity that there are new(?) _START, _END docker link variables for port ranges, which may or may not be relevant to this change (I'm not advocating for adding them).\n",
        "createdAt" : "2015-03-31T00:16:02Z",
        "updatedAt" : "2015-03-31T18:14:05Z",
        "lastEditedBy" : "58cf89ce-9cc3-4dce-b99b-49ae3682cc9a",
        "tags" : [
        ]
      }
    ],
    "commit" : "e19f4939b1293b8b565a1087dcbb71c1ef46fe47",
    "line" : 83,
    "diffHunk" : "@@ -1,1 +85,89 @@\t\t\t})\n\t\t}\n\t\tportPrefix := fmt.Sprintf(\"%s_PORT_%d_%s\", prefix, sp.Port, strings.ToUpper(protocol))\n\t\tall = append(all, []api.EnvVar{\n\t\t\t{"
  },
  {
    "id" : "e9871f02-eb24-4859-b681-c142ac43da58",
    "prId" : 6182,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "45d43055-ebe9-4195-a776-d58a8e1a48e9",
        "parentId" : null,
        "authorId" : "58cf89ce-9cc3-4dce-b99b-49ae3682cc9a",
        "body" : "The \"first\" port is defined by docker to be the lowest numbered, fwiw:\n\nhttps://docs.docker.com/userguide/dockerlinks/\n\"The 'first' port is defined as the exposed port with the lowest number.\"\n",
        "createdAt" : "2015-03-31T00:17:19Z",
        "updatedAt" : "2015-03-31T18:14:05Z",
        "lastEditedBy" : "58cf89ce-9cc3-4dce-b99b-49ae3682cc9a",
        "tags" : [
        ]
      },
      {
        "id" : "35262dce-45f2-4825-8fd0-049cf59feead",
        "parentId" : "45d43055-ebe9-4195-a776-d58a8e1a48e9",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "unless there is a clamor for support, let's opt not to support this.  AFAIK Docker wants to EOL env vars, too\n",
        "createdAt" : "2015-03-31T00:30:57Z",
        "updatedAt" : "2015-03-31T18:14:05Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "e19f4939b1293b8b565a1087dcbb71c1ef46fe47",
    "line" : 76,
    "diffHunk" : "@@ -1,1 +78,82 @@\t\t\tprotocol = string(sp.Protocol)\n\t\t}\n\t\tif i == 0 {\n\t\t\t// Docker special-cases the first port.\n\t\t\tall = append(all, api.EnvVar{"
  }
]