[
  {
    "id" : "b68c5725-a0ef-4ae6-b16d-809a4474b9bb",
    "prId" : 29388,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "aba7b213-36fd-491c-9bd4-6211708a602a",
        "parentId" : null,
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "Why not use `makeContainer` here?\n",
        "createdAt" : "2016-07-25T08:12:21Z",
        "updatedAt" : "2016-07-27T17:32:58Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      },
      {
        "id" : "816c12ea-10b7-4a2f-8967-a95847248d06",
        "parentId" : "aba7b213-36fd-491c-9bd4-6211708a602a",
        "authorId" : "4a6c4c9f-42c7-4b89-b4ff-53e56b69cd54",
        "body" : "Just want to make the comparison clear to the reader that one image has no name while the other has one. \n",
        "createdAt" : "2016-07-25T17:45:03Z",
        "updatedAt" : "2016-07-27T17:32:58Z",
        "lastEditedBy" : "4a6c4c9f-42c7-4b89-b4ff-53e56b69cd54",
        "tags" : [
        ]
      }
    ],
    "commit" : "64981aaf46bb372695a9ae742df30ea0427796e2",
    "line" : null,
    "diffHunk" : "@@ -1,1 +102,106 @@\t\t\t\t\t// The image filed is not set to simulate a no-name image\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tID:      container.ContainerID{Type: \"test\", ID: fmt.Sprintf(\"container-%d\", 2)},\n\t\t\t\t\tImage:   imageName(2),"
  },
  {
    "id" : "69515071-22ab-4c6f-a3ec-2a025a329cbe",
    "prId" : 18820,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5ed4bb45-8bcd-4d47-8f36-83ba2850a8c9",
        "parentId" : null,
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "How about adding a test for minAge > 0?\n",
        "createdAt" : "2015-12-17T17:58:17Z",
        "updatedAt" : "2016-01-15T08:43:36Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      },
      {
        "id" : "9440e4b4-3d12-43bf-b62c-25ef4fb4a44d",
        "parentId" : "5ed4bb45-8bcd-4d47-8f36-83ba2850a8c9",
        "authorId" : "fa03ed6a-9d2a-44b6-8438-e21ee4a2ce4d",
        "body" : "Good point. To be honest, I considered to add such a test. But if we add such a test, the gc routine need **_sleep**_ for a 'minAge' period or so after images are added, which will make the test run for a longer time. So, how to implement it? set `minAge` a small value(about 5 second) in the test case so that the gc routine would not sleep for a long time, or try to find some other _effective_ approach to write the unit test.  \n",
        "createdAt" : "2015-12-18T01:26:21Z",
        "updatedAt" : "2016-01-15T08:43:36Z",
        "lastEditedBy" : "fa03ed6a-9d2a-44b6-8438-e21ee4a2ce4d",
        "tags" : [
        ]
      },
      {
        "id" : "95bffee2-3620-428f-b0a0-65616834120e",
        "parentId" : "5ed4bb45-8bcd-4d47-8f36-83ba2850a8c9",
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "AFAIK, there is a time object that is test friendly. You need to use that.\n\nOn Thu, Dec 17, 2015 at 5:27 PM, Liang Mingqiang notifications@github.com\nwrote:\n\n> In pkg/kubelet/image_manager_test.go\n> https://github.com/kubernetes/kubernetes/pull/18820#discussion_r47985075\n> :\n> \n> > @@ -37,6 +37,7 @@ func newRealImageManager(policy ImageGCPolicy) (*realImageManager, *container.Fa\n> >     return &realImageManager{\n> >         runtime:      fakeRuntime,\n> >         policy:       policy,\n> > -       minAge:       0,\n> \n> Good point. To be honest, I considered to add such a test. But if we add\n> such a test, the gc routine need _sleep_ for a 'minAge' period or so\n> after images are added, which will make the test run for a longer time. So,\n> how to implement it? set minAge a small value(about 5 second) so that the\n> gc routine would not sleep for a long time, or try to find some other\n> _effective_ approach to write the unit test.\n> \n> â€”\n> Reply to this email directly or view it on GitHub\n> https://github.com/kubernetes/kubernetes/pull/18820/files#r47985075.\n",
        "createdAt" : "2015-12-18T04:02:54Z",
        "updatedAt" : "2016-01-15T08:43:36Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      },
      {
        "id" : "4f3d0b2a-5e01-459f-a162-ef7bdee8e8e9",
        "parentId" : "5ed4bb45-8bcd-4d47-8f36-83ba2850a8c9",
        "authorId" : "fa03ed6a-9d2a-44b6-8438-e21ee4a2ce4d",
        "body" : "@vishh Sorry, I didn't find any reference about the test friendly time object, could you please kindly paste the reference. Great thanks! \n",
        "createdAt" : "2015-12-20T01:30:31Z",
        "updatedAt" : "2016-01-15T08:43:36Z",
        "lastEditedBy" : "fa03ed6a-9d2a-44b6-8438-e21ee4a2ce4d",
        "tags" : [
        ]
      },
      {
        "id" : "0d994c82-ceb5-4066-98c2-d21c4583b58f",
        "parentId" : "5ed4bb45-8bcd-4d47-8f36-83ba2850a8c9",
        "authorId" : "11725e10-43c9-4a8c-96d0-5118a3e67a6a",
        "body" : "One way to do it: https://github.com/ssoroka/ttime\nSee also https://groups.google.com/forum/m/#!topic/golang-nuts/Mkonfn4j4jo\n",
        "createdAt" : "2015-12-30T11:28:01Z",
        "updatedAt" : "2016-01-15T08:43:36Z",
        "lastEditedBy" : "11725e10-43c9-4a8c-96d0-5118a3e67a6a",
        "tags" : [
        ]
      },
      {
        "id" : "f520870d-b4de-4076-855d-ad5b201a92ba",
        "parentId" : "5ed4bb45-8bcd-4d47-8f36-83ba2850a8c9",
        "authorId" : "fa03ed6a-9d2a-44b6-8438-e21ee4a2ce4d",
        "body" : "Great thanks!\n",
        "createdAt" : "2015-12-31T01:33:57Z",
        "updatedAt" : "2016-01-15T08:43:36Z",
        "lastEditedBy" : "fa03ed6a-9d2a-44b6-8438-e21ee4a2ce4d",
        "tags" : [
        ]
      },
      {
        "id" : "3ac8a9c0-7dbf-44ef-85b8-b5d2b8f4fcea",
        "parentId" : "5ed4bb45-8bcd-4d47-8f36-83ba2850a8c9",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "There was already a clock object under util. I would prefer not to grab a new dependency without a great reason.\n",
        "createdAt" : "2016-01-25T19:50:17Z",
        "updatedAt" : "2016-01-25T19:50:17Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "5b383dad62605f1b0c442bc820ed3f229e569b6a",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +39,43 @@\t\truntime:      fakeRuntime,\n\t\tpolicy:       policy,\n\t\tminAge:       0,\n\t\timageRecords: make(map[string]*imageRecord),\n\t\tcadvisor:     mockCadvisor,"
  },
  {
    "id" : "d3fbf620-5207-44ef-b1fb-e9f856860b94",
    "prId" : 14035,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "633837fb-ca8b-46fc-a83c-cd18de5b4475",
        "parentId" : null,
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "This should be fakeRuntime.PodList. The ContainerList is not used by the fakeRuntime at this moment. I will send a PR to remove that.\n",
        "createdAt" : "2015-09-25T23:35:16Z",
        "updatedAt" : "2015-09-25T23:35:16Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "676bbde7-bf00-4f9c-8c50-083c697aa424",
        "parentId" : "633837fb-ca8b-46fc-a83c-cd18de5b4475",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "@yujuhong Thanks\n",
        "createdAt" : "2015-09-25T23:56:21Z",
        "updatedAt" : "2015-09-25T23:56:21Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      }
    ],
    "commit" : "f1124eb0b184a688c72a51e8fff96c3691e44f2e",
    "line" : 315,
    "diffHunk" : "@@ -1,1 +320,324 @@\t\t},\n\t}\n\tfakeRuntime.ContainerList = []*container.Container{\n\t\t{\n\t\t\tID:    \"c5678\","
  },
  {
    "id" : "595ca175-a312-416f-b5e9-5e9498907a01",
    "prId" : 9265,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ebfa762d-d8a3-4b2b-aceb-272e85893df1",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "This also feels like it's own PR.  Basically, th eideal mega-PR touches _just_ godeps and contrib/mesos\n",
        "createdAt" : "2015-06-05T23:12:08Z",
        "updatedAt" : "2015-06-12T14:03:24Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "022ff5196d21fb24cf02fa1e571bb46884c0e571",
    "line" : null,
    "diffHunk" : "@@ -1,1 +217,221 @@\tassert := assert.New(t)\n\trequire.NoError(t, err)\n\tassert.EqualValues(1024, spaceFreed)\n\tassert.Len(fakeDocker.RemovedImages, 1)\n\tassert.True(fakeDocker.RemovedImages.Has(imageName(0)))"
  },
  {
    "id" : "99ea9026-9a55-42cb-ae6a-a5e8d1d42be0",
    "prId" : 5627,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "30ea7dd4-512e-4864-b3b1-14bb1bfa9acf",
        "parentId" : null,
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "This is not a real issue, but it almost tricked me. Looking at the function name, I'd assume this is creating a _real_ image manager, but it's using all the fake components :\\\n",
        "createdAt" : "2015-03-19T01:20:40Z",
        "updatedAt" : "2015-03-19T01:20:40Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "6c17919b-0ba1-472a-89f9-ccfe9f3ef4e2",
        "parentId" : "30ea7dd4-512e-4864-b3b1-14bb1bfa9acf",
        "authorId" : "b7abca6a-d6be-4008-a014-3b5ca0e90529",
        "body" : "I'm terrible at names, open to suggestions :) the \"real\" prefix hasn't been quite working out.\n",
        "createdAt" : "2015-03-19T15:48:33Z",
        "updatedAt" : "2015-03-19T15:48:33Z",
        "lastEditedBy" : "b7abca6a-d6be-4008-a014-3b5ca0e90529",
        "tags" : [
        ]
      },
      {
        "id" : "aefb297b-bff1-4c3c-9d21-e0682b5af0a0",
        "parentId" : "30ea7dd4-512e-4864-b3b1-14bb1bfa9acf",
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "You stole my line. I usually tell people I'm terrible at names... ;)\n",
        "createdAt" : "2015-03-19T15:54:15Z",
        "updatedAt" : "2015-03-19T15:54:15Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "3a3b950009469cb665c8dd3fdcc4dc36a2a79df2",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +33,37 @@var zero time.Time\n\nfunc newRealImageManager(policy ImageGCPolicy) (*realImageManager, *dockertools.FakeDockerClient, *cadvisor.Mock) {\n\tfakeDocker := &dockertools.FakeDockerClient{\n\t\tRemovedImages: util.NewStringSet(),"
  }
]