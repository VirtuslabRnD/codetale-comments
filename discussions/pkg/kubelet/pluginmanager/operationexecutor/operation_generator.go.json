[
  {
    "id" : "69f32553-a3ad-402a-98cd-684eebfdf5df",
    "prId" : 88006,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/88006#pullrequestreview-357078677",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2e48e13d-17c9-4e6b-a5bd-4515349ef365",
        "parentId" : null,
        "authorId" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "body" : "why is it necessary to lock `pathToHandlers` when reading it here? ",
        "createdAt" : "2020-02-11T23:21:45Z",
        "updatedAt" : "2020-03-31T13:57:34Z",
        "lastEditedBy" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "tags" : [
        ]
      },
      {
        "id" : "38c73f31-e90c-4355-955e-e1a13e907ea0",
        "parentId" : "2e48e13d-17c9-4e6b-a5bd-4515349ef365",
        "authorId" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "body" : "The map within pathToHandlers would be concurrently accessed for different socket paths.\r\nWithout synchronization, you would see something such as:\r\n```\r\nWARNING: DATA RACE\r\nRead at 0x00c000189138 by goroutine 18:\r\n```",
        "createdAt" : "2020-02-11T23:38:31Z",
        "updatedAt" : "2020-03-31T13:57:34Z",
        "lastEditedBy" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "c7bde41478ffa395f35a3edd8985e874500a055c",
    "line" : 57,
    "diffHunk" : "@@ -1,1 +157,161 @@\n\t\tvar handlerWithName cache.NamedPluginHandler\n\t\tpathToHandlers.Lock()\n\t\thandlerWithName, handlerFound := pathToHandlers.Handlers[socketPath]\n\t\tpathToHandlers.Unlock()"
  },
  {
    "id" : "9b963362-1832-4fdf-a35d-76bc1c48fed4",
    "prId" : 88006,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/88006#pullrequestreview-375513636",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "21b85c95-fe7d-48ee-a257-dc5274f00ff0",
        "parentId" : null,
        "authorId" : "f8f9446d-82d7-43cf-88d1-cecfb048866d",
        "body" : "Can we log the error first?",
        "createdAt" : "2020-03-16T19:27:22Z",
        "updatedAt" : "2020-03-31T13:57:34Z",
        "lastEditedBy" : "f8f9446d-82d7-43cf-88d1-cecfb048866d",
        "tags" : [
        ]
      }
    ],
    "commit" : "c7bde41478ffa395f35a3edd8985e874500a055c",
    "line" : 46,
    "diffHunk" : "@@ -1,1 +150,154 @@\tunregisterPluginFunc := func() error {\n\t\t_, conn, err := dial(socketPath, dialTimeoutDuration)\n\t\tif err != nil {\n\t\t\tklog.V(4).Infof(\"unable to dial: %v\", err)\n\t\t} else {"
  },
  {
    "id" : "dc4e2311-bb27-43b3-a416-e04923c67d8d",
    "prId" : 88006,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/88006#pullrequestreview-380628805",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2369d1e7-5eea-47ab-838e-c32e7f685176",
        "parentId" : null,
        "authorId" : "f8f9446d-82d7-43cf-88d1-cecfb048866d",
        "body" : "I think we should only keep the `dial`, but remove `client.GetInfo`. This way, we can move everything after `var handlerWithName cache.NamedPluginHandler` out of the if statement, and have one path for unregistration.",
        "createdAt" : "2020-03-17T14:13:10Z",
        "updatedAt" : "2020-03-31T13:57:34Z",
        "lastEditedBy" : "f8f9446d-82d7-43cf-88d1-cecfb048866d",
        "tags" : [
        ]
      },
      {
        "id" : "14936130-0db2-4dca-ba70-8033120411cf",
        "parentId" : "2369d1e7-5eea-47ab-838e-c32e7f685176",
        "authorId" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "body" : "@taragu \r\nCan you confirm that we are abandoning the old code (except for dial) and would use the new code ?\r\nI have refactored the code",
        "createdAt" : "2020-03-17T14:21:51Z",
        "updatedAt" : "2020-03-31T13:57:34Z",
        "lastEditedBy" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "tags" : [
        ]
      },
      {
        "id" : "463c8793-2800-4f3f-8d2f-9dd348985b11",
        "parentId" : "2369d1e7-5eea-47ab-838e-c32e7f685176",
        "authorId" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "body" : "@taragu\r\nPlease review",
        "createdAt" : "2020-03-19T19:43:24Z",
        "updatedAt" : "2020-03-31T13:57:34Z",
        "lastEditedBy" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "tags" : [
        ]
      },
      {
        "id" : "83fec3db-2479-4438-ac8e-41d416dd5d2d",
        "parentId" : "2369d1e7-5eea-47ab-838e-c32e7f685176",
        "authorId" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "body" : "@taragu \r\nPlease take another look",
        "createdAt" : "2020-03-24T19:24:53Z",
        "updatedAt" : "2020-03-31T13:57:34Z",
        "lastEditedBy" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "c7bde41478ffa395f35a3edd8985e874500a055c",
    "line" : 51,
    "diffHunk" : "@@ -1,1 +154,158 @@\t\t} else {\n\t\t\tconn.Close()\n\t\t}\n\n\t\tvar handlerWithName cache.NamedPluginHandler"
  },
  {
    "id" : "f45479bd-bcd8-4b21-8ebb-a125bbe77ea1",
    "prId" : 82594,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/82594#pullrequestreview-290484482",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "49f761fb-6a4f-4b77-bba3-6c2a9d8fd757",
        "parentId" : null,
        "authorId" : "8e448017-7838-493d-a424-33cada0da657",
        "body" : "@taragu I forgot, was there a reason we didn't check for error here?",
        "createdAt" : "2019-09-18T23:57:25Z",
        "updatedAt" : "2019-09-18T23:57:29Z",
        "lastEditedBy" : "8e448017-7838-493d-a424-33cada0da657",
        "tags" : [
        ]
      },
      {
        "id" : "3c31bd96-ca3b-450b-89d0-682b2ac9da9b",
        "parentId" : "49f761fb-6a4f-4b77-bba3-6c2a9d8fd757",
        "authorId" : "f8f9446d-82d7-43cf-88d1-cecfb048866d",
        "body" : "I can't think of why. I think I must have missed it.",
        "createdAt" : "2019-09-19T10:59:16Z",
        "updatedAt" : "2019-09-19T10:59:37Z",
        "lastEditedBy" : "f8f9446d-82d7-43cf-88d1-cecfb048866d",
        "tags" : [
        ]
      }
    ],
    "commit" : "156c5cb3d3d6ab21c9b0c3df60a64038babbed4c",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +114,118 @@\t\t// We add the plugin to the actual state of world cache before calling a plugin consumer's Register handle\n\t\t// so that if we receive a delete event during Register Plugin, we can process it as a DeRegister call.\n\t\terr = actualStateOfWorldUpdater.AddPlugin(cache.PluginInfo{\n\t\t\tSocketPath:           socketPath,\n\t\t\tFoundInDeprecatedDir: foundInDeprecatedDir,"
  },
  {
    "id" : "d2cf93b2-4f76-46e9-ad8c-6cbb6776cd18",
    "prId" : 82594,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/82594#pullrequestreview-290586842",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "27281e39-552f-408c-a8a9-8909df838a03",
        "parentId" : null,
        "authorId" : "f8f9446d-82d7-43cf-88d1-cecfb048866d",
        "body" : "Should we also return the error here?",
        "createdAt" : "2019-09-19T10:59:31Z",
        "updatedAt" : "2019-09-19T10:59:37Z",
        "lastEditedBy" : "f8f9446d-82d7-43cf-88d1-cecfb048866d",
        "tags" : [
        ]
      },
      {
        "id" : "006ab914-ca8a-4a39-a6e2-145513cf974a",
        "parentId" : "27281e39-552f-408c-a8a9-8909df838a03",
        "authorId" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "body" : "@taragu \r\nI think we can go with logging error for now.",
        "createdAt" : "2019-09-19T13:58:21Z",
        "updatedAt" : "2019-09-19T13:58:21Z",
        "lastEditedBy" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "156c5cb3d3d6ab21c9b0c3df60a64038babbed4c",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +120,124 @@\t\t})\n\t\tif err != nil {\n\t\t\tklog.Errorf(\"RegisterPlugin error -- failed to add plugin at socket %s, err: %v\", socketPath, err)\n\t\t}\n\t\tif err := handler.RegisterPlugin(infoResp.Name, infoResp.Endpoint, infoResp.SupportedVersions); err != nil {"
  },
  {
    "id" : "c66d2102-6e02-484a-b765-3988b86ebe4e",
    "prId" : 73891,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/73891#pullrequestreview-244420888",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "db75d3e1-4550-4a88-8f53-459b5677257e",
        "parentId" : null,
        "authorId" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "body" : "Should be lowercase: dial",
        "createdAt" : "2019-05-31T17:23:36Z",
        "updatedAt" : "2019-05-31T17:34:42Z",
        "lastEditedBy" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "5e185544421d5504b0fe2ae32c8ebfb3000a1224",
    "line" : 188,
    "diffHunk" : "@@ -1,1 +186,190 @@}\n\n// Dial establishes the gRPC communication with the picked up plugin socket. https://godoc.org/google.golang.org/grpc#Dial\nfunc dial(unixSocketPath string, timeout time.Duration) (registerapi.RegistrationClient, *grpc.ClientConn, error) {\n\tctx, cancel := context.WithTimeout(context.Background(), timeout)"
  },
  {
    "id" : "09bd99b0-c86e-4cf6-a978-19dbbb2eedf4",
    "prId" : 73891,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/73891#pullrequestreview-343983776",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7009627b-c685-4b92-a514-42e1607ffebf",
        "parentId" : null,
        "authorId" : "f5f48bb0-ff3f-4453-a368-cfc83876f157",
        "body" : "If the plugin has already exited, the dial here will fail.\r\n",
        "createdAt" : "2020-01-14T16:44:34Z",
        "updatedAt" : "2020-01-14T16:44:34Z",
        "lastEditedBy" : "f5f48bb0-ff3f-4453-a368-cfc83876f157",
        "tags" : [
        ]
      },
      {
        "id" : "c4467fe7-4545-48e9-b7ea-0e483ad378fa",
        "parentId" : "7009627b-c685-4b92-a514-42e1607ffebf",
        "authorId" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "body" : "The client is needed to retrieve from pluginHandlers using infoResp.Type\r\n\r\nDo you have suggestion on how to get plugin handler in that case ?",
        "createdAt" : "2020-01-14T16:51:23Z",
        "updatedAt" : "2020-01-14T16:51:23Z",
        "lastEditedBy" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "tags" : [
        ]
      },
      {
        "id" : "b7e2ee29-e05f-4768-ba2b-9c080c24bca2",
        "parentId" : "7009627b-c685-4b92-a514-42e1607ffebf",
        "authorId" : "f5f48bb0-ff3f-4453-a368-cfc83876f157",
        "body" : "> The client is needed to retrieve from pluginHandlers using infoResp.Type\r\n> \r\n> Do you have suggestion on how to get plugin handler in that case ?\r\n\r\nThe csi plugin will delete the sock file when it exits. When the operationExecutor.UnregisterPlugin is called, the sock file is not existed. \r\nCan add a sock file to the plugin mapping table.   ≧◠◡◠≦  Just like 1.14:\r\n```\r\n\r\nfunc (w *Watcher) getPlugin(socketPath string) (pathInfo, bool) {\r\n\tw.mutex.Lock()\r\n\tdefer w.mutex.Unlock()\r\n\r\n\tplugin, ok := w.plugins[socketPath]\r\n\treturn plugin, ok\r\n}\r\n```\r\n",
        "createdAt" : "2020-01-14T17:03:28Z",
        "updatedAt" : "2020-01-14T17:03:28Z",
        "lastEditedBy" : "f5f48bb0-ff3f-4453-a368-cfc83876f157",
        "tags" : [
        ]
      },
      {
        "id" : "ee6a729c-4cb5-4ed4-8c64-7f61dbfe86a8",
        "parentId" : "7009627b-c685-4b92-a514-42e1607ffebf",
        "authorId" : "30d919af-5437-40f9-91da-4589352c33f0",
        "body" : "From my POV, we can save socketPath: infoResp.Type in actualStateOfWorld on RegisterPlugin phase, and then it can be used on UnregisterPlugin phase",
        "createdAt" : "2020-01-16T15:07:10Z",
        "updatedAt" : "2020-01-16T15:07:11Z",
        "lastEditedBy" : "30d919af-5437-40f9-91da-4589352c33f0",
        "tags" : [
        ]
      },
      {
        "id" : "00846b63-9c0e-42b6-9e51-769bf5bab47c",
        "parentId" : "7009627b-c685-4b92-a514-42e1607ffebf",
        "authorId" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "body" : "I made similar suggestion over #87282\r\n\r\nLet's see what other people think.",
        "createdAt" : "2020-01-16T15:10:23Z",
        "updatedAt" : "2020-01-16T15:10:23Z",
        "lastEditedBy" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "5e185544421d5504b0fe2ae32c8ebfb3000a1224",
    "line" : 139,
    "diffHunk" : "@@ -1,1 +137,141 @@\n\tunregisterPluginFunc := func() error {\n\t\tclient, conn, err := dial(socketPath, dialTimeoutDuration)\n\t\tif err != nil {\n\t\t\treturn fmt.Errorf(\"UnregisterPlugin error -- dial failed at socket %s, err: %v\", socketPath, err)"
  }
]