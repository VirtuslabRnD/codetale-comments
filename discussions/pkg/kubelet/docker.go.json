[
  {
    "id" : "4f3cde71-1507-4afd-b9c1-35d155856b23",
    "prId" : 1199,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a697d1cc-7e4b-4e7a-a0ab-b23b201b3fa9",
        "parentId" : null,
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Test case that exercises both branches.\n",
        "createdAt" : "2014-09-06T16:46:18Z",
        "updatedAt" : "2014-09-08T21:24:29Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "7ace5a3e8326ac31e0a9175f19ff87e64ffb40d9",
    "line" : 60,
    "diffHunk" : "@@ -1,1 +220,224 @@\tif len(pod.Manifest.UUID) == 0 {\n\t\treturn fmt.Sprintf(\"%s--%s--%s--%08x\",\n\t\t\tcontainerNamePrefix,\n\t\t\tcontainerName,\n\t\t\tescapeDash(GetPodFullName(pod)),"
  },
  {
    "id" : "2e18dd71-e897-4829-9230-bdde57db7774",
    "prId" : 1199,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "393fe4dc-6fb0-480e-a56c-8353c74b1a6f",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Same here-- too many identifiers.\n",
        "createdAt" : "2014-09-08T06:02:26Z",
        "updatedAt" : "2014-09-08T21:24:29Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "629e9312-db31-4638-9fcd-5a9a32be8575",
        "parentId" : "393fe4dc-6fb0-480e-a56c-8353c74b1a6f",
        "authorId" : "a6409368-42e0-44a9-bf79-9d3042ac3b65",
        "body" : "This is to maintain the backward compatibility. There are more than one place to receive a pod request to Kubelet. With this PR, we make sure etcd's input has valid UUID, but we didn't make sure the pod from file, such as cadvisor. Also how about those running pods scheduled before this PR? I can break this, but thought it is nicer not do so by an arbitrary PR. \n",
        "createdAt" : "2014-09-08T16:19:36Z",
        "updatedAt" : "2014-09-08T21:24:29Z",
        "lastEditedBy" : "a6409368-42e0-44a9-bf79-9d3042ac3b65",
        "tags" : [
        ]
      }
    ],
    "commit" : "7ace5a3e8326ac31e0a9175f19ff87e64ffb40d9",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +110,114 @@type DockerContainers map[DockerID]*docker.APIContainers\n\nfunc (c DockerContainers) FindPodContainer(podFullName, uuid, containerName string) (*docker.APIContainers, bool, uint64) {\n\tfor _, dockerContainer := range c {\n\t\tdockerManifestID, dockerUUID, dockerContainerName, hash := parseDockerName(dockerContainer.Names[0])"
  },
  {
    "id" : "2eb4081b-6deb-4feb-a05e-3fc9f9a56fff",
    "prId" : 1199,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "afa0d2ff-9499-48d1-87b4-eb546a38bbdd",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Please make the UUID be part of the hash instead of special casing this.\n",
        "createdAt" : "2014-09-08T06:04:59Z",
        "updatedAt" : "2014-09-08T21:24:29Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "b937a1c4-9257-417e-91de-c0e5e9f0f366",
        "parentId" : "afa0d2ff-9499-48d1-87b4-eb546a38bbdd",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "By \"be part of the hash\" I mean write it to the hashing object that hashContainer uses.\n",
        "createdAt" : "2014-09-08T06:05:51Z",
        "updatedAt" : "2014-09-08T21:24:29Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "af1187e2-76e5-41b9-a749-f861643e9e04",
        "parentId" : "afa0d2ff-9499-48d1-87b4-eb546a38bbdd",
        "authorId" : "a6409368-42e0-44a9-bf79-9d3042ac3b65",
        "body" : "I thought about it before, but had some concerns on it. Currently hasContainer hashes Container's config, and every sync loop, kubelet compares the hash_values to see if container config changed. If I embedded both UUID and container config into one hash object, I can tell it is a new UUID for a newly created Pod, or a container changes? Please note that kubelet doesn't have persistent states yet. I plan to add some soon, but not now. \n\nIf you think UUID is too long for a docker container, I can hash it separately.  \n",
        "createdAt" : "2014-09-08T16:41:32Z",
        "updatedAt" : "2014-09-08T21:24:29Z",
        "lastEditedBy" : "a6409368-42e0-44a9-bf79-9d3042ac3b65",
        "tags" : [
        ]
      },
      {
        "id" : "c6f92524-91d1-4206-a819-ac8a5f6f7345",
        "parentId" : "afa0d2ff-9499-48d1-87b4-eb546a38bbdd",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "UUID should be immutable, so it should never be the source of a change. :)\n",
        "createdAt" : "2014-09-08T19:22:34Z",
        "updatedAt" : "2014-09-08T21:24:29Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "13050dcb-d24a-4372-9233-a0264ce8c6d1",
        "parentId" : "afa0d2ff-9499-48d1-87b4-eb546a38bbdd",
        "authorId" : "a6409368-42e0-44a9-bf79-9d3042ac3b65",
        "body" : "UUID is immutable, but when kubelet receives a Pod request, and hash UUID together with Container config, then compare it with the exist one which is appending to the docker container name. If the hash_values are different, you could end up with the following situations:\n\n1) This is a new Pod instance with a different UUID, same PodName, and same set of configurations\n2) This is the same Pod instance with different container config\n\nHow can I tell which one is here?\n",
        "createdAt" : "2014-09-08T19:55:15Z",
        "updatedAt" : "2014-09-08T21:24:29Z",
        "lastEditedBy" : "a6409368-42e0-44a9-bf79-9d3042ac3b65",
        "tags" : [
        ]
      },
      {
        "id" : "e7f82ca1-d038-4f73-b554-f014f14b65a1",
        "parentId" : "afa0d2ff-9499-48d1-87b4-eb546a38bbdd",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "It doesn't matter, it should Just Work (tm). If both pods are in the system, the old one will match the existing container and a new container will be started for the new pod. If the old pod was deleted, the old container won't match the new container and will be deleted.\n",
        "createdAt" : "2014-09-08T20:43:33Z",
        "updatedAt" : "2014-09-08T21:24:29Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "25b3f965-dc08-4b75-8bb2-13eb62768a54",
        "parentId" : "afa0d2ff-9499-48d1-87b4-eb546a38bbdd",
        "authorId" : "a6409368-42e0-44a9-bf79-9d3042ac3b65",
        "body" : "It does matter if we want to have some in-place update for container config. For example, changing container's cpu limit, which results a hash value you proposed change. In this case, should we just simply update docker container's config without killing the existing one? I know we don't support this today, but in a long run, I believe we will add those logic here. We did the similar thing in our internal system. \n\nAlso in my mind this UUID could be changed to any other identifier for BoundPod in a long run, not necessary as today's UUID format. In that case, I think keep the identifier of a BoundPod is a clean way to go. \n",
        "createdAt" : "2014-09-08T21:39:22Z",
        "updatedAt" : "2014-09-08T21:39:22Z",
        "lastEditedBy" : "a6409368-42e0-44a9-bf79-9d3042ac3b65",
        "tags" : [
        ]
      }
    ],
    "commit" : "7ace5a3e8326ac31e0a9175f19ff87e64ffb40d9",
    "line" : 58,
    "diffHunk" : "@@ -1,1 +218,222 @@\tcontainerName := escapeDash(container.Name) + \".\" + strconv.FormatUint(hashContainer(container), 16)\n\t// Note, manifest.ID could be blank.\n\tif len(pod.Manifest.UUID) == 0 {\n\t\treturn fmt.Sprintf(\"%s--%s--%s--%08x\",\n\t\t\tcontainerNamePrefix,"
  },
  {
    "id" : "3b5ba76d-5744-4e04-b16c-f36587215afc",
    "prId" : 827,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ddfa4b10-4423-406a-8ac6-665e8b1f150e",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Can container names have '.' in them? If so, this is broken.\n",
        "createdAt" : "2014-08-08T00:27:59Z",
        "updatedAt" : "2014-08-08T20:32:22Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "d61266c8-aa71-4b7b-8d83-f2d98d780ba0",
        "parentId" : "ddfa4b10-4423-406a-8ac6-665e8b1f150e",
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "https://github.com/GoogleCloudPlatform/kubernetes/blob/master/pkg/api/validation.go#L231\n\nshows we test name with IsDNSLabel which matches against the regexp: `a-z0-9]([-a-z0-9]*[a-z0-9])?` so no '.' allowed in names.\n",
        "createdAt" : "2014-08-08T03:31:49Z",
        "updatedAt" : "2014-08-08T20:32:22Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      },
      {
        "id" : "16e94eec-e907-4b75-88b6-9b9e44a2f10c",
        "parentId" : "ddfa4b10-4423-406a-8ac6-665e8b1f150e",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Yeah, we test container names, but I think we stick container names together with their source using a '.'-- @smarterclayton is that true?\n",
        "createdAt" : "2014-08-08T18:01:43Z",
        "updatedAt" : "2014-08-08T20:32:22Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "eb732029-3367-4e66-af83-00fe03a1909b",
        "parentId" : "ddfa4b10-4423-406a-8ac6-665e8b1f150e",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Correct.  PodFullName is PodName.PodNamespace\n",
        "createdAt" : "2014-08-08T18:09:01Z",
        "updatedAt" : "2014-08-08T20:32:22Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "444899d6-104c-47e7-8f24-4d0882542b58",
        "parentId" : "ddfa4b10-4423-406a-8ac6-665e8b1f150e",
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "@lavalamp that's in the pod name (field 3 in the docker name), this is attached to the container name (field 2) which currently has no '.' as part of it...  (I agree the encoding is getting gross...)\n",
        "createdAt" : "2014-08-08T18:12:53Z",
        "updatedAt" : "2014-08-08T20:32:22Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "2986db9885f44b52ff663de0a078c0e1bb221049",
    "line" : 82,
    "diffHunk" : "@@ -1,1 +228,232 @@\t}\n\tif len(parts) > 1 {\n\t\tpieces := strings.Split(parts[1], \".\")\n\t\tcontainerName = unescapeDash(pieces[0])\n\t\tif len(pieces) > 1 {"
  },
  {
    "id" : "94e7b906-ceab-4a28-891b-ae260980a4e0",
    "prId" : 827,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8cae9860-0a06-4237-930b-472596fb2f56",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "This whole scheme makes me die a little inside every time I see it (and I'm partly responsible for it). Can we add this all to a struct, encode with gob (for brevity), base64 encode it, and use that as the name? That would get rid of this nonsense at the expense of human readable docker container names.\n",
        "createdAt" : "2014-08-08T00:33:03Z",
        "updatedAt" : "2014-08-08T20:32:22Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "446eb803-1f0f-4910-bfe0-d27cd487b842",
        "parentId" : "8cae9860-0a06-4237-930b-472596fb2f56",
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "Different PR?\n",
        "createdAt" : "2014-08-08T03:32:02Z",
        "updatedAt" : "2014-08-08T20:32:22Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "2986db9885f44b52ff663de0a078c0e1bb221049",
    "line" : null,
    "diffHunk" : "@@ -1,1 +212,216 @@\tcontainerName := escapeDash(container.Name) + \".\" + strconv.FormatUint(hashContainer(container), 16)\n\t// Note, manifest.ID could be blank.\n\treturn fmt.Sprintf(\"%s--%s--%s--%08x\", containerNamePrefix, containerName, escapeDash(GetPodFullName(pod)), rand.Uint32())\n}\n"
  },
  {
    "id" : "ab8032b7-99ae-49c7-940c-d60b7f991184",
    "prId" : 827,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "338cc302-feeb-434f-8d47-1f3951c47edf",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "curious - why convert a 32 bit sum into 64 bits?\n",
        "createdAt" : "2014-08-08T03:48:25Z",
        "updatedAt" : "2014-08-08T20:32:22Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "1cb5ace0-aebd-45de-87fd-a2dc0b85eeda",
        "parentId" : "338cc302-feeb-434f-8d47-1f3951c47edf",
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "All of the parsing/formatting instructions expect a uint64, so the choices are convert here in one place, or cast in multiple places.  @lavalamp requested that I do it here.  I don't care too much either way.\n",
        "createdAt" : "2014-08-08T03:54:18Z",
        "updatedAt" : "2014-08-08T20:32:22Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      },
      {
        "id" : "afd371ba-df45-403a-b215-7853ff46d022",
        "parentId" : "338cc302-feeb-434f-8d47-1f3951c47edf",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "OK, that's good enough.\n\nOn Thu, Aug 7, 2014 at 8:54 PM, brendandburns notifications@github.com\nwrote:\n\n> In pkg/kubelet/docker.go:\n> \n> > @@ -173,15 +176,22 @@ func unescapeDash(in string) (out string) {\n> > \n> >  const containerNamePrefix = \"k8s\"\n> > \n> > +func hashContainer(container *api.Container) uint64 {\n> > -   hash := adler32.New()\n> > -   fmt.Fprintf(hash, \"%#v\", *container)\n> > -   return uint64(hash.Sum32())\n> \n> All of the parsing/formatting instructions expect a uint64, so the choices\n> are convert here in one place, or cast in multiple places. @lavalamp\n> https://github.com/lavalamp requested that I do it here. I don't care\n> too much either way.\n> \n> ## \n> \n> Reply to this email directly or view it on GitHub\n> https://github.com/GoogleCloudPlatform/kubernetes/pull/827/files#r15977251\n> .\n",
        "createdAt" : "2014-08-08T03:58:33Z",
        "updatedAt" : "2014-08-08T20:32:22Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "2986db9885f44b52ff663de0a078c0e1bb221049",
    "line" : 59,
    "diffHunk" : "@@ -1,1 +205,209 @@\thash := adler32.New()\n\tfmt.Fprintf(hash, \"%#v\", *container)\n\treturn uint64(hash.Sum32())\n}\n"
  },
  {
    "id" : "31c478b4-5470-46d0-b032-2f2d2bd3fa67",
    "prId" : 825,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e0a4ce10-b9b2-492c-8b05-18cc1cef2237",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Godoc comment\n",
        "createdAt" : "2014-08-08T00:38:41Z",
        "updatedAt" : "2014-08-08T03:28:08Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "433e2d5e-d912-4d6b-8bc9-7eccc6a92ec2",
        "parentId" : "e0a4ce10-b9b2-492c-8b05-18cc1cef2237",
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "done.\n",
        "createdAt" : "2014-08-08T03:28:43Z",
        "updatedAt" : "2014-08-08T03:28:43Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "d31d0781b247dbb56dd3916b6cd5d3e685001738",
    "line" : null,
    "diffHunk" : "@@ -1,1 +85,89 @@// NewDockerContainerCommandRunner creates a ContainerCommandRunner which uses nsinit to run a command\n// inside a container.\nfunc NewDockerContainerCommandRunner() ContainerCommandRunner {\n\treturn &dockerContainerCommandRunner{}\n}"
  },
  {
    "id" : "99109671-23bb-4fe1-b39b-5176c843c5d3",
    "prId" : 825,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0da0859c-927f-494d-b13b-51d6008ede77",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "Trying to manual repro this, so I understand it, I get an error:\n\nnsinit exec date\nsetsid failed. Error: Operation not permitted\n\nAm I doing something wrong?  @vmarmol \n",
        "createdAt" : "2014-08-08T16:51:43Z",
        "updatedAt" : "2014-08-08T16:51:43Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "e727f7d9-eae7-4067-9d31-4846e31b9e20",
        "parentId" : "0da0859c-927f-494d-b13b-51d6008ede77",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Run as root?\n\n----- Original Message -----\n\n> > @@ -63,6 +64,30 @@ func NewDockerPuller(client DockerInterface)\n> > DockerPuller {\n> >     }\n> >  }\n> > \n> > +type dockerContainerCommandRunner struct{}\n> > +\n> > +func (d _dockerContainerCommandRunner)\n> > getRunInContainerCommand(containerID string, cmd []string) (_exec.Cmd,\n> > error) {\n> > -   args := append([]string{\"exec\"}, cmd...)\n> > -   command := exec.Command(\"/usr/sbin/nsinit\", args...)\n> > -   command.Dir = fmt.Sprintf(\"/var/lib/docker/execdriver/native/%s\",\n> >   containerID)\n> \n> Trying to manual repro this, so I understand it, I get an error:\n> \n> nsinit exec date\n> setsid failed. Error: Operation not permitted\n> \n> Am I doing something wrong?  @vmarmol\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/GoogleCloudPlatform/kubernetes/pull/825/files#r16003155\n",
        "createdAt" : "2014-08-08T18:28:21Z",
        "updatedAt" : "2014-08-08T18:28:21Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "0f935945-c293-46d3-8be0-d50e4b2c5f58",
        "parentId" : "0da0859c-927f-494d-b13b-51d6008ede77",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "Thanks, I am running as root :)\n\nMaybe I don't have the \"good\" nsinit?  It never works for me, unless I run it under strace - weird.\n",
        "createdAt" : "2014-08-09T00:03:31Z",
        "updatedAt" : "2014-08-09T00:03:31Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "cb4f1454-a39f-4275-8c2c-280c8e39d418",
        "parentId" : "0da0859c-927f-494d-b13b-51d6008ede77",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Sorry, I couldn't resist... :)\n",
        "createdAt" : "2014-08-09T00:24:34Z",
        "updatedAt" : "2014-08-09T00:24:34Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "24b42e50-ac42-49ff-9c06-f061b1da7baa",
        "parentId" : "0da0859c-927f-494d-b13b-51d6008ede77",
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "@vmarmol indicated it had to match up pretty closely to the version of\ndocker you are running, maybe that's it?\n\nOn Fri, Aug 8, 2014 at 5:03 PM, Tim Hockin notifications@github.com wrote:\n\n> In pkg/kubelet/docker.go:\n> \n> > @@ -63,6 +64,30 @@ func NewDockerPuller(client DockerInterface) DockerPuller {\n> >     }\n> >  }\n> > \n> > +type dockerContainerCommandRunner struct{}\n> > +\n> > +func (d _dockerContainerCommandRunner) getRunInContainerCommand(containerID string, cmd []string) (_exec.Cmd, error) {\n> > -   args := append([]string{\"exec\"}, cmd...)\n> > -   command := exec.Command(\"/usr/sbin/nsinit\", args...)\n> > -   command.Dir = fmt.Sprintf(\"/var/lib/docker/execdriver/native/%s\", containerID)\n> \n> Thanks, I am running as root :)\n> \n> Maybe I don't have the \"good\" nsinit? It never works for me, unless I run\n> it under strace - weird.\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/GoogleCloudPlatform/kubernetes/pull/825/files#r16022498\n> .\n",
        "createdAt" : "2014-08-09T04:15:47Z",
        "updatedAt" : "2014-08-09T04:15:47Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      },
      {
        "id" : "5ec6db6a-4856-4c3a-a357-66139ee790a4",
        "parentId" : "0da0859c-927f-494d-b13b-51d6008ede77",
        "authorId" : "b7abca6a-d6be-4008-a014-3b5ca0e90529",
        "body" : "@thockin the two things that come to mind are whether you're in the right working directory and if you have the version of nsinit that is built at the same time as Docker. Note that this was fixed recently:\n\nhttps://github.com/docker/libcontainer/issues/57\n",
        "createdAt" : "2014-08-11T16:04:44Z",
        "updatedAt" : "2014-08-11T16:04:44Z",
        "lastEditedBy" : "b7abca6a-d6be-4008-a014-3b5ca0e90529",
        "tags" : [
        ]
      },
      {
        "id" : "19a02889-0a9c-41f7-8ed8-28d80021d089",
        "parentId" : "0da0859c-927f-494d-b13b-51d6008ede77",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "Yes, I was in the right dir.  It _does_ work if I run it under 'strace'\nwhich is the confusing part.  It never works if I run without strace.  I\ndid not build nsinit - I just used whatever is there from a k8s push as of\na few days ago.  I'm willing to buy that this may be the problem, but it\nwould be nice if we were a bit more compatible with ourselves :)\n\nOn Mon, Aug 11, 2014 at 9:04 AM, Victor Marmol notifications@github.com\nwrote:\n\n> In pkg/kubelet/docker.go:\n> \n> > @@ -63,6 +64,30 @@ func NewDockerPuller(client DockerInterface) DockerPuller {\n> >     }\n> >  }\n> > \n> > +type dockerContainerCommandRunner struct{}\n> > +\n> > +func (d _dockerContainerCommandRunner) getRunInContainerCommand(containerID string, cmd []string) (_exec.Cmd, error) {\n> > -   args := append([]string{\"exec\"}, cmd...)\n> > -   command := exec.Command(\"/usr/sbin/nsinit\", args...)\n> > -   command.Dir = fmt.Sprintf(\"/var/lib/docker/execdriver/native/%s\", containerID)\n> \n> @thockin https://github.com/thockin the two things that come to mind\n> are whether you're in the right working directory and if you have the\n> version of nsinit that is built at the same time as Docker. Note that this\n> was fixed recently:\n> \n> docker/libcontainer#57 https://github.com/docker/libcontainer/issues/57\n> \n> ## \n> \n> Reply to this email directly or view it on GitHub\n> https://github.com/GoogleCloudPlatform/kubernetes/pull/825/files#r16062101\n> .\n",
        "createdAt" : "2014-08-11T16:20:19Z",
        "updatedAt" : "2014-08-11T16:20:19Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "d31d0781b247dbb56dd3916b6cd5d3e685001738",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +70,74 @@\targs := append([]string{\"exec\"}, cmd...)\n\tcommand := exec.Command(\"/usr/sbin/nsinit\", args...)\n\tcommand.Dir = fmt.Sprintf(\"/var/lib/docker/execdriver/native/%s\", containerID)\n\treturn command, nil\n}"
  },
  {
    "id" : "c6ce9ce0-1604-4ee4-b00e-50c28c5e41e3",
    "prId" : 469,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0c7a5156-fb19-4950-a655-6d8aa3c9dc9e",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Nit: missing blank line.\n",
        "createdAt" : "2014-07-16T18:02:17Z",
        "updatedAt" : "2014-07-16T18:12:17Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "185a97b0374a80e7b02ac6f97225b63bc26342d9",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +83,87 @@\t}\n\treturn nil, false\n}\n\nfunc (c DockerContainers) FindContainersByPodFullName(manifestID string) map[string]*docker.APIContainers {"
  }
]