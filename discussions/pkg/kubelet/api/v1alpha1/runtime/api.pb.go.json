[
  {
    "id" : "92a154ef-ef10-49b5-80c5-babe4d6307e2",
    "prId" : 36728,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/36728#pullrequestreview-8528845",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7b9e2236-c936-4805-bab6-2dbdcd30000f",
        "parentId" : null,
        "authorId" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "body" : "Not all sysctls are permitted. How are we handling the whitelist across shims? Is it up to the runtime to decide which systctls to support? Should this information be surfaced to the kubelet so it can take appropriate action (whatever that may be) for invalid values?\n",
        "createdAt" : "2016-11-15T01:15:20Z",
        "updatedAt" : "2016-11-15T01:17:18Z",
        "lastEditedBy" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "tags" : [
        ]
      },
      {
        "id" : "51b0f535-dad3-403f-99f1-c5d5a8a98358",
        "parentId" : "7b9e2236-c936-4805-bab6-2dbdcd30000f",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "@timstclair Check http://kubernetes.io/docs/admin/sysctls/#safe-vs-unsafe-sysctls, those checks are already made in podsecuritypolicy and `pkg/kubelet/sysctl`.\n",
        "createdAt" : "2016-11-15T02:46:51Z",
        "updatedAt" : "2016-11-15T02:46:51Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      }
    ],
    "commit" : "38955897f7518631f5145b4d7cdd1277ad9ad3e6",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +673,677 @@\t//      key: security.alpha.kubernetes.io/sysctls\n\t//      description: list of safe sysctls which are set for the sandbox.\n\t//      value: comma separated list of sysctl_name=value key-value pairs.\n\t//\n\t//      key: security.alpha.kubernetes.io/unsafe-sysctls"
  },
  {
    "id" : "f7798ee7-429d-4b45-9a2f-461331b7544c",
    "prId" : 36728,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/36728#pullrequestreview-8521100",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5dcdc801-fcbb-4526-9f00-6152ebe5b11d",
        "parentId" : null,
        "authorId" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "body" : "Regardless of the decision in https://github.com/kubernetes/kubernetes/pull/36446, having these enumerated here will be helpful, so :+1: \n",
        "createdAt" : "2016-11-15T01:17:09Z",
        "updatedAt" : "2016-11-15T01:17:18Z",
        "lastEditedBy" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "tags" : [
        ]
      }
    ],
    "commit" : "38955897f7518631f5145b4d7cdd1277ad9ad3e6",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +669,673 @@\t//        local seccomp profile root\n\t//\n\t// 3. Sysctls\n\t//\n\t//      key: security.alpha.kubernetes.io/sysctls"
  },
  {
    "id" : "6cb7c75b-ce1f-4577-a8e0-eb405733f106",
    "prId" : 36542,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/36542#pullrequestreview-9567250",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "00207fe7-534e-43f6-8214-7e39565c855c",
        "parentId" : null,
        "authorId" : "4c30e665-5e6c-4a02-81a0-563b610a6d75",
        "body" : "Sorry for being too late with the review - but what does \"as applicable\" mean? if you provide the definition here I'll happily add it in a follow up.",
        "createdAt" : "2016-11-21T10:10:42Z",
        "updatedAt" : "2016-11-21T10:10:42Z",
        "lastEditedBy" : "4c30e665-5e6c-4a02-81a0-563b610a6d75",
        "tags" : [
        ]
      },
      {
        "id" : "493a8334-85ef-424f-93aa-3bb5afaedccf",
        "parentId" : "00207fe7-534e-43f6-8214-7e39565c855c",
        "authorId" : "2fa5a4c6-e0a7-4dbe-a80e-7770a5dc92a1",
        "body" : "in my mind it meant roughly \"if the sandbox is a construct in which running as a user is meaningful, e.g. a pause container, as opposed to hyper or rkt where the sandbox must be more privileged due to its increased responsibilities\".",
        "createdAt" : "2016-11-21T21:52:24Z",
        "updatedAt" : "2016-11-21T21:52:24Z",
        "lastEditedBy" : "2fa5a4c6-e0a7-4dbe-a80e-7770a5dc92a1",
        "tags" : [
        ]
      },
      {
        "id" : "17aeb91c-e115-48fb-b3c8-04d05ed68190",
        "parentId" : "00207fe7-534e-43f6-8214-7e39565c855c",
        "authorId" : "2fa5a4c6-e0a7-4dbe-a80e-7770a5dc92a1",
        "body" : "To me this is a backwards compatibility thing.\r\n\r\nIdeally, how the sandbox runs should totally be an implementation detail of the CRI runtime, and it should always run as securely as it can (that is without root whenever possible)... but the docker runtime today can have different pause user vs container user, and so it gets passed down.\r\n\r\ncc @yujuhong ",
        "createdAt" : "2016-11-21T21:53:33Z",
        "updatedAt" : "2016-11-21T21:54:29Z",
        "lastEditedBy" : "2fa5a4c6-e0a7-4dbe-a80e-7770a5dc92a1",
        "tags" : [
        ]
      },
      {
        "id" : "78cfd3a5-5987-40b7-8594-5030ee1d918e",
        "parentId" : "00207fe7-534e-43f6-8214-7e39565c855c",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "> Ideally, how the sandbox runs should totally be an implementation detail of the CRI runtime, and it should always run as securely as it can (that is without root whenever possible)... but the docker runtime today can have different pause user vs container user, and so it gets passed down.\r\n\r\nIt depends, running containers with elevated permissions via DaemonSets that expect to be able to monitor/see/update host-level things on the nodes means exposing some control over users in the API.",
        "createdAt" : "2016-11-21T21:56:19Z",
        "updatedAt" : "2016-11-21T21:56:19Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "5e935919-2025-4e84-9d86-8f803afb6d32",
        "parentId" : "00207fe7-534e-43f6-8214-7e39565c855c",
        "authorId" : "2fa5a4c6-e0a7-4dbe-a80e-7770a5dc92a1",
        "body" : "@liggitt this is about the `PodSandboxConfig` user which is the `pause` container (and only the pause container), not the user of the actual application that makes up said daemonset.",
        "createdAt" : "2016-11-21T23:32:34Z",
        "updatedAt" : "2016-11-21T23:32:34Z",
        "lastEditedBy" : "2fa5a4c6-e0a7-4dbe-a80e-7770a5dc92a1",
        "tags" : [
        ]
      }
    ],
    "commit" : "2ce5deb6fd14ec9519a088687afd0e9502d54e7d",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +476,480 @@\t// Optional SELinux context to be applied.\n\tSelinuxOptions *SELinuxOption `protobuf:\"bytes,2,opt,name=selinux_options,json=selinuxOptions\" json:\"selinux_options,omitempty\"`\n\t// UID to run sandbox processes as, when applicable.\n\tRunAsUser *int64 `protobuf:\"varint,3,opt,name=run_as_user,json=runAsUser\" json:\"run_as_user,omitempty\"`\n\t// If set, the root filesystem of the sandbox is read-only."
  },
  {
    "id" : "5836f2b6-cc8b-4ef9-9e5d-f31297bfe647",
    "prId" : 35839,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/35839#pullrequestreview-6713877",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a40d2a88-cdf9-49f2-adf4-fd1d1ca62fc8",
        "parentId" : null,
        "authorId" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "body" : "so if any required condition is unmet the node remains notready (please elaborate comment)? \nwe will probably have to conditionally start hostnetwork pods if NetworkReady == false but everything else checks out. \n",
        "createdAt" : "2016-11-01T01:29:34Z",
        "updatedAt" : "2016-11-05T07:02:23Z",
        "lastEditedBy" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "tags" : [
        ]
      },
      {
        "id" : "ba6a799e-3077-41e8-a8b8-e977bcd6c0f2",
        "parentId" : "a40d2a88-cdf9-49f2-adf4-fd1d1ca62fc8",
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "ACK\n",
        "createdAt" : "2016-11-01T21:57:00Z",
        "updatedAt" : "2016-11-05T07:02:23Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      }
    ],
    "commit" : "90fe0c59942f5890cd9398441c1c4f057f5fb187",
    "line" : null,
    "diffHunk" : "@@ -1,1 +2665,2669 @@//   * RuntimeReady: RuntimeReady means the runtime is up and ready to accept\n//   basic containers e.g. container only needs host network.\n//   * NetworkReady: NetworkReady means the runtime network is up and ready to\n//   accept containers which require container network.\n// 2. Optional conditions: Conditions are informative to the user, but kubelet"
  },
  {
    "id" : "38ee02b3-b268-4341-9b84-070ab3ad73fa",
    "prId" : 34811,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/34811#pullrequestreview-6731062",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "01ade724-be66-4d64-91bb-094d3a643381",
        "parentId" : null,
        "authorId" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "body" : "These apply to the first process in each container run in the sandbox, accurate?\n",
        "createdAt" : "2016-11-01T19:20:59Z",
        "updatedAt" : "2016-11-07T03:41:32Z",
        "lastEditedBy" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "tags" : [
        ]
      },
      {
        "id" : "e7fc3445-8e61-4c2a-a5f4-0cf4e04566d5",
        "parentId" : "01ade724-be66-4d64-91bb-094d3a643381",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "Here is only for sandbox. Containers are addressed at `SecurityContext.SupplementalGroups`\n",
        "createdAt" : "2016-11-02T00:17:49Z",
        "updatedAt" : "2016-11-07T03:41:32Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      }
    ],
    "commit" : "f8e5f81fedd5243b9d7f690a9c0738794db15899",
    "line" : null,
    "diffHunk" : "@@ -1,1 +480,484 @@\t// If set, the root filesystem of the sandbox is read-only.\n\tReadonlyRootfs *bool `protobuf:\"varint,4,opt,name=readonly_rootfs,json=readonlyRootfs\" json:\"readonly_rootfs,omitempty\"`\n\t// A list of groups applied to the first process run in the sandbox, in addition\n\t// to the sandbox's primary GID.\n\tSupplementalGroups []int64 `protobuf:\"varint,5,rep,name=supplemental_groups,json=supplementalGroups\" json:\"supplemental_groups,omitempty\"`"
  },
  {
    "id" : "c5052c5c-a686-4b8b-a88c-8ed44a90e822",
    "prId" : 34811,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/34811#pullrequestreview-6738643",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "013b52e2-b227-4a54-a3e4-b2577f44bf0b",
        "parentId" : null,
        "authorId" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "body" : "Golang naming conventions would have this named 'SELinuxOptions', as it is elsewhere in the API, with the json field name being 'seLinuxOptions'.\n",
        "createdAt" : "2016-11-01T19:24:07Z",
        "updatedAt" : "2016-11-07T03:41:32Z",
        "lastEditedBy" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "tags" : [
        ]
      },
      {
        "id" : "c5c605e5-39b3-4f9a-9845-2bf02fe973c6",
        "parentId" : "013b52e2-b227-4a54-a3e4-b2577f44bf0b",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "It's hard to ensure the field name for both grpc and golang conventions. Some options here\n- Option 1: Named `SELinuxOptions` with json `sELinuxOptions`\n- Option 2: Named `SeLinuxOptions` with json `seLinuxOptions`\n- Option 3: Named `SelinuxOptions` with json `selinuxOptions`\n\nOption 3 seems most comfortable to me. @pmorie What's your opinion?\n",
        "createdAt" : "2016-11-02T00:29:20Z",
        "updatedAt" : "2016-11-07T03:41:32Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      },
      {
        "id" : "ff4fb9c2-f423-4e82-a0a3-08cc21cac81d",
        "parentId" : "013b52e2-b227-4a54-a3e4-b2577f44bf0b",
        "authorId" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "body" : "I agree with @feiskyer . Since the proto is the source for this API, I think it should adhere to proto convensions, even when that means the generated code violates go conventions.\n",
        "createdAt" : "2016-11-02T01:27:31Z",
        "updatedAt" : "2016-11-07T03:41:32Z",
        "lastEditedBy" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "tags" : [
        ]
      },
      {
        "id" : "db496022-a287-4cbc-92c3-2c6aae28c49d",
        "parentId" : "013b52e2-b227-4a54-a3e4-b2577f44bf0b",
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "Generated code are exempted from adhering to the golang convention: https://github.com/golang/go/wiki/CodeReviewComments#initialisms\n",
        "createdAt" : "2016-11-02T01:53:55Z",
        "updatedAt" : "2016-11-07T03:41:32Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "f8e5f81fedd5243b9d7f690a9c0738794db15899",
    "line" : null,
    "diffHunk" : "@@ -1,1 +475,479 @@\tNamespaceOptions *NamespaceOption `protobuf:\"bytes,1,opt,name=namespace_options,json=namespaceOptions\" json:\"namespace_options,omitempty\"`\n\t// Optional SELinux context to be applied.\n\tSelinuxOptions *SELinuxOption `protobuf:\"bytes,2,opt,name=selinux_options,json=selinuxOptions\" json:\"selinux_options,omitempty\"`\n\t// The UID to run the entrypoint of the sandbox process.\n\tRunAsUser *int64 `protobuf:\"varint,3,opt,name=run_as_user,json=runAsUser\" json:\"run_as_user,omitempty\"`"
  },
  {
    "id" : "8a93064c-9bf1-4c47-b5de-10a1de3cdcb7",
    "prId" : 34287,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/34287#pullrequestreview-3338926",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8ebed494-94b1-4cb5-b979-c963007f7f0f",
        "parentId" : null,
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "nit: also adds trailing `.` like other comments?\n",
        "createdAt" : "2016-10-07T09:01:17Z",
        "updatedAt" : "2016-10-07T21:10:36Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      },
      {
        "id" : "d3943de5-260e-461e-8d61-c83b1b1b2729",
        "parentId" : "8ebed494-94b1-4cb5-b979-c963007f7f0f",
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "I wanted to, but I found that the comments in front and after this line all don't have `.`.\n",
        "createdAt" : "2016-10-07T09:03:30Z",
        "updatedAt" : "2016-10-07T21:10:36Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      },
      {
        "id" : "8a26ce6f-7c2b-4fd0-ae26-2dfb51b34be5",
        "parentId" : "8ebed494-94b1-4cb5-b979-c963007f7f0f",
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "It's fine for now. We can do a sweep to make sure all of them are consistent in another PR.\n",
        "createdAt" : "2016-10-07T16:56:41Z",
        "updatedAt" : "2016-10-07T21:10:36Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "08aedca12ea07d745e2b1150437af30e7f2c9978",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +972,976 @@\t// The state of the PodSandbox\n\tState *PodSandBoxState `protobuf:\"varint,3,opt,name=state,enum=runtime.PodSandBoxState\" json:\"state,omitempty\"`\n\t// Creation timestamps of the sandbox in nanoseconds\n\tCreatedAt *int64 `protobuf:\"varint,4,opt,name=created_at,json=createdAt\" json:\"created_at,omitempty\"`\n\t// The labels of the PodSandbox"
  },
  {
    "id" : "dab24ce1-e2ff-445f-a2cf-bbb1036488ef",
    "prId" : 29399,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dc1584e9-0e2a-465c-bf02-a700b4b1d997",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Changes to json field names looks suspicious to me, but IIUC, this is autogenerated code, right?\n",
        "createdAt" : "2016-08-09T08:23:49Z",
        "updatedAt" : "2016-08-09T15:41:47Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "3a406934-ee55-437b-85d1-8b6dc662ac2c",
        "parentId" : "dc1584e9-0e2a-465c-bf02-a700b4b1d997",
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "This is all generated, it should probably be ripped out of this commit as it's overwritten in the other.\n",
        "createdAt" : "2016-08-09T13:11:47Z",
        "updatedAt" : "2016-08-09T15:41:47Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      }
    ],
    "commit" : "24993b034398cf078096db34f458c0f779242a7f",
    "line" : null,
    "diffHunk" : "@@ -1,1 +239,243 @@\tVersion *string `protobuf:\"bytes,1,opt,name=version\" json:\"version,omitempty\"`\n\t// The name of the container runtime.\n\tRuntimeName *string `protobuf:\"bytes,2,opt,name=runtime_name,json=runtimeName\" json:\"runtime_name,omitempty\"`\n\t// The version of the container runtime.\n\tRuntimeVersion *string `protobuf:\"bytes,3,opt,name=runtime_version,json=runtimeVersion\" json:\"runtime_version,omitempty\"`"
  },
  {
    "id" : "df913c7d-a91c-406b-af16-54dee997f11d",
    "prId" : 17048,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "23d58710-ed92-42a2-8187-85e03342c0c4",
        "parentId" : null,
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "Let's not check in generated code. @thockin is working hard to get rid of them. \n",
        "createdAt" : "2016-06-29T00:22:38Z",
        "updatedAt" : "2016-07-12T01:17:34Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      },
      {
        "id" : "74188f3d-927e-4346-84b1-236076e544eb",
        "parentId" : "23d58710-ed92-42a2-8187-85e03342c0c4",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "@vishh  Generated code will be used in KubeRuntimeManager, so I checked in it.\n",
        "createdAt" : "2016-06-29T00:38:22Z",
        "updatedAt" : "2016-07-12T01:17:34Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      },
      {
        "id" : "269ced71-38c6-498e-8407-9dc021d7fce7",
        "parentId" : "23d58710-ed92-42a2-8187-85e03342c0c4",
        "authorId" : "227eb550-8b08-4420-9a78-279f840bd8de",
        "body" : "Need a way to generate the code before building.\n",
        "createdAt" : "2016-06-29T00:48:09Z",
        "updatedAt" : "2016-07-12T01:17:34Z",
        "lastEditedBy" : "227eb550-8b08-4420-9a78-279f840bd8de",
        "tags" : [
        ]
      },
      {
        "id" : "9060f9e3-ef8b-4d12-a7f5-1569949e5822",
        "parentId" : "23d58710-ed92-42a2-8187-85e03342c0c4",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "More specificly, KubeRuntimeManager will consume this api by using the gRPC client in generated code.\n",
        "createdAt" : "2016-06-29T00:48:30Z",
        "updatedAt" : "2016-07-12T01:17:34Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      },
      {
        "id" : "73239de9-cb99-4766-a1ac-8ea00cd922c6",
        "parentId" : "23d58710-ed92-42a2-8187-85e03342c0c4",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "@yifan-gu See `hack/update-generated-runtime.sh` and `hack/verify-generated-runtime.sh`\n",
        "createdAt" : "2016-06-29T00:53:28Z",
        "updatedAt" : "2016-07-12T01:17:34Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      },
      {
        "id" : "a606d9fb-edd1-412f-8f3a-9ea9d030d4ff",
        "parentId" : "23d58710-ed92-42a2-8187-85e03342c0c4",
        "authorId" : "227eb550-8b08-4420-9a78-279f840bd8de",
        "body" : "@feiskyer I think @vishh means before build, it's possible to run the code generation script to get the `.go` file, so you have to check in the `.go` in commits.\nBut I am ok with both, not a big deal.\n",
        "createdAt" : "2016-07-01T18:44:17Z",
        "updatedAt" : "2016-07-12T01:17:34Z",
        "lastEditedBy" : "227eb550-8b08-4420-9a78-279f840bd8de",
        "tags" : [
        ]
      },
      {
        "id" : "cbffe42e-2d28-4a0b-b115-5fda2074f432",
        "parentId" : "23d58710-ed92-42a2-8187-85e03342c0c4",
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "IMO, we should check in the generated **_go**_ code because they will be consumed by other components of kubelet. It's a bit strange to expect people to write code without looking at the go interfaces. \n",
        "createdAt" : "2016-07-06T22:22:29Z",
        "updatedAt" : "2016-07-12T01:17:34Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "24cfb592-f3e0-459b-8b7f-e7034c9fd344",
        "parentId" : "23d58710-ed92-42a2-8187-85e03342c0c4",
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "Spoke to @vishh offline. I filed #28642 to discuss handling the API machinery in general for the long term. For now, I think it's ok to check in generated go code.\n",
        "createdAt" : "2016-07-07T22:47:30Z",
        "updatedAt" : "2016-07-12T01:17:34Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "e12044518ec395b4d20a43eb546adf9ddf0525bb",
    "line" : 1,
    "diffHunk" : "@@ -1,1 +-1,3 @@/*\nCopyright 2016 The Kubernetes Authors.\n"
  },
  {
    "id" : "6904e854-acdf-4b3c-84ca-3c1b92df9ec5",
    "prId" : 17048,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5c279b17-88f7-4844-8df8-27c931d4fe1b",
        "parentId" : null,
        "authorId" : "79676760-e10b-4a9f-aaf8-ec1c2b8e0ec3",
        "body" : "This field is misleading - at least, its comment is. What is the API Version of a runtime? if runc is a runtime which is its API version? I have various ideas (bad), but the comment here (in the .proto file probably) should say more about this.\n\n/cc @mrunalp @vishh \n",
        "createdAt" : "2016-07-19T21:04:18Z",
        "updatedAt" : "2016-07-19T21:04:18Z",
        "lastEditedBy" : "79676760-e10b-4a9f-aaf8-ec1c2b8e0ec3",
        "tags" : [
        ]
      },
      {
        "id" : "228f5ab6-8908-4e71-92fe-b5093ee6ae92",
        "parentId" : "5c279b17-88f7-4844-8df8-27c931d4fe1b",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "@runcom e.g. the version of docker daemon's API, it's usually not same as docker version.\n",
        "createdAt" : "2016-07-20T00:20:22Z",
        "updatedAt" : "2016-07-20T00:20:22Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      }
    ],
    "commit" : "e12044518ec395b4d20a43eb546adf9ddf0525bb",
    "line" : 236,
    "diffHunk" : "@@ -1,1 +234,238 @@\tRuntimeVersion *string `protobuf:\"bytes,3,opt,name=runtime_version\" json:\"runtime_version,omitempty\"`\n\t// The API version of the container runtime.\n\tRuntimeApiVersion *string `protobuf:\"bytes,4,opt,name=runtime_api_version\" json:\"runtime_api_version,omitempty\"`\n\tXXX_unrecognized  []byte  `json:\"-\"`\n}"
  },
  {
    "id" : "f976b6a1-d5e5-4f96-81f8-1f141a6f1aa4",
    "prId" : 17048,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "83562c5f-dbc5-4bd2-a919-b244b6e4f50e",
        "parentId" : null,
        "authorId" : "79676760-e10b-4a9f-aaf8-ec1c2b8e0ec3",
        "body" : "@mrunalp @philips @vishh is there any effort/issue/PR which tries to abstract this struct not to assume this is a docker Image and it needs to be obtained from a docker registry? \n",
        "createdAt" : "2016-09-14T10:35:40Z",
        "updatedAt" : "2016-09-14T10:35:40Z",
        "lastEditedBy" : "79676760-e10b-4a9f-aaf8-ec1c2b8e0ec3",
        "tags" : [
        ]
      },
      {
        "id" : "313d13d6-07a4-4600-a830-291ce7ecad5a",
        "parentId" : "83562c5f-dbc5-4bd2-a919-b244b6e4f50e",
        "authorId" : "79676760-e10b-4a9f-aaf8-ec1c2b8e0ec3",
        "body" : "Can this struct at least embed a field to express a defined _transport_? (i.e. Docker (registry), nfs storage where this image could live, the Atomic registry or just a directory path on the node) \n",
        "createdAt" : "2016-09-14T10:39:08Z",
        "updatedAt" : "2016-09-14T10:39:08Z",
        "lastEditedBy" : "79676760-e10b-4a9f-aaf8-ec1c2b8e0ec3",
        "tags" : [
        ]
      },
      {
        "id" : "d4b2b936-f0be-4193-9db4-107d9965036d",
        "parentId" : "83562c5f-dbc5-4bd2-a919-b244b6e4f50e",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "@runcom Check #7203 for this.\n",
        "createdAt" : "2016-09-14T12:27:54Z",
        "updatedAt" : "2016-09-14T12:27:54Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      },
      {
        "id" : "835ed78f-6338-44f5-b3e8-bbeedcadf150",
        "parentId" : "83562c5f-dbc5-4bd2-a919-b244b6e4f50e",
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "@runcom The Spec here mirrors k8s API. AFAIK @philips has been driving image spec changes in k8s API. May be you can help @philips drive these changes? Introducing OCI images will be amazing!\n",
        "createdAt" : "2016-09-14T17:15:41Z",
        "updatedAt" : "2016-09-14T17:15:41Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      },
      {
        "id" : "2004104c-12e1-45f2-9c3f-00add5332263",
        "parentId" : "83562c5f-dbc5-4bd2-a919-b244b6e4f50e",
        "authorId" : "79676760-e10b-4a9f-aaf8-ec1c2b8e0ec3",
        "body" : "@vishh introducing OCI images (even from local tar balls) was exactly my point instead of just assuming a docker registry to pull docker images from. I commented in #7203 though. \n",
        "createdAt" : "2016-09-14T17:19:17Z",
        "updatedAt" : "2016-09-14T17:19:17Z",
        "lastEditedBy" : "79676760-e10b-4a9f-aaf8-ec1c2b8e0ec3",
        "tags" : [
        ]
      }
    ],
    "commit" : "e12044518ec395b4d20a43eb546adf9ddf0525bb",
    "line" : 1046,
    "diffHunk" : "@@ -1,1 +1044,1048 @@// imageName:digest), but in the future it will include more detailed\n// information about the different image types.\ntype ImageSpec struct {\n\tImage            *string `protobuf:\"bytes,1,opt,name=image\" json:\"image,omitempty\"`\n\tXXX_unrecognized []byte  `json:\"-\"`"
  }
]