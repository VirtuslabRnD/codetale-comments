[
  {
    "id" : "a89d77b6-9739-450b-9f85-72371c56c21d",
    "prId" : 45166,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/45166#pullrequestreview-35799802",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c88077fa-95b2-4e28-96fb-57ed9500011a",
        "parentId" : null,
        "authorId" : "a09f2d48-fec0-4c0d-bd81-6de7378a6ebf",
        "body" : "We can't change this number to 1, right?",
        "createdAt" : "2017-05-02T15:09:26Z",
        "updatedAt" : "2017-05-02T15:09:33Z",
        "lastEditedBy" : "a09f2d48-fec0-4c0d-bd81-6de7378a6ebf",
        "tags" : [
        ]
      }
    ],
    "commit" : "d301f228637a7465cf94067d832624b029f4faab",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +340,344 @@message Namespace {\n    // Namespace options for Linux namespaces.\n    NamespaceOption options = 2;\n}\n"
  },
  {
    "id" : "641f513e-0f18-4892-8b00-f204734e65c1",
    "prId" : 41733,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/41733#pullrequestreview-34229716",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "91cff211-1858-4836-aec1-87b2b8121456",
        "parentId" : null,
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "Should we plan for multiple image filesystems? @dchen1107 @vishh ",
        "createdAt" : "2017-04-12T21:37:57Z",
        "updatedAt" : "2017-05-03T07:18:19Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "520199b6-dfd2-47ee-a283-e4a87ec2efe5",
        "parentId" : "91cff211-1858-4836-aec1-87b2b8121456",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "Ping @yujuhong @vishh @dchen1107 Do you think we need to add multiple image filesystems now?",
        "createdAt" : "2017-04-24T07:52:08Z",
        "updatedAt" : "2017-05-03T07:18:19Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      }
    ],
    "commit" : "5f7de0ab97c38597b690faf4dbbfe538a5c4b327",
    "line" : 50,
    "diffHunk" : "@@ -1,1 +1004,1008 @@message ImageFsInfoResponse {\n    // filesystem information of images.\n    FsInfo fs_info = 1;\n}"
  },
  {
    "id" : "2c97208a-715b-4f21-b15f-41bf14410602",
    "prId" : 41733,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/41733#pullrequestreview-34451662",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "019e66e8-6a41-4eb9-b455-17cf4b2fc0e4",
        "parentId" : null,
        "authorId" : "d2b16581-e7e9-48b8-9f76-6f6bcb9ec300",
        "body" : "Is there any reason why this is camelcase, and the actual name uses underscores?",
        "createdAt" : "2017-04-24T17:32:48Z",
        "updatedAt" : "2017-05-03T07:18:19Z",
        "lastEditedBy" : "d2b16581-e7e9-48b8-9f76-6f6bcb9ec300",
        "tags" : [
        ]
      },
      {
        "id" : "70607aac-d468-4288-be3d-d320b7cc2fa4",
        "parentId" : "019e66e8-6a41-4eb9-b455-17cf4b2fc0e4",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "It is for generating golang consistent comments.",
        "createdAt" : "2017-04-25T01:12:46Z",
        "updatedAt" : "2017-05-03T07:18:19Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      }
    ],
    "commit" : "5f7de0ab97c38597b690faf4dbbfe538a5c4b327",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +992,996 @@    // equal CapacityBytes - AvailableBytes.\n    UInt64Value used_bytes = 5;\n    // InodesCapacity represents the total inodes in the filesystem.\n    UInt64Value inodes_capacity = 6;\n    // InodesAvailable represents the free inodes in the filesystem."
  },
  {
    "id" : "59fd1d09-00bd-48d6-8468-842db476fb65",
    "prId" : 38348,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/38348#pullrequestreview-14621495",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "36392d7b-e727-4bee-8937-42aabce03b18",
        "parentId" : null,
        "authorId" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "body" : "Does it make sense to keep this option in the CRI? We would need to expose more options (e.g. `restrictDevices`, `maskSensitivePaths`) if we removed it. Another option is to keep `privileged`, but scope down what it means. i.e. let the Kubelet fill out the other security context options for capabilities, selinux_options, seccomp and apparmor.\r\n\r\nWDYT?",
        "createdAt" : "2016-12-14T00:04:19Z",
        "updatedAt" : "2016-12-14T00:04:19Z",
        "lastEditedBy" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "tags" : [
        ]
      },
      {
        "id" : "e0d604bb-eb72-4a6e-9c47-59200b1b6dfc",
        "parentId" : "36392d7b-e727-4bee-8937-42aabce03b18",
        "authorId" : "2fa5a4c6-e0a7-4dbe-a80e-7770a5dc92a1",
        "body" : "I would love to scope it down to something a little more sane if we can.\r\n\r\nIt's unfortunate that docker makes a higher level of granularity impossible. While OCI/runc supports each of these options at a granular level, docker does not provide api options for about half of these (the /dev bit, path masking, device cgroup tweaks, replicating the exact semantics of the sys/cgroup mounts).. meaning it's all-or-none.\r\n\r\nBecause of that, the only way to break it down is to also break the public API and make privileged do somewhat less, or to modify docker to have more knobs and wait for all supported versions to have them.\r\n\r\nNeither of those options sounds great.",
        "createdAt" : "2016-12-14T02:53:08Z",
        "updatedAt" : "2016-12-14T02:54:12Z",
        "lastEditedBy" : "2fa5a4c6-e0a7-4dbe-a80e-7770a5dc92a1",
        "tags" : [
        ]
      },
      {
        "id" : "ab12a2fd-ffae-4d34-b689-ff376c58ebac",
        "parentId" : "36392d7b-e727-4bee-8937-42aabce03b18",
        "authorId" : "4c30e665-5e6c-4a02-81a0-563b610a6d75",
        "body" : "@euank what about the compromise of having the CRI be more granular, with just the dockershim implementation having the caveat of one-on-implies-all-on? That might put us on the early steps of a path to \"fixing\" the public API.",
        "createdAt" : "2016-12-21T11:25:35Z",
        "updatedAt" : "2016-12-21T11:25:35Z",
        "lastEditedBy" : "4c30e665-5e6c-4a02-81a0-563b610a6d75",
        "tags" : [
        ]
      },
      {
        "id" : "c572f499-3a26-41c3-be45-545bc13e4b84",
        "parentId" : "36392d7b-e727-4bee-8937-42aabce03b18",
        "authorId" : "227eb550-8b08-4420-9a78-279f840bd8de",
        "body" : "> @euank what about the compromise of having the CRI be more granular, with just the dockershim implementation having the caveat of one-on-implies-all-on? That might put us on the early steps of a path to \"fixing\" the public API.\r\n\r\n+1",
        "createdAt" : "2016-12-29T00:16:11Z",
        "updatedAt" : "2016-12-29T00:16:11Z",
        "lastEditedBy" : "227eb550-8b08-4420-9a78-279f840bd8de",
        "tags" : [
        ]
      }
    ],
    "commit" : "bcd939cb080922d648b6e3a2f7e0406061f4ef5c",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +467,471 @@    // 6. The device cgroup does not restrict access to any devices.\n    // 7. All devices from the host's /dev are available within the container.\n    // 8. SELinux restrictions are not applied (e.g. label=disabled).\n    optional bool privileged = 2;\n    // Configurations for the container's namespaces."
  },
  {
    "id" : "ced0678c-a7d4-4a18-8fb4-7f03af6d53f9",
    "prId" : 36448,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/36448#pullrequestreview-7900963",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f5d5ab3a-56c9-414f-953a-14412c9198fe",
        "parentId" : null,
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "nit: remove `,`\n",
        "createdAt" : "2016-11-09T06:36:45Z",
        "updatedAt" : "2016-11-09T06:37:08Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      },
      {
        "id" : "afe4402a-cb59-4fd2-92cf-5665e0cfb8e6",
        "parentId" : "f5d5ab3a-56c9-414f-953a-14412c9198fe",
        "authorId" : "4c30e665-5e6c-4a02-81a0-563b610a6d75",
        "body" : "it's fine IMO and I expect this will be cleaned up when we address the TODO for what the timeout means\n",
        "createdAt" : "2016-11-09T06:38:09Z",
        "updatedAt" : "2016-11-09T06:38:09Z",
        "lastEditedBy" : "4c30e665-5e6c-4a02-81a0-563b610a6d75",
        "tags" : [
        ]
      },
      {
        "id" : "898a2eb4-e1d2-4480-b210-62e019762028",
        "parentId" : "f5d5ab3a-56c9-414f-953a-14412c9198fe",
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "This is fine.\n",
        "createdAt" : "2016-11-09T21:34:49Z",
        "updatedAt" : "2016-11-09T21:35:14Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "37150b6abd2ac76c54559ebf458e057555de720b",
    "line" : 415,
    "diffHunk" : "@@ -1,1 +570,574 @@    // ID of the container to stop.\n    optional string container_id = 1;\n    // Timeout, in seconds, to stop the container.\n    optional int64 timeout = 2;\n}"
  },
  {
    "id" : "602e13d7-7bab-4924-ab0f-530d31b9f5cc",
    "prId" : 36448,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/36448#pullrequestreview-7762727",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "261bac85-0c07-4409-9da9-eb78c48441c7",
        "parentId" : null,
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "maybe change this to `Linux specific configuration` (highlight linux instead of containers).\n",
        "createdAt" : "2016-11-09T06:39:36Z",
        "updatedAt" : "2016-11-09T06:39:36Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      }
    ],
    "commit" : "37150b6abd2ac76c54559ebf458e057555de720b",
    "line" : 377,
    "diffHunk" : "@@ -1,1 +539,543 @@    optional bool tty = 14;\n\n    // Configuration specific to Linux containers.\n    optional LinuxContainerConfig linux = 15;\n}"
  },
  {
    "id" : "08f11b83-4ca2-4e7b-bd03-b6ded4cd0645",
    "prId" : 36448,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/36448#pullrequestreview-7953195",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4fecacd1-4c24-4c13-85d9-9283a036a8fa",
        "parentId" : null,
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "nit: change `kubelet runtime API` to `Container Runtime Interface` for keeping consistent with other places (e.g. issues and PRs)\n",
        "createdAt" : "2016-11-09T06:44:12Z",
        "updatedAt" : "2016-11-09T06:44:12Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      },
      {
        "id" : "232a6df7-d316-414d-8fdd-55c1ae1e469d",
        "parentId" : "4fecacd1-4c24-4c13-85d9-9283a036a8fa",
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "I think `kubelet runtime API` is unclear, but let's not block this PR which focuses on consistency cleanup.\n",
        "createdAt" : "2016-11-09T21:38:41Z",
        "updatedAt" : "2016-11-09T21:38:42Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "528188d7-460c-492a-8c91-493a7f465724",
        "parentId" : "4fecacd1-4c24-4c13-85d9-9283a036a8fa",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "LGTM.\n\n@jonboulle will you draw a following PR for this?\n",
        "createdAt" : "2016-11-10T06:51:15Z",
        "updatedAt" : "2016-11-10T06:51:15Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      }
    ],
    "commit" : "37150b6abd2ac76c54559ebf458e057555de720b",
    "line" : 39,
    "diffHunk" : "@@ -1,1 +83,87 @@\nmessage VersionRequest {\n    // Version of the kubelet runtime API.\n    optional string version = 1;\n}"
  },
  {
    "id" : "7ad810e0-2144-4ef1-a8d5-b43d4116586b",
    "prId" : 36448,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/36448#pullrequestreview-7763062",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0cc85fa0-a655-4f55-afdd-9549257b7d41",
        "parentId" : null,
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "Same here.\n",
        "createdAt" : "2016-11-09T06:44:22Z",
        "updatedAt" : "2016-11-09T06:44:23Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      }
    ],
    "commit" : "37150b6abd2ac76c54559ebf458e057555de720b",
    "line" : 45,
    "diffHunk" : "@@ -1,1 +88,92 @@\nmessage VersionResponse {\n    // Version of the kubelet runtime API.\n    optional string version = 1;\n    // Name of the container runtime."
  },
  {
    "id" : "65505c94-3491-453f-8f4f-4cc25cc0d480",
    "prId" : 36446,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/36446#pullrequestreview-8336095",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e586cecb-01f2-4a89-bacd-949eb7628aa5",
        "parentId" : null,
        "authorId" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "body" : "Why is this field even here? What purpose does it serve?\n",
        "createdAt" : "2016-11-11T18:25:42Z",
        "updatedAt" : "2016-12-22T10:40:34Z",
        "lastEditedBy" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "tags" : [
        ]
      },
      {
        "id" : "0ffcc00b-b61e-4c7c-a9f3-e3fa8a644d91",
        "parentId" : "e586cecb-01f2-4a89-bacd-949eb7628aa5",
        "authorId" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "body" : "Same below... Why do we provide annotations anywhere other than the PodSandboxConfig?\n",
        "createdAt" : "2016-11-11T18:27:32Z",
        "updatedAt" : "2016-12-22T10:40:34Z",
        "lastEditedBy" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "tags" : [
        ]
      },
      {
        "id" : "5a285a6a-9836-4e2e-843d-c83886a4a597",
        "parentId" : "e586cecb-01f2-4a89-bacd-949eb7628aa5",
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "Kubelet actually stores metadata in the annotations, and it needs to get the metadata back when querying the container status.\n",
        "createdAt" : "2016-11-11T20:40:01Z",
        "updatedAt" : "2016-12-22T10:40:34Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "0d8b8d93-024b-49d6-a7ec-8c7814bc705a",
        "parentId" : "e586cecb-01f2-4a89-bacd-949eb7628aa5",
        "authorId" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "body" : "Why pass it off to the runtime though? Why not store the annotations in the Kubelet pod representations?\n",
        "createdAt" : "2016-11-11T20:52:33Z",
        "updatedAt" : "2016-12-22T10:40:34Z",
        "lastEditedBy" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "tags" : [
        ]
      },
      {
        "id" : "e63bd451-722b-4a47-9f5a-dca389179935",
        "parentId" : "e586cecb-01f2-4a89-bacd-949eb7628aa5",
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "> Why not store the annotations in the Kubelet pod representations\n\nIf you mean the k8s API \"Pod\", kubelet can't rely on the remote apiserver to checkpoint per-container instance information.\n\nIf kubelet implements a local checkpoint, it may eliminate most of the need to use annotations. \n",
        "createdAt" : "2016-11-11T21:07:10Z",
        "updatedAt" : "2016-12-22T10:40:34Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "334213b5-75c7-4f65-a37d-8218bdd57d7f",
        "parentId" : "e586cecb-01f2-4a89-bacd-949eb7628aa5",
        "authorId" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "body" : "I see, I was confused by the distinction between api (user-set) annotations and the system-set per-container annotations. IIUC the annotations on the pod are the api annotations, and the container level annotations are system-set, right? I think it might be worth distinguishing between these explicitly, either in a comment or the field name.\n\nIf that's the case, it seems like the annotations on the PodSandbox and PodSandboxStatus messages are redundant?\n",
        "createdAt" : "2016-11-11T21:20:49Z",
        "updatedAt" : "2016-12-22T10:40:34Z",
        "lastEditedBy" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "tags" : [
        ]
      },
      {
        "id" : "7ffd73c0-1f64-421f-b52c-997313c82073",
        "parentId" : "e586cecb-01f2-4a89-bacd-949eb7628aa5",
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "> I see, I was confused by the distinction between api (user-set) annotations and the system-set per-container annotations. IIUC the annotations on the pod are the api annotations, and the container level annotations are system-set, right? I think it might be worth distinguishing between these explicitly, either in a comment or the field name.\n\nHmm..kubelet is a user of the API, and whatever it chooses to store in the annotations should not be defined in the API (unless we want the runtime to take actions). \nAs for the k8s api pod annotations, we currently don't pass them down to CRI.\n",
        "createdAt" : "2016-11-11T22:02:46Z",
        "updatedAt" : "2016-12-22T10:40:34Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "b7845e4a-6b11-496e-9cda-6d4d06a27c8f",
        "parentId" : "e586cecb-01f2-4a89-bacd-949eb7628aa5",
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "> If that's the case, it seems like the annotations on the PodSandbox and PodSandboxStatus messages are redundant?\n\nSpoke to @timstclair offline. The podsandbox annotations today include the annotations from the k8s pod (similar to labels). I forgot about that completely. \nWe can add in the comment that kubelet pass the pod annotations to the podsandbox.\n\nI think we can change the comment to reflect that. \n",
        "createdAt" : "2016-11-11T22:19:55Z",
        "updatedAt" : "2016-12-22T10:40:34Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "da5ff92e-d8a4-4c89-8a23-d9705489ea74",
        "parentId" : "e586cecb-01f2-4a89-bacd-949eb7628aa5",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "> We can add in the comment that kubelet pass the pod annotations to the podsandbox.\n\n+1. And this is also for some annotation-based features e.g. AppArmor/Seccomp/Sysctls. \n",
        "createdAt" : "2016-11-14T04:17:54Z",
        "updatedAt" : "2016-12-22T10:40:34Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      }
    ],
    "commit" : "5d982b4a0279d6afdeaaf470eb53b31d034a549c",
    "line" : null,
    "diffHunk" : "@@ -1,1 +370,374 @@    // MUST be identical to that of the corresponding PodSandboxConfig used to\n    // instantiate the pod sandbox this status represents.\n    map<string, string> annotations = 8;\n}\n"
  },
  {
    "id" : "abd790db-83ec-42cb-9739-77fa11fd7067",
    "prId" : 36446,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/36446#pullrequestreview-9684332",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3b93b4b2-c4fa-4f05-9b52-12f13d62c5e5",
        "parentId" : null,
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "nit: s/a/the",
        "createdAt" : "2016-11-22T15:09:05Z",
        "updatedAt" : "2016-12-22T10:40:34Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      },
      {
        "id" : "9ce34033-c184-4621-bd63-c13c9400e491",
        "parentId" : "3b93b4b2-c4fa-4f05-9b52-12f13d62c5e5",
        "authorId" : "4c30e665-5e6c-4a02-81a0-563b610a6d75",
        "body" : "nack (it _is_ an apparmor profile for **a** container in this pod; if you really wanted to get definite, it is \"apparmor profile for **the** container in this pod **by the given container name**\" but IMO that's unnecessary)",
        "createdAt" : "2016-11-22T15:12:58Z",
        "updatedAt" : "2016-12-22T10:40:34Z",
        "lastEditedBy" : "4c30e665-5e6c-4a02-81a0-563b610a6d75",
        "tags" : [
        ]
      }
    ],
    "commit" : "5d982b4a0279d6afdeaaf470eb53b31d034a549c",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +257,261 @@    //\n    //    key: container.apparmor.security.beta.kubernetes.io/<container_name>\n    //    description: apparmor profile for a container in this pod.\n    //    value:\n    //      * runtime/default: equivalent to not specifying a profile."
  },
  {
    "id" : "fb022ddc-888a-4603-8e05-4072ccde7b22",
    "prId" : 35008,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/35008#pullrequestreview-5147229",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d98286ba-847e-4e44-8079-5617831767a4",
        "parentId" : null,
        "authorId" : "2fa5a4c6-e0a7-4dbe-a80e-7770a5dc92a1",
        "body" : "Should these messages include both `podsandbox_id` and `container_id`? I don't expect that `container_id` has to be globally unique.\n",
        "createdAt" : "2016-10-20T18:41:57Z",
        "updatedAt" : "2016-10-20T21:54:24Z",
        "lastEditedBy" : "2fa5a4c6-e0a7-4dbe-a80e-7770a5dc92a1",
        "tags" : [
        ]
      },
      {
        "id" : "616d3610-b83f-4008-b5c7-fe21da775103",
        "parentId" : "d98286ba-847e-4e44-8079-5617831767a4",
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "I agree that this may not be true in the future, but today we already assume this is true in the rest of the api (e.g., `StopContainer`, `RemoveContainer`) and the kubelet code. \n",
        "createdAt" : "2016-10-20T19:01:47Z",
        "updatedAt" : "2016-10-20T21:54:24Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "f36ab91b-6a34-4c23-b719-0faafe2173a0",
        "parentId" : "d98286ba-847e-4e44-8079-5617831767a4",
        "authorId" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "body" : "Ack. I was following the example of our other methods, so we can change these new methods too if we need to change them all.\n",
        "createdAt" : "2016-10-20T20:01:41Z",
        "updatedAt" : "2016-10-20T21:54:24Z",
        "lastEditedBy" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "tags" : [
        ]
      }
    ],
    "commit" : "c29ec1d02a7c5b4726fd81ac469c88bfa8811cb6",
    "line" : null,
    "diffHunk" : "@@ -1,1 +602,606 @@}\n\nmessage ExecSyncRequest {\n    // The id of the container\n    optional string container_id = 1;"
  },
  {
    "id" : "87dce9e0-7afe-4c06-9e63-a3e817d6f34c",
    "prId" : 34811,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/34811#pullrequestreview-5093412",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8bbb08a5-45a8-4917-afc5-c8dfc74b17f3",
        "parentId" : null,
        "authorId" : "5328b1c0-0dbd-4fd8-869d-e914880959c2",
        "body" : "Should add a sentence about precedence here as well. \n",
        "createdAt" : "2016-10-19T16:36:13Z",
        "updatedAt" : "2016-11-07T03:41:32Z",
        "lastEditedBy" : "5328b1c0-0dbd-4fd8-869d-e914880959c2",
        "tags" : [
        ]
      },
      {
        "id" : "2e5c8ad5-368b-4b72-9acd-86a5cebadba5",
        "parentId" : "8bbb08a5-45a8-4917-afc5-c8dfc74b17f3",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "ack. thanks.\n",
        "createdAt" : "2016-10-20T15:22:39Z",
        "updatedAt" : "2016-11-07T03:41:32Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      }
    ],
    "commit" : "f8e5f81fedd5243b9d7f690a9c0738794db15899",
    "line" : null,
    "diffHunk" : "@@ -1,1 +158,162 @@    // This will be used only if the PodSandbox uses namespace for isolation.\n    optional NamespaceOption namespace_options = 1;\n    // Optional SELinux context to be applied.\n    optional SELinuxOption selinux_options = 2;\n    // The UID to run the entrypoint of the sandbox process."
  },
  {
    "id" : "6132c121-1cd7-4afd-9dd8-0214def201a4",
    "prId" : 34811,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/34811#pullrequestreview-5094121",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ef1df51d-cd1e-4884-8193-c416d1710393",
        "parentId" : null,
        "authorId" : "5328b1c0-0dbd-4fd8-869d-e914880959c2",
        "body" : "Add a sentence about precedence here.\n",
        "createdAt" : "2016-10-19T16:40:06Z",
        "updatedAt" : "2016-11-07T03:41:32Z",
        "lastEditedBy" : "5328b1c0-0dbd-4fd8-869d-e914880959c2",
        "tags" : [
        ]
      },
      {
        "id" : "b9e146c3-cf5c-440b-ad1e-84dc7b4cdd3d",
        "parentId" : "ef1df51d-cd1e-4884-8193-c416d1710393",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "ack\n",
        "createdAt" : "2016-10-20T15:25:42Z",
        "updatedAt" : "2016-11-07T03:41:32Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      }
    ],
    "commit" : "f8e5f81fedd5243b9d7f690a9c0738794db15899",
    "line" : null,
    "diffHunk" : "@@ -1,1 +438,442 @@    // This will be used only if the container uses namespace for isolation.\n    optional NamespaceOption namespace_options = 3;\n    // Optional SELinux context to be applied.\n    optional SELinuxOption selinux_options = 4;\n    // The UID to run the the container process as."
  },
  {
    "id" : "8364d3b6-7059-4aef-b84e-fd8ba2b2300f",
    "prId" : 34811,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/34811#pullrequestreview-7343594",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "507d879f-70be-4cac-97db-db2fad099f5d",
        "parentId" : null,
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "@euank @yifan-gu are you ok with this or do you prefer runtime itself checks the `run_as_non_root` option? \n\nBackground: In the initial version, kubelet set the `run_as_non_root` field in the security context and pass it to the runtime (via CRI). Runtime checks the (docker) image and verify that the user is not set to root. This assumes that the `RuntimeService` is aware of the images and can perform checks. Since we may want to decouple `ImageService` and `RuntimeService` in the future, I suggested move up this logic and let kubelet perform the check. This requires reporting the user name or ID as part of the image for kubelet to check. \n",
        "createdAt" : "2016-11-03T18:52:55Z",
        "updatedAt" : "2016-11-07T03:41:32Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "3a247a8a-0e91-462d-97a2-80fe017943a3",
        "parentId" : "507d879f-70be-4cac-97db-db2fad099f5d",
        "authorId" : "2fa5a4c6-e0a7-4dbe-a80e-7770a5dc92a1",
        "body" : "Yeah, we have that image info handy as well.\n\nI'm :+1: for kubelet doing that check.\n\nMy nit for this field is that `user` probably makes more sense since it can be either a name or uid, and the comment needs to clarify that dual-meaning as well.\n",
        "createdAt" : "2016-11-03T20:19:23Z",
        "updatedAt" : "2016-11-07T03:41:32Z",
        "lastEditedBy" : "2fa5a4c6-e0a7-4dbe-a80e-7770a5dc92a1",
        "tags" : [
        ]
      },
      {
        "id" : "b5c5f56c-4d44-4f34-897c-c713301af1b3",
        "parentId" : "507d879f-70be-4cac-97db-db2fad099f5d",
        "authorId" : "2fa5a4c6-e0a7-4dbe-a80e-7770a5dc92a1",
        "body" : "Actually, reading more it looks like this is strictly only UID and k8s just doesn't support `non_root_user` for images that have a non-numeric user (hey, another Dockerfile feature that's not fully supported :).\n\nlooks like my concern isn't valid.\n",
        "createdAt" : "2016-11-03T20:23:29Z",
        "updatedAt" : "2016-11-07T03:41:32Z",
        "lastEditedBy" : "2fa5a4c6-e0a7-4dbe-a80e-7770a5dc92a1",
        "tags" : [
        ]
      },
      {
        "id" : "9efc39db-3795-40a4-bf66-81c5a6bcff93",
        "parentId" : "507d879f-70be-4cac-97db-db2fad099f5d",
        "authorId" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "body" : "@euank\n\n> Actually, reading more it looks like this is strictly only UID and k8s just doesn't support non_root_user for images that have a non-numeric user (hey, another Dockerfile feature that's not fully supported :).\n\nIIRC the reason it doesn't support non-numeric users is that it is not trivial to get at an image's /etc/passwd without actually creating a container.\n\n@yujuhong I support Kubelet implementing the `run_as_non_root` functionality and keeping it out of CRI.\n",
        "createdAt" : "2016-11-06T22:55:59Z",
        "updatedAt" : "2016-11-07T03:41:32Z",
        "lastEditedBy" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "tags" : [
        ]
      }
    ],
    "commit" : "f8e5f81fedd5243b9d7f690a9c0738794db15899",
    "line" : 131,
    "diffHunk" : "@@ -1,1 +760,764 @@    optional uint64 size = 4;\n    // The uid that will run the command(s).\n    optional int64 uid = 5;\n}\n"
  },
  {
    "id" : "31d956b9-e73b-4f08-9c79-40df4ff9feb3",
    "prId" : 34276,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/34276#pullrequestreview-3328979",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5a6972c7-abe5-4106-ad9a-daa0ff0b331a",
        "parentId" : null,
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "Is this `NetworkConfig` or a more generic `RuntimeConfig`? i think `PushRuntimeConfig` should be a general purpose call that can be used to update a single config object (not restricted to network).\n",
        "createdAt" : "2016-10-07T16:01:58Z",
        "updatedAt" : "2016-10-13T05:35:04Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "480bcb97600fa42c9a237adb77f7f4350d40d84a",
    "line" : null,
    "diffHunk" : "@@ -1,1 +686,690 @@}\n\nmessage RuntimeConfig {\n    optional NetworkConfig network_config = 1;\n}"
  },
  {
    "id" : "19b34bfa-d15c-4c31-9970-7b1689ed349c",
    "prId" : 29026,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d8a4e314-e7a1-4299-8a0b-12a3e6aa2a7f",
        "parentId" : null,
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "nit: Given that this is `LinuxContainerConfig`, can this be just `User`?\n",
        "createdAt" : "2016-07-19T00:31:44Z",
        "updatedAt" : "2016-07-19T00:31:44Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      },
      {
        "id" : "5f28bcac-cb54-4131-b0b4-96f8e68cb4e3",
        "parentId" : "d8a4e314-e7a1-4299-8a0b-12a3e6aa2a7f",
        "authorId" : "79676760-e10b-4a9f-aaf8-ec1c2b8e0ec3",
        "body" : "@vishh the member is called `user`,  `LinuxUser` is the type defined outside `LinuxContainerConfig` so I'm not sure we want that as just `User` (as said we may have other platform dependant user struct, like `WindowsUser`). I'll change the definition if you really want to though. \n",
        "createdAt" : "2016-07-19T00:36:55Z",
        "updatedAt" : "2016-07-19T13:25:52Z",
        "lastEditedBy" : "79676760-e10b-4a9f-aaf8-ec1c2b8e0ec3",
        "tags" : [
        ]
      },
      {
        "id" : "7f1f9810-f59c-4259-843f-f0589d3873f0",
        "parentId" : "d8a4e314-e7a1-4299-8a0b-12a3e6aa2a7f",
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "Ohh. My bad. LGTM\n",
        "createdAt" : "2016-07-19T20:29:16Z",
        "updatedAt" : "2016-07-19T20:29:16Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      },
      {
        "id" : "2555eb6c-748c-4454-ac7e-1a9965b2a948",
        "parentId" : "d8a4e314-e7a1-4299-8a0b-12a3e6aa2a7f",
        "authorId" : "79676760-e10b-4a9f-aaf8-ec1c2b8e0ec3",
        "body" : "ha, now that I think about this I had the same thought reading this code (too much Golang..)\n",
        "createdAt" : "2016-07-19T20:32:14Z",
        "updatedAt" : "2016-07-19T20:32:24Z",
        "lastEditedBy" : "79676760-e10b-4a9f-aaf8-ec1c2b8e0ec3",
        "tags" : [
        ]
      }
    ],
    "commit" : "5faa9b1283c807e9af07a7cc119d5c1a30fec31c",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +371,375 @@    optional SELinuxOption selinux_options = 3;\n    // User contains the user for the container process.\n    optional LinuxUser user = 4;\n}\n"
  },
  {
    "id" : "30bb93a0-5961-4fdc-a691-5b08a381322c",
    "prId" : 17048,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bd7a95f8-83bc-487a-95c7-19aee6766ff7",
        "parentId" : null,
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "Why proto2 and not proto3?\ngrpc recommends using proto3 in http://www.grpc.io/docs/\n",
        "createdAt" : "2016-06-15T23:47:10Z",
        "updatedAt" : "2016-07-12T01:17:34Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "c0d3723c-6b1a-4015-84f9-bb7bd6a9b44a",
        "parentId" : "bd7a95f8-83bc-487a-95c7-19aee6766ff7",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "To keep consistent with other proto definitions in kubernetes, this PR chooses proto2 instead of proto3:\n- Kubernetes already have a lot of proto definitions, they are all based on proto2\n- Kubernetes use protoc-gen-gogo for protobuf generation, but proto3 is not fully supported now, see https://github.com/gogo/protobuf/blob/master/Readme.md#proto3\n",
        "createdAt" : "2016-06-16T00:20:40Z",
        "updatedAt" : "2016-07-12T01:17:34Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      },
      {
        "id" : "45cc3c75-8e0a-47fd-96ff-805220004baf",
        "parentId" : "bd7a95f8-83bc-487a-95c7-19aee6766ff7",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "Just removed default version from api.proto (proto3 doesn't support default value) and document the version controlling in the proposal. After that, `protoc-gen-gogo` is worked for proto3 as this proposal doesn't contain `any` and `json` filed.\n\n@yujuhong @mtaufen Should we switch to proto3, or keep it as is for consistency with other kubernetes apis?\n",
        "createdAt" : "2016-06-16T03:03:18Z",
        "updatedAt" : "2016-07-12T01:17:34Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      },
      {
        "id" : "6ffd259b-7e10-4753-ac36-5fdee2348d06",
        "parentId" : "bd7a95f8-83bc-487a-95c7-19aee6766ff7",
        "authorId" : "227eb550-8b08-4420-9a78-279f840bd8de",
        "body" : "Some concerns when switching from proto2 to proto3 is that proto3 removes `optional` `required` keywords. And everything becomes `optional`.\n\nBut this PR seems to have all optional fields, so it's OK I think.\n",
        "createdAt" : "2016-06-18T00:49:19Z",
        "updatedAt" : "2016-07-12T01:17:34Z",
        "lastEditedBy" : "227eb550-8b08-4420-9a78-279f840bd8de",
        "tags" : [
        ]
      },
      {
        "id" : "1e248cc1-39ae-43dd-a1c7-4db83695b21c",
        "parentId" : "bd7a95f8-83bc-487a-95c7-19aee6766ff7",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "@yifan-gu Yes, there are no `optional` keyword in proto3. If we want to switch proto2 to proto3, we should also remove all `optional` keyword in `api.proto`.\n",
        "createdAt" : "2016-06-18T12:11:21Z",
        "updatedAt" : "2016-07-12T01:17:34Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      },
      {
        "id" : "10164d6c-30ee-4f55-8a75-dbd934d43946",
        "parentId" : "bd7a95f8-83bc-487a-95c7-19aee6766ff7",
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "As long as there are no significant issue for upgrading to proto3, I am fine with proto2 :)\nThanks for checking!\n",
        "createdAt" : "2016-06-21T00:02:45Z",
        "updatedAt" : "2016-07-12T01:17:34Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "022082f4-3e63-4b0c-ad04-545c83a9418f",
        "parentId" : "bd7a95f8-83bc-487a-95c7-19aee6766ff7",
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "Let's not use `default` values and `required` fields, unless we really really have to.\n",
        "createdAt" : "2016-06-29T00:23:54Z",
        "updatedAt" : "2016-07-12T01:17:34Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      },
      {
        "id" : "434425c5-3df0-4ad0-94ed-21a2dd3bd612",
        "parentId" : "bd7a95f8-83bc-487a-95c7-19aee6766ff7",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "@vishh Already removed all `default` values and replaced `required` by `optional`\n",
        "createdAt" : "2016-06-29T01:00:05Z",
        "updatedAt" : "2016-07-12T01:17:34Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      }
    ],
    "commit" : "e12044518ec395b4d20a43eb546adf9ddf0525bb",
    "line" : 2,
    "diffHunk" : "@@ -1,1 +0,4 @@// api.pb.go could be generate by hack/update-generate-runtime.sh\nsyntax = 'proto2';\n\npackage runtime;"
  },
  {
    "id" : "4f37f5e7-03b2-4a7e-8954-a30ccecfbc2c",
    "prId" : 17048,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fc2c87a7-996d-45f9-890d-97c32564b1e0",
        "parentId" : null,
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "Hmm...this seems like an implementation detail that runtime can derive by looking at SELinuxOptions. WDYT?\n",
        "createdAt" : "2016-06-16T00:19:32Z",
        "updatedAt" : "2016-07-12T01:17:34Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "2bd9ba35-9390-405e-b272-3caf8892e164",
        "parentId" : "fc2c87a7-996d-45f9-890d-97c32564b1e0",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "Not really, see https://github.com/kubernetes/kubernetes/blob/master/pkg/kubelet/kubelet.go#L1271\n",
        "createdAt" : "2016-06-16T02:15:45Z",
        "updatedAt" : "2016-07-12T01:17:34Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      }
    ],
    "commit" : "e12044518ec395b4d20a43eb546adf9ddf0525bb",
    "line" : null,
    "diffHunk" : "@@ -1,1 +107,111 @@    optional bool readonly = 4;\n    // If set, the mount needs SELinux relabeling\n    optional bool selinux_relabel = 5;\n}\n"
  },
  {
    "id" : "5c45bf99-9546-4291-b0f1-c1598fceca50",
    "prId" : 17048,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fde83e3e-80b6-403a-bd1d-7cdbf3db1916",
        "parentId" : null,
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "suggestions: give an example of what `image` can be.\n",
        "createdAt" : "2016-06-16T00:42:03Z",
        "updatedAt" : "2016-07-12T01:17:34Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "a5f0d7f0-a226-457d-9512-2227321d3273",
        "parentId" : "fde83e3e-80b6-403a-bd1d-7cdbf3db1916",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "will do\n",
        "createdAt" : "2016-06-16T02:16:18Z",
        "updatedAt" : "2016-07-12T01:17:34Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      }
    ],
    "commit" : "e12044518ec395b4d20a43eb546adf9ddf0525bb",
    "line" : null,
    "diffHunk" : "@@ -1,1 +318,322 @@// value of a Container's Image field (e.g. imageName, imageName:tag, or \n// imageName:digest), but in the future it will include more detailed \n// information about the different image types.\nmessage ImageSpec {\n    optional string image = 1;"
  },
  {
    "id" : "d562abd1-a294-4b6e-a9aa-24128e85fc3d",
    "prId" : 17048,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fd0d8d3c-3f46-4920-9001-1c087651465d",
        "parentId" : null,
        "authorId" : "ad5a6fa4-f2e7-44c8-969f-5aef2d8704df",
        "body" : "Is there a reason why `CreateContainerRequest` needs to know the PodSandbox it is related to?\nI thought kubelet would manage the relationship between PodSandbox and its init/app containers, and the container runtime should be unaware of this relationship.\n",
        "createdAt" : "2016-06-27T15:37:28Z",
        "updatedAt" : "2016-07-12T01:17:34Z",
        "lastEditedBy" : "ad5a6fa4-f2e7-44c8-969f-5aef2d8704df",
        "tags" : [
        ]
      },
      {
        "id" : "dfb5c143-2f6a-4223-9a53-89be53c655d9",
        "parentId" : "fd0d8d3c-3f46-4920-9001-1c087651465d",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "Refer https://github.com/kubernetes/kubernetes/pull/25899/files#diff-97bf554db5213ebc84fc4b2224011652R135\n\nFor container creating, it may require some config from the sandbox, e.g. cgroups and namespace options.\n",
        "createdAt" : "2016-06-27T23:41:47Z",
        "updatedAt" : "2016-07-12T01:17:34Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      },
      {
        "id" : "a4ff7254-fdb3-44cb-9ff0-bbb58568e870",
        "parentId" : "fd0d8d3c-3f46-4920-9001-1c087651465d",
        "authorId" : "227eb550-8b08-4420-9a78-279f840bd8de",
        "body" : "@feiskyer Thanks for pointing out. Maybe add a short explanation on this one?\n",
        "createdAt" : "2016-06-29T00:12:52Z",
        "updatedAt" : "2016-07-12T01:17:34Z",
        "lastEditedBy" : "227eb550-8b08-4420-9a78-279f840bd8de",
        "tags" : [
        ]
      },
      {
        "id" : "8670dffb-6e09-49e0-90a7-a23708c3bbeb",
        "parentId" : "fd0d8d3c-3f46-4920-9001-1c087651465d",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "@yifan-gu see above\n",
        "createdAt" : "2016-06-29T00:23:56Z",
        "updatedAt" : "2016-07-12T01:17:34Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      },
      {
        "id" : "16f5a4a6-65be-4e9b-9d56-a9083d82451a",
        "parentId" : "fd0d8d3c-3f46-4920-9001-1c087651465d",
        "authorId" : "227eb550-8b08-4420-9a78-279f840bd8de",
        "body" : "@feiskyer I meant can we put a comment here to explain that we need the pod sandbox context.\nFeels like the pod context can be retrieved by the runtime itself with the given pod sandbox ID. But I am fine we put a context here.\n",
        "createdAt" : "2016-06-29T18:19:11Z",
        "updatedAt" : "2016-07-12T01:17:34Z",
        "lastEditedBy" : "227eb550-8b08-4420-9a78-279f840bd8de",
        "tags" : [
        ]
      },
      {
        "id" : "482e6105-820e-4343-9ffb-6532c138caf7",
        "parentId" : "fd0d8d3c-3f46-4920-9001-1c087651465d",
        "authorId" : "ad5a6fa4-f2e7-44c8-969f-5aef2d8704df",
        "body" : "@feiskyer , it would help to be more specific about what exact podsandbox configs are really needed by `CreateContainer`, and whether all these configs should be returned by `PodSandboxStatus`.\nFor now, `PodSandboxStatusResponse` includes namespaces info, but does not include the cgroups info.\n",
        "createdAt" : "2016-06-29T18:52:59Z",
        "updatedAt" : "2016-07-12T01:17:34Z",
        "lastEditedBy" : "ad5a6fa4-f2e7-44c8-969f-5aef2d8704df",
        "tags" : [
        ]
      },
      {
        "id" : "d69e13f4-6f52-495c-bb85-ab67e4c45050",
        "parentId" : "fd0d8d3c-3f46-4920-9001-1c087651465d",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "@yifan-gu @hmeng-19 PodSandboxConfig is not enforced for every runtime, e.g. every runtime must use it. Runtime decides itself.\n\n@hmeng-19 I think the PodSandboxStatusResponose is clear enough for what should be returned. \n",
        "createdAt" : "2016-06-30T05:05:38Z",
        "updatedAt" : "2016-07-12T01:17:34Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      },
      {
        "id" : "2869d843-dc4d-48d1-990b-9182e8968298",
        "parentId" : "fd0d8d3c-3f46-4920-9001-1c087651465d",
        "authorId" : "ad5a6fa4-f2e7-44c8-969f-5aef2d8704df",
        "body" : "@feiskyer , thanks for the explanation.\nI did not suggest enlarge the `PodSandboxStatusResponose`. \nYifan-gu suggested that the pod context can be retrieved by the runtime, I was trying to show that the current `PodSandboxStatusResponose` may not include all the pod configs needed by the `CreateContainer`.\n",
        "createdAt" : "2016-06-30T13:57:26Z",
        "updatedAt" : "2016-07-12T01:17:34Z",
        "lastEditedBy" : "ad5a6fa4-f2e7-44c8-969f-5aef2d8704df",
        "tags" : [
        ]
      }
    ],
    "commit" : "e12044518ec395b4d20a43eb546adf9ddf0525bb",
    "line" : 436,
    "diffHunk" : "@@ -1,1 +434,438 @@    // The config of the PodSandbox\n    optional PodSandboxConfig sandbox_config = 3;\n}\n\nmessage CreateContainerResponse {"
  },
  {
    "id" : "0ff63569-c9d3-4958-8928-240a4c76bdb5",
    "prId" : 17048,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3158fa22-9a7a-4938-a233-e681f94fb6c8",
        "parentId" : null,
        "authorId" : "227eb550-8b08-4420-9a78-279f840bd8de",
        "body" : "Is this talking about the version of grpc?\n",
        "createdAt" : "2016-06-28T20:53:56Z",
        "updatedAt" : "2016-07-12T01:17:34Z",
        "lastEditedBy" : "227eb550-8b08-4420-9a78-279f840bd8de",
        "tags" : [
        ]
      },
      {
        "id" : "3e1b2e23-ab79-4720-b021-e13b022cbbf4",
        "parentId" : "3158fa22-9a7a-4938-a233-e681f94fb6c8",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "@yifan-gu Not the grpc version, its the runtime api version. grpc version is managed in godeps/vendor.\n",
        "createdAt" : "2016-06-28T23:22:59Z",
        "updatedAt" : "2016-07-12T01:17:34Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      },
      {
        "id" : "fb57daa3-dfd3-4fd2-82f1-818e8f3d1635",
        "parentId" : "3158fa22-9a7a-4938-a233-e681f94fb6c8",
        "authorId" : "227eb550-8b08-4420-9a78-279f840bd8de",
        "body" : "@feiskyer How is this different from `optional string runtime_api_version = 4;` ?\n",
        "createdAt" : "2016-06-29T00:24:02Z",
        "updatedAt" : "2016-07-12T01:17:34Z",
        "lastEditedBy" : "227eb550-8b08-4420-9a78-279f840bd8de",
        "tags" : [
        ]
      },
      {
        "id" : "23d1f2ef-9b8a-4d34-931b-d65b2c73eb2f",
        "parentId" : "3158fa22-9a7a-4938-a233-e681f94fb6c8",
        "authorId" : "227eb550-8b08-4420-9a78-279f840bd8de",
        "body" : "@feiskyer OK, I kinda understand now, so the `optional string runtime_api_version = 4;` is something like docker API version, and this field is the container runtime api version, right?\n",
        "createdAt" : "2016-06-29T00:25:34Z",
        "updatedAt" : "2016-07-12T01:17:34Z",
        "lastEditedBy" : "227eb550-8b08-4420-9a78-279f840bd8de",
        "tags" : [
        ]
      },
      {
        "id" : "8debc015-1149-43a3-8d70-029d70d03d8b",
        "parentId" : "3158fa22-9a7a-4938-a233-e681f94fb6c8",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "@yifan-gu Right. \n",
        "createdAt" : "2016-06-29T01:03:16Z",
        "updatedAt" : "2016-07-12T01:17:34Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      },
      {
        "id" : "6618960d-7715-47bb-afcd-9dc3c2652e2d",
        "parentId" : "3158fa22-9a7a-4938-a233-e681f94fb6c8",
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "@feiskyer do you mind adding more comments to clarify this? Thanks\n",
        "createdAt" : "2016-07-06T21:55:13Z",
        "updatedAt" : "2016-07-12T01:17:34Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "68727c63-b9ec-478c-99d7-f00728d98690",
        "parentId" : "3158fa22-9a7a-4938-a233-e681f94fb6c8",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "Already changed this to '_The version of the kubelet runtime API_.' in\nlatest commit.\n\n2016-07-07 5:56 GMT+08:00 Yu-Ju Hong notifications@github.com:\n\n> In pkg/kubelet/api/v1alpha1/runtime/api.proto\n> https://github.com/kubernetes/kubernetes/pull/17048#discussion_r69818894\n> :\n> \n> > -    // ImageStatus returns the status of the image.\n> > -    rpc ImageStatus(ImageStatusRequest) returns (ImageStatusResponse) {}\n> > -    // PullImage pulls a image with authentication config.\n> > -    rpc PullImage(PullImageRequest) returns (PullImageResponse) {}\n> > -    // RemoveImage removes the image.\n> > -    rpc RemoveImage(RemoveImageRequest) returns (RemoveImageResponse) {}\n> >   +}\n> >   +\n> >   +message VersionRequest {\n> > -    // The version of the gRPC API\n> > -    optional string version = 1;\n> >   +}\n> >   +\n> >   +message VersionResponse {\n> > -    // The version of the gRPC API\n> > -    optional string version = 1;\n> \n> @feiskyer https://github.com/feiskyer do you mind adding more comments\n> to clarify this? Thanks\n> \n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> https://github.com/kubernetes/kubernetes/pull/17048/files/0978833eb5a548fc32199489e9c62686a1aae035#r69818894,\n> or mute the thread\n> https://github.com/notifications/unsubscribe/AApTHcDcr8ylNVIkI406SuiAVj23M-yUks5qTCRwgaJpZM4GfQ_B\n> .\n",
        "createdAt" : "2016-07-06T22:45:05Z",
        "updatedAt" : "2016-07-12T01:17:34Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      }
    ],
    "commit" : "e12044518ec395b4d20a43eb546adf9ddf0525bb",
    "line" : null,
    "diffHunk" : "@@ -1,1 +60,64 @@message VersionResponse {\n    // The version of the kubelet runtime API.\n    optional string version = 1;\n    // The name of the container runtime.\n    optional string runtime_name = 2;"
  },
  {
    "id" : "911ddbf0-de24-4841-ba86-cc1b057fcc1c",
    "prId" : 17048,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "73e11276-d8b8-4b6e-8232-ba0df94d5036",
        "parentId" : null,
        "authorId" : "227eb550-8b08-4420-9a78-279f840bd8de",
        "body" : "How is different fields combined, e.g. if I specify both `name` and `id`, does the runtime return a pod that satisfies both or either? I suppose we the fields are combined with `AND`, right?\n",
        "createdAt" : "2016-06-28T22:01:53Z",
        "updatedAt" : "2016-07-12T01:17:34Z",
        "lastEditedBy" : "227eb550-8b08-4420-9a78-279f840bd8de",
        "tags" : [
        ]
      },
      {
        "id" : "4c7db047-d650-4882-ba97-95343e2af97e",
        "parentId" : "73e11276-d8b8-4b6e-8232-ba0df94d5036",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "@yifan-gu Right. They are combined with AND.\n",
        "createdAt" : "2016-06-28T23:23:33Z",
        "updatedAt" : "2016-07-12T01:17:34Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      },
      {
        "id" : "bc69d116-5088-4082-8ca4-d9670fa83701",
        "parentId" : "73e11276-d8b8-4b6e-8232-ba0df94d5036",
        "authorId" : "227eb550-8b08-4420-9a78-279f840bd8de",
        "body" : "@feiskyer Can we document this a little bit?\n",
        "createdAt" : "2016-06-29T00:23:16Z",
        "updatedAt" : "2016-07-12T01:17:34Z",
        "lastEditedBy" : "227eb550-8b08-4420-9a78-279f840bd8de",
        "tags" : [
        ]
      }
    ],
    "commit" : "e12044518ec395b4d20a43eb546adf9ddf0525bb",
    "line" : null,
    "diffHunk" : "@@ -1,1 +277,281 @@// PodSandboxFilter is used to filter a list of PodSandboxes.\n// All those fields are combined with 'AND'\nmessage PodSandboxFilter {\n    // Name of the sandbox.\n    optional string name = 1;"
  },
  {
    "id" : "a18df521-56fe-4cdf-b968-1b46e72b8186",
    "prId" : 17048,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bf9d777d-4bd8-4362-8775-6e5dc146c56e",
        "parentId" : null,
        "authorId" : "227eb550-8b08-4420-9a78-279f840bd8de",
        "body" : "Can we change `optional` to `repeated`? So that we can have multiple filters and combine them with `OR`. Although on top of my mind I don't have solid use cases for multiple filters right now.\n",
        "createdAt" : "2016-06-28T22:04:06Z",
        "updatedAt" : "2016-07-12T01:17:34Z",
        "lastEditedBy" : "227eb550-8b08-4420-9a78-279f840bd8de",
        "tags" : [
        ]
      },
      {
        "id" : "19596ccd-f8f8-4a35-b2ed-ab3af6214bf5",
        "parentId" : "bf9d777d-4bd8-4362-8775-6e5dc146c56e",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "@yifan-gu There are no those usecases now, one filter is already enough\n",
        "createdAt" : "2016-06-28T23:24:45Z",
        "updatedAt" : "2016-07-12T01:17:34Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      }
    ],
    "commit" : "e12044518ec395b4d20a43eb546adf9ddf0525bb",
    "line" : 294,
    "diffHunk" : "@@ -1,1 +292,296 @@message ListPodSandboxRequest {\n    // PodSandboxFilter to filter a list of PodSandboxes.\n    optional PodSandboxFilter filter = 1;\n}\n"
  },
  {
    "id" : "63f152af-ecec-4d07-bc21-4611fcc26ccb",
    "prId" : 17048,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d9c712ac-5a65-49e5-b370-2855fef8bd07",
        "parentId" : null,
        "authorId" : "227eb550-8b08-4420-9a78-279f840bd8de",
        "body" : "cc @euank For rkt, there is a state before \"created\" (aka \"prepared\"), called preparing, which rkt is preparing the fs for the container. Maybe we should not list those containers so that they don't get gc'd accidently.\nOr maybe we add \"CREATING\" state here?\n",
        "createdAt" : "2016-06-28T23:33:24Z",
        "updatedAt" : "2016-07-12T01:17:34Z",
        "lastEditedBy" : "227eb550-8b08-4420-9a78-279f840bd8de",
        "tags" : [
        ]
      },
      {
        "id" : "6dde77fa-6779-4ab6-be1d-2607df04560e",
        "parentId" : "d9c712ac-5a65-49e5-b370-2855fef8bd07",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "CC @yujuhong \n\n@yifan-gu Do we need to manage this creating state in kubelet? I think this state is rkt-specific, and could be managed inside rkt runtime.\n",
        "createdAt" : "2016-06-28T23:47:43Z",
        "updatedAt" : "2016-07-12T01:17:34Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      },
      {
        "id" : "9534fb1b-884e-41eb-8883-2361cbdb750a",
        "parentId" : "d9c712ac-5a65-49e5-b370-2855fef8bd07",
        "authorId" : "227eb550-8b08-4420-9a78-279f840bd8de",
        "body" : "@feiskyer OK with the plan.\n",
        "createdAt" : "2016-06-29T00:15:35Z",
        "updatedAt" : "2016-07-12T01:17:34Z",
        "lastEditedBy" : "227eb550-8b08-4420-9a78-279f840bd8de",
        "tags" : [
        ]
      }
    ],
    "commit" : "e12044518ec395b4d20a43eb546adf9ddf0525bb",
    "line" : 467,
    "diffHunk" : "@@ -1,1 +465,469 @@\nenum ContainerState {\n    CREATED = 0;\n    RUNNING = 1;\n    EXITED  = 2;"
  },
  {
    "id" : "a47b2554-fc55-47d8-bc77-3d54d7c6683e",
    "prId" : 17048,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "363c71a3-f3b6-41f9-9310-0b280a2fc7a1",
        "parentId" : null,
        "authorId" : "227eb550-8b08-4420-9a78-279f840bd8de",
        "body" : "Probably replace `ImageSpec` with `Image`, the former one only contains a string.\nOr just keep one of them?\n",
        "createdAt" : "2016-06-28T23:46:44Z",
        "updatedAt" : "2016-07-12T01:17:34Z",
        "lastEditedBy" : "227eb550-8b08-4420-9a78-279f840bd8de",
        "tags" : [
        ]
      },
      {
        "id" : "e4de1304-986c-47fa-b296-7e3953228a87",
        "parentId" : "363c71a3-f3b6-41f9-9310-0b280a2fc7a1",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "@yifan-gu ImageSpec is used for extensibility. we want to support more image formats in the future.\n",
        "createdAt" : "2016-06-28T23:50:05Z",
        "updatedAt" : "2016-07-12T01:17:34Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      },
      {
        "id" : "d6495d7a-ad0b-4959-9519-f63b3e973153",
        "parentId" : "363c71a3-f3b6-41f9-9310-0b280a2fc7a1",
        "authorId" : "227eb550-8b08-4420-9a78-279f840bd8de",
        "body" : "@feiskyer Sorry, misread ImageStatusRequest to be ImageStatusReponse.\n",
        "createdAt" : "2016-06-29T00:11:45Z",
        "updatedAt" : "2016-07-12T01:17:34Z",
        "lastEditedBy" : "227eb550-8b08-4420-9a78-279f840bd8de",
        "tags" : [
        ]
      }
    ],
    "commit" : "e12044518ec395b4d20a43eb546adf9ddf0525bb",
    "line" : 606,
    "diffHunk" : "@@ -1,1 +604,608 @@message ImageStatusRequest {\n    // The spec of the image\n    optional ImageSpec image = 1;\n}\n"
  },
  {
    "id" : "e0a8c1e5-f1d9-4935-a567-31a89b07490a",
    "prId" : 17048,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d5f86bd6-1398-426b-8560-5af1d31aed4f",
        "parentId" : null,
        "authorId" : "227eb550-8b08-4420-9a78-279f840bd8de",
        "body" : "Shouldn't we return some sort of image id here? \n",
        "createdAt" : "2016-06-28T23:48:54Z",
        "updatedAt" : "2016-07-12T01:17:34Z",
        "lastEditedBy" : "227eb550-8b08-4420-9a78-279f840bd8de",
        "tags" : [
        ]
      },
      {
        "id" : "857c05d0-d46b-45eb-aabb-947c1dcc7026",
        "parentId" : "d5f86bd6-1398-426b-8560-5af1d31aed4f",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "@yifan-gu Kubelet doesn't require the image id. And there is no direct image id returned by docker and hyper (not sure rkt) image pull API.\n",
        "createdAt" : "2016-06-28T23:56:08Z",
        "updatedAt" : "2016-07-12T01:17:34Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      },
      {
        "id" : "1bc18ab2-d1b5-4f07-9289-efd5f620a1b8",
        "parentId" : "d5f86bd6-1398-426b-8560-5af1d31aed4f",
        "authorId" : "227eb550-8b08-4420-9a78-279f840bd8de",
        "body" : "@feiskyer I guess I have a broader question here: Suppose we use some neutral pluggable image puller (e.g. skopeo) that discovers and downloads the image into disk. Then how the the runtime knows where to find the on disk image if it is not given a reference (such as image id, or file path)? Or do I miss anything?\n",
        "createdAt" : "2016-06-29T00:37:31Z",
        "updatedAt" : "2016-07-12T01:17:34Z",
        "lastEditedBy" : "227eb550-8b08-4420-9a78-279f840bd8de",
        "tags" : [
        ]
      },
      {
        "id" : "c2852697-f099-4dd2-a9b1-722e138138d4",
        "parentId" : "d5f86bd6-1398-426b-8560-5af1d31aed4f",
        "authorId" : "227eb550-8b08-4420-9a78-279f840bd8de",
        "body" : "cc @yujuhong @dchen1107 ^\n",
        "createdAt" : "2016-06-29T00:37:44Z",
        "updatedAt" : "2016-07-12T01:17:34Z",
        "lastEditedBy" : "227eb550-8b08-4420-9a78-279f840bd8de",
        "tags" : [
        ]
      },
      {
        "id" : "55868c1d-6f4f-40a2-8f79-d77cefad3ac6",
        "parentId" : "d5f86bd6-1398-426b-8560-5af1d31aed4f",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "@yifan-gu I don't this proposal covers your concern. Seperating the image management is more complicated than just an API, e.g.:\n- How to store the image metadata\n- How to store the image data, do we need some graph drivers same as docker?\n- How could container runtime find those image and create its own rootfs\n- Bandwidth and io throttling\n- Disk usage throttling\n- And ...\n\nWe could open another issue to discuss this separating.  And the runtime api could be updated in the future if needed.\n",
        "createdAt" : "2016-06-29T01:12:22Z",
        "updatedAt" : "2016-07-12T01:17:34Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      }
    ],
    "commit" : "e12044518ec395b4d20a43eb546adf9ddf0525bb",
    "line" : null,
    "diffHunk" : "@@ -1,1 +634,638 @@}\n\nmessage PullImageResponse {}\n\nmessage RemoveImageRequest {"
  },
  {
    "id" : "976db522-8049-49e6-906d-4df16f189730",
    "prId" : 17048,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "178a2945-27ef-4872-ba64-004f8ba1af5f",
        "parentId" : null,
        "authorId" : "227eb550-8b08-4420-9a78-279f840bd8de",
        "body" : "can you do ipv4 and ipv6?\n",
        "createdAt" : "2016-06-28T23:59:59Z",
        "updatedAt" : "2016-07-12T01:17:34Z",
        "lastEditedBy" : "227eb550-8b08-4420-9a78-279f840bd8de",
        "tags" : [
        ]
      },
      {
        "id" : "576d34ae-7a19-4c81-990b-6c43ba4abe35",
        "parentId" : "178a2945-27ef-4872-ba64-004f8ba1af5f",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "@yifan-gu Only ipv4 now. But we could add ipv6 support in the future.\n",
        "createdAt" : "2016-06-29T00:06:09Z",
        "updatedAt" : "2016-07-12T01:17:34Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      },
      {
        "id" : "be132549-2666-41c4-9837-3b9d0cb208ac",
        "parentId" : "178a2945-27ef-4872-ba64-004f8ba1af5f",
        "authorId" : "227eb550-8b08-4420-9a78-279f840bd8de",
        "body" : "@feiskyer how about renaming it to ipv4 then?\n",
        "createdAt" : "2016-06-29T19:42:12Z",
        "updatedAt" : "2016-07-12T01:17:34Z",
        "lastEditedBy" : "227eb550-8b08-4420-9a78-279f840bd8de",
        "tags" : [
        ]
      },
      {
        "id" : "76fa227a-7a6e-4efe-8773-1705d3b3827a",
        "parentId" : "178a2945-27ef-4872-ba64-004f8ba1af5f",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "@yifan-gu Please open another issue to discuss supporting more network feautures, e.g. multiple interfaces and ipv6. \n",
        "createdAt" : "2016-06-30T05:09:48Z",
        "updatedAt" : "2016-07-12T01:17:34Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      }
    ],
    "commit" : "e12044518ec395b4d20a43eb546adf9ddf0525bb",
    "line" : 229,
    "diffHunk" : "@@ -1,1 +227,231 @@message PodSandboxNetworkStatus {\n    // The IP address of the PodSandbox\n    optional string ip = 1;\n}\n"
  }
]