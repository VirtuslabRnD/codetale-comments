[
  {
    "id" : "030c66d3-7ea7-4965-a548-0d4f20ff2ba4",
    "prId" : 99607,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/99607#pullrequestreview-601741841",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4781fb5f-5193-4f0c-8559-074eeed4077e",
        "parentId" : null,
        "authorId" : "5fcdc717-54e1-453d-b59d-1ebc30e5755b",
        "body" : "why not use  klog.KRef instead?",
        "createdAt" : "2021-03-02T06:34:29Z",
        "updatedAt" : "2021-03-02T06:36:17Z",
        "lastEditedBy" : "5fcdc717-54e1-453d-b59d-1ebc30e5755b",
        "tags" : [
        ]
      },
      {
        "id" : "ee1f0d71-ea88-406d-bf0c-c211b0538654",
        "parentId" : "4781fb5f-5193-4f0c-8559-074eeed4077e",
        "authorId" : "5abd5c1b-d5de-420e-8d8a-968d7db44020",
        "body" : "I didn't use klog.KRef because this log entry is emitted when kubelet decides that the container is not a part of any pod, but for some reason has one of the two labels",
        "createdAt" : "2021-03-02T12:04:50Z",
        "updatedAt" : "2021-03-02T12:04:50Z",
        "lastEditedBy" : "5abd5c1b-d5de-420e-8d8a-968d7db44020",
        "tags" : [
        ]
      }
    ],
    "commit" : "7097d4f8e21b7ced239b9475e4cd93d895e4877c",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +297,301 @@\t\tklog.InfoS(\n\t\t\t\"Expect container to have either both podName and podNamespace labels, or neither\",\n\t\t\t\"podNameLabel\", podName, \"podNamespaceLabel\", podNamespace)\n\t}\n\treturn managed"
  },
  {
    "id" : "4f241d65-fd3a-4110-b9c9-4d225c8b2741",
    "prId" : 97042,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/97042#pullrequestreview-551498614",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b73a52d8-822f-4f12-8d7b-ff31ce1351b4",
        "parentId" : null,
        "authorId" : "3eccedfc-5c53-4555-94cb-69f2b56e485c",
        "body" : "I worry about these two klog.Errorf's here... They probably need `continues` since logStats and etcHostsStats might be nil. Thoughts?",
        "createdAt" : "2020-12-07T22:32:35Z",
        "updatedAt" : "2020-12-07T22:32:41Z",
        "lastEditedBy" : "3eccedfc-5c53-4555-94cb-69f2b56e485c",
        "tags" : [
        ]
      },
      {
        "id" : "03712ec1-027f-4b3e-ae99-39615f23b002",
        "parentId" : "b73a52d8-822f-4f12-8d7b-ff31ce1351b4",
        "authorId" : "cebc811c-e565-44d5-bbb6-3b767a712327",
        "body" : "Both `logStats` and `etcHostsStats` are only passed to the helper function `calcEphemeralStorage()`. That function does a nil check before using, so I think we should be safe. I think it would be good to carry on in the function if these errors are encountered. My thinking is that if one part of the metric can't be computed, we still want to do the best that we can with the other parts.",
        "createdAt" : "2020-12-08T19:52:49Z",
        "updatedAt" : "2020-12-08T19:52:50Z",
        "lastEditedBy" : "cebc811c-e565-44d5-bbb6-3b767a712327",
        "tags" : [
        ]
      },
      {
        "id" : "032e1367-e091-4fc5-b0de-140f61844c7f",
        "parentId" : "b73a52d8-822f-4f12-8d7b-ff31ce1351b4",
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "I am fine with the present form.",
        "createdAt" : "2020-12-14T15:46:23Z",
        "updatedAt" : "2020-12-14T15:50:10Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      }
    ],
    "commit" : "29ff2fe528a6077e1363705a27961ac5644d8e9e",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +145,149 @@\t\tlogStats, err := p.hostStatsProvider.getPodLogStats(podStats.PodRef.Namespace, podStats.PodRef.Name, podUID, &rootFsInfo)\n\t\tif err != nil {\n\t\t\tklog.Errorf(\"Unable to fetch pod log stats: %v\", err)\n\t\t}\n\t\tetcHostsStats, err := p.hostStatsProvider.getPodEtcHostsStats(podUID, &rootFsInfo)"
  },
  {
    "id" : "27f18cf8-5893-4a0a-87f5-f2256c24d398",
    "prId" : 55969,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/55969#pullrequestreview-78525607",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e2e7562a-378b-4d3d-aad5-c3f230f5d692",
        "parentId" : null,
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "this is hacky, we should be able to not iterate over every container on the host.\r\n\r\nwhy cant we get the cgroup for a given pod and just do a direct map lookup?",
        "createdAt" : "2017-11-21T22:48:03Z",
        "updatedAt" : "2017-11-22T17:25:39Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      },
      {
        "id" : "b962657c-07c0-429f-86a1-7621949f9bf6",
        "parentId" : "e2e7562a-378b-4d3d-aad5-c3f230f5d692",
        "authorId" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "body" : "We looked into that approach, e.g., GetPodContainerName https://github.com/kubernetes/kubernetes/blob/master/pkg/kubelet/cm/pod_container_manager_linux.go#L95 can return the pod cgroup name, but it requires pod spec to figure out the qos of a pod. Here cadvisor does not have a pod object",
        "createdAt" : "2017-11-21T22:53:23Z",
        "updatedAt" : "2017-11-22T17:25:39Z",
        "lastEditedBy" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "tags" : [
        ]
      },
      {
        "id" : "d04d9023-0c7a-4a2b-b8c0-07e306a1c649",
        "parentId" : "e2e7562a-378b-4d3d-aad5-c3f230f5d692",
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "i guess this is similar to what we had to do here:\r\nhttps://github.com/kubernetes/kubernetes/blob/master/pkg/kubelet/cm/pod_container_manager_linux.go#L200\r\n\r\nin that code block we iterate over the literal cgroupfs, convert the full path to our internal canonical name, get the base path, and check for match.\r\n\r\nmaybe we can find a way to share that code into a common utility so that we can take this knowledge out of this method and keep it localized in cm package in a follow-on?",
        "createdAt" : "2017-11-22T16:27:06Z",
        "updatedAt" : "2017-11-22T17:25:39Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      },
      {
        "id" : "30a0533e-2483-42b3-a10c-eb34d7449f67",
        "parentId" : "e2e7562a-378b-4d3d-aad5-c3f230f5d692",
        "authorId" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "body" : "Yes, I will work on that as a follow up PR. Thanks!",
        "createdAt" : "2017-11-22T17:31:33Z",
        "updatedAt" : "2017-11-22T17:31:33Z",
        "lastEditedBy" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "tags" : [
        ]
      }
    ],
    "commit" : "a66ee2eb3f3cb63d7a1f7ca4fa4ecb0ce0c1c802",
    "line" : 48,
    "diffHunk" : "@@ -1,1 +255,259 @@// getcadvisorPodInfoFromPodUID returns a pod cgroup information by matching the podUID with its CgroupName identifier base name\nfunc getcadvisorPodInfoFromPodUID(podUID types.UID, infos map[string]cadvisorapiv2.ContainerInfo) *cadvisorapiv2.ContainerInfo {\n\tfor key, info := range infos {\n\t\tif cm.IsSystemdStyleName(key) {\n\t\t\tkey = cm.RevertFromSystemdToCgroupStyleName(key)"
  },
  {
    "id" : "cc6ea054-6140-41c1-8b1e-f401f501c043",
    "prId" : 55810,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/55810#pullrequestreview-78004147",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a5022b2e-c333-43ab-aa74-f6d71274acb6",
        "parentId" : null,
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "I feel like part of the following loop could also be included in this function.",
        "createdAt" : "2017-11-16T23:28:59Z",
        "updatedAt" : "2017-11-23T06:49:06Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      },
      {
        "id" : "9907767c-f21e-4c50-9428-be6c104826e2",
        "parentId" : "a5022b2e-c333-43ab-aa74-f6d71274acb6",
        "authorId" : "c0f153be-e421-41fb-ab49-be2badc19b1d",
        "body" : "I have grouped the common functionality into this. The one in loop will not be needed for cri stats collection. Hence",
        "createdAt" : "2017-11-21T05:34:04Z",
        "updatedAt" : "2017-11-23T06:49:06Z",
        "lastEditedBy" : "c0f153be-e421-41fb-ab49-be2badc19b1d",
        "tags" : [
        ]
      }
    ],
    "commit" : "e19f213027a4184fa87e525aaf58eac07b4c63e9",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +77,81 @@\t\treturn nil, fmt.Errorf(\"failed to get imageFs info: %v\", err)\n\t}\n\tinfos, err := getCadvisorContainerInfo(p.cadvisor)\n\tif err != nil {\n\t\treturn nil, fmt.Errorf(\"failed to get container info from cadvisor: %v\", err)"
  },
  {
    "id" : "31eb96d7-0e53-46aa-ac52-fade37a8f380",
    "prId" : 55447,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/55447#pullrequestreview-76575758",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4c3292c9-545f-4afe-970b-025ec6ed04b1",
        "parentId" : null,
        "authorId" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "body" : "what about `second == nil`?",
        "createdAt" : "2017-11-10T19:55:49Z",
        "updatedAt" : "2017-11-21T00:32:49Z",
        "lastEditedBy" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "tags" : [
        ]
      },
      {
        "id" : "03f45a8a-29ab-40cb-85de-25b8d1fef96b",
        "parentId" : "4c3292c9-545f-4afe-970b-025ec6ed04b1",
        "authorId" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "body" : "fixed",
        "createdAt" : "2017-11-14T20:01:46Z",
        "updatedAt" : "2017-11-21T00:32:49Z",
        "lastEditedBy" : "44594ff0-8fbc-44a7-84f9-654ffd54270f",
        "tags" : [
        ]
      }
    ],
    "commit" : "75ef18c4d33e862ce97ad1a475bf71787003eb67",
    "line" : 56,
    "diffHunk" : "@@ -1,1 +186,190 @@}\nfunc addUsage(first, second *uint64) *uint64 {\n\tif first == nil {\n\t\treturn second\n\t} else if second == nil {"
  }
]