[
  {
    "id" : "1629a427-f8e5-4dca-9895-a4245850506d",
    "prId" : 97017,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/97017#pullrequestreview-543100802",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "be6e1723-df45-46d3-bd29-ace00e2ac4be",
        "parentId" : null,
        "authorId" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "body" : "so the test for this functionality mocks cAdvisor results. Can you confirm that cAdvisor that was used in 1.19 was producing these metrics? Just a review of commits diff may be enough I think",
        "createdAt" : "2020-12-02T17:59:01Z",
        "updatedAt" : "2020-12-02T17:59:02Z",
        "lastEditedBy" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "tags" : [
        ]
      },
      {
        "id" : "8219025a-42a9-4181-acf8-bf01e83c1c23",
        "parentId" : "be6e1723-df45-46d3-bd29-ace00e2ac4be",
        "authorId" : "0b91d87e-31df-439e-aea6-1bd379c3f44e",
        "body" : "Yeah we have checked the diff of cadvisor, and it does not change the behavior on this. And we have actually tested this end-to-endly, and have verified that accelerator metrics are available thru summary API",
        "createdAt" : "2020-12-02T18:01:10Z",
        "updatedAt" : "2020-12-02T18:10:19Z",
        "lastEditedBy" : "0b91d87e-31df-439e-aea6-1bd379c3f44e",
        "tags" : [
        ]
      }
    ],
    "commit" : "13d6317ae7db143f1c2a4d8cb525c4aa84db7a57",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +797,801 @@}\n\nfunc (p *criStatsProvider) addCadvisorContainerCPUAndMemoryStats(\n\tcs *statsapi.ContainerStats,\n\tcaPodStats *cadvisorapiv2.ContainerInfo,"
  },
  {
    "id" : "0784d72c-1611-4fd5-81b8-bf97e74ef3fd",
    "prId" : 96873,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/96873#pullrequestreview-541335281",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6cfa4238-139e-45e5-834a-af92fb509393",
        "parentId" : null,
        "authorId" : "d2b16581-e7e9-48b8-9f76-6f6bcb9ec300",
        "body" : "We should definitely omit custom metrics if we only want CPU and Memory metrics",
        "createdAt" : "2020-11-30T22:05:58Z",
        "updatedAt" : "2020-11-30T22:06:02Z",
        "lastEditedBy" : "d2b16581-e7e9-48b8-9f76-6f6bcb9ec300",
        "tags" : [
        ]
      },
      {
        "id" : "f2e59d9c-cd3e-4736-aa46-852be70c21c4",
        "parentId" : "6cfa4238-139e-45e5-834a-af92fb509393",
        "authorId" : "d2b16581-e7e9-48b8-9f76-6f6bcb9ec300",
        "body" : "Actually, it looks like this is just maintaining the existing behavior",
        "createdAt" : "2020-11-30T22:09:27Z",
        "updatedAt" : "2020-11-30T22:09:28Z",
        "lastEditedBy" : "d2b16581-e7e9-48b8-9f76-6f6bcb9ec300",
        "tags" : [
        ]
      }
    ],
    "commit" : "36b4ccdb7ce1214eca5ca72211cfdd9f55cd5a6a",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +801,805 @@\tcaPodStats *cadvisorapiv2.ContainerInfo,\n) {\n\tif caPodStats.Spec.HasCustomMetrics {\n\t\tcs.UserDefinedMetrics = cadvisorInfoToUserDefinedMetrics(caPodStats)\n\t}"
  },
  {
    "id" : "8ca86967-1be1-4eb8-a4ec-c5f9c9d4a659",
    "prId" : 83507,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/83507#pullrequestreview-302759786",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ca49891e-172f-4e29-8201-f9b17398bd47",
        "parentId" : null,
        "authorId" : "d7870cae-47b0-4c8e-8527-be8fc4be86de",
        "body" : "Just to confirm - is the only way that `stats.Cpu.UsageCoreNanoSeconds < cached.stats.UsageCoreNanoSeconds` if `cpuacct` is reset?\r\n\r\nIf that's the case, could we use a descriptive variable name here? For example,\r\n```\r\ncpuAcctReset := stats.Cpu.UsageCoreNanoSeconds.Value < ...\r\nif !ok || ... || cpuAcctReset {\r\n  ...\r\n}\r\n```",
        "createdAt" : "2019-10-05T15:54:23Z",
        "updatedAt" : "2019-11-04T21:08:08Z",
        "lastEditedBy" : "d7870cae-47b0-4c8e-8527-be8fc4be86de",
        "tags" : [
        ]
      },
      {
        "id" : "6c3dd4ec-06ef-4a45-88da-6a56fcb017db",
        "parentId" : "ca49891e-172f-4e29-8201-f9b17398bd47",
        "authorId" : "2376c49a-6f53-4e1d-bb18-0ede3ce9670c",
        "body" : "This condition is also triggered by the bug in https://github.com/kubernetes/kubernetes/pull/83504. However, I would consider this to be unexpected/undesired behavior, and should be addressed by the fix in `removeTerminatedContainers` in that PR. The only \"expected\" condition in which `stats.Cpu.UsageCoreNanoSeconds < cached.stats.UsageCoreNanoSeconds` is indeed if `cpuacct` is reset.",
        "createdAt" : "2019-10-16T17:45:22Z",
        "updatedAt" : "2019-11-04T21:08:08Z",
        "lastEditedBy" : "2376c49a-6f53-4e1d-bb18-0ede3ce9670c",
        "tags" : [
        ]
      }
    ],
    "commit" : "7d4f5554496da38a8e330131f4b91d68e5dbf5c3",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +650,654 @@\n\t\tcached, ok := p.cpuUsageCache[id]\n\t\tif !ok || cached.stats.UsageCoreNanoSeconds == nil || stats.Cpu.UsageCoreNanoSeconds.Value < cached.stats.UsageCoreNanoSeconds.Value {\n\t\t\t// Cannot compute the usage now, but update the cached stats anyway\n\t\t\tp.cpuUsageCache[id] = &cpuUsageRecord{stats: stats.Cpu, usageNanoCores: nil}"
  },
  {
    "id" : "c6cfe565-427e-4374-95bb-734b47fbad22",
    "prId" : 83507,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/83507#pullrequestreview-332902484",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "958146a3-4bfb-4219-b265-da3f64b61f4b",
        "parentId" : null,
        "authorId" : "d2b16581-e7e9-48b8-9f76-6f6bcb9ec300",
        "body" : "Can we return an error to match what we do for negative time values?",
        "createdAt" : "2019-11-04T21:12:14Z",
        "updatedAt" : "2019-11-04T21:12:14Z",
        "lastEditedBy" : "d2b16581-e7e9-48b8-9f76-6f6bcb9ec300",
        "tags" : [
        ]
      },
      {
        "id" : "9832f53e-114f-4c84-a849-05562e8b6f68",
        "parentId" : "958146a3-4bfb-4219-b265-da3f64b61f4b",
        "authorId" : "2376c49a-6f53-4e1d-bb18-0ede3ce9670c",
        "body" : "My one concern with making this an error is currently this condition will also get triggered by the bug addressed in https://github.com/kubernetes/kubernetes/pull/83504. Though I suppose an error message for hitting this case would have aided me in debugging what was going on when I was hitting that bug.",
        "createdAt" : "2019-11-04T21:17:19Z",
        "updatedAt" : "2019-11-04T21:17:20Z",
        "lastEditedBy" : "2376c49a-6f53-4e1d-bb18-0ede3ce9670c",
        "tags" : [
        ]
      },
      {
        "id" : "88822a5a-4119-4a9f-839e-3fe056b2d231",
        "parentId" : "958146a3-4bfb-4219-b265-da3f64b61f4b",
        "authorId" : "d2b16581-e7e9-48b8-9f76-6f6bcb9ec300",
        "body" : "Correct me if I am wrong, but it is a bug if cpu usage reported is reset for a running container.  We should fail loudly if at all possible, rather than fail silently.  If there are cases where it is expected to be reset, we should log a warning.",
        "createdAt" : "2019-12-16T22:12:41Z",
        "updatedAt" : "2019-12-16T22:12:41Z",
        "lastEditedBy" : "d2b16581-e7e9-48b8-9f76-6f6bcb9ec300",
        "tags" : [
        ]
      }
    ],
    "commit" : "7d4f5554496da38a8e330131f4b91d68e5dbf5c3",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +650,654 @@\n\t\tcached, ok := p.cpuUsageCache[id]\n\t\tif !ok || cached.stats.UsageCoreNanoSeconds == nil || stats.Cpu.UsageCoreNanoSeconds.Value < cached.stats.UsageCoreNanoSeconds.Value {\n\t\t\t// Cannot compute the usage now, but update the cached stats anyway\n\t\t\tp.cpuUsageCache[id] = &cpuUsageRecord{stats: stats.Cpu, usageNanoCores: nil}"
  },
  {
    "id" : "ad79c7d2-51b6-4ef4-b7d3-61d9cae7e57f",
    "prId" : 83504,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/83504#pullrequestreview-309380984",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "78f0cc44-2cf2-4c46-8d11-96e62bb38ac3",
        "parentId" : null,
        "authorId" : "4138710b-380a-4011-917f-70ce4f4b9717",
        "body" : "Nitpick: “terminated” and “not running” aren’t the same thing: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-states ",
        "createdAt" : "2019-10-04T23:48:01Z",
        "updatedAt" : "2019-10-28T20:31:12Z",
        "lastEditedBy" : "4138710b-380a-4011-917f-70ce4f4b9717",
        "tags" : [
        ]
      },
      {
        "id" : "85f3fc9a-8fe8-432a-82b6-5c90a1ca9405",
        "parentId" : "78f0cc44-2cf2-4c46-8d11-96e62bb38ac3",
        "authorId" : "2376c49a-6f53-4e1d-bb18-0ede3ce9670c",
        "body" : "What is the suggestion here? Rename the function? From a logical perspective, only \"running\" containers are consuming resources, so only running containers should be used when calculating pod resource usage. \"Waiting\" containers should also be excluded, as they are also not consuming resources.",
        "createdAt" : "2019-10-30T17:17:05Z",
        "updatedAt" : "2019-10-30T17:17:05Z",
        "lastEditedBy" : "2376c49a-6f53-4e1d-bb18-0ede3ce9670c",
        "tags" : [
        ]
      }
    ],
    "commit" : "4b339e6e4e8601bc733e0e52cd84927c9e3af328",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +753,757 @@\tfor _, refs := range containerMap {\n\t\tfor i := 0; i < len(refs); i++ {\n\t\t\tif refs[i].State == runtimeapi.ContainerState_CONTAINER_RUNNING {\n\t\t\t\tresult = append(result, refs[i])\n\t\t\t}"
  },
  {
    "id" : "cb2ce7e8-dd9e-4908-adb7-6eb0e40fee60",
    "prId" : 83504,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/83504#pullrequestreview-302779822",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6dd8ee3b-df9c-4760-a8b2-53e5619ee862",
        "parentId" : null,
        "authorId" : "4138710b-380a-4011-917f-70ce4f4b9717",
        "body" : "I did some more digging, and I think a lot of this function can be removed.\r\n\r\nI can only find 2 references to `removeTerminatedContainers`, and neither use the fact that the output is sorted (by container ID and by create time). Because of that, I think we can remove the whole map and sort process.\r\n\r\n@mattjmcnaughton am I barking up the wrong tree?",
        "createdAt" : "2019-10-05T16:28:52Z",
        "updatedAt" : "2019-10-28T20:31:12Z",
        "lastEditedBy" : "4138710b-380a-4011-917f-70ce4f4b9717",
        "tags" : [
        ]
      },
      {
        "id" : "2e768727-28e0-4fbd-a3ec-8ee91a7d99fb",
        "parentId" : "6dd8ee3b-df9c-4760-a8b2-53e5619ee862",
        "authorId" : "2376c49a-6f53-4e1d-bb18-0ede3ce9670c",
        "body" : "This was originally added in the `cadvisor_stats_provider` as a fix for https://github.com/kubernetes/kubernetes/issues/47853. Its primary functionality was for deduping due to a race condition between cadvisor and cgroup removal. If deduping is no longer necessary (fwiw I have not observed this race condition happening between crio and cgroups), this function can indeed be greatly simplified. I did some searching through the commit history and was unable to determine why the deduping functionality was ported forward from `cadvisor_stats_provider` when `cri_stats_provider` was added. I have preserved the deduping logic to minimize the impact of this diff, but personally I feel this can probably be removed as well.",
        "createdAt" : "2019-10-16T18:17:00Z",
        "updatedAt" : "2019-10-28T20:31:12Z",
        "lastEditedBy" : "2376c49a-6f53-4e1d-bb18-0ede3ce9670c",
        "tags" : [
        ]
      }
    ],
    "commit" : "4b339e6e4e8601bc733e0e52cd84927c9e3af328",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +736,740 @@// removeTerminatedContainers removes all terminated containers since they should\n// not be used for usage calculations.\nfunc removeTerminatedContainers(containers []*runtimeapi.Container) []*runtimeapi.Container {\n\tcontainerMap := make(map[containerID][]*runtimeapi.Container)\n\t// Sort order by create time"
  },
  {
    "id" : "39a7b1db-2f20-4bde-931f-27e462f1d653",
    "prId" : 77426,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/77426#pullrequestreview-234259514",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8558b372-c743-4525-9993-3e8a4a151e52",
        "parentId" : null,
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "What does this mean for the stats kubelet reports? If there are no running instances, kubelet would report the stats of the terminated containers?",
        "createdAt" : "2019-05-06T20:55:42Z",
        "updatedAt" : "2019-05-06T20:55:52Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "8054b1b1-8dd5-4baf-8337-e118553b647d",
        "parentId" : "8558b372-c743-4525-9993-3e8a4a151e52",
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "The terminated containers and terminated pods, I think.\r\n\r\nAnd we've made sure that terminated containers will have required fields set, which we had issue before. This is still slightly different with cadvisor based summary api I guess.",
        "createdAt" : "2019-05-07T00:04:31Z",
        "updatedAt" : "2019-05-07T00:04:31Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      }
    ],
    "commit" : "11cd4242f678a35f207d8f86823fa2df6c0f944a",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +694,698 @@\n// removeTerminatedPods returns pods with terminated ones removed.\n// It only removes a terminated pod when there is a running instance\n// of the pod with the same name and namespace.\n// This is needed because:"
  },
  {
    "id" : "066cbadf-67f9-4885-be90-561a3598aa0e",
    "prId" : 77426,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/77426#pullrequestreview-234835844",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "91a9462f-1aeb-48dd-9860-8872088cd05a",
        "parentId" : null,
        "authorId" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "body" : "I wonder why this is needed ?\r\nI assume the func would only keep READY sandboxes.\r\n\r\nWhen I comment out this line, cri_stats_provider_test still passes.",
        "createdAt" : "2019-05-08T01:59:09Z",
        "updatedAt" : "2019-05-08T01:59:10Z",
        "lastEditedBy" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "11cd4242f678a35f207d8f86823fa2df6c0f944a",
    "line" : 76,
    "diffHunk" : "@@ -1,1 +728,732 @@\t\t}\n\t\tif !found {\n\t\t\tresult = append(result, refs[len(refs)-1])\n\t\t}\n\t}"
  },
  {
    "id" : "e9791918-1337-4fab-b283-7ac142b360ea",
    "prId" : 74933,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/74933#pullrequestreview-210975922",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "de8dc577-54cb-4954-8d6b-d349d397419a",
        "parentId" : null,
        "authorId" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "body" : "Should nil be returned in this case ?",
        "createdAt" : "2019-03-05T23:30:13Z",
        "updatedAt" : "2019-03-05T23:30:33Z",
        "lastEditedBy" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "191666d6a3dd4a1ba77bd5fbf7696018a4559ebc",
    "line" : 160,
    "diffHunk" : "@@ -1,1 +627,631 @@\tif err != nil {\n\t\t// This should not happen. Log now to raise visiblity\n\t\tklog.Errorf(\"failed updating cpu usage nano core: %v\", err)\n\t}\n\treturn usage"
  },
  {
    "id" : "d167ef06-8730-4c6e-8320-5bab057232b2",
    "prId" : 74788,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/74788#pullrequestreview-210838644",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9e7488dd-b3c7-4956-823d-6837c6074bf4",
        "parentId" : null,
        "authorId" : "e2fdfb1c-53ec-47f6-832a-220b9ccbe451",
        "body" : "is it possible a race condition exists where a new container was created but you don't have stats for it in the dictionary?",
        "createdAt" : "2019-03-01T23:45:18Z",
        "updatedAt" : "2019-03-07T01:56:18Z",
        "lastEditedBy" : "e2fdfb1c-53ec-47f6-832a-220b9ccbe451",
        "tags" : [
        ]
      },
      {
        "id" : "0b8db4e8-fb0d-4753-8087-06a446effcb8",
        "parentId" : "9e7488dd-b3c7-4956-823d-6837c6074bf4",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "yep, it's possible. In that case, the network stats is actually nil, so it would just return without doing anything.",
        "createdAt" : "2019-03-04T07:25:49Z",
        "updatedAt" : "2019-03-07T01:56:18Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      },
      {
        "id" : "248bddcf-dc91-4596-adea-356b6a5364e7",
        "parentId" : "9e7488dd-b3c7-4956-823d-6837c6074bf4",
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "Is there a unit test for that?",
        "createdAt" : "2019-03-06T19:41:23Z",
        "updatedAt" : "2019-03-07T01:56:18Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "d69003757117149b086a95a76d43405894517824",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +191,195 @@\t\t// Fill available stats for full set of required pod stats\n\t\tcs := p.makeContainerStats(stats, container, &rootFsInfo, fsIDtoInfo, podSandbox.GetMetadata().GetUid(), updateCPUNanoCoreUsage)\n\t\tp.addPodNetworkStats(ps, podSandboxID, caInfos, cs, containerNetworkStats[podSandboxID])\n\t\tp.addPodCPUMemoryStats(ps, types.UID(podSandbox.Metadata.Uid), allInfos, cs)\n"
  },
  {
    "id" : "dd2eed2f-1240-4dae-88c8-e2fa9010e35a",
    "prId" : 74788,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/74788#pullrequestreview-210480267",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a352a131-8d18-4eea-8434-4916580815a2",
        "parentId" : null,
        "authorId" : "cb143ff8-4479-4c31-a009-b383d0bdd58d",
        "body" : "Maybe the log line on 395 should be updated to reflect that it is not just cadvisor stats? \"Unable to find network stats for sandbox\"?",
        "createdAt" : "2019-03-04T17:11:33Z",
        "updatedAt" : "2019-03-07T01:56:18Z",
        "lastEditedBy" : "cb143ff8-4479-4c31-a009-b383d0bdd58d",
        "tags" : [
        ]
      },
      {
        "id" : "9bb9cf1d-5a87-490c-a41d-4f47b0d7396a",
        "parentId" : "a352a131-8d18-4eea-8434-4916580815a2",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "Good catch. Would update the log message.",
        "createdAt" : "2019-03-05T03:39:40Z",
        "updatedAt" : "2019-03-07T01:56:18Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      }
    ],
    "commit" : "d69003757117149b086a95a76d43405894517824",
    "line" : 55,
    "diffHunk" : "@@ -1,1 +415,419 @@\t// Not found from cadvisor, get from netStats.\n\tif netStats != nil {\n\t\tps.Network = netStats\n\t\treturn\n\t}"
  },
  {
    "id" : "9465f64a-09bf-4087-8cca-353e1b2b1f0b",
    "prId" : 74788,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/74788#pullrequestreview-211562176",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7ccaf4d4-ab8f-42dc-a582-92435382feb6",
        "parentId" : null,
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "Please add a comment explaining that not all platforms support `listContainerNetworkStats()` , and this may return `nil` for unsupported platforms.",
        "createdAt" : "2019-03-06T19:28:57Z",
        "updatedAt" : "2019-03-07T01:56:18Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "8fa01e50-4bf9-437b-a26b-0439b83050d5",
        "parentId" : "7ccaf4d4-ab8f-42dc-a582-92435382feb6",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "sure",
        "createdAt" : "2019-03-07T01:28:01Z",
        "updatedAt" : "2019-03-07T01:56:18Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      },
      {
        "id" : "3420fd58-5f4c-4586-a8ef-de186d778793",
        "parentId" : "7ccaf4d4-ab8f-42dc-a582-92435382feb6",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "sure",
        "createdAt" : "2019-03-07T01:30:27Z",
        "updatedAt" : "2019-03-07T01:56:18Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      }
    ],
    "commit" : "d69003757117149b086a95a76d43405894517824",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +161,165 @@\tcaInfos := getCRICadvisorStats(allInfos)\n\n\t// get network stats for containers.\n\t// This is only used on Windows. For other platforms, (nil, nil) should be returned.\n\tcontainerNetworkStats, err := p.listContainerNetworkStats()"
  },
  {
    "id" : "9ef7d164-3dbb-4211-8f86-b947aa00b2a1",
    "prId" : 74441,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/74441#pullrequestreview-212070636",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "33bb4d88-ee8f-4e9a-8467-e02b6506e407",
        "parentId" : null,
        "authorId" : "d2b16581-e7e9-48b8-9f76-6f6bcb9ec300",
        "body" : "nit: does `calcEphemeralStorage` correctly handle a nil logStats when we hit this error?  Can you add a comment explaining that it does, and we intentionally continue, or return here?",
        "createdAt" : "2019-03-05T19:47:01Z",
        "updatedAt" : "2019-03-09T00:42:28Z",
        "lastEditedBy" : "d2b16581-e7e9-48b8-9f76-6f6bcb9ec300",
        "tags" : [
        ]
      },
      {
        "id" : "799e7cf0-84fa-4b6a-ab1e-261575e9b35f",
        "parentId" : "33bb4d88-ee8f-4e9a-8467-e02b6506e407",
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "For old pod left by in-place upgrade, there is no pod log stats. We should continue generating other stats.\r\nWill add a comment.\r\n",
        "createdAt" : "2019-03-07T00:09:21Z",
        "updatedAt" : "2019-03-09T00:42:28Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      },
      {
        "id" : "90a70b14-75be-4df2-81f3-26b3e0363563",
        "parentId" : "33bb4d88-ee8f-4e9a-8467-e02b6506e407",
        "authorId" : "d2b16581-e7e9-48b8-9f76-6f6bcb9ec300",
        "body" : "looks good.",
        "createdAt" : "2019-03-07T23:09:52Z",
        "updatedAt" : "2019-03-09T00:42:28Z",
        "lastEditedBy" : "d2b16581-e7e9-48b8-9f76-6f6bcb9ec300",
        "tags" : [
        ]
      }
    ],
    "commit" : "0ac651bfc39f29b2301bd85ab3bfe277cf323100",
    "line" : 72,
    "diffHunk" : "@@ -1,1 +402,406 @@\tlogStats, err := p.getPodLogStats(podLogDir, rootFsInfo)\n\tif err != nil {\n\t\tklog.Errorf(\"Unable to fetch pod log stats for path %s: %v \", podLogDir, err)\n\t\t// If people do in-place upgrade, there might be pods still using\n\t\t// the old log path. For those pods, no pod log stats is returned."
  },
  {
    "id" : "b137776b-65dd-4e4d-a7a0-1360d7a2cd3c",
    "prId" : 74441,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/74441#pullrequestreview-212070196",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "547b2d72-0ef7-4fb3-8cde-c05727fdad58",
        "parentId" : null,
        "authorId" : "d2b16581-e7e9-48b8-9f76-6f6bcb9ec300",
        "body" : "what is the `rootFsInfo` passed in, and why do we add it to the log usage?  It seems like this function returns aggregate pod-level FsStats, rather than just stats for pod logs.  Or maybe it is missing volume stats?  It would be better to either have the function return aggregate pod stats, or just log stats and do the merging with other stats outside of this function.",
        "createdAt" : "2019-03-05T19:52:14Z",
        "updatedAt" : "2019-03-09T00:42:28Z",
        "lastEditedBy" : "d2b16581-e7e9-48b8-9f76-6f6bcb9ec300",
        "tags" : [
        ]
      },
      {
        "id" : "19a2d015-b08e-4807-8c4d-72212c1b97e9",
        "parentId" : "547b2d72-0ef7-4fb3-8cde-c05727fdad58",
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "This only returns pod log stats, basically the stats of all logs under `/var/log/pods/NAMESPACE_NAME_UID/*.log`.\r\n\r\nThe rootFsInfo is used to set the available and capacity, we use it in this way everywhere I think.",
        "createdAt" : "2019-03-07T00:14:44Z",
        "updatedAt" : "2019-03-09T00:42:28Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      },
      {
        "id" : "287ce01a-bb07-41b1-b746-32ca39881a96",
        "parentId" : "547b2d72-0ef7-4fb3-8cde-c05727fdad58",
        "authorId" : "d2b16581-e7e9-48b8-9f76-6f6bcb9ec300",
        "body" : "oh, that makes total sense",
        "createdAt" : "2019-03-07T23:08:30Z",
        "updatedAt" : "2019-03-09T00:42:28Z",
        "lastEditedBy" : "d2b16581-e7e9-48b8-9f76-6f6bcb9ec300",
        "tags" : [
        ]
      }
    ],
    "commit" : "0ac651bfc39f29b2301bd85ab3bfe277cf323100",
    "line" : 185,
    "diffHunk" : "@@ -1,1 +790,794 @@// the pod log directory. And kubelet will take those logs into account as part of pod ephemeral\n// storage.\nfunc (p *criStatsProvider) getPodLogStats(path string, rootFsInfo *cadvisorapiv2.FsInfo) (*statsapi.FsStats, error) {\n\tfiles, err := p.osInterface.ReadDir(path)\n\tif err != nil {"
  },
  {
    "id" : "37f6d7ee-9199-4cb4-9d28-76d74eff9571",
    "prId" : 73659,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/73659#pullrequestreview-201935068",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "66bc4a95-e3b2-40d6-8b80-0a87d847ebd3",
        "parentId" : null,
        "authorId" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "body" : "stats.Cpu is checked on line 546 above, when would the value be nil ?",
        "createdAt" : "2019-02-09T16:35:53Z",
        "updatedAt" : "2019-02-09T16:35:53Z",
        "lastEditedBy" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "tags" : [
        ]
      },
      {
        "id" : "d67ada74-d70f-4a61-b9cc-1a17e72b231d",
        "parentId" : "66bc4a95-e3b2-40d6-8b80-0a87d847ebd3",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "this is for preventing panics, e.g. in tests",
        "createdAt" : "2019-02-11T01:23:34Z",
        "updatedAt" : "2019-02-11T01:23:34Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      }
    ],
    "commit" : "01fbca29cb72201efba0a5ddd84bb347e3aa6dbd",
    "line" : 113,
    "diffHunk" : "@@ -1,1 +570,574 @@\n\tfor k, v := range p.cpuUsageCache {\n\t\tif v == nil {\n\t\t\tdelete(p.cpuUsageCache, k)\n\t\t}"
  },
  {
    "id" : "77004912-5596-428e-8ced-5cee0cb3bf10",
    "prId" : 73659,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/73659#pullrequestreview-201952703",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c3b1d9fb-0176-4d58-b0b6-261c390aee74",
        "parentId" : null,
        "authorId" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "body" : "Since there may not be any expired entries for successive calls to cleanupOutdatedCaches, I wonder if the func can return early if it is called within defaultCachePeriod of the previous call.",
        "createdAt" : "2019-02-09T16:39:19Z",
        "updatedAt" : "2019-02-09T16:39:20Z",
        "lastEditedBy" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "tags" : [
        ]
      },
      {
        "id" : "188aace4-424c-493c-b676-c066a09d9cc8",
        "parentId" : "c3b1d9fb-0176-4d58-b0b6-261c390aee74",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "yep, but that requires more work here, e.g. another property indicating the oldest Timestamp in the cache. ",
        "createdAt" : "2019-02-11T01:20:13Z",
        "updatedAt" : "2019-02-11T01:20:13Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      },
      {
        "id" : "429ee765-09ac-475f-9fef-52461e9fd74f",
        "parentId" : "c3b1d9fb-0176-4d58-b0b6-261c390aee74",
        "authorId" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "body" : "How about adding a property recording the time of last cleanup (so that we don't call this so often) ?",
        "createdAt" : "2019-02-11T05:10:01Z",
        "updatedAt" : "2019-02-11T05:10:02Z",
        "lastEditedBy" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "01fbca29cb72201efba0a5ddd84bb347e3aa6dbd",
    "line" : 109,
    "diffHunk" : "@@ -1,1 +566,570 @@\nfunc (p *criStatsProvider) cleanupOutdatedCaches() {\n\tp.mutex.Lock()\n\tdefer p.mutex.Unlock()\n"
  },
  {
    "id" : "ed718b00-8856-46ef-b0e4-a5c7776a041a",
    "prId" : 62266,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/62266#pullrequestreview-121337256",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c5ac2623-c3e5-4dc0-853e-52a193d7fe47",
        "parentId" : null,
        "authorId" : "e2fdfb1c-53ec-47f6-832a-220b9ccbe451",
        "body" : "what's the difference between statsapi.cpustats and statsapi.containerstats?",
        "createdAt" : "2018-05-18T07:22:04Z",
        "updatedAt" : "2018-05-22T02:52:29Z",
        "lastEditedBy" : "e2fdfb1c-53ec-47f6-832a-220b9ccbe451",
        "tags" : [
        ]
      },
      {
        "id" : "4af89687-101e-4d14-9935-8ae85f27c892",
        "parentId" : "c5ac2623-c3e5-4dc0-853e-52a193d7fe47",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "statsapi.cpustats is part of  statsapi.containerstats and  statsapi.podstats.\r\n\r\nBecause windows doesn't support cadvisor, we can't get pod level stats, so here sum all containers' stats belonging to the same Pod.",
        "createdAt" : "2018-05-18T07:43:22Z",
        "updatedAt" : "2018-05-22T02:52:29Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      },
      {
        "id" : "dd4f0487-0bb5-4f67-a60f-7b3df2d2a4bb",
        "parentId" : "c5ac2623-c3e5-4dc0-853e-52a193d7fe47",
        "authorId" : "e2fdfb1c-53ec-47f6-832a-220b9ccbe451",
        "body" : "got it. makes sense. thanks",
        "createdAt" : "2018-05-18T08:52:40Z",
        "updatedAt" : "2018-05-22T02:52:29Z",
        "lastEditedBy" : "e2fdfb1c-53ec-47f6-832a-220b9ccbe451",
        "tags" : [
        ]
      }
    ],
    "commit" : "66da2ddcd03c236bd7a9db72fee08b3391fc9269",
    "line" : 61,
    "diffHunk" : "@@ -1,1 +301,305 @@\tif cs.CPU != nil {\n\t\tif ps.CPU == nil {\n\t\t\tps.CPU = &statsapi.CPUStats{}\n\t\t}\n"
  },
  {
    "id" : "00fbe7a4-6810-4eb3-9b2f-2a14e93ab676",
    "prId" : 60328,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/60328#pullrequestreview-99433913",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c0501f48-b89b-4b60-bd63-f726f216e34a",
        "parentId" : null,
        "authorId" : "ed12fa4b-7790-4e88-b7d8-5d6a06b0b9f3",
        "body" : "Do we need to log something if it's not found?",
        "createdAt" : "2018-02-24T01:56:16Z",
        "updatedAt" : "2018-02-26T19:29:57Z",
        "lastEditedBy" : "ed12fa4b-7790-4e88-b7d8-5d6a06b0b9f3",
        "tags" : [
        ]
      },
      {
        "id" : "a9e3096c-e46c-4eda-bb23-5db7d0b63b7f",
        "parentId" : "c0501f48-b89b-4b60-bd63-f726f216e34a",
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "We don't do for cadvisor, so keep it the same.\r\nSee https://github.com/kubernetes/kubernetes/blob/317853c90c674920bfbbdac54fe66092ddc9f15f/pkg/kubelet/stats/cadvisor_stats_provider.go#L136.",
        "createdAt" : "2018-02-26T19:26:29Z",
        "updatedAt" : "2018-02-26T19:29:57Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      }
    ],
    "commit" : "3688650a6b39df50917437a1ed8661dbf5e52309",
    "line" : 72,
    "diffHunk" : "@@ -1,1 +288,292 @@\t\tps.CPU = cpu\n\t\tps.Memory = memory\n\t}\n}\n"
  },
  {
    "id" : "7d336f3e-bb73-4e86-afd5-e431c1930680",
    "prId" : 60328,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/60328#pullrequestreview-99434564",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "da18f0c9-546d-4126-99f5-a2d1549bf270",
        "parentId" : null,
        "authorId" : "ed12fa4b-7790-4e88-b7d8-5d6a06b0b9f3",
        "body" : "For my education - what does this comment mean?",
        "createdAt" : "2018-02-24T01:58:56Z",
        "updatedAt" : "2018-02-26T19:29:57Z",
        "lastEditedBy" : "ed12fa4b-7790-4e88-b7d8-5d6a06b0b9f3",
        "tags" : [
        ]
      },
      {
        "id" : "a7bd2f04-d9ea-46ca-9702-8645e2652b96",
        "parentId" : "da18f0c9-546d-4126-99f5-a2d1549bf270",
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "CRI only provides part of cpu/memory stats summary api ,so we still need cadvisor stats to fill in the other fields in summary api.",
        "createdAt" : "2018-02-26T19:28:20Z",
        "updatedAt" : "2018-02-26T19:29:57Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      }
    ],
    "commit" : "3688650a6b39df50917437a1ed8661dbf5e52309",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +144,148 @@\t\tif !found {\n\t\t\tps = buildPodStats(podSandbox)\n\t\t\t// Fill stats from cadvisor is available for full set of required pod stats\n\t\t\tp.addCadvisorPodNetworkStats(ps, podSandboxID, caInfos)\n\t\t\tp.addCadvisorPodCPUMemoryStats(ps, types.UID(podSandbox.Metadata.Uid), allInfos)"
  },
  {
    "id" : "880d9d3a-febc-48cc-9ef7-87e5aee3f78a",
    "prId" : 55810,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/55810#pullrequestreview-78637279",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dc6afbff-7b14-4b73-9e1f-ec16d5655f5c",
        "parentId" : null,
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "Can we move this into `getCadvisorContainerInfo`? Separate them seems error prone.",
        "createdAt" : "2017-11-23T07:10:56Z",
        "updatedAt" : "2017-11-23T07:10:58Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      },
      {
        "id" : "222d716f-3458-4923-ac40-9d8563a9c02c",
        "parentId" : "dc6afbff-7b14-4b73-9e1f-ec16d5655f5c",
        "authorId" : "c0f153be-e421-41fb-ab49-be2badc19b1d",
        "body" : "My original change had it. But looks like the pod level stats change will need the full set of info obtained from cadvisor. https://github.com/kubernetes/kubernetes/blob/master/pkg/kubelet/stats/cadvisor_stats_provider.go#L95",
        "createdAt" : "2017-11-23T07:14:21Z",
        "updatedAt" : "2017-11-23T08:18:35Z",
        "lastEditedBy" : "c0f153be-e421-41fb-ab49-be2badc19b1d",
        "tags" : [
        ]
      }
    ],
    "commit" : "e19f213027a4184fa87e525aaf58eac07b4c63e9",
    "line" : 109,
    "diffHunk" : "@@ -1,1 +389,393 @@\t\treturn nil, fmt.Errorf(\"failed to fetch cadvisor stats: %v\", err)\n\t}\n\tinfos = removeTerminatedContainerInfo(infos)\n\tfor key, info := range infos {\n\t\t// On systemd using devicemapper each mount into the container has an"
  },
  {
    "id" : "437cebd9-9efa-4e7b-a6d2-1dd9ea350a94",
    "prId" : 51557,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/51557#pullrequestreview-60009658",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b3d91aa2-4acb-4cc8-bd1f-8d6eb4ba5139",
        "parentId" : null,
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "Should we add TODO to support multiple ones?",
        "createdAt" : "2017-08-31T20:24:06Z",
        "updatedAt" : "2017-09-06T16:12:20Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      },
      {
        "id" : "a385a144-ee73-4a72-a068-0055233f42fe",
        "parentId" : "b3d91aa2-4acb-4cc8-bd1f-8d6eb4ba5139",
        "authorId" : "ed12fa4b-7790-4e88-b7d8-5d6a06b0b9f3",
        "body" : "Done.",
        "createdAt" : "2017-08-31T22:40:33Z",
        "updatedAt" : "2017-09-06T16:12:20Z",
        "lastEditedBy" : "ed12fa4b-7790-4e88-b7d8-5d6a06b0b9f3",
        "tags" : [
        ]
      }
    ],
    "commit" : "dfea03d920a3998a0b4195abab1fc8252056faea",
    "line" : 104,
    "diffHunk" : "@@ -1,1 +147,151 @@\n\t// CRI may return the stats of multiple image filesystems but we only\n\t// return the first one.\n\t//\n\t// TODO(yguo0905): Support returning stats of multiple image filesystems."
  },
  {
    "id" : "3f6e6b27-5248-49c7-8773-1b82ebb03c02",
    "prId" : 51557,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/51557#pullrequestreview-60009771",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4ad6df41-32f9-4d89-8ebe-760b80e02f3f",
        "parentId" : null,
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "Why don't we return error, and let the caller to decide whether to log error or not?",
        "createdAt" : "2017-08-31T20:29:25Z",
        "updatedAt" : "2017-09-06T16:12:20Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      },
      {
        "id" : "041ab3d4-972e-4bcb-894e-61a244ab2841",
        "parentId" : "4ad6df41-32f9-4d89-8ebe-760b80e02f3f",
        "authorId" : "ed12fa4b-7790-4e88-b7d8-5d6a06b0b9f3",
        "body" : "In this way, we want to have the logging logic in a shared function.",
        "createdAt" : "2017-08-31T22:41:21Z",
        "updatedAt" : "2017-09-06T16:12:20Z",
        "lastEditedBy" : "ed12fa4b-7790-4e88-b7d8-5d6a06b0b9f3",
        "tags" : [
        ]
      }
    ],
    "commit" : "dfea03d920a3998a0b4195abab1fc8252056faea",
    "line" : 133,
    "diffHunk" : "@@ -1,1 +176,180 @@// storageID. If any error occurs, this function logs the error and returns\n// nil.\nfunc (p *criStatsProvider) getFsInfo(storageID *runtimeapi.StorageIdentifier) *cadvisorapiv2.FsInfo {\n\tif storageID == nil {\n\t\tglog.V(2).Infof(\"Failed to get filesystem info: storageID is nil.\")"
  },
  {
    "id" : "50d3664c-4642-4a45-bb5d-94a0ba028173",
    "prId" : 51557,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/51557#pullrequestreview-60010289",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f814bed2-e24b-40a6-9238-b72d68ab1715",
        "parentId" : null,
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "You can use stas.GetCpu().GetUsageCoreNanoSeconds().GetValue() to get rid of all the nil checks.",
        "createdAt" : "2017-08-31T20:35:21Z",
        "updatedAt" : "2017-09-06T16:12:20Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      },
      {
        "id" : "a8a0be96-0c5f-4d22-996b-35d718a67c51",
        "parentId" : "f814bed2-e24b-40a6-9238-b72d68ab1715",
        "authorId" : "ed12fa4b-7790-4e88-b7d8-5d6a06b0b9f3",
        "body" : "To avoid setting default values in the results, I still need to check whether `stas.GetCpu().GetUsageCoreNanoSeconds().GetValue()` is 0 or not.",
        "createdAt" : "2017-08-31T22:44:42Z",
        "updatedAt" : "2017-09-06T16:12:20Z",
        "lastEditedBy" : "ed12fa4b-7790-4e88-b7d8-5d6a06b0b9f3",
        "tags" : [
        ]
      }
    ],
    "commit" : "dfea03d920a3998a0b4195abab1fc8252056faea",
    "line" : 195,
    "diffHunk" : "@@ -1,1 +238,242 @@\t\t// UserDefinedMetrics is not supported by CRI.\n\t}\n\tif stats.Cpu != nil {\n\t\tresult.CPU.Time = metav1.NewTime(time.Unix(0, stats.Cpu.Timestamp))\n\t\tif stats.Cpu.UsageCoreNanoSeconds != nil {"
  }
]