[
  {
    "id" : "52f8db57-a3a2-416f-b4bf-987d14cf3120",
    "prId" : 5122,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "614380cf-a489-4c8a-8974-58f570ef66b2",
        "parentId" : null,
        "authorId" : "727fc82d-d969-41a4-a614-7fefce94f9a6",
        "body" : "@pmorie We're both following the same pattern here, where our volumes are referencing something in the same namespace.\n\nBecause we don't want/need the user to specify their namespace on the volume (they're already in a namespace with their pod) and I really just needed the name as a reference, @thockin suggested I dump the objectRef and just go with claimName.  \n\nPerhaps that pattern fits here, too?\n",
        "createdAt" : "2015-03-06T02:57:54Z",
        "updatedAt" : "2015-03-10T18:40:27Z",
        "lastEditedBy" : "727fc82d-d969-41a4-a614-7fefce94f9a6",
        "tags" : [
        ]
      }
    ],
    "commit" : "a486ab078f2d7679107dc0dc95d5266b011b0822",
    "line" : null,
    "diffHunk" : "@@ -1,1 +81,85 @@\tpodRef    *api.ObjectReference\n\tplugin    *secretPlugin\n\tsecretRef *api.ObjectReference\n}\n"
  },
  {
    "id" : "af6c985f-e4a8-441b-a2b1-cdb2b61d9b9a",
    "prId" : 5122,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9533cbb0-4137-43df-9dc4-7c0aefd8fddf",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "I'm not convinced this is clearer.  We still need secretRef anyway, so it feels more self-documenting to just leave this as it was, unless there's a plan to kill off secretRef\n",
        "createdAt" : "2015-03-06T07:50:44Z",
        "updatedAt" : "2015-03-10T18:40:27Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "d139b876-7e4e-4e0c-978c-32b9d28fc8cf",
        "parentId" : "9533cbb0-4137-43df-9dc4-7c0aefd8fddf",
        "authorId" : "727fc82d-d969-41a4-a614-7fefce94f9a6",
        "body" : "The problem with SecretRef (and likewise object references I am using for Persistent Volumes) is that it requires either a) the user to set the namespace on their pod's volume or b) setting the namespace on the ref in a default func.\n\nThe default func worked for me in my case, but @smarterclayton preferred adding to the NewBuilder func's arguments as opposed to a default func. \n",
        "createdAt" : "2015-03-06T13:18:05Z",
        "updatedAt" : "2015-03-10T18:40:27Z",
        "lastEditedBy" : "727fc82d-d969-41a4-a614-7fefce94f9a6",
        "tags" : [
        ]
      },
      {
        "id" : "2b8c8899-598c-41e6-8d61-5d8227b65837",
        "parentId" : "9533cbb0-4137-43df-9dc4-7c0aefd8fddf",
        "authorId" : "727fc82d-d969-41a4-a614-7fefce94f9a6",
        "body" : "Also, this is why you suggested I replace my ClaimRef with ClaimName, which is all Paul and I really need so long as the namespace is available for a lookup within the volume.  We're both looking up things in a namespace by name.   If the namespace is available, it reduces the ref to just name.\n",
        "createdAt" : "2015-03-06T14:07:48Z",
        "updatedAt" : "2015-03-10T18:40:27Z",
        "lastEditedBy" : "727fc82d-d969-41a4-a614-7fefce94f9a6",
        "tags" : [
        ]
      }
    ],
    "commit" : "a486ab078f2d7679107dc0dc95d5266b011b0822",
    "line" : 48,
    "diffHunk" : "@@ -1,1 +98,102 @@\t}\n\n\tsecret, err := kubeClient.Secrets(sv.podRef.Namespace).Get(sv.secretRef.Name)\n\tif err != nil {\n\t\tglog.Errorf(\"Couldn't get secret %v/%v\", sv.secretRef.Namespace, sv.secretRef.Name)"
  },
  {
    "id" : "51b294d7-a764-47e5-9469-b2576f7b5d35",
    "prId" : 4515,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0accc5e5-fa09-4d2f-a570-d9dfb4ec5c01",
        "parentId" : null,
        "authorId" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "body" : "Instead of storing a pointer to the plugin in the secretVolume, suggest just storing it in a string in secretVolume and computing it when you initialize secretVolume{} in newCleaner and newBuilder.\n\nThis makes it so that secretVolume only has the information it needs. Also, its not immediately obvious that GetPath() would always return the same value, whereas we don't expect the value to change over the lifetime of the Builder/Cleaner objects.\n",
        "createdAt" : "2015-02-18T18:29:39Z",
        "updatedAt" : "2015-02-18T21:27:47Z",
        "lastEditedBy" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "tags" : [
        ]
      },
      {
        "id" : "7c63975e-dd15-4b25-8186-fd06d7492cb9",
        "parentId" : "0accc5e5-fa09-4d2f-a570-d9dfb4ec5c01",
        "authorId" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "body" : "The pointer is stored because the `Setup` method uses the KubeClient it provides to fetch the secrets from the API server.\n",
        "createdAt" : "2015-02-18T20:00:55Z",
        "updatedAt" : "2015-02-18T21:27:47Z",
        "lastEditedBy" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "tags" : [
        ]
      }
    ],
    "commit" : "a42ff94c8ff433b982bb5fd37ff1a0501a0a54ca",
    "line" : 82,
    "diffHunk" : "@@ -1,1 +80,84 @@\tvolName   string\n\tpodUID    types.UID\n\tplugin    *secretPlugin\n\tsecretRef *api.ObjectReference\n}"
  }
]