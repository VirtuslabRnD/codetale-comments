[
  {
    "id" : "e93b4895-f55c-4243-a3bd-090667638e21",
    "prId" : 81397,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/81397#pullrequestreview-275280267",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "015976fb-fb6b-4b62-a9ae-775dd7e48afd",
        "parentId" : null,
        "authorId" : "84643be2-004e-4f49-9ab2-b32a1995bad6",
        "body" : "Does this return false or an error when the argument is a named pipe?\r\n\r\nI'm not sure if that question even totally makes sense, I just know that named pipes are the other mechanism for IPC with Windows Kubernetes and could perhaps see someone mistakenly passing a named pipe path to this method.",
        "createdAt" : "2019-08-15T01:43:05Z",
        "updatedAt" : "2019-08-27T23:25:04Z",
        "lastEditedBy" : "84643be2-004e-4f49-9ab2-b32a1995bad6",
        "tags" : [
        ]
      },
      {
        "id" : "4eeeb529-4638-44da-bd71-97c555990fbb",
        "parentId" : "015976fb-fb6b-4b62-a9ae-775dd7e48afd",
        "authorId" : "98986d5f-c846-4478-8363-8a016e3d6b89",
        "body" : "For a named pipe, IsUnixDomainSocket returns `false` along with a non-nil err as it gets treated similar to an invalid file. Added a unit-test with a named pipe to clarify/check the behavior. \r\n\r\nNote that in the context of the plugin watcher/fsnotify, named pipes won't be passed to IsUnixDomainSocket since the watcher is scoped to normal files with the plugin directory",
        "createdAt" : "2019-08-15T06:41:46Z",
        "updatedAt" : "2019-08-27T23:25:04Z",
        "lastEditedBy" : "98986d5f-c846-4478-8363-8a016e3d6b89",
        "tags" : [
        ]
      }
    ],
    "commit" : "1321c9115b27809f9342d8dc291dcf7a3c9222ce",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +151,155 @@\t}\n\treturn path\n}"
  },
  {
    "id" : "a3064d70-8533-4ec9-aa81-35a881135c8b",
    "prId" : 78704,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/78704#pullrequestreview-245704175",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ae65a7a2-4881-4e38-afc7-c6f830af5ea8",
        "parentId" : null,
        "authorId" : "a1a1c8af-e8d1-473f-b2b9-b14426320bcb",
        "body" : "Can we keep the error message consistent between _windows and _unsupported?",
        "createdAt" : "2019-06-04T20:51:26Z",
        "updatedAt" : "2019-06-04T21:07:24Z",
        "lastEditedBy" : "a1a1c8af-e8d1-473f-b2b9-b14426320bcb",
        "tags" : [
        ]
      },
      {
        "id" : "29fa004b-70d7-4786-a407-013b91f68455",
        "parentId" : "ae65a7a2-4881-4e38-afc7-c6f830af5ea8",
        "authorId" : "a1a1c8af-e8d1-473f-b2b9-b14426320bcb",
        "body" : "prefer plural version for both",
        "createdAt" : "2019-06-04T20:51:53Z",
        "updatedAt" : "2019-06-04T21:07:24Z",
        "lastEditedBy" : "a1a1c8af-e8d1-473f-b2b9-b14426320bcb",
        "tags" : [
        ]
      },
      {
        "id" : "882228a6-ecc5-4bac-953a-f80e645452bd",
        "parentId" : "ae65a7a2-4881-4e38-afc7-c6f830af5ea8",
        "authorId" : "d2b16581-e7e9-48b8-9f76-6f6bcb9ec300",
        "body" : "done",
        "createdAt" : "2019-06-04T21:07:58Z",
        "updatedAt" : "2019-06-04T21:07:59Z",
        "lastEditedBy" : "d2b16581-e7e9-48b8-9f76-6f6bcb9ec300",
        "tags" : [
        ]
      }
    ],
    "commit" : "80ed28b15be5abc9b40ccfe843152d26f380221b",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +110,114 @@// LocalEndpoint empty implementation\nfunc LocalEndpoint(path, file string) (string, error) {\n\treturn \"\", fmt.Errorf(\"LocalEndpoints are unsupported in this build\")\n}\n"
  },
  {
    "id" : "4a00c92b-5706-4b64-85f0-df8849d3a1d5",
    "prId" : 59525,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/59525#pullrequestreview-182525251",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b016dcce-5cfd-4b13-b690-c83096f6cb5b",
        "parentId" : null,
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "/cc @kubernetes/sig-windows-misc ",
        "createdAt" : "2018-12-05T22:03:13Z",
        "updatedAt" : "2018-12-05T23:08:10Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "db856587-d6c4-4c28-b530-dc9c225ce58c",
        "parentId" : "b016dcce-5cfd-4b13-b690-c83096f6cb5b",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "cc @PatrickLang ",
        "createdAt" : "2018-12-06T03:14:42Z",
        "updatedAt" : "2018-12-06T03:14:42Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      },
      {
        "id" : "d1445306-15fd-4360-9d11-1f1bf028d8e1",
        "parentId" : "b016dcce-5cfd-4b13-b690-c83096f6cb5b",
        "authorId" : "e2fdfb1c-53ec-47f6-832a-220b9ccbe451",
        "body" : "@alinbalutoiu  can you also please take a look. the code looks good at a high level",
        "createdAt" : "2018-12-06T15:52:59Z",
        "updatedAt" : "2018-12-06T15:53:00Z",
        "lastEditedBy" : "e2fdfb1c-53ec-47f6-832a-220b9ccbe451",
        "tags" : [
        ]
      },
      {
        "id" : "e34d949c-719e-45a3-9ffe-02e21008bc5d",
        "parentId" : "b016dcce-5cfd-4b13-b690-c83096f6cb5b",
        "authorId" : "51017276-cc31-4215-851e-d73105bafdaf",
        "body" : "@michmike looks good to me, it is working fine as well.",
        "createdAt" : "2018-12-06T20:06:11Z",
        "updatedAt" : "2018-12-06T20:06:12Z",
        "lastEditedBy" : "51017276-cc31-4215-851e-d73105bafdaf",
        "tags" : [
        ]
      },
      {
        "id" : "de0b3901-a8f5-48b1-8034-34628aa7034e",
        "parentId" : "b016dcce-5cfd-4b13-b690-c83096f6cb5b",
        "authorId" : "e2fdfb1c-53ec-47f6-832a-220b9ccbe451",
        "body" : "excellent. thank you!",
        "createdAt" : "2018-12-07T01:52:07Z",
        "updatedAt" : "2018-12-07T01:52:08Z",
        "lastEditedBy" : "e2fdfb1c-53ec-47f6-832a-220b9ccbe451",
        "tags" : [
        ]
      }
    ],
    "commit" : "54e581930c719460263aef501a8b92239a577307",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +118,122 @@\n// GetBootTime returns the time at which the machine was started, truncated to the nearest second\nfunc GetBootTime() (time.Time, error) {\n\tcurrentTime := time.Now()\n\toutput, _, err := tickCount.Call()"
  }
]