[
  {
    "id" : "96071eb8-3606-49f5-81c1-fb0bea5a2d62",
    "prId" : 47856,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/47856#pullrequestreview-45695386",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dda68ec9-7c99-4f82-90e5-258a5a21b9f6",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "also need to make sure the existing csr object actually matches (subject, usages, and private key), and if it doesn't match, I'm not really sure what the kubelet would do... hard fail, I guess",
        "createdAt" : "2017-06-21T18:18:22Z",
        "updatedAt" : "2017-06-22T21:45:43Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "c4d9c26b-706e-4840-80a7-43f869c6d818",
        "parentId" : "dda68ec9-7c99-4f82-90e5-258a5a21b9f6",
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "Done.",
        "createdAt" : "2017-06-22T11:46:44Z",
        "updatedAt" : "2017-06-22T21:45:43Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      }
    ],
    "commit" : "627c414c1bfffe77567e2f335c7d4ae68a18f665",
    "line" : 96,
    "diffHunk" : "@@ -1,1 +96,100 @@\tcase errors.IsAlreadyExists(err):\n\t\tglog.Infof(\"csr for this node already exists, reusing\")\n\t\treq, err = client.Get(name, metav1.GetOptions{})\n\t\tif err != nil {\n\t\t\treturn nil, fmt.Errorf(\"cannot retrieve certificate signing request: %v\", err)"
  },
  {
    "id" : "d2f91c86-e2fe-42cc-b33c-1c83037af178",
    "prId" : 47856,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/47856#pullrequestreview-45748587",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "322747b4-e543-4592-b730-e49087755f77",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "@jcbsmpsn is this function used for client cert rotation? If so, this will reuse an existing CSR and not request a new cert. if we're using this from the rotation code, we need to be able to pass in an optional value to add to the hash to produce a new stable CSR name (I'd probably pass in the serial number or expiration date or some attribute of the current certificate)",
        "createdAt" : "2017-06-22T12:23:09Z",
        "updatedAt" : "2017-06-22T21:45:43Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "e20305e1-37b2-4aeb-8c2b-d11da843089e",
        "parentId" : "322747b4-e543-4592-b730-e49087755f77",
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "The private key should change, changing the hash.",
        "createdAt" : "2017-06-22T13:13:57Z",
        "updatedAt" : "2017-06-22T21:45:43Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      },
      {
        "id" : "8b65b9dd-4917-4879-a843-bea6f322376e",
        "parentId" : "322747b4-e543-4592-b730-e49087755f77",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "ah, right",
        "createdAt" : "2017-06-22T13:41:23Z",
        "updatedAt" : "2017-06-22T21:45:43Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "74b3e626-12e1-487f-be18-f4a3c5e2d163",
        "parentId" : "322747b4-e543-4592-b730-e49087755f77",
        "authorId" : "b8d9ba23-8a1c-44a6-afe2-8ac9498838bb",
        "body" : "This function is not being used for the cert rotation. The code path is slightly different as rotation starts from a template rather than constructing the attributes of the CSR.",
        "createdAt" : "2017-06-22T14:50:24Z",
        "updatedAt" : "2017-06-22T21:45:43Z",
        "lastEditedBy" : "b8d9ba23-8a1c-44a6-afe2-8ac9498838bb",
        "tags" : [
        ]
      },
      {
        "id" : "2ef80dc9-bc0d-474c-8f67-be8b36a48c5e",
        "parentId" : "322747b4-e543-4592-b730-e49087755f77",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "ok, and since every rotation attempt uses a new key, reentrancy isn't as important (though the switch to WatchUntil would be good for it to pick up in 1.8)",
        "createdAt" : "2017-06-22T15:00:08Z",
        "updatedAt" : "2017-06-22T21:45:43Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "627c414c1bfffe77567e2f335c7d4ae68a18f665",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +48,52 @@// will return an error. This is intended for use on nodes (kubelet and\n// kubeadm).\nfunc RequestNodeCertificate(client certificatesclient.CertificateSigningRequestInterface, privateKeyData []byte, nodeName types.NodeName) (certData []byte, err error) {\n\tsubject := &pkix.Name{\n\t\tOrganization: []string{\"system:nodes\"},"
  }
]