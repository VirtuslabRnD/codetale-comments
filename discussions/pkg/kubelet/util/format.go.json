[
  {
    "id" : "dfc32692-163e-40f9-bd64-a5210f769c08",
    "prId" : 10320,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f8a4acff-9ff8-4c7c-b757-bd0e622f424d",
        "parentId" : null,
        "authorId" : "a6409368-42e0-44a9-bf79-9d3042ac3b65",
        "body" : "Move the below methods to pkg/util? \n",
        "createdAt" : "2015-06-25T06:15:45Z",
        "updatedAt" : "2015-06-25T06:15:45Z",
        "lastEditedBy" : "a6409368-42e0-44a9-bf79-9d3042ac3b65",
        "tags" : [
        ]
      },
      {
        "id" : "4ac9e952-e7e6-4402-951f-f5ff98feaab4",
        "parentId" : "f8a4acff-9ff8-4c7c-b757-bd0e622f424d",
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "pkg/util cannot import pkg/types/api:\n\"Package util may not depend on any other package in the Kubernetes\"\n\nI could move it to pkg/api, but I'm less inclined to do that as these functions are not general enough. I think the first step is to migrate all kubelet logging messages to use this new package (so that they are consistent), then we can consider moving this code to a more general place, and/or merging with other code. For example, kubectl use NamespacedType for printing, which is a bit cumbersome to use in a one-line logging message.\n",
        "createdAt" : "2015-06-25T17:29:36Z",
        "updatedAt" : "2015-06-25T17:29:36Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "571f59cf-2fc5-426d-b6b7-105dea89548e",
        "parentId" : "f8a4acff-9ff8-4c7c-b757-bd0e622f424d",
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "@dchen1107, what do you think?\n",
        "createdAt" : "2015-06-30T17:31:56Z",
        "updatedAt" : "2015-06-30T17:31:56Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "56de6c4a-e125-4f66-bc22-8784b537eeaa",
        "parentId" : "f8a4acff-9ff8-4c7c-b757-bd0e622f424d",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "pkg/util should not be a monolith anyway, but this is OK for now.\n",
        "createdAt" : "2015-07-01T06:43:18Z",
        "updatedAt" : "2015-07-01T06:43:18Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "f7fd7e9687e5f3e7c38fb423b099604de828717e",
    "line" : 2,
    "diffHunk" : "@@ -1,1 +0,4 @@/*\nCopyright 2015 The Kubernetes Authors All rights reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");"
  },
  {
    "id" : "ddbd376d-0be2-4e27-af12-17727240784c",
    "prId" : 10320,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b0ba69af-37a0-436a-afe1-612d8f7d9ccf",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Everywhere else we use the format namespace/name. Is there a reason for the reverse order and _?\n",
        "createdAt" : "2015-07-01T20:35:55Z",
        "updatedAt" : "2015-07-01T20:35:55Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "3939088a-d51a-4531-8158-ae1262d0a255",
        "parentId" : "b0ba69af-37a0-436a-afe1-612d8f7d9ccf",
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "The `podFullName` (name_namespace) is used in many places in kubelet (logging or not). I thought I would preserve this convention for ease of grepping until we audit everything and switch for good.\n",
        "createdAt" : "2015-07-01T20:50:11Z",
        "updatedAt" : "2015-07-01T20:50:11Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "f7fd7e9687e5f3e7c38fb423b099604de828717e",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +31,35 @@\t// Use underscore as the delimiter because it is not allowed in pod name\n\t// (DNS subdomain format), while allowed in the container name format.\n\treturn fmt.Sprintf(\"%s_%s\", pod.Name, pod.Namespace)\n}\n"
  }
]