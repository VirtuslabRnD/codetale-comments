[
  {
    "id" : "c1ba3c23-5b38-448e-a4e8-fa895e89a952",
    "prId" : 63314,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/63314#pullrequestreview-120358427",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7008c499-668e-4d48-bd9c-ad1272f2dfe1",
        "parentId" : null,
        "authorId" : "d2b16581-e7e9-48b8-9f76-6f6bcb9ec300",
        "body" : "I would prefer having Error and SyncError functions behave similarly, and I prefer qualifying the error.  I.E.\r\n`SetLoadError`\r\n`ClearLoadError`\r\n`SetSyncError`\r\n`ClearSyncError`\r\nOr just `Set...Error` functions.\r\n\r\nThe fact that we store the Load error in the status, and override it with the sync error is an implementation detail. (You dont need to call it load error.  It is just what I picked since it comes from loadConfig(assigned).)",
        "createdAt" : "2018-05-15T16:27:23Z",
        "updatedAt" : "2018-05-15T18:25:25Z",
        "lastEditedBy" : "d2b16581-e7e9-48b8-9f76-6f6bcb9ec300",
        "tags" : [
        ]
      },
      {
        "id" : "8c4177a3-7e91-438c-871c-bd66d30bd491",
        "parentId" : "7008c499-668e-4d48-bd9c-ad1272f2dfe1",
        "authorId" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "body" : "I could see renaming `SetSyncError` to something like `SetTmpError`. I don't think the status manager should assume anything about the context of the base error, which is why I just stuck with `SetError`.",
        "createdAt" : "2018-05-15T17:29:33Z",
        "updatedAt" : "2018-05-15T18:25:25Z",
        "lastEditedBy" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "tags" : [
        ]
      },
      {
        "id" : "8aaa531b-7ae1-4cb8-954e-291482e0e08e",
        "parentId" : "7008c499-668e-4d48-bd9c-ad1272f2dfe1",
        "authorId" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "body" : "Updated naming, and simplified to just `SetError` and `SetErrorOverride`.",
        "createdAt" : "2018-05-15T18:25:56Z",
        "updatedAt" : "2018-05-15T18:25:56Z",
        "lastEditedBy" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "tags" : [
        ]
      }
    ],
    "commit" : "fcc1f8e7b6f457940f75943638a83a1a26405358",
    "line" : 115,
    "diffHunk" : "@@ -1,1 +59,63 @@\tSetLastKnownGood(source *apiv1.NodeConfigSource)\n\t// SetError sets the error associated with the status\n\tSetError(err string)\n\t// SetErrorOverride sets an error that overrides the base error set by SetError.\n\t// If the override is set to the empty string, the base error is reported in"
  },
  {
    "id" : "47cddffd-101c-4476-9e46-f9a5858ca54d",
    "prId" : 63221,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/63221#pullrequestreview-121903715",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "628f5914-48ef-4ff8-80e4-04c9379b331d",
        "parentId" : null,
        "authorId" : "d2b16581-e7e9-48b8-9f76-6f6bcb9ec300",
        "body" : "I realize this isn't part of this PR, but is there a reason you chose to use a periodic, jittered check rather than just a long-running loop?\r\n`for _ := range s.syncCh {`\r\n`    utillog.Infof(\"updating Node.Status.Config\")`\r\n` ...`\r\n`}`",
        "createdAt" : "2018-05-21T18:41:23Z",
        "updatedAt" : "2018-05-21T18:41:23Z",
        "lastEditedBy" : "d2b16581-e7e9-48b8-9f76-6f6bcb9ec300",
        "tags" : [
        ]
      }
    ],
    "commit" : "b5648c3f61ef168e6a1c9c7b682745e28145dc1e",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +143,147 @@\tdefault:\n\t\t// no work to be done, return\n\t\treturn\n\t}\n"
  },
  {
    "id" : "ee66abc0-86e8-4df7-8bce-c4b2bfa6bfbd",
    "prId" : 57524,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/57524#pullrequestreview-86530740",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b87b6b6d-b5a9-4f12-ae11-8bebbadab24d",
        "parentId" : null,
        "authorId" : "d2b16581-e7e9-48b8-9f76-6f6bcb9ec300",
        "body" : "any reason to change UID `%q` to `%s`?\r\nJust curious :)",
        "createdAt" : "2018-01-02T23:20:39Z",
        "updatedAt" : "2018-01-04T00:06:09Z",
        "lastEditedBy" : "d2b16581-e7e9-48b8-9f76-6f6bcb9ec300",
        "tags" : [
        ]
      },
      {
        "id" : "33b66710-a093-483f-85b1-87801764d049",
        "parentId" : "b87b6b6d-b5a9-4f12-ae11-8bebbadab24d",
        "authorId" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "body" : "just that `3k2ld02-20394lrfc` looks a little cleaner than `\"3k2ld02-20394lrfc\"`",
        "createdAt" : "2018-01-03T23:57:10Z",
        "updatedAt" : "2018-01-04T00:06:09Z",
        "lastEditedBy" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "tags" : [
        ]
      },
      {
        "id" : "a35214d2-382e-4269-8f27-4e02816c076b",
        "parentId" : "b87b6b6d-b5a9-4f12-ae11-8bebbadab24d",
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "`%q` is useful when we expect the output might be an empty string. I guess in this case, it doesn't matter much.",
        "createdAt" : "2018-01-04T00:34:59Z",
        "updatedAt" : "2018-01-04T00:39:02Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "dd74a397009d35c3f9a49f44b6eb0cf3fa53395e",
    "line" : 61,
    "diffHunk" : "@@ -1,1 +87,91 @@\tFailSyncReasonReset = \"failed to reset to local config\"\n\t// FailSyncReasonCheckpointExistenceFmt is used when we can't determine if a checkpoint already exists, e.g. due to filesystem issues\n\tFailSyncReasonCheckpointExistenceFmt = \"failed to determine whether object %s with UID %s was already checkpointed\"\n\t// FailSyncReasonSaveCheckpointFmt is used when we can't save a checkpoint, e.g. due to filesystem issues\n\tFailSyncReasonSaveCheckpointFmt = \"failed to save config checkpoint for object %s with UID %s\""
  }
]