[
  {
    "id" : "5cad1af9-7bd9-459c-868f-8ab7963f2563",
    "prId" : 63221,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/63221#pullrequestreview-121896502",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ffe17ad4-e531-4134-ab35-686a0837d2d7",
        "parentId" : null,
        "authorId" : "d2b16581-e7e9-48b8-9f76-6f6bcb9ec300",
        "body" : "This is slightly confusing to me.  Why are we overwriting the UID and ResourceVersion of one ConfigMap with the UID and ResourceVersion of another ConfigMap?  Do we use the rest of the Stored ConfigMap, or just these fields?  If we only use those two fields, why store the whole thing, and if we use the whole configmap, it seems potentially confusing to insert a different UID and ResourceVersion...",
        "createdAt" : "2018-05-21T02:20:02Z",
        "updatedAt" : "2018-05-21T16:04:12Z",
        "lastEditedBy" : "d2b16581-e7e9-48b8-9f76-6f6bcb9ec300",
        "tags" : [
        ]
      },
      {
        "id" : "bb20b23e-c8c2-4eca-887d-9b0164151364",
        "parentId" : "ffe17ad4-e531-4134-ab35-686a0837d2d7",
        "authorId" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "body" : "`r.source.ConfigMap` is a `ConfigMapNodeConfigSource`, we are resolving the reference (namespace, name, kubeletConfigKey) by adding the additional details (uid, resourceVersion) that identify a version of that resource",
        "createdAt" : "2018-05-21T14:18:27Z",
        "updatedAt" : "2018-05-21T16:04:12Z",
        "lastEditedBy" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "tags" : [
        ]
      },
      {
        "id" : "695d0d3a-600a-42c7-b42a-3dc7303cb65f",
        "parentId" : "ffe17ad4-e531-4134-ab35-686a0837d2d7",
        "authorId" : "d2b16581-e7e9-48b8-9f76-6f6bcb9ec300",
        "body" : "oh, right.  I forgot it wasn't an actual configmap.",
        "createdAt" : "2018-05-21T18:19:28Z",
        "updatedAt" : "2018-05-21T18:19:28Z",
        "lastEditedBy" : "d2b16581-e7e9-48b8-9f76-6f6bcb9ec300",
        "tags" : [
        ]
      }
    ],
    "commit" : "b5648c3f61ef168e6a1c9c7b682745e28145dc1e",
    "line" : 148,
    "diffHunk" : "@@ -1,1 +207,211 @@\t}\n\t// update internal UID and ResourceVersion based on latest ConfigMap\n\tr.source.ConfigMap.UID = cm.UID\n\tr.source.ConfigMap.ResourceVersion = cm.ResourceVersion\n\treturn payload, \"\", nil"
  },
  {
    "id" : "53ae9e8b-e996-4da2-b461-4800feaff806",
    "prId" : 59847,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/59847#pullrequestreview-118929877",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fe822a43-aa47-4b2f-a30a-6639874d5bd6",
        "parentId" : null,
        "authorId" : "d2b16581-e7e9-48b8-9f76-6f6bcb9ec300",
        "body" : "should this be `kubeletconfiginternal.SerializedNodeConfigSource`?",
        "createdAt" : "2018-05-09T22:20:07Z",
        "updatedAt" : "2018-05-09T22:37:12Z",
        "lastEditedBy" : "d2b16581-e7e9-48b8-9f76-6f6bcb9ec300",
        "tags" : [
        ]
      },
      {
        "id" : "e67a26d7-7d0a-44c8-a145-96f8ee713b83",
        "parentId" : "fe822a43-aa47-4b2f-a30a-6639874d5bd6",
        "authorId" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "body" : "No. The external version is what we load; the decoder automatically converts it to the internal version as part of the decoding process.",
        "createdAt" : "2018-05-09T22:44:43Z",
        "updatedAt" : "2018-05-09T22:44:43Z",
        "lastEditedBy" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "tags" : [
        ]
      }
    ],
    "commit" : "c41cf55a2cdcb0e678be719c8909ea193b72ca84",
    "line" : 70,
    "diffHunk" : "@@ -1,1 +94,98 @@\t}\n\n\t// for now we assume we are trying to load an kubeletconfigv1beta1.SerializedNodeConfigSource,\n\t// this may need to be extended if e.g. a new version of the api is born\n\tcs, ok := obj.(*kubeletconfiginternal.SerializedNodeConfigSource)"
  },
  {
    "id" : "d80b2548-b7fd-48c5-b78a-d53533d17d22",
    "prId" : 57524,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/57524#pullrequestreview-86531629",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1dc638c1-d046-47bd-ba30-418db2a22614",
        "parentId" : null,
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "To refresh my memory, we don't reuse the names for the configmaps, do we? Just making sure that the SelfLink provides sufficient information.",
        "createdAt" : "2018-01-04T00:38:52Z",
        "updatedAt" : "2018-01-04T00:39:02Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "ee26249d-4a0f-4d97-80c4-04c16564384d",
        "parentId" : "1dc638c1-d046-47bd-ba30-418db2a22614",
        "authorId" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "body" : "Right, we don't reuse names.",
        "createdAt" : "2018-01-04T00:42:27Z",
        "updatedAt" : "2018-01-04T00:42:27Z",
        "lastEditedBy" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "tags" : [
        ]
      }
    ],
    "commit" : "dd74a397009d35c3f9a49f44b6eb0cf3fa53395e",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +129,133 @@\tcm, err := client.CoreV1().ConfigMaps(r.source.ConfigMapRef.Namespace).Get(r.source.ConfigMapRef.Name, metav1.GetOptions{})\n\tif err != nil {\n\t\treason = fmt.Sprintf(status.FailSyncReasonDownloadFmt, r.APIPath())\n\t\treturn nil, reason, fmt.Errorf(\"%s, error: %v\", reason, err)\n\t}"
  }
]