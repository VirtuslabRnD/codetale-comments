[
  {
    "id" : "50196ce8-b59c-426b-b86b-0508c237cc0a",
    "prId" : 99880,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/99880#pullrequestreview-616688811",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "26a1d740-9db4-4e29-8fd8-e2ac2aed2741",
        "parentId" : null,
        "authorId" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "body" : "should this be lazily populated on demand? Is it correct understanding that this is done here to reuse in multiple events, but it will not be used if those events are all starts of containers?",
        "createdAt" : "2021-03-19T17:38:55Z",
        "updatedAt" : "2021-04-20T00:20:12Z",
        "lastEditedBy" : "85d51570-e06e-4b3f-a869-f5f820e49119",
        "tags" : [
        ]
      },
      {
        "id" : "6e362c15-5a27-4643-9028-6adf69151cc7",
        "parentId" : "26a1d740-9db4-4e29-8fd8-e2ac2aed2741",
        "authorId" : "863fcbbe-3076-4b30-bd70-f903b9c1ac7e",
        "body" : "you are right. Will change it to lazily populated only it occurs containerDied event for the first time. ",
        "createdAt" : "2021-03-19T18:28:05Z",
        "updatedAt" : "2021-04-20T00:20:12Z",
        "lastEditedBy" : "863fcbbe-3076-4b30-bd70-f903b9c1ac7e",
        "tags" : [
        ]
      }
    ],
    "commit" : "5f8dd349d1db2860c7e8174fa1c20f6b2e2a56bc",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +267,271 @@\n\t\t// Map from containerId to exit code; used as a temporary cache for lookup\n\t\tcontainerExitCode := make(map[string]int)\n\n\t\tfor i := range events {"
  },
  {
    "id" : "2e53761e-2a39-4e44-b755-298d626af3f9",
    "prId" : 85983,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/85983#pullrequestreview-411236532",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5f75c329-2422-41d6-82bf-43c80e11924c",
        "parentId" : null,
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "just noting how this regressed:\r\n\r\nhttps://github.com/kubernetes/kubernetes/commit/c02d49d775b4dc960f52af1f5295642c07947ca7\r\n\r\nmoved a metric that was sourced from the kubelet runtime cache to now be sourced by the pleg directly.",
        "createdAt" : "2020-05-13T19:32:35Z",
        "updatedAt" : "2020-07-31T08:36:12Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      }
    ],
    "commit" : "a724481f5c5bc9a80dfed44fb69fe17f6beb39fb",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +435,439 @@\t\t}\n\n\t\tsandboxes := pod.Sandboxes\n\n\t\tfor _, sandbox := range sandboxes {"
  },
  {
    "id" : "c09db91e-64c0-4a64-97b3-1a094c139211",
    "prId" : 81573,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/81573#pullrequestreview-282162214",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9dbce6d2-cf9f-43f8-ab13-73f4b9759085",
        "parentId" : null,
        "authorId" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "body" : "Should Sandboxes be covered (in a new GaugeVec) ?",
        "createdAt" : "2019-08-30T09:17:35Z",
        "updatedAt" : "2019-08-30T09:31:18Z",
        "lastEditedBy" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "tags" : [
        ]
      },
      {
        "id" : "87fb8354-ab07-4581-8e57-071231cf2766",
        "parentId" : "9dbce6d2-cf9f-43f8-ab13-73f4b9759085",
        "authorId" : "1f125822-480b-4026-aed5-3aaea37d3a99",
        "body" : "Makes sense introducing it in a new GaugeVec(`running_initcontainer_count` something like this maybe)\r\n@logicalhan what do you think?",
        "createdAt" : "2019-08-30T09:27:04Z",
        "updatedAt" : "2019-08-30T09:27:04Z",
        "lastEditedBy" : "1f125822-480b-4026-aed5-3aaea37d3a99",
        "tags" : [
        ]
      },
      {
        "id" : "d4412d33-7694-406b-a9ed-dca3a922aa77",
        "parentId" : "9dbce6d2-cf9f-43f8-ab13-73f4b9759085",
        "authorId" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "body" : "I found that container.Pod doesn't expose initcontainers.\r\nEdited comment above for Sandboxes.\r\n\r\nIf this makes sense, I can send out a PR.",
        "createdAt" : "2019-08-30T09:33:30Z",
        "updatedAt" : "2019-08-30T09:33:30Z",
        "lastEditedBy" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "tags" : [
        ]
      },
      {
        "id" : "653c376e-b466-41e3-92c7-a624e45ef0ef",
        "parentId" : "9dbce6d2-cf9f-43f8-ab13-73f4b9759085",
        "authorId" : "d2b16581-e7e9-48b8-9f76-6f6bcb9ec300",
        "body" : "We could add this, although i'm not 100% sure what the value of it would be.  It should be exactly equal to running pod count except in rare scenarios when the kubelet is recreating a sandbox.  But i'm not entirely sure why knowing that a sandbox is being recreated is useful... What did you intend to use it for?",
        "createdAt" : "2019-08-30T17:30:29Z",
        "updatedAt" : "2019-08-30T17:30:30Z",
        "lastEditedBy" : "d2b16581-e7e9-48b8-9f76-6f6bcb9ec300",
        "tags" : [
        ]
      },
      {
        "id" : "aa96d1f5-dd90-4776-862d-d581d2a247d1",
        "parentId" : "9dbce6d2-cf9f-43f8-ab13-73f4b9759085",
        "authorId" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "body" : "Assuming the sandbox count settles down after the recreation, probably we don't need the extra gauge.",
        "createdAt" : "2019-08-30T17:35:47Z",
        "updatedAt" : "2019-08-30T17:35:47Z",
        "lastEditedBy" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "c02d49d775b4dc960f52af1f5295642c07947ca7",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +441,445 @@\n\tfor _, pod := range pods {\n\t\tcontainers := pod.Containers\n\t\tfor _, container := range containers {\n\t\t\t// update the corresponding \"container_state\" in map to set value for the gaugeVec metrics"
  },
  {
    "id" : "03401495-1744-4516-b581-6d0815c8463b",
    "prId" : 81206,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/81206#pullrequestreview-277957628",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "666747bc-afa8-473a-8d24-30f6b8735ef1",
        "parentId" : null,
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "Why removing the condition?",
        "createdAt" : "2019-08-21T17:08:52Z",
        "updatedAt" : "2019-08-21T17:59:59Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "3acfceba-2539-4cc2-87af-392df44c5e66",
        "parentId" : "666747bc-afa8-473a-8d24-30f6b8735ef1",
        "authorId" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "body" : "`delete` is a no-op if the element isn't in the map, so the condition is redundant.",
        "createdAt" : "2019-08-21T17:39:23Z",
        "updatedAt" : "2019-08-21T17:59:59Z",
        "lastEditedBy" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "tags" : [
        ]
      }
    ],
    "commit" : "b3f8671c6199666cde82d872fa482af49061d5a5",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +254,258 @@\n\t\t\t\tcontinue\n\t\t\t} else {\n\t\t\t\t// this pod was in the list to reinspect and we did so because it had events, so remove it\n\t\t\t\t// from the list (we don't want the reinspection code below to inspect it a second time in"
  },
  {
    "id" : "e4dcefeb-edf8-480f-a858-abf7f1e3ef61",
    "prId" : 31322,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8f02b3ae-3245-4aa5-a651-2348b39512bc",
        "parentId" : null,
        "authorId" : "0d2d9977-2328-4ade-b6a6-ba60c2dd5bd5",
        "body" : "missing dot compared to your style in other comments\n",
        "createdAt" : "2016-08-31T14:21:56Z",
        "updatedAt" : "2016-09-08T12:58:02Z",
        "lastEditedBy" : "0d2d9977-2328-4ade-b6a6-ba60c2dd5bd5",
        "tags" : [
        ]
      },
      {
        "id" : "a0c62af6-83e3-4be0-a268-69034864d9ba",
        "parentId" : "8f02b3ae-3245-4aa5-a651-2348b39512bc",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "This is part of #31395. Maybe @yujuhong could fix this in #31395?\n",
        "createdAt" : "2016-08-31T14:42:11Z",
        "updatedAt" : "2016-09-08T12:58:02Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      }
    ],
    "commit" : "277070e267e0ca1d75fd0794434e57e45aa2c212",
    "line" : null,
    "diffHunk" : "@@ -1,1 +296,300 @@\t\t\tcontainers = append(containers, c)\n\t\t}\n\t\t// Update sandboxes as containers\n\t\t// TODO: keep track of sandboxes explicitly.\n\t\tfor _, c := range p.Sandboxes {"
  },
  {
    "id" : "37708458-2903-4f8d-8476-46b7c6c15977",
    "prId" : 17700,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0f89b098-51cc-4d89-8c79-6a9c83f1cbae",
        "parentId" : null,
        "authorId" : "227eb550-8b08-4420-9a78-279f840bd8de",
        "body" : "remove this?\n",
        "createdAt" : "2016-01-10T07:29:25Z",
        "updatedAt" : "2016-01-13T18:20:05Z",
        "lastEditedBy" : "227eb550-8b08-4420-9a78-279f840bd8de",
        "tags" : [
        ]
      },
      {
        "id" : "723441b0-afb5-4145-a907-637d8bf0bbfa",
        "parentId" : "0f89b098-51cc-4d89-8c79-6a9c83f1cbae",
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "remove the tiemstamp? The timestamp needs to be _before_ we query the container runtime to be safe.\n",
        "createdAt" : "2016-01-11T17:39:40Z",
        "updatedAt" : "2016-01-13T18:20:05Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "eab30892-5393-4d26-9a07-69792f60d696",
        "parentId" : "0f89b098-51cc-4d89-8c79-6a9c83f1cbae",
        "authorId" : "227eb550-8b08-4420-9a78-279f840bd8de",
        "body" : "you are right\n",
        "createdAt" : "2016-01-11T23:41:40Z",
        "updatedAt" : "2016-01-13T18:20:05Z",
        "lastEditedBy" : "227eb550-8b08-4420-9a78-279f840bd8de",
        "tags" : [
        ]
      }
    ],
    "commit" : "b56ed1a8c22263a1760aaeecee8c0768ac165dce",
    "line" : null,
    "diffHunk" : "@@ -1,1 +259,263 @@\t\treturn nil\n\t}\n\ttimestamp := time.Now()\n\t// TODO: Consider adding a new runtime method\n\t// GetPodStatus(pod *kubecontainer.Pod) so that Docker can avoid listing"
  },
  {
    "id" : "a29ecb07-6f71-460e-96e2-ba20cc8021aa",
    "prId" : 13571,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ff83530e-6dd5-4cfe-bb7d-e2e80aaa493e",
        "parentId" : null,
        "authorId" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "body" : "With a single channel, it means only a single component can be listening to the PLEs, right? It would be useful for the ProbeManager (work in progress by me) to be able to listen for the Container{Started,Stopped} events. What if each call to Watch created a new channel, which the \"main\" channel cloned events into? It would add a bit more complexity around the bookkeeping of closing channels & preventing channels from backing up though.\n",
        "createdAt" : "2015-09-04T21:10:51Z",
        "updatedAt" : "2015-11-13T17:57:35Z",
        "lastEditedBy" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "tags" : [
        ]
      },
      {
        "id" : "7ef11a78-3615-4f7d-bf62-cb4e4f5780d2",
        "parentId" : "ff83530e-6dd5-4cfe-bb7d-e2e80aaa493e",
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "Yes, I had a TODO to extend this to multiple channels, but it's still a TODO :)\nI think multi-channel support can wait a little bit, and help is always welcome.\n",
        "createdAt" : "2015-09-09T20:30:05Z",
        "updatedAt" : "2015-11-13T17:57:35Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "ac778e8203e1f6ea43555152c48f130063cc20c2",
    "line" : null,
    "diffHunk" : "@@ -1,1 +72,76 @@// TODO: support multiple subscribers.\nfunc (g *GenericPLEG) Watch() chan *PodLifecycleEvent {\n\treturn g.eventChannel\n}\n"
  },
  {
    "id" : "c97e57b9-602e-49ce-8afd-2d4835411ba5",
    "prId" : 13571,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "09b5531c-bee8-44e4-a1eb-cea3c20f061e",
        "parentId" : null,
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "What is a pleg? I know it. May be add some package comments.\n",
        "createdAt" : "2015-10-07T03:02:36Z",
        "updatedAt" : "2015-11-13T17:57:35Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      },
      {
        "id" : "66ad132a-30d8-4940-a522-3d6b4573eb13",
        "parentId" : "09b5531c-bee8-44e4-a1eb-cea3c20f061e",
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "Done. Added \"doc.go\"\n",
        "createdAt" : "2015-10-07T23:26:01Z",
        "updatedAt" : "2015-11-13T17:57:35Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "ac778e8203e1f6ea43555152c48f130063cc20c2",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +15,19 @@*/\n\npackage pleg\n\nimport ("
  },
  {
    "id" : "d3c53094-480f-4e37-b505-a18e0e5df897",
    "prId" : 13571,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f7879b19-8be4-4d7b-8907-3b5e5a9a8531",
        "parentId" : null,
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "What if we update other internal modules to use a PLEG based cache instead of reaching out the runtime directly? Is this something that you are already planning on doing?\n",
        "createdAt" : "2015-11-11T23:49:04Z",
        "updatedAt" : "2015-11-13T17:57:35Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      },
      {
        "id" : "72657ad1-6cb5-4146-afda-b7183807645e",
        "parentId" : "f7879b19-8be4-4d7b-8907-3b5e5a9a8531",
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "Yes, but instead of providing a cache with only output of ListContainers, I plan to add a cache that would store the inspect results as well. See #12619 for details.\n",
        "createdAt" : "2015-11-12T19:16:20Z",
        "updatedAt" : "2015-11-13T17:57:35Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "068f75b5-0d5a-41da-b524-126fb7dc896c",
        "parentId" : "f7879b19-8be4-4d7b-8907-3b5e5a9a8531",
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "Yes, as we discussed in the team meeting, that's the next step :-)\n",
        "createdAt" : "2015-11-12T19:55:22Z",
        "updatedAt" : "2015-11-13T17:57:35Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "ac778e8203e1f6ea43555152c48f130063cc20c2",
    "line" : 43,
    "diffHunk" : "@@ -1,1 +41,45 @@// guarantee that kubelet can handle missing container events, it is\n// recommended to set the relist period short and have an auxiliary, longer\n// periodic sync in kubelet as the safety net.\ntype GenericPLEG struct {\n\t// The period for relisting."
  }
]