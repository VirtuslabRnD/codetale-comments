[
  {
    "id" : "9b90e4b0-26b8-424e-9fd6-2ca49323d5d2",
    "prId" : 32627,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/32627#pullrequestreview-14753",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7996691f-886a-4e36-ad56-b11df3435b6b",
        "parentId" : null,
        "authorId" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "body" : "Make a copy of this test case, change the value in RepoDigests so it's not a match, and the test will pass with the \"double digest\" line, and fail once you change one `digest` to `d`.\n",
        "createdAt" : "2016-09-14T17:32:20Z",
        "updatedAt" : "2016-09-14T18:13:31Z",
        "lastEditedBy" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "tags" : [
        ]
      },
      {
        "id" : "39d0475a-c478-4dff-b06c-1347ba7cf5a7",
        "parentId" : "7996691f-886a-4e36-ad56-b11df3435b6b",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "That test did fail.\n\nOn Wed, Sep 14, 2016 at 1:32 PM, Andy Goldstein notifications@github.com\nwrote:\n\n> In pkg/kubelet/dockertools/docker_test.go\n> https://github.com/kubernetes/kubernetes/pull/32627#discussion_r78795950\n> :\n> \n> > -           Inspected: dockertypes.ImageInspect{\n> > -               ID: \"sha256:2208f7a29005d226d1ee33a63e33af1f47af6156c740d7d23c7948e8d282d53d\",\n> > -           },\n> > -           Image:  \"myimage@sha256:0000f7a29005d226d1ee33a63e33af1f47af6156c740d7d23c7948e8d282d53d\",\n> > -           Output: false,\n> > -       },\n> > -       {\n> > -           // invalid digest is ignored\n> > -           Inspected: dockertypes.ImageInspect{\n> > -               ID: \"sha256:unparseable\",\n> > -           },\n> > -           Image:  \"myimage@sha256:unparseable\",\n> > -           Output: false,\n> > -       },\n> > -       {\n> > -           // v1 schema images can be pulled in one format and returned in another\n> \n> Make a copy of this test case, change the value in RepoDigests so it's not\n> a match, and the test will pass with the \"double digest\" line, and fail\n> once you change one digest to d.\n> \n> —\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> https://github.com/kubernetes/kubernetes/pull/32627/files/95cee6e53b91be6c7b5e37939c6374a37aa7e505#r78795950,\n> or mute the thread\n> https://github.com/notifications/unsubscribe-auth/ABG_pxOA5fM_3Y3-oXQFj54-C86qFeMBks5qqC-ygaJpZM4J8SYk\n> .\n",
        "createdAt" : "2016-09-14T18:05:46Z",
        "updatedAt" : "2016-09-14T18:13:31Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "57e4ca60-0c58-4bba-9828-ec42b8808977",
        "parentId" : "7996691f-886a-4e36-ad56-b11df3435b6b",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Actually did not.  Fixing\n\nOn Wed, Sep 14, 2016 at 2:05 PM, Clayton Coleman ccoleman@redhat.com\nwrote:\n\n> That test did fail.\n> \n> On Wed, Sep 14, 2016 at 1:32 PM, Andy Goldstein notifications@github.com\n> wrote:\n> \n> > In pkg/kubelet/dockertools/docker_test.go\n> > https://github.com/kubernetes/kubernetes/pull/32627#discussion_r78795950\n> > :\n> > \n> > > -          Inspected: dockertypes.ImageInspect{\n> > > -              ID: \"sha256:2208f7a29005d226d1ee33a63e33af1f47af6156c740d7d23c7948e8d282d53d\",\n> > > -          },\n> > > -          Image:  \"myimage@sha256:0000f7a29005d226d1ee33a63e33af1f47af6156c740d7d23c7948e8d282d53d\",\n> > > -          Output: false,\n> > > -      },\n> > > -      {\n> > > -          // invalid digest is ignored\n> > > -          Inspected: dockertypes.ImageInspect{\n> > > -              ID: \"sha256:unparseable\",\n> > > -          },\n> > > -          Image:  \"myimage@sha256:unparseable\",\n> > > -          Output: false,\n> > > -      },\n> > > -      {\n> > > -          // v1 schema images can be pulled in one format and returned in another\n> > \n> > Make a copy of this test case, change the value in RepoDigests so it's\n> > not a match, and the test will pass with the \"double digest\" line, and fail\n> > once you change one digest to d.\n> > \n> > —\n> > You are receiving this because you authored the thread.\n> > Reply to this email directly, view it on GitHub\n> > https://github.com/kubernetes/kubernetes/pull/32627/files/95cee6e53b91be6c7b5e37939c6374a37aa7e505#r78795950,\n> > or mute the thread\n> > https://github.com/notifications/unsubscribe-auth/ABG_pxOA5fM_3Y3-oXQFj54-C86qFeMBks5qqC-ygaJpZM4J8SYk\n> > .\n",
        "createdAt" : "2016-09-14T18:08:29Z",
        "updatedAt" : "2016-09-14T18:13:31Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "3be405fc-cf29-41ee-981a-7e030f8277b2",
        "parentId" : "7996691f-886a-4e36-ad56-b11df3435b6b",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Added a hard fail\n",
        "createdAt" : "2016-09-14T18:15:25Z",
        "updatedAt" : "2016-09-14T18:15:25Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "4a48bf8375d12499efcf4eb4b2011e4c7e160ed7",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +227,231 @@\t\t},\n\t\t{\n\t\t\t// v1 schema images can be pulled in one format and returned in another\n\t\t\tInspected: dockertypes.ImageInspect{\n\t\t\t\tID:          \"sha256:9bbdf247c91345f0789c10f50a57e36a667af1189687ad1de88a6243d05a2227\","
  },
  {
    "id" : "2c5f7777-24e8-41e0-9d1a-d58dc6f45463",
    "prId" : 29526,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cbbd5ff0-3a08-4eaf-89bf-45515295967d",
        "parentId" : null,
        "authorId" : "4a6c4c9f-42c7-4b89-b4ff-53e56b69cd54",
        "body" : "Nit. You can replace 128, 64, and 64 with ext4MaxFileNameLen to avoid confusion if ext4MaxFileNameLen changes in the future.\n",
        "createdAt" : "2016-07-25T17:53:02Z",
        "updatedAt" : "2016-07-28T17:23:26Z",
        "lastEditedBy" : "4a6c4c9f-42c7-4b89-b4ff-53e56b69cd54",
        "tags" : [
        ]
      },
      {
        "id" : "efeef10f-34b5-433c-9a6d-df6fcb553935",
        "parentId" : "cbbd5ff0-3a08-4eaf-89bf-45515295967d",
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "The test is intentionally not using that value. I'd prefer the test to be independent of the implementation logic.\n",
        "createdAt" : "2016-07-28T15:22:31Z",
        "updatedAt" : "2016-07-28T17:23:26Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      }
    ],
    "commit" : "acc74fbaa999064ac9fa64709d4a3f0c277be837",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +817,821 @@\tas := assert.New(t)\n\tcontainerLogsDir := \"/foo/bar\"\n\tpodFullName := randStringBytes(128)\n\tcontainerName := randStringBytes(70)\n\tdockerId := randStringBytes(80)"
  },
  {
    "id" : "cd8d845b-86d3-4e97-8a7d-200c610e0220",
    "prId" : 29526,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "06d19e8b-3e3c-48e6-9520-1a8ba604b1c6",
        "parentId" : null,
        "authorId" : "4a6c4c9f-42c7-4b89-b4ff-53e56b69cd54",
        "body" : "Please put a comment on how 251 is derived or just calculate the length in the test.\n",
        "createdAt" : "2016-07-28T16:20:42Z",
        "updatedAt" : "2016-07-28T17:23:26Z",
        "lastEditedBy" : "4a6c4c9f-42c7-4b89-b4ff-53e56b69cd54",
        "tags" : [
        ]
      },
      {
        "id" : "50f293b7-f35b-4d8c-8d75-f6b1ed539f0a",
        "parentId" : "06d19e8b-3e3c-48e6-9520-1a8ba604b1c6",
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "Done\n",
        "createdAt" : "2016-07-28T17:26:30Z",
        "updatedAt" : "2016-07-28T17:26:30Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      }
    ],
    "commit" : "acc74fbaa999064ac9fa64709d4a3f0c277be837",
    "line" : null,
    "diffHunk" : "@@ -1,1 +821,825 @@\tdockerId := randStringBytes(80)\n\t// The file name cannot exceed 255 characters. Since .log suffix is required, the prefix cannot exceed 251 characters.\n\texpectedPath := path.Join(containerLogsDir, fmt.Sprintf(\"%s_%s-%s\", podFullName, containerName, dockerId)[:251]+\".log\")\n\tas.Equal(expectedPath, LogSymlink(containerLogsDir, podFullName, containerName, dockerId))\n}"
  },
  {
    "id" : "fef3f64b-b776-4f55-ba70-77eb481fce17",
    "prId" : 19837,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "988c1107-ee5f-4bf3-b65c-618c8a71d1ea",
        "parentId" : null,
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "nit: Why set to `\"\"` instead of the actual container name?\n",
        "createdAt" : "2016-06-22T00:04:55Z",
        "updatedAt" : "2016-07-15T01:40:21Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      },
      {
        "id" : "52990b16-049c-4b94-ba0f-11a4cbf679b9",
        "parentId" : "988c1107-ee5f-4bf3-b65c-618c8a71d1ea",
        "authorId" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "body" : "The tests in this commit originally depended on some code in `k8s.io/kubernetes/cmd/kubelet/app/options/options.go`, and now that code has moved to `k8s.io/kubernetes/pkg/apis/componentconfig/v1alpha1/defaults.go`. @mikedanese and I discussed whether we should just make the tests depend on `defaults.go`, or reduce the maintenance burden by passing empty strings. \n\nWe determined that:\n1. Changing the tests in this way didn't cause any of them to fail, so we aren't presently deriving coverage from having an accurate image name here. We therefore don't lose coverage with this change, but we do (very slightly) reduce the dependency tree, which is good. \n2. We will know if a future test requires an accurate image name, because such a test will fail without it. We can therefore drop the dependency without fear of accidentally missing coverage down the road. \n\nGiven these conditions, we figured it makes the most sense to just pass `\"\"`.\n",
        "createdAt" : "2016-06-22T15:20:07Z",
        "updatedAt" : "2016-07-15T01:40:21Z",
        "lastEditedBy" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "tags" : [
        ]
      }
    ],
    "commit" : "e52718bbc696e6b5ae8538be8b774771a150c6e4",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +653,657 @@\tnp, _ := network.InitNetworkPlugin([]network.NetworkPlugin{}, \"\", nettest.NewFakeHost(nil), componentconfig.HairpinNone, \"10.0.0.0/8\")\n\t// image back-off is set to nil, this test should not pull images\n\tcontainerManager := NewFakeDockerManager(fakeClient, &record.FakeRecorder{}, nil, nil, &cadvisorapi.MachineInfo{}, \"\", 0, 0, \"\", &containertest.FakeOS{}, np, nil, nil, nil)\n\tfor i, test := range tests {\n\t\tfakeClient.RunningContainerList = test.runningContainerList"
  },
  {
    "id" : "6df772c8-0455-456d-a356-91bb79558c59",
    "prId" : 13384,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a7df561d-4004-4591-8797-91bc5f7a6051",
        "parentId" : null,
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "The complexity of this check seems a bit much for me.\n\nMaybe it'd be easier to simply write the expected binding map, and `reflect.DeepEqual` the two?\n",
        "createdAt" : "2015-09-04T20:05:17Z",
        "updatedAt" : "2015-09-05T04:53:24Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "7b2e2e56493f0bae8a2a36e4509719151efa24bc",
    "line" : null,
    "diffHunk" : "@@ -1,1 +766,770 @@\n\t// interate the bindings by dockerPort, and check its portBindings\n\tfor dockerPort, portBindings := range bindings {\n\t\tswitch dockerPort {\n\t\tcase \"80/tcp\", \"443/tcp\", \"443/udp\", \"444/udp\", \"445/tcp\":"
  },
  {
    "id" : "c14f5d58-d137-4ae2-bba0-9ec28bbb8147",
    "prId" : 2831,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "275dab19-e44e-43e7-a5da-7c68b2564359",
        "parentId" : null,
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "newlines between functions.\n",
        "createdAt" : "2014-12-12T18:39:02Z",
        "updatedAt" : "2014-12-15T13:15:56Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "3afc9fffbad43c1d3bd14055c55d5d9892f84d7c",
    "line" : null,
    "diffHunk" : "@@ -1,1 +271,275 @@}\n\nfunc (f *imageTrackingDockerClient) InspectImage(name string) (image *docker.Image, err error) {\n\timage, err = f.FakeDockerClient.InspectImage(name)\n\tf.imageName = name"
  },
  {
    "id" : "3f0000c6-1d00-48c8-ab3c-d374023d09cc",
    "prId" : 2831,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f3b59997-2b4f-4ca4-98a5-043beb9e1fae",
        "parentId" : null,
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "here too.\n",
        "createdAt" : "2014-12-12T18:39:09Z",
        "updatedAt" : "2014-12-15T13:15:56Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "3afc9fffbad43c1d3bd14055c55d5d9892f84d7c",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +275,279 @@\tf.imageName = name\n\treturn\n}\n\nfunc TestIsImagePresent(t *testing.T) {"
  },
  {
    "id" : "b46cfdec-b768-4fed-8aa4-9cf99433d94c",
    "prId" : 1441,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e05b0fda-addc-4b42-b7b8-f7009f22f30b",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "I think we want a testcase that verifies the result of BuildDockerName for a few inputs.\n",
        "createdAt" : "2014-09-25T03:13:41Z",
        "updatedAt" : "2014-09-26T16:22:03Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "01c9015ed3f8c2e46b7b4954df404beeb3f2e367",
    "line" : null,
    "diffHunk" : "@@ -1,1 +91,95 @@\tcomputedHash := uint64(hasher.Sum32())\n\tpodFullName := fmt.Sprintf(\"%s.%s\", podName, podNamespace)\n\tname := BuildDockerName(manifestUUID, podFullName, container)\n\treturnedPodFullName, returnedUUID, returnedContainerName, hash := ParseDockerName(name)\n\tif podFullName != returnedPodFullName || manifestUUID != returnedUUID || containerName != returnedContainerName || computedHash != hash {"
  }
]