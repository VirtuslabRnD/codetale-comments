[
  {
    "id" : "aaf7864c-0ca5-4048-8c4e-5353c1d9d1ee",
    "prId" : 33066,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/33066#pullrequestreview-846436",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e783df22-8d90-4148-adb7-829a14ed2b77",
        "parentId" : null,
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "@yujuhong Should we fail here?\n",
        "createdAt" : "2016-09-20T04:38:04Z",
        "updatedAt" : "2016-09-20T04:38:08Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      },
      {
        "id" : "fe854397-1b0e-4754-8fd1-ef365a944066",
        "parentId" : "e783df22-8d90-4148-adb7-829a14ed2b77",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "I think should fail here since there is no other place for `dockerClient.UpdateClientVersion`.\n",
        "createdAt" : "2016-09-20T04:48:22Z",
        "updatedAt" : "2016-09-20T04:48:22Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      },
      {
        "id" : "bfc482af-924d-4c81-85eb-a1b2a5d91008",
        "parentId" : "e783df22-8d90-4148-adb7-829a14ed2b77",
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "Hmm..if this fails, kubelet won't be able to start. I think the babysitter would try again, but that does alter the current behavior a little bit.\n",
        "createdAt" : "2016-09-20T17:18:40Z",
        "updatedAt" : "2016-09-20T17:18:40Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "d1e477f5-ffb1-494b-b67e-63a3d043b595",
        "parentId" : "e783df22-8d90-4148-adb7-829a14ed2b77",
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "> Hmm..if this fails, kubelet won't be able to start. I think the babysitter would try again, but that does alter the current behavior a little bit.\n\nYeah, that's why I let it only log an error here and move on.\n",
        "createdAt" : "2016-09-20T21:39:43Z",
        "updatedAt" : "2016-09-20T21:39:43Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      }
    ],
    "commit" : "08d74f33f6a79f1fd3205b690689b491c7c9294e",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +95,99 @@\t// Notice that this assumes that docker is running before kubelet is started.\n\tv, err := k.Version()\n\tif err != nil {\n\t\tglog.Errorf(\"failed to retrieve docker version: %v\", err)\n\t\tglog.Warningf(\"Using empty version for docker client, this may sometimes cause compatibility issue.\")"
  },
  {
    "id" : "43bf70fe-1621-48c8-8a4e-da96e196bd6c",
    "prId" : 31279,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f1f94941-72f3-4474-a601-fa6937a3d4fe",
        "parentId" : null,
        "authorId" : "1efa07e8-8663-4a1e-9f45-50c491f34046",
        "body" : "Shouldn't we add a little delta to the input `timeout`?\n",
        "createdAt" : "2016-08-24T17:16:50Z",
        "updatedAt" : "2016-08-24T17:16:50Z",
        "lastEditedBy" : "1efa07e8-8663-4a1e-9f45-50c491f34046",
        "tags" : [
        ]
      }
    ],
    "commit" : "ee81185c2567afe129cd1c4e6f698941c41858c7",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +153,157 @@// Stopping an already stopped container will not cause an error in engine-api.\nfunc (d *kubeDockerClient) StopContainer(id string, timeout int) error {\n\tctx, cancel := d.getCustomTimeoutContext(time.Duration(timeout) * time.Second)\n\tdefer cancel()\n\terr := d.client.ContainerStop(ctx, id, timeout)"
  },
  {
    "id" : "75a8d091-e1d3-4b03-8038-507164615b5f",
    "prId" : 26677,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "155ac677-6523-4330-a788-1e7e0cac7c69",
        "parentId" : null,
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "question: calling `cancel` multiple times should not have any negative impact, right?\n",
        "createdAt" : "2016-06-02T17:37:43Z",
        "updatedAt" : "2016-06-02T17:49:27Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "9b068538-7507-44e2-9ef5-2c6fb2baa0f8",
        "parentId" : "155ac677-6523-4330-a788-1e7e0cac7c69",
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "Yeah.\n\n```\nA CancelFunc tells an operation to abandon its work. A CancelFunc does not wait for the work to stop. After the first call, subsequent calls to a CancelFunc do nothing.\n```\n",
        "createdAt" : "2016-06-02T17:46:58Z",
        "updatedAt" : "2016-06-02T17:49:27Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      }
    ],
    "commit" : "49c8683c24fad4f7e182d979a3bba606cad20f21",
    "line" : 111,
    "diffHunk" : "@@ -1,1 +299,303 @@\topts.RegistryAuth = base64Auth\n\tctx, cancel := context.WithCancel(context.Background())\n\tdefer cancel()\n\tresp, err := d.client.ImagePull(ctx, image, opts)\n\tif err != nil {"
  },
  {
    "id" : "dadea432-7427-44a1-a866-6a5769fed9ed",
    "prId" : 26145,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c1dfcaac-3216-44d3-a0ed-d4c0d42f0814",
        "parentId" : null,
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "Note: #19077 tracks exposing image pull progress. Events might not be the best mechanism.\n",
        "createdAt" : "2016-05-24T17:33:03Z",
        "updatedAt" : "2016-05-24T17:33:03Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      },
      {
        "id" : "5d3b973e-bdb9-4924-8495-e4d4d8c968ee",
        "parentId" : "c1dfcaac-3216-44d3-a0ed-d4c0d42f0814",
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "@vishh Yeah. Event is a easily doable approach better than log, but as what you said, it's not the best solution.\n",
        "createdAt" : "2016-05-24T18:29:08Z",
        "updatedAt" : "2016-05-24T18:29:15Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      }
    ],
    "commit" : "151d0ab0c16b45a997e30fa872ded29490228f0e",
    "line" : 74,
    "diffHunk" : "@@ -1,1 +247,251 @@\t\tdefer ticker.Stop()\n\t\tfor {\n\t\t\t// TODO(random-liu): Report as events.\n\t\t\tselect {\n\t\t\tcase <-ticker.C:"
  },
  {
    "id" : "1b9c2993-e367-4582-991a-412b6e903104",
    "prId" : 24918,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8043cafc-1808-4924-aa31-6558f3ffffa2",
        "parentId" : null,
        "authorId" : "2fa5a4c6-e0a7-4dbe-a80e-7770a5dc92a1",
        "body" : "I'd expect pulling to frequently take longer than 2 minutes.\nMaybe a longer timeout? \n",
        "createdAt" : "2016-04-28T17:59:13Z",
        "updatedAt" : "2016-05-06T17:53:23Z",
        "lastEditedBy" : "2fa5a4c6-e0a7-4dbe-a80e-7770a5dc92a1",
        "tags" : [
        ]
      },
      {
        "id" : "ed48114d-ad75-4a9f-b2c0-553cfcc21a2b",
        "parentId" : "8043cafc-1808-4924-aa31-6558f3ffffa2",
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "The image pulling is slow, but for now we only set timeout for the \"connection construct\" phase, which should be relatively fast.\nAfter that we'll wait and periodically check the image pulling progress forever until the image is successfully pulled.\nWe may want to add timeout and better timeout handling for the second phase in the future. But because the image pulling time depends on the network bandwidth and image size, it is hard to set a fixed value now.\n",
        "createdAt" : "2016-04-28T18:22:09Z",
        "updatedAt" : "2016-05-06T17:53:23Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      },
      {
        "id" : "e2559328-eab1-4cf7-9710-02e7801b6715",
        "parentId" : "8043cafc-1808-4924-aa31-6558f3ffffa2",
        "authorId" : "2fa5a4c6-e0a7-4dbe-a80e-7770a5dc92a1",
        "body" : "Thanks for explaining. Perhaps the comment on `defaultTimeout`, or a comment here, should say something similar?\n",
        "createdAt" : "2016-04-28T18:26:28Z",
        "updatedAt" : "2016-05-06T17:53:23Z",
        "lastEditedBy" : "2fa5a4c6-e0a7-4dbe-a80e-7770a5dc92a1",
        "tags" : [
        ]
      },
      {
        "id" : "9dfe7de3-8577-4e4a-8a5e-dad0f9960ab3",
        "parentId" : "8043cafc-1808-4924-aa31-6558f3ffffa2",
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "Sure. Thanks~\n",
        "createdAt" : "2016-04-28T18:31:46Z",
        "updatedAt" : "2016-05-06T17:53:23Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      }
    ],
    "commit" : "148588e6a107c33deb73c6d4e349f7b927bf0ff4",
    "line" : null,
    "diffHunk" : "@@ -1,1 +202,206 @@\tdefer cancel()\n\topts.RegistryAuth = base64Auth\n\tresp, err := d.client.ImagePull(ctx, image, opts)\n\tif ctxErr := contextError(ctx); ctxErr != nil {\n\t\treturn ctxErr"
  },
  {
    "id" : "95d53c9f-bab6-4f97-846b-b33f5aab67a3",
    "prId" : 24918,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b11b219a-568a-48b7-bec5-4d62b8e7fff7",
        "parentId" : null,
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "What if the context fails with other errors? What are the potential errors and are we going to ignore them?\n",
        "createdAt" : "2016-05-02T21:29:37Z",
        "updatedAt" : "2016-05-06T17:53:23Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "de2ea0c4-c122-4928-a737-ba1f5dd394f8",
        "parentId" : "b11b219a-568a-48b7-bec5-4d62b8e7fff7",
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "Another error is `var Canceled = errors.New(\"context canceled\")`.\nWe never cancel a context, so that should not happen. But I agree that we should still expose the other potential context error just in case.\n",
        "createdAt" : "2016-05-06T17:43:16Z",
        "updatedAt" : "2016-05-06T17:53:23Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      }
    ],
    "commit" : "148588e6a107c33deb73c6d4e349f7b927bf0ff4",
    "line" : 294,
    "diffHunk" : "@@ -1,1 +403,407 @@// contextError checks the context, and returns error if the context is timeout.\nfunc contextError(ctx context.Context) error {\n\tif ctx.Err() == context.DeadlineExceeded {\n\t\treturn operationTimeout{err: ctx.Err()}\n\t}"
  },
  {
    "id" : "74e0958b-527b-487a-a31c-ff8a7f1b4179",
    "prId" : 23907,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1eb1ba24-f51d-45ed-849f-a4fc4a00412b",
        "parentId" : null,
        "authorId" : "698f4eb2-501b-44f5-9ff2-a2d82e9ac4f7",
        "body" : "This is going to be a key struct.\n",
        "createdAt" : "2016-04-21T18:29:43Z",
        "updatedAt" : "2016-04-21T19:03:01Z",
        "lastEditedBy" : "698f4eb2-501b-44f5-9ff2-a2d82e9ac4f7",
        "tags" : [
        ]
      }
    ],
    "commit" : "d981fee2ee1b880cc9f720a93ea85936959c440a",
    "line" : 161,
    "diffHunk" : "@@ -1,1 +321,325 @@\n// StreamOptions are the options used to configure the stream redirection\ntype StreamOptions struct {\n\tRawTerminal  bool\n\tInputStream  io.Reader"
  },
  {
    "id" : "204c3ff5-6e7e-4b75-8124-8b558e82e14a",
    "prId" : 23800,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "182c3f48-ba97-49af-baad-a24045da1695",
        "parentId" : null,
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "Define our own no such image error. See https://github.com/kubernetes/kubernetes/pull/23699/files#diff-b24e60fa41211c2289a13b1bca4cb559R375\n",
        "createdAt" : "2016-04-07T09:12:32Z",
        "updatedAt" : "2016-04-23T14:36:07Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      }
    ],
    "commit" : "a3939473d3a3973df5708880ea32f9cedeae5310",
    "line" : null,
    "diffHunk" : "@@ -1,1 +141,145 @@}\n\nfunc (d *kubeDockerClient) InspectImage(image string) (*dockertypes.ImageInspect, error) {\n\tresp, _, err := d.client.ImageInspectWithRaw(getDefaultContext(), image, true)\n\tif err != nil {"
  },
  {
    "id" : "2f765583-b5c0-4e56-a65c-4ab9f0f9a633",
    "prId" : 23800,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9ec0881c-46bd-480f-9785-16d7ee842f99",
        "parentId" : null,
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "nits: Just return. :)\n",
        "createdAt" : "2016-04-12T23:25:00Z",
        "updatedAt" : "2016-04-23T14:36:07Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      }
    ],
    "commit" : "a3939473d3a3973df5708880ea32f9cedeae5310",
    "line" : null,
    "diffHunk" : "@@ -1,1 +153,157 @@\nfunc (d *kubeDockerClient) ListImages(opts dockertypes.ImageListOptions) ([]dockertypes.Image, error) {\n\timages, err := d.client.ImageList(getDefaultContext(), opts)\n\tif err != nil {\n\t\treturn nil, err"
  },
  {
    "id" : "e9984177-2ca1-4e55-b7a6-bd250e1872a6",
    "prId" : 23800,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "73c00af3-f962-402c-b240-7d79c2498d4b",
        "parentId" : null,
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "Something wrong when rebasing, see https://github.com/kubernetes/kubernetes/blob/master/pkg/kubelet/dockertools/kube_docker_client.go#L204-L218 and #24101.\n",
        "createdAt" : "2016-04-18T16:54:41Z",
        "updatedAt" : "2016-04-23T14:36:07Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      },
      {
        "id" : "28e73591-1cd8-406a-b60e-46f74cc29b36",
        "parentId" : "73c00af3-f962-402c-b240-7d79c2498d4b",
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "@resouer Could you please fix this? After this we could get this PR merged as soon as possible. :)\n",
        "createdAt" : "2016-04-19T07:58:17Z",
        "updatedAt" : "2016-04-23T14:36:07Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      }
    ],
    "commit" : "a3939473d3a3973df5708880ea32f9cedeae5310",
    "line" : null,
    "diffHunk" : "@@ -1,1 +176,180 @@\topts.ImageID = image\n\topts.RegistryAuth = base64Auth\n\tresp, err := d.client.ImagePull(getDefaultContext(), opts, nil)\n\tif err != nil {\n\t\treturn err"
  },
  {
    "id" : "b5f7b7f1-4cd5-4dba-9640-900cfe1f3bdc",
    "prId" : 23699,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f921a3e3-1348-4de5-aa83-abf527775934",
        "parentId" : null,
        "authorId" : "227eb550-8b08-4420-9a78-279f840bd8de",
        "body" : "Maybe just `*dockerapi.Client` (anonymous field)?\n",
        "createdAt" : "2016-04-01T05:58:54Z",
        "updatedAt" : "2016-04-15T00:05:57Z",
        "lastEditedBy" : "227eb550-8b08-4420-9a78-279f840bd8de",
        "tags" : [
        ]
      }
    ],
    "commit" : "d3d98b372b461002cccdcc72ab0fd674a5f4aa0f",
    "line" : null,
    "diffHunk" : "@@ -1,1 +49,53 @@// one by one.\ntype kubeDockerClient struct {\n\tclient *dockerapi.Client\n}\n"
  },
  {
    "id" : "1a45a493-6428-4696-9b15-bd42f4fb0bfd",
    "prId" : 23699,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "84d05379-015c-4147-94cb-beb02ceda7ed",
        "parentId" : null,
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "Is it intentional to pass the container ID as an arg directly? I think it's a good change, but am curious.\n",
        "createdAt" : "2016-04-14T00:59:21Z",
        "updatedAt" : "2016-04-15T00:05:57Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "8e18054c-6ccc-42e0-b10c-938634d5f562",
        "parentId" : "84d05379-015c-4147-94cb-beb02ceda7ed",
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "Yeah, just conform to the coming engine-api change https://github.com/docker/engine-api/pull/162.\n\nAnd I found that they have merged it today. =..=\n",
        "createdAt" : "2016-04-14T01:01:50Z",
        "updatedAt" : "2016-04-15T00:05:57Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      },
      {
        "id" : "20181377-10e9-4301-b156-b210fd16240e",
        "parentId" : "84d05379-015c-4147-94cb-beb02ceda7ed",
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "I see. Well...less change in the future :)\n",
        "createdAt" : "2016-04-14T15:25:34Z",
        "updatedAt" : "2016-04-15T00:05:57Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "dc3e0ebc-221d-4ce8-abab-cbb4465f2cf2",
        "parentId" : "84d05379-015c-4147-94cb-beb02ceda7ed",
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "After all the 3 pending PRs get merged, I'll bump up the engine-api version, and change these functions in one PR. :)\n",
        "createdAt" : "2016-04-14T17:47:15Z",
        "updatedAt" : "2016-04-15T00:05:57Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      }
    ],
    "commit" : "d3d98b372b461002cccdcc72ab0fd674a5f4aa0f",
    "line" : 106,
    "diffHunk" : "@@ -1,1 +142,146 @@}\n\nfunc (d *kubeDockerClient) RemoveContainer(id string, opts dockertypes.ContainerRemoveOptions) error {\n\topts.ContainerID = id\n\treturn d.client.ContainerRemove(getDefaultContext(), opts)"
  },
  {
    "id" : "404c8f4c-e685-4505-b746-e26d30bfa514",
    "prId" : 23506,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e031748c-0c16-4081-b3fb-adf3edcd389b",
        "parentId" : null,
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "Should we move this to above the `if err != nil { return }` block?\n",
        "createdAt" : "2016-03-26T00:16:10Z",
        "updatedAt" : "2016-03-28T22:39:25Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      },
      {
        "id" : "3750a9af-e2fe-4642-a1ec-c2b2bdb433b2",
        "parentId" : "e031748c-0c16-4081-b3fb-adf3edcd389b",
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "@vishh Let me see. I think we should keep this behind `if err != nil { return }`.\nSee [here](https://github.com/docker/engine-api/blob/master/client/image_pull.go#L33), the `resp` is nil when there is an error. While trying to close a nil `io.ReadCloser` will cause a panic:\n\n```\npanic: runtime error: invalid memory address or nil pointer dereference\n```\n",
        "createdAt" : "2016-03-26T01:07:49Z",
        "updatedAt" : "2016-03-28T22:39:25Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      }
    ],
    "commit" : "a6b4378df8dac2b291924a798a298abf4a338626",
    "line" : null,
    "diffHunk" : "@@ -1,1 +227,231 @@\t\treturn err\n\t}\n\tdefer resp.Close()\n\t// TODO(random-liu): Use the image pulling progress information.\n\t_, err = io.Copy(ioutil.Discard, resp)"
  }
]