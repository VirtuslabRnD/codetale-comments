[
  {
    "id" : "ec87ff89-31a8-4786-81fe-9005c280cbf8",
    "prId" : 27036,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b9e06ec9-1fe6-4bb1-a015-8bcc8f21c5fd",
        "parentId" : null,
        "authorId" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "body" : "Looks like this is having issues in jenkins:\n\n```\n--- FAIL: TestSeccompLocalhostProfileIsLoaded (0.04s)\n    manager_test.go:1915: dm.seccompProfileRoot=/go/src/k8s.io/kubernetes/_output/local/go/src/k8s.io/kubernetes/pkg/kubelet/dockertools/fixtures/seccomp\n    <autogenerated>:31: \n\n    Error Trace:    manager_test.go:1952\n\n    Error:      \"[seccomp:unconfined]\" does not contain \"{\"foo\":\"bar\"}\"\n\n    Messages:   The compacted seccomp json profile should be loaded.\n\n    manager_test.go:1915: dm.seccompProfileRoot=/go/src/k8s.io/kubernetes/_output/local/go/src/k8s.io/kubernetes/pkg/kubelet/dockertools/fixtures/seccomp\n    <autogenerated>:31: \n\n    Error Trace:    manager_test.go:1952\n\n    Error:      \"[seccomp:unconfined]\" does not contain \"{\"abc\":\"def\"}\"\n\n    Messages:   The compacted seccomp json profile should be loaded.\n\n    manager_test.go:1915: dm.seccompProfileRoot=/go/src/k8s.io/kubernetes/_output/local/go/src/k8s.io/kubernetes/pkg/kubelet/dockertools/fixtures/seccomp\n    <autogenerated>:31: \n\n    Error Trace:    manager_test.go:1952\n\n    Error:      \"[seccomp:unconfined]\" does not contain \"{\"abc\":\"def\"}\"\n\n    Messages:   The compacted seccomp json profile should be loaded.\n```\n",
        "createdAt" : "2016-06-08T13:23:53Z",
        "updatedAt" : "2016-06-14T12:58:41Z",
        "lastEditedBy" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "tags" : [
        ]
      },
      {
        "id" : "6cad64d4-3100-488b-a3e8-cfb98c3a1f67",
        "parentId" : "b9e06ec9-1fe6-4bb1-a015-8bcc8f21c5fd",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "fixed.\n",
        "createdAt" : "2016-06-09T08:49:02Z",
        "updatedAt" : "2016-06-14T12:58:41Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "3826d2598ccdda80a4559b32d450239ae3677cf3",
    "line" : 72,
    "diffHunk" : "@@ -1,1 +1912,1916 @@\tfor _, test := range tests {\n\t\tdm, fakeDocker := newTestDockerManagerWithVersion(\"1.10.1\", \"1.22\")\n\t\t_, filename, _, _ := goruntime.Caller(0)\n\t\tdm.seccompProfileRoot = path.Join(path.Dir(filename), \"fixtures\", \"seccomp\")\n"
  },
  {
    "id" : "c2c7cc23-4dc3-4e1d-ac85-902a55219126",
    "prId" : 25324,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c6043519-cec7-49f8-882a-b388f1d6df2b",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "Missing localhost/\\* unit tests\n",
        "createdAt" : "2016-06-08T10:21:28Z",
        "updatedAt" : "2016-06-08T10:21:28Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "aa8c72adaaab6cba51ff868516ac5b423a95f069",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +1715,1719 @@}\n\nfunc TestSeccompIsUnconfinedByDefaultWithDockerV110(t *testing.T) {\n\tdm, fakeDocker := newTestDockerManagerWithVersion(\"1.10.1\", \"1.22\")\n\tpod := &api.Pod{"
  },
  {
    "id" : "695165b5-a4fe-4c6a-8184-e2ee1b0a1592",
    "prId" : 21741,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8b3c3914-dc72-4768-a2e6-97fa5985ced4",
        "parentId" : null,
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "@resouer Thanks for the cleanup! :)\n",
        "createdAt" : "2016-04-13T05:43:20Z",
        "updatedAt" : "2016-04-13T05:43:20Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      }
    ],
    "commit" : "c31ec5607ac9a47c4ddf9ecbaa4c4c5bc4857f84",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +1934,1938 @@\t\t}})\n\n\tfakeDocker.InjectErrors(map[string]error{\"inspect\": &docker.NoSuchContainer{}})\n\trunSyncPod(t, dm, fakeDocker, pod, nil, false)\n"
  },
  {
    "id" : "7bcf21f4-fb6d-43ac-9002-b8a4c6e2df10",
    "prId" : 21014,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "656b6a37-3c6d-4d2f-b82b-2fd744a63d9c",
        "parentId" : null,
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "nit: what if the acutal result contains unexpected SyncResults? Your test won't catch it.\n",
        "createdAt" : "2016-02-12T16:41:18Z",
        "updatedAt" : "2016-02-12T22:15:38Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "776aa013-22c8-4a82-93d7-bfeb72ccbd7f",
        "parentId" : "656b6a37-3c6d-4d2f-b82b-2fd744a63d9c",
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "ACK.\n",
        "createdAt" : "2016-02-12T19:30:56Z",
        "updatedAt" : "2016-02-12T22:15:38Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      }
    ],
    "commit" : "ae759dc206ea5bff8d1ab37228323f7cc1434b27",
    "line" : null,
    "diffHunk" : "@@ -1,1 +1761,1765 @@\t// The container start order is not fixed, because SyncPod() uses a map to store the containers to start.\n\t// Here we should make sure each expected result appears only once in the real result.\n\tfor _, expectR := range expectedResults {\n\t\tfound := 0\n\t\tfor _, realR := range realResult.SyncResults {"
  },
  {
    "id" : "42f84a05-a190-4aaf-8260-2c92a755abd5",
    "prId" : 21014,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "11a02ad4-77f4-412a-8c1f-edf71213e06d",
        "parentId" : null,
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "It's going to be hard to debug without printing the content of the results.\n",
        "createdAt" : "2016-02-12T20:59:32Z",
        "updatedAt" : "2016-02-12T22:15:38Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "b4cae1b9-0864-4ad9-ab2a-21498c86c450",
        "parentId" : "11a02ad4-77f4-412a-8c1f-edf71213e06d",
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "Done. :)\n",
        "createdAt" : "2016-02-12T22:15:47Z",
        "updatedAt" : "2016-02-12T22:15:47Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      }
    ],
    "commit" : "ae759dc206ea5bff8d1ab37228323f7cc1434b27",
    "line" : 176,
    "diffHunk" : "@@ -1,1 +1750,1754 @@func verifySyncResults(t *testing.T, expectedResults []*kubecontainer.SyncResult, realResult kubecontainer.PodSyncResult) {\n\tif len(expectedResults) != len(realResult.SyncResults) {\n\t\tt.Errorf(\"expected sync result number %d, got %d\", len(expectedResults), len(realResult.SyncResults))\n\t\tfor _, r := range expectedResults {\n\t\t\tt.Errorf(\"expected result: %+v\", r)"
  },
  {
    "id" : "f68a9e64-d2b9-4487-8be7-88b8d8a1dd91",
    "prId" : 20827,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "63370162-aaf9-4bc3-8a1f-096561874387",
        "parentId" : null,
        "authorId" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "body" : "Why do you expect an error here? Will you always have x.y.z?\n",
        "createdAt" : "2016-02-08T21:05:22Z",
        "updatedAt" : "2016-02-09T00:00:08Z",
        "lastEditedBy" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "tags" : [
        ]
      },
      {
        "id" : "dee79def-d882-4816-ba57-0ed710788f71",
        "parentId" : "63370162-aaf9-4bc3-8a1f-096561874387",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Semver is x.y.z, both of these are not semver.  Not aware of a Docker build in the wild that isn't base semver.\n",
        "createdAt" : "2016-02-08T21:45:55Z",
        "updatedAt" : "2016-02-09T00:00:08Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "78a41636-227a-4f73-a808-2f0897c55b91",
        "parentId" : "63370162-aaf9-4bc3-8a1f-096561874387",
        "authorId" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "body" : "K, just checking. Thanks.\n\nOn Mon, Feb 8, 2016 at 5:09 PM, Clayton Coleman notifications@github.com\nwrote:\n\n> In pkg/kubelet/dockertools/manager_test.go\n> https://github.com/kubernetes/kubernetes/pull/20827#discussion_r52230755\n> :\n> \n> > @@ -115,6 +115,33 @@ func matchString(t *testing.T, pattern, str string) bool {\n> >     return match\n> >  }\n> > \n> > +func TestNewDockerVersion(t *testing.T) {\n> > -   cases := []struct {\n> > -       value string\n> > -       out   string\n> > -       err   bool\n> > -   }{\n> > -       {value: \"1\", err: true},\n> > -       {value: \"1.8\", err: true},\n> \n> Semver is x.y.z, both of these are not semver. Not aware of a Docker build\n> in the wild that isn't base semver.\n> \n> â€”\n> Reply to this email directly or view it on GitHub\n> https://github.com/kubernetes/kubernetes/pull/20827/files#r52230755.\n",
        "createdAt" : "2016-02-08T22:10:49Z",
        "updatedAt" : "2016-02-09T00:00:08Z",
        "lastEditedBy" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "tags" : [
        ]
      }
    ],
    "commit" : "5aca495d73442c72eae6fd9e721de82c9e4bf454",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +123,127 @@\t}{\n\t\t{value: \"1\", err: true},\n\t\t{value: \"1.8\", err: true},\n\t\t{value: \"1.8.1\", out: \"1.8.1\"},\n\t\t{value: \"1.8.1.fc21\", out: \"1.8.1-fc21\"},"
  },
  {
    "id" : "cb8ba884-4d99-4a0d-81ca-7fdf5b640cbc",
    "prId" : 20827,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6ca512c1-7df3-403e-b3ee-0758a0f2ea77",
        "parentId" : null,
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "nit: @aveshagarwal's test case should be added here:\n`{value: \"1.8.1-beta.12\", out: \"1.8.1-beta.12\"}`\n",
        "createdAt" : "2016-02-08T23:40:52Z",
        "updatedAt" : "2016-02-09T00:00:08Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "5aca495d73442c72eae6fd9e721de82c9e4bf454",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +127,131 @@\t\t{value: \"1.8.1.fc21\", out: \"1.8.1-fc21\"},\n\t\t{value: \"1.8.1.fc21.other\", out: \"1.8.1-fc21.other\"},\n\t\t{value: \"1.8.1-fc21.other\", out: \"1.8.1-fc21.other\"},\n\t\t{value: \"1.8.1-beta.12\", out: \"1.8.1-beta.12\"},\n\t}"
  },
  {
    "id" : "f592a565-989c-4419-a473-68e0b3795eed",
    "prId" : 13516,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "277384d1-89ab-4e02-b46e-957abe9558c7",
        "parentId" : null,
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "I think it's safe to access fakeDocker here (unrelated to your change), but locking it is fine too. Could you to `defer fakeDocker.Unlock()` Here? Thanks. \n",
        "createdAt" : "2015-09-25T22:41:39Z",
        "updatedAt" : "2015-10-07T10:13:17Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "fdf712cd84355d3127ed18581cc8ab3a2e52290a",
    "line" : null,
    "diffHunk" : "@@ -1,1 +1012,1016 @@\t}\n\n\tfakeDocker.Lock()\n\tdefer fakeDocker.Unlock()\n"
  },
  {
    "id" : "c63499da-b708-45e2-a151-28b497a6f67d",
    "prId" : 13516,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3d226597-0af8-49ba-b0aa-250aa5586219",
        "parentId" : null,
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "Hm...I don't mind the sorting here , but I think original code works too.\n",
        "createdAt" : "2015-09-25T22:43:14Z",
        "updatedAt" : "2015-10-07T10:13:17Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "fdf712cd84355d3127ed18581cc8ab3a2e52290a",
    "line" : 96,
    "diffHunk" : "@@ -1,1 +1015,1019 @@\tdefer fakeDocker.Unlock()\n\n\tpulledImageSorted := puller.ImagesPulled[:]\n\tsort.Strings(pulledImageSorted)\n\tassert.Equal(t, []string{\"pod_infra_image\", \"pull_always_image\", \"pull_if_not_present_image\"}, pulledImageSorted)"
  },
  {
    "id" : "ac56ce2a-bc33-4a79-8300-17c4c7029903",
    "prId" : 9279,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4f606fe7-d156-4e14-89e9-3405ca560fc9",
        "parentId" : null,
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "I see files with and without \"docker\". They seem to co-exist in the codebase. Do we want to converge on adding \"docker\"?\n",
        "createdAt" : "2015-06-04T21:59:00Z",
        "updatedAt" : "2015-06-04T23:22:43Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "6ed24537-0fa0-4877-b289-b0d6bc509f6b",
        "parentId" : "4f606fe7-d156-4e14-89e9-3405ca560fc9",
        "authorId" : "227eb550-8b08-4420-9a78-279f840bd8de",
        "body" : "@yujuhong Sure\n",
        "createdAt" : "2015-06-04T22:19:55Z",
        "updatedAt" : "2015-06-04T23:22:43Z",
        "lastEditedBy" : "227eb550-8b08-4420-9a78-279f840bd8de",
        "tags" : [
        ]
      }
    ],
    "commit" : "f197a9db4e0d68c1e625ed20c0c7dee802c6452a",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +39,43 @@\t\"github.com/GoogleCloudPlatform/kubernetes/pkg/util\"\n\tuexec \"github.com/GoogleCloudPlatform/kubernetes/pkg/util/exec\"\n\tdocker \"github.com/fsouza/go-dockerclient\"\n)\n"
  },
  {
    "id" : "09e339b8-f42a-4b0d-bee8-b622db80b705",
    "prId" : 7601,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "59b13bf6-d388-4d11-9f1e-f35e64877910",
        "parentId" : null,
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "This function is no longer used, but seems handy so I keep it around.\n",
        "createdAt" : "2015-04-30T23:12:15Z",
        "updatedAt" : "2015-04-30T23:23:53Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "b37f23f1ebd1f605dd1721d48a471e4666744fc8",
    "line" : null,
    "diffHunk" : "@@ -1,1 +213,217 @@}\n\nfunc apiContainerToContainer(c docker.APIContainers) kubecontainer.Container {\n\tdockerName, hash, err := ParseDockerName(c.Names[0])\n\tif err != nil {"
  },
  {
    "id" : "19a2e374-a05f-49aa-aed8-f7e650942306",
    "prId" : 7601,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7243c489-593e-4676-9830-46dad5b53495",
        "parentId" : null,
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "This function is no longer used, but seems handy so I keep it around.\n",
        "createdAt" : "2015-04-30T23:12:20Z",
        "updatedAt" : "2015-04-30T23:23:53Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "b37f23f1ebd1f605dd1721d48a471e4666744fc8",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +225,229 @@}\n\nfunc dockerContainersToPod(containers DockerContainers) kubecontainer.Pod {\n\tvar pod kubecontainer.Pod\n\tfor _, c := range containers {"
  },
  {
    "id" : "a89dc382-b076-46ec-9f00-b0f64e690607",
    "prId" : 7601,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cc2b7b1a-e8a2-4567-b7fd-e45c6ccd6c58",
        "parentId" : null,
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "Changed to verify the _correct_ container were stopped (before it only checked if the \"stop\" call existed).\n",
        "createdAt" : "2015-04-30T23:15:23Z",
        "updatedAt" : "2015-04-30T23:23:53Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "b37f23f1ebd1f605dd1721d48a471e4666744fc8",
    "line" : 80,
    "diffHunk" : "@@ -1,1 +280,284 @@\t}\n\t// Assert the container has been stopped.\n\tif err := fakeDocker.AssertStopped([]string{containerToKill.ID}); err != nil {\n\t\tt.Errorf(\"container was not stopped correctly: %v\", err)\n\t}"
  },
  {
    "id" : "b23ef4ce-cba0-4f71-9502-7fb2acdac50b",
    "prId" : 7578,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0043fa11-8433-44d7-97b3-347e872990e7",
        "parentId" : null,
        "authorId" : "b7abca6a-d6be-4008-a014-3b5ca0e90529",
        "body" : "Is this order deterministic? Since it's converting from a map I don't think it is.\n",
        "createdAt" : "2015-04-30T20:03:02Z",
        "updatedAt" : "2015-04-30T20:28:18Z",
        "lastEditedBy" : "b7abca6a-d6be-4008-a014-3b5ca0e90529",
        "tags" : [
        ]
      },
      {
        "id" : "f7db6240-1a69-4a08-bf4f-65b8c0b593e1",
        "parentId" : "0043fa11-8433-44d7-97b3-347e872990e7",
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "It is. util.StringSet sorts before returns.\nhttps://github.com/GoogleCloudPlatform/kubernetes/blob/master/pkg/util/set.go#L122\n",
        "createdAt" : "2015-04-30T20:24:00Z",
        "updatedAt" : "2015-04-30T20:28:18Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "3c857237-ed79-46a5-ab44-52b7100fe730",
        "parentId" : "0043fa11-8433-44d7-97b3-347e872990e7",
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "I will add a comment for clarity.\n",
        "createdAt" : "2015-04-30T20:25:51Z",
        "updatedAt" : "2015-04-30T20:28:18Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "12f4b736-39a7-4f3f-b745-ed6493d2796e",
        "parentId" : "0043fa11-8433-44d7-97b3-347e872990e7",
        "authorId" : "b7abca6a-d6be-4008-a014-3b5ca0e90529",
        "body" : "Ah, thanks for the pointer. Sounds good.\n",
        "createdAt" : "2015-04-30T20:26:20Z",
        "updatedAt" : "2015-04-30T20:28:18Z",
        "lastEditedBy" : "b7abca6a-d6be-4008-a014-3b5ca0e90529",
        "tags" : [
        ]
      },
      {
        "id" : "ba1b3e7a-5cd2-4bad-8505-7e5227c13dc1",
        "parentId" : "0043fa11-8433-44d7-97b3-347e872990e7",
        "authorId" : "b7abca6a-d6be-4008-a014-3b5ca0e90529",
        "body" : "It's alright, it's a failure to read the specification on my part.\n",
        "createdAt" : "2015-04-30T20:26:55Z",
        "updatedAt" : "2015-04-30T20:28:18Z",
        "lastEditedBy" : "b7abca6a-d6be-4008-a014-3b5ca0e90529",
        "tags" : [
        ]
      }
    ],
    "commit" : "83c599e4d4721a7aa886b0d513f404c3057e8e0a",
    "line" : null,
    "diffHunk" : "@@ -1,1 +207,211 @@\t// We can compare the two sets directly because util.StringSet.List()\n\t// returns a \"sorted\" list.\n\tif !reflect.DeepEqual(expected.List(), actual.List()) {\n\t\tt.Errorf(\"expected %#v, got %#v\", expected.List(), actual.List())\n\t}"
  }
]