[
  {
    "id" : "788d811a-1ae8-454d-aa46-ae6709fc402d",
    "prId" : 42264,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/42264#pullrequestreview-25384136",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d1902cbb-0e9b-4a51-8502-ebef58c0ac7c",
        "parentId" : null,
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "Commit LGTM.",
        "createdAt" : "2017-03-06T22:46:51Z",
        "updatedAt" : "2017-03-07T18:12:01Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      }
    ],
    "commit" : "a0f90e1490df6cc616d3cfa42b15e133fcf4bee0",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +31,35 @@\n\tdockertypes \"github.com/docker/engine-api/types\"\n\tdockercontainer \"github.com/docker/engine-api/types/container\"\n\n\t\"k8s.io/client-go/util/clock\""
  },
  {
    "id" : "8b4aaa42-f3aa-44d3-81eb-f24753d23db6",
    "prId" : 39826,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/39826#pullrequestreview-16471997",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f1163ac2-5dea-4efc-8640-66a78af6153b",
        "parentId" : null,
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "We need to lock here and the following.",
        "createdAt" : "2017-01-12T21:54:59Z",
        "updatedAt" : "2017-01-17T17:56:52Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      },
      {
        "id" : "3c25ee0d-8e7d-4018-ae2d-5976d2a83c69",
        "parentId" : "f1163ac2-5dea-4efc-8640-66a78af6153b",
        "authorId" : "57a5e7e7-e6d7-467b-96ab-41e4ca978eee",
        "body" : "Done.",
        "createdAt" : "2017-01-12T22:32:56Z",
        "updatedAt" : "2017-01-17T17:56:52Z",
        "lastEditedBy" : "57a5e7e7-e6d7-467b-96ab-41e4ca978eee",
        "tags" : [
        ]
      },
      {
        "id" : "cf15519e-3d1f-483b-981a-d1cc16954968",
        "parentId" : "f1163ac2-5dea-4efc-8640-66a78af6153b",
        "authorId" : "57a5e7e7-e6d7-467b-96ab-41e4ca978eee",
        "body" : "Nice catch!",
        "createdAt" : "2017-01-12T22:33:30Z",
        "updatedAt" : "2017-01-17T17:56:52Z",
        "lastEditedBy" : "57a5e7e7-e6d7-467b-96ab-41e4ca978eee",
        "tags" : [
        ]
      }
    ],
    "commit" : "814c850fe50a08ae08305dc20309bae718397eb1",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +88,92 @@}\n\nfunc (f *FakeDockerClient) WithClock(c clock.Clock) *FakeDockerClient {\n\tf.Lock()\n\tdefer f.Unlock()"
  },
  {
    "id" : "6fefd493-847e-422f-80f7-9d49de5ac203",
    "prId" : 29316,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e73990ab-2a04-4ea8-8ce6-0cc0845d7018",
        "parentId" : null,
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "Thanks for this! This is quite useful! :)\n",
        "createdAt" : "2016-07-21T17:59:46Z",
        "updatedAt" : "2016-07-21T21:15:02Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      }
    ],
    "commit" : "e25da2150315c1a6db775fc31184c39a3d295ed8",
    "line" : 204,
    "diffHunk" : "@@ -1,1 +481,485 @@\nfunc (f *FakeDockerClient) RemoveImage(image string, opts dockertypes.ImageRemoveOptions) ([]dockertypes.ImageDelete, error) {\n\tf.called = append(f.called, calledDetail{name: \"remove_image\", arguments: []interface{}{image, opts}})\n\terr := f.popError(\"remove_image\")\n\tif err == nil {"
  },
  {
    "id" : "c79c353c-bf5c-40ef-a050-64cf49c86c15",
    "prId" : 23800,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e375973d-fff7-499f-a211-3b7c8953fbe6",
        "parentId" : null,
        "authorId" : "698f4eb2-501b-44f5-9ff2-a2d82e9ac4f7",
        "body" : "Get rid of `imageID` and pull the info out of `opts`.\n",
        "createdAt" : "2016-04-22T17:58:07Z",
        "updatedAt" : "2016-04-23T14:36:07Z",
        "lastEditedBy" : "698f4eb2-501b-44f5-9ff2-a2d82e9ac4f7",
        "tags" : [
        ]
      },
      {
        "id" : "f8aa1f37-6b3c-4f36-8462-5984860347f3",
        "parentId" : "e375973d-fff7-499f-a211-3b7c8953fbe6",
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "I think it would be better to just use the `imageID`, because we'll bump up the engine-api version right after this gets merged. In newer version of engine-api, there is no `imageID` in `PullImageOptions` https://github.com/kubernetes/kubernetes/pull/23800/files#r60776433\n",
        "createdAt" : "2016-04-22T18:02:56Z",
        "updatedAt" : "2016-04-23T14:36:07Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      },
      {
        "id" : "d5d32c1f-5f0a-4e63-9296-515b376938d3",
        "parentId" : "e375973d-fff7-499f-a211-3b7c8953fbe6",
        "authorId" : "698f4eb2-501b-44f5-9ff2-a2d82e9ac4f7",
        "body" : "yes. Sorry. I had not read your explanation in the other comment yet. \n",
        "createdAt" : "2016-04-22T18:11:39Z",
        "updatedAt" : "2016-04-23T14:36:07Z",
        "lastEditedBy" : "698f4eb2-501b-44f5-9ff2-a2d82e9ac4f7",
        "tags" : [
        ]
      }
    ],
    "commit" : "a3939473d3a3973df5708880ea32f9cedeae5310",
    "line" : 49,
    "diffHunk" : "@@ -1,1 +429,433 @@\tif err == nil {\n\t\tauthJson, _ := json.Marshal(auth)\n\t\tf.pulled = append(f.pulled, fmt.Sprintf(\"%s:%s using %s\", imageID, opts.Tag, string(authJson)))\n\t}\n\treturn err"
  },
  {
    "id" : "09ecca2d-7f1b-4f2a-ba3b-8537ae3e8144",
    "prId" : 22467,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "432d0ede-35da-423c-8d7a-40b2acd39928",
        "parentId" : null,
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "thanks for cleaning this up! How about adding a method to reset the errors?\n",
        "createdAt" : "2016-03-04T19:10:56Z",
        "updatedAt" : "2016-03-05T05:26:55Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "5bb31384-31c2-403b-91e9-286f8ef1c7ae",
        "parentId" : "432d0ede-35da-423c-8d7a-40b2acd39928",
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "Sure, will do it~\n",
        "createdAt" : "2016-03-04T19:32:34Z",
        "updatedAt" : "2016-03-05T05:26:55Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      }
    ],
    "commit" : "07b21c50facc9ca365fd1a3c31e737b83f8ee4de",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +75,79 @@}\n\nfunc (f *FakeDockerClient) InjectErrors(errs map[string]error) {\n\tf.Lock()\n\tdefer f.Unlock()"
  },
  {
    "id" : "98d30e78-f5c9-4455-ad71-4b889ba39223",
    "prId" : 21959,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5879db15-ae47-4853-9513-e3cc48206b9a",
        "parentId" : null,
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "This is really hard to maintain. We should write a proper mock that records the status of each container.\n",
        "createdAt" : "2016-02-25T16:32:27Z",
        "updatedAt" : "2016-02-25T16:32:27Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "99587b7e3aa0aeea07ef80e288a3a97cfa014c09",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +338,342 @@\t\treturn err\n\t}\n\tfor i := range f.ExitedContainerList {\n\t\tif f.ExitedContainerList[i].ID == opts.ID {\n\t\t\tdelete(f.ContainerMap, opts.ID)"
  },
  {
    "id" : "0a16ba93-109c-431d-8bb9-8430971409f2",
    "prId" : 21959,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8b3ba55d-c51f-43f2-a2d1-1ce511e64f1b",
        "parentId" : null,
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "To really be a good fake, you'll need to check if the container id is in the ContainerList.\n- yes: return \"cannot delete a running container\"\n- no: return \"no such container id\"\n\nI think this is ok as it is since it'd only get too complicated.\n",
        "createdAt" : "2016-02-25T16:34:43Z",
        "updatedAt" : "2016-02-25T16:34:43Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "c396b52c-4fef-4622-9bc1-2eae6203515d",
        "parentId" : "8b3ba55d-c51f-43f2-a2d1-1ce511e64f1b",
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "You are right! Maybe we could make it a better fake when rewriting for new docker client. :)\n",
        "createdAt" : "2016-02-25T18:40:40Z",
        "updatedAt" : "2016-02-25T18:40:40Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      }
    ],
    "commit" : "99587b7e3aa0aeea07ef80e288a3a97cfa014c09",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +348,352 @@\t}\n\t// To be a good fake, report error if container is not stopped.\n\treturn fmt.Errorf(\"container not stopped\")\n}\n"
  },
  {
    "id" : "f8ba42a0-d2c7-48f0-ba65-7945da2a20a3",
    "prId" : 14227,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "356afede-1c3b-4781-be0e-7a5a29201d83",
        "parentId" : null,
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "This should be consistent with StartContainer and writes to the containerMap.\n",
        "createdAt" : "2015-09-21T21:23:11Z",
        "updatedAt" : "2015-09-23T07:29:12Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "0e170ab1-a8f1-4350-9c07-003fc03b89a5",
        "parentId" : "356afede-1c3b-4781-be0e-7a5a29201d83",
        "authorId" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "body" : "I don't understand what you mean.\n",
        "createdAt" : "2015-09-22T07:59:53Z",
        "updatedAt" : "2015-09-23T07:29:12Z",
        "lastEditedBy" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "tags" : [
        ]
      },
      {
        "id" : "8794a0fe-e579-4e97-b975-5da44e7d54b9",
        "parentId" : "356afede-1c3b-4781-be0e-7a5a29201d83",
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "sorry my bad. misread the code. this is fine.\n",
        "createdAt" : "2015-09-22T17:09:02Z",
        "updatedAt" : "2015-09-23T07:29:12Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "0a3f7787e716e9d1c1e04ccd73813190d520d2a6",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +193,197 @@\t\t\tcontainerCopy := container\n\t\t\tf.ContainerMap[name] = &containerCopy\n\t\t}\n\t\treturn &container, nil\n\t}"
  },
  {
    "id" : "03b24eac-07d6-44c6-90aa-892dbb757ed4",
    "prId" : 14227,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "143fd98e-ae1c-4f54-9aa4-8d0e6c04439c",
        "parentId" : null,
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "Perhaps it's worth adding a constructor function which initializes the ContainerMap once and for all?\n",
        "createdAt" : "2015-09-22T17:11:20Z",
        "updatedAt" : "2015-09-23T07:29:12Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "9d3f4a2d-0db0-48d2-9092-14a5cd3d2463",
        "parentId" : "143fd98e-ae1c-4f54-9aa4-8d0e6c04439c",
        "authorId" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "body" : "I'd rather not - it's sooo deeply intertwined into testing infrastructure, that it's hard. (Read as: I spent half an hour trying to figure out how it's passed to the kubelet_test and I really don't think it's worth spending more)\n",
        "createdAt" : "2015-09-22T20:21:37Z",
        "updatedAt" : "2015-09-23T07:29:12Z",
        "lastEditedBy" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "tags" : [
        ]
      },
      {
        "id" : "8589d48c-2bdc-4a1b-805a-449e23524db1",
        "parentId" : "143fd98e-ae1c-4f54-9aa4-8d0e6c04439c",
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "I'd imagine that you can replace the assignments`f := &dockertools.FakeDockerClient{}` with `f = dockertools.NewFakeDockerClient()`. Is that not the case? (I didn't actually try it)\n",
        "createdAt" : "2015-09-22T21:22:45Z",
        "updatedAt" : "2015-09-23T07:29:12Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "5cea24e9-8514-415a-802c-4ed05301df4e",
        "parentId" : "143fd98e-ae1c-4f54-9aa4-8d0e6c04439c",
        "authorId" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "body" : "I wish it were that simple. E.g. in `runonce_test` there's a testDocker class that 'inherits' (I don't know the proper word for go language) from FakeDockerClient.\n",
        "createdAt" : "2015-09-23T05:20:18Z",
        "updatedAt" : "2015-09-23T07:29:12Z",
        "lastEditedBy" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "tags" : [
        ]
      },
      {
        "id" : "8880bbb8-ab37-4a1e-b523-4f2ec58c3a3f",
        "parentId" : "143fd98e-ae1c-4f54-9aa4-8d0e6c04439c",
        "authorId" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "body" : "I added a TODO to fix it later. I hope that's enough.\n",
        "createdAt" : "2015-09-23T07:29:52Z",
        "updatedAt" : "2015-09-23T07:29:52Z",
        "lastEditedBy" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "tags" : [
        ]
      },
      {
        "id" : "2dd75f6c-6744-41e2-87ef-71ae722be6ab",
        "parentId" : "143fd98e-ae1c-4f54-9aa4-8d0e6c04439c",
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "I removed the testDocker in #14435. PTAL. Thanks\n",
        "createdAt" : "2015-09-23T16:27:29Z",
        "updatedAt" : "2015-09-23T16:27:29Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "ce8cb6a4-5d1f-40c8-9b2b-3a16c7b20101",
        "parentId" : "143fd98e-ae1c-4f54-9aa4-8d0e6c04439c",
        "authorId" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "body" : "I need this PR merged, and I really, really, really don't want to debug kubelet_test which fails after mechanical changes. I can send you another PR that does this, but it's really not worth the effort. It's most often used as `FakeDockerClient{ put_overwrites_here }`, so adding default constructor actually makes it less readable.\n",
        "createdAt" : "2015-09-23T16:55:21Z",
        "updatedAt" : "2015-09-23T16:55:21Z",
        "lastEditedBy" : "3c437914-616b-4cfb-88a0-28dc812ff2b2",
        "tags" : [
        ]
      },
      {
        "id" : "14b1b737-5903-4f73-bd59-924114e9476c",
        "parentId" : "143fd98e-ae1c-4f54-9aa4-8d0e6c04439c",
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "It's really not so bad... Sometimes it's worth pushing a little bit because people rarely come back to fix TODOs in the tests. \n\nAfter #14435 merges, https://github.com/kubernetes/kubernetes/commit/ba83f5dbf086dc9f86ccd16e95bb0face00fcbda is all you need to clean up the tests. It's almost entirely mechanical.\n",
        "createdAt" : "2015-09-23T18:00:15Z",
        "updatedAt" : "2015-09-23T18:00:15Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "38170667-7c34-4fab-963a-2ad14a9de43f",
        "parentId" : "143fd98e-ae1c-4f54-9aa4-8d0e6c04439c",
        "authorId" : "df06b0d6-fd6c-44d1-8008-efeaccd16cd5",
        "body" : "@yujuhong I agree it makes sense to fix things you see are problematic. However at the same time kubelet is already quite complex and so are the tests. I've seen multiple times that a simple mechanical change took hours just because author made a small mistake. Debugging tests for a complex component that one does not understand nor own can be pretty hard.\n\n@gmarek is doing this change in kubelet only to unblock his work on kubemark. I guess that in such scenario fixing all the things around doesn't make much sense.\n\nWDYT?\n",
        "createdAt" : "2015-09-23T19:01:06Z",
        "updatedAt" : "2015-09-23T19:01:06Z",
        "lastEditedBy" : "df06b0d6-fd6c-44d1-8008-efeaccd16cd5",
        "tags" : [
        ]
      },
      {
        "id" : "824a769c-b98c-4825-839f-8f1f8a4a4e0c",
        "parentId" : "143fd98e-ae1c-4f54-9aa4-8d0e6c04439c",
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "@fgrzadkowski, first of all, I wasn't trying to block this PR, and I appreciate the test cleanup :-)\n\nI agree it's hard to understand all the tests (who actually does?) in kubelet, but in this case, I think the scope is pretty limited and it was mostly mechanical (e.g., as shown in https://github.com/kubernetes/kubernetes/commit/ba83f5dbf086dc9f86ccd16e95bb0face00fcbda, which passed all unit/integration tests).\n\nBesides the node team, no one owns kubelet, but most people have contributed to the codebase. It'd be great to invest more efforts to not make the situation worse. I didn't know this PR was so urgent, so I apologize if it caused any delay.\n\n> I spent half an hour trying to figure out how it's passed to the kubelet_test and I really don't think it's worth spending more)\n\n@gmarek, kubelet_test doesn't/shouldn't use FakeDockerClient at all. It should simply use container.FakeRuntime and touches no docker-specific bits.\n",
        "createdAt" : "2015-09-23T20:51:49Z",
        "updatedAt" : "2015-09-23T20:51:49Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "0a3f7787e716e9d1c1e04ccd73813190d520d2a6",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +220,224 @@\t\t\tNetworkSettings: &docker.NetworkSettings{IPAddress: \"1.2.3.4\"},\n\t\t}\n\t\tif f.ContainerMap != nil {\n\t\t\tcontainer, ok := f.ContainerMap[id]\n\t\t\tif !ok {"
  },
  {
    "id" : "c6f80d76-2d77-4ec9-90c6-c2dfd30540d1",
    "prId" : 1546,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8c4a5cc8-e743-4d2e-9f8b-2f1dead31d41",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "StringSet?\n",
        "createdAt" : "2014-10-02T19:32:50Z",
        "updatedAt" : "2014-10-02T19:56:06Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "53e6c964-5097-4cfb-9b0b-96452cdb8cc2",
        "parentId" : "8c4a5cc8-e743-4d2e-9f8b-2f1dead31d41",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "I think eventually we'd test duplicates (check for double pulls with TTL?) so set might not be appropriate.\n\n----- Original Message -----\n\n> > @@ -138,6 +138,7 @@ func (f _FakeDockerClient) InspectImage(name string)\n> > (_docker.Image, error) {\n> >  type FakeDockerPuller struct {\n> >     sync.Mutex\n> > -   HasImages    []string\n> \n> StringSet?\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/GoogleCloudPlatform/kubernetes/pull/1546/files#r18361721\n",
        "createdAt" : "2014-10-02T19:42:49Z",
        "updatedAt" : "2014-10-02T19:56:07Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "6881db64a95e02c95cdd884a801acdc4f6f77ff0",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +139,143 @@\tsync.Mutex\n\n\tHasImages    []string\n\tImagesPulled []string\n"
  }
]