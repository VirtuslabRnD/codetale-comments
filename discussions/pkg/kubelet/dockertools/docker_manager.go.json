[
  {
    "id" : "a6bb67be-4690-4b50-938d-8c1d6aee3aba",
    "prId" : 45199,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/45199#pullrequestreview-35819192",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d25290ce-cabe-4672-ae7c-86e2f7f8894d",
        "parentId" : null,
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "Also remove other files inside dockertools?",
        "createdAt" : "2017-05-02T01:49:37Z",
        "updatedAt" : "2017-05-02T01:49:38Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      },
      {
        "id" : "07e1846c-0a99-4953-966a-1c19ba22bae1",
        "parentId" : "d25290ce-cabe-4672-ae7c-86e2f7f8894d",
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "There will be more PRs to clean up the package. Can't really pack them all in one PR.",
        "createdAt" : "2017-05-02T16:17:54Z",
        "updatedAt" : "2017-05-02T16:17:55Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "c35c00f3f152ccc9da8057499faf27c673a03ca2",
    "line" : 3,
    "diffHunk" : "@@ -1,1 +16,20 @@\npackage dockertools\n\nconst (\n\tDockerType = \"docker\""
  },
  {
    "id" : "7b8fb6c7-f837-42a5-b142-01bd4b044d82",
    "prId" : 38691,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/38691#pullrequestreview-24938164",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "16af77f2-b7e8-42d3-95ec-f7b349764d06",
        "parentId" : null,
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "Actually, we should move `client.Info` inside else, too.\r\n\r\nHowever, because we are going to deprecate dockertools, I'm fine to keep it is now.",
        "createdAt" : "2017-03-03T09:59:18Z",
        "updatedAt" : "2017-03-08T06:28:54Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      }
    ],
    "commit" : "7fed242d5557b5bf82463566e41af8d18905449e",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +1796,1800 @@\n\tcontainerLogFile := containerInfo.LogPath\n\tif containerLogFile != \"\" {\n\t\t// Create a symbolic link to the Docker container log file using a name which captures the\n\t\t// full pod name, the container name and the Docker container ID. Cluster level logging will"
  },
  {
    "id" : "f4ad8f6d-f712-4efc-b127-aed1cec1a8e7",
    "prId" : 35342,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/35342#pullrequestreview-6740311",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e0c71995-9745-437e-a09a-e97c44873679",
        "parentId" : null,
        "authorId" : "a6409368-42e0-44a9-bf79-9d3042ac3b65",
        "body" : "Does runningPod here includes PodInfraContainer too? I think it is, but want to be sure here. Otherwise, returning earlier would have podInfraContainer leakage issue.\n",
        "createdAt" : "2016-10-31T21:41:25Z",
        "updatedAt" : "2016-11-02T18:05:32Z",
        "lastEditedBy" : "a6409368-42e0-44a9-bf79-9d3042ac3b65",
        "tags" : [
        ]
      },
      {
        "id" : "6d66abc9-e249-481b-a14f-103e6a65f6f5",
        "parentId" : "e0c71995-9745-437e-a09a-e97c44873679",
        "authorId" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "body" : "Yes, it does. (See line 1424 below). This method is a noop if `len(runningPod.Containers) == 0`, this is just an optimizitaion.\n",
        "createdAt" : "2016-11-02T02:19:29Z",
        "updatedAt" : "2016-11-02T18:05:32Z",
        "lastEditedBy" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "tags" : [
        ]
      }
    ],
    "commit" : "ec9111d94218cb564c4f9ed06b06a570406966d1",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +1398,1402 @@func (dm *DockerManager) killPodWithSyncResult(pod *api.Pod, runningPod kubecontainer.Pod, gracePeriodOverride *int64) (result kubecontainer.PodSyncResult) {\n\t// Short circuit if there's nothing to kill.\n\tif len(runningPod.Containers) == 0 {\n\t\treturn\n\t}"
  },
  {
    "id" : "89d18397-3ff1-45e0-a575-fa793438a5c3",
    "prId" : 35240,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/35240#pullrequestreview-5182209",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "486743a4-e3a0-4afb-80d0-6be1345e549a",
        "parentId" : null,
        "authorId" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "body" : "please log something like \"cannot find net ns of TERMNINATED container ID in pod NAME\" \n",
        "createdAt" : "2016-10-20T23:31:05Z",
        "updatedAt" : "2016-10-21T00:15:56Z",
        "lastEditedBy" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "tags" : [
        ]
      },
      {
        "id" : "fae6bc48-f3bf-479d-9a9f-c84b190a6cc9",
        "parentId" : "486743a4-e3a0-4afb-80d0-6be1345e549a",
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "Sure. I set it to V(4) as this could get spammy.\n",
        "createdAt" : "2016-10-21T00:16:48Z",
        "updatedAt" : "2016-10-21T00:16:48Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "fee4c9a7d94e4a44a3b54f04f4e6e17fe2dde3f5",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +2532,2536 @@\t\treturn \"\", err\n\t}\n\tif inspectResult.State.Pid == 0 {\n\t\t// Docker reports pid 0 for an exited container. We can't use it to\n\t\t// check the network namespace, so return an empty string instead."
  },
  {
    "id" : "ee1da94c-60a4-4bf5-aa24-b7f386bbbacb",
    "prId" : 33663,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/33663#pullrequestreview-6238254",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d27330b6-3b3b-4f98-a3b4-eb5657bbbffe",
        "parentId" : null,
        "authorId" : "c63e1ceb-64bd-4726-b8ef-e647d73dae0c",
        "body" : "Any reason why this was not here before?\n",
        "createdAt" : "2016-10-27T11:30:20Z",
        "updatedAt" : "2016-10-27T11:45:21Z",
        "lastEditedBy" : "c63e1ceb-64bd-4726-b8ef-e647d73dae0c",
        "tags" : [
        ]
      },
      {
        "id" : "c9f2a145-c3e5-47a4-a700-82a537c7e4f8",
        "parentId" : "d27330b6-3b3b-4f98-a3b4-eb5657bbbffe",
        "authorId" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "body" : "I wasn't as smart before :)  It was a bug.\n",
        "createdAt" : "2016-10-28T13:08:15Z",
        "updatedAt" : "2016-10-28T13:08:15Z",
        "lastEditedBy" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "tags" : [
        ]
      }
    ],
    "commit" : "aa855b9f24d73e4b62aab7cd15ddb4bf1f5061dc",
    "line" : 49,
    "diffHunk" : "@@ -1,1 +664,668 @@\t\t\t// Have docker relabel the termination log path if SELinux is\n\t\t\t// enabled.\n\t\t\tif selinux.SELinuxEnabled() {\n\t\t\t\tb += \":Z\"\n\t\t\t}"
  },
  {
    "id" : "58e2d65e-fc71-4359-a6d6-713924ef6326",
    "prId" : 33014,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/33014#pullrequestreview-564108",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5abbb69d-40a5-4e39-b097-4d78e097f0a1",
        "parentId" : null,
        "authorId" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "body" : "Do you think this could be cleaner as a switch block?\n",
        "createdAt" : "2016-09-19T14:14:04Z",
        "updatedAt" : "2016-10-05T00:38:55Z",
        "lastEditedBy" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "tags" : [
        ]
      },
      {
        "id" : "6b5ef7b2-e23c-4cd6-8f93-0a9c7b3728ed",
        "parentId" : "5abbb69d-40a5-4e39-b097-4d78e097f0a1",
        "authorId" : "3a4b4830-dc71-4d7e-a7db-de2453284945",
        "body" : "hmm... like\n\n``` go\nswitch {\ncase err != nil:\n  utilruntime.HandleError(fmt.Errorf(\"unable to inspect docker image %q while inspecting docker container %q: %v\", containerName, iResult.Image, err))\ncase len(imgInspectResult.RepoDigests) > 1:\n  glog.V(4).Infof(\"Container %q had more than one associated RepoDigest (%v), only using the first\", containerName, imgInspectResult.RepoDigests)\n  fallthrough\ncase len(imgInspectResult.RepoDigests) > 0:\n  imageID = xyz\n```\n\nMaybe?  I could also just move the logging if statement out a bit (it doesn't need to be nested like it is).  I'm not convinced that a switch is better than that \n",
        "createdAt" : "2016-09-19T14:40:32Z",
        "updatedAt" : "2016-10-05T00:38:55Z",
        "lastEditedBy" : "3a4b4830-dc71-4d7e-a7db-de2453284945",
        "tags" : [
        ]
      },
      {
        "id" : "5e0db242-0aff-4df4-b5cb-3a786c00863e",
        "parentId" : "5abbb69d-40a5-4e39-b097-4d78e097f0a1",
        "authorId" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "body" : "Yeah, something like that. I was trying to get rid of the nesting if possible.\n",
        "createdAt" : "2016-09-19T14:44:55Z",
        "updatedAt" : "2016-10-05T00:38:55Z",
        "lastEditedBy" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "tags" : [
        ]
      }
    ],
    "commit" : "01b0b5ed703d1f72ab074f84022342d171906389",
    "line" : null,
    "diffHunk" : "@@ -1,1 +401,405 @@\timageID := DockerPrefix + iResult.Image\n\timgInspectResult, err := dm.client.InspectImageByID(iResult.Image)\n\tif err != nil {\n\t\tutilruntime.HandleError(fmt.Errorf(\"unable to inspect docker image %q while inspecting docker container %q: %v\", containerName, iResult.Image, err))\n\t} else {"
  },
  {
    "id" : "014d47b7-10ef-4f57-847d-83f569e294b1",
    "prId" : 32383,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/32383#pullrequestreview-4461136",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "16f1c061-9215-4e58-a194-6d30f8787b2c",
        "parentId" : null,
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "Wait this assumes that all namespaces are shared. \nWhy not validate the sysctls against the whitelist every time before applying it?\n",
        "createdAt" : "2016-09-09T16:17:54Z",
        "updatedAt" : "2016-11-01T12:14:23Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      },
      {
        "id" : "4d4348af-9331-4ba7-8976-a86920786032",
        "parentId" : "16f1c061-9215-4e58-a194-6d30f8787b2c",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "Was thinking about this alternative as well. The namespaces ipc and net are either the host ones (in case they don't pass validation) or they are shared among the containers of the pod (in which case it's enough to set the sysctls for the infra container).\n\nI can of course recheck the sysctls. Are there other examples following that route?\n",
        "createdAt" : "2016-09-09T16:30:02Z",
        "updatedAt" : "2016-11-01T12:14:23Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "003ce96d-c38b-4809-b382-e605cddcb1cc",
        "parentId" : "16f1c061-9215-4e58-a194-6d30f8787b2c",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "I wonder whether the issue really an issue: on kubelet restart all pods go through pod admission again. I would expect that pods now invalid in 1.4 would be terminated. Is the behavior supposed to be like that?\n\nStrangely, during my manual 1.3->1.4 testing I don't see that. Still investigating.\n",
        "createdAt" : "2016-09-10T11:01:24Z",
        "updatedAt" : "2016-11-01T12:14:23Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "337a3413-f251-417e-b441-bb4fb80ad05a",
        "parentId" : "16f1c061-9215-4e58-a194-6d30f8787b2c",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "I have validated the expected behaviour now by replacing the kubelet manually on a 1.3 node with the binary of 1.4 (i.e. without node reboot/restart). Containers go through admission and are killed with the `SysctlUnsupported` reason.\n\nHence, while I still think we can merge this PR because the infra ctr is enough, it is not a security issue anymore, and not critical for 1.4.\n",
        "createdAt" : "2016-09-10T12:21:03Z",
        "updatedAt" : "2016-11-01T12:14:23Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "b5fd6ce9-0738-48e5-86e6-59c143f44820",
        "parentId" : "16f1c061-9215-4e58-a194-6d30f8787b2c",
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "Sorry for the disappearing for a while. This PR is useful to be merged into a v1.4 patch release. So let's get it through.\nIdeally, kubelet should vet all pods for all configured security policies upon start-up, since this scenario will be applicable to other security features too. Restarting pods might be troublesome and so failing pods due to failing security checks might be a good thing to do.\n\nWDYT? We should also validate against the whitelist everytime before applying it in general.\n",
        "createdAt" : "2016-10-07T23:30:01Z",
        "updatedAt" : "2016-11-01T12:14:23Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      },
      {
        "id" : "066a447a-71ee-4bf3-929b-5ccb80e82e61",
        "parentId" : "16f1c061-9215-4e58-a194-6d30f8787b2c",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "@vishh welcome back! \n\nThis very PR is not about validation, but about applying sysctls only for the infra pod. I think this is the right behavior as we only allow namespaced sysctls anyway. It's only a slight optimization though. Feel free to get this through with a lgtm.\n\nThe other topic is validation. I am pretty hesitant to add a whitelist check in the dockermanager: we have the invariant that only pods which passed kubelet admission (and therefore the whitelist) are actually processed by the runtime. Moreover, with another check here we add a dependency from the runtime back to the kubelet which contradicts the goal of the CRI, or at least requires us to inject the whitelist into the runtime.\n\nTo make sure the existing validation continues to work, we have:\n- a unit test for admission handlers on pod addition: https://github.com/sttts/kubernetes/blob/1854bdcb0cc4c31eb9cf8db7b87a893f6209ed2e/pkg/kubelet/kubelet_test.go#L1833\n- e2e tests which check rejection for pods which are not whitelisted: https://github.com/sttts/kubernetes/blob/dd7826359c1d958af3d5d323e44b42bfbfdda26f/test/e2e/common/sysctl.go#L165-L165\n\nWhat we lack AFAIK is an explicit integration tests which checks that on kubelet restart existing pods are terminated if they are not admitted anymore.\n",
        "createdAt" : "2016-10-17T12:18:58Z",
        "updatedAt" : "2016-11-01T12:14:23Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "962e7534b4ee9df96d88883138fa958451972910",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +688,692 @@\n\t// Set sysctls if requested\n\tif container.Name == PodInfraContainerName {\n\t\tsysctls, unsafeSysctls, err := api.SysctlsFromPodAnnotations(pod.Annotations)\n\t\tif err != nil {"
  },
  {
    "id" : "25de04d9-de0f-41e5-bfb2-e88f030945ec",
    "prId" : 31911,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8edcb7c3-d94a-455c-8c9c-9e9ee9b3f46a",
        "parentId" : null,
        "authorId" : "c63e1ceb-64bd-4726-b8ef-e647d73dae0c",
        "body" : "What does it mean for a hook to complete? Is it the common terminology? What about \"did not finish\"?\n",
        "createdAt" : "2016-09-05T08:36:01Z",
        "updatedAt" : "2016-10-10T18:24:11Z",
        "lastEditedBy" : "c63e1ceb-64bd-4726-b8ef-e647d73dae0c",
        "tags" : [
        ]
      }
    ],
    "commit" : "83f447e6a6c70756b072e1fc6f5831e0fe8723a6",
    "line" : null,
    "diffHunk" : "@@ -1,1 +1530,1534 @@\t\tcase <-time.After(time.Duration(gracePeriod) * time.Second):\n\t\t\tglog.Warningf(\"preStop hook for container %q did not complete in %d seconds\", name, gracePeriod)\n\t\t\tmessage := fmt.Sprintf(\"preStop hook for container %q did not complete in %d seconds\", name, gracePeriod)\n\t\t\tdm.generateFailedContainerEvent(containerID, pod.Name, events.UnfinishedPreStopHook, message)\n\t\tcase <-done:"
  },
  {
    "id" : "b49cf011-53ea-404d-8976-708a98a0b2a8",
    "prId" : 31707,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/31707#pullrequestreview-3197520",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9d584377-f6d2-4862-bcff-4ad22d5c6079",
        "parentId" : null,
        "authorId" : "57f729dd-988a-4d1a-83bf-ee70bf637c64",
        "body" : "This is probably something we should clear up for Linux too; instead of having the !network.DefaultPluginName check just below, we could have the default plugin just do the equivalent of this block.\n\nI forget if docker adds the host IP address to the container properties for HostNetwork mode though?\n",
        "createdAt" : "2016-10-06T20:33:13Z",
        "updatedAt" : "2016-11-01T21:45:56Z",
        "lastEditedBy" : "57f729dd-988a-4d1a-83bf-ee70bf637c64",
        "tags" : [
        ]
      }
    ],
    "commit" : "6daab2628000c65229f5617bfcb6f04feded5e03",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +343,347 @@// of the caller to ensure that the correct container is passed.\nfunc (dm *DockerManager) determineContainerIP(podNamespace, podName string, container *dockertypes.ContainerJSON) (string, error) {\n\tresult := getContainerIP(container)\n\n\tnetworkMode := getDockerNetworkMode(container)"
  },
  {
    "id" : "8af39ee4-f7c9-485c-8022-a116f34f82f7",
    "prId" : 30118,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d57a8098-61b2-4e8f-82ac-faab4a68beae",
        "parentId" : null,
        "authorId" : "a6409368-42e0-44a9-bf79-9d3042ac3b65",
        "body" : "So we assume the docker version >= v1.10 here? \n",
        "createdAt" : "2016-08-12T23:50:58Z",
        "updatedAt" : "2016-08-15T20:25:33Z",
        "lastEditedBy" : "a6409368-42e0-44a9-bf79-9d3042ac3b65",
        "tags" : [
        ]
      },
      {
        "id" : "4b637cbc-508e-426a-ba5f-c1c5e33793da",
        "parentId" : "d57a8098-61b2-4e8f-82ac-faab4a68beae",
        "authorId" : "a6409368-42e0-44a9-bf79-9d3042ac3b65",
        "body" : "I misread it through reviewable. I saw it is still checked through getSetcomOpts method. \n",
        "createdAt" : "2016-08-13T00:01:52Z",
        "updatedAt" : "2016-08-15T20:25:33Z",
        "lastEditedBy" : "a6409368-42e0-44a9-bf79-9d3042ac3b65",
        "tags" : [
        ]
      },
      {
        "id" : "8c48a113-adc0-41a0-91e9-e6564c04ec2c",
        "parentId" : "d57a8098-61b2-4e8f-82ac-faab4a68beae",
        "authorId" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "body" : "Yeah. Just to clarify in case there's still any confusion:\n- Seccomp requires docker >= v1.10\n- AppArmor requires docker >= v1.3 (I think?)\n- The API for specifying the options changed with v1.11\n\nThese options here are just for formatting the options.\n",
        "createdAt" : "2016-08-13T00:07:31Z",
        "updatedAt" : "2016-08-15T20:25:33Z",
        "lastEditedBy" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "tags" : [
        ]
      }
    ],
    "commit" : "db6629228f656b9f92d53cba230f9722ec498e8e",
    "line" : 48,
    "diffHunk" : "@@ -1,1 +1056,1060 @@\n\tconst (\n\t\t// Docker changed the API for specifying options in v1.11\n\t\toptSeparatorChangeVersion = \"1.23\" // Corresponds to docker 1.11.x\n\t\toptSeparatorOld           = ':'"
  },
  {
    "id" : "74c4d3e8-514d-430e-b8d2-d5e49999e957",
    "prId" : 28159,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "768c7509-9b29-45fd-8f11-a288ef0d5df3",
        "parentId" : null,
        "authorId" : "6252ac4b-6b9e-4dee-8931-ca3b934d52fc",
        "body" : "Although this change is not part of this PR,  below it return nil, wonder why not return defaultSecurityOpts? \n",
        "createdAt" : "2016-06-28T14:21:27Z",
        "updatedAt" : "2016-06-28T14:45:10Z",
        "lastEditedBy" : "6252ac4b-6b9e-4dee-8931-ca3b934d52fc",
        "tags" : [
        ]
      },
      {
        "id" : "3f30998e-f439-4895-ad3f-d2f23fc4618a",
        "parentId" : "768c7509-9b29-45fd-8f11-a288ef0d5df3",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "Docker default is not unconfined, but something which fits to the selected capabilities. Kubernetes chose another default than Docker here.\n",
        "createdAt" : "2016-06-28T14:50:50Z",
        "updatedAt" : "2016-06-28T14:50:50Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "186c6b29c1060b54631954defad8fdce4427d8c8",
    "line" : 65,
    "diffHunk" : "@@ -1,1 +1016,1020 @@\t}\n\n\tif profile == \"docker/default\" {\n\t\t// return nil so docker will load the default seccomp profile\n\t\treturn nil, nil"
  }
]