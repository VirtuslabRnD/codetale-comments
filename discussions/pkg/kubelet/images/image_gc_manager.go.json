[
  {
    "id" : "989f7091-9f11-4475-bebb-028e35be300d",
    "prId" : 78626,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/78626#pullrequestreview-244610175",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "20ef92bb-8085-4bdd-a9d7-604b987458c5",
        "parentId" : null,
        "authorId" : "9829b6c0-e54c-401b-8d97-73e5aa4e83c1",
        "body" : "/lgtm\r\n/priority backlog\r\n/assign @dashpole",
        "createdAt" : "2019-06-02T05:24:40Z",
        "updatedAt" : "2019-06-02T05:24:46Z",
        "lastEditedBy" : "9829b6c0-e54c-401b-8d97-73e5aa4e83c1",
        "tags" : [
        ]
      }
    ],
    "commit" : "f6edee0fe198aef28d60bdf887bc180acb0a8df5",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +109,113 @@type imageCache struct {\n\t// sync.Mutex is the mutex protects the image cache.\n\tsync.Mutex\n\t// images is the image cache.\n\timages []container.Image"
  },
  {
    "id" : "472b30f1-eb82-4f84-8e39-d955ce8bb365",
    "prId" : 57020,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/57020#pullrequestreview-84335200",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "34ac5849-e343-4a0c-b1c8-a295541aa8d3",
        "parentId" : null,
        "authorId" : "224e1088-78fe-4bdd-99d1-31be3e464996",
        "body" : "what was the impact of this earlier for a running container ? Did this cause the container to be killed if its image was GC'd ? If yes , why was it not detected until now ? Is the kubelet GC feature not enabled by default ?",
        "createdAt" : "2017-12-11T08:11:10Z",
        "updatedAt" : "2017-12-11T08:11:11Z",
        "lastEditedBy" : "224e1088-78fe-4bdd-99d1-31be3e464996",
        "tags" : [
        ]
      },
      {
        "id" : "eef6ae3e-6784-45ee-89be-20bd696b0b28",
        "parentId" : "34ac5849-e343-4a0c-b1c8-a295541aa8d3",
        "authorId" : "3c1422a0-6358-4857-8f56-961979171514",
        "body" : "> Did this cause the container to be killed if its image was GC'd? If yes , why was it not detected until now ? \r\n\r\nThis function is to delete unused images to free some space. No containers will be killed since deleting a image that is referred by a running container is forbid. The containers won't become orphanage.\r\n\r\n> Is the kubelet GC feature not enabled by default ?\r\n\r\nImage GC is enabled  by default.",
        "createdAt" : "2017-12-11T08:26:32Z",
        "updatedAt" : "2017-12-11T08:29:43Z",
        "lastEditedBy" : "3c1422a0-6358-4857-8f56-961979171514",
        "tags" : [
        ]
      },
      {
        "id" : "75dbc56d-4e18-4f1d-a672-a4390db951c4",
        "parentId" : "34ac5849-e343-4a0c-b1c8-a295541aa8d3",
        "authorId" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "body" : "So IIUC, this behavior was previously enforced by the runtime, but now you're making the Kubelet enforce it?",
        "createdAt" : "2017-12-18T22:20:15Z",
        "updatedAt" : "2017-12-18T22:21:57Z",
        "lastEditedBy" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "tags" : [
        ]
      },
      {
        "id" : "4ea3920f-c8ba-4c1a-848a-5ad24d5846bd",
        "parentId" : "34ac5849-e343-4a0c-b1c8-a295541aa8d3",
        "authorId" : "3c1422a0-6358-4857-8f56-961979171514",
        "body" : "@tallclair  When `kubelet` is trying to free space by deleting docker images, images that are used by running containers are not skipped.\r\n\r\nEven if we let runtime to handle this, these images should not be deleted.\r\n\r\nWhat I am trying to do here is to skip these in-use images to avoid unnecessary overheads and spam log messages as well. ",
        "createdAt" : "2017-12-19T03:28:20Z",
        "updatedAt" : "2017-12-19T03:31:21Z",
        "lastEditedBy" : "3c1422a0-6358-4857-8f56-961979171514",
        "tags" : [
        ]
      }
    ],
    "commit" : "4f400e5d2f35f47f98dcb57635c80e86dbe6484a",
    "line" : 67,
    "diffHunk" : "@@ -1,1 +325,329 @@\t\t\tglog.V(5).Infof(\"Image ID %s is being used\", image)\n\t\t\tcontinue\n\t\t}\n\t\timages = append(images, evictionInfo{\n\t\t\tid:          image,"
  },
  {
    "id" : "68cba654-d73d-4594-99ca-2563307a3c4f",
    "prId" : 57020,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/57020#pullrequestreview-84335200",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3c6faf14-1cd4-495f-9a9e-a4b089c5c20e",
        "parentId" : null,
        "authorId" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "body" : "Why make this change?",
        "createdAt" : "2017-12-18T22:18:35Z",
        "updatedAt" : "2017-12-18T22:21:57Z",
        "lastEditedBy" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "tags" : [
        ]
      },
      {
        "id" : "f9a2fb83-2965-4f3c-947c-741f69ef1ac7",
        "parentId" : "3c6faf14-1cd4-495f-9a9e-a4b089c5c20e",
        "authorId" : "3c1422a0-6358-4857-8f56-961979171514",
        "body" : "Here we only need `imageID`. Also we only got imageID in `ImageRecords`.\r\n\r\nChanging to `imageID` makes it more convenient for calling.",
        "createdAt" : "2017-12-19T03:31:09Z",
        "updatedAt" : "2017-12-19T03:31:21Z",
        "lastEditedBy" : "3c1422a0-6358-4857-8f56-961979171514",
        "tags" : [
        ]
      }
    ],
    "commit" : "4f400e5d2f35f47f98dcb57635c80e86dbe6484a",
    "line" : 76,
    "diffHunk" : "@@ -1,1 +391,395 @@}\n\nfunc isImageUsed(imageID string, imagesInUse sets.String) bool {\n\t// Check the image ID.\n\tif _, ok := imagesInUse[imageID]; ok {"
  },
  {
    "id" : "16ef0b2d-01ac-4a83-8aa1-de640ecfe874",
    "prId" : 38375,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/38375#pullrequestreview-12128627",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "07e97fb4-0357-4502-b8fd-58fb3f6e68b2",
        "parentId" : null,
        "authorId" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "body" : "I don't think we can easily merge the two loops. Not sure what this TODO is meant for.",
        "createdAt" : "2016-12-08T17:12:54Z",
        "updatedAt" : "2016-12-08T22:04:16Z",
        "lastEditedBy" : "1bd2d65a-7c93-4c22-b408-c7794d037dc5",
        "tags" : [
        ]
      },
      {
        "id" : "e9acc5e7-1d67-4b0d-93be-92148d191227",
        "parentId" : "07e97fb4-0357-4502-b8fd-58fb3f6e68b2",
        "authorId" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "body" : "`detectImages` also list image, in fact we can image list there. However, it doesn't list images as frequently as we need, so I add a TODO here to consider this later if needed. :)",
        "createdAt" : "2016-12-08T22:05:52Z",
        "updatedAt" : "2016-12-08T22:05:52Z",
        "lastEditedBy" : "4e418bc8-21fb-4523-80c1-9c751c193126",
        "tags" : [
        ]
      }
    ],
    "commit" : "816f867c62bb30c81ea5ecfc614051d408a518e7",
    "line" : 37,
    "diffHunk" : "@@ -1,1 +169,173 @@\n\t// Start a goroutine periodically updates image cache.\n\t// TODO(random-liu): Merge this with the previous loop.\n\tgo wait.Until(func() {\n\t\timages, err := im.runtime.ListImages()"
  }
]