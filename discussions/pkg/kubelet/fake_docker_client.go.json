[
  {
    "id" : "d79d0f3a-7e15-40bd-a688-649e0379d80e",
    "prId" : 587,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0a87b438-fc75-44d9-855a-66bf8fdc68b3",
        "parentId" : null,
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Move to top of function\n",
        "createdAt" : "2014-07-23T17:30:39Z",
        "updatedAt" : "2014-07-23T18:45:25Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "1f78b0fc6fe497dc2bcee755cc28369756ac41d0",
    "line" : null,
    "diffHunk" : "@@ -1,1 +61,65 @@// It adds an entry \"create\" to the internal method call record.\nfunc (f *FakeDockerClient) CreateContainer(c docker.CreateContainerOptions) (*docker.Container, error) {\n\tf.lock.Lock()\n\tdefer f.lock.Unlock()\n\tf.called = append(f.called, \"create\")"
  },
  {
    "id" : "d675d573-f557-4de6-939a-a94676a22f44",
    "prId" : 587,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5e6e6582-285f-4280-a274-e4d16af66bfe",
        "parentId" : null,
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Move to top of function (and others)\n",
        "createdAt" : "2014-07-23T17:30:47Z",
        "updatedAt" : "2014-07-23T18:45:25Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "e3449af5-113a-433f-8ea1-30233e5617d0",
        "parentId" : "5e6e6582-285f-4280-a274-e4d16af66bfe",
        "authorId" : "473c3a16-cb87-4189-9496-af8b26ead122",
        "body" : "I think I can't in this case. The `f.appendCall()` method also calls `Lock()` on the same structure.\n",
        "createdAt" : "2014-07-23T17:35:46Z",
        "updatedAt" : "2014-07-23T18:45:25Z",
        "lastEditedBy" : "473c3a16-cb87-4189-9496-af8b26ead122",
        "tags" : [
        ]
      },
      {
        "id" : "9db1c72c-a996-49cc-8554-2eb74d48c64b",
        "parentId" : "5e6e6582-285f-4280-a274-e4d16af66bfe",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "With actual locks in place, seems like appendCall is no longer necessary.  Also, it's a one liner and it's better off inlined.\n",
        "createdAt" : "2014-07-23T17:40:54Z",
        "updatedAt" : "2014-07-23T18:45:25Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "2db086c1-dfdd-4e81-aee7-c544bcf7b7e3",
        "parentId" : "5e6e6582-285f-4280-a274-e4d16af66bfe",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Perhaps make appendCall() require the lock be held already.\n",
        "createdAt" : "2014-07-23T17:58:51Z",
        "updatedAt" : "2014-07-23T18:45:25Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "1f78b0fc6fe497dc2bcee755cc28369756ac41d0",
    "line" : null,
    "diffHunk" : "@@ -1,1 +84,88 @@// It adds an entry \"stop\" to the internal method call record.\nfunc (f *FakeDockerClient) StopContainer(id string, timeout uint) error {\n\tf.lock.Lock()\n\tdefer f.lock.Unlock()\n\tf.called = append(f.called, \"stop\")"
  },
  {
    "id" : "034fb305-dce1-43be-b6d6-2d2be64f1d30",
    "prId" : 587,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dd0a21dc-6ab3-4e7e-85fd-ad24e94eace1",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "If this applies to all members, perhaps use struct embedding-- omit the name \"lock\"? Just an idea.\n",
        "createdAt" : "2014-07-23T17:58:06Z",
        "updatedAt" : "2014-07-23T18:45:25Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "6a4793f0-47c4-443a-9b1c-fdb1e610f35f",
        "parentId" : "dd0a21dc-6ab3-4e7e-85fd-ad24e94eace1",
        "authorId" : "473c3a16-cb87-4189-9496-af8b26ead122",
        "body" : "Clayton had a good argument against omitting the `lock` name:\n\n> inlining the lock makes Lock and Unlock public, it's considered bad form to do that (unless someone needs to use that lock external to the client).\n",
        "createdAt" : "2014-07-23T18:08:27Z",
        "updatedAt" : "2014-07-23T18:45:25Z",
        "lastEditedBy" : "473c3a16-cb87-4189-9496-af8b26ead122",
        "tags" : [
        ]
      },
      {
        "id" : "148f7a7e-43d6-447b-9cf9-6173cf1004f7",
        "parentId" : "dd0a21dc-6ab3-4e7e-85fd-ad24e94eace1",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Fair enough.\n",
        "createdAt" : "2014-07-23T18:23:07Z",
        "updatedAt" : "2014-07-23T18:45:25Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "1f78b0fc6fe497dc2bcee755cc28369756ac41d0",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +26,30 @@// FakeDockerClient is a simple fake docker client, so that kubelet can be run for testing without requiring a real docker setup.\ntype FakeDockerClient struct {\n\tlock          sync.Mutex\n\tcontainerList []docker.APIContainers\n\tcontainer     *docker.Container"
  },
  {
    "id" : "bc805957-57f9-4f3e-bf1b-4143fbcf7da3",
    "prId" : 213,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b3631310-2cba-4686-9164-62a3cd73dc6c",
        "parentId" : null,
        "authorId" : "6001b825-f0f9-4fc3-b624-34a076b031e1",
        "body" : "Have you consider http://godoc.org/code.google.com/p/gomock/gomock?\n",
        "createdAt" : "2014-06-24T05:10:43Z",
        "updatedAt" : "2014-06-24T23:57:46Z",
        "lastEditedBy" : "6001b825-f0f9-4fc3-b624-34a076b031e1",
        "tags" : [
        ]
      },
      {
        "id" : "2555d327-b8d0-44d6-9135-769e271084e6",
        "parentId" : "b3631310-2cba-4686-9164-62a3cd73dc6c",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "We already started using github.com/stretchr/testify/mock in kublet_test.go. We should standardize now, before we get too large of a mix of testing methods. But not in this PR.\n",
        "createdAt" : "2014-06-24T17:22:23Z",
        "updatedAt" : "2014-06-24T23:57:46Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "f7968ce00b2a66b9d7d3067404e406d19a1ddd55",
    "line" : 1,
    "diffHunk" : "@@ -1,1 +-1,3 @@/*\nCopyright 2014 Google Inc. All rights reserved.\n"
  }
]