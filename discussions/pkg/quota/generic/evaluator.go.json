[
  {
    "id" : "2f62fb5d-21e6-49de-8f17-a7533ad5066e",
    "prId" : 54320,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/54320#pullrequestreview-71557931",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b72c46f4-2369-42a6-b6b2-de42b2915c0b",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "Something better than `f`?  `informerForResource` would make the code below easier to read.",
        "createdAt" : "2017-10-24T15:13:02Z",
        "updatedAt" : "2017-10-27T15:08:48Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "a9765bcebe77ce4e62dcbdacaa5bb0910220cef0",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +35,39 @@\n// ListerFuncForResourceFunc knows how to provision a lister from an informer func\nfunc ListerFuncForResourceFunc(f InformerForResourceFunc) quota.ListerForResourceFunc {\n\treturn func(gvr schema.GroupVersionResource) (cache.GenericLister, error) {\n\t\tinformer, err := f(gvr)"
  },
  {
    "id" : "cec923eb-6bf2-44ee-a7e8-84e8e1d290b7",
    "prId" : 54320,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/54320#pullrequestreview-71566646",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8c9c6c22-aaaf-4080-9336-44829b58692b",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "`l` is hard to read in the function.  `listerForResource`?",
        "createdAt" : "2017-10-24T15:34:56Z",
        "updatedAt" : "2017-10-27T15:08:48Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "a9765bcebe77ce4e62dcbdacaa5bb0910220cef0",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +46,50 @@\n// ListResourceUsingListerFunc returns a listing function based on the shared informer factory for the specified resource.\nfunc ListResourceUsingListerFunc(l quota.ListerForResourceFunc, resource schema.GroupVersionResource) ListFuncByNamespace {\n\treturn func(namespace string) ([]runtime.Object, error) {\n\t\tlister, err := l(resource)"
  },
  {
    "id" : "5afd51e2-5670-4c1f-b279-5d7574d05970",
    "prId" : 34554,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/34554#pullrequestreview-11612178",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "68f255c9-2366-447f-b699-9b14c5dc30cc",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "I like this change a lot.",
        "createdAt" : "2016-12-06T15:36:07Z",
        "updatedAt" : "2016-12-09T18:27:15Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "459a7a05f18bc242e9e4c756102d53086651354a",
    "line" : 208,
    "diffHunk" : "@@ -1,1 +125,129 @@// that associates usage of the specified resource based on the number of items\n// returned by the specified listing function.\ntype ObjectCountEvaluator struct {\n\t// AllowCreateOnUpdate if true will ensure the evaluator tracks create\n\t// and update operations."
  },
  {
    "id" : "1e603d37-f290-40bd-949f-55197664ecb4",
    "prId" : 20446,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9ad83cce-8b25-4772-b2c6-01b4db65b12b",
        "parentId" : null,
        "authorId" : "5de7a1ed-c1fb-4e4e-b01c-149ca3578c83",
        "body" : "Type assert for `Evaluator` might serve as a good piece of documentation.\n",
        "createdAt" : "2016-02-12T08:36:00Z",
        "updatedAt" : "2016-02-27T01:48:30Z",
        "lastEditedBy" : "5de7a1ed-c1fb-4e4e-b01c-149ca3578c83",
        "tags" : [
        ]
      }
    ],
    "commit" : "95df07aa9d4b36dc67458be7416f46cb2f3f72d8",
    "line" : null,
    "diffHunk" : "@@ -1,1 +71,75 @@\n// GenericEvaluator provides an implementation for quota.Evaluator\ntype GenericEvaluator struct {\n\t// Name used for logging\n\tName string"
  },
  {
    "id" : "72556079-7118-4343-b3bb-8cfc0ccf4710",
    "prId" : 20446,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2f90bbb7-5c3f-45aa-a976-49697649734e",
        "parentId" : null,
        "authorId" : "5de7a1ed-c1fb-4e4e-b01c-149ca3578c83",
        "body" : "I'd add a note that this needs to be specified, when the evaluator needs to handle `UPDATE` operation.\n",
        "createdAt" : "2016-02-12T09:32:42Z",
        "updatedAt" : "2016-02-27T01:48:30Z",
        "lastEditedBy" : "5de7a1ed-c1fb-4e4e-b01c-149ca3578c83",
        "tags" : [
        ]
      }
    ],
    "commit" : "95df07aa9d4b36dc67458be7416f46cb2f3f72d8",
    "line" : null,
    "diffHunk" : "@@ -1,1 +88,92 @@\t// A function that knows how to get resource in a namespace\n\t// This function must be specified if the evaluator needs to handle UPDATE\n\tGetFuncByNamespace GetFuncByNamespace\n\t// A function that checks required constraints are satisfied\n\tConstraintsFunc ConstraintsFunc"
  }
]