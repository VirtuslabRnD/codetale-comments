[
  {
    "id" : "0df88147-e69e-45cf-814e-871135c62cdd",
    "prId" : 55413,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/55413#pullrequestreview-75575881",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "239d02ed-4f02-459e-acdf-08a74dc163c0",
        "parentId" : null,
        "authorId" : "a3d6d690-2601-4c58-a5bc-a3eaa025f8e0",
        "body" : "Do we need to handle the case when `len(selector.MatchExpressions) != 0`?",
        "createdAt" : "2017-11-09T20:10:31Z",
        "updatedAt" : "2017-11-09T20:10:31Z",
        "lastEditedBy" : "a3d6d690-2601-4c58-a5bc-a3eaa025f8e0",
        "tags" : [
        ]
      },
      {
        "id" : "902b38cb-6845-4c30-b155-7ff52e4df2d0",
        "parentId" : "239d02ed-4f02-459e-acdf-08a74dc163c0",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "no, if `MatchExpressions` is non-empty, then `MatchLabels` is insufficient to express the full selector, and we should not set it.\r\n\r\nThis is the same logic as before, only setting `out.Selector = in.Selector.MatchLabels` when MatchExpressions is zero-length:\r\n```\r\nif in.Selector.MatchExpressions == nil || len(in.Selector.MatchExpressions) == 0 {\r\n\tout.Selector = in.Selector.MatchLabels\r\n}\r\n```",
        "createdAt" : "2017-11-09T20:21:03Z",
        "updatedAt" : "2017-11-09T20:21:33Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "6c5bfd96-8eb1-4e6d-aebf-d4685954a67b",
        "parentId" : "239d02ed-4f02-459e-acdf-08a74dc163c0",
        "authorId" : "a3d6d690-2601-4c58-a5bc-a3eaa025f8e0",
        "body" : "Good point, thanks!",
        "createdAt" : "2017-11-09T20:28:24Z",
        "updatedAt" : "2017-11-09T20:28:24Z",
        "lastEditedBy" : "a3d6d690-2601-4c58-a5bc-a3eaa025f8e0",
        "tags" : [
        ]
      }
    ],
    "commit" : "cccbf622f03754f219f90b73f02ac6ac0bf3a23c",
    "line" : 48,
    "diffHunk" : "@@ -1,1 +190,194 @@\t\treturn fmt.Errorf(\"failed to parse selector: %v\", err)\n\t}\n\tif len(selector.MatchExpressions) == 0 {\n\t\tout.Selector = selector.MatchLabels\n\t}"
  },
  {
    "id" : "4b196d51-02e0-4290-9f44-9e05b3476d34",
    "prId" : 46669,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/46669#pullrequestreview-41129423",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "10761e9a-5613-4dbd-b02a-c02bfa54bd35",
        "parentId" : null,
        "authorId" : "224e1088-78fe-4bdd-99d1-31be3e464996",
        "body" : "and if its nil, set it to 2 ?",
        "createdAt" : "2017-05-31T03:42:40Z",
        "updatedAt" : "2017-06-06T20:47:39Z",
        "lastEditedBy" : "224e1088-78fe-4bdd-99d1-31be3e464996",
        "tags" : [
        ]
      },
      {
        "id" : "249f2214-c3c8-44da-a530-e9003cbc7778",
        "parentId" : "10761e9a-5613-4dbd-b02a-c02bfa54bd35",
        "authorId" : "6935d5b2-c3de-4596-9c98-055bd55df973",
        "body" : "defaults.go not conversions",
        "createdAt" : "2017-05-31T04:09:02Z",
        "updatedAt" : "2017-06-06T20:47:39Z",
        "lastEditedBy" : "6935d5b2-c3de-4596-9c98-055bd55df973",
        "tags" : [
        ]
      }
    ],
    "commit" : "1a784ef86ff94994e984753d885ffeff6e1772ac",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +117,121 @@\tif in.RevisionHistoryLimit != nil {\n\t\tout.RevisionHistoryLimit = new(int32)\n\t\t*out.RevisionHistoryLimit = *in.RevisionHistoryLimit\n\t} else {\n\t\tout.RevisionHistoryLimit = nil"
  },
  {
    "id" : "27fc331c-a00a-4087-86e6-ae90abd0bd0b",
    "prId" : 46669,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/46669#pullrequestreview-41129389",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8c248649-ad6a-4e14-8cf2-80a28971be07",
        "parentId" : null,
        "authorId" : "224e1088-78fe-4bdd-99d1-31be3e464996",
        "body" : "in nil case, set it to 2",
        "createdAt" : "2017-05-31T03:43:18Z",
        "updatedAt" : "2017-06-06T20:47:39Z",
        "lastEditedBy" : "224e1088-78fe-4bdd-99d1-31be3e464996",
        "tags" : [
        ]
      },
      {
        "id" : "1b406a18-6609-4602-bb4a-e8ac57643379",
        "parentId" : "8c248649-ad6a-4e14-8cf2-80a28971be07",
        "authorId" : "6935d5b2-c3de-4596-9c98-055bd55df973",
        "body" : "no that is done in defaults not conversions",
        "createdAt" : "2017-05-31T04:08:46Z",
        "updatedAt" : "2017-06-06T20:47:39Z",
        "lastEditedBy" : "6935d5b2-c3de-4596-9c98-055bd55df973",
        "tags" : [
        ]
      }
    ],
    "commit" : "1a784ef86ff94994e984753d885ffeff6e1772ac",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +154,158 @@\tif in.RevisionHistoryLimit != nil {\n\t\tout.RevisionHistoryLimit = new(int32)\n\t\t*out.RevisionHistoryLimit = *in.RevisionHistoryLimit\n\t} else {\n\t\tout.RevisionHistoryLimit = nil"
  },
  {
    "id" : "13709e15-5f39-46c6-b000-0f7f7dcd39ef",
    "prId" : 39683,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/39683#pullrequestreview-23542164",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d4197b35-1656-4b49-8430-9ac44e030146",
        "parentId" : null,
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "Is this the reason behind the custom conversions? Needs a comment https://github.com/kubernetes/kubernetes/issues/39865",
        "createdAt" : "2017-02-20T09:33:00Z",
        "updatedAt" : "2017-03-01T14:14:54Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      },
      {
        "id" : "9e0211a9-eb77-432c-9dab-b1c6cb18fc83",
        "parentId" : "d4197b35-1656-4b49-8430-9ac44e030146",
        "authorId" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "body" : "Discussed this with Stefan and Michalis, will double check if these are needed.",
        "createdAt" : "2017-02-23T11:17:17Z",
        "updatedAt" : "2017-03-01T14:14:54Z",
        "lastEditedBy" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "tags" : [
        ]
      },
      {
        "id" : "c90b444a-1a99-4577-9f75-ff4dcc8f662c",
        "parentId" : "d4197b35-1656-4b49-8430-9ac44e030146",
        "authorId" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "body" : "It looks like this is not working without it, I got error complaining about not having a conversion between `intstr.IntOrString` and `*intstr.IntOrString`. I'll add a TODO here.",
        "createdAt" : "2017-02-23T13:53:48Z",
        "updatedAt" : "2017-03-01T14:14:54Z",
        "lastEditedBy" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "tags" : [
        ]
      },
      {
        "id" : "63753b3f-c7ca-4674-beaa-4055c5bc0697",
        "parentId" : "d4197b35-1656-4b49-8430-9ac44e030146",
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "@kubernetes/sig-api-machinery-misc any reason we can't have a conversion func for intstr.IntOrString->*intstr.IntOrString?",
        "createdAt" : "2017-02-23T14:32:31Z",
        "updatedAt" : "2017-03-01T14:14:54Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      },
      {
        "id" : "4994802a-f646-4910-9eb3-05c387d2c419",
        "parentId" : "d4197b35-1656-4b49-8430-9ac44e030146",
        "authorId" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "body" : "I've moved that discussion over to #39865.",
        "createdAt" : "2017-02-23T17:52:41Z",
        "updatedAt" : "2017-03-01T14:14:54Z",
        "lastEditedBy" : "b7d2a698-a6e1-4031-bb69-8b45505badb5",
        "tags" : [
        ]
      }
    ],
    "commit" : "18f756cea83aed50839e9684a40466d6d56ed5bb",
    "line" : 200,
    "diffHunk" : "@@ -1,1 +272,276 @@\nfunc Convert_v1beta1_RollingUpdateDeployment_To_extensions_RollingUpdateDeployment(in *RollingUpdateDeployment, out *extensions.RollingUpdateDeployment, s conversion.Scope) error {\n\tif err := s.Convert(in.MaxUnavailable, &out.MaxUnavailable, 0); err != nil {\n\t\treturn err\n\t}"
  }
]