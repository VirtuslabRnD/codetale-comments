[
  {
    "id" : "eee02a45-9edb-4439-95d1-7004d2611576",
    "prId" : 66993,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/66993#pullrequestreview-148587397",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cb510b4d-f9a8-44c5-b326-5f26df4d1e37",
        "parentId" : null,
        "authorId" : "05637862-b60e-403e-8519-09d1b3f0c9c2",
        "body" : "Yes, so we add the default value for `cloud-controller manager` in here, and need add for `kube-controller manager ` @liggitt ",
        "createdAt" : "2018-08-14T02:59:43Z",
        "updatedAt" : "2018-09-02T11:11:24Z",
        "lastEditedBy" : "05637862-b60e-403e-8519-09d1b3f0c9c2",
        "tags" : [
        ]
      },
      {
        "id" : "d570cec6-ad1c-4d25-8a9d-dd93b4812233",
        "parentId" : "cb510b4d-f9a8-44c5-b326-5f26df4d1e37",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "I think adding the defaults for kube-controller-manager is still outstanding",
        "createdAt" : "2018-08-16T17:08:56Z",
        "updatedAt" : "2018-09-02T11:11:24Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "4c25af4a-6058-4469-89d9-e625b7c3e045",
        "parentId" : "cb510b4d-f9a8-44c5-b326-5f26df4d1e37",
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "I will fix",
        "createdAt" : "2018-08-22T17:26:13Z",
        "updatedAt" : "2018-09-02T11:11:24Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      }
    ],
    "commit" : "b17d7bf9b325199c82ee6dda7254cecb9cd37173",
    "line" : 87,
    "diffHunk" : "@@ -1,1 +164,168 @@\t}\n}\n\nfunc SetDefaults_GenericControllerManagerConfiguration(obj *GenericControllerManagerConfiguration) {\n\tzero := metav1.Duration{}"
  },
  {
    "id" : "0b5502f3-e6a3-4540-80d3-5887288d935a",
    "prId" : 63283,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/63283#pullrequestreview-122238287",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "463f92bb-2bec-4746-83be-1035935e170a",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "I think we should apply defaults in the command, not in the API layer.  Since this is alpha and not serialized, we can change later, but something to think about moving forward.",
        "createdAt" : "2018-05-21T17:40:19Z",
        "updatedAt" : "2018-05-21T17:40:19Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "d0bbd8c2-1d16-48a5-8238-f119231504fa",
        "parentId" : "463f92bb-2bec-4746-83be-1035935e170a",
        "authorId" : "05637862-b60e-403e-8519-09d1b3f0c9c2",
        "body" : "got it, thanks",
        "createdAt" : "2018-05-22T00:29:04Z",
        "updatedAt" : "2018-05-22T00:29:04Z",
        "lastEditedBy" : "05637862-b60e-403e-8519-09d1b3f0c9c2",
        "tags" : [
        ]
      },
      {
        "id" : "d4ebc0a0-683a-42db-8137-8f3d798d08b3",
        "parentId" : "463f92bb-2bec-4746-83be-1035935e170a",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "@deads2k this is worth a longer more broad discussion. The whole componentconfig approach is based on exactly this pattern to use the API default as the command defaults. @mtaufen has a discussion in his doc.",
        "createdAt" : "2018-05-22T08:27:55Z",
        "updatedAt" : "2018-05-22T08:27:56Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "b4db4f4e-28ae-4363-a7f3-05d685b7db60",
        "parentId" : "463f92bb-2bec-4746-83be-1035935e170a",
        "authorId" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "body" : "Is this discussion basically whether to attach defaults to API versions or to binary versions that implement the API?\r\n\r\nThe former is our standard today. The latter has different tradeoffs (round-trips to an API server don't mutate*, semantics change from \"I expect the standard default defined in the API\" to \"I expect the component to handle this for me,\" deprecation and versioning policy is less clear).\r\n\r\nThat sounds like a very broad discussion.\r\n\r\n*that said, config with component-level defaults exposed via e.g. /configz will display mutations\r\n*also, we don't round-trip componentconfigs to an API server that applies defaults, so today the defaults are effectively in the command, but they are also tightly tied to the API versioning scheme. And who knows, maybe someday we will.",
        "createdAt" : "2018-05-22T15:58:10Z",
        "updatedAt" : "2018-05-22T15:58:10Z",
        "lastEditedBy" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "tags" : [
        ]
      }
    ],
    "commit" : "3d20f1a99caaf3019d483d2c2c8fdb3d641661d2",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +36,40 @@func SetDefaults_CloudControllerManagerConfiguration(obj *CloudControllerManagerConfiguration) {\n\tzero := metav1.Duration{}\n\tif obj.ServiceController.ConcurrentServiceSyncs == 0 {\n\t\tobj.ServiceController.ConcurrentServiceSyncs = 1\n\t}"
  },
  {
    "id" : "8568a391-cc86-4eca-b6be-507245475bc1",
    "prId" : 46448,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/46448#pullrequestreview-41380162",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "443f9238-2ec2-46ef-aefc-186fdd00f082",
        "parentId" : null,
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "actually, quick question here... why make this a percentage and not a literal value same as the old lowDiskSpace default of 256MB?",
        "createdAt" : "2017-05-26T13:53:08Z",
        "updatedAt" : "2017-05-26T13:53:28Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      },
      {
        "id" : "fe349418-5dc1-469f-b6fe-44bfdd287dbd",
        "parentId" : "443f9238-2ec2-46ef-aefc-186fdd00f082",
        "authorId" : "d2b16581-e7e9-48b8-9f76-6f6bcb9ec300",
        "body" : "We could use a literal value here as well if you want.  If we use 256MB, I have a couple questions:\r\nShould we enable inode eviction?  If so, is a percentage still appropriate?\r\nShould I still remove the custom defaults for vagrant, since they used nodefs.available<10% previously?",
        "createdAt" : "2017-05-26T15:25:23Z",
        "updatedAt" : "2017-05-26T15:25:24Z",
        "lastEditedBy" : "d2b16581-e7e9-48b8-9f76-6f6bcb9ec300",
        "tags" : [
        ]
      },
      {
        "id" : "2b8d46b4-652a-42d5-94ac-7a0664f0f8bd",
        "parentId" : "443f9238-2ec2-46ef-aefc-186fdd00f082",
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "i think for a default, 10% is still probably fine.  re-applying my original tag.",
        "createdAt" : "2017-05-31T13:30:28Z",
        "updatedAt" : "2017-05-31T13:30:28Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      },
      {
        "id" : "4772a83f-bef7-4785-a534-4f6e84bc17a7",
        "parentId" : "443f9238-2ec2-46ef-aefc-186fdd00f082",
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "For storage I think performance is relative to available percentage of capacity and not an absolute value. so a percentage here makes sense",
        "createdAt" : "2017-05-31T23:00:31Z",
        "updatedAt" : "2017-05-31T23:00:31Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      }
    ],
    "commit" : "b2a60dc9a4f83341d9cbc7f4d44cd45ddcc250d5",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +394,398 @@\t}\n\tif obj.EvictionHard == nil {\n\t\ttemp := \"memory.available<100Mi,nodefs.available<10%,nodefs.inodesFree<5%\"\n\t\tobj.EvictionHard = &temp\n\t}"
  },
  {
    "id" : "8b452247-cc26-4b7a-a5a0-fb574f00e9b3",
    "prId" : 44784,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/44784#pullrequestreview-43517678",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "88d42a14-c7e4-4909-9c90-4fc6315b9e92",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "revert or explain with comment",
        "createdAt" : "2017-06-12T18:18:37Z",
        "updatedAt" : "2017-06-22T18:32:25Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "c2d576886bbadbf956acab33262906cd141c6650",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +187,191 @@\t}\n\tif obj.ResourceLock == \"\" {\n\t\t// obj.ResourceLock = rl.EndpointsResourceLock\n\t\tobj.ResourceLock = \"endpoints\"\n\t}"
  },
  {
    "id" : "b66a41b0-34c0-4728-9d21-384f7cf2d206",
    "prId" : 38258,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/38258#pullrequestreview-11734315",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "28b35dab-6cbf-4e9e-b6db-bbcfdc658b6f",
        "parentId" : null,
        "authorId" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "body" : "`ExperimentalKernelMemcgNotification` is a `bool`, not a `*bool`.",
        "createdAt" : "2016-12-07T04:19:36Z",
        "updatedAt" : "2016-12-07T15:10:12Z",
        "lastEditedBy" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "tags" : [
        ]
      },
      {
        "id" : "addc7f3c-a61a-440a-985c-4f88e2ee634f",
        "parentId" : "28b35dab-6cbf-4e9e-b6db-bbcfdc658b6f",
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "yeah, i just fixed a push with that.  i was still messing w/ generators and just threw this up to make people aware i was working on it.",
        "createdAt" : "2016-12-07T04:26:08Z",
        "updatedAt" : "2016-12-07T15:10:12Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      }
    ],
    "commit" : "bcca0395cff73fe7aac48aaedcf896af01963912",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +375,379 @@\t\tobj.EvictionPressureTransitionPeriod = metav1.Duration{Duration: 5 * time.Minute}\n\t}\n\tif obj.ExperimentalKernelMemcgNotification == nil {\n\t\tobj.ExperimentalKernelMemcgNotification = boolVar(false)\n\t}"
  },
  {
    "id" : "f7866935-3a2f-4efb-8ba3-7540de060833",
    "prId" : 35919,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/35919#pullrequestreview-6566687",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cbcccaed-8c1e-4916-8801-43e5c781a709",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "Can we add a comment explainign why we chose this?\n",
        "createdAt" : "2016-11-01T05:59:58Z",
        "updatedAt" : "2016-11-04T05:07:39Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "438ccaee55dd0e06443332f8476a0cc60e5bc10d",
    "line" : null,
    "diffHunk" : "@@ -1,1 +123,127 @@\t\t// We set CLOSE_WAIT to one hour by default to better match\n\t\t// typical server timeouts.\n\t\tobj.ConntrackTCPCloseWaitTimeout = unversioned.Duration{Duration: 1 * time.Hour}\n\t}\n}"
  },
  {
    "id" : "56db4116-49e7-4cbd-8e85-36500f397145",
    "prId" : 20542,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "08ae06e7-8d67-47f9-b8c2-09c650e0e3eb",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "shouldn't we have a const in unversioned `ZeroDuration` or something?\n",
        "createdAt" : "2016-02-05T00:34:59Z",
        "updatedAt" : "2016-02-05T00:34:59Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "ee4e60d78cf00229d7aab8886657e70e0d1a1d59",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +47,51 @@\t\t\t\tobj.IPTablesSyncPeriod = unversioned.Duration{30 * time.Second}\n\t\t\t}\n\t\t\tzero := unversioned.Duration{}\n\t\t\tif obj.UDPIdleTimeout == zero {\n\t\t\t\tobj.UDPIdleTimeout = unversioned.Duration{250 * time.Millisecond}"
  },
  {
    "id" : "df80e5d3-9b86-44db-843c-a0eca9d10560",
    "prId" : 19837,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "676a98bd-700e-447d-b2a5-62f871b9b5d4",
        "parentId" : null,
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "@mikedanese We currently have scripts that auto-generate documentation based on flag defaults. We should ideally update those scripts to use the defaults from here.\n",
        "createdAt" : "2016-06-21T23:58:00Z",
        "updatedAt" : "2016-07-15T01:40:21Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      },
      {
        "id" : "3dd74202-80c5-4356-8699-7453ff0ed3f2",
        "parentId" : "676a98bd-700e-447d-b2a5-62f871b9b5d4",
        "authorId" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "body" : "What needs to be updated to make this change?\n",
        "createdAt" : "2016-06-22T17:06:02Z",
        "updatedAt" : "2016-07-15T01:40:21Z",
        "lastEditedBy" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "tags" : [
        ]
      },
      {
        "id" : "f692ba2d-1566-4d84-83da-b64650bb15fd",
        "parentId" : "676a98bd-700e-447d-b2a5-62f871b9b5d4",
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "I think this should happen automatically. We are just binding the flags to different memory addresses (fields in the componentconfig struct). The man page generation flow should be unaffected.\n",
        "createdAt" : "2016-06-22T17:54:44Z",
        "updatedAt" : "2016-07-15T01:40:21Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      }
    ],
    "commit" : "e52718bbc696e6b5ae8538be8b774771a150c6e4",
    "line" : 50,
    "diffHunk" : "@@ -1,1 +136,140 @@}\n\nfunc SetDefaults_KubeletConfiguration(obj *KubeletConfiguration) {\n\tif obj.Address == \"\" {\n\t\tobj.Address = \"0.0.0.0\""
  },
  {
    "id" : "b675e967-beca-40a2-b98f-c0d1bc379371",
    "prId" : 19837,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d96abd8b-090c-4779-8c8e-eaf7be1299f1",
        "parentId" : null,
        "authorId" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "body" : "In the `AddFlags` function in `k8s.io/kubernetes/cmd/kubelet/app/options/options.go`, `DockerEndpoint` is specified as `fs.StringVar(&s.DockerEndpoint, \"docker-endpoint\", s.DockerEndpoint, \"If non-empty, use this for the docker endpoint to communicate with\")`. The usage string seems to indicate that `\"\"` is a valid default, so perhaps we shouldn't substitute `\"unix:///var/run/docker.sock\"`? @mikedanese @vishh \n\nEdit: OTOH, possible I misinterpreted this and the intention has always been to actually use `\"unix:///var/run/docker.sock\"` as a default when `\"\"`. One thing that strikes me as odd, if this is the desired default value, is that `DockerEndpoint` is not set in the KubeletConfiguration in the `NewKubeletServer` function in upstream `cmd/kubelet/app/options/options.go`, but the `RktAPIEndpoint` is set to a default, nonempty value. \n\n(Also a nit that is likely not top priority here: Why call one an `Endpoint` and the other an `APIEndpoint`?)\n",
        "createdAt" : "2016-06-22T15:27:29Z",
        "updatedAt" : "2016-07-15T01:40:21Z",
        "lastEditedBy" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "tags" : [
        ]
      },
      {
        "id" : "9a80f44d-b943-4b95-883c-200f514e38a3",
        "parentId" : "d96abd8b-090c-4779-8c8e-eaf7be1299f1",
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "\"\" is not valid. Defaulting it to \"unix:///var/run/docker.sock\" when you get a \"\" SGTM. Also DockerAPIEndpoint sounds fine. That struct was very literally translated from the cli options so you should change it to be more consistent.\n",
        "createdAt" : "2016-06-22T23:15:44Z",
        "updatedAt" : "2016-07-15T01:40:21Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      },
      {
        "id" : "4ab66561-bcd1-47ac-9521-78485e5fdc28",
        "parentId" : "d96abd8b-090c-4779-8c8e-eaf7be1299f1",
        "authorId" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "body" : "Ok, SGTM.\n",
        "createdAt" : "2016-06-24T22:57:30Z",
        "updatedAt" : "2016-07-15T01:40:21Z",
        "lastEditedBy" : "881df817-68e6-43dd-b4ea-f0b973f7dc41",
        "tags" : [
        ]
      }
    ],
    "commit" : "e52718bbc696e6b5ae8538be8b774771a150c6e4",
    "line" : null,
    "diffHunk" : "@@ -1,1 +168,172 @@\t}\n\tif obj.DockerEndpoint == \"\" {\n\t\tobj.DockerEndpoint = \"unix:///var/run/docker.sock\"\n\t}\n\tif obj.EventBurst == 0 {"
  }
]