[
  {
    "id" : "d909b441-e9e9-40a8-9650-dac5e410db32",
    "prId" : 60270,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/60270#pullrequestreview-104050564",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1b752953-8a9f-4e25-8c82-434cb6c62454",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "do we have a versioned type in k8s.io/api as well?\r\n\r\nNote: we want to move these types into cmd/ as a follow-up.",
        "createdAt" : "2018-03-14T14:47:02Z",
        "updatedAt" : "2018-04-13T01:02:34Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "4129fb6d-def7-4bc3-999e-51af019e738c",
        "parentId" : "1b752953-8a9f-4e25-8c82-434cb6c62454",
        "authorId" : "05637862-b60e-403e-8519-09d1b3f0c9c2",
        "body" : "No, will mark it in follow-up later.",
        "createdAt" : "2018-03-15T01:15:09Z",
        "updatedAt" : "2018-04-13T01:02:34Z",
        "lastEditedBy" : "05637862-b60e-403e-8519-09d1b3f0c9c2",
        "tags" : [
        ]
      }
    ],
    "commit" : "ea376c9c6f673ce3752894198dd3f5d9e2b863aa",
    "line" : 1,
    "diffHunk" : "@@ -1,1 +162,166 @@// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object\n\ntype KubeControllerManagerConfiguration struct {\n\tmetav1.TypeMeta\n"
  },
  {
    "id" : "577a6aab-02ff-4c5d-9cba-aa3efb145b6a",
    "prId" : 52562,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/52562#pullrequestreview-69982969",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0acf4513-b54b-4314-a039-115963d96f74",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "Seems like this is a thing we'd want in general for leader election. The controllers logically need it for subdivision.",
        "createdAt" : "2017-10-16T13:46:09Z",
        "updatedAt" : "2017-11-07T14:42:24Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "5ab07ff2-8bc5-45d5-a319-9dc99e2c1662",
        "parentId" : "0acf4513-b54b-4314-a039-115963d96f74",
        "authorId" : "f04ec747-f3ff-4334-a66e-6daaf4497091",
        "body" : "Fine with me. Currently the only other LeaderElectionConfiguration consumer I found (KubeControllerManagerConfiguration) uses a hard-coded lock namespace/name. Could move these fields to LeaderElectionConfiguration and refactor the controller manager later.",
        "createdAt" : "2017-10-17T18:29:33Z",
        "updatedAt" : "2017-11-07T14:42:24Z",
        "lastEditedBy" : "f04ec747-f3ff-4334-a66e-6daaf4497091",
        "tags" : [
        ]
      }
    ],
    "commit" : "efb2bb71cd4dede007289634bfe3c51484625ba9",
    "line" : 122,
    "diffHunk" : "@@ -1,1 +119,123 @@\tLeaderElectionConfiguration\n\t// LockObjectNamespace defines the namespace of the lock object\n\tLockObjectNamespace string\n\t// LockObjectName defines the lock object name\n\tLockObjectName string"
  },
  {
    "id" : "c3ceb558-cf7a-483a-9df5-cc9e51f331c6",
    "prId" : 45889,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/45889#pullrequestreview-38735860",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dde62398-a6fb-4849-84f6-b22defd9a8d3",
        "parentId" : null,
        "authorId" : "26bd3fa6-ac8d-4cb0-b746-a30dc1dc2931",
        "body" : "It would be nice to indicate the profiling will be served by the metrics server, as it may not be obvious to user.",
        "createdAt" : "2017-05-17T16:50:46Z",
        "updatedAt" : "2017-05-17T17:27:08Z",
        "lastEditedBy" : "26bd3fa6-ac8d-4cb0-b746-a30dc1dc2931",
        "tags" : [
        ]
      },
      {
        "id" : "9a2cf289-95c9-4a54-b9b1-c8bada6d82a7",
        "parentId" : "dde62398-a6fb-4849-84f6-b22defd9a8d3",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Will add a comment.",
        "createdAt" : "2017-05-17T17:00:29Z",
        "updatedAt" : "2017-05-17T17:27:08Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "adc37412-5166-4440-8fa5-18b4036f8295",
        "parentId" : "dde62398-a6fb-4849-84f6-b22defd9a8d3",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "done",
        "createdAt" : "2017-05-17T17:27:17Z",
        "updatedAt" : "2017-05-17T17:27:24Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "45ed99c3a68fd26056b7839d232ccd80bf42c35d",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +102,106 @@\t// defaulting to 127.0.0.1:10249 (set to 0.0.0.0 for all interfaces)\n\tMetricsBindAddress string\n\t// enableProfiling enables profiling via web interface on /debug/pprof handler.\n\t// Profiling handlers will be handled by metrics server.\n\tEnableProfiling bool"
  },
  {
    "id" : "bf069826-09a5-46c0-ba21-f76c5493f44a",
    "prId" : 41195,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/41195#pullrequestreview-21156651",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a6450c47-e39e-4aae-a605-a85dfa0841e8",
        "parentId" : null,
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "b/c we are promoting to beta do we still even want this then?  ",
        "createdAt" : "2017-02-09T15:02:04Z",
        "updatedAt" : "2017-02-16T12:32:48Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      },
      {
        "id" : "151f8b81-34b8-46f0-a9fe-3b1492b735b8",
        "parentId" : "a6450c47-e39e-4aae-a605-a85dfa0841e8",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "I think this should be removed, but I don't know if we can do it, as this is part of API.",
        "createdAt" : "2017-02-09T15:27:51Z",
        "updatedAt" : "2017-02-16T12:32:48Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "6b85400e-3128-4b69-bc62-19dddb8d0a5c",
        "parentId" : "a6450c47-e39e-4aae-a605-a85dfa0841e8",
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "Well not yet.. we only converted this release.. \r\n\r\n@davidopp need you to weigh in on this one. ",
        "createdAt" : "2017-02-09T15:33:49Z",
        "updatedAt" : "2017-02-16T12:32:48Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      },
      {
        "id" : "2b377de1-0735-48a4-8cec-23cf9b9f6419",
        "parentId" : "a6450c47-e39e-4aae-a605-a85dfa0841e8",
        "authorId" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "body" : "Agh, this is a mess. Sorry I didn't think of this earlier.\r\n\r\nIn 1.6 we want to support both the alpha version of this feature and beta version of this feature. (@rrati is working on adding back alpha support, gated by a flag.) In theory, supporting the alpha annotation means continuing to support the --failure-domains flag WHEN THE ALPHA FEATURE IS ENABLED.\r\n\r\nHowever, to move a little closer to deprecating alpha, I think it would be OK to mark the flag deprecated in this PR and remove it from the component config, BUT still interpret empty TopologyKey as meaning  the set api.DefaultFailureDomains WHEN ALPHA FEATURE IS ENABLED. In other words, the default failure domains becomes hard-coded to api.DefaultFailureDomains rather than configurable by command-line flag. Scheduler would continue to support multiple failure domains (indicated by empty TopologyKey) WHEN ALPHA FEATURE IS ENABLED, and we would test it, but the only value it would have is api.DefaultFailureDomains.\r\n\r\nThen in a later release we can completely remove support for empty TopologyKey. If we do performance optimizations before then (that assume single topology domain), we would have to gate them on not-alpha.\r\n\r\nDoes that sound OK?\r\n\r\nTo answer the question above: I think it would be OK to remove this line (and all support for --failure-domains flag, i.e. all support for configurable FailureDomains).\r\n\r\n",
        "createdAt" : "2017-02-09T20:28:14Z",
        "updatedAt" : "2017-02-16T12:32:48Z",
        "lastEditedBy" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "tags" : [
        ]
      },
      {
        "id" : "c5457a19-52f7-4786-8e10-becf148101b3",
        "parentId" : "a6450c47-e39e-4aae-a605-a85dfa0841e8",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "@davidopp - how do we detect if \"alpha feature is enabled\"?",
        "createdAt" : "2017-02-09T21:09:46Z",
        "updatedAt" : "2017-02-16T12:32:48Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "fd67374e-8638-48ab-92fb-cc8aad9d63cd",
        "parentId" : "a6450c47-e39e-4aae-a605-a85dfa0841e8",
        "authorId" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "body" : "I think you have to wait for @rrati's PR to know for sure. I believe based on the feedback from the kubernetes-dev thread he is going to do it like was done in #30468.\r\n",
        "createdAt" : "2017-02-09T21:13:52Z",
        "updatedAt" : "2017-02-16T12:32:48Z",
        "lastEditedBy" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "tags" : [
        ]
      },
      {
        "id" : "819bd5ad-1715-4176-bac2-0f3074dc760f",
        "parentId" : "a6450c47-e39e-4aae-a605-a85dfa0841e8",
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "@wojtek-t here is the WIP https://github.com/kubernetes/kubernetes/pull/41215 ",
        "createdAt" : "2017-02-09T22:03:29Z",
        "updatedAt" : "2017-02-16T12:32:48Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      },
      {
        "id" : "cb370cde-2f5e-4009-9f9e-c547bdc7dcf3",
        "parentId" : "a6450c47-e39e-4aae-a605-a85dfa0841e8",
        "authorId" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "body" : "Also I think we should have validation reject empty TopologyKey in field (but not in annotation)\r\n",
        "createdAt" : "2017-02-10T00:33:25Z",
        "updatedAt" : "2017-02-16T12:32:48Z",
        "lastEditedBy" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "tags" : [
        ]
      }
    ],
    "commit" : "3de7195cf88334d714ed38d9e12715062aa095c0",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +573,577 @@\tHardPodAffinitySymmetricWeight int\n\t// Indicate the \"all topologies\" set for empty topologyKey when it's used for PreferredDuringScheduling pod anti-affinity.\n\t// DEPRECATED: This is no longer used.\n\tFailureDomains string\n\t// leaderElection defines the configuration of leader election client."
  },
  {
    "id" : "aed33b6a-6974-4409-a79a-da87c0e86e60",
    "prId" : 40418,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/40418#pullrequestreview-18393717",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2202e46e-5c50-431f-b277-4ccfb1ee0e48",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "Does anything speak against moving this to k8s.io/client-go/util?",
        "createdAt" : "2017-01-25T13:10:38Z",
        "updatedAt" : "2017-01-25T13:28:37Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "437873cd62386e2a7fe0e1c1d0cd0b5463a5934a",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +449,453 @@\t// Currently only cpu and memory are supported. [default=none]\n\t// See http://kubernetes.io/docs/user-guide/compute-resources for more detail.\n\tSystemReserved ConfigurationMap\n\t// A set of ResourceName=ResourceQuantity (e.g. cpu=200m,memory=150G) pairs\n\t// that describe resources reserved for kubernetes system components."
  },
  {
    "id" : "a6be5c93-2298-42f4-9fb2-aee44d995694",
    "prId" : 34381,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/34381#pullrequestreview-5587270",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f5ae5bb5-ae32-4a1d-be4b-4b6866efdcd6",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "This seems more, \"ClusterBased\" or something right?  As opposed to a generic webhook they get to choose a destination on.\n",
        "createdAt" : "2016-10-13T19:46:47Z",
        "updatedAt" : "2016-10-25T07:40:36Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "fbd26290-5e72-4f40-9f21-c01b283c7575",
        "parentId" : "f5ae5bb5-ae32-4a1d-be4b-4b6866efdcd6",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "> This seems more, \"ClusterBased\" or something right? As opposed to a generic webhook they get to choose a destination on.\n\nthe remote authz check runs against the kubelet's apiserver by default, but some deployments will not enable that API. I want to retain the future ability to point this at the same webhook the apiserver supports without duplicating all the associated cache flags.\n",
        "createdAt" : "2016-10-25T06:09:44Z",
        "updatedAt" : "2016-10-25T07:40:36Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "c83f5804d263e4f1e056f27ebddb519c1ed634ae",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +463,467 @@\tKubeletAuthorizationModeAlwaysAllow KubeletAuthorizationMode = \"AlwaysAllow\"\n\t// KubeletAuthorizationModeWebhook uses the SubjectAccessReview API to determine authorization\n\tKubeletAuthorizationModeWebhook KubeletAuthorizationMode = \"Webhook\"\n)\n"
  },
  {
    "id" : "194567d8-7719-453d-8381-311202b57edc",
    "prId" : 34381,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/34381#pullrequestreview-5587310",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8057fa60-61f3-4db6-8636-691efda2b781",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "apiserver token based as opposed to generic webhook, isn't it?\n",
        "createdAt" : "2016-10-13T19:47:03Z",
        "updatedAt" : "2016-10-25T07:40:36Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "5821058a-198f-457e-800e-39484b366053",
        "parentId" : "8057fa60-61f3-4db6-8636-691efda2b781",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "> apiserver token based as opposed to generic webhook, isn't it?\n\nsame reasoning as the remote authorizer\n",
        "createdAt" : "2016-10-25T06:10:14Z",
        "updatedAt" : "2016-10-25T07:40:36Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "c83f5804d263e4f1e056f27ebddb519c1ed634ae",
    "line" : 45,
    "diffHunk" : "@@ -1,1 +487,491 @@\tX509 KubeletX509Authentication `json:\"x509\"`\n\t// webhook contains settings related to webhook bearer token authentication\n\tWebhook KubeletWebhookAuthentication `json:\"webhook\"`\n\t// anonymous contains settings related to anonymous authentication\n\tAnonymous KubeletAnonymousAuthentication `json:\"anonymous\"`"
  },
  {
    "id" : "55139046-a112-48c8-aa42-490f1a0ffdcd",
    "prId" : 31647,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/31647#pullrequestreview-4982760",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1fadbd00-e041-44f1-acd0-677f9ebd0c6f",
        "parentId" : null,
        "authorId" : "a6409368-42e0-44a9-bf79-9d3042ac3b65",
        "body" : "Based on the comment, can I assume that once the node object is created, taints cannot be updated for a given node? Where in the code we enforce this? \n",
        "createdAt" : "2016-10-19T21:40:34Z",
        "updatedAt" : "2016-12-06T18:33:09Z",
        "lastEditedBy" : "a6409368-42e0-44a9-bf79-9d3042ac3b65",
        "tags" : [
        ]
      },
      {
        "id" : "38c5450b-88d5-47c4-a70a-2d689d0771be",
        "parentId" : "1fadbd00-e041-44f1-acd0-677f9ebd0c6f",
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "> can I assume that once the node object is created, taints cannot be updated for a given node\n\nNo. These values are only set when creating the node object during initial registration.\n",
        "createdAt" : "2016-10-19T23:41:48Z",
        "updatedAt" : "2016-12-06T18:33:09Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      }
    ],
    "commit" : "3352fd161f2ff83fd9e333a9579898b31dce0a00",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +385,389 @@\t// registerWithTaints are an array of taints to add to a node object when\n\t// the kubelet registers itself. This only takes effect when registerNode\n\t// is true and upon the initial registration of the node.\n\tRegisterWithTaints []api.Taint `json:\"registerWithTaints\"`\n\t// contentType is contentType of requests sent to apiserver."
  },
  {
    "id" : "98821ea0-50a2-419d-afc0-204a2100bdff",
    "prId" : 29999,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f8d66b8b-7369-4b2c-82b8-848ac578214c",
        "parentId" : null,
        "authorId" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "body" : "Unrelated to this, are none of these fields optional? \n",
        "createdAt" : "2016-08-08T21:20:05Z",
        "updatedAt" : "2016-08-10T16:40:34Z",
        "lastEditedBy" : "c4b970b3-3b9c-4773-bc9b-f8d005b15fd1",
        "tags" : [
        ]
      }
    ],
    "commit" : "e43ccdbf2c0b69bfa19108a4d82894962c108016",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +115,119 @@\t// podManifestPath is the path to the directory containing pod manifests to\n\t// run, or the path to a single manifest file\n\tPodManifestPath string `json:\"podManifestPath\"`\n\t// syncFrequency is the max period between synchronizing running\n\t// containers and config"
  },
  {
    "id" : "d0c954f6-1224-4574-b2ac-88bc0ac0a93b",
    "prId" : 25189,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "34b461c6-da7d-4fdd-a0f0-313cff0ca839",
        "parentId" : null,
        "authorId" : "948c8bee-49af-46ed-93a8-309275b51d61",
        "body" : "You are adding one new field, needs to run `./hack/update-all.sh`?\n",
        "createdAt" : "2016-05-05T08:24:00Z",
        "updatedAt" : "2016-08-04T01:29:11Z",
        "lastEditedBy" : "948c8bee-49af-46ed-93a8-309275b51d61",
        "tags" : [
        ]
      },
      {
        "id" : "c171468e-1444-410b-b0be-fb036436ce04",
        "parentId" : "34b461c6-da7d-4fdd-a0f0-313cff0ca839",
        "authorId" : "ee3c1908-4390-4e95-844f-fb1e0ab18e67",
        "body" : "ah, right, thanks for pointing out, will run and add changes later.\n",
        "createdAt" : "2016-05-05T08:44:41Z",
        "updatedAt" : "2016-08-04T01:29:11Z",
        "lastEditedBy" : "ee3c1908-4390-4e95-844f-fb1e0ab18e67",
        "tags" : [
        ]
      },
      {
        "id" : "2ca40f79-c8f8-4d82-adb7-a79afb05355f",
        "parentId" : "34b461c6-da7d-4fdd-a0f0-313cff0ca839",
        "authorId" : "ee3c1908-4390-4e95-844f-fb1e0ab18e67",
        "body" : "addressed\n",
        "createdAt" : "2016-05-05T09:42:57Z",
        "updatedAt" : "2016-08-04T01:29:11Z",
        "lastEditedBy" : "ee3c1908-4390-4e95-844f-fb1e0ab18e67",
        "tags" : [
        ]
      }
    ],
    "commit" : "5fa640490e272589ec69e32a37f5ea611669eb13",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +483,487 @@\t// allowed to sync concurrently. Larger number = more responsive service\n\t// management, but more CPU (and network) load.\n\tConcurrentServiceSyncs int32 `json:\"concurrentServiceSyncs\"`\n\t// concurrentResourceQuotaSyncs is the number of resource quotas that are\n\t// allowed to sync concurrently. Larger number = more responsive quota"
  },
  {
    "id" : "a3e763c7-869e-4f54-a15f-8440c02469a5",
    "prId" : 24429,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e47a3868-6df2-46bc-bf0b-c7550fe1da26",
        "parentId" : null,
        "authorId" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "body" : "Should this be []string for future expansion to clusters that have multiple CIDR ranges?\n",
        "createdAt" : "2016-04-19T14:06:25Z",
        "updatedAt" : "2016-04-20T04:39:51Z",
        "lastEditedBy" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "tags" : [
        ]
      },
      {
        "id" : "ac7f093f-9634-4f15-b5a9-fdc564f6c734",
        "parentId" : "e47a3868-6df2-46bc-bf0b-c7550fe1da26",
        "authorId" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "body" : "To be clear, what I'm concerned about is that today we allocate a single consecutive /14 or /16 range for a cluster, which this code covers. But if we want a cluster to be able to have multiple /14s (e.g. for >1k nodes where a user doesn't have consecutive ip space available) then this is going to be fragile and we are either going to break compatibility (by changing this type) or introduce another variable (which is really ugly). \n",
        "createdAt" : "2016-04-19T14:09:09Z",
        "updatedAt" : "2016-04-20T04:39:51Z",
        "lastEditedBy" : "c2b5c827-efcd-438f-8db5-52d917b1cde9",
        "tags" : [
        ]
      },
      {
        "id" : "20218a0b-698a-40a1-85a9-3ed8570ca5fc",
        "parentId" : "e47a3868-6df2-46bc-bf0b-c7550fe1da26",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "I considered that feedback, but this is not the only place such a change\nwould have to go, so I thought that, for expedient merging, I would defer\nand pay for it later.  It changes the design quite a bit due to the nature\nof iptables rules.\n\nIf we want a merge today, I think we should forego it right now.\nOn Apr 19, 2016 7:09 AM, \"Robert Bailey\" notifications@github.com wrote:\n\n> In pkg/apis/componentconfig/types.go\n> https://github.com/kubernetes/kubernetes/pull/24429#discussion_r60237383\n> :\n> \n> > @@ -24,6 +24,10 @@ type KubeProxyConfiguration struct {\n> >     // bindAddress is the IP address for the proxy server to serve on (set to 0.0.0.0\n> >     // for all interfaces)\n> >     BindAddress string `json:\"bindAddress\"`\n> > -   // clusterCIDR is the CIDR range of the pods in the cluster. It is used to\n> > -   // bridge traffic coming from outside of the cluster. If not provided,\n> > -   // no off-cluster bridging will be performed.\n> > -   ClusterCIDR string `json:\"clusterCIDR\"`\n> \n> To be clear, what I'm concerned about is that today we allocate a single\n> consecutive /14 or /16 range for a cluster, which this code covers. But if\n> we want a cluster to be able to have multiple /14s (e.g. for >1k nodes\n> where a user doesn't have consecutive ip space available) then this is\n> going to be fragile and we are either going to break compatibility (by\n> changing this type) or introduce another variable (which is really ugly).\n> \n> —\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly or view it on GitHub\n> https://github.com/kubernetes/kubernetes/pull/24429/files/0dd7cf8e881c1ba816e22a5ce1808bc29ccbe1df#r60237383\n",
        "createdAt" : "2016-04-19T16:43:59Z",
        "updatedAt" : "2016-04-20T04:39:51Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "760568796f97613f4c538299525f88bb586ffb39",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +28,32 @@\t// bridge traffic coming from outside of the cluster. If not provided,\n\t// no off-cluster bridging will be performed.\n\tClusterCIDR string `json:\"clusterCIDR\"`\n\t// healthzBindAddress is the IP address for the health check server to serve on,\n\t// defaulting to 127.0.0.1 (set to 0.0.0.0 for all interfaces)"
  },
  {
    "id" : "f8016b66-d86b-44f9-8fac-e6203ac579cf",
    "prId" : 23660,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e77e62fd-adc4-482b-b0e8-d83588586510",
        "parentId" : null,
        "authorId" : "cd23f098-445e-4806-8d45-82533abcd350",
        "body" : "@krousey Does this need to be uppercased for backcompat too?\n",
        "createdAt" : "2016-04-06T16:57:12Z",
        "updatedAt" : "2016-04-06T18:27:55Z",
        "lastEditedBy" : "cd23f098-445e-4806-8d45-82533abcd350",
        "tags" : [
        ]
      },
      {
        "id" : "1fde509c-1db7-4165-af54-11c2483c4985",
        "parentId" : "e77e62fd-adc4-482b-b0e8-d83588586510",
        "authorId" : "ad0a3561-db60-47a9-b82f-ac613199f968",
        "body" : "For this one, I'm not sure. It doesn't seem like a normal API type, but if it's user visible, I would imagine so. Again, I defer to @bgrant0607 on these.\n",
        "createdAt" : "2016-04-06T17:25:17Z",
        "updatedAt" : "2016-04-06T18:27:55Z",
        "lastEditedBy" : "ad0a3561-db60-47a9-b82f-ac613199f968",
        "tags" : [
        ]
      },
      {
        "id" : "94e78d88-b033-46f4-8085-ee4f3e97775d",
        "parentId" : "e77e62fd-adc4-482b-b0e8-d83588586510",
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "@mikedanese Is anyone using these types yet?\n\nClearly we need a checker for this.\n",
        "createdAt" : "2016-04-06T17:28:19Z",
        "updatedAt" : "2016-04-06T18:27:55Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "75091bc0-53e6-42d3-8f3e-02af5d27b66e",
        "parentId" : "e77e62fd-adc4-482b-b0e8-d83588586510",
        "authorId" : "ad0a3561-db60-47a9-b82f-ac613199f968",
        "body" : "@bgrant0607 This is what @goltermann is working torwards... as soon as we get the current codebase go vet clean, he will turn it on by default.\n",
        "createdAt" : "2016-04-06T17:36:17Z",
        "updatedAt" : "2016-04-06T18:27:55Z",
        "lastEditedBy" : "ad0a3561-db60-47a9-b82f-ac613199f968",
        "tags" : [
        ]
      },
      {
        "id" : "ed12003a-2e7c-409c-93cf-077561e26049",
        "parentId" : "e77e62fd-adc4-482b-b0e8-d83588586510",
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "Change looks good to me. Lower case is consistent with the rest of the file so I would leave it. This is not used yet and IIUC json tags aren't necessary in the internal types.go so we may remove them later. Thanks!\n",
        "createdAt" : "2016-04-07T17:08:00Z",
        "updatedAt" : "2016-04-07T17:08:00Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      }
    ],
    "commit" : "696423e0444c962899e07859a6fbeb5e4c4cb664",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +231,235 @@\tLowDiskSpaceThresholdMB int `json:\"lowDiskSpaceThresholdMB\"`\n\t// How frequently to calculate and cache volume disk usage for all pods\n\tVolumeStatsAggPeriod unversioned.Duration `json:\"volumeStatsAggPeriod\"`\n\t// networkPluginName is the name of the network plugin to be invoked for\n\t// various events in kubelet/pod lifecycle"
  },
  {
    "id" : "cd81a93f-225e-49ef-bbc9-21c40fc5c67c",
    "prId" : 20764,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c9c4e7ba-609b-43ac-8dc9-b577b8fe709a",
        "parentId" : null,
        "authorId" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "body" : "Go variable name and json field name do not match first word of comment\n",
        "createdAt" : "2016-02-10T07:47:42Z",
        "updatedAt" : "2016-02-11T21:14:54Z",
        "lastEditedBy" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "tags" : [
        ]
      }
    ],
    "commit" : "33c4332b284c4618c8c8b7793219c78c6e403fab",
    "line" : null,
    "diffHunk" : "@@ -1,1 +505,509 @@\t// HostPath persistent volume recycling. This is for development and testing only and\n\t// will not work in a multi-node cluster.\n\tPodTemplateFilePathHostPath string `json:\"podTemplateFilePathHostPath\"`\n\t// minimumTimeoutHostPath is the minimum ActiveDeadlineSeconds to use for a HostPath\n\t// Recycler pod.  This is for development and testing only and will not work in a multi-node"
  },
  {
    "id" : "fcf75659-349c-4a51-8192-3ff505d180ff",
    "prId" : 20764,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d25177b8-785d-4814-ac6d-8fbe31098ea8",
        "parentId" : null,
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "Struct doc is not included in generated documentation, only field doc is. Not sure whether to leave this capitalized or not. I'm leaving it capitalized because it does not refer to a json field name.\n",
        "createdAt" : "2016-02-11T20:05:59Z",
        "updatedAt" : "2016-02-11T21:14:54Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      }
    ],
    "commit" : "33c4332b284c4618c8c8b7793219c78c6e403fab",
    "line" : 121,
    "diffHunk" : "@@ -1,1 +474,478 @@}\n\n// VolumeConfiguration contains *all* enumerated flags meant to configure all volume\n// plugins. From this config, the controller-manager binary will create many instances of\n// volume.VolumeConfig, each containing only the configuration needed for that plugin which"
  },
  {
    "id" : "6f10780b-69a4-41a4-9495-3e455f1a69c0",
    "prId" : 20702,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e9071677-f63b-4549-b9aa-c6371731eaf6",
        "parentId" : null,
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "This is a types.go file. There is no presidence for putting functions in a types.go or defining function on API types.\n",
        "createdAt" : "2016-02-05T22:52:37Z",
        "updatedAt" : "2016-02-05T22:52:37Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      },
      {
        "id" : "70814e34-5400-4323-a395-5fe58342ea75",
        "parentId" : "e9071677-f63b-4549-b9aa-c6371731eaf6",
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "I agree with @mikedanese. This is not a pattern I want to encourage.\n",
        "createdAt" : "2016-02-05T23:16:51Z",
        "updatedAt" : "2016-02-05T23:16:51Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      }
    ],
    "commit" : "0c191e787b9aefe47df256e35a41877d81bdf321",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +346,350 @@\n// AddFlags binds the common LeaderElectionCLIConfig flags to a flagset\nfunc (l *LeaderElectionConfiguration) AddFlags(fs *pflag.FlagSet) {\n\tfs.BoolVar(&l.LeaderElect, \"leader-elect\", l.LeaderElect, \"\"+\n\t\t\"Start a leader election client and gain leadership before \"+"
  },
  {
    "id" : "04e0461f-2f4f-4ca3-9730-601d26d947ac",
    "prId" : 20496,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "478f1fd1-a7cc-4156-9a40-743fd33e1f6f",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "I think you can make the internal (non-versioned) type use an int, and the versioned type use a pointer, and that way the code that actually uses the internal type doesn't have to much with dereferencing and defaulting.  The smell here is that the value `14` turns up outside of the defaults.go file at all.\n",
        "createdAt" : "2016-02-07T21:40:58Z",
        "updatedAt" : "2016-02-08T11:12:24Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "9925cddc110158666e57e4de0cfac5dd94a0b158",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +34,38 @@\t// iptablesMasqueradeBit is the bit of the iptables fwmark space to use for SNAT if using\n\t// the pure iptables proxy mode. Values must be within the range [0, 31].\n\tIPTablesMasqueradeBit *int `json:\"iptablesMasqueradeBit\"`\n\t// iptablesSyncPeriod is the period that iptables rules are refreshed (e.g. '5s', '1m',\n\t// '2h22m').  Must be greater than 0."
  },
  {
    "id" : "1a3979f5-2735-44e9-9711-d8e60af7d864",
    "prId" : 19944,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d2210b05-278f-404c-bf5d-07db1e5aac9e",
        "parentId" : null,
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "this comment should start with enableCustomMetrics (json field name) because it will be used to generate documentations\n",
        "createdAt" : "2016-02-04T19:26:21Z",
        "updatedAt" : "2016-02-05T11:00:26Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      }
    ],
    "commit" : "bf0c8812637c5d892caa49f563426a89e5ae5047",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +289,293 @@\t// nonMasqueradeCIDR configures masquerading: traffic to IPs outside this range will use IP masquerade.\n\tNonMasqueradeCIDR string `json:\"nonMasqueradeCIDR\"`\n\t// enable gathering custom metrics.\n\tEnableCustomMetrics bool `json:\"enableCustomMetrics\"`\n}"
  },
  {
    "id" : "fe4eabb3-e3fc-4a06-9606-d217ee8d9427",
    "prId" : 19661,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "786b1a33-f445-419f-97b1-8e906abee79a",
        "parentId" : null,
        "authorId" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "body" : "This first sentence is a little hard to comprehend. Can't it be something as simple as \"leaseDuration is the maximum duration between leadership renewals. If the incumbent leader fails to renew its leadership before this deadline, non-leaders attempt to acquire the leadership\". Or something like that.\n",
        "createdAt" : "2016-01-15T00:17:42Z",
        "updatedAt" : "2016-01-15T00:17:42Z",
        "lastEditedBy" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "tags" : [
        ]
      }
    ],
    "commit" : "968deadcee7c4358dd344b1941c7a4d760f3db2b",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +72,76 @@\tLeaderElect bool `json:\"leaderElect\"`\n\t// leaseDuration is the duration that non-leader candidates will wait\n\t// after observing a leadership renewal until attempting to acquire\n\t// leadership of a led but unrenewed leader slot. This is effectively the\n\t// maximum duration that a leader can be stopped before it is replaced"
  },
  {
    "id" : "94079376-2f67-40a5-bafc-803f21ae2c08",
    "prId" : 19507,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ad13a73c-6da3-4105-9e25-24b68988b456",
        "parentId" : null,
        "authorId" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "body" : "This ordering does not match the (alphanum) ordering in KubeletServer.  Is this intentional or because this was generated from an unordered collection? \n\nnit: the comment refers to the field as lower case, but it is upper case, should this match the json or the variable?\n",
        "createdAt" : "2016-01-12T23:52:59Z",
        "updatedAt" : "2016-01-16T00:05:59Z",
        "lastEditedBy" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "tags" : [
        ]
      },
      {
        "id" : "8c9aa588-03a6-4f70-a9b1-9eeff063adbd",
        "parentId" : "ad13a73c-6da3-4105-9e25-24b68988b456",
        "authorId" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "body" : "looks like this matches the flag ordering.  are the flags grouped logically, or why are they ordered this way?  It would be a lot easier to compare old/new if they were both in alphanum order.\n",
        "createdAt" : "2016-01-12T23:58:38Z",
        "updatedAt" : "2016-01-16T00:05:59Z",
        "lastEditedBy" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "tags" : [
        ]
      },
      {
        "id" : "91f7972b-0f33-47de-93f6-b1d1cd8fbd87",
        "parentId" : "ad13a73c-6da3-4105-9e25-24b68988b456",
        "authorId" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "body" : ":+1: for alphabetic ordering\n",
        "createdAt" : "2016-01-13T00:03:17Z",
        "updatedAt" : "2016-01-16T00:05:59Z",
        "lastEditedBy" : "0adf587c-aaa2-4e47-be0f-a26d4fde14ac",
        "tags" : [
        ]
      },
      {
        "id" : "994fedbe-a896-430c-bee5-2429c93ef283",
        "parentId" : "ad13a73c-6da3-4105-9e25-24b68988b456",
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "They match the ordering that the flags are added [here](https://github.com/kubernetes/kubernetes/blob/master/cmd/kubelet/app/options/options.go#L195) which is what this was generated from. I can switch to alphabetical although it's sometimes not the best at grouping related flags.\n",
        "createdAt" : "2016-01-13T00:20:05Z",
        "updatedAt" : "2016-01-16T00:05:59Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      },
      {
        "id" : "27da91a2-1312-4a27-993d-aeb3e5f9825d",
        "parentId" : "ad13a73c-6da3-4105-9e25-24b68988b456",
        "authorId" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "body" : "Agreed alpha ordering isn't a pure win, but I think it is an improvement over this.  docker --help and kubectl --help both show flags in alphabetical ordering as do most man pages, so it seems like a reasonable convention for this struct of flags.  If you could change the code generator to sort alphabetically and I'd prefer to standardize on it.\n",
        "createdAt" : "2016-01-13T01:11:31Z",
        "updatedAt" : "2016-01-16T00:05:59Z",
        "lastEditedBy" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "tags" : [
        ]
      },
      {
        "id" : "bc284ca1-7a98-422f-aec3-59d4395df38b",
        "parentId" : "ad13a73c-6da3-4105-9e25-24b68988b456",
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "The ordering of fields in the API is curated. These converted flags are awkward because (a) they are all in one struct and (b) we didn't think of them as an API when they were added. I don't care too much what we do for this initial import of legacy flags into config, but in the future we'll want multiple, semantically grouped, curated config types that aren't sorted alphabetically.\n",
        "createdAt" : "2016-01-13T06:23:19Z",
        "updatedAt" : "2016-01-16T00:05:59Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "a09f8967-f2b0-41ca-8cfd-b64e63f7fbc9",
        "parentId" : "ad13a73c-6da3-4105-9e25-24b68988b456",
        "authorId" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "body" : "If we are going to curate this in the future then no point in spending time making them sorted if you have not already done so.  Please add a TODO to better document the logical groupings and make them explicit.\n",
        "createdAt" : "2016-01-13T17:41:19Z",
        "updatedAt" : "2016-01-16T00:05:59Z",
        "lastEditedBy" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "tags" : [
        ]
      }
    ],
    "commit" : "fe8ae1a28a18d373331ad2b331b98645aeaa34fa",
    "line" : null,
    "diffHunk" : "@@ -1,1 +67,71 @@type KubeletConfiguration struct {\n\t// config is the path to the config file or directory of files\n\tConfig string `json:\"config\"`\n\t// syncFrequency is the max period between synchronizing running\n\t// containers and config"
  },
  {
    "id" : "1e2f0f8e-e3a9-49d3-b12e-9c3b3cf46411",
    "prId" : 19507,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cb7912f4-2d67-46f5-ad35-e79eec9ecbc4",
        "parentId" : null,
        "authorId" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "body" : "One side effect of moving this out of options.go is that it is no longer close to where the defaults are defined.  Not sure if there is anything that can be done about this.\n",
        "createdAt" : "2016-01-13T01:02:01Z",
        "updatedAt" : "2016-01-16T00:05:59Z",
        "lastEditedBy" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "tags" : [
        ]
      },
      {
        "id" : "ae1401c5-49c8-47d0-8066-c7633aab810b",
        "parentId" : "cb7912f4-2d67-46f5-ad35-e79eec9ecbc4",
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "Defaults will be moved to https://github.com/kubernetes/kubernetes/blob/master/pkg/apis/componentconfig/v1alpha1/defaults.go and will be applied like the defaulting of any other api object. This is not done in the current PR because this PR does not introduce the external type (this will be in a follow up)\n",
        "createdAt" : "2016-01-13T01:12:34Z",
        "updatedAt" : "2016-01-16T00:05:59Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      },
      {
        "id" : "47413b3e-3e8d-4e15-aaab-053b7bc3b774",
        "parentId" : "cb7912f4-2d67-46f5-ad35-e79eec9ecbc4",
        "authorId" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "body" : "per-Brian's comment, a few of these have empty defaults.  Is it possible to add 'omitempty' to the json tag for those?\n",
        "createdAt" : "2016-01-13T01:16:47Z",
        "updatedAt" : "2016-01-16T00:05:59Z",
        "lastEditedBy" : "47ec15eb-72b4-4618-9e01-e3b37b6bac00",
        "tags" : [
        ]
      },
      {
        "id" : "50057b87-094f-46d3-bd1e-3fcbf46175c4",
        "parentId" : "cb7912f4-2d67-46f5-ad35-e79eec9ecbc4",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "In general for config based options omit empty reduces readability - most\nconfig files today document every field they have as part of the config\nfile on disk (apache, haproxy, nginx, redis, etc).  I would think we would\ndo the same.\n\nOn Tue, Jan 12, 2016 at 8:17 PM, Phillip Wittrock notifications@github.com\nwrote:\n\n> In pkg/apis/componentconfig/types.go\n> https://github.com/kubernetes/kubernetes/pull/19507#discussion_r49540516\n> :\n> \n> > @@ -62,3 +62,213 @@ const (\n> >     ProxyModeUserspace ProxyMode = \"userspace\"\n> >     ProxyModeIPTables  ProxyMode = \"iptables\"\n> >  )\n> > +\n> > +type KubeletConfiguration struct {\n> \n> per-Brian's comment, a few of these have empty defaults. Is it possible to\n> add 'omitempty' to the json tag for those?\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/kubernetes/kubernetes/pull/19507/files#r49540516.\n",
        "createdAt" : "2016-01-13T02:23:57Z",
        "updatedAt" : "2016-01-16T00:05:59Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "2625b433-1266-4236-bfd6-225bc64a5d30",
        "parentId" : "cb7912f4-2d67-46f5-ad35-e79eec9ecbc4",
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "The convention in the API, in go-restful's swagger generator, and in the Go json parser AIUI is that omitempty implies optional. \n\nOnce defaults are filled in, all fields with default values would appear explicitly.\n",
        "createdAt" : "2016-01-13T06:20:59Z",
        "updatedAt" : "2016-01-16T00:05:59Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "7fe68c16-0d3b-465f-941c-8dbaad623995",
        "parentId" : "cb7912f4-2d67-46f5-ad35-e79eec9ecbc4",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "The convention is that, but the actual behavior for certain fields is that omit empty _obscures_ the user's actual values (for []string and map) because it replaces nil with empty map.  Even though I prefer writing all the fields out for user config (so a user can figure out what config they _can_ set), we should never set arrays or maps to omit empty.\n",
        "createdAt" : "2016-01-13T15:59:23Z",
        "updatedAt" : "2016-01-16T00:05:59Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "15697649-13dc-4f3f-b38a-f254f10e63b7",
        "parentId" : "cb7912f4-2d67-46f5-ad35-e79eec9ecbc4",
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "IIUC omitempty has no effect on the deserialize path. We won't be deserialize -> serializing or desiralize -> serialize -> desirializing this object for now at least. We will only be deserializing it. This object also won't ever be an apiserver resource so swagger is not a useful documentation mechanism for it. So maybe it doesn't matter yet?\n",
        "createdAt" : "2016-01-15T18:38:31Z",
        "updatedAt" : "2016-01-16T00:05:59Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      }
    ],
    "commit" : "fe8ae1a28a18d373331ad2b331b98645aeaa34fa",
    "line" : null,
    "diffHunk" : "@@ -1,1 +65,69 @@\n// TODO: curate the ordering and structure of this config object\ntype KubeletConfiguration struct {\n\t// config is the path to the config file or directory of files\n\tConfig string `json:\"config\"`"
  }
]