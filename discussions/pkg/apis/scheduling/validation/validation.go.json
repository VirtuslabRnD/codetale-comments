[
  {
    "id" : "1ce11908-1c96-4e1c-b1e7-734b6788659f",
    "prId" : 74614,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/74614#pullrequestreview-242852389",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a6db50e1-5d75-4a1c-b62f-e0f819b832d3",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "also need to add validation to ValidatePriorityClass that if a non-nil value is specified, it is a valid preemption policy",
        "createdAt" : "2019-05-28T15:09:40Z",
        "updatedAt" : "2019-05-31T04:42:34Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "ce1eb443-f48c-4b27-ba70-36c315a793ca",
        "parentId" : "a6db50e1-5d75-4a1c-b62f-e0f819b832d3",
        "authorId" : "89bff7d0-c420-41e1-9e5e-db63c4cccd93",
        "body" : "Done",
        "createdAt" : "2019-05-28T18:39:04Z",
        "updatedAt" : "2019-05-31T04:42:34Z",
        "lastEditedBy" : "89bff7d0-c420-41e1-9e5e-db63c4cccd93",
        "tags" : [
        ]
      }
    ],
    "commit" : "52f3380ef3a5d5de4d75ff92defd1c9af9d775bc",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +56,60 @@\t\tallErrs = append(allErrs, field.Forbidden(field.NewPath(\"Value\"), \"may not be changed in an update.\"))\n\t}\n\t// PreemptionPolicy is immutable and is checked by the ObjectMeta validator.\n\tallErrs = append(allErrs, apivalidation.ValidateImmutableField(pc.PreemptionPolicy, oldPc.PreemptionPolicy, field.NewPath(\"preemptionPolicy\"))...)\n\treturn allErrs"
  },
  {
    "id" : "f7efe2e0-16a2-43d2-8045-474f18c938d4",
    "prId" : 48377,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/48377#pullrequestreview-48218264",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5b54214a-a86c-4abe-8f9c-c5f69ded9d29",
        "parentId" : null,
        "authorId" : "6d4deb17-efc4-4037-a2a9-162659c11ad7",
        "body" : "How about putting the `Value` in the error message?",
        "createdAt" : "2017-07-05T03:21:07Z",
        "updatedAt" : "2017-07-19T00:48:15Z",
        "lastEditedBy" : "6d4deb17-efc4-4037-a2a9-162659c11ad7",
        "tags" : [
        ]
      },
      {
        "id" : "8545821a-01f0-4497-b3f3-d0d4662a5a9a",
        "parentId" : "5b54214a-a86c-4abe-8f9c-c5f69ded9d29",
        "authorId" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "body" : "I think putting the value in the error message is a bit misleading and may make users think that there is an issue with the value itself. We don't allow changing `value` regardless of its content.",
        "createdAt" : "2017-07-05T20:47:25Z",
        "updatedAt" : "2017-07-19T00:48:15Z",
        "lastEditedBy" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "tags" : [
        ]
      },
      {
        "id" : "f5911370-62fa-4964-9fa4-6fcfc3de36f0",
        "parentId" : "5b54214a-a86c-4abe-8f9c-c5f69ded9d29",
        "authorId" : "6d4deb17-efc4-4037-a2a9-162659c11ad7",
        "body" : "Make sense, thanks @bsalamat ",
        "createdAt" : "2017-07-06T01:43:12Z",
        "updatedAt" : "2017-07-19T00:48:15Z",
        "lastEditedBy" : "6d4deb17-efc4-4037-a2a9-162659c11ad7",
        "tags" : [
        ]
      }
    ],
    "commit" : "e827e1ba87d83a0178d1740fcbe60049c87ebca3",
    "line" : 44,
    "diffHunk" : "@@ -1,1 +42,46 @@\t// Name is immutable and is checked by the ObjectMeta validator.\n\tif pc.Value != oldPc.Value {\n\t\tallErrs = append(allErrs, field.Forbidden(field.NewPath(\"Value\"), \"may not be changed in an update.\"))\n\t}\n\treturn allErrs"
  },
  {
    "id" : "ba5b037a-f28d-4089-8b27-2a97dcbc64dc",
    "prId" : 48377,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/48377#pullrequestreview-48221427",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "60d674ba-7854-45ff-9816-0b42015bb8fe",
        "parentId" : null,
        "authorId" : "72156db3-c40b-4455-9838-c12c0c606019",
        "body" : "PriorityClass is global by default, so the namespace should be empty.",
        "createdAt" : "2017-07-06T00:33:52Z",
        "updatedAt" : "2017-07-19T00:48:15Z",
        "lastEditedBy" : "72156db3-c40b-4455-9838-c12c0c606019",
        "tags" : [
        ]
      },
      {
        "id" : "796d936a-76fc-47c0-b7b7-ba9b0ab39ddb",
        "parentId" : "60d674ba-7854-45ff-9816-0b42015bb8fe",
        "authorId" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "body" : "The API object is defined as \"nonNamespaced\" in staging/src/k8s.io/api/scheduling/v1alpha1/types.go. My understanding is that the system enforces the rule of not having a namespace for \"nonNamespaced\" resources.\r\nWe have tests that verify it does not take any namespace.",
        "createdAt" : "2017-07-06T01:11:02Z",
        "updatedAt" : "2017-07-19T00:48:15Z",
        "lastEditedBy" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "tags" : [
        ]
      },
      {
        "id" : "4a087969-ab89-4ebb-b336-9f4374d97194",
        "parentId" : "60d674ba-7854-45ff-9816-0b42015bb8fe",
        "authorId" : "72156db3-c40b-4455-9838-c12c0c606019",
        "body" : "Great to know !\r\n\r\nBTW, do you know which component handled `nonNamespaced `? just want to learn :).",
        "createdAt" : "2017-07-06T01:24:11Z",
        "updatedAt" : "2017-07-19T00:48:15Z",
        "lastEditedBy" : "72156db3-c40b-4455-9838-c12c0c606019",
        "tags" : [
        ]
      },
      {
        "id" : "92c6acbf-ba8d-44d9-abcd-119605018f9e",
        "parentId" : "60d674ba-7854-45ff-9816-0b42015bb8fe",
        "authorId" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "body" : "I don't know. I wonder if the `// +nonNamespaced=true` annotation in the types.go file causes some validation code to be generated that checks this.",
        "createdAt" : "2017-07-06T01:29:12Z",
        "updatedAt" : "2017-07-19T00:48:15Z",
        "lastEditedBy" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "tags" : [
        ]
      },
      {
        "id" : "173876c7-4c22-412c-b6c5-f357b8314149",
        "parentId" : "60d674ba-7854-45ff-9816-0b42015bb8fe",
        "authorId" : "72156db3-c40b-4455-9838-c12c0c606019",
        "body" : "ok, np.",
        "createdAt" : "2017-07-06T02:16:49Z",
        "updatedAt" : "2017-07-19T00:48:15Z",
        "lastEditedBy" : "72156db3-c40b-4455-9838-c12c0c606019",
        "tags" : [
        ]
      }
    ],
    "commit" : "e827e1ba87d83a0178d1740fcbe60049c87ebca3",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +31,35 @@func ValidatePriorityClass(pc *scheduling.PriorityClass) field.ErrorList {\n\tallErrs := field.ErrorList{}\n\tallErrs = append(allErrs, apivalidation.ValidateObjectMeta(&pc.ObjectMeta, false, ValidatePriorityClassName, field.NewPath(\"metadata\"))...)\n\t// The \"Value\" field can be any valid integer. So, no need to validate.\n\treturn allErrs"
  },
  {
    "id" : "4938edf2-3d20-4803-9197-a03febeb5ea9",
    "prId" : 48377,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/48377#pullrequestreview-48743594",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7cd20450-84d3-48e1-a71e-f4d9778d4684",
        "parentId" : null,
        "authorId" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "body" : "Should you also prevent updating the GlobalDefault field?",
        "createdAt" : "2017-07-07T23:23:05Z",
        "updatedAt" : "2017-07-19T00:48:15Z",
        "lastEditedBy" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "tags" : [
        ]
      },
      {
        "id" : "00ca9c76-b217-44ab-9b68-3839750bc86d",
        "parentId" : "7cd20450-84d3-48e1-a71e-f4d9778d4684",
        "authorId" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "body" : "That was my initial implementation, but I changed it to give more flexibility to admins if they need to change default priority. Priority admission controller ensures that there will be only one default priority class in a cluster.",
        "createdAt" : "2017-07-08T00:23:20Z",
        "updatedAt" : "2017-07-19T00:48:15Z",
        "lastEditedBy" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "tags" : [
        ]
      },
      {
        "id" : "d15f8e27-5121-4b9d-8e7c-af87b41ac182",
        "parentId" : "7cd20450-84d3-48e1-a71e-f4d9778d4684",
        "authorId" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "body" : "OK, I now see you mention this in the design doc, which I hadn't read recently.",
        "createdAt" : "2017-07-08T00:37:58Z",
        "updatedAt" : "2017-07-19T00:48:15Z",
        "lastEditedBy" : "82da2b23-9f40-4abd-8af5-56ba07c1fc0a",
        "tags" : [
        ]
      }
    ],
    "commit" : "e827e1ba87d83a0178d1740fcbe60049c87ebca3",
    "line" : 40,
    "diffHunk" : "@@ -1,1 +38,42 @@// ValidatePriorityClassUpdate tests if required fields in the PriorityClass are\n// set and are valid. PriorityClass does not allow updating Name, and Value.\nfunc ValidatePriorityClassUpdate(pc, oldPc *scheduling.PriorityClass) field.ErrorList {\n\tallErrs := apivalidation.ValidateObjectMetaUpdate(&pc.ObjectMeta, &oldPc.ObjectMeta, field.NewPath(\"metadata\"))\n\t// Name is immutable and is checked by the ObjectMeta validator."
  }
]