[
  {
    "id" : "e1f9031e-0272-4b69-9766-64f6159ad08f",
    "prId" : 103245,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/103245#pullrequestreview-701267636",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1668ee10-efb9-4832-b957-68d0f6446798",
        "parentId" : null,
        "authorId" : "31a2ac00-6c67-4307-a4bc-bfd13f41ef27",
        "body" : "These could possibly just be one test function together (non-blocking)",
        "createdAt" : "2021-07-07T17:23:27Z",
        "updatedAt" : "2021-07-07T17:27:41Z",
        "lastEditedBy" : "31a2ac00-6c67-4307-a4bc-bfd13f41ef27",
        "tags" : [
        ]
      }
    ],
    "commit" : "513bd93f76ddd4b35b305ee1bf40302c3f0a531c",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +6044,6048 @@}\n\nfunc Test_validateProbe(t *testing.T) {\n\tdefer featuregatetesting.SetFeatureGateDuringTest(t, utilfeature.DefaultFeatureGate, features.ProbeTerminationGracePeriod, true)()\n"
  },
  {
    "id" : "58cb7fd7-a0da-4934-9a4a-041ff9d766b2",
    "prId" : 103245,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/103245#pullrequestreview-701267636",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "980919b2-60d5-4579-801b-ef0ec944910b",
        "parentId" : null,
        "authorId" : "31a2ac00-6c67-4307-a4bc-bfd13f41ef27",
        "body" : "Non-blocking: we have a field for test name but it's not being used anywhere.",
        "createdAt" : "2021-07-07T17:24:14Z",
        "updatedAt" : "2021-07-07T17:27:41Z",
        "lastEditedBy" : "31a2ac00-6c67-4307-a4bc-bfd13f41ef27",
        "tags" : [
        ]
      }
    ],
    "commit" : "513bd93f76ddd4b35b305ee1bf40302c3f0a531c",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +6053,6057 @@\t}\n\ttests := []struct {\n\t\tname string\n\t\targs args\n\t\twant field.ErrorList"
  },
  {
    "id" : "ac28bcbc-72a8-4992-96d0-91f30c844c64",
    "prId" : 100412,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/100412#pullrequestreview-648705009",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c4db8823-02c4-403c-bfd9-4dd0753e8b91",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "We probably want a case where this is false",
        "createdAt" : "2021-04-07T23:35:01Z",
        "updatedAt" : "2021-04-29T21:50:51Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "60937231-b67a-4281-9448-f0ff733fd0a4",
        "parentId" : "c4db8823-02c4-403c-bfd9-4dd0753e8b91",
        "authorId" : "89c2ffa8-b294-43fc-85c3-8f33b486c9b5",
        "body" : "Will add a negative case, thanks for the remainder.",
        "createdAt" : "2021-04-08T00:15:39Z",
        "updatedAt" : "2021-04-29T21:50:51Z",
        "lastEditedBy" : "89c2ffa8-b294-43fc-85c3-8f33b486c9b5",
        "tags" : [
        ]
      },
      {
        "id" : "16305aa5-fe2c-4541-ab40-1ea4d43bcf66",
        "parentId" : "c4db8823-02c4-403c-bfd9-4dd0753e8b91",
        "authorId" : "89c2ffa8-b294-43fc-85c3-8f33b486c9b5",
        "body" : "Added case where `AllocateLoadBalancerNodePorts` is set to `false` and another negative case that leaves `AllocateLoadBalancerNodePorts` unset.",
        "createdAt" : "2021-04-08T21:38:46Z",
        "updatedAt" : "2021-04-29T21:50:51Z",
        "lastEditedBy" : "89c2ffa8-b294-43fc-85c3-8f33b486c9b5",
        "tags" : [
        ]
      },
      {
        "id" : "8edebd70-78f7-4be8-b69a-2022d3744bb7",
        "parentId" : "c4db8823-02c4-403c-bfd9-4dd0753e8b91",
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "don't we have to enable the featuregate during the test?\r\n\r\n```\r\n\tdefer featuregatetesting.SetFeatureGateDuringTest(t, utilfeature.DefaultFeatureGate, features.ServiceLBNodePortControl)()\r\n```",
        "createdAt" : "2021-04-11T19:54:13Z",
        "updatedAt" : "2021-04-29T21:50:51Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      },
      {
        "id" : "067e047f-4c92-45fd-9e2b-4176ce5cd777",
        "parentId" : "c4db8823-02c4-403c-bfd9-4dd0753e8b91",
        "authorId" : "89c2ffa8-b294-43fc-85c3-8f33b486c9b5",
        "body" : "I think in this PR the feature is enabled by default already (see [here](https://github.com/kubernetes/kubernetes/blob/b1b8f049e7aa757d48559ffc2690271203b0cbf4/pkg/features/kube_features.go#L849)).",
        "createdAt" : "2021-04-13T19:48:19Z",
        "updatedAt" : "2021-04-29T21:50:51Z",
        "lastEditedBy" : "89c2ffa8-b294-43fc-85c3-8f33b486c9b5",
        "tags" : [
        ]
      },
      {
        "id" : "ffb13eb8-b903-4897-875b-fe9aad9589e8",
        "parentId" : "c4db8823-02c4-403c-bfd9-4dd0753e8b91",
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "hmm, I always thought that the test shouldn't depend on the global state, let me ask @liggitt , he always know all these things better than anybody.\r\nIs just for learning purposes :smiley: ",
        "createdAt" : "2021-04-13T20:34:47Z",
        "updatedAt" : "2021-04-29T21:50:51Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      },
      {
        "id" : "89e623d4-9486-4625-be8f-de3846437ca9",
        "parentId" : "c4db8823-02c4-403c-bfd9-4dd0753e8b91",
        "authorId" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "body" : "This is validation though, so the feature gate shouldn't impact the logic?",
        "createdAt" : "2021-04-29T21:03:23Z",
        "updatedAt" : "2021-04-29T21:50:51Z",
        "lastEditedBy" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "tags" : [
        ]
      },
      {
        "id" : "442b84a4-806a-4815-8a2a-cf34d27f3ed9",
        "parentId" : "c4db8823-02c4-403c-bfd9-4dd0753e8b91",
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "https://github.com/kubernetes/kubernetes/blob/204ff6caeb8229e6d12b54809108e7f32c19502f/pkg/apis/core/validation/validation.go#L4375-L4377",
        "createdAt" : "2021-04-29T21:51:58Z",
        "updatedAt" : "2021-04-29T21:51:58Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      },
      {
        "id" : "0d8d0cd5-7101-4879-b808-3ff37b4f0773",
        "parentId" : "c4db8823-02c4-403c-bfd9-4dd0753e8b91",
        "authorId" : "89c2ffa8-b294-43fc-85c3-8f33b486c9b5",
        "body" : "My understanding is all features are loaded from `defaultKubernetesFeatureGates` to the global `DefaultMutableFeatureGate` in `init`https://github.com/kubernetes/kubernetes/blob/204ff6caeb8229e6d12b54809108e7f32c19502f/pkg/features/kube_features.go#L740-L742\r\nAnd `ServiceLBNodePortControl` is now enabled in `defaultKubernetesFeatureGates`.\r\nhttps://github.com/kubernetes/kubernetes/blob/b1b8f049e7aa757d48559ffc2690271203b0cbf4/pkg/features/kube_features.go#L849\r\nAlso `DefaultFeatureGate` is the same as `DefaultMutableFeatureGate`\r\nhttps://github.com/kubernetes/kubernetes/blob/204ff6caeb8229e6d12b54809108e7f32c19502f/staging/src/k8s.io/apiserver/pkg/util/feature/feature_gate.go#L30-L32\r\n\r\nSo later when the validation happens, it's using the global `DefaultFeatureGate`, so it should know that `ServiceLBNodePortControl` is being enabled.",
        "createdAt" : "2021-04-29T22:14:11Z",
        "updatedAt" : "2021-04-29T22:14:11Z",
        "lastEditedBy" : "89c2ffa8-b294-43fc-85c3-8f33b486c9b5",
        "tags" : [
        ]
      },
      {
        "id" : "a7b25182-736f-40d3-b0c0-405b4a8a44e0",
        "parentId" : "c4db8823-02c4-403c-bfd9-4dd0753e8b91",
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "yeah, not a big deal, but my question was more related to know if we do want to test with and without feature gate ... but I think that I understand know Andrew's point, it will not be possible since we clear in strategy IIUIC\r\ndisregard my comment, sorry",
        "createdAt" : "2021-04-29T22:29:01Z",
        "updatedAt" : "2021-04-29T22:29:01Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      }
    ],
    "commit" : "c96c809539f399acee92f9073418b61f5dd5df0f",
    "line" : 71,
    "diffHunk" : "@@ -1,1 +11046,11050 @@\t\t\ttweakSvc: func(s *core.Service) {\n\t\t\t\ts.Spec.Type = core.ServiceTypeLoadBalancer\n\t\t\t\ts.Spec.AllocateLoadBalancerNodePorts = utilpointer.BoolPtr(true)\n\t\t\t},\n\t\t\tnumErrs: 0,"
  },
  {
    "id" : "0d148ff3-1d31-4dfa-a64e-d3883d05f423",
    "prId" : 100412,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/100412#pullrequestreview-631862399",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "14e4e376-2363-4535-b12f-8120850420af",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "How about a case where we change this ?  I thought we only wanted to allow it to change when type becomes LB?  But I can't seem to find that",
        "createdAt" : "2021-04-07T23:37:43Z",
        "updatedAt" : "2021-04-29T21:50:51Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "98bbc79e-7001-4fc9-b366-4299bc52fdde",
        "parentId" : "14e4e376-2363-4535-b12f-8120850420af",
        "authorId" : "89c2ffa8-b294-43fc-85c3-8f33b486c9b5",
        "body" : "Do you mean leaving `newSvc.Spec.AllocateLoadBalancerNodePorts` as empty here?",
        "createdAt" : "2021-04-08T00:25:45Z",
        "updatedAt" : "2021-04-29T21:50:51Z",
        "lastEditedBy" : "89c2ffa8-b294-43fc-85c3-8f33b486c9b5",
        "tags" : [
        ]
      },
      {
        "id" : "5036017b-2776-428b-b700-db74dae20cd5",
        "parentId" : "14e4e376-2363-4535-b12f-8120850420af",
        "authorId" : "89c2ffa8-b294-43fc-85c3-8f33b486c9b5",
        "body" : "Oh I see what you mean, added tests that changes `AllocateLoadBalancerNodePorts` from `true` to `false` and the other way around.",
        "createdAt" : "2021-04-08T21:39:22Z",
        "updatedAt" : "2021-04-29T21:50:51Z",
        "lastEditedBy" : "89c2ffa8-b294-43fc-85c3-8f33b486c9b5",
        "tags" : [
        ]
      }
    ],
    "commit" : "c96c809539f399acee92f9073418b61f5dd5df0f",
    "line" : 268,
    "diffHunk" : "@@ -1,1 +13520,13524 @@\t\t\t\toldSvc.Spec.Type = core.ServiceTypeClusterIP\n\t\t\t\tnewSvc.Spec.Type = core.ServiceTypeLoadBalancer\n\t\t\t\tnewSvc.Spec.AllocateLoadBalancerNodePorts = utilpointer.BoolPtr(true)\n\n\t\t\t\toldSvc.Spec.ClusterIP = \"1.2.3.4\""
  },
  {
    "id" : "98ab2752-c770-4fac-a35e-205785a0dc66",
    "prId" : 100412,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/100412#pullrequestreview-693038027",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1179a45f-0a48-4d3d-b91a-beddc3c338fb",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "Rather than doing this in every tweak, it should go in `makeValidService()`.  The tweaks are emphasizing what is DIFFERENT in each test case.",
        "createdAt" : "2021-06-25T16:19:47Z",
        "updatedAt" : "2021-06-25T16:45:25Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "13e950bc-4604-455f-924a-95befc07bf4b",
        "parentId" : "1179a45f-0a48-4d3d-b91a-beddc3c338fb",
        "authorId" : "89c2ffa8-b294-43fc-85c3-8f33b486c9b5",
        "body" : "The `AllocateLoadBalancerNodePorts` should only be set if the service type is `LoadBalancer`:\r\nhttps://github.com/kubernetes/kubernetes/blob/7e23c5367dd6dc5b1eb304b395efebb1e01485a8/pkg/apis/core/types.go#L3733-L3737\r\n\r\nAnd in the `makeValidService`, it's creating a service of type `ClusterIP`:\r\nhttps://github.com/kubernetes/kubernetes/blob/4d38d21880a6f9c988fe5a1408ed71725f8084d8/pkg/apis/core/validation/validation_test.go#L9972-L9984\r\n\r\nSo for each `LoadBalancer` case, we have to do the change in the tweak function I think.",
        "createdAt" : "2021-06-25T17:14:22Z",
        "updatedAt" : "2021-06-25T17:14:23Z",
        "lastEditedBy" : "89c2ffa8-b294-43fc-85c3-8f33b486c9b5",
        "tags" : [
        ]
      }
    ],
    "commit" : "c96c809539f399acee92f9073418b61f5dd5df0f",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +10881,10885 @@\t\t\ttweakSvc: func(s *core.Service) {\n\t\t\t\ts.Spec.Type = core.ServiceTypeLoadBalancer\n\t\t\t\ts.Spec.AllocateLoadBalancerNodePorts = utilpointer.BoolPtr(true)\n\t\t\t\ts.Spec.Ports[0].Protocol = \"UDP\"\n\t\t\t},"
  },
  {
    "id" : "2e75b1c9-4ecb-44c5-bf0a-797e4e119846",
    "prId" : 99023,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/99023#pullrequestreview-591749562",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "408010cc-41af-4e7a-9ea6-6e283401bb6a",
        "parentId" : null,
        "authorId" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "body" : "Can you `s/Whitelisted/allowed/` on line 5825? \r\nhttps://github.com/kubernetes/community/blob/master/wg-naming/recommendations/002-blacklist-whitelist-allowlist-denylist.md\r\n\r\nSame below in the failure cases (lines 5931+)",
        "createdAt" : "2021-02-17T00:52:37Z",
        "updatedAt" : "2021-02-17T00:53:46Z",
        "lastEditedBy" : "9f030d50-62db-4b00-a28c-847709b74d97",
        "tags" : [
        ]
      }
    ],
    "commit" : "babebf76d39508104d4a3a43fb0bb3399245495c",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +5846,5850 @@\t\t\t\t\t\t{Name: \"vol\", MountPath: \"/vol\"},\n\t\t\t\t\t},\n\t\t\t\t\tTerminationMessagePath:   \"/dev/termination-log\",\n\t\t\t\t\tTerminationMessagePolicy: \"File\",\n\t\t\t\t\tImagePullPolicy:          \"IfNotPresent\","
  },
  {
    "id" : "396c4f4f-b661-4635-8ba3-537dce3af3c3",
    "prId" : 98277,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/98277#pullrequestreview-604429806",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c33d0799-b31a-48f9-91ac-e28218a13321",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "you need a case for the opposite of this - old is nil, new is not",
        "createdAt" : "2021-03-04T19:00:12Z",
        "updatedAt" : "2021-03-05T01:12:13Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "72da0b1bb06607f3f3e067f1bb5ce329ec861e1b",
    "line" : 58,
    "diffHunk" : "@@ -1,1 +13720,13724 @@\t\t},\n\t\t{\n\t\t\tname: \"invalid: unset LoadBalancerClass when update service\",\n\t\t\ttweakSvc: func(oldSvc, newSvc *core.Service) {\n\t\t\t\toldSvc.Spec.Type = core.ServiceTypeLoadBalancer"
  },
  {
    "id" : "bd57da58-a721-4290-bbf7-543b6b3bdf59",
    "prId" : 98277,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/98277#pullrequestreview-604429806",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8aeef674-aada-4b8e-9302-26ea95dece2b",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "how about a case setting LBClass and type=ExternalName and one for NodePort",
        "createdAt" : "2021-03-04T19:01:36Z",
        "updatedAt" : "2021-03-05T01:12:13Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "72da0b1bb06607f3f3e067f1bb5ce329ec861e1b",
    "line" : 110,
    "diffHunk" : "@@ -1,1 +13772,13776 @@\t\t},\n\t\t{\n\t\t\tname: \"invalid: set LoadBalancerClass when update service to non LoadBalancer type of service\",\n\t\t\ttweakSvc: func(oldSvc, newSvc *core.Service) {\n\t\t\t\toldSvc.Spec.Type = core.ServiceTypeClusterIP"
  },
  {
    "id" : "3d375bd1-a745-4f0e-8654-cc69801ffcb1",
    "prId" : 98277,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/98277#pullrequestreview-604687583",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4e4358c3-c95c-4d9d-9e9c-d8a83c4987bc",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "No test case for a valid value when type=lb ?",
        "createdAt" : "2021-03-04T23:54:25Z",
        "updatedAt" : "2021-03-05T01:12:13Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "c31f6e80-a5b3-42f8-bbda-a05395040a9e",
        "parentId" : "4e4358c3-c95c-4d9d-9e9c-d8a83c4987bc",
        "authorId" : "b68c44be-fd44-41e0-a41f-0053e764cbf7",
        "body" : "Thanks @thockin ! Test cases added!",
        "createdAt" : "2021-03-05T00:10:48Z",
        "updatedAt" : "2021-03-05T01:12:13Z",
        "lastEditedBy" : "b68c44be-fd44-41e0-a41f-0053e764cbf7",
        "tags" : [
        ]
      }
    ],
    "commit" : "72da0b1bb06607f3f3e067f1bb5ce329ec861e1b",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +11313,11317 @@\t\t},\n\t\t{\n\t\t\tname: \"invalid: set LoadBalancerClass when type is not LoadBalancer\",\n\t\t\ttweakSvc: func(s *core.Service) {\n\t\t\t\ts.Spec.Type = core.ServiceTypeClusterIP"
  },
  {
    "id" : "6f292633-13a2-4e27-b982-9673b0f2887a",
    "prId" : 94028,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/94028#pullrequestreview-530174678",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3a38b32c-b51e-4314-8feb-8c148186d931",
        "parentId" : null,
        "authorId" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "body" : "non-blocking comment, there should be a test here that accounts for the feature gate",
        "createdAt" : "2020-11-13T14:51:02Z",
        "updatedAt" : "2020-11-13T17:53:22Z",
        "lastEditedBy" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "tags" : [
        ]
      },
      {
        "id" : "7bc71806-36b9-4c62-b7aa-1b9b984a1a84",
        "parentId" : "3a38b32c-b51e-4314-8feb-8c148186d931",
        "authorId" : "435e54ad-c154-4dc4-ba5a-0c4cb43addc5",
        "body" : "The feature gate is checked in a different function than `ValidateServiceCreate`. The feature gate is checked in `ValidateConditionalService` and for that we have the unit tests.",
        "createdAt" : "2020-11-13T15:48:08Z",
        "updatedAt" : "2020-11-13T17:53:22Z",
        "lastEditedBy" : "435e54ad-c154-4dc4-ba5a-0c4cb43addc5",
        "tags" : [
        ]
      }
    ],
    "commit" : "382f6f588f3392e475e0a72825989c2c6f257965",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +10289,10293 @@\t\t},\n\t\t{\n\t\t\tname: \"load balancer with mix protocol\",\n\t\t\ttweakSvc: func(s *core.Service) {\n\t\t\t\ts.Spec.Type = core.ServiceTypeLoadBalancer"
  },
  {
    "id" : "e2671827-c571-449b-8a31-a29e7d00b7ba",
    "prId" : 88488,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/88488#pullrequestreview-368993612",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "aefb57ff-91bb-47dd-a020-e4cc11e85fb6",
        "parentId" : null,
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "Can we also add a test case to validate we can't change the field?",
        "createdAt" : "2020-03-03T21:01:18Z",
        "updatedAt" : "2020-03-05T13:01:00Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "42e8f7d3-6636-40f0-89be-8f0548011a29",
        "parentId" : "aefb57ff-91bb-47dd-a020-e4cc11e85fb6",
        "authorId" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "body" : "fixed",
        "createdAt" : "2020-03-04T17:52:38Z",
        "updatedAt" : "2020-03-05T13:01:00Z",
        "lastEditedBy" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "tags" : [
        ]
      }
    ],
    "commit" : "b13295968757aad1d6908d38907e7ec4ebca6a21",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +6710,6714 @@\t\t\tOverhead:         core.ResourceList{},\n\t\t},\n\t\t{\n\t\t\tContainers: []core.Container{{Name: \"ctr\", Image: \"image\", ImagePullPolicy: \"IfNotPresent\", TerminationMessagePolicy: \"File\"}},\n\t\t\tSecurityContext: &core.PodSecurityContext{"
  },
  {
    "id" : "c7fa150e-62ba-4e6a-bd07-ddbdfd361c53",
    "prId" : 79489,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/79489#pullrequestreview-263052886",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "abe720f5-a82f-46d6-afc4-837df7b3a3e7",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "I'd expect the following cases to be valid (but I think they fail current validation):\r\n```\r\nsome-dns-domain-name.a\\\\User\r\nsome-dns-domain-name\\\\User\r\n```\r\n\r\nI'd expect the following cases to be invalid (but I think they pass current validation):\r\n```\r\n\\\\User\r\n```",
        "createdAt" : "2019-07-16T13:42:49Z",
        "updatedAt" : "2019-07-17T15:03:43Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "c476930e-9977-4b94-9719-49082330628d",
        "parentId" : "abe720f5-a82f-46d6-afc4-837df7b3a3e7",
        "authorId" : "8b178e45-b16b-405a-a22d-44899bf0bd64",
        "body" : "Can you explain why ``DOMAIN\\\\USER`` would be correct?\r\n\r\nI've fixed the ``\\\\User`` issue, as mentioned above.",
        "createdAt" : "2019-07-16T16:12:11Z",
        "updatedAt" : "2019-07-17T15:03:43Z",
        "lastEditedBy" : "8b178e45-b16b-405a-a22d-44899bf0bd64",
        "tags" : [
        ]
      },
      {
        "id" : "8f385b3f-7b7f-4565-9771-615a953902e6",
        "parentId" : "abe720f5-a82f-46d6-afc4-837df7b3a3e7",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "> Can you explain why `DOMAIN\\\\USER` would be correct?\r\n\r\nthe domain in `some-dns-domain-name\\\\User` would be too long for a netbios domain, but still a valid single-segment dns name, right?",
        "createdAt" : "2019-07-17T13:55:23Z",
        "updatedAt" : "2019-07-17T15:03:43Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "ca6015bf-9201-488a-bc4d-2a922e53959d",
        "parentId" : "abe720f5-a82f-46d6-afc4-837df7b3a3e7",
        "authorId" : "8b178e45-b16b-405a-a22d-44899bf0bd64",
        "body" : "Oh, ok, I didn't realize that ``some-dns-domain-name`` would exceed the NetBios character limit. I thought that you wanted us to accept as valid a double backslash.\r\n\r\nAnyways, ``some-dns-domain-name`` is valid, and it is covered by the test: ``a valid RunAsUserName with a long single segment DNS Domain``.\r\n\r\nAdditionally, the test ``a valid RunAsUserName with DNS Domain with a single character segment`` covers your other case.",
        "createdAt" : "2019-07-17T14:08:15Z",
        "updatedAt" : "2019-07-17T15:03:43Z",
        "lastEditedBy" : "8b178e45-b16b-405a-a22d-44899bf0bd64",
        "tags" : [
        ]
      }
    ],
    "commit" : "a8c78d13596e4152d54420705b7fa4ee393d0cbe",
    "line" : 131,
    "diffHunk" : "@@ -1,1 +13613,13617 @@\t\t\t},\n\t\t\texpectedErrorSubstring: \"runAsUserName's User cannot contain the following characters\",\n\t\t},\n\t}\n"
  },
  {
    "id" : "52f781b8-7449-4775-923b-322c374d3ca9",
    "prId" : 77327,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/77327#pullrequestreview-234345994",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0f9ccd44-6147-44d7-944d-dbbc0e2964d1",
        "parentId" : null,
        "authorId" : "224e1088-78fe-4bdd-99d1-31be3e464996",
        "body" : "nit: do you mean two constraints with the same topologyKey ?",
        "createdAt" : "2019-05-07T06:50:15Z",
        "updatedAt" : "2019-07-19T00:34:43Z",
        "lastEditedBy" : "224e1088-78fe-4bdd-99d1-31be3e464996",
        "tags" : [
        ]
      },
      {
        "id" : "ea2e0190-7e30-40d5-8d85-80e06a2d033b",
        "parentId" : "0f9ccd44-6147-44d7-944d-dbbc0e2964d1",
        "authorId" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "body" : "I meant constraints with duplicated tuple {topologyKey, WhenUnsatisfiable}.",
        "createdAt" : "2019-05-07T07:11:37Z",
        "updatedAt" : "2019-07-19T00:34:43Z",
        "lastEditedBy" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "tags" : [
        ]
      }
    ],
    "commit" : "f9d49a6309127d79c6c8ccb044c7c7d81c65adb2",
    "line" : 87,
    "diffHunk" : "@@ -1,1 +13779,13783 @@\t\t},\n\t\t{\n\t\t\tname: \"duplicate constraints\",\n\t\t\tconstraints: []core.TopologySpreadConstraint{\n\t\t\t\t{MaxSkew: 1, TopologyKey: \"k8s.io/zone\", WhenUnsatisfiable: core.DoNotSchedule},"
  },
  {
    "id" : "cfff6c61-71de-45a9-9974-f52675fffdcc",
    "prId" : 77327,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/77327#pullrequestreview-257146020",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1d7ee2c6-1038-41a4-8324-cb7bb05588f5",
        "parentId" : null,
        "authorId" : "224e1088-78fe-4bdd-99d1-31be3e464996",
        "body" : "Why would we have two topologyKey exactly same in the same TopologySpreadConstraint ?",
        "createdAt" : "2019-07-02T20:43:44Z",
        "updatedAt" : "2019-07-19T00:34:43Z",
        "lastEditedBy" : "224e1088-78fe-4bdd-99d1-31be3e464996",
        "tags" : [
        ]
      },
      {
        "id" : "c379258d-44a0-4949-abd0-63405f69a0cd",
        "parentId" : "1d7ee2c6-1038-41a4-8324-cb7bb05588f5",
        "authorId" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "body" : "This is an intentional failure case.",
        "createdAt" : "2019-07-02T20:58:30Z",
        "updatedAt" : "2019-07-19T00:34:43Z",
        "lastEditedBy" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "tags" : [
        ]
      }
    ],
    "commit" : "f9d49a6309127d79c6c8ccb044c7c7d81c65adb2",
    "line" : 90,
    "diffHunk" : "@@ -1,1 +13782,13786 @@\t\t\tconstraints: []core.TopologySpreadConstraint{\n\t\t\t\t{MaxSkew: 1, TopologyKey: \"k8s.io/zone\", WhenUnsatisfiable: core.DoNotSchedule},\n\t\t\t\t{MaxSkew: 2, TopologyKey: \"k8s.io/zone\", WhenUnsatisfiable: core.DoNotSchedule},\n\t\t\t},\n\t\t\terrtype:  field.ErrorTypeDuplicate,"
  },
  {
    "id" : "f224bbfb-93b1-4a39-ac2d-551974e57ce9",
    "prId" : 77327,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/77327#pullrequestreview-257145829",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5acaa765-f514-4adb-bc63-cb8fc757548f",
        "parentId" : null,
        "authorId" : "224e1088-78fe-4bdd-99d1-31be3e464996",
        "body" : "Also maxSkew as 0 is perfectly valid use case for perfect spreading ? Why do you disallow it ?",
        "createdAt" : "2019-07-02T20:44:36Z",
        "updatedAt" : "2019-07-19T00:34:43Z",
        "lastEditedBy" : "224e1088-78fe-4bdd-99d1-31be3e464996",
        "tags" : [
        ]
      },
      {
        "id" : "f7ccdabc-87c5-4740-aea8-ba202b77aa09",
        "parentId" : "5acaa765-f514-4adb-bc63-cb8fc757548f",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "As stated previously-- at zero, it becomes illegal to ever add an additional pod; imagine (3,3,3): an additional pod anywhere will increase the skew to 1 and therefore be illegal.",
        "createdAt" : "2019-07-02T20:50:37Z",
        "updatedAt" : "2019-07-19T00:34:43Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "ae957ca4-9698-4a9a-9edd-3a6f7bae6028",
        "parentId" : "5acaa765-f514-4adb-bc63-cb8fc757548f",
        "authorId" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "body" : "@krmayankk see our discussion at https://github.com/kubernetes/kubernetes/pull/77327#discussion_r289450609",
        "createdAt" : "2019-07-02T20:58:04Z",
        "updatedAt" : "2019-07-19T00:34:43Z",
        "lastEditedBy" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "tags" : [
        ]
      }
    ],
    "commit" : "f9d49a6309127d79c6c8ccb044c7c7d81c65adb2",
    "line" : 41,
    "diffHunk" : "@@ -1,1 +13733,13737 @@\t\t\tname: \"invalid MaxSkew\",\n\t\t\tconstraints: []core.TopologySpreadConstraint{\n\t\t\t\t{MaxSkew: 0, TopologyKey: \"k8s.io/zone\", WhenUnsatisfiable: core.DoNotSchedule},\n\t\t\t},\n\t\t\terrtype:  field.ErrorTypeInvalid,"
  },
  {
    "id" : "54a5c1e8-1abe-4551-80d9-de6ccb8acdd2",
    "prId" : 77327,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/77327#pullrequestreview-264216942",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bff97737-a2b2-4ce7-852c-e34a64430907",
        "parentId" : null,
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "nit: you could use the well known label `apis.labelZoneFailureDomainGA` or simply define a constant for the test. This is not necessary, but it could help prevent typos.",
        "createdAt" : "2019-07-18T16:01:10Z",
        "updatedAt" : "2019-07-19T00:34:43Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      },
      {
        "id" : "5e5520c1-501a-4a35-9a83-39cb5ee094c1",
        "parentId" : "bff97737-a2b2-4ce7-852c-e34a64430907",
        "authorId" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "body" : "That's a private variable, so not worth making it public and make a reference here.",
        "createdAt" : "2019-07-19T00:43:19Z",
        "updatedAt" : "2019-07-19T00:43:19Z",
        "lastEditedBy" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "tags" : [
        ]
      },
      {
        "id" : "dd37e9ce-4fb2-4234-948d-4b4a4281eb54",
        "parentId" : "bff97737-a2b2-4ce7-852c-e34a64430907",
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "Oh, I missed that. There is still `v1.LabelZoneFailureDomain` or simply a constant at the top of this file. But again, just a nit.",
        "createdAt" : "2019-07-19T13:41:46Z",
        "updatedAt" : "2019-07-19T13:42:53Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      }
    ],
    "commit" : "f9d49a6309127d79c6c8ccb044c7c7d81c65adb2",
    "line" : 57,
    "diffHunk" : "@@ -1,1 +13749,13753 @@\t\t\tname: \"missing scheduling mode\",\n\t\t\tconstraints: []core.TopologySpreadConstraint{\n\t\t\t\t{MaxSkew: 1, TopologyKey: \"k8s.io/zone\"},\n\t\t\t},\n\t\t\terrtype:  field.ErrorTypeNotSupported,"
  },
  {
    "id" : "a2b87e7e-9716-4131-8677-dcad60a48400",
    "prId" : 73977,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/73977#pullrequestreview-243522263",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "56c7477f-7b5b-485a-b806-c9bf66eb5963",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "should also test nil",
        "createdAt" : "2019-05-29T21:35:45Z",
        "updatedAt" : "2019-07-02T22:28:09Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "af552ab4699fbdd70622ade95a2accbab904c5b5",
    "line" : 40,
    "diffHunk" : "@@ -1,1 +10634,10638 @@\t\t\t},\n\t\t\tSpec: core.NodeSpec{\n\t\t\t\tPodCIDRs: []string{},\n\t\t\t},\n\t\t}, core.Node{"
  },
  {
    "id" : "7c1ad9f4-5e8e-4c00-8ffd-080750c74bff",
    "prId" : 73977,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/73977#pullrequestreview-243522263",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7375cb4a-0abb-490a-9d74-36b5ae0c61df",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "need test cases for more than 1 entry",
        "createdAt" : "2019-05-29T21:36:15Z",
        "updatedAt" : "2019-07-02T22:28:09Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "af552ab4699fbdd70622ade95a2accbab904c5b5",
    "line" : 65,
    "diffHunk" : "@@ -1,1 +10656,10660 @@\t\t\t},\n\t\t\tSpec: core.NodeSpec{\n\t\t\t\tPodCIDRs: []string{\"192.168.0.0/16\"},\n\t\t\t},\n\t\t}, false},"
  },
  {
    "id" : "96fc08a3-764f-4f9f-a840-c61f60185609",
    "prId" : 73657,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/73657#pullrequestreview-200216089",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "de6a9faa-9b21-4e13-9fd3-4e8cc50f7a52",
        "parentId" : null,
        "authorId" : "1c129c56-3102-4f2b-9811-3cdbb8ceb2d6",
        "body" : "Just a query that , Why we are not specifying expectedError: here.?",
        "createdAt" : "2019-02-03T10:49:37Z",
        "updatedAt" : "2019-02-03T10:49:37Z",
        "lastEditedBy" : "1c129c56-3102-4f2b-9811-3cdbb8ceb2d6",
        "tags" : [
        ]
      },
      {
        "id" : "cab507a7-06ba-4de3-abe7-202e2ab77494",
        "parentId" : "de6a9faa-9b21-4e13-9fd3-4e8cc50f7a52",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "no error is expected",
        "createdAt" : "2019-02-05T17:52:11Z",
        "updatedAt" : "2019-02-05T17:52:12Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "b03d0e31ad1299f804a3388643dea63fd95672b3",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +6688,6692 @@\t\t},\n\t\t{ // valid serviceaccount token projected volume with serviceaccount name specified\n\t\t\tObjectMeta: metav1.ObjectMeta{Name: \"valid-extended\", Namespace: \"ns\"},\n\t\t\tSpec: core.PodSpec{\n\t\t\t\tServiceAccountName: \"some-service-account\","
  },
  {
    "id" : "31525760-6a6b-4754-94a5-885ed874ad99",
    "prId" : 72046,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/72046#pullrequestreview-303196966",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "22bcf326-163d-4e78-889c-3b43d4f05840",
        "parentId" : null,
        "authorId" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "body" : "add a test case with duplicate topology keys?",
        "createdAt" : "2019-10-16T17:41:15Z",
        "updatedAt" : "2019-11-15T06:38:02Z",
        "lastEditedBy" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "tags" : [
        ]
      },
      {
        "id" : "b30df765-924a-4fe9-a350-91836c6cb9a9",
        "parentId" : "22bcf326-163d-4e78-889c-3b43d4f05840",
        "authorId" : "e379cdad-051b-485d-824f-1b14a8cc7dd0",
        "body" : "done",
        "createdAt" : "2019-10-17T11:53:06Z",
        "updatedAt" : "2019-11-15T06:38:02Z",
        "lastEditedBy" : "e379cdad-051b-485d-824f-1b14a8cc7dd0",
        "tags" : [
        ]
      }
    ],
    "commit" : "31d623b4d74ceadfad101d36a4710d4406fcf144",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +10062,10066 @@\t\t},\n\t\t{\n\t\t\tname: \"valid topology keys\",\n\t\t\ttweakSvc: func(s *core.Service) {\n\t\t\t\ts.Spec.TopologyKeys = []string{"
  },
  {
    "id" : "ba8574a2-01d6-456b-9452-0057ce890f6a",
    "prId" : 72046,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/72046#pullrequestreview-317244091",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "042d8029-94f5-4513-ae76-c8aa6627a3a8",
        "parentId" : null,
        "authorId" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "body" : "Add a test case w/ externalTrafficPolicy=Local?",
        "createdAt" : "2019-10-29T16:23:35Z",
        "updatedAt" : "2019-11-15T06:38:02Z",
        "lastEditedBy" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "tags" : [
        ]
      },
      {
        "id" : "45ef1bc4-161f-4db3-9aa8-3e3514f9d50c",
        "parentId" : "042d8029-94f5-4513-ae76-c8aa6627a3a8",
        "authorId" : "e379cdad-051b-485d-824f-1b14a8cc7dd0",
        "body" : "done. `numErrs` is 2, because both `externalTrafficPolicy` and `topoloyKeys` is checked, so there is two Forbidden errors.",
        "createdAt" : "2019-11-01T07:12:42Z",
        "updatedAt" : "2019-11-15T06:38:02Z",
        "lastEditedBy" : "e379cdad-051b-485d-824f-1b14a8cc7dd0",
        "tags" : [
        ]
      },
      {
        "id" : "0f58e030-be85-47ce-a4a2-afcc45a18c92",
        "parentId" : "042d8029-94f5-4513-ae76-c8aa6627a3a8",
        "authorId" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "body" : "Do we need both? Just one is fine I think?",
        "createdAt" : "2019-11-05T16:07:34Z",
        "updatedAt" : "2019-11-15T06:38:02Z",
        "lastEditedBy" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "tags" : [
        ]
      },
      {
        "id" : "0b8cd8b0-4157-4f92-858f-a7dcaf2860d7",
        "parentId" : "042d8029-94f5-4513-ae76-c8aa6627a3a8",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "I agree that only one is needed, and since topology keys is alpha, that's the one we should yell about.  But I won't block the PR *just* on that.",
        "createdAt" : "2019-11-12T20:45:55Z",
        "updatedAt" : "2019-11-15T06:38:02Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "bfa78a57-300b-4afc-a665-cd6b640bd759",
        "parentId" : "042d8029-94f5-4513-ae76-c8aa6627a3a8",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "To be clear - we SHOULD fix it to only complain once.",
        "createdAt" : "2019-11-14T20:37:42Z",
        "updatedAt" : "2019-11-15T06:38:02Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "31d623b4d74ceadfad101d36a4710d4406fcf144",
    "line" : 69,
    "diffHunk" : "@@ -1,1 +10110,10114 @@\t\t\t},\n\t\t\tnumErrs: 1,\n\t\t},\n\t\t{\n\t\t\tname: `use topology keys with externalTrafficPolicy=Local`,"
  },
  {
    "id" : "a500c939-5a3c-4fb7-b9a8-36d9dd14ad28",
    "prId" : 57963,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/57963#pullrequestreview-125643986",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f8b8423e-184d-4d01-8f68-950d046a5a5a",
        "parentId" : null,
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Probably needs more validation tests but I'd be ok with those being later.",
        "createdAt" : "2018-06-04T16:14:12Z",
        "updatedAt" : "2018-06-04T20:15:28Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "3cfe6412c70ad1c658cb37013d2300f1707fd290",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +11519,11523 @@\t\t\t},\n\t\t},\n\t}\n\n\t// storage is not yet supported as a quota tracked resource"
  },
  {
    "id" : "8e4ae637-4587-4994-b61b-e75fe997c9ad",
    "prId" : 55902,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/55902#pullrequestreview-78580774",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6347a4d0-788c-484c-8a8b-4b15ce349e7a",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "add a test case for a complex label name (`test.example.com/key`)",
        "createdAt" : "2017-11-22T21:06:17Z",
        "updatedAt" : "2017-11-22T23:50:49Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "2cb94bb5-c4ac-4779-95c7-b01aedbc0a46",
        "parentId" : "6347a4d0-788c-484c-8a8b-4b15ce349e7a",
        "authorId" : "ed12fa4b-7790-4e88-b7d8-5d6a06b0b9f3",
        "body" : "Done.",
        "createdAt" : "2017-11-22T21:17:38Z",
        "updatedAt" : "2017-11-22T23:50:49Z",
        "lastEditedBy" : "ed12fa4b-7790-4e88-b7d8-5d6a06b0b9f3",
        "tags" : [
        ]
      }
    ],
    "commit" : "c74b97b29db12c851f31810896cc10979d110323",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +2635,2639 @@\t\t\t\t\t\t\t\t\tFieldPath:  \"metadata.labels['key']\",\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tPath: \"labels with complex subscript\","
  },
  {
    "id" : "6f94242d-76e0-4bd8-96f7-c707c96c6c02",
    "prId" : 55902,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/55902#pullrequestreview-78580786",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1e5abd9e-164c-47b3-89a7-db30b7f34416",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "add a test case for a complex annotation name (`TEST.EXAMPLE.COM/key`)",
        "createdAt" : "2017-11-22T21:06:49Z",
        "updatedAt" : "2017-11-22T23:50:49Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "f58d2579-f698-4ca7-85a7-19fd6ea206ec",
        "parentId" : "1e5abd9e-164c-47b3-89a7-db30b7f34416",
        "authorId" : "ed12fa4b-7790-4e88-b7d8-5d6a06b0b9f3",
        "body" : "Done.",
        "createdAt" : "2017-11-22T21:17:44Z",
        "updatedAt" : "2017-11-22T23:50:49Z",
        "lastEditedBy" : "ed12fa4b-7790-4e88-b7d8-5d6a06b0b9f3",
        "tags" : [
        ]
      }
    ],
    "commit" : "c74b97b29db12c851f31810896cc10979d110323",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +2656,2660 @@\t\t\t\t\t\t\t\t\tFieldPath:  \"metadata.annotations['key']\",\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tPath: \"annotations with complex subscript\","
  },
  {
    "id" : "c599aa9e-ea77-4a1e-9e62-df2051b1c044",
    "prId" : 55532,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/55532#pullrequestreview-76424302",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "32f1dde9-6f99-4fec-a066-85f82886e229",
        "parentId" : null,
        "authorId" : "cf088828-7f69-4b6e-8956-1842c94daa02",
        "body" : "Sorry for the delay. But this test case is added below\r\nhttps://github.com/kubernetes/kubernetes/pull/55532/files#diff-4547664c983457f8f7077a63a5ae7699R874",
        "createdAt" : "2017-11-14T12:30:17Z",
        "updatedAt" : "2017-11-14T12:30:27Z",
        "lastEditedBy" : "cf088828-7f69-4b6e-8956-1842c94daa02",
        "tags" : [
        ]
      }
    ],
    "commit" : "98e2c8cdee62e7cb804e7dc429083cfede8ef3ee",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +748,752 @@\t\t\t}),\n\t\t},\n\t\t\"invalid-claim-zero-capacity\": {\n\t\t\tisExpectedFailure: true,\n\t\t\tclaim: testVolumeClaim(\"foo\", \"ns\", core.PersistentVolumeClaimSpec{"
  },
  {
    "id" : "62084f2f-15e7-4b10-94da-0e66bfe66aa6",
    "prId" : 55103,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/55103#pullrequestreview-75802629",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "75a97f59-d7f5-484a-8440-e136a7051af9",
        "parentId" : null,
        "authorId" : "93df2e83-0c3f-4aca-8f83-bac5bb8543ff",
        "body" : "why change 20 to 10？",
        "createdAt" : "2017-11-10T00:15:03Z",
        "updatedAt" : "2017-11-16T18:47:52Z",
        "lastEditedBy" : "93df2e83-0c3f-4aca-8f83-bac5bb8543ff",
        "tags" : [
        ]
      },
      {
        "id" : "cbfea4b0-bbbf-4f36-a0f9-b5a8837b2ad2",
        "parentId" : "75a97f59-d7f5-484a-8440-e136a7051af9",
        "authorId" : "8b309230-89cb-4a04-bf89-29a323dad0d8",
        "body" : "This test case is to verify the handling of valid extended resource requests. One difference between extended resources and opaque integer resources is that extended resources may not be overcommitted. So, if both request and limit are specified then they must be equal to pass validation.",
        "createdAt" : "2017-11-10T16:04:04Z",
        "updatedAt" : "2017-11-16T18:47:52Z",
        "lastEditedBy" : "8b309230-89cb-4a04-bf89-29a323dad0d8",
        "tags" : [
        ]
      },
      {
        "id" : "505b0285-ae32-4054-88d9-ed379188cd39",
        "parentId" : "75a97f59-d7f5-484a-8440-e136a7051af9",
        "authorId" : "8b309230-89cb-4a04-bf89-29a323dad0d8",
        "body" : "We have other test cases in this file where extended resource request != limit, but we expect them to fail validation.",
        "createdAt" : "2017-11-10T16:05:32Z",
        "updatedAt" : "2017-11-16T18:47:52Z",
        "lastEditedBy" : "8b309230-89cb-4a04-bf89-29a323dad0d8",
        "tags" : [
        ]
      }
    ],
    "commit" : "80ac705ef32177fd6c5b72fc103ec51e8ea44c4a",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +5333,5337 @@\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tLimits: core.ResourceList{\n\t\t\t\t\t\t\t\tcore.ResourceName(\"example.com/a\"): resource.MustParse(\"10\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},"
  }
]