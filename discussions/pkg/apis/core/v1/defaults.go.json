[
  {
    "id" : "1da91cbc-fa23-4462-86fd-6623c4f88720",
    "prId" : 96968,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/96968#pullrequestreview-550624420",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fa00ffe9-b8bf-4927-a524-0c6ca40f939d",
        "parentId" : null,
        "authorId" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "body" : "nit: remove this empty line here",
        "createdAt" : "2020-12-11T05:01:37Z",
        "updatedAt" : "2021-03-09T01:18:52Z",
        "lastEditedBy" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "tags" : [
        ]
      },
      {
        "id" : "69c3441c-77e1-45bd-a56a-a7e651bc6833",
        "parentId" : "fa00ffe9-b8bf-4927-a524-0c6ca40f939d",
        "authorId" : "8949719e-3713-4a40-b764-2966b123797e",
        "body" : "done",
        "createdAt" : "2020-12-11T22:40:48Z",
        "updatedAt" : "2021-03-09T01:18:52Z",
        "lastEditedBy" : "8949719e-3713-4a40-b764-2966b123797e",
        "tags" : [
        ]
      }
    ],
    "commit" : "465474269f352c941eccea4dfdb255d4410b3634",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +331,335 @@\t// This code needs to be kept in sync with the implementation that exists\n\t// in Namespace Canonicalize strategy (pkg/registry/core/namespace)\n\n\t// note that this can result in many calls to feature enablement in some cases, but\n\t// we assume that there's no real cost there."
  },
  {
    "id" : "81a6a1c2-b0ca-4ad7-94d5-aa2ffd91dc8f",
    "prId" : 96968,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/96968#pullrequestreview-569964924",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1cebdb08-dfb3-4acb-934a-12aece0d73c4",
        "parentId" : null,
        "authorId" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "body" : "Can we add a unit test for this in `defaults_test.go`?",
        "createdAt" : "2020-12-14T21:14:22Z",
        "updatedAt" : "2021-03-09T01:18:52Z",
        "lastEditedBy" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "tags" : [
        ]
      },
      {
        "id" : "90c1d760-c98e-4124-966c-aca32350d299",
        "parentId" : "1cebdb08-dfb3-4acb-934a-12aece0d73c4",
        "authorId" : "a5be0b3b-3db2-4c99-a598-55f8708db5df",
        "body" : "ah ya, just saw, sure",
        "createdAt" : "2021-01-03T14:43:05Z",
        "updatedAt" : "2021-03-09T01:18:52Z",
        "lastEditedBy" : "a5be0b3b-3db2-4c99-a598-55f8708db5df",
        "tags" : [
        ]
      },
      {
        "id" : "c1acd829-88e4-4633-88f9-b1414a6e961f",
        "parentId" : "1cebdb08-dfb3-4acb-934a-12aece0d73c4",
        "authorId" : "a5be0b3b-3db2-4c99-a598-55f8708db5df",
        "body" : "just added this unit testt. should be ok.  did an experiment in gitpod.io so will be interestingto see if this PR update worked :) ",
        "createdAt" : "2021-01-16T20:14:02Z",
        "updatedAt" : "2021-03-09T01:18:52Z",
        "lastEditedBy" : "a5be0b3b-3db2-4c99-a598-55f8708db5df",
        "tags" : [
        ]
      }
    ],
    "commit" : "465474269f352c941eccea4dfdb255d4410b3634",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +326,330 @@\n// SetDefaults_Namespace adds a default label for all namespaces\nfunc SetDefaults_Namespace(obj *v1.Namespace) {\n\t// TODO, remove the feature gate in 1.22\n\t// we can't SetDefaults for nameless namespaces (generateName)."
  },
  {
    "id" : "dc61bd71-a336-451d-8fea-fe11eaafe556",
    "prId" : 96600,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/96600#pullrequestreview-580862479",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "86e41d24-d8f6-491b-b4fc-a6598182b728",
        "parentId" : null,
        "authorId" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "body" : "Can we add a unit test for this in defaults_test.go?",
        "createdAt" : "2020-12-14T16:06:41Z",
        "updatedAt" : "2021-03-08T16:43:22Z",
        "lastEditedBy" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "tags" : [
        ]
      },
      {
        "id" : "30682d0a-5432-4bd5-923a-21333901aee2",
        "parentId" : "86e41d24-d8f6-491b-b4fc-a6598182b728",
        "authorId" : "a2e00680-b383-4471-a78c-45fa5811f18b",
        "body" : "done",
        "createdAt" : "2021-02-01T23:32:33Z",
        "updatedAt" : "2021-03-08T16:43:22Z",
        "lastEditedBy" : "a2e00680-b383-4471-a78c-45fa5811f18b",
        "tags" : [
        ]
      }
    ],
    "commit" : "62804c1ae8762938e4f708f3d6e0408aa47d7020",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +132,136 @@\t}\n\n\tif utilfeature.DefaultFeatureGate.Enabled(features.ServiceInternalTrafficPolicy) && obj.Spec.InternalTrafficPolicy == nil {\n\t\tserviceInternalTrafficPolicyCluster := v1.ServiceInternalTrafficPolicyCluster\n\t\tobj.Spec.InternalTrafficPolicy = &serviceInternalTrafficPolicyCluster"
  },
  {
    "id" : "96090bd6-b450-42b6-82e4-af55e2cb16bb",
    "prId" : 79386,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/79386#pullrequestreview-279082202",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e0859357-1c8c-433a-9b55-a45f5190ad12",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "Since this is before validation, do we need to handle a bad IP parse?  Or are we OK letting that fall through and fail in validation?  I guess we are.  Maybe a comment here?",
        "createdAt" : "2019-08-23T15:49:08Z",
        "updatedAt" : "2019-08-28T18:42:36Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "c27e0b029d328552cc3ef0661f16a5ad3c422fb8",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +153,157 @@\t\tipv6 := v1.IPv6Protocol\n\t\tipv4 := v1.IPv4Protocol\n\t\tif utilnet.IsIPv6String(obj.Spec.ClusterIP) {\n\t\t\tobj.Spec.IPFamily = &ipv6\n\t\t} else {"
  }
]