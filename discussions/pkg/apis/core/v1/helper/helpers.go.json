[
  {
    "id" : "994f4c29-c4d9-4e0e-927e-bdadfdae47cd",
    "prId" : 95871,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/95871#pullrequestreview-516924616",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c409aa21-537f-482d-92fb-2fbf4e1806c1",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "continuing here would be clearer",
        "createdAt" : "2020-10-26T15:54:47Z",
        "updatedAt" : "2020-10-27T16:52:24Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "d9f334683ee3d6db3ed2a9f303e1d7b6b76fa0a1",
    "line" : 59,
    "diffHunk" : "@@ -1,1 +333,337 @@\t\t\tlabelSelector, err := nodeSelectorRequirementsAsSelector(req.MatchExpressions)\n\t\t\tif err != nil {\n\t\t\t\terrors = append(errors, err)\n\t\t\t\tcontinue\n\t\t\t}"
  },
  {
    "id" : "06f9b4bb-1614-417c-a7eb-f3681c481c97",
    "prId" : 95871,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/95871#pullrequestreview-516929075",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bd0a575f-6d59-44fa-afb1-01a1e6892e90",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "+1 to surfacing errors here",
        "createdAt" : "2020-10-26T15:59:20Z",
        "updatedAt" : "2020-10-27T16:52:24Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "d9f334683ee3d6db3ed2a9f303e1d7b6b76fa0a1",
    "line" : 86,
    "diffHunk" : "@@ -1,1 +355,359 @@\t}\n\n\treturn false, apierrors.NewAggregate(errors)\n}\n"
  },
  {
    "id" : "47ff63c1-0ee5-48a3-857d-63df5b8c1816",
    "prId" : 95871,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/95871#pullrequestreview-516929075",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d93fb282-052d-45bb-8a98-bfdec8954748",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "if we're accepting a *Node object, should we check for nil and return `false, nil` early?",
        "createdAt" : "2020-10-26T16:00:03Z",
        "updatedAt" : "2020-10-27T16:52:24Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "d9f334683ee3d6db3ed2a9f303e1d7b6b76fa0a1",
    "line" : 47,
    "diffHunk" : "@@ -1,1 +323,327 @@\t\treturn false, nil\n\t}\n\tvar errors []error\n\tfor _, req := range nodeSelector.NodeSelectorTerms {\n\t\t// nil or empty term selects no objects"
  },
  {
    "id" : "7079a134-d0af-4d3f-8cdc-c0c6369e9897",
    "prId" : 95871,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/95871#pullrequestreview-518963039",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "11926232-2be5-46ad-aad6-abec67bff968",
        "parentId" : null,
        "authorId" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "body" : "nit: do we need to check `labelSelector == nil`? (same for `fieldSelector == nil` at L349)\r\n\r\nIIUC, `nodeSelectorRequirementsAsFieldSelector` always returns a nil selector along with an error.",
        "createdAt" : "2020-10-28T18:22:31Z",
        "updatedAt" : "2020-10-28T18:50:23Z",
        "lastEditedBy" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "tags" : [
        ]
      }
    ],
    "commit" : "d9f334683ee3d6db3ed2a9f303e1d7b6b76fa0a1",
    "line" : 62,
    "diffHunk" : "@@ -1,1 +336,340 @@\t\t\t\tcontinue\n\t\t\t}\n\t\t\tif labelSelector == nil || !labelSelector.Matches(labels.Set(node.Labels)) {\n\t\t\t\tcontinue\n\t\t\t}"
  },
  {
    "id" : "e14cac50-5725-4e4b-84c0-debaf1b9288e",
    "prId" : 87250,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/87250#pullrequestreview-347617175",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "72bdefd5-7ae2-49f7-be90-69563a980bb4",
        "parentId" : null,
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "If there are no other users, just remove `TolerationsTolerateTaintsWithFilter`.",
        "createdAt" : "2020-01-22T15:27:43Z",
        "updatedAt" : "2020-01-23T21:21:30Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      },
      {
        "id" : "1c135d3a-67d4-4b2b-afed-150ff71ee70f",
        "parentId" : "72bdefd5-7ae2-49f7-be90-69563a980bb4",
        "authorId" : "7f5d2b15-6910-4f61-9486-f3e1cd38bcdf",
        "body" : "`TolerationsTolerateTaintsWithFilter` is used in the daemon controller",
        "createdAt" : "2020-01-23T20:10:41Z",
        "updatedAt" : "2020-01-23T21:21:30Z",
        "lastEditedBy" : "7f5d2b15-6910-4f61-9486-f3e1cd38bcdf",
        "tags" : [
        ]
      },
      {
        "id" : "892d8e91-1802-48a6-af0f-eb426ec1dfe0",
        "parentId" : "72bdefd5-7ae2-49f7-be90-69563a980bb4",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Please make `TolerationsTolerateTaintsWithFilter` call this function and add a comment saying it's deprecated and to call this instead.",
        "createdAt" : "2020-01-23T20:48:38Z",
        "updatedAt" : "2020-01-23T21:21:30Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "7a132fe3-8d1c-4026-9a0b-a44fc7005618",
        "parentId" : "72bdefd5-7ae2-49f7-be90-69563a980bb4",
        "authorId" : "7f5d2b15-6910-4f61-9486-f3e1cd38bcdf",
        "body" : "updated",
        "createdAt" : "2020-01-23T21:23:59Z",
        "updatedAt" : "2020-01-23T21:24:00Z",
        "lastEditedBy" : "7f5d2b15-6910-4f61-9486-f3e1cd38bcdf",
        "tags" : [
        ]
      }
    ],
    "commit" : "22bd26fefb9e5f66cfd39ac8feed87e2c542ada7",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +402,406 @@}\n\n// FindMatchingUntoleratedTaint checks if the given tolerations tolerates\n// all the filtered taints, and returns the first taint without a toleration\nfunc FindMatchingUntoleratedTaint(taints []v1.Taint, tolerations []v1.Toleration, inclusionFilter taintsFilterFunc) (v1.Taint, bool) {"
  },
  {
    "id" : "6bd38ead-b9a5-4bf6-a907-d8024b83fe07",
    "prId" : 87250,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/87250#pullrequestreview-347771868",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c6231ce0-6faf-4c16-8b34-df4921b851af",
        "parentId" : null,
        "authorId" : "41c25afd-5561-4611-9b3a-7df68582aa10",
        "body" : "s/tolerates/tolerate/",
        "createdAt" : "2020-01-24T06:41:38Z",
        "updatedAt" : "2020-01-24T06:46:52Z",
        "lastEditedBy" : "41c25afd-5561-4611-9b3a-7df68582aa10",
        "tags" : [
        ]
      }
    ],
    "commit" : "22bd26fefb9e5f66cfd39ac8feed87e2c542ada7",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +402,406 @@}\n\n// FindMatchingUntoleratedTaint checks if the given tolerations tolerates\n// all the filtered taints, and returns the first taint without a toleration\nfunc FindMatchingUntoleratedTaint(taints []v1.Taint, tolerations []v1.Toleration, inclusionFilter taintsFilterFunc) (v1.Taint, bool) {"
  },
  {
    "id" : "a23fe355-fcf8-4dae-a570-287c400864a4",
    "prId" : 87250,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/87250#pullrequestreview-347771868",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8324f320-514a-4fc1-98a2-ab7f4e5dc6e4",
        "parentId" : null,
        "authorId" : "41c25afd-5561-4611-9b3a-7df68582aa10",
        "body" : "s/without a toleration/without any tolerations/",
        "createdAt" : "2020-01-24T06:42:01Z",
        "updatedAt" : "2020-01-24T06:46:52Z",
        "lastEditedBy" : "41c25afd-5561-4611-9b3a-7df68582aa10",
        "tags" : [
        ]
      }
    ],
    "commit" : "22bd26fefb9e5f66cfd39ac8feed87e2c542ada7",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +403,407 @@\n// FindMatchingUntoleratedTaint checks if the given tolerations tolerates\n// all the filtered taints, and returns the first taint without a toleration\nfunc FindMatchingUntoleratedTaint(taints []v1.Taint, tolerations []v1.Toleration, inclusionFilter taintsFilterFunc) (v1.Taint, bool) {\n\tfilteredTaints := getFilteredTaints(taints, inclusionFilter)"
  },
  {
    "id" : "7cec09ca-8bb4-4462-a95a-324fd17e10bc",
    "prId" : 84154,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/84154#pullrequestreview-346337767",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ce40cbaf-ddc0-4da0-aaea-3536c04c570f",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "if size does not match the documented requirements, I would have expected an error... it's unclear what is returned in error cases or how a caller would know they had provided invalid data",
        "createdAt" : "2020-01-21T16:19:38Z",
        "updatedAt" : "2020-01-28T00:36:02Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "77e3de4c-aa7c-4a28-81c0-3165c7cd609f",
        "parentId" : "ce40cbaf-ddc0-4da0-aaea-3536c04c570f",
        "authorId" : "a0c0ef99-066f-4748-b8ee-ff72176004ec",
        "body" : "error handling will be updated about size requirements.",
        "createdAt" : "2020-01-22T02:20:52Z",
        "updatedAt" : "2020-01-28T00:36:02Z",
        "lastEditedBy" : "a0c0ef99-066f-4748-b8ee-ff72176004ec",
        "tags" : [
        ]
      },
      {
        "id" : "1de85065-9411-44af-ae6b-1d0345ffb3e5",
        "parentId" : "ce40cbaf-ddc0-4da0-aaea-3536c04c570f",
        "authorId" : "a0c0ef99-066f-4748-b8ee-ff72176004ec",
        "body" : "updated it.",
        "createdAt" : "2020-01-22T04:17:15Z",
        "updatedAt" : "2020-01-28T00:36:02Z",
        "lastEditedBy" : "a0c0ef99-066f-4748-b8ee-ff72176004ec",
        "tags" : [
        ]
      }
    ],
    "commit" : "463442aa2907268f18c488ecac7ff6ab7ed48c2d",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +87,91 @@\n// HugePageUnitSizeFromByteSize returns hugepage size has the format.\n// `size` must be guaranteed to divisible into the largest units that can be expressed.\n// <size><unit-prefix>B (1024 = \"1KB\", 1048576 = \"1MB\", etc).\nfunc HugePageUnitSizeFromByteSize(size int64) (string, error) {"
  },
  {
    "id" : "f244ff5e-a763-4014-83ca-0b72e6bbe9b7",
    "prId" : 84051,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/84051#pullrequestreview-304621550",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "05cc1a1d-72d5-47fa-979d-494a0ad6d4b3",
        "parentId" : null,
        "authorId" : "b7c04289-77b0-4d05-90b7-3bde23e2b0bf",
        "body" : "Hmm. I feel like this naming scheme would result in some ambiguity, since this code will not work, even tho my intuition is that is should\r\n\r\n```go\r\nmedium := \"HugePages\"\r\nif isHugePageMedium := IsHugePageMedium(medium); isHugePageMedium {\r\n    size, err := HugePageSizeFromMedium(medium)\r\n    // err will not be nil here\r\n    [...]\r\n}\r\n\r\n```",
        "createdAt" : "2019-10-17T15:13:58Z",
        "updatedAt" : "2020-02-20T11:55:48Z",
        "lastEditedBy" : "b7c04289-77b0-4d05-90b7-3bde23e2b0bf",
        "tags" : [
        ]
      },
      {
        "id" : "9640d4ad-5e48-4a70-ab5e-6964d757646e",
        "parentId" : "05cc1a1d-72d5-47fa-979d-494a0ad6d4b3",
        "authorId" : "f46daf11-7000-4650-ae5b-dd25c29b4e29",
        "body" : "@odinuge  I don't see any ambiguity here. If the medium is valid huge page medium it doesn't mean that we can get huge page size from it.",
        "createdAt" : "2019-10-18T08:28:09Z",
        "updatedAt" : "2020-02-20T11:55:48Z",
        "lastEditedBy" : "f46daf11-7000-4650-ae5b-dd25c29b4e29",
        "tags" : [
        ]
      },
      {
        "id" : "b1805b4b-88eb-40f1-a38e-e47a6656ef47",
        "parentId" : "05cc1a1d-72d5-47fa-979d-494a0ad6d4b3",
        "authorId" : "b7c04289-77b0-4d05-90b7-3bde23e2b0bf",
        "body" : "Hmm.\r\n\r\nGuess we can add another check `if medium == v1.StorageMediumHugePages` and return an error saying that we cannot get the size from it, since it will now fail on `ParseQuantity`. That way we make it explicit that it isn't supported.\r\n\r\n",
        "createdAt" : "2019-10-18T14:46:27Z",
        "updatedAt" : "2020-02-20T11:55:48Z",
        "lastEditedBy" : "b7c04289-77b0-4d05-90b7-3bde23e2b0bf",
        "tags" : [
        ]
      },
      {
        "id" : "73ed4f6e-8f3f-4437-b99a-1a0b321b58fa",
        "parentId" : "05cc1a1d-72d5-47fa-979d-494a0ad6d4b3",
        "authorId" : "f46daf11-7000-4650-ae5b-dd25c29b4e29",
        "body" : "yes, that makes sense to me. will do.",
        "createdAt" : "2019-10-19T07:59:55Z",
        "updatedAt" : "2020-02-20T11:55:48Z",
        "lastEditedBy" : "f46daf11-7000-4650-ae5b-dd25c29b4e29",
        "tags" : [
        ]
      },
      {
        "id" : "7697f3bc-0c2a-4f9a-b430-f5080c02db0f",
        "parentId" : "05cc1a1d-72d5-47fa-979d-494a0ad6d4b3",
        "authorId" : "f46daf11-7000-4650-ae5b-dd25c29b4e29",
        "body" : "done",
        "createdAt" : "2019-10-21T14:50:46Z",
        "updatedAt" : "2020-02-20T11:55:48Z",
        "lastEditedBy" : "f46daf11-7000-4650-ae5b-dd25c29b4e29",
        "tags" : [
        ]
      }
    ],
    "commit" : "03ecc20b19972ecb4825ecf4ce6868bc2a45f3c0",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +114,118 @@// HugePageSizeFromMedium returns the page size for the specified huge page medium.\n// If the specified input is not a valid huge page medium an error is returned.\nfunc HugePageSizeFromMedium(medium v1.StorageMedium) (resource.Quantity, error) {\n\tif !IsHugePageMedium(medium) {\n\t\treturn resource.Quantity{}, fmt.Errorf(\"medium: %s is not a hugepage medium\", medium)"
  },
  {
    "id" : "a09bb8ca-b6a8-497a-8f16-834ae8d0cb4e",
    "prId" : 84051,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/84051#pullrequestreview-333259700",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b94d16c1-0feb-418d-8512-6fa5a00e5605",
        "parentId" : null,
        "authorId" : "b15151c4-81af-487d-8c8f-a4f39690bd34",
        "body" : "as far as I see we call this method only once from https://github.com/kubernetes/kubernetes/pull/84051/files#diff-f0ae446531cafbb91af10ff6bf2ade4eR321, and we call it only in case when `medium != v1.StorageMediumHugePages`, so do we really need this check here?",
        "createdAt" : "2019-12-16T09:51:54Z",
        "updatedAt" : "2020-02-20T11:55:48Z",
        "lastEditedBy" : "b15151c4-81af-487d-8c8f-a4f39690bd34",
        "tags" : [
        ]
      },
      {
        "id" : "35dbe6c0-f7e3-4a9d-95b5-77e90e351f92",
        "parentId" : "b94d16c1-0feb-418d-8512-6fa5a00e5605",
        "authorId" : "f46daf11-7000-4650-ae5b-dd25c29b4e29",
        "body" : "I think we need it for safety. We never know how this function will be called in future, so it makes sense to be a little bit defensive here.",
        "createdAt" : "2019-12-17T13:09:10Z",
        "updatedAt" : "2020-02-20T11:55:48Z",
        "lastEditedBy" : "f46daf11-7000-4650-ae5b-dd25c29b4e29",
        "tags" : [
        ]
      }
    ],
    "commit" : "03ecc20b19972ecb4825ecf4ce6868bc2a45f3c0",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +118,122 @@\t\treturn resource.Quantity{}, fmt.Errorf(\"medium: %s is not a hugepage medium\", medium)\n\t}\n\tif medium == v1.StorageMediumHugePages {\n\t\treturn resource.Quantity{}, fmt.Errorf(\"medium: %s doesn't have size information\", medium)\n\t}"
  },
  {
    "id" : "2438930c-b1aa-4a49-bede-cb28f8b73caf",
    "prId" : 84051,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/84051#pullrequestreview-333232078",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cdecbeca-514b-4061-9e1b-ac7e2b736ec1",
        "parentId" : null,
        "authorId" : "b15151c4-81af-487d-8c8f-a4f39690bd34",
        "body" : "It can be nice to have a unittest for this method.",
        "createdAt" : "2019-12-16T09:52:37Z",
        "updatedAt" : "2020-02-20T11:55:48Z",
        "lastEditedBy" : "b15151c4-81af-487d-8c8f-a4f39690bd34",
        "tags" : [
        ]
      },
      {
        "id" : "2fc6af33-fb39-4710-8232-86f292543f3f",
        "parentId" : "cdecbeca-514b-4061-9e1b-ac7e2b736ec1",
        "authorId" : "f46daf11-7000-4650-ae5b-dd25c29b4e29",
        "body" : "done.",
        "createdAt" : "2019-12-17T12:16:46Z",
        "updatedAt" : "2020-02-20T11:55:48Z",
        "lastEditedBy" : "f46daf11-7000-4650-ae5b-dd25c29b4e29",
        "tags" : [
        ]
      }
    ],
    "commit" : "03ecc20b19972ecb4825ecf4ce6868bc2a45f3c0",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +114,118 @@// HugePageSizeFromMedium returns the page size for the specified huge page medium.\n// If the specified input is not a valid huge page medium an error is returned.\nfunc HugePageSizeFromMedium(medium v1.StorageMedium) (resource.Quantity, error) {\n\tif !IsHugePageMedium(medium) {\n\t\treturn resource.Quantity{}, fmt.Errorf(\"medium: %s is not a hugepage medium\", medium)"
  }
]