[
  {
    "id" : "64e2ccc1-69f1-4234-9068-bd5c55011b64",
    "prId" : 18925,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c9d4d9ed-38a6-43b6-b47f-7cf73248bac5",
        "parentId" : null,
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "EnableVersion just marks it as enabled. The actual enabling is done by addVersionsToScheme() method below, right?\nHow about renaming EnableVersion to AddEnabledVersion()?\n\nAlso, I will suggest calling addVersionsToScheme() first and then call EnableVersion for readability.\n",
        "createdAt" : "2015-12-21T22:20:22Z",
        "updatedAt" : "2015-12-24T07:21:46Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      },
      {
        "id" : "92c3917c-abc1-475c-b8bd-8c563e812c89",
        "parentId" : "c9d4d9ed-38a6-43b6-b47f-7cf73248bac5",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "> EnableVersion just marks it as enabled. The actual enabling is done by addVersionsToScheme() method below, right? How about renaming EnableVersion to AddEnabledVersion()?\n\nThat's what I named the function at first, but then I think AddEnabledVersion() can be interpreted as \"enable this version\" so I go for the short name. Anyway, since you also think AddEnabledVersion is better, I'll change it back. Glad our thoughts align.\n",
        "createdAt" : "2015-12-21T23:32:15Z",
        "updatedAt" : "2015-12-24T07:21:46Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "ad484c79f7accd94a4f4877e175d7a7c5dad33e0",
    "line" : null,
    "diffHunk" : "@@ -1,1 +55,59 @@\t\treturn\n\t}\n\tif err := registered.EnableVersions(externalVersions...); err != nil {\n\t\tglog.V(4).Infof(\"%v\", err)\n\t\treturn"
  },
  {
    "id" : "eb128c82-0adf-47e7-99c6-40d0e58c4ae6",
    "prId" : 18925,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "709a5248-230f-41bb-a998-4e4d39368418",
        "parentId" : null,
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "Comment on availableVersions (line 42) and not this line:\nThe ordering comment there is invalid now right?\n",
        "createdAt" : "2015-12-21T22:21:28Z",
        "updatedAt" : "2015-12-24T07:21:46Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      },
      {
        "id" : "224cb06b-32d9-4a18-8abf-b47015355377",
        "parentId" : "709a5248-230f-41bb-a998-4e4d39368418",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "It is still valid. @deads2k has another PR related to this, but IIRC that one also relies on the `availableVersions` to be in the correct order.\n",
        "createdAt" : "2015-12-22T00:56:23Z",
        "updatedAt" : "2015-12-24T07:21:46Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "ad484c79f7accd94a4f4877e175d7a7c5dad33e0",
    "line" : 3,
    "diffHunk" : "@@ -1,1 +42,46 @@var availableVersions = []unversioned.GroupVersion{v1beta1.SchemeGroupVersion}\n\nfunc init() {\n\tregistered.RegisterVersions(availableVersions...)\n"
  },
  {
    "id" : "d4b8e2da-ff68-4a25-9a22-c24f06a74064",
    "prId" : 18925,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d453514f-d6b1-460d-8491-3f28d19e944c",
        "parentId" : null,
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "line 64 to line 82 here is the code that really \"enables\" the versions. I guess we can move that into an enableVersions() method and call it here.\n",
        "createdAt" : "2015-12-21T22:30:31Z",
        "updatedAt" : "2015-12-24T07:21:46Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      }
    ],
    "commit" : "ad484c79f7accd94a4f4877e175d7a7c5dad33e0",
    "line" : null,
    "diffHunk" : "@@ -1,1 +68,72 @@// group.\nfunc enableVersions(externalVersions []unversioned.GroupVersion) error {\n\taddVersionsToScheme(externalVersions...)\n\tpreferredExternalVersion := externalVersions[0]\n"
  },
  {
    "id" : "b6a3dd8c-d91f-4f72-8b3a-bc42edfccdc5",
    "prId" : 18925,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ecfe7075-f6ba-4439-8d5e-9705f96d861b",
        "parentId" : null,
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "Based on all the comments below, the high level flow here should be:\n\n```\nfunc init() {\n  registered.RegisterVersion()\n  if (shouldEnableVersion()) {\n     enableVersion()\n     registered.AddEnabledVersion()\n  }\n}\n```\n\nThis should make the code easier to understand.\n",
        "createdAt" : "2015-12-21T22:42:49Z",
        "updatedAt" : "2015-12-24T07:21:46Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      }
    ],
    "commit" : "ad484c79f7accd94a4f4877e175d7a7c5dad33e0",
    "line" : null,
    "diffHunk" : "@@ -1,1 +45,49 @@\tregistered.RegisterVersions(availableVersions...)\n\n\texternalVersions := []unversioned.GroupVersion{}\n\tfor _, v := range availableVersions {\n\t\tif registered.IsAllowedVersion(v) {"
  },
  {
    "id" : "11d2650e-bffb-4b1a-ac96-3e4427e1e1c8",
    "prId" : 18925,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8428d3cd-cc1b-4d6f-9229-9a3cadfd2bbd",
        "parentId" : null,
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "As a separate issue (out of scope of this PR, I believe), all this code to enable the version should not be present here.\nThis code should belong with api machinery code and not with specific api code.\nSomeone writing a package for a new API group version should just call some genericApiMachinery.EnableVersion() and pass it the required params. the generic api machinery code should know that it needs to call latest.RegisterGroup and api.RegisterRESTMapper, not each api group version package.\n",
        "createdAt" : "2015-12-21T23:17:35Z",
        "updatedAt" : "2015-12-24T07:21:46Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      },
      {
        "id" : "c91a48f4-b564-485c-b99d-679dafa0094c",
        "parentId" : "8428d3cd-cc1b-4d6f-9229-9a3cadfd2bbd",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "Added a Todo.\n",
        "createdAt" : "2015-12-22T02:03:43Z",
        "updatedAt" : "2015-12-24T07:21:46Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "ad484c79f7accd94a4f4877e175d7a7c5dad33e0",
    "line" : null,
    "diffHunk" : "@@ -1,1 +71,75 @@\tpreferredExternalVersion := externalVersions[0]\n\n\tgroupMeta := latest.GroupMeta{\n\t\tGroupVersion:  preferredExternalVersion,\n\t\tGroupVersions: externalVersions,"
  }
]