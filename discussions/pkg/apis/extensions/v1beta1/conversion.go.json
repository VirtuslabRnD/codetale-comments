[
  {
    "id" : "10113965-f974-4699-9f02-416827086e7f",
    "prId" : 89778,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/89778#pullrequestreview-399415332",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f99fd5d9-1fe2-4164-8792-1a17b0ae5b71",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "first call autoConvert_v1beta1_IngressBackend_To_networking_IngressBackend to handle the ResourceBackend field",
        "createdAt" : "2020-04-23T19:37:56Z",
        "updatedAt" : "2020-05-22T15:58:09Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "2b091f60ca09d3d03923a26b7cd02fb3dc6c47e2",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +160,164 @@}\n\nfunc Convert_v1beta1_IngressBackend_To_networking_IngressBackend(in *extensionsv1beta1.IngressBackend, out *networking.IngressBackend, s conversion.Scope) error {\n\tif err := autoConvert_v1beta1_IngressBackend_To_networking_IngressBackend(in, out, s); err != nil {\n\t\treturn err"
  },
  {
    "id" : "b64f8c8e-ce22-43d0-b0b4-fb251b9f30cb",
    "prId" : 89778,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/89778#pullrequestreview-399415332",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "87f41087-5b67-4e8f-869a-4752b96d0aeb",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "1. call autoConvert_networking_IngressBackend_To_v1beta1_IngressBackend method first\r\n2. guard against a nil `in.Service` field (an ingress with a resource backend will have a nil service backend)\r\n3. convert the port to the correct intstr type:\r\n\r\n```go\r\nif len(in.Service.Port.Name) > 0 {\r\n  out.ServicePort = intstr.FromString(in.Service.Port.Name)\r\n} else {\r\n  out.ServicePort = intstr.FromInt(int(in.Service.Port.Number))\r\n}\r\n```",
        "createdAt" : "2020-04-23T19:44:46Z",
        "updatedAt" : "2020-05-22T15:58:09Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "2b091f60ca09d3d03923a26b7cd02fb3dc6c47e2",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +173,177 @@}\n\nfunc Convert_networking_IngressBackend_To_v1beta1_IngressBackend(in *networking.IngressBackend, out *extensionsv1beta1.IngressBackend, s conversion.Scope) error {\n\tif err := autoConvert_networking_IngressBackend_To_v1beta1_IngressBackend(in, out, s); err != nil {\n\t\treturn err"
  },
  {
    "id" : "5ba5536c-13c8-4712-8b20-3a7d45014d3c",
    "prId" : 47019,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/47019#pullrequestreview-51849307",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e5733149-46cb-49be-bf02-d6a1e2852286",
        "parentId" : null,
        "authorId" : "a5ac91f3-1cbc-4fd9-af85-741ee28dd9c8",
        "body" : "Golint naming: don't use underscores in Go names; func Convert_extensions_PodSecurityPolicySpec_To_v1beta1_PodSecurityPolicySpec should be ConvertExtensionsPodSecurityPolicySpecToV1beta1PodSecurityPolicySpec. [More info](http://golang.org/doc/effective_go.html#mixed-caps). <!-- golint -->",
        "createdAt" : "2017-07-24T18:01:20Z",
        "updatedAt" : "2017-07-24T18:01:21Z",
        "lastEditedBy" : "a5ac91f3-1cbc-4fd9-af85-741ee28dd9c8",
        "tags" : [
        ]
      }
    ],
    "commit" : "a5e4c6f6ed0d441d8fd17a18416556f7621eeb56",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +432,436 @@}\n\nfunc Convert_extensions_PodSecurityPolicySpec_To_v1beta1_PodSecurityPolicySpec(in *extensions.PodSecurityPolicySpec, out *extensionsv1beta1.PodSecurityPolicySpec, s conversion.Scope) error {\n\treturn autoConvert_extensions_PodSecurityPolicySpec_To_v1beta1_PodSecurityPolicySpec(in, out, s)\n}"
  },
  {
    "id" : "877736f2-b881-47e1-a561-a50e896c015f",
    "prId" : 22724,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7e3bab22-f9b1-45bf-be5d-438c770b2192",
        "parentId" : null,
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "Why do we need to copy the map in order to generate a string?\n",
        "createdAt" : "2016-03-09T03:31:33Z",
        "updatedAt" : "2016-03-10T01:55:29Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "544980e6-e004-491f-9794-1beede744ad9",
        "parentId" : "7e3bab22-f9b1-45bf-be5d-438c770b2192",
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "Or to create a LabelSelector, for that matter.\n",
        "createdAt" : "2016-03-09T03:32:37Z",
        "updatedAt" : "2016-03-10T01:55:29Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "7cd6952f-1e68-4b6a-bcd0-13565d231f3b",
        "parentId" : "7e3bab22-f9b1-45bf-be5d-438c770b2192",
        "authorId" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "body" : "It wasn't required for string generation. But I think we will need a copy for creating a `LabelSelector` because `in` is passed as a pointer. \n",
        "createdAt" : "2016-03-09T07:07:20Z",
        "updatedAt" : "2016-03-10T01:55:29Z",
        "lastEditedBy" : "f6905dc9-1980-4381-8220-a1c7ad8d5c82",
        "tags" : [
        ]
      }
    ],
    "commit" : "fe26381c9060980c06b5610f66741164cf140708",
    "line" : null,
    "diffHunk" : "@@ -1,1 +138,142 @@\t\tout.Selector = new(unversioned.LabelSelector)\n\t\tselector := make(map[string]string)\n\t\tfor key, val := range in.Selector {\n\t\t\tselector[key] = val\n\t\t}"
  },
  {
    "id" : "6012c3b5-e02c-44b6-ba6b-6fb9a3e4e751",
    "prId" : 21776,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "371eebad-8559-439d-a0c1-440e8bf66d22",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "`else {\n  out.AutoSelector = nil\n}`\n",
        "createdAt" : "2016-02-24T00:04:01Z",
        "updatedAt" : "2016-02-25T17:28:20Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "095a85e76ec8a23b8e597a4762488eef3208c278",
    "line" : null,
    "diffHunk" : "@@ -1,1 +324,328 @@\t} else {\n\t\tout.AutoSelector = nil\n\t}\n\t// END non-standard conversion\n"
  },
  {
    "id" : "a68b4fd3-d78e-4a92-9418-4053a1f0c039",
    "prId" : 21776,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f36b39d1-da16-4139-b123-a3248e0a1d3d",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Same comments\n",
        "createdAt" : "2016-02-24T00:04:20Z",
        "updatedAt" : "2016-02-25T17:28:20Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "44525a86-873e-402d-a620-a89eb7bd8fa0",
        "parentId" : "f36b39d1-da16-4139-b123-a3248e0a1d3d",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "It's traditional to write a test for custom conversion functions.\n",
        "createdAt" : "2016-02-24T00:05:15Z",
        "updatedAt" : "2016-02-25T17:28:20Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "095a85e76ec8a23b8e597a4762488eef3208c278",
    "line" : null,
    "diffHunk" : "@@ -1,1 +376,380 @@\t} else {\n\t\tout.ManualSelector = nil\n\t}\n\t// END non-standard conversion\n"
  }
]