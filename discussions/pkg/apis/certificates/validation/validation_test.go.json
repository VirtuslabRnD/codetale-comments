[
  {
    "id" : "b01bd96e-8f8e-4829-98ce-5e1f6640ed29",
    "prId" : 86476,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/86476#pullrequestreview-356200188",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1ea6c4d1-3a70-4c36-95a9-08c125a1bc0f",
        "parentId" : null,
        "authorId" : "e58080d6-2177-419f-a546-b51075d7bcb8",
        "body" : "See earlier comment, but we def need some update tests as well.",
        "createdAt" : "2020-02-06T00:35:20Z",
        "updatedAt" : "2020-02-27T10:18:17Z",
        "lastEditedBy" : "e58080d6-2177-419f-a546-b51075d7bcb8",
        "tags" : [
        ]
      },
      {
        "id" : "dda04de8-e267-4943-92a4-f2622ae1650a",
        "parentId" : "1ea6c4d1-3a70-4c36-95a9-08c125a1bc0f",
        "authorId" : "c5a78ad1-2727-48a6-8217-285a102b94de",
        "body" : "What should those update tests cover? We don't perform validation on Update as the registry already nils out changes",
        "createdAt" : "2020-02-07T18:01:43Z",
        "updatedAt" : "2020-02-27T10:18:17Z",
        "lastEditedBy" : "c5a78ad1-2727-48a6-8217-285a102b94de",
        "tags" : [
        ]
      },
      {
        "id" : "277bccd7-9c9a-461c-9d4d-2f0713c94a2b",
        "parentId" : "1ea6c4d1-3a70-4c36-95a9-08c125a1bc0f",
        "authorId" : "e58080d6-2177-419f-a546-b51075d7bcb8",
        "body" : "I think we can ignore this per the defaulting on read thread.",
        "createdAt" : "2020-02-10T19:25:31Z",
        "updatedAt" : "2020-02-27T10:18:17Z",
        "lastEditedBy" : "e58080d6-2177-419f-a546-b51075d7bcb8",
        "tags" : [
        ]
      }
    ],
    "commit" : "a983356caa9876079eafc5e8dd7806473022e958",
    "line" : 264,
    "diffHunk" : "@@ -1,1 +262,266 @@\tfor name, test := range tests {\n\t\tt.Run(name, func(t *testing.T) {\n\t\t\tel := ValidateCertificateSigningRequest(&test.csr)\n\t\t\tif !reflect.DeepEqual(el, test.errs) {\n\t\t\t\tt.Errorf(\"returned and expected errors did not match - expected %v but got %v\", test.errs.ToAggregate(), el.ToAggregate())"
  },
  {
    "id" : "9ad53dac-d487-4c5c-b7c4-ad0dc8d9d805",
    "prId" : 86476,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/86476#pullrequestreview-354096294",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7c4f5c6a-039a-48c3-8f85-b8f37a529b76",
        "parentId" : null,
        "authorId" : "e58080d6-2177-419f-a546-b51075d7bcb8",
        "body" : "While I think this is fine, I kind of like to compare the `string` output of the errors because that is the actual error message the user will see.  i.e. if you do a `struct` level comparison, you will not notice if your error message dumps out like a memory address or something similar.",
        "createdAt" : "2020-02-06T00:37:21Z",
        "updatedAt" : "2020-02-27T10:18:17Z",
        "lastEditedBy" : "e58080d6-2177-419f-a546-b51075d7bcb8",
        "tags" : [
        ]
      }
    ],
    "commit" : "a983356caa9876079eafc5e8dd7806473022e958",
    "line" : 61,
    "diffHunk" : "@@ -1,1 +59,63 @@\t\t\t\t},\n\t\t\t},\n\t\t\terrs: field.ErrorList{\n\t\t\t\tfield.Invalid(specPath.Child(\"request\"), []byte(nil), \"PEM block type must be CERTIFICATE REQUEST\"),\n\t\t\t},"
  },
  {
    "id" : "6a4e9b33-f7f3-4c91-af17-30c68554c204",
    "prId" : 86476,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/86476#pullrequestreview-354096294",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5cac9b18-19b6-4282-8e16-e81070934b80",
        "parentId" : null,
        "authorId" : "e58080d6-2177-419f-a546-b51075d7bcb8",
        "body" : "Add a test case which has dots in the path?",
        "createdAt" : "2020-02-06T00:39:23Z",
        "updatedAt" : "2020-02-27T10:18:17Z",
        "lastEditedBy" : "e58080d6-2177-419f-a546-b51075d7bcb8",
        "tags" : [
        ]
      }
    ],
    "commit" : "a983356caa9876079eafc5e8dd7806473022e958",
    "line" : 180,
    "diffHunk" : "@@ -1,1 +178,182 @@\t\t\t},\n\t\t},\n\t\t\"signerName path component contains no '.' but is valid\": {\n\t\t\tcsr: capi.CertificateSigningRequest{\n\t\t\t\tObjectMeta: validObjectMeta,"
  }
]