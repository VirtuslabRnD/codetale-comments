[
  {
    "id" : "6ee0c5e1-2efa-4094-85ee-b34c9f990b3f",
    "prId" : 90191,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/90191#pullrequestreview-419245853",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "535e4979-92b3-4a4d-afc8-a237b8093d39",
        "parentId" : null,
        "authorId" : "c5a78ad1-2727-48a6-8217-285a102b94de",
        "body" : "Why would we disallow setting the certificate altogether? I see `allowResettingCertificate` below, which seems sufficient to cover that?",
        "createdAt" : "2020-04-17T16:15:28Z",
        "updatedAt" : "2020-05-28T20:53:43Z",
        "lastEditedBy" : "c5a78ad1-2727-48a6-8217-285a102b94de",
        "tags" : [
        ]
      },
      {
        "id" : "5146b314-4f32-47fc-9015-1d5b9ae4247e",
        "parentId" : "535e4979-92b3-4a4d-afc8-a237b8093d39",
        "authorId" : "c5a78ad1-2727-48a6-8217-285a102b94de",
        "body" : "Ah, I guess this is so one validator structure can be used for all of 'status', 'approval' and the root resource?",
        "createdAt" : "2020-05-05T15:20:39Z",
        "updatedAt" : "2020-05-28T20:53:43Z",
        "lastEditedBy" : "c5a78ad1-2727-48a6-8217-285a102b94de",
        "tags" : [
        ]
      },
      {
        "id" : "7d7b727e-05db-48e4-bfa0-c6127356f07d",
        "parentId" : "535e4979-92b3-4a4d-afc8-a237b8093d39",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "right... when we call from ValidateStatusUpdate, we allow setting the certificate. When we call from ValidateApprovalUpdate, we don't.",
        "createdAt" : "2020-05-27T14:08:05Z",
        "updatedAt" : "2020-05-28T20:53:43Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "7049149181189eae304246cc49de78d08eef4f80",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +55,59 @@\tallowSettingApprovalConditions bool\n\t// allow populating status.certificate\n\tallowSettingCertificate bool\n\n\t// allow Approved and Denied conditions to be exist."
  },
  {
    "id" : "ae9fb176-24f9-4dbe-87bd-a2a3cdd3adfa",
    "prId" : 90191,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/90191#pullrequestreview-395582258",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4e458d7c-adb6-4647-a1d7-3b7ae284c566",
        "parentId" : null,
        "authorId" : "c5a78ad1-2727-48a6-8217-285a102b94de",
        "body" : "github doesn't have a wide enough pallet of emojis for me to properly express my reaction here",
        "createdAt" : "2020-05-05T15:22:58Z",
        "updatedAt" : "2020-05-28T20:53:43Z",
        "lastEditedBy" : "c5a78ad1-2727-48a6-8217-285a102b94de",
        "tags" : [
        ]
      }
    ],
    "commit" : "7049149181189eae304246cc49de78d08eef4f80",
    "line" : 323,
    "diffHunk" : "@@ -1,1 +417,421 @@\tswitch {\n\tcase version == certificatesv1beta1.SchemeGroupVersion:\n\t\treturn true // compatibility with v1beta1\n\tcase oldCSR != nil && hasDuplicateConditionTypes(oldCSR):\n\t\treturn true // compatibility with existing data"
  },
  {
    "id" : "c53f26af-ac76-4a03-ab9d-3a84a3f3014b",
    "prId" : 90191,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/90191#pullrequestreview-395582258",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "def0112d-6111-4f3d-8d2c-a04c1774fb63",
        "parentId" : null,
        "authorId" : "c5a78ad1-2727-48a6-8217-285a102b94de",
        "body" : "ðŸ¤¦",
        "createdAt" : "2020-05-05T15:24:13Z",
        "updatedAt" : "2020-05-28T20:53:43Z",
        "lastEditedBy" : "c5a78ad1-2727-48a6-8217-285a102b94de",
        "tags" : [
        ]
      }
    ],
    "commit" : "7049149181189eae304246cc49de78d08eef4f80",
    "line" : 344,
    "diffHunk" : "@@ -1,1 +438,442 @@\tswitch {\n\tcase version == certificatesv1beta1.SchemeGroupVersion:\n\t\treturn true // compatibility with v1beta1\n\tcase oldCSR != nil && hasEmptyConditionType(oldCSR):\n\t\treturn true // compatibility with existing data"
  },
  {
    "id" : "3441c263-b30b-4d32-a623-d13db91ca8f1",
    "prId" : 86476,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/86476#pullrequestreview-354447918",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0c5b0fa3-fe9f-4d17-be83-6d9ee723e201",
        "parentId" : null,
        "authorId" : "e58080d6-2177-419f-a546-b51075d7bcb8",
        "body" : "nit: random space?",
        "createdAt" : "2020-02-05T22:57:04Z",
        "updatedAt" : "2020-02-27T10:18:17Z",
        "lastEditedBy" : "e58080d6-2177-419f-a546-b51075d7bcb8",
        "tags" : [
        ]
      },
      {
        "id" : "e182dbd6-5e90-425e-8b45-592bd193f8d7",
        "parentId" : "0c5b0fa3-fe9f-4d17-be83-6d9ee723e201",
        "authorId" : "c5a78ad1-2727-48a6-8217-285a102b94de",
        "body" : "This space is added by my IDE ðŸ˜¬ it sees the staging repos as external repositories",
        "createdAt" : "2020-02-06T13:29:34Z",
        "updatedAt" : "2020-02-27T10:18:17Z",
        "lastEditedBy" : "c5a78ad1-2727-48a6-8217-285a102b94de",
        "tags" : [
        ]
      }
    ],
    "commit" : "a983356caa9876079eafc5e8dd7806473022e958",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +23,27 @@\tutilvalidation \"k8s.io/apimachinery/pkg/util/validation\"\n\t\"k8s.io/apimachinery/pkg/util/validation/field\"\n\n\t\"k8s.io/kubernetes/pkg/apis/certificates\"\n\tapivalidation \"k8s.io/kubernetes/pkg/apis/core/validation\""
  },
  {
    "id" : "1b3ea36e-26b7-4af6-a2f7-6e293b1c9d02",
    "prId" : 86476,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/86476#pullrequestreview-358455620",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0b8ee53a-9e46-4e2f-a833-8b5944110e85",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "nit: this comment is no longer accurate",
        "createdAt" : "2020-02-13T18:35:11Z",
        "updatedAt" : "2020-02-27T10:18:17Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "a983356caa9876079eafc5e8dd7806473022e958",
    "line" : 47,
    "diffHunk" : "@@ -1,1 +81,85 @@\tsegments := strings.Split(signerName, \"/\")\n\t// validate that there is one '/' in the signerName.\n\t// we do this after validating the domain segment to provide more info to the user.\n\tif len(segments) != 2 {\n\t\tel = append(el, field.Invalid(fldPath, signerName, \"must be a fully qualified domain and path of the form 'example.com/signer-name'\"))"
  }
]