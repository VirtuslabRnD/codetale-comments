[
  {
    "id" : "84c7c56a-1859-4a16-b9ef-c68308f0b437",
    "prId" : 99494,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/99494#pullrequestreview-693358173",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7ca20f7a-fdce-493c-ba1f-fb4511f2e8a5",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "indicate the beta status and the relevant feature gate (and update docs for the v1 and v1beta1 types)",
        "createdAt" : "2021-06-26T21:48:52Z",
        "updatedAt" : "2021-06-26T22:14:37Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "8d49502fcd498777e84c8b4da5141ffd2c25b0f0",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +87,91 @@\t//\n\t// The minimum valid value for expirationSeconds is 600, i.e. 10 minutes.\n\t//\n\t// As of v1.22, this field is beta and is controlled via the CSRDuration feature gate.\n\t//"
  },
  {
    "id" : "f08b14ee-41f8-4cc8-9257-ae7fe47c91ae",
    "prId" : 99444,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/99444#pullrequestreview-600241915",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f5fcfa99-46f8-4aad-b878-7dd02574157c",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "this is already documented on the v1 struct:\r\n\r\nhttps://github.com/kubernetes/kubernetes/blob/184c6d348c80c1f529b742c8959677817689a182/staging/src/k8s.io/api/certificates/v1/types.go#L64-L85\r\n\r\nI'd suggest copying the documentation from there if we want to also update this field's doc",
        "createdAt" : "2021-02-27T21:20:58Z",
        "updatedAt" : "2021-02-28T10:24:00Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "0af2ab46-6e26-4738-b4b4-b935430fd1ca",
        "parentId" : "f5fcfa99-46f8-4aad-b878-7dd02574157c",
        "authorId" : "000895b1-a34f-4e0b-8da3-6f818dfe1aab",
        "body" : "Thanks. I will revise it",
        "createdAt" : "2021-02-28T10:10:11Z",
        "updatedAt" : "2021-02-28T10:24:00Z",
        "lastEditedBy" : "000895b1-a34f-4e0b-8da3-6f818dfe1aab",
        "tags" : [
        ]
      }
    ],
    "commit" : "cb4139cddeccc7ea99c1e5fb7dfd2486aaf8bd46",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +67,71 @@\t//  5. Expiration/certificate lifetime: whether it is fixed by the signer, configurable by the admin.\n\t//  6. Whether or not requests for CA certificates are allowed.\n\tSignerName string\n\n\t// usages specifies a set of usage contexts the key will be"
  },
  {
    "id" : "729e09d7-31fe-4745-a636-eedadc40b2dc",
    "prId" : 90191,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/90191#pullrequestreview-419245261",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d3950d33-5790-4e32-93e1-f4c4d93272c5",
        "parentId" : null,
        "authorId" : "c5a78ad1-2727-48a6-8217-285a102b94de",
        "body" : "nit: are these meant to be defined in the internal package? On the original PR it was suggested to only define them in external versions",
        "createdAt" : "2020-04-17T16:03:34Z",
        "updatedAt" : "2020-05-28T20:53:43Z",
        "lastEditedBy" : "c5a78ad1-2727-48a6-8217-285a102b94de",
        "tags" : [
        ]
      },
      {
        "id" : "a8080b3a-dd05-4f45-b9d0-449feaf35449",
        "parentId" : "d3950d33-5790-4e32-93e1-f4c4d93272c5",
        "authorId" : "c5a78ad1-2727-48a6-8217-285a102b94de",
        "body" : "I'd have thought they only need defining here if they are actually used as part of conversion? But you know better than I do with this stuff ðŸ˜„ ",
        "createdAt" : "2020-05-05T15:18:59Z",
        "updatedAt" : "2020-05-28T20:53:43Z",
        "lastEditedBy" : "c5a78ad1-2727-48a6-8217-285a102b94de",
        "tags" : [
        ]
      },
      {
        "id" : "3324e3a5-ff1e-4ccf-827c-297ce74fdbb7",
        "parentId" : "d3950d33-5790-4e32-93e1-f4c4d93272c5",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "yes, validation for v1 prevents creation of CSRs with legacy unknown signer and uses the internal API",
        "createdAt" : "2020-05-27T14:07:29Z",
        "updatedAt" : "2020-05-28T20:53:43Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "7049149181189eae304246cc49de78d08eef4f80",
    "line" : 37,
    "diffHunk" : "@@ -1,1 +97,101 @@\tLegacyUnknownSignerName = \"kubernetes.io/legacy-unknown\"\n)\n\n// ExtraValue masks the value so protobuf can generate\ntype ExtraValue []string"
  },
  {
    "id" : "9d920beb-cdf3-4c24-bb67-8ad600d6f07b",
    "prId" : 90191,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/90191#pullrequestreview-420274479",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "09ecd678-5752-42df-966b-be48dac0b7d9",
        "parentId" : null,
        "authorId" : "c5a78ad1-2727-48a6-8217-285a102b94de",
        "body" : "A nit, and one we will struggle to resolve unless we define a `type SignerName string`, but this won't be surfaced in any documentation anywhere from what I understand...",
        "createdAt" : "2020-05-28T14:30:45Z",
        "updatedAt" : "2020-05-28T20:53:43Z",
        "lastEditedBy" : "c5a78ad1-2727-48a6-8217-285a102b94de",
        "tags" : [
        ]
      },
      {
        "id" : "c9dfbaf8-dadc-41bb-9673-bf0886a04112",
        "parentId" : "09ecd678-5752-42df-966b-be48dac0b7d9",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "they show up in godoc, see https://godoc.org/k8s.io/api/certificates/v1beta1#pkg-constants\r\n\r\n",
        "createdAt" : "2020-05-28T16:12:43Z",
        "updatedAt" : "2020-05-28T20:53:43Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "7049149181189eae304246cc49de78d08eef4f80",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +78,82 @@// Built in signerName values that are honoured by kube-controller-manager.\n// None of these usages are related to ServiceAccount token secrets\n// `.data[ca.crt]` in any way.\nconst (\n\t// Signs certificates that will be honored as client-certs by the"
  },
  {
    "id" : "f55fba60-4fe7-47ad-be21-8731146afa2c",
    "prId" : 25562,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "57f5cfd3-58ac-40fb-97f7-c6c6c186a967",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "this is the first place we are adding a \"requesting/creating user\" persistence to the API... do @erictune or @smarterclayton have comments on doing this as a one-off here?\n",
        "createdAt" : "2016-05-19T03:51:44Z",
        "updatedAt" : "2016-06-28T19:06:48Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "9459d9a0-b4c6-402d-b753-c55b50293c1e",
        "parentId" : "57f5cfd3-58ac-40fb-97f7-c6c6c186a967",
        "authorId" : "dabe34ec-22c8-4948-a579-d661cdc42761",
        "body" : "cc @deads2k who requested this and @mikedanese who suggested its current form.\n",
        "createdAt" : "2016-05-19T18:12:49Z",
        "updatedAt" : "2016-06-28T19:06:48Z",
        "lastEditedBy" : "dabe34ec-22c8-4948-a579-d661cdc42761",
        "tags" : [
        ]
      }
    ],
    "commit" : "c9c6fff269685a23710bf6ff22cf641df06367de",
    "line" : null,
    "diffHunk" : "@@ -1,1 +45,49 @@\t// Information about the requesting user (if relevant)\n\t// See user.Info interface for details\n\tUsername string   `json:\"username,omitempty\"`\n\tUID      string   `json:\"uid,omitempty\"`\n\tGroups   []string `json:\"groups,omitempty\"`"
  },
  {
    "id" : "f6f432a7-7516-43fb-b3cc-c4fd65ddfa6d",
    "prId" : 25562,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1beafdd5-41fb-4b7b-b75c-43ea961acb0e",
        "parentId" : null,
        "authorId" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "body" : "Why is there a CSR, and then all the data of the CSR is duplicated below, except for the public key.  Why not either: (1) just send a bare CSR, or (2) don't send a CSR at all, send the information in separate fields of the request. \n",
        "createdAt" : "2016-05-20T17:46:30Z",
        "updatedAt" : "2016-06-28T19:06:48Z",
        "lastEditedBy" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "tags" : [
        ]
      },
      {
        "id" : "4fb0c7be-d249-4e11-aa8b-fecaa0d7fff2",
        "parentId" : "1beafdd5-41fb-4b7b-b75c-43ea961acb0e",
        "authorId" : "dabe34ec-22c8-4948-a579-d661cdc42761",
        "body" : "We keep the raw CSR because it is signed. This binds the public key to the information in the certificate request and is an important part of the approval process. But PKCS#10 is an ASN.1 format that we shouldn't force API clients to parse, so having Kubernetes extract the relevant data (after a signature validation) makes approval clients' lives easier and will allow better searching/filtering down the road. \n",
        "createdAt" : "2016-05-20T18:22:36Z",
        "updatedAt" : "2016-06-28T19:06:48Z",
        "lastEditedBy" : "dabe34ec-22c8-4948-a579-d661cdc42761",
        "tags" : [
        ]
      },
      {
        "id" : "8040819d-e25d-49e6-be43-b10bcfe173d3",
        "parentId" : "1beafdd5-41fb-4b7b-b75c-43ea961acb0e",
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "Shouldn't approval clients still have to verify that these fields match the fields in this CSR and not just trust the fields in the api object for this flow to actually be secure? If so, the client still needs to parse the ASN.1 and the extra fields are not useful and promote incorrect usage.\n",
        "createdAt" : "2016-05-23T21:19:21Z",
        "updatedAt" : "2016-06-28T19:06:48Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      },
      {
        "id" : "64179b23-86bb-44a3-8389-e7064cd8a336",
        "parentId" : "1beafdd5-41fb-4b7b-b75c-43ea961acb0e",
        "authorId" : "dabe34ec-22c8-4948-a579-d661cdc42761",
        "body" : "I am mostly thinking of other clients, like kubectl or the various dashboards, that want to display these objects to humans without parsing the CSR every time (or even necessarily being able to). I've put registry strategy in place so that these can only be modified by the API server on creation. \n\nBut it sounds like consensus is everyone's uncomfortable with breaking these out, so I'll get rid of them.\n",
        "createdAt" : "2016-05-23T23:26:05Z",
        "updatedAt" : "2016-06-28T19:06:48Z",
        "lastEditedBy" : "dabe34ec-22c8-4948-a579-d661cdc42761",
        "tags" : [
        ]
      }
    ],
    "commit" : "c9c6fff269685a23710bf6ff22cf641df06367de",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +40,44 @@// Kubernetes and cannot be modified by users.\ntype CertificateSigningRequestSpec struct {\n\t// Base64-encoded PKCS#10 CSR data\n\tRequest []byte `json:\"request\"`\n"
  }
]