[
  {
    "id" : "ad0ac178-9a06-4a96-9163-8adac0035fd5",
    "prId" : 35300,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/35300#pullrequestreview-7271440",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "83e91dc7-ba19-4c17-b7ef-f1a087d69749",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "godoc\n",
        "createdAt" : "2016-11-04T19:41:13Z",
        "updatedAt" : "2016-11-08T12:47:15Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "252d8b7066ca22f6bc225cfb529c39e8e104c328",
    "line" : null,
    "diffHunk" : "@@ -1,1 +206,210 @@\n// StaticRoles is a rule resolver that resolves from lists of role objects.\ntype StaticRoles struct {\n\troles               []*rbac.Role\n\troleBindings        []*rbac.RoleBinding"
  },
  {
    "id" : "d57c421d-08e9-470b-8a81-216eea8eddc4",
    "prId" : 32813,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/32813#pullrequestreview-278688",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7618c736-ec14-4b06-920e-541258645585",
        "parentId" : null,
        "authorId" : "0af48e59-4be9-46ce-9275-aa218813b6fd",
        "body" : ":+1: to the improvement\n",
        "createdAt" : "2016-09-16T16:01:16Z",
        "updatedAt" : "2016-09-16T19:54:16Z",
        "lastEditedBy" : "0af48e59-4be9-46ce-9275-aa218813b6fd",
        "tags" : [
        ]
      }
    ],
    "commit" : "1943d256d253994512e00b14e32b6c8793f4b852",
    "line" : 201,
    "diffHunk" : "@@ -1,1 +178,182 @@\n\tcase rbac.ServiceAccountKind:\n\t\t// default the namespace to namespace we're working in if its available.  This allows rolebindings that reference\n\t\t// SAs in th local namespace to avoid having to qualify them.\n\t\tsaNamespace := namespace"
  },
  {
    "id" : "baf1f301-7985-4442-a984-4c478ae2bc33",
    "prId" : 25634,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "78bced7f-b8fc-4825-bfe9-9ba1ad42bf1a",
        "parentId" : null,
        "authorId" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "body" : "@liggitt may not be complete because of eventual consistency in the storage system?  Or something else?\n",
        "createdAt" : "2016-05-17T18:24:30Z",
        "updatedAt" : "2016-05-25T21:26:24Z",
        "lastEditedBy" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "tags" : [
        ]
      },
      {
        "id" : "f74e9d10-2007-4313-a87c-bc45b3e6fefd",
        "parentId" : "78bced7f-b8fc-4825-bfe9-9ba1ad42bf1a",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "Because of a dead/missing/unobserved roleref\n",
        "createdAt" : "2016-05-17T18:33:15Z",
        "updatedAt" : "2016-05-25T21:26:24Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "36ecec58f002a55a0ddc3a1fb592d1c9e19f22f0",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +34,38 @@\n\t// GetEffectivePolicyRules returns the list of rules that apply to a given user in a given namespace and error.  If an error is returned, the slice of\n\t// PolicyRules may not be complete, but it contains all retrievable rules.  This is done because policy rules are purely additive and policy determinations\n\t// can be made on the basis of those rules that are found.\n\tGetEffectivePolicyRules(ctx api.Context) ([]rbac.PolicyRule, error)"
  }
]