[
  {
    "id" : "ca1c78e9-e68a-4ace-97de-286bc54eeacc",
    "prId" : 62692,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/62692#pullrequestreview-140348326",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ad600f8e-62b2-414e-b72d-a9fc1394a3e3",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "should we be explicit about this defaulting to `audiences: [\"\"]` and the \"\" audience meaning \"the Kubernetes apiserver\"?",
        "createdAt" : "2018-07-25T14:45:47Z",
        "updatedAt" : "2018-11-17T00:30:58Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "effad15ecc373beb46afd2915827247da51f399d",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +64,68 @@\t// verify that the token was intended for at least one of the audiences in\n\t// this list. If no audiences are provided, the audience will default to the\n\t// audience of the Kubernetes apiserver.\n\tAudiences []string\n}"
  },
  {
    "id" : "c034e137-3b8b-43b4-8b6a-be24dc2df09a",
    "prId" : 62692,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/62692#pullrequestreview-175165955",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6499ccc1-fd81-43a4-a008-a92313273371",
        "parentId" : null,
        "authorId" : "e58080d6-2177-419f-a546-b51075d7bcb8",
        "body" : "Is not it simpler to say `If no audiences are provided` `==>` `then no audience checks are performed` `==>` `status.audience` is left unset?",
        "createdAt" : "2018-08-28T02:55:39Z",
        "updatedAt" : "2018-11-17T00:30:58Z",
        "lastEditedBy" : "e58080d6-2177-419f-a546-b51075d7bcb8",
        "tags" : [
        ]
      },
      {
        "id" : "3535f861-5dd8-4d85-b92c-ffdb216c9553",
        "parentId" : "6499ccc1-fd81-43a4-a008-a92313273371",
        "authorId" : "3cd3a661-80f4-45b3-bae0-5a78fbaedc59",
        "body" : "I don't think that's the behavior we want. If no audiences are provided in the `TokenReview`, the client is asking \"Hey apiserver, is this token valid for you?\", so we _do_ need to check that the audience matches this apiserver. (I think the last sentence in this comment is not correct, though)",
        "createdAt" : "2018-11-15T01:49:30Z",
        "updatedAt" : "2018-11-17T00:30:58Z",
        "lastEditedBy" : "3cd3a661-80f4-45b3-bae0-5a78fbaedc59",
        "tags" : [
        ]
      },
      {
        "id" : "d8365357-bf6a-4e01-8fc5-2ffb0984da76",
        "parentId" : "6499ccc1-fd81-43a4-a008-a92313273371",
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "Fixed the last sentence.",
        "createdAt" : "2018-11-15T02:16:06Z",
        "updatedAt" : "2018-11-17T00:30:58Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      }
    ],
    "commit" : "effad15ecc373beb46afd2915827247da51f399d",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +63,67 @@\t// with the token identifies as. Audience-aware token authenticators will\n\t// verify that the token was intended for at least one of the audiences in\n\t// this list. If no audiences are provided, the audience will default to the\n\t// audience of the Kubernetes apiserver.\n\tAudiences []string"
  },
  {
    "id" : "17f562e8-281b-49ce-9b32-623bdd9ed79e",
    "prId" : 62692,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/62692#pullrequestreview-149950341",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "61eb8c62-3c3c-4a71-a5af-d642b5da6bfc",
        "parentId" : null,
        "authorId" : "e58080d6-2177-419f-a546-b51075d7bcb8",
        "body" : "See above comment on empty audience.",
        "createdAt" : "2018-08-28T02:57:50Z",
        "updatedAt" : "2018-11-17T00:30:58Z",
        "lastEditedBy" : "e58080d6-2177-419f-a546-b51075d7bcb8",
        "tags" : [
        ]
      }
    ],
    "commit" : "effad15ecc373beb46afd2915827247da51f399d",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +81,85 @@\t// spec.audiences field should validate that a compatible audience identifier\n\t// is returned in the status.audiences field to ensure that the TokenReview\n\t// server is audience aware. If a TokenReview returns an empty\n\t// status.audience field where status.authenticated is \"true\", the token is\n\t// valid against the audience of the Kubernetes API server."
  },
  {
    "id" : "37806ada-524b-4403-8a32-2c577a0e0dc8",
    "prId" : 28788,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fdb415f5-2d78-488d-8163-8598576d4e07",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "no omitempty?\n",
        "createdAt" : "2016-07-20T09:27:46Z",
        "updatedAt" : "2016-07-20T19:12:08Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "2ce5915e-a10e-4acd-aaed-e3e8e908402d",
        "parentId" : "fdb415f5-2d78-488d-8163-8598576d4e07",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "> no omitempty?\n\nno internal json tags.\n",
        "createdAt" : "2016-07-20T11:37:27Z",
        "updatedAt" : "2016-07-20T19:12:08Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "2256c6e619388b59bbd0f113dbc5827d0f2e5d49",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +54,58 @@\tUser UserInfo\n\t// Error indicates that the token couldn't be checked\n\tError string\n}\n"
  },
  {
    "id" : "766fbab7-6ca1-40bf-a275-b30b9f1a1f0b",
    "prId" : 28788,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c73965c5-806b-4d08-a482-1906930b2051",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "omitempty?\n",
        "createdAt" : "2016-07-20T09:34:41Z",
        "updatedAt" : "2016-07-20T19:12:08Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "2256c6e619388b59bbd0f113dbc5827d0f2e5d49",
    "line" : 41,
    "diffHunk" : "@@ -1,1 +69,73 @@\tGroups []string\n\t// Any additional information provided by the authenticator.\n\tExtra map[string]ExtraValue\n}\n"
  },
  {
    "id" : "62606cf8-3806-4499-941a-70659c5a9be0",
    "prId" : 28788,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e72c9b4e-7df7-4a13-a252-ddfdbe1dbef3",
        "parentId" : null,
        "authorId" : "3cd3a661-80f4-45b3-bae0-5a78fbaedc59",
        "body" : "I don't have the logs to prove it, but I think that these additional fields are choking up our deserialization on the GKE server side. I'll see what we can do about that.\n",
        "createdAt" : "2016-07-22T00:53:38Z",
        "updatedAt" : "2016-07-22T00:53:38Z",
        "lastEditedBy" : "3cd3a661-80f4-45b3-bae0-5a78fbaedc59",
        "tags" : [
        ]
      },
      {
        "id" : "c92ad44d-67b3-4460-9881-8ff54ca567eb",
        "parentId" : "e72c9b4e-7df7-4a13-a252-ddfdbe1dbef3",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "> I don't have the logs to prove it, but I think that these additional fields are choking up our deserialization on the GKE server side. I'll see what we can do about that.\n\nThanks, let me know?\n",
        "createdAt" : "2016-07-22T13:12:34Z",
        "updatedAt" : "2016-07-22T13:12:34Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "f3540bd2-2142-4c27-aeda-83bfa91e0de6",
        "parentId" : "e72c9b4e-7df7-4a13-a252-ddfdbe1dbef3",
        "authorId" : "3cd3a661-80f4-45b3-bae0-5a78fbaedc59",
        "body" : "Confirmed that we do strict field checking on our side. I either need to figure out if we can turn that off, or add all of the fields from ObjectMeta to our server-side TokenReview representation.\n\nWhy does this PR add api.ObjectMeta to the TokenReview, but #20573 doesn't add it to SubjectAccessReview?\n",
        "createdAt" : "2016-07-22T17:52:41Z",
        "updatedAt" : "2016-07-22T17:52:41Z",
        "lastEditedBy" : "3cd3a661-80f4-45b3-bae0-5a78fbaedc59",
        "tags" : [
        ]
      },
      {
        "id" : "9276a4e3-8e9c-4ea8-87f5-ff610063cd99",
        "parentId" : "e72c9b4e-7df7-4a13-a252-ddfdbe1dbef3",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "> Why does this PR add api.ObjectMeta to the TokenReview, but #20573 doesn't add it to SubjectAccessReview?\n\nWhen I did the SAR long ago it wasn't used.  I'll probably have to add it there too.\n",
        "createdAt" : "2016-07-22T18:10:59Z",
        "updatedAt" : "2016-07-22T18:10:59Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "edf68366-5ab1-4dbf-8666-fb7ea5ddbe8d",
        "parentId" : "e72c9b4e-7df7-4a13-a252-ddfdbe1dbef3",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "@cjcullen any word on making the token review more tolerant?\n",
        "createdAt" : "2016-07-26T02:37:50Z",
        "updatedAt" : "2016-07-26T02:37:50Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "2256c6e619388b59bbd0f113dbc5827d0f2e5d49",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +31,35 @@\t// ObjectMeta fulfills the meta.ObjectMetaAccessor interface so that the stock\n\t// REST handler paths work\n\tapi.ObjectMeta\n\n\t// Spec holds information about the request being evaluated"
  }
]