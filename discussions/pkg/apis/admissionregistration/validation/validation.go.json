[
  {
    "id" : "6b2841c1-2fab-430b-ae6d-63ed24b7ed6f",
    "prId" : 80231,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/80231#pullrequestreview-269953415",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6569ef8d-d934-4b2c-b2ca-26b9d1fd67fe",
        "parentId" : null,
        "authorId" : "695b6860-569c-4e63-a215-7342e2279a94",
        "body" : "this is to make sure we can safely downgrade apiserver one version? I was surprised that you cannot create a configuration that only talks v1 in 1.16",
        "createdAt" : "2019-08-02T01:48:24Z",
        "updatedAt" : "2019-08-02T01:48:24Z",
        "lastEditedBy" : "695b6860-569c-4e63-a215-7342e2279a94",
        "tags" : [
        ]
      },
      {
        "id" : "5565c61e-90cb-4632-be11-4b27fe6b2ba3",
        "parentId" : "6569ef8d-d934-4b2c-b2ca-26b9d1fd67fe",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "to be able to safely downgrade, and to ensure a skewed HA cluster of 1.15 and 1.16 API servers does not permit creation of webhooks that will break half the API servers in the cluster",
        "createdAt" : "2019-08-02T01:52:02Z",
        "updatedAt" : "2019-08-02T01:52:02Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "308c23cf89ff6680afdaeaeff00c8e176df346a5",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +153,157 @@}\n\n// AcceptedAdmissionReviewVersions contains the list of AdmissionReview versions the *prior* version of the API server understands.\n// 1.15: server understands v1beta1; accepted versions are [\"v1beta1\"]\n// 1.16: server understands v1, v1beta1; accepted versions are [\"v1beta1\"]"
  },
  {
    "id" : "04c6bd9b-d370-404e-ba76-05e07c6e6b36",
    "prId" : 79549,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/79549#pullrequestreview-260207590",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d4407dfb-fdf9-414a-aa46-5e11478d6bab",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "what's the reason we don't have a field path arguments in these validation funcs?",
        "createdAt" : "2019-07-10T16:15:13Z",
        "updatedAt" : "2019-07-10T21:38:43Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "dea54f4d-8a88-44c8-b5ed-70fdb7d738bc",
        "parentId" : "d4407dfb-fdf9-414a-aa46-5e11478d6bab",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "ok, it's the root object. nvmd. Would be nil anyway.",
        "createdAt" : "2019-07-10T16:16:30Z",
        "updatedAt" : "2019-07-10T21:38:43Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "b15aed640995630d4a87e3c0deb138f6a2109722",
    "line" : 37,
    "diffHunk" : "@@ -1,1 +209,213 @@\t\tif requireUniqueWebhookNames && len(hook.Name) > 0 {\n\t\t\tif hookNames.Has(hook.Name) {\n\t\t\t\tallErrors = append(allErrors, field.Duplicate(field.NewPath(\"webhooks\").Index(i).Child(\"name\"), hook.Name))\n\t\t\t}\n\t\t\thookNames.Insert(hook.Name)"
  },
  {
    "id" : "13763f49-71ca-4ed5-82fa-a05112e87784",
    "prId" : 74998,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/74998#pullrequestreview-211963942",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6b01fa4e-4c88-4e7d-b37d-98ef045fe2aa",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "mutatingWebhookConfigurationStrategy#ValidateUpdate still calls this, and should not",
        "createdAt" : "2019-03-07T16:53:11Z",
        "updatedAt" : "2019-03-08T05:00:38Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "f20b7698-d376-4470-8457-ebb153ded71b",
        "parentId" : "6b01fa4e-4c88-4e7d-b37d-98ef045fe2aa",
        "authorId" : "7f521a0d-2137-47c7-a390-3b4bdcffe306",
        "body" : "fixed",
        "createdAt" : "2019-03-07T19:03:16Z",
        "updatedAt" : "2019-03-08T05:00:38Z",
        "lastEditedBy" : "7f521a0d-2137-47c7-a390-3b4bdcffe306",
        "tags" : [
        ]
      }
    ],
    "commit" : "cbe00023c02c1bb08f9111e40c26c3c73dfa48bf",
    "line" : 72,
    "diffHunk" : "@@ -1,1 +209,213 @@}\n\nfunc ValidateMutatingWebhookConfiguration(e *admissionregistration.MutatingWebhookConfiguration) field.ErrorList {\n\treturn validateMutatingWebhookConfiguration(e, true)\n}"
  },
  {
    "id" : "5b4b2bff-ebf2-484b-b002-8833823a4be2",
    "prId" : 74998,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/74998#pullrequestreview-211983823",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f3930983-fd42-4057-9744-697852cda2b3",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "should probably constrain the version strings to `utilvalidation.IsDNS1035Label` (here and when validating conversionReviewVersions), since that's what we limit APIService versions to:\r\n```\r\n\tfor _, errString := range utilvalidation.IsDNS1035Label(apiService.Spec.Version) {\r\n\t\tallErrs = append(allErrs, field.Invalid(field.NewPath(\"spec\", \"version\"), apiService.Spec.Version, errString))\r\n\t}\r\n```",
        "createdAt" : "2019-03-07T19:45:38Z",
        "updatedAt" : "2019-03-08T05:00:38Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "cbe00023c02c1bb08f9111e40c26c3c73dfa48bf",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +173,177 @@\t\tseen := map[string]bool{}\n\t\thasAcceptedVersion := false\n\t\tfor i, v := range versions {\n\t\t\tif seen[v] {\n\t\t\t\tallErrors = append(allErrors, field.Invalid(fldPath.Index(i), v, \"duplicate version\"))"
  },
  {
    "id" : "db299e73-7005-4a61-86d0-f332278f46a6",
    "prId" : 54889,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/54889#pullrequestreview-75946258",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "57a9cc61-9e69-4f5c-9833-c1894c151aaa",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "Make sure there's no query or user info?",
        "createdAt" : "2017-11-12T00:59:17Z",
        "updatedAt" : "2017-11-12T01:04:03Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "fc0924cd4b59ab49ee955b7f0631820db57a824f",
    "line" : 41,
    "diffHunk" : "@@ -1,1 +219,223 @@\t\t\tif len(u.Host) == 0 {\n\t\t\t\tallErrors = append(allErrors, field.Required(fldPath.Child(\"url\"), \"host must be provided\"+form))\n\t\t\t}\n\t\t}\n\t}"
  }
]