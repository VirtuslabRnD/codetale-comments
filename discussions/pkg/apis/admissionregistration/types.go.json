[
  {
    "id" : "8624c07f-c032-48fb-bca9-5d4fa9690e75",
    "prId" : 78135,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/78135#pullrequestreview-242287821",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e3725536-0b30-48d7-a7d0-d990ec2281b9",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : ":+1:",
        "createdAt" : "2019-05-27T13:52:50Z",
        "updatedAt" : "2019-05-28T18:30:39Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "8c194ea615459ddab09938528eca3a3a228da8a3",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +199,203 @@\t// For example, if deployments can be modified via apps/v1, apps/v1beta1, and extensions/v1beta1,\n\t// and \"rules\" only included `apiGroups:[\"apps\"], apiVersions:[\"v1\"], resources: [\"deployments\"]`,\n\t// a request to apps/v1beta1 or extensions/v1beta1 would be converted to apps/v1 and sent to the webhook.\n\t//\n\t// +optional"
  },
  {
    "id" : "57bd9229-9789-48b1-9fa8-ab2cf95284b2",
    "prId" : 74855,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/74855#pullrequestreview-211974460",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a081d0cd-05ef-4c18-9fe1-858d275d2f54",
        "parentId" : null,
        "authorId" : "695b6860-569c-4e63-a215-7342e2279a94",
        "body" : "use `*int32` in internal packages\r\n\r\nis using `int32` intended? ",
        "createdAt" : "2019-03-07T19:09:09Z",
        "updatedAt" : "2019-04-08T07:29:18Z",
        "lastEditedBy" : "695b6860-569c-4e63-a215-7342e2279a94",
        "tags" : [
        ]
      },
      {
        "id" : "f7f3baf6-4daf-4f0d-9623-d33a30845366",
        "parentId" : "a081d0cd-05ef-4c18-9fe1-858d275d2f54",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "> is using int32 intended?\r\n\r\nit is. external versions use `*int32`, and default `nil` to `443`, and internal versions never encounter nil",
        "createdAt" : "2019-03-07T19:15:40Z",
        "updatedAt" : "2019-04-08T07:29:18Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "9c24f617-9ef5-4e7b-9f01-37db9b1f437d",
        "parentId" : "a081d0cd-05ef-4c18-9fe1-858d275d2f54",
        "authorId" : "695b6860-569c-4e63-a215-7342e2279a94",
        "body" : "sounds good. I thought we have fuzz tests that don't go through defaulting and test roundtripping",
        "createdAt" : "2019-03-07T19:25:48Z",
        "updatedAt" : "2019-04-08T07:29:18Z",
        "lastEditedBy" : "695b6860-569c-4e63-a215-7342e2279a94",
        "tags" : [
        ]
      }
    ],
    "commit" : "e6f5f4f61bfccd0c12b7bdfb08061eb21137ab45",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +338,342 @@\t// `port` should be a valid port number (1-65535, inclusive).\n\t// +optional\n\tPort int32\n}"
  },
  {
    "id" : "c7cab56e-2651-4275-b469-73d18fadac91",
    "prId" : 66936,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/66936#pullrequestreview-147882212",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7ee49c23-b637-4c42-9c5e-8895dc196656",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "did validation get added for this field?",
        "createdAt" : "2018-08-21T02:00:54Z",
        "updatedAt" : "2018-08-22T23:55:10Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "c61eac7daa021e0503aec61f2c1b467b269eebfa",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +260,264 @@\t// sideEffects == Unknown or Some. Defaults to Unknown.\n\t// +optional\n\tSideEffects *SideEffectClass\n}\n"
  },
  {
    "id" : "5e11bb07-2983-40b9-b668-24234e6d48ac",
    "prId" : 46551,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/46551#pullrequestreview-41376078",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2d67da59-a75b-454a-9b2a-48874edc9ebc",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Doesn't have to be in this PR, but we this is a great example use case for just making two separate InitializerRule and AdmissionWebhookRule structs.",
        "createdAt" : "2017-05-31T22:35:57Z",
        "updatedAt" : "2017-05-31T23:51:26Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "e9d9b05234b46d2419112adb2009a9802998027c",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +102,106 @@\t// overlap with each other.\n\t//\n\t// Depending on the enclosing object, subresources might not be allowed.\n\t// Required.\n\tResources []string"
  },
  {
    "id" : "1ec879ce-b839-44d5-890a-ba216cb60ce7",
    "prId" : 46294,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/46294#pullrequestreview-40395193",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0d77b5ff-cf11-4395-9f03-827a1c625348",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "thought: what if we called this InitializerSpec and changed InitializerConfiguration to just be Initializer?",
        "createdAt" : "2017-05-25T20:45:35Z",
        "updatedAt" : "2017-05-26T07:14:23Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "c18bcbed-9d53-43ce-b7ed-0123b609aa7e",
        "parentId" : "0d77b5ff-cf11-4395-9f03-827a1c625348",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "one InitializerConfiguration have multiple spec for multiple initializers, so i don't think it can be renamed to `Initalizer`.",
        "createdAt" : "2017-05-25T21:16:37Z",
        "updatedAt" : "2017-05-26T07:14:23Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "89e506c46a3a8007e943aac1e743608f6bbc148c",
    "line" : 56,
    "diffHunk" : "@@ -1,1 +54,58 @@// Initializer describes the name and the failure policy of an initializer, and\n// what resources it applies to.\ntype Initializer struct {\n\t// Name is the identifier of the initializer. It will be added to the\n\t// object that needs to be initialized."
  },
  {
    "id" : "3e1e6333-a2a6-4aa6-b1ea-85d1a861643d",
    "prId" : 46294,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/46294#pullrequestreview-40386730",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e69a6f1a-503a-40d7-bb59-99a7744b6205",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Same idea, this could be a Spec and we can drop the word Configuration?",
        "createdAt" : "2017-05-25T20:48:06Z",
        "updatedAt" : "2017-05-26T07:14:23Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "89e506c46a3a8007e943aac1e743608f6bbc148c",
    "line" : 143,
    "diffHunk" : "@@ -1,1 +141,145 @@// ExternalAdmissionHook describes an external admission webhook and the\n// resources and operations it applies to.\ntype ExternalAdmissionHook struct {\n\t// The name of the external admission webhook.\n\t// Name should be fully qualified, e.g., imagepolicy.kubernetes.io, where"
  }
]