[
  {
    "id" : "e9c16448-3921-4694-87fe-707869267042",
    "prId" : 90691,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/90691#pullrequestreview-472932538",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c343c480-1dd5-435d-aaf6-3eceb45f2f43",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "```suggestion\r\n\t} else {\r\n\t ...validate that this is a valid container name (ValidateDNS1123Label is used to validate container names in core/validation/validation.go)\r\n\t}\r\n```",
        "createdAt" : "2020-06-29T15:36:00Z",
        "updatedAt" : "2020-10-21T19:17:39Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "5f93cb42-b6ee-427b-9d5d-eefeb5cdbccb",
        "parentId" : "c343c480-1dd5-435d-aaf6-3eceb45f2f43",
        "authorId" : "35b74c0f-1e37-4ee0-81db-f5e9449774bc",
        "body" : "Added validation",
        "createdAt" : "2020-08-22T15:10:03Z",
        "updatedAt" : "2020-10-21T19:17:39Z",
        "lastEditedBy" : "35b74c0f-1e37-4ee0-81db-f5e9449774bc",
        "tags" : [
        ]
      }
    ],
    "commit" : "0fec7b0f7e2dfd4b0c6c57e086472546f6c69efa",
    "line" : 96,
    "diffHunk" : "@@ -1,1 +395,399 @@\t} else {\n\t\tallErrs = append(allErrs, apivalidation.ValidateDNS1123Label(src.Container, fldPath.Child(\"container\"))...)\n\t}\n\n\tallErrs = append(allErrs, validateMetricTarget(src.Target, fldPath.Child(\"target\"))...)"
  },
  {
    "id" : "06fb2e22-514f-496c-bac0-c2addf67a696",
    "prId" : 90691,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/90691#pullrequestreview-487246332",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "631b004c-020c-449c-9ec4-3221b617c506",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "think about what bounds we place on all new fields. e.g. should this be length-constrained? limited to specific characters?",
        "createdAt" : "2020-09-03T13:52:25Z",
        "updatedAt" : "2020-10-21T19:17:39Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "ddff885d-c426-445f-8d62-048bf740846a",
        "parentId" : "631b004c-020c-449c-9ec4-3221b617c506",
        "authorId" : "35b74c0f-1e37-4ee0-81db-f5e9449774bc",
        "body" : "I have changed it to use an existing helper method which validates that the resource is a valid container resource.",
        "createdAt" : "2020-09-12T18:08:12Z",
        "updatedAt" : "2020-10-21T19:17:39Z",
        "lastEditedBy" : "35b74c0f-1e37-4ee0-81db-f5e9449774bc",
        "tags" : [
        ]
      }
    ],
    "commit" : "0fec7b0f7e2dfd4b0c6c57e086472546f6c69efa",
    "line" : 87,
    "diffHunk" : "@@ -1,1 +386,390 @@\n\tif len(src.Name) == 0 {\n\t\tallErrs = append(allErrs, field.Required(fldPath.Child(\"name\"), \"must specify a resource name\"))\n\t} else {\n\t\tallErrs = append(allErrs, corevalidation.ValidateContainerResourceName(string(src.Name), fldPath.Child(\"name\"))...)"
  },
  {
    "id" : "a619495a-fa6f-4d2a-93c4-a4d3b87c74aa",
    "prId" : 74526,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/74526#pullrequestreview-244105408",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b912287d-87c2-4565-b3d9-51f93d3d0810",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Should be if it's nil or zero?",
        "createdAt" : "2019-05-28T18:08:43Z",
        "updatedAt" : "2019-07-16T13:47:01Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "236f061c-6bc3-403a-86b3-4de21f3a1e5d",
        "parentId" : "b912287d-87c2-4565-b3d9-51f93d3d0810",
        "authorId" : "60ed3a02-b9be-49c9-a8f4-95698756673a",
        "body" : "We need at least one object or external metric configured if minReplicas is set to zero. Not nil check is required to avoid nil pointer dereference.",
        "createdAt" : "2019-05-29T05:34:39Z",
        "updatedAt" : "2019-07-16T13:47:01Z",
        "lastEditedBy" : "60ed3a02-b9be-49c9-a8f4-95698756673a",
        "tags" : [
        ]
      },
      {
        "id" : "39e641d7-f22c-4b0b-b579-428586acedab",
        "parentId" : "b912287d-87c2-4565-b3d9-51f93d3d0810",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Officially it defaults to 1, but the defaulting code should have already run by the time this function is invoked. So, it's not clear what nil means at this point, I was assuming 0...",
        "createdAt" : "2019-05-29T14:58:31Z",
        "updatedAt" : "2019-07-16T13:47:01Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "c723ab9b-5792-42b7-a6ec-3f851b934d7e",
        "parentId" : "b912287d-87c2-4565-b3d9-51f93d3d0810",
        "authorId" : "60ed3a02-b9be-49c9-a8f4-95698756673a",
        "body" : "@lavalamp minReplicas is a pointer to int32.\r\n\r\nI've done the same nil protective check as [here](https://github.com/kubernetes/kubernetes/pull/74526/files/1e9ec7b634181f4f9220d0cc10c9381b3e410986#diff-4364e3f754b12e39f60eea33105f6c7eR47)\r\n\r\nIt looks robust and doesn't require to know about external defaulting code.",
        "createdAt" : "2019-05-30T03:59:51Z",
        "updatedAt" : "2019-07-16T13:47:01Z",
        "lastEditedBy" : "60ed3a02-b9be-49c9-a8f4-95698756673a",
        "tags" : [
        ]
      },
      {
        "id" : "e7d58d2c-8209-4345-a2ca-fb7d16f88403",
        "parentId" : "b912287d-87c2-4565-b3d9-51f93d3d0810",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "this check looks fine. practically, it will not be nil since defaulting runs before we get here, but the nil check makes it clearly safe",
        "createdAt" : "2019-05-31T01:59:27Z",
        "updatedAt" : "2019-07-16T13:47:01Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "19d93eefebab5ee479b65890241c8229a7d5852d",
    "line" : 103,
    "diffHunk" : "@@ -1,1 +148,152 @@\t}\n\n\tif minReplicas != nil && *minReplicas == 0 {\n\t\tif !hasObjectMetrics && !hasExternalMetrics {\n\t\t\tallErrs = append(allErrs, field.Forbidden(fldPath, \"must specify at least one Object or External metric to support scaling to zero replicas\"))"
  },
  {
    "id" : "bf24f53f-497e-488d-9233-a3519dd9d96d",
    "prId" : 60096,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/60096#pullrequestreview-98575153",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9a3b3357-5bf5-40f3-87ed-70c56e137b3e",
        "parentId" : null,
        "authorId" : "3a4b4830-dc71-4d7e-a7db-de2453284945",
        "body" : "we'll want to re-evaluate this later, because it's not strictly true for custom metrics",
        "createdAt" : "2018-02-21T22:07:39Z",
        "updatedAt" : "2018-02-22T14:53:25Z",
        "lastEditedBy" : "3a4b4830-dc71-4d7e-a7db-de2453284945",
        "tags" : [
        ]
      },
      {
        "id" : "0199d32d-b415-45c2-92df-48660c86c8a5",
        "parentId" : "9a3b3357-5bf5-40f3-87ed-70c56e137b3e",
        "authorId" : "3f00d8a9-68e2-438c-85da-b03590361276",
        "body" : "Sure. I'm not sure what the specific use-case is and how do we want to handle metric value changing signs, but in general I see no reason not to allow it later on.",
        "createdAt" : "2018-02-22T14:07:07Z",
        "updatedAt" : "2018-02-22T14:53:25Z",
        "lastEditedBy" : "3f00d8a9-68e2-438c-85da-b03590361276",
        "tags" : [
        ]
      }
    ],
    "commit" : "602aaaf03da39531a98e4c83d48c2c19570bd5d2",
    "line" : 43,
    "diffHunk" : "@@ -1,1 +207,211 @@\n\tif src.TargetAverageValue != nil && src.TargetAverageValue.Sign() != 1 {\n\t\tallErrs = append(allErrs, field.Invalid(fldPath.Child(\"targetAverageValue\"), src.TargetAverageValue, \"must be positive\"))\n\t}\n"
  },
  {
    "id" : "7e5562f5-0e83-4ff2-900b-f9ecd94be2b9",
    "prId" : 60096,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/60096#pullrequestreview-99336940",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6e64c466-9a7a-4ce7-bd17-15643e8d6625",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "since this will be used as a single path segment in URL-building, this should be validated with `path.IsValidPathSegmentName`",
        "createdAt" : "2018-02-26T15:15:44Z",
        "updatedAt" : "2018-02-26T15:15:44Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "602aaaf03da39531a98e4c83d48c2c19570bd5d2",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +195,199 @@\n\tif len(src.MetricName) == 0 {\n\t\tallErrs = append(allErrs, field.Required(fldPath.Child(\"metricName\"), \"must specify a metric name\"))\n\t}\n"
  },
  {
    "id" : "291a38aa-e682-4538-861b-4fa837caf2a5",
    "prId" : 36033,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/36033#pullrequestreview-19408891",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2b75fe9a-413d-4dc9-8ad6-a6cdf9f405c7",
        "parentId" : null,
        "authorId" : "c929c906-4dfb-433b-9bc7-1b4b05c176f8",
        "body" : "I don't understand this `if`. It should be always true (we inserted \"object\" to an empty set `typesPresent`).",
        "createdAt" : "2017-01-26T18:36:07Z",
        "updatedAt" : "2017-02-08T03:25:55Z",
        "lastEditedBy" : "c929c906-4dfb-433b-9bc7-1b4b05c176f8",
        "tags" : [
        ]
      },
      {
        "id" : "1e6c005b-2a03-4fff-993c-941beab0e094",
        "parentId" : "2b75fe9a-413d-4dc9-8ad6-a6cdf9f405c7",
        "authorId" : "3a4b4830-dc71-4d7e-a7db-de2453284945",
        "body" : "if the user sets multiple fields in (e.g. both `object` and `resource`), the latter if will have `typesPresent.Len() == 2`, so we don't bother trying to validate the latter field.  It's a pattern found elsewhere for the union types, IIRC.",
        "createdAt" : "2017-01-27T15:32:12Z",
        "updatedAt" : "2017-02-08T03:25:56Z",
        "lastEditedBy" : "3a4b4830-dc71-4d7e-a7db-de2453284945",
        "tags" : [
        ]
      },
      {
        "id" : "a68922ff-2ffb-4b85-8606-44595cbec42f",
        "parentId" : "2b75fe9a-413d-4dc9-8ad6-a6cdf9f405c7",
        "authorId" : "c929c906-4dfb-433b-9bc7-1b4b05c176f8",
        "body" : "But `typePresent` is initialized in line 132 as an empty set. Then you put one value to it in line 135. So, this condition is always true.",
        "createdAt" : "2017-01-27T20:26:30Z",
        "updatedAt" : "2017-02-08T03:25:56Z",
        "lastEditedBy" : "c929c906-4dfb-433b-9bc7-1b4b05c176f8",
        "tags" : [
        ]
      },
      {
        "id" : "70cae185-ed09-443d-be82-a0ed6e04da91",
        "parentId" : "2b75fe9a-413d-4dc9-8ad6-a6cdf9f405c7",
        "authorId" : "3a4b4830-dc71-4d7e-a7db-de2453284945",
        "body" : "yeah, the very first one is always true, but the latter ones might not be.  Better to have all be consistent.",
        "createdAt" : "2017-01-31T19:59:48Z",
        "updatedAt" : "2017-02-08T03:25:56Z",
        "lastEditedBy" : "3a4b4830-dc71-4d7e-a7db-de2453284945",
        "tags" : [
        ]
      }
    ],
    "commit" : "946ecb549e170fdb49897e93ad41513ae3a0deb6",
    "line" : 103,
    "diffHunk" : "@@ -1,1 +133,137 @@\tif spec.Object != nil {\n\t\ttypesPresent.Insert(\"object\")\n\t\tif typesPresent.Len() == 1 {\n\t\t\tallErrs = append(allErrs, validateObjectSource(spec.Object, fldPath.Child(\"object\"))...)\n\t\t}"
  },
  {
    "id" : "60d19cc4-aba8-41b7-8db5-2fd28d6e1590",
    "prId" : 36033,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/36033#pullrequestreview-18863698",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bd0293d9-9a39-402b-bfef-0a20b0c13974",
        "parentId" : null,
        "authorId" : "c929c906-4dfb-433b-9bc7-1b4b05c176f8",
        "body" : "Shouldn't we check if src.TargetAverageValue is positive?",
        "createdAt" : "2017-01-26T18:47:40Z",
        "updatedAt" : "2017-02-08T03:25:55Z",
        "lastEditedBy" : "c929c906-4dfb-433b-9bc7-1b4b05c176f8",
        "tags" : [
        ]
      },
      {
        "id" : "917b1c0e-a1f6-460b-8d7a-90624d2b09b9",
        "parentId" : "bd0293d9-9a39-402b-bfef-0a20b0c13974",
        "authorId" : "3a4b4830-dc71-4d7e-a7db-de2453284945",
        "body" : "yep",
        "createdAt" : "2017-01-27T15:37:32Z",
        "updatedAt" : "2017-02-08T03:25:56Z",
        "lastEditedBy" : "3a4b4830-dc71-4d7e-a7db-de2453284945",
        "tags" : [
        ]
      }
    ],
    "commit" : "946ecb549e170fdb49897e93ad41513ae3a0deb6",
    "line" : 185,
    "diffHunk" : "@@ -1,1 +215,219 @@\tif src.TargetAverageUtilization != nil && src.TargetAverageValue != nil {\n\t\tallErrs = append(allErrs, field.Forbidden(fldPath.Child(\"targetAverageValue\"), \"may not set both a target raw value and a target utilization\"))\n\t}\n\n\tif src.TargetAverageValue != nil && src.TargetAverageValue.Sign() != 1 {"
  }
]