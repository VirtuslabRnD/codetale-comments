[
  {
    "id" : "6b80d306-9210-482a-9ff9-28fd3b3a8dc4",
    "prId" : 90691,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/90691#pullrequestreview-513477330",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5f334a6b-3ae5-4873-8173-c5fa0da85e4d",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "the same feature-gate would protect this field",
        "createdAt" : "2020-06-29T15:13:52Z",
        "updatedAt" : "2020-10-21T19:17:39Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "dafe298b-98fa-4b29-9f68-e71fc54a679f",
        "parentId" : "5f334a6b-3ae5-4873-8173-c5fa0da85e4d",
        "authorId" : "35b74c0f-1e37-4ee0-81db-f5e9449774bc",
        "body" : "Both during the create and the update checks the status cannot be set. During create it is set to [empty](https://github.com/kubernetes/kubernetes/blob/14a11060a0775ed609f0810898ebdbe737c59441/pkg/registry/autoscaling/horizontalpodautoscaler/strategy.go#L50). And during an update it would not be [allowed to update to the new value](https://github.com/kubernetes/kubernetes/blob/14a11060a0775ed609f0810898ebdbe737c59441/pkg/registry/autoscaling/horizontalpodautoscaler/strategy.go#L73). So the resource status does not have to be explicitly set to an empty object IMO. For the metric source I have added filtering so that when the feature gate is not enabled the new metric source type is filtered out.",
        "createdAt" : "2020-08-22T20:29:48Z",
        "updatedAt" : "2020-10-21T19:17:39Z",
        "lastEditedBy" : "35b74c0f-1e37-4ee0-81db-f5e9449774bc",
        "tags" : [
        ]
      },
      {
        "id" : "fb30157b-0146-449c-8821-e90d05385e50",
        "parentId" : "5f334a6b-3ae5-4873-8173-c5fa0da85e4d",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "in autoscalerStatusStrategy#PrepareForUpdate, follow the pattern of clearing the field if the feature is off AND the existing object does not use the new field ",
        "createdAt" : "2020-09-03T13:35:32Z",
        "updatedAt" : "2020-10-21T19:17:39Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "fb8c75e5-9069-40c7-a04d-da0fa41c1948",
        "parentId" : "5f334a6b-3ae5-4873-8173-c5fa0da85e4d",
        "authorId" : "35b74c0f-1e37-4ee0-81db-f5e9449774bc",
        "body" : "Updating the status is not allowed in the strategy. So for cases when the feature gate if off it will simply get copied over from the old status if it exists. And it can only exist if the controller puts it there because the feature was enabled and used.",
        "createdAt" : "2020-10-21T09:23:27Z",
        "updatedAt" : "2020-10-21T19:17:39Z",
        "lastEditedBy" : "35b74c0f-1e37-4ee0-81db-f5e9449774bc",
        "tags" : [
        ]
      }
    ],
    "commit" : "0fec7b0f7e2dfd4b0c6c57e086472546f6c69efa",
    "line" : 60,
    "diffHunk" : "@@ -1,1 +456,460 @@\t// to normal per-pod metrics using the \"pods\" source.\n\t// +optional\n\tContainerResource *ContainerResourceMetricStatus\n\t// External refers to a global metric that is not associated\n\t// with any Kubernetes object. It allows autoscaling based on information"
  },
  {
    "id" : "d1354cdd-cc9c-4fd3-bfd6-ea1a90a58056",
    "prId" : 74525,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/74525#pullrequestreview-310332276",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "292d419b-c349-495a-bd88-cdd289b5f852",
        "parentId" : null,
        "authorId" : "7d9aba44-f03a-4059-8095-4da9c4210817",
        "body" : "I'm glad you made this a dedicated type instead of a `*string` as in the KEP.  \r\n![image](https://user-images.githubusercontent.com/1103629/66808968-ace81080-ef2c-11e9-8be0-1124e7a603af.png)\r\nYou might consider updating the KEP to match.",
        "createdAt" : "2019-10-15T07:18:17Z",
        "updatedAt" : "2019-12-10T17:09:53Z",
        "lastEditedBy" : "7d9aba44-f03a-4059-8095-4da9c4210817",
        "tags" : [
        ]
      },
      {
        "id" : "797d2777-c6fe-4952-96da-532ada44441d",
        "parentId" : "292d419b-c349-495a-bd88-cdd289b5f852",
        "authorId" : "afb638dd-5cee-447e-a73e-34c2f1d333df",
        "body" : "We discussed that and decided to merge the KEP as it was because KEP is just a proposal, not the documentation/API change itself.\r\nIf you feel like we should update the KEP, we can definitely do it.",
        "createdAt" : "2019-10-15T07:58:39Z",
        "updatedAt" : "2019-12-10T17:09:53Z",
        "lastEditedBy" : "afb638dd-5cee-447e-a73e-34c2f1d333df",
        "tags" : [
        ]
      },
      {
        "id" : "b58cb660-43e0-4b08-b5af-5726e95e818f",
        "parentId" : "292d419b-c349-495a-bd88-cdd289b5f852",
        "authorId" : "7d9aba44-f03a-4059-8095-4da9c4210817",
        "body" : "After everything is done, it would be nice.  But not necessary.  :)",
        "createdAt" : "2019-10-15T09:09:12Z",
        "updatedAt" : "2019-12-10T17:09:53Z",
        "lastEditedBy" : "7d9aba44-f03a-4059-8095-4da9c4210817",
        "tags" : [
        ]
      },
      {
        "id" : "de23ba34-a096-4b79-9ba5-c111318854b5",
        "parentId" : "292d419b-c349-495a-bd88-cdd289b5f852",
        "authorId" : "afb638dd-5cee-447e-a73e-34c2f1d333df",
        "body" : "We'll update the KEP as soon as the API is stabilized! :)",
        "createdAt" : "2019-11-01T08:08:59Z",
        "updatedAt" : "2019-12-10T17:09:53Z",
        "lastEditedBy" : "afb638dd-5cee-447e-a73e-34c2f1d333df",
        "tags" : [
        ]
      }
    ],
    "commit" : "8ab226263a18fa16afdb6fd14da63544095a8937",
    "line" : 60,
    "diffHunk" : "@@ -1,1 +152,156 @@\t// If not set, the default value MaxPolicySelect is used.\n\t// +optional\n\tSelectPolicy *ScalingPolicySelect\n\t// policies is a list of potential scaling polices which can used during scaling.\n\t// At least one policy must be specified, otherwise the HPAScalingRules will be discarded as invalid"
  },
  {
    "id" : "a1e0ff4b-3570-4142-9f5f-0551939ef48d",
    "prId" : 74525,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/74525#pullrequestreview-302489915",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "112ed2e6-bd5c-489c-88ff-cb8e93eedcbf",
        "parentId" : null,
        "authorId" : "7d9aba44-f03a-4059-8095-4da9c4210817",
        "body" : "Who uses this `pkg/apis/autoscaling/types.go` file?  All of the autoscaling imports I could find in the Kubernetes repo reference a versioned type.  E.g. `pkg/apis/autoscaling/v2beta2`.  Why the duplication?\r\n\r\n",
        "createdAt" : "2019-10-15T07:31:00Z",
        "updatedAt" : "2019-12-10T17:09:53Z",
        "lastEditedBy" : "7d9aba44-f03a-4059-8095-4da9c4210817",
        "tags" : [
        ]
      },
      {
        "id" : "66d92d11-0a44-414e-ab71-6f180457fca7",
        "parentId" : "112ed2e6-bd5c-489c-88ff-cb8e93eedcbf",
        "authorId" : "afb638dd-5cee-447e-a73e-34c2f1d333df",
        "body" : "I'm not sure. We might need to add a ticket to investigate this and remove the duplication if possible.",
        "createdAt" : "2019-10-16T11:02:12Z",
        "updatedAt" : "2019-12-10T17:09:53Z",
        "lastEditedBy" : "afb638dd-5cee-447e-a73e-34c2f1d333df",
        "tags" : [
        ]
      }
    ],
    "commit" : "8ab226263a18fa16afdb6fd14da63544095a8937",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +101,105 @@\t// If not set, the default HPAScalingRules for scale up and scale down are used.\n\t// +optional\n\tBehavior *HorizontalPodAutoscalerBehavior\n}\n"
  },
  {
    "id" : "d189fb21-6f80-40ff-9872-55ebb6e10cf2",
    "prId" : 74525,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/74525#pullrequestreview-305720965",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9fd2bc3a-fdb9-4ca4-8a3c-ee82e2695458",
        "parentId" : null,
        "authorId" : "35b74c0f-1e37-4ee0-81db-f5e9449774bc",
        "body" : "reword -> `so that the number of replicas is not changed instantly when the metrics change but the safest value..`",
        "createdAt" : "2019-10-23T08:41:04Z",
        "updatedAt" : "2019-12-10T17:09:53Z",
        "lastEditedBy" : "35b74c0f-1e37-4ee0-81db-f5e9449774bc",
        "tags" : [
        ]
      }
    ],
    "commit" : "8ab226263a18fa16afdb6fd14da63544095a8937",
    "line" : 46,
    "diffHunk" : "@@ -1,1 +138,142 @@// They can limit the scaling velocity by specifying scaling policies.\n// They can prevent flapping by specifying the stabilization window, so that the\n// number of replicas is not set instantly, instead, the safest value from the stabilization\n// window is chosen.\ntype HPAScalingRules struct {"
  },
  {
    "id" : "f856f98e-dcbe-4966-8f1a-44ebc370b0ea",
    "prId" : 74525,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/74525#pullrequestreview-316280430",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2db4722e-233d-4782-a675-81c42ea87210",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "What are the bounds on this?",
        "createdAt" : "2019-11-13T01:31:49Z",
        "updatedAt" : "2019-12-10T17:09:53Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "a1e5d7be-a900-4f36-bb9d-804114923195",
        "parentId" : "2db4722e-233d-4782-a675-81c42ea87210",
        "authorId" : "afb638dd-5cee-447e-a73e-34c2f1d333df",
        "body" : "It must be greater than zero.\r\nWe don't have upper bound limitation for it as it is a pointless limitation that doesn't have any real reason.",
        "createdAt" : "2019-11-13T13:01:05Z",
        "updatedAt" : "2019-12-10T17:09:53Z",
        "lastEditedBy" : "afb638dd-5cee-447e-a73e-34c2f1d333df",
        "tags" : [
        ]
      },
      {
        "id" : "f1041f7d-ff8a-4dbb-9698-788ed5f3f74a",
        "parentId" : "2db4722e-233d-4782-a675-81c42ea87210",
        "authorId" : "afb638dd-5cee-447e-a73e-34c2f1d333df",
        "body" : "Added a comment about \"greater than zero\".",
        "createdAt" : "2019-11-13T14:25:26Z",
        "updatedAt" : "2019-12-10T17:09:53Z",
        "lastEditedBy" : "afb638dd-5cee-447e-a73e-34c2f1d333df",
        "tags" : [
        ]
      }
    ],
    "commit" : "8ab226263a18fa16afdb6fd14da63544095a8937",
    "line" : 82,
    "diffHunk" : "@@ -1,1 +174,178 @@\t// Type is used to specify the scaling policy.\n\tType HPAScalingPolicyType\n\t// Value contains the amount of change which is permitted by the policy.\n\t// It must be greater than zero\n\tValue int32"
  },
  {
    "id" : "b114912e-d5da-47ab-b2e7-2f05806e9d7e",
    "prId" : 74525,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/74525#pullrequestreview-317069638",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "38a546da-f698-4218-bdb9-fe4fe655a8b4",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "OK.  My only real remaining concern is here.\r\n\r\nYou are documenting the default behavior as part of the API, but not crystallizing that into the resource itself.\r\n\r\nWhat we normally do is add code to defaults.go, looking for unset values and setting them to the defaults.  This means that a user who did not specify `scaleUp` when they created the object can read the object back and see what the active values are.  It also means that you can have API v3 with a different default if you need to.\r\n\r\nThis PR is not doing this.  Instead you are assuming defaults deep inside the controller.  If you go this route you can never ever change them because the stored objects have no value set, so any change would be breaking.\r\n\r\nI strongly urge you to do it the normal way.  Do you have good reasons to do it differently?",
        "createdAt" : "2019-11-13T21:54:41Z",
        "updatedAt" : "2019-12-10T17:09:53Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "42ae7f78-73e1-42ea-8afe-6671b6cb06c6",
        "parentId" : "38a546da-f698-4218-bdb9-fe4fe655a8b4",
        "authorId" : "afb638dd-5cee-447e-a73e-34c2f1d333df",
        "body" : "I have implemented it as a part of defaults.go\r\nCould you have another look?",
        "createdAt" : "2019-11-14T16:02:46Z",
        "updatedAt" : "2019-12-10T17:09:53Z",
        "lastEditedBy" : "afb638dd-5cee-447e-a73e-34c2f1d333df",
        "tags" : [
        ]
      }
    ],
    "commit" : "8ab226263a18fa16afdb6fd14da63544095a8937",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +108,112 @@type HorizontalPodAutoscalerBehavior struct {\n\t// scaleUp is scaling policy for scaling Up.\n\t// If not set, the default value is the higher of:\n\t//   * increase no more than 4 pods per 60 seconds\n\t//   * double the number of pods per 60 seconds"
  },
  {
    "id" : "01dfc925-c0a3-4aab-8885-e3a095d9cde7",
    "prId" : 63797,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/63797#pullrequestreview-126163647",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8bccee26-4c93-4528-967d-c08eaef3b2ad",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "Shorten to \"Recommended\" ?  Maybe..",
        "createdAt" : "2018-06-04T20:46:13Z",
        "updatedAt" : "2018-06-06T11:01:22Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "e4477b68-fde8-48e0-80ed-d7cb81f35921",
        "parentId" : "8bccee26-4c93-4528-967d-c08eaef3b2ad",
        "authorId" : "7eb281a6-30d1-44b9-a107-273622373e96",
        "body" : "Not sure about this one.. I would prefer it to be as self-descriptive as possible.",
        "createdAt" : "2018-06-05T14:38:30Z",
        "updatedAt" : "2018-06-06T11:01:22Z",
        "lastEditedBy" : "7eb281a6-30d1-44b9-a107-273622373e96",
        "tags" : [
        ]
      },
      {
        "id" : "83b4b949-f89a-42e9-9985-e0c39ba542f0",
        "parentId" : "8bccee26-4c93-4528-967d-c08eaef3b2ad",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "ACK",
        "createdAt" : "2018-06-05T21:47:53Z",
        "updatedAt" : "2018-06-06T11:01:22Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "390cfec6172fb3efdb5e13b96dcf942bc7bf2124",
    "line" : 189,
    "diffHunk" : "@@ -1,1 +606,610 @@var (\n\t// RecommendationProvided indicates whether the VPA recommender was able to calculate a recommendation.\n\tRecommendationProvided VerticalPodAutoscalerConditionType = \"RecommendationProvided\"\n)\n"
  },
  {
    "id" : "bdecd56a-5db2-4cda-aede-4ec7afbfb578",
    "prId" : 63797,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/63797#pullrequestreview-126507095",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "66e665ed-abaf-4874-a56d-d5fb25b8959a",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "If this is not optional, should it be a pointer?  Looking at other users, it's always pointer=optional and non-pointer=required.  Which is it here?  It seems more common to define it as optional and have nil mean select all.",
        "createdAt" : "2018-06-05T21:39:22Z",
        "updatedAt" : "2018-06-06T11:01:22Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "99f75855-d92f-4cf9-909e-56a3133a97d8",
        "parentId" : "66e665ed-abaf-4874-a56d-d5fb25b8959a",
        "authorId" : "7eb281a6-30d1-44b9-a107-273622373e96",
        "body" : "A null label selector is defined to select no objects (https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors).\r\nThis doesn't make sense for VPA and is rejected at validation time. However I still want to make this field a pointer to force the user to set it explicitly, because an empty selector, while legal, has a very special meaning (match all) and is more likely to be user error than an intended use of the default.\r\nI presume that other APIs followed similar reasoning, because I see many cases of the nil selector being rejected during validation, instead of making the field non-pointer.",
        "createdAt" : "2018-06-05T22:45:52Z",
        "updatedAt" : "2018-06-06T11:01:22Z",
        "lastEditedBy" : "7eb281a6-30d1-44b9-a107-273622373e96",
        "tags" : [
        ]
      },
      {
        "id" : "8046ca41-149b-4dd9-8be0-f3fa581ac8af",
        "parentId" : "66e665ed-abaf-4874-a56d-d5fb25b8959a",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "ok",
        "createdAt" : "2018-06-06T18:46:45Z",
        "updatedAt" : "2018-06-06T18:46:45Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "390cfec6172fb3efdb5e13b96dcf942bc7bf2124",
    "line" : 43,
    "diffHunk" : "@@ -1,1 +460,464 @@\t// A label query that determines the set of pods controlled by the Autoscaler.\n\t// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors\n\tSelector *metav1.LabelSelector\n\n\t// Describes the rules on how changes are applied to the pods."
  }
]