[
  {
    "id" : "aee0a630-84e2-42e7-beea-4a01b0a538a5",
    "prId" : 89963,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/89963#pullrequestreview-391040735",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "34f29ce3-25f6-4b7c-8adf-5f532783f53b",
        "parentId" : null,
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "we are guaranteed that out.Spec.Metrics is non empty?  I guess your test covers that?  It's weird to assume out.Spec.Metrics has length 1 without a special guard to me.  Non obvious in code.",
        "createdAt" : "2020-04-09T17:47:42Z",
        "updatedAt" : "2020-04-09T17:47:43Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "b1d14e66-6604-464b-9f07-f246551b4490",
        "parentId" : "34f29ce3-25f6-4b7c-8adf-5f532783f53b",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "This is unchanged, see https://github.com/kubernetes/kubernetes/pull/89963/files?w=1 for the changes without whitespace. This PR only addresses malformed JSON that would cause unmarshaling errors that would fail the conversion step.",
        "createdAt" : "2020-04-09T17:49:04Z",
        "updatedAt" : "2020-04-09T17:49:51Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "5e32d83d-f07f-401e-ad12-a9c7cfba4729",
        "parentId" : "34f29ce3-25f6-4b7c-8adf-5f532783f53b",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "Convert_v1_HorizontalPodAutoscalerSpec_To_autoscaling_HorizontalPodAutoscalerSpec appears to populate out.Metrics with a single item list when TargetCPUUtilizationPercentage is non-nil. Will check what happens when it is nil.",
        "createdAt" : "2020-04-09T17:53:46Z",
        "updatedAt" : "2020-04-09T17:53:46Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "0438f16a-cc87-46de-88f8-22d2a7d2fd21",
        "parentId" : "34f29ce3-25f6-4b7c-8adf-5f532783f53b",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "yeah, `out.Spec.Metrics` is nil unless populated by `Convert_v1_HorizontalPodAutoscalerSpec_To_autoscaling_HorizontalPodAutoscalerSpec`",
        "createdAt" : "2020-04-09T17:55:07Z",
        "updatedAt" : "2020-04-09T17:55:08Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "c5ab1cff-5e8b-448e-8f3b-3467aa364d62",
        "parentId" : "34f29ce3-25f6-4b7c-8adf-5f532783f53b",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "ok.",
        "createdAt" : "2020-04-09T18:40:44Z",
        "updatedAt" : "2020-04-09T18:40:44Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "79f3f6e9b17c8f280a6e63c04a29145df99b67f8",
    "line" : 96,
    "diffHunk" : "@@ -1,1 +366,370 @@\t\t\t}\n\t\t\tif out.Spec.Metrics != nil {\n\t\t\t\toutMetrics[len(otherMetrics)] = out.Spec.Metrics[0]\n\t\t\t}\n\t\t\tout.Spec.Metrics = outMetrics"
  },
  {
    "id" : "eb4a9422-2b7b-4414-96b8-50113c107129",
    "prId" : 74525,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/74525#pullrequestreview-302558554",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9a68ec08-ae0a-4440-ad83-07d9ad9f191e",
        "parentId" : null,
        "authorId" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "body" : "out.Annotations[autoscaling.BehaviorSpecsAnnotation] may have been assigned on line 355.\r\nIn that case, is json.Unmarshal call below necessary ?",
        "createdAt" : "2019-10-16T02:18:12Z",
        "updatedAt" : "2019-12-10T17:09:53Z",
        "lastEditedBy" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "tags" : [
        ]
      },
      {
        "id" : "2ab1aabd-59eb-455f-b373-4b8d76cfaaae",
        "parentId" : "9a68ec08-ae0a-4440-ad83-07d9ad9f191e",
        "authorId" : "afb638dd-5cee-447e-a73e-34c2f1d333df",
        "body" : "@tedyu: Probably I didn't get your question, could you rephrase it?\r\n\r\nline 355 is part of `Convert_autoscaling_HorizontalPodAutoscaler_To_v1_HorizontalPodAutoscaler` function. I.e., it converts the `autoscaling.HorizontalPodAutoscaler` object of the current version (with behavior) to the v1 version. The v1 version doesn't have behaviors (it's a base version), so that's why we put `behavior` into annotations.\r\n\r\nThe current line (394), is part of `Convert_v1_HorizontalPodAutoscaler_To_autoscaling_HorizontalPodAutoscaler`, i.e. it converts the object back from v1 to the current version. And if there's information about behavior in annotation, we convert it into a usual `autoscaling.HorizontalPodAutoscalerBehavior` field (check line 399).\r\n",
        "createdAt" : "2019-10-16T11:52:03Z",
        "updatedAt" : "2019-12-10T17:09:53Z",
        "lastEditedBy" : "afb638dd-5cee-447e-a73e-34c2f1d333df",
        "tags" : [
        ]
      },
      {
        "id" : "2bbba2d4-81b0-4582-b3f1-7c03fd37f3d9",
        "parentId" : "9a68ec08-ae0a-4440-ad83-07d9ad9f191e",
        "authorId" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "body" : "Due to the way diff is showed, I didn't pay attention to the two func's (as you described).\r\n\r\nThanks for explaining.",
        "createdAt" : "2019-10-16T13:07:01Z",
        "updatedAt" : "2019-12-10T17:09:53Z",
        "lastEditedBy" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "8ab226263a18fa16afdb6fd14da63544095a8937",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +358,362 @@\t}\n\n\tif behaviorEnc, hasConstraints := out.Annotations[autoscaling.BehaviorSpecsAnnotation]; hasConstraints {\n\t\tvar behavior autoscaling.HorizontalPodAutoscalerBehavior\n\t\tif err := json.Unmarshal([]byte(behaviorEnc), &behavior); err != nil {"
  },
  {
    "id" : "35f3fb85-573f-4f1e-94c1-54911449129b",
    "prId" : 36033,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/36033#pullrequestreview-19224801",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "72c3f3e0-8a92-45e1-b707-20b0d2bb2e1a",
        "parentId" : null,
        "authorId" : "c929c906-4dfb-433b-9bc7-1b4b05c176f8",
        "body" : "Do you have unittest for conversions? I couldn't find it.",
        "createdAt" : "2017-01-26T17:39:15Z",
        "updatedAt" : "2017-02-08T03:25:55Z",
        "lastEditedBy" : "c929c906-4dfb-433b-9bc7-1b4b05c176f8",
        "tags" : [
        ]
      },
      {
        "id" : "0660b6d7-ff3d-42ab-824d-e31b83c5bf00",
        "parentId" : "72c3f3e0-8a92-45e1-b707-20b0d2bb2e1a",
        "authorId" : "3a4b4830-dc71-4d7e-a7db-de2453284945",
        "body" : "they're tested by the fuzzer, IIRC, and by a host of other tests, but I can add one if needed.",
        "createdAt" : "2017-01-27T15:27:22Z",
        "updatedAt" : "2017-02-08T03:25:55Z",
        "lastEditedBy" : "3a4b4830-dc71-4d7e-a7db-de2453284945",
        "tags" : [
        ]
      },
      {
        "id" : "fc8c302d-a857-46a3-b4de-eeacbc7a9aa3",
        "parentId" : "72c3f3e0-8a92-45e1-b707-20b0d2bb2e1a",
        "authorId" : "ab8bc7c5-233d-47c1-b03a-767fb930c021",
        "body" : "Yes, please - fuzzer will not test that the metrics are correctly converted (correct struct populated).",
        "createdAt" : "2017-01-31T00:56:15Z",
        "updatedAt" : "2017-02-08T03:25:56Z",
        "lastEditedBy" : "ab8bc7c5-233d-47c1-b03a-767fb930c021",
        "tags" : [
        ]
      }
    ],
    "commit" : "946ecb549e170fdb49897e93ad41513ae3a0deb6",
    "line" : 1,
    "diffHunk" : "@@ -1,1 +-1,3 @@/*\nCopyright 2016 The Kubernetes Authors.\n"
  },
  {
    "id" : "0503ae20-bc87-47c0-ab48-84f715495343",
    "prId" : 36033,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/36033#pullrequestreview-19409902",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7fa5c6c5-8aea-4655-99f2-1c4fcf818d23",
        "parentId" : null,
        "authorId" : "ab8bc7c5-233d-47c1-b03a-767fb930c021",
        "body" : "Is there a reason why we are not using schema/api marshalers and unmarshalers there?",
        "createdAt" : "2017-01-31T01:02:38Z",
        "updatedAt" : "2017-02-08T03:25:56Z",
        "lastEditedBy" : "ab8bc7c5-233d-47c1-b03a-767fb930c021",
        "tags" : [
        ]
      },
      {
        "id" : "1f4a589b-fd35-4292-99ae-1aff850c95ea",
        "parentId" : "7fa5c6c5-8aea-4655-99f2-1c4fcf818d23",
        "authorId" : "3a4b4830-dc71-4d7e-a7db-de2453284945",
        "body" : "`pkg/api/v1/conversion.go` just uses `json.Marshal`, so I figured that was the way to go.",
        "createdAt" : "2017-01-31T20:04:10Z",
        "updatedAt" : "2017-02-08T03:25:56Z",
        "lastEditedBy" : "3a4b4830-dc71-4d7e-a7db-de2453284945",
        "tags" : [
        ]
      }
    ],
    "commit" : "946ecb549e170fdb49897e93ad41513ae3a0deb6",
    "line" : 82,
    "diffHunk" : "@@ -1,1 +80,84 @@\n\tif len(otherMetrics) > 0 {\n\t\totherMetricsEnc, err := json.Marshal(otherMetrics)\n\t\tif err != nil {\n\t\t\treturn err"
  },
  {
    "id" : "08744cf9-bdc2-40ff-a565-080e4af14376",
    "prId" : 36033,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/36033#pullrequestreview-27024203",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c212ee4c-4786-42ec-ae3e-d90489e2913b",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "don't get the argument: why is this not in defaulting anymore?",
        "createdAt" : "2017-03-15T09:15:24Z",
        "updatedAt" : "2017-03-15T09:15:24Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "47b9349f-5e31-4236-80a6-a183aa78d768",
        "parentId" : "c212ee4c-4786-42ec-ae3e-d90489e2913b",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "If I get this correctly, we apply the default depending on annotations (which store the whole `Metrics` slice in v1). This is a pretty strange logic, looking like magic behavior if you only see the v1 version as a projection of v2alpha1.",
        "createdAt" : "2017-03-15T09:26:34Z",
        "updatedAt" : "2017-03-15T09:26:34Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "946ecb549e170fdb49897e93ad41513ae3a0deb6",
    "line" : 138,
    "diffHunk" : "@@ -1,1 +136,140 @@\t// autoscaling/v1 formerly had an implicit default applied in the controller.  In v2alpha1, we apply it explicitly.\n\t// We apply it here, explicitly, since we have access to the full set of metrics from the annotation.\n\tif len(out.Spec.Metrics) == 0 {\n\t\t// no other metrics, no explicit CPU value set\n\t\tout.Spec.Metrics = []autoscaling.MetricSpec{"
  }
]