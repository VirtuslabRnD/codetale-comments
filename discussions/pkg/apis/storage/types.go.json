[
  {
    "id" : "fd1a60cc-faf5-4597-9f87-88319953616a",
    "prId" : 99641,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/99641#pullrequestreview-606630499",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "afc409a1-ee14-4c2f-bb76-8bf2910365d9",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "We have a new `+featureGate=CSIStorageCapacity` tag now! ",
        "createdAt" : "2021-03-05T07:14:36Z",
        "updatedAt" : "2021-03-08T20:00:14Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "f4f9f826-1ac1-414c-bd41-8ef057b0e6ed",
        "parentId" : "afc409a1-ee14-4c2f-bb76-8bf2910365d9",
        "authorId" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "body" : "Does that replace this entire \"This is a beta field and ...\" paragraph or do I add the tag to that?",
        "createdAt" : "2021-03-05T08:27:10Z",
        "updatedAt" : "2021-03-08T20:00:14Z",
        "lastEditedBy" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "tags" : [
        ]
      },
      {
        "id" : "acd25227-1aaf-4c1b-af96-7dc9dce64265",
        "parentId" : "afc409a1-ee14-4c2f-bb76-8bf2910365d9",
        "authorId" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "body" : "The only other place that uses it does so without `+`:\r\nhttps://github.com/kubernetes/kubernetes/commit/72da0b1bb06607f3f3e067f1bb5ce329ec861e1b#r47879733\r\n\r\n",
        "createdAt" : "2021-03-05T10:11:13Z",
        "updatedAt" : "2021-03-08T20:00:14Z",
        "lastEditedBy" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "tags" : [
        ]
      },
      {
        "id" : "12ff8bf4-affc-4b1d-9153-442bed0ed9ae",
        "parentId" : "afc409a1-ee14-4c2f-bb76-8bf2910365d9",
        "authorId" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "body" : "I've left this out because it didn't seem to make any difference in the generated files.",
        "createdAt" : "2021-03-05T10:57:21Z",
        "updatedAt" : "2021-03-08T20:00:14Z",
        "lastEditedBy" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "tags" : [
        ]
      },
      {
        "id" : "6e564860-706e-489a-9259-ffedfa2d76ed",
        "parentId" : "afc409a1-ee14-4c2f-bb76-8bf2910365d9",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "It's new, we don't have a lot of examples yet, and we are not consuming it yet, but we are encouraging people to start setting it.",
        "createdAt" : "2021-03-05T19:47:34Z",
        "updatedAt" : "2021-03-08T20:00:14Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "98d07960-c4db-4727-86fa-453dd988fa8c",
        "parentId" : "afc409a1-ee14-4c2f-bb76-8bf2910365d9",
        "authorId" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "body" : "There seems to be some confusion about the tag. You are saying it should be `+featureGate=CSIStorageCapacity` whereas @nikhita said in https://github.com/kubernetes/kubernetes/pull/98277#discussion_r582558737 that it should be `featureGate=LoadBalancerClass`.\r\n",
        "createdAt" : "2021-03-05T20:04:48Z",
        "updatedAt" : "2021-03-08T20:00:14Z",
        "lastEditedBy" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "tags" : [
        ]
      },
      {
        "id" : "d794e9ae-ecdd-426d-b78a-19995b207569",
        "parentId" : "afc409a1-ee14-4c2f-bb76-8bf2910365d9",
        "authorId" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "body" : "Using plain text (as in the current PR) and then adding the tag with `+featureGate` make sense to me, though, so I don't mind adding that.\r\n",
        "createdAt" : "2021-03-05T20:05:49Z",
        "updatedAt" : "2021-03-08T20:00:14Z",
        "lastEditedBy" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "tags" : [
        ]
      },
      {
        "id" : "f68afdc7-d00b-4612-b59d-4ff229007bf9",
        "parentId" : "afc409a1-ee14-4c2f-bb76-8bf2910365d9",
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "@nikhita can you clarify the format we should use here?",
        "createdAt" : "2021-03-05T23:49:29Z",
        "updatedAt" : "2021-03-08T20:00:14Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "2a7c5fee-45cc-472a-9270-4a706bd58154",
        "parentId" : "afc409a1-ee14-4c2f-bb76-8bf2910365d9",
        "authorId" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "body" : "FWIW, the reason why I prefer `+featureGate` is that it does not end up in the human-readable text like the `featureGate=LoadBalancerClass` in https://github.com/kubernetes/kubernetes/blob/55a5d4faf38b8cc9f65c301b9e16278048336bac/staging/src/k8s.io/api/core/v1/types_swagger_doc_generated.go#L2260\r\n\r\nThat's what we have the full sentence for.",
        "createdAt" : "2021-03-06T08:37:33Z",
        "updatedAt" : "2021-03-08T20:00:14Z",
        "lastEditedBy" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "tags" : [
        ]
      },
      {
        "id" : "30e6499d-675e-454b-980b-911496468430",
        "parentId" : "afc409a1-ee14-4c2f-bb76-8bf2910365d9",
        "authorId" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "body" : "I think we can trust Tim's guidance here. He's formalizing it in a KEP:\r\nhttps://github.com/kubernetes/enhancements/issues/2558\r\n",
        "createdAt" : "2021-03-07T10:03:23Z",
        "updatedAt" : "2021-03-08T20:00:14Z",
        "lastEditedBy" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "tags" : [
        ]
      },
      {
        "id" : "dc963c29-dbd6-4627-84dc-10eda698d37b",
        "parentId" : "afc409a1-ee14-4c2f-bb76-8bf2910365d9",
        "authorId" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "body" : "@nikhita said in https://kubernetes.slack.com/archives/C5P3FE08M/p1615188110025800?thread_ts=1615058923.018400&cid=C5P3FE08M:\r\n\r\n> I think that should be fine because the comment lines with +featureGate will be ignored by the generators, etc now. We can update it after the KEP is finalized.",
        "createdAt" : "2021-03-08T09:44:02Z",
        "updatedAt" : "2021-03-08T20:00:14Z",
        "lastEditedBy" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "tags" : [
        ]
      },
      {
        "id" : "e550da6e-1c71-4448-aefe-6c84d780cc6e",
        "parentId" : "afc409a1-ee14-4c2f-bb76-8bf2910365d9",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "My intention was for it to be metadata:  `+featureGate`.  If we ultimately decide that was wrong, we can always change it, but I suspect this is better ",
        "createdAt" : "2021-03-08T17:40:00Z",
        "updatedAt" : "2021-03-08T20:00:14Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "fdbec5ac-0e4e-4edc-84d8-2bc98c7d9d3d",
        "parentId" : "afc409a1-ee14-4c2f-bb76-8bf2910365d9",
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "It was added to the v1beta types.go. @thockin do you want to add it to the internal types too?\r\n\r\nThere was also question about the semantic of this tag. Does it refer to the feature gate controlling:\r\n- whether or not values are persisted in the API server (ie we drop values if the feature is disabled)\r\n- whether or not this api is functional (the object gets created, but nothing happens because the feature gate is turned off in the consuming components)",
        "createdAt" : "2021-03-08T19:17:07Z",
        "updatedAt" : "2021-03-08T20:00:14Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "ff06a764-a7eb-4364-adaf-b06cb9e07961",
        "parentId" : "afc409a1-ee14-4c2f-bb76-8bf2910365d9",
        "authorId" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "body" : "It is meant to be processed when generating code for OpenAPI documentation, so I'd expect that it is only relevant in the external API.\r\n\r\nRegarding the semantic: this tag is still WIP. I expect that sorting out such details will need further discussion during review of https://github.com/kubernetes/enhancements/pull/2560",
        "createdAt" : "2021-03-08T19:25:06Z",
        "updatedAt" : "2021-03-08T20:00:14Z",
        "lastEditedBy" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "tags" : [
        ]
      }
    ],
    "commit" : "4c7e4c6316077aaf7822b1d4166ef54218ecee80",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +342,346 @@\t// capacity information has been published.\n\t//\n\t// This is a beta field and only available when the CSIStorageCapacity\n\t// feature is enabled. The default is false.\n\t//"
  },
  {
    "id" : "b4b6c001-c4eb-4f58-82f5-e226d0e85407",
    "prId" : 99414,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/99414#pullrequestreview-598206403",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d292f83c-b442-4ab0-9b57-52b4813ef904",
        "parentId" : null,
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "I think you also need to regenerate the openapi specs. See https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api_changes.md#generate-code ",
        "createdAt" : "2021-02-25T03:48:52Z",
        "updatedAt" : "2021-02-25T05:23:55Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "1412ab0b-0364-4977-8747-7a8db08a20aa",
        "parentId" : "d292f83c-b442-4ab0-9b57-52b4813ef904",
        "authorId" : "d10fef96-5a18-44e7-b23e-735de7561af7",
        "body" : "Done",
        "createdAt" : "2021-02-25T05:24:08Z",
        "updatedAt" : "2021-02-25T05:24:08Z",
        "lastEditedBy" : "d10fef96-5a18-44e7-b23e-735de7561af7",
        "tags" : [
        ]
      }
    ],
    "commit" : "819a3be0843d959f3d6f26058b32a4f13af1cd39",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +159,163 @@\t// is populated only for the CSIMigration feature. It contains\n\t// translated fields from a pod's inline VolumeSource to a\n\t// PersistentVolumeSpec. This field is beta-level and is only\n\t// honored by servers that enabled the CSIMigration feature.\n\t// +optional"
  },
  {
    "id" : "81f57040-663c-4357-be63-63f4c47d3a70",
    "prId" : 99414,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/99414#pullrequestreview-598208651",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6d8ec58c-94f3-493b-b6a4-94bd72f7b37a",
        "parentId" : null,
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "The versioned types.go (v1beta, v1) also need to be updated",
        "createdAt" : "2021-02-25T03:49:38Z",
        "updatedAt" : "2021-02-25T05:23:55Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "5ec447bf-2a7c-4802-84b4-d41239f93df4",
        "parentId" : "6d8ec58c-94f3-493b-b6a4-94bd72f7b37a",
        "authorId" : "d10fef96-5a18-44e7-b23e-735de7561af7",
        "body" : "Done. I have always been curious what's the relationship between staging/apis and pkg/apis",
        "createdAt" : "2021-02-25T05:24:34Z",
        "updatedAt" : "2021-02-25T05:24:35Z",
        "lastEditedBy" : "d10fef96-5a18-44e7-b23e-735de7561af7",
        "tags" : [
        ]
      },
      {
        "id" : "c2928383-0575-4498-9363-59bf9d5f81bd",
        "parentId" : "6d8ec58c-94f3-493b-b6a4-94bd72f7b37a",
        "authorId" : "d10fef96-5a18-44e7-b23e-735de7561af7",
        "body" : "Okay, it is all addressed in the doc: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api_changes.md#generate-code",
        "createdAt" : "2021-02-25T05:30:23Z",
        "updatedAt" : "2021-02-25T05:30:23Z",
        "lastEditedBy" : "d10fef96-5a18-44e7-b23e-735de7561af7",
        "tags" : [
        ]
      }
    ],
    "commit" : "819a3be0843d959f3d6f26058b32a4f13af1cd39",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +159,163 @@\t// is populated only for the CSIMigration feature. It contains\n\t// translated fields from a pod's inline VolumeSource to a\n\t// PersistentVolumeSpec. This field is beta-level and is only\n\t// honored by servers that enabled the CSIMigration feature.\n\t// +optional"
  },
  {
    "id" : "345185b7-b2ec-4a7f-bb2b-2375e9ad5e08",
    "prId" : 93130,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/93130#pullrequestreview-489789822",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0690b3fa-a59b-4e98-8446-1b669455b4a7",
        "parentId" : null,
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "Add a comment that this field is alpha-level and requires the feature gate to be set. Ditto everywhere",
        "createdAt" : "2020-09-15T19:15:26Z",
        "updatedAt" : "2020-11-12T17:26:59Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "1bae5863-0280-4868-be24-6f6a67fdcb36",
        "parentId" : "0690b3fa-a59b-4e98-8446-1b669455b4a7",
        "authorId" : "f64c354b-61cb-4b89-b58f-f464e7ad4f94",
        "body" : "done",
        "createdAt" : "2020-09-16T16:16:52Z",
        "updatedAt" : "2020-11-12T17:26:59Z",
        "lastEditedBy" : "f64c354b-61cb-4b89-b58f-f464e7ad4f94",
        "tags" : [
        ]
      }
    ],
    "commit" : "d2859cd89b0ec00054219ed9988c6dccff39a0c8",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +358,362 @@\t// CSIServiceAccountToken feature is enabled.\n\t//\n\t// +optional\n\t// +listType=atomic\n\tTokenRequests []TokenRequest"
  },
  {
    "id" : "00780fd7-9b19-4a34-a4d9-4a7c6f73df14",
    "prId" : 93130,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/93130#pullrequestreview-521045548",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "abe2d459-df81-4b74-9b60-41cc913b32d3",
        "parentId" : null,
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "If this is always set by defaulting in the internal version, then it should be a `bool`, not a `*bool`.",
        "createdAt" : "2020-10-30T17:56:45Z",
        "updatedAt" : "2020-11-12T17:26:59Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      },
      {
        "id" : "0e51be0a-e90a-485d-9113-882f97bec8ed",
        "parentId" : "abe2d459-df81-4b74-9b60-41cc913b32d3",
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "I recall in general, we've had to always make new fields pointers. Is this different for bool types? My understanding is defaulting is done per external version, not internal version. \r\n\r\nIf it was not a pointer, would there be problems if you actually wanted the default to be true, but it ended up being defaulted to false by some client that doesn't know about the field?",
        "createdAt" : "2020-10-30T18:16:39Z",
        "updatedAt" : "2020-11-12T17:26:59Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "1ddcc98b-b349-4e88-9524-6876ebf3a1e3",
        "parentId" : "abe2d459-df81-4b74-9b60-41cc913b32d3",
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "The difference i'm talking about is internal vs external api versions.\r\n\r\nWe use *bool so we can detect false vs unset in the external type. If the field is always defaulted to either true or false before we convert to the internal, then there's no need for it to be a pointer in the internal type. If it is a pointer in the internal type, you end up with either:\r\n\r\n* a bunch of unnecessary nil checking\r\n* dereferences with out nil checking where it's difficult to ever know if the dereference is safe\r\n* some combo\r\n\r\nMy inclination in the past has been to try to eliminate pointer types during conversion where possible (i.e. where defaulting has occurred). I'm not up to date on the conventions though. @liggitt?",
        "createdAt" : "2020-10-30T18:29:02Z",
        "updatedAt" : "2020-11-12T17:26:59Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      },
      {
        "id" : "4383626d-fa12-4a6e-a407-45a28a35ded0",
        "parentId" : "abe2d459-df81-4b74-9b60-41cc913b32d3",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "fields we want omitted in serialization if the feature is disabled have to be pointers+omitempty in the versioned structs\r\n\r\nmaking the internal version a non-pointer means versioned->internal conversion turns a nil into a non-nil, and then internal->versioned produces a non-nil pointer value which will get serialized",
        "createdAt" : "2020-10-30T20:05:06Z",
        "updatedAt" : "2020-11-12T17:26:59Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "9ba127ef-8d75-4984-ae70-ed879c8c01bf",
        "parentId" : "abe2d459-df81-4b74-9b60-41cc913b32d3",
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "Ok, seems like this is cleanup we can do when this feature graduates to beta.",
        "createdAt" : "2020-10-30T21:26:55Z",
        "updatedAt" : "2020-11-12T17:26:59Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      }
    ],
    "commit" : "d2859cd89b0ec00054219ed9988c6dccff39a0c8",
    "line" : 40,
    "diffHunk" : "@@ -1,1 +374,378 @@\t//\n\t// +optional\n\tRequiresRepublish *bool\n}\n"
  },
  {
    "id" : "ee5c5d8d-c079-4c2f-80c9-2dd520d85bcf",
    "prId" : 93130,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/93130#pullrequestreview-520911934",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c08c22d8-1a51-4458-ba6f-9c82e379db84",
        "parentId" : null,
        "authorId" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "body" : "Same. Consider removing ptr.",
        "createdAt" : "2020-10-30T17:57:06Z",
        "updatedAt" : "2020-11-12T17:26:59Z",
        "lastEditedBy" : "392f7c7a-6820-4848-94e2-2b8e009fec9d",
        "tags" : [
        ]
      }
    ],
    "commit" : "d2859cd89b0ec00054219ed9988c6dccff39a0c8",
    "line" : 59,
    "diffHunk" : "@@ -1,1 +423,427 @@\t//\n\t// +optional\n\tExpirationSeconds *int64\n}\n"
  },
  {
    "id" : "e4fa4908-120c-4a89-ace6-85e1ef82133d",
    "prId" : 93130,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/93130#pullrequestreview-521280980",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1c2e1ea9-4cab-4792-a23c-8838fc2cf044",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "comments in this file also apply to the versioned types.go files",
        "createdAt" : "2020-10-30T17:59:46Z",
        "updatedAt" : "2020-11-12T17:26:59Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "f611af5a-0a78-493f-a8e4-0eefa72cca46",
        "parentId" : "1c2e1ea9-4cab-4792-a23c-8838fc2cf044",
        "authorId" : "f64c354b-61cb-4b89-b58f-f464e7ad4f94",
        "body" : "done",
        "createdAt" : "2020-11-02T00:39:25Z",
        "updatedAt" : "2020-11-12T17:26:59Z",
        "lastEditedBy" : "f64c354b-61cb-4b89-b58f-f464e7ad4f94",
        "tags" : [
        ]
      }
    ],
    "commit" : "d2859cd89b0ec00054219ed9988c6dccff39a0c8",
    "line" : 1,
    "diffHunk" : "@@ -1,1 +335,339 @@\t// This is an alpha field and only available when the CSIStorageCapacity\n\t// feature is enabled. The default is false.\n\t//\n\t// +optional\n\tStorageCapacity *bool"
  },
  {
    "id" : "ca96f0f7-ffa7-41f5-a8a7-406b5c872692",
    "prId" : 93130,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/93130#pullrequestreview-528584130",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bb18316d-4f5e-4b0b-8885-fcfa22903ab7",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "is there a maximum number of allowed token requests? should there be? more than 2-3 seems questionable to me",
        "createdAt" : "2020-11-11T18:57:26Z",
        "updatedAt" : "2020-11-12T17:26:59Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "ca784eac-c372-4bff-8191-7979aac0ca34",
        "parentId" : "bb18316d-4f5e-4b0b-8885-fcfa22903ab7",
        "authorId" : "f64c354b-61cb-4b89-b58f-f464e7ad4f94",
        "body" : "in case of secrets store csi driver, they require at least 3 audiences for providers: vault, azure, gcp... why we would limit the maximum number? we'd defer this decision to cluster administrators. ",
        "createdAt" : "2020-11-11T22:33:20Z",
        "updatedAt" : "2020-11-12T17:26:59Z",
        "lastEditedBy" : "f64c354b-61cb-4b89-b58f-f464e7ad4f94",
        "tags" : [
        ]
      }
    ],
    "commit" : "d2859cd89b0ec00054219ed9988c6dccff39a0c8",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +360,364 @@\t// +optional\n\t// +listType=atomic\n\tTokenRequests []TokenRequest\n\n\t// RequiresRepublish indicates the CSI driver wants `NodePublishVolume`"
  },
  {
    "id" : "900f0f8f-8743-4e47-863f-e6ed04b9f922",
    "prId" : 92387,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/92387#pullrequestreview-442006526",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "068440d9-6a49-49fe-a95a-d2a2c8ab0421",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "What happens if a candidate node matches more than one capacity?  E.g.\r\n\r\n```\r\nCSIStorageCapacity x {\r\n  StorageClassName: standard\r\n  NodeTopology:\r\n    MatchLabels:\r\n      zone: east1\r\n  Capacity: 10Gi\r\n}\r\n\r\nCSIStorageCapacity y {\r\n  StorageClassName: standard\r\n  NodeTopology:\r\n    MatchLabels:\r\n      region: east\r\n  Capacity: 1Gi\r\n}\r\n```\r\n\r\nIn this case,one is not a superset of the other as defined.  I can maybe assume that region is a superset of zone (though that's still pending in a KEP) but storage still allows other topology keys.\r\n\r\nwhat is a consumer of CSIStorageCapacity supposed to do in this case?",
        "createdAt" : "2020-07-02T20:28:14Z",
        "updatedAt" : "2020-07-08T06:02:58Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "b18e8eba-c8cc-41cf-9be1-3c6594f97626",
        "parentId" : "068440d9-6a49-49fe-a95a-d2a2c8ab0421",
        "authorId" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "body" : "That's not really a conflict. If a node has access to both of these and the volume is smaller than 10Gi, then it's fine to go ahead and pick the node. The storage system then gets to decide where exactly it provisions the volume, just as it does now for volumes with immediate binding. What matters is that the volume can be made usable by the chosen node.\r\n\r\nA conflict would be when there are two objects with the exact same `StorageClassName` and `NodeTopology` but different capacity. This situation is not allowed and the producer is supposed to avoid it. The consumer could try to detect it, but currently doesn't because it would imply iterating over all objects instead of stopping at the first one - IMHO it's not worth the cost because it really shouldn't happen.\r\n\r\n\r\n\r\n",
        "createdAt" : "2020-07-02T20:42:32Z",
        "updatedAt" : "2020-07-08T06:02:58Z",
        "lastEditedBy" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "tags" : [
        ]
      }
    ],
    "commit" : "30f93802a70f988bee901a6d272883e20eafad57",
    "line" : 81,
    "diffHunk" : "@@ -1,1 +488,492 @@\t//\n\t// +optional\n\tNodeTopology *metav1.LabelSelector\n\n\t// The name of the StorageClass that the reported capacity applies to."
  },
  {
    "id" : "2255a2a1-5ca9-4583-9ac6-28284a428288",
    "prId" : 92001,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/92001#pullrequestreview-441220628",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "96c45457-5c57-4848-9194-9e42b64fedd8",
        "parentId" : null,
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "For each of these options, can you provide an example of when a driver would choose it?",
        "createdAt" : "2020-07-01T21:55:16Z",
        "updatedAt" : "2020-07-12T03:29:51Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      }
    ],
    "commit" : "ade2f83685faf1b1f869fe321c4fd9c8a002d3fc",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +345,349 @@type FSGroupPolicy string\n\nconst (\n\t// ReadWriteOnceWithFSTypeFSGroupPolicy indicates that each volume will be examined\n\t// to determine if the volume ownership and permissions"
  },
  {
    "id" : "78586552-4507-4f72-836c-99090f626d61",
    "prId" : 92001,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/92001#pullrequestreview-450794497",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1ffaef62-326e-448c-85d9-43fccab7684f",
        "parentId" : null,
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "how about something like \"Kubernetes will change the permissions and ownership of every file in the volume\"",
        "createdAt" : "2020-07-09T20:32:21Z",
        "updatedAt" : "2020-07-12T03:29:51Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "69f68972-d45b-43c6-9cee-7985360e97f7",
        "parentId" : "1ffaef62-326e-448c-85d9-43fccab7684f",
        "authorId" : "1a46cba5-dd9b-4c03-b94c-4dbfb64198e4",
        "body" : "Addressed in https://github.com/kubernetes/kubernetes/pull/93195 ",
        "createdAt" : "2020-07-17T16:25:48Z",
        "updatedAt" : "2020-07-17T16:25:48Z",
        "lastEditedBy" : "1a46cba5-dd9b-4c03-b94c-4dbfb64198e4",
        "tags" : [
        ]
      }
    ],
    "commit" : "ade2f83685faf1b1f869fe321c4fd9c8a002d3fc",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +356,360 @@\n\t// FileFSGroupPolicy indicates that CSI driver supports volume ownership\n\t// and permission change via fsGroup, and Kubernetes may use fsGroup\n\t// to change permissions and ownership of the volume to match user requested fsGroup in\n\t// the pod's SecurityPolicy regardless of fstype or access mode."
  },
  {
    "id" : "9375aad9-8235-4098-9875-228a8dabb450",
    "prId" : 92001,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/92001#pullrequestreview-450794569",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ed24bb3d-7cca-4ab4-911a-eccb213e4b41",
        "parentId" : null,
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "with the fsgruopchangepolicy, it doesn't always change right? Maybe it should be something like \"Use this mode if Kubernetes should modify the permissions and ownership of the volume\"",
        "createdAt" : "2020-07-09T20:34:27Z",
        "updatedAt" : "2020-07-12T03:29:51Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "ecbf3a5f-161a-4d17-b5d0-3298e484fda4",
        "parentId" : "ed24bb3d-7cca-4ab4-911a-eccb213e4b41",
        "authorId" : "1a46cba5-dd9b-4c03-b94c-4dbfb64198e4",
        "body" : "Addressed in https://github.com/kubernetes/kubernetes/pull/93195 ",
        "createdAt" : "2020-07-17T16:25:54Z",
        "updatedAt" : "2020-07-17T16:25:54Z",
        "lastEditedBy" : "1a46cba5-dd9b-4c03-b94c-4dbfb64198e4",
        "tags" : [
        ]
      }
    ],
    "commit" : "ade2f83685faf1b1f869fe321c4fd9c8a002d3fc",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +359,363 @@\t// to change permissions and ownership of the volume to match user requested fsGroup in\n\t// the pod's SecurityPolicy regardless of fstype or access mode.\n\t// This mode should be defined if the fsGroup is expected to always change on mount\n\tFileFSGroupPolicy FSGroupPolicy = \"File\"\n"
  },
  {
    "id" : "80caae06-439b-4180-aa8e-ff350c3a0852",
    "prId" : 92001,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/92001#pullrequestreview-450794640",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ee05713f-aa77-463f-a28c-3e805f3a079c",
        "parentId" : null,
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "Mention the default here too",
        "createdAt" : "2020-07-09T20:35:26Z",
        "updatedAt" : "2020-07-12T03:29:51Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "6e26ad17-c731-43f9-ab86-46a3cd1601dd",
        "parentId" : "ee05713f-aa77-463f-a28c-3e805f3a079c",
        "authorId" : "1a46cba5-dd9b-4c03-b94c-4dbfb64198e4",
        "body" : "Addressed in https://github.com/kubernetes/kubernetes/pull/93195 ",
        "createdAt" : "2020-07-17T16:25:59Z",
        "updatedAt" : "2020-07-17T16:25:59Z",
        "lastEditedBy" : "1a46cba5-dd9b-4c03-b94c-4dbfb64198e4",
        "tags" : [
        ]
      }
    ],
    "commit" : "ade2f83685faf1b1f869fe321c4fd9c8a002d3fc",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +282,286 @@\t// Refer to the specific FSGroupPolicy values for additional details.\n\t// This field is alpha-level, and is only honored by servers\n\t// that enable the CSIVolumeFSGroupPolicy feature gate.\n\t// +optional\n\tFSGroupPolicy *FSGroupPolicy"
  },
  {
    "id" : "4310d21f-376f-40ba-b1df-cd1950a31834",
    "prId" : 91939,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/91939#pullrequestreview-429518863",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7f8f912a-256c-47be-947b-7e9ea00376a5",
        "parentId" : null,
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "Should this be required? A plugin needs to implement topology to support this feature.",
        "createdAt" : "2020-06-10T19:08:57Z",
        "updatedAt" : "2020-07-03T19:55:18Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "17fe20fd-a3ae-4a22-841c-6cb1ef677e2a",
        "parentId" : "7f8f912a-256c-47be-947b-7e9ea00376a5",
        "authorId" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "body" : "That a plugin needs to implement topology was a simplification that we made for the implementation of the external-provisioner changes.\r\n\r\nI think it's better to define the API such that it is a bit more flexible when that flexibility doesn't cause problems (which is the case here - it's basically just an additional if check).\r\n",
        "createdAt" : "2020-06-12T07:33:17Z",
        "updatedAt" : "2020-07-03T19:55:18Z",
        "lastEditedBy" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "tags" : [
        ]
      }
    ],
    "commit" : "9a66e8e1b5820027c1747cff052d335e29597fc2",
    "line" : 80,
    "diffHunk" : "@@ -1,1 +487,491 @@\t// immutable.\n\t//\n\t// +optional\n\tNodeTopology *metav1.LabelSelector\n"
  },
  {
    "id" : "5df1e656-7ee4-406f-ab27-ea3c0c0a5144",
    "prId" : 91939,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/91939#pullrequestreview-438588331",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9f3e7138-8148-42d4-aebc-efbcd7b804d1",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "As CSI grows more and more optional capabilities, do we want the API to evolve to a list of specific bool fields?  Or do we want an enumerated \"capability list\"?  \r\n\r\nIn general, we try to eschew `bool`, but it seems appropriate for these cases.  If we keep that, maybe we want to sub-struct here?  e.g. `capabilites.storageCapacity` so that would expand more cleanly when we inevitably have a second, third, fourth bool?",
        "createdAt" : "2020-06-25T16:19:17Z",
        "updatedAt" : "2020-07-03T19:55:18Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "2a6e93cb-f771-4cb2-8ec4-ca089416388e",
        "parentId" : "9f3e7138-8148-42d4-aebc-efbcd7b804d1",
        "authorId" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "body" : "For capabilities, I think booleans with one per capability are fine.\r\n\r\nBut this might become more than that: besides opting into the new scheduler behavior, we might one day also want additional parameters for how the scheduler is meant to behave.\r\n\r\nTherefore\r\n```\r\ntype CSIStorageCapacityCheck struct {\r\n    Enabled bool\r\n}\r\n```\r\nmakes sense to me. Should that then be embedded directly into `CSIDriver` (i.e. no pointer)? \r\n",
        "createdAt" : "2020-06-25T18:56:18Z",
        "updatedAt" : "2020-07-03T19:55:18Z",
        "lastEditedBy" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "tags" : [
        ]
      },
      {
        "id" : "870fce29-d5cb-4fc0-a100-cfad4415d0d7",
        "parentId" : "9f3e7138-8148-42d4-aebc-efbcd7b804d1",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "So I can ask the same question again - if there will one day be several of these, do they want to be in their own struct?\r\n\r\ne.g.\r\n\r\n```\r\ntype CSIDriver {\r\n  //...\r\n  StorageCapacity *StorageCapacityParams\r\n  OtherFeature *OtherFeatureParams\r\n  YetAnother *YetAnotherParams\r\n}\r\n```\r\n\r\nvs\r\n\r\n```\r\ntype CSIDriver {\r\n  //...\r\n  Features *CSIDriverFeatures\r\n}\r\n\r\ntype CSIDriverFeatures {\r\n  StorageCapacity *StorageCapacityParams\r\n  OtherFeature *OtherFeatureParams\r\n  YetAnother *YetAnotherParams\r\n}\r\n```\r\n\r\nSomething is still optional...",
        "createdAt" : "2020-06-25T22:19:24Z",
        "updatedAt" : "2020-07-03T19:55:18Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "e27ded33-c8ff-4f7c-a35b-ea7e3d62e825",
        "parentId" : "9f3e7138-8148-42d4-aebc-efbcd7b804d1",
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "We actually do have 2 more features being added to CSIDriver related to fsgroup and selinux. Although right now, every parameter in CSIDriver is about a feature. I'm not sure what we would put alongside `Features` in the top level. cc @jsafrane ",
        "createdAt" : "2020-06-25T23:14:45Z",
        "updatedAt" : "2020-07-03T19:55:18Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "e4db2be8-c4f6-424e-b8f2-4882adb6c946",
        "parentId" : "9f3e7138-8148-42d4-aebc-efbcd7b804d1",
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "For the scenario where we may want to consider different modes of operation, then the guidance is to use a string instead of a bool so that we can expand to new behaviors in the future.",
        "createdAt" : "2020-06-25T23:19:13Z",
        "updatedAt" : "2020-07-03T19:55:18Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "be9858dc-4d48-4e1e-a5b1-7e506b49f323",
        "parentId" : "9f3e7138-8148-42d4-aebc-efbcd7b804d1",
        "authorId" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "body" : "So is the conclusion that `StorageCapacity` should be a string with (currently) two values, `StorageCapacityNone = \"\"` (the default) and `StorageCapacityCheck = Check` for \"driver provides storage capacity, check it during provisioning\"?\r\n",
        "createdAt" : "2020-06-26T06:33:41Z",
        "updatedAt" : "2020-07-03T19:55:18Z",
        "lastEditedBy" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "tags" : [
        ]
      },
      {
        "id" : "33d99bc7-bacf-43ae-92d0-5416a29cd3c9",
        "parentId" : "9f3e7138-8148-42d4-aebc-efbcd7b804d1",
        "authorId" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "body" : "Or perhaps we need to reserve the empty string for `StorageCapacityUnknown` for drivers that don't specify anything explicitly? The new values then are `StorageCapacityCheck = Check` and `StorageCapacityIgnore = Ignore`. Suggestions for better names welcome...",
        "createdAt" : "2020-06-26T07:10:01Z",
        "updatedAt" : "2020-07-03T19:55:18Z",
        "lastEditedBy" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "tags" : [
        ]
      },
      {
        "id" : "2589c2aa-9764-46f2-b864-9168b512a58d",
        "parentId" : "9f3e7138-8148-42d4-aebc-efbcd7b804d1",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "two parts:\r\n\r\n1) Should we have a sub-struct?  I am fine to not have one if you think this is consistent with other fields in the type. Your call.\r\n\r\n2) Bool or enum?  I generally try to avoid bools, but I am not close enough to this to make an argument about whether this and other fields are likely to have 3rd options, and whether string-ness has negative impact on the API.\r\n\r\nI do prefer explicit values (\"NotSupported\" or \"Ignore\") to empty strings and the defaulting logic supports that. ",
        "createdAt" : "2020-06-26T19:39:09Z",
        "updatedAt" : "2020-07-03T19:55:18Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "79037f05-a481-4f66-b88e-c1b5fab08e95",
        "parentId" : "9f3e7138-8148-42d4-aebc-efbcd7b804d1",
        "authorId" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "body" : "I don't think we need a sub-struct, so let's rule that out.\r\n\r\nI like strings better and they should work equally well. My only concern is that it is then inconsistent with the rest of the `CSIDriver` API where pointer to bool was used. I'll let @msau42 decide - strings or bool? If I don't hear something, then I'll switch to strings.\r\n\r\n> I do prefer explicit values (\"NotSupported\" or \"Ignore\") to empty strings and the defaulting logic supports that.\r\n\r\nThat means directly embedding a string (not a pointer to a string), right?\r\n\r\nI prefer \"storageCapacity: Ignore\" (default) and \"storageCapacity: Check\", with `StorageCapacityIgnore` and `StorageCapacityCheck` as names for the constants in Go.\r\n\r\n\"NotSupported\" is less accurate because it might be supported and just not complete yet (i.e. in the rollout phase). If anyone cares about that distinction, then \"NotSupported\" could become a third value in the future.\r\n\r\nOr perhaps add it already now? It's not a big difference and feels more natural than \"Ignore\" for a driver that truly doesn't support the feature. So many choices...\r\n\r\n",
        "createdAt" : "2020-06-26T19:59:35Z",
        "updatedAt" : "2020-07-03T19:55:18Z",
        "lastEditedBy" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "tags" : [
        ]
      },
      {
        "id" : "28b22242-3da0-4976-bf28-6c198b14bcf3",
        "parentId" : "9f3e7138-8148-42d4-aebc-efbcd7b804d1",
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "Do you think we will have a 3rd mode of operation in the future? \"Check\", I think is too broad. Any future type would also probably involving checking, but perhaps with some different semantic.",
        "createdAt" : "2020-06-26T20:19:10Z",
        "updatedAt" : "2020-07-03T19:55:18Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "be30f967-200b-43c8-9497-2a2f39139410",
        "parentId" : "9f3e7138-8148-42d4-aebc-efbcd7b804d1",
        "authorId" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "body" : "So what would you prefer? Perhaps \"StorageCapacity: Ignore\" (default) and \"StorageCapacity: RequiredForPodScheduling\"?\r\n",
        "createdAt" : "2020-06-26T20:31:12Z",
        "updatedAt" : "2020-07-03T19:55:18Z",
        "lastEditedBy" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "tags" : [
        ]
      },
      {
        "id" : "be9517b7-57c4-404e-82f2-d8902898989f",
        "parentId" : "9f3e7138-8148-42d4-aebc-efbcd7b804d1",
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "We discussed offline and can't think of a scenario where we would want to add a 3rd mode in the future. The potential future use cases we thought about, max volume capacity, and total capacity, could be accomplished by adding new fields to the capacity object, but doesn't need to be distinguished in the csidriver object.\r\n\r\nSo I think a bool is fine",
        "createdAt" : "2020-06-26T20:52:39Z",
        "updatedAt" : "2020-07-03T19:55:18Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      }
    ],
    "commit" : "9a66e8e1b5820027c1747cff052d335e29597fc2",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +329,333 @@\t//\n\t// +optional\n\tStorageCapacity *bool\n}\n"
  },
  {
    "id" : "4e94da77-93a7-4633-b37b-ef58220b6846",
    "prId" : 91939,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/91939#pullrequestreview-439141627",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "80a48594-230b-419c-85f9-0ac085e7c789",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "Thanks for documenting the unset semantic.  What is the semantic for a zone or StorageClass that does not have a `CSIStorageCapacity` resource at all?",
        "createdAt" : "2020-06-25T16:37:10Z",
        "updatedAt" : "2020-07-03T19:55:18Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "19b55c3c-6f66-4cfd-b882-7d880e4a1a80",
        "parentId" : "80a48594-230b-419c-85f9-0ac085e7c789",
        "authorId" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "body" : "That also means that this zone + storage class currently have no capacity left. This is important because the storage class parameters might select a certain pool that is simply not in the zone, and therefore the capacity would always be zero. Such combinations shouldn't have to be stored in etcd.\r\n\r\nIt's debatable whether a `CSIStorageCapacity` object with zero capacity then should be allowed at all. I think it makes sense because the semantic is clear and in the future we may want to allow objects where `Capacity` is unset or zero and some other fields are used instead.\r\n",
        "createdAt" : "2020-06-25T19:18:13Z",
        "updatedAt" : "2020-07-03T19:55:18Z",
        "lastEditedBy" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "tags" : [
        ]
      },
      {
        "id" : "0270e898-23c1-4c7a-96c9-2c3d07364c92",
        "parentId" : "80a48594-230b-419c-85f9-0ac085e7c789",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "How does one enable this feature on an existing cluster?  If you enable it in the CSIDriver, there will be no capacity, so any volume requests will fail.  Do you have to pre-populate all the capacity resources before you enable the scheduler to consider capacity?\r\n\r\nAre there any bootstrapping considerations for new clusters?",
        "createdAt" : "2020-06-25T22:14:08Z",
        "updatedAt" : "2020-07-03T19:55:18Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "f506ae10-a58b-4e4c-ad3b-f0e83606724c",
        "parentId" : "80a48594-230b-419c-85f9-0ac085e7c789",
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "Yeah it's a two step process. First the driver needs to be updated so that the capacity resources are created, and then you can flip the bit in CSIDriver to tell the scheduler to start looking at it.",
        "createdAt" : "2020-06-25T23:16:47Z",
        "updatedAt" : "2020-07-03T19:55:18Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "f5aaeabd-4662-410f-8145-9cc90bb8fac2",
        "parentId" : "80a48594-230b-419c-85f9-0ac085e7c789",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "Is that well documented?  Eg. this enable field could say something about that :)",
        "createdAt" : "2020-06-26T19:39:45Z",
        "updatedAt" : "2020-07-03T19:55:18Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "91b989b3-0a86-4602-83e7-c861479c094d",
        "parentId" : "80a48594-230b-419c-85f9-0ac085e7c789",
        "authorId" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "body" : "It's in the KEP and it's probably also going to be in the end-user documentation, but I can also already add a comment here saying something about the intention.\r\n",
        "createdAt" : "2020-06-26T19:46:03Z",
        "updatedAt" : "2020-07-03T19:55:18Z",
        "lastEditedBy" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "tags" : [
        ]
      },
      {
        "id" : "6dc2bf3a-d703-4c45-aa0e-e12c5f3623ab",
        "parentId" : "80a48594-230b-419c-85f9-0ac085e7c789",
        "authorId" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "body" : "Done.\r\n",
        "createdAt" : "2020-06-29T13:28:27Z",
        "updatedAt" : "2020-07-03T19:55:19Z",
        "lastEditedBy" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "tags" : [
        ]
      }
    ],
    "commit" : "9a66e8e1b5820027c1747cff052d335e29597fc2",
    "line" : 98,
    "diffHunk" : "@@ -1,1 +505,509 @@\t// The available capacity, in bytes, of the storage that can be used\n\t// to provision volumes. If not set, that information is currently\n\t// unavailable and treated like zero capacity.\n\t//\n\t// +optional"
  },
  {
    "id" : "79319981-b3be-4fca-b575-fcee24f8a9e0",
    "prId" : 91939,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/91939#pullrequestreview-439462124",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "937b55b0-de9d-4c94-a8bb-995016b20c34",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "Is unset valuable enough to keep as yet another mode that consumers must be aware of?  Why not just default that to 0?",
        "createdAt" : "2020-06-29T19:13:55Z",
        "updatedAt" : "2020-07-03T19:55:19Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "2e6c735b-816f-425c-a01d-98b7e0966674",
        "parentId" : "937b55b0-de9d-4c94-a8bb-995016b20c34",
        "authorId" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "body" : "Right now it isn't particularly important. This will become more relevant when adding other kinds of capacity (\"total capacity\", \"maximum volume size\") because then leaving \"capacity\" at nil seems suitable.\r\n",
        "createdAt" : "2020-06-29T20:07:21Z",
        "updatedAt" : "2020-07-03T19:55:19Z",
        "lastEditedBy" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "tags" : [
        ]
      }
    ],
    "commit" : "9a66e8e1b5820027c1747cff052d335e29597fc2",
    "line" : 54,
    "diffHunk" : "@@ -1,1 +461,465 @@// a certain combination:\n// - no object exists with suitable topology and storage class name\n// - such an object exists, but the capacity is unset\n// - such an object exists, but the capacity is zero\n//"
  },
  {
    "id" : "004e3f00-45f1-4679-81a6-3109e2020a89",
    "prId" : 91939,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/91939#pullrequestreview-440149432",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "07b721c0-3202-4057-96a5-73d80534fa8d",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "ISTR `StorageClass: \"\"` is explicitly defined for PV and PVC.  Does it matter here?  Can this be empty?",
        "createdAt" : "2020-06-29T19:15:30Z",
        "updatedAt" : "2020-07-03T19:55:19Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "79e38890-9e85-492a-9848-158868cac86d",
        "parentId" : "07b721c0-3202-4057-96a5-73d80534fa8d",
        "authorId" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "body" : "No, not here. The empty string references the storage class with the name \"default\", which is also what will be used here (the string \"default\", not the empty string).\r\n",
        "createdAt" : "2020-06-29T20:09:13Z",
        "updatedAt" : "2020-07-03T19:55:19Z",
        "lastEditedBy" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "tags" : [
        ]
      },
      {
        "id" : "cd12dc0c-b4f8-4336-9239-37036cd30957",
        "parentId" : "07b721c0-3202-4057-96a5-73d80534fa8d",
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "In PVC, empty string means \"no storage class\". Nil means default. I think in this particular case, we should always require a StorageClass and not support a default. Also, there is no defaulting of StorageClass names in Kubernetes.\r\n\r\nI think in this case, we should make StorageClassName required to be non-empty.",
        "createdAt" : "2020-06-30T00:24:33Z",
        "updatedAt" : "2020-07-03T19:55:19Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "bfcaedef-94ac-4b33-8268-e665ea3bc531",
        "parentId" : "07b721c0-3202-4057-96a5-73d80534fa8d",
        "authorId" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "body" : "> I think in this case, we should make StorageClassName required to be non-empty.\r\n\r\nThis is how it is implemented already. Let me add a comment which explicitly documents that.\r\n",
        "createdAt" : "2020-06-30T05:21:15Z",
        "updatedAt" : "2020-07-03T19:55:19Z",
        "lastEditedBy" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "tags" : [
        ]
      },
      {
        "id" : "af9143b6-04f1-4ee0-b425-96d9b71effb3",
        "parentId" : "07b721c0-3202-4057-96a5-73d80534fa8d",
        "authorId" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "body" : "Done, update pushed.\r\n",
        "createdAt" : "2020-06-30T15:44:52Z",
        "updatedAt" : "2020-07-03T19:55:19Z",
        "lastEditedBy" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "tags" : [
        ]
      }
    ],
    "commit" : "9a66e8e1b5820027c1747cff052d335e29597fc2",
    "line" : 89,
    "diffHunk" : "@@ -1,1 +496,500 @@\t// creator.\n\t// This field is immutable.\n\tStorageClassName string\n\n\t// Capacity is the value reported by the CSI driver in its GetCapacityResponse"
  },
  {
    "id" : "e06ac0a3-310c-4326-9161-5dd744f0e65d",
    "prId" : 80568,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/80568#pullrequestreview-270976961",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b0b5c531-d2b2-4d24-b12b-160ab7ff3fb8",
        "parentId" : null,
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "The default mode if the list is empty is \"Persistent\"",
        "createdAt" : "2019-08-02T22:43:58Z",
        "updatedAt" : "2019-08-22T06:59:14Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "696070ca-c435-46be-b695-93a3103759cf",
        "parentId" : "b0b5c531-d2b2-4d24-b12b-160ab7ff3fb8",
        "authorId" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "body" : "Yep, copied from the other types.go.",
        "createdAt" : "2019-08-05T20:04:03Z",
        "updatedAt" : "2019-08-22T06:59:14Z",
        "lastEditedBy" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "tags" : [
        ]
      }
    ],
    "commit" : "8270fe81e4916b599c8a9a83552a5381b434dd7f",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +296,300 @@\n\t// VolumeLifecycleModes defines what kind of volumes this CSI volume driver supports.\n\t// The default if the list is empty is \"Persistent\", which is the usage\n\t// defined by the CSI specification and implemented in Kubernetes via the usual\n\t// PV/PVC mechanism."
  },
  {
    "id" : "1e2cc8c4-ad8d-403e-8dcb-bf5b172f7c05",
    "prId" : 80568,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/80568#pullrequestreview-272796101",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e0db78b1-05d0-44df-9023-6f41215a177b",
        "parentId" : null,
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "also Unpublish",
        "createdAt" : "2019-08-08T00:48:43Z",
        "updatedAt" : "2019-08-22T06:59:14Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "23bf0d91-ad1c-402c-8d56-988cbc52fcf8",
        "parentId" : "e0db78b1-05d0-44df-9023-6f41215a177b",
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "Should we link to https://kubernetes-csi.github.io/docs/ephemeral-local-volumes.html which has more details on how to develop a driver with \"Ephemeral\" mode?",
        "createdAt" : "2019-08-08T00:50:13Z",
        "updatedAt" : "2019-08-22T06:59:14Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "01ab9fe0-c06d-4d6c-9321-f2e558543593",
        "parentId" : "e0db78b1-05d0-44df-9023-6f41215a177b",
        "authorId" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "body" : "I can add it, but I have no idea how self-contained the API documentation is supposed to be. We already started adding a lot of text here that duplicates information found elsewhere. If we now continued with adding links, we might as well remove the duplicate text and just say \"for more information, see ...\".\r\n",
        "createdAt" : "2019-08-08T09:50:06Z",
        "updatedAt" : "2019-08-22T06:59:14Z",
        "lastEditedBy" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "tags" : [
        ]
      },
      {
        "id" : "7d263139-8e5f-4e58-b84e-a4ed6e1876ea",
        "parentId" : "e0db78b1-05d0-44df-9023-6f41215a177b",
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "We are trying to strive towards having the API documentation be very descriptive so that a user reading it without much background on the subject can get a decent idea what the API is supposed to do.\r\n\r\nSo I think the comments here are good, and then for further information on how to actually implement this feature in your csi driver, we can refer to the csi driver dev docs.",
        "createdAt" : "2019-08-08T18:01:38Z",
        "updatedAt" : "2019-08-22T06:59:14Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "46d47131-16a1-47b8-80c3-a72832ce817d",
        "parentId" : "e0db78b1-05d0-44df-9023-6f41215a177b",
        "authorId" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "body" : "Done.",
        "createdAt" : "2019-08-08T19:41:40Z",
        "updatedAt" : "2019-08-22T06:59:14Z",
        "lastEditedBy" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "tags" : [
        ]
      }
    ],
    "commit" : "8270fe81e4916b599c8a9a83552a5381b434dd7f",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +302,306 @@\t// inside the pod spec with CSIVolumeSource and their lifecycle is tied to\n\t// the lifecycle of that pod. A driver has to be aware of this\n\t// because it is only going to get a NodePublishVolume call for such a volume.\n\t// For more information about implementing this mode, see\n\t// https://kubernetes-csi.github.io/docs/ephemeral-local-volumes.html"
  },
  {
    "id" : "95b14142-7960-4e5f-97c2-73bded0daa82",
    "prId" : 77703,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/77703#pullrequestreview-238258690",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "66a47bf3-3c1e-4dec-954d-77c521854b52",
        "parentId" : null,
        "authorId" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "body" : "It would be great to have a comment (not part of generated docs?) why `PersistentVolumeSpec` is used instead of `CSIPersistentVolumeSource` - we need at least read-only flag translated into AccessMode and maybe MountOptions.",
        "createdAt" : "2019-05-13T12:30:02Z",
        "updatedAt" : "2019-05-30T09:35:54Z",
        "lastEditedBy" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "tags" : [
        ]
      },
      {
        "id" : "f6c4dca5-0ac9-4920-9b13-92b50ee4fa55",
        "parentId" : "66a47bf3-3c1e-4dec-954d-77c521854b52",
        "authorId" : "98986d5f-c846-4478-8363-8a016e3d6b89",
        "body" : "Addressed this in the usage of this field in CSI attacher code in pkg/volume/csi/csi_attacher.go : https://github.com/kubernetes/kubernetes/pull/77703/commits#diff-6c5c64be2395d7a4c5088acafc82101cR79 [github seems to not resolve the link properly for some reason]",
        "createdAt" : "2019-05-16T08:52:09Z",
        "updatedAt" : "2019-05-30T09:35:54Z",
        "lastEditedBy" : "98986d5f-c846-4478-8363-8a016e3d6b89",
        "tags" : [
        ]
      }
    ],
    "commit" : "de7be9d6133bb985d9f1d0fa029e03166f6cd0f4",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +161,165 @@\t// honored by servers that enabled the CSIMigration feature.\n\t// +optional\n\tInlineVolumeSpec *api.PersistentVolumeSpec\n}\n"
  },
  {
    "id" : "56cf909a-144c-4063-bb46-fa2cbc81c4ff",
    "prId" : 77703,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/77703#pullrequestreview-239011575",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1e68f9ca-3a03-417b-a293-d20b1b69363b",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "this entire comment needs to be propagated to all the {v1,v1beta1,v1alpha1} types",
        "createdAt" : "2019-05-17T16:10:02Z",
        "updatedAt" : "2019-05-30T09:35:54Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "de7be9d6133bb985d9f1d0fa029e03166f6cd0f4",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +159,163 @@\t// translated fields from a pod's inline VolumeSource to a\n\t// PersistentVolumeSpec. This field is alpha-level and is only\n\t// honored by servers that enabled the CSIMigration feature.\n\t// +optional\n\tInlineVolumeSpec *api.PersistentVolumeSpec"
  },
  {
    "id" : "8a98fd41-8591-4f76-90ab-9871f6723523",
    "prId" : 77595,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/77595#pullrequestreview-235478296",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "16429eae-d037-4f39-a5c5-44b8d714a601",
        "parentId" : null,
        "authorId" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "body" : "Do we need some validations to ensure negative values can't be set?",
        "createdAt" : "2019-05-08T15:00:59Z",
        "updatedAt" : "2019-06-25T14:31:23Z",
        "lastEditedBy" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "tags" : [
        ]
      },
      {
        "id" : "c4d696c3-52b4-4b40-a020-4307a5da36aa",
        "parentId" : "16429eae-d037-4f39-a5c5-44b8d714a601",
        "authorId" : "255dd885-bee4-4c1f-baef-ba11f903dc5c",
        "body" : "Was validationg in `nodeinfomanager.go`, but I missed the fact that the API server has its own validation. Fixed",
        "createdAt" : "2019-05-09T09:31:36Z",
        "updatedAt" : "2019-06-25T14:31:23Z",
        "lastEditedBy" : "255dd885-bee4-4c1f-baef-ba11f903dc5c",
        "tags" : [
        ]
      }
    ],
    "commit" : "6abc04d059b42ffdc1b68f5b847f18e57ac0680d",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +371,375 @@\tCount *int32\n}\n\n// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object\n"
  },
  {
    "id" : "df218f45-5b57-4c8b-8749-e1618bb6c953",
    "prId" : 77595,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/77595#pullrequestreview-236509938",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "65264b1a-0587-49f5-8b1b-84d6057ae48e",
        "parentId" : null,
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "same thing, count seems vague.",
        "createdAt" : "2019-05-10T00:49:44Z",
        "updatedAt" : "2019-06-25T14:31:23Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "707acfa9-a1b6-4f16-85cb-f1409c376f8b",
        "parentId" : "65264b1a-0587-49f5-8b1b-84d6057ae48e",
        "authorId" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "body" : "link to discussion about naming it `Count` - https://github.com/kubernetes/enhancements/pull/942#discussion_r279118467",
        "createdAt" : "2019-05-10T20:13:08Z",
        "updatedAt" : "2019-06-25T14:31:23Z",
        "lastEditedBy" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "tags" : [
        ]
      },
      {
        "id" : "df2c4ad8-e842-4aa2-bb2b-26d592f63445",
        "parentId" : "65264b1a-0587-49f5-8b1b-84d6057ae48e",
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "Maybe Count is fine as long as we can comment exactly what it means.\r\n\r\nJust on its own it's too vague.  Is it number of mounts? number of attaches? what if multiple pods on the same node share the volume?  What is and what is not counted?",
        "createdAt" : "2019-05-10T20:33:33Z",
        "updatedAt" : "2019-06-25T14:31:23Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "9de1efe4-45c6-4fca-b67e-67516df73379",
        "parentId" : "65264b1a-0587-49f5-8b1b-84d6057ae48e",
        "authorId" : "255dd885-bee4-4c1f-baef-ba11f903dc5c",
        "body" : "Updated. PTAL",
        "createdAt" : "2019-05-13T07:24:08Z",
        "updatedAt" : "2019-06-25T14:31:23Z",
        "lastEditedBy" : "255dd885-bee4-4c1f-baef-ba11f903dc5c",
        "tags" : [
        ]
      }
    ],
    "commit" : "6abc04d059b42ffdc1b68f5b847f18e57ac0680d",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +369,373 @@\t// If this field is nil, then the supported number of volumes on this node is unbounded.\n\t// +optional\n\tCount *int32\n}\n"
  },
  {
    "id" : "dae7e9fa-80df-402e-83e6-744ae70f4a8a",
    "prId" : 77595,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/77595#pullrequestreview-238025820",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b2d034cb-65c5-44ed-949d-300ee9d289de",
        "parentId" : null,
        "authorId" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "body" : "Sorry, more bikeshedding on naming ... What about `MaxCount`?",
        "createdAt" : "2019-05-15T04:05:29Z",
        "updatedAt" : "2019-06-25T14:31:23Z",
        "lastEditedBy" : "a139439a-9f9e-4518-b4f3-9c602d956c57",
        "tags" : [
        ]
      },
      {
        "id" : "c62fbfbf-ed1d-4c49-9022-fde092f04747",
        "parentId" : "b2d034cb-65c5-44ed-949d-300ee9d289de",
        "authorId" : "255dd885-bee4-4c1f-baef-ba11f903dc5c",
        "body" : "Here's the discussion about this name: https://github.com/kubernetes/enhancements/pull/942#discussion_r279118467\r\n\r\nI don't mind changing it if you folks think it's better.",
        "createdAt" : "2019-05-15T19:35:29Z",
        "updatedAt" : "2019-06-25T14:31:23Z",
        "lastEditedBy" : "255dd885-bee4-4c1f-baef-ba11f903dc5c",
        "tags" : [
        ]
      }
    ],
    "commit" : "6abc04d059b42ffdc1b68f5b847f18e57ac0680d",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +369,373 @@\t// If this field is nil, then the supported number of volumes on this node is unbounded.\n\t// +optional\n\tCount *int32\n}\n"
  },
  {
    "id" : "51e1e4f6-5e5b-4702-a786-fd92ce8dedea",
    "prId" : 74283,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/74283#pullrequestreview-209802083",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "975ded9d-7a01-4168-8b19-8f156cabafa7",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "not required: labels and annotations general eschew `.` in favor of `-`.",
        "createdAt" : "2019-03-01T21:30:25Z",
        "updatedAt" : "2019-03-05T00:42:58Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "7e25a4ef-06f8-4457-be28-be21c0157516",
        "parentId" : "975ded9d-7a01-4168-8b19-8f156cabafa7",
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "are you suggesting that we rename our attribute to use `-` instead of `.`?",
        "createdAt" : "2019-03-01T21:57:54Z",
        "updatedAt" : "2019-03-05T00:42:58Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      }
    ],
    "commit" : "d69e0ff3f0547cc1acc6b35af1e6b93b90ed0e45",
    "line" : 76,
    "diffHunk" : "@@ -1,1 +288,292 @@\t// The following VolumeConext will be passed if podInfoOnMount is set to true.\n\t// This list might grow, but the prefix will be used.\n\t// \"csi.storage.k8s.io/pod.name\": pod.Name\n\t// \"csi.storage.k8s.io/pod.namespace\": pod.Namespace\n\t// \"csi.storage.k8s.io/pod.uid\": string(pod.UID)"
  },
  {
    "id" : "1f0f7975-6bc3-4ee3-ae65-f0c0776fab82",
    "prId" : 74283,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/74283#pullrequestreview-210103135",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e482b9a2-a80d-4f10-a9da-1f5c6592c732",
        "parentId" : null,
        "authorId" : "255dd885-bee4-4c1f-baef-ba11f903dc5c",
        "body" : "I find it strange that the gate has a different name (same for `CSIDriver`), but I guess we don't want to change this at this point.",
        "createdAt" : "2019-03-04T11:56:04Z",
        "updatedAt" : "2019-03-05T00:42:58Z",
        "lastEditedBy" : "255dd885-bee4-4c1f-baef-ba11f903dc5c",
        "tags" : [
        ]
      }
    ],
    "commit" : "d69e0ff3f0547cc1acc6b35af1e6b93b90ed0e45",
    "line" : 96,
    "diffHunk" : "@@ -1,1 +308,312 @@// enough that it doesn't create this object.\n// CSINode has an OwnerReference that points to the corresponding node object.\ntype CSINode struct {\n\tmetav1.TypeMeta\n"
  },
  {
    "id" : "ccd649be-88f3-474d-be39-b8ffdb6f26ce",
    "prId" : 73883,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/73883#pullrequestreview-206038969",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bb2e9b0a-1bf6-4382-a530-6671188518c8",
        "parentId" : null,
        "authorId" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "body" : "Did we want to keep `VolumePluginMechanism` bit in a separate commit since this commit is more about just migrating these types in-tree and keeping same API?",
        "createdAt" : "2019-02-11T19:02:20Z",
        "updatedAt" : "2019-03-02T20:31:47Z",
        "lastEditedBy" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "tags" : [
        ]
      },
      {
        "id" : "341d9d4d-67d5-438f-a3f5-a5a32f15ed7d",
        "parentId" : "bb2e9b0a-1bf6-4382-a530-6671188518c8",
        "authorId" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "body" : "`VolumePluginMechanism` has already been a part of the CRD for a while now :)",
        "createdAt" : "2019-02-11T19:41:22Z",
        "updatedAt" : "2019-03-02T20:31:47Z",
        "lastEditedBy" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "tags" : [
        ]
      },
      {
        "id" : "e8d0e499-026d-4035-9af2-dbd737c1eecd",
        "parentId" : "bb2e9b0a-1bf6-4382-a530-6671188518c8",
        "authorId" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "body" : "ah, disregard this. :-)",
        "createdAt" : "2019-02-11T19:47:40Z",
        "updatedAt" : "2019-03-02T20:31:47Z",
        "lastEditedBy" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "tags" : [
        ]
      },
      {
        "id" : "6f5028f7-2937-4cc4-ae2e-d4ea99419692",
        "parentId" : "bb2e9b0a-1bf6-4382-a530-6671188518c8",
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "Hm but this field is only used for migration which is still going to be alpha? ",
        "createdAt" : "2019-02-11T20:04:47Z",
        "updatedAt" : "2019-03-02T20:31:47Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "21b242ba-8432-41d7-89e4-eb894825cd08",
        "parentId" : "bb2e9b0a-1bf6-4382-a530-6671188518c8",
        "authorId" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "body" : "@msau42 has a good point. Although its been in the CRD it hasn't really gotten any usage and we're not 100% sure that its exactly what we want. We may want to add an Alpha API with this field (any gating can be done with `CSIMigration`) so that we have some flexibility to change it in the future when we start using it. @xing-yang what do you think?",
        "createdAt" : "2019-02-11T23:00:07Z",
        "updatedAt" : "2019-03-02T20:31:47Z",
        "lastEditedBy" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "tags" : [
        ]
      },
      {
        "id" : "38b940fa-137b-45ef-ab80-489354d01708",
        "parentId" : "bb2e9b0a-1bf6-4382-a530-6671188518c8",
        "authorId" : "275dd783-53c3-4fed-8434-96ed6a2e0331",
        "body" : "Sure, I can make VolumePluginMechanism an Alpha field.  Can I keep it together in the same commit with other API changes or should it be in a separate commit in this PR?",
        "createdAt" : "2019-02-11T23:56:22Z",
        "updatedAt" : "2019-03-02T20:31:47Z",
        "lastEditedBy" : "275dd783-53c3-4fed-8434-96ed6a2e0331",
        "tags" : [
        ]
      },
      {
        "id" : "62c00c5b-33e8-4cff-8b95-eba74873459f",
        "parentId" : "bb2e9b0a-1bf6-4382-a530-6671188518c8",
        "authorId" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "body" : "whichever works better for you is ok here",
        "createdAt" : "2019-02-14T00:34:43Z",
        "updatedAt" : "2019-03-02T20:31:47Z",
        "lastEditedBy" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "tags" : [
        ]
      },
      {
        "id" : "28af70d5-c75d-4db0-b89b-5fa51454dd19",
        "parentId" : "bb2e9b0a-1bf6-4382-a530-6671188518c8",
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "Do we want to make it an alpha field in the beta api object, or have an entirely new alpha object?\r\n\r\nI'm trying to think about the challenges of making it an entirely separate object.  It means all intree and external controller code needs to be able to handle both beta and alpha api groups.",
        "createdAt" : "2019-02-14T01:41:54Z",
        "updatedAt" : "2019-03-02T20:31:47Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "75be73de-03f3-486a-8530-b6c2e2fb76b7",
        "parentId" : "bb2e9b0a-1bf6-4382-a530-6671188518c8",
        "authorId" : "275dd783-53c3-4fed-8434-96ed6a2e0331",
        "body" : "I’m looking into this too.\r\n\r\nI see this PR that adds volume resize support as an Alpha feature: \r\nhttps://github.com/kubernetes/kubernetes/pull/49727/commits/e78d4331501d26c0fb4cb22514a6ba70296d7e34\r\n\r\nThe new PersistentVolumeClaimCondition struct was added to staging/src/k8s.io/api/core/v1/types.go, and it was added as a new field to PersistentVolumeClaimStatus.\r\n\r\nThen there is a \"ExpandPersistentVolumes\" Alpha feature gate that is used for validation.\r\n\r\nCan we do something similar here?  Keep this field VolumePluginMechanism in the Beta API object, but add validation for it using the feature gate.\r\n",
        "createdAt" : "2019-02-14T03:42:14Z",
        "updatedAt" : "2019-03-02T20:31:47Z",
        "lastEditedBy" : "275dd783-53c3-4fed-8434-96ed6a2e0331",
        "tags" : [
        ]
      },
      {
        "id" : "0de97db9-7bc4-4bfc-ad21-cfc99a6fae9c",
        "parentId" : "bb2e9b0a-1bf6-4382-a530-6671188518c8",
        "authorId" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "body" : "But setting of conditions field was feature gated(for resizing) and hence if you do not have feature gate enabled, you can not interact with the new field. It would appear to you that, field does not exist. \r\n\r\nEdit: Yeah so guess we can do that here but we must make sure that setting that field is only enabled when corresponding feature gate is enabled (and hence makes sense to introduce this field in a follow up PR).",
        "createdAt" : "2019-02-14T03:49:07Z",
        "updatedAt" : "2019-03-02T20:31:47Z",
        "lastEditedBy" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "tags" : [
        ]
      },
      {
        "id" : "f3d86300-28ec-4def-866c-2c4afee998c5",
        "parentId" : "bb2e9b0a-1bf6-4382-a530-6671188518c8",
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "Can you add a comment that this field is alpha",
        "createdAt" : "2019-02-19T18:46:05Z",
        "updatedAt" : "2019-03-02T20:31:47Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "86d1000b-923c-414f-9aa9-ea5826014d02",
        "parentId" : "bb2e9b0a-1bf6-4382-a530-6671188518c8",
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "Discussed this with @davidz627 .\r\n\r\nWe think a better name for this field could be `ShimMechanism` or `ShimMode` with values \"InTree\" or \"CSI\".  It should be a pointer so that CSI drivers with no in-tree equivalent can leave it blank.",
        "createdAt" : "2019-02-19T22:14:59Z",
        "updatedAt" : "2019-03-02T20:31:47Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "9b43de01-f4c2-44c3-ba38-524e5f6f8ed8",
        "parentId" : "bb2e9b0a-1bf6-4382-a530-6671188518c8",
        "authorId" : "275dd783-53c3-4fed-8434-96ed6a2e0331",
        "body" : "Sure, I'll rename this.  I think this is already changed to a pointer in the latest PR.",
        "createdAt" : "2019-02-19T22:24:23Z",
        "updatedAt" : "2019-03-02T20:31:47Z",
        "lastEditedBy" : "275dd783-53c3-4fed-8434-96ed6a2e0331",
        "tags" : [
        ]
      },
      {
        "id" : "9e4ce7c1-68c0-4de9-908d-bbb20a1ab9c1",
        "parentId" : "bb2e9b0a-1bf6-4382-a530-6671188518c8",
        "authorId" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "body" : "or `VolumePluginShimMode`",
        "createdAt" : "2019-02-19T22:46:38Z",
        "updatedAt" : "2019-03-02T20:31:47Z",
        "lastEditedBy" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "tags" : [
        ]
      },
      {
        "id" : "e7bd71b2-ae13-45df-ad5a-afa2d665887f",
        "parentId" : "bb2e9b0a-1bf6-4382-a530-6671188518c8",
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "Would `VolumePlugin` be redundant since we're already in a CSIDriver object?",
        "createdAt" : "2019-02-19T23:03:31Z",
        "updatedAt" : "2019-03-02T20:31:47Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "5c94559e-f90a-461f-acb1-cd8461e7308b",
        "parentId" : "bb2e9b0a-1bf6-4382-a530-6671188518c8",
        "authorId" : "275dd783-53c3-4fed-8434-96ed6a2e0331",
        "body" : "I'll change this to ShimMode then.",
        "createdAt" : "2019-02-20T20:36:15Z",
        "updatedAt" : "2019-03-02T20:31:47Z",
        "lastEditedBy" : "275dd783-53c3-4fed-8434-96ed6a2e0331",
        "tags" : [
        ]
      },
      {
        "id" : "89dbfaca-747f-4268-95c8-c80dd8a9ae2e",
        "parentId" : "bb2e9b0a-1bf6-4382-a530-6671188518c8",
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "As discussed [here](https://github.com/kubernetes/kubernetes/pull/73883#discussion_r258638861), we decided to remove this field (and the entire status field)",
        "createdAt" : "2019-02-20T21:27:19Z",
        "updatedAt" : "2019-03-02T20:31:47Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "1548edbb-e69d-45ff-ab17-48b5d9c3440d",
        "parentId" : "bb2e9b0a-1bf6-4382-a530-6671188518c8",
        "authorId" : "275dd783-53c3-4fed-8434-96ed6a2e0331",
        "body" : "Oh, that's right!  I'm going to remove the status field first so I won't get myself confused:).",
        "createdAt" : "2019-02-20T22:39:17Z",
        "updatedAt" : "2019-03-02T20:31:47Z",
        "lastEditedBy" : "275dd783-53c3-4fed-8434-96ed6a2e0331",
        "tags" : [
        ]
      }
    ],
    "commit" : "743d3a26e9767340110578f30bc774660b03396c",
    "line" : 111,
    "diffHunk" : "@@ -1,1 +323,327 @@\t// +patchStrategy=merge\n\tDrivers []CSINodeDriver\n}\n\n// CSINodeDriver holds information about the specification of one CSI driver installed on a node"
  },
  {
    "id" : "4f7ca383-abce-4d0d-ae2b-48efe344ad57",
    "prId" : 73883,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/73883#pullrequestreview-205403463",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3eb1c464-93c3-4129-a270-f3fb285411a5",
        "parentId" : null,
        "authorId" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "body" : "As I understand in some cases a boolean pointer is used to fix ambiguity associated with a boolean value which may not have been set in an existing type. But in this case since we are introducing a brand new type, do we still want to use boolean pointer?",
        "createdAt" : "2019-02-12T20:35:46Z",
        "updatedAt" : "2019-03-02T20:31:47Z",
        "lastEditedBy" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "tags" : [
        ]
      },
      {
        "id" : "8af3ea86-0dfc-4f95-9654-73ce83488188",
        "parentId" : "3eb1c464-93c3-4129-a270-f3fb285411a5",
        "authorId" : "275dd783-53c3-4fed-8434-96ed6a2e0331",
        "body" : "My understanding is that a boolean pointer is often used for optional parameters so we can differentiate the case when the parameter is not set vs the default value of false.",
        "createdAt" : "2019-02-12T22:00:16Z",
        "updatedAt" : "2019-03-02T20:31:47Z",
        "lastEditedBy" : "275dd783-53c3-4fed-8434-96ed6a2e0331",
        "tags" : [
        ]
      },
      {
        "id" : "6bfe7344-2895-438b-a87a-63b0fbcddd86",
        "parentId" : "3eb1c464-93c3-4129-a270-f3fb285411a5",
        "authorId" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "body" : "But is there a difference between value not being set in JSON and value being false? I thought boolean pointers were more important for cases where a older client may not be aware of newly introduced field and hence not setting it and server might want to disambiguate between client not setting it vs defaulting to false. In this case - this doesn't appear to be the case.\r\n\r\n",
        "createdAt" : "2019-02-12T22:37:05Z",
        "updatedAt" : "2019-03-02T20:31:47Z",
        "lastEditedBy" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "tags" : [
        ]
      },
      {
        "id" : "0a5d5ea7-1319-478b-9f40-8738063ecb8f",
        "parentId" : "3eb1c464-93c3-4129-a270-f3fb285411a5",
        "authorId" : "275dd783-53c3-4fed-8434-96ed6a2e0331",
        "body" : "I think it depends on what the caller is doing with this field.\r\n\r\nAlso since we are just moving from Alpha to Beta, should the APIs be kept the same (other than the API group/version) unless if there's something completely wrong?  What if we found out later on we need to differentiate between client not setting it vs default to false?",
        "createdAt" : "2019-02-13T00:06:35Z",
        "updatedAt" : "2019-03-02T20:31:47Z",
        "lastEditedBy" : "275dd783-53c3-4fed-8434-96ed6a2e0331",
        "tags" : [
        ]
      },
      {
        "id" : "2f12ac5e-be1c-4fd0-aa1f-92c3546d1974",
        "parentId" : "3eb1c464-93c3-4129-a270-f3fb285411a5",
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "I don't think we need to distinguish between true, false and unset for this particular case.  I don't think we absolutely need to keep the apis the same because it's a completely different api group.",
        "createdAt" : "2019-02-13T01:01:42Z",
        "updatedAt" : "2019-03-02T20:31:47Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "5dfba8e9-f3ef-4758-83d2-3674cb11add6",
        "parentId" : "3eb1c464-93c3-4129-a270-f3fb285411a5",
        "authorId" : "275dd783-53c3-4fed-8434-96ed6a2e0331",
        "body" : "Removed pointer in the latest PR.",
        "createdAt" : "2019-02-13T21:45:48Z",
        "updatedAt" : "2019-03-02T20:31:47Z",
        "lastEditedBy" : "275dd783-53c3-4fed-8434-96ed6a2e0331",
        "tags" : [
        ]
      },
      {
        "id" : "a04bce1e-2242-4201-b9f6-2018b0ca97d9",
        "parentId" : "3eb1c464-93c3-4129-a270-f3fb285411a5",
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "There is logic missing in [defaults.go](https://sourcegraph.com/github.com/kubernetes/kubernetes/-/blob/pkg/apis/storage/v1/defaults.go) to default this field to true.",
        "createdAt" : "2019-02-19T19:17:34Z",
        "updatedAt" : "2019-03-02T20:31:47Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "d11518ad-8590-4149-908c-ca2551d13e4d",
        "parentId" : "3eb1c464-93c3-4129-a270-f3fb285411a5",
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "Also @jsafrane do you see a need where we may need to extend this in the future to be a more general capabilities list?\r\nref https://github.com/kubernetes/kubernetes/pull/73883#discussion_r257396055",
        "createdAt" : "2019-02-19T19:20:26Z",
        "updatedAt" : "2019-03-02T20:31:47Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      }
    ],
    "commit" : "743d3a26e9767340110578f30bc774660b03396c",
    "line" : 62,
    "diffHunk" : "@@ -1,1 +274,278 @@\t// Otherwise the attach operation will be called.\n\t// +optional\n\tAttachRequired *bool\n\n\t// If set to true, podInfoOnMount indicates this CSI volume driver"
  }
]