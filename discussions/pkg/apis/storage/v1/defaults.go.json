[
  {
    "id" : "21cfa2d1-bc32-44bd-8cf4-380da0edcef3",
    "prId" : 54436,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/54436#pullrequestreview-76202351",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f9804105-0db7-4f0e-86e0-9cd57125b64c",
        "parentId" : null,
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "This doesn't work with upgrades.  Need to discuss with @kubernetes/sig-api-machinery-pr-reviews if it's possible to default new alpha fields.",
        "createdAt" : "2017-11-11T00:52:41Z",
        "updatedAt" : "2017-11-15T18:54:21Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "b148b1c7-b793-4f89-94bb-860add7098de",
        "parentId" : "f9804105-0db7-4f0e-86e0-9cd57125b64c",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "When gate disabled, they should not be persisted or returned from the API, soâ€¦ not really",
        "createdAt" : "2017-11-11T00:55:35Z",
        "updatedAt" : "2017-11-15T18:54:21Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "4d165303-de6d-4b86-9b47-2d7ddf48ad4f",
        "parentId" : "f9804105-0db7-4f0e-86e0-9cd57125b64c",
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "Discussed with @thockin and @lavalamp and verified that defaults are applied on read to objects that were stored with a nil field.  So we can default new fields under a feature gate as long as we also access the fields under the feature gate.",
        "createdAt" : "2017-11-13T05:25:11Z",
        "updatedAt" : "2017-11-15T18:54:21Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "eff8acbb-3a01-41af-8460-fc8c3ddda071",
        "parentId" : "f9804105-0db7-4f0e-86e0-9cd57125b64c",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "Doesn't that mean the default values are serialized back out and returned to API clients even when the gate is disabled? If so, that isn't what we want",
        "createdAt" : "2017-11-13T15:23:27Z",
        "updatedAt" : "2017-11-15T18:54:21Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "fe627924-57c2-4aad-be34-9678e2bf8625",
        "parentId" : "f9804105-0db7-4f0e-86e0-9cd57125b64c",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "> So we can default new fields under a feature gate\r\n\r\nAh, you're saying the defaulting itself would be gated. I thought I looked into that at one point and it resulted in weird (and possibly circular) dependencies, but maybe I'm misremembering",
        "createdAt" : "2017-11-13T15:25:30Z",
        "updatedAt" : "2017-11-15T18:54:21Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "1ee21976-0fc0-46a7-837a-be35533ac516",
        "parentId" : "f9804105-0db7-4f0e-86e0-9cd57125b64c",
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "Here's a scenario I'm not sure how to handle:\r\n\r\n1.  1.9 feature disabled, create new object, nil field not defaulted\r\n2.  1.10 feature is enabled, update object, defaulting will kick in.  How does validation detect the difference between nil field -> defaulting vs nil field -> user set some value.  I want this field to be immutable.",
        "createdAt" : "2017-11-13T18:24:58Z",
        "updatedAt" : "2017-11-15T18:54:21Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "160d73d8-1664-4fbc-a538-70d63ad9cc83",
        "parentId" : "f9804105-0db7-4f0e-86e0-9cd57125b64c",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "> How does validation detect the difference between nil field -> defaulting vs nil field -> user set some value\r\n\r\nit doesn't (and shouldn't). the old object decoded from etcd will get the default, get sent to the user, and any update coming from the user without that value will also get the default. from validation's perspective, both the old and new object will have the default value, so the field will not appear to have changed.",
        "createdAt" : "2017-11-13T18:29:22Z",
        "updatedAt" : "2017-11-15T18:54:21Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "207d13ff230ad64e5acf0e2fd23237035398af97",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +35,39 @@\t}\n\n\tif obj.VolumeBindingMode == nil && utilfeature.DefaultFeatureGate.Enabled(features.VolumeScheduling) {\n\t\tobj.VolumeBindingMode = new(storagev1.VolumeBindingMode)\n\t\t*obj.VolumeBindingMode = storagev1.VolumeBindingImmediate"
  }
]