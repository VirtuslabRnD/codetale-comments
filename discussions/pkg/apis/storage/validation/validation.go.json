[
  {
    "id" : "a69ccec8-0cb2-46e3-b38b-1b4c992582af",
    "prId" : 101256,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/101256#pullrequestreview-639264448",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6e793385-f839-451c-bb17-10acc93a6c8f",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "convenient that this swap was sufficient\r\n\r\nlgtm once the spec change is merged and released",
        "createdAt" : "2021-04-19T20:09:10Z",
        "updatedAt" : "2021-04-19T20:09:10Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "125fb04dbf20a1e3535d1e2281cfa01bfcce0392",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +46,50 @@\n\tcsiNodeIDMaxLength       = 192\n\tcsiNodeIDLongerMaxLength = 256\n)\n"
  },
  {
    "id" : "ec7e3243-68b3-4ca8-a2b5-64bb3beda0c9",
    "prId" : 101256,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/101256#pullrequestreview-674916391",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "39e10f09-5bce-4de1-8603-601d965bd981",
        "parentId" : null,
        "authorId" : "cc7b7f9e-76c4-4529-9ec6-d3866ea559b3",
        "body" : "this would not work well, if someone rollback from a highly versions",
        "createdAt" : "2021-06-03T06:03:51Z",
        "updatedAt" : "2021-06-03T06:04:41Z",
        "lastEditedBy" : "cc7b7f9e-76c4-4529-9ec6-d3866ea559b3",
        "tags" : [
        ]
      },
      {
        "id" : "3d4446fe-df8a-4c52-b18a-3e0bcede7dc5",
        "parentId" : "39e10f09-5bce-4de1-8603-601d965bd981",
        "authorId" : "d10fef96-5a18-44e7-b23e-735de7561af7",
        "body" : "This is to keep the CSINode ID length backwards compatible.  I dont think we need to support the other way around.",
        "createdAt" : "2021-06-03T06:26:52Z",
        "updatedAt" : "2021-06-03T06:26:53Z",
        "lastEditedBy" : "d10fef96-5a18-44e7-b23e-735de7561af7",
        "tags" : [
        ]
      }
    ],
    "commit" : "125fb04dbf20a1e3535d1e2281cfa01bfcce0392",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +45,49 @@\tmaxVolumeErrorMessageSize     = 1024\n\n\tcsiNodeIDMaxLength       = 192\n\tcsiNodeIDLongerMaxLength = 256\n)"
  },
  {
    "id" : "d61360cb-4285-4fb6-afa4-d94a9ec5cd5c",
    "prId" : 99298,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/99298#pullrequestreview-608283110",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3a0383f4-b21e-4254-a827-9e92581fd6ea",
        "parentId" : null,
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "should we also call validateCSIDriverSpec again so that we check the updated fields are valid?",
        "createdAt" : "2021-03-05T01:51:26Z",
        "updatedAt" : "2021-03-10T02:36:56Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "b65b7644-8600-4f10-b89f-408c41043168",
        "parentId" : "3a0383f4-b21e-4254-a827-9e92581fd6ea",
        "authorId" : "f64c354b-61cb-4b89-b58f-f464e7ad4f94",
        "body" : "done.",
        "createdAt" : "2021-03-05T02:30:56Z",
        "updatedAt" : "2021-03-10T02:36:56Z",
        "lastEditedBy" : "f64c354b-61cb-4b89-b58f-f464e7ad4f94",
        "tags" : [
        ]
      },
      {
        "id" : "012fb92d-172b-489c-8e38-4d6e2e45de28",
        "parentId" : "3a0383f4-b21e-4254-a827-9e92581fd6ea",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "typically, we try to only validate fields we allow you to change (TokenRequests, I think). if there was an invalid field we also required to be immutable, they'd be stuck without a way to update (updating triggers immutable error, not updating triggers invalid error)",
        "createdAt" : "2021-03-09T21:45:44Z",
        "updatedAt" : "2021-03-10T02:36:56Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "6f7c4854-88d7-4a2d-89bc-cbb4a4f4f8d6",
        "parentId" : "3a0383f4-b21e-4254-a827-9e92581fd6ea",
        "authorId" : "f64c354b-61cb-4b89-b58f-f464e7ad4f94",
        "body" : "done",
        "createdAt" : "2021-03-10T02:37:42Z",
        "updatedAt" : "2021-03-10T02:37:42Z",
        "lastEditedBy" : "f64c354b-61cb-4b89-b58f-f464e7ad4f94",
        "tags" : [
        ]
      }
    ],
    "commit" : "4ad1c71174e16b798525b8dd913451f1847e6a1b",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +426,430 @@\tallErrs := apivalidation.ValidateObjectMetaUpdate(&new.ObjectMeta, &old.ObjectMeta, field.NewPath(\"metadata\"))\n\n\t// immutable fields should not be mutated.\n\tallErrs = append(allErrs, apimachineryvalidation.ValidateImmutableField(new.Spec.AttachRequired, old.Spec.AttachRequired, field.NewPath(\"spec\", \"attachedRequired\"))...)\n\tallErrs = append(allErrs, apimachineryvalidation.ValidateImmutableField(new.Spec.FSGroupPolicy, old.Spec.FSGroupPolicy, field.NewPath(\"spec\", \"fsGroupPolicy\"))...)"
  },
  {
    "id" : "ddff1bb8-2351-455a-b242-718e6321f55d",
    "prId" : 95739,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/95739#pullrequestreview-519959935",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ac73042d-6d91-4bc2-b173-463d17f3572f",
        "parentId" : null,
        "authorId" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "body" : "Do we need some validation test to ensure that when `CSIDriver` is updated, it passes validation with potentially invalid value of `FSGroupPolicy`? ",
        "createdAt" : "2020-10-29T02:00:59Z",
        "updatedAt" : "2020-11-12T22:09:57Z",
        "lastEditedBy" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "tags" : [
        ]
      },
      {
        "id" : "58ba5e4b-f64c-4c43-89ae-535d6e8cfb16",
        "parentId" : "ac73042d-6d91-4bc2-b173-463d17f3572f",
        "authorId" : "1a46cba5-dd9b-4c03-b94c-4dbfb64198e4",
        "body" : "I *think* I added this as https://github.com/kubernetes/kubernetes/commit/749db0043bf79e835911faf6e013e51d9e77ad24 .\r\n\r\nNote that if we modify the spec to introduce this value afterward, the test will fail as the spec is immutable. Let me know if this is incorrect.",
        "createdAt" : "2020-10-29T18:29:21Z",
        "updatedAt" : "2020-11-12T22:09:57Z",
        "lastEditedBy" : "1a46cba5-dd9b-4c03-b94c-4dbfb64198e4",
        "tags" : [
        ]
      }
    ],
    "commit" : "38071e74cf993b67290e9a458537e0a8460e8846",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +409,413 @@func ValidateCSIDriverUpdate(new, old *storage.CSIDriver) field.ErrorList {\n\tallErrs := apivalidation.ValidateObjectMetaUpdate(&new.ObjectMeta, &old.ObjectMeta, field.NewPath(\"metadata\"))\n\n\t// Spec is read-only\n\t// If this ever relaxes in the future, make sure to increment the Generation number in PrepareForUpdate"
  },
  {
    "id" : "43e2182a-4dbe-47c1-a10f-36649379340b",
    "prId" : 95739,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/95739#pullrequestreview-529389269",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "92c80ca3-6310-422b-80b0-f4a8707b5cd3",
        "parentId" : null,
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "I would expect ValidateCSIDriver to call ValidateObjectMeta instead of ValidateCSIDriverName, just like ValidateCSINode:\r\n\r\n```\r\nallErrs := apivalidation.ValidateObjectMeta(&csiNode.ObjectMeta, false, apivalidation.ValidateNodeName, field.NewPath(\"metadata\"))\r\n```\r\n\r\netc",
        "createdAt" : "2020-11-12T16:40:11Z",
        "updatedAt" : "2020-11-12T22:09:57Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "86f74bda-11e5-4b9a-8c21-0c7367d4115d",
        "parentId" : "92c80ca3-6310-422b-80b0-f4a8707b5cd3",
        "authorId" : "1a46cba5-dd9b-4c03-b94c-4dbfb64198e4",
        "body" : "@smarterclayton ,\r\n\r\nI've spoken with @msau42 and @gnufied about this, and we agree that this is something that should be fixed; however, as a subsequent PR and not part of this one. If we make the change now it could break an existing workflow.\r\n\r\nIf we don't handle this change as part of the current PR, should we also revert the `ValidateCSIDriverUpdate` change from your prior comment?",
        "createdAt" : "2020-11-12T17:50:57Z",
        "updatedAt" : "2020-11-12T22:09:57Z",
        "lastEditedBy" : "1a46cba5-dd9b-4c03-b94c-4dbfb64198e4",
        "tags" : [
        ]
      },
      {
        "id" : "d4e26060-8edd-48cd-aacf-377d85ab1d2d",
        "parentId" : "92c80ca3-6310-422b-80b0-f4a8707b5cd3",
        "authorId" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "body" : "so it is an oversight that we did not use `ValidateObjectMeta` originally  in `ValidateCSIDriver` function and as a result most metaobject validation is skipped. Now adding them here will result in tightening the validation as I understand it. That is why I am thinking we should fix this bit more carefully. \r\n\r\nObviously it is a mess that we skipped those validations in the first place.. :(",
        "createdAt" : "2020-11-12T18:04:19Z",
        "updatedAt" : "2020-11-12T22:09:57Z",
        "lastEditedBy" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "tags" : [
        ]
      },
      {
        "id" : "4c5f2cd7-cf71-4132-842b-58f84e8b8f6c",
        "parentId" : "92c80ca3-6310-422b-80b0-f4a8707b5cd3",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Yeah, we're completely broken in these objects and that's a big issue.  I don't know that we can ship 1.20 without some sort of fix here, but I don't think it has to be fixed in this PR exactly.\r\n\r\nSo let's get the important-critical issue opened (CSIDriver doesn't validate metadata changes), and then we can focus this PR on the minimum step.\r\n\r\nAdding validate object metadata on create is safe, and we *must* validate object metadta before safe, and we *must* validate that name can't change.  So I would probably say this PR should add the validations and the issue is that before 1.20 we *must* deal with users with invalid data (that's a release blocker)",
        "createdAt" : "2020-11-12T18:22:54Z",
        "updatedAt" : "2020-11-12T22:09:57Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "b8102ed0-20a0-4f57-8811-a1b81e632feb",
        "parentId" : "92c80ca3-6310-422b-80b0-f4a8707b5cd3",
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "https://github.com/kubernetes/kubernetes/issues/96520",
        "createdAt" : "2020-11-12T18:32:34Z",
        "updatedAt" : "2020-11-12T22:09:57Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "49b29cab-7102-4a07-9401-147ed9787b8f",
        "parentId" : "92c80ca3-6310-422b-80b0-f4a8707b5cd3",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Given jordan's comments there, I think we are covered enough to add the validation and name validation on new and on update in this PR.",
        "createdAt" : "2020-11-12T18:50:39Z",
        "updatedAt" : "2020-11-12T22:09:57Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "38071e74cf993b67290e9a458537e0a8460e8846",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +408,412 @@// ValidateCSIDriverUpdate validates a CSIDriver.\nfunc ValidateCSIDriverUpdate(new, old *storage.CSIDriver) field.ErrorList {\n\tallErrs := apivalidation.ValidateObjectMetaUpdate(&new.ObjectMeta, &old.ObjectMeta, field.NewPath(\"metadata\"))\n\n\t// Spec is read-only"
  },
  {
    "id" : "5ebd136b-f448-4e8f-93fb-31a246f86402",
    "prId" : 93130,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/93130#pullrequestreview-528585675",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d19765a9-29ac-4c86-a89d-2881162a5ade",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "validate ExpirationSeconds the same way TokenRequest does?",
        "createdAt" : "2020-11-06T02:18:36Z",
        "updatedAt" : "2020-11-12T17:26:59Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "9dbd1431-f50f-42a4-8286-e14cff9dd8b7",
        "parentId" : "d19765a9-29ac-4c86-a89d-2881162a5ade",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "validate max number of allowed token requests?",
        "createdAt" : "2020-11-11T18:58:03Z",
        "updatedAt" : "2020-11-12T17:26:59Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "501eff2b-ddca-4c35-931b-57a2afa2dc03",
        "parentId" : "d19765a9-29ac-4c86-a89d-2881162a5ade",
        "authorId" : "f64c354b-61cb-4b89-b58f-f464e7ad4f94",
        "body" : "done for the `ExpirationSeconds `.\r\n\r\nthe rationale for not setting the max number is that we don't know how many audiences a csi driver would like to have. e.g. secrets store csi driver would require three audiences now and may be more in the future.",
        "createdAt" : "2020-11-11T22:36:41Z",
        "updatedAt" : "2020-11-12T17:26:59Z",
        "lastEditedBy" : "f64c354b-61cb-4b89-b58f-f464e7ad4f94",
        "tags" : [
        ]
      }
    ],
    "commit" : "d2859cd89b0ec00054219ed9988c6dccff39a0c8",
    "line" : 45,
    "diffHunk" : "@@ -1,1 +501,505 @@\t\t}\n\t}\n\n\treturn allErrs\n}"
  },
  {
    "id" : "dd97e6ac-a9ad-499e-b186-0616207f03c3",
    "prId" : 91939,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/91939#pullrequestreview-428488212",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c9009b66-d991-4299-a9ce-aec52833c387",
        "parentId" : null,
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "I think this is ok but I need to double check",
        "createdAt" : "2020-06-10T23:12:20Z",
        "updatedAt" : "2020-07-03T19:55:18Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      }
    ],
    "commit" : "9a66e8e1b5820027c1747cff052d335e29597fc2",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +449,453 @@func validateStorageCapacity(storageCapacity *bool, fldPath *field.Path) field.ErrorList {\n\tallErrs := field.ErrorList{}\n\tif storageCapacity == nil && utilfeature.DefaultFeatureGate.Enabled(features.CSIStorageCapacity) {\n\t\tallErrs = append(allErrs, field.Required(fldPath, \"\"))\n\t}"
  },
  {
    "id" : "50d7ffbb-e0da-488f-b4ae-7cde49a614a6",
    "prId" : 80945,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/80945#pullrequestreview-271327927",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "30b983cc-678e-48c5-aa6b-060056108a92",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "this looks good",
        "createdAt" : "2019-08-06T13:02:39Z",
        "updatedAt" : "2019-08-06T15:33:51Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "bb77aa7a63124bf3a46daaa421d033f3dbd04346",
    "line" : 9,
    "diffHunk" : "@@ -1,1 +188,192 @@\t\t}\n\tcase source.InlineVolumeSpec != nil:\n\t\tallErrs = append(allErrs, storagevalidation.ValidatePersistentVolumeSpec(source.InlineVolumeSpec, \"\", true, fldPath.Child(\"inlineVolumeSpec\"))...)\n\t}\n\treturn allErrs"
  },
  {
    "id" : "aa195733-d3a8-4bd1-88f0-b4df9aa6b540",
    "prId" : 80568,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/80568#pullrequestreview-278231117",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "26a75ded-7a68-4bfa-b513-b21c4fb9b99a",
        "parentId" : null,
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Validation needs to be gated on feature flag enablement.  If the flag is off, this validation should be a no-op.",
        "createdAt" : "2019-08-13T16:55:11Z",
        "updatedAt" : "2019-08-22T06:59:14Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "e6fb03a3-063a-49b2-a38b-21d851c8dc7d",
        "parentId" : "26a75ded-7a68-4bfa-b513-b21c4fb9b99a",
        "authorId" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "body" : "When doing that, this (currently) invalid test case no longer triggers an error:\r\n```\r\n\t\t{\r\n\t\t\t// invalid mode\r\n\t\t\tObjectMeta: metav1.ObjectMeta{Name: driverName},\r\n\t\t\tSpec: storage.CSIDriverSpec{\r\n\t\t\t\tAttachRequired: &attachNotRequired,\r\n\t\t\t\tPodInfoOnMount: &notPodInfoOnMount,\r\n\t\t\t\tVolumeLifecycleModes: []storage.VolumeLifecycleMode{\r\n\t\t\t\t\t\"no-such-mode\",\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n```\r\n\r\nIs that really intended? Just wondering, I already updated `TestCSIDriverValidation` accordingly and now run it with and without the feature enabled, to cover both scenarios.\r\n\r\nSee commit 6d231769ebff86a8b062ddacaae03fb9559c668a.\r\n\r\nI'll change `TestCSIDriverValidationUpdate` in the upcoming testing PR. In the meantime, can we merge this PR as it is now? I'm currently on vacation and would prefer to get this merged with just those changes that are considered essential.\r\n\r\nIt also continues to conflict with other changes going into master (like 7c1f55f4003ae24ffbdbb8ca6f6594807783230a). I rebased to resolved that conflict. @msau42, can you re-add your lgtm?\r\n",
        "createdAt" : "2019-08-13T20:53:16Z",
        "updatedAt" : "2019-08-22T06:59:14Z",
        "lastEditedBy" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "tags" : [
        ]
      },
      {
        "id" : "be0274aa-f816-420d-8b55-d6bc4ac217bf",
        "parentId" : "26a75ded-7a68-4bfa-b513-b21c4fb9b99a",
        "authorId" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "body" : "Wait, this also affects `TestCSIDriverValidation/invalid_volume_mode` in `strategy_test.go`. I'll address that now.",
        "createdAt" : "2019-08-13T21:02:10Z",
        "updatedAt" : "2019-08-22T06:59:14Z",
        "lastEditedBy" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "tags" : [
        ]
      },
      {
        "id" : "36006866-fbe8-4acb-bc4d-662dd85c9369",
        "parentId" : "26a75ded-7a68-4bfa-b513-b21c4fb9b99a",
        "authorId" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "body" : "Done.\r\n",
        "createdAt" : "2019-08-13T21:18:52Z",
        "updatedAt" : "2019-08-22T06:59:14Z",
        "lastEditedBy" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "tags" : [
        ]
      },
      {
        "id" : "fa17d7ad-5708-4068-8af1-124d468a4d4c",
        "parentId" : "26a75ded-7a68-4bfa-b513-b21c4fb9b99a",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "The scenario is that someone can turn the gate on, get a value stored, then turn the gate off.  If the gate is off, the object from storage must be considered valid even if the field is set, or set incorrectly.",
        "createdAt" : "2019-08-16T17:15:20Z",
        "updatedAt" : "2019-08-22T06:59:14Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "9346e8a3-b140-40c0-8905-5d4e4339ea9c",
        "parentId" : "26a75ded-7a68-4bfa-b513-b21c4fb9b99a",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "> Validation needs to be gated on feature flag enablement. If the flag is off, this validation should be a no-op.\r\n\r\nthere are a couple existing exceptions in the codebase, but in general, validation should not pay attention to feature gates.\r\n\r\nThe recommended approach:\r\n1. In PrepareForCreate data related to a disabled feature\r\n2. In PrepareForUpdate data related to a disabled feature *unless* the existing object already made use of that data\r\n3. In validation, validate normally without regard to feature gates",
        "createdAt" : "2019-08-16T17:29:38Z",
        "updatedAt" : "2019-08-22T06:59:14Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "72e5ecae-00ca-454e-82b6-21fd6a2142ae",
        "parentId" : "26a75ded-7a68-4bfa-b513-b21c4fb9b99a",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "see https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api_changes.md#alpha-field-in-existing-api-version for details",
        "createdAt" : "2019-08-16T17:30:18Z",
        "updatedAt" : "2019-08-22T06:59:14Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "a10af36e-a190-4c47-b8fb-eb7ec139865a",
        "parentId" : "26a75ded-7a68-4bfa-b513-b21c4fb9b99a",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Thanks for the clarification Jordan",
        "createdAt" : "2019-08-16T19:40:11Z",
        "updatedAt" : "2019-08-22T06:59:14Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "aabe2a15-355b-49d4-8de6-ea1a99492b3a",
        "parentId" : "26a75ded-7a68-4bfa-b513-b21c4fb9b99a",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Please remove the gate as Jordan describes.",
        "createdAt" : "2019-08-21T11:12:24Z",
        "updatedAt" : "2019-08-22T06:59:14Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "8157b962-9ef7-44c0-a611-cb92639142b8",
        "parentId" : "26a75ded-7a68-4bfa-b513-b21c4fb9b99a",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "You may be able to drop this entire commit (if there were no new tests added)",
        "createdAt" : "2019-08-21T11:15:59Z",
        "updatedAt" : "2019-08-22T06:59:14Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "2a0fb932-41d2-4e54-92a9-aac965fd4be7",
        "parentId" : "26a75ded-7a68-4bfa-b513-b21c4fb9b99a",
        "authorId" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "body" : "I removed the commit.\r\n\r\n@smarterclayton, @msau42 : please check again and lgtm if it's ready.",
        "createdAt" : "2019-08-22T07:19:00Z",
        "updatedAt" : "2019-08-22T07:19:00Z",
        "lastEditedBy" : "ba0b9c6e-ec4c-4d1b-832e-751e6109bf38",
        "tags" : [
        ]
      }
    ],
    "commit" : "8270fe81e4916b599c8a9a83552a5381b434dd7f",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +446,450 @@// validateVolumeLifecycleModes tests if mode has one of the allowed values.\nfunc validateVolumeLifecycleModes(modes []storage.VolumeLifecycleMode, fldPath *field.Path) field.ErrorList {\n\tallErrs := field.ErrorList{}\n\tfor _, mode := range modes {\n\t\tswitch mode {"
  },
  {
    "id" : "14c7368d-9f09-4f05-8962-be57f469612e",
    "prId" : 77703,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/77703#pullrequestreview-236472609",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b846a84d-fc6e-4ef7-bd27-cbd0f2219403",
        "parentId" : null,
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "can you add unit tests for create and update",
        "createdAt" : "2019-05-10T01:44:51Z",
        "updatedAt" : "2019-05-30T09:35:54Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "a5df7a36-95c9-4f87-a20d-15a3de3ee392",
        "parentId" : "b846a84d-fc6e-4ef7-bd27-cbd0f2219403",
        "authorId" : "98986d5f-c846-4478-8363-8a016e3d6b89",
        "body" : "Done.",
        "createdAt" : "2019-05-13T04:34:01Z",
        "updatedAt" : "2019-05-30T09:35:54Z",
        "lastEditedBy" : "98986d5f-c846-4478-8363-8a016e3d6b89",
        "tags" : [
        ]
      }
    ],
    "commit" : "de7be9d6133bb985d9f1d0fa029e03166f6cd0f4",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +173,177 @@func validateVolumeAttachmentSource(source *storage.VolumeAttachmentSource, fldPath *field.Path) field.ErrorList {\n\tallErrs := field.ErrorList{}\n\tswitch {\n\tcase source.InlineVolumeSpec == nil && source.PersistentVolumeName == nil:\n\t\tif utilfeature.DefaultFeatureGate.Enabled(features.CSIMigration) {"
  },
  {
    "id" : "0fbd60ac-a9e9-4371-b94b-ea6e0c434525",
    "prId" : 77703,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/77703#pullrequestreview-243089495",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cf8e01fc-03e7-4de3-bfe2-7501fac5153f",
        "parentId" : null,
        "authorId" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "body" : "should we throw an error when `source.InlineVolumeSpec != nil` and the feature gate is not enabled.",
        "createdAt" : "2019-05-28T22:19:11Z",
        "updatedAt" : "2019-05-30T09:35:54Z",
        "lastEditedBy" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "tags" : [
        ]
      },
      {
        "id" : "03f81607-d91b-4af4-8d29-86cfb1c70d39",
        "parentId" : "cf8e01fc-03e7-4de3-bfe2-7501fac5153f",
        "authorId" : "98986d5f-c846-4478-8363-8a016e3d6b89",
        "body" : "Done",
        "createdAt" : "2019-05-29T07:50:32Z",
        "updatedAt" : "2019-05-30T09:35:54Z",
        "lastEditedBy" : "98986d5f-c846-4478-8363-8a016e3d6b89",
        "tags" : [
        ]
      }
    ],
    "commit" : "de7be9d6133bb985d9f1d0fa029e03166f6cd0f4",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +187,191 @@\t\t\tallErrs = append(allErrs, field.Required(fldPath.Child(\"persistentVolumeName\"), \"must specify non empty persistentVolumeName\"))\n\t\t}\n\tcase source.InlineVolumeSpec != nil:\n\t\tif utilfeature.DefaultFeatureGate.Enabled(features.CSIMigration) {\n\t\t\tallErrs = append(allErrs, storagevalidation.ValidatePersistentVolumeSpec(source.InlineVolumeSpec, \"\", true, fldPath.Child(\"inlineVolumeSpec\"))...)"
  },
  {
    "id" : "ee41145d-084b-495d-8c72-e7387b91cf4d",
    "prId" : 77595,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/77595#pullrequestreview-236370289",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2925689c-bd34-47be-97e9-6682013b88a8",
        "parentId" : null,
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "int32?",
        "createdAt" : "2019-05-10T00:52:36Z",
        "updatedAt" : "2019-06-25T14:31:23Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "1ff1e3f4-4a5e-4f7f-9d85-f34ebda9fd50",
        "parentId" : "2925689c-bd34-47be-97e9-6682013b88a8",
        "authorId" : "255dd885-bee4-4c1f-baef-ba11f903dc5c",
        "body" : "`ValidateNonnegativeField` takes `int64` as input",
        "createdAt" : "2019-05-10T07:17:30Z",
        "updatedAt" : "2019-06-25T14:31:23Z",
        "lastEditedBy" : "255dd885-bee4-4c1f-baef-ba11f903dc5c",
        "tags" : [
        ]
      },
      {
        "id" : "e7a54877-fe5d-4ae3-80db-9e9133a21fc9",
        "parentId" : "2925689c-bd34-47be-97e9-6682013b88a8",
        "authorId" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "body" : "yeah it was discussed in the KEP. @bsalamat expected this to be int32 since that should be enough to store volume limits. ",
        "createdAt" : "2019-05-10T15:48:40Z",
        "updatedAt" : "2019-06-25T14:31:23Z",
        "lastEditedBy" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "tags" : [
        ]
      },
      {
        "id" : "374ffb0f-18b6-4cfc-ace7-bc77c973234e",
        "parentId" : "2925689c-bd34-47be-97e9-6682013b88a8",
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "Do we want to validate maxint32 here too then?",
        "createdAt" : "2019-05-11T01:12:59Z",
        "updatedAt" : "2019-06-25T14:31:23Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "4b3cbff0-3ad5-454d-9be0-4fea4ba95cba",
        "parentId" : "2925689c-bd34-47be-97e9-6682013b88a8",
        "authorId" : "255dd885-bee4-4c1f-baef-ba11f903dc5c",
        "body" : "Since `*a.Count` is an  `int32`, I think we don't need to check if it's `> MaxInt32`, we only need to check if it's negative.\r\n\r\nThe worst thing that can happen is someone assigning `Count` with a truncated value (this will result in `Count == 1`, and we'd have the same problem if `Count` was an `int64`):\r\n\r\n```\r\nx := int64((math.MaxInt32 + 1) + (math.MaxInt32 + 1) + 1)\r\nallocatable.Count = int32(x)\r\n```",
        "createdAt" : "2019-05-11T09:43:26Z",
        "updatedAt" : "2019-06-25T14:31:23Z",
        "lastEditedBy" : "255dd885-bee4-4c1f-baef-ba11f903dc5c",
        "tags" : [
        ]
      }
    ],
    "commit" : "6abc04d059b42ffdc1b68f5b847f18e57ac0680d",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +360,364 @@\t}\n\n\tallErrs = append(allErrs, apivalidation.ValidateNonnegativeField(int64(*a.Count), fldPath.Child(\"count\"))...)\n\treturn allErrs\n}"
  },
  {
    "id" : "50e4b581-76b6-4585-8907-3be2d1f1cf47",
    "prId" : 73883,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/73883#pullrequestreview-205886826",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "30df520d-379a-4e5a-beb8-98c974e0fd67",
        "parentId" : null,
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "@davidz627 for migration, this can be empty right?",
        "createdAt" : "2019-02-19T18:56:33Z",
        "updatedAt" : "2019-03-02T20:31:47Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "2e0cfb28-649f-478a-a926-e064565974a8",
        "parentId" : "30df520d-379a-4e5a-beb8-98c974e0fd67",
        "authorId" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "body" : "yes its possible that it will be empty on Kubelet startup, and is populated later when/if the Driver is registered.",
        "createdAt" : "2019-02-19T22:44:19Z",
        "updatedAt" : "2019-03-02T20:31:47Z",
        "lastEditedBy" : "542e5d2f-2ff9-4674-ab44-78f31768e7a1",
        "tags" : [
        ]
      },
      {
        "id" : "de5d14cd-01e3-42ef-8189-ca74c4dd3df0",
        "parentId" : "30df520d-379a-4e5a-beb8-98c974e0fd67",
        "authorId" : "275dd783-53c3-4fed-8434-96ed6a2e0331",
        "body" : "Ok",
        "createdAt" : "2019-02-20T17:10:22Z",
        "updatedAt" : "2019-03-02T20:31:47Z",
        "lastEditedBy" : "275dd783-53c3-4fed-8434-96ed6a2e0331",
        "tags" : [
        ]
      }
    ],
    "commit" : "743d3a26e9767340110578f30bc774660b03396c",
    "line" : 72,
    "diffHunk" : "@@ -1,1 +321,325 @@\n\t// nodeID is always required\n\tif len(nodeID) == 0 {\n\t\tallErrs = append(allErrs, field.Required(fldPath, nodeID))\n\t}"
  },
  {
    "id" : "5898c4db-578f-48ce-a575-b3e770235e72",
    "prId" : 73883,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/73883#pullrequestreview-205890982",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0b84fb81-12f5-4894-be43-4437f91a22dd",
        "parentId" : null,
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "should the topology key be validated according to the csi spec rules? https://github.com/container-storage-interface/spec/blob/master/csi.proto#L621",
        "createdAt" : "2019-02-19T18:58:55Z",
        "updatedAt" : "2019-03-02T20:31:47Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "45c2dd95-ea04-4fdb-9bbc-d8cb0ca7f9c8",
        "parentId" : "0b84fb81-12f5-4894-be43-4437f91a22dd",
        "authorId" : "275dd783-53c3-4fed-8434-96ed6a2e0331",
        "body" : "Sure.  They are pretty much like the rules for a driver name.",
        "createdAt" : "2019-02-20T17:18:04Z",
        "updatedAt" : "2019-03-02T20:31:47Z",
        "lastEditedBy" : "275dd783-53c3-4fed-8434-96ed6a2e0331",
        "tags" : [
        ]
      }
    ],
    "commit" : "743d3a26e9767340110578f30bc774660b03396c",
    "line" : 95,
    "diffHunk" : "@@ -1,1 +344,348 @@\ttopoKeys := make(sets.String)\n\tfor _, key := range driver.TopologyKeys {\n\t\tif len(key) == 0 {\n\t\t\tallErrs = append(allErrs, field.Required(fldPath, key))\n\t\t}"
  },
  {
    "id" : "127f2774-3746-49a7-96ff-ee9afbbd1b05",
    "prId" : 73883,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/73883#pullrequestreview-205386169",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0a459625-4f7d-405a-bfe8-cb6f2fde2ac9",
        "parentId" : null,
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "@jsafrane do you expect podinfoonmount version to be mutable on a driver upgrade? Or do we expect the cluster-driver-registrar to delete and recreate the objects?",
        "createdAt" : "2019-02-19T19:03:25Z",
        "updatedAt" : "2019-03-02T20:31:47Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      }
    ],
    "commit" : "743d3a26e9767340110578f30bc774660b03396c",
    "line" : 127,
    "diffHunk" : "@@ -1,1 +376,380 @@\t// Spec is read-only\n\t// If this ever relaxes in the future, make sure to increment the Generation number in PrepareForUpdate\n\tif !apiequality.Semantic.DeepEqual(old.Spec, new.Spec) {\n\t\tallErrs = append(allErrs, field.Invalid(field.NewPath(\"spec\"), new.Spec, \"field is immutable\"))\n\t}"
  },
  {
    "id" : "941f567b-c95e-49ee-a1b7-3c4d34233f82",
    "prId" : 73883,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/73883#pullrequestreview-207761364",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "63f826a9-3576-4bfc-9c99-0fd443a80b0f",
        "parentId" : null,
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "Maybe checking for duplicate drivers should be done in `validateCSINodeDrivers`, since it spans CSINodeDriver entries",
        "createdAt" : "2019-02-25T19:14:31Z",
        "updatedAt" : "2019-03-02T20:31:47Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "1d5b5a2c-4f49-4889-ab6f-0410e77ae02a",
        "parentId" : "63f826a9-3576-4bfc-9c99-0fd443a80b0f",
        "authorId" : "275dd783-53c3-4fed-8434-96ed6a2e0331",
        "body" : "I think I have moved this back and forth based on review comments:).  So I'll get rid of validateCSINodeDriver and move everything back to validateCSINodeDrivers?",
        "createdAt" : "2019-02-25T20:59:43Z",
        "updatedAt" : "2019-03-02T20:31:47Z",
        "lastEditedBy" : "275dd783-53c3-4fed-8434-96ed6a2e0331",
        "tags" : [
        ]
      },
      {
        "id" : "4e91950f-79c3-46d2-aa3e-cc1c5dacc00e",
        "parentId" : "63f826a9-3576-4bfc-9c99-0fd443a80b0f",
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "ok now I see the difficulty of trying to validate and then store the driver name across two functions. either way is fine with me",
        "createdAt" : "2019-02-25T22:13:43Z",
        "updatedAt" : "2019-03-02T20:31:47Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "29631610-3fb5-4563-aa1f-61097ba918d4",
        "parentId" : "63f826a9-3576-4bfc-9c99-0fd443a80b0f",
        "authorId" : "275dd783-53c3-4fed-8434-96ed6a2e0331",
        "body" : "Ok",
        "createdAt" : "2019-02-26T04:57:27Z",
        "updatedAt" : "2019-03-02T20:31:47Z",
        "lastEditedBy" : "275dd783-53c3-4fed-8434-96ed6a2e0331",
        "tags" : [
        ]
      }
    ],
    "commit" : "743d3a26e9767340110578f30bc774660b03396c",
    "line" : 88,
    "diffHunk" : "@@ -1,1 +337,341 @@\tallErrs = append(allErrs, validateCSINodeDriverNodeID(driver.NodeID, fldPath.Child(\"nodeID\"))...)\n\n\t// check for duplicate entries for the same driver in specs\n\tif driverNamesInSpecs.Has(driver.Name) {\n\t\tallErrs = append(allErrs, field.Duplicate(fldPath.Child(\"name\"), driver.Name))"
  },
  {
    "id" : "b953b139-990a-4306-a780-dc7b4812aa84",
    "prId" : 54463,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/54463#pullrequestreview-75711532",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "65f336b8-2b54-479a-9e43-df81930c74b8",
        "parentId" : null,
        "authorId" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "body" : "There should be also `ValidateVolumeAttachmentUpdate` that makes sure that Spec can't be changed.",
        "createdAt" : "2017-10-24T14:16:26Z",
        "updatedAt" : "2017-11-15T01:30:59Z",
        "lastEditedBy" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "tags" : [
        ]
      },
      {
        "id" : "55a70c1d-e6f6-4862-aaa4-96c236c838d5",
        "parentId" : "65f336b8-2b54-479a-9e43-df81930c74b8",
        "authorId" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "body" : "This is fixed now few lines below.",
        "createdAt" : "2017-11-10T10:07:49Z",
        "updatedAt" : "2017-11-15T01:30:59Z",
        "lastEditedBy" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "tags" : [
        ]
      }
    ],
    "commit" : "9f294c1ad041e3cebd2d29a3afd42d00796c4f55",
    "line" : 82,
    "diffHunk" : "@@ -1,1 +173,177 @@\t}\n\treturn allErrs\n}\n\n// validaVolumeAttachmentStatus tests if volumeAttachmentStatus is valid."
  }
]