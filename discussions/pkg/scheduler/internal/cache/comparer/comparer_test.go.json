[
  {
    "id" : "7de79ad6-7e01-42bc-a776-c80fd246958e",
    "prId" : 69317,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/69317#pullrequestreview-163459467",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5d3c87a8-1fba-4dcd-bde4-7623ed3e8540",
        "parentId" : null,
        "authorId" : "5f2c1de8-4266-42c0-b343-ba247af3578f",
        "body" : "If it's trivial, please change package name to `comparer_test` in this PR.",
        "createdAt" : "2018-10-09T19:19:06Z",
        "updatedAt" : "2018-10-10T13:28:48Z",
        "lastEditedBy" : "5f2c1de8-4266-42c0-b343-ba247af3578f",
        "tags" : [
        ]
      },
      {
        "id" : "5de235f3-6063-4efe-b493-803acd9b0ece",
        "parentId" : "5d3c87a8-1fba-4dcd-bde4-7623ed3e8540",
        "authorId" : "33ab9fbe-6f55-45c0-a58d-be01aec201d9",
        "body" : "Why do we should name the package as `combiner_test`? Sorry, I can't understand the benefits of doing this?\r\n\r\nBut, even if we do, what should we name our file name? If we don't make any changes of files in combiner_test, we will get:\r\n`pkg/scheduler/factory/factory.go:63:2: found packages comparer (comparer.go) and comparer (comparer_test.go) `\r\n\r\n(I'm sure I have set the package name in comparer.go and  comparer_test.go as comparer_test. Perhaps contrary to Go's naming rules?)",
        "createdAt" : "2018-10-10T11:27:37Z",
        "updatedAt" : "2018-10-10T13:28:48Z",
        "lastEditedBy" : "33ab9fbe-6f55-45c0-a58d-be01aec201d9",
        "tags" : [
        ]
      },
      {
        "id" : "0cae79a2-0df2-4e7a-9768-a415c0b4ca7e",
        "parentId" : "5d3c87a8-1fba-4dcd-bde4-7623ed3e8540",
        "authorId" : "5f2c1de8-4266-42c0-b343-ba247af3578f",
        "body" : "I think this is coming from my c++ background, where we try to test via public interfaces. For example, suppose one of the structs in our package has a private field protected by a private `sync.Mutex`. Nothing prevents a unit test from accessing the field without holding the mutex. (Hopefully `go test -race` would catch it.)\r\n\r\nThe point is that direct access to private fields might lead us to test the wrong thing. To follow from the previous example, if we have a strong guarantee that all access to the field is protected by a mutex, we can make certain assumptions about concurrent access.\r\n\r\nRegardless of the package name, the file name \"comparer_test.go\" is appropriate.\r\n\r\n/lgtm",
        "createdAt" : "2018-10-10T16:53:35Z",
        "updatedAt" : "2018-10-10T16:53:42Z",
        "lastEditedBy" : "5f2c1de8-4266-42c0-b343-ba247af3578f",
        "tags" : [
        ]
      }
    ],
    "commit" : "f44f55cdd7a6b97433a79b60c7149a6ef7212a54",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +15,19 @@*/\n\npackage comparer\n\nimport ("
  }
]