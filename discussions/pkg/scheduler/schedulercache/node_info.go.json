[
  {
    "id" : "a5ada7cc-610e-42f1-a7dd-87dcf69f928d",
    "prId" : 63264,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/63264#pullrequestreview-117470804",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "39d31e00-5948-4202-aaf0-cc6adf4038fb",
        "parentId" : null,
        "authorId" : "38ca4f80-c365-4775-8981-1e56b713b07b",
        "body" : "Wondering what will happen if overflow occurs. I quickly looked up if `Add` could panic, seems it doesn't in all cases.",
        "createdAt" : "2018-04-28T02:36:32Z",
        "updatedAt" : "2018-04-28T02:36:33Z",
        "lastEditedBy" : "38ca4f80-c365-4775-8981-1e56b713b07b",
        "tags" : [
        ]
      },
      {
        "id" : "e1a98e33-7518-4e01-98ab-2e5c21e15d6e",
        "parentId" : "39d31e00-5948-4202-aaf0-cc6adf4038fb",
        "authorId" : "7dd504ec-7e63-45b3-98f8-6eb1c683e9c2",
        "body" : "Check this upstream issue: https://github.com/golang/go/issues/20687\r\n\r\nMaybe we can leave a comment with \"Overflow not handled\" :)",
        "createdAt" : "2018-04-29T00:38:19Z",
        "updatedAt" : "2018-04-29T00:38:19Z",
        "lastEditedBy" : "7dd504ec-7e63-45b3-98f8-6eb1c683e9c2",
        "tags" : [
        ]
      },
      {
        "id" : "b013ad9d-e973-4199-a0b4-f5e68dc67116",
        "parentId" : "39d31e00-5948-4202-aaf0-cc6adf4038fb",
        "authorId" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "body" : "If the counter is incremented 1 billion times per second, it will take over 200 years for it to overflow. Should we be really worried about its overflowing?! :-)",
        "createdAt" : "2018-04-30T22:35:41Z",
        "updatedAt" : "2018-04-30T22:36:04Z",
        "lastEditedBy" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "tags" : [
        ]
      },
      {
        "id" : "b21b0ee7-5702-4b8e-a985-2af16e576399",
        "parentId" : "39d31e00-5948-4202-aaf0-cc6adf4038fb",
        "authorId" : "fa37bbb4-59dd-42f0-8202-52d5717aff5e",
        "body" : "agree. int64 won't overflow.",
        "createdAt" : "2018-05-01T02:43:43Z",
        "updatedAt" : "2018-05-01T02:45:02Z",
        "lastEditedBy" : "fa37bbb4-59dd-42f0-8202-52d5717aff5e",
        "tags" : [
        ]
      },
      {
        "id" : "4ddcad91-36b9-468e-8d71-2d17f36546b6",
        "parentId" : "39d31e00-5948-4202-aaf0-cc6adf4038fb",
        "authorId" : "7dd504ec-7e63-45b3-98f8-6eb1c683e9c2",
        "body" : "Just commented for fun, I believe overflow should not be the concern :-)",
        "createdAt" : "2018-05-02T09:01:03Z",
        "updatedAt" : "2018-05-02T09:08:18Z",
        "lastEditedBy" : "7dd504ec-7e63-45b3-98f8-6eb1c683e9c2",
        "tags" : [
        ]
      },
      {
        "id" : "33349df2-0c33-45f4-afa2-760379b45e4f",
        "parentId" : "39d31e00-5948-4202-aaf0-cc6adf4038fb",
        "authorId" : "38ca4f80-c365-4775-8981-1e56b713b07b",
        "body" : "Ack :)",
        "createdAt" : "2018-05-04T00:25:52Z",
        "updatedAt" : "2018-05-04T00:25:52Z",
        "lastEditedBy" : "38ca4f80-c365-4775-8981-1e56b713b07b",
        "tags" : [
        ]
      }
    ],
    "commit" : "3cfed68c7a865a1edbe7466164a335cc7ee992ed",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +84,88 @@// added back with the same name. See issue#63262.\nfunc nextGeneration() int64 {\n\treturn atomic.AddInt64(&generation, 1)\n}\n"
  },
  {
    "id" : "2fc12881-8439-4d5a-bfa7-9d2bad94c6d2",
    "prId" : 62934,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/62934#pullrequestreview-114613260",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a869178c-2a29-40e0-b096-2dbc67846a3b",
        "parentId" : null,
        "authorId" : "7dd504ec-7e63-45b3-98f8-6eb1c683e9c2",
        "body" : "Isn't it a nil pointer error?",
        "createdAt" : "2018-04-23T21:40:45Z",
        "updatedAt" : "2018-05-09T07:34:23Z",
        "lastEditedBy" : "7dd504ec-7e63-45b3-98f8-6eb1c683e9c2",
        "tags" : [
        ]
      },
      {
        "id" : "6de645aa-7e9c-494b-96b2-14e3fbf9aa14",
        "parentId" : "a869178c-2a29-40e0-b096-2dbc67846a3b",
        "authorId" : "f71497cc-dd85-47eb-bbed-996bde0d13a4",
        "body" : "Yes",
        "createdAt" : "2018-04-24T02:11:52Z",
        "updatedAt" : "2018-05-09T07:34:23Z",
        "lastEditedBy" : "f71497cc-dd85-47eb-bbed-996bde0d13a4",
        "tags" : [
        ]
      }
    ],
    "commit" : "adea3733a8c077a1fb4371df32a7bb90fb1bbe73",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +205,209 @@// SetMaxResource compares with ResourceList and takes max value for each Resource.\nfunc (r *Resource) SetMaxResource(rl v1.ResourceList) {\n\tif r == nil {\n\t\treturn\n\t}"
  },
  {
    "id" : "98ae4708-1ac2-40e0-8d7f-8d22182f532d",
    "prId" : 60525,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/60525#pullrequestreview-106350376",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3cb052b2-cb53-4dee-a91d-f585808f4a56",
        "parentId" : null,
        "authorId" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "body" : "Yes, this is what I suggested. Thanks.",
        "createdAt" : "2018-03-23T00:03:20Z",
        "updatedAt" : "2018-03-30T23:11:59Z",
        "lastEditedBy" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "tags" : [
        ]
      },
      {
        "id" : "c58f01ae-6067-41da-99a1-2457f3cc0142",
        "parentId" : "3cb052b2-cb53-4dee-a91d-f585808f4a56",
        "authorId" : "38ca4f80-c365-4775-8981-1e56b713b07b",
        "body" : "Ok, Thanks. I have almost all tests fixed. PTAL.",
        "createdAt" : "2018-03-23T00:48:34Z",
        "updatedAt" : "2018-03-30T23:11:59Z",
        "lastEditedBy" : "38ca4f80-c365-4775-8981-1e56b713b07b",
        "tags" : [
        ]
      }
    ],
    "commit" : "2aaf85d01d34a34242fdac1edb38c1b292d66953",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +58,62 @@\t// scheduling cycle.\n\t// TODO: @ravig. Remove this once we have a clear approach for message passing across predicates and priorities.\n\tTransientInfo *transientSchedulerInfo\n\n\t// Cached conditions of node for faster lookup."
  }
]