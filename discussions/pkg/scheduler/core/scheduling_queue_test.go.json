[
  {
    "id" : "b80b683f-4b3c-4358-9df2-054dae416139",
    "prId" : 68700,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/68700#pullrequestreview-159715980",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6ae98cca-f7da-4125-ac69-783ea1c53322",
        "parentId" : null,
        "authorId" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "body" : "In this test, the queue has nothing pods added. Should we test a scenario to add several pods, close the queue, and ensure all pods are popped out? and check (last pod, err) == (nil, \"queue closed\" error) ",
        "createdAt" : "2018-09-27T00:25:29Z",
        "updatedAt" : "2018-09-27T21:33:16Z",
        "lastEditedBy" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "tags" : [
        ]
      },
      {
        "id" : "f0039550-a4b8-4364-b188-1bdf2f60baea",
        "parentId" : "6ae98cca-f7da-4125-ac69-783ea1c53322",
        "authorId" : "5f2c1de8-4266-42c0-b343-ba247af3578f",
        "body" : "It's not clear whether \"draining\" the queue is supposed to work after it is closed. Does it behave differently for the two implementations?",
        "createdAt" : "2018-09-27T19:29:35Z",
        "updatedAt" : "2018-09-27T21:33:16Z",
        "lastEditedBy" : "5f2c1de8-4266-42c0-b343-ba247af3578f",
        "tags" : [
        ]
      },
      {
        "id" : "f5018cbc-0873-4bb7-834e-7174d9abd9e8",
        "parentId" : "6ae98cca-f7da-4125-ac69-783ea1c53322",
        "authorId" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "body" : "My reading in the source code is both FIFO and PriorityQueue still handle the resting items after it's closed.",
        "createdAt" : "2018-09-27T21:03:11Z",
        "updatedAt" : "2018-09-27T21:33:16Z",
        "lastEditedBy" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "tags" : [
        ]
      },
      {
        "id" : "75c89827-59a3-44b7-8a61-315dc20b7612",
        "parentId" : "6ae98cca-f7da-4125-ac69-783ea1c53322",
        "authorId" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "body" : "It is not necessary to process all queue items before closing it. In fact, if provided such a guarantee, we might not be able to shutdown the scheduler for a long time as the rate of addition of pods to the queue could be larger than the rate of scheduling them.",
        "createdAt" : "2018-09-27T23:28:16Z",
        "updatedAt" : "2018-09-27T23:28:19Z",
        "lastEditedBy" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "tags" : [
        ]
      },
      {
        "id" : "832f8f36-1007-44ae-a231-72d22081336c",
        "parentId" : "6ae98cca-f7da-4125-ac69-783ea1c53322",
        "authorId" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "body" : "Apologize the misleading words. I re-read the code, my previous statement is inaccurate. It should be \"Resting items will be handled one time *at most* if queue is closed.\"\r\n\r\nIt's because in Pop(), if there are other items enqueued and queue is closed, next item will be popped out. And in outer logic, wait.Until() will return gracefully as stopChan is closed.",
        "createdAt" : "2018-09-27T23:43:30Z",
        "updatedAt" : "2018-09-27T23:43:30Z",
        "lastEditedBy" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "tags" : [
        ]
      },
      {
        "id" : "76668459-273c-4198-9c4f-056a6ed78ced",
        "parentId" : "6ae98cca-f7da-4125-ac69-783ea1c53322",
        "authorId" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "body" : "So I think we're good at dealing with at most one more item.",
        "createdAt" : "2018-09-27T23:44:38Z",
        "updatedAt" : "2018-09-27T23:44:39Z",
        "lastEditedBy" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "tags" : [
        ]
      },
      {
        "id" : "6edbfbf6-c11a-449d-b3fb-d57d0aabe86d",
        "parentId" : "6ae98cca-f7da-4125-ac69-783ea1c53322",
        "authorId" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "body" : "Yes, I believe we are good here, but would like to hear @k82cn 's thoughts too.",
        "createdAt" : "2018-09-28T00:19:25Z",
        "updatedAt" : "2018-09-28T00:19:25Z",
        "lastEditedBy" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "tags" : [
        ]
      },
      {
        "id" : "0e67318b-ed31-4119-9a74-bd3ce295249d",
        "parentId" : "6ae98cca-f7da-4125-ac69-783ea1c53322",
        "authorId" : "72156db3-c40b-4455-9838-c12c0c606019",
        "body" : "I'm ok with that :)\r\n\r\nThe original purpose is to make sure 1. all goroutine are stop, 2. no unexpected action after stop because of stop order; as I suffered such kind of issue in our other prod, a C++ application, e.g. core dump. I'm ok because we did not find any issue here right now :)",
        "createdAt" : "2018-09-28T01:43:06Z",
        "updatedAt" : "2018-09-28T01:43:35Z",
        "lastEditedBy" : "72156db3-c40b-4455-9838-c12c0c606019",
        "tags" : [
        ]
      },
      {
        "id" : "6ef37fd5-f7de-4afa-85d9-732c79ba0974",
        "parentId" : "6ae98cca-f7da-4125-ac69-783ea1c53322",
        "authorId" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "body" : "Thanks all for your time reviewing!",
        "createdAt" : "2018-09-28T04:23:47Z",
        "updatedAt" : "2018-09-28T04:23:47Z",
        "lastEditedBy" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "tags" : [
        ]
      }
    ],
    "commit" : "be661fddb49087af113f03b106e827bec9bc4efe",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +476,480 @@}\n\nfunc TestSchedulingQueue_Close(t *testing.T) {\n\ttests := []struct {\n\t\tname        string"
  },
  {
    "id" : "88f2e79c-49e7-45db-bdf0-27c547dae1f2",
    "prId" : 59281,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/59281#pullrequestreview-94845837",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7bf3470c-88f6-4b24-af7c-723efd95bf1b",
        "parentId" : null,
        "authorId" : "6252ac4b-6b9e-4dee-8931-ca3b934d52fc",
        "body" : "just noticed if its a typo? `annot2 -> annot1` and `val2->val1` \r\n@bsalamat can you double check, though tests are passing. ",
        "createdAt" : "2018-02-07T19:06:29Z",
        "updatedAt" : "2018-02-07T19:06:29Z",
        "lastEditedBy" : "6252ac4b-6b9e-4dee-8931-ca3b934d52fc",
        "tags" : [
        ]
      },
      {
        "id" : "5e120845-42e3-4fd4-93dc-e364c7154a53",
        "parentId" : "7bf3470c-88f6-4b24-af7c-723efd95bf1b",
        "authorId" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "body" : "No, it is not. That second annotation has no effect on the tests. I had put it there to have more annotations than just nominated node name. Now that the nominated node name is removed, I renamed the other annotation.",
        "createdAt" : "2018-02-07T19:08:20Z",
        "updatedAt" : "2018-02-07T19:08:20Z",
        "lastEditedBy" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "tags" : [
        ]
      },
      {
        "id" : "67c41c9e-ece9-442c-8557-d7c2f6db0bd8",
        "parentId" : "7bf3470c-88f6-4b24-af7c-723efd95bf1b",
        "authorId" : "6252ac4b-6b9e-4dee-8931-ca3b934d52fc",
        "body" : "sounds good.",
        "createdAt" : "2018-02-07T19:47:56Z",
        "updatedAt" : "2018-02-07T19:47:56Z",
        "lastEditedBy" : "6252ac4b-6b9e-4dee-8931-ca3b934d52fc",
        "tags" : [
        ]
      }
    ],
    "commit" : "ec69dd139b3ea69a5d7a9637fb367df74d06ab21",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +222,226 @@\t\t\t\tNamespace: \"ns1\",\n\t\t\t\tAnnotations: map[string]string{\n\t\t\t\t\t\"annot1\": \"val1\",\n\t\t\t\t},\n\t\t\t},"
  }
]