[
  {
    "id" : "7bee4b85-fb36-4f3f-a617-cce63d9bb5c3",
    "prId" : 63178,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/63178#pullrequestreview-116103920",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dbf98d38-3169-4fa3-b0ee-13cfa322a5a9",
        "parentId" : null,
        "authorId" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "body" : "It certainly does not hurt to add the locks, but do we actually need them in these unit-tests?",
        "createdAt" : "2018-04-27T21:14:52Z",
        "updatedAt" : "2018-04-27T22:58:31Z",
        "lastEditedBy" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "tags" : [
        ]
      },
      {
        "id" : "78a7f588-0675-49b5-903d-66f29cbe69d9",
        "parentId" : "dbf98d38-3169-4fa3-b0ee-13cfa322a5a9",
        "authorId" : "5f2c1de8-4266-42c0-b343-ba247af3578f",
        "body" : "I'm more comfortable leaving it as-is, and as you said, it doesn't hurt. (=",
        "createdAt" : "2018-04-27T22:57:41Z",
        "updatedAt" : "2018-04-27T22:58:31Z",
        "lastEditedBy" : "5f2c1de8-4266-42c0-b343-ba247af3578f",
        "tags" : [
        ]
      }
    ],
    "commit" : "79d30b1ad623c4e71b8d9ed33f4b18cc353908c7",
    "line" : 197,
    "diffHunk" : "@@ -1,1 +466,470 @@\t\tecache := NewEquivalenceCache()\n\t\t// set cached item to equivalence cache\n\t\tecache.mu.Lock()\n\t\tecache.updateResult(\n\t\t\ttest.podName,"
  },
  {
    "id" : "911b46e5-3700-4bd8-aa59-07f6959ffb52",
    "prId" : 63174,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/63174#pullrequestreview-115769836",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f997738a-5006-427b-82b0-a0f166485f4a",
        "parentId" : null,
        "authorId" : "7dd504ec-7e63-45b3-98f8-6eb1c683e9c2",
        "body" : "Seems we don't need this method any more?",
        "createdAt" : "2018-04-26T04:30:40Z",
        "updatedAt" : "2018-04-26T04:30:40Z",
        "lastEditedBy" : "7dd504ec-7e63-45b3-98f8-6eb1c683e9c2",
        "tags" : [
        ]
      },
      {
        "id" : "f1d96f39-4d1c-4d31-91cf-e40c1d6556fa",
        "parentId" : "f997738a-5006-427b-82b0-a0f166485f4a",
        "authorId" : "7dd504ec-7e63-45b3-98f8-6eb1c683e9c2",
        "body" : "Or we can also add a benchmark test here.",
        "createdAt" : "2018-04-26T19:04:20Z",
        "updatedAt" : "2018-04-26T19:04:27Z",
        "lastEditedBy" : "7dd504ec-7e63-45b3-98f8-6eb1c683e9c2",
        "tags" : [
        ]
      },
      {
        "id" : "d7c78e18-d2c2-46d3-a3cc-bf2198065ec1",
        "parentId" : "f997738a-5006-427b-82b0-a0f166485f4a",
        "authorId" : "5f2c1de8-4266-42c0-b343-ba247af3578f",
        "body" : "I was trying to re-do the original change without any substantial tweaks, so that the review would be smoother.",
        "createdAt" : "2018-04-26T22:27:43Z",
        "updatedAt" : "2018-04-26T22:27:43Z",
        "lastEditedBy" : "5f2c1de8-4266-42c0-b343-ba247af3578f",
        "tags" : [
        ]
      }
    ],
    "commit" : "eace2d08d0b3d5b493eefec9f8532ef2980617ac",
    "line" : 513,
    "diffHunk" : "@@ -1,1 +613,617 @@}\n\nfunc BenchmarkEquivalenceHash(b *testing.B) {\n\tpod := makeBasicPod(\"test\")\n\tfor i := 0; i < b.N; i++ {"
  },
  {
    "id" : "a4f5007f-35f0-4e19-b598-b8629d2b18a7",
    "prId" : 63040,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/63040#pullrequestreview-114869143",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fb947fbf-75ac-42c5-bf19-adb2cb1a951a",
        "parentId" : null,
        "authorId" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "body" : "Kudos for writing this sophisticated test to verify that the new synchronization mechanism works!",
        "createdAt" : "2018-04-24T16:39:30Z",
        "updatedAt" : "2018-04-25T17:19:00Z",
        "lastEditedBy" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "tags" : [
        ]
      }
    ],
    "commit" : "dacc1a8d52319cf380d15312bd44c73f54f6e9a9",
    "line" : 87,
    "diffHunk" : "@@ -1,1 +719,723 @@\t\t}\n\t\teCache.InvalidateAllCachedPredicateItemOfNode(\"machine1\")\n\t\tmockCache.cacheInvalidated <- struct{}{}\n\t}()\n"
  }
]