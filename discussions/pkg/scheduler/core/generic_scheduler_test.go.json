[
  {
    "id" : "a4b6a381-eec0-46e1-9f10-589b5da8e1d9",
    "prId" : 98583,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/98583#pullrequestreview-585961436",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d9214a84-f98d-4783-a506-b91e4c56057d",
        "parentId" : null,
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "this is a test, do we actually require the options?",
        "createdAt" : "2021-02-08T19:04:41Z",
        "updatedAt" : "2021-04-30T17:22:26Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      },
      {
        "id" : "4452b996-fdee-4039-b222-cb3b5594f9b9",
        "parentId" : "d9214a84-f98d-4783-a506-b91e4c56057d",
        "authorId" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "body" : "I would test with options in the plugin unit tests only",
        "createdAt" : "2021-02-08T22:00:29Z",
        "updatedAt" : "2021-04-30T17:22:26Z",
        "lastEditedBy" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "tags" : [
        ]
      }
    ],
    "commit" : "5a77ebe28b75187fc06dcd5a807b4877d524b29a",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +1314,1318 @@\t\t\t\tst.RegisterQueueSortPlugin(queuesort.Name, queuesort.New),\n\t\t\t\tst.RegisterScorePlugin(noderesources.LeastAllocatedName,\n\t\t\t\t\tfunc(plArgs apiruntime.Object, fh framework.Handle) (framework.Plugin, error) {\n\t\t\t\t\t\treturn noderesources.NewLeastAllocated(plArgs, fh, feature.Features{})\n\t\t\t\t\t},"
  },
  {
    "id" : "b7dfa61b-8308-4cc2-8097-29a667317d6c",
    "prId" : 98041,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/98041#pullrequestreview-578706796",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cd050c95-dc7b-48de-b1f1-e640e9a7bb75",
        "parentId" : null,
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "Why is FailedPlugins empty in all these test cases?",
        "createdAt" : "2021-01-22T15:02:59Z",
        "updatedAt" : "2021-01-28T20:21:10Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      },
      {
        "id" : "f527a9b4-6920-46c8-bf4e-74a9d58c8e22",
        "parentId" : "cd050c95-dc7b-48de-b1f1-e640e9a7bb75",
        "authorId" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "body" : "It's b/c the status is of type Error, and as I mentioned in https://github.com/kubernetes/kubernetes/pull/98041#issuecomment-765075279, the failedPlugin carried in an Error status won't help in moving pods between queues - Error is interpreted as a fault, not a regular FitError.",
        "createdAt" : "2021-01-22T19:32:40Z",
        "updatedAt" : "2021-01-28T20:21:10Z",
        "lastEditedBy" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "tags" : [
        ]
      },
      {
        "id" : "1d7cb95c-8f90-47b1-824d-6c656cd46ca1",
        "parentId" : "cd050c95-dc7b-48de-b1f1-e640e9a7bb75",
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "aren't we building a `FitError` here?",
        "createdAt" : "2021-01-22T20:49:06Z",
        "updatedAt" : "2021-01-28T20:21:10Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      },
      {
        "id" : "a6b7cc74-9946-4c51-9df8-2861cf7eb686",
        "parentId" : "cd050c95-dc7b-48de-b1f1-e640e9a7bb75",
        "authorId" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "body" : "Ah, it should embed FailedPlugins. (sorry, misread with another test case)\r\n\r\nIt can pass is b/c the verifying logic is relaxed without checking the FailedPlugins field:\r\n\r\n```go\r\n\t\t\tif err != test.wErr && !strings.Contains(err.Error(), test.wErr.Error()) {\r\n\t\t\t\tt.Errorf(\"Unexpected error: %v, expected: %v\", err.Error(), test.wErr)\r\n\t\t\t}\r\n```\r\n\r\nAs we have other tests covering the FailedPlugins part, do you prefer to leave it as is, or complement the wantErr obj and the testing logic?",
        "createdAt" : "2021-01-22T21:35:29Z",
        "updatedAt" : "2021-01-28T20:21:10Z",
        "lastEditedBy" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "tags" : [
        ]
      },
      {
        "id" : "68820bca-a4ee-49f1-98a2-b41840757d05",
        "parentId" : "cd050c95-dc7b-48de-b1f1-e640e9a7bb75",
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "I prefer we have the FailedPlugins part so that eventually we can move to cmp",
        "createdAt" : "2021-01-22T21:45:57Z",
        "updatedAt" : "2021-01-28T20:21:10Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      },
      {
        "id" : "88e05868-1110-4d1f-b500-b08214b41632",
        "parentId" : "cd050c95-dc7b-48de-b1f1-e640e9a7bb75",
        "authorId" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "body" : "Fair enough. Let me complement that.",
        "createdAt" : "2021-01-22T21:49:00Z",
        "updatedAt" : "2021-01-28T20:21:10Z",
        "lastEditedBy" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "tags" : [
        ]
      },
      {
        "id" : "7ecf1dcf-a602-4e56-97e7-99fd19c14993",
        "parentId" : "cd050c95-dc7b-48de-b1f1-e640e9a7bb75",
        "authorId" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "body" : "Updated. To ensure correctness, I introduced `reflect.DeepEqual`. I added another TODO in #94696.",
        "createdAt" : "2021-01-22T22:28:35Z",
        "updatedAt" : "2021-01-28T20:21:10Z",
        "lastEditedBy" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "tags" : [
        ]
      },
      {
        "id" : "5dc82794-f13c-4067-85e4-6209f2c36132",
        "parentId" : "cd050c95-dc7b-48de-b1f1-e640e9a7bb75",
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "leave a TODO as comment in the code too.",
        "createdAt" : "2021-01-28T20:05:22Z",
        "updatedAt" : "2021-01-28T20:21:10Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      },
      {
        "id" : "09a6d552-ef0e-4542-aa7a-49dd8c0bdebd",
        "parentId" : "cd050c95-dc7b-48de-b1f1-e640e9a7bb75",
        "authorId" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "body" : "Done.",
        "createdAt" : "2021-01-28T20:18:28Z",
        "updatedAt" : "2021-01-28T20:21:10Z",
        "lastEditedBy" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "tags" : [
        ]
      }
    ],
    "commit" : "f8a6bdb044c61a6bcd2abb7775f6c0b947ddfe7e",
    "line" : 167,
    "diffHunk" : "@@ -1,1 +772,776 @@\t\t\t\t\t\t\"1\": framework.NewStatus(framework.UnschedulableAndUnresolvable, \"injected unschedulable status\").WithFailedPlugin(\"FakePreFilter\"),\n\t\t\t\t\t\t\"2\": framework.NewStatus(framework.UnschedulableAndUnresolvable, \"injected unschedulable status\").WithFailedPlugin(\"FakePreFilter\"),\n\t\t\t\t\t},\n\t\t\t\t\tUnschedulablePlugins: sets.NewString(\"FakePreFilter\"),\n\t\t\t\t},"
  },
  {
    "id" : "40e2184c-64d0-4842-b38e-01a3db2550e2",
    "prId" : 98041,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/98041#pullrequestreview-578707739",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6710844b-435f-4358-89e0-7ea927c6b6db",
        "parentId" : null,
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "can we replace all these lines with a single `cmp.Diff` for diagnosis?\r\n\r\nOr is this an instance of #94695?",
        "createdAt" : "2021-01-22T15:04:51Z",
        "updatedAt" : "2021-01-28T20:21:10Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      },
      {
        "id" : "525429aa-64a3-4e69-a91c-0dfcd79e29af",
        "parentId" : "6710844b-435f-4358-89e0-7ea927c6b6db",
        "authorId" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "body" : "I can use `cmd.Diff`. Will update.",
        "createdAt" : "2021-01-22T19:33:22Z",
        "updatedAt" : "2021-01-28T20:21:10Z",
        "lastEditedBy" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "tags" : [
        ]
      },
      {
        "id" : "aacf3fc9-a982-4d6e-a7cf-614c8282a09d",
        "parentId" : "6710844b-435f-4358-89e0-7ea927c6b6db",
        "authorId" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "body" : "Ah hold on, unexported fields are not comparable, I will leave it as is and revisit once a general comparer for `Status` in ready.",
        "createdAt" : "2021-01-22T21:17:40Z",
        "updatedAt" : "2021-01-28T20:21:10Z",
        "lastEditedBy" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "tags" : [
        ]
      },
      {
        "id" : "ad9e659b-27e0-47a4-999b-f6609e3cd0bb",
        "parentId" : "6710844b-435f-4358-89e0-7ea927c6b6db",
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "That's what I thought. Leaving it for now is fine.",
        "createdAt" : "2021-01-22T21:27:48Z",
        "updatedAt" : "2021-01-28T20:21:10Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      },
      {
        "id" : "617d2da2-c185-4299-ad0f-f7cbfc0dcde9",
        "parentId" : "6710844b-435f-4358-89e0-7ea927c6b6db",
        "authorId" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "body" : "Added a TODO at https://github.com/kubernetes/kubernetes/issues/94696#issuecomment-765701436.",
        "createdAt" : "2021-01-22T21:44:32Z",
        "updatedAt" : "2021-01-28T20:21:10Z",
        "lastEditedBy" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "tags" : [
        ]
      },
      {
        "id" : "cd1440dd-1a5d-4aec-a561-b98d2fd50201",
        "parentId" : "6710844b-435f-4358-89e0-7ea927c6b6db",
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "leave as comment in code",
        "createdAt" : "2021-01-28T20:05:31Z",
        "updatedAt" : "2021-01-28T20:21:10Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      },
      {
        "id" : "81c181af-cb90-4a1d-8690-bb3fc0b6fb03",
        "parentId" : "6710844b-435f-4358-89e0-7ea927c6b6db",
        "authorId" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "body" : "Done.",
        "createdAt" : "2021-01-28T20:19:44Z",
        "updatedAt" : "2021-01-28T20:21:10Z",
        "lastEditedBy" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "tags" : [
        ]
      }
    ],
    "commit" : "f8a6bdb044c61a6bcd2abb7775f6c0b947ddfe7e",
    "line" : 204,
    "diffHunk" : "@@ -1,1 +897,901 @@\n\t// TODO(#94696): use cmp.Diff() to compare `diagnosis`.\n\tif len(diagnosis.NodeToStatusMap) != len(nodes) {\n\t\tt.Errorf(\"unexpected failed status map: %v\", diagnosis.NodeToStatusMap)\n\t}"
  },
  {
    "id" : "61eb63ad-309b-42e7-9173-82d6198babb4",
    "prId" : 95069,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/95069#pullrequestreview-504918457",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "aeb3926d-43e2-4a12-a267-8d8306f04234",
        "parentId" : null,
        "authorId" : "a99cf676-6fa9-44b1-9931-2be1d77b5486",
        "body" : "golint will fail without this change.\r\n\r\n```\r\nErrors from golint:\r\npkg/scheduler/framework/interface.go:512:6: type name will be used as framework.FrameworkHandle by other packages, and that stutters; consider calling this Handle\r\n```",
        "createdAt" : "2020-10-03T06:06:29Z",
        "updatedAt" : "2020-10-13T02:17:13Z",
        "lastEditedBy" : "a99cf676-6fa9-44b1-9931-2be1d77b5486",
        "tags" : [
        ]
      },
      {
        "id" : "84d12b31-2d3b-4c26-aad1-c8b52e2641ee",
        "parentId" : "aeb3926d-43e2-4a12-a267-8d8306f04234",
        "authorId" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "body" : "sounds good",
        "createdAt" : "2020-10-08T15:43:53Z",
        "updatedAt" : "2020-10-13T02:17:13Z",
        "lastEditedBy" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "tags" : [
        ]
      }
    ],
    "commit" : "09b2e8f638daafd00efb22368ead44419ec72ad6",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +73,77 @@\n// NewNoPodsFilterPlugin initializes a noPodsFilterPlugin and returns it.\nfunc NewNoPodsFilterPlugin(_ runtime.Object, _ framework.Handle) (framework.Plugin, error) {\n\treturn &noPodsFilterPlugin{}, nil\n}"
  },
  {
    "id" : "f21834fb-7722-40a4-8af4-187a165c03f8",
    "prId" : 93179,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/93179#pullrequestreview-574000237",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "942f9f8d-d010-4bcb-b90b-76879547f2ba",
        "parentId" : null,
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "nit: no need for alias",
        "createdAt" : "2021-01-21T14:52:44Z",
        "updatedAt" : "2021-01-26T01:59:45Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      },
      {
        "id" : "7bd9e17d-82a8-4df9-9dca-f0ab6cd21fe0",
        "parentId" : "942f9f8d-d010-4bcb-b90b-76879547f2ba",
        "authorId" : "1fde46ca-8fae-4b82-9978-f266fdae6ffe",
        "body" : "Done",
        "createdAt" : "2021-01-22T07:14:25Z",
        "updatedAt" : "2021-01-26T01:59:45Z",
        "lastEditedBy" : "1fde46ca-8fae-4b82-9978-f266fdae6ffe",
        "tags" : [
        ]
      }
    ],
    "commit" : "6d800ffe0704c58865ec2a1cb611209f6d5731d8",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +34,38 @@\t\"k8s.io/apimachinery/pkg/util/sets\"\n\t\"k8s.io/apimachinery/pkg/util/wait\"\n\tutilfeature \"k8s.io/apiserver/pkg/util/feature\"\n\t\"k8s.io/client-go/informers\"\n\tclientsetfake \"k8s.io/client-go/kubernetes/fake\""
  },
  {
    "id" : "4e362a26-b4f8-4d3b-90e4-f242cd5e9fe8",
    "prId" : 92866,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/92866#pullrequestreview-563159159",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "248b4bb5-62a0-49a8-bf7d-f6886cb010cb",
        "parentId" : null,
        "authorId" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "body" : "Although a little rare, do you think it's necessary to add a case to cover the path that \"extender may overwrite the statuses\"? i.e., the tuple `{feasibleNodes, statuses}` passed onto the extender(s) is `{[a, b], {c: Unchedulable}}`, extenders may return feasibleNodes as [a], while statuses as {c: UnschedualbeAndUnresolvable, b: Unschedulable}.",
        "createdAt" : "2021-01-06T19:03:35Z",
        "updatedAt" : "2021-01-29T03:33:29Z",
        "lastEditedBy" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "tags" : [
        ]
      },
      {
        "id" : "45c827f9-dda8-48b7-bdb6-8d2da5f33aa5",
        "parentId" : "248b4bb5-62a0-49a8-bf7d-f6886cb010cb",
        "authorId" : "e4e7c71f-23b5-4203-b65d-3f5f3c503b64",
        "body" : "I think it's necessary. The case \"extender may overwrite the statuses\" is added (https://github.com/kubernetes/kubernetes/pull/92866/files#diff-af29ae211c469a644b28df812d85bf717e76e623126ef3d5a14d07989c883fddR353). PTAL.",
        "createdAt" : "2021-01-07T01:48:16Z",
        "updatedAt" : "2021-01-29T03:33:29Z",
        "lastEditedBy" : "e4e7c71f-23b5-4203-b65d-3f5f3c503b64",
        "tags" : [
        ]
      }
    ],
    "commit" : "9a2713503a3cc1727010796628757fe7e6398803",
    "line" : 140,
    "diffHunk" : "@@ -1,1 +410,414 @@\t\t\t},\n\t\t},\n\t}\n\n\tcmpOpts := []cmp.Option{"
  },
  {
    "id" : "b97b13b7-fb9c-4e7b-aa76-d436242e906c",
    "prId" : 92009,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/92009#pullrequestreview-430196769",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5c505c00-19b4-4571-8953-d18666300623",
        "parentId" : null,
        "authorId" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "body" : "why not do this inside the loop above that iterates over deletedPodNames?",
        "createdAt" : "2020-06-13T12:03:23Z",
        "updatedAt" : "2020-06-15T15:42:44Z",
        "lastEditedBy" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "tags" : [
        ]
      },
      {
        "id" : "f3fede51-7b40-44b3-9d11-3affcbf0d021",
        "parentId" : "5c505c00-19b4-4571-8953-d18666300623",
        "authorId" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "body" : "The `test.expectedPods` in the above loop is a string slice, so I cannot update the pod there.",
        "createdAt" : "2020-06-13T23:05:16Z",
        "updatedAt" : "2020-06-15T15:42:44Z",
        "lastEditedBy" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "tags" : [
        ]
      },
      {
        "id" : "13f50f0a-7f71-4ecf-8e7c-40224b90127c",
        "parentId" : "5c505c00-19b4-4571-8953-d18666300623",
        "authorId" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "body" : "As mentioned in https://github.com/kubernetes/kubernetes/pull/92009#discussion_r439803037, there will be a PR refactoring whole TestPreempt test later.",
        "createdAt" : "2020-06-14T08:01:52Z",
        "updatedAt" : "2020-06-15T15:42:44Z",
        "lastEditedBy" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "tags" : [
        ]
      }
    ],
    "commit" : "36c8ecc98cdb9937cd97582a8e36d040af8ce56a",
    "line" : 108,
    "diffHunk" : "@@ -1,1 +2471,2475 @@\t\t\t\t\tnow := metav1.Now()\n\t\t\t\t\tpod.DeletionTimestamp = &now\n\t\t\t\t\tdeletedPodNames.Delete(pod.Name)\n\t\t\t\t}\n\t\t\t}"
  },
  {
    "id" : "ace19b90-0ec2-4fbf-a9ab-98a2a3f97b26",
    "prId" : 87847,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/87847#pullrequestreview-356613615",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7b6f2d58-9f0e-49ec-96be-2bcfdc763d0b",
        "parentId" : null,
        "authorId" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "body" : "The weight here is confusing, in a followup PR I suggest we change ```RegisterPluginAsExtensions``` to not set the weight, and have another function ```RegisterPluginAsExtensionsWithWeight``` that accept a weight parameter for the extensions that require a weight.",
        "createdAt" : "2020-02-10T18:07:13Z",
        "updatedAt" : "2020-02-11T12:07:41Z",
        "lastEditedBy" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "tags" : [
        ]
      },
      {
        "id" : "d9486392-1d91-4605-a79c-85ee55c8085f",
        "parentId" : "7b6f2d58-9f0e-49ec-96be-2bcfdc763d0b",
        "authorId" : "f28b709f-13c6-489d-a940-4b17c129a45b",
        "body" : "I'll send another PR for this.",
        "createdAt" : "2020-02-11T12:22:51Z",
        "updatedAt" : "2020-02-11T12:22:52Z",
        "lastEditedBy" : "f28b709f-13c6-489d-a940-4b17c129a45b",
        "tags" : [
        ]
      }
    ],
    "commit" : "fb895056c659913a9959b95b8dec1dc860adf7dd",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +1340,1344 @@\t\t\tregisterPlugins: []st.RegisterPluginFunc{\n\t\t\t\tst.RegisterQueueSortPlugin(queuesort.Name, queuesort.New),\n\t\t\t\tst.RegisterPluginAsExtensions(noderesources.FitName, 1, noderesources.NewFit, \"Filter\", \"PreFilter\"),\n\t\t\t\tst.RegisterBindPlugin(defaultbinder.Name, defaultbinder.New),\n\t\t\t},"
  },
  {
    "id" : "8ae82a9d-c972-4021-82cf-554de9505f50",
    "prId" : 86852,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/86852#pullrequestreview-339275692",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "22ec1374-f89d-4d36-978c-e71f71a429cd",
        "parentId" : null,
        "authorId" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "body" : "remove empty line",
        "createdAt" : "2020-01-07T14:39:53Z",
        "updatedAt" : "2020-01-07T17:03:25Z",
        "lastEditedBy" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "tags" : [
        ]
      }
    ],
    "commit" : "320c9bfeed4b2de58c0ab5ace84cb807f09ee370",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +30,34 @@\t\"k8s.io/kubernetes/pkg/scheduler/framework/plugins/volumerestrictions\"\n\t\"k8s.io/kubernetes/pkg/scheduler/framework/plugins/volumezone\"\n\n\tv1 \"k8s.io/api/core/v1\"\n\t\"k8s.io/apimachinery/pkg/api/resource\""
  },
  {
    "id" : "7f789248-abb5-4f14-9724-7b0a579c4d56",
    "prId" : 84335,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/84335#pullrequestreview-314262766",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "893d5cc8-0fb0-4ac8-b232-1f8867ab850f",
        "parentId" : null,
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "any reason not to keep the default?",
        "createdAt" : "2019-10-25T09:19:01Z",
        "updatedAt" : "2019-11-08T18:37:24Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      },
      {
        "id" : "28d11e49-5b11-4a69-879f-6b453d9807bd",
        "parentId" : "893d5cc8-0fb0-4ac8-b232-1f8867ab850f",
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "@mrkm4ntr ?",
        "createdAt" : "2019-10-30T10:21:59Z",
        "updatedAt" : "2019-11-08T18:37:24Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      },
      {
        "id" : "587d813a-5d12-42a0-9f34-93f176d79abd",
        "parentId" : "893d5cc8-0fb0-4ac8-b232-1f8867ab850f",
        "authorId" : "e1ba72c9-3be8-432b-b345-ac2d180a8eab",
        "body" : "Default is 50. I'd like to make `numAllNodes mod nodesToFind != 0`. It is ok to change numAllNodes to odd and percentageOfNodesToScore to default, but is this so important?",
        "createdAt" : "2019-10-30T11:23:51Z",
        "updatedAt" : "2019-11-08T18:37:24Z",
        "lastEditedBy" : "e1ba72c9-3be8-432b-b345-ac2d180a8eab",
        "tags" : [
        ]
      },
      {
        "id" : "4caf8c77-dadf-46af-abb4-eb794888e788",
        "parentId" : "893d5cc8-0fb0-4ac8-b232-1f8867ab850f",
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "add a comment.",
        "createdAt" : "2019-11-08T15:11:51Z",
        "updatedAt" : "2019-11-08T18:37:24Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      }
    ],
    "commit" : "4857fc05f8d9f9e0309198090a8228ad225d3fcf",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +2295,2299 @@\tg := makeScheduler(predicates, nodes)\n\t// To make numAllNodes % nodesToFind != 0\n\tg.percentageOfNodesToScore = 30\n\tnodesToFind := int(g.numFeasibleNodesToFind(int32(numAllNodes)))\n"
  },
  {
    "id" : "beeacf61-30c7-4602-bd83-61df6371353f",
    "prId" : 82156,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/82156#pullrequestreview-282374710",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6553bd54-2141-4f38-a87c-0e8b420bdcba",
        "parentId" : null,
        "authorId" : "df8dc16d-08c7-457c-8593-619395912000",
        "body" : "Nit: it'll be better to print the test name in the log.",
        "createdAt" : "2019-08-30T05:09:06Z",
        "updatedAt" : "2019-09-11T13:02:31Z",
        "lastEditedBy" : "df8dc16d-08c7-457c-8593-619395912000",
        "tags" : [
        ]
      },
      {
        "id" : "d7845f7a-7484-4970-99d5-3f2b00a0641a",
        "parentId" : "6553bd54-2141-4f38-a87c-0e8b420bdcba",
        "authorId" : "e1ba72c9-3be8-432b-b345-ac2d180a8eab",
        "body" : "Test name is already printed like below.\r\n```\r\n--- FAIL: TestGenericScheduler (0.00s)\r\n    --- FAIL: TestGenericScheduler/test_with_partial_failed_filter_plugin (0.00s)\r\n        generic_scheduler_test.go:666: Expected EvaluatedNodes: 2, got: 1\r\n```",
        "createdAt" : "2019-09-02T01:34:39Z",
        "updatedAt" : "2019-09-11T13:02:31Z",
        "lastEditedBy" : "e1ba72c9-3be8-432b-b345-ac2d180a8eab",
        "tags" : [
        ]
      }
    ],
    "commit" : "bb94dfea1e515262da4f8eae09e6f4ce7c6057c4",
    "line" : 185,
    "diffHunk" : "@@ -1,1 +682,686 @@\t\t\t}\n\t\t\tif test.wErr == nil && len(test.nodes) != result.EvaluatedNodes {\n\t\t\t\tt.Errorf(\"Expected EvaluatedNodes: %d, got: %d\", len(test.nodes), result.EvaluatedNodes)\n\t\t\t}\n"
  },
  {
    "id" : "a7d067a9-f41d-4dbe-8745-db14e8eafae9",
    "prId" : 77576,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/77576#pullrequestreview-235360064",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7aa49ed8-d760-40e2-89e8-c1477786ca92",
        "parentId" : null,
        "authorId" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "body" : "nit: this is clever, but a bit unreadable. One might think that the whole line is `defer`ed and executed after the function returns. Optionally, you can store and `defer` the returned function, but it is up to you.",
        "createdAt" : "2019-05-09T00:40:33Z",
        "updatedAt" : "2019-05-09T01:08:17Z",
        "lastEditedBy" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "tags" : [
        ]
      },
      {
        "id" : "6c618c8e-a90a-4728-888e-fe39ea5bfe7d",
        "parentId" : "7aa49ed8-d760-40e2-89e8-c1477786ca92",
        "authorId" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "body" : "Credit goes to @liggitt :)\r\n\r\n```go\r\ndefer utilfeaturetesting.SetFeatureGateDuringTest(t, utilfeature.DefaultFeatureGate, features.XYZ, true)()\r\n```",
        "createdAt" : "2019-05-09T01:01:26Z",
        "updatedAt" : "2019-05-09T01:08:17Z",
        "lastEditedBy" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "tags" : [
        ]
      }
    ],
    "commit" : "c4df3a2c446f43b21d3dc27cebd892ab2a3a3129",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +218,222 @@\nfunc TestGenericScheduler(t *testing.T) {\n\tdefer algorithmpredicates.SetPredicatesOrderingDuringTest(order)()\n\ttests := []struct {\n\t\tname                     string"
  },
  {
    "id" : "52446d80-bb39-4722-970f-d964d30dde8c",
    "prId" : 74974,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/74974#pullrequestreview-211005848",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6dc5564c-67d2-411f-a22c-3f8bc321c980",
        "parentId" : null,
        "authorId" : "33ab9fbe-6f55-45c0-a58d-be01aec201d9",
        "body" : "Since all are Status: v1.PodStatus{StartTime: &startTime}, it seems that you don't need to write the structure repeatedly.",
        "createdAt" : "2019-03-06T01:43:42Z",
        "updatedAt" : "2019-03-12T04:30:47Z",
        "lastEditedBy" : "33ab9fbe-6f55-45c0-a58d-be01aec201d9",
        "tags" : [
        ]
      }
    ],
    "commit" : "8d991e6ee22400d187b53ca4699ad99489e8bbc2",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +1033,1037 @@\t\t\tpod:        &v1.Pod{ObjectMeta: metav1.ObjectMeta{Name: \"machine1\", UID: types.UID(\"machine1\")}, Spec: v1.PodSpec{Containers: largeContainers, Priority: &highPriority}},\n\t\t\tpods: []*v1.Pod{\n\t\t\t\t{ObjectMeta: metav1.ObjectMeta{Name: \"m1.1\", UID: types.UID(\"m1.1\")}, Spec: v1.PodSpec{Containers: largeContainers, Priority: &midPriority, NodeName: \"machine1\"}, Status: v1.PodStatus{StartTime: &startTime}},\n\n\t\t\t\t{ObjectMeta: metav1.ObjectMeta{Name: \"m2.1\", UID: types.UID(\"m2.1\")}, Spec: v1.PodSpec{Containers: largeContainers, Priority: &midPriority, NodeName: \"machine2\"}, Status: v1.PodStatus{StartTime: &startTime}}},"
  },
  {
    "id" : "fad731dc-e559-4e1b-be83-5c587edc432b",
    "prId" : 74614,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/74614#pullrequestreview-243516575",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1d528fd4-eb65-470d-ba19-0a43b5195cbe",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "make sure we have a test case that ensures a pod with a nil preemption policy behaves correctly",
        "createdAt" : "2019-05-29T21:41:02Z",
        "updatedAt" : "2019-05-31T04:42:34Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "52f3380ef3a5d5de4d75ff92defd1c9af9d775bc",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +1346,1350 @@\t\texpectedPods []string // list of preempted pods\n\t}{\n\t\t{\n\t\t\tname: \"basic preemption logic\",\n\t\t\tpod: &v1.Pod{ObjectMeta: metav1.ObjectMeta{Name: \"pod1\", UID: types.UID(\"pod1\")}, Spec: v1.PodSpec{"
  },
  {
    "id" : "65212289-d23f-4732-abb7-dc2798be3dc5",
    "prId" : 72140,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/72140#pullrequestreview-187144490",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "40dd6c8e-ee64-466d-bc39-53fe64cc6bda",
        "parentId" : null,
        "authorId" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "body" : "Thanks for the test!",
        "createdAt" : "2018-12-20T19:14:12Z",
        "updatedAt" : "2018-12-20T19:14:31Z",
        "lastEditedBy" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "tags" : [
        ]
      }
    ],
    "commit" : "6515c4e09b37c530df38f55e1f02912398c5bff1",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +1485,1489 @@}\n\nfunc TestNumFeasibleNodesToFind(t *testing.T) {\n\ttests := []struct {\n\t\tname                     string"
  },
  {
    "id" : "4d83337d-9d12-49c0-a3fc-aeb0b08adbfd",
    "prId" : 68860,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/68860#pullrequestreview-157119841",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5dce8022-0071-4511-8353-823412ad0ab2",
        "parentId" : null,
        "authorId" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "body" : "Ditto - we can use fakeclientset to create a \"Fake PodDisruptionBudgetLister\"",
        "createdAt" : "2018-09-20T06:16:38Z",
        "updatedAt" : "2018-09-26T21:22:34Z",
        "lastEditedBy" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "tags" : [
        ]
      }
    ],
    "commit" : "c051f0d31a9ed4522d86110af14f0e15fad99004",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +426,430 @@\t\t\t\tnil,\n\t\t\t\tpvcLister,\n\t\t\t\tschedulertesting.FakePDBLister{},\n\t\t\t\ttest.alwaysCheckAllPredicates,\n\t\t\t\tfalse,"
  },
  {
    "id" : "c9c20cad-751a-46f0-a728-cbc86876c146",
    "prId" : 66291,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/66291#pullrequestreview-139478000",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7786f56b-063f-4d12-b77c-815f36495557",
        "parentId" : null,
        "authorId" : "7dd504ec-7e63-45b3-98f8-6eb1c683e9c2",
        "body" : "Note for reviewers: logging out whole node object here seems too verbose.",
        "createdAt" : "2018-07-23T12:30:22Z",
        "updatedAt" : "2018-07-23T12:30:55Z",
        "lastEditedBy" : "7dd504ec-7e63-45b3-98f8-6eb1c683e9c2",
        "tags" : [
        ]
      },
      {
        "id" : "e7803ee2-9cda-4e50-8221-7d2912b2e346",
        "parentId" : "7786f56b-063f-4d12-b77c-815f36495557",
        "authorId" : "e2ca6907-6765-444e-8bf6-1452233150d6",
        "body" : "I agree.",
        "createdAt" : "2018-07-23T13:43:48Z",
        "updatedAt" : "2018-07-23T13:43:48Z",
        "lastEditedBy" : "e2ca6907-6765-444e-8bf6-1452233150d6",
        "tags" : [
        ]
      }
    ],
    "commit" : "d644162a294517b29690edf8a5a0da14929ce4b4",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +1374,1378 @@\t\t\t}\n\t\t\tif (node != nil && node.Name != test.expectedNode) || (node == nil && len(test.expectedNode) != 0) {\n\t\t\t\tt.Errorf(\"expected node: %v, got: %v\", test.expectedNode, node.GetName())\n\t\t\t}\n\t\t\tif len(victims) != len(test.expectedPods) {"
  },
  {
    "id" : "8427c91f-c6a1-4140-8469-234536ddcdfa",
    "prId" : 64236,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/64236#pullrequestreview-124599540",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1811696e-5b41-4910-a015-010d630d52f5",
        "parentId" : null,
        "authorId" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "body" : "Why not keeping this in \"equivalence_test.go\"?",
        "createdAt" : "2018-05-30T20:37:05Z",
        "updatedAt" : "2018-06-20T18:05:34Z",
        "lastEditedBy" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "tags" : [
        ]
      },
      {
        "id" : "70b80894-3bd2-4ab0-ba5b-5faa04c06fd0",
        "parentId" : "1811696e-5b41-4910-a015-010d630d52f5",
        "authorId" : "5f2c1de8-4266-42c0-b343-ba247af3578f",
        "body" : "I moved this because it depends on the main cache, and adding that dependency to this file duplicated a bunch of stuff from the core package. Since the test covers a race between cache.Cache and equivalence.Cache, the core package seemed like a good place for it.",
        "createdAt" : "2018-05-30T20:53:03Z",
        "updatedAt" : "2018-06-20T18:05:34Z",
        "lastEditedBy" : "5f2c1de8-4266-42c0-b343-ba247af3578f",
        "tags" : [
        ]
      },
      {
        "id" : "58c1b5cf-24d2-4e85-90af-39c8729394af",
        "parentId" : "1811696e-5b41-4910-a015-010d630d52f5",
        "authorId" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "body" : "I see. That's fine.",
        "createdAt" : "2018-05-30T21:25:38Z",
        "updatedAt" : "2018-06-20T18:05:34Z",
        "lastEditedBy" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "tags" : [
        ]
      }
    ],
    "commit" : "56b941f3df5633770b56b042d0aadc09b57e6ac8",
    "line" : 46,
    "diffHunk" : "@@ -1,1 +1371,1375 @@// handled when an invalidation event happens early in a scheduling cycle. Specifically, the event\n// occurs after schedulercache is snapshotted and before equivalence cache lock is acquired.\nfunc TestCacheInvalidationRace(t *testing.T) {\n\t// Create a predicate that returns false the first time and true on subsequent calls.\n\tpodWillFit := false"
  },
  {
    "id" : "5eb46d7d-5a69-4700-b326-72d4e08b54c7",
    "prId" : 63665,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/63665#pullrequestreview-119550873",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "952c477f-df75-468d-ac43-c4a6b6f2c1a9",
        "parentId" : null,
        "authorId" : "5f2c1de8-4266-42c0-b343-ba247af3578f",
        "body" : "More commentary on the pre-existing tests: This isn't super random...",
        "createdAt" : "2018-05-11T19:20:30Z",
        "updatedAt" : "2018-07-20T20:04:09Z",
        "lastEditedBy" : "5f2c1de8-4266-42c0-b343-ba247af3578f",
        "tags" : [
        ]
      }
    ],
    "commit" : "ad234e58bec819e68b3aad16b99244a25d8ddc63",
    "line" : 62,
    "diffHunk" : "@@ -1,1 +171,175 @@\tfor _, test := range tests {\n\t\tt.Run(test.name, func(t *testing.T) {\n\t\t\t// increase the randomness\n\t\t\tfor i := 0; i < 10; i++ {\n\t\t\t\tgot, err := scheduler.selectHost(test.list)"
  }
]