[
  {
    "id" : "27258967-608e-44f3-81c0-d5422ecb1352",
    "prId" : 79453,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/79453#pullrequestreview-255018197",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e5f29c62-98c0-4b48-92dd-e42a6b69712d",
        "parentId" : null,
        "authorId" : "9829b6c0-e54c-401b-8d97-73e5aa4e83c1",
        "body" : "You could remove the comment here",
        "createdAt" : "2019-06-27T05:16:27Z",
        "updatedAt" : "2019-06-27T05:57:22Z",
        "lastEditedBy" : "9829b6c0-e54c-401b-8d97-73e5aa4e83c1",
        "tags" : [
        ]
      },
      {
        "id" : "c65bde96-8691-4466-ace9-cb9c09467331",
        "parentId" : "e5f29c62-98c0-4b48-92dd-e42a6b69712d",
        "authorId" : "1fde46ca-8fae-4b82-9978-f266fdae6ffe",
        "body" : "sure, will update.",
        "createdAt" : "2019-06-27T05:56:27Z",
        "updatedAt" : "2019-06-27T05:57:22Z",
        "lastEditedBy" : "1fde46ca-8fae-4b82-9978-f266fdae6ffe",
        "tags" : [
        ]
      }
    ],
    "commit" : "a9d3a5f40dc9bb7e9390391d8df7ad231ecbd63c",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +51,55 @@\t\tvolumeFraction := float64(requestedVolumes) / float64(allocatableVolumes)\n\t\tif volumeFraction >= 1 {\n\t\t\t// if requested >= capacity, the corresponding host should never be preferred.\n\t\t\treturn 0\n\t\t}"
  },
  {
    "id" : "1e891417-79ad-437f-bd04-1d7649992afa",
    "prId" : 77688,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/77688#pullrequestreview-267864937",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0a1cf7c2-405d-4e88-8e1c-ee55fe9f5119",
        "parentId" : null,
        "authorId" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "body" : "We are not using the weights in this scorer function, and that is confusing. Please add a todo to apply the weights.",
        "createdAt" : "2019-07-29T15:33:43Z",
        "updatedAt" : "2019-08-27T17:42:32Z",
        "lastEditedBy" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "tags" : [
        ]
      }
    ],
    "commit" : "9ae505930c5b70dd0261c2defbb959ec9dabff18",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +40,44 @@\n// todo: use resource weights in the scorer function\nfunc balancedResourceScorer(requested, allocable ResourceToValueMap, includeVolumes bool, requestedVolumes int, allocatableVolumes int) int64 {\n\tcpuFraction := fractionOfCapacity(requested[v1.ResourceCPU], allocable[v1.ResourceCPU])\n\tmemoryFraction := fractionOfCapacity(requested[v1.ResourceMemory], allocable[v1.ResourceMemory])"
  },
  {
    "id" : "ed3b26a0-c005-421f-abc1-4870ff87617a",
    "prId" : 60525,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/60525#pullrequestreview-116703455",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ca74ca24-4ab3-4235-88e3-d5ca327f0bfc",
        "parentId" : null,
        "authorId" : "72156db3-c40b-4455-9838-c12c0c606019",
        "body" : "is it possible to also merge `volumes` into `Resource`? so no interface changed.",
        "createdAt" : "2018-03-06T07:06:01Z",
        "updatedAt" : "2018-03-30T23:11:59Z",
        "lastEditedBy" : "72156db3-c40b-4455-9838-c12c0c606019",
        "tags" : [
        ]
      },
      {
        "id" : "8538d015-02f5-4679-bb95-152060645b63",
        "parentId" : "ca74ca24-4ab3-4235-88e3-d5ca327f0bfc",
        "authorId" : "38ca4f80-c365-4775-8981-1e56b713b07b",
        "body" : "I thought about it but it comes mostly under scalar resource and I think there is no definitive way on kubelet side to introspect node and get that information but it would be ideal to have that kind of information there. @bsalamat WDYT?",
        "createdAt" : "2018-03-06T17:12:47Z",
        "updatedAt" : "2018-03-30T23:11:59Z",
        "lastEditedBy" : "38ca4f80-c365-4775-8981-1e56b713b07b",
        "tags" : [
        ]
      },
      {
        "id" : "fedd0b59-2bef-4fd3-a4cd-c85a61882ff2",
        "parentId" : "ca74ca24-4ab3-4235-88e3-d5ca327f0bfc",
        "authorId" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "body" : "> is it possible to also merge volumes into Resource? so no interface changed.\r\n\r\nThat would require updating the scheduler cache with the volume information and that in turn would require Kubelets to report volume counts, etc. as a part of allocatable resources. This would be a larger project requiring involvement of the node team. I won't go this path, if we can solve the problem without changes to the kubelet.",
        "createdAt" : "2018-03-06T19:03:54Z",
        "updatedAt" : "2018-03-30T23:11:59Z",
        "lastEditedBy" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "tags" : [
        ]
      },
      {
        "id" : "6390527d-5f72-43ee-b03a-4939c76d7ada",
        "parentId" : "ca74ca24-4ab3-4235-88e3-d5ca327f0bfc",
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "@gnufied is working on a design for dynamic node reporting of attachable volume limits per plugin.  So I think when that is implemented, the limits will actually will be in the Node object.",
        "createdAt" : "2018-03-06T19:23:44Z",
        "updatedAt" : "2018-03-30T23:11:59Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "c11e98d3-26a2-4def-adee-aa3ff06b920d",
        "parentId" : "ca74ca24-4ab3-4235-88e3-d5ca327f0bfc",
        "authorId" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "body" : "> I think when that is implemented, the limits will actually will be in the Node object.\r\n\r\nThat will be great and will make our logic cleaner.",
        "createdAt" : "2018-03-06T19:37:09Z",
        "updatedAt" : "2018-03-30T23:11:59Z",
        "lastEditedBy" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "tags" : [
        ]
      },
      {
        "id" : "f18c2039-4a68-494c-8003-13d58e226038",
        "parentId" : "ca74ca24-4ab3-4235-88e3-d5ca327f0bfc",
        "authorId" : "38ca4f80-c365-4775-8981-1e56b713b07b",
        "body" : "> So I think when that is implemented, the limits will actually will be in the Node object.\r\n\r\nThanks @msau42 . That will be awesome. Ohh btw, then we could actually cache in nodeinfo :).\r\n",
        "createdAt" : "2018-03-06T19:47:37Z",
        "updatedAt" : "2018-03-30T23:11:59Z",
        "lastEditedBy" : "38ca4f80-c365-4775-8981-1e56b713b07b",
        "tags" : [
        ]
      },
      {
        "id" : "aa655548-289d-4552-a5b1-b37fa1a82b34",
        "parentId" : "ca74ca24-4ab3-4235-88e3-d5ca327f0bfc",
        "authorId" : "72156db3-c40b-4455-9838-c12c0c606019",
        "body" : "That may related to our previous comments: did not update nodeInfo outside of cache :)\r\n\r\n>> I think when that is implemented, the limits will actually will be in the Node object.\r\n\r\n> That will be great and will make our logic cleaner.\r\n\r\nGreat, @gnufied any related doc/issue?",
        "createdAt" : "2018-03-07T12:55:19Z",
        "updatedAt" : "2018-03-30T23:11:59Z",
        "lastEditedBy" : "72156db3-c40b-4455-9838-c12c0c606019",
        "tags" : [
        ]
      },
      {
        "id" : "418d711c-9f79-4544-8f1b-4063dcf21a2d",
        "parentId" : "ca74ca24-4ab3-4235-88e3-d5ca327f0bfc",
        "authorId" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "body" : "@k82cn @bsalamat https://github.com/kubernetes/community/pull/2051 ",
        "createdAt" : "2018-05-01T21:10:20Z",
        "updatedAt" : "2018-05-01T21:10:20Z",
        "lastEditedBy" : "d3e684d7-edd2-4290-a8bf-e8b698c97338",
        "tags" : [
        ]
      }
    ],
    "commit" : "2aaf85d01d34a34242fdac1edb38c1b292d66953",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +39,43 @@)\n\nfunc balancedResourceScorer(requested, allocable *schedulercache.Resource, includeVolumes bool, requestedVolumes int, allocatableVolumes int) int64 {\n\tcpuFraction := fractionOfCapacity(requested.MilliCPU, allocable.MilliCPU)\n\tmemoryFraction := fractionOfCapacity(requested.Memory, allocable.Memory)"
  }
]