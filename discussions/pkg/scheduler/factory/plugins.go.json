[
  {
    "id" : "ebbc4e69-193a-41d0-b585-902fe487afd4",
    "prId" : 80144,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/80144#pullrequestreview-268415719",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3cb2c394-46b6-429f-b593-ec10b14be4b4",
        "parentId" : null,
        "authorId" : "df8dc16d-08c7-457c-8593-619395912000",
        "body" : "We could use `copy.mandatoryFitPredicates.Insert(k)` here.",
        "createdAt" : "2019-07-16T13:47:02Z",
        "updatedAt" : "2019-07-30T18:42:16Z",
        "lastEditedBy" : "df8dc16d-08c7-457c-8593-619395912000",
        "tags" : [
        ]
      },
      {
        "id" : "52d04f1a-dd75-4e36-b2e4-77fb33199bc6",
        "parentId" : "3cb2c394-46b6-429f-b593-ec10b14be4b4",
        "authorId" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "body" : "Not that necessary, IMO it's clear enough. Esp. we can save a function call.",
        "createdAt" : "2019-07-30T01:04:24Z",
        "updatedAt" : "2019-07-30T18:42:16Z",
        "lastEditedBy" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "tags" : [
        ]
      },
      {
        "id" : "17e9615a-d802-408e-bbf7-7ac15227b7de",
        "parentId" : "3cb2c394-46b6-429f-b593-ec10b14be4b4",
        "authorId" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "body" : "I also find insert nicer to use here instead of the awkward \"struct{}{}\". I don't think you are saving a function call here, \"copy.mandatoryFitPredicates[k] = struct{}{}\" is basically a call to the \"operator=\" function, I would be very surprised if there is any difference between insert and operator=, changing it to insert it is up to you though.",
        "createdAt" : "2019-07-30T14:06:21Z",
        "updatedAt" : "2019-07-30T18:42:16Z",
        "lastEditedBy" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "tags" : [
        ]
      }
    ],
    "commit" : "eb3ed248533d52fa426510b5393ddf87218f09dd",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +125,129 @@\t}\n\tfor k := range mandatoryFitPredicates {\n\t\tcopy.mandatoryFitPredicates[k] = struct{}{}\n\t}\n\tfor k, v := range priorityFunctionMap {"
  },
  {
    "id" : "52c8da43-dfb8-44ff-94bf-db96635b63db",
    "prId" : 80144,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/80144#pullrequestreview-262428178",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7252eeef-ef75-4552-9243-f1e752f09a0e",
        "parentId" : null,
        "authorId" : "df8dc16d-08c7-457c-8593-619395912000",
        "body" : "Same as above.",
        "createdAt" : "2019-07-16T13:47:09Z",
        "updatedAt" : "2019-07-30T18:42:16Z",
        "lastEditedBy" : "df8dc16d-08c7-457c-8593-619395912000",
        "tags" : [
        ]
      }
    ],
    "commit" : "eb3ed248533d52fa426510b5393ddf87218f09dd",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +133,137 @@\t\tcopyPredKeys, copyPrioKeys := sets.NewString(), sets.NewString()\n\t\tfor k := range config.FitPredicateKeys {\n\t\t\tcopyPredKeys[k] = struct{}{}\n\t\t}\n\t\tfor k := range config.PriorityFunctionKeys {"
  },
  {
    "id" : "c9b6850f-317b-47b7-a954-6f25b0db94b3",
    "prId" : 80144,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/80144#pullrequestreview-262428178",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "114836b2-8f20-4835-89ce-bdaaec444a99",
        "parentId" : null,
        "authorId" : "df8dc16d-08c7-457c-8593-619395912000",
        "body" : "Same as above",
        "createdAt" : "2019-07-16T13:47:20Z",
        "updatedAt" : "2019-07-30T18:42:16Z",
        "lastEditedBy" : "df8dc16d-08c7-457c-8593-619395912000",
        "tags" : [
        ]
      }
    ],
    "commit" : "eb3ed248533d52fa426510b5393ddf87218f09dd",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +136,140 @@\t\t}\n\t\tfor k := range config.PriorityFunctionKeys {\n\t\t\tcopyPrioKeys[k] = struct{}{}\n\t\t}\n\t\tcopy.algorithmProviderMap[provider] = AlgorithmProviderConfig{"
  },
  {
    "id" : "234e1e30-21b7-4231-b102-1071b5f46708",
    "prId" : 80144,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/80144#pullrequestreview-268115396",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "41a5b2a7-88e1-48ae-aeb5-319f70267073",
        "parentId" : null,
        "authorId" : "a650878f-0c10-41c7-b0fc-033031305d77",
        "body" : "nit: Why not use `defer`?",
        "createdAt" : "2019-07-29T19:59:16Z",
        "updatedAt" : "2019-07-30T18:42:16Z",
        "lastEditedBy" : "a650878f-0c10-41c7-b0fc-033031305d77",
        "tags" : [
        ]
      },
      {
        "id" : "d7cf635b-03d0-4f7f-8016-ab330112dcb2",
        "parentId" : "41a5b2a7-88e1-48ae-aeb5-319f70267073",
        "authorId" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "body" : "`defer` also has overhead. We should only use it when necessary - for example, the logic does early returns in multiple places.",
        "createdAt" : "2019-07-30T01:20:36Z",
        "updatedAt" : "2019-07-30T18:42:16Z",
        "lastEditedBy" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "tags" : [
        ]
      }
    ],
    "commit" : "eb3ed248533d52fa426510b5393ddf87218f09dd",
    "line" : 55,
    "diffHunk" : "@@ -1,1 +153,157 @@\tpriorityFunctionMap = s.priorityFunctionMap\n\talgorithmProviderMap = s.algorithmProviderMap\n\tschedulerFactoryMutex.Unlock()\n}\n"
  },
  {
    "id" : "77e05363-92ac-437a-ac95-ca8c292b9557",
    "prId" : 80144,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/80144#pullrequestreview-268115724",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "84272371-4bc1-4564-8b0c-3161672f3570",
        "parentId" : null,
        "authorId" : "a650878f-0c10-41c7-b0fc-033031305d77",
        "body" : "nit: Naming them `Backup`/`Restore` is probably better aligned with what we are trying to do.",
        "createdAt" : "2019-07-29T20:06:21Z",
        "updatedAt" : "2019-07-30T18:42:16Z",
        "lastEditedBy" : "a650878f-0c10-41c7-b0fc-033031305d77",
        "tags" : [
        ]
      },
      {
        "id" : "b427d970-5eb7-489e-86cd-674d7bc8b579",
        "parentId" : "84272371-4bc1-4564-8b0c-3161672f3570",
        "authorId" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "body" : "If we treat this function **only** as a pair of `ApplyFeatureGates`, yes we should rename to `resotre`. But I think it can also serve as a standalone function.",
        "createdAt" : "2019-07-30T01:22:08Z",
        "updatedAt" : "2019-07-30T18:42:16Z",
        "lastEditedBy" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "tags" : [
        ]
      }
    ],
    "commit" : "eb3ed248533d52fa426510b5393ddf87218f09dd",
    "line" : 49,
    "diffHunk" : "@@ -1,1 +147,151 @@\n// Apply sets state of predicates and priorities to `s`.\nfunc Apply(s *Snapshot) {\n\tschedulerFactoryMutex.Lock()\n\tfitPredicateMap = s.fitPredicateMap"
  },
  {
    "id" : "0bb195b0-bcc1-4e15-bc7c-707e5e8f8d90",
    "prId" : 77688,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/77688#pullrequestreview-277986967",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a28b03f2-f603-4a64-ba89-406cf6af8971",
        "parentId" : null,
        "authorId" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "body" : "as we discussed offline, we should set the default value here in case arguments.ResourceToWeightMap is nil.",
        "createdAt" : "2019-08-21T18:26:07Z",
        "updatedAt" : "2019-08-27T17:42:32Z",
        "lastEditedBy" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "tags" : [
        ]
      }
    ],
    "commit" : "9ae505930c5b70dd0261c2defbb959ec9dabff18",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +425,429 @@\t\tklog.Fatalf(\"invalid RequestedToCapacityRatioPriority arguments: %s\", err.Error())\n\t}\n\tresourceToWeightMap := make(priorities.ResourceToWeightMap, 0)\n\tif len(arguments.Resources) == 0 {\n\t\tresourceToWeightMap = priorities.DefaultRequestedRatioResources"
  },
  {
    "id" : "cde6a00d-9dc6-465f-b041-1c17982af1fa",
    "prId" : 70203,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/70203#pullrequestreview-168202791",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6af456c8-651e-44e7-ac3a-47188cb7e21d",
        "parentId" : null,
        "authorId" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "body" : "Looks like no need to `return`\r\n\r\n```suggestion\r\n```",
        "createdAt" : "2018-10-24T21:04:01Z",
        "updatedAt" : "2018-10-26T17:49:13Z",
        "lastEditedBy" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "tags" : [
        ]
      },
      {
        "id" : "874b8a5e-d643-4af1-a433-130a72b36442",
        "parentId" : "6af456c8-651e-44e7-ac3a-47188cb7e21d",
        "authorId" : "38ca4f80-c365-4775-8981-1e56b713b07b",
        "body" : "Just a coding style to indicate end of function, I don't have a preference though.",
        "createdAt" : "2018-10-25T04:10:28Z",
        "updatedAt" : "2018-10-26T17:49:13Z",
        "lastEditedBy" : "38ca4f80-c365-4775-8981-1e56b713b07b",
        "tags" : [
        ]
      }
    ],
    "commit" : "c0a8d4702a95b5e05fdac4ffb7a008f7e0d36f88",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +176,180 @@\t\tprovider.PriorityFunctionKeys.Insert(key)\n\t}\n\treturn\n}\n"
  },
  {
    "id" : "82343721-edd1-432f-b6dd-77a0db708f8e",
    "prId" : 63929,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/63929#pullrequestreview-124095631",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ee897a58-db0c-4515-9064-ad53e204138e",
        "parentId" : null,
        "authorId" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "body" : "optional: It is a bit odd to put this check in this function. You may want to check a similar function that validates the `RequestedToCapacityRatioArguments`.",
        "createdAt" : "2018-05-24T18:01:42Z",
        "updatedAt" : "2018-06-04T10:37:08Z",
        "lastEditedBy" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "tags" : [
        ]
      },
      {
        "id" : "406ee613-0cf8-4699-9f6c-d436c9d1f386",
        "parentId" : "ee897a58-db0c-4515-9064-ad53e204138e",
        "authorId" : "e346c770-7799-476e-a860-ed14eed94c66",
        "body" : "Hmm. Not sure I understand. Isn't this function responsibility to validate if `PriorityPolicy` struct is actually used as a variant type (exactly one field is set). I just extended the function we new variant option I added.",
        "createdAt" : "2018-05-24T21:41:16Z",
        "updatedAt" : "2018-06-04T10:37:08Z",
        "lastEditedBy" : "e346c770-7799-476e-a860-ed14eed94c66",
        "tags" : [
        ]
      },
      {
        "id" : "f9d06557-022c-43ae-a26e-9864b2b0a60e",
        "parentId" : "ee897a58-db0c-4515-9064-ad53e204138e",
        "authorId" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "body" : "It is fine to leave it as is. I meant to create another function that validates `RequestedToCapacityRatioArguments`.",
        "createdAt" : "2018-05-29T17:32:28Z",
        "updatedAt" : "2018-06-04T10:37:08Z",
        "lastEditedBy" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "tags" : [
        ]
      }
    ],
    "commit" : "98041d0925ccb3677a3ad9f24f6d9c9b53b4bb54",
    "line" : 40,
    "diffHunk" : "@@ -1,1 +517,521 @@\t\t\tnumArgs++\n\t\t}\n\t\tif priority.Argument.RequestedToCapacityRatioArguments != nil {\n\t\t\tnumArgs++\n\t\t}"
  }
]