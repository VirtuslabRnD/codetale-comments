[
  {
    "id" : "2921c6bb-df60-4119-af44-912d2032b17f",
    "prId" : 83099,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/83099#pullrequestreview-294512971",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0a67d131-df1f-40d1-8acd-5da22f63b5e7",
        "parentId" : null,
        "authorId" : "a650878f-0c10-41c7-b0fc-033031305d77",
        "body" : "nit: it seems that the you can define a generic producer func and reuse it for predicate one, two, etc.",
        "createdAt" : "2019-09-27T19:08:06Z",
        "updatedAt" : "2019-09-30T14:37:02Z",
        "lastEditedBy" : "a650878f-0c10-41c7-b0fc-033031305d77",
        "tags" : [
        ]
      }
    ],
    "commit" : "6120fe9b1129ca10b597df7ae7421396988f3910",
    "line" : 216,
    "diffHunk" : "@@ -1,1 +670,674 @@\t}\n\tconfigProducerRegistry.RegisterPredicate(predicateOneName,\n\t\tfunc(_ frameworkplugins.ConfigProducerArgs) (config.Plugins, []config.PluginConfig) {\n\t\t\treturn config.Plugins{\n\t\t\t\tFilter: &config.PluginSet{"
  },
  {
    "id" : "9a5fcd12-352f-42c3-8ff2-f146fd21d0c4",
    "prId" : 76301,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/76301#pullrequestreview-228851547",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4499b065-9cdb-42b6-b733-600be3b69130",
        "parentId" : null,
        "authorId" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "body" : "s/minute/second/\r\n\r\n1 second may be too short in some of our test clusters. You may want to increase the number of iterations of the loop or the sleep duration.",
        "createdAt" : "2019-04-19T21:08:55Z",
        "updatedAt" : "2019-04-24T23:35:40Z",
        "lastEditedBy" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "tags" : [
        ]
      },
      {
        "id" : "0554370b-313c-44f8-a709-40589de5c202",
        "parentId" : "4499b065-9cdb-42b6-b733-600be3b69130",
        "authorId" : "c4e0fef3-139e-4a11-8515-85fa8b2470d1",
        "body" : "My bad. I meant to loop up to a minute. Now I increased the sleep duration to 100ms and the number of iterations to 600.   ",
        "createdAt" : "2019-04-19T23:27:18Z",
        "updatedAt" : "2019-04-24T23:35:40Z",
        "lastEditedBy" : "c4e0fef3-139e-4a11-8515-85fa8b2470d1",
        "tags" : [
        ]
      }
    ],
    "commit" : "36effb4700faa19da803e4d4adacb64ae7621458",
    "line" : 71,
    "diffHunk" : "@@ -1,1 +284,288 @@\n\tif !foundPodFlag {\n\t\tt.Errorf(\"Failed to get pod from the unschedulable queue after waiting for a minute: %v\", testPod)\n\t}\n"
  },
  {
    "id" : "f2fd637d-b3e5-401c-a991-6c741fa113ac",
    "prId" : 76301,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/76301#pullrequestreview-228787882",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6471280b-e827-44e7-ab8c-8002c3963824",
        "parentId" : null,
        "authorId" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "body" : "s/minute/second/",
        "createdAt" : "2019-04-19T21:09:07Z",
        "updatedAt" : "2019-04-24T23:35:40Z",
        "lastEditedBy" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "tags" : [
        ]
      }
    ],
    "commit" : "36effb4700faa19da803e4d4adacb64ae7621458",
    "line" : 104,
    "diffHunk" : "@@ -1,1 +317,321 @@\n\tif !foundPodFlag {\n\t\tt.Errorf(\"Failed to get pod from the backoff queue after waiting for a minute: %v\", testPod)\n\t}\n}"
  },
  {
    "id" : "f5f92004-fa7d-4b98-a97c-ff1d59897888",
    "prId" : 71678,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/71678#pullrequestreview-181483793",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "306b6912-0e84-4145-9b93-64d5aecc8b6d",
        "parentId" : null,
        "authorId" : "e2ca6907-6765-444e-8bf6-1452233150d6",
        "body" : "+1 the naming wasn't clear on this one",
        "createdAt" : "2018-12-04T21:17:56Z",
        "updatedAt" : "2018-12-04T21:19:39Z",
        "lastEditedBy" : "e2ca6907-6765-444e-8bf6-1452233150d6",
        "tags" : [
        ]
      }
    ],
    "commit" : "b864a5a808da63e0163b04bef20a5c0e959c5f8e",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +366,370 @@\tpod := client.CoreV1().Pods(metav1.NamespaceDefault).(*fakeV1.FakePods)\n\n\tactualBinding, err := pod.GetBinding(binding.GetName())\n\tif err != nil {\n\t\tt.Fatalf(\"Unexpected error: %v\", err)"
  },
  {
    "id" : "671585f9-b278-4227-ac77-3cd0c7f54bcf",
    "prId" : 71551,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/71551#pullrequestreview-182821256",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6580cfe5-a77c-43ac-bded-731ab1016158",
        "parentId" : null,
        "authorId" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "body" : "A nit: changed -> got, c.Changed -> want",
        "createdAt" : "2018-12-07T18:41:41Z",
        "updatedAt" : "2018-12-10T02:01:58Z",
        "lastEditedBy" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "tags" : [
        ]
      }
    ],
    "commit" : "2fe9b1438c10206247b841b14215287c9a10ce7b",
    "line" : 98,
    "diffHunk" : "@@ -1,1 +741,745 @@\t\tnewNode := &v1.Node{Spec: v1.NodeSpec{Taints: c.NewTaints}}\n\t\tchanged := nodeTaintsChanged(newNode, oldNode)\n\t\tif changed != c.Changed {\n\t\t\tt.Errorf(\"Test case %q failed: should be %t, not %t\", c.Name, c.Changed, changed)\n\t\t}"
  },
  {
    "id" : "015b23c5-f48c-4d52-b2a9-6348e212b83c",
    "prId" : 71551,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/71551#pullrequestreview-182850908",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0c9f36d9-043f-4be5-913d-9decefee77e0",
        "parentId" : null,
        "authorId" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "body" : "In order to prevent changes to the NodeCondition that may be missed here, please add the following code:\r\n\r\n```\r\n    n := v1.NodeCondition{}\r\n    t := reflect.TypeOf(n)\r\n    if t.NumField() != 6 {\r\n    \tt.Errorf(\"NodeCondition type has changed. The nodeConditionsChanged() function must be reevaluated.\")\r\n    }\r\n```",
        "createdAt" : "2018-12-07T19:56:13Z",
        "updatedAt" : "2018-12-10T02:01:58Z",
        "lastEditedBy" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "tags" : [
        ]
      }
    ],
    "commit" : "2fe9b1438c10206247b841b14215287c9a10ce7b",
    "line" : 110,
    "diffHunk" : "@@ -1,1 +753,757 @@\t}\n\n\tfor _, c := range []struct {\n\t\tName          string\n\t\tChanged       bool"
  },
  {
    "id" : "39466ac0-3c46-4eb7-9a45-23cb7fb45c5e",
    "prId" : 69412,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/69412#pullrequestreview-162667248",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9bce0e8d-e927-4efa-8098-f01bf83ac204",
        "parentId" : null,
        "authorId" : "5f2c1de8-4266-42c0-b343-ba247af3578f",
        "body" : "Thanks for updating this. It is easier to read (to me) than the reactor stuff. I almost wonder if this test should assert `len(actions)==1` since the test fails otherwise. ",
        "createdAt" : "2018-10-08T23:03:12Z",
        "updatedAt" : "2018-10-12T06:39:44Z",
        "lastEditedBy" : "5f2c1de8-4266-42c0-b343-ba247af3578f",
        "tags" : [
        ]
      }
    ],
    "commit" : "a96a390d924d33ba7dda13761ff0eb1eb37a02b6",
    "line" : 156,
    "diffHunk" : "@@ -1,1 +259,263 @@\t\trequestReceived := false\n\t\tactions := client.Actions()\n\t\tfor _, a := range actions {\n\t\t\tif a.GetVerb() == \"get\" {\n\t\t\t\tgetAction, ok := a.(clienttesting.GetAction)"
  },
  {
    "id" : "7c4103c5-a6d1-402c-8856-7d4f4169c7e7",
    "prId" : 63666,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/63666#pullrequestreview-119541357",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "24ac8a1c-f25a-44e7-a0ce-93be216f5f32",
        "parentId" : null,
        "authorId" : "5f2c1de8-4266-42c0-b343-ba247af3578f",
        "body" : "I see there's already a mix of 'table' and 'tests' in this file. I'd prefer 'tests' in general. Please use that in lines that you are modifying. I'd say you don't have to worry about existing uses of 'table' if you are not touching those lines.",
        "createdAt" : "2018-05-11T18:58:16Z",
        "updatedAt" : "2018-05-28T13:47:00Z",
        "lastEditedBy" : "5f2c1de8-4266-42c0-b343-ba247af3578f",
        "tags" : [
        ]
      }
    ],
    "commit" : "c6379cef0eab7514a1a6aff14100df02ec1b91c0",
    "line" : 136,
    "diffHunk" : "@@ -1,1 +448,452 @@\nfunc TestSkipPodUpdate(t *testing.T) {\n\ttable := []struct {\n\t\tpod              *v1.Pod\n\t\tisAssumedPodFunc func(*v1.Pod) bool"
  },
  {
    "id" : "897ea68e-dafd-47ab-9727-cf4fad6dd14f",
    "prId" : 60332,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/60332#pullrequestreview-99187014",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "09c2fa19-32e0-4afe-bcfa-fcf349ecb2f4",
        "parentId" : null,
        "authorId" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "body" : "Why don't you check the pointer to the extender instead of its string type?",
        "createdAt" : "2018-02-25T03:18:06Z",
        "updatedAt" : "2018-02-28T01:25:59Z",
        "lastEditedBy" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "tags" : [
        ]
      },
      {
        "id" : "c02c02ab-623a-4c9e-8dde-48ac3fff2bc3",
        "parentId" : "09c2fa19-32e0-4afe-bcfa-fcf349ecb2f4",
        "authorId" : "ed12fa4b-7790-4e88-b7d8-5d6a06b0b9f3",
        "body" : "I don't have access to the pointer to the default binder.",
        "createdAt" : "2018-02-25T05:12:44Z",
        "updatedAt" : "2018-02-28T01:25:59Z",
        "lastEditedBy" : "ed12fa4b-7790-4e88-b7d8-5d6a06b0b9f3",
        "tags" : [
        ]
      },
      {
        "id" : "f9fbe38e-5a07-4dd8-baca-882205ecb707",
        "parentId" : "09c2fa19-32e0-4afe-bcfa-fcf349ecb2f4",
        "authorId" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "body" : "Ah, right. Never mind.",
        "createdAt" : "2018-02-26T05:16:18Z",
        "updatedAt" : "2018-02-28T01:25:59Z",
        "lastEditedBy" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "tags" : [
        ]
      }
    ],
    "commit" : "8d880506fee441cdc742d61753a7a3c9215079a2",
    "line" : 47,
    "diffHunk" : "@@ -1,1 +570,574 @@\t\textenders []algorithm.SchedulerExtender\n\n\t\texpectedBinderType string\n\t}{\n\t\t// Expect to return the default binder because the extender is not a"
  },
  {
    "id" : "6671c55e-59b1-4d03-b40b-a34a9b09f1ca",
    "prId" : 59363,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/59363#pullrequestreview-94533395",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "97e4ef63-8574-4fcc-98db-933d153fa428",
        "parentId" : null,
        "authorId" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "body" : "Thanks for adding this!",
        "createdAt" : "2018-02-06T22:43:42Z",
        "updatedAt" : "2018-02-06T22:51:20Z",
        "lastEditedBy" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "tags" : [
        ]
      }
    ],
    "commit" : "f69eaa3b18fa7601f3b086345b252c2e8bd7a0a1",
    "line" : 285,
    "diffHunk" : "@@ -1,1 +515,519 @@}\n\nfunc newConfigFactory(client *clientset.Clientset, hardPodAffinitySymmetricWeight int32) scheduler.Configurator {\n\tinformerFactory := informers.NewSharedInformerFactory(client, 0)\n\treturn NewConfigFactory("
  }
]