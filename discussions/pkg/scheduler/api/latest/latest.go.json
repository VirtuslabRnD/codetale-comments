[
  {
    "id" : "11f304c4-40f5-4514-8ba4-c39ba4592469",
    "prId" : 75857,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/75857#pullrequestreview-221458953",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "302ad0d3-b6b0-4c87-8b0f-87c31956ce22",
        "parentId" : null,
        "authorId" : "5f2c1de8-4266-42c0-b343-ba247af3578f",
        "body" : "I know I'm late to this PR, but according to the godoc, `json.NewSerializer` returns an object that can parse JSON or YAML bytes. Are those docs wrong?",
        "createdAt" : "2019-04-01T23:31:40Z",
        "updatedAt" : "2019-04-01T23:37:33Z",
        "lastEditedBy" : "5f2c1de8-4266-42c0-b343-ba247af3578f",
        "tags" : [
        ]
      },
      {
        "id" : "924e66f8-c780-42a2-839c-515200b828c2",
        "parentId" : "302ad0d3-b6b0-4c87-8b0f-87c31956ce22",
        "authorId" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "body" : "Probably, it turns out to be working for both JSON **and** YAML.",
        "createdAt" : "2019-04-01T23:40:24Z",
        "updatedAt" : "2019-04-01T23:40:25Z",
        "lastEditedBy" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "tags" : [
        ]
      },
      {
        "id" : "720b3ce8-88e1-4aaa-945d-d0eb0bea0f5f",
        "parentId" : "302ad0d3-b6b0-4c87-8b0f-87c31956ce22",
        "authorId" : "5f2c1de8-4266-42c0-b343-ba247af3578f",
        "body" : "I guess I'm just surprised that it wasn't working before this PR, because the docs imply that it should have worked. Clearly @danielqsj would not have sent this unless it was broken.",
        "createdAt" : "2019-04-02T00:12:55Z",
        "updatedAt" : "2019-04-02T00:12:55Z",
        "lastEditedBy" : "5f2c1de8-4266-42c0-b343-ba247af3578f",
        "tags" : [
        ]
      },
      {
        "id" : "96e2d635-fa37-4849-ac06-314838aa3ea5",
        "parentId" : "302ad0d3-b6b0-4c87-8b0f-87c31956ce22",
        "authorId" : "a472aa4a-c4f7-4692-bc21-708257a1dacc",
        "body" : "I checked it again.\r\nAfter remove `yaml.NewDecodingSerializer`, unit test failed:\r\n```\r\n=== RUN   TestInitPolicyFromFile\r\n--- FAIL: TestInitPolicyFromFile (0.00s)\r\n    scheduler_test.go:1011: Failed writing a policy config file: invalid policy: couldn't get version/kind; json parse error: invalid character 'a' looking for beginning of value\r\nFAIL\r\n```\r\n\r\nAnd the doc of `json.NewSerializer` is \r\n```\r\n// NewSerializer creates a JSON serializer that handles encoding versioned objects into the proper JSON form. If typer\r\n// is not nil, the object has the group, version, and kind fields set.\r\n```\r\n\r\nIt seems the return object can only parse JSON, right?\r\n\r\nSo I turned to `yaml.NewDecodingSerializer` whose purpose is to support YAML decoding.\r\n```\r\n// NewDecodingSerializer adds YAML decoding support to a serializer that supports JSON.\r\nfunc NewDecodingSerializer(jsonSerializer runtime.Serializer) runtime.Serializer {\r\n\treturn &yamlSerializer{jsonSerializer}\r\n}\r\n```",
        "createdAt" : "2019-04-02T05:49:17Z",
        "updatedAt" : "2019-04-02T05:49:17Z",
        "lastEditedBy" : "a472aa4a-c4f7-4692-bc21-708257a1dacc",
        "tags" : [
        ]
      }
    ],
    "commit" : "412adb8ca99053f55ab7d58f19d20bbe783c7fc8",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +45,49 @@\nfunc init() {\n\tjsonSerializer := json.NewSerializer(json.DefaultMetaFactory, schedulerapi.Scheme, schedulerapi.Scheme, true)\n\tserializer := yaml.NewDecodingSerializer(jsonSerializer)\n\tCodec = versioning.NewDefaultingCodecForScheme("
  }
]