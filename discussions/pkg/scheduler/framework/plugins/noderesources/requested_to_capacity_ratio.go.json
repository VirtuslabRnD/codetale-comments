[
  {
    "id" : "a40d784c-c1f6-497b-a293-9c2609d06e20",
    "prId" : 91446,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/91446#pullrequestreview-418691649",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7c09c47a-7794-44dd-bdb5-62f8fbd03640",
        "parentId" : null,
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "Are these 2 above still used?",
        "createdAt" : "2020-05-26T18:33:34Z",
        "updatedAt" : "2020-05-26T21:37:42Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      },
      {
        "id" : "368e8479-b35f-4ca5-af4e-2c0300bac73a",
        "parentId" : "7c09c47a-7794-44dd-bdb5-62f8fbd03640",
        "authorId" : "f5a0a152-2396-4fbc-9230-a5078e52ac1e",
        "body" : "`minUtilization` isn't . `maxUtilization` is still used when building [the scoring function](https://github.com/kubernetes/kubernetes/blob/c37933e07df5a716a30452ace6e23d44d5ea4eeb/pkg/scheduler/framework/plugins/noderesources/requested_to_capacity_ratio.go#L131).\r\n\r\nI'll remove the former and see if the latter is really needed in the following PR.\r\n\r\n",
        "createdAt" : "2020-05-26T21:12:18Z",
        "updatedAt" : "2020-05-26T21:37:42Z",
        "lastEditedBy" : "f5a0a152-2396-4fbc-9230-a5078e52ac1e",
        "tags" : [
        ]
      },
      {
        "id" : "33703462-f255-4717-bd61-54711e84f1e3",
        "parentId" : "7c09c47a-7794-44dd-bdb5-62f8fbd03640",
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "sg",
        "createdAt" : "2020-05-26T21:27:26Z",
        "updatedAt" : "2020-05-26T21:37:42Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      }
    ],
    "commit" : "3ffd71c4a201455d9937c34fd9123e7ee7ff54fc",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +33,37 @@\tRequestedToCapacityRatioName = \"RequestedToCapacityRatio\"\n\tminUtilization               = 0\n\tmaxUtilization               = 100\n)\n"
  },
  {
    "id" : "31af3d81-66f0-43c0-8919-bddb4a05881e",
    "prId" : 91102,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/91102#pullrequestreview-414484337",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9a181739-f89b-43e7-8c6e-c03bb8512c4c",
        "parentId" : null,
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "Could you add the same validations as the others?",
        "createdAt" : "2020-05-18T15:18:44Z",
        "updatedAt" : "2020-05-18T15:19:26Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      },
      {
        "id" : "e968d991-6c52-4d15-987e-efaf37239591",
        "parentId" : "9a181739-f89b-43e7-8c6e-c03bb8512c4c",
        "authorId" : "1fde46ca-8fae-4b82-9978-f266fdae6ffe",
        "body" : "sure, will cc you then, this is in my TODO list.",
        "createdAt" : "2020-05-19T01:31:27Z",
        "updatedAt" : "2020-05-19T01:31:28Z",
        "lastEditedBy" : "1fde46ca-8fae-4b82-9978-f266fdae6ffe",
        "tags" : [
        ]
      },
      {
        "id" : "022fd65f-d2e9-4405-8b4e-e5706b7cdef8",
        "parentId" : "9a181739-f89b-43e7-8c6e-c03bb8512c4c",
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "I think @pancernik can do it in his PRs for #90859",
        "createdAt" : "2020-05-19T14:10:31Z",
        "updatedAt" : "2020-05-19T14:10:31Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      }
    ],
    "commit" : "838a0a8c03c07ff658e38669e0abb47ef05f1234",
    "line" : 3,
    "diffHunk" : "@@ -1,1 +76,80 @@\t\t\tresourceToWeightMap[v1.ResourceName(resource.Name)] = 1\n\t\t}\n\t}\n\n\treturn &RequestedToCapacityRatio{"
  },
  {
    "id" : "273802df-ffe3-4e57-b685-c28b91a80e0e",
    "prId" : 88585,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/88585#pullrequestreview-390293473",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5a6593b7-7457-43d9-b84e-86caad00a57b",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "this was previously decoding into an internal type with no json tags?",
        "createdAt" : "2020-04-07T18:15:11Z",
        "updatedAt" : "2020-04-08T19:24:22Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "3946223c-1885-4edf-bdf0-0cfe0610cc0c",
        "parentId" : "5a6593b7-7457-43d9-b84e-86caad00a57b",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "are there any tests exercising loading this config?",
        "createdAt" : "2020-04-07T18:15:45Z",
        "updatedAt" : "2020-04-08T19:24:22Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "bb569b9b-d10e-4730-b2e5-475e3dd9cf3c",
        "parentId" : "5a6593b7-7457-43d9-b84e-86caad00a57b",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "oh... the \"internal\" type defined json tags on `config.RequestedToCapacityRatioArguments`, but not on `config.ResourceSpec` and `config.UtilizationShapePoint`",
        "createdAt" : "2020-04-07T18:16:18Z",
        "updatedAt" : "2020-04-08T19:24:22Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "cbf0c824-f1ff-4e6f-bf6c-f4a91fa53e89",
        "parentId" : "5a6593b7-7457-43d9-b84e-86caad00a57b",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "check what happens with the following args in 1.18 for this plugin:\r\n\r\n```yaml\r\nshape: [{\"Utilization\": 1, \"Score\": 1}, {\"utilization\": 2, \"score\": 2}]\r\nresources: [{\"Name\":\"a\",\"Weight\":1},{\"Name\":\"b\",\"Weight\":2}]\r\n```\r\n",
        "createdAt" : "2020-04-07T18:20:07Z",
        "updatedAt" : "2020-04-08T19:24:22Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "74859400-94f5-4723-9ec0-dc525ce141ce",
        "parentId" : "5a6593b7-7457-43d9-b84e-86caad00a57b",
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "True. There is nothing exercising these E2E. It is non-trivial given how buried the types are.\r\n\r\nI think the json decoder would simply ignore casing. @pancernik, could you verify this?",
        "createdAt" : "2020-04-07T18:38:46Z",
        "updatedAt" : "2020-04-08T19:24:22Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      },
      {
        "id" : "09708054-58bb-4bcf-9c2e-6939f5623057",
        "parentId" : "5a6593b7-7457-43d9-b84e-86caad00a57b",
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "We can add the test in `requested_to_capacity_ratio_test.go`, as there is no other location that would go through the decoding. I'll add the test in the compatibility tests once we move the decoding to the component config files.",
        "createdAt" : "2020-04-07T18:45:10Z",
        "updatedAt" : "2020-04-08T19:24:22Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      },
      {
        "id" : "6180d6f1-4334-43a6-937a-6b85dfe59dd8",
        "parentId" : "5a6593b7-7457-43d9-b84e-86caad00a57b",
        "authorId" : "f5a0a152-2396-4fbc-9230-a5078e52ac1e",
        "body" : "Surprisingly, Go's [JSON encoding](https://golang.org/pkg/encoding/json/#Unmarshal):\r\n> matches incoming object keys to the keys used by Marshal (either the struct field name or its \r\ntag), preferring an exact match but also accepting a case-insensitive match\r\n\r\nI did confirm this when working on this PR.  Wouldn't adding this test add some confusion to the future readers? This test would actually test a documented behaviour of the language stdlib. What do you think @alculquicondor @liggitt ?\r\n\r\n\r\n",
        "createdAt" : "2020-04-07T19:03:34Z",
        "updatedAt" : "2020-04-08T19:24:23Z",
        "lastEditedBy" : "f5a0a152-2396-4fbc-9230-a5078e52ac1e",
        "tags" : [
        ]
      },
      {
        "id" : "c59d8e0e-35b1-4268-bdea-c08831505e80",
        "parentId" : "5a6593b7-7457-43d9-b84e-86caad00a57b",
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "yes, please add the test and I'll move it to compatibility tests when we are ready.\r\n\r\nBut leave the types that didn't have json tags without them in v1alpha2 with a comment to fix them in v1beta1.",
        "createdAt" : "2020-04-07T19:07:20Z",
        "updatedAt" : "2020-04-08T19:24:23Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      },
      {
        "id" : "1f46e676-d8b5-420c-92da-273d4c0bca60",
        "parentId" : "5a6593b7-7457-43d9-b84e-86caad00a57b",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "The stdlib behavior is problematic, and API type decoding is explicitly case-sensitive. We need the test to make sure we don't break compatibility with v1alpha2 configurations.",
        "createdAt" : "2020-04-07T19:11:26Z",
        "updatedAt" : "2020-04-08T19:24:23Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "941ba00c-80b9-492f-9da5-0698e46cbf4c",
        "parentId" : "5a6593b7-7457-43d9-b84e-86caad00a57b",
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "The test was added and the types were copied to v1alpha2 without json tags from the second level.",
        "createdAt" : "2020-04-08T20:08:21Z",
        "updatedAt" : "2020-04-08T20:08:21Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      }
    ],
    "commit" : "c4d20ca8a8d577ad11b1f7440d3896a17458074d",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +51,55 @@func NewRequestedToCapacityRatio(plArgs *runtime.Unknown, handle framework.FrameworkHandle) (framework.Plugin, error) {\n\targs := &schedulerv1alpha2.RequestedToCapacityRatioArgs{}\n\tif err := framework.DecodeInto(plArgs, args); err != nil {\n\t\treturn nil, err\n\t}"
  }
]