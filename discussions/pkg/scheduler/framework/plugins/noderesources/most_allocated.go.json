[
  {
    "id" : "3f6cc742-68dc-4c9f-8874-0dbe855b24a6",
    "prId" : 90544,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/90544#pullrequestreview-412698347",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "31672e97-8435-4a02-b377-00f7c6f25792",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "same question about a max weight",
        "createdAt" : "2020-05-15T13:38:23Z",
        "updatedAt" : "2020-05-15T14:27:18Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "ff6ebe57-6adb-4901-b94f-8c7d242d43d1",
        "parentId" : "31672e97-8435-4a02-b377-00f7c6f25792",
        "authorId" : "1fde46ca-8fae-4b82-9978-f266fdae6ffe",
        "body" : "done",
        "createdAt" : "2020-05-15T14:27:52Z",
        "updatedAt" : "2020-05-15T14:27:52Z",
        "lastEditedBy" : "1fde46ca-8fae-4b82-9978-f266fdae6ffe",
        "tags" : [
        ]
      }
    ],
    "commit" : "621c73b984b0bb65b2dd8c97e42675b42d172f01",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +78,82 @@\t\t\treturn nil, fmt.Errorf(\"resource Weight of %v should be less than 100, got %v\", resource.Name, resource.Weight)\n\t\t}\n\t\tresToWeightMap[v1.ResourceName(resource.Name)] = resource.Weight\n\t}\n"
  },
  {
    "id" : "e1f86c3e-cc71-4b9d-8b3e-c10da082f6c4",
    "prId" : 86725,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/86725#pullrequestreview-337145055",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "636d5747-202c-4525-8484-99cad814227b",
        "parentId" : null,
        "authorId" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "body" : "make it the same as RequestedToCapacityRatio:\r\n\r\n```\r\ntype MostAllocated struct {\r\n  handle framework.FrameworkHandle\r\n  resourceAllocationScorer\r\n}\r\n```",
        "createdAt" : "2019-12-30T16:09:07Z",
        "updatedAt" : "2019-12-31T15:50:41Z",
        "lastEditedBy" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "tags" : [
        ]
      }
    ],
    "commit" : "7f79516705f6374c28bcbddeb079787f5ca78ea5",
    "line" : 11,
    "diffHunk" : "@@ -1,1 +28,32 @@// MostAllocated is a score plugin that favors nodes with high allocation based on requested resources.\ntype MostAllocated struct {\n\thandle framework.FrameworkHandle\n\tresourceAllocationScorer\n}"
  },
  {
    "id" : "477ae201-7050-4e17-8c66-ae221437c56c",
    "prId" : 86580,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/86580#pullrequestreview-336153258",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "47843a97-eb2b-4c50-b7c1-21efb3debb36",
        "parentId" : null,
        "authorId" : "9829b6c0-e54c-401b-8d97-73e5aa4e83c1",
        "body" : "This doesn't look necessary to me.\r\n",
        "createdAt" : "2019-12-24T10:01:43Z",
        "updatedAt" : "2019-12-25T08:42:05Z",
        "lastEditedBy" : "9829b6c0-e54c-401b-8d97-73e5aa4e83c1",
        "tags" : [
        ]
      }
    ],
    "commit" : "bf2b709e822c37288f1ce1470c4daf7a47b44edb",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +46,50 @@func (ma *MostAllocated) Score(ctx context.Context, state *framework.CycleState, pod *v1.Pod, nodeName string) (int64, *framework.Status) {\n\tnodeInfo, err := ma.handle.SnapshotSharedLister().NodeInfos().Get(nodeName)\n\tif err != nil || nodeInfo.Node() == nil {\n\t\treturn 0, framework.NewStatus(framework.Error, fmt.Sprintf(\"getting node %q from Snapshot: %v, node is nil: %v\", nodeName, err, nodeInfo.Node() == nil))\n\t}"
  }
]