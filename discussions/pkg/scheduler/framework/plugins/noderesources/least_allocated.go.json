[
  {
    "id" : "bf45f851-69ff-46dd-b08d-38d7132c376f",
    "prId" : 90544,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/90544#pullrequestreview-402705089",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7e57697a-f8d8-4537-94bb-4a005f18514e",
        "parentId" : null,
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "what if you make this function a member of `LeastAllocated`?",
        "createdAt" : "2020-04-28T15:55:38Z",
        "updatedAt" : "2020-05-15T14:27:17Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      },
      {
        "id" : "5d9db441-71cf-445f-bcd3-eb884681879f",
        "parentId" : "7e57697a-f8d8-4537-94bb-4a005f18514e",
        "authorId" : "1fde46ca-8fae-4b82-9978-f266fdae6ffe",
        "body" : "this is coded as is to align with other plugin, if you think make it as a member of `LeatAllocated` bring us some value, we can refactor it with other plugin later.",
        "createdAt" : "2020-04-29T03:39:34Z",
        "updatedAt" : "2020-05-15T14:27:17Z",
        "lastEditedBy" : "1fde46ca-8fae-4b82-9978-f266fdae6ffe",
        "tags" : [
        ]
      },
      {
        "id" : "f0707122-8686-4533-af02-2767e1f8e1d0",
        "parentId" : "7e57697a-f8d8-4537-94bb-4a005f18514e",
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "It's just a nit. In fact, `resourceAllocationScorer` should be accepting an interface that this (and other plugins) can implement. This way we avoid the unnecessary closures. But you can leave this for now.",
        "createdAt" : "2020-04-29T14:16:23Z",
        "updatedAt" : "2020-05-15T14:27:17Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      }
    ],
    "commit" : "621c73b984b0bb65b2dd8c97e42675b42d172f01",
    "line" : 49,
    "diffHunk" : "@@ -1,1 +92,96 @@}\n\nfunc leastResourceScorer(resToWeightMap resourceToWeightMap) func(resourceToValueMap, resourceToValueMap, bool, int, int) int64 {\n\treturn func(requested, allocable resourceToValueMap, includeVolumes bool, requestedVolumes int, allocatableVolumes int) int64 {\n\t\tvar nodeScore, weightSum int64"
  },
  {
    "id" : "16427856-ff25-4ee3-b91a-66dc02db9027",
    "prId" : 90544,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/90544#pullrequestreview-411883945",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1de298e4-a829-444d-8d8a-f0d04a0f0eee",
        "parentId" : null,
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "skipping zeros would make sense here",
        "createdAt" : "2020-05-12T20:21:40Z",
        "updatedAt" : "2020-05-15T14:27:17Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      },
      {
        "id" : "c943e679-6a68-491c-b796-a7adad221843",
        "parentId" : "1de298e4-a829-444d-8d8a-f0d04a0f0eee",
        "authorId" : "1fde46ca-8fae-4b82-9978-f266fdae6ffe",
        "body" : "done",
        "createdAt" : "2020-05-13T07:36:25Z",
        "updatedAt" : "2020-05-15T14:27:17Z",
        "lastEditedBy" : "1fde46ca-8fae-4b82-9978-f266fdae6ffe",
        "tags" : [
        ]
      },
      {
        "id" : "650fd3c7-7f11-4b66-a79a-6df659fead6e",
        "parentId" : "1de298e4-a829-444d-8d8a-f0d04a0f0eee",
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "Let's error on 0",
        "createdAt" : "2020-05-14T14:50:12Z",
        "updatedAt" : "2020-05-15T14:27:18Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      }
    ],
    "commit" : "621c73b984b0bb65b2dd8c97e42675b42d172f01",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +79,83 @@\t\t\treturn nil, fmt.Errorf(\"resource Weight of %v should be less than 100, got %v\", resource.Name, resource.Weight)\n\t\t}\n\t\tresToWeightMap[v1.ResourceName(resource.Name)] = resource.Weight\n\t}\n"
  },
  {
    "id" : "dea4a52c-557d-48b4-9a06-eea845ab07a7",
    "prId" : 90544,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/90544#pullrequestreview-411884362",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1c8cd229-b4ef-4930-9440-167493326d61",
        "parentId" : null,
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "one user could put all weights to zero. Let's return a zero score in that case, otherwise this is a division by zero.",
        "createdAt" : "2020-05-12T20:23:52Z",
        "updatedAt" : "2020-05-15T14:27:17Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      },
      {
        "id" : "1c3e6890-d8e7-4262-bec0-6ad3be1c3c68",
        "parentId" : "1c8cd229-b4ef-4930-9440-167493326d61",
        "authorId" : "1fde46ca-8fae-4b82-9978-f266fdae6ffe",
        "body" : "This won't happen again when the zero weight has been skipped.",
        "createdAt" : "2020-05-13T07:37:39Z",
        "updatedAt" : "2020-05-15T14:27:17Z",
        "lastEditedBy" : "1fde46ca-8fae-4b82-9978-f266fdae6ffe",
        "tags" : [
        ]
      },
      {
        "id" : "6f94e582-060e-4a3c-9479-b15934afc95e",
        "parentId" : "1c8cd229-b4ef-4930-9440-167493326d61",
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "the sum could still be zero. But, as I said in the other comment, we should disallow 0 instead.",
        "createdAt" : "2020-05-13T13:49:24Z",
        "updatedAt" : "2020-05-15T14:27:17Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      },
      {
        "id" : "bdd1b9fc-6912-4cf2-9965-ee45b724d98d",
        "parentId" : "1c8cd229-b4ef-4930-9440-167493326d61",
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "this is not resolved unless you error on 0",
        "createdAt" : "2020-05-14T14:50:36Z",
        "updatedAt" : "2020-05-15T14:27:18Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      }
    ],
    "commit" : "621c73b984b0bb65b2dd8c97e42675b42d172f01",
    "line" : 57,
    "diffHunk" : "@@ -1,1 +100,104 @@\t\t\tweightSum += weight\n\t\t}\n\t\treturn nodeScore / weightSum\n\t}\n}"
  },
  {
    "id" : "65bccd4f-78d7-4a5d-98a5-961f710e5d1e",
    "prId" : 90544,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/90544#pullrequestreview-411542253",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c8a0f3d3-2e6e-4694-a48c-652d3b95a1f7",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "is the dereference here required?",
        "createdAt" : "2020-05-13T13:48:30Z",
        "updatedAt" : "2020-05-15T14:27:17Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "64ddb8bf-7869-4722-b816-333f46ac26a3",
        "parentId" : "c8a0f3d3-2e6e-4694-a48c-652d3b95a1f7",
        "authorId" : "1fde46ca-8fae-4b82-9978-f266fdae6ffe",
        "body" : "yes, I need dereference here so that I can loop it's member `Resources`",
        "createdAt" : "2020-05-14T07:42:50Z",
        "updatedAt" : "2020-05-15T14:27:18Z",
        "lastEditedBy" : "1fde46ca-8fae-4b82-9978-f266fdae6ffe",
        "tags" : [
        ]
      }
    ],
    "commit" : "621c73b984b0bb65b2dd8c97e42675b42d172f01",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +72,76 @@\n\tresToWeightMap := make(resourceToWeightMap)\n\tfor _, resource := range (*args).Resources {\n\t\tif resource.Weight <= 0 {\n\t\t\treturn nil, fmt.Errorf(\"resource Weight of %v should be a positive value, got %v\", resource.Name, resource.Weight)"
  },
  {
    "id" : "18a636de-5675-4990-bd48-8e04eb334da2",
    "prId" : 90544,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/90544#pullrequestreview-412698057",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ddcba7ef-d132-497c-ae0a-b3839e88152c",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "should we place a maximum bound on the weight to avoid overflow errors when combining resources? for example, hardPodAffinitySymmetricWeight is limited to a max of 100",
        "createdAt" : "2020-05-15T13:38:06Z",
        "updatedAt" : "2020-05-15T14:27:18Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "39a2896c-c233-49f3-9992-20a7286dc78f",
        "parentId" : "ddcba7ef-d132-497c-ae0a-b3839e88152c",
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "oh true, and a limit of 100 was already mentioned in the godoc",
        "createdAt" : "2020-05-15T13:39:15Z",
        "updatedAt" : "2020-05-15T14:27:18Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      },
      {
        "id" : "b37d7877-cd36-45f7-852d-34158a9a6bfa",
        "parentId" : "ddcba7ef-d132-497c-ae0a-b3839e88152c",
        "authorId" : "1fde46ca-8fae-4b82-9978-f266fdae6ffe",
        "body" : "done",
        "createdAt" : "2020-05-15T14:27:32Z",
        "updatedAt" : "2020-05-15T14:27:32Z",
        "lastEditedBy" : "1fde46ca-8fae-4b82-9978-f266fdae6ffe",
        "tags" : [
        ]
      }
    ],
    "commit" : "621c73b984b0bb65b2dd8c97e42675b42d172f01",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +79,83 @@\t\t\treturn nil, fmt.Errorf(\"resource Weight of %v should be less than 100, got %v\", resource.Name, resource.Weight)\n\t\t}\n\t\tresToWeightMap[v1.ResourceName(resource.Name)] = resource.Weight\n\t}\n"
  },
  {
    "id" : "af68873d-8b8f-468f-8961-0d4b5bf10c37",
    "prId" : 86725,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/86725#pullrequestreview-337145055",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e45c18cb-bb80-427c-8147-6e67f5015d77",
        "parentId" : null,
        "authorId" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "body" : "make it the same as RequestedToCapacityRatio:\r\n\r\n```\r\ntype LeastAllocated struct {\r\n  handle framework.FrameworkHandle\r\n  resourceAllocationScorer\r\n}\r\n```",
        "createdAt" : "2019-12-30T16:12:19Z",
        "updatedAt" : "2019-12-31T15:50:41Z",
        "lastEditedBy" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "tags" : [
        ]
      }
    ],
    "commit" : "7f79516705f6374c28bcbddeb079787f5ca78ea5",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +30,34 @@\thandle framework.FrameworkHandle\n\tresourceAllocationScorer\n}\n\nvar _ = framework.ScorePlugin(&LeastAllocated{})"
  },
  {
    "id" : "ff508551-5c5d-40d3-b721-ff85fa6e135a",
    "prId" : 86725,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/86725#pullrequestreview-337145055",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "af2e7cea-a4db-4849-933e-f111a71ec148",
        "parentId" : null,
        "authorId" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "body" : "This will become something like this:\r\n```\r\nreturn &LeastAllocated{\r\n  handle: h,\r\n  resourceAllocationScorer: {LeastAllocatedName, leastResourceScorer, DefaultRequestedRatioResources},\r\n }, nil\r\n``` ",
        "createdAt" : "2019-12-30T16:14:09Z",
        "updatedAt" : "2019-12-31T15:50:41Z",
        "lastEditedBy" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "tags" : [
        ]
      }
    ],
    "commit" : "7f79516705f6374c28bcbddeb079787f5ca78ea5",
    "line" : 46,
    "diffHunk" : "@@ -1,1 +73,77 @@\t\t},\n\t}, nil\n}\n\nfunc leastResourceScorer(requested, allocable resourceToValueMap, includeVolumes bool, requestedVolumes int, allocatableVolumes int) int64 {"
  }
]