[
  {
    "id" : "ffed6fc0-6ebd-4999-a043-eb8f1d9d3543",
    "prId" : 96202,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/96202#pullrequestreview-523425966",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2e88b023-4b41-4aee-9266-d3e9db445e39",
        "parentId" : null,
        "authorId" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "body" : "Is this PR still a work in progress? can you please add WIP in the PR title if so?",
        "createdAt" : "2020-11-04T13:27:50Z",
        "updatedAt" : "2020-11-09T20:19:36Z",
        "lastEditedBy" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "tags" : [
        ]
      },
      {
        "id" : "b2548947-bf5d-44ac-8d5e-7be133c39f72",
        "parentId" : "2e88b023-4b41-4aee-9266-d3e9db445e39",
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "It's not. Such API doesn't exist yet and no one is working on it, AFAIK.",
        "createdAt" : "2020-11-04T14:42:15Z",
        "updatedAt" : "2020-11-09T20:19:36Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      }
    ],
    "commit" : "3ce145787af031e2f6a735d558530f6813cbfdd0",
    "line" : 45,
    "diffHunk" : "@@ -1,1 +51,55 @@\t}\n\t// Match node selector for requiredDuringSchedulingRequiredDuringExecution.\n\t// TODO: Uncomment this block when implement RequiredDuringSchedulingRequiredDuringExecution.\n\t// if affinity.RequiredDuringSchedulingRequiredDuringExecution != nil && !nodeMatchesNodeSelector(node, affinity.RequiredDuringSchedulingRequiredDuringExecution) {\n\t// \treturn false"
  },
  {
    "id" : "5640f3c4-4084-4491-a405-01f3d8d43f54",
    "prId" : 96202,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/96202#pullrequestreview-523677664",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b5a8a959-33b4-4229-b813-bf05ee840ff2",
        "parentId" : null,
        "authorId" : "0e2b7889-1224-444e-a36d-475f9edd0703",
        "body" : "You updated the function name in this comment, but didn't actually change the function name. Also, wondering if we actually need this private function since it's just a wrapper for `corev1.MatchNodeSelectorTerms`",
        "createdAt" : "2020-11-04T19:12:59Z",
        "updatedAt" : "2020-11-09T20:19:36Z",
        "lastEditedBy" : "0e2b7889-1224-444e-a36d-475f9edd0703",
        "tags" : [
        ]
      },
      {
        "id" : "948a58fb-303f-4675-b5cf-236b253ea1fb",
        "parentId" : "b5a8a959-33b4-4229-b813-bf05ee840ff2",
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "it can be removed when the TODO is implemented.",
        "createdAt" : "2020-11-04T19:38:40Z",
        "updatedAt" : "2020-11-09T20:19:36Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      }
    ],
    "commit" : "3ce145787af031e2f6a735d558530f6813cbfdd0",
    "line" : 59,
    "diffHunk" : "@@ -1,1 +63,67 @@}\n\n// nodeMatchesNodeSelector checks if a node's labels satisfy a list of node selector terms,\n// terms are ORed, and an empty list of terms will match nothing.\nfunc nodeMatchesNodeSelector(node *v1.Node, nodeSelector *v1.NodeSelector) bool {"
  }
]