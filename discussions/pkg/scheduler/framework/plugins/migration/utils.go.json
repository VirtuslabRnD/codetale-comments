[
  {
    "id" : "e297a417-c200-4df1-8330-a1750f69db69",
    "prId" : 83601,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/83601#pullrequestreview-300370935",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ce59d0a4-a1fd-4897-a49b-394637d03e95",
        "parentId" : null,
        "authorId" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "body" : "A nit: reading -> Error while reading ...",
        "createdAt" : "2019-10-10T21:16:06Z",
        "updatedAt" : "2019-10-10T21:49:50Z",
        "lastEditedBy" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "tags" : [
        ]
      },
      {
        "id" : "3db89ddd-4ede-4fa1-b823-0dd900c486ff",
        "parentId" : "ce59d0a4-a1fd-4897-a49b-394637d03e95",
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "-1\r\nErrorf will already put an E in the log line. `while` is implied.",
        "createdAt" : "2019-10-10T21:38:47Z",
        "updatedAt" : "2019-10-10T21:49:50Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      },
      {
        "id" : "2ac6ef4c-3feb-4e79-a2f0-d925eda6127c",
        "parentId" : "ce59d0a4-a1fd-4897-a49b-394637d03e95",
        "authorId" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "body" : "I agree with Aldo on this one.",
        "createdAt" : "2019-10-10T21:47:49Z",
        "updatedAt" : "2019-10-10T21:49:50Z",
        "lastEditedBy" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "tags" : [
        ]
      }
    ],
    "commit" : "7429b0fe865af4ce5bb1ffb81154bf8fbfa8854a",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +101,105 @@\t\tmeta = s.(*PrioritiesStateData).Reference\n\t} else {\n\t\tklog.Errorf(\"reading key %q from CycleState, continuing without metadata: %v\", PrioritiesStateKey, err)\n\t}\n\treturn meta"
  },
  {
    "id" : "39663f8b-b269-4442-98b2-252110c103c9",
    "prId" : 83537,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/83537#pullrequestreview-299028075",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c351e1c1-6a90-4561-bd54-a6446b8f9a9c",
        "parentId" : null,
        "authorId" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "body" : "In the future, when we finish the migration, we can move the fields of `PredicateMetadata` here? (right now it holds a pointer pointing to metaCopy)",
        "createdAt" : "2019-10-08T19:37:22Z",
        "updatedAt" : "2019-10-08T20:13:20Z",
        "lastEditedBy" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "tags" : [
        ]
      },
      {
        "id" : "3ad384e8-13c6-4881-8d89-5c49fffdea97",
        "parentId" : "c351e1c1-6a90-4561-bd54-a6446b8f9a9c",
        "authorId" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "body" : "This is holding a pointer to the PredicatesMetadata that is currently used, note that we copy the CycleState every time we copy meta, and so they are one-to-one all the time.\r\n\r\nWe need this during phase 1 of the migration phase where we call the predicates/priorities directly and so we need the metadata. In phase 2, this will be removed, metadata producers will be moved to be prefilters, each will write its pre-computed data (e.g., evenpodsspread prefilter will generate and write evenpodsspread pre-computed data), see this PR: https://github.com/kubernetes/kubernetes/pull/83286",
        "createdAt" : "2019-10-08T20:17:42Z",
        "updatedAt" : "2019-10-08T20:36:33Z",
        "lastEditedBy" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "tags" : [
        ]
      },
      {
        "id" : "421ab332-2174-44ac-9cea-cd12e9cda08c",
        "parentId" : "c351e1c1-6a90-4561-bd54-a6446b8f9a9c",
        "authorId" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "body" : "SG. Thanks for explanation.",
        "createdAt" : "2019-10-08T20:26:35Z",
        "updatedAt" : "2019-10-08T20:26:36Z",
        "lastEditedBy" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "tags" : [
        ]
      }
    ],
    "commit" : "1751c251d828d6573aeaa3708294f967fdde845a",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +64,68 @@// to pass PredicateMetadata.\ntype PredicatesStateData struct {\n\tReference interface{}\n}\n"
  },
  {
    "id" : "af4bf480-0f8b-48eb-a416-f82da2057c48",
    "prId" : 83537,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/83537#pullrequestreview-299039187",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "84126a92-6d6e-4bd0-a560-97ec15e7d1f2",
        "parentId" : null,
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "why not `Reference predicates.PredicateMetadata`?\r\n\r\nAlternatively, you don't need a struct, just the type to which you can add methods. Because go :)\r\n\r\n```go\r\ntype PredicatesStateData predicates.PredicateMetadata\r\n\r\nfunc (p *PredicatesStateData) Clone() framework.StateData {\r\n    return p\r\n}\r\n```",
        "createdAt" : "2019-10-08T19:56:29Z",
        "updatedAt" : "2019-10-08T20:13:20Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      },
      {
        "id" : "7bec0dbc-9849-4321-8fba-2b993c6ea324",
        "parentId" : "84126a92-6d6e-4bd0-a560-97ec15e7d1f2",
        "authorId" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "body" : "I did that in the first iteration, but felt I should be consistent with how we deal with priorities metadata.",
        "createdAt" : "2019-10-08T20:35:13Z",
        "updatedAt" : "2019-10-08T20:35:19Z",
        "lastEditedBy" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "tags" : [
        ]
      },
      {
        "id" : "90b7356f-aadc-4782-80ec-2bd18c381956",
        "parentId" : "84126a92-6d6e-4bd0-a560-97ec15e7d1f2",
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "Can't we do the same for Priorities?",
        "createdAt" : "2019-10-08T20:41:48Z",
        "updatedAt" : "2019-10-08T20:41:48Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      },
      {
        "id" : "87216169-3cbb-47f1-a7b8-9989c3eafdc2",
        "parentId" : "84126a92-6d6e-4bd0-a560-97ec15e7d1f2",
        "authorId" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "body" : "no, it is just an ```interface{}```: the [metadata producer returns a pointer](https://github.com/kubernetes/kubernetes/blob/384e03ad92732ac35735e33a43a1391d180bb659/pkg/scheduler/algorithm/priorities/metadata.go#L58). in any case, it does not really matter how we do it.",
        "createdAt" : "2019-10-08T20:46:36Z",
        "updatedAt" : "2019-10-08T21:01:20Z",
        "lastEditedBy" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "tags" : [
        ]
      }
    ],
    "commit" : "1751c251d828d6573aeaa3708294f967fdde845a",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +64,68 @@// to pass PredicateMetadata.\ntype PredicatesStateData struct {\n\tReference interface{}\n}\n"
  },
  {
    "id" : "5f334522-f1ba-4558-a3fe-6aca03a26235",
    "prId" : 83537,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/83537#pullrequestreview-299036779",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7f75f414-8a3e-483a-99ef-6956258f07c5",
        "parentId" : null,
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "You didn't change `TaintToleration` plugin to make use of this metadata because it doesn't need it?",
        "createdAt" : "2019-10-08T20:00:28Z",
        "updatedAt" : "2019-10-08T20:13:20Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      },
      {
        "id" : "17c0dd5d-1b1d-4561-9778-02e028f9c6d6",
        "parentId" : "7f75f414-8a3e-483a-99ef-6956258f07c5",
        "authorId" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "body" : "it does not need it, but I think we should do that regardless in case the logic is modified before we get the chance to migrate it to run natively in the plugin. I will do that in a followup PR.",
        "createdAt" : "2019-10-08T20:29:33Z",
        "updatedAt" : "2019-10-08T20:35:19Z",
        "lastEditedBy" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "tags" : [
        ]
      },
      {
        "id" : "ad0e7e30-3ea9-4fdd-aaf6-d06e552ce2f4",
        "parentId" : "7f75f414-8a3e-483a-99ef-6956258f07c5",
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "sg",
        "createdAt" : "2019-10-08T20:42:18Z",
        "updatedAt" : "2019-10-08T20:42:18Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      }
    ],
    "commit" : "1751c251d828d6573aeaa3708294f967fdde845a",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +73,77 @@func (p *PredicatesStateData) Clone() framework.StateData {\n\treturn &PredicatesStateData{\n\t\tReference: p.Reference,\n\t}\n}"
  }
]