[
  {
    "id" : "8e631dd3-4576-45ed-9ff6-c214fc40ddb8",
    "prId" : 100020,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/100020#pullrequestreview-618392212",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "eaadfcc6-79a4-4532-a70c-c9de02086c9b",
        "parentId" : null,
        "authorId" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "body" : "Can you reword https://github.com/kubernetes/kubernetes/pull/100020#discussion_r590612561 here? As the reasons are not trivial, we'd better leave in-line comments here.",
        "createdAt" : "2021-03-22T17:33:29Z",
        "updatedAt" : "2021-04-07T03:14:34Z",
        "lastEditedBy" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "tags" : [
        ]
      },
      {
        "id" : "3f736ad4-b8d0-46b7-8e3c-b5260e232d4f",
        "parentId" : "eaadfcc6-79a4-4532-a70c-c9de02086c9b",
        "authorId" : "643b0db2-c9a2-4f0c-b721-4493eb21832f",
        "body" : "I've added inline comments as suggested with the latest push. Please let me know if anything else needs to be updated @Huang-Wei ",
        "createdAt" : "2021-03-23T09:52:14Z",
        "updatedAt" : "2021-04-07T03:14:34Z",
        "lastEditedBy" : "643b0db2-c9a2-4f0c-b721-4493eb21832f",
        "tags" : [
        ]
      }
    ],
    "commit" : "2cf284994f50356c4b8859ef6fe3459ea1a9a141",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +67,71 @@\t\t// - Add. An unschedulable Pod may fail due to violating pod-affinity constraints,\n\t\t// adding an assigned Pod may make it schedulable.\n\t\t{Resource: framework.Pod, ActionType: framework.All},\n\t\t{Resource: framework.Node, ActionType: framework.Add | framework.UpdateNodeLabel},\n\t}"
  },
  {
    "id" : "815dde89-2291-4692-85d9-16e3c65dcae6",
    "prId" : 98446,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/98446#pullrequestreview-585978010",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fd243d4b-5fa8-499d-970c-44aa557f49c4",
        "parentId" : null,
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "I still have the same question, do we really need to copy? The lister gives us a copy already, doesn't it?",
        "createdAt" : "2021-02-08T22:02:27Z",
        "updatedAt" : "2021-03-04T12:30:39Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      },
      {
        "id" : "1862113e-31d0-4c32-bf63-8e340dfe99c4",
        "parentId" : "fd243d4b-5fa8-499d-970c-44aa557f49c4",
        "authorId" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "body" : "I thought it gives us a reference to the underlying cached object.",
        "createdAt" : "2021-02-08T22:06:48Z",
        "updatedAt" : "2021-03-04T12:30:39Z",
        "lastEditedBy" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "tags" : [
        ]
      },
      {
        "id" : "b940c158-d874-4075-86c0-6c9102e5a235",
        "parentId" : "fd243d4b-5fa8-499d-970c-44aa557f49c4",
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "You were right, it's the same object ðŸ˜“ ",
        "createdAt" : "2021-02-08T22:20:50Z",
        "updatedAt" : "2021-03-04T12:30:39Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      }
    ],
    "commit" : "c7fef196b60856420ce3f0470acd1093ab1d9b5f",
    "line" : 91,
    "diffHunk" : "@@ -1,1 +113,117 @@\tif err == nil {\n\t\t// Create and return snapshot of the labels.\n\t\treturn labels.Merge(podNS.Labels, nil)\n\t}\n\tklog.ErrorS(err, \"getting namespace, assuming empty set of namespace labels\", \"namespace\", ns)"
  },
  {
    "id" : "773a8f63-286a-4aea-bcb7-38185bb84f29",
    "prId" : 86459,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/86459#pullrequestreview-335570656",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "731749cc-f88f-4e57-95f4-f25915eb0e97",
        "parentId" : null,
        "authorId" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "body" : "The mutex is never used. We defined local Mutexs in `getTPMapMatchingExistingAntiAffinity` and `getTPMapMatchingIncomingAffinityAntiAffinity`.",
        "createdAt" : "2019-12-20T23:37:13Z",
        "updatedAt" : "2019-12-20T23:43:50Z",
        "lastEditedBy" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "tags" : [
        ]
      },
      {
        "id" : "0c4743d1-c0ec-48c6-b257-74c22e248c67",
        "parentId" : "731749cc-f88f-4e57-95f4-f25915eb0e97",
        "authorId" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "body" : "it is actually used by the score logic.",
        "createdAt" : "2019-12-20T23:51:44Z",
        "updatedAt" : "2019-12-20T23:51:45Z",
        "lastEditedBy" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "tags" : [
        ]
      },
      {
        "id" : "906505d1-ea73-467f-9fe0-00b1d7ff8f85",
        "parentId" : "731749cc-f88f-4e57-95f4-f25915eb0e97",
        "authorId" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "body" : "oh, true... A nit is to update `getTPMapMatchingExistingAntiAffinity` and `getTPMapMatchingIncomingAffinityAntiAffinity` as a method receiver, so we can use `pl.Lock()` and `pl.Unlock()` consistently. But it's pre-existing, so up to you.",
        "createdAt" : "2019-12-20T23:59:37Z",
        "updatedAt" : "2019-12-21T00:01:50Z",
        "lastEditedBy" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "tags" : [
        ]
      }
    ],
    "commit" : "429448cb40211bd9c29651b73f151cadc482665b",
    "line" : 45,
    "diffHunk" : "@@ -1,1 +43,47 @@\tsharedLister          schedulerlisters.SharedLister\n\thardPodAffinityWeight int32\n\tsync.Mutex\n}\n"
  }
]