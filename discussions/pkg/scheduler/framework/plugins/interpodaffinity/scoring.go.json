[
  {
    "id" : "d82c62ba-871e-43dc-9ba0-8c00d060a6e6",
    "prId" : 94125,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/94125#pullrequestreview-471622279",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6b2b918a-64e5-43cd-bf60-87ac49910015",
        "parentId" : null,
        "authorId" : "521b6fc2-4b36-4594-8b5b-9d1e5bcc8759",
        "body" : "nit: update the comments to s/affinity/prefferred affinity/g?",
        "createdAt" : "2020-08-20T13:13:28Z",
        "updatedAt" : "2020-08-25T07:47:31Z",
        "lastEditedBy" : "521b6fc2-4b36-4594-8b5b-9d1e5bcc8759",
        "tags" : [
        ]
      },
      {
        "id" : "d64ada1f-a13f-42ba-954e-e41c793641ab",
        "parentId" : "6b2b918a-64e5-43cd-bf60-87ac49910015",
        "authorId" : "7ec1dfea-3d2a-4eea-8e24-34a7547407f9",
        "body" : "thanks, nice catch!",
        "createdAt" : "2020-08-20T13:37:53Z",
        "updatedAt" : "2020-08-25T07:47:31Z",
        "lastEditedBy" : "7ec1dfea-3d2a-4eea-8e24-34a7547407f9",
        "tags" : [
        ]
      }
    ],
    "commit" : "ccd8eb3b1b84b4573206768333b18f4eab42e460",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +182,186 @@\t\t// need to process pods with affinity in the node.\n\t\tpodsToProcess := nodeInfo.PodsWithAffinity\n\t\tif hasPreferredAffinityConstraints || hasPreferredAntiAffinityConstraints {\n\t\t\t// We need to process all the pods.\n\t\t\tpodsToProcess = nodeInfo.Pods"
  },
  {
    "id" : "63e923fe-2ef3-4d0e-97c8-cb0e277f6852",
    "prId" : 93660,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/93660#pullrequestreview-462816463",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "23e8a29b-3ade-4140-bbe7-d1d210d09df2",
        "parentId" : null,
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "nit: add comment:\r\n\r\n`This should have already failed on PreScore, unless extension point is disabled`",
        "createdAt" : "2020-08-06T19:22:16Z",
        "updatedAt" : "2020-08-07T16:17:57Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      },
      {
        "id" : "36c8a91e-8667-4f25-84a5-60c25e594fd5",
        "parentId" : "23e8a29b-3ade-4140-bbe7-d1d210d09df2",
        "authorId" : "0e2b7889-1224-444e-a36d-475f9edd0703",
        "body" : "Assuming you mean `PreFilter`? (this is prescore ðŸ™‚)\r\n\r\nAnd I agree it's unlikely someone disables the filter plugin and leaves the score plugin, but definitely possible which is why it doesn't hurt to handle the error in both.\r\n\r\nBased on https://github.com/kubernetes/kubernetes/pull/93660#discussion_r466634075, going to use `Error` from PreScore and `UnschedulableAndUnresolvable` from PreFilter. That sounds good to me",
        "createdAt" : "2020-08-06T19:30:06Z",
        "updatedAt" : "2020-08-07T16:17:57Z",
        "lastEditedBy" : "0e2b7889-1224-444e-a36d-475f9edd0703",
        "tags" : [
        ]
      },
      {
        "id" : "227d5986-02c8-4897-94cd-602cf579216b",
        "parentId" : "23e8a29b-3ade-4140-bbe7-d1d210d09df2",
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "sg!",
        "createdAt" : "2020-08-06T19:31:54Z",
        "updatedAt" : "2020-08-07T16:17:57Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      }
    ],
    "commit" : "012245c5b9c1e535067e0ee3c39a00d3b8d7f253",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +162,166 @@\n\tpodInfo := framework.NewPodInfo(pod)\n\tif podInfo.ParseError != nil {\n\t\t// Ideally we never reach here, because errors will be caught by PreFilter\n\t\treturn framework.NewStatus(framework.Error, fmt.Sprintf(\"parsing pod: %+v\", podInfo.ParseError))"
  },
  {
    "id" : "a01d4408-fc0e-4e34-b29f-846db854fb1e",
    "prId" : 91084,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/91084#pullrequestreview-412242319",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b0e240dd-7f27-4833-bda9-7733e40b6861",
        "parentId" : null,
        "authorId" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "body" : "Mind replacing `` ` `` with `'` at this line and other lines?",
        "createdAt" : "2020-05-14T23:02:03Z",
        "updatedAt" : "2020-05-15T14:23:29Z",
        "lastEditedBy" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "tags" : [
        ]
      }
    ],
    "commit" : "087839daf7de4ca2a507022d962c90ec67da3d53",
    "line" : 99,
    "diffHunk" : "@@ -1,1 +95,99 @@\t// For every soft pod affinity term of <pod>, if <existingPod> matches the term,\n\t// increment <p.counts> for every node in the cluster with the same <term.TopologyKey>\n\t// value as that of <existingPods>`s node by the term`s weight.\n\ttopoScore.processTerms(state.podInfo.PreferredAffinityTerms, existingPod.Pod, existingPodNode, 1)\n"
  },
  {
    "id" : "09740eef-1586-4b87-9389-a6a4a0026188",
    "prId" : 91084,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/91084#pullrequestreview-412251079",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "76f3bfe5-8940-4c6a-b620-ae9c28344013",
        "parentId" : null,
        "authorId" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "body" : "nit: L201 may be non-trivial, and hence that could be a waste when L205 is satisfied. How about switch to:\r\n\r\n```go\r\n\tvar allNodes []*framework.NodeInfo\r\n\tvar err error\r\n\t// Unless the pod being scheduled has affinity terms, we only\r\n\t// need to process nodes hosting pods with affinity.\r\n\tif hasAffinityConstraints || hasAntiAffinityConstraints {\r\n\t\tallNodes, err = pl.sharedLister.NodeInfos().List()\r\n\t\tif err != nil {\r\n\t\t\tframework.NewStatus(framework.Error, fmt.Sprintf(\"get all nodes from shared lister error, err: %v\", err))\r\n\t\t}\r\n\t} else {\r\n\t\tallNodes, err = pl.sharedLister.NodeInfos().HavePodsWithAffinityList()\r\n\t\tif err != nil {\r\n\t\t\tframework.NewStatus(framework.Error, fmt.Sprintf(\"get pods with affinity list error, err: %v\", err))\r\n\t\t}\r\n\t}\r\n```",
        "createdAt" : "2020-05-14T23:26:24Z",
        "updatedAt" : "2020-05-15T14:23:29Z",
        "lastEditedBy" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "tags" : [
        ]
      }
    ],
    "commit" : "087839daf7de4ca2a507022d962c90ec67da3d53",
    "line" : 205,
    "diffHunk" : "@@ -1,1 +159,163 @@\t\t}\n\t}\n\n\tstate := &preScoreState{\n\t\ttopologyScore: make(map[string]map[string]int64),"
  },
  {
    "id" : "65410818-551f-4c2e-95f0-86c41a534463",
    "prId" : 91062,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/91062#pullrequestreview-411248097",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ece46641-fe42-4c39-9c91-1ba31a406288",
        "parentId" : null,
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "I assume this is pending to be cached in a followup PR?",
        "createdAt" : "2020-05-13T19:25:40Z",
        "updatedAt" : "2020-05-14T14:31:05Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      },
      {
        "id" : "e1b3c253-90ad-48de-a47b-9c595ac7e6f1",
        "parentId" : "ece46641-fe42-4c39-9c91-1ba31a406288",
        "authorId" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "body" : "yup, this is in the score PR, will send it right after this one gets merged.",
        "createdAt" : "2020-05-13T19:53:42Z",
        "updatedAt" : "2020-05-14T14:31:05Z",
        "lastEditedBy" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "tags" : [
        ]
      }
    ],
    "commit" : "5e0211c72de097b931296f5a08c6a94945548312",
    "line" : 3,
    "diffHunk" : "@@ -1,1 +48,52 @@\n// A \"processed\" representation of v1.WeightedAffinityTerm.\ntype weightedAffinityTerm struct {\n\tframework.AffinityTerm\n\tweight int32"
  }
]