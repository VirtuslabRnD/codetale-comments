[
  {
    "id" : "fa702259-445a-4717-86e1-0ceadf86ec80",
    "prId" : 87250,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/87250#pullrequestreview-420129422",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e167a5aa-484b-4b9c-81a8-1f40d9f16b56",
        "parentId" : null,
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "remove the now unused (I assume) ErrReasonNotMatch variable.",
        "createdAt" : "2020-01-15T17:54:02Z",
        "updatedAt" : "2020-01-23T21:21:30Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      },
      {
        "id" : "b8db96da-11e2-4713-ac54-63b14f224ae8",
        "parentId" : "e167a5aa-484b-4b9c-81a8-1f40d9f16b56",
        "authorId" : "7f5d2b15-6910-4f61-9486-f3e1cd38bcdf",
        "body" : "it's actually used in a generic_scheduler test, (the reason string isn't being compared against though)",
        "createdAt" : "2020-01-15T20:54:44Z",
        "updatedAt" : "2020-01-23T21:21:30Z",
        "lastEditedBy" : "7f5d2b15-6910-4f61-9486-f3e1cd38bcdf",
        "tags" : [
        ]
      },
      {
        "id" : "663c59bf-5412-4ea9-b440-8d28fd1e6917",
        "parentId" : "e167a5aa-484b-4b9c-81a8-1f40d9f16b56",
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "oops, I think you forgot about this.",
        "createdAt" : "2020-01-15T20:55:10Z",
        "updatedAt" : "2020-01-23T21:21:30Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      },
      {
        "id" : "eadc7ad0-b9a4-40e6-b5dc-75d575b049f2",
        "parentId" : "e167a5aa-484b-4b9c-81a8-1f40d9f16b56",
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "Uhm... it's wrong that we are using these error messages for no reason if they are not being checked. And at least for the purpose of `TestNodesWherePreemptionMigthHelp`, they don't need to be checked. We should remove those usages and unexport the variables, if possible.\r\n\r\nAnother good follow up PR :)",
        "createdAt" : "2020-01-15T21:00:02Z",
        "updatedAt" : "2020-01-23T21:21:30Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      },
      {
        "id" : "bfe1f4c1-c68f-4907-9f50-cdc869a20350",
        "parentId" : "e167a5aa-484b-4b9c-81a8-1f40d9f16b56",
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "@starizard any chance you can clean that up?",
        "createdAt" : "2020-05-28T13:52:56Z",
        "updatedAt" : "2020-05-28T13:52:56Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      }
    ],
    "commit" : "22bd26fefb9e5f66cfd39ac8feed87e2c542ada7",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +73,77 @@\t}\n\n\terrReason := fmt.Sprintf(\"node(s) had taint {%s: %s}, that the pod didn't tolerate\",\n\t\ttaint.Key, taint.Value)\n\treturn framework.NewStatus(framework.UnschedulableAndUnresolvable, errReason)"
  },
  {
    "id" : "6d5b4eaa-10b9-49cc-9fb3-ae0b93c66f1d",
    "prId" : 86979,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/86979#pullrequestreview-340620696",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c7461507-0645-412b-b9d2-7e1ce688a4c6",
        "parentId" : null,
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "do you think we should be getting rid of these now?",
        "createdAt" : "2020-01-09T15:50:39Z",
        "updatedAt" : "2020-01-09T15:51:41Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      }
    ],
    "commit" : "50b697bacb5c9a2780123a8022250756e8d8df33",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +54,58 @@// Filter invoked at the filter extension point.\nfunc (pl *TaintToleration) Filter(ctx context.Context, state *framework.CycleState, pod *v1.Pod, nodeInfo *nodeinfo.NodeInfo) *framework.Status {\n\tif nodeInfo == nil || nodeInfo.Node() == nil {\n\t\treturn framework.NewStatus(framework.Error, \"invalid nodeInfo\")\n\t}"
  },
  {
    "id" : "2ebf80e3-6a32-461e-b2a4-e16fcb6456b3",
    "prId" : 86979,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/86979#pullrequestreview-340620696",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "13f60abe-ad7e-4598-91d7-c9225bd0d4f0",
        "parentId" : null,
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "super nit: `pluginshelper`",
        "createdAt" : "2020-01-09T15:51:26Z",
        "updatedAt" : "2020-01-09T15:51:41Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      }
    ],
    "commit" : "50b697bacb5c9a2780123a8022250756e8d8df33",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +24,28 @@\t\"k8s.io/apimachinery/pkg/runtime\"\n\tv1helper \"k8s.io/kubernetes/pkg/apis/core/v1/helper\"\n\tpluginhelper \"k8s.io/kubernetes/pkg/scheduler/framework/plugins/helper\"\n\tframework \"k8s.io/kubernetes/pkg/scheduler/framework/v1alpha1\"\n\t\"k8s.io/kubernetes/pkg/scheduler/nodeinfo\""
  },
  {
    "id" : "767e903d-48a3-4a2c-ae4e-5ca586c6d341",
    "prId" : 83601,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/83601#pullrequestreview-300187447",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ee5af70a-7949-4ba1-a1f9-9acd057d9a4c",
        "parentId" : null,
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "I think it's worth adding a comment saying that this predicate doesn't use the metadata. Same for NormalizeScore below.",
        "createdAt" : "2019-10-10T16:04:25Z",
        "updatedAt" : "2019-10-10T21:49:50Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      },
      {
        "id" : "0b3c5e2b-6ebf-4382-bf12-4c9f1f25b1f1",
        "parentId" : "ee5af70a-7949-4ba1-a1f9-9acd057d9a4c",
        "authorId" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "body" : "done.",
        "createdAt" : "2019-10-10T16:09:52Z",
        "updatedAt" : "2019-10-10T21:49:50Z",
        "lastEditedBy" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "tags" : [
        ]
      }
    ],
    "commit" : "7429b0fe865af4ce5bb1ffb81154bf8fbfa8854a",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +46,50 @@\n// Filter invoked at the filter extension point.\nfunc (pl *TaintToleration) Filter(state *framework.CycleState, pod *v1.Pod, nodeInfo *nodeinfo.NodeInfo) *framework.Status {\n\t// Note that PodToleratesNodeTaints doesn't use predicate metadata, hence passing nil here.\n\t_, reasons, err := predicates.PodToleratesNodeTaints(pod, nil, nodeInfo)"
  }
]