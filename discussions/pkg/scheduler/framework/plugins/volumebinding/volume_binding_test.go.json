[
  {
    "id" : "2da7540b-8a60-4c62-9d25-f22beb7abeb1",
    "prId" : 95541,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/95541#pullrequestreview-507959005",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8e9af107-fd94-4278-9359-2f0c758b607a",
        "parentId" : null,
        "authorId" : "e4e7c71f-23b5-4203-b65d-3f5f3c503b64",
        "body" : "when PVCs referenced by the pod do not exist, the plugin returns `Unschedulable` status. these two tests verify it.",
        "createdAt" : "2020-10-14T02:55:50Z",
        "updatedAt" : "2020-11-05T02:28:52Z",
        "lastEditedBy" : "e4e7c71f-23b5-4203-b65d-3f5f3c503b64",
        "tags" : [
        ]
      }
    ],
    "commit" : "0961891a7afc54d07ce0d02c9127f67d541de33c",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +154,158 @@\t\t\t},\n\t\t\twantPreFilterStatus: framework.NewStatus(framework.UnschedulableAndUnresolvable, `persistentvolumeclaim \"pvc-b\" not found`),\n\t\t},\n\t\t{\n\t\t\tname: \"immediate claims not bound\","
  },
  {
    "id" : "102aaacb-eba1-4abd-bd1e-c2db3ab04088",
    "prId" : 93629,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/93629#pullrequestreview-459683770",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c27c03dc-41be-45ee-b126-d1bb8957c211",
        "parentId" : null,
        "authorId" : "e4e7c71f-23b5-4203-b65d-3f5f3c503b64",
        "body" : "see explanation here: https://github.com/kubernetes/kubernetes/issues/93009#issuecomment-667527689\r\n\r\nIn my understanding, with a real client and the real API Server events should not be lost while objects are created in the middle. However, with the fake client, events may be lost in testing.",
        "createdAt" : "2020-08-01T13:03:34Z",
        "updatedAt" : "2020-08-02T23:06:20Z",
        "lastEditedBy" : "e4e7c71f-23b5-4203-b65d-3f5f3c503b64",
        "tags" : [
        ]
      },
      {
        "id" : "01dbc527-ce00-4f9a-95bd-ec7184cc826d",
        "parentId" : "c27c03dc-41be-45ee-b126-d1bb8957c211",
        "authorId" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "body" : "> However, with the fake client, events may be lost in testing.\r\n\r\nIf you need to act upon the API change events on a UT, I think you have to try prepend/add reactor for a fake client. You can search:\r\n\r\n- client.PrependReactor()\r\n- client.PrependWatchReactor()\r\n\r\nHowever, if the test just relies on the a fixed state of all initialized API objects (i think it's the case, correct me if I'm wrong), the current change (start informerFactory and wait for its cache to be synced) should be good enough.",
        "createdAt" : "2020-08-02T05:17:15Z",
        "updatedAt" : "2020-08-02T23:06:20Z",
        "lastEditedBy" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "tags" : [
        ]
      },
      {
        "id" : "5ef4fd59-98c8-48f9-972e-aec67fbbd4f7",
        "parentId" : "c27c03dc-41be-45ee-b126-d1bb8957c211",
        "authorId" : "e4e7c71f-23b5-4203-b65d-3f5f3c503b64",
        "body" : "> However, if the test just relies on the a fixed state of all initialized API objects\r\n\r\nyes, it is ",
        "createdAt" : "2020-08-02T22:30:36Z",
        "updatedAt" : "2020-08-02T23:06:20Z",
        "lastEditedBy" : "e4e7c71f-23b5-4203-b65d-3f5f3c503b64",
        "tags" : [
        ]
      }
    ],
    "commit" : "96d0408a894ecb983af642dd648eda18fccabe58",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +267,271 @@\n\t\t\tt.Log(\"Start informer factory after initialization\")\n\t\t\tinformerFactory.Start(ctx.Done())\n\n\t\t\tt.Log(\"Wait for all started informers' cache were synced\")"
  },
  {
    "id" : "8bf1ec47-da75-4c16-97b2-c8e95244260b",
    "prId" : 91775,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/91775#pullrequestreview-426299470",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "77fd9482-9e1a-4c9e-9a33-8c35905195d3",
        "parentId" : null,
        "authorId" : "e4e7c71f-23b5-4203-b65d-3f5f3c503b64",
        "body" : "renamed `nothing` to `pod has not pvcs`, the pod can be skipped if it does not use PVCs ",
        "createdAt" : "2020-06-08T14:28:32Z",
        "updatedAt" : "2020-06-12T02:00:32Z",
        "lastEditedBy" : "e4e7c71f-23b5-4203-b65d-3f5f3c503b64",
        "tags" : [
        ]
      }
    ],
    "commit" : "814a6f2acd5338976dfbda0928344a5093b6728a",
    "line" : 116,
    "diffHunk" : "@@ -1,1 +113,117 @@\t}{\n\t\t{\n\t\t\tname: \"pod has not pvcs\",\n\t\t\tpod:  makePod(\"pod-a\", nil),\n\t\t\tnode: &v1.Node{},"
  },
  {
    "id" : "c9ab2a33-aacf-4087-8dea-c219f9f60eaa",
    "prId" : 91775,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/91775#pullrequestreview-426299678",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c6db6933-4665-4e3e-a950-d44578d49a18",
        "parentId" : null,
        "authorId" : "e4e7c71f-23b5-4203-b65d-3f5f3c503b64",
        "body" : "newly added case",
        "createdAt" : "2020-06-08T14:28:45Z",
        "updatedAt" : "2020-06-12T02:00:32Z",
        "lastEditedBy" : "e4e7c71f-23b5-4203-b65d-3f5f3c503b64",
        "tags" : [
        ]
      }
    ],
    "commit" : "814a6f2acd5338976dfbda0928344a5093b6728a",
    "line" : 142,
    "diffHunk" : "@@ -1,1 +138,142 @@\t\t},\n\t\t{\n\t\t\tname: \"immediate claims not bound\",\n\t\t\tpod:  makePod(\"pod-a\", []string{\"pvc-a\"}),\n\t\t\tnode: &v1.Node{},"
  },
  {
    "id" : "f7bce90e-73b3-43c3-afc4-dadf37343124",
    "prId" : 91775,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/91775#pullrequestreview-426300797",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "affe13f5-2a91-4c7c-812f-48b898d2de70",
        "parentId" : null,
        "authorId" : "e4e7c71f-23b5-4203-b65d-3f5f3c503b64",
        "body" : "`predicate error` is removed, and add two new tests which will return internal errors",
        "createdAt" : "2020-06-08T14:29:57Z",
        "updatedAt" : "2020-06-12T02:00:32Z",
        "lastEditedBy" : "e4e7c71f-23b5-4203-b65d-3f5f3c503b64",
        "tags" : [
        ]
      }
    ],
    "commit" : "814a6f2acd5338976dfbda0928344a5093b6728a",
    "line" : 234,
    "diffHunk" : "@@ -1,1 +210,214 @@\t\t},\n\t\t{\n\t\t\tname: \"pv not found\",\n\t\t\tpod:  makePod(\"pod-a\", []string{\"pvc-a\"}),\n\t\t\tnode: &v1.Node{},"
  },
  {
    "id" : "b375a4c9-5365-4442-a589-389019d346d0",
    "prId" : 86530,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/86530#pullrequestreview-335857216",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4f32a344-588a-4679-9999-59738dea379a",
        "parentId" : null,
        "authorId" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "body" : "wantStatus: framework.NewStatus(\r\n    framework.UnschedulableAndUnresolvable,\r\n    predicates.ErrVolumeNodeConflict.GetReason(), \r\n    predicates.ErrVolumeBindConflict.GetReason()),",
        "createdAt" : "2019-12-23T13:23:32Z",
        "updatedAt" : "2019-12-23T13:58:24Z",
        "lastEditedBy" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "tags" : [
        ]
      }
    ],
    "commit" : "83408acf757e9c0298004e71a31b5fd0a9358540",
    "line" : 84,
    "diffHunk" : "@@ -1,1 +82,86 @@\t\t\tvolumeBinderConfig: &volumescheduling.FakeVolumeBinderConfig{\n\t\t\t\tFindUnboundSatsified: false,\n\t\t\t\tFindBoundSatsified:   false,\n\t\t\t},\n\t\t\twantStatus: framework.NewStatus(framework.UnschedulableAndUnresolvable, predicates.ErrVolumeNodeConflict.GetReason(),"
  }
]