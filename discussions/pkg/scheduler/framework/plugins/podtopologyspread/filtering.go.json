[
  {
    "id" : "75a3a25b-3cd8-43a2-b57e-341c7be3a4fc",
    "prId" : 89665,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/89665#pullrequestreview-384254211",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3edd9a36-654c-4042-85e3-91c9eae69c25",
        "parentId" : null,
        "authorId" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "body" : "I recalled I did the same attempt but seemed the perf didn't improve much. I will run the benchmark later.",
        "createdAt" : "2020-03-31T17:13:43Z",
        "updatedAt" : "2020-03-31T19:48:49Z",
        "lastEditedBy" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "tags" : [
        ]
      }
    ],
    "commit" : "93fc02cf54021dcb3ff9fe9644842ccdbadb5ee7",
    "line" : 77,
    "diffHunk" : "@@ -1,1 +226,230 @@\t\tTpPairToMatchNum:     make(map[topologyPair]*int32, sizeHeuristic(len(allNodes), constraints)),\n\t}\n\tfor _, n := range allNodes {\n\t\tnode := n.Node()\n\t\tif node == nil {"
  },
  {
    "id" : "3badf768-7e2f-4a0f-817f-6c7efbce6863",
    "prId" : 89665,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/89665#pullrequestreview-385045544",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dba852ce-cfa5-486a-be05-a60bb11aafd8",
        "parentId" : null,
        "authorId" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "body" : "I believe we should also consider the performance of Clone() as Clone() is used a lot during preemption. Could you benchmark it? (we can tolerate slight perf downgrade, but not much)\r\n\r\nI asked this as instantiating a pointer is expensive than we think - we used to hit some regression when submitting performance PRs.",
        "createdAt" : "2020-03-31T17:25:38Z",
        "updatedAt" : "2020-03-31T19:48:49Z",
        "lastEditedBy" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "tags" : [
        ]
      },
      {
        "id" : "1642be39-ca15-4cd6-8b50-bf1926298dda",
        "parentId" : "dba852ce-cfa5-486a-be05-a60bb11aafd8",
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "I got this:\r\n\r\n```\r\nmaster\r\n\r\nBenchmarkFilter/1000nodes/single-constraint-zone/Clone-56   \t  269688\t      4880 ns/op\r\nBenchmarkFilter/1000nodes/single-constraint-node/Clone-56   \t    4214\t    295056 ns/op\r\nBenchmarkFilter/1000nodes/two-Constraints-zone-node/Clone-56         \t    3637\t    305096 ns/op\r\n\r\nPR\r\n\r\nBenchmarkFilter/1000nodes/single-constraint-zone/Clone-56   \t  254336\t      5195 ns/op\r\nBenchmarkFilter/1000nodes/single-constraint-node/Clone-56   \t    3175\t    380806 ns/op\r\nBenchmarkFilter/1000nodes/two-Constraints-zone-node/Clone-56         \t    2961\t    369687 ns/op\r\n```\r\n\r\nWhich translates to 23% slower for 1000 nodes. Given that we are still talking about less than 1ms, I'm ok with this. If you agree, I'll include this numbers in the PR description.",
        "createdAt" : "2020-03-31T19:17:11Z",
        "updatedAt" : "2020-03-31T19:48:49Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      },
      {
        "id" : "9a70d2bd-83c3-401c-92ea-b17616dd952c",
        "parentId" : "dba852ce-cfa5-486a-be05-a60bb11aafd8",
        "authorId" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "body" : "I'm fine with it - leave a comment in the code is also fine.",
        "createdAt" : "2020-03-31T19:38:06Z",
        "updatedAt" : "2020-03-31T19:48:49Z",
        "lastEditedBy" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "tags" : [
        ]
      }
    ],
    "commit" : "93fc02cf54021dcb3ff9fe9644842ccdbadb5ee7",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +70,74 @@\t\tcopyPair := topologyPair{key: tpPair.key, value: tpPair.value}\n\t\tcopyCount := *matchNum\n\t\tcopy.TpPairToMatchNum[copyPair] = &copyCount\n\t}\n\treturn &copy"
  }
]