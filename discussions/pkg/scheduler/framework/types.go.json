[
  {
    "id" : "47e06172-5c09-464a-a45b-62daa71323da",
    "prId" : 101276,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/101276#pullrequestreview-639942483",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fe23cd48-7743-4143-a562-4d7a75cb58b5",
        "parentId" : null,
        "authorId" : "0e2b7889-1224-444e-a36d-475f9edd0703",
        "body" : "We could use `math.Max` (though we would need to cast to float64 then back), so that's not totally a blocker on this for me",
        "createdAt" : "2021-04-20T12:36:24Z",
        "updatedAt" : "2021-04-20T12:36:33Z",
        "lastEditedBy" : "0e2b7889-1224-444e-a36d-475f9edd0703",
        "tags" : [
        ]
      },
      {
        "id" : "fd9377b3-e902-4a3e-a5ca-e1ee78b6f5a0",
        "parentId" : "fe23cd48-7743-4143-a562-4d7a75cb58b5",
        "authorId" : "7f9dfb06-9e7c-49e7-b86b-57d7af138f89",
        "body" : "Thanks a lot for your review and suggestion!\r\nMy personal habit is to write a `max` or `min` function directly for simple types ([aha, I was influenced by this article ^-^](https://mrekucci.blogspot.com/2015/07/dont-abuse-mathmax-mathmin.html)).",
        "createdAt" : "2021-04-20T13:23:12Z",
        "updatedAt" : "2021-04-20T13:23:12Z",
        "lastEditedBy" : "7f9dfb06-9e7c-49e7-b86b-57d7af138f89",
        "tags" : [
        ]
      }
    ],
    "commit" : "c1fd8390e5d8403f23cbbf295672602fc5295e87",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +774,778 @@}\n\nfunc max(a, b int64) int64 {\n\tif a >= b {\n\t\treturn a"
  },
  {
    "id" : "75011afd-4a8b-44ac-8bfa-41869bb20ce8",
    "prId" : 100003,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/100003#pullrequestreview-698040934",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bf6c4e5f-0d0c-4150-ab17-3dbc5a292dbb",
        "parentId" : null,
        "authorId" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "body" : "we don't have event handlers for those in https://github.com/kubernetes/kubernetes/blob/master/pkg/scheduler/eventhandlers.go",
        "createdAt" : "2021-03-11T15:34:52Z",
        "updatedAt" : "2021-04-29T12:06:24Z",
        "lastEditedBy" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "tags" : [
        ]
      },
      {
        "id" : "553b908e-4b14-431c-a743-4f1d96281790",
        "parentId" : "bf6c4e5f-0d0c-4150-ab17-3dbc5a292dbb",
        "authorId" : "e4e7c71f-23b5-4203-b65d-3f5f3c503b64",
        "body" : "fixed in the new commit",
        "createdAt" : "2021-07-02T10:16:31Z",
        "updatedAt" : "2021-07-02T10:17:24Z",
        "lastEditedBy" : "e4e7c71f-23b5-4203-b65d-3f5f3c503b64",
        "tags" : [
        ]
      }
    ],
    "commit" : "83ee392ed42732d377b766bcbd77d6ccb28234fb",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +71,75 @@\tCSINode               GVK = \"storage.k8s.io/CSINode\"\n\tCSIDriver             GVK = \"storage.k8s.io/CSIDriver\"\n\tCSIStorageCapacity    GVK = \"storage.k8s.io/CSIStorageCapacity\"\n\tWildCard              GVK = \"*\"\n)"
  },
  {
    "id" : "fe472c38-f01a-48cb-88a0-3d56e1a26319",
    "prId" : 98241,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/98241#pullrequestreview-586262952",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2283aca3-3221-41fd-8dd6-39048165b560",
        "parentId" : null,
        "authorId" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "body" : "can we avoid redefining those constants? surely they are defined somewhere in k8s?",
        "createdAt" : "2021-02-09T00:44:59Z",
        "updatedAt" : "2021-03-03T15:20:46Z",
        "lastEditedBy" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "tags" : [
        ]
      },
      {
        "id" : "d28023fa-e596-4167-b9af-097afe6faf61",
        "parentId" : "2283aca3-3221-41fd-8dd6-39048165b560",
        "authorId" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "body" : "Unfortunately no, at least for literals.\r\n\r\nBTW: I tried to pass in `&v1.Pod{}` and let its GVK auto-detected (). But that needs to be associated with a complete scheme registration, which may be an overkill and also doesn't work in UT/Integration test. I also [asked](https://kubernetes.slack.com/archives/C0EG7JC6T/p1610753647014900) in API machinery slack, no luck on this direction.",
        "createdAt" : "2021-02-09T07:57:32Z",
        "updatedAt" : "2021-03-03T15:20:46Z",
        "lastEditedBy" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "tags" : [
        ]
      }
    ],
    "commit" : "6fdb1a8439aa22050e9e30fb9872b1fad92504df",
    "line" : 29,
    "diffHunk" : "@@ -1,1 +66,70 @@// Constants for GVKs.\nconst (\n\tPod                   GVK = \"Pod\"\n\tNode                  GVK = \"Node\"\n\tPersistentVolume      GVK = \"PersistentVolume\""
  },
  {
    "id" : "9e83d836-9c7d-4fb4-b3f8-560915b335e6",
    "prId" : 98241,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/98241#pullrequestreview-587197092",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "02acc3cd-8cb2-4dca-9160-8d5247cb7109",
        "parentId" : null,
        "authorId" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "body" : "all ones we registered event handlers for? or literally everything?",
        "createdAt" : "2021-02-09T14:34:00Z",
        "updatedAt" : "2021-03-03T15:20:46Z",
        "lastEditedBy" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "tags" : [
        ]
      },
      {
        "id" : "50db78dd-10f2-456f-9c0c-784a937c54d5",
        "parentId" : "02acc3cd-8cb2-4dca-9160-8d5247cb7109",
        "authorId" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "body" : "It can be used in both event handlers side and plugin side, a bit rare in plugin side though as plugin can choose to not implement `EventsToRegister()` to achieve the same goal.\r\n\r\n- In the event handlers side, it implies an enforced moving. For now, it's used to signal flushing unschedulable Pods upon timeout.\r\n- In the plugin side, it literally means to register all cluster events.",
        "createdAt" : "2021-02-10T02:16:10Z",
        "updatedAt" : "2021-03-03T15:20:46Z",
        "lastEditedBy" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "tags" : [
        ]
      }
    ],
    "commit" : "6fdb1a8439aa22050e9e30fb9872b1fad92504df",
    "line" : 39,
    "diffHunk" : "@@ -1,1 +76,80 @@)\n\n// WildCardEvent semantically matches all resources on all actions.\nvar WildCardEvent = ClusterEvent{Resource: WildCard, ActionType: All}\n"
  },
  {
    "id" : "2c14c893-6296-43cc-8002-7f56aa1568e3",
    "prId" : 98134,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/98134#pullrequestreview-576435976",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0aae585a-3d6d-4537-8b7c-102b379cfa65",
        "parentId" : null,
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "Add pod here and below",
        "createdAt" : "2021-01-26T15:00:45Z",
        "updatedAt" : "2021-01-26T15:00:46Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      }
    ],
    "commit" : "d59d10762f8bc21164a2401fb49b02abdcee31e4",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +563,567 @@\t\tk2, err := GetPodKey(s[i].Pod)\n\t\tif err != nil {\n\t\t\tklog.ErrorS(err, \"Cannot get pod key\")\n\t\t\tcontinue\n\t\t}"
  },
  {
    "id" : "717e3ccf-f885-43ac-811d-845faf155367",
    "prId" : 98041,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/98041#pullrequestreview-575748239",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3432982d-8b72-4f4c-bdf4-023a52165fa7",
        "parentId" : null,
        "authorId" : "1fde46ca-8fae-4b82-9978-f266fdae6ffe",
        "body" : "not sure if we need to log some info of the `FailedPlugins`?",
        "createdAt" : "2021-01-25T07:50:37Z",
        "updatedAt" : "2021-01-28T20:21:10Z",
        "lastEditedBy" : "1fde46ca-8fae-4b82-9978-f266fdae6ffe",
        "tags" : [
        ]
      },
      {
        "id" : "abadd7a0-2876-406b-91e4-b694d0da6fe1",
        "parentId" : "3432982d-8b72-4f4c-bdf4-023a52165fa7",
        "authorId" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "body" : "We have FitError.Error() dumping more readable message, and from that we can tell which plugins failed the Pod, so probably we don't need to dump the failedPlugins again.\r\n\r\n(Off the topic: it seems every call to FitError.Error() is iterating NodeToStatusMap, so maybe we should cache the processed msg to make it reusable)",
        "createdAt" : "2021-01-25T19:43:02Z",
        "updatedAt" : "2021-01-28T20:21:10Z",
        "lastEditedBy" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "tags" : [
        ]
      }
    ],
    "commit" : "f8a6bdb044c61a6bcd2abb7775f6c0b947ddfe7e",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +113,117 @@func (f *FitError) Error() string {\n\treasons := make(map[string]int)\n\tfor _, status := range f.Diagnosis.NodeToStatusMap {\n\t\tfor _, reason := range status.Reasons() {\n\t\t\treasons[reason]++"
  },
  {
    "id" : "61368109-6099-42e6-9509-fa2b1bb635c4",
    "prId" : 95069,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/95069#pullrequestreview-507597421",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "153b46b9-72ad-4370-8867-b9c0594f15e3",
        "parentId" : null,
        "authorId" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "body" : "this file should have been `git mv`ed to preserve the history.",
        "createdAt" : "2020-10-08T15:41:27Z",
        "updatedAt" : "2020-10-13T02:17:13Z",
        "lastEditedBy" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "tags" : [
        ]
      },
      {
        "id" : "c18dfb4b-57a4-4a40-aa09-40e17b3f7f25",
        "parentId" : "153b46b9-72ad-4370-8867-b9c0594f15e3",
        "authorId" : "a99cf676-6fa9-44b1-9931-2be1d77b5486",
        "body" : "also did `git mv` to all the other files in v1alpha1/",
        "createdAt" : "2020-10-09T14:44:36Z",
        "updatedAt" : "2020-10-13T02:17:13Z",
        "lastEditedBy" : "a99cf676-6fa9-44b1-9931-2be1d77b5486",
        "tags" : [
        ]
      },
      {
        "id" : "60c62e60-d745-4f7b-b52b-2939b02750cf",
        "parentId" : "153b46b9-72ad-4370-8867-b9c0594f15e3",
        "authorId" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "body" : "this is still not `git mv`ed, we should be able to see the history if it was. ",
        "createdAt" : "2020-10-09T15:12:48Z",
        "updatedAt" : "2020-10-13T02:17:13Z",
        "lastEditedBy" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "tags" : [
        ]
      },
      {
        "id" : "d6a12b6b-70b6-4334-9d98-ff4db6770ce0",
        "parentId" : "153b46b9-72ad-4370-8867-b9c0594f15e3",
        "authorId" : "a99cf676-6fa9-44b1-9931-2be1d77b5486",
        "body" : "@ahg-g I just saw this comment. Is this still an issue?",
        "createdAt" : "2020-10-10T10:14:54Z",
        "updatedAt" : "2020-10-13T02:17:13Z",
        "lastEditedBy" : "a99cf676-6fa9-44b1-9931-2be1d77b5486",
        "tags" : [
        ]
      },
      {
        "id" : "41191828-cdb6-4732-8a37-71d328946a51",
        "parentId" : "153b46b9-72ad-4370-8867-b9c0594f15e3",
        "authorId" : "a99cf676-6fa9-44b1-9931-2be1d77b5486",
        "body" : "I tried to verify with \r\n\r\n```\r\nkubernetes$ git log --stat -M\r\ncommit f2777eed9a740382bbb90cc3e0440c3e6319eaf9 (HEAD -> split-scheduler, origin/split-scheduler)\r\nAuthor: Ali <aliyfarah9@gmail.com>\r\nDate:   Sat Oct 10 01:41:44 2020 +1100\r\n\r\n    Move scheduler interface to pkg/scheduler/framework\r\n\r\n kind-config.yaml                                                                   |  28 +++\r\n pkg/scheduler/BUILD                                                                |   4 +-\r\n pkg/scheduler/core/BUILD                                                           |   4 +-\r\n pkg/scheduler/core/extender.go                                                     |   2 +-\r\n pkg/scheduler/core/extender_test.go                                                |   2 +-\r\n pkg/scheduler/core/generic_scheduler.go                                            |   2 +-\r\n pkg/scheduler/core/generic_scheduler_test.go                                       |  14 +-\r\n pkg/scheduler/factory.go                                                           |   2 +-\r\n pkg/scheduler/factory_test.go                                                      |   2 +-\r\n pkg/scheduler/framework/BUILD                                                      |  50 ++++\r\n pkg/scheduler/framework/{v1alpha1 => }/cycle_state.go                              |   2 +-\r\n pkg/scheduler/framework/{v1alpha1 => }/cycle_state_test.go                         |   2 +-\r\n pkg/scheduler/framework/{v1alpha1 => }/extender.go                                 |   2 +-\r\n pkg/scheduler/framework/{v1alpha1 => }/fake/BUILD                                  |   4 +-\r\n pkg/scheduler/framework/{v1alpha1 => }/fake/listers.go                             |   2 +-\r\n pkg/scheduler/framework/{v1alpha1 => }/interface.go                                |  10 +-\r\n pkg/scheduler/framework/{v1alpha1 => }/interface_test.go                           |   2 +-\r\n pkg/scheduler/framework/{v1alpha1 => }/listers.go                                  |   2 +-\r\n[...]\r\n pkg/scheduler/framework/{v1alpha1 => }/types_test.go                               |   2 +-\r\n[...]\r\n\r\n```\r\n\r\nI assumed the arrows ( =>) means it was moved. ",
        "createdAt" : "2020-10-10T10:17:42Z",
        "updatedAt" : "2020-10-13T02:17:13Z",
        "lastEditedBy" : "a99cf676-6fa9-44b1-9931-2be1d77b5486",
        "tags" : [
        ]
      },
      {
        "id" : "a3ad7dd8-1a74-4396-9452-f0a3a09fff2a",
        "parentId" : "153b46b9-72ad-4370-8867-b9c0594f15e3",
        "authorId" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "body" : "yes (=>) means moved, but I don't see the types.go in the list, it would also show up here in the diff if it was actually moved.",
        "createdAt" : "2020-10-13T11:57:50Z",
        "updatedAt" : "2020-10-13T11:58:12Z",
        "lastEditedBy" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "tags" : [
        ]
      },
      {
        "id" : "ea81fbe3-9918-4c8e-8f9d-ed2fd48640be",
        "parentId" : "153b46b9-72ad-4370-8867-b9c0594f15e3",
        "authorId" : "a99cf676-6fa9-44b1-9931-2be1d77b5486",
        "body" : "@ahg-g  actually your right i missed that. i will change now.",
        "createdAt" : "2020-10-13T12:02:26Z",
        "updatedAt" : "2020-10-13T12:03:24Z",
        "lastEditedBy" : "a99cf676-6fa9-44b1-9931-2be1d77b5486",
        "tags" : [
        ]
      },
      {
        "id" : "109a7dc7-8331-4737-bfe4-91f9cf1bd299",
        "parentId" : "153b46b9-72ad-4370-8867-b9c0594f15e3",
        "authorId" : "a99cf676-6fa9-44b1-9931-2be1d77b5486",
        "body" : "@ahg-g I don't think git allows me to mv `types.go`. I'm seeing what seems to be a Git issue:\r\n\r\nMove `framework/v1alpha1/types.go` to `framework/v1alpha1`  with `git mv`\r\n\r\nGit will show that it was moved correctly. \r\n\r\nHowever as soon as I create the alias `types.go` file inside `framework/v1alpha1`, git automatically converts the `framework/types.go` file from modified to created.",
        "createdAt" : "2020-10-13T15:56:07Z",
        "updatedAt" : "2020-10-13T16:03:07Z",
        "lastEditedBy" : "a99cf676-6fa9-44b1-9931-2be1d77b5486",
        "tags" : [
        ]
      },
      {
        "id" : "b3bcd3f6-7abc-4329-9500-2a4459453cbe",
        "parentId" : "153b46b9-72ad-4370-8867-b9c0594f15e3",
        "authorId" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "body" : "ok, np.",
        "createdAt" : "2020-10-13T16:02:07Z",
        "updatedAt" : "2020-10-13T16:02:08Z",
        "lastEditedBy" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "tags" : [
        ]
      }
    ],
    "commit" : "09b2e8f638daafd00efb22368ead44419ec72ad6",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +15,19 @@*/\n\npackage framework\n\nimport ("
  }
]