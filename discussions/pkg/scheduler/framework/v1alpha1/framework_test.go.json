[
  {
    "id" : "0765a8a6-afde-4217-9885-e2df7eea6bb5",
    "prId" : 85188,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/85188#pullrequestreview-316615121",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "37be8997-8ece-45ab-a0f9-9c0a7619fe6c",
        "parentId" : null,
        "authorId" : "a650878f-0c10-41c7-b0fc-033031305d77",
        "body" : "NOTE: these tests only cover a single plugin case. We need cases to cover multiple Filter plugins with different combinations of results, e.g., <pl1:Success, pl2:Error>, <pl1:Error, pl2:Success>, etc.\r\n\r\nIt's also OK if you defer the multiple plugin case. If so, please add a TODO here.",
        "createdAt" : "2019-11-13T16:36:45Z",
        "updatedAt" : "2019-11-15T03:39:29Z",
        "lastEditedBy" : "a650878f-0c10-41c7-b0fc-033031305d77",
        "tags" : [
        ]
      },
      {
        "id" : "f747cdc4-2fce-44aa-856b-411ec4cf7a3e",
        "parentId" : "37be8997-8ece-45ab-a0f9-9c0a7619fe6c",
        "authorId" : "d4e1f53d-5267-41b1-9516-48b563df4403",
        "body" : "I am adding cases to cover multiple plugins cases.",
        "createdAt" : "2019-11-13T22:57:00Z",
        "updatedAt" : "2019-11-15T03:39:29Z",
        "lastEditedBy" : "d4e1f53d-5267-41b1-9516-48b563df4403",
        "tags" : [
        ]
      }
    ],
    "commit" : "259cc951ffcba674d22c2d455234d8ed69628eef",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +586,590 @@}\n\nfunc TestFilterPlugins(t *testing.T) {\n\ttests := []struct {\n\t\tname     string"
  },
  {
    "id" : "33abdd07-3e0d-4e96-9071-2657eb8f946b",
    "prId" : 84578,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/84578#pullrequestreview-311790022",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a171545f-bfcd-4359-a36a-dea9f981379f",
        "parentId" : null,
        "authorId" : "89bff7d0-c420-41e1-9e5e-db63c4cccd93",
        "body" : "@ahg-g  Because `RunPermitPlugins` and `reject` belong to two different goroutines, I used `go func ()` to simulate `RejectWaitingPod` here. WDYT?",
        "createdAt" : "2019-11-05T14:08:16Z",
        "updatedAt" : "2019-11-05T14:08:45Z",
        "lastEditedBy" : "89bff7d0-c420-41e1-9e5e-db63c4cccd93",
        "tags" : [
        ]
      },
      {
        "id" : "d5cb23d5-d6c3-4434-af97-f99315442495",
        "parentId" : "a171545f-bfcd-4359-a36a-dea9f981379f",
        "authorId" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "body" : "sg",
        "createdAt" : "2019-11-05T14:53:52Z",
        "updatedAt" : "2019-11-05T14:53:52Z",
        "lastEditedBy" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "tags" : [
        ]
      }
    ],
    "commit" : "83dce763ecee9f603011755bbcad5a9a5ebc9a67",
    "line" : 71,
    "diffHunk" : "@@ -1,1 +820,824 @@\t\tf.RejectWaitingPod(pod.UID)\n\t}()\n\tpermitStatus := f.RunPermitPlugins(context.Background(), nil, pod, \"\")\n\tif permitStatus.message != \"pod \\\"pod\\\" rejected while waiting at permit: removed\" {\n\t\tt.Fatalf(\"RejectWaitingPod failed, permitStatus: %v\", permitStatus)"
  },
  {
    "id" : "9a73e8eb-d708-4429-b047-20a3d2f7683e",
    "prId" : 81614,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/81614#pullrequestreview-277159150",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b19eab9c-4d31-4c13-857e-322425899d9a",
        "parentId" : null,
        "authorId" : "df8dc16d-08c7-457c-8593-619395912000",
        "body" : "`injectScoreRes` is used to get `scoreRes`, however `injectNormalizeRes ` is used to set scores. It is a little hard  to guess their functions from their name.",
        "createdAt" : "2019-08-20T11:29:04Z",
        "updatedAt" : "2019-08-20T17:18:49Z",
        "lastEditedBy" : "df8dc16d-08c7-457c-8593-619395912000",
        "tags" : [
        ]
      },
      {
        "id" : "2ecb182a-1388-4606-9431-11dc69dbd61a",
        "parentId" : "b19eab9c-4d31-4c13-857e-322425899d9a",
        "authorId" : "a650878f-0c10-41c7-b0fc-033031305d77",
        "body" : "Yeah I see your point. This is due to the semantics of the Score/NormalizeScore methods - Score returns a score value, while NormalizeScore mutates an existing score.\r\n\r\nI renamed `injectScoreRes` to `setScoreRes` that may help. Let me know if you have other suggestions.",
        "createdAt" : "2019-08-20T13:20:02Z",
        "updatedAt" : "2019-08-20T17:18:49Z",
        "lastEditedBy" : "a650878f-0c10-41c7-b0fc-033031305d77",
        "tags" : [
        ]
      }
    ],
    "commit" : "e50a24d64cfa31eeb26549c2b06df9b60d722d5b",
    "line" : 834,
    "diffHunk" : "@@ -1,1 +333,337 @@}\n\nfunc injectNormalizeRes(inj injectedResult, scores NodeScoreList) *Status {\n\tif inj.normalizeErr {\n\t\treturn NewStatus(Error, \"injecting failure.\")"
  },
  {
    "id" : "c2cbf391-c89b-4c1b-ab30-b81d07ece076",
    "prId" : 80901,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/80901#pullrequestreview-271972148",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "543cd8e9-c92b-4164-8341-9f5c78eba038",
        "parentId" : null,
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "Avoid aliases when they are not necessary.",
        "createdAt" : "2019-08-07T12:57:27Z",
        "updatedAt" : "2019-08-08T00:20:00Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      },
      {
        "id" : "72d91fae-1aca-4b21-bdaf-365678d06d3c",
        "parentId" : "543cd8e9-c92b-4164-8341-9f5c78eba038",
        "authorId" : "9829b6c0-e54c-401b-8d97-73e5aa4e83c1",
        "body" : "FYI: I kept asking people to remove these aliases, but now I feel it is not worth fighting the tool. goimport does this and many PRs have this king of aliasing. - from Bobby\r\n\r\nhttps://github.com/kubernetes/kubernetes/pull/79424#discussion_r297890924",
        "createdAt" : "2019-08-07T13:45:12Z",
        "updatedAt" : "2019-08-08T00:20:00Z",
        "lastEditedBy" : "9829b6c0-e54c-401b-8d97-73e5aa4e83c1",
        "tags" : [
        ]
      }
    ],
    "commit" : "aa5f9fda52d0171e45682254e0d37b16f58ae6fc",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +21,25 @@\t\"testing\"\n\n\tv1 \"k8s.io/api/core/v1\"\n\t\"k8s.io/apimachinery/pkg/runtime\"\n\t\"k8s.io/kubernetes/pkg/scheduler/apis/config\""
  }
]