[
  {
    "id" : "d1a3cbe0-b0df-4494-ba25-533957846fa6",
    "prId" : 101460,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/101460#pullrequestreview-645312302",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a3622245-67b9-4e33-8398-6060d8342182",
        "parentId" : null,
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "can you just reuse the existing test plugins?",
        "createdAt" : "2021-04-26T15:46:48Z",
        "updatedAt" : "2021-05-11T02:24:41Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      },
      {
        "id" : "7d84628c-9722-43c9-ac46-a7a1daa78f37",
        "parentId" : "a3622245-67b9-4e33-8398-6060d8342182",
        "authorId" : "41c4c4f1-58a5-4719-8860-1fbf4fe8b073",
        "body" : "No, old plugins only satisfied one plugin interface. In my case, I need one plugin satisfies multi-plugins and score weight doesn't be reset by other. That's why i use TestPlugin that implement all Plugin interfaces.",
        "createdAt" : "2021-04-27T03:18:57Z",
        "updatedAt" : "2021-05-11T02:24:41Z",
        "lastEditedBy" : "41c4c4f1-58a5-4719-8860-1fbf4fe8b073",
        "tags" : [
        ]
      }
    ],
    "commit" : "47785131e23c30a6d5f0bda50b7e9a9a878f76cc",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +334,338 @@\tr.Register(pluginNotImplementingScore, newPluginNotImplementingScore)\n\tr.Register(duplicatePluginName, newDuplicatePlugin)\n\tr.Register(testPlugin, newTestPlugin)\n\treturn r\n}()"
  },
  {
    "id" : "0e062b92-cf4e-4d63-a95c-0a49009c6028",
    "prId" : 96929,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/96929#pullrequestreview-553999738",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c3190bd3-99e0-4442-83b8-61e6b097b7b8",
        "parentId" : null,
        "authorId" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "body" : "Can you add a test with the pod as high-priority, and nomiantedPod as low-priority. And PreFilter returns `Unschedulable` status, the expected result should be `Success` as PreFilter won't be called.",
        "createdAt" : "2020-12-15T21:08:17Z",
        "updatedAt" : "2020-12-19T16:19:06Z",
        "lastEditedBy" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "tags" : [
        ]
      },
      {
        "id" : "084b4180-7998-440a-afd3-3997b2a70fdf",
        "parentId" : "c3190bd3-99e0-4442-83b8-61e6b097b7b8",
        "authorId" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "body" : "where does PreFilter get invoked? I don't see a call to RunPreFilterPlugins in this code path, what am I missing?",
        "createdAt" : "2020-12-16T04:05:22Z",
        "updatedAt" : "2020-12-19T16:19:06Z",
        "lastEditedBy" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "tags" : [
        ]
      },
      {
        "id" : "95e4b8cc-f078-4650-9a12-0c48a9be734c",
        "parentId" : "c3190bd3-99e0-4442-83b8-61e6b097b7b8",
        "authorId" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "body" : "> where does PreFilter get invoked?\r\n\r\nI should say RunPreFilterExtensions, it's in the first attempt (i=0), it tries to incorporate low-priority nominated pod:\r\n\r\nhttps://github.com/kubernetes/kubernetes/blob/dc39ab2417bfddcec37be4011131c59921fdbe98/pkg/scheduler/core/generic_scheduler.go#L390-L393\r\n\r\nAnd the UT mocked that extension behavior by injecting a fake status, so my point is to cover the path that high-priority won't trigger the RunPreFilterExtensions logic if the nominated pod is low-priority.",
        "createdAt" : "2020-12-16T19:08:46Z",
        "updatedAt" : "2020-12-19T16:19:06Z",
        "lastEditedBy" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "tags" : [
        ]
      }
    ],
    "commit" : "070773c3996e12c62455c9a920914945a4efe724",
    "line" : 144,
    "diffHunk" : "@@ -1,1 +1258,1262 @@\t\t\twantStatus:   nil,\n\t\t},\n\t}\n\n\tfor _, tt := range tests {"
  },
  {
    "id" : "e27fd6df-7dbf-4c75-92aa-4ed49ed1b1af",
    "prId" : 91776,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/91776#pullrequestreview-433997537",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7a7df155-6c20-4d5a-8791-ba2fb04f3cfb",
        "parentId" : null,
        "authorId" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "body" : "please name this ```framework``` if changing the struct name to ```frameworkImpl```",
        "createdAt" : "2020-06-19T11:09:31Z",
        "updatedAt" : "2020-06-21T14:25:56Z",
        "lastEditedBy" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "tags" : [
        ]
      },
      {
        "id" : "48c61b25-3eba-4e01-9da7-b91eba62f5ac",
        "parentId" : "7a7df155-6c20-4d5a-8791-ba2fb04f3cfb",
        "authorId" : "a99cf676-6fa9-44b1-9931-2be1d77b5486",
        "body" : "done",
        "createdAt" : "2020-06-19T11:17:18Z",
        "updatedAt" : "2020-06-21T14:25:56Z",
        "lastEditedBy" : "a99cf676-6fa9-44b1-9931-2be1d77b5486",
        "tags" : [
        ]
      }
    ],
    "commit" : "a22e115a0e6619b651d0535d24f9accb503f7289",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +33,37 @@\t\"k8s.io/apimachinery/pkg/types\"\n\t\"k8s.io/kubernetes/pkg/scheduler/apis/config\"\n\t\"k8s.io/kubernetes/pkg/scheduler/framework/v1alpha1\"\n\t\"k8s.io/kubernetes/pkg/scheduler/metrics\"\n)"
  }
]