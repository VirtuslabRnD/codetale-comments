[
  {
    "id" : "d36c3b94-4286-4ee1-8c37-e76b616335df",
    "prId" : 103383,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/103383#pullrequestreview-701343039",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "07986a89-fa23-4830-804a-ac4ebdb2a2ea",
        "parentId" : null,
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "why do you need the pod, if we already have it in the unschedulable/backoff queues?",
        "createdAt" : "2021-07-07T17:50:39Z",
        "updatedAt" : "2021-07-07T17:57:40Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      },
      {
        "id" : "e7ca16ce-cbc6-453b-92ff-b17066273628",
        "parentId" : "07986a89-fa23-4830-804a-ac4ebdb2a2ea",
        "authorId" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "body" : "well, we only need a namespaced name here, but the current interface in unschedulable/backoff queues only accepts `pod`, so have to adapt to it; otherwise adjusting the interface isn't trivial.",
        "createdAt" : "2021-07-07T18:51:25Z",
        "updatedAt" : "2021-07-07T18:51:26Z",
        "lastEditedBy" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "tags" : [
        ]
      }
    ],
    "commit" : "fb9cafc99be94a73d9b92545164dbf336bbd230a",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +117,121 @@type PodsToActivate struct {\n\tsync.Mutex\n\t// Map is keyed with namespaced pod name, and valued with the pod.\n\tMap map[string]*v1.Pod\n}"
  },
  {
    "id" : "848be715-05db-4bb9-a531-5b850632a849",
    "prId" : 98241,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/98241#pullrequestreview-587197266",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "94acd0bd-29ae-4d4a-9068-669fe2fc25c4",
        "parentId" : null,
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "Add: The returned list needs to be static (not depend on configuration parameters) or it would lead to undefined behavior.",
        "createdAt" : "2021-02-09T15:51:40Z",
        "updatedAt" : "2021-03-03T15:20:46Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      },
      {
        "id" : "48a53c0f-e32f-4900-8f48-a53053155ef9",
        "parentId" : "94acd0bd-29ae-4d4a-9068-669fe2fc25c4",
        "authorId" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "body" : "done.",
        "createdAt" : "2021-02-10T02:16:16Z",
        "updatedAt" : "2021-03-03T15:20:46Z",
        "lastEditedBy" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "tags" : [
        ]
      }
    ],
    "commit" : "6fdb1a8439aa22050e9e30fb9872b1fad92504df",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +284,288 @@type EnqueueExtensions interface {\n\t// EventsToRegister returns a series of interested events that\n\t// will be registered when instantiating the internal scheduling queue.\n\t// Note: the returned list needs to be static (not depend on configuration parameters);\n\t// otherwise it would lead to undefined behavior."
  },
  {
    "id" : "40c2d398-e61d-4c0f-908f-797566b9993b",
    "prId" : 98041,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/98041#pullrequestreview-574645412",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ec1f8510-f432-4d8d-8b04-df26040fa7a3",
        "parentId" : null,
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "Update comment to say that we only keep one that has the most relevant status.",
        "createdAt" : "2021-01-22T15:07:28Z",
        "updatedAt" : "2021-01-28T20:21:10Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      },
      {
        "id" : "efd2fa6a-05f8-48b5-90e6-0b5873417107",
        "parentId" : "ec1f8510-f432-4d8d-8b04-df26040fa7a3",
        "authorId" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "body" : "done.",
        "createdAt" : "2021-01-22T21:45:18Z",
        "updatedAt" : "2021-01-28T20:21:10Z",
        "lastEditedBy" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "tags" : [
        ]
      }
    ],
    "commit" : "f8a6bdb044c61a6bcd2abb7775f6c0b947ddfe7e",
    "line" : 48,
    "diffHunk" : "@@ -1,1 +221,225 @@\t\t\tfinalStatus.code = s.Code()\n\t\t\t// Same as code, we keep the most relevant failedPlugin in the returned Status.\n\t\t\tfinalStatus.failedPlugin = s.FailedPlugin()\n\t\t}\n"
  },
  {
    "id" : "315a5887-e6ad-4fb7-9395-7654fce1cebc",
    "prId" : 98041,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/98041#pullrequestreview-578696364",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e1caed1b-373b-461a-bf49-32052158d531",
        "parentId" : null,
        "authorId" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "body" : "can we have a comment documenting the expectations around this field since it may not always be set.",
        "createdAt" : "2021-01-22T15:21:32Z",
        "updatedAt" : "2021-01-28T20:21:10Z",
        "lastEditedBy" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "tags" : [
        ]
      },
      {
        "id" : "8048ffe9-8ac4-46b1-b898-ed0d2cab14a7",
        "parentId" : "e1caed1b-373b-461a-bf49-32052158d531",
        "authorId" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "body" : "done.",
        "createdAt" : "2021-01-22T19:34:26Z",
        "updatedAt" : "2021-01-28T20:21:10Z",
        "lastEditedBy" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "tags" : [
        ]
      },
      {
        "id" : "01caf00b-0403-40f1-bad6-8f9abcb451f8",
        "parentId" : "e1caed1b-373b-461a-bf49-32052158d531",
        "authorId" : "1fde46ca-8fae-4b82-9978-f266fdae6ffe",
        "body" : "please also update the comments for the `status` struct @Line 105.\r\n```\r\n// Status indicates the result of running a plugin. It consists of a code, a\r\n// message, (optionally) an error and (optionally) failedPlugin. When the status code is not `Success`,\r\n// the reasons should explain why.\r\n```",
        "createdAt" : "2021-01-25T07:41:21Z",
        "updatedAt" : "2021-01-28T20:21:10Z",
        "lastEditedBy" : "1fde46ca-8fae-4b82-9978-f266fdae6ffe",
        "tags" : [
        ]
      },
      {
        "id" : "2899a38d-d3d2-449c-9ab0-c9802002cbff",
        "parentId" : "e1caed1b-373b-461a-bf49-32052158d531",
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "should we just name it plugin? Still, with the expectation that it might be empty for Successful status",
        "createdAt" : "2021-01-28T20:03:49Z",
        "updatedAt" : "2021-01-28T20:21:10Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      }
    ],
    "commit" : "f8a6bdb044c61a6bcd2abb7775f6c0b947ddfe7e",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +112,116 @@\t// failedPlugin is an optional field that records the plugin name a Pod failed by.\n\t// It's set by the framework when code is Error, Unschedulable or UnschedulableAndUnresolvable.\n\tfailedPlugin string\n}\n"
  },
  {
    "id" : "f4c2630d-96d3-46ff-9c66-4dc9cc8fd78d",
    "prId" : 98041,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/98041#pullrequestreview-576764582",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "66d5161a-7407-4367-91e3-dbf610b2c4c6",
        "parentId" : null,
        "authorId" : "1fde46ca-8fae-4b82-9978-f266fdae6ffe",
        "body" : "update the comments on the `Status` struct to include this new optional field?",
        "createdAt" : "2021-01-26T02:39:52Z",
        "updatedAt" : "2021-01-28T20:21:10Z",
        "lastEditedBy" : "1fde46ca-8fae-4b82-9978-f266fdae6ffe",
        "tags" : [
        ]
      },
      {
        "id" : "1cf52096-95b6-4fcf-8bcd-412ec4264b61",
        "parentId" : "66d5161a-7407-4367-91e3-dbf610b2c4c6",
        "authorId" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "body" : "done.",
        "createdAt" : "2021-01-26T21:11:31Z",
        "updatedAt" : "2021-01-28T20:21:10Z",
        "lastEditedBy" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "tags" : [
        ]
      }
    ],
    "commit" : "f8a6bdb044c61a6bcd2abb7775f6c0b947ddfe7e",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +110,114 @@\treasons []string\n\terr     error\n\t// failedPlugin is an optional field that records the plugin name a Pod failed by.\n\t// It's set by the framework when code is Error, Unschedulable or UnschedulableAndUnresolvable.\n\tfailedPlugin string"
  },
  {
    "id" : "ba8576e8-66aa-407d-8840-b53a99f09aaf",
    "prId" : 98041,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/98041#pullrequestreview-576768027",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a33c933c-8b7b-497d-a6d4-56854b0ce0a3",
        "parentId" : null,
        "authorId" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "body" : "since nil is a valid status, should we check and return if `s == nil`, in other functions as well?",
        "createdAt" : "2021-01-26T14:36:46Z",
        "updatedAt" : "2021-01-28T20:21:10Z",
        "lastEditedBy" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "tags" : [
        ]
      },
      {
        "id" : "735e174d-2016-4365-8900-915c13d48bca",
        "parentId" : "a33c933c-8b7b-497d-a6d4-56854b0ce0a3",
        "authorId" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "body" : "In theory yes, but in practice it is not that necessary because we don't call this on `nil` or a concrect `Success` status. (If deem needed, it's even more necessary to guard `AppendReason()` than this)",
        "createdAt" : "2021-01-26T19:35:47Z",
        "updatedAt" : "2021-01-28T20:21:10Z",
        "lastEditedBy" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "tags" : [
        ]
      },
      {
        "id" : "99514577-3e9f-4b3a-a49d-ce325c1ef5be",
        "parentId" : "a33c933c-8b7b-497d-a6d4-56854b0ce0a3",
        "authorId" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "body" : "ok, we can do that as a follow up.",
        "createdAt" : "2021-01-26T21:16:26Z",
        "updatedAt" : "2021-01-28T20:21:10Z",
        "lastEditedBy" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "tags" : [
        ]
      }
    ],
    "commit" : "f8a6bdb044c61a6bcd2abb7775f6c0b947ddfe7e",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +133,137 @@// SetFailedPlugin sets the given plugin name to s.failedPlugin.\nfunc (s *Status) SetFailedPlugin(plugin string) {\n\ts.failedPlugin = plugin\n}\n"
  },
  {
    "id" : "a480c538-f8d4-4277-914e-e27f27006f6e",
    "prId" : 97794,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/97794#pullrequestreview-567806106",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c197a27c-a903-4e3c-9262-3cf938afe967",
        "parentId" : null,
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "sorry, last nit: have this after `var codes` (because it references the enum).",
        "createdAt" : "2021-01-13T14:37:21Z",
        "updatedAt" : "2021-01-14T02:22:04Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      },
      {
        "id" : "52d88119-7f61-4b8a-bfb1-977a5eea4ce3",
        "parentId" : "c197a27c-a903-4e3c-9262-3cf938afe967",
        "authorId" : "1fde46ca-8fae-4b82-9978-f266fdae6ffe",
        "body" : "Good catch, done",
        "createdAt" : "2021-01-14T02:22:14Z",
        "updatedAt" : "2021-01-14T02:22:14Z",
        "lastEditedBy" : "1fde46ca-8fae-4b82-9978-f266fdae6ffe",
        "tags" : [
        ]
      }
    ],
    "commit" : "3c197c55ffb4ed824bf664731eff0d8ff5a0adb3",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +78,82 @@var codes = []string{\"Success\", \"Error\", \"Unschedulable\", \"UnschedulableAndUnresolvable\", \"Wait\", \"Skip\"}\n\n// statusPrecedence defines a map from status to its precedence, larger value means higher precedent.\nvar statusPrecedence = map[Code]int{\n\tError:                        3,"
  },
  {
    "id" : "69f50207-d36d-4e0e-9bc7-b53d3cac62c8",
    "prId" : 95069,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/95069#pullrequestreview-507460646",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c6d336f5-7cdb-4bc0-b994-9b687e7163a0",
        "parentId" : null,
        "authorId" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "body" : "@alculquicondor @Huang-Wei fyi, this is being renamed.",
        "createdAt" : "2020-10-09T15:09:37Z",
        "updatedAt" : "2020-10-13T02:17:13Z",
        "lastEditedBy" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "tags" : [
        ]
      },
      {
        "id" : "e2ec78b2-5f81-4dd3-b8d3-afb13c30162d",
        "parentId" : "c6d336f5-7cdb-4bc0-b994-9b687e7163a0",
        "authorId" : "c36d7654-ffec-4c9c-964e-b4b2e70085d0",
        "body" : "Is there any reason that we must rename the interface? If it is renamed, plugins in [scheduler-plugins](https://github.com/kubernetes-sigs/scheduler-plugins ) and other plugins would also must change when upgrading.",
        "createdAt" : "2020-10-13T03:28:15Z",
        "updatedAt" : "2020-10-13T03:28:16Z",
        "lastEditedBy" : "c36d7654-ffec-4c9c-964e-b4b2e70085d0",
        "tags" : [
        ]
      },
      {
        "id" : "f7b362b4-3bba-4c74-aa4b-5755bdd11268",
        "parentId" : "c6d336f5-7cdb-4bc0-b994-9b687e7163a0",
        "authorId" : "a99cf676-6fa9-44b1-9931-2be1d77b5486",
        "body" : "golint will fail without this change.\r\n```\r\nErrors from golint:\r\npkg/scheduler/framework/interface.go:512:6: type name will be used as framework.FrameworkHandle by other packages, and that stutters; consider calling this Handle\r\n```",
        "createdAt" : "2020-10-13T03:34:09Z",
        "updatedAt" : "2020-10-13T03:34:09Z",
        "lastEditedBy" : "a99cf676-6fa9-44b1-9931-2be1d77b5486",
        "tags" : [
        ]
      },
      {
        "id" : "ef59cbfc-e105-498b-bec1-fedc2393e6a4",
        "parentId" : "c6d336f5-7cdb-4bc0-b994-9b687e7163a0",
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "+1 to renaming",
        "createdAt" : "2020-10-13T13:53:39Z",
        "updatedAt" : "2020-10-13T13:54:20Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      }
    ],
    "commit" : "09b2e8f638daafd00efb22368ead44419ec72ad6",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +510,514 @@// passed to the plugin factories at the time of plugin initialization. Plugins\n// must store and use this handle to call framework functions.\ntype Handle interface {\n\t// SnapshotSharedLister returns listers from the latest NodeInfo Snapshot. The snapshot\n\t// is taken at the beginning of a scheduling cycle and remains unchanged until"
  }
]