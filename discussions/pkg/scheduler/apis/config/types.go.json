[
  {
    "id" : "534eec36-7f24-4c40-81e3-6baeff6faee5",
    "prId" : 88087,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/88087#pullrequestreview-360695455",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "84efb1ac-ed4c-4ea2-bde3-889cd49326d9",
        "parentId" : null,
        "authorId" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "body" : "just ```Name```",
        "createdAt" : "2020-02-13T01:29:58Z",
        "updatedAt" : "2020-02-24T14:46:17Z",
        "lastEditedBy" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "tags" : [
        ]
      },
      {
        "id" : "9b1d4087-3ae0-468f-a2e1-ee93fc739662",
        "parentId" : "84efb1ac-ed4c-4ea2-bde3-889cd49326d9",
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "I thought about it, but I think `SchedulerName` makes it more consistent with the use in pod.spec",
        "createdAt" : "2020-02-13T16:38:45Z",
        "updatedAt" : "2020-02-24T14:46:17Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      },
      {
        "id" : "d47d3707-a396-46fd-a561-3ac5bdab554f",
        "parentId" : "84efb1ac-ed4c-4ea2-bde3-889cd49326d9",
        "authorId" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "body" : "using schedulerName is confusing. We can clarify in the comment that the profile Name is name-mapped with the schedulerName field in the pod spec.\r\n\r\n",
        "createdAt" : "2020-02-13T19:46:26Z",
        "updatedAt" : "2020-02-24T14:46:17Z",
        "lastEditedBy" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "tags" : [
        ]
      },
      {
        "id" : "443dc1c1-2398-4fe4-8aec-aa0ecb91b957",
        "parentId" : "84efb1ac-ed4c-4ea2-bde3-889cd49326d9",
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "@liggitt WDYT?",
        "createdAt" : "2020-02-13T19:58:07Z",
        "updatedAt" : "2020-02-24T14:46:17Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      },
      {
        "id" : "2564b4bd-2ab8-460d-a70d-cea237d161d1",
        "parentId" : "84efb1ac-ed4c-4ea2-bde3-889cd49326d9",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "moving the schedulerName field into the profile type matches what was proposed in https://github.com/kubernetes/enhancements/blob/master/keps/sig-scheduling/20200114-multi-scheduling-profiles.md#component-config-api and makes sense to me",
        "createdAt" : "2020-02-13T20:57:20Z",
        "updatedAt" : "2020-02-24T14:46:17Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "b29fa22e-b3df-4302-9a6e-3598034279a8",
        "parentId" : "84efb1ac-ed4c-4ea2-bde3-889cd49326d9",
        "authorId" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "body" : "A KEP can be updated :) \r\n\r\nI find it inconsistent with the way we define entities in k8s: pod, namespace and whatnot all have a Name field. I would prefer to use Name, but I am just one vote.",
        "createdAt" : "2020-02-13T21:08:20Z",
        "updatedAt" : "2020-02-24T14:46:17Z",
        "lastEditedBy" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "tags" : [
        ]
      },
      {
        "id" : "c754c3e6-0f13-4a38-99e8-aab32dd20c66",
        "parentId" : "84efb1ac-ed4c-4ea2-bde3-889cd49326d9",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "the only thing the name is used for is mapping to that field in the pod spec, right? using the same name makes that connection clearer, in my opinion",
        "createdAt" : "2020-02-13T21:09:45Z",
        "updatedAt" : "2020-02-24T14:46:17Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "657dde9a-3520-42fd-acdd-bf4ed587f112",
        "parentId" : "84efb1ac-ed4c-4ea2-bde3-889cd49326d9",
        "authorId" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "body" : "It is a unique identifier of the profile that we will use in the code. I find it strange that a type named ```KubeSchedulerProfile``` is identified using a field named ```SchedulerName```.\r\n\r\n",
        "createdAt" : "2020-02-13T21:15:05Z",
        "updatedAt" : "2020-02-24T14:46:17Z",
        "lastEditedBy" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "tags" : [
        ]
      },
      {
        "id" : "39528faf-7749-451b-99a7-2e11cfa4d6d4",
        "parentId" : "84efb1ac-ed4c-4ea2-bde3-889cd49326d9",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "since it maps 1:1 with the pod `spec.schedulerName` API field, and the v1alpha1 config `schedulerName` API field, sticking with that name seems like the least surprising/confusing option to me",
        "createdAt" : "2020-02-18T22:21:07Z",
        "updatedAt" : "2020-02-24T14:46:17Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "9e71741d06697a64909142c080d7213e50559c18",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +107,111 @@\t// If SchedulerName matches with the pod's \"spec.schedulerName\", then the pod\n\t// is scheduled with this profile.\n\tSchedulerName string\n\n\t// Plugins specify the set of plugins that should be enabled or disabled."
  },
  {
    "id" : "9eeb0caf-e20b-4d72-8655-cff0cf915230",
    "prId" : 87751,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/87751#pullrequestreview-357802613",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "662bc160-85be-4732-b856-c9489b295db4",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "This is an alpha API and is not used in current (e.g., v1.17) schedulers? Are config files in this format currently being read and acted upon?",
        "createdAt" : "2020-02-11T16:50:42Z",
        "updatedAt" : "2020-02-12T15:28:15Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "aad3adcd-4482-4cc5-b8c9-987ff8d2f19e",
        "parentId" : "662bc160-85be-4732-b856-c9489b295db4",
        "authorId" : "4e9f2c95-e98e-400a-b9f5-49316b7ad277",
        "body" : "It's used in 1.17, and what we are planing is renaming it in 1.18.",
        "createdAt" : "2020-02-11T16:59:47Z",
        "updatedAt" : "2020-02-12T15:28:15Z",
        "lastEditedBy" : "4e9f2c95-e98e-400a-b9f5-49316b7ad277",
        "tags" : [
        ]
      },
      {
        "id" : "dbd001ac-4836-4db8-9e5b-bdedbea1428e",
        "parentId" : "662bc160-85be-4732-b856-c9489b295db4",
        "authorId" : "4e9f2c95-e98e-400a-b9f5-49316b7ad277",
        "body" : "Config files using v1alpha1.postFilter is properly handled, and it will be converted to preScore.",
        "createdAt" : "2020-02-12T04:06:36Z",
        "updatedAt" : "2020-02-12T15:28:15Z",
        "lastEditedBy" : "4e9f2c95-e98e-400a-b9f5-49316b7ad277",
        "tags" : [
        ]
      },
      {
        "id" : "ef66a0d2-bd19-4887-b8fa-c68cf36719e8",
        "parentId" : "662bc160-85be-4732-b856-c9489b295db4",
        "authorId" : "4e9f2c95-e98e-400a-b9f5-49316b7ad277",
        "body" : "@lavalamp Friendly ping, and do I need to do some other things for the api-review?\r\nðŸ˜„ ",
        "createdAt" : "2020-02-12T17:42:13Z",
        "updatedAt" : "2020-02-12T17:42:13Z",
        "lastEditedBy" : "4e9f2c95-e98e-400a-b9f5-49316b7ad277",
        "tags" : [
        ]
      },
      {
        "id" : "a32570f9-f039-4c2b-a18d-46d957cb10ae",
        "parentId" : "662bc160-85be-4732-b856-c9489b295db4",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "It seems like this will break existing files, or at least cause them to do something different than the author expected?",
        "createdAt" : "2020-02-12T21:17:28Z",
        "updatedAt" : "2020-02-12T21:17:28Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "128d22a5-2d6c-4b01-a801-0810c4f2bd46",
        "parentId" : "662bc160-85be-4732-b856-c9489b295db4",
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "Existing files are `v1alpha1`, which get a conversion for `postFilter` to `preScore`.",
        "createdAt" : "2020-02-12T21:18:55Z",
        "updatedAt" : "2020-02-12T21:18:56Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      },
      {
        "id" : "80eb04e5-98da-4527-b95e-e8ec52f11d31",
        "parentId" : "662bc160-85be-4732-b856-c9489b295db4",
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "This is actually tested in `options_test.go`",
        "createdAt" : "2020-02-12T21:21:05Z",
        "updatedAt" : "2020-02-12T21:21:05Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      },
      {
        "id" : "bc8ca9ee-8ddf-4a9f-95f1-7cee8de56e55",
        "parentId" : "662bc160-85be-4732-b856-c9489b295db4",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Ah great I missed that this was v1alpha2. There's not v1alpha2 files out in the wild, only v1alpha1, right?",
        "createdAt" : "2020-02-12T21:27:06Z",
        "updatedAt" : "2020-02-12T21:27:07Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "d8a83304-84aa-466b-a3a8-a4670da1e837",
        "parentId" : "662bc160-85be-4732-b856-c9489b295db4",
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "Correct, v1alpha2 is what we are introducing in this release :)",
        "createdAt" : "2020-02-12T21:32:16Z",
        "updatedAt" : "2020-02-12T21:32:17Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      }
    ],
    "commit" : "f5b7e3cca355ab5aef06d5def2aa1f71bd4b9b92",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +170,174 @@\n\t// PreScore is a list of plugins that are invoked before scoring.\n\tPreScore *PluginSet\n\n\t// Score is a list of plugins that should be invoked when ranking nodes that have passed the filtering phase."
  },
  {
    "id" : "1265a60e-a4b0-4e3c-b9f6-fdc1e03c0d0d",
    "prId" : 86905,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/86905#pullrequestreview-340629628",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e8793687-6e62-4c1c-a980-5c3fbb87df4d",
        "parentId" : null,
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "nit on style: you can avoid mentioning the type in the variable names, specially for unexported functions.  `default` and `custom` should be enough. But `default` is a reserved word, so `def` or `orig`.",
        "createdAt" : "2020-01-09T15:23:25Z",
        "updatedAt" : "2020-01-09T16:00:11Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      },
      {
        "id" : "83610a92-4a31-40e4-b7ea-1464c07f2e04",
        "parentId" : "e8793687-6e62-4c1c-a980-5c3fbb87df4d",
        "authorId" : "9829b6c0-e54c-401b-8d97-73e5aa4e83c1",
        "body" : "> nit on style: you can avoid mentioning the type in the variable names, specially for unexported functions. `default` and `custom` should be enough. \r\n> But `default` is a reserved word.\r\n\r\nThat is why I choose defaultPluginSet and customPluginSet here.\r\n\r\n> so `def` or `orig`.\r\n\r\n`def` and `orig` doesn't sounds like a good name to me. \r\n\r\nI'll keep this unless you feel strong about this.",
        "createdAt" : "2020-01-09T15:51:11Z",
        "updatedAt" : "2020-01-09T16:00:11Z",
        "lastEditedBy" : "9829b6c0-e54c-401b-8d97-73e5aa4e83c1",
        "tags" : [
        ]
      },
      {
        "id" : "b32fa6b8-1c40-4069-82de-9ee81b6d0fa9",
        "parentId" : "e8793687-6e62-4c1c-a980-5c3fbb87df4d",
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "sg",
        "createdAt" : "2020-01-09T15:58:56Z",
        "updatedAt" : "2020-01-09T16:00:11Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      },
      {
        "id" : "297683f0-88be-462a-b454-c4f1c9785709",
        "parentId" : "e8793687-6e62-4c1c-a980-5c3fbb87df4d",
        "authorId" : "9829b6c0-e54c-401b-8d97-73e5aa4e83c1",
        "body" : "Thanks",
        "createdAt" : "2020-01-09T16:02:00Z",
        "updatedAt" : "2020-01-09T16:02:00Z",
        "lastEditedBy" : "9829b6c0-e54c-401b-8d97-73e5aa4e83c1",
        "tags" : [
        ]
      }
    ],
    "commit" : "50deec25bc04d4e656865ce468a877cd4d56d4d4",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +292,296 @@}\n\nfunc mergePluginSets(defaultPluginSet, customPluginSet *PluginSet) *PluginSet {\n\tif customPluginSet == nil {\n\t\tcustomPluginSet = &PluginSet{}"
  },
  {
    "id" : "c7d9b44f-1393-491b-88e5-caece4a2bb98",
    "prId" : 86905,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/86905#pullrequestreview-340629728",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "03b09f30-2c61-4d15-a63c-4ac00306a20e",
        "parentId" : null,
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "nit: `if !disabled.Has(...) { enabled = append(..`.\r\n\r\n`continue` would make more sense if we wanted to avoid nesting. But a single line of code is just fine.",
        "createdAt" : "2020-01-09T15:27:29Z",
        "updatedAt" : "2020-01-09T16:00:11Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      },
      {
        "id" : "611b6fe7-24ca-45ae-af0a-bdbb1cf4a912",
        "parentId" : "03b09f30-2c61-4d15-a63c-4ac00306a20e",
        "authorId" : "9829b6c0-e54c-401b-8d97-73e5aa4e83c1",
        "body" : "Prefer to return first in the \"wrong\" path and leave the happy path out of the if clause",
        "createdAt" : "2020-01-09T15:49:19Z",
        "updatedAt" : "2020-01-09T16:00:11Z",
        "lastEditedBy" : "9829b6c0-e54c-401b-8d97-73e5aa4e83c1",
        "tags" : [
        ]
      },
      {
        "id" : "58bb898e-42e8-47d0-b6a5-54701c06ad30",
        "parentId" : "03b09f30-2c61-4d15-a63c-4ac00306a20e",
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "Again, that argument makes sense for bigger blocks of code. But not big deal.",
        "createdAt" : "2020-01-09T15:58:22Z",
        "updatedAt" : "2020-01-09T16:00:11Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      },
      {
        "id" : "2302c71d-0af7-41ae-97c0-46b20f2db253",
        "parentId" : "03b09f30-2c61-4d15-a63c-4ac00306a20e",
        "authorId" : "9829b6c0-e54c-401b-8d97-73e5aa4e83c1",
        "body" : "> Again, that argument makes sense for bigger blocks of code. But not big deal.\r\n\r\nThanks",
        "createdAt" : "2020-01-09T16:02:08Z",
        "updatedAt" : "2020-01-09T16:02:09Z",
        "lastEditedBy" : "9829b6c0-e54c-401b-8d97-73e5aa4e83c1",
        "tags" : [
        ]
      }
    ],
    "commit" : "50deec25bc04d4e656865ce468a877cd4d56d4d4",
    "line" : 49,
    "diffHunk" : "@@ -1,1 +309,313 @@\tif !disabledPlugins.Has(\"*\") {\n\t\tfor _, defaultEnabledPlugin := range defaultPluginSet.Enabled {\n\t\t\tif disabledPlugins.Has(defaultEnabledPlugin.Name) {\n\t\t\t\tcontinue\n\t\t\t}"
  },
  {
    "id" : "e8dbfabd-6942-4304-943c-329c6aa2d438",
    "prId" : 86905,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/86905#pullrequestreview-340905860",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "65a27cdb-5351-4ea6-985e-255ea191fbb6",
        "parentId" : null,
        "authorId" : "41c25afd-5561-4611-9b3a-7df68582aa10",
        "body" : "Seems it didn't conver\r\n\r\n```\r\nRe-enable default or custom plugin should return errors\r\nplugins:\r\n  filter:\r\n    disabled:\r\n    enabled:\r\n    - name: \"DefaultPlugin1\" #=> err\r\n```\r\n\r\nmentioned in https://github.com/kubernetes/kubernetes/issues/86789#issuecomment-570896757\r\n\r\nOr we could ignore `4. Re-enable default or custom plugin should return errors` actually?",
        "createdAt" : "2020-01-09T16:23:48Z",
        "updatedAt" : "2020-01-09T16:24:44Z",
        "lastEditedBy" : "41c25afd-5561-4611-9b3a-7df68582aa10",
        "tags" : [
        ]
      },
      {
        "id" : "120a6d4c-f5cf-4a20-9cd5-92bdd1677e03",
        "parentId" : "65a27cdb-5351-4ea6-985e-255ea191fbb6",
        "authorId" : "9829b6c0-e54c-401b-8d97-73e5aa4e83c1",
        "body" : "The duplicate will be checked during the initialization of the scheduling framework.",
        "createdAt" : "2020-01-10T01:02:04Z",
        "updatedAt" : "2020-01-10T01:02:05Z",
        "lastEditedBy" : "9829b6c0-e54c-401b-8d97-73e5aa4e83c1",
        "tags" : [
        ]
      }
    ],
    "commit" : "50deec25bc04d4e656865ce468a877cd4d56d4d4",
    "line" : 57,
    "diffHunk" : "@@ -1,1 +317,321 @@\t}\n\n\tenabledPlugins = append(enabledPlugins, customPluginSet.Enabled...)\n\n\treturn &PluginSet{Enabled: enabledPlugins}"
  },
  {
    "id" : "d86802fe-684b-4dbd-8add-1aacd2e5392b",
    "prId" : 83578,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/83578#pullrequestreview-301449226",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f078649e-7788-4dac-981f-70e21783df2e",
        "parentId" : null,
        "authorId" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "body" : "we have a new constant for CustomPriorityMaxScore: https://github.com/kubernetes/kubernetes/blob/d6eba1df1466b72848255a7b6b3a9210d4ce6eca/pkg/scheduler/api/types.go#L32",
        "createdAt" : "2019-10-12T00:56:58Z",
        "updatedAt" : "2019-11-01T21:38:21Z",
        "lastEditedBy" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "tags" : [
        ]
      },
      {
        "id" : "05bdd4cb-580c-4f96-8321-7272b06087ee",
        "parentId" : "f078649e-7788-4dac-981f-70e21783df2e",
        "authorId" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "body" : "DefaultPercentageOfNodesToScore is different, do you mean to comment on another line?",
        "createdAt" : "2019-10-14T17:33:44Z",
        "updatedAt" : "2019-11-01T21:38:21Z",
        "lastEditedBy" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "tags" : [
        ]
      },
      {
        "id" : "7af0e1ac-10ff-47c9-afc6-9e8f0482b3ea",
        "parentId" : "f078649e-7788-4dac-981f-70e21783df2e",
        "authorId" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "body" : "yeah, you got it :)",
        "createdAt" : "2019-10-14T17:45:16Z",
        "updatedAt" : "2019-11-01T21:38:21Z",
        "lastEditedBy" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "tags" : [
        ]
      }
    ],
    "commit" : "703a669db3081d4b5b375b9c41a1265a0f9b44ef",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +229,233 @@\t// DefaultPercentageOfNodesToScore defines the percentage of nodes of all nodes\n\t// that once found feasible, the scheduler stops looking for more nodes.\n\tDefaultPercentageOfNodesToScore = 50\n\n\t// MaxCustomPriorityScore is the max score UtilizationShapePoint expects."
  },
  {
    "id" : "82b2b32b-ee90-4722-9889-52bbe13efa4b",
    "prId" : 83578,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/83578#pullrequestreview-309707245",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a8f33b89-e587-4897-a347-efb365fb471d",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "why is this here instead of peer to MaxNodeScore?",
        "createdAt" : "2019-10-24T12:46:26Z",
        "updatedAt" : "2019-11-01T21:38:21Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "e439b354-0085-4e0f-a5df-34ec99c23e43",
        "parentId" : "a8f33b89-e587-4897-a347-efb365fb471d",
        "authorId" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "body" : "We wanted to increase the range for internal priorities to [0, 100], however, we can't force that on custom priorities since that breaks compatibility, so we defined a separate max priority for them. Internally, we scale it to the proper range when aggregating the scores: https://github.com/kubernetes/kubernetes/blob/c08161a7812c0e850c2614699a6d62eae459810b/pkg/scheduler/algorithm_factory.go#L427",
        "createdAt" : "2019-10-24T13:32:03Z",
        "updatedAt" : "2019-11-01T21:38:21Z",
        "lastEditedBy" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "tags" : [
        ]
      },
      {
        "id" : "9aa44137-ddce-4a3a-a8f8-ba7aad35ebae",
        "parentId" : "a8f33b89-e587-4897-a347-efb365fb471d",
        "authorId" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "body" : "and this is here because the value is part of the API.",
        "createdAt" : "2019-10-24T13:47:44Z",
        "updatedAt" : "2019-11-01T21:38:21Z",
        "lastEditedBy" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "tags" : [
        ]
      },
      {
        "id" : "2017b828-18a0-41f8-9370-359e56db6c75",
        "parentId" : "a8f33b89-e587-4897-a347-efb365fb471d",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "> Internally, we scale it to the proper range when aggregating the scores\r\n\r\nis the weight specified by the custom priority policy scaled as well?",
        "createdAt" : "2019-10-30T14:44:49Z",
        "updatedAt" : "2019-11-01T21:38:21Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "f81795c1-50d5-4d02-a1d6-08d03259462c",
        "parentId" : "a8f33b89-e587-4897-a347-efb365fb471d",
        "authorId" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "body" : "no, weights are supposed to be relative not absolute, right?",
        "createdAt" : "2019-10-30T15:53:36Z",
        "updatedAt" : "2019-11-01T21:38:21Z",
        "lastEditedBy" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "tags" : [
        ]
      },
      {
        "id" : "52d0c7a9-96b0-44bb-b1ed-95947d57c8cb",
        "parentId" : "a8f33b89-e587-4897-a347-efb365fb471d",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "> weights are supposed to be relative not absolute, right?\r\n\r\nI'm not familiar enough to know. Are there tests in place that ensure a custom priority combined with internal priorities continues to have the same effect/weight after this change as before?",
        "createdAt" : "2019-10-31T02:26:03Z",
        "updatedAt" : "2019-11-01T21:38:21Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "21fb7b4e-4004-4227-ad4a-95e6366c9a59",
        "parentId" : "a8f33b89-e587-4897-a347-efb365fb471d",
        "authorId" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "body" : "Yes there are tests for that.",
        "createdAt" : "2019-10-31T08:23:45Z",
        "updatedAt" : "2019-11-01T21:38:21Z",
        "lastEditedBy" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "tags" : [
        ]
      }
    ],
    "commit" : "703a669db3081d4b5b375b9c41a1265a0f9b44ef",
    "line" : 25,
    "diffHunk" : "@@ -1,1 +232,236 @@\n\t// MaxCustomPriorityScore is the max score UtilizationShapePoint expects.\n\tMaxCustomPriorityScore int64 = 10\n\n\t// MaxTotalScore is the maximum total score."
  },
  {
    "id" : "5636b5a2-fa3d-4278-9f70-8f3c990675d6",
    "prId" : 83080,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/83080#pullrequestreview-293334946",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "90d55133-c4ac-4aad-897d-631c1dcda798",
        "parentId" : null,
        "authorId" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "body" : "Does this need to be exposed to `staging` for user consuming? Or just for internal usage.",
        "createdAt" : "2019-09-25T17:20:08Z",
        "updatedAt" : "2019-09-26T02:10:55Z",
        "lastEditedBy" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "tags" : [
        ]
      },
      {
        "id" : "75aebb57-a5f6-41c2-bd95-0dba7beb260e",
        "parentId" : "90d55133-c4ac-4aad-897d-631c1dcda798",
        "authorId" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "body" : "Just internal use, kube-proxy does that as well.",
        "createdAt" : "2019-09-25T17:35:06Z",
        "updatedAt" : "2019-09-26T02:10:55Z",
        "lastEditedBy" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "tags" : [
        ]
      },
      {
        "id" : "0896ccd6-50ff-44b3-bfe0-d995ab4c3ba9",
        "parentId" : "90d55133-c4ac-4aad-897d-631c1dcda798",
        "authorId" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "body" : "OK, just want to confirm on this.",
        "createdAt" : "2019-09-25T17:42:40Z",
        "updatedAt" : "2019-09-26T02:10:55Z",
        "lastEditedBy" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "tags" : [
        ]
      },
      {
        "id" : "ec027540-bdd7-4d46-8334-8aed835755a7",
        "parentId" : "90d55133-c4ac-4aad-897d-631c1dcda798",
        "authorId" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "body" : "added a comment to clarify that.",
        "createdAt" : "2019-09-25T20:12:24Z",
        "updatedAt" : "2019-09-26T02:10:55Z",
        "lastEditedBy" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "tags" : [
        ]
      }
    ],
    "commit" : "a57ac0725a4593b5088881773bfd72555b3f2d8c",
    "line" : 22,
    "diffHunk" : "@@ -1,1 +228,232 @@// Append appends src Plugins to current Plugins. If a PluginSet is nil, it will\n// be created.\nfunc (p *Plugins) Append(src *Plugins) {\n\tif p == nil || src == nil {\n\t\treturn"
  },
  {
    "id" : "303818cc-294c-4865-b0a7-e82d7634667f",
    "prId" : 77501,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/77501#pullrequestreview-235138408",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "20969419-51d5-40a3-8baa-f34395c2963f",
        "parentId" : null,
        "authorId" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "body" : "We need to have a `Weight int` field here as well.",
        "createdAt" : "2019-05-07T18:26:12Z",
        "updatedAt" : "2019-05-17T23:24:50Z",
        "lastEditedBy" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "tags" : [
        ]
      },
      {
        "id" : "e82dfa01-b877-4ee8-9c2c-37c2e74a6a10",
        "parentId" : "20969419-51d5-40a3-8baa-f34395c2963f",
        "authorId" : "e9ccec4a-f0c0-4820-a947-6050b5de65a5",
        "body" : "Updated. PTAL.\r\nThanks",
        "createdAt" : "2019-05-08T15:48:02Z",
        "updatedAt" : "2019-05-17T23:24:50Z",
        "lastEditedBy" : "e9ccec4a-f0c0-4820-a947-6050b5de65a5",
        "tags" : [
        ]
      }
    ],
    "commit" : "0734d1debb79be8164c8cfca85c7393c0aed6313",
    "line" : 89,
    "diffHunk" : "@@ -1,1 +203,207 @@type Plugin struct {\n\t// Name defines the name of plugin\n\tName string\n\t// Weight defines the weight of plugin, only used for Score plugins.\n\tWeight int32"
  },
  {
    "id" : "a7cdaacf-cb78-43bb-bb7b-66265d428d99",
    "prId" : 77501,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/77501#pullrequestreview-238129762",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a7d09f0c-9cdf-4a2f-9749-70e9ad2b73ff",
        "parentId" : null,
        "authorId" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "body" : "Please also add that \"if no plugin should be invoked at an extension point, an empty list must be provided.\"",
        "createdAt" : "2019-05-09T18:51:10Z",
        "updatedAt" : "2019-05-17T23:24:50Z",
        "lastEditedBy" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "tags" : [
        ]
      },
      {
        "id" : "35080b6a-d76f-4f61-a697-c78c36e9c8e6",
        "parentId" : "a7d09f0c-9cdf-4a2f-9749-70e9ad2b73ff",
        "authorId" : "5f2c1de8-4266-42c0-b343-ba247af3578f",
        "body" : "+1 to Bobby's suggestion. It may seem redundant, but that is a good thing for user-facing documentation.\r\n\r\n(I hope we can distinguish nil slice from empty slice when parsing config.)",
        "createdAt" : "2019-05-10T22:00:18Z",
        "updatedAt" : "2019-05-17T23:24:50Z",
        "lastEditedBy" : "5f2c1de8-4266-42c0-b343-ba247af3578f",
        "tags" : [
        ]
      },
      {
        "id" : "f75a8fdc-4d93-41cf-8748-0b72a0a40fd0",
        "parentId" : "a7d09f0c-9cdf-4a2f-9749-70e9ad2b73ff",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "> I hope we can distinguish nil slice from empty slice when parsing config\r\n\r\nIf this will ever pass through proto, that does not preserve the difference. ",
        "createdAt" : "2019-05-14T05:38:15Z",
        "updatedAt" : "2019-05-17T23:24:50Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "e44b3134-9da4-4913-9227-2850096504fb",
        "parentId" : "a7d09f0c-9cdf-4a2f-9749-70e9ad2b73ff",
        "authorId" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "body" : "I think we should change the protocol then. If an extension point is nil or empty, default set of plugins will be used. If no plugins should be invoked at an extension point, a slice that has an empty string (`\"\"`) must be provided.",
        "createdAt" : "2019-05-15T21:36:35Z",
        "updatedAt" : "2019-05-17T23:24:50Z",
        "lastEditedBy" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "tags" : [
        ]
      },
      {
        "id" : "b42b2eb9-b3c1-4af4-97af-14944c10254e",
        "parentId" : "a7d09f0c-9cdf-4a2f-9749-70e9ad2b73ff",
        "authorId" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "body" : "Please ignore my last comment here if you decide to go with a list of \"disabled\" and \"enabled\" plugins. With that approach, we do not need to provide a way to say that no plugins should be invoked at an extension point. With that approach, when an extension point has some default plugins, the plugins must be disabled in order to have no plugins. When the extension has no default plugins, nothing needs to be enabled or disabled in order to have no plugins. So, either an empty or nil slice works.",
        "createdAt" : "2019-05-16T00:19:25Z",
        "updatedAt" : "2019-05-17T23:24:50Z",
        "lastEditedBy" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "tags" : [
        ]
      }
    ],
    "commit" : "0734d1debb79be8164c8cfca85c7393c0aed6313",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +147,151 @@// Plugins include multiple extension points. When specified, the list of plugins for\n// a particular extension point are the only ones enabled. If an extension point is\n// omitted from the config, then the default set of plugins is used for that extension point.\n// Enabled plugins are called in the order specified here, after default plugins. If they need to\n// be invoked before default plugins, default plugins must be disabled and re-enabled here in desired order."
  },
  {
    "id" : "2b269a86-898b-4418-828f-36e9c1f8c6d2",
    "prId" : 77501,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/77501#pullrequestreview-235758442",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9864807b-aec0-4d8b-8abc-ac6377db9740",
        "parentId" : null,
        "authorId" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "body" : "Please add docstring for the fields.",
        "createdAt" : "2019-05-09T19:01:20Z",
        "updatedAt" : "2019-05-17T23:24:50Z",
        "lastEditedBy" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "tags" : [
        ]
      }
    ],
    "commit" : "0734d1debb79be8164c8cfca85c7393c0aed6313",
    "line" : 99,
    "diffHunk" : "@@ -1,1 +213,217 @@type PluginConfig struct {\n\t// Name defines the name of plugin being configured\n\tName string\n\t// Args defines the arguments passed to the plugins at the time of initialization. Args can have arbitrary structure.\n\tArgs runtime.Unknown"
  },
  {
    "id" : "b9b87ea8-2f61-437c-b4ab-2950b93c4665",
    "prId" : 77501,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/77501#pullrequestreview-235823421",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "aedb0451-90ee-4064-9f3a-f1da0965eae2",
        "parentId" : null,
        "authorId" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "body" : "Bind is a list of plugins that should be invoked at \"Bind\" extension point of the scheduling framework. The scheduler call these plugins in order. Scheduler skips the rest of these plugins as soon as one returns success.",
        "createdAt" : "2019-05-09T21:08:57Z",
        "updatedAt" : "2019-05-17T23:24:50Z",
        "lastEditedBy" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "tags" : [
        ]
      }
    ],
    "commit" : "0734d1debb79be8164c8cfca85c7393c0aed6313",
    "line" : 64,
    "diffHunk" : "@@ -1,1 +178,182 @@\tPreBind *PluginSet\n\n\t// Bind is a list of plugins that should be invoked at \"Bind\" extension point of the scheduling framework.\n\t// The scheduler call these plugins in order. Scheduler skips the rest of these plugins as soon as one returns success.\n\tBind *PluginSet"
  },
  {
    "id" : "fc7571f9-1558-4228-80d5-a299ff66e1d8",
    "prId" : 77501,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/77501#pullrequestreview-239201301",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "94a6938a-011a-46c4-8e84-ed09966d5728",
        "parentId" : null,
        "authorId" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "body" : "Please add:\r\n```These are called after default plugins and in the same order specified here.```",
        "createdAt" : "2019-05-17T20:54:42Z",
        "updatedAt" : "2019-05-17T23:24:50Z",
        "lastEditedBy" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "tags" : [
        ]
      },
      {
        "id" : "ca506aa8-9539-42c2-a0df-03676d75247b",
        "parentId" : "94a6938a-011a-46c4-8e84-ed09966d5728",
        "authorId" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "body" : "Since order is significant, I wonder if the name PluginSet conveys this requirement.",
        "createdAt" : "2019-05-18T14:57:12Z",
        "updatedAt" : "2019-05-18T15:11:17Z",
        "lastEditedBy" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "0734d1debb79be8164c8cfca85c7393c0aed6313",
    "line" : 78,
    "diffHunk" : "@@ -1,1 +192,196 @@// If an array is empty, missing, or nil, default plugins at that extension point will be used.\ntype PluginSet struct {\n\t// Enabled specifies plugins that should be enabled in addition to default plugins.\n\t// These are called after default plugins and in the same order specified here.\n\tEnabled []Plugin"
  },
  {
    "id" : "b140105b-1f0c-4f5e-a8a4-1bbe062f3144",
    "prId" : 77501,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/77501#pullrequestreview-239128863",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f22e415f-eb5f-4793-bef1-aa5d4c3bca32",
        "parentId" : null,
        "authorId" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "body" : "Please add\r\n```When all default plugins need to be disabled, an array containing only one \"*\" should be provided.```",
        "createdAt" : "2019-05-17T20:56:28Z",
        "updatedAt" : "2019-05-17T23:24:50Z",
        "lastEditedBy" : "15fb535e-c5be-47ce-a304-1cb5da5aca90",
        "tags" : [
        ]
      }
    ],
    "commit" : "0734d1debb79be8164c8cfca85c7393c0aed6313",
    "line" : 81,
    "diffHunk" : "@@ -1,1 +195,199 @@\t// These are called after default plugins and in the same order specified here.\n\tEnabled []Plugin\n\t// Disabled specifies default plugins that should be disabled.\n\t// When all default plugins need to be disabled, an array containing only one \"*\" should be provided.\n\tDisabled []Plugin"
  },
  {
    "id" : "178e95a1-6e80-4bf0-8535-95c0190045ee",
    "prId" : 66916,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/66916#pullrequestreview-147568557",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b292ed75-be7b-4fd8-90ae-e5fffe718e40",
        "parentId" : null,
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "// TODO: We might wanna make this a substruct like `Debugging apiserverconfig.DebuggingConfiguration`",
        "createdAt" : "2018-08-08T20:41:09Z",
        "updatedAt" : "2018-08-24T03:03:01Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      },
      {
        "id" : "19bf1f1f-655e-451b-95ed-4181b0cee47c",
        "parentId" : "b292ed75-be7b-4fd8-90ae-e5fffe718e40",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "certainly for beta",
        "createdAt" : "2018-08-20T09:38:13Z",
        "updatedAt" : "2018-08-24T03:03:01Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "7f8a59162b9a6145623df7351e34bcb4b309b4d5",
    "line" : 69,
    "diffHunk" : "@@ -1,1 +67,71 @@\tMetricsBindAddress string\n\n\t// DebuggingConfiguration holds configuration for Debugging related features\n\t// TODO: We might wanna make this a substruct like Debugging apiserverconfig.DebuggingConfiguration\n\tapiserverconfig.DebuggingConfiguration"
  }
]