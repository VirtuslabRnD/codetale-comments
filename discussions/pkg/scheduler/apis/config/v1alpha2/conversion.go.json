[
  {
    "id" : "59200dd2-71cc-469f-adae-d26b2f28fdff",
    "prId" : 87999,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/87999#pullrequestreview-365281384",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1bedb56a-51f5-4106-958d-857010e3adf0",
        "parentId" : null,
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "This one is tricky, but I'm not sure if we should care.\r\n\r\nTheoretically, if there is an AlgorithmSource in the internal configuration, we should obtain the diff that needs to be applied to Plugins and Pluginconfig. But this is only needed if someone tries to do something like v1alpha1->internal->v1alpha2.\r\n\r\nThis is something that can be done by passing `--config` in v1alpha1 and `--write-config-to`, which writes to v1alpha2 all the time.\r\n\r\nAgain, should we care? I would say it's not worth the effort.",
        "createdAt" : "2020-02-11T18:24:52Z",
        "updatedAt" : "2020-02-25T16:42:43Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      },
      {
        "id" : "505278a3-7fb7-4dab-be81-ee388afd7cff",
        "parentId" : "1bedb56a-51f5-4106-958d-857010e3adf0",
        "authorId" : "0e2b7889-1224-444e-a36d-475f9edd0703",
        "body" : "According to the API conventions, we need to be able to round-trip to older versions without losing any information (see item 4 in this list: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api_changes.md#on-compatibility)\r\n\r\nSo that brings up a good question, because like you suggested [here](https://github.com/kubernetes/kubernetes/pull/87999#discussion_r377812933) we can just use the autoConvert function, but how do we handle roundtripping AlgorithmSource? We need to keep that info somewhere (like an annotation?), or we can just drop it once the Scheduler no longer supports AlgorithmSource.\r\n\r\nAnd in this point, how can we get the information from AlgorithmSource that needs to be applied to Plugins and PluginConfig? If it's a configmap, I suppose we could read from that, but if it's a policy file that becomes tougher.",
        "createdAt" : "2020-02-11T19:50:11Z",
        "updatedAt" : "2020-02-25T16:42:43Z",
        "lastEditedBy" : "0e2b7889-1224-444e-a36d-475f9edd0703",
        "tags" : [
        ]
      },
      {
        "id" : "210cc146-d13d-4fbc-b730-f93827a0f17a",
        "parentId" : "1bedb56a-51f5-4106-958d-857010e3adf0",
        "authorId" : "0e2b7889-1224-444e-a36d-475f9edd0703",
        "body" : "Better information more specific to deprecation here, but I'm still not clear. I think an annotation is the way it suggests? https://kubernetes.io/docs/reference/using-api/deprecation-policy/#deprecating-parts-of-the-api",
        "createdAt" : "2020-02-11T19:56:08Z",
        "updatedAt" : "2020-02-25T16:42:43Z",
        "lastEditedBy" : "0e2b7889-1224-444e-a36d-475f9edd0703",
        "tags" : [
        ]
      },
      {
        "id" : "3462a3ad-fedd-492d-bf90-5118015b65f3",
        "parentId" : "1bedb56a-51f5-4106-958d-857010e3adf0",
        "authorId" : "0e2b7889-1224-444e-a36d-475f9edd0703",
        "body" : "Though, this api is only in alpha so it might not be relevant for us. I'm ok with just dropping the information too",
        "createdAt" : "2020-02-11T19:57:12Z",
        "updatedAt" : "2020-02-25T16:42:43Z",
        "lastEditedBy" : "0e2b7889-1224-444e-a36d-475f9edd0703",
        "tags" : [
        ]
      },
      {
        "id" : "9cc2e028-d0be-47ef-bef2-c149ca66c9ef",
        "parentId" : "1bedb56a-51f5-4106-958d-857010e3adf0",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "I would expect the round-trip requirement to be specific to APIs in which multiple clients interact with different versions of the same resource (e.g. REST APIs).\r\n\r\nAPI types used in config files are input-only, and have multiple producers but a single consumer (the component whose configuration they are driving)",
        "createdAt" : "2020-02-11T20:09:34Z",
        "updatedAt" : "2020-02-25T16:42:43Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "6155a4a3-5845-494d-b585-5f907f80ef90",
        "parentId" : "1bedb56a-51f5-4106-958d-857010e3adf0",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "I think our policy doesn't cover it while alpha either way.\r\n\r\nI think it's confusing at best to have config file formats that are like our api objects but have different rules. I don't have specific case in which they go wrong, though. But I expect the inconsistency will eventually be a problem, e.g. maybe people start making these into CRDs for some strange reason. Anyway, I don't have concerns for this particular change.",
        "createdAt" : "2020-02-26T21:47:55Z",
        "updatedAt" : "2020-02-26T21:47:56Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "32f4f6ef-c94e-4354-8533-d0b30e2229cc",
        "parentId" : "1bedb56a-51f5-4106-958d-857010e3adf0",
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "In general, these configuration types are not supposed to be outputted. If we could add some type of annotation in them such that no internal->versioned conversion code is auto-generated, that would be a win already.",
        "createdAt" : "2020-02-26T22:10:45Z",
        "updatedAt" : "2020-02-26T22:10:45Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      }
    ],
    "commit" : "7e1ec59fe2e9d7ef2691c79c602b0eb6bfd7b8bc",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +29,33 @@\t}\n\tout.AlgorithmSource.Provider = pointer.StringPtr(v1alpha2.SchedulerDefaultProviderName)\n\treturn nil\n}\n"
  },
  {
    "id" : "ac3cac05-194b-47c8-96a3-ee55e17ce6cb",
    "prId" : 87999,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/87999#pullrequestreview-356889418",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3cc0da50-a01b-47fe-be5f-f9d97f36c039",
        "parentId" : null,
        "authorId" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "body" : "can you add unit tests for both functions?",
        "createdAt" : "2020-02-11T18:25:43Z",
        "updatedAt" : "2020-02-25T16:42:43Z",
        "lastEditedBy" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "tags" : [
        ]
      }
    ],
    "commit" : "7e1ec59fe2e9d7ef2691c79c602b0eb6bfd7b8bc",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +24,28 @@)\n\nfunc Convert_v1alpha2_KubeSchedulerConfiguration_To_config_KubeSchedulerConfiguration(in *v1alpha2.KubeSchedulerConfiguration, out *config.KubeSchedulerConfiguration, s conversion.Scope) error {\n\tif err := autoConvert_v1alpha2_KubeSchedulerConfiguration_To_config_KubeSchedulerConfiguration(in, out, s); err != nil {\n\t\treturn err"
  },
  {
    "id" : "d5a91136-3d37-42a6-b8d5-324a02efd02d",
    "prId" : 87999,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/87999#pullrequestreview-356883195",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e52b5aec-250e-4873-855a-c826e78950d9",
        "parentId" : null,
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "add conversion_test, but I'm happy to only have v1alpha2->internal",
        "createdAt" : "2020-02-11T18:27:18Z",
        "updatedAt" : "2020-02-25T16:42:43Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      }
    ],
    "commit" : "7e1ec59fe2e9d7ef2691c79c602b0eb6bfd7b8bc",
    "line" : 1,
    "diffHunk" : "@@ -1,1 +-1,3 @@/*\nCopyright 2020 The Kubernetes Authors.\n"
  }
]