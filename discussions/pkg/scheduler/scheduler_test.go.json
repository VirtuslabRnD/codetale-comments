[
  {
    "id" : "de07269e-ae79-4b95-a277-f9e87c630902",
    "prId" : 102796,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/102796#pullrequestreview-682277356",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "22252ba8-dac3-4aa6-b9db-ac46dffcf409",
        "parentId" : null,
        "authorId" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "body" : "Can we add a subtest to cover that an out-of-tree with its custom pluginArgs?",
        "createdAt" : "2021-06-11T21:27:51Z",
        "updatedAt" : "2021-06-11T21:28:35Z",
        "lastEditedBy" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "tags" : [
        ]
      },
      {
        "id" : "119c51d9-8fc6-454f-bfda-4b7eb0106987",
        "parentId" : "22252ba8-dac3-4aa6-b9db-ac46dffcf409",
        "authorId" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "body" : "We have in scheme_test.go.",
        "createdAt" : "2021-06-12T00:19:34Z",
        "updatedAt" : "2021-06-12T00:19:35Z",
        "lastEditedBy" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "tags" : [
        ]
      }
    ],
    "commit" : "265ef1741f951290f2b302d81c694186b79decfa",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +133,137 @@\t}{\n\t\t{\n\t\t\tname: \"valid out-of-tree registry\",\n\t\t\topts: []Option{\n\t\t\t\tWithFrameworkOutOfTreeRegistry(validRegistry),"
  },
  {
    "id" : "32587ffb-05c3-44ff-809d-abd682d49b16",
    "prId" : 95687,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/95687#pullrequestreview-512730981",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a66f62ac-24fe-4a36-8115-66b3624f5376",
        "parentId" : null,
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "Can we call profile.New instead?",
        "createdAt" : "2020-10-19T15:32:37Z",
        "updatedAt" : "2020-10-27T01:14:06Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      },
      {
        "id" : "0f313a48-9de9-49cf-8291-f1255b4b1017",
        "parentId" : "a66f62ac-24fe-4a36-8115-66b3624f5376",
        "authorId" : "e12d6a1b-b2fb-418c-952f-f2eaa5e4dc56",
        "body" : "> Can we call profile.New instead?\r\n\r\n```\r\nfunc NewProfile(cfg config.KubeSchedulerProfile, frameworkFact FrameworkFactory, recorderFact RecorderFactory, opts ...frameworkruntime.Option) (Profile, error)\r\n```\r\n\r\nI think `NewProfile()` need a parameter  `config.KubeSchedulerProfile` but not in this case.",
        "createdAt" : "2020-10-20T03:26:03Z",
        "updatedAt" : "2020-10-27T01:14:06Z",
        "lastEditedBy" : "e12d6a1b-b2fb-418c-952f-f2eaa5e4dc56",
        "tags" : [
        ]
      },
      {
        "id" : "6b600060-0cbd-4b38-b2bc-db8f9b81b64c",
        "parentId" : "a66f62ac-24fe-4a36-8115-66b3624f5376",
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "sg",
        "createdAt" : "2020-10-20T13:47:11Z",
        "updatedAt" : "2020-10-27T01:14:06Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      }
    ],
    "commit" : "5f3efa671dde0af7c69b4ed03a3bae5d7b35d781",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +343,347 @@\t\t\tfwk, err := st.NewFramework(registerPluginFuncs,\n\t\t\t\tframeworkruntime.WithClientSet(client),\n\t\t\t\tframeworkruntime.WithEventRecorder(eventBroadcaster.NewRecorder(scheme.Scheme, testSchedulerName)),\n\t\t\t\tframeworkruntime.WithProfileName(testSchedulerName))\n\t\t\tif err != nil {"
  },
  {
    "id" : "cc3ade3d-6b61-4062-af0d-c11fa5fe4d17",
    "prId" : 93896,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/93896#pullrequestreview-473087465",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5e5f9d23-210b-4681-9ffd-2a797b3cd72b",
        "parentId" : null,
        "authorId" : "224e1088-78fe-4bdd-99d1-31be3e464996",
        "body" : "i know select case doesn't fall through, but still this requires some mental processing to understand or may be its just me. I would add a `{}` add the end of each case to improve readability",
        "createdAt" : "2020-08-23T00:31:45Z",
        "updatedAt" : "2020-08-23T00:31:45Z",
        "lastEditedBy" : "224e1088-78fe-4bdd-99d1-31be3e464996",
        "tags" : [
        ]
      },
      {
        "id" : "4aa1d2b0-f58a-45b2-bd2b-f72b97095059",
        "parentId" : "5e5f9d23-210b-4681-9ffd-2a797b3cd72b",
        "authorId" : "224e1088-78fe-4bdd-99d1-31be3e464996",
        "body" : "https://play.golang.org/p/OVtA-n1fzXL",
        "createdAt" : "2020-08-23T00:34:47Z",
        "updatedAt" : "2020-08-23T00:34:48Z",
        "lastEditedBy" : "224e1088-78fe-4bdd-99d1-31be3e464996",
        "tags" : [
        ]
      },
      {
        "id" : "50cdd29d-71a0-4a26-8b31-e407f728e8c2",
        "parentId" : "5e5f9d23-210b-4681-9ffd-2a797b3cd72b",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "I'm not sure I agree... empty brackets aren't commonly used that way, and I actually find those more distracting/harder to understand",
        "createdAt" : "2020-08-23T01:25:30Z",
        "updatedAt" : "2020-08-23T01:25:30Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "a6b4c0c4-5546-4556-8004-94dcddac76c2",
        "parentId" : "5e5f9d23-210b-4681-9ffd-2a797b3cd72b",
        "authorId" : "224e1088-78fe-4bdd-99d1-31be3e464996",
        "body" : "sounds good, probably its just me then.",
        "createdAt" : "2020-08-24T02:41:54Z",
        "updatedAt" : "2020-08-24T02:41:54Z",
        "lastEditedBy" : "224e1088-78fe-4bdd-99d1-31be3e464996",
        "tags" : [
        ]
      }
    ],
    "commit" : "1978866474bace489357dc644cbe2c642b12f74a",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +962,966 @@\t\t\tcase gotErr = <-errChan:\n\t\t\tcase gotBind = <-bindingChan:\n\t\t\tcase <-time.After(chanTimeout):\n\t\t\t\tt.Fatalf(\"did not receive pod binding or error after %v\", chanTimeout)\n\t\t\t}"
  },
  {
    "id" : "3b2fea0b-a3ad-4aaa-8d43-5f1545a9ceba",
    "prId" : 93893,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/93893#pullrequestreview-465428190",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "586c4310-294b-43e0-ad01-747f709ca4a1",
        "parentId" : null,
        "authorId" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "body" : "To avoid similar flakes, can we add a utility function in UT like what we did in the integration test? And then turn all UTs' logic of starting informerFactory to call the utility.\r\n\r\nhttps://github.com/kubernetes/kubernetes/blob/04362870ad9f9812f487ab8f89a40f6bf2daa588/test/integration/util/util.go#L184-L188",
        "createdAt" : "2020-08-11T18:03:17Z",
        "updatedAt" : "2020-08-11T18:03:17Z",
        "lastEditedBy" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "tags" : [
        ]
      },
      {
        "id" : "b2b2c13a-15b6-4bdc-b105-63b22d8e1a73",
        "parentId" : "586c4310-294b-43e0-ad01-747f709ca4a1",
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "mind doing it in a followup?",
        "createdAt" : "2020-08-11T21:04:58Z",
        "updatedAt" : "2020-08-11T21:04:58Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      }
    ],
    "commit" : "24f817a487163d743b632541d9f2db17212079b8",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +481,485 @@\t// Run scheduler.\n\tinformerFactory.Start(ctx.Done())\n\tinformerFactory.WaitForCacheSync(ctx.Done())\n\tgo sched.Run(ctx)\n"
  },
  {
    "id" : "41f5f497-0a53-4f88-81e0-9f9af14455ce",
    "prId" : 90978,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/90978#pullrequestreview-411164417",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "552b7f51-db8a-4b78-9b8a-5d3bcc09a645",
        "parentId" : null,
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "what if we send a different time here? Although, our scheduler shouldn't produce that AFAIK.",
        "createdAt" : "2020-05-13T17:29:19Z",
        "updatedAt" : "2020-05-14T19:18:17Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      },
      {
        "id" : "bd539ba4-6d0c-49f0-85cc-93a2821f8463",
        "parentId" : "552b7f51-db8a-4b78-9b8a-5d3bcc09a645",
        "authorId" : "5ba8956e-ec1f-452c-959a-ae0daad08298",
        "body" : "Yeah, I was looking at that too, but thought I probably didn't need to check for it in the unit test.\r\n\r\n`UpdatePodCondition()` will just ignore anything that is passed in for LastTransitionTime and use its own rules for setting it:\r\n* If the status is changed, set it to the current time\r\n* If the status is the same, use the original LastTransitionTime value from the current record.\r\n\r\nhttps://github.com/kubernetes/kubernetes/blob/master/pkg/api/v1/pod/util.go#L330-L354",
        "createdAt" : "2020-05-13T17:43:52Z",
        "updatedAt" : "2020-05-14T19:18:17Z",
        "lastEditedBy" : "5ba8956e-ec1f-452c-959a-ae0daad08298",
        "tags" : [
        ]
      },
      {
        "id" : "1eae0eb5-ae4e-4633-a6ff-33ddb4417075",
        "parentId" : "552b7f51-db8a-4b78-9b8a-5d3bcc09a645",
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "sg. Thanks for the field research :)",
        "createdAt" : "2020-05-13T17:53:49Z",
        "updatedAt" : "2020-05-14T19:18:17Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      }
    ],
    "commit" : "9eb8e7a6d6b90225999092287e4f1a9c996ba894",
    "line" : 167,
    "diffHunk" : "@@ -1,1 +1473,1477 @@\t\t\t\tStatus:             \"currentStatus\",\n\t\t\t\tLastProbeTime:      metav1.NewTime(time.Date(2020, 5, 13, 1, 1, 1, 1, time.UTC)),\n\t\t\t\tLastTransitionTime: metav1.NewTime(time.Date(2020, 5, 12, 0, 0, 0, 0, time.UTC)),\n\t\t\t\tReason:             \"newReason\",\n\t\t\t\tMessage:            \"newMessage\","
  },
  {
    "id" : "b583c678-93f5-43dc-a7d1-7b2ee9951988",
    "prId" : 88285,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/88285#pullrequestreview-361210111",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5cb6cdbe-7792-42d0-a3a4-4d98ae8655ad",
        "parentId" : null,
        "authorId" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "body" : "Instead of passing it as an argument, I would create the ```EventBroadcaster``` inside the function and return it (since a couple of tests require it).",
        "createdAt" : "2020-02-19T01:58:11Z",
        "updatedAt" : "2020-02-25T17:40:49Z",
        "lastEditedBy" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "tags" : [
        ]
      },
      {
        "id" : "b64a36b6-47ef-400f-8cfa-f7b48b850f46",
        "parentId" : "5cb6cdbe-7792-42d0-a3a4-4d98ae8655ad",
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "It seems that there are the same amount of tests that use it than tests that don't.\r\nI prefer to keep it as is for now given that the PR is quite big already.",
        "createdAt" : "2020-02-19T16:00:24Z",
        "updatedAt" : "2020-02-25T17:40:49Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      }
    ],
    "commit" : "c0488584712fe37372f35236d2d6dd0e9f630e26",
    "line" : 93,
    "diffHunk" : "@@ -1,1 +598,602 @@// queuedPodStore: pods queued before processing.\n// scache: scheduler cache that might contain assumed pods.\nfunc setupTestScheduler(queuedPodStore *clientcache.FIFO, scache internalcache.Cache, informerFactory informers.SharedInformerFactory, broadcaster events.EventBroadcaster, fakeVolumeBinder *volumebinder.VolumeBinder, fns ...st.RegisterPluginFunc) (*Scheduler, chan *v1.Binding, chan error) {\n\tif fakeVolumeBinder == nil {\n\t\t// Create default volume binder if it didn't set."
  },
  {
    "id" : "e1e1c27c-1f25-4652-b66a-22c773ef8b24",
    "prId" : 87261,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/87261#pullrequestreview-345552824",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "defe95e8-bd4b-4055-9d55-57bd93bb69c2",
        "parentId" : null,
        "authorId" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "body" : "Once this PR gets merged, i will create a \"good-first-issue\" to track this.",
        "createdAt" : "2020-01-16T22:24:33Z",
        "updatedAt" : "2020-01-17T03:10:59Z",
        "lastEditedBy" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "tags" : [
        ]
      },
      {
        "id" : "632d77b9-b513-4d81-9dd3-487aaf388027",
        "parentId" : "defe95e8-bd4b-4055-9d55-57bd93bb69c2",
        "authorId" : "f51dcd57-be84-4fe6-b939-2e43f488cd3b",
        "body" : "Can I take this issue if the PR gets merged? ",
        "createdAt" : "2020-01-17T03:03:36Z",
        "updatedAt" : "2020-01-17T03:10:59Z",
        "lastEditedBy" : "f51dcd57-be84-4fe6-b939-2e43f488cd3b",
        "tags" : [
        ]
      },
      {
        "id" : "e2ec2e94-8487-4d1e-9a5d-b7e956ff1572",
        "parentId" : "defe95e8-bd4b-4055-9d55-57bd93bb69c2",
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "I'm kind of tackling this for #87157",
        "createdAt" : "2020-01-20T22:14:42Z",
        "updatedAt" : "2020-01-20T22:14:42Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      }
    ],
    "commit" : "c712230ac1c2e8f1010261b57a75fee0045ebf8a",
    "line" : 85,
    "diffHunk" : "@@ -1,1 +673,677 @@func setupTestScheduler(queuedPodStore *clientcache.FIFO, scache internalcache.Cache, informerFactory informers.SharedInformerFactory, recorder events.EventRecorder, fns ...st.RegisterPluginFunc) (*Scheduler, chan *v1.Binding, chan error) {\n\tregistry := framework.Registry{}\n\t// TODO: instantiate the plugins dynamically.\n\tplugins := &schedulerapi.Plugins{\n\t\tQueueSort: &schedulerapi.PluginSet{},"
  },
  {
    "id" : "01b3bd5f-99bc-431f-895b-f730ad1d1d04",
    "prId" : 83726,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/83726#pullrequestreview-409645247",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7e3b2e8d-16c4-4038-81ff-2d2786dc1f33",
        "parentId" : null,
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "in the case of policy, this comes from command line flags, correct?",
        "createdAt" : "2020-05-11T15:46:02Z",
        "updatedAt" : "2020-05-13T02:57:53Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      },
      {
        "id" : "782e0240-f150-4b07-91f6-a3d6ea9544b1",
        "parentId" : "7e3b2e8d-16c4-4038-81ff-2d2786dc1f33",
        "authorId" : "e4e7c71f-23b5-4203-b65d-3f5f3c503b64",
        "body" : "yes \r\n\r\nupdate: from --config scheduler configuration file, not exposed via a separate CLI flag",
        "createdAt" : "2020-05-12T01:49:44Z",
        "updatedAt" : "2020-05-13T02:57:53Z",
        "lastEditedBy" : "e4e7c71f-23b5-4203-b65d-3f5f3c503b64",
        "tags" : [
        ]
      }
    ],
    "commit" : "85a8740d9b53185cd4fee19935b7da2af7fc9c23",
    "line" : 163,
    "diffHunk" : "@@ -1,1 +1251,1255 @@\t\t\t\t\tPolicy: &config.SchedulerPolicySource{},\n\t\t\t\t}),\n\t\t\t\tWithBindTimeoutSeconds(100),\n\t\t\t},\n\t\t\twantPluginConfig: []config.PluginConfig{"
  },
  {
    "id" : "1c261253-d0ad-4bc0-adbc-6bea8b360218",
    "prId" : 83342,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/83342#pullrequestreview-295923892",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "00b81d3b-c414-4343-aff8-07109fa0624f",
        "parentId" : null,
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "It is great that we can get rid of this already. Thanks for spotting it.\r\n\r\nAre there any external uses of NewFromConfig that we can get rid of?",
        "createdAt" : "2019-10-01T14:58:47Z",
        "updatedAt" : "2019-10-02T21:30:09Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      },
      {
        "id" : "9b522a87-6e7e-4756-b57b-08464eccdba3",
        "parentId" : "00b81d3b-c414-4343-aff8-07109fa0624f",
        "authorId" : "690cad9d-7e11-4aad-9d0e-fccf78563a4f",
        "body" : "there is only one call in `event_handlers_test.go`, I thought there would be more so I only changed the affected ones. Should I change that one and unexport `NewFromConfig`?",
        "createdAt" : "2019-10-01T21:36:57Z",
        "updatedAt" : "2019-10-02T21:30:09Z",
        "lastEditedBy" : "690cad9d-7e11-4aad-9d0e-fccf78563a4f",
        "tags" : [
        ]
      },
      {
        "id" : "f4d2f94b-dbb9-46c2-af82-09f2c8024e45",
        "parentId" : "00b81d3b-c414-4343-aff8-07109fa0624f",
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "Yes, but a separate PR would be better.",
        "createdAt" : "2019-10-01T22:13:04Z",
        "updatedAt" : "2019-10-02T21:30:09Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      }
    ],
    "commit" : "6c75e1baa255307eb49bf9dae1faccd4c8bee14b",
    "line" : 41,
    "diffHunk" : "@@ -1,1 +671,675 @@\terrChan := make(chan error, 1)\n\n\tsched := &Scheduler{\n\t\tSchedulerCache: scache,\n\t\tAlgorithm:      algo,"
  },
  {
    "id" : "d3ff265d-1bf0-4f19-94d8-316558ba1156",
    "prId" : 70290,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/70290#pullrequestreview-169604208",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9165ad93-3798-4b9d-83fd-55bee0cc49c4",
        "parentId" : null,
        "authorId" : "5f2c1de8-4266-42c0-b343-ba247af3578f",
        "body" : "Do the tests pass with this line removed? My understanding is that `SelfLink` is not important to any of the behavior we are trying to test.",
        "createdAt" : "2018-10-29T18:10:45Z",
        "updatedAt" : "2018-10-29T18:18:55Z",
        "lastEditedBy" : "5f2c1de8-4266-42c0-b343-ba247af3578f",
        "tags" : [
        ]
      },
      {
        "id" : "81a19a68-9efa-4a89-b00a-dc5f12ad1276",
        "parentId" : "9165ad93-3798-4b9d-83fd-55bee0cc49c4",
        "authorId" : "cc82c1d0-5e27-49b3-ac12-1c634e1cda66",
        "body" : "I have run the test without `SelfLink`, but it will cause error below:\r\n```\r\n1030 01:51:38.384380   13145 event.go:259] Could not construct reference to: '&v1.Pod{TypeMeta:v1.TypeMeta{Kind:\"\", APIVersion:\"\"}, ObjectMeta:v1.ObjectMeta{Name:\"foo\", GenerateName:\"\", Namespace:\"\", SelfLink:\"\", UID:\"foo\", ResourceVersion:\"\", Generation:0, CreationTimestamp:v1.Time{Time:time.Time{wall:0x0, ext:0, loc:(*time.Location)(nil)}}, DeletionTimestamp:(*v1.Time)(nil), DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string(nil), Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Initializers:(*v1.Initializers)(nil), Finalizers:[]string(nil), ClusterName:\"\"}, Spec:v1.PodSpec{Volumes:[]v1.Volume(nil), InitContainers:[]v1.Container(nil), Containers:[]v1.Container(nil), RestartPolicy:\"\", TerminationGracePeriodSeconds:(*int64)(nil), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:\"\", NodeSelector:map[string]string(nil), ServiceAccountName:\"\", DeprecatedServiceAccount:\"\", AutomountServiceAccountToken:(*bool)(nil), NodeName:\"machine1\", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(nil), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:\"\", Subdomain:\"\", Affinity:(*v1.Affinity)(nil), SchedulerName:\"\", Tolerations:[]v1.Toleration(nil), HostAliases:[]v1.HostAlias(nil), PriorityClassName:\"\", Priority:(*int32)(nil), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(nil)}, Status:v1.PodStatus{Phase:\"\", Conditions:[]v1.PodCondition(nil), Message:\"\", Reason:\"\", NominatedNodeName:\"\", HostIP:\"\", PodIP:\"\", StartTime:(*v1.Time)(nil), InitContainerStatuses:[]v1.ContainerStatus(nil), ContainerStatuses:[]v1.ContainerStatus(nil), QOSClass:\"\"}}' due to: 'selfLink was empty, can't make reference'. Will not report event: 'Normal' 'Scheduled' 'Successfully assigned /foo to machine1'\r\n```\r\nand the test will hang waiting for the event. So the `SelfLink` is necessary for test. 😢 ",
        "createdAt" : "2018-10-30T02:04:24Z",
        "updatedAt" : "2018-10-30T02:10:06Z",
        "lastEditedBy" : "cc82c1d0-5e27-49b3-ac12-1c634e1cda66",
        "tags" : [
        ]
      },
      {
        "id" : "9c5acd47-586d-4abe-878b-9b0321cd708e",
        "parentId" : "9165ad93-3798-4b9d-83fd-55bee0cc49c4",
        "authorId" : "5f2c1de8-4266-42c0-b343-ba247af3578f",
        "body" : "Huh, weird. I'd like to look into that eventually.",
        "createdAt" : "2018-10-30T03:54:01Z",
        "updatedAt" : "2018-10-30T03:54:02Z",
        "lastEditedBy" : "5f2c1de8-4266-42c0-b343-ba247af3578f",
        "tags" : [
        ]
      }
    ],
    "commit" : "12634bf1365ec9861bbacd3303a273af2aa9949d",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +96,100 @@\t\t\tName:     id,\n\t\t\tUID:      types.UID(id),\n\t\t\tSelfLink: fmt.Sprintf(\"/api/v1/%s/%s\", string(v1.ResourcePods), id),\n\t\t},\n\t\tSpec: v1.PodSpec{"
  },
  {
    "id" : "12d29018-b230-48fb-a6f0-94ab4c18a7dc",
    "prId" : 103805,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/103805#pullrequestreview-713043816",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "433b079a-ad6a-45af-be09-699daa404600",
        "parentId" : null,
        "authorId" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "body" : "Can we add unit tests for the cases of failure during binding?",
        "createdAt" : "2021-07-22T16:13:25Z",
        "updatedAt" : "2021-07-22T16:13:44Z",
        "lastEditedBy" : "31fbce73-ef64-43f8-9faa-047479d8fc32",
        "tags" : [
        ]
      },
      {
        "id" : "dff2aefe-7450-4693-9da0-4f6bb9478e7f",
        "parentId" : "433b079a-ad6a-45af-be09-699daa404600",
        "authorId" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "body" : "Sure, let me craft some tests to cover that.",
        "createdAt" : "2021-07-22T17:18:00Z",
        "updatedAt" : "2021-07-22T17:18:00Z",
        "lastEditedBy" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "tags" : [
        ]
      }
    ],
    "commit" : "dc079acc2be603fbc2065e2748c79bb5e2c3453d",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +948,952 @@\t\t\ttestSchedulerName: fwk,\n\t\t},\n\t\tclient:          client,\n\t\tSchedulingQueue: internalqueue.NewTestQueue(context.Background(), nil),\n\t}"
  }
]