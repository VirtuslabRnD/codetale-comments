[
  {
    "id" : "7d52b316-1e72-4f96-b5c3-f4afbfe0b7f1",
    "prId" : 86673,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/86673#pullrequestreview-336854291",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "35c71b97-a490-431b-842e-5da3e2102cbd",
        "parentId" : null,
        "authorId" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "body" : "requires removing from the daemon set package, and so left it for now to be removed in a separate smaller PR.",
        "createdAt" : "2019-12-28T21:10:38Z",
        "updatedAt" : "2020-01-02T21:40:47Z",
        "lastEditedBy" : "570b631b-84a0-4888-a815-ca0e7934e412",
        "tags" : [
        ]
      }
    ],
    "commit" : "b535ed3b0c15178c81fd8469b1d480ce21deb155",
    "line" : 105,
    "diffHunk" : "@@ -1,1 +17,21 @@package defaults\n\n// TODO(ahg-g): remove this pkg."
  },
  {
    "id" : "f4aad490-7ff9-4de8-a062-702a307a62d2",
    "prId" : 82703,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/82703#pullrequestreview-292949431",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d40b04bc-5e44-4247-af92-75fcf00275d3",
        "parentId" : null,
        "authorId" : "72156db3-c40b-4455-9838-c12c0c606019",
        "body" : "I think `PodToleratesNodeTaintsPred` should be mandatory; if user enable TaintNodeByCondition without this predicates in configuration, will we change the behavior?\r\n\r\nBTW, should we also identify mandatory predicates to make sure scheduler always \"work\".",
        "createdAt" : "2019-09-25T09:37:43Z",
        "updatedAt" : "2019-10-19T01:17:57Z",
        "lastEditedBy" : "72156db3-c40b-4455-9838-c12c0c606019",
        "tags" : [
        ]
      },
      {
        "id" : "4a788189-0709-482a-9857-33a3e3521772",
        "parentId" : "d40b04bc-5e44-4247-af92-75fcf00275d3",
        "authorId" : "72156db3-c40b-4455-9838-c12c0c606019",
        "body" : "> I think PodToleratesNodeTaintsPred should be mandatory; if user enable TaintNodeByCondition without this predicates in configuration, will we change the behavior?\r\n\r\nOps, never mind; just see other diffs handled that.",
        "createdAt" : "2019-09-25T09:38:51Z",
        "updatedAt" : "2019-10-19T01:17:57Z",
        "lastEditedBy" : "72156db3-c40b-4455-9838-c12c0c606019",
        "tags" : [
        ]
      }
    ],
    "commit" : "1163a1d51ed007ff2c3cd6fe548f60fc0b175a24",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +48,52 @@\t\tpredicates.NoDiskConflictPred,\n\t\tpredicates.GeneralPred,\n\t\tpredicates.PodToleratesNodeTaintsPred,\n\t\tpredicates.CheckVolumeBindingPred,\n\t\tpredicates.CheckNodeUnschedulablePred,"
  },
  {
    "id" : "2b8bd9fc-5955-4883-ae31-e00cad0ce6ee",
    "prId" : 79063,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/79063#pullrequestreview-267427723",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a6759b01-f1e3-4756-9dc9-b2535c53cd69",
        "parentId" : null,
        "authorId" : "9829b6c0-e54c-401b-8d97-73e5aa4e83c1",
        "body" : "This function has already been deprecated, we should use map-reduce pattern instead of this. I created https://github.com/kubernetes/kubernetes/pull/80225 to remove this from the codebase.\r\n\r\n> // RegisterPriorityFunction registers a priority function with the algorithm registry. Returns the name,\r\n// with which the function was registered.\r\n// DEPRECATED\r\n// Use Map-Reduce pattern for priority functions.",
        "createdAt" : "2019-07-21T08:38:20Z",
        "updatedAt" : "2019-07-27T03:51:30Z",
        "lastEditedBy" : "9829b6c0-e54c-401b-8d97-73e5aa4e83c1",
        "tags" : [
        ]
      },
      {
        "id" : "4690a178-03d8-4728-9adb-ff7bef8b0829",
        "parentId" : "a6759b01-f1e3-4756-9dc9-b2535c53cd69",
        "authorId" : "9829b6c0-e54c-401b-8d97-73e5aa4e83c1",
        "body" : "Friendly reminder on the usage of deprecated `RegisterPriorityFunction`. :)",
        "createdAt" : "2019-07-26T09:01:54Z",
        "updatedAt" : "2019-07-27T03:51:30Z",
        "lastEditedBy" : "9829b6c0-e54c-401b-8d97-73e5aa4e83c1",
        "tags" : [
        ]
      },
      {
        "id" : "4752e704-c341-47db-a15a-b5510dc6063d",
        "parentId" : "a6759b01-f1e3-4756-9dc9-b2535c53cd69",
        "authorId" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "body" : "#80225 needs further considerations. I will take another round of review later.",
        "createdAt" : "2019-07-26T22:30:36Z",
        "updatedAt" : "2019-07-27T03:51:30Z",
        "lastEditedBy" : "06cbf859-1cac-4be7-80e6-3b34dcff1812",
        "tags" : [
        ]
      }
    ],
    "commit" : "755a3112d89770549aec0a33e2f6bb57ae092cc6",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +96,100 @@\t\t// register priority\n\t\tfactory.InsertPriorityKeyToAlgorithmProviderMap(priorities.EvenPodsSpreadPriority)\n\t\tfactory.RegisterPriorityFunction(priorities.EvenPodsSpreadPriority, priorities.CalculateEvenPodsSpreadPriority, 1)\n\t}\n"
  },
  {
    "id" : "b7a97df0-ad41-4a31-880c-5c8eb6b4edac",
    "prId" : 71399,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/71399#pullrequestreview-182516543",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d219ea8d-d4b1-46a9-b6f5-5b94f77b4330",
        "parentId" : null,
        "authorId" : "5f2c1de8-4266-42c0-b343-ba247af3578f",
        "body" : "I think this line should be removed also.",
        "createdAt" : "2018-12-05T20:31:28Z",
        "updatedAt" : "2018-12-18T01:06:20Z",
        "lastEditedBy" : "5f2c1de8-4266-42c0-b343-ba247af3578f",
        "tags" : [
        ]
      },
      {
        "id" : "70ee4d68-7910-4466-a424-ea9e1f8f3447",
        "parentId" : "d219ea8d-d4b1-46a9-b6f5-5b94f77b4330",
        "authorId" : "7dd504ec-7e63-45b3-98f8-6eb1c683e9c2",
        "body" : "Emm ... this line looks like a valid warning, for the below lines.",
        "createdAt" : "2018-12-07T01:02:17Z",
        "updatedAt" : "2018-12-18T01:06:20Z",
        "lastEditedBy" : "7dd504ec-7e63-45b3-98f8-6eb1c683e9c2",
        "tags" : [
        ]
      }
    ],
    "commit" : "797601d99d91ae170e55c9a3cd0cb77adaa17fd3",
    "line" : 3,
    "diffHunk" : "@@ -1,1 +49,53 @@\tregisterAlgorithmProvider(defaultPredicates(), defaultPriorities())\n\n\t// IMPORTANT NOTES for predicate developers:\n\t// Registers predicates and priorities that are not enabled by default, but user can pick when creating their\n\t// own set of priorities/predicates."
  },
  {
    "id" : "794c8092-6157-4abc-a6fa-651abcb76d94",
    "prId" : 60007,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/60007#pullrequestreview-104904506",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "36ca72f1-68cc-4c8b-8e8a-94b07b0f8302",
        "parentId" : null,
        "authorId" : "7dd504ec-7e63-45b3-98f8-6eb1c683e9c2",
        "body" : "Should handle equiv cache invalidation properly when node condition changes. See: https://github.com/kubernetes/kubernetes/blob/master/pkg/scheduler/factory/factory.go#L822-L827",
        "createdAt" : "2018-03-03T19:43:16Z",
        "updatedAt" : "2018-04-26T02:10:11Z",
        "lastEditedBy" : "7dd504ec-7e63-45b3-98f8-6eb1c683e9c2",
        "tags" : [
        ]
      },
      {
        "id" : "6038a2bd-5f62-415c-9b96-ed25038c2d24",
        "parentId" : "36ca72f1-68cc-4c8b-8e8a-94b07b0f8302",
        "authorId" : "72156db3-c40b-4455-9838-c12c0c606019",
        "body" : "got that.",
        "createdAt" : "2018-03-04T08:20:17Z",
        "updatedAt" : "2018-04-26T02:10:11Z",
        "lastEditedBy" : "72156db3-c40b-4455-9838-c12c0c606019",
        "tags" : [
        ]
      },
      {
        "id" : "02c71f97-dab5-47b8-bb4f-08a793f3f745",
        "parentId" : "36ca72f1-68cc-4c8b-8e8a-94b07b0f8302",
        "authorId" : "72156db3-c40b-4455-9838-c12c0c606019",
        "body" : "done",
        "createdAt" : "2018-03-19T10:26:45Z",
        "updatedAt" : "2018-04-26T02:10:11Z",
        "lastEditedBy" : "72156db3-c40b-4455-9838-c12c0c606019",
        "tags" : [
        ]
      }
    ],
    "commit" : "2c10d15ae5366b3bc7596032b0baeea1ecd521b5",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +163,167 @@\t\t// Fit is determined by node pid pressure condition.\n\t\tfactory.RegisterFitPredicate(predicates.CheckNodePIDPressurePred, predicates.CheckNodePIDPressurePredicate),\n\n\t\t// Fit is determined by node conditions: not ready, network unavailable or out of disk.\n\t\tfactory.RegisterMandatoryFitPredicate(predicates.CheckNodeConditionPred, predicates.CheckNodeConditionPredicate),"
  }
]