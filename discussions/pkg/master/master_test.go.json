[
  {
    "id" : "ca71bf15-0ad4-4f35-9901-bff022e05f78",
    "prId" : 72942,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/72942#pullrequestreview-207653856",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e8dd027a-8135-4dee-a78d-c4c757748419",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "This test seems valuable but not future proof-- maybe the prior test could be changed to make a map[hash][]GVK and then verify that every hash has just 1 entry except for these specific ones?",
        "createdAt" : "2019-02-21T22:03:22Z",
        "updatedAt" : "2019-03-11T17:27:12Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "bb846528-f912-444e-a49a-71bd5a42d0e7",
        "parentId" : "e8dd027a-8135-4dee-a78d-c4c757748419",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "It also seems important that these hashes don't change except when we change something about the storage; perhaps it would be good to check in a golden data file (somewhere owned by api reviewers) so that it's difficult to accidentally change this?",
        "createdAt" : "2019-02-21T22:04:46Z",
        "updatedAt" : "2019-03-11T17:27:12Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "d564c2bd-94b8-4a17-b7f1-86e38650a0ec",
        "parentId" : "e8dd027a-8135-4dee-a78d-c4c757748419",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "I checked in the golden file at pkg/master/storageversionhashdata, and made api-reviewers as owners.\r\n",
        "createdAt" : "2019-02-25T22:47:17Z",
        "updatedAt" : "2019-03-11T17:27:12Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "887cb93d8d74ac6491df850edef051bf607fceb6",
    "line" : 119,
    "diffHunk" : "@@ -1,1 +435,439 @@\tserver := httptest.NewServer(master.GenericAPIServer.Handler.GoRestfulContainer.ServeMux)\n\n\t// Test 1: extensions/v1beta1/replicasets and apps/v1/replicasets have\n\t// the same storage version hash.\n\tresp, err := http.Get(server.URL + \"/apis/extensions/v1beta1\")"
  },
  {
    "id" : "617b092e-cc45-4634-befd-819c9d59b63c",
    "prId" : 72942,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/72942#pullrequestreview-209835725",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2a98462b-3a65-4952-a922-ed7dd417f03a",
        "parentId" : null,
        "authorId" : "093f4806-3f92-4191-a80b-4e6cf3d6ffc0",
        "body" : "probably add another check that the number of entries in 'all' equals the number of entries in storageversionhashdata.",
        "createdAt" : "2019-03-01T19:02:46Z",
        "updatedAt" : "2019-03-11T17:27:12Z",
        "lastEditedBy" : "093f4806-3f92-4191-a80b-4e6cf3d6ffc0",
        "tags" : [
        ]
      },
      {
        "id" : "761858d7-2096-43a1-8a66-634567f8b640",
        "parentId" : "2a98462b-3a65-4952-a922-ed7dd417f03a",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "I don't think that check adds value. We have already checked that the entries in the discovery doc is either a subresource, or in the \r\nstorageversionhashdata#NoStorageVersionHash or \r\nin the storageversionhashdata#GVRToStorageVersionHash.",
        "createdAt" : "2019-03-01T19:08:53Z",
        "updatedAt" : "2019-03-11T17:27:12Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      },
      {
        "id" : "926b71ca-3b68-4493-9066-d1b2b9f31d11",
        "parentId" : "2a98462b-3a65-4952-a922-ed7dd417f03a",
        "authorId" : "093f4806-3f92-4191-a80b-4e6cf3d6ffc0",
        "body" : "the inverse is not checked, i think. some entries in storageversionhashdata left over while their APIs have been removed.",
        "createdAt" : "2019-03-01T19:22:41Z",
        "updatedAt" : "2019-03-11T17:27:12Z",
        "lastEditedBy" : "093f4806-3f92-4191-a80b-4e6cf3d6ffc0",
        "tags" : [
        ]
      },
      {
        "id" : "7c15e0b2-3dc4-416b-b769-7395f9564fdc",
        "parentId" : "2a98462b-3a65-4952-a922-ed7dd417f03a",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "Good point. Added.",
        "createdAt" : "2019-03-02T00:23:49Z",
        "updatedAt" : "2019-03-11T17:27:12Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "887cb93d8d74ac6491df850edef051bf607fceb6",
    "line" : 85,
    "diffHunk" : "@@ -1,1 +401,405 @@\t}\n\tvar count int\n\tfor _, g := range all {\n\t\tfor _, r := range g.APIResources {\n\t\t\tif strings.Contains(r.Name, \"/\") ||"
  },
  {
    "id" : "e6e28b1b-4477-4715-80e5-78459b1478c8",
    "prId" : 49321,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/49321#pullrequestreview-51299168",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "25fbdb47-84ef-45c2-80f3-ef24c36cdc0e",
        "parentId" : null,
        "authorId" : "4815d47d-9abd-4b5d-8074-030539047224",
        "body" : "Unfortunately had to test at the master package level. Ideally this would have been with the LegacyRESTStorageProvider, however this requires substantial plumbing to instantiate so we could get at the internal storage map, all of which existed here in the master package. This package is also the location where it is used.\r\n\r\nI can re-attempt this if desired however it will mean a much larger patch to copy or refactor code, as it's a lot of plumbing and there's additionally a circular dependency at play between the two packages.",
        "createdAt" : "2017-07-20T18:59:29Z",
        "updatedAt" : "2017-08-09T14:08:14Z",
        "lastEditedBy" : "4815d47d-9abd-4b5d-8074-030539047224",
        "tags" : [
        ]
      }
    ],
    "commit" : "855a1c17131f92fca6de33279a02eca3893ca374",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +130,134 @@\t\tServiceNodePortRange: masterCfg.ServiceNodePortRange,\n\t\tLoopbackClientConfig: masterCfg.GenericConfig.LoopbackClientConfig,\n\t}\n\n\t_, apiGroupInfo, err := storageProvider.NewLegacyRESTStorage(masterCfg.GenericConfig.RESTOptionsGetter)"
  },
  {
    "id" : "6eb9c7be-eabc-4e3a-8241-0114a17d93e5",
    "prId" : 49321,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/49321#pullrequestreview-51856751",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "668427a3-2ac6-4fb4-9ab8-22c438117dab",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "eventually we should reverse this",
        "createdAt" : "2017-07-24T18:27:55Z",
        "updatedAt" : "2017-08-09T14:08:14Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "855a1c17131f92fca6de33279a02eca3893ca374",
    "line" : 42,
    "diffHunk" : "@@ -1,1 +137,141 @@\t}\n\n\t// Any new stores with export logic will need to be added here:\n\texceptions := registrytest.StrategyExceptions{\n\t\t// Only these stores should have an export strategy defined:"
  },
  {
    "id" : "fd197ff2-b522-487b-be9e-047ec72d1f3b",
    "prId" : 33512,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/33512#pullrequestreview-2136539",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fb02d1fd-135a-41c3-8037-08cb7d2d8a55",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "Didn't this change on master? The first return value is gone.\n",
        "createdAt" : "2016-09-29T13:21:54Z",
        "updatedAt" : "2016-09-29T17:52:23Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "1f515889-c4b2-4cce-baba-70ef18333ce5",
        "parentId" : "fb02d1fd-135a-41c3-8037-08cb7d2d8a55",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "only in genericapiserver. disregard my comment.\n",
        "createdAt" : "2016-09-29T13:24:33Z",
        "updatedAt" : "2016-09-29T17:52:23Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "1123f6788b3c4cff4e5832b8ea7874d38fd75733",
    "line" : 116,
    "diffHunk" : "@@ -1,1 +206,210 @@// TestGetServersToValidate verifies the unexported getServersToValidate function\nfunc TestGetServersToValidate(t *testing.T) {\n\t_, etcdserver, config, assert := setUp(t)\n\tdefer etcdserver.Terminate(t)\n"
  },
  {
    "id" : "439e87b3-e75e-465f-b9cc-523fb6f5d15c",
    "prId" : 28414,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "60930b57-993f-4fc0-8447-6ae27f7e54bb",
        "parentId" : null,
        "authorId" : "bb4cf218-381a-40ad-ac0c-0c2c66685cd4",
        "body" : "This unit test doesn't equal to real cases.\nSee [here](https://github.com/kubernetes/kubernetes/blob/ef0c9f0c5b8efbba948a0be2c98d9d2e32e0b68c/pkg/master/thirdparty_controller.go#L69-L75):\n\n``` Go\n    hasResource, err := t.master.HasThirdPartyResource(rsrc)\n    if !hasResource {\n        return t.master.InstallThirdPartyResource(rsrc)\n    }\n```\n\nThe bug was caused in `HasThirdPartyResource` returning true because the API Group has been registered before despite of different resource kind.\n\nI tried to fix it by comparing both API group and resource kind. But I got error:\n\n```\n[restful] WebService with duplicate root path detected:\n```\n\nSeems like rest path duplicate reg. Any suggestion on how to handle the install rest thing? @brendandburns \n\n/cc @polvi @xiang90 \n",
        "createdAt" : "2016-07-27T06:34:28Z",
        "updatedAt" : "2016-07-27T17:06:17Z",
        "lastEditedBy" : "bb4cf218-381a-40ad-ac0c-0c2c66685cd4",
        "tags" : [
        ]
      }
    ],
    "commit" : "ca9a61b3fbadc19e48d22907083562f4063e3e22",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +571,575 @@\t\t\t},\n\t\t}\n\t\terr := master.InstallThirdPartyResource(api)\n\t\tif !assert.NoError(err) {\n\t\t\tt.Logf(\"Failed to install API: %v\", err)"
  },
  {
    "id" : "453f17af-6f68-4ec1-b4d5-7c30b7e55546",
    "prId" : 28025,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b985fce2-acbc-4cf5-8ced-ea60edf3f283",
        "parentId" : null,
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "is there a test with this not specified?\n",
        "createdAt" : "2016-06-24T20:45:18Z",
        "updatedAt" : "2016-06-27T13:22:31Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      },
      {
        "id" : "fc15d670-30b9-434e-bed2-16f1490f41dd",
        "parentId" : "b985fce2-acbc-4cf5-8ced-ea60edf3f283",
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "ignore above.\n",
        "createdAt" : "2016-06-24T20:45:48Z",
        "updatedAt" : "2016-06-27T13:22:31Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      }
    ],
    "commit" : "b55cede866aa81bbf726423b64de809c45924979",
    "line" : 40,
    "diffHunk" : "@@ -1,1 +276,280 @@\tcontroller = master.NewBootstrapController(EndpointReconcilerConfig{\n\t\tReconciler: &fakeEndpointReconciler{},\n\t\tInterval:   5 * time.Second,\n\t})\n\tassert.Equal(controller.EndpointReconciler, &fakeEndpointReconciler{})"
  },
  {
    "id" : "94f1f80e-0553-4cca-baaa-09358d8fe611",
    "prId" : 27554,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8b5d4928-35a3-4354-9458-2a6876044a21",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "Pretty sure this was bugged before.  Look a few lines up and you'll see where `expectGroupNames` is set to have four names.  `expectVersions` has four values.\n",
        "createdAt" : "2016-06-16T20:06:40Z",
        "updatedAt" : "2016-07-25T12:23:27Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "6f7007afc5b99f7ecceae20d22f794077362c884",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +499,503 @@\t}\n\n\tassert.Equal(4, len(groupList.Groups))\n\tfor _, group := range groupList.Groups {\n\t\tif !expectGroupNames.Has(group.Name) {"
  },
  {
    "id" : "84f23d23-591e-41a1-bfd0-8bc9c9f48a8a",
    "prId" : 24006,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ac4b5c64-597a-4cc1-8f24-b81a7708312c",
        "parentId" : null,
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "I address the TODO (I think it's left silently by etune months ago :). \n\nGithub's diff is misleading, the only change is the master is initialized by newLimitedMaster() instead of newMaster().\n",
        "createdAt" : "2016-04-07T23:35:52Z",
        "updatedAt" : "2016-04-12T17:09:46Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      },
      {
        "id" : "1a5ba136-767a-4289-bd56-ca8cfc6b8239",
        "parentId" : "ac4b5c64-597a-4cc1-8f24-b81a7708312c",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Thanks for this. I didn't realize that this had gotten commented out.\n",
        "createdAt" : "2016-04-08T00:07:20Z",
        "updatedAt" : "2016-04-12T17:09:46Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "1f473269-89b1-414e-8b4f-8df730268a3a",
        "parentId" : "ac4b5c64-597a-4cc1-8f24-b81a7708312c",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Is there an issue filed about reenabling this?\n",
        "createdAt" : "2016-04-08T00:07:37Z",
        "updatedAt" : "2016-04-12T17:09:46Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "98bd5f49-92a4-42ce-9808-8cc658c56256",
        "parentId" : "ac4b5c64-597a-4cc1-8f24-b81a7708312c",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "I couldn't find any.\n",
        "createdAt" : "2016-04-08T00:11:04Z",
        "updatedAt" : "2016-04-12T17:09:46Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "f315ffd8b16d93b857197f5addb0f190a23352eb",
    "line" : 73,
    "diffHunk" : "@@ -1,1 +393,397 @@}\n\nfunc TestDiscoveryAtAPIS(t *testing.T) {\n\tmaster, etcdserver, config, assert := newLimitedMaster(t)\n\tdefer etcdserver.Terminate(t)"
  },
  {
    "id" : "5bddae65-f9b0-464b-960d-e66d6adcb6de",
    "prId" : 23208,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4bdb2d07-2f66-4a0e-bac5-f79d4eca2427",
        "parentId" : null,
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "Config now has duplicated APIResourceConfigSource (config.APIResourceConfigSource and config.StorageDestinations.APIResourceConfigSource). We should try to get rid of the duplication. \n\nWe can do it in another PR. Please add a TODO.\n",
        "createdAt" : "2016-04-04T21:49:26Z",
        "updatedAt" : "2016-04-21T12:18:58Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      },
      {
        "id" : "e03fb8cf-ff08-4744-b8e3-bfe8366be0ea",
        "parentId" : "4bdb2d07-2f66-4a0e-bac5-f79d4eca2427",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "> Config now has duplicated APIResourceConfigSource (config.APIResourceConfigSource and config.StorageDestinations.APIResourceConfigSource). We should try to get rid of the duplication.\n> \n> We can do it in another PR. Please add a TODO.\n\nThey control slightly different things. The one directly in the genericapiserver.Config controls which REST APIs are exposed.  The one inside of the `StorageDestinations` indicates which storage is available.  They happen to be the same now, but in a more complete view of the config they can be different.\n",
        "createdAt" : "2016-04-05T20:58:05Z",
        "updatedAt" : "2016-04-21T12:18:58Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "6670b73b18e631b57760d1a1800485d05faf39bb",
    "line" : null,
    "diffHunk" : "@@ -1,1 +93,97 @@\n\tconfig.StorageFactory = storageFactory\n\tconfig.APIResourceConfigSource = DefaultAPIResourceConfigSource()\n\tconfig.PublicAddress = net.ParseIP(\"192.168.10.4\")\n\tconfig.Serializer = api.Codecs"
  },
  {
    "id" : "7988872c-c963-42d1-8605-2c267d8766ef",
    "prId" : 22824,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9763675f-4613-4f6d-9f63-5ef61368caee",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "I don't understand how this can work, this sets it in the config but the controller checks it in the master?\n",
        "createdAt" : "2016-03-23T23:18:16Z",
        "updatedAt" : "2016-03-24T22:44:38Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "4d4ebfae-f86b-4997-ab5b-7a2add8f911f",
        "parentId" : "9763675f-4613-4f6d-9f63-5ef61368caee",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Oh I see, this is pre-construction. Nevermind, sorry.\n",
        "createdAt" : "2016-03-23T23:20:02Z",
        "updatedAt" : "2016-03-24T22:44:38Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "29475633-30ce-43dc-baee-8c69ae0259d4",
        "parentId" : "9763675f-4613-4f6d-9f63-5ef61368caee",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Can you add to the comment why exactly this makes tests flaky?\n",
        "createdAt" : "2016-03-23T23:22:03Z",
        "updatedAt" : "2016-03-24T22:44:38Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "fd4b805f-7895-46c6-a4f9-a74d9756eb85",
        "parentId" : "9763675f-4613-4f6d-9f63-5ef61368caee",
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "expanded.\n",
        "createdAt" : "2016-03-24T22:44:47Z",
        "updatedAt" : "2016-03-24T22:44:47Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "1f5b4b8802d49c08af673699324d0cb7835c4a19",
    "line" : null,
    "diffHunk" : "@@ -1,1 +104,108 @@\t// to validate that it's actually been run, but for now we don't\n\t// run the sync routine and register types manually.\n\tconfig.disableThirdPartyControllerForTesting = true\n\n\tmaster, err := New(&config)"
  },
  {
    "id" : "3602abcf-9724-4456-9216-a1ec6b55e03f",
    "prId" : 21009,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4c93cdab-7362-4ed4-b450-0afbd3c528cf",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "/api/v1?\n",
        "createdAt" : "2016-02-18T19:57:21Z",
        "updatedAt" : "2016-02-19T23:05:29Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "356a1c25-ca0a-4266-a9e8-4cbd83b8778b",
        "parentId" : "4c93cdab-7362-4ed4-b450-0afbd3c528cf",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "Added.\n",
        "createdAt" : "2016-02-19T06:11:05Z",
        "updatedAt" : "2016-02-19T23:05:29Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "39838745e5ede8b5b9b51c3b5680aca441fd6938",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +277,281 @@\tassert.NoError(decodeResponse(resp, &apiVersions))\n\tassert.Equal(apiVersions.APIVersion, \"\")\n\n\t// /api/v1 exists in release-1.1\n\tresp, err = http.Get(server.URL + \"/api/v1\")"
  },
  {
    "id" : "dcd5c4b1-e9ac-42d4-be28-f0238a5e06f9",
    "prId" : 21009,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8218890b-246e-4f3f-95c6-3e7eb0e4029c",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Does this test fail without your changes?\n",
        "createdAt" : "2016-02-18T19:57:35Z",
        "updatedAt" : "2016-02-19T23:05:29Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "1b38b393-c5b3-4bd4-8517-b3af1f3c31a2",
        "parentId" : "8218890b-246e-4f3f-95c6-3e7eb0e4029c",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "Yes. Before this PR, all discovery objects returned by server has \"apiVersion\" field equal to \"v1\".\n",
        "createdAt" : "2016-02-18T20:32:37Z",
        "updatedAt" : "2016-02-19T23:05:29Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "39838745e5ede8b5b9b51c3b5680aca441fd6938",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +263,267 @@// Because we need to be backwards compatible with release 1.1, at endpoints\n// that exist in release 1.1, the responses should have empty APIVersion.\nfunc TestAPIVersionOfDiscoveryEndpoints(t *testing.T) {\n\tmaster, etcdserver, _, assert := newMaster(t)\n\tdefer etcdserver.Terminate(t)"
  },
  {
    "id" : "09b4ccf6-b4c9-4bbc-844f-6d9db24f0301",
    "prId" : 21009,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e4aa8ce1-fc14-4f96-9537-8f482390d626",
        "parentId" : null,
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "Comments are fixed. PTAL. Thanks.\n",
        "createdAt" : "2016-02-19T23:05:59Z",
        "updatedAt" : "2016-02-19T23:05:59Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      },
      {
        "id" : "8ddb2915-6cae-47c6-bbce-eb3d66b9dbd6",
        "parentId" : "e4aa8ce1-fc14-4f96-9537-8f482390d626",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "Oh, I just saw you've applied the label. Thanks.\n",
        "createdAt" : "2016-02-19T23:06:26Z",
        "updatedAt" : "2016-02-19T23:06:26Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "39838745e5ede8b5b9b51c3b5680aca441fd6938",
    "line" : 67,
    "diffHunk" : "@@ -1,1 +324,328 @@\tassert.Equal(group.APIVersion, \"v1\")\n\n\t// apis/autoscaling/v1 doesn't exist in release-1.1, so the APIVersion field\n\t// should be non-empty in the results returned by the server.\n"
  },
  {
    "id" : "9361c9bc-9d16-4bca-9105-826520ef4d91",
    "prId" : 18484,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d7be0ac1-4dce-4239-8e36-534fbfec86bd",
        "parentId" : null,
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "@nikhiljindal, I think this is the test you'd like to add.\n",
        "createdAt" : "2015-12-17T06:19:07Z",
        "updatedAt" : "2015-12-18T22:06:13Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      },
      {
        "id" : "ae5623cb-49bb-47e7-8148-1b2b21968d09",
        "parentId" : "d7be0ac1-4dce-4239-8e36-534fbfec86bd",
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "Yes! Thanks @brendandburns for adding it.\n",
        "createdAt" : "2015-12-17T21:22:27Z",
        "updatedAt" : "2015-12-18T22:06:13Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      }
    ],
    "commit" : "e594407ab53ab78a94e85fd43885f666784eb718",
    "line" : null,
    "diffHunk" : "@@ -1,1 +345,349 @@\n\tthirdPartyGV := unversioned.GroupVersionForDiscovery{GroupVersion: \"company.com/v1\", Version: \"v1\"}\n\tmaster.thirdPartyResources[\"/apis/company.com/v1\"] = thirdPartyEntry{\n\t\tnil,\n\t\tunversioned.APIGroup{"
  },
  {
    "id" : "778548ed-e628-46ce-865a-a8dfe7013678",
    "prId" : 17378,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fdfcef38-9fc4-49c3-a03d-708d76d7a347",
        "parentId" : null,
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "looks like gofmt or some weird tab insertion here the change appears unrelated. \n",
        "createdAt" : "2015-11-18T03:37:21Z",
        "updatedAt" : "2015-11-19T09:06:07Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      },
      {
        "id" : "fe27f117-0913-451d-a5f7-17520597b404",
        "parentId" : "fdfcef38-9fc4-49c3-a03d-708d76d7a347",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "I'm actually fixing the test here.\nWhat I did is I opaqued the body of for loop into func() {}(), to make deferred functions to really be called at the end of the loop, not to have all of them be run at the end of the test.\nSo this is WAI.\n",
        "createdAt" : "2015-11-18T08:17:23Z",
        "updatedAt" : "2015-11-19T09:06:07Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "514c41c15725671149329d009aa44ecb1233711f",
    "line" : 66,
    "diffHunk" : "@@ -1,1 +537,541 @@\t\t\t}\n\n\t\t\tresp, err := http.Get(server.URL + \"/apis/company.com/\" + version + \"/namespaces/default/foos\")\n\t\t\tif !assert.NoError(err) {\n\t\t\t\treturn"
  },
  {
    "id" : "0061a3bb-7a97-47b6-86dd-d1a4c9de4118",
    "prId" : 17378,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b1459e64-ebd1-458d-bce5-20432e4e2ae8",
        "parentId" : null,
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "this change appears unrelated. \n",
        "createdAt" : "2015-11-18T03:39:46Z",
        "updatedAt" : "2015-11-19T09:06:07Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      },
      {
        "id" : "e1889fd5-d350-4c96-ab02-2d59d18eb5dd",
        "parentId" : "b1459e64-ebd1-458d-bce5-20432e4e2ae8",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Not really - before when we were using FakeEtcdClient - we were guaranteed the order of items in the returned list. This is no longer the case with real etcd - so we need to sort them before comparing them - there is a comment added above.\n",
        "createdAt" : "2015-11-18T08:18:23Z",
        "updatedAt" : "2015-11-19T09:06:07Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "bf71437a-1478-4552-a264-a977afc17c57",
        "parentId" : "b1459e64-ebd1-458d-bce5-20432e4e2ae8",
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "k\n",
        "createdAt" : "2015-11-18T15:34:17Z",
        "updatedAt" : "2015-11-19T09:06:07Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      }
    ],
    "commit" : "514c41c15725671149329d009aa44ecb1233711f",
    "line" : 122,
    "diffHunk" : "@@ -1,1 +566,570 @@\t\t\t// The order of elements in LIST is not guaranteed.\n\t\t\tmapping := make(map[string]int)\n\t\t\tfor ix := range test.items {\n\t\t\t\tmapping[test.items[ix].Name] = ix\n\t\t\t}"
  },
  {
    "id" : "cfc9593f-829b-4b13-85e1-b4b1c54b509c",
    "prId" : 17378,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a8768a18-828f-4466-87ee-dd557abcbd46",
        "parentId" : null,
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "//TODO convert to storage here. \n",
        "createdAt" : "2015-11-18T03:40:26Z",
        "updatedAt" : "2015-11-19T09:06:07Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      },
      {
        "id" : "98d27a80-77a0-46eb-bd17-fe9904f24e8c",
        "parentId" : "a8768a18-828f-4466-87ee-dd557abcbd46",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Done.\n",
        "createdAt" : "2015-11-18T08:19:23Z",
        "updatedAt" : "2015-11-19T09:06:07Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "514c41c15725671149329d009aa44ecb1233711f",
    "line" : null,
    "diffHunk" : "@@ -1,1 +611,615 @@\n// TODO: Convert to storage.Interface.\nfunc setupEtcdList(client tools.EtcdClient, path string, list []Foo) error {\n\tfor _, obj := range list {\n\t\tif err := storeToEtcd(client, path+\"/\"+obj.Name, obj.Name, obj); err != nil {"
  },
  {
    "id" : "2a64720f-9916-474c-a45d-957f0003b032",
    "prId" : 17378,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e5c6a859-590c-4ff6-b9c7-3282fd09652a",
        "parentId" : null,
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "Won't this exit the tests prematurely now? 1st entry has empty items. \n",
        "createdAt" : "2015-11-18T15:24:04Z",
        "updatedAt" : "2015-11-19T09:06:07Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      },
      {
        "id" : "eb38dfc7-f32e-41ca-9bfd-7fe02a35375f",
        "parentId" : "e5c6a859-590c-4ff6-b9c7-3282fd09652a",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "No - it's fine. It is just exiting the function, which is like \"continue in a loop\". So that works fine.\n",
        "createdAt" : "2015-11-19T08:19:34Z",
        "updatedAt" : "2015-11-19T09:06:07Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "514c41c15725671149329d009aa44ecb1233711f",
    "line" : 96,
    "diffHunk" : "@@ -1,1 +557,561 @@\t\t\t\t\tt.Errorf(\"expected no items, saw: %v\", list.Items)\n\t\t\t\t}\n\t\t\t\treturn\n\t\t\t}\n"
  },
  {
    "id" : "f2bd2145-705a-4aad-a955-e4f9cc8212b6",
    "prId" : 17378,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f07c0bb9-2568-4829-90ec-2ba6769792df",
        "parentId" : null,
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "Might want to denote that you're ensuring order so this function passes. \n",
        "createdAt" : "2015-11-18T15:35:25Z",
        "updatedAt" : "2015-11-19T09:06:07Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      },
      {
        "id" : "9dd30477-d8b7-4c01-983d-949a9605fc90",
        "parentId" : "f07c0bb9-2568-4829-90ec-2ba6769792df",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Done.\n",
        "createdAt" : "2015-11-19T09:01:26Z",
        "updatedAt" : "2015-11-19T09:06:07Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "514c41c15725671149329d009aa44ecb1233711f",
    "line" : null,
    "diffHunk" : "@@ -1,1 +580,584 @@\t\t\t\t// We endure the order of items by sorting them (using 'mapping')\n\t\t\t\t// so that this function passes.\n\t\t\t\tif !reflect.DeepEqual(list.Items[ix], expectedObj) {\n\t\t\t\t\tt.Errorf(\"expected:\\n%#v\\nsaw:\\n%#v\\n\", expectedObj, list.Items[ix])\n\t\t\t\t}"
  },
  {
    "id" : "70b06ee7-a7fe-45b1-9b90-8770d2282384",
    "prId" : 17374,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9e73e99a-fd4e-4be0-aca3-e6d828a71e7d",
        "parentId" : null,
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "I think it's just the github diff, but the formatting on this line appears odd. \n",
        "createdAt" : "2015-11-17T14:30:04Z",
        "updatedAt" : "2015-11-17T14:42:40Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      },
      {
        "id" : "b496b250-7ab0-41d2-a922-108b5693e170",
        "parentId" : "9e73e99a-fd4e-4be0-aca3-e6d828a71e7d",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "I moved all arguments to the separate line - does it sound ok?\n",
        "createdAt" : "2015-11-17T14:31:34Z",
        "updatedAt" : "2015-11-17T14:42:40Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "a06ecebc71f6d4de8ad715a559f7cdc9de447663",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +65,69 @@\tstorageVersions := make(map[string]string)\n\tstorageDestinations := NewStorageDestinations()\n\tstorageDestinations.AddAPIGroup(\n\t\t\"\", etcdstorage.NewEtcdStorage(server.Client, testapi.Default.Codec(), etcdtest.PathPrefix()))\n\tstorageDestinations.AddAPIGroup("
  },
  {
    "id" : "5376187f-685a-4e14-9904-c4c1ae19e920",
    "prId" : 17374,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f8e93f22-beea-4a41-93b2-8579bfce5e5a",
        "parentId" : null,
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "perhaps a comment on why 3.  \n",
        "createdAt" : "2015-11-17T14:31:42Z",
        "updatedAt" : "2015-11-17T14:42:40Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      },
      {
        "id" : "d6688d08-4fc9-48c7-8049-a8585761821a",
        "parentId" : "f8e93f22-beea-4a41-93b2-8579bfce5e5a",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Done.\n",
        "createdAt" : "2015-11-17T14:42:44Z",
        "updatedAt" : "2015-11-17T14:42:44Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "a06ecebc71f6d4de8ad715a559f7cdc9de447663",
    "line" : null,
    "diffHunk" : "@@ -1,1 +148,152 @@\n\t// Expected servers to validate: scheduler, controller-manager and etcd.\n\tassert.Equal(3, len(servers), \"unexpected server list: %#v\", servers)\n\n\tfor _, server := range []string{\"scheduler\", \"controller-manager\", \"etcd-0\"} {"
  }
]