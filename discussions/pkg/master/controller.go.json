[
  {
    "id" : "8237db8e-4a9d-4c07-973f-f0a91357212a",
    "prId" : 74668,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/74668#pullrequestreview-209499100",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "149e4401-d177-453a-898b-c16a2d103748",
        "parentId" : null,
        "authorId" : "09e31512-b413-47a1-bc83-20b5a77064ee",
        "body" : "Should this be a failure condition of the poststarthook? What is the expected behavior if we fail to remove an endpoint properly during the boot cycle?\r\n",
        "createdAt" : "2019-02-28T18:06:43Z",
        "updatedAt" : "2019-03-01T09:46:30Z",
        "lastEditedBy" : "09e31512-b413-47a1-bc83-20b5a77064ee",
        "tags" : [
        ]
      },
      {
        "id" : "9d788ba4-2b9c-40d6-823f-5095ce3b978c",
        "parentId" : "149e4401-d177-453a-898b-c16a2d103748",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "it wasn't before, compare 15 lines down.",
        "createdAt" : "2019-03-01T09:38:05Z",
        "updatedAt" : "2019-03-01T09:46:30Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "fa59c5bc-e59a-48bd-a2e4-c74a8ad75976",
        "parentId" : "149e4401-d177-453a-898b-c16a2d103748",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "also this line is best effort. If it fails (e.g. due to etcd connection errors), it has no consequences. And if it fails, we probably have much worse problems than dangling endpoints. I would leave it with an error messages.\r\n\r\n If we need more advanced logic, let's move that to a follow-up. I would perfer to keep this PR contained.",
        "createdAt" : "2019-03-01T09:45:46Z",
        "updatedAt" : "2019-03-01T09:46:30Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "2a9a9fa155e92d0bd7f4eb85d843cfa14b830cca",
    "line" : 47,
    "diffHunk" : "@@ -1,1 +145,149 @@\t// Reconcile during first run removing itself until server is ready.\n\tendpointPorts := createEndpointPortSpec(c.PublicServicePort, \"https\", c.ExtraEndpointPorts)\n\tif err := c.EndpointReconciler.RemoveEndpoints(kubernetesServiceName, c.PublicIP, endpointPorts); err != nil {\n\t\tklog.Errorf(\"Unable to remove old endpoints from kubernetes service: %v\", err)\n\t}"
  },
  {
    "id" : "27e77c6a-77fa-413f-9d59-f2b62b81e2c1",
    "prId" : 63746,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/63746#pullrequestreview-119633500",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b6324967-25ae-4f2b-8154-df7610ba1ffc",
        "parentId" : null,
        "authorId" : "33ab9fbe-6f55-45c0-a58d-be01aec201d9",
        "body" : "Add a log would be better.",
        "createdAt" : "2018-05-12T14:16:42Z",
        "updatedAt" : "2018-05-12T14:20:05Z",
        "lastEditedBy" : "33ab9fbe-6f55-45c0-a58d-be01aec201d9",
        "tags" : [
        ]
      },
      {
        "id" : "437b1720-2ac6-46b1-b1ef-ef60650227b9",
        "parentId" : "b6324967-25ae-4f2b-8154-df7610ba1ffc",
        "authorId" : "3f681241-1a29-4fbf-bddc-1df89a871240",
        "body" : "This change allows apiserver to shutdown, no much point in logging at this point",
        "createdAt" : "2018-05-12T18:29:47Z",
        "updatedAt" : "2018-05-12T18:29:47Z",
        "lastEditedBy" : "3f681241-1a29-4fbf-bddc-1df89a871240",
        "tags" : [
        ]
      }
    ],
    "commit" : "91cd5aa93a519630af29d48e8e396cec5ada2bef",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +162,166 @@\tselect {\n\tcase <-finishedReconciling:\n\t\t// done\n\tcase <-time.After(2 * c.EndpointInterval):\n\t\t// don't block server shutdown forever if we can't reach etcd to remove ourselves"
  },
  {
    "id" : "69680e6a-c264-4ef8-9597-f23d6c859778",
    "prId" : 63746,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/63746#pullrequestreview-119627534",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5ae94936-da6d-4383-8bee-1b2106a95ca3",
        "parentId" : null,
        "authorId" : "33ab9fbe-6f55-45c0-a58d-be01aec201d9",
        "body" : "Log just need have more detail error information.  ",
        "createdAt" : "2018-05-12T14:19:29Z",
        "updatedAt" : "2018-05-12T14:20:05Z",
        "lastEditedBy" : "33ab9fbe-6f55-45c0-a58d-be01aec201d9",
        "tags" : [
        ]
      }
    ],
    "commit" : "91cd5aa93a519630af29d48e8e396cec5ada2bef",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +156,160 @@\t\tglog.Infof(\"Shutting down kubernetes service endpoint reconciler\")\n\t\tif err := c.EndpointReconciler.StopReconciling(\"kubernetes\", c.PublicIP, endpointPorts); err != nil {\n\t\t\tglog.Error(err)\n\t\t}\n\t}()"
  },
  {
    "id" : "96ea65d2-22da-4914-82f6-19e8517ad5fd",
    "prId" : 63746,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/63746#pullrequestreview-128996966",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e4eea4a4-5c2b-4c05-8198-38bca4838291",
        "parentId" : null,
        "authorId" : "093f4806-3f92-4191-a80b-4e6cf3d6ffc0",
        "body" : "not sure how 2 is chosen here.",
        "createdAt" : "2018-05-14T20:57:45Z",
        "updatedAt" : "2018-05-14T20:57:49Z",
        "lastEditedBy" : "093f4806-3f92-4191-a80b-4e6cf3d6ffc0",
        "tags" : [
        ]
      },
      {
        "id" : "868ea77e-c57e-4617-a05a-4b3ee4d0bb24",
        "parentId" : "e4eea4a4-5c2b-4c05-8198-38bca4838291",
        "authorId" : "3f681241-1a29-4fbf-bddc-1df89a871240",
        "body" : "purpose of the patch is to eventually give up on writing reconcile state when we are about to shut down kubelet.  Waiting 2x of normal time is gives reconciler enough time to sync state, but also doesn't make us wait too long if write to etcd can't happen.",
        "createdAt" : "2018-05-16T07:10:16Z",
        "updatedAt" : "2018-05-16T07:10:16Z",
        "lastEditedBy" : "3f681241-1a29-4fbf-bddc-1df89a871240",
        "tags" : [
        ]
      },
      {
        "id" : "f94be97c-bf09-4ac7-bb6e-87d982e8c749",
        "parentId" : "e4eea4a4-5c2b-4c05-8198-38bca4838291",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "After waiting 2x the normal time we can be pretty sure we've lost the lease and there's not much point in waiting longer.",
        "createdAt" : "2018-06-14T22:51:46Z",
        "updatedAt" : "2018-06-14T22:51:47Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "91cd5aa93a519630af29d48e8e396cec5ada2bef",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +163,167 @@\tcase <-finishedReconciling:\n\t\t// done\n\tcase <-time.After(2 * c.EndpointInterval):\n\t\t// don't block server shutdown forever if we can't reach etcd to remove ourselves\n\t\tglog.Warning(\"StopReconciling() timed out\")"
  },
  {
    "id" : "47c90b6a-aeea-4b3e-86e8-5559eef20571",
    "prId" : 49850,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/49850#pullrequestreview-58153425",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "17e88087-0755-49e0-b2f9-49e58a38ae99",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "Do we need this for tests to pass?  Better to leave it defaulted if we can.",
        "createdAt" : "2017-08-22T21:50:41Z",
        "updatedAt" : "2017-08-25T10:28:55Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "0c9bdf5f-2366-4f08-862b-b7f97377170c",
        "parentId" : "17e88087-0755-49e0-b2f9-49e58a38ae99",
        "authorId" : "f2d7a78e-606f-4060-903e-a21198d7084e",
        "body" : "> Do we need this for tests to pass?\r\n\r\nYes, currently we should specify` SessionAffinityConfig` when `SessionAffinity` == `api.ServiceAffinityClientIP`",
        "createdAt" : "2017-08-23T02:56:14Z",
        "updatedAt" : "2017-08-25T10:28:55Z",
        "lastEditedBy" : "f2d7a78e-606f-4060-903e-a21198d7084e",
        "tags" : [
        ]
      },
      {
        "id" : "e0d7984f-6854-4a73-8778-ea619c236505",
        "parentId" : "17e88087-0755-49e0-b2f9-49e58a38ae99",
        "authorId" : "f2d7a78e-606f-4060-903e-a21198d7084e",
        "body" : "Since we have some troubles in setting default value in `pkg/api/v1/defaults.go`, I just can't find a good place to set the default values.",
        "createdAt" : "2017-08-23T03:20:46Z",
        "updatedAt" : "2017-08-25T10:28:55Z",
        "lastEditedBy" : "f2d7a78e-606f-4060-903e-a21198d7084e",
        "tags" : [
        ]
      },
      {
        "id" : "fcb0d01e-b8e5-4a2a-9f79-0901e97db55b",
        "parentId" : "17e88087-0755-49e0-b2f9-49e58a38ae99",
        "authorId" : "f2d7a78e-606f-4060-903e-a21198d7084e",
        "body" : "Do you have any suggestions or does it really matter?",
        "createdAt" : "2017-08-23T04:00:17Z",
        "updatedAt" : "2017-08-25T10:28:55Z",
        "lastEditedBy" : "f2d7a78e-606f-4060-903e-a21198d7084e",
        "tags" : [
        ]
      },
      {
        "id" : "e09cbc02-76da-4fc3-974d-fd7bc020ccfd",
        "parentId" : "17e88087-0755-49e0-b2f9-49e58a38ae99",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "Mostly was asking to understand.  In real runs, the defaulting logic WILL apply.  Tests might not go through that, and this is not injected (created internally), so OK.",
        "createdAt" : "2017-08-23T17:24:20Z",
        "updatedAt" : "2017-08-25T10:28:55Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "ad73fe68a7c3f6380337f100bf30542776d9bcf0",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +265,269 @@\t\t\tSessionAffinity: api.ServiceAffinityClientIP,\n\t\t\tType:            serviceType,\n\t\t\tSessionAffinityConfig: &api.SessionAffinityConfig{\n\t\t\t\tClientIP: &api.ClientIPConfig{\n\t\t\t\t\tTimeoutSeconds: &timeoutSeconds,"
  },
  {
    "id" : "68fea554-8441-4619-8ec8-90e12dbe4c79",
    "prId" : 37227,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/37227#pullrequestreview-9520971",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7c7f3486-fa7f-4b94-8035-52dcaa1a9b44",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "This assumes that always ServiceIP != nil, maybe worth documenting somewhere.",
        "createdAt" : "2016-11-21T18:37:45Z",
        "updatedAt" : "2016-12-01T14:14:45Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "cd9af433-bd5c-4fcf-93ca-84fa3ade7bed",
        "parentId" : "7c7f3486-fa7f-4b94-8035-52dcaa1a9b44",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "> This assumes that always ServiceIP != nil, maybe worth documenting somewhere.\r\n\r\nwill godoc. it's alway non-nil.",
        "createdAt" : "2016-11-21T19:12:04Z",
        "updatedAt" : "2016-12-01T14:14:45Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "ea8ad3e349817b25a9e9e87318bdbc9470a54e8e",
    "line" : 79,
    "diffHunk" : "@@ -1,1 +172,176 @@\t\treturn err\n\t}\n\n\tservicePorts, serviceType := createPortAndServiceSpec(c.ServicePort, c.KubernetesServiceNodePort, \"https\", c.ExtraServicePorts)\n\tif err := c.CreateOrUpdateMasterServiceIfNeeded(kubernetesServiceName, c.ServiceIP, servicePorts, serviceType, reconcile); err != nil {"
  },
  {
    "id" : "f7c6f2a2-8582-4f92-bfd4-c385f3f1871f",
    "prId" : 37227,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/37227#pullrequestreview-9520873",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3b3362ad-e613-4dbc-a18c-394685b41a77",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "I don't understand this change - can you please clarify? Wouldn't this be an infinite loop?",
        "createdAt" : "2016-11-21T18:39:27Z",
        "updatedAt" : "2016-12-01T14:14:45Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      },
      {
        "id" : "874ffb34-5c88-4299-949e-7762f474fdda",
        "parentId" : "3b3362ad-e613-4dbc-a18c-394685b41a77",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "> I don't understand this change - can you please clarify? Wouldn't this be an infinite loop?\r\n\r\nThe next time we call in, we should take the first `if` since the `Get` is successful.  Even if we hit a lagging follower, we'll eventually free up and the reconcile logic that should run the first time will run.",
        "createdAt" : "2016-11-21T19:11:42Z",
        "updatedAt" : "2016-12-01T14:14:45Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "ea8ad3e349817b25a9e9e87318bdbc9470a54e8e",
    "line" : 128,
    "diffHunk" : "@@ -1,1 +267,271 @@\t_, err := c.ServiceClient.Services(api.NamespaceDefault).Create(svc)\n\tif errors.IsAlreadyExists(err) {\n\t\treturn c.CreateOrUpdateMasterServiceIfNeeded(serviceName, serviceIP, servicePorts, serviceType, reconcile)\n\t}\n\treturn err"
  },
  {
    "id" : "c98d769b-074b-4672-b7f6-03fee0746407",
    "prId" : 35923,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/35923#pullrequestreview-6599350",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f91c8319-2882-4015-a4d7-e69626b89bcf",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "Do we really need the APIServer prefix? If yes, we should have it in the Master struct as well.\n",
        "createdAt" : "2016-11-01T08:07:51Z",
        "updatedAt" : "2016-11-03T15:50:11Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "f019db58-aa07-4919-9410-8264d3538f38",
        "parentId" : "f91c8319-2882-4015-a4d7-e69626b89bcf",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "> Do we really need the APIServer prefix? If yes, we should have it in the Master struct as well.\n\nYeah, that's what its for.  Follow-up for when we clean up the items and docs here?\n",
        "createdAt" : "2016-11-01T11:47:26Z",
        "updatedAt" : "2016-11-03T15:50:11Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "d82f98c9b3dbbdf7daed2a17fb44ecc3ac7d23ad",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +97,101 @@\t\tPublicIP: c.GenericConfig.PublicAddress,\n\n\t\tServiceIP:                 c.APIServerServiceIP,\n\t\tServicePort:               c.APIServerServicePort,\n\t\tExtraServicePorts:         c.ExtraServicePorts,"
  },
  {
    "id" : "de5a1c88-5912-44fc-9188-a5d47c0802ee",
    "prId" : 26915,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "999b7832-215e-4e75-aa2e-cf44830da1a1",
        "parentId" : null,
        "authorId" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "body" : "Nit: add some indication of what the IP in the arguments is.\n",
        "createdAt" : "2016-06-06T22:10:19Z",
        "updatedAt" : "2016-06-06T22:10:19Z",
        "lastEditedBy" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "tags" : [
        ]
      },
      {
        "id" : "0797bbc7-f90f-45d8-83a7-3bbd6cf43c01",
        "parentId" : "999b7832-215e-4e75-aa2e-cf44830da1a1",
        "authorId" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "body" : "@DirectXMan12 In your original PR, the IP argument was changed to an array -- does the new interface need to have that signature change?\n",
        "createdAt" : "2016-06-06T22:11:09Z",
        "updatedAt" : "2016-06-06T22:11:09Z",
        "lastEditedBy" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "tags" : [
        ]
      },
      {
        "id" : "9b7d2405-e7d6-4dda-875a-85a288d72e65",
        "parentId" : "999b7832-215e-4e75-aa2e-cf44830da1a1",
        "authorId" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "body" : "Will change if needed. Lmk\n\nOn Monday, June 6, 2016, Paul Morie notifications@github.com wrote:\n\n> In pkg/master/controller.go\n> https://github.com/kubernetes/kubernetes/pull/26915#discussion_r65979052\n> :\n> \n> > @@ -240,6 +238,39 @@ func (c *Controller) CreateOrUpdateMasterServiceIfNeeded(serviceName string, ser\n> >     return err\n> >  }\n> > \n> > +// EndpointReconciler knows how to reconcile the endpoints for the apiserver service.\n> > +type EndpointReconciler interface {\n> > -   // ReconcileEndpoints sets the endpoints for the given apiserver service (ro or rw).\n> \n> @DirectXMan12 https://github.com/DirectXMan12 In your original PR, the\n> IP argument was changed to an array -- does the new interface need to have\n> that signature change?\n> \n> —\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> https://github.com/kubernetes/kubernetes/pull/26915/files/04ce042ff9cfb32b2c776f755cc7abc886b8a441#r65979052,\n> or mute the thread\n> https://github.com/notifications/unsubscribe/AAABYv-P3P-iMyxTA_NRAMrpDefj00w-ks5qJJs3gaJpZM4IvXB4\n> .\n",
        "createdAt" : "2016-06-06T23:33:31Z",
        "updatedAt" : "2016-06-06T23:33:31Z",
        "lastEditedBy" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "tags" : [
        ]
      },
      {
        "id" : "84fe2336-8730-4b71-a662-9d3400629b6d",
        "parentId" : "999b7832-215e-4e75-aa2e-cf44830da1a1",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "This does seem to be documenting the implementation and not the interface.\nIf you want to amend it, I would focus on fixing that :)\n\nOn Mon, Jun 6, 2016 at 4:33 PM, Andy Goldstein notifications@github.com\nwrote:\n\n> In pkg/master/controller.go\n> https://github.com/kubernetes/kubernetes/pull/26915#discussion_r65988045\n> :\n> \n> > @@ -240,6 +238,39 @@ func (c *Controller) CreateOrUpdateMasterServiceIfNeeded(serviceName string, ser\n> >     return err\n> >  }\n> > \n> > +// EndpointReconciler knows how to reconcile the endpoints for the apiserver service.\n> > +type EndpointReconciler interface {\n> > -   // ReconcileEndpoints sets the endpoints for the given apiserver service (ro or rw).\n> \n> Will change if needed. Lmk\n> … <#m_1155649936887638275_>\n> On Monday, June 6, 2016, Paul Morie **_@**_.***> wrote: In\n> pkg/master/controller.go <#26915 (comment)\n> https://github.com/kubernetes/kubernetes/pull/26915#discussion_r65979052>\n> : > @@ -240,6 +238,39 @@ func (c *Controller)\n> CreateOrUpdateMasterServiceIfNeeded(serviceName string, ser > return err >\n> } > > +// EndpointReconciler knows how to reconcile the endpoints for the\n> apiserver service. > +type EndpointReconciler interface { > + //\n> ReconcileEndpoints sets the endpoints for the given apiserver service (ro\n> or rw). @DirectXMan12 https://github.com/DirectXMan12 <\n> https://github.com/DirectXMan12> In your original PR, the IP argument was\n> changed to an array -- does the new interface need to have that signature\n> change? — You are receiving this because you authored the thread. Reply to\n> this email directly, view it on GitHub <\n> https://github.com/kubernetes/kubernetes/pull/26915/files/04ce042ff9cfb32b2c776f755cc7abc886b8a441#r65979052>,\n> or mute the thread <\n> https://github.com/notifications/unsubscribe/AAABYv-P3P-iMyxTA_NRAMrpDefj00w-ks5qJJs3gaJpZM4IvXB4>\n> .\n> \n> —\n> You are receiving this because you were assigned.\n> Reply to this email directly, view it on GitHub\n> https://github.com/kubernetes/kubernetes/pull/26915/files/04ce042ff9cfb32b2c776f755cc7abc886b8a441#r65988045,\n> or mute the thread\n> https://github.com/notifications/unsubscribe/AAnglu-6KfZZU1mmVTL0xgLKQ8DNCIP-ks5qJK5XgaJpZM4IvXB4\n> .\n",
        "createdAt" : "2016-06-06T23:42:16Z",
        "updatedAt" : "2016-06-06T23:42:16Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "d8397531-14a5-492b-a99f-b846397e448d",
        "parentId" : "999b7832-215e-4e75-aa2e-cf44830da1a1",
        "authorId" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "body" : "@pmorie I don't see the array change in the original PR?\n",
        "createdAt" : "2016-06-07T00:31:25Z",
        "updatedAt" : "2016-06-07T00:31:25Z",
        "lastEditedBy" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "tags" : [
        ]
      },
      {
        "id" : "26d90c57-19e8-4900-815e-c36a488de2a9",
        "parentId" : "999b7832-215e-4e75-aa2e-cf44830da1a1",
        "authorId" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "body" : "@lavalamp follow-up PR for that? Or at least I'm not getting to it today - I'm exhausted.\n",
        "createdAt" : "2016-06-07T00:32:00Z",
        "updatedAt" : "2016-06-07T00:32:00Z",
        "lastEditedBy" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "tags" : [
        ]
      },
      {
        "id" : "d49583d8-bf39-494a-826d-fc05fdd0cecd",
        "parentId" : "999b7832-215e-4e75-aa2e-cf44830da1a1",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "fine with me.\n",
        "createdAt" : "2016-06-07T00:37:06Z",
        "updatedAt" : "2016-06-07T00:37:06Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "04ce042ff9cfb32b2c776f755cc7abc886b8a441",
    "line" : 35,
    "diffHunk" : "@@ -1,1 +241,245 @@// EndpointReconciler knows how to reconcile the endpoints for the apiserver service.\ntype EndpointReconciler interface {\n\t// ReconcileEndpoints sets the endpoints for the given apiserver service (ro or rw).\n\t// ReconcileEndpoints expects that the endpoints objects it manages will all be\n\t// managed only by ReconcileEndpoints; therefore, to understand this, you need only"
  },
  {
    "id" : "18ba68a3-9438-4fa6-8bfc-361e1a15f888",
    "prId" : 15791,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1d2793e1-6a8b-4560-8971-3ffcf3956571",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "my mistake, you need to do the length check separately, or an empty `ports` slice will never reach this check\n",
        "createdAt" : "2015-10-29T14:51:43Z",
        "updatedAt" : "2015-10-29T14:57:06Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "0c4aafaf1ec1bc79d1d1cc9a3e67584fdb8ca6dc",
    "line" : null,
    "diffHunk" : "@@ -1,1 +310,314 @@\t\t}\n\t\tfor i, port := range ports {\n\t\t\tif len(sub.Ports) <= i || port != sub.Ports[i] {\n\t\t\t\tportsCorrect = false\n\t\t\t\tbreak"
  },
  {
    "id" : "4dd729e6-b575-41dc-a250-227847de28a9",
    "prId" : 14871,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "457b80a1-a89b-4019-8f3c-06b8c1dd106b",
        "parentId" : null,
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "It would be clearer to accept a list of additional service ports here instead of tying it to DNS specifically.  Actually, just passing all master ports in this way would be a better factoring.\n",
        "createdAt" : "2015-10-02T18:59:12Z",
        "updatedAt" : "2015-10-13T11:44:32Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "6cd44ff8-8edd-414f-9b74-e7ad94278f26",
        "parentId" : "457b80a1-a89b-4019-8f3c-06b8c1dd106b",
        "authorId" : "6286c537-3c85-43e3-ad73-05d3f9daf521",
        "body" : "I agree - I've got that worked out for the most part and will submit soon\n",
        "createdAt" : "2015-10-02T19:01:23Z",
        "updatedAt" : "2015-10-13T11:44:32Z",
        "lastEditedBy" : "6286c537-3c85-43e3-ad73-05d3f9daf521",
        "tags" : [
        ]
      },
      {
        "id" : "e48eac84-13d1-4fc9-a201-9c76084b0542",
        "parentId" : "457b80a1-a89b-4019-8f3c-06b8c1dd106b",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "Yeah, OK - a more generic factoring would be better - calling it DNS\nspecifically implies that the master is a DNS server.\n\nOn Fri, Oct 2, 2015 at 12:01 PM, Andrew Butcher notifications@github.com\nwrote:\n\n> In pkg/master/controller.go\n> https://github.com/kubernetes/kubernetes/pull/14871#discussion_r41055913\n> :\n> \n> > @@ -60,6 +60,7 @@ type Controller struct {\n> >     ServiceIP         net.IP\n> >     ServicePort       int\n> >     PublicServicePort int\n> > -   ServiceEnableDNS  bool\n> \n> I agree - I've got that worked out for the most part and will submit soon\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/kubernetes/kubernetes/pull/14871/files#r41055913.\n",
        "createdAt" : "2015-10-02T19:05:25Z",
        "updatedAt" : "2015-10-13T11:44:32Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "3ac0ebd5-9fc3-4ff0-ab2e-9efff42ede6f",
        "parentId" : "457b80a1-a89b-4019-8f3c-06b8c1dd106b",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Agreed\n\nOn Oct 2, 2015, at 3:05 PM, Tim Hockin notifications@github.com wrote:\n\nIn pkg/master/controller.go\nhttps://github.com/kubernetes/kubernetes/pull/14871#discussion_r41056334:\n\n> @@ -60,6 +60,7 @@ type Controller struct {\n>   ServiceIP         net.IP\n>   ServicePort       int\n>   PublicServicePort int\n> - ServiceEnableDNS  bool\n\nYeah, OK - a more generic factoring would be better - calling it DNS\nspecifically implies that the master is a DNS server.\n… <#>\nOn Fri, Oct 2, 2015 at 12:01 PM, Andrew Butcher notifications@github.com\nwrote: In pkg/master/controller.go <\nhttps://github.com/kubernetes/kubernetes/pull/14871#discussion_r41055913> :\n\n> @@ -60,6 +60,7 @@ type Controller struct { > ServiceIP net.IP >\n> ServicePort int > PublicServicePort int > + ServiceEnableDNS bool > I agree\n> - I've got that worked out for the most part and will submit soon — Reply\n>   to this email directly or view it on GitHub <\n>   https://github.com/kubernetes/kubernetes/pull/14871/files#r41055913>.\n\n—\nReply to this email directly or view it on GitHub\nhttps://github.com/kubernetes/kubernetes/pull/14871/files#r41056334.\n",
        "createdAt" : "2015-10-02T19:11:01Z",
        "updatedAt" : "2015-10-13T11:44:32Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "a2c97c7b0ebe9cd07edc5eb7240cb4b714da56ed",
    "line" : null,
    "diffHunk" : "@@ -1,1 +64,68 @@\tPublicServicePort         int\n\tKubernetesServiceNodePort int\n\n\trunner *util.Runner\n}"
  },
  {
    "id" : "9ef0f958-ef01-4323-8e7d-170fb9fa4359",
    "prId" : 14871,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "645e1d27-083a-4133-9285-1f522f04f51d",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "In light of the `nodePort` parameter, this reads weird.  It means that you'll start trying to claim additional ports on the nodes, right?  One for every `ExtraServicePort`.  However, you might not have set the `NodePort` field in the `extraServicePorts`.\n",
        "createdAt" : "2015-10-09T19:56:03Z",
        "updatedAt" : "2015-10-13T11:44:32Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "819afb49-f3e0-427a-afbc-5587a9d0d273",
        "parentId" : "645e1d27-083a-4133-9285-1f522f04f51d",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "That's probably something the person setting extraServicePorts needs to be\naware of.  Not sure how else to address that.\n\nOn Fri, Oct 9, 2015 at 3:56 PM, David Eads notifications@github.com wrote:\n\n> In pkg/master/controller.go\n> https://github.com/kubernetes/kubernetes/pull/14871#discussion_r41671544\n> :\n> \n> > ```\n> > }\n> > ```\n> > -   return []api.ServicePort{{Protocol: api.ProtocolTCP,\n> > -       Port:       servicePort,\n> > -       TargetPort: util.NewIntOrStringFromInt(servicePort),\n> > -       NodePort:   nodePort,\n> > -   }}, api.ServiceTypeNodePort\n> > -   if extraServicePorts != nil {\n> > -       servicePorts = append(servicePorts, extraServicePorts...)\n> \n> In light of the nodePort parameter, this reads weird. It means that\n> you'll start trying to claim additional ports on the nodes, right? One for\n> every ExtraServicePort. However, you might not have set the NodePort\n> field in the extraServicePorts.\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/kubernetes/kubernetes/pull/14871/files#r41671544.\n",
        "createdAt" : "2015-10-09T19:57:21Z",
        "updatedAt" : "2015-10-13T11:44:32Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "a2c97c7b0ebe9cd07edc5eb7240cb4b714da56ed",
    "line" : null,
    "diffHunk" : "@@ -1,1 +161,165 @@\t}\n\tif extraServicePorts != nil {\n\t\tservicePorts = append(servicePorts, extraServicePorts...)\n\t}\n\treturn servicePorts, serviceType"
  },
  {
    "id" : "fa164a03-61c0-426a-a747-e5dc9bf025b3",
    "prId" : 13978,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4b7a8d92-8775-4623-bc20-c422f9f5edde",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "s/Api/API/g\n",
        "createdAt" : "2015-09-18T03:07:03Z",
        "updatedAt" : "2015-10-06T00:35:01Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "be2a2ec3cdaa39f47f0122a35255144f191632b3",
    "line" : null,
    "diffHunk" : "@@ -1,1 +64,68 @@\n\trunner *util.Runner\n}\n\n// Start begins the core controller loops that must exist for bootstrapping"
  },
  {
    "id" : "b9fe9ef0-b8a2-4329-a826-a397d24dd016",
    "prId" : 13978,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9cc30231-4157-4a72-8856-92d01086a6b0",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "is it incorrect to set `ClusterIP` if `Type` is not `ServiceTypeClusterIP`? What IP does a `NodePort` service get? The serving cert the API uses has to include that IP, so if it isn't going to get the first IP in the service IP range, all the cert generation paths for the various setups would need to take that into account.\n",
        "createdAt" : "2015-09-18T03:24:42Z",
        "updatedAt" : "2015-10-06T00:35:01Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "5d167047-1d34-4220-a3bd-63ce568619f7",
        "parentId" : "9cc30231-4157-4a72-8856-92d01086a6b0",
        "authorId" : "a5be0b3b-3db2-4c99-a598-55f8708db5df",
        "body" : "I guess by incorrect, you are saying its unnecessary... I think i see your point.  IF so, then I would say that this semantic be reflected in the api types, if possible.  but i will dive a little into this tomorrow.  its a good catch. \n",
        "createdAt" : "2015-09-18T03:58:37Z",
        "updatedAt" : "2015-10-06T00:35:01Z",
        "lastEditedBy" : "a5be0b3b-3db2-4c99-a598-55f8708db5df",
        "tags" : [
        ]
      },
      {
        "id" : "243d1c40-501a-47ee-a6c2-40f1fe882b42",
        "parentId" : "9cc30231-4157-4a72-8856-92d01086a6b0",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "I'm just concerned that switching to nodePort may have more ripples than originally thought... IP changes, which means cert changes, which means setup scripts have to change, etc\n",
        "createdAt" : "2015-09-18T04:02:02Z",
        "updatedAt" : "2015-10-06T00:35:01Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "abc854a6-d2cf-45c8-85ae-7d3717b466b8",
        "parentId" : "9cc30231-4157-4a72-8856-92d01086a6b0",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "If we think this will really be how people run HA, then it may be worth all that. If this is a proof of concept, I'm not sure if is worth it\n",
        "createdAt" : "2015-09-18T04:02:42Z",
        "updatedAt" : "2015-10-06T00:35:01Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "b199f048-a116-4b93-9193-0b2eb1c76145",
        "parentId" : "9cc30231-4157-4a72-8856-92d01086a6b0",
        "authorId" : "a5be0b3b-3db2-4c99-a598-55f8708db5df",
        "body" : "Switching to NodePort is 100% optional.... And the current setup should be 100% backwards compatible.  If its not i've definitely introduced a bug :) .  I will test this some more tomorrow to see if i can uncover any breaking.\n",
        "createdAt" : "2015-09-18T04:09:53Z",
        "updatedAt" : "2015-10-06T00:35:01Z",
        "lastEditedBy" : "a5be0b3b-3db2-4c99-a598-55f8708db5df",
        "tags" : [
        ]
      },
      {
        "id" : "43dbb41c-6cee-4cf5-92fe-0d7f3df15241",
        "parentId" : "9cc30231-4157-4a72-8856-92d01086a6b0",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "I get that the new behavior is not exercised by default, I'm just unsure how the new behavior interacts with the existing assumptions about the kubernetes service (specifically, the IP/cert assumptions that all setup scripts currently make). Before we commit to this behavior/flag, we should find out what it will take to actually support it.\n",
        "createdAt" : "2015-09-18T04:16:29Z",
        "updatedAt" : "2015-10-06T00:35:01Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "ee062db4-6551-4596-80fd-76f3808ca488",
        "parentId" : "9cc30231-4157-4a72-8856-92d01086a6b0",
        "authorId" : "a5be0b3b-3db2-4c99-a598-55f8708db5df",
        "body" : "Hmmm to me the local-up modifications are meant to demonstrate a minimal way to support this, albeit a very small scale one.   We can chat more tomorrow, ansible playbook updates might be a good next level of support/validation of its required....\n",
        "createdAt" : "2015-09-18T04:25:48Z",
        "updatedAt" : "2015-10-06T00:35:01Z",
        "lastEditedBy" : "a5be0b3b-3db2-4c99-a598-55f8708db5df",
        "tags" : [
        ]
      },
      {
        "id" : "6a4af080-8c39-4f80-b0dc-f0ee315c84c5",
        "parentId" : "9cc30231-4157-4a72-8856-92d01086a6b0",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "Seems like before this merges, it should be working in a testable way (meaning in an e2e test that gets run in the merge queue), without disabling TLS verification (which could surface any cert issues with the service IP, etc). For more esoteric configurations, automated tests are essential to making sure bitrot doesn't break them.\n",
        "createdAt" : "2015-09-18T04:34:27Z",
        "updatedAt" : "2015-10-06T00:35:01Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "a3bbe20b-af9c-430e-b995-d882d27e72c6",
        "parentId" : "9cc30231-4157-4a72-8856-92d01086a6b0",
        "authorId" : "a5be0b3b-3db2-4c99-a598-55f8708db5df",
        "body" : "I agree something automated should verify this if possible... \n\n**but** Since we can't test **both** combinations in the CI, without making it prohibitively slow, \n\nMaybe something else we can do to accomplish the \"prevent bitrot\" goal ? \n",
        "createdAt" : "2015-09-18T16:39:18Z",
        "updatedAt" : "2015-10-06T00:35:01Z",
        "lastEditedBy" : "a5be0b3b-3db2-4c99-a598-55f8708db5df",
        "tags" : [
        ]
      },
      {
        "id" : "9994d77e-dd1a-4ce9-8cbf-acfdb35b4abb",
        "parentId" : "9cc30231-4157-4a72-8856-92d01086a6b0",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "I thought nodePort services ALSO get a cluster IP? In which case this is OK.\n",
        "createdAt" : "2015-09-22T21:03:10Z",
        "updatedAt" : "2015-10-06T00:35:01Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "e63a09b4-8528-489d-83a6-3ac66e6e26ae",
        "parentId" : "9cc30231-4157-4a72-8856-92d01086a6b0",
        "authorId" : "a5be0b3b-3db2-4c99-a598-55f8708db5df",
        "body" : "Good point, Like lava lamp said, the docs imply that clusterIP's are retained.... \n\nFrom https://github.com/kubernetes/kubernetes/blob/master/docs/user-guide/services.md\n\n```\nNodePort: on top of having a cluster-internal IP, expose the service on a port on each node of the cluster\n```\n\nSo we get backwards compatibility for free. \n",
        "createdAt" : "2015-09-25T02:35:42Z",
        "updatedAt" : "2015-10-06T00:35:01Z",
        "lastEditedBy" : "a5be0b3b-3db2-4c99-a598-55f8708db5df",
        "tags" : [
        ]
      },
      {
        "id" : "9789037c-a58a-4c57-88d3-6038d5d47801",
        "parentId" : "9cc30231-4157-4a72-8856-92d01086a6b0",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "I'm still not understanding why we want NodePort?  what is teh problem statement?\n",
        "createdAt" : "2015-09-25T06:26:59Z",
        "updatedAt" : "2015-10-06T00:35:01Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "546cde11-ccd2-4686-a6bc-d7e8466d0686",
        "parentId" : "9cc30231-4157-4a72-8856-92d01086a6b0",
        "authorId" : "a5be0b3b-3db2-4c99-a598-55f8708db5df",
        "body" : "- I think a simplified problem statement would be **Cross-platform option for users outside of the cluster to leverage the  introspective API through a load balanced endpoint**\n- I also think you're point, which is that \"**the kubelet is a weird example**, since kubelets, by definition, can leverage the introspective API \", is totally valid.\n",
        "createdAt" : "2015-09-25T13:52:15Z",
        "updatedAt" : "2015-10-06T00:35:01Z",
        "lastEditedBy" : "a5be0b3b-3db2-4c99-a598-55f8708db5df",
        "tags" : [
        ]
      },
      {
        "id" : "38874473-1b5f-463a-93ac-6f2424a8689e",
        "parentId" : "9cc30231-4157-4a72-8856-92d01086a6b0",
        "authorId" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "body" : "@thockin we would like a single cluster IP:port for a cluster that has multiple api-servers.  Currently in our HA configurations we stand up an eternal HA-Proxy and VIP which is managed by pacemaker.  This VIP provides our single load-balanced endpoint into the cluster itself.  \n\nThe experimentation with NodePort was to see if we could expose the load-balanced introspective service when we have multiple api-servers.  All that being said, we recognize that @bprashanth ' s  new method might be cleaner. \n\nHope this clarifies the objective. \n",
        "createdAt" : "2015-09-25T14:05:08Z",
        "updatedAt" : "2015-10-06T00:35:01Z",
        "lastEditedBy" : "f81960f6-a033-4403-bebf-c8ebb484e444",
        "tags" : [
        ]
      },
      {
        "id" : "b8de188e-e32f-49b6-af2f-749e443c1861",
        "parentId" : "9cc30231-4157-4a72-8856-92d01086a6b0",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "So I have not followed all the great work on HA, so I apologize if I ask\nnonsense - if you have a Service with a corresponding Endpoints object\nwhich has the master IPs - that gives you an IP:port which randomly chooses\na backend.\n\nWhat am I missing?\n\nOn Fri, Sep 25, 2015 at 7:05 AM, Timothy St. Clair <notifications@github.com\n\n> wrote:\n> \n> In pkg/master/controller.go\n> https://github.com/kubernetes/kubernetes/pull/13978#discussion_r40432465\n> :\n> \n> > @@ -155,15 +174,14 @@ func (c *Controller) CreateMasterServiceIfNeeded(serviceName string, serviceIP n\n> >             Labels:    map[string]string{\"provider\": \"kubernetes\", \"component\": \"apiserver\"},\n> >         },\n> >         Spec: api.ServiceSpec{\n> > -           Ports: []api.ServicePort{{Port: servicePort, Protocol: api.ProtocolTCP, TargetPort: util.NewIntOrStringFromInt(servicePort)}},\n> > -           Ports: ports,\n> >           // maintained by this code, not by the pod selector\n> >           Selector:        nil,\n> >           ClusterIP:       serviceIP.String(),\n> \n> @thockin https://github.com/thockin we would like a single cluster\n> IP:port for a cluster that has mulitple api-servers. Currently in our HA\n> configurations we stand up an eternal HA-Proxy and VIP which is managed by\n> pacemaker. This VIP provides our single load-balanced endpoint into the\n> cluster itself.\n> \n> The experimentation with NodePort was to see if we could expose the\n> load-balanced introspective service when we have multiple api-servers. All\n> that being said, we recognize that @bprashanth\n> https://github.com/bprashanth ' s new method might be cleaner.\n> \n> Hope this clarifies the objective.\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/kubernetes/kubernetes/pull/13978/files#r40432465.\n",
        "createdAt" : "2015-09-25T17:00:47Z",
        "updatedAt" : "2015-10-06T00:35:01Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "d7ddb959-5774-4342-bdf4-22a89f32dde9",
        "parentId" : "9cc30231-4157-4a72-8856-92d01086a6b0",
        "authorId" : "a5be0b3b-3db2-4c99-a598-55f8708db5df",
        "body" : "I guess @thockin  is saying that kubelets can access the service in a load-balanced manner, using whatever clusterIP is auto-allocated to it.... which is true... this is just a slightly more generalized feature that anything (in or out of the cluster) can use.\n",
        "createdAt" : "2015-09-25T17:22:14Z",
        "updatedAt" : "2015-10-06T00:35:01Z",
        "lastEditedBy" : "a5be0b3b-3db2-4c99-a598-55f8708db5df",
        "tags" : [
        ]
      },
      {
        "id" : "57aa6993-9cee-46bd-ac07-9a39d4b7d6f0",
        "parentId" : "9cc30231-4157-4a72-8856-92d01086a6b0",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "NodePort is only half of the solution for that, it doesn't give you a\nsingle IP:port, it gives you port X on every node. You still need some sort\nof load balancer, the setup of which depends heavily on the environment.\n\nOn Fri, Sep 25, 2015 at 7:05 AM, Timothy St. Clair <notifications@github.com\n\n> wrote:\n> \n> In pkg/master/controller.go\n> https://github.com/kubernetes/kubernetes/pull/13978#discussion_r40432465\n> :\n> \n> > @@ -155,15 +174,14 @@ func (c *Controller) CreateMasterServiceIfNeeded(serviceName string, serviceIP n\n> >             Labels:    map[string]string{\"provider\": \"kubernetes\", \"component\": \"apiserver\"},\n> >         },\n> >         Spec: api.ServiceSpec{\n> > -           Ports: []api.ServicePort{{Port: servicePort, Protocol: api.ProtocolTCP, TargetPort: util.NewIntOrStringFromInt(servicePort)}},\n> > -           Ports: ports,\n> >           // maintained by this code, not by the pod selector\n> >           Selector:        nil,\n> >           ClusterIP:       serviceIP.String(),\n> \n> @thockin https://github.com/thockin we would like a single cluster\n> IP:port for a cluster that has mulitple api-servers. Currently in our HA\n> configurations we stand up an eternal HA-Proxy and VIP which is managed by\n> pacemaker. This VIP provides our single load-balanced endpoint into the\n> cluster itself.\n> \n> The experimentation with NodePort was to see if we could expose the\n> load-balanced introspective service when we have multiple api-servers. All\n> that being said, we recognize that @bprashanth\n> https://github.com/bprashanth ' s new method might be cleaner.\n> \n> Hope this clarifies the objective.\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/kubernetes/kubernetes/pull/13978/files#r40432465.\n",
        "createdAt" : "2015-09-25T17:26:33Z",
        "updatedAt" : "2015-10-06T00:35:01Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "45b4d4e5-04ca-464f-90aa-f0b523d11289",
        "parentId" : "9cc30231-4157-4a72-8856-92d01086a6b0",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "IFF we are willing to take a dep from kubelet -> kube-proxy, which we do\nnot currently do\n\nOn Fri, Sep 25, 2015 at 10:22 AM, jay vyas notifications@github.com wrote:\n\n> In pkg/master/controller.go\n> https://github.com/kubernetes/kubernetes/pull/13978#discussion_r40453559\n> :\n> \n> > @@ -155,15 +174,14 @@ func (c *Controller) CreateMasterServiceIfNeeded(serviceName string, serviceIP n\n> >             Labels:    map[string]string{\"provider\": \"kubernetes\", \"component\": \"apiserver\"},\n> >         },\n> >         Spec: api.ServiceSpec{\n> > -           Ports: []api.ServicePort{{Port: servicePort, Protocol: api.ProtocolTCP, TargetPort: util.NewIntOrStringFromInt(servicePort)}},\n> > -           Ports: ports,\n> >           // maintained by this code, not by the pod selector\n> >           Selector:        nil,\n> >           ClusterIP:       serviceIP.String(),\n> \n> I guess @thockin https://github.com/thockin is saying that kubelets can\n> access the service using whatever clusterIP is auto-allocated to it....\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/kubernetes/kubernetes/pull/13978/files#r40453559.\n",
        "createdAt" : "2015-09-25T17:27:36Z",
        "updatedAt" : "2015-10-06T00:35:01Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "0e3aa236-6908-4ac1-b10c-c1d00b458a84",
        "parentId" : "9cc30231-4157-4a72-8856-92d01086a6b0",
        "authorId" : "a5be0b3b-3db2-4c99-a598-55f8708db5df",
        "body" : "Yup I think we are all in agreement....\n- Question remaining is: Does this feature make sense as a standalone addition to the toolbox of options available for  kube deployments ?  \n- The answer: I think we agree \"yes\" (correct me if wrong)... But I think @thockin is suggesting at the very-least, that I **clarify** the context behind the hacky \"launch kubelets via nodeport apiserver\" example, which can confuse people into thinking that ClusterIP is not sufficient for internal loadbalanced access.\n- And also, @lavalamp has suggested that its important for me to rollback MasterCount modifications, and rollback unit test modifications which I made...\n\nSounds like we are mostly in agreement **If** there are no other issues,  **I can implement the bottom two bullets for the final PR**.... Thanks for all this feedback so far, I've clarified a lot of new internal concepts in kubernetes from working on this patch! \n",
        "createdAt" : "2015-09-25T17:38:22Z",
        "updatedAt" : "2015-10-06T00:35:01Z",
        "lastEditedBy" : "a5be0b3b-3db2-4c99-a598-55f8708db5df",
        "tags" : [
        ]
      },
      {
        "id" : "9e59a134-a365-42ca-9608-e1c262072f60",
        "parentId" : "9cc30231-4157-4a72-8856-92d01086a6b0",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "I guess I'm OK with adding NodePort as an option (it would be nice to add\nLoadBalancer, too). But you have to put all the endpoints stuff back the\nway it was. If you want to change that, do it in a separate PR, it's a\ntotally orthogonal problem.\n\nOn Fri, Sep 25, 2015 at 10:38 AM, jay vyas notifications@github.com wrote:\n\n> In pkg/master/controller.go\n> https://github.com/kubernetes/kubernetes/pull/13978#discussion_r40455228\n> :\n> \n> > @@ -155,15 +174,14 @@ func (c *Controller) CreateMasterServiceIfNeeded(serviceName string, serviceIP n\n> >             Labels:    map[string]string{\"provider\": \"kubernetes\", \"component\": \"apiserver\"},\n> >         },\n> >         Spec: api.ServiceSpec{\n> > -           Ports: []api.ServicePort{{Port: servicePort, Protocol: api.ProtocolTCP, TargetPort: util.NewIntOrStringFromInt(servicePort)}},\n> > -           Ports: ports,\n> >           // maintained by this code, not by the pod selector\n> >           Selector:        nil,\n> >           ClusterIP:       serviceIP.String(),\n> \n> Yup I think we are all in agreement ... The only question is :\n> 1. Does this feature make sense as a standalone addition to the toolbox of\n> options available for kube deployments ?\n> 1. I think \"yes\" (correct me if wrong)... But I think @thockin\n>    https://github.com/thockin is suggesting at the very-least, that I\n>    _clarify_ the context behind the hacky \"launch kubelets via nodeport\n>    apiserver\" example, which can confuse people into thinking that ClusterIP\n>    is not sufficient for internal loadbalanced access.\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/kubernetes/kubernetes/pull/13978/files#r40455228.\n",
        "createdAt" : "2015-09-25T17:44:09Z",
        "updatedAt" : "2015-10-06T00:35:01Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "41074724-7029-48c8-a805-759197e4ab2e",
        "parentId" : "9cc30231-4157-4a72-8856-92d01086a6b0",
        "authorId" : "a5be0b3b-3db2-4c99-a598-55f8708db5df",
        "body" : "Okay sounds good.  We can add Loadbalancer and also endpoints updates in follow on PRs, as those definitely will require much more sophisticated testing. Will update this shortly !\n",
        "createdAt" : "2015-09-25T17:59:47Z",
        "updatedAt" : "2015-10-06T00:35:01Z",
        "lastEditedBy" : "a5be0b3b-3db2-4c99-a598-55f8708db5df",
        "tags" : [
        ]
      }
    ],
    "commit" : "be2a2ec3cdaa39f47f0122a35255144f191632b3",
    "line" : 66,
    "diffHunk" : "@@ -1,1 +179,183 @@\t\t\t// maintained by this code, not by the pod selector\n\t\t\tSelector:        nil,\n\t\t\tClusterIP:       serviceIP.String(),\n\t\t\tSessionAffinity: api.ServiceAffinityNone,\n\t\t\tType:            serviceType,"
  },
  {
    "id" : "43ee48de-9f33-47af-a7ec-8998eaf986b5",
    "prId" : 13978,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dea46daf-305d-41ff-b20c-4724d2c86e1a",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Space after //\n",
        "createdAt" : "2015-09-22T20:59:33Z",
        "updatedAt" : "2015-10-06T00:35:01Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "be2a2ec3cdaa39f47f0122a35255144f191632b3",
    "line" : null,
    "diffHunk" : "@@ -1,1 +145,149 @@// If the NodePort value is 0, just the servicePort is used, otherwise, a node port is exposed.\nfunc createPortAndServiceSpec(servicePort int, nodePort int) ([]api.ServicePort, api.ServiceType) {\n\t//Use the Cluster IP type for the service port if NodePort isn't provided.\n\t//Otherwise, we will be binding the master service to a NodePort.\n\tif nodePort <= 0 {"
  },
  {
    "id" : "f9fc4455-1dca-492a-87dc-49345e0741e8",
    "prId" : 13978,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f1c4867f-d2e3-4f6b-93bd-5d1ef68d080c",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Add explanation of what servicePort and nodePort parameters are.\n",
        "createdAt" : "2015-09-22T21:01:57Z",
        "updatedAt" : "2015-10-06T00:35:01Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "be2a2ec3cdaa39f47f0122a35255144f191632b3",
    "line" : null,
    "diffHunk" : "@@ -1,1 +160,164 @@\n// CreateMasterServiceIfNeeded will create the specified service if it\n// doesn't already exist.\nfunc (c *Controller) CreateMasterServiceIfNeeded(serviceName string, serviceIP net.IP, servicePort, nodePort int) error {\n\tctx := api.NewDefaultContext()"
  },
  {
    "id" : "bbcc6625-e33a-4bfa-b11e-9bb61b4ed79f",
    "prId" : 7704,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6523934a-7a6c-4f26-b17a-e0987f7daf4b",
        "parentId" : null,
        "authorId" : "7766e039-aa4c-4476-9091-5cc8763fa8d6",
        "body" : "There's no need to always do this in both UpdateKubernetes.*Service functions - would you mind putting it within the if block below to reduce etcd load?\n",
        "createdAt" : "2015-05-04T22:51:30Z",
        "updatedAt" : "2015-05-08T20:04:16Z",
        "lastEditedBy" : "7766e039-aa4c-4476-9091-5cc8763fa8d6",
        "tags" : [
        ]
      },
      {
        "id" : "391742a4-8942-4349-909f-375dbe64bd6c",
        "parentId" : "6523934a-7a6c-4f26-b17a-e0987f7daf4b",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "They race, so either one can be called first.\n\n----- Original Message -----\n\n> > +\n> > +// RunKubernetesROService periodically updates the kubernetes RO service\n> > +func (c *Controller) RunKubernetesROService(ch chan struct{}) {\n> > -   util.Until(func() {\n> > -       if err := c.UpdateKubernetesROService(); err != nil {\n> > -           util.HandleError(fmt.Errorf(\"unable to sync kubernetes RO service: %v\",\n> >   err))\n> > -       }\n> > -   }, c.EndpointInterval, ch)\n> >   +}\n> >   +\n> >   +// ROServiceWriterLoop is exposed for downstream consumers of master\n> >   +func (c *Controller) UpdateKubernetesROService() error {\n> > -   // Update service & endpoint records.\n> > -   // TODO: when it becomes possible to change this stuff,\n> > -   // stop polling and start watching.\n> > -   if err := c.CreateNamespaceIfNeeded(api.NamespaceDefault); err != nil {\n> \n> There's no need to always do this in both UpdateKubernetes.*Service functions\n> - would you mind putting it within the if block below to reduce etcd load?\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/GoogleCloudPlatform/kubernetes/pull/7704/files#r29631736\n",
        "createdAt" : "2015-05-04T23:02:04Z",
        "updatedAt" : "2015-05-08T20:04:16Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "2d380611-9d9c-48f0-83fc-c5d51707b5db",
        "parentId" : "6523934a-7a6c-4f26-b17a-e0987f7daf4b",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Also, the current logic recreates the namespaces if they are deleted.\n\n----- Original Message -----\n\n> They race, so either one can be called first.\n> \n> ----- Original Message -----\n> \n> > > +\n> > > +// RunKubernetesROService periodically updates the kubernetes RO service\n> > > +func (c *Controller) RunKubernetesROService(ch chan struct{}) {\n> > > - util.Until(func() {\n> > > -     if err := c.UpdateKubernetesROService(); err != nil {\n> > > -         util.HandleError(fmt.Errorf(\"unable to sync kubernetes RO service:\n> > >   %v\",\n> > >   err))\n> > > -     }\n> > > - }, c.EndpointInterval, ch)\n> > >   +}\n> > >   +\n> > >   +// ROServiceWriterLoop is exposed for downstream consumers of master\n> > >   +func (c *Controller) UpdateKubernetesROService() error {\n> > > - // Update service & endpoint records.\n> > > - // TODO: when it becomes possible to change this stuff,\n> > > - // stop polling and start watching.\n> > > - if err := c.CreateNamespaceIfNeeded(api.NamespaceDefault); err != nil {\n> > \n> > There's no need to always do this in both UpdateKubernetes.*Service\n> > functions\n> > - would you mind putting it within the if block below to reduce etcd load?\n> > \n> > ---\n> > \n> > Reply to this email directly or view it on GitHub:\n> > https://github.com/GoogleCloudPlatform/kubernetes/pull/7704/files#r29631736\n",
        "createdAt" : "2015-05-04T23:02:19Z",
        "updatedAt" : "2015-05-08T20:04:16Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "b490b5ee-5642-407d-9a6e-c6cf2bd43014",
        "parentId" : "6523934a-7a6c-4f26-b17a-e0987f7daf4b",
        "authorId" : "7766e039-aa4c-4476-9091-5cc8763fa8d6",
        "body" : "Right - my point was that they don't both need to do it indiscrimately - only one of them needs to do it indiscriminately (to ensure the namespace is recreated if it deletes it) and the other one could do it only if the service actually needs to be created  (i.e. if c.ReadOnlyServiceIP != nil).\n\nYou can ignore it, though, it's really minor.\n",
        "createdAt" : "2015-05-05T16:58:57Z",
        "updatedAt" : "2015-05-08T20:04:16Z",
        "lastEditedBy" : "7766e039-aa4c-4476-9091-5cc8763fa8d6",
        "tags" : [
        ]
      }
    ],
    "commit" : "8bbb64cd8bb225bc725e8577b66264a867280502",
    "line" : 131,
    "diffHunk" : "@@ -1,1 +129,133 @@\t// TODO: when it becomes possible to change this stuff,\n\t// stop polling and start watching.\n\tif err := c.CreateNamespaceIfNeeded(api.NamespaceDefault); err != nil {\n\t\treturn err\n\t}"
  },
  {
    "id" : "b470cb13-f014-4f9f-a848-aa08e033b670",
    "prId" : 7704,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4cc88fc5-5e6b-4869-8dd0-f7dd082bacb9",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "please comments on the ports?  We have so many master ports...\n",
        "createdAt" : "2015-05-06T06:11:30Z",
        "updatedAt" : "2015-05-08T20:04:16Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "8bbb64cd8bb225bc725e8577b66264a867280502",
    "line" : 54,
    "diffHunk" : "@@ -1,1 +52,56 @@\n\tServiceIP         net.IP\n\tServicePort       int\n\tPublicServicePort int\n"
  },
  {
    "id" : "028ee3cb-500c-44a4-ab46-80f2f6f60a4c",
    "prId" : 7704,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "72b295b3-b519-43a1-a943-cd8c08c91da5",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "This appears to be structurally identical to UpdateKubernetesService().  Any reason not to make one parameterized function?\n",
        "createdAt" : "2015-05-06T06:16:53Z",
        "updatedAt" : "2015-05-08T20:04:16Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "8b7a8d62-d73a-4648-9479-239cdf5c071b",
        "parentId" : "72b295b3-b519-43a1-a943-cd8c08c91da5",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "It could be - I mostly renamed existing code.\n\n----- Original Message -----\n\n> > -       }\n> > -   }\n> > -   return nil\n> >   +}\n> >   +\n> >   +// RunKubernetesROService periodically updates the kubernetes RO service\n> >   +func (c *Controller) RunKubernetesROService(ch chan struct{}) {\n> > -   util.Until(func() {\n> > -       if err := c.UpdateKubernetesROService(); err != nil {\n> > -           util.HandleError(fmt.Errorf(\"unable to sync kubernetes RO service: %v\",\n> >   err))\n> > -       }\n> > -   }, c.EndpointInterval, ch)\n> >   +}\n> >   +\n> >   +// UpdateKubernetesROService attempts to update the default Kube read-only\n> >   service.\n> >   +func (c *Controller) UpdateKubernetesROService() error {\n> \n> This appears to be structurally identical to UpdateKubernetesService().  Any\n> reason not to make one parameterized function?\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/GoogleCloudPlatform/kubernetes/pull/7704/files#r29736534\n",
        "createdAt" : "2015-05-06T14:30:16Z",
        "updatedAt" : "2015-05-08T20:04:16Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "98d8b15f-257c-48a1-9174-cb4ba768e721",
        "parentId" : "72b295b3-b519-43a1-a943-cd8c08c91da5",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "OK, grandfathered\n",
        "createdAt" : "2015-05-07T07:03:35Z",
        "updatedAt" : "2015-05-08T20:04:16Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "8bbb64cd8bb225bc725e8577b66264a867280502",
    "line" : 127,
    "diffHunk" : "@@ -1,1 +125,129 @@\n// UpdateKubernetesROService attempts to update the default Kube read-only service.\nfunc (c *Controller) UpdateKubernetesROService() error {\n\t// Update service & endpoint records.\n\t// TODO: when it becomes possible to change this stuff,"
  }
]