[
  {
    "id" : "2b359821-6fac-42ab-b0d9-d1dee22b231b",
    "prId" : 3083,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e308374b-1865-42b0-96b6-819ae25f1701",
        "parentId" : null,
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "We should really extract this out into a generic cache.\n",
        "createdAt" : "2014-12-22T17:43:38Z",
        "updatedAt" : "2014-12-22T23:11:36Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      },
      {
        "id" : "11e791f0-f6b4-4a0c-bb99-e071597ec37f",
        "parentId" : "e308374b-1865-42b0-96b6-819ae25f1701",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "I added a TODO.\n",
        "createdAt" : "2014-12-22T21:28:15Z",
        "updatedAt" : "2014-12-22T23:11:36Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "691623551324825d9043c849bfd46295e61115b6",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +32,36 @@}\n\ntype ipCache struct {\n\tclock         util.Clock\n\tcloudProvider cloudprovider.Interface"
  },
  {
    "id" : "c5cd81fe-938a-40e9-a85a-30edbb72eeb9",
    "prId" : 3083,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4d882b8d-dcd3-4329-89c8-c5df5bafebd4",
        "parentId" : null,
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "Do we really want to overwrite an existing IP address on transient error?\n",
        "createdAt" : "2014-12-22T17:54:12Z",
        "updatedAt" : "2014-12-22T23:11:36Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      },
      {
        "id" : "302cf9b2-dead-420b-ba4d-49caa4508760",
        "parentId" : "4d882b8d-dcd3-4329-89c8-c5df5bafebd4",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "This is just moving preexisting behavior. I'd prefer to change ip caching semantics in another PR, since that's not the focus of this PR.\n",
        "createdAt" : "2014-12-22T21:29:44Z",
        "updatedAt" : "2014-12-22T23:11:36Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "691623551324825d9043c849bfd46295e61115b6",
    "line" : null,
    "diffHunk" : "@@ -1,1 +64,68 @@\n\tif !ok || now.Sub(data.lastUpdate) > c.ttl {\n\t\tip := getInstanceIPFromCloud(c.cloudProvider, host)\n\t\tdata = ipCacheEntry{\n\t\t\tip:         ip,"
  }
]