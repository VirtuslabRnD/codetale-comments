[
  {
    "id" : "45b7d9df-7b0a-4783-9a60-7c70e8386f38",
    "prId" : 84971,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/84971#pullrequestreview-315708631",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "763afa45-d391-4b19-a9c0-54054e4f557b",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "I'm not sold on this - I think IPv4 and IPv6 both \"just work\" today because we can carry wither on in an Endpoints.  I think you need to iterate the Endpoints and create 1 slice for each family found therein.\r\n\r\n@khenidak yes?",
        "createdAt" : "2019-11-12T04:38:28Z",
        "updatedAt" : "2019-11-12T17:04:31Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "f3cadda1-83c9-492d-93e5-9c543c30c9cd",
        "parentId" : "763afa45-d391-4b19-a9c0-54054e4f557b",
        "authorId" : "399a0f74-29de-4365-9ae5-f743ae5f278c",
        "body" : "@thockin Since there's still only one `kubernetes` service created here, and [that service does not specify an IPFamily](https://github.com/kubernetes/kubernetes/blob/master/pkg/master/controller.go#L294-L308), I think it'll default to IPv4. Ideally I think the EndpointSlice would match the Service IPFamily if/until we support multiple Services, one for v4 and one for v6. I think the long term solution involves passing the IPFamily through to the EndpointsAdapter, but that initially felt out of scope here. Would it be sufficient to filter Endpoint addresses here to only add IPv4 addresses [similar to what I'm doing in the EndpointSlice controller here](https://github.com/robscott/kubernetes/blob/endpointslice-iptypes/pkg/controller/endpointslice/utils.go#L128-L140).",
        "createdAt" : "2019-11-12T05:01:40Z",
        "updatedAt" : "2019-11-12T17:04:31Z",
        "lastEditedBy" : "399a0f74-29de-4365-9ae5-f743ae5f278c",
        "tags" : [
        ]
      },
      {
        "id" : "3e77db70-1a51-4418-87c7-bb487d629c49",
        "parentId" : "763afa45-d391-4b19-a9c0-54054e4f557b",
        "authorId" : "399a0f74-29de-4365-9ae5-f743ae5f278c",
        "body" : "I've pushed an update that provides an easier path forward towards true EndpointSlice dual stack support here while also making the code safer for the short term. The current meta proxier kube-proxy implementation will break if an Endpoints resource has more than one IPFamily represented (https://github.com/kubernetes/kubernetes/blob/master/pkg/proxy/ipvs/meta_proxier.go#L177-L203). With that in mind, even if the Endpoints resource here were created with multiple IP families represented, it would just break kube-proxy. I'm assuming the long term solution here involves IP family specific Service, Endpoints, and EndpointSlice, but that feels out of scope here.\r\n\r\nFor now I've added some safety checks to ensure that if an Endpoints resource does end up with multiple IP families, only IPv4 addresses end up making it into the corresponding EndpointSlice. Additionally, I've added some logic to ensure that EndpointSlices with the deprecated IP address type are replaced with an IPv4 EndpointSlice. This should help for anyone that happens to be upgrading from 1.16 with EndpointSlice alpha enabled (similar functionality already exists in the EndpointSlice controller).",
        "createdAt" : "2019-11-12T06:38:32Z",
        "updatedAt" : "2019-11-12T17:04:31Z",
        "lastEditedBy" : "399a0f74-29de-4365-9ae5-f743ae5f278c",
        "tags" : [
        ]
      },
      {
        "id" : "84cac2bf-1348-4bfb-b9a7-b238e63db19e",
        "parentId" : "763afa45-d391-4b19-a9c0-54054e4f557b",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : ">  that service does not specify an IPFamily\r\n\r\n@khenidak this sounds like a bug - if the master is on IPv6, the service needs to say so",
        "createdAt" : "2019-11-12T17:24:42Z",
        "updatedAt" : "2019-11-12T17:24:42Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "0fa9981e0106d7f0d6f9c88fc49d4cdf779c95c1",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +126,130 @@\t// TODO: Add support for IPv6 addresses here (and in the rest of\n\t// EndpointsAdapter).\n\tendpointSlice.AddressType = discovery.AddressTypeIPv4\n\n\tif len(endpoints.Subsets) > 0 {"
  },
  {
    "id" : "fe39dd1b-fd29-44ab-981e-a9e776d12fed",
    "prId" : 82139,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/82139#pullrequestreview-282235182",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "37e8bcb8-9a35-4f48-bf55-e5dec27d9ce7",
        "parentId" : null,
        "authorId" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "body" : "Better add a comment why only the first element of Subsets is used",
        "createdAt" : "2019-08-30T20:33:38Z",
        "updatedAt" : "2019-08-30T20:34:12Z",
        "lastEditedBy" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "d618452a979e49a94c517793c9cac0208d477768",
    "line" : 113,
    "diffHunk" : "@@ -1,1 +111,115 @@\n\tif len(endpoints.Subsets) > 0 {\n\t\tsubset := endpoints.Subsets[0]\n\t\tfor i := range subset.Ports {\n\t\t\tendpointSlice.Ports = append(endpointSlice.Ports, discovery.EndpointPort{"
  }
]