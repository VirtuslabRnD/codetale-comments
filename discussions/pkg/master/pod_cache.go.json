[
  {
    "id" : "f560b5e8-61b2-4bab-b8e5-0656732a7b1d",
    "prId" : 4194,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a234fde4-b79a-449d-93e2-0329ca36c39e",
        "parentId" : null,
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "This is for before Kubelet has populated the Status? Please add a comment.\n",
        "createdAt" : "2015-02-05T23:42:30Z",
        "updatedAt" : "2015-02-05T23:57:42Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "5d65d4cc-781b-4083-99b4-c3386a1aea57",
        "parentId" : "a234fde4-b79a-449d-93e2-0329ca36c39e",
        "authorId" : "a6409368-42e0-44a9-bf79-9d3042ac3b65",
        "body" : "Yes, add the comment. \n",
        "createdAt" : "2015-02-05T23:57:59Z",
        "updatedAt" : "2015-02-05T23:57:59Z",
        "lastEditedBy" : "a6409368-42e0-44a9-bf79-9d3042ac3b65",
        "tags" : [
        ]
      }
    ],
    "commit" : "4da829ef201e48d755c3c19e211e348a10f6bc28",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +188,192 @@\t\tnewStatus.Info = result.Status.Info\n\t\tnewStatus.PodIP = result.Status.PodIP\n\t\tif newStatus.Info == nil {\n\t\t\t// There is a small race window that kubelet couldn't\n\t\t\t// propulated the status yet. This should go away once"
  },
  {
    "id" : "90987e20-1b1b-4025-b97a-7b6413b607ec",
    "prId" : 4169,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1b134b23-0c1f-463e-a086-dca18ed6d9ff",
        "parentId" : null,
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "Doesn't this cause the pod's phase to become unknown? Is that sufficient to cause it to be replaced by replication controller?\n\nWhy isn't the node status updated when the node becomes unresponsive?\n",
        "createdAt" : "2015-02-05T18:45:24Z",
        "updatedAt" : "2015-02-05T18:56:40Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "20230e00-a57f-40bf-aa44-d93df8fe5660",
        "parentId" : "1b134b23-0c1f-463e-a086-dca18ed6d9ff",
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "Replication controller only ignores terminated pods:\nhttps://github.com/GoogleCloudPlatform/kubernetes/blob/master/pkg/controller/replication_controller.go#L178\n",
        "createdAt" : "2015-02-05T18:46:32Z",
        "updatedAt" : "2015-02-05T18:56:40Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "3cd8babb-8c30-4f62-98ac-4f86de35f5c3",
        "parentId" : "1b134b23-0c1f-463e-a086-dca18ed6d9ff",
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "The node status isn't updated because we just log the error and move on:\nhttps://github.com/GoogleCloudPlatform/kubernetes/blob/master/pkg/master/pod_cache.go#L242\n\nWe could certainly set Unknown there too, but we'll see pods flicker in and out in the case of transient failures.  (we would likely want to add some sort of error count to the cache.)\n\nI updated the replication controller to filter Unknown pods also.\n\nI will push a new cluster and see if this works correctly \n\nWe could set unknown there too if we wanted to.\n",
        "createdAt" : "2015-02-05T18:56:21Z",
        "updatedAt" : "2015-02-05T18:56:40Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      },
      {
        "id" : "278db761-95fe-43ac-85df-a5644a7f9ee0",
        "parentId" : "1b134b23-0c1f-463e-a086-dca18ed6d9ff",
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "I don't see any changes pushed.\n",
        "createdAt" : "2015-02-05T19:04:47Z",
        "updatedAt" : "2015-02-05T19:04:47Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "65f27722-3a06-47b7-8140-c25e7e506913",
        "parentId" : "1b134b23-0c1f-463e-a086-dca18ed6d9ff",
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "ugh, yes this is an insufficient fix...  hang on, will fix up.\n",
        "createdAt" : "2015-02-05T19:39:31Z",
        "updatedAt" : "2015-02-05T19:39:31Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      },
      {
        "id" : "a437cbeb-f267-4d2b-afe6-085e2ea7e1c6",
        "parentId" : "1b134b23-0c1f-463e-a086-dca18ed6d9ff",
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "Actually, no, now that I look at it, this will fix things.\n\nThe problem before was that because the nodeStatus cache was never cleared, we never re-polled node status, so we would never detect the node status change.\n\nNow, when we re-poll the pod status, we will go to the nodeStatus cache, but it will be empty, so we will drive down to the node itself and get the status, and then set that into the cache.\n",
        "createdAt" : "2015-02-05T19:43:57Z",
        "updatedAt" : "2015-02-05T19:43:57Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      },
      {
        "id" : "c9fbea00-3dfb-45f6-b1e5-7563b7079df7",
        "parentId" : "1b134b23-0c1f-463e-a086-dca18ed6d9ff",
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "But why isn't the node status periodically updated?\n",
        "createdAt" : "2015-02-05T19:45:03Z",
        "updatedAt" : "2015-02-05T19:45:03Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "708970b1-540d-4daa-abd6-b4ffcdb2f756",
        "parentId" : "1b134b23-0c1f-463e-a086-dca18ed6d9ff",
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "It is periodically updated, given that we clear the cache, and then update pod status, which forces an update to the nodeStatus too.  If you'd prefer to have two different go routines doing the periodic updates, that's ok with me too, although we're still going to want to have the read-through behavior as well to make sure that we have good data when a pod is initially created.\n\nWe could do it that way if we prefer.  That's not the way that it was previously structured.\n",
        "createdAt" : "2015-02-05T19:48:01Z",
        "updatedAt" : "2015-02-05T19:48:01Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      },
      {
        "id" : "dc3b1c19-c5e1-407a-8d54-976b40250c18",
        "parentId" : "1b134b23-0c1f-463e-a086-dca18ed6d9ff",
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "Don't bother. The right solution is to eliminate nodes from the \"pod cache\".\n",
        "createdAt" : "2015-02-05T21:27:43Z",
        "updatedAt" : "2015-02-05T21:27:43Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      }
    ],
    "commit" : "6d0b8ea7a7541f3330d05ad1dd5f1710b92069ca",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +230,234 @@\t// TODO: this is silly, we should pro-actively update the pod status when\n\t// the API server makes changes.\n\tp.clearNodeStatus()\n\n\tctx := api.NewContext()"
  },
  {
    "id" : "7c990ba3-ca2d-4bff-a1ec-e1f3eabc569a",
    "prId" : 162,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dc132aef-2bc9-4a0a-83d4-ef38e232a7a3",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "You can also serialize by having a writer/reader consuming operation requests over a channel.\n",
        "createdAt" : "2014-06-18T22:27:03Z",
        "updatedAt" : "2014-06-19T03:05:09Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "1783b326-5a92-4b5d-859c-c1a6d7f8d016",
        "parentId" : "dc132aef-2bc9-4a0a-83d4-ef38e232a7a3",
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "Hrm, seems more complicated.  I think I prefer the lock.\n",
        "createdAt" : "2014-06-18T23:38:31Z",
        "updatedAt" : "2014-06-19T03:05:09Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      },
      {
        "id" : "4f394dc8-e6a1-4fe2-8f2c-8d19ee917995",
        "parentId" : "dc132aef-2bc9-4a0a-83d4-ef38e232a7a3",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Yeah, the lock is definitely less code.\n",
        "createdAt" : "2014-06-19T00:10:28Z",
        "updatedAt" : "2014-06-19T03:05:09Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "4f549aae54ef40f7d9329ca0f75bcfc484505142",
    "line" : 68,
    "diffHunk" : "@@ -1,1 +66,70 @@\t\treturn err\n\t}\n\tp.podLock.Lock()\n\tdefer p.podLock.Unlock()\n\tp.podInfo[id] = info"
  },
  {
    "id" : "45c93cdd-bef0-4c2b-90ce-9280c3461019",
    "prId" : 162,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "773508be-8e4a-4712-91a4-d1d48e55cdef",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "This is only safe if no one ever modifies these values. Maybe the comment should say that it's strictly for read only, or you could make a copy via reflect.\n",
        "createdAt" : "2014-06-18T22:30:51Z",
        "updatedAt" : "2014-06-19T03:05:09Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "9ada01e9-b307-4f20-9713-8d065dff48e2",
        "parentId" : "773508be-8e4a-4712-91a4-d1d48e55cdef",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Wait, actually this is just unsafe, period. IIRC, maps are not thread safe.\n",
        "createdAt" : "2014-06-18T22:38:46Z",
        "updatedAt" : "2014-06-19T03:05:09Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "0f1027af-4433-465a-8523-44b227fa0ffb",
        "parentId" : "773508be-8e4a-4712-91a4-d1d48e55cdef",
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "Good catch.  Fixed.\n",
        "createdAt" : "2014-06-18T23:34:55Z",
        "updatedAt" : "2014-06-19T03:05:09Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "4f549aae54ef40f7d9329ca0f75bcfc484505142",
    "line" : null,
    "diffHunk" : "@@ -1,1 +53,57 @@\tp.podLock.Lock()\n\tdefer p.podLock.Unlock()\n\tvalue, ok := p.podInfo[id]\n\tif !ok {\n\t\treturn nil, fmt.Errorf(\"Couldn't find any information for %s\", id)"
  },
  {
    "id" : "441aa17f-6ba5-4251-92fc-3c9be7e37455",
    "prId" : 162,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "141e2093-2880-44d7-806f-19b99d66c26e",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Boilerplate.\n",
        "createdAt" : "2014-06-19T00:08:11Z",
        "updatedAt" : "2014-06-19T03:05:09Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "68b90a20-cded-4f1b-b728-e536eebd3ec5",
        "parentId" : "141e2093-2880-44d7-806f-19b99d66c26e",
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "Done.\n",
        "createdAt" : "2014-06-19T03:05:31Z",
        "updatedAt" : "2014-06-19T03:05:31Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "4f549aae54ef40f7d9329ca0f75bcfc484505142",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +15,19 @@*/\n\npackage master\n\nimport ("
  }
]