[
  {
    "id" : "2339ac3e-0a21-46f1-b320-f488e847534e",
    "prId" : 101358,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/101358#pullrequestreview-647681515",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4cad0719-ea78-4112-9f81-c2ee3dbbd02c",
        "parentId" : null,
        "authorId" : "0f949873-aa29-48e8-94f4-70554eb7c9c3",
        "body" : "just double-checking: we do not want to decrement the endpoint ref count if the endpoint is local?",
        "createdAt" : "2021-04-28T22:10:35Z",
        "updatedAt" : "2021-04-28T22:27:06Z",
        "lastEditedBy" : "0f949873-aa29-48e8-94f4-70554eb7c9c3",
        "tags" : [
        ]
      }
    ],
    "commit" : "32b2cd26c7def7d0475b1922ef0ed37c3b729127",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +355,359 @@func (ep *endpointsInfo) Cleanup() {\n\tLog(ep, \"Endpoint Cleanup\", 3)\n\tif !ep.GetIsLocal() && ep.refCount != nil {\n\t\t*ep.refCount--\n"
  },
  {
    "id" : "3be2895b-d395-4606-b0c8-b642fc9aefe7",
    "prId" : 101358,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/101358#pullrequestreview-651477367",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "65eda09b-fb11-4ba9-9515-d25f7af13a96",
        "parentId" : null,
        "authorId" : "0f949873-aa29-48e8-94f4-70554eb7c9c3",
        "body" : "Having trouble with the git UI, so this comment is really for line 363, but I think the !ep.GetIsLocal() check there is now redundant ",
        "createdAt" : "2021-04-28T22:17:47Z",
        "updatedAt" : "2021-04-28T22:27:06Z",
        "lastEditedBy" : "0f949873-aa29-48e8-94f4-70554eb7c9c3",
        "tags" : [
        ]
      },
      {
        "id" : "88e3b385-9f12-4f14-86c7-4f9107f0acd5",
        "parentId" : "65eda09b-fb11-4ba9-9515-d25f7af13a96",
        "authorId" : "0f949873-aa29-48e8-94f4-70554eb7c9c3",
        "body" : "also having more trouble with the UI, but I am wondering why 'ep.refCount = nil' is not within that if block on lines 363-371. If we don't attempt to delete a remote endpoint because the refCount is above zero, why set the refCount to nil? This may be outside the scope of this change, but just doesn't make sense to me",
        "createdAt" : "2021-04-28T22:21:27Z",
        "updatedAt" : "2021-04-28T22:27:06Z",
        "lastEditedBy" : "0f949873-aa29-48e8-94f4-70554eb7c9c3",
        "tags" : [
        ]
      },
      {
        "id" : "87ef4f6c-e804-40b1-b677-76cb7bccf615",
        "parentId" : "65eda09b-fb11-4ba9-9515-d25f7af13a96",
        "authorId" : "480e1384-be3a-4dd8-b712-2bc0e9686a5d",
        "body" : "Consider two services with endpoint objects:\r\n\r\nService1 -> Endpoint1, Endpoint2, Endpoint3\r\n\r\nService2 -> Endpoint1, Endpoint2\r\n\r\nAnd, Service1_Endpoint1 and Service2_Endpoint2 are referring to the same HNS remote endpoint\r\n\r\nOriginal behavior:\r\n\r\nService1_Endpoint1 -> HNSRemoteEndpoint1RefCount\r\n\t\t\t\t\t\t\t  \r\nService1_Endpoint2 -> HNSRemoteEndpoint1RefCount\r\n\r\nDeleting Service1 would drop (Service1_Endpoint1 -> HNSRemoteEndpoint1RefCount) to zero and corresponding HNS remote endpoint was deleted, though Service 2 was still using it \r\n\r\n\r\nModified behavior:\r\n\r\nService1_Endpoint1 -> *HNSRemoteEndpoint1RefCount ------>\r\n\t\t\t\t\t\t\t                                                 Shared_HNSRemoteEndpoint1RefCount\r\nService1_Endpoint2 -> *HNSRemoteEndpoint1RefCount ------>\r\n\r\nHNSRemoteEndpoint1RefCount is a shared counter and actual refcount's in the endpoint objects are pointers to this shared refcount. Everytime endpoint for a service is cleaned shared refcount is decremented and the refcount pointer on the endpoint is set to nil, so that it can no longer accidentally modify the shared refcount. Once the shared refcount drops to 0 (i.e. no service is using it anylonger) we delete the HNSRemoteEndpoint\r\n",
        "createdAt" : "2021-05-04T17:13:04Z",
        "updatedAt" : "2021-05-04T17:13:05Z",
        "lastEditedBy" : "480e1384-be3a-4dd8-b712-2bc0e9686a5d",
        "tags" : [
        ]
      }
    ],
    "commit" : "32b2cd26c7def7d0475b1922ef0ed37c3b729127",
    "line" : 8,
    "diffHunk" : "@@ -1,1 +358,362 @@\t\t*ep.refCount--\n\n\t\t// Remove the remote hns endpoint, if no service is referring it\n\t\t// Never delete a Local Endpoint. Local Endpoints are already created by other entities.\n\t\t// Remove only remote endpoints created by this service"
  },
  {
    "id" : "185b8b2d-d62d-4127-9887-e1dede625f37",
    "prId" : 101047,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/101047#pullrequestreview-702196086",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cfa19206-4d92-4641-91c4-0a4122c42577",
        "parentId" : null,
        "authorId" : "62eb404a-5fe6-4b29-afab-583b57ce8f19",
        "body" : "Could you add a comment here for why the sleep is required?",
        "createdAt" : "2021-05-05T18:37:01Z",
        "updatedAt" : "2021-05-05T23:42:12Z",
        "lastEditedBy" : "62eb404a-5fe6-4b29-afab-583b57ce8f19",
        "tags" : [
        ]
      },
      {
        "id" : "13045ca7-b299-482d-91f5-9d9c7fbf9c8f",
        "parentId" : "cfa19206-4d92-4641-91c4-0a4122c42577",
        "authorId" : "df90aa6f-4328-4d27-92eb-8f98c90bd8b0",
        "body" : "I moved that section of code and don't know the original reasoning.  maybe @sbangari knows?",
        "createdAt" : "2021-05-05T22:07:12Z",
        "updatedAt" : "2021-05-05T23:42:12Z",
        "lastEditedBy" : "df90aa6f-4328-4d27-92eb-8f98c90bd8b0",
        "tags" : [
        ]
      },
      {
        "id" : "c4f7b8ec-b240-4d68-86d6-af5566d12526",
        "parentId" : "cfa19206-4d92-4641-91c4-0a4122c42577",
        "authorId" : "480e1384-be3a-4dd8-b712-2bc0e9686a5d",
        "body" : "Neither do I :)  .... But it seems like kube-proxy is retrying to get HNS network, which is created by CNI. If kube-proxy happens to start before the network is created, it may be taking a guess that the CNI is just starting up or the HNS network creation is still in progress and will retry to read the network configuration after a second before giving up.",
        "createdAt" : "2021-05-05T22:21:28Z",
        "updatedAt" : "2021-05-05T23:42:12Z",
        "lastEditedBy" : "480e1384-be3a-4dd8-b712-2bc0e9686a5d",
        "tags" : [
        ]
      },
      {
        "id" : "b768d79c-7536-4a57-95e7-87aac2073bc1",
        "parentId" : "cfa19206-4d92-4641-91c4-0a4122c42577",
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "// TODO figure out why do we need this sleep\r\n\r\nðŸ˜…",
        "createdAt" : "2021-07-08T15:16:52Z",
        "updatedAt" : "2021-07-08T15:16:53Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      }
    ],
    "commit" : "d5d9327351de99e6068f62efb388a6ede38d944e",
    "line" : 47,
    "diffHunk" : "@@ -1,1 +165,169 @@\tfor err != nil {\n\t\tklog.ErrorS(err, \"Unable to find HNS Network specified. Please check network name and CNI deployment\", \"hnsNetworkName\", hnsNetworkName)\n\t\ttime.Sleep(1 * time.Second)\n\t\thnsNetworkInfo, err = hns.getNetworkByName(hnsNetworkName)\n\t}"
  },
  {
    "id" : "24cb2a0b-35fb-4542-b50c-cbdb718d2480",
    "prId" : 101047,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/101047#pullrequestreview-702276490",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "34ccff3b-05b4-4029-af75-dc1004c39420",
        "parentId" : null,
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "This is a todo, it has a performance problem to iterate over the interfaces first and later over the addreses \r\nhttps://github.com/kubernetes/kubernetes/pull/103116",
        "createdAt" : "2021-07-08T15:15:18Z",
        "updatedAt" : "2021-07-08T15:15:19Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      },
      {
        "id" : "c82151a2-53fb-4c95-a763-29b9a08c11ef",
        "parentId" : "34ccff3b-05b4-4029-af75-dc1004c39420",
        "authorId" : "df90aa6f-4328-4d27-92eb-8f98c90bd8b0",
        "body" : "I created https://github.com/kubernetes/kubernetes/issues/103588 to track.  fyi @sbangari ",
        "createdAt" : "2021-07-08T16:31:30Z",
        "updatedAt" : "2021-07-08T16:31:30Z",
        "lastEditedBy" : "df90aa6f-4328-4d27-92eb-8f98c90bd8b0",
        "tags" : [
        ]
      }
    ],
    "commit" : "d5d9327351de99e6068f62efb388a6ede38d944e",
    "line" : 186,
    "diffHunk" : "@@ -1,1 +702,706 @@\t\t}\n\n\t\tinterfaces, _ := net.Interfaces() //TODO create interfaces\n\t\tfor _, inter := range interfaces {\n\t\t\taddresses, _ := inter.Addrs()"
  },
  {
    "id" : "4367b8cf-4272-48d8-b852-6f80a963224f",
    "prId" : 101047,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/101047#pullrequestreview-702269996",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "48350637-517b-4b81-bfd1-6afa0408ce1c",
        "parentId" : null,
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "Since we are using detectNodeIP that deals with unspecified, is it possible to get an unspecified here?\r\nI couldn't check all code paths, just asking",
        "createdAt" : "2021-07-08T15:22:30Z",
        "updatedAt" : "2021-07-08T15:22:31Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      },
      {
        "id" : "53b59c2e-47a7-4f59-a10f-0dddeeca9690",
        "parentId" : "48350637-517b-4b81-bfd1-6afa0408ce1c",
        "authorId" : "df90aa6f-4328-4d27-92eb-8f98c90bd8b0",
        "body" : "Yes it could be unspecified, in DualStack the bind address doesn't go through detectNodeIp, which only works with IPv4.  This is the same on Linux: https://github.com/kubernetes/kubernetes/blob/90b02692e2980d460fa2e53bf4509df1ec10475f/cmd/kube-proxy/app/server_others.go#L239  https://github.com/kubernetes/kubernetes/blob/90b02692e2980d460fa2e53bf4509df1ec10475f/cmd/kube-proxy/app/server_windows.go#L120",
        "createdAt" : "2021-07-08T16:25:01Z",
        "updatedAt" : "2021-07-08T16:25:02Z",
        "lastEditedBy" : "df90aa6f-4328-4d27-92eb-8f98c90bd8b0",
        "tags" : [
        ]
      }
    ],
    "commit" : "d5d9327351de99e6068f62efb388a6ede38d944e",
    "line" : 177,
    "diffHunk" : "@@ -1,1 +693,697 @@\t\t}\n\n\t\tif nodeIP.IsUnspecified() {\n\t\t\t// attempt to get the correct ip address\n\t\t\tklog.V(2).InfoS(\"node ip was unspecified.  Attempting to find node ip\")"
  },
  {
    "id" : "0eecf0c7-d5e9-4dc0-8c28-0f5833118446",
    "prId" : 101047,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/101047#pullrequestreview-702565254",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9dcfe2e9-0ae4-4b1c-8c8b-7a8c7955b162",
        "parentId" : null,
        "authorId" : "480e1384-be3a-4dd8-b712-2bc0e9686a5d",
        "body" : "We should try fixing this in hcsshim to avoid  this version check across other components (like here in kube-proxy and possibly CNI's) ... we can merge this PR but should revert this change back once this is fixed in hcsshim",
        "createdAt" : "2021-07-08T19:28:59Z",
        "updatedAt" : "2021-07-08T19:28:59Z",
        "lastEditedBy" : "480e1384-be3a-4dd8-b712-2bc0e9686a5d",
        "tags" : [
        ]
      },
      {
        "id" : "f0728293-83ae-4611-993c-9429f9048cb2",
        "parentId" : "9dcfe2e9-0ae4-4b1c-8c8b-7a8c7955b162",
        "authorId" : "df90aa6f-4328-4d27-92eb-8f98c90bd8b0",
        "body" : "In 1.23 I can update the hcsshim library and this logic will no longer be required because it will have the correct checks internally.",
        "createdAt" : "2021-07-08T23:07:47Z",
        "updatedAt" : "2021-07-08T23:07:48Z",
        "lastEditedBy" : "df90aa6f-4328-4d27-92eb-8f98c90bd8b0",
        "tags" : [
        ]
      }
    ],
    "commit" : "d5d9327351de99e6068f62efb388a6ede38d944e",
    "line" : 113,
    "diffHunk" : "@@ -1,1 +231,235 @@\t}\n\n\treturn v.AtLeast(version.MustParseSemantic(\"11.10.0\"))\n}\n"
  },
  {
    "id" : "0f6c16f8-e970-4716-8159-c3c794552f06",
    "prId" : 96371,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/96371#pullrequestreview-529231558",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "239a1ec1-4e63-40a9-a55e-753c56976ca6",
        "parentId" : null,
        "authorId" : "399a0f74-29de-4365-9ae5-f743ae5f278c",
        "body" : "@kumarvin123 @ksubrmnn This would be really cool to support in Windows as well in an upcoming release.",
        "createdAt" : "2020-11-12T02:20:08Z",
        "updatedAt" : "2021-01-11T21:27:57Z",
        "lastEditedBy" : "399a0f74-29de-4365-9ae5-f743ae5f278c",
        "tags" : [
        ]
      },
      {
        "id" : "40f81683-8a35-4fb3-ba64-b36f0e864121",
        "parentId" : "239a1ec1-4e63-40a9-a55e-753c56976ca6",
        "authorId" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "body" : "FYI @jayunit100 ",
        "createdAt" : "2020-11-12T13:40:53Z",
        "updatedAt" : "2021-01-11T21:27:57Z",
        "lastEditedBy" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "tags" : [
        ]
      },
      {
        "id" : "7bf76a86-8d83-4525-90e9-6ac652f3326a",
        "parentId" : "239a1ec1-4e63-40a9-a55e-753c56976ca6",
        "authorId" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "body" : "Looks like there's an issue for windows support here https://github.com/kubernetes/kubernetes/issues/96514, thanks @jayunit100 ",
        "createdAt" : "2020-11-12T15:55:47Z",
        "updatedAt" : "2021-01-11T21:27:57Z",
        "lastEditedBy" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "tags" : [
        ]
      }
    ],
    "commit" : "a11abb54759919c07b0c0f363be07a80d1eb9a72",
    "line" : 69,
    "diffHunk" : "@@ -1,1 +1047,1051 @@\t\t\tif !ep.IsReady() {\n\t\t\t\tcontinue\n\t\t\t}\n\n\t\t\tvar newHnsEndpoint *endpointsInfo"
  },
  {
    "id" : "b4386996-5137-4483-8d14-9ca0ffa41894",
    "prId" : 93638,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/93638#pullrequestreview-460359575",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0e9f1fc6-c66c-460a-a8f7-d6481d90eded",
        "parentId" : null,
        "authorId" : "0f949873-aa29-48e8-94f4-70554eb7c9c3",
        "body" : "So the second endpoint deletion was happening because of the ep.refCount == nil condition?",
        "createdAt" : "2020-08-03T17:09:46Z",
        "updatedAt" : "2020-08-03T21:59:02Z",
        "lastEditedBy" : "0f949873-aa29-48e8-94f4-70554eb7c9c3",
        "tags" : [
        ]
      },
      {
        "id" : "50c38dd4-1498-460f-958c-a653326acadc",
        "parentId" : "0e9f1fc6-c66c-460a-a8f7-d6481d90eded",
        "authorId" : "480e1384-be3a-4dd8-b712-2bc0e9686a5d",
        "body" : "yes",
        "createdAt" : "2020-08-03T21:41:07Z",
        "updatedAt" : "2020-08-03T21:59:02Z",
        "lastEditedBy" : "480e1384-be3a-4dd8-b712-2bc0e9686a5d",
        "tags" : [
        ]
      }
    ],
    "commit" : "b96cebf222884491f6ef390f4b0c99186a9561eb",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +324,328 @@\t\t// Never delete a Local Endpoint. Local Endpoints are already created by other entities.\n\t\t// Remove only remote endpoints created by this service\n\t\tif *ep.refCount <= 0 && !ep.GetIsLocal() {\n\t\t\tklog.V(4).Infof(\"Removing endpoints for %v, since no one is referencing it\", ep)\n\t\t\terr := ep.hns.deleteEndpoint(ep.hnsID)"
  },
  {
    "id" : "634a621c-dc54-4b93-8196-e6589578a003",
    "prId" : 91886,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/91886#pullrequestreview-426648834",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e78507f2-656d-4c39-9976-7c10dc372601",
        "parentId" : null,
        "authorId" : "e879b643-55b5-45ef-93e4-20105f593586",
        "body" : "Can you break from the loop if you find the  PA?",
        "createdAt" : "2020-06-08T21:54:10Z",
        "updatedAt" : "2020-06-08T21:54:10Z",
        "lastEditedBy" : "e879b643-55b5-45ef-93e4-20105f593586",
        "tags" : [
        ]
      }
    ],
    "commit" : "c3eb69c1f113ad5d136b22fb8016a1b35c9d7c5b",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +291,295 @@\t\tif ip == rs.providerAddress {\n\t\t\tproviderAddress = rs.providerAddress\n\t\t}\n\t}\n"
  },
  {
    "id" : "e3bc4012-529e-4761-9dee-22699aed5ab1",
    "prId" : 90909,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/90909#pullrequestreview-414856112",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6b6b9123-8b8e-4e04-b0d0-1371f2890cce",
        "parentId" : null,
        "authorId" : "30b7a7bd-8fad-4167-988b-46b8aed2da81",
        "body" : "Good job cleaning this up!",
        "createdAt" : "2020-05-19T18:37:12Z",
        "updatedAt" : "2020-06-29T21:33:17Z",
        "lastEditedBy" : "30b7a7bd-8fad-4167-988b-46b8aed2da81",
        "tags" : [
        ]
      },
      {
        "id" : "0938e7f5-a7d9-4ead-a262-8a3821b2b94e",
        "parentId" : "6b6b9123-8b8e-4e04-b0d0-1371f2890cce",
        "authorId" : "e879b643-55b5-45ef-93e4-20105f593586",
        "body" : "Makes the code more clean.",
        "createdAt" : "2020-05-19T22:03:29Z",
        "updatedAt" : "2020-06-29T21:33:17Z",
        "lastEditedBy" : "e879b643-55b5-45ef-93e4-20105f593586",
        "tags" : [
        ]
      }
    ],
    "commit" : "bbd4a07decc7ca2add213cd1c4cc3b5c405e7bfb",
    "line" : 62,
    "diffHunk" : "@@ -1,1 +109,113 @@// internal struct for string service information\ntype serviceInfo struct {\n\t*proxy.BaseServiceInfo\n\ttargetPort             int\n\texternalIPs            []*externalIPInfo"
  },
  {
    "id" : "befeac03-c579-487d-9344-20e508c0319d",
    "prId" : 90909,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/90909#pullrequestreview-422951548",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3f673b46-61b2-4eb7-a9d2-b91eac8cac94",
        "parentId" : null,
        "authorId" : "399a0f74-29de-4365-9ae5-f743ae5f278c",
        "body" : "May want to add some nil handling if `*svcPortName` is nil.",
        "createdAt" : "2020-06-01T23:04:46Z",
        "updatedAt" : "2020-06-29T21:33:17Z",
        "lastEditedBy" : "399a0f74-29de-4365-9ae5-f743ae5f278c",
        "tags" : [
        ]
      },
      {
        "id" : "044218b0-d50f-46d4-af03-a4d29589d097",
        "parentId" : "3f673b46-61b2-4eb7-a9d2-b91eac8cac94",
        "authorId" : "e879b643-55b5-45ef-93e4-20105f593586",
        "body" : "It is not expected to be nil as it is obtained from enumeration of the map. And  since it is passed to an internal function i skipped any validation.",
        "createdAt" : "2020-06-02T18:30:37Z",
        "updatedAt" : "2020-06-29T21:33:17Z",
        "lastEditedBy" : "e879b643-55b5-45ef-93e4-20105f593586",
        "tags" : [
        ]
      }
    ],
    "commit" : "bbd4a07decc7ca2add213cd1c4cc3b5c405e7bfb",
    "line" : 153,
    "diffHunk" : "@@ -1,1 +221,225 @@func (proxier *Proxier) onEndpointsMapChange(svcPortName *proxy.ServicePortName) {\n\n\tsvc, exists := proxier.serviceMap[*svcPortName]\n\n\tif exists {"
  },
  {
    "id" : "1f897cb4-eb84-45b0-927e-c3af9a6698c1",
    "prId" : 90853,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/90853#pullrequestreview-427476990",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "de93b1b7-2dc9-4c97-a384-a1e3ba06db71",
        "parentId" : null,
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "this may have collisions https://play.golang.org/p/g1PuMck4UU4\r\ndiscussed here https://github.com/containernetworking/plugins/pull/414#issuecomment-634459459, maybe just a comment mentioning this possible risk of mac collision should be enough",
        "createdAt" : "2020-06-09T19:05:09Z",
        "updatedAt" : "2020-06-10T22:37:16Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      },
      {
        "id" : "513bb5f7-82f6-437b-a396-3a5c7824824d",
        "parentId" : "de93b1b7-2dc9-4c97-a384-a1e3ba06db71",
        "authorId" : "e879b643-55b5-45ef-93e4-20105f593586",
        "body" : "Sure, I will add a comment.",
        "createdAt" : "2020-06-09T19:31:49Z",
        "updatedAt" : "2020-06-10T22:37:16Z",
        "lastEditedBy" : "e879b643-55b5-45ef-93e4-20105f593586",
        "tags" : [
        ]
      }
    ],
    "commit" : "ac3f87346fa081a56a2345c883c37c7e74aa198d",
    "line" : 34,
    "diffHunk" : "@@ -1,1 +176,180 @@\t\treturn fmt.Sprintf(\"%v-%02x-%02x-%02x-%02x\", macPrefix, a, b, c, d)\n\t} else if ip6 := ip.To16(); ip6 != nil {\n\t\ta, b, c, d := ip6[15], ip6[14], ip6[13], ip6[12]\n\t\treturn fmt.Sprintf(\"%v-%02x-%02x-%02x-%02x\", macPrefix, a, b, c, d)\n\t}"
  },
  {
    "id" : "9aaff919-457e-4254-a556-53169e293eb1",
    "prId" : 74825,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/74825#pullrequestreview-244055525",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "989c1d8a-61e5-4fce-9c4d-4b12db683cf1",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "cc @kubernetes/sig-network-api-reviews \r\n\r\nis this annotation-driven behavior novel for in-tree components? if not, is `preserve-destination` used by kube-proxy as well? should this be scoped in a `k8s.io/...` prefix, or even a windows-specific `k8s.io` prefix?",
        "createdAt" : "2019-05-29T02:30:09Z",
        "updatedAt" : "2019-05-29T02:31:15Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "99f4e1c6-a25f-4ccc-bde2-49d6ea5f2ac6",
        "parentId" : "989c1d8a-61e5-4fce-9c4d-4b12db683cf1",
        "authorId" : "86293b18-930b-445d-b6b4-023b31ef478d",
        "body" : "Currently this is specific to windows, but can be extendend to general kube-proxy and can be implemented across.",
        "createdAt" : "2019-05-30T22:11:40Z",
        "updatedAt" : "2019-05-30T22:11:40Z",
        "lastEditedBy" : "86293b18-930b-445d-b6b4-023b31ef478d",
        "tags" : [
        ]
      }
    ],
    "commit" : "4e0f63b688891df26b1e138a329c2096051871b8",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +217,221 @@\tklog.Infof(\"Service %q preserve-destination: %v\", svcPortName.NamespacedName.String(), service.Annotations[\"preserve-destination\"])\n\n\tpreserveDIP := service.Annotations[\"preserve-destination\"] == \"true\"\n\terr := hcn.DSRSupported()\n\tif err != nil {"
  },
  {
    "id" : "98e21493-78f3-40c6-9877-c09f0dbb26cb",
    "prId" : 70896,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/70896#pullrequestreview-195216854",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "46552409-4e8c-4e93-8693-a5ab8dae6061",
        "parentId" : null,
        "authorId" : "86293b18-930b-445d-b6b4-023b31ef478d",
        "body" : "Is it okay to have empty providerAddress?",
        "createdAt" : "2019-01-17T01:28:59Z",
        "updatedAt" : "2019-02-05T18:49:38Z",
        "lastEditedBy" : "86293b18-930b-445d-b6b4-023b31ef478d",
        "tags" : [
        ]
      },
      {
        "id" : "2750b8dc-3263-4c7e-9418-17bc63523bf3",
        "parentId" : "46552409-4e8c-4e93-8693-a5ab8dae6061",
        "authorId" : "30b7a7bd-8fad-4167-988b-46b8aed2da81",
        "body" : "Adding continue to skip if PA can't be found",
        "createdAt" : "2019-01-22T20:31:40Z",
        "updatedAt" : "2019-02-05T18:49:38Z",
        "lastEditedBy" : "30b7a7bd-8fad-4167-988b-46b8aed2da81",
        "tags" : [
        ]
      }
    ],
    "commit" : "c115b5aec273291595d017d2b2cd72473557454f",
    "line" : 657,
    "diffHunk" : "@@ -1,1 +1054,1058 @@\t\t\t\t\t}\n\t\t\t\t\tif len(providerAddress) == 0 {\n\t\t\t\t\t\tklog.Errorf(\"Could not find provider address for %s\", ep.ip)\n\t\t\t\t\t\tcontinue\n\t\t\t\t\t}"
  },
  {
    "id" : "212e2388-1d33-4218-bb22-b09fe6d342f8",
    "prId" : 70896,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/70896#pullrequestreview-193428494",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c301bbb5-9b1a-4894-a99d-1b91ac406409",
        "parentId" : null,
        "authorId" : "86293b18-930b-445d-b6b4-023b31ef478d",
        "body" : "You can try logging this network, for debugging",
        "createdAt" : "2019-01-17T01:30:01Z",
        "updatedAt" : "2019-02-05T18:49:38Z",
        "lastEditedBy" : "86293b18-930b-445d-b6b4-023b31ef478d",
        "tags" : [
        ]
      }
    ],
    "commit" : "c115b5aec273291595d017d2b2cd72473557454f",
    "line" : 639,
    "diffHunk" : "@@ -1,1 +1036,1040 @@\t\t\t\t\tnetworkName := proxier.network.name\n\t\t\t\t\tupdatedNetwork, err := hns.getNetworkByName(networkName)\n\t\t\t\t\tif err != nil {\n\t\t\t\t\t\tklog.Fatalf(\"Failed to get network %v: %v\", networkName, err)\n\t\t\t\t\t}"
  },
  {
    "id" : "8bc5f6a2-4ba0-46ae-b2bf-3bde00f3c591",
    "prId" : 51064,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/51064#pullrequestreview-62946093",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "565f5c12-ade9-4a07-ade6-4c410c934b2d",
        "parentId" : null,
        "authorId" : "57f729dd-988a-4d1a-83bf-ee70bf637c64",
        "body" : "All this WindowsKernelCompatTester stuff doesn't actually do anything that I can see; it always returns nil for IsCompatible().  Perhaps just remove it?",
        "createdAt" : "2017-08-31T01:24:50Z",
        "updatedAt" : "2017-09-18T18:12:25Z",
        "lastEditedBy" : "57f729dd-988a-4d1a-83bf-ee70bf637c64",
        "tags" : [
        ]
      },
      {
        "id" : "51c182bb-4b8a-47e1-b137-0ceb08ec5f6f",
        "parentId" : "565f5c12-ade9-4a07-ade6-4c410c934b2d",
        "authorId" : "86293b18-930b-445d-b6b4-023b31ef478d",
        "body" : "There is a TODO to add this function, since old windows kernel wouldn't support this feature and hence kernel proxy wouldn't work for older versions",
        "createdAt" : "2017-09-01T00:24:40Z",
        "updatedAt" : "2017-09-18T18:12:25Z",
        "lastEditedBy" : "86293b18-930b-445d-b6b4-023b31ef478d",
        "tags" : [
        ]
      },
      {
        "id" : "542dd5d3-ce38-4b8a-b5fa-e88a3f7cc7aa",
        "parentId" : "565f5c12-ade9-4a07-ade6-4c410c934b2d",
        "authorId" : "57f729dd-988a-4d1a-83bf-ee70bf637c64",
        "body" : "@madhanrm I'm of the opinion that you should remove the bits that don't do anything for now, and add them back with a new PR when you have implemented them fully.  It keeps the original PR smaller and easier for review, and prevents forgotten bits of code from getting committed that never end up getting used.",
        "createdAt" : "2017-09-06T18:05:25Z",
        "updatedAt" : "2017-09-18T18:12:25Z",
        "lastEditedBy" : "57f729dd-988a-4d1a-83bf-ee70bf637c64",
        "tags" : [
        ]
      },
      {
        "id" : "eeec0c4b-b2cc-4c5f-9f18-87e4c20afee3",
        "parentId" : "565f5c12-ade9-4a07-ade6-4c410c934b2d",
        "authorId" : "86293b18-930b-445d-b6b4-023b31ef478d",
        "body" : "I have taken care of it, and finished the implementation of this NO-OP method.",
        "createdAt" : "2017-09-15T04:55:58Z",
        "updatedAt" : "2017-09-18T18:12:25Z",
        "lastEditedBy" : "86293b18-930b-445d-b6b4-023b31ef478d",
        "tags" : [
        ]
      }
    ],
    "commit" : "a8d797afdd933547275b00a69842f357c374e7de",
    "line" : 58,
    "diffHunk" : "@@ -1,1 +56,60 @@// instead of the \"classic\" userspace Proxier.  This is determined by checking\n// the windows kernel version and for the existence of kernel features.\nfunc CanUseWinKernelProxier(kcompat KernelCompatTester) (bool, error) {\n\t// Check that the kernel supports what we need.\n\tif err := kcompat.IsCompatible(); err != nil {"
  },
  {
    "id" : "cf8412e2-c7ca-4499-acc8-b4da128f0f55",
    "prId" : 51064,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/51064#pullrequestreview-63145026",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "90bb4c79-f834-403e-b631-ce26a9bd38d9",
        "parentId" : null,
        "authorId" : "57f729dd-988a-4d1a-83bf-ee70bf637c64",
        "body" : "macAddress does not appear to be used anywhere.  If it's always going to be constant, just put that constant into the HNSEndpoint{} creation instead of carrying it around in the endpointsInfo.",
        "createdAt" : "2017-08-31T01:28:17Z",
        "updatedAt" : "2017-09-18T18:12:25Z",
        "lastEditedBy" : "57f729dd-988a-4d1a-83bf-ee70bf637c64",
        "tags" : [
        ]
      },
      {
        "id" : "605f6ddd-6b4c-4381-b166-ff81c743d6d8",
        "parentId" : "90bb4c79-f834-403e-b631-ce26a9bd38d9",
        "authorId" : "86293b18-930b-445d-b6b4-023b31ef478d",
        "body" : "It may appear like that for now, but I would like to be this way, so that, when we have info about the macAddress, this can be populated with right data.",
        "createdAt" : "2017-09-15T19:46:46Z",
        "updatedAt" : "2017-09-18T18:12:25Z",
        "lastEditedBy" : "86293b18-930b-445d-b6b4-023b31ef478d",
        "tags" : [
        ]
      }
    ],
    "commit" : "a8d797afdd933547275b00a69842f357c374e7de",
    "line" : 128,
    "diffHunk" : "@@ -1,1 +126,130 @@\tport       uint16\n\tisLocal    bool\n\tmacAddress string\n\thnsID      string\n\trefCount   uint16"
  },
  {
    "id" : "ab596968-03bd-4214-999c-173a92f7d22d",
    "prId" : 51064,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/51064#pullrequestreview-60023680",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fed165fa-40ce-4f34-a92f-cce4226232ab",
        "parentId" : null,
        "authorId" : "57f729dd-988a-4d1a-83bf-ee70bf637c64",
        "body" : "It doesn't look like hcEndpoints is used anywhere in this proxier.  Perhaps just remove the healthcheck stuff if Windows doesn't use it?",
        "createdAt" : "2017-08-31T01:41:06Z",
        "updatedAt" : "2017-09-18T18:12:25Z",
        "lastEditedBy" : "57f729dd-988a-4d1a-83bf-ee70bf637c64",
        "tags" : [
        ]
      },
      {
        "id" : "6bcb66bb-024e-455a-805a-e0f19cb7fb76",
        "parentId" : "fed165fa-40ce-4f34-a92f-cce4226232ab",
        "authorId" : "86293b18-930b-445d-b6b4-023b31ef478d",
        "body" : "I actually missed out the code. Will add it back to use healthcheck",
        "createdAt" : "2017-09-01T00:24:58Z",
        "updatedAt" : "2017-09-18T18:12:25Z",
        "lastEditedBy" : "86293b18-930b-445d-b6b4-023b31ef478d",
        "tags" : [
        ]
      }
    ],
    "commit" : "a8d797afdd933547275b00a69842f357c374e7de",
    "line" : 224,
    "diffHunk" : "@@ -1,1 +222,226 @@\ntype updateEndpointMapResult struct {\n\thcEndpoints       map[types.NamespacedName]int\n\tstaleEndpoints    map[endpointServicePair]bool\n\tstaleServiceNames map[proxy.ServicePortName]bool"
  },
  {
    "id" : "ebbf1de4-25ae-4bc5-b887-594464e7bcfd",
    "prId" : 51064,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/51064#pullrequestreview-59703173",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a93c7cd5-2f00-40c9-a7f2-7069b923588e",
        "parentId" : null,
        "authorId" : "57f729dd-988a-4d1a-83bf-ee70bf637c64",
        "body" : "it doesn't look like staleServices gets used at all?",
        "createdAt" : "2017-08-31T01:43:22Z",
        "updatedAt" : "2017-09-18T18:12:25Z",
        "lastEditedBy" : "57f729dd-988a-4d1a-83bf-ee70bf637c64",
        "tags" : [
        ]
      }
    ],
    "commit" : "a8d797afdd933547275b00a69842f357c374e7de",
    "line" : 952,
    "diffHunk" : "@@ -1,1 +950,954 @@\tendpointUpdateResult := proxier.updateEndpointsMap()\n\n\tstaleServices := serviceUpdateResult.staleServices\n\t// merge stale services gathered from updateEndpointsMap\n\tfor svcPortName := range endpointUpdateResult.staleServiceNames {"
  },
  {
    "id" : "3a966a7b-b64c-4803-9667-55c054381853",
    "prId" : 51064,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/51064#pullrequestreview-62898342",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ee12664e-f562-414e-a948-fbe6f86397c8",
        "parentId" : null,
        "authorId" : "57f729dd-988a-4d1a-83bf-ee70bf637c64",
        "body" : "This looks kinda odd.  In what cases would we have effectively the same svcInfo object under two different svcName keys in the serviceMap?",
        "createdAt" : "2017-08-31T01:53:27Z",
        "updatedAt" : "2017-09-18T18:12:25Z",
        "lastEditedBy" : "57f729dd-988a-4d1a-83bf-ee70bf637c64",
        "tags" : [
        ]
      },
      {
        "id" : "bf10d373-535d-45d9-9a5c-07ba867f40f7",
        "parentId" : "ee12664e-f562-414e-a948-fbe6f86397c8",
        "authorId" : "86293b18-930b-445d-b6b4-023b31ef478d",
        "body" : "@dcbw Where do you see that assumption?",
        "createdAt" : "2017-09-14T21:55:14Z",
        "updatedAt" : "2017-09-18T18:12:25Z",
        "lastEditedBy" : "86293b18-930b-445d-b6b4-023b31ef478d",
        "tags" : [
        ]
      }
    ],
    "commit" : "a8d797afdd933547275b00a69842f357c374e7de",
    "line" : 965,
    "diffHunk" : "@@ -1,1 +963,967 @@\t// Program HNS by adding corresponding policies for each service.\n\tfor svcName, svcInfo := range proxier.serviceMap {\n\t\tif svcInfo.policyApplied {\n\t\t\tglog.V(4).Infof(\"Policy already applied for %s\", spew.Sdump(svcInfo))\n\t\t\tcontinue"
  }
]