[
  {
    "id" : "9b1a8065-603e-4fe0-b2f8-40f798f51f5d",
    "prId" : 91824,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/91824#pullrequestreview-450828658",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "188208ff-9ca4-448b-a068-40f045934464",
        "parentId" : null,
        "authorId" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "body" : "Should we also check the `EndpointSliceProxying` feature gate here? ",
        "createdAt" : "2020-07-17T14:50:31Z",
        "updatedAt" : "2020-10-26T18:06:38Z",
        "lastEditedBy" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "tags" : [
        ]
      },
      {
        "id" : "d5ad69d4-dddd-48b4-a08f-35b4ba026e21",
        "parentId" : "188208ff-9ca4-448b-a068-40f045934464",
        "authorId" : "0c76e20f-41a5-4725-b3c3-d5b6cae89641",
        "body" : "we have no dependency on `EndpointSliceProxying` feature. Only `EndpointSlice`. I do believe `EndpointSliceProxying` has dep on `EndpointSlice` but that is beyond the scope of this PR.",
        "createdAt" : "2020-07-17T17:18:02Z",
        "updatedAt" : "2020-10-26T18:06:38Z",
        "lastEditedBy" : "0c76e20f-41a5-4725-b3c3-d5b6cae89641",
        "tags" : [
        ]
      }
    ],
    "commit" : "14b3451cfa7b96365807f3a0c7f952a87a8ef950",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +82,86 @@\t// endpoint slice controller is the only capabable of producing\n\t// slices for *all* clusterIPs\n\tif dualStackEnabled && !endpointSliceEnabled {\n\t\tallErrs = append(allErrs, field.Invalid(newPath.Child(\"FeatureGates\"), config.FeatureGates, \"EndpointSlice feature flag must be turned on when turning on DualStack\"))\n\t}"
  },
  {
    "id" : "281db06c-5400-4446-a469-584e503de798",
    "prId" : 88657,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/88657#pullrequestreview-366874007",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d11f7df2-155d-48cd-810e-e23a7a77d860",
        "parentId" : null,
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "do we need to move it to an independent function?\r\nSeems that the conntrack timeouts are validated in the same function\r\n> config.TCPCloseWaitTimeout.Duration\r\n> config.TCPEstablishedTimeout.Duration",
        "createdAt" : "2020-02-29T23:58:17Z",
        "updatedAt" : "2020-03-02T02:32:46Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      },
      {
        "id" : "24beca34-3c11-4909-b1cc-5c7ca1305432",
        "parentId" : "d11f7df2-155d-48cd-810e-e23a7a77d860",
        "authorId" : "50978e62-674d-403a-92d2-6a80ec250c92",
        "body" : "I think it makes to have a function for this given the current way we validate the ipvs configuration",
        "createdAt" : "2020-03-01T17:32:08Z",
        "updatedAt" : "2020-03-02T02:32:46Z",
        "lastEditedBy" : "50978e62-674d-403a-92d2-6a80ec250c92",
        "tags" : [
        ]
      }
    ],
    "commit" : "e79f49ebba9ab7402ce1d195d6ada3f234862551",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +285,289 @@}\n\nfunc validateIPVSTimeout(config kubeproxyconfig.KubeProxyIPVSConfiguration, fldPath *field.Path) field.ErrorList {\n\tallErrs := field.ErrorList{}\n"
  },
  {
    "id" : "e25c6fc3-6c1b-41a5-8d10-2a9577d12e82",
    "prId" : 87353,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/87353#pullrequestreview-345962567",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "84bc65ea-5153-449a-a7fa-944bd3eddae3",
        "parentId" : null,
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "please review carefully my logic, since `config.ClusterCIDR != \"\"` I assume `len(cidrs)`will be always `>0`\r\n",
        "createdAt" : "2020-01-21T15:24:28Z",
        "updatedAt" : "2020-01-31T15:01:06Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      }
    ],
    "commit" : "4844b382dc90f64909dfdf8ae117274c4dc4768d",
    "line" : 39,
    "diffHunk" : "@@ -1,1 +80,84 @@\t\tdualStackEnabled := effectiveFeatures.Enabled(kubefeatures.IPv6DualStack)\n\n\t\tswitch {\n\t\t// if DualStack only valid one cidr or two cidrs with one of each IP family\n\t\tcase dualStackEnabled && len(cidrs) > 2:"
  },
  {
    "id" : "692a92d8-8495-4420-93cd-832a00f6b4f4",
    "prId" : 87353,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/87353#pullrequestreview-351568065",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "759a57cd-dcd3-4a96-b1d2-0112ade864a2",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "since we're giving an example here, we should note that the family of the first IP determines the default family for the cluster, so this example means the cluster defaults to IPv4",
        "createdAt" : "2020-01-22T13:34:01Z",
        "updatedAt" : "2020-01-31T15:01:06Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "b44f3892-da13-4c17-8927-b25ad013bca9",
        "parentId" : "759a57cd-dcd3-4a96-b1d2-0112ade864a2",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "if we got an error back (`err != nil`), would it be helpful to include?",
        "createdAt" : "2020-01-22T13:34:25Z",
        "updatedAt" : "2020-01-31T15:01:06Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "0f63b5a4-6c95-4fc2-a50e-85fdbe5e6744",
        "parentId" : "759a57cd-dcd3-4a96-b1d2-0112ade864a2",
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "this is a good point, and maybe we should stress it more, the first IP subnet indicates the default family of the cluster.\r\n",
        "createdAt" : "2020-01-22T13:46:17Z",
        "updatedAt" : "2020-01-31T15:01:06Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      },
      {
        "id" : "6744d2a0-4bdf-4a6a-9050-da702e86381f",
        "parentId" : "759a57cd-dcd3-4a96-b1d2-0112ade864a2",
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "I was thinking more about this, and I think that kube-proxy will not have a notion of default IP family, apiserver does, but kube-proxy just install iptables/ipvs rules based on the services and endpoints.",
        "createdAt" : "2020-01-31T15:08:25Z",
        "updatedAt" : "2020-01-31T15:08:25Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      }
    ],
    "commit" : "4844b382dc90f64909dfdf8ae117274c4dc4768d",
    "line" : 47,
    "diffHunk" : "@@ -1,1 +88,92 @@\t\t\tisDual, err := netutils.IsDualStackCIDRStrings(cidrs)\n\t\t\tif err != nil || !isDual {\n\t\t\t\tallErrs = append(allErrs, field.Invalid(newPath.Child(\"ClusterCIDR\"), config.ClusterCIDR, \"must be a valid DualStack CIDR (e.g. 10.100.0.0/16,fde4:8dba:82e1::/48)\"))\n\t\t\t}\n\t\t// if not DualStack only one CIDR allowed"
  },
  {
    "id" : "f3a46a1e-0580-43d0-a905-9c0828a0930f",
    "prId" : 87353,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/87353#pullrequestreview-346786852",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f7d336ae-9bc7-46d2-bf6f-9405e133d741",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "IsDualStackCIDRStrings allows more than 2 cidrs (e.g. `1.1.1.1,2.2.2.2,fde4:8dba:82e1::/48` would return `true, nil`). I expected us to limit the cidr list to 2 here",
        "createdAt" : "2020-01-22T13:37:32Z",
        "updatedAt" : "2020-01-31T15:01:06Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "d97f384c-3328-4646-a779-26c6a3e830c3",
        "parentId" : "f7d336ae-9bc7-46d2-bf6f-9405e133d741",
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "it's limited to 2 cidrs when the `Proxier` object is instantiated here\r\n\r\nhttps://github.com/kubernetes/kubernetes/blob/dcd0755f84bf8c15fd21e8d697b924991f641ae4/cmd/kube-proxy/app/server_others.go#L179-L181\r\n\r\n `cidrTuple` and `nodeIPTuple` return only a IPv4, IPv6 tuple\r\nhttps://github.com/kubernetes/kubernetes/blob/dcd0755f84bf8c15fd21e8d697b924991f641ae4/cmd/kube-proxy/app/server_others.go#L320-L323\r\n\r\nshould we enforce it in validation too? \r\n(I'd like to come up with an standard way of validating dual stack and apply it to all the components, right now there is no consistency)",
        "createdAt" : "2020-01-22T13:44:59Z",
        "updatedAt" : "2020-01-31T15:01:06Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      },
      {
        "id" : "86ae0521-1afe-4b83-a607-b372b1fabe92",
        "parentId" : "f7d336ae-9bc7-46d2-bf6f-9405e133d741",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "> should we enforce it in validation too?\r\n\r\nIf that is an invalid configuration, yes. Whatever we can validate statically in configuration, we should.",
        "createdAt" : "2020-01-22T13:50:07Z",
        "updatedAt" : "2020-01-31T15:01:06Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "28f54e0a-fe3c-4628-a5dd-afcfbd657a4e",
        "parentId" : "f7d336ae-9bc7-46d2-bf6f-9405e133d741",
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "just to be clear, you mean erroring out or filtering the list?",
        "createdAt" : "2020-01-22T17:55:56Z",
        "updatedAt" : "2020-01-31T15:01:06Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      },
      {
        "id" : "f3c52a8a-63db-41b3-b9a9-84730842233a",
        "parentId" : "f7d336ae-9bc7-46d2-bf6f-9405e133d741",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "erroring",
        "createdAt" : "2020-01-22T17:56:31Z",
        "updatedAt" : "2020-01-31T15:01:06Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "4844b382dc90f64909dfdf8ae117274c4dc4768d",
    "line" : 45,
    "diffHunk" : "@@ -1,1 +86,90 @@\t\t// if DualStack and two cidrs validate if there is at least one of each IP family\n\t\tcase dualStackEnabled && len(cidrs) == 2:\n\t\t\tisDual, err := netutils.IsDualStackCIDRStrings(cidrs)\n\t\t\tif err != nil || !isDual {\n\t\t\t\tallErrs = append(allErrs, field.Invalid(newPath.Child(\"ClusterCIDR\"), config.ClusterCIDR, \"must be a valid DualStack CIDR (e.g. 10.100.0.0/16,fde4:8dba:82e1::/48)\"))"
  },
  {
    "id" : "fdf70b89-c73d-4e9b-a1ee-89dac245e93a",
    "prId" : 79033,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/79033#pullrequestreview-270380920",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c13dfb89-9082-4144-8754-9b93b32acbc9",
        "parentId" : null,
        "authorId" : "c892e350-ac78-4a0c-a13f-d0b4b7842b18",
        "body" : "@aojea I added the feature-gate check here since the kubeproxy config supports it. ",
        "createdAt" : "2019-06-20T18:44:04Z",
        "updatedAt" : "2019-08-09T14:22:41Z",
        "lastEditedBy" : "c892e350-ac78-4a0c-a13f-d0b4b7842b18",
        "tags" : [
        ]
      },
      {
        "id" : "3ab692d9-4bb1-41e7-9713-4b5e759b9be6",
        "parentId" : "c13dfb89-9082-4144-8754-9b93b32acbc9",
        "authorId" : "c892e350-ac78-4a0c-a13f-d0b4b7842b18",
        "body" : "I also moved this into a separate commit since it touches kube-proxy code. ",
        "createdAt" : "2019-06-24T00:58:36Z",
        "updatedAt" : "2019-08-09T14:22:41Z",
        "lastEditedBy" : "c892e350-ac78-4a0c-a13f-d0b4b7842b18",
        "tags" : [
        ]
      },
      {
        "id" : "2a6d365a-977a-4e96-ac5d-cdbdb36fe848",
        "parentId" : "c13dfb89-9082-4144-8754-9b93b32acbc9",
        "authorId" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "body" : "@Arvinderpal @vllry seems you are changing the same file https://github.com/kubernetes/kubernetes/pull/79576 , \r\nI guess that changes in pkg/proxy/apis/config/validation/validation.go makes more sense in @vllry PR, what do you think?",
        "createdAt" : "2019-07-06T14:36:21Z",
        "updatedAt" : "2019-08-09T14:22:41Z",
        "lastEditedBy" : "203dfb85-d185-4057-88b3-a1b4f09fd1fd",
        "tags" : [
        ]
      },
      {
        "id" : "9a0da6b8-2c09-46ba-b3e4-e16937756b82",
        "parentId" : "c13dfb89-9082-4144-8754-9b93b32acbc9",
        "authorId" : "c892e350-ac78-4a0c-a13f-d0b4b7842b18",
        "body" : "Good point. \r\n@vllry your PR is a lot larger and my guess is that it will likely take longer to merge into master. Would you be okay with this change being part of a kubeadm PR?\r\nI'm planning a follow up PR for kubeadm changes related to kube-proxy. For example, we'll need to support a slice for `--bind-address` config. If you like, I can move this change to that PR instead. ",
        "createdAt" : "2019-07-06T21:13:06Z",
        "updatedAt" : "2019-08-09T14:22:41Z",
        "lastEditedBy" : "c892e350-ac78-4a0c-a13f-d0b4b7842b18",
        "tags" : [
        ]
      },
      {
        "id" : "5b048315-e130-43e5-8fba-c62425ae6096",
        "parentId" : "c13dfb89-9082-4144-8754-9b93b32acbc9",
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "cc @rosti\r\npatching the validation of the kube-proxy of the internal types seems required.\r\nseparate commit seems fine by me.",
        "createdAt" : "2019-07-10T18:27:21Z",
        "updatedAt" : "2019-08-09T14:22:41Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      },
      {
        "id" : "2f6b6694-817c-4cdb-a2a1-d8d31a235b92",
        "parentId" : "c13dfb89-9082-4144-8754-9b93b32acbc9",
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "the related PR seems to require rebase, so seems fine that we add it as part of this commit, for now.",
        "createdAt" : "2019-08-02T20:27:43Z",
        "updatedAt" : "2019-08-09T14:22:41Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      }
    ],
    "commit" : "3ac7ae60ccea5045142fecbc95bb369002ac2af2",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +69,73 @@\n\tif config.ClusterCIDR != \"\" {\n\t\tif config.FeatureGates[string(kubefeatures.IPv6DualStack)] {\n\t\t\tcidrs := strings.Split(config.ClusterCIDR, \",\")\n\t\t\tfor _, cidr := range cidrs {"
  },
  {
    "id" : "fbae1747-3c73-47e4-b5e0-a20a0a35cc73",
    "prId" : 79033,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/79033#pullrequestreview-270462716",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fc1bf26c-1b52-4aa5-a8ca-60876194c97d",
        "parentId" : null,
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "so technically here the `if config.FeatureGates[string(kubefeatures.IPv6DualStack)] {` branch is not needed, until we add more logic related to the feature gate.\r\n\r\neven for a single entry such as `config.ClusterCIDR = 10.100.0.0/16`, by using `cidrs := strings.Split(config.ClusterCIDR, \",\")` and the `for _, cidr := range cidrs {` loop, single values will be handled too.\r\n\r\nbut i guess i'm ok leaving the separate branches for visibility of the new feature.\r\n",
        "createdAt" : "2019-08-02T20:34:42Z",
        "updatedAt" : "2019-08-09T14:22:41Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      },
      {
        "id" : "58efe949-031c-4d38-bf68-ba4b89a4b50d",
        "parentId" : "fc1bf26c-1b52-4aa5-a8ca-60876194c97d",
        "authorId" : "c892e350-ac78-4a0c-a13f-d0b4b7842b18",
        "body" : "Yes, it's primarily for visibility. Any dual-stack change should be contained within the feature-gate clause. ",
        "createdAt" : "2019-08-03T15:13:52Z",
        "updatedAt" : "2019-08-09T14:22:41Z",
        "lastEditedBy" : "c892e350-ac78-4a0c-a13f-d0b4b7842b18",
        "tags" : [
        ]
      }
    ],
    "commit" : "3ac7ae60ccea5045142fecbc95bb369002ac2af2",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +76,80 @@\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif _, _, err := net.ParseCIDR(config.ClusterCIDR); err != nil {\n\t\t\t\tallErrs = append(allErrs, field.Invalid(newPath.Child(\"ClusterCIDR\"), config.ClusterCIDR, \"must be a valid CIDR block (e.g. 10.100.0.0/16 or FD02::0:0:0/96)\"))"
  },
  {
    "id" : "9809c9df-3ac5-4533-b51b-7697472412c3",
    "prId" : 79033,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/79033#pullrequestreview-272667072",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ea6f4972-5f47-4376-8df6-170b57c5d002",
        "parentId" : null,
        "authorId" : "e2ca6907-6765-444e-8bf6-1452233150d6",
        "body" : "this might complicate things for kubernetes/kubeadm#1600, I'd suggest dropping this import.\r\n\r\ncc @neolit123 @rosti ",
        "createdAt" : "2019-08-08T13:58:04Z",
        "updatedAt" : "2019-08-09T14:22:41Z",
        "lastEditedBy" : "e2ca6907-6765-444e-8bf6-1452233150d6",
        "tags" : [
        ]
      },
      {
        "id" : "2a1d39e1-3ece-4688-9f52-8b1d3e7fe72a",
        "parentId" : "ea6f4972-5f47-4376-8df6-170b57c5d002",
        "authorId" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "body" : "but this import is in pkg/proxy....validation and not cmd/kubeadm.\r\nkubeadm does not import pkg/features (last time i've checked). why do you see this as a problem?\r\n",
        "createdAt" : "2019-08-08T14:20:46Z",
        "updatedAt" : "2019-08-09T14:22:41Z",
        "lastEditedBy" : "2ce2b44c-9841-49e7-983e-fb7696974908",
        "tags" : [
        ]
      },
      {
        "id" : "cef2263d-15ea-4254-bab5-875fe2beacc5",
        "parentId" : "ea6f4972-5f47-4376-8df6-170b57c5d002",
        "authorId" : "e2ca6907-6765-444e-8bf6-1452233150d6",
        "body" : "my bad, I thought I was reading on `cmd/kubeadm`",
        "createdAt" : "2019-08-08T14:25:23Z",
        "updatedAt" : "2019-08-09T14:22:41Z",
        "lastEditedBy" : "e2ca6907-6765-444e-8bf6-1452233150d6",
        "tags" : [
        ]
      },
      {
        "id" : "3e1ffbe3-c113-4574-8e83-3cf40e229558",
        "parentId" : "ea6f4972-5f47-4376-8df6-170b57c5d002",
        "authorId" : "e2ca6907-6765-444e-8bf6-1452233150d6",
        "body" : "@Arvinderpal - can you run `hack/update-bazel.sh` to reflect the introduced imports on the BUILD files ?",
        "createdAt" : "2019-08-08T14:29:42Z",
        "updatedAt" : "2019-08-09T14:22:41Z",
        "lastEditedBy" : "e2ca6907-6765-444e-8bf6-1452233150d6",
        "tags" : [
        ]
      },
      {
        "id" : "6eafff95-d665-4e4a-9596-d0459644dd23",
        "parentId" : "ea6f4972-5f47-4376-8df6-170b57c5d002",
        "authorId" : "c892e350-ac78-4a0c-a13f-d0b4b7842b18",
        "body" : "Done!",
        "createdAt" : "2019-08-08T15:46:17Z",
        "updatedAt" : "2019-08-09T14:22:41Z",
        "lastEditedBy" : "c892e350-ac78-4a0c-a13f-d0b4b7842b18",
        "tags" : [
        ]
      }
    ],
    "commit" : "3ac7ae60ccea5045142fecbc95bb369002ac2af2",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +29,33 @@\tcomponentbaseconfig \"k8s.io/component-base/config\"\n\tapivalidation \"k8s.io/kubernetes/pkg/apis/core/validation\"\n\tkubefeatures \"k8s.io/kubernetes/pkg/features\"\n\tkubeproxyconfig \"k8s.io/kubernetes/pkg/proxy/apis/config\"\n)"
  }
]