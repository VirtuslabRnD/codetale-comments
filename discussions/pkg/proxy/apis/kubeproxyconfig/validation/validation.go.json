[
  {
    "id" : "3417bf02-921a-4a69-b323-6afa9393bdb4",
    "prId" : 62083,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/62083#pullrequestreview-110498000",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8687111a-5bc4-405f-8783-f8ad1614db39",
        "parentId" : null,
        "authorId" : "f2d7a78e-606f-4060-903e-a21198d7084e",
        "body" : "Single IP should be valid as well?",
        "createdAt" : "2018-04-09T15:07:53Z",
        "updatedAt" : "2018-04-13T17:09:54Z",
        "lastEditedBy" : "f2d7a78e-606f-4060-903e-a21198d7084e",
        "tags" : [
        ]
      },
      {
        "id" : "340fb5be-2c54-485d-901f-bfa68dbbf0d9",
        "parentId" : "8687111a-5bc4-405f-8783-f8ad1614db39",
        "authorId" : "0ac5d6cd-da87-46a2-9b30-0d21db1063a2",
        "body" : "Single IP as in `x.x.x.x/32` is a valid CIDR.",
        "createdAt" : "2018-04-09T15:19:21Z",
        "updatedAt" : "2018-04-13T17:09:54Z",
        "lastEditedBy" : "0ac5d6cd-da87-46a2-9b30-0d21db1063a2",
        "tags" : [
        ]
      }
    ],
    "commit" : "056ae4421cacb29c3da7bed4a3aa960a9faf1c1b",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +260,264 @@\n\tfor i := range excludeCIDRs {\n\t\tif _, _, err := net.ParseCIDR(excludeCIDRs[i]); err != nil {\n\t\t\tallErrs = append(allErrs, field.Invalid(fldPath, excludeCIDRs, \"must be a valid IP block\"))\n\t\t}"
  },
  {
    "id" : "cb931f2e-ca4e-4042-91ef-d12adcf6cf55",
    "prId" : 56529,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/56529#pullrequestreview-82926127",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c0b22bec-3fea-4686-9f83-c177898a0533",
        "parentId" : null,
        "authorId" : "57f729dd-988a-4d1a-83bf-ee70bf637c64",
        "body" : "Instead of checking GOOS, could we perhaps have separate validation_windows.go and validation_linux.go files with +build directives instead?  That seems to be a normal pattern, at least more normal than checking GOOS.",
        "createdAt" : "2017-12-12T18:03:33Z",
        "updatedAt" : "2017-12-12T18:03:33Z",
        "lastEditedBy" : "57f729dd-988a-4d1a-83bf-ee70bf637c64",
        "tags" : [
        ]
      }
    ],
    "commit" : "e48b6f3d157a040e73a3658605c6cc12fdddee0c",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +147,151 @@\t}\n\n\treturn validateProxyModeLinux(mode, fldPath)\n}\n"
  },
  {
    "id" : "4103f2ef-bf43-4a57-a2ae-3fef2ff134bc",
    "prId" : 56529,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/56529#pullrequestreview-83066102",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ed297606-3de3-4ae1-87d2-1a58b27a4d13",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "I won't block this PR, but this is brittle - listing modes twice.  Better would be:\r\n\r\n```\r\nvar modesLinux = sets.NewString(\r\n    string(kubeproxyconfig.ProxyModeUserspace),\r\n    string(kubeproxyconfig.ProxyModeIPTables),\r\n    string(kubeproxyconfig.ProxyModeIPVS)\r\n)\r\nfunc validateProxyModeLinux(mode, ...) {\r\n    if mode == \"\" || modesLinux.Has(mode) {\r\n        return nil\r\n    }\r\n    return field.ErrorList{field.Invalid(fldPath.Child(\"ProxyMode\"), string(mode), errMsg)}\r\n}\r\n```\r\n\r\nor something - the key being that the list of modes is spelled out exactly one time.",
        "createdAt" : "2017-12-12T18:04:51Z",
        "updatedAt" : "2017-12-12T18:05:18Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "95449ded-63ea-4a46-ad32-36b544c0487e",
        "parentId" : "ed297606-3de3-4ae1-87d2-1a58b27a4d13",
        "authorId" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "body" : "File a PR to fix this #57127 ",
        "createdAt" : "2017-12-13T05:40:34Z",
        "updatedAt" : "2017-12-13T05:40:34Z",
        "lastEditedBy" : "0df1da34-610c-4ce5-b0cf-bbda668bf9c1",
        "tags" : [
        ]
      }
    ],
    "commit" : "e48b6f3d157a040e73a3658605c6cc12fdddee0c",
    "line" : 28,
    "diffHunk" : "@@ -1,1 +159,163 @@\tcase \"\":\n\tdefault:\n\t\tmodes := []string{string(kubeproxyconfig.ProxyModeUserspace), string(kubeproxyconfig.ProxyModeIPTables), string(kubeproxyconfig.ProxyModeIPVS)}\n\t\terrMsg := fmt.Sprintf(\"must be %s or blank (blank means the best-available proxy [currently iptables])\", strings.Join(modes, \",\"))\n\t\tallErrs = append(allErrs, field.Invalid(fldPath.Child(\"ProxyMode\"), string(mode), errMsg))"
  }
]