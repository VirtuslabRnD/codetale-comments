[
  {
    "id" : "c7271d3d-2501-4bac-ade4-ba1f445965de",
    "prId" : 81477,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/81477#pullrequestreview-276227366",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1bf462fc-f534-4d02-a4cf-407864e420e4",
        "parentId" : null,
        "authorId" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "body" : "Wondering if we can just `reflect.DeepEqual` the two ipset entries here and then `t.Errorf` if not equal, or does that fail for other reasons?",
        "createdAt" : "2019-08-16T19:16:42Z",
        "updatedAt" : "2019-08-17T19:07:21Z",
        "lastEditedBy" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "tags" : [
        ]
      },
      {
        "id" : "6b32939f-3b01-4ab4-b99b-eb4259236715",
        "parentId" : "1bf462fc-f534-4d02-a4cf-407864e420e4",
        "authorId" : "5bfffe9f-a2aa-4901-9ed3-58d7fdc67de2",
        "body" : "> Wondering if we can just `reflect.DeepEqual` the two ipset entries here and then `t.Errorf` if not equal, or does that fail for other reasons?\r\n\r\nwe can not use deepEqual, because the return of ipset.ListEntries does not guarantee any order of elements in the slice, which may not match with the order of expected entries. And Array values are deeply equal when their corresponding elements are deeply equal.",
        "createdAt" : "2019-08-16T19:53:37Z",
        "updatedAt" : "2019-08-17T19:07:21Z",
        "lastEditedBy" : "5bfffe9f-a2aa-4901-9ed3-58d7fdc67de2",
        "tags" : [
        ]
      },
      {
        "id" : "1396f5d2-7c22-4c8d-a7e9-ce7ab2013530",
        "parentId" : "1bf462fc-f534-4d02-a4cf-407864e420e4",
        "authorId" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "body" : "Sort then DeepEqual? Or update the fake `ListEntries` to use `List()` instead of `UnsortedList`. ",
        "createdAt" : "2019-08-16T20:19:18Z",
        "updatedAt" : "2019-08-17T19:07:21Z",
        "lastEditedBy" : "6dd71efb-88b1-4bb0-b30a-0df658362f14",
        "tags" : [
        ]
      },
      {
        "id" : "009ae541-48d4-430d-bb69-6c91218d05c6",
        "parentId" : "1bf462fc-f534-4d02-a4cf-407864e420e4",
        "authorId" : "5bfffe9f-a2aa-4901-9ed3-58d7fdc67de2",
        "body" : "> \r\n> \r\n> Sort then DeepEqual? Or update the fake `ListEntries` to use `List()` instead of `UnsortedList`.\r\n\r\nThanks for review, Added `Sort then DeepEqual`",
        "createdAt" : "2019-08-17T07:22:30Z",
        "updatedAt" : "2019-08-17T19:07:21Z",
        "lastEditedBy" : "5bfffe9f-a2aa-4901-9ed3-58d7fdc67de2",
        "tags" : [
        ]
      }
    ],
    "commit" : "138b8b8aaa5643fdac4ebc6afb84e22c71eb7606",
    "line" : 254,
    "diffHunk" : "@@ -1,1 +3130,3134 @@\t\t}\n\t\texpectedEntries := []string{}\n\t\tfor _, entry := range entries {\n\t\t\texpectedEntries = append(expectedEntries, entry.String())\n\t\t}"
  },
  {
    "id" : "ae680581-c700-4262-99c3-4cc97f52a28d",
    "prId" : 71911,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/71911#pullrequestreview-183483283",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "60ba9c70-9966-4ffb-b6cc-af3c107e6648",
        "parentId" : null,
        "authorId" : "f2d7a78e-606f-4060-903e-a21198d7084e",
        "body" : "nit: unneeded newline?",
        "createdAt" : "2018-12-11T02:01:28Z",
        "updatedAt" : "2018-12-11T02:01:34Z",
        "lastEditedBy" : "f2d7a78e-606f-4060-903e-a21198d7084e",
        "tags" : [
        ]
      }
    ],
    "commit" : "39dc41d41113cc841118480fe462eac86e8c81d5",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +2908,2912 @@\t\tt.Errorf(\"Expected remainingAddrsMap %v, got %v\", activeBindAddrs, remainingAddrsMap)\n\t}\n\n}\n"
  },
  {
    "id" : "f40870b0-b697-4704-bdd4-1ded0b95fab4",
    "prId" : 64554,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/64554#pullrequestreview-125032669",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "52966bce-4c81-4db3-accb-4927bbe2329d",
        "parentId" : null,
        "authorId" : "7173451b-f4a3-4cf8-93b2-48874c3fbf28",
        "body" : "Is this `FakeSysctl` real used in our test function? Or just for `NewProxier()` input? ",
        "createdAt" : "2018-06-01T02:21:44Z",
        "updatedAt" : "2018-06-01T02:21:44Z",
        "lastEditedBy" : "7173451b-f4a3-4cf8-93b2-48874c3fbf28",
        "tags" : [
        ]
      },
      {
        "id" : "764da24a-72d4-456a-9841-3e6448413d03",
        "parentId" : "52966bce-4c81-4db3-accb-4927bbe2329d",
        "authorId" : "11eef42b-8a79-461d-b901-6022644869b3",
        "body" : " just for NewProxier() input",
        "createdAt" : "2018-06-01T02:29:57Z",
        "updatedAt" : "2018-06-01T02:29:57Z",
        "lastEditedBy" : "11eef42b-8a79-461d-b901-6022644869b3",
        "tags" : [
        ]
      }
    ],
    "commit" : "c3ee2802e4931476da9cb3c3269012aeb6e50e2b",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +114,118 @@}\n\ntype FakeSysctl struct {\n}\n"
  }
]