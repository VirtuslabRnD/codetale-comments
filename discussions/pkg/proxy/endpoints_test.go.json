[
  {
    "id" : "4911f73f-cea2-410e-a914-66178c043e7b",
    "prId" : 81430,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/81430#pullrequestreview-278657087",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ac2c89e5-8400-4255-935b-1226f6831811",
        "parentId" : null,
        "authorId" : "b714f738-aa05-4f49-a624-eaaf3e0cbb70",
        "body" : "nil slice is equiv to empty slice",
        "createdAt" : "2019-08-21T17:46:04Z",
        "updatedAt" : "2019-08-29T08:08:21Z",
        "lastEditedBy" : "b714f738-aa05-4f49-a624-eaaf3e0cbb70",
        "tags" : [
        ]
      },
      {
        "id" : "a00ce0c2-bc73-4eac-a8df-f10c58a67e93",
        "parentId" : "ac2c89e5-8400-4255-935b-1226f6831811",
        "authorId" : "399a0f74-29de-4365-9ae5-f743ae5f278c",
        "body" : "Would it be better to remove this line? It is redundant but I thought it would help keep things clearer and show the variation between test cases.",
        "createdAt" : "2019-08-22T20:06:01Z",
        "updatedAt" : "2019-08-29T08:08:21Z",
        "lastEditedBy" : "399a0f74-29de-4365-9ae5-f743ae5f278c",
        "tags" : [
        ]
      }
    ],
    "commit" : "9665c590c7ac8801215a0bc89d12a9bafb8ceb9d",
    "line" : 39,
    "diffHunk" : "@@ -1,1 +1397,1401 @@\t\t// test starting from an empty state\n\t\t\"add a simple slice that doesn't already exist\": {\n\t\t\tstartingSlices:        []*discovery.EndpointSlice{},\n\t\t\tendpointChangeTracker: NewEndpointChangeTracker(\"host1\", nil, nil, nil, true),\n\t\t\tnamespacedName:        types.NamespacedName{Name: \"svc1\", Namespace: \"ns1\"},"
  },
  {
    "id" : "60ea73be-bf65-4087-af3c-e0fd89914a7a",
    "prId" : 81430,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/81430#pullrequestreview-278660455",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5dceaf70-179c-4095-aac0-c78edc035382",
        "parentId" : null,
        "authorId" : "b714f738-aa05-4f49-a624-eaaf3e0cbb70",
        "body" : "Either the comment is redundant with the description string, or we need to make the two the same and remove the comment.",
        "createdAt" : "2019-08-21T17:47:22Z",
        "updatedAt" : "2019-08-29T08:08:21Z",
        "lastEditedBy" : "b714f738-aa05-4f49-a624-eaaf3e0cbb70",
        "tags" : [
        ]
      },
      {
        "id" : "644bf99f-e419-4f28-acb2-b3baf4a9d474",
        "parentId" : "5dceaf70-179c-4095-aac0-c78edc035382",
        "authorId" : "399a0f74-29de-4365-9ae5-f743ae5f278c",
        "body" : "My initial idea was to have the test names in code (map keys) be relatively short so they could be output as part of failures, and have the comments be more descriptive as far as the rationale for the test case. Looking at what I actually ended up with, I didn't achieve that goal, but I'm tempted to move further in that direction than remove the comments altogether. Not sure what the best practice is here though. What do you think?",
        "createdAt" : "2019-08-22T20:12:56Z",
        "updatedAt" : "2019-08-29T08:08:21Z",
        "lastEditedBy" : "399a0f74-29de-4365-9ae5-f743ae5f278c",
        "tags" : [
        ]
      }
    ],
    "commit" : "9665c590c7ac8801215a0bc89d12a9bafb8ceb9d",
    "line" : 58,
    "diffHunk" : "@@ -1,1 +1416,1420 @@\t\t\t},\n\t\t},\n\t\t// test no modification to state - current change should be nil as nothing changes\n\t\t\"add the same slice that already exists\": {\n\t\t\tstartingSlices: []*discovery.EndpointSlice{"
  },
  {
    "id" : "1500d358-9e27-4a25-b8d3-00c0324b994f",
    "prId" : 81430,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/81430#pullrequestreview-278661264",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "600a4693-784e-4a52-8d71-95c91b39829f",
        "parentId" : null,
        "authorId" : "b714f738-aa05-4f49-a624-eaaf3e0cbb70",
        "body" : "there is no guarantee of iteration order for map?\r\nEither the comment is redundant with the description string, or we need to make the two the same and remove the comment.",
        "createdAt" : "2019-08-21T17:47:46Z",
        "updatedAt" : "2019-08-29T08:08:21Z",
        "lastEditedBy" : "b714f738-aa05-4f49-a624-eaaf3e0cbb70",
        "tags" : [
        ]
      },
      {
        "id" : "2d13f674-5090-4384-9a1c-014159a9b1bc",
        "parentId" : "600a4693-784e-4a52-8d71-95c91b39829f",
        "authorId" : "399a0f74-29de-4365-9ae5-f743ae5f278c",
        "body" : "Each of these test cases is isolated, they don't build on each other. I wasn't trying to indicate anything in reference to how this would interact with other tests or how they would run, more just their logical order in code I suppose.",
        "createdAt" : "2019-08-22T20:14:35Z",
        "updatedAt" : "2019-08-29T08:08:21Z",
        "lastEditedBy" : "399a0f74-29de-4365-9ae5-f743ae5f278c",
        "tags" : [
        ]
      }
    ],
    "commit" : "9665c590c7ac8801215a0bc89d12a9bafb8ceb9d",
    "line" : 37,
    "diffHunk" : "@@ -1,1 +1395,1399 @@\t\texpectedCurrentChange map[ServicePortName][]*BaseEndpointInfo\n\t}{\n\t\t// test starting from an empty state\n\t\t\"add a simple slice that doesn't already exist\": {\n\t\t\tstartingSlices:        []*discovery.EndpointSlice{},"
  },
  {
    "id" : "3ef123c9-3f98-429f-bb64-4740421d4b8b",
    "prId" : 81430,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/81430#pullrequestreview-277947313",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "48b4e9ac-a1cb-4e34-981f-60dcce1064bd",
        "parentId" : null,
        "authorId" : "b714f738-aa05-4f49-a624-eaaf3e0cbb70",
        "body" : "See above.",
        "createdAt" : "2019-08-21T17:47:56Z",
        "updatedAt" : "2019-08-29T08:08:21Z",
        "lastEditedBy" : "b714f738-aa05-4f49-a624-eaaf3e0cbb70",
        "tags" : [
        ]
      }
    ],
    "commit" : "9665c590c7ac8801215a0bc89d12a9bafb8ceb9d",
    "line" : 70,
    "diffHunk" : "@@ -1,1 +1428,1432 @@\t\t\texpectedCurrentChange: nil,\n\t\t},\n\t\t// test additions to existing state\n\t\t\"add a slice that overlaps with existing state\": {\n\t\t\tstartingSlices: []*discovery.EndpointSlice{"
  },
  {
    "id" : "f53456cf-3dcf-4411-a537-c627c2bbf232",
    "prId" : 81430,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/81430#pullrequestreview-277947313",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a8189ada-40ec-4cbc-8119-34f65725e06a",
        "parentId" : null,
        "authorId" : "b714f738-aa05-4f49-a624-eaaf3e0cbb70",
        "body" : "same",
        "createdAt" : "2019-08-21T17:48:09Z",
        "updatedAt" : "2019-08-29T08:08:21Z",
        "lastEditedBy" : "b714f738-aa05-4f49-a624-eaaf3e0cbb70",
        "tags" : [
        ]
      }
    ],
    "commit" : "9665c590c7ac8801215a0bc89d12a9bafb8ceb9d",
    "line" : 102,
    "diffHunk" : "@@ -1,1 +1460,1464 @@\t\t\t},\n\t\t},\n\t\t// test additions to existing state with partially overlapping slices and ports\n\t\t\"add a slice that overlaps with existing state and partial ports\": {\n\t\t\tstartingSlices: []*discovery.EndpointSlice{"
  },
  {
    "id" : "95187e73-d9f2-4123-abe5-d262c9d86da5",
    "prId" : 81430,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/81430#pullrequestreview-278664673",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1e10bbb0-5664-4dae-9d7a-b60eb8e52196",
        "parentId" : null,
        "authorId" : "b714f738-aa05-4f49-a624-eaaf3e0cbb70",
        "body" : "t.Helper()",
        "createdAt" : "2019-08-21T17:50:24Z",
        "updatedAt" : "2019-08-29T08:08:21Z",
        "lastEditedBy" : "b714f738-aa05-4f49-a624-eaaf3e0cbb70",
        "tags" : [
        ]
      },
      {
        "id" : "eb15c3f9-6ce5-4f83-8869-dbacaec841a0",
        "parentId" : "1e10bbb0-5664-4dae-9d7a-b60eb8e52196",
        "authorId" : "399a0f74-29de-4365-9ae5-f743ae5f278c",
        "body" : "TIL, thanks!",
        "createdAt" : "2019-08-22T20:21:20Z",
        "updatedAt" : "2019-08-29T08:08:21Z",
        "lastEditedBy" : "399a0f74-29de-4365-9ae5-f743ae5f278c",
        "tags" : [
        ]
      }
    ],
    "commit" : "9665c590c7ac8801215a0bc89d12a9bafb8ceb9d",
    "line" : 255,
    "diffHunk" : "@@ -1,1 +1613,1617 @@func compareEndpointsMaps(t *testing.T, tci int, newMap EndpointsMap, expected map[ServicePortName][]*BaseEndpointInfo) {\n\tt.Helper()\n\tcompareEndpointsMapsStr(t, string(tci), newMap, expected)\n}\n"
  },
  {
    "id" : "cdc3c5a1-b4d4-42d5-b11c-efa0da0c80e7",
    "prId" : 72046,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/72046#pullrequestreview-312386259",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1c48ace8-b3d0-4a6e-b912-4ada7c8546d6",
        "parentId" : null,
        "authorId" : "e379cdad-051b-485d-824f-1b14a8cc7dd0",
        "body" : "Because `Topology` need to be embedded into `Endpoint`,  and tests use `reflect.DeepEqual` to compare `Endpoint`, but expectedChange does not contains `Topology`, and computed change will contain host topology, they are not equal, so add a new parameter to this helper function to make expectedChange can contains host topology.",
        "createdAt" : "2019-11-06T12:15:16Z",
        "updatedAt" : "2019-11-15T06:38:02Z",
        "lastEditedBy" : "e379cdad-051b-485d-824f-1b14a8cc7dd0",
        "tags" : [
        ]
      }
    ],
    "commit" : "31d623b4d74ceadfad101d36a4710d4406fcf144",
    "line" : 90,
    "diffHunk" : "@@ -1,1 +1823,1827 @@\tif host != \"\" {\n\t\tendpointInfo.Topology = map[string]string{\n\t\t\t\"kubernetes.io/hostname\": host,\n\t\t}\n\t}"
  },
  {
    "id" : "091446e0-dc0b-4859-8375-922c1ea83227",
    "prId" : 72046,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/72046#pullrequestreview-312405929",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "eaca9aed-13a8-4cb9-a771-3d01e0e24e0a",
        "parentId" : null,
        "authorId" : "e379cdad-051b-485d-824f-1b14a8cc7dd0",
        "body" : "Becuase `Topology` was embedded into `BaseEndpointInfo`, which is a map, struct contains map cannot use `!=` operator, so change it to `reflect.DeepEqual`.",
        "createdAt" : "2019-11-06T12:51:51Z",
        "updatedAt" : "2019-11-15T06:38:02Z",
        "lastEditedBy" : "e379cdad-051b-485d-824f-1b14a8cc7dd0",
        "tags" : [
        ]
      }
    ],
    "commit" : "31d623b4d74ceadfad101d36a4710d4406fcf144",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +401,405 @@\t\t\t\tfor i := range newEndpoints[x] {\n\t\t\t\t\tep := newEndpoints[x][i].(*BaseEndpointInfo)\n\t\t\t\t\tif !(reflect.DeepEqual(*ep, *(tc.expected[x][i]))) {\n\t\t\t\t\t\tt.Errorf(\"[%s] expected new[%v][%d] to be %v, got %v\", tc.desc, x, i, tc.expected[x][i], *ep)\n\t\t\t\t\t}"
  }
]