[
  {
    "id" : "60b3ee83-5b26-4d50-adad-2e3bd10000e9",
    "prId" : 956,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "982c9531-3d8b-42f4-b769-d3d1a5430aee",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Can several of the tests in this file be combined into a table-driven test that just performs a series of operations? Might make it easier to add new test cases. Just a thought.\n",
        "createdAt" : "2014-08-19T19:40:26Z",
        "updatedAt" : "2014-08-19T19:40:26Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "a8ca1ea0-af3d-4361-9021-4929b6516c22",
        "parentId" : "982c9531-3d8b-42f4-b769-d3d1a5430aee",
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "I suppose so?  I'm not a huge table-driven test fan.  I'd rather just cut and paste.\n",
        "createdAt" : "2014-08-19T20:55:14Z",
        "updatedAt" : "2014-08-19T20:55:14Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      },
      {
        "id" : "4cfb2f14-981e-446e-a2fc-3ed70bee1046",
        "parentId" : "982c9531-3d8b-42f4-b769-d3d1a5430aee",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Merging, but IMO the table tests are _much_ easier to wade through than copy-and-paste tests.\n",
        "createdAt" : "2014-08-19T23:22:41Z",
        "updatedAt" : "2014-08-19T23:22:41Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "da74625ac6a40460077b1ab0501cb9545016a71f",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +134,138 @@}\n\nfunc TestProxyUpdateDeleteUpdate(t *testing.T) {\n\tlb := NewLoadBalancerRR()\n\tlb.OnUpdate([]api.Endpoints{{JSONBase: api.JSONBase{ID: \"echo\"}, Endpoints: []string{net.JoinHostPort(\"127.0.0.1\", port)}}})"
  },
  {
    "id" : "f762fb68-3a35-45f2-8373-6acc5ea7b3de",
    "prId" : 887,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b88c875b-e522-4917-a9ed-1357add19fa3",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "This is inherently racy, closing a port and then trying to get it again.\n",
        "createdAt" : "2014-08-13T22:46:44Z",
        "updatedAt" : "2014-08-13T22:53:15Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "06b2474e-29e7-43a0-925a-9e1f3314d957",
        "parentId" : "b88c875b-e522-4917-a9ed-1357add19fa3",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "...merging anyway, this isn't new and can be fixed later.\n",
        "createdAt" : "2014-08-14T16:30:08Z",
        "updatedAt" : "2014-08-14T16:30:08Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "7ea2a372194d260452a58ed357b45d3fc68bfa50",
    "line" : 129,
    "diffHunk" : "@@ -1,1 +149,153 @@\t_, newPort, _ := net.SplitHostPort(l.Addr().String())\n\tportNum, _ := strconv.Atoi(newPort)\n\tl.Close()\n\n\t// Wait for the socket to actually get free."
  },
  {
    "id" : "3fddaf4c-2a73-4cb9-a475-918c87e326eb",
    "prId" : 887,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dfdcf0e6-0bb9-4eee-9fa3-852f9d5607de",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "I don't mind this change, but echoServer wasn't the source of any race (as long people were using :0 as the port).\n",
        "createdAt" : "2014-08-13T22:49:12Z",
        "updatedAt" : "2014-08-13T22:53:15Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "274904d9-64c6-4811-b06f-acfad4530d0a",
        "parentId" : "dfdcf0e6-0bb9-4eee-9fa3-852f9d5607de",
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "It wasn't the source of the race.  The race was actually fixed elsewhere,\nas far as I can tell.\n\nBut it was the source of the flakes as far as I can tell.\n\nI think the basic problem is that there is no ability to flush either side\nof the TCP connection independently.  You're forced to just close the whole\nthing to force a flush, and that lead to situations where sometimes not all\nof the data was written, and thus not all of it was echo-d, and the Read\nhung forever waiting for 5 bytes.\n\n(at least that seems to be the issue)\n\nEmpirically this PR switched it that test from being ~50% flakey on my\nmachine to 100% reliable over 10 runs.\n\n--brendan\n\nOn Wed, Aug 13, 2014 at 3:49 PM, Daniel Smith notifications@github.com\nwrote:\n\n> In pkg/proxy/proxier_test.go:\n> \n> > ```\n> > if err != nil {\n> > ```\n> > -       return \"\", fmt.Errorf(\"failed to start echo service: %v\", err)\n> > -       panic(fmt.Sprintf(\"failed to parse: %v\", err))\n> > -   }\n> > -   _, port, err = net.SplitHostPort(u.Host)\n> \n> I don't mind this change, but echoServer wasn't the source of any race (as\n> long people were using :0 as the port).\n> \n> â€”\n> Reply to this email directly or view it on GitHub\n> https://github.com/GoogleCloudPlatform/kubernetes/pull/887/files#r16211810\n> .\n",
        "createdAt" : "2014-08-14T04:44:48Z",
        "updatedAt" : "2014-08-14T04:44:48Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      },
      {
        "id" : "41ff6c16-22c3-43e9-8ad6-5c453d65ac51",
        "parentId" : "dfdcf0e6-0bb9-4eee-9fa3-852f9d5607de",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Ah, I see. It was a completely different problem than racing to get the port in the first place. Cool.\n",
        "createdAt" : "2014-08-14T16:29:23Z",
        "updatedAt" : "2014-08-14T16:29:23Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "7ea2a372194d260452a58ed357b45d3fc68bfa50",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +53,57 @@\t\tpanic(fmt.Sprintf(\"failed to parse: %v\", err))\n\t}\n\t_, port, err = net.SplitHostPort(u.Host)\n\tif err != nil {\n\t\tpanic(fmt.Sprintf(\"failed to parse: %v\", err))"
  }
]