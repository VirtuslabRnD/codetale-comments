[
  {
    "id" : "f66fde93-0d73-48e3-aee0-a16a004018da",
    "prId" : 94107,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/94107#pullrequestreview-472087393",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "eee0635e-826c-4a62-a1f9-68d9abe410dc",
        "parentId" : null,
        "authorId" : "b714f738-aa05-4f49-a624-eaaf3e0cbb70",
        "body" : "Does this solve the actual crashloop though? If the input is invalid",
        "createdAt" : "2020-08-19T20:02:25Z",
        "updatedAt" : "2020-08-21T01:21:10Z",
        "lastEditedBy" : "b714f738-aa05-4f49-a624-eaaf3e0cbb70",
        "tags" : [
        ]
      },
      {
        "id" : "3c808def-c976-491a-81e5-481bc9e73999",
        "parentId" : "eee0635e-826c-4a62-a1f9-68d9abe410dc",
        "authorId" : "399a0f74-29de-4365-9ae5-f743ae5f278c",
        "body" : "Thanks for double checking. I did some more thorough testing to ensure this would fix the problem and have given a more detailed explanation below.",
        "createdAt" : "2020-08-21T01:32:52Z",
        "updatedAt" : "2020-08-21T01:32:52Z",
        "lastEditedBy" : "399a0f74-29de-4365-9ae5-f743ae5f278c",
        "tags" : [
        ]
      }
    ],
    "commit" : "c382c79f601848d4053b33acf01ed64dfc6b1893",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +150,154 @@\tfor i, sourceRange := range service.Spec.LoadBalancerSourceRanges {\n\t\tloadBalancerSourceRanges[i] = strings.TrimSpace(sourceRange)\n\t}\n\n\tif sct.isIPv6Mode == nil {"
  },
  {
    "id" : "429da2d0-2f92-48fb-80bc-9dfb85556c9c",
    "prId" : 56880,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/56880#pullrequestreview-98371286",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c6c1be6e-7229-43ab-99b5-098c451e3d59",
        "parentId" : null,
        "authorId" : "c1166017-761f-41df-8ad7-07e3dd792799",
        "body" : "do we need this rename to \"utilproxy\"? Maybe keep it as proxyutil or just use util. ?",
        "createdAt" : "2018-02-21T19:09:07Z",
        "updatedAt" : "2018-02-27T19:18:45Z",
        "lastEditedBy" : "c1166017-761f-41df-8ad7-07e3dd792799",
        "tags" : [
        ]
      },
      {
        "id" : "ca35cccd-5243-49de-a72f-3c5c19ea731b",
        "parentId" : "c6c1be6e-7229-43ab-99b5-098c451e3d59",
        "authorId" : "26bd3fa6-ac8d-4cb0-b746-a30dc1dc2931",
        "body" : "Yeah I don't have a strong opinion between `util` and `utilproxy`, just trying to keep the naming consistent with other places so grepping the references will be easier :) Also `utilproxy` makes the purpose of the pkg more clear (hopefully).",
        "createdAt" : "2018-02-21T21:42:16Z",
        "updatedAt" : "2018-02-27T19:18:45Z",
        "lastEditedBy" : "26bd3fa6-ac8d-4cb0-b746-a30dc1dc2931",
        "tags" : [
        ]
      }
    ],
    "commit" : "6004452bedf2d7f089a036f9a8364989918a4408",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +32,36 @@\tapi \"k8s.io/kubernetes/pkg/apis/core\"\n\t\"k8s.io/kubernetes/pkg/apis/core/helper\"\n\tutilproxy \"k8s.io/kubernetes/pkg/proxy/util\"\n\tutilnet \"k8s.io/kubernetes/pkg/util/net\"\n)"
  },
  {
    "id" : "144d6eaf-0251-4f3e-b95b-37186b876a73",
    "prId" : 56880,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/56880#pullrequestreview-99544006",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2c46e6b9-a95a-4739-a767-dedf67aab8b3",
        "parentId" : null,
        "authorId" : "e83108b8-1fb2-416b-9298-d5b70c14f708",
        "body" : "Can we merge the ipv6 filtering logic into one place? \r\nHaving ipv6 related logic scatter around will make it very hard to maintain. \r\n\r\n\r\n",
        "createdAt" : "2018-02-27T01:00:07Z",
        "updatedAt" : "2018-02-27T19:18:45Z",
        "lastEditedBy" : "e83108b8-1fb2-416b-9298-d5b70c14f708",
        "tags" : [
        ]
      },
      {
        "id" : "b1e314b0-09c4-4af5-9a19-72d1655d077c",
        "parentId" : "2c46e6b9-a95a-4739-a767-dedf67aab8b3",
        "authorId" : "e83108b8-1fb2-416b-9298-d5b70c14f708",
        "body" : "Is it possible to filter earlier? You just need the ServiceSpec right?\r\n\r\nFor instance, can we filter in `ServiceChangeTracker.Update`? And have a function to scan thru the service spec. If there is IP Version problem, then skip storing the service into ServiceMap?\r\n\r\n",
        "createdAt" : "2018-02-27T01:03:11Z",
        "updatedAt" : "2018-02-27T19:18:45Z",
        "lastEditedBy" : "e83108b8-1fb2-416b-9298-d5b70c14f708",
        "tags" : [
        ]
      },
      {
        "id" : "135dc75d-3abe-4bad-8e20-bfd46aa11743",
        "parentId" : "2c46e6b9-a95a-4739-a767-dedf67aab8b3",
        "authorId" : "e83108b8-1fb2-416b-9298-d5b70c14f708",
        "body" : "We can also introduce a state in ServiceMap to memorize that the ServiceSpec IP version is in an invalid state. As long as the ServiceSpec is still invalid, kube-proxy would not record event. This avoids events storm when each kube-proxy generates an event on every service/endpoint update. \r\n\r\nSame applies for Endpoints. \r\n\r\nWhat do you think?",
        "createdAt" : "2018-02-27T01:06:45Z",
        "updatedAt" : "2018-02-27T19:18:45Z",
        "lastEditedBy" : "e83108b8-1fb2-416b-9298-d5b70c14f708",
        "tags" : [
        ]
      },
      {
        "id" : "efc20613-2dbb-4cce-83f7-fb050823ba50",
        "parentId" : "2c46e6b9-a95a-4739-a767-dedf67aab8b3",
        "authorId" : "26bd3fa6-ac8d-4cb0-b746-a30dc1dc2931",
        "body" : "Discussed with @freehan offline, we decided to go with this for now and opened https://github.com/kubernetes/kubernetes/issues/60471 for future improvement.",
        "createdAt" : "2018-02-27T02:00:45Z",
        "updatedAt" : "2018-02-27T19:18:45Z",
        "lastEditedBy" : "26bd3fa6-ac8d-4cb0-b746-a30dc1dc2931",
        "tags" : [
        ]
      },
      {
        "id" : "5d5f4ae1-0874-4c51-9b31-aae3d37454f9",
        "parentId" : "2c46e6b9-a95a-4739-a767-dedf67aab8b3",
        "authorId" : "26bd3fa6-ac8d-4cb0-b746-a30dc1dc2931",
        "body" : "Added more comments in code to make the filter purpose clearer.",
        "createdAt" : "2018-02-27T02:52:49Z",
        "updatedAt" : "2018-02-27T19:18:45Z",
        "lastEditedBy" : "26bd3fa6-ac8d-4cb0-b746-a30dc1dc2931",
        "tags" : [
        ]
      }
    ],
    "commit" : "6004452bedf2d7f089a036f9a8364989918a4408",
    "line" : 204,
    "diffHunk" : "@@ -1,1 +242,246 @@\t}\n\n\tif len(service.Spec.ClusterIP) != 0 {\n\t\t// Filter out the incorrect IP version case.\n\t\t// If ClusterIP on service has incorrect IP version, service itself will be ignored."
  },
  {
    "id" : "985423b1-f9bf-4eda-98ac-8e9c517e79d7",
    "prId" : 52528,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/52528#pullrequestreview-95528109",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "84c52723-7dba-4a6d-8aa0-527d14fd75df",
        "parentId" : null,
        "authorId" : "c1166017-761f-41df-8ad7-07e3dd792799",
        "body" : "Could you explain why this says \"uncommitted changes\"? I thought serviceChange holds previous and current mapping after changes have been applied. I think I am missing something.",
        "createdAt" : "2018-02-09T00:39:01Z",
        "updatedAt" : "2018-02-09T09:26:44Z",
        "lastEditedBy" : "c1166017-761f-41df-8ad7-07e3dd792799",
        "tags" : [
        ]
      },
      {
        "id" : "bda62fde-49e5-442b-bc46-196aa5b5678e",
        "parentId" : "84c52723-7dba-4a6d-8aa0-527d14fd75df",
        "authorId" : "f2d7a78e-606f-4060-903e-a21198d7084e",
        "body" : "```\r\n// serviceChange contains all changes to services that happened since proxy rules were synced.  For a single object,\r\n// changes are accumulated, i.e. previous is state from before applying the changes,\r\n// current is state after applying all of the changes.\r\ntype serviceChange struct {\r\n\tprevious ServiceMap\r\n\tcurrent  ServiceMap\r\n}\r\n```\r\n\r\nSo, I think the word \"uncommitted changes\" is accurate?\r\n\r\n",
        "createdAt" : "2018-02-09T09:08:49Z",
        "updatedAt" : "2018-02-09T09:26:44Z",
        "lastEditedBy" : "f2d7a78e-606f-4060-903e-a21198d7084e",
        "tags" : [
        ]
      },
      {
        "id" : "a29a7a4c-2287-41a8-9dbf-d0efd2a75bfe",
        "parentId" : "84c52723-7dba-4a6d-8aa0-527d14fd75df",
        "authorId" : "c1166017-761f-41df-8ad7-07e3dd792799",
        "body" : "ok, I think i get it now.",
        "createdAt" : "2018-02-09T19:04:33Z",
        "updatedAt" : "2018-02-09T19:04:33Z",
        "lastEditedBy" : "c1166017-761f-41df-8ad7-07e3dd792799",
        "tags" : [
        ]
      }
    ],
    "commit" : "b7dbaab96a6f9daa8ef53ba24f565a13921bece4",
    "line" : 39,
    "diffHunk" : "@@ -1,1 +37,41 @@}\n\n// ServiceChangeTracker carries state about uncommitted changes to an arbitrary number of\n// Services, keyed by their namespace and name.\ntype ServiceChangeTracker struct {"
  },
  {
    "id" : "66926314-4c65-424f-8779-9683ef392edf",
    "prId" : 52528,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/52528#pullrequestreview-95325083",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "627c51e2-f88f-4aa2-84ce-7cc10a9d05da",
        "parentId" : null,
        "authorId" : "c1166017-761f-41df-8ad7-07e3dd792799",
        "body" : "nit: maybe check if svc is still nil, in case previous and current were incorrectly passed in as nil?",
        "createdAt" : "2018-02-09T00:39:31Z",
        "updatedAt" : "2018-02-09T09:26:44Z",
        "lastEditedBy" : "c1166017-761f-41df-8ad7-07e3dd792799",
        "tags" : [
        ]
      },
      {
        "id" : "ecc8143a-4626-4ce2-b1af-9543fe88f8e9",
        "parentId" : "627c51e2-f88f-4aa2-84ce-7cc10a9d05da",
        "authorId" : "f2d7a78e-606f-4060-903e-a21198d7084e",
        "body" : "Done.",
        "createdAt" : "2018-02-09T06:22:13Z",
        "updatedAt" : "2018-02-09T09:26:44Z",
        "lastEditedBy" : "f2d7a78e-606f-4060-903e-a21198d7084e",
        "tags" : [
        ]
      }
    ],
    "commit" : "b7dbaab96a6f9daa8ef53ba24f565a13921bece4",
    "line" : 70,
    "diffHunk" : "@@ -1,1 +68,72 @@\tif svc == nil {\n\t\tsvc = previous\n\t}\n\t// previous == nil && current == nil is unexpected, we should return false directly.\n\tif svc == nil {"
  }
]