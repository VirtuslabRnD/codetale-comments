[
  {
    "id" : "6131381e-cd52-4f66-84a3-d41f1048be71",
    "prId" : 46450,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/46450#pullrequestreview-40441467",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f5b05ec0-4c64-4f8f-a5e0-bb6f7c99c01f",
        "parentId" : null,
        "authorId" : "e83108b8-1fb2-416b-9298-d5b70c14f708",
        "body" : "comment: if there is one more read operation. Then just have create another function for it.",
        "createdAt" : "2017-05-26T04:02:18Z",
        "updatedAt" : "2017-05-26T04:02:27Z",
        "lastEditedBy" : "e83108b8-1fb2-416b-9298-d5b70c14f708",
        "tags" : [
        ]
      }
    ],
    "commit" : "41c4e965c353187889f9b86c3e541b775656dc18",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +198,202 @@func (h hcHandler) ServeHTTP(resp http.ResponseWriter, req *http.Request) {\n\th.hcs.lock.Lock()\n\tsvc, ok := h.hcs.services[h.name]\n\tif !ok || svc == nil {\n\t\th.hcs.lock.Unlock()"
  },
  {
    "id" : "38ce83ab-42a8-4adc-b87a-3bfe1d0c2429",
    "prId" : 44968,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/44968#pullrequestreview-34987091",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "207c45f3-aff5-4617-9481-de9072eb91c2",
        "parentId" : null,
        "authorId" : "b714f738-aa05-4f49-a624-eaaf3e0cbb70",
        "body" : "do you need locking?",
        "createdAt" : "2017-04-26T23:04:42Z",
        "updatedAt" : "2017-05-05T21:45:05Z",
        "lastEditedBy" : "b714f738-aa05-4f49-a624-eaaf3e0cbb70",
        "tags" : [
        ]
      },
      {
        "id" : "53c8856a-db72-4d0d-999f-d0fe6282383a",
        "parentId" : "207c45f3-aff5-4617-9481-de9072eb91c2",
        "authorId" : "26bd3fa6-ac8d-4cb0-b746-a30dc1dc2931",
        "body" : "The plan is to use sync/atomic.Value for concurrent read/write. I think it should be sufficient?",
        "createdAt" : "2017-04-26T23:26:06Z",
        "updatedAt" : "2017-05-05T21:45:05Z",
        "lastEditedBy" : "26bd3fa6-ac8d-4cb0-b746-a30dc1dc2931",
        "tags" : [
        ]
      }
    ],
    "commit" : "e5db5dc3a1f0be7c96beda3488b42d84376ac23f",
    "line" : 31,
    "diffHunk" : "@@ -1,1 +247,251 @@// last update.\ntype HealthzServer struct {\n\tlistener    Listener\n\thttpFactory HTTPServerFactory\n\tclock       clock.Clock"
  },
  {
    "id" : "ff4f242b-a417-49f4-af82-4e5a967d9847",
    "prId" : 44053,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/44053#pullrequestreview-30949237",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "98728ae3-0afb-4861-aea8-2560fb725e19",
        "parentId" : null,
        "authorId" : "e83108b8-1fb2-416b-9298-d5b70c14f708",
        "body" : "nit: Rename to HealthCheckServer?",
        "createdAt" : "2017-04-05T00:38:59Z",
        "updatedAt" : "2017-04-05T21:23:13Z",
        "lastEditedBy" : "e83108b8-1fb2-416b-9298-d5b70c14f708",
        "tags" : [
        ]
      },
      {
        "id" : "233a627d-a451-4966-8d14-e007b8134998",
        "parentId" : "98728ae3-0afb-4861-aea8-2560fb725e19",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "I did that originally, and `go lint` failed me.  Scoped names should be succinct.  `healthcheck.Server` vs `healthcheck.HealthCheckServer`",
        "createdAt" : "2017-04-05T03:13:37Z",
        "updatedAt" : "2017-04-05T21:23:13Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "5e43c14098616739d007a98658c520775e31afd4",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +37,41 @@// 503 \"Service Unavailable\" error (telling LBs not to use this node).  If there\n// are 1 or more endpoints, it returns a 200 \"OK\".\ntype Server interface {\n\t// Make the new set of services be active.  Services that were open before\n\t// will be closed.  Services that are new will be opened.  Service that"
  },
  {
    "id" : "bb28929e-0355-48dd-9ff2-86ef000105cc",
    "prId" : 44053,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/44053#pullrequestreview-30949176",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5fb6847b-577e-47d1-b174-737835edae47",
        "parentId" : null,
        "authorId" : "e83108b8-1fb2-416b-9298-d5b70c14f708",
        "body" : "nit: Rename to healthCheckServer",
        "createdAt" : "2017-04-05T00:39:08Z",
        "updatedAt" : "2017-04-05T21:23:13Z",
        "lastEditedBy" : "e83108b8-1fb2-416b-9298-d5b70c14f708",
        "tags" : [
        ]
      },
      {
        "id" : "5d6cd795-af66-48a2-96a6-d19fea2efce7",
        "parentId" : "5fb6847b-577e-47d1-b174-737835edae47",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "heh, I did that originally and `go lint` yelled at me for stuttering.",
        "createdAt" : "2017-04-05T03:12:39Z",
        "updatedAt" : "2017-04-05T21:23:13Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "5e43c14098616739d007a98658c520775e31afd4",
    "line" : 144,
    "diffHunk" : "@@ -1,1 +111,115 @@var _ HTTPServerFactory = stdHTTPServerFactory{}\n\ntype server struct {\n\thostname    string\n\trecorder    record.EventRecorder // can be nil"
  },
  {
    "id" : "3171716c-ef3a-4614-8eca-e03f9ed10135",
    "prId" : 44053,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/44053#pullrequestreview-31167862",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7d21db5b-2dc6-460b-a23a-2bbcebb2ad82",
        "parentId" : null,
        "authorId" : "26bd3fa6-ac8d-4cb0-b746-a30dc1dc2931",
        "body" : "This still looks a bit weird...Maybe serviceHealthChecker?",
        "createdAt" : "2017-04-05T18:28:27Z",
        "updatedAt" : "2017-04-05T21:23:13Z",
        "lastEditedBy" : "26bd3fa6-ac8d-4cb0-b746-a30dc1dc2931",
        "tags" : [
        ]
      },
      {
        "id" : "d08f222f-c84e-43ec-92f3-3bb74804faa8",
        "parentId" : "7d21db5b-2dc6-460b-a23a-2bbcebb2ad82",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "naming is hard.  It's not a server, it's not a listener.  It's not actually doing checks, so it is not a checker.  beg for this to be good enough or fixed later?",
        "createdAt" : "2017-04-05T20:51:18Z",
        "updatedAt" : "2017-04-05T21:23:13Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "3f7e618b-bbf8-4629-81c6-0e45ccf63be8",
        "parentId" : "7d21db5b-2dc6-460b-a23a-2bbcebb2ad82",
        "authorId" : "26bd3fa6-ac8d-4cb0-b746-a30dc1dc2931",
        "body" : "Yeah, SGTM",
        "createdAt" : "2017-04-05T20:56:44Z",
        "updatedAt" : "2017-04-05T21:23:13Z",
        "lastEditedBy" : "26bd3fa6-ac8d-4cb0-b746-a30dc1dc2931",
        "tags" : [
        ]
      }
    ],
    "commit" : "5e43c14098616739d007a98658c520775e31afd4",
    "line" : 231,
    "diffHunk" : "@@ -1,1 +179,183 @@}\n\ntype hcInstance struct {\n\tport      uint16\n\tlistener  net.Listener"
  },
  {
    "id" : "92dc63ea-961b-48a9-a87c-89629d3867cb",
    "prId" : 30569,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "78ebd48f-3ba5-426d-a1db-d00c0263485a",
        "parentId" : null,
        "authorId" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "body" : "why not:\n\n``` go\nif numEndpoints == 0 {\n  h.serviceEndpointsMap.Delete()\n  return\n}\n// numEndpoints can never be < 0\nentry = serviceEndpointsList{req.serviceName, &emptyset}\nif e, ok := h.serviceEndpointsMap.Get(); ok {\n  entry = e\n}\n```\n",
        "createdAt" : "2016-08-16T01:34:27Z",
        "updatedAt" : "2016-08-21T02:49:50Z",
        "lastEditedBy" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "tags" : [
        ]
      }
    ],
    "commit" : "282880f549cf74faa9182d087411bf43d902d956",
    "line" : null,
    "diffHunk" : "@@ -1,1 +88,92 @@\t\tif _, ok := h.serviceEndpointsMap.Get(req.serviceName.String()); ok {\n\t\t\tglog.V(4).Infof(\"Deleting endpoints map for service %s, all local endpoints gone\", req.serviceName.String())\n\t\t\th.serviceEndpointsMap.Delete(req.serviceName.String())\n\t\t}\n\t\treturn"
  },
  {
    "id" : "0f72086c-0172-4d80-b690-404de44779ec",
    "prId" : 29409,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "608d0a42-75e8-4f79-b734-22bd443a3d4a",
        "parentId" : null,
        "authorId" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "body" : "please add a doc.go in this package that describes what happens when a new service is added, new endpoints are created etc. Eg: https://github.com/kubernetes/kubernetes/blob/master/pkg/dns/doc.go#L17, https://github.com/kubernetes/contrib/blob/master/ingress/controllers/gce/controller/doc.go. You're also free to just add it as a block comment at the head of this file, if you prefer. \n",
        "createdAt" : "2016-08-13T02:11:16Z",
        "updatedAt" : "2016-08-23T23:16:56Z",
        "lastEditedBy" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "tags" : [
        ]
      }
    ],
    "commit" : "b82c028f77d85ac0be39b510ccdbc2783e43fdc7",
    "line" : null,
    "diffHunk" : "@@ -1,1 +-1,3 @@/*\nCopyright 2016 The Kubernetes Authors.\n"
  }
]