[
  {
    "id" : "39431d82-9875-4819-b48e-d914813702db",
    "prId" : 83498,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/83498#pullrequestreview-297624104",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "6fe2e7f9-a737-4178-a9e1-da5bb445e3da",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "I don't have time to spelunk right this minute, but won't the change-tracking logic elide an A-B-A change, such that this would believe a change was queued but sync() doesn't actually need to run?  e.g. change port number and then change it back.",
        "createdAt" : "2019-10-04T16:56:47Z",
        "updatedAt" : "2019-10-04T17:37:24Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "38bfd792-07e1-454f-9c83-e189f9be32f4",
        "parentId" : "6fe2e7f9-a737-4178-a9e1-da5bb445e3da",
        "authorId" : "c490e441-2b9f-41f2-8559-d47be0ea8836",
        "body" : "If we elide a change then `lastQueued` won't get updated. We call `proxier.healthzServer.QueuedUpdate()` immediately before calling `proxier.syncRunner.Run()`.\r\n",
        "createdAt" : "2019-10-04T17:46:43Z",
        "updatedAt" : "2019-10-04T17:46:43Z",
        "lastEditedBy" : "c490e441-2b9f-41f2-8559-d47be0ea8836",
        "tags" : [
        ]
      }
    ],
    "commit" : "f83474916ef8f030412083a9ac25fc0764d726d6",
    "line" : 142,
    "diffHunk" : "@@ -1,1 +140,144 @@\t\t// We've processed all updates\n\t\thealthy = true\n\tcase currentTime.Sub(lastQueued) < h.hs.healthTimeout:\n\t\t// There's an unprocessed update queued, but it's not late yet\n\t\thealthy = true"
  },
  {
    "id" : "4c23ec5d-56d1-4639-9a8d-d9268d67ff9a",
    "prId" : 83498,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/83498#pullrequestreview-302302297",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "febe2daa-019d-476a-8bc4-a9d4fa7f65b1",
        "parentId" : null,
        "authorId" : "57f729dd-988a-4d1a-83bf-ee70bf637c64",
        "body" : "@danwinship is this more complicated than just removing this lastUpdated.IsZero() block? lastUpdated will never be updated unless the proxy has fully initialized (eg gotten all initial endpoints and services).",
        "createdAt" : "2019-10-16T03:17:26Z",
        "updatedAt" : "2019-10-16T03:17:26Z",
        "lastEditedBy" : "57f729dd-988a-4d1a-83bf-ee70bf637c64",
        "tags" : [
        ]
      },
      {
        "id" : "17ccb248-78ac-41af-a01a-99e0f7227f6c",
        "parentId" : "febe2daa-019d-476a-8bc4-a9d4fa7f65b1",
        "authorId" : "57f729dd-988a-4d1a-83bf-ee70bf637c64",
        "body" : "in any case, that's a todo...",
        "createdAt" : "2019-10-16T03:18:10Z",
        "updatedAt" : "2019-10-16T03:18:10Z",
        "lastEditedBy" : "57f729dd-988a-4d1a-83bf-ee70bf637c64",
        "tags" : [
        ]
      }
    ],
    "commit" : "f83474916ef8f030412083a9ac25fc0764d726d6",
    "line" : 137,
    "diffHunk" : "@@ -1,1 +135,139 @@\t\t// The proxy is healthy while it's starting up\n\t\t// TODO: this makes it useless as a readinessProbe. Consider changing\n\t\t// to only become healthy after the proxy is fully synced.\n\t\thealthy = true\n\tcase lastUpdated.After(lastQueued):"
  }
]