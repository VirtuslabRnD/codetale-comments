[
  {
    "id" : "1016650f-ca60-4d50-8287-66422a7ba8af",
    "prId" : 30569,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0634e1a4-d6fe-4eb6-b84b-2992c9fc94ee",
        "parentId" : null,
        "authorId" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "body" : "drop the unnecessary deref\n",
        "createdAt" : "2016-08-16T01:34:40Z",
        "updatedAt" : "2016-08-21T02:49:50Z",
        "lastEditedBy" : "395f4f9a-98be-4485-b436-51f0897d7c9f",
        "tags" : [
        ]
      },
      {
        "id" : "26d3f252-1e17-44dc-b24b-da988ab006c3",
        "parentId" : "0634e1a4-d6fe-4eb6-b84b-2992c9fc94ee",
        "authorId" : "d36c6e2e-68ff-4beb-99ef-11c76f6929ce",
        "body" : "I tried it, but it hits this error below.\n\n`sr.listener.Close undefined (type *net.Listener is pointer to interface, not interface)`\n",
        "createdAt" : "2016-08-16T18:18:30Z",
        "updatedAt" : "2016-08-21T02:49:50Z",
        "lastEditedBy" : "d36c6e2e-68ff-4beb-99ef-11c76f6929ce",
        "tags" : [
        ]
      }
    ],
    "commit" : "282880f549cf74faa9182d087411bf43d902d956",
    "line" : 50,
    "diffHunk" : "@@ -1,1 +48,52 @@\t\t\treq.serviceName, sr.listenPort, req.listenPort)\n\t\tdelete(h.serviceResponderMap, req.serviceName)\n\t\t(*sr.listener).Close()\n\t}\n\t// Create a service responder object and start listening and serving on the provided port"
  }
]