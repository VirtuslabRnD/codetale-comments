[
  {
    "id" : "98ec4e6d-0a83-43b6-8b03-e5c94c667d4b",
    "prId" : 35900,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/35900#pullrequestreview-6449470",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "021384ad-8929-43be-a96a-9f7793a0c107",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "nit: put the lock above the variables it is meant for.\n",
        "createdAt" : "2016-10-31T14:47:09Z",
        "updatedAt" : "2016-11-01T18:46:21Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "912e6741b977703e07cb16608e1725cd12b8278d",
    "line" : null,
    "diffHunk" : "@@ -1,1 +150,154 @@\n\t// healthz checks\n\thealthzLock    sync.Mutex\n\thealthzChecks  []healthz.HealthzChecker\n\thealthzCreated bool"
  },
  {
    "id" : "ac883a51-9441-4dff-8c34-72eb187aa197",
    "prId" : 35109,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/35109#pullrequestreview-6515718",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1e925844-8b88-4f61-bf31-880a30738ca9",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "Just reading through, this looks weird.  I'm assuming I'll see why later, but a better comment may help.\n",
        "createdAt" : "2016-10-31T20:11:49Z",
        "updatedAt" : "2016-11-01T08:51:04Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "7c5e354e82a125905e59d822ef3a63d0765465f8",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +114,118 @@\n\t// numerical ports, set after listening\n\teffectiveSecurePort, effectiveInsecurePort int\n\n\t// ExternalAddress is the address (hostname or IP and port) that should be used in"
  },
  {
    "id" : "5ba2ee8b-dd60-4bd0-8352-9a2043476837",
    "prId" : 34551,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/34551#pullrequestreview-3722664",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a29c8616-ec39-4e8e-9a60-6c8684abb083",
        "parentId" : null,
        "authorId" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "body" : "Would it make sense to do these 2 checks first, before calling `s.installAPIResources`?\n",
        "createdAt" : "2016-10-11T17:33:42Z",
        "updatedAt" : "2016-10-12T19:32:31Z",
        "lastEditedBy" : "b15d5707-82a8-4448-b49d-a2d6502b10f9",
        "tags" : [
        ]
      }
    ],
    "commit" : "6406aacb598a6e94118c944dedf5132320632fa8",
    "line" : null,
    "diffHunk" : "@@ -1,1 +338,342 @@\t// Do not register empty group or empty version.  Doing so claims /apis/ for the wrong entity to be returned.\n\t// Catching these here places the error  much closer to its origin\n\tif len(apiGroupInfo.GroupMeta.GroupVersion.Group) == 0 {\n\t\treturn fmt.Errorf(\"cannot register handler with an empty group for %#v\", *apiGroupInfo)\n\t}"
  },
  {
    "id" : "45d94245-e294-4bdb-abd4-0ca01a4c33f0",
    "prId" : 33378,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/33378#pullrequestreview-1784707",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c81aaa73-5364-44ee-acb3-147cccf4fdfc",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "Added this. @liggitt any concerns?\n",
        "createdAt" : "2016-09-27T17:25:22Z",
        "updatedAt" : "2016-09-29T18:14:11Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "b11e4a49-492c-4ca4-987e-888e83342d83",
        "parentId" : "c81aaa73-5364-44ee-acb3-147cccf4fdfc",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "this is so you don't have to use the detected ip address?\n",
        "createdAt" : "2016-09-27T17:28:41Z",
        "updatedAt" : "2016-09-29T18:14:11Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "1cca920e-c40c-4727-b611-fd681a131576",
        "parentId" : "c81aaa73-5364-44ee-acb3-147cccf4fdfc",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "> this is so you don't have to use the detected ip address?\n\nYeah, so `localhost` always works for me since my IP changes pretty regularly.\n",
        "createdAt" : "2016-09-27T17:39:21Z",
        "updatedAt" : "2016-09-29T18:14:11Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "5080a575ad0c7c8f85f5cf5f293db6f5dce91663",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +259,263 @@\t\t\t// TODO (cjcullen): Is ClusterIP the right address to sign a cert with?\n\t\t\talternateIPs := []net.IP{s.ServiceReadWriteIP}\n\t\t\talternateDNS := []string{\"kubernetes.default.svc\", \"kubernetes.default\", \"kubernetes\", \"localhost\"}\n\t\t\t// It would be nice to set a fqdn subject alt name, but only the kubelets know, the apiserver is clueless\n\t\t\t// alternateDNS = append(alternateDNS, \"kubernetes.default.svc.CLUSTER.DNS.NAME\")"
  },
  {
    "id" : "04af7a3d-1f4d-4952-9c56-9523cf0ccf6d",
    "prId" : 32590,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ea8d0804-2585-4e07-8686-5ba803f47b52",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "I should probably know this, but what is this `OpenAPI` thing?\n",
        "createdAt" : "2016-09-13T19:34:28Z",
        "updatedAt" : "2016-10-22T12:32:03Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "28463533-ca2d-4e67-a6ab-baf18d88ef82",
        "parentId" : "ea8d0804-2585-4e07-8686-5ba803f47b52",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "Swagger alternative: https://openapis.org/\n",
        "createdAt" : "2016-09-13T19:36:40Z",
        "updatedAt" : "2016-10-22T12:32:03Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "a1d7902b-0582-4e2a-b07a-4ad15e6388a7",
        "parentId" : "ea8d0804-2585-4e07-8686-5ba803f47b52",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "... that's what I thought. Wikipedia: \"The OpenAPI Specification (originally known as the Swagger Specification)\".\n",
        "createdAt" : "2016-09-13T19:38:22Z",
        "updatedAt" : "2016-10-22T12:32:03Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "8a1f01a4-314e-4203-be29-9236b208d9d0",
        "parentId" : "ea8d0804-2585-4e07-8686-5ba803f47b52",
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "yes swagger 2.0 is OpenAPI spec which is designed by the Open API initiative (OAI)\n",
        "createdAt" : "2016-09-13T20:57:46Z",
        "updatedAt" : "2016-10-22T12:32:03Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      }
    ],
    "commit" : "05fcc6b56a6402a7349de6e41fbe6fbd172127ba",
    "line" : null,
    "diffHunk" : "@@ -1,1 +186,190 @@\t}\n\tif s.enableOpenAPISupport {\n\t\troutes.OpenAPI{\n\t\t\tConfig: s.openAPIConfig,\n\t\t}.Install(s.HandlerContainer)"
  },
  {
    "id" : "1a26bc98-dcb5-4ed0-aff7-22c89a20be6a",
    "prId" : 31529,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/31529#pullrequestreview-570567",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dc6a162a-9720-46b2-a2ed-911db874e0b7",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "alternative: a WaitGroup?\n",
        "createdAt" : "2016-09-19T15:04:28Z",
        "updatedAt" : "2016-09-19T18:58:38Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "b3ec263e-83e0-41ec-aefe-460d44838c99",
        "parentId" : "dc6a162a-9720-46b2-a2ed-911db874e0b7",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "I don't prefer it.  Do you feel strongly?\n",
        "createdAt" : "2016-09-19T15:10:16Z",
        "updatedAt" : "2016-09-19T18:58:38Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "d29f222f-c6b7-4097-95ac-0fe28f475379",
        "parentId" : "dc6a162a-9720-46b2-a2ed-911db874e0b7",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "no, just an idea. Both is ok.\n",
        "createdAt" : "2016-09-19T15:14:13Z",
        "updatedAt" : "2016-09-19T18:58:38Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "7d1f13d3e0fabc8d0cbe58b6e701a26a5a71690e",
    "line" : 80,
    "diffHunk" : "@@ -1,1 +382,386 @@\t}()\n\n\t<-secureStartedCh\n\t<-insecureStartedCh\n\ts.RunPostStartHooks(PostStartHookContext{})"
  },
  {
    "id" : "b0d7a38a-55cd-4c42-a62b-1d6ba11e38e0",
    "prId" : 31245,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1965cef5-f63c-40dd-b915-61fcb910ea64",
        "parentId" : null,
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "Reason why this is also in GenericApiServer and not just in kube-apiserver is because this is also used by generic apiserver to detect clients that are within the cluster and hence can reach the apiserver with internal IP.\nWhile returning the server address in discovery information, we return a CIDR which says that if the client IP is within --service-cluster-ip-range, then it should use server's internal IP. Else the client needs to use external IP.\nLink to code: https://github.com/kubernetes/kubernetes/blob/da53a247633cd91bd8e9818574279f3b04aed6a5/pkg/genericapiserver/genericapiserver.go#L806\n",
        "createdAt" : "2016-08-29T06:20:08Z",
        "updatedAt" : "2016-08-30T13:53:47Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      }
    ],
    "commit" : "554ff48da20978765641973f2c838c86fb1e0cd7",
    "line" : 13,
    "diffHunk" : "@@ -1,1 +207,211 @@// GenericAPIServer contains state for a Kubernetes cluster api server.\ntype GenericAPIServer struct {\n\t// ServiceClusterIPRange is used to build cluster IPs for discovery.  It is exposed so that `master.go` can\n\t// construct service storage.\n\t// TODO refactor this so that `master.go` drives the value used for discovery and the value here isn't exposed."
  },
  {
    "id" : "66cf813b-0ff8-4f6b-95a8-adbf76bacf6a",
    "prId" : 30233,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "45b1fc62-2553-44c0-8454-ea3ad47ce55f",
        "parentId" : null,
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "This probably needs to be optional - I don't think we always want to include this, and this is not generic (in the way that apiserver is generic).  I think this needs to be in pkg/master.go, or have something that splits it out of this code path (where it can be invoked optionally.\n",
        "createdAt" : "2016-08-16T22:15:33Z",
        "updatedAt" : "2016-08-18T22:33:54Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "5b5d47cf-8edf-4d4b-9364-013baaae6a1d",
        "parentId" : "45b1fc62-2553-44c0-8454-ea3ad47ce55f",
        "authorId" : "7f521a0d-2137-47c7-a390-3b4bdcffe306",
        "body" : "What is the difference between this and swagger 1.2? Both of them (together) are optional and controlled by a single flag Config.EnableSwaggerSupport that I think make sense.\n",
        "createdAt" : "2016-08-16T22:45:23Z",
        "updatedAt" : "2016-08-18T22:33:54Z",
        "lastEditedBy" : "7f521a0d-2137-47c7-a390-3b4bdcffe306",
        "tags" : [
        ]
      },
      {
        "id" : "673d63c0-6a44-4295-adae-8bf5556be415",
        "parentId" : "45b1fc62-2553-44c0-8454-ea3ad47ce55f",
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "Re: this not being generic enough: Yes, spec.Info in particular I agree is not generic. For ex: we are planning to add a heapster server that will use genericapiserver. We want to expose swagger API there (and hence EnableSwaggerSupport will be true), but the title we want there will be different than \"Kubernetes APIs\". The version will be different too.\nSame for openshift apiserver using genericapiserver library.\n\nHow about passing spec.Info as a different flag?\n\nRe: having different flags for enabling 1.2 swagger spec and this 2.0 spec: I am fine keeping a single flag, but its not a lot of work to do if @smarterclayton or anyone feels strongly.\n",
        "createdAt" : "2016-08-17T01:19:36Z",
        "updatedAt" : "2016-08-18T22:33:54Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      },
      {
        "id" : "5cb0cce4-d06e-4ccc-b927-fe072aedab19",
        "parentId" : "45b1fc62-2553-44c0-8454-ea3ad47ce55f",
        "authorId" : "7f521a0d-2137-47c7-a390-3b4bdcffe306",
        "body" : "I understand now, @smarterclayton sorry for my misunderstanding. Yes the part of config that are specific to kubernetes need to be moved to genericapiserver's config and be set in master.\n",
        "createdAt" : "2016-08-17T08:44:21Z",
        "updatedAt" : "2016-08-18T22:33:54Z",
        "lastEditedBy" : "7f521a0d-2137-47c7-a390-3b4bdcffe306",
        "tags" : [
        ]
      }
    ],
    "commit" : "c5f1d63d6feffb3343c30a304d61af66ed30dc73",
    "line" : null,
    "diffHunk" : "@@ -1,1 +936,940 @@// InstallOpenAPI installs the /swagger.json endpoint to allow new OpenAPI schema discovery.\nfunc (s *GenericAPIServer) InstallOpenAPI() {\n\topenAPIConfig := openapi.Config{\n\t\tSwaggerConfig:   s.getSwaggerConfig(),\n\t\tIgnorePrefixes:  []string{\"/swaggerapi\"},"
  },
  {
    "id" : "d221b2ed-7c0f-4e23-a220-62d36fe7d3db",
    "prId" : 29861,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2794ed31-cafb-45cc-81bc-ee33cefce0dd",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "verifyPorts?\n",
        "createdAt" : "2016-08-01T18:06:07Z",
        "updatedAt" : "2016-08-01T18:06:07Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "61cf5dd3-8ba0-497c-9af5-930af97c1308",
        "parentId" : "2794ed31-cafb-45cc-81bc-ee33cefce0dd",
        "authorId" : "a09f2d48-fec0-4c0d-bd81-6de7378a6ebf",
        "body" : "I thought we may add other port related flags in the future, so I used the name `verifySecureAndInsecurePort` to be clear. But it's reasonable to put all port flags verifying in the same func, such as the name you suggest. Thanks @lavalamp !\n",
        "createdAt" : "2016-08-01T18:20:49Z",
        "updatedAt" : "2016-08-01T18:20:49Z",
        "lastEditedBy" : "a09f2d48-fec0-4c0d-bd81-6de7378a6ebf",
        "tags" : [
        ]
      },
      {
        "id" : "48c3aad9-91fb-43d0-b782-94e4659d3cf5",
        "parentId" : "2794ed31-cafb-45cc-81bc-ee33cefce0dd",
        "authorId" : "a09f2d48-fec0-4c0d-bd81-6de7378a6ebf",
        "body" : "There is already a `verifyServiceNodePort` to verify `--service-node-port-range`. If we use `verifyPorts` instead of `verifySecureAndInsecurePort`, is it easy to distinguish what `verifyServiceNodePort` and `verifyPorts` do by name? Or should we also put what `verifyServiceNodePort` does into `verifyPorts` ?\n@lavalamp \n",
        "createdAt" : "2016-08-01T18:44:57Z",
        "updatedAt" : "2016-08-02T08:06:00Z",
        "lastEditedBy" : "a09f2d48-fec0-4c0d-bd81-6de7378a6ebf",
        "tags" : [
        ]
      }
    ],
    "commit" : "606feff2cb819041e93be9a60ef54b16dd8e1031",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +586,590 @@}\n\nfunc verifySecureAndInsecurePort(options *options.ServerRunOptions) {\n\tif options.SecurePort < 0 || options.SecurePort > 65535 {\n\t\tglog.Fatalf(\"--secure-port %v must be between 0 and 65535, inclusive. 0 for turning off secure port.\", options.SecurePort)"
  },
  {
    "id" : "588c821c-bfa0-4d27-919b-c08fa7e00673",
    "prId" : 27939,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3c77b2df-b298-440e-8776-aa985648580e",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "I'm not sure if this works now, but I'd like for 0 to turn off the insecure port. Maybe add a TODO if that's not how it works now.\n",
        "createdAt" : "2016-06-23T16:54:28Z",
        "updatedAt" : "2016-06-27T10:43:54Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "1943768f-aed4-4ef7-92f8-e6f022762424",
        "parentId" : "3c77b2df-b298-440e-8776-aa985648580e",
        "authorId" : "a09f2d48-fec0-4c0d-bd81-6de7378a6ebf",
        "body" : "Thanks for reminding. I check this file and find it seems that 0 is the switch for SecurePort (L658, L678). I will check it again when I go back to office. If so, I think we should modify the condition of verifySecurePort and it's message.\n",
        "createdAt" : "2016-06-23T20:10:58Z",
        "updatedAt" : "2016-06-27T10:43:54Z",
        "lastEditedBy" : "a09f2d48-fec0-4c0d-bd81-6de7378a6ebf",
        "tags" : [
        ]
      },
      {
        "id" : "bb87060c-dd2e-47b4-80fc-4bdb06e7aad6",
        "parentId" : "3c77b2df-b298-440e-8776-aa985648580e",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Please still add a TODO here. It should be possible to turn off the insecure port. Thanks!\n",
        "createdAt" : "2016-06-24T03:00:16Z",
        "updatedAt" : "2016-06-27T10:43:54Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "8ccade65-a847-4b39-9090-4f3bdf3f43ef",
        "parentId" : "3c77b2df-b298-440e-8776-aa985648580e",
        "authorId" : "a09f2d48-fec0-4c0d-bd81-6de7378a6ebf",
        "body" : "Reasonable. I will add it. Thanks @lavalamp !\nI just find that the flag `--kubernetes-service-node-port` also has to be verified, the condition in current `verifyServiceNodePort` is not enough. I will fix it immediately and commit to this PR.\n",
        "createdAt" : "2016-06-24T03:11:49Z",
        "updatedAt" : "2016-06-27T10:43:54Z",
        "lastEditedBy" : "a09f2d48-fec0-4c0d-bd81-6de7378a6ebf",
        "tags" : [
        ]
      }
    ],
    "commit" : "d8a7b4948b8946d574da11a67f71a8043c0ed838",
    "line" : null,
    "diffHunk" : "@@ -1,1 +596,600 @@// TODO: Allow 0 to turn off insecure port.\nfunc verifyInsecurePort(options *options.ServerRunOptions) {\n\tif options.InsecurePort < 1 || options.InsecurePort > 65535 {\n\t\tglog.Fatalf(\"--insecure-port %v must be between 1 and 65535, inclusive.\", options.InsecurePort)\n\t}"
  },
  {
    "id" : "2f36bba6-3622-48c8-aa0b-22619f2f0222",
    "prId" : 27939,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4dfba2be-c40e-46e5-a0e7-a0b687af0a74",
        "parentId" : null,
        "authorId" : "a09f2d48-fec0-4c0d-bd81-6de7378a6ebf",
        "body" : "After reviewing the kubernetes:master code and testing in my env, I confirm that the current implemention is : 0 for turning off secure port, not insecure port. And the kube-apiserver help info also shows: `--secure-port=6443: The port on which to serve HTTPS with authentication and authorization. If 0, don't serve HTTPS at all.`\nI modify the condition and message as this. PTAL, @lavalamp , thanks!\n",
        "createdAt" : "2016-06-24T02:53:43Z",
        "updatedAt" : "2016-06-27T10:43:54Z",
        "lastEditedBy" : "a09f2d48-fec0-4c0d-bd81-6de7378a6ebf",
        "tags" : [
        ]
      }
    ],
    "commit" : "d8a7b4948b8946d574da11a67f71a8043c0ed838",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +589,593 @@\nfunc verifySecurePort(options *options.ServerRunOptions) {\n\tif options.SecurePort < 0 || options.SecurePort > 65535 {\n\t\tglog.Fatalf(\"--secure-port %v must be between 0 and 65535, inclusive. 0 for turning off secure port.\", options.SecurePort)\n\t}"
  },
  {
    "id" : "b3967234-c627-41da-8e1a-2ab1b01e5871",
    "prId" : 27939,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e417874e-6f1b-46af-9c21-d1463dfe3294",
        "parentId" : null,
        "authorId" : "a09f2d48-fec0-4c0d-bd81-6de7378a6ebf",
        "body" : "TODO is added. PTAL, @lavalamp . Thanks!\n",
        "createdAt" : "2016-06-24T03:46:32Z",
        "updatedAt" : "2016-06-27T10:43:54Z",
        "lastEditedBy" : "a09f2d48-fec0-4c0d-bd81-6de7378a6ebf",
        "tags" : [
        ]
      }
    ],
    "commit" : "d8a7b4948b8946d574da11a67f71a8043c0ed838",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +600,604 @@\t}\n}\n\nfunc ValidateRunOptions(options *options.ServerRunOptions) {\n\tverifyClusterIPFlags(options)"
  },
  {
    "id" : "fd635ac2-53a2-4a94-a8ca-86572377a212",
    "prId" : 27939,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "97eaaf9b-83be-4158-8438-b22de5c1c634",
        "parentId" : null,
        "authorId" : "a09f2d48-fec0-4c0d-bd81-6de7378a6ebf",
        "body" : "Verify `--kubernetes-service-node-port`. Please review, @lavalamp . Thanks!\n",
        "createdAt" : "2016-06-24T03:48:00Z",
        "updatedAt" : "2016-06-27T10:43:54Z",
        "lastEditedBy" : "a09f2d48-fec0-4c0d-bd81-6de7378a6ebf",
        "tags" : [
        ]
      }
    ],
    "commit" : "d8a7b4948b8946d574da11a67f71a8043c0ed838",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +576,580 @@\t\tglog.Fatalf(\"--kubernetes-service-node-port %v must be between 0 and 65535, inclusive. If 0, the Kubernetes master service will be of type ClusterIP.\", options.KubernetesServiceNodePort)\n\t}\n\n\tif options.KubernetesServiceNodePort > 0 && !options.ServiceNodePortRange.Contains(options.KubernetesServiceNodePort) {\n\t\tglog.Fatalf(\"Kubernetes service port range %v doesn't contain %v\", options.ServiceNodePortRange, (options.KubernetesServiceNodePort))"
  },
  {
    "id" : "4774cd02-7e9e-4125-8abf-ee79c757687b",
    "prId" : 26796,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "02e892c9-c6dd-4123-8dac-f2066abcfc73",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "This if statement will always trigger, since ReadWritePort is set on L295. \n",
        "createdAt" : "2016-06-04T00:36:20Z",
        "updatedAt" : "2016-06-04T00:36:20Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "1b6e8f97d91a4a128753755b514829ed5ac040e8",
    "line" : 3,
    "diffHunk" : "@@ -1,1 +303,307 @@\tif len(c.ExternalHost) == 0 && c.PublicAddress != nil {\n\t\thostAndPort := c.PublicAddress.String()\n\t\tif c.ReadWritePort != 0 {\n\t\t\thostAndPort = net.JoinHostPort(hostAndPort, strconv.Itoa(c.ReadWritePort))\n\t\t}"
  },
  {
    "id" : "c3233f8a-23d1-4218-8bfc-b0e6bbadc184",
    "prId" : 23025,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9a54e883-4c76-4ac9-b3b4-679ee2e4f5f9",
        "parentId" : null,
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "Doesn't EnableUISupport already do what we need?\n",
        "createdAt" : "2016-03-18T23:05:26Z",
        "updatedAt" : "2016-03-23T20:19:40Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "ec77f9f1-6c20-4d1b-ad8b-2653a02781bb",
        "parentId" : "9a54e883-4c76-4ac9-b3b4-679ee2e4f5f9",
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "It looks to me like it does, though we still need to add a flag for it.\n",
        "createdAt" : "2016-03-18T23:32:00Z",
        "updatedAt" : "2016-03-23T20:19:40Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "0b786379-14a5-4029-8f86-a38f162a2d3c",
        "parentId" : "9a54e883-4c76-4ac9-b3b4-679ee2e4f5f9",
        "authorId" : "7be32503-562e-4caa-838d-bba025e626b5",
        "body" : "Renaming the option to EnableSwaggerUI would cause Openshift and other apiserver clients to not compile, so let's not do that. We should document what the option does, though.\n",
        "createdAt" : "2016-03-18T23:33:40Z",
        "updatedAt" : "2016-03-23T20:19:40Z",
        "lastEditedBy" : "7be32503-562e-4caa-838d-bba025e626b5",
        "tags" : [
        ]
      },
      {
        "id" : "6ff59a4f-a36f-4b6c-97a3-635445b004b8",
        "parentId" : "9a54e883-4c76-4ac9-b3b4-679ee2e4f5f9",
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "EnableUISupport is for controlling both /ui and /swagger-ui\n",
        "createdAt" : "2016-03-19T00:13:48Z",
        "updatedAt" : "2016-03-23T20:19:40Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      }
    ],
    "commit" : "bc6d3ab1b7b84dd63c11c04ada1c15079c722ddd",
    "line" : 3,
    "diffHunk" : "@@ -1,1 +210,214 @@\t// allow downstream consumers to disable the core controller loops\n\tEnableLogsSupport bool\n\tEnableUISupport   bool\n\t// Allow downstream consumers to disable swagger.\n\t// This includes returning the generated swagger spec at /swaggerapi and swagger ui at /swagger-ui."
  },
  {
    "id" : "368dc597-206a-4fd0-a739-e66a9b39f351",
    "prId" : 20313,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "96b9a4d9-dda9-4f64-b811-af34bb030356",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "You need to close the file if you open it.\n",
        "createdAt" : "2016-02-02T22:57:46Z",
        "updatedAt" : "2016-03-24T16:35:01Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "2302c6604f157f2a5a1b7306c578b689a4b85363",
    "line" : null,
    "diffHunk" : "@@ -1,1 +747,751 @@\tif err != nil {\n\t\treturn false\n\t}\n\n\tdefer f.Close()"
  },
  {
    "id" : "074f8300-dc10-4373-be3b-abe0aed1e65d",
    "prId" : 19040,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2e3fdbe4-1013-479d-9997-9ea5e3e3b2d7",
        "parentId" : null,
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "IIUC, every group/version will have a GruopVersionInfo dedicated to it, and GroupVersionInfo.GroupMeta.Codec should be for the codec that version, but because GroupMeta is populated from latest.Group(<group>), so the Codec will always be the one for the latest version. I see the old code also has this problem.\n\nI think we should define another struct and populate some fields from latest.GroupMeta, like the RESTMapper field, and we don't need GroupMeta.GroupVersions and GroupMeta.InterfacesFor.\n",
        "createdAt" : "2015-12-29T22:53:22Z",
        "updatedAt" : "2015-12-30T22:22:24Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      },
      {
        "id" : "e6fcdf3a-9687-44af-ae34-d15607a09ff6",
        "parentId" : "2e3fdbe4-1013-479d-9997-9ea5e3e3b2d7",
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "Updated the struct as discussed.\nRenamed it to APIGroupInfo\n",
        "createdAt" : "2015-12-30T21:49:28Z",
        "updatedAt" : "2015-12-30T22:22:24Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      }
    ],
    "commit" : "87ce093c7736809899ca05a68decd94cd9eb50ba",
    "line" : null,
    "diffHunk" : "@@ -1,1 +134,138 @@// Info about an API group.\ntype APIGroupInfo struct {\n\tGroupMeta latest.GroupMeta\n\t// Info about the resources in this group. Its a map from version to resource to the storage.\n\tVersionedResourcesStorageMap map[string]map[string]rest.Storage"
  },
  {
    "id" : "6eccb8af-5b2e-47a9-b866-b6b0f959eb43",
    "prId" : 19040,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a5ed740f-aeed-4c79-a141-4fd7c54e08bc",
        "parentId" : null,
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Legacy group has to be parameterized to accept a prefix - because we have two legacy groups, Kube /api and OpenShift /oapi.\n",
        "createdAt" : "2015-12-30T22:03:07Z",
        "updatedAt" : "2015-12-30T22:22:24Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "5d74282d-93cc-46ca-8382-b7e31fef4b80",
        "parentId" : "a5ed740f-aeed-4c79-a141-4fd7c54e08bc",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Never mind, I see that you parameterize `s.ApiPrefix`\n",
        "createdAt" : "2015-12-30T22:07:03Z",
        "updatedAt" : "2015-12-30T22:22:24Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "0803fda5-684c-4bad-98bf-15618eb7d23a",
        "parentId" : "a5ed740f-aeed-4c79-a141-4fd7c54e08bc",
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "yes.\n",
        "createdAt" : "2015-12-30T22:20:04Z",
        "updatedAt" : "2015-12-30T22:22:24Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      }
    ],
    "commit" : "87ce093c7736809899ca05a68decd94cd9eb50ba",
    "line" : 111,
    "diffHunk" : "@@ -1,1 +557,561 @@\t}\n\t// Install the version handler.\n\tif apiGroupInfo.IsLegacyGroup {\n\t\t// Add a handler at /api to enumerate the supported api versions.\n\t\tapiserver.AddApiWebService(s.HandlerContainer, apiPrefix, apiVersions)"
  },
  {
    "id" : "000bcc42-89a6-4252-b626-033e5e212bd0",
    "prId" : 19040,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ce079746-367d-4653-b3f7-d8caac1d2b23",
        "parentId" : null,
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "The fact that this type is in `latest` but it shows up in this class is indicative it should not be in latest - it probably belongs in the same location as GroupVersionKind (which today is unversioned, but should be a different package in the future).\n",
        "createdAt" : "2015-12-30T22:05:01Z",
        "updatedAt" : "2015-12-30T22:22:24Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "ca6d15f5-faea-4795-9554-6efb3559e32c",
        "parentId" : "ce079746-367d-4653-b3f7-d8caac1d2b23",
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "Yes. How about I move it to unversioned now and then we can move all types away from unversioned together?\nOr if you have a better place in mind, I can move it there directly.\n",
        "createdAt" : "2015-12-30T22:19:48Z",
        "updatedAt" : "2015-12-30T22:22:24Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      },
      {
        "id" : "7806696b-1995-4a5d-a682-92def1217e6b",
        "parentId" : "ce079746-367d-4653-b3f7-d8caac1d2b23",
        "authorId" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "body" : "This is a little different from `GroupVersionKind`, because TypeMeta.APIVersion would be of type GroupVersionKind, so we would need to keep a declaration of GroupVersionKind in the unversioned package. `GroupMeta` is not part of the API, so it doesn't belong to the unversioned package.\n\nHow about do a `type GroupMeta latest.GroupMeta` in the `genericapiserver` package?\n",
        "createdAt" : "2016-01-04T18:22:21Z",
        "updatedAt" : "2016-01-04T18:22:21Z",
        "lastEditedBy" : "ca7e5a52-cab7-4f09-8ff8-da79f43339d4",
        "tags" : [
        ]
      },
      {
        "id" : "59b6debc-ac02-4b18-91b0-7dd15c869415",
        "parentId" : "ce079746-367d-4653-b3f7-d8caac1d2b23",
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "Yes thats right.\nAdding `type GroupMeta latest.GroupMeta` doesnt help much.\nI will try to come up with a better place for GroupMeta and move it in another PR.\n",
        "createdAt" : "2016-01-04T19:23:21Z",
        "updatedAt" : "2016-01-04T19:23:54Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      }
    ],
    "commit" : "87ce093c7736809899ca05a68decd94cd9eb50ba",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +134,138 @@// Info about an API group.\ntype APIGroupInfo struct {\n\tGroupMeta latest.GroupMeta\n\t// Info about the resources in this group. Its a map from version to resource to the storage.\n\tVersionedResourcesStorageMap map[string]map[string]rest.Storage"
  },
  {
    "id" : "23fda8b7-1844-4a4a-8867-3d46494492a5",
    "prId" : 19040,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "50ff6e12-7400-41d0-86bb-b40d8987336d",
        "parentId" : null,
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "map[string] implies there is no ordering in the versions, but there is.  This should really be []structThatIncludesMapStringToStorage\n",
        "createdAt" : "2015-12-30T22:05:47Z",
        "updatedAt" : "2015-12-30T22:22:24Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "3b3584ed-7cf3-4e5f-9fea-c143a8a7d01c",
        "parentId" : "50ff6e12-7400-41d0-86bb-b40d8987336d",
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "Yes there is no ordering in the versions.\nGroupMeta has a preferred group version and a list of all group versions.\n",
        "createdAt" : "2015-12-30T22:16:48Z",
        "updatedAt" : "2015-12-30T22:22:24Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      }
    ],
    "commit" : "87ce093c7736809899ca05a68decd94cd9eb50ba",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +136,140 @@\tGroupMeta latest.GroupMeta\n\t// Info about the resources in this group. Its a map from version to resource to the storage.\n\tVersionedResourcesStorageMap map[string]map[string]rest.Storage\n\t// True, if this is the legacy group (\"/v1\").\n\tIsLegacyGroup bool"
  },
  {
    "id" : "7732be9c-dc18-4f87-b1f4-9472480d0ec9",
    "prId" : 19040,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8f308d01-1a62-4a73-b55b-ff66cb73b4cc",
        "parentId" : null,
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Mark this `TODO remove pending resolution of #19018`\n",
        "createdAt" : "2015-12-30T22:06:10Z",
        "updatedAt" : "2015-12-30T22:22:24Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "bc983c59-f493-41ea-9735-b569120e330b",
        "parentId" : "8f308d01-1a62-4a73-b55b-ff66cb73b4cc",
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "Done\n",
        "createdAt" : "2015-12-30T22:15:31Z",
        "updatedAt" : "2015-12-30T22:22:24Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      }
    ],
    "commit" : "87ce093c7736809899ca05a68decd94cd9eb50ba",
    "line" : null,
    "diffHunk" : "@@ -1,1 +144,148 @@\t// If nil, defaults to groupMeta.GroupVersion.\n\t// TODO: Remove this when https://github.com/kubernetes/kubernetes/issues/19018 is fixed.\n\tOptionsExternalVersion *unversioned.GroupVersion\n}\n"
  },
  {
    "id" : "dbd4bfa8-0907-4747-b98c-20e6b2bf3464",
    "prId" : 18113,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3ae19412-07de-49b5-b6de-3fa1b956c08b",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Commented earlier on things in here that aren't generic :)\n",
        "createdAt" : "2015-12-04T01:16:20Z",
        "updatedAt" : "2015-12-16T21:54:34Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "2d952aaa87e5748a8d3e412065894ad8a0cf4663",
    "line" : null,
    "diffHunk" : "@@ -1,1 +186,190 @@\n\t// The range of IPs to be assigned to services with type=ClusterIP or greater\n\tServiceClusterIPRange *net.IPNet\n\n\t// The IP address for the GenericAPIServer service (must be inside ServiceClusterIPRange"
  },
  {
    "id" : "f94bd653-1243-4dad-8e66-ffb623eb669d",
    "prId" : 18113,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1358ee7f-629f-4ef1-a5e1-d913320beac5",
        "parentId" : null,
        "authorId" : "ad0a3561-db60-47a9-b82f-ac613199f968",
        "body" : "I know you're just moving code, but does this need to be public?\n",
        "createdAt" : "2015-12-09T23:02:41Z",
        "updatedAt" : "2015-12-16T21:54:34Z",
        "lastEditedBy" : "ad0a3561-db60-47a9-b82f-ac613199f968",
        "tags" : [
        ]
      },
      {
        "id" : "a6ed8f3d-d98f-4ed8-b461-a55ae547f498",
        "parentId" : "1358ee7f-629f-4ef1-a5e1-d913320beac5",
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "Yes since StorageDestinations is public (it is part of GenericApiServer.Config)\n",
        "createdAt" : "2015-12-16T01:28:55Z",
        "updatedAt" : "2015-12-16T21:54:34Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      }
    ],
    "commit" : "2d952aaa87e5748a8d3e412065894ad8a0cf4663",
    "line" : 59,
    "diffHunk" : "@@ -1,1 +57,61 @@}\n\ntype StorageDestinationsForAPIGroup struct {\n\tDefault   storage.Interface\n\tOverrides map[string]storage.Interface"
  }
]