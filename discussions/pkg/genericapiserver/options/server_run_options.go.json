[
  {
    "id" : "9552aab2-6cc7-41e5-b335-eef0271cabd9",
    "prId" : 38708,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/38708#pullrequestreview-12759497",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4f59b8bb-8d31-4978-bef6-21c0be357a9d",
        "parentId" : null,
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "seems like a typo or something",
        "createdAt" : "2016-12-13T18:10:46Z",
        "updatedAt" : "2016-12-13T18:10:49Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      },
      {
        "id" : "f770459e-f63b-48e6-a7f3-05c01b89585e",
        "parentId" : "4f59b8bb-8d31-4978-bef6-21c0be357a9d",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "@erictune it would be nice to fix the typo, but if @saad-ali is in a big hurry, I wouldn't block on it.",
        "createdAt" : "2016-12-13T19:27:54Z",
        "updatedAt" : "2016-12-13T19:27:54Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "e3046b40-7da3-4b0c-a43c-1ca0b1d93e0e",
        "parentId" : "4f59b8bb-8d31-4978-bef6-21c0be357a9d",
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "Nope, absolutely not needed for the v1.5.1 cut",
        "createdAt" : "2016-12-13T19:31:26Z",
        "updatedAt" : "2016-12-13T19:31:26Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      }
    ],
    "commit" : "c7c2c7355062cbc416822b8e2c7acffdf95ccbdb",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +294,298 @@\t\t\"Enables anonymous requests to the secure port of the API server. \"+\n\t\t\"Requests that are not rejected by another authentication method are treated as anonymous requests. \"+\n\t\t\"Anonymous requests have a username of system:anonymous, and a group name of system:unauthenticated. \")\n\n\tfs.StringVar(&s.BasicAuthFile, \"basic-auth-file\", s.BasicAuthFile, \"\"+"
  },
  {
    "id" : "384d7f45-095a-42ca-853e-4fec2d00ffab",
    "prId" : 35488,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/35488#pullrequestreview-6958043",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5e221055-7cee-4adc-8312-3e38b135e8f4",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "Use the OIDCCAFile flag description as a starting point instead\n",
        "createdAt" : "2016-10-25T03:39:55Z",
        "updatedAt" : "2016-11-04T07:13:22Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "e95cd3a6-d35b-4eb7-83ec-ed4f7a645e3b",
        "parentId" : "5e221055-7cee-4adc-8312-3e38b135e8f4",
        "authorId" : "3c1422a0-6358-4857-8f56-961979171514",
        "body" : "Already fix this.\n",
        "createdAt" : "2016-11-03T07:23:07Z",
        "updatedAt" : "2016-11-04T07:13:22Z",
        "lastEditedBy" : "3c1422a0-6358-4857-8f56-961979171514",
        "tags" : [
        ]
      }
    ],
    "commit" : "dd6c98094919a4d8ce8709639f08270f50170c6b",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +381,385 @@\t\t\"If passed, activates the keystone authentication plugin.\")\n\n\tfs.StringVar(&s.KeystoneCAFile, \"experimental-keystone-ca-file\", s.KeystoneCAFile, \"\"+\n\t\t\"If set, the Keystone server's certificate will be verified by one of the authorities \"+\n\t\t\"in the experimental-keystone-ca-file, otherwise the host's root CA set will be used.\")"
  },
  {
    "id" : "40d2b900-4083-47bb-81a2-ce16795f33fc",
    "prId" : 35109,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/35109#pullrequestreview-5041980",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4178ca56-ee08-4d2d-a3c7-26dea21207c0",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "maybe put the variable args at the end, and the cert first (all the go stdlib functions do cert,key)? (e.g. `cert,key[,name,...]`)\n",
        "createdAt" : "2016-10-19T13:35:21Z",
        "updatedAt" : "2016-11-01T08:51:04Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "a19bd2c1-88ac-43d3-87c0-5ab0c972931d",
        "parentId" : "4178ca56-ee08-4d2d-a3c7-26dea21207c0",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "maybe with a colon?\n",
        "createdAt" : "2016-10-19T14:11:03Z",
        "updatedAt" : "2016-11-01T08:51:04Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "902f0eb9-e008-4dbb-8c10-4939368b1a56",
        "parentId" : "4178ca56-ee08-4d2d-a3c7-26dea21207c0",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "sure, `cert:key[:name,...]`?\n",
        "createdAt" : "2016-10-19T14:24:54Z",
        "updatedAt" : "2016-11-01T08:51:04Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "e68cca79-0e0a-4d34-8a80-1b542a244dff",
        "parentId" : "4178ca56-ee08-4d2d-a3c7-26dea21207c0",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "key,cert:name,name,name\n",
        "createdAt" : "2016-10-19T14:35:10Z",
        "updatedAt" : "2016-11-01T08:51:04Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "ba771def-0d8c-449b-8eb8-503e10c5a170",
        "parentId" : "4178ca56-ee08-4d2d-a3c7-26dea21207c0",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "put cert first for consistency, unsure about the delimiters\n",
        "createdAt" : "2016-10-19T14:43:07Z",
        "updatedAt" : "2016-11-01T08:51:04Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "82c00142-b9ea-41c7-81ec-20b20559e6ad",
        "parentId" : "4178ca56-ee08-4d2d-a3c7-26dea21207c0",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "I am fine with either order. Where do we have cert,key? I my head the key exists first, then the cert ;)\n",
        "createdAt" : "2016-10-19T14:46:28Z",
        "updatedAt" : "2016-11-01T08:51:04Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "e2c841da-d771-4bfa-b05f-5394f1e29f10",
        "parentId" : "4178ca56-ee08-4d2d-a3c7-26dea21207c0",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "server.ListenAndServeTLS(cert,key)\ntls.X509KeyPair(certbytes,keybytes)\ntls.LoadX509KeyPair(cert,key)\n",
        "createdAt" : "2016-10-19T14:53:12Z",
        "updatedAt" : "2016-11-01T08:51:04Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "47bb3ab5-2448-4c20-a0f4-d69666f05454",
        "parentId" : "4178ca56-ee08-4d2d-a3c7-26dea21207c0",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "That's not user facing. But cert/key is fine as well.\n",
        "createdAt" : "2016-10-19T15:06:55Z",
        "updatedAt" : "2016-11-01T08:51:04Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "ab752a3b-6e70-4ccf-ba85-91497aad7a2e",
        "parentId" : "4178ca56-ee08-4d2d-a3c7-26dea21207c0",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "changed it to: cert,key:name,name,name\n",
        "createdAt" : "2016-10-20T10:28:12Z",
        "updatedAt" : "2016-11-01T08:51:04Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "7c5e354e82a125905e59d822ef3a63d0765465f8",
    "line" : null,
    "diffHunk" : "@@ -1,1 +505,509 @@\t\t\"trump over extracted names. For multiple key/certificate pairs, use the \"+\n\t\t\"--tls-sni-cert-key multiple times. \"+\n\t\t\"Examples: \\\"example.key,example.crt\\\" or \\\"*.foo.com,foo.com:foo.key,foo.crt\\\".\")\n\n\tfs.StringVar(&s.TokenAuthFile, \"token-auth-file\", s.TokenAuthFile, \"\"+"
  },
  {
    "id" : "fd1ac5f0-68af-4010-9bd5-96655a54ce9b",
    "prId" : 34000,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/34000#pullrequestreview-2862426",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a377b025-e12b-49ab-8d97-126028c4eea2",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "This will break federation apiserver if they use this cache?\n",
        "createdAt" : "2016-10-04T18:11:30Z",
        "updatedAt" : "2016-10-05T08:00:14Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "81f32f18-6092-4c6a-94d1-e9fcf7ee8bf8",
        "parentId" : "a377b025-e12b-49ab-8d97-126028c4eea2",
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Fixed.\n",
        "createdAt" : "2016-10-05T08:00:13Z",
        "updatedAt" : "2016-10-05T08:04:16Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "2bfcb1a8500248be3993e080453c480bee99cc25",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +159,163 @@\t\t// Default cache size to 0 - if unset, its size will be set based on target\n\t\t// memory usage.\n\t\tDeserializationCacheSize: 0,\n\t}\n\treturn o"
  },
  {
    "id" : "7f08bcf1-426d-4221-b6ca-cc7b9228d090",
    "prId" : 33332,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/33332#pullrequestreview-1239545",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "703094a9-9e3e-4f60-9dfc-251d6f27f1f8",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "This seems like an unnecessary change; what is wrong with a 1-element list? How is that different?\n",
        "createdAt" : "2016-09-22T21:46:25Z",
        "updatedAt" : "2016-09-22T21:46:25Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "2e76e81d-57da-41a8-ab54-80e1d75d7209",
        "parentId" : "703094a9-9e3e-4f60-9dfc-251d6f27f1f8",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "Scalar string, not a one element list\n",
        "createdAt" : "2016-09-22T21:51:29Z",
        "updatedAt" : "2016-09-22T21:51:29Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "26a38e86-5db9-4498-870e-6d76282aa383",
        "parentId" : "703094a9-9e3e-4f60-9dfc-251d6f27f1f8",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "And the claim structure is frequently outside the control of the relying party, so \"just change the claim structure returned by the IDP\" is often not an option\n",
        "createdAt" : "2016-09-22T21:52:47Z",
        "updatedAt" : "2016-09-22T21:52:47Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "065ddab5d1e48f169e4d55c8c1f0df6900db4521",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +402,406 @@\tfs.StringVar(&s.OIDCGroupsClaim, \"oidc-groups-claim\", \"\", \"\"+\n\t\t\"If provided, the name of a custom OpenID Connect claim for specifying user groups. \"+\n\t\t\"The claim value is expected to be a string or array of strings. This flag is experimental, \"+\n\t\t\"please see the authentication documentation for further details.\")\n"
  },
  {
    "id" : "c29a9085-db6f-4a54-b56a-d3f243b9b18e",
    "prId" : 32386,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "91052c25-fa35-4335-92fd-94c59fc18608",
        "parentId" : null,
        "authorId" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "body" : "Let's make this flag be called \"forbid-anonymous-auth\", and default to false.\n\nThat is because we expect most people to enable it going forward, and we don't want a flag that is expected to be required to be specified.\n\n  The release note can have a warning that: _people who are relying on authentication alone to authorize access should add authorization or set `--forbid-anonymous-auth`_.\n",
        "createdAt" : "2016-09-13T16:18:45Z",
        "updatedAt" : "2016-09-26T21:19:10Z",
        "lastEditedBy" : "020e031c-c298-4e7e-a533-9a04439c203c",
        "tags" : [
        ]
      },
      {
        "id" : "874cdbab-e989-42fb-8c98-3e8f1dcf2c95",
        "parentId" : "91052c25-fa35-4335-92fd-94c59fc18608",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "I'd like to avoid a negative in the flag name if possible. Just updated the default to true.\n",
        "createdAt" : "2016-09-13T17:13:34Z",
        "updatedAt" : "2016-09-26T21:19:10Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "5599ca3be5d518e6cb5df0f820cdca7473585c2c",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +272,276 @@\t\t\"privilege escalation checks, to be used with --authorization-mode=RBAC.\")\n\n\tfs.BoolVar(&s.AnonymousAuth, \"anonymous-auth\", s.AnonymousAuth, \"\"+\n\t\t\"Enables anonymous requests to the secure port of the API server. \"+\n\t\t\"Requests that are not rejected by another authentication method are treated as anonymous requests. \"+"
  },
  {
    "id" : "8a431bb3-06a6-4aea-af09-d5027687e3df",
    "prId" : 31491,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "70291fc7-940f-4f4d-b6af-442fc66037a8",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "I'd set the bearer token either way?\n",
        "createdAt" : "2016-08-26T23:24:08Z",
        "updatedAt" : "2016-09-20T23:01:10Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "a2f98dd6-fe62-4407-b08d-3e9f336ce1f8",
        "parentId" : "70291fc7-940f-4f4d-b6af-442fc66037a8",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "actually, scratch that. safer not to.\n",
        "createdAt" : "2016-08-26T23:28:51Z",
        "updatedAt" : "2016-09-20T23:01:10Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "b0853541-ac9e-4dc2-bb96-9395de732edc",
        "parentId" : "70291fc7-940f-4f4d-b6af-442fc66037a8",
        "authorId" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "body" : "agree\n",
        "createdAt" : "2016-08-27T02:20:19Z",
        "updatedAt" : "2016-09-20T23:01:10Z",
        "lastEditedBy" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "tags" : [
        ]
      }
    ],
    "commit" : "364dd1a752855c6f647086299bebb0ec6d4fad08",
    "line" : null,
    "diffHunk" : "@@ -1,1 +224,228 @@\t} else {\n\t\treturn nil, errors.New(\"Unable to set url for apiserver local client\")\n\t}\n\n\treturn clientset.NewForConfig(clientConfig)"
  },
  {
    "id" : "981b5dd6-4b2a-4e07-a06f-9752f8f2eb02",
    "prId" : 31491,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/31491#pullrequestreview-929668",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "91f285b8-3520-47c6-887f-41bafff3aabf",
        "parentId" : null,
        "authorId" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "body" : "@deads2k In theory we could have used s.ClientCAFile, but i think we should allow folks to separate the CA authority for the TLS cert and the one for to validating kubectl clients. So added another flag for this purpose. Please let me know if this is ok.\n",
        "createdAt" : "2016-09-20T22:19:53Z",
        "updatedAt" : "2016-09-20T23:01:10Z",
        "lastEditedBy" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "tags" : [
        ]
      },
      {
        "id" : "416c581e-ce80-42c8-91bd-dec8d35f24c3",
        "parentId" : "91f285b8-3520-47c6-887f-41bafff3aabf",
        "authorId" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "body" : "tested by generating certs as mentioned in https://coreos.com/kubernetes/docs/latest/openssl.html and patching `hack/local-up-cluster.sh` as follows\n\n```\ndiff --git a/hack/local-up-cluster.sh b/hack/local-up-cluster.sh\nindex e580a3d..398deff 100755\n--- a/hack/local-up-cluster.sh\n+++ b/hack/local-up-cluster.sh\n@@ -310,12 +310,16 @@ function start_apiserver {\n       --service-cluster-ip-range=\"10.0.0.0/24\" \\\n       --cloud-provider=\"${CLOUD_PROVIDER}\" \\\n       --cloud-config=\"${CLOUD_CONFIG}\" \\\n+      --tls-cert-file=/home/dims/k8s/apiserver.pem \\\n+      --tls-private-key-file=/home/dims/k8s/apiserver-key.pem \\\n+      --tls-ca-file=/home/dims/k8s/ca.pem \\\n+      --basic-auth-file=/home/dims/k8s/basicauth.csv \\\n       --cors-allowed-origins=\"${API_CORS_ALLOWED_ORIGINS}\" >\"${APISERVER_LOG}\" 2>&1 &\n     APISERVER_PID=$!\n\n     # Wait for kube-apiserver to come up before launching the rest of the components.\n     echo \"Waiting for apiserver to come up\"\n-    kube::util::wait_for_url \"http://${API_HOST}:${API_PORT}/api/v1/pods\" \"apiserver: \" 1 ${WAIT_FOR_URL_API_SERVER} || exit 1\n+    #kube::util::wait_for_url \"http://${API_HOST}:${API_PORT}/api/v1/pods\" \"apiserver: \" 1 ${WAIT_FOR_URL_API_SERVER} || exit 1\n }\n\n function start_controller_manager {\n```\n",
        "createdAt" : "2016-09-20T22:21:43Z",
        "updatedAt" : "2016-09-20T23:01:10Z",
        "lastEditedBy" : "bd04f755-e62f-45fb-8771-4cc2b5db49d4",
        "tags" : [
        ]
      },
      {
        "id" : "889a583c-7b2b-4d98-af1e-5be994f2654c",
        "parentId" : "91f285b8-3520-47c6-887f-41bafff3aabf",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "> @deads2k In theory we could have used s.ClientCAFile, but i think we should allow folks to separate the CA authority for the TLS cert and the one for to validating kubectl clients. So added another flag for this purpose. Please let me know if this is ok.\n\nYes, a new flag is appropriate.\n",
        "createdAt" : "2016-09-21T11:17:08Z",
        "updatedAt" : "2016-09-21T11:17:08Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "364dd1a752855c6f647086299bebb0ec6d4fad08",
    "line" : null,
    "diffHunk" : "@@ -1,1 +216,220 @@\t\tBurst: 100,\n\t}\n\tif s.SecurePort > 0 && len(s.TLSCAFile) > 0 {\n\t\tclientConfig.Host = \"https://\" + net.JoinHostPort(s.BindAddress.String(), strconv.Itoa(s.SecurePort))\n\t\tclientConfig.CAFile = s.TLSCAFile"
  },
  {
    "id" : "0b154e44-1e32-4ff1-921c-e6cba83edc6a",
    "prId" : 31491,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/31491#pullrequestreview-929800",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bea8feaf-b406-4831-a104-f05a401495e9",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "Very nice.  Exactly what I was thinking. \n",
        "createdAt" : "2016-09-21T11:18:04Z",
        "updatedAt" : "2016-09-21T11:18:04Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "364dd1a752855c6f647086299bebb0ec6d4fad08",
    "line" : null,
    "diffHunk" : "@@ -1,1 +223,227 @@\t\tclientConfig.Host = net.JoinHostPort(s.InsecureBindAddress.String(), strconv.Itoa(s.InsecurePort))\n\t} else {\n\t\treturn nil, errors.New(\"Unable to set url for apiserver local client\")\n\t}\n"
  }
]