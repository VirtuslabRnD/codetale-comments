[
  {
    "id" : "072fd7d8-96ac-4c34-82bd-e247fcb9148a",
    "prId" : 38869,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/38869#pullrequestreview-13372401",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "780a186a-f43c-4129-bafd-3a46080e0001",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "what a name: NewNonInteractiveDeferredLoadingClientConfig",
        "createdAt" : "2016-12-16T16:32:09Z",
        "updatedAt" : "2016-12-16T17:40:37Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      },
      {
        "id" : "8b785e19-ce26-481b-b491-4173f172b4e9",
        "parentId" : "780a186a-f43c-4129-bafd-3a46080e0001",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "> what a name: NewNonInteractiveDeferredLoadingClientConfig\r\n\r\nI don't pay by the letter :) ",
        "createdAt" : "2016-12-16T16:37:20Z",
        "updatedAt" : "2016-12-16T17:40:37Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "14aed7b1-c71e-4f16-8fc1-a343b8b61a42",
        "parentId" : "780a186a-f43c-4129-bafd-3a46080e0001",
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "You got a 4k display working. You are lucky ;-)",
        "createdAt" : "2016-12-16T17:08:30Z",
        "updatedAt" : "2016-12-16T17:40:37Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "bbcbdaffd101285f4e237dcdaba374b4a4100d28",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +417,421 @@\tif len(s.RemoteKubeConfigFile) > 0 {\n\t\tloadingRules := &clientcmd.ClientConfigLoadingRules{ExplicitPath: s.RemoteKubeConfigFile}\n\t\tloader := clientcmd.NewNonInteractiveDeferredLoadingClientConfig(loadingRules, &clientcmd.ConfigOverrides{})\n\n\t\tclientConfig, err = loader.ClientConfig()"
  },
  {
    "id" : "fcaceb81-90ac-47a5-8fae-48fdf715c44c",
    "prId" : 38869,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/38869#pullrequestreview-13372076",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e346a29f-71cb-4460-9793-2d12b508114d",
        "parentId" : null,
        "authorId" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "body" : "this part and the equivalent below lgtm.",
        "createdAt" : "2016-12-16T17:06:23Z",
        "updatedAt" : "2016-12-16T17:40:37Z",
        "lastEditedBy" : "f0985d19-4073-49b4-832a-0b89b15a1431",
        "tags" : [
        ]
      }
    ],
    "commit" : "bbcbdaffd101285f4e237dcdaba374b4a4100d28",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +425,429 @@\t\t// use this path\n\t\tclientConfig, err = restclient.InClusterConfig()\n\t}\n\tif err != nil {\n\t\treturn nil, err"
  },
  {
    "id" : "c700f434-01bd-4a45-9ae2-c4aacf3799e6",
    "prId" : 36816,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/36816#pullrequestreview-9694518",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1e84a640-836d-4edb-b5e7-1a43b8a12787",
        "parentId" : null,
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "Set X-Remote-User as default value?\n",
        "createdAt" : "2016-11-19T00:40:37Z",
        "updatedAt" : "2016-12-01T14:02:36Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      },
      {
        "id" : "6cd937c9-3fef-46b7-b89b-f5ac9d2f4053",
        "parentId" : "1e84a640-836d-4edb-b5e7-1a43b8a12787",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "> Set X-Remote-User as default value?\r\n\r\nIf you set it as the default, anyone including it (say kube-apiserver), will need to clear the field value to avoid having their server set up to use this.",
        "createdAt" : "2016-11-22T15:54:13Z",
        "updatedAt" : "2016-12-01T14:02:36Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "78f2958c0f10b458c1ce81ca8ce75e1270caa0f7",
    "line" : 58,
    "diffHunk" : "@@ -1,1 +290,294 @@func (s *RequestHeaderAuthenticationOptions) AddFlags(fs *pflag.FlagSet) {\n\tfs.StringSliceVar(&s.UsernameHeaders, \"requestheader-username-headers\", s.UsernameHeaders, \"\"+\n\t\t\"List of request headers to inspect for usernames. X-Remote-User is common.\")\n\n\tfs.StringSliceVar(&s.GroupHeaders, \"requestheader-group-headers\", s.GroupHeaders, \"\"+"
  },
  {
    "id" : "a137b37e-a3c9-4b49-88cd-8fa86df5647a",
    "prId" : 36816,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/36816#pullrequestreview-9376774",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b889edd8-e496-440b-9cb2-f9b04c7f52c1",
        "parentId" : null,
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "Same why not set X-Remote-Group as default value\n",
        "createdAt" : "2016-11-19T00:40:54Z",
        "updatedAt" : "2016-12-01T14:02:36Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      },
      {
        "id" : "6d924c49-c7c5-475b-9799-4e0af7ed0f80",
        "parentId" : "b889edd8-e496-440b-9cb2-f9b04c7f52c1",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "> Same why not set X-Remote-Group as default value\r\n\r\nIf you set it as the default, anyone including it (say kube-apiserver), will need to clear the field value to avoid having their server set up to use this.",
        "createdAt" : "2016-11-20T23:43:51Z",
        "updatedAt" : "2016-12-01T14:02:36Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "78f2958c0f10b458c1ce81ca8ce75e1270caa0f7",
    "line" : 60,
    "diffHunk" : "@@ -1,1 +292,296 @@\t\t\"List of request headers to inspect for usernames. X-Remote-User is common.\")\n\n\tfs.StringSliceVar(&s.GroupHeaders, \"requestheader-group-headers\", s.GroupHeaders, \"\"+\n\t\t\"List of request headers to inspect for groups. X-Remote-Group is suggested.\")\n"
  },
  {
    "id" : "59ae7d03-a4ab-471d-8ebf-e6e2365fdcbe",
    "prId" : 36816,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/36816#pullrequestreview-9376790",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f4eede46-5b04-4e4d-9b3c-36af90ae3b98",
        "parentId" : null,
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "When will this be different than `--client-ca-file` flag on apiserver?\nUser will not be able to use certs to authenticate with apiserver if the value of these flags are different, right?\n",
        "createdAt" : "2016-11-19T00:53:23Z",
        "updatedAt" : "2016-12-01T14:02:36Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      },
      {
        "id" : "374e91ef-7597-4e5b-ae09-189ee530825c",
        "parentId" : "f4eede46-5b04-4e4d-9b3c-36af90ae3b98",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "> When will this be different than --client-ca-file flag on apiserver?\r\n\r\nAlmost always I'd think.  Wouldn't you expect different signer keys for user level certs as opposed to IT maintained infrastructure?",
        "createdAt" : "2016-11-20T23:44:36Z",
        "updatedAt" : "2016-12-01T14:02:36Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "78f2958c0f10b458c1ce81ca8ce75e1270caa0f7",
    "line" : 67,
    "diffHunk" : "@@ -1,1 +299,303 @@\n\tfs.StringVar(&s.ClientCAFile, \"requestheader-client-ca-file\", s.ClientCAFile, \"\"+\n\t\t\"Root certificate bundle to use to verify client certificates on incoming requests \"+\n\t\t\"before trusting usernames in headers specified by --requestheader-username-headers\")\n"
  },
  {
    "id" : "994a1ac5-a648-49b0-bf1d-4e92641aeea7",
    "prId" : 36816,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/36816#pullrequestreview-9376828",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ed77c146-f618-4491-9984-42adc161f9f2",
        "parentId" : null,
        "authorId" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "body" : "Why only certificate common names and not just any user names (can be auth token or basic auth based)?\n",
        "createdAt" : "2016-11-19T00:54:51Z",
        "updatedAt" : "2016-12-01T14:02:36Z",
        "lastEditedBy" : "f2369046-26b1-4b8c-a8cd-5671ab22066c",
        "tags" : [
        ]
      },
      {
        "id" : "fa341afa-562c-4ff4-96a3-8766f478bb31",
        "parentId" : "ed77c146-f618-4491-9984-42adc161f9f2",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "> Why only certificate common names and not just any user names (can be auth token or basic auth based)?\r\n\r\nI think it's unusual to have an auth proxy that identifies itself to the backing server based on HTTP header fields.",
        "createdAt" : "2016-11-20T23:46:02Z",
        "updatedAt" : "2016-12-01T14:02:36Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "78f2958c0f10b458c1ce81ca8ce75e1270caa0f7",
    "line" : 71,
    "diffHunk" : "@@ -1,1 +303,307 @@\n\tfs.StringSliceVar(&s.AllowedNames, \"requestheader-allowed-names\", s.AllowedNames, \"\"+\n\t\t\"List of client certificate common names to allow to provide usernames in headers \"+\n\t\t\"specified by --requestheader-username-headers. If empty, any client certificate validated \"+\n\t\t\"by the authorities in --requestheader-client-ca-file is allowed.\")"
  },
  {
    "id" : "66b6a3ed-b420-4297-b43e-240eab89c40a",
    "prId" : 36604,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/36604#pullrequestreview-9855205",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "901328f4-2927-4af2-a837-2877c41a4e32",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "seems like x509 options belong here more than they belong in the serving info (they're a hint there, they're required here). that will likely expand to include CRL stuff as well",
        "createdAt" : "2016-11-23T04:31:35Z",
        "updatedAt" : "2016-11-29T16:02:40Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "d4f0abdd-2b6d-46e5-8d6b-608b0e01ed23",
        "parentId" : "901328f4-2927-4af2-a837-2877c41a4e32",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "> seems like x509 options belong here more than they belong in the serving info (they're a hint there, they're required here). that will likely expand to include CRL stuff as well\r\n\r\nChange for another day",
        "createdAt" : "2016-11-23T12:53:41Z",
        "updatedAt" : "2016-11-29T16:02:40Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "ab9a842f3c7f6d7b20a07a87332e555aa73c2389",
    "line" : 38,
    "diffHunk" : "@@ -1,1 +36,40 @@\tServiceAccounts *ServiceAccountAuthenticationOptions\n\tTokenFile       *TokenFileAuthenticationOptions\n\tWebHook         *WebHookAuthenticationOptions\n}\n"
  },
  {
    "id" : "89a9378e-6831-4ea8-aff1-5dc6e2b189f9",
    "prId" : 36604,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/36604#pullrequestreview-9855244",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "1999db56-3f23-475b-8177-1ceaf03a113d",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "not sure I see the point of making all of these pointers when they're all going to be non-nil in order to be bound to flags, and therefore need len()==0 or bool checks as well",
        "createdAt" : "2016-11-23T04:35:17Z",
        "updatedAt" : "2016-11-29T16:02:40Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      },
      {
        "id" : "0506c987-5f75-47f0-b465-909df34acc8f",
        "parentId" : "1999db56-3f23-475b-8177-1ceaf03a113d",
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "> not sure I see the point of making all of these pointers when they're all going to be non-nil in order to be bound to flags, and therefore need len()==0 or bool checks as well\r\n\r\nFlag binding is conditional.",
        "createdAt" : "2016-11-23T12:53:58Z",
        "updatedAt" : "2016-11-29T16:02:40Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      }
    ],
    "commit" : "ab9a842f3c7f6d7b20a07a87332e555aa73c2389",
    "line" : 39,
    "diffHunk" : "@@ -1,1 +37,41 @@\tTokenFile       *TokenFileAuthenticationOptions\n\tWebHook         *WebHookAuthenticationOptions\n}\n\ntype AnyTokenAuthenticationOptions struct {"
  },
  {
    "id" : "48860f65-6842-43ad-96cf-dc44df5cee32",
    "prId" : 36604,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/36604#pullrequestreview-9800743",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0faeb911-0b20-4f6e-b5fb-6d272a3a0d81",
        "parentId" : null,
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "we happy with the default qps/burst here?",
        "createdAt" : "2016-11-23T04:46:42Z",
        "updatedAt" : "2016-11-29T16:02:40Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "ab9a842f3c7f6d7b20a07a87332e555aa73c2389",
    "line" : null,
    "diffHunk" : "@@ -1,1 +361,365 @@\tloader := clientcmd.NewNonInteractiveDeferredLoadingClientConfig(loadingRules, &clientcmd.ConfigOverrides{})\n\n\tclientConfig, err := loader.ClientConfig()\n\tif err != nil {\n\t\treturn nil, err"
  }
]