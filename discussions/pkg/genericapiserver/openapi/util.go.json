[
  {
    "id" : "c779bd2c-f721-48c8-b83e-d4592a4ba3bc",
    "prId" : 33628,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/33628#pullrequestreview-2050349",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0b3ec66a-d64d-4ff8-beda-52f6cb1713ec",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "nice use of struct composition.\n",
        "createdAt" : "2016-09-28T23:38:24Z",
        "updatedAt" : "2016-09-30T00:03:45Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "1809f06a2cd8f8e3c8de59a0b5e7f73c5cac74c3",
    "line" : 36,
    "diffHunk" : "@@ -1,1 +34,38 @@}\n\nfunc (s byNameIn) Less(i, j int) bool {\n\treturn s.parameters[i].Name < s.parameters[j].Name || (s.parameters[i].Name == s.parameters[j].Name && s.parameters[i].In < s.parameters[j].In)\n}"
  },
  {
    "id" : "fc1ca162-3244-4d4e-8a06-9e080fbe119e",
    "prId" : 33628,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/33628#pullrequestreview-2253861",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c2f48170-5f9e-4627-8804-76dccf9e0ae5",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "break?\n",
        "createdAt" : "2016-09-28T23:45:23Z",
        "updatedAt" : "2016-09-30T00:03:45Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "d4dd6453-023d-42ec-9fbd-397773517bef",
        "parentId" : "c2f48170-5f9e-4627-8804-76dccf9e0ae5",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "hm, I guess it's a lot simpler if you don't break here.\n",
        "createdAt" : "2016-09-28T23:46:49Z",
        "updatedAt" : "2016-09-30T00:03:45Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "94df241b-c02d-4d3f-828b-f7b22057f22b",
        "parentId" : "c2f48170-5f9e-4627-8804-76dccf9e0ae5",
        "authorId" : "7f521a0d-2137-47c7-a390-3b4bdcffe306",
        "body" : "I cannot break here. I need to parse the whole string and add it to the trie. Or I did not understand your comment :)\n",
        "createdAt" : "2016-09-29T07:57:38Z",
        "updatedAt" : "2016-09-30T00:03:45Z",
        "lastEditedBy" : "7f521a0d-2137-47c7-a390-3b4bdcffe306",
        "tags" : [
        ]
      },
      {
        "id" : "ca8a2a41-de59-41e1-8f2a-5762e18c2bc5",
        "parentId" : "c2f48170-5f9e-4627-8804-76dccf9e0ae5",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Yeah, I think you're right. I have seen trie implementations that don't split a node until a second item needs to be added, but I think what you're doing here is way simpler and fine for this usage...\n",
        "createdAt" : "2016-09-30T00:15:36Z",
        "updatedAt" : "2016-09-30T00:15:36Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "1809f06a2cd8f8e3c8de59a0b5e7f73c5cac74c3",
    "line" : 89,
    "diffHunk" : "@@ -1,1 +87,91 @@\t\t\t\twordTail: false,\n\t\t\t}\n\t\t\troot.children[b] = child\n\t\t}\n\t\troot = child"
  }
]