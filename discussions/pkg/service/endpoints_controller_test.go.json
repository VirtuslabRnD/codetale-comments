[
  {
    "id" : "aaf2a576-4cbb-4b24-bf41-ea16fea97358",
    "prId" : 5939,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "b1656f82-d483-4247-a799-7535cfdb1a86",
        "parentId" : null,
        "authorId" : "aa0ae875-2718-4d41-836b-db4cfbf596c8",
        "body" : "Hi Tim, I have a question. In this case the container doesn't expose port 93. The service can still be created and the pod is bind to this service. But I tested it with following template:\n\nservice:\n\n```\nprotocol: TCP\nport: 999\ncontainerPort: 93\n```\n\npod:\n\n```\nports:\n      - name: testport\n        protocol: TCP\n        containerPort: 80\n      - name: udp \n        protocol: UDP\n        containerPort: 9999\n```\n\nI used `curl http://ip:999` to touch the service, it didn't work. But after I changed the serice with `containerPort: 80`, it worked.\n\nWhy we allow service connect to a port which the pod didn't expose? And there're more similar cases in this test.\n",
        "createdAt" : "2015-03-30T08:49:02Z",
        "updatedAt" : "2015-03-30T08:49:02Z",
        "lastEditedBy" : "aa0ae875-2718-4d41-836b-db4cfbf596c8",
        "tags" : [
        ]
      },
      {
        "id" : "e96ff9d8-5b67-4973-87ff-7f4879403e5f",
        "parentId" : "b1656f82-d483-4247-a799-7535cfdb1a86",
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "Not every pod explicitly lists the ports it exposes.  It's a good idea to do so, for visibility, but it's not required (unless you want to give it a name)\n",
        "createdAt" : "2015-03-31T00:19:49Z",
        "updatedAt" : "2015-03-31T00:19:49Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "8ae203825b3b28c45ac7d23f3d107c66df9dad7c",
    "line" : 146,
    "diffHunk" : "@@ -1,1 +88,92 @@\t\t}}}},\n\t\tport:     util.NewIntOrStringFromInt(93),\n\t\texpected: 93,\n\t\tpass:     true,\n\t}, {"
  },
  {
    "id" : "caa67675-448d-4fd5-9508-96bf36ee4f15",
    "prId" : 1077,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "aa8e8001-0d50-452b-8f91-f9100a0fc981",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "These tests would be way simpler if you mocked out something that implemented the ListServices function instead of actually making a test server etc. Test these things separately.\n",
        "createdAt" : "2014-08-28T04:45:46Z",
        "updatedAt" : "2014-09-02T17:25:01Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "f7b4df00-e344-49a5-8e5d-a890aa9f4527",
        "parentId" : "aa8e8001-0d50-452b-8f91-f9100a0fc981",
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "Hrm, I actually like this approach where it's truly end2end talking to a real http server.  It's a more complete test, and the set up isn't actually that bad...\n",
        "createdAt" : "2014-08-28T05:06:26Z",
        "updatedAt" : "2014-09-02T17:25:01Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      },
      {
        "id" : "e7409db8-d8ab-4c69-807a-862a7e6ddf7e",
        "parentId" : "aa8e8001-0d50-452b-8f91-f9100a0fc981",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Yeah, I guess I'm asking for unit tests. e2e should be handled in the integration test. IMO, of course.\n",
        "createdAt" : "2014-08-28T05:14:08Z",
        "updatedAt" : "2014-09-02T17:25:01Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "b8aafa62-67dd-4fa0-81ce-f52454bb2fb2",
        "parentId" : "aa8e8001-0d50-452b-8f91-f9100a0fc981",
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "The trouble with injecting mocks, is you always risk the problem where real code A works great with mock code B, and real code B works great with mock code C, but when you glue real code A to real code B to real code C, you've made some assumption and the mock and reality don't match up.\n\nI'm all in favor of dependency injection when it makes unit tests easier or possible, but in cases like this, where you can do the injection at a lower layer, and the complexity isn't that much greater, I would always vote for injecting at a lower layer.\n",
        "createdAt" : "2014-08-28T05:21:59Z",
        "updatedAt" : "2014-09-02T17:25:01Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      },
      {
        "id" : "387b05a4-b5d6-408d-aec2-35cb83817bb4",
        "parentId" : "aa8e8001-0d50-452b-8f91-f9100a0fc981",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "(I'll think about this over night, I have a strong inclination to argue but I'm not sure if it's worth it.)\n",
        "createdAt" : "2014-08-28T05:31:24Z",
        "updatedAt" : "2014-09-02T17:25:01Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "f4f5ac5e-e3da-4ddf-beaf-2ec9cba0f3c8",
        "parentId" : "aa8e8001-0d50-452b-8f91-f9100a0fc981",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "If I hadn't just hit the thing where I was testing something with a mock that wasn't getting called I'd more strongly argue.  I'd say we probably do want both mocking, http, and the higher level glue in the end.\n",
        "createdAt" : "2014-08-28T14:15:51Z",
        "updatedAt" : "2014-09-02T17:25:01Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "bd572e91-a51b-4a8d-bdb5-005aae4573cc",
        "parentId" : "aa8e8001-0d50-452b-8f91-f9100a0fc981",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "OK, I won't hold this up over this. :) \n",
        "createdAt" : "2014-08-28T17:48:55Z",
        "updatedAt" : "2014-09-02T17:25:01Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "fee2b90608039497953bf4704bfb62546e5708b9",
    "line" : null,
    "diffHunk" : "@@ -1,1 +132,136 @@\t\tResponseBody: util.EncodeJSON(podResponse.obj),\n\t}\n\tfakeServiceHandler := util.FakeHandler{\n\t\tStatusCode:   serviceResponse.statusCode,\n\t\tResponseBody: util.EncodeJSON(serviceResponse.obj),"
  },
  {
    "id" : "815c6aba-9025-4778-b97d-d6e5c3c81b8a",
    "prId" : 1077,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "cc2a4271-2aca-4d13-b22a-dae3c7345c84",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "I know it's preexisting, but can you verify the content of the endpoint in addition to the number below?\n",
        "createdAt" : "2014-08-28T05:27:39Z",
        "updatedAt" : "2014-09-02T17:25:01Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "dce3b628-b0c8-44d5-84eb-c2a345fc231a",
        "parentId" : "cc2a4271-2aca-4d13-b22a-dae3c7345c84",
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "done.\n",
        "createdAt" : "2014-08-28T16:12:49Z",
        "updatedAt" : "2014-09-02T17:25:01Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "fee2b90608039497953bf4704bfb62546e5708b9",
    "line" : null,
    "diffHunk" : "@@ -1,1 +186,190 @@\t\tserverResponse{http.StatusOK, serviceList})\n\tclient := client.NewOrDie(testServer.URL, nil)\n\tserviceRegistry := registrytest.ServiceRegistry{}\n\tendpoints := NewEndpointController(&serviceRegistry, client)\n\tif err := endpoints.SyncServiceEndpoints(); err != nil {"
  }
]