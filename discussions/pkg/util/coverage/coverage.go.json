[
  {
    "id" : "89092a5d-90ce-4db1-8747-511350ba29e6",
    "prId" : 67971,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/67971#pullrequestreview-151565345",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0f9d8899-4158-457b-8e46-43b00a37e99e",
        "parentId" : null,
        "authorId" : "547883a0-e393-4667-97e5-f58a84a83ecc",
        "body" : "Glad to see the runtime configuration options within util.\r\nI wonder if something like this could be use to augment client-go rest api-calls?",
        "createdAt" : "2018-08-29T19:00:08Z",
        "updatedAt" : "2018-09-01T01:01:10Z",
        "lastEditedBy" : "547883a0-e393-4667-97e5-f58a84a83ecc",
        "tags" : [
        ]
      },
      {
        "id" : "7270222b-ae24-4260-84f6-e63924da89bd",
        "parentId" : "0f9d8899-4158-457b-8e46-43b00a37e99e",
        "authorId" : "5de211e4-9744-455e-9548-1a8e70ed1b2e",
        "body" : "Use of an env var for config makes me wince a bit.  We _do_ have prior art that uses it, but I'm curious if there's a way we could do this via a command line flag instead. ie: have the dummy test add a command line flag with a default value, call this with the parsed value?",
        "createdAt" : "2018-08-31T02:12:34Z",
        "updatedAt" : "2018-09-01T01:01:10Z",
        "lastEditedBy" : "5de211e4-9744-455e-9548-1a8e70ed1b2e",
        "tags" : [
        ]
      },
      {
        "id" : "67901e3c-66dd-42a2-ae03-a25bbee2682f",
        "parentId" : "0f9d8899-4158-457b-8e46-43b00a37e99e",
        "authorId" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "body" : "adding package scoped flags is generally pretty awful, env are not great for lots of config but it's just one simple string and only when coverage is enabled. doing it this way has the upside of not mutating any global state within the binary. this is probably the way to go imho.",
        "createdAt" : "2018-08-31T03:06:35Z",
        "updatedAt" : "2018-09-01T01:01:10Z",
        "lastEditedBy" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "tags" : [
        ]
      },
      {
        "id" : "a55261e1-b6c0-429c-885d-7c943af9eff6",
        "parentId" : "0f9d8899-4158-457b-8e46-43b00a37e99e",
        "authorId" : "9cdcc8e5-3ca5-47d7-abb4-ba9642e6b85a",
        "body" : "Another downside to using a flag instead of an environment variable is that, because this feature is not always compiled in, you now need to be particularly careful about when you are passing the flag. By contrast, the environment variable will be silently ignored when it isn't relevant.\r\n\r\nI am personally inclined to stick to the env var approach.",
        "createdAt" : "2018-08-31T21:55:19Z",
        "updatedAt" : "2018-09-01T01:01:10Z",
        "lastEditedBy" : "9cdcc8e5-3ca5-47d7-abb4-ba9642e6b85a",
        "tags" : [
        ]
      },
      {
        "id" : "68c293a1-6de4-4908-af0b-682e6b2f104a",
        "parentId" : "0f9d8899-4158-457b-8e46-43b00a37e99e",
        "authorId" : "5de211e4-9744-455e-9548-1a8e70ed1b2e",
        "body" : "OK I'm sold",
        "createdAt" : "2018-08-31T22:32:57Z",
        "updatedAt" : "2018-09-01T01:01:10Z",
        "lastEditedBy" : "5de211e4-9744-455e-9548-1a8e70ed1b2e",
        "tags" : [
        ]
      }
    ],
    "commit" : "9390847bd5b5662beae9288eb91e0bd4c2c0c9a3",
    "line" : 46,
    "diffHunk" : "@@ -1,1 +44,48 @@\t// We read the coverage destination in from the KUBE_COVERAGE_FILE env var,\n\t// or if it's empty we just use a default in /tmp\n\tcoverageFile = os.Getenv(\"KUBE_COVERAGE_FILE\")\n\tif coverageFile == \"\" {\n\t\tcoverageFile = \"/tmp/k8s-\" + name + \".cov\""
  },
  {
    "id" : "e66f518f-0a37-44aa-a20d-450cc2feebcd",
    "prId" : 67971,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/67971#pullrequestreview-151235581",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "08026a4a-5912-409e-ad2f-9f6c6975c03b",
        "parentId" : null,
        "authorId" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "body" : "this is great :joy: ",
        "createdAt" : "2018-08-29T20:14:08Z",
        "updatedAt" : "2018-09-01T01:01:10Z",
        "lastEditedBy" : "46e1ba13-482b-4bcd-8fb1-be821bac3b04",
        "tags" : [
        ]
      },
      {
        "id" : "88152d2c-a18e-4fa6-b107-3921f544e1ac",
        "parentId" : "08026a4a-5912-409e-ad2f-9f6c6975c03b",
        "authorId" : "5de211e4-9744-455e-9548-1a8e70ed1b2e",
        "body" : "ðŸ’¯ ",
        "createdAt" : "2018-08-31T02:26:00Z",
        "updatedAt" : "2018-09-01T01:01:10Z",
        "lastEditedBy" : "5de211e4-9744-455e-9548-1a8e70ed1b2e",
        "tags" : [
        ]
      }
    ],
    "commit" : "9390847bd5b5662beae9288eb91e0bd4c2c0c9a3",
    "line" : 75,
    "diffHunk" : "@@ -1,1 +73,77 @@\t// We're not actually going to run any tests, but we need Go to think we did so it writes\n\t// coverage information to disk. To achieve this, we create a bunch of empty test suites and\n\t// have it \"run\" them.\n\ttests := []testing.InternalTest{}\n\tbenchmarks := []testing.InternalBenchmark{}"
  },
  {
    "id" : "4cec36c8-5f3b-41e4-96a3-6e4c93230a06",
    "prId" : 67971,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/67971#pullrequestreview-151570589",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "018983d7-3eb4-41fa-ab27-bf678f425a60",
        "parentId" : null,
        "authorId" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "body" : "maybe add a `pkg/util/coverage/OWNERS` file too?",
        "createdAt" : "2018-08-31T23:02:22Z",
        "updatedAt" : "2018-09-01T01:01:10Z",
        "lastEditedBy" : "719d0e19-fcef-4b47-afac-404318b9514f",
        "tags" : [
        ]
      },
      {
        "id" : "159e2100-d9b4-4829-be61-de3afb338e35",
        "parentId" : "018983d7-3eb4-41fa-ab27-bf678f425a60",
        "authorId" : "9cdcc8e5-3ca5-47d7-abb4-ba9642e6b85a",
        "body" : "Containing who?\r\n\r\n(as not-a-member, it presumably can't be me.)",
        "createdAt" : "2018-08-31T23:11:27Z",
        "updatedAt" : "2018-09-01T01:01:10Z",
        "lastEditedBy" : "9cdcc8e5-3ca5-47d7-abb4-ba9642e6b85a",
        "tags" : [
        ]
      },
      {
        "id" : "0307e306-41b5-4a65-a753-10956bfba49a",
        "parentId" : "018983d7-3eb4-41fa-ab27-bf678f425a60",
        "authorId" : "5de211e4-9744-455e-9548-1a8e70ed1b2e",
        "body" : "Why don't we fix you not being a member, file an issue on k/org",
        "createdAt" : "2018-08-31T23:13:26Z",
        "updatedAt" : "2018-09-01T01:01:10Z",
        "lastEditedBy" : "5de211e4-9744-455e-9548-1a8e70ed1b2e",
        "tags" : [
        ]
      }
    ],
    "commit" : "9390847bd5b5662beae9288eb91e0bd4c2c0c9a3",
    "line" : 1,
    "diffHunk" : "@@ -1,1 +-1,3 @@// +build coverage\n\n/*"
  },
  {
    "id" : "729e5d8d-9f31-491b-ba16-cd6a8cf748a5",
    "prId" : 67971,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/67971#pullrequestreview-151568287",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "de30063e-e2b5-421a-90e2-0df3e553f4f7",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "Should we print this somewhere?",
        "createdAt" : "2018-08-31T23:08:08Z",
        "updatedAt" : "2018-09-01T01:01:10Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "9390847bd5b5662beae9288eb91e0bd4c2c0c9a3",
    "line" : 48,
    "diffHunk" : "@@ -1,1 +46,50 @@\tcoverageFile = os.Getenv(\"KUBE_COVERAGE_FILE\")\n\tif coverageFile == \"\" {\n\t\tcoverageFile = \"/tmp/k8s-\" + name + \".cov\"\n\t}\n\tfmt.Println(\"Dumping coverage information to \" + coverageFile)"
  },
  {
    "id" : "23088c06-fb0f-41a2-9502-0286eeaa0d4c",
    "prId" : 67971,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/67971#pullrequestreview-151579102",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ac9b1210-fb1b-438a-a163-64e72ffe23b9",
        "parentId" : null,
        "authorId" : "5de211e4-9744-455e-9548-1a8e70ed1b2e",
        "body" : "Can this be a `glog.Infof`?",
        "createdAt" : "2018-09-01T01:09:12Z",
        "updatedAt" : "2018-09-01T01:09:12Z",
        "lastEditedBy" : "5de211e4-9744-455e-9548-1a8e70ed1b2e",
        "tags" : [
        ]
      },
      {
        "id" : "4b1f6286-2ef1-44c5-bea2-32c12958f3bb",
        "parentId" : "ac9b1210-fb1b-438a-a163-64e72ffe23b9",
        "authorId" : "9cdcc8e5-3ca5-47d7-abb4-ba9642e6b85a",
        "body" : "No; glog isn't initialised at this point.",
        "createdAt" : "2018-09-01T01:09:39Z",
        "updatedAt" : "2018-09-01T01:09:39Z",
        "lastEditedBy" : "9cdcc8e5-3ca5-47d7-abb4-ba9642e6b85a",
        "tags" : [
        ]
      }
    ],
    "commit" : "9390847bd5b5662beae9288eb91e0bd4c2c0c9a3",
    "line" : 50,
    "diffHunk" : "@@ -1,1 +48,52 @@\t\tcoverageFile = \"/tmp/k8s-\" + name + \".cov\"\n\t}\n\tfmt.Println(\"Dumping coverage information to \" + coverageFile)\n\n\tflushInterval := 5 * time.Second"
  }
]