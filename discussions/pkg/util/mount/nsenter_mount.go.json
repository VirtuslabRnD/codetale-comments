[
  {
    "id" : "c6e5f15a-a919-4d6f-9197-2111821c0900",
    "prId" : 69565,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/69565#pullrequestreview-162893276",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "84486ae1-d1eb-4636-bfd8-30172f7ad99b",
        "parentId" : null,
        "authorId" : "255dd885-bee4-4c1f-baef-ba11f903dc5c",
        "body" : "I was wondering if we should have a test for this, but it seems that this method isn't tested at all.",
        "createdAt" : "2018-10-09T13:38:50Z",
        "updatedAt" : "2018-10-09T13:39:41Z",
        "lastEditedBy" : "255dd885-bee4-4c1f-baef-ba11f903dc5c",
        "tags" : [
        ]
      }
    ],
    "commit" : "0b8c4725783a32d76fc6df40d5c7048b17bee365",
    "line" : 10,
    "diffHunk" : "@@ -1,1 +173,177 @@\t\treturn true, err\n\t}\n\n\t// Add --first-only option: since we are testing for the absence of a mountpoint, it is sufficient to get only\n\t// the first of multiple possible mountpoints using --first-only."
  },
  {
    "id" : "8b849cd8-2b63-45b0-906a-ea2d71f4e946",
    "prId" : 68759,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/68759#pullrequestreview-156498163",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "deb18018-1a00-4ccb-b734-0310094d9b43",
        "parentId" : null,
        "authorId" : "8e448017-7838-493d-a424-33cada0da657",
        "body" : "Can we use a util method e.g. `PathExists(path string)` in `pkg/volume/util/util.go` instead?",
        "createdAt" : "2018-09-18T18:05:46Z",
        "updatedAt" : "2018-09-18T18:05:57Z",
        "lastEditedBy" : "8e448017-7838-493d-a424-33cada0da657",
        "tags" : [
        ]
      }
    ],
    "commit" : "704573d304096c4c0e769a3e7ffdd4d23737b99f",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +338,342 @@\nfunc (mounter *NsenterMounter) GetMountRefs(pathname string) ([]string, error) {\n\texists, err := mounter.ExistsPath(pathname)\n\tif err != nil {\n\t\treturn nil, err"
  },
  {
    "id" : "7019d4e3-a3ff-4789-96db-2aa9eed9258d",
    "prId" : 63143,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/63143#pullrequestreview-120616460",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4068ef50-b7f5-49a5-a53f-ecbcdf06c213",
        "parentId" : null,
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "Can you just do a `stat` on the host to check if it exists?",
        "createdAt" : "2018-05-07T17:28:32Z",
        "updatedAt" : "2018-05-23T08:32:39Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "f88a5ec4-7658-4b44-b833-3114d99bf7c2",
        "parentId" : "4068ef50-b7f5-49a5-a53f-ecbcdf06c213",
        "authorId" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "body" : "How? `/bin/stat` returns exit code 1 for both permission denied and file not found errors.",
        "createdAt" : "2018-05-16T12:30:14Z",
        "updatedAt" : "2018-05-23T08:32:39Z",
        "lastEditedBy" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "tags" : [
        ]
      }
    ],
    "commit" : "cb5eb25ec197e6bb97c4044effa5e2489b889651",
    "line" : 64,
    "diffHunk" : "@@ -1,1 +280,284 @@\t// Resolve the symlinks but allow the target not to exist. EvalSymlinks\n\t// would return an generic error when the target does not exist.\n\thostPath, err := mounter.ne.EvalSymlinks(pathname, false /* mustExist */)\n\tif err != nil {\n\t\treturn false, err"
  },
  {
    "id" : "8e28c9ad-a0ee-44f2-918a-76a8052540be",
    "prId" : 62467,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/62467#pullrequestreview-111882009",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4991d18f-0d42-4e12-8b55-d72cb65ca7d9",
        "parentId" : null,
        "authorId" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "body" : "Is it possible to check for error codes instead of strings?",
        "createdAt" : "2018-04-12T18:16:23Z",
        "updatedAt" : "2018-04-12T18:16:23Z",
        "lastEditedBy" : "209ee091-cf29-4efa-8a1b-a98334ea3f9a",
        "tags" : [
        ]
      },
      {
        "id" : "40f00db5-8f85-45d1-833d-4f1b4c3b6649",
        "parentId" : "4991d18f-0d42-4e12-8b55-d72cb65ca7d9",
        "authorId" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "body" : "@msau42 I have tried, if `nsenter` exec fails, error msg will always be like `exit status 1`\r\nSo the answer is No",
        "createdAt" : "2018-04-13T04:56:05Z",
        "updatedAt" : "2018-04-13T04:56:05Z",
        "lastEditedBy" : "e0218e0a-9e55-43f5-8929-04673eea9015",
        "tags" : [
        ]
      }
    ],
    "commit" : "d154f8d021377563f658d36226624d138bebd5af",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +238,242 @@\toutputBytes, err := mounter.ne.Exec(\"stat\", []string{\"-L\", \"--printf=%F\", pathname}).CombinedOutput()\n\tif err != nil {\n\t\tif strings.Contains(string(outputBytes), \"No such file\") {\n\t\t\terr = fmt.Errorf(\"%s does not exist\", pathname)\n\t\t} else {"
  },
  {
    "id" : "2b32c66a-9093-4def-8beb-c457303252fe",
    "prId" : 49111,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/49111#pullrequestreview-50631742",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "98b90c05-f7e4-4615-8d66-c4a4f7894148",
        "parentId" : null,
        "authorId" : "a7f673a6-4b23-4df6-aa10-f123fa9dcd5f",
        "body" : "a sample output or a unit test will help",
        "createdAt" : "2017-07-18T13:33:39Z",
        "updatedAt" : "2017-07-18T14:38:43Z",
        "lastEditedBy" : "a7f673a6-4b23-4df6-aa10-f123fa9dcd5f",
        "tags" : [
        ]
      },
      {
        "id" : "aaef9dab-afde-4bb3-8106-96212d6f030f",
        "parentId" : "98b90c05-f7e4-4615-8d66-c4a4f7894148",
        "authorId" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "body" : "I forgot to add the test to the commit :-o",
        "createdAt" : "2017-07-18T14:37:33Z",
        "updatedAt" : "2017-07-18T14:38:43Z",
        "lastEditedBy" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "tags" : [
        ]
      }
    ],
    "commit" : "87551071a177a22bbbfe7f8953eec6f872892033",
    "line" : 19,
    "diffHunk" : "@@ -1,1 +218,222 @@\n// parse output of \"findmnt -o target,fstype\" and return just the target\nfunc parseFindMnt(out string) (string, error) {\n\t// cut trailing newline\n\tout = strings.TrimSuffix(out, \"\\n\")"
  },
  {
    "id" : "97839d63-f2a6-4bc6-9b0b-3c3ef02a0b4b",
    "prId" : 28714,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7b8adaf9-8c2f-42dd-846b-4d9e8f9e8132",
        "parentId" : null,
        "authorId" : "8e448017-7838-493d-a424-33cada0da657",
        "body" : "`NsenterMounter` is still linux (`+build linux` at the top of the file). It is used for hyperkube deployments where k8s is run inside a container and therefore methods like mount are custom (ensuring mount occurs in host's root mount namespace). AFAIK this method should work the same as it does in the plain linux mounter. \n",
        "createdAt" : "2016-07-14T06:07:28Z",
        "updatedAt" : "2016-07-18T23:20:15Z",
        "lastEditedBy" : "8e448017-7838-493d-a424-33cada0da657",
        "tags" : [
        ]
      }
    ],
    "commit" : "e13c678e3b04becd6131442e069f1d910241992d",
    "line" : null,
    "diffHunk" : "@@ -1,1 +208,212 @@// Returns an error if errno is any error other than EBUSY.\n// Returns with error if pathname is not a device.\nfunc (n *NsenterMounter) DeviceOpened(pathname string) (bool, error) {\n\treturn exclusiveOpenFailsOnDevice(pathname)\n}"
  },
  {
    "id" : "8cca06c0-f4f9-465c-aa7d-6ff6a5ad3e95",
    "prId" : 28714,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7dd8331b-cd39-4820-bd6a-7cdf97810fe1",
        "parentId" : null,
        "authorId" : "8e448017-7838-493d-a424-33cada0da657",
        "body" : "Instead of duplicating the code, put the code in a helper method in mount_linux.go and have both places call it. Like `List(...)` does.\n",
        "createdAt" : "2016-07-14T06:08:10Z",
        "updatedAt" : "2016-07-18T23:20:15Z",
        "lastEditedBy" : "8e448017-7838-493d-a424-33cada0da657",
        "tags" : [
        ]
      }
    ],
    "commit" : "e13c678e3b04becd6131442e069f1d910241992d",
    "line" : null,
    "diffHunk" : "@@ -1,1 +214,218 @@// PathIsDevice uses FileInfo returned from os.Stat to check if path refers\n// to a device.\nfunc (n *NsenterMounter) PathIsDevice(pathname string) (bool, error) {\n\treturn pathIsDevice(pathname)\n}"
  },
  {
    "id" : "26dd1744-41c4-4203-8261-c7f3b3627567",
    "prId" : 23435,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ff830fce-ea04-4727-ba37-ce19ec884869",
        "parentId" : null,
        "authorId" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "body" : "This is going to run in the container's mount namespace -- don't we need to do this check in the host's mount ns?\n",
        "createdAt" : "2016-03-24T16:51:25Z",
        "updatedAt" : "2016-03-24T16:51:25Z",
        "lastEditedBy" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "tags" : [
        ]
      },
      {
        "id" : "4da03a48-b8d7-4db3-8dc1-b08c788eb66f",
        "parentId" : "ff830fce-ea04-4727-ba37-ce19ec884869",
        "authorId" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "body" : "Kubernetes runs with /var/lib/kubernetes mounted to the same directory in the container so it works.\n\nIf you look e.g. into AWS volume plugin, it just calls `mkdir()` there without any nsenter. https://github.com/kubernetes/kubernetes/blob/master/pkg/volume/aws_ebs/aws_util.go#L75\n",
        "createdAt" : "2016-03-24T16:58:19Z",
        "updatedAt" : "2016-03-24T16:58:19Z",
        "lastEditedBy" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "tags" : [
        ]
      },
      {
        "id" : "b849693c-6e24-4df3-af57-d8b15fb2b91c",
        "parentId" : "ff830fce-ea04-4727-ba37-ce19ec884869",
        "authorId" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "body" : "Isn't it `/var/lib/kubelet`?\n",
        "createdAt" : "2016-03-24T17:00:27Z",
        "updatedAt" : "2016-03-24T17:00:27Z",
        "lastEditedBy" : "bfe6ebf1-cfa7-4758-abb1-9960fa09b194",
        "tags" : [
        ]
      },
      {
        "id" : "b81e80d2-c709-43aa-b7fc-c39b6927562f",
        "parentId" : "ff830fce-ea04-4727-ba37-ce19ec884869",
        "authorId" : "df06b0d6-fd6c-44d1-8008-efeaccd16cd5",
        "body" : "Let's imagine we have a directory `/var/lib/kubelet/test` which is a mount point which contains directory `foo`. Now, I think that if we call `IsLikelyNotMountPoint` for it `var/lib/kubelet/test/foo` we'd get false for newer versions of `findmnt` (see comment in line 186). If that's the case (I haven't tested this) your change would introduce a semantic change as now we'd return true.\n\nI'm not saying it's a bad change, but we should say it explicitly.\n",
        "createdAt" : "2016-03-24T18:42:30Z",
        "updatedAt" : "2016-03-24T18:42:30Z",
        "lastEditedBy" : "df06b0d6-fd6c-44d1-8008-efeaccd16cd5",
        "tags" : [
        ]
      },
      {
        "id" : "6a015335-6e95-4649-9865-205b0da79406",
        "parentId" : "ff830fce-ea04-4727-ba37-ce19ec884869",
        "authorId" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "body" : "yes, it's `/var/lib/kubelet`, sorry.\n\n@fgrzadkowski, I don't understand your point. If `var/lib/kubelet/test/foo` exist, this patch does not change a thing. Only if it doesn't we return `ErrNotExist` to tell the caller to create the directory before mounting.\n",
        "createdAt" : "2016-03-29T03:21:59Z",
        "updatedAt" : "2016-03-29T03:21:59Z",
        "lastEditedBy" : "8b64e744-955d-4523-a3b7-60fae9df0857",
        "tags" : [
        ]
      },
      {
        "id" : "eb3b1fc3-5cb7-46ad-a54c-56adf830fb07",
        "parentId" : "ff830fce-ea04-4727-ba37-ce19ec884869",
        "authorId" : "df06b0d6-fd6c-44d1-8008-efeaccd16cd5",
        "body" : "I agree. The change only affects the situation when the directory does not exist. I just want to make sure we are clear about semantics. \n",
        "createdAt" : "2016-03-30T22:58:43Z",
        "updatedAt" : "2016-03-30T22:58:43Z",
        "lastEditedBy" : "df06b0d6-fd6c-44d1-8008-efeaccd16cd5",
        "tags" : [
        ]
      },
      {
        "id" : "a5406452-d1b2-464b-8250-a696815ccb94",
        "parentId" : "ff830fce-ea04-4727-ba37-ce19ec884869",
        "authorId" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "body" : "@fgrzadkowski Personally I think this change is correct, and that the semantics are clear.  Prior to this patch it is ambiguous how the dir-doesn't-exist case is handled; this makes nsenter_mount.go consistent with mount.go and documents the semantics.\n",
        "createdAt" : "2016-04-05T16:07:44Z",
        "updatedAt" : "2016-04-05T16:07:44Z",
        "lastEditedBy" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "tags" : [
        ]
      }
    ],
    "commit" : "92f181174b849aa131a96b78fab6c7cdfc41e2c8",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +172,176 @@\n\t// Check the directory exists\n\tif _, err = os.Stat(file); os.IsNotExist(err) {\n\t\tglog.V(5).Infof(\"findmnt: directory %s does not exist\", file)\n\t\treturn true, err"
  },
  {
    "id" : "d2e06aa6-1b98-40ce-8ca3-5d498785e65c",
    "prId" : 21486,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "73ab3871-e0e8-4acd-a58f-e4256ac5248b",
        "parentId" : null,
        "authorId" : "8e448017-7838-493d-a424-33cada0da657",
        "body" : "I'm a little concerned about all `findmnt` errors being swallowed. Can we target this such that only the exact error returned by older versions when path is not mount point results in the error getting swallowed? That way all other errors continue to be blocking, instead of resulting in unpredictable mount/unmount behavior.\n",
        "createdAt" : "2016-02-18T23:50:23Z",
        "updatedAt" : "2016-02-19T13:09:59Z",
        "lastEditedBy" : "8e448017-7838-493d-a424-33cada0da657",
        "tags" : [
        ]
      },
      {
        "id" : "10ca9591-9029-47d7-b06a-442321e9468e",
        "parentId" : "73ab3871-e0e8-4acd-a58f-e4256ac5248b",
        "authorId" : "df06b0d6-fd6c-44d1-8008-efeaccd16cd5",
        "body" : "There's no such thing as \"exact error\". The only signal we get is that bash command exits with 1.\n\nbtw. this used to be like this earlier (see https://github.com/kubernetes/kubernetes/pull/13446). For reasons I don't remember I changed it to few months ago to treat errors as `os.ErrNotExists`, but apparently didn't test it properly at that time.\n\nWe can consider checking version of `findmnt` or `util-linux` package, but that might be an overkill (how to do it, anyway?)\n",
        "createdAt" : "2016-02-19T08:35:54Z",
        "updatedAt" : "2016-02-19T13:09:59Z",
        "lastEditedBy" : "df06b0d6-fd6c-44d1-8008-efeaccd16cd5",
        "tags" : [
        ]
      },
      {
        "id" : "d25b3f1d-24ae-423a-ac50-f1d61d6ec93d",
        "parentId" : "73ab3871-e0e8-4acd-a58f-e4256ac5248b",
        "authorId" : "8e448017-7838-493d-a424-33cada0da657",
        "body" : "Sounds good. Thanks\n",
        "createdAt" : "2016-02-19T21:17:19Z",
        "updatedAt" : "2016-02-19T21:17:19Z",
        "lastEditedBy" : "8e448017-7838-493d-a424-33cada0da657",
        "tags" : [
        ]
      }
    ],
    "commit" : "217d9f38e733c822b8a3f94533ea2a4bc139bce8",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +181,185 @@\t\t// On older versions (e.g. 2.20.1) we'd get error, on newer ones (e.g. 2.26.2) we'd get \"/\".\n\t\t// It's safer to assume that it's not a mount point.\n\t\treturn true, nil\n\t}\n\tstrOut := strings.TrimSuffix(string(out), \"\\n\")"
  },
  {
    "id" : "e5452ee3-e85c-417c-82e4-adfdc7380a5e",
    "prId" : 9976,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "97878caa-5954-4a58-beb9-efcc4a64d0b5",
        "parentId" : null,
        "authorId" : "a0c645c0-b588-49b3-acdb-b2ad182a663e",
        "body" : "Should we document the fact that the container image must contain mount, umount, and findmnt, or the rootfs you mount inside the container does?\n",
        "createdAt" : "2015-06-17T23:13:26Z",
        "updatedAt" : "2015-06-26T18:48:39Z",
        "lastEditedBy" : "a0c645c0-b588-49b3-acdb-b2ad182a663e",
        "tags" : [
        ]
      },
      {
        "id" : "f13663c9-19e7-478a-a0a6-15b49346ed9e",
        "parentId" : "97878caa-5954-4a58-beb9-efcc4a64d0b5",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "We should\n\n> On Jun 17, 2015, at 7:13 PM, Kelsey Hightower notifications@github.com wrote:\n> \n> In pkg/util/mount/nsenter_mount.go:\n> \n> >  // 4.  The Kubelet process must have CAP_SYS_ADMIN (required by nsenter); at\n> >  //     the present, this effectively means that the kubelet is running in a\n> >  //     privileged container.\n> > +// 5.  The volume path used by the Kubelet must be the same inside and outside\n> > +//     the container and be writable by the container (to initialize volume)\n> > +//     contents. TODO: remove this requirement.\n> > Should we document the fact that the container image must contain mount, umount, and findmnt, or the rootfs you mount inside the container does?\n> \n> —\n> Reply to this email directly or view it on GitHub.\n",
        "createdAt" : "2015-06-17T23:27:41Z",
        "updatedAt" : "2015-06-26T18:48:39Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "93b14b9ede5dd42b6c65989132205d1ba7a13127",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +48,52 @@// 5.  The volume path used by the Kubelet must be the same inside and outside\n//     the container and be writable by the container (to initialize volume)\n//     contents. TODO: remove this requirement.\n// 6.  The host image must have mount, findmnt, and umount binaries in /bin,\n//     /usr/sbin, or /usr/bin"
  },
  {
    "id" : "708864c0-d3ba-4513-bede-5e08e15c3775",
    "prId" : 9976,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2f80c2ec-c159-4d1c-9472-a9069a799942",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Can you add a comment with justification for expecting all of the binaries to be located in the same directory? (i.e., why not store three path variables, one for each?)\n",
        "createdAt" : "2015-06-18T22:21:31Z",
        "updatedAt" : "2015-06-26T18:48:39Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "305ca735-564b-4784-b2a5-9f0f9d59bf2b",
        "parentId" : "2f80c2ec-c159-4d1c-9472-a9069a799942",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Good point\n\n> On Jun 18, 2015, at 6:21 PM, Daniel Smith notifications@github.com wrote:\n> \n> In pkg/util/mount/nsenter_mount.go:\n> \n> >  //\n> >  // For more information about mount propagation modes, see:\n> >  //   https://www.kernel.org/doc/Documentation/filesystems/sharedsubtree.txt\n> > -type NsenterMounter struct{}\n> > +type NsenterMounter struct {\n> > -   // the path on the parent filesystem that contains mount, umount, and findmnt\n> > -   hostBinPath string\n> >   +}\n> >   +\n> >   +func NewNsenterMounter() *NsenterMounter {\n> > -   // search for the mount command in other locations besides /usr/bin\n> >   Can you add a comment with justification for expecting all of the binaries to be located in the same directory? (i.e., why not store three path variables, one for each?)\n> \n> —\n> Reply to this email directly or view it on GitHub.\n",
        "createdAt" : "2015-06-18T22:27:41Z",
        "updatedAt" : "2015-06-26T18:48:39Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "93b14b9ede5dd42b6c65989132205d1ba7a13127",
    "line" : null,
    "diffHunk" : "@@ -1,1 +67,71 @@\t\t},\n\t}\n\t// search for the mount command in other locations besides /usr/bin\n\tfor binary := range m.paths {\n\t\t// default to root"
  },
  {
    "id" : "360f17d6-ce5e-4fe4-b8a3-64c817008125",
    "prId" : 7703,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d8c063c6-9eee-4e6d-b05e-dbc1a9603cf2",
        "parentId" : null,
        "authorId" : "b7abca6a-d6be-4008-a014-3b5ca0e90529",
        "body" : "both of these implementations are identical, maybe a helper that takes the mount path?\n",
        "createdAt" : "2015-05-04T17:00:21Z",
        "updatedAt" : "2015-05-04T18:40:16Z",
        "lastEditedBy" : "b7abca6a-d6be-4008-a014-3b5ca0e90529",
        "tags" : [
        ]
      }
    ],
    "commit" : "e5521234e419f42d052d01c7ed03a2cae0dde514",
    "line" : 124,
    "diffHunk" : "@@ -1,1 +122,126 @@\n// List returns a list of all mounted filesystems in the host's mount namespace.\nfunc (*NsenterMounter) List() ([]MountPoint, error) {\n\treturn listProcMounts(hostProcMountsPath)\n}"
  }
]