[
  {
    "id" : "2c45f6d3-c5ca-4746-9c86-881395fe0096",
    "prId" : 68513,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/68513#pullrequestreview-251812391",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5074e6f7-53ad-4eb7-a70a-715b3e018c12",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "Fakes should go in a testing/ sub-pkg",
        "createdAt" : "2019-06-17T17:26:55Z",
        "updatedAt" : "2019-06-17T17:26:56Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "fd37b2de-dd20-42b2-afd5-028dafd8911f",
        "parentId" : "5074e6f7-53ad-4eb7-a70a-715b3e018c12",
        "authorId" : "56b792dc-dc04-4881-bdb0-21266a20a436",
        "body" : "I don't disagree. Since that part of the code wasn't modified as part of this PR, I'd be happy to try and restructure that in a follow-on PR, most likely after this package is moved out of k/k.",
        "createdAt" : "2019-06-19T16:12:19Z",
        "updatedAt" : "2019-06-19T16:12:19Z",
        "lastEditedBy" : "56b792dc-dc04-4881-bdb0-21266a20a436",
        "tags" : [
        ]
      }
    ],
    "commit" : "be7da5052f40d8bcb7b6195ddae93f33b1faea28",
    "line" : 1,
    "diffHunk" : "@@ -1,1 +27,31 @@\n// FakeMounter implements mount.Interface for tests.\ntype FakeMounter struct {\n\tMountPoints []MountPoint\n\tLog         []FakeAction"
  },
  {
    "id" : "5ba576b6-41e7-41c8-ae77-b7fc218cc599",
    "prId" : 64426,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/64426#pullrequestreview-125030558",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "39e4750c-a32e-4a67-9e47-5ed854c65f51",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "This type should be moved to a testing/ subdir so it doesn't get linked into non-test code.  Won't block this PR on it.",
        "createdAt" : "2018-05-31T20:03:43Z",
        "updatedAt" : "2018-06-02T07:55:31Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "8eadda85-9475-47e9-aed8-bd95a856107e",
        "parentId" : "39e4750c-a32e-4a67-9e47-5ed854c65f51",
        "authorId" : "e4e7c71f-23b5-4203-b65d-3f5f3c503b64",
        "body" : "OK. It'll change a lot of go imports and BUILD files, I'll create another PR for this. ",
        "createdAt" : "2018-06-01T02:10:02Z",
        "updatedAt" : "2018-06-02T07:55:31Z",
        "lastEditedBy" : "e4e7c71f-23b5-4203-b65d-3f5f3c503b64",
        "tags" : [
        ]
      }
    ],
    "commit" : "40c393732085af2e62e4e29138e079dde8b6eb03",
    "line" : 4,
    "diffHunk" : "@@ -1,1 +30,34 @@\tMountPoints []MountPoint\n\tLog         []FakeAction\n\tFilesystem  map[string]FileType\n\t// Some tests run things in parallel, make sure the mounter does not produce\n\t// any golang's DATA RACE warnings."
  },
  {
    "id" : "aa6f381d-b2d8-4ae5-911f-6e2eb335355b",
    "prId" : 19707,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a05c2818-d512-489d-bdd9-e62673503687",
        "parentId" : null,
        "authorId" : "727fc82d-d969-41a4-a614-7fefce94f9a6",
        "body" : "This if/else is clear to me, but I'm wondering about the Go (and Kube) preference to un-indent control flow.  Is something like this better or worse for idiomatic Go?\n\n```\nfor {\n    if mp.Path != target {\n        newMountpoints = append(newMountpoints, MountPoint{...})\n        continue \n    }\n    glog.V(5).Infof(\"logstatement\")\n}\n```\n\nI'm not saying to make this change.  This is an open question as to style and idiomatic Go that I'd like to understand better.\n\n@pmorie @smarterclayton any pointers on stylistic preference?\n",
        "createdAt" : "2016-01-22T13:14:39Z",
        "updatedAt" : "2016-02-02T13:44:43Z",
        "lastEditedBy" : "727fc82d-d969-41a4-a614-7fefce94f9a6",
        "tags" : [
        ]
      },
      {
        "id" : "86d63861-b72d-4839-8677-a034e166cfbf",
        "parentId" : "a05c2818-d512-489d-bdd9-e62673503687",
        "authorId" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "body" : "I have no personal preference on this matter of style and I'm sure both styles exist in the codebase.  \n",
        "createdAt" : "2016-01-22T15:45:22Z",
        "updatedAt" : "2016-02-02T13:44:43Z",
        "lastEditedBy" : "498aade9-b8f0-4e29-8055-89afa6f5fcc8",
        "tags" : [
        ]
      },
      {
        "id" : "9cd5e384-4c11-40f4-a591-4c420a7367a6",
        "parentId" : "a05c2818-d512-489d-bdd9-e62673503687",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "We prefer not to use elses when continues accomplish the same function.  We also prefer the \"meat\" of the loop to be at the end of the loop block and the checks before to invoke continue for exceptional cases:\n\n```\nfor {\n  ... find reasons to exit early\n  if exceptionalCase {\n    continue\n  }\n  ... whatever the point of the loop is\n  b = append(b, ...)\n}\n```\n",
        "createdAt" : "2016-01-22T18:14:01Z",
        "updatedAt" : "2016-02-02T13:44:43Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "b948a696-dae8-489b-999b-b0da089a9b52",
        "parentId" : "a05c2818-d512-489d-bdd9-e62673503687",
        "authorId" : "727fc82d-d969-41a4-a614-7fefce94f9a6",
        "body" : "Thanks @smarterclayton.  That was my understanding, as well.  I've been asked in different PRs to drop `else` from many `if` statements and the flow still made sense.\n",
        "createdAt" : "2016-01-22T18:35:31Z",
        "updatedAt" : "2016-02-02T13:44:43Z",
        "lastEditedBy" : "727fc82d-d969-41a4-a614-7fefce94f9a6",
        "tags" : [
        ]
      }
    ],
    "commit" : "220163f67de05890dd57b2ed6f2b02362f633a78",
    "line" : null,
    "diffHunk" : "@@ -1,1 +94,98 @@\tfor _, mp := range f.MountPoints {\n\t\tif mp.Path == target {\n\t\t\tglog.V(5).Infof(\"Fake mounter: unmouted %s from %s\", mp.Device, target)\n\t\t\t// Don't copy it to newMountpoints\n\t\t\tcontinue"
  },
  {
    "id" : "2a969942-9f54-4422-8179-69778ab9f630",
    "prId" : 5036,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "96c209e8-6f72-443b-bbdc-1aef5fb27486",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "How is one supposed to set the fake mount points if it is a private field?\n",
        "createdAt" : "2015-03-06T08:03:21Z",
        "updatedAt" : "2015-03-06T08:03:21Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "8ef04a842518b7759b65d43471be3c4535b7a45b",
    "line" : 21,
    "diffHunk" : "@@ -1,1 +19,23 @@// FakeMounter implements mount.Interface.\ntype FakeMounter struct {\n\tmountPoints []MountPoint\n}\n"
  }
]