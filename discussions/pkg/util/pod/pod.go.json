[
  {
    "id" : "10aaf4ed-a219-4f11-8b11-7028597a7bdd",
    "prId" : 88591,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/88591#pullrequestreview-366605218",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5cd06137-15c8-425b-96be-f2dcc704a31f",
        "parentId" : null,
        "authorId" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "body" : "minor: It seems patchBytes only appears in a log in the caller.\r\nIf the log is moved inside this func, patchBytes doesn't have to be returned.",
        "createdAt" : "2020-02-28T18:41:03Z",
        "updatedAt" : "2020-02-28T18:41:03Z",
        "lastEditedBy" : "42b1e004-4fa7-4e43-84cf-5378839b49ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "b2528654797e209f74dd9c9267e205098b4092c0",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +37,41 @@\t}\n\tif unchanged {\n\t\treturn nil, patchBytes, true, nil\n\t}\n"
  },
  {
    "id" : "841f4095-e33d-49cf-8c78-dec215e2500b",
    "prId" : 88591,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/88591#pullrequestreview-368071939",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "14678398-a076-495b-9fcc-bb18c645c954",
        "parentId" : null,
        "authorId" : "d7870cae-47b0-4c8e-8527-be8fc4be86de",
        "body" : "Out of curiosity, how do we know that the `patchBytes` will have the format encoded in the `Sprintf`? In other words is there a risk that the `bytes.Equal` would always start returning false because of an implementation change in a different method (perhaps `CreateTwoWayMergePatch`)?",
        "createdAt" : "2020-03-02T14:32:00Z",
        "updatedAt" : "2020-03-02T14:35:00Z",
        "lastEditedBy" : "d7870cae-47b0-4c8e-8527-be8fc4be86de",
        "tags" : [
        ]
      },
      {
        "id" : "1792f71c-a02b-477a-ab06-a85898691b19",
        "parentId" : "14678398-a076-495b-9fcc-bb18c645c954",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "There is a risk of that, we can make that a unit test.",
        "createdAt" : "2020-03-03T15:23:39Z",
        "updatedAt" : "2020-03-03T15:23:39Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "b2528654797e209f74dd9c9267e205098b4092c0",
    "line" : 60,
    "diffHunk" : "@@ -1,1 +67,71 @@\t\treturn nil, false, fmt.Errorf(\"failed to CreateTwoWayMergePatch for pod %q/%q: %v\", namespace, name, err)\n\t}\n\treturn patchBytes, bytes.Equal(patchBytes, []byte(fmt.Sprintf(`{\"metadata\":{\"uid\":%q}}`, uid))), nil\n}"
  },
  {
    "id" : "93b5a5b0-d717-42dc-8aab-8ff25c48df53",
    "prId" : 88591,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/88591#pullrequestreview-368071453",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "96eb95dc-ca66-4573-ac93-62ec5542718f",
        "parentId" : null,
        "authorId" : "d7870cae-47b0-4c8e-8527-be8fc4be86de",
        "body" : "For my own understanding, can you share more about the function of the `uid`? Is it marking a specific unique pod or a unique version of a pod's state? Or something else entirely?",
        "createdAt" : "2020-03-02T14:33:21Z",
        "updatedAt" : "2020-03-02T14:35:00Z",
        "lastEditedBy" : "d7870cae-47b0-4c8e-8527-be8fc4be86de",
        "tags" : [
        ]
      },
      {
        "id" : "da6da1c8-deb6-41c7-8c34-0bf169c24a3a",
        "parentId" : "96eb95dc-ca66-4573-ac93-62ec5542718f",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "UID is a precondition, every object in kube gets an immutable one on creation.  Then when you patch, if you've added UID to the patch, if the pod gets deleted and recreated with the same name (but different UID) it would conflict.  That prevents race conditions where a pod is deleted and recreated on a different node, but the first node is lagging and sends that patch and updates the new pod.",
        "createdAt" : "2020-03-03T15:23:06Z",
        "updatedAt" : "2020-03-03T15:23:07Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "b2528654797e209f74dd9c9267e205098b4092c0",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +31,35 @@\n// PatchPodStatus patches pod status. It returns true and avoids an update if the patch contains no changes.\nfunc PatchPodStatus(c clientset.Interface, namespace, name string, uid types.UID, oldPodStatus, newPodStatus v1.PodStatus) (*v1.Pod, []byte, bool, error) {\n\tpatchBytes, unchanged, err := preparePatchBytesForPodStatus(namespace, name, uid, oldPodStatus, newPodStatus)\n\tif err != nil {"
  },
  {
    "id" : "5d7d7590-742b-4510-885f-462799d159ad",
    "prId" : 62306,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/62306#pullrequestreview-122382652",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0e785a30-d878-479a-a5b8-6556ed97bfc2",
        "parentId" : null,
        "authorId" : "cdb05f24-d700-4d96-a683-3e4de7effbf5",
        "body" : "I suggest you to use `\"k8s.io/apimachinery/pkg/util/json\"`, even though it should not matter since you only do `Marshal` here.",
        "createdAt" : "2018-05-22T22:56:18Z",
        "updatedAt" : "2018-05-30T18:34:10Z",
        "lastEditedBy" : "cdb05f24-d700-4d96-a683-3e4de7effbf5",
        "tags" : [
        ]
      }
    ],
    "commit" : "85e0d05ac76b943acb208ea70c6b806649706ea5",
    "line" : 20,
    "diffHunk" : "@@ -1,1 +18,22 @@\nimport (\n\t\"encoding/json\"\n\t\"fmt\"\n"
  }
]