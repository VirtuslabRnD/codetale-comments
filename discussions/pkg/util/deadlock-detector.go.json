[
  {
    "id" : "038a987f-6f04-4dcc-8adb-544d8f6c9b98",
    "prId" : 16954,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7b85e8fe-10d7-435e-94cd-6ebdbed25714",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "I don't think you need to do this in a defer block?\n",
        "createdAt" : "2015-11-06T22:05:06Z",
        "updatedAt" : "2015-11-20T17:35:50Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "50154872-522a-4f08-a09b-35031f56d22d",
        "parentId" : "7b85e8fe-10d7-435e-94cd-6ebdbed25714",
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "the defer is there to catch the panic, in case glog.Exitf(...) panics.\n",
        "createdAt" : "2015-11-06T22:19:22Z",
        "updatedAt" : "2015-11-20T17:35:50Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "1dcd2502741b72bf7bed85d88a9b1970ae7f2360",
    "line" : 65,
    "diffHunk" : "@@ -1,1 +77,81 @@func (realExiter) Exitf(format string, args ...interface{}) {\n\tfunc() {\n\t\tdefer func() {\n\t\t\t// Let's just be extra sure we die, even if Exitf panics\n\t\t\tif r := recover(); r != nil {"
  },
  {
    "id" : "1cc23a66-5c02-4d73-a55e-a1947efbeaaf",
    "prId" : 16954,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dd0ee7a0-a7c5-41c3-a4bc-f2caecdc3f22",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Is this better than Fatalf?\n",
        "createdAt" : "2015-11-06T22:05:18Z",
        "updatedAt" : "2015-11-20T17:35:50Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "c5736af0-23c5-435f-8432-d1b58dbda8f4",
        "parentId" : "dd0ee7a0-a7c5-41c3-a4bc-f2caecdc3f22",
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "golang readability has started suggesting this on code reviews :P\n",
        "createdAt" : "2015-11-06T22:17:37Z",
        "updatedAt" : "2015-11-20T17:35:50Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      }
    ],
    "commit" : "1dcd2502741b72bf7bed85d88a9b1970ae7f2360",
    "line" : null,
    "diffHunk" : "@@ -1,1 +84,88 @@\t\t\t}\n\t\t}()\n\t\tglog.Exitf(format, args...)\n\t}()\n}"
  },
  {
    "id" : "d4e4d7f8-04a5-4a13-8c71-91cc31740c41",
    "prId" : 16954,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3594ffec-ac6c-42b4-9b85-4fb3cb8c3135",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Wait, I guess this is the one that doesn't match the interface. But the interface is wrong.\n",
        "createdAt" : "2015-11-06T22:10:54Z",
        "updatedAt" : "2015-11-20T17:35:50Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "1dcd2502741b72bf7bed85d88a9b1970ae7f2360",
    "line" : null,
    "diffHunk" : "@@ -1,1 +75,79 @@type realExiter struct{}\n\nfunc (realExiter) Exitf(format string, args ...interface{}) {\n\tfunc() {\n\t\tdefer func() {"
  },
  {
    "id" : "685fbce1-f2d8-44c0-997b-3fc33edf9ef4",
    "prId" : 16924,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "749105d8-a923-4c30-9675-6009753edef0",
        "parentId" : null,
        "authorId" : "24302707-9254-48df-89a5-cbcc349462b8",
        "body" : "Why didn't you use already existing Locker interface?\n\nhttps://golang.org/pkg/sync/#Locker\n",
        "createdAt" : "2015-11-06T21:33:42Z",
        "updatedAt" : "2015-11-06T21:33:42Z",
        "lastEditedBy" : "24302707-9254-48df-89a5-cbcc349462b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "c511db911361ea28fe80a7d96a1064b1ab17209b",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +25,29 @@)\n\ntype Lockable interface {\n\tLock()\n\tUnlock()"
  }
]