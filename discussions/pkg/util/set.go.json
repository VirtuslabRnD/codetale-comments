[
  {
    "id" : "3598a8ff-4e95-4636-be58-965cf4a97478",
    "prId" : 10561,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8ff5e196-ace1-48ca-9d9f-9e7d1c89daef",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "Godoc why this is public.\n\nA test verifying that it's public is nice but optional.\n",
        "createdAt" : "2015-07-01T17:31:34Z",
        "updatedAt" : "2015-07-01T20:12:16Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      }
    ],
    "commit" : "8d189245fb13d0e3c0554798b742713798707a33",
    "line" : null,
    "diffHunk" : "@@ -1,1 +24,28 @@// Empty is public since it is used by some internal API objects for conversions between external\n// string arrays and internal sets, and conversion logic requires public types today.\ntype Empty struct{}\n\n// StringSet is a set of strings, implemented via map[string]struct{} for minimal memory consumption."
  },
  {
    "id" : "75486966-0f4d-48e8-ae94-4dd4a9569d72",
    "prId" : 8366,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "abb4e70f-6f1b-4c18-a4fb-de89a70c4f6f",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "test?\n",
        "createdAt" : "2015-06-17T04:39:30Z",
        "updatedAt" : "2015-08-17T12:59:28Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      }
    ],
    "commit" : "907090a777b7191ccce699f4956782490ef7f1cb",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +135,139 @@// Two sets are equal if their membership is identical.\n// (In practice, this means same elements, order doesn't matter)\nfunc (s1 StringSet) Equal(s2 StringSet) bool {\n\tif len(s1) != len(s2) {\n\t\treturn false"
  },
  {
    "id" : "5a6fec38-8d37-4b73-8c8e-59947a9884df",
    "prId" : 4422,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "63288edb-b072-4b40-8ca0-84cbb8b75096",
        "parentId" : null,
        "authorId" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "body" : "For non mathematicians (me) who had to think hard about this, can you make the comment a bit more explicit?  Maybe a small example?\n",
        "createdAt" : "2015-02-13T18:37:44Z",
        "updatedAt" : "2015-02-13T20:40:04Z",
        "lastEditedBy" : "f87fe7d3-581c-4cb6-b17e-b807c6f2c789",
        "tags" : [
        ]
      },
      {
        "id" : "e6970ba5-08a5-47fe-aed6-f9e9a72e6e3d",
        "parentId" : "63288edb-b072-4b40-8ca0-84cbb8b75096",
        "authorId" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "body" : "sure\n",
        "createdAt" : "2015-02-13T20:32:35Z",
        "updatedAt" : "2015-02-13T20:40:04Z",
        "lastEditedBy" : "6eca0ade-9879-4dd7-ad14-547e16f5c041",
        "tags" : [
        ]
      }
    ],
    "commit" : "e7a0340ad79ce22a05d866ffee8514377e7ffae6",
    "line" : null,
    "diffHunk" : "@@ -1,1 +69,73 @@// s1.Difference(s2) = {3}\n// s2.Difference(s1) = {4, 5}\nfunc (s StringSet) Difference(s2 StringSet) StringSet {\n\tresult := NewStringSet()\n\tfor key := range s {"
  },
  {
    "id" : "cddb9db4-db87-4fab-bb43-9812099cad68",
    "prId" : 4296,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "5e6c1b1c-a2e1-459b-9332-44dfde25bec0",
        "parentId" : null,
        "authorId" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "body" : "@liggitt  Comments here?  I know you've faced the problem before.\n",
        "createdAt" : "2015-02-11T14:54:03Z",
        "updatedAt" : "2015-02-13T18:15:50Z",
        "lastEditedBy" : "fa477146-9a47-4754-b38c-de8062e65e13",
        "tags" : [
        ]
      },
      {
        "id" : "c7f60989-a959-440e-881f-a3396f472678",
        "parentId" : "5e6c1b1c-a2e1-459b-9332-44dfde25bec0",
        "authorId" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "body" : "I'd never tried to do it on a generic map type... can't really think of anything better, but ick...\n",
        "createdAt" : "2015-02-11T16:10:03Z",
        "updatedAt" : "2015-02-13T18:15:50Z",
        "lastEditedBy" : "8be927c4-cfb4-4077-b355-f4f3d84849b8",
        "tags" : [
        ]
      }
    ],
    "commit" : "941461044b28da1ab2325a5e3e25a84e8178ba77",
    "line" : 14,
    "diffHunk" : "@@ -1,1 +36,40 @@// KeySet creates a StringSet from a keys of a map[string](? extends interface{}).  Since you can't describe that map type in the Go type system\n// the reflected value is required.\nfunc KeySet(theMap reflect.Value) StringSet {\n\tret := StringSet{}\n"
  }
]