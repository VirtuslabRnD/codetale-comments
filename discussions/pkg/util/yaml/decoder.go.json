[
  {
    "id" : "f781a02f-e8c0-4f6c-bc03-5d4d4ec18561",
    "prId" : 34297,
    "prUrl" : "https://github.com/kubernetes/kubernetes/pull/34297#pullrequestreview-3442968",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "51dad7c4-c527-4dda-b505-5c3bb75338f1",
        "parentId" : null,
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "nit: this should be HasPrefix since this is moderately performance sensitive.  Can you do a small follow up (or open an issue)?\n",
        "createdAt" : "2016-10-10T03:04:10Z",
        "updatedAt" : "2016-10-10T03:04:14Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "484b2ef4-cecc-4f5a-b0fc-4a25cad38573",
        "parentId" : "51dad7c4-c527-4dda-b505-5c3bb75338f1",
        "authorId" : "9eb1241d-3dca-4a34-a85d-a880ba615f8c",
        "body" : "sure, thanks @smarterclayton \n",
        "createdAt" : "2016-10-10T04:01:15Z",
        "updatedAt" : "2016-10-10T04:01:15Z",
        "lastEditedBy" : "9eb1241d-3dca-4a34-a85d-a880ba615f8c",
        "tags" : [
        ]
      }
    ],
    "commit" : "919bb01b04324bd78af12609f281e255252cccfc",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +248,252 @@\n\t\tsep := len([]byte(separator))\n\t\tif i := bytes.Index(line, []byte(separator)); i == 0 {\n\t\t\t// We have a potential document terminator\n\t\t\ti += sep"
  },
  {
    "id" : "7214d7ce-bafc-4145-9a3f-0301024b644d",
    "prId" : 25038,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "97a9c94a-3f04-4595-a435-aa338ad43ffd",
        "parentId" : null,
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "Can I get this error while editing a yaml file for example? If so, drop the json prefix.\n",
        "createdAt" : "2016-05-02T14:54:45Z",
        "updatedAt" : "2016-05-06T11:10:54Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      },
      {
        "id" : "9d80c900-756e-4156-8794-e63604871e53",
        "parentId" : "97a9c94a-3f04-4595-a435-aa338ad43ffd",
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "Is this decoder used by edit?\n",
        "createdAt" : "2016-05-02T14:59:11Z",
        "updatedAt" : "2016-05-06T11:10:54Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      },
      {
        "id" : "45e45e90-9b13-4da2-9303-8760418f07f7",
        "parentId" : "97a9c94a-3f04-4595-a435-aa338ad43ffd",
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "> If so, drop the json prefix.\n\nBetter yet, make it say yaml or json appropriately.\n",
        "createdAt" : "2016-05-02T20:26:03Z",
        "updatedAt" : "2016-05-06T11:10:54Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "81eabff3-06e1-459a-900d-4ced9269e335",
        "parentId" : "97a9c94a-3f04-4595-a435-aa338ad43ffd",
        "authorId" : "ec801d33-3a38-47a2-a267-f72db1de574b",
        "body" : "@lavalamp @kargakis I added 2 unit tests for broken YAML and broken JSON. The `NewYAMLOrJSONDecoder` seems to do good job about deciding what parser will be used and what prefix the error line will get. I think the only difference is that the YAML parser reports errors natively where the JSON not. The error above matches the YAML parser for consistency.\n\n@kargakis I think it is, but the error should be reporting appropriately for given format.\n",
        "createdAt" : "2016-05-03T09:05:54Z",
        "updatedAt" : "2016-05-06T11:10:54Z",
        "lastEditedBy" : "ec801d33-3a38-47a2-a267-f72db1de574b",
        "tags" : [
        ]
      },
      {
        "id" : "c38c4dbe-a861-40e0-b72f-7d2d9f1c07d1",
        "parentId" : "97a9c94a-3f04-4595-a435-aa338ad43ffd",
        "authorId" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "body" : "Oh, I see. I missed the part where you typecast to a json decoder.\n",
        "createdAt" : "2016-05-09T14:34:45Z",
        "updatedAt" : "2016-05-09T14:34:46Z",
        "lastEditedBy" : "11efe503-096f-46dd-a8c8-28ba38a0157a",
        "tags" : [
        ]
      }
    ],
    "commit" : "543a8b2d066990e73251741ef047086989e7652b",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +217,221 @@\t\t\tstart := strings.LastIndex(js[:syntax.Offset], \"\\n\") + 1\n\t\t\tline := strings.Count(js[:start], \"\\n\")\n\t\t\treturn fmt.Errorf(\"json: line %d: %s\", line, syntax.Error())\n\t\t}\n\t}"
  },
  {
    "id" : "ba462510-1c79-46d2-b908-3e9dd9f42b92",
    "prId" : 25038,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "a5549677-4ae9-40c5-a7cb-bdcce68efffb",
        "parentId" : null,
        "authorId" : "b86e7e78-bb07-417f-8470-39407559c779",
        "body" : "How does this work for yaml files? Can you add tests demonstrating that it works and reports the right lines for both json and yaml input?\n",
        "createdAt" : "2016-05-02T20:26:42Z",
        "updatedAt" : "2016-05-06T11:10:54Z",
        "lastEditedBy" : "b86e7e78-bb07-417f-8470-39407559c779",
        "tags" : [
        ]
      },
      {
        "id" : "7d947b4b-a350-47c0-82f9-c695b91d3f93",
        "parentId" : "a5549677-4ae9-40c5-a7cb-bdcce68efffb",
        "authorId" : "ec801d33-3a38-47a2-a267-f72db1de574b",
        "body" : "@lavalamp yes, working on them\n",
        "createdAt" : "2016-05-03T08:40:14Z",
        "updatedAt" : "2016-05-06T11:10:54Z",
        "lastEditedBy" : "ec801d33-3a38-47a2-a267-f72db1de574b",
        "tags" : [
        ]
      }
    ],
    "commit" : "543a8b2d066990e73251741ef047086989e7652b",
    "line" : 17,
    "diffHunk" : "@@ -1,1 +208,212 @@\t}\n\terr := d.decoder.Decode(into)\n\tif jsonDecoder, ok := d.decoder.(*json.Decoder); ok {\n\t\tif syntax, ok := err.(*json.SyntaxError); ok {\n\t\t\tdata, readErr := ioutil.ReadAll(jsonDecoder.Buffered())"
  },
  {
    "id" : "73522eb5-c142-4da2-aba8-f32a4a091270",
    "prId" : 23265,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "da91d17e-527e-429a-9084-0efe0e99ebb1",
        "parentId" : null,
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Hrm - this implementation requires us to load the whole object into memory, rather than being line driven as before.  I'd prefer if we didn't require that - we could have very large config objects on disk that this would then cause issues on.\n",
        "createdAt" : "2016-08-15T17:00:05Z",
        "updatedAt" : "2016-08-15T17:00:05Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      },
      {
        "id" : "9e544438-4a5f-49c5-927f-f3c79b9fa4f5",
        "parentId" : "da91d17e-527e-429a-9084-0efe0e99ebb1",
        "authorId" : "9eb1241d-3dca-4a34-a85d-a880ba615f8c",
        "body" : "@smarterclayton I am sorry I don't get the point. I think in the old scanner based approach, we still need to read a full yaml document into buffer before we decode it.\n",
        "createdAt" : "2016-08-16T02:45:18Z",
        "updatedAt" : "2016-08-16T02:45:18Z",
        "lastEditedBy" : "9eb1241d-3dca-4a34-a85d-a880ba615f8c",
        "tags" : [
        ]
      },
      {
        "id" : "3d66094a-d816-46f7-ba1f-daa27ee9eac1",
        "parentId" : "da91d17e-527e-429a-9084-0efe0e99ebb1",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "That's right, because we don't have a scanning parser.  Ok, withdrawn.\n",
        "createdAt" : "2016-08-16T04:47:45Z",
        "updatedAt" : "2016-08-16T04:47:45Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "2d064083001a7a7f7dfc8a5f8f2fc50582449bf6",
    "line" : 75,
    "diffHunk" : "@@ -1,1 +240,244 @@// Read returns a full YAML document.\nfunc (r *YAMLReader) Read() ([]byte, error) {\n\tvar buffer bytes.Buffer\n\tfor {\n\t\tline, err := r.reader.Read()"
  },
  {
    "id" : "17fb43f5-3472-4372-8893-8d0e279b08df",
    "prId" : 3451,
    "prUrl" : null,
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "33f328d0-7210-4133-b04b-e132d2d705ca",
        "parentId" : null,
        "authorId" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "body" : "verbose glog your decision here?  For debugging purposes, in case you guess wrong?\n",
        "createdAt" : "2015-01-14T05:20:44Z",
        "updatedAt" : "2015-01-14T05:50:19Z",
        "lastEditedBy" : "d0e97b49-eba2-4b22-8695-df4f8a6776ad",
        "tags" : [
        ]
      },
      {
        "id" : "3b77868b-13a1-4970-b9b7-aa9061b6e5d6",
        "parentId" : "33f328d0-7210-4133-b04b-e132d2d705ca",
        "authorId" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "body" : "Yeah, V(4)?\n",
        "createdAt" : "2015-01-14T05:47:59Z",
        "updatedAt" : "2015-01-14T05:50:19Z",
        "lastEditedBy" : "6e2b5eda-1533-4798-a56c-432faaf38480",
        "tags" : [
        ]
      }
    ],
    "commit" : "ec803cb809981c117f9652c5d2cfb6a6793e49d5",
    "line" : null,
    "diffHunk" : "@@ -1,1 +129,133 @@\t\tif isJSON {\n\t\t\tglog.V(4).Infof(\"decoding stream as JSON\")\n\t\t\td.decoder = json.NewDecoder(buffer)\n\t\t} else {\n\t\t\tglog.V(4).Infof(\"decoding stream as YAML\")"
  }
]